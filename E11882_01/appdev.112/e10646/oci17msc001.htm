<!DOCTYPE html>
<html lang="en" >
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1">
<meta charset="utf-8">
<title>Statement Functions</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Merged Version 1023" />
<meta name="dcterms.created" content="2014-07-18T15:18:26Z" />
<meta name="robots" content="all" />
<meta name="dcterms.title" content="Call Interface Programmer's Guide" />
<meta name="dcterms.identifier" content="E10646-15" />
<meta name="dcterms.isVersionOf" content="LNOCI" />
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;1996, 2014,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved." />
<link rel="Start" href="../../index.htm" title="Home" type="text/html" />
<link rel="Copyright" href="../../dcommon/html/cpyr.htm" title="Copyright" type="text/html" />

<script type="application/javascript"  src="../../dcommon/js/headfoot.js"></script>
<script type="application/javascript"  src="../../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html" />
<link rel="Index" href="index.htm" title="Index" type="text/html" />
<link rel="Prev" href="oci17msc.htm" title="Previous" type="text/html" />
<link rel="Next" href="oci17msc002.htm" title="Next" type="text/html" />
<link rel="alternate" href="../e10646.pdf" title="PDF version" type="application/pdf" />
<link rel="schema.dcterms" href="http://purl.org/dc/terms/" />
<link rel="stylesheet" href="../../dcommon/css/fusiondoc.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/header.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/footer.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/fonts.css">
<link rel="stylesheet" href="../../dcommon/css/foundation.css">
<link rel="stylesheet" href="../../dcommon/css/codemirror.css">
<link rel="stylesheet" type="text/css" title="Default" href="../../nav/css/html5.css">
<link rel="stylesheet" href="../../dcommon/css/respond-480-tablet.css">
<link rel="stylesheet" href="../../dcommon/css/respond-768-laptop.css">
<link rel="stylesheet" href="../../dcommon/css/respond-1140-deskop.css">
<script type="application/javascript" src="../../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">28/79</span> <!-- End Header --><a id="i575537"></a>
<div id="LNOCI161" class="refsect1">
<h1 class="refsect1">Statement Functions</h1>
<p><a href="#CIHEFHCE">Table 17-1</a> lists the statement functions that are described in this section. Use functions that end in "2" for all new applications.</p>
<div id="LNOCI17162" class="tblformalwide">
<p class="titleintable"><a id="sthref2662"></a><a id="CIHEFHCE"></a>Table 17-1 Statement Functions &nbsp;</p>
<table class="cellalignment1011" title="Statement Functions &nbsp;" summary="This table is described in the preceding text" dir="ltr">
<thead>
<tr class="cellalignment1005">
<th class="cellalignment1012" id="r1c1-t4">Function</th>
<th class="cellalignment1012" id="r1c2-t4">Purpose</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r2c1-t4" headers="r1c1-t4">
<p><a href="#i574897">"OCIStmtExecute()"</a></p>
</td>
<td class="cellalignment1013" headers="r2c1-t4 r1c2-t4">
<p>Send statements to server for execution</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r3c1-t4" headers="r1c1-t4">
<p><a href="#i575019">"OCIStmtFetch2()"</a></p>
</td>
<td class="cellalignment1013" headers="r3c1-t4 r1c2-t4">
<p>Fetch rows from a query and fetches a row from the (scrollable) result set.</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r4c1-t4" headers="r1c1-t4">
<p><a href="#i575083">"OCIStmtGetPieceInfo()"</a></p>
</td>
<td class="cellalignment1013" headers="r4c1-t4 r1c2-t4">
<p>Get piece information for piecewise operations</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r5c1-t4" headers="r1c1-t4">
<p><a href="#i575144">"OCIStmtPrepare()"</a></p>
</td>
<td class="cellalignment1013" headers="r5c1-t4 r1c2-t4">
<p>Prepare a SQL or PL/SQL statement for execution</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r6c1-t4" headers="r1c1-t4">
<p><a href="#i575217">"OCIStmtPrepare2()"</a></p>
</td>
<td class="cellalignment1013" headers="r6c1-t4 r1c2-t4">
<p>Prepare a SQL or PL/SQL statement for execution. The user also has the option of using the statement cache, if it has been enabled.</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r7c1-t4" headers="r1c1-t4">
<p><a href="#i575264">"OCIStmtRelease()"</a></p>
</td>
<td class="cellalignment1013" headers="r7c1-t4 r1c2-t4">
<p>Release the statement handle</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r8c1-t4" headers="r1c1-t4">
<p><a href="#i575292">"OCIStmtSetPieceInfo()"</a></p>
</td>
<td class="cellalignment1013" headers="r8c1-t4 r1c2-t4">
<p>Set piece information for piecewise operations</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformalwide" -->
<div id="LNOCI17163" class="refsect2"><a id="i574897"></a>
<h2 class="refsect2">OCIStmtExecute()<a id="sthref2663"></a></h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2664"></a>Purpose</p>
<p>Associates an application request with a server.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2665"></a>Syntax</p>
<pre>
sword OCIStmtExecute ( OCISvcCtx           *svchp,
                       OCIStmt             *stmtp,
                       OCIError            *errhp,
                       ub4                 iters,
                       ub4                 rowoff,
                       const OCISnapshot   *snap_in,
                       OCISnapshot         *snap_out,
                       ub4                 mode );
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2666"></a>Parameters</p>
<dl>
<dt><span class="bold">svchp</span> (IN/OUT)</dt>
<dd>
<p>Service context handle.</p>
</dd>
<dt><span class="bold">stmtp</span> (IN/OUT)</dt>
<dd>
<p>A statement handle. It defines the statement and the associated data to be executed at the server. It is invalid to pass in a statement handle that has bind of data types only supported in release 8.x or later when <code>svchp</code> points to an Oracle7 server.</p>
</dd>
<dt><span class="bold">errhp</span> (IN/OUT)</dt>
<dd>
<p>An error handle that you can pass to <a href="oci17msc007.htm#i540516">OCIErrorGet()</a> for diagnostic information when there is an error.</p>
</dd>
<dt><span class="bold">iters</span> (IN)</dt>
<dd>
<p>For non-<code>SELECT</code> statements, the number of times this statement is executed equals <code>iters</code> - <code>rowoff</code>.</p>
<p>For <code>SELECT</code> statements, if <code>iters</code> is nonzero, then defines must have been done for the statement handle. The execution fetches <code>iters</code> rows into these predefined buffers and prefetches more rows depending upon the prefetch row count. If you do not know how many rows the <code>SELECT</code> statement retrieves, set <code>iters</code> to zero.</p>
<p>This function returns an error if <code>iters</code>=0 for non-<code>SELECT</code> statements.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
For array DML operations, set <code>iters</code> &lt;= 32767 to get better performance.</div>
</dd>
<dt><span class="bold">rowoff</span> (IN)</dt>
<dd>
<p>The starting index from which the data in an array bind is relevant for this multiple row execution.</p>
</dd>
<dt><span class="bold">snap_in</span> (IN)</dt>
<dd>
<p>This parameter is optional. If it is supplied, it must point to a snapshot descriptor of type <code>OCI_DTYPE_SNAP</code>. The contents of this descriptor must be obtained from the <code>snap_out</code> parameter of a previous call. The descriptor is ignored if the SQL is not a <code>SELECT</code> statement. This facility allows multiple service contexts to Oracle Database to see the same consistent snapshot of the database's <span class="italic">committed</span> data. However, uncommitted data in one context is <span class="italic">not</span> visible to another context even using the same snapshot.</p>
</dd>
<dt><span class="bold">snap_out</span> (OUT)</dt>
<dd>
<p>This parameter is optional. If it is supplied, it must point to a descriptor of type <code>OCI_DTYPE_SNAP</code>. This descriptor is filled in with an opaque representation that is the current Oracle Database system change number (SCN) suitable as a <code>snap_in</code> input to a subsequent call to <code>OCIStmtExecute()</code>. To avoid "snapshot too old" errors, do not use this descriptor any longer than necessary.</p>
</dd>
<dt><span class="bold">mode</span> (IN)</dt>
<dd>
<p>The modes are:</p>
</dd>
</dl>
<ul>
<li>
<p><code><a id="sthref2667"></a>OCI_BATCH_ERRORS</code> - See <a href="oci04sql.htm#i444385">"Batch Error Mode"</a> for information about this mode.</p>
</li>
<li>
<p><code><a id="sthref2668"></a>OCI_COMMIT_ON_SUCCESS</code> - When a statement is executed in this mode, the current transaction is committed after execution, if execution completes successfully.</p>
</li>
<li>
<p><code><a id="sthref2669"></a>OCI_DEFAULT</code> - Calling <code>OCIStmtExecute()</code> in this mode executes the statement. It also implicitly returns describe information about the select list.</p>
</li>
<li>
<p><a id="sthref2670"></a><code>OCI_DESCRIBE_ONLY</code> - This mode is for users who want to describe a query before execution. Calling <code>OCIStmtExecute()</code> in this mode does not execute the statement, but it does return the select-list description. To maximize performance, Oracle recommends that applications execute the statement in default mode and use the implicit describe that accompanies the execution.</p>
</li>
<li>
<p><code><a id="sthref2671"></a>OCI_EXACT_FETCH</code> - Used when the application knows in advance exactly how many rows it is fetching. This mode turns prefetching off for Oracle Database release 8 or later mode, and requires that defines be done before the execute call. Using this <code>mode</code> cancels the cursor after the desired rows are fetched and may result in reduced server-side resource usage.</p>
</li>
<li>
<p><code><a id="sthref2672"></a>OCI_PARSE_ONLY</code> - This mode allows the user to parse the query before execution. Executing in this mode parses the query and returns parse errors in the SQL, if any. Users must note that this involves an additional round-trip to the server. To maximize performance, Oracle recommends that the user execute the statement in the default mode, which, parses the statement as part of the bundled operation.</p>
</li>
<li>
<p><code><a id="sthref2673"></a>OCI_STMT_SCROLLABLE_READONLY</code> - Required for the result set to be scrollable. The result set cannot be updated. See <a href="oci04sql.htm#i433473">"Fetching Results"</a>. This mode cannot be used with any other mode.</p>
</li>
</ul>
<p>The modes are not mutually exclusive; you can use them together, except for <code>OCI_STMT_SCROLLABLE_READONLY</code>.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2674"></a>Comments</p>
<p>This function is used to execute a prepared SQL statement. Using an execute call, the application associates a request with a server.</p>
<p>If a <code>SELECT</code> statement is executed, the description of the select list is available implicitly as a response. This description is buffered on the client side for describes, fetches, and define type conversions. Hence it is optimal to describe a select list only after an execute.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="oci04sql.htm#i441217">"Describing Select-List Items"</a></div>
</div>
<!-- class="refsubsect" -->
<p>Also for <code>SELECT</code> statements, some results are available implicitly. Rows are received and buffered at the end of the execute. For queries with small row count, a prefetch causes memory to be released in the server if the end of fetch is reached, an optimization that may result in memory usage reduction. The set attribute call has been defined to set the number of rows to be prefetched for each result set.</p>
<p>For <code>SELECT</code> statements, at the end of the execute, the statement handle implicitly maintains a reference to the service context on which it is executed. It is the user's responsibility to maintain the integrity of the service context. The implicit reference is maintained until the statement handle is freed or the fetch is canceled or an end of fetch condition is reached.</p>
<p>To reexecute a DDL statement, you must prepare the statement again using <a href="#i575144">OCIStmtPrepare()</a> or <a href="#i575217">OCIStmtPrepare2()</a>.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
If output variables are defined for a <code>SELECT</code> statement before a call to <code>OCIStmtExecute()</code>, the number of rows specified by <code>iters</code> are fetched directly into the defined output buffers and additional rows equivalent to the prefetch count are prefetched. If there are no additional rows, then the fetch is complete without calling <a href="#i575019">OCIStmtFetch2()</a> or deprecated <a href="ociaedep002.htm#i574982">OCIStmtFetch()</a>.</div>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="oci02bas.htm#BCFDHCIG">"Polling Mode Operations in OCI"</a></div>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2675"></a>Related Functions</p>
<p><a href="#i575144">OCIStmtPrepare()</a></p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="LNOCI17165" class="refsect2"><a id="i575019"></a>
<h2 class="refsect2"><a id="sthref2676"></a>OCIStmtFetch2()</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2677"></a>Purpose</p>
<p>Fetches a row from the (scrollable) result set. You are encouraged to use this fetch call instead of the deprecated call <a href="ociaedep002.htm#i574982">OCIStmtFetch()</a>.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2678"></a>Syntax</p>
<pre>
sword OCIStmtFetch2 ( OCIStmt     *stmthp,
                      OCIError    *errhp, 
                      ub4         nrows,
                      ub2         orientation,
                      sb4         fetchOffset,
                      ub4         mode );
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2679"></a>Parameters</p>
<dl>
<dt>stmthp (IN/OUT)</dt>
<dd>
<p>This is the statement handle of the (scrollable) result set.</p>
</dd>
<dt>errhp (IN/OUT)</dt>
<dd>
<p>An error handle that you can pass to <a href="oci17msc007.htm#i540516">OCIErrorGet()</a> for diagnostic information if an error occurs.</p>
</dd>
<dt>nrows (IN)</dt>
<dd>
<p>Number of rows to be fetched from the current position.</p>
</dd>
<dt>orientation (IN)</dt>
<dd>
<p>The acceptable values are:</p>
</dd>
</dl>
<ul>
<li>
<p><code>OCI_DEFAULT</code> - Has the same effect as <code>OCI_FETCH_NEXT</code></p>
</li>
<li>
<p><code>OCI_FETCH_CURRENT</code> - Gets the current row.</p>
</li>
<li>
<p><code>OCI_FETCH_NEXT</code> - Gets the next row from the current position. It is the default (has the same effect as <code>OCI_DEFAULT</code>). Use for a nonscrollable statement handle.</p>
</li>
<li>
<p><code>OCI_FETCH_FIRST</code> - Gets the first row in the result set.</p>
</li>
<li>
<p><code>OCI_FETCH_LAST</code> - Gets the last row in the result set.</p>
</li>
<li>
<p><code>OCI_FETCH_PRIOR</code> - Positions the result set on the previous row from the current row in the result set. You can fetch multiple rows using this mode, from the "previous row" also.</p>
</li>
<li>
<p><code>OCI_FETCH_ABSOLUTE</code> - Fetches the row number (specified by <code>fetchOffset</code> parameter) in the result set using absolute positioning.</p>
</li>
<li>
<p><code>OCI_FETCH_RELATIVE</code> - Fetches the row number (specified by <code>fetchOffset</code> parameter) in the result set using relative positioning.</p>
</li>
</ul>
<dl>
<dt>fetchOffset (IN)</dt>
<dd>
<p>The offset to be used with the orientation parameter for changing the current row position.</p>
</dd>
<dt>mode (IN)</dt>
<dd>
<p>Pass in <code>OCI_DEFAULT</code>.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2680"></a>Comments</p>
<p>The fetch call works similarly to the deprecated <a href="ociaedep002.htm#i574982">OCIStmtFetch()</a> call, but with the addition of the <code>fetchOffset</code> parameter. It can be used on any statement handle, whether it is scrollable or not. For a <span class="italic">nonscrollable statement handle</span>, the only acceptable value of <code>orientation</code> is <code>OCI_FETCH_NEXT</code>, and the <code>fetchOffset</code> parameter is ignored.</p>
<p>For new applications you are encouraged to use this call, <code>OCIStmtFetch2()</code>.</p>
<p>A <code>fetchOffset</code> with <code>orientation</code> set to <code>OCI_FETCH_RELATIVE</code> is equivalent to all of the following:</p>
<ul>
<li>
<p><code>OCI_FETCH_CURRENT</code> with a value of <code>fetchOffset</code> equal to 0</p>
</li>
<li>
<p><code>OCI_FETCH_NEXT</code> with a value of <code>fetchOffset</code> equal to 1</p>
</li>
<li>
<p><code>OCI_FETCH_PRIOR</code> with a value of <code>fetchOffset</code> equal to -1</p>
</li>
</ul>
<p><code>OCI_ATTR_ROW_COUNT</code> contains the highest absolute row value that was fetched.</p>
<p>All other orientation modes besides <code>OCI_FETCH_ABSOLUTE</code> and <code>OCI_FETCH_RELATIVE</code> ignore the <code>fetchOffset</code> value.</p>
<p>This call can also be used to determine the number of rows in the result set by using <code>OCI_FETCH_LAST</code> and then calling <code>OCIAttrGet()</code> on <code>OCI_ATTR_CURRENT_POSITION</code>. But the response time of this call can be high. If <code>nrows</code> is set to be greater than 1 with <code>OCI_FETCH_LAST</code> orientation, nrows is considered to be 1.</p>
<p>The return codes are the same as for deprecated <a href="ociaedep002.htm#i574982">OCIStmtFetch()</a>, except that <code>OER(1403)</code> with return code <code>OCI_NO_DATA</code> is returned every time a fetch on a scrollable statement handle (or execute) is made and not all rows requested by the application could be fetched.</p>
<p><a id="sthref2681"></a><a id="sthref2682"></a>If you call <code>OCIStmtFetch2()</code> with the <code>nrows</code> parameter set to 0, this cancels the cursor.</p>
<p>The scrollable statement handle must be explicitly canceled (that is, fetch with 0 rows) or freed to release server-side resources for the scrollable cursor. A nonscrollable statement handle is implicitly canceled on receiving the <code>OER(1403)</code>.</p>
<p>Use <code>OCI_ATTR_ROWS_FETCHED</code> to find the number of rows that were successfully fetched into the user's buffers in the last fetch call.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="oci04sql.htm#i444930">"Using Scrollable Cursors in OCI"</a></p>
</li>
<li>
<p><a href="oci02bas.htm#BCFDHCIG">"Polling Mode Operations in OCI"</a></p>
</li>
</ul>
</div>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2683"></a>Related Functions</p>
<p><a href="#i574897">OCIStmtExecute()</a>, <a href="oci16rel003.htm#i456224">OCIBindByPos()</a></p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="LNOCI17166" class="refsect2"><a id="i575083"></a>
<h2 class="refsect2">OCIStmtGetPieceInfo()<a id="sthref2684"></a></h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2685"></a>Purpose</p>
<p>Returns piece information for a piecewise operation.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2686"></a>Syntax</p>
<pre>
sword OCIStmtGetPieceInfo( const OCIStmt  *stmtp,
                           OCIError       *errhp,
                           void           **hndlpp,
                           ub4            *typep,
                           ub1            *in_outp,
                           ub4            *iterp, 
                           ub4            *idxp,
                           ub1            *piecep );
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2687"></a>Parameters</p>
<dl>
<dt><span class="bold">stmtp</span> (IN)</dt>
<dd>
<p>The statement that when executed returned <code>OCI_NEED_DATA</code>.</p>
</dd>
<dt><span class="bold">errhp</span> (OUT)</dt>
<dd>
<p>An error handle that you can pass to <a href="oci17msc007.htm#i540516">OCIErrorGet()</a> for diagnostic information when there is an error.</p>
</dd>
<dt><span class="bold">hndlpp</span> (OUT)</dt>
<dd>
<p>Returns a pointer to the bind or define handle of the bind or define whose run-time data is required or is being provided.</p>
</dd>
<dt><span class="bold">typep</span> (OUT)</dt>
<dd>
<p>The type of the handle pointed to by <code>hndlpp</code>: <code>OCI_HTYPE_BIND</code> (for a bind handle) or <code>OCI_HTYPE_DEFINE</code> (for a define handle).</p>
</dd>
<dt><span class="bold">in_outp</span> (OUT)</dt>
<dd>
<p>Returns <code>OCI_PARAM_IN</code> if the data is required for an IN bind value. Returns <code>OCI_PARAM_OUT</code> if the data is available as an OUT bind variable or a define position value.</p>
</dd>
<dt><span class="bold">iterp</span> (OUT)</dt>
<dd>
<p>Returns the row number of a multiple row operation.</p>
</dd>
<dt><span class="bold">idxp</span> (OUT)</dt>
<dd>
<p>The index of an array element of a PL/SQL array bind operation.</p>
</dd>
<dt><span class="bold">piecep</span> (OUT)</dt>
<dd>
<p>Returns one of these defined values: <code>OCI_ONE_PIECE</code>, <code>OCI_FIRST_PIECE</code>, <code>OCI_NEXT_PIECE</code>, or <code>OCI_LAST_PIECE</code>.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2688"></a>Comments</p>
<p>When an execute or fetch call returns <code>OCI_NEED_DATA</code> to get or return a dynamic bind, define value, or piece, <code>OCIStmtGetPieceInfo()</code> returns the relevant information: bind or define handle, iteration, index number, and which piece.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="oci05bnd.htm#i427753">"Runtime Data Allocation and Piecewise Operations in OCI"</a> for more information about using <code>OCIStmtGetPieceInfo()</code></p>
</li>
<li>
<p><a href="oci02bas.htm#BCFDHCIG">"Polling Mode Operations in OCI"</a></p>
</li>
</ul>
</div>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2689"></a>Related Functions</p>
<p><a href="oci16rel002.htm#i493114">OCIArrayDescriptorAlloc()</a>, <a href="oci16rel002.htm#i443804">OCIAttrSet()</a>, <a href="#i574897">OCIStmtExecute()</a>, <a href="ociaedep002.htm#i574982">OCIStmtFetch()</a> (deprecated), <a href="#i575019">OCIStmtFetch2()</a>, <a href="#i575292">OCIStmtSetPieceInfo()</a></p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="LNOCI17167" class="refsect2"><a id="i575144"></a>
<h2 class="refsect2"><a id="sthref2690"></a>OCIStmtPrepare()</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2691"></a>Purpose</p>
<p>Prepares a SQL or PL/SQL statement for execution.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2692"></a>Syntax</p>
<pre>
sword OCIStmtPrepare ( OCIStmt       *stmtp,
                       OCIError      *errhp,
                       const OraText *stmt, 
                       ub4           stmt_len,
                       ub4           language,
                       ub4           mode );
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2693"></a>Parameters</p>
<dl>
<dt><span class="bold">stmtp</span> (IN)</dt>
<dd>
<p>A statement handle associated with the statement to be executed. By default, it contains the encoding setting in the environment handle from which it is derived. A statement can be prepared in UTF-16 encoding only in a UTF-16 environment.</p>
</dd>
<dt><span class="bold">errhp</span> (IN)</dt>
<dd>
<p>An error handle that you can pass to <a href="oci17msc007.htm#i540516">OCIErrorGet()</a> for diagnostic information when there is an error.</p>
</dd>
<dt><span class="bold">stmt</span> (IN)</dt>
<dd>
<p>SQL or PL/SQL statement to be executed. Must be a <code>NULL</code>-terminated string. That is, the ending character is a number of <code>NULL</code> bytes, depending on the encoding. The statement must be in the encoding specified by the <code>charset</code> parameter of a previous call to <a href="oci16rel001.htm#i562098">OCIEnvNlsCreate()</a>.</p>
<p>Always cast the parameter to (<code>text *)</code>. After a statement has been prepared in UTF-16, the character set for the bind and define buffers default to UTF-16.</p>
</dd>
<dt><span class="bold">stmt_len</span> (IN)</dt>
<dd>
<p>Length of the statement in characters or in number of bytes, depending on the encoding. Must not be zero.</p>
</dd>
<dt><span class="bold">language</span> (IN)</dt>
<dd>
<p>Specifies V7, or native syntax. Possible values are as follows:</p>
</dd>
</dl>
<ul>
<li>
<p><code><a id="sthref2694"></a>OCI_V7_SYNTAX</code> - V7 ORACLE parsing syntax.</p>
</li>
<li>
<p><code><a id="sthref2695"></a>OCI_NTV_SYNTAX</code> - Syntax depends upon the version of the server.</p>
</li>
</ul>
<dl>
<dt><span class="bold">mode</span> (IN)</dt>
<dd>
<p>Similar to the <code>mode</code> in the <a href="oci16rel001.htm#i556149">OCIEnvCreate()</a> call, but this one has higher priority because it can override the "naturally" inherited mode setting.</p>
<p>The only possible value is <code>OCI_DEFAULT</code> (default mode). The statement handle <code>stmtp</code> uses whatever is specified by its parent environment handle.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2696"></a>Comments</p>
<p>An OCI application uses this call to prepare a SQL or PL/SQL statement for execution. The <code>OCIStmtPrepare()</code> call defines an application request.</p>
<p>The <code>mode</code> parameter determines whether the statement content is encoded as UTF-16 or not. The statement length is in number of code points or in number of bytes, depending on the encoding.</p>
<p>Although the statement handle inherits the encoding setting from the parent environment handle, the <code>mode</code> for this call can also change the encoding setting for the statement handle itself.</p>
<p>Data values for this statement initialized in subsequent bind calls are stored in a bind handle that uses settings in this statement handle as the default.</p>
<p>This call does not create an association between this statement handle and any particular server.</p>
<p>Before reexecuting a DDL statement, call this function a second time.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="oci04sql.htm#i429200">"Preparing Statements"</a> for more information about using this call</div>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2697"></a>Related Functions</p>
<p><a href="oci16rel002.htm#i493114">OCIArrayDescriptorAlloc()</a>, <a href="#i574897">OCIStmtExecute()</a>, <a href="#i575217">OCIStmtPrepare2()</a></p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="LNOCI17168" class="refsect2"><a id="i575217"></a>
<h2 class="refsect2"><a id="sthref2698"></a>OCIStmtPrepare2()</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2699"></a>Purpose</p>
<p>Prepares a SQL or PL/SQL statement for execution. The user has the option of using the statement cache, if it has been enabled.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2700"></a>Syntax</p>
<pre>
sword OCIStmtPrepare2 ( OCISvcCtx      *svchp,
                        OCIStmt        **stmthp,
                        OCIError       *errhp,
                        const OraText  *stmttext,
                        ub4            stmt_len,
                        const OraText  *key,
                        ub4            keylen,
                        ub4            language,
                        ub4            mode );
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2701"></a>Parameters</p>
<dl>
<dt>svchp (IN)</dt>
<dd>
<p>The service context to be associated with the statement.</p>
</dd>
<dt>stmthp (OUT)</dt>
<dd>
<p>Pointer to the statement handle returned.</p>
</dd>
<dt>errhp (IN)</dt>
<dd>
<p>A pointer to the error handle for diagnostics.</p>
</dd>
<dt>stmttext (IN)</dt>
<dd>
<p>The statement text. The semantics of the <code>stmttext</code> are same as those of <a href="#i575144">OCIStmtPrepare()</a>; that is, the string must be <code>NULL</code>-terminated.</p>
</dd>
<dt>stmt_len (IN)</dt>
<dd>
<p>The statement text length.</p>
</dd>
<dt>key (IN)</dt>
<dd>
<p>For statement caching only. The key to be used for searching the statement in the statement cache. If the key is passed in, then the statement text and other parameters are ignored, and the search is based solely on the key.</p>
</dd>
<dt>keylen (IN)</dt>
<dd>
<p>For statement caching only. The length of the key.</p>
</dd>
<dt>language (IN)</dt>
<dd>
<p>Specifies V7, or native syntax. Possible values are as follows:</p>
</dd>
</dl>
<ul>
<li>
<p><code><a id="sthref2702"></a>OCI_V7_SYNTAX</code> - V7 ORACLE parsing syntax.</p>
</li>
<li>
<p><code><a id="sthref2703"></a>OCI_NTV_SYNTAX</code> - Syntax depends upon the version of the server.</p>
</li>
</ul>
<dl>
<dt>mode (IN)</dt>
<dd>
<p>This function can be used with and without statement caching. This is determined at the time of connection or session pool creation. If caching is enabled for a session, then all statements in the session have caching enabled, and if caching is not enabled, then all statements are not cached.</p>
<p>The valid modes are as follows:</p>
</dd>
</dl>
<ul>
<li>
<p><code>OCI_DEFAULT</code> - Caching is not enabled. This is the only valid setting. If the statement is not found in the cache, this mode allocates a new statement handle and prepares the statement handle for execution. If the statement is not found in the cache and one of the following circumstances applies, then the subsequent actions follow:</p>
<ul>
<li>
<p>Only the text has been supplied: a new statement is allocated and prepared and returned. The tag <code>NULL</code>. <code>OCI_SUCCESS</code> is returned.</p>
</li>
<li>
<p>Only the tag has been supplied: <code>stmthp</code> is <code>NULL</code>. <code>OCI_ERROR</code> is returned.</p>
</li>
<li>
<p>Both text and key were supplied: a new statement is allocated and prepared and returned. The tag <code>NULL</code>. <code>OCI_SUCCESS_WITH_INFO</code> is returned, as the returned statement differs from the requested statement in that the tag is <code>NULL</code>.</p>
</li>
</ul>
</li>
<li>
<p><code>OCI_PREP2_CACHE_SEARCHONLY</code> - In this case, if the statement is not found (a <code>NULL</code> statement handle is returned), you must take further action. If the statement is found, <code>OCI_SUCCESS</code> is returned. Otherwise, <code>OCI_ERROR</code> is returned.</p>
</li>
<li>
<p><code>OCI_PREP2_GET_PLSQL_WARNINGS</code> - If warnings are enabled in the session and the PL/SQL program is compiled with warnings, then <code>OCI_SUCCESS_WITH_INFO</code> is the return status from the execution. Use <a href="oci17msc007.htm#i540516">OCIErrorGet()</a> to find the new error number corresponding to the warnings.</p>
</li>
</ul>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2704"></a>Related Functions</p>
<p><a href="#i575264">OCIStmtRelease()</a></p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="LNOCI17169" class="refsect2"><a id="i575264"></a>
<h2 class="refsect2"><a id="sthref2705"></a>OCIStmtRelease()</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2706"></a>Purpose</p>
<p>Releases the statement handle obtained by a call to <code>OCIStmtPrepare2()</code>.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2707"></a>Syntax</p>
<pre>
sword OCIStmtRelease ( OCIStmt        *stmthp,  
                       OCIError       *errhp,
                       const OraText  *key,
                       ub4            keylen,
                       ub4            mode );  
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2708"></a>Parameters</p>
<dl>
<dt>stmthp (IN/OUT)</dt>
<dd>
<p>The statement handle returned by <a href="#i575217">OCIStmtPrepare2()</a></p>
</dd>
<dt>errhp (IN)</dt>
<dd>
<p>The error handle used for diagnostics.</p>
</dd>
<dt>key (IN)</dt>
<dd>
<p>Only valid for statement caching. The key to be associated with the statement in the cache. This is a SQL string passed in by the caller. If a <code>NULL</code> key is passed in, the statement is not tagged.</p>
</dd>
<dt>keylen (IN)</dt>
<dd>
<p>Only valid for statement caching. The length of the key.</p>
</dd>
<dt>mode (IN)</dt>
<dd>
<p>The valid modes are:</p>
</dd>
</dl>
<ul>
<li>
<p><code>OCI_DEFAULT</code></p>
</li>
<li>
<p><code>OCI_STRLS_CACHE_DELETE</code> - Only valid for statement caching. The statement is not kept in the cache anymore.</p>
</li>
</ul>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2709"></a>Related Functions</p>
<p><a href="#i575217">OCIStmtPrepare2()</a></p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="LNOCI17170" class="refsect2"><a id="i575292"></a>
<h2 class="refsect2">OCIStmtSetPieceInfo()<a id="sthref2710"></a></h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2711"></a>Purpose</p>
<p>Sets piece information for a piecewise operation.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2712"></a>Syntax</p>
<pre>
sword OCIStmtSetPieceInfo ( void              *hndlp,
                            ub4               type,
                            OCIError          *errhp,
                            const void        *bufp,
                            ub4               *alenp, 
                            ub1               piece,
                            const void        *indp, 
                            ub2               *rcodep ); 
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2713"></a>Parameters</p>
<dl>
<dt>hndlp (IN/OUT)</dt>
<dd>
<p>The bind or define handle.</p>
</dd>
<dt>type (IN)</dt>
<dd>
<p>Type of the handle.</p>
</dd>
<dt>errhp (OUT)</dt>
<dd>
<p>An error handle that you can pass to <a href="oci17msc007.htm#i540516">OCIErrorGet()</a> for diagnostic information when there is an error.</p>
</dd>
<dt>bufp (IN/OUT)</dt>
<dd>
<p>A pointer to storage containing the data value or the piece when it is an IN bind variable; otherwise, <code>bufp</code> is a pointer to storage for getting a piece or a value for OUT binds and define variables. For named data types or <code>REF</code>s, a pointer to the object or <code>REF</code> is returned.</p>
</dd>
<dt>alenp (IN/OUT)</dt>
<dd>
<p>The length of the piece or the value. Do not change this parameter between executions of the same SQL statement.</p>
</dd>
<dt>piece (IN)</dt>
<dd>
<p>The piece parameter. Valid values are:</p>
</dd>
</dl>
<ul>
<li>
<p><code>OCI_ONE_PIECE</code></p>
</li>
<li>
<p><code>OCI_FIRST_PIECE</code></p>
</li>
<li>
<p><code>OCI_NEXT_PIECE</code></p>
</li>
<li>
<p><code>OCI_LAST_PIECE</code></p>
</li>
</ul>
<p>This parameter is used for IN bind variables only.</p>
<dl>
<dt>indp (IN/OUT)</dt>
<dd>
<p>Indicator. A pointer to an <code>sb2</code> value or pointer to an indicator structure for named data types (SQLT_NTY) and <code>REF</code>s (SQLT_REF), that is, depending upon the data type, <code>*indp</code> is either an <code>sb2</code> or a <code>void</code> *.</p>
</dd>
<dt>rcodep (IN/OUT)</dt>
<dd>
<p>Return code.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2714"></a>Comments</p>
<p>When an execute call returns <code>OCI_NEED_DATA</code> to get a dynamic IN/OUT bind value or piece, <code>OCIStmtSetPieceInfo()</code> sets the piece information: the buffer, the length, which piece is currently being processed, the indicator, and the return code for this column.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="oci05bnd.htm#i427753">"Runtime Data Allocation and Piecewise Operations in OCI"</a> for more information about using <code>OCIStmtSetPieceInfo()</code></p>
</li>
<li>
<p><a href="oci02bas.htm#BCFDHCIG">"Polling Mode Operations in OCI"</a></p>
</li>
</ul>
</div>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2715"></a>Related Functions</p>
<p><a href="oci16rel002.htm#i493114">OCIArrayDescriptorAlloc()</a>, <a href="oci16rel002.htm#i443804">OCIAttrSet()</a>, <a href="#i574897">OCIStmtExecute()</a>, <a href="ociaedep002.htm#i574982">OCIStmtFetch()</a> (deprecated), <a href="#i575019">OCIStmtFetch2()</a>, <a href="#i575083">OCIStmtGetPieceInfo()</a></p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" --></div>
<!-- class="refsect1" --></div>
<!-- class="refentry" -->
<div class="refentry"></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment1004">
<tr>
<td class="cellalignment1013">
<table class="cellalignment1009">
<tr>
<td class="cellalignment1008"><a href="oci17msc.htm"><img width="24" height="24" src="../../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment1008"><a href="oci17msc002.htm"><img width="24" height="24" src="../../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;1996, 2014,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment1015">
<table class="cellalignment1007">
<tr>
<td class="cellalignment1008"><a href="../../index.htm"><img width="24" height="24" src="../../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment1008"><a href="../../nav/portal_booklist.htm"><img width="24" height="24" src="../../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment1008"><a href="toc.htm"><img width="24" height="24" src="../../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment1008"><a href="index.htm"><img width="24" height="24" src="../../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment1008"><a href="../../nav/mindx.htm"><img width="24" height="24" src="../../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment1008"><a href="../../dcommon/html/feedback.htm"><img width="24" height="24" src="../../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>
</body>
</html>
