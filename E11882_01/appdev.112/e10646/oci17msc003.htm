<!DOCTYPE html>
<html lang="en" >
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1">
<meta charset="utf-8">
<title>Streams Advanced Queuing and Publish-Subscribe Functions</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Merged Version 1023" />
<meta name="dcterms.created" content="2014-07-18T15:18:32Z" />
<meta name="robots" content="all" />
<meta name="dcterms.title" content="Call Interface Programmer's Guide" />
<meta name="dcterms.identifier" content="E10646-15" />
<meta name="dcterms.isVersionOf" content="LNOCI" />
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;1996, 2014,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved." />
<link rel="Start" href="../../index.htm" title="Home" type="text/html" />
<link rel="Copyright" href="../../dcommon/html/cpyr.htm" title="Copyright" type="text/html" />

<script type="application/javascript"  src="../../dcommon/js/headfoot.js"></script>
<script type="application/javascript"  src="../../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html" />
<link rel="Index" href="index.htm" title="Index" type="text/html" />
<link rel="Prev" href="oci17msc002.htm" title="Previous" type="text/html" />
<link rel="Next" href="oci17msc004.htm" title="Next" type="text/html" />
<link rel="alternate" href="../e10646.pdf" title="PDF version" type="application/pdf" />
<link rel="schema.dcterms" href="http://purl.org/dc/terms/" />
<link rel="stylesheet" href="../../dcommon/css/fusiondoc.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/header.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/footer.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/fonts.css">
<link rel="stylesheet" href="../../dcommon/css/foundation.css">
<link rel="stylesheet" href="../../dcommon/css/codemirror.css">
<link rel="stylesheet" type="text/css" title="Default" href="../../nav/css/html5.css">
<link rel="stylesheet" href="../../dcommon/css/respond-480-tablet.css">
<link rel="stylesheet" href="../../dcommon/css/respond-768-laptop.css">
<link rel="stylesheet" href="../../dcommon/css/respond-1140-deskop.css">
<script type="application/javascript" src="../../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">30/79</span> <!-- End Header --><a id="CIHBIGHB"></a>
<div id="LNOCI163" class="refsect1">
<h1 class="refsect1">Streams Advanced Queuing and Publish-Subscribe Functions<a id="sthref2987"></a><a id="sthref2988"></a><a id="sthref2989"></a></h1>
<p><a href="#g731077">Table 17-3</a> lists the Streams Advanced Queuing and publish-subscribe functions that are described in this section. Use functions that end in "2" for all new applications.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="ociabdem.htm#CACCAHCE">"OCI Demonstration Programs"</a> for Streams Advanced Queuing programs</div>
<div id="LNOCI17225" class="tblformalwide">
<p class="titleintable"><a id="sthref2990"></a><a id="g731077"></a>Table 17-3 Advanced Queuing and Publish-Subscribe Functions</p>
<table class="cellalignment1011" title="Advanced Queuing and Publish-Subscribe Functions" summary="This table is described in the preceding text" dir="ltr">
<thead>
<tr class="cellalignment1005">
<th class="cellalignment1012" id="r1c1-t48">Function</th>
<th class="cellalignment1012" id="r1c2-t48">Purpose</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r2c1-t48" headers="r1c1-t48">
<p><a href="#i555815">"OCIAQDeq()"</a></p>
</td>
<td class="cellalignment1013" headers="r2c1-t48 r1c2-t48">
<p>Performs an Advanced Queuing dequeue operation</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r3c1-t48" headers="r1c1-t48">
<p><a href="#i576305">"OCIAQDeqArray()"</a></p>
</td>
<td class="cellalignment1013" headers="r3c1-t48 r1c2-t48">
<p>Dequeue an array of messages</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r4c1-t48" headers="r1c1-t48">
<p><a href="#i555913">"OCIAQEnq()"</a></p>
</td>
<td class="cellalignment1013" headers="r4c1-t48 r1c2-t48">
<p>Performs an Advanced Queuing enqueue operation</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r5c1-t48" headers="r1c1-t48">
<p><a href="#i576291">"OCIAQEnqArray()"</a></p>
</td>
<td class="cellalignment1013" headers="r5c1-t48 r1c2-t48">
<p>Enqueue an array of messages</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r6c1-t48" headers="r1c1-t48">
<p><a href="#BJFGAFJE">"OCIAQListen2()"</a></p>
</td>
<td class="cellalignment1013" headers="r6c1-t48 r1c2-t48">
<p>Listen on one or more queues on behalf of a list of agents. Supports buffered messaging and persistent queues.</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r7c1-t48" headers="r1c1-t48">
<p><a href="#i556482">"OCISubscriptionDisable()"</a></p>
</td>
<td class="cellalignment1013" headers="r7c1-t48 r1c2-t48">
<p>Disable a subscription registration to turn off notifications</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r8c1-t48" headers="r1c1-t48">
<p><a href="#i556532">"OCISubscriptionEnable()"</a></p>
</td>
<td class="cellalignment1013" headers="r8c1-t48 r1c2-t48">
<p>Enable notifications on a subscription</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r9c1-t48" headers="r1c1-t48">
<p><a href="#i556581">"OCISubscriptionPost()"</a></p>
</td>
<td class="cellalignment1013" headers="r9c1-t48 r1c2-t48">
<p>Post to a subscription to receive notifications</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r10c1-t48" headers="r1c1-t48">
<p><a href="#i556638">"OCISubscriptionRegister()"</a></p>
</td>
<td class="cellalignment1013" headers="r10c1-t48 r1c2-t48">
<p>Register a subscription</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r11c1-t48" headers="r1c1-t48">
<p><a href="#i556699">"OCISubscriptionUnRegister()"</a></p>
</td>
<td class="cellalignment1013" headers="r11c1-t48 r1c2-t48">
<p>Unregister a subscription</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformalwide" -->
<div id="LNOCI17226" class="refsect2"><a id="i555815"></a>
<h2 class="refsect2">OCIAQDeq()<a id="sthref2991"></a><a id="sthref2992"></a></h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2993"></a>Purpose</p>
<p>Performs a dequeue operation using Streams Advanced Queuing with OCI.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2994"></a>Syntax</p>
<pre>
sword OCIAQDeq ( OCISvcCtx           *svch,
                 OCIError            *errh,
                 OraText             *queue_name,
                 OCIAQDeqOptions     *dequeue_options,
                 OCIAQMsgProperties  *message_properties,
                 OCIType             *payload_tdo,
                 void                **payload,
                 void                **payload_ind,
                 OCIRaw              **msgid,
                 ub4                 flags );
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2995"></a>Parameters</p>
<a id="i555832"></a>
<dl>
<dd><a id="g731414"></a></dd>
<dt><span class="bold">svch</span> (IN)</dt>
<dd>
<p>OCI service context.</p>
</dd>
<dt><span class="bold">errh</span> (IN)</dt>
<dd>
<p>An error handle that you can pass to <a href="oci17msc007.htm#i540516">OCIErrorGet()</a> for diagnostic information when there is an error.</p>
</dd>
<dt><span class="bold">queue_name</span> (IN)</dt>
<dd>
<p>The target queue for the dequeue operation.</p>
</dd>
<dt><span class="bold">dequeue_options</span> (IN)</dt>
<dd>
<p>The options for the dequeue operation; stored in an <code>OCIAQDeqOptions</code> descriptor, with OCI type constant <code>OCI_DTYPE_AQDEQ_OPTIONS</code>.</p>
<p><code>OCI_DTYPE_AQDEQ_OPTIONS</code> has the additional attribute <a id="sthref2996"></a><code>OCI_ATTR_MSG_DELIVERY_MODE</code> (introduced in Oracle Database 10<span class="italic">g</span> Release 2) with the following values:</p>
<ul>
<li>
<p><code>OCI_MSG_PERSISTENT</code> (default)</p>
</li>
<li>
<p><code>OCI_MSG_BUFFERED</code></p>
</li>
<li>
<p><code>OCI_MSG_PERSISTENT_OR_BUFFERED</code></p>
</li>
</ul>
</dd>
<dt><span class="bold">message_properties</span> (OUT)</dt>
<dd>
<p>The message properties for the message; the properties are stored in an <code>OCIAQMsgProperties</code> descriptor, with OCI type constant <code>OCI_DTYPE_AQMSG_PROPERTIES</code>, which can have the following values:</p>
<ul>
<li>
<p><code>OCI_AQ_PERSISTENT</code> (default)</p>
</li>
<li>
<p><code>OCI_AQ_BUFFERED</code></p>
</li>
</ul>
</dd>
<dt><span class="bold">payload_tdo</span> (IN)</dt>
<dd>
<p>The TDO (type descriptor object) of an object type. For a raw queue, this parameter should point to the TDO of <code>SYS.RAW</code>.</p>
</dd>
<dt><span class="bold">payload</span> (IN/OUT)</dt>
<dd>
<p>A pointer to a pointer to a program variable buffer that is an instance of an object type. For a raw queue, this parameter should point to an instance of <code>OCIRaw</code>.</p>
<p>Memory for the payload is dynamically allocated in the object cache. The application can optionally call <a href="oci18nav005.htm#i430212">OCIObjectFree()</a> to deallocate the payload instance when it is no longer needed. If the pointer to the program variable buffer (<code>*payload</code>) is passed as <code>NULL</code>, the buffer is implicitly allocated in the cache.</p>
<p>The application may choose to pass <code>NULL</code> for <code>payload</code> the first time <code>OCIAQDeq()</code> is called, and let the OCI allocate the memory for the payload. It can then use a pointer to that previously allocated memory in subsequent calls to <code>OCIAQDeq()</code>.</p>
<p>To obtain a TDO for the payload, use <a href="oci18nav006.htm#i455564">OCITypeByName()</a>, or <a href="oci18nav006.htm#i455642">OCITypeByRef()</a>.</p>
<p>The OCI provides functions that allow the user to set attributes of the payload, such as its text. For information about setting these attributes, see <a href="oci11obj.htm#i440522">"Manipulating Object Attributes"</a>.</p>
</dd>
<dt><span class="bold">payload_ind</span> (IN/OUT)</dt>
<dd>
<p>A pointer to a pointer to the program variable buffer containing the parallel indicator structure for the object type.</p>
<p>The memory allocation rules for <code>payload_ind</code> are the same as those for <code>payload</code>.</p>
</dd>
<dt><span class="bold">msgid</span> (OUT)</dt>
<dd>
<p>The message ID.</p>
</dd>
<dt><span class="bold">flags</span> (IN)</dt>
<dd>
<p>Not currently used; pass as <code>OCI_DEFAULT</code>.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2997"></a>Comments</p>
<p>Users must have the <code>AQ_USER_ROLE</code> or privileges to execute the <code>DBMS_AQ</code> package to use this call. The OCI environment must be initialized in object mode (using <a href="oci16rel001.htm#i556149">OCIEnvCreate()</a>, <a href="oci16rel001.htm#i562098">OCIEnvNlsCreate()</a>), or <a href="ociaedep001.htm#i556330">OCIInitialize()</a> (deprecated) to use this call.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="oci09adv.htm#i467582">"OCI and Streams Advanced Queuing"</a></p>
</li>
<li>
<p><a class="olink ADQUE0300" href="../../server.112/e11013/aq_envir.htm#ADQUE0300"><span class="italic">Oracle Streams Advanced Queuing User's Guide</span></a></p>
</li>
</ul>
</div>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2998"></a>Related Functions</p>
<p><a href="#i555913">OCIAQEnq()</a>, <a href="#BJFGAFJE">OCIAQListen2()</a>, <a href="ociaedep001.htm#i556330">OCIInitialize()</a> (deprecated), <a href="oci16rel001.htm#i556149">OCIEnvCreate()</a>, <a href="oci16rel001.htm#i562098">OCIEnvNlsCreate()</a></p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="LNOCI17227" class="refsect2"><a id="i576305"></a>
<h2 class="refsect2"><a id="sthref2999"></a>OCIAQDeqArray()</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3000"></a>Purpose</p>
<p>Dequeues an array of messages from a queue. All messages in the array are dequeued with the same option and have the same queue table payload column TDO.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3001"></a>Syntax</p>
<pre>
sword OCIAQDeqArray ( OCISvcCtx           *svchp,
                      OCIError            *errhp,
                      OraText             *queue_name,
                      OCIAQDeqOptions     *deqopt,
                      ub4                 *iters,
                      OCIAQMsgProperties  **msgprop,
                      OCIType             *payload_tdo,
                      void                **payload,
                      void                **payload_ind,
                      OCIRaw              **msgid,
                      void                *ctxp,
                      OCICallbackAQDeq    (cbfp) 
                                          (
                                          void         *ctxp,
                                          void         **payload,
                                          void         **payload_ind
                                          ),
                      ub4                 flags );
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3002"></a>Parameters</p>
<dl>
<dt><span class="bold">svchp</span> (IN)</dt>
<dd>
<p>OCI service context (unchanged from <a href="#i555815">OCIAQDeq()</a>).</p>
</dd>
<dt><span class="bold">errhp</span> (IN)</dt>
<dd>
<p>An error handle that you can pass to <a href="oci17msc007.htm#i540516">OCIErrorGet()</a> for diagnostic information when there is an error (unchanged from <a href="#i555815">OCIAQDeq()</a>).</p>
</dd>
<dt>queue_name (IN)</dt>
<dd>
<p>The name of the queue from which messages are dequeued (unchanged from <a href="#i555815">OCIAQDeq()</a>).</p>
</dd>
<dt>deqopt (IN)</dt>
<dd>
<p>A pointer to an <code>OCIAQDeqOptions</code> descriptor (unchanged from <a href="#i555815">OCIAQDeq()</a>).</p>
<p><code>OCI_DTYPE_AQDEQ_OPTIONS</code> OCI type constant has the additional attribute <a id="sthref3003"></a><code>OCI_ATTR_MSG_DELIVERY_MODE</code> (introduced in Oracle Database 10<span class="italic">g</span> Release 2) with the following values:</p>
<ul>
<li>
<p><code>OCI_MSG_PERSISTENT</code> (default)</p>
</li>
<li>
<p><code>OCI_MSG_BUFFERED</code></p>
</li>
<li>
<p><code>OCI_MSG_PERSISTENT_OR_BUFFERED</code></p>
</li>
</ul>
</dd>
<dt>iters (IN/OUT)</dt>
<dd>
<p>On input, the number of messages to dequeue. On output, the number of messages successfully dequeued.</p>
</dd>
<dt>msgprop (OUT)</dt>
<dd>
<p>An array of pointers to <code>OCIAQMsgProperties</code> descriptors, of OCI type constant <code>OCI_DTYPE_AQMSG_PROPERTIES</code>, which can have the following values:</p>
<ul>
<li>
<p><code>OCI_AQ_PERSISTENT</code> (default)</p>
</li>
<li>
<p><code>OCI_AQ_BUFFERED</code></p>
</li>
</ul>
</dd>
<dt>payload_tdo (OUT)</dt>
<dd>
<p>A pointer to the TDO of the queue table's payload column.</p>
</dd>
<dt>payload (OUT)</dt>
<dd>
<p>An array of pointers to dequeued messages.</p>
</dd>
<dt>payload_ind (OUT)</dt>
<dd>
<p>An array of pointers to indicators.</p>
</dd>
<dt>msgid (OUT)</dt>
<dd>
<p>An array of pointers to the message ID of the dequeued messages.</p>
</dd>
<dt>ctxp (IN)</dt>
<dd>
<p>The context that is passed to the callback function.</p>
</dd>
<dt>cbfp (IN)</dt>
<dd>
<p>The callback that can be registered to provide a buffer pointer into which the dequeued message is placed. If <code>NULL</code>, then messages are dequeued into buffers pointed to by <code>payload</code>.</p>
</dd>
<dt>flags (IN)</dt>
<dd>
<p>Not currently used; pass as <code>OCI_DEFAULT</code>.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3004"></a>Comments</p>
<p>Users must have the <code>AQ_USER_ROLE</code> or privileges to execute the <code>DBMS_AQ</code> package to use this call. The OCI environment must be initialized in object mode (using <a href="oci16rel001.htm#i556149">OCIEnvCreate()</a>, <a href="oci16rel001.htm#i562098">OCIEnvNlsCreate()</a>), or <a href="ociaedep001.htm#i556330">OCIInitialize()</a> (deprecated) to use this call.</p>
<p>A nonzero wait time, as specified in the <code>OCIAQDeqOptions</code>, is recognized only when there are no messages in the queue. If the queue contains messages that are eligible for dequeuing, then the <code>OCIAQDeqArray()</code> function dequeues up to <code>iters</code> messages and returns immediately.</p>
<p>This function is not supported in nonblocking mode.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="oci09adv.htm#i467582">"OCI and Streams Advanced Queuing"</a></p>
</li>
<li>
<p><a class="olink ADQUE0300" href="../../server.112/e11013/aq_envir.htm#ADQUE0300"><span class="italic">Oracle Streams Advanced Queuing User's Guide</span></a></p>
</li>
</ul>
</div>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3005"></a>Related Functions</p>
<p><a href="#i555815">OCIAQDeq()</a>, <a href="#i576291">OCIAQEnqArray()</a>, <a href="#BJFGAFJE">OCIAQListen2()</a>, <a href="ociaedep001.htm#i556330">OCIInitialize()</a> (deprecated), <a href="oci16rel001.htm#i556149">OCIEnvCreate()</a>, <a href="oci16rel001.htm#i562098">OCIEnvNlsCreate()</a></p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="LNOCI17228" class="refsect2"><a id="i555913"></a>
<h2 class="refsect2">OCIAQEnq()<a id="sthref3006"></a><a id="sthref3007"></a></h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3008"></a>Purpose</p>
<p>Performs an enqueue operation using Streams Advanced Queuing.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3009"></a>Syntax</p>
<pre>
sword OCIAQEnq ( OCISvcCtx           *svch,
                 OCIError            *errh,
                 OraText             *queue_name,
                 OCIAQEnqOptions     *enqueue_options,
                 OCIAQMsgProperties  *message_properties,
                 OCIType             *payload_tdo,
                 void                **payload,
                 void                **payload_ind,
                 OCIRaw              **msgid,
                 ub4                 flags );
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3010"></a>Parameters</p>
<dl>
<dt><span class="bold">svch</span> (IN)</dt>
<dd>
<p>OCI service context.</p>
</dd>
<dt><span class="bold">errh</span> (IN)</dt>
<dd>
<p>An error handle that you can pass to <a href="oci17msc007.htm#i540516">OCIErrorGet()</a> for diagnostic information when there is an error.</p>
</dd>
<dt><span class="bold">queue_name</span> (IN)</dt>
<dd>
<p>The target queue for the enqueue operation.</p>
</dd>
<dt><span class="bold">enqueue_options</span> (IN)</dt>
<dd>
<p>The options for the enqueue operation; stored in an <code>OCIAQEnqOptions</code> descriptor.</p>
</dd>
<dt><span class="bold">message_properties</span> (IN)</dt>
<dd>
<p>The message properties for the message. The properties are stored in an <code>OCIAQMsgProperties</code> descriptor, of OCI type constant <code>OCI_DTYPE_AQMSG_PROPERTIES</code>, introduced in Oracle Database 10<span class="italic">g</span> Release 2.</p>
<p>Descriptor <code>OCI_DTYPE_AQMSG_PROPERTIES</code> has the attribute <code>OCI_ATTR_MSG_DELIVERY_MODE</code>, which has the following values:</p>
<ul>
<li>
<p><code>OCI_MSG_PERSISTENT</code> (default)</p>
</li>
<li>
<p><code>OCI_MSG_BUFFERED</code></p>
</li>
</ul>
</dd>
<dt><span class="bold">payload_tdo</span> (IN)</dt>
<dd>
<p>The TDO (type descriptor object) of an object type. For a raw queue, this parameter should point to the TDO of <code>SYS.RAW</code>.</p>
</dd>
<dt><span class="bold">payload</span> (IN)</dt>
<dd>
<p>A pointer to a pointer to an instance of an object type. For a raw queue, this parameter should point to an instance of <code>OCIRaw</code>.</p>
<p>OCI provides functions that allow the user to set attributes of the payload, such as its text.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="oci11obj.htm#i440522">"Manipulating Object Attributes"</a> for information about setting these attributes</div>
</dd>
<dt><span class="bold">payload_ind</span> (IN)</dt>
<dd>
<p>A pointer to a pointer to the program variable buffer containing the parallel indicator structure for the object type.</p>
</dd>
<dt><span class="bold">msgid</span> (OUT)</dt>
<dd>
<p>The message ID.</p>
</dd>
<dt><span class="bold">flags</span> (IN)</dt>
<dd>
<p>Not currently used; pass as <code>OCI_DEFAULT</code>.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3011"></a>Comments</p>
<p>Users must have the <code>AQ_USER_ROLE</code> or privileges to execute the <code>DBMS_AQ</code> package to use this call.</p>
<p>The OCI environment must be initialized in object mode (using <a href="oci16rel001.htm#i556149">OCIEnvCreate()</a>, <a href="oci16rel001.htm#i562098">OCIEnvNlsCreate()</a>), or <a href="ociaedep001.htm#i556330">OCIInitialize()</a> (deprecated) to use this call.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="oci09adv.htm#i467582">"OCI and Streams Advanced Queuing"</a> for more information about OCI and Advanced Queuing</p>
</li>
<li>
<p><a class="olink ADQUE0300" href="../../server.112/e11013/aq_envir.htm#ADQUE0300"><span class="italic">Oracle Streams Advanced Queuing User's Guide</span></a></p>
</li>
</ul>
</div>
<p>To obtain a TDO for the payload, use <a href="oci18nav006.htm#i455564">OCITypeByName()</a>, or <a href="oci18nav006.htm#i455642">OCITypeByRef()</a>.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3012"></a>Related Functions</p>
<p><a href="#i555815">OCIAQDeq()</a>, <a href="#BJFGAFJE">OCIAQListen2()</a>, <a href="ociaedep001.htm#i556330">OCIInitialize()</a> (deprecated), <a href="oci16rel001.htm#i556149">OCIEnvCreate()</a>, <a href="oci16rel001.htm#i562098">OCIEnvNlsCreate()</a></p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="LNOCI17229" class="refsect2"><a id="i576291"></a>
<h2 class="refsect2"><a id="sthref3013"></a>OCIAQEnqArray()</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3014"></a>Purpose</p>
<p>Enqueues an array of messages to a queue. The array of messages is enqueued with the same options and has the same payload column TDO.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3015"></a>Syntax</p>
<pre>
sword OCIAQEnqArray ( OCISvcCtx              *svchp,
                      OCIError               *errhp,
                      OraText                *queue_name,
                      OCIAQEnqOptions        *enqopt,
                      ub4                    *iters,
                      OCIAQMsgProperties     **msgprop,
                      OCIType                *payload_tdo,
                      void                   **payload,
                      void                   **payload_ind,
                      OCIRaw                 **msgid,
                      void                   *ctxp,
                      OCICallbackAQEnq       (cbfp)
                                             (
                                             void        *ctxp,
                                             void        **payload,
                                             void        **payload_ind
                                             ),
                      ub4                    flags );
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3016"></a>Parameters</p>
<dl>
<dt>svchp (IN)</dt>
<dd>
<p>The service context (unchanged from <a href="#i555913">OCIAQEnq()</a>).</p>
</dd>
<dt>errhp (IN/OUT)</dt>
<dd>
<p>The error handle (unchanged from <a href="#i555913">OCIAQEnq()</a>).</p>
</dd>
<dt>queue_name (IN)</dt>
<dd>
<p>The name of the queue in which messages are enqueued (unchanged from <a href="#i555913">OCIAQEnq()</a>).</p>
</dd>
<dt>enqopt (IN)</dt>
<dd>
<p>A pointer to an <code>OCIAQEnqOptions</code> descriptor (unchanged from <a href="#i555913">OCIAQEnq()</a>).</p>
</dd>
<dt>iters (IN/OUT)</dt>
<dd>
<p>On input, the number of messages to enqueue. On output, the number of messages successfully enqueued.</p>
</dd>
<dt>msgprop (IN)</dt>
<dd>
<p>An array of pointers to <code>OCIAQMsgProperties</code> descriptors, of OCI type constant <code>OCI_DTYPE_AQMSG_PROPERTIES</code>, introduced in Oracle Database 10<span class="italic">g</span> Release 2.</p>
<p><code>OCI_DTYPE_AQMSG_PROPERTIES</code> has the attribute <code>OCI_ATTR_MSG_DELIVERY_MODE</code>, which has the following values:</p>
<ul>
<li>
<p><code>OCI_MSG_PERSISTENT</code> (default)</p>
</li>
<li>
<p><code>OCI_MSG_BUFFERED</code></p>
</li>
</ul>
</dd>
<dt>payload_tdo (IN)</dt>
<dd>
<p>A pointer to the TDO of the queue table's payload column.</p>
</dd>
<dt>payload (IN)</dt>
<dd>
<p>An array of pointers to messages to be enqueued.</p>
</dd>
<dt>payload_ind (IN)</dt>
<dd>
<p>An array of pointers to indicators, or a <code>NULL</code> pointer if indicator variables are not used.</p>
</dd>
<dt>msgid (OUT)</dt>
<dd>
<p>An array of pointers to the message ID of the enqueued messages, or a <code>NULL</code> pointer if no message IDs are returned.</p>
</dd>
<dt>ctxp (IN)</dt>
<dd>
<p>The context that is passed to the registered callback function.</p>
</dd>
<dt>cbfp (IN)</dt>
<dd>
<p>A callback that can be registered to provide messages dynamically. If <code>NULL</code>, then all messages must be materialized before calling <code>OCIAQEnqArray()</code>.</p>
</dd>
<dt>flags (IN)</dt>
<dd>
<p>Not currently used; pass as <code>OCI_DEFAULT</code>.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3017"></a>Comments</p>
<p>This function is not supported in nonblocking mode.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3018"></a>Related Functions</p>
<p><a href="#i555913">OCIAQEnq()</a>, <a href="#i576305">OCIAQDeqArray()</a>, <a href="#BJFGAFJE">OCIAQListen2()</a>, <a href="ociaedep001.htm#i556330">OCIInitialize()</a> (deprecated), <a href="oci16rel001.htm#i556149">OCIEnvCreate()</a>, <a href="oci16rel001.htm#i562098">OCIEnvNlsCreate()</a></p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="LNOCI17231" class="refsect2"><a id="BJFGAFJE"></a>
<h2 class="refsect2">OCIAQListen2()<a id="sthref3019"></a></h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3020"></a>Purpose</p>
<p>Listens on one or more queues on behalf of a list of agents. Supports buffered messaging and persistent queues. Introduced in Oracle Database 10<span class="italic">g</span> Release 2.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3021"></a>Syntax</p>
<pre>
sword OCIAQListen2 (OCISvcCtx         *svchp, 
                    OCIError          *errhp,
                    OCIAQAgent        **agent_list, 
                    ub4               num_agents,
                    OCIAQListenOpts   *lopts, 
                    OCIAQAgent        **agent,
                    OCIAQLisMsgProps  *lmops,
                    ub4               flags);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3022"></a>Parameters</p>
<dl>
<dt><span class="bold">svchpp</span> (IN/OUT)</dt>
<dd>
<p>The service context handle.</p>
</dd>
<dt><span class="bold">errhp</span> (IN/OUT)</dt>
<dd>
<p>An error handle that you can pass to <a href="oci17msc007.htm#i540516">OCIErrorGet()</a> for diagnostic information when there is an error.</p>
</dd>
<dt>agent_list (IN)</dt>
<dd>
<p>List of agents for which to monitor messages.</p>
</dd>
<dt>num_agents (IN)</dt>
<dd>
<p>Number of agents in the agent list.</p>
</dd>
<dt>lopts (IN)</dt>
<dd>
<p>Type constant <code>OCI_DTYPE_AQLIS_OPTIONS</code> has the following attributes:</p>
<ul>
<li>
<p><code>OCI_ATTR_WAIT</code> - Maximum wait time, in seconds, for the listen call</p>
</li>
<li>
<p><code>OCI_ATTR_MSG_DELIVERY_MODE</code> - Has one of these values:</p>
<ul>
<li>
<p><code>OCI_MSG_PERSISTENT</code></p>
</li>
<li>
<p><code>OCI_MSG_BUFFERED</code></p>
</li>
<li>
<p><code>OCI_MSG_PERSISTENT_OR_BUFFERED</code></p>
</li>
</ul>
</li>
</ul>
</dd>
<dt>agent (OUT)</dt>
<dd>
<p>Agent for which there is a message. <code>OCIAgent</code> is an OCI descriptor.</p>
</dd>
<dt>lmops (OUT)</dt>
<dd>
<p><code>OCI_DTYPE_AQLIS_MSG_PROPERTIES</code> (listen message properties) has one attribute, <code>OCI_ATTR_MSG_DELIVERY_MODE</code>, which has the following values:</p>
<ul>
<li>
<p><code>OCI_MSG_PERSISTENT</code></p>
</li>
<li>
<p><code>OCI_MSG_BUFFERED</code></p>
</li>
</ul>
</dd>
<dt>flags (IN)</dt>
<dd>
<p>Not currently used; pass as <code>OCI_DEFAULT</code>.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3023"></a>Comments</p>
<p>This is a blocking call that returns when there is a message ready for consumption for an agent in the list. If there are no messages found when the wait time expires, an error is returned.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3024"></a>Related Functions</p>
<p><a href="#i555913">OCIAQEnq()</a>, <a href="#i555815">OCIAQDeq()</a>, <a href="oci17msc007.htm#i540717">OCISvcCtxToLda()</a>, <a href="#i556532">OCISubscriptionEnable()</a>, <a href="#i556581">OCISubscriptionPost()</a>, <a href="#i556638">OCISubscriptionRegister()</a>, <a href="#i556699">OCISubscriptionUnRegister()</a></p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="LNOCI17232" class="refsect2"><a id="i556482"></a>
<h2 class="refsect2">OCISubscriptionDisable()<a id="sthref3025"></a></h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3026"></a>Purpose</p>
<p>Disables a subscription registration that turns off all notifications.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3027"></a>Syntax</p>
<pre>
ub4 OCISubscriptionDisable ( OCISubscription   *subscrhp,
                             OCIError          *errhp
                             ub4               mode );
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3028"></a>Parameters</p>
<dl>
<dt>subscrhp (IN)</dt>
<dd>
<p>A subscription handle with the <code>OCI_ATTR_SUBSCR_NAME</code> and <code>OCI_ATTR_SUBSCR_NAMESPACE</code> attributes set.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="ociaahan.htm#i439205">"Subscription Handle Attributes"</a></div>
</dd>
<dt>errhp (OUT)</dt>
<dd>
<p>An error handle that you can pass to <a href="oci17msc007.htm#i540516">OCIErrorGet()</a> for diagnostic information when there is an error.</p>
</dd>
<dt>mode (IN)</dt>
<dd>
<p>Call-specific mode. The only valid value is OCI_DEFAULT. <code>OCI_DEFAULT</code> executes the default call that discards all notifications on this subscription until the subscription is enabled.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3029"></a>Comments</p>
<p>This call is used to temporarily turn off notifications. This is useful when the application is running a critical section of the code and should not be interrupted.</p>
<p>The user need not be connected or authenticated to perform this operation. A registration must have been performed to the subscription specified by the subscription handle before this call is made.</p>
<p>All notifications after an <code>OCISubscriptionDisable()</code> are discarded by the system until an <a href="#i556532">OCISubscriptionEnable()</a> is performed.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3030"></a>Related Functions</p>
<p><a href="#BJFGAFJE">OCIAQListen2()</a>, <a href="#i556532">OCISubscriptionEnable()</a>, <a href="#i556581">OCISubscriptionPost()</a>, <a href="#i556638">OCISubscriptionRegister()</a>, <a href="#i556699">OCISubscriptionUnRegister()</a></p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="LNOCI17233" class="refsect2"><a id="i556532"></a>
<h2 class="refsect2">OCISubscriptionEnable()<a id="sthref3031"></a></h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3032"></a>Purpose</p>
<p>Enables a subscription registration that has been disabled. This turns on all notifications.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3033"></a>Syntax</p>
<pre>
ub4 OCISubscriptionEnable ( OCISubscription   *subscrhp,
                            OCIError          *errhp
                            ub4               mode );
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3034"></a>Parameters</p>
<dl>
<dt>subscrhp (IN)</dt>
<dd>
<p>A subscription handle with the <code>OCI_ATTR_SUBSCR_NAME</code> and <code>OCI_ATTR_SUBSCR_NAMESPACE</code> attributes set.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="ociaahan.htm#i439205">"Subscription Handle Attributes"</a></div>
</dd>
<dt>errhp (OUT)</dt>
<dd>
<p>An error handle that you can pass to <a href="oci17msc007.htm#i540516">OCIErrorGet()</a> for diagnostic information when there is an error.</p>
</dd>
<dt>mode (IN)</dt>
<dd>
<p>Call-specific mode. The only valid value is OCI_DEFAULT. This value executes the default call that buffers all notifications on this subscription until a subsequent enable is performed.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3035"></a>Comments</p>
<p>This call is used to turn on notifications after a subscription registration has been disabled.</p>
<p>The user need not be connected or authenticated to perform this operation. A registration must have been done for the specified subscription before this call is made.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3036"></a>Related Functions</p>
<p><a href="#BJFGAFJE">OCIAQListen2()</a>, <a href="oci17msc007.htm#i540717">OCISvcCtxToLda()</a>, <a href="#i556581">OCISubscriptionPost()</a>, <a href="#i556638">OCISubscriptionRegister()</a>, <a href="#i556699">OCISubscriptionUnRegister()</a></p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="LNOCI17234" class="refsect2"><a id="i556581"></a>
<h2 class="refsect2">OCISubscriptionPost()<a id="sthref3037"></a></h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3038"></a>Purpose</p>
<p>Posts to a subscription that allows all clients who are registered for the subscription to get notifications.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3039"></a>Syntax</p>
<pre>
ub4 OCISubscriptionPost ( OCISvcCtx         *svchp,
                          OCISubscription   **subscrhpp,
                          ub2               count,
                          OCIError          *errhp
                          ub4               mode );
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3040"></a>Parameters</p>
<dl>
<dt>svchp (IN)</dt>
<dd>
<p>An OCI service context (after release 7). This service context should have a valid authenticated user handle.</p>
</dd>
<dt>subscrhpp (IN)</dt>
<dd>
<p>An array of subscription handles. Each element of this array should be a subscription handle with the <code>OCI_ATTR_SUBSCR_NAME</code> and <code>OCI_ATTR_SUBSCR_NAMESPACE</code> attributes set.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="ociaahan.htm#i439205">"Subscription Handle Attributes"</a></div>
<p>The <code>OCI_ATTR_SUBSCR_PAYLOAD</code> attribute must be set for each subscription handle before this call. If it is not set, the payload is assumed to be <code>NULL</code> and no payload is delivered when the notification is received by the clients that have registered interest. Note that the caller must preserve the payload until the post is done, as the <code>OCIAttrSet()</code> call keeps track of the reference to the payload but does not copy the contents.</p>
</dd>
<dt>count (IN)</dt>
<dd>
<p>The number of elements in the subscription handle array.</p>
</dd>
<dt>errhp (OUT)</dt>
<dd>
<p>An error handle that you can pass to <a href="oci17msc007.htm#i540516">OCIErrorGet()</a> for diagnostic information when there is an error.</p>
</dd>
<dt>mode (IN)</dt>
<dd>
<p>Call-specific mode. The only valid value is OCI_DEFAULT. This value executes the default call.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3041"></a>Comments</p>
<p>Posting to a subscription involves identifying the subscription name and the payload if desired. If no payload is associated, the payload length can be set to 0.</p>
<p>This call provides a <span class="italic">best-effort</span> guarantee. A notification goes to registered clients at most once.</p>
<p>This call is primarily used for nonpersistent notification and is useful for several system events. If the application needs more rigid guarantees, it can use the Advanced Queuing functionality by enqueuing to the queue.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3042"></a>Related Functions</p>
<p><a href="#BJFGAFJE">OCIAQListen2()</a>, <a href="oci17msc007.htm#i540717">OCISvcCtxToLda()</a>, <a href="#i556532">OCISubscriptionEnable()</a>, <a href="#i556638">OCISubscriptionRegister()</a>, <a href="#i556699">OCISubscriptionUnRegister()</a></p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="LNOCI17235" class="refsect2"><a id="i556638"></a>
<h2 class="refsect2">OCISubscriptionRegister()<a id="sthref3043"></a></h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3044"></a>Purpose</p>
<p>Registers a callback for message notification.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3045"></a>Syntax</p>
<pre>
ub4 OCISubscriptionRegister ( OCISvcCtx         *svchp,
                              OCISubscription   **subscrhpp,
                              ub2               count,
                              OCIError          *errhp
                              ub4               mode );
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3046"></a>Parameters</p>
<dl>
<dt>svchp (IN)</dt>
<dd>
<p>An OCI service context (after release 7). This service context should have a valid authenticated user handle.</p>
</dd>
<dt>subscrhpp (IN)</dt>
<dd>
<p>An array of subscription handles. Each element of this array should be a subscription handle with all of the following attributes set:</p>
</dd>
</dl>
<ul>
<li>
<p><code>OCI_ATTR_SUBSCR_NAME</code></p>
</li>
<li>
<p><code>OCI_ATTR_SUBSCR_NAMESPACE</code></p>
</li>
<li>
<p><code>OCI_ATTR_SUBSCR_RECPTPROTO</code></p>
</li>
</ul>
<p>Otherwise, an error is returned.</p>
<p>One of the following attributes must also be set:</p>
<ul>
<li>
<p><code>OCI_ATTR_SUBSCR_CALLBACK</code></p>
</li>
<li>
<p><code>OCI_ATTR_SUBSCR_CTX</code></p>
</li>
<li>
<p><code>OCI_ATTR_SUBSCR_RECPT</code></p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="ociaahan.htm#i439205">"Subscription Handle Attributes"</a> for information about the handle attributes</div>
<p>When a notification is received for the registration denoted by <code>subscrhpp[i]</code>, either the user-defined callback function (<code>OCI_ATTR_SUBSCR_CALLBACK</code>) set for <code>subscrhpp[i]</code> is invoked with the context (<code>OCI_ATTR_SUBSCR_CTX</code>) set for <code>subscrhpp[i]</code>, or an email is sent to (<code>OCI_ATTR_SUBSCR_RECPT</code>) set for <code>subscrhpp[i]</code>, or the PL/SQL procedure (<code>OCI_ATTR_SUBSCR_RECPT</code>) set for <code>subscrhpp[i]</code> is invoked in the database, provided the subscriber of <code>subscrhpp[i]</code> has the appropriate permissions on the procedure.</p>
<dl>
<dt>count (IN)</dt>
<dd>
<p>The number of elements in the subscription handle array.</p>
</dd>
<dt>errhp (OUT)</dt>
<dd>
<p>An error handle that you can pass to <a href="oci17msc007.htm#i540516">OCIErrorGet()</a> for diagnostic information when there is an error.</p>
</dd>
<dt>mode (IN)</dt>
<dd>
<p>Call-specific mode. Valid values are:</p>
</dd>
</dl>
<ul>
<li>
<p><code>OCI_DEFAULT</code> - Use when there is only one server DN in the server DN descriptor. The registration request is sent to the database. If a database connection is not available, the registration request is detoured to the LDAP server.</p>
</li>
<li>
<p><code>OCI_REG_LDAPONLY</code> - The registration request is sent directly to the LDAP server. Use this mode when there are multiple server DNs in the server DN descriptor, or you are certain that a database connection is not available.</p>
</li>
</ul>
<p>Whenever a new client process comes up, or an old one goes down and comes back up, it must register for all subscriptions of interest. If the client stays up and the server first goes down and then comes back up, the client continues to receive notifications for registrations that are DISCONNECTED. However, the client does not receive notifications for CONNECTED registrations, as they are lost after the server goes down and comes back up.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3047"></a>Comments</p>
<p>This call is invoked for registration to a subscription that identifies the subscription name of interest and the associated callback to be invoked. Interest in several subscriptions can be registered simultaneously.</p>
<p>This interface is only valid for the asynchronous mode of message delivery. In this mode, a subscriber issues a registration call that specifies a callback. When messages are received that match the subscription criteria, the callback is invoked. The callback may then issue an explicit <code>message_receive</code> (dequeue) to retrieve the message.</p>
<p>The user must specify a subscription handle at registration time with the namespace attribute set to <code>OCI_SUBSCR_NAMESPACE_AQ</code>.</p>
<p>The subscription name is the string <code><a id="sthref3048"></a>SCHEMA.QUEUE</code> if the registration is for a single consumer queue and <code><a id="sthref3049"></a>SCHEMA.QUEUE:CONSUMER_NAME</code> if the registration is for a multiconsumer queue. The string should be in uppercase.</p>
<p>Each namespace has its own privilege model. If the user performing the registration is not entitled to register in the namespace for the specified subscription, an error is returned.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3050"></a>Related Functions</p>
<p><a href="#BJFGAFJE">OCIAQListen2()</a>, <a href="oci17msc007.htm#i540717">OCISvcCtxToLda()</a>, <a href="#i556532">OCISubscriptionEnable()</a>, <a href="#i556581">OCISubscriptionPost()</a>, <a href="#i556699">OCISubscriptionUnRegister()</a></p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="LNOCI17236" class="refsect2"><a id="i556699"></a>
<h2 class="refsect2">OCISubscriptionUnRegister()<a id="sthref3051"></a></h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3052"></a>Purpose</p>
<p>Unregisters a subscription that turns off notifications.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3053"></a>Syntax</p>
<pre>
ub4 OCISubscriptionUnRegister ( OCISvcCtx         *svchp,
                                OCISubscription   *subscrhp,
                                OCIError          *errhp
                                ub4               mode );
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3054"></a>Parameters</p>
<dl>
<dt>svchp (IN)</dt>
<dd>
<p>An OCI service context (after release 7). This service context should have a valid authenticated user handle.</p>
</dd>
<dt>subscrhp (IN)</dt>
<dd>
<p>A subscription handle with the <code>OCI_ATTR_SUBSCR_NAME</code> and <code>OCI_ATTR_SUBSCR_NAMESPACE</code> attributes set.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="ociaahan.htm#i439205">"Subscription Handle Attributes"</a></div>
</dd>
<dt>errhp (OUT)</dt>
<dd>
<p>An error handle that you can pass to <a href="oci17msc007.htm#i540516">OCIErrorGet()</a> for diagnostic information when there is an error.</p>
</dd>
<dt>mode (IN)</dt>
<dd>
<p>Call-specific mode. Valid values are:</p>
</dd>
</dl>
<ul>
<li>
<p><code>OCI_DEFAULT</code> - Use when there is only one server DN in the server DN descriptor. The registration request is sent to the database. If a database connection is not available, the registration request is detoured to the LDAP server.</p>
</li>
<li>
<p><code>OCI_REG_LDAPONLY</code> - The registration request is sent directly to the LDAP server. Use this mode when there are multiple server DNs in the server DN descriptor, or you are certain that a database connection is not available.</p>
</li>
</ul>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3055"></a>Comments</p>
<p>Unregistering a subscription ensures that the user does not receive notifications regarding the specified subscription in the future. If the user wants to resume notification, then the only option is to reregister for the subscription.</p>
<p>All notifications that would otherwise have been delivered are not delivered after a subsequent registration is performed because the user is no longer in the list of interested clients.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3056"></a>Related Functions</p>
<p><a href="#BJFGAFJE">OCIAQListen2()</a>, <a href="oci17msc007.htm#i540717">OCISvcCtxToLda()</a>, <a href="#i556532">OCISubscriptionEnable()</a>, <a href="#i556581">OCISubscriptionPost()</a>, <a href="#i556638">OCISubscriptionRegister()</a></p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" --></div>
<!-- class="refsect1" --></div>
<!-- class="refentry" -->
<div class="refentry"></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment1004">
<tr>
<td class="cellalignment1013">
<table class="cellalignment1009">
<tr>
<td class="cellalignment1008"><a href="oci17msc002.htm"><img width="24" height="24" src="../../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment1008"><a href="oci17msc004.htm"><img width="24" height="24" src="../../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;1996, 2014,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment1015">
<table class="cellalignment1007">
<tr>
<td class="cellalignment1008"><a href="../../index.htm"><img width="24" height="24" src="../../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment1008"><a href="../../nav/portal_booklist.htm"><img width="24" height="24" src="../../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment1008"><a href="toc.htm"><img width="24" height="24" src="../../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment1008"><a href="index.htm"><img width="24" height="24" src="../../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment1008"><a href="../../nav/mindx.htm"><img width="24" height="24" src="../../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment1008"><a href="../../dcommon/html/feedback.htm"><img width="24" height="24" src="../../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>
</body>
</html>
