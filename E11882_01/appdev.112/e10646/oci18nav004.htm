<!DOCTYPE html>
<html lang="en" >
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1">
<meta charset="utf-8">
<title>OCI Miscellaneous Object Functions</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Merged Version 1023" />
<meta name="dcterms.created" content="2014-07-18T15:18:35Z" />
<meta name="robots" content="all" />
<meta name="dcterms.title" content="Call Interface Programmer's Guide" />
<meta name="dcterms.identifier" content="E10646-15" />
<meta name="dcterms.isVersionOf" content="LNOCI" />
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;1996, 2014,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved." />
<link rel="Start" href="../../index.htm" title="Home" type="text/html" />
<link rel="Copyright" href="../../dcommon/html/cpyr.htm" title="Copyright" type="text/html" />

<script type="application/javascript"  src="../../dcommon/js/headfoot.js"></script>
<script type="application/javascript"  src="../../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html" />
<link rel="Index" href="index.htm" title="Index" type="text/html" />
<link rel="Prev" href="oci18nav003.htm" title="Previous" type="text/html" />
<link rel="Next" href="oci18nav005.htm" title="Next" type="text/html" />
<link rel="alternate" href="../e10646.pdf" title="PDF version" type="application/pdf" />
<link rel="schema.dcterms" href="http://purl.org/dc/terms/" />
<link rel="stylesheet" href="../../dcommon/css/fusiondoc.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/header.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/footer.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/fonts.css">
<link rel="stylesheet" href="../../dcommon/css/foundation.css">
<link rel="stylesheet" href="../../dcommon/css/codemirror.css">
<link rel="stylesheet" type="text/css" title="Default" href="../../nav/css/html5.css">
<link rel="stylesheet" href="../../dcommon/css/respond-480-tablet.css">
<link rel="stylesheet" href="../../dcommon/css/respond-768-laptop.css">
<link rel="stylesheet" href="../../dcommon/css/respond-1140-deskop.css">
<script type="application/javascript" src="../../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">39/79</span> <!-- End Header --><a id="i469284"></a>
<div id="LNOCI174" class="refsect1">
<h1 class="refsect1">OCI Miscellaneous Object Functions</h1>
<p><a href="#CACFHJBE">Table 18-8</a> describes the miscellaneous object functions that are described in this section.</p>
<div id="LNOCI17335" class="tblformalwide">
<p class="titleintable"><a id="sthref3525"></a><a id="CACFHJBE"></a>Table 18-8 Miscellaneous Object Functions</p>
<table class="cellalignment1011" title="Miscellaneous Object Functions" summary="This table is described in the preceding text" dir="ltr">
<thead>
<tr class="cellalignment1005">
<th class="cellalignment1012" id="r1c1-t23">Function</th>
<th class="cellalignment1012" id="r1c2-t23">Purpose</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r2c1-t23" headers="r1c1-t23">
<p><a href="#i469562">"OCIObjectCopy()"</a></p>
</td>
<td class="cellalignment1013" headers="r2c1-t23 r1c2-t23">
<p>Copy one instance to another</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r3c1-t23" headers="r1c1-t23">
<p><a href="#i474801">"OCIObjectGetAttr()"</a></p>
</td>
<td class="cellalignment1013" headers="r3c1-t23 r1c2-t23">
<p>Get an object attribute</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r4c1-t23" headers="r1c1-t23">
<p><a href="#i469963">"OCIObjectGetInd()"</a></p>
</td>
<td class="cellalignment1013" headers="r4c1-t23 r1c2-t23">
<p>Get <code>NULL</code> structure of an instance</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r5c1-t23" headers="r1c1-t23">
<p><a href="#i469995">"OCIObjectGetObjectRef()"</a></p>
</td>
<td class="cellalignment1013" headers="r5c1-t23 r1c2-t23">
<p>Return reference to a given object</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r6c1-t23" headers="r1c1-t23">
<p><a href="#i470280">"OCIObjectGetTypeRef()"</a></p>
</td>
<td class="cellalignment1013" headers="r6c1-t23 r1c2-t23">
<p>Get a reference to a TDO of an instance</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r7c1-t23" headers="r1c1-t23">
<p><a href="#i469657">"OCIObjectLock()"</a></p>
</td>
<td class="cellalignment1013" headers="r7c1-t23 r1c2-t23">
<p>Lock a persistent object</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r8c1-t23" headers="r1c1-t23">
<p><a href="#i469704">"OCIObjectLockNoWait()"</a></p>
</td>
<td class="cellalignment1013" headers="r8c1-t23 r1c2-t23">
<p>Lock a persistent object but do not wait for the lock</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r9c1-t23" headers="r1c1-t23">
<p><a href="#i470965">"OCIObjectNew()"</a></p>
</td>
<td class="cellalignment1013" headers="r9c1-t23 r1c2-t23">
<p>Create a new instance</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r10c1-t23" headers="r1c1-t23">
<p><a href="#i470296">"OCIObjectSetAttr()"</a></p>
</td>
<td class="cellalignment1013" headers="r10c1-t23 r1c2-t23">
<p>Set an object attribute</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformalwide" -->
<div id="LNOCI17336" class="refsect2"><a id="i469562"></a>
<h2 class="refsect2">OCIObjectCopy()<a id="sthref3526"></a></h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3527"></a>Purpose</p>
<p>Copies a source instance to a destination.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3528"></a>Syntax</p>
<pre>
sword OCIObjectCopy ( OCIEnv              *env,
                      OCIError            *err, 
                      const OCISvcCtx     *svc,
                      void                *source, 
                      void                *null_source, 
                      void                *target, 
                      void                *null_target, 
                      OCIType             *tdo,
                      OCIDuration         duration, 
                      ub1                 option );
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3529"></a>Parameters</p>
<dl>
<dt>env (IN/OUT)</dt>
<dd>
<p>The OCI environment handle initialized in object mode. See the descriptions of <a href="oci16rel001.htm#i556149">OCIEnvCreate()</a>, <a href="oci16rel001.htm#i562098">OCIEnvNlsCreate()</a>, and <a href="ociaedep001.htm#i556330">OCIInitialize()</a> (deprecated) for more information.</p>
</dd>
<dt>err (IN/OUT)</dt>
<dd>
<p>The OCI error handle. If there is an error, it is recorded in <code>err</code>, and this function returns <code>OCI_ERROR</code>. Obtain diagnostic information by calling <a href="oci17msc007.htm#i540516">OCIErrorGet()</a>.</p>
</dd>
<dt>svc (IN)</dt>
<dd>
<p>An OCI service context handle, specifying the service context on which the copy operation is occurring.</p>
</dd>
<dt>source (IN)</dt>
<dd>
<p>A pointer to the source instance; if it is an object, it must be pinned.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="oci18nav005.htm#i433563">"OCIObjectPin()"</a></div>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<dl>
<dt>null_source (IN)</dt>
<dd>
<p>Pointer to the <code>NULL</code> structure of the source object.</p>
</dd>
<dt>target (IN)</dt>
<dd>
<p>A pointer to the target instance; if it is an object, it must be pinned.</p>
</dd>
<dt>null_target (IN)</dt>
<dd>
<p>A pointer to the <code>NULL</code> structure of the target object.</p>
</dd>
<dt>tdo (IN)</dt>
<dd>
<p>The TDO for both the source and the target. Can be retrieved with <code>OCIDescribeAny()</code>.</p>
</dd>
<dt>duration (IN)</dt>
<dd>
<p>Allocation duration of the target memory.</p>
</dd>
<dt>option (IN)</dt>
<dd>
<p>This parameter is currently unused. Pass as zero or <code>OCI_DEFAULT</code>.</p>
</dd>
</dl>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3530"></a>Comments</p>
<p>This function copies the contents of the <code>source</code> instance to the <code>target</code> instance. This function performs a deep copy such that all of the following information is copied:</p>
<ul>
<li>
<p>All the top-level attributes (see the exceptions later)</p>
</li>
<li>
<p>All secondary memory (of the source) reachable from the top-level attributes</p>
</li>
<li>
<p>The <code>NULL</code> structure of the instance</p>
</li>
</ul>
<p>Memory is allocated with the duration specified in the <code>duration</code> parameter.</p>
<p>Certain data items are not copied:</p>
<ul>
<li>
<p>If the option <code>OCI_OBJECTCOPY_NOREF</code> is specified in the <code>option</code> parameter, then all references in the source are not copied. Instead, the references in the target are set to <code>NULL</code>.</p>
</li>
<li>
<p>If the attribute is an internal LOB, then only the LOB locator from the source object is copied. A copy of the LOB data is not made until <a href="oci18nav001.htm#i469090">OCIObjectFlush()</a> is called. Before the target object is flushed, both the source and the target locators refer to the same LOB value.</p>
</li>
</ul>
<p>The target or the containing instance of the target must have been created. This can be done with <a href="#i470965">OCIObjectNew()</a> or <a href="oci18nav005.htm#i433563">OCIObjectPin()</a> depending on whether the target object exists.</p>
<p>The <code>source</code> and <code>target</code> instances must be of the same type. If the source and target are located in different databases, then the same type must exist in both databases.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3531"></a>Related Functions</p>
<p><a href="oci18nav005.htm#i433563">OCIObjectPin()</a></p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="LNOCI17337" class="refsect2"><a id="i474801"></a>
<h2 class="refsect2">OCIObjectGetAttr()<a id="sthref3532"></a></h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3533"></a>Purpose</p>
<p>Retrieves an object attribute.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3534"></a>Syntax</p>
<pre>
sword OCIObjectGetAttr ( OCIEnv             *env,
                         OCIError           *err,
                         void               *instance, 
                         void               *null_struct, 
                         struct OCIType     *tdo,
                         const OraText      **names, 
                         const ub4          *lengths, 
                         const ub4          name_count, 
                         const ub4          *indexes, 
                         const ub4          index_count, 
                         OCIInd             *attr_null_status, 
                         void               **attr_null_struct, 
                         void               **attr_value, 
                         struct OCIType     **attr_tdo );
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3535"></a>Parameters</p>
<dl>
<dt>env (IN/OUT)</dt>
<dd>
<p>The OCI environment handle initialized in object mode. See the descriptions of <a href="oci16rel001.htm#i556149">OCIEnvCreate()</a>, <a href="oci16rel001.htm#i562098">OCIEnvNlsCreate()</a>, and <a href="ociaedep001.htm#i556330">OCIInitialize()</a> (deprecated) for more information.</p>
</dd>
<dt>err (IN/OUT)</dt>
<dd>
<p>The OCI error handle. If there is an error, it is recorded in <code>err</code>, and this function returns <code>OCI_ERROR</code>. Obtain diagnostic information by calling <a href="oci17msc007.htm#i540516">OCIErrorGet()</a>.</p>
</dd>
<dt>instance (IN)</dt>
<dd>
<p>Pointer to an object.</p>
</dd>
<dt>null_struct (IN)</dt>
<dd>
<p>The <code>NULL</code> structure of the object or array.</p>
</dd>
<dt>tdo (IN)</dt>
<dd>
<p>Pointer to the type descriptor object (TDO).</p>
</dd>
<dt>names (IN)</dt>
<dd>
<p>Array of attribute names. This is used to specify the names of the attributes in the path expression.</p>
</dd>
<dt>lengths (IN)</dt>
<dd>
<p>Array of lengths of attribute names, in bytes.</p>
</dd>
<dt>name_count (IN)</dt>
<dd>
<p>Number of elements in the array <code>names</code>.</p>
</dd>
<dt>indexes (IN) [optional]</dt>
<dd>
<p>Not currently supported. Pass as <code>(ub4 *)0</code>.</p>
</dd>
<dt>index_count (IN) [optional]</dt>
<dd>
<p>Not currently supported. Pass as <code>(ub4)0</code>.</p>
</dd>
<dt>attr_null_status (OUT)</dt>
<dd>
<p>The <code>NULL</code> status of the attribute if the type of attribute is primitive.</p>
</dd>
<dt>attr_null_struct (OUT)</dt>
<dd>
<p>This parameter is filled only for object and opaque attributes, not for collections. For collections (pass <code>OCICollGetElem</code>), <code>attr_null_struct</code> is <code>NULL</code>. For collections, this parameter indicates if the entire collection is <code>NULL</code> or not.</p>
</dd>
<dt>attr_value (OUT)</dt>
<dd>
<p>Pointer to the attribute value.</p>
</dd>
<dt>attr_tdo (OUT)</dt>
<dd>
<p>Pointer to the TDO of the attribute.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3536"></a>Comments</p>
<p>This function gets a value from an object or from an array. If the parameter <code>instance</code> points to an object, then the path expression specifies the location of the attribute in the object. It is assumed that the object is pinned and that the value returned is valid until the object is unpinned.</p>
<p>If both <code>attr_null_status</code> and <code>attr_null_struct</code> are <code>NULL</code>, no <code>NULL</code> information is returned.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3537"></a>Related Functions</p>
<p><a href="#i470296">OCIObjectSetAttr()</a></p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="LNOCI17338" class="refsect2"><a id="i469963"></a>
<h2 class="refsect2">OCIObjectGetInd()<a id="sthref3538"></a></h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3539"></a>Purpose</p>
<p>Retrieves the <code>NULL</code> indicator structure of a standalone instance.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3540"></a>Syntax</p>
<pre>
sword OCIObjectGetInd ( OCIEnv        *env, 
                        OCIError      *err, 
                        void          *instance, 
                        void          **null_struct );
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3541"></a>Parameters</p>
<dl>
<dt>env (IN/OUT)</dt>
<dd>
<p>The OCI environment handle initialized in object mode. See the descriptions of <a href="oci16rel001.htm#i556149">OCIEnvCreate()</a>, <a href="oci16rel001.htm#i562098">OCIEnvNlsCreate()</a>, and <a href="ociaedep001.htm#i556330">OCIInitialize()</a> (deprecated) for more information.</p>
</dd>
<dt>err (IN/OUT)</dt>
<dd>
<p>The OCI error handle. If there is an error, it is recorded in <code>err</code>, and this function returns <code>OCI_ERROR</code>. Obtain diagnostic information by calling <a href="oci17msc007.htm#i540516">OCIErrorGet()</a>.</p>
</dd>
<dt>instance (IN)</dt>
<dd>
<p>A pointer to the instance whose <code>NULL</code> structure is being retrieved. The instance must be standalone. If <code>instance</code> is an object, it must already be pinned.</p>
</dd>
<dt>null_struct (OUT)</dt>
<dd>
<p>The <code>NULL</code> indicator structure for the instance.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="oci11obj.htm#i440892">"NULL Indicator Structure"</a> for a discussion of the NULL indicator structure and examples of its use</div>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3542"></a>Comments</p>
<p>None.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3543"></a>Related Functions</p>
<p><a href="oci18nav005.htm#i433563">OCIObjectPin()</a></p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="LNOCI17339" class="refsect2"><a id="i469995"></a>
<h2 class="refsect2">OCIObjectGetObjectRef()<a id="sthref3544"></a></h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3545"></a>Purpose</p>
<p>Returns a reference to a given persistent object.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3546"></a>Syntax</p>
<pre>
sword OCIObjectGetObjectRef ( OCIEnv        *env, 
                              OCIError      *err,
                              void          *object, 
                              OCIRef        *object_ref );
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3547"></a>Parameters</p>
<dl>
<dt>env (IN/OUT)</dt>
<dd>
<p>The OCI environment handle initialized in object mode. See the descriptions of <a href="oci16rel001.htm#i556149">OCIEnvCreate()</a>, <a href="oci16rel001.htm#i562098">OCIEnvNlsCreate()</a>, and <a href="ociaedep001.htm#i556330">OCIInitialize()</a> (deprecated) for more information.</p>
</dd>
<dt>err (IN/OUT)</dt>
<dd>
<p>The OCI error handle. If there is an error, it is recorded in <code>err</code>, and this function returns <code>OCI_ERROR</code>. Obtain diagnostic information by calling <a href="oci17msc007.htm#i540516">OCIErrorGet()</a>.</p>
</dd>
<dt>object (IN)</dt>
<dd>
<p>Pointer to a persistent object. It must already be pinned.</p>
</dd>
<dt>object_ref (OUT)</dt>
<dd>
<p>A reference to the object specified in <code>object</code>. The reference must already be allocated. This can be accomplished with <code>OCIObjectNew()</code>.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3548"></a>Comments</p>
<p>This function returns a reference to the given persistent object, when given a pointer to the object. Passing a value (rather than an object) to this function causes an error.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="oci11obj.htm#i440653">"Object Meta-Attributes"</a></div>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3549"></a>Related Functions</p>
<p><a href="oci18nav005.htm#i433563">OCIObjectPin()</a></p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="LNOCI17340" class="refsect2"><a id="i470280"></a>
<h2 class="refsect2">OCIObjectGetTypeRef()<a id="sthref3550"></a></h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3551"></a>Purpose</p>
<p>Returns a reference to the type descriptor object (TDO) of a standalone instance.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3552"></a>Syntax</p>
<pre>
sword OCIObjectGetTypeRef ( OCIEnv        *env, 
                            OCIError      *err, 
                            void          *instance, 
                            OCIRef        *type_ref );
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3553"></a>Parameters</p>
<dl>
<dt>env (IN/OUT)</dt>
<dd>
<p>The OCI environment handle initialized in object mode. See the descriptions of <a href="oci16rel001.htm#i556149">OCIEnvCreate()</a>, <a href="oci16rel001.htm#i562098">OCIEnvNlsCreate()</a>, and <a href="ociaedep001.htm#i556330">OCIInitialize()</a> (deprecated) for more information.</p>
</dd>
<dt>err (IN/OUT)</dt>
<dd>
<p>The OCI error handle. If there is an error, it is recorded in <code>err</code>, and this function returns <code>OCI_ERROR</code>. Obtain diagnostic information by calling <a href="oci17msc007.htm#i540516">OCIErrorGet()</a>.</p>
</dd>
<dt>instance (IN)</dt>
<dd>
<p>A pointer to the standalone instance. It must be standalone, and if it is an object, it must already be pinned.</p>
</dd>
<dt>type_ref (OUT)</dt>
<dd>
<p>A reference to the type of the object. The reference must already be allocated. This can be accomplished with <a href="#i470965">OCIObjectNew()</a>.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3554"></a>Comments</p>
<p>None.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3555"></a>Related Functions</p>
<p><a href="oci18nav005.htm#i433563">OCIObjectPin()</a></p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="LNOCI17341" class="refsect2"><a id="i469657"></a>
<h2 class="refsect2">OCIObjectLock()<a id="sthref3556"></a></h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3557"></a>Purpose</p>
<p>Locks a persistent object at the server.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3558"></a>Syntax</p>
<pre>
sword OCIObjectLock ( OCIEnv        *env, 
                      OCIError      *err, 
                      void          *object );
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3559"></a>Parameters</p>
<dl>
<dt>env (IN/OUT)</dt>
<dd>
<p>The OCI environment handle initialized in object mode. See the descriptions of <a href="oci16rel001.htm#i556149">OCIEnvCreate()</a>, <a href="oci16rel001.htm#i562098">OCIEnvNlsCreate()</a>, and <a href="ociaedep001.htm#i556330">OCIInitialize()</a> (deprecated) for more information.</p>
</dd>
<dt>err (IN/OUT)</dt>
<dd>
<p>The OCI error handle. If there is an error, it is recorded in <code>err</code>, and this function returns <code>OCI_ERROR</code>. Obtain diagnostic information by calling <a href="oci17msc007.htm#i540516">OCIErrorGet()</a>.</p>
</dd>
<dt>object (IN)</dt>
<dd>
<p>A pointer to the persistent object being locked. It must already be pinned.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3560"></a>Comments</p>
<p>This function returns an error for transient objects and values. It also returns an error if the object does not exist.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="oci14oca.htm#i440635">"Locking Objects for Update"</a></div>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3561"></a>Related Functions</p>
<p><a href="oci18nav005.htm#i433563">OCIObjectPin()</a>, <a href="oci18nav003.htm#i469520">OCIObjectIsLocked()</a>, <a href="oci18nav003.htm#i469364">OCIObjectGetProperty()</a><span class="italic">,</span> <a href="#i469704">OCIObjectLockNoWait()</a></p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="LNOCI17342" class="refsect2"><a id="i469704"></a>
<h2 class="refsect2">OCIObjectLockNoWait()<a id="sthref3562"></a></h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3563"></a>Purpose</p>
<p>Locks a persistent object at the server but does not wait for the lock. Returns an error if the lock is unavailable.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3564"></a>Syntax</p>
<pre>
sword OCIObjectLockNoWait ( OCIEnv        *env, 
                            OCIError      *err, 
                            void          *object );
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3565"></a>Parameters</p>
<dl>
<dt>env (IN/OUT)</dt>
<dd>
<p>The OCI environment handle initialized in object mode. See the descriptions of <a href="oci16rel001.htm#i556149">OCIEnvCreate()</a>, <a href="oci16rel001.htm#i562098">OCIEnvNlsCreate()</a>, and <a href="ociaedep001.htm#i556330">OCIInitialize()</a> (deprecated) for more information.</p>
</dd>
<dt>err (IN/OUT)</dt>
<dd>
<p>The OCI error handle. If there is an error, it is recorded in <code>err</code>, and this function returns <code>OCI_ERROR</code>. Obtain diagnostic information by calling <a href="oci17msc007.htm#i540516">OCIErrorGet()</a>.</p>
</dd>
<dt>object (IN)</dt>
<dd>
<p>A pointer to the persistent object being locked. It must already be pinned.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3566"></a>Comments</p>
<p>This function locks a persistent object at the server. However, unlike <a href="#i469657">OCIObjectLock()</a>, this function does not wait if another user holds the lock on the object and an error is returned if the object is currently locked by another user. This function also returns an error for transient objects and values, or objects that do not exist.</p>
<p>The lock of an object is released at the end of a transaction.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="oci14oca.htm#i440635">"Locking Objects for Update"</a></div>
</div>
<!-- class="refsubsect" -->
<p><code>OCIObjectLockNoWait()</code> returns the following values:</p>
<ul>
<li>
<p><code>OCI_INVALID_HANDLE</code>, if the environment handle or error handle is <code>NULL</code></p>
</li>
<li>
<p><code>OCI_SUCCESS</code>, if the operation succeeds</p>
</li>
<li>
<p><code>OCI_ERROR</code>, if the operation fails</p>
</li>
</ul>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3567"></a>Related Functions</p>
<p><a href="oci18nav005.htm#i433563">OCIObjectPin()</a>, <a href="oci18nav003.htm#i469520">OCIObjectIsLocked()</a>, <a href="oci18nav003.htm#i469364">OCIObjectGetProperty()</a><span class="italic">,</span> <a href="#i469657">OCIObjectLock()</a></p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="LNOCI17343" class="refsect2"><a id="i470965"></a>
<h2 class="refsect2">OCIObjectNew()<a id="sthref3568"></a></h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3569"></a>Purpose</p>
<p>Creates a standalone instance.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3570"></a>Syntax</p>
<pre>
sword OCIObjectNew ( OCIEnv            *env, 
                     OCIError          *err, 
                     const OCISvcCtx   *svc, 
                     OCITypeCode       typecode,
                     OCIType           *tdo, 
                     void              *table,
                     OCIDuration       duration,
                     boolean           value,
                     void              **instance ); 
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3571"></a>Parameters</p>
<dl>
<dt>env (IN/OUT)</dt>
<dd>
<p>The OCI environment handle initialized in object mode. The handle can be initialized in UTF-16 (Unicode) mode. See the description of <code><a href="oci16rel001.htm#i562098">OCIEnvNlsCreate()</a></code>.</p>
</dd>
<dt>err (IN/OUT)</dt>
<dd>
<p>The OCI error handle. If there is an error, it is recorded in <code>err</code>, and this function returns <code>OCI_ERROR</code>. Obtain diagnostic information by calling <a href="oci17msc007.htm#i540516">OCIErrorGet()</a>.</p>
</dd>
<dt>svc (IN)</dt>
<dd>
<p>OCI service handle.</p>
</dd>
<dt>typecode (IN)</dt>
<dd>
<p>The typecode of the type of the instance.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="oci03typ.htm#i446338">"Typecodes"</a></div>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<dl>
<dt>tdo (IN) [optional]</dt>
<dd>
<p>Pointer to the type descriptor object. The TDO describes the type of the instance that is to be created. See <code><a href="oci18nav006.htm#i455564">OCITypeByName()</a></code> for obtaining a TDO. The TDO is required for creating a named type, such as an object or a collection.</p>
</dd>
<dt>table (IN) [optional]</dt>
<dd>
<p>Pointer to a table object that specifies a table in the server. <code>This</code> parameter can be set to <code>NULL</code> if no table is given. See the following description to learn how the table object and the TDO are used together to determine the kind of instances (persistent, transient, value) to be created. Also see <code><a href="oci18nav005.htm#i433457">OCIObjectPinTable()</a></code> for retrieving a table object.</p>
</dd>
<dt>duration (IN)</dt>
<dd>
<p>This is an overloaded parameter. The use of this parameter is based on the kind of the instance that is to be created. See <a href="#CACGCCAD">Table 18-9</a> for more information.</p>
</dd>
</dl>
<ul>
<li>
<p>For a persistent object type of instance, this parameter specifies the pin duration.</p>
</li>
<li>
<p>For a transient object type of instance, this parameter specifies the allocation duration and pin duration.</p>
</li>
<li>
<p>For a value type of instance, this parameter specifies the allocation duration.</p>
</li>
</ul>
<dl>
<dt>value (IN)</dt>
<dd>
<p>Specifies whether the created object is a value. If <code>TRUE</code>, then a value is created. Otherwise, a referenceable object is created. If the instance is not an object, then this parameter is ignored.</p>
</dd>
<dt>instance (OUT)</dt>
<dd>
<p>Address of the newly created instance. The instance can be a character string in UTF-16 (Unicode) if the environment handle has the appropriate setting and the object is <code>OCIString</code>.</p>
</dd>
</dl>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3572"></a>Comments</p>
<p>This function creates a new instance of the type specified by the typecode or the TDO. It can create an OCIString object with a Unicode buffer if the typecode indicates the object to be created is <code>OCIString</code>.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="oci03typ.htm#i446338">"Typecodes"</a></div>
</div>
<!-- class="refsubsect" -->
<p><a href="#CACGCCAD">Table 18-9</a> shows that based on the parameters <code>typecode</code> (or <code>tdo</code>), <code>value</code>, and <code>table</code>, different instances are created.</p>
<div id="LNOCI17344" class="tblformal">
<p class="titleintable"><a id="sthref3573"></a><a id="CACGCCAD"></a>Table 18-9 Instances Created</p>
<table class="cellalignment1016" title="Instances Created " summary="This table is described in the preceding text" dir="ltr">
<thead>
<tr class="cellalignment1005">
<th class="cellalignment1012" id="r1c1-t31">Type of the Instance</th>
<th class="cellalignment1012" id="r1c2-t31">Table != NULL</th>
<th class="cellalignment1012" id="r1c3-t31">Table == NULL</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r2c1-t31" headers="r1c1-t31">
<p>object type (<span class="italic">value</span>=<code>TRUE</code>)</p>
</td>
<td class="cellalignment1013" headers="r2c1-t31 r1c2-t31">
<p>value</p>
</td>
<td class="cellalignment1013" headers="r2c1-t31 r1c3-t31">
<p>value</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r3c1-t31" headers="r1c1-t31">
<p>object type (<span class="italic">value</span>=<code>FALSE</code>)</p>
</td>
<td class="cellalignment1013" headers="r3c1-t31 r1c2-t31">
<p>persistent object</p>
</td>
<td class="cellalignment1013" headers="r3c1-t31 r1c3-t31">
<p>transient object</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r4c1-t31" headers="r1c1-t31">
<p>built-in type</p>
</td>
<td class="cellalignment1013" headers="r4c1-t31 r1c2-t31">
<p>value</p>
</td>
<td class="cellalignment1013" headers="r4c1-t31 r1c3-t31">
<p>value</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r5c1-t31" headers="r1c1-t31">
<p>collection type</p>
</td>
<td class="cellalignment1013" headers="r5c1-t31 r1c2-t31">
<p>value</p>
</td>
<td class="cellalignment1013" headers="r5c1-t31 r1c3-t31">
<p>value</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<p>This function allocates the top-level memory chunk of an instance. The attributes in the top-level memory are initialized, which means that an attribute of <code>VARCHAR2</code> is initialized to an <code>OCIString</code> of 0 length. If the instance is an object, the object is marked existent but is atomically <code>NULL</code>.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="oci11obj.htm#i446572">"Create Objects Based on Object Views and Object Tables with Primary-Key-Based OIDs"</a> for information about creating new objects based on object views or user-created OIDs</div>
<dl>
<dt>For Persistent Objects</dt>
<dd>
<p>The object is marked dirty and existent. The allocation duration for the object is session. The object is pinned, and the pin duration is specified by the given parameter <code>duration</code>. Creating a persistent object does not cause any entries to be made into a database table until the object is flushed to the server.</p>
</dd>
<dt>For Transient Objects</dt>
<dd>
<p>The object is pinned. The allocation duration and the pin duration are specified by the given parameter <code>duration</code>.</p>
</dd>
<dt>For Values</dt>
<dd>
<p>The allocation duration is specified by the given parameter <code>duration</code>.</p>
</dd>
</dl>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3574"></a>Attribute Values of New Objects</p>
<p>By default, all attributes of a newly created object have <code>NULL</code> values. After initializing attribute data, the user must change the corresponding <code>NULL</code> status of each attribute to non-<code>NULL</code>.</p>
<p>It is possible to have attributes set to non-<code>NULL</code> values when an object is created. This is accomplished by setting the <a id="sthref3575"></a><code>OCI_ATTR_OBJECT_NEWNOTNULL</code> attribute of the environment handle to <code>TRUE</code> using <code>OCIAttrSet()</code>. This mode can later be turned off by setting the attribute to <code>FALSE</code>. If <code>OCI_ATTR_OBJECT_NEWNOTNULL</code> is set to <code>TRUE</code>, then <code>OCIObjectNew()</code> creates a non-<code>NULL</code> object.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="oci11obj.htm#i446308">"Attribute Values of New Objects"</a></div>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3576"></a>Objects with LOB Attributes</p>
<p>If the object contains an internal LOB attribute, the LOB is set to empty. The object must be marked as dirty and flushed (to insert the object into the table) and repinned before the user can start writing data into the LOB. When pinning the object after creating it, you must use the <code>OCI_PIN_LATEST</code> pin option to retrieve the newly updated LOB locator from the server.</p>
<p>If the object contains an external LOB attribute (FILE), the FILE locator is allocated but not initialized. The user must call <a href="oci17msc002.htm#i450493">OCILobFileSetName()</a> to initialize the FILE attribute before flushing the object to the database. It is an error to perform an <code>INSERT</code> or <code>UPDATE</code> operation on a FILE without first indicating a directory object and file name. Once the file name is set, the user can start reading from the FILE.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
Oracle Database supports only binary FILEs (<code>BFILEs</code>).</div>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3577"></a>Related Functions</p>
<p><a href="oci18nav005.htm#i433457">OCIObjectPinTable()</a>, <a href="oci18nav005.htm#i430212">OCIObjectFree()</a></p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="LNOCI17345" class="refsect2"><a id="i470296"></a>
<h2 class="refsect2">OCIObjectSetAttr()<a id="sthref3578"></a></h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3579"></a>Purpose</p>
<p>Sets an object attribute.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3580"></a>Syntax</p>
<pre>
sword OCIObjectSetAttr ( OCIEnv              *env, 
                         OCIError            *err, 
                         void                *instance, 
                         void                *null_struct, 
                         struct OCIType      *tdo, 
                         const OraText       **names, 
                         const ub4           *lengths, 
                         const ub4           name_count,
                         const ub4           *indexes, 
                         const ub4           index_count, 
                         const OCIInd        *attr_null_status, 
                         const void          *attr_null_struct,
                         const void          *attr_value );
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3581"></a>Parameters</p>
<dl>
<dt>env (IN/OUT)</dt>
<dd>
<p>The OCI environment handle initialized in object mode. See the descriptions of <a href="oci16rel001.htm#i556149">OCIEnvCreate()</a>, <a href="oci16rel001.htm#i562098">OCIEnvNlsCreate()</a>, and <a href="ociaedep001.htm#i556330">OCIInitialize()</a> (deprecated) for more information.</p>
</dd>
<dt>err (IN/OUT)</dt>
<dd>
<p>The OCI error handle. If there is an error, it is recorded in <code>err</code>, and this function returns <code>OCI_ERROR</code>. Obtain diagnostic information by calling <a href="oci17msc007.htm#i540516">OCIErrorGet()</a>.</p>
</dd>
<dt>instance (IN)</dt>
<dd>
<p>Pointer to an object instance.</p>
</dd>
<dt>null_struct (IN)</dt>
<dd>
<p>The <code>NULL</code> structure of the object instance or array.</p>
</dd>
<dt>tdo (IN)</dt>
<dd>
<p>Pointer to the TDO.</p>
</dd>
<dt>names (IN)</dt>
<dd>
<p>Array of attribute names. This is used to specify the names of the attributes in the path expression.</p>
</dd>
<dt>lengths (IN)</dt>
<dd>
<p>Array of lengths of attribute names, in bytes.</p>
</dd>
<dt>name_count (IN)</dt>
<dd>
<p>Number of elements in the array <code>names</code>.</p>
</dd>
<dt>indexes (IN) [optional]</dt>
<dd>
<p>Not currently supported. Pass as <code>(ub4 *)0</code>.</p>
</dd>
<dt>index_count (IN) [optional]</dt>
<dd>
<p>Not currently supported. Pass as <code>(ub4)0</code>.</p>
</dd>
<dt>attr_null_status (IN)</dt>
<dd>
<p>The <code>NULL</code> status of the attribute if the type of attribute is primitive.</p>
</dd>
<dt>attr_null_struct (IN)</dt>
<dd>
<p>The <code>NULL</code> structure of an object or collection attribute.</p>
</dd>
<dt>attr_value (IN)</dt>
<dd>
<p>Pointer to the attribute value.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3582"></a>Comments</p>
<p>This function sets the attribute of the given object with the given value. The position of the attribute is specified as a path expression, which is an array of names and an array of indexes.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3583"></a>Example</p>
<p>For the path expression stanford.cs.stu[5].addr, the arrays appear as:</p>
<p>names = {"stanford", "cs", "stu", "addr"}</p>
<p>lengths = {8, 2, 3, 4}</p>
<p>indexes = {5}</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3584"></a>Related Functions</p>
<p><a href="#i474801">OCIObjectGetAttr()</a></p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" --></div>
<!-- class="refsect1" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment1004">
<tr>
<td class="cellalignment1013">
<table class="cellalignment1009">
<tr>
<td class="cellalignment1008"><a href="oci18nav003.htm"><img width="24" height="24" src="../../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment1008"><a href="oci18nav005.htm"><img width="24" height="24" src="../../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;1996, 2014,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment1015">
<table class="cellalignment1007">
<tr>
<td class="cellalignment1008"><a href="../../index.htm"><img width="24" height="24" src="../../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment1008"><a href="../../nav/portal_booklist.htm"><img width="24" height="24" src="../../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment1008"><a href="toc.htm"><img width="24" height="24" src="../../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment1008"><a href="index.htm"><img width="24" height="24" src="../../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment1008"><a href="../../nav/mindx.htm"><img width="24" height="24" src="../../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment1008"><a href="../../dcommon/html/feedback.htm"><img width="24" height="24" src="../../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>
</body>
</html>
