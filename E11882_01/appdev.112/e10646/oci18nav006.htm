<!DOCTYPE html>
<html lang="en" >
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1">
<meta charset="utf-8">
<title>OCI Type Information Accessor Functions</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Merged Version 1023" />
<meta name="dcterms.created" content="2014-07-18T15:18:36Z" />
<meta name="robots" content="all" />
<meta name="dcterms.title" content="Call Interface Programmer's Guide" />
<meta name="dcterms.identifier" content="E10646-15" />
<meta name="dcterms.isVersionOf" content="LNOCI" />
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;1996, 2014,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved." />
<link rel="Start" href="../../index.htm" title="Home" type="text/html" />
<link rel="Copyright" href="../../dcommon/html/cpyr.htm" title="Copyright" type="text/html" />

<script type="application/javascript"  src="../../dcommon/js/headfoot.js"></script>
<script type="application/javascript"  src="../../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html" />
<link rel="Index" href="index.htm" title="Index" type="text/html" />
<link rel="Prev" href="oci18nav005.htm" title="Previous" type="text/html" />
<link rel="Next" href="oci19map.htm" title="Next" type="text/html" />
<link rel="alternate" href="../e10646.pdf" title="PDF version" type="application/pdf" />
<link rel="schema.dcterms" href="http://purl.org/dc/terms/" />
<link rel="stylesheet" href="../../dcommon/css/fusiondoc.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/header.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/footer.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/fonts.css">
<link rel="stylesheet" href="../../dcommon/css/foundation.css">
<link rel="stylesheet" href="../../dcommon/css/codemirror.css">
<link rel="stylesheet" type="text/css" title="Default" href="../../nav/css/html5.css">
<link rel="stylesheet" href="../../dcommon/css/respond-480-tablet.css">
<link rel="stylesheet" href="../../dcommon/css/respond-768-laptop.css">
<link rel="stylesheet" href="../../dcommon/css/respond-1140-deskop.css">
<script type="application/javascript" src="../../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">41/79</span> <!-- End Header --><a id="i469294"></a>
<div id="LNOCI177" class="refsect1">
<h1 class="refsect1">OCI Type Information Accessor Functions</h1>
<p><a href="#CACBBJHI">Table 18-11</a> describes the OCI type information accessor functions that are described in this section.</p>
<div id="LNOCI17355" class="tblformalwide">
<p class="titleintable"><a id="sthref3637"></a><a id="CACBBJHI"></a>Table 18-11 Type Information Accessor Functions</p>
<table class="cellalignment1011" title="Type Information Accessor Functions" summary="This table is described in the preceding text" dir="ltr">
<thead>
<tr class="cellalignment1005">
<th class="cellalignment1012" id="r1c1-t44">Function</th>
<th class="cellalignment1012" id="r1c2-t44">Purpose</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r2c1-t44" headers="r1c1-t44">
<p><a href="#i455420">"OCITypeArrayByName()"</a></p>
</td>
<td class="cellalignment1013" headers="r2c1-t44 r1c2-t44">
<p>Get an array of TDOs when given an array of object names</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r3c1-t44" headers="r1c1-t44">
<p><a href="#i455503">"OCITypeArrayByRef()"</a></p>
</td>
<td class="cellalignment1013" headers="r3c1-t44 r1c2-t44">
<p>Get an array of TDOs when given an array of object references</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r4c1-t44" headers="r1c1-t44">
<p><a href="#i455564">"OCITypeByName()"</a></p>
</td>
<td class="cellalignment1013" headers="r4c1-t44 r1c2-t44">
<p>Get a TDO when given an object name</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r5c1-t44" headers="r1c1-t44">
<p><a href="#i455642">"OCITypeByRef()"</a></p>
</td>
<td class="cellalignment1013" headers="r5c1-t44 r1c2-t44">
<p>Get a TDO when given an object reference</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformalwide" -->
<div id="LNOCI17356" class="refsect2"><a id="i455420"></a>
<h2 class="refsect2">OCITypeArrayByName()<a id="sthref3638"></a></h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3639"></a>Purpose</p>
<p>Gets an array of types when given an array of names.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3640"></a>Syntax</p>
<pre>
sword OCITypeArrayByName ( OCIEnv             *envhp,
                           OCIError           *errhp,
                           const OCISvcCtx    *svc,
                           ub4                array_len,
                           const OraText      *schema_name[],
                           ub4                s_length[],
                           const OraText      *type_name[],
                           ub4                t_length[],
                           const OraText      *version_name[],
                           ub4                v_length[],
                           OCIDuration        pin_duration,
                           OCITypeGetOpt      get_option,
                           OCIType            *tdo[] );
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3641"></a>Parameters</p>
<dl>
<dt>envhp (IN/OUT)</dt>
<dd>
<p>The OCI environment handle initialized in object mode. See the descriptions of <a href="oci16rel001.htm#i556149">OCIEnvCreate()</a>, <a href="oci16rel001.htm#i562098">OCIEnvNlsCreate()</a>, and <a href="ociaedep001.htm#i556330">OCIInitialize()</a> (deprecated) for more information.</p>
</dd>
<dt>errhp (IN/OUT)</dt>
<dd>
<p>The OCI error handle. If there is an error, it is recorded in <code>err</code>, and this function returns <code>OCI_ERROR</code>. Obtain diagnostic information by calling <a href="oci17msc007.htm#i540516">OCIErrorGet()</a>.</p>
</dd>
<dt>svc (IN)</dt>
<dd>
<p>OCI service handle.</p>
</dd>
<dt>array_len (IN)</dt>
<dd>
<p>Number of <code>schema_name</code> or <code>type_name</code> or <code>version_name</code> entries to be retrieved.</p>
</dd>
<dt>schema_name (IN, optional)</dt>
<dd>
<p>Array of schema names associated with the types to be retrieved. The array must have <code>array_len</code> elements if specified. If 0 is supplied, the default schema is assumed; otherwise, <code>schema_name</code> must have <code>array_len</code> number of elements. Zero (0) can be supplied for one or more of the entries to indicate that the default schema is desired for those entries.</p>
</dd>
<dt>s_length (IN)</dt>
<dd>
<p>Array of <code>schema_name</code> lengths with each entry corresponding to the length of the corresponding <code>schema_name</code> entry in the <code>schema_name</code> array in bytes. The array must either have <code>array_len</code> number of elements or it must be 0 if <code>schema_name</code> is not specified.</p>
</dd>
<dt>type_name (IN)</dt>
<dd>
<p>Array of the names of the types to retrieve. This must have <code>array_len</code> number of elements.</p>
</dd>
<dt>t_length (IN)</dt>
<dd>
<p>Array of the lengths of type names in the <code>type_name</code> array in bytes.</p>
</dd>
<dt>version_name (IN)</dt>
<dd>
<p>The version name is ignored and the latest version of the requested type is returned. Because type evolution was available starting in release 9.0, pre-9.0 applications attempting to access an altered type generate an error. These applications must be modified, recompiled, and relinked using the latest type definition.</p>
<p>Array of the version names of the types to retrieve corresponding. This can be 0 to indicate retrieval of the most current versions, or it must have <code>array_len</code> number of elements.</p>
<p>If 0 is supplied, the most current version is assumed, otherwise it must have <code>array_len</code> number of elements. Zero (0) can be supplied for one or more of the entries to indicate that the current version is desired for those entries.</p>
</dd>
<dt>v_length (IN)</dt>
<dd>
<p>Array of the lengths of version names in the <code>version_name</code> array in bytes.</p>
</dd>
<dt>pin_duration (IN)</dt>
<dd>
<p>Pin duration (for example, until the end of the current transaction) for the types retrieved. See <code>oro.h</code> for a description of each option.</p>
</dd>
<dt>get_option (IN)</dt>
<dd>
<p>Option for loading the types. It can be one of two values:</p>
</dd>
</dl>
<ul>
<li>
<p><code>OCI_TYPEGET_HEADER</code> (only the header is loaded)</p>
</li>
<li>
<p><code>OCI_TYPEGET_ALL</code> (TDO and all ADO and MDOs are loaded)</p>
</li>
</ul>
<dl>
<dt>tdo (OUT)</dt>
<dd>
<p>Output array for the pointers to each pinned type in the object cache. It must have space for <code>array_len</code> pointers. Use <a href="oci18nav004.htm#i469995">OCIObjectGetObjectRef()</a> to obtain the CREF to each pinned type descriptor.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3642"></a>Comments</p>
<p>Gets pointers to the existing types associated with the schema or type name array.</p>
<p>You can use the <code>get_option</code> parameter to control the portion of the TDO that gets loaded for each round-trip.</p>
<p>This function returns an error if any of the required parameters is <code>NULL</code> or any object types associated with a schema or type name entry do not exist.</p>
<p>To retrieve a single type, rather than an array, use <code>OCITypeByName()</code>.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
The TDO (array of TDOs or table definition) obtained by this function belongs to the logical partition of the cache corresponding to the service handle (connection) passed in. If TDOs or tables are used across logical partitions, then the behavior is not known and may change between releases.</div>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3643"></a>Related Functions</p>
<p><a href="#i455503">OCITypeArrayByRef()</a>, <a href="#i455564">OCITypeByName()</a>, <a href="#i455642">OCITypeByRef()</a></p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="LNOCI17357" class="refsect2"><a id="i455503"></a>
<h2 class="refsect2">OCITypeArrayByRef()<a id="sthref3644"></a></h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3645"></a>Purpose</p>
<p>Gets an array of types when given an array of references.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3646"></a>Syntax</p>
<pre>
sword OCITypeArrayByRef ( OCIEnv           *envhp,
                          OCIError         *errhp,
                          ub4              array_len,
                          const OCIRef     *type_ref[],
                          OCIDuration      pin_duration,
                          OCITypeGetOpt    get_option,
                          OCIType          *tdo[] );
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3647"></a>Parameters</p>
<dl>
<dt>envhp (IN/OUT)</dt>
<dd>
<p>The OCI environment handle initialized in object mode. See the descriptions of <a href="oci16rel001.htm#i556149">OCIEnvCreate()</a>, <a href="oci16rel001.htm#i562098">OCIEnvNlsCreate()</a>, and <a href="ociaedep001.htm#i556330">OCIInitialize()</a> (deprecated) for more information.</p>
</dd>
<dt>errhp (IN/OUT)</dt>
<dd>
<p>The OCI error handle. If there is an error, it is recorded in <code>err</code>, and this function returns <code>OCI_ERROR</code>. Obtain diagnostic information by calling <a href="oci17msc007.htm#i540516">OCIErrorGet()</a>.</p>
</dd>
<dt>array_len (IN)</dt>
<dd>
<p>Number of <code>schema_name</code> or <code>type_name</code> or <code>version_name</code> entries to be retrieved.</p>
</dd>
<dt>type_ref (IN)</dt>
<dd>
<p>Array of <code>OCIRef *</code> pointing to the particular version of the type descriptor object to obtain. The array must have <code>array_len</code> elements if specified.</p>
</dd>
<dt>pin_duration (IN)</dt>
<dd>
<p>Pin duration (for example, until the end of the current transaction) for the types retrieved. See <code>oro.h</code> for a description of each option.</p>
</dd>
<dt>get_option (IN)</dt>
<dd>
<p>Option for loading the types. It can be one of two values:</p>
</dd>
</dl>
<ul>
<li>
<p><code>OCI_TYPEGET_HEADER</code> (only the header is loaded)</p>
</li>
<li>
<p><code>OCI_TYPEGET_ALL</code> (TDO and all ADO and MDOs are loaded)</p>
</li>
</ul>
<dl>
<dt>tdo (OUT)</dt>
<dd>
<p>Output array for the pointers to each pinned type in the object cache. It must have space for <code>array_len</code> pointers. Use <a href="oci18nav004.htm#i469995">OCIObjectGetObjectRef()</a> to obtain the CREF to each pinned type descriptor.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3648"></a>Comments</p>
<p>Gets pointers to the existing types with the schema or type name array.</p>
<p>This function returns an error if:</p>
<ul>
<li>
<p>Any of the required parameters is <code>NULL</code></p>
</li>
<li>
<p>One or more object types associated with a schema or type name entry does not exist</p>
</li>
</ul>
<p>To retrieve a single type, rather than an array of types, use <a href="#i455642">OCITypeByRef()</a>.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
The TDO (array of TDOs or table definition) obtained by this function belongs to the logical partition of the cache corresponding to the service handle (connection) passed in. If TDOs or tables are used across logical partitions, then the behavior is not known and may change between releases.</div>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3649"></a>Related Functions</p>
<p><a href="#i455420">OCITypeArrayByName()</a>, <a href="#i455642">OCITypeByRef()</a>, <a href="#i455564">OCITypeByName()</a></p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="LNOCI17358" class="refsect2"><a id="i455564"></a>
<h2 class="refsect2">OCITypeByName()<a id="sthref3650"></a></h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3651"></a>Purpose</p>
<p>Gets the most current version of an existing type by name.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3652"></a>Syntax</p>
<pre>
sword OCITypeByName ( OCIEnv               *env,
                      OCIError             *err, 
                      const OCISvcCtx      *svc, 
                      const OraText        *schema_name,
                      ub4                  s_length, 
                      const OraText        *type_name, 
                      ub4                  t_length, 
                      const OraText        *version_name,
                      ub4                  v_length,
                      OCIDuration          pin_duration,
                      OCITypeGetOpt        get_option
                      OCIType              **tdo );
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3653"></a>Parameters</p>
<dl>
<dt>env (IN/OUT)</dt>
<dd>
<p>The OCI environment handle initialized in object mode. See the descriptions of <a href="oci16rel001.htm#i556149">OCIEnvCreate()</a>, <a href="oci16rel001.htm#i562098">OCIEnvNlsCreate()</a>, and <a href="ociaedep001.htm#i556330">OCIInitialize()</a> (deprecated) for more information.</p>
</dd>
<dt>err (IN/OUT)</dt>
<dd>
<p>The OCI error handle. If there is an error, it is recorded in <code>err</code>, and this function returns <code>OCI_ERROR</code>. Obtain diagnostic information by calling <a href="oci17msc007.htm#i540516">OCIErrorGet()</a>.</p>
</dd>
<dt>svc (IN)</dt>
<dd>
<p>OCI service handle.</p>
</dd>
<dt>schema_name (IN, optional)</dt>
<dd>
<p>Name of schema associated with the type. By default, the user's schema name is used. This string must be all uppercase, or OCI throws an internal error and the program stops.</p>
</dd>
<dt>s_length (IN)</dt>
<dd>
<p>Length of the <code>schema_name</code> parameter, in bytes.</p>
</dd>
<dt>type_name (IN)</dt>
<dd>
<p>Name of the type to get. This string must be all uppercase, or OCI throws an internal error and the program stops.</p>
</dd>
<dt>t_length (IN)</dt>
<dd>
<p>Length of the <code>type_name</code> parameter, in bytes.</p>
</dd>
<dt>version_name (IN)</dt>
<dd>
<p>The version name is ignored and the latest version of the requested type is returned. Because type evolution was available starting in release 9.0, pre-9.0 applications attempting to access an altered type generate an error. These applications must be modified, recompiled, and relinked using the latest type definition.</p>
<p>User-readable version of the type. Pass as <code>(text *)0</code> to retrieve the most current version.</p>
</dd>
<dt>v_length (IN)</dt>
<dd>
<p>Length of <code>version_name</code> in bytes.</p>
</dd>
<dt>pin_duration (IN)</dt>
<dd>
<p>Pin duration.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="oci14oca.htm#i437805">"Object Duration"</a></div>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<dl>
<dt>get_option ((IN)</dt>
<dd>
<p>Option for loading the types. It can be one of two values:</p>
</dd>
</dl>
<ul>
<li>
<p><code>OCI_TYPEGET_HEADER</code> (only the header is loaded)</p>
</li>
<li>
<p><code>OCI_TYPEGET_ALL</code> (TDO and all ADO and MDOs are loaded)</p>
</li>
</ul>
<dl>
<dt>tdo (OUT)</dt>
<dd>
<p>Pointer to the pinned type in the object cache.</p>
</dd>
</dl>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3654"></a>Comments</p>
<p>This function gets a pointer to the existing type associated with the schema or type name. It returns an error if any of the required parameters is <code>NULL</code>, or if the object type associated with the schema or type name does not exist, or if <code>version_name</code> does not exist.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
Schema and type names are case-sensitive. If they have been created with SQL, you must use strings in all uppercase, or the program stops.</div>
<p>This function always makes a round-trip to the server. Therefore calling this function repeatedly to get the type can significantly reduce performance. To minimize the round-trips, the application can call the function for each type and cache the type objects.</p>
<p>To free the type obtained by this function, call <a href="oci18nav005.htm#i438263">OCIObjectUnpin()</a> or <a href="oci18nav005.htm#i433515">OCIObjectPinCountReset()</a>.</p>
<p>An application can retrieve an array of TDOs by calling <a href="#i455420">OCITypeArrayByName()</a> or <a href="#i455503">OCITypeArrayByRef()</a>.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
The TDO (array of TDOs or table definition) obtained by this function belongs to the logical partition of the cache corresponding to the service handle (connection) passed in. If TDOs or tables are used across logical partitions, then the behavior is not known and may change between releases.</div>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3655"></a>Related Functions</p>
<p><a href="#i455642">OCITypeByRef()</a>, <a href="#i455420">OCITypeArrayByName()</a>, <a href="#i455503">OCITypeArrayByRef()</a></p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="LNOCI17359" class="refsect2"><a id="i455642"></a>
<h2 class="refsect2">OCITypeByRef()<a id="sthref3656"></a></h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3657"></a>Purpose</p>
<p>Gets a type when given a reference.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3658"></a>Syntax</p>
<pre>
sword OCITypeByRef ( OCIEnv          *env,
                     OCIError        *err,
                     const OCIRef    *type_ref,
                     OCIDuration     pin_duration,
                     OCITypeGetOpt   get_option,
                     OCIType         **tdo );
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3659"></a>Parameters</p>
<dl>
<dt>env (IN/OUT)</dt>
<dd>
<p>The OCI environment handle initialized in object mode. See the descriptions of <a href="oci16rel001.htm#i556149">OCIEnvCreate()</a>, <a href="oci16rel001.htm#i562098">OCIEnvNlsCreate()</a>, and <a href="ociaedep001.htm#i556330">OCIInitialize()</a> (deprecated) for more information.</p>
</dd>
<dt>err (IN/OUT)</dt>
<dd>
<p>The OCI error handle. If there is an error, it is recorded in <code>err</code>, and this function returns <code>OCI_ERROR</code>. Obtain diagnostic information by calling <a href="oci17msc007.htm#i540516">OCIErrorGet()</a>.</p>
</dd>
<dt>type_ref (IN)</dt>
<dd>
<p>An <code>OCIRef *</code> pointing to the version of the type descriptor object to obtain.</p>
</dd>
<dt>pin_duration (IN)</dt>
<dd>
<p>Pin duration until the end of the current transaction for the type to retrieve. See <code>oro.h</code> for a description of each option.</p>
</dd>
<dt>get_option (IN)</dt>
<dd>
<p>Option for loading the type. It can be one of two values:</p>
</dd>
</dl>
<ul>
<li>
<p><code>OCI_TYPEGET_HEADER</code> (only the header is loaded)</p>
</li>
<li>
<p><code>OCI_TYPEGET_ALL</code> (TDO and all ADO and MDOs are loaded)</p>
</li>
</ul>
<dl>
<dt>tdo (OUT)</dt>
<dd>
<p>Pointer to the pinned type in the object cache.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3660"></a>Comments</p>
<p><code>OCITypeByRef()</code> returns an error if any of the required parameters is <code>NULL</code>.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
The TDO (array of TDOs or table definition) obtained by this function belongs to the logical partition of the cache corresponding to the service handle (connection) passed in. If TDOs or tables are used across logical partitions, then the behavior is not known and may change between releases.</div>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3661"></a>Related Functions</p>
<p><a href="#i455564">OCITypeByName()</a>, <a href="#i455420">OCITypeArrayByName()</a>, <a href="#i455503">OCITypeArrayByRef()</a></p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" --></div>
<!-- class="refsect1" --></div>
<!-- class="refentry" -->
<!-- class="chapter" -->
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment1004">
<tr>
<td class="cellalignment1013">
<table class="cellalignment1009">
<tr>
<td class="cellalignment1008"><a href="oci18nav005.htm"><img width="24" height="24" src="../../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment1008"><a href="oci19map.htm"><img width="24" height="24" src="../../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;1996, 2014,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment1015">
<table class="cellalignment1007">
<tr>
<td class="cellalignment1008"><a href="../../index.htm"><img width="24" height="24" src="../../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment1008"><a href="../../nav/portal_booklist.htm"><img width="24" height="24" src="../../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment1008"><a href="toc.htm"><img width="24" height="24" src="../../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment1008"><a href="index.htm"><img width="24" height="24" src="../../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment1008"><a href="../../nav/mindx.htm"><img width="24" height="24" src="../../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment1008"><a href="../../dcommon/html/feedback.htm"><img width="24" height="24" src="../../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>
</body>
</html>
