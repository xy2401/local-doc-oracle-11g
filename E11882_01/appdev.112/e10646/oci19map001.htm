<!DOCTYPE html>
<html lang="en" >
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1">
<meta charset="utf-8">
<title>OCI Collection and Iterator Functions</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Merged Version 1023" />
<meta name="dcterms.created" content="2014-07-18T15:18:36Z" />
<meta name="robots" content="all" />
<meta name="dcterms.title" content="Call Interface Programmer's Guide" />
<meta name="dcterms.identifier" content="E10646-15" />
<meta name="dcterms.isVersionOf" content="LNOCI" />
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;1996, 2014,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved." />
<link rel="Start" href="../../index.htm" title="Home" type="text/html" />
<link rel="Copyright" href="../../dcommon/html/cpyr.htm" title="Copyright" type="text/html" />

<script type="application/javascript"  src="../../dcommon/js/headfoot.js"></script>
<script type="application/javascript"  src="../../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html" />
<link rel="Index" href="index.htm" title="Index" type="text/html" />
<link rel="Prev" href="oci19map.htm" title="Previous" type="text/html" />
<link rel="Next" href="oci19map002.htm" title="Next" type="text/html" />
<link rel="alternate" href="../e10646.pdf" title="PDF version" type="application/pdf" />
<link rel="schema.dcterms" href="http://purl.org/dc/terms/" />
<link rel="stylesheet" href="../../dcommon/css/fusiondoc.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/header.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/footer.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/fonts.css">
<link rel="stylesheet" href="../../dcommon/css/foundation.css">
<link rel="stylesheet" href="../../dcommon/css/codemirror.css">
<link rel="stylesheet" type="text/css" title="Default" href="../../nav/css/html5.css">
<link rel="stylesheet" href="../../dcommon/css/respond-480-tablet.css">
<link rel="stylesheet" href="../../dcommon/css/respond-768-laptop.css">
<link rel="stylesheet" href="../../dcommon/css/respond-1140-deskop.css">
<script type="application/javascript" src="../../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">43/79</span> <!-- End Header --><a id="CEGGDJBE"></a>
<div id="LNOCI181" class="refsect1">
<h1 class="refsect1">OCI Collection and Iterator Functions</h1>
<p><a href="#CEGGEHAA">Table 19-2</a> describes the collection and iterator functions that are described in this section.</p>
<div id="LNOCI17374" class="tblformalwide">
<p class="titleintable"><a id="sthref3667"></a><a id="CEGGEHAA"></a>Table 19-2 Collection and Iterator Functions &nbsp;</p>
<table class="cellalignment1011" title="Collection and Iterator Functions &nbsp;" summary="This table is described in the preceding text" dir="ltr">
<thead>
<tr class="cellalignment1005">
<th class="cellalignment1012" id="r1c1-t6">Function</th>
<th class="cellalignment1012" id="r1c2-t6">Purpose</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r2c1-t6" headers="r1c1-t6">
<p><a href="#i448982">"OCICollAppend()"</a></p>
</td>
<td class="cellalignment1013" headers="r2c1-t6 r1c2-t6">
<p>Append an element to the end of a collection</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r3c1-t6" headers="r1c1-t6">
<p><a href="#i524110">"OCICollAssign()"</a></p>
</td>
<td class="cellalignment1013" headers="r3c1-t6 r1c2-t6">
<p>Assign (deep copy) one collection to another</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r4c1-t6" headers="r1c1-t6">
<p><a href="#i457193">"OCICollAssignElem()"</a></p>
</td>
<td class="cellalignment1013" headers="r4c1-t6 r1c2-t6">
<p>Assign the given element value <code>elem</code> to the element at <code>coll[index]</code></p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r5c1-t6" headers="r1c1-t6">
<p><a href="#i449838">"OCICollGetElem()"</a></p>
</td>
<td class="cellalignment1013" headers="r5c1-t6 r1c2-t6">
<p>Get pointer to an element</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r6c1-t6" headers="r1c1-t6">
<p><a href="#i526117">"OCICollGetElemArray()"</a></p>
</td>
<td class="cellalignment1013" headers="r6c1-t6 r1c2-t6">
<p>Get an array of elements from a collection</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r7c1-t6" headers="r1c1-t6">
<p><a href="#i476415">"OCICollIsLocator()"</a></p>
</td>
<td class="cellalignment1013" headers="r7c1-t6 r1c2-t6">
<p>Indicate whether a collection is locator-based or not</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r8c1-t6" headers="r1c1-t6">
<p><a href="#i449873">"OCICollMax()"</a></p>
</td>
<td class="cellalignment1013" headers="r8c1-t6 r1c2-t6">
<p>Return maximum number of elements in collection</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r9c1-t6" headers="r1c1-t6">
<p><a href="#i449891">"OCICollSize()"</a></p>
</td>
<td class="cellalignment1013" headers="r9c1-t6 r1c2-t6">
<p>Get current size of collection (in number of elements)</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r10c1-t6" headers="r1c1-t6">
<p><a href="#i449909">"OCICollTrim()"</a></p>
</td>
<td class="cellalignment1013" headers="r10c1-t6 r1c2-t6">
<p>Trim elements from the collection</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r11c1-t6" headers="r1c1-t6">
<p><a href="#i499885">"OCIIterCreate()"</a></p>
</td>
<td class="cellalignment1013" headers="r11c1-t6 r1c2-t6">
<p>Create iterator to scan the varray elements</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r12c1-t6" headers="r1c1-t6">
<p><a href="#i499922">"OCIIterDelete()"</a></p>
</td>
<td class="cellalignment1013" headers="r12c1-t6 r1c2-t6">
<p>Delete iterator</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r13c1-t6" headers="r1c1-t6">
<p><a href="#i499958">"OCIIterGetCurrent()"</a></p>
</td>
<td class="cellalignment1013" headers="r13c1-t6 r1c2-t6">
<p>Get current collection element</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r14c1-t6" headers="r1c1-t6">
<p><a href="#i499993">"OCIIterInit()"</a></p>
</td>
<td class="cellalignment1013" headers="r14c1-t6 r1c2-t6">
<p>Initialize iterator to scan the given collection</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r15c1-t6" headers="r1c1-t6">
<p><a href="#i500027">"OCIIterNext()"</a></p>
</td>
<td class="cellalignment1013" headers="r15c1-t6 r1c2-t6">
<p>Get next collection element</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r16c1-t6" headers="r1c1-t6">
<p><a href="#i500070">"OCIIterPrev()"</a></p>
</td>
<td class="cellalignment1013" headers="r16c1-t6 r1c2-t6">
<p>Get previous collection element</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformalwide" -->
<div id="LNOCI17375" class="refsect2"><a id="i448982"></a>
<h2 class="refsect2">OCICollAppend()<a id="sthref3668"></a></h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3669"></a>Purpose</p>
<p>Appends an element to the end of a collection.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3670"></a>Syntax</p>
<pre>
sword OCICollAppend ( OCIEnv              *env,
                      OCIError            *err,
                      const void          *elem, 
                      const void          *elemind,
                      OCIColl             *coll );
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3671"></a>Parameters</p>
<dl>
<dt>env (IN/OUT)</dt>
<dd>
<p>The OCI environment handle initialized in object mode.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="oci16rel001.htm#i556149">"OCIEnvCreate()"</a>, <a href="oci16rel001.htm#i562098">"OCIEnvNlsCreate()"</a>, and <a href="ociaedep001.htm#i556330">"OCIInitialize()"</a> (deprecated)</div>
</dd>
<dt>err (IN/OUT)</dt>
<dd>
<p>The OCI error handle. If there is an error, it is recorded in <code>err</code>, and this function returns <code>OCI_ERROR</code>. Obtain diagnostic information by calling <a href="oci17msc007.htm#i540516">OCIErrorGet()</a>.</p>
</dd>
<dt>elem (IN)</dt>
<dd>
<p>Pointer to the element to be appended to the end of the given collection.</p>
</dd>
<dt>elemind (IN) [optional]</dt>
<dd>
<p>Pointer to the element's <code>NULL</code> indicator information. If (<code>elemind</code> == NULL) then the <code>NULL</code> indicator information of the appended element is set to non-<code>NULL</code>.</p>
</dd>
<dt>coll (IN/OUT)</dt>
<dd>
<p>Updated collection.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3672"></a>Comments</p>
<p>Appending an element is equivalent to increasing the size of the collection by one element and updating (deep copying) the last element's data with the given element's data. Note that the pointer to the given element <code>elem</code> is not saved by this function, which means that <code>elem</code> is strictly an input parameter.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3673"></a>Returns</p>
<p>This function returns an error if the current size of the collection equals the maximum size (upper bound) of the collection before appending the element. This function also returns an error if any of the input parameters is <code>NULL</code>.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3674"></a>Related Functions</p>
<p><a href="oci17msc007.htm#i540516">OCIErrorGet()</a></p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="LNOCI17376" class="refsect2"><a id="i524110"></a>
<h2 class="refsect2">OCICollAssign()<a id="sthref3675"></a></h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3676"></a>Purpose</p>
<p>Assigns (deep copies) one collection to another.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3677"></a>Syntax</p>
<pre>
sword OCICollAssign ( OCIEnv              *env, 
                      OCIError            *err, 
                      const OCIColl       *rhs, 
                      OCIColl             *lhs );
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3678"></a>Parameters</p>
<dl>
<dt>env (IN/OUT)</dt>
<dd>
<p>The OCI environment handle initialized in object mode.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="oci16rel001.htm#i556149">"OCIEnvCreate()"</a>, <a href="oci16rel001.htm#i562098">"OCIEnvNlsCreate()"</a>, and <a href="ociaedep001.htm#i556330">"OCIInitialize()"</a> (deprecated)</div>
</dd>
<dt>err (IN/OUT)</dt>
<dd>
<p>The OCI error handle. If there is an error, it is recorded in <code>err</code>, and this function returns <code>OCI_ERROR</code>. Obtain diagnostic information by calling <a href="oci17msc007.htm#i540516">OCIErrorGet()</a>.</p>
</dd>
<dt>rhs (IN)</dt>
<dd>
<p>Right-hand side (source) collection to be assigned from.</p>
</dd>
<dt>lhs (OUT)</dt>
<dd>
<p>Left-hand side (target) collection to be assigned to.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3679"></a>Comments</p>
<p>Assigns <code>rhs</code> (source) to <code>lhs</code> (target). The <code>lhs</code> collection may be decreased or increased depending upon the size of <code>rhs</code>. If the <code>lhs</code> collection contains any elements, then the elements are deleted before the assignment. This function performs a deep copy. The memory for the elements comes from the object cache.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3680"></a>Returns</p>
<p>An error is returned if the element types of the <code>lhs</code> and <code>rhs</code> collections do not match. Also, an error is returned if the upper bound of the <code>lhs</code> collection is less than the current number of elements in the <code>rhs</code> collection. An error is also returned if:</p>
<ul>
<li>
<p>Any of the input parameters is <code>NULL</code></p>
</li>
<li>
<p>There is a type mismatch between the <code>lhs</code> and <code>rhs</code> collections</p>
</li>
<li>
<p>The upper bound of the <code>lhs</code> collection is less than the current number of elements in the <code>rhs</code> collection</p>
</li>
</ul>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3681"></a>Related Functions</p>
<p><a href="oci17msc007.htm#i540516">OCIErrorGet()</a><span class="italic">,</span> <a href="#i457193">OCICollAssignElem()</a></p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="LNOCI17377" class="refsect2"><a id="i457193"></a>
<h2 class="refsect2">OCICollAssignElem()<a id="sthref3682"></a></h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3683"></a>Purpose</p>
<p>Assigns the given element value <code>elem</code> to the element at <code>coll[index]</code>.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3684"></a>Syntax</p>
<pre>
sword OCICollAssignElem ( OCIEnv           *env, 
                          OCIError         *err, 
                          sb4              index, 
                          const void       *elem, 
                          const void       *elemind, 
                          OCIColl          *coll );
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3685"></a>Parameters</p>
<dl>
<dt>env (IN/OUT)</dt>
<dd>
<p>The OCI environment handle initialized in object mode.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="oci16rel001.htm#i556149">"OCIEnvCreate()"</a>, <a href="oci16rel001.htm#i562098">"OCIEnvNlsCreate()"</a>, and <a href="ociaedep001.htm#i556330">"OCIInitialize()"</a> (deprecated)</div>
</dd>
<dt>err (IN/OUT)</dt>
<dd>
<p>The OCI error handle. If there is an error, it is recorded in <code>err</code>, and this function returns <code>OCI_ERROR</code>. Obtain diagnostic information by calling <a href="oci17msc007.htm#i540516">OCIErrorGet()</a>.</p>
</dd>
<dt>index (IN)</dt>
<dd>
<p>Index of the element to which the element is assigned.</p>
</dd>
<dt>elem (IN)</dt>
<dd>
<p>Source element from which the element is assigned.</p>
</dd>
<dt>elemind (IN) [optional]</dt>
<dd>
<p>Pointer to the element's <code>NULL</code> indicator information; if (<code>elemind</code> == <code>NULL</code>), then the <code>NULL</code> indicator information of the assigned element is set to non-<code>NULL</code>.</p>
</dd>
<dt>coll (IN/OUT)</dt>
<dd>
<p>Collection to be updated.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3686"></a>Comments</p>
<p>If the collection is of type nested table, the element at the given index might not exist, as when an element has been deleted. In this case, the given element is inserted at <code>index</code>. Otherwise, the element at <code>index</code> is updated with the value of <code>elem</code>.</p>
<p>Note that the given element is deep copied, and <code>elem</code> is strictly an input parameter.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3687"></a>Returns</p>
<p>This function returns an error if any input parameter is <code>NULL</code> or if the given index is beyond the bounds of the given collection.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3688"></a>Related Functions</p>
<p><a href="oci17msc007.htm#i540516">OCIErrorGet()</a>, <a href="#i524110">OCICollAssign()</a></p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="LNOCI17378" class="refsect2"><a id="i449838"></a>
<h2 class="refsect2">OCICollGetElem()<a id="sthref3689"></a></h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3690"></a>Purpose</p>
<p>Gets a pointer to the element at the given index.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3691"></a>Syntax</p>
<pre>
sword OCICollGetElem ( OCIEnv           *env, 
                       OCIError         *err, 
                       const OCIColl    *coll, 
                       sb4              index, 
                       boolean          *exists, 
                       void             **elem, 
                       void             **elemind );
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3692"></a>Parameters</p>
<dl>
<dt>env (IN/OUT)</dt>
<dd>
<p>The OCI environment handle initialized in object mode.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="oci16rel001.htm#i556149">"OCIEnvCreate()"</a>, <a href="oci16rel001.htm#i562098">"OCIEnvNlsCreate()"</a>, and <a href="ociaedep001.htm#i556330">"OCIInitialize()"</a> (deprecated)</div>
</dd>
<dt>err (IN/OUT)</dt>
<dd>
<p>The OCI error handle. If there is an error, it is recorded in <code>err</code>, and this function returns <code>OCI_ERROR</code>. Obtain diagnostic information by calling <a href="oci17msc007.htm#i540516">OCIErrorGet()</a>.</p>
</dd>
<dt>coll (IN)</dt>
<dd>
<p>Pointer to the element in this collection to be returned.</p>
</dd>
<dt>index (IN)</dt>
<dd>
<p>Index of the element whose pointer is returned.</p>
</dd>
<dt>exists (OUT)</dt>
<dd>
<p>Set to <code>FALSE</code> if the element at the specified index does not exist; otherwise, set to <code>TRUE</code>.</p>
</dd>
<dt>elem (OUT)</dt>
<dd>
<p>Address of the element to be returned.</p>
</dd>
<dt>elemind (OUT) [optional]</dt>
<dd>
<p>Address of the <code>NULL</code> indicator information is returned. If (<code>elemind</code> == <code>NULL</code>), then the <code>NULL</code> indicator information is not returned.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3693"></a>Comments</p>
<p>Gets the address of the element at the given position. Optionally, this function also returns the address of the element's <code>NULL</code> indicator information.</p>
<p><a href="#CEGHGIBI">Table 19-3</a> describes for each collection element type what the corresponding element pointer type is. The element pointer is returned with the <code>elem</code> parameter of <code>OCICollGetElem()</code>.</p>
<div id="LNOCI17379" class="tblformal">
<p class="titleintable"><a id="sthref3694"></a><a id="CEGHGIBI"></a>Table 19-3 Element Pointers</p>
<table class="cellalignment1016" title="Element Pointers" summary="This table is described in the preceding text" dir="ltr">
<thead>
<tr class="cellalignment1005">
<th class="cellalignment1012" id="r1c1-t11">Element Type</th>
<th class="cellalignment1012" id="r1c2-t11">*elem Is Set to</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r2c1-t11" headers="r1c1-t11">
<p>Oracle <code>NUMBER</code> (<code>OCINumber</code>)</p>
</td>
<td class="cellalignment1013" headers="r2c1-t11 r1c2-t11">
<p><code>OCINumber*</code></p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r3c1-t11" headers="r1c1-t11">
<p>Date (<code>OCIDate</code>)</p>
</td>
<td class="cellalignment1013" headers="r3c1-t11 r1c2-t11">
<p><code>OCIDate*</code></p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r4c1-t11" headers="r1c1-t11">
<p>Datetime (<code>OCIDateTime</code>)</p>
</td>
<td class="cellalignment1013" headers="r4c1-t11 r1c2-t11">
<p><code>OCIDateTime*</code></p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r5c1-t11" headers="r1c1-t11">
<p>Interval (<code>OCIInterval</code>)</p>
</td>
<td class="cellalignment1013" headers="r5c1-t11 r1c2-t11">
<p><code>OCIInterval*</code></p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r6c1-t11" headers="r1c1-t11">
<p>Variable-length string (<code>OCIString*</code>)</p>
</td>
<td class="cellalignment1013" headers="r6c1-t11 r1c2-t11">
<p><code>OCIString**</code></p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r7c1-t11" headers="r1c1-t11">
<p>Variable-length raw (<code>OCIRaw*</code>)</p>
</td>
<td class="cellalignment1013" headers="r7c1-t11 r1c2-t11">
<p><code>OCIRaw**</code></p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r8c1-t11" headers="r1c1-t11">
<p>Object reference (<code>OCIRef*</code>)</p>
</td>
<td class="cellalignment1013" headers="r8c1-t11 r1c2-t11">
<p><code>OCIRef**</code></p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r9c1-t11" headers="r1c1-t11">
<p>Lob locator (<code>OCILobLocator*</code>)</p>
</td>
<td class="cellalignment1013" headers="r9c1-t11 r1c2-t11">
<p><code>OCILobLocator**</code></p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r10c1-t11" headers="r1c1-t11">
<p>Object type (such as person)</p>
</td>
<td class="cellalignment1013" headers="r10c1-t11 r1c2-t11">
<p><code>person*</code></p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<p>The element pointer returned by <code>OCICollGetElem()</code> is in a form that can be used not only to access the element data but also to serve as the target (left-hand side) of an assignment statement.</p>
<p>For example, assume the user is iterating over the elements of a collection whose element type is object reference (<code>OCIRef*</code>). A call to <code>OCICollGetElem()</code> returns the pointer to a reference handle (<code>OCIRef**</code>). After getting the pointer to the collection element, you may want to modify it by assigning a new reference.</p>
<p><a href="#CEGCJEDG">Example 19-1</a> shows how this can be accomplished with the <a href="oci19map005.htm#i445077">OCIRefAssign()</a> function.</p>
<div id="LNOCI18351" class="example">
<p class="titleinexample"><a id="CEGCJEDG"></a>Example 19-1 Assigning a New Reference to the Pointer to the Collection Element</p>
<pre>
sword OCIRefAssign( OCIEnv       *env, 
                    OCIError     *err, 
                    const OCIRef *source, 
                    OCIRef       **target );
</pre></div>
<!-- class="example" -->
<p>Note that the <code>target</code> parameter of <a href="oci19map005.htm#i445077">OCIRefAssign()</a> is of type <code>OCIRef**</code>. Hence <code>OCICollGetElem()</code> returns <code>OCIRef**</code>. If <code>*target</code> equals <code>NULL</code>, a new <code>REF</code> is allocated by <code>OCIRefAssign()</code> and returned in the <code>target</code> parameter.</p>
<p>Similarly, if the collection element was of type string (<code>OCIString*</code>), <code>OCICollGetElem()</code> returns the pointer to the string handle (that is, <code>OCIString**</code>). If a new string is assigned, through <a href="oci19map006.htm#i460203">OCIStringAssign()</a> or <a href="oci19map006.htm#i430380">OCIStringAssignText()</a>, the type of the target must be <code>OCIString **</code>.</p>
<p>If the collection element is of type Oracle <code>NUMBER</code>, <code>OCICollGetElem()</code> returns <code>OCINumber*</code>. <a href="#CEGCCCJB">Example 19-2</a> shows the prototype of the <code>OCINumberAssign()</code> call.</p>
<div id="LNOCI18352" class="example">
<p class="titleinexample"><a id="CEGCCCJB"></a>Example 19-2 Prototype of OCINumberAssign() Call</p>
<pre>
sword OCINumberAssign(OCIError        *err, 
                      const OCINumber *from,
                      OCINumber       *to);
</pre></div>
<!-- class="example" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3695"></a>Returns</p>
<p>The <code>OCICollGetElem()</code> function returns an error if any of the input parameters is <code>NULL</code>.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3696"></a>Related Functions</p>
<p><a href="oci17msc007.htm#i540516">OCIErrorGet()</a>, <a href="#i457193">OCICollAssignElem()</a></p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="LNOCI17380" class="refsect2"><a id="i526117"></a>
<h2 class="refsect2"><a id="sthref3697"></a>OCICollGetElemArray()</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3698"></a>Purpose</p>
<p>Gets an array of elements from a collection when given a starting index.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3699"></a>Syntax</p>
<pre>
sword OCICollGetElemArray ( OCIEnv              *env,
                            OCIError            *err,
                            const OCIColl       *coll, 
                            sb4                 index,
                            boolean             *exists,
                            void                **elem,
                            void                **elemind,
                            uword               *nelems );
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3700"></a>Parameters</p>
<dl>
<dt>env (IN/OUT)</dt>
<dd>
<p>The OCI environment handle initialized in object mode.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="oci16rel001.htm#i556149">"OCIEnvCreate()"</a>, <a href="oci16rel001.htm#i562098">"OCIEnvNlsCreate()"</a>, and <a href="ociaedep001.htm#i556330">"OCIInitialize()"</a> (deprecated)</div>
</dd>
<dt>err (IN/OUT)</dt>
<dd>
<p>The OCI error handle. If there is an error, it is recorded in <code>err</code>, and this function returns <code>OCI_ERROR</code>. Obtain diagnostic information by calling <a href="oci17msc007.htm#i540516">OCIErrorGet()</a>.</p>
</dd>
<dt>coll (IN)</dt>
<dd>
<p>Pointers to the elements in this collection to be returned.</p>
</dd>
<dt>index (IN)</dt>
<dd>
<p>Starting index of the elements.</p>
</dd>
<dt>exists (OUT)</dt>
<dd>
<p>Is set to <code>FALSE</code> if the element at the specified index does not exist; otherwise, it is set to <code>TRUE</code>.</p>
</dd>
<dt>elem (OUT)</dt>
<dd>
<p>Address of the desired elements to be returned.</p>
</dd>
<dt>elemind (OUT) [optional]</dt>
<dd>
<p>Address of the <code>NULL</code> indicator information to be returned. If (<code>elemind == NULL</code>), then the <code>NULL</code> indicator information is <span class="italic">not</span> returned.</p>
</dd>
<dt>nelems (IN)</dt>
<dd>
<p>Maximum number of pointers to both <code>elem</code> and <code>elemind</code>.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3701"></a>Comments</p>
<p>Gets the address of the elements from the given position.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3702"></a>Returns</p>
<p>Optionally, this function also returns the address of the element's <code>NULL</code> indicator information.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3703"></a>Related Functions</p>
<p><a href="oci17msc007.htm#i540516">OCIErrorGet()</a>, <a href="#i449838">OCICollGetElem()</a></p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="LNOCI17381" class="refsect2"><a id="i476415"></a>
<h2 class="refsect2"><a id="sthref3704"></a>OCICollIsLocator()</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3705"></a>Purpose</p>
<p>Indicates whether a collection is locator-based or not.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3706"></a>Syntax</p>
<pre>
sword OCICollIsLocator ( OCIEnv *env, 
                         OCIError *err,
                         const OCIColl *coll, 
                         boolean *result ); 
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3707"></a>Parameters</p>
<dl>
<dt>env (IN)</dt>
<dd>
<p>The OCI environment handle initialized in object mode.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="oci16rel001.htm#i556149">"OCIEnvCreate()"</a>, <a href="oci16rel001.htm#i562098">"OCIEnvNlsCreate()"</a>, and <a href="ociaedep001.htm#i556330">"OCIInitialize()"</a> (deprecated)</div>
</dd>
<dt>err (IN/OUT)</dt>
<dd>
<p>The OCI error handle. If there is an error, it is recorded in <code>err</code>, and this function returns <code>OCI_ERROR</code>. Obtain diagnostic information by calling <a href="oci17msc007.htm#i540516">OCIErrorGet()</a>.</p>
</dd>
<dt>coll (IN)</dt>
<dd>
<p>A collection item.</p>
</dd>
<dt>result (OUT)</dt>
<dd>
<p>Returns <code>TRUE</code> if the collection item is locator-based, <code>FALSE</code> otherwise.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3708"></a>Comments</p>
<p>This function tests to see whether a collection is locator-based.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3709"></a>Returns</p>
<p>Returns <code>TRUE</code> in the <code>result</code> parameter if the collection item is locator-based; otherwise, it returns <code>FALSE</code>.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3710"></a>Related Functions</p>
<p><a href="oci17msc007.htm#i540516">OCIErrorGet()</a></p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="LNOCI17382" class="refsect2"><a id="i449873"></a>
<h2 class="refsect2">OCICollMax()<a id="sthref3711"></a></h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3712"></a>Purpose</p>
<p>Gets the maximum size in number of elements of the given collection.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3713"></a>Syntax</p>
<pre>
sb4 OCICollMax ( OCIEnv           *env,
                 const OCIColl    *coll );
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3714"></a>Parameters</p>
<dl>
<dt>env (IN/OUT)</dt>
<dd>
<p>The OCI environment handle initialized in object mode.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="oci16rel001.htm#i556149">"OCIEnvCreate()"</a>, <a href="oci16rel001.htm#i562098">"OCIEnvNlsCreate()"</a>, and <a href="ociaedep001.htm#i556330">"OCIInitialize()"</a> (deprecated)</div>
</dd>
<dt>coll (IN)</dt>
<dd>
<p>Collection whose number of elements is returned. The <code>coll</code> parameter must point to a valid collection descriptor.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3715"></a>Comments</p>
<p>Returns the maximum number of elements that the given collection can hold. A value of zero indicates that the collection has no upper bound.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3716"></a>Returns</p>
<p>The upper bound of the given collection.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3717"></a>Related Functions</p>
<p><a href="oci17msc007.htm#i540516">OCIErrorGet()</a>, <a href="#i449891">OCICollSize()</a></p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="LNOCI17383" class="refsect2"><a id="i449891"></a>
<h2 class="refsect2">OCICollSize()<a id="sthref3718"></a></h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3719"></a>Purpose</p>
<p>Gets the current size in number of elements of the given collection.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3720"></a>Syntax</p>
<pre>
sword OCICollSize ( OCIEnv           *env,
                    OCIError         *err,
                    const OCIColl    *coll 
                    sb4              *size );
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3721"></a>Parameters</p>
<dl>
<dt>env (IN/OUT)</dt>
<dd>
<p>The OCI environment handle initialized in object mode.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="oci16rel001.htm#i556149">"OCIEnvCreate()"</a>, <a href="oci16rel001.htm#i562098">"OCIEnvNlsCreate()"</a>, and <a href="ociaedep001.htm#i556330">"OCIInitialize()"</a> (deprecated)</div>
</dd>
<dt>err (IN/OUT)</dt>
<dd>
<p>The OCI error handle. If there is an error, it is recorded in <code>err</code>, and this function returns <code>OCI_ERROR</code>. Obtain diagnostic information by calling <a href="oci17msc007.htm#i540516">OCIErrorGet()</a>.</p>
</dd>
<dt>coll (IN)</dt>
<dd>
<p>Collection whose number of elements is returned. Must point to a valid collection descriptor.</p>
</dd>
<dt>size (OUT)</dt>
<dd>
<p>Current number of elements in the collection.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3722"></a>Comments</p>
<p>Returns the current number of elements in the given collection. For a nested table, this count is not decremented when elements are deleted. So, this count includes any <span class="italic">holes</span> created by deleting elements. A trim operation (<a href="#i449909">OCICollTrim()</a>) decrements the count by the number of trimmed elements. To get the count minus the deleted elements use <a href="oci19map007.htm#i450779">OCITableSize()</a>.</p>
<p>The following pseudocode shows some examples:</p>
<pre>
OCICollSize(...); 
// assume 'size' returned is equal to 5
OCITableDelete(...); // delete one element
OCICollSize(...);
// 'size' returned is still 5
</pre>
<p>To get the count minus the deleted elements use <a href="oci19map007.htm#i450779">OCITableSize()</a>. Continuing the earlier example:</p>
<pre>
OCITableSize(...)
// 'size' returned is equal to 4
</pre>
<p>A trim operation <a href="#i449909">OCICollTrim()</a>) decrements the count by the number of trimmed elements. Continuing the earlier example:</p>
<pre>
OCICollTrim(..,1..); // trim one element
OCICollSize(...);
// 'size' returned is equal to 4
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3723"></a>Returns</p>
<p>The <code>OCICollSize()</code> function returns an error if an error occurs during the loading of the collection into the object cache or if any of the input parameters is <code>NULL</code>.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3724"></a>Related Functions</p>
<p><a href="oci17msc007.htm#i540516">OCIErrorGet()</a>, <a href="#i449873">OCICollMax()</a></p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="LNOCI17384" class="refsect2"><a id="i449909"></a>
<h2 class="refsect2">OCICollTrim()<a id="sthref3725"></a></h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3726"></a>Purpose</p>
<p>Trims the given number of elements from the end of the collection.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3727"></a>Syntax</p>
<pre>
sword OCICollTrim ( OCIEnv         *env, 
                    OCIError       *err, 
                    sb4            trim_num, 
                    OCIColl        *coll );
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3728"></a>Parameters</p>
<dl>
<dt>env (IN/OUT)</dt>
<dd>
<p>The OCI environment handle initialized in object mode.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="oci16rel001.htm#i556149">"OCIEnvCreate()"</a>, <a href="oci16rel001.htm#i562098">"OCIEnvNlsCreate()"</a>, and <a href="ociaedep001.htm#i556330">"OCIInitialize()"</a> (deprecated)</div>
</dd>
<dt>err (IN/OUT)</dt>
<dd>
<p>The OCI error handle. If there is an error, it is recorded in <code>err</code>, and this function returns <code>OCI_ERROR</code>. Obtain diagnostic information by calling <a href="oci17msc007.htm#i540516">OCIErrorGet()</a>.</p>
</dd>
<dt>trim_num (IN)</dt>
<dd>
<p>Number of elements to trim.</p>
</dd>
<dt>coll (IN/OUT)</dt>
<dd>
<p>Removes (frees) <code>trim_num</code> of elements from the end of the collection <code>coll</code>.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3729"></a>Comments</p>
<p>The elements are removed from the end of the collection.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3730"></a>Returns</p>
<p>An error is returned if <code>trim_num</code> is greater than the current size of the collection.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3731"></a>Related Functions</p>
<p><a href="oci17msc007.htm#i540516">OCIErrorGet()</a>, <a href="#i449891">OCICollSize()</a></p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="LNOCI17385" class="refsect2"><a id="i499885"></a>
<h2 class="refsect2">OCIIterCreate()<a id="sthref3732"></a></h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3733"></a>Purpose</p>
<p>Creates an iterator to scan the elements or the collection.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3734"></a>Syntax</p>
<pre>
sword OCIIterCreate ( OCIEnv               *env, 
                      OCIError             *err, 
                      const OCIColl        *coll, 
                      OCIIter              **itr );
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3735"></a>Parameters</p>
<dl>
<dt>env (IN/OUT)</dt>
<dd>
<p>The OCI environment handle initialized in object mode.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="oci16rel001.htm#i556149">"OCIEnvCreate()"</a>, <a href="oci16rel001.htm#i562098">"OCIEnvNlsCreate()"</a>, and <a href="ociaedep001.htm#i556330">"OCIInitialize()"</a> (deprecated)</div>
</dd>
<dt>err (IN/OUT)</dt>
<dd>
<p>The OCI error handle. If there is an error, it is recorded in <code>err</code>, and this function returns <code>OCI_ERROR</code>. Obtain diagnostic information by calling <a href="oci17msc007.htm#i540516">OCIErrorGet()</a>.</p>
</dd>
<dt>coll (IN)</dt>
<dd>
<p>Collection that is scanned. For Oracle8<span class="italic">i</span> or later, valid collection types include <a id="sthref3736"></a>varrays and nested tables.</p>
</dd>
<dt>itr (OUT)</dt>
<dd>
<p>Address to the allocated collection iterator to be returned by this function.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3737"></a>Comments</p>
<p>The iterator is created in the object cache. The iterator is initialized to point to the beginning of the collection.</p>
<p>If <a href="#i500027">OCIIterNext()</a> is called immediately after creating the iterator, then the first element of the collection is returned. If <a href="#i500070">OCIIterPrev()</a> is called immediately after creating the iterator, then an "at beginning of collection" error is returned.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3738"></a>Returns</p>
<p>This function returns an error if any of the input parameters is <code>NULL</code>.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3739"></a>Related Functions</p>
<p><a href="oci17msc007.htm#i540516">OCIErrorGet()</a>, <a href="#i499922">OCIIterDelete()</a></p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="LNOCI17386" class="refsect2"><a id="i499922"></a>
<h2 class="refsect2">OCIIterDelete()<a id="sthref3740"></a></h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3741"></a>Purpose</p>
<p>Deletes a collection iterator.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3742"></a>Syntax</p>
<pre>
sword OCIIterDelete ( OCIEnv           *env, 
                      OCIError         *err, 
                      OCIIter          **itr );
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3743"></a>Parameters</p>
<dl>
<dt>env (IN/OUT)</dt>
<dd>
<p>The OCI environment handle initialized in object mode.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="oci16rel001.htm#i556149">"OCIEnvCreate()"</a>, <a href="oci16rel001.htm#i562098">"OCIEnvNlsCreate()"</a>, and <a href="ociaedep001.htm#i556330">"OCIInitialize()"</a> (deprecated)</div>
</dd>
<dt>err (IN/OUT)</dt>
<dd>
<p>The OCI error handle. If there is an error, it is recorded in <code>err</code>, and this function returns <code>OCI_ERROR</code>. Obtain diagnostic information by calling <a href="oci17msc007.htm#i540516">OCIErrorGet()</a>.</p>
</dd>
<dt>itr (IN/OUT)</dt>
<dd>
<p>The allocated collection iterator that is destroyed and set to <code>NULL</code> before returning.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3744"></a>Comments</p>
<p>Deletes an iterator that was previously created by a call to <a href="#i499885">OCIIterCreate()</a>.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3745"></a>Returns</p>
<p>This function returns an error if any of the input parameters is <code>NULL</code>.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3746"></a>Related Functions</p>
<p><a href="oci17msc007.htm#i540516">OCIErrorGet()</a>, <a href="#i499885">OCIIterCreate()</a></p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="LNOCI17387" class="refsect2"><a id="i499958"></a>
<h2 class="refsect2">OCIIterGetCurrent()<a id="sthref3747"></a></h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3748"></a>Purpose</p>
<p>Gets a pointer to the current iterator collection element.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3749"></a>Syntax</p>
<pre>
sword OCIIterGetCurrent ( OCIEnv            *env, 
                          OCIError          *err, 
                          const OCIIter     *itr, 
                          void              **elem, 
                          void              **elemind );
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3750"></a>Parameters</p>
<dl>
<dt>env (IN/OUT)</dt>
<dd>
<p>The OCI environment handle initialized in object mode.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="oci16rel001.htm#i556149">"OCIEnvCreate()"</a>, <a href="oci16rel001.htm#i562098">"OCIEnvNlsCreate()"</a>, and <a href="ociaedep001.htm#i556330">"OCIInitialize()"</a> (deprecated)</div>
</dd>
<dt>err (IN/OUT)</dt>
<dd>
<p>The OCI error handle. If there is an error, it is recorded in <code>err</code>, and this function returns <code>OCI_ERROR</code>. Obtain diagnostic information by calling <a href="oci17msc007.htm#i540516">OCIErrorGet()</a>.</p>
</dd>
<dt>itr (IN)</dt>
<dd>
<p>Iterator that points to the current element.</p>
</dd>
<dt>elem (OUT)</dt>
<dd>
<p>Address of the element pointed to by the iterator to be returned.</p>
</dd>
<dt>elemind (OUT) [optional]</dt>
<dd>
<p>Address of the element's <code>NULL</code> indicator information to be returned; if (<code>elem_ind</code> == NULL) then the <code>NULL</code> indicator information is <span class="italic">not</span> returned.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3751"></a>Comments</p>
<p>Returns the pointer to the current iterator collection element and its corresponding <code>NULL</code> information.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3752"></a>Returns</p>
<p>This function returns an error if any input parameter is <code>NULL</code>.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3753"></a>Related Functions</p>
<p><a href="oci17msc007.htm#i540516">OCIErrorGet()</a>, <a href="#i500027">OCIIterNext()</a>, <a href="#i500070">OCIIterPrev()</a></p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="LNOCI17388" class="refsect2"><a id="i499993"></a>
<h2 class="refsect2">OCIIterInit()<a id="sthref3754"></a></h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3755"></a>Purpose</p>
<p>Initializes an iterator to scan a collection.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3756"></a>Syntax</p>
<pre>
sword OCIIterInit ( OCIEnv              *env, 
                    OCIError            *err, 
                    const OCIColl       *coll, 
                    OCIIter             *itr );
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3757"></a>Parameters</p>
<dl>
<dt>env (IN/OUT)</dt>
<dd>
<p>The OCI environment handle initialized in object mode.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="oci16rel001.htm#i556149">"OCIEnvCreate()"</a>, <a href="oci16rel001.htm#i562098">"OCIEnvNlsCreate()"</a>, and <a href="ociaedep001.htm#i556330">"OCIInitialize()"</a> (deprecated)</div>
</dd>
<dt>err (IN/OUT)</dt>
<dd>
<p>The OCI error handle. If there is an error, it is recorded in <code>err</code>, and this function returns <code>OCI_ERROR</code>. Obtain diagnostic information by calling <a href="oci17msc007.htm#i540516">OCIErrorGet()</a>.</p>
</dd>
<dt>coll (IN)</dt>
<dd>
<p>Collection that is scanned. For Oracle8<span class="italic">i</span> or later, valid collection types include <a id="sthref3758"></a>varrays and nested tables.</p>
</dd>
<dt>itr (IN/OUT)</dt>
<dd>
<p>Pointer to an allocated collection iterator.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3759"></a>Comments</p>
<p>Initializes at the given iterator to point to the beginning of the given collection. You can use this function to perform either of the following tasks:</p>
<ul>
<li>
<p>Reset an iterator to point back to the beginning of the collection.</p>
</li>
<li>
<p>Reuse an allocated iterator to scan a different collection.</p>
</li>
</ul>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3760"></a>Returns</p>
<p>Returns an error if any input parameter is <code>NULL</code>.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3761"></a>Related Functions</p>
<p><a href="oci17msc007.htm#i540516">OCIErrorGet()</a></p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="LNOCI17389" class="refsect2"><a id="i500027"></a>
<h2 class="refsect2">OCIIterNext()<a id="sthref3762"></a></h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3763"></a>Purpose</p>
<p>Gets a pointer to the next iterator collection element.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3764"></a>Syntax</p>
<pre>
sword OCIIterNext ( OCIEnv            *env,
                    OCIError          *err, 
                    OCIIter           *itr, 
                    void              **elem,
                    void              **elemind,
                    boolean           *eoc);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3765"></a>Parameters</p>
<dl>
<dt>env (IN/OUT)</dt>
<dd>
<p>The OCI environment handle initialized in object mode.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="oci16rel001.htm#i556149">"OCIEnvCreate()"</a>, <a href="oci16rel001.htm#i562098">"OCIEnvNlsCreate()"</a>, and <a href="ociaedep001.htm#i556330">"OCIInitialize()"</a> (deprecated)</div>
</dd>
<dt>err (IN/OUT)</dt>
<dd>
<p>The OCI error handle. If there is an error, it is recorded in <code>err</code>, and this function returns <code>OCI_ERROR</code>. Obtain diagnostic information by calling <a href="oci17msc007.htm#i540516">OCIErrorGet()</a>.</p>
</dd>
<dt>itr (IN/OUT)</dt>
<dd>
<p>Iterator that is updated to point to the next element.</p>
</dd>
<dt>elem (OUT)</dt>
<dd>
<p>Address of the next element; returned after the iterator is updated to point to it.</p>
</dd>
<dt>elemind (OUT) [optional]</dt>
<dd>
<p>Address of the element's <code>NULL</code> indicator information; if (<code>elem_ind</code> == <code>NULL</code>), then the <code>NULL</code> indicator information is <span class="italic">not</span> returned.</p>
</dd>
<dt>eoc (OUT)</dt>
<dd>
<p><code>TRUE</code> if the iterator is at the end of the collection (that is, the next element does not exist); otherwise, <code>FALSE</code>.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3766"></a>Comments</p>
<p>This function returns a pointer to the next iterator collection element and its corresponding <code>NULL</code> information. It also updates the iterator to point to the next element.</p>
<p>If the iterator is pointing to the last element of the collection before you execute this function, then calling this function sets the <code>eoc</code> flag to <code>TRUE</code>. The iterator is left unchanged in that case.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3767"></a>Returns</p>
<p>This function returns an error if any input parameter is <code>NULL</code>.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3768"></a>Related Functions</p>
<p><a href="oci17msc007.htm#i540516">OCIErrorGet()</a>, <a href="#i499958">OCIIterGetCurrent()</a>, <a href="#i500070">OCIIterPrev()</a></p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="LNOCI17390" class="refsect2"><a id="i500070"></a>
<h2 class="refsect2">OCIIterPrev()<a id="sthref3769"></a></h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3770"></a>Purpose</p>
<p>Gets a pointer to the previous iterator collection element.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3771"></a>Syntax</p>
<pre>
sword OCIIterPrev ( OCIEnv            *env, 
                    OCIError          *err, 
                    OCIIter           *itr, 
                    void              **elem, 
                    void              **elemind,
                    boolean           *boc );
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3772"></a>Parameters</p>
<dl>
<dt>env (IN/OUT)</dt>
<dd>
<p>The OCI environment handle initialized in object mode.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="oci16rel001.htm#i556149">"OCIEnvCreate()"</a>, <a href="oci16rel001.htm#i562098">"OCIEnvNlsCreate()"</a>, and <a href="ociaedep001.htm#i556330">"OCIInitialize()"</a> (deprecated)</div>
</dd>
<dt>err (IN/OUT)</dt>
<dd>
<p>The OCI error handle. If there is an error, it is recorded in <code>err</code>, and this function returns <code>OCI_ERROR</code>. Obtain diagnostic information by calling <a href="oci17msc007.htm#i540516">OCIErrorGet()</a>.</p>
</dd>
<dt>itr (IN/OUT)</dt>
<dd>
<p>Iterator that is updated to point to the previous element.</p>
</dd>
<dt>elem (OUT)</dt>
<dd>
<p>Address of the previous element; returned after the iterator is updated to point to it.</p>
</dd>
<dt>elemind (OUT) [optional]</dt>
<dd>
<p>Address of the element's <code>NULL</code> indicator information; if (<code>elemind</code> == <code>NULL</code>), then the <code>NULL</code> indicator information is <span class="italic">not</span> returned.</p>
</dd>
<dt>boc (OUT)</dt>
<dd>
<p><code>TRUE</code> if iterator is at the beginning of the collection (that is, the previous element does not exist); otherwise, <code>FALSE</code>.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3773"></a>Comments</p>
<p>This function returns a pointer to the previous iterator collection element and its corresponding <code>NULL</code> information. The iterator is updated to point to the previous element.</p>
<p>If the iterator is pointing to the first element of the collection before you execute this function, then calling this function sets <code>boc</code> to <code>TRUE</code>. The iterator is left unchanged in that case.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3774"></a>Returns</p>
<p>This function returns an error if any input parameter is <code>NULL</code>.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3775"></a>Related Functions</p>
<p><a href="oci17msc007.htm#i540516">OCIErrorGet()</a>, <a href="#i499958">OCIIterGetCurrent()</a>, <a href="#i500027">OCIIterNext()</a></p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" --></div>
<!-- class="refsect1" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment1004">
<tr>
<td class="cellalignment1013">
<table class="cellalignment1009">
<tr>
<td class="cellalignment1008"><a href="oci19map.htm"><img width="24" height="24" src="../../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment1008"><a href="oci19map002.htm"><img width="24" height="24" src="../../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;1996, 2014,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment1015">
<table class="cellalignment1007">
<tr>
<td class="cellalignment1008"><a href="../../index.htm"><img width="24" height="24" src="../../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment1008"><a href="../../nav/portal_booklist.htm"><img width="24" height="24" src="../../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment1008"><a href="toc.htm"><img width="24" height="24" src="../../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment1008"><a href="index.htm"><img width="24" height="24" src="../../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment1008"><a href="../../nav/mindx.htm"><img width="24" height="24" src="../../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment1008"><a href="../../dcommon/html/feedback.htm"><img width="24" height="24" src="../../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>
</body>
</html>
