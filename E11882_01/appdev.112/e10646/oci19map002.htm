<!DOCTYPE html>
<html lang="en" >
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1">
<meta charset="utf-8">
<title>OCI Date, Datetime, and Interval Functions</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Merged Version 1023" />
<meta name="dcterms.created" content="2014-07-18T15:18:38Z" />
<meta name="robots" content="all" />
<meta name="dcterms.title" content="Call Interface Programmer's Guide" />
<meta name="dcterms.identifier" content="E10646-15" />
<meta name="dcterms.isVersionOf" content="LNOCI" />
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;1996, 2014,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved." />
<link rel="Start" href="../../index.htm" title="Home" type="text/html" />
<link rel="Copyright" href="../../dcommon/html/cpyr.htm" title="Copyright" type="text/html" />

<script type="application/javascript"  src="../../dcommon/js/headfoot.js"></script>
<script type="application/javascript"  src="../../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html" />
<link rel="Index" href="index.htm" title="Index" type="text/html" />
<link rel="Prev" href="oci19map001.htm" title="Previous" type="text/html" />
<link rel="Next" href="oci19map003.htm" title="Next" type="text/html" />
<link rel="alternate" href="../e10646.pdf" title="PDF version" type="application/pdf" />
<link rel="schema.dcterms" href="http://purl.org/dc/terms/" />
<link rel="stylesheet" href="../../dcommon/css/fusiondoc.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/header.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/footer.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/fonts.css">
<link rel="stylesheet" href="../../dcommon/css/foundation.css">
<link rel="stylesheet" href="../../dcommon/css/codemirror.css">
<link rel="stylesheet" type="text/css" title="Default" href="../../nav/css/html5.css">
<link rel="stylesheet" href="../../dcommon/css/respond-480-tablet.css">
<link rel="stylesheet" href="../../dcommon/css/respond-768-laptop.css">
<link rel="stylesheet" href="../../dcommon/css/respond-1140-deskop.css">
<script type="application/javascript" src="../../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">44/79</span> <!-- End Header --><a id="i490882"></a>
<div id="LNOCI182" class="refsect1">
<h1 class="refsect1">OCI Date, Datetime, and Interval Functions</h1>
<p><a href="#CEGGHHEA">Table 19-4</a> describes the OCI date and interval functions that are described in this section.</p>
<div id="LNOCI17391" class="tblformalwide">
<p class="titleintable"><a id="sthref3776"></a><a id="CEGGHHEA"></a>Table 19-4 Date Functions</p>
<table class="cellalignment1011" title="Date Functions " summary="This table is described in the preceding text" dir="ltr">
<thead>
<tr class="cellalignment1005">
<th class="cellalignment1012" id="r1c1-t23">Function</th>
<th class="cellalignment1012" id="r1c2-t23">Purpose</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r2c1-t23" headers="r1c1-t23">
<p><a href="#i520163">"OCIDateAddDays()"</a></p>
</td>
<td class="cellalignment1013" headers="r2c1-t23 r1c2-t23">
<p>Add or subtract days</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r3c1-t23" headers="r1c1-t23">
<p><a href="#i430029">"OCIDateAddMonths()"</a></p>
</td>
<td class="cellalignment1013" headers="r3c1-t23 r1c2-t23">
<p>Add or subtract months</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r4c1-t23" headers="r1c1-t23">
<p><a href="#i456990">"OCIDateAssign()"</a></p>
</td>
<td class="cellalignment1013" headers="r4c1-t23 r1c2-t23">
<p>Assign date</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r5c1-t23" headers="r1c1-t23">
<p><a href="#i450221">"OCIDateCheck()"</a></p>
</td>
<td class="cellalignment1013" headers="r5c1-t23 r1c2-t23">
<p>Check if the given date is valid</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r6c1-t23" headers="r1c1-t23">
<p><a href="#i450265">"OCIDateCompare()"</a></p>
</td>
<td class="cellalignment1013" headers="r6c1-t23 r1c2-t23">
<p>Compare dates</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r7c1-t23" headers="r1c1-t23">
<p><a href="#i430033">"OCIDateDaysBetween()"</a></p>
</td>
<td class="cellalignment1013" headers="r7c1-t23 r1c2-t23">
<p>Get number of days between two dates</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r8c1-t23" headers="r1c1-t23">
<p><a href="#i450182">"OCIDateFromText()"</a></p>
</td>
<td class="cellalignment1013" headers="r8c1-t23 r1c2-t23">
<p>Convert string to date</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r9c1-t23" headers="r1c1-t23">
<p><a href="#i456994">"OCIDateGetDate()"</a></p>
</td>
<td class="cellalignment1013" headers="r9c1-t23 r1c2-t23">
<p>Get the date portion of a date</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r10c1-t23" headers="r1c1-t23">
<p><a href="#i456998">"OCIDateGetTime()"</a></p>
</td>
<td class="cellalignment1013" headers="r10c1-t23 r1c2-t23">
<p>Get the time portion of a date</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r11c1-t23" headers="r1c1-t23">
<p><a href="#i430045">"OCIDateLastDay()"</a></p>
</td>
<td class="cellalignment1013" headers="r11c1-t23 r1c2-t23">
<p>Get date of last day of month</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r12c1-t23" headers="r1c1-t23">
<p><a href="#i430049">"OCIDateNextDay()"</a></p>
</td>
<td class="cellalignment1013" headers="r12c1-t23 r1c2-t23">
<p>Get date of next day</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r13c1-t23" headers="r1c1-t23">
<p><a href="#i457002">"OCIDateSetDate()"</a></p>
</td>
<td class="cellalignment1013" headers="r13c1-t23 r1c2-t23">
<p>Set the date portion of a date</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r14c1-t23" headers="r1c1-t23">
<p><a href="#i457006">"OCIDateSetTime()"</a></p>
</td>
<td class="cellalignment1013" headers="r14c1-t23 r1c2-t23">
<p>Set the time portion of a date</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r15c1-t23" headers="r1c1-t23">
<p><a href="#i430057">"OCIDateSysDate()"</a></p>
</td>
<td class="cellalignment1013" headers="r15c1-t23 r1c2-t23">
<p>Get the current system date and time</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r16c1-t23" headers="r1c1-t23">
<p><a href="#i508673">"OCIDateTimeAssign()"</a></p>
</td>
<td class="cellalignment1013" headers="r16c1-t23 r1c2-t23">
<p>Perform a datetime assignment</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r17c1-t23" headers="r1c1-t23">
<p><a href="#i517610">"OCIDateTimeCheck()"</a></p>
</td>
<td class="cellalignment1013" headers="r17c1-t23 r1c2-t23">
<p>Check if the given date is valid</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r18c1-t23" headers="r1c1-t23">
<p><a href="#i508759">"OCIDateTimeCompare()"</a></p>
</td>
<td class="cellalignment1013" headers="r18c1-t23 r1c2-t23">
<p>Compare two datetime values</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r19c1-t23" headers="r1c1-t23">
<p><a href="#i512069">"OCIDateTimeConstruct()"</a></p>
</td>
<td class="cellalignment1013" headers="r19c1-t23 r1c2-t23">
<p>Construct a datetime descriptor</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r20c1-t23" headers="r1c1-t23">
<p><a href="#i508796">"OCIDateTimeConvert()"</a></p>
</td>
<td class="cellalignment1013" headers="r20c1-t23 r1c2-t23">
<p>Convert one datetime type to another</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r21c1-t23" headers="r1c1-t23">
<p><a href="#i512426">"OCIDateTimeFromArray()"</a></p>
</td>
<td class="cellalignment1013" headers="r21c1-t23 r1c2-t23">
<p>Convert an array of size <code>OCI_DT_ARRAYLEN</code> to an <code>OCIDateTime</code> descriptor</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r22c1-t23" headers="r1c1-t23">
<p><a href="#i520832">"OCIDateTimeFromText()"</a></p>
</td>
<td class="cellalignment1013" headers="r22c1-t23 r1c2-t23">
<p>Convert the given string to Oracle datetime type in the <code>OCIDateTime</code> descriptor, according to the specified format</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r23c1-t23" headers="r1c1-t23">
<p><a href="#i508882">"OCIDateTimeGetDate()"</a></p>
</td>
<td class="cellalignment1013" headers="r23c1-t23 r1c2-t23">
<p>Get the date (year, month, day) portion of a datetime value</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r24c1-t23" headers="r1c1-t23">
<p><a href="#i508932">"OCIDateTimeGetTime()"</a></p>
</td>
<td class="cellalignment1013" headers="r24c1-t23 r1c2-t23">
<p>Get the time (hour, min, second, fractional second) of a datetime value</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r25c1-t23" headers="r1c1-t23">
<p><a href="#i512092">"OCIDateTimeGetTimeZoneName()"</a></p>
</td>
<td class="cellalignment1013" headers="r25c1-t23 r1c2-t23">
<p>Get the time zone name portion of a datetime value</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r26c1-t23" headers="r1c1-t23">
<p><a href="#i508981">"OCIDateTimeGetTimeZoneOffset()"</a></p>
</td>
<td class="cellalignment1013" headers="r26c1-t23 r1c2-t23">
<p>Get the time zone (hour, minute) portion of a datetime value</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r27c1-t23" headers="r1c1-t23">
<p><a href="#i508985">"OCIDateTimeIntervalAdd()"</a></p>
</td>
<td class="cellalignment1013" headers="r27c1-t23 r1c2-t23">
<p>Add an interval to a datetime to produce a resulting datetime</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r28c1-t23" headers="r1c1-t23">
<p><a href="#i509023">"OCIDateTimeIntervalSub()"</a></p>
</td>
<td class="cellalignment1013" headers="r28c1-t23 r1c2-t23">
<p>Subtract an interval from a datetime and store the result in a datetime</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r29c1-t23" headers="r1c1-t23">
<p><a href="#i511964">"OCIDateTimeSubtract()"</a></p>
</td>
<td class="cellalignment1013" headers="r29c1-t23 r1c2-t23">
<p>Take two datetimes as input and store their difference in an interval</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r30c1-t23" headers="r1c1-t23">
<p><a href="#i512454">"OCIDateTimeSysTimeStamp()"</a></p>
</td>
<td class="cellalignment1013" headers="r30c1-t23 r1c2-t23">
<p>Get the system current date and time as a time stamp with time zone</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r31c1-t23" headers="r1c1-t23">
<p><a href="#i512458">"OCIDateTimeToArray()"</a></p>
</td>
<td class="cellalignment1013" headers="r31c1-t23 r1c2-t23">
<p>Convert an <code>OCIDateTime</code> descriptor to an array</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r32c1-t23" headers="r1c1-t23">
<p><a href="#i509197">"OCIDateTimeToText()"</a></p>
</td>
<td class="cellalignment1013" headers="r32c1-t23 r1c2-t23">
<p>Convert the given date to a string according to the specified format</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r33c1-t23" headers="r1c1-t23">
<p><a href="#i512014">"OCIDateToText()"</a></p>
</td>
<td class="cellalignment1013" headers="r33c1-t23 r1c2-t23">
<p>Convert date to string</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r34c1-t23" headers="r1c1-t23">
<p><a href="#i430061">"OCIDateZoneToZone()"</a></p>
</td>
<td class="cellalignment1013" headers="r34c1-t23 r1c2-t23">
<p>Convert date from one time zone to another zone</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r35c1-t23" headers="r1c1-t23">
<p><a href="#i512468">"OCIIntervalAdd()"</a></p>
</td>
<td class="cellalignment1013" headers="r35c1-t23 r1c2-t23">
<p>Add two intervals to produce a resulting interval</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r36c1-t23" headers="r1c1-t23">
<p><a href="#i510645">"OCIIntervalAssign()"</a></p>
</td>
<td class="cellalignment1013" headers="r36c1-t23 r1c2-t23">
<p>Copy one interval to another</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r37c1-t23" headers="r1c1-t23">
<p><a href="#i510673">"OCIIntervalCheck()"</a></p>
</td>
<td class="cellalignment1013" headers="r37c1-t23 r1c2-t23">
<p>Check the validity of an interval</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r38c1-t23" headers="r1c1-t23">
<p><a href="#i510718">"OCIIntervalCompare()"</a></p>
</td>
<td class="cellalignment1013" headers="r38c1-t23 r1c2-t23">
<p>Compare two intervals</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r39c1-t23" headers="r1c1-t23">
<p><a href="#i510753">"OCIIntervalDivide()"</a></p>
</td>
<td class="cellalignment1013" headers="r39c1-t23 r1c2-t23">
<p>Divide an interval by an Oracle <code>NUMBER</code> to produce an interval</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r40c1-t23" headers="r1c1-t23">
<p><a href="#i512484">"OCIIntervalFromNumber()"</a></p>
</td>
<td class="cellalignment1013" headers="r40c1-t23 r1c2-t23">
<p>Convert an Oracle <code>NUMBER</code> to an interval</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r41c1-t23" headers="r1c1-t23">
<p><a href="#i510787">"OCIIntervalFromText()"</a></p>
</td>
<td class="cellalignment1013" headers="r41c1-t23 r1c2-t23">
<p>When given an interval string, return the interval represented by the string</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r42c1-t23" headers="r1c1-t23">
<p><a href="#i519352">"OCIIntervalFromTZ()"</a></p>
</td>
<td class="cellalignment1013" headers="r42c1-t23 r1c2-t23">
<p>Return an <code>OCI_DTYPE_INTERVAL_DS</code></p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r43c1-t23" headers="r1c1-t23">
<p><a href="#i519278">"OCIIntervalGetDaySecond()"</a></p>
</td>
<td class="cellalignment1013" headers="r43c1-t23 r1c2-t23">
<p>Get values of day, hour, minute, and second from an interval</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r44c1-t23" headers="r1c1-t23">
<p><a href="#i512495">"OCIIntervalGetYearMonth()"</a></p>
</td>
<td class="cellalignment1013" headers="r44c1-t23 r1c2-t23">
<p>Get year and month from an interval</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r45c1-t23" headers="r1c1-t23">
<p><a href="#i510838">"OCIIntervalMultiply()"</a></p>
</td>
<td class="cellalignment1013" headers="r45c1-t23 r1c2-t23">
<p>Multiply an interval by an Oracle <code>NUMBER</code> to produce an interval</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r46c1-t23" headers="r1c1-t23">
<p><a href="#i512522">"OCIIntervalSetDaySecond()"</a></p>
</td>
<td class="cellalignment1013" headers="r46c1-t23 r1c2-t23">
<p>Set day, hour, minute, and second in an interval</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r47c1-t23" headers="r1c1-t23">
<p><a href="#i512526">"OCIIntervalSetYearMonth()"</a></p>
</td>
<td class="cellalignment1013" headers="r47c1-t23 r1c2-t23">
<p>Set year and month in an interval</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r48c1-t23" headers="r1c1-t23">
<p><a href="#i510871">"OCIIntervalSubtract()"</a></p>
</td>
<td class="cellalignment1013" headers="r48c1-t23 r1c2-t23">
<p>Subtract two intervals and stores the result in an interval</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r49c1-t23" headers="r1c1-t23">
<p><a href="#i510907">"OCIIntervalToNumber()"</a></p>
</td>
<td class="cellalignment1013" headers="r49c1-t23 r1c2-t23">
<p>Convert an interval to an Oracle NUMBER</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r50c1-t23" headers="r1c1-t23">
<p><a href="#i510940">"OCIIntervalToText()"</a></p>
</td>
<td class="cellalignment1013" headers="r50c1-t23 r1c2-t23">
<p>When given an interval, produce a string representing the interval</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformalwide" -->
<div id="LNOCI17392" class="refsect2"><a id="i520163"></a>
<h2 class="refsect2">OCIDateAddDays()<a id="sthref3777"></a></h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3778"></a>Purpose</p>
<p>Adds or subtracts days from a given date.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3779"></a>Syntax</p>
<pre>
sword OCIDateAddDays ( OCIError          *err,
                       const OCIDate     *date, 
                       sb4               num_days,
                       OCIDate           *result );
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3780"></a>Parameters</p>
<dl>
<dt>err (IN/OUT)</dt>
<dd>
<p>The OCI error handle. If there is an error, it is recorded in <code>err</code>, and this function returns <code>OCI_ERROR</code>. Obtain diagnostic information by calling <a href="oci17msc007.htm#i540516">OCIErrorGet()</a>.</p>
</dd>
<dt>date (IN)</dt>
<dd>
<p>The given date from which to add or subtract.</p>
</dd>
<dt>num_days (IN)</dt>
<dd>
<p>Number of days to be added or subtracted. A negative value is subtracted.</p>
</dd>
<dt>result (IN/OUT)</dt>
<dd>
<p>Result of adding days to, or subtracting days from, <code>date</code>.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3781"></a>Returns</p>
<p>This function returns an error if an invalid date is passed to it.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3782"></a>Related Functions</p>
<p><a href="oci17msc007.htm#i540516">OCIErrorGet()</a>, <a href="#i430029">OCIDateAddMonths()</a></p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="LNOCI17393" class="refsect2"><a id="i430029"></a>
<h2 class="refsect2">OCIDateAddMonths()<a id="sthref3783"></a></h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3784"></a>Purpose</p>
<p>Adds or subtracts months from a given date.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3785"></a>Syntax</p>
<pre>
sword OCIDateAddMonths ( OCIError            *err,
                         const OCIDate       *date,
                         sb4                 num_months,
                         OCIDate             *result );
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3786"></a>Parameters</p>
<dl>
<dt>err (IN/OUT)</dt>
<dd>
<p>The OCI error handle. If there is an error, it is recorded in <code>err</code>, and this function returns <code>OCI_ERROR</code>. Obtain diagnostic information by calling <a href="oci17msc007.htm#i540516">OCIErrorGet()</a>.</p>
</dd>
<dt>date (IN)</dt>
<dd>
<p>The given date from which to add or subtract.</p>
</dd>
<dt>num_months (IN)</dt>
<dd>
<p>Number of months to be added or subtracted. A negative value is subtracted.</p>
</dd>
<dt>result (IN/OUT)</dt>
<dd>
<p>Result of adding days to, or subtracting days from, <code>date</code>.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3787"></a>Comments</p>
<p>If the input <code>date</code> is the last day of a month, then the appropriate adjustments are made to ensure that the output date is also the last day of the month. For example, Feb. 28 + 1 month = March 31, and November 30 &ndash; 3 months = August 31. Otherwise the <code>result</code> date has the same day component as <code>date</code>.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3788"></a>Returns</p>
<p>This function returns an error if an invalid date is passed to it.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3789"></a>Related Functions</p>
<p><a href="oci17msc007.htm#i540516">OCIErrorGet()</a>, <a href="#i520163">OCIDateAddDays()</a></p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="LNOCI17394" class="refsect2"><a id="i456990"></a>
<h2 class="refsect2">OCIDateAssign()<a id="sthref3790"></a></h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3791"></a>Purpose</p>
<p>Performs a date assignment.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3792"></a>Syntax</p>
<pre>
sword OCIDateAssign ( OCIError         *err,
                      const OCIDate    *from, 
                      OCIDate          *to );
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3793"></a>Parameters</p>
<dl>
<dt>err (IN/OUT)</dt>
<dd>
<p>The OCI error handle. If there is an error, it is recorded in <code>err</code>, and this function returns <code>OCI_ERROR</code>. Obtain diagnostic information by calling <a href="oci17msc007.htm#i540516">OCIErrorGet()</a>.</p>
</dd>
<dt>from (IN)</dt>
<dd>
<p>Date to be assigned.</p>
</dd>
<dt>to (OUT)</dt>
<dd>
<p>Target of assignment.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3794"></a>Comments</p>
<p>This function assigns a value from one <code>OCIDate</code> variable to another.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3795"></a>Related Functions</p>
<p><a href="oci17msc007.htm#i540516">OCIErrorGet()</a>, <a href="#i450221">OCIDateCheck()</a></p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="LNOCI17395" class="refsect2"><a id="i450221"></a>
<h2 class="refsect2">OCIDateCheck()<a id="sthref3796"></a></h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3797"></a>Purpose</p>
<p>Checks if the given date is valid.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3798"></a>Syntax</p>
<pre>
sword OCIDateCheck ( OCIError          *err,
                     const OCIDate     *date, 
                     uword             *valid );
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3799"></a>Parameters</p>
<dl>
<dt>err (IN/OUT)</dt>
<dd>
<p>The OCI error handle. If there is an error, it is recorded in <code>err</code>, and this function returns <code>OCI_ERROR</code>. Obtain diagnostic information by calling <a href="oci17msc007.htm#i540516">OCIErrorGet()</a>.</p>
</dd>
<dt>date (IN)</dt>
<dd>
<p>Date to be checked.</p>
</dd>
<dt>valid (OUT)</dt>
<dd>
<p>Returns zero for a valid date; otherwise, it returns the logical operator OR combination of all error bits specified in <a href="#CEGJDIGI">Table 19-5</a>.</p>
</dd>
</dl>
<div id="LNOCI17396" class="tblformal">
<p class="titleintable"><a id="sthref3800"></a><a id="CEGJDIGI"></a>Table 19-5 Error Bits Returned by the valid Parameter for OCIDateCheck()</p>
<table class="cellalignment1016" title="Error Bits Returned by the valid Parameter for OCIDateCheck()" summary="This table is described in the preceding text" dir="ltr">
<thead>
<tr class="cellalignment1005">
<th class="cellalignment1012" id="r1c1-t24">Macro Name</th>
<th class="cellalignment1012" id="r1c2-t24">Bit Number</th>
<th class="cellalignment1012" id="r1c3-t24">Error</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r2c1-t24" headers="r1c1-t24">
<p><code>OCI_DATE_INVALID_DAY</code></p>
</td>
<td class="cellalignment1013" headers="r2c1-t24 r1c2-t24">
<p>0x1</p>
</td>
<td class="cellalignment1013" headers="r2c1-t24 r1c3-t24">
<p>Bad day</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r3c1-t24" headers="r1c1-t24">
<p><code>OCI_DATE_DAY_BELOW_VALID</code></p>
</td>
<td class="cellalignment1013" headers="r3c1-t24 r1c2-t24">
<p>0x2</p>
</td>
<td class="cellalignment1013" headers="r3c1-t24 r1c3-t24">
<p>Bad day low/high bit (1=low)</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r4c1-t24" headers="r1c1-t24">
<p><code>OCI_DATE_INVALID_MONTH</code></p>
</td>
<td class="cellalignment1013" headers="r4c1-t24 r1c2-t24">
<p>0x4</p>
</td>
<td class="cellalignment1013" headers="r4c1-t24 r1c3-t24">
<p>Bad month</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r5c1-t24" headers="r1c1-t24">
<p><code>OCI_DATE_MONTH_BELOW_VALID</code></p>
</td>
<td class="cellalignment1013" headers="r5c1-t24 r1c2-t24">
<p>0x8</p>
</td>
<td class="cellalignment1013" headers="r5c1-t24 r1c3-t24">
<p>Bad month low/high bit (1=low)</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r6c1-t24" headers="r1c1-t24">
<p><code>OCI_DATE_INVALID_YEAR</code></p>
</td>
<td class="cellalignment1013" headers="r6c1-t24 r1c2-t24">
<p>0x10</p>
</td>
<td class="cellalignment1013" headers="r6c1-t24 r1c3-t24">
<p>Bad year</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r7c1-t24" headers="r1c1-t24">
<p><code>OCI_DATE_YEAR_BELOW_VALID</code></p>
</td>
<td class="cellalignment1013" headers="r7c1-t24 r1c2-t24">
<p>0x20</p>
</td>
<td class="cellalignment1013" headers="r7c1-t24 r1c3-t24">
<p>Bad year low/high bit (1=low)</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r8c1-t24" headers="r1c1-t24">
<p><code>OCI_DATE_INVALID_HOUR</code></p>
</td>
<td class="cellalignment1013" headers="r8c1-t24 r1c2-t24">
<p>0x40</p>
</td>
<td class="cellalignment1013" headers="r8c1-t24 r1c3-t24">
<p>Bad hour</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r9c1-t24" headers="r1c1-t24">
<p><code>OCI_DATE_HOUR_BELOW_VALID</code></p>
</td>
<td class="cellalignment1013" headers="r9c1-t24 r1c2-t24">
<p>0x80</p>
</td>
<td class="cellalignment1013" headers="r9c1-t24 r1c3-t24">
<p>Bad hour low/high bit (1=low)</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r10c1-t24" headers="r1c1-t24">
<p><code>OCI_DATE_INVALID_MINUTE</code></p>
</td>
<td class="cellalignment1013" headers="r10c1-t24 r1c2-t24">
<p>0x100</p>
</td>
<td class="cellalignment1013" headers="r10c1-t24 r1c3-t24">
<p>Bad minute</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r11c1-t24" headers="r1c1-t24">
<p><code>OCI_DATE_MINUTE_BELOW_VALID</code></p>
</td>
<td class="cellalignment1013" headers="r11c1-t24 r1c2-t24">
<p>0x200</p>
</td>
<td class="cellalignment1013" headers="r11c1-t24 r1c3-t24">
<p>Bad minute low/high bit (1=low)</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r12c1-t24" headers="r1c1-t24">
<p><code>OCI_DATE_INVALID_SECOND</code></p>
</td>
<td class="cellalignment1013" headers="r12c1-t24 r1c2-t24">
<p>0x400</p>
</td>
<td class="cellalignment1013" headers="r12c1-t24 r1c3-t24">
<p>Bad second</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r13c1-t24" headers="r1c1-t24">
<p><code>OCI_DATE_SECOND_BELOW_VALID</code></p>
</td>
<td class="cellalignment1013" headers="r13c1-t24 r1c2-t24">
<p>0x800</p>
</td>
<td class="cellalignment1013" headers="r13c1-t24 r1c3-t24">
<p>Bad second low/high bit (1=low)</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r14c1-t24" headers="r1c1-t24">
<p><code>OCI_DATE_DAY_MISSING_FROM_1582</code></p>
</td>
<td class="cellalignment1013" headers="r14c1-t24 r1c2-t24">
<p>0x1000</p>
</td>
<td class="cellalignment1013" headers="r14c1-t24 r1c3-t24">
<p>Day is one of those missing from 1582</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r15c1-t24" headers="r1c1-t24">
<p><code>OCI_DATE_YEAR_ZERO</code></p>
</td>
<td class="cellalignment1013" headers="r15c1-t24 r1c2-t24">
<p>0x2000</p>
</td>
<td class="cellalignment1013" headers="r15c1-t24 r1c3-t24">
<p>Year may not equal zero</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r16c1-t24" headers="r1c1-t24">
<p><code>OCI_DATE_INVALID_FORMAT</code></p>
</td>
<td class="cellalignment1013" headers="r16c1-t24 r1c2-t24">
<p>0x8000</p>
</td>
<td class="cellalignment1013" headers="r16c1-t24 r1c3-t24">
<p>Bad date format input</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<p>For example, if the date passed in was 2/0/1990 25:61:10 in (month/day/year hours:minutes:seconds format), the error returned is:</p>
<pre>
OCI_DATE_INVALID_DAY | OCI_DATE_DAY_BELOW_VALID | OCI_DATE_INVALID_HOUR | 
   OCI_DATE_INVALID_MINUTE.
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3801"></a>Returns</p>
<p>This function returns an error if <code>date</code> or <code>valid</code> pointer is <code>NULL</code>.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3802"></a>Related Functions</p>
<p><a href="oci17msc007.htm#i540516">OCIErrorGet()</a>, <a href="#i450265">OCIDateCompare()</a></p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="LNOCI17397" class="refsect2"><a id="i450265"></a>
<h2 class="refsect2">OCIDateCompare()<a id="sthref3803"></a></h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3804"></a>Purpose</p>
<p>Compares two dates.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3805"></a>Syntax</p>
<pre>
sword OCIDateCompare ( OCIError           *err, 
                       const OCIDate      *date1, 
                       const OCIDate      *date2,
                       sword              *result );
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3806"></a>Parameters</p>
<dl>
<dt>err (IN/OUT)</dt>
<dd>
<p>The OCI error handle. If there is an error, it is recorded in <code>err</code>, and this function returns <code>OCI_ERROR</code>. Obtain diagnostic information by calling <a href="oci17msc007.htm#i540516">OCIErrorGet()</a>.</p>
</dd>
<dt>date1, date2 (IN)</dt>
<dd>
<p>Dates to be compared.</p>
</dd>
<dt>result (OUT)</dt>
<dd>
<p>Comparison result as listed in <a href="#CEGGGEBJ">Table 19-6</a>.</p>
</dd>
</dl>
<div id="LNOCI17398" class="tblformal">
<p class="titleintable"><a id="sthref3807"></a><a id="CEGGGEBJ"></a>Table 19-6 Comparison Results</p>
<table class="cellalignment1016" title="Comparison Results " summary="This table is described in the preceding text" dir="ltr">
<thead>
<tr class="cellalignment1005">
<th class="cellalignment1012" id="r1c1-t25">Comparison Result</th>
<th class="cellalignment1012" id="r1c2-t25">Output in result Parameter</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r2c1-t25" headers="r1c1-t25">
<p><code>date1</code> &lt; <code>date2</code></p>
</td>
<td class="cellalignment1013" headers="r2c1-t25 r1c2-t25">
<p>-1</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r3c1-t25" headers="r1c1-t25">
<p><code>date1</code> = <code>date2</code></p>
</td>
<td class="cellalignment1013" headers="r3c1-t25 r1c2-t25">
<p>0</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r4c1-t25" headers="r1c1-t25">
<p><code>date1</code> &gt; <code>date2</code></p>
</td>
<td class="cellalignment1013" headers="r4c1-t25 r1c2-t25">
<p>1</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3808"></a>Returns</p>
<p>This function returns an error if an invalid date is passed to it.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3809"></a>Related Functions</p>
<p><a href="oci17msc007.htm#i540516">OCIErrorGet()</a>, <a href="#i450221">OCIDateCheck()</a></p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="LNOCI17399" class="refsect2"><a id="i430033"></a>
<h2 class="refsect2">OCIDateDaysBetween()<a id="sthref3810"></a></h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3811"></a>Purpose</p>
<p>Gets the number of days between two dates.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3812"></a>Syntax</p>
<pre>
sword OCIDateDaysBetween ( OCIError            *err, 
                           const OCIDate       *date1, 
                           const OCIDate       *date2, 
                           sb4                 *num_days );
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3813"></a>Parameters</p>
<dl>
<dt>err (IN/OUT)</dt>
<dd>
<p>The OCI error handle. If there is an error, it is recorded in <code>err</code>, and this function returns <code>OCI_ERROR</code>. Obtain diagnostic information by calling <a href="oci17msc007.htm#i540516">OCIErrorGet()</a>.</p>
</dd>
<dt>date1 (IN)</dt>
<dd>
<p>Input date.</p>
</dd>
<dt>date2 (IN)</dt>
<dd>
<p>Input date.</p>
</dd>
<dt>num_days (OUT)</dt>
<dd>
<p>Number of days between <code>date1</code> and <code>date2</code>.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3814"></a>Comments</p>
<p>When the number of days between <code>date1</code> and <code>date2</code> is computed, the time is ignored.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3815"></a>Returns</p>
<p>This function returns an error if an invalid date is passed to it.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3816"></a>Related Functions</p>
<p><a href="oci17msc007.htm#i540516">OCIErrorGet()</a>, <a href="#i450221">OCIDateCheck()</a></p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="LNOCI17400" class="refsect2"><a id="i450182"></a>
<h2 class="refsect2">OCIDateFromText()<a id="sthref3817"></a></h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3818"></a>Purpose</p>
<p>Converts a character string to a date type according to the specified format.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3819"></a>Syntax</p>
<pre>
sword OCIDateFromText ( OCIError           *err,
                        const OraText      *date_str, 
                        ub4                d_str_length, 
                        const OraText      *fmt,
                        ub1                fmt_length, 
                        const OraText      *lang_name,
                        ub4                lang_length, 
                        OCIDate            *date );
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3820"></a>Parameters</p>
<dl>
<dt>err (IN/OUT)</dt>
<dd>
<p>The OCI error handle. If there is an error, it is recorded in <code>err</code>, and this function returns <code>OCI_ERROR</code>. Obtain diagnostic information by calling <a href="oci17msc007.htm#i540516">OCIErrorGet()</a>.</p>
</dd>
<dt>date_str (IN)</dt>
<dd>
<p>Input string to be converted to Oracle date.</p>
</dd>
<dt>d_str_length (IN)</dt>
<dd>
<p>Size of the input string. If the length is &ndash;1, then <code>date_str</code> is treated as a <code>NULL</code>-terminated string.</p>
</dd>
<dt>fmt (IN)</dt>
<dd>
<p>Conversion format. If <code>fmt</code> is a <code>NULL</code> pointer, then the string is expected to be in "DD-MON-YY" format.</p>
</dd>
<dt>fmt_length (IN)</dt>
<dd>
<p>Length of the <code>fmt</code> parameter.</p>
</dd>
<dt>lang_name (IN)</dt>
<dd>
<p>Language in which the names and abbreviations of days and months are specified. If <code>lang_name</code> is a <code>NULL</code> string, <code>(text *)0</code>, then the default language of the session is used.</p>
</dd>
<dt>lang_length (IN)</dt>
<dd>
<p>Length of the <code>lang_name</code> parameter.</p>
</dd>
<dt>date (OUT)</dt>
<dd>
<p>Given string converted to date.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3821"></a>Comments</p>
<p>See the <code>TO_DATE</code> conversion function described in the <a class="olink SQLRF06132" href="../../server.112/e41084/functions203.htm#SQLRF06132"><span class="italic">Oracle Database SQL Language Reference</span></a> for a description of format and multilingual arguments.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3822"></a>Returns</p>
<p>This function returns an error if it receives an invalid format, language, or input string.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3823"></a>Related Functions</p>
<p><a href="oci17msc007.htm#i540516">OCIErrorGet()</a>, <a href="#i512014">OCIDateToText()</a></p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="LNOCI17401" class="refsect2"><a id="i456994"></a>
<h2 class="refsect2">OCIDateGetDate()<a id="sthref3824"></a></h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3825"></a>Purpose</p>
<p>Gets the year, month, and day stored in an Oracle date.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3826"></a>Syntax</p>
<pre>
void OCIDateGetDate ( const OCIDate    *date,
                      sb2              *year,
                      ub1              *month, 
                      ub1              *day ); 
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3827"></a>Parameters</p>
<dl>
<dt>date (IN)</dt>
<dd>
<p>Oracle date whose year, month, day data is retrieved.</p>
</dd>
<dt>year (OUT)</dt>
<dd>
<p>Year value returned.</p>
</dd>
<dt>month (OUT)</dt>
<dd>
<p>Month value returned.</p>
</dd>
<dt>day (OUT)</dt>
<dd>
<p>Day value returned.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3828"></a>Comments</p>
<p>None.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3829"></a>Related Functions</p>
<p><a href="#i457002">OCIDateSetDate()</a>, <a href="#i456998">OCIDateGetTime()</a></p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="LNOCI17402" class="refsect2"><a id="i456998"></a>
<h2 class="refsect2">OCIDateGetTime()<a id="sthref3830"></a></h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3831"></a>Purpose</p>
<p>Gets the time stored in an Oracle date.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3832"></a>Syntax</p>
<pre>
void OCIDateGetTime ( const OCIDate    *date,
                      ub1              *hour,
                      ub1              *min, 
                      ub1              *sec );
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3833"></a>Parameters</p>
<dl>
<dt>date (IN)</dt>
<dd>
<p>Oracle date whose time data is retrieved.</p>
</dd>
<dt>hour (OUT)</dt>
<dd>
<p>Hour value returned.</p>
</dd>
<dt>min (OUT)</dt>
<dd>
<p>Minute value returned.</p>
</dd>
<dt>sec (OUT)</dt>
<dd>
<p>Second value returned.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3834"></a>Returns</p>
<p>Returns the time information in the form: hour, minute and seconds.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3835"></a>Related Functions</p>
<p><a href="#i457006">OCIDateSetTime()</a>, <a href="#i456994">OCIDateGetDate()</a></p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="LNOCI17403" class="refsect2"><a id="i430045"></a>
<h2 class="refsect2">OCIDateLastDay()<a id="sthref3836"></a></h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3837"></a>Purpose</p>
<p>Gets the date of the last day of the month in a specified date.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3838"></a>Syntax</p>
<pre>
sword OCIDateLastDay ( OCIError            *err,
                       const OCIDate       *date,
                       OCIDate             *last_day );
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3839"></a>Parameters</p>
<dl>
<dt>err (IN/OUT)</dt>
<dd>
<p>The OCI error handle. If there is an error, it is recorded in <code>err</code>, and this function returns <code>OCI_ERROR</code>. Obtain diagnostic information by calling <a href="oci17msc007.htm#i540516">OCIErrorGet()</a>.</p>
</dd>
<dt>date (IN)</dt>
<dd>
<p>Input date.</p>
</dd>
<dt>last_day (OUT)</dt>
<dd>
<p>Last day of the month in <code>date</code>.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3840"></a>Returns</p>
<p>This function returns an error if an invalid date is passed to it.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3841"></a>Related Functions</p>
<p><a href="oci17msc007.htm#i540516">OCIErrorGet()</a>, <a href="#i456994">OCIDateGetDate()</a></p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="LNOCI17404" class="refsect2"><a id="i430049"></a>
<h2 class="refsect2">OCIDateNextDay()<a id="sthref3842"></a></h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3843"></a>Purpose</p>
<p>Gets the date of the next day of the week after a given date.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3844"></a>Syntax</p>
<pre>
sword OCIDateNextDay ( OCIError            *err,
                       const OCIDate       *date,
                       const OraText       *day, 
                       ub4                 day_length,
                       OCIDate             *next_day );
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3845"></a>Parameters</p>
<dl>
<dt>err (IN/OUT)</dt>
<dd>
<p>The OCI error handle. If there is an error, it is recorded in <code>err</code>, and this function returns <code>OCI_ERROR</code>. Obtain diagnostic information by calling <a href="oci17msc007.htm#i540516">OCIErrorGet()</a>.</p>
</dd>
<dt>date (IN)</dt>
<dd>
<p>Returned date should be later than this date.</p>
</dd>
<dt>day (IN)</dt>
<dd>
<p>First day of the week named by this is returned.</p>
</dd>
<dt>day_length (IN)</dt>
<dd>
<p>Length in bytes of string <code>day</code>.</p>
</dd>
<dt>next_day (OUT)</dt>
<dd>
<p>First day of the week named by <code>day</code> that is later than <code>date</code>.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3846"></a>Returns</p>
<p>Returns the date of the first day of the week named by <code>day</code> that is later than <code>date</code>.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3847"></a>Example</p>
<p><a href="#CEGCAFGJ">Example 19-3</a> shows how to get the date of the next Monday after April 18, 1996 (a Thursday).</p>
<div id="LNOCI18353" class="example">
<p class="titleinexample"><a id="CEGCAFGJ"></a>Example 19-3 Getting the Date for a Specific Day After a Specified Date</p>
<pre>
OCIDate one_day, next_day;
/* Add code here to set one_day to be '18-APR-96' */
OCIDateNextDay(err, &amp;one_day, "MONDAY", strlen("MONDAY"), &amp;next_day);
</pre></div>
<!-- class="example" -->
<p><code>OCIDateNextDay()</code> returns "22-APR-96".</p>
<p>This function returns an error if an invalid date or day is passed to it.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3848"></a>Related Functions</p>
<p><a href="oci17msc007.htm#i540516">OCIErrorGet()</a>, <a href="#i456994">OCIDateGetDate()</a></p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="LNOCI17405" class="refsect2"><a id="i457002"></a>
<h2 class="refsect2">OCIDateSetDate()<a id="sthref3849"></a></h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3850"></a>Purpose</p>
<p>Set the values in an Oracle date.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3851"></a>Syntax</p>
<pre>
void OCIDateSetDate ( OCIDate    *date, 
                      sb2        year, 
                      ub1        month, 
                      ub1        day );
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3852"></a>Parameters</p>
<dl>
<dt>date (OUT)</dt>
<dd>
<p>Oracle date whose time data is set.</p>
</dd>
<dt>year (IN)</dt>
<dd>
<p>Year value to be set.</p>
</dd>
<dt>month (IN)</dt>
<dd>
<p>Month value to be set.</p>
</dd>
<dt>day (IN)</dt>
<dd>
<p>Day value to be set.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3853"></a>Comments</p>
<p>None.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3854"></a>Related Functions</p>
<p><a href="#i456994">OCIDateGetDate()</a></p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="LNOCI17406" class="refsect2"><a id="i457006"></a>
<h2 class="refsect2">OCIDateSetTime()<a id="sthref3855"></a></h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3856"></a>Purpose</p>
<p>Sets the time information in an Oracle date.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3857"></a>Syntax</p>
<pre>
void OCIDateSetTime ( OCIDate    *date,
                      ub1        hour, 
                      ub1        min, 
                      ub1        sec ); 
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3858"></a>Parameters</p>
<dl>
<dt>date (OUT)</dt>
<dd>
<p>Oracle date whose time data is set.</p>
</dd>
<dt>hour (IN)</dt>
<dd>
<p>Hour value to be set.</p>
</dd>
<dt>min (IN)</dt>
<dd>
<p>Minute value to be set.</p>
</dd>
<dt>sec (IN)</dt>
<dd>
<p>Second value to be set.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3859"></a>Comments</p>
<p>None.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3860"></a>Related Functions</p>
<p><a href="#i456998">OCIDateGetTime()</a></p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="LNOCI17407" class="refsect2"><a id="i430057"></a>
<h2 class="refsect2">OCIDateSysDate()<a id="sthref3861"></a></h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3862"></a>Purpose</p>
<p>Gets the current system date and time of the client.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3863"></a>Syntax</p>
<pre>
sword OCIDateSysDate ( OCIError       *err,
                       OCIDate        *sys_date );
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3864"></a>Parameters</p>
<dl>
<dt>err (IN/OUT)</dt>
<dd>
<p>The OCI error handle. If there is an error, it is recorded in <code>err</code>, and this function returns <code>OCI_ERROR</code>. Obtain diagnostic information by calling <a href="oci17msc007.htm#i540516">OCIErrorGet()</a>.</p>
</dd>
<dt>sys_date (OUT)</dt>
<dd>
<p>Current system date and time of the client.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3865"></a>Comments</p>
<p>None.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3866"></a>Related Functions</p>
<p><a href="oci17msc007.htm#i540516">OCIErrorGet()</a></p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="LNOCI17409" class="refsect2"><a id="i508673"></a>
<h2 class="refsect2"><a id="sthref3867"></a>OCIDateTimeAssign()</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3868"></a>Purpose</p>
<p>Performs a datetime assignment.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3869"></a>Syntax</p>
<pre>
sword OCIDateTimeAssign ( void                *hndl, 
                          OCIError            *err,
                          const OCIDateTime   *from,
                          OCIDateTime         *to );
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3870"></a>Parameters</p>
<dl>
<dt>hndl (IN)</dt>
<dd>
<p>The OCI user session handle or environment handle. If a user session handle is passed, the conversion occurs in the session's <code>NLS_LANGUAGE</code> and the session's <code>NLS_CALENDAR</code>; otherwise, the default is used.</p>
</dd>
<dt>err (IN/OUT)</dt>
<dd>
<p>The OCI error handle. If there is an error, it is recorded in <code>err</code>, and this function returns <code>OCI_ERROR</code>. Obtain diagnostic information by calling <a href="oci17msc007.htm#i540516">OCIErrorGet()</a>.</p>
</dd>
<dt>from (IN)</dt>
<dd>
<p>Source, right-hand side (<code>rhs</code>) datetime to be assigned.</p>
</dd>
<dt>to (OUT)</dt>
<dd>
<p>Target, left-hand side (<code>lhs</code>) of assignment.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3871"></a>Comments</p>
<p>This function performs an assignment from the <code>from</code> datetime to the <code>to</code> datetime for any of the datetime types listed in the description of the <code>type</code> parameter.</p>
<p>The <code>type</code> of the output is the same as that of the input.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3872"></a>Returns</p>
<p><code>OCI_SUCCESS</code>; or OCI_ERROR.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3873"></a>Related Functions</p>
<p><a href="#i517610">OCIDateTimeCheck()</a>, <a href="#i512069">OCIDateTimeConstruct()</a></p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="LNOCI17410" class="refsect2"><a id="i517610"></a>
<h2 class="refsect2"><a id="sthref3874"></a>OCIDateTimeCheck()</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3875"></a>Purpose</p>
<p>Checks if the given date is valid.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3876"></a>Syntax</p>
<pre>
sword OCIDateTimeCheck ( void                *hndl,
                         OCIError            *err, 
                         const OCIDateTime   *date, 
                         ub4                 *valid );
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3877"></a>Parameters</p>
<dl>
<dt>hndl (IN)</dt>
<dd>
<p>The OCI user session handle or environment handle. If a user session handle is passed, the conversion occurs in the session's <code>NLS_LANGUAGE</code> and the session's <code>NLS_CALENDAR</code>, otherwise, the default is used.</p>
</dd>
<dt>err (IN/OUT)</dt>
<dd>
<p>The OCI error handle. If there is an error, it is recorded in <code>err</code>, and this function returns <code>OCI_ERROR</code>. Obtain diagnostic information by calling <a href="oci17msc007.htm#i540516">OCIErrorGet()</a>.</p>
</dd>
<dt>date (IN)</dt>
<dd>
<p>The date to be checked.</p>
</dd>
<dt>valid (OUT)</dt>
<dd>
<p>Returns zero for a valid date; otherwise, it returns the logical operator OR combination of all the error bits specified in <a href="#CEGHADAA">Table 19-7</a>.</p>
</dd>
</dl>
<div id="LNOCI17411" class="tblformal">
<p class="titleintable"><a id="sthref3878"></a><a id="CEGHADAA"></a>Table 19-7 Error Bits Returned by the valid Parameter for OCIDateTimeCheck()</p>
<table class="cellalignment1016" title="Error Bits Returned by the valid Parameter for OCIDateTimeCheck()" summary="This table is described in the preceding text" dir="ltr">
<thead>
<tr class="cellalignment1005">
<th class="cellalignment1012" id="r1c1-t26">Macro Name</th>
<th class="cellalignment1012" id="r1c2-t26">Bit Number</th>
<th class="cellalignment1012" id="r1c3-t26">Error</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r2c1-t26" headers="r1c1-t26">
<p><code>OCI_DT_INVALID_DAY</code></p>
</td>
<td class="cellalignment1013" headers="r2c1-t26 r1c2-t26">
<p>0x1</p>
</td>
<td class="cellalignment1013" headers="r2c1-t26 r1c3-t26">
<p>Bad day</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r3c1-t26" headers="r1c1-t26">
<p><code>OCI_DT_DAY_BELOW_VALID</code></p>
</td>
<td class="cellalignment1013" headers="r3c1-t26 r1c2-t26">
<p>0x2</p>
</td>
<td class="cellalignment1013" headers="r3c1-t26 r1c3-t26">
<p>Bad day low/high bit (1=low)</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r4c1-t26" headers="r1c1-t26">
<p><code>OCI_DT_INVALID_MONTH</code></p>
</td>
<td class="cellalignment1013" headers="r4c1-t26 r1c2-t26">
<p>0x4</p>
</td>
<td class="cellalignment1013" headers="r4c1-t26 r1c3-t26">
<p>Bad month</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r5c1-t26" headers="r1c1-t26">
<p><code>OCI_DT_MONTH_BELOW_VALID</code></p>
</td>
<td class="cellalignment1013" headers="r5c1-t26 r1c2-t26">
<p>0x8</p>
</td>
<td class="cellalignment1013" headers="r5c1-t26 r1c3-t26">
<p>Bad month low/high bit (1=low)</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r6c1-t26" headers="r1c1-t26">
<p><code>OCI_DT_INVALID_YEAR</code></p>
</td>
<td class="cellalignment1013" headers="r6c1-t26 r1c2-t26">
<p>0x10</p>
</td>
<td class="cellalignment1013" headers="r6c1-t26 r1c3-t26">
<p>Bad year</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r7c1-t26" headers="r1c1-t26">
<p><code>OCI_DT_YEAR_BELOW_VALID</code></p>
</td>
<td class="cellalignment1013" headers="r7c1-t26 r1c2-t26">
<p>0x20</p>
</td>
<td class="cellalignment1013" headers="r7c1-t26 r1c3-t26">
<p>Bad year low/high bit (1=low)</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r8c1-t26" headers="r1c1-t26">
<p><code>OCI_DT_INVALID_HOUR</code></p>
</td>
<td class="cellalignment1013" headers="r8c1-t26 r1c2-t26">
<p>0x40</p>
</td>
<td class="cellalignment1013" headers="r8c1-t26 r1c3-t26">
<p>Bad hour</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r9c1-t26" headers="r1c1-t26">
<p><code>OCI_DT_HOUR_BELOW_VALID</code></p>
</td>
<td class="cellalignment1013" headers="r9c1-t26 r1c2-t26">
<p>0x80</p>
</td>
<td class="cellalignment1013" headers="r9c1-t26 r1c3-t26">
<p>Bad hour low/high bit (1=low)</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r10c1-t26" headers="r1c1-t26">
<p><code>OCI_DT_INVALID_MINUTE</code></p>
</td>
<td class="cellalignment1013" headers="r10c1-t26 r1c2-t26">
<p>0x100</p>
</td>
<td class="cellalignment1013" headers="r10c1-t26 r1c3-t26">
<p>Bad minute</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r11c1-t26" headers="r1c1-t26">
<p><code>OCI_DT_MINUTE_BELOW_VALID</code></p>
</td>
<td class="cellalignment1013" headers="r11c1-t26 r1c2-t26">
<p>0x200</p>
</td>
<td class="cellalignment1013" headers="r11c1-t26 r1c3-t26">
<p>Bad minute low/high bit (1=low)</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r12c1-t26" headers="r1c1-t26">
<p><code>OCI_DT_INVALID_SECOND</code></p>
</td>
<td class="cellalignment1013" headers="r12c1-t26 r1c2-t26">
<p>0x400</p>
</td>
<td class="cellalignment1013" headers="r12c1-t26 r1c3-t26">
<p>Bad second</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r13c1-t26" headers="r1c1-t26">
<p><code>OCI_DT_SECOND_BELOW_VALID</code></p>
</td>
<td class="cellalignment1013" headers="r13c1-t26 r1c2-t26">
<p>0x800</p>
</td>
<td class="cellalignment1013" headers="r13c1-t26 r1c3-t26">
<p>Bad second low/high bit (1=low)</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r14c1-t26" headers="r1c1-t26">
<p><code>OCI_DT_DAY_MISSING_FROM_1582</code></p>
</td>
<td class="cellalignment1013" headers="r14c1-t26 r1c2-t26">
<p>0x1000</p>
</td>
<td class="cellalignment1013" headers="r14c1-t26 r1c3-t26">
<p>Day is one of those missing from 1582</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r15c1-t26" headers="r1c1-t26">
<p><code>OCI_DT_YEAR_ZERO</code></p>
</td>
<td class="cellalignment1013" headers="r15c1-t26 r1c2-t26">
<p>0x2000</p>
</td>
<td class="cellalignment1013" headers="r15c1-t26 r1c3-t26">
<p>Year may not equal zero</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r16c1-t26" headers="r1c1-t26">
<p><code>OCI_DT_INVALID_TIMEZONE</code></p>
</td>
<td class="cellalignment1013" headers="r16c1-t26 r1c2-t26">
<p>0x4000</p>
</td>
<td class="cellalignment1013" headers="r16c1-t26 r1c3-t26">
<p>Bad time zone</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r17c1-t26" headers="r1c1-t26">
<p><code>OCI_DT_INVALID_FORMAT</code></p>
</td>
<td class="cellalignment1013" headers="r17c1-t26 r1c2-t26">
<p>0x8000</p>
</td>
<td class="cellalignment1013" headers="r17c1-t26 r1c3-t26">
<p>Bad date format input</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<p>So, for example, if the date passed in was 2/0/1990 25:61:10 in (month/day/year hours:minutes:seconds format), the error returned is:</p>
<pre>
 OCI_DT_INVALID_DAY | OCI_DT_DAY_BELOW_VALID | 
     OCI_DT_INVALID_HOUR | OCI_DT_INVALID_MINUTE.
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3879"></a>Returns</p>
<p><code>OCI_SUCCESS</code>; <code>OCI_INVALID_HANDLE</code>, if err is a <code>NULL</code> pointer; <code>OCI_ERROR</code>, if <code>date</code> or <code>valid</code> is a <code>NULL</code> pointer.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3880"></a>Related Functions</p>
<p><a href="#i508673">OCIDateTimeAssign()</a></p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="LNOCI17412" class="refsect2"><a id="i508759"></a>
<h2 class="refsect2"><a id="sthref3881"></a>OCIDateTimeCompare()</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3882"></a>Purpose</p>
<p>Compares two datetime values.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3883"></a>Syntax</p>
<pre>
sword OCIDateTimeCompare ( void               *hndl,
                           OCIError           *err,
                           const OCIDateTime  *date1, 
                           const OCIDateTime  *date2,
                           sword              *result );
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3884"></a>Parameters</p>
<dl>
<dt>hndl (IN/OUT)</dt>
<dd>
<p>The OCI user session handle or environment handle.</p>
</dd>
<dt>err (IN/OUT)</dt>
<dd>
<p>The OCI error handle. If there is an error, it is recorded in <code>err</code>, and this function returns <code>OCI_ERROR</code>. Obtain diagnostic information by calling <a href="oci17msc007.htm#i540516">OCIErrorGet()</a>.</p>
</dd>
<dt>date1, date2 (IN)</dt>
<dd>
<p>Dates to be compared.</p>
</dd>
<dt>result (OUT)</dt>
<dd>
<p>Comparison result as listed in <a href="#CEGJGFFH">Table 19-8</a>.</p>
</dd>
</dl>
<div id="LNOCI17413" class="tblformal">
<p class="titleintable"><a id="sthref3885"></a><a id="CEGJGFFH"></a>Table 19-8 Comparison Results Returned by the result Parameter for OCIDateTimeCompare()</p>
<table class="cellalignment1016" title="Comparison Results Returned by the result Parameter for OCIDateTimeCompare() " summary="This table is described in the preceding text" dir="ltr">
<thead>
<tr class="cellalignment1005">
<th class="cellalignment1012" id="r1c1-t27">Comparison Result</th>
<th class="cellalignment1012" id="r1c2-t27">Output in result Parameter</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r2c1-t27" headers="r1c1-t27">
<p><code>date1</code> &lt; <code>date2</code></p>
</td>
<td class="cellalignment1013" headers="r2c1-t27 r1c2-t27">
<p>-1</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r3c1-t27" headers="r1c1-t27">
<p><code>date1</code> = <code>date2</code></p>
</td>
<td class="cellalignment1013" headers="r3c1-t27 r1c2-t27">
<p>0</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r4c1-t27" headers="r1c1-t27">
<p><code>date1</code> &gt; <code>date2</code></p>
</td>
<td class="cellalignment1013" headers="r4c1-t27 r1c2-t27">
<p>1</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3886"></a>Returns</p>
<p><code>OCI_SUCCESS</code>; <code>OCI_INVALID_HANDLE</code>, if err is a <code>NULL</code> pointer; <code>OCI_ERROR</code>, if an invalid date is used or if the input date arguments are not of mutually comparable types.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3887"></a>Related Functions</p>
<p><a href="#i512069">OCIDateTimeConstruct()</a></p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="LNOCI17414" class="refsect2"><a id="i512069"></a>
<h2 class="refsect2"><a id="sthref3888"></a>OCIDateTimeConstruct()</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3889"></a>Purpose</p>
<p>Constructs a datetime descriptor.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3890"></a>Syntax</p>
<pre>
sword OCIDateTimeConstruct ( void          *hndl,
                             OCIError      *err,
                             OCIDateTime   *datetime,
                             sb2           year,
                             ub1           month,
                             ub1           day,
                             ub1           hour,
                             ub1           min,
                             ub1           sec,
                             ub4           fsec,
                             OraText       *timezone,
                             size_t        timezone_length );
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3891"></a>Parameters</p>
<dl>
<dt>hndl (IN)</dt>
<dd>
<p>The OCI user session handle or environment handle.</p>
</dd>
<dt>err (IN/OUT)</dt>
<dd>
<p>The OCI error handle. If there is an error, it is recorded in <code>err</code>, and this function returns <code>OCI_ERROR</code>. Obtain diagnostic information by calling <a href="oci17msc007.htm#i540516">OCIErrorGet()</a>.</p>
</dd>
<dt>datetime (IN)</dt>
<dd>
<p>Pointer to an <code>OCIDateTime</code> descriptor.</p>
</dd>
<dt>year (IN)</dt>
<dd>
<p>Year value.</p>
</dd>
<dt>month (IN)</dt>
<dd>
<p>Month value.</p>
</dd>
<dt>day (IN)</dt>
<dd>
<p>Day value.</p>
</dd>
<dt>hour (IN)</dt>
<dd>
<p>Hour value.</p>
</dd>
<dt>min (IN)</dt>
<dd>
<p>Minute value.</p>
</dd>
<dt>sec (IN)</dt>
<dd>
<p>Second value.</p>
</dd>
<dt>fsec (IN)</dt>
<dd>
<p>Fractional second value.</p>
</dd>
<dt>timezone (IN)</dt>
<dd>
<p>Time zone string. A string representation of time zone displacement is the difference (in hours and minutes) between local time and UTC (Coordinated Universal Time&mdash;formerly Greenwich Mean Time) in the format "[+|-][HH:MM]". For example, "-08:00".</p>
</dd>
<dt>timezone_length (IN)</dt>
<dd>
<p>Length of the time zone string.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3892"></a>Comments</p>
<p>The type of the datetime is the type of the <code>OCIDateTime</code> descriptor. Only the relevant fields based on the type are used. For types with a time zone, the date and time fields are assumed to be in the local time of the specified time zone.</p>
<p>If the time zone is not specified, then the session default time zone is assumed.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3893"></a>Returns</p>
<p><code>OCI_SUCCESS</code>; or <code>OCI_ERROR</code>, if datetime is not valid.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3894"></a>Related Functions</p>
<p><a href="#i508673">OCIDateTimeAssign()</a>, <a href="#i508796">OCIDateTimeConvert()</a></p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="LNOCI17415" class="refsect2"><a id="i508796"></a>
<h2 class="refsect2"><a id="sthref3895"></a>OCIDateTimeConvert()</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3896"></a>Purpose</p>
<p>Converts one datetime type to another.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3897"></a>Syntax</p>
<pre>
sword OCIDateTimeConvert ( void         *hndl,
                           OCIError     *err, 
                           OCIDateTime  *indate, 
                           OCIDateTime  *outdate );
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3898"></a>Parameters</p>
<dl>
<dt>hndl (IN)</dt>
<dd>
<p>The OCI user session handle or environment handle.</p>
</dd>
<dt>err (IN/OUT)</dt>
<dd>
<p>The OCI error handle. If there is an error, it is recorded in <code>err</code>, and this function returns <code>OCI_ERROR</code>. Obtain diagnostic information by calling <a href="oci17msc007.htm#i540516">OCIErrorGet()</a>.</p>
</dd>
<dt>indate (IN)</dt>
<dd>
<p>A pointer to the input date.</p>
</dd>
<dt>outdate (OUT)</dt>
<dd>
<p>A pointer to the output datetime.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3899"></a>Comments</p>
<p>This function converts one datetime type to another. The result type is the type of the <code>outdate</code> descriptor. The session default time zone (<code>ORA_SDTZ</code>) is used when converting a datetime without a time zone to one with a time zone.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3900"></a>Returns</p>
<p><code>OCI_SUCCESS</code>; <code>OCI_INVALID_HANDLE</code> if <code>err</code> is <code>NULL</code>; or <code>OCI_ERROR</code>, if the conversion is not possible with the given input values.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3901"></a>Related Functions</p>
<p><a href="#i517610">OCIDateTimeCheck()</a></p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="LNOCI17416" class="refsect2"><a id="i512426"></a>
<h2 class="refsect2"><a id="sthref3902"></a>OCIDateTimeFromArray()</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3903"></a>Purpose</p>
<p>Converts an array containing a date to an <code>OCIDateTime</code> descriptor.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3904"></a>Syntax</p>
<pre>
sword OCIDateTimeFromArray ( void               *hndl,
                             OCIError           *err, 
                             const ub1          *inarray,
                             ub4                *len 
                             ub1                type,
                             OCIDateTime        *datetime,
                             const OCIInterval  *reftz,
                             ub1                fsprec );
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3905"></a>Parameters</p>
<dl>
<dt>hndl (IN)</dt>
<dd>
<p>The OCI user session handle or environment handle.</p>
</dd>
<dt>err (IN/OUT)</dt>
<dd>
<p>The OCI error handle. If there is an error, it is recorded in <code>err</code>, and this function returns <code>OCI_ERROR</code>. Obtain diagnostic information by calling <a href="oci17msc007.htm#i540516">OCIErrorGet()</a>.</p>
</dd>
<dt>inarray(IN)</dt>
<dd>
<p>Array of ub1, containing the date.</p>
</dd>
<dt>len (IN)</dt>
<dd>
<p>Length of <code>inarray</code>.</p>
</dd>
<dt>type (IN)</dt>
<dd>
<p>Type of the resulting datetime. The array is converted to the specific SQLT type.</p>
</dd>
<dt>datetime (OUT)</dt>
<dd>
<p>Pointer to an <code>OCIDateTime</code> descriptor.</p>
</dd>
<dt>reftz (IN)</dt>
<dd>
<p>Descriptor for <code>OCIInterval</code> used as a reference when converting a <code>SQLT_TIMESTAMP_LT</code><code>Z</code> type.</p>
</dd>
<dt>fsprec (IN)</dt>
<dd>
<p>Fractional second precision of the resulting datetime.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3906"></a>Returns</p>
<p><code>OCI_SUCCESS</code>; or <code>OCI_ERROR</code> if <code>type</code> is invalid.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3907"></a>Related Functions</p>
<p><a href="#i520832">OCIDateTimeFromText()</a>, <a href="#i512458">OCIDateTimeToArray()</a></p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="LNOCI17417" class="refsect2"><a id="i520832"></a>
<h2 class="refsect2"><a id="sthref3908"></a>OCIDateTimeFromText()</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3909"></a>Purpose</p>
<p>Converts the given string to an Oracle datetime type in the <code>OCIDateTime</code> descriptor, according to the specified format.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3910"></a>Syntax</p>
<pre>
sword OCIDateTimeFromText ( void               *hndl,
                            OCIError           *err, 
                            const OraText      *date_str,
                            size_t             dstr_length,
                            const OraText      *fmt,
                            ub1                fmt_length, 
                            const OraText      *lang_name,
                            size_t             lang_length, 
                            OCIDateTime        *datetime );
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3911"></a>Parameters</p>
<dl>
<dt>hndl (IN)</dt>
<dd>
<p>The OCI user session handle or environment handle. If a user session handle is passed, the conversion occurs in the session's NLS_LANGUAGE and the session's NLS_CALENDAR; otherwise, the default is used.</p>
</dd>
<dt>err (IN/OUT)</dt>
<dd>
<p>The OCI error handle. If there is an error, it is recorded in <code>err</code>, and this function returns <code>OCI_ERROR</code>. Obtain diagnostic information by calling <a href="oci17msc007.htm#i540516">OCIErrorGet()</a>.</p>
</dd>
<dt>date_str (IN)</dt>
<dd>
<p>The input string to be converted to an Oracle datetime.</p>
</dd>
<dt>dstr_length (IN)</dt>
<dd>
<p>The size of the input string. If the length is &ndash;1, then <code>date_str</code> is treated as a <code>NULL</code>-terminated string.</p>
</dd>
<dt>fmt (IN)</dt>
<dd>
<p>The conversion format. If <code>fmt</code> is a <code>NULL</code> pointer, then the string is expected to be in the default format for the datetime type.</p>
</dd>
<dt>fmt_length (IN)</dt>
<dd>
<p>The length of the <code>fmt</code> parameter.</p>
</dd>
<dt>lang_name (IN)</dt>
<dd>
<p>Specifies the language in which the names and abbreviations of months and days are specified. The default language of the session is used if <code>lang_name</code> is <code>NULL</code> (<code>lang_name</code> = <code>(text *)0</code>).</p>
</dd>
<dt>lang_length (IN)</dt>
<dd>
<p>The length of the <code>lang_name</code> parameter.</p>
</dd>
<dt>datetime (OUT)</dt>
<dd>
<p>The given string converted to a date.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3912"></a>Comments</p>
<p>See the description of the <code>TO_DATE</code> conversion function in the <a class="olink SQLRF06132" href="../../server.112/e41084/functions203.htm#SQLRF06132"><span class="italic">Oracle Database SQL Language Reference</span></a> for a description of the format argument.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3913"></a>Returns</p>
<p><code>OCI_SUCCESS</code>; <code>OCI_INVALID_HANDLE</code> if <code>err</code> is <code>NULL</code>; or <code>OCI_ERROR</code>, if any of the following is true:</p>
<ul>
<li>
<p>An invalid format is used.</p>
</li>
<li>
<p>An unknown language is used.</p>
</li>
<li>
<p>An invalid input string is used.</p>
</li>
</ul>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3914"></a>Related Functions</p>
<p><a href="#i509197">OCIDateTimeToText()</a>, <a href="#i512426">OCIDateTimeFromArray()</a>.</p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="LNOCI17418" class="refsect2"><a id="i508882"></a>
<h2 class="refsect2"><a id="sthref3915"></a>OCIDateTimeGetDate()</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3916"></a>Purpose</p>
<p>Gets the date (year, month, day) portion of a datetime value.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3917"></a>Syntax</p>
<pre>
void OCIDateTimeGetDate ( void               *hndl,
                          OCIError           *err, 
                          const OCIDateTime  *datetime,
                          sb2                *year, 
                          ub1                *month, 
                          ub1                *day );
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3918"></a>Parameters</p>
<dl>
<dt>hndl (IN)</dt>
<dd>
<p>The OCI user session handle or environment handle.</p>
</dd>
<dt>err (IN/OUT)</dt>
<dd>
<p>The OCI error handle. If there is an error, it is recorded in <code>err</code>, and this function returns <code>OCI_ERROR</code>. Obtain diagnostic information by calling <a href="oci17msc007.htm#i540516">OCIErrorGet()</a>.</p>
</dd>
<dt>datetime (IN)</dt>
<dd>
<p>Pointer to an <code>OCIDateTime</code> descriptor from which date information is retrieved.</p>
</dd>
<dt>year (OUT)</dt>
<dt>month (OUT)</dt>
<dt>day (OUT)</dt>
<dd>
<p>The retrieved year, month, and day values.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3919"></a>Comments</p>
<p>This function gets the date (year, month, day) portion of a datetime value.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3920"></a>Returns</p>
<p><code>OCI_SUCCESS</code>; or <code>OCI_ERROR</code>, if the input type is <code>SQLT_TIME</code> or <code>OCI_TIME_TZ</code>.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3921"></a>Related Functions</p>
<p><a href="#i508932">OCIDateTimeGetTime()</a></p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="LNOCI17419" class="refsect2"><a id="i508932"></a>
<h2 class="refsect2"><a id="sthref3922"></a>OCIDateTimeGetTime()</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3923"></a>Purpose</p>
<p>Gets the time (hour, min, second, fractional second) of a datetime value.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3924"></a>Syntax</p>
<pre>
void OCIDateTimeGetTime ( void          *hndl, 
                          OCIError      *err, 
                          OCIDateTime   *datetime, 
                          ub1           *hour,
                          ub1           *min, 
                          ub1           *sec, 
                          ub4           *fsec );
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3925"></a>Parameters</p>
<dl>
<dt>hndl (IN)</dt>
<dd>
<p>The OCI user session handle or environment handle.</p>
</dd>
<dt>err (IN/OUT)</dt>
<dd>
<p>The OCI error handle. If there is an error, it is recorded in <code>err</code>, and this function returns <code>OCI_ERROR</code>. Obtain diagnostic information by calling <a href="oci17msc007.htm#i540516">OCIErrorGet()</a>.</p>
</dd>
<dt>datetime (IN)</dt>
<dd>
<p>Pointer to an <code>OCIDateTime</code> descriptor from which time information is retrieved.</p>
</dd>
<dt>hour (OUT)</dt>
<dd>
<p>The retrieved hour value.</p>
</dd>
<dt>min (OUT)</dt>
<dd>
<p>The retrieved minute value.</p>
</dd>
<dt>sec (OUT)</dt>
<dd>
<p>The retrieved second value.</p>
</dd>
<dt>fsec (OUT)</dt>
<dd>
<p>The retrieved fractional second value.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3926"></a>Comments</p>
<p>This function gets the time portion (hour, min, second, fractional second) from a given datetime value.</p>
<p>This function returns an error if the given datetime does not contain time information.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3927"></a>Returns</p>
<p><code>OCI_SUCCESS</code>; or <code>OCI_ERROR</code>, if datetime does not contain time (<code>SQLT_DATE</code>).</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3928"></a>Related Functions</p>
<p><a href="#i508882">OCIDateTimeGetDate()</a></p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="LNOCI17420" class="refsect2"><a id="i512092"></a>
<h2 class="refsect2"><a id="sthref3929"></a>OCIDateTimeGetTimeZoneName()</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3930"></a>Purpose</p>
<p>Gets the time zone name portion of a datetime value.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3931"></a>Syntax</p>
<pre>
void OCIDateTimeGetTimeZoneName ( void               *hndl, 
                                  OCIError           *err, 
                                  const OCIDateTime  *datetime, 
                                  ub1                *buf,
                                  ub4                *buflen, );
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3932"></a>Parameters</p>
<dl>
<dt>hndl (IN)</dt>
<dd>
<p>The OCI user session handle or environment handle.</p>
</dd>
<dt>err (IN/OUT)</dt>
<dd>
<p>The OCI error handle. If there is an error, it is recorded in <code>err</code>, and this function returns <code>OCI_ERROR</code>. Obtain diagnostic information by calling <a href="oci17msc007.htm#i540516">OCIErrorGet()</a>.</p>
</dd>
<dt>datetime (IN)</dt>
<dd>
<p>Pointer to an <code>OCIDateTime</code> descriptor.</p>
</dd>
<dt>buf (OUT)</dt>
<dd>
<p>Buffer to store the retrieved time zone name.</p>
</dd>
<dt>buflen (IN/OUT)</dt>
<dd>
<p>The size of the buffer (IN). The size of the name field (OUT)</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3933"></a>Comments</p>
<p>This function gets the time portion (hour, min, second, fractional second) from a given datetime value.</p>
<p>This function returns an error if the given datetime does not contain time information.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3934"></a>Returns</p>
<p><code>OCI_SUCCESS</code>; or <code>OCI_ERROR</code>, if datetime does not contain a time zone (<code>SQLT_DATE</code>, <code>SQLT_TIMESTAMP</code>).</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3935"></a>Related Functions</p>
<p><a href="#i508882">OCIDateTimeGetDate()</a>, <a href="#i508981">OCIDateTimeGetTimeZoneOffset()</a></p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="LNOCI17421" class="refsect2"><a id="i508981"></a>
<h2 class="refsect2"><a id="sthref3936"></a>OCIDateTimeGetTimeZoneOffset()</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3937"></a>Purpose</p>
<p>Gets the time zone (hour, minute) portion of a datetime value.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3938"></a>Syntax</p>
<pre>
void OCIDateTimeGetTimeZoneOffset ( void               *hndl, 
                                    OCIError           *err, 
                                    const OCIDateTime  *datetime, 
                                    sb1                *hour,
                                    sb1                *min, );
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3939"></a>Parameters</p>
<dl>
<dt>hndl (IN)</dt>
<dd>
<p>The OCI user session handle or environment handle.</p>
</dd>
<dt>err (IN/OUT)</dt>
<dd>
<p>The OCI error handle. If there is an error, it is recorded in <code>err</code>, and this function returns <code>OCI_ERROR</code>. Obtain diagnostic information by calling <a href="oci17msc007.htm#i540516">OCIErrorGet()</a>.</p>
</dd>
<dt>datetime (IN)</dt>
<dd>
<p>Pointer to an <code>OCIDateTime</code> descriptor.</p>
</dd>
<dt>hour (OUT)</dt>
<dd>
<p>The retrieved time zone hour value.</p>
</dd>
<dt>min (OUT)</dt>
<dd>
<p>The retrieved time zone minute value.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3940"></a>Comments</p>
<p>This function gets the time zone hour and the time zone minute portion from a given datetime value.</p>
<p>This function returns an error if the given datetime does not contain time information.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3941"></a>Returns</p>
<p><code>OCI_SUCCESS</code>; or <code>OCI_ERROR</code>, if datetime does not contain a time zone (<code>SQLT_DATE</code>, <code>SQLT_TIMESTAMP</code>).</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3942"></a>Related Functions</p>
<p><a href="#i508882">OCIDateTimeGetDate()</a>, <a href="#i512092">OCIDateTimeGetTimeZoneName()</a></p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="LNOCI17422" class="refsect2"><a id="i508985"></a>
<h2 class="refsect2"><a id="sthref3943"></a>OCIDateTimeIntervalAdd()</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3944"></a>Purpose</p>
<p>Adds an interval to a datetime to produce a resulting datetime.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3945"></a>Syntax</p>
<pre>
sword OCIDateTimeIntervalAdd ( void         *hndl, 
                               OCIError     *err, 
                               OCIDateTime  *datetime, 
                               OCIInterval  *inter, 
                               OCIDateTime  *outdatetime );
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3946"></a>Parameters</p>
<dl>
<dt>hndl (IN)</dt>
<dd>
<p>The user session or environment handle. If a session handle is passed, the addition occurs in the session default calendar.</p>
</dd>
<dt>err (IN/OUT)</dt>
<dd>
<p>The OCI error handle. If there is an error, it is recorded in <code>err</code>, and this function returns <code>OCI_ERROR</code>. Obtain diagnostic information by calling <a href="oci17msc007.htm#i540516">OCIErrorGet()</a>.</p>
</dd>
<dt>datetime (IN)</dt>
<dd>
<p>Pointer to the input datetime.</p>
</dd>
<dt>inter (IN)</dt>
<dd>
<p>Pointer to the input interval.</p>
</dd>
<dt>outdatetime (OUT)</dt>
<dd>
<p>Pointer to the output datetime. The output datetime is of same type as the input datetime.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3947"></a>Returns</p>
<p><code>OCI_SUCCESS</code>, if the function completes successfully; <code>OCI_INVALID_HANDLE</code>, if <code>err</code> is a <code>NULL</code> pointer; or <code>OCI_ERROR</code>, if the resulting date is before Jan 1, -4713 or is after Dec 31, 9999.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3948"></a>Related Functions</p>
<p><a href="#i509023">OCIDateTimeIntervalSub()</a></p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="LNOCI17423" class="refsect2"><a id="i509023"></a>
<h2 class="refsect2"><a id="sthref3949"></a>OCIDateTimeIntervalSub()</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3950"></a>Purpose</p>
<p>Subtracts an interval from a datetime and stores the result in a datetime.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3951"></a>Syntax</p>
<pre>
sword OCIDateTimeIntervalSub ( void         *hndl,
                               OCIError     *err, 
                               OCIDateTime  *datetime, 
                               OCIInterval  *inter,
                               OCIDateTime  *outdatetime );
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3952"></a>Parameters</p>
<dl>
<dt>hndl (IN)</dt>
<dd>
<p>The user session or environment handle. If a session handle is passed, the subtraction occurs in the session default calendar. The interval is assumed to be in the session calendar.</p>
</dd>
<dt>err (IN/OUT)</dt>
<dd>
<p>The OCI error handle. If there is an error, it is recorded in <code>err</code>, and this function returns <code>OCI_ERROR</code>. Obtain diagnostic information by calling <a href="oci17msc007.htm#i540516">OCIErrorGet()</a>.</p>
</dd>
<dt>datetime (IN)</dt>
<dd>
<p>Pointer to the input datetime value.</p>
</dd>
<dt>inter (IN)</dt>
<dd>
<p>Pointer to the input interval.</p>
</dd>
<dt>outdatetime (OUT)</dt>
<dd>
<p>Pointer to the output datetime. The output datetime is of same type as the input datetime.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3953"></a>Returns</p>
<p><code>OCI_SUCCESS</code>, if the function completes successfully; <code>OCI_INVALID_HANDLE</code>, if <code>err</code> is a <code>NULL</code> pointer; or <code>OCI_ERROR</code>, if the resulting date is before Jan 1, -4713 or is after Dec 31, 9999.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3954"></a>Related Functions</p>
<p><a href="#i508985">OCIDateTimeIntervalAdd()</a></p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="LNOCI17424" class="refsect2"><a id="i511964"></a>
<h2 class="refsect2"><a id="sthref3955"></a>OCIDateTimeSubtract()</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3956"></a>Purpose</p>
<p>Takes two datetimes as input and stores their difference in an interval.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3957"></a>Syntax</p>
<pre>
sword OCIDateTimeSubtract ( void         *hndl, 
                            OCIError     *err,
                            OCIDateTime  *indate1,
                            OCIDateTime  *indate2, 
                            OCIInterval  *inter );
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3958"></a>Parameters</p>
<dl>
<dt>hndl (IN)</dt>
<dd>
<p>The OCI user session handle or environment handle.</p>
</dd>
<dt>err (IN/OUT)</dt>
<dd>
<p>The OCI error handle. If there is an error, it is recorded in <code>err</code>, and this function returns <code>OCI_ERROR</code>. Obtain diagnostic information by calling <a href="oci17msc007.htm#i540516">OCIErrorGet()</a>.</p>
</dd>
<dt>indate1 (IN)</dt>
<dd>
<p>Pointer to the subtrahend (number to be subtracted).</p>
</dd>
<dt>indate2 (IN)</dt>
<dd>
<p>Pointer to the minuend (number to be subtracted from).</p>
</dd>
<dt>inter (OUT)</dt>
<dd>
<p>Pointer to the output interval.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3959"></a>Returns</p>
<p><code>OCI_SUCCESS</code>, if the function completes successfully; <code>OCI_INVALID_HANDLE</code> if <code>err</code> is <code>NULL</code> pointer; or <code>OCI_ERROR</code>, if the input datetimes are not of comparable types.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3960"></a>Related Functions</p>
<p><a href="#i508759">OCIDateTimeCompare()</a></p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="LNOCI17425" class="refsect2"><a id="i512454"></a>
<h2 class="refsect2"><a id="sthref3961"></a>OCIDateTimeSysTimeStamp()</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3962"></a>Purpose</p>
<p>Gets the system current date and time as a time stamp with time zone.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3963"></a>Syntax</p>
<pre>
sword OCIDateTimeSysTimeStamp ( void           *hndl,
                                OCIError       *err, 
                                OCIDateTime    *sys_date );
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3964"></a>Parameters</p>
<dl>
<dt>hndl (IN)</dt>
<dd>
<p>The OCI user session handle or environment handle.</p>
</dd>
<dt>err (IN/OUT)</dt>
<dd>
<p>The OCI error handle. If there is an error, it is recorded in <code>err</code>, and this function returns <code>OCI_ERROR</code>. Obtain diagnostic information by calling <a href="oci17msc007.htm#i540516">OCIErrorGet()</a>.</p>
</dd>
<dt>sys_date (OUT)</dt>
<dd>
<p>Pointer to the output time stamp.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3965"></a>Returns</p>
<p><code>OCI_SUCCESS</code>; or <code>OCI_INVALID_HANDLE</code>, if <code>err</code> is a <code>NULL</code> pointer.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3966"></a>Related Functions</p>
<p><a href="#i430057">OCIDateSysDate()</a></p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="LNOCI17426" class="refsect2"><a id="i512458"></a>
<h2 class="refsect2"><a id="sthref3967"></a>OCIDateTimeToArray()</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3968"></a>Purpose</p>
<p>Converts an <code>OCIDateTime</code> descriptor to an array.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3969"></a>Syntax</p>
<pre>
sword OCIDateTimeToArray ( void               *hndl,
                           OCIError           *err, 
                           const OCIDateTime  *datetime, 
                           const OCIInterval  *reftz,
                           ub1                *outarray, 
                           ub4                *len 
                           ub1                fsprec );
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3970"></a>Parameters</p>
<dl>
<dt>hndl (IN)</dt>
<dd>
<p>The OCI user session handle or environment handle.</p>
</dd>
<dt>err (IN/OUT)</dt>
<dd>
<p>The OCI error handle. If there is an error, it is recorded in <code>err</code>, and this function returns <code>OCI_ERROR</code>. Obtain diagnostic information by calling <a href="oci17msc007.htm#i540516">OCIErrorGet()</a>.</p>
</dd>
<dt>datetime (IN)</dt>
<dd>
<p>Pointer to an <code>OCIDateTime</code> descriptor.</p>
</dd>
<dt>reftz (IN)</dt>
<dd>
<p>Descriptor for the <code>OCIInterval</code> used as a reference when converting the <code>SQL_TIMESTAMP_LTZ</code> type.</p>
</dd>
<dt>outarray(OUT)</dt>
<dd>
<p>Array of bytes containing the date.</p>
</dd>
<dt>len (OUT)</dt>
<dd>
<p>Length of <code>outarray</code>.</p>
</dd>
<dt>fsprec (IN)</dt>
<dd>
<p>Fractional second precision in the array.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3971"></a>Comments</p>
<p>The array is allocated by OCI and its length is returned.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3972"></a>Returns</p>
<p><code>OCI_SUCCESS</code>; or <code>OCI_ERROR</code>, if datetime is invalid.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3973"></a>Related Functions</p>
<p><a href="#i509197">OCIDateTimeToText()</a>, <a href="#i512426">OCIDateTimeFromArray()</a></p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="LNOCI17427" class="refsect2"><a id="i509197"></a>
<h2 class="refsect2"><a id="sthref3974"></a>OCIDateTimeToText()</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3975"></a>Purpose</p>
<p>Converts the given date to a string according to the specified format.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3976"></a>Syntax</p>
<pre>
sword OCIDateTimeToText ( void                *hndl, 
                          OCIError            *err, 
                          const OCIDateTime   *date, 
                          const OraText       *fmt,
                          ub1                 fmt_length, 
                          ub1                 fsprec,
                          const OraText       *lang_name, 
                          size_t              lang_length, 
                          ub4                 *buf_size, 
                          OraText             *buf );
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3977"></a>Parameters</p>
<dl>
<dt>hndl (IN)</dt>
<dd>
<p>The OCI user session handle or environment handle. If a user session handle is passed, the conversion occurs in the session's <code>NLS_LANGUAGE</code> and the session's <code>NLS_CALENDAR</code>; otherwise, the default is used.</p>
</dd>
<dt>err (IN/OUT)</dt>
<dd>
<p>The OCI error handle. If there is an error, it is recorded in <code>err</code>, and this function returns <code>OCI_ERROR</code>. Obtain diagnostic information by calling <a href="oci17msc007.htm#i540516">OCIErrorGet()</a>.</p>
</dd>
<dt>date (IN)</dt>
<dd>
<p>Oracle datetime value to be converted.</p>
</dd>
<dt>fmt (IN)</dt>
<dd>
<p>The conversion format. If it is a <code>NULL</code> string pointer, <code>(text*)0</code>, then the date is converted to a character string in the default format for that type.</p>
</dd>
<dt>fmt_length (IN)</dt>
<dd>
<p>The length of the <code>fmt</code> parameter.</p>
</dd>
<dt>fsprec (IN)</dt>
<dd>
<p>Specifies the precision in which the fractional seconds value is returned.</p>
</dd>
<dt>lang_name (IN)</dt>
<dd>
<p>Specifies the language in which the names and abbreviations of months and days are returned. The default language of the session is used if <code>lang_name</code> is <code>NULL</code> (<code>lang_name</code> = <code>(OraText *)0</code>).</p>
</dd>
<dt>lang_length (IN)</dt>
<dd>
<p>The length of the <code>lang_name</code> parameter.</p>
</dd>
<dt>buf_size (IN/OUT)</dt>
<dd>
<p>The size of the <code>buf</code> buffer (IN).</p>
<p>The size of the resulting string after the conversion (OUT).</p>
</dd>
<dt>buf (OUT)</dt>
<dd>
<p>The buffer into which the converted string is placed.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3978"></a>Comments</p>
<p>See the description of the <code>TO_DATE</code> conversion function in the <a class="olink SQLRF06132" href="../../server.112/e41084/functions203.htm#SQLRF06132"><span class="italic">Oracle Database SQL Language Reference</span></a> for a description of format and multilingual arguments. The converted NULL-terminated date string is stored in the buffer <code>buf</code>.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3979"></a>Returns</p>
<p><code>OCI_SUCCESS</code>; <code>OCI_INVALID_HANDLE</code>, if <code>err</code> is <code>NULL</code>; or <code>OCI_ERROR</code>, if any of the following statements is true:</p>
<ul>
<li>
<p>The buffer is too small.</p>
</li>
<li>
<p>An invalid format is used.</p>
</li>
<li>
<p>An unknown language is used.</p>
</li>
<li>
<p>There is an overflow error.</p>
</li>
</ul>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3980"></a>Related Functions</p>
<p><a href="#i520832">OCIDateTimeFromText()</a></p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="LNOCI17408" class="refsect2"><a id="i512014"></a>
<h2 class="refsect2">OCIDateToText()<a id="sthref3981"></a></h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3982"></a>Purpose</p>
<p>Converts a date type to a character string.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3983"></a>Syntax</p>
<pre>
sword OCIDateToText ( OCIError                  *err, 
                      const OCIDate             *date, 
                      const OraText             *fmt, 
                      ub1                       fmt_length, 
                      const OraText             *lang_name,
                      ub4                       lang_length, 
                      ub4                       *buf_size, 
                      OraText                   *buf );
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3984"></a>Parameters</p>
<dl>
<dt>err (IN/OUT)</dt>
<dd>
<p>The OCI error handle. If there is an error, it is recorded in <code>err</code>, and this function returns <code>OCI_ERROR</code>. Obtain diagnostic information by calling <a href="oci17msc007.htm#i540516">OCIErrorGet()</a>.</p>
</dd>
<dt>date (IN)</dt>
<dd>
<p>Oracle date to be converted.</p>
</dd>
<dt>fmt (IN)</dt>
<dd>
<p>Conversion format. If <code>NULL</code>, <code>(text *)0</code>, then the date is converted to a character string in the default date format, DD-MON-YY.</p>
</dd>
<dt>fmt_length (IN)</dt>
<dd>
<p>Length of the <code>fmt</code> parameter.</p>
</dd>
<dt>lang_name (IN)</dt>
<dd>
<p>Specifies the language in which names and abbreviations of months and days are returned; the default language of the session is used if <code>lang_name</code> is <code>NULL</code> (<code>(text *)0</code>).</p>
</dd>
<dt>lang_length (IN)</dt>
<dd>
<p>Length of the <code>lang_name</code> parameter.</p>
</dd>
<dt>buf_size (IN/OUT)</dt>
<dd>
<p>Size of the buffer (IN). Size of the resulting string is returned with this parameter (OUT).</p>
</dd>
<dt>buf (OUT)</dt>
<dd>
<p>Buffer into which the converted string is placed.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3985"></a>Comments</p>
<p>Converts the given date to a string according to the specified format. The converted <code>NULL</code>-terminated date string is stored in <code>buf</code>.</p>
<p>See the <code>TO_DATE</code> conversion function described in the <a class="olink SQLRF06132" href="../../server.112/e41084/functions203.htm#SQLRF06132"><span class="italic">Oracle Database SQL Language Reference</span></a> for a description of format and multilingual arguments.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3986"></a>Returns</p>
<p>This function returns an error if the buffer is too small, or if the function is passed an invalid format or unknown language. Overflow also causes an error. For example, converting a value of 10 into format '9' causes an error.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3987"></a>Related Functions</p>
<p><a href="oci17msc007.htm#i540516">OCIErrorGet()</a>, <a href="#i450182">OCIDateFromText()</a></p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="LNOCI17428" class="refsect2"><a id="i430061"></a>
<h2 class="refsect2">OCIDateZoneToZone()<a id="sthref3988"></a></h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3989"></a>Purpose</p>
<p>Converts a date from one time zone to another.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3990"></a>Syntax</p>
<pre>
sword OCIDateZoneToZone ( OCIError           *err, 
                          const OCIDate      *date1, 
                          const OraText      *zon1,
                          ub4                zon1_length, 
                          const OraText      *zon2, 
                          ub4                zon2_length, 
                          OCIDate            *date2 );
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3991"></a>Parameters</p>
<dl>
<dt>err (IN/OUT)</dt>
<dd>
<p>The OCI error handle. If there is an error, it is recorded in <code>err</code>, and this function returns <code>OCI_ERROR</code>. Obtain diagnostic information by calling <a href="oci17msc007.htm#i540516">OCIErrorGet()</a>.</p>
</dd>
<dt>date1 (IN)</dt>
<dd>
<p>Date to convert.</p>
</dd>
<dt>zon1 (IN)</dt>
<dd>
<p>Zone of the input date.</p>
</dd>
<dt>zon1_length (IN)</dt>
<dd>
<p>Length in bytes of <code>zon1</code>.</p>
</dd>
<dt>zon2 (IN)</dt>
<dd>
<p>Zone to be converted to.</p>
</dd>
<dt>zon2_length (IN)</dt>
<dd>
<p>Length in bytes of <code>zon2</code>.</p>
</dd>
<dt>date2 (OUT)</dt>
<dd>
<p>Converted date (in <code>zon2</code>).</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3992"></a>Comments</p>
<p>Converts a given date <code>date1</code> in time zone <code>zon1</code> to a date <code>date2</code> in time zone <code>zon2</code>. Works only with North American time zones.</p>
<p>For a list of valid zone strings, see the description of the <code>NEW_TIME</code> function in the <a class="olink SQLRF00671" href="../../server.112/e41084/functions105.htm#SQLRF00671"><span class="italic">Oracle Database SQL Language Reference</span></a>. Examples of valid zone strings include:</p>
<ul>
<li>
<p>AST, Atlantic Standard Time</p>
</li>
<li>
<p>ADT, Atlantic Daylight Time</p>
</li>
<li>
<p>BST, Bering Standard Time</p>
</li>
<li>
<p>BDT, Bering Daylight Time</p>
</li>
</ul>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3993"></a>Returns</p>
<p>This function returns an error if an invalid date or time zone is passed to it.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3994"></a>Related Functions</p>
<p><a href="oci17msc007.htm#i540516">OCIErrorGet()</a>, <a href="#i450221">OCIDateCheck()</a></p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="LNOCI17429" class="refsect2"><a id="i512468"></a>
<h2 class="refsect2"><a id="sthref3995"></a>OCIIntervalAdd()</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3996"></a>Purpose</p>
<p>Adds two intervals to produce a resulting interval.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3997"></a>Syntax</p>
<pre>
sword OCIIntervalAdd ( void         *hndl, 
                       OCIError     *err, 
                       OCIInterval  *addend1, 
                       OCIInterval  *addend2, 
                       OCIInterval  *result );
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3998"></a>Parameters</p>
<dl>
<dt>hndl (IN)</dt>
<dd>
<p>The OCI user session handle or the environment handle.</p>
</dd>
<dt>err (IN/OUT)</dt>
<dd>
<p>The OCI error handle. If there is an error, it is recorded in <code>err</code>, and this function returns <code>OCI_ERROR</code>. Obtain diagnostic information by calling <a href="oci17msc007.htm#i540516">OCIErrorGet()</a>.</p>
</dd>
<dt>addend1 (IN)</dt>
<dd>
<p>Interval to be added.</p>
</dd>
<dt>addend2 (IN)</dt>
<dd>
<p>Interval to be added.</p>
</dd>
<dt>result (OUT)</dt>
<dd>
<p>The resulting interval (<code>addend1</code> + <code>addend2</code>).</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3999"></a>Returns</p>
<p><code>OCI_SUCCESS</code>; <code>OCI_INVALID_HANDLE</code>, if <code>err</code> is a <code>NULL</code> pointer; or <code>OCI_ERROR</code>, if any of the following statements is true:</p>
<ul>
<li>
<p>The two input intervals are not mutually comparable.</p>
</li>
<li>
<p>The resulting year is greater than <code>SB4MAXVAL</code>.</p>
</li>
<li>
<p>The resulting year is less than <code>SB4MINVAL</code>.</p>
</li>
</ul>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4000"></a>Related Functions</p>
<p><a href="#i510871">OCIIntervalSubtract()</a></p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="LNOCI17430" class="refsect2"><a id="i510645"></a>
<h2 class="refsect2"><a id="sthref4001"></a>OCIIntervalAssign()</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4002"></a>Purpose</p>
<p>Copies one interval to another.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4003"></a>Syntax</p>
<pre>
void OCIIntervalAssign ( void              *hndl, 
                         OCIError          *err, 
                         const OCIInterval *inpinter, 
                         OCIInterval       *outinter );
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4004"></a>Parameters</p>
<dl>
<dt>hndl (IN)</dt>
<dd>
<p>The OCI user session handle or the environment handle.</p>
</dd>
<dt>err (IN/OUT)</dt>
<dd>
<p>The OCI error handle. If there is an error, it is recorded in <code>err</code>, and this function returns <code>OCI_ERROR</code>. Obtain diagnostic information by calling <a href="oci17msc007.htm#i540516">OCIErrorGet()</a>.</p>
</dd>
<dt>inpinter (IN)</dt>
<dd>
<p>Input interval.</p>
</dd>
<dt>outinter (OUT)</dt>
<dd>
<p>Output interval.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4005"></a>Returns</p>
<p><code>OCI_SUCCESS</code>; or <code>OCI_INVALID_HANDLE</code>, if <code>err</code> is a <code>NULL</code> pointer.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4006"></a>Related Functions</p>
<p><a href="#i510718">OCIIntervalCompare()</a></p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="LNOCI17431" class="refsect2"><a id="i510673"></a>
<h2 class="refsect2"><a id="sthref4007"></a>OCIIntervalCheck()</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4008"></a>Purpose</p>
<p>Checks the validity of an interval.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4009"></a>Syntax</p>
<pre>
sword OCIIntervalCheck ( void               *hndl,
                        OCIError            *err,
                        const OCIInterval   *interval,
                        ub4                 *valid );
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4010"></a>Parameters</p>
<dl>
<dt>hndl (IN)</dt>
<dd>
<p>The OCI user session handle or the environment handle.</p>
</dd>
<dt>err (IN/OUT)</dt>
<dd>
<p>The OCI error handle. If there is an error, it is recorded in <code>err</code>, and this function returns <code>OCI_ERROR</code>. Obtain diagnostic information by calling <a href="oci17msc007.htm#i540516">OCIErrorGet()</a>.</p>
</dd>
<dt>interval (IN)</dt>
<dd>
<p>Interval to be checked.</p>
</dd>
<dt>valid (OUT)</dt>
<dd>
<p>Returns zero if the interval is valid; otherwise, it returns the logical operator OR combination of the codes specified in <a href="#CEGDJIIC">Table 19-9</a>.</p>
</dd>
</dl>
<div id="LNOCI17432" class="tblformal">
<p class="titleintable"><a id="sthref4011"></a><a id="CEGDJIIC"></a>Table 19-9 Error Bits Returned by the valid Parameter for OCIIntervalCheck()</p>
<table class="cellalignment1016" title="Error Bits Returned by the valid Parameter for OCIIntervalCheck()" summary="This table is described in the preceding text" dir="ltr">
<thead>
<tr class="cellalignment1005">
<th class="cellalignment1012" id="r1c1-t28">Macro Name</th>
<th class="cellalignment1012" id="r1c2-t28">Bit Number</th>
<th class="cellalignment1012" id="r1c3-t28">Error</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r2c1-t28" headers="r1c1-t28">
<p><code>OCI_INTER_INVALID_DAY</code></p>
</td>
<td class="cellalignment1013" headers="r2c1-t28 r1c2-t28">
<p>0x1</p>
</td>
<td class="cellalignment1013" headers="r2c1-t28 r1c3-t28">
<p>Bad day</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r3c1-t28" headers="r1c1-t28">
<p><code>OCI_INTER_DAY_BELOW_VALID</code></p>
</td>
<td class="cellalignment1013" headers="r3c1-t28 r1c2-t28">
<p>0x2</p>
</td>
<td class="cellalignment1013" headers="r3c1-t28 r1c3-t28">
<p>Bad day low/high bit (1=low)</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r4c1-t28" headers="r1c1-t28">
<p><code>OCI_INTER_INVALID_MONTH</code></p>
</td>
<td class="cellalignment1013" headers="r4c1-t28 r1c2-t28">
<p>0x4</p>
</td>
<td class="cellalignment1013" headers="r4c1-t28 r1c3-t28">
<p>Bad month</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r5c1-t28" headers="r1c1-t28">
<p><code>OCI_INTER_MONTH_BELOW_VALID</code></p>
</td>
<td class="cellalignment1013" headers="r5c1-t28 r1c2-t28">
<p>0x8</p>
</td>
<td class="cellalignment1013" headers="r5c1-t28 r1c3-t28">
<p>Bad month low/high bit (1=low)</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r6c1-t28" headers="r1c1-t28">
<p><code>OCI_INTER_INVALID_YEAR</code></p>
</td>
<td class="cellalignment1013" headers="r6c1-t28 r1c2-t28">
<p>0x10</p>
</td>
<td class="cellalignment1013" headers="r6c1-t28 r1c3-t28">
<p>Bad year</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r7c1-t28" headers="r1c1-t28">
<p><code>OCI_INTER_YEAR_BELOW_VALID</code></p>
</td>
<td class="cellalignment1013" headers="r7c1-t28 r1c2-t28">
<p>0x20</p>
</td>
<td class="cellalignment1013" headers="r7c1-t28 r1c3-t28">
<p>Bad year low/high bit (1=low)</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r8c1-t28" headers="r1c1-t28">
<p><code>OCI_INTER_INVALID_HOUR</code></p>
</td>
<td class="cellalignment1013" headers="r8c1-t28 r1c2-t28">
<p>0x40</p>
</td>
<td class="cellalignment1013" headers="r8c1-t28 r1c3-t28">
<p>Bad hour</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r9c1-t28" headers="r1c1-t28">
<p><code>OCI_INTER_HOUR_BELOW_VALID</code></p>
</td>
<td class="cellalignment1013" headers="r9c1-t28 r1c2-t28">
<p>0x80</p>
</td>
<td class="cellalignment1013" headers="r9c1-t28 r1c3-t28">
<p>Bad hour low/high bit (1=low)</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r10c1-t28" headers="r1c1-t28">
<p><code>OCI_INTER_INVALID_MINUTE</code></p>
</td>
<td class="cellalignment1013" headers="r10c1-t28 r1c2-t28">
<p>0x100</p>
</td>
<td class="cellalignment1013" headers="r10c1-t28 r1c3-t28">
<p>Bad minute</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r11c1-t28" headers="r1c1-t28">
<p><code>OCI_INTER_MINUTE_BELOW_VALID</code></p>
</td>
<td class="cellalignment1013" headers="r11c1-t28 r1c2-t28">
<p>0x200</p>
</td>
<td class="cellalignment1013" headers="r11c1-t28 r1c3-t28">
<p>Bad minute low/high bit (1=low)</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r12c1-t28" headers="r1c1-t28">
<p><code>OCI_INTER_INVALID_SECOND</code></p>
</td>
<td class="cellalignment1013" headers="r12c1-t28 r1c2-t28">
<p>0x400</p>
</td>
<td class="cellalignment1013" headers="r12c1-t28 r1c3-t28">
<p>Bad second</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r13c1-t28" headers="r1c1-t28">
<p><code>OCI_INTER_SECOND_BELOW_VALID</code></p>
</td>
<td class="cellalignment1013" headers="r13c1-t28 r1c2-t28">
<p>0x800</p>
</td>
<td class="cellalignment1013" headers="r13c1-t28 r1c3-t28">
<p>Bad second low/high bit (1=low)</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r14c1-t28" headers="r1c1-t28">
<p><code>OCI_INTER_INVALID_FRACSEC</code></p>
</td>
<td class="cellalignment1013" headers="r14c1-t28 r1c2-t28">
<p>0x1000</p>
</td>
<td class="cellalignment1013" headers="r14c1-t28 r1c3-t28">
<p>Bad fractional second</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r15c1-t28" headers="r1c1-t28">
<p><code>OCI_INTER_FRACSEC_BELOW_VALID</code></p>
</td>
<td class="cellalignment1013" headers="r15c1-t28 r1c2-t28">
<p>0x2000</p>
</td>
<td class="cellalignment1013" headers="r15c1-t28 r1c3-t28">
<p>Bad fractional second low/high bit (1=low)</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4012"></a>Returns</p>
<p><code>OCI_SUCCESS</code>; <code>OCI_INVALID_HANDLE</code>, if <code>err</code> is a <code>NULL</code> pointer; or <code>OCI_ERROR</code>, on error.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4013"></a>Related Functions</p>
<p><a href="#i510718">OCIIntervalCompare()</a></p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="LNOCI17433" class="refsect2"><a id="i510718"></a>
<h2 class="refsect2"><a id="sthref4014"></a>OCIIntervalCompare()</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4015"></a>Purpose</p>
<p>Compares two intervals.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4016"></a>Syntax</p>
<pre>
sword OCIIntervalCompare (void          *hndl, 
                          OCIError      *err,
                          OCIInterval   *inter1, 
                          OCIInterval   *inter2, 
                          sword         *result );
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4017"></a>Parameters</p>
<dl>
<dt>hndl (IN)</dt>
<dd>
<p>The OCI user session handle or the environment handle.</p>
</dd>
<dt>err (IN/OUT)</dt>
<dd>
<p>The OCI error handle. If there is an error, it is recorded in <code>err</code>, and this function returns <code>OCI_ERROR</code>. Obtain diagnostic information by calling <a href="oci17msc007.htm#i540516">OCIErrorGet()</a>.</p>
</dd>
<dt>inter1 (IN)</dt>
<dd>
<p>Interval to be compared.</p>
</dd>
<dt>inter2 (IN)</dt>
<dd>
<p>Interval to be compared.</p>
</dd>
<dt>result (OUT)</dt>
<dd>
<p>Comparison result as specified in <a href="#CEGHGHFC">Table 19-10</a>.</p>
</dd>
</dl>
<div id="LNOCI17434" class="tblformal">
<p class="titleintable"><a id="sthref4018"></a><a id="CEGHGHFC"></a>Table 19-10 Comparison Results Returned by the result Parameter for OCIIntervalCompare()</p>
<table class="cellalignment1016" title="Comparison Results Returned by the result Parameter for OCIIntervalCompare() " summary="This table is described in the preceding text" dir="ltr">
<thead>
<tr class="cellalignment1005">
<th class="cellalignment1012" id="r1c1-t29">Comparison Result</th>
<th class="cellalignment1012" id="r1c2-t29">Output in result Parameter</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r2c1-t29" headers="r1c1-t29">
<p><code>inter1</code> &lt; <code>inter2</code></p>
</td>
<td class="cellalignment1013" headers="r2c1-t29 r1c2-t29">
<p>-1</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r3c1-t29" headers="r1c1-t29">
<p><code>inter1</code> = <code>inter2</code></p>
</td>
<td class="cellalignment1013" headers="r3c1-t29 r1c2-t29">
<p>0</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r4c1-t29" headers="r1c1-t29">
<p><code>inter1</code> &gt; <code>inter2</code></p>
</td>
<td class="cellalignment1013" headers="r4c1-t29 r1c2-t29">
<p>1</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4019"></a>Returns</p>
<p><code>OCI_SUCCESS</code>; <code>OCI_INVALID_HANDLE</code>, if <code>err</code> is a <code>NULL</code> pointer; or <code>OCI_ERROR</code>, if the input values are not mutually comparable.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4020"></a>Related Functions</p>
<p><a href="#i510645">OCIIntervalAssign()</a></p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="LNOCI17435" class="refsect2"><a id="i510753"></a>
<h2 class="refsect2"><a id="sthref4021"></a>OCIIntervalDivide()</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4022"></a>Purpose</p>
<p>Divides an interval by an Oracle <code>NUMBER</code> to produce an interval.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4023"></a>Syntax</p>
<pre>
sword OCIIntervalDivide ( void         *hndl, 
                          OCIError     *err, 
                          OCIInterval  *dividend, 
                          OCINumber    *divisor, 
                          OCIInterval  *result );
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4024"></a>Parameters</p>
<dl>
<dt>hndl (IN)</dt>
<dd>
<p>The OCI user session handle or the environment handle.</p>
</dd>
<dt>err (IN/OUT)</dt>
<dd>
<p>The OCI error handle. If there is an error, it is recorded in <code>err</code>, and this function returns <code>OCI_ERROR</code>. Obtain diagnostic information by calling <a href="oci17msc007.htm#i540516">OCIErrorGet()</a>.</p>
</dd>
<dt>dividend (IN)</dt>
<dd>
<p>Interval to be divided.</p>
</dd>
<dt>divisor (IN)</dt>
<dd>
<p>Oracle <code>NUMBER</code> dividing <code>dividend</code>.</p>
</dd>
<dt>result (OUT)</dt>
<dd>
<p>The resulting interval ( <code>dividend</code> / <code>divisor</code>).</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4025"></a>Returns</p>
<p><code>OCI_SUCCESS</code>; or <code>OCI_INVALID_HANDLE</code>, if <code>err</code> is a <code>NULL</code> pointer.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4026"></a>Related Functions</p>
<p><a href="#i510838">OCIIntervalMultiply()</a></p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="LNOCI17436" class="refsect2"><a id="i512484"></a>
<h2 class="refsect2"><a id="sthref4027"></a>OCIIntervalFromNumber()</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4028"></a>Purpose</p>
<p>Converts an Oracle <code>NUMBER</code> to an interval.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4029"></a>Syntax</p>
<pre>
sword OCIIntervalFromNumber ( void               *hndl, 
                              OCIError           *err,
                              OCIInterval        *interval,
                              OCINumber          *number );
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4030"></a>Parameters</p>
<dl>
<dt>hndl (IN)</dt>
<dd>
<p>The OCI user session handle or the environment handle.</p>
</dd>
<dt>err (IN/OUT)</dt>
<dd>
<p>The OCI error handle. If there is an error, it is recorded in <code>err</code>, and this function returns <code>OCI_ERROR</code>. Obtain diagnostic information by calling <a href="oci17msc007.htm#i540516">OCIErrorGet()</a>.</p>
</dd>
<dt>interval (OUT)</dt>
<dd>
<p>Interval result.</p>
</dd>
<dt>number (IN)</dt>
<dd>
<p>Oracle <code>NUMBER</code> to be converted (in years for YEAR TO MONTH intervals and in days for DAY TO SECOND intervals).</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4031"></a>Returns</p>
<p><code>OCI_SUCCESS</code>; or <code>OCI_INVALID_HANDLE</code>, if <code>err</code> is a <code>NULL</code> pointer.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4032"></a>Related Functions</p>
<p><a href="#i510907">OCIIntervalToNumber()</a></p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="LNOCI17437" class="refsect2"><a id="i510787"></a>
<h2 class="refsect2"><a id="sthref4033"></a>OCIIntervalFromText()</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4034"></a>Purpose</p>
<p>When given an interval string, returns the interval represented by the string. The type of the interval is the type of the <code>result</code> descriptor.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4035"></a>Syntax</p>
<pre>
sword OCIIntervalFromText ( void           *hndl, 
                            OCIError       *err, 
                            const OraText  *inpstring,
                            size_t         str_len,
                            OCIInterval    *result );
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4036"></a>Parameters</p>
<dl>
<dt>hndl (IN)</dt>
<dd>
<p>The OCI user session handle or the environment handle.</p>
</dd>
<dt>err (IN/OUT)</dt>
<dd>
<p>The OCI error handle. If there is an error, it is recorded in <code>err</code>, and this function returns <code>OCI_ERROR</code>. Obtain diagnostic information by calling <a href="oci17msc007.htm#i540516">OCIErrorGet()</a>.</p>
</dd>
<dt>inpstring (IN)</dt>
<dd>
<p>Input string.</p>
</dd>
<dt>str_len (IN)</dt>
<dd>
<p>Length of the input string.</p>
</dd>
<dt>result (OUT)</dt>
<dd>
<p>Resultant interval.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4037"></a>Returns</p>
<p><code>OCI_SUCCESS</code>; <code>OCI_INVALID_HANDLE</code>, if <code>err</code> is a <code>NULL</code> pointer; or <code>OCI_ERROR</code>, if any of the following statements is true:</p>
<ul>
<li>
<p>There are too many fields in the literal string.</p>
</li>
<li>
<p>The year is out of range (&ndash;4713 to 9999).</p>
</li>
<li>
<p>The month is out of range (1 to 12).</p>
</li>
<li>
<p>The day of month is out of range (1 to 28...31).</p>
</li>
<li>
<p>The hour is out of range (0 to 23).</p>
</li>
<li>
<p>The hour is out of range (0 to 11).</p>
</li>
<li>
<p>The minutes are out of range (0 to 59).</p>
</li>
<li>
<p>The seconds in the minute are out of range (0 to 59).</p>
</li>
<li>
<p>The seconds in the day are out of range (0 to 86399).</p>
</li>
<li>
<p>The interval is invalid.</p>
</li>
</ul>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4038"></a>Related Functions</p>
<p><a href="#i510940">OCIIntervalToText()</a></p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="LNOCI17438" class="refsect2"><a id="i519352"></a>
<h2 class="refsect2"><a id="sthref4039"></a>OCIIntervalFromTZ()</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4040"></a>Purpose</p>
<p>Returns an <code>OCI_DTYPE_INTERVAL_DS</code> of data type <code>OCIInterval</code> with the region ID set (if the region is specified in the input string) and the current absolute offset, or an absolute offset with the region ID set to 0.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4041"></a>Syntax</p>
<pre>
sword OCIIntervalFromTZ ( void           *hndl, 
                          OCIError       *err, 
                          const oratext  *inpstring,
                          size_t         str_len, 
                          OCIInterval    *result ) ;
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4042"></a>Parameters</p>
<dl>
<dt>hndl (IN)</dt>
<dd>
<p>The OCI user session handle or the environment handle.</p>
</dd>
<dt>err (IN/OUT)</dt>
<dd>
<p>The OCI error handle. If there is an error, it is recorded in <code>err</code>, and this function returns <code>OCI_ERROR</code>. Obtain diagnostic information by calling <a href="oci17msc007.htm#i540516">OCIErrorGet()</a>.</p>
</dd>
<dt>inpstring (IN)</dt>
<dd>
<p>Pointer to the input string.</p>
</dd>
<dt>str_len (IN)</dt>
<dd>
<p>Length of <code>inpstring</code>.</p>
</dd>
<dt>result (OUT)</dt>
<dd>
<p>Output interval.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4043"></a>Returns</p>
<p><code>OCI_SUCCESS</code>, on success; <code>OCI_INVALID_HANDLE</code>, if err is <code>NULL</code>; or <code>OCI_ERROR</code>, if there is a bad interval type or there are time zone errors.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4044"></a>Comments</p>
<p>The input string must be of the form [+/-]TZH:TZM or 'TZR [TZD]'</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4045"></a>Related Functions</p>
<p><a href="#i510787">OCIIntervalFromText()</a></p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="LNOCI17439" class="refsect2"><a id="i519278"></a>
<h2 class="refsect2"><a id="sthref4046"></a>OCIIntervalGetDaySecond()</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4047"></a>Purpose</p>
<p>Gets values of day, hour, minute, and second from an interval.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4048"></a>Syntax</p>
<pre>
sword OCIIntervalGetDaySecond (void               *hndl, 
                               OCIError           *err, 
                               sb4                *dy, 
                               sb4                *hr,
                               sb4                *mm, 
                               sb4                *ss, 
                               sb4                *fsec, 
                               const OCIInterval  *interval );
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4049"></a>Parameters</p>
<dl>
<dt>hndl (IN)</dt>
<dd>
<p>The OCI user session handle or the environment handle.</p>
</dd>
<dt>err (IN/OUT)</dt>
<dd>
<p>The OCI error handle. If there is an error, it is recorded in <code>err</code>, and this function returns <code>OCI_ERROR</code>. Obtain diagnostic information by calling <a href="oci17msc007.htm#i540516">OCIErrorGet()</a>.</p>
</dd>
<dt>dy (OUT)</dt>
<dd>
<p>Number of days.</p>
</dd>
<dt>hr (OUT)</dt>
<dd>
<p>Number of hours.</p>
</dd>
<dt>mm (OUT)</dt>
<dd>
<p>Number of minutes.</p>
</dd>
<dt>ss (OUT)</dt>
<dd>
<p>Number of seconds.</p>
</dd>
<dt>fsec (OUT)</dt>
<dd>
<p>Number of fractional seconds.</p>
</dd>
<dt>interval (IN)</dt>
<dd>
<p>The input interval.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4050"></a>Returns</p>
<p><code>OCI_SUCCESS</code>; or <code>OCI_INVALID_HANDLE</code>, if <code>err</code> is a <code>NULL</code> pointer.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4051"></a>Related Functions</p>
<p><a href="#i512522">OCIIntervalSetDaySecond()</a></p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="LNOCI17440" class="refsect2"><a id="i512495"></a>
<h2 class="refsect2"><a id="sthref4052"></a>OCIIntervalGetYearMonth()</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4053"></a>Purpose</p>
<p>Gets year and month from an interval.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4054"></a>Syntax</p>
<pre>
sword OCIIntervalGetYearMonth ( void               *hndl, 
                                OCIError           *err, 
                                sb4                *yr,
                                sb4                *mnth,
                                const OCIInterval  *interval );
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4055"></a>Parameters</p>
<dl>
<dt>hndl (IN)</dt>
<dd>
<p>The OCI user session handle or the environment handle.</p>
</dd>
<dt>err (IN/OUT)</dt>
<dd>
<p>The OCI error handle. If there is an error, it is recorded in <code>err</code>, and this function returns <code>OCI_ERROR</code>. Obtain diagnostic information by calling <a href="oci17msc007.htm#i540516">OCIErrorGet()</a>.</p>
</dd>
<dt>yr (OUT)</dt>
<dd>
<p>Year value.</p>
</dd>
<dt>mnth (OUT)</dt>
<dd>
<p>Month value.</p>
</dd>
<dt>interval (IN)</dt>
<dd>
<p>The input interval.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4056"></a>Returns</p>
<p><code>OCI_SUCCESS</code>; or <code>OCI_INVALID_HANDLE</code>, if <code>err</code> is a <code>NULL</code> pointer.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4057"></a>Related Functions</p>
<p><a href="#i512526">OCIIntervalSetYearMonth()</a></p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="LNOCI17441" class="refsect2"><a id="i510838"></a>
<h2 class="refsect2"><a id="sthref4058"></a>OCIIntervalMultiply()</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4059"></a>Purpose</p>
<p>Multiplies an interval by an Oracle <code>NUMBER</code> to produce an interval.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4060"></a>Syntax</p>
<pre>
sword OCIIntervalMultiply ( void               *hndl, 
                            OCIError           *err, 
                            const OCIInterval  *inter,
                            OCINumber          *nfactor,
                            OCIInterval        *result );
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4061"></a>Parameters</p>
<dl>
<dt>hndl (IN)</dt>
<dd>
<p>The OCI user session handle or the environment handle.</p>
</dd>
<dt>err (IN/OUT)</dt>
<dd>
<p>The OCI error handle. If there is an error, it is recorded in <code>err</code>, and this function returns <code>OCI_ERROR</code>. Obtain diagnostic information by calling <a href="oci17msc007.htm#i540516">OCIErrorGet()</a>.</p>
</dd>
<dt>inter (IN)</dt>
<dd>
<p>Interval to be multiplied.</p>
</dd>
<dt>nfactor (IN)</dt>
<dd>
<p>Oracle <code>NUMBER</code> to be multiplied.</p>
</dd>
<dt>result (OUT)</dt>
<dd>
<p>The resulting interval (<code>inter</code> * <code>nfactor</code>).</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4062"></a>Returns</p>
<p><code>OCI_SUCCESS</code>; <code>OCI_INVALID_HANDLE</code>, if <code>err</code> is a <code>NULL</code> pointer; or <code>OCI_ERROR</code>, if any of the following statements is true:</p>
<ul>
<li>
<p>The resulting year is greater than <code>SB4MAXVAL</code>.</p>
</li>
<li>
<p>The resulting year is less than <code>SB4MINVAL</code>.</p>
</li>
</ul>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4063"></a>Related Functions</p>
<p><a href="#i510753">OCIIntervalDivide()</a></p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="LNOCI17442" class="refsect2"><a id="i512522"></a>
<h2 class="refsect2"><a id="sthref4064"></a>OCIIntervalSetDaySecond()</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4065"></a>Purpose</p>
<p>Sets day, hour, minute, and second in an interval.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4066"></a>Syntax</p>
<pre>
sword OCIIntervalSetDaySecond ( void               *hndl, 
                                OCIError           *err, 
                                sb4                dy,
                                sb4                hr,
                                sb4                mm, 
                                sb4                ss, 
                                sb4                fsec, 
                                OCIInterval        *result );
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4067"></a>Parameters</p>
<dl>
<dt>hndl (IN)</dt>
<dd>
<p>The OCI user session handle or the environment handle.</p>
</dd>
<dt>err (IN/OUT)</dt>
<dd>
<p>The OCI error handle. If there is an error, it is recorded in <code>err</code>, and this function returns <code>OCI_ERROR</code>. Obtain diagnostic information by calling <a href="oci17msc007.htm#i540516">OCIErrorGet()</a>.</p>
</dd>
<dt>dy (IN)</dt>
<dd>
<p>Number of days.</p>
</dd>
<dt>hr (IN)</dt>
<dd>
<p>Number of hours.</p>
</dd>
<dt>mm (IN)</dt>
<dd>
<p>Number of minutes.</p>
</dd>
<dt>ss (IN)</dt>
<dd>
<p>Number of seconds.</p>
</dd>
<dt>fsec (IN)</dt>
<dd>
<p>Number of fractional seconds.</p>
</dd>
<dt>result (OUT)</dt>
<dd>
<p>The resulting interval.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4068"></a>Returns</p>
<p><code>OCI_SUCCESS</code>; or <code>OCI_INVALID_HANDLE</code>, if <code>err</code> is a <code>NULL</code> pointer.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4069"></a>Related Functions</p>
<p><a href="#i519278">OCIIntervalGetDaySecond()</a></p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="LNOCI17443" class="refsect2"><a id="i512526"></a>
<h2 class="refsect2"><a id="sthref4070"></a>OCIIntervalSetYearMonth()</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4071"></a>Purpose</p>
<p>Sets year and month in an interval.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4072"></a>Syntax</p>
<pre>
sword OCIIntervalSetYearMonth ( void               *hndl, 
                                OCIError           *err, 
                                sb4                yr,
                                sb4                mnth,
                                OCIInterval        *result );
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4073"></a>Parameters</p>
<dl>
<dt>hndl (IN)</dt>
<dd>
<p>The OCI user session handle or the environment handle.</p>
</dd>
<dt>err (IN/OUT)</dt>
<dd>
<p>The OCI error handle. If there is an error, it is recorded in <code>err</code>, and this function returns <code>OCI_ERROR</code>. Obtain diagnostic information by calling <a href="oci17msc007.htm#i540516">OCIErrorGet()</a>.</p>
</dd>
<dt>yr (IN)</dt>
<dd>
<p>Year value.</p>
</dd>
<dt>mnth (IN)</dt>
<dd>
<p>Month value.</p>
</dd>
<dt>result (OUT)</dt>
<dd>
<p>The resulting interval.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4074"></a>Returns</p>
<p><code>OCI_SUCCESS</code>; <code>OCI_INVALID_HANDLE</code>, if <code>err</code> is a <code>NULL</code> pointer; or <code>OCI_ERROR</code>, if any of the following statements is true:</p>
<ul>
<li>
<p>The resulting year is greater than <code>SB4MAXVAL</code>.</p>
</li>
<li>
<p>The resulting year is less than <code>SB4MINVAL</code>.</p>
</li>
</ul>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4075"></a>Related Functions</p>
<p><a href="#i512495">OCIIntervalGetYearMonth()</a></p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="LNOCI17444" class="refsect2"><a id="i510871"></a>
<h2 class="refsect2"><a id="sthref4076"></a>OCIIntervalSubtract()</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4077"></a>Purpose</p>
<p>Subtracts two intervals and stores the result in an interval.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4078"></a>Syntax</p>
<pre>
sword OCIIntervalSubtract ( void         *hndl,
                            OCIError     *err, 
                            OCIInterval  *minuend, 
                            OCIInterval  *subtrahend,
                            OCIInterval  *result );
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4079"></a>Parameters</p>
<dl>
<dt>hndl (IN)</dt>
<dd>
<p>The OCI user session handle or the environment handle.</p>
</dd>
<dt>err (IN/OUT)</dt>
<dd>
<p>The OCI error handle. If there is an error, it is recorded in <code>err</code>, and this function returns <code>OCI_ERROR</code>. Obtain diagnostic information by calling <a href="oci17msc007.htm#i540516">OCIErrorGet()</a>.</p>
</dd>
<dt>minuend (IN)</dt>
<dd>
<p>The interval to be subtracted from.</p>
</dd>
<dt>subtrahend (IN)</dt>
<dd>
<p>The interval subtracted from <code>minuend</code>.</p>
</dd>
<dt>result (OUT)</dt>
<dd>
<p>The resulting interval (<code>minuend</code> - <code>subtrahend</code>).</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4080"></a>Returns</p>
<p><code>OCI_SUCCESS</code>; <code>OCI_INVALID_HANDLE</code>, if <code>err</code> is a <code>NULL</code> pointer; or <code>OCI_ERROR</code>, if any of the following statements is true:</p>
<ul>
<li>
<p>The resulting year is greater than <code>SB4MAXVAL</code>.</p>
</li>
<li>
<p>The resulting year is less than <code>SB4MINVAL</code>.</p>
</li>
<li>
<p>The two input intervals are not mutually comparable.</p>
</li>
</ul>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4081"></a>Related Functions</p>
<p><a href="#i512468">OCIIntervalAdd()</a></p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="LNOCI17445" class="refsect2"><a id="i510907"></a>
<h2 class="refsect2"><a id="sthref4082"></a>OCIIntervalToNumber()</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4083"></a>Purpose</p>
<p>Converts an interval to an Oracle <code>NUMBER</code>.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4084"></a>Syntax</p>
<pre>
sword OCIIntervalToNumber ( void               *hndl, 
                            OCIError           *err,
                            OCIInterval        *interval,
                            OCINumber          *number );
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4085"></a>Parameters</p>
<dl>
<dt>hndl (IN)</dt>
<dd>
<p>The OCI user session handle or the environment handle.</p>
</dd>
<dt>err (IN/OUT)</dt>
<dd>
<p>The OCI error handle. If there is an error, it is recorded in <code>err</code>, and this function returns <code>OCI_ERROR</code>. Obtain diagnostic information by calling <a href="oci17msc007.htm#i540516">OCIErrorGet()</a>.</p>
</dd>
<dt>interval (IN)</dt>
<dd>
<p>Interval to be converted.</p>
</dd>
<dt>number (OUT)</dt>
<dd>
<p>Oracle <code>NUMBER</code> result (in years for <code>YEARMONTH</code> interval and in days for <code>DAYSECOND</code>).</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4086"></a>Comments</p>
<p>Fractional portions of the date (for instance, minutes and seconds if the unit chosen is hours) are included in the Oracle <code>NUMBER</code> produced. Excess precision is truncated.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4087"></a>Returns</p>
<p><code>OCI_SUCCESS</code>; or <code>OCI_INVALID_HANDLE</code>, if <code>err</code> is a <code>NULL</code> pointer.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4088"></a>Related Functions</p>
<p><a href="#i512484">OCIIntervalFromNumber()</a></p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="LNOCI17446" class="refsect2"><a id="i510940"></a>
<h2 class="refsect2"><a id="sthref4089"></a>OCIIntervalToText()</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4090"></a>Purpose</p>
<p>When given an interval, produces a string representing the interval.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4091"></a>Syntax</p>
<pre>
sword OCIIntervalToText ( void               *hndl,
                          OCIError           *err,
                          const OCIInterval  *interval,
                          ub1                lfprec,
                          ub1                fsprec,
                          OraText            *buffer, 
                          size_t             buflen,
                          size_t             *resultlen );
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4092"></a>Parameters</p>
<dl>
<dt>hndl (IN)</dt>
<dd>
<p>The OCI user session handle or the environment handle.</p>
</dd>
<dt>err (IN/OUT)</dt>
<dd>
<p>The OCI error handle. If there is an error, it is recorded in <code>err</code>, and this function returns <code>OCI_ERROR</code>. Obtain diagnostic information by calling <a href="oci17msc007.htm#i540516">OCIErrorGet()</a>.</p>
</dd>
<dt>interval (IN)</dt>
<dd>
<p>Interval to be converted.</p>
</dd>
<dt>lfprec (IN)</dt>
<dd>
<p>Leading field precision. (The number of digits used to represent the leading field.)</p>
</dd>
<dt>fsprec (IN)</dt>
<dd>
<p>Fractional second precision of the interval (the number of digits used to represent the fractional seconds).</p>
</dd>
<dt>buffer (OUT)</dt>
<dd>
<p>Buffer to hold the result.</p>
</dd>
<dt>buflen (IN)</dt>
<dd>
<p>The length of <code>buffer</code>.</p>
</dd>
<dt>resultlen (OUT)</dt>
<dd>
<p>The length of the result placed into <code>buffer</code>.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4093"></a>Comments</p>
<p>The interval literal is output as 'year' or '[year-]month' for <code>INTERVAL YEAR TO MONTH</code> intervals and as 'seconds' or 'minutes[:seconds]' or 'hours[:minutes[:seconds]]' or 'days[ hours[:minutes[:seconds]]]' for <code>INTERVAL</code> <code>DAY</code> <code>TO</code> <code>SECOND</code> intervals (where optional fields are surrounded by brackets).</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4094"></a>Returns</p>
<p><code>OCI_SUCCESS</code>; <code>OCI_INVALID_HANDLE</code>, if <code>err</code> is a <code>NULL</code> pointer; or <code>OCI_ERROR</code>, if the buffer is not large enough to hold the result.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4095"></a>Related Functions</p>
<p><a href="#i510787">OCIIntervalFromText()</a></p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" --></div>
<!-- class="refsect1" --></div>
<!-- class="refentry" -->
<div class="refentry"></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment1004">
<tr>
<td class="cellalignment1013">
<table class="cellalignment1009">
<tr>
<td class="cellalignment1008"><a href="oci19map001.htm"><img width="24" height="24" src="../../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment1008"><a href="oci19map003.htm"><img width="24" height="24" src="../../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;1996, 2014,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment1015">
<table class="cellalignment1007">
<tr>
<td class="cellalignment1008"><a href="../../index.htm"><img width="24" height="24" src="../../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment1008"><a href="../../nav/portal_booklist.htm"><img width="24" height="24" src="../../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment1008"><a href="toc.htm"><img width="24" height="24" src="../../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment1008"><a href="index.htm"><img width="24" height="24" src="../../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment1008"><a href="../../nav/mindx.htm"><img width="24" height="24" src="../../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment1008"><a href="../../dcommon/html/feedback.htm"><img width="24" height="24" src="../../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>
</body>
</html>
