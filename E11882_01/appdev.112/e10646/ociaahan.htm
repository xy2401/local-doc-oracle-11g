<!DOCTYPE html>
<html lang="en" >
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1">
<meta charset="utf-8">
<title>Handle and Descriptor Attributes</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Merged Version 1023" />
<meta name="dcterms.created" content="2014-07-18T15:18:46Z" />
<meta name="robots" content="all" />
<meta name="dcterms.title" content="Call Interface Programmer's Guide" />
<meta name="dcterms.identifier" content="E10646-15" />
<meta name="dcterms.isVersionOf" content="LNOCI" />
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;1996, 2014,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved." />
<link rel="Start" href="../../index.htm" title="Home" type="text/html" />
<link rel="Copyright" href="../../dcommon/html/cpyr.htm" title="Copyright" type="text/html" />

<script type="application/javascript"  src="../../dcommon/js/headfoot.js"></script>
<script type="application/javascript"  src="../../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html" />
<link rel="Index" href="index.htm" title="Index" type="text/html" />
<link rel="Prev" href="oci23xml001.htm" title="Previous" type="text/html" />
<link rel="Next" href="ociabdem.htm" title="Next" type="text/html" />
<link rel="alternate" href="../e10646.pdf" title="PDF version" type="application/pdf" />
<link rel="schema.dcterms" href="http://purl.org/dc/terms/" />
<link rel="stylesheet" href="../../dcommon/css/fusiondoc.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/header.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/footer.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/fonts.css">
<link rel="stylesheet" href="../../dcommon/css/foundation.css">
<link rel="stylesheet" href="../../dcommon/css/codemirror.css">
<link rel="stylesheet" type="text/css" title="Default" href="../../nav/css/html5.css">
<link rel="stylesheet" href="../../dcommon/css/respond-480-tablet.css">
<link rel="stylesheet" href="../../dcommon/css/respond-768-laptop.css">
<link rel="stylesheet" href="../../dcommon/css/respond-1140-deskop.css">
<script type="application/javascript" src="../../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">70/79</span> <!-- End Header -->
<div id="LNOCI250" class="appendix"><a id="i442199"></a>
<h1 class="appendix"><span class="secnum">A</span> Handle and Descriptor Attributes</h1>
<p>This appendix describes the attributes for OCI handles and descriptors, which can be read with <code>OCIAttrGet()</code>, and modified with <code>OCIAttrSet()</code>.</p>
<p>This appendix contains these topics:</p>
<ul>
<li>
<p><a href="#i442281">Conventions</a></p>
</li>
<li>
<p><a href="#i428587">Environment Handle Attributes</a></p>
</li>
<li>
<p><a href="#i449162">Error Handle Attributes</a></p>
</li>
<li>
<p><a href="#i428836">Service Context Handle Attributes</a></p>
</li>
<li>
<p><a href="#i429949">Server Handle Attributes</a></p>
<ul>
<li>
<p><a href="#i456800">Authentication Information Handle</a></p>
</li>
<li>
<p><a href="#i428844">User Session Handle Attributes</a></p>
</li>
</ul>
</li>
<li>
<p><a href="#BAJCBGAG">Administration Handle Attributes</a></p>
</li>
<li>
<p><a href="#i450511">Connection Pool Handle Attributes</a></p>
</li>
<li>
<p><a href="#i455080">Session Pool Handle Attributes</a></p>
</li>
<li>
<p><a href="#i455274">Transaction Handle Attributes</a></p>
</li>
<li>
<p><a href="#i428664">Statement Handle Attributes</a></p>
</li>
<li>
<p><a href="#i430016">Bind Handle Attributes</a></p>
</li>
<li>
<p><a href="#i428859">Define Handle Attributes</a></p>
</li>
<li>
<p><a href="#i428863">Describe Handle Attributes</a></p>
</li>
<li>
<p><a href="#i424749">Parameter Descriptor Attributes</a></p>
</li>
<li>
<p><a href="#i428825">LOB Locator Attributes</a></p>
</li>
<li>
<p><a href="#i428927">Complex Object Attributes</a></p>
<ul>
<li>
<p><a href="#i455137">Complex Object Retrieval Handle Attributes</a></p>
</li>
<li>
<p><a href="#CACJHDIH">Complex Object Retrieval Descriptor Attributes</a></p>
</li>
</ul>
</li>
<li>
<p><a href="#i453062">Streams Advanced Queuing Descriptor Attributes</a></p>
<ul>
<li>
<p><a href="#CACEIGJC">OCIAQEnqOptions Descriptor Attributes</a></p>
</li>
<li>
<p><a href="#CACGJBEH">OCIAQDeqOptions Descriptor Attributes</a></p>
</li>
<li>
<p><a href="#CACJJFGI">OCIAQMsgProperties Descriptor Attributes</a></p>
</li>
<li>
<p><a href="#CACFCFFC">OCIAQAgent Descriptor Attributes</a></p>
</li>
<li>
<p><a href="#i454098">OCIServerDNs Descriptor Attributes</a></p>
</li>
</ul>
</li>
<li>
<p><a href="#i439205">Subscription Handle Attributes</a></p>
<ul>
<li>
<p><a href="#BAJHGABI">Continuous Query Notification Attributes</a></p>
</li>
<li>
<p><a href="#BAJCIGDB">Continuous Query Notification Descriptor Attributes</a></p>
</li>
<li>
<p><a href="#CHDBCADH">Notification Descriptor Attributes</a></p>
</li>
<li>
<p><a href="#CACIEICJ">Invalidated Query Attributes</a></p>
</li>
</ul>
</li>
<li>
<p><a href="#i444702">Direct Path Loading Handle Attributes</a></p>
<ul>
<li>
<p><a href="#i453506">Direct Path Context Handle (OCIDirPathCtx) Attributes</a></p>
</li>
<li>
<p><a href="#CACIHBJB">Direct Path Function Context Handle (OCIDirPathFuncCtx) Attributes</a></p>
</li>
<li>
<p><a href="#i453507">Direct Path Function Column Array Handle (OCIDirPathColArray) Attributes</a></p>
</li>
<li>
<p><a href="#CACBCHFA">Direct Path Stream Handle (OCIDirPathStream) Attributes</a></p>
</li>
<li>
<p><a href="#i448019">Direct Path Column Parameter Attributes</a></p>
</li>
</ul>
</li>
<li>
<p><a href="#i444773">Process Handle Attributes</a></p>
</li>
<li>
<p><a href="#BAJCEDGJ">Event Handle Attributes</a></p>
</li>
</ul>
<a id="i442281"></a>
<div id="LNOCI17758" class="sect1">
<h2 class="sect1">Conventions</h2>
<p>For each handle type, the attributes that can be read or changed are listed. Each attribute listing includes the following information:</p>
<dl>
<dt>Mode</dt>
<dd>
<p>The following modes are valid:</p>
<p>READ - The attribute can be read using <code>OCIAttrGet()</code>.</p>
<p>WRITE - The attribute can be modified using <code>OCIAttrSet()</code>.</p>
<p>READ/WRITE - The attribute can be read using <code>OCIAttrGet()</code>, and it can be modified using <code>OCIAttrSet()</code>.</p>
</dd>
<dt>Description</dt>
<dd>
<p>This is a description of the purpose of the attribute.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p>This is the data type of the attribute. If necessary, a distinction is made between the data type for READ and WRITE modes.</p>
</dd>
<dt>Valid Values</dt>
<dd>
<p>In some cases, only certain values are allowed, and they are listed here.</p>
</dd>
<dt>Example</dt>
<dd>
<p>In some cases an example is included.</p>
</dd>
</dl>
</div>
<!-- class="sect1" -->
<a id="i428587"></a>
<div id="LNOCI17759" class="sect1">
<h2 class="sect1"><a id="sthref5299"></a><a id="sthref5300"></a><a id="sthref5301"></a>Environment Handle Attributes</h2>
<p>The following attributes are used for the environment handle.</p>
<p class="subhead1"><a id="LNOCI17760"></a><a id="sthref5302"></a>OCI_ATTR_ALLOC_DURATION</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ/WRITE</p>
</dd>
<dt>Description</dt>
<dd>
<p>This attribute sets the value of <code>OCI_DURATION_DEFAULT</code> for allocation durations for the application associated with the environment handle.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>OCIDuration */OCIDuration</code></p>
</dd>
</dl>
<p class="subhead1"><a id="LNOCI17761"></a><a id="sthref5303"></a>OCI_ATTR_BIND_DN</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ/WRITE</p>
</dd>
<dt>Description</dt>
<dd>
<p>The login name (DN) to use when connecting to the LDAP server.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>oratext **/oratext *</code></p>
</dd>
</dl>
<p class="subhead1"><a id="i448329"></a><a id="LNOCI17762"></a><a id="sthref5304"></a>OCI_ATTR_CACHE_ARRAYFLUSH</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ/WRITE</p>
</dd>
<dt>Description</dt>
<dd>
<p>When this attribute is set to <code>TRUE</code>, during <code>OCICacheFlush()</code> the objects that belong to the same table are flushed, which can considerably improve performance. An attribute value of <code>TRUE</code> should only be used when the order in which the objects are flushed is not important. When the attribute value is set to <code>TRUE</code>, it is not guaranteed that the order in which the objects are marked dirty is preserved.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="oci14oca.htm#i441889">"Object Cache Parameters"</a> and <a href="oci14oca.htm#i440636">"Flushing Changes to the Server"</a></div>
</dd>
</dl>
<dl>
<dt>Attribute Data Type</dt>
<dd>
<p><code>boolean */boolean</code></p>
</dd>
</dl>
<p class="subhead1"><a id="LNOCI17763"></a><a id="sthref5305"></a>OCI_ATTR_CACHE_MAX_SIZE</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ/WRITE</p>
</dd>
<dt>Description</dt>
<dd>
<p>Sets the maximum size (high watermark) for the client-side object cache as a percentage of the optimal size. Usually you can set the value at 10%, the default, of the optimal size, <code>OCI_ATTR_CACHE_OPT_SIZE</code>. Setting this attribute to 0 results in a value of 10 being used. The object cache uses the maximum and optimal values for freeing unused memory in the object cache.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="oci14oca.htm#i441889">"Object Cache Parameters"</a></div>
</dd>
</dl>
<dl>
<dt>Attribute Data Type</dt>
<dd>
<p><code>ub4 */ub4</code></p>
</dd>
</dl>
<p class="subhead1"><a id="LNOCI17764"></a><a id="sthref5306"></a>OCI_ATTR_CACHE_OPT_SIZE</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ/WRITE</p>
</dd>
<dt>Description</dt>
<dd>
<p>Sets the optimal size for the client-side object cache in bytes. The default value is 8 megabytes (MB). Setting this attribute to 0 results in a value of 8 MB being used.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="oci14oca.htm#i441889">"Object Cache Parameters"</a></div>
</dd>
</dl>
<dl>
<dt>Attribute Data Type</dt>
<dd>
<p><code>ub4 */ub4</code></p>
</dd>
</dl>
<p class="subhead1"><a id="LNOCI17765"></a><a id="sthref5307"></a>OCI_ATTR_ENV_CHARSET_ID</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ</p>
</dd>
<dt>Description</dt>
<dd>
<p>Local (client-side) character set ID. Users can update this setting only after creating the environment handle but before calling any other OCI functions. This restriction ensures the consistency among data and metadata in the same environment handle. When character set ID is UTF-16, an attempt to get this attribute is invalid.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>ub2 *</code></p>
</dd>
</dl>
<p class="subhead1"><a id="LNOCI17766"></a><a id="sthref5308"></a>OCI_ATTR_ENV_NCHARSET_ID</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ</p>
</dd>
<dt>Description</dt>
<dd>
<p>Local (client-side) national character set ID. Users can update this setting only after creating the environment handle but before calling any other OCI functions. This restriction ensures the consistency among data and metadata in the same environment handle. When character set ID is UTF-16, an attempt to get this attribute is invalid.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>ub2 *</code></p>
</dd>
</dl>
<p class="subhead1"><a id="LNOCI17767"></a><a id="sthref5309"></a>OCI_ATTR_ENV_UTF16</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ</p>
</dd>
<dt>Description</dt>
<dd>
<p>Encoding method is UTF-16. The value 1 means that the environment handle is created when the encoding method is UTF-16, whereas 0 means that it is not. This attribute value can only be set by the call to <code>OCIEnvCreate()</code> and cannot be changed later.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>ub1 *</code></p>
</dd>
</dl>
<p class="subhead1"><a id="LNOCI17768"></a><a id="sthref5310"></a>OCI_ATTR_EVTCBK</p>
<dl>
<dt>Mode</dt>
<dd>
<p>WRITE</p>
</dd>
<dt>Description</dt>
<dd>
<p>This attribute registers an event callback function.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="oci09adv.htm#CJGDCEFG">"HA Event Notification"</a></div>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>OCIEventCallback</code></p>
</dd>
</dl>
<p class="subhead1"><a id="LNOCI17769"></a><a id="sthref5311"></a>OCI_ATTR_EVTCTX</p>
<dl>
<dt>Mode</dt>
<dd>
<p>WRITE</p>
</dd>
<dt>Description</dt>
<dd>
<p>This attribute registers a context passed to an event callback.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="oci09adv.htm#CJGDCEFG">"HA Event Notification"</a></div>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p>void *</p>
</dd>
</dl>
<p class="subhead1"><a id="LNOCI17770"></a><a id="sthref5312"></a>OCI_ATTR_HEAPALLOC</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ</p>
</dd>
<dt>Description</dt>
<dd>
<p>The current size of the memory allocated from the environment handle. This may help you track where memory is being used most in an application.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>ub4 *</code></p>
</dd>
</dl>
<p class="subhead1"><a id="i454073"></a><a id="LNOCI17771"></a><a id="sthref5313"></a>OCI_ATTR_LDAP_AUTH</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ/WRITE</p>
</dd>
<dt>Description</dt>
<dd>
<p>The authentication mode. The following are the valid values:</p>
<p>0x0: No authentication; anonymous bind.</p>
<p>0x1: Simple authentication; user name and password authentication.</p>
<p>0x5: SSL connection with no authentication.</p>
<p>0x6: SSL: only server authentication required.</p>
<p>0x7: SSL: both server authentication and client authentication are required.</p>
<p>0x8: Authentication method is determined at run time.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>ub2 */ub2</code></p>
</dd>
</dl>
<p class="subhead1"><a id="LNOCI17772"></a><a id="sthref5314"></a>OCI_ATTR_LDAP_CRED</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ/WRITE</p>
</dd>
<dt>Description</dt>
<dd>
<p>If the authentication method is "simple authentication" (user name and password authentication), then this attribute holds the password to use when connecting to the LDAP server.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>oratext **/oratext *</code></p>
</dd>
</dl>
<p class="subhead1"><a id="LNOCI17773"></a><a id="sthref5315"></a>OCI_ATTR_LDAP_CTX</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ/WRITE</p>
</dd>
<dt>Description</dt>
<dd>
<p>The administrative context of the client. This is usually the root of the Oracle Database LDAP schema in the LDAP server.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>oratext **/oratext *</code></p>
</dd>
</dl>
<p class="subhead1"><a id="LNOCI17774"></a><a id="sthref5316"></a>OCI_ATTR_LDAP_HOST</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ/WRITE</p>
</dd>
<dt>Description</dt>
<dd>
<p>The name of the host on which the LDAP server runs.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>oratext **/oratext *</code></p>
</dd>
</dl>
<p class="subhead1"><a id="LNOCI17775"></a><a id="sthref5317"></a>OCI_ATTR_LDAP_PORT</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ/WRITE</p>
</dd>
<dt>Description</dt>
<dd>
<p>The port on which the LDAP server is listening.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>ub2 */ub2</code></p>
</dd>
</dl>
<p class="subhead1"><a id="LNOCI17776"></a><a id="sthref5318"></a>OCI_ATTR_OBJECT</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ</p>
</dd>
<dt>Description</dt>
<dd>
<p>Returns <code>TRUE</code> if the environment was initialized in object mode.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>boolean *</code></p>
</dd>
</dl>
<p class="subhead1"><a id="LNOCI17777"></a>OCI_ATTR_PINOPTION<a id="sthref5319"></a></p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ/WRITE</p>
</dd>
<dt>Description</dt>
<dd>
<p>This attribute sets the value of <code>OCI_PIN_DEFAULT</code> for the application associated with the environment handle.</p>
<p>For example, if <code>OCI_ATTR_PINOPTION</code> is set to <code>OCI_PIN_RECENT</code>, and <code>OCIObjectPin()</code> is called with the <code><span class="codeinlineitalic">pin_option</span></code> parameter set to <code>OCI_PIN_DEFAULT</code>, the object is pinned in <code>OCI_PIN_RECENT</code> mode.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>OCIPinOpt */OCIPinOpt</code></p>
</dd>
</dl>
<p class="subhead1"><a id="LNOCI17778"></a><a id="sthref5320"></a>OCI_ATTR_OBJECT_NEWNOTNULL</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ/WRITE</p>
</dd>
<dt>Description</dt>
<dd>
<p>When this attribute is set to <code>TRUE</code>, newly created objects have non-<code>NULL</code> attributes.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="oci11obj.htm#i440918">"Creating Objects"</a></div>
</dd>
</dl>
<dl>
<dt>Attribute Data Type</dt>
<dd>
<p><code>boolean */boolean</code></p>
</dd>
</dl>
<p class="subhead1"><a id="LNOCI17779"></a><a id="sthref5321"></a>OCI_ATTR_OBJECT_DETECTCHANGE</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ/WRITE</p>
</dd>
<dt>Description</dt>
<dd>
<p>When this attribute is set to <code>TRUE</code>, applications receive an ORA-08179 error when attempting to flush an object that has been modified in the server by another committed transaction.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="oci14oca.htm#i443415">"Implementing Optimistic Locking"</a></div>
</dd>
</dl>
<dl>
<dt>Attribute Data Type</dt>
<dd>
<p><code>boolean */boolean</code></p>
</dd>
</dl>
<p class="subhead1"><a id="LNOCI17780"></a><a id="sthref5322"></a>OCI_ATTR_PIN_DURATION</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ/WRITE</p>
</dd>
<dt>Description</dt>
<dd>
<p>This attribute sets the value of <code>OCI_DURATION_DEFAULT</code> for pin durations for the application associated with the environment handle.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>OCIDuration */OCIDuration</code></p>
</dd>
</dl>
<p class="subhead1"><a id="i444986"></a><a id="LNOCI17781"></a><a id="sthref5323"></a>OCI_ATTR_SHARED_HEAPALLOC</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ</p>
</dd>
<dt>Description</dt>
<dd>
<p>Returns the size of the memory currently allocated from the shared pool. This attribute works on any environment handle, but the process must be initialized in shared mode to return a meaningful value. This attribute is read as follows:</p>
<pre>
ub4 heapsz = 0;
OCIAttrGet((void *)envhp, (ub4)OCI_HTYPE_ENV,
           (void *) &amp;heapsz, (ub4 *) 0,
           (ub4)OCI_ATTR_SHARED_HEAPALLOC, errhp);
</pre></dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>ub4 *</code></p>
</dd>
</dl>
<p class="subhead1"><a id="LNOCI17784"></a><a id="sthref5324"></a>OCI_ATTR_WALL_LOC</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ/WRITE</p>
</dd>
<dt>Description</dt>
<dd>
<p>If the authentication method is SSL authentication, this attribute contains the location of the client wallet.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>oratext **/oratext *</code></p>
</dd>
</dl>
</div>
<!-- class="sect1" -->
<a id="i449162"></a>
<div id="LNOCI17785" class="sect1">
<h2 class="sect1">Error Handle Attributes<a id="sthref5325"></a><a id="sthref5326"></a><a id="sthref5327"></a></h2>
<p>The following attributes are used for the error handle.</p>
<p class="subhead1"><a id="LNOCI17786"></a>OCI_ATTR_DML_ROW_OFFSET<a id="sthref5328"></a></p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ</p>
</dd>
<dt>Description</dt>
<dd>
<p>Returns the offset (into the DML array) at which the error occurred.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>ub4 *</code></p>
</dd>
</dl>
</div>
<!-- class="sect1" -->
<a id="i428836"></a>
<div id="LNOCI17787" class="sect1">
<h2 class="sect1"><a id="sthref5329"></a><a id="sthref5330"></a><a id="sthref5331"></a>Service Context Handle Attributes</h2>
<p>The following attributes are used for service context handle.</p>
<p class="subhead1"><a id="LNOCI17788"></a><a id="sthref5332"></a>OCI_ATTR_ENV</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ</p>
</dd>
<dt>Description</dt>
<dd>
<p>Returns the environment context associated with the service context.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>OCIEnv **</code></p>
</dd>
</dl>
<p class="subhead1"><a id="LNOCI17789"></a>OCI_ATTR_IN_V8_MODE<a id="sthref5333"></a></p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ</p>
</dd>
<dt>Description</dt>
<dd>
<p>Allows you to determine whether an application has switched to Oracle release 7 mode (for example, through an <code>OCISvcCtxToLda()</code> call). A nonzero (<code>TRUE</code>) return value indicates that the application is currently running in Oracle release 8 mode, a zero (false) return value indicates that the application is currently running in Oracle release 7 mode.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>ub1 *</code></p>
</dd>
<dt>Example</dt>
<dd>
<p>The following code sample shows how this attribute is used:</p>
<pre>
in_v8_mode = 0; 
OCIAttrGet ((void *)svchp, (ub4)OCI_HTYPE_SVCCTX, (ub1 *)&amp;in_v8_mode,  
                    (ub4) 0, OCI_ATTR_IN_V8_MODE, errhp); 
if (in_v8_mode) 
     fprintf (stdout, "In V8 mode\n"); 
else 
     fprintf (stdout, "In V7 mode\n");
</pre></dd>
</dl>
<p class="subhead1"><a id="LNOCI17790"></a><a id="sthref5334"></a>OCI_ATTR_SERVER</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ/WRITE</p>
</dd>
<dt>Description</dt>
<dd>
<p>When read, returns the pointer to the server context attribute of the service context.</p>
<p>When changed, sets the server context attribute of the service context.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>OCIServer **</code> / <code>OCIServer *</code></p>
</dd>
</dl>
<p class="subhead1"><a id="LNOCI17791"></a><a id="sthref5335"></a>OCI_ATTR_SESSION</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ/WRITE</p>
</dd>
<dt>Description</dt>
<dd>
<p>When read, returns the pointer to the authentication context attribute of the service context.</p>
<p>When changed, sets the authentication context attribute of the service context.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>OCISession **</code>/ <code>OCISession *</code></p>
</dd>
</dl>
<p class="subhead1"><a id="BAJDGBHB"></a><a id="LNOCI18358"></a><a id="sthref5336"></a>OCI_ATTR_STMTCACHE_CBK</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ/WRITE</p>
</dd>
<dt>Description</dt>
<dd>
<p>Used to get and set the application's callback function on the <code>OCISvcCtx</code> handle. This function, if registered on <code>OCISvcCtx</code>, is called when a statement in the statement cache belonging to this service context is purged or when the session is ended.</p>
<p>The callback function must be of this prototype:</p>
<pre>
sword (*OCICallbackStmtCache)(void *ctx, OCIStmt *stmt, ub4 mode)
</pre>
<p><code>ctx</code>: IN argument. This is the same as the context the application has set on the current statement handle.</p>
<p><code>stmt</code>: IN argument. This is the statement handle that is being purged from the cache.</p>
<p><code>mode</code>: IN argument. This is the mode in which the callback function is being called. Currently only one value is supported, <code>OCI_CBK_STMTCACHE_STMTPURGE</code>, which means the callback is being called during purging of the current statement.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<pre>
sword (*OCICallbackStmtCache)(void *ctx, OCIStmt *stmt, ub4 mode)
</pre></dd>
</dl>
<p class="subhead1"><a id="i455414"></a><a id="LNOCI17792"></a><a id="sthref5337"></a>OCI_ATTR_STMTCACHESIZE</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ/WRITE</p>
</dd>
<dt>Description</dt>
<dd>
<p>The default value of the statement cache size is 20 statements, for a statement cache-enabled session. The user can increase or decrease this value by setting this attribute on the service context handle. This attribute can also be used to enable or disable statement caching for the session, pooled or nonpooled. Statement caching can be enabled by setting the attribute to a nonzero size and disabled by setting it to zero.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>ub4 *</code>/ <code>ub4</code></p>
</dd>
</dl>
<p class="subhead1"><a id="LNOCI17793"></a><a id="sthref5338"></a>OCI_ATTR_TRANS</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ/WRITE</p>
</dd>
<dt>Description</dt>
<dd>
<p>When read, returns the pointer to the transaction context attribute of the service context.</p>
<p>When changed, sets the transaction context attribute of the service context.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>OCITrans **</code> / <code>OCITrans *</code></p>
</dd>
</dl>
</div>
<!-- class="sect1" -->
<a id="i429949"></a>
<div id="LNOCI17794" class="sect1">
<h2 class="sect1">Server Handle Attributes<a id="sthref5339"></a><a id="sthref5340"></a><a id="sthref5341"></a></h2>
<p>The following attributes are used for the server handle.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
The following event handle attributes are also available for the server handle:
<ul>
<li>
<p><a href="#CHDEBDDA">"OCI_ATTR_DBDOMAIN"</a></p>
</li>
<li>
<p><a href="#CHDDIFAH">"OCI_ATTR_DBNAME"</a></p>
</li>
<li>
<p><a href="#CHDGJBFB">"OCI_ATTR_INSTNAME"</a></p>
</li>
<li>
<p><a href="#BAJECGAJ">"OCI_ATTR_INSTSTARTTIME"</a></p>
</li>
<li>
<p><a href="#BAJJGGCJ">"OCI_ATTR_SERVICENAME"</a></p>
</li>
</ul>
</div>
<p class="subhead1"><a id="CHDBBEEC"></a><a id="LNOCI17795"></a><a id="sthref5342"></a>OCI_ATTR_ACCESS_BANNER</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ</p>
</dd>
<dt>Description</dt>
<dd>
<p>Displays an unauthorized access banner from a file.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p>oratext **</p>
</dd>
</dl>
<p class="subhead1"><a id="sthref5343"></a><a id="sthref5344"></a>OCI_ATTR_BREAK_ON_NET_TIMEOUT</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ/WRITE</p>
</dd>
<dt>Description</dt>
<dd>
<p>This attribute determines whether OCI sends a break after a network time out or not.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p>ub1 *</p>
</dd>
</dl>
<p class="subhead1"><a id="LNOCI17796"></a><a id="sthref5345"></a>OCI_ATTR_ENV</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ</p>
</dd>
<dt>Description</dt>
<dd>
<p>Returns the environment context associated with the server context.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>OCIEnv **</code></p>
</dd>
</dl>
<p class="subhead1"><a id="LNOCI17797"></a><a id="sthref5346"></a>OCI_ATTR_EXTERNAL_NAME</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ/WRITE</p>
</dd>
<dt>Description</dt>
<dd>
<p>The external name is the user-friendly global name stored in <code>sys.props$.value$,</code> where <code>name = 'GLOBAL_DB_NAME'</code>. It is not guaranteed to be unique unless all databases register their names with a network directory service.</p>
<p>Database names can be exchanged with the server for distributed transaction coordination. Server database names can only be accessed only if the database is open at the time the <code>OCISessionBegin()</code> call is issued.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>oratext **</code>/ <code>oratext *</code></p>
</dd>
</dl>
<p class="subhead1"><a id="LNOCI17798"></a>OCI_ATTR_FOCBK<a id="sthref5347"></a></p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ/WRITE</p>
</dd>
<dt>Description</dt>
<dd>
<p>Sets the failover callback to the callback definition structure of type <code>OCIFocbkStruct</code> as part of failover callback registration and unregistration on the server context handle.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="oci09adv.htm#i449791">"Transparent Application Failover in OCI"</a></div>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>OCIFocbkStruct *</code></p>
</dd>
</dl>
<p class="subhead1"><a id="LNOCI17799"></a><a id="sthref5348"></a>OCI_ATTR_INTERNAL_NAME</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ/WRITE</p>
</dd>
<dt>Description</dt>
<dd>
<p>Sets the client database name that is recorded when performing global transactions. The DBA can use the name to track transactions that may be pending in a prepared state due to failures.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>oratext **</code> / <code>oratext *</code></p>
</dd>
</dl>
<p class="subhead1"><a id="LNOCI17800"></a>OCI_ATTR_IN_V8_MODE<a id="sthref5349"></a></p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ</p>
</dd>
<dt>Description</dt>
<dd>
<p>Allows you to determine whether an application has switched to Oracle release 7 mode (for example, through an <code>OCISvcCtxToLda()</code> call). A nonzero (<code>TRUE</code>) return value indicates that the application is currently running in Oracle release 8 mode, a zero (<code>FALSE</code>) return value indicates that the application is currently running in Oracle release 7 mode.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>ub1 *</code></p>
</dd>
</dl>
<p class="subhead1"><a id="i451198"></a><a id="LNOCI17801"></a><a id="sthref5350"></a>OCI_ATTR_NONBLOCKING_MODE</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ/WRITE</p>
</dd>
</dl>
<dl>
<dt>Description</dt>
<dd>
<p>This attribute determines the blocking mode. When read, the attribute value returns <code>TRUE</code> if the server context is in nonblocking mode. When set, it toggles the nonblocking mode attribute. You must set this attribute only after <code>OCISessionBegin()</code> or <code>OCILogon2()</code> has been called. Otherwise, an error is returned.</p>
</dd>
</dl>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="oci02bas.htm#CHDDFAHG">"Nonblocking Mode in OCI"</a></div>
<dl>
<dt>Attribute Data Type</dt>
<dd>
<p>ub1 */ub1</p>
</dd>
</dl>
<p class="subhead1"><a id="i448138"></a><a id="LNOCI17802"></a>OCI_ATTR_SERVER_GROUP<a id="sthref5351"></a></p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ/WRITE</p>
</dd>
<dt>Description</dt>
<dd>
<p>An alphanumeric string not exceeding 30 characters specifying the server group. This attribute can only be set <span class="italic">after</span> calling <code>OCIServerAttach()</code>.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="oci08sca.htm#i422789">"Password and Session Management"</a></div>
</dd>
</dl>
<dl>
<dt>Attribute Data Type</dt>
<dd>
<p><code>oratext **/oratext *</code></p>
</dd>
</dl>
<p class="subhead1"><a id="i457363"></a><a id="LNOCI17803"></a>OCI_ATTR_SERVER_STATUS<a id="sthref5352"></a></p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ</p>
</dd>
<dt>Description</dt>
<dd>
<p>Returns the current status of the server handle. Values are:</p>
</dd>
</dl>
<ul>
<li>
<p><code>OCI_SERVER_NORMAL</code> - There is an active connection to the server. The last call on the connection went through. There is no guarantee that the next call will go through.</p>
</li>
<li>
<p><code>OCI_SERVER_NOT_CONNECTED</code> - There is no connection to the server.</p>
</li>
</ul>
<dl>
<dt>Attribute Data Type</dt>
<dd>
<p>ub4 *</p>
</dd>
<dt>Example</dt>
<dd>
<p>The following code sample shows how this parameter is used:</p>
<pre>
ub4 serverStatus = 0
OCIAttrGet((void *)srvhp, OCI_HTYPE_SERVER,
        (void *)&amp;serverStatus, (ub4 *)0, OCI_ATTR_SERVER_STATUS, errhp);
if (serverStatus == OCI_SERVER_NORMAL)
        printf("Connection is up.\n");
else if (serverStatus == OCI_SERVER_NOT_CONNECTED)
        printf("Connection is down.\n");
</pre></dd>
</dl>
<p class="subhead1"><a id="LNOCI17804"></a>OCI_ATTR_TAF_ENABLED<a id="sthref5353"></a></p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ</p>
</dd>
<dt>Description</dt>
<dd>
<p>Set to <code>TRUE</code> if the server handle is TAF-enabled and <code>FALSE</code> if not.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="oci09adv.htm#CJGBJIAB">"Custom Pooling: Tagged Server Handles"</a></div>
</dd>
</dl>
<dl>
<dt>Attribute Data Type</dt>
<dd>
<p>boolean *</p>
</dd>
</dl>
<p class="subhead1"><a id="LNOCI17805"></a>OCI_ATTR_USER_MEMORY<a id="sthref5354"></a></p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ</p>
</dd>
<dt>Description</dt>
<dd>
<p>If the handle was allocated with extra memory, this attribute returns a pointer to the user memory. A <code>NULL</code> pointer is returned for those handles not allocated with extra memory.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="oci09adv.htm#CJGBJIAB">"Custom Pooling: Tagged Server Handles"</a></div>
</dd>
</dl>
<dl>
<dt>Attribute Data Type</dt>
<dd>
<p>void *</p>
</dd>
</dl>
<a id="i456800"></a>
<div id="LNOCI17808" class="sect2">
<h3 class="sect2">Authentication Information Handle</h3>
<p>These attributes also apply to the user session handle.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#i428844">"User Session Handle Attributes"</a></div>
</div>
<!-- class="sect2" -->
<a id="i428844"></a>
<div id="LNOCI17809" class="sect2">
<h3 class="sect2"><a id="sthref5355"></a><a id="sthref5356"></a><a id="sthref5357"></a>User Session Handle Attributes</h3>
<p><a id="sthref5358"></a><a id="sthref5359"></a>These attributes also apply to the authentication information handle.</p>
<p class="subhead1"><a id="LNOCI18359"></a><a id="sthref5360"></a>OCI_ATTR_ACTION</p>
<dl>
<dt>Mode</dt>
<dd>
<p>WRITE</p>
</dd>
<dt>Description</dt>
<dd>
<p>The name of the current action within the current module. Can be set to <code>NULL</code>. When the current action terminates, set this attribute again with the name of the next action, or <code>NULL</code> if there is no next action. Can be up to 32 bytes long.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>oratext *</code></p>
</dd>
<dt>Example</dt>
<dd>
<pre>
OCIAttrSet(session, OCI_HTYPE_SESSION,(void *)"insert into employees",
           (ub4)strlen("insert into employees"), OCI_ATTR_ACTION, error_handle);
</pre></dd>
</dl>
<p class="subhead1"><a id="LNOCI18360"></a><a id="sthref5361"></a>OCI_ATTR_APPCTX_ATTR</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
This attribute is not supported with database resident connection pooling.</div>
<dl>
<dt>Mode</dt>
<dd>
<p>WRITE</p>
</dd>
<dt>Description</dt>
<dd>
<p>Specifies an attribute name of the externally initialized context.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>oratext *</code></p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="oci08sca.htm#CIABCJIH">"Session Handle Attributes Used to Set an Externally Initialized Context"</a></div>
</dd>
</dl>
<p class="subhead1"><a id="LNOCI18361"></a><a id="sthref5362"></a>OCI_ATTR_APPCTX_LIST</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
This attribute is not supported with database resident connection pooling.</div>
<dl>
<dt>Mode</dt>
<dd>
<p>READ</p>
</dd>
<dt>Description</dt>
<dd>
<p>Gets the application context list descriptor for the session.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>OCIParam **</code></p>
</dd>
</dl>
<p class="subhead1"><a id="LNOCI18362"></a><a id="sthref5363"></a>OCI_ATTR_APPCTX_NAME</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
This attribute is not supported with database resident connection pooling.</div>
<dl>
<dt>Mode</dt>
<dd>
<p>WRITE</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="oci08sca.htm#CIABCJIH">"Session Handle Attributes Used to Set an Externally Initialized Context"</a></div>
</dd>
<dt>Description</dt>
<dd>
<p>Specifies the namespace of the externally initialized context.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>oratext *</code></p>
</dd>
</dl>
<p class="subhead1"><a id="LNOCI18363"></a><a id="sthref5364"></a>OCI_ATTR_APPCTX_SIZE</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
This attribute is not supported with database resident connection pooling.</div>
<dl>
<dt>Mode</dt>
<dd>
<p>WRITE</p>
</dd>
<dt>Description</dt>
<dd>
<p>Initializes the externally initialized context array size with the number of attributes.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>ub4</code></p>
</dd>
</dl>
<p class="subhead1"><a id="LNOCI18364"></a><a id="sthref5365"></a>OCI_ATTR_APPCTX_VALUE</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
This attribute is not supported with database resident connection pooling.</div>
<dl>
<dt>Mode</dt>
<dd>
<p>WRITE</p>
</dd>
<dt>Description</dt>
<dd>
<p>Specifies a value of the externally initialized context.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>oratext *</code></p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="oci08sca.htm#CIABCJIH">"Session Handle Attributes Used to Set an Externally Initialized Context"</a></div>
</dd>
</dl>
<p class="subhead1"><a id="BAJIFFFE"></a><a id="LNOCI18365"></a><a id="sthref5366"></a>OCI_ATTR_AUDIT_BANNER</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ</p>
</dd>
<dt>Description</dt>
<dd>
<p>Display a user actions auditing banner from a file.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p>oratext **</p>
</dd>
</dl>
<p class="subhead1"><a id="LNOCI18366"></a><a id="sthref5367"></a>OCI_ATTR_CALL_TIME</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ</p>
</dd>
<dt>Description</dt>
<dd>
<p>Returns the server-side time for the preceding call in microseconds.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>ub8 *</code></p>
</dd>
</dl>
<p class="subhead1"><a id="LNOCI18367"></a><a id="sthref5368"></a>OCI_ATTR_CERTIFICATE</p>
<dl>
<dt>Mode</dt>
<dd>
<p>WRITE</p>
</dd>
<dt>Description</dt>
<dd>
<p>Specifies the certificate of the client for use in proxy authentication. Certificate-based proxy authentication using <code>OCI_ATTR_CERTIFICATE</code> will not be supported in future Oracle Database releases. Use <code>OCI_ATTR_DISTINGUISHED_NAME</code> or <code>OCI_ATTR_USERNAME</code> attribute instead.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>ub1 *</code></p>
</dd>
</dl>
<p class="subhead1"><a id="LNOCI18368"></a><a id="sthref5369"></a>OCI_ATTR_CLIENT_IDENTIFIER</p>
<dl>
<dt>Mode</dt>
<dd>
<p>WRITE</p>
</dd>
<dt>Description</dt>
<dd>
<p>Specifies the user identifier in the session handle. Can be up to 64 bytes long. It can contain the user name, but do not include the password for security reasons. The first character of the identifier should not be ':'. If it is, the behavior is unspecified.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>oratext *</code></p>
</dd>
<dt>Example</dt>
<dd>
<pre>
OCIAttrSet(session, OCI_HTYPE_SESSION,(void *)"janedoe",
            (ub4)strlen("janedoe"), OCI_ATTR_CLIENT_IDENTIFIER,
            error_handle);
</pre></dd>
</dl>
<p class="subhead1"><a id="LNOCI18369"></a><a id="sthref5370"></a>OCI_ATTR_CLIENT_INFO</p>
<dl>
<dt>Mode</dt>
<dd>
<p>WRITE</p>
</dd>
<dt>Description</dt>
<dd>
<p>Client application additional information. Can also be set by the DBMS_APPLICATION_INFO package. It is stored in the V$SESSION view. Can be up to 64 bytes long.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>oratext *</code></p>
</dd>
</dl>
<p class="subhead1"><a id="LNOCI18370"></a><a id="sthref5371"></a>OCI_ATTR_COLLECT_CALL_TIME</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ/WRITE</p>
</dd>
<dt>Description</dt>
<dd>
<p>When set to <code>TRUE</code>, causes the server to measure call time, in milliseconds, for each subsequent OCI call.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p>boolean */boolean</p>
</dd>
</dl>
<p class="subhead1"><a id="LNOCI18371"></a><a id="sthref5372"></a>OCI_ATTR_CONNECTION_CLASS</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ/WRITE</p>
</dd>
<dt>Description</dt>
<dd>
<p>This attribute of <code>OCIAuthInfo</code> handle explicitly names the connection class (a string of up to 128 characters) for a database resident connection pool.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p>oratext **/oratext *</p>
</dd>
</dl>
<p class="subhead1"><a id="LNOCI18372"></a><a id="sthref5373"></a>OCI_ATTR_CURRENT_SCHEMA</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ/WRITE</p>
</dd>
<dt>Description</dt>
<dd>
<p>Calling <code>OCIAttrSet()</code> with this attribute has the same effect as the SQL command <code>ALTER</code> <code>SESSION</code> <code>SET</code> <code>CURRENT_SCHEMA</code>, if the schema name and the session exist. The schema is altered on the next OCI call that does a round-trip to the server, avoiding an extra round-trip. If the new schema name does not exist, the same error is returned as the error returned from <code>ALTER</code> <code>SESSION</code> <code>SET</code> <code>CURRENT_SCHEMA</code>. The new schema name is placed before database objects in DML or DDL commands that you then enter.</p>
<p>When a client using this attribute communicates with a server that has a software release earlier than Oracle Database 10<span class="italic">g</span> Release 2, the <code>OCIAttrSet()</code> call is ignored. This attribute is also readable by <code>OCIAttrGet()</code>.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p>oratext */oratext *</p>
</dd>
<dt>Example</dt>
<dd>
<pre>
text schema[] = "hr";
err = OCIAttrSet( (void ) mysessp, OCI_HTYPE_SESSION, (void *)schema,
      (ub4)strlen( (char *)schema), OCI_ATTR_CURRENT_SCHEMA, (OCIError *)myerrhp);
</pre></dd>
</dl>
<p class="subhead1"><a id="BAJJDCII"></a><a id="LNOCI18373"></a><a id="sthref5374"></a>OCI_ATTR_DEFAULT_LOBPREFETCH_SIZE</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ/WRITE</p>
</dd>
<dt>Description</dt>
<dd>
<p>Allows the user to enable prefetching for all the LOB locators fetched in the session. Specifies the default prefetch buffer size for each LOB locator.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>ub4 *</code><code>/ub4</code></p>
</dd>
</dl>
<p class="subhead1"><a id="LNOCI18374"></a><a id="sthref5375"></a>OCI_ATTR_DISTINGUISHED_NAME</p>
<dl>
<dt>Mode</dt>
<dd>
<p>WRITE</p>
</dd>
<dt>Description</dt>
<dd>
<p>Specifies distinguished name of the client for use in proxy authentication.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>oratext *</code></p>
</dd>
</dl>
<p class="subhead1"><a id="BAJJBDBF"></a><a id="LNOCI18375"></a><a id="sthref5376"></a><a id="sthref5377"></a>OCI_ATTR_DRIVER_NAME</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ/WRITE</p>
</dd>
<dt>Description</dt>
<dd>
<p>Specifies the name of the driver layer using OCI, such as JDBC, ODBC, PHP, SQL*Plus, and so on. Names starting with "ORA$" are reserved also. A future application can choose its own name and set it as an aid to fault diagnosability. Set this attribute before executing <code>OCISessionBegin()</code>. Pass an array containing up to 9 single-byte characters, including the null terminator. This data is not validated and is passed directly to the server to be displayed in a <code>V$SESSION_CONNECT_INFO</code> or <code>GV$SESSION_CONNECT_INFO</code> view. OCI only ensures that the driver name array is not greater than 30 characters. If more than 9 characters are passed, only the first 8 characters are displayed.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>oratext **/oratext *</code></p>
</dd>
<dt>Example</dt>
<dd>
<pre>
...
oratext client_driver[9];
...
checkerr(errhp, OCIAttrSet(authp, OCI_HTYPE_SESSION,
                client_driver, (ub4)(strlen(client_driver)),
                OCI_ATTR_DRIVER_NAME, errhp));

checkerr(errhp, OCISessionBegin(svchp, errhp, authp, OCI_CRED_RDBMS, OCI_DEFAULT);
... 
</pre></dd>
</dl>
<p class="subhead1"><a id="BAJHBAFA"></a><a id="LNOCI18376"></a><a id="sthref5378"></a>OCI_ATTR_EDITION</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ/WRITE</p>
</dd>
<dt>Description</dt>
<dd>
<p>Specifies the edition to be used for this session. If a value for this attribute has not been set explicitly, the value in the environment variable <code>ORA_EDITION</code> is returned.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p>oratext *</p>
</dd>
</dl>
<p class="subhead1"><a id="LNOCI18377"></a><a id="sthref5379"></a>OCI_ATTR_INITIAL_CLIENT_ROLES</p>
<dl>
<dt>Mode</dt>
<dd>
<p>WRITE</p>
</dd>
<dt>Description</dt>
<dd>
<p>Specifies the role or roles that the client is to initially possess when the application server connects to an Oracle database on its behalf.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>oratext **</code></p>
</dd>
</dl>
<p class="subhead1"><a id="LNOCI18378"></a><a id="sthref5380"></a>OCI_ATTR_MIGSESSION</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ/WRITE</p>
</dd>
<dt>Description</dt>
<dd>
<p>Specifies the session identified for the session handle. Allows you to clone a session from one environment to another, in the same process or between processes. These processes can be on the same system or different systems. For a session to be cloned, the session must be authenticated as migratable.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="oci08sca.htm#i422789">"Password and Session Management"</a></div>
</dd>
</dl>
<dl>
<dt>Attribute Data Type</dt>
<dd>
<p><code>ub1 *</code></p>
</dd>
<dt>Example</dt>
<dd>
<p>The following code sample shows how this attribute is used:</p>
<pre>
OCIAttrSet ((void *) authp, (ub4)OCI_HTYPE_SESSION, (void *) mig_session,
            (ub4) sz, (ub4)OCI_ATTR_MIGSESSION, errhp);
</pre></dd>
</dl>
<p class="subhead1"><a id="LNOCI18379"></a><a id="sthref5381"></a>OCI_ATTR_MODULE</p>
<dl>
<dt>Mode</dt>
<dd>
<p>WRITE</p>
</dd>
<dt>Description</dt>
<dd>
<p>The name of the current module running in the client application. When the current module terminates, call with the name of the new module, or use <code>NULL</code> if there is no new module. Can be up to 48 bytes long.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>oratext *</code></p>
</dd>
<dt>Example</dt>
<dd>
<pre>
OCIAttrSet(session, OCI_HTYPE_SESSION,(void *)"add_employee",
           (ub4)strlen("add_employee"), OCI_ATTR_MODULE, error_handle); 
</pre></dd>
</dl>
<p class="subhead1"><a id="LNOCI18380"></a><a id="sthref5382"></a>OCI_ATTR_PASSWORD</p>
<dl>
<dt>Mode</dt>
<dd>
<p>WRITE</p>
</dd>
<dt>Description</dt>
<dd>
<p>Specifies a password to use for authentication.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>oratext *</code></p>
</dd>
</dl>
<p class="subhead1"><a id="BAJFJCJG"></a><a id="LNOCI18381"></a><a id="sthref5383"></a>OCI_ATTR_PROXY_CLIENT</p>
<dl>
<dt>Mode</dt>
<dd>
<p>WRITE</p>
</dd>
<dt>Description</dt>
<dd>
<p>Specifies the target user name for access through a proxy.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>oratext *</code></p>
</dd>
</dl>
<p class="subhead1"><a id="LNOCI18382"></a><a id="sthref5384"></a>OCI_ATTR_PROXY_CREDENTIALS</p>
<dl>
<dt>Mode</dt>
<dd>
<p>WRITE</p>
</dd>
<dt>Description</dt>
<dd>
<p>Specifies that the credentials of the application server are to be used for proxy authentication.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>OCISession</code></p>
</dd>
</dl>
<p class="subhead1"><a id="LNOCI18383"></a><a id="sthref5385"></a>OCI_ATTR_PURITY</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ/WRITE</p>
</dd>
<dt>Description</dt>
<dd>
<p>An attribute of the <code>OCIAuthInfo</code> handle for database resident connection pooling. Values are <code>OCI_ATTR_PURITY_NEW</code>, the application requires a session not tainted with any prior session state; or <code>OCI_ATTR_PURITY_SELF</code>, the session can have been used before. If the application does not specify the purity when invoking <code>OCISessionGet()</code>, the purity value <code><a id="sthref5386"></a>OCI_ATTR_PURITY_DEFAULT</code> is assumed. This later translates to either <code>OCI_ATTR_PURITY_NEW</code> or <code>OCI_ATTR_PURITY_SELF</code> depending on the type of application.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p>ub4 */ub4</p>
</dd>
</dl>
<p class="subhead1"><a id="BAJEIIAB"></a><a id="LNOCI18384"></a><a id="sthref5387"></a>OCI_ATTR_SESSION_STATE</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ/WRITE</p>
</dd>
<dt>Description</dt>
<dd>
<p>Specifies the current state of the database session. Set to <code>OCI_SESSION_STATEFUL</code> if the session is required to perf rm a database task. If the application is no longer dependent on the current session for subsequent database activity, set to <code>OCI_SESSION_STATELESS</code>.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="oci09adv.htm#CJGHFDFA">"Marking Sessions Explicitly as Stateful or Stateless"</a> for more information and an example using <code>OCI_ATTR_SESSION_STATE</code></div>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p>ub1 *</p>
</dd>
</dl>
<p class="subhead1"><a id="LNOCI18385"></a><a id="sthref5388"></a>OCI_ATTR_TRANSACTION_IN_PROGRESS</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ</p>
</dd>
<dt>Description</dt>
<dd>
<p>If <code>TRUE</code>, then the referenced session has a currently active transaction.</p>
<p>If <code>FALSE</code>, then the referenced session does not have a currently active transaction.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>boolean *</code></p>
</dd>
<dt>Example</dt>
<dd>
<pre>
{  boolean txnInProgress; 

  OCIAttrGet(usrhp, OCI_HTYPE_SESSION,
             &amp;txnInProgress, (ub4 *)0,
             OCI_ATTR_TRANSACTION_IN_PROGRESS,
             errhp);
}
</pre></dd>
</dl>
<p class="subhead1"><a id="LNOCI18386"></a><a id="sthref5389"></a>OCI_ATTR_USERNAME</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ/WRITE</p>
</dd>
<dt>Description</dt>
<dd>
<p>Specifies a user name to use for authentication.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>oratext **/oratext *</code></p>
</dd>
</dl>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="BAJCBGAG"></a>
<div id="LNOCI17835" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1"><a id="sthref5390"></a><a id="sthref5391"></a><a id="sthref5392"></a>Administration Handle Attributes</h2>
<p>The following attributes are used for the administration handle.</p>
<p class="subhead1"><a id="LNOCI17836"></a><a id="sthref5393"></a>OCI_ATTR_ADMIN_PFILE</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ/WRITE</p>
</dd>
<dt>Description</dt>
<dd>
<p>Set this attribute before a call to <code>OCIDBStartup()</code> to specify the location of the client-side parameter file that is used to start the database. If this attribute is not set, then the server-side parameter file is used. If the server-side parameter file does not exist, an error is returned.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>oratext */oratext *</code></p>
</dd>
</dl>
</div>
<!-- class="sect1" -->
<a id="i450511"></a>
<div id="LNOCI17837" class="sect1">
<h2 class="sect1">Connection <a id="sthref5394"></a><a id="sthref5395"></a>Pool Handle Attributes</h2>
<p>The following attributes<a id="sthref5396"></a> are used for the connection pool handle.</p>
<p class="subhead1"><a id="CACFEFEB"></a><a id="LNOCI17838"></a><a id="sthref5397"></a>OCI_ATTR_CONN_TIMEOUT</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
Shrinkage of the pool only occurs when there is a network round-trip. If there are no operations, then the connections remain active.</div>
<dl>
<dt>Mode</dt>
<dd>
<p>READ/WRITE</p>
</dd>
<dt>Description</dt>
<dd>
<p>Connections idle for more than this time value (in seconds) are terminated to maintain an optimum number of open connections. This attribute can be set dynamically. If this attribute is not set, the connections are never timed out.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>ub4 */ub4</code></p>
</dd>
</dl>
<p class="subhead1"><a id="LNOCI17839"></a><a id="sthref5398"></a>OCI_ATTR_CONN_NOWAIT</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ/WRITE</p>
</dd>
<dt>Description</dt>
<dd>
<p>This attribute determines if retrial for a connection must be performed when all connections in the pool are found to be busy and the number of connections has reached the maximum.</p>
<p>If this attribute is set, an error is thrown when all the connections are busy and no more connections can be opened. Otherwise, the call waits until it gets a connection.</p>
<p>When read, the attribute value is returned as <code>TRUE</code> if it has been set.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>ub1 */ub1</code></p>
</dd>
</dl>
<p class="subhead1"><a id="LNOCI17840"></a><a id="sthref5399"></a>OCI_ATTR_CONN_BUSY_COUNT</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ</p>
</dd>
<dt>Description</dt>
<dd>
<p>Returns the number of busy connections.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>ub4 *</code></p>
</dd>
</dl>
<p class="subhead1"><a id="LNOCI17841"></a><a id="sthref5400"></a>OCI_ATTR_CONN_OPEN_COUNT</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ</p>
</dd>
<dt>Description</dt>
<dd>
<p>Returns the number of open connections.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>ub4 *</code></p>
</dd>
</dl>
<p class="subhead1"><a id="LNOCI17842"></a><a id="sthref5401"></a>OCI_ATTR_CONN_MIN</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ</p>
</dd>
<dt>Description</dt>
<dd>
<p>Returns the number of minimum connections.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>ub4 *</code></p>
</dd>
</dl>
<p class="subhead1"><a id="LNOCI17843"></a><a id="sthref5402"></a>OCI_ATTR_CONN_MAX</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ</p>
</dd>
<dt>Description</dt>
<dd>
<p>Returns the number of maximum connections.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>ub4 *</code></p>
</dd>
</dl>
<p class="subhead1"><a id="LNOCI17844"></a><a id="sthref5403"></a>OCI_ATTR_CONN_INCR</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ</p>
</dd>
<dt>Description</dt>
<dd>
<p>Returns the connection increment parameter.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>ub4 *</code></p>
</dd>
</dl>
</div>
<!-- class="sect1" -->
<a id="i455080"></a>
<div id="LNOCI17845" class="sect1">
<h2 class="sect1"><a id="sthref5404"></a><a id="sthref5405"></a>Session Pool Handle Attributes</h2>
<p>The following attributes are used for the session pool handle.</p>
<p class="subhead1"><a id="LNOCI17846"></a><a id="sthref5406"></a>OCI_ATTR_SPOOL_BUSY_COUNT</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ</p>
</dd>
<dt>Description</dt>
<dd>
<p>Returns the number of busy sessions.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p>ub4 *</p>
</dd>
</dl>
<p class="subhead1"><a id="LNOCI17847"></a><a id="sthref5407"></a>OCI_ATTR_SPOOL_GETMODE</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ/WRITE</p>
</dd>
<dt>Description</dt>
<dd>
<p>This attribute determines the behavior of the session pool when all sessions in the pool are found to be busy and the number of sessions has reached the maximum. Values are:</p>
</dd>
</dl>
<ul>
<li>
<p><code>OCI_SPOOL_ATTRVAL_WAIT</code> - The thread waits and blocks until a session is freed. This is the default value.</p>
</li>
<li>
<p><code>OCI_SPOOL_ATTRVAL_NOWAIT</code> - An error is returned.</p>
</li>
<li>
<p><code>OCI_SPOOL_ATTRVAL_FORCEGET</code> - A new session is created even though all the sessions are busy and the maximum number of sessions has been reached. <code>OCISessionGet()</code> returns a warning. In this case, if new sessions are created that have exceeded the maximum, <code>OCISessionGet()</code> returns a warning.</p>
<p>Note that if this value is set, it is possible that there can be an attempt to create more sessions than can be supported by the instance of the Oracle database. In this case, the server returns the following error:</p>
<pre>
ORA 00018 - Maximum number of sessions exceeded
</pre>
<p>In this case, the error is propagated to the session pool user.</p>
<p>When read, the appropriate attribute value is returned.</p>
</li>
</ul>
<dl>
<dt>Attribute Data Type</dt>
<dd>
<p>ub1 */ ub1</p>
</dd>
</dl>
<p class="subhead1"><a id="LNOCI17848"></a><a id="sthref5408"></a>OCI_ATTR_SPOOL_INCR</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ</p>
</dd>
<dt>Description</dt>
<dd>
<p>Returns the session increment parameter.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p>ub4 *</p>
</dd>
</dl>
<p class="subhead1"><a id="LNOCI17849"></a><a id="sthref5409"></a>OCI_ATTR_SPOOL_MAX</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ</p>
</dd>
<dt>Description</dt>
<dd>
<p>Returns the number of maximum sessions.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p>ub4 *</p>
</dd>
</dl>
<p class="subhead1"><a id="LNOCI17850"></a><a id="sthref5410"></a>OCI_ATTR_SPOOL_MIN</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ</p>
</dd>
<dt>Description</dt>
<dd>
<p>Returns the number of minimum sessions.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p>ub4 *</p>
</dd>
</dl>
<p class="subhead1"><a id="LNOCI17851"></a><a id="sthref5411"></a>OCI_ATTR_SPOOL_OPEN_COUNT</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ</p>
</dd>
<dt>Description</dt>
<dd>
<p>Returns the number of open sessions.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p>ub4 *</p>
</dd>
</dl>
<p class="subhead1"><a id="LNOCI18387"></a><a id="sthref5412"></a>OCI_ATTR_SPOOL_AUTH</p>
<dl>
<dt>Mode</dt>
<dd>
<p>WRITE</p>
</dd>
<dt>Description</dt>
<dd>
<p>To make pre-session creation attributes effective on the sessions being retrieved from the session pool, this attribute can be set on the session pool handle. Currently only the following attributes can be set on this <code>OCIAuthInfo</code> handle:</p>
<p><code>OCI_ATTR_DRIVER_NAME</code></p>
<p><code>OCI_ATTR_EDITION</code></p>
<p>If any other attributes are set on the <code>OCIAuthInfo</code> handle and the <code>OCIAuthInfo</code> handle is set on the session pool handle, an error results.Moreover, the <code>OCIAuthInfo</code> handle should be set on the session pool handle only before calling <code>OCISessionPoolCreate()</code> with the session pool handle. Setting it after <code>OCISessionPoolCreate()</code> results in an error.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p>OCIAuthInfo *</p>
</dd>
</dl>
<p class="subhead1"><a id="i456080"></a><a id="LNOCI17854"></a><a id="sthref5413"></a>OCI_ATTR_SPOOL_STMTCACHESIZE</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ/WRITE</p>
</dd>
<dt>Description</dt>
<dd>
<p>Sets the default statement cache size to this value for each of the sessions in a session pool. The statement cache size for a particular session in the pool can, at any time, be overridden by using <code>OCI_ATTR_STMTCACHESIZE</code> on that session.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="oci09adv.htm#i471377">"Statement Caching in OCI"</a></div>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>ub4 *</code>/ <code>ub4</code></p>
</dd>
</dl>
<p class="subhead1"><a id="LNOCI17853"></a><a id="sthref5414"></a>OCI_ATTR_SPOOL_TIMEOUT</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ/WRITE</p>
</dd>
<dt>Description</dt>
<dd>
<p>The sessions idle for more than this time (in seconds) are terminated periodically to maintain an optimum number of open sessions. This attribute can be set dynamically. If this attribute is not set, the least recently used sessions may be timed out if and when space in the pool is required. OCI only checks for timed out sessions when it releases one back to the pool.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p>ub4 */ ub4</p>
</dd>
</dl>
</div>
<!-- class="sect1" -->
<a id="i455274"></a>
<div id="LNOCI17855" class="sect1">
<h2 class="sect1"><a id="sthref5415"></a><a id="sthref5416"></a><a id="sthref5417"></a>Transaction Handle Attributes</h2>
<p>The following attributes are used for the transaction handle.</p>
<p class="subhead1"><a id="LNOCI17856"></a><a id="sthref5418"></a>OCI_ATTR_TRANS_NAME</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ/WRITE</p>
</dd>
<dt>Description</dt>
<dd>
<p>Can be used to establish or read a text string that identifies a transaction. This is an alternative to using the XID to identify the transaction. The oratext string can be up to 64 bytes long.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>oratext **</code> (READ) / <code>oratext *</code> (WRITE)</p>
</dd>
</dl>
<p class="subhead1"><a id="LNOCI17857"></a><a id="sthref5419"></a>OCI_ATTR_TRANS_TIMEOUT</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ/WRITE</p>
</dd>
<dt>Description</dt>
<dd>
<p>Can set or read a timeout interval value used at prepare time.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>ub4 *</code> (READ) / <code>ub4</code> (WRITE)</p>
</dd>
</dl>
<p class="subhead1"><a id="LNOCI17858"></a>OCI_ATTR_XID<a id="sthref5420"></a></p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ/WRITE</p>
</dd>
<dt>Description</dt>
<dd>
<p>Can set or read an XID that identifies a transaction.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>XID **</code> (READ) / <code>XID *</code> (WRITE)</p>
</dd>
</dl>
</div>
<!-- class="sect1" -->
<a id="i428664"></a>
<div id="LNOCI17859" class="sect1">
<h2 class="sect1">Statement Handle Attributes <a id="sthref5421"></a><a id="sthref5422"></a><a id="sthref5423"></a></h2>
<p>The following attributes are used for the statement handle.</p>
<p class="subhead1"><a id="LNOCI17860"></a><a id="sthref5424"></a>OCI_ATTR_BIND_COUNT</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ</p>
</dd>
<dt>Description</dt>
<dd>
<p>Returns the number of bind positions on the statement handle.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p>ub4 *</p>
</dd>
<dt>Example</dt>
<dd>
<pre>
OCIHandleAlloc(env,(void **) &amp;pStatement, OCI_HTYPE_STMT, (size_t)0, (void **)0);
OCIStmtPrepare (pStatement, err, pszQuery, (ub4)strlen(pszQuery),
                (ub4)OCI_NTV_SYNTAX, (ub4)OCI_DEFAULT); 
OCIAttrGet(pStatement, OCI_HTYPE_STMT, &amp;iNbParameters, NULL, OCI_ATTR_BIND_COUNT,
           err); 
</pre></dd>
</dl>
<p class="subhead1"><a id="CHDEDAEA"></a><a id="LNOCI17861"></a><a id="sthref5425"></a>OCI_ATTR_CHNF_REGHANDLE</p>
<dl>
<dt>Mode</dt>
<dd>
<p>WRITE</p>
</dd>
<dt>Description</dt>
<dd>
<p>When this attribute is set to the appropriate subscription handle, execution of the query also creates the registration of the query for continuous query notification.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>OCISubscription *</code></p>
</dd>
<dt>Example</dt>
<dd>
<pre>
/* Associate the statement with the subscription handle */
OCIAttrSet (stmthp, OCI_HTYPE_STMT, subscrhp, 0,
            OCI_ATTR_CHNF_REGHANDLE, errhp); 
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#BAJHGABI">"Continuous Query Notification Attributes"</a></div>
</dd>
</dl>
<p class="subhead1"><a id="CHDFHDBF"></a><a id="LNOCI17862"></a><a id="sthref5426"></a>OCI_ATTR_CQ_QUERYID</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ</p>
</dd>
<dt>Description</dt>
<dd>
<p>Obtains the query ID of a registered query after registration is made by the call to <code>OCIStmtExecute()</code>.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>ub8 *</code></p>
</dd>
</dl>
<p class="subhead1"><a id="LNOCI17863"></a><a id="sthref5427"></a>OCI_ATTR_CURRENT_POSITION</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ</p>
</dd>
<dt>Description</dt>
<dd>
<p>Indicates the current position in the result set. This attribute can only be retrieved. It cannot be set.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>ub4 *</code></p>
</dd>
</dl>
<p class="subhead1"><a id="LNOCI17864"></a><a id="sthref5428"></a>OCI_ATTR_ENV</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ</p>
</dd>
<dt>Description</dt>
<dd>
<p>Indicates the current position in the result set. This attribute can only be retrieved. It cannot be set.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>ub4 *</code></p>
</dd>
</dl>
<p class="subhead1"><a id="CHDEJDEE"></a><a id="LNOCI17865"></a><a id="sthref5429"></a>OCI_ATTR_FETCH_ROWID</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ/WRITE</p>
</dd>
<dt>Description</dt>
<dd>
<p>Specifies that the <code>ROWID</code>s are fetched after doing a define at <code>position</code> 0, and a <code>SELECT...FOR UPDATE</code> statement.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p>boolean */boolean</p>
</dd>
</dl>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="oci10new.htm#CHDDIGCG">"Implicit Fetching of ROWIDs"</a></div>
<p class="subhead1"><a id="LNOCI17866"></a>OCI_ATTR_NUM_DML_ERRORS<a id="sthref5430"></a></p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ</p>
</dd>
<dt>Description</dt>
<dd>
<p>Returns the number of errors in the DML operation.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>ub4 *</code></p>
</dd>
</dl>
<p class="subhead1"><a id="LNOCI17867"></a><a id="sthref5431"></a>OCI_ATTR_PARAM_COUNT</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ</p>
</dd>
<dt>Description</dt>
<dd>
<p>Gets the number of columns in the select-list for the statement associated with the statement handle.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>ub4 *</code></p>
</dd>
</dl>
<dl>
<dt>Example</dt>
<dd>
<pre>
...
int i = 0;
ub4 parmcnt = 0;
ub2 type = 0;
OCIParam *colhd = (OCIParam *) 0;   /* column handle */

/* Describe of a select-list */ 
OraText *sqlstmt = (OraText *)"SELECT * FROM employees WHERE employee_id = 100";

checkerr(errhp, OCIStmtPrepare(stmthp, errhp, (OraText *)sqlstmt,
                    (ub4)strlen((char *)sqlstmt),
                    (ub4) OCI_NTV_SYNTAX, (ub4) OCI_DEFAULT));

checkerr(errhp, OCIStmtExecute(svchp, stmthp, errhp, 1, 0,
        (OCISnapshot *)0, (OCISnapshot *)0, OCI_DESCRIBE_ONLY));

/* Get the number of columns in the select list */
checkerr(errhp, OCIAttrGet((void *)stmthp, OCI_HTYPE_STMT, (void *)&amp;parmcnt,
                      (ub4 *)0, OCI_ATTR_PARAM_COUNT, errhp));

/* Go through the column list and retrieve the data type of each column. You
   start from pos = 1 */
for (i = 1; i &lt;= parmcnt; i++)
{
  /* Get parameter for column i */
  checkerr(errhp, OCIParamGet((void *)stmthp, OCI_HTYPE_STMT, errhp, 
           (void **)&amp;colhd, i));

  /* Get data-type of column i */
  type = 0;
  checkerr(errhp, OCIAttrGet((void *)colhd, OCI_DTYPE_PARAM,
          (void *)&amp;type, (ub4 *)0, OCI_ATTR_DATA_TYPE, errhp));

}
...
</pre></dd>
</dl>
<p class="subhead1"><a id="LNOCI17868"></a><a id="sthref5432"></a>OCI_ATTR_PARSE_ERROR_OFFSET</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ</p>
</dd>
<dt>Description</dt>
<dd>
<p>Returns the parse error offset for a statement.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>ub2 *</code></p>
</dd>
</dl>
<p class="subhead1"><a id="LNOCI17869"></a><a id="sthref5433"></a>OCI_ATTR_PREFETCH_MEMORY</p>
<dl>
<dt>Mode</dt>
<dd>
<p>WRITE</p>
</dd>
<dt>Description</dt>
<dd>
<p>Sets the memory level for top-level rows to be prefetched. Rows up to the specified top-level row count are fetched if the memory level occupies no more than the specified memory usage limit. The default value is 0, which means that memory size is not included in computing the number of rows to prefetch.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>ub4 *</code></p>
</dd>
</dl>
<p class="subhead1"><a id="LNOCI17870"></a>OCI_ATTR_PREFETCH_ROWS<a id="sthref5434"></a></p>
<dl>
<dt>Mode</dt>
<dd>
<p>WRITE</p>
</dd>
<dt>Description</dt>
<dd>
<p>Sets the number of top-level rows to be prefetched. The default value is 1 row.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>ub4 *</code></p>
</dd>
</dl>
<p class="subhead1"><a id="LNOCI17871"></a>OCI_ATTR_ROW_COUNT<a id="sthref5435"></a></p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ</p>
</dd>
<dt>Description</dt>
<dd>
<p>Returns the number of rows processed so far after <code>SELECT</code> statements. For <code>INSERT</code>, <code>UPDATE</code>, and <code>DELETE</code> statements, it is the number of rows processed by the most recent statement. The default value is 1.</p>
<p>For nonscrollable cursors, <code>OCI_ATTR_ROW_COUNT</code> is the total number of rows fetched into user buffers with the <code>OCIStmtFetch2()</code> calls issued since this statement handle was executed. Because they are forward sequential only, this also represents the highest row number seen by the application.</p>
<p>For scrollable cursors, <code>OCI_ATTR_ROW_COUNT</code> represents the maximum (absolute) row number fetched into the user buffers. Because the application can arbitrarily position the fetches, this need not be the total number of rows fetched into the user's buffers since the (scrollable) statement was executed.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>ub4 *</code></p>
</dd>
</dl>
<p class="subhead1"><a id="LNOCI17872"></a>OCI_ATTR_ROWID<a id="sthref5436"></a></p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ</p>
</dd>
<dt>Description</dt>
<dd>
<p>Returns the <code>ROWID</code> descriptor allocated with <code>OCIDescriptorAlloc()</code>.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="oci02bas.htm#i462679">"Positioned Updates and Deletes"</a> and <a href="oci03typ.htm#CEGJAJHJ">"ROWID Descriptor"</a></div>
</dd>
</dl>
<dl>
<dt>Attribute Data Type</dt>
<dd>
<p>OCIRowid *</p>
</dd>
</dl>
<p class="subhead1"><a id="LNOCI17873"></a><a id="sthref5437"></a>OCI_ATTR_ROWS_FETCHED</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ</p>
</dd>
<dt>Description</dt>
<dd>
<p>Indicates the number of rows that were successfully fetched into the user's buffers in the last fetch or execute with nonzero iterations. It can be used for both scrollable and nonscrollable statement handles.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>ub4 *</code></p>
</dd>
<dt>Example</dt>
<dd>
<pre>
ub4 rows;
ub4 sizep = sizeof(ub4);
OCIAttrGet((void *) stmhp, (ub4) OCI_HTYPE_STMT,
           (void *)&amp; rows, (ub4 *) &amp;sizep, (ub4)OCI_ATTR_ROWS_FETCHED,
           errhp);
</pre></dd>
</dl>
<p class="subhead1"><a id="BAJHAFFF"></a><a id="LNOCI251"></a><a id="sthref5438"></a>OCI_ATTR_SQLFNCODE</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ</p>
</dd>
<dt>Description</dt>
<dd>
<p>Returns the function code of the SQL command associated with the statement.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>ub2 *</code></p>
</dd>
<dt>Notes</dt>
<dd>
<p><a href="#CACEIFFF">Table A-1</a> lists the SQL command codes.</p>
</dd>
</dl>
<div id="LNOCI17874" class="tblformalwide">
<p class="titleintable"><a id="sthref5439"></a><a id="CACEIFFF"></a>Table A-1 SQL Command Codes</p>
<table class="cellalignment1011" title="SQL Command Codes" summary="This table is described in the preceding text" dir="ltr">
<thead>
<tr class="cellalignment1005">
<th class="cellalignment1012" id="r1c1-t31">Code</th>
<th class="cellalignment1012" id="r1c2-t31">SQL Function</th>
<th class="cellalignment1012" id="r1c3-t31">Code</th>
<th class="cellalignment1012" id="r1c4-t31">SQL Function</th>
<th class="cellalignment1012" id="r1c5-t31">Code</th>
<th class="cellalignment1012" id="r1c6-t31">SQL Function</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r2c1-t31" headers="r1c1-t31">
<p>01</p>
</td>
<td class="cellalignment1013" headers="r2c1-t31 r1c2-t31">
<p>CREATE TABLE</p>
</td>
<td class="cellalignment1013" headers="r2c1-t31 r1c3-t31">
<p>43</p>
</td>
<td class="cellalignment1013" headers="r2c1-t31 r1c4-t31">
<p>DROP EXTERNAL DATABASE</p>
</td>
<td class="cellalignment1013" headers="r2c1-t31 r1c5-t31">
<p>85</p>
</td>
<td class="cellalignment1013" headers="r2c1-t31 r1c6-t31">
<p>TRUNCATE TABLE</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r3c1-t31" headers="r1c1-t31">
<p>02</p>
</td>
<td class="cellalignment1013" headers="r3c1-t31 r1c2-t31">
<p>SET ROLE</p>
</td>
<td class="cellalignment1013" headers="r3c1-t31 r1c3-t31">
<p>44</p>
</td>
<td class="cellalignment1013" headers="r3c1-t31 r1c4-t31">
<p>CREATE DATABASE</p>
</td>
<td class="cellalignment1013" headers="r3c1-t31 r1c5-t31">
<p>86</p>
</td>
<td class="cellalignment1013" headers="r3c1-t31 r1c6-t31">
<p>TRUNCATE CLUSTER</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r4c1-t31" headers="r1c1-t31">
<p>03</p>
</td>
<td class="cellalignment1013" headers="r4c1-t31 r1c2-t31">
<p>INSERT</p>
</td>
<td class="cellalignment1013" headers="r4c1-t31 r1c3-t31">
<p>45</p>
</td>
<td class="cellalignment1013" headers="r4c1-t31 r1c4-t31">
<p>ALTER DATABASE</p>
</td>
<td class="cellalignment1013" headers="r4c1-t31 r1c5-t31">
<p>87</p>
</td>
<td class="cellalignment1013" headers="r4c1-t31 r1c6-t31">
<p>CREATE BITMAPFILE</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r5c1-t31" headers="r1c1-t31">
<p>04</p>
</td>
<td class="cellalignment1013" headers="r5c1-t31 r1c2-t31">
<p>SELECT</p>
</td>
<td class="cellalignment1013" headers="r5c1-t31 r1c3-t31">
<p>46</p>
</td>
<td class="cellalignment1013" headers="r5c1-t31 r1c4-t31">
<p>CREATE ROLLBACK SEGMENT</p>
</td>
<td class="cellalignment1013" headers="r5c1-t31 r1c5-t31">
<p>88</p>
</td>
<td class="cellalignment1013" headers="r5c1-t31 r1c6-t31">
<p>ALTER VIEW</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r6c1-t31" headers="r1c1-t31">
<p>05</p>
</td>
<td class="cellalignment1013" headers="r6c1-t31 r1c2-t31">
<p>UPDATE</p>
</td>
<td class="cellalignment1013" headers="r6c1-t31 r1c3-t31">
<p>47</p>
</td>
<td class="cellalignment1013" headers="r6c1-t31 r1c4-t31">
<p>ALTER ROLLBACK SEGMENT</p>
</td>
<td class="cellalignment1013" headers="r6c1-t31 r1c5-t31">
<p>89</p>
</td>
<td class="cellalignment1013" headers="r6c1-t31 r1c6-t31">
<p>DROP BITMAPFILE</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r7c1-t31" headers="r1c1-t31">
<p>06</p>
</td>
<td class="cellalignment1013" headers="r7c1-t31 r1c2-t31">
<p>DROP ROLE</p>
</td>
<td class="cellalignment1013" headers="r7c1-t31 r1c3-t31">
<p>48</p>
</td>
<td class="cellalignment1013" headers="r7c1-t31 r1c4-t31">
<p>DROP ROLLBACK SEGMENT</p>
</td>
<td class="cellalignment1013" headers="r7c1-t31 r1c5-t31">
<p>90</p>
</td>
<td class="cellalignment1013" headers="r7c1-t31 r1c6-t31">
<p>SET CONSTRAINTS</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r8c1-t31" headers="r1c1-t31">
<p>07</p>
</td>
<td class="cellalignment1013" headers="r8c1-t31 r1c2-t31">
<p>DROP VIEW</p>
</td>
<td class="cellalignment1013" headers="r8c1-t31 r1c3-t31">
<p>49</p>
</td>
<td class="cellalignment1013" headers="r8c1-t31 r1c4-t31">
<p>CREATE TABLESPACE</p>
</td>
<td class="cellalignment1013" headers="r8c1-t31 r1c5-t31">
<p>91</p>
</td>
<td class="cellalignment1013" headers="r8c1-t31 r1c6-t31">
<p>CREATE FUNCTION</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r9c1-t31" headers="r1c1-t31">
<p>08</p>
</td>
<td class="cellalignment1013" headers="r9c1-t31 r1c2-t31">
<p>DROP TABLE</p>
</td>
<td class="cellalignment1013" headers="r9c1-t31 r1c3-t31">
<p>50</p>
</td>
<td class="cellalignment1013" headers="r9c1-t31 r1c4-t31">
<p>ALTER TABLESPACE</p>
</td>
<td class="cellalignment1013" headers="r9c1-t31 r1c5-t31">
<p>92</p>
</td>
<td class="cellalignment1013" headers="r9c1-t31 r1c6-t31">
<p>ALTER FUNCTION</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r10c1-t31" headers="r1c1-t31">
<p>09</p>
</td>
<td class="cellalignment1013" headers="r10c1-t31 r1c2-t31">
<p>DELETE</p>
</td>
<td class="cellalignment1013" headers="r10c1-t31 r1c3-t31">
<p>51</p>
</td>
<td class="cellalignment1013" headers="r10c1-t31 r1c4-t31">
<p>DROP TABLESPACE</p>
</td>
<td class="cellalignment1013" headers="r10c1-t31 r1c5-t31">
<p>93</p>
</td>
<td class="cellalignment1013" headers="r10c1-t31 r1c6-t31">
<p>DROP FUNCTION</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r11c1-t31" headers="r1c1-t31">
<p>10</p>
</td>
<td class="cellalignment1013" headers="r11c1-t31 r1c2-t31">
<p>CREATE VIEW</p>
</td>
<td class="cellalignment1013" headers="r11c1-t31 r1c3-t31">
<p>52</p>
</td>
<td class="cellalignment1013" headers="r11c1-t31 r1c4-t31">
<p>ALTER SESSION</p>
</td>
<td class="cellalignment1013" headers="r11c1-t31 r1c5-t31">
<p>94</p>
</td>
<td class="cellalignment1013" headers="r11c1-t31 r1c6-t31">
<p>CREATE PACKAGE</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r12c1-t31" headers="r1c1-t31">
<p>11</p>
</td>
<td class="cellalignment1013" headers="r12c1-t31 r1c2-t31">
<p>DROP USER</p>
</td>
<td class="cellalignment1013" headers="r12c1-t31 r1c3-t31">
<p>53</p>
</td>
<td class="cellalignment1013" headers="r12c1-t31 r1c4-t31">
<p>ALTER USER</p>
</td>
<td class="cellalignment1013" headers="r12c1-t31 r1c5-t31">
<p>95</p>
</td>
<td class="cellalignment1013" headers="r12c1-t31 r1c6-t31">
<p>ALTER PACKAGE</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r13c1-t31" headers="r1c1-t31">
<p>12</p>
</td>
<td class="cellalignment1013" headers="r13c1-t31 r1c2-t31">
<p>CREATE ROLE</p>
</td>
<td class="cellalignment1013" headers="r13c1-t31 r1c3-t31">
<p>54</p>
</td>
<td class="cellalignment1013" headers="r13c1-t31 r1c4-t31">
<p>COMMIT (WORK)</p>
</td>
<td class="cellalignment1013" headers="r13c1-t31 r1c5-t31">
<p>96</p>
</td>
<td class="cellalignment1013" headers="r13c1-t31 r1c6-t31">
<p>DROP PACKAGE</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r14c1-t31" headers="r1c1-t31">
<p>13</p>
</td>
<td class="cellalignment1013" headers="r14c1-t31 r1c2-t31">
<p>CREATE SEQUENCE</p>
</td>
<td class="cellalignment1013" headers="r14c1-t31 r1c3-t31">
<p>55</p>
</td>
<td class="cellalignment1013" headers="r14c1-t31 r1c4-t31">
<p>ROLLBACK</p>
</td>
<td class="cellalignment1013" headers="r14c1-t31 r1c5-t31">
<p>97</p>
</td>
<td class="cellalignment1013" headers="r14c1-t31 r1c6-t31">
<p>CREATE PACKAGE BODY</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r15c1-t31" headers="r1c1-t31">
<p>14</p>
</td>
<td class="cellalignment1013" headers="r15c1-t31 r1c2-t31">
<p>ALTER SEQUENCE</p>
</td>
<td class="cellalignment1013" headers="r15c1-t31 r1c3-t31">
<p>56</p>
</td>
<td class="cellalignment1013" headers="r15c1-t31 r1c4-t31">
<p>SAVEPOINT</p>
</td>
<td class="cellalignment1013" headers="r15c1-t31 r1c5-t31">
<p>98</p>
</td>
<td class="cellalignment1013" headers="r15c1-t31 r1c6-t31">
<p>ALTER PACKAGE BODY</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r16c1-t31" headers="r1c1-t31">
<p>15</p>
</td>
<td class="cellalignment1013" headers="r16c1-t31 r1c2-t31">
<p>(NOT USED)</p>
</td>
<td class="cellalignment1013" headers="r16c1-t31 r1c3-t31">
<p>57</p>
</td>
<td class="cellalignment1013" headers="r16c1-t31 r1c4-t31">
<p>CREATE CONTROL FILE</p>
</td>
<td class="cellalignment1013" headers="r16c1-t31 r1c5-t31">
<p>99</p>
</td>
<td class="cellalignment1013" headers="r16c1-t31 r1c6-t31">
<p>DROP PACKAGE BODY</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r17c1-t31" headers="r1c1-t31">
<p>16</p>
</td>
<td class="cellalignment1013" headers="r17c1-t31 r1c2-t31">
<p>DROP SEQUENCE</p>
</td>
<td class="cellalignment1013" headers="r17c1-t31 r1c3-t31">
<p>58</p>
</td>
<td class="cellalignment1013" headers="r17c1-t31 r1c4-t31">
<p>ALTER TRACING</p>
</td>
<td class="cellalignment1013" headers="r17c1-t31 r1c5-t31">
<p>157</p>
</td>
<td class="cellalignment1013" headers="r17c1-t31 r1c6-t31">
<p>CREATE DIRECTORY</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r18c1-t31" headers="r1c1-t31">
<p>17</p>
</td>
<td class="cellalignment1013" headers="r18c1-t31 r1c2-t31">
<p>CREATE SCHEMA</p>
</td>
<td class="cellalignment1013" headers="r18c1-t31 r1c3-t31">
<p>59</p>
</td>
<td class="cellalignment1013" headers="r18c1-t31 r1c4-t31">
<p>CREATE TRIGGER</p>
</td>
<td class="cellalignment1013" headers="r18c1-t31 r1c5-t31">
<p>158</p>
</td>
<td class="cellalignment1013" headers="r18c1-t31 r1c6-t31">
<p>DROP DIRECTORY</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r19c1-t31" headers="r1c1-t31">
<p>18</p>
</td>
<td class="cellalignment1013" headers="r19c1-t31 r1c2-t31">
<p>CREATE CLUSTER</p>
</td>
<td class="cellalignment1013" headers="r19c1-t31 r1c3-t31">
<p>60</p>
</td>
<td class="cellalignment1013" headers="r19c1-t31 r1c4-t31">
<p>ALTER TRIGGER</p>
</td>
<td class="cellalignment1013" headers="r19c1-t31 r1c5-t31">
<p>159</p>
</td>
<td class="cellalignment1013" headers="r19c1-t31 r1c6-t31">
<p>CREATE LIBRARY</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r20c1-t31" headers="r1c1-t31">
<p>19</p>
</td>
<td class="cellalignment1013" headers="r20c1-t31 r1c2-t31">
<p>CREATE USER</p>
</td>
<td class="cellalignment1013" headers="r20c1-t31 r1c3-t31">
<p>61</p>
</td>
<td class="cellalignment1013" headers="r20c1-t31 r1c4-t31">
<p>DROP TRIGGER</p>
</td>
<td class="cellalignment1013" headers="r20c1-t31 r1c5-t31">
<p>160</p>
</td>
<td class="cellalignment1013" headers="r20c1-t31 r1c6-t31">
<p>CREATE JAVA</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r21c1-t31" headers="r1c1-t31">
<p>20</p>
</td>
<td class="cellalignment1013" headers="r21c1-t31 r1c2-t31">
<p>CREATE INDEX</p>
</td>
<td class="cellalignment1013" headers="r21c1-t31 r1c3-t31">
<p>62</p>
</td>
<td class="cellalignment1013" headers="r21c1-t31 r1c4-t31">
<p>ANALYZE TABLE</p>
</td>
<td class="cellalignment1013" headers="r21c1-t31 r1c5-t31">
<p>161</p>
</td>
<td class="cellalignment1013" headers="r21c1-t31 r1c6-t31">
<p>ALTER JAVA</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r22c1-t31" headers="r1c1-t31">
<p>21</p>
</td>
<td class="cellalignment1013" headers="r22c1-t31 r1c2-t31">
<p>DROP INDEX</p>
</td>
<td class="cellalignment1013" headers="r22c1-t31 r1c3-t31">
<p>63</p>
</td>
<td class="cellalignment1013" headers="r22c1-t31 r1c4-t31">
<p>ANALYZE INDEX</p>
</td>
<td class="cellalignment1013" headers="r22c1-t31 r1c5-t31">
<p>162</p>
</td>
<td class="cellalignment1013" headers="r22c1-t31 r1c6-t31">
<p>DROP JAVA</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r23c1-t31" headers="r1c1-t31">
<p>22</p>
</td>
<td class="cellalignment1013" headers="r23c1-t31 r1c2-t31">
<p>DROP CLUSTER</p>
</td>
<td class="cellalignment1013" headers="r23c1-t31 r1c3-t31">
<p>64</p>
</td>
<td class="cellalignment1013" headers="r23c1-t31 r1c4-t31">
<p>ANALYZE CLUSTER</p>
</td>
<td class="cellalignment1013" headers="r23c1-t31 r1c5-t31">
<p>163</p>
</td>
<td class="cellalignment1013" headers="r23c1-t31 r1c6-t31">
<p>CREATE OPERATOR</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r24c1-t31" headers="r1c1-t31">
<p>23</p>
</td>
<td class="cellalignment1013" headers="r24c1-t31 r1c2-t31">
<p>VALIDATE INDEX</p>
</td>
<td class="cellalignment1013" headers="r24c1-t31 r1c3-t31">
<p>65</p>
</td>
<td class="cellalignment1013" headers="r24c1-t31 r1c4-t31">
<p>CREATE PROFILE</p>
</td>
<td class="cellalignment1013" headers="r24c1-t31 r1c5-t31">
<p>164</p>
</td>
<td class="cellalignment1013" headers="r24c1-t31 r1c6-t31">
<p>CREATE INDEXTYPE</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r25c1-t31" headers="r1c1-t31">
<p>24</p>
</td>
<td class="cellalignment1013" headers="r25c1-t31 r1c2-t31">
<p>CREATE PROCEDURE</p>
</td>
<td class="cellalignment1013" headers="r25c1-t31 r1c3-t31">
<p>66</p>
</td>
<td class="cellalignment1013" headers="r25c1-t31 r1c4-t31">
<p>DROP PROFILE</p>
</td>
<td class="cellalignment1013" headers="r25c1-t31 r1c5-t31">
<p>165</p>
</td>
<td class="cellalignment1013" headers="r25c1-t31 r1c6-t31">
<p>DROP INDEXTYPE</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r26c1-t31" headers="r1c1-t31">
<p>25</p>
</td>
<td class="cellalignment1013" headers="r26c1-t31 r1c2-t31">
<p>ALTER PROCEDURE</p>
</td>
<td class="cellalignment1013" headers="r26c1-t31 r1c3-t31">
<p>67</p>
</td>
<td class="cellalignment1013" headers="r26c1-t31 r1c4-t31">
<p>ALTER PROFILE</p>
</td>
<td class="cellalignment1013" headers="r26c1-t31 r1c5-t31">
<p>166</p>
</td>
<td class="cellalignment1013" headers="r26c1-t31 r1c6-t31">
<p>ALTER INDEXTYPE</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r27c1-t31" headers="r1c1-t31">
<p>26</p>
</td>
<td class="cellalignment1013" headers="r27c1-t31 r1c2-t31">
<p>ALTER TABLE</p>
</td>
<td class="cellalignment1013" headers="r27c1-t31 r1c3-t31">
<p>68</p>
</td>
<td class="cellalignment1013" headers="r27c1-t31 r1c4-t31">
<p>DROP PROCEDURE</p>
</td>
<td class="cellalignment1013" headers="r27c1-t31 r1c5-t31">
<p>167</p>
</td>
<td class="cellalignment1013" headers="r27c1-t31 r1c6-t31">
<p>DROP OPERATOR</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r28c1-t31" headers="r1c1-t31">
<p>27</p>
</td>
<td class="cellalignment1013" headers="r28c1-t31 r1c2-t31">
<p>EXPLAIN</p>
</td>
<td class="cellalignment1013" headers="r28c1-t31 r1c3-t31">
<p>69</p>
</td>
<td class="cellalignment1013" headers="r28c1-t31 r1c4-t31">
<p>(NOT USED)</p>
</td>
<td class="cellalignment1013" headers="r28c1-t31 r1c5-t31">
<p>168</p>
</td>
<td class="cellalignment1013" headers="r28c1-t31 r1c6-t31">
<p>ASSOCIATE STATISTICS</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r29c1-t31" headers="r1c1-t31">
<p>28</p>
</td>
<td class="cellalignment1013" headers="r29c1-t31 r1c2-t31">
<p>GRANT</p>
</td>
<td class="cellalignment1013" headers="r29c1-t31 r1c3-t31">
<p>70</p>
</td>
<td class="cellalignment1013" headers="r29c1-t31 r1c4-t31">
<p>ALTER RESOURCE COST</p>
</td>
<td class="cellalignment1013" headers="r29c1-t31 r1c5-t31">
<p>169</p>
</td>
<td class="cellalignment1013" headers="r29c1-t31 r1c6-t31">
<p>DISASSOCIATE STATISTICS</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r30c1-t31" headers="r1c1-t31">
<p>29</p>
</td>
<td class="cellalignment1013" headers="r30c1-t31 r1c2-t31">
<p>REVOKE</p>
</td>
<td class="cellalignment1013" headers="r30c1-t31 r1c3-t31">
<p>71</p>
</td>
<td class="cellalignment1013" headers="r30c1-t31 r1c4-t31">
<p>CREATE SNAPSHOT LOG</p>
</td>
<td class="cellalignment1013" headers="r30c1-t31 r1c5-t31">
<p>170</p>
</td>
<td class="cellalignment1013" headers="r30c1-t31 r1c6-t31">
<p>CALL METHOD</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r31c1-t31" headers="r1c1-t31">
<p>30</p>
</td>
<td class="cellalignment1013" headers="r31c1-t31 r1c2-t31">
<p>CREATE SYNONYM</p>
</td>
<td class="cellalignment1013" headers="r31c1-t31 r1c3-t31">
<p>72</p>
</td>
<td class="cellalignment1013" headers="r31c1-t31 r1c4-t31">
<p>ALTER SNAPSHOT LOG</p>
</td>
<td class="cellalignment1013" headers="r31c1-t31 r1c5-t31">
<p>171</p>
</td>
<td class="cellalignment1013" headers="r31c1-t31 r1c6-t31">
<p>CREATE SUMMARY</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r32c1-t31" headers="r1c1-t31">
<p>31</p>
</td>
<td class="cellalignment1013" headers="r32c1-t31 r1c2-t31">
<p>DROP SYNONYM</p>
</td>
<td class="cellalignment1013" headers="r32c1-t31 r1c3-t31">
<p>73</p>
</td>
<td class="cellalignment1013" headers="r32c1-t31 r1c4-t31">
<p>DROP SNAPSHOT LOG</p>
</td>
<td class="cellalignment1013" headers="r32c1-t31 r1c5-t31">
<p>172</p>
</td>
<td class="cellalignment1013" headers="r32c1-t31 r1c6-t31">
<p>ALTER SUMMARY</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r33c1-t31" headers="r1c1-t31">
<p>32</p>
</td>
<td class="cellalignment1013" headers="r33c1-t31 r1c2-t31">
<p>ALTER SYSTEM SWITCH LOG</p>
</td>
<td class="cellalignment1013" headers="r33c1-t31 r1c3-t31">
<p>74</p>
</td>
<td class="cellalignment1013" headers="r33c1-t31 r1c4-t31">
<p>CREATE SNAPSHOT</p>
</td>
<td class="cellalignment1013" headers="r33c1-t31 r1c5-t31">
<p>173</p>
</td>
<td class="cellalignment1013" headers="r33c1-t31 r1c6-t31">
<p>DROP SUMMARY</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r34c1-t31" headers="r1c1-t31">
<p>33</p>
</td>
<td class="cellalignment1013" headers="r34c1-t31 r1c2-t31">
<p>SET TRANSACTION</p>
</td>
<td class="cellalignment1013" headers="r34c1-t31 r1c3-t31">
<p>75</p>
</td>
<td class="cellalignment1013" headers="r34c1-t31 r1c4-t31">
<p>ALTER SNAPSHOT</p>
</td>
<td class="cellalignment1013" headers="r34c1-t31 r1c5-t31">
<p>174</p>
</td>
<td class="cellalignment1013" headers="r34c1-t31 r1c6-t31">
<p>CREATE DIMENSION</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r35c1-t31" headers="r1c1-t31">
<p>34</p>
</td>
<td class="cellalignment1013" headers="r35c1-t31 r1c2-t31">
<p>PL/SQL EXECUTE</p>
</td>
<td class="cellalignment1013" headers="r35c1-t31 r1c3-t31">
<p>76</p>
</td>
<td class="cellalignment1013" headers="r35c1-t31 r1c4-t31">
<p>DROP SNAPSHOT</p>
</td>
<td class="cellalignment1013" headers="r35c1-t31 r1c5-t31">
<p>175</p>
</td>
<td class="cellalignment1013" headers="r35c1-t31 r1c6-t31">
<p>ALTER DIMENSION</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r36c1-t31" headers="r1c1-t31">
<p>35</p>
</td>
<td class="cellalignment1013" headers="r36c1-t31 r1c2-t31">
<p>LOCK</p>
</td>
<td class="cellalignment1013" headers="r36c1-t31 r1c3-t31">
<p>77</p>
</td>
<td class="cellalignment1013" headers="r36c1-t31 r1c4-t31">
<p>CREATE TYPE</p>
</td>
<td class="cellalignment1013" headers="r36c1-t31 r1c5-t31">
<p>176</p>
</td>
<td class="cellalignment1013" headers="r36c1-t31 r1c6-t31">
<p>DROP DIMENSION</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r37c1-t31" headers="r1c1-t31">
<p>36</p>
</td>
<td class="cellalignment1013" headers="r37c1-t31 r1c2-t31">
<p>NOOP</p>
</td>
<td class="cellalignment1013" headers="r37c1-t31 r1c3-t31">
<p>78</p>
</td>
<td class="cellalignment1013" headers="r37c1-t31 r1c4-t31">
<p>DROP TYPE</p>
</td>
<td class="cellalignment1013" headers="r37c1-t31 r1c5-t31">
<p>177</p>
</td>
<td class="cellalignment1013" headers="r37c1-t31 r1c6-t31">
<p>CREATE CONTEXT</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r38c1-t31" headers="r1c1-t31">
<p>37</p>
</td>
<td class="cellalignment1013" headers="r38c1-t31 r1c2-t31">
<p>RENAME</p>
</td>
<td class="cellalignment1013" headers="r38c1-t31 r1c3-t31">
<p>79</p>
</td>
<td class="cellalignment1013" headers="r38c1-t31 r1c4-t31">
<p>ALTER ROLE</p>
</td>
<td class="cellalignment1013" headers="r38c1-t31 r1c5-t31">
<p>178</p>
</td>
<td class="cellalignment1013" headers="r38c1-t31 r1c6-t31">
<p>DROP CONTEXT</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r39c1-t31" headers="r1c1-t31">
<p>38</p>
</td>
<td class="cellalignment1013" headers="r39c1-t31 r1c2-t31">
<p>COMMENT</p>
</td>
<td class="cellalignment1013" headers="r39c1-t31 r1c3-t31">
<p>80</p>
</td>
<td class="cellalignment1013" headers="r39c1-t31 r1c4-t31">
<p>ALTER TYPE</p>
</td>
<td class="cellalignment1013" headers="r39c1-t31 r1c5-t31">
<p>179</p>
</td>
<td class="cellalignment1013" headers="r39c1-t31 r1c6-t31">
<p>ALTER OUTLINE</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r40c1-t31" headers="r1c1-t31">
<p>39</p>
</td>
<td class="cellalignment1013" headers="r40c1-t31 r1c2-t31">
<p>AUDIT</p>
</td>
<td class="cellalignment1013" headers="r40c1-t31 r1c3-t31">
<p>81</p>
</td>
<td class="cellalignment1013" headers="r40c1-t31 r1c4-t31">
<p>CREATE TYPE BODY</p>
</td>
<td class="cellalignment1013" headers="r40c1-t31 r1c5-t31">
<p>180</p>
</td>
<td class="cellalignment1013" headers="r40c1-t31 r1c6-t31">
<p>CREATE OUTLINE</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r41c1-t31" headers="r1c1-t31">
<p>40</p>
</td>
<td class="cellalignment1013" headers="r41c1-t31 r1c2-t31">
<p>NO AUDIT</p>
</td>
<td class="cellalignment1013" headers="r41c1-t31 r1c3-t31">
<p>82</p>
</td>
<td class="cellalignment1013" headers="r41c1-t31 r1c4-t31">
<p>ALTER TYPE BODY</p>
</td>
<td class="cellalignment1013" headers="r41c1-t31 r1c5-t31">
<p>181</p>
</td>
<td class="cellalignment1013" headers="r41c1-t31 r1c6-t31">
<p>DROP OUTLINE</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r42c1-t31" headers="r1c1-t31">
<p>41</p>
</td>
<td class="cellalignment1013" headers="r42c1-t31 r1c2-t31">
<p>ALTER INDEX</p>
</td>
<td class="cellalignment1013" headers="r42c1-t31 r1c3-t31">
<p>83</p>
</td>
<td class="cellalignment1013" headers="r42c1-t31 r1c4-t31">
<p>DROP TYPE BODY</p>
</td>
<td class="cellalignment1013" headers="r42c1-t31 r1c5-t31">
<p>182</p>
</td>
<td class="cellalignment1013" headers="r42c1-t31 r1c6-t31">
<p>UPDATE INDEXES</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r43c1-t31" headers="r1c1-t31">
<p>42</p>
</td>
<td class="cellalignment1013" headers="r43c1-t31 r1c2-t31">
<p>CREATE EXTERNAL DATABASE</p>
</td>
<td class="cellalignment1013" headers="r43c1-t31 r1c3-t31">
<p>84</p>
</td>
<td class="cellalignment1013" headers="r43c1-t31 r1c4-t31">
<p>DROP LIBRARY</p>
</td>
<td class="cellalignment1013" headers="r43c1-t31 r1c5-t31">
<p>183</p>
</td>
<td class="cellalignment1013" headers="r43c1-t31 r1c6-t31">
<p>ALTER OPERATOR</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformalwide" -->
<p class="subhead1"><a id="LNOCI17875"></a><a id="sthref5440"></a>OCI_ATTR_STATEMENT</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ</p>
</dd>
<dt>Description</dt>
<dd>
<p>Returns the text of the SQL statement prepared in a statement handle. In UTF-16 mode, the returned statement is in UTF-16 encoding. The length is always in bytes.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>oratext *</code></p>
</dd>
</dl>
<p class="subhead1"><a id="BAJIDBEG"></a><a id="LNOCI18388"></a><a id="sthref5441"></a>OCI_ATTR_STMTCACHE_CBKCTX</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ/WRITE</p>
</dd>
<dt>Description</dt>
<dd>
<p>Used to get and set the application's opaque context on the statement handle. This context can be of any type that the application defines. It is primarily used for encompassing the bind and define buffer addresses.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>void *</code></p>
</dd>
</dl>
<p class="subhead1"><a id="LNOCI17877"></a><a id="sthref5442"></a>OCI_ATTR_STMT_STATE</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ</p>
</dd>
<dt>Description</dt>
<dd>
<p>Returns the fetch state of that statement. This attribute can be used by the caller to determine if the session can be used in another service context or if it is still needed in the current set of data access calls. Basically, if you are in the middle of a fetch-execute cycle, then you do not want to release the session handle for another statement execution. Valid values are:</p>
</dd>
</dl>
<ul>
<li>
<p><code>OCI_STMT_STATE_INITIALIZED</code></p>
</li>
<li>
<p><code>OCI_STMT_STATE_EXECUTED</code></p>
</li>
<li>
<p><code>OCI_STMT_STATE_END_OF_FETCH</code></p>
</li>
</ul>
<dl>
<dt>Attribute Data Type</dt>
<dd>
<p><code>ub4 *</code></p>
</dd>
</dl>
<p class="subhead1"><a id="LNOCI17878"></a><a id="sthref5443"></a>OCI_ATTR_STMT_TYPE</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ</p>
</dd>
<dt>Description</dt>
<dd>
<p>The type of statement associated with the handle. Valid values are:</p>
</dd>
</dl>
<ul>
<li>
<p><code>OCI_STMT_SELECT</code></p>
</li>
<li>
<p><code>OCI_STMT_UPDATE</code></p>
</li>
<li>
<p><code>OCI_STMT_DELETE</code></p>
</li>
<li>
<p><code>OCI_STMT_INSERT</code></p>
</li>
<li>
<p><code>OCI_STMT_CREATE</code></p>
</li>
<li>
<p><code>OCI_STMT_DROP</code></p>
</li>
<li>
<p><code>OCI_STMT_ALTER</code></p>
</li>
<li>
<p><code>OCI_STMT_BEGIN</code> (PL/SQL statement)</p>
</li>
<li>
<p><code>OCI_STMT_DECLARE</code> (PL/SQL statement)</p>
</li>
</ul>
<dl>
<dt>Attribute Data Type</dt>
<dd>
<p><code>ub2 *</code></p>
</dd>
</dl>
</div>
<!-- class="sect1" -->
<a id="i430016"></a>
<div id="LNOCI17879" class="sect1">
<h2 class="sect1">Bind Handle Attributes<a id="sthref5444"></a><a id="sthref5445"></a><a id="sthref5446"></a></h2>
<p>The following attributes are used for the bind handle.</p>
<p class="subhead1"><a id="LNOCI17880"></a><a id="sthref5447"></a>OCI_ATTR_CHAR_COUNT</p>
<dl>
<dt>Mode</dt>
<dd>
<p>WRITE</p>
</dd>
<dt>Description</dt>
<dd>
<p>Sets the number of characters in character type data.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="oci05bnd.htm#i435935">"Buffer Expansion During OCI Binding"</a></div>
</dd>
</dl>
<dl>
<dt>Attribute Data Type</dt>
<dd>
<p><code>ub4 *</code></p>
</dd>
</dl>
<p class="subhead1"><a id="LNOCI17881"></a><a id="sthref5448"></a>OCI_ATTR_CHARSET_FORM</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ/WRITE</p>
</dd>
<dt>Description</dt>
<dd>
<p>Character set form of the bind handle. The default form is <code>SQLCS_IMPLICIT</code>. Setting this attribute causes the bind handle to use the database or national character set on the client side. Set this attribute to <code>SQLCS_NCHAR</code> for the national character set or <code>SQLCS_IMPLICIT</code> for the database character set.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>ub1 *</code></p>
</dd>
</dl>
<p class="subhead1"><a id="i441133"></a><a id="LNOCI17882"></a><a id="sthref5449"></a>OCI_ATTR_CHARSET_ID</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ/WRITE</p>
</dd>
<dt>Description</dt>
<dd>
<p><a id="sthref5450"></a><a id="sthref5451"></a><a id="sthref5452"></a>Character set ID of the bind handle. If the character set of the input data is UTF-16 (replaces the deprecated <code>OCI_UC2SID</code>, which is retained for backward compatibility), the user must set the character set ID to <code>OCI_UTF16ID</code>. The bind value buffer is assumed to be a <code>utext</code> buffer, so length semantics for input length pointers and return values changes to character semantics (number of <code>utext</code>s). However, the size of the bind value buffer in the preceding <code>OCIBind</code> call must be stated in bytes.</p>
<p>If <code>OCI_ATTR_CHARSET_FORM</code> is set, then <code>OCI_ATTR_CHARSET_ID</code> should be set only afterward. Setting <code>OCI_ATTR_CHARSET_ID</code> before setting <code>OCI_ATTR_CHARSET_FORM</code> causes unexpected results.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="oci05bnd.htm#i422770">"Character Conversion in OCI Binding and Defining"</a></div>
</dd>
</dl>
<dl>
<dt>Attribute Data Type</dt>
<dd>
<p><code>ub2 *</code></p>
</dd>
</dl>
<p class="subhead1"><a id="LNOCI17883"></a><a id="sthref5453"></a>OCI_ATTR_MAXCHAR_SIZE</p>
<dl>
<dt>Mode</dt>
<dd>
<p>WRITE</p>
</dd>
<dt>Description</dt>
<dd>
<p>Sets the number of characters that an application reserves on the server to store the data being bound.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="oci05bnd.htm#i436084">"Using the OCI_ATTR_MAXCHAR_SIZE Attribute"</a></div>
</dd>
</dl>
<dl>
<dt>Attribute Data Type</dt>
<dd>
<p><code>sb4 *</code></p>
</dd>
</dl>
<p class="subhead1"><a id="LNOCI17884"></a><a id="sthref5454"></a>OCI_ATTR_MAXDATA_SIZE</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ/WRITE</p>
</dd>
<dt>Description</dt>
<dd>
<p>Sets the maximum number of bytes allowed in the buffer on the server side to accommodate client-side bind data after character set conversions.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="oci05bnd.htm#i436480">"Using the OCI_ATTR_MAXDATA_SIZE Attribute"</a></div>
</dd>
</dl>
<dl>
<dt>Attribute Data Type</dt>
<dd>
<p><code>sb4 *</code></p>
</dd>
</dl>
<p class="subhead1"><a id="LNOCI17885"></a><a id="sthref5455"></a>OCI_ATTR_PDPRC</p>
<dl>
<dt>Mode</dt>
<dd>
<p>WRITE</p>
</dd>
<dt>Description</dt>
<dd>
<p>Specifies packed decimal precision. For <code>SQLT_PDN</code> values, the precision should be equal to <code>2*(value_sz-1)</code>. For <code>SQLT_SLS</code> values, the precision should be equal to <code>(value_sz-1)</code>.</p>
<p>After a bind or define, this value is initialized to zero. The <code>OCI_ATTR_PDPRC</code> attribute should be set first, followed by <code>OCI_ATTR_PDSCL</code>. If either of these values must be changed, first perform a rebind/redefine operation, and then reset the two attributes in order.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>ub2 *</code></p>
</dd>
</dl>
<p class="subhead1"><a id="LNOCI17886"></a><a id="sthref5456"></a>OCI_ATTR_PDSCL</p>
<dl>
<dt>Mode</dt>
<dd>
<p>WRITE</p>
</dd>
<dt>Description</dt>
<dd>
<p>Specifies the scale for packed decimal values.</p>
<p>After a bind or define, this value is initialized to zero. The <code>OCI_ATTR_PDPRC</code> attribute should be set first, followed by <code>OCI_ATTR_PDSCL</code>. If either of these values must be changed, first perform a rebind/redefine operation, and then reset the two attributes in order.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>sb2 *</code></p>
</dd>
</dl>
<p class="subhead1"><a id="LNOCI17887"></a>OCI_ATTR_ROWS_RETURNED<a id="sthref5457"></a></p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ</p>
</dd>
<dt>Description</dt>
<dd>
<p>This attribute returns the number of rows that will be returned in the current iteration when you are in the <code>OUT</code> callback function for binding a DML statement with a <code>RETURNING</code> clause.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>ub4 *</code></p>
</dd>
</dl>
</div>
<!-- class="sect1" -->
<a id="i428859"></a>
<div id="LNOCI17888" class="sect1">
<h2 class="sect1">Define Handle Attributes<a id="sthref5458"></a><a id="sthref5459"></a><a id="sthref5460"></a><a id="sthref5461"></a></h2>
<p>The following attributes are used for the define handle.</p>
<p class="subhead1"><a id="LNOCI17889"></a><a id="sthref5462"></a>OCI_ATTR_CHAR_COUNT</p>
<dl>
<dt>Mode</dt>
<dd>
<p>WRITE</p>
</dd>
<dt>Description</dt>
<dd>
<p>This attribute is deprecated.</p>
<p>Sets the number of characters in character type data. This specifies the number of characters desired in the define buffer. The define buffer length as specified in the define call must be greater than number of characters.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>ub4 *</code></p>
</dd>
</dl>
<p class="subhead1"><a id="LNOCI17890"></a><a id="sthref5463"></a>OCI_ATTR_CHARSET_FORM</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ/WRITE</p>
</dd>
<dt>Description</dt>
<dd>
<p>The character set form of the define handle. The default form is <code>SQLCS_IMPLICIT</code>. Setting this attribute causes the define handle to use the database or national character set on the client side. Set this attribute to <code>SQLCS_NCHAR</code> for the national character set or <code>SQLCS_IMPLICIT</code> for the database character set.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>ub1 *</code></p>
</dd>
</dl>
<p class="subhead1"><a id="i441134"></a><a id="LNOCI17891"></a><a id="sthref5464"></a>OCI_ATTR_CHARSET_ID</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ/WRITE</p>
</dd>
<dt>Description</dt>
<dd>
<p><a id="sthref5465"></a><a id="sthref5466"></a>The character set ID of the define handle. If the character set of the output data should be UTF-16, the user must set the character set IDOTT to <code>OCI_UTF16ID</code>. The define value buffer is assumed to be a <code>utext</code> buffer, so length semantics for indicators and return values changes to character semantics (number of utexts). However, the size of the define value buffer in the preceding <code>OCIDefine</code> call must be stated in bytes.</p>
<p>If <code>OCI_ATTR_CHARSET_FORM</code> is set, then <code>OCI_ATTR_CHARSET_ID</code> should be set only afterward. Setting <code>OCI_ATTR_CHARSET_ID</code> before setting <code>OCI_ATTR_CHARSET_FORM</code> causes unexpected results.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="oci05bnd.htm#i422770">"Character Conversion in OCI Binding and Defining"</a></div>
</dd>
</dl>
<dl>
<dt>Attribute Data Type</dt>
<dd>
<p><code>ub2 *</code></p>
</dd>
</dl>
<p class="subhead1"><a id="CHDECDDE"></a><a id="LNOCI17892"></a><a id="sthref5467"></a>OCI_ATTR_LOBPREFETCH_LENGTH</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ/WRITE</p>
</dd>
<dt>Description</dt>
<dd>
<p>Specifies the prefetch length and chunk size for the LOB locators to be fetched from a particular column.</p>
</dd>
</dl>
<dl>
<dt>Attribute Data Type</dt>
<dd>
<p><code>boolean */boolean</code></p>
</dd>
</dl>
<p class="subhead1"><a id="CHDJEBCB"></a><a id="LNOCI17893"></a><a id="sthref5468"></a>OCI_ATTR_LOBPREFETCH_SIZE</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ/WRITE</p>
</dd>
<dt>Description</dt>
<dd>
<p>Overrides the default cache buffer size for the LOB locators to be fetched from a particular column.</p>
</dd>
</dl>
<dl>
<dt>Attribute Data Type</dt>
<dd>
<p><code>ub4 *</code><code>/ub4</code></p>
</dd>
</dl>
<p class="subhead1"><a id="LNOCI17894"></a><a id="sthref5469"></a>OCI_ATTR_MAXCHAR_SIZE</p>
<dl>
<dt>Mode</dt>
<dd>
<p>WRITE</p>
</dd>
<dt>Description</dt>
<dd>
<p>Specifies the maximum number of characters that the client application allows in the define buffer.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="oci05bnd.htm#i436084">"Using the OCI_ATTR_MAXCHAR_SIZE Attribute"</a></div>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>sb4 *</code></p>
</dd>
</dl>
<p class="subhead1"><a id="LNOCI17895"></a><a id="sthref5470"></a>OCI_ATTR_PDPRC</p>
<dl>
<dt>Mode</dt>
<dd>
<p>WRITE</p>
</dd>
<dt>Description</dt>
<dd>
<p>Specifies packed decimal precision. For SQLT_PDN values, the precision should be equal to <code>2*(value_sz-1)</code>. For SQLT_SLS values, the precision should be equal to <code>(value_sz-1)</code>.</p>
<p>After a bind or define, this value is initialized to zero. The <code>OCI_ATTR_PDPRC</code> attribute should be set first, followed by <code>OCI_ATTR_PDSCL</code>. If either of these values must be changed, first perform a rebind/redefine operation, and then reset the two attributes in order.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>ub2 *</code></p>
</dd>
</dl>
<p class="subhead1"><a id="LNOCI17896"></a><a id="sthref5471"></a>OCI_ATTR_PDSCL</p>
<dl>
<dt>Mode</dt>
<dd>
<p>WRITE</p>
</dd>
<dt>Description</dt>
<dd>
<p>Specifies the scale for packed decimal values.</p>
<p>After a bind or define, this value is initialized to zero. The <code>OCI_ATTR_PDPRC</code> attribute should be set first, followed by <code>OCI_ATTR_PDSCL</code>. If either of these values must be changed, first perform a rebind/redefine operation, and then reset the two attributes in order.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>sb2 *</code></p>
</dd>
</dl>
</div>
<!-- class="sect1" -->
<a id="i428863"></a>
<div id="LNOCI17897" class="sect1">
<h2 class="sect1">Describe Handle Attributes<a id="sthref5472"></a><a id="sthref5473"></a><a id="sthref5474"></a></h2>
<p>The following attributes are used for the describe handle.</p>
<p class="subhead1"><a id="LNOCI17898"></a>OCI_ATTR_PARAM<a id="sthref5475"></a></p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ</p>
</dd>
<dt>Description</dt>
<dd>
<p>Points to the root of the description. Used for subsequent calls to <code>OCIAttrGet()</code> and <code>OCIParamGet()</code>.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>ub4 *</code></p>
</dd>
</dl>
<p class="subhead1"><a id="LNOCI17899"></a>OCI_ATTR_PARAM_COUNT<a id="sthref5476"></a></p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ</p>
</dd>
<dt>Description</dt>
<dd>
<p>Returns the number of parameters in the describe handle. When the describe handle is a description of the select list, this refers to the number of columns in the select list.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>ub4 *</code></p>
</dd>
</dl>
</div>
<!-- class="sect1" -->
<a id="i424749"></a>
<div id="LNOCI17900" class="sect1">
<h2 class="sect1">Parameter Descriptor Attributes<a id="sthref5477"></a><a id="sthref5478"></a></h2>
<p>The following attributes are used for the parameter descriptor.</p>
<p>For a detailed list of parameter descriptor attributes, see <a href="oci06des.htm#g464132">Chapter 6</a>.</p>
</div>
<!-- class="sect1" -->
<a id="i428825"></a>
<div id="LNOCI17901" class="sect1">
<h2 class="sect1">LOB Locator Attribut<a id="sthref5479"></a><a id="sthref5480"></a>es</h2>
<p>The following attributes are used for the parameter descriptor.</p>
<p class="subhead1"><a id="LNOCI17902"></a>OCI_ATTR_LOBEMPTY<a id="sthref5481"></a></p>
<dl>
<dt>Mode</dt>
<dd>
<p>WRITE</p>
</dd>
<dt>Description</dt>
<dd>
<p>Sets the internal LOB locator to empty. The locator can then be used as a bind variable for an <code>INSERT</code> or <code>UPDATE</code> statement to initialize the LOB to empty. Once the LOB is empty, <a href="oci17msc002.htm#i578761">OCILobWrite2()</a> or <a href="ociaedep003.htm#i427882">OCILobWrite()</a> (deprecated) can be called to populate the LOB with data. This attribute is only valid for internal LOBs (that is, <code>BLOB</code>, <code>CLOB</code>, <code>NCLOB</code>).</p>
<p>Applications should pass the address of a <code>ub4</code> that has a value of 0; for example, declare the following:</p>
<pre>
ub4 lobEmpty = 0
</pre>
<p>Then they should pass the address: <code>&amp;lobEmpty</code>.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>ub4 *</code></p>
</dd>
</dl>
</div>
<!-- class="sect1" -->
<a id="i428927"></a>
<div id="LNOCI17909" class="sect1">
<h2 class="sect1">Complex Object Attributes</h2>
<p>The following attributes are used for complex objects.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="oci11obj.htm#i440830">"Complex Object Retrieval"</a></div>
<a id="i455137"></a>
<div id="LNOCI17910" class="sect2">
<h3 class="sect2">Complex Object Retrieval Handle Attributes<a id="sthref5482"></a><a id="sthref5483"></a></h3>
<p>The following <a id="sthref5484"></a>attributes are used for the complex object retrieval handle.</p>
<p class="subhead1"><a id="LNOCI17911"></a>OCI_ATTR_COMPLEXOBJECT_LEVEL<a id="sthref5485"></a></p>
<dl>
<dt>Mode</dt>
<dd>
<p>WRITE</p>
</dd>
<dt>Description</dt>
<dd>
<p>The depth level for complex object retrieval.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>ub4 *</code></p>
</dd>
</dl>
<p class="subhead1"><a id="LNOCI17912"></a>OCI_ATTR_COMPLEXOBJECT_COLL_OUTOFLINE<a id="sthref5486"></a></p>
<dl>
<dt>Mode</dt>
<dd>
<p>WRITE</p>
</dd>
<dt>Description</dt>
<dd>
<p>Whether to fetch collection attributes in an object type out-of-line.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>ub1 *</code></p>
</dd>
</dl>
</div>
<!-- class="sect2" -->
<a id="CACJHDIH"></a>
<div id="LNOCI17913" class="sect2">
<h3 class="sect2">Complex Object Retrieval Descriptor Attributes<a id="sthref5487"></a><a id="sthref5488"></a></h3>
<p>The following attributes are used for the complex object retrieval descriptor.</p>
<p class="subhead1"><a id="LNOCI17914"></a>OCI_ATTR_COMPLEXOBJECTCOMP_TYPE<a id="sthref5489"></a></p>
<dl>
<dt>Mode</dt>
<dd>
<p>WRITE</p>
</dd>
<dt>Description</dt>
<dd>
<p>A type of <code>REF</code> to follow for complex object retrieval.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>void *</code></p>
</dd>
</dl>
<p class="subhead1"><a id="LNOCI17915"></a>OCI_ATTR_COMPLEXOBJECTCOMP_TYPE_LEVEL<a id="sthref5490"></a></p>
<dl>
<dt>Mode</dt>
<dd>
<p>WRITE</p>
</dd>
<dt>Description</dt>
<dd>
<p>Depth level for the following <code>REF</code>s of type <code>OCI_ATTR_COMPLEXOBJECTCOMP_TYPE</code>.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>ub4 *</code></p>
</dd>
</dl>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="i453062"></a>
<div id="LNOCI17916" class="sect1">
<h2 class="sect1"><a id="sthref5491"></a>Streams Advanced Queuing Descriptor Attributes</h2>
<p>The following attributes are used for the streams advanced queuing descriptor.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink ADQUE2536" href="../../server.112/e11013/aq_envir.htm#ADQUE2536"><span class="italic">Oracle Streams Advanced Queuing User's Guide</span></a></div>
<a id="CACEIGJC"></a>
<div id="LNOCI17917" class="sect2">
<h3 class="sect2">OCIAQEnqOptions Descriptor Attributes<a id="sthref5492"></a><a id="sthref5493"></a></h3>
<p>The following attributes are properties of the <code>OCIAQEnqOptions</code> descriptor.</p>
<p class="subhead1"><a id="LNOCI17918"></a><a id="sthref5494"></a>OCI_ATTR_MSG_DELIVERY_MODE</p>
<dl>
<dt>Mode</dt>
<dd>
<p>WRITE</p>
</dd>
<dt>Description</dt>
<dd>
<p>The enqueue call can enqueue a persistent or buffered message into a queue, by setting the <code>OCI_ATTR_MSG_DELIVERY_MODE</code> attribute in the <code>OCIAQEnqOptions</code> descriptor to <code>OCI_MSG_PERSISTENT</code> or <code>OCI_MSG_BUFFERED</code>, respectively. The default value for this attribute is <code>OCI_MSG_PERSISTENT</code>.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>ub2</code></p>
</dd>
</dl>
<p class="subhead1"><a id="LNOCI17919"></a><a id="sthref5495"></a>OCI_ATTR_RELATIVE_MSGID</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ/WRITE</p>
</dd>
<dt>Description</dt>
<dd>
<p>This feature is deprecated and may be removed in a future release.</p>
<p>Specifies the message identifier of the message that is referenced in the sequence deviation operation. This value is valid if and only if <code>OCI_ENQ_BEFORE</code> is specified in <code>OCI_ATTR_SEQUENCE_DIVISION</code>. This value is ignored if the sequence deviation is not specified.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>OCIRaw *</code></p>
</dd>
</dl>
<p class="subhead1"><a id="LNOCI17920"></a><a id="sthref5496"></a>OCI_ATTR_SEQUENCE_DEVIATION</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ/WRITE</p>
</dd>
<dt>Description</dt>
<dd>
<p>This feature is deprecated for new applications, but it is retained for compatibility.</p>
<p>It specifies whether the message being enqueued should be dequeued before other messages in the queue.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>ub4</code></p>
</dd>
<dt>Valid Values</dt>
<dd>
<p>The only valid values are:</p>
</dd>
</dl>
<ul>
<li>
<p><code>OCI_ENQ_BEFORE</code> - The message is enqueued ahead of the message specified by <code>OCI_ATTR_RELATIVE_MSGID</code>.</p>
</li>
<li>
<p><code>OCI_ENQ_TOP</code> - The message is enqueued ahead of any other messages.</p>
</li>
</ul>
<p class="subhead1"><a id="LNOCI17921"></a><a id="sthref5497"></a>OCI_ATTR_TRANSFORMATION</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ/WRITE</p>
</dd>
<dt>Description</dt>
<dd>
<p>The name of the transformation that must be applied before the message is enqueued into the database. The transformation must be created using <code>DBMS_TRANSFORM</code>.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>oratext *</code></p>
</dd>
</dl>
<p class="subhead1"><a id="LNOCI17922"></a><a id="sthref5498"></a>OCI_ATTR_VISIBILITY</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ/WRITE</p>
</dd>
<dt>Description</dt>
<dd>
<p>Specifies the transactional behavior of the enqueue request.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>ub4</code></p>
</dd>
<dt>Valid Values</dt>
<dd>
<p>The only valid values are:</p>
</dd>
</dl>
<ul>
<li>
<p><code>OCI_ENQ_ON_COMMIT</code> - The enqueue is part of the current transaction. The operation is complete when the transaction commits. This is the default case.</p>
</li>
<li>
<p><code>OCI_ENQ_IMMEDIATE</code> - The enqueue is not part of the current transaction. The operation constitutes a transaction of its own.</p>
</li>
</ul>
</div>
<!-- class="sect2" -->
<a id="CACGJBEH"></a>
<div id="LNOCI17923" class="sect2">
<h3 class="sect2">OCIAQDeqOptions Descriptor Attributes<a id="sthref5499"></a><a id="sthref5500"></a></h3>
<p>The following attributes are properties of the <code>OCIAQDeqOptions</code> descriptor.</p>
<p class="subhead1"><a id="LNOCI17924"></a><a id="sthref5501"></a>OCI_ATTR_CONSUMER_NAME</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ/WRITE</p>
</dd>
<dt>Description</dt>
<dd>
<p>Name of the consumer. Only those messages matching the consumer name are accessed. If a queue is not set up for multiple consumers, this field should be set to <code>null</code>.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>oratext *</code></p>
</dd>
</dl>
<p class="subhead1"><a id="LNOCI17925"></a><a id="sthref5502"></a>OCI_ATTR_CORRELATION</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ/WRITE</p>
</dd>
<dt>Description</dt>
<dd>
<p>Specifies the correlation identifier of the message to be dequeued. Special pattern-matching characters, such as the percent sign (%) and the underscore (_), can be used. If multiple messages satisfy the pattern, the order of dequeuing is undetermined.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>oratext *</code></p>
</dd>
</dl>
<p class="subhead1"><a id="LNOCI17926"></a><a id="sthref5503"></a>OCI_ATTR_DEQ_MODE</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ/WRITE</p>
</dd>
<dt>Description</dt>
<dd>
<p>Specifies the locking behavior associated with the dequeue.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>ub4</code></p>
</dd>
<dt>Valid Values</dt>
<dd>
<p>The only valid values are:</p>
</dd>
</dl>
<ul>
<li>
<p><code>OCI_DEQ_BROWSE</code> - Read the message without acquiring any lock on the message. This is equivalent to a <code>SELECT</code> statement.</p>
</li>
<li>
<p><code>OCI_DEQ_LOCKED</code> - Read and obtain a write lock on the message. The lock lasts for the duration of the transaction. This is equivalent to a <code>SELECT</code> <code>FOR</code> <code>UPDATE</code> statement.</p>
</li>
<li>
<p><code>OCI_DEQ_REMOVE</code> - Read the message and update or delete it. This is the default. The message can be retained in the queue table based on the retention properties.</p>
</li>
<li>
<p><code>OCI_DEQ_REMOVE_NODATA</code> - Confirm receipt of the message, but do not deliver the actual message content.</p>
</li>
</ul>
<p class="subhead1"><a id="LNOCI17927"></a><a id="sthref5504"></a>OCI_ATTR_DEQ_MSGID</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ/WRITE</p>
</dd>
<dt>Description</dt>
<dd>
<p>Specifies the message identifier of the message to be dequeued.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>OCIRaw *</code></p>
</dd>
</dl>
<p class="subhead1"><a id="LNOCI17928"></a><a id="sthref5505"></a>OCI_ATTR_DEQCOND</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ/WRITE</p>
</dd>
<dt>Description</dt>
<dd>
<p>This attribute is a Boolean expression similar to the <code>WHERE</code> clause of a SQL query. This Boolean expression can include conditions on message properties, user data properties (object payloads only), and PL/SQL or SQL functions.</p>
<p>To specify dequeue conditions on a message payload (object payload), use attributes of the object type in clauses. You must prefix each attribute with <code>tab.user_data</code> as a qualifier to indicate the specific column of the queue table that stores the payload.</p>
<p>The attribute cannot exceed 4000 characters. If multiple messages satisfy the dequeue condition, then the order of dequeuing is indeterminate, and the sort order of the queue is not honored.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>oratext *</code></p>
</dd>
<dt>Example</dt>
<dd>
<pre>
checkerr(errhp, OCIAttrSet(deqopt, OCI_DTYPE_AQDEQ_OPTIONS,
         (dvoid *)"tab.priority between 2 and 4" ,
         strlen("tab.priority between 2 and 4"),
         OCI_ATTR_DEQCOND, errhp));
</pre></dd>
</dl>
<p class="subhead1"><a id="LNOCI17929"></a><a id="sthref5506"></a>OCI_ATTR_MSG_DELIVERY_MODE</p>
<dl>
<dt>Mode</dt>
<dd>
<p>WRITE</p>
</dd>
<dt>Description</dt>
<dd>
<p>You can specify the dequeue call to dequeue persistent, buffered, or both kinds of messages from a queue, by setting the <code>OCI_ATTR_MSG_DELIVERY_MODE</code> attribute in the <code>OCIAQDeqOptions</code> descriptor to <code>OCI_MSG_PERSISTENT</code>, <code>OCI_MSG_BUFFERED</code>, or <code>OCI_MSG_PERSISTENT_OR_BUFFERED</code>, respectively. The default value for this attribute is <code>OCI_MSG_PERSISTENT</code>.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>ub2</code></p>
</dd>
</dl>
<p class="subhead1"><a id="LNOCI17930"></a><a id="sthref5507"></a>OCI_ATTR_NAVIGATION</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ/WRITE</p>
</dd>
<dt>Description</dt>
<dd>
<p>Specifies the position of the message that is retrieved. First, the position is determined. Second, the search criterion is applied. Finally, the message is retrieved.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>ub4</code></p>
</dd>
<dt>Valid Values</dt>
<dd>
<p>The only valid values are:</p>
</dd>
</dl>
<ul>
<li>
<p><code>OCI_DEQ_FIRST_MSG</code> - Retrieves the first available message that matches the search criteria. This resets the position to the beginning of the queue.</p>
</li>
<li>
<p><code>OCI_DEQ_NEXT_MSG</code> - Retrieves the next available message that matches the search criteria. If the previous message belongs to a message group, AQ retrieves the next available message that matches the search criteria and belongs to the message group. This is the default.</p>
</li>
<li>
<p><code>OCI_DEQ_NEXT_TRANSACTION</code> - Skips the remainder of the current transaction group (if any) and retrieves the first message of the next transaction group. This option can only be used if message grouping is enabled for the current queue.</p>
</li>
<li>
<p><code>OCI_DEQ_FIRST_MSG_MULTI_GROUP</code> - Indicates that a call to <code>OCIAQDeqArray()</code> resets the position to the beginning of the queue and dequeue messages (possibly across different transaction groups) that are available and match the search criteria, until reaching the <code>iters</code> limit. To distinguish between transaction groups, a new message property, <code>OCI_ATTR_TRANSACTION_NO</code>, is defined. All messages belonging to the same transaction group have the same value for this message property.</p>
</li>
<li>
<p><code>OCI_DEQ_NEXT_MSG_MULTI_GROUP</code> - Indicates that a call to <code>OCIAQDeqArray()</code> dequeues the next set of messages (possibly across different transaction groups) that are available and match the search criteria, until reaching the <code>iters</code> limit. To distinguish between transaction groups, a new message property, <code>OCI_ATTR_TRANSACTION_NO</code>, is defined. All messages belonging to the same transaction group have the same value for this message property.</p>
</li>
</ul>
<p class="subhead2"><a id="LNOCI17931"></a><a id="sthref5508"></a>OCI_ATTR_TRANSFORMATION</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ/WRITE</p>
</dd>
<dt>Description</dt>
<dd>
<p>The name of the transformation that must be applied after the message is dequeued but before returning it to the dequeuing application. The transformation must be created using <code>DBMS_TRANSFORM</code>.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>oratext *</code></p>
</dd>
</dl>
<p class="subhead1"><a id="LNOCI17932"></a><a id="sthref5509"></a>OCI_ATTR_VISIBILITY</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ/WRITE</p>
</dd>
<dt>Description</dt>
<dd>
<p>Specifies whether the new message is dequeued as part of the current transaction. The visibility parameter is ignored when using the <code>BROWSE</code> mode.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>ub4</code></p>
</dd>
<dt>Valid Values</dt>
<dd>
<p>The only valid values are:</p>
</dd>
</dl>
<ul>
<li>
<p><code>OCI_DEQ_ON_COMMIT</code> - The dequeue is part of the current transaction. This is the default.</p>
</li>
<li>
<p><code>OCI_DEQ_IMMEDIATE</code> - The dequeued message is not part of the current transaction. It constitutes a transaction on its own.</p>
</li>
</ul>
<p class="subhead1"><a id="LNOCI17933"></a><a id="sthref5510"></a>OCI_ATTR_WAIT</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ/WRITE</p>
</dd>
<dt>Description</dt>
<dd>
<p>Specifies the wait time if no message is currently available that matches the search criteria. This parameter is ignored if messages in the same group are being dequeued.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>ub4</code></p>
</dd>
<dt>Valid Values</dt>
<dd>
<p>Any <code>ub4</code> value is valid, but the following predefined constants are provided:</p>
</dd>
</dl>
<ul>
<li>
<p><code>OCI_DEQ_WAIT_FOREVER</code> - Wait forever. This is the default.</p>
</li>
<li>
<p><code>OCI_DEQ_NO_WAIT</code> - Do not wait.</p>
</li>
</ul>
<div class="infobox-note">
<p class="notep1">Note:</p>
If the <code>OCI_DEQ_NO_WAIT</code> option is used to poll a queue, then messages are not dequeued after polling an empty queue. Use the <code>OCI_DEQ_FIRST_MSG</code> option instead of the default <code>OCI_DEQ_NEXT_MSG</code> setting of <code>OCI_ATTR_NAVIGATION</code>. You can also use a nonzero wait setting (1 is suggested) of <code>OCI_ATTR_WAIT</code> for the dequeue.</div>
</div>
<!-- class="sect2" -->
<a id="CACJJFGI"></a>
<div id="LNOCI17934" class="sect2">
<h3 class="sect2">OCIAQMsgProperties Descriptor Attributes<a id="sthref5511"></a><a id="sthref5512"></a></h3>
<p>The following attributes are properties of the <code>OCIAQMsgProperties</code> descriptor.</p>
<p class="subhead1"><a id="LNOCI17935"></a><a id="sthref5513"></a>OCI_ATTR_ATTEMPTS</p>
<dl>
<dt>Mode</dt>
<dd>
<p><code>READ</code></p>
</dd>
<dt>Description</dt>
<dd>
<p>Specifies the number of attempts that have been made to dequeue the message. This parameter cannot be set at enqueue time.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>sb4</code></p>
</dd>
<dt>Valid Values</dt>
<dd>
<p>Any <code>sb4</code> value is valid.</p>
</dd>
</dl>
<p class="subhead1"><a id="LNOCI17936"></a><a id="sthref5514"></a>OCI_ATTR_CORRELATION</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ/WRITE</p>
</dd>
<dt>Description</dt>
<dd>
<p>Specifies the identification supplied by the producer for a message at enqueuing.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>oratext *</code></p>
</dd>
<dt>Valid Values</dt>
<dd>
<p>Any string up to 128 bytes is valid.</p>
</dd>
</dl>
<p class="subhead1"><a id="LNOCI17937"></a><a id="sthref5515"></a>OCI_ATTR_DELAY</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ/WRITE</p>
</dd>
<dt>Description</dt>
<dd>
<p>Specifies the number of seconds to delay the enqueued message. The delay represents the number of seconds after which a message is available for dequeuing. Dequeuing by message ID (msgid) overrides the delay specification. A message enqueued with delay set is in the <code>WAITING</code> state; when the delay expires the messages goes to the <code>READY</code> state. <code>DELAY</code> processing requires the queue monitor to be started. Note that the delay is set by the producer who enqueues the message.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>sb4</code></p>
</dd>
<dt>Valid Values</dt>
<dd>
<p>Any sb4 value is valid, but the following predefined constant is available:</p>
</dd>
</dl>
<br />
OCI_MSG_NO_DELAY - Indicates that the message is available for immediate dequeuing.
<p class="subhead1"><a id="LNOCI17938"></a><a id="sthref5516"></a>OCI_ATTR_ENQ_TIME</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ</p>
</dd>
<dt>Description</dt>
<dd>
<p>Specifies the time that the message was enqueued. This value is determined by the system and cannot be set by the user.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>OCIDate</code></p>
</dd>
</dl>
<p class="subhead1"><a id="LNOCI17939"></a><a id="sthref5517"></a>OCI_ATTR_EXCEPTION_QUEUE</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ/WRITE</p>
</dd>
<dt>Description</dt>
<dd>
<p>Specifies the name of the queue to which the message is moved if it cannot be processed successfully. Messages are moved in two cases: If the number of unsuccessful dequeue attempts has exceeded <code>max_retries</code>; or if the message has expired. All messages in the exception queue are in the <code>EXPIRED</code> state.</p>
<p>The default is the exception queue associated with the queue table. If the exception queue specified does not exist at the time of the move, the message is moved to the default exception queue associated with the queue table, and a warning is logged in the alert file. If the default exception queue is used, the parameter returns a <code>NULL</code> value at dequeue time.</p>
<p>This attribute must refer to a valid queue name.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>oratext *</code></p>
</dd>
</dl>
<p class="subhead1"><a id="LNOCI17940"></a><a id="sthref5518"></a>OCI_ATTR_EXPIRATION</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ/WRITE</p>
</dd>
<dt>Description</dt>
<dd>
<p>Specifies the expiration of the message. It determines, in seconds, how long the message is available for dequeuing. This parameter is an offset from the delay. Expiration processing requires the queue monitor to be running.</p>
<p>While waiting for expiration, the message remains in the <code>READY</code> state. If the message is not dequeued before it expires, it is moved to the exception queue in the <code>EXPIRED</code> state.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>sb4</code></p>
</dd>
<dt>Valid Values</dt>
<dd>
<p>Any sb4 value is valid, but the following predefined constant is available:</p>
</dd>
</dl>
<br />
OCI_MSG_NO_EXPIRATION - The message never expires.
<p class="subhead1"><a id="LNOCI17941"></a><a id="sthref5519"></a>OCI_ATTR_MSG_DELIVERY_MODE</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ</p>
</dd>
<dt>Description</dt>
<dd>
<p>After a dequeue call, the OCI client can read the <code>OCI_ATTR_MSG_DELIVERY_MODE</code> attribute in the <code>OCIAQMsgProperties</code> descriptor to determine whether a persistent or buffered message was dequeued. The value of the attribute is <code>OCI_MSG_PERSISTENT</code> for persistent messages and <code>OCI_MSG_BUFFERED</code> for buffered messages.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>ub2</code></p>
</dd>
</dl>
<p class="subhead1"><a id="LNOCI17942"></a><a id="sthref5520"></a>OCI_ATTR_MSG_STATE</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ</p>
</dd>
<dt>Description</dt>
<dd>
<p>Specifies the state of the message at the time of the dequeue. This parameter cannot be set at enqueue time.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>ub4</code></p>
</dd>
<dt>Valid Values</dt>
<dd>
<p>Only the following values are returned:</p>
</dd>
</dl>
<ul>
<li>
<p><code>OCI_MSG_WAITING</code> - The message delay has not yet been reached.</p>
</li>
<li>
<p><code>OCI_MSG_READY</code> - The message is ready to be processed.</p>
</li>
<li>
<p><code>OCI_MSG_PROCESSED</code> - The message has been processed and is retained.</p>
</li>
<li>
<p><code>OCI_MSG_EXPIRED</code> - The message has been moved to the exception queue.</p>
</li>
</ul>
<p class="subhead1"><a id="LNOCI17947"></a><a id="sthref5521"></a>OCI_ATTR_ORIGINAL_MSGID</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ/WRITE</p>
</dd>
<dt>Description</dt>
<dd>
<p>The ID of the message in the last queue that generated this message. When a message is propagated from one queue to another, this attribute identifies the ID of the queue from which it was last propagated. When a message has been propagated through multiple queues, this attribute identifies the ID of the message in the last queue that generated this message, not the first queue.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>OCIRaw *</code></p>
</dd>
</dl>
<p class="subhead1"><a id="LNOCI17943"></a><a id="sthref5522"></a>OCI_ATTR_PRIORITY</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ/WRITE</p>
</dd>
<dt>Description</dt>
<dd>
<p>Specifies the priority of the message. A smaller number indicates a higher priority. The priority can be any number, including negative numbers.</p>
<p>The default value is zero.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>sb4</code></p>
</dd>
</dl>
<p class="subhead1"><a id="LNOCI17944"></a><a id="sthref5523"></a>OCI_ATTR_RECIPIENT_LIST</p>
<dl>
<dt>Mode</dt>
<dd>
<p>WRITE</p>
</dd>
<dt>Description</dt>
<dd>
<p>This parameter is only valid for queues that allow multiple consumers. The default recipients are the queue subscribers. This parameter is not returned to a consumer at dequeue time.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>OCIAQAgent **</code></p>
</dd>
</dl>
<p class="subhead1"><a id="LNOCI17945"></a><a id="sthref5524"></a>OCI_ATTR_SENDER_ID</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ/WRITE</p>
</dd>
<dt>Description</dt>
<dd>
<p>Identifies the original sender of a message.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>OCIAgent *</code></p>
</dd>
</dl>
<p class="subhead1"><a id="LNOCI17946"></a><a id="sthref5525"></a>OCI_ATTR_TRANSACTION_NO</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ</p>
</dd>
<dt>Description</dt>
<dd>
<p>For transaction-grouped queues, this identifies the transaction group of the message. This attribute is populated after a successful <code>OCIAQDeqArray()</code> call. All messages in a group have the same value for this attribute. This attribute cannot be used by the <code>OCIAQEnqArray()</code> call to set the transaction group for an enqueued message.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>oratext *</code></p>
</dd>
</dl>
</div>
<!-- class="sect2" -->
<a id="CACFCFFC"></a>
<div id="LNOCI17948" class="sect2">
<h3 class="sect2">OCIAQAgent Descriptor Attributes<a id="sthref5526"></a><a id="sthref5527"></a></h3>
<p>The following attributes are properties of the <code>OCIAQAgent</code> descriptor.</p>
<p class="subhead1"><a id="LNOCI17949"></a><a id="sthref5528"></a>OCI_ATTR_AGENT_ADDRESS</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ/WRITE</p>
</dd>
<dt>Description</dt>
<dd>
<p>Protocol-specific address of the recipient. If the protocol is 0 (default), the address is of the form [<code><span class="codeinlineitalic">schema</span></code>.]<code><span class="codeinlineitalic">queue</span></code>[<code><span class="codeinlineitalic">@dblink</span></code>].</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>oratext *</code></p>
</dd>
<dt>Valid Values</dt>
<dd>
<p>Can be any string up to 128 bytes.</p>
</dd>
</dl>
<p class="subhead1"><a id="LNOCI17950"></a><a id="sthref5529"></a>OCI_ATTR_AGENT_NAME</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ/WRITE</p>
</dd>
<dt>Description</dt>
<dd>
<p>Name of a producer or consumer of a message.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>oratext *</code></p>
</dd>
<dt>Valid Values</dt>
<dd>
<p>Can be any Oracle Database identifier, up to 30 bytes.</p>
</dd>
</dl>
<p class="subhead1"><a id="LNOCI17951"></a><a id="sthref5530"></a>OCI_ATTR_AGENT_PROTOCOL</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ/WRITE</p>
</dd>
<dt>Description</dt>
<dd>
<p>Protocol to interpret the address and propagate the message. The default (and currently the only supported) value is 0.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>ub1</code></p>
</dd>
<dt>Valid Values</dt>
<dd>
<p>The only valid value is zero, which is also the default.</p>
</dd>
</dl>
</div>
<!-- class="sect2" -->
<a id="i454098"></a>
<div id="LNOCI17952" class="sect2">
<h3 class="sect2"><a id="sthref5531"></a><a id="sthref5532"></a>OCIServerDNs Descriptor Attributes</h3>
<p>The following attributes are properties of the <code>OCIServerDNs</code> descriptor.</p>
<p class="subhead1"><a id="LNOCI17953"></a><a id="sthref5533"></a>OCI_ATTR_DN_COUNT</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ</p>
</dd>
<dt>Description</dt>
<dd>
<p>The number of database servers in the descriptor.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>ub2</code></p>
</dd>
</dl>
<p class="subhead1"><a id="LNOCI17954"></a><a id="sthref5534"></a>OCI_ATTR_SERVER_DN</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ/WRITE</p>
</dd>
<dt>Description</dt>
<dd>
<p>For read mode, this attribute returns the list of Oracle Database distinguished names that are already inserted into the descriptor.</p>
<p>For write mode, this attribute takes the distinguished name of an Oracle Database.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>oratext **/oratext *</code></p>
</dd>
</dl>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="i439205"></a>
<div id="LNOCI17955" class="sect1">
<h2 class="sect1"><a id="sthref5535"></a>Subscription Handle Attributes<a id="sthref5536"></a><a id="sthref5537"></a></h2>
<p>The following attributes are used for the subscription handle.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="oci09adv.htm#i435757">"Publish-Subscribe Notification in OCI"</a></p>
</li>
<li>
<p><a href="oci10new.htm#CJGHFEDD">"Continuous Query Notification"</a></p>
</li>
</ul>
</div>
<p class="subhead1"><a id="LNOCI17956"></a><a id="sthref5538"></a>OCI_ATTR_SERVER_DNS</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ/WRITE</p>
</dd>
<dt>Description</dt>
<dd>
<p>The distinguished names of the Oracle database that the client is interested in for the registration.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>OCIServerDNs *</code></p>
</dd>
</dl>
<p class="subhead1"><a id="LNOCI17957"></a><a id="sthref5539"></a>OCI_ATTR_SUBSCR_CALLBACK</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ/WRITE</p>
</dd>
<dt>Description</dt>
<dd>
<p>Subscription callback. If the attribute <code>OCI_ATTR_SUBSCR_RECPTPROTO</code> is set to <code>OCI_SUBSCR_PROTO_OCI</code> or is left not set, then this attribute must be set before the subscription handle can be passed into the registration call <code>OCISubscriptionRegister()</code>.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>ub4 (void *, OCISubscription *, void *, ub4, void *, ub4)</code></p>
</dd>
</dl>
<p class="subhead1"><a id="LNOCI17958"></a><a id="sthref5540"></a>OCI_ATTR_SUBSCR_CQ_QOSFLAGS</p>
<dl>
<dt>Mode</dt>
<dd>
<p>WRITE</p>
</dd>
<dt>Description</dt>
<dd>
<p>Sets QOS (quality of service flags) specific to continuous query (CQ) notifications. For the possible values you can pass, see the <a href="oci10new.htm#CHDFCCJE">"Subscription Handle Attributes for Continuous Query Notification"</a>.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>ub4 *</code></p>
</dd>
</dl>
<p class="subhead1"><a id="LNOCI17959"></a><a id="sthref5541"></a>OCI_ATTR_SUBSCR_CTX</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ/WRITE</p>
</dd>
<dt>Description</dt>
<dd>
<p>Context that the client wants to get passed to the user callback denoted by <code>OCI_ATTR_SUBSCR_CALLBACK</code> when it gets invoked by the system. If the attribute <code>OCI_ATTR_SUBSCR_RECPTPROTO</code> is set to <code>OCI_SUBSCR_PROTO_OCI</code> or is left not set, then this attribute must be set before the subscription handle can be passed into the registration call <code>OCI Subscription Register()</code>.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>void *</code></p>
</dd>
</dl>
<p class="subhead1"><a id="BAJDBBIC"></a><a id="LNOCI17960"></a><a id="sthref5542"></a><a id="sthref5543"></a>OCI_ATTR_SUBSCR_HOSTADDR</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ/WRITE</p>
</dd>
<dt>Description</dt>
<dd>
<p>Before registering for notification using <code>OCISubscriptionRegister()</code>, specify the client IP (in either IPv4 or IPv6 format) of the listening endpoint of the OCI notification client to which the notification is sent. Enter either IPv4 addresses in dotted decimal format, for example, 192.0.2.34, or IPv6 addresses in hexadecimal format, for example, 2001:0db8:0000:0000:0217:f2ff:fe4b:4ced.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink NETAG1453" href="../../network.112/e41945/layers.htm#NETAG1453"><span class="italic">Oracle Database Net Services Administrator's Guide</span></a> for more information about the IPv6 format for IP addresses</div>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>text *</code></p>
</dd>
<dt>Example</dt>
<dd>
<pre>
/* Set notification client address*/
text ipaddr[16] = "192.0.2.34";
(void) OCIAttrSet((dvoid *) envhp, (ub4) OCI_HTYPE_ENV,
                  (dvoid *) ipaddr, (ub4) strlen(ipaddr),
                  (ub4) OCI_ATTR_SUBSCR_HOSTADDR, errhp);
</pre></dd>
</dl>
<p class="subhead1"><a id="BAJHEBIA"></a><a id="LNOCI17961"></a><a id="sthref5544"></a><a id="sthref5545"></a>OCI_ATTR_SUBSCR_IPADDR</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ/WRITE</p>
</dd>
<dt>Description</dt>
<dd>
<p>The client <a id="sthref5546"></a><a id="sthref5547"></a>IP address (IPv4 or IPv6) on which an OCI client registered for notification listens, to receive notifications. For example, IPv4 address in dotted decimal format such as 192.1.2.34 or IPv6 address in hexadecimal format such as 2001:0db8:0000:0000:0217:f2ff:fe4b:4ced.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink NETAG1453" href="../../network.112/e41945/layers.htm#NETAG1453"><span class="italic">Oracle Database Net Services Administrator's Guide</span></a> for more information about the IPv6 format for IP addresses</div>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>oratext *</code></p>
</dd>
</dl>
<p class="subhead1"><a id="LNOCI17962"></a><a id="sthref5548"></a>OCI_ATTR_SUBSCR_NAME</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ/WRITE</p>
</dd>
<dt>Description</dt>
<dd>
<p>Subscription name. All subscriptions are identified by a subscription name. A subscription name consists of a sequence of bytes of specified length. The length in bytes of the name must be specified as it is not assumed that the name is <code>NULL</code>-terminated. This is important because the name could contain multibyte characters.</p>
<p>Clients can set the subscription name attribute of a subscription handle using an <code>OCIAttrSet()</code> call and by specifying a handle type of <code>OCI_HTYPE_SUBSCR</code> and an attribute type of <code>OCI_ATTR_SUBSCR_NAME</code>.</p>
<p>All of the subscription callbacks need a subscription handle with the <code>OCI_ATTR_SUBSCR_NAME</code> and <code>OCI_ATTR_SUBSCR_NAMESPACE</code> attributes set. If the attributes are not set, an error is returned. The subscription name that is set for the subscription handle must be consistent with its namespace.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>oratext *</code></p>
</dd>
</dl>
<p class="subhead1"><a id="LNOCI17963"></a><a id="sthref5549"></a>OCI_ATTR_SUBSCR_NAMESPACE</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ/WRITE</p>
</dd>
<dt>Description</dt>
<dd>
<p>Namespace in which the subscription handle is used. The valid values for this attribute are <code><a id="sthref5550"></a>OCI_SUBSCR_NAMESPACE_AQ</code>, <code><a id="sthref5551"></a>OCI_SUBSCR_NAMESPACE_DBCHANGE</code>, and <a id="sthref5552"></a><code>OCI_SUBSCR_NAMESPACE_ANONYMOUS</code>.</p>
<p>The subscription name that is set for the subscription handle must be consistent with its namespace.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>ub4 *</code></p>
</dd>
</dl>
<div class="infobox-note">
<p class="notep1">Note:</p>
<code>OCI_OBJECT</code> mode is required when using grouping notifications.</div>
<p class="subhead1"><a id="LNOCI17964"></a><a id="sthref5553"></a>OCI_ATTR_SUBSCR_NTFN_GROUPING_CLASS</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ/WRITE</p>
</dd>
<dt>Description</dt>
<dd>
<p>Notification grouping class. If set to 0 (the default) all other notification grouping attributes must be 0. It is implemented for time in the latest release and is the only current criterion for grouping. Can be set to <code>OCI_SUBSCR_NTFN_GROUPING_CLASS_TIME</code>.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>ub1 *</code></p>
</dd>
</dl>
<p class="subhead1"><a id="LNOCI17965"></a><a id="sthref5554"></a>OCI_ATTR_SUBSCR_NTFN_GROUPING_REPEAT_COUNT</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ/WRITE</p>
</dd>
<dt>Description</dt>
<dd>
<p>How many times to do the grouping. Notification repeat count. Positive integer. Can be set to <code>OCI_NTFN_GROUPING_FOREVER</code> to send grouping notifications forever.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>sb4 *</code></p>
</dd>
</dl>
<p class="subhead1"><a id="LNOCI17966"></a><a id="sthref5555"></a>OCI_ATTR_SUBSCR_NTFN_GROUPING_START_TIME</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ/WRITE</p>
</dd>
<dt>Description</dt>
<dd>
<p>The time grouping starts. Set to a valid <code>TIMESTAMP WITH TIME ZONE</code>. The default is the current <code>TIMESTAMP WITH TIME ZONE</code>.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>OCIDateTime */OCIDateTime **</code></p>
</dd>
</dl>
<p class="subhead1"><a id="LNOCI17967"></a><a id="sthref5556"></a>OCI_ATTR_SUBSCR_NTFN_GROUPING_TYPE</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ/WRITE</p>
</dd>
<dt>Description</dt>
<dd>
<p>The format of the grouping notification: whether a summary of all events in the group or just the last event in the group. Use <code>OCIAttrSet()</code> to set to one of the following notification grouping types: <code>OCI_SUBSCR_NTFN_TYPE_SUMMARY</code> or <code>OCI_SUBSCR_NTFN_TYPE_LAST</code>. Summary of notifications is the default. The other choice is the last notification.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>ub1 *</code></p>
</dd>
</dl>
<p class="subhead1"><a id="LNOCI17968"></a><a id="sthref5557"></a>OCI_ATTR_SUBSCR_NTFN_GROUPING_VALUE</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ/WRITE</p>
</dd>
<dt>Description</dt>
<dd>
<p>Specifies the value for the grouping class. For time, this is the time-period of grouping notifications specified in seconds, that is, the time after which grouping notification is sent periodically until <code>OCI_ATTR_SUBSCR_NTFN_GROUPING_REPEAT_COUNT</code> is exhausted.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>ub4 *</code></p>
</dd>
</dl>
<p class="subhead1"><a id="LNOCI17969"></a><a id="sthref5558"></a>OCI_ATTR_SUBSCR_PAYLOAD</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ/WRITE</p>
</dd>
<dt>Description</dt>
<dd>
<p>Buffer that corresponds to the payload that must be sent along with the notification. The length of the buffer can also be specified in the same set attribute call. This attribute must be set before a post can be performed on a subscription. For the current release, only an untyped (<code>ub1 *</code>) payload is supported.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>ub1 *</code></p>
</dd>
</dl>
<p class="subhead1"><a id="LNOCI17970"></a><a id="sthref5559"></a>OCI_ATTR_SUBSCR_PORTNO</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ/WRITE</p>
</dd>
<dt>Description</dt>
<dd>
<p>The client port used to receive notifications. It is set on the client's environment handle.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>ub4 *</code></p>
</dd>
</dl>
<p class="subhead1"><a id="LNOCI17971"></a><a id="sthref5560"></a>OCI_ATTR_SUBSCR_QOSFLAGS</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ/WRITE</p>
</dd>
<dt>Description</dt>
<dd>
<p>Quality of service levels of the server. The possible settings are:</p>
<ul>
<li>
<p><code>OCI_SUBSCR_QOS_RELIABLE</code> - Reliable. If the database fails, it does not lose notification. Not supported for nonpersistent queues or buffered messaging.</p>
</li>
<li>
<p><code>OCI_SUBSCR_QOS_PURGE_ON_NTFN</code> - Once received, purge notification and remove subscription.</p>
</li>
<li>
<p><code>OCI_SUBSCR_QOS_PAYLOAD</code> - Payload notification.</p>
</li>
</ul>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>ub4 *</code></p>
</dd>
</dl>
<p class="subhead1"><a id="LNOCI17972"></a><a id="sthref5561"></a>OCI_ATTR_SUBSCR_RECPT</p>
<dl>
<dt><span class="bold">Mode</span></dt>
<dd>
<p>READ/WRITE</p>
</dd>
<dt>Description</dt>
<dd>
<p>The name of the recipient of the notification when the attribute <code>OCI_ATTR_SUBSCR_RECPTPROTO</code> is set to <code>OCI_SUBSCR_PROTO_MAIL</code>, <code>OCI_SUBSCR_PROTO_HTTP</code>, or <code>OCI_SUBSCR_PROTO_SERVER</code>.</p>
<p>For <code>OCI_SUBSCR_PROTO_HTTP</code>, <code>OCI_ATTR_SUBSCR_RECPT</code> denotes the HTTP URL (for example, http://www.oracle.com:80) to which notification is sent. The validity of the HTTP URL is never checked by the database.</p>
<p>For <code>OCI_SUBSCR_PROTO_MAIL</code>, <code>OCI_ATTR_SUBSCR_RECPT</code> denotes the email address (for example, xyz@oracle.com) to which the notification is sent. The validity of the email address is never checked by the database system.</p>
<p>For <code>OCI_SUBSCR_PROTO_SERVER</code>, <code>OCI_ATTR_SUBSCR_RECPT</code> denotes the database procedure (for example: <code>schema.procedure</code>) that is invoked when there is a notification. The subscriber must have appropriate permissions on the procedure for it to be executed.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="oci09adv.htm#i457165">"Notification Procedure"</a> for information about procedure definition</div>
</dd>
</dl>
<dl>
<dt>Attribute Data Type</dt>
<dd>
<p><code>oratext *</code></p>
</dd>
</dl>
<p class="subhead1"><a id="LNOCI17973"></a><a id="sthref5562"></a>OCI_ATTR_SUBSCR_RECPTPRES</p>
<dl>
<dt><span class="bold">Mode</span></dt>
<dd>
<p>READ/WRITE</p>
</dd>
<dt>Description</dt>
<dd>
<p>The presentation with which the client wants to receive the notification. The valid values for this are <code>OCI_SUBSCR_PRES_DEFAULT</code> and <code>OCI_SUBSCR_PRES_XML</code>.</p>
<p>If not set, this attribute defaults to <code>OCI_SUBSCR_PRES_DEFAULT</code>.</p>
<p>For event notification in XML presentation, set this attribute to <code>OCI_SUBSCR_PRES_XML</code>. Otherwise, leave it unset or set it to <code>OCI_SUBSCR_PRES_DEFAULT</code>.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>ub4</code></p>
</dd>
</dl>
<p class="subhead1"><a id="LNOCI17974"></a><a id="sthref5563"></a>OCI_ATTR_SUBSCR_RECPTPROTO</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ/WRITE</p>
</dd>
<dt>Description</dt>
<dd>
<p>The protocol with which the client wants to receive the notification. The valid values for this are:</p>
</dd>
</dl>
<ul>
<li>
<p><a id="sthref5564"></a><code>OCI_SUBSCR_PROTO_OCI</code></p>
</li>
<li>
<p><a id="sthref5565"></a><code>OCI_SUBSCR_PROTO_MAIL</code></p>
</li>
<li>
<p><a id="sthref5566"></a><code>OCI_SUBSCR_PROTO_SERVER</code></p>
</li>
<li>
<p><a id="sthref5567"></a><code>OCI_SUBSCR_PROTO_HTTP</code></p>
</li>
</ul>
<p>If an OCI client wants to receive the event notification, then you should set this attribute to <code>OCI_SUBSCR_PROTO_OCI</code>.</p>
<p>If you want an email to be sent on event notification, then set this attribute to <code>OCI_SUBSCR_PROTO_MAIL</code>. If you want a PL/SQL procedure to be invoked in the database on event notification, then set this attribute to <code>OCI_SUBSCR_PROTO_SERVER</code>. If you want an HTTP URL to be posted to on event notification, then set this attribute to <code>OCI_SUBSCR_PROTO_HTTP</code>.</p>
<p>If not set, this attribute defaults to <code>OCI_SUBSCR_PROTO_OCI</code>.</p>
<p>For <code>OCI_SUBSCR_PROTO_OCI</code>, the attributes <code>OCI_ATTR_SUBSCR_CALLBACK</code> and <code>OCI_ATTR_SUBSCR_CTX</code> must be set before the subscription handle can be passed into the registration call <code>OCISubscriptionRegister()</code>.</p>
<p>For <code>OCI_SUBSCR_PROTO_MAIL</code>, <code>OCI_SUBSCR_PROTO_SERVER</code>, and <code>OCI_SUBSCR_PROTO_HTTP</code>, the attribute <code>OCI_ATTR_SUBSCR_RECPT</code> must be set before the subscription handle can be passed into the registration call <code>OCISubscriptionRegister()</code>.</p>
<dl>
<dt>Attribute Data Type</dt>
<dd>
<p><code>ub4 *</code></p>
</dd>
</dl>
<p class="subhead1"><a id="LNOCI17975"></a><a id="sthref5568"></a>OCI_ATTR_SUBSCR_TIMEOUT</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ/WRITE</p>
</dd>
<dt>Description</dt>
<dd>
<p>Registration timeout interval in seconds. If 0 or not specified, then the registration is active until the subscription is explicitly unregistered.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>ub4 *</code></p>
</dd>
</dl>
<a id="BAJHGABI"></a>
<div id="LNOCI17976" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><a id="sthref5569"></a><a id="sthref5570"></a>Continuous Query Notification Attributes</h3>
<p>The following attributes are used for continuous query notification.</p>
<p class="subhead1"><a id="LNOCI17977"></a><a id="sthref5571"></a>OCI_ATTR_CHNF_CHANGELAG</p>
<dl>
<dt>Mode</dt>
<dd>
<p>WRITE</p>
</dd>
<dt>Description</dt>
<dd>
<p>The number of transactions that the client is to lag in continuous query notifications.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>ub4 *</code></p>
</dd>
</dl>
<p class="subhead1"><a id="LNOCI17978"></a><a id="sthref5572"></a>OCI_ATTR_CHNF_OPERATIONS</p>
<dl>
<dt>Mode</dt>
<dd>
<p>WRITE</p>
</dd>
<dt>Description</dt>
<dd>
<p>Used to filter notifications based on operation type.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>ub4 *</code></p>
</dd>
</dl>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="oci10new.htm#CJGHFEDD">"Continuous Query Notification"</a> for details about the flag values</div>
<p class="subhead1"><a id="LNOCI17979"></a><a id="sthref5573"></a>OCI_ATTR_CHNF_ROWIDS</p>
<dl>
<dt>Mode</dt>
<dd>
<p>WRITE</p>
</dd>
<dt>Description</dt>
<dd>
<p>If <code>TRUE</code>, the continuous query notification message includes row-level details, such as operation type and <code>ROWID</code>. The default is <code>FALSE</code>.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>boolean *</code></p>
</dd>
</dl>
<p class="subhead1"><a id="LNOCI17980"></a><a id="sthref5574"></a>OCI_ATTR_CHNF_TABLENAMES</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ</p>
</dd>
<dt>Description</dt>
<dd>
<p>Attributes provided to retrieve the list of table names that were registered. These attributes are available from the subscription handle after the query is executed.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>OCIColl **</code></p>
</dd>
</dl>
</div>
<!-- class="sect2" -->
<a id="BAJCIGDB"></a>
<div id="LNOCI17981" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><a id="sthref5575"></a><a id="sthref5576"></a>Continuous Query Notification Descriptor Attributes</h3>
<p>The following attributes are used for the continuous query notification descriptor.</p>
<p class="subhead1"><a id="LNOCI17982"></a><a id="sthref5577"></a>OCI_ATTR_CHDES_DBNAME</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ</p>
</dd>
<dt>Description</dt>
<dd>
<p>Name of the database.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>oratext **</code></p>
</dd>
</dl>
<p class="subhead1"><a id="LNOCI17983"></a><a id="sthref5578"></a>OCI_ATTR_CHDES_NFTYPE</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ</p>
</dd>
<dt>Description</dt>
<dd>
<p>Flags describing the notification type.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>ub4 *</code></p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="oci10new.htm#CJGHFEDD">"Continuous Query Notification"</a> for the flag values</div>
</dd>
</dl>
<p class="subhead1"><a id="LNOCI17984"></a><a id="sthref5579"></a>OCI_ATTR_CHDES_ROW_OPFLAGS</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ</p>
</dd>
<dt>Description</dt>
<dd>
<p>Operation type: <code>INSERT</code>, <code>UPDATE</code>, <code>DELETE</code>, or <code>OTHER</code>.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>ub4 *</code></p>
</dd>
</dl>
<p class="subhead1"><a id="LNOCI17985"></a><a id="sthref5580"></a>OCI_ATTR_CHDES_ROW_ROWID</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ</p>
</dd>
<dt>Description</dt>
<dd>
<p>String representation of a <code>ROWID</code>.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>oratext **</code></p>
</dd>
</dl>
<p class="subhead1"><a id="LNOCI17986"></a><a id="sthref5581"></a>OCI_ATTR_CHDES_TABLE_CHANGES</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ</p>
</dd>
<dt>Description</dt>
<dd>
<p>A collection type describing operations on tables. Each element of the collection is a table continuous query descriptors (<code>OCITableChangeDesc *</code>) of type <code>OCI_DTYPE_TABLE_CHDES</code> that has the attributes that begin with <code>OCI_ATTR_CHDES_TABLE</code>. See the following entries.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>OCIColl **</code></p>
</dd>
</dl>
<p class="subhead1"><a id="LNOCI17987"></a><a id="sthref5582"></a>OCI_ATTR_CHDES_TABLE_NAME</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ</p>
</dd>
<dt>Description</dt>
<dd>
<p>Schema and table name. <code>HR.EMPLOYEES</code>, for example.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>oratext **</code></p>
</dd>
</dl>
<p class="subhead1"><a id="LNOCI17988"></a><a id="sthref5583"></a>OCI_ATTR_CHDES_TABLE_OPFLAGS</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ</p>
</dd>
<dt>Description</dt>
<dd>
<p>Flags describing the operations on the table.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>ub4 *</code></p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="oci10new.htm#CHDFHJJB">"OCI_DTYPE_TABLE_CHDES"</a> for the flag values</div>
</dd>
</dl>
<p class="subhead1"><a id="LNOCI17989"></a><a id="sthref5584"></a>OCI_ATTR_CHDES_TABLE_ROW_CHANGES</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ</p>
</dd>
<dt>Description</dt>
<dd>
<p>An embedded collection describing the changes to the rows of the table. Each element of the collection is a row continuous query descriptor (<code>OCIRowChangeDesc *</code>) of type <code>OCI_DTYPE_ROW_CHDES</code> that has the attributes <code>OCI_ATTR_CHDES_ROW_OPFLAGS</code> and <code>OCI_ATTR_CHDES_ROW_ROWID</code>.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>OCIColl **</code></p>
</dd>
</dl>
</div>
<!-- class="sect2" -->
<a id="CHDBCADH"></a>
<div id="LNOCI17990" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><a id="sthref5585"></a><a id="sthref5586"></a>Notification Descriptor Attributes</h3>
<p>The following are attributes of the descriptor <code>OCI_DTYPE_AQNFY</code>.</p>
<p class="subhead1"><a id="LNOCI17991"></a><a id="sthref5587"></a>OCI_ATTR_AQ_NTFN_GROUPING_COUNT</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ</p>
</dd>
<dt>Description</dt>
<dd>
<p>For AQ namespace. Count of notifications received in the group.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>ub4 *</code></p>
</dd>
</dl>
<p class="subhead1"><a id="LNOCI17992"></a><a id="sthref5588"></a>OCI_ATTR_AQ_NTFN_GROUPING_ MSGID_ARRAY</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ</p>
</dd>
<dt>Description</dt>
<dd>
<p>For AQ namespace. The group: an OCI Collection of message IDs.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>OCIColl **</code></p>
</dd>
</dl>
<p class="subhead1"><a id="LNOCI17993"></a><a id="sthref5589"></a>OCI_ATTR_CONSUMER_NAME</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ</p>
</dd>
<dt>Description</dt>
<dd>
<p>Consumer name of the notification.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>oratext *</code></p>
</dd>
</dl>
<p class="subhead1"><a id="LNOCI17996"></a><a id="sthref5590"></a>OCI_ATTR_MSG_PROP</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ</p>
</dd>
<dt>Description</dt>
<dd>
<p>Message properties.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>OCIAQMsgProperties **</code></p>
</dd>
</dl>
<p class="subhead1"><a id="LNOCI17994"></a><a id="sthref5591"></a>OCI_ATTR_NFY_FLAGS</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ</p>
</dd>
<dt>Description</dt>
<dd>
<p>0 = regular, 1 = timeout notification, 2 = grouping notification.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>ub4 *</code></p>
</dd>
</dl>
<p class="subhead1"><a id="LNOCI17995"></a><a id="sthref5592"></a>OCI_ATTR_NFY_MSGID</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ</p>
</dd>
<dt>Description</dt>
<dd>
<p>Message ID.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>OCIRaw *</code></p>
</dd>
</dl>
<p class="subhead1"><a id="LNOCI17997"></a><a id="sthref5593"></a>OCI_ATTR_QUEUE_NAME</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ</p>
</dd>
<dt>Description</dt>
<dd>
<p>The queue name of the notification.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>oratext *</code></p>
</dd>
</dl>
</div>
<!-- class="sect2" -->
<a id="CACIEICJ"></a>
<div id="LNOCI17998" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Invalidated Query Attributes</h3>
<p>This section describes <code>OCI_DTYPE_CQDES</code> attributes. See <a href="oci10new.htm#CHDHFFDB">"OCI_DTYPE_CQDES"</a> for more information.</p>
<p class="subhead1"><a id="LNOCI18000"></a><a id="sthref5594"></a>OCI_ATTR_CQDES_OPERATION</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ</p>
</dd>
<dt>Description</dt>
<dd>
<p>The operation that occurred on the query. It can be one of two values: <code>OCI_EVENT_QUERYCHANGE</code> (query result set change) or <code>OCI_EVENT_DEREG</code> (query unregistered).</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>ub4 *</code></p>
</dd>
</dl>
<p class="subhead1"><a id="LNOCI18001"></a><a id="sthref5595"></a>OCI_ATTR_CQDES_QUERYID</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ</p>
</dd>
<dt>Description</dt>
<dd>
<p>Query ID of the query that was invalidated.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>ub8 *</code></p>
</dd>
</dl>
<p class="subhead1"><a id="LNOCI18002"></a><a id="sthref5596"></a>OCI_ATTR_CQDES_TABLE_CHANGES</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ</p>
</dd>
<dt>Description</dt>
<dd>
<p>A collection of table continuous query descriptors describing DML or DDL operations on tables that caused the query result set change. Each element of the collection is of type <code>OCI_DTYPE_TABLE_CHDES</code>.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>OCIColl *</code></p>
</dd>
</dl>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="i444702"></a>
<div id="LNOCI17999" class="sect1">
<h2 class="sect1">Direct Path Loading Handle Attributes<a id="sthref5597"></a><a id="sthref5598"></a></h2>
<p>The following attributes are used for the direct path loading handle.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="oci13obn.htm#i426339">"Direct Path Loading Overview"</a> and<a href="oci13obn.htm#i426844">"Direct Path Loading of Object Types"</a> for information about direct path loading and allocating the direct path handles</div>
<a id="i453506"></a>
<div id="LNOCI18003" class="sect2">
<h3 class="sect2">Direct Path Context Handle (OCIDirPathCtx) Attributes<a id="sthref5599"></a><a id="sthref5600"></a></h3>
<p>The following attributes are used for the direct path context handle.</p>
<p class="subhead1"><a id="LNOCI18004"></a><a id="sthref5601"></a>OCI_ATTR_BUF_SIZE</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ/WRITE</p>
</dd>
<dt>Description</dt>
<dd>
<p>Sets the size of the stream transfer buffer. Default value is 64 KB.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>ub4 */ub4 *</code></p>
</dd>
</dl>
<p class="subhead1"><a id="LNOCI18005"></a>OCI_ATTR_CHARSET_ID<a id="sthref5602"></a></p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ/WRITE</p>
</dd>
<dt>Description</dt>
<dd>
<p>Default character set ID for the character data. Note that the character set ID can be overridden at the column level. If the character set ID is not specified at the column level or the table level, then the Global support environment setting is used.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>ub2 */ub2 *</code></p>
</dd>
</dl>
<p class="subhead1"><a id="LNOCI18006"></a><a id="sthref5603"></a>OCI_ATTR_DATEFORMAT</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ/WRITE</p>
</dd>
<dt>Description</dt>
<dd>
<p>Default date format string for <a id="sthref5604"></a><code>SQLT_CHR</code> to <code>DTYDAT</code> conversions. Note that the date format string can be overridden at the column level. If date format string is not specified at the column level or the table level, then the Global Support environment setting is used.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>oratext **/oratext *</code></p>
</dd>
</dl>
<p class="subhead1"><a id="LNOCI18007"></a><a id="sthref5605"></a>OCI_ATTR_DIRPATH_DCACHE_DISABLE</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ/WRITE</p>
</dd>
<dt>Description</dt>
<dd>
<p>Setting this attribute to 1 indicates that the date cache is to be disabled if exceeded. The default value is 0, which means that lookups in the cache continue on cache overflow.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="oci13obn.htm#i431608">"Using a Date Cache in Direct Path Loading of Dates in OCI"</a> for a complete description of this attribute and of the four following attributes</div>
</dd>
</dl>
<dl>
<dt>Attribute Data Type</dt>
<dd>
<p><code>ub1 */ub1 *</code></p>
</dd>
</dl>
<p class="subhead1"><a id="LNOCI18008"></a><a id="sthref5606"></a>OCI_ATTR_DIRPATH_DCACHE_HITS</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ</p>
</dd>
<dt>Description</dt>
<dd>
<p>Queries the number of date cache hits.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>ub4 *</code></p>
</dd>
</dl>
<p class="subhead1"><a id="LNOCI18009"></a><a id="sthref5607"></a>OCI_ATTR_DIRPATH_DCACHE_MISSES</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ</p>
</dd>
<dt>Description</dt>
<dd>
<p>Queries the current number of date cache misses.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>ub4 *</code></p>
</dd>
</dl>
<p class="subhead1"><a id="LNOCI18010"></a><a id="sthref5608"></a>OCI_ATTR_DIRPATH_DCACHE_NUM</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ</p>
</dd>
<dt>Description</dt>
<dd>
<p>Queries the current number of entries in a date cache.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>ub4 *</code></p>
</dd>
</dl>
<p class="subhead1"><a id="LNOCI18011"></a><a id="sthref5609"></a>OCI_ATTR_DIRPATH_DCACHE_SIZE</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ/WRITE</p>
</dd>
<dt>Description</dt>
<dd>
<p>Sets the date cache size (in elements) for a table. To disable the date cache, set this to 0, which is the default value.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>ub4 *</code>/<code>ub4 *</code></p>
</dd>
</dl>
<p class="subhead1"><a id="i457359"></a><a id="LNOCI18012"></a><a id="sthref5610"></a>OCI_ATTR_DIRPATH_INDEX_MAINT_METHOD</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ/WRITE</p>
</dd>
<dt>Description</dt>
<dd>
<p>Performs index row insertion on a per-row basis.</p>
<p>Valid value is:</p>
<p><code>OCI_DIRPATH_INDEX_MAINT_SINGLE_ROW</code></p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>ub1 *</code>/<code>ub1 *</code></p>
</dd>
</dl>
<p class="subhead1"><a id="LNOCI18013"></a><a id="sthref5611"></a>OCI_ATTR_DIRPATH_MODE</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ/WRITE</p>
</dd>
<dt>Description</dt>
<dd>
<p>Mode of the direct path context:</p>
</dd>
</dl>
<ul>
<li>
<p><code>OCI_DIRPATH_LOAD</code> - Load operation (default)</p>
</li>
<li>
<p><code>OCI_DIRPATH_CONVERT</code> - Convert-only operation</p>
</li>
</ul>
<dl>
<dt>Attribute Data Type</dt>
<dd>
<p><code>ub1 */ub1 *</code></p>
</dd>
</dl>
<p class="subhead1"><a id="BAJGFDEH"></a><a id="LNOCI18014"></a><a id="sthref5612"></a>OCI_ATTR_DIRPATH_NO_INDEX_ERRORS</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ/WRITE</p>
</dd>
<dt>Description</dt>
<dd>
<p>When <code>OCI_ATTR_DIRPATH_NO_INDEX_ERRORS</code> is 1, indexes are not set as unusable at any time during the load. If any index errors are detected, the load is aborted. That is, no rows are loaded, and the indexes are left as is. The default is 0.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p>ub1 */ub1 *</p>
</dd>
</dl>
<p class="subhead1"><a id="LNOCI18015"></a><a id="sthref5613"></a>OCI_ATTR_DIRPATH_NOLOG</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ/WRITE</p>
</dd>
<dt>Description</dt>
<dd>
<p>The <code>NOLOG</code> attribute of each segment determines whether image redo or invalidation redo is generated:</p>
</dd>
</dl>
<ul>
<li>
<p>0 - Use the attribute of the segment being loaded.</p>
</li>
<li>
<p>1 - No logging. Overrides DDL statement, if necessary.</p>
</li>
</ul>
<dl>
<dt>Attribute Data Type</dt>
<dd>
<p><code>ub1 */ub1 *</code></p>
</dd>
</dl>
<p class="subhead1"><a id="LNOCI18016"></a><a id="sthref5614"></a>OCI_ATTR_DIRPATH_OBJ_CONSTR</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ/WRITE</p>
</dd>
<dt>Description</dt>
<dd>
<p>Indicates the object type of a substitutable object table:</p>
<pre>
OraText *obj_type; /* stores an object type name */
OCIAttrSet((void *)dpctx,
                           (ub4)OCI_HTYPE_DIRPATH_CTX,
                           (void *) obj_type,
                           (ub4)strlen((const char *) obj_type),
                           (ub4)OCI_ATTR_DIRPATH_OBJ_CONSTR, errhp);
</pre></dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>oratext **/oratext *</code></p>
</dd>
</dl>
<p class="subhead1"><a id="i456350"></a><a id="LNOCI18017"></a><a id="sthref5615"></a>OCI_ATTR_DIRPATH_PARALLEL</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ/WRITE</p>
</dd>
<dt>Description</dt>
<dd>
<p>Setting this value to 1 allows multiple load sessions to load the same segment concurrently. The default is 0 (not parallel).</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>ub1 */ub1 *</code></p>
</dd>
</dl>
<p class="subhead1"><a id="i457360"></a><a id="LNOCI18018"></a><a id="sthref5616"></a>OCI_ATTR_DIRPATH_SKIPINDEX_METHOD</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ/WRITE</p>
</dd>
<dt>Description</dt>
<dd>
<p>Indicates how the handling of unusable indexes is performed.</p>
<p>Valid values are:</p>
</dd>
</dl>
<ul>
<li>
<p><code>OCI_DIRPATH_INDEX_MAINT_SKIP_UNUSABLE</code> (skip unusable indexes)</p>
</li>
<li>
<p><code>OCI_DIRPATH_INDEX_MAINT_DONT_SKIP_UNUSABLE</code> (do not skip unusable indexes)</p>
</li>
<li>
<p><code>OCI_DIRPATH_INDEX_MAINT_SKIP_ALL</code> (skip all index maintenance)</p>
</li>
</ul>
<dl>
<dt>Attribute Data Type</dt>
<dd>
<p><code>ub1 *</code>/<code>ub1 *</code></p>
</dd>
</dl>
<p class="subhead1"><a id="LNOCI18019"></a><a id="sthref5617"></a>OCI_ATTR_LIST_COLUMNS</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ</p>
</dd>
<dt>Description</dt>
<dd>
<p>Returns the handle to the parameter descriptor for the column list associated with the direct path context. The column list parameter descriptor can be retrieved after the number of columns is set with the <code>OCI_ATTR_NUM_COLS</code> attribute.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#BAJIIHDA">"Accessing Column Parameter Attributes"</a></div>
</dd>
</dl>
<dl>
<dt>Attribute Data Type</dt>
<dd>
<p><code>OCIParam* *</code></p>
</dd>
</dl>
<p class="subhead1"><a id="LNOCI18020"></a><a id="sthref5618"></a>OCI_ATTR_NAME</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ/WRITE</p>
</dd>
<dt>Description</dt>
<dd>
<p>Name of the table to be loaded into.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>oratext**/oratext *</code></p>
</dd>
</dl>
<p class="subhead1"><a id="LNOCI18021"></a><a id="sthref5619"></a>OCI_ATTR_NUM_COLS</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ/WRITE</p>
</dd>
<dt>Description</dt>
<dd>
<p>Number of columns being loaded in the table.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>ub2 */ub2 *</code></p>
</dd>
</dl>
<p class="subhead1"><a id="LNOCI18022"></a><a id="sthref5620"></a>OCI_ATTR_NUM_ROWS</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ/WRITE</p>
</dd>
<dt>Description</dt>
<dd>
<p>Read: The number of rows loaded so far.</p>
<p>Write: The number of rows to be allocated for the direct path and the direct path function column arrays.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>ub2 */ub2 *</code></p>
</dd>
</dl>
<p class="subhead1"><a id="LNOCI18023"></a><a id="sthref5621"></a>OCI_ATTR_SCHEMA_NAME</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ/WRITE</p>
</dd>
<dt>Description</dt>
<dd>
<p>Name of the schema where the table being loaded resides. If not specified, the schema defaults to that of the connected user.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>oratext **/oratext *</code></p>
</dd>
</dl>
<p class="subhead1"><a id="LNOCI18024"></a><a id="sthref5622"></a>OCI_ATTR_SUB_NAME</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ/WRITE</p>
</dd>
<dt>Description</dt>
<dd>
<p>Name of the partition or subpartition to be loaded. If not specified, the entire table is loaded. The name must be a valid partition or subpartition name that belongs to the table.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>oratext **/oratext *</code></p>
</dd>
</dl>
</div>
<!-- class="sect2" -->
<a id="CACIHBJB"></a>
<div id="LNOCI18025" class="sect2">
<h3 class="sect2"><a id="sthref5623"></a><a id="sthref5624"></a>Direct Path Function Context Handle (OCIDirPathFuncCtx) Attributes</h3>
<p>For further explanations of these attributes, see <a href="oci13obn.htm#i430560">"Direct Path Function Context and Attributes"</a>.</p>
<p class="subhead1"><a id="LNOCI18026"></a><a id="sthref5625"></a>OCI_ATTR_DIRPATH_EXPR_TYPE</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ/WRITE</p>
</dd>
<dt>Description</dt>
<dd>
<p>Indicates the type of expression specified in <code>OCI_ATTR_NAME</code> in the function context of a nonscalar column.</p>
<p>Valid values are:</p>
</dd>
</dl>
<ul>
<li>
<p><code>OCI_DIRPATH_EXPR_OBJ_CONSTR</code> (the object type name of a column object)</p>
</li>
<li>
<p><code>OCI_DIRPATH_EXPR_REF_TBLNAME</code> (table name of a reference object)</p>
</li>
<li>
<p><code>OCI_DIRPATH_EXPR_SQL</code> (a SQL string to derive the column value)</p>
</li>
</ul>
<dl>
<dt>Attribute Data Type</dt>
<dd>
<p><code>ub1 */ub1 *</code></p>
</dd>
</dl>
<p class="subhead1"><a id="LNOCI18027"></a><a id="sthref5626"></a>OCI_ATTR_LIST_COLUMNS</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ</p>
</dd>
<dt>Description</dt>
<dd>
<p>Returns the handle to the parameter descriptor for the column list associated with the direct path function context. The column list parameter descriptor can be retrieved after the number of columns (number of attributes or arguments associated with the nonscalar column) is set with the <code>OCI_ATTR_NUM_COLS</code> attribute.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#BAJIIHDA">"Accessing Column Parameter Attributes"</a></div>
</dd>
</dl>
<dl>
<dt>Attribute Data Type</dt>
<dd>
<p><code>OCIParam**</code></p>
</dd>
</dl>
<p class="subhead1"><a id="LNOCI18028"></a><a id="sthref5627"></a>OCI_ATTR_NAME</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ/WRITE</p>
</dd>
<dt>Description</dt>
<dd>
<p>The object type name if the function context is describing a column object, a SQL function if the function context is describing a SQL string, or a reference table name if the function context is describing a <code>REF</code> column.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>oratext **/oratext *</code></p>
</dd>
</dl>
<p class="subhead1"><a id="LNOCI18029"></a><a id="sthref5628"></a>OCI_ATTR_NUM_COLS</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ/WRITE</p>
</dd>
<dt>Description</dt>
<dd>
<p>The number of the object attributes to load if the column is a column object, or the number of arguments to process if the column is a SQL string or a REF column. This parameter must be set before the column list can be retrieved.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>ub2 */ub2 *</code></p>
</dd>
</dl>
<p class="subhead1"><a id="LNOCI18030"></a><a id="sthref5629"></a>OCI_ATTR_NUM_ROWS</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ</p>
</dd>
<dt>Description</dt>
<dd>
<p>The number of rows loaded so far.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>ub4 *</code></p>
</dd>
</dl>
</div>
<!-- class="sect2" -->
<a id="i453507"></a>
<div id="LNOCI18031" class="sect2">
<h3 class="sect2">Direct Path Function Column Array Handle (OCIDirPathColArray) Attributes<a id="sthref5630"></a><a id="sthref5631"></a></h3>
<p>The following attributes are used for the direct path function column array handle.</p>
<p class="subhead1"><a id="LNOCI18032"></a><a id="sthref5632"></a>OCI_ATTR_COL_COUNT</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ</p>
</dd>
<dt>Description</dt>
<dd>
<p>Last column of the last row processed.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>ub2 *</code></p>
</dd>
</dl>
<p class="subhead1"><a id="LNOCI18033"></a><a id="sthref5633"></a>OCI_ATTR_NUM_COLS</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ</p>
</dd>
<dt>Description</dt>
<dd>
<p>Column dimension of the column array.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>ub2 *</code></p>
</dd>
</dl>
<p class="subhead1"><a id="LNOCI18034"></a><a id="sthref5634"></a>OCI_ATTR_NUM_ROWS</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ</p>
</dd>
<dt>Description</dt>
<dd>
<p>Row dimension of the column array.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>ub4 *</code></p>
</dd>
</dl>
<p class="subhead1"><a id="LNOCI18035"></a><a id="sthref5635"></a>OCI_ATTR_ROW_COUNT</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ</p>
</dd>
<dt>Description</dt>
<dd>
<p>Number of rows successfully converted in the last call to <code>OCIDirPathColArrayToStream()</code>.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>ub4 *</code></p>
</dd>
</dl>
</div>
<!-- class="sect2" -->
<a id="CACBCHFA"></a>
<div id="LNOCI18036" class="sect2">
<h3 class="sect2">Direct Path Stream Handle (OCIDirPathStream) Attributes<a id="sthref5636"></a><a id="sthref5637"></a></h3>
<p>The following attributes are used for the direct path stream handle.</p>
<p class="subhead1"><a id="LNOCI18037"></a><a id="sthref5638"></a>OCI_ATTR_BUF_ADDR</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ</p>
</dd>
<dt>Description</dt>
<dd>
<p>Buffer address of the beginning of the stream data.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>ub1 **</code></p>
</dd>
</dl>
<p class="subhead1"><a id="LNOCI18038"></a><a id="sthref5639"></a>OCI_ATTR_BUF_SIZE</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ</p>
</dd>
<dt>Description</dt>
<dd>
<p>Size of the stream data in bytes.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>ub4 *</code></p>
</dd>
</dl>
<p class="subhead1"><a id="LNOCI18039"></a><a id="sthref5640"></a>OCI_ATTR_ROW_COUNT</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ</p>
</dd>
<dt>Description</dt>
<dd>
<p>Number of rows successfully loaded by the last <code>OCIDirPathLoadStream()</code> call.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>ub4 *</code></p>
</dd>
</dl>
<p class="subhead1"><a id="LNOCI18040"></a><a id="sthref5641"></a>OCI_ATTR_STREAM_OFFSET</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ</p>
</dd>
<dt>Description</dt>
<dd>
<p>Offset into the stream buffer of the last processed row.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>ub4 *</code></p>
</dd>
</dl>
</div>
<!-- class="sect2" -->
<a id="i448019"></a>
<div id="LNOCI18041" class="sect2">
<h3 class="sect2">Direct Path Column Parameter Attributes<a id="sthref5642"></a><a id="sthref5643"></a></h3>
<p>The application specifies which columns are to be loaded, and the external format of the data by setting attributes on each column parameter descriptor. The column parameter descriptors are obtained as parameters of the column parameter list by <code>OCIParamGet()</code>. The column parameter list of the table is obtained from the <code>OCI_ATTR_LIST_COLUMNS</code> attribute of the direct path context. If a column is nonscalar, then its column parameter list is obtained from the <code>OCI_ATTR_LIST_COLUMNS</code> attribute of its direct path function context.</p>
<p>Note that all parameters are 1-based.</p>
<a id="BAJIIHDA"></a>
<div id="LNOCI18042" class="sect3">
<h4 class="sect3">Accessing Column Parameter Attributes</h4>
<p>The following code example illustrates the use of the direct path column parameter attributes for scalar columns. Before the attributes are accessed, you must first set the number of columns to be loaded and get the column parameter list from the <code>OCI_ATTR_LIST_COLUMNS</code> attribute.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="oci13obn.htm#i426660">"Direct Path Load Examples for Scalar Columns"</a> for the data structures defined in the listings</div>
<pre>
...
  /* set number of columns to be loaded */
  OCI_CHECK(ctlp-&gt;errhp_ctl, OCI_HTYPE_ERROR, ociret, ctlp,
            OCIAttrSet((void *)dpctx, (ub4)OCI_HTYPE_DIRPATH_CTX,
                       (void *)&amp;tblp-&gt;ncol_tbl,
                       (ub4)0, (ub4)OCI_ATTR_NUM_COLS, ctlp-&gt;errhp_ctl));

  /* get the column parameter list */
  OCI_CHECK(ctlp-&gt;errhp_ctl, OCI_HTYPE_ERROR, ociret, ctlp,
            OCIAttrGet((void *)dpctx, OCI_HTYPE_DIRPATH_CTX,
                       (void *)&amp;ctlp-&gt;colLstDesc_ctl, (ub4 *)0,
                       OCI_ATTR_LIST_COLUMNS, ctlp-&gt;errhp_ctl));
</pre>
<p>Now you can set the parameter attributes.</p>
<pre>
  /* set the attributes of each column by getting a parameter handle on each
   * column, then setting attributes on the parameter handle for the column.
   * Note that positions within a column list descriptor are 1-based. */

   for (i = 0, pos = 1, colp = tblp-&gt;col_tbl, fldp = tblp-&gt;fld_tbl;
       i &lt; tblp-&gt;ncol_tbl;
       i++, pos++, colp++, fldp++)
  {
    /* get parameter handle on the column */
    OCI_CHECK(ctlp-&gt;errhp_ctl, OCI_HTYPE_ERROR, ociret, ctlp,
              OCIParamGet((const void  *)ctlp-&gt;colLstDesc_ctl,
                          (ub4)OCI_DTYPE_PARAM, ctlp-&gt;errhp_ctl,
                          (void  **)&amp;colDesc, pos));

    colp-&gt;id_col = i;                  /* position in column array */

    /* set external attributes on the column */
    /* column name */
    OCI_CHECK(ctlp-&gt;errhp_ctl, OCI_HTYPE_ERROR, ociret, ctlp,
              OCIAttrSet((void  *)colDesc, (ub4)OCI_DTYPE_PARAM,
                         (void  *)colp-&gt;name_col,
                         (ub4)strlen((const char *)colp-&gt;name_col),
                         (ub4)OCI_ATTR_NAME, ctlp-&gt;errhp_ctl));

    /* column type */
    OCI_CHECK(ctlp-&gt;errhp_ctl, OCI_HTYPE_ERROR, ociret, ctlp,
              OCIAttrSet((void  *)colDesc, (ub4)OCI_DTYPE_PARAM,
                         (void  *)&amp;colp-&gt;exttyp_col, (ub4)0,
                         (ub4)OCI_ATTR_DATA_TYPE, ctlp-&gt;errhp_ctl));

    /* max data size */
OCI_CHECK(ctlp-&gt;errhp_ctl, OCI_HTYPE_ERROR, ociret, ctlp,
              OCIAttrSet((void  *)colDesc, (ub4)OCI_DTYPE_PARAM,
                         (void  *)&amp;fldp-&gt;maxlen_fld, (ub4)0,
                         (ub4)OCI_ATTR_DATA_SIZE, ctlp-&gt;errhp_ctl));

    if (colp-&gt;datemask_col)    /* set column (input field) date mask */
    {
      OCI_CHECK(ctlp-&gt;errhp_ctl, OCI_HTYPE_ERROR, ociret, ctlp,
                OCIAttrSet((void  *)colDesc, (ub4)OCI_DTYPE_PARAM,
                         (void  *)colp-&gt;datemask_col,
                         (ub4)strlen((const char *)colp-&gt;datemask_col),
                         (ub4)OCI_ATTR_DATEFORMAT, ctlp-&gt;errhp_ctl));
    }
    if (colp-&gt;prec_col)
    {
      OCI_CHECK(ctlp-&gt;errhp_ctl, OCI_HTYPE_ERROR, ociret, ctlp,
                OCIAttrSet((void  *)colDesc, (ub4)OCI_DTYPE_PARAM,
                         (void  *)&amp;colp-&gt;prec_col, (ub4)0,
                         (ub4)OCI_ATTR_PRECISION, ctlp-&gt;errhp_ctl));
    }
    if (colp-&gt;scale_col)
    {
      OCI_CHECK(ctlp-&gt;errhp_ctl, OCI_HTYPE_ERROR, ociret, ctlp,
                OCIAttrSet((void  *)colDesc, (ub4)OCI_DTYPE_PARAM,
                         (void  *)&amp;colp-&gt;scale_col, (ub4)0,
                         (ub4)OCI_ATTR_SCALE, ctlp-&gt;errhp_ctl));
    }
    if (colp-&gt;csid_col)
    {
      OCI_CHECK(ctlp-&gt;errhp_ctl, OCI_HTYPE_ERROR, ociret, ctlp,
                OCIAttrSet((void  *)colDesc, (ub4)OCI_DTYPE_PARAM,
                         (void  *)&amp;colp-&gt;csid_col, (ub4)0,
                         (ub4)OCI_ATTR_CHARSET_ID, ctlp-&gt;errhp_ctl));
    }
    /* free the parameter handle to the column descriptor */
    OCI_CHECK((void  *)0, 0, ociret, ctlp,
              OCIDescriptorFree((void  *)colDesc, OCI_DTYPE_PARAM));
  }
...
</pre>
<p class="subhead1"><a id="LNOCI18043"></a>OCI_ATTR_CHARSET_ID<a id="sthref5644"></a></p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ/WRITE</p>
</dd>
<dt>Description</dt>
<dd>
<p>Character set ID for character column. If not set, the character set ID defaults to the character set ID set in the direct path context.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>ub2 */ub2 *</code></p>
</dd>
</dl>
<p class="subhead1"><a id="LNOCI18044"></a><a id="sthref5645"></a>OCI_ATTR_DATA_SIZE</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ/WRITE</p>
</dd>
<dt>Description</dt>
<dd>
<p>Maximum size in bytes of the external data for the column. This can affect conversion buffer sizes.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>ub4 */ub4 *</code></p>
</dd>
</dl>
<p class="subhead1"><a id="i448050"></a><a id="LNOCI18045"></a><a id="sthref5646"></a>OCI_ATTR_DATA_TYPE</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ/WRITE</p>
</dd>
<dt>Description</dt>
<dd>
<p><a id="sthref5647"></a><a id="sthref5648"></a>Returns or sets the external data type of the column. Valid data types are:</p>
</dd>
</dl>
<ul>
<li>
<p><code>SQLT_CHR</code></p>
</li>
<li>
<p><code>SQLT_DATE</code></p>
</li>
<li>
<p><code>SQLT_TIMESTAMP</code></p>
</li>
<li>
<p><code>SQLT_TIMESTAMP_TZ</code></p>
</li>
<li>
<p><code>SQLT_TIMESTAMP_LTZ</code></p>
</li>
<li>
<p><code>SQLT_INTERVAL_YM</code></p>
</li>
<li>
<p><code>SQLT_INTERVAL_DS</code></p>
</li>
<li>
<p><code>SQLT_CLOB</code></p>
</li>
<li>
<p><code>SQLT_BLOB</code></p>
</li>
<li>
<p><code>SQLT_INT</code></p>
</li>
<li>
<p><code>SQLT_UIN</code></p>
</li>
<li>
<p><code>SQLT_FLT</code></p>
</li>
<li>
<p><code>SQLT_PDN</code></p>
</li>
<li>
<p><code>SQLT_BIN</code></p>
</li>
<li>
<p><code>SQLT_NUM</code></p>
</li>
<li>
<p><code>SQLT_NTY</code></p>
</li>
<li>
<p><code>SQLT_REF</code></p>
</li>
<li>
<p><code>SQLT_VST</code></p>
</li>
<li>
<p><code>SQLT_VNU</code></p>
</li>
</ul>
<dl>
<dt>Attribute Data Type</dt>
<dd>
<p><code>ub2 */ub2 *</code></p>
</dd>
</dl>
<p class="subhead1"><a id="LNOCI18046"></a><a id="sthref5649"></a>OCI_ATTR_DATEFORMAT</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ/WRITE</p>
</dd>
<dt>Description</dt>
<dd>
<p>Date conversion mask for the column. If not set, the date format defaults to the date conversion mask set in the direct path context.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>oratext **/oratext *</code></p>
</dd>
</dl>
<p class="subhead1"><a id="LNOCI18047"></a><a id="sthref5650"></a>OCI_ATTR_DIRPATH_OID</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ/WRITE</p>
</dd>
<dt>Description</dt>
<dd>
<p>Indicates that the column to load into is an object table's object ID column.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>ub1 */ub1 *</code></p>
</dd>
</dl>
<p class="subhead1"><a id="LNOCI18048"></a><a id="sthref5651"></a>OCI_ATTR_DIRPATH_SID</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ/WRITE</p>
</dd>
<dt>Description</dt>
<dd>
<p>Indicates that the column to load into is a nested table's <code>setid</code> column.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>ub1 */ub1 *</code></p>
</dd>
</dl>
<p class="subhead1"><a id="LNOCI18049"></a><a id="sthref5652"></a>OCI_ATTR_NAME</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ/WRITE</p>
</dd>
<dt>Description</dt>
<dd>
<p>Returns or sets the name of the column that is being loaded. Initialize both the column name and the column name length to 0 before calling <code>OCIAttrGet()</code>.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>oratext **/oratext *</code></p>
</dd>
</dl>
<p class="subhead1"><a id="LNOCI18050"></a><a id="sthref5653"></a>OCI_ATTR_PRECISION</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ/WRITE</p>
</dd>
<dt>Description</dt>
<dd>
<p>Returns or sets the precision.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>ub1 */ub1 *</code> for explicit describes</p>
<p><code>sb2 */sb2 *</code> for implicit describes</p>
</dd>
</dl>
<p class="subhead1"><a id="LNOCI18051"></a><a id="sthref5654"></a>OCI_ATTR_SCALE</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ/WRITE</p>
</dd>
<dt>Description</dt>
<dd>
<p>Returns or sets the scale (number of digits to the right of the decimal point) for conversions from packed and zoned decimal input data types.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>sb1 */sb1 *</code></p>
</dd>
</dl>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="i444773"></a>
<div id="LNOCI18052" class="sect1">
<h2 class="sect1">Process Handle Attributes<a id="sthref5655"></a><a id="sthref5656"></a><a id="sthref5657"></a></h2>
<p>The parameters for the shared system can be set and read using the <code>OCIAttrSet()</code> and <code>OCIAttrGet()</code> calls. The handle type to be used is the process handle <code>OCI_HTYPE_PROC</code>.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#i444986">"OCI_ATTR_SHARED_HEAPALLOC"</a></div>
<p>The <code>OCI_ATTR_MEMPOOL_APPNAME</code>, <code>OCI_ATTR_MEMPOOL_HOMENAME</code>, and <code>OCI_ATTR_MEMPOOL_INSTNAME</code> attributes specify the application, home, and instance names that can be used together to map the process to the right shared pool area. If these attributes are not provided, internal default values are used. The following are valid settings of the attributes for specific behaviors:</p>
<ul>
<li>
<p>Instance name, application name (unqualified): This allows only executables with a specific name to attach to the same shared subsystem. For example, this allows an OCI application named <span class="italic">Office</span> to connect to the same shared subsystem regardless of the directory <span class="italic">Office</span> resides in.</p>
</li>
<li>
<p>Instance name, home name: This allows a set of executables in a specific home directory to attach to the same instance of the shared subsystem. For example, this allows all OCI applications residing in the ORACLE_HOME directory to use the same shared subsystem.</p>
</li>
<li>
<p>Instance name, home name, application name (unqualified): This allows only a specific executable to attach to a shared subsystem. For example, this allows one application named <span class="italic">Office</span> in the ORACLE_HOME directory to attach to a given shared subsystem.</p>
</li>
</ul>
<p class="subhead1"><a id="LNOCI18053"></a><a id="sthref5658"></a>OCI_ATTR_MEMPOOL_APPNAME</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ/WRITE</p>
</dd>
<dt>Description</dt>
<dd>
<p>Executable name or fully qualified path name of the executable.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>oratext *</code></p>
</dd>
</dl>
<p class="subhead1"><a id="LNOCI18054"></a><a id="sthref5659"></a>OCI_ATTR_MEMPOOL_HOMENAME</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ/WRITE</p>
</dd>
<dt>Description</dt>
<dd>
<p>Directory name where the executables that use the same shared subsystem instance are located.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>oratext *</code></p>
</dd>
</dl>
<p class="subhead1"><a id="LNOCI18055"></a><a id="sthref5660"></a>OCI_ATTR_MEMPOOL_INSTNAME</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ/WRITE</p>
</dd>
<dt>Description</dt>
<dd>
<p>Any user-defined name to identify an instance of the shared subsystem.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>oratext *</code></p>
</dd>
</dl>
<p class="subhead1"><a id="LNOCI18056"></a><a id="sthref5661"></a>OCI_ATTR_MEMPOOL_SIZE</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ/WRITE</p>
</dd>
<dt>Description</dt>
<dd>
<p>Size of the shared pool in bytes. This attribute is set as follows:</p>
<pre>
ub4 plsz = 1000000;
OCIAttrSet((void  *)0, (ub4) OCI_HTYPE_PROC,
           (void  *)&amp;plsz, (ub4) 0, (ub4) OCI_ATTR_POOL_SIZE, 0);
</pre></dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>ub4 *</code></p>
</dd>
</dl>
<p class="subhead1"><a id="LNOCI18058"></a><a id="sthref5662"></a>OCI_ATTR_PROC_MODE</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ</p>
</dd>
<dt>Description</dt>
<dd>
<p>Returns all the currently set process modes. The value read contains the OR'ed value of all the currently set OCI process modes. To determine if a specific mode is set, the value should be AND'ed with that mode. For example:</p>
<pre>
ub4 mode;
boolean is_shared;

OCIAttrGet((void  *)0, (ub4)OCI_HTYPE_PROC,
           (void  *) &amp;mode, (ub4 *) 0,
           (ub4)OCI_ATTR_PROC_MODE, 0);

is_shared = mode &amp; OCI_SHARED;
</pre></dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>ub4 *</code></p>
</dd>
</dl>
</div>
<!-- class="sect1" -->
<a id="BAJCEDGJ"></a>
<div id="LNOCI18059" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1"><a id="sthref5663"></a><a id="sthref5664"></a>Event Handle Attributes</h2>
<p>The <code>OCIEvent</code> handle encapsulates the attributes from the event payload. This handle is implicitly allocated before the event callback is called.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="oci09adv.htm#CJGDCEFG">"HA Event Notification"</a></div>
<p>The event callback obtains the attributes of an event using <code>OCIAttrGet()</code> with the following attributes.</p>
<p class="subhead1"><a id="CHDEBDDA"></a><a id="LNOCI18060"></a><a id="sthref5665"></a>OCI_ATTR_DBDOMAIN</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ</p>
</dd>
<dt>Description</dt>
<dd>
<p>When called with this attribute, <code>OCIAttrGet()</code> retrieves the name of the database domain that has been affected by this event. This is also a server handle attribute.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>oratext **</code></p>
</dd>
</dl>
<p class="subhead1"><a id="CHDDIFAH"></a><a id="LNOCI18061"></a><a id="sthref5666"></a>OCI_ATTR_DBNAME</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ</p>
</dd>
<dt>Description</dt>
<dd>
<p>When called with this attribute, <code>OCIAttrGet()</code> retrieves the name of the database that has been affected by this event. This is also a server handle attribute.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>oratext **</code></p>
</dd>
</dl>
<p class="subhead1"><a id="LNOCI18062"></a><a id="sthref5667"></a>OCI_ATTR_EVENTTYPE</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ</p>
</dd>
<dt>Description</dt>
<dd>
<p>The type of event that occurred, <code>OCI_EVENTTYPE_HA</code>.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>ub4 *</code></p>
</dd>
</dl>
<p class="subhead1"><a id="LNOCI18063"></a><a id="sthref5668"></a>OCI_ATTR_HA_SOURCE</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ</p>
</dd>
<dt>Description</dt>
<dd>
<p>If the event type is <code>OCI_EVENTTYPE_HA</code>, get the source of the event with this attribute. Valid values are:</p>
<ul>
<li>
<p><code>OCI_HA_SOURCE_DATABASE</code></p>
</li>
<li>
<p><code>OCI_HA_SOURCE_NODE</code></p>
</li>
<li>
<p><code>OCI_HA_SOURCE_INSTANCE</code></p>
</li>
<li>
<p><code>OCI_HA_SOURCE_SERVICE</code></p>
</li>
<li>
<p><code>OCI_HA_SOURCE_SERVICE_MEMBER</code></p>
</li>
<li>
<p><code>OCI_HA_SOURCE_ASM_INSTANCE</code></p>
</li>
<li>
<p><code>OCI_HA_SOURCE_SERVICE_PRECONNECT</code></p>
</li>
</ul>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>ub4 *</code></p>
</dd>
</dl>
<p class="subhead1"><a id="LNOCI18064"></a><a id="sthref5669"></a>OCI_ATTR_HA_SRVFIRST</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ</p>
</dd>
<dt>Description</dt>
<dd>
<p>When called with this attribute, <code>OCIAttrGet()</code> retrieves the first server handle in the list of server handles affected by an Oracle Real Application Clusters (Oracle RAC) HA DOWN event.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>OCIServer **</code></p>
</dd>
</dl>
<p class="subhead1"><a id="LNOCI18065"></a><a id="sthref5670"></a>OCI_ATTR_HA_SRVNEXT</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ</p>
</dd>
<dt>Description</dt>
<dd>
<p>When called with this attribute <code>OCIAttrGet()</code> retrieves the next server handle in the list of server handles affected by an Oracle RAC HA DOWN event.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>OCIServer **</code></p>
</dd>
</dl>
<p class="subhead1"><a id="LNOCI18066"></a><a id="sthref5671"></a>OCI_ATTR_HA_STATUS</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ</p>
</dd>
<dt>Description</dt>
<dd>
<p>Valid value is <code>OCI_HA_STATUS_DOWN</code>. Only <code>DOWN</code> events are subscribed to currently.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>ub4 *</code></p>
</dd>
</dl>
<p class="subhead1"><a id="LNOCI18067"></a><a id="sthref5672"></a>OCI_ATTR_HA_TIMESTAMP</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ</p>
</dd>
<dt>Description</dt>
<dd>
<p>The time that the HA event occurred.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>OCIDateTime **</code></p>
</dd>
</dl>
<p class="subhead1"><a id="LNOCI18068"></a><a id="sthref5673"></a>OCI_ATTR_HOSTNAME</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ</p>
</dd>
<dt>Description</dt>
<dd>
<p>When called with this attribute, <code>OCIAttrGet()</code> retrieves the name of the host that has been affected by this event.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>oratext **</code></p>
</dd>
</dl>
<p class="subhead1"><a id="CHDGJBFB"></a><a id="LNOCI18069"></a><a id="sthref5674"></a>OCI_ATTR_INSTNAME</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ</p>
</dd>
<dt>Description</dt>
<dd>
<p>When called with this attribute, <code>OCIAttrGet()</code> retrieves the name of the instance that has been affected by this event. This is also a server handle attribute.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>oratext **</code></p>
</dd>
</dl>
<p class="subhead1"><a id="BAJECGAJ"></a><a id="LNOCI18070"></a><a id="sthref5675"></a>OCI_ATTR_INSTSTARTTIME</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ</p>
</dd>
<dt>Description</dt>
<dd>
<p>When called with this attribute, <code>OCIAttrGet()</code> retrieves the start time of the instance that has been affected by this event. This is also a server handle attribute.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>OCIDateTime **</code></p>
</dd>
</dl>
<p class="subhead1"><a id="BAJJGGCJ"></a><a id="LNOCI18071"></a><a id="sthref5676"></a>OCI_ATTR_SERVICENAME</p>
<dl>
<dt>Mode</dt>
<dd>
<p>READ</p>
</dd>
<dt>Description</dt>
<dd>
<p>When called with this attribute, <code>OCIAttrGet()</code> retrieves the name of the service that has been affected by this event. The name length is <code>ub4 *</code>. This is also a server handle attribute.</p>
</dd>
<dt>Attribute Data Type</dt>
<dd>
<p><code>oratext **</code></p>
</dd>
</dl>
<p class="subhead2"><a id="LNOCI18072"></a></p>
</div>
<!-- class="sect1" --></div>
<!-- class="appendix" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment1004">
<tr>
<td class="cellalignment1013">
<table class="cellalignment1009">
<tr>
<td class="cellalignment1008"><a href="oci23xml001.htm"><img width="24" height="24" src="../../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment1008"><a href="ociabdem.htm"><img width="24" height="24" src="../../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;1996, 2014,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment1015">
<table class="cellalignment1007">
<tr>
<td class="cellalignment1008"><a href="../../index.htm"><img width="24" height="24" src="../../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment1008"><a href="../../nav/portal_booklist.htm"><img width="24" height="24" src="../../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment1008"><a href="toc.htm"><img width="24" height="24" src="../../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment1008"><a href="index.htm"><img width="24" height="24" src="../../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment1008"><a href="../../nav/mindx.htm"><img width="24" height="24" src="../../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment1008"><a href="../../dcommon/html/feedback.htm"><img width="24" height="24" src="../../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>
</body>
</html>
