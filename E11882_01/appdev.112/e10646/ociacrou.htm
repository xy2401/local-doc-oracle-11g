<!DOCTYPE html>
<html lang="en" >
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1">
<meta charset="utf-8">
<title>OCI Function Server Round-Trips</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Merged Version 1023" />
<meta name="dcterms.created" content="2014-07-18T15:18:46Z" />
<meta name="robots" content="all" />
<meta name="dcterms.title" content="Call Interface Programmer's Guide" />
<meta name="dcterms.identifier" content="E10646-15" />
<meta name="dcterms.isVersionOf" content="LNOCI" />
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;1996, 2014,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved." />
<link rel="Start" href="../../index.htm" title="Home" type="text/html" />
<link rel="Copyright" href="../../dcommon/html/cpyr.htm" title="Copyright" type="text/html" />

<script type="application/javascript"  src="../../dcommon/js/headfoot.js"></script>
<script type="application/javascript"  src="../../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html" />
<link rel="Index" href="index.htm" title="Index" type="text/html" />
<link rel="Prev" href="ociabdem.htm" title="Previous" type="text/html" />
<link rel="Next" href="ociadwin.htm" title="Next" type="text/html" />
<link rel="alternate" href="../e10646.pdf" title="PDF version" type="application/pdf" />
<link rel="schema.dcterms" href="http://purl.org/dc/terms/" />
<link rel="stylesheet" href="../../dcommon/css/fusiondoc.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/header.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/footer.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/fonts.css">
<link rel="stylesheet" href="../../dcommon/css/foundation.css">
<link rel="stylesheet" href="../../dcommon/css/codemirror.css">
<link rel="stylesheet" type="text/css" title="Default" href="../../nav/css/html5.css">
<link rel="stylesheet" href="../../dcommon/css/respond-480-tablet.css">
<link rel="stylesheet" href="../../dcommon/css/respond-768-laptop.css">
<link rel="stylesheet" href="../../dcommon/css/respond-1140-deskop.css">
<script type="application/javascript" src="../../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">72/79</span> <!-- End Header -->
<div id="LNOCI300" class="appendix"><a id="g430405"></a> <a id="i424716"></a>
<h1 class="appendix"><span class="secnum">C</span> OCI Function Server Round-Trips</h1>
<p>This appendix provides information about server round-trips incurred during various OCI calls. A <span class="bold">server round-trip</span><a id="sthref5686"></a> is defined as the trip from the client to the server and back to the client. This information can help programmers to determine the most efficient way to accomplish a particular task in an application.</p>
<p>This appendix contains these topics:</p>
<ul>
<li>
<p><a href="#i421322">Overview of Server Round-Trips</a></p>
</li>
<li>
<p><a href="#i423921">Relational Function Round-Trips</a></p>
</li>
<li>
<p><a href="#i421672">LOB Function Round-Trips</a></p>
</li>
<li>
<p><a href="#i421673">Object and Cache Function Round-Trips</a></p>
</li>
<li>
<p><a href="#i421674">Describe Operation Round-Trips</a></p>
</li>
<li>
<p><a href="#i421675">Data Type Mapping and Manipulation Function Round-Trips</a></p>
</li>
<li>
<p><a href="#i425779">Any Type and Data Function Round-Trips</a></p>
</li>
<li>
<p><a href="#i422701">Other Local Functions</a></p>
</li>
</ul>
<a id="i421322"></a>
<div id="LNOCI18074" class="sect1">
<h2 class="sect1">Overview of Server Round-Trips</h2>
<p>This appendix provides information about server round-trips incurred during various OCI calls. This information can be useful when determining the most efficient way to accomplish a particular task in an application.</p>
</div>
<!-- class="sect1" -->
<a id="i423921"></a>
<div id="LNOCI18075" class="sect1">
<h2 class="sect1">Relational Function Round-Trips<a id="sthref5687"></a></h2>
<p><a href="#g428053">Table C-1</a> lists the number of server round-trips required by each OCI relational function.</p>
<div id="LNOCI18076" class="tblformal">
<p class="titleintable"><a id="sthref5688"></a><a id="g428053"></a>Table C-1 Server Round-Trips for Relational Operations</p>
<table class="cellalignment1016" title="Server Round-Trips for Relational Operations " summary="This table is described in the preceding text" dir="ltr">
<thead>
<tr class="cellalignment1005">
<th class="cellalignment1012" id="r1c1-t2">Function</th>
<th class="cellalignment1012" id="r1c2-t2">Number of Server Round-Trips</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r2c1-t2" headers="r1c1-t2">
<p><code>OCIBreak()</code></p>
</td>
<td class="cellalignment1013" headers="r2c1-t2 r1c2-t2">
<p>1</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r3c1-t2" headers="r1c1-t2">
<p><code>OCIDBShutdown()</code></p>
</td>
<td class="cellalignment1013" headers="r3c1-t2 r1c2-t2">
<p>1</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r4c1-t2" headers="r1c1-t2">
<p><code>OCIDBStartup()</code></p>
</td>
<td class="cellalignment1013" headers="r4c1-t2 r1c2-t2">
<p>1</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r5c1-t2" headers="r1c1-t2">
<p><code>OCIEnvCreate()</code></p>
</td>
<td class="cellalignment1013" headers="r5c1-t2 r1c2-t2">
<p>0</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r6c1-t2" headers="r1c1-t2">
<p><code>OCIEnvInit()</code></p>
</td>
<td class="cellalignment1013" headers="r6c1-t2 r1c2-t2">
<p>0</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r7c1-t2" headers="r1c1-t2">
<p><code>OCIErrorGet()</code></p>
</td>
<td class="cellalignment1013" headers="r7c1-t2 r1c2-t2">
<p>0</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r8c1-t2" headers="r1c1-t2">
<p><code>OCIInitialize()</code></p>
</td>
<td class="cellalignment1013" headers="r8c1-t2 r1c2-t2">
<p>0</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r9c1-t2" headers="r1c1-t2">
<p><code>OCILdaToSvcCtx()</code></p>
</td>
<td class="cellalignment1013" headers="r9c1-t2 r1c2-t2">
<p>0</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r10c1-t2" headers="r1c1-t2">
<p><code>OCILogoff()</code></p>
</td>
<td class="cellalignment1013" headers="r10c1-t2 r1c2-t2">
<p>1</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r11c1-t2" headers="r1c1-t2">
<p><code>OCILogon()</code></p>
</td>
<td class="cellalignment1013" headers="r11c1-t2 r1c2-t2">
<p>1</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r12c1-t2" headers="r1c1-t2">
<p><code>OCILogon2()</code></p>
</td>
<td class="cellalignment1013" headers="r12c1-t2 r1c2-t2">
<p>Connection pool or session pool: same as OCISessionGet()</p>
<p>Normal: 2 (depends on authentication and TAF situation)</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r13c1-t2" headers="r1c1-t2">
<p><code>OCIPasswordChange()</code></p>
</td>
<td class="cellalignment1013" headers="r13c1-t2 r1c2-t2">
<p>1</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r14c1-t2" headers="r1c1-t2">
<p><code>OCIPing()</code></p>
</td>
<td class="cellalignment1013" headers="r14c1-t2 r1c2-t2">
<p>1</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r15c1-t2" headers="r1c1-t2">
<p><code>OCIReset()</code></p>
</td>
<td class="cellalignment1013" headers="r15c1-t2 r1c2-t2">
<p>0</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r16c1-t2" headers="r1c1-t2">
<p><code>OCIServerAttach()</code></p>
</td>
<td class="cellalignment1013" headers="r16c1-t2 r1c2-t2">
<p>1</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r17c1-t2" headers="r1c1-t2">
<p><code>OCIServerDetach()</code></p>
</td>
<td class="cellalignment1013" headers="r17c1-t2 r1c2-t2">
<p>1</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r18c1-t2" headers="r1c1-t2">
<p><code>OCIServerVersion()</code></p>
</td>
<td class="cellalignment1013" headers="r18c1-t2 r1c2-t2">
<p>1</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r19c1-t2" headers="r1c1-t2">
<p><code>OCISessionBegin()</code></p>
</td>
<td class="cellalignment1013" headers="r19c1-t2 r1c2-t2">
<p>1</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r20c1-t2" headers="r1c1-t2">
<p><code>OCISessionEnd()</code></p>
</td>
<td class="cellalignment1013" headers="r20c1-t2 r1c2-t2">
<p>1</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r21c1-t2" headers="r1c1-t2">
<p><code>OCISessionGet()</code></p>
</td>
<td class="cellalignment1013" headers="r21c1-t2 r1c2-t2">
<p>Session pool: 0 - increment of logins. Connection pool: 1 to (1+ (increment * logins)). Depends on cache hit: one for the user session, optional increment for primary sessions.</p>
<p>Normal: 1 login</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r22c1-t2" headers="r1c1-t2">
<p><code>OCISessionPoolCreate()</code></p>
</td>
<td class="cellalignment1013" headers="r22c1-t2 r1c2-t2">
<p>sessMin * logins</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r23c1-t2" headers="r1c1-t2">
<p><code>OCISessionPoolDestroy()</code></p>
</td>
<td class="cellalignment1013" headers="r23c1-t2 r1c2-t2">
<p>Sessions in cache * logoffs</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r24c1-t2" headers="r1c1-t2">
<p><code>OCISessionRelease()</code></p>
</td>
<td class="cellalignment1013" headers="r24c1-t2 r1c2-t2">
<p>Session pooling: 0, except when explicit session destroys flag set</p>
<p>Normal: 1 login</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r25c1-t2" headers="r1c1-t2">
<p><code>OCIStmtExecute()</code></p>
</td>
<td class="cellalignment1013" headers="r25c1-t2 r1c2-t2">
<p>1</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r26c1-t2" headers="r1c1-t2">
<p><code>OCIStmtFetch()</code></p>
</td>
<td class="cellalignment1013" headers="r26c1-t2 r1c2-t2">
<p>0 or 1</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r27c1-t2" headers="r1c1-t2">
<p><code>OCIStmtFetch2()</code></p>
</td>
<td class="cellalignment1013" headers="r27c1-t2 r1c2-t2">
<p>0 in prefetch, otherwise 1</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r28c1-t2" headers="r1c1-t2">
<p><code>OCIStmtGetPieceInfo()</code></p>
</td>
<td class="cellalignment1013" headers="r28c1-t2 r1c2-t2">
<p>1</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r29c1-t2" headers="r1c1-t2">
<p><code>OCIStmtPrepare()</code></p>
</td>
<td class="cellalignment1013" headers="r29c1-t2 r1c2-t2">
<p>0</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r30c1-t2" headers="r1c1-t2">
<p><code>OCIStmtSetPieceInfo()</code></p>
</td>
<td class="cellalignment1013" headers="r30c1-t2 r1c2-t2">
<p>0</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r31c1-t2" headers="r1c1-t2">
<p><code>OCISvcCtxToLda()</code></p>
</td>
<td class="cellalignment1013" headers="r31c1-t2 r1c2-t2">
<p>0</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r32c1-t2" headers="r1c1-t2">
<p><code>OCITerminate()</code></p>
</td>
<td class="cellalignment1013" headers="r32c1-t2 r1c2-t2">
<p>1</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r33c1-t2" headers="r1c1-t2">
<p><code>OCITransCommit()</code></p>
</td>
<td class="cellalignment1013" headers="r33c1-t2 r1c2-t2">
<p>1</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r34c1-t2" headers="r1c1-t2">
<p><code>OCITransDetach()</code></p>
</td>
<td class="cellalignment1013" headers="r34c1-t2 r1c2-t2">
<p>1</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r35c1-t2" headers="r1c1-t2">
<p><code>OCITransForget()</code></p>
</td>
<td class="cellalignment1013" headers="r35c1-t2 r1c2-t2">
<p>1</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r36c1-t2" headers="r1c1-t2">
<p><code>OCITransPrepare()</code></p>
</td>
<td class="cellalignment1013" headers="r36c1-t2 r1c2-t2">
<p>1</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r37c1-t2" headers="r1c1-t2">
<p><code>OCItransRollback()</code></p>
</td>
<td class="cellalignment1013" headers="r37c1-t2 r1c2-t2">
<p>1</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r38c1-t2" headers="r1c1-t2">
<p><code>OCITransStart()</code></p>
</td>
<td class="cellalignment1013" headers="r38c1-t2 r1c2-t2">
<p>1</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r39c1-t2" headers="r1c1-t2">
<p><code>OCIUserCallbackGet()</code></p>
</td>
<td class="cellalignment1013" headers="r39c1-t2 r1c2-t2">
<p>0</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r40c1-t2" headers="r1c1-t2">
<p><code>OCIUserCallbackRegister()</code></p>
</td>
<td class="cellalignment1013" headers="r40c1-t2 r1c2-t2">
<p>0</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="sect1" -->
<a id="i421672"></a>
<div id="LNOCI18077" class="sect1">
<h2 class="sect1">LOB Function Round-Trips</h2>
<p><span class="bold"><a id="sthref5689"></a><a id="sthref5690"></a></span><a href="#CACHAFFI">Table C-2</a> lists the server round-trips incurred by the <code>OCILob</code> calls.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
To minimize the number of round-trips, you can use the data interface for LOBs. You can bind or define character data for a <code>CLOB</code> column or <code>RAW</code> data for a <code>BLOB</code> column.</div>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="oci05bnd.htm#i440236">"Binding LOB Data"</a> for usage and examples for both <code>INSERT</code> and <code>UPDATE</code> statements</p>
</li>
<li>
<p><a href="oci05bnd.htm#i440237">"Defining LOB Data"</a> for usage and examples of <code>SELECT</code> statements</p>
</li>
</ul>
</div>
<p>For calls whose number of round-trips is "0 or 1," if LOB buffering is on, and the request can be satisfied in the client, no round-trips are incurred.</p>
<div id="LNOCI18078" class="tblformal">
<p class="titleintable"><a id="sthref5691"></a><a id="CACHAFFI"></a>Table C-2 Server Round-Trips for OCILob Calls</p>
<table class="cellalignment1016" title="Server Round-Trips for OCILob Calls" summary="This table is described in the preceding text" dir="ltr">
<thead>
<tr class="cellalignment1005">
<th class="cellalignment1012" id="r1c1-t5">Function</th>
<th class="cellalignment1012" id="r1c2-t5">Number of Server Round-Trips</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r2c1-t5" headers="r1c1-t5">
<p><code>OCILobAppend()</code></p>
</td>
<td class="cellalignment1013" headers="r2c1-t5 r1c2-t5">
<p>1</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r3c1-t5" headers="r1c1-t5">
<p><code>OCILobArrayRead()</code></p>
</td>
<td class="cellalignment1013" headers="r3c1-t5 r1c2-t5">
<p>1</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r4c1-t5" headers="r1c1-t5">
<p><code>OCILobArraywrite()</code></p>
</td>
<td class="cellalignment1013" headers="r4c1-t5 r1c2-t5">
<p>1</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r5c1-t5" headers="r1c1-t5">
<p><code>OCILobAssign()</code></p>
</td>
<td class="cellalignment1013" headers="r5c1-t5 r1c2-t5">
<p>0</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r6c1-t5" headers="r1c1-t5">
<p><code>OCILobCharSetForm()</code></p>
</td>
<td class="cellalignment1013" headers="r6c1-t5 r1c2-t5">
<p>0</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r7c1-t5" headers="r1c1-t5">
<p><code>OCILobCharSetId()</code></p>
</td>
<td class="cellalignment1013" headers="r7c1-t5 r1c2-t5">
<p>0</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r8c1-t5" headers="r1c1-t5">
<p><code>OCILobClose()</code></p>
</td>
<td class="cellalignment1013" headers="r8c1-t5 r1c2-t5">
<p>1</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r9c1-t5" headers="r1c1-t5">
<p><code>OCILobCopy()</code></p>
</td>
<td class="cellalignment1013" headers="r9c1-t5 r1c2-t5">
<p>1</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r10c1-t5" headers="r1c1-t5">
<p><code>OCILobCopy2()</code></p>
</td>
<td class="cellalignment1013" headers="r10c1-t5 r1c2-t5">
<p>1</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r11c1-t5" headers="r1c1-t5">
<p><code>OCILobCreateTemporary()</code></p>
</td>
<td class="cellalignment1013" headers="r11c1-t5 r1c2-t5">
<p>1</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r12c1-t5" headers="r1c1-t5">
<p><code>OCILobDisableBuffering()</code></p>
</td>
<td class="cellalignment1013" headers="r12c1-t5 r1c2-t5">
<p>0</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r13c1-t5" headers="r1c1-t5">
<p><code>OCILobEnableBuffering()</code></p>
</td>
<td class="cellalignment1013" headers="r13c1-t5 r1c2-t5">
<p>0</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r14c1-t5" headers="r1c1-t5">
<p><code>OCILobErase()</code></p>
</td>
<td class="cellalignment1013" headers="r14c1-t5 r1c2-t5">
<p>1</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r15c1-t5" headers="r1c1-t5">
<p><code>OCILobErase2()</code></p>
</td>
<td class="cellalignment1013" headers="r15c1-t5 r1c2-t5">
<p>1</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r16c1-t5" headers="r1c1-t5">
<p><code>OCILobFileClose()</code></p>
</td>
<td class="cellalignment1013" headers="r16c1-t5 r1c2-t5">
<p>1</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r17c1-t5" headers="r1c1-t5">
<p><code>OCILobFileCloseAll()</code></p>
</td>
<td class="cellalignment1013" headers="r17c1-t5 r1c2-t5">
<p>1</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r18c1-t5" headers="r1c1-t5">
<p><code>OCILobFileExists()</code></p>
</td>
<td class="cellalignment1013" headers="r18c1-t5 r1c2-t5">
<p>1</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r19c1-t5" headers="r1c1-t5">
<p><code>OCILobFileGetName()</code></p>
</td>
<td class="cellalignment1013" headers="r19c1-t5 r1c2-t5">
<p>0</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r20c1-t5" headers="r1c1-t5">
<p><code>OCILobFileIsOpen()</code></p>
</td>
<td class="cellalignment1013" headers="r20c1-t5 r1c2-t5">
<p>1</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r21c1-t5" headers="r1c1-t5">
<p><code>OCILobFileOpen()</code></p>
</td>
<td class="cellalignment1013" headers="r21c1-t5 r1c2-t5">
<p>1</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r22c1-t5" headers="r1c1-t5">
<p><code>OCILobFileSetName()</code></p>
</td>
<td class="cellalignment1013" headers="r22c1-t5 r1c2-t5">
<p>0</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r23c1-t5" headers="r1c1-t5">
<p><code>OCILobFlushBuffer()</code></p>
</td>
<td class="cellalignment1013" headers="r23c1-t5 r1c2-t5">
<p>1 for each modified page in the buffer for this LOB</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r24c1-t5" headers="r1c1-t5">
<p><code>OCILobFreeTemporary()</code></p>
</td>
<td class="cellalignment1013" headers="r24c1-t5 r1c2-t5">
<p>1</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r25c1-t5" headers="r1c1-t5">
<p><code>OCILobGetChunkSize()</code></p>
</td>
<td class="cellalignment1013" headers="r25c1-t5 r1c2-t5">
<p>1</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r26c1-t5" headers="r1c1-t5">
<p><code>OCILobGetLength()</code></p>
</td>
<td class="cellalignment1013" headers="r26c1-t5 r1c2-t5">
<p>1</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r27c1-t5" headers="r1c1-t5">
<p><code>OCILobGetLength2()</code></p>
</td>
<td class="cellalignment1013" headers="r27c1-t5 r1c2-t5">
<p>1</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r28c1-t5" headers="r1c1-t5">
<p><code>OCILobGetStorageLimit()</code></p>
</td>
<td class="cellalignment1013" headers="r28c1-t5 r1c2-t5">
<p>1</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r29c1-t5" headers="r1c1-t5">
<p><code>OCILobIsEqual()</code></p>
</td>
<td class="cellalignment1013" headers="r29c1-t5 r1c2-t5">
<p>0</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r30c1-t5" headers="r1c1-t5">
<p><code>OCILobIsOpen()</code></p>
</td>
<td class="cellalignment1013" headers="r30c1-t5 r1c2-t5">
<p>1</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r31c1-t5" headers="r1c1-t5">
<p><code>OCILobIsTemporary()</code></p>
</td>
<td class="cellalignment1013" headers="r31c1-t5 r1c2-t5">
<p>0</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r32c1-t5" headers="r1c1-t5">
<p><code>OCILobLoadFromFile()</code></p>
</td>
<td class="cellalignment1013" headers="r32c1-t5 r1c2-t5">
<p>1</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r33c1-t5" headers="r1c1-t5">
<p><code>OCILobLoadFromFile2()</code></p>
</td>
<td class="cellalignment1013" headers="r33c1-t5 r1c2-t5">
<p>1</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r34c1-t5" headers="r1c1-t5">
<p><code>OCILobLocatorAssign()</code></p>
</td>
<td class="cellalignment1013" headers="r34c1-t5 r1c2-t5">
<p>1 round-trip if either the source or the destination locator refers to a temporary LOB</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r35c1-t5" headers="r1c1-t5">
<p><code>OCILobLocatorIsInit()</code></p>
</td>
<td class="cellalignment1013" headers="r35c1-t5 r1c2-t5">
<p>0</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r36c1-t5" headers="r1c1-t5">
<p><code>OCILobOpen()</code></p>
</td>
<td class="cellalignment1013" headers="r36c1-t5 r1c2-t5">
<p>1</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r37c1-t5" headers="r1c1-t5">
<p><code>OCILobRead()</code></p>
</td>
<td class="cellalignment1013" headers="r37c1-t5 r1c2-t5">
<p>0 or 1</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r38c1-t5" headers="r1c1-t5">
<p><code>OCILobRead2()</code></p>
</td>
<td class="cellalignment1013" headers="r38c1-t5 r1c2-t5">
<p>0 or 1</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r39c1-t5" headers="r1c1-t5">
<p><code>OCILobTrim()</code></p>
</td>
<td class="cellalignment1013" headers="r39c1-t5 r1c2-t5">
<p>1</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r40c1-t5" headers="r1c1-t5">
<p><code>OCILobTrim2()</code></p>
</td>
<td class="cellalignment1013" headers="r40c1-t5 r1c2-t5">
<p>1</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r41c1-t5" headers="r1c1-t5">
<p><code>OCILobWrite()</code></p>
</td>
<td class="cellalignment1013" headers="r41c1-t5 r1c2-t5">
<p>0 or 1</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r42c1-t5" headers="r1c1-t5">
<p><code>OCILobWrite2()</code></p>
</td>
<td class="cellalignment1013" headers="r42c1-t5 r1c2-t5">
<p>0 or 1</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r43c1-t5" headers="r1c1-t5">
<p><code>OCILobWriteAppend()</code></p>
</td>
<td class="cellalignment1013" headers="r43c1-t5 r1c2-t5">
<p>0 or 1</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r44c1-t5" headers="r1c1-t5">
<p><code>OCILobWriteAppend2()</code></p>
</td>
<td class="cellalignment1013" headers="r44c1-t5 r1c2-t5">
<p>0 or 1</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="sect1" -->
<a id="i421673"></a>
<div id="LNOCI18079" class="sect1">
<h2 class="sect1">Object and Cache Function Round-Trips<a id="sthref5692"></a><a id="sthref5693"></a><a id="sthref5694"></a><a id="sthref5695"></a></h2>
<p><a href="#g427836">Table C-3</a> lists the number of server round-trips required for the object and cache functions. These values assume the cache is in a <span class="italic">warm</span> state, meaning that the type descriptor objects required by the application have been loaded.</p>
<div id="LNOCI18080" class="tblformal">
<p class="titleintable"><a id="sthref5696"></a><a id="g427836"></a>Table C-3 Server Round-Trips for Object and Cache Functions</p>
<table class="cellalignment1016" title="Server Round-Trips for Object and Cache Functions " summary="This table is described in the preceding text" dir="ltr">
<thead>
<tr class="cellalignment1005">
<th class="cellalignment1012" id="r1c1-t6">Function</th>
<th class="cellalignment1012" id="r1c2-t6">Number of Server Round-Trips</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r2c1-t6" headers="r1c1-t6">
<p><code>OCICacheFlush()</code></p>
</td>
<td class="cellalignment1013" headers="r2c1-t6 r1c2-t6">
<p>1</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r3c1-t6" headers="r1c1-t6">
<p><code>OCICacheFree()</code></p>
</td>
<td class="cellalignment1013" headers="r3c1-t6 r1c2-t6">
<p>0</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r4c1-t6" headers="r1c1-t6">
<p><code>OCICacheRefresh()</code></p>
</td>
<td class="cellalignment1013" headers="r4c1-t6 r1c2-t6">
<p>1</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r5c1-t6" headers="r1c1-t6">
<p><code>OCICacheUnmark()</code></p>
</td>
<td class="cellalignment1013" headers="r5c1-t6 r1c2-t6">
<p>0</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r6c1-t6" headers="r1c1-t6">
<p><code>OCICacheUnpin()</code></p>
</td>
<td class="cellalignment1013" headers="r6c1-t6 r1c2-t6">
<p>0</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r7c1-t6" headers="r1c1-t6">
<p><code>OCIObjectArrayPin()</code></p>
</td>
<td class="cellalignment1013" headers="r7c1-t6 r1c2-t6">
<p>1</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r8c1-t6" headers="r1c1-t6">
<p><code>OCIObjectCopy()</code></p>
</td>
<td class="cellalignment1013" headers="r8c1-t6 r1c2-t6">
<p>0</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r9c1-t6" headers="r1c1-t6">
<p><code>OCIObjectExists()</code></p>
</td>
<td class="cellalignment1013" headers="r9c1-t6 r1c2-t6">
<p>0</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r10c1-t6" headers="r1c1-t6">
<p><code>OCIObjectFlush()</code></p>
</td>
<td class="cellalignment1013" headers="r10c1-t6 r1c2-t6">
<p>1</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r11c1-t6" headers="r1c1-t6">
<p><code>OCIObjectFree()</code></p>
</td>
<td class="cellalignment1013" headers="r11c1-t6 r1c2-t6">
<p>0</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r12c1-t6" headers="r1c1-t6">
<p><code>OCIObjectGetInd()</code></p>
</td>
<td class="cellalignment1013" headers="r12c1-t6 r1c2-t6">
<p>0</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r13c1-t6" headers="r1c1-t6">
<p><code>OCIObjectGetObjectRef()</code></p>
</td>
<td class="cellalignment1013" headers="r13c1-t6 r1c2-t6">
<p>0</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r14c1-t6" headers="r1c1-t6">
<p><code>OCIObjectGetTypeRef()</code></p>
</td>
<td class="cellalignment1013" headers="r14c1-t6 r1c2-t6">
<p>0</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r15c1-t6" headers="r1c1-t6">
<p><code>OCIObjectIsDirty()</code></p>
</td>
<td class="cellalignment1013" headers="r15c1-t6 r1c2-t6">
<p>0</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r16c1-t6" headers="r1c1-t6">
<p><code>OCIObjectIsLocked()</code></p>
</td>
<td class="cellalignment1013" headers="r16c1-t6 r1c2-t6">
<p>0</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r17c1-t6" headers="r1c1-t6">
<p><code>OCIObjectLock()</code></p>
</td>
<td class="cellalignment1013" headers="r17c1-t6 r1c2-t6">
<p>1</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r18c1-t6" headers="r1c1-t6">
<p><code>OCIObjectMarkDelete()</code></p>
</td>
<td class="cellalignment1013" headers="r18c1-t6 r1c2-t6">
<p>0</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r19c1-t6" headers="r1c1-t6">
<p><code>OCIObjectMarkDeleteByRef()</code></p>
</td>
<td class="cellalignment1013" headers="r19c1-t6 r1c2-t6">
<p>0</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r20c1-t6" headers="r1c1-t6">
<p><code>OCIObjectMarkUpdate()</code></p>
</td>
<td class="cellalignment1013" headers="r20c1-t6 r1c2-t6">
<p>0</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r21c1-t6" headers="r1c1-t6">
<p><code>OCIObjectNew()</code></p>
</td>
<td class="cellalignment1013" headers="r21c1-t6 r1c2-t6">
<p>0</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r22c1-t6" headers="r1c1-t6">
<p><code>OCIObjectPin()</code></p>
</td>
<td class="cellalignment1013" headers="r22c1-t6 r1c2-t6">
<p>1; 0 if the desired object is already in cache</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r23c1-t6" headers="r1c1-t6">
<p><code>OCIObjectPinCountReset()</code></p>
</td>
<td class="cellalignment1013" headers="r23c1-t6 r1c2-t6">
<p>0</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r24c1-t6" headers="r1c1-t6">
<p><code>OCIObjectPinTable()</code></p>
</td>
<td class="cellalignment1013" headers="r24c1-t6 r1c2-t6">
<p>1</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r25c1-t6" headers="r1c1-t6">
<p><code>OCIObjectRefresh()</code></p>
</td>
<td class="cellalignment1013" headers="r25c1-t6 r1c2-t6">
<p>1</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r26c1-t6" headers="r1c1-t6">
<p><code>OCIObjectUnmark()</code></p>
</td>
<td class="cellalignment1013" headers="r26c1-t6 r1c2-t6">
<p>0</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r27c1-t6" headers="r1c1-t6">
<p><code>OCIObjectUnmarkByRef()</code></p>
</td>
<td class="cellalignment1013" headers="r27c1-t6 r1c2-t6">
<p>0</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r28c1-t6" headers="r1c1-t6">
<p><code>OCIObjectUnpin()</code></p>
</td>
<td class="cellalignment1013" headers="r28c1-t6 r1c2-t6">
<p>0</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="sect1" -->
<a id="i421674"></a>
<div id="LNOCI18081" class="sect1">
<h2 class="sect1">Describe Operation Round-Trips<a id="sthref5697"></a><a id="sthref5698"></a></h2>
<p><a href="#g427955">Table C-4</a> lists the number of server round-trips required by <code>OCIDescribeAny()</code>, <code>OCIAttrGet()</code>, and <code>OCIParamGet()</code>.</p>
<div id="LNOCI18082" class="tblformal">
<p class="titleintable"><a id="sthref5699"></a><a id="g427955"></a>Table C-4 Server Round-Trips for Describe Operations</p>
<table class="cellalignment1016" title="Server Round-Trips for Describe Operations" summary="This table is described in the preceding text" dir="ltr">
<thead>
<tr class="cellalignment1005">
<th class="cellalignment1012" id="r1c1-t7">Function</th>
<th class="cellalignment1012" id="r1c2-t7">Number of Server Round-Trips</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r2c1-t7" headers="r1c1-t7">
<p><code>OCIAttrGet()</code></p>
</td>
<td class="cellalignment1013" headers="r2c1-t7 r1c2-t7">
<p>2 round-trips to describe a type if the type objects are not in the object cache</p>
<p>1 round-trip for each collection element, or each type attribute, method, or method argument descriptor. 1 more round-trip if using <code>OCI_ATTR_TYPE_NAME</code>, or <code>OCI_ATTR_SCHEMA_NAME</code> on the collection element, type attribute, or method argument.</p>
<p>0 if all the type objects to be described are already in the object cache following the first <code>OCIAttrGet()</code> call.</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r3c1-t7" headers="r1c1-t7">
<p><code>OCIDescribeAny()</code></p>
</td>
<td class="cellalignment1013" headers="r3c1-t7 r1c2-t7">
<p>1 round-trip to get the <code>REF</code> of the type descriptor object</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r4c1-t7" headers="r1c1-t7">
<p><code>OCIParamGet()</code></p>
</td>
<td class="cellalignment1013" headers="r4c1-t7 r1c2-t7">
<p>0</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="sect1" -->
<a id="i421675"></a>
<div id="LNOCI18083" class="sect1">
<h2 class="sect1">Data Type Mapping and Manipulation Function Round-Trips<a id="sthref5700"></a><a id="sthref5701"></a></h2>
<p><a href="#g427924">Table C-5</a> lists the number of round-trips for the data type mapping and manipulation functions. The asterisks in the table indicate that all functions with a particular prefix incur the same number of server round-trips. For example, <code>OCINumberAdd()</code>, <code>OCINumberPower()</code>, and <code>OCINumberFromText()</code> all incur zero server round-trips.</p>
<div id="LNOCI18084" class="tblformal">
<p class="titleintable"><a id="sthref5702"></a><a id="g427924"></a>Table C-5 Server Round-Trips for Data Type Manipulation Functions</p>
<table class="cellalignment1016" title="Server Round-Trips for Data Type Manipulation Functions " summary="This table is described in the preceding text" dir="ltr">
<thead>
<tr class="cellalignment1005">
<th class="cellalignment1012" id="r1c1-t8">Function</th>
<th class="cellalignment1012" id="r1c2-t8">Number of Server Round-Trips</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r2c1-t8" headers="r1c1-t8">
<p><code>OCIColl*()</code></p>
</td>
<td class="cellalignment1013" headers="r2c1-t8 r1c2-t8">
<p>0; 1 if the collection is not loaded in the cache</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r3c1-t8" headers="r1c1-t8">
<p><code>OCIDate*()</code></p>
</td>
<td class="cellalignment1013" headers="r3c1-t8 r1c2-t8">
<p>0</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r4c1-t8" headers="r1c1-t8">
<p><code>OCIIter*()</code></p>
</td>
<td class="cellalignment1013" headers="r4c1-t8 r1c2-t8">
<p>0; 1 if the collection is not loaded in the cache</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r5c1-t8" headers="r1c1-t8">
<p><code>OCINumber*()</code></p>
</td>
<td class="cellalignment1013" headers="r5c1-t8 r1c2-t8">
<p>0</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r6c1-t8" headers="r1c1-t8">
<p><code>OCIRaw*()</code></p>
</td>
<td class="cellalignment1013" headers="r6c1-t8 r1c2-t8">
<p>0</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r7c1-t8" headers="r1c1-t8">
<p><code>OCIRef*()</code></p>
</td>
<td class="cellalignment1013" headers="r7c1-t8 r1c2-t8">
<p>0</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r8c1-t8" headers="r1c1-t8">
<p><code>OCIString*()</code></p>
</td>
<td class="cellalignment1013" headers="r8c1-t8 r1c2-t8">
<p>0</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r9c1-t8" headers="r1c1-t8">
<p><code>OCITable*()</code></p>
</td>
<td class="cellalignment1013" headers="r9c1-t8 r1c2-t8">
<p>0; 1 if the nested table is not loaded in the cache</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="sect1" -->
<a id="i425779"></a>
<div id="LNOCI18085" class="sect1">
<h2 class="sect1">Any Type and Data Function Round-Trips</h2>
<p><a href="#g428150">Table C-6</a> lists the number of server round-trips required by Any Type and Data functions. The functions not listed do not generate any round-trips.</p>
<div id="LNOCI18086" class="tblformal">
<p class="titleintable"><a id="sthref5703"></a><a id="g428150"></a>Table C-6 Server Round-Trips for Any Type and Data Functions</p>
<table class="cellalignment1016" title="Server Round-Trips for Any Type and Data Functions " summary="This table is described in the preceding text" dir="ltr">
<thead>
<tr class="cellalignment1005">
<th class="cellalignment1012" id="r1c1-t9">Function</th>
<th class="cellalignment1012" id="r1c2-t9">Number of Server Round-Trips</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r2c1-t9" headers="r1c1-t9">
<p><code>OCIAnyDataAttrGet()</code></p>
</td>
<td class="cellalignment1013" headers="r2c1-t9 r1c2-t9">
<p>0; 1 if the type information is not loaded in the cache</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r3c1-t9" headers="r1c1-t9">
<p><code>OCIAnyDataAttrSet()</code></p>
</td>
<td class="cellalignment1013" headers="r3c1-t9 r1c2-t9">
<p>0; 1 if the type information is not loaded in the cache</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r4c1-t9" headers="r1c1-t9">
<p><code>OCIAnyDataCollGetElem()</code></p>
</td>
<td class="cellalignment1013" headers="r4c1-t9 r1c2-t9">
<p>0; 1 if the type information is not loaded in the cache</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="sect1" -->
<a id="i422701"></a>
<div id="LNOCI18087" class="sect1">
<h2 class="sect1">Other Local Functions<a id="sthref5704"></a><a id="sthref5705"></a></h2>
<p><a href="#g427971">Table C-7</a> lists the functions that are local and do not require a server round-trip.</p>
<div id="LNOCI18088" class="tblformal">
<p class="titleintable"><a id="sthref5706"></a><a id="g427971"></a>Table C-7 Locally Processed Functions</p>
<table class="cellalignment1016" title="Locally Processed Functions " summary="This table is described in the preceding text" dir="ltr">
<thead>
<tr class="cellalignment1005">
<th class="cellalignment1012" id="r1c1-t10">Local Function Name</th>
<th class="cellalignment1012" id="r1c2-t10">Notes</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r2c1-t10" headers="r1c1-t10">
<p><code>OCIAttrGet()</code></p>
</td>
<td class="cellalignment1013" headers="r2c1-t10 r1c2-t10">
<p>When describing an object type, this call makes one round-trip to fetch the type descriptor object.</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r3c1-t10" headers="r1c1-t10">
<p><code>OCIAttrSet()</code></p>
</td>
<td class="cellalignment1013" headers="r3c1-t10 r1c2-t10">
<p>&nbsp;</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r4c1-t10" headers="r1c1-t10">
<p><code>OCIBindArrayOfStruct()</code></p>
</td>
<td class="cellalignment1013" headers="r4c1-t10 r1c2-t10">
<p>&nbsp;</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r5c1-t10" headers="r1c1-t10">
<p><code>OCIDefineArrayOfStruct()</code></p>
</td>
<td class="cellalignment1013" headers="r5c1-t10 r1c2-t10">
<p>&nbsp;</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r6c1-t10" headers="r1c1-t10">
<p><code>OCIBindByName()</code></p>
</td>
<td class="cellalignment1013" headers="r6c1-t10 r1c2-t10">
<p>&nbsp;</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r7c1-t10" headers="r1c1-t10">
<p><code>OCIBindByPos()</code></p>
</td>
<td class="cellalignment1013" headers="r7c1-t10 r1c2-t10">
<p>&nbsp;</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r8c1-t10" headers="r1c1-t10">
<p><code>OCIBindDynamic()</code></p>
</td>
<td class="cellalignment1013" headers="r8c1-t10 r1c2-t10">
<p>&nbsp;</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r9c1-t10" headers="r1c1-t10">
<p><code>OCIBindObject()</code></p>
</td>
<td class="cellalignment1013" headers="r9c1-t10 r1c2-t10">
<p>&nbsp;</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r10c1-t10" headers="r1c1-t10">
<p><code>OCIDefineByPos()</code></p>
</td>
<td class="cellalignment1013" headers="r10c1-t10 r1c2-t10">
<p>&nbsp;</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r11c1-t10" headers="r1c1-t10">
<p><code>OCIDefineDynamic()</code></p>
</td>
<td class="cellalignment1013" headers="r11c1-t10 r1c2-t10">
<p>&nbsp;</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r12c1-t10" headers="r1c1-t10">
<p><code>OCIDefineObject()</code></p>
</td>
<td class="cellalignment1013" headers="r12c1-t10 r1c2-t10">
<p>&nbsp;</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r13c1-t10" headers="r1c1-t10">
<p><code>OCIDescriptorAlloc()</code></p>
</td>
<td class="cellalignment1013" headers="r13c1-t10 r1c2-t10">
<p>&nbsp;</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r14c1-t10" headers="r1c1-t10">
<p><code>OCIDescriptorFree()</code></p>
</td>
<td class="cellalignment1013" headers="r14c1-t10 r1c2-t10">
<p>&nbsp;</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r15c1-t10" headers="r1c1-t10">
<p><code>OCIEnvCreate()</code></p>
</td>
<td class="cellalignment1013" headers="r15c1-t10 r1c2-t10">
<p>&nbsp;</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r16c1-t10" headers="r1c1-t10">
<p><code>OCIEnvInit()</code></p>
</td>
<td class="cellalignment1013" headers="r16c1-t10 r1c2-t10">
<p>&nbsp;</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r17c1-t10" headers="r1c1-t10">
<p><code>OCIErrorGet()</code></p>
</td>
<td class="cellalignment1013" headers="r17c1-t10 r1c2-t10">
<p>&nbsp;</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r18c1-t10" headers="r1c1-t10">
<p><code>OCIHandleAlloc()</code></p>
</td>
<td class="cellalignment1013" headers="r18c1-t10 r1c2-t10">
<p>&nbsp;</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r19c1-t10" headers="r1c1-t10">
<p><code>OCIHandleFree()</code></p>
</td>
<td class="cellalignment1013" headers="r19c1-t10 r1c2-t10">
<p>&nbsp;</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r20c1-t10" headers="r1c1-t10">
<p><code>OCILdaToSvcCtx()</code></p>
</td>
<td class="cellalignment1013" headers="r20c1-t10 r1c2-t10">
<p>&nbsp;</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r21c1-t10" headers="r1c1-t10">
<p><code>OCIStmtGetBindInfo()</code></p>
</td>
<td class="cellalignment1013" headers="r21c1-t10 r1c2-t10">
<p>&nbsp;</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r22c1-t10" headers="r1c1-t10">
<p><code>OCIStmtPrepare()</code></p>
</td>
<td class="cellalignment1013" headers="r22c1-t10 r1c2-t10">
<p>&nbsp;</p>
</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r23c1-t10" headers="r1c1-t10">
<p><code>OCIStmtRelease()</code></p>
</td>
<td class="cellalignment1013" headers="r23c1-t10 r1c2-t10">&nbsp;</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r24c1-t10" headers="r1c1-t10">
<p><code>OCIStmtPrepare2()</code></p>
</td>
<td class="cellalignment1013" headers="r24c1-t10 r1c2-t10">&nbsp;</td>
</tr>
<tr class="cellalignment1005">
<td class="cellalignment1013" id="r25c1-t10" headers="r1c1-t10">
<p><code>OCISvcCtxToLda()</code></p>
</td>
<td class="cellalignment1013" headers="r25c1-t10 r1c2-t10">
<p>&nbsp;</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="sect1" --></div>
<!-- class="appendix" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment1004">
<tr>
<td class="cellalignment1013">
<table class="cellalignment1009">
<tr>
<td class="cellalignment1008"><a href="ociabdem.htm"><img width="24" height="24" src="../../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment1008"><a href="ociadwin.htm"><img width="24" height="24" src="../../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;1996, 2014,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment1015">
<table class="cellalignment1007">
<tr>
<td class="cellalignment1008"><a href="../../index.htm"><img width="24" height="24" src="../../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment1008"><a href="../../nav/portal_booklist.htm"><img width="24" height="24" src="../../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment1008"><a href="toc.htm"><img width="24" height="24" src="../../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment1008"><a href="index.htm"><img width="24" height="24" src="../../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment1008"><a href="../../nav/mindx.htm"><img width="24" height="24" src="../../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment1008"><a href="../../dcommon/html/feedback.htm"><img width="24" height="24" src="../../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>
</body>
</html>
