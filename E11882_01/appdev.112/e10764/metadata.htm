<!DOCTYPE html>
<html lang="en" >
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1">
<meta charset="utf-8">
<title>Metadata</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Version 5.1.2 Build 711" />
<meta name="dcterms.created" content="2013-02-06T9:20:49Z" />
<meta name="robots" content="all" />
<meta name="dcterms.title" content="C++ Call Interface Programmer's Guide," />
<meta name="dcterms.identifier" content="E10764-04" />
<meta name="dcterms.isVersionOf" content="LNCPP" />
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;1999, 2013,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved." />
<link rel="Start" href="../../index.htm" title="Home" type="text/html" />
<link rel="Copyright" href="../../dcommon/html/cpyr.htm" title="Copyright" type="text/html" />

<script type="application/javascript"  src="../../dcommon/js/headfoot.js"></script>
<script type="application/javascript"  src="../../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html" />
<link rel="Index" href="index.htm" title="Index" type="text/html" />
<link rel="Prev" href="types.htm" title="Previous" type="text/html" />
<link rel="Next" href="lobs.htm" title="Next" type="text/html" />
<link rel="alternate" href="../e10764.pdf" title="PDF version" type="application/pdf" />
<link rel="schema.dcterms" href="http://purl.org/dc/terms/" />
<link rel="stylesheet" href="../../dcommon/css/fusiondoc.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/header.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/footer.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/fonts.css">
<link rel="stylesheet" href="../../dcommon/css/foundation.css">
<link rel="stylesheet" href="../../dcommon/css/codemirror.css">
<link rel="stylesheet" type="text/css" title="Default" href="../../nav/css/html5.css">
<link rel="stylesheet" href="../../dcommon/css/respond-480-tablet.css">
<link rel="stylesheet" href="../../dcommon/css/respond-768-laptop.css">
<link rel="stylesheet" href="../../dcommon/css/respond-1140-deskop.css">
<script type="application/javascript" src="../../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">13/54</span> <!-- End Header --><a id="CIACHFEI"></a><a id="LNCPP006"></a><a id="i1000982"></a>
<h1 class="chapter"><span class="secnum">6</span> Metadata</h1>
<p>This chapter describes how to retrieve metadata about result sets or the database as a whole.</p>
<p>This chapter contains these topics:</p>
<ul>
<li>
<p><a href="#i1006288">Overview of Metadata</a></p>
</li>
<li>
<p><a href="#i1005289">Describing Database Metadata</a></p>
</li>
</ul>
<a id="i1006288"></a><a id="LNCPP20275"></a>
<div class="sect1">
<h2 class="sect1">Overview of M<a id="sthref461"></a>etadata</h2>
<p>Database objects have various attributes that describe them; you can obtain information about a particular schema object by performing a <code>DESCRIBE</code> operation. The result can be accessed as an object of the <code>Metadata</code> class by passing object attributes as arguments to the various methods of the <code>Metadata</code> class.</p>
<p>You can perform an explicit <code>DESCRIBE</code> operation on the database as a whole, on the types and properties of the columns contained in a <code>ResultSet</code> class, or on any of the following schema and subschema objects, such as tables, types, sequences, views, type attributes, columns, procedures, type methods, arguments, functions, collections, results, packages, synonyms, and lists</p>
<p>You must specify the type of the attribute you are looking for. By using the <code>getAttributeCount()</code>, <code>getAttributeId()</code>, and <code>getAttributeType()</code> methods of the <code>MetaData</code> class, you can scan through each available attribute.</p>
<p>All <code>DESCRIBE</code> information is cached until the last reference to it is deleted. Users are in this way prevented from accidentally trying to access <code>DESCRIBE</code> information that is freed.</p>
<p>You obtain metadata by calling the <code>getMetaData()</code> method on the <code>Connection</code> class in case of an explicit describe, or by calling the <code>getColumnListMetaData()</code> method on the <code>ResultSet</code> class to get the metadata of the result set columns. Both methods return a <code>MetaData</code> object with the describing information. The <code>MetaData</code> class provides the <code>get</code><code><span class="codeinlineitalic">xxx</span></code><code>()</code> methods to access this information.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="reference020.htm#BBAJJDDG">Table 13-27, "Enumerated Values Used by MetaData Class"</a></div>
<p>When performing <code>DESCRIBE</code> operations, be aware of the following issues:</p>
<ul>
<li>
<p>The <code>ATTR_TYPECODE</code> returns type codes that represent the type supplied when you created a new type by using the <code>CREATE</code> <code>TYPE</code> statement. These type codes are of the enumerated type <code>TypeCode</code>, which are represented by <code>OCCI_TYPECODE</code> constants. Internal PL/SQL types (boolean, indexed table) are not supported</p>
</li>
<li>
<p>The <code>ATTR_DATA_TYPE</code> returns types that represent the data types of the database columns. These values are of enumerated type <code>Type</code>. For example, <code>LONG</code> types return <code>OCCI_SQLT_LNG</code> types.</p>
</li>
</ul>
</div>
<!-- class="sect1" -->
<a id="i1005289"></a><a id="LNCPP20277"></a>
<div class="sect1">
<h2 class="sect1">Describing Datab<a id="sthref462"></a>ase Metadata</h2>
<p>Describing database metadata is equivalent to an explicit <code>DESCRIBE</code> operation. The object to describe must be an object in the schema. In describing a type, you call the <code>getMetaData()</code> method from the connection, passing the name of the object or a <code>RefAny</code> object. You must first initialize the environment in the <code>OBJECT</code> mode. The <code>getMetaData()</code> method returns an object of type <code>MetaData</code>. Each type of <code>MetaData</code> object has a list of attributes that are part of the describe tree. The describe tree can then be traversed recursively to point to subtrees that contain more information. More information about an object can be obtained by calling the <code>get</code><code><span class="codeinlineitalic">xxx</span></code><code>()</code> methods.</p>
<p>If you must construct a browser that describes the database and its objects recursively, then you can access information regarding the number of attributes for each object in the database (including the database), the attribute ID listing, and the attribute types listing. By using this information, you can recursively traverse the describe tree from the top node (the database) to the columns in the tables, the attributes of a type, the parameters of a procedure or function, and so on.</p>
<p>For example, consider the typical case of describing a table and its contents. You call the <code>getMetaData()</code> method from the connection, passing the name of the table to be described. The <code>MetaData</code> object returned contains the table information. Beacuse you are aware of the type of the object you want to describe (table, column, type, collection, function, procedure, and so on), you can obtain the attribute list. You can retrieve the value into a variable of the type specified in the table by calling the corresponding <code>get</code><code><span class="codeinlineitalic">xxx</span></code><code>()</code> method.</p>
<div class="tblformal">
<p class="titleintable"><a id="LNCPP20278"></a><a id="sthref463"></a><a id="g1015055"></a>Table 6-1 Attribute Gro<a id="sthref464"></a>upings</p>
<table class="cellalignment1073" title="Attribute Groupings " summary="First column lists attribute types; second column provides description of these attribute types." dir="ltr">
<thead>
<tr class="cellalignment1067">
<th class="cellalignment1074" id="r1c1-t3">Attribute Type</th>
<th class="cellalignment1074" id="r1c2-t3">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r2c1-t3" headers="r1c1-t3">
<p><a id="sthref465"></a><a href="#i1001465">Parameter Attributes</a></p>
</td>
<td class="cellalignment1075" headers="r2c1-t3 r1c2-t3">
<p>Attri<a id="sthref466"></a>butes belonging to all elements</p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r3c1-t3" headers="r1c1-t3">
<p><a href="#i1008968">Table and View Attributes</a></p>
</td>
<td class="cellalignment1075" headers="r3c1-t3 r1c2-t3">
<p>Attr<a id="sthref467"></a>ibutes belonging to tables and views</p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r4c1-t3" headers="r1c1-t3">
<p><a href="#i1002632">Procedure, Function, and Subprogram Attributes</a></p>
</td>
<td class="cellalignment1075" headers="r4c1-t3 r1c2-t3">
<p>Attr<a id="sthref468"></a>ibutes belonging to procedures, functions, and package subprograms</p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r5c1-t3" headers="r1c1-t3">
<p><a href="#i1001477">Package Attributes</a></p>
</td>
<td class="cellalignment1075" headers="r5c1-t3 r1c2-t3">
<p>Attri<a id="sthref469"></a>butes belonging to packages</p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r6c1-t3" headers="r1c1-t3">
<p><a href="#i1001481">Type Attributes</a></p>
</td>
<td class="cellalignment1075" headers="r6c1-t3 r1c2-t3">
<p>Att<a id="sthref470"></a>ributes belonging to types</p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r7c1-t3" headers="r1c1-t3">
<p><a href="#i1001485">Type Attribute Attributes</a></p>
</td>
<td class="cellalignment1075" headers="r7c1-t3 r1c2-t3">
<p>Attributes belonging to type attributes<a id="sthref471"></a></p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r8c1-t3" headers="r1c1-t3">
<p><a href="#i1001489">Type Method Attributes</a></p>
</td>
<td class="cellalignment1075" headers="r8c1-t3 r1c2-t3">
<p>Attr<a id="sthref472"></a>ibutes belonging to type methods</p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r9c1-t3" headers="r1c1-t3">
<p><a href="#i1001493">Collection Attributes</a></p>
</td>
<td class="cellalignment1075" headers="r9c1-t3 r1c2-t3">
<p>Attrib<a id="sthref473"></a>utes belonging to collection types</p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r10c1-t3" headers="r1c1-t3">
<p><a href="#i1001497">Synonym Attributes</a></p>
</td>
<td class="cellalignment1075" headers="r10c1-t3 r1c2-t3">
<p>Attri<a id="sthref474"></a>butes belonging to synonyms</p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r11c1-t3" headers="r1c1-t3">
<p><a href="#i1001501">Sequence Attributes</a></p>
</td>
<td class="cellalignment1075" headers="r11c1-t3 r1c2-t3">
<p>Attr<a id="sthref475"></a>ibutes belonging to sequences</p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r12c1-t3" headers="r1c1-t3">
<p><a href="#i1001505">Column Attributes</a></p>
</td>
<td class="cellalignment1075" headers="r12c1-t3 r1c2-t3">
<p>Attri<a id="sthref476"></a>butes belonging to columns of tables or views</p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r13c1-t3" headers="r1c1-t3">
<p><a href="#i1001533">Argument and Result Attributes</a></p>
</td>
<td class="cellalignment1075" headers="r13c1-t3 r1c2-t3">
<p>Attri<a id="sthref477"></a>butes belonging to arguments / results</p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r14c1-t3" headers="r1c1-t3">
<p><a href="#i1001537">List Attributes</a></p>
</td>
<td class="cellalignment1075" headers="r14c1-t3 r1c2-t3">
<p>Att<a id="sthref478"></a>ributes that designate the list type</p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r15c1-t3" headers="r1c1-t3">
<p><a href="#i1001541">Schema Attributes</a></p>
</td>
<td class="cellalignment1075" headers="r15c1-t3 r1c2-t3">
<p>A<a id="sthref479"></a>ttributes specific to schemas</p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r16c1-t3" headers="r1c1-t3">
<p><a href="#i1001545">Database Attributes</a></p>
</td>
<td class="cellalignment1075" headers="r16c1-t3 r1c2-t3">
<p>Att<a id="sthref480"></a>ributes specific to databases</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<a id="LNCPP20279"></a>
<div class="sect2"><a id="sthref481"></a>
<h3 class="sect2">Metadata Cod<a id="sthref482"></a>e Examples</h3>
<p>This section provides code examples for using metadata:</p>
<ul>
<li>
<p><a href="#BABEEHDB">Example 6-1, "How to Obtain Metadata About Attributes of a Simple Database Table"</a></p>
</li>
<li>
<p><a href="#BABGCCFE">Example 6-2, "How to Obtain Metadata from a Column Containing User-Defined Types"</a></p>
</li>
<li>
<p><a href="#BABFGDEG">Example 6-3, "How to Obtain Object Metadata from a Reference"</a></p>
</li>
<li>
<p><a href="#BABFEDDJ">Example 6-4, "How to Obtain Metadata About a Select List from a ResultSet Object"</a></p>
</li>
</ul>
<div class="example">
<p class="titleinexample"><a id="BABEEHDB"></a><a id="LNCPP20280"></a>Example 6-1 How to Obtain Metadata About Attributes of a Simple Database Table</p>
<p>This example demonstrates how to obtain metadata about attributes of a simple database table:</p>
<pre>
/* Create an environment and a connection to the HR database */
.
.
/* Call the getMetaData method on the Connection object obtainedv*/
MetaData emptab_metaData = connection-&gt;getMetaData(
      "EMPLOYEES", MetaData::PTYPE_TABLE);
/* Now that you have the metadata information on the EMPLOYEES table,
   call the getxxx methods using the appropriate attributes */

/* Call getString */
cout&lt;&lt;"Schema:"&lt;&lt;
              (emptab_metaData.getString(MetaData::ATTR_OBJ_SCHEMA))&lt;&lt;endl;

if(emptab_metaData.getInt(
              emptab_metaData::ATTR_PTYPE)==MetaData::PTYPE_TABLE)
   cout&lt;&lt;"EMPLOYEES is a table"&lt;&lt;endl;
else
    cout&lt;&lt;"EMPLOYEES is not a table"&lt;&lt;endl;

/* Call getInt to get the number of columns in the table */
int columnCount=emptab_metaData.getInt(MetaData::ATTR_NUM_COLS);
cout&lt;&lt;"Number of Columns:"&lt;&lt;columnCount&lt;&lt;endl;

/* Call getTimestamp to get the timestamp of the table object */
Timestamp tstamp = emptab_metaData.getTimestamp(MetaData::ATTR_TIMESTAMP);
/* Now that you have the value of the attribute as a Timestamp object,
   you can call methods to obtain the components of the timestamp */
int year;
unsigned int month, day;
tstamp.getData(year, month, day);

/* Call getVector for attributes of list type, such as ATTR_LIST_COLUMNS */
vector&lt;MetaData&gt;listOfColumns;
listOfColumns=emptab_metaData.getVector(MetaData::ATTR_LIST_COLUMNS);

/* Each of the list elements represents a column metadata,
   so now you can access the column attributes*/
for (int i=0;i&lt;listOfColumns.size();i++
{
   MetaData columnObj=listOfColumns[i];
   cout&lt;&lt;"Column Name:"&lt;&lt;(columnObj.getString(MetaData::ATTR_NAME))&lt;&lt;endl;
   cout&lt;&lt;"Data Type:"&lt;&lt;(columnObj.getInt(MetaData::ATTR_DATA_TYPE))&lt;&lt;endl;
   .
   .
   /* and so on to obtain metadata on other column specific attributes */
}
</pre></div>
<!-- class="example" -->
<div class="example">
<p class="titleinexample"><a id="BABGCCFE"></a><a id="LNCPP20281"></a>Example 6-2 How to Obtain Metadata from a Column Containing User-Defined Types</p>
<p>This example demonstrates how to obtain metadata from a column that contains user-defined types database table.</p>
<pre>
/* Create an environment and a connection to the HR database */
...
/* Call the getMetaData method on the Connection object obtained */
MetaData custtab_metaData = connection-&gt;getMetaData(
      "CUSTOMERS", MetaData::PTYPE_TABLE);

/* Have metadata information on CUSTOMERS table; call the getxxx methods */
/* Call getString */
cout&lt;&lt;"Schema:"&lt;&lt;(custtab_metaData.getString(MetaData::ATTR_OBJ_SCHEMA))
     &lt;&lt;endl;
if(custtab_metaData.getInt(custtab_metaData::ATTR_PTYPE)==MetaData::PTYPE_TABLE)
   cout&lt;&lt;"CUSTOMERS is a table"&lt;&lt;endl;
else
   cout&lt;&lt;"CUSTOMERS is not a table"&lt;&lt;endl;

/* Call getVector to obtain list of columns in the CUSTOMERS table */
vector&lt;MetaData&gt;listOfColumns;
listOfColumns=custtab_metaData.getVector(MetaData::ATTR_LIST_COLUMNS);

/* Assuming metadata for column cust_address_typ is fourth element in list*/
MetaData customer_address=listOfColumns[3];

/* Obtain the metadata for the customer_address attribute */
int typcode = customer_address.getInt(MetaData::ATTR_TYPECODE);
if(typcode==OCCI_TYPECODE_OBJECT)
   cout&lt;&lt;"customer_address is an object type"&lt;&lt;endl;
else
   cout&lt;&lt;"customer_address is not an object type"&lt;&lt;endl;

string objectName=customer_address.getString(MetaData::ATTR_OBJ_NAME);

/* Now that you have the name of the address object,
   the metadata of the attributes of the type can be obtained by using
   getMetaData on the connection by passing the object name
*/
MetaData address = connection-&gt;getMetaData(objectName);

/* Call getVector to obtain the list of the address object attributes */
vector&lt;MetaData&gt; attributeList = 
      address.getVector(MetaData::ATT_LIST_TYPE_ATTRS);

/* and so on to obtain metadata on other address object specific attributes */
</pre></div>
<!-- class="example" -->
<div class="example">
<p class="titleinexample"><a id="BABFGDEG"></a><a id="LNCPP20282"></a>Example 6-3 How to Obtain Object Metadata from a Reference</p>
<p>This example demonstrates how to obtain metadata about an object when using a reference to it:</p>
<pre>
Type ADDRESS(street VARCHAR2(50), city VARCHAR2(20));
Table Person(id NUMBER, addr REF ADDRESS);

/* Create an environment and a connection to the HR database */
.
.
/* Call the getMetaData method on the Connection object obtained */
MetaData perstab_metaData = connection-&gt;getMetaData(
      "Person", MetaData::PTYPE_TABLE);

/* Now that you have the metadata information on the Person table,
   call the getxxx methods using the appropriate attributes */
/* Call getString */
cout&lt;&lt;"Schema:"&lt;&lt;(perstab_metaData.getString(MetaData::ATTR_OBJ_SCHEMA))&lt;&lt;endl;

if(perstab_metaData.getInt(perstab_metaData::ATTR_PTYPE)==MetaData::PTYPE_TABLE)
   cout&lt;&lt;"Person is a table"&lt;&lt;endl;
else
   cout&lt;&lt;"Person is not a table"&lt;&lt;endl;

/* Call getVector to obtain the list of columns in the Person table*/
vector&lt;MetaData&gt;listOfColumns;
listOfColumns=perstab_metaData.getVector(MetaData::ATTR_LIST_COLUMNS);

/* Each of the list elements represents a column metadata,
   so now get the data type of the column by passing ATTR_DATA_TYPE
   to getInt */
for(int i=0;i&lt;numCols;i++)
{
   int dataType=colList[i].getInt(MetaData::ATTR_DATA_TYPE);
   /* If the data type is a reference, get the Ref and obtain the metadata
      about the object by passing the Ref to getMetaData */
   if(dataType==SQLT_REF)
      RefAny refTdo=colList[i].getRef(MetaData::ATTR_REF_TDO);

   /* Now you can obtain the metadata about the object as shown
   MetaData tdo_metaData=connection-&gt;getMetaData(refTdo);

   /* Now that you have the metadata about the TDO, you can obtain the metadata
      about the object */
}
</pre></div>
<!-- class="example" -->
<div class="example">
<p class="titleinexample"><a id="BABFEDDJ"></a><a id="LNCPP20283"></a>Example 6-4 How to Obtain Metadata About a Select List from a ResultSet Object</p>
<p>This example demonstrates how to obtain metadata about a select list from a <code>ResultSet</code>.</p>
<pre>
/* Create an environment and a connection to the database */
...
/* Create a statement and associate it with a select clause */
string sqlStmt="SELECT * FROM EMPLOYEES";
Statement *stmt=conn-&gt;createStatement(sqlStmt);

/* Execute the statement to obtain a ResultSet */
ResultSet *rset=stmt-&gt;executeQuery();

/* Obtain the metadata about the select list */
vector&lt;MetaData&gt;cmd=rset-&gt;getColumnListMetaData();

/* The metadata is a column list and each element is a column metaData */
int dataType=cmd[i].getInt(MetaData::ATTR_DATA_TYPE);
...
</pre>
<p>The <code>getMetaData</code> method is called for the <code>ATTR_COLLECTION_ELEMENT</code> attribute only.</p>
</div>
<!-- class="example" --></div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="i1005294"></a><a id="LNCPP20284"></a>
<div class="sect1">
<h2 class="sect1">Attribute <a id="sthref483"></a>Reference</h2>
<p>This section describes the attributes belonging to schema and subschema objects.</p>
<a id="i1001465"></a><a id="LNCPP20285"></a>
<div class="sect2">
<h3 class="sect2">Paramet<a id="sthref484"></a>er Attributes</h3>
<p>All elements have some attributes specific to that element and some generic attributes. <a href="#BGBJHFHC">Table 6-2</a> describes the attributes that belong to all elements:</p>
<div class="tblformalwidemax">
<p class="titleintable"><a id="LNCPP20286"></a><a id="sthref485"></a><a id="BGBJHFHC"></a>Table 6-2 Attributes that Belong to All Elements</p>
<table class="cellalignment1076" title="Attributes that Belong to All Elements" summary="First column lists attribute typess; second column provides description of these attributes; third column provides dataypes of these attributes." dir="ltr">
<thead>
<tr class="cellalignment1067">
<th class="cellalignment1074" id="r1c1-t4">Attribute</th>
<th class="cellalignment1074" id="r1c2-t4">Description</th>
<th class="cellalignment1074" id="r1c3-t4">Attribute Data Type</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r2c1-t4" headers="r1c1-t4">
<p><code>ATTR_OBJ_ID</code></p>
</td>
<td class="cellalignment1075" headers="r2c1-t4 r1c2-t4">
<p>Object or schema ID</p>
</td>
<td class="cellalignment1075" headers="r2c1-t4 r1c3-t4">
<p><code>unsigned int</code></p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r3c1-t4" headers="r1c1-t4">
<p><code>ATTR_OBJ_NAME</code></p>
</td>
<td class="cellalignment1075" headers="r3c1-t4 r1c2-t4">
<p>Object, schema, or database name</p>
</td>
<td class="cellalignment1075" headers="r3c1-t4 r1c3-t4">
<p><code>string</code></p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r4c1-t4" headers="r1c1-t4">
<p><code>ATTR_OBJ_SCHEMA</code></p>
</td>
<td class="cellalignment1075" headers="r4c1-t4 r1c2-t4">
<p>Schema where object is located</p>
</td>
<td class="cellalignment1075" headers="r4c1-t4 r1c3-t4">
<p><code>string</code></p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r5c1-t4" headers="r1c1-t4">
<p><code>ATTR_OBJ_PTYPE</code></p>
</td>
<td class="cellalignment1075" headers="r5c1-t4 r1c2-t4">
<p>Type of information described by the parameter. Possible values are:</p>
<p><code>PTYPE_TABLE,</code> Table</p>
<p><code>PTYPE_VIEW,</code> View</p>
<p><code>PTYPE_PROC,</code> Procedure</p>
<p><code>PTYPE_FUNC,</code> Function</p>
<p><code>PTYPE_PKG,</code> Package</p>
<p><code>PTYPE_TYPE,</code> Type</p>
<p><code>PTYPE_TYPE_ATTR,</code> Attribute of a type</p>
<p><code>PTYPE_TYPE_COLL,</code> Collection type information</p>
<p><code>PTYPE_TYPE_METHOD,</code> A method of a type</p>
<p><code>PTYPE_SYN,</code> Synonym</p>
<p><code>PTYPE_SEQ,</code> Sequence</p>
<p><code>PTYPE_COL,</code> Column of a table or view</p>
<p><code>PTYPE_ARG,</code> Argument of a function or procedure</p>
<p><code>PTYPE_TYPE_ARG,</code> Argument of a type method</p>
<p><code>PTYPE_TYPE_RESULT,</code> Results of a method</p>
<p><code>PTYPE_SCHEMA,</code> Schema</p>
<p><code>PTYPE_DATABASE,</code> Database</p>
</td>
<td class="cellalignment1075" headers="r5c1-t4 r1c3-t4">
<p><code>int</code></p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r6c1-t4" headers="r1c1-t4">
<p><code>ATTR_TIMESTAMP</code></p>
</td>
<td class="cellalignment1075" headers="r6c1-t4 r1c2-t4">
<p>The <code>TIMESTAMP</code> of the object this description is based on (Oracle DATE format).</p>
</td>
<td class="cellalignment1075" headers="r6c1-t4 r1c3-t4">
<p><code>Timestamp</code></p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformalwidemax" -->
<p>The sections that follow list attributes specific to different types of elements.</p>
</div>
<!-- class="sect2" -->
<a id="i1008968"></a><a id="LNCPP20287"></a>
<div class="sect2">
<h3 class="sect2">Table and View A<a id="sthref486"></a>ttributes</h3>
<p>A parameter for a table or view (type <code>PTYPE_TABLE</code> or <code>PTYPE_VIEW</code>) has the following type-specific attributes described in <a href="#g1014339">Table 6-3</a>:</p>
<div class="tblformalmax">
<p class="titleintable"><a id="LNCPP20288"></a><a id="sthref487"></a><a id="g1014339"></a>Table 6-3 Attributes that Belong to Tables or Views</p>
<table class="cellalignment1076" title="Attributes that Belong to Tables or Views " summary="First column lists attributes; second column provides description of these attributes; third column provides dataypes of these attributes." dir="ltr">
<thead>
<tr class="cellalignment1067">
<th class="cellalignment1074" id="r1c1-t5">Attribute</th>
<th class="cellalignment1074" id="r1c2-t5">Description</th>
<th class="cellalignment1074" id="r1c3-t5">Attribute Data Type</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r2c1-t5" headers="r1c1-t5">
<p><code>ATTR_OBJID</code></p>
</td>
<td class="cellalignment1075" headers="r2c1-t5 r1c2-t5">
<p>Object ID</p>
</td>
<td class="cellalignment1075" headers="r2c1-t5 r1c3-t5">
<p><code>unsigned int</code></p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r3c1-t5" headers="r1c1-t5">
<p><code>ATTR_NUM_COLS</code></p>
</td>
<td class="cellalignment1075" headers="r3c1-t5 r1c2-t5">
<p>Number of columns</p>
</td>
<td class="cellalignment1075" headers="r3c1-t5 r1c3-t5">
<p><code>int</code></p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r4c1-t5" headers="r1c1-t5">
<p><code>ATTR_LIST_COLUMNS</code></p>
</td>
<td class="cellalignment1075" headers="r4c1-t5 r1c2-t5">
<p>Column list (type <code>PTYPE_LIST</code>)</p>
</td>
<td class="cellalignment1075" headers="r4c1-t5 r1c3-t5">
<p><code>vector&lt;MetaData&gt;</code></p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r5c1-t5" headers="r1c1-t5">
<p><code>ATTR_REF_TDO</code></p>
</td>
<td class="cellalignment1075" headers="r5c1-t5 r1c2-t5">
<p><code>REF</code> to the object type that is being described</p>
</td>
<td class="cellalignment1075" headers="r5c1-t5 r1c3-t5">
<p><code>RefAny</code></p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r6c1-t5" headers="r1c1-t5">
<p><code>ATTR_IS_TEMPORARY</code></p>
</td>
<td class="cellalignment1075" headers="r6c1-t5 r1c2-t5">
<p>Identifies whether the table or view is temporary</p>
</td>
<td class="cellalignment1075" headers="r6c1-t5 r1c3-t5">
<p><code>bool</code></p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r7c1-t5" headers="r1c1-t5">
<p><code>ATTR_IS_TYPED</code></p>
</td>
<td class="cellalignment1075" headers="r7c1-t5 r1c2-t5">
<p>Identifies whether the table or view is typed</p>
</td>
<td class="cellalignment1075" headers="r7c1-t5 r1c3-t5">
<p><code>bool</code></p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r8c1-t5" headers="r1c1-t5">
<p><code>ATTR_DURATION</code></p>
</td>
<td class="cellalignment1075" headers="r8c1-t5 r1c2-t5">
<p>Duration of a temporary table. Values can be:</p>
<ul>
<li>
<p><code>DURATION_SESSION</code> (session)</p>
</li>
<li>
<p><code>DURATION_TRANS</code> (transaction)</p>
</li>
<li>
<p><code>DURATION_NULL</code> (table not temporary)</p>
</li>
</ul>
</td>
<td class="cellalignment1075" headers="r8c1-t5 r1c3-t5">
<p><code>int</code></p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformalmax" -->
<p>The additional attributes belonging to tables are described in <a href="#g1014375">Table 6-4</a>.</p>
<div class="tblformalmax">
<p class="titleintable"><a id="LNCPP20289"></a><a id="sthref488"></a><a id="g1014375"></a>Table 6-4 Attributes Specific to Tables</p>
<table class="cellalignment1076" title="Attributes Specific to Tables" summary="First column lists attributes; second column provides description of these attributes; third column provides dataypes of these attributes." dir="ltr">
<thead>
<tr class="cellalignment1067">
<th class="cellalignment1074" id="r1c1-t6">Attribute</th>
<th class="cellalignment1074" id="r1c2-t6">Description</th>
<th class="cellalignment1074" id="r1c3-t6">Attribute Data Type</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r2c1-t6" headers="r1c1-t6">
<p><code>ATTR_DBA</code></p>
</td>
<td class="cellalignment1075" headers="r2c1-t6 r1c2-t6">
<p>Data block address of the segment header</p>
</td>
<td class="cellalignment1075" headers="r2c1-t6 r1c3-t6">
<p><code>unsigned int</code></p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r3c1-t6" headers="r1c1-t6">
<p><code>ATTR_TABLESPACE</code></p>
</td>
<td class="cellalignment1075" headers="r3c1-t6 r1c2-t6">
<p>Tablespace the table resides on</p>
</td>
<td class="cellalignment1075" headers="r3c1-t6 r1c3-t6">
<p><code>int</code></p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r4c1-t6" headers="r1c1-t6">
<p><code>ATTR_CLUSTERED</code></p>
</td>
<td class="cellalignment1075" headers="r4c1-t6 r1c2-t6">
<p>Identifies whether the table is clustered</p>
</td>
<td class="cellalignment1075" headers="r4c1-t6 r1c3-t6">
<p><code>bool</code></p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r5c1-t6" headers="r1c1-t6">
<p><code>ATTR_PARTITIONED</code></p>
</td>
<td class="cellalignment1075" headers="r5c1-t6 r1c2-t6">
<p>Identifies whether the table is partitioned</p>
</td>
<td class="cellalignment1075" headers="r5c1-t6 r1c3-t6">
<p><code>bool</code></p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r6c1-t6" headers="r1c1-t6">
<p><code>ATTR_INDEX_ONLY</code></p>
</td>
<td class="cellalignment1075" headers="r6c1-t6 r1c2-t6">
<p>Identifies whether the table is index only</p>
</td>
<td class="cellalignment1075" headers="r6c1-t6 r1c3-t6">
<p><code>bool</code></p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformalmax" --></div>
<!-- class="sect2" -->
<a id="i1002632"></a><a id="LNCPP20290"></a>
<div class="sect2">
<h3 class="sect2">Procedure, Fu<a id="sthref489"></a>nction, and Subprogram Attributes</h3>
<p>A parameter for a procedure or function (type <code>PTYPE_PROC</code> or <code>PTYPE_FUNC</code>) has the type-specific attributes described in <a href="#g1015019">Table 6-5</a>.</p>
<div class="tblformalmax">
<p class="titleintable"><a id="LNCPP20291"></a><a id="sthref490"></a><a id="g1015019"></a>Table 6-5 Attributes that Belong to Procedures or Functions</p>
<table class="cellalignment1076" title="Attributes that Belong to Procedures or Functions" summary="First column lists attributes; second column provides description of these attributes; third column provides dataypes of these attributes." dir="ltr">
<thead>
<tr class="cellalignment1067">
<th class="cellalignment1074" id="r1c1-t7">Attribute</th>
<th class="cellalignment1074" id="r1c2-t7">Description</th>
<th class="cellalignment1074" id="r1c3-t7">Attribute Data Type</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r2c1-t7" headers="r1c1-t7">
<p><code>ATTR_LIST_ARGUMENTS</code></p>
</td>
<td class="cellalignment1075" headers="r2c1-t7 r1c2-t7">
<p>Argument list; refer to <a href="#i1001537">List Attributes</a> .</p>
</td>
<td class="cellalignment1075" headers="r2c1-t7 r1c3-t7">
<p><code>vector&lt;MetaData&gt;</code></p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r3c1-t7" headers="r1c1-t7">
<p><code>ATTR_IS_INVOKER_RIGHTS</code></p>
</td>
<td class="cellalignment1075" headers="r3c1-t7 r1c2-t7">
<p>Identifies whether the procedure or function has invoker's rights.</p>
</td>
<td class="cellalignment1075" headers="r3c1-t7 r1c3-t7">
<p><code>int</code></p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformalmax" -->
<p>The additional attributes belonging to package subprograms are described in <a href="#g1015035">Table 6-6</a>.</p>
<div class="tblformalmax">
<p class="titleintable"><a id="LNCPP20292"></a><a id="sthref491"></a><a id="g1015035"></a>Table 6-6 Attributes that Belong to Package Subprograms</p>
<table class="cellalignment1076" title="Attributes that Belong to Package Subprograms " summary="First column lists attributes; second column provides description of these attributes; third column provides dataypes of these attributes." dir="ltr">
<thead>
<tr class="cellalignment1067">
<th class="cellalignment1074" id="r1c1-t8">Attribute</th>
<th class="cellalignment1074" id="r1c2-t8">Description</th>
<th class="cellalignment1074" id="r1c3-t8">Attribute Data Type</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r2c1-t8" headers="r1c1-t8">
<p><code>ATTR_NAME</code></p>
</td>
<td class="cellalignment1075" headers="r2c1-t8 r1c2-t8">
<p>Name of procedure or function</p>
</td>
<td class="cellalignment1075" headers="r2c1-t8 r1c3-t8">
<p><code>string</code></p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r3c1-t8" headers="r1c1-t8">
<p><code>ATTR_OVERLOAD_ID</code></p>
</td>
<td class="cellalignment1075" headers="r3c1-t8 r1c2-t8">
<p>Overloading ID number (relevant in case the procedure or function is part of a package and is overloaded). Values returned may be different from direct query of a PL/SQL function or procedure.</p>
</td>
<td class="cellalignment1075" headers="r3c1-t8 r1c3-t8">
<p><code>int</code></p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformalmax" --></div>
<!-- class="sect2" -->
<a id="i1001477"></a><a id="LNCPP20293"></a>
<div class="sect2">
<h3 class="sect2">Package A<a id="sthref492"></a>ttributes</h3>
<p>A parameter for a package (type <code>PTYPE_PKG</code>) has the type-specific attributes described in <a href="#g1014403">Table 6-7</a>.</p>
<div class="tblformalmax">
<p class="titleintable"><a id="LNCPP20294"></a><a id="sthref493"></a><a id="g1014403"></a>Table 6-7 Attributes that Belong to Packages</p>
<table class="cellalignment1076" title="Attributes that Belong to Packages " summary="First column lists attributes; second column provides description of these attributes; third column provides dataypes of these attributes." dir="ltr">
<thead>
<tr class="cellalignment1067">
<th class="cellalignment1074" id="r1c1-t9">Attribute</th>
<th class="cellalignment1074" id="r1c2-t9">Description</th>
<th class="cellalignment1074" id="r1c3-t9">Attribute Data Type</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r2c1-t9" headers="r1c1-t9">
<p><code>ATTR_LIST_SUBPROGRAMS</code></p>
</td>
<td class="cellalignment1075" headers="r2c1-t9 r1c2-t9">
<p>Subprogram list; refer to <a href="#i1001537">List Attributes</a>.</p>
</td>
<td class="cellalignment1075" headers="r2c1-t9 r1c3-t9">
<p><code>vector&lt;MetaData&gt;</code></p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r3c1-t9" headers="r1c1-t9">
<p><code>ATTR_IS_INVOKER_RIGHTS</code></p>
</td>
<td class="cellalignment1075" headers="r3c1-t9 r1c2-t9">
<p>Identifies whether the package has invoker's rights</p>
</td>
<td class="cellalignment1075" headers="r3c1-t9 r1c3-t9">
<p><code>bool</code></p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformalmax" --></div>
<!-- class="sect2" -->
<a id="i1001481"></a><a id="LNCPP20295"></a>
<div class="sect2">
<h3 class="sect2">Type<a id="sthref494"></a> Attributes</h3>
<p>A parameter for a type (type <code>PTYPE_TYPE</code>) has attributes described in <a href="#g1014423">Table 6-8</a>.</p>
<div class="tblformalmax">
<p class="titleintable"><a id="LNCPP20296"></a><a id="sthref495"></a><a id="g1014423"></a>Table 6-8 Attributes that Belong to Types</p>
<table class="cellalignment1076" title="Attributes that Belong to Types " summary="First column lists attributes; second column provides description of these attributes; third column provides dataypes of these attributes." dir="ltr">
<thead>
<tr class="cellalignment1067">
<th class="cellalignment1074" id="r1c1-t10">Attribute</th>
<th class="cellalignment1074" id="r1c2-t10">Description</th>
<th class="cellalignment1074" id="r1c3-t10">Attribute Data Type</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r2c1-t10" headers="r1c1-t10">
<p><code>ATTR_REF_TDO</code></p>
</td>
<td class="cellalignment1075" headers="r2c1-t10 r1c2-t10">
<p>Returns the in-memory ref of the type descriptor object for the type, if the column type is an object type.</p>
</td>
<td class="cellalignment1075" headers="r2c1-t10 r1c3-t10">
<p><code>RefAny</code></p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r3c1-t10" headers="r1c1-t10">
<p><code>ATTR_TYPECODE</code></p>
</td>
<td class="cellalignment1075" headers="r3c1-t10 r1c2-t10">
<p>Type code. Can be:</p>
<ul>
<li>
<p><code>OCCI_TYPECODE_OBJECT</code></p>
</li>
<li>
<p><code>OCCI_TYPECODE_NAMEDCOLLECTION</code></p>
</li>
</ul>
</td>
<td class="cellalignment1075" headers="r3c1-t10 r1c3-t10">
<p><code>int</code></p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r4c1-t10" headers="r1c1-t10">
<p><code>ATTR_COLLECTION_TYPECODE</code></p>
</td>
<td class="cellalignment1075" headers="r4c1-t10 r1c2-t10">
<p>Type code of collection if type is collection; invalid otherwise. Can be:</p>
<ul>
<li>
<p><code>OCCI_TYPECODE_VARRAY</code></p>
</li>
<li>
<p><code>OCCI_TYPECODE_TABLE</code></p>
</li>
</ul>
</td>
<td class="cellalignment1075" headers="r4c1-t10 r1c3-t10">
<p><code>int</code></p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r5c1-t10" headers="r1c1-t10">
<p><code>ATTR_VERSION</code></p>
</td>
<td class="cellalignment1075" headers="r5c1-t10 r1c2-t10">
<p>A <code>NULL</code>-terminated string containing the user-assigned version</p>
</td>
<td class="cellalignment1075" headers="r5c1-t10 r1c3-t10">
<p><code>string</code></p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r6c1-t10" headers="r1c1-t10">
<p><code>ATTR_IS_FINAL_TYPE</code></p>
</td>
<td class="cellalignment1075" headers="r6c1-t10 r1c2-t10">
<p>Identifies whether this is a final type</p>
</td>
<td class="cellalignment1075" headers="r6c1-t10 r1c3-t10">
<p><code>bool</code></p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r7c1-t10" headers="r1c1-t10">
<p><code>ATTR_IS_INSTANTIABLE_TYPE</code></p>
</td>
<td class="cellalignment1075" headers="r7c1-t10 r1c2-t10">
<p>Identifies whether this is an instantiable type</p>
</td>
<td class="cellalignment1075" headers="r7c1-t10 r1c3-t10">
<p><code>bool</code></p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r8c1-t10" headers="r1c1-t10">
<p><code>ATTR_IS_SUBTYPE</code></p>
</td>
<td class="cellalignment1075" headers="r8c1-t10 r1c2-t10">
<p>Identifies whether this is a subtype</p>
</td>
<td class="cellalignment1075" headers="r8c1-t10 r1c3-t10">
<p><code>bool</code></p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r9c1-t10" headers="r1c1-t10">
<p><code>ATTR_SUPERTYPE_SCHEMA_NAME</code></p>
</td>
<td class="cellalignment1075" headers="r9c1-t10 r1c2-t10">
<p>Name of the schema containing the supertype</p>
</td>
<td class="cellalignment1075" headers="r9c1-t10 r1c3-t10">
<p><code>string</code></p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r10c1-t10" headers="r1c1-t10">
<p><code>ATTR_SUPERTYPE_NAME</code></p>
</td>
<td class="cellalignment1075" headers="r10c1-t10 r1c2-t10">
<p>Name of the supertype</p>
</td>
<td class="cellalignment1075" headers="r10c1-t10 r1c3-t10">
<p><code>string</code></p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r11c1-t10" headers="r1c1-t10">
<p><code>ATTR_IS_INVOKER_RIGHTS</code></p>
</td>
<td class="cellalignment1075" headers="r11c1-t10 r1c2-t10">
<p>Identifies whether this type is invoker's rights</p>
</td>
<td class="cellalignment1075" headers="r11c1-t10 r1c3-t10">
<p><code>bool</code></p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r12c1-t10" headers="r1c1-t10">
<p><code>ATTR_IS_INCOMPLETE_TYPE</code></p>
</td>
<td class="cellalignment1075" headers="r12c1-t10 r1c2-t10">
<p>Identifies whether this type is incomplete</p>
</td>
<td class="cellalignment1075" headers="r12c1-t10 r1c3-t10">
<p><code>bool</code></p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r13c1-t10" headers="r1c1-t10">
<p><code>ATTR_IS_SYSTEM_TYPE</code></p>
</td>
<td class="cellalignment1075" headers="r13c1-t10 r1c2-t10">
<p>Identifies whether this is a system type</p>
</td>
<td class="cellalignment1075" headers="r13c1-t10 r1c3-t10">
<p><code>bool</code></p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r14c1-t10" headers="r1c1-t10">
<p><code>ATTR_IS_PREDEFINED_TYPE</code></p>
</td>
<td class="cellalignment1075" headers="r14c1-t10 r1c2-t10">
<p>Identifies whether this is a predefined type</p>
</td>
<td class="cellalignment1075" headers="r14c1-t10 r1c3-t10">
<p><code>bool</code></p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r15c1-t10" headers="r1c1-t10">
<p><code>ATTR_IS_TRANSIENT_TYPE</code></p>
</td>
<td class="cellalignment1075" headers="r15c1-t10 r1c2-t10">
<p>Identifies whether this is a transient type</p>
</td>
<td class="cellalignment1075" headers="r15c1-t10 r1c3-t10">
<p><code>bool</code></p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r16c1-t10" headers="r1c1-t10">
<p><code>ATTR_IS_SYSTEM_GENERATED_TYPE</code></p>
</td>
<td class="cellalignment1075" headers="r16c1-t10 r1c2-t10">
<p>Identifies whether this is a system-generated type</p>
</td>
<td class="cellalignment1075" headers="r16c1-t10 r1c3-t10">
<p><code>bool</code></p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r17c1-t10" headers="r1c1-t10">
<p><code>ATTR_HAS_NESTED_TABLE</code></p>
</td>
<td class="cellalignment1075" headers="r17c1-t10 r1c2-t10">
<p>Identifies whether this type contains a nested table attribute</p>
</td>
<td class="cellalignment1075" headers="r17c1-t10 r1c3-t10">
<p><code>bool</code></p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r18c1-t10" headers="r1c1-t10">
<p><code>ATTR_HAS_LOB</code></p>
</td>
<td class="cellalignment1075" headers="r18c1-t10 r1c2-t10">
<p>Identifies whether this type contains a <code>LOB</code> attribute</p>
</td>
<td class="cellalignment1075" headers="r18c1-t10 r1c3-t10">
<p><code>bool</code></p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r19c1-t10" headers="r1c1-t10">
<p><code>ATTR_HAS_FILE</code></p>
</td>
<td class="cellalignment1075" headers="r19c1-t10 r1c2-t10">
<p>Identifies whether this type contains a <code>FILE</code> attribute</p>
</td>
<td class="cellalignment1075" headers="r19c1-t10 r1c3-t10">
<p><code>bool</code></p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r20c1-t10" headers="r1c1-t10">
<p><code>ATTR_COLLECTION_ELEMENT</code></p>
</td>
<td class="cellalignment1075" headers="r20c1-t10 r1c2-t10">
<p>Handle to collection element</p>
<p>Refer to <a href="#i1001493">Collection Attributes</a></p>
</td>
<td class="cellalignment1075" headers="r20c1-t10 r1c3-t10">
<p><code>MetaData</code></p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r21c1-t10" headers="r1c1-t10">
<p><code>ATTR_NUM_TYPE_ATTRS</code></p>
</td>
<td class="cellalignment1075" headers="r21c1-t10 r1c2-t10">
<p>Number of type attributes</p>
</td>
<td class="cellalignment1075" headers="r21c1-t10 r1c3-t10">
<p><code>unsigned int</code></p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r22c1-t10" headers="r1c1-t10">
<p><code>ATTR_LIST_TYPE_ATTRS</code></p>
</td>
<td class="cellalignment1075" headers="r22c1-t10 r1c2-t10">
<p>List of type attributes</p>
<p>Refer to <a href="#i1001537">List Attributes</a></p>
</td>
<td class="cellalignment1075" headers="r22c1-t10 r1c3-t10">
<p><code>vector&lt;MetaData&gt;</code></p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r23c1-t10" headers="r1c1-t10">
<p><code>ATTR_NUM_TYPE_METHODS</code></p>
</td>
<td class="cellalignment1075" headers="r23c1-t10 r1c2-t10">
<p>Number of type methods</p>
</td>
<td class="cellalignment1075" headers="r23c1-t10 r1c3-t10">
<p><code>unsigned int</code></p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r24c1-t10" headers="r1c1-t10">
<p><code>ATTR_LIST_TYPE_METHODS</code></p>
</td>
<td class="cellalignment1075" headers="r24c1-t10 r1c2-t10">
<p>List of type methods</p>
<p>Refer to <a href="#i1001537">List Attributes</a></p>
</td>
<td class="cellalignment1075" headers="r24c1-t10 r1c3-t10">
<p><code>vector&lt;MetaData&gt;</code></p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r25c1-t10" headers="r1c1-t10">
<p><code>ATTR_MAP_METHOD</code></p>
</td>
<td class="cellalignment1075" headers="r25c1-t10 r1c2-t10">
<p>Map method of type</p>
<p>Refer to <a href="#i1001489">Type Method Attributes</a></p>
</td>
<td class="cellalignment1075" headers="r25c1-t10 r1c3-t10">
<p><code>MetaData</code></p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r26c1-t10" headers="r1c1-t10">
<p><code>ATTR_ORDER_METHOD</code></p>
</td>
<td class="cellalignment1075" headers="r26c1-t10 r1c2-t10">
<p>Order method of type; refer to <a href="#i1001489">Type Method Attributes</a></p>
</td>
<td class="cellalignment1075" headers="r26c1-t10 r1c3-t10">
<p><code>MetaData</code></p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformalmax" --></div>
<!-- class="sect2" -->
<a id="i1001485"></a><a id="LNCPP20297"></a>
<div class="sect2">
<h3 class="sect2">Type Att<a id="sthref496"></a>ribute Attributes</h3>
<p>A parameter for an attribute of a type (type <code>PTYPE_TYPE_ATTR</code>) has the attributes described in <a href="#g1014531">Table 6-9</a>.</p>
<div class="tblformalmax">
<p class="titleintable"><a id="LNCPP20298"></a><a id="sthref497"></a><a id="g1014531"></a>Table 6-9 Attributes that Belong to Type Attributes</p>
<table class="cellalignment1076" title="Attributes that Belong to Type Attributes " summary="First column lists attributes; second column provides description of these attributes; third column provides dataypes of these attributes." dir="ltr">
<thead>
<tr class="cellalignment1067">
<th class="cellalignment1074" id="r1c1-t11">Attribute</th>
<th class="cellalignment1074" id="r1c2-t11">Description</th>
<th class="cellalignment1074" id="r1c3-t11">Attribute Data Type</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r2c1-t11" headers="r1c1-t11">
<p><code>ATTR_DATA_SIZE</code></p>
</td>
<td class="cellalignment1075" headers="r2c1-t11 r1c2-t11">
<p>Maximum size of the type attribute. This length is returned in bytes and not characters for strings and raws. Returns <code>22</code> for <code>NUMBER</code>.</p>
</td>
<td class="cellalignment1075" headers="r2c1-t11 r1c3-t11">
<p><code>int</code></p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r3c1-t11" headers="r1c1-t11">
<p><code>ATTR_TYPECODE</code></p>
</td>
<td class="cellalignment1075" headers="r3c1-t11 r1c2-t11">
<p>Type code</p>
</td>
<td class="cellalignment1075" headers="r3c1-t11 r1c3-t11">
<p><code>int</code></p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r4c1-t11" headers="r1c1-t11">
<p><code>ATTR_DATA_TYPE</code></p>
</td>
<td class="cellalignment1075" headers="r4c1-t11 r1c2-t11">
<p>Data type of the type attribute</p>
</td>
<td class="cellalignment1075" headers="r4c1-t11 r1c3-t11">
<p><code>int</code></p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r5c1-t11" headers="r1c1-t11">
<p><code>ATTR_NAME</code></p>
</td>
<td class="cellalignment1075" headers="r5c1-t11 r1c2-t11">
<p>A pointer to a string that is the type attribute name</p>
</td>
<td class="cellalignment1075" headers="r5c1-t11 r1c3-t11">
<p><code>string</code></p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r6c1-t11" headers="r1c1-t11">
<p><code>ATTR_PRECISION</code></p>
</td>
<td class="cellalignment1075" headers="r6c1-t11 r1c2-t11">
<p>Precision of numeric type attributes. If the precision is nonzero and scale is <code>-127</code>, then it is a <code>FLOAT</code>; otherwise a <code>NUMBER(p, s)</code>. If precision is <code>0</code>, then <code>NUMBER(p, s)</code> can be represented simply by <code>NUMBER</code>.</p>
</td>
<td class="cellalignment1075" headers="r6c1-t11 r1c3-t11">
<p><code>int</code></p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r7c1-t11" headers="r1c1-t11">
<p><code>ATTR_SCALE</code></p>
</td>
<td class="cellalignment1075" headers="r7c1-t11 r1c2-t11">
<p>Scale of numeric type attributes. If the precision is nonzero and scale is <code>-127</code>, then it is a <code>FLOAT</code>; otherwise a <code>NUMBER(p, s)</code>. If precision is <code>0</code>, then <code>NUMBER(p, s)</code> can be represented simply as <code>NUMBER</code>.</p>
</td>
<td class="cellalignment1075" headers="r7c1-t11 r1c3-t11">
<p><code>int</code></p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r8c1-t11" headers="r1c1-t11">
<p><code>ATTR_TYPE_NAME</code></p>
</td>
<td class="cellalignment1075" headers="r8c1-t11 r1c2-t11">
<p>A string that is the type name. The returned value contains the type name if the data type is <code>SQLT_NTY</code> or <code>SQLT_REF</code>. If the data type is <code>SQLT_NTY</code>, then the name of the named data type's type is returned. If the data type is <code>SQLT_REF</code>, then the type name of the named data type pointed to by the <code>REF</code> is returned.</p>
</td>
<td class="cellalignment1075" headers="r8c1-t11 r1c3-t11">
<p><code>string</code></p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r9c1-t11" headers="r1c1-t11">
<p><code>ATTR_SCHEMA_NAME</code></p>
</td>
<td class="cellalignment1075" headers="r9c1-t11 r1c2-t11">
<p>String with the schema name under which the type has been created</p>
</td>
<td class="cellalignment1075" headers="r9c1-t11 r1c3-t11">
<p><code>string</code></p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r10c1-t11" headers="r1c1-t11">
<p><code>ATTR_REF_TDO</code></p>
</td>
<td class="cellalignment1075" headers="r10c1-t11 r1c2-t11">
<p>Returns the in-memory <code>REF</code> of the TDO for the type, if the column type is an object type.</p>
</td>
<td class="cellalignment1075" headers="r10c1-t11 r1c3-t11">
<p><code>RefAny</code></p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r11c1-t11" headers="r1c1-t11">
<p><code>ATTR_CHARSET_ID</code></p>
</td>
<td class="cellalignment1075" headers="r11c1-t11 r1c2-t11">
<p>Character set ID, if the type attribute is of a string or character type</p>
</td>
<td class="cellalignment1075" headers="r11c1-t11 r1c3-t11">
<p><code>int</code></p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r12c1-t11" headers="r1c1-t11">
<p><code>ATTR_CHARSET_FORM</code></p>
</td>
<td class="cellalignment1075" headers="r12c1-t11 r1c2-t11">
<p>Character set form, if the type attribute is of a string or character type</p>
</td>
<td class="cellalignment1075" headers="r12c1-t11 r1c3-t11">
<p><code>int</code></p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r13c1-t11" headers="r1c1-t11">
<p><code>ATTR_FSPRECISION</code></p>
</td>
<td class="cellalignment1075" headers="r13c1-t11 r1c2-t11">
<p>The fractional seconds precision of a datetime or interval</p>
</td>
<td class="cellalignment1075" headers="r13c1-t11 r1c3-t11">
<p><code>int</code></p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r14c1-t11" headers="r1c1-t11">
<p><code>ATTR_LFPRECISION</code></p>
</td>
<td class="cellalignment1075" headers="r14c1-t11 r1c2-t11">
<p>The leading field precision of an interval</p>
</td>
<td class="cellalignment1075" headers="r14c1-t11 r1c3-t11">
<p><code>int</code></p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformalmax" --></div>
<!-- class="sect2" -->
<a id="i1001489"></a><a id="LNCPP20299"></a>
<div class="sect2">
<h3 class="sect2">Type Me<a id="sthref498"></a>thod Attributes</h3>
<p>A parameter for a method of a type (type <code>PTYPE_TYPE_METHOD</code>) has the attributes described in <a href="#g1014591">Table 6-10</a>.</p>
<div class="tblformalmax">
<p class="titleintable"><a id="LNCPP20300"></a><a id="sthref499"></a><a id="g1014591"></a>Table 6-10 Attributes that Belong to Type Methods</p>
<table class="cellalignment1076" title="Attributes that Belong to Type Methods " summary="First column lists attributes; second column provides description of these attributes; third column provides dataypes of these attributes." dir="ltr">
<thead>
<tr class="cellalignment1067">
<th class="cellalignment1074" id="r1c1-t12">Attribute</th>
<th class="cellalignment1074" id="r1c2-t12">Description</th>
<th class="cellalignment1074" id="r1c3-t12">Attribute Data Type</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r2c1-t12" headers="r1c1-t12">
<p><code>ATTR_NAME</code></p>
</td>
<td class="cellalignment1075" headers="r2c1-t12 r1c2-t12">
<p>Name of method (procedure or function)</p>
</td>
<td class="cellalignment1075" headers="r2c1-t12 r1c3-t12">
<p><code>string</code></p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r3c1-t12" headers="r1c1-t12">
<p><code>ATTR_ENCAPSULATION</code></p>
</td>
<td class="cellalignment1075" headers="r3c1-t12 r1c2-t12">
<p>Encapsulation level of the method; can be:</p>
<ul>
<li>
<p><code>OCCI_TYPEENCAP_PRIVATE</code></p>
</li>
<li>
<p><code>OCCI_TYPEENCAP_PUBLIC)</code></p>
</li>
</ul>
</td>
<td class="cellalignment1075" headers="r3c1-t12 r1c3-t12">
<p><code>int</code></p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r4c1-t12" headers="r1c1-t12">
<p><code>ATTR_LIST_ARGUMENTS</code></p>
</td>
<td class="cellalignment1075" headers="r4c1-t12 r1c2-t12">
<p>Argument list</p>
</td>
<td class="cellalignment1075" headers="r4c1-t12 r1c3-t12">
<p><code>vector&lt;MetaData&gt;</code></p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r5c1-t12" headers="r1c1-t12">
<p><code>ATTR_IS_CONSTRUCTOR</code></p>
</td>
<td class="cellalignment1075" headers="r5c1-t12 r1c2-t12">
<p>Identifies whether the method is a constructor</p>
</td>
<td class="cellalignment1075" headers="r5c1-t12 r1c3-t12">
<p><code>bool</code></p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r6c1-t12" headers="r1c1-t12">
<p><code>ATTR_IS_DESTRUCTOR</code></p>
</td>
<td class="cellalignment1075" headers="r6c1-t12 r1c2-t12">
<p>Identifies whether the method is a destructor</p>
</td>
<td class="cellalignment1075" headers="r6c1-t12 r1c3-t12">
<p><code>bool</code></p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r7c1-t12" headers="r1c1-t12">
<p><code>ATTR_IS_OPERATOR</code></p>
</td>
<td class="cellalignment1075" headers="r7c1-t12 r1c2-t12">
<p>Identifies whether the method is an operator</p>
</td>
<td class="cellalignment1075" headers="r7c1-t12 r1c3-t12">
<p><code>bool</code></p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r8c1-t12" headers="r1c1-t12">
<p><code>ATTR_IS_SELFISH</code></p>
</td>
<td class="cellalignment1075" headers="r8c1-t12 r1c2-t12">
<p>Identifies whether the method is selfish</p>
</td>
<td class="cellalignment1075" headers="r8c1-t12 r1c3-t12">
<p><code>bool</code></p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r9c1-t12" headers="r1c1-t12">
<p><code>ATTR_IS_MAP</code></p>
</td>
<td class="cellalignment1075" headers="r9c1-t12 r1c2-t12">
<p>Identifies whether the method is a map method</p>
</td>
<td class="cellalignment1075" headers="r9c1-t12 r1c3-t12">
<p><code>bool</code></p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r10c1-t12" headers="r1c1-t12">
<p><code>ATTR_IS_ORDER</code></p>
</td>
<td class="cellalignment1075" headers="r10c1-t12 r1c2-t12">
<p>Identifies whether the method is an order method</p>
</td>
<td class="cellalignment1075" headers="r10c1-t12 r1c3-t12">
<p><code>bool</code></p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r11c1-t12" headers="r1c1-t12">
<p><code>ATTR_IS_RNDS</code></p>
</td>
<td class="cellalignment1075" headers="r11c1-t12 r1c2-t12">
<p>Identifies whether "Read No Data State" is set for the method</p>
</td>
<td class="cellalignment1075" headers="r11c1-t12 r1c3-t12">
<p><code>bool</code></p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r12c1-t12" headers="r1c1-t12">
<p><code>ATTR_IS_RNPS</code></p>
</td>
<td class="cellalignment1075" headers="r12c1-t12 r1c2-t12">
<p>Identifies whether "Read No Process State" is set for the method</p>
</td>
<td class="cellalignment1075" headers="r12c1-t12 r1c3-t12">
<p><code>bool</code></p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r13c1-t12" headers="r1c1-t12">
<p><code>ATTR_IS_WNDS</code></p>
</td>
<td class="cellalignment1075" headers="r13c1-t12 r1c2-t12">
<p>Identifies whether "Write No Data State" is set for the method</p>
</td>
<td class="cellalignment1075" headers="r13c1-t12 r1c3-t12">
<p><code>bool</code></p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r14c1-t12" headers="r1c1-t12">
<p><code>ATTR_IS_WNPS</code></p>
</td>
<td class="cellalignment1075" headers="r14c1-t12 r1c2-t12">
<p>Identifies whether "Write No Process State" is set for the method</p>
</td>
<td class="cellalignment1075" headers="r14c1-t12 r1c3-t12">
<p><code>bool</code></p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r15c1-t12" headers="r1c1-t12">
<p><code>ATTR_IS_FINAL_METHOD</code></p>
</td>
<td class="cellalignment1075" headers="r15c1-t12 r1c2-t12">
<p>Identifies whether this is a final method</p>
</td>
<td class="cellalignment1075" headers="r15c1-t12 r1c3-t12">
<p><code>bool</code></p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r16c1-t12" headers="r1c1-t12">
<p><code>ATTR_IS_INSTANTIABLE_METHOD</code></p>
</td>
<td class="cellalignment1075" headers="r16c1-t12 r1c2-t12">
<p>Identifies whether this is an instantiable method</p>
</td>
<td class="cellalignment1075" headers="r16c1-t12 r1c3-t12">
<p><code>bool</code></p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r17c1-t12" headers="r1c1-t12">
<p><code>ATTR_IS_OVERRIDING_METHOD</code></p>
</td>
<td class="cellalignment1075" headers="r17c1-t12 r1c2-t12">
<p>Identifies whether this is an overriding method</p>
</td>
<td class="cellalignment1075" headers="r17c1-t12 r1c3-t12">
<p><code>bool</code></p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformalmax" --></div>
<!-- class="sect2" -->
<a id="i1001493"></a><a id="LNCPP20301"></a>
<div class="sect2">
<h3 class="sect2">Colle<a id="sthref500"></a>ction Attributes</h3>
<p>A parameter for a collection type (type <code>PTYPE_COLL</code>) has the attributes described in <a href="#g1014663">Table 6-11</a>.</p>
<div class="tblformalmax">
<p class="titleintable"><a id="LNCPP20302"></a><a id="sthref501"></a><a id="g1014663"></a>Table 6-11 Attributes that Belong to Collection Types</p>
<table class="cellalignment1076" title="Attributes that Belong to Collection Types " summary="First column lists attributes; second column provides description of these attributes; third column provides dataypes of these attributes." dir="ltr">
<thead>
<tr class="cellalignment1067">
<th class="cellalignment1074" id="r1c1-t13">Attribute</th>
<th class="cellalignment1074" id="r1c2-t13">Description</th>
<th class="cellalignment1074" id="r1c3-t13">Attribute Data Type</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r2c1-t13" headers="r1c1-t13">
<p><code>ATTR_DATA_SIZE</code></p>
</td>
<td class="cellalignment1075" headers="r2c1-t13 r1c2-t13">
<p>Maximum size of the type attribute. This length is returned in bytes and not characters for strings and raws. Returns <code>22</code> for <code>NUMBER</code>.</p>
</td>
<td class="cellalignment1075" headers="r2c1-t13 r1c3-t13">
<p><code>int</code></p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r3c1-t13" headers="r1c1-t13">
<p><code>ATTR_TYPECODE</code></p>
</td>
<td class="cellalignment1075" headers="r3c1-t13 r1c2-t13">
<p>Typecode.</p>
</td>
<td class="cellalignment1075" headers="r3c1-t13 r1c3-t13">
<p><code>int</code></p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r4c1-t13" headers="r1c1-t13">
<p><code>ATTR_DATA_TYPE</code></p>
</td>
<td class="cellalignment1075" headers="r4c1-t13 r1c2-t13">
<p>The data type of the type attribute.</p>
</td>
<td class="cellalignment1075" headers="r4c1-t13 r1c3-t13">
<p><code>int</code></p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r5c1-t13" headers="r1c1-t13">
<p><code>ATTR_NUM_ELEMENTS</code></p>
</td>
<td class="cellalignment1075" headers="r5c1-t13 r1c2-t13">
<p>Number of elements in an array; only valid for collections that are arrays.</p>
</td>
<td class="cellalignment1075" headers="r5c1-t13 r1c3-t13">
<p><code>unsigned int</code></p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r6c1-t13" headers="r1c1-t13">
<p><code>ATTR_NAME</code></p>
</td>
<td class="cellalignment1075" headers="r6c1-t13 r1c2-t13">
<p>A pointer to a string that is the type attribute name</p>
</td>
<td class="cellalignment1075" headers="r6c1-t13 r1c3-t13">
<p><code>string</code></p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r7c1-t13" headers="r1c1-t13">
<p><code>ATTR_PRECISION</code></p>
</td>
<td class="cellalignment1075" headers="r7c1-t13 r1c2-t13">
<p>Precision of numeric type attributes. If the precision is nonzero and scale is <code>-127</code>, then it is a <code>FLOAT</code>; otherwise a <code>NUMBER(p, s)</code>. If precision is <code>0</code>, then <code>NUMBER(p, s)</code> can be represented simply as <code>NUMBER</code>.</p>
</td>
<td class="cellalignment1075" headers="r7c1-t13 r1c3-t13">
<p><code>int</code></p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r8c1-t13" headers="r1c1-t13">
<p><code>ATTR_SCALE</code></p>
</td>
<td class="cellalignment1075" headers="r8c1-t13 r1c2-t13">
<p>Scale of numeric type attributes. If the precision is nonzero and scale is <code>-127</code>, then it is a <code>FLOAT</code>; otherwise a <code>NUMBER(p, s)</code>. If precision is <code>0</code>, then <code>NUMBER(p, s)</code> can be represented simply a<code>s NUMBER</code>.</p>
</td>
<td class="cellalignment1075" headers="r8c1-t13 r1c3-t13">
<p><code>int</code></p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r9c1-t13" headers="r1c1-t13">
<p><code>ATTR_TYPE_NAME</code></p>
</td>
<td class="cellalignment1075" headers="r9c1-t13 r1c2-t13">
<p>String that is the type name. The returned value contains the type name if the data type is <code>SQLT_NTY</code> or <code>SQLT_REF</code>. If the data type is <code>SQLT_NTY</code>, then the name of the named data type's type is returned. If the data type is <code>SQLT_REF</code>, then the type name of the named data type pointed to by the <code>REF</code> is returned</p>
</td>
<td class="cellalignment1075" headers="r9c1-t13 r1c3-t13">
<p><code>string</code></p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r10c1-t13" headers="r1c1-t13">
<p><code>ATTR_SCHEMA_NAME</code></p>
</td>
<td class="cellalignment1075" headers="r10c1-t13 r1c2-t13">
<p>String with the schema name under which the type has been created</p>
</td>
<td class="cellalignment1075" headers="r10c1-t13 r1c3-t13">
<p><code>string</code></p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r11c1-t13" headers="r1c1-t13">
<p><code>ATTR_REF_TDO</code></p>
</td>
<td class="cellalignment1075" headers="r11c1-t13 r1c2-t13">
<p>Returns the in memory <code>REF</code> of the <code>TDO</code> for the type.</p>
</td>
<td class="cellalignment1075" headers="r11c1-t13 r1c3-t13">
<p><code>RefAny</code></p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r12c1-t13" headers="r1c1-t13">
<p><code>ATTR_CHARSET_ID</code></p>
</td>
<td class="cellalignment1075" headers="r12c1-t13 r1c2-t13">
<p>Typecode.</p>
</td>
<td class="cellalignment1075" headers="r12c1-t13 r1c3-t13">
<p><code>int</code></p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r13c1-t13" headers="r1c1-t13">
<p><code>ATTR_CHARSET_FORM</code></p>
</td>
<td class="cellalignment1075" headers="r13c1-t13 r1c2-t13">
<p>The data type of the type attribute.</p>
</td>
<td class="cellalignment1075" headers="r13c1-t13 r1c3-t13">
<p><code>int</code></p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformalmax" --></div>
<!-- class="sect2" -->
<a id="i1001497"></a><a id="LNCPP20303"></a>
<div class="sect2">
<h3 class="sect2">Synonym <a id="sthref502"></a>Attributes</h3>
<p>A parameter for a synonym (type <code>PTYPE_SYN</code>) has the attributes described in <a href="#g1014719">Table 6-12</a>.</p>
<div class="tblformalmax">
<p class="titleintable"><a id="LNCPP20304"></a><a id="sthref503"></a><a id="g1014719"></a>Table 6-12 Attributes that Belong to Synonyms</p>
<table class="cellalignment1076" title="Attributes that Belong to Synonyms " summary="First column lists attributes; second column provides description of these attributes; third column provides dataypes of these attributes." dir="ltr">
<thead>
<tr class="cellalignment1067">
<th class="cellalignment1074" id="r1c1-t14">Attribute</th>
<th class="cellalignment1074" id="r1c2-t14">Description</th>
<th class="cellalignment1074" id="r1c3-t14">Attribute Data Type</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r2c1-t14" headers="r1c1-t14">
<p><code>ATTR_OBJID</code></p>
</td>
<td class="cellalignment1075" headers="r2c1-t14 r1c2-t14">
<p>Object ID</p>
</td>
<td class="cellalignment1075" headers="r2c1-t14 r1c3-t14">
<p><code>unsigned int</code></p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r3c1-t14" headers="r1c1-t14">
<p><code>ATTR_SCHEMA_NAME</code></p>
</td>
<td class="cellalignment1075" headers="r3c1-t14 r1c2-t14">
<p>Null-terminated string containing the schema name of the synonym translation</p>
</td>
<td class="cellalignment1075" headers="r3c1-t14 r1c3-t14">
<p><code>string</code></p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r4c1-t14" headers="r1c1-t14">
<p><code>ATTR_NAME</code></p>
</td>
<td class="cellalignment1075" headers="r4c1-t14 r1c2-t14">
<p>Null-terminated string containing the object name of the synonym translation</p>
</td>
<td class="cellalignment1075" headers="r4c1-t14 r1c3-t14">
<p><code>string</code></p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r5c1-t14" headers="r1c1-t14">
<p><code>ATTR_LINK</code></p>
</td>
<td class="cellalignment1075" headers="r5c1-t14 r1c2-t14">
<p>Null-terminated string containing the database link name of the synonym translation</p>
</td>
<td class="cellalignment1075" headers="r5c1-t14 r1c3-t14">
<p><code>string</code></p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformalmax" --></div>
<!-- class="sect2" -->
<a id="i1001501"></a><a id="LNCPP20305"></a>
<div class="sect2">
<h3 class="sect2">Sequence A<a id="sthref504"></a>ttributes</h3>
<p>A parameter for a sequence (type <code>PTYPE_SEQ</code>) has the attributes described in <a href="#g1014743">Table 6-13</a>.</p>
<div class="tblformalmax">
<p class="titleintable"><a id="LNCPP20306"></a><a id="sthref505"></a><a id="g1014743"></a>Table 6-13 Attributes that Belong to Sequences</p>
<table class="cellalignment1076" title="Attributes that Belong to Sequences " summary="First column lists attributes; second column provides description of these attributes; third column provides dataypes of these attributes." dir="ltr">
<thead>
<tr class="cellalignment1067">
<th class="cellalignment1074" id="r1c1-t15">Attribute</th>
<th class="cellalignment1074" id="r1c2-t15">Description</th>
<th class="cellalignment1074" id="r1c3-t15">Attribute Data Type</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r2c1-t15" headers="r1c1-t15">
<p><code>ATTR_OBJID</code></p>
</td>
<td class="cellalignment1075" headers="r2c1-t15 r1c2-t15">
<p>Object ID</p>
</td>
<td class="cellalignment1075" headers="r2c1-t15 r1c3-t15">
<p><code>unsigned int</code></p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r3c1-t15" headers="r1c1-t15">
<p><code>ATTR_MIN</code></p>
</td>
<td class="cellalignment1075" headers="r3c1-t15 r1c2-t15">
<p>Minimum value (in Oracle number format)</p>
</td>
<td class="cellalignment1075" headers="r3c1-t15 r1c3-t15">
<p><code>Number</code></p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r4c1-t15" headers="r1c1-t15">
<p><code>ATTR_MAX</code></p>
</td>
<td class="cellalignment1075" headers="r4c1-t15 r1c2-t15">
<p>Maximum value (in Oracle number format)</p>
</td>
<td class="cellalignment1075" headers="r4c1-t15 r1c3-t15">
<p><code>Number</code></p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r5c1-t15" headers="r1c1-t15">
<p><code>ATTR_INCR</code></p>
</td>
<td class="cellalignment1075" headers="r5c1-t15 r1c2-t15">
<p>Increment (in Oracle number format)</p>
</td>
<td class="cellalignment1075" headers="r5c1-t15 r1c3-t15">
<p><code>Number</code></p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r6c1-t15" headers="r1c1-t15">
<p><code>ATTR_CACHE</code></p>
</td>
<td class="cellalignment1075" headers="r6c1-t15 r1c2-t15">
<p>Number of sequence numbers cached; zero if the sequence is not a cached sequence (in Oracle number format)</p>
</td>
<td class="cellalignment1075" headers="r6c1-t15 r1c3-t15">
<p><code>Number</code></p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r7c1-t15" headers="r1c1-t15">
<p><code>ATTR_ORDER</code></p>
</td>
<td class="cellalignment1075" headers="r7c1-t15 r1c2-t15">
<p>Identifies whether the sequence is ordered</p>
</td>
<td class="cellalignment1075" headers="r7c1-t15 r1c3-t15">
<p><code>bool</code></p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r8c1-t15" headers="r1c1-t15">
<p><code>ATTR_HW_MARK</code></p>
</td>
<td class="cellalignment1075" headers="r8c1-t15 r1c2-t15">
<p>High-water mark (in Oracle number format)</p>
</td>
<td class="cellalignment1075" headers="r8c1-t15 r1c3-t15">
<p><code>Number</code></p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformalmax" --></div>
<!-- class="sect2" -->
<a id="i1001505"></a><a id="LNCPP20307"></a>
<div class="sect2">
<h3 class="sect2">Column A<a id="sthref506"></a>ttributes</h3>
<p>A parameter for a column of a table or view (type <code>PTYPE_COL</code>) has the attributes described in <a href="#g1014779">Table 6-14</a>.</p>
<div class="tblformalmax">
<p class="titleintable"><a id="LNCPP20308"></a><a id="sthref507"></a><a id="g1014779"></a>Table 6-14 Attributes that Belong to Columns of Tables or Views</p>
<table class="cellalignment1076" title="Attributes that Belong to Columns of Tables or Views " summary="First column lists attributes; second column provides description of these attributes; third column provides dataypes of these attributes." dir="ltr">
<thead>
<tr class="cellalignment1067">
<th class="cellalignment1074" id="r1c1-t16">Attribute</th>
<th class="cellalignment1074" id="r1c2-t16">Description</th>
<th class="cellalignment1074" id="r1c3-t16">Attribute Data Type</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r2c1-t16" headers="r1c1-t16">
<p><code>ATTR_DATA_SIZE</code></p>
</td>
<td class="cellalignment1075" headers="r2c1-t16 r1c2-t16">
<p>Maximum size of the column. This length is returned in bytes and not characters for strings and raws. Returns <code>22</code> for <code>NUMBER</code>..</p>
</td>
<td class="cellalignment1075" headers="r2c1-t16 r1c3-t16">
<p><code>int</code></p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r3c1-t16" headers="r1c1-t16">
<p><code>ATTR_DATA_TYPE</code></p>
</td>
<td class="cellalignment1075" headers="r3c1-t16 r1c2-t16">
<p>The data type of the column.</p>
</td>
<td class="cellalignment1075" headers="r3c1-t16 r1c3-t16">
<p><code>Type</code></p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r4c1-t16" headers="r1c1-t16">
<p><code>ATTR_NAME</code></p>
</td>
<td class="cellalignment1075" headers="r4c1-t16 r1c2-t16">
<p>Pointer to a string that is the column name.</p>
</td>
<td class="cellalignment1075" headers="r4c1-t16 r1c3-t16">
<p><code>string</code></p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r5c1-t16" headers="r1c1-t16">
<p><code>ATTR_PRECISION</code></p>
</td>
<td class="cellalignment1075" headers="r5c1-t16 r1c2-t16">
<p>Returns the precision.</p>
</td>
<td class="cellalignment1075" headers="r5c1-t16 r1c3-t16">
<p><code>int</code></p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r6c1-t16" headers="r1c1-t16">
<p><code>ATTR_SCALE</code></p>
</td>
<td class="cellalignment1075" headers="r6c1-t16 r1c2-t16">
<p>Scale of numeric columns. If the precision is nonzero and scale is <code>-127</code>, then it is a <code>FLOAT</code>; otherwise a <code>NUMBER(p, s)</code>. If precision is <code>0</code>, then <code>NUMBER(p, s)</code> can be represented simply as <code>NUMBER</code>.</p>
</td>
<td class="cellalignment1075" headers="r6c1-t16 r1c3-t16">
<p><code>int</code></p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r7c1-t16" headers="r1c1-t16">
<p><code>ATTR_IS_NULL</code></p>
</td>
<td class="cellalignment1075" headers="r7c1-t16 r1c2-t16">
<p>Returns <code>FALSE</code> if null values are not permitted for the column.</p>
</td>
<td class="cellalignment1075" headers="r7c1-t16 r1c3-t16">
<p><code>bool</code></p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r8c1-t16" headers="r1c1-t16">
<p><code>ATTR_TYPE_NAME</code></p>
</td>
<td class="cellalignment1075" headers="r8c1-t16 r1c2-t16">
<p>Returns a string that is the type name. The returned value contains the type name if the data type is <code>OCCI_SQLT_NTY</code> or <code>OCCI_SQLT_REF</code>. If the data type is <code>OCCI_SQLT_NTY</code>, then the name of the named data type's type is returned. If the data type is <code>OCCI_SQLT_REF</code>, then the type name of the named data type pointed to by the <code>REF</code> is returned.</p>
</td>
<td class="cellalignment1075" headers="r8c1-t16 r1c3-t16">
<p><code>string</code></p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r9c1-t16" headers="r1c1-t16">
<p><code>ATTR_SCHEMA_NAME</code></p>
</td>
<td class="cellalignment1075" headers="r9c1-t16 r1c2-t16">
<p>Returns a string with the schema name under which the type has been created.</p>
</td>
<td class="cellalignment1075" headers="r9c1-t16 r1c3-t16">
<p><code>string</code></p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r10c1-t16" headers="r1c1-t16">
<p><code>ATTR_REF_TDO</code></p>
</td>
<td class="cellalignment1075" headers="r10c1-t16 r1c2-t16">
<p>The <code>REF</code> of the TDO for the type, if the column type is an object type.</p>
</td>
<td class="cellalignment1075" headers="r10c1-t16 r1c3-t16">
<p><code>RefAny</code></p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r11c1-t16" headers="r1c1-t16">
<p><code>ATTR_CHARSET_ID</code></p>
</td>
<td class="cellalignment1075" headers="r11c1-t16 r1c2-t16">
<p>Character set ID for character column. If not set, the character set ID defaults to the character set ID set in the direct path context.</p>
</td>
<td class="cellalignment1075" headers="r11c1-t16 r1c3-t16">
<p><code>int</code></p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r12c1-t16" headers="r1c1-t16">
<p><code>ATTR_CHARSET_FORM</code></p>
</td>
<td class="cellalignment1075" headers="r12c1-t16 r1c2-t16">
<p>Character set form of the column. Setting this attribute specifies the use of the database or national character set on the client side.</p>
</td>
<td class="cellalignment1075" headers="r12c1-t16 r1c3-t16">
<p><code>int</code></p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformalmax" --></div>
<!-- class="sect2" -->
<a id="i1001533"></a><a id="LNCPP20309"></a>
<div class="sect2">
<h3 class="sect2">Argum<a id="sthref508"></a>ent and Result Attributes</h3>
<p>A parameter for an argument or a procedure or function type (type <code>PTYPE_ARG</code>), for a type method argument (type <code>PTYPE_TYPE_ARG</code>), or for method results (type <code>PTYPE_TYPE_RESULT</code>) has the attributes described in <a href="#g1014831">Table 6-15</a>.</p>
<div class="tblformalmax">
<p class="titleintable"><a id="LNCPP20310"></a><a id="sthref509"></a><a id="g1014831"></a>Table 6-15 Attributes that Belong to Arguments / Results</p>
<table class="cellalignment1076" title="Attributes that Belong to Arguments / Results " summary="First column lists attributes; second column provides description of these attributes; third column provides dataypes of these attributes." dir="ltr">
<thead>
<tr class="cellalignment1067">
<th class="cellalignment1074" id="r1c1-t17">Attribute</th>
<th class="cellalignment1074" id="r1c2-t17">Description</th>
<th class="cellalignment1074" id="r1c3-t17">Attribute Data Type</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r2c1-t17" headers="r1c1-t17">
<p><code>ATTR_NAME</code></p>
</td>
<td class="cellalignment1075" headers="r2c1-t17 r1c2-t17">
<p>Returns a pointer to a string which is the argument name</p>
</td>
<td class="cellalignment1075" headers="r2c1-t17 r1c3-t17">
<p><code>string</code></p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r3c1-t17" headers="r1c1-t17">
<p><code>ATTR_POSITION</code></p>
</td>
<td class="cellalignment1075" headers="r3c1-t17 r1c2-t17">
<p>Position of the argument in the argument list. Always returns <code>0</code>.</p>
</td>
<td class="cellalignment1075" headers="r3c1-t17 r1c3-t17">
<p><code>int</code></p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r4c1-t17" headers="r1c1-t17">
<p><code>ATTR_TYPECODE</code></p>
</td>
<td class="cellalignment1075" headers="r4c1-t17 r1c2-t17">
<p>Typecode.</p>
</td>
<td class="cellalignment1075" headers="r4c1-t17 r1c3-t17">
<p><code>int</code></p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r5c1-t17" headers="r1c1-t17">
<p><code>ATTR_DATA_TYPE</code></p>
</td>
<td class="cellalignment1075" headers="r5c1-t17 r1c2-t17">
<p>Data type of the argument.</p>
</td>
<td class="cellalignment1075" headers="r5c1-t17 r1c3-t17">
<p><code>int</code></p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r6c1-t17" headers="r1c1-t17">
<p><code>ATTR_DATA_SIZE</code></p>
</td>
<td class="cellalignment1075" headers="r6c1-t17 r1c2-t17">
<p>Size of the data type of the argument. This length is returned in bytes and not characters for strings and raws. Returns <code>22</code> for <code>NUMBER</code>.</p>
</td>
<td class="cellalignment1075" headers="r6c1-t17 r1c3-t17">
<p><code>int</code></p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r7c1-t17" headers="r1c1-t17">
<p><code>ATTR_PRECISION</code></p>
</td>
<td class="cellalignment1075" headers="r7c1-t17 r1c2-t17">
<p>Precision of numeric arguments. If the precision is nonzero and scale is <code>-127</code>, then it is a <code>FLOAT</code>; otherwise a <code>NUMBER(p, s)</code>. If precision is <code>0</code>, then <code>NUMBER(p, s)</code> can be represented simply as <code>NUMBER</code>.</p>
</td>
<td class="cellalignment1075" headers="r7c1-t17 r1c3-t17">
<p><code>int</code></p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r8c1-t17" headers="r1c1-t17">
<p><code>ATTR_SCALE</code></p>
</td>
<td class="cellalignment1075" headers="r8c1-t17 r1c2-t17">
<p>Scale of numeric arguments. If the precision is nonzero and scale is <code>-127</code>, then it is a <code>FLOAT</code>; otherwise a <code>NUMBER(p, s)</code>. If precision is <code>0</code>, then <code>NUMBER(p, s)</code> can be represented simply as <code>NUMBER</code>.</p>
</td>
<td class="cellalignment1075" headers="r8c1-t17 r1c3-t17">
<p><code>int</code></p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r9c1-t17" headers="r1c1-t17">
<p><code>ATTR_LEVEL</code></p>
</td>
<td class="cellalignment1075" headers="r9c1-t17 r1c2-t17">
<p>Data type levels. This attribute always returns <code>0</code>.</p>
</td>
<td class="cellalignment1075" headers="r9c1-t17 r1c3-t17">
<p><code>int</code></p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r10c1-t17" headers="r1c1-t17">
<p><code>ATTR_HAS_DEFAULT</code></p>
</td>
<td class="cellalignment1075" headers="r10c1-t17 r1c2-t17">
<p>Indicates whether an argument has a default</p>
</td>
<td class="cellalignment1075" headers="r10c1-t17 r1c3-t17">
<p><code>int</code></p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r11c1-t17" headers="r1c1-t17">
<p><code>ATTR_LIST_ARGUMENTS</code></p>
</td>
<td class="cellalignment1075" headers="r11c1-t17 r1c2-t17">
<p>The list of arguments at the next level (when the argument is of a record or table type)</p>
</td>
<td class="cellalignment1075" headers="r11c1-t17 r1c3-t17">
<p><code>vector&lt;MetaData&gt;</code></p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r12c1-t17" headers="r1c1-t17">
<p><code>ATTR_IOMODE</code></p>
</td>
<td class="cellalignment1075" headers="r12c1-t17 r1c2-t17">
<p>Indicates the argument mode; valid values are:</p>
<ul>
<li>
<p><code>0</code> for <code>IN</code> (<code>OCCI_TYPEPARAM_IN</code>)</p>
</li>
<li>
<p><code>1</code> for <code>OUT</code> (<code>OCCI_TYPEPARAM_OUT</code>)</p>
</li>
<li>
<p><code>2</code> for <code>IN/OUT</code> (<code>OCCI_TYPEPARAM_INOUT</code>)</p>
</li>
</ul>
</td>
<td class="cellalignment1075" headers="r12c1-t17 r1c3-t17">
<p><code>int</code></p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r13c1-t17" headers="r1c1-t17">
<p><code>ATTR_RADIX</code></p>
</td>
<td class="cellalignment1075" headers="r13c1-t17 r1c2-t17">
<p>Returns a radix (if number type)</p>
</td>
<td class="cellalignment1075" headers="r13c1-t17 r1c3-t17">
<p><code>int</code></p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r14c1-t17" headers="r1c1-t17">
<p><code>ATTR_IS_NULL</code></p>
</td>
<td class="cellalignment1075" headers="r14c1-t17 r1c2-t17">
<p>Returns <code>FALSE</code> if <code>NULL</code> values are not permitted for the column.</p>
</td>
<td class="cellalignment1075" headers="r14c1-t17 r1c3-t17">
<p>bool</p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r15c1-t17" headers="r1c1-t17">
<p><code>ATTR_TYPE_NAME</code></p>
</td>
<td class="cellalignment1075" headers="r15c1-t17 r1c2-t17">
<p>Returns a string that is the type name (or the package name for local package types). The returned value contains the type name if the data type is <code>SQLT_NTY</code> or <code>SQLT_REF</code>. If the data type is <code>SQLT_NTY</code>, then the name of the named data type's type is returned. If the data type is <code>SQLT_REF</code>, then the type name of the named data type pointed to by the <code>REF</code> is returned.</p>
</td>
<td class="cellalignment1075" headers="r15c1-t17 r1c3-t17">
<p><code>string</code></p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r16c1-t17" headers="r1c1-t17">
<p><code>ATTR_SCHEMA_NAME</code></p>
</td>
<td class="cellalignment1075" headers="r16c1-t17 r1c2-t17">
<p>For <code>SQLT_NTY</code> or <code>SQLT_REF</code>, returns a string with the schema name under which the type was created (or for local package types, the package name).</p>
</td>
<td class="cellalignment1075" headers="r16c1-t17 r1c3-t17">
<p><code>string</code></p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r17c1-t17" headers="r1c1-t17">
<p><code>ATTR_SUB_NAME</code></p>
</td>
<td class="cellalignment1075" headers="r17c1-t17 r1c2-t17">
<p>For <code>SQLT_NTY</code> or <code>SQLT_REF</code>, returns a string with the type name.</p>
</td>
<td class="cellalignment1075" headers="r17c1-t17 r1c3-t17">
<p><code>string</code></p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r18c1-t17" headers="r1c1-t17">
<p><code>ATTR_LINK</code></p>
</td>
<td class="cellalignment1075" headers="r18c1-t17 r1c2-t17">
<p>For <code>SQLT_NTY</code> or <code>SQLT_REF</code>, returns a string with the database link name of the database on which the type exists. This can happen only for package-ocal types, when the package is remote.</p>
</td>
<td class="cellalignment1075" headers="r18c1-t17 r1c3-t17">
<p><code>string</code></p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r19c1-t17" headers="r1c1-t17">
<p><code>ATTR_REF_TDO</code></p>
</td>
<td class="cellalignment1075" headers="r19c1-t17 r1c2-t17">
<p>Returns the <code>REF</code> of the TDO for the type, if the argument type is an object.</p>
</td>
<td class="cellalignment1075" headers="r19c1-t17 r1c3-t17">
<p><code>RefAny</code></p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r20c1-t17" headers="r1c1-t17">
<p><code>ATTR_CHARSET_ID</code></p>
</td>
<td class="cellalignment1075" headers="r20c1-t17 r1c2-t17">
<p>Returns the character set ID if the argument is of a string or character type.</p>
</td>
<td class="cellalignment1075" headers="r20c1-t17 r1c3-t17">
<p><code>int</code></p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r21c1-t17" headers="r1c1-t17">
<p><code>ATTR_CHARSET_FORM</code></p>
</td>
<td class="cellalignment1075" headers="r21c1-t17 r1c2-t17">
<p>Returns the character set form if the argument is of a string or character type.</p>
</td>
<td class="cellalignment1075" headers="r21c1-t17 r1c3-t17">
<p><code>int</code></p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformalmax" --></div>
<!-- class="sect2" -->
<a id="i1001537"></a><a id="LNCPP20311"></a>
<div class="sect2">
<h3 class="sect2">List Attrib<a id="sthref510"></a>utes</h3>
<p>A list type of attribute can be described for all the elements in the list. In case of a function argument list, position <code>0</code> has a parameter for return values (<code>PTYPE_ARG</code>).</p>
<p>The list is described iteratively for all the elements. The results are stored in a C++ <code>vector&lt;MetaData&gt;</code>. Call the <code>getVector()</code> method to describe list type of attributes. <a href="#g1014919">Table 6-16</a> displays the list attributes.</p>
<div class="tblformalmax">
<p class="titleintable"><a id="LNCPP20312"></a><a id="sthref511"></a><a id="g1014919"></a>Table 6-16 Values for ATTR_LIST_TYPE</p>
<table class="cellalignment1076" title="Values for ATTR_LIST_TYPE " summary="First column lists values; second column provides description of these values." dir="ltr">
<thead>
<tr class="cellalignment1067">
<th class="cellalignment1074" id="r1c1-t18">Possible Values</th>
<th class="cellalignment1074" id="r1c2-t18">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r2c1-t18" headers="r1c1-t18">
<p><code>ATTR_LIST_COLUMNS</code></p>
</td>
<td class="cellalignment1075" headers="r2c1-t18 r1c2-t18">
<p>Column list</p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r3c1-t18" headers="r1c1-t18">
<p><code>ATTR_LIST_ARGUMENTS</code></p>
</td>
<td class="cellalignment1075" headers="r3c1-t18 r1c2-t18">
<p>Procedure or function arguments list</p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r4c1-t18" headers="r1c1-t18">
<p><code>ATTR_LIST_SUBPROGRAMS</code></p>
</td>
<td class="cellalignment1075" headers="r4c1-t18 r1c2-t18">
<p>Subprogram list</p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r5c1-t18" headers="r1c1-t18">
<p><code>ATTR_LIST_TYPE_ATTRIBUTES</code></p>
</td>
<td class="cellalignment1075" headers="r5c1-t18 r1c2-t18">
<p>Type attribute list</p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r6c1-t18" headers="r1c1-t18">
<p><code>ATTR_LIST_TYPE_METHODS</code></p>
</td>
<td class="cellalignment1075" headers="r6c1-t18 r1c2-t18">
<p>Type method list</p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r7c1-t18" headers="r1c1-t18">
<p><code>ATTR_LIST_OBJECTS</code></p>
</td>
<td class="cellalignment1075" headers="r7c1-t18 r1c2-t18">
<p>Object list within a schema</p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r8c1-t18" headers="r1c1-t18">
<p><code>ATTR_LIST_SCHEMAS</code></p>
</td>
<td class="cellalignment1075" headers="r8c1-t18 r1c2-t18">
<p>Schema list within a database</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformalmax" --></div>
<!-- class="sect2" -->
<a id="i1001541"></a><a id="LNCPP20313"></a>
<div class="sect2">
<h3 class="sect2">Schema Att<a id="sthref512"></a>ributes</h3>
<p>A parameter for a schema type (type <code>PTYPE_SCHEMA</code>) has the attributes described in <a href="#g1014947">Table 6-17</a>.</p>
<div class="tblformalmax">
<p class="titleintable"><a id="LNCPP20314"></a><a id="sthref513"></a><a id="g1014947"></a>Table 6-17 Attributes Specific to Schemas</p>
<table class="cellalignment1076" title="Attributes Specific to Schemas " summary="First column lists attributes; second column provides description of these attributes; third column provides dataypes of these attributes." dir="ltr">
<thead>
<tr class="cellalignment1067">
<th class="cellalignment1074" id="r1c1-t19">Attribute</th>
<th class="cellalignment1074" id="r1c2-t19">Description</th>
<th class="cellalignment1074" id="r1c3-t19">Attribute Data Type</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r2c1-t19" headers="r1c1-t19">
<p><code>ATTR_LIST_OBJECTS</code></p>
</td>
<td class="cellalignment1075" headers="r2c1-t19 r1c2-t19">
<p>List of objects in the schema</p>
</td>
<td class="cellalignment1075" headers="r2c1-t19 r1c3-t19">
<p><code>string</code></p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformalmax" --></div>
<!-- class="sect2" -->
<a id="i1001545"></a><a id="LNCPP20315"></a>
<div class="sect2">
<h3 class="sect2">Databa<a id="sthref514"></a>se Attributes</h3>
<p>A parameter for a database (type <code>PTYPE_DATABASE</code>) has the attributes described in <a href="#g1014959">Table 6-18</a>.</p>
<div class="tblformalmax">
<p class="titleintable"><a id="LNCPP20316"></a><a id="sthref515"></a><a id="g1014959"></a>Table 6-18 Attributes Specific to Databases</p>
<table class="cellalignment1076" title="Attributes Specific to Databases " summary="First column lists attributes; second column provides description of these attributes; third column provides dataypes of these attributes." dir="ltr">
<thead>
<tr class="cellalignment1067">
<th class="cellalignment1074" id="r1c1-t20">Attribute</th>
<th class="cellalignment1074" id="r1c2-t20">Description</th>
<th class="cellalignment1074" id="r1c3-t20">Attribute Data Type</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r2c1-t20" headers="r1c1-t20">
<p><code>ATTR_VERSION</code></p>
</td>
<td class="cellalignment1075" headers="r2c1-t20 r1c2-t20">
<p>Database version</p>
</td>
<td class="cellalignment1075" headers="r2c1-t20 r1c3-t20">
<p><code>string</code></p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r3c1-t20" headers="r1c1-t20">
<p><code>ATTR_CHARSET_ID</code></p>
</td>
<td class="cellalignment1075" headers="r3c1-t20 r1c2-t20">
<p>Database character set ID from the server handle</p>
</td>
<td class="cellalignment1075" headers="r3c1-t20 r1c3-t20">
<p><code>int</code></p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r4c1-t20" headers="r1c1-t20">
<p><code>ATTR_NCHARSET_ID</code></p>
</td>
<td class="cellalignment1075" headers="r4c1-t20 r1c2-t20">
<p>Database native character set ID from the server handle</p>
</td>
<td class="cellalignment1075" headers="r4c1-t20 r1c3-t20">
<p><code>int</code></p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r5c1-t20" headers="r1c1-t20">
<p><code>ATTR_LIST_SCHEMAS</code></p>
</td>
<td class="cellalignment1075" headers="r5c1-t20 r1c2-t20">
<p>List of schemas (type <code>PTYPE_SCHEMA</code>) in the database</p>
</td>
<td class="cellalignment1075" headers="r5c1-t20 r1c3-t20">
<p><code>vector&lt;MetaData&gt;</code></p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r6c1-t20" headers="r1c1-t20">
<p><code>ATTR_MAX_PROC_LEN</code></p>
</td>
<td class="cellalignment1075" headers="r6c1-t20 r1c2-t20">
<p>Maximum length of a procedure name</p>
</td>
<td class="cellalignment1075" headers="r6c1-t20 r1c3-t20">
<p><code>unsigned int</code></p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r7c1-t20" headers="r1c1-t20">
<p><code>ATTR_MAX_COLUMN_LEN</code></p>
</td>
<td class="cellalignment1075" headers="r7c1-t20 r1c2-t20">
<p>Maximum length of a column name</p>
</td>
<td class="cellalignment1075" headers="r7c1-t20 r1c3-t20">
<p><code>unsigned int</code></p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r8c1-t20" headers="r1c1-t20">
<p><code>ATTR_CURSOR_COMMIT_BEHAVIOR</code></p>
</td>
<td class="cellalignment1075" headers="r8c1-t20 r1c2-t20">
<p>How a <code>COMMIT</code> operation affects cursors and prepared statements in the database; values are:</p>
<ul>
<li>
<p><code>OCCI_CURSOR_OPEN</code> for preserving cursor state as before the commit operation</p>
</li>
<li>
<p><code>OCCI_CURSOR_CLOSED</code> for cursors that are closed on <code>COMMIT</code>, although the application can execute the statement for the second time without preparing it again</p>
</li>
</ul>
</td>
<td class="cellalignment1075" headers="r8c1-t20 r1c3-t20">
<p><code>int</code></p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r9c1-t20" headers="r1c1-t20">
<p><code>ATTR_MAX_CATALOG_NAMELEN</code></p>
</td>
<td class="cellalignment1075" headers="r9c1-t20 r1c2-t20">
<p>Maximum length of a catalog (database) name</p>
</td>
<td class="cellalignment1075" headers="r9c1-t20 r1c3-t20">
<p><code>int</code></p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r10c1-t20" headers="r1c1-t20">
<p><code>ATTR_CATALOG_LOCATION</code></p>
</td>
<td class="cellalignment1075" headers="r10c1-t20 r1c2-t20">
<p>Position of the catalog in a qualified table; values are:</p>
<ul>
<li>
<p><code>OCCI_CL_START</code></p>
</li>
<li>
<p><code>OCCI_CL_END</code></p>
</li>
</ul>
</td>
<td class="cellalignment1075" headers="r10c1-t20 r1c3-t20">
<p><code>int</code></p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r11c1-t20" headers="r1c1-t20">
<p><code>ATTR_SAVEPOINT_SUPPORT</code></p>
</td>
<td class="cellalignment1075" headers="r11c1-t20 r1c2-t20">
<p>Identifies whether the database supports savepoints; values are:</p>
<ul>
<li>
<p><code>OCCI_SP_SUPPORTED</code></p>
</li>
<li>
<p><code>OCCI_SP_UNSUPPORTED</code></p>
</li>
</ul>
</td>
<td class="cellalignment1075" headers="r11c1-t20 r1c3-t20">
<p><code>int</code></p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r12c1-t20" headers="r1c1-t20">
<p><code>ATTR_NOWAIT_SUPPORT</code></p>
</td>
<td class="cellalignment1075" headers="r12c1-t20 r1c2-t20">
<p>Identifies whether the database supports the nowait clause; values are:</p>
<ul>
<li>
<p><code>OCCI_NW_SUPPORTED</code></p>
</li>
<li>
<p><code>OCCI_NW_UNSUPPORTED</code></p>
</li>
</ul>
</td>
<td class="cellalignment1075" headers="r12c1-t20 r1c3-t20">
<p><code>int</code></p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r13c1-t20" headers="r1c1-t20">
<p><code>ATTR_AUTOCOMMIT_DDL</code></p>
</td>
<td class="cellalignment1075" headers="r13c1-t20 r1c2-t20">
<p>Identifies whether the autocommit mode is required for DDL statements; values are:</p>
<ul>
<li>
<p><code>OCCI_AC_DDL</code></p>
</li>
<li>
<p><code>OCCI_NO_AC_DDL</code></p>
</li>
</ul>
</td>
<td class="cellalignment1075" headers="r13c1-t20 r1c3-t20">
<p><code>int</code></p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r14c1-t20" headers="r1c1-t20">
<p><code>ATTR_LOCKING_MODE</code></p>
</td>
<td class="cellalignment1075" headers="r14c1-t20 r1c2-t20">
<p>Locking mode for the database; values are:</p>
<ul>
<li>
<p><code>OCCI_LOCK_IMMEDIATE</code></p>
</li>
<li>
<p><code>OCCI_LOCK_DELAYED</code></p>
</li>
</ul>
</td>
<td class="cellalignment1075" headers="r14c1-t20 r1c3-t20">
<p><code>int</code></p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformalmax" --></div>
<!-- class="sect2" --></div>
<!-- class="sect1" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment1066">
<tr>
<td class="cellalignment1075">
<table class="cellalignment1071">
<tr>
<td class="cellalignment1070"><a href="types.htm"><img width="24" height="24" src="../../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment1070"><a href="lobs.htm"><img width="24" height="24" src="../../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;1999, 2013,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment1078">
<table class="cellalignment1069">
<tr>
<td class="cellalignment1070"><a href="../../index.htm"><img width="24" height="24" src="../../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment1070"><a href="../../nav/portal_booklist.htm"><img width="24" height="24" src="../../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment1070"><a href="toc.htm"><img width="24" height="24" src="../../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment1070"><a href="index.htm"><img width="24" height="24" src="../../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment1070"><a href="../../nav/mindx.htm"><img width="24" height="24" src="../../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment1070"><a href="../../dcommon/html/feedback.htm"><img width="24" height="24" src="../../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>
</body>
</html>
