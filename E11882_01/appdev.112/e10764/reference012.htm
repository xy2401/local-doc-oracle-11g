<!DOCTYPE html>
<html lang="en" >
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1">
<meta charset="utf-8">
<title>Consumer Class</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Version 5.1.2 Build 711" />
<meta name="dcterms.created" content="2013-02-06T9:20:51Z" />
<meta name="robots" content="all" />
<meta name="dcterms.title" content="C++ Call Interface Programmer's Guide," />
<meta name="dcterms.identifier" content="E10764-04" />
<meta name="dcterms.isVersionOf" content="LNCPP" />
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;1999, 2013,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved." />
<link rel="Start" href="../../index.htm" title="Home" type="text/html" />
<link rel="Copyright" href="../../dcommon/html/cpyr.htm" title="Copyright" type="text/html" />

<script type="application/javascript"  src="../../dcommon/js/headfoot.js"></script>
<script type="application/javascript"  src="../../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html" />
<link rel="Index" href="index.htm" title="Index" type="text/html" />
<link rel="Prev" href="reference011.htm" title="Previous" type="text/html" />
<link rel="Next" href="reference013.htm" title="Next" type="text/html" />
<link rel="alternate" href="../e10764.pdf" title="PDF version" type="application/pdf" />
<link rel="schema.dcterms" href="http://purl.org/dc/terms/" />
<link rel="stylesheet" href="../../dcommon/css/fusiondoc.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/header.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/footer.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/fonts.css">
<link rel="stylesheet" href="../../dcommon/css/foundation.css">
<link rel="stylesheet" href="../../dcommon/css/codemirror.css">
<link rel="stylesheet" type="text/css" title="Default" href="../../nav/css/html5.css">
<link rel="stylesheet" href="../../dcommon/css/respond-480-tablet.css">
<link rel="stylesheet" href="../../dcommon/css/respond-768-laptop.css">
<link rel="stylesheet" href="../../dcommon/css/respond-1140-deskop.css">
<script type="application/javascript" src="../../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">32/54</span> <!-- End Header --><a id="CACBGCEB"></a><a id="LNCPP1030"></a>
<hr />
<div class="refsect1">
<h1 class="refsect1">Consumer <a id="sthref742"></a><a id="sthref743"></a><a id="sthref744"></a>Class</h1>
<p>The <code>Consumer</code> class supports dequeuing of <code>Message</code>s and controls the dequeuing options.</p>
<div class="tblformal">
<p class="titleintable"><a id="LNCPP20850"></a><a id="sthref745"></a><a id="BBACHCJH"></a>Table 13-14 Enumerated Values Used by Consumer Class</p>
<table class="cellalignment1073" title="Enumerated Values Used by Consumer Class" summary="First column lists the attribute used by the class, the second column describes the options available to each attribute" dir="ltr">
<thead>
<tr class="cellalignment1067">
<th class="cellalignment1074" id="r1c1-t135">Attribute</th>
<th class="cellalignment1074" id="r1c2-t135">Options</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r2c1-t135" headers="r1c1-t135">
<pre>
DequeMode
</pre></td>
<td class="cellalignment1075" headers="r2c1-t135 r1c2-t135">
<ul>
<li>
<p><code>DEQ_BROWSE</code> indicates that the message should be read without acquiring a lock; equivalent to a <code>SELECT</code>.</p>
</li>
<li>
<p><code>DEQ_LOCKED</code> indicates that the message should be read. Get its write lock, which lasts s for the duration of the transaction; equivalent to a <code>SELECT FOR UPDATE</code>.</p>
</li>
<li>
<p><code>DEQ_REMOVE</code> indicates that the message should be read. Update or delete it; the message can be retained in the queue table based on the retention properties. This is the default setting.</p>
</li>
<li>
<p><code>DEQ_REMOVE_NODATA</code> indicates that the receipt of the message should be confirmed, but its actual content should not be delivered.</p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r3c1-t135" headers="r1c1-t135">
<pre>
Navigation
</pre></td>
<td class="cellalignment1075" headers="r3c1-t135 r1c2-t135">
<ul>
<li>
<p><code>DEQ_FIRST_MSG</code> indicates that the first available message on the queue that matches the search criteria must be retrieved. Resets the position to the beginning of the queue.</p>
</li>
<li>
<p><code>DEQ_NEXT_TRANSACTION</code> indicates that the next available message on the queue that matches the search criteria must be retrieved. If the previous message belongs to a message group, AQ retrieves the next available message that matches the search criteria and belongs to the message group. This is the default setting.</p>
</li>
<li>
<p><code>DEQ_NEXT_MSG</code> indicates that the remainder of the current transaction group, if any, should be skipped. The first message of the next transaction group may then be retrieved. This option can only be used if message grouping is enabled for the current queue.</p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r4c1-t135" headers="r1c1-t135">
<pre>
Visibility
</pre></td>
<td class="cellalignment1075" headers="r4c1-t135 r1c2-t135">
<ul>
<li>
<p><code>DEQ_IMMEDIATE</code> indicates that the dequeued message is not part of the current transaction. It constitutes a transaction on its own.</p>
</li>
<li>
<p><code>DEQ_ON_COMMIT</code> indicates that the dequeue is part of the current transaction. This is the default setting.</p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r5c1-t135" headers="r1c1-t135">
<pre>
DequeWaitOption
</pre></td>
<td class="cellalignment1075" headers="r5c1-t135 r1c2-t135">
<ul>
<li>
<p><code>DEQ_WAIT_FOREVER</code> indicates that the consumer waits for the <code>Message</code> indefinitely.</p>
</li>
<li>
<p><code>DEQ_NO_WAIT</code> indicates that there should be not wait if there are no messages on the queue.</p>
</li>
</ul>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<div class="tblformal">
<p class="titleintable"><a id="LNCPP20851"></a><a id="sthref746"></a><a id="sthref747"></a>Table 13-15 Summary of <a id="sthref748"></a><a id="sthref749"></a>Consumer Methods</p>
<table class="cellalignment1073" title="Summary of Consumer Methods " summary="First column lists methods; second column provides description of these methods." dir="ltr">
<thead>
<tr class="cellalignment1067">
<th class="cellalignment1074" id="r1c1-t136">Method</th>
<th class="cellalignment1074" id="r1c2-t136">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r2c1-t136" headers="r1c1-t136">
<p><a href="#CACJEFAG">Consumer()</a></p>
</td>
<td class="cellalignment1075" headers="r2c1-t136 r1c2-t136">
<p><code>Consumer</code> class constructor.</p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r3c1-t136" headers="r1c1-t136">
<p><a href="#CACBEEJC">getConsumerName()</a></p>
</td>
<td class="cellalignment1075" headers="r3c1-t136 r1c2-t136">
<p>Retrieves the name of the <code>Consumer</code>.</p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r4c1-t136" headers="r1c1-t136">
<p><a href="#CACFACAH">getCorrelationId()</a></p>
</td>
<td class="cellalignment1075" headers="r4c1-t136 r1c2-t136">
<p>Retrieves she correlation id of the message that is to be dequeued.</p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r5c1-t136" headers="r1c1-t136">
<p><a href="#CACDAGIC">getDequeueMode()</a></p>
</td>
<td class="cellalignment1075" headers="r5c1-t136 r1c2-t136">
<p>Retrieves the dequeue mode of the <code>Consumer</code>.</p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r6c1-t136" headers="r1c1-t136">
<p><a href="#CACHDBEB">getMessageIdToDequeue()</a></p>
</td>
<td class="cellalignment1075" headers="r6c1-t136 r1c2-t136">
<p>Retrieves the id of the message that is dequeued.</p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r7c1-t136" headers="r1c1-t136">
<p><a href="#CIAEFEBD">getQueueName()</a></p>
</td>
<td class="cellalignment1075" headers="r7c1-t136 r1c2-t136">
<p>Gets the name of the queue used by the consumer.</p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r8c1-t136" headers="r1c1-t136">
<p><a href="#CACEGJII">getPositionOfMessage()</a></p>
</td>
<td class="cellalignment1075" headers="r8c1-t136 r1c2-t136">
<p>Retrieves the position of the Message that is dequeued.</p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r9c1-t136" headers="r1c1-t136">
<p><a href="#CIAJHBDF">getTransformation()</a></p>
</td>
<td class="cellalignment1075" headers="r9c1-t136 r1c2-t136">
<p>Retrieves the transformation applied before a <code>Message</code> is dequeued.</p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r10c1-t136" headers="r1c1-t136">
<p><a href="#CACDIJIA">getVisibility()</a></p>
</td>
<td class="cellalignment1075" headers="r10c1-t136 r1c2-t136">
<p>Retrieves the transactional behavior of the dequeue operation.</p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r11c1-t136" headers="r1c1-t136">
<p><a href="#CACBCJJF">getWaitTime()</a></p>
</td>
<td class="cellalignment1075" headers="r11c1-t136 r1c2-t136">
<p>Retrieves the specified behavior of the <code>Consumer</code> when waiting for a <code>Message</code> with matching search criteria.</p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r12c1-t136" headers="r1c1-t136">
<p><a href="#CACDCBCD">isNull()</a></p>
</td>
<td class="cellalignment1075" headers="r12c1-t136 r1c2-t136">
<p>Tests whether the <code>Consumer</code> object is <code>NULL</code>.</p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r13c1-t136" headers="r1c1-t136">
<p><a href="#BBAJEEAE">operator=()</a></p>
</td>
<td class="cellalignment1075" headers="r13c1-t136 r1c2-t136">
<p>Assignment operator for the <code>Consumer</code> class.</p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r14c1-t136" headers="r1c1-t136">
<p><a href="#CACGIAEF">receive()</a></p>
</td>
<td class="cellalignment1075" headers="r14c1-t136 r1c2-t136">
<p>Receives and dequeues a <code>Message</code></p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r15c1-t136" headers="r1c1-t136">
<p><a href="#CACGHEBG">setAgent()</a></p>
</td>
<td class="cellalignment1075" headers="r15c1-t136 r1c2-t136">
<p>Sets the <code>Agent</code>'s name and address (queue name) on the consumer.</p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r16c1-t136" headers="r1c1-t136">
<p><a href="#CACBCFCE">setConsumerName()</a></p>
</td>
<td class="cellalignment1075" headers="r16c1-t136 r1c2-t136">
<p>Sets the <code>Consumer</code> name.</p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r17c1-t136" headers="r1c1-t136">
<p><a href="#CACEEIEB">setCorrelationId()</a></p>
</td>
<td class="cellalignment1075" headers="r17c1-t136 r1c2-t136">
<p>Specifies the correlation identifier of the message to be dequeued.</p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r18c1-t136" headers="r1c1-t136">
<p><a href="#CACCAFHA">setDequeueMode()</a></p>
</td>
<td class="cellalignment1075" headers="r18c1-t136 r1c2-t136">
<p>Specifies the locking behavior associated with dequeuing.</p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r19c1-t136" headers="r1c1-t136">
<p><a href="#CACDHCAH">setMessageIdToDequeue()</a></p>
</td>
<td class="cellalignment1075" headers="r19c1-t136 r1c2-t136">
<p>Specifies the identifier of the <code>Message</code> to be dequeued.</p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r20c1-t136" headers="r1c1-t136">
<p><a href="#CACDGIGJ">setNull()</a></p>
</td>
<td class="cellalignment1075" headers="r20c1-t136 r1c2-t136">
<p>Nullifies the <code>Consumer</code>; frees the memory associated with this object.</p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r21c1-t136" headers="r1c1-t136">
<p><a href="#CACFFIBB">setPositionOfMessage()</a></p>
</td>
<td class="cellalignment1075" headers="r21c1-t136 r1c2-t136">
<p>Specifies position of the <code>Message</code> to be retrieved.</p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r22c1-t136" headers="r1c1-t136">
<p><a href="#CACIFDEG">setQueueName()</a></p>
</td>
<td class="cellalignment1075" headers="r22c1-t136 r1c2-t136">
<p>Specifies the name of a queue before dequeuing <code>Message</code>s.</p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r23c1-t136" headers="r1c1-t136">
<p><a href="#CIAHBJJA">setTransformation()</a></p>
</td>
<td class="cellalignment1075" headers="r23c1-t136 r1c2-t136">
<p>Specifies transformation applied before dequeuing a <code>Message</code>.</p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r24c1-t136" headers="r1c1-t136">
<p><a href="#CACEJJHI">setVisibility()</a></p>
</td>
<td class="cellalignment1075" headers="r24c1-t136 r1c2-t136">
<p>Specifies if <code>Message</code> should be dequeued as part of the current transaction.</p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r25c1-t136" headers="r1c1-t136">
<p><a href="#CACECHFB">setWaitTime()</a></p>
</td>
<td class="cellalignment1075" headers="r25c1-t136 r1c2-t136">
<p>Specifies wait conditions if there are no <code>Message</code>s with matching criteria.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<a id="CACJEFAG"></a><a id="LNCPP20852"></a>
<hr />
<h2 class="refsect2">Consumer()</h2>
<p>Consumer class constructor.</p>
<div class="inftblinformal">
<table class="cellalignment1076" title="versions of Consumer() constructor" summary="First column lists versions of the constructor; second column provides description of these versions." dir="ltr">
<thead>
<tr class="cellalignment1067">
<th class="cellalignment1074" id="r1c1-t137">Syntax</th>
<th class="cellalignment1074" id="r1c2-t137">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r2c1-t137" headers="r1c1-t137">
<pre>
Consumer(
   const Connection *conn);
</pre></td>
<td class="cellalignment1075" headers="r2c1-t137 r1c2-t137">Creates a new <code>Consumer</code> object with the specified <code>Connection</code> handle.</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r3c1-t137" headers="r1c1-t137">
<pre>
Consumer(
   const Connection *conn
   const Agent&amp; agent);
</pre></td>
<td class="cellalignment1075" headers="r3c1-t137 r1c2-t137">Creates a new <code>Consumer</code> object with specified <code>Connection</code> and properties of the specified <code>Agent</code>.</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r4c1-t137" headers="r1c1-t137">
<pre>
Consumer(
   const Connection *conn,
   const string&amp; queue);
</pre></td>
<td class="cellalignment1075" headers="r4c1-t137 r1c2-t137">Creates a new <code>Consumer</code> object with specified <code>Connection</code> and queue.</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r5c1-t137" headers="r1c1-t137">
<pre>
Consumer(
   const Consumer&amp; consumer);
</pre></td>
<td class="cellalignment1075" headers="r5c1-t137 r1c2-t137">Copy constructor.</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" -->
<div class="inftblinformal">
<table class="cellalignment1076" title="prameters of Consumer() constructor" summary="First column lists parameters; second column provides description of these parameters." dir="ltr">
<thead>
<tr class="cellalignment1067">
<th class="cellalignment1074" id="r1c1-t138">Parameter</th>
<th class="cellalignment1074" id="r1c2-t138">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r2c1-t138" headers="r1c1-t138">
<pre>
conn
</pre></td>
<td class="cellalignment1075" headers="r2c1-t138 r1c2-t138">The connection in which the <code>Consumer</code> is created.</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r3c1-t138" headers="r1c1-t138">
<pre>
agent
</pre></td>
<td class="cellalignment1075" headers="r3c1-t138 r1c2-t138">Agent assigned to the <code>Consumer</code>.</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r4c1-t138" headers="r1c1-t138">
<pre>
queue
</pre></td>
<td class="cellalignment1075" headers="r4c1-t138 r1c2-t138">Queue at which the <code>Consumer</code> retrieves messages.</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r5c1-t138" headers="r1c1-t138">
<pre>
consumer
</pre></td>
<td class="cellalignment1075" headers="r5c1-t138 r1c2-t138">Original <code>Consumer</code> object.</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" -->
<a id="CACBEEJC"></a><a id="LNCPP20853"></a>
<hr />
<h2 class="refsect2">getConsumerName()</h2>
<p>Retrieves the name of the <code>Consumer</code>.</p>
<p class="subhead1"><a id="LNCPP20854"></a>Syntax</p>
<pre>
string getConsumerName() const;
</pre>
<a id="CACFACAH"></a><a id="LNCPP20855"></a>
<hr />
<h2 class="refsect2">getCorrelationId()</h2>
<p>Retrieves she correlation id of the message that is to be dequeued</p>
<p class="subhead1"><a id="LNCPP20856"></a>Syntax</p>
<pre>
string geCorrelationId() const;
</pre>
<a id="CACDAGIC"></a><a id="LNCPP20857"></a>
<hr />
<h2 class="refsect2">getDequeueMode()</h2>
<p>Retrieves the dequeue mode of the <code>Consumer</code>. <code>DequeueMode</code> is defined in <a href="#BBACHCJH">Table 13-14</a>.</p>
<p class="subhead1"><a id="LNCPP20858"></a>Syntax</p>
<pre>
DequeueMode getDequeueMode() const;
</pre>
<a id="CACHDBEB"></a><a id="LNCPP20859"></a>
<hr />
<h2 class="refsect2">getMessageIdToDequeue()</h2>
<p>Retrieves the id of the message that is dequeued.</p>
<p class="subhead1"><a id="LNCPP20860"></a>Syntax</p>
<pre>
Bytes getMessageToDequeue() const;
</pre>
<a id="CACEGJII"></a><a id="LNCPP20861"></a>
<hr />
<h2 class="refsect2">getPositionOfMessage()</h2>
<p>Retrieves the position, or navigation, of the message that is dequeued. <code>Navigation</code> is defined in <a href="#BBACHCJH">Table 13-14</a>.</p>
<p class="subhead1"><a id="LNCPP20862"></a>Syntax</p>
<pre>
Navigation getPositionOfMessage() const;
</pre>
<a id="CIAEFEBD"></a><a id="LNCPP20863"></a>
<hr />
<h2 class="refsect2">getQueueName()</h2>
<p>Gets the name of the queue used by the consumer.</p>
<p class="subhead1"><a id="LNCPP20864"></a>Syntax</p>
<pre>
string getQueueName() const;
</pre>
<a id="CIAJHBDF"></a><a id="LNCPP20865"></a>
<hr />
<h2 class="refsect2">getTransformation()</h2>
<p>Retrieves the transformation applied before a <code>Message</code> is dequeued.</p>
<p class="subhead1"><a id="LNCPP20866"></a>Syntax</p>
<pre>
string getTransformation() const;
</pre>
<a id="CACDIJIA"></a><a id="LNCPP20867"></a>
<hr />
<h2 class="refsect2">getVisibility()</h2>
<p>Retrieves the transactional behavior of the dequeue operation, or visibility. <code>Visibility</code> is defined in <a href="#BBACHCJH">Table 13-14</a>.</p>
<p class="subhead1"><a id="LNCPP20868"></a>Syntax</p>
<pre>
Visibility getVisibility() const;
</pre>
<a id="CACBCJJF"></a><a id="LNCPP20869"></a>
<hr />
<h2 class="refsect2">getWaitTime()</h2>
<p>Retrieves the specified behavior of the <code>Consumer</code> when waiting for a <code>Message</code> with matching search criteria. <code>DequeWaitOption</code> is defined in <a href="#BBACHCJH">Table 13-14</a>.</p>
<p class="subhead1"><a id="LNCPP20870"></a>Syntax</p>
<pre>
DequeWaitOption getWaitTime() const;
</pre>
<a id="CACDCBCD"></a><a id="LNCPP20871"></a>
<hr />
<h2 class="refsect2">isNull()</h2>
<p>Tests whether the <code>Consumer</code> object is <code>NULL</code>. If the <code>Consumer</code> object is <code>NULL</code>, <code>TRUE</code> is returned; otherwise, <code>FALSE</code> is returned.</p>
<p class="subhead1"><a id="LNCPP20872"></a>Syntax</p>
<pre>
bool isNull() const;
</pre>
<a id="BBAJEEAE"></a><a id="LNCPP20873"></a>
<hr />
<h2 class="refsect2">operator=()</h2>
<p>Assignment operator for <code>Consumer</code> class.</p>
<p class="subhead2"><a id="LNCPP20874"></a>Syntax</p>
<pre>
void operator=(
   const Consumer&amp; consumer); 
</pre>
<div class="inftblinformal">
<table class="cellalignment1076" title="prameters of operator=() method" summary="First column lists parameters; second column provides description of these parameters." dir="ltr">
<thead>
<tr class="cellalignment1067">
<th class="cellalignment1074" id="r1c1-t139">Parameter</th>
<th class="cellalignment1074" id="r1c2-t139">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r2c1-t139" headers="r1c1-t139">
<pre>
consumer
</pre></td>
<td class="cellalignment1075" headers="r2c1-t139 r1c2-t139">The original <code>Consumer</code>.</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" -->
<a id="CACGIAEF"></a><a id="LNCPP20875"></a>
<hr />
<h2 class="refsect2">receive()</h2>
<p>Receives and dequeues a <code>Message</code>.</p>
<p class="subhead2"><a id="LNCPP20876"></a>Syntax</p>
<pre>
Message receive(
   Message::PayloadType pType,
   const string&amp; type="",
   const string&amp; schema="");
</pre>
<div class="inftblinformal">
<table class="cellalignment1076" title="prameters of receive() method" summary="First column lists parameters; second column provides description of these parameters." dir="ltr">
<thead>
<tr class="cellalignment1067">
<th class="cellalignment1074" id="r1c1-t140">Parameter</th>
<th class="cellalignment1074" id="r1c2-t140">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r2c1-t140" headers="r1c1-t140">
<pre>
pType
</pre></td>
<td class="cellalignment1075" headers="r2c1-t140 r1c2-t140">The type of payload expected. Payload Type is defined in <a href="#BBACHCJH">Table 13-14</a>.</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r3c1-t140" headers="r1c1-t140">
<pre>
type
</pre></td>
<td class="cellalignment1075" headers="r3c1-t140 r1c2-t140">The type of the payload when <code>type</code> is <code>OBJECT</code>.</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r4c1-t140" headers="r1c1-t140">
<pre>
schema
</pre></td>
<td class="cellalignment1075" headers="r4c1-t140 r1c2-t140">The schema in which the type is defined when <code>pType</code> is <code>OBJECT</code>.</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" -->
<a id="CACGHEBG"></a><a id="LNCPP20877"></a>
<hr />
<h2 class="refsect2">setAgent()</h2>
<p>Sets the <code>Agent</code>'s name and address (queue name) on the consumer.</p>
<p class="subhead1"><a id="LNCPP20878"></a>Syntax</p>
<pre>
void setAgent(
   const Agent&amp; agent);
</pre>
<div class="inftblinformal">
<table class="cellalignment1076" title="prameters of setAgent() method" summary="First column lists parameters; second column provides description of these parameters." dir="ltr">
<thead>
<tr class="cellalignment1067">
<th class="cellalignment1074" id="r1c1-t141">Parameter</th>
<th class="cellalignment1074" id="r1c2-t141">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r2c1-t141" headers="r1c1-t141">
<pre>
agent
</pre></td>
<td class="cellalignment1075" headers="r2c1-t141 r1c2-t141">Name of the <code>Agent</code>.</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" -->
<a id="CACBCFCE"></a><a id="LNCPP20879"></a>
<hr />
<h2 class="refsect2">setConsumerName()</h2>
<p>Sets the <code>Consumer</code> name. Only messages with matching consumer name can be accessed. If a queue is not set up for multiple consumer, this option should be set to <code>NULL</code>.</p>
<p class="subhead1"><a id="LNCPP20880"></a>Syntax</p>
<pre>
void setConsumerName(
   const string&amp; name);
</pre>
<div class="inftblinformal">
<table class="cellalignment1076" title="prameters of setConsumerName() method" summary="First column lists parameters; second column provides description of these parameters." dir="ltr">
<thead>
<tr class="cellalignment1067">
<th class="cellalignment1074" id="r1c1-t142">Parameter</th>
<th class="cellalignment1074" id="r1c2-t142">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r2c1-t142" headers="r1c1-t142">
<pre>
name
</pre></td>
<td class="cellalignment1075" headers="r2c1-t142 r1c2-t142">Name of the <code>Consumer</code>.</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" -->
<a id="CACEEIEB"></a><a id="LNCPP20881"></a>
<hr />
<h2 class="refsect2">setCorrelationId()</h2>
<p>Specifies the correlation identifier of the message to be dequeued. Special pattern matching characters, such as the percent sign (%) and the underscore(_) can be used. If several messages satisfy the pattern, the order of dequeuing is undetermined.</p>
<p class="subhead1"><a id="LNCPP20882"></a>Syntax</p>
<pre>
void setCorrelationId
   const string&amp; id);
</pre>
<div class="inftblinformal">
<table class="cellalignment1076" title="prameters of setCorrelationId() method" summary="First column lists parameters; second column provides description of these parameters." dir="ltr">
<thead>
<tr class="cellalignment1067">
<th class="cellalignment1074" id="r1c1-t143">Parameter</th>
<th class="cellalignment1074" id="r1c2-t143">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r2c1-t143" headers="r1c1-t143">
<pre>
id
</pre></td>
<td class="cellalignment1075" headers="r2c1-t143 r1c2-t143">The identifier of the <code>Message</code>.</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" -->
<a id="CACCAFHA"></a><a id="LNCPP20883"></a>
<hr />
<h2 class="refsect2">setDequeueMode()</h2>
<p>Specifies the locking behavior associated with dequeuing.</p>
<p class="subhead1"><a id="LNCPP20884"></a>Syntax</p>
<pre>
void setDequeueMode(
   DequeueMode mode);
</pre>
<div class="inftblinformal">
<table class="cellalignment1076" title="prameters of setDequeueMode() method" summary="First column lists parameters; second column provides description of these parameters." dir="ltr">
<thead>
<tr class="cellalignment1067">
<th class="cellalignment1074" id="r1c1-t144">Parameter</th>
<th class="cellalignment1074" id="r1c2-t144">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r2c1-t144" headers="r1c1-t144">
<pre>
mode
</pre></td>
<td class="cellalignment1075" headers="r2c1-t144 r1c2-t144">Behavior of enqueuing. <code>DequeMode</code> is defined in <a href="#BBACHCJH">Table 13-14</a>.</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" -->
<a id="CACDHCAH"></a><a id="LNCPP20885"></a>
<hr />
<h2 class="refsect2">setMessageIdToDequeue()</h2>
<p>Specifies the identifier of the <code>Message</code> to be dequeued.</p>
<p class="subhead1"><a id="LNCPP20886"></a>Syntax</p>
<pre>
void setMessageIdToDequeue(
   const Bytes&amp; msgid);
</pre>
<div class="inftblinformal">
<table class="cellalignment1076" title="prameters of setMessageIdToDeque() method" summary="First column lists parameters; second column provides description of these parameters." dir="ltr">
<thead>
<tr class="cellalignment1067">
<th class="cellalignment1074" id="r1c1-t145">Parameter</th>
<th class="cellalignment1074" id="r1c2-t145">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r2c1-t145" headers="r1c1-t145">
<pre>
msgid
</pre></td>
<td class="cellalignment1075" headers="r2c1-t145 r1c2-t145">Identifier of the <code>Message</code> to be dequeued.</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" -->
<a id="CACDGIGJ"></a><a id="LNCPP20887"></a>
<hr />
<h2 class="refsect2">setNull()</h2>
<p>Nullifies the <code>Consumer</code>; frees the memory associated with this object.</p>
<p class="subhead1"><a id="LNCPP20888"></a>Syntax</p>
<pre>
void setNull();
</pre>
<a id="CACFFIBB"></a><a id="LNCPP20889"></a>
<hr />
<h2 class="refsect2">setPositionOfMessage()</h2>
<p>Specifies position of the <code>Message</code> to be retrieved.</p>
<p class="subhead1"><a id="LNCPP20890"></a>Syntax</p>
<pre>
void setPositionOfMessage(
   Navigation pos);
</pre>
<div class="inftblinformal">
<table class="cellalignment1076" title="prameters of setPositionOfMessage() method" summary="First column lists parameters; second column provides description of these parameters." dir="ltr">
<thead>
<tr class="cellalignment1067">
<th class="cellalignment1074" id="r1c1-t146">Parameter</th>
<th class="cellalignment1074" id="r1c2-t146">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r2c1-t146" headers="r1c1-t146">
<pre>
pos
</pre></td>
<td class="cellalignment1075" headers="r2c1-t146 r1c2-t146">Position of the message, <code>Navigation</code>, is defined in <a href="#BBACHCJH">Table 13-14</a>.</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" -->
<a id="CACIFDEG"></a><a id="LNCPP20891"></a>
<hr />
<h2 class="refsect2">setQueueName()</h2>
<p>Specifies the name of a queue before dequeuing <code>Message</code>s. Typically used when dequeuing multiple messages from the same queue.</p>
<p class="subhead1"><a id="LNCPP20892"></a>Syntax</p>
<pre>
void setQueueName(
   const string&amp; queue);
</pre>
<div class="inftblinformal">
<table class="cellalignment1076" title="parameters of setQueueName() method" summary="First column lists parameters; second column provides description of these parameters." dir="ltr">
<thead>
<tr class="cellalignment1067">
<th class="cellalignment1074" id="r1c1-t147">Parameter</th>
<th class="cellalignment1074" id="r1c2-t147">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r2c1-t147" headers="r1c1-t147">
<pre>
queue
</pre></td>
<td class="cellalignment1075" headers="r2c1-t147 r1c2-t147">The name of a valid queue in the database.</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" -->
<a id="CIAHBJJA"></a><a id="LNCPP20893"></a>
<hr />
<h2 class="refsect2">setTransformation()</h2>
<p>Specifies transformation applied before dequeuing the <code>Message</code>.</p>
<p class="subhead1"><a id="LNCPP20894"></a>Syntax</p>
<pre>
void setTransformation(
   string &amp;fName);
</pre>
<div class="inftblinformal">
<table class="cellalignment1076" title="parameters of setTransformation() method" summary="First column lists parameters; second column provides description of these parameters." dir="ltr">
<thead>
<tr class="cellalignment1067">
<th class="cellalignment1074" id="r1c1-t148">Parameter</th>
<th class="cellalignment1074" id="r1c2-t148">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r2c1-t148" headers="r1c1-t148">
<pre>
fName
</pre></td>
<td class="cellalignment1075" headers="r2c1-t148 r1c2-t148">SQL transformation function.</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" -->
<a id="CACEJJHI"></a><a id="LNCPP20895"></a>
<hr />
<h2 class="refsect2">setVisibility()</h2>
<p>Specifies if <code>Message</code> should be dequeued as part of the current transaction. Visibility parameter is ignored when in <code>DEQ_BROWSE</code> mode.</p>
<p class="subhead1"><a id="LNCPP20896"></a>Syntax</p>
<pre>
void setVisibility(
   Visibility option);
</pre>
<div class="inftblinformal">
<table class="cellalignment1076" title="parameters of setVisibility() method" summary="First column lists parameters; second column provides description of these parameters." dir="ltr">
<thead>
<tr class="cellalignment1067">
<th class="cellalignment1074" id="r1c1-t149">Parameter</th>
<th class="cellalignment1074" id="r1c2-t149">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r2c1-t149" headers="r1c1-t149">
<pre>
option
</pre></td>
<td class="cellalignment1075" headers="r2c1-t149 r1c2-t149">Visibility option being set, defined in <a href="#BBACHCJH">Table 13-14</a>.</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" -->
<a id="CACECHFB"></a><a id="LNCPP20897"></a>
<hr />
<h2 class="refsect2">setWaitTime()</h2>
<p>Specifies wait conditions if there are no <code>Message</code>s with matching criteria. The <code>wait</code> parameter is ignored if messages in the same group are being dequeued.</p>
<p class="subhead1"><a id="LNCPP20898"></a>Syntax</p>
<pre>
void setWaitTime(
   DequeWaitOption wait);
</pre>
<div class="inftblinformal">
<table class="cellalignment1076" title="parameters of setWaitTime() method" summary="First column lists parameters; second column provides description of these parameters." dir="ltr">
<thead>
<tr class="cellalignment1067">
<th class="cellalignment1074" id="r1c1-t150">Parameter</th>
<th class="cellalignment1074" id="r1c2-t150">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r2c1-t150" headers="r1c1-t150">
<pre>
wait
</pre></td>
<td class="cellalignment1075" headers="r2c1-t150 r1c2-t150">Waiting conditions. <code>DequeWaitOption</code> is defined in <a href="#BBACHCJH">Table 13-14</a>.</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" --></div>
<!-- class="refsect1" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment1066">
<tr>
<td class="cellalignment1075">
<table class="cellalignment1071">
<tr>
<td class="cellalignment1070"><a href="reference011.htm"><img width="24" height="24" src="../../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment1070"><a href="reference013.htm"><img width="24" height="24" src="../../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;1999, 2013,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment1078">
<table class="cellalignment1069">
<tr>
<td class="cellalignment1070"><a href="../../index.htm"><img width="24" height="24" src="../../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment1070"><a href="../../nav/portal_booklist.htm"><img width="24" height="24" src="../../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment1070"><a href="toc.htm"><img width="24" height="24" src="../../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment1070"><a href="index.htm"><img width="24" height="24" src="../../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment1070"><a href="../../nav/mindx.htm"><img width="24" height="24" src="../../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment1070"><a href="../../dcommon/html/feedback.htm"><img width="24" height="24" src="../../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>
</body>
</html>
