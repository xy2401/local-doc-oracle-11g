<!DOCTYPE html>
<html lang="en" >
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1">
<meta charset="utf-8">
<title>Date Class</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Version 5.1.2 Build 711" />
<meta name="dcterms.created" content="2013-02-06T9:20:51Z" />
<meta name="robots" content="all" />
<meta name="dcterms.title" content="C++ Call Interface Programmer's Guide," />
<meta name="dcterms.identifier" content="E10764-04" />
<meta name="dcterms.isVersionOf" content="LNCPP" />
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;1999, 2013,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved." />
<link rel="Start" href="../../index.htm" title="Home" type="text/html" />
<link rel="Copyright" href="../../dcommon/html/cpyr.htm" title="Copyright" type="text/html" />

<script type="application/javascript"  src="../../dcommon/js/headfoot.js"></script>
<script type="application/javascript"  src="../../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html" />
<link rel="Index" href="index.htm" title="Index" type="text/html" />
<link rel="Prev" href="reference012.htm" title="Previous" type="text/html" />
<link rel="Next" href="reference014.htm" title="Next" type="text/html" />
<link rel="alternate" href="../e10764.pdf" title="PDF version" type="application/pdf" />
<link rel="schema.dcterms" href="http://purl.org/dc/terms/" />
<link rel="stylesheet" href="../../dcommon/css/fusiondoc.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/header.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/footer.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/fonts.css">
<link rel="stylesheet" href="../../dcommon/css/foundation.css">
<link rel="stylesheet" href="../../dcommon/css/codemirror.css">
<link rel="stylesheet" type="text/css" title="Default" href="../../nav/css/html5.css">
<link rel="stylesheet" href="../../dcommon/css/respond-480-tablet.css">
<link rel="stylesheet" href="../../dcommon/css/respond-768-laptop.css">
<link rel="stylesheet" href="../../dcommon/css/respond-1140-deskop.css">
<script type="application/javascript" src="../../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">33/54</span> <!-- End Header --><a id="i1079044"></a><a id="LNCPP1009"></a>
<hr />
<div class="refsect1">
<h1 class="refsect1">Date C<a id="sthref750"></a><a id="sthref751"></a>l<a id="sthref752"></a>ass</h1>
<p>The Date class specifies the abstraction for a SQL <code>DATE</code> data item. The Date class also adds formatting and parsing operations to support the OCCI escape syntax for date values.</p>
<p>Since the SQL standard <code>DATE</code> is a subset of Oracle Date, this class can be used to support both.</p>
<p>Objects from the Date class can be used as standalone class objects in client side numeric computations and also used to fetch from, and set to, the database.</p>
<div class="example">
<p class="titleinexample"><a id="LNCPP20899"></a><a id="sthref753"></a>Example 13-5 <a id="sthref754"></a><a id="sthref755"></a>How to Get a Date from Database and Use it in Standalone Calculations</p>
<p>This example demonstrates a Date column value being retrieved from the database, a bind using a Date object, and a computation using a standalone Date object.</p>
<pre>
/* Create a connection */
Environment *env = Environment::createEnvironment(Environment::DEFAULT);
Connection *conn = Connection(user, passwd, db);

/* Create a statement and associate a DML statement to it */
string sqlStmt = "SELECT job-id, start_date from JOB_HISTORY
                            where end_date = :x";
Statement *stmt = conn-&gt;createStatement(sqlStmt);

/* Create a Date object and bind it to the statement */
Date edate(env, 2000, 9, 3, 23, 30, 30);
stmt-&gt;setDate(1, edate);
ResultSet *rset = stmt-&gt;executeQuery();

/* Fetch a date from the database */
while(rset-&gt;next())
{
   Date sd = rset-&gt;getDate(2);
   Date temp = sd;    /*assignment operator */
   /* Methods on Date */
   temp.getDate(year, month, day, hour, minute, second);
   temp.setMonths(2);
   IntervalDS inter = temp.daysBetween(sd);
   .
   .
}
</pre></div>
<!-- class="example" -->
<div class="tblformal">
<p class="titleintable"><a id="LNCPP20900"></a><a id="sthref756"></a><a id="sthref757"></a>Table 13-16 Summary of <a id="sthref758"></a><a id="sthref759"></a>Date Methods</p>
<table class="cellalignment1073" title="Summary of Date Methods " summary="First column lists methods; second column provides description of these methods." dir="ltr">
<thead>
<tr class="cellalignment1067">
<th class="cellalignment1074" id="r1c1-t151">Method</th>
<th class="cellalignment1074" id="r1c2-t151">Summary</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r2c1-t151" headers="r1c1-t151">
<p><a href="#i1148164">Date()</a></p>
</td>
<td class="cellalignment1075" headers="r2c1-t151 r1c2-t151">
<p><code>Date</code> class constructor.</p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r3c1-t151" headers="r1c1-t151">
<p><a href="#i1089837">addDays()</a></p>
</td>
<td class="cellalignment1075" headers="r3c1-t151 r1c2-t151">
<p>Returns a <code>Date</code> object with <span class="italic">n</span> days added.</p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r4c1-t151" headers="r1c1-t151">
<p><a href="#i1070308">addMonths()</a></p>
</td>
<td class="cellalignment1075" headers="r4c1-t151 r1c2-t151">
<p>Returns a <code>Date</code> object with <span class="italic">n</span> months added.</p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r5c1-t151" headers="r1c1-t151">
<p><a href="#i1070314">daysBetween()</a></p>
</td>
<td class="cellalignment1075" headers="r5c1-t151 r1c2-t151">
<p>Returns the number of days between the current <code>Date</code> object and the date specified.</p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r6c1-t151" headers="r1c1-t151">
<p><a href="#i1070324">fromBytes()</a></p>
</td>
<td class="cellalignment1075" headers="r6c1-t151 r1c2-t151">
<p>Convert an external <code>Bytes</code> representation of a <code>Date</code> object to a <code>Date</code> object.</p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r7c1-t151" headers="r1c1-t151">
<p><a href="#i1101581">fromText()</a></p>
</td>
<td class="cellalignment1075" headers="r7c1-t151 r1c2-t151">
<p>Convert the date from a given input string with format and NLS parameters specified.</p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r8c1-t151" headers="r1c1-t151">
<p><a href="#i1089838">getDate()</a>()</p>
</td>
<td class="cellalignment1075" headers="r8c1-t151 r1c2-t151">
<p>Returns the date and time components of the <code>Date</code> object.</p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r9c1-t151" headers="r1c1-t151">
<p><a href="#i1079713">getSystemDate()</a></p>
</td>
<td class="cellalignment1075" headers="r9c1-t151 r1c2-t151">
<p>Returns a <code>Date</code> object containing the system date.</p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r10c1-t151" headers="r1c1-t151">
<p><a href="#i1070377">isNull()</a></p>
</td>
<td class="cellalignment1075" headers="r10c1-t151 r1c2-t151">
<p>Returns <code>TRUE</code> if <code>Date</code> is <code>NULL</code><code>; otherwise returns</code> <code>false</code>.</p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r11c1-t151" headers="r1c1-t151">
<p><a href="#i1070383">lastDay()</a></p>
</td>
<td class="cellalignment1075" headers="r11c1-t151 r1c2-t151">
<p>Returns a <code>Date</code> that is the last day of the month.</p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r12c1-t151" headers="r1c1-t151">
<p><a href="#i1070389">nextDay()</a></p>
</td>
<td class="cellalignment1075" headers="r12c1-t151 r1c2-t151">
<p>Returns a <code>Date</code> that is the date of the next day of the week.</p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r13c1-t151" headers="r1c1-t151">
<p><a href="#i1070454">operator=()</a></p>
</td>
<td class="cellalignment1075" headers="r13c1-t151 r1c2-t151">
<p>Assigns the values of a date to another.</p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r14c1-t151" headers="r1c1-t151">
<p><a href="#i1070460">operator==()</a></p>
</td>
<td class="cellalignment1075" headers="r14c1-t151 r1c2-t151">
<p>Returns <code>TRUE</code> if <code>a</code> and <code>b</code> are the same, <code>false</code> otherwise.</p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r15c1-t151" headers="r1c1-t151">
<p><a href="#i1070466">operator!=()</a></p>
</td>
<td class="cellalignment1075" headers="r15c1-t151 r1c2-t151">
<p>Returns <code>TRUE</code> if <code>a</code> and <code>b</code> are unequal, <code>false</code> otherwise.</p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r16c1-t151" headers="r1c1-t151">
<p><a href="#i1079804">operator&gt;()</a></p>
</td>
<td class="cellalignment1075" headers="r16c1-t151 r1c2-t151">
<p>Returns <code>TRUE</code> if <code>a</code> is past <code>b</code>, <code>false</code> otherwise.</p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r17c1-t151" headers="r1c1-t151">
<p><a href="#i1091852">operator&gt;=()</a></p>
</td>
<td class="cellalignment1075" headers="r17c1-t151 r1c2-t151">
<p>Returns <code>TRUE</code> if <code>a</code> is past <code>b or equal to b</code>, <code>false</code> otherwise.</p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r18c1-t151" headers="r1c1-t151">
<p><a href="#i1070454">operator=()</a></p>
</td>
<td class="cellalignment1075" headers="r18c1-t151 r1c2-t151">
<p>Returns <code>TRUE</code> if <code>a</code> is before <code>b</code>, <code>false</code> otherwise.</p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r19c1-t151" headers="r1c1-t151">
<p><a href="#i1079804">operator&gt;()</a></p>
</td>
<td class="cellalignment1075" headers="r19c1-t151 r1c2-t151">
<p>Returns <code>TRUE</code> if <code>a</code> is before <code>b</code>, or equal to b, <code>false</code> otherwise.</p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r20c1-t151" headers="r1c1-t151">
<p><a href="#i1070488">setDate()</a></p>
</td>
<td class="cellalignment1075" headers="r20c1-t151 r1c2-t151">
<p>Sets the date from the date components input.</p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r21c1-t151" headers="r1c1-t151">
<p><a href="#i1070510">setNull()</a></p>
</td>
<td class="cellalignment1075" headers="r21c1-t151 r1c2-t151">
<p>Sets the object state to <code>NULL</code>.</p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r22c1-t151" headers="r1c1-t151">
<p><a href="#i1070516">toBytes()</a></p>
</td>
<td class="cellalignment1075" headers="r22c1-t151 r1c2-t151">
<p>Converts the <code>Date</code> object into an external <code>Bytes</code> representation.</p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r23c1-t151" headers="r1c1-t151">
<p><a href="#i1070522">toText()</a></p>
</td>
<td class="cellalignment1075" headers="r23c1-t151 r1c2-t151">
<p>Returns the <code>Date</code> object as a string.</p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r24c1-t151" headers="r1c1-t151">
<p><a href="#i1081235">toZone()</a></p>
</td>
<td class="cellalignment1075" headers="r24c1-t151 r1c2-t151">
<p>Returns a <code>Date</code> object converted from one time zone to another.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<a id="i1148164"></a><a id="LNCPP20901"></a>
<hr />
<h2 class="refsect2">Date()</h2>
<p><code>Date</code> class constructor.</p>
<div class="inftblinformal">
<table class="cellalignment1076" title="versions of Date() constructor" summary="First column lists versions of the constructor; second column provides description of these versions." dir="ltr">
<thead>
<tr class="cellalignment1067">
<th class="cellalignment1074" id="r1c1-t152">Syntax</th>
<th class="cellalignment1074" id="r1c2-t152">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r2c1-t152" headers="r1c1-t152">
<pre>
Date();
</pre></td>
<td class="cellalignment1075" headers="r2c1-t152 r1c2-t152">Creates a <code>NULL</code> <code>Date</code> object.</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r3c1-t152" headers="r1c1-t152">
<pre>
Date(
   const Date &amp;srcDate);
</pre></td>
<td class="cellalignment1075" headers="r3c1-t152 r1c2-t152">Creates a copy of a <code>Date</code> object.</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r4c1-t152" headers="r1c1-t152">
<pre>
Date(
   const Environment *envp,
   int year = 1,
   unsigned int month = 1,
   unsigned int day = 1,
   unsigned int hour = 0,
   unsigned int minute = 0,
   unsigned int seconds = 0);
</pre></td>
<td class="cellalignment1075" headers="r4c1-t152 r1c2-t152">Creates a <code>Date</code> object using integer parameters.</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" -->
<div class="inftblinformal">
<table class="cellalignment1076" title="prameters of Date() constructor" summary="First column lists parameters; second column provides description of these parameters." dir="ltr">
<thead>
<tr class="cellalignment1067">
<th class="cellalignment1074" id="r1c1-t153">Parameter</th>
<th class="cellalignment1074" id="r1c2-t153">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r2c1-t153" headers="r1c1-t153">year</td>
<td class="cellalignment1075" headers="r2c1-t153 r1c2-t153">-4712 to 9999, except 0</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r3c1-t153" headers="r1c1-t153">month</td>
<td class="cellalignment1075" headers="r3c1-t153 r1c2-t153">1 to 12</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r4c1-t153" headers="r1c1-t153">day</td>
<td class="cellalignment1075" headers="r4c1-t153 r1c2-t153">1 to 31</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r5c1-t153" headers="r1c1-t153">minutes</td>
<td class="cellalignment1075" headers="r5c1-t153 r1c2-t153">0 to 59</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r6c1-t153" headers="r1c1-t153">seconds</td>
<td class="cellalignment1075" headers="r6c1-t153 r1c2-t153">0 to 59</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" -->
<a id="i1089837"></a><a id="LNCPP20902"></a>
<hr />
<h2 class="refsect2">addDays()</h2>
<p>Adds a specified number of days to the <code>Date</code> object and returns the new date.</p>
<p class="subhead1"><a id="LNCPP20903"></a>Syntax</p>
<pre>
Date addDays(
   int val) const;
</pre>
<div class="inftblinformal">
<table class="cellalignment1076" title="parameters of addDays() method" summary="First column lists parameters; second column provides description of these parameters." dir="ltr">
<thead>
<tr class="cellalignment1067">
<th class="cellalignment1074" id="r1c1-t154">Parameter</th>
<th class="cellalignment1074" id="r1c2-t154">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r2c1-t154" headers="r1c1-t154">
<pre>
val
</pre></td>
<td class="cellalignment1075" headers="r2c1-t154 r1c2-t154">The number of days to be added to the current <code>Date</code> object.</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" -->
<a id="i1070308"></a><a id="LNCPP20904"></a>
<hr />
<h2 class="refsect2">addMonths()</h2>
<p>Adds a specified number of months to the <code>Date</code> object and returns the new date.</p>
<p class="subhead1"><a id="LNCPP20905"></a>Syntax</p>
<pre>
Date addMonths(
   int val) const;
</pre>
<div class="inftblinformal">
<table class="cellalignment1076" title="parameters of addMonths() method" summary="First column lists parameters; second column provides description of these parameters." dir="ltr">
<thead>
<tr class="cellalignment1067">
<th class="cellalignment1074" id="r1c1-t155">Parameter</th>
<th class="cellalignment1074" id="r1c2-t155">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r2c1-t155" headers="r1c1-t155">
<pre>
val
</pre></td>
<td class="cellalignment1075" headers="r2c1-t155 r1c2-t155">The number of months to be added to the current <code>Date</code> object.</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" -->
<a id="i1070314"></a><a id="LNCPP20906"></a>
<hr />
<h2 class="refsect2">daysBetween()</h2>
<p>Returns the number of days between the current <code>Date</code> object and <code>the date specified</code>.</p>
<p class="subhead1"><a id="LNCPP20907"></a>Syntax</p>
<pre>
IntervalDS daysBetween(
   const Date &amp;date) const;
</pre>
<div class="inftblinformal">
<table class="cellalignment1076" title="parameters of daysBetween() method" summary="First column lists parameters; second column provides description of these parameters." dir="ltr">
<thead>
<tr class="cellalignment1067">
<th class="cellalignment1074" id="r1c1-t156">Parameter</th>
<th class="cellalignment1074" id="r1c2-t156">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r2c1-t156" headers="r1c1-t156">
<pre>
date
</pre></td>
<td class="cellalignment1075" headers="r2c1-t156 r1c2-t156">The date to be used to compute the days between.</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" -->
<a id="i1070324"></a><a id="LNCPP20908"></a>
<hr />
<h2 class="refsect2">fromBytes()</h2>
<p>Converts a <code>Bytes</code> object to a <code>Date</code> object.</p>
<p class="subhead1"><a id="LNCPP20909"></a>Syntax</p>
<pre>
void fromBytes(
   const Bytes &amp;byteStream,
   const Environment *envp = NULL);
</pre>
<div class="inftblinformal">
<table class="cellalignment1076" title="parameters of fromBytes() method" summary="First column lists parameters; second column provides description of these parameters." dir="ltr">
<thead>
<tr class="cellalignment1067">
<th class="cellalignment1074" id="r1c1-t157">Parameter</th>
<th class="cellalignment1074" id="r1c2-t157">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r2c1-t157" headers="r1c1-t157">
<pre>
byteStream
</pre></td>
<td class="cellalignment1075" headers="r2c1-t157 r1c2-t157"><code>Date</code> in external format in the form of Bytes.</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r3c1-t157" headers="r1c1-t157">
<pre>
envp
</pre></td>
<td class="cellalignment1075" headers="r3c1-t157 r1c2-t157">The OCCI environment.</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" -->
<a id="i1101581"></a><a id="LNCPP20910"></a>
<hr />
<h2 class="refsect2">fromText()</h2>
<p>Sets <code>Date</code> object to value represented by a <code>string</code> or <code>UString</code>.</p>
<p>The value is interpreted based on the <code>fmt</code> and <code>nlsParam</code> parameters. In cases where <code>nlsParam</code> is not passed, the Globalization Support settings of the <code>envp</code> parameter are used.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink SQLRF06132" href="../../server.112/e41084/functions203.htm#SQLRF06132"><span class="italic">Oracle Database SQL Language Reference</span></a> for information on <a class="olink SQLRF06132" href="../../server.112/e41084/functions203.htm#SQLRF06132"><code>TO_DATE</code></a></div>
<div class="inftblinformal">
<table class="cellalignment1076" title="versions of fromTextt() method" summary="First column lists versions of the method; second column provides description of these versions." dir="ltr">
<thead>
<tr class="cellalignment1067">
<th class="cellalignment1074" id="r1c1-t159">Syntax</th>
<th class="cellalignment1074" id="r1c2-t159">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r2c1-t159" headers="r1c1-t159">
<pre>
void fromText(
   const string &amp;datestr,
   const string &amp;fmt = "",
   const string &amp;nlsParam = "",
   const Environment *envp = NULL);
</pre></td>
<td class="cellalignment1075" headers="r2c1-t159 r1c2-t159">Sets <code>Date</code> object to value represented by a <code>string</code>.</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r3c1-t159" headers="r1c1-t159">
<pre>
void fromText(
   const UString &amp;datestr,
   const UString &amp;fmt,
   const UString &amp;nlsParam,
   const Environment *envp = NULL);
</pre></td>
<td class="cellalignment1075" headers="r3c1-t159 r1c2-t159">Sets <code>Date</code> object to value represented by a <code>UString</code>; globalization enabled.</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" -->
<div class="inftblinformal">
<table class="cellalignment1076" title="parameters of fromText() method" summary="First column lists parameters; second column provides description of these parameters." dir="ltr">
<thead>
<tr class="cellalignment1067">
<th class="cellalignment1074" id="r1c1-t160">Parameter</th>
<th class="cellalignment1074" id="r1c2-t160">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r2c1-t160" headers="r1c1-t160">
<pre>
envp
</pre></td>
<td class="cellalignment1075" headers="r2c1-t160 r1c2-t160">The OCCI environment.</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r3c1-t160" headers="r1c1-t160">
<pre>
datestr
</pre></td>
<td class="cellalignment1075" headers="r3c1-t160 r1c2-t160">The date string to be converted to a <code>Date</code> object.</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r4c1-t160" headers="r1c1-t160">
<pre>
fmt
</pre></td>
<td class="cellalignment1075" headers="r4c1-t160 r1c2-t160">The format string; default is <code>DD-MON-YY</code>.</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r5c1-t160" headers="r1c1-t160">
<pre>
nlsParam
</pre></td>
<td class="cellalignment1075" headers="r5c1-t160 r1c2-t160">The NLS parameters string. If <code>nlsParam</code> is specified, this determines the NLS parameters to be used for the conversion. If <code>nlsParam</code> is not specified, the NLS parameters are picked up from <code>envp</code>.</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" -->
<a id="i1089838"></a><a id="LNCPP20911"></a>
<hr />
<h2 class="refsect2">getDate()</h2>
<p>Returns the date in the form of the date components year, month, day, hour, minute, seconds.</p>
<p class="subhead1"><a id="LNCPP20912"></a>Syntax</p>
<pre>
void getDate(
   int &amp;year,
   unsigned int &amp;month,
   unsigned int &amp;day,
   unsigned int &amp;hour,
   unsigned int &amp;min,
   unsigned int &amp;seconds) const;
</pre>
<div class="inftblinformal">
<table class="cellalignment1076" title="parameters of getDate() method" summary="First column lists parameters; second column provides description of these parameters." dir="ltr">
<thead>
<tr class="cellalignment1067">
<th class="cellalignment1074" id="r1c1-t161">Parameter</th>
<th class="cellalignment1074" id="r1c2-t161">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r2c1-t161" headers="r1c1-t161">
<pre>
year
</pre></td>
<td class="cellalignment1075" headers="r2c1-t161 r1c2-t161">The year component of the date.</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r3c1-t161" headers="r1c1-t161">
<pre>
month
</pre></td>
<td class="cellalignment1075" headers="r3c1-t161 r1c2-t161">The month component of the date.</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r4c1-t161" headers="r1c1-t161">
<pre>
day
</pre></td>
<td class="cellalignment1075" headers="r4c1-t161 r1c2-t161">The day component of the date.</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r5c1-t161" headers="r1c1-t161">
<pre>
hour
</pre></td>
<td class="cellalignment1075" headers="r5c1-t161 r1c2-t161">The hour component of the date.</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r6c1-t161" headers="r1c1-t161">
<pre>
min
</pre></td>
<td class="cellalignment1075" headers="r6c1-t161 r1c2-t161">The minutes component of the date.</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r7c1-t161" headers="r1c1-t161">
<pre>
seconds
</pre></td>
<td class="cellalignment1075" headers="r7c1-t161 r1c2-t161">The seconds component of the date.</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" -->
<a id="i1079713"></a><a id="LNCPP20913"></a>
<hr />
<h2 class="refsect2">getSystemDate()</h2>
<p>Returns the system date.</p>
<p class="subhead1"><a id="LNCPP20914"></a>Syntax</p>
<pre>
static Date getSystemDate(
   const Environment *envp);
</pre>
<div class="inftblinformal">
<table class="cellalignment1076" title="parameters of getSystemDate() method" summary="First column lists parameters; second column provides description of these parameters." dir="ltr">
<thead>
<tr class="cellalignment1067">
<th class="cellalignment1074" id="r1c1-t162">Parameter</th>
<th class="cellalignment1074" id="r1c2-t162">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r2c1-t162" headers="r1c1-t162">
<pre>
envp 
</pre></td>
<td class="cellalignment1075" headers="r2c1-t162 r1c2-t162">The environment in which the system date is returned.</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" -->
<a id="i1070377"></a><a id="LNCPP20915"></a>
<hr />
<h2 class="refsect2">isNull()</h2>
<p>Tests whether the <code>Date</code> is <code>NULL</code>. If the <code>Date</code> is <code>NULL</code>, <code>TRUE</code> is returned; otherwise, <code>FALSE</code> is returned.</p>
<p class="subhead1"><a id="LNCPP20916"></a>Syntax</p>
<pre>
bool isNull() const;
</pre>
<a id="i1070383"></a><a id="LNCPP20917"></a>
<hr />
<h2 class="refsect2">lastDay()</h2>
<p>Returns a date representing the last day of the current month.</p>
<p class="subhead1"><a id="LNCPP20918"></a>Syntax</p>
<pre>
Date lastDay() const;
</pre>
<a id="i1070389"></a><a id="LNCPP20919"></a>
<hr />
<h2 class="refsect2">nextDay()</h2>
<p>Returns a date representing the day after the day of the week specified.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink SQLRF06132" href="../../server.112/e41084/functions203.htm#SQLRF06132"><span class="italic">Oracle Database SQL Language Reference</span></a> for information on <a class="olink SQLRF06132" href="../../server.112/e41084/functions203.htm#SQLRF06132"><code>TO_DATE</code></a></div>
<div class="inftblinformal">
<table class="cellalignment1076" title="versions of nextDay() method" summary="First column lists versions of the method; second column provides descriptions of these versions." dir="ltr">
<thead>
<tr class="cellalignment1067">
<th class="cellalignment1074" id="r1c1-t164">Syntax</th>
<th class="cellalignment1074" id="r1c2-t164">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r2c1-t164" headers="r1c1-t164">
<pre>
Date nextDay(
   const string &amp;dow) const;
</pre></td>
<td class="cellalignment1075" headers="r2c1-t164 r1c2-t164">Returns a date representing the day after the day of the week specified.</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r3c1-t164" headers="r1c1-t164">
<pre>
Date nextDay(
   const UString &amp;dow) const;
</pre></td>
<td class="cellalignment1075" headers="r3c1-t164 r1c2-t164">Returns a date representing the day after the day of the week specified.; globalization enabled. The parameter should be in the character set associated with the environment from which the date was created.</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" -->
<div class="inftblinformal">
<table class="cellalignment1076" title="parameters of nextDay() method" summary="First column lists parameters; second column provides description of these parameters." dir="ltr">
<thead>
<tr class="cellalignment1067">
<th class="cellalignment1074" id="r1c1-t165">Parameter</th>
<th class="cellalignment1074" id="r1c2-t165">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r2c1-t165" headers="r1c1-t165">
<pre>
dow
</pre></td>
<td class="cellalignment1075" headers="r2c1-t165 r1c2-t165">A string representing the day of the week.</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" -->
<a id="i1070454"></a><a id="LNCPP20920"></a>
<hr />
<h2 class="refsect2">operator=()</h2>
<p>Assigns the date object on the right side of the equal (=) sign to the date object on the left side of the equal (=) sign.</p>
<p class="subhead1"><a id="LNCPP20921"></a>Syntax</p>
<pre>
Date&amp; operator=(
   const Date &amp;d);
</pre>
<div class="inftblinformal">
<table class="cellalignment1076" title="parameters of operator=() method" summary="First column lists parameters; second column provides description of these parameters." dir="ltr">
<thead>
<tr class="cellalignment1067">
<th class="cellalignment1074" id="r1c1-t166">Parameter</th>
<th class="cellalignment1074" id="r1c2-t166">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r2c1-t166" headers="r1c1-t166">
<pre>
date
</pre></td>
<td class="cellalignment1075" headers="r2c1-t166 r1c2-t166">The date object that is assigned.</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" -->
<a id="i1070460"></a><a id="LNCPP20922"></a>
<hr />
<h2 class="refsect2">operator==()</h2>
<p>Compares the dates specified. If the dates are equal, <code>TRUE</code> is returned; otherwise, <code>FALSE</code> is returned.</p>
<p class="subhead1"><a id="LNCPP20923"></a>Syntax</p>
<pre>
bool operator==(
   const Date &amp;first,
   const Date &amp;second);
</pre>
<div class="inftblinformal">
<table class="cellalignment1076" title="parameters of operator==() method" summary="First column lists parameters; second column provides description of these parameters." dir="ltr">
<thead>
<tr class="cellalignment1067">
<th class="cellalignment1074" id="r1c1-t167">Parameter</th>
<th class="cellalignment1074" id="r1c2-t167">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r2c1-t167" headers="r1c1-t167">
<pre>
first
</pre></td>
<td class="cellalignment1075" headers="r2c1-t167 r1c2-t167">The first date to be compared.</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r3c1-t167" headers="r1c1-t167">
<pre>
second
</pre></td>
<td class="cellalignment1075" headers="r3c1-t167 r1c2-t167">The second date to be compared.</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" -->
<a id="i1070466"></a><a id="LNCPP20924"></a>
<hr />
<h2 class="refsect2">operator!=()</h2>
<p>Compares the dates specified. If the dates are not equal then <code>TRUE</code> is returned; otherwise, <code>FALSE</code> is returned.</p>
<p class="subhead1"><a id="LNCPP20925"></a>Syntax</p>
<pre>
bool operator!=(
   const Date &amp;first,
   const Date &amp;second);
</pre>
<div class="inftblinformal">
<table class="cellalignment1076" title="parameters of operator!=() method" summary="First column lists parameters; second column provides description of these parameters." dir="ltr">
<thead>
<tr class="cellalignment1067">
<th class="cellalignment1074" id="r1c1-t168">Parameter</th>
<th class="cellalignment1074" id="r1c2-t168">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r2c1-t168" headers="r1c1-t168">
<pre>
first
</pre></td>
<td class="cellalignment1075" headers="r2c1-t168 r1c2-t168">The first date to be compared.</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r3c1-t168" headers="r1c1-t168">
<pre>
second
</pre></td>
<td class="cellalignment1075" headers="r3c1-t168 r1c2-t168">The second date to be compared.</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" -->
<a id="i1079804"></a><a id="LNCPP20926"></a>
<hr />
<h2 class="refsect2">operator&gt;()</h2>
<p>Compares the dates specified. If the first date is in the future relative to the second date then <code>TRUE</code> is returned; otherwise, <code>FALSE</code> is returned. If either date is <code>NULL</code> then <code>FALSE</code> is returned. If the dates are of different type, then <code>FALSE</code> is returned.</p>
<p class="subhead1"><a id="LNCPP20927"></a>Syntax</p>
<pre>
bool operator&gt;(
   const Date &amp;first,
   const Date &amp;second);
</pre>
<div class="inftblinformal">
<table class="cellalignment1076" title="parameters of operator&gt;() method" summary="First column lists parameters; second column provides description of these parameters." dir="ltr">
<thead>
<tr class="cellalignment1067">
<th class="cellalignment1074" id="r1c1-t169">Parameter</th>
<th class="cellalignment1074" id="r1c2-t169">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r2c1-t169" headers="r1c1-t169">
<pre>
first
</pre></td>
<td class="cellalignment1075" headers="r2c1-t169 r1c2-t169">The first date to be compared.</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r3c1-t169" headers="r1c1-t169">
<pre>
second
</pre></td>
<td class="cellalignment1075" headers="r3c1-t169 r1c2-t169">The second date to be compared.</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" -->
<a id="i1091852"></a><a id="LNCPP20928"></a>
<hr />
<h2 class="refsect2">operator&gt;=()</h2>
<p>Compares the dates specified. If the first date is in the future relative to the second date or the dates are equal then <code>TRUE</code> is returned; otherwise, <code>FALSE</code> is returned. If either date is <code>NULL</code> then <code>FALSE</code> is returned. If the dates are of a different type, then <code>FALSE</code> is returned.</p>
<p class="subhead1"><a id="LNCPP20929"></a>Syntax</p>
<pre>
bool operator&gt;=(
   const Date &amp;first,
   const Date &amp;second);
</pre>
<div class="inftblinformal">
<table class="cellalignment1076" title="parameters of operator&gt;=() method" summary="First column lists parameters; second column provides description of these parameters." dir="ltr">
<thead>
<tr class="cellalignment1067">
<th class="cellalignment1074" id="r1c1-t170">Parameter</th>
<th class="cellalignment1074" id="r1c2-t170">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r2c1-t170" headers="r1c1-t170">
<pre>
first
</pre></td>
<td class="cellalignment1075" headers="r2c1-t170 r1c2-t170">The first date to be compared.</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r3c1-t170" headers="r1c1-t170">
<pre>
second
</pre></td>
<td class="cellalignment1075" headers="r3c1-t170 r1c2-t170">The second date to be compared.</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" -->
<a id="i1091853"></a><a id="LNCPP20930"></a>
<hr />
<h2 class="refsect2">operator&lt;()</h2>
<p>Compares the dates specified. If the first date precedes the second date, then <code>TRUE</code> is returned; otherwise, <code>FALSE</code> is returned. If either date is <code>NULL</code> then <code>FALSE</code> is returned. If the dates are of a different type, then <code>FALSE</code> is returned.</p>
<p class="subhead1"><a id="LNCPP20931"></a>Syntax</p>
<pre>
bool operator&lt;(
   const Date &amp;first,
   const Date &amp;second);
</pre>
<div class="inftblinformal">
<table class="cellalignment1076" title="parameters of operator&lt;() method" summary="First column lists parameters; second column provides description of these parameters." dir="ltr">
<thead>
<tr class="cellalignment1067">
<th class="cellalignment1074" id="r1c1-t171">Parameter</th>
<th class="cellalignment1074" id="r1c2-t171">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r2c1-t171" headers="r1c1-t171">
<pre>
first
</pre></td>
<td class="cellalignment1075" headers="r2c1-t171 r1c2-t171">The first date to be compared.</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r3c1-t171" headers="r1c1-t171">
<pre>
second
</pre></td>
<td class="cellalignment1075" headers="r3c1-t171 r1c2-t171">The second date to be compared.</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" -->
<a id="i1091854"></a><a id="LNCPP20932"></a>
<hr />
<h2 class="refsect2">operator&lt;=()</h2>
<p>Compares the dates specified. If the first date precedes the second date or the dates are equal then <code>TRUE</code> is returned; otherwise, <code>FALSE</code> is returned. If either date is <code>NULL</code> then <code>FALSE</code> is returned. If the dates are of a different type, then <code>FALSE</code> is returned.</p>
<p class="subhead1"><a id="LNCPP20933"></a>Syntax</p>
<pre>
bool operator&lt;=(
   const Date &amp;first,
   const Date &amp;second);
</pre>
<div class="inftblinformal">
<table class="cellalignment1076" title="parameters of operator&lt;=() method" summary="First column lists parameters; second column provides description of these parameters." dir="ltr">
<thead>
<tr class="cellalignment1067">
<th class="cellalignment1074" id="r1c1-t172">Parameter</th>
<th class="cellalignment1074" id="r1c2-t172">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r2c1-t172" headers="r1c1-t172">
<pre>
first
</pre></td>
<td class="cellalignment1075" headers="r2c1-t172 r1c2-t172">The first date to be compared.</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r3c1-t172" headers="r1c1-t172">
<pre>
second
</pre></td>
<td class="cellalignment1075" headers="r3c1-t172 r1c2-t172">The second date to be compared.</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" -->
<a id="i1070488"></a><a id="LNCPP20934"></a>
<hr />
<h2 class="refsect2">setDate()</h2>
<p>Sets the date to the values specified.</p>
<p class="subhead1"><a id="LNCPP20935"></a>Syntax</p>
<pre>
void setDate(
   int year = 1,
   unsigned int month = 1,
   unsigned int day = 1,
   unsigned int hour = 0,
   unsigned int minute = 0,
   unsigned int seconds = 0);
</pre>
<div class="inftblinformal">
<table class="cellalignment1076" title="parameters of setDate() method" summary="First column lists parameters; second column provides description of these parameters." dir="ltr">
<thead>
<tr class="cellalignment1067">
<th class="cellalignment1074" id="r1c1-t173">Parameter</th>
<th class="cellalignment1074" id="r1c2-t173">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r2c1-t173" headers="r1c1-t173">
<pre>
year
</pre></td>
<td class="cellalignment1075" headers="r2c1-t173 r1c2-t173">The argument specifying the year value. Valid values are <code>-4713</code> through <code>9999</code>.</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r3c1-t173" headers="r1c1-t173">
<pre>
month
</pre></td>
<td class="cellalignment1075" headers="r3c1-t173 r1c2-t173">The argument specifying the month value. Valid values are <code>1</code> through <code>12</code>.</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r4c1-t173" headers="r1c1-t173">
<pre>
day
</pre></td>
<td class="cellalignment1075" headers="r4c1-t173 r1c2-t173">The argument specifying the day value. Valid values are 1 through 31.</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r5c1-t173" headers="r1c1-t173">
<pre>
hour
</pre></td>
<td class="cellalignment1075" headers="r5c1-t173 r1c2-t173">The argument specifying the hour value. Valid values are 0 through 23.</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r6c1-t173" headers="r1c1-t173">
<pre>
min
</pre></td>
<td class="cellalignment1075" headers="r6c1-t173 r1c2-t173">The argument specifying the minutes value. Valid values are 0 through 59.</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r7c1-t173" headers="r1c1-t173">
<pre>
seconds
</pre></td>
<td class="cellalignment1075" headers="r7c1-t173 r1c2-t173">The argument specifying the seconds value. Valid values are 0 through 59.</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" -->
<a id="i1070510"></a><a id="LNCPP20936"></a>
<hr />
<h2 class="refsect2">setNull()</h2>
<p>Sets the <code>Date</code> to atomically <code>NULL</code>.</p>
<p class="subhead1"><a id="LNCPP20937"></a>Syntax</p>
<pre>
void setNull();
</pre>
<a id="i1070516"></a><a id="LNCPP20938"></a>
<hr />
<h2 class="refsect2">toBytes()</h2>
<p>Returns the date in <code>Bytes</code> representation.</p>
<p class="subhead1"><a id="LNCPP20939"></a>Syntax</p>
<pre>
Bytes toBytes() const;
</pre>
<a id="i1070522"></a><a id="LNCPP20940"></a>
<hr />
<h2 class="refsect2">toText()</h2>
<p>Returns a <code>string</code> or <code>UString</code> with the value of this date formatted using <code>fmt</code> and <code>nlsParam</code>.</p>
<p>The value is interpreted based on the <code>fmt</code> and <code>nlsParam</code> parameters. In cases where <code>nlsParam</code> is not passed, the Globalization Support settings of the <code>envp</code> parameter are used.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink SQLRF06132" href="../../server.112/e41084/functions203.htm#SQLRF06132"><span class="italic">Oracle Database SQL Language Reference</span></a> for information on <a class="olink SQLRF06132" href="../../server.112/e41084/functions203.htm#SQLRF06132"><code>TO_DATE</code></a></div>
<div class="inftblinformal">
<table class="cellalignment1076" title="versions of toText() method" summary="First column lists versions of the method; second column provides descriptions of these versions." dir="ltr">
<thead>
<tr class="cellalignment1067">
<th class="cellalignment1074" id="r1c1-t175">Syntax</th>
<th class="cellalignment1074" id="r1c2-t175">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r2c1-t175" headers="r1c1-t175">
<pre>
string toText(
   const string &amp;fmt = "",
   const string &amp;nlsParam = "") const;
</pre></td>
<td class="cellalignment1075" headers="r2c1-t175 r1c2-t175">Returns a <code>string</code> with the value of this date formatted using <code>fmt</code> and <code>nlsParam</code>.</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r3c1-t175" headers="r1c1-t175">
<pre>
UString toText(
   const UString &amp;fmt,
   const UString &amp;nlsParam) const;
</pre></td>
<td class="cellalignment1075" headers="r3c1-t175 r1c2-t175">Returns a <code>UString</code> with the value of this date formatted using <code>fmt</code> and <code>nlsParam</code>.</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" -->
<div class="inftblinformal">
<table class="cellalignment1076" title="parameters of toText() method" summary="First column lists parameters; second column provides description of these parameters." dir="ltr">
<thead>
<tr class="cellalignment1067">
<th class="cellalignment1074" id="r1c1-t176">Parameter</th>
<th class="cellalignment1074" id="r1c2-t176">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r2c1-t176" headers="r1c1-t176">
<pre>
fmt
</pre></td>
<td class="cellalignment1075" headers="r2c1-t176 r1c2-t176">The format string; default is <code>DD-MON-YY</code>.</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r3c1-t176" headers="r1c1-t176">
<pre>
nlsParam
</pre></td>
<td class="cellalignment1075" headers="r3c1-t176 r1c2-t176">The NLS parameters string. If <code>nlsParam</code> is specified, this determines the NLS parameters to be used for the conversion. If <code>nlsParam</code> is not specified, the NLS parameters are picked up from <code>envp</code>.</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" -->
<a id="i1081235"></a><a id="LNCPP20941"></a>
<hr />
<h2 class="refsect2">toZone()</h2>
<p>Returns <code>Date</code> value converted from one time zone to another.</p>
<p class="subhead1"><a id="LNCPP20942"></a>Syntax</p>
<pre>
Date toZone(
   const string &amp;zone1,
   const string &amp;zone2) const;
</pre>
<div class="inftblinformal">
<table class="cellalignment1076" title="parameters of toZone() method" summary="First column lists parameters; second column provides description of these parameters." dir="ltr">
<thead>
<tr class="cellalignment1067">
<th class="cellalignment1074" id="r1c1-t177">Parameter</th>
<th class="cellalignment1074" id="r1c2-t177">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r2c1-t177" headers="r1c1-t177">
<pre>
zone1
</pre></td>
<td class="cellalignment1075" headers="r2c1-t177 r1c2-t177">A string representing the time zone to be converted from.</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r3c1-t177" headers="r1c1-t177">
<pre>
zone2
</pre></td>
<td class="cellalignment1075" headers="r3c1-t177 r1c2-t177">A string representing the time zone to be converted to.</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" -->
<p>Valid time zone codes are:</p>
<div class="inftblinformal">
<table class="cellalignment1076" title="valid time zone codes" summary="First column lists valid zone codes; second column provides description of these zone codes." dir="ltr">
<thead>
<tr class="cellalignment1067">
<th class="cellalignment1074" id="r1c1-t178"><span class="bold">Zone code</span></th>
<th class="cellalignment1074" id="r1c2-t178">Value</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r2c1-t178" headers="r1c1-t178"><code>AST, ADT</code></td>
<td class="cellalignment1075" headers="r2c1-t178 r1c2-t178">Atlantic Standard or Daylight Time</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r3c1-t178" headers="r1c1-t178"><code>BST, BDT</code></td>
<td class="cellalignment1075" headers="r3c1-t178 r1c2-t178">Bering Standard or Daylight Time</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r4c1-t178" headers="r1c1-t178"><code>CST, CDT</code></td>
<td class="cellalignment1075" headers="r4c1-t178 r1c2-t178">Central Standard or Daylight Time</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r5c1-t178" headers="r1c1-t178"><code>EST, EDT</code></td>
<td class="cellalignment1075" headers="r5c1-t178 r1c2-t178">Eastern Standard or Daylight Time</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r6c1-t178" headers="r1c1-t178"><code>GMT</code></td>
<td class="cellalignment1075" headers="r6c1-t178 r1c2-t178">Greenwich Mean Time</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r7c1-t178" headers="r1c1-t178"><code>HST, HDT</code></td>
<td class="cellalignment1075" headers="r7c1-t178 r1c2-t178">Alaska-Hawaii Standard Time or Daylight Time</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r8c1-t178" headers="r1c1-t178"><code>MST, MDT</code></td>
<td class="cellalignment1075" headers="r8c1-t178 r1c2-t178">Mountain Standard or Daylight Time</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r9c1-t178" headers="r1c1-t178"><code>NST</code></td>
<td class="cellalignment1075" headers="r9c1-t178 r1c2-t178">Newfoundland Standard Time</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r10c1-t178" headers="r1c1-t178"><code>PST, PDT</code></td>
<td class="cellalignment1075" headers="r10c1-t178 r1c2-t178">Pacific Standard or Daylight Time</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r11c1-t178" headers="r1c1-t178"><code>YST, YDT</code></td>
<td class="cellalignment1075" headers="r11c1-t178 r1c2-t178">Yukon Standard or Daylight Time</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" --></div>
<!-- class="refsect1" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment1066">
<tr>
<td class="cellalignment1075">
<table class="cellalignment1071">
<tr>
<td class="cellalignment1070"><a href="reference012.htm"><img width="24" height="24" src="../../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment1070"><a href="reference014.htm"><img width="24" height="24" src="../../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;1999, 2013,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment1078">
<table class="cellalignment1069">
<tr>
<td class="cellalignment1070"><a href="../../index.htm"><img width="24" height="24" src="../../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment1070"><a href="../../nav/portal_booklist.htm"><img width="24" height="24" src="../../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment1070"><a href="toc.htm"><img width="24" height="24" src="../../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment1070"><a href="index.htm"><img width="24" height="24" src="../../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment1070"><a href="../../nav/mindx.htm"><img width="24" height="24" src="../../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment1070"><a href="../../dcommon/html/feedback.htm"><img width="24" height="24" src="../../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>
</body>
</html>
