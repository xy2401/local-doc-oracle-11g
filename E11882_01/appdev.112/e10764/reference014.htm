<!DOCTYPE html>
<html lang="en" >
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1">
<meta charset="utf-8">
<title>Environment Class</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Version 5.1.2 Build 711" />
<meta name="dcterms.created" content="2013-02-06T9:20:51Z" />
<meta name="robots" content="all" />
<meta name="dcterms.title" content="C++ Call Interface Programmer's Guide," />
<meta name="dcterms.identifier" content="E10764-04" />
<meta name="dcterms.isVersionOf" content="LNCPP" />
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;1999, 2013,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved." />
<link rel="Start" href="../../index.htm" title="Home" type="text/html" />
<link rel="Copyright" href="../../dcommon/html/cpyr.htm" title="Copyright" type="text/html" />

<script type="application/javascript"  src="../../dcommon/js/headfoot.js"></script>
<script type="application/javascript"  src="../../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html" />
<link rel="Index" href="index.htm" title="Index" type="text/html" />
<link rel="Prev" href="reference013.htm" title="Previous" type="text/html" />
<link rel="Next" href="reference015.htm" title="Next" type="text/html" />
<link rel="alternate" href="../e10764.pdf" title="PDF version" type="application/pdf" />
<link rel="schema.dcterms" href="http://purl.org/dc/terms/" />
<link rel="stylesheet" href="../../dcommon/css/fusiondoc.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/header.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/footer.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/fonts.css">
<link rel="stylesheet" href="../../dcommon/css/foundation.css">
<link rel="stylesheet" href="../../dcommon/css/codemirror.css">
<link rel="stylesheet" type="text/css" title="Default" href="../../nav/css/html5.css">
<link rel="stylesheet" href="../../dcommon/css/respond-480-tablet.css">
<link rel="stylesheet" href="../../dcommon/css/respond-768-laptop.css">
<link rel="stylesheet" href="../../dcommon/css/respond-1140-deskop.css">
<script type="application/javascript" src="../../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">34/54</span> <!-- End Header --><a id="i1119099"></a><a id="LNCPP1010"></a>
<hr />
<div class="refsect1">
<h1 class="refsect1"><a id="sthref760"></a><a id="sthref761"></a><a id="sthref762"></a>Environment Class</h1>
<p>The Environment class provides an OCCI environment to manage memory and other resources for OCCI objects.</p>
<p>The application can have multiple OCCI environments. Each environment would have its own heap and thread-safety mutexes.</p>
<div class="tblformal">
<p class="titleintable"><a id="LNCPP20943"></a><a id="sthref763"></a><a id="BBAFGGHB"></a>Table 13-17 Enumerated Values Used by Environment Class</p>
<table class="cellalignment1073" title="Enumerated Values Used by Environment Class" summary="First column lists the attribute used by the class, the second column describes the options available to each attribute" dir="ltr">
<thead>
<tr class="cellalignment1067">
<th class="cellalignment1074" id="r1c1-t179">Attribute</th>
<th class="cellalignment1074" id="r1c2-t179">Options</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r2c1-t179" headers="r1c1-t179">
<pre>
Mode
</pre></td>
<td class="cellalignment1075" headers="r2c1-t179 r1c2-t179">
<ul>
<li>
<p><code>DEFAULT</code> is used for creating an Environment object; it has no thread safety or object support.</p>
</li>
<li>
<p><code>OBJECT</code> is for creating an Environment object; it uses object features.</p>
</li>
<li>
<p><code>SHARED</code> is for creating an Environment object.</p>
</li>
<li>
<p><code>NO_USERCALLBACKS</code> is for creating an Environment object; it does not support user callbacks.</p>
</li>
<li>
<p><code>THREADED_MUTEXED</code> is a thread safe mode for creating an Environment object, mutexed internally by OCCI.</p>
</li>
<li>
<p><code>THREADED_UNMUTEXED</code> is a thread safe mode for creating an Environment object; the client is responsible for mutexing.</p>
</li>
<li>
<p><code>EVENTS</code> supports registration for event notification used in Oracle Streams Advanced Queuing.</p>
</li>
<li>
<p><code>USE_LDAP</code> supports registration with LDAP.</p>
</li>
</ul>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<div class="tblformal">
<p class="titleintable"><a id="LNCPP20944"></a><a id="sthref764"></a><a id="sthref765"></a>Table 13-18 Summary of <a id="sthref766"></a><a id="sthref767"></a>Environment Methods</p>
<table class="cellalignment1073" title="Summary of Environment Methods " summary="First column lists methods; second column provides description of these methods." dir="ltr">
<thead>
<tr class="cellalignment1067">
<th class="cellalignment1074" id="r1c1-t180">Method</th>
<th class="cellalignment1074" id="r1c2-t180">Summary</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r2c1-t180" headers="r1c1-t180">
<p><a href="#CHEEGFAI">createConnection()</a></p>
</td>
<td class="cellalignment1075" headers="r2c1-t180 r1c2-t180">
<p>Establishes a connection to the specified database.</p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r3c1-t180" headers="r1c1-t180">
<p><a href="#i1090287">createConnectionPool()</a></p>
</td>
<td class="cellalignment1075" headers="r3c1-t180 r1c2-t180">
<p>Creates a connection pool.</p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r4c1-t180" headers="r1c1-t180">
<p><a href="#i1120739">createEnvironment()</a></p>
</td>
<td class="cellalignment1075" headers="r4c1-t180 r1c2-t180">
<p>Creates an <code>Environment</code> object.</p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r5c1-t180" headers="r1c1-t180">
<p><a href="#CHECBAHJ">createStatelessConnectionPool()</a></p>
</td>
<td class="cellalignment1075" headers="r5c1-t180 r1c2-t180">
<p>Creates a stateless connection pool.</p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r6c1-t180" headers="r1c1-t180">
<p><a href="#CIAHDHFB">enableSubscription()</a></p>
</td>
<td class="cellalignment1075" headers="r6c1-t180 r1c2-t180">
<p>Enables subscription notification</p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r7c1-t180" headers="r1c1-t180">
<p><a href="#CIAFIHHC">disableSubscription()</a></p>
</td>
<td class="cellalignment1075" headers="r7c1-t180 r1c2-t180">
<p>Disables subscription notification</p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r8c1-t180" headers="r1c1-t180">
<p><a href="#i1131253">getCacheMaxSize()</a></p>
</td>
<td class="cellalignment1075" headers="r8c1-t180 r1c2-t180">
<p>Retrieves the Cache Max heap size.</p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r9c1-t180" headers="r1c1-t180">
<p><a href="#i1131266">getCacheOptSize()</a></p>
</td>
<td class="cellalignment1075" headers="r9c1-t180 r1c2-t180">
<p>Retrieves the cache optimal heap size.</p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r10c1-t180" headers="r1c1-t180">
<p><a href="#CIADFBJJ">getCacheSortedFlush()</a></p>
</td>
<td class="cellalignment1075" headers="r10c1-t180 r1c2-t180">
<p>Retrieves the setting of the cache sorting flag.</p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r11c1-t180" headers="r1c1-t180">
<p><a href="reference010.htm#BBAJAFGC">getClientVersion()</a></p>
</td>
<td class="cellalignment1075" headers="r11c1-t180 r1c2-t180">
<p>Returns the version of the client library.</p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r12c1-t180" headers="r1c1-t180">
<p><a href="#i1131122">getCurrentHeapSize()</a></p>
</td>
<td class="cellalignment1075" headers="r12c1-t180 r1c2-t180">
<p>Returns the current amount of memory allocated to all objects in the current environment.</p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r13c1-t180" headers="r1c1-t180">
<p><a href="#CIAHDAGA">getLDAPAdminContext()</a></p>
</td>
<td class="cellalignment1075" headers="r13c1-t180 r1c2-t180">
<p>Returns the administrative context when using LDAP open notification registration.</p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r14c1-t180" headers="r1c1-t180">
<p><a href="#CIAGBEJA">getLDAPAuthentication()</a></p>
</td>
<td class="cellalignment1075" headers="r14c1-t180 r1c2-t180">
<p>Returns the authentication mode when using LDAP open notification registration.</p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r15c1-t180" headers="r1c1-t180">
<p><a href="#CIADBBHJ">getLDAPHost()</a></p>
</td>
<td class="cellalignment1075" headers="r15c1-t180 r1c2-t180">
<p>Returns the host on which the LDAP server runs.</p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r16c1-t180" headers="r1c1-t180">
<p><a href="#CIAHAAIG">getLDAPPort()</a></p>
</td>
<td class="cellalignment1075" headers="r16c1-t180 r1c2-t180">
<p>Returns the port on which the LDAP server is listening.</p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r17c1-t180" headers="r1c1-t180">
<p><a href="#i1090289">getMap()</a>()</p>
</td>
<td class="cellalignment1075" headers="r17c1-t180 r1c2-t180">
<p>Returns the Map for the current environment.</p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r18c1-t180" headers="r1c1-t180">
<p><a href="#i1090290">getOCIEnvironment()</a></p>
</td>
<td class="cellalignment1075" headers="r18c1-t180 r1c2-t180">
<p>Returns the OCI environment associated with the current environment.</p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r19c1-t180" headers="r1c1-t180">
<p><a href="#CHECHFHF">getXAConnection()</a></p>
</td>
<td class="cellalignment1075" headers="r19c1-t180 r1c2-t180">
<p>Creates an XA connection to a database.</p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r20c1-t180" headers="r1c1-t180">
<p><a href="#CHEIJIHA">getXAEnvironment()</a></p>
</td>
<td class="cellalignment1075" headers="r20c1-t180 r1c2-t180">
<p>Creates an XA <code>Environment</code> object.</p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r21c1-t180" headers="r1c1-t180">
<p><a href="#CHEICCEF">releaseXAConnection()</a></p>
</td>
<td class="cellalignment1075" headers="r21c1-t180 r1c2-t180">
<p>Releases all resources allocated by a <a href="#CHECHFHF">getXAConnection()</a> call.</p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r22c1-t180" headers="r1c1-t180">
<p><a href="#i1089984">releaseXAEnvironment()</a></p>
</td>
<td class="cellalignment1075" headers="r22c1-t180 r1c2-t180">
<p>Releases all resources allocated by a <a href="#CHEIJIHA">getXAEnvironment()</a> call.</p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r23c1-t180" headers="r1c1-t180">
<p><a href="#i1131289">setCacheMaxSize()</a></p>
</td>
<td class="cellalignment1075" headers="r23c1-t180 r1c2-t180">
<p>Specifies the maximum size for the client-side object cache as a percentage of the optimal size.</p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r24c1-t180" headers="r1c1-t180">
<p><a href="#i1131311">setCacheOptSize()</a></p>
</td>
<td class="cellalignment1075" headers="r24c1-t180 r1c2-t180">
<p>Specifies the optimal size for the client-side object cache in bytes.</p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r25c1-t180" headers="r1c1-t180">
<p><a href="#CIAFACJG">setCacheSortedFlush()</a></p>
</td>
<td class="cellalignment1075" headers="r25c1-t180 r1c2-t180">
<p>Specifies whether to sort cache in table order before flushing.</p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r26c1-t180" headers="r1c1-t180">
<p><a href="#CIAGHDFG">setLDAPAdminContext()</a></p>
</td>
<td class="cellalignment1075" headers="r26c1-t180 r1c2-t180">
<p>Specifies the administrative context for the LDAP client.</p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r27c1-t180" headers="r1c1-t180">
<p><a href="#CIAJCGAC">setLDAPAuthentication()</a></p>
</td>
<td class="cellalignment1075" headers="r27c1-t180 r1c2-t180">
<p>Specifies the LDAP authentication mode.</p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r28c1-t180" headers="r1c1-t180">
<p><a href="#CIABIADF">setLDAPHostAndPort()</a></p>
</td>
<td class="cellalignment1075" headers="r28c1-t180 r1c2-t180">
<p>Specifies the LDAP server host and port.</p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r29c1-t180" headers="r1c1-t180">
<p><a href="#CIAHAAGE">setLDAPLoginNameAndPassword()</a></p>
</td>
<td class="cellalignment1075" headers="r29c1-t180 r1c2-t180">
<p>Specifies the login name and password when connecting to an LDAP server.</p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r30c1-t180" headers="r1c1-t180">
<p><a href="#i1079845">terminateConnection()</a></p>
</td>
<td class="cellalignment1075" headers="r30c1-t180 r1c2-t180">
<p>Closes the connection pool and free all related resources.</p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r31c1-t180" headers="r1c1-t180">
<p><a href="#i1090291">terminateConnectionPool()</a></p>
</td>
<td class="cellalignment1075" headers="r31c1-t180 r1c2-t180">
<p>Closes the connection pool and free all related resources.</p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r32c1-t180" headers="r1c1-t180">
<p><a href="#i1079857">terminateEnvironment()</a></p>
</td>
<td class="cellalignment1075" headers="r32c1-t180 r1c2-t180">
<p>Destroys the environment.</p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r33c1-t180" headers="r1c1-t180">
<p><a href="#CHEDDEAJ">terminateStatelessConnectionPool()</a></p>
</td>
<td class="cellalignment1075" headers="r33c1-t180 r1c2-t180">
<p>Closes the stateless connection pool and free all related resources.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<a id="CHEEGFAI"></a><a id="LNCPP20945"></a>
<hr />
<h2 class="refsect2">createConnection()</h2>
<p>This method establishes a connection to the database specified.</p>
<div class="inftblinformal">
<table class="cellalignment1076" title="versions of createConnection() method" summary="First column lists versions of the method; second column provides descriptions of these versions." dir="ltr">
<thead>
<tr class="cellalignment1067">
<th class="cellalignment1074" id="r1c1-t181">Syntax</th>
<th class="cellalignment1074" id="r1c2-t181">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r2c1-t181" headers="r1c1-t181">
<pre>
Connection * createConnection(
   const string &amp;userName,
   const string &amp;password,
   const string &amp;connectString="")=0;
</pre></td>
<td class="cellalignment1075" headers="r2c1-t181 r1c2-t181">Creates a default connection; if the <code>userName</code> and <code>password</code> are <code>NULL</code>, the connection may be authenticated externally.</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r3c1-t181" headers="r1c1-t181">
<pre>
Connection * createConnection(
   const UString &amp;userName,
   const UString &amp;password,
   const UString &amp;connectString)=0;
</pre></td>
<td class="cellalignment1075" headers="r3c1-t181 r1c2-t181">Creates a connection (Unicode support). The client <code>Environment</code> should be initialized in <code>OCCIUTIF16</code> mode.</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r4c1-t181" headers="r1c1-t181">
<pre>
Connection * createConnection(
   const string &amp;userName,
   const string &amp;password,
   const string &amp;connectString,
   const string &amp;connectionClass,
   const Connection::Purity &amp;purity)=0;
</pre></td>
<td class="cellalignment1075" headers="r4c1-t181 r1c2-t181">Creates a connection for database resident connection pooling.</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r5c1-t181" headers="r1c1-t181">
<pre>
Connection * createConnection(
   const UString &amp;userName,
   const UString &amp;password,
   const UString &amp;connectString,
   const UString &amp;connectionClass
   const Connection::Purity &amp;purity)=0;
</pre></td>
<td class="cellalignment1075" headers="r5c1-t181 r1c2-t181">Creates a connection for database resident connection pooling (Unicode support). The client <code>Environment</code> should be initialized in <code>OCCIUTIF16</code> mode.</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" -->
<div class="inftblinformal">
<table class="cellalignment1076" title="parameters of createConnection() method" summary="First column lists parameters; second column provides description of these parameters." dir="ltr">
<thead>
<tr class="cellalignment1067">
<th class="cellalignment1074" id="r1c1-t182">Parameter</th>
<th class="cellalignment1074" id="r1c2-t182">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r2c1-t182" headers="r1c1-t182">
<pre>
userName
</pre></td>
<td class="cellalignment1075" headers="r2c1-t182 r1c2-t182">The name of the user with which to connect.</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r3c1-t182" headers="r1c1-t182">
<pre>
password
</pre></td>
<td class="cellalignment1075" headers="r3c1-t182 r1c2-t182">The password of the user.</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r4c1-t182" headers="r1c1-t182">
<pre>
connectString
</pre></td>
<td class="cellalignment1075" headers="r4c1-t182 r1c2-t182">The database to which the connection is made.</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r5c1-t182" headers="r1c1-t182">
<pre>
purity
</pre></td>
<td class="cellalignment1075" headers="r5c1-t182 r1c2-t182">The purity of the connection used for database resident connection pooling; either <code>SELF</code> or <code>NEW</code>.</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r6c1-t182" headers="r1c1-t182">
<pre>
connectionClass
</pre></td>
<td class="cellalignment1075" headers="r6c1-t182 r1c2-t182">The connection class used for database resident connection pooling.</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" -->
<a id="i1090287"></a><a id="LNCPP20946"></a>
<hr />
<h2 class="refsect2">createConnectionPool()</h2>
<p>Creates a connection pool based on the parameters specified.</p>
<div class="inftblinformal">
<table class="cellalignment1076" title="versions of createConnectionPool() method" summary="First column lists versions of the method; second column provides descriptions of these versions." dir="ltr">
<thead>
<tr class="cellalignment1067">
<th class="cellalignment1074" id="r1c1-t183">Syntax</th>
<th class="cellalignment1074" id="r1c2-t183">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r2c1-t183" headers="r1c1-t183">
<pre>
ConnectionPool* createConnectionPool(
   const string &amp;poolUserName,
   const string &amp;poolPassword,
   const string &amp;connectString = "",
   unsigned int minConn = 0,
   unsigned int maxConn = 1,
   unsigned int incrConn = 1)=0;
</pre></td>
<td class="cellalignment1075" headers="r2c1-t183 r1c2-t183">Creates a default connection pool.</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r3c1-t183" headers="r1c1-t183">
<pre>
ConnectionPool* createConnectionPool(
   const UString &amp;poolUserName,
   const UString &amp;poolPassword,
   const UString &amp;connectString,
   unsigned int minConn = 0,
   unsigned int maxConn = 1,
   unsigned int incrConn = 1)=0;
</pre></td>
<td class="cellalignment1075" headers="r3c1-t183 r1c2-t183">Creates a connection pool (Unicode support). The client <code>Environment</code> should be initialized in <code>OCCIUTIF16</code> mode.</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" -->
<div class="inftblinformal">
<table class="cellalignment1076" title="parameters of createConnectionPool() method" summary="First column lists parameters; second column provides description of these parameters." dir="ltr">
<thead>
<tr class="cellalignment1067">
<th class="cellalignment1074" id="r1c1-t184">Parameter</th>
<th class="cellalignment1074" id="r1c2-t184">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r2c1-t184" headers="r1c1-t184">
<pre>
poolUserName
</pre></td>
<td class="cellalignment1075" headers="r2c1-t184 r1c2-t184">The pool user name.</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r3c1-t184" headers="r1c1-t184">
<pre>
poolPassword
</pre></td>
<td class="cellalignment1075" headers="r3c1-t184 r1c2-t184">The pool password.</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r4c1-t184" headers="r1c1-t184">
<pre>
connectString
</pre></td>
<td class="cellalignment1075" headers="r4c1-t184 r1c2-t184">The connection string for the server</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r5c1-t184" headers="r1c1-t184">
<pre>
minConn
</pre></td>
<td class="cellalignment1075" headers="r5c1-t184 r1c2-t184">The minimum number of connections in the pool. The minimum number of connections are opened by this method. Additional connections are opened only when necessary. Generally, <code>minConn</code> should be set to the number of concurrent statements the application is expected to run.</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r6c1-t184" headers="r1c1-t184">
<pre>
maxConn
</pre></td>
<td class="cellalignment1075" headers="r6c1-t184 r1c2-t184">The maximum number of connections in the pool. Valid values are 1 and greater.</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r7c1-t184" headers="r1c1-t184">
<pre>
incrConn
</pre></td>
<td class="cellalignment1075" headers="r7c1-t184 r1c2-t184">The increment by which to increase the number of connections to be opened if the current number of connections is less than <code>maxConn</code>. Valid values are 1 and greater.</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" -->
<a id="i1120739"></a><a id="LNCPP20947"></a>
<hr />
<h2 class="refsect2">createEnvironment()</h2>
<p>Creates an <code>Environment</code> object. It is created with the specified memory management functions specified in the <code>setMemMgrFunctions()</code> method. If no memory manager functions are specified, then OCCI uses its own default functions. An <code>Environment</code> object must eventually be closed to free all the system resources it has acquired.</p>
<p>If the <code>Mode</code> is specified is either <code>THREADED_MUTEXED</code> or T<code>HREADED_UNMUTEXED</code> as defined in <a href="#BBAFGGHB">Table 13-17</a>, then all three memory management functions must be thread-safe.</p>
<div class="inftblinformal">
<table class="cellalignment1076" title="versions of createEnvironment() method" summary="First column lists versions of the method; second column provides descriptions of these versions." dir="ltr">
<thead>
<tr class="cellalignment1067">
<th class="cellalignment1074" id="r1c1-t185">Syntax</th>
<th class="cellalignment1074" id="r1c2-t185">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r2c1-t185" headers="r1c1-t185">
<pre>
static Environment * createEnvironment(
   Mode mode = DEFAULT,
   void *ctxp = 0,
   void *(*malocfp)(void *ctxp,
                    size_t size) = 0,
   void *(*ralocfp)(void *ctxp, 
                    void *memptr,
                    size_t newsize) = 0,
   void (*mfreefp)(void *ctxp,
                   void *memptr) = 0);
</pre></td>
<td class="cellalignment1075" headers="r2c1-t185 r1c2-t185">Creates a default environment.</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r3c1-t185" headers="r1c1-t185">
<pre>
static Environment * createEnvironment(
   const string &amp;charset,
   const string &amp;ncharset,
   Mode mode = DEFAULT,
   void *ctxp = 0,
   void *(*malocfp)(void *ctxp,
                    size_t size) = 0,
   void *(*ralocfp)(void *ctxp, 
                    void *memptr,
                    size_t newsize) = 0,
   void (*mfreefp)(void *ctxp,
                   void *memptr) = 0);
</pre></td>
<td class="cellalignment1075" headers="r3c1-t185 r1c2-t185">Creates an environment with the specified character set and <code>NCHAR</code> character set ids (Unicode support). The client <code>Environment</code> should be initialized in <code>OCCIUTIF16</code> mode.</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" -->
<div class="inftblinformal">
<table class="cellalignment1076" title="parameters of createEnvironment() method" summary="First column lists parameters; second column provides description of these parameters." dir="ltr">
<thead>
<tr class="cellalignment1067">
<th class="cellalignment1074" id="r1c1-t186">Parameter</th>
<th class="cellalignment1074" id="r1c2-t186">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r2c1-t186" headers="r1c1-t186">
<pre>
mode
</pre></td>
<td class="cellalignment1075" headers="r2c1-t186 r1c2-t186">Values are defined as part of <code>Mode</code> in <a href="#BBAFGGHB">Table 13-17</a>: <code>DEFAULT</code>, <code>THREADED_MUTEXED</code>, <code>THREADED_UNMUTEXED</code>, <code>OBJECT</code>.</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r3c1-t186" headers="r1c1-t186">
<pre>
ctxp
</pre></td>
<td class="cellalignment1075" headers="r3c1-t186 r1c2-t186">Context pointer for user-defined memory management function.</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r4c1-t186" headers="r1c1-t186">
<pre>
size
</pre></td>
<td class="cellalignment1075" headers="r4c1-t186 r1c2-t186">The size of the memory allocated by user-defined memory allocation function.</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r5c1-t186" headers="r1c1-t186">
<pre>
newsize
</pre></td>
<td class="cellalignment1075" headers="r5c1-t186 r1c2-t186">The new size of the memory to be reallocated.</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r6c1-t186" headers="r1c1-t186">
<pre>
memptr
</pre></td>
<td class="cellalignment1075" headers="r6c1-t186 r1c2-t186">The existing memory that must be reallocated to new size.</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r7c1-t186" headers="r1c1-t186">
<pre>
malocfp
</pre></td>
<td class="cellalignment1075" headers="r7c1-t186 r1c2-t186">User-defined memory allocation function.</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r8c1-t186" headers="r1c1-t186">
<pre>
ralocfp
</pre></td>
<td class="cellalignment1075" headers="r8c1-t186 r1c2-t186">User-defined memory reallocation function.</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r9c1-t186" headers="r1c1-t186">
<pre>
mfreefp
</pre></td>
<td class="cellalignment1075" headers="r9c1-t186 r1c2-t186">User-defined memory free function.</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r10c1-t186" headers="r1c1-t186">
<pre>
charset
</pre></td>
<td class="cellalignment1075" headers="r10c1-t186 r1c2-t186">Character set id that replaces the one specified in <code>NLS_LANG</code>.</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r11c1-t186" headers="r1c1-t186">
<pre>
ncharset
</pre></td>
<td class="cellalignment1075" headers="r11c1-t186 r1c2-t186">Character set id that replaces the one specified in <code>NLS_NCHAR</code>.</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" -->
<a id="CHECBAHJ"></a><a id="LNCPP20948"></a>
<hr />
<h2 class="refsect2">createStatelessConnectionPool()</h2>
<p>Creates a <code>StatelessConnectionPool</code> object with specified pool attributes.</p>
<div class="inftblinformal">
<table class="cellalignment1076" title="versions of createEnvironment() method" summary="First column lists versions of the method; second column provides descriptions of these versions." dir="ltr">
<thead>
<tr class="cellalignment1067">
<th class="cellalignment1074" id="r1c1-t187">Syntax</th>
<th class="cellalignment1074" id="r1c2-t187">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r2c1-t187" headers="r1c1-t187">
<pre>
StatelessConnectionPool* createStatelessConnectionPool(
   const string &amp;poolUserName,
   const string &amp;poolPassword,
   const string connectString="",
   unsigned int maxConn=1,
   unsigned int minConn=0,
   unsigned int incrConn=1,
   StatelessConnectionPool::PoolType
      pType=StatelessConnectionPool::HETEROGENEOUS);
</pre></td>
<td class="cellalignment1075" headers="r2c1-t187 r1c2-t187">Support for <code>string</code>.</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r3c1-t187" headers="r1c1-t187">
<pre>
StatelessConnectionPool* createStatelessConnectionPool(
   const UString &amp;poolUserName,
   const UString &amp;poolPassword,
   const UString &amp;connectString,
   unsigned int maxConn = 1,
   unsigned int minConn = 0,
   unsigned int incrConn = 1,
   StatelessConnectionPool::PoolType 
   pType=StatelessConnectionPool::HETEROGENEOUS);
</pre></td>
<td class="cellalignment1075" headers="r3c1-t187 r1c2-t187">Support for <code>UString</code>.</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" -->
<div class="inftblinformal">
<table class="cellalignment1076" title="parameters of createStatelessConnectionPool() method" summary="First column lists parameters; second column provides description of these parameters." dir="ltr">
<thead>
<tr class="cellalignment1067">
<th class="cellalignment1074" id="r1c1-t188">Parameter</th>
<th class="cellalignment1074" id="r1c2-t188">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r2c1-t188" headers="r1c1-t188">
<pre>
poolUserName
</pre></td>
<td class="cellalignment1075" headers="r2c1-t188 r1c2-t188">The pool user name.</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r3c1-t188" headers="r1c1-t188">
<pre>
poolPassword
</pre></td>
<td class="cellalignment1075" headers="r3c1-t188 r1c2-t188">The pool password.</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r4c1-t188" headers="r1c1-t188">
<pre>
connectString
</pre></td>
<td class="cellalignment1075" headers="r4c1-t188 r1c2-t188">The connection string for the server.</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r5c1-t188" headers="r1c1-t188">
<pre>
maxConn
</pre></td>
<td class="cellalignment1075" headers="r5c1-t188 r1c2-t188">The maximum number of connections that can be opened the pool; additional sessions cannot be open.</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r6c1-t188" headers="r1c1-t188">
<pre>
minConn
</pre></td>
<td class="cellalignment1075" headers="r6c1-t188 r1c2-t188">The number of connections initially created in a pool. This parameter is considered only if the <code>PoolType</code> is set to <code>HOMOGENEOUS</code>, as defined in <a href="reference029.htm#BBAFHGEG">Table 13-41</a> .</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r7c1-t188" headers="r1c1-t188">
<pre>
incrConn
</pre></td>
<td class="cellalignment1075" headers="r7c1-t188 r1c2-t188">The number of connections by which to increment the pool if all open connections are busy, up to a maximum open connections specified by <code>maxConn</code> parameter. This parameter is considered only if the <code>PoolType</code> is set to <code>HOMOGENEOUS</code>, as defined in <a href="reference029.htm#BBAFHGEG">Table 13-41</a> .</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r8c1-t188" headers="r1c1-t188">
<pre>
pType
</pre></td>
<td class="cellalignment1075" headers="r8c1-t188 r1c2-t188">The <code>PoolType</code> of the connection pool, defined in <a href="reference029.htm#BBAFHGEG">Table 13-41</a> .</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" -->
<a id="CIAHDHFB"></a><a id="LNCPP20949"></a>
<hr />
<h2 class="refsect2">enableSubscription()</h2>
<p>Enables subscription notification.</p>
<p class="subhead1"><a id="LNCPP20950"></a>Syntax</p>
<pre>
void enableSubscription(
   const aq::Subscription &amp;sub);
</pre>
<div class="inftblinformal">
<table class="cellalignment1076" title="parameters of enableSubscription() method" summary="First column lists parameters; second column provides description of these parameters." dir="ltr">
<thead>
<tr class="cellalignment1067">
<th class="cellalignment1074" id="r1c1-t189">Parameter</th>
<th class="cellalignment1074" id="r1c2-t189">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r2c1-t189" headers="r1c1-t189">
<pre>
sub
</pre></td>
<td class="cellalignment1075" headers="r2c1-t189 r1c2-t189">The Subscription.</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" -->
<a id="CIAFIHHC"></a><a id="LNCPP20951"></a>
<hr />
<h2 class="refsect2">disableSubscription()</h2>
<p>Disables subscription notification.</p>
<p class="subhead1"><a id="LNCPP20952"></a>Syntax</p>
<pre>
void disableSubscription(
   Subscription &amp;subscr);
</pre>
<div class="inftblinformal">
<table class="cellalignment1076" title="parameters of disableSubscription() method" summary="First column lists parameters; second column provides description of these parameters." dir="ltr">
<thead>
<tr class="cellalignment1067">
<th class="cellalignment1074" id="r1c1-t190">Parameter</th>
<th class="cellalignment1074" id="r1c2-t190">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r2c1-t190" headers="r1c1-t190">
<pre>
subscr
</pre></td>
<td class="cellalignment1075" headers="r2c1-t190 r1c2-t190">The Subscription.</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" -->
<a id="i1131253"></a><a id="LNCPP20953"></a>
<hr />
<h2 class="refsect2">getCacheMaxSize()</h2>
<p>Retrieves the maximum size of the cache.</p>
<p class="subhead1"><a id="LNCPP20954"></a>Syntax</p>
<pre>
unsigned int getCacheMaxSize() const;
</pre>
<a id="i1131266"></a><a id="LNCPP20955"></a>
<hr />
<h2 class="refsect2">getCacheOptSize()</h2>
<p>Retrieves the Cache optimal heap size.</p>
<p class="subhead1"><a id="LNCPP20956"></a>Syntax</p>
<pre>
unsigned int getCacheOptSize() const;
</pre>
<a id="CIADFBJJ"></a><a id="LNCPP20957"></a>
<hr />
<h2 class="refsect2">getCacheSortedFlush()</h2>
<p>Retrieves the current setting of the cache sorting flag; <code>TRUE</code> or <code>FALSE</code>.</p>
<p class="subhead1"><a id="LNCPP20958"></a>Syntax</p>
<pre>
bool getCacheSortedFlush() const;
</pre>
<a id="i1131122"></a><a id="LNCPP20959"></a>
<hr />
<h2 class="refsect2">getCurrentHeapSize()</h2>
<p>Returns the amount of memory currently allocated to all objects in this environment.</p>
<p class="subhead1"><a id="LNCPP20960"></a>Syntax</p>
<pre>
unsigned int getCurrentHeapSize() const;
</pre>
<a id="CIAHDAGA"></a><a id="LNCPP20961"></a>
<hr />
<h2 class="refsect2">getLDAPAdminContext()</h2>
<p>Returns the administrative context when using LDAP open notification registration.</p>
<p class="subhead1"><a id="LNCPP20962"></a>Syntax</p>
<pre>
string getLDAPAdminContext() const;
</pre>
<a id="CIAGBEJA"></a><a id="LNCPP20963"></a>
<hr />
<h2 class="refsect2">getLDAPAuthentication()</h2>
<p>Returns the authentication mode when using LDAP open notification registration.</p>
<p class="subhead1"><a id="LNCPP20964"></a>Syntax</p>
<pre>
unsigned int getLDAPAuthentication() const;
</pre>
<a id="CIADBBHJ"></a><a id="LNCPP20965"></a>
<hr />
<h2 class="refsect2">getLDAPHost()</h2>
<p>Returns the host on which the LDAP server runs.</p>
<p class="subhead1"><a id="LNCPP20966"></a>Syntax</p>
<pre>
string getLDAPHost() const;
 
</pre>
<a id="CIAHAAIG"></a><a id="LNCPP20967"></a>
<hr />
<h2 class="refsect2">getLDAPPort()</h2>
<p>Returns the port on which the LDAP server is listening.</p>
<p class="subhead1"><a id="LNCPP20968"></a>Syntax</p>
<pre>
unsigned int getLDAPPort() const;
</pre>
<a id="i1090289"></a><a id="LNCPP20969"></a>
<hr />
<h2 class="refsect2">getMap()</h2>
<p>Returns a pointer to the map for this environment.</p>
<p class="subhead1"><a id="LNCPP20970"></a>Syntax</p>
<pre>
Map *getMap() const;
</pre>
<a id="i1090290"></a><a id="LNCPP20971"></a>
<hr />
<h2 class="refsect2">getOCIEnvironment()</h2>
<p>Returns a pointer to the OCI environment associated with this environment.</p>
<p class="subhead1"><a id="LNCPP20972"></a>Syntax</p>
<pre>
OCIEnv *getOCIEnvironment() const;
</pre>
<a id="CHECHFHF"></a><a id="LNCPP20973"></a>
<hr />
<h2 class="refsect2">getXAConnection()</h2>
<p>Returns a pointer to an OCCI Connection object that corresponds to the one opened by the XA library.</p>
<p class="subhead1"><a id="LNCPP20974"></a>Syntax</p>
<pre>
Connection* getXAConnection(
   const string &amp;dbname);
</pre>
<div class="inftblinformal">
<table class="cellalignment1076" title="parameters of getXAConnection() method" summary="First column lists parameters; second column provides description of these parameters." dir="ltr">
<thead>
<tr class="cellalignment1067">
<th class="cellalignment1074" id="r1c1-t191">Parameter</th>
<th class="cellalignment1074" id="r1c2-t191">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r2c1-t191" headers="r1c1-t191">
<pre>
dbname
</pre></td>
<td class="cellalignment1075" headers="r2c1-t191 r1c2-t191">The database name; same as the optional <code>dbname</code> provided in the Open String (and used in connection to the Resource Manager).</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" -->
<a id="CHEIJIHA"></a><a id="LNCPP20975"></a>
<hr />
<h2 class="refsect2">getXAEnvironment()</h2>
<p>Returns a pointer to an OCCI Environment object that corresponds to the one opened by the XA library.</p>
<p class="subhead1"><a id="LNCPP20976"></a>Syntax</p>
<pre>
Environment *getXAEnvironment(
   const string &amp;dbname);
</pre>
<div class="inftblinformal">
<table class="cellalignment1076" title="parameters of getXAEnvironment() method" summary="First column lists parameters; second column provides description of these parameters." dir="ltr">
<thead>
<tr class="cellalignment1067">
<th class="cellalignment1074" id="r1c1-t192">Parameter</th>
<th class="cellalignment1074" id="r1c2-t192">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r2c1-t192" headers="r1c1-t192">
<pre>
dbname
</pre></td>
<td class="cellalignment1075" headers="r2c1-t192 r1c2-t192">The database name; same as the optional <code>dbname</code> provided in the Open String (and used in connection to the Resource Manager).</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" -->
<a id="CHEICCEF"></a><a id="LNCPP20977"></a>
<hr />
<h2 class="refsect2">releaseXAConnection()</h2>
<p>Release/deallocate all resources allocated by the <a href="#CHECHFHF">getXAConnection()</a> method.</p>
<p class="subhead1"><a id="LNCPP20978"></a>Syntax</p>
<pre>
void releaseXAConnection(
   Connection* conn);
</pre>
<div class="inftblinformal">
<table class="cellalignment1076" title="parameters of releaseXAConnection() method" summary="First column lists parameters; second column provides description of these parameters." dir="ltr">
<thead>
<tr class="cellalignment1067">
<th class="cellalignment1074" id="r1c1-t193">Parameter</th>
<th class="cellalignment1074" id="r1c2-t193">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r2c1-t193" headers="r1c1-t193">
<pre>
conn
</pre></td>
<td class="cellalignment1075" headers="r2c1-t193 r1c2-t193">The connection returned by the <a href="#CHECHFHF">getXAConnection()</a> method.</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" -->
<a id="i1089984"></a><a id="LNCPP20979"></a>
<hr />
<h2 class="refsect2">releaseXAEnvironment()</h2>
<p>Release/deallocate all resources allocated by the <a href="#CHEIJIHA">getXAEnvironment()</a> method.</p>
<p class="subhead1"><a id="LNCPP20980"></a>Syntax</p>
<pre>
void releaseXAEnvironment(
   Environment* env);
</pre>
<div class="inftblinformal">
<table class="cellalignment1076" title="parameters of releaseXAEnvironment() method" summary="parameters" dir="ltr">
<thead>
<tr class="cellalignment1067">
<th class="cellalignment1074" id="r1c1-t194">Parameter</th>
<th class="cellalignment1074" id="r1c2-t194">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r2c1-t194" headers="r1c1-t194">
<pre>
env
</pre></td>
<td class="cellalignment1075" headers="r2c1-t194 r1c2-t194">The environment returned by the <a href="#CHEIJIHA">getXAEnvironment()</a> method.</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" -->
<a id="i1131289"></a><a id="LNCPP20981"></a>
<hr />
<h2 class="refsect2">setCacheMaxSize()</h2>
<p>Sets the maximum size for the client-side object cache as a percentage of the optimal size. The default value is 10%.</p>
<p class="subhead1"><a id="LNCPP20982"></a>Syntax</p>
<pre>
void setCacheMaxSize(
   unsigned int maxSize);
</pre>
<div class="inftblinformal">
<table class="cellalignment1076" title="parameters of setCacheMaxSize() method" summary="First column lists parameters; second column provides description of these parameters." dir="ltr">
<thead>
<tr class="cellalignment1067">
<th class="cellalignment1074" id="r1c1-t195">Parameter</th>
<th class="cellalignment1074" id="r1c2-t195">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r2c1-t195" headers="r1c1-t195">
<pre>
maxSize
</pre></td>
<td class="cellalignment1075" headers="r2c1-t195 r1c2-t195">The value of the maximum size, as a percentage.</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" -->
<a id="i1131311"></a><a id="LNCPP20983"></a>
<hr />
<h2 class="refsect2">setCacheOptSize()</h2>
<p>Sets the optimal size for the client-side object cache in bytes. The default value is 8MB.</p>
<p class="subhead1"><a id="LNCPP20984"></a>Syntax</p>
<pre>
void setCacheOptSize(
   unsigned int optSize);
</pre>
<div class="inftblinformal">
<table class="cellalignment1076" title="parameters of setCacheMaxSize() method" summary="First column lists parameters; second column provides description of these parameters." dir="ltr">
<thead>
<tr class="cellalignment1067">
<th class="cellalignment1074" id="r1c1-t196">Parameter</th>
<th class="cellalignment1074" id="r1c2-t196">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r2c1-t196" headers="r1c1-t196">
<pre>
optSize
</pre></td>
<td class="cellalignment1075" headers="r2c1-t196 r1c2-t196">The value of the optimal size, in bytes.</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" -->
<a id="CIAFACJG"></a><a id="LNCPP20985"></a>
<hr />
<h2 class="refsect2">setCacheSortedFlush()</h2>
<p>Sets the cache flushing protocol. By default, objects in cache are flushed in the order they are modified; <code>flag=FALSE</code>. To improve server-side performance, set <code>flag=TRUE</code>, so that the objects in cache are sorted in table order before flushing from client cache.</p>
<p class="subhead1"><a id="LNCPP20986"></a>Syntax</p>
<pre>
void setCacheSortedFlush(
   bool flag);
</pre>
<div class="inftblinformal">
<table class="cellalignment1076" title="parameters of setCacheSortedFlush() method" summary="First column lists parameters; second column provides description of these parameters." dir="ltr">
<thead>
<tr class="cellalignment1067">
<th class="cellalignment1074" id="r1c1-t197">Parameter</th>
<th class="cellalignment1074" id="r1c2-t197">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r2c1-t197" headers="r1c1-t197">
<pre>
flag
</pre></td>
<td class="cellalignment1075" headers="r2c1-t197 r1c2-t197"><code>FALSE</code> (default): no sorting; <code>TRUE</code>: sorting in table order</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" -->
<a id="CIAGHDFG"></a><a id="LNCPP20987"></a>
<hr />
<h2 class="refsect2">setLDAPAdminContext()</h2>
<p>Sets the administrative context of the client. This is usually the root of the Oracle RDBMS LDAP schema in the LDAP server.</p>
<p class="subhead1"><a id="LNCPP20988"></a>Syntax</p>
<pre>
void setLDAPAdminContext(
   const string &amp;ctx);
</pre>
<div class="inftblinformal">
<table class="cellalignment1076" title="parameters of setLDAPAdminContext() method" summary="First column lists parameters; second column provides description of these parameters." dir="ltr">
<thead>
<tr class="cellalignment1067">
<th class="cellalignment1074" id="r1c1-t198">Parameter</th>
<th class="cellalignment1074" id="r1c2-t198">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r2c1-t198" headers="r1c1-t198">
<pre>
ctx
</pre></td>
<td class="cellalignment1075" headers="r2c1-t198 r1c2-t198">The client context</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" -->
<a id="CIAJCGAC"></a><a id="LNCPP20989"></a>
<hr />
<h2 class="refsect2">setLDAPAuthentication()</h2>
<p>Specifies the authentication mode. Currently the only supported value is 0x1: Simple authentication; username/password authentication.</p>
<p class="subhead1"><a id="LNCPP20990"></a>Syntax</p>
<pre>
void setLDAPAuthentication(
   unsigned int mode);
</pre>
<div class="inftblinformal">
<table class="cellalignment1076" title="parameters of setLDAPAuthentication() method" summary="First column lists parameters; second column provides description of these parameters." dir="ltr">
<thead>
<tr class="cellalignment1067">
<th class="cellalignment1074" id="r1c1-t199">Parameter</th>
<th class="cellalignment1074" id="r1c2-t199">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r2c1-t199" headers="r1c1-t199">
<pre>
mode
</pre></td>
<td class="cellalignment1075" headers="r2c1-t199 r1c2-t199">The authentication mode</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" -->
<a id="CIABIADF"></a><a id="LNCPP20991"></a>
<hr />
<h2 class="refsect2">setLDAPHostAndPort()</h2>
<p>Specifies the host on which the LDAP server is running, and the port on which it is listening for requests.</p>
<p class="subhead2"><a id="LNCPP20992"></a>Syntax</p>
<pre>
void setLDAPHostAndPort(
   const string &amp;host,
   unsigned int port);
</pre>
<div class="inftblinformal">
<table class="cellalignment1076" title="parameters of setLDAPHostAndPort() method" summary="First column lists parameters; second column provides description of these parameters." dir="ltr">
<thead>
<tr class="cellalignment1067">
<th class="cellalignment1074" id="r1c1-t200">Parameter</th>
<th class="cellalignment1074" id="r1c2-t200">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r2c1-t200" headers="r1c1-t200">
<pre>
host
</pre></td>
<td class="cellalignment1075" headers="r2c1-t200 r1c2-t200">The host for LDAP</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r3c1-t200" headers="r1c1-t200">
<pre>
port
</pre></td>
<td class="cellalignment1075" headers="r3c1-t200 r1c2-t200">The port for LDAP</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" -->
<a id="CIAHAAGE"></a><a id="LNCPP20993"></a>
<hr />
<h2 class="refsect2">setLDAPLoginNameAndPassword()</h2>
<p>Specifies the login distinguished name and password used when connecting to an LDAP server.</p>
<p class="subhead1"><a id="LNCPP20994"></a>Syntax</p>
<pre>
void setLDAPLoginNameAndPassword(
   const string &amp;login,
   const &amp;passwd);
</pre>
<div class="inftblinformal">
<table class="cellalignment1076" title="parameters of setLDAPLoginNameAndPassword() method" summary="First column lists parameters; second column provides description of these parameters." dir="ltr">
<thead>
<tr class="cellalignment1067">
<th class="cellalignment1074" id="r1c1-t201">Parameter</th>
<th class="cellalignment1074" id="r1c2-t201">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r2c1-t201" headers="r1c1-t201">
<pre>
login
</pre></td>
<td class="cellalignment1075" headers="r2c1-t201 r1c2-t201">The login name</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r3c1-t201" headers="r1c1-t201">
<pre>
passwd
</pre></td>
<td class="cellalignment1075" headers="r3c1-t201 r1c2-t201">The login password</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" -->
<a id="i1079845"></a><a id="LNCPP20995"></a>
<hr />
<h2 class="refsect2">terminateConnection()</h2>
<p>Closes the connection to the environment, and frees all related system resources.</p>
<p class="subhead1"><a id="LNCPP20996"></a>Syntax</p>
<pre>
void terminateConnection(
   Connection *connection);
</pre>
<div class="inftblinformal">
<table class="cellalignment1076" title="parameters of terminateConnection() method" summary="First column lists parameters; second column provides description of these parameters." dir="ltr">
<thead>
<tr class="cellalignment1067">
<th class="cellalignment1074" id="r1c1-t202">Parameter</th>
<th class="cellalignment1074" id="r1c2-t202">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r2c1-t202" headers="r1c1-t202">
<pre>
connection
</pre></td>
<td class="cellalignment1075" headers="r2c1-t202 r1c2-t202">A pointer to the connection instance to be terminated.</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" -->
<a id="i1090291"></a><a id="LNCPP20997"></a>
<hr />
<h2 class="refsect2">terminateConnectionPool()</h2>
<p>Closes the connections in the connection pool, and frees all related system resources.</p>
<p class="subhead1"><a id="LNCPP20998"></a>Syntax</p>
<pre>
void terminateConnectionPool(
   ConnectionPool *poolPointer);
</pre>
<div class="inftblinformal">
<table class="cellalignment1076" title="parameters of terminateConnectionPool() method" summary="First column lists parameters; second column provides description of these parameters." dir="ltr">
<thead>
<tr class="cellalignment1067">
<th class="cellalignment1074" id="r1c1-t203">Parameter</th>
<th class="cellalignment1074" id="r1c2-t203">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r2c1-t203" headers="r1c1-t203">
<pre>
poolPointer
</pre></td>
<td class="cellalignment1075" headers="r2c1-t203 r1c2-t203">A pointer to the connection pool instance to be terminated.</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" -->
<a id="i1079857"></a><a id="LNCPP20999"></a>
<hr />
<h2 class="refsect2">terminateEnvironment()</h2>
<p>Closes the environment, and frees all related system resources.</p>
<p class="subhead1"><a id="LNCPP21000"></a>Syntax</p>
<pre>
void terminateEnvironment(
   Environment *env);
</pre>
<div class="inftblinformal">
<table class="cellalignment1076" title="parameters of terminateEnvironment() method" summary="First column lists parameters; second column provides description of these parameters." dir="ltr">
<thead>
<tr class="cellalignment1067">
<th class="cellalignment1074" id="r1c1-t204">Parameter</th>
<th class="cellalignment1074" id="r1c2-t204">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r2c1-t204" headers="r1c1-t204">
<pre>
env
</pre></td>
<td class="cellalignment1075" headers="r2c1-t204 r1c2-t204">Environment to be closed.</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" -->
<a id="CHEDDEAJ"></a><a id="LNCPP21001"></a>
<hr />
<h2 class="refsect2">terminateStatelessConnectionPool()</h2>
<p>Destroys the specified <code>StatelessConnectionPool</code>.</p>
<p class="subhead1"><a id="LNCPP21002"></a>Syntax</p>
<pre>
void termimnateStatelessConnectionPool(
   StatelessConnectionPool* poolPointer,
   StatelessConnectionPool::DestroyMode mode=StatelessConnectionPool::DEFAULT);
</pre>
<div class="inftblinformal">
<table class="cellalignment1076" title="parameters of getXAEnvironment() method" summary="First column lists parameters; second column provides description of these parameters." dir="ltr">
<thead>
<tr class="cellalignment1067">
<th class="cellalignment1074" id="r1c1-t205">Parameter</th>
<th class="cellalignment1074" id="r1c2-t205">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r2c1-t205" headers="r1c1-t205">
<pre>
poolPointer
</pre></td>
<td class="cellalignment1075" headers="r2c1-t205 r1c2-t205">The <code>StatelessConnectionPool</code> to be destroyed.</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r3c1-t205" headers="r1c1-t205">mode</td>
<td class="cellalignment1075" headers="r3c1-t205 r1c2-t205"><code>DestroyMode</code> as defined <a href="reference029.htm#BBAFHGEG">Table 13-41</a>: <code>DEFAULT</code> or <code>SPF_FORCE</code>.</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" --></div>
<!-- class="refsect1" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment1066">
<tr>
<td class="cellalignment1075">
<table class="cellalignment1071">
<tr>
<td class="cellalignment1070"><a href="reference013.htm"><img width="24" height="24" src="../../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment1070"><a href="reference015.htm"><img width="24" height="24" src="../../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;1999, 2013,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment1078">
<table class="cellalignment1069">
<tr>
<td class="cellalignment1070"><a href="../../index.htm"><img width="24" height="24" src="../../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment1070"><a href="../../nav/portal_booklist.htm"><img width="24" height="24" src="../../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment1070"><a href="toc.htm"><img width="24" height="24" src="../../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment1070"><a href="index.htm"><img width="24" height="24" src="../../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment1070"><a href="../../nav/mindx.htm"><img width="24" height="24" src="../../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment1070"><a href="../../dcommon/html/feedback.htm"><img width="24" height="24" src="../../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>
</body>
</html>
