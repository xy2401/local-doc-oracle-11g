<!DOCTYPE html>
<html lang="en" >
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1">
<meta charset="utf-8">
<title>ResultSet Class</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Version 5.1.2 Build 711" />
<meta name="dcterms.created" content="2013-02-06T9:20:52Z" />
<meta name="robots" content="all" />
<meta name="dcterms.title" content="C++ Call Interface Programmer's Guide," />
<meta name="dcterms.identifier" content="E10764-04" />
<meta name="dcterms.isVersionOf" content="LNCPP" />
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;1999, 2013,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved." />
<link rel="Start" href="../../index.htm" title="Home" type="text/html" />
<link rel="Copyright" href="../../dcommon/html/cpyr.htm" title="Copyright" type="text/html" />

<script type="application/javascript"  src="../../dcommon/js/headfoot.js"></script>
<script type="application/javascript"  src="../../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html" />
<link rel="Index" href="index.htm" title="Index" type="text/html" />
<link rel="Prev" href="reference026.htm" title="Previous" type="text/html" />
<link rel="Next" href="reference028.htm" title="Next" type="text/html" />
<link rel="alternate" href="../e10764.pdf" title="PDF version" type="application/pdf" />
<link rel="schema.dcterms" href="http://purl.org/dc/terms/" />
<link rel="stylesheet" href="../../dcommon/css/fusiondoc.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/header.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/footer.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/fonts.css">
<link rel="stylesheet" href="../../dcommon/css/foundation.css">
<link rel="stylesheet" href="../../dcommon/css/codemirror.css">
<link rel="stylesheet" type="text/css" title="Default" href="../../nav/css/html5.css">
<link rel="stylesheet" href="../../dcommon/css/respond-480-tablet.css">
<link rel="stylesheet" href="../../dcommon/css/respond-768-laptop.css">
<link rel="stylesheet" href="../../dcommon/css/respond-1140-deskop.css">
<script type="application/javascript" src="../../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">47/54</span> <!-- End Header --><a id="i1079050"></a><a id="LNCPP1019"></a>
<hr />
<div class="refsect1">
<h1 class="refsect1">Result<a id="sthref877"></a><a id="sthref878"></a><a id="sthref879"></a>Set Class</h1>
<p>A <code>ResultSet</code> provides access to a table of data generated by executing a <code>Statement</code>. Table rows are retrieved in sequence. Within a row, column values can be accessed in any order.</p>
<p>A <code>ResultSet</code> maintains a cursor pointing to its current row of data. Initially the cursor is positioned before the first row. The <code>next</code> method moves the cursor to the next row.</p>
<p>The <code>get</code><code><span class="codeinlineitalic">xxx</span></code><code>()</code> methods retrieve column values for the current row. You can retrieve values using the index number of the column. Columns are numbered beginning at <code>1</code>. For the <code>get</code><code><span class="codeinlineitalic">xxx</span></code><code>()</code> methods, OCCI attempts to convert the underlying data to the specified C++ type and returns a C++ value. SQL types are mapped to C++ types with the <code>ResultSet::get</code><code><span class="codeinlineitalic">xxx</span></code><code>()</code> methods.</p>
<p>The number, types and properties of a <code>ResultSet</code>'s columns are provided by the <code>MetaData</code> object returned by the <a href="#i1082585">getColumnListMetaData()</a> method.</p>
<div class="tblformal">
<p class="titleintable"><a id="LNCPP21457"></a><a id="sthref880"></a><a id="BBABCCHB"></a>Table 13-38 Enumerated Values Used by ResultSet Class</p>
<table class="cellalignment1073" title="Enumerated Values Used by ResultSet Class" summary="First column lists the attribute used by the class, the second column describes the options available to each attribute" dir="ltr">
<thead>
<tr class="cellalignment1067">
<th class="cellalignment1074" id="r1c1-t376">Attribute</th>
<th class="cellalignment1074" id="r1c2-t376">Options</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r2c1-t376" headers="r1c1-t376">
<pre>
Status
</pre></td>
<td class="cellalignment1075" headers="r2c1-t376 r1c2-t376">
<ul>
<li>
<p><code>DATA_AVAILABLE</code> indicates that data for one or more rows was successfully fetched from the server; up to the requested number of rows (<code>numRows</code>) were returned. When in streamed mode, use the <a href="#i1082540">getNumArrayRows()</a> method to determine the exact number of rows retrieved when <code>numRows</code> is greater than <code>1</code>.</p>
</li>
<li>
<p><code>STREAM_DATA_AVAILABLE</code> indicates that the application should call the <a href="#i1082551">getCurrentStreamColumn()</a> method and read stream.</p>
</li>
<li>
<p><code>END_OF_FETCH</code> indicates that no data was available for fetching.</p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment1067">
<td>&nbsp;</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<div class="tblformal">
<p class="titleintable"><a id="LNCPP21458"></a><a id="sthref881"></a><a id="sthref882"></a>Table 13-39 Summary of <a id="sthref883"></a><a id="sthref884"></a>ResultSet Methods</p>
<table class="cellalignment1073" title="Summary of ResultSet Methods " summary="First column lists methods; second column provides description of these methods." dir="ltr">
<thead>
<tr class="cellalignment1067">
<th class="cellalignment1074" id="r1c1-t377">Method</th>
<th class="cellalignment1074" id="r1c2-t377">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r2c1-t377" headers="r1c1-t377">
<p><a href="#i1093998">cancel()</a></p>
</td>
<td class="cellalignment1075" headers="r2c1-t377 r1c2-t377">
<p>Cancels the <code>ResultSet</code>.</p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r3c1-t377" headers="r1c1-t377">
<p><a href="#i1082060">closeStream()</a></p>
</td>
<td class="cellalignment1075" headers="r3c1-t377 r1c2-t377">
<p>Closes the specified <code>Stream</code>.</p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r4c1-t377" headers="r1c1-t377">
<p><a href="#CACEAFDB">getBDouble()</a></p>
</td>
<td class="cellalignment1075" headers="r4c1-t377 r1c2-t377">
<p>Returns the value of a column in the current row as a <code>BDouble.</code></p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r5c1-t377" headers="r1c1-t377">
<p><a href="#i1104872">getBfile()</a></p>
</td>
<td class="cellalignment1075" headers="r5c1-t377 r1c2-t377">
<p>Returns the value of a column in the current row as a <code>Bfile.</code></p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r6c1-t377" headers="r1c1-t377">
<p><a href="#CACCJEJF">getBFloat()</a></p>
</td>
<td class="cellalignment1075" headers="r6c1-t377 r1c2-t377">
<p>Returns the value of a column in the current row as a <code>BFloat.</code></p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r7c1-t377" headers="r1c1-t377">
<p><a href="#i1082567">getBlob()</a></p>
</td>
<td class="cellalignment1075" headers="r7c1-t377 r1c2-t377">
<p>Returns the value of a column in the current row as a <code>Blob</code> object.</p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r8c1-t377" headers="r1c1-t377">
<p><a href="#i1082566">getBytes()</a></p>
</td>
<td class="cellalignment1075" headers="r8c1-t377 r1c2-t377">
<p>Returns the value of a column in the current row as a <code>Bytes</code> array.</p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r9c1-t377" headers="r1c1-t377">
<p><a href="#i1082553">getCharSet()</a></p>
</td>
<td class="cellalignment1075" headers="r9c1-t377 r1c2-t377">
<p>Returns the character set in which data would be fetched.</p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r10c1-t377" headers="r1c1-t377">
<p><a href="#CACFCGJA">getCharSetUString()</a></p>
</td>
<td class="cellalignment1075" headers="r10c1-t377 r1c2-t377">
<p>Returns the character set in which data would be fetched as a <code>UString</code>.</p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r11c1-t377" headers="r1c1-t377">
<p><a href="#i1082552">getClob()</a></p>
</td>
<td class="cellalignment1075" headers="r11c1-t377 r1c2-t377">
<p>Returns the value of a column in the current row as a <code>Clob</code> object.</p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r12c1-t377" headers="r1c1-t377">
<p><a href="#i1082585">getColumnListMetaData()</a></p>
</td>
<td class="cellalignment1075" headers="r12c1-t377 r1c2-t377">
<p>Returns the describe information of the result set columns as a <code>MetaData</code> object.</p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r13c1-t377" headers="r1c1-t377">
<p><a href="#i1082551">getCurrentStreamColumn()</a></p>
</td>
<td class="cellalignment1075" headers="r13c1-t377 r1c2-t377">
<p>Returns the column index of the current readable <code>Stream.</code></p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r14c1-t377" headers="r1c1-t377">
<p><a href="#i1082141">getCurrentStreamRow()</a></p>
</td>
<td class="cellalignment1075" headers="r14c1-t377 r1c2-t377">
<p>Returns the current row of the <code>ResultSet</code> being processed.</p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r15c1-t377" headers="r1c1-t377">
<p><a href="#i1082550">getCursor()</a></p>
</td>
<td class="cellalignment1075" headers="r15c1-t377 r1c2-t377">
<p>Returns the nested cursor as a <code>ResultSet</code>.</p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r16c1-t377" headers="r1c1-t377">
<p><a href="#i1082547">getDate()</a></p>
</td>
<td class="cellalignment1075" headers="r16c1-t377 r1c2-t377">
<p>Returns the value of a column in the current row as a <code>Date</code> object.</p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r17c1-t377" headers="r1c1-t377">
<p><a href="#i1131388">getDatabaseNCHARParam()</a></p>
</td>
<td class="cellalignment1075" headers="r17c1-t377 r1c2-t377">
<p>Returns whether data is in NCHAR character set or not.</p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r18c1-t377" headers="r1c1-t377">
<p><a href="#i1140070">getDouble()</a></p>
</td>
<td class="cellalignment1075" headers="r18c1-t377 r1c2-t377">
<p>Returns the value of a column in the current row as a C++ double.</p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r19c1-t377" headers="r1c1-t377">
<p><a href="#i1082549">getFloat()</a></p>
</td>
<td class="cellalignment1075" headers="r19c1-t377 r1c2-t377">
<p>Returns the value of a column in the current row as a C++ float.</p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r20c1-t377" headers="r1c1-t377">
<p><a href="#i1082546">getInt()</a></p>
</td>
<td class="cellalignment1075" headers="r20c1-t377 r1c2-t377">
<p>Returns the value of a column in the current row as a C++ int.</p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r21c1-t377" headers="r1c1-t377">
<p><a href="#i1082696">getIntervalDS()</a></p>
</td>
<td class="cellalignment1075" headers="r21c1-t377 r1c2-t377">
<p>Returns the value of a column in the current row as a <code>IntervalDS</code>.</p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r22c1-t377" headers="r1c1-t377">
<p><a href="#i1082703">getIntervalYM()</a></p>
</td>
<td class="cellalignment1075" headers="r22c1-t377 r1c2-t377">
<p>Returns the value of a column in the current row as a <code>IntervalYM</code>.</p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r23c1-t377" headers="r1c1-t377">
<p><a href="#i1082545">getMaxColumnSize()</a></p>
</td>
<td class="cellalignment1075" headers="r23c1-t377 r1c2-t377">
<p>Returns the value set by <code>setMaxColumnSize()</code>.</p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r24c1-t377" headers="r1c1-t377">
<p><a href="#i1082540">getNumArrayRows()</a></p>
</td>
<td class="cellalignment1075" headers="r24c1-t377 r1c2-t377">
<p>Returns the actual number of rows fetched in the last array fetch.</p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r25c1-t377" headers="r1c1-t377">
<p><a href="#i1082541">getNumber()</a></p>
</td>
<td class="cellalignment1075" headers="r25c1-t377 r1c2-t377">
<p>Returns the value of a column in the current row as a <code>Number</code> object.</p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r26c1-t377" headers="r1c1-t377">
<p><a href="#i1082539">getObject()</a></p>
</td>
<td class="cellalignment1075" headers="r26c1-t377 r1c2-t377">
<p>Returns the value of a column in the current row as a <code>PObject</code>.</p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r27c1-t377" headers="r1c1-t377">
<p><a href="#i1082305">getRef()</a></p>
</td>
<td class="cellalignment1075" headers="r27c1-t377 r1c2-t377">
<p>Returns the value of a column in the current row as a <code>Ref</code>.</p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r28c1-t377" headers="r1c1-t377">
<p><a href="#i1082538">getRowid()</a></p>
</td>
<td class="cellalignment1075" headers="r28c1-t377 r1c2-t377">
<p>Returns the current <code>ROWID</code> for a <code>SELECT FOR UPDATE</code> statement.</p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r29c1-t377" headers="r1c1-t377">
<p><a href="#i1082537">getRowPosition()</a></p>
</td>
<td class="cellalignment1075" headers="r29c1-t377 r1c2-t377">
<p>Returns the row id of the current row position.</p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r30c1-t377" headers="r1c1-t377">
<p><a href="#i1082589">getStatement()</a></p>
</td>
<td class="cellalignment1075" headers="r30c1-t377 r1c2-t377">
<p>Returns the <code>Statement</code> of the <code>ResultSet</code>.</p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r31c1-t377" headers="r1c1-t377">
<p><a id="sthref885" href="#sthref885" onclick='footdisplay(0,"getStream()")'><sup class="footnotenumber">Footref&nbsp;0</sup></a><a href="#i1082601">getStream()</a></p>
</td>
<td class="cellalignment1075" headers="r31c1-t377 r1c2-t377">
<p>Returns the value of a column in the current row as a <code>Stream</code>.</p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r32c1-t377" headers="r1c1-t377">
<p><a href="#i1082536">getString()</a></p>
</td>
<td class="cellalignment1075" headers="r32c1-t377 r1c2-t377">
<p>Returns the value of a column in the current row as a string.</p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r33c1-t377" headers="r1c1-t377">
<p><a href="#i1082535">getTimestamp()</a></p>
</td>
<td class="cellalignment1075" headers="r33c1-t377 r1c2-t377">
<p>Returns the value of a column in the current row as a <code>Timestamp</code> object.</p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r34c1-t377" headers="r1c1-t377">
<p><a href="#i1082406">getUInt()</a></p>
</td>
<td class="cellalignment1075" headers="r34c1-t377 r1c2-t377">
<p>Returns the value of a column in the current row as a C++ unsigned int</p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r35c1-t377" headers="r1c1-t377">
<p><a href="#CHEHEDJH">getUString()</a></p>
</td>
<td class="cellalignment1075" headers="r35c1-t377 r1c2-t377">
<p>Returns the value of a column in the current row as a <code>UString</code>.</p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r36c1-t377" headers="r1c1-t377">
<p><a href="#i1120796">getVector()</a></p>
</td>
<td class="cellalignment1075" headers="r36c1-t377 r1c2-t377">
<p>Returns the specified collection parameter as a vector.</p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r37c1-t377" headers="r1c1-t377">
<p><a href="#i1121213">getVectorOfRefs()</a></p>
</td>
<td class="cellalignment1075" headers="r37c1-t377 r1c2-t377">
<p>Returns the column in the current position as a vector of <code>Ref</code>s.</p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r38c1-t377" headers="r1c1-t377">
<p><a href="#i1082534">isNull()</a></p>
</td>
<td class="cellalignment1075" headers="r38c1-t377 r1c2-t377">
<p>Checks whether the value is <code>NULL</code>.</p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r39c1-t377" headers="r1c1-t377">
<p><a href="#i1106789">isTruncated()</a></p>
</td>
<td class="cellalignment1075" headers="r39c1-t377 r1c2-t377">
<p>Checks whether truncation has occurred.</p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r40c1-t377" headers="r1c1-t377">
<p><a href="#i1082533">next()</a></p>
</td>
<td class="cellalignment1075" headers="r40c1-t377 r1c2-t377">
<p>Makes the next row the current row in a <code>ResultSet</code>.</p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r41c1-t377" headers="r1c1-t377">
<p><a href="#i1106935">preTruncationLength()</a></p>
</td>
<td class="cellalignment1075" headers="r41c1-t377 r1c2-t377">
<p>Returns the actual length of the parameter before truncation.</p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r42c1-t377" headers="r1c1-t377">
<p><a href="#i1082622">setBinaryStreamMode()</a></p>
</td>
<td class="cellalignment1075" headers="r42c1-t377 r1c2-t377">
<p>Specifies that a column is to be returned as a binary stream.</p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r43c1-t377" headers="r1c1-t377">
<p><a href="#i1082629">setCharacterStreamMode()</a></p>
</td>
<td class="cellalignment1075" headers="r43c1-t377 r1c2-t377">
<p>Specifies that a column is to be returned as a character stream.</p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r44c1-t377" headers="r1c1-t377">
<p><a href="#i1082532">setCharSet()</a></p>
</td>
<td class="cellalignment1075" headers="r44c1-t377 r1c2-t377">
<p>Specifies the character set in which the data is to be returned.</p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r45c1-t377" headers="r1c1-t377">
<p><a href="#CACCCDFG">setCharSetUString()</a></p>
</td>
<td class="cellalignment1075" headers="r45c1-t377 r1c2-t377">
<p>Specifies the character set in which the data is to be returned.</p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r46c1-t377" headers="r1c1-t377">
<p><a href="#i1131450">setDatabaseNCHARParam()</a></p>
</td>
<td class="cellalignment1075" headers="r46c1-t377 r1c2-t377">
<p>If the parameter is going to be retrieved from a column that contains data in the database's NCHAR character set, then OCCI must be informed by passing a true value.</p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r47c1-t377" headers="r1c1-t377">
<p><a href="#i1082531">setDataBuffer()</a></p>
</td>
<td class="cellalignment1075" headers="r47c1-t377 r1c2-t377">
<p>Specifies the data buffer into which data is to be fetched, or the gather and scatter binds and defines made.</p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r48c1-t377" headers="r1c1-t377">
<p><a href="#i1082572">setErrorOnNull()</a></p>
</td>
<td class="cellalignment1075" headers="r48c1-t377 r1c2-t377">
<p>Enables Or Disables exception when <code>NULL</code> value is read.</p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r49c1-t377" headers="r1c1-t377">
<p><a href="#i1106692">setErrorOnTruncate()</a></p>
</td>
<td class="cellalignment1075" headers="r49c1-t377 r1c2-t377">
<p>Enables Or Disables exception when truncation occurs.</p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r50c1-t377" headers="r1c1-t377">
<p><a href="#BBAEJGFI">setPrefetchMemorySize()</a></p>
</td>
<td class="cellalignment1075" headers="r50c1-t377 r1c2-t377">
<p>Sets the amount of memory that is used internally by OCCI to store data fetched during each round trip to the server.</p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r51c1-t377" headers="r1c1-t377">
<p><a href="#BBAJJCHA">setPrefetchRowCount()</a></p>
</td>
<td class="cellalignment1075" headers="r51c1-t377 r1c2-t377">
<p>Sets the number of rows that are fetched internally by OCCI during each round trip to the server.</p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r52c1-t377" headers="r1c1-t377">
<p><a href="#i1101782">setMaxColumnSize()</a></p>
</td>
<td class="cellalignment1075" headers="r52c1-t377 r1c2-t377">
<p>Specifies the maximum amount of data in bytes to read from a column. It should be based on the environment's character set, in which the <code>env</code> has been created.</p>
</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r53c1-t377" headers="r1c1-t377">
<p><a href="#i1076893">status()</a></p>
</td>
<td class="cellalignment1075" headers="r53c1-t377 r1c2-t377">
<p>Returns the current status of the <code>ResultSet</code>.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<a id="i1093998"></a><a id="LNCPP21459"></a>
<hr />
<h2 class="refsect2">cancel()</h2>
<p>This method cancels the result set.</p>
<p class="subhead1"><a id="LNCPP21460"></a>Syntax</p>
<pre>
void cancel();
</pre>
<a id="i1082060"></a><a id="LNCPP21461"></a>
<hr />
<h2 class="refsect2">closeStream()</h2>
<p>This method closes the stream specified by the parameter <code>stream</code>.</p>
<p class="subhead1"><a id="LNCPP21462"></a>Syntax</p>
<pre>
void closeStream(
   Stream *stream); 
</pre>
<div class="inftblinformal">
<table class="cellalignment1076" title="parameters of closeStream() method" summary="First column lists parameters; second column provides description of these parameters." dir="ltr">
<thead>
<tr class="cellalignment1067">
<th class="cellalignment1074" id="r1c1-t378">Parameter</th>
<th class="cellalignment1074" id="r1c2-t378">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r2c1-t378" headers="r1c1-t378">
<pre>
stream
</pre></td>
<td class="cellalignment1075" headers="r2c1-t378 r1c2-t378">The <code>Stream</code> to be closed.</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" -->
<a id="CACEAFDB"></a><a id="LNCPP21463"></a>
<hr />
<h2 class="refsect2">getBDouble()</h2>
<p>This method returns the value of a column in the current row as a <code>BDouble</code>. If the value is SQL <code>NULL</code>, the result is <code>NULL</code>.</p>
<p class="subhead1"><a id="LNCPP21464"></a>Syntax</p>
<pre>
BDouble getBDouble(
   unsigned int colIndex);
</pre>
<div class="inftblinformal">
<table class="cellalignment1076" title="parameters of getBfile() method" summary="First column lists parameters; second column provides description of these parameters." dir="ltr">
<thead>
<tr class="cellalignment1067">
<th class="cellalignment1074" id="r1c1-t379">Parameter</th>
<th class="cellalignment1074" id="r1c2-t379">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r2c1-t379" headers="r1c1-t379">
<pre>
colIndex
</pre></td>
<td class="cellalignment1075" headers="r2c1-t379 r1c2-t379">Column index, first column is <code>1</code>, second is 2, and so on.</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" -->
<a id="i1104872"></a><a id="LNCPP21465"></a>
<hr />
<h2 class="refsect2">getBfile()</h2>
<p>This method returns the value of a column in the current row as a <code>Bfile</code>. Returns the column value; if the value is SQL <code>NULL</code>, the result is <code>NULL</code>.</p>
<p class="subhead1"><a id="LNCPP21466"></a>Syntax</p>
<pre>
Bfile getBfile(
   unsigned int colIndex);
</pre>
<div class="inftblinformal">
<table class="cellalignment1076" title="parameters of getBfile() method" summary="First column lists parameters; second column provides description of these parameters." dir="ltr">
<thead>
<tr class="cellalignment1067">
<th class="cellalignment1074" id="r1c1-t380">Parameter</th>
<th class="cellalignment1074" id="r1c2-t380">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r2c1-t380" headers="r1c1-t380">
<pre>
colIndex
</pre></td>
<td class="cellalignment1075" headers="r2c1-t380 r1c2-t380">Column index, first column is <code>1</code>, second is <code>2</code>, and so on.</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" -->
<a id="CACCJEJF"></a><a id="LNCPP21467"></a>
<hr />
<h2 class="refsect2">getBFloat()</h2>
<p>This method returns the value of a column in the current row as a <code>BFloat</code>. If the value is SQL <code>NULL</code>, the result is <code>NULL</code>.</p>
<p class="subhead1"><a id="LNCPP21468"></a>Syntax</p>
<pre>
BFloat getBFloat(
   unsigned int colIndex);
</pre>
<div class="inftblinformal">
<table class="cellalignment1076" title="parameters of getBfile() method" summary="First column lists parameters; second column provides description of these parameters." dir="ltr">
<thead>
<tr class="cellalignment1067">
<th class="cellalignment1074" id="r1c1-t381">Parameter</th>
<th class="cellalignment1074" id="r1c2-t381">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r2c1-t381" headers="r1c1-t381">
<pre>
colIndex
</pre></td>
<td class="cellalignment1075" headers="r2c1-t381 r1c2-t381">Column index, first column is <code>1</code>, second is <code>2</code>, and so on.</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" -->
<a id="i1082567"></a><a id="LNCPP21469"></a>
<hr />
<h2 class="refsect2">getBlob()</h2>
<p>Get the value of a column in the current row as an <code>Blob</code>. Returns the column value; if the value is SQL <code>NULL</code>, the result is <code>NULL</code>.</p>
<p class="subhead1"><a id="LNCPP21470"></a>Syntax</p>
<pre>
Blob getBlob(
   unsigned int colIndex);
</pre>
<div class="inftblinformal">
<table class="cellalignment1076" title="parameters of getBlob) method" summary="First column lists parameters; second column provides description of these parameters." dir="ltr">
<thead>
<tr class="cellalignment1067">
<th class="cellalignment1074" id="r1c1-t382">Parameter</th>
<th class="cellalignment1074" id="r1c2-t382">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r2c1-t382" headers="r1c1-t382">
<pre>
colIndex
</pre></td>
<td class="cellalignment1075" headers="r2c1-t382 r1c2-t382">Column index, first column is <code>1</code>, second is <code>2</code>, and so on.</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" -->
<a id="i1082566"></a><a id="LNCPP21471"></a>
<hr />
<h2 class="refsect2">getBytes()</h2>
<p>Get the value of a column in the current row as a <code>Bytes</code> array. The bytes represent the raw values returned by the server. Returns the column value; if the value is SQL <code>NULL</code>, the result is <code>NULL</code> array</p>
<p class="subhead1"><a id="LNCPP21472"></a>Syntax</p>
<pre>
Bytes getBytes(
   unsigned int colIndex);
</pre>
<div class="inftblinformal">
<table class="cellalignment1076" title="parameters of getBytes() method" summary="First column lists parameters; second column provides description of these parameters." dir="ltr">
<thead>
<tr class="cellalignment1067">
<th class="cellalignment1074" id="r1c1-t383">Parameter</th>
<th class="cellalignment1074" id="r1c2-t383">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r2c1-t383" headers="r1c1-t383">
<pre>
colIndex
</pre></td>
<td class="cellalignment1075" headers="r2c1-t383 r1c2-t383">Column index, first column is <code>1</code>, second is <code>2</code>, and so on.</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" -->
<a id="i1082553"></a><a id="LNCPP21473"></a>
<hr />
<h2 class="refsect2">getCharSet()</h2>
<p>Gets the character set in which data would be fetched, as a string.</p>
<p class="subhead1"><a id="LNCPP21474"></a>Syntax</p>
<pre>
string getCharSet(
   unsigned int colIndex) const;
</pre>
<div class="inftblinformal">
<table class="cellalignment1076" title="parameters of getCharSet() method" summary="First column lists parameters; second column provides description of these parameters." dir="ltr">
<thead>
<tr class="cellalignment1067">
<th class="cellalignment1074" id="r1c1-t384">Parameter</th>
<th class="cellalignment1074" id="r1c2-t384">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r2c1-t384" headers="r1c1-t384">
<pre>
colIndex
</pre></td>
<td class="cellalignment1075" headers="r2c1-t384 r1c2-t384">Column index, first column is <code>1</code>, second is <code>2</code>, and so on.</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" -->
<a id="CACFCGJA"></a><a id="LNCPP21475"></a>
<hr />
<h2 class="refsect2">getCharSetUString()</h2>
<p>Gets the character set in which data would be fetched, as a string.</p>
<p class="subhead1"><a id="LNCPP21476"></a>Syntax</p>
<pre>
UString getCharSetUString(
   unsigned int colIndex) const;
</pre>
<div class="inftblinformal">
<table class="cellalignment1076" title="parameters of getCharSetUString() method" summary="First column lists parameters; second column provides description of these parameters." dir="ltr">
<thead>
<tr class="cellalignment1067">
<th class="cellalignment1074" id="r1c1-t385">Parameter</th>
<th class="cellalignment1074" id="r1c2-t385">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r2c1-t385" headers="r1c1-t385">
<pre>
colIndex
</pre></td>
<td class="cellalignment1075" headers="r2c1-t385 r1c2-t385">Column index, first column is <code>1</code>, second is <code>2</code>, and so on.</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" -->
<a id="i1082552"></a><a id="LNCPP21477"></a>
<hr />
<h2 class="refsect2">getClob()</h2>
<p>Get the value of a column in the current row as a <code>Clob</code>. Returns the column value; if the value is SQL <code>NULL</code>, the result is <code>NULL</code>.</p>
<p class="subhead1"><a id="LNCPP21478"></a>Syntax</p>
<pre>
Clob getClob(
   unsigned int colIndex);
</pre>
<div class="inftblinformal">
<table class="cellalignment1076" title="parameters of getClob() method" summary="First column lists parameters; second column provides description of these parameters." dir="ltr">
<thead>
<tr class="cellalignment1067">
<th class="cellalignment1074" id="r1c1-t386">Parameter</th>
<th class="cellalignment1074" id="r1c2-t386">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r2c1-t386" headers="r1c1-t386">
<pre>
colIndex
</pre></td>
<td class="cellalignment1075" headers="r2c1-t386 r1c2-t386">Column index, first column is <code>1</code>, second is <code>2</code>, and so on.</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" -->
<a id="i1082585"></a><a id="LNCPP21479"></a>
<hr />
<h2 class="refsect2">getColumnListMetaData()</h2>
<p>The number, types and properties of a <code>ResultSet</code>'s columns are provided by the <code>getMetaData</code> method. Returns the description of a <code>ResultSet</code>'s columns. This method returns the value of the given column as a <code>PObject</code>. The type of the C++ object is the C++ <code>PObject</code> type corresponding to the column's SQL type registered with <code>Environment</code>'s map. This method is used to materialize data of SQL user-defined types.</p>
<p class="subhead1"><a id="LNCPP21480"></a>Syntax</p>
<pre>
vector&lt;MetaData&gt; getColumnListMetaData() const;
</pre>
<a id="i1082551"></a><a id="LNCPP21481"></a>
<hr />
<h2 class="refsect2">getCurrentStreamColumn()</h2>
<p>If the result set has any input <code>Stream</code> parameters, this method returns the column index of the current input <code>Stream</code> that must be read. If no output <code>Stream</code> must be read, or there are no input <code>Stream</code> columns in the result set, this method returns <code>0</code>. Returns the column index of the current input <code>Stream</code> column that must be read.</p>
<p class="subhead1"><a id="LNCPP21482"></a>Syntax</p>
<pre>
unsigned int getCurrentStreamColumn() const;
</pre>
<a id="i1082141"></a><a id="LNCPP21483"></a>
<hr />
<h2 class="refsect2">getCurrentStreamRow()</h2>
<p>If the result has any input <code>Stream</code>s, this method returns the current row of the result set that is being processed by OCCI. If this method is called after all the rows in the set of array of rows have been processed, it returns <code>0</code>. Returns the row number of the current row that is being processed. The first row is numbered <code>1</code> and so on.</p>
<p class="subhead1"><a id="LNCPP21484"></a>Syntax</p>
<pre>
unsigned int getCurrentStreamRow() const;
</pre>
<a id="i1082550"></a><a id="LNCPP21485"></a>
<hr />
<h2 class="refsect2">getCursor()</h2>
<p>Get the nested cursor as an <code>ResultSet</code>. Data can be fetched from this result set. A nested cursor results from a nested query with a <code>CURSOR(SELECT...)</code> clause:</p>
<pre>
SELECT last_name, 
       CURSOR(SELECT  department_name FROM departments) 
FROM employees WHERE last_name = 'JONES'
</pre>
<p>Note that if there are multiple <code>REF</code> <code>CURSOR</code>s being returned, data from each cursor must be completely fetched before retrieving the next <code>REF</code> <code>CURSOR</code> and starting fetch on it. Returns A <code>ResultSet</code> for the nested cursor.</p>
<p class="subhead1"><a id="LNCPP21486"></a>Syntax</p>
<pre>
ResultSet * getCursor(
   unsigned int colIndex);
</pre>
<div class="inftblinformal">
<table class="cellalignment1076" title="parameters of getCuros() method" summary="First column lists parameters; second column provides description of these parameters." dir="ltr">
<thead>
<tr class="cellalignment1067">
<th class="cellalignment1074" id="r1c1-t387">Parameter</th>
<th class="cellalignment1074" id="r1c2-t387">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r2c1-t387" headers="r1c1-t387">
<pre>
colIndex
</pre></td>
<td class="cellalignment1075" headers="r2c1-t387 r1c2-t387">Column index, first column is <code>1</code>, second is <code>2</code>, and so on.</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" -->
<a id="i1131388"></a><a id="LNCPP21487"></a>
<hr />
<h2 class="refsect2">getDatabaseNCHARParam()</h2>
<p>Returns whether data is in <code>NCHAR</code> character set or not.</p>
<p class="subhead1"><a id="LNCPP21488"></a>Syntax</p>
<pre>
bool getDatabaseNCHARParam(
   unsigned int paramIndex) const;
</pre>
<div class="inftblinformal">
<table class="cellalignment1076" title="parameters of getDatabseNCHARParam() method" summary="First column lists parameters; second column provides description of these parameters." dir="ltr">
<thead>
<tr class="cellalignment1067">
<th class="cellalignment1074" id="r1c1-t388">Parameter</th>
<th class="cellalignment1074" id="r1c2-t388">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r2c1-t388" headers="r1c1-t388">
<pre>
paramIndex
</pre></td>
<td class="cellalignment1075" headers="r2c1-t388 r1c2-t388">Parameter index, first parameter is <code>1</code>, second is <code>2</code>, and so on.</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" -->
<a id="i1082547"></a><a id="LNCPP21489"></a>
<hr />
<h2 class="refsect2">getDate()</h2>
<p>Get the value of a column in the current row as a <code>Date</code> object. Returns the column value; if the value is SQL <code>NULL</code>, the result is <code>NULL</code>.</p>
<p class="subhead1"><a id="LNCPP21490"></a>Syntax</p>
<pre>
Date getDate(
   unsigned int colIndex);
</pre>
<div class="inftblinformal">
<table class="cellalignment1076" title="parameters of getDate() method" summary="First column lists parameters; second column provides description of these parameters." dir="ltr">
<thead>
<tr class="cellalignment1067">
<th class="cellalignment1074" id="r1c1-t389">Parameter</th>
<th class="cellalignment1074" id="r1c2-t389">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r2c1-t389" headers="r1c1-t389">
<pre>
colIndex
</pre></td>
<td class="cellalignment1075" headers="r2c1-t389 r1c2-t389">Column index, first column is <code>1</code>, second is <code>2</code>, and so on.</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" -->
<a id="i1140070"></a><a id="LNCPP21491"></a>
<hr />
<h2 class="refsect2">getDouble()</h2>
<p>Gets the value of a column in the current row as a C++ double. Returns the column value; if the value is SQL <code>NULL</code>, the result is <code>0</code>.</p>
<p class="subhead1"><a id="LNCPP21492"></a>Syntax</p>
<pre>
double getDouble(
   unsigned int colIndex);
</pre>
<div class="inftblinformal">
<table class="cellalignment1076" title="parameters of getDouble() method" summary="First column lists parameters; second column provides description of these parameters." dir="ltr">
<thead>
<tr class="cellalignment1067">
<th class="cellalignment1074" id="r1c1-t390">Parameter</th>
<th class="cellalignment1074" id="r1c2-t390">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r2c1-t390" headers="r1c1-t390">
<pre>
colIndex
</pre></td>
<td class="cellalignment1075" headers="r2c1-t390 r1c2-t390">Column index, first column is <code>1</code>, second is <code>2</code>, and so on.</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" -->
<a id="i1082549"></a><a id="LNCPP21493"></a>
<hr />
<h2 class="refsect2">getFloat()</h2>
<p>Get the value of a column in the current row as a C++ float. Returns the column value; if the value is SQL <code>NULL</code>, the result is <code>0</code>.</p>
<p class="subhead1"><a id="LNCPP21494"></a>Syntax</p>
<pre>
float getFloat(
   unsigned int colIndex);
</pre>
<div class="inftblinformal">
<table class="cellalignment1076" title="parameters of getFloat() method" summary="First column lists parameters; second column provides description of these parameters." dir="ltr">
<thead>
<tr class="cellalignment1067">
<th class="cellalignment1074" id="r1c1-t391">Parameter</th>
<th class="cellalignment1074" id="r1c2-t391">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r2c1-t391" headers="r1c1-t391">
<pre>
colIndex
</pre></td>
<td class="cellalignment1075" headers="r2c1-t391 r1c2-t391">Column index, first column is <code>1</code>, second is <code>2</code>, and so on.</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" -->
<a id="i1082546"></a><a id="LNCPP21495"></a>
<hr />
<h2 class="refsect2">getInt()</h2>
<p>Get the value of a column in the current row as a C++ int. Returns the column value; if the value is SQL <code>NULL</code>, the result is <code>0</code>.</p>
<p class="subhead1"><a id="LNCPP21496"></a>Syntax</p>
<pre>
int getInt(
   unsigned int colIndex);
</pre>
<div class="inftblinformal">
<table class="cellalignment1076" title="parameters of getInt() method" summary="First column lists parameters; second column provides description of these parameters." dir="ltr">
<thead>
<tr class="cellalignment1067">
<th class="cellalignment1074" id="r1c1-t392">Parameter</th>
<th class="cellalignment1074" id="r1c2-t392">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r2c1-t392" headers="r1c1-t392">
<pre>
colIndex
</pre></td>
<td class="cellalignment1075" headers="r2c1-t392 r1c2-t392">Column index, first column is <code>1</code>, second is <code>2</code>, and so on.</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" -->
<a id="i1082696"></a><a id="LNCPP21497"></a>
<hr />
<h2 class="refsect2">getIntervalDS()</h2>
<p>Get the value of a column in the current row as a <code>IntervalDS</code> object. Returns the column value; if the value is SQL <code>NULL</code>, the result is <code>NULL</code>.</p>
<p class="subhead1"><a id="LNCPP21498"></a>Syntax</p>
<pre>
IntervalDS getIntervalDS(
   unsigned int colIndex);
</pre>
<div class="inftblinformal">
<table class="cellalignment1076" title="parameters of getIntervalDS() method" summary="First column lists parameters; second column provides description of these parameters." dir="ltr">
<thead>
<tr class="cellalignment1067">
<th class="cellalignment1074" id="r1c1-t393">Parameter</th>
<th class="cellalignment1074" id="r1c2-t393">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r2c1-t393" headers="r1c1-t393">
<pre>
colIndex
</pre></td>
<td class="cellalignment1075" headers="r2c1-t393 r1c2-t393">Column index, first column is <code>1</code>, second is <code>2</code>, and so on.</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" -->
<a id="i1082703"></a><a id="LNCPP21499"></a>
<hr />
<h2 class="refsect2">getIntervalYM()</h2>
<p>Get the value of a column in the current row as a <code>IntervalYM</code> object. Returns the column value; if the value is SQL <code>NULL</code>, the result is <code>NULL.</code></p>
<p class="subhead1"><a id="LNCPP21500"></a>Syntax</p>
<pre>
IntervalYM getIntervalYM(
   unsigned int colIndex);
</pre>
<div class="inftblinformal">
<table class="cellalignment1076" title="parameters of getIntervalYM() method" summary="First column lists parameters; second column provides description of these parameters." dir="ltr">
<thead>
<tr class="cellalignment1067">
<th class="cellalignment1074" id="r1c1-t394">Parameter</th>
<th class="cellalignment1074" id="r1c2-t394">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r2c1-t394" headers="r1c1-t394">
<pre>
colIndex
</pre></td>
<td class="cellalignment1075" headers="r2c1-t394 r1c2-t394">Column index, first column is <code>1</code>, second is <code>2</code>, and so on.</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" -->
<a id="i1082545"></a><a id="LNCPP21501"></a>
<hr />
<h2 class="refsect2">getMaxColumnSize()</h2>
<p>Returns the value set by <a href="#i1101782">setMaxColumnSize()</a>.</p>
<p class="subhead1"><a id="LNCPP21502"></a>Syntax</p>
<pre>
unsigned int getMaxColumnSize(
   unsigned int colIndex) const;
</pre>
<div class="inftblinformal">
<table class="cellalignment1076" title="parameters of getMaxColumnSize() method" summary="First column lists parameters; second column provides description of these parameters." dir="ltr">
<thead>
<tr class="cellalignment1067">
<th class="cellalignment1074" id="r1c1-t395">Parameter</th>
<th class="cellalignment1074" id="r1c2-t395">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r2c1-t395" headers="r1c1-t395">
<pre>
colIndex
</pre></td>
<td class="cellalignment1075" headers="r2c1-t395 r1c2-t395">Column index, first column is <code>1</code>, second is <code>2</code>, and so on.</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" -->
<a id="i1082540"></a><a id="LNCPP21503"></a>
<hr />
<h2 class="refsect2">getNumArrayRows()</h2>
<p>Returns the actual number of rows fetched in the last array fetch. Used in conjunction with the <a href="#i1082533">next()</a> method. This method cannot be used for non-array fetches.</p>
<p class="subhead1"><a id="LNCPP21504"></a>Syntax</p>
<pre>
unsigned int getNumArrayRows() const;
</pre>
<a id="i1082541"></a><a id="LNCPP21505"></a>
<hr />
<h2 class="refsect2">getNumber()</h2>
<p>Get the value of a column in the current row as a <code>Number</code> object. Returns the column value; if the value is SQL <code>NULL</code>, the result is <code>NULL</code>.</p>
<p class="subhead1"><a id="LNCPP21506"></a>Syntax</p>
<pre>
Number getNumber(
   unsigned int colIndex);
</pre>
<div class="inftblinformal">
<table class="cellalignment1076" title="parameters of getNumber() method" summary="First column lists parameters; second column provides description of these parameters." dir="ltr">
<thead>
<tr class="cellalignment1067">
<th class="cellalignment1074" id="r1c1-t396">Parameter</th>
<th class="cellalignment1074" id="r1c2-t396">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r2c1-t396" headers="r1c1-t396">
<pre>
colIndex
</pre></td>
<td class="cellalignment1075" headers="r2c1-t396 r1c2-t396">Column index, first column is <code>1</code>, second is <code>2</code>, and so on.</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" -->
<a id="i1082539"></a><a id="LNCPP21507"></a>
<hr />
<h2 class="refsect2">getObject()</h2>
<p>Returns a pointer to a <code>PObject</code> holding the column value.</p>
<p class="subhead1"><a id="LNCPP21508"></a>Syntax</p>
<pre>
PObject * getObject(
   unsigned int colIndex);
</pre>
<div class="inftblinformal">
<table class="cellalignment1076" title="parameters of getObject() method" summary="First column lists parameters; second column provides description of these parameters." dir="ltr">
<thead>
<tr class="cellalignment1067">
<th class="cellalignment1074" id="r1c1-t397">Parameter</th>
<th class="cellalignment1074" id="r1c2-t397">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r2c1-t397" headers="r1c1-t397">
<pre>
colIndex
</pre></td>
<td class="cellalignment1075" headers="r2c1-t397 r1c2-t397">Column index; first column is 1, second is 2, and so on.</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" -->
<a id="i1082305"></a><a id="LNCPP21509"></a>
<hr />
<h2 class="refsect2">getRef()</h2>
<p>Get the value of a column in the current row as a <code>RefAny</code>. Retrieving a <code>Ref</code> value does not materialize the data to which <code>Ref</code> refers. Also the <code>Ref</code> value remains valid while the session or connection on which it is created is open. Returns a <code>RefAny</code> holding the column value.</p>
<p class="subhead1"><a id="LNCPP21510"></a>Syntax</p>
<pre>
RefAny getRef(
   unsigned int colIndex);
</pre>
<div class="inftblinformal">
<table class="cellalignment1076" title="parameters of getRef() method" summary="First column lists parameters; second column provides description of these parameters." dir="ltr">
<thead>
<tr class="cellalignment1067">
<th class="cellalignment1074" id="r1c1-t398">Parameter</th>
<th class="cellalignment1074" id="r1c2-t398">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r2c1-t398" headers="r1c1-t398">
<pre>
colIndex
</pre></td>
<td class="cellalignment1075" headers="r2c1-t398 r1c2-t398">Column index, first column is <code>1</code>, second is <code>2</code>, and so on.</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" -->
<a id="i1082538"></a><a id="LNCPP21511"></a>
<hr />
<h2 class="refsect2">getRowid()</h2>
<p>Get the current row id for a <code>SELECT...FOR&nbsp;UPDATE</code> statement. The row id can be bound to a prepared <code>DELETE</code> statement and so on. Returns current <code>rowid</code> for a <code>SELECT...FOR&nbsp;UPDATE</code> statement.</p>
<p class="subhead1"><a id="LNCPP21512"></a>Syntax</p>
<pre>
Bytes getRowid(
   unsigned int colIndex);
</pre>
<div class="inftblinformal">
<table class="cellalignment1076" title="parameters of getRowid() method" summary="First column lists parameters; second column provides description of these parameters." dir="ltr">
<thead>
<tr class="cellalignment1067">
<th class="cellalignment1074" id="r1c1-t399">Parameter</th>
<th class="cellalignment1074" id="r1c2-t399">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r2c1-t399" headers="r1c1-t399">
<pre>
colIndex
</pre></td>
<td class="cellalignment1075" headers="r2c1-t399 r1c2-t399">Column index, first column is <code>1</code>, second is <code>2</code>, and so on.</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" -->
<a id="i1082537"></a><a id="LNCPP21513"></a>
<hr />
<h2 class="refsect2">getRowPosition()</h2>
<p>Get the <code>rowid</code> of the current row position.</p>
<p class="subhead1"><a id="LNCPP21514"></a>Syntax</p>
<pre>
Bytes getRowPosition() const;
</pre>
<a id="i1082589"></a><a id="LNCPP21515"></a>
<hr />
<h2 class="refsect2">getStatement()</h2>
<p>This method returns the <code>statement</code> of the <code>ResultSet</code>.</p>
<p class="subhead1"><a id="LNCPP21516"></a>Syntax</p>
<pre>
Statement* getStatement() const;
</pre>
<a id="i1082601"></a><a id="LNCPP21517"></a>
<hr />
<h2 class="refsect2">getStream()</h2>
<p>This method returns the value of a column in the current row as a <code>Stream</code>.</p>
<p class="subhead1"><a id="LNCPP21518"></a>Syntax</p>
<pre>
Stream * getStream(
   unsigned int colIndex);
</pre>
<div class="inftblinformal">
<table class="cellalignment1076" title="parameters of getStream() method" summary="First column lists parameters; second column provides description of these parameters." dir="ltr">
<thead>
<tr class="cellalignment1067">
<th class="cellalignment1074" id="r1c1-t400">Parameter</th>
<th class="cellalignment1074" id="r1c2-t400">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r2c1-t400" headers="r1c1-t400">
<pre>
colIndex
</pre></td>
<td class="cellalignment1075" headers="r2c1-t400 r1c2-t400">Column index, first column is <code>1</code>, second is <code>2</code>, and so on.</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" -->
<a id="i1082536"></a><a id="LNCPP21519"></a>
<hr />
<h2 class="refsect2">getString()</h2>
<p>Get the value of a column in the current row as a string. Returns the column value; if the value is SQL <code>NULL</code>, the result is an empty string.</p>
<p class="subhead1"><a id="LNCPP21520"></a>Syntax</p>
<pre>
string getString(
   unsigned int colIndex);
</pre>
<div class="inftblinformal">
<table class="cellalignment1076" title="parameters of getString() method" summary="First column lists parameters; second column provides description of these parameters." dir="ltr">
<thead>
<tr class="cellalignment1067">
<th class="cellalignment1074" id="r1c1-t401">Parameter</th>
<th class="cellalignment1074" id="r1c2-t401">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r2c1-t401" headers="r1c1-t401">
<pre>
colIndex
</pre></td>
<td class="cellalignment1075" headers="r2c1-t401 r1c2-t401">Column index, first column is <code>1</code>, second is <code>2</code>, and so on.</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" -->
<a id="i1082535"></a><a id="LNCPP21521"></a>
<hr />
<h2 class="refsect2">getTimestamp()</h2>
<p>Get the value of a column in the current row as a Timestamp object. Returns the column value; if the value is SQL <code>NULL</code>, the result is <code>NULL</code>.</p>
<p class="subhead1"><a id="LNCPP21522"></a>Syntax</p>
<pre>
Timestamp getTimestamp(
   unsigned int colIndex);
</pre>
<div class="inftblinformal">
<table class="cellalignment1076" title="parameters of getTimestamp() method" summary="First column lists parameters; second column provides description of these parameters." dir="ltr">
<thead>
<tr class="cellalignment1067">
<th class="cellalignment1074" id="r1c1-t402">Parameter</th>
<th class="cellalignment1074" id="r1c2-t402">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r2c1-t402" headers="r1c1-t402">
<pre>
colIndex
</pre></td>
<td class="cellalignment1075" headers="r2c1-t402 r1c2-t402">Column index, first column is <code>1</code>, second is <code>2</code>, and so on.</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" -->
<a id="i1082406"></a><a id="LNCPP21523"></a>
<hr />
<h2 class="refsect2">getUInt()</h2>
<p>Get the value of a column in the current row as a C++ <code>int</code>. Returns the column value; if the value is SQL <code>NULL</code>, the result is <code>0</code>.</p>
<p class="subhead1"><a id="LNCPP21524"></a>Syntax</p>
<pre>
unsigned int getUInt(
   unsigned int colIndex);
</pre>
<div class="inftblinformal">
<table class="cellalignment1076" title="parameters of getUIntl() method" summary="First column lists parameters; second column provides description of these parameters." dir="ltr">
<thead>
<tr class="cellalignment1067">
<th class="cellalignment1074" id="r1c1-t403">Parameter</th>
<th class="cellalignment1074" id="r1c2-t403">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r2c1-t403" headers="r1c1-t403">
<pre>
colIndex
</pre></td>
<td class="cellalignment1075" headers="r2c1-t403 r1c2-t403">Column index, first column is <code>1</code>, second is <code>2</code>, and so on.</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" -->
<a id="CHEHEDJH"></a><a id="LNCPP21525"></a>
<hr />
<h2 class="refsect2">getUString()</h2>
<p>Returns the value as a <code>UString</code>.</p>
<p>This method should be called only if the environment's character set is UTF16, or if <code>setCharset()</code> method has been called to explicitly retrieve UTF16 data.</p>
<p class="subhead1"><a id="LNCPP21526"></a>Syntax</p>
<pre>
UString getUString(
   unsigned int colIndex);
</pre>
<div class="inftblinformal">
<table class="cellalignment1076" title="parameters of getUString() method" summary="First column lists parameters; second column provides description of these parameters." dir="ltr">
<thead>
<tr class="cellalignment1067">
<th class="cellalignment1074" id="r1c1-t404">Parameter</th>
<th class="cellalignment1074" id="r1c2-t404">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r2c1-t404" headers="r1c1-t404">
<pre>
colIndex
</pre></td>
<td class="cellalignment1075" headers="r2c1-t404 r1c2-t404">Column index; first column is 1, second is 2, and so on.</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" -->
<a id="i1120796"></a><a id="LNCPP21527"></a>
<hr />
<h2 class="refsect2">getVector()</h2>
<p>This method returns the column in the current position as a vector. The column should be a collection type (varray or nested table). The SQL type of the elements in the collection should be compatible with the data type of the objects in the vector.</p>
<div class="inftblinformal">
<table class="cellalignment1076" title="versions of getVector() method." summary="First column lists versions of the method; second column provides descriptions of these versions." dir="ltr">
<thead>
<tr class="cellalignment1067">
<th class="cellalignment1074" id="r1c1-t405">Syntax</th>
<th class="cellalignment1074" id="r1c2-t405">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r2c1-t405" headers="r1c1-t405">
<pre>
void getVector(
   ResultSet *rs,
   unsigned int colIndex,
   vector&lt;BDouble&gt; &amp;vect);
</pre></td>
<td class="cellalignment1075" headers="r2c1-t405 r1c2-t405">Used for <code>BDouble</code> vectors.</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r3c1-t405" headers="r1c1-t405">
<pre>
void getVector(
   ResultSet *rs,
   unsigned int colIndex,
   vector&lt;Bfile&gt; &amp;vect);
</pre></td>
<td class="cellalignment1075" headers="r3c1-t405 r1c2-t405">Used for <code>Bfile</code> vectors.</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r4c1-t405" headers="r1c1-t405">
<pre>
void getVector(
   ResultSet *rs,
   unsigned int colIndex,
   vector&lt;BFloat&gt; &amp;vect);
</pre></td>
<td class="cellalignment1075" headers="r4c1-t405 r1c2-t405">Used for <code>BFloat</code> vectors.</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r5c1-t405" headers="r1c1-t405">
<pre>
void getVector(
   ResultSet *rs,
   unsigned int colIndex,
   vector&lt;Blob&gt; &amp;vect);
</pre></td>
<td class="cellalignment1075" headers="r5c1-t405 r1c2-t405">Used for <code>Blob</code> vectors.</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r6c1-t405" headers="r1c1-t405">
<pre>
void getVector(
   ResultSet *rs,
   unsigned int colIndex,
   vector&lt;Clob&gt; &amp;vect);
</pre></td>
<td class="cellalignment1075" headers="r6c1-t405 r1c2-t405">Used for <code>Clob</code> vectors.</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r7c1-t405" headers="r1c1-t405">
<pre>
void getVector(
   ResultSet *rs,
   unsigned int colIndex,
   vector&lt;Date&gt; &amp;vect);
</pre></td>
<td class="cellalignment1075" headers="r7c1-t405 r1c2-t405">Used for vectors of <a href="reference013.htm#i1079044">Date Class</a>.</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r8c1-t405" headers="r1c1-t405">
<pre>
void getVector(
   ResultSet *rs,
   unsigned int colIndex,
   vector&lt;double&gt; &amp;vect);
</pre></td>
<td class="cellalignment1075" headers="r8c1-t405 r1c2-t405">Used for vectors of <code>double</code> type.</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r9c1-t405" headers="r1c1-t405">
<pre>
void getVector(
   ResultSet *rs,
   unsigned int colIndex,
   vector&lt;float&gt; &amp;vect);
</pre></td>
<td class="cellalignment1075" headers="r9c1-t405 r1c2-t405">Used for vectors of <code>float</code> type.</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r10c1-t405" headers="r1c1-t405">
<pre>
void getVector(
   ResultSet *rs,
   unsigned int colIndex,
   vector&lt;int&gt; &amp;vect);
</pre></td>
<td class="cellalignment1075" headers="r10c1-t405 r1c2-t405">Used for vectors of <code>int</code> type.</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r11c1-t405" headers="r1c1-t405">
<pre>
void getVector(
   ResultSet *rs,
   unsigned int colIndex,
   vector&lt;IntervalDS&gt; &amp;vect);
</pre></td>
<td class="cellalignment1075" headers="r11c1-t405 r1c2-t405">Used for vectors of <a href="reference015.htm#i1066767">IntervalDS Class</a>.</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r12c1-t405" headers="r1c1-t405">
<pre>
void getVector(
   ResultSet *rs,
   unsigned int colIndex,
   vector&lt;IntervalYM&gt; &amp;vect);
</pre></td>
<td class="cellalignment1075" headers="r12c1-t405 r1c2-t405">Used for vectors of <a href="reference016.htm#i1080017">IntervalYM Class</a>.</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r13c1-t405" headers="r1c1-t405">
<pre>
void getVector(
   ResultSet *rs,
   unsigned int colIndex,
   vector&lt;Number&gt; &amp;vect);
</pre></td>
<td class="cellalignment1075" headers="r13c1-t405 r1c2-t405">Used for vectors of <a href="reference022.htm#i1018892">Number Class</a>.</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r14c1-t405" headers="r1c1-t405">
<pre>
void getVector(
   ResultSet *rs,
   unsigned int colIndex,
   vector&lt;Ref&lt;T&gt;&gt; &amp;vect);
</pre></td>
<td class="cellalignment1075" headers="r14c1-t405 r1c2-t405">Available only on platforms where partial ordering of function templates is supported. This function may be deprecated in the future. <a href="#i1121213">getVectorOfRefs()</a> can be used instead.</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r15c1-t405" headers="r1c1-t405">
<pre>
void getVector(
   ResultSet *rs,
   unsigned int colIndex,
   vector&lt;RefAny&gt; &amp;vect);
</pre></td>
<td class="cellalignment1075" headers="r15c1-t405 r1c2-t405">Used for vectors of <a href="reference026.htm#i1109327">RefAny Class</a>.</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r16c1-t405" headers="r1c1-t405">
<pre>
void getVector(
   ResultSet *rs,
   unsigned int colIndex,
   vector&lt;string&gt; &amp;vect);
</pre></td>
<td class="cellalignment1075" headers="r16c1-t405 r1c2-t405">Used for vectors of <code>string</code> type.</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r17c1-t405" headers="r1c1-t405">
<pre>
void getVector(
   ResultSet *rs,
   unsigned int colIndex,
   vector&lt;T *&gt; &amp;vect);
</pre></td>
<td class="cellalignment1075" headers="r17c1-t405 r1c2-t405">Intended for use on platforms where partial ordering of function templates is supported.</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r18c1-t405" headers="r1c1-t405">
<pre>
void getVector(
   ResultSet *rs,
   unsigned int colIndex,
   vector&lt;T&gt; &amp;vect);
</pre></td>
<td class="cellalignment1075" headers="r18c1-t405 r1c2-t405">Intended for use on platforms where partial ordering of function templates is not supported, such as Windows NT and z/OS.</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r19c1-t405" headers="r1c1-t405">
<pre>
void getVector(
   ResultSet *rs,
   unsigned int colIndex,
   vector&lt;Timestamp&gt; &amp;vect);
</pre></td>
<td class="cellalignment1075" headers="r19c1-t405 r1c2-t405">Used for vectors of <a href="reference033.htm#i1118557">Timestamp Class</a>.</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r20c1-t405" headers="r1c1-t405">
<pre>
void getVector(
   ResultSet *rs,
   unsigned int colIndex,
   vector&lt;unsigned int&gt; &amp;vect);
</pre></td>
<td class="cellalignment1075" headers="r20c1-t405 r1c2-t405">Used for vectors of <code>unsigned int</code> type.</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r21c1-t405" headers="r1c1-t405">
<pre>
void getVector(
   ResultSet *rs,
   unsigned int colIndex,
   vector&lt;UString&gt; &amp;vect);
</pre></td>
<td class="cellalignment1075" headers="r21c1-t405 r1c2-t405">Used for vectors of <code>UString</code> Class; globalization enabled.</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" -->
<div class="inftblinformal">
<table class="cellalignment1076" title="parameters of getVector() method" summary="First column lists parameters; second column provides description of these parameters." dir="ltr">
<thead>
<tr class="cellalignment1067">
<th class="cellalignment1074" id="r1c1-t406">Parameter</th>
<th class="cellalignment1074" id="r1c2-t406">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r2c1-t406" headers="r1c1-t406">
<pre>
rs
</pre></td>
<td class="cellalignment1075" headers="r2c1-t406 r1c2-t406">The result set</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r3c1-t406" headers="r1c1-t406">
<pre>
colIndex
</pre></td>
<td class="cellalignment1075" headers="r3c1-t406 r1c2-t406">Column index, first column is <code>1</code>, second is <code>2</code>, and so on.</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r4c1-t406" headers="r1c1-t406">
<pre>
vect
</pre></td>
<td class="cellalignment1075" headers="r4c1-t406 r1c2-t406">The reference to the vector (<code>OUT</code> parameter).</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" -->
<a id="i1121213"></a><a id="LNCPP21528"></a>
<hr />
<h2 class="refsect2">getVectorOfRefs()</h2>
<p>Returns the column in the current position as a vector of <code>REF</code>s. The column should be a collection type (varray or nested table) of <code>REF</code>s. It is recommend to use this function instead of specialized method <a href="reference020.htm#i1070965">getVector()</a> for <code>Ref&lt;T&gt;</code>.</p>
<p class="subhead1"><a id="LNCPP21529"></a>Syntax</p>
<pre>
void getVectorOfRefs(
   ResultSet *rs,
   unsigned int colIndex,
   vector&lt; Ref&lt;T&gt; &gt; &amp;vect);
</pre>
<div class="inftblinformal">
<table class="cellalignment1076" title="parameters of getVectorOfRefs() method" summary="First column lists parameters; second column provides description of these parameters." dir="ltr">
<thead>
<tr class="cellalignment1067">
<th class="cellalignment1074" id="r1c1-t407">Parameter</th>
<th class="cellalignment1074" id="r1c2-t407">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r2c1-t407" headers="r1c1-t407">
<pre>
rs
</pre></td>
<td class="cellalignment1075" headers="r2c1-t407 r1c2-t407">The result set</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r3c1-t407" headers="r1c1-t407">
<pre>
colIndex
</pre></td>
<td class="cellalignment1075" headers="r3c1-t407 r1c2-t407">Column index, first column is <code>1</code>, second is <code>2</code>, and so on.</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r4c1-t407" headers="r1c1-t407">
<pre>
vect
</pre></td>
<td class="cellalignment1075" headers="r4c1-t407 r1c2-t407">The reference to the vector of <code>REF</code>s (<code>OUT</code> parameter).</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" -->
<a id="i1082534"></a><a id="LNCPP21530"></a>
<hr />
<h2 class="refsect2">isNull()</h2>
<p>A column may have the value of SQL <code>NULL</code>; <code>isNull()</code> reports whether the last column read had this special value. Note that you must first call <code>get</code><code><span class="codeinlineitalic">xxx</span></code><code>()</code> on a column to try to read its value and then call <code>isNull()</code> to find if the value was the SQL <code>NULL</code>. Returns <code>TRUE</code> if last column read was SQL <code>NULL</code>.</p>
<p class="subhead1"><a id="LNCPP21531"></a>Syntax</p>
<pre>
bool isNull(
   unsigned int colIndex) const;
</pre>
<div class="inftblinformal">
<table class="cellalignment1076" title="parameters of isNull() method" summary="First column lists parameters; second column provides description of these parameters." dir="ltr">
<thead>
<tr class="cellalignment1067">
<th class="cellalignment1074" id="r1c1-t408">Parameter</th>
<th class="cellalignment1074" id="r1c2-t408">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r2c1-t408" headers="r1c1-t408">
<pre>
colIndex
</pre></td>
<td class="cellalignment1075" headers="r2c1-t408 r1c2-t408">Column index, first column is <code>1</code>, second is <code>2</code>, and so on.</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" -->
<a id="i1106789"></a><a id="LNCPP21532"></a>
<hr />
<h2 class="refsect2">isTruncated()</h2>
<p>This method checks whether the value of the parameter is truncated. If the value of the parameter is truncated, then <code>TRUE</code> is returned; otherwise, <code>FALSE</code> is returned.</p>
<p class="subhead1"><a id="LNCPP21533"></a>Syntax</p>
<pre>
bool isTruncated(
   unsigned int paramIndex) const;
</pre>
<div class="inftblinformal">
<table class="cellalignment1076" title="parameters of isTruncated() method" summary="First column lists parameters; second column provides description of these parameters." dir="ltr">
<thead>
<tr class="cellalignment1067">
<th class="cellalignment1074" id="r1c1-t409">Parameter</th>
<th class="cellalignment1074" id="r1c2-t409">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r2c1-t409" headers="r1c1-t409">
<pre>
paramIndex
</pre></td>
<td class="cellalignment1075" headers="r2c1-t409 r1c2-t409">Parameter index, first parameter is <code>1</code>, second is <code>2</code>, and so on.</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" -->
<a id="i1082533"></a><a id="LNCPP21534"></a>
<hr />
<h2 class="refsect2">next()</h2>
<p>This method fetches a specified number of rows, <code>numRows</code>, from a previously executed query, and reports the <code>Status</code> of this fetch as defined in <a href="#BBABCCHB">Table 13-38</a>.</p>
<p>For non-streamed mode, <a href="#i1082533">next()</a> only returns the status of <code>DATA_AVAILABLE</code> or <code>END_OF_FETCH</code>.</p>
<ul>
<li>
<p>When fetching one row at a time (<code>numRows</code>=1), process the data using <code>get</code><code><span class="codeinlineitalic">xxx</span></code><code>()</code> methods.</p>
</li>
<li>
<p>When fetching several rows at once (<code>numRows&gt;1</code>), as in an Array Fetch, you must use the <a href="#i1082531">setDataBuffer()</a> method to specify the location of your preallocated buffers before invoking <a href="#i1082533">next()</a>.</p>
</li>
</ul>
<p>Up to <code>numRows</code> data records would populate the buffers specified by the <a href="#i1082531">setDataBuffer()</a> call. To determine exactly how many records were returned, use the <a href="#i1082540">getNumArrayRows()</a> method.</p>
<p class="subhead1"><a id="LNCPP21535"></a>Syntax</p>
<pre>
Status next(
   unsigned int numRows =1);
</pre>
<div class="inftblinformal">
<table class="cellalignment1076" title="parameters of next() method" summary="First column lists parameters; second column provides description of these parameters." dir="ltr">
<thead>
<tr class="cellalignment1067">
<th class="cellalignment1074" id="r1c1-t410">Parameter</th>
<th class="cellalignment1074" id="r1c2-t410">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r2c1-t410" headers="r1c1-t410">
<pre>
numRows
</pre></td>
<td class="cellalignment1075" headers="r2c1-t410 r1c2-t410">Number of rows to fetch for array fetches.</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" -->
<a id="i1106935"></a><a id="LNCPP21536"></a>
<hr />
<h2 class="refsect2">preTruncationLength()</h2>
<p>Returns the actual length of the parameter before truncation.</p>
<p class="subhead1"><a id="LNCPP21537"></a>Syntax</p>
<pre>
int preTruncationLength(
   unsigned int paramIndex) const;
</pre>
<div class="inftblinformal">
<table class="cellalignment1076" title="parameters of preTruncationLength() method" summary="First column lists parameters; second column provides description of these parameters." dir="ltr">
<thead>
<tr class="cellalignment1067">
<th class="cellalignment1074" id="r1c1-t411">Parameter</th>
<th class="cellalignment1074" id="r1c2-t411">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r2c1-t411" headers="r1c1-t411">
<pre>
paramIndex
</pre></td>
<td class="cellalignment1075" headers="r2c1-t411 r1c2-t411">Parameter index, first parameter is <code>1</code>, second is <code>2</code>, and so on.</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" -->
<a id="i1082622"></a><a id="LNCPP21538"></a>
<hr />
<h2 class="refsect2">setBinaryStreamMode()</h2>
<p>Defines that a column is to be returned as a binary stream by the <code>getStream</code> method.</p>
<p class="subhead1"><a id="LNCPP21539"></a>Syntax</p>
<pre>
void setBinaryStreamMode(
   unsigned int colIndex,
   unsigned int size);
</pre>
<div class="inftblinformal">
<table class="cellalignment1076" title="parameters of setBinaryStreamMode() method" summary="First column lists parameters; second column provides description of these parameters." dir="ltr">
<thead>
<tr class="cellalignment1067">
<th class="cellalignment1074" id="r1c1-t412">Parameter</th>
<th class="cellalignment1074" id="r1c2-t412">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r2c1-t412" headers="r1c1-t412">
<pre>
colIndex
</pre></td>
<td class="cellalignment1075" headers="r2c1-t412 r1c2-t412">Column index, first column is <code>1</code>, second is <code>2</code>, and so on.</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r3c1-t412" headers="r1c1-t412">
<pre>
size
</pre></td>
<td class="cellalignment1075" headers="r3c1-t412 r1c2-t412">The amount of data to be read as a binary stream.</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" -->
<a id="i1082629"></a><a id="LNCPP21540"></a>
<hr />
<h2 class="refsect2">setCharacterStreamMode()</h2>
<p>Defines that a column is to be returned as a character stream by the <a href="reference009.htm#i1089333">getStream()</a> method.</p>
<p class="subhead1"><a id="LNCPP21541"></a>Syntax</p>
<pre>
void setCharacterStreamMode(
   unsigned int colIndex,
   unsigned int size);
</pre>
<div class="inftblinformal">
<table class="cellalignment1076" title="parameters of setCharacterStreamMode() method" summary="First column lists parameters; second column provides description of these parameters." dir="ltr">
<thead>
<tr class="cellalignment1067">
<th class="cellalignment1074" id="r1c1-t413">Parameter</th>
<th class="cellalignment1074" id="r1c2-t413">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r2c1-t413" headers="r1c1-t413">
<pre>
colIndex
</pre></td>
<td class="cellalignment1075" headers="r2c1-t413 r1c2-t413">Column index, first column is <code>1</code>, second is <code>2</code>, and so on.</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r3c1-t413" headers="r1c1-t413">
<pre>
size
</pre></td>
<td class="cellalignment1075" headers="r3c1-t413 r1c2-t413">The amount of data to be read as a character stream.</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" -->
<a id="i1082532"></a><a id="LNCPP21542"></a>
<hr />
<h2 class="refsect2">setCharSet()</h2>
<p>Overrides the default character set for the specified column. Data is converted from the database character set to the specified character set for this column.</p>
<p class="subhead1"><a id="LNCPP21543"></a>Syntax</p>
<pre>
void setCharSet(
   unsigned int colIndex,
   string charSet);
</pre>
<div class="inftblinformal">
<table class="cellalignment1076" title="parameters of setCharSet() method" summary="First column lists parameters; second column provides description of these parameters." dir="ltr">
<thead>
<tr class="cellalignment1067">
<th class="cellalignment1074" id="r1c1-t414">Parameter</th>
<th class="cellalignment1074" id="r1c2-t414">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r2c1-t414" headers="r1c1-t414">
<pre>
colIndex
</pre></td>
<td class="cellalignment1075" headers="r2c1-t414 r1c2-t414">Column index, first column is <code>1</code>, second is <code>2</code>, and so on.</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r3c1-t414" headers="r1c1-t414">
<pre>
charSet
</pre></td>
<td class="cellalignment1075" headers="r3c1-t414 r1c2-t414">Desired character set, as a string.</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" -->
<a id="CACCCDFG"></a><a id="LNCPP21544"></a>
<hr />
<h2 class="refsect2">setCharSetUString()</h2>
<p>Specifies the character set value as a <code>UString</code> in which the data is returned.</p>
<p class="subhead1"><a id="LNCPP21545"></a>Syntax</p>
<pre>
UString setCharSetUString(
   unsigned int colIndex,
   const UString &amp;charSet);
</pre>
<div class="inftblinformal">
<table class="cellalignment1076" title="parameters of setCharSetUString() method" summary="First column lists parameters; second column provides description of these parameters." dir="ltr">
<thead>
<tr class="cellalignment1067">
<th class="cellalignment1074" id="r1c1-t415">Parameter</th>
<th class="cellalignment1074" id="r1c2-t415">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r2c1-t415" headers="r1c1-t415">
<pre>
colIndex
</pre></td>
<td class="cellalignment1075" headers="r2c1-t415 r1c2-t415">Column index, first column is <code>1</code>, second is <code>2</code>, and so on.</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r3c1-t415" headers="r1c1-t415">
<pre>
charSet
</pre></td>
<td class="cellalignment1075" headers="r3c1-t415 r1c2-t415">Desired character set, as a string.</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" -->
<a id="i1131450"></a><a id="LNCPP21546"></a>
<hr />
<h2 class="refsect2">setDatabaseNCHARParam()</h2>
<p>If the parameter is going to be retrieved from a column that contains data in the database's <code>NCHAR</code> character set, then OCCI must be informed by passing a <code>TRUE</code> value. A <code>FALSE</code> can be passed to restore the default.</p>
<p class="subhead1"><a id="LNCPP21547"></a>Syntax</p>
<pre>
void setDatabaseNCHARParam(
   unsigned int paramIndex, 
   bool isNCHAR);
</pre>
<div class="inftblinformal">
<table class="cellalignment1076" title="parameters of setDatabaseNCHARParam() method" summary="First column lists parameters; second column provides description of these parameters." dir="ltr">
<thead>
<tr class="cellalignment1067">
<th class="cellalignment1074" id="r1c1-t416">Parameter</th>
<th class="cellalignment1074" id="r1c2-t416">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r2c1-t416" headers="r1c1-t416">
<pre>
paramIndex
</pre></td>
<td class="cellalignment1075" headers="r2c1-t416 r1c2-t416">Parameter index, first parameter is <code>1</code>, second is <code>2</code>, and so on.</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r3c1-t416" headers="r1c1-t416">
<pre>
isNCHAR
</pre></td>
<td class="cellalignment1075" headers="r3c1-t416 r1c2-t416"><code>TRUE</code> or <code>FALSE.</code></td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" -->
<a id="i1082531"></a><a id="LNCPP21548"></a>
<hr />
<h2 class="refsect2">setDataBuffer()</h2>
<p>Specifies a data buffer where data would be fetched or bound. The <code><span class="codeinlineitalic">buffer</span></code> parameter is a pointer to a user allocated data buffer. The current length of data must be specified in the <code>length</code> parameter. The amount of data should not exceed the <code><span class="codeinlineitalic">size</span></code> parameter. Finally, <code>type</code> is the data type of the data. Only non OCCI and non C++ specific types can be used, such as STL string. OCCI classes like <code>Bytes</code> and <code>Date</code> cannot be used.</p>
<p>If <a href="#i1082531">setDataBuffer()</a> is used to fetch data for array fetches, it should be called only once for each result set. Data for each row is assumed to be at <code>buffer (i- 1)</code>location, where <code>i</code> is the row number. Similarly, the length of the data would be assumed to be at <code>(length+(i-1)).</code></p>
<p class="subhead1"><a id="LNCPP21549"></a>Syntax</p>
<pre>
void setDataBuffer(
   unsigned int colIndex,
   void *buffer,
   Type type,
   sb4 size = 0,
   ub2 *length = NULL,
   sb2 *ind = NULL,
   ub2 *rc = NULL);
</pre>
<div class="inftblinformal">
<table class="cellalignment1076" title="parameters of setDataBuffer() method" summary="First column lists parameters; second column provides description of these parameters." dir="ltr">
<thead>
<tr class="cellalignment1067">
<th class="cellalignment1074" id="r1c1-t417">Parameter</th>
<th class="cellalignment1074" id="r1c2-t417">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r2c1-t417" headers="r1c1-t417">
<pre>
colIndex
</pre></td>
<td class="cellalignment1075" headers="r2c1-t417 r1c2-t417">Column index, first column is <code>1</code>, second is <code>2</code>, and so on.</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r3c1-t417" headers="r1c1-t417">
<pre>
buffer
</pre></td>
<td class="cellalignment1075" headers="r3c1-t417 r1c2-t417">Pointer to user-allocated buffer. For array fetches, it should have <code>numRows</code> * size bytes in it. For gather or scatter binds and defines, this structure stores the address of <code>OCIIOVec</code> and the number of <code>OCIIOVec</code> elements that start at that address.</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r4c1-t417" headers="r1c1-t417">
<pre>
type
</pre></td>
<td class="cellalignment1075" headers="r4c1-t417 r1c2-t417">Type of the data that is provided (or retrieved) in the buffer.</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r5c1-t417" headers="r1c1-t417">
<pre>
size
</pre></td>
<td class="cellalignment1075" headers="r5c1-t417 r1c2-t417">Size of the data buffer. For array fetches, it is the size of each element of the data items.</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r6c1-t417" headers="r1c1-t417">
<pre>
length
</pre></td>
<td class="cellalignment1075" headers="r6c1-t417 r1c2-t417">Pointer to the length of data in the buffer; for array fetches, it should be an array of length data for each buffer element; the size of the array should be equal to <code>arrayLength.</code></td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r7c1-t417" headers="r1c1-t417">
<pre>
ind
</pre></td>
<td class="cellalignment1075" headers="r7c1-t417 r1c2-t417">Pointer to an indicator variable or array (<code>IN</code>/<code>OUT</code>).</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r8c1-t417" headers="r1c1-t417">
<pre>
rc
</pre></td>
<td class="cellalignment1075" headers="r8c1-t417 r1c2-t417">Pointer to array of column level return codes (<code>OUT</code>).</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" -->
<a id="i1082572"></a><a id="LNCPP21550"></a>
<hr />
<h2 class="refsect2">setErrorOnNull()</h2>
<p>This method enables/disables exceptions for reading of <code>NULL</code> values on <code>colIndex</code> column of the result set.</p>
<p class="subhead1"><a id="LNCPP21551"></a>Syntax</p>
<pre>
void setErrorOnNull(
   unsigned int colIndex,
   bool causeException);
</pre>
<div class="inftblinformal">
<table class="cellalignment1076" title="parameters of setErrorOnNull() method" summary="First column lists parameters; second column provides description of these parameters." dir="ltr">
<thead>
<tr class="cellalignment1067">
<th class="cellalignment1074" id="r1c1-t418">Parameter</th>
<th class="cellalignment1074" id="r1c2-t418">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r2c1-t418" headers="r1c1-t418">
<pre>
colIndex
</pre></td>
<td class="cellalignment1075" headers="r2c1-t418 r1c2-t418">Column index, first column is <code>1</code>, second is <code>2</code>, and so on.</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r3c1-t418" headers="r1c1-t418">
<pre>
causeException
</pre></td>
<td class="cellalignment1075" headers="r3c1-t418 r1c2-t418">Enable exceptions if <code>TRUE</code>. Disable if <code>FALSE.</code></td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" -->
<a id="i1106692"></a><a id="LNCPP21552"></a>
<hr />
<h2 class="refsect2">setErrorOnTruncate()</h2>
<p>This method enables/disables exceptions when truncation occurs.</p>
<p class="subhead1"><a id="LNCPP21553"></a>Syntax</p>
<pre>
void setErrorOnTruncate(
   unsigned int paramIndex,
   bool causeException);
</pre>
<div class="inftblinformal">
<table class="cellalignment1076" title="parameters of setErrorOnTrancate() method" summary="First column lists parameters; second column provides description of these parameters." dir="ltr">
<thead>
<tr class="cellalignment1067">
<th class="cellalignment1074" id="r1c1-t419">Parameter</th>
<th class="cellalignment1074" id="r1c2-t419">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r2c1-t419" headers="r1c1-t419">
<pre>
paramIndex
</pre></td>
<td class="cellalignment1075" headers="r2c1-t419 r1c2-t419">Parameter index, first parameter is <code>1</code>, second is <code>2</code>, and so on.</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r3c1-t419" headers="r1c1-t419">
<pre>
causeException
</pre></td>
<td class="cellalignment1075" headers="r3c1-t419 r1c2-t419">Enable exceptions if <code>TRUE</code>. Disable if <code>FALSE.</code></td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" -->
<a id="BBAEJGFI"></a><a id="LNCPP21898"></a>
<hr />
<h2 class="refsect2">setPrefetchMemorySize()</h2>
<p>Sets the amount of memory that is used internally by OCCI to store data fetched during each round trip to the server. A value of <code>0</code> means that the amount of data fetched during the round trip is constrained by the <code>FetchRowCount</code> parameter. If both parameters are nonzero, the smaller of the two is used.</p>
<p class="subhead1"><a id="LNCPP21899"></a>Syntax</p>
<pre>
void setPrefetchMemorySize(
   unsigned int bytes);
</pre>
<div class="inftblinformal">
<table class="cellalignment1076" title="parameters of setPrefetchMemorySize() method" summary="First column lists parameters; second column provides description of these parameters." dir="ltr">
<thead>
<tr class="cellalignment1067">
<th class="cellalignment1074" id="r1c1-t420">Parameter</th>
<th class="cellalignment1074" id="r1c2-t420">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r2c1-t420" headers="r1c1-t420">
<pre>
bytes
</pre></td>
<td class="cellalignment1075" headers="r2c1-t420 r1c2-t420">Number of bytes used for storing data fetched during each server round trip.</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" -->
<a id="BBAJJCHA"></a><a id="LNCPP21900"></a>
<hr />
<h2 class="refsect2">setPrefetchRowCount()</h2>
<p>Sets the number of rows that are fetched internally by OCCI during each round trip to the server. A value of <code>0</code> means that the amount of data fetched during the round trip is constrained by the <code>FetchMemorySize</code> parameter. If both parameters are nonzero, the smaller of the two is used. If both of these parameters are zero, row count internally defaults to <code>1</code> row and that is the value returned from the <code>getFetchRowCount()</code> method.</p>
<p class="subhead1"><a id="LNCPP21901"></a>Syntax</p>
<pre>
void setPrefetchRowCount(
   unsigned int rowCount);
</pre>
<div class="inftblinformal">
<table class="cellalignment1076" title="parameters of setPrefetchRowCount() method" summary="First column lists parameters; second column provides description of these parameters." dir="ltr">
<thead>
<tr class="cellalignment1067">
<th class="cellalignment1074" id="r1c1-t421">Parameter</th>
<th class="cellalignment1074" id="r1c2-t421">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r2c1-t421" headers="r1c1-t421">
<pre>
rowCount
</pre></td>
<td class="cellalignment1075" headers="r2c1-t421 r1c2-t421">Number of rows to fetch for each round trip to the server.</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" -->
<a id="i1101782"></a><a id="LNCPP21554"></a>
<hr />
<h2 class="refsect2">setMaxColumnSize()</h2>
<p>Specifies the maximum amount of data in bytes to read from a column. It should be based on the environment's character set, in which the <code>env</code> has been created.</p>
<p class="subhead1"><a id="LNCPP21555"></a>Syntax</p>
<pre>
void setMaxColumnSize(
   unsigned int colIndex,
   unsigned int max);
</pre>
<div class="inftblinformal">
<table class="cellalignment1076" title="parameters of setMaxColumnSize() method" summary="First column lists parameters; second column provides description of these parameters." dir="ltr">
<thead>
<tr class="cellalignment1067">
<th class="cellalignment1074" id="r1c1-t422">Parameter</th>
<th class="cellalignment1074" id="r1c2-t422">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r2c1-t422" headers="r1c1-t422">
<pre>
colIndex
</pre></td>
<td class="cellalignment1075" headers="r2c1-t422 r1c2-t422">Column index, first column is <code>1</code>, second is <code>2</code>, and so on.</td>
</tr>
<tr class="cellalignment1067">
<td class="cellalignment1075" id="r3c1-t422" headers="r1c1-t422">
<pre>
max
</pre></td>
<td class="cellalignment1075" headers="r3c1-t422 r1c2-t422">The maximum amount of data in bytes to be read.</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" -->
<a id="i1076893"></a><a id="LNCPP21556"></a>
<hr />
<h2 class="refsect2">status()</h2>
<p>Returns the current <code>Status</code> of the result set, as defined in <a href="#BBABCCHB">Table 13-38</a>. This method can be called repeatedly.</p>
<p class="subhead1"><a id="LNCPP21557"></a>Syntax</p>
<pre>
Status status() const;
</pre></div>
<!-- class="refsect1" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment1066">
<tr>
<td class="cellalignment1075">
<table class="cellalignment1071">
<tr>
<td class="cellalignment1070"><a href="reference026.htm"><img width="24" height="24" src="../../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment1070"><a href="reference028.htm"><img width="24" height="24" src="../../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;1999, 2013,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment1078">
<table class="cellalignment1069">
<tr>
<td class="cellalignment1070"><a href="../../index.htm"><img width="24" height="24" src="../../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment1070"><a href="../../nav/portal_booklist.htm"><img width="24" height="24" src="../../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment1070"><a href="toc.htm"><img width="24" height="24" src="../../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment1070"><a href="index.htm"><img width="24" height="24" src="../../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment1070"><a href="../../nav/mindx.htm"><img width="24" height="24" src="../../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment1070"><a href="../../dcommon/html/feedback.htm"><img width="24" height="24" src="../../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>
</body>
</html>
