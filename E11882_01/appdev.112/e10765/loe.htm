<!DOCTYPE html>
<html lang="en">
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1">
<meta charset="utf-8">
<title>List of Examples</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Version 5.1" />
<meta name="dcterms.created" content="2010-03-08T13:16:29Z" />
<meta name="robots" content="all" />
<meta name="dcterms.title" content="Database Data Cartridge Developer's Guide" />
<meta name="dcterms.identifier" content="E10765-02" />
<meta name="dcterms.isVersionOf" content="ADDCI" />
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;1996, 2010,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved." />
<link rel="Start" href="../../index.htm" title="Home" type="text/html" />
<link rel="Copyright" href="../../dcommon/html/cpyr.htm" title="Copyright" type="text/html" />

<script type="application/javascript"  src="../../dcommon/js/headfoot.js"></script>
<script type="application/javascript"  src="../../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html" />
<link rel="Index" href="index.htm" title="Index" type="text/html" />
<link rel="Prev" href="toc.htm" title="Previous" type="text/html" />
<link rel="Next" href="lof.htm" title="Next" type="text/html" />
<link rel="alternate" href="../e10765.pdf" title="PDF version" type="application/pdf" />
<link rel="schema.dcterms" href="http://purl.org/dc/terms/" />
<link rel="stylesheet" href="../../dcommon/css/fusiondoc.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/header.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/footer.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/fonts.css">
<link rel="stylesheet" href="../../dcommon/css/foundation.css">
<link rel="stylesheet" href="../../dcommon/css/codemirror.css">
<link rel="stylesheet" type="text/css" title="Default" href="../../nav/css/html5.css">
<link rel="stylesheet" href="../../dcommon/css/respond-480-tablet.css">
<link rel="stylesheet" href="../../dcommon/css/respond-768-laptop.css">
<link rel="stylesheet" href="../../dcommon/css/respond-1140-deskop.css">
<script type="application/javascript" src="../../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">2/36</span> <!-- End Header -->
<h1 class="listofeft">List of Examples</h1>
<ul style="list-style-type:none">
<li><a href="obj_types.htm#CHDGIJCD">3-1 Defining a DataStream data type</a></li>
<li><a href="obj_types.htm#CHDDCIDI">3-2 Defining the Type Body</a></li>
<li><a href="obj_types.htm#CHDJHFDB">3-3 Specifying an ODI for an Object Type</a></li>
<li><a href="obj_types.htm#CHDFIEEI">3-4 Assigning and Using OIDs</a></li>
<li><a href="obj_types.htm#CHDEHCJC">3-5 Creating a Type</a></li>
<li><a href="obj_types.htm#CHDDBDEB">3-6 Instantiating a Type Object</a></li>
<li><a href="obj_types.htm#CHDIEHCC">3-7 Implementing a Member Function</a></li>
<li><a href="obj_types.htm#CHDHCEED">3-8 Implementing Functions for Types Without a Simple Id Attributte</a></li>
<li><a href="pl_sql.htm#CIHCJCJB">4-1 Defining an Object Type</a></li>
<li><a href="pl_sql.htm#CIHIFECI">4-2 Defining a "Greatest Common Divisor" Function</a></li>
<li><a href="pl_sql.htm#CIHGAAHI">4-3 Implementing Methods for an Object Type</a></li>
<li><a href="pl_sql.htm#CIHJCGJG">4-4 Invoking Methods; General Syntax</a></li>
<li><a href="pl_sql.htm#CIHGFHGD">4-5 Invoking Methods; SQL Syntax</a></li>
<li><a href="pl_sql.htm#CIHIBBHG">4-6 Invoking Methods; General Syntax</a></li>
<li><a href="pl_sql.htm#CIHHAIGD">4-7 Using the SELF Build-In Paramenter</a></li>
<li><a href="pl_sql.htm#CIHBCEGG">4-8 Setting Variable Values</a></li>
<li><a href="pl_sql.htm#CIHBEFGH">4-9 Creating a Package Specification</a></li>
<li><a href="pl_sql.htm#CIHHCCCI">4-10 Asserting the Purity Level of a Type</a></li>
<li><a href="pl_sql.htm#CIHIFHEH">4-11 Asserting the Purity Level of a Package</a></li>
<li><a href="pl_sql.htm#CIHIDAGA">4-12 Asserting a Default Purity Level for All Type Methods and Package Procedures</a></li>
<li><a href="pl_sql.htm#CIHEEDCB">4-13 Outputing Variable Values to the Terminal, for Debugging</a></li>
<li><a href="pl_sql.htm#CIHDJDJJ">4-14 Dropping Packages and Tables</a></li>
<li><a href="pl_sql.htm#CIHGGHIH">4-15 Recompiling Packages</a></li>
<li><a href="c_cpp_java.htm#BGBJBCFF">5-1 Creating an Alias Library</a></li>
<li><a href="c_cpp_java.htm#BGBDIDHB">5-2 Specifying the Location of the Library Using an Environment Variable</a></li>
<li><a href="c_cpp_java.htm#BGBCCFEE">5-3 Defining the Body of a Package</a></li>
<li><a href="c_cpp_java.htm#BGBJEEGF">5-4 Setting the SID_DESC Entry in the Listener Configuration FIle</a></li>
<li><a href="c_cpp_java.htm#BGBBGEFC">5-5 Updating the Network Substrate Configuration to Refer to External Procedures</a></li>
<li><a href="c_cpp_java.htm#BGBBAJIF">5-6 Using Callbacks</a></li>
<li><a href="lobs.htm#BABBJIJJ">6-1 Creating a CLOB Attribute of a Type</a></li>
<li><a href="lobs.htm#BABGJJFH">6-2 Creating a LOB Object Table</a></li>
<li><a href="lobs.htm#BABHBICA">6-3 Creating LOB Columns in a Table</a></li>
<li><a href="lobs.htm#BABJHDFE">6-4 Selecting a LOB Locator and Assigning it to a Local Variable</a></li>
<li><a href="lobs.htm#BABHDCHH">6-5 Manipulating LOBs with PUT_LINE() and GETLENGTH()</a></li>
<li><a href="lobs.htm#sthref272">6-6 Syntax of EMPTY_CLOB() and EMPTY_CLOB() Functions</a></li>
<li><a href="lobs.htm#BABHDFFG">6-7 Using EMPTY_BLOB() with SQL DML</a></li>
<li><a href="lobs.htm#BABICAAD">6-8 Using EMPTY_CLOB() in PL/SQL Programs</a></li>
<li><a href="lobs.htm#BABEAIFE">6-9 Selecting a LOB from the Database into a Locator</a></li>
<li><a href="lobs.htm#BABDDJGI">6-10 Trimming a CLOB</a></li>
<li><a href="lobs.htm#BABHEHIC">6-11 Defining a PL/SQL External Procedure</a></li>
<li><a href="lobs.htm#BABGDIAJ">6-12 Using Open() and Close() Code Block</a></li>
<li><a href="ext_idx_frmwork.htm#BHCBEFIG">7-1 Declaring a New Table</a></li>
<li><a href="ext_idx_frmwork.htm#BHCDABIJ">7-2 Building a Text Domain Index</a></li>
<li><a href="ext_idx_frmwork.htm#BHCGJIHA">7-3 Using the Contains() Operator</a></li>
<li><a href="dom_idx.htm#BHABFJIG">8-1 Creating an Indextype</a></li>
<li><a href="dom_idx.htm#BHAGCEBA">8-2 Dropping an IndexType</a></li>
<li><a href="dom_idx.htm#BHACJDCF">8-3 Commenting an INDEXTYPE</a></li>
<li><a href="dom_idx.htm#BHAFCECC">8-4 Creating a Domain Index</a></li>
<li><a href="dom_idx.htm#BHAHFCDB">8-5 Changing a Domain Index</a></li>
<li><a href="dom_idx.htm#BHAEBCFC">8-6 Renaming a Domain Index</a></li>
<li><a href="dom_idx.htm#BHAEEHBB">8-7 Rebuilding a Domain Index</a></li>
<li><a href="dom_idx.htm#BHAGEEBA">8-8 Truncating a Domain Index</a></li>
<li><a href="dom_idx.htm#BHAFBGDD">8-9 Dropping a Domain Index</a></li>
<li><a href="dom_idx.htm#BHADEBHA">8-10 Getting the Size of a UROWID Column</a></li>
<li><a href="dom_idx.htm#BHAEIECJ">8-11 Using *_SECONDARY_OBJECTS Views</a></li>
<li><a href="dom_idx.htm#BHAECEIJ">8-12 Using Local Domain Index Methods Within an Indextype</a></li>
<li><a href="dom_idx.htm#BHABAHED">8-13 Creating and Partition an Index</a></li>
<li><a href="dom_idx.htm#BHAIIDIB">8-14 Creating a Local Domain Index</a></li>
<li><a href="dom_idx.htm#sthref377">8-15 Dropping a Local Index Partition</a></li>
<li><a href="dom_idx.htm#BHAFECIE">8-16 Creating a System-Partitioned Table</a></li>
<li><a href="dom_idx.htm#BHAGFFGA">8-17 Inserting Data into a System-Partitioned Table</a></li>
<li><a href="dom_idx.htm#BHACBCJE">8-18 Inserting Data into a System-Partitioned Table Using DATAOBJ_TO_PARTITION</a></li>
<li><a href="dom_idx.htm#BHABACEB">8-19 Inserting Data into a Particular Partition of a Table</a></li>
<li><a href="dom_idx.htm#BHABABIF">8-20 Splitting an Existing Table Partition</a></li>
<li><a href="dom_idx.htm#BHACFFFF">8-21 Calling DML Operations on System-Partitioned Tables</a></li>
<li><a href="dom_idx.htm#BHAGJDAG">8-22 Querying a System-Partitioned Table</a></li>
<li><a href="operators.htm#CHDCGBDC">9-1 Creating an Operator</a></li>
<li><a href="operators.htm#CHDIFGFI">9-2 Dropping an Operator; RESTRICT Option</a></li>
<li><a href="operators.htm#CHDCDEBA">9-3 Dropping an Operator; FORCE Option</a></li>
<li><a href="operators.htm#CHDCBJJE">9-4 Adding a Binding to an Operator</a></li>
<li><a href="operators.htm#CHDBGIBB">9-5 Adding COMMENTs to an Operator</a></li>
<li><a href="operators.htm#CHDEFCGA">9-6 Creating the Contains() Operator</a></li>
<li><a href="operators.htm#CHDFIEGI">9-7 Using the Operator Contains() in a Query</a></li>
<li><a href="operators.htm#CHDIHJFG">9-8 An Incorrect Use of the Operator Contains()</a></li>
<li><a href="operators.htm#CHDFDBCI">9-9 Operator Predicates</a></li>
<li><a href="operators.htm#CHDFDCBC">9-10 Using the Contains() Operator in a Simple Query</a></li>
<li><a href="operators.htm#CHDCEIDE">9-11 Using the Contains() Operator in a Complex Query</a></li>
<li><a href="operators.htm#CHDBBGGJ">9-12 Using the Contains() Operator in a Multiple Table Query</a></li>
<li><a href="operators.htm#CHDDDGFD">9-13 Invoking Indextype Routines for the Contains() Operator Query</a></li>
<li><a href="operators.htm#CHDEJFJD">9-14 Using Operators Outside the WHERE Clause</a></li>
<li><a href="operators.htm#CHDHHDDI">9-15 Implementing the Contains() Operator in Index-Based Functions</a></li>
<li><a href="operators.htm#CHDBFEHA">9-16 Binding the Contains() Operator to the Functional Implementation</a></li>
<li><a href="operators.htm#CHDIFCGD">9-17 Accessing Ancillary Data with the Contains() Operator</a></li>
<li><a href="operators.htm#CHDHBIBJ">9-18 Comparing Ancillary Data with the Contains() Operator</a></li>
<li><a href="operators.htm#CHDGEJDJ">9-19 Implementing Bindings for Computations</a></li>
<li><a href="operators.htm#CHDHHHCD">9-20 Evaluating an Ancillary Operator</a></li>
<li><a href="operators.htm#CHDCJEBH">9-21 Creating an Ancillary Operator Binding</a></li>
<li><a href="ext_optimizer.htm#CHDFFJIB">10-1 Three Predicate Forms that Trigger a Call to the Optimizer</a></li>
<li><a href="ext_optimizer.htm#CHDCFDCF">10-2 Defining a Statistics Type</a></li>
<li><a href="ext_optimizer.htm#CHDIGBIH">10-3 Defining a User-Defined Function</a></li>
<li><a href="ext_optimizer.htm#CHDEIGDJ">10-4 Calling a Selectivity Function Using Literal Arguments</a></li>
<li><a href="ext_optimizer.htm#CHDFHEJH">10-5 Calling a Selectivity Function Using Non-Literal Arguments</a></li>
<li><a href="ext_optimizer.htm#CHDGBEEI">10-6 Calling a Cost Function Using Literal Arguments</a></li>
<li><a href="ext_optimizer.htm#CHDFBFEI">10-7 Calling a Cost Function Using Non-Literal Arguments</a></li>
<li><a href="ext_optimizer.htm#CHDIGECH">10-8 Defining an Operator</a></li>
<li><a href="ext_optimizer.htm#CHDIDIDE">10-9 Calling an Index Cost Function Using Non-Literal Arguments</a></li>
<li><a href="ext_optimizer.htm#CHDCDBAB">10-10 Creating a Table with an Object Type Column</a></li>
<li><a href="ext_optimizer.htm#CHDEICEA">10-11 Associating Statistics with Columns for User-Defined Statistics</a></li>
<li><a href="ext_optimizer.htm#CHDBFCFG">10-12 Associating Statistics with Data Types for User-Defined Statistics</a></li>
<li><a href="ext_optimizer.htm#CHDGGHIB">10-13 Creating an Indextype, an Index and an Operator for User-Defined Statistics</a></li>
<li><a href="ext_optimizer.htm#CHDDHFGE">10-14 Associating Statistics with System-Managed Indextypes</a></li>
<li><a href="ext_optimizer.htm#CHDCFAHB">10-15 Associating Statistics with User-Defined Operators</a></li>
<li><a href="ext_optimizer.htm#CHDBFGDA">10-16 Associating Statistics with Standalone Functions</a></li>
<li><a href="ext_optimizer.htm#CHDEBDHD">10-17 Associating Statistics with Package Functions</a></li>
<li><a href="ext_optimizer.htm#CHDBDEHF">10-18 Associating Statistics with Type Methods</a></li>
<li><a href="ext_optimizer.htm#CHDECCEG">10-19 Associating Statistics with Default Selectivity</a></li>
<li><a href="ext_optimizer.htm#CHDCFABJ">10-20 Associating Statistics with User-Defined Operators</a></li>
<li><a href="ext_optimizer.htm#CHDBCAIG">10-21 Associating Statistics with Standalone Functions</a></li>
<li><a href="ext_optimizer.htm#CHDFCBAB">10-22 Associating Statistics with Package Functions</a></li>
<li><a href="ext_optimizer.htm#CHDJCJJF">10-23 Associating Statistics with Type Methods</a></li>
<li><a href="ext_optimizer.htm#CHDCCFJE">10-24 Associating Statistics with Default Cost</a></li>
<li><a href="ext_optimizer.htm#CHDFHGJA">10-25 Declaring NULL Statistics Associations for Columns and Indexes</a></li>
<li><a href="aggr_functions.htm#CECGABFC">11-1 How User-Defined Aggregate Functions Work</a></li>
<li><a href="aggr_functions.htm#CECHAFJJ">11-2 Implementing the ODCIAggregate Interface</a></li>
<li><a href="aggr_functions.htm#CECHHIGE">11-3 Defining a User-Defined Aggregate Function</a></li>
<li><a href="aggr_functions.htm#CECEFHHG">11-4 Using the SELECT Statement with User-Defined Aggregate Functions</a></li>
<li><a href="aggr_functions.htm#CECGJAEB">11-5 Using the HAVING Clause with User-Defined Aggregate Functions</a></li>
<li><a href="aggr_functions.htm#CECFDFAD">11-6 Using other Query Options with User-Defined Aggregate Functions</a></li>
<li><a href="aggr_functions.htm#CECCFBAI">11-7 Parallel-Enabling a User-Defined Aggregate Function</a></li>
<li><a href="aggr_functions.htm#sthref500">11-8 Using External Memory to Store Aggregate Context</a></li>
<li><a href="aggr_functions.htm#sthref505">11-9 Using User-Defined Aggregates as Analytic Functions</a></li>
<li><a href="aggr_functions.htm#CIHCBBJJ">11-10 Creating Materialized Views</a></li>
<li><a href="aggr_functions.htm#CIHJJDAJ">11-11 Enabling Materialized Views for Query Rewrite</a></li>
<li><a href="aggr_functions.htm#CIHECHID">11-12 Creating and Using a User-Defined Aggregate Function</a></li>
<li><a href="cart_services.htm#CHDJIIJH">12-1 Initializing OCI Handles</a></li>
<li><a href="cart_services.htm#CHDDFJII">12-2 Retrieving Error Information Using OCIErrorGet()</a></li>
<li><a href="pipe_paral_tbl.htm#CIHBGIFJ">13-1 Creating a Collection Type</a></li>
<li><a href="pipe_paral_tbl.htm#CIHECFFI">13-2 Storing a Clob in a Table</a></li>
<li><a href="pipe_paral_tbl.htm#CIHBIIEH">13-3 Creating a Function that Returns a Collection Type</a></li>
<li><a href="pipe_paral_tbl.htm#CIHEJHJB">13-4 Using a Collection Type in a Query</a></li>
<li><a href="pipe_paral_tbl.htm#CIHEGADE">13-5 Declaring a Pipelined Table Function with REF CURSOR Arguments</a></li>
<li><a href="pipe_paral_tbl.htm#CIHIGGCC">13-6 Using a Pipelined Table Function with REF CURSOR Arguments</a></li>
<li><a href="pipe_paral_tbl.htm#CIHCGIAE">13-7 Declaring Pipelined Table Functions for the Interface Approach</a></li>
<li><a href="pipe_paral_tbl.htm#CIHEIAEC">13-8 Declaring Pipelined Table Functions for the Native PL/SQL Approach</a></li>
<li><a href="pipe_paral_tbl.htm#CIHDGJAF">13-9 Implementing a Pipelined Table Function for the Native PL/SQL Approach</a></li>
<li><a href="pipe_paral_tbl.htm#CIHBGDJD">13-10 Pipelining Function Results from One Function to Another</a></li>
<li><a href="pipe_paral_tbl.htm#CIHCGJII">13-11 Querying for AnyType Data</a></li>
<li><a href="pipe_paral_tbl.htm#CIHCEHGC">13-12 Implementing the ODCITableDescribe() Method</a></li>
<li><a href="pipe_paral_tbl.htm#CIHCHGAB">13-13 Using Functions that Return AnyType</a></li>
<li><a href="pipe_paral_tbl.htm#CIHEHBAJ">13-14 Building an Array of Attribute Positions and Save it in a Scan Context</a></li>
<li><a href="pipe_paral_tbl.htm#CIHJCECB">13-15 Using a Table Function to Iteratively Retrieve Rows</a></li>
<li><a href="pipe_paral_tbl.htm#CIHJAEHD">13-16 Using Multiple Invokations of a Table Function</a></li>
<li><a href="pipe_paral_tbl.htm#CIHJBDCA">13-17 Defining REF CURSOR Variables for Table Function Queries</a></li>
<li><a href="pipe_paral_tbl.htm#CIHEAJDG">13-18 Using a REF CURSOR Variable</a></li>
<li><a href="pipe_paral_tbl.htm#CIHICDCB">13-19 Using a REF CURSOR Variable More Effectively</a></li>
<li><a href="pipe_paral_tbl.htm#CIHIFFDH">13-20 Declaring a Table Function with Autonomous Transaction Pragma</a></li>
<li><a href="pipe_paral_tbl.htm#CIHIEICC">13-21 Creating a View over a Table</a></li>
<li><a href="pipe_paral_tbl.htm#CIHDDHDG">13-22 How an INSTEAD OF Trigger is Fired when a Row is Inserted into a View</a></li>
<li><a href="pipe_paral_tbl.htm#CIHBBFBA">13-23 Passing a Set of Rows to a PL/SQL Function in a REF CURSOR</a></li>
<li><a href="pipe_paral_tbl.htm#CIHJHBGA">13-24 Directly Passing Results from a Subquery to a Function</a></li>
<li><a href="pipe_paral_tbl.htm#CIHIFIJG">13-25 Passing a Set of Rows to a PL/SQL Function Through REF CURSOR</a></li>
<li><a href="pipe_paral_tbl.htm#CIHFJFEH">13-26 Invoking a Function that Uses Several REF CURSOR Parameters</a></li>
<li><a href="pipe_paral_tbl.htm#CIHEEJBG">13-27 Using REF CURSOR to Pass Return Values Between Table Functions</a></li>
<li><a href="pipe_paral_tbl.htm#CIHJGDDE">13-28 Explicitly Using a Query REF CURSOR as Table Function Parameter</a></li>
<li><a href="pipe_paral_tbl.htm#sthref579">13-29 Using a REF CURSOR in a Callout</a></li>
<li><a href="pipe_paral_tbl.htm#CIHGECED">13-30 Specifying Data Partitioning for a REF CURSOR Parameter</a></li>
<li><a href="pipe_paral_tbl.htm#CIHEDEFF">13-31 Implementing the StockPivot() Function</a></li>
<li><a href="pipe_paral_tbl.htm#CIHCCJBG">13-32 Using a REF CURSOR to Generate a Table from Another Table</a></li>
<li><a href="pipe_paral_tbl.htm#CIHGIDHB">13-33 Using a REF CURSOR to Scan and Insert</a></li>
<li><a href="pipe_paral_tbl.htm#CIHCAJGD">13-34 Using a REF CURSOR to Read a Set of External FIles</a></li>
<li><a href="pipe_paral_tbl.htm#CIHECDFJ">13-35 Controlling Input Data Streaming</a></li>
<li><a href="pipe_paral_tbl.htm#CIHGDIBD">13-36 Ordering the Input Stream</a></li>
<li><a href="pipe_paral_tbl.htm#CIHDDFGE">13-37 Loading a Domain Index in Parallel</a></li>
<li><a href="pipe_paral_tbl.htm#CIHGHDIB">13-38 Merging the Results from Parallel Domain Index Loads</a></li>
<li><a href="pipe_paral_tbl.htm#CIHDIJDI">13-39 Invoking the Merging of Parallel Domain Index Loads</a></li>
<li><a href="pwr_example.htm#CIAEDEHD">15-1 Creating a Database User for the Power Demand Cartridge</a></li>
<li><a href="pwr_example.htm#CIABCEDC">15-2 Creating PowerGrid_Typ and NumTab_Typ Types for Power Demand Cartridge</a></li>
<li><a href="pwr_example.htm#CIAJAEDB">15-3 Creating PowerDemand_Typ Type for Power Demand Cartridge</a></li>
<li><a href="pwr_example.htm#CIAEIAFE">15-4 Implementing PowerDemand_Typ Type for Power Demand Cartridge</a></li>
<li><a href="pwr_example.htm#CIAFCFJD">15-5 Implementing Power_XXX_Func() Functions for Power Demand Cartridge</a></li>
<li><a href="pwr_example.htm#CIADJEDC">15-6 Implementing Power_XXX() Functions for Power Demand Cartridge</a></li>
<li><a href="pwr_example.htm#CIAFGJIC">15-7 Creating power_idxtype_im Object Type for Power Demand Cartridge</a></li>
<li><a href="pwr_example.htm#CIAIHJBJ">15-8 Registering Interface and Index Functions in Power Demand Cartridge</a></li>
<li><a href="pwr_example.htm#CIAFJFEH">15-9 Registering ODCIIndexCreate() for Power Demand Cartridge</a></li>
<li><a href="pwr_example.htm#CIADADCD">15-10 Registering ODCIIndexDrop() for Power Demand Cartridge</a></li>
<li><a href="pwr_example.htm#CIAEHIJB">15-11 Registering ODCIIndexStart() for Power Demand Cartridge</a></li>
<li><a href="pwr_example.htm#sthref646">15-12 Registering ODCIIndexStart() for Any Queries for Power Demand Cartridge</a></li>
<li><a href="pwr_example.htm#CIAGGBBD">15-13 Registering ODCIIndexFetch() for Power Demand Cartridge</a></li>
<li><a href="pwr_example.htm#CIAEJGFH">15-14 Registering ODCIIndexStart() for Power Demand Cartridge</a></li>
<li><a href="pwr_example.htm#CIAGGDAC">15-15 Registering ODCIIndexInsert() for Power Demand Cartridge</a></li>
<li><a href="pwr_example.htm#CIAIGHCB">15-16 Registering ODCIIndexDelete() for Power Demand Cartridge</a></li>
<li><a href="pwr_example.htm#CIAJDCEC">15-17 Registering ODCIIndexUpdate() for Power Demand Cartridge</a></li>
<li><a href="pwr_example.htm#CIABBAEG">15-18 Registering ODCIIndexGetMetadata() for Power Demand Cartridge</a></li>
<li><a href="pwr_example.htm#sthref660">15-19 Creating Package power_pkg for the Power Demand Cartridge</a></li>
<li><a href="pwr_example.htm#CIAHDCFE">15-20 Creating Indextype power_idxtype for Power Demand Cartridge</a></li>
<li><a href="pwr_example.htm#CIAGEBIC">15-21 Creating Statistics Table PowerCartUserStats for Power Demand Cartridge</a></li>
<li><a href="pwr_example.htm#CIAHBGBI">15-22 Creating power_statistics Object Type Definition for Power Demand Cartridge</a></li>
<li><a href="pwr_example.htm#CIAJCGEJ">15-23 Registering interfaces and Statistics Functions for Power Demand Cartridge</a></li>
<li><a href="pwr_example.htm#CIAFECHD">15-24 Registering ODCIStatsCollect() for Power Demand Cartridge</a></li>
<li><a href="pwr_example.htm#CIACJEIF">15-25 Registering ODCIStatsDelete() for Power Demand Cartridge</a></li>
<li><a href="pwr_example.htm#CIAECBHC">15-26 Registering ODCIStatsCollect() for Power Demand Cartridge</a></li>
<li><a href="pwr_example.htm#CIAJIAAI">15-27 Registering ODCIStatsDelete() for Domain Indexes in Power Demand Cartridge</a></li>
<li><a href="pwr_example.htm#CIAJJJFC">15-28 Implementing Selectivity Function for Power Demand Cartridge</a></li>
<li><a href="pwr_example.htm#CIAJECAH">15-29 Registering ODCIStatsSelectivity() for Queries for Power Demand Cartridge</a></li>
<li><a href="pwr_example.htm#CIABCJAG">15-30 Registering ODCISIndexCost() for Queries for Power Demand Cartridge</a></li>
<li><a href="pwr_example.htm#CIAEDEIG">15-31 Registering ODCIStatsIndexCost() for Any Queries for Power Demand Cartridge</a></li>
<li><a href="pwr_example.htm#CIAHHBJG">15-32 Registering ODCIStatsFunctionCost() for Power Demand Cartridge</a></li>
<li><a href="pwr_example.htm#CIAFGDIF">15-33 Using Statistics Methods with Database Objects for Power Demand Cartridge</a></li>
<li><a href="pwr_example.htm#CIABDGID">15-34 Analyzing Database Objects for the Power Demand Cartridge</a></li>
<li><a href="pwr_example.htm#CIABEGBC">15-35 Creating PowerDemand_Tab Table for Power Demand Cartridge</a></li>
<li><a href="pwr_example.htm#CIAGCGBE">15-36 Populating PowerDemand_Tab Table for Power Demand Cartridge</a></li>
<li><a href="pwr_example.htm#CIAEFDEB">15-37 Computing Grid and Cell Demands for Power Demand Cartridge</a></li>
<li><a href="pwr_example.htm#CIAEIGFE">15-38 Making Equality Queries for Power Demand Cartridge</a></li>
<li><a href="pwr_example.htm#CIAGHACH">15-39 Creating an Index in PowerDemand_Tab Table for Power Demand Cartridge</a></li>
<li><a href="pwr_example.htm#CIAIIFAC">15-40 Making Equality Queries with Index for Power Demand Cartridge</a></li>
<li><a href="psbtree_example.htm#CACFGDEF">16-1 Implementing the EQUALS Operator</a></li>
<li><a href="psbtree_example.htm#CACBEEIH">16-2 Implementing the LESS THAN Operator</a></li>
<li><a href="psbtree_example.htm#CACDGGHF">16-3 Implementing the GREATER THAN Operator</a></li>
<li><a href="psbtree_example.htm#CACGHFEC">16-4 Creating the EQUALS Operator</a></li>
<li><a href="psbtree_example.htm#CACDBEEI">16-5 Creating the LESS THAN Operator</a></li>
<li><a href="psbtree_example.htm#CACHCAHE">16-6 Creating the GREATER THAN Operator</a></li>
<li><a href="psbtree_example.htm#CACCEJJA">16-7 Creating a PSBTREE Index Type</a></li>
<li><a href="psbtree_example.htm#CACEJJHI">16-8 Creating the Implementation Body for PBSTREE</a></li>
<li><a href="psbtree_example.htm#CACBBCJI">16-9 Implementing ODCIGetInterfaces() for PBSTREE in PL/SQL</a></li>
<li><a href="psbtree_example.htm#CACGFBIH">16-10 Implementing ODCIIndexCreate() for PBSTREE in PL/SQL</a></li>
<li><a href="psbtree_example.htm#CACDJCFF">16-11 Implementing ODCIIndexDrop() for PBSTREE in PL/SQL</a></li>
<li><a href="psbtree_example.htm#CACCCEAE">16-12 Implementing ODCIIndexAlter() for PSBTREE in PL/SQL</a></li>
<li><a href="psbtree_example.htm#CACBFDJC">16-13 Implementing ODCIIndexUpdPartMetadata() for PSBTREE in PL/SQL</a></li>
<li><a href="psbtree_example.htm#CACJCGBH">16-14 Implementing ODCIIndexExchangePartition() for PSBTREE in PL/SQL</a></li>
<li><a href="psbtree_example.htm#CACGAHCG">16-15 Registering the Implementation of ODCIIndexInsert()</a></li>
<li><a href="psbtree_example.htm#CACBHAHC">16-16 Registering the Implementation of ODCIIndexDelete()</a></li>
<li><a href="psbtree_example.htm#CACBCCEH">16-17 Registering the Implementation of ODCIIndexUpdate()</a></li>
<li><a href="psbtree_example.htm#CACJADGC">16-18 Registering the Implementation of ODCIIndexStart()</a></li>
<li><a href="psbtree_example.htm#CACEEGIJ">16-19 Registering the Implementation of ODCIIndexFetch()</a></li>
<li><a href="psbtree_example.htm#CACIDHBA">16-20 Registering the Implementation of ODCIIndexClose()</a></li>
<li><a href="psbtree_example.htm#CACBHEBF">16-21 Defining Mappings for the Object Type and Its Null Value</a></li>
<li><a href="psbtree_example.htm#CACCIGGI">16-22 Keeping the Scan State During Fetching Calls</a></li>
<li><a href="psbtree_example.htm#CACJIECE">16-23 Implementing a Common Error Processing Routine in C</a></li>
<li><a href="psbtree_example.htm#CACJJDAC">16-24 Implementing ODCIIndexInsert() for PSBTREE in C</a></li>
<li><a href="psbtree_example.htm#CACIJGIF">16-25 Implementing ODCIIndexDelete() for PSBTREE in C</a></li>
<li><a href="psbtree_example.htm#CACFICAJ">16-26 Implementing ODCIIndexUpdate() for PSBTree in C</a></li>
<li><a href="psbtree_example.htm#CACIFFCE">16-27 Implementing ODCIIndexStart() for PSBTREE in C</a></li>
<li><a href="psbtree_example.htm#CACGCEBA">16-28 Implementing ODCIIndexFetch() for PSBTREE in C</a></li>
<li><a href="psbtree_example.htm#CACBFHDA">16-29 Implementing ODCIIndexClose() for PSBTREE in C</a></li>
<li><a href="psbtree_example.htm#CACGICCC">16-30 Implementing the Indextype for PSBTREE</a></li>
<li><a href="psbtree_example.htm#CACCEACF">16-31 Creating and Populating a Partitioned Table for PSBTREE</a></li>
<li><a href="psbtree_example.htm#CACJJHIG">16-32 Creating a PSBTREE Index on a Column</a></li>
<li><a href="psbtree_example.htm#CACHDCED">16-33 Using PSBTREE Operators in a Query</a></li>
<li><a href="pipelined_example.htm#CHDJJDFC">17-1 Making SQL Declarations for Implementing ODCITableXXX() in C</a></li>
<li><a href="pipelined_example.htm#CHDCFBFC">17-2 Implementing ODCTableXXX() Methods in C</a></li>
<li><a href="pipelined_example.htm#CHDIEJJD">17-3 Making SQL Declarations for Implementing OCITableXXX() in Java</a></li>
<li><a href="pipelined_example.htm#CHDDGDDG">17-4 Implementing ODCITableXXX() Methods in Java</a></li>
<li><a href="ext_opt_ref.htm#sthref765">21-1 Using Statistics Functions in an Extensible Optimizer Interface</a></li>
</ul>
</div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment1236">
<tr>
<td class="cellalignment1243">
<table class="cellalignment1241">
<tr>
<td class="cellalignment1240"><a href="toc.htm"><img width="24" height="24" src="../../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment1240"><a href="lof.htm"><img width="24" height="24" src="../../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;1996, 2010,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment1245">
<table class="cellalignment1239">
<tr>
<td class="cellalignment1240"><a href="../../index.htm"><img width="24" height="24" src="../../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment1240"><a href="../../nav/portal_booklist.htm"><img width="24" height="24" src="../../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment1240"><a href="toc.htm"><img width="24" height="24" src="../../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment1240"><a href="index.htm"><img width="24" height="24" src="../../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment1240"><a href="../../nav/mindx.htm"><img width="24" height="24" src="../../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment1240"><a href="../../dcommon/html/feedback.htm"><img width="24" height="24" src="../../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>
</body>
</html>
