<!DOCTYPE html>
<html lang="en" >
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1">
<meta charset="utf-8">
<title>Pipelined and Parallel Table Functions</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Version 5.1" />
<meta name="dcterms.created" content="2010-03-08T13:16:29Z" />
<meta name="robots" content="all" />
<meta name="dcterms.title" content="Database Data Cartridge Developer's Guide" />
<meta name="dcterms.identifier" content="E10765-02" />
<meta name="dcterms.isVersionOf" content="ADDCI" />
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;1996, 2010,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved." />
<link rel="Start" href="../../index.htm" title="Home" type="text/html" />
<link rel="Copyright" href="../../dcommon/html/cpyr.htm" title="Copyright" type="text/html" />

<script type="application/javascript"  src="../../dcommon/js/headfoot.js"></script>
<script type="application/javascript"  src="../../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html" />
<link rel="Index" href="index.htm" title="Index" type="text/html" />
<link rel="Prev" href="ext_agg_ref.htm" title="Previous" type="text/html" />
<link rel="Next" href="user_man_idx_apnd.htm" title="Next" type="text/html" />
<link rel="alternate" href="../e10765.pdf" title="PDF version" type="application/pdf" />
<link rel="schema.dcterms" href="http://purl.org/dc/terms/" />
<link rel="stylesheet" href="../../dcommon/css/fusiondoc.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/header.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/footer.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/fonts.css">
<link rel="stylesheet" href="../../dcommon/css/foundation.css">
<link rel="stylesheet" href="../../dcommon/css/codemirror.css">
<link rel="stylesheet" type="text/css" title="Default" href="../../nav/css/html5.css">
<link rel="stylesheet" href="../../dcommon/css/respond-480-tablet.css">
<link rel="stylesheet" href="../../dcommon/css/respond-768-laptop.css">
<link rel="stylesheet" href="../../dcommon/css/respond-1140-deskop.css">
<script type="application/javascript" src="../../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">34/36</span> <!-- End Header --><a id="CACGIFIJ"></a><a id="ADDCI4230"></a><a id="i76723"></a>
<h1 class="chapter"><span class="secnum">23</span> Pipelined and Parallel Table Functions</h1>
<p><a id="i76775"></a>This chapter describes the routines that must be implemented to define pipelined and parallel table functions in C.</p>
<p>This chapter contains this topic:</p>
<ul>
<li>
<p><a href="#CACFCHCI">Routines for Pipelined and Parallel Table Functions in C</a></p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1"><span class="bold">See Also</span>:</p>
<a href="pipe_paral_tbl.htm#CECGHGFH">Chapter 13</a> for an overall explanation of pipelined and parallel table functions</div>
<a id="CACFCHCI"></a><a id="ADDCI5141"></a>
<div class="sect1">
<h2 class="sect1">Routines for Pipelined and Parallel Table Functions in C</h2>
<p>The following C methods, summarized in support parallel and pipelined table functions.</p>
<div class="tblformal">
<p class="titleintable"><a id="ADDCI5142"></a><a id="sthref796"></a><a id="sthref797"></a>Table 23-1 Summary of Pipelined and Parallel Table Functions for C</p>
<table class="cellalignment1246" title="Summary of Pipelined and Parallel Table Functions for C" summary="First column gives the name and references of the function, while the second column is a brief description." dir="ltr">
<thead>
<tr class="cellalignment1237">
<th class="cellalignment1247" id="r1c1-t3">Function</th>
<th class="cellalignment1247" id="r1c2-t3">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1237">
<td class="cellalignment1243" id="r2c1-t3" headers="r1c1-t3">
<p><a href="#CHDEIDHJ">ODCITableClose()</a></p>
</td>
<td class="cellalignment1243" headers="r2c1-t3 r1c2-t3">
<p>Performs cleanup operations after scanning a table function.</p>
</td>
</tr>
<tr class="cellalignment1237">
<td class="cellalignment1243" id="r3c1-t3" headers="r1c1-t3">
<p><a href="#CHDDDAEB">ODCITableDescribe()</a></p>
</td>
<td class="cellalignment1243" headers="r3c1-t3 r1c2-t3">
<p>Returns describe information for a table function whose return type is <code>ANYDATASET</code>.</p>
</td>
</tr>
<tr class="cellalignment1237">
<td class="cellalignment1243" id="r4c1-t3" headers="r1c1-t3">
<p><a href="#CHDDEEIB">ODCITableFetch()</a></p>
</td>
<td class="cellalignment1243" headers="r4c1-t3 r1c2-t3">
<p>returns the next batch of rows from a table function.</p>
</td>
</tr>
<tr class="cellalignment1237">
<td class="cellalignment1243" id="r5c1-t3" headers="r1c1-t3">
<p><a href="#CHDDEFAB">ODCITablePrepare()</a></p>
</td>
<td class="cellalignment1243" headers="r5c1-t3 r1c2-t3">
<p>Prepares the scan context and other query information at compile time.</p>
</td>
</tr>
<tr class="cellalignment1237">
<td class="cellalignment1243" id="r6c1-t3" headers="r1c1-t3">
<p><a href="#CHDIJIJJ">ODCITableStart()</a></p>
</td>
<td class="cellalignment1243" headers="r6c1-t3 r1c2-t3">
<p>initializes the scan of a table function.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<a id="CHDEIDHJ"></a><a id="ADDCI5143"></a>
<div class="sect2">
<h3 class="sect2">ODCITableClose()</h3>
<p><code>ODCITableClose</code> performs cleanup operations after scanning a table function.</p>
<p class="subhead2"><a id="ADDCI5144"></a>Syntax</p>
<pre>
MEMBER FUNCTION ODCITableClose(
   self IN &lt;imptype&gt;) 
RETURN NUMBER;
</pre>
<div class="inftblinformal">
<table class="cellalignment1250" title="Parameters of ODCITableClose" summary="First column lists a parameter; second column indicates the IN or OUT binding of the parameter, the third column describes the parameter." dir="ltr">
<thead>
<tr class="cellalignment1237">
<th class="cellalignment1247" id="r1c1-t4">Parameter</th>
<th class="cellalignment1247" id="r1c2-t4">In/Out</th>
<th class="cellalignment1247" id="r1c3-t4">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1237">
<td class="cellalignment1243" id="r2c1-t4" headers="r1c1-t4">
<pre>
self
</pre></td>
<td class="cellalignment1243" headers="r2c1-t4 r1c2-t4">
<pre>
IN
</pre></td>
<td class="cellalignment1243" headers="r2c1-t4 r1c3-t4">The scan context set up by previous scan routine invocation</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" -->
<p class="subhead2"><a id="ADDCI5145"></a>Returns</p>
<p><code>ODCIConst.Success</code> on success, <code>ODCIConst.Error</code> otherwise.</p>
<p class="subhead2"><a id="ADDCI5146"></a>Usage Notes</p>
<ul>
<li>
<p>Oracle invokes <code>ODCITableClose</code> after the last fetch call. The scan context is passed in as a parameter. <code>ODCITableClose</code> then performs any necessary cleanup operations, such as freeing memory.</p>
</li>
<li>
<p>If ODCITablePrepare is implemented, this routine is only called one time, at the end of query execution, rather than each time the table function exits.</p>
</li>
</ul>
</div>
<!-- class="sect2" -->
<a id="CHDDDAEB"></a><a id="ADDCI5147"></a>
<div class="sect2">
<h3 class="sect2">ODCITableDescribe()</h3>
<p><code>ODCITableDescribe</code> returns describe information for a table function whose return type is <code>ANYDATASET</code>.</p>
<p class="subhead2"><a id="ADDCI5148"></a>Syntax</p>
<pre>
STATIC FUNCTION ODCITableDescribe(
   rtype OUT ANYTYPE, 
   &lt;args&gt;) 
RETURN NUMBER;
</pre>
<div class="inftblinformal">
<table class="cellalignment1250" title="Parameters of ODCITableDescribe" summary="First column lists a parameter; second column indicates the IN or OUT binding of the parameter, the third column describes the parameter." dir="ltr">
<thead>
<tr class="cellalignment1237">
<th class="cellalignment1247" id="r1c1-t5">Parameter</th>
<th class="cellalignment1247" id="r1c2-t5">In/Out</th>
<th class="cellalignment1247" id="r1c3-t5">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1237">
<td class="cellalignment1243" id="r2c1-t5" headers="r1c1-t5">
<pre>
rtype
</pre></td>
<td class="cellalignment1243" headers="r2c1-t5 r1c2-t5">
<pre>
OUT
</pre></td>
<td class="cellalignment1243" headers="r2c1-t5 r1c3-t5">The <code>AnyType</code> value that describes the returned rows from the table function</td>
</tr>
<tr class="cellalignment1237">
<td class="cellalignment1243" id="r3c1-t5" headers="r1c1-t5">
<pre>
args
</pre></td>
<td class="cellalignment1243" headers="r3c1-t5 r1c2-t5">
<pre>
IN
</pre></td>
<td class="cellalignment1243" headers="r3c1-t5 r1c3-t5">The set of zero or more user specified arguments for the table function.</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" -->
<p class="subhead2"><a id="ADDCI5149"></a>Returns</p>
<p><code>ODCIConst.Success</code> on success, <code>ODCIConst.Error</code> otherwise.</p>
<p class="subhead2"><a id="ADDCI5150"></a>Usage Notes</p>
<ul>
<li>
<p>If the optional routine <code>ODCITableDescribe</code> is implemented, Oracle invokes it at query compilation time to retrieve the specific type information.</p>
</li>
<li>
<p>This interface is applicable only for table functions whose return type is <code>ANYDATASET</code>. The format of elements within the returned collection is conveyed to Oracle by returning an instance of <code>ANYTYPE</code>. The <code>ANYTYPE</code> instance specifies the actual structure of the returned rows of the specific query.</p>
</li>
<li>
<p><code>ANYTYPE</code> provides a data type to model the metadata of a row: the names and data types of all the columns (fields) comprising the row. It also provides a set of PL/SQL and C interfaces for users to construct and access the metadata information. <code>ANYDATASET</code>, like <code>ANYTYPE</code>, contains a description of a given type, but <code>ANYDATASET</code> also contains a set of data instances of that type</p>
</li>
<li>
<p>The following example shows a query on a table function that uses the <code>ANYDATASET</code> type:</p>
<pre>
SELECT * FROM 
TABLE(CAST(AnyBooks('http://.../books.xml') AS ANYDATASET));
</pre>
<p>At query compilation time, Oracle invokes the <code>ODCITableDescribe</code> routine. The routine typically uses the user arguments to figure out the nature of the return rows. In this example, <code>ODCITableDescribe</code> consults the DTD of the XML documents at the specified location to determine the appropriate <code>ANYTYPE</code> value to return. Each <code>ANYTYPE</code> instance is constructed by invoking the constructor APIs with this field name and data type information.</p>
</li>
<li>
<p>Any arguments of the table function that are not constants are passed to <code>ODCITableDescribe</code> as <code>NULL</code>s because their values are not known at compile time.</p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
Section <a href="pipe_paral_tbl.htm#i1005159">"Transient and Generic Types"</a> for a discussion of <code>ANYTYPE</code>, <code>ANYDATA</code>, and <code>ANYDATASET</code></div>
</div>
<!-- class="sect2" -->
<a id="CHDDEEIB"></a><a id="ADDCI5151"></a>
<div class="sect2">
<h3 class="sect2">ODCITableFetch()</h3>
<p><code>ODCITableFetch</code> returns the next batch of rows from a table function.</p>
<p class="subhead2"><a id="ADDCI5152"></a>Syntax</p>
<pre>
MEMBER FUNCTION ODCITableFetch(
   self IN OUT &lt;imptype&gt;, 
   nrows IN NUMBER, 
   rws OUT &lt;coll-type&gt;) 
RETURN NUMBER;
</pre>
<div class="inftblinformal">
<table class="cellalignment1250" title="Parameters of ODCITableFetch" summary="First column lists a parameter; second column indicates the IN or OUT binding of the parameter, the third column describes the parameter." dir="ltr">
<thead>
<tr class="cellalignment1237">
<th class="cellalignment1247" id="r1c1-t7">Parameter</th>
<th class="cellalignment1247" id="r1c2-t7">In/Out</th>
<th class="cellalignment1247" id="r1c3-t7">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1237">
<td class="cellalignment1243" id="r2c1-t7" headers="r1c1-t7">
<pre>
self
</pre></td>
<td class="cellalignment1243" headers="r2c1-t7 r1c2-t7">
<pre>
IN OUT
</pre></td>
<td class="cellalignment1243" headers="r2c1-t7 r1c3-t7">The in-bound is the scan context set up by previous scan routine invocation; the outbound is the scan context to be passed to later scan routine invocations.</td>
</tr>
<tr class="cellalignment1237">
<td class="cellalignment1243" id="r3c1-t7" headers="r1c1-t7">
<pre>
nrows
</pre></td>
<td class="cellalignment1243" headers="r3c1-t7 r1c2-t7">
<pre>
IN
</pre></td>
<td class="cellalignment1243" headers="r3c1-t7 r1c3-t7">The number of rows the system expects in the current fetch cycle. The method can ignore this value and return a different number of rows. If fewer rows are returned, the method is called again; if more rows are returned, they are processed in the next cycle.</td>
</tr>
<tr class="cellalignment1237">
<td class="cellalignment1243" id="r4c1-t7" headers="r1c1-t7">
<pre>
rws
</pre></td>
<td class="cellalignment1243" headers="r4c1-t7 r1c2-t7">
<pre>
OUT
</pre></td>
<td class="cellalignment1243" headers="r4c1-t7 r1c3-t7">The next batch of rows from the table function. This is returned as an instance of the same collection type as the return type of the table function.</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" -->
<p class="subhead2"><a id="ADDCI5153"></a>Returns</p>
<p><code>ODCIConst.Success</code> on success, <code>ODCIConst.Error</code> otherwise.</p>
<p class="subhead2"><a id="ADDCI5154"></a>Usage Notes</p>
<ul>
<li>
<p><code>ODCITableFetch</code> is invoked one or more times by Oracle to retrieve all the rows in the collection returned by the table function. The scan context is passed in as a parameter. Typically <code>ODCITableFetch</code> uses the input scan context and computes the next set of rows to be returned to Oracle. In addition, it may update the scan context accordingly.</p>
</li>
<li>
<p>Returning more rows in each invocation of <code>fetch()</code> reduces the number of fetch calls that must be made and thus improves performance.</p>
</li>
<li>
<p>Oracle calls <code>ODCITableFetch</code> repeatedly until all rows in the table function's collection have been returned. When all rows have been returned, <code>ODCITableFetch</code> should return a null collection.</p>
</li>
</ul>
</div>
<!-- class="sect2" -->
<a id="CHDDEFAB"></a><a id="ADDCI5155"></a>
<div class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">ODCITablePrepare()</h3>
<p>Prepares the scan context and other query information at compile time.</p>
<p class="subhead2"><a id="ADDCI5156"></a>Syntax</p>
<pre>
STATIC FUNCTION ODCITablePrepare(
   sctx OUT &lt;imptype&gt;, 
   tf_info SYS.ODCITabFuncInfo,
   args);
</pre>
<div class="inftblinformal">
<table class="cellalignment1250" title="Parameters of ODCITablePrepare" summary="First column lists a parameter; second column indicates the IN or OUT binding of the parameter, the third column describes the parameter." dir="ltr">
<thead>
<tr class="cellalignment1237">
<th class="cellalignment1247" id="r1c1-t8">Parameter</th>
<th class="cellalignment1247" id="r1c2-t8">In/Out</th>
<th class="cellalignment1247" id="r1c3-t8">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1237">
<td class="cellalignment1243" id="r2c1-t8" headers="r1c1-t8">
<pre>
sctx
</pre></td>
<td class="cellalignment1243" headers="r2c1-t8 r1c2-t8">
<pre>
OUT
</pre></td>
<td class="cellalignment1243" headers="r2c1-t8 r1c3-t8">The scan context returned by this routine. This value is passed in as a parameter to the later scan routines. The scan context is an instance of the object type containing the implementation of the <code>ODCITable</code> routines.</td>
</tr>
<tr class="cellalignment1237">
<td class="cellalignment1243" id="r3c1-t8" headers="r1c1-t8">
<pre>
tf_info
</pre></td>
<td class="cellalignment1243" headers="r3c1-t8 r1c2-t8">&nbsp;</td>
<td class="cellalignment1243" headers="r3c1-t8 r1c3-t8">Contains the projection information and the return type's table descriptor object (TDO):
<ul>
<li>
<p>Attrs (<code>SYS.ODCINumberList</code>): lists the positions of the referenced attributes of the table function's output collection type</p>
</li>
<li>
<p>RefType (<code>SYS.AnyType</code>): for <code>AnyDataSet</code> table functions, this is the actual return type expected to be returned in the <code>AnyDataSet</code> collection.</p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment1237">
<td class="cellalignment1243" id="r4c1-t8" headers="r1c1-t8">
<pre>
args
</pre></td>
<td class="cellalignment1243" headers="r4c1-t8 r1c2-t8">
<pre>
IN
</pre></td>
<td class="cellalignment1243" headers="r4c1-t8 r1c3-t8">The arguments that are passed to the table function. This method is invoked at compile time; thus, only literal arguments have values. Column and expression arguments are passed as null values.</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" -->
<p class="subhead2"><a id="ADDCI5157"></a>Usage Notes</p>
<ul>
<li>
<p>This method prepares the scan context based on the information known at compile time. This scan context is passed to <code>ODCITableStart</code> when it is called at the beginning of query execution.</p>
</li>
<li>
<p>If this optional method is implemented, <code>ODCITableClose</code> is only called one time, at the end of query execution. Each time the table function is restarted, <code>ODCITableStart</code> is called and passed the scan context. This allows the table function to maintain context between restarts, and to perform cleanup operations only one time at the end of query execution.</p>
</li>
</ul>
</div>
<!-- class="sect2" -->
<a id="CHDIJIJJ"></a><a id="ADDCI5158"></a>
<div class="sect2">
<h3 class="sect2">ODCITableStart()</h3>
<p><code>ODCITableStart</code> initializes the scan of a table function.</p>
<p class="subhead2"><a id="ADDCI5159"></a>Syntax</p>
<pre>
STATIC FUNCTION ODCITableStart(
   sctx IN OUT &lt;imptype&gt;, 
   &lt;args&gt;) 
RETURN NUMBER;
</pre>
<div class="inftblinformal">
<table class="cellalignment1250" title="Parameters of ODCITableStart" summary="First column lists a parameter; second column indicates the IN or OUT binding of the parameter, the third column describes the parameter." dir="ltr">
<thead>
<tr class="cellalignment1237">
<th class="cellalignment1247" id="r1c1-t9">Parameter</th>
<th class="cellalignment1247" id="r1c2-t9">In/Out</th>
<th class="cellalignment1247" id="r1c3-t9">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1237">
<td class="cellalignment1243" id="r2c1-t9" headers="r1c1-t9">
<pre>
self
</pre></td>
<td class="cellalignment1243" headers="r2c1-t9 r1c2-t9">
<pre>
IN OUT
</pre></td>
<td class="cellalignment1243" headers="r2c1-t9 r1c3-t9">The scan context returned by this routine. This value is passed in as a parameter to the later scan routines. The scan context is an instance of the object type containing the implementation of the <code>ODCITable</code> routines. If <code>ODCITablePrepare</code> is implemented, the scan context it creates is passed in to <code>ODCITableStart</code>.</td>
</tr>
<tr class="cellalignment1237">
<td class="cellalignment1243" id="r3c1-t9" headers="r1c1-t9">
<pre>
args
</pre></td>
<td class="cellalignment1243" headers="r3c1-t9 r1c2-t9">
<pre>
IN
</pre></td>
<td class="cellalignment1243" headers="r3c1-t9 r1c3-t9">Set of zero or more arguments specified by the user for the table function</td>
</tr>
<tr class="cellalignment1237">
<td class="cellalignment1243" id="r4c1-t9" headers="r1c1-t9">
<pre>
rws
</pre></td>
<td class="cellalignment1243" headers="r4c1-t9 r1c2-t9">
<pre>
OUT
</pre></td>
<td class="cellalignment1243" headers="r4c1-t9 r1c3-t9">The next batch of rows from the table function. This is returned as an instance of the same collection type as the return type of the table function.</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" -->
<p class="subhead2"><a id="ADDCI5160"></a>Returns</p>
<p><code>ODCIConst.Success</code> on success, <code>ODCIConst.Error</code> otherwise.</p>
<p class="subhead2"><a id="ADDCI5161"></a>Usage Notes</p>
<ul>
<li>
<p>If <code>ODCITablePrepare</code> is not implemented, this is the first routine that is invoked to begin retrieving rows from a table function. This routine typically performs the setup needed for the scan. The scan context is created (as an object instance <code>sctx</code>) and returned to Oracle. The arguments to the table function, specified by the user in the <code>SELECT</code> statement, are passed in as parameters to this routine. If <code>ODCITablePrepare</code> is implemented, it creates the scan context at compile time, and that scan context is passed in to this routine.</p>
</li>
<li>
<p>Any <code>REF CURSOR</code> arguments of the table function must be declared as <code>SYS_REFCURSOR</code> type in the declaration of the <code>ODCITableStart</code> method.</p>
</li>
</ul>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment1236">
<tr>
<td class="cellalignment1243">
<table class="cellalignment1241">
<tr>
<td class="cellalignment1240"><a href="ext_agg_ref.htm"><img width="24" height="24" src="../../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment1240"><a href="user_man_idx_apnd.htm"><img width="24" height="24" src="../../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;1996, 2010,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment1245">
<table class="cellalignment1239">
<tr>
<td class="cellalignment1240"><a href="../../index.htm"><img width="24" height="24" src="../../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment1240"><a href="../../nav/portal_booklist.htm"><img width="24" height="24" src="../../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment1240"><a href="toc.htm"><img width="24" height="24" src="../../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment1240"><a href="index.htm"><img width="24" height="24" src="../../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment1240"><a href="../../nav/mindx.htm"><img width="24" height="24" src="../../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment1240"><a href="../../dcommon/html/feedback.htm"><img width="24" height="24" src="../../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>
</body>
</html>
