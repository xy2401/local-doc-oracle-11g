<!DOCTYPE html>
<html lang="en" >
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1">
<meta charset="utf-8">
<title>Package Xsl APIs for C++</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Version 5.1" />
<meta name="dcterms.created" content="2009-07-26T15:59:55Z" />
<meta name="robots" content="all" />
<meta name="dcterms.title" content="Database XML C++ API Reference" />
<meta name="dcterms.identifier" content="E10771-01" />
<meta name="dcterms.isVersionOf" content="CPXML" />
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;2001, 2009,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved." />
<link rel="Start" href="../../index.htm" title="Home" type="text/html" />
<link rel="Copyright" href="../../dcommon/html/cpyr.htm" title="Copyright" type="text/html" />

<script type="application/javascript"  src="../../dcommon/js/headfoot.js"></script>
<script type="application/javascript"  src="../../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html" />
<link rel="Index" href="index.htm" title="Index" type="text/html" />
<link rel="Prev" href="xpointer.htm" title="Previous" type="text/html" />
<link rel="Next" href="index.htm" title="Next" type="text/html" />
<link rel="alternate" href="../e10771.pdf" title="PDF version" type="application/pdf" />
<link rel="schema.dcterms" href="http://purl.org/dc/terms/" />
<link rel="stylesheet" href="../../dcommon/css/fusiondoc.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/header.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/footer.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/fonts.css">
<link rel="stylesheet" href="../../dcommon/css/foundation.css">
<link rel="stylesheet" href="../../dcommon/css/codemirror.css">
<link rel="stylesheet" type="text/css" title="Default" href="../../nav/css/html5.css">
<link rel="stylesheet" href="../../dcommon/css/respond-480-tablet.css">
<link rel="stylesheet" href="../../dcommon/css/respond-768-laptop.css">
<link rel="stylesheet" href="../../dcommon/css/respond-1140-deskop.css">
<script type="application/javascript" src="../../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">14/15</span> <!-- End Header --><a id="Xslpackage"></a><a id="CPXML02000"></a>
<h1 class="chapter"><span class="secnum">10</span> <a id="sthref864"></a> <a id="sthref865"></a> <a id="sthref866"></a> Package Xsl APIs for C++</h1>
<p><code>Xsl</code> package contains XSLT related types and interfaces.</p>
<p>This chapter contains these sections:</p>
<ul>
<li>
<p><a href="#CEGDJBFH">Xsl Datatypes</a></p>
</li>
<li>
<p><a href="#CIHGFJJI">Compiler Interface</a></p>
</li>
<li>
<p><a href="#Xslinterfaces">CompTransformer Interface</a></p>
</li>
<li>
<p><a href="#CIHIDFIB">Transformer Interface</a></p>
</li>
<li>
<p><a href="#CIHEJJDE">XSLException Interface</a></p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a class="olink ADXDK" href="../e23582/toc.htm"><span class="italic">Oracle XML Developer's Kit Programmer's Guide</span></a></p>
</li>
<li>
<p><a class="olink ADXDB" href="../e23094/toc.htm"><span class="italic">Oracle XML DB Developer's Guide</span></a></p>
</li>
</ul>
</div>
<a id="CEGDJBFH"></a><a id="CPXML02005"></a>
<hr />
<div class="refsect1"><!-- infolevel="all" infotype="General" -->
<h2 class="refsect1"><a id="sthref867"></a>Xsl Datatypes</h2>
<p><a href="#CIHIJHJG">Table 10-1</a> summarizes the datatypes of the <code>Xsl</code> package.</p>
<div class="tblformal">
<p class="titleintable"><a id="CPXML3115"></a><a id="sthref868"></a><a id="CIHIJHJG"></a>Table 10-1 Summary of Datatypes; Xsl Package</p>
<table class="cellalignment775" title="Summary of Datatypes; Xsl Package" summary="Column one lists datatypes; column 2 has descriptions." dir="ltr">
<thead>
<tr class="cellalignment764">
<th class="cellalignment776" id="r1c1-t3">Datatype</th>
<th class="cellalignment776" id="r1c2-t3">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment764">
<td class="cellalignment770" id="r2c1-t3" headers="r1c1-t3">
<p><a href="#CIHFFJGJ">XslCompIdType</a></p>
</td>
<td class="cellalignment770" headers="r2c1-t3 r1c2-t3">
<p>Defines XSL compiler identifiers.</p>
</td>
</tr>
<tr class="cellalignment764">
<td class="cellalignment770" id="r3c1-t3" headers="r1c1-t3">
<p><a href="#CIHIEIJB">XslExceptionCode</a></p>
</td>
<td class="cellalignment770" headers="r3c1-t3 r1c2-t3">
<p>Defines XSLT related exceptions.</p>
</td>
</tr>
<tr class="cellalignment764">
<td class="cellalignment770" id="r4c1-t3" headers="r1c1-t3">
<p><a href="#CIHGAEBF">XslTrIdType</a></p>
</td>
<td class="cellalignment770" headers="r4c1-t3 r1c2-t3">
<p>Defines XSL transformer identifiers.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<a id="CIHFFJGJ"></a><a id="CPXML3116"></a>
<hr />
<h3 class="refsect2"><a id="sthref869"></a><a id="sthref870"></a>XslCompIdType</h3>
<p>Defines XSL compiler identifiers.</p>
<p class="subhead2"><a id="CPXML3117"></a>Definition</p>
<pre>
typedef enum XslCompIdType {
   XvmCompCXml = 1
} XslCompIdType;
</pre>
<a id="CIHIEIJB"></a><a id="CPXML3118"></a>
<hr />
<h3 class="refsect2"><a id="sthref871"></a>XslExceptionCode</h3>
<p>Defines XSLT related exceptions.</p>
<p class="subhead2"><a id="CPXML3119"></a>Definition</p>
<pre>
typedef typedef enum XslExceptionCode {
   XSL_UNDEFINED_ERR = 0,
   XSL_OTHER_ERR = 1 
} XslExceptionCode;
 
</pre>
<a id="CIHGAEBF"></a><a id="CPXML3120"></a>
<hr />
<h3 class="refsect2"><a id="sthref872"></a><a id="sthref873"></a>XslTrIdType</h3>
<p>Defines XSL transformer identifiers.</p>
<p class="subhead2"><a id="CPXML3121"></a>Definition</p>
<pre>
typedef enum XslTrIdType {
   XslTrCXml         = 1,
   XvmTrCXml         = 2
} XslTrIdType;
</pre></div>
<!-- class="refsect1" -->
<a id="CIHGFJJI"></a><a id="CPXML02010"></a>
<hr />
<div class="refsect1"><!-- infolevel="all" infotype="General" -->
<h2 class="refsect1"><a id="sthref874"></a>Compiler Interface</h2>
<p><a href="#CIHHJDJE">Table 10-2</a> summarizes the methods available through the <code>Compiler</code> interface.</p>
<div class="tblformal">
<p class="titleintable"><a id="CPXML3122"></a><a id="sthref875"></a><a id="CIHHJDJE"></a>Table 10-2 Summary of Compiler Methods; Xsl Package</p>
<table class="cellalignment775" title="Summary of Compiler Methods; Xsl Package" summary="First column lists interfaces; second column provides a brief description of these interfaces." dir="ltr">
<thead>
<tr class="cellalignment764">
<th class="cellalignment776" id="r1c1-t4">Function</th>
<th class="cellalignment776" id="r1c2-t4">Summary</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment764">
<td class="cellalignment770" id="r2c1-t4" headers="r1c1-t4">
<p><a href="#CIHDEJCG">compile()</a></p>
</td>
<td class="cellalignment770" headers="r2c1-t4 r1c2-t4">
<p>Compile Xsl and return its compiled binary representation.</p>
</td>
</tr>
<tr class="cellalignment764">
<td class="cellalignment770" id="r3c1-t4" headers="r1c1-t4">
<p><a href="#CIHEABJH">getCompilerId()</a></p>
</td>
<td class="cellalignment770" headers="r3c1-t4 r1c2-t4">
<p>Get compiler's Id.</p>
</td>
</tr>
<tr class="cellalignment764">
<td class="cellalignment770" id="r4c1-t4" headers="r1c1-t4">
<p><a href="#CIHHBDFJ">getLength()</a></p>
</td>
<td class="cellalignment770" headers="r4c1-t4 r1c2-t4">
<p>Get length of compiled XSL document.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<a id="CIHDEJCG"></a><a id="CPXML3123"></a>
<hr />
<h3 class="refsect2"><a id="sthref876"></a><a id="sthref877"></a>compile()</h3>
<p>Compiles Xsl and returns its compiled binary representation.</p>
<p class="subhead1"><a id="CPXML3124"></a>Syntax</p>
<pre>
virtual ub2* compile(
   InputSource* isrc_ptr)
throw (XslException) = 0;
</pre>
<div class="inftblinformal">
<table class="cellalignment777" title="Paramter(s)" summary="Parameter Table; column 1 has parameters and column 2 has their descriptions." dir="ltr">
<thead>
<tr class="cellalignment764">
<th class="cellalignment776" id="r1c1-t5">Parameter</th>
<th class="cellalignment776" id="r1c2-t5">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment764">
<td class="cellalignment770" id="r2c1-t5" headers="r1c1-t5">
<pre>
isrc_ptr
</pre></td>
<td class="cellalignment770" headers="r2c1-t5 r1c2-t5">Xsl document</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" -->
<p class="subhead1"><a id="CPXML3125"></a>Returns</p>
<p><code>(InputSource)</code> Xsl document in compiled binary representation</p>
<a id="CIHEABJH"></a><a id="CPXML3126"></a>
<hr />
<h3 class="refsect2"><a id="sthref878"></a><a id="sthref879"></a>getCompilerId()</h3>
<p>Get the compiler Id.</p>
<p class="subhead1"><a id="CPXML3127"></a>Syntax</p>
<pre>
virtual XslCompIdType getCompilerId() const = 0;
</pre>
<p class="subhead1"><a id="CPXML3128"></a>Returns</p>
<p><code>(XslCompIdType)</code> Compiler's Id</p>
<a id="CIHHBDFJ"></a><a id="CPXML3129"></a>
<hr />
<h3 class="refsect2"><a id="sthref880"></a><a id="sthref881"></a>getLength()</h3>
<p>Returns length of compiled XSL document</p>
<p class="subhead1"><a id="CPXML3130"></a>Syntax</p>
<pre>
virtual ub4 getLength( 
   ub2* binxsl_ptr)
throw (XslException) = 0;
</pre>
<div class="inftblinformal">
<table class="cellalignment777" title="Paramter(s)" summary="Parameter Table; column 1 has parameters and column 2 has their descriptions." dir="ltr">
<thead>
<tr class="cellalignment764">
<th class="cellalignment776" id="r1c1-t6">Parameter</th>
<th class="cellalignment776" id="r1c2-t6">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment764">
<td class="cellalignment770" id="r2c1-t6" headers="r1c1-t6">
<pre>
binxsl_ptr
</pre></td>
<td class="cellalignment770" headers="r2c1-t6 r1c2-t6">compiled Xsl document</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" -->
<p class="subhead1"><a id="CPXML3131"></a>Returns</p>
<p><code>(ub4)</code> length of the document</p>
</div>
<!-- class="refsect1" -->
<a id="Xslinterfaces"></a><a id="CPXML02020"></a>
<hr />
<div class="refsect1">
<h2 class="refsect1"><a id="sthref882"></a>CompTransformer Interface</h2>
<p><a href="#Summaryxsl">Table 10-3</a> summarizes the methods available through the <code>CompTransformer</code> interface.</p>
<div class="tblformal">
<p class="titleintable"><a id="CPXML3132"></a><a id="sthref883"></a><a id="Summaryxsl"></a>Table 10-3 Summary of CompTransformer Methods; Xsl Package</p>
<table class="cellalignment775" title="Summary of CompTransformer Methods; Xsl Package" summary="First column lists interfaces; second column provides a brief description of these interfaces." dir="ltr">
<thead>
<tr class="cellalignment764">
<th class="cellalignment776" id="r1c1-t7">Function</th>
<th class="cellalignment776" id="r1c2-t7">Summary</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment764">
<td class="cellalignment770" id="r2c1-t7" headers="r1c1-t7">
<p><a href="#CIHHGAJB">getTransformerId()</a></p>
</td>
<td class="cellalignment770" headers="r2c1-t7 r1c2-t7">
<p>Get transformer's Id.</p>
</td>
</tr>
<tr class="cellalignment764">
<td class="cellalignment770" id="r3c1-t7" headers="r1c1-t7">
<p><a href="#CIHBBICI">setBinXsl()</a></p>
</td>
<td class="cellalignment770" headers="r3c1-t7 r1c2-t7">
<p>Set compiled Xsl.</p>
</td>
</tr>
<tr class="cellalignment764">
<td class="cellalignment770" id="r4c1-t7" headers="r1c1-t7">
<p><a href="#CIHBEJAC">setSAXHandler()</a></p>
</td>
<td class="cellalignment770" headers="r4c1-t7 r1c2-t7">
<p>Set SAX handler.</p>
</td>
</tr>
<tr class="cellalignment764">
<td class="cellalignment770" id="r5c1-t7" headers="r1c1-t7">
<p><a href="#CIHGAFIE">setXSL()</a></p>
</td>
<td class="cellalignment770" headers="r5c1-t7 r1c2-t7">
<p>Set XSLT document for this transformer.</p>
</td>
</tr>
<tr class="cellalignment764">
<td class="cellalignment770" id="r6c1-t7" headers="r1c1-t7">
<p><a href="#CIHIDDCH">transform()</a></p>
</td>
<td class="cellalignment770" headers="r6c1-t7 r1c2-t7">
<p>Transform the document.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<a id="CIHHGAJB"></a><a id="CPXML3133"></a>
<hr />
<h3 class="refsect2"><a id="sthref884"></a><a id="sthref885"></a>getTransformerId()</h3>
<p>Get transformer's id.</p>
<p class="subhead1"><a id="CPXML3134"></a>Syntax</p>
<pre>
virtual XslTrIdType getTransformerId() const = 0;
</pre>
<p class="subhead1"><a id="CPXML3135"></a>Returns</p>
<p><code>(XslTrIdType)</code> Transformer's Id</p>
<a id="CIHBBICI"></a><a id="CPXML3136"></a>
<hr />
<h3 class="refsect2"><a id="sthref886"></a><a id="sthref887"></a>setBinXsl()</h3>
<p>Sets compiled Xsl.</p>
<p class="subhead1"><a id="CPXML3137"></a>Syntax</p>
<pre>
virtual void setBinXsl (
   ub2* binxsl_ptr)
throw (XslException) = 0;
</pre>
<div class="inftblinformal">
<table class="cellalignment777" title="Paramter(s)" summary="Parameter Table; column 1 has parameters and column 2 has their descriptions." dir="ltr">
<thead>
<tr class="cellalignment764">
<th class="cellalignment776" id="r1c1-t8">Parameter</th>
<th class="cellalignment776" id="r1c2-t8">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment764">
<td class="cellalignment770" id="r2c1-t8" headers="r1c1-t8">
<pre>
binxsl_ptr
</pre></td>
<td class="cellalignment770" headers="r2c1-t8 r1c2-t8">compiled Xsl document</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" -->
<a id="CIHBEJAC"></a><a id="CPXML3138"></a>
<hr />
<h3 class="refsect2"><a id="sthref888"></a><a id="sthref889"></a>setSAXHandler()</h3>
<p>Inherited from Transformer.</p>
<p class="subhead1"><a id="CPXML3139"></a>Syntax</p>
<pre>
virtual void setSAXHandler(
   SAXHandlerRoot* hdlr_ptr) = 0;
</pre>
<div class="inftblinformal">
<table class="cellalignment777" title="Paramter(s)" summary="Parameter Table; column 1 has parameters and column 2 has their descriptions." dir="ltr">
<thead>
<tr class="cellalignment764">
<th class="cellalignment776" id="r1c1-t9">Parameter</th>
<th class="cellalignment776" id="r1c2-t9">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment764">
<td class="cellalignment770" id="r2c1-t9" headers="r1c1-t9">
<pre>
hdlr_ptr
</pre></td>
<td class="cellalignment770" headers="r2c1-t9 r1c2-t9">SAX handler pointer</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" -->
<a id="CIHGAFIE"></a><a id="CPXML3140"></a>
<hr />
<h3 class="refsect2"><a id="sthref890"></a><a id="sthref891"></a>setXSL()</h3>
<p>Set XSLT document for this transformer. Should be called before the transform member function is called. It is inherited from Transform.</p>
<p class="subhead1"><a id="CPXML3141"></a>Syntax</p>
<pre>
virtual void setXSL (
   InputSource* isrc_ptr)
throw (XslException) = 0;
</pre>
<div class="inftblinformal">
<table class="cellalignment777" title="Paramter(s)" summary="Parameter Table; column 1 has parameters and column 2 has their descriptions." dir="ltr">
<thead>
<tr class="cellalignment764">
<th class="cellalignment776" id="r1c1-t10">Parameter</th>
<th class="cellalignment776" id="r1c2-t10">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment764">
<td class="cellalignment770" id="r2c1-t10" headers="r1c1-t10">
<pre>
isrc_ptr
</pre></td>
<td class="cellalignment770" headers="r2c1-t10 r1c2-t10">instance document to process</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" -->
<a id="CIHIDDCH"></a><a id="CPXML3142"></a>
<hr />
<h3 class="refsect2"><a id="sthref892"></a><a id="sthref893"></a>transform()</h3>
<p>Transforms the document. Throws an exception if an XSLT document is not set by a previous call to setXSL. Inherited from Transform.</p>
<div class="inftblinformal">
<table class="cellalignment777" title="Syntax" summary="First column has different versions of the method, the second column describes how each is used." dir="ltr">
<thead>
<tr class="cellalignment764">
<th class="cellalignment776" id="r1c1-t11">Syntax</th>
<th class="cellalignment776" id="r1c2-t11">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment764">
<td class="cellalignment770" id="r2c1-t11" headers="r1c1-t11">
<pre>
virtual NodeRef&lt; Node&gt;* transform(
   nputSource* isrc_ptr)
throw (XslException) = 0;
</pre></td>
<td class="cellalignment770" headers="r2c1-t11 r1c2-t11">Transform the document and return DOM.</td>
</tr>
<tr class="cellalignment764">
<td class="cellalignment770" id="r3c1-t11" headers="r1c1-t11">
<pre>
virtual void transform(
   InputSource* isrc_ptr,
   SAXHandlerRoot* hdlr_ptr)
throw (XslException) = 0;
</pre></td>
<td class="cellalignment770" headers="r3c1-t11 r1c2-t11">Transform the document and return SAX events.</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" -->
<div class="inftblinformal">
<table class="cellalignment777" title="Paramter(s)" summary="Parameter Table; column 1 has parameters and column 2 has their descriptions." dir="ltr">
<thead>
<tr class="cellalignment764">
<th class="cellalignment776" id="r1c1-t12">Parameter</th>
<th class="cellalignment776" id="r1c2-t12">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment764">
<td class="cellalignment770" id="r2c1-t12" headers="r1c1-t12">
<pre>
isrc_ptr
</pre></td>
<td class="cellalignment770" headers="r2c1-t12 r1c2-t12">instance document to process</td>
</tr>
<tr class="cellalignment764">
<td class="cellalignment770" id="r3c1-t12" headers="r1c1-t12">
<pre>
hdlr_ptr
</pre></td>
<td class="cellalignment770" headers="r3c1-t12 r1c2-t12">SAX handler pointer</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" -->
<p class="subhead1"><a id="CPXML3143"></a>Returns</p>
<p><code>(DocumentRef)</code> document tree of new document</p>
</div>
<!-- class="refsect1" -->
<a id="CIHIDFIB"></a><a id="CPXML02030"></a>
<hr />
<div class="refsect1"><!-- infolevel="all" infotype="General" -->
<h2 class="refsect1"><a id="sthref894"></a>Transformer Interface</h2>
<p><a href="#CIHJCBJG">Table 10-4</a> summarizes the methods available through the <code>Transformer</code> interface.</p>
<div class="tblformal">
<p class="titleintable"><a id="CPXML3144"></a><a id="sthref895"></a><a id="CIHJCBJG"></a>Table 10-4 Summary of Transformer Methods; Xsl Package</p>
<table class="cellalignment775" title="Summary of Transformer Methods; Xsl Package" summary="First column lists interfaces; second column provides a brief description of these interfaces." dir="ltr">
<thead>
<tr class="cellalignment764">
<th class="cellalignment776" id="r1c1-t13">Function</th>
<th class="cellalignment776" id="r1c2-t13">Summary</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment764">
<td class="cellalignment770" id="r2c1-t13" headers="r1c1-t13">
<p><a href="#CIHBDJCJ">getTransformerId()</a></p>
</td>
<td class="cellalignment770" headers="r2c1-t13 r1c2-t13">
<p>Get transformer's Id.</p>
</td>
</tr>
<tr class="cellalignment764">
<td class="cellalignment770" id="r3c1-t13" headers="r1c1-t13">
<p><a href="#CIHFJHED">setSAXHandler()</a></p>
</td>
<td class="cellalignment770" headers="r3c1-t13 r1c2-t13">
<p>Set SAX handler.</p>
</td>
</tr>
<tr class="cellalignment764">
<td class="cellalignment770" id="r4c1-t13" headers="r1c1-t13">
<p><a href="#CIHFIJFG">setXSL()</a></p>
</td>
<td class="cellalignment770" headers="r4c1-t13 r1c2-t13">
<p>Set XSLT document for this transformer.</p>
</td>
</tr>
<tr class="cellalignment764">
<td class="cellalignment770" id="r5c1-t13" headers="r1c1-t13">
<p><a href="#CIHEEIJA">transform()</a></p>
</td>
<td class="cellalignment770" headers="r5c1-t13 r1c2-t13">
<p>Transform the document and return SAX events.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<a id="CIHBDJCJ"></a><a id="CPXML3145"></a>
<hr />
<h3 class="refsect2"><a id="sthref896"></a><a id="sthref897"></a>getTransformerId()</h3>
<p>Gets transformer's id.</p>
<p class="subhead1"><a id="CPXML3146"></a>Syntax</p>
<pre>
virtual XslTrIdType getTransformerId() const = 0;
</pre>
<p class="subhead1"><a id="CPXML3147"></a>Returns</p>
<p><code>(XslTrIdType)</code> Transformer's Id</p>
<a id="CIHFJHED"></a><a id="CPXML3148"></a>
<hr />
<h3 class="refsect2"><a id="sthref898"></a><a id="sthref899"></a>setSAXHandler()</h3>
<p>Set SAX handler.</p>
<p class="subhead1"><a id="CPXML3149"></a>Syntax</p>
<pre>
virtual void setSAXHandler( 
   SAXHandlerRoot* hdlr_ptr) = 0;
</pre>
<div class="inftblinformal">
<table class="cellalignment777" title="Paramter(s)" summary="Parameter Table; column 1 has parameters and column 2 has their descriptions." dir="ltr">
<thead>
<tr class="cellalignment764">
<th class="cellalignment776" id="r1c1-t14">Parameter</th>
<th class="cellalignment776" id="r1c2-t14">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment764">
<td class="cellalignment770" id="r2c1-t14" headers="r1c1-t14">
<pre>
hdlr_ptr
</pre></td>
<td class="cellalignment770" headers="r2c1-t14 r1c2-t14">SAX handler pointer</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" -->
<a id="CIHFIJFG"></a><a id="CPXML3150"></a>
<hr />
<h3 class="refsect2"><a id="sthref900"></a><a id="sthref901"></a>setXSL()</h3>
<p>Set XSLT document for this transformer. Should be called before the transform member function is called.</p>
<p class="subhead1"><a id="CPXML3151"></a>Syntax</p>
<pre>
virtual void setXSL (
   InputSource* isrc_ptr)
throw (XslException) = 0;
</pre>
<div class="inftblinformal">
<table class="cellalignment777" title="Paramter(s)" summary="Parameter Table; column 1 has parameters and column 2 has their descriptions." dir="ltr">
<thead>
<tr class="cellalignment764">
<th class="cellalignment776" id="r1c1-t15">Parameter</th>
<th class="cellalignment776" id="r1c2-t15">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment764">
<td class="cellalignment770" id="r2c1-t15" headers="r1c1-t15">
<pre>
isrc_ptr
</pre></td>
<td class="cellalignment770" headers="r2c1-t15 r1c2-t15">instance document to process</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" -->
<a id="CIHEEIJA"></a><a id="CPXML3152"></a>
<hr />
<h3 class="refsect2"><a id="sthref902"></a><a id="sthref903"></a>transform()</h3>
<p>Transforms the document. Throws an exception if an XSLT document is not set by a previous call to setXSL.</p>
<div class="inftblinformal">
<table class="cellalignment777" title="Syntax" summary="First column has different versions of the method, the second column describes how each is used." dir="ltr">
<thead>
<tr class="cellalignment764">
<th class="cellalignment776" id="r1c1-t16">Syntax</th>
<th class="cellalignment776" id="r1c2-t16">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment764">
<td class="cellalignment770" id="r2c1-t16" headers="r1c1-t16">
<pre>
virtual NodeRef&lt; Node&gt;* transform(
   nputSource* isrc_ptr)
throw (XslException) = 0;
</pre></td>
<td class="cellalignment770" headers="r2c1-t16 r1c2-t16">Transform the document and return DOM.</td>
</tr>
<tr class="cellalignment764">
<td class="cellalignment770" id="r3c1-t16" headers="r1c1-t16">
<pre>
virtual void transform(
   InputSource* isrc_ptr,
   SAXHandlerRoot* hdlr_ptr)
throw (XslException) = 0;
</pre></td>
<td class="cellalignment770" headers="r3c1-t16 r1c2-t16">Transform the document and return SAX events.</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" -->
<div class="inftblinformal">
<table class="cellalignment777" title="Paramter(s)" summary="Parameter Table; column 1 has parameters and column 2 has their descriptions." dir="ltr">
<thead>
<tr class="cellalignment764">
<th class="cellalignment776" id="r1c1-t17">Parameter</th>
<th class="cellalignment776" id="r1c2-t17">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment764">
<td class="cellalignment770" id="r2c1-t17" headers="r1c1-t17">
<pre>
isrc_ptr
</pre></td>
<td class="cellalignment770" headers="r2c1-t17 r1c2-t17">instance document to process</td>
</tr>
<tr class="cellalignment764">
<td class="cellalignment770" id="r3c1-t17" headers="r1c1-t17">
<pre>
hdlr_ptr
</pre></td>
<td class="cellalignment770" headers="r3c1-t17 r1c2-t17">SAX handler pointer</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" -->
<p class="subhead1"><a id="CPXML3153"></a>Returns</p>
<p><code>(DocumentRef)</code> document tree of new document</p>
</div>
<!-- class="refsect1" -->
<a id="CIHEJJDE"></a><a id="CPXML02040"></a>
<hr />
<div class="refsect1"><!-- infolevel="all" infotype="General" -->
<h2 class="refsect1"><a id="sthref904"></a>XSLException Interface</h2>
<p><a href="#CEGDFHJF">Table 10-5</a> summarizes the methods available through the <code>XSLException</code> interface.</p>
<div class="tblformal">
<p class="titleintable"><a id="CPXML3154"></a><a id="sthref905"></a><a id="CEGDFHJF"></a>Table 10-5 Summary of XSLException Methods; Xsl Package</p>
<table class="cellalignment775" title="Summary of XSLException Methods; Xsl Package" summary="First column lists interfaces; second column provides a brief description of these interfaces." dir="ltr">
<thead>
<tr class="cellalignment764">
<th class="cellalignment776" id="r1c1-t18">Function</th>
<th class="cellalignment776" id="r1c2-t18">Summary</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment764">
<td class="cellalignment770" id="r2c1-t18" headers="r1c1-t18">
<p><a href="#CIHGIDDJ">getCode()</a></p>
</td>
<td class="cellalignment770" headers="r2c1-t18 r1c2-t18">
<p>Get Oracle XML error code embedded in the exception.</p>
</td>
</tr>
<tr class="cellalignment764">
<td class="cellalignment770" id="r3c1-t18" headers="r1c1-t18">
<p><a href="#CIHFFDCD">getMesLang()</a></p>
</td>
<td class="cellalignment770" headers="r3c1-t18 r1c2-t18">
<p>Get current language (encoding) of error messages.</p>
</td>
</tr>
<tr class="cellalignment764">
<td class="cellalignment770" id="r4c1-t18" headers="r1c1-t18">
<p><a href="#CIHCAFJB">getMessage()</a></p>
</td>
<td class="cellalignment770" headers="r4c1-t18 r1c2-t18">
<p>Get Oracle XML error message.</p>
</td>
</tr>
<tr class="cellalignment764">
<td class="cellalignment770" id="r5c1-t18" headers="r1c1-t18">
<p><a href="#CIHFAECH">getXslCode()</a></p>
</td>
<td class="cellalignment770" headers="r5c1-t18 r1c2-t18">
<p>Defines a prototype for implementation.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<a id="CIHGIDDJ"></a><a id="CPXML3155"></a>
<hr />
<h3 class="refsect2"><a id="sthref906"></a>getCode()</h3>
<p>Gets Oracle XML error code embedded in the exception. Virtual member function inherited from <code>XmlException</code>.</p>
<p class="subhead1"><a id="CPXML3156"></a>Syntax</p>
<pre>
virtual unsigned getCode() const = 0;
</pre>
<p class="subhead1"><a id="CPXML3157"></a>Returns</p>
<p><code>(unsigned)</code> numeric error code (<code>0</code> on success)</p>
<a id="CIHFFDCD"></a><a id="CPXML3158"></a>
<hr />
<h3 class="refsect2"><a id="sthref907"></a>getMesLang()</h3>
<p>Virtual member function inherited from <code>XmlException</code>.</p>
<p class="subhead1"><a id="CPXML3159"></a>Syntax</p>
<pre>
virtual oratext* getMesLang() const = 0;
</pre>
<p class="subhead1"><a id="CPXML3160"></a>Returns</p>
<p><code>(oratext*)</code> Current language (encoding) of error messages</p>
<a id="CIHCAFJB"></a><a id="CPXML3161"></a>
<hr />
<h3 class="refsect2"><a id="sthref908"></a>getMessage()</h3>
<p>Virtual member function inherited from <code>XmlException</code></p>
<p class="subhead1"><a id="CPXML3162"></a>Syntax</p>
<pre>
virtual oratext* getMessage() const = 0;
</pre>
<p class="subhead1"><a id="CPXML3163"></a>Returns</p>
<p><code>(oratext *)</code> Error message</p>
<a id="CIHFAECH"></a><a id="CPXML3164"></a>
<hr />
<h3 class="refsect2"><a id="sthref909"></a>getXslCode()</h3>
<p>This is a virtual member function that defines a prototype for implementation defined member functions returning XSL transformer and compiler exception codes, defined in <code>XslExceptionCode</code>, of the exceptional situations during execution.</p>
<p class="subhead1"><a id="CPXML3165"></a>Syntax</p>
<pre>
virtual XslExceptionCode getXslCode() const = 0;
</pre>
<p class="subhead1"><a id="CPXML3166"></a>Returns</p>
<p><code>(XslExceptionCode)</code> exception code</p>
</div>
<!-- class="refsect1" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment763">
<tr>
<td class="cellalignment770">
<table class="cellalignment774">
<tr>
<td class="cellalignment767"><a href="xpointer.htm"><img width="24" height="24" src="../../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment767"><a href="index.htm"><img width="24" height="24" src="../../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;2001, 2009,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment772">
<table class="cellalignment773">
<tr>
<td class="cellalignment767"><a href="../../index.htm"><img width="24" height="24" src="../../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment767"><a href="../../nav/portal_booklist.htm"><img width="24" height="24" src="../../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment767"><a href="toc.htm"><img width="24" height="24" src="../../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment767"><a href="index.htm"><img width="24" height="24" src="../../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment767"><a href="../../nav/mindx.htm"><img width="24" height="24" src="../../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment767"><a href="../../dcommon/html/feedback.htm"><img width="24" height="24" src="../../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>
</body>
</html>
