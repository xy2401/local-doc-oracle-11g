<html lang="en" >
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1">
<meta charset="utf-8">
<title>Oracle Multimedia ORDImage Object Type</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Version 5.1.1" />
<meta name="dcterms.created" content="2010-07-29T11:46:56Z" />
<meta name="robots" content="all" />
<meta name="dcterms.title" content="Multimedia Reference" />
<meta name="dcterms.identifier" content="E10776-03" />
<meta name="dcterms.isVersionOf" content="AIVUG" />
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;1999, 2010,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved." />
<link rel="Start" href="../../index.htm" title="Home" type="text/html" />
<link rel="Copyright" href="../../dcommon/html/cpyr.htm" title="Copyright" type="text/html" />

<script type="application/javascript"  src="../../dcommon/js/headfoot.js"></script>
<script type="application/javascript"  src="../../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html" />
<link rel="Index" href="index.htm" title="Index" type="text/html" />
<link rel="Prev" href="ch_docref.htm" title="Previous" type="text/html" />
<link rel="Next" href="ch_vidref.htm" title="Next" type="text/html" />
<link rel="alternate" href="../e10776.pdf" title="PDF version" type="application/pdf" />
<link rel="schema.dcterms" href="http://purl.org/dc/terms/" />
<link rel="stylesheet" href="../../dcommon/css/fusiondoc.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/header.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/footer.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/fonts.css">
<link rel="stylesheet" href="../../dcommon/css/foundation.css">
<link rel="stylesheet" href="../../dcommon/css/codemirror.css">
<link rel="stylesheet" type="text/css" title="Default" href="../../nav/css/html5.css">
<link rel="stylesheet" href="../../dcommon/css/respond-480-tablet.css">
<link rel="stylesheet" href="../../dcommon/css/respond-768-laptop.css">
<link rel="stylesheet" href="../../dcommon/css/respond-1140-deskop.css">
<script type="application/javascript" src="../../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">11/25</span> <!-- End Header -->
<script  >
<!-- // <![CDATA[
window.name='ch_imgref'
// ]]> -->
</script> <script  >
// <![CDATA[
function footdisplay(footnum,footnote) {
    var msg = window.open('', 'NewWindow' + footnum,
        'directories=no,height=120,location=no,menubar=no,resizable=yes,' +
        'scrollbars=yes,status=no,toolbar=no,width=598');
    msg.document.open('text/html');
    msg.document.write('<!DOCTYPE html ');
    msg.document.write('PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" ');

    msg.document.write('"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">');
    msg.document.write('<html xmlns="http://www.w3.org/1999/xhtml" lang="en"><head><title>');
    msg.document.write('Footnote ' + footnum);
    msg.document.write('<\/title><meta http-equiv="Content-Type" ');
    msg.document.write('content="text/html; charset=utf-8" />');
    msg.document.write('');
    msg.document.write('<style> <![CDATA[ ');
    msg.document.write('h1 {text-align: center; font-size: 14pt;}');
    msg.document.write('fieldset {border: none;}');
    msg.document.write('form {text-align: center;}');
    msg.document.write(' ]]\u003e <\/style>');
    msg.document.write('<\/head><body><h1>Footnote ' + footnum + '<\/h1><p>');
    msg.document.write(footnote);
    msg.document.write('<\/p><form action="" method="post"><fieldset>');
    msg.document.write('<input type="button" value="OK" ');
    msg.document.write('onclick="window.close();" />');
    msg.document.write('<\/fieldset><\/form><\/body><\/html>');
    msg.document.close();
    msg.focus();
}
// ]]>
</script> <noscript>
<p>The script content on this page is for navigation purposes only and does not alter the content in any way.</p>
</noscript><a id="g1090382"></a><a id="AIVUG6000"></a><a id="i1059859"></a>
<h1 class="chapter"><span class="secnum">5</span> Oracle Multimedia ORDImage Object Type</h1>
<p>Oracle Multimedia provides the ORDImage object type<a id="sthref580"></a>, which supports the storage, management, and manipulation of image data.</p>
<p>The ORDImage object type is defined in the <code>ordispec.sql</code> file<a id="sthref581"></a>. After installation, this file is available in the Oracle home directory at:</p>
<p><code><span class="codeinlineitalic">&lt;ORACLE_HOME&gt;</span></code><code>/ord/im/admin</code> (on Linux and UNIX)</p>
<p><code><span class="codeinlineitalic">&lt;ORACLE_HOME&gt;</span></code><code>\ord\im\admin</code> (on Windows)</p>
<p>This chapter contains the following sections:</p>
<ul>
<li>
<p><a href="#CHEGCIEG">ORDImage Object Examples</a></p>
</li>
<li>
<p><a href="#BABFFDEA">Important Notes for ORDImage Methods</a></p>
</li>
<li>
<p><a href="#BABFCIDF">ORDImage Object Type</a></p>
</li>
<li>
<p><a href="#BABDDIFC">ORDImage Constructors</a></p>
</li>
<li>
<p><a href="#BABFHIHG">ORDImage Methods</a></p>
</li>
</ul>
<a id="CHEGCIEG"></a><a id="AIVUG6200"></a>
<div class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1"><span class="secnum">5.1</span> ORDImage Object Examples</h2>
<p>The examples in this chapter use the ONLINE_MEDIA table in the Product Media (PM) sample schema. To replicate the examples on your computer, begin with the examples shown in the reference pages for the ORDImage constructors and the import( ) and importFrom( ) methods. Then, substitute your image files for those in the examples.</p>
<p>The example for the constructor <a href="#CHDDFGJC">ORDImage for BLOBs</a> uses the test image table TIMG (see <a href="ch_relatref.htm#CHEGDHBF">TIMG Table Definition</a>).</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
If you manipulate the image data itself (by either directly modifying the BLOB or changing the external source), you must ensure that the object attributes stay synchronized and the update time is modified; otherwise, the object attributes will not match the image data.</div>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<p><a class="olink COMSC00025" href="../../server.112/e10831/scripts.htm#COMSC00025"><span class="italic">Oracle Database Sample Schemas</span></a> for more information about the PM schema</p>
</div>
<a id="AIVUG80856"></a>
<div class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref582"></a>
<h3 class="sect2"><span class="secnum">5.1.1</span> Directory Definition for ORDImage Object Examples</h3>
<p>Issue the following statements before executing the examples, where <code>c:\mydir\work</code> is the directory where the user <code>ron</code> can find the image data:</p>
<pre>
CONNECT sys as sysdba
CREATE OR REPLACE DIRECTORY FILE_DIR as 'c:\mydir\work';
GRANT READ ON DIRECTORY FILE_DIR TO 'ron';
</pre></div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="BABFFDEA"></a><a id="AIVUG6300"></a>
<div class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1"><span class="secnum">5.2</span> Important Notes for ORDImage Methods</h2>
<p>Methods invoked at the ORDSource level that are handed off to the source plug-in for processing have ctx (RAW) as the first argument. Before calling any of these methods for the first time, the client must allocate the ctx structure, initialize it to NULL, and invoke the openSource( ) method. At this point, the source plug-in can initialize the context for this client. When processing is complete, the client must invoke the closeSource( ) method.</p>
<p>Methods invoked from a source plug-in call have the first argument as ctx (RAW).</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
In the current release, none of the plug-ins provided by Oracle and not all source or format plug-ins use the ctx argument, but if you code as previously described, your application should work with current or future source or format plug-ins.</div>
<p>For formats that are natively supported, use the setProperties( ) method to automatically populate the attributes of the object. Otherwise, use the setProperties( ) method for foreign images; or use any of the individual set methods to set the attribute value for an object for formats that are not natively supported.</p>
</div>
<!-- class="sect1" -->
<a id="BABFCIDF"></a><a id="AIVUG6100"></a>
<hr />
<div class="refsect1">
<h2 class="refsect1">ORDImage Object Type<a id="sthref583"></a><a id="sthref584"></a></h2>
<p>The ORDImage<a id="sthref585"></a> object type supports the storage, management, and manipulation of image data. The attributes for this object type are defined as follows in the <code>ordispec.sql</code> file:</p>
<pre>
  -------------------
  -- TYPE ATTRIBUTES
  -------------------
  source              ORDSource,
  height              INTEGER,
  width               INTEGER,
  contentLength       INTEGER,
  fileFormat          VARCHAR2(4000),
  contentFormat       VARCHAR2(4000),
  compressionFormat   VARCHAR2(4000),
  mimeType            VARCHAR2(4000),
</pre>
<p>where:</p>
<ul>
<li>
<p>source: the source of the stored image data.</p>
</li>
<li>
<p>height: the height of the image in pixels.</p>
</li>
<li>
<p>width: the width of the image in pixels.</p>
</li>
<li>
<p>contentLength: the size of the image file on disk, in bytes.</p>
</li>
<li>
<p>fileFormat: the file type or format in which the image data is stored (TIFF, JFIF, and so on).</p>
</li>
<li>
<p>contentFormat: the type of image (monochrome and so on).</p>
</li>
<li>
<p>compressionFormat: the compression algorithm used on the image data.</p>
</li>
<li>
<p>mimeType: the MIME type information.</p>
</li>
</ul>
</div>
<!-- class="refsect1" -->
<a id="BABDDIFC"></a><a id="AIVUG6400"></a>
<hr />
<div class="refsect1"><!-- infolevel="all" infotype="General" -->
<h2 class="refsect1">ORDImage Constructors<a id="sthref586"></a><a id="sthref587"></a></h2>
<p>This section describes these ORDImage constructor functions:</p>
<ul>
<li>
<p><a href="#CHDDFGJC">ORDImage for BLOBs</a></p>
</li>
<li>
<p><a href="#CHDDHHBC">ORDImage for Other Sources</a></p>
</li>
</ul>
<a id="CHDDFGJC"></a><a id="AIVUG80759"></a>
<hr />
<h3 class="refsect2"><a id="sthref588"></a><a id="sthref589"></a>ORDImage for BLOBs</h3>
<p class="titleinrefsubsect"><a id="sthref590"></a>Format</p>
<p class="synopsis">ORDImage(SELF IN OUT NOCOPY ORDSYS.ORDImage, data IN BLOB, setproperties IN INTEGER DEFAULT 0) RETURN SELF AS RESULT</p>
<p class="titleinrefsubsect"><a id="sthref591"></a>Description</p>
<p>Constructs an ORDImage object from a BLOB. The data stored in the BLOB is copied into the ORDImage object when the constructed ORDImage object is inserted or updated into a table.</p>
<p class="titleinrefsubsect"><a id="sthref592"></a>Parameters</p>
<dl>
<dt>data</dt>
<dd>
<p>Image content stored in a BLOB.</p>
</dd>
<dt>setproperties</dt>
<dd>
<p>Indicator flag that determines whether the setProperties( ) method is called in the constructor. If the value is <code>1</code>, the setProperties( ) method is called. If the value is <code>0</code>, the method is not called. The default is <code>0</code>.</p>
</dd>
</dl>
<p class="titleinrefsubsect"><a id="sthref593"></a>Pragmas</p>
<p>None.</p>
<p class="titleinrefsubsect"><a id="sthref594"></a>Exceptions</p>
<p>None.</p>
<p class="titleinrefsubsect"><a id="sthref595"></a>Usage Notes</p>
<p>Use this constructor to create an ORDImage object when the image content is stored in either a temporary or a persistent BLOB.</p>
<p class="titleinrefsubsect"><a id="sthref596"></a>Examples</p>
<p>Create an ORDImage object from a BLOB object and insert it into the table.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
The user who runs this statement must have the SELECT privilege on the table <code>timg</code> created by the user <code>mediauser</code>.
<p>See <a href="ch_relatref.htm#CHEGDHBF">Section 7.2.4</a> for a definition of the test image table TIMG.</p>
</div>
<pre>
INSERT INTO pm.online_media (product_id, product_photo)
  SELECT 3501, ORDSYS.ORDImage(t.img) FROM mediauser.timg t WHERE t.n = 1;
</pre>
<a id="CHDDHHBC"></a><a id="AIVUG80760"></a>
<hr />
<h3 class="refsect2"><a id="sthref597"></a><a id="sthref598"></a>ORDImage for Other Sources</h3>
<p class="titleinrefsubsect"><a id="sthref599"></a>Format</p>
<p class="synopsis">ORDImage( SELF IN OUT NOCOPY ORDSYS.ORDImage, source_type IN VARCHAR2 DEFAULT 'LOCAL', source_location IN VARCHAR2 DEFAULT NULL, source_name IN VARCHAR2 DEFAULT NULL, setproperties IN INTEGER DEFAULT 0 ) RETURN SELF AS RESULT</p>
<p class="titleinrefsubsect"><a id="sthref600"></a>Description</p>
<p>Constructs an ORDImage object from a specific source. By default, an empty object with a local source is constructed.</p>
<p class="titleinrefsubsect"><a id="sthref601"></a>Parameters</p>
<dl>
<dt>source_type</dt>
<dd>
<p>The type of the source image data. Valid values are: <code>FILE</code>, <code>HTTP</code>, <code>LOCAL</code>, or user-defined. The default is <code>LOCAL</code>.</p>
<p>The parameter value <code>LOCAL</code> indicates that the data is stored in Oracle Database. The parameter value <code>LOCAL</code> is never stored in the srcType attribute. Rather, this parameter value indicates that the data is stored in Oracle Database in the localData attribute. (See <a href="ch_comref.htm#CHEBDBIB">Section 2.2</a> for a description of the ORDSource object.)</p>
</dd>
<dt>source_location</dt>
<dd>
<p>The location from which the source image data is to be imported. (See <a href="ch_comref.htm#BABGFBBB">Table 2-2</a>.)</p>
</dd>
<dt>source_name</dt>
<dd>
<p>The name of the source image data. (See <a href="ch_comref.htm#BABBGHFE">Table 2-3</a>.)</p>
</dd>
<dt>setproperties</dt>
<dd>
<p>Indicator flag that determines whether the setProperties( ) method is called in the constructor. If the value is <code>1</code>, the setProperties( ) method is called. If the value is <code>0</code>, the method is not called. The default is <code>0</code>.</p>
</dd>
</dl>
<p class="titleinrefsubsect"><a id="sthref602"></a>Pragmas</p>
<p>None.</p>
<p class="titleinrefsubsect"><a id="sthref603"></a>Exceptions</p>
<p>None.</p>
<p class="titleinrefsubsect"><a id="sthref604"></a>Usage Notes</p>
<p>Use this constructor to create an ORDImage object when the image content is not stored in a BLOB, as in any of these situations:</p>
<br />
The content is in a local file.<br />
The content is referenced by a URL.<br />
The content is not available when the ORDImage object is created.
<p class="titleinrefsubsect"><a id="sthref605"></a>Examples</p>
<p>Create an ORDImage object from a specified source:</p>
<pre>
-- Construct an ORDImage object from an external file and insert it into the table.
INSERT INTO pm.online_media (product_id, product_photo)
  VALUES (3515, ORDSYS.ORDImage('FILE', 'FILE_DIR', 'speaker.jpg'));
 
-- Initialize an ORDImage object in the table.
INSERT INTO pm.online_media (product_id, product_photo)
  VALUES(3501, ORDSYS.ORDImage());
</pre></div>
<!-- class="refsect1" -->
<a id="BABFHIHG"></a><a id="AIVUG6500"></a>
<hr />
<div class="refsect1"><!-- infolevel="all" infotype="General" -->
<h2 class="refsect1">ORDImage Methods<a id="sthref606"></a><a id="sthref607"></a></h2>
<p>This section presents reference information about the Oracle Multimedia methods used specifically for image data manipulation.</p>
<p><a href="ch_comref.htm#g1135951">Chapter 2</a> presents reference information about the Oracle Multimedia methods that are common to ORDAudio, ORDDoc, ORDImage, and ORDVideo. Use the methods presented in both chapters to get and set attributes, perform processing operations, and perform metadata extractions.</p>
<p>This section describes these methods:</p>
<ul>
<li>
<p><a href="#CHDCHIBH">applyWatermark( ) image</a></p>
</li>
<li>
<p><a href="#CHDDEHEG">applyWatermark( ) text</a></p>
</li>
<li>
<p><a href="#BABBAFHD">checkProperties( )</a></p>
</li>
<li>
<p><a href="#BABJEAJD">copy( )</a></p>
</li>
<li>
<p><a href="#BABJEJDG">getCompressionFormat( )</a></p>
</li>
<li>
<p><a href="#BABHAFBD">getContentFormat( )</a></p>
</li>
<li>
<p><a href="#BABHBEAC">getContentLength( )</a></p>
</li>
<li>
<p><a href="#BABIDGAH">getFileFormat( )</a></p>
</li>
<li>
<p><a href="#BABEHEDD">getHeight( )</a></p>
</li>
<li>
<p><a href="#BABGEBFA">getMetadata( )</a></p>
</li>
<li>
<p><a href="#BABJIAIB">getWidth( )</a></p>
</li>
<li>
<p><a href="#BABCFFGC">import( )</a></p>
</li>
<li>
<p><a href="#BABDHCIC">importFrom( )</a></p>
</li>
<li>
<p><a href="#BABHACJI">process( )</a></p>
</li>
<li>
<p><a href="#BABJGJIJ">processCopy( )</a></p>
</li>
<li>
<p><a href="#BABDBEHC">putMetadata( )</a></p>
</li>
<li>
<p><a href="#BABFBFDB">setProperties( )</a></p>
</li>
<li>
<p><a href="#BABGBBDI">setProperties( ) for foreign images</a></p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<p><a class="olink CNCPT" href="../../server.112/e40540/toc.htm"><span class="italic">Oracle Database Concepts</span></a> for more information about object types and methods</p>
</div>
<a id="CHDCHIBH"></a><a id="AIVUG80761"></a>
<hr />
<h3 class="refsect2"><a id="sthref608"></a><a id="sthref609"></a>applyWatermark( ) image</h3>
<p class="titleinrefsubsect"><a id="sthref610"></a>Format</p>
<p class="synopsis">applyWatermark(SELF IN OUT NOCOPY ORDImage, added_image IN OUT NOCOPY ORDImage, dest IN OUT NOCOPY ORDImage, logging OUT VARCHAR2, watermark_properties IN ORDSYS.ORD_STR_LIST default null),</p>
<p class="titleinrefsubsect"><a id="sthref611"></a>Description</p>
<p>Overlays an image watermark onto a source image and writes it to a destination image object.</p>
<p class="titleinrefsubsect"><a id="sthref612"></a>Parameters</p>
<dl>
<dt>added_image</dt>
<dd>
<p>The watermark image stored in an ORDImage object to be added to the source image.</p>
</dd>
<dt>dest</dt>
<dd>
<p>The destination ORDImage object for the watermarked image.</p>
</dd>
<dt>logging</dt>
<dd>
<p>A string that contains information about any unexpected behavior that occurred during the watermarking operation. If the operation is successful, an empty string is returned.</p>
</dd>
<dt>watermark_properties</dt>
<dd>
<p>A string list of name-value pairs that define the attributes of the watermark image to be overlaid, including: width, height, position, position_x, position_y, and transparency. See <a href="ap_imgproc.htm#BIHJFADG">Table D-2</a> for the complete list of watermark properties.</p>
</dd>
</dl>
<p class="titleinrefsubsect"><a id="sthref613"></a>Usage Notes</p>
<p>You cannot specify the same ORDImage as both the source and destination.</p>
<p>Calling this method processes the image into the destination BLOB from any source (local or external).</p>
<p>See <a href="ap_imgproc.htm#BIHHICGG">Section D.6</a> for more information about watermarking operations and watermark properties.</p>
<p class="titleinrefsubsect"><a id="sthref614"></a>Pragmas</p>
<p>None.</p>
<p class="titleinrefsubsect"><a id="sthref615"></a>Exceptions</p>
<p>ORDImageExceptions.DATA_NOT_LOCAL</p>
<p>This exception is raised if you call the applyWatermark( ) method and the value of the destination image source.local attribute is <code>0</code> or the destination source.localData attribute is not initialized.</p>
<p>ORDImageExceptions.NULL_DESTINATION</p>
<p>This exception is raised if you call the applyWatermark( ) method and the destination image is NULL.</p>
<p>ORDImageExceptions.NULL_LOCAL_DATA</p>
<p>This exception is raised if you call the applyWatermark( ) method and the value of the destination image source.localData attribute is <code>NULL</code>. This exception is also raised if you call the applyWatermark( ) method and the value of the source image source.local attribute is <code>1</code> or <code>NULL</code>, and the value of the source.localData attribute is <code>NULL</code>.</p>
<p>ORDImageExceptions.NULL_SOURCE</p>
<p>This exception is raised if the source or watermark image source attribute value is <code>NULL</code>.</p>
<p>See <a href="ap_excpts.htm#g630514">Appendix G</a> for more information about these exceptions.</p>
<p class="titleinrefsubsect"><a id="sthref616"></a>Examples</p>
<p>Add a watermark image to a source image:</p>
<pre>
-- add image as watermark to source image
DECLARE
  source_image ORDSYS.ORDImage;
  added_image ORDSYS.ORDImage;
  dest_image ORDSYS.ORDImage;
  prop ordsys.ord_str_list;
  logging VARCHAR2(2000);
BEGIN
  select product_photo into source_image from pm.online_media
    where product_id = 4001;
  select product_photo into added_image from pm.online_media
    where product_id = 4002;
  select product_photo into dest_image from pm.online_media
    where product_id = 4003 for update;
 
  -- specify properties
  prop := ordsys.ord_str_list(
                   'position=bottomright',
                   'transparency=0.2');
 
  -- add image watermark to source image
  source_image.applyWatermark(added_image, dest_image, logging, prop);
  update pm.online_media set product_photo = dest_image where product_id = 4003;
  commit;
EXCEPTION
  WHEN OTHERS THEN
      RAISE;
END;
/
</pre>
<p>where:</p>
<ul>
<li>
<p><code>product_id 4001</code>: the source image (in JPEG format) stored in the table. The source image is larger than the watermark image.</p>
</li>
<li>
<p><code>product_id 4002</code>: the watermark image (in PNG format) stored in the table. The watermark image is overlaid onto the bottom right position of the source image.</p>
</li>
<li>
<p><code>product_id 4003</code>: the resulting watermarked image stored in the table.</p>
</li>
</ul>
<a id="CHDDEHEG"></a><a id="AIVUG80762"></a>
<hr />
<h3 class="refsect2"><a id="sthref617"></a><a id="sthref618"></a>applyWatermark( ) text</h3>
<p class="titleinrefsubsect"><a id="sthref619"></a>Format</p>
<p class="synopsis">applyWatermark(SELF IN OUT NOCOPY ORDImage, added_text IN VARCHAR2, dest IN OUT NOCOPY ORDImage, logging OUT VARCHAR2, watermark_properties IN ORDSYS.ORD_STR_LIST default null),</p>
<p class="titleinrefsubsect"><a id="sthref620"></a>Description</p>
<p>Overlays a text watermark onto a source image and writes it to a destination image object.</p>
<p class="titleinrefsubsect"><a id="sthref621"></a>Parameters</p>
<dl>
<dt>added_text</dt>
<dd>
<p>The watermark text stored in a string to be added to the source image.</p>
</dd>
<dt>dest</dt>
<dd>
<p>The destination ORDImage object for the watermarked image.</p>
</dd>
<dt>logging</dt>
<dd>
<p>A string that contains information about any unexpected behavior that occurred during the watermarking operation. If the operation is successful, an empty string is returned. Otherwise, this method returns a string that describes the unexpected behavior. For example: if watermark text is so long that it is truncated, this string is returned: <code>WARNING: text is too long and truncated.</code></p>
</dd>
<dt>watermark_properties</dt>
<dd>
<p>A string list of name-value pairs that define the attributes of the watermark text to be overlaid, including: font_name, font_style, font_size, text_color, position_x, position_y, and transparency. See <a href="ap_imgproc.htm#BIHJFADG">Table D-2</a> for the complete list of watermark properties.</p>
</dd>
</dl>
<p class="titleinrefsubsect"><a id="sthref622"></a>Usage Notes</p>
<p>You cannot specify the same ORDImage as both the source and destination.</p>
<p>Calling this method processes the image into the destination BLOB from any source (local or external).</p>
<p>See <a href="ap_imgproc.htm#BIHHICGG">Section D.6</a> for more information about watermarking operations and watermark properties.</p>
<p class="titleinrefsubsect"><a id="sthref623"></a>Pragmas</p>
<p>None.</p>
<p class="titleinrefsubsect"><a id="sthref624"></a>Exceptions</p>
<p>ORDImageExceptions.DATA_NOT_LOCAL</p>
<p>This exception is raised if you call the applyWatermark( ) method and the value of the destination image source.local attribute is <code>0</code> or the destination source.localData attribute is not initialized.</p>
<p>ORDImageExceptions.NULL_DESTINATION</p>
<p>This exception is raised if you call the applyWatermark( ) method and the destination image is NULL.</p>
<p>ORDImageExceptions.NULL_LOCAL_DATA</p>
<p>This exception is raised if you call the applyWatermark( ) method and the value of the destination image source.localData attribute is <code>NULL</code>. This exception is also raised if you call the applyWatermark( ) method and the value of the source image source.local attribute is <code>1</code> or <code>NULL</code>, and the value of the source.localData attribute is <code>NULL</code>.</p>
<p>ORDImageExceptions.NULL_SOURCE</p>
<p>This exception is raised if the source image source attribute value is <code>NULL</code>.</p>
<p>See <a href="ap_excpts.htm#g630514">Appendix G</a> for more information about these exceptions.</p>
<p class="titleinrefsubsect"><a id="sthref625"></a>Examples</p>
<p>Add watermark text to a source image:</p>
<pre>
-- add text as watermark to source image
DECLARE
  source_image ORDSYS.ORDImage;
  added_text varchar2(200);
  dest_image ORDSYS.ORDImage;
  prop ordsys.ord_str_list;
  logging VARCHAR2(2000);
BEGIN
  select product_photo into source_image from pm.online_media
    where product_id = 4001;
  select product_photo into dest_image from pm.online_media
    where product_id = 4003 for update;
 
  added_text := 'Oracle Multimedia &copy; 2009';
  -- specify properties
  prop := ordsys.ord_str_list(
                   'font_name=Times New Roman',
                   'font_style=bold',
                   'font_size=50',
                   'text_color=red',
                   'position_x=100',
                   'position_y=100',
                   'transparency=0.6');
 
  -- add text watermark to source image
  source_image.applyWatermark(added_text, dest_image, logging, prop);
  update pm.online_media set product_photo = dest_image where product_id = 4003;
  commit;
EXCEPTION
  WHEN OTHERS THEN
      RAISE;
END;
/
</pre>
<p>where:</p>
<ul>
<li>
<p><code>product_id 4001</code>: the source image (in JPEG format) stored in the table.</p>
</li>
<li>
<p><code>product_id 4003</code>: the resulting watermarked image stored in the table.</p>
</li>
</ul>
<a id="BABBAFHD"></a><a id="AIVUG80474"></a>
<hr />
<h3 class="refsect2"><a id="sthref626"></a><a id="sthref627"></a>checkProperties( )</h3>
<p class="titleinrefsubsect"><a id="sthref628"></a>Format</p>
<p class="synopsis">checkProperties( ) RETURN BOOLEAN;</p>
<p class="titleinrefsubsect"><a id="sthref629"></a>Description</p>
<p>Verifies that the properties stored in attributes of the image object match the properties of the image. Do not use this method for foreign images (those formats not natively supported by Oracle Multimedia).</p>
<p class="titleinrefsubsect"><a id="sthref630"></a>Parameters</p>
<p>None.</p>
<p class="titleinrefsubsect"><a id="sthref631"></a>Usage Notes</p>
<p>Use this method to verify that the image attributes match the actual image.</p>
<p class="titleinrefsubsect"><a id="sthref632"></a>Pragmas</p>
<p>None.</p>
<p class="titleinrefsubsect"><a id="sthref633"></a>Exceptions</p>
<p>ORDImageExceptions.NULL_SOURCE</p>
<p>This exception is raised when the value of the ORDImage.source attribute is <code>NULL</code>.</p>
<p>See <a href="ap_excpts.htm#g630514">Appendix G</a> for more information about this exception.</p>
<p class="titleinrefsubsect"><a id="sthref634"></a>Examples</p>
<p>Check the image attributes:</p>
<pre>
DECLARE
 image ORDSYS.ORDImage;
 properties_match BOOLEAN;
BEGIN
 SELECT p.product_photo INTO image FROM pm.online_media p
  WHERE p.product_id = 3515;
 -- check that properties match the image
 properties_match := image.checkProperties();
 IF properties_match THEN
  DBMS_OUTPUT.PUT_LINE('Check Properties succeeded');
 ELSE
  DBMS_OUTPUT.PUT_LINE('Check Properties failed');
 END IF;
COMMIT;
END;
/
</pre>
<a id="BABJEAJD"></a><a id="AIVUG80475"></a>
<hr />
<h3 class="refsect2"><a id="sthref635"></a><a id="sthref636"></a>copy( )</h3>
<p class="titleinrefsubsect"><a id="sthref637"></a>Format</p>
<p class="synopsis">copy(dest IN OUT ORDImage);</p>
<p class="titleinrefsubsect"><a id="sthref638"></a>Description</p>
<p>Copies an image without changing it.</p>
<p class="titleinrefsubsect"><a id="sthref639"></a>Parameters</p>
<dl>
<dt>dest</dt>
<dd>
<p>The destination of the new image.</p>
</dd>
</dl>
<p class="titleinrefsubsect"><a id="sthref640"></a>Usage Notes</p>
<p>This method copies the image data, as is, including all source and image attributes, into the supplied local destination image.</p>
<p>If the data is stored locally in the source, then calling this method copies the BLOB to the destination source.localData attribute.</p>
<p>Calling this method copies the external source information to the external source information of the new image, whether the source data is stored locally or not.</p>
<p>Calling this method implicitly calls the setUpdateTime( ) method on the destination object to update its time stamp information.</p>
<p class="titleinrefsubsect"><a id="sthref641"></a>Pragmas</p>
<p>None.</p>
<p class="titleinrefsubsect"><a id="sthref642"></a>Exceptions</p>
<p>ORDImageExceptions.NULL_SOURCE</p>
<p>This exception is raised when the value of the ORDImage.source attribute is <code>NULL</code>.</p>
<p>See <a href="ap_excpts.htm#g630514">Appendix G</a> for more information about this exception.</p>
<p class="titleinrefsubsect"><a id="sthref643"></a>Examples</p>
<p>Create a copy of an image:</p>
<pre>
DECLARE
 image_1 ORDSYS.ORDImage;
 image_2 ORDSYS.ORDImage;
BEGIN
 -- Initialize a new ORDImage object where the copy will be stored:
  INSERT INTO pm.online_media (product_id, product_photo) 
  VALUES (3091, ORDSYS.ORDImage.init());
 -- Select the source object into image_1:
 SELECT product_photo INTO image_1 FROM pm.online_media 
   WHERE product_id = 3515;
 -- Select the target object into image_2:
 SELECT product_photo INTO image_2 FROM pm.online_media 
   WHERE product_id = 3091 FOR UPDATE;
 -- Copy the data from image_1 to image_2:
 image_1.copy(image_2);
 UPDATE pm.online_media SET product_photo = image_2
  WHERE product_id = 3091;
 COMMIT;
END;
/
</pre>
<a id="BABJEJDG"></a><a id="AIVUG80476"></a>
<hr />
<h3 class="refsect2"><a id="sthref644"></a><a id="sthref645"></a>getCompressionFormat( )</h3>
<p class="titleinrefsubsect"><a id="sthref646"></a>Format</p>
<p class="synopsis">getCompressionFormat( ) RETURN VARCHAR2;</p>
<p class="titleinrefsubsect"><a id="sthref647"></a>Description</p>
<p>Returns the value of the compressionFormat attribute of the image object.</p>
<p class="titleinrefsubsect"><a id="sthref648"></a>Parameters</p>
<p>None.</p>
<p class="titleinrefsubsect"><a id="sthref649"></a>Usage Notes</p>
<p>Use this method rather than accessing the compressionFormat attribute directly to protect yourself from potential changes to the internal representation of the ORDImage object.</p>
<p class="titleinrefsubsect"><a id="sthref650"></a>Pragmas</p>
<p>PRAGMA RESTRICT_REFERENCES(getCompressionFormat, WNDS, WNPS, RNDS, RNPS)</p>
<p class="titleinrefsubsect"><a id="sthref651"></a>Exceptions</p>
<p>None.</p>
<p class="titleinrefsubsect"><a id="sthref652"></a>Examples</p>
<p>Get the compression type of an image:</p>
<pre>
DECLARE
 image ORDSYS.ORDImage;
 compression_format VARCHAR2(4000);
BEGIN
 SELECT p.product_photo INTO image FROM pm.online_media p
  WHERE p.product_id = 3515;
 -- Get the image compression format:
 compression_format := image.getCompressionFormat();
 DBMS_OUTPUT.PUT_LINE('Compression format is ' || compression_format);
 COMMIT;
END;
/
</pre>
<a id="BABHAFBD"></a><a id="AIVUG80477"></a>
<hr />
<h3 class="refsect2"><a id="sthref653"></a><a id="sthref654"></a>getContentFormat( )</h3>
<p class="titleinrefsubsect"><a id="sthref655"></a>Format</p>
<p class="synopsis">getContentFormat( ) RETURN VARCHAR2;</p>
<p class="titleinrefsubsect"><a id="sthref656"></a>Description</p>
<p>Returns the value of the contentFormat attribute of the image object.</p>
<p class="titleinrefsubsect"><a id="sthref657"></a>Parameters</p>
<p>None.</p>
<p class="titleinrefsubsect"><a id="sthref658"></a>Usage Notes</p>
<p>Use this method rather than accessing the contentFormat attribute directly to protect yourself from potential changes to the internal representation of the ORDImage object.</p>
<p class="titleinrefsubsect"><a id="sthref659"></a>Pragmas</p>
<p>PRAGMA RESTRICT_REFERENCES(getContentFormat, WNDS, WNPS, RNDS, RNPS)</p>
<p class="titleinrefsubsect"><a id="sthref660"></a>Exceptions</p>
<p>None.</p>
<p class="titleinrefsubsect"><a id="sthref661"></a>Examples</p>
<p>Get the content type of an image:</p>
<pre>
DECLARE
 image ORDSYS.ORDImage;
 content_format VARCHAR2(4000);
BEGIN
 SELECT p.product_photo INTO image FROM pm.online_media p
  WHERE p.product_id = 3515;
 -- Get the image content format:
 content_format := image.getContentFormat();
 DBMS_OUTPUT.PUT_LINE('Content format is ' || content_format);
 COMMIT;
END;
/
</pre>
<a id="BABHBEAC"></a><a id="AIVUG80478"></a>
<hr />
<h3 class="refsect2"><a id="sthref662"></a><a id="sthref663"></a>getContentLength( )</h3>
<p class="titleinrefsubsect"><a id="sthref664"></a>Format</p>
<p class="synopsis">getContentLength( ) RETURN INTEGER;</p>
<p class="titleinrefsubsect"><a id="sthref665"></a>Description</p>
<p>Returns the value of the contentLength attribute of the image object.</p>
<p class="titleinrefsubsect"><a id="sthref666"></a>Parameters</p>
<p>None.</p>
<p class="titleinrefsubsect"><a id="sthref667"></a>Usage Notes</p>
<p>Use this method rather than accessing the contentLength attribute directly to protect from potential future changes to the internal representation of the ORDImage object.</p>
<p class="titleinrefsubsect"><a id="sthref668"></a>Pragmas</p>
<p>PRAGMA RESTRICT_REFERENCES(getContentLength, WNDS, WNPS, RNDS, RNPS)</p>
<p class="titleinrefsubsect"><a id="sthref669"></a>Exceptions</p>
<p>None.</p>
<p class="titleinrefsubsect"><a id="sthref670"></a>Examples</p>
<p>Get the content length of an image:</p>
<pre>
DECLARE
 image ORDSYS.ORDImage;
 content_length INTEGER;
BEGIN
 SELECT p.product_photo INTO image FROM pm.online_media p
  WHERE p.product_id = 3515;
 -- Get the image size:
 content_length := image.getContentLength();
 DBMS_OUTPUT.PUT_LINE('Content length is ' || content_length);
 COMMIT;
END;
/
</pre>
<a id="BABIDGAH"></a><a id="AIVUG80479"></a>
<hr />
<h3 class="refsect2"><a id="sthref671"></a><a id="sthref672"></a>getFileFormat( )</h3>
<p class="titleinrefsubsect"><a id="sthref673"></a>Format</p>
<p class="synopsis">getFileFormat( ) RETURN VARCHAR2;</p>
<p class="titleinrefsubsect"><a id="sthref674"></a>Description</p>
<p>Returns the value of the fileFormat attribute of the image object.</p>
<p class="titleinrefsubsect"><a id="sthref675"></a>Parameters</p>
<p>None.</p>
<p class="titleinrefsubsect"><a id="sthref676"></a>Usage Notes</p>
<p>Use this method rather than accessing the fileFormat attribute directly to protect yourself from potential changes to the internal representation of the ORDImage object.</p>
<p class="titleinrefsubsect"><a id="sthref677"></a>Pragmas</p>
<p>PRAGMA RESTRICT_REFERENCES(getFileFormat, WNDS, WNPS, RNDS, RNPS)</p>
<p class="titleinrefsubsect"><a id="sthref678"></a>Exceptions</p>
<p>None.</p>
<p class="titleinrefsubsect"><a id="sthref679"></a>Examples</p>
<p>Get the file type of an image:</p>
<pre>
DECLARE
 image ORDSYS.ORDImage;
 file_format VARCHAR2(4000);
BEGIN
 SELECT p.product_photo INTO image FROM pm.online_media p
  WHERE p.product_id = 3515;
 -- Get the image file format:
 file_format := image.getFileFormat();
 DBMS_OUTPUT.PUT_LINE('File format is ' || file_format);
COMMIT;
END;
/
</pre>
<a id="BABEHEDD"></a><a id="AIVUG80480"></a>
<hr />
<h3 class="refsect2"><a id="sthref680"></a><a id="sthref681"></a>getHeight( )</h3>
<p class="titleinrefsubsect"><a id="sthref682"></a>Format</p>
<p class="synopsis">getHeight( ) RETURN INTEGER;</p>
<p class="titleinrefsubsect"><a id="sthref683"></a>Description</p>
<p>Returns the value of the height attribute of the image object.</p>
<p class="titleinrefsubsect"><a id="sthref684"></a>Parameters</p>
<p>None.</p>
<p class="titleinrefsubsect"><a id="sthref685"></a>Usage Notes</p>
<p>Use this method rather than accessing the height attribute directly to protect yourself from potential changes to the internal representation of the ORDImage object.</p>
<p class="titleinrefsubsect"><a id="sthref686"></a>Pragmas</p>
<p>PRAGMA RESTRICT_REFERENCES(getHeight, WNDS, WNPS, RNDS, RNPS)</p>
<p class="titleinrefsubsect"><a id="sthref687"></a>Exceptions</p>
<p>None.</p>
<p class="titleinrefsubsect"><a id="sthref688"></a>Examples</p>
<p>Get the height of an image:</p>
<pre>
DECLARE
 image ORDSYS.ORDImage;
 height INTEGER;
BEGIN
 SELECT p.product_photo INTO image FROM pm.online_media p
  WHERE p.product_id = 3515;
 -- Get the image height:
 height := image.getHeight();
 DBMS_OUTPUT.PUT_LINE('Height is ' || height);
 COMMIT;
END;
/
</pre>
<a id="BABGEBFA"></a><a id="AIVUG80481"></a>
<hr />
<h3 class="refsect2"><a id="sthref689"></a><a id="sthref690"></a>getMetadata( )</h3>
<p class="titleinrefsubsect"><a id="sthref691"></a>Format</p>
<p class="synopsis">getMetadata(metadataType IN VARCHAR2 DEFAULT 'ALL' ) RETURN XMLSequenceType ;</p>
<p class="titleinrefsubsect"><a id="sthref692"></a>Description</p>
<p>Extracts the specified types of metadata from the image and returns an array of schema-valid XML documents. If no matching metadata is found, an empty array is returned.</p>
<p class="titleinrefsubsect"><a id="sthref693"></a>Parameters</p>
<dl>
<dt>metadataType</dt>
<dd>
<p>A string that specifies the types of embedded metadata to extract. Valid values are: <code>ALL</code>, <code>ORDIMAGE</code>, <code>XMP</code>, <code>EXIF</code>, and <code>IPTC-IIM</code>. The default value is <code>ALL</code>.</p>
</dd>
</dl>
<p class="titleinrefsubsect"><a id="sthref694"></a>Usage Notes</p>
<p>When the value of the input parameter metadataType is <code>ALL</code>, and two or more types of supported metadata are present in the image, this method returns several XML documents, one for each type of metadata found. For other values of the input parameter, the method returns zero or one XML document.</p>
<p>Each document is stored as an instance of XMLType, and is based on one of the metadata schemas. Use the XQuery function <code>fn:namespace-uri</code> to determine the type of metadata represented in that document.</p>
<p>See <a href="ap_xmlschms.htm#CIHBDJCC">Appendix F</a> for a description of the supported metadata schemas.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a class="olink IMURG3500" href="../../appdev.112/e10777/ch_metadata.htm#IMURG3500"><span class="italic">Oracle Multimedia User's Guide</span></a> for more information about the metadata feature</p>
</li>
<li>
<p><a class="olink ADXDB1700" href="../../appdev.112/e23094/xdb_xquery.htm#ADXDB1700"><span class="italic">Oracle XML DB Developer's Guide</span></a> for more information about XQuery functions</p>
</li>
</ul>
</div>
<p class="titleinrefsubsect"><a id="sthref695"></a>Pragmas</p>
<p>None.</p>
<p class="titleinrefsubsect"><a id="sthref696"></a>Exceptions</p>
<p>ORDImageExceptions.NULL_LOCAL_DATA</p>
<p>This exception is raised when source.localData is NULL.</p>
<p>ORDImageExceptions.NULL_SOURCE</p>
<p>This exception is raised when the value of the ORDImage.source attribute is <code>NULL</code>.</p>
<p>See <a href="ap_excpts.htm#g630514">Appendix G</a> for more information about these exceptions.</p>
<p class="titleinrefsubsect"><a id="sthref697"></a>Examples</p>
<p>Extract the embedded metadata, and return an array of schema-valid XML documents:</p>
<pre>
DECLARE 
  image ORDSYS.ORDImage; 
  metav XMLSequenceType; 
  ns    varchar2(4000);
BEGIN 
  SELECT product_photo 
  INTO image
  FROM pm.online_media 
  WHERE product_id = 3106;
  
  metav := image.getMetadata('ALL');
  
  -- print the namespace of each metadata document
  FOR i in 1..metav.count LOOP
    select xmlcast(xmlquery('fn:namespace-uri($x)'
          passing metav(i) as "x" returning content) as varchar2(4000))
      into ns from dual;
    DBMS_OUTPUT.PUT_LINE('namespace: ' || ns);
  END LOOP;
 
  EXCEPTION 
  WHEN ORDSYS.ORDImageExceptions.NULL_LOCAL_DATA THEN 
    DBMS_OUTPUT.PUT_LINE('source local data is null'); 
  WHEN ORDSYS.ORDImageExceptions.NULL_SOURCE THEN 
    DBMS_OUTPUT.PUT_LINE('source is null'); 
  WHEN OTHERS THEN
    RAISE;
END; /
</pre>
<a id="BABJIAIB"></a><a id="AIVUG80482"></a>
<hr />
<h3 class="refsect2"><a id="sthref698"></a><a id="sthref699"></a>getWidth( )</h3>
<p class="titleinrefsubsect"><a id="sthref700"></a>Format</p>
<p class="synopsis">getWidth( ) RETURN INTEGER;</p>
<p class="titleinrefsubsect"><a id="sthref701"></a>Description</p>
<p>Returns the value of the width attribute of the image object</p>
<p class="titleinrefsubsect"><a id="sthref702"></a>Parameters</p>
<p>None.</p>
<p class="titleinrefsubsect"><a id="sthref703"></a>Usage Notes</p>
<p>Use this method rather than accessing the width attribute directly to protect yourself from potential changes to the internal representation of the ORDImage object.</p>
<p class="titleinrefsubsect"><a id="sthref704"></a>Pragmas</p>
<p>PRAGMA RESTRICT_REFERENCES(getWidth, WNDS, WNPS, RNDS, RNPS)</p>
<p class="titleinrefsubsect"><a id="sthref705"></a>Exceptions</p>
<p>None.</p>
<p class="titleinrefsubsect"><a id="sthref706"></a>Examples</p>
<p>Get the width of an image:</p>
<pre>
DECLARE
 image ORDSYS.ORDImage;
 width INTEGER;
BEGIN
 SELECT p.product_photo INTO image FROM pm.online_media p
  WHERE p.product_id = 3515;
 -- Get the image width:
 width := image.getWidth();
 DBMS_OUTPUT.PUT_LINE('Width is ' || width);
 COMMIT;
END;
/
</pre>
<a id="BABCFFGC"></a><a id="AIVUG80483"></a>
<hr />
<h3 class="refsect2"><a id="sthref707"></a><a id="sthref708"></a>import( )</h3>
<p class="titleinrefsubsect"><a id="sthref709"></a>Format</p>
<p class="synopsis">import(ctx IN OUT RAW);</p>
<p class="titleinrefsubsect"><a id="sthref710"></a>Description</p>
<p>Transfers image data from an external image data source to the source.localData attribute (of the embedded ORDSource object) within the database.</p>
<p class="titleinrefsubsect"><a id="sthref711"></a>Parameters</p>
<dl>
<dt>ctx</dt>
<dd>
<p>The source plug-in context information. This parameter must be allocated and initialized to NULL. If you are using a user-defined source plug-in, call the <a href="ch_comref.htm#BABBAGIG">openSource( )</a> method. (See <a href="#BABFFDEA">Section 5.2</a>.)</p>
</dd>
</dl>
<p class="titleinrefsubsect"><a id="sthref712"></a>Usage Notes</p>
<p>Use the setSource( ) method to set the source.srcType, source.srcLocation, and source.srcName attributes (of the embedded ORDSource object) for the external source before calling the import( ) method.</p>
<p>After importing data from an external image data source to a local source (within Oracle Database), the source information remains unchanged (that is, pointing to the source from where the data was imported).</p>
<p>Invoking this method implicitly calls the setUpdateTime( ) and setLocal( ) methods.</p>
<p>If the file format of the imported image is not previously set to a string beginning with <code>OTHER</code>, the setProperties( ) method is also called. Set the file format to a string preceded by <code>OTHER</code> for foreign image formats; calling the setProperties( ) method for foreign images does this for you.</p>
<p>If the value of the source.srcType attribute is <code>FILE</code>, the source.srcLocation attribute contains the name of a database directory object that contains the file to be imported, and the source.srcName attribute contains the name of the file to be imported. You must ensure that the directory for the external source location exists or is created before you use this method.</p>
<p>The import( ) method reads only from a database directory object that the user has privilege to access. That is, you can access a directory object that you have created using the SQL statement CREATE DIRECTORY, or one to which you have been granted READ access.</p>
<p>For example, the following SQL*Plus commands create a directory object and grant the user <code>ron</code> permission to read any file within the directory <code>c:\mydir\work</code>:</p>
<pre>
CONNECT sys as sysdba
Enter password: <span class="italic">password</span>
CREATE OR REPLACE DIRECTORY FILE_DIR AS 'c:\mydir\work';
GRANT READ ON DIRECTORY FILE_DIR TO ron;
</pre>
<p>See <a href="#CHEGCIEG">Section 5.1</a> for more information about directory and table definitions.</p>
<p>If the value of the source.srcType attribute is <code>HTTP</code>, the source.srcLocation attribute contains the base URL needed to find the directory that contains the object to be imported, and the source.srcName attribute contains the name of the object to be imported.</p>
<p>This method uses the <a id="sthref713"></a>PL/SQL UTL_HTTP package to import media data from an HTTP data source. You can use environment variables to specify the proxy behavior of the UTL_HTTP package. For example, on Linux and UNIX, setting the environment variable http_proxy to a URL specifies that the UTL_HTTP package must use that URL as the proxy server for HTTP requests. Setting the no_proxy environment variable to a domain name specifies that the HTTP proxy server not be used for URLs in the specified domain.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<p><a class="olink ARPLS070" href="../../appdev.112/e40758/u_http.htm#ARPLS070"><span class="italic">Oracle Database PL/SQL Packages and Types Reference</span></a> for more information about the UTL_HTTP package</p>
</div>
<p>If the value of the source.srcType attribute is a user-defined name, the source.srcLocation attribute contains an identifier string required to access the user-defined object to be imported, and the source.srcName attribute contains the name of the object to be imported.</p>
<p class="titleinrefsubsect"><a id="sthref714"></a>Pragmas</p>
<p>None.</p>
<p class="titleinrefsubsect"><a id="sthref715"></a>Exceptions</p>
<p>ORDImageExceptions.NULL_SOURCE</p>
<p>This exception is raised when the value of the ORDImage.source attribute is <code>NULL</code>.</p>
<p>ORDSourceExceptions.INCOMPLETE_SOURCE_INFORMATION</p>
<p>This exception is raised if you call the import( ) method and the value of the source.srcType attribute is <code>NULL</code>.</p>
<p>ORDSourceExceptions.METHOD_NOT_SUPPORTED</p>
<p>This exception is raised if you call the import( ) method and this method is not supported by the source plug-in being used.</p>
<p>See <a href="ap_excpts.htm#g630514">Appendix G</a> for more information about these exceptions.</p>
<p class="titleinrefsubsect"><a id="sthref716"></a>Examples</p>
<p>Import image data from an external image data source into the local source:</p>
<pre>
DECLARE
 obj ORDSYS.ORDImage;
 ctx RAW(64) :=NULL;
BEGIN
 SELECT p.product_photo INTO obj FROM pm.online_media p 
  WHERE p.product_id  = 3515 FOR UPDATE;
 DBMS_OUTPUT.PUT_LINE('getting source');
 DBMS_OUTPUT.PUT_LINE('--------------------------');
 -- Get source information
 DBMS_OUTPUT.PUT_LINE(obj.getSource());
 -- Import data
 obj.import(ctx);
 -- Check size
 DBMS_OUTPUT.PUT_LINE('Length is ' || obj.getContentLength());
 UPDATE pm.online_media p SET p.product_photo = obj WHERE p.product_id = 3515;
 COMMIT;
END;
/
</pre>
<a id="BABDHCIC"></a><a id="AIVUG80484"></a>
<hr />
<h3 class="refsect2"><a id="sthref717"></a><a id="sthref718"></a>importFrom( )</h3>
<p class="titleinrefsubsect"><a id="sthref719"></a>Format</p>
<p class="synopsis">importFrom(ctx IN OUT RAW,</p>
<p class="synopsis">source_type IN VARCHAR2,</p>
<p class="synopsis">source_location IN VARCHAR2,</p>
<p class="synopsis">source_name IN VARCHAR2);</p>
<p class="titleinrefsubsect"><a id="sthref720"></a>Description</p>
<p>Transfers image data from the specified external image data source to the source.localData attribute (of the embedded ORDSource object) within the database.</p>
<p class="titleinrefsubsect"><a id="sthref721"></a>Parameters</p>
<dl>
<dt>ctx</dt>
<dd>
<p>The source plug-in context information. This parameter must be allocated and initialized to NULL. If you are using a user-defined source plug-in, call the <a href="ch_comref.htm#BABBAGIG">openSource( )</a> method. (See <a href="#BABFFDEA">Section 5.2</a>.)</p>
</dd>
<dt>source_type</dt>
<dd>
<p>The type of the source image data. (See <a href="ch_comref.htm#BABFJAIE">Table 2-1</a>.)</p>
</dd>
<dt>source_location</dt>
<dd>
<p>The location from which the source image data is to be imported. (See <a href="ch_comref.htm#BABGFBBB">Table 2-2</a>.)</p>
</dd>
<dt>source_name</dt>
<dd>
<p>The name of the source image data. (See <a href="ch_comref.htm#BABBGHFE">Table 2-3</a>.)</p>
</dd>
</dl>
<p class="titleinrefsubsect"><a id="sthref722"></a>Usage Notes</p>
<p>This method is similar to the import( ) method except the source information is specified as parameters to the method instead of separately.</p>
<p>After importing data from an external image data source to a local source (within Oracle Database), the source information (that is, pointing to the source from where the data was imported) is set to the input values.</p>
<p>Invoking this method implicitly calls the setUpdateTime( ) and setLocal( ) methods.</p>
<p>If the file format of the imported image is not previously set to a string beginning with <code>OTHER</code>, the setProperties( ) method is also called. Set the file format to a string preceded by <code>OTHER</code> for foreign image formats; calling the setProperties( ) for foreign images method does this for you.</p>
<p>If the value of the source_type parameter is <code>FILE</code>, the source_location parameter contains the name of a database directory object that contains the file to be imported, and the source_name parameter contains the name of the file to be imported. You must ensure that the directory indicated by the source_location parameter exists or is created before you use this method.</p>
<p>The importFrom( ) method reads only from a database directory object that the user has privilege to access. That is, you can access a directory object that you have created using the SQL statement CREATE DIRECTORY, or one to which you have been granted READ access.</p>
<p>For example, the following SQL*Plus commands create a directory object and grant the user <code>ron</code> permission to read any file within the directory <code>c:\mydir\work</code>:</p>
<pre>
CONNECT sys as sysdba
Enter password: <span class="italic">password</span>
CREATE OR REPLACE DIRECTORY FILE_DIR AS 'c:\mydir\work';
GRANT READ ON DIRECTORY FILE_DIR TO ron;
</pre>
<p>See <a href="#CHEGCIEG">Section 5.1</a> for more information about directory and table definitions.</p>
<p>If the value of the source_type parameter is <code>HTTP</code>, the source_location parameter contains the base URL needed to find the directory that contains the object to be imported, and the source_name parameter contains the name of the object to be imported.</p>
<p>This method uses the <a id="sthref723"></a>PL/SQL UTL_HTTP package to import media data from an HTTP data source. You can use environment variables to specify the proxy behavior of the UTL_HTTP package. For example, on Linux and UNIX, setting the environment variable http_proxy to a URL specifies that the UTL_HTTP package must use that URL as the proxy server for HTTP requests. Setting the no_proxy environment variable to a domain name specifies that the HTTP proxy server not be used for URLs in the specified domain.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<p><a class="olink ARPLS070" href="../../appdev.112/e40758/u_http.htm#ARPLS070"><span class="italic">Oracle Database PL/SQL Packages and Types Reference</span></a> for more information about the UTL_HTTP package</p>
</div>
<p>If the value of the source_type parameter is a user-defined name, the source_location parameter contains an identifier string required to access the user-defined object to be imported, and the source_name parameter contains the name of the object to be imported.</p>
<p class="titleinrefsubsect"><a id="sthref724"></a>Pragmas</p>
<p>None.</p>
<p class="titleinrefsubsect"><a id="sthref725"></a>Exceptions</p>
<p>ORDImageExceptions.NULL_SOURCE</p>
<p>This exception is raised when the value of the ORDImage.source attribute is <code>NULL</code>.</p>
<p>ORDSourceExceptions.METHOD_NOT_SUPPORTED</p>
<p>This exception is raised if you call the importFrom( ) method and this method is not supported by the source plug-in being used.</p>
<p>See <a href="ap_excpts.htm#g630514">Appendix G</a> for more information about these exceptions.</p>
<p class="titleinrefsubsect"><a id="sthref726"></a>Examples</p>
<p>Import image data from the specified external data source into the local source:</p>
<pre>
DECLARE
 obj ORDSYS.ORDImage;
 ctx RAW(64) :=NULL;
BEGIN
 SELECT p.product_photo INTO obj FROM pm.online_media p 
  WHERE p.product_id  = 3501 FOR UPDATE;
 -- set source to a file
 -- import data
 obj.importFrom(ctx,'file','FILE_DIR','speaker.jpg');
 -- check size
 DBMS_OUTPUT.PUT_LINE('Length is ' || obj.getContentLength());
 DBMS_OUTPUT.PUT_LINE('Source is ' || obj.getSource());
 UPDATE pm.online_media p SET p.product_photo = obj WHERE p.product_id = 3501;
 COMMIT;
END;
/
</pre>
<a id="BABHACJI"></a><a id="AIVUG80485"></a>
<hr />
<h3 class="refsect2"><a id="sthref727"></a><a id="sthref728"></a>process( )</h3>
<p class="titleinrefsubsect"><a id="sthref729"></a>Format</p>
<p class="synopsis">process(command IN VARCHAR2);</p>
<p class="titleinrefsubsect"><a id="sthref730"></a>Description</p>
<p>Performs one or more image processing operations on a BLOB, writing the image back onto itself.</p>
<p class="titleinrefsubsect"><a id="sthref731"></a>Parameters</p>
<dl>
<dt>command</dt>
<dd>
<p>A list of image processing operations to perform on the image.</p>
</dd>
</dl>
<p class="titleinrefsubsect"><a id="sthref732"></a>Usage Notes</p>
<p>There is no implicit import( ) or importFrom( ) call performed when you call this method; if data is external, you must first call the import( ) or importFrom( ) method to make the data local before you can process it.</p>
<p>Implicit setProperties( ), setUpdateTime( ), and setMimeType( ) methods are done after the process( ) method is called.</p>
<p>You can change one or more of the image attributes shown in <a href="#BABGGJJH">Table 5-1</a>.</p>
<div class="tblformalwide">
<p class="titleintable"><a id="AIVUG80486"></a><a id="sthref733"></a><a id="BABGGJJH"></a>Table 5-1 Image Processing Operators</p>
<table class="cellalignment1134" title="Image Processing Operators" summary="This table shows the image processing operators, their usage, and values." >
<thead>
<tr class="cellalignment1128">
<th class="cellalignment1135" id="r1c1-t10">Operator Name</th>
<th class="cellalignment1135" id="r1c2-t10">Usage</th>
<th class="cellalignment1135" id="r1c3-t10">Values</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1128">
<td class="cellalignment1136" id="r2c1-t10" headers="r1c1-t10">
<p><a id="sthref734"></a><a id="sthref735"></a>compressionFormat</p>
</td>
<td class="cellalignment1136" headers="r2c1-t10 r1c2-t10">
<p>Forces output to the specified compression format if it is supported by the output file format. (See <a href="ap_imgproc.htm#CHDHHHDH">Section D.2.3</a>.)</p>
</td>
<td class="cellalignment1136" headers="r2c1-t10 r1c3-t10">
<p>JPEG, SUNRLE, BMPRLE, TARGARLE, LZW, LZWHDIFF, FAX3, FAX4, HUFFMAN3, PACKBITS, GIFLZW, ASCII, RAW, DEFLATE, NONE</p>
</td>
</tr>
<tr class="cellalignment1128">
<td class="cellalignment1136" id="r3c1-t10" headers="r1c1-t10">
<p><a id="sthref736"></a><a id="sthref737"></a>compressionQuality</p>
</td>
<td class="cellalignment1136" headers="r3c1-t10 r1c2-t10">
<p>Determines the quality of lossy compression; for use with JPEG only. (See <a href="ap_imgproc.htm#CHDICHAI">Section D.2.4</a>.)</p>
</td>
<td class="cellalignment1136" headers="r3c1-t10 r1c3-t10">
<p>MAXCOMPRATIO, MAXINTEGRITY, LOWCOMP, MEDCOMP, HIGHCOMP, or an integer between 0 and 100</p>
</td>
</tr>
<tr class="cellalignment1128">
<td class="cellalignment1136" id="r4c1-t10" headers="r1c1-t10">
<p><a id="sthref738"></a><a id="sthref739"></a>contentFormat</p>
</td>
<td class="cellalignment1136" headers="r4c1-t10 r1c2-t10">
<p>Determines the format of the image content. (See <a href="ap_imgproc.htm#CIHDBFIG">Section D.2.2</a>.)</p>
</td>
<td class="cellalignment1136" headers="r4c1-t10 r1c3-t10">
<p>See <a href="ap_imgproc.htm#CIHDBFIG">Section D.2.2</a> for values</p>
</td>
</tr>
<tr class="cellalignment1128">
<td class="cellalignment1136" id="r5c1-t10" headers="r1c1-t10">
<p><a id="sthref740"></a><a id="sthref741"></a>contrast</p>
</td>
<td class="cellalignment1136" headers="r5c1-t10 r1c2-t10">
<p>Adjusts image contrast. (See <a href="ap_imgproc.htm#CIHFDAGC">Section D.3.1</a>.)<a id="CHDEDAFH" href="#CHDEDAFH" onclick='footdisplay(1,"Enclose floating-point arguments with double quotation marks to ensure correct Globalization Support interpretation.")'><sup class="tablefootnote">Foot&nbsp;1&nbsp;</sup></a></p>
</td>
<td class="cellalignment1136" headers="r5c1-t10 r1c3-t10">
<p>nonnegative FLOAT<a id="CHDICCBE" href="#CHDICCBE" onclick='footdisplay(2,"Specifies the percent contrast enhancement to be applied to all bands (GRAY or RGB)")'><sup class="tablefootnote">Foot&nbsp;2&nbsp;</sup></a>, nonnegative FLOAT FLOAT FLOAT<a id="sthref742" href="#sthref742" onclick='footdisplay(3,"Specifies the percent contrast enhancement to be applied to each band (RGB only)")'><sup class="tablefootnote">Foot&nbsp;3&nbsp;</sup></a>, nonnegative FLOAT FLOAT<a id="sthref743" href="#sthref743" onclick='footdisplay(2,"Specifies the percent contrast enhancement to be applied to all bands (GRAY or RGB)")'><sup class="footnotenumber">Footref&nbsp;2</sup></a>, nonnegative FLOAT FLOAT FLOAT FLOAT FLOAT FLOAT<a id="sthref744" href="#sthref744" onclick='footdisplay(4,"Specifies the bounds for contrast enhancement to be applied to each band (RGB only)")'><sup class="tablefootnote">Foot&nbsp;4&nbsp;</sup></a></p>
</td>
</tr>
<tr class="cellalignment1128">
<td class="cellalignment1136" id="r6c1-t10" headers="r1c1-t10">
<p><a id="sthref745"></a><a id="sthref746"></a>cut</p>
</td>
<td class="cellalignment1136" headers="r6c1-t10 r1c2-t10">
<p>Defines a window to cut or crop (origin.x origin.y width height); first pixel in x or y is 0 (zero); must define a window inside image. (See <a href="ap_imgproc.htm#CHDIEGJA">Section D.3.2</a>.)</p>
</td>
<td class="cellalignment1136" headers="r6c1-t10 r1c3-t10">
<p>nonnegative INTEGER INTEGER INTEGER INTEGER maximum value is <code>2147483648</code></p>
</td>
</tr>
<tr class="cellalignment1128">
<td class="cellalignment1136" id="r7c1-t10" headers="r1c1-t10">
<p><a id="sthref747"></a><a id="sthref748"></a>fileFormat</p>
</td>
<td class="cellalignment1136" headers="r7c1-t10 r1c2-t10">
<p>Forces the output to specified file format. (See <a href="ap_imgproc.htm#CHDDAJCE">Section D.2.1</a>.)</p>
</td>
<td class="cellalignment1136" headers="r7c1-t10 r1c3-t10">
<p>BMPF, CALS, GIFF, JFIF, PBMF, PGMF, PICT, PNGF, PNMF, PPMF, RASF, RPIX, TGAF, TIFF, WBMP</p>
</td>
</tr>
<tr class="cellalignment1128">
<td class="cellalignment1136" id="r8c1-t10" headers="r1c1-t10">
<p><a id="sthref749"></a><a id="sthref750"></a>fixedScale</p>
</td>
<td class="cellalignment1136" headers="r8c1-t10 r1c2-t10">
<p>Scales an image to a specified size in pixels (width, height); cannot be combined with other scale operators. (See <a href="ap_imgproc.htm#CHDGACDH">Section D.3.10.1</a>.)</p>
</td>
<td class="cellalignment1136" headers="r8c1-t10 r1c3-t10">
<p>positive INTEGER INTEGER</p>
</td>
</tr>
<tr class="cellalignment1128">
<td class="cellalignment1136" id="r9c1-t10" headers="r1c1-t10">
<p><a id="sthref751"></a><a id="sthref752"></a>flip</p>
</td>
<td class="cellalignment1136" headers="r9c1-t10 r1c2-t10">
<p>Places the scanlines of an image in inverse order -- swapped top to bottom. (See <a href="ap_imgproc.htm#CHDCHJIB">Section D.3.3</a>.)</p>
</td>
<td class="cellalignment1136" headers="r9c1-t10 r1c3-t10">
<p>No arguments</p>
</td>
</tr>
<tr class="cellalignment1128">
<td class="cellalignment1136" id="r10c1-t10" headers="r1c1-t10">
<p><a id="sthref753"></a><a id="sthref754"></a>gamma</p>
</td>
<td class="cellalignment1136" headers="r10c1-t10 r1c2-t10">
<p>Adjusts gamma (brightness) of an image. (See <a href="ap_imgproc.htm#CIHIGBAD">Section D.3.4</a>.)<a id="sthref755" href="#sthref755" onclick='footdisplay(1,"Enclose floating-point arguments with double quotation marks to ensure correct Globalization Support interpretation.")'><sup class="footnotenumber">Footref&nbsp;1</sup></a></p>
</td>
<td class="cellalignment1136" headers="r10c1-t10 r1c3-t10">
<p>positive FLOAT<a id="sthref756" href="#sthref756" onclick='footdisplay(2,"Specifies the percent contrast enhancement to be applied to all bands (GRAY or RGB)")'><sup class="footnotenumber">Footref&nbsp;2</sup></a>positive FLOAT FLOAT FLOAT<a id="sthref757" href="#sthref757" onclick='footdisplay(5,"Specifies separate gamma values to be applied to each band (RGB only)")'><sup class="tablefootnote">Foot&nbsp;5&nbsp;</sup></a></p>
</td>
</tr>
<tr class="cellalignment1128">
<td class="cellalignment1136" id="r11c1-t10" headers="r1c1-t10">
<p><a id="sthref758"></a><a id="sthref759"></a>maxScale</p>
</td>
<td class="cellalignment1136" headers="r11c1-t10 r1c2-t10">
<p>Scales an image to a specified size in pixels (width, height), while maintaining the aspect ratio; cannot be combined with other scale operators. (See <a href="ap_imgproc.htm#CHDGEEHD">Section D.3.10.2</a>.)</p>
</td>
<td class="cellalignment1136" headers="r11c1-t10 r1c3-t10">
<p>positive INTEGER INTEGER</p>
</td>
</tr>
<tr class="cellalignment1128">
<td class="cellalignment1136" id="r12c1-t10" headers="r1c1-t10">
<p><a id="sthref760"></a><a id="sthref761"></a>mirror</p>
</td>
<td class="cellalignment1136" headers="r12c1-t10 r1c2-t10">
<p>Places columns of an image in reverse order -- swapped left to right. (See <a href="ap_imgproc.htm#CHDICIFA">Section D.3.5</a>.)</p>
</td>
<td class="cellalignment1136" headers="r12c1-t10 r1c3-t10">
<p>No arguments</p>
</td>
</tr>
<tr class="cellalignment1128">
<td class="cellalignment1136" id="r13c1-t10" headers="r1c1-t10">
<p><a id="sthref762"></a><a id="sthref763"></a>nometadata</p>
</td>
<td class="cellalignment1136" headers="r13c1-t10 r1c2-t10">
<p>Processes an image without encoding the image's metadata in the resulting image. (See <a href="ap_imgproc.htm#CIHDGGED">Section D.3.6</a>.)</p>
</td>
<td class="cellalignment1136" headers="r13c1-t10 r1c3-t10">
<p>No arguments</p>
</td>
</tr>
<tr class="cellalignment1128">
<td class="cellalignment1136" id="r14c1-t10" headers="r1c1-t10">
<p><a id="sthref764"></a><a id="sthref765"></a>page</p>
</td>
<td class="cellalignment1136" headers="r14c1-t10 r1c2-t10">
<p>Selects a page from a multipage file; for use with TIFF only; first page is 0 (zero). (See <a href="ap_imgproc.htm#CHDHHCAG">Section D.3.7</a>.)</p>
</td>
<td class="cellalignment1136" headers="r14c1-t10 r1c3-t10">
<p>nonnegative INTEGER</p>
</td>
</tr>
<tr class="cellalignment1128">
<td class="cellalignment1136" id="r15c1-t10" headers="r1c1-t10">
<p><a id="sthref766"></a><a id="sthref767"></a>quantize</p>
</td>
<td class="cellalignment1136" headers="r15c1-t10 r1c2-t10">
<p>Specifies how image quantization is to be performed when reducing image bit depth. (See <a href="ap_imgproc.htm#CIHIJBHH">Section D.3.8</a>.)</p>
</td>
<td class="cellalignment1136" headers="r15c1-t10 r1c3-t10">
<p>ERRORDIFFUSION (default), ORDEREDDITHER, THRESHOLD, MEDIANCUT</p>
</td>
</tr>
<tr class="cellalignment1128">
<td class="cellalignment1136" id="r16c1-t10" headers="r1c1-t10">
<p><a id="sthref768"></a><a id="sthref769"></a>rotate</p>
</td>
<td class="cellalignment1136" headers="r16c1-t10 r1c2-t10">
<p>Rotates an image within the image plane by the angle specified. (See <a href="ap_imgproc.htm#CIHHHBBI">Section D.3.9</a>.)<a id="sthref770" href="#sthref770" onclick='footdisplay(1,"Enclose floating-point arguments with double quotation marks to ensure correct Globalization Support interpretation.")'><sup class="footnotenumber">Footref&nbsp;1</sup></a></p>
</td>
<td class="cellalignment1136" headers="r16c1-t10 r1c3-t10">
<p>FLOAT</p>
</td>
</tr>
<tr class="cellalignment1128">
<td class="cellalignment1136" id="r17c1-t10" headers="r1c1-t10">
<p><a id="sthref771"></a><a id="sthref772"></a>scale</p>
</td>
<td class="cellalignment1136" headers="r17c1-t10 r1c2-t10">
<p>Uniformly scales an image by a given factor (for example, 0 .5 or 2.0); cannot be combined with other scale operators. (See <a href="ap_imgproc.htm#CHDBEDFG">Section D.3.10.3</a>.)<a id="sthref773" href="#sthref773" onclick='footdisplay(1,"Enclose floating-point arguments with double quotation marks to ensure correct Globalization Support interpretation.")'><sup class="footnotenumber">Footref&nbsp;1</sup></a></p>
</td>
<td class="cellalignment1136" headers="r17c1-t10 r1c3-t10">
<p>positive FLOAT</p>
</td>
</tr>
<tr class="cellalignment1128">
<td class="cellalignment1136" id="r18c1-t10" headers="r1c1-t10">
<p><a id="sthref774"></a><a id="sthref775"></a>sharpen</p>
</td>
<td class="cellalignment1136" headers="r18c1-t10 r1c2-t10">
<p>Sharpens an image by a given kernel type and gain factor (for example, 0 and 2.0); can be combined with scale operators. (See <a href="ap_imgproc.htm#BIHJIBBG">Section D.3.11</a>.)<a id="sthref776" href="#sthref776" onclick='footdisplay(1,"Enclose floating-point arguments with double quotation marks to ensure correct Globalization Support interpretation.")'><sup class="footnotenumber">Footref&nbsp;1</sup></a></p>
</td>
<td class="cellalignment1136" headers="r18c1-t10 r1c3-t10">
<p>positive INTEGER positive FLOAT</p>
</td>
</tr>
<tr class="cellalignment1128">
<td class="cellalignment1136" id="r19c1-t10" headers="r1c1-t10">
<p><a id="sthref777"></a><a id="sthref778"></a>tiled</p>
</td>
<td class="cellalignment1136" headers="r19c1-t10 r1c2-t10">
<p>Forces output image to be tiled; for use with TIFF only. (See <a href="ap_imgproc.htm#CHDJCBDD">Section D.3.12</a>.)</p>
</td>
<td class="cellalignment1136" headers="r19c1-t10 r1c3-t10">
<p>No arguments</p>
</td>
</tr>
<tr class="cellalignment1128">
<td class="cellalignment1136" id="r20c1-t10" headers="r1c1-t10">
<p><a id="sthref779"></a><a id="sthref780"></a>transparencyFillColor</p>
</td>
<td class="cellalignment1136" headers="r20c1-t10 r1c2-t10">
<p>Fills the transparent regions of PNG image file formats with color. (See <a href="ap_imgproc.htm#CIHEEBBJ">Section D.3.13</a>.)</p>
</td>
<td class="cellalignment1136" headers="r20c1-t10 r1c3-t10">
<p>BLACK, BLUE, CYAN, DARK_GRAY, GRAY, GREEN, LIGHT_GRAY MAGENTA, ORANGE, PINK, RED, WHITE, YELLOW, or a nonnegative INTEGER INTEGER INTEGER</p>
</td>
</tr>
<tr class="cellalignment1128">
<td class="cellalignment1136" id="r21c1-t10" headers="r1c1-t10">
<p><a id="sthref781"></a><a id="sthref782"></a>xScale</p>
</td>
<td class="cellalignment1136" headers="r21c1-t10 r1c2-t10">
<p>Scales an image on the X-axis by a given factor (default is 1); image is non-uniformly scaled; can be combined with the yScale operator only; cannot be combined with any other scale operators. (See <a href="ap_imgproc.htm#CHDFJGGG">Section D.3.10.4</a>.)<a id="sthref783" href="#sthref783" onclick='footdisplay(1,"Enclose floating-point arguments with double quotation marks to ensure correct Globalization Support interpretation.")'><sup class="footnotenumber">Footref&nbsp;1</sup></a></p>
</td>
<td class="cellalignment1136" headers="r21c1-t10 r1c3-t10">
<p>positive FLOAT</p>
</td>
</tr>
<tr class="cellalignment1128">
<td class="cellalignment1136" id="r22c1-t10" headers="r1c1-t10">
<p><a id="sthref784"></a><a id="sthref785"></a>yScale</p>
</td>
<td class="cellalignment1136" headers="r22c1-t10 r1c2-t10">
<p>Scales the image on theY-axis scale by a given factor (default is 1); non-uniformly scales image; can be combined with the xScale operator only; cannot be combined with any other scale operators. (See <a href="ap_imgproc.htm#CHDEDGCH">Section D.3.10.5</a>.)<a id="sthref786" href="#sthref786" onclick='footdisplay(1,"Enclose floating-point arguments with double quotation marks to ensure correct Globalization Support interpretation.")'><sup class="footnotenumber">Footref&nbsp;1</sup></a></p>
</td>
<td class="cellalignment1136" headers="r22c1-t10 r1c3-t10">
<p>positive FLOAT</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformalwide" -->
<p class="tablefootnote"><sup class="tablefootnote">Footnote&nbsp;1&nbsp;</sup>Enclose floating-point arguments with double quotation marks to ensure correct Globalization Support interpretation.</p>
<p class="tablefootnote"><sup class="tablefootnote">Footnote&nbsp;2&nbsp;</sup>Specifies the percent contrast enhancement to be applied to all bands (GRAY or RGB)</p>
<p class="tablefootnote"><sup class="tablefootnote">Footnote&nbsp;3&nbsp;</sup>Specifies the percent contrast enhancement to be applied to each band (RGB only)</p>
<p class="tablefootnote"><sup class="tablefootnote">Footnote&nbsp;4&nbsp;</sup>Specifies the bounds for contrast enhancement to be applied to each band (RGB only)</p>
<p class="tablefootnote"><sup class="tablefootnote">Footnote&nbsp;5&nbsp;</sup>Specifies separate gamma values to be applied to each band (RGB only)</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
To ensure that floating-point values are interpreted according to the NLS_TERRITORY setting for the session, surround the value with double quotation marks (<code>""</code>). For example, use <code>'scale="0.7"'</code> in the AMERICAN territory, and <code>'scale="0,7"'</code> in the FRENCH territory.</div>
<p><a href="#BABJJDAJ">Table 5-2</a> shows additional changes that can be made only to raw pixel and foreign images.</p>
<div class="tblformalwide">
<p class="titleintable"><a id="AIVUG80487"></a><a id="sthref787"></a><a id="BABJJDAJ"></a>Table 5-2 Additional Image Processing Operators for Raw Pixel and Foreign Images</p>
<table class="cellalignment1134" title="Additional Image Processing Operators for Raw Pixel and Foreign Images" summary="This table shows image processing operators for raw pixel and foreign images, including the operator name, usage, and values." dir="ltr">
<thead>
<tr class="cellalignment1128">
<th class="cellalignment1135" id="r1c1-t12">Operator Name</th>
<th class="cellalignment1135" id="r1c2-t12">Usage</th>
<th class="cellalignment1135" id="r1c3-t12">Values</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1128">
<td class="cellalignment1136" id="r2c1-t12" headers="r1c1-t12">
<p><a id="sthref788"></a><a id="sthref789"></a>channelOrder</p>
</td>
<td class="cellalignment1136" headers="r2c1-t12 r1c2-t12">
<p>Indicates the relative position of the red, green, and blue channels (bands) within the image; changes order of output channels. Only for RPIX. (See <a href="ap_imgproc.htm#CHDIGBIB">Section D.4.1</a>.)</p>
</td>
<td class="cellalignment1136" headers="r2c1-t12 r1c3-t12">
<p>RGB (default), RBG, GRB, GBR, BRG, BGR</p>
</td>
</tr>
<tr class="cellalignment1128">
<td class="cellalignment1136" id="r3c1-t12" headers="r1c1-t12">
<p><a id="sthref790"></a><a id="sthref791"></a><a id="sthref792"></a><a id="sthref793"></a>inputChannels</p>
</td>
<td class="cellalignment1136" headers="r3c1-t12 r1c2-t12">
<p>For multiband images, specifies either one (grayscale) or three integers indicating which channels to assign to red (first), green (second), and blue (third). This operator affects the source image, not the destination; RPIX only. (See <a href="ap_imgproc.htm#CHDDCEAH">Section D.4.4</a>.)</p>
</td>
<td class="cellalignment1136" headers="r3c1-t12 r1c3-t12">
<p>positive INTEGER,<a id="sthref794" href="#sthref794" onclick='footdisplay(1,"Specifies that a single band is to be selected from the input image and that band is to be used to create a grayscale output image")'><sup class="tablefootnote">Foot&nbsp;1&nbsp;</sup></a>positive INTEGER INTEGER INTEGER<a id="sthref795" href="#sthref795" onclick='footdisplay(2,"Specifies that three bands are to be selected from the input image and those bands are to specify the red, green, and blue bands of an RGB output image")'><sup class="tablefootnote">Foot&nbsp;2&nbsp;</sup></a></p>
</td>
</tr>
<tr class="cellalignment1128">
<td class="cellalignment1136" id="r4c1-t12" headers="r1c1-t12">
<p><a id="sthref796"></a><a id="sthref797"></a>pixelOrder</p>
</td>
<td class="cellalignment1136" headers="r4c1-t12 r1c2-t12">
<p>Forces pixel direction. If NORMAL, then the leftmost pixel appears first in the image. RPIX only. (See <a href="ap_imgproc.htm#CHDDFDEC">Section D.4.2</a>.)</p>
</td>
<td class="cellalignment1136" headers="r4c1-t12 r1c3-t12">
<p>NORMAL (default), REVERSE</p>
</td>
</tr>
<tr class="cellalignment1128">
<td class="cellalignment1136" id="r5c1-t12" headers="r1c1-t12">
<p><a id="sthref798"></a><a id="sthref799"></a>scanlineOrder</p>
</td>
<td class="cellalignment1136" headers="r5c1-t12 r1c2-t12">
<p>Forces scanline direction. If NORMAL, then the top scanline appears first in the image. RPIX and BMPF only. (See <a href="ap_imgproc.htm#CHDGAJHC">Section D.4.3</a>.)</p>
</td>
<td class="cellalignment1136" headers="r5c1-t12 r1c3-t12">
<p>NORMAL (default), INVERSE</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformalwide" -->
<p class="tablefootnote"><sup class="tablefootnote">Footnote&nbsp;1&nbsp;</sup>Specifies that a single band is to be selected from the input image and that band is to be used to create a grayscale output image</p>
<p class="tablefootnote"><sup class="tablefootnote">Footnote&nbsp;2&nbsp;</sup>Specifies that three bands are to be selected from the input image and those bands are to specify the red, green, and blue bands of an RGB output image</p>
<p>See <a href="ap_imgproc.htm#g622034">Appendix D</a> for more information about process( ) method operators.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<p><a class="olink IMURG11742" href="../../appdev.112/e10777/ch_examples.htm#IMURG11742"><span class="italic">Oracle Multimedia User's Guide</span></a> for more information about Globalization Support</p>
</div>
<p class="titleinrefsubsect"><a id="sthref800"></a>Pragmas</p>
<p>None.</p>
<p class="titleinrefsubsect"><a id="sthref801"></a>Exceptions</p>
<p>ORDImageExceptions.DATA_NOT_LOCAL</p>
<p>This exception is raised if you call the process( ) method and the data is not local (the source.local attribute is 0).</p>
<p>ORDImageExceptions.NULL_SOURCE</p>
<p>This exception is raised when the value of the ORDImage.source attribute is <code>NULL</code>.</p>
<p>See <a href="ap_excpts.htm#g630514">Appendix G</a> for more information about these exceptions.</p>
<p class="titleinrefsubsect"><a id="sthref802"></a>Examples</p>
<p><span class="bold">Example 1:</span></p>
<p>Change the file format of image1 to GIFF:</p>
<pre>
DECLARE
 obj ORDSYS.ORDImage;
BEGIN
 SELECT product_photo INTO obj FROM pm.online_media
  WHERE product_id = 3515 FOR UPDATE;
 obj.process('fileFormat=GIFF');
 -- Update 
 UPDATE pm.online_media SET product_photo = obj WHERE product_id = 3515;
 -- Roll back to keep original format of image:
 ROLLBACK;
 EXCEPTION
  WHEN ORDSYS.ORDImageExceptions.DATA_NOT_LOCAL THEN
   DBMS_OUTPUT.PUT_LINE('Data is not local');
END;
/
</pre>
<p><span class="bold">Example 2:</span></p>
<p>Change image1 to use a compression format of JPEG with MAXCOMPRATIO and double the length of the image along the X-axis:</p>
<pre>
DECLARE
 obj ORDSYS.ORDImage;
BEGIN
 SELECT product_photo INTO obj FROM pm.online_media
  WHERE product_id = 3515 FOR UPDATE;
  obj.process(
       'compressionFormat=JPEG,compressionQuality=MAXCOMPRATIO, xScale="2.0"'); 
 -- Update: 
 UPDATE pm.online_media SET product_photo = obj WHERE product_id = 3515;
 -- Roll back to keep original format of image:
 ROLLBACK;
 EXCEPTION
  WHEN ORDSYS.ORDImageExceptions.DATA_NOT_LOCAL THEN
   DBMS_OUTPUT.PUT_LINE('Data is not local');
END;
/
</pre>
<div class="infobox-note">
<p class="notep1">Note:</p>
Changing the length on only one axis (for example, xScale=2.0) does not affect the length on the other axis, and would result in image distortion. Also, only the xScale and yScale parameters can be combined in a single scale operation. Any other combinations of scale operators result in an error.</div>
<p><span class="bold">Example 3:</span></p>
<p>Create a thumbnail image:</p>
<p><a id="sthref803"></a>The maxScale and fixedScale operators are especially useful for creating thumbnail images from various-sized originals. The following example creates, at most, a 32-by-32 pixel thumbnail image, preserving the original aspect ratio.</p>
<pre>
DECLARE
 obj ORDSYS.ORDImage;
BEGIN
 SELECT product_photo INTO obj FROM pm.online_media
  WHERE product_id = 3515 FOR UPDATE;
 obj.process('maxScale=32 32');
 UPDATE pm.online_media p SET product_thumbnail = obj 
  WHERE product_id = 3515;
 COMMIT;
 EXCEPTION
  WHEN ORDSYS.ORDImageExceptions.DATA_NOT_LOCAL THEN
   DBMS_OUTPUT.PUT_LINE('Data is not local');
END;
/
</pre>
<p><span class="bold">Example 4:</span></p>
<p>Change the format to TIFF and the content format to 8BIT, BIP pixel layout, LUT interpretation, and RGB color space:</p>
<pre>
DECLARE
 obj ORDSYS.ORDImage;
BEGIN
 SELECT product_photo INTO obj FROM pm.online_media
  WHERE product_id = 3515 FOR UPDATE;
 obj.process('fileFormat=TIFF, contentFormat=8BITBIPLUTRGB');
 UPDATE pm.online_media SET product_photo = obj WHERE product_id = 3515;
 -- Roll back to keep original format of image:
 ROLLBACK;
 EXCEPTION
  WHEN ORDSYS.ORDImageExceptions.DATA_NOT_LOCAL THEN
   DBMS_OUTPUT.PUT_LINE('Data is not local');
END;
/
</pre>
<a id="BABJGJIJ"></a><a id="AIVUG80488"></a>
<hr />
<h3 class="refsect2"><a id="sthref804"></a><a id="sthref805"></a>processCopy( )</h3>
<p class="titleinrefsubsect"><a id="sthref806"></a>Format</p>
<p class="synopsis">processCopy(command IN VARCHAR2,</p>
<p class="synopsis">dest IN OUT ORDImage);</p>
<p class="titleinrefsubsect"><a id="sthref807"></a>Description</p>
<p>Copies an image stored internally or externally to another image stored internally in the source.LocalData attribute (of the embedded ORDSource object) and performs one or more image processing operations on the copy.</p>
<p class="titleinrefsubsect"><a id="sthref808"></a>Parameters</p>
<dl>
<dt>command</dt>
<dd>
<p>A list of image processing changes to make for the image in the new copy.</p>
</dd>
<dt>dest</dt>
<dd>
<p>The destination of the new image.</p>
</dd>
</dl>
<p class="titleinrefsubsect"><a id="sthref809"></a>Usage Notes</p>
<p>You cannot specify the same ORDImage as both the source and destination.</p>
<p>Calling this method processes the image into the destination BLOB from any source (local or external).</p>
<p>Implicit setProperties( ), setUpdateTime( ), and setMimeType( ) methods are applied on the destination image after the processCopy( ) method is called.</p>
<p>See <a href="#BABHACJI">process( )</a>, specifically <a href="#BABGGJJH">Table 5-1</a> and <a href="#BABJJDAJ">Table 5-2</a>, for information about image processing operators.</p>
<p>See <a href="ap_imgproc.htm#g622034">Appendix D</a> for more information about processCopy( ) method operators.</p>
<p class="titleinrefsubsect"><a id="sthref810"></a>Pragmas</p>
<p>None.</p>
<p class="titleinrefsubsect"><a id="sthref811"></a>Exceptions</p>
<p>ORDImageExceptions.DATA_NOT_LOCAL</p>
<p>This exception is raised if you call the processCopy( ) method and the value of the destination image source.local attribute is <code>0</code> or the destination source.localData attribute is not initialized.</p>
<p>ORDImageExceptions.NULL_DESTINATION</p>
<p>This exception is raised if you call the processCopy( ) method and the destination image is NULL.</p>
<p>ORDImageExceptions.NULL_LOCAL_DATA</p>
<p>This exception is raised if you call the processCopy( ) method and the value of the destination image source.localData attribute is <code>NULL</code>. This exception is also raised if you call the processCopy( ) method and the source image source.local attribute value is <code>1</code> or <code>NULL</code>, and the value of the source.localData attribute is <code>NULL</code>.</p>
<p>ORDImageExceptions.NULL_SOURCE</p>
<p>This exception is raised if the value of the source attribute for the source image is <code>NULL</code>.</p>
<p>See <a href="ap_excpts.htm#g630514">Appendix G</a> for more information about these exceptions.</p>
<p class="titleinrefsubsect"><a id="sthref812"></a>Examples</p>
<p>Generate a thumbnail image from a source image:</p>
<pre>
DECLARE
 obj_1 ORDSYS.ORDImage;
 obj_2 ORDSYS.ORDImage;
 
BEGIN
 SELECT product_photo, product_thumbnail INTO obj_1, obj_2 
  FROM pm.online_media
  WHERE product_id = 3515 FOR UPDATE;
  obj_1.processCopy('maxScale=32 32', obj_2);
 UPDATE pm.online_media SET product_thumbnail = obj_2 
  WHERE product_id=3515;
 COMMIT;
EXCEPTION
  WHEN ORDSYS.ORDImageExceptions.NULL_DESTINATION THEN
   DBMS_OUTPUT.PUT_LINE('The destination is null');
  WHEN ORDSYS.ORDImageExceptions.DATA_NOT_LOCAL THEN
   DBMS_OUTPUT.PUT_LINE('Data is not local');
  WHEN ORDSYS.ORDImageExceptions.NULL_LOCAL_DATA THEN
   DBMS_OUTPUT.PUT_LINE('dest.source.localData attribute is null');
COMMIT;
END;
/
</pre>
<a id="BABDBEHC"></a><a id="AIVUG80489"></a>
<hr />
<h3 class="refsect2"><a id="sthref813"></a><a id="sthref814"></a>putMetadata( )</h3>
<p class="titleinrefsubsect"><a id="sthref815"></a>Format</p>
<p class="synopsis">putMetadata(xmlData IN NOCOPY XMLType, metadataType IN VARCHAR2 DEFAULT 'XMP' encoding IN VARCHAR2 DEFAULT 'UTF-8');</p>
<p class="titleinrefsubsect"><a id="sthref816"></a>Description</p>
<p>Accepts a schema-valid XML document and creates a binary packet suitable for embedding in the target image file format. The packet is encoded according to the value of the encoding parameter. If the value of the metadataType parameter is <code>XMP</code>, this method writes a new XMP packet to the image, replacing any existing XMP packets.</p>
<p class="titleinrefsubsect"><a id="sthref817"></a>Parameters</p>
<dl>
<dt>xmlData</dt>
<dd>
<p>The XMLType that contains a schema-valid XML document for the indicated metadataType. If the value of the metadataType parameter is <code>XMP</code>, the root element should contain a well-formed RDF document.</p>
</dd>
<dt>metadataType</dt>
<dd>
<p>A string that specifies the type of metadata to write. The valid value is <code>XMP</code>; it is also the default.</p>
</dd>
<dt>encoding</dt>
<dd>
<p>The character encoding to be used in the image file. Valid values are: <code>UTF-8</code>, <code>UTF-16</code>, <code>UTF-16BE</code>, and <code>UTF-16LE</code>. The default is <code>UTF-8</code>.</p>
</dd>
</dl>
<p class="titleinrefsubsect"><a id="sthref818"></a>Usage Notes</p>
<p>The binary metadata packet generated from the same xmlData input may have different sizes for different encodings. Different image file formats support different encodings, and may restrict the binary metadata packet size. The restrictions of the supported image formats are as follows:</p>
<ul>
<li>
<p>GIF89a supports UTF-8 encoding only.</p>
</li>
<li>
<p>JPEG requires a binary packet size of less than 65502 bytes.</p>
</li>
<li>
<p>TIFF requires a binary packet size of less than 4 gigabytes.</p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<p><a class="olink IMURG3500" href="../../appdev.112/e10777/ch_metadata.htm#IMURG3500"><span class="italic">Oracle Multimedia User's Guide</span></a> for more information about the metadata feature</p>
</div>
<p class="titleinrefsubsect"><a id="sthref819"></a>Pragmas</p>
<p>None.</p>
<p class="titleinrefsubsect"><a id="sthref820"></a>Exceptions</p>
<p>ORDImageExceptions.DATA_NOT_LOCAL</p>
<p>This exception is raised when the data is not local (the source.local attribute is 0.)</p>
<p>ORDImageExceptions.NULL_LOCAL_DATA</p>
<p>This exception is raised when source.localData is NULL.</p>
<p>ORDImageExceptions.NULL_SOURCE</p>
<p>This exception is raised when the value of the ORDImage.source attribute is <code>NULL</code>.</p>
<p>See <a href="ap_excpts.htm#g630514">Appendix G</a> for more information about these exceptions.</p>
<p class="titleinrefsubsect"><a id="sthref821"></a>Examples</p>
<p>Replace an ORDImage object in the table <code>pm.online_media</code> with a new ORDImage object, with updated XMP metadata:</p>
<pre>
DECLARE
  image     ORDSYS.ORDImage;
  xmlData   XMLType;
BEGIN
  SELECT product_photo 
  INTO image
  FROM pm.online_media
  WHERE product_id = 3106 FOR UPDATE; 
 
  xmlData := xmltype(
       '&lt;xmpMetadata xmlns="http://xmlns.oracle.com/ord/meta/xmp"&gt;' ||
       '&lt;rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"' ||
       '  xmlns:dc="http://purl.org/dc/elements/1.1/"&gt;' ||
       '&lt;dc:rights&gt;' ||
       '  &lt;rdf:Alt&gt;' ||
       '    &lt;rdf:li&gt;' ||
       '      Oracle Corporation' ||
       '    &lt;/rdf:li&gt;' ||
       '  &lt;/rdf:Alt&gt;'||
       '&lt;/dc:rights&gt;' ||
       '&lt;/rdf:RDF&gt;' ||
       '&lt;/xmpMetadata&gt;', 'http://xmlns.oracle.com/ord/meta/xmp'); 
 
  image.putMetadata(xmlData, 'xmp', 'utf-8'); 
 
  UPDATE pm.online_media 
  SET product_photo = image 
  WHERE product_id=3106;
  COMMIT;
 
  EXCEPTION
    WHEN ORDSYS.ORDImageExceptions.DATA_NOT_LOCAL THEN
      DBMS_OUTPUT.PUT_LINE('Data is not local');
    WHEN ORDSYS.ORDImageExceptions.NULL_LOCAL_DATA THEN
      DBMS_OUTPUT.PUT_LINE('source.localData attribute is null');
    WHEN ORDSYS.ORDImageExceptions.NULL_SOURCE THEN
      DBMS_OUTPUT.PUT_LINE('source is null');
    WHEN OTHERS THEN
      RAISE;
    END;/
</pre>
<a id="BABFBFDB"></a><a id="AIVUG80490"></a>
<hr />
<h3 class="refsect2"><a id="sthref822"></a><a id="sthref823"></a>setProperties( )</h3>
<p class="titleinrefsubsect"><a id="sthref824"></a>Format</p>
<p class="synopsis">setProperties( );</p>
<p class="titleinrefsubsect"><a id="sthref825"></a>Description</p>
<p>Reads the image data to get the values of the object attributes, then stores them into the appropriate attribute fields. The image data can be stored in the database the source.localData attribute, or externally in a BFILE or URL. If the data is stored externally in anything other than a BFILE, the data is read into a temporary BLOB in so as to determine the image characteristics.</p>
<p>Do not call this method for foreign images. Use the <a href="#BABGBBDI">setProperties( ) for foreign images</a> method instead.</p>
<p class="titleinrefsubsect"><a id="sthref826"></a>Parameters</p>
<p>None.</p>
<p class="titleinrefsubsect"><a id="sthref827"></a>Usage Notes</p>
<p>After you have copied, stored, or processed a native format image, call this method to set the current characteristics of the new content, unless this method is called implicitly.</p>
<p>This method sets this information about an image:</p>
<ul>
<li>
<p>Height in pixels</p>
</li>
<li>
<p>Width in pixels</p>
</li>
<li>
<p>Data size of the image on disk, in bytes</p>
</li>
<li>
<p>File type (TIFF, JFIF, and so on)</p>
</li>
<li>
<p>Image type (monochrome and so on)</p>
</li>
<li>
<p>Compression type (JPEG, LZW, and so on)</p>
</li>
<li>
<p>MIME type (generated based on file format)</p>
</li>
</ul>
<p>Calling this method implicitly calls the setUpdateTime( ) and the setMimeType( ) methods.</p>
<p class="titleinrefsubsect"><a id="sthref828"></a>Pragmas</p>
<p>None.</p>
<p class="titleinrefsubsect"><a id="sthref829"></a>Exceptions</p>
<p>ORDImageExceptions.NULL_LOCAL_DATA</p>
<p>This exception is raised if you call the setProperties( ) method and the value of the source.local attribute is <code>1</code> or <code>NULL</code> and the value of the source.localData attribute is <code>NULL</code>.</p>
<p>ORDImageExceptions.NULL_SOURCE</p>
<p>This exception is raised when the value of the ORDImage.source attribute is <code>NULL</code>.</p>
<p>See <a href="ap_excpts.htm#g630514">Appendix G</a> for more information about these exceptions.</p>
<p class="titleinrefsubsect"><a id="sthref830"></a>Examples</p>
<p>Select the image, and then set the attributes using the setProperties( ) method:</p>
<pre>
DECLARE
 image ORDSYS.ORDImage;
BEGIN
 SELECT p.product_photo INTO image FROM pm.online_media p
  WHERE p.product_id = 3515 FOR UPDATE;
 -- set property attributes for the image data
 image.setProperties();
 DBMS_OUTPUT.PUT_LINE('image width = ' || image.getWidth());
 DBMS_OUTPUT.PUT_LINE('image height = ' || image.getHeight());
 DBMS_OUTPUT.PUT_LINE('image size = ' || image.getContentLength());
 DBMS_OUTPUT.PUT_LINE('image file type = ' || image.getFileFormat());
 DBMS_OUTPUT.PUT_LINE('image type = ' || image.getContentFormat());
 DBMS_OUTPUT.PUT_LINE('image compression = ' || image.getCompressionFormat());
 DBMS_OUTPUT.PUT_LINE('image mime type = ' || image.getMimeType());
 UPDATE pm.online_media p SET p.product_photo = image 
   WHERE p.product_id = 3515;
 COMMIT;
END;
/
</pre>
<pre>
</pre>
<a id="BABGBBDI"></a><a id="AIVUG80491"></a>
<hr />
<h3 class="refsect2"><a id="sthref831"></a><a id="sthref832"></a>setProperties( ) for foreign images</h3>
<p class="titleinrefsubsect"><a id="sthref833"></a>Format</p>
<p class="synopsis">setProperties(description IN VARCHAR2);</p>
<p class="titleinrefsubsect"><a id="sthref834"></a>Description</p>
<p>Lets you write the characteristics of certain foreign images whose format is not natively understood by Oracle Multimedia into the appropriate attribute fields.</p>
<p class="titleinrefsubsect"><a id="sthref835"></a>Parameters</p>
<dl>
<dt>description</dt>
<dd>
<p>The image characteristics to set for the foreign image.</p>
</dd>
</dl>
<p class="titleinrefsubsect"><a id="sthref836"></a>Usage Notes</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
Once you have set the properties for a foreign image, it is up to you to keep the properties consistent. If Oracle Multimedia detects an unknown file format, it does not implicitly set the properties.</div>
<p>See <a href="ap_imgraw.htm#g623413">Appendix E</a> for information about when to use foreign image support. Only some formats that are not natively understood can be described using this setProperties( ) method.</p>
<p>After you have copied, stored, or processed a foreign image, call this method to set the characteristics of the new image content. Unlike the native image types described in <a href="ap_imgfmts.htm#g661665">Appendix B</a>, foreign images either do not contain information about how to interpret the bits in the file or, Oracle Multimedia does not understand the information. In this case, you must set the information explicitly.</p>
<p>You can set the image characteristics for foreign images as described in<a href="#BABHJGHI">Table 5-3</a>.</p>
<div class="tblformalwide">
<p class="titleintable"><a id="AIVUG80492"></a><a id="sthref837"></a><a id="BABHJGHI"></a>Table 5-3 Image Characteristics for Foreign Files</p>
<table class="cellalignment1134" title="Image Characteristics for Foreign Files" summary="This table shows the image characteristics for foreign files, including the field, data type, and description." dir="ltr">
<thead>
<tr class="cellalignment1128">
<th class="cellalignment1135" id="r1c1-t17">Field</th>
<th class="cellalignment1135" id="r1c2-t17">Data Type</th>
<th class="cellalignment1135" id="r1c3-t17">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1128">
<td class="cellalignment1136" id="r2c1-t17" headers="r1c1-t17">
<p>CompressionFormat</p>
</td>
<td class="cellalignment1136" headers="r2c1-t17 r1c2-t17">
<p>STRING</p>
</td>
<td class="cellalignment1136" headers="r2c1-t17 r1c3-t17">
<p>Specifies the compression format value. Valid values are: <code>CCITTG3</code>, <code>CCITTG4</code>, or <code>NONE</code> (default).</p>
</td>
</tr>
<tr class="cellalignment1128">
<td class="cellalignment1136" id="r3c1-t17" headers="r1c1-t17">
<p>DataOffset</p>
</td>
<td class="cellalignment1136" headers="r3c1-t17 r1c2-t17">
<p>INTEGER</p>
</td>
<td class="cellalignment1136" headers="r3c1-t17 r1c3-t17">
<p>Specifies an offset (from the beginning of the file to the start of the image data) that Oracle Multimedia does not try to interpret. Set the offset to skip any potential header. The value must be a nonnegative integer less than the LOB length. The default is zero.</p>
</td>
</tr>
<tr class="cellalignment1128">
<td class="cellalignment1136" id="r4c1-t17" headers="r1c1-t17">
<p>DefaultChannelSelection</p>
</td>
<td class="cellalignment1136" headers="r4c1-t17 r1c2-t17">
<p>INTEGER or</p>
<p>INTEGER, INTEGER, INTEGER</p>
</td>
<td class="cellalignment1136" headers="r4c1-t17 r1c3-t17">
<p>Specifies which bands in a multiband image are interpreted as color channels when the image is read or processed. If a single integer is specified, the image is treated as a grayscale image consisting of the data in the specified band only. If three integers are specified, the image is treated as an RGB image, using the first specified band as the red channel, the second as the green channel, and the third as the blue channel. The first band in the image is numbered 1. The band specifications must be equal to or lower than the number of bands in the image.</p>
<p>For example:</p>
<ul>
<li>
<p>Specify "DefaultChannelSelection = 1" to cause the first band of the image to be interpreted as a grayscale image.</p>
</li>
<li>
<p>Specify "DefaultChannelSelection = 4" to cause the fourth band of the image to be interpreted as a grayscale image.</p>
</li>
<li>
<p>Specify "DefaultChannelSelection = 1, 2, 3" to cause the image to be interpreted as RGB using the first three bands of the image as red, green and blue channels.</p>
</li>
<li>
<p>Specify "DefaultChannelSelection = 3, 1, 4" to cause the image to be interpreted as RGB using the third, first, and fourth bands of the image as the red, green and blue channels.</p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment1128">
<td class="cellalignment1136" id="r5c1-t17" headers="r1c1-t17">
<p>Height</p>
</td>
<td class="cellalignment1136" headers="r5c1-t17 r1c2-t17">
<p>INTEGER</p>
</td>
<td class="cellalignment1136" headers="r5c1-t17 r1c3-t17">
<p>Specifies the height of the image in pixels. The value must be a positive integer. There is no default, thus a value must be specified.</p>
</td>
</tr>
<tr class="cellalignment1128">
<td class="cellalignment1136" id="r6c1-t17" headers="r1c1-t17">
<p>Interleaving</p>
</td>
<td class="cellalignment1136" headers="r6c1-t17 r1c2-t17">
<p>STRING</p>
</td>
<td class="cellalignment1136" headers="r6c1-t17 r1c3-t17">
<p>Specifies the band layout within the image. Valid styles are:</p>
<ul>
<li>
<p>BIP (default) Band Interleaved by Pixel</p>
</li>
<li>
<p>BIL Band Interleaved by Line</p>
</li>
<li>
<p>BSQ Band Sequential</p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment1128">
<td class="cellalignment1136" id="r7c1-t17" headers="r1c1-t17">
<p>NumberOfBands</p>
</td>
<td class="cellalignment1136" headers="r7c1-t17 r1c2-t17">
<p>INTEGER</p>
</td>
<td class="cellalignment1136" headers="r7c1-t17 r1c3-t17">
<p>Specifies the number of color bands in the image with a value that is a positive integer less than 255. The default is 3.</p>
</td>
</tr>
<tr class="cellalignment1128">
<td class="cellalignment1136" id="r8c1-t17" headers="r1c1-t17">
<p>PixelOrder</p>
</td>
<td class="cellalignment1136" headers="r8c1-t17 r1c2-t17">
<p>STRING</p>
</td>
<td class="cellalignment1136" headers="r8c1-t17 r1c3-t17">
<p>Specifies a string to indicate the pixel order. If the string is NORMAL (default), the leftmost pixel appears first in the file. If the string is REVERSE, the rightmost pixel appears first.</p>
</td>
</tr>
<tr class="cellalignment1128">
<td class="cellalignment1136" id="r9c1-t17" headers="r1c1-t17">
<p>ScanlineOrder</p>
</td>
<td class="cellalignment1136" headers="r9c1-t17 r1c2-t17">
<p>STRING</p>
</td>
<td class="cellalignment1136" headers="r9c1-t17 r1c3-t17">
<p>Specifies a string to indicate the scanline order. If the string is NORMAL (default), the top scanline appears first in the file. If the string is INVERSE, then the bottom scanline appears first.</p>
</td>
</tr>
<tr class="cellalignment1128">
<td class="cellalignment1136" id="r10c1-t17" headers="r1c1-t17">
<p>UserString</p>
</td>
<td class="cellalignment1136" headers="r10c1-t17 r1c2-t17">
<p>STRING</p>
</td>
<td class="cellalignment1136" headers="r10c1-t17 r1c3-t17">
<p>Specifies a 4-character descriptive string. If used, the string is stored in the fileFormat attribute, appended to the user string " OTHER:". The default is blank and fileFormat is set to "OTHER".</p>
</td>
</tr>
<tr class="cellalignment1128">
<td class="cellalignment1136" id="r11c1-t17" headers="r1c1-t17">
<p>Width</p>
</td>
<td class="cellalignment1136" headers="r11c1-t17 r1c2-t17">
<p>INTEGER</p>
</td>
<td class="cellalignment1136" headers="r11c1-t17 r1c3-t17">
<p>Specifies the width of the image in pixels. The value must be a positive integer. There is no default, thus a value must be specified.</p>
</td>
</tr>
<tr class="cellalignment1128">
<td class="cellalignment1136" id="r12c1-t17" headers="r1c1-t17">
<p>MimeType</p>
</td>
<td class="cellalignment1136" headers="r12c1-t17 r1c2-t17">
<p>STRING</p>
</td>
<td class="cellalignment1136" headers="r12c1-t17 r1c3-t17">
<p>Specifies a MIME type, such as img/gif.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformalwide" -->
<p>The values supplied to the setProperties( ) for foreign images method are written to the existing ORDImage data attributes. The fileFormat attribute is set to OTHER and includes the user string, if supplied; for example, OTHER: LANDSAT.</p>
<p class="titleinrefsubsect"><a id="sthref838"></a>Pragmas</p>
<p>None.</p>
<p class="titleinrefsubsect"><a id="sthref839"></a>Exceptions</p>
<p>ORDImageExceptions.NULL_PROPERTIES_DESCRIPTION</p>
<p>This exception is raised if you call the setProperties( ) for foreign images method and the value of the description parameter is <code>NULL</code>.</p>
<p>See <a href="ap_excpts.htm#g630514">Appendix G</a> for more information about this exception.</p>
<p class="titleinrefsubsect"><a id="sthref840"></a>Examples</p>
<p>Select the foreign image, and then set the properties for the image:</p>
<pre>
DECLARE
    obj ORDSYS.ORDImage;
BEGIN
 SELECT p.product_photo INTO obj FROM pm.online_media p
  WHERE p.product_id = 3501 FOR UPDATE;
 -- Set property attributes for the image data:
 obj.setProperties('width=123 height=321 compressionFormat=NONE' ||
                     ' userString= LANDSTAT dataOffset=128' || 
                     ' scanlineOrder=INVERSE pixelOrder=REVERSE' ||
                     ' interleaving=BIL numberOfBands=1' ||
                     ' defaultChannelSelection=1');
 UPDATE pm.online_media SET product_photo = obj 
   WHERE product_id=3501;
 COMMIT;
END;
/
</pre></div>
<!-- class="refsect1" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment1127">
<tr>
<td class="cellalignment1136">
<table class="cellalignment1132">
<tr>
<td class="cellalignment1131"><a href="ch_docref.htm"><img width="24" height="24" src="../../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment1131"><a href="ch_vidref.htm"><img width="24" height="24" src="../../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;1999, 2010,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment1138">
<table class="cellalignment1130">
<tr>
<td class="cellalignment1131"><a href="../../index.htm"><img width="24" height="24" src="../../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment1131"><a href="../../nav/portal_booklist.htm"><img width="24" height="24" src="../../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment1131"><a href="toc.htm"><img width="24" height="24" src="../../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment1131"><a href="index.htm"><img width="24" height="24" src="../../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment1131"><a href="../../nav/mindx.htm"><img width="24" height="24" src="../../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment1131"><a href="../../dcommon/html/feedback.htm"><img width="24" height="24" src="../../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
</body>
</html>
