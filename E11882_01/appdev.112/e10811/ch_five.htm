<!DOCTYPE html>
<html lang="en">
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1">
<meta charset="utf-8">
<title>Updating Data</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Version 5.1" />
<meta name="dcterms.created" content="2009-08-03T6:35:24Z" />
<meta name="robots" content="all" />
<meta name="dcterms.title" content="Database 2 Day + PHP Developer's Guide" />
<meta name="dcterms.identifier" content="E10811-01" />
<meta name="dcterms.isVersionOf" content="TDPPH" />
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;2009,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved." />
<link rel="Start" href="../../index.htm" title="Home" type="text/html" />
<link rel="Copyright" href="../../dcommon/html/cpyr.htm" title="Copyright" type="text/html" />

<script type="application/javascript"  src="../../dcommon/js/headfoot.js"></script>
<script type="application/javascript"  src="../../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html" />
<link rel="Index" href="index.htm" title="Index" type="text/html" />
<link rel="Prev" href="ch_four.htm" title="Previous" type="text/html" />
<link rel="Next" href="ch_six.htm" title="Next" type="text/html" />
<link rel="alternate" href="../e10811.pdf" title="PDF version" type="application/pdf" />
<link rel="schema.dcterms" href="http://purl.org/dc/terms/" />
<link rel="stylesheet" href="../../dcommon/css/fusiondoc.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/header.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/footer.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/fonts.css">
<link rel="stylesheet" href="../../dcommon/css/foundation.css">
<link rel="stylesheet" href="../../dcommon/css/codemirror.css">
<link rel="stylesheet" type="text/css" title="Default" href="../../nav/css/html5.css">
<link rel="stylesheet" href="../../dcommon/css/respond-480-tablet.css">
<link rel="stylesheet" href="../../dcommon/css/respond-768-laptop.css">
<link rel="stylesheet" href="../../dcommon/css/respond-1140-deskop.css">
<script type="application/javascript" src="../../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">8/12</span> <!-- End Header --><a id="CHDBEAAB"></a><a id="i1081008"></a>
<h1 class="chapter"><span class="secnum">5</span> Updating Data</h1>
<p>In this chapter, you extend the Anyco HR application with forms that enable you to insert, update, and delete an employee record.</p>
<ul>
<li>
<p><a href="#CHDJJDJD">Building the Basic Employees page</a></p>
</li>
<li>
<p><a href="#CHDECHIH">Extending the Basic Employees Page</a></p>
</li>
<li>
<p><a href="#CHDBHJCE">Combining Departments and Employees</a></p>
</li>
<li>
<p><a href="#CHDGCJCB">Adding Error Recovery</a></p>
</li>
<li>
<p><a href="#CHDEIIEG">Further Error Handling</a></p>
</li>
</ul>
<a id="CHDJJDJD"></a>
<div class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Building the Basic Employees page</h2>
<p>In this section, you will <a id="sthref355"></a><a id="sthref356"></a>extend your application to include a basic employees page.</p>
<p>To display employee records, perform the following tasks:</p>
<ol>
<li>
<p>Create the <code>chap5</code> directory, copy the application files from <code>chap4</code>, and change to the newly created directory:</p>
<p>On Windows:</p>
<pre>
mkdir c:\program files\Apache Group\Apache2\htdocs\chap5
cd c:\program files\Apache Group\Apache2\htdocs\chap5
copy ..\chap4\* .
</pre>
<p>On Linux:</p>
<pre>
mkdir $HOME/public_html/chap5
cd $HOME/public_html/chap5
cp ../chap4/* .
</pre></li>
<li>
<p>Edit the <code><a id="sthref357"></a><a id="sthref358"></a><a id="sthref359"></a>anyco.php</code> file. Add a <a id="sthref360"></a><a id="sthref361"></a><code>construct_employees()</code> function. This function constructs the employee query, calls the <a id="sthref362"></a><a id="sthref363"></a><code>db_do_query()</code> function to execute the query, and prints the results using the <code><a id="sthref364"></a><a id="sthref365"></a>ui_print_employees()</code> function:</p>
<pre>
<span class="bold">function construct_employees()</span>
<span class="bold">{</span>
<span class="bold">  $query =</span>
<span class="bold">  "SELECT employee_id,</span>
<span class="bold">    substr(first_name,1,1) || '.  '|| last_name as employee_name,</span>
<span class="bold">    hire_date,</span>
<span class="bold">    to_char(salary, '9999G999D99') as salary,</span>
<span class="bold">    nvl(commission_pct,0) as commission_pct</span>
<span class="bold">   FROM   employees</span>
<span class="bold">   ORDER BY employee_id asc";</span>

<span class="bold">  $conn = db_connect();</span>
<span class="bold">  $emp = db_do_query($conn, $query);</span>

<span class="bold">  ui_print_header('Employees');</span>
<span class="bold">  ui_print_employees($emp);</span>
<span class="bold">  ui_print_footer(date('Y-m-d H:i:s'));</span>
<span class="bold">}</span>
</pre>
<p>There is no need to pass a <a id="sthref366"></a><a id="sthref367"></a><code>$bindargs</code> parameter to the <code><a id="sthref368"></a><a id="sthref369"></a>db_do_query()</code> call because this query does not use bind variables. The <code>db_do_query()</code> declaration will provide a default value of an empty array automatically. PHP allows functions to have variable numbers of parameters.</p>
</li>
<li>
<p>Edit the <code><a id="sthref370"></a><a id="sthref371"></a>anyco.php</code> file. Replace the call to <code><a id="sthref372"></a><a id="sthref373"></a>construct_departments()</code> with a call to <code><a id="sthref374"></a><a id="sthref375"></a>construct_employees()</code>:</p>
<pre>
&lt;?php // File: anyco.php

require('anyco_cn.inc');
require('anyco_db.inc');
require('anyco_ui.inc');

session_start();
<span class="bold">construct_employees();</span>
...
?&gt;
</pre></li>
<li>
<p>Edit the <code><a id="sthref376"></a><a id="sthref377"></a>anyco_ui.inc</code> file. Implement the presentation of employee data in an HTML table by adding a <code><a id="sthref378"></a><a id="sthref379"></a>ui_print_employees()</code> function:</p>
<pre>
<span class="bold">function ui_print_employees($employeerecords)</span>
<span class="bold">{</span>
<span class="bold">  if (!$employeerecords) {</span>
<span class="bold">    echo '&lt;p&gt;No Employee found&lt;/p&gt;';</span>
<span class="bold">  }</span>
<span class="bold">  else {</span>
<span class="bold">    echo &lt;&lt;&lt;END</span>
<span class="bold">  &lt;table&gt;</span>
<span class="bold">  &lt;tr&gt;</span>
<span class="bold">    &lt;th&gt;Employee&lt;br&gt;ID&lt;/th&gt;</span>
<span class="bold">    &lt;th&gt;Employee&lt;br&gt;Name&lt;/th&gt;</span>
<span class="bold">    &lt;th&gt;Hiredate&lt;/th&gt;</span>
<span class="bold">    &lt;th&gt;Salary&lt;/th&gt;</span>
<span class="bold">    &lt;th&gt;Commission&lt;br&gt;(%)&lt;/th&gt;</span>
<span class="bold">  &lt;/tr&gt;</span>
<span class="bold">END;</span>
<span class="bold">    // Write one row per employee</span>
<span class="bold">    foreach ($employeerecords as $emp) {</span>
<span class="bold">      echo '&lt;tr&gt;';</span>
<span class="bold">      echo '&lt;td align="right"&gt;'.</span>
<span class="bold">            htmlentities($emp['EMPLOYEE_ID']).'&lt;/td&gt;';</span>
<span class="bold">      echo '&lt;td&gt;'.htmlentities($emp['EMPLOYEE_NAME']).'&lt;/td&gt;';</span>
<span class="bold">      echo '&lt;td&gt;'.htmlentities($emp['HIRE_DATE']).'&lt;/td&gt;';</span>
<span class="bold">      echo '&lt;td align="right"&gt;'.</span>
<span class="bold">            htmlentities($emp['SALARY']).'&lt;/td&gt;';</span>
<span class="bold">      echo '&lt;td align="right"&gt;'.</span>
<span class="bold">            htmlentities($emp['COMMISSION_PCT']).'&lt;/td&gt;';</span>
<span class="bold">      echo '&lt;/tr&gt;';</span>
<span class="bold">    }</span>
<span class="bold">    echo &lt;&lt;&lt;END</span>
<span class="bold">  &lt;/table&gt;</span>
<span class="bold">END;</span>
<span class="bold">  }</span>
<span class="bold">}</span>
</pre></li>
<li>
<p>Save the changes to the <code>anyco.php</code> and <code><a id="sthref380"></a><a id="sthref381"></a><a id="sthref382"></a>anyco_ui.inc</code> files. <a id="sthref383"></a><a id="sthref384"></a>Test the result of these changes by entering the following URL in your Web browser:</p>
<p>On Windows:</p>
<pre>
http://localhost/chap5/anyco.php
</pre>
<p>On Linux:</p>
<pre>
http://localhost/~&lt;username&gt;/chap5/anyco.php
</pre>
<p>Examine the result page, and scroll down to view all the employee records displayed in the page:</p>
<img width="527" height="462" src="img/chap5_basic_emp_001.gif" alt="Description of chap5_basic_emp_001.gif follows" title="Description of chap5_basic_emp_001.gif follows" /><br />
<a id="sthref385" href="img_text/chap5_basic_emp_001.htm">Description of the illustration chap5_basic_emp_001.gif</a><br />
<br /></li>
</ol>
</div>
<!-- class="sect1" -->
<a id="CHDECHIH"></a>
<div class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Extending the Basic Employees Page</h2>
<p>In this section, you will <a id="sthref386"></a><a id="sthref387"></a>extend the basic employees page to include the ability to manipulate employee records.</p>
<p>To enable employee records to be manipulated, perform the following tasks:</p>
<ol>
<li>
<p>Edit the <code><a id="sthref388"></a><a id="sthref389"></a>anyco.php</code> file. Replace the construct_employees() call with the form handler control logic to manage the requests for showing, inserting, updating, and deleting employee records:</p>
<pre>
&lt;?php // File: anyco.php

require('anyco_cn.inc');
require('anyco_db.inc');
require('anyco_ui.inc');

session_start();
<span class="bold">// Start form handler code</span>
<span class="bold">if (isset($_POST['insertemp'])) {</span>
<span class="bold">  construct_insert_emp();</span>
<span class="bold">}</span>
<span class="bold">elseif (isset($_POST['saveinsertemp'])) {</span>
<span class="bold">  insert_new_emp();</span>
<span class="bold">}</span>
<span class="bold">elseif (isset($_POST['modifyemp'])) {</span>
<span class="bold">  construct_modify_emp();</span>
<span class="bold">}</span>
<span class="bold">elseif (isset($_POST['savemodifiedemp'])) {</span>
<span class="bold">  modify_emp();</span>
<span class="bold">}</span>
<span class="bold">elseif (isset($_POST['deleteemp'])) {</span>
<span class="bold">  delete_emp();</span>
<span class="bold">}</span>
<span class="bold">else {</span>
<span class="bold">  construct_employees();</span>
<span class="bold">}</span>

...
</pre></li>
<li>
<p>Edit the <code>anyco.php</code> file. Add the <a id="sthref390"></a><a id="sthref391"></a><code>construct_insert_emp()</code> function:</p>
<pre>
<span class="bold">function construct_insert_emp()</span>
<span class="bold">{</span>
<span class="bold">  $conn = db_connect();</span>

<span class="bold">  $query = "SELECT job_id, job_title</span>
<span class="bold">            FROM jobs</span>
<span class="bold">            ORDER BY job_title ASC";</span>
<span class="bold">  $jobs = db_do_query($conn, $query,</span>
<span class="bold">                      OCI_FETCHSTATEMENT_BY_COLUMN);</span>

<span class="bold">  $query = "SELECT sysdate FROM dual";</span>
<span class="bold">  $date = db_do_query($conn, $query,</span>
<span class="bold">                      OCI_FETCHSTATEMENT_BY_COLUMN);</span>
<span class="bold">  $emp = array(</span>
<span class="bold">    'DEPARTMENT_ID' =&gt; 10,      // Default to department 10</span>
<span class="bold">    'HIRE_DATE' =&gt; $date['SYSDATE'][0],</span>
<span class="bold">    'ALLJOBIDS' =&gt; $jobs['JOB_ID'],</span>
<span class="bold">    'ALLJOBTITLES' =&gt; $jobs['JOB_TITLE']</span>
<span class="bold">    );</span>

<span class="bold">  ui_print_header('Insert New Employee');</span>
<span class="bold">  ui_print_insert_employee($emp, $_SERVER['SCRIPT_NAME']);</span>
<span class="bold">  // Note: The two kinds of date used:</span>
<span class="bold">  // 1) SYSDATE for current date of the database system, and</span>
<span class="bold">  // 2) The PHP date for display in the footer of each page</span>
<span class="bold">  ui_print_footer(date('Y-m-d H:i:s'));</span>
<span class="bold">}</span>
</pre>
<p>The <code>construct_insert_emp()</code> function executes two queries to obtain default data to be used to populate the Insert New Employee form, which is displayed by the <code>ui_print_insert_employee()</code> function.</p>
<p>The <code><a id="sthref392"></a><a id="sthref393"></a>$query</code> of the <a id="sthref394"></a><a id="sthref395"></a><code>JOBS</code> table obtains a list of all the existing job IDs and their descriptions in order to build a list for selecting a job type in the HTML form generated by the <code>ui_print_insert_employee()</code> function.</p>
<p>The <code>$query</code> using <code>SYSDATE</code> obtains the current database date and time for setting the default hire date of the new employee.</p>
<p>There are two kinds of date used in the application code, the PHP <a id="sthref396"></a><a id="sthref397"></a><code>date()</code> function for printing the date and time in the page footer, and the Oracle <a id="sthref398"></a><a id="sthref399"></a><code>SYSDATE</code> function to obtain the default date and time for displaying in the hire date field of the Employees page and to ensure that text is entered in the correct database format.</p>
<p>The two <a id="sthref400"></a><a id="sthref401"></a><code>db_do_query()</code> function calls provide an additional parameter value <a id="sthref402"></a><a id="sthref403"></a><code>OCI_FETCHSTATEMENT_BY_COLUMN</code> to specify that the return type for the query is an array of column values.</p>
</li>
<li>
<p>Edit the <code><a id="sthref404"></a><a id="sthref405"></a>anyco.php</code> file. Add the <a id="sthref406"></a><a id="sthref407"></a><code>insert_new_emp()</code> function to insert an employee record into the <a id="sthref408"></a><a id="sthref409"></a><code>EMPLOYEES</code> table:</p>
<pre>
<span class="bold">function insert_new_emp()</span>
<span class="bold">{</span>
<span class="bold">  $newemp = $_POST;</span>
<span class="bold">  $statement =</span>
<span class="bold">    "INSERT INTO employees</span>
<span class="bold">        (employee_id, first_name, last_name, email, hire_date,</span>
<span class="bold">         job_id, salary, commission_pct, department_id)</span>
<span class="bold">     VALUES (employees_seq.nextval, :fnm, :lnm, :eml, :hdt, :jid,</span>
<span class="bold">             :sal, :cpt, :did)";</span>

<span class="bold">  $conn = db_connect();</span>
<span class="bold">  $emailid = $newemp['firstname'].$newemp['lastname'];</span>

<span class="bold">  $bindargs = array();</span>
<span class="bold">  array_push($bindargs, array('FNM', $newemp['firstname'], -1));</span>
<span class="bold">  array_push($bindargs, array('LNM', $newemp['lastname'], -1));</span>
<span class="bold">  array_push($bindargs, array('EML', $emailid, -1));</span>
<span class="bold">  array_push($bindargs, array('HDT', $newemp['hiredate'], -1));</span>
<span class="bold">  array_push($bindargs, array('JID', $newemp['jobid'], -1));</span>
<span class="bold">  array_push($bindargs, array('SAL', $newemp['salary'], -1));</span>
<span class="bold">  array_push($bindargs, array('CPT', $newemp['commpct'], -1));</span>
<span class="bold">  array_push($bindargs, array('DID', $newemp['deptid'], -1));</span>

<span class="bold">  $r = db_execute_statement($conn, $statement, $bindargs);</span>
<span class="bold">  construct_employees();</span>
<span class="bold">}</span>
</pre>
<p>The return value from the <a id="sthref410"></a><a id="sthref411"></a><code>db_execute_statement()</code> function is ignored and not even assigned to a variable, because no action is performed on its result.</p>
</li>
<li>
<p>Edit the <code><a id="sthref412"></a><a id="sthref413"></a>anyco.php</code> file. Add the <a id="sthref414"></a><a id="sthref415"></a><code>construct_modify_emp()</code> function to build the HTML form for updating an employee record.</p>
<pre>
<span class="bold">function construct_modify_emp()</span>
<span class="bold">{</span>
<span class="bold">  $empid = $_POST['emprec'];</span>
<span class="bold">  $query =</span>
<span class="bold">    "SELECT employee_id, first_name, last_name, email, hire_date,</span>
<span class="bold">            salary, nvl(commission_pct,0) as commission_pct</span>
<span class="bold">     FROM   employees</span>
<span class="bold">     WHERE  employee_id = :empid";</span>

<span class="bold">  $conn = db_connect();</span>
<span class="bold">  $bindargs = array();</span>
<span class="bold">  array_push($bindargs, array('EMPID', $empid, -1));</span>

<span class="bold">  $emp = db_do_query($conn, $query, OCI_FETCHSTATEMENT_BY_ROW, </span>
<span class="bold">                                      $bindargs);</span>

<span class="bold">  ui_print_header('Modify Employee ');</span>
<span class="bold">  ui_print_modify_employee($emp[0], $_SERVER['SCRIPT_NAME']);</span>
<span class="bold">  ui_print_footer(date('Y-m-d H:i:s'));</span>
<span class="bold">}</span>
</pre></li>
<li>
<p>Edit the <code><a id="sthref416"></a><a id="sthref417"></a>anyco.php</code> file. Add the <a id="sthref418"></a><a id="sthref419"></a><code>modify_emp()</code> function to update the employee record in the <a id="sthref420"></a><a id="sthref421"></a><code>EMPLOYEES</code> table, using the update form field values:</p>
<pre>
<span class="bold">function modify_emp()</span>
<span class="bold">{</span>
<span class="bold">  $newemp = $_POST;</span>
<span class="bold">  $statement =</span>
<span class="bold">    "UPDATE employees</span>
<span class="bold">     SET   first_name = :fnm, last_name = :lnm, email = :eml,</span>
<span class="bold">           salary = :sal, commission_pct = :cpt</span>
<span class="bold">     WHERE employee_id = :eid";</span>

<span class="bold">  $conn = db_connect();</span>
<span class="bold">  $bindargs = array();</span>
<span class="bold">  array_push($bindargs, array('EID', $newemp['empid'], -1));</span>
<span class="bold">  array_push($bindargs, array('FNM', $newemp['firstname'], -1));</span>
<span class="bold">  array_push($bindargs, array('LNM', $newemp['lastname'], -1));  </span>
<span class="bold">  array_push($bindargs, array('EML', $newemp['email'], -1));</span>
<span class="bold">  array_push($bindargs, array('SAL', $newemp['salary'], -1));</span>
<span class="bold">  array_push($bindargs, array('CPT', $newemp['commpct'], -1));</span>

<span class="bold">  $r = db_execute_statement($conn, $statement, $bindargs);</span>
<span class="bold">  construct_employees();</span>
<span class="bold">}</span>
</pre></li>
<li>
<p>Edit the <a id="sthref422"></a><a id="sthref423"></a><code>anyco.php</code> file. Add the <a id="sthref424"></a><a id="sthref425"></a><code>delete_emp()</code> function to delete an employee record from the <a id="sthref426"></a><a id="sthref427"></a><code>EMPLOYEES</code> table:</p>
<pre>
<span class="bold">function delete_emp()</span>
<span class="bold">{</span>
<span class="bold">  $empid = $_POST['emprec'];</span>
<span class="bold">  $statement = "DELETE FROM employees</span>
<span class="bold">                WHERE employee_id = :empid";</span>
<span class="bold">    $conn = db_connect();</span>
<span class="bold">  $bindargs = array();</span>
<span class="bold">  array_push($bindargs, array('EMPID', $empid, 10));</span>
<span class="bold">  $r = db_execute_statement($conn, $statement, $bindargs);</span>

<span class="bold">  construct_employees();</span>
<span class="bold">}</span>
</pre></li>
<li>
<p>Edit the <code>anyco.php</code> file. In the <code>construct_employees()</code> function, modify the <code>db_do_query()</code> call to supply <code>OCI_FETCHSTATEMENT_BY_ROW</code> as the last parameter, and provide <code>$_SERVER['SCRIPT_NAME']</code> as second parameter in the <code>ui_print_employees()</code> call. The function becomes:</p>
<pre>
function construct_employees()
{
  $query =
  "SELECT employee_id,
    substr(first_name,1,1) || '.  '|| last_name as employee_name,
    hire_date,
    to_char(salary, '9999G999D99') as salary,
    nvl(commission_pct,0) as commission_pct
   FROM   employees
   ORDER BY employee_id asc";

  $conn = db_connect();
  $emp = db_do_query($conn, $query<span class="bold">, OCI_FETCHSTATEMENT_BY_ROW</span>);

  ui_print_header('Employees');
  ui_print_employees($emp<span class="bold">, $_SERVER['SCRIPT_NAME']</span>);
  ui_print_footer(date('Y-m-d H:i:s'));
}
</pre></li>
<li>
<p>Edit the <code><a id="sthref428"></a><a id="sthref429"></a>anyco_db.inc</code> file. Add <code><a id="sthref430"></a><a id="sthref431"></a>$resulttype</code> as a third parameter to the <code><a id="sthref432"></a><a id="sthref433"></a>db_do_query()</code> function. Replace the last parameter value, <code><a id="sthref434"></a><a id="sthref435"></a>OCI_FETCHSTATEMENT_BY_ROW</code>, in the <code><a id="sthref436"></a><a id="sthref437"></a>oci_fetch_all()</code> call with a variable, so that callers can choose the output type.</p>
<pre>
function db_do_query($conn, $statement<span class="bold">, $resulttype</span>,
                     $bindvars = array())
{
  $stid = oci_parse($conn, $statement);

  ...

  $r = oci_fetch_all($stid, $results, null, null<span class="bold">, $resulttype</span>);
  return($results);
}
</pre></li>
<li>
<p>Edit the <code><a id="sthref438"></a><a id="sthref439"></a>anyco_db.inc</code> file. Inside the <code><a id="sthref440"></a><a id="sthref441"></a>db_get_page_data()</code> function, insert <code><a id="sthref442"></a><a id="sthref443"></a>OCI_FETCHSTATEMENT_BY_ROW</code> as the third parameter value in the <code><a id="sthref444"></a><a id="sthref445"></a>db_do_query()</code> call:</p>
<pre>
function db_get_page_data($conn, $q1, $current = 1,
                          $rowsperpage = 1, $bindvars = array())
{
 
  ...

  $r = db_do_query($conn, $query, <span class="bold">OCI_FETCHSTATEMENT_BY_ROW,</span> $bindvars);
  return($r);
}
</pre></li>
<li>
<p>Edit the <code><a id="sthref446"></a><a id="sthref447"></a>anyco_db.inc</code> file. Add a <code><a id="sthref448"></a><a id="sthref449"></a>db_execute_statement()</code> function to execute data manipulation statements such as INSERT statements:</p>
<pre>
<span class="bold">function db_execute_statement($conn, $statement,</span><span class="bold"> $bindvars = array())</span>
<span class="bold">{</span>
<span class="bold">  $stid = oci_parse($conn, $statement);</span>
<span class="bold">  if (!$stid) {</span>
<span class="bold">    db_error($conn, __FILE__, __LINE__);</span>
<span class="bold">  }</span>
<span class="bold">    // Bind parameters</span>
<span class="bold">  foreach ($bindvars as $b) {</span>
<span class="bold">    // create local variable with caller specified bind value </span>
<span class="bold">    $$b[0] = $b[1];</span>
<span class="bold">    $r = oci_bind_by_name($stid, ":$b[0]", $$b[0], $b[2]);</span>
<span class="bold">    if (!$r) {</span>
<span class="bold">      db_error($stid, __FILE__, __LINE__);</span>
<span class="bold">    }</span>
<span class="bold">  }</span>

<span class="bold">  $r = oci_execute($stid);</span>
<span class="bold">  if (!$r) {</span>
<span class="bold">    db_error($stid, __FILE__, __LINE__);</span>
<span class="bold">  }</span>
<span class="bold">  return($r);</span>
<span class="bold">}</span>
</pre></li>
<li>
<p>Edit the <code><a id="sthref450"></a><a id="sthref451"></a>anyco_ui.inc</code> file. Change the <code><a id="sthref452"></a><a id="sthref453"></a>ui_print_employees()</code> function to produce an HTML form containing the employee rows. The function becomes:</p>
<pre>
function ui_print_employees($employeerecords<span class="bold">, $posturl</span>)
{
  if (!$employeerecords) {
    echo '&lt;p&gt;No Employee found&lt;/p&gt;';
  }
  else {
    echo &lt;&lt;&lt;END
<span class="bold">  &lt;form method="post" action="$posturl"&gt;</span>
  &lt;table&gt;
  &lt;tr&gt;
<span class="bold">    &lt;th&gt;&amp;nbsp;&lt;/th&gt;</span>
    &lt;th&gt;Employee&lt;br&gt;ID&lt;/th&gt;
    &lt;th&gt;Employee&lt;br&gt;Name&lt;/th&gt;
    &lt;th&gt;Hiredate&lt;/th&gt;
    &lt;th&gt;Salary&lt;/th&gt;
    &lt;th&gt;Commission&lt;br&gt;(%)&lt;/th&gt;
  &lt;/tr&gt;
END;
    // Write one row per employee
    foreach ($employeerecords as $emp) {
      echo '&lt;tr&gt;';
<span class="bold">      echo '&lt;td&gt;&lt;input type="radio" name="emprec" value="'.</span>
<span class="bold">             htmlentities($emp['EMPLOYEE_ID']).'"&gt;&lt;/td&gt;';</span>
      echo '&lt;td align="right"&gt;'.
                htmlentities($emp['EMPLOYEE_ID']).'&lt;/td&gt;';
      echo '&lt;td&gt;'.htmlentities($emp['EMPLOYEE_NAME']).'&lt;/td&gt;';
      echo '&lt;td&gt;'.htmlentities($emp['HIRE_DATE']).'&lt;/td&gt;';
      echo '&lt;td align="right"&gt;'.
                htmlentities($emp['SALARY']).'&lt;/td&gt;';
      echo '&lt;td align="right"&gt;'.
                htmlentities($emp['COMMISSION_PCT']).'&lt;/td&gt;';
      echo '&lt;/tr&gt;';
    }
    echo &lt;&lt;&lt;END
  &lt;/table&gt;
<span class="bold">  &lt;input type="submit" value="Modify" name="modifyemp"&gt;</span>
<span class="bold">  &lt;input type="submit" value="Delete" name="deleteemp"&gt;</span>
<span class="bold">  &amp;nbsp;&amp;nbsp;</span>
<span class="bold">  &lt;input type="submit" value="Insert new employee"</span>
<span class="bold">         name="insertemp"&gt;</span>
<span class="bold">  &lt;/form&gt;</span>
END;
  }
}
</pre>
<p>A radio button is displayed in the first column of each row to enable you to select the record to be modified or deleted.</p>
</li>
<li>
<p>Edit the <code><a id="sthref454"></a><a id="sthref455"></a>anyco_ui.inc</code> file. Add the <code><a id="sthref456"></a><a id="sthref457"></a>ui_print_insert_employee()</code> function to generate the form to input new employee data:</p>
<pre>
<span class="bold">function ui_print_insert_employee($emp, $posturl)</span>
<span class="bold">{</span>
<span class="bold">  if (!$emp) {</span>
<span class="bold">    echo "&lt;p&gt;No employee details found&lt;/p&gt;";</span>
<span class="bold">  }</span>
<span class="bold">  else {</span>
<span class="bold">    $deptid = htmlentities($emp['DEPARTMENT_ID']);</span>
<span class="bold">    $hiredate = htmlentities($emp['HIRE_DATE']);</span>

<span class="bold">    echo &lt;&lt;&lt;END</span>
<span class="bold">  &lt;form method="post" action="$posturl"&gt;</span>
<span class="bold">  &lt;table&gt;</span>
<span class="bold">    &lt;tr&gt;</span>
<span class="bold">      &lt;td&gt;Department ID&lt;/td&gt;</span>
<span class="bold">      &lt;td&gt;&lt;input type="text" name="deptid" value="$deptid" </span>
<span class="bold">                 size="20"&gt;&lt;/td&gt;</span>
<span class="bold">    &lt;/tr&gt;</span>
<span class="bold">    &lt;tr&gt;</span>
<span class="bold">      &lt;td&gt;First Name&lt;/td&gt;</span>
<span class="bold">      &lt;td&gt;&lt;input type="text" name="firstname" size="20"&gt;&lt;/td&gt;</span>
<span class="bold">    &lt;/tr&gt;</span>
<span class="bold">    &lt;tr&gt;</span>
<span class="bold">      &lt;td&gt;Last Name&lt;/td&gt;</span>
<span class="bold">      &lt;td&gt;&lt;input type="text" name="lastname" size="20"&gt;&lt;/td&gt;</span>
<span class="bold">    &lt;/tr&gt;</span>
<span class="bold">    &lt;tr&gt;</span>
<span class="bold">      &lt;td&gt;Hiredate&lt;/td&gt;</span>
<span class="bold">      &lt;td&gt;&lt;input type="text" name="hiredate" value="$hiredate" </span>
<span class="bold">                 size="20"&gt;&lt;/td&gt;</span>
<span class="bold">    &lt;/tr&gt;</span>
<span class="bold">    &lt;tr&gt;</span>
<span class="bold">      &lt;td&gt;Job&lt;/td&gt;</span>
<span class="bold">       &lt;td&gt;&lt;select name="jobid"&gt;</span>
<span class="bold">END;</span>
<span class="bold">    // Write the list of jobs</span>
<span class="bold">    for ($i = 0; $i &lt; count($emp['ALLJOBIDS']); $i++)</span>
<span class="bold">    {</span>
<span class="bold">      echo '&lt;option</span>
<span class="bold">             label="'.htmlentities($emp['ALLJOBTITLES'][$i]).'"'.</span>
<span class="bold">           ' value="'.htmlentities($emp['ALLJOBIDS'][$i]).'"&gt;'.</span>
<span class="bold">           htmlentities($emp['ALLJOBTITLES'][$i]).'&lt;/option&gt;';</span>
<span class="bold">    }</span>
<span class="bold">    echo &lt;&lt;&lt;END</span>
<span class="bold">      &lt;/select&gt;</span>
<span class="bold">      &lt;/td&gt;</span>
<span class="bold">    &lt;/tr&gt;</span>
<span class="bold">    &lt;tr&gt;</span>
<span class="bold">      &lt;td&gt;Salary&lt;/td&gt;</span>
<span class="bold">      &lt;td&gt;&lt;input type="text" name="salary" value="1" </span>
<span class="bold">                 size="20"&gt;&lt;/td&gt;</span>
<span class="bold">    &lt;/tr&gt;</span>
<span class="bold">    &lt;tr&gt;</span>
<span class="bold">      &lt;td&gt;Commission (%)&lt;/td&gt;</span>
<span class="bold">      &lt;td&gt;&lt;input type="text" name="commpct" value="0" </span>
<span class="bold">                 size="20"&gt;&lt;/td&gt;</span>
<span class="bold">    &lt;/tr&gt;</span>
<span class="bold">  &lt;/table&gt;</span>
<span class="bold">    &lt;input type="submit" value="Save" name="saveinsertemp"&gt;</span>
<span class="bold">    &lt;input type="submit" value="Cancel" name="cancel"&gt;</span>
<span class="bold">  &lt;/form&gt;</span>
<span class="bold">END;</span>
<span class="bold">  }</span>
<span class="bold">}</span>
</pre></li>
<li>
<p>Edit the <code><a id="sthref458"></a>anyco_ui.inc</code> file. Add the <code><a id="sthref459"></a><a id="sthref460"></a>ui_print_modify_employee()</code> function to generate the form to update an employee record:</p>
<pre>
<span class="bold">function ui_print_modify_employee($empdetails, $posturl)</span>
<span class="bold">{</span>
<span class="bold">  if (!$empdetails) {</span>
<span class="bold">    echo '&lt;p&gt;No Employee record selected&lt;/p&gt;';</span>
<span class="bold">  }</span>
<span class="bold">  else {</span>
<span class="bold">    $fnm = htmlentities($empdetails['FIRST_NAME']);</span>
<span class="bold">    $lnm = htmlentities($empdetails['LAST_NAME']);</span>
<span class="bold">    $eml = htmlentities($empdetails['EMAIL']);</span>
<span class="bold">    $sal = htmlentities($empdetails['SALARY']);</span>
<span class="bold">    $cpt = htmlentities($empdetails['COMMISSION_PCT']);</span>
<span class="bold">    $eid = htmlentities($empdetails['EMPLOYEE_ID']);</span>

<span class="bold">    echo &lt;&lt;&lt;END</span>
<span class="bold">  &lt;form method="post" action="$posturl"&gt;</span>
<span class="bold">  &lt;table&gt;</span>
<span class="bold">    &lt;tr&gt;</span>
<span class="bold">      &lt;td&gt;Employee ID&lt;/td&gt;</span>
<span class="bold">      &lt;td&gt;$eid&lt;/td&gt;&lt;/tr&gt;</span>
<span class="bold">    &lt;tr&gt;</span>
<span class="bold">      &lt;td&gt;First Name&lt;/td&gt;</span>
<span class="bold">      &lt;td&gt;&lt;input type="text" name="firstname" value="$fnm"&gt;&lt;/td&gt;</span>
<span class="bold">    &lt;/tr&gt;</span>
<span class="bold">    &lt;tr&gt;</span>
<span class="bold">      &lt;td&gt;Last Name&lt;/td&gt;</span>
<span class="bold">      &lt;td&gt;&lt;input type="text" name="lastname" value="$lnm"&gt;&lt;/td&gt;</span>
<span class="bold">    &lt;/tr&gt;</span>
<span class="bold">    &lt;tr&gt;</span>
<span class="bold">      &lt;td&gt;Email Address&lt;/td&gt;</span>
<span class="bold">      &lt;td&gt;&lt;input type="text" name="email" value="$eml"&gt;&lt;/td&gt;</span>
<span class="bold">    &lt;/tr&gt;</span>
<span class="bold">    &lt;tr&gt;</span>
<span class="bold">      &lt;td&gt;Salary&lt;/td&gt;</span>
<span class="bold">      &lt;td&gt;&lt;input type="text" name="salary" value="$sal"&gt;&lt;/td&gt;</span>
<span class="bold">    &lt;/tr&gt;</span>
<span class="bold">    &lt;tr&gt;</span>
<span class="bold">      &lt;td&gt;Commission (%)&lt;/td&gt;</span>
<span class="bold">      &lt;td&gt;&lt;input type="text" name="commpct" value="$cpt"&gt;&lt;/td&gt;</span>
<span class="bold">    &lt;/tr&gt;</span>
<span class="bold">  &lt;/table&gt;</span>
<span class="bold">  &lt;input type="hidden" value="{$empdetails['EMPLOYEE_ID']}" </span>
<span class="bold">         name="empid"&gt;</span>
<span class="bold">  &lt;input type="submit" value="Save" name="savemodifiedemp"&gt;</span>
<span class="bold">  &lt;input type="submit" value="Cancel" name="cancel"&gt;</span>
<span class="bold">  &lt;/form&gt;</span>
<span class="bold">END;</span>
<span class="bold">  }</span>
<span class="bold">}</span>
</pre></li>
<li>
<p>Save the changes to your Anyco application files, and <a id="sthref461"></a><a id="sthref462"></a>test the changes by entering the following URL in your Web browser:</p>
<p>On Windows:</p>
<pre>
http://localhost/chap5/anyco.php
</pre>
<p>On Linux:</p>
<pre>
http://localhost/~&lt;username&gt;/chap5/anyco.php
</pre>
<p>The list of all employees is displayed with a radio button in each row.</p>
<img width="542" height="431" src="img/chap5_test_emp_001.gif" alt="Description of chap5_test_emp_001.gif follows" title="Description of chap5_test_emp_001.gif follows" /><br />
<a id="sthref463" href="img_text/chap5_test_emp_001.htm">Description of the illustration chap5_test_emp_001.gif</a><br />
<br />
<p>Scroll to the bottom of the Employees page to view the <span class="bold">Modify</span>, <span class="bold">Delete</span>, and <span class="bold">Insert new employee</span> buttons:</p>
<img width="540" height="324" src="img/chap5_test_emp_002.gif" alt="Description of chap5_test_emp_002.gif follows" title="Description of chap5_test_emp_002.gif follows" /><br />
<a id="sthref464" href="img_text/chap5_test_emp_002.htm">Description of the illustration chap5_test_emp_002.gif</a><br />
<br /></li>
<li>
<p>To insert a new employee record, click <span class="bold">Insert new employee</span>:</p>
<img width="542" height="119" src="img/chap5_test_emp_003.gif" alt="Description of chap5_test_emp_003.gif follows" title="Description of chap5_test_emp_003.gif follows" /><br />
<a id="sthref465" href="img_text/chap5_test_emp_003.htm">Description of the illustration chap5_test_emp_003.gif</a><br />
<br />
<p>When you create or modify employee records, you will see that the database definitions require the salary to be greater than zero, and the commission to be less than 1. The commission will be rounded to two decimal places. In the Insert New Employee page, the Department ID field contains 10 (the default), Hiredate contains the current date (in default database date format), Salary contains 1, and Commission (%) contains 0. Enter the following field values:</p>
<p>First Name: James</p>
<p>Last Name: Bond</p>
<p>Job: Select Programmer from the list.</p>
<p>Salary: replace the 1 with 7000</p>
<p>Click <span class="bold">Save</span>.</p>
<img width="542" height="422" src="img/chap5_test_emp_004.gif" alt="Description of chap5_test_emp_004.gif follows" title="Description of chap5_test_emp_004.gif follows" /><br />
<a id="sthref466" href="img_text/chap5_test_emp_004.htm">Description of the illustration chap5_test_emp_004.gif</a><br />
<br /></li>
<li>
<p>When the new employee record is successfully inserted, the Web page is refreshed with the form listing all employees. Scroll the Web page to the last record and check that the new employee record is present. The employee ID assigned to the new record on your system may be different than the one shown in the following example:</p>
<img width="542" height="158" src="img/chap5_test_emp_005.gif" alt="Description of chap5_test_emp_005.gif follows" title="Description of chap5_test_emp_005.gif follows" /><br />
<a id="sthref467" href="img_text/chap5_test_emp_005.htm">Description of the illustration chap5_test_emp_005.gif</a><br />
<br /></li>
<li>
<p>To modify the new employee record, select the radio button next to the new employee record, and click <span class="bold">Modify</span>:</p>
<img width="541" height="159" src="img/chap5_test_emp_006.gif" alt="Description of chap5_test_emp_006.gif follows" title="Description of chap5_test_emp_006.gif follows" /><br />
<a id="sthref468" href="img_text/chap5_test_emp_006.htm">Description of the illustration chap5_test_emp_006.gif</a><br />
<br /></li>
<li>
<p>In the Modify Employee page, modify the Email Address field to JBOND, increase the Salary to 7100, and click <span class="bold">Save</span>:</p>
<img width="537" height="382" src="img/chap5_test_emp_007.gif" alt="Description of chap5_test_emp_007.gif follows" title="Description of chap5_test_emp_007.gif follows" /><br />
<a id="sthref469" href="img_text/chap5_test_emp_007.htm">Description of the illustration chap5_test_emp_007.gif</a><br />
<br /></li>
<li>
<p>Successfully updating the employee record causes the Employees page to be redisplayed. Scroll to the last employee record and confirm that the salary for James Bond is now 7,100:</p>
<img width="537" height="122" src="img/chap5_test_emp_008.gif" alt="Description of chap5_test_emp_008.gif follows" title="Description of chap5_test_emp_008.gif follows" /><br />
<a id="sthref470" href="img_text/chap5_test_emp_008.htm">Description of the illustration chap5_test_emp_008.gif</a><br />
<br /></li>
<li>
<p>To remove the new employee record, select the radio button for the new employee record, and click <span class="bold">Delete</span>:</p>
<img width="537" height="122" src="img/chap5_test_emp_009.gif" alt="Description of chap5_test_emp_009.gif follows" title="Description of chap5_test_emp_009.gif follows" /><br />
<a id="sthref471" href="img_text/chap5_test_emp_009.htm">Description of the illustration chap5_test_emp_009.gif</a><br />
<br />
<p>On successful deletion, the deleted row does not appear in the list of employee records redisplayed in the Employees page:</p>
<img width="536" height="119" src="img/chap5_test_emp_010.gif" alt="Description of chap5_test_emp_010.gif follows" title="Description of chap5_test_emp_010.gif follows" /><br />
<a id="sthref472" href="img_text/chap5_test_emp_010.htm">Description of the illustration chap5_test_emp_010.gif</a><br />
<br /></li>
</ol>
</div>
<!-- class="sect1" -->
<a id="CHDBHJCE"></a>
<div class="sect1">
<h2 class="sect1">Combining Departments and Employees</h2>
<p>In this section, you will <a id="sthref473"></a><a id="sthref474"></a><a id="sthref475"></a>modify your application to enable access to both Employees and Departments pages.</p>
<p>To combine the Departments and Employees pages, perform the following tasks:</p>
<ol>
<li>
<p>Edit the <code><a id="sthref476"></a><a id="sthref477"></a>anyco.php</code> file. Modify the query in the <a id="sthref478"></a><a id="sthref479"></a><code>construct_employees()</code> function to include a <code>WHERE</code> clause to compare the <a id="sthref480"></a><a id="sthref481"></a><code>department_id</code> with a value in a bind variable called <code>:<a id="sthref482"></a><a id="sthref483"></a>did</code>. This makes the page display employees in one department at a time. Get the <code><a id="sthref484"></a><a id="sthref485"></a>deptid</code> session parameter value to populate the bind variable:</p>
<pre>
$query =
 "SELECT employee_id, 
         substr(first_name,1,1) || '.  '|| last_name as employee_name,
         hire_date,
         to_char(salary, '9999G999D99') as salary, 
         nvl(commission_pct,0) as commission_pct
  FROM   employees
<span class="bold">  WHERE  department_id = :did</span>
  ORDER BY employee_id asc";

<span class="bold">$deptid = $_SESSION['deptid'];</span>
</pre></li>
<li>
<p>Edit the <code>anyco.php</code> file. In the <code>construct_employees()</code> function, update the call to the <code>db_do_query()</code> function to pass the bind information:</p>
<pre>
$conn = db_connect();

<span class="bold">$bindargs = array();</span>
<span class="bold">array_push($bindargs, array('DID', $deptid, -1));</span>

$emp = db_do_query($conn, $query, OCI_FETCHSTATEMENT_BY_ROW<span class="bold">, $bindargs</span>);
</pre></li>
<li>
<p>Edit the <code>anyco.php</code> file. In the <code>construct_departments()</code> function, save the department identifier in a session parameter:</p>
<pre>
$_SESSION['currentdept'] = $current;
<span class="bold">$_SESSION['deptid'] = $deptid;</span>
</pre>
<p>This saves the current department identifier from the Departments page as a session parameter, which is used in the Employees page.</p>
</li>
<li>
<p>Edit the <code><a id="sthref486"></a><a id="sthref487"></a>anyco.php</code> file. Create a function <code><a id="sthref488"></a><a id="sthref489"></a>get_dept_name()</code> to query the department name for printing in the Departments and Employees page titles:</p>
<pre>
<span class="bold">function get_dept_name($conn, $deptid)</span>
<span class="bold">{</span>
<span class="bold">  $query =</span>
<span class="bold">    'SELECT department_name</span>
<span class="bold">     FROM   departments</span>
<span class="bold">     WHERE  department_id = :did';</span>

<span class="bold">  $conn = db_connect();</span>
<span class="bold">  $bindargs = array();</span>
<span class="bold">  array_push($bindargs, array('DID', $deptid, -1));</span>
<span class="bold">  $dn = db_do_query($conn, $query,OCI_FETCHSTATEMENT_BY_COLUMN,</span><span class="bold"> $bindargs);</span>

<span class="bold">  return($dn['DEPARTMENT_NAME'][0]);</span>
<span class="bold">}</span>
</pre></li>
<li>
<p>Edit the <code>anyco.php</code> file. Modify the <code>construct_employees()</code> function to print the department name in the Employees page heading:</p>
<pre>
<span class="bold">$deptname = get_dept_name($conn, $deptid);</span>
ui_print_header(<span class="bold">'Employees: '.$deptname</span>);
</pre></li>
<li>
<p>Edit the <code>anyco.php</code> file. Modify the <code>construct_departments()</code> function to print the department name in the Departments page heading:</p>
<pre>
<span class="bold">$deptname = get_dept_name($conn, $deptid);</span>
ui_print_header(<span class="bold">'Department: '.$deptname</span>);
</pre></li>
<li>
<p>Edit the <code><a id="sthref490"></a><a id="sthref491"></a>anyco.php</code> file. Modify the <a id="sthref492"></a><a id="sthref493"></a><code>construct_insert_emp()</code> function so that the default department is obtained from the session parameter passed in the <code><a id="sthref494"></a><a id="sthref495"></a>$emp</code> array to the <a id="sthref496"></a><a id="sthref497"></a><code>ui_print_insert_employee()</code> function. The function becomes:</p>
<pre>
function construct_insert_emp()
{
<span class="bold">  $deptid = $_SESSION['deptid'];</span>

  $conn = db_connect();
  $query = "SELECT job_id, job_title FROM jobs ORDER BY job_title ASC";
  $jobs = db_do_query($conn, $query, OCI_FETCHSTATEMENT_BY_COLUMN);
  $query = "SELECT sysdate FROM dual";
  $date = db_do_query($conn, $query, OCI_FETCHSTATEMENT_BY_COLUMN);
  $emp = array(
    'DEPARTMENT_ID' =&gt; <span class="bold">$deptid,</span>
    'HIRE_DATE' =&gt; $date['SYSDATE'][0],
    'ALLJOBIDS' =&gt; $jobs['JOB_ID'],
    'ALLJOBTITLES' =&gt; $jobs['JOB_TITLE']
    );
  ui_print_header('Insert New Employee');
  ui_print_insert_employee($emp, $_SERVER['SCRIPT_NAME']);
  ui_print_footer(date('Y-m-d H:i:s'));
}
</pre></li>
<li>
<p>Edit the <code>anyco.php</code> file. Modify the final <code>else</code> statement in the HTML form handler. The handler becomes:</p>
<pre>
// Start form handler code
if (isset($_POST['insertemp'])) {
  construct_insert_emp();
}
elseif (isset($_POST['saveinsertemp'])) {
  insert_new_emp();
}
elseif (isset($_POST['modifyemp'])) {
  construct_modify_emp();
}
elseif (isset($_POST['savemodifiedemp'])) {
  modify_emp();
}
elseif (isset($_POST['deleteemp'])) {
  delete_emp();
}
<span class="bold">elseif (   isset($_POST['showemp'])) {</span>
<span class="bold">  construct_employees();</span>
<span class="bold">}</span>
<span class="bold">elseif (   isset($_POST['nextdept'])</span>
<span class="bold">        || isset($_POST['prevdept'])</span>
<span class="bold">        || isset($_POST['firstdept'])</span>
<span class="bold">        || isset($_POST['showdept'])) {</span>
<span class="bold">  construct_departments();</span>
<span class="bold">}</span>
<span class="bold">else {</span>
<span class="bold">  construct_departments();</span>
<span class="bold">}</span>
</pre></li>
<li>
<p>Edit the <code>anyco_ui.inc</code> file. In the <code>ui_print_department()</code> function, change the HTML form to enable it to call the Employees page:</p>
<pre>
...
&lt;form method="post" action="$posturl"&gt;
&lt;input type="submit" value="First" name="firstdept"&gt;
&lt;input type="submit" value="&lt; Previous" name="prevdept"&gt;
&lt;input type="submit" value="Next &gt;" name="nextdept"&gt;
<span class="bold">&amp;nbsp;&amp;nbsp;&amp;nbsp;</span>
<span class="bold">&lt;input type="submit" value="Show Employees" name="showemp"&gt;</span>
&lt;/form&gt;
...
</pre></li>
<li>
<p>Edit the <code>anyco_ui.inc</code> file. In the <code>ui_print_employees()</code> function, change the HTML form to enable it to call the Departments page:</p>
<pre>
...
&lt;/table&gt;
&lt;input type="submit" value="Modify" name="modifyemp"&gt;
&lt;input type="submit" value="Delete" name="deleteemp"&gt;
&amp;nbsp;&amp;nbsp;
&lt;input type="submit" value="Insert new employee" name="insertemp"&gt;
<span class="bold">&amp;nbsp;&amp;nbsp;</span>
<span class="bold">&lt;input type="submit" value="Return to Departments" name="showdept"&gt;</span>
&lt;/form&gt;
...
</pre></li>
<li>
<p>Save the changes to your PHP files. In your browser, <a id="sthref498"></a><a id="sthref499"></a>test the changes by entering the following URL:</p>
<p>On Windows:</p>
<pre>
http://localhost/chap5/anyco.php
</pre>
<p>On Linux:</p>
<pre>
http://localhost/~&lt;username&gt;/chap5/anyco.php
</pre>
<p>The Departments page is displayed.</p>
<img width="602" height="242" src="img/chap5_combine_deptemp_001.gif" alt="Description of chap5_combine_deptemp_001.gif follows" title="Description of chap5_combine_deptemp_001.gif follows" /><br />
<a id="sthref500" href="img_text/chap5_combine_deptemp_001.htm">Description of the illustration chap5_combine_deptemp_001.gif</a><br />
<br />
<p>To display a list of employees in the department, click the <span class="bold">Show Employees</span> button.</p>
<img width="588" height="243" src="img/chap5_combine_deptemp_002.gif" alt="Description of chap5_combine_deptemp_002.gif follows" title="Description of chap5_combine_deptemp_002.gif follows" /><br />
<a id="sthref501" href="img_text/chap5_combine_deptemp_002.htm">Description of the illustration chap5_combine_deptemp_002.gif</a><br />
<br />
<p>You can return to the Departments page by clicking the <span class="bold">Return to Departments</span> button. Experiment by navigating to another department and listing its employees to show the process of switching between the Departments and Employees pages.</p>
</li>
</ol>
</div>
<!-- class="sect1" -->
<a id="CHDGCJCB"></a>
<div class="sect1">
<h2 class="sect1">Adding Error Recovery</h2>
<p>Error <a id="sthref502"></a><a id="sthref503"></a>management is always a significant design decision. In production systems, you might want to classify errors and handle them in different ways. Fatal errors could be redirected to a standard "site not available" page or home page. Data errors for new record creation might return to the appropriate form with invalid fields highlighted.</p>
<p>In most production systems, you would set the <code>display_errors</code> configuration option in the <code>php.ini</code> file to <code>off</code>, and the <code>log_errors</code> configuration option to <code>on</code>.</p>
<p>You can use the PHP output buffering functionality to trap error text when a function is executing. Using <code>ob_start()</code> prevents text from displaying on the screen. If an error occurs, the <code>ob_get_contents()</code> function allows the previously generated error messages to be stored in a string for later display or analysis.</p>
<p>Now you change the application to display error messages and database errors on a new page using a custom error handling function. Errors are now returned from the <code>db*</code> functions keeping them silent.</p>
<ol>
<li>
<p>Edit the <code><a id="sthref504"></a><a id="sthref505"></a><a id="sthref506"></a><a id="sthref507"></a>anyco_db.inc</code> file. Change the <code><a id="sthref508"></a><a id="sthref509"></a>db_error()</code> function to return the error information in an array structure, instead of printing and quitting. The function becomes:</p>
<pre>
function db_error($r = false, $file, $line)
{
  $err =  $r ? oci_error($r) : oci_error();

  if (isset($err['message'])) {
    $m = htmlentities($err['message']);
<span class="bold">    $c = $err['code'];</span>
  }
  else {
    $m = 'Unknown DB error';
<span class="bold">    $c = null;</span>
  }

<span class="bold">  $rc = array(</span>
<span class="bold">    'MESSAGE' =&gt; $m,</span>
<span class="bold">    'CODE'    =&gt; $c,</span>
<span class="bold">    'FILE'    =&gt; $file,</span>
<span class="bold">    'LINE'    =&gt; $line</span>
<span class="bold">    );</span>
<span class="bold">  return $rc;</span>
}
</pre></li>
<li>
<p>Edit the <code><a id="sthref510"></a><a id="sthref511"></a><a id="sthref512"></a>anyco_db.inc file.</code> For every call to the <code><a id="sthref513"></a><a id="sthref514"></a>db_error()</code> function, assign the return value to a variable called <code><a id="sthref515"></a><a id="sthref516"></a>$e</code> and add a <a id="sthref517"></a><a id="sthref518"></a><code>return false;</code> statement after each call:</p>
<pre>
<span class="bold">if (</span>&lt;error test&gt;<span class="bold">)</span>
<span class="bold">{</span>
  <span class="bold">$e = db_error(</span>&lt;handle&gt;<span class="bold">, __FILE__, __LINE__);</span>
<span class="bold">  return false;</span>
<span class="bold">}</span>
</pre>
<p>Make sure to keep the <code>&lt;error test&gt;</code> and <code>&lt;handle&gt;</code> parameters the same as they are currently specified for each call. Remember that the <a id="sthref519"></a><a id="sthref520"></a><code>__FILE__</code> and <a id="sthref521"></a><a id="sthref522"></a><code>__LINE__</code> constants help to pinpoint the location of the failure during development. This is useful information to log for fatal errors in a production deployment of an application.</p>
</li>
<li>
<p>Edit the <code><a id="sthref523"></a><a id="sthref524"></a>anyco_db.inc</code> file. Add a <a id="sthref525"></a><a id="sthref526"></a><code>$e</code> parameter to every function to enable the return of error information. Use the <code>&amp;</code> reference prefix to ensure that results are returned to the calling function. Each function declaration becomes:</p>
<pre>
function db_connect(<span class="bold">&amp;$e</span>) {...}

function db_get_page_data($conn, $q1, $currrownum = 1, $rowsperpage = 1,
                          <span class="bold">&amp;$e,</span> $bindvars = array()) {...}

function db_do_query($conn, $statement, $resulttype, <span class="bold">&amp;$e,</span>
                     $bindvars = array()) {...}

function db_execute_statement($conn, $statement, <span class="bold">&amp;$e,</span>
                              $bindvars = array()) {...}
</pre></li>
<li>
<p>Edit the <code><a id="sthref527"></a><a id="sthref528"></a>anyco_db.inc</code> file. In the <code><a id="sthref529"></a><a id="sthref530"></a>db_get_page_data()</code> function, change the call to the <code><a id="sthref531"></a><a id="sthref532"></a>db_do_query()</code> function to pass down the error parameter <code><a id="sthref533"></a><a id="sthref534"></a>$e</code>:</p>
<pre>
$r = db_do_query($conn, $query, OCI_FETCHSTATEMENT_BY_ROW, <span class="bold">$e,</span> $bindvars);
</pre></li>
<li>
<p>Edit the <code><a id="sthref535"></a><a id="sthref536"></a><a id="sthref537"></a>anyco_db.inc</code> file. Add an <code>@</code> prefix to all <code>oci_*</code> function calls. For example:</p>
<pre>
@ $r = @oci_execute($stid);
</pre>
<p>The <code>@</code> prefix prevents errors from displaying because each return result is tested. Preventing errors from displaying can hide incorrect parameter usage, which may hinder testing the changes in this section. You do not need to add <code>@</code> prefixes, but it can effect future results when errors are displayed.</p>
</li>
<li>
<p>Edit the <code><a id="sthref538"></a><a id="sthref539"></a><a id="sthref540"></a>anyco.php</code> file. Create a function to handle the error information:</p>
<pre>
<span class="bold">function handle_error($message, $err)</span>
<span class="bold">{</span>
<span class="bold">  ui_print_header($message);</span>
<span class="bold">  ui_print_error($err, $_SERVER['SCRIPT_NAME']);</span>
<span class="bold">  ui_print_footer(date('Y-m-d H:i:s'));</span>
<span class="bold">}</span>
</pre></li>
<li>
<p>Edit the <code>anyco.php</code> file. Modify all calls to <code>db_*</code> functions to include the additional error parameter:</p>
<p>Steps 8 to 15 show the complete new functions, so the code changes in this step can be skipped.</p>
<ul>
<li>
<p>Change all <code>db_connect()</code> calls to <code>db_connect($err)</code>.</p>
</li>
<li>
<p>Change all <code>db_do_query()</code> calls and insert a <code>$err</code> parameter as the fourth parameter. For example, the call in <code>construct_employees()</code> becomes:</p>
<pre>
$emp = db_do_query($conn, $query, 
                   OCI_FETCHSTATEMENT_BY_ROW, $err, $bindargs);
</pre>
<p>Change the other four db_do_query() calls in anyco.php remembering to keep the existing parameter values of each specific call.</p>
</li>
<li>
<p>Change the <code>db_get_page_data()</code> call and insert a <code>$err</code> parameter as the fifth parameter:</p>
<pre>
$dept = db_get_page_data($conn, $query, $current, 1, $err);
</pre></li>
<li>
<p>Change the <code>db_execute_statement()</code> calls and insert a <code>$err</code> parameter as the third parameter, for example:</p>
<pre>
$r = db_execute_statement($conn, $statement, $err, $bindargs);
</pre></li>
</ul>
</li>
<li>
<p>Edit the <code>anyco.php</code> file. Modify the <code>construct_departments()</code> function to handle errors returned. The function becomes:</p>
<pre>
function construct_departments()
{
  if (isset($_SESSION['currentdept']) &amp;&amp; isset($_POST['prevdept']) &amp;&amp; 
            $_SESSION['currentdept'] &gt; 1)
     $current = $_SESSION['currentdept'] - 1;
  elseif (isset($_SESSION['currentdept']) &amp;&amp; isset($_POST['nextdept']))
     $current = $_SESSION['currentdept'] + 1;
  elseif (isset($_POST['showdept']) &amp;&amp; isset($_SESSION['currentdept']))
     $current = $_SESSION['currentdept'];
  else
     $current = 1;

  $query =
    "SELECT d.department_id, d.department_name,
            substr(e.first_name,1,1)||'. '|| e.last_name as manager_name,
            c.country_name, count(e2.employee_id) as number_of_employees
     FROM   departments d, employees e, locations l, 
            countries c, employees e2
     WHERE  d.manager_id    = e.employee_id
     AND    d.location_id   = l.location_id
     AND    d.department_id = e2.department_id
     AND    l.country_id    = c.country_id
     GROUP BY d.department_id, d.department_name,
              substr(e.first_name,1,1)||'. '||e.last_name, c.country_name
     ORDER BY d.department_id ASC";

  $conn = db_connect(<span class="bold">$err</span>);

<span class="bold">  if (!$conn) {</span>
<span class="bold">    handle_error('Connection Error', $err);</span>
<span class="bold">  }</span>
<span class="bold">  else {</span>
    $dept = db_get_page_data($conn, $query, $current, 1, <span class="bold">$err</span>);
<span class="bold">    if ($dept === false) {  </span>
<span class="bold">      // Use === so empty array at end of fetch is not matched</span>
<span class="bold">      handle_error('Cannot fetch Departments', $err);</span>
<span class="bold">    } else {</span>

<span class="bold">      if (!isset($dept[0]['DEPARTMENT_ID']) &amp;&amp; $current &gt; 1) {  </span>
        <span class="bold">// no more records so go back one</span>

<span class="bold">        $current--;</span>
<span class="bold">        $dept = db_get_page_data($conn, $query, $current, 1, $err);</span>
<span class="bold">      }</span>

      $deptid = $dept[0]['DEPARTMENT_ID'];

      $_SESSION['deptid'] = $deptid;
      $_SESSION['currentdept'] = $current;

      $deptname = get_dept_name($conn, $deptid);
      ui_print_header('Department: '.$deptname);
      ui_print_department($dept[0], $_SERVER['SCRIPT_NAME']);
      ui_print_footer(date('Y-m-d H:i:s'));
<span class="bold">    }</span>
<span class="bold">  }</span>
}
</pre></li>
<li>
<p>Edit the <code>anyco.php</code> file. Modify the <code>construct_employees()</code> function to handle errors. The function becomes:</p>
<pre>
function construct_employees()
{
  $query =
    "SELECT employee_id,
            substr(first_name,1,1) || '.  '|| last_name as employee_name,
            hire_date,
            to_char(salary, '9999G999D99') as salary,
            nvl(commission_pct,0) as commission_pct
     FROM   employees
     WHERE  department_id = :did
     ORDER BY employee_id asc";

  $deptid = $_SESSION['deptid'];

  $conn = db_connect(<span class="bold">$err</span>);

<span class="bold">  if (!$conn) {</span>
<span class="bold">    handle_error('Connection Error', $err);</span>
<span class="bold">  }</span>
<span class="bold">  else {</span>
    $bindargs = array();
    array_push($bindargs, array('DID', $deptid, -1));
    $emp = db_do_query($conn, $query, OCI_FETCHSTATEMENT_BY_ROW, <span class="bold">$err,</span>
    $bindargs);

<span class="bold">    if (!$emp) {</span>
<span class="bold">      handle_error('Cannot fetch Employees', $err);</span>
<span class="bold">    }</span>
<span class="bold">    else {</span>
      $deptname = get_dept_name($conn, $deptid);
      ui_print_header('Employees: '.$deptname);
      ui_print_employees($emp, $_SERVER['SCRIPT_NAME']);
      ui_print_footer(date('Y-m-d H:i:s'));
<span class="bold">    }</span>
<span class="bold">  }</span>
}
</pre></li>
<li>
<p>Edit the <code>anyco.php</code> file. Modify the <code>construct_insert_emp()</code> function to handle errors. The function becomes:</p>
<pre>
function construct_insert_emp()
{
  $deptid = $_SESSION['deptid'];
  $conn = db_connect(<span class="bold">$err</span>);
<span class="bold">  if (!$conn) {</span>
<span class="bold">    handle_error('Connection Error', $err);</span>
<span class="bold">  }</span>
<span class="bold">  else {</span>
    $query = "SELECT job_id, job_title FROM jobs ORDER BY job_title ASC";
    $jobs = db_do_query($conn, $query, OCI_FETCHSTATEMENT_BY_COLUMN<span class="bold">, $err</span>);
    $query = "SELECT sysdate FROM dual";
    $date = db_do_query($conn, $query, OCI_FETCHSTATEMENT_BY_COLUMN<span class="bold">, $err</span>);

    $emp = array(
      'DEPARTMENT_ID' =&gt; $deptid,
      'HIRE_DATE' =&gt; $date['SYSDATE'][0],
      'ALLJOBIDS' =&gt; $jobs['JOB_ID'],
      'ALLJOBTITLES' =&gt; $jobs['JOB_TITLE']
      );

    ui_print_header('Insert New Employee');
    ui_print_insert_employee($emp, $_SERVER['SCRIPT_NAME']);
    ui_print_footer(date('Y-m-d H:i:s'));
<span class="bold">  }</span>
}
</pre></li>
<li>
<p>Edit the <code>anyco.php</code> file. Modify the <code>insert_new_emp()</code> function to handle errors. The function becomes:</p>
<pre>
function insert_new_emp()
{
  $statement =
    'INSERT INTO employees
                 (employee_id, first_name, last_name, email, hire_date,
                 job_id, salary, commission_pct, department_id)
     VALUES (employees_seq.nextval, :fnm, :lnm, :eml, :hdt,
            :jid, :sal, :cpt, :did)';

  $newemp = $_POST;

  $conn = db_connect(<span class="bold">$err</span>);
<span class="bold">  if (!$conn) {</span>
<span class="bold">    handle_error('Connect Error', $err);</span>
<span class="bold">  }</span>
<span class="bold">  else {</span>
    $emailid = $newemp['firstname'].$newemp['lastname'];

    $bindargs = array();
    array_push($bindargs, array('FNM', $newemp['firstname'], -1));
    array_push($bindargs, array('LNM', $newemp['lastname'], -1));
    array_push($bindargs, array('EML', $emailid, -1));
    array_push($bindargs, array('HDT', $newemp['hiredate'], -1));
    array_push($bindargs, array('JID', $newemp['jobid'], -1));
    array_push($bindargs, array('SAL', $newemp['salary'], -1));
    array_push($bindargs, array('CPT', $newemp['commpct'], -1));
    array_push($bindargs, array('DID', $newemp['deptid'], -1));

    $r = db_execute_statement($conn, $statement, <span class="bold">$err,</span> $bindargs);
<span class="bold">    if ($r) {</span>
      construct_employees();
<span class="bold">    }</span>
<span class="bold">    else {</span>
<span class="bold">      handle_error('Cannot insert employee', $err);</span>
<span class="bold">    }</span>
  }
}
</pre></li>
<li>
<p>Edit the <code>anyco.php</code> function. Modify the <code>construct_modify_emp()</code> function to handle errors. The function becomes:</p>
<pre>
function construct_modify_emp()
{
<span class="bold">  if (!isset($_POST['emprec'])) { // User did not select a record</span>
<span class="bold">    construct_employees();</span>
<span class="bold">  }</span>
<span class="bold">  else {</span>
    $empid = $_POST['emprec'];

    $query =
      "SELECT employee_id, first_name, last_name, email, hire_date,
              salary, nvl(commission_pct,0) as commission_pct
       FROM   employees
       WHERE  employee_id = :empid";

    $conn = db_connect(<span class="bold">$err</span>);
<span class="bold">    if (!$conn) {</span>
<span class="bold">      handle_error('Connect Error', $err);</span>
<span class="bold">    }</span>
<span class="bold">    else {</span>
      $bindargs = array();
      array_push($bindargs, array('EMPID', $empid, -1));

      $emp = db_do_query($conn, $query, OCI_FETCHSTATEMENT_BY_ROW, <span class="bold">$err,</span>
             $bindargs);

<span class="bold">      if (!$emp) {</span>
<span class="bold">        handle_error('Cannot find details for employee '.$empid, $err);</span>
<span class="bold">      }</span>
<span class="bold">      else {</span>
        ui_print_header('Modify Employee ');
        ui_print_modify_employee($emp[0], $_SERVER['SCRIPT_NAME']);
        ui_print_footer(date('Y-m-d H:i:s'));
<span class="bold">      }</span>
<span class="bold">    }</span>
<span class="bold">  }</span>
}
</pre></li>
<li>
<p>Edit the <code>anyco.php</code> file. Change the <code>modify_emp()</code> function to handle errors. The function becomes:</p>
<pre>
function modify_emp()
{
  $newemp = $_POST;

  $statement =
    "UPDATE employees
     SET    first_name = :fnm, last_name = :lnm, email = :eml,
            salary = :sal, commission_pct = :cpt
     WHERE  employee_id = :eid";

  $conn = db_connect(<span class="bold">$err</span>);
<span class="bold">  if (!$conn) {</span>
<span class="bold">    handle_error('Connect Error', $err);</span>
<span class="bold">  }</span>
<span class="bold">  else {</span>
    $bindargs = array();
    array_push($bindargs, array('EID', $newemp['empid'], -1));
    array_push($bindargs, array('FNM', $newemp['firstname'], -1));
    array_push($bindargs, array('LNM', $newemp['lastname'], -1));
    array_push($bindargs, array('EML', $newemp['email'], -1));
    array_push($bindargs, array('SAL', $newemp['salary'], -1));
    array_push($bindargs, array('CPT', $newemp['commpct'], -1));

    $r = db_execute_statement($conn, $statement, <span class="bold">$err,</span> $bindargs);

<span class="bold">    if (!$r) {</span>
<span class="bold">      handle_error('Cannot update employee '.$newemp['empid'], $err);</span>
<span class="bold">    }</span>
<span class="bold">    else {</span>
      construct_employees();
<span class="bold">    }</span>
<span class="bold">  }</span>
}
</pre></li>
<li>
<p>Edit the <code>anyco.php</code> file. Modify the <code>delete_emp()</code> function to handle errors. The function becomes:</p>
<pre>
function delete_emp()
{
<span class="bold">  if (!isset($_POST['emprec'])) { // User did not select a record</span>
<span class="bold">    construct_employees();</span>
<span class="bold">  }</span>
<span class="bold">  else {</span>
    $empid = $_POST['emprec'];

    $conn = db_connect(<span class="bold">$err</span>);
<span class="bold">    if (!$conn) {</span>
<span class="bold">      handle_error('Connection Error', $err);</span>
<span class="bold">    }</span>
<span class="bold">    else {</span>
      $statement = "DELETE FROM employees WHERE employee_id = :empid";
      $bindargs = array();
      array_push($bindargs, array('EMPID', $empid, -1));
      $r = db_execute_statement($conn, $statement, <span class="bold">$err,</span> $bindargs);

<span class="bold">      if (!$r) {</span>
<span class="bold">        handle_error("Error deleting employee $empid", $err);</span>
<span class="bold">      }</span>
<span class="bold">      else {</span>
        construct_employees();
<span class="bold">      }</span>
<span class="bold">    }</span>
<span class="bold">  }</span>
}
</pre></li>
<li>
<p>Edit the <code>anyco.php</code> file. Modify the <code>get_dept_name()</code> function to handle errors. The function becomes:</p>
<pre>
function get_dept_name($conn, $deptid)
{
  $query =
    'SELECT department_name
     FROM   departments
     WHERE  department_id = :did';

  $conn = db_connect(<span class="bold">$err</span>);
<span class="bold">  if (!$conn) {</span>
<span class="bold">    return ('Unknown');</span>
<span class="bold">  }</span>
<span class="bold">  else {</span>
    $bindargs = array();
    array_push($bindargs, array('DID', $deptid, -1));
    $dn = db_do_query($conn, $query, OCI_FETCHSTATEMENT_BY_COLUMN,
                      <span class="bold">$err,</span> $bindargs);
    if ($dn == false)
      return ('Unknown');
    else
      return($dn['DEPARTMENT_NAME'][0]);
<span class="bold">  }</span>
}
</pre></li>
<li>
<p>Edit the <code><a id="sthref541"></a><a id="sthref542"></a>anyco_ui.inc</code> file. Add a new function <code><a id="sthref543"></a><a id="sthref544"></a>ui_print_error()</code>:</p>
<pre>
<span class="bold">function ui_print_error($message, $posturl)</span>
<span class="bold">{</span>
<span class="bold">  if (!$message) {</span>
<span class="bold">    echo '&lt;p&gt;Unknown error&lt;/p&gt;';</span>
<span class="bold">  }</span>
<span class="bold">  else {</span>
<span class="bold">    echo "&lt;p&gt;Error at line {$message['LINE']} of "</span>
<span class="bold">         ."{$message['FILE']}&lt;/p&gt;";  // Uncomment for debugging</span>
<span class="bold">    echo "&lt;p&gt;{$message['MESSAGE']}&lt;/p&gt;";</span>
<span class="bold">  }</span>
<span class="bold">  echo &lt;&lt;&lt;END</span>
<span class="bold">  &lt;form method="post" action="$posturl"&gt;</span>
<span class="bold">  &lt;input type="submit" value="Return to Departments" name="showdept"&gt;</span>
<span class="bold">END;</span>
<span class="bold">}</span>
</pre>
<p>Remember not to put leading spaces in the <code>END;</code> line. Leading spaces in the <code>END;</code>line cause the rest of the document to be treated as part of the text to be printed.</p>
</li>
<li>
<p>Save the changes to your application files. <a id="sthref545"></a><a id="sthref546"></a>Test the changes by entering the following URL in your browser:</p>
<p>On Windows:</p>
<pre>
http://localhost/chap5/anyco.php
</pre>
<p>On Linux:</p>
<pre>
http://localhost/~&lt;username&gt;/chap5/anyco.php
</pre>
<p>The Departments page is displayed:</p>
<img width="604" height="240" src="img/chap5_err_handling_001.gif" alt="Description of chap5_err_handling_001.gif follows" title="Description of chap5_err_handling_001.gif follows" /><br />
<a id="sthref547" href="img_text/chap5_err_handling_001.htm">Description of the illustration chap5_err_handling_001.gif</a><br />
<br /></li>
<li>
<p>Click <span class="bold">Next</span> to navigate to the last department record, the Accounting department with ID 110. Try to navigate past the last department record by clicking <span class="bold">Next</span>.</p>
<img width="604" height="240" src="img/chap5_err_handling_002.gif" alt="Description of chap5_err_handling_002.gif follows" title="Description of chap5_err_handling_002.gif follows" /><br />
<a id="sthref548" href="img_text/chap5_err_handling_002.htm">Description of the illustration chap5_err_handling_002.gif</a><br />
<br />
<p>The error handling prevents navigation past the last department record.</p>
</li>
<li>
<p>If a new employee is inserted with a salary of 0, or the department ID is changed to one that does not exist, the new error page is shown with the heading "Cannot insert employee".</p>
</li>
</ol>
</div>
<!-- class="sect1" -->
<a id="CHDEIIEG"></a>
<div class="sect1">
<h2 class="sect1">Further Error Handling</h2>
<p>Specific Oracle <a id="sthref549"></a><a id="sthref550"></a>errors can be handled individually. For example, if a new employee record is created by clicking the <span class="bold">Insert new employee</span> button on the Employees page, and the Department ID is changed to a department that does not exist, you can trap this error and display a more meaningful message:</p>
<ol>
<li>
<p>Edit the <code><a id="sthref551"></a><a id="sthref552"></a>anyco.php</code> file. Change the error handling in the <a id="sthref553"></a><a id="sthref554"></a><code>insert_new_emp()</code> function:</p>
<pre>
    $r = db_execute_statement($conn, $statement, $err, $bindargs);
    if ($r) {
      construct_employees();
    }
    else {
<span class="bold">      if ($err['CODE'] == 2291) {  // Foreign key violated</span>
<span class="bold">        handle_error("Department {$newemp['deptid']} does not yet exist",</span>
<span class="bold">        $err);</span>
<span class="bold">      } </span>
<span class="bold">      else {</span>
        handle_error('Cannot insert employee', $err);
<span class="bold">      }</span>
    }
</pre></li>
<li>
<p>Save the changes to your application files. <a id="sthref555"></a><a id="sthref556"></a>Test the changes by entering the following URL:</p>
<p>On Windows:</p>
<pre>
http://localhost/chap5/anyco.php
</pre>
<p>On Linux:</p>
<pre>
http://localhost/~&lt;username&gt;/chap5/anyco.php
</pre></li>
<li>
<p>In the Departments page, click <span class="bold">Show Employees</span>.</p>
<img width="604" height="240" src="img/chap5_err_handling_003.gif" alt="Description of chap5_err_handling_003.gif follows" title="Description of chap5_err_handling_003.gif follows" /><br />
<a id="sthref557" href="img_text/chap5_err_handling_003.htm">Description of the illustration chap5_err_handling_003.gif</a><br />
<br /></li>
<li>
<p>In the Employees page, click <span class="bold">Insert new employee</span>.</p>
<img width="604" height="240" src="img/chap5_err_handling_004.gif" alt="Description of chap5_err_handling_004.gif follows" title="Description of chap5_err_handling_004.gif follows" /><br />
<a id="sthref558" href="img_text/chap5_err_handling_004.htm">Description of the illustration chap5_err_handling_004.gif</a><br />
<br /></li>
<li>
<p>In the Insert New Employee page, enter employee details as shown, setting the Department ID to 99, and click <span class="bold">Save</span>.</p>
<img width="606" height="418" src="img/chap5_err_handling_005.gif" alt="Description of chap5_err_handling_005.gif follows" title="Description of chap5_err_handling_005.gif follows" /><br />
<a id="sthref559" href="img_text/chap5_err_handling_005.htm">Description of the illustration chap5_err_handling_005.gif</a><br />
<br />
<p>The following error page is displayed:</p>
<img width="608" height="212" src="img/chap5_err_handling_006.gif" alt="Description of chap5_err_handling_006.gif follows" title="Description of chap5_err_handling_006.gif follows" /><br />
<a id="sthref560" href="img_text/chap5_err_handling_006.htm">Description of the illustration chap5_err_handling_006.gif</a><br />
<br />
<p>You can click <span class="bold">Return to Departments</span> to return to the Departments page and then click <span class="bold">Show Employees</span> to verify that the new employee record has not been added to the Administration department.</p>
</li>
</ol>
</div>
<!-- class="sect1" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment943">
<tr>
<td class="cellalignment950">
<table class="cellalignment948">
<tr>
<td class="cellalignment947"><a href="ch_four.htm"><img width="24" height="24" src="../../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment947"><a href="ch_six.htm"><img width="24" height="24" src="../../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;2009,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment952">
<table class="cellalignment946">
<tr>
<td class="cellalignment947"><a href="../../index.htm"><img width="24" height="24" src="../../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment947"><a href="../../nav/portal_booklist.htm"><img width="24" height="24" src="../../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment947"><a href="toc.htm"><img width="24" height="24" src="../../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment947"><a href="index.htm"><img width="24" height="24" src="../../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment947"><a href="../../nav/mindx.htm"><img width="24" height="24" src="../../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment947"><a href="../../dcommon/html/feedback.htm"><img width="24" height="24" src="../../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>
</body>
</html>
