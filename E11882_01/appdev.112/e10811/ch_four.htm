<!DOCTYPE html>
<html lang="en">
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1">
<meta charset="utf-8">
<title>Querying Data</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Version 5.1" />
<meta name="dcterms.created" content="2009-08-03T6:35:23Z" />
<meta name="robots" content="all" />
<meta name="dcterms.title" content="Database 2 Day + PHP Developer's Guide" />
<meta name="dcterms.identifier" content="E10811-01" />
<meta name="dcterms.isVersionOf" content="TDPPH" />
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;2009,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved." />
<link rel="Start" href="../../index.htm" title="Home" type="text/html" />
<link rel="Copyright" href="../../dcommon/html/cpyr.htm" title="Copyright" type="text/html" />

<script type="application/javascript"  src="../../dcommon/js/headfoot.js"></script>
<script type="application/javascript"  src="../../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html" />
<link rel="Index" href="index.htm" title="Index" type="text/html" />
<link rel="Prev" href="ch_three.htm" title="Previous" type="text/html" />
<link rel="Next" href="ch_five.htm" title="Next" type="text/html" />
<link rel="alternate" href="../e10811.pdf" title="PDF version" type="application/pdf" />
<link rel="schema.dcterms" href="http://purl.org/dc/terms/" />
<link rel="stylesheet" href="../../dcommon/css/fusiondoc.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/header.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/footer.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/fonts.css">
<link rel="stylesheet" href="../../dcommon/css/foundation.css">
<link rel="stylesheet" href="../../dcommon/css/codemirror.css">
<link rel="stylesheet" type="text/css" title="Default" href="../../nav/css/html5.css">
<link rel="stylesheet" href="../../dcommon/css/respond-480-tablet.css">
<link rel="stylesheet" href="../../dcommon/css/respond-768-laptop.css">
<link rel="stylesheet" href="../../dcommon/css/respond-1140-deskop.css">
<script type="application/javascript" src="../../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">7/12</span> <!-- End Header --><a id="CHDJCHGG"></a><a id="i1210079"></a>
<h1 class="chapter"><span class="secnum">4</span> Querying Data</h1>
<p>In this chapter, you extend the Anyco HR application from Chapter 3 by adding information to the Departments page. You also implement the functionality to query, insert, update, and delete employee records in a specific department.</p>
<p>This chapter has the following topics:</p>
<ul>
<li>
<p><a href="#CHDEGDJA">Centralizing the Database Application Logic</a></p>
</li>
<li>
<p><a href="#CHDGHDDH">Writing Queries with Bind Variables</a></p>
</li>
<li>
<p><a href="#CHDEAAAB">Navigating Through Database Records</a></p>
</li>
<li>
<p><a href="#CHDEACIE">Extending the Basic Departments Page</a></p>
</li>
</ul>
<a id="CHDEGDJA"></a>
<div class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Centralizing the Database Application Logic</h2>
<p>In this <a id="sthref195"></a><a id="sthref196"></a><a id="sthref197"></a>section, you will modify your application code by moving the database access logic into separate files for inclusion in the PHP application.</p>
<ol>
<li>
<p>Copy the files that you completed in Chapter 3 to a new <code>chap4</code> directory, and change to the newly created directory:</p>
<p>On Windows:</p>
<pre>
mkdir c:\program files\Apache Group\Apache2\htdocs\chap4
cd c:\program files\Apache Group\Apache2\htdocs\chap4
copy ..\chap3\* .
</pre>
<p>On Linux:</p>
<pre>
mkdir $HOME/public_html/chap4
cd $HOME/public_html/chap4
cp ../chap3/* .
</pre></li>
<li>
<p>Using your preferred editor, create a file called <code><a id="sthref198"></a><a id="sthref199"></a><a id="sthref200"></a><a id="sthref201"></a>anyco_cn.inc</code> that defines named constants for the database connection information. This file enables you to change connection information in one place.</p>
<pre>
<span class="bold">&lt;?php // File: anyco_cn.inc</span>

<span class="bold">define('ORA_CON_UN', 'hr');             // User name</span>
<span class="bold">define('ORA_CON_PW', 'hr');             // Password</span>
<span class="bold">define('ORA_CON_DB', '//localhost/orcl'); // Connection identifier</span>

<span class="bold">?&gt;</span>
</pre>
<p>For simplicity, the user name and password are written into this sample application code. For applications that will be deployed, coding the user name and password strings directly into your application source code is not recommended. Oracle recommends that you use a more secure technique, such as implementing a dialog that prompts the user for the user name and password.</p>
<p>See <span class="italic"><a class="olink DBSEG" href="../../network.112/e36292/toc.htm">Oracle Database Security Guide</a></span> and the documentation for your development environment for details on security features and practices.</p>
</li>
<li>
<p>Create a file called <code><a id="sthref202"></a><a id="sthref203"></a><a id="sthref204"></a><a id="sthref205"></a>anyco_db.inc</code> that declares functions for creating a database connection, executing a query, and disconnecting from the database. Use the following logic, which includes some error handling that is managed by calling an additional function called <a id="sthref206"></a><a id="sthref207"></a><code>db_error ()</code>:</p>
<pre>
<span class="bold">&lt;?php  // File: anyco_db.inc</span>

<span class="bold">function db_connect()</span>
<span class="bold">{</span>
<span class="bold">  // use constants defined in anyco_cn.inc</span>
<span class="bold">  $conn = oci_connect(ORA_CON_UN, ORA_CON_PW, ORA_CON_DB);</span>
<span class="bold">  if (!$conn) {</span>
<span class="bold">    db_error(null, __FILE__, __LINE__);</span>
<span class="bold">  }</span>
<span class="bold">  return($conn);</span>
<span class="bold">}</span>

<span class="bold">function db_do_query($conn, $statement)</span>
<span class="bold">{</span>
<span class="bold">  $stid = oci_parse($conn, $statement);</span>
<span class="bold">  if (!$stid) {</span>
<span class="bold">    db_error($conn, __FILE__, __LINE__);</span>
<span class="bold">  }</span>

<span class="bold">  $r = oci_execute($stid, OCI_DEFAULT);</span>
<span class="bold">  if (!$r) {</span>
<span class="bold">    db_error($stid, __FILE__, __LINE__);</span>
<span class="bold">  }</span>
<span class="bold"> $r = oci_fetch_all($stid, $results, null, null,</span>
<span class="bold">                     OCI_FETCHSTATEMENT_BY_ROW);</span>
<span class="bold">  return($results);</span>
<span class="bold">}</span>

<span class="bold">// $r is the resource containing the error.</span>
<span class="bold">// Pass no argument or false for connection errors</span>

<span class="bold">function db_error($r = false, $file, $line)</span>
<span class="bold">{</span>
<span class="bold">  $err =  $r ? oci_error($r) : oci_error();</span>

<span class="bold">  if (isset($err['message'])) {</span>
<span class="bold">    $m = htmlentities($err['message']);</span>
<span class="bold">  }</span>
<span class="bold">  else {  </span>
<span class="bold">    $m = 'Unknown DB error';</span>
<span class="bold">  }</span>

<span class="bold">  echo '&lt;p&gt;&lt;b&gt;Error&lt;/b&gt;: at line '.$line.' of '.$file.'&lt;/p&gt;';</span>
<span class="bold">  echo '&lt;pre&gt;'.$m.'&lt;/pre&gt;';</span>

<span class="bold">  exit;</span>
<span class="bold">}</span>

<span class="bold">?&gt;</span>
</pre>
<p>The <code><a id="sthref208"></a><a id="sthref209"></a>db_do_query()</code> function in this example uses the <code><a id="sthref210"></a><a id="sthref211"></a>oci_fetch_all()</code> OCI8 function. The <code>oci_fetch_all()</code> function accepts the following five parameters:</p>
<ul>
<li>
<p><a id="sthref212"></a><a id="sthref213"></a><code>$stid</code>, the statement identifier for the statement executed</p>
</li>
<li>
<p><code><a id="sthref214"></a><a id="sthref215"></a>$results</code>, the output array variable containing the data returned for the query</p>
</li>
<li>
<p>The <code>null</code> in the third parameter for the number of initial rows to skip is ignored.</p>
</li>
<li>
<p>The <code>null</code> in the fourth parameter for the maximum number of rows to fetch is ignored. In this case, all the rows for the query are returned. For this example where the result set is not large, it is acceptable.</p>
</li>
<li>
<p>The last parameter flag <code><a id="sthref216"></a><a id="sthref217"></a>OCI_FETCHSTATEMENT_BY_ROW</code> indicates that the data in the <code>$results</code> array is organized by row, where each row contains an array of column values. A value of <code>OCI_FETCHSTATEMENT_BY_COLUMN</code> causes the <code>results</code> array to be organized by column, where each column entry contains an array of column values for each row. Your choice of value for this flag depends on how you intend to process the data in your logic.</p>
</li>
</ul>
<p>To examine the structure of the result array, use the PHP <code><a id="sthref218"></a><a id="sthref219"></a>var_dump()</code> function after the query has been executed. This is useful for <a id="sthref220"></a>debugging. For example:</p>
<pre>
print '&lt;pre&gt;';
var_dump($results);
print '&lt;/pre&gt;';
</pre>
<p>The <code><a id="sthref221"></a><a id="sthref222"></a>db_error()</code> function accepts three arguments. The <a id="sthref223"></a><a id="sthref224"></a><code>$r</code> parameter can be false or null for obtaining connection errors, or a connection resource or statement resource to obtain an error for those contexts. The <a id="sthref225"></a><a id="sthref226"></a><code>$file</code> and <code><a id="sthref227"></a><a id="sthref228"></a>$line</code> values are populated by using <a id="sthref229"></a><a id="sthref230"></a><code>__FILE__</code> and <a id="sthref231"></a><a id="sthref232"></a><code>__LINE__</code>, respectively, as the actual parameters to enable the error message to display the source file and line from which the database error is reported. This enables you to easily track the possible cause of errors.</p>
<p>The db_ <code>error()</code> function calls the <a id="sthref233"></a><a id="sthref234"></a><code>oci_error()</code> function to obtain database error messages.</p>
<p>The <code>db_error()</code> function calls the <a id="sthref235"></a><a id="sthref236"></a><code>isset()</code> function before printing the message. The <code>isset()</code> function checks if the message component of the database error structure is set, or if the error is unknown.</p>
</li>
<li>
<p>Edit <code><a id="sthref237"></a><a id="sthref238"></a>anyco_ui.inc</code>. To format the results of a single row from the <code>DEPARTMENTS</code> table query in an HTML table format, insert the following function:</p>
<pre>
<span class="bold">function ui_print_department($dept)</span>
<span class="bold">{</span>
<span class="bold">  if (!$dept) {</span>
<span class="bold">    echo '&lt;p&gt;No Department found&lt;/p&gt;';</span>
<span class="bold">  }</span>
<span class="bold">  else {</span>
<span class="bold">    echo &lt;&lt;&lt;END</span>
<span class="bold">  &lt;table&gt;</span>
<span class="bold">  &lt;tr&gt;</span>
<span class="bold">    &lt;th&gt;Department&lt;br&gt;ID&lt;/th&gt;</span>
<span class="bold">    &lt;th&gt;Department&lt;br&gt;Name&lt;/th&gt;</span>
<span class="bold">    &lt;th&gt;Manager&lt;br&gt;Id&lt;/th&gt;</span>
<span class="bold">    &lt;th&gt;Location ID&lt;/th&gt;</span>
<span class="bold">  &lt;/tr&gt;</span>
<span class="bold">  &lt;tr&gt;</span>
<span class="bold">END;</span>
<span class="bold">    echo '&lt;td&gt;'.htmlentities($dept['DEPARTMENT_ID']).'&lt;/td&gt;';</span>
<span class="bold">    echo '&lt;td&gt;'.htmlentities($dept['DEPARTMENT_NAME']).'&lt;/td&gt;';</span>
<span class="bold">    echo '&lt;td&gt;'.htmlentities($dept['MANAGER_ID']).'&lt;/td&gt;';</span>
<span class="bold">    echo '&lt;td&gt;'.htmlentities($dept['LOCATION_ID']).'&lt;/td&gt;';</span>
<span class="bold">    echo &lt;&lt;&lt;END</span>
<span class="bold">  &lt;/tr&gt;</span>
<span class="bold">  &lt;/table&gt;</span>
<span class="bold">END;</span>
<span class="bold">  }</span>
<span class="bold">}</span>
</pre>
<p>As noted in Chapter 3, do not prefix <code>END;</code> lines with leading spaces. If you do, the rest of the document will be treated as part of the text to be printed.</p>
</li>
<li>
<p>Edit the <code><a id="sthref239"></a><a id="sthref240"></a><a id="sthref241"></a>anyco.php</code> file. Include the <code><a id="sthref242"></a><a id="sthref243"></a>anyco_ui.inc</code> and <code><a id="sthref244"></a><a id="sthref245"></a>anyco_db.inc</code> files, and call the database functions to query and display information for a department with a <code>department_id</code> of 80 by using the following code. The file becomes:</p>
<pre>
<span class="bold">&lt;?php // File: anyco.php</span>

<span class="bold">require('anyco_cn.inc');</span>
<span class="bold">require('anyco_db.inc');</span>
<span class="bold">require('anyco_ui.inc');</span>

<span class="bold">$query =</span>
  <span class="bold">'SELECT   department_id, department_name, manager_id, location_id</span>
  <span class="bold"> FROM     departments</span>
  <span class="bold"> WHERE    department_id = 80';</span>

<span class="bold">$conn = db_connect();</span>

<span class="bold">$dept = db_do_query($conn, $query);</span>
<span class="bold">ui_print_header('Departments');</span>
<span class="bold">ui_print_department($dept[0]);</span>
<span class="bold">ui_print_footer(date('Y-m-d H:i:s'));</span>

<span class="bold">?&gt;</span>
</pre></li>
<li>
<p>To <a id="sthref246"></a><a id="sthref247"></a>test the resulting changes to the application, enter the following URL in a browser window:</p>
<p>On Windows:</p>
<pre>
http://localhost/chap4/anyco.php
</pre>
<p>On Linux:</p>
<pre>
http://localhost/~&lt;username&gt;/chap4/anyco.php
</pre>
<p>The page returned in the browser window should resemble the following page:</p>
<img width="562" height="232" src="img/chap4_db_connect_002.gif" alt="Description of chap4_db_connect_002.gif follows" title="Description of chap4_db_connect_002.gif follows" /><br />
<a id="sthref248" href="img_text/chap4_db_connect_002.htm">Description of the illustration chap4_db_connect_002.gif</a><br />
<br /></li>
</ol>
</div>
<!-- class="sect1" -->
<a id="CHDGHDDH"></a>
<div class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Writing Queries with Bind Variables</h2>
<p>Using <a id="sthref249"></a><a id="sthref250"></a>queries with values included in the WHERE clause may be useful for some situations. However, if the conditional values in the query are likely to change it is not appropriate to encode a value into the query. Oracle recommends that you use bind variables.</p>
<p>A <a id="sthref251"></a>bind variable is a symbolic name preceded by a colon in the query that acts as a placeholder for literal values. For example, the query string created in the <code><a id="sthref252"></a><a id="sthref253"></a>anyco.php</code> file could be rewritten with the bind variable <code>:did</code> as follows:</p>
<pre>
$query =
  'SELECT   department_id, department_name, manager_id, location_id
   FROM     departments
   WHERE    department_id = :did'; 
</pre>
<p>By using bind variables to parameterize SQL statements:</p>
<ul>
<li>
<p>The statement is reusable with different input values without needing to change the code.</p>
</li>
<li>
<p>The query performance is improved through a reduction of the query parse time in the server, because the Oracle database can reuse parse information from the previous invocations of the identical query string.</p>
</li>
<li>
<p>There is protection against "SQL Injection" security problems.</p>
</li>
<li>
<p>There is no need to specially handle quotation marks in user input.</p>
</li>
</ul>
<p>When a query uses a bind variable, the PHP code must associate an actual value with each bind variable (placeholder) used in the query before it is executed. This process is known as run-time binding.</p>
<p>To enable your PHP application to use bind variables in the query, perform the following changes to your PHP application code:</p>
<ol>
<li>
<p>Edit the <code><a id="sthref254"></a><a id="sthref255"></a>anyco.php</code> file. Modify the query to use a bind variable, create an array to store the value to be associated with the bind variable, and pass the <code><a id="sthref256"></a>$bindargs</code> array to the <a id="sthref257"></a><a id="sthref258"></a><code>db_do_query()</code> function:</p>
<pre>
&lt;?php // File: anyco.php
...

$query =
'SELECT   department_id, department_name, manager_id, location_id
 FROM     departments
 WHERE    department_id = <span class="bold">:did</span>';

<span class="bold">$bindargs = array();</span>
<span class="bold">// In the $bindargs array add an array containing</span>
<span class="bold">// the bind variable name used in the query, its value, a length</span>
<span class="bold">array_push($bindargs, array('DID', 80, -1));</span>

$conn = db_connect();
$dept = db_do_query($conn, $query<span class="bold">, $bindargs</span>);

...
?&gt;
</pre>
<p>In this example, the bind variable, called <a id="sthref259"></a><a id="sthref260"></a>DID, is an input argument in the parameterized query, and it is associated with the value 80. Later, the value of the bind variable will be dynamically determined. In addition, the length component is passed as -1 so that the OCI8 layer can determine the length. If the bind variable was used to return output from the database an explicit size would be required.</p>
</li>
<li>
<p>Edit the <code><a id="sthref261"></a><a id="sthref262"></a>anyco_db.inc</code> file. Modify the <code><a id="sthref263"></a><a id="sthref264"></a>db_do_query()</code> function to accept a <code><a id="sthref265"></a><a id="sthref266"></a>$bindvars</code> array variable as a third parameter. Call the <code><a id="sthref267"></a><a id="sthref268"></a>oci_bind_by_name()</code> OCI8 call to associate the PHP values supplied in <a id="sthref269"></a><a id="sthref270"></a><code>$bindvars</code> parameter with bind variables in the query. The function becomes:</p>
<pre>
function db_do_query($conn, $statement<span class="bold">, $bindvars = array()</span>)
{
  $stid = oci_parse($conn, $statement);
  if (!$stid) {
    db_error($conn, __FILE__, __LINE__);
  }

<span class="bold">  // Bind the PHP values to query bind parameters</span>
<span class="bold">  foreach ($bindvars as $b) {</span>
<span class="bold">    // create local variable with caller specified bind value</span>
<span class="bold">    $$b[0] = $b[1];  </span>
<span class="bold">    // oci_bind_by_name(resource, bv_name, php_variable, length)</span>
<span class="bold">    $r = oci_bind_by_name($stid, ":$b[0]", $$b[0], $b[2]); </span>
<span class="bold">    if (!$r) {</span>
<span class="bold">      db_error($stid, __FILE__, __LINE__);</span>
<span class="bold">    }</span>
<span class="bold">  }</span>
  $r = oci_execute($stid, OCI_DEFAULT);
  if (!$r) {
        db_error($stid, __FILE__, __LINE__);
  }
  $r = oci_fetch_all($stid, $results, null, null,
                         OCI_FETCHSTATEMENT_BY_ROW);
  return($results);
}
</pre>
<p>The binding is performed in the <code>foreach</code> loop before the <a id="sthref271"></a><a id="sthref272"></a><code>oci_execute()</code> is done.</p>
<p>For each entry in <code>$bindvars</code> array, the first element contains the query bind variable name that is used to create a PHP variable of the same name; that is, <code>$$b[0]</code> takes the value <a id="sthref273"></a><a id="sthref274"></a>DID in <code>$b[0]</code> and forms a PHP variable called <code><a id="sthref275"></a><a id="sthref276"></a>$DID</code> whose value is assigned from the second element in the entry.</p>
<p>The <a id="sthref277"></a><a id="sthref278"></a><code>oci_bind_by_name()</code> function accepts four parameters: the <code><a id="sthref279"></a><a id="sthref280"></a>$stid</code> as the resource, a string representing the bind variable name in the query derived from the first element in the array entry, the PHP variable containing the value to be associated with the bind variable, and the length of the input value.</p>
</li>
<li>
<p>To test the results of the preceding modifications, save the <code><a id="sthref281"></a><a id="sthref282"></a>anyco.php</code> and <code><a id="sthref283"></a><a id="sthref284"></a>anyco_db.inc</code> files and enter the following URL:</p>
<p>On Windows:</p>
<pre>
http://localhost/chap4/anyco.php
</pre>
<p>On Linux:</p>
<pre>
http://localhost/~&lt;username&gt;/chap4/anyco.php
</pre>
<p>The page returned in the browser window should resemble the following page:</p>
<img width="562" height="232" src="img/chap4_db_connect_003.gif" alt="Description of chap4_db_connect_003.gif follows" title="Description of chap4_db_connect_003.gif follows" /><br />
<a id="sthref285" href="img_text/chap4_db_connect_003.htm">Description of the illustration chap4_db_connect_003.gif</a><br />
<br /></li>
</ol>
</div>
<!-- class="sect1" -->
<a id="CHDEAAAB"></a>
<div class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Navigating Through Database Records</h2>
<p>Adding <a id="sthref286"></a><a id="sthref287"></a><a id="sthref288"></a>navigation through the database records requires several important changes to the application logic. The modifications require the combination of:</p>
<ul>
<li>
<p>Including an HTML form to provide <span class="bold">Next</span> and <span class="bold">Previous</span> navigation buttons to step through database records.</p>
</li>
<li>
<p>Detecting if the HTTP request for the page was posted by clicking the <span class="bold">Next</span> or <span class="bold">Previous</span> button.</p>
</li>
<li>
<p>Tracking the last row queried by using the HTTP session state. A PHP session is started to maintain state information for a specific client between HTTP requests. The first HTTP request will retrieve the first data row and initialize the session state. A subsequent request, initiated with navigation buttons, combined with the session state from a previous HTTP request, enables the application to set variables that control the next record retrieved by the query.</p>
</li>
<li>
<p>Writing a query that returns a subset of rows based on a set of conditions whose values are determined by the application state.</p>
</li>
</ul>
<p>To add navigation through database rows, perform the following steps:</p>
<ol>
<li>
<p>Edit the <code><a id="sthref289"></a><a id="sthref290"></a>anyco_ui.inc</code> file. Add <span class="bold">Next</span> and <span class="bold">Previous</span> navigation buttons to the Departments page. Change the <code><a id="sthref291"></a><a id="sthref292"></a>ui_print_department()</code> function to append a second parameter called <code><a id="sthref293"></a><a id="sthref294"></a>$posturl</code> that supplies the value for the form attribute <code>action</code>. After printing the <code>&lt;/table&gt;</code> tag include HTML form tags for the <span class="bold">Next</span> and <span class="bold">Previous</span> buttons:</p>
<pre>
&lt;?php // File: anyco_ui.inc
...
function ui_print_department($dept<span class="bold">, $posturl</span>)
{
  ...
    echo &lt;&lt;&lt;END
  &lt;/tr&gt;
  &lt;/table&gt;
<span class="bold">  &lt;form method="post" action="$posturl"&gt;</span>
<span class="bold">  &lt;input type="submit" value="&lt; Previous" name="prevdept"&gt;</span>
<span class="bold">  &lt;input type="submit" value="Next &gt;"     name="nextdept"&gt;</span>
<span class="bold">  &lt;/form&gt;</span>
END;
  }
}

?&gt;
</pre></li>
<li>
<p>Edit the <code><a id="sthref295"></a><a id="sthref296"></a>anyco.php</code> file. To detect if the <span class="bold">Next</span> or <span class="bold">Previous</span> button was used to invoke the page and track the session state, call the PHP function <code><a id="sthref297"></a><a id="sthref298"></a>session_start()</code>, and create a function named <code><a id="sthref299"></a><a id="sthref300"></a>construct_departments()</code>:</p>
<p>Move and modify the database access logic into a new <code><a id="sthref301"></a><a id="sthref302"></a>construct_departments()</code> function, which detects if navigation has been performed, manages the session state, defines a subquery for the database access layer to process, and connects and calls a function <code><a id="sthref303"></a><a id="sthref304"></a>db_get_page_data()</code>. The file becomes:</p>
<pre>
<span class="bold">&lt;?php // File: anyco.php</span>

<span class="bold">require('anyco_cn.inc');</span>
<span class="bold">require('anyco_db.inc');</span>
<span class="bold">require('anyco_ui.inc');</span>

<span class="bold">session_start();</span>
<span class="bold">construct_departments();</span>

<span class="bold">function construct_departments()</span>
{
<span class="bold">  if (isset($_SESSION['currentdept']) &amp;&amp;</span>
<span class="bold">      isset($_POST['prevdept']) &amp;&amp; </span>
<span class="bold">      $_SESSION['currentdept'] &gt; 1) {</span>
<span class="bold">    $current = $_SESSION['currentdept'] - 1;</span>
<span class="bold">  }</span>
<span class="bold">  elseif (isset($_SESSION['currentdept']) &amp;&amp; </span>
<span class="bold">          isset($_POST['nextdept'])) {</span>
<span class="bold">    $current = $_SESSION['currentdept'] + 1;</span>
<span class="bold">  }</span>
<span class="bold">  elseif (isset($_POST['showdept']) &amp;&amp; </span>
<span class="bold">          isset($_SESSION['currentdept'])) {</span>
<span class="bold">    $current = $_SESSION['currentdept'];</span>
<span class="bold">  }</span>
<span class="bold">  else {</span>
<span class="bold">    $current = 1;</span>
<span class="bold">  }</span>

<span class="bold">  $query = 'SELECT department_id, department_name, </span>
<span class="bold">                   manager_id, location_id</span>
<span class="bold">            FROM   departments</span>
<span class="bold">            ORDER BY department_id asc';</span>

<span class="bold">  $conn = db_connect();</span>

<span class="bold">  $dept = db_get_page_data($conn, $query, $current, 1);</span>
<span class="bold">  $deptid = $dept[0]['DEPARTMENT_ID'];</span>

<span class="bold">  $_SESSION['currentdept'] = $current;</span>

<span class="bold">  ui_print_header('Department');</span>
<span class="bold">  ui_print_department($dept[0], $_SERVER['SCRIPT_NAME']);</span>
<span class="bold">  ui_print_footer(date('Y-m-d H:i:s'));</span>
<span class="bold">}</span>

<span class="bold">?&gt;</span>
</pre>
<p>The <code>if</code> and <code>elseif</code> construct at the start of the <a id="sthref305"></a><a id="sthref306"></a><code>construct_departments()</code> function is used to detect if a navigation button was used with an HTTP post request to process the page, and tracks if the <code>currentdept</code> number is set in the session state. Depending on the circumstances, the variable <code><a id="sthref307"></a><a id="sthref308"></a>$current</code> is decremented by one when the previous button is clicked, <code>$current</code> is incremented by one when the <span class="bold">Next</span> button is clicked, otherwise <code>$current</code> is set to the current department, or initialized to one for the first time through.</p>
<p>A query is formed to obtain all the department rows in ascending sequence of the <code>department_id</code>. The <code>ORDER BY</code> clause is an essential part of the navigation logic. The query is used as a subquery inside the <a id="sthref309"></a><a id="sthref310"></a><code>db_get_page_data()</code> function to obtain a page of a number of rows, where the number of rows per page is specified as the fourth argument to the <code>db_get_page_data()</code> function. After connecting to the database, <code>db_get_page_data()</code> is called to retrieve the set of rows obtained for the specified query. The <code>db_get_page_data()</code> function is provided with the connection resource, the query string, a value in <code>$current</code> specifying the first row in the next page of data rows required, and the number of rows per page (in this case one row per page).</p>
<p>After <code>db_get_page_data()</code>has been called to obtain a page of rows, the value of <code>$current</code> is stored in the application session state.</p>
<p>Between printing the page header and footer, the <a id="sthref311"></a><a id="sthref312"></a><code>ui_print_department()</code> function is called to display the recently fetched department row. The <code>ui_print_department()</code> function uses <code>$_SERVER['SCRIPT_NAME']</code> to supply the current PHP script name for the <a id="sthref313"></a><a id="sthref314"></a><code>$posturl</code> parameter. This sets the action attribute in the HTML form, so that each <span class="bold">Next</span> or <span class="bold">Previous</span> button click calls the <code>anyco.php</code> file.</p>
</li>
<li>
<p>Edit the <code><a id="sthref315"></a><a id="sthref316"></a>anyco_db.inc</code> file. Implement the <code><a id="sthref317"></a><a id="sthref318"></a>db_get_page_data()</code> function to query a subset of rows:</p>
<pre>
<span class="bold">// Return subset of records</span>
<span class="bold">function db_get_page_data($conn, $q1, $current = 1,</span>
<span class="bold">                 $rowsperpage = 1, $bindvars = array())</span>
<span class="bold">{</span>
<span class="bold">  // This query wraps the supplied query, and is used</span>
<span class="bold">  // to retrieve a subset of rows from $q1</span>
<span class="bold">  $query = 'SELECT *</span>
<span class="bold">            FROM (SELECT A.*, ROWNUM AS RNUM</span>
<span class="bold">                  FROM ('.$q1.') A</span>
<span class="bold">                  WHERE ROWNUM &lt;= :LAST)</span>
<span class="bold">            WHERE :FIRST &lt;= RNUM';</span>

<span class="bold">  // Set up bind variables.</span>
<span class="bold">  array_push($bindvars, array('FIRST', $current, -1));</span>
<span class="bold">  array_push($bindvars,</span>
<span class="bold">             array('LAST', $current+$rowsperpage-1, -1));</span>

<span class="bold">  $r = db_do_query($conn, $query, $bindvars);</span>
<span class="bold">  return($r);</span>
<span class="bold">}</span>
</pre>
<p>The structure of the query in the <code>db_get_page_data()</code> function enables navigation through a set (or page) of database rows.</p>
<p>The query supplied in <code><a id="sthref319"></a><a id="sthref320"></a>$q1</code> is nested as a subquery inside the following subquery:</p>
<pre>
SELECT A.*, ROWNUM AS RNUM FROM $q1 WHERE ROWNUM &lt;= :LAST
</pre>
<p>Remember that the query supplied in <code>$q1</code> retrieves an ordered set of rows, which is filtered by its enclosing query to return all the rows from the first row to the next page size (<code><a id="sthref321"></a><a id="sthref322"></a>$rowsperpage</code>) of rows. This is possible because the Oracle <code>ROWNUM</code> function (or pseudocolumn) returns an integer number starting at 1 for each row returned by the query in <code>$q1</code>.</p>
<p>The set of rows, returned by the subquery enclosing query <code>$q1</code>, is filtered a second time by the condition in the following outermost query:</p>
<pre>
WHERE :FIRST &lt;= RNUM
</pre>
<p>This condition ensures that rows prior to the value in <code><a id="sthref323"></a><a id="sthref324"></a>:FIRST</code> (the value in <code>$current</code>) are excluded from the final set of rows. The query enables navigation through a set rows where the first row is determined by the <code>$current</code> value and the page size is determined by the <code>$rowsperpage</code> value.</p>
<p>The <code>$current</code> value is associated with the bind variable called <code>:FIRST.</code> The expression <code>$current+$rowsperpage-1</code> sets the value associated with the <code><a id="sthref325"></a><a id="sthref326"></a>:LAST</code> bind variable.</p>
</li>
<li>
<p>To <a id="sthref327"></a><a id="sthref328"></a>test the changes made to your application, save the changed files, and enter the following URL in your Web browser:</p>
<p>On Windows:</p>
<pre>
http://localhost/chap4/anyco.php
</pre>
<p>On Linux:</p>
<pre>
http://localhost/~&lt;username&gt;/chap4/anyco.php
</pre>
<p>When you request the <code>anyco.php</code> page, the first <code>DEPARTMENT</code> table record, the Administration department, is displayed:</p>
<img width="542" height="262" src="img/chap4_db_nagivation_001.gif" alt="Description of chap4_db_nagivation_001.gif follows" title="Description of chap4_db_nagivation_001.gif follows" /><br />
<a id="sthref329" href="img_text/chap4_db_nagivation_001.htm">Description of the illustration chap4_db_nagivation_001.gif</a><br />
<br /></li>
<li>
<p>To navigate to the next department record (Marketing), click <span class="bold">Next</span>:</p>
<img width="542" height="262" src="img/chap4_db_nagivation_002.gif" alt="Description of chap4_db_nagivation_002.gif follows" title="Description of chap4_db_nagivation_002.gif follows" /><br />
<a id="sthref330" href="img_text/chap4_db_nagivation_002.htm">Description of the illustration chap4_db_nagivation_002.gif</a><br />
<br /></li>
<li>
<p>To navigate back to the first department record (Administration), click <span class="bold">Previous</span>:</p>
<img width="542" height="262" src="img/chap4_db_nagivation_003.gif" alt="Description of chap4_db_nagivation_003.gif follows" title="Description of chap4_db_nagivation_003.gif follows" /><br />
<a id="sthref331" href="img_text/chap4_db_nagivation_003.htm">Description of the illustration chap4_db_nagivation_003.gif</a><br />
<br /></li>
</ol>
<p>You may continue to test and experiment with the application by clicking <span class="bold">Next</span> and <span class="bold">Previous</span> to navigate to other records in the <a id="sthref332"></a><a id="sthref333"></a><code>DEPARTMENTS</code> table, as desired.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
If you navigate past the last record in the <code>DEPARTMENTS</code> table, an error will occur. Error handling is added in <a href="ch_five.htm#CHDGCJCB">Adding Error Recovery</a> in Chapter 5.</div>
<div class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref334"></a>
<h3 class="sect2">ROWNUM vs ROW_NUMBER()</h3>
<p>If you were writing a PHP function with a hard coded query, the ROW_NUMBER() function may be a simpler alternative for limiting the number of rows returned. For example, a query that returns the last name of all employees:</p>
<pre>
SELECT last_name FROM employees ORDER BY last_name;
</pre>
<p>could be written to select rows 51 to 100 inclusive as:</p>
<pre>
SELECT last_name FROM
  SELECT last_name, ROW_NUMBER() OVER (ORDER BY last_name R FROM employees)
  where R BETWEEN 51 AND 100;
</pre></div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="CHDEACIE"></a>
<div class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Extending the Basic Departments Page</h2>
<p>The Departments page is <a id="sthref335"></a><a id="sthref336"></a>extended to include the following additional information:</p>
<ul>
<li>
<p>The name of the manager of the department</p>
</li>
<li>
<p>The number of employees assigned to the department</p>
</li>
<li>
<p>The country name identifying the location of the department</p>
</li>
</ul>
<p>The additional information is obtained by modifying the query to perform a join operation between the <code><a id="sthref337"></a><a id="sthref338"></a>DEPARTMENTS</code>, <code><a id="sthref339"></a><a id="sthref340"></a>EMPLOYEES</code>, <code><a id="sthref341"></a><a id="sthref342"></a>LOCATIONS</code>, and <code><a id="sthref343"></a><a id="sthref344"></a>COUNTRIES</code> tables.</p>
<p>To extend the Departments page, perform the following tasks:</p>
<ol>
<li>
<p>Edit the <code><a id="sthref345"></a><a id="sthref346"></a>anyco_ui.inc</code> file. Modify the <a id="sthref347"></a><a id="sthref348"></a><code>ui_print_department()</code> function by replacing the Manager ID and Location ID references with the Manager Name and Location, respectively, and insert a Number of Employees field after Department Name. Make the necessary changes in the table header and data fields. The function becomes:</p>
<pre>
function ui_print_department($dept, $posturl)
{
  if (!$dept) {
    echo '&lt;p&gt;No Department found&lt;/p&gt;';
  }
  else {
    echo &lt;&lt;&lt;END
  &lt;table&gt;
  &lt;tr&gt;
    &lt;th&gt;Department&lt;br&gt;ID&lt;/th&gt;
    &lt;th&gt;Department&lt;br&gt;Name&lt;/th&gt;
<span class="bold">    &lt;th&gt;Number of&lt;br&gt;Employees&lt;/th&gt;</span>
<span class="bold">    &lt;th&gt;Manager&lt;br&gt;Name&lt;/th&gt;</span>
<span class="bold">    &lt;th&gt;Location&lt;/th&gt;</span>
  &lt;/tr&gt;
  &lt;tr&gt;
END;
  echo '&lt;td&gt;'.htmlentities($dept['DEPARTMENT_ID']).'&lt;/td&gt;';
  echo '&lt;td&gt;'.htmlentities($dept['DEPARTMENT_NAME']).'&lt;/td&gt;';
<span class="bold">  echo '&lt;td&gt;'.htmlentities($dept['NUMBER_OF_EMPLOYEES']).'&lt;/td&gt;';</span>
<span class="bold">  echo '&lt;td&gt;'.htmlentities($dept['MANAGER_NAME']).'&lt;/td&gt;';</span>
<span class="bold">  echo '&lt;td&gt;'.htmlentities($dept['COUNTRY_NAME']).'&lt;/td&gt;';</span>
  echo &lt;&lt;&lt;END
  &lt;/tr&gt;
  &lt;/table&gt;
  &lt;form method="post" action="$posturl"&gt;
  &lt;input type="submit" value="&lt; Previous" name="prevdept"&gt;
  &lt;input type="submit" value="Next &gt;"     name="nextdept"&gt;
  &lt;/form&gt;
END;
  }
}
</pre></li>
<li>
<p>Edit the <a id="sthref349"></a><code>anyco.php</code> file. Replace the query string in <code><a id="sthref350"></a><a id="sthref351"></a>construct_departments()</code> with:</p>
<pre>
<span class="bold">$query = </span>
<span class="bold">  "SELECT d.department_id, d.department_name, </span>
<span class="bold">       substr(e.first_name,1,1)||'. '|| e.last_name as manager_name,</span>
<span class="bold">       c.country_name, count(e2.employee_id) as number_of_employees</span>
<span class="bold">   FROM  departments d, employees e, locations l, </span>
<span class="bold">         countries c, employees e2</span>
<span class="bold">   WHERE d.manager_id = e.employee_id</span>
<span class="bold">   AND d.location_id = l.location_id</span>
<span class="bold">   AND d.department_id = e2.department_id</span>
<span class="bold">   AND l.country_id = c.country_id</span>
<span class="bold">   GROUP BY d.department_id, d.department_name, </span>
<span class="bold">         substr(e.first_name,1,1)||'. '||e.last_name,  </span>
<span class="bold">         c.country_name</span>
<span class="bold">   ORDER BY d.department_id ASC";</span>
</pre>
<p>The query string is enclosed in double quotation marks to simplify writing this statement, which contains SQL literal strings in single quotation marks.</p>
</li>
<li>
<p>Save the changes to your files, and <a id="sthref352"></a><a id="sthref353"></a>test the changes by entering the following URL in a Web browser:</p>
<p>On Windows:</p>
<pre>
http://localhost/chap4/anyco.php
</pre>
<p>On Linux:</p>
<pre>
http://localhost/~&lt;username&gt;/chap4/anyco.php
</pre>
<p>The Web page result should resemble the following output:</p>
<img width="603" height="242" src="img/chap4_enhance_dept_001.gif" alt="Description of chap4_enhance_dept_001.gif follows" title="Description of chap4_enhance_dept_001.gif follows" /><br />
<a id="sthref354" href="img_text/chap4_enhance_dept_001.htm">Description of the illustration chap4_enhance_dept_001.gif</a><br />
<br /></li>
</ol>
</div>
<!-- class="sect1" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment943">
<tr>
<td class="cellalignment950">
<table class="cellalignment948">
<tr>
<td class="cellalignment947"><a href="ch_three.htm"><img width="24" height="24" src="../../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment947"><a href="ch_five.htm"><img width="24" height="24" src="../../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;2009,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment952">
<table class="cellalignment946">
<tr>
<td class="cellalignment947"><a href="../../index.htm"><img width="24" height="24" src="../../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment947"><a href="../../nav/portal_booklist.htm"><img width="24" height="24" src="../../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment947"><a href="toc.htm"><img width="24" height="24" src="../../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment947"><a href="index.htm"><img width="24" height="24" src="../../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment947"><a href="../../nav/mindx.htm"><img width="24" height="24" src="../../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment947"><a href="../../dcommon/html/feedback.htm"><img width="24" height="24" src="../../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>
</body>
</html>
