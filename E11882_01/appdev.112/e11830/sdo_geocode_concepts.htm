<!DOCTYPE html>
<html lang="en" >
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1">
<meta charset="utf-8">
<title>Geocoding Address Data</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Version 5.1.2 Build 743" />
<meta name="description" content="Provides usage and reference information for indexing and storing spatial data and for developing spatial applications using Oracle Spatial and Graph and Oracle Locator." />
<meta name="dcterms.created" content="2013-11-26T3:11:45Z" />
<meta name="robots" content="all" />
<meta name="dcterms.title" content="Spatial Developer's Guide" />
<meta name="dcterms.identifier" content="E11830-15" />
<meta name="dcterms.isVersionOf" content="SPATL" />
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;1999, 2013,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved." />
<link rel="Start" href="../../index.htm" title="Home" type="text/html" />
<link rel="Copyright" href="../../dcommon/html/cpyr.htm" title="Copyright" type="text/html" />

<script type="application/javascript"  src="../../dcommon/js/headfoot.js"></script>
<script type="application/javascript"  src="../../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html" />
<link rel="Index" href="index.htm" title="Index" type="text/html" />
<link rel="Glossary" href="glossary.htm" title="Glossary" type="text/html" />
<link rel="Prev" href="sdo_webserv_intro.htm" title="Previous" type="text/html" />
<link rel="Next" href="sdo_yp.htm" title="Next" type="text/html" />
<link rel="alternate" href="../e11830.pdf" title="PDF version" type="application/pdf" />
<link rel="schema.dcterms" href="http://purl.org/dc/terms/" />
<link rel="stylesheet" href="../../dcommon/css/fusiondoc.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/header.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/footer.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/fonts.css">
<link rel="stylesheet" href="../../dcommon/css/foundation.css">
<link rel="stylesheet" href="../../dcommon/css/codemirror.css">
<link rel="stylesheet" type="text/css" title="Default" href="../../nav/css/html5.css">
<link rel="stylesheet" href="../../dcommon/css/respond-480-tablet.css">
<link rel="stylesheet" href="../../dcommon/css/respond-768-laptop.css">
<link rel="stylesheet" href="../../dcommon/css/respond-1140-deskop.css">
<script type="application/javascript" src="../../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">20/51</span> <!-- End Header -->
<div id="SPATL045" class="chapter"><a id="CIHECECC"></a>
<h1 class="chapter"><span class="secnum">11</span> Geocoding Address Data</h1>
<p><a id="sthref713"></a>Geocoding is the process of associating spatial locations (longitude and latitude coordinates) with postal addresses. This chapter includes the following major sections:</p>
<ul>
<li>
<p><a href="#CIHEEIHA">Section 11.1, "Concepts for Geocoding"</a></p>
</li>
<li>
<p><a href="#CIHDHEHA">Section 11.2, "Data Types for Geocoding"</a></p>
</li>
<li>
<p><a href="#CIHJABFA">Section 11.3, "Using the Geocoding Capabilities"</a></p>
</li>
<li>
<p><a href="#CIHFDEBG">Section 11.4, "Geocoding from a Place Name"</a></p>
</li>
<li>
<p><a href="#CIHFIEDB">Section 11.5, "Data Structures for Geocoding"</a></p>
</li>
<li>
<p><a href="#CIHFABDJ">Section 11.7, "Using the Geocoding Service (XML API)"</a></p>
</li>
</ul>
<a id="CIHEEIHA"></a>
<div id="SPATL808" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1"><span class="secnum">11.1</span> <a id="sthref714"></a>Concepts for Geocoding</h2>
<p>This section describes concepts that you must understand before you use the Spatial geocoding capabilities.</p>
<a id="CIHGGJCG"></a>
<div id="SPATL809" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">11.1.1</span> <a id="sthref715"></a>Address Representation</h3>
<p>Addresses to be geocoded can be represented either as formatted addresses or unformatted addresses.</p>
<p><a id="sthref716"></a>A <span class="bold">formatted address</span> is described by a set of attributes for various parts of the address, which can include some or all of those shown in <a href="#CIHBBGIF">Table 11-1</a>.</p>
<div id="SPATL810" class="tblformal">
<p class="titleintable"><a id="sthref717"></a><a id="CIHBBGIF"></a>Table 11-1 Attributes for Formal Address Representation</p>
<table class="cellalignment740" title="Attributes for Formal Address Representation" summary="Attributes for Formal Address Representation" dir="ltr">
<thead>
<tr class="cellalignment734">
<th class="cellalignment741" id="r1c1-t2">Address Attribute</th>
<th class="cellalignment741" id="r1c2-t2">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment734">
<td class="cellalignment742" id="r2c1-t2" headers="r1c1-t2">
<p>Name</p>
</td>
<td class="cellalignment742" headers="r2c1-t2 r1c2-t2">
<p>Place name (optional).</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r3c1-t2" headers="r1c1-t2">
<p>Intersecting street</p>
</td>
<td class="cellalignment742" headers="r3c1-t2 r1c2-t2">
<p>Intersecting street name (optional).</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r4c1-t2" headers="r1c1-t2">
<p>Street</p>
</td>
<td class="cellalignment742" headers="r4c1-t2 r1c2-t2">
<p>Street address, including the house or building number, street name, street type (Street, Road, Blvd, and so on), and possibly other information.</p>
<p>In the current release, the first four characters of the street name must match a street name in the geocoding data for there to be a potential street name match.</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r5c1-t2" headers="r1c1-t2">
<p>Settlement</p>
</td>
<td class="cellalignment742" headers="r5c1-t2 r1c2-t2">
<p>The lowest-level administrative area to which the address belongs. In most cases it is the city. In some European countries, the settlement can be an area within a large city, in which case the large city is the municipality.</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r6c1-t2" headers="r1c1-t2">
<p>Municipality</p>
</td>
<td class="cellalignment742" headers="r6c1-t2 r1c2-t2">
<p>The administrative area above settlement. Municipality is not used for United States addresses. In European countries where cities contain settlements, the municipality is the city.</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r7c1-t2" headers="r1c1-t2">
<p>Region</p>
</td>
<td class="cellalignment742" headers="r7c1-t2 r1c2-t2">
<p>The administrative area above municipality (if applicable), or above settlement if municipality does not apply. In the United States, the region is the state; in some other countries, the region is the province.</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r8c1-t2" headers="r1c1-t2">
<p>Postal code</p>
</td>
<td class="cellalignment742" headers="r8c1-t2 r1c2-t2">
<p>Postal code (optional if administrative area information is provided). In the United States, the postal code is the 5-digit ZIP code.</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r9c1-t2" headers="r1c1-t2">
<p>Postal add-on code</p>
</td>
<td class="cellalignment742" headers="r9c1-t2 r1c2-t2">
<p>String appended to the postal code. In the United States, the postal add-on code is typically the last four numbers of a 9-digit ZIP code specified in "5-4" format.</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r10c1-t2" headers="r1c1-t2">
<p>Country</p>
</td>
<td class="cellalignment742" headers="r10c1-t2 r1c2-t2">
<p>The country name or ISO country code.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<p>Formatted addresses are specified using the SDO_GEO_ADDR data type, which is described in <a href="#CIHDEFFB">Section 11.2.1</a>.</p>
<p><a id="sthref718"></a>An <span class="bold">unformatted address</span> is described using lines with information in the postal address format for the relevant country. The address lines must contain information essential for geocoding, and they might also contain information that is not needed for geocoding (something that is common in unprocessed postal addresses). An unformatted address is stored as an array of strings. For example, an address might consist of the following strings: '22 Monument Square' and 'Concord, MA 01742'.</p>
<p>Unformatted addresses are specified using the SDO_KEYWORDARRAY data type, which is described in <a href="#CIHBDFBE">Section 11.2.3</a>.</p>
</div>
<!-- class="sect2" -->
<a id="CIHCBFFH"></a>
<div id="SPATL811" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">11.1.2</span> <a id="sthref719"></a><a id="sthref720"></a>Match Modes</h3>
<p>The match mode for a geocoding operation determines how closely the attributes of an input address must match the data being used for the geocoding. Input addresses can include different ways of representing the same thing (such as <span class="italic">Street</span> and the abbreviation <span class="italic">St</span>), and they can include minor errors (such as the wrong postal code, even though the street address and city are correct and the street address is unique within the city).</p>
<p>You can require an exact match between the input address and the data used for geocoding, or you can relax the requirements for some attributes so that geocoding can be performed despite certain discrepancies or errors in the input addresses. <a href="#CIHHDDAF">Table 11-2</a> lists the match modes and their meanings. Use a value from this table with the <code>MatchMode</code> attribute of the SDO_GEO_ADDR data type (described in <a href="#CIHDEFFB">Section 11.2.1</a>) and for the <code>match_mode</code> parameter of a geocoding function or procedure.</p>
<div id="SPATL812" class="tblformal">
<p class="titleintable"><a id="sthref721"></a><a id="CIHHDDAF"></a>Table 11-2 Match Modes for Geocoding Operations</p>
<table class="cellalignment740" title="Match Modes for Geocoding Operations" summary="Match Modes for Geocoding Operations" dir="ltr">
<thead>
<tr class="cellalignment734">
<th class="cellalignment741" id="r1c1-t3">Match Mode</th>
<th class="cellalignment741" id="r1c2-t3">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment734">
<td class="cellalignment742" id="r2c1-t3" headers="r1c1-t3">
<p>EXACT</p>
</td>
<td class="cellalignment742" headers="r2c1-t3 r1c2-t3">
<p>All attributes of the input address must match the data used for geocoding. However, if the house or building number, base name (street name), street type, street prefix, and street suffix do not all match the geocoding data, a location in the first match found in the following is returned: postal code, city or town (settlement) within the state, and state. For example, if the street name is incorrect but a valid postal code is specified, a location in the postal code is returned.</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r3c1-t3" headers="r1c1-t3">
<p>RELAX_STREET_TYPE</p>
</td>
<td class="cellalignment742" headers="r3c1-t3 r1c2-t3">
<p>The street type can be different from the data used for geocoding. For example, if <span class="italic">Main St</span> is in the data used for geocoding, <span class="italic">Main Street</span> would also match that, as would <span class="italic">Main Blvd</span> if there was no <span class="italic">Main Blvd</span> and no other street type named <span class="italic">Main</span> in the relevant area.</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r4c1-t3" headers="r1c1-t3">
<p>RELAX_POI_NAME</p>
</td>
<td class="cellalignment742" headers="r4c1-t3 r1c2-t3">
<p>The name of the point of interest does not have to match the data used for geocoding. For example, if <span class="italic">Jones State Park</span> is in the data used for geocoding, <span class="italic">Jones State Pk</span> and <span class="italic">Jones Park</span> would also match as long as there were no ambiguities or other matches in the data.</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r5c1-t3" headers="r1c1-t3">
<p>RELAX_HOUSE_NUMBER</p>
</td>
<td class="cellalignment742" headers="r5c1-t3 r1c2-t3">
<p>The house or building number and street type can be different from the data used for geocoding. For example, if <span class="italic">123 Main St</span> is in the data used for geocoding, <span class="italic">123 Main Lane</span> and <span class="italic">124 Main St</span> would also match as long as there were no ambiguities or other matches in the data.</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r6c1-t3" headers="r1c1-t3">
<p>RELAX_BASE_NAME</p>
</td>
<td class="cellalignment742" headers="r6c1-t3 r1c2-t3">
<p>The base name of the street, the house or building number, and the street type can be different from the data used for geocoding. For example, if <span class="italic">Pleasant Valley</span> is the base name of a street in the data used for geocoding, <span class="italic">Pleasant Vale</span> would also match as long as there were no ambiguities or other matches in the data.</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r7c1-t3" headers="r1c1-t3">
<p>RELAX_POSTAL_CODE</p>
</td>
<td class="cellalignment742" headers="r7c1-t3 r1c2-t3">
<p>The postal code (if provided), base name, house or building number, and street type can be different from the data used for geocoding.</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r8c1-t3" headers="r1c1-t3">
<p>RELAX_BUILTUP_AREA</p>
</td>
<td class="cellalignment742" headers="r8c1-t3 r1c2-t3">
<p>The address can be outside the city specified as long as it is within the same county. Also includes the characteristics of RELAX_POSTAL_CODE.</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r9c1-t3" headers="r1c1-t3">
<p>RELAX_ALL</p>
</td>
<td class="cellalignment742" headers="r9c1-t3 r1c2-t3">
<p>Equivalent to RELAX_BUILTUP_AREA.</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r10c1-t3" headers="r1c1-t3">
<p>DEFAULT</p>
</td>
<td class="cellalignment742" headers="r10c1-t3 r1c2-t3">
<p>Equivalent to RELAX_POSTAL_CODE.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="sect2" -->
<a id="CIHJCIBJ"></a>
<div id="SPATL813" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">11.1.3</span> <a id="sthref722"></a><a id="sthref723"></a>Match Codes</h3>
<p>The match code is a number indicating which input address attributes matched the data used for geocoding. The match code is stored in the <code>MatchCode</code> attribute of the output SDO_GEO_ADDR object (described in <a href="#CIHDEFFB">Section 11.2.1</a>).</p>
<p><a href="#CIHEFBGH">Table 11-3</a> lists the possible match code values.</p>
<div id="SPATL814" class="tblformal">
<p class="titleintable"><a id="sthref724"></a><a id="CIHEFBGH"></a>Table 11-3 Match Codes for Geocoding Operations</p>
<table class="cellalignment740" title="Match Codes for Geocoding Operations" summary="Match Codes for Geocoding Operations" dir="ltr">
<thead>
<tr class="cellalignment734">
<th class="cellalignment741" id="r1c1-t4">Match Code</th>
<th class="cellalignment741" id="r1c2-t4">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment734">
<td class="cellalignment742" id="r2c1-t4" headers="r1c1-t4">
<p>1</p>
</td>
<td class="cellalignment742" headers="r2c1-t4 r1c2-t4">
<p>Exact match: the city name, postal code, street base name, street type (and suffix or prefix or both, if applicable), and house or building number match the data used for geocoding.</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r3c1-t4" headers="r1c1-t4">
<p>2</p>
</td>
<td class="cellalignment742" headers="r3c1-t4 r1c2-t4">
<p>The city name, postal code, street base name, and house or building number match the data used for geocoding, but the street type, suffix, or prefix does not match.</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r4c1-t4" headers="r1c1-t4">
<p>3</p>
</td>
<td class="cellalignment742" headers="r4c1-t4 r1c2-t4">
<p>The city name, postal code, and street base name match the data used for geocoding, but the house or building number does not match.</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r5c1-t4" headers="r1c1-t4">
<p>4</p>
</td>
<td class="cellalignment742" headers="r5c1-t4 r1c2-t4">
<p>The city name and postal code match the data used for geocoding, but the street address does not match.</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r6c1-t4" headers="r1c1-t4">
<p>10</p>
</td>
<td class="cellalignment742" headers="r6c1-t4 r1c2-t4">
<p>The city name matches the data used for geocoding, but the postal code does not match.</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r7c1-t4" headers="r1c1-t4">
<p>11</p>
</td>
<td class="cellalignment742" headers="r7c1-t4 r1c2-t4">
<p>The postal code matches the data used for geocoding, but the city name does not match.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="sect2" -->
<a id="CIHGAAGG"></a>
<div id="SPATL815" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">11.1.4</span> <a id="sthref725"></a><a id="sthref726"></a>Error Messages for Output Geocoded Addresses</h3>
<div class="infobox-note">
<p class="notep1">Note:</p>
You are encouraged to use the <code>MatchVector</code> attribute (see <a href="#CIHECBIG">Section 11.1.5</a>) instead of the <code>ErrorMessage</code> attribute, which is described in this section.</div>
<p>For an output geocoded address, the <code>ErrorMessage</code> attribute of the SDO_GEO_ADDR object (described in <a href="#CIHDEFFB">Section 11.2.1</a>) contains a string that indicates which address attributes have been matched against the data used for geocoding. Before the geocoding operation begins, the string is set to the value <code>???????????281C??</code>; and the value is modified to reflect which attributes have been matched.</p>
<p><a href="#CIHHIGDD">Table 11-4</a> lists the character positions in the string and the address attribute corresponding to each position. It also lists the character value that the position is set to if the attribute is matched.</p>
<div id="SPATL816" class="tblformal">
<p class="titleintable"><a id="sthref727"></a><a id="CIHHIGDD"></a>Table 11-4 Geocoded Address Error Message Interpretation</p>
<table class="cellalignment740" title="Geocoded Address Error Message Interpretation" summary="Geocoded Address Error Message Interpretation" dir="ltr">
<thead>
<tr class="cellalignment734">
<th class="cellalignment741" id="r1c1-t6">Position</th>
<th class="cellalignment741" id="r1c2-t6">Attribute</th>
<th class="cellalignment741" id="r1c3-t6">Value If Matched</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment734">
<td class="cellalignment742" id="r2c1-t6" headers="r1c1-t6">
<p>1-2</p>
</td>
<td class="cellalignment742" headers="r2c1-t6 r1c2-t6">
<p>(Reserved for future use)</p>
</td>
<td class="cellalignment742" headers="r2c1-t6 r1c3-t6">
<p>??</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r3c1-t6" headers="r1c1-t6">
<p>3</p>
</td>
<td class="cellalignment742" headers="r3c1-t6 r1c2-t6">
<p>Address point</p>
</td>
<td class="cellalignment742" headers="r3c1-t6 r1c3-t6">
<p>X</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r4c1-t6" headers="r1c1-t6">
<p>4</p>
</td>
<td class="cellalignment742" headers="r4c1-t6 r1c2-t6">
<p>POI name</p>
</td>
<td class="cellalignment742" headers="r4c1-t6 r1c3-t6">
<p>O</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r5c1-t6" headers="r1c1-t6">
<p>5</p>
</td>
<td class="cellalignment742" headers="r5c1-t6 r1c2-t6">
<p>House or building number</p>
</td>
<td class="cellalignment742" headers="r5c1-t6 r1c3-t6">
<p>#</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r6c1-t6" headers="r1c1-t6">
<p>6</p>
</td>
<td class="cellalignment742" headers="r6c1-t6 r1c2-t6">
<p>Street prefix</p>
</td>
<td class="cellalignment742" headers="r6c1-t6 r1c3-t6">
<p>E</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r7c1-t6" headers="r1c1-t6">
<p>7</p>
</td>
<td class="cellalignment742" headers="r7c1-t6 r1c2-t6">
<p>Street base name</p>
</td>
<td class="cellalignment742" headers="r7c1-t6 r1c3-t6">
<p>N</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r8c1-t6" headers="r1c1-t6">
<p>8</p>
</td>
<td class="cellalignment742" headers="r8c1-t6 r1c2-t6">
<p>Street suffix</p>
</td>
<td class="cellalignment742" headers="r8c1-t6 r1c3-t6">
<p>U</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r9c1-t6" headers="r1c1-t6">
<p>9</p>
</td>
<td class="cellalignment742" headers="r9c1-t6 r1c2-t6">
<p>Street type</p>
</td>
<td class="cellalignment742" headers="r9c1-t6 r1c3-t6">
<p>T</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r10c1-t6" headers="r1c1-t6">
<p>10</p>
</td>
<td class="cellalignment742" headers="r10c1-t6 r1c2-t6">
<p>Secondary unit</p>
</td>
<td class="cellalignment742" headers="r10c1-t6 r1c3-t6">
<p>S</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r11c1-t6" headers="r1c1-t6">
<p>11</p>
</td>
<td class="cellalignment742" headers="r11c1-t6 r1c2-t6">
<p>Built-up area or city</p>
</td>
<td class="cellalignment742" headers="r11c1-t6 r1c3-t6">
<p>B</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r12c1-t6" headers="r1c1-t6">
<p>12-13</p>
</td>
<td class="cellalignment742" headers="r12c1-t6 r1c2-t6">
<p>(Reserved)</p>
</td>
<td class="cellalignment742" headers="r12c1-t6 r1c3-t6">
<p>(Ignore any values in these positions.)</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r13c1-t6" headers="r1c1-t6">
<p>14</p>
</td>
<td class="cellalignment742" headers="r13c1-t6 r1c2-t6">
<p>Region</p>
</td>
<td class="cellalignment742" headers="r13c1-t6 r1c3-t6">
<p>1</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r14c1-t6" headers="r1c1-t6">
<p>15</p>
</td>
<td class="cellalignment742" headers="r14c1-t6 r1c2-t6">
<p>Country</p>
</td>
<td class="cellalignment742" headers="r14c1-t6 r1c3-t6">
<p>C</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r15c1-t6" headers="r1c1-t6">
<p>16</p>
</td>
<td class="cellalignment742" headers="r15c1-t6 r1c2-t6">
<p>Postal code</p>
</td>
<td class="cellalignment742" headers="r15c1-t6 r1c3-t6">
<p>P</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r16c1-t6" headers="r1c1-t6">
<p>17</p>
</td>
<td class="cellalignment742" headers="r16c1-t6 r1c2-t6">
<p>Postal add-on code</p>
</td>
<td class="cellalignment742" headers="r16c1-t6 r1c3-t6">
<p>A</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="sect2" -->
<a id="CIHECBIG"></a>
<div id="SPATL817" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">11.1.5</span> <a id="sthref728"></a>Match Vector for Output Geocoded Addresses</h3>
<p>For an output geocoded address, the <code>MatchVector</code> attribute of the SDO_GEO_ADDR object (described in <a href="#CIHDEFFB">Section 11.2.1</a>) contains a string that indicates how each address attribute has been matched against the data used for geocoding. It gives more accurate and detailed information about the match status of each address attribute than the <code>ErrorMessage</code> attribute (described in <a href="#CIHGAAGG">Section 11.1.4</a>). Before the geocoding operation begins, the string is set to the value <code>?????????????????</code>. Each character of this string indicates the match status of an address attribute.</p>
<p><a href="#CIHDFIFB">Table 11-5</a> lists the character positions in the string and the address attribute corresponding to each position. Following the table is an explanation of what the value in each character position represents.</p>
<div id="SPATL818" class="tblformal">
<p class="titleintable"><a id="sthref729"></a><a id="CIHDFIFB"></a>Table 11-5 Geocoded Address Match Vector Interpretation</p>
<table class="cellalignment740" title="Geocoded Address Match Vector Interpretation" summary="Geocoded Address Error Message Interpretation" dir="ltr">
<thead>
<tr class="cellalignment734">
<th class="cellalignment741" id="r1c1-t7">Position</th>
<th class="cellalignment741" id="r1c2-t7">Attribute</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment734">
<td class="cellalignment742" id="r2c1-t7" headers="r1c1-t7">
<p>1-2</p>
</td>
<td class="cellalignment742" headers="r2c1-t7 r1c2-t7">
<p>(Reserved for future use)</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r3c1-t7" headers="r1c1-t7">
<p>3</p>
</td>
<td class="cellalignment742" headers="r3c1-t7 r1c2-t7">
<p>Address point</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r4c1-t7" headers="r1c1-t7">
<p>4</p>
</td>
<td class="cellalignment742" headers="r4c1-t7 r1c2-t7">
<p>POI name</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r5c1-t7" headers="r1c1-t7">
<p>5</p>
</td>
<td class="cellalignment742" headers="r5c1-t7 r1c2-t7">
<p>House or building number</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r6c1-t7" headers="r1c1-t7">
<p>6</p>
</td>
<td class="cellalignment742" headers="r6c1-t7 r1c2-t7">
<p>Street prefix</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r7c1-t7" headers="r1c1-t7">
<p>7</p>
</td>
<td class="cellalignment742" headers="r7c1-t7 r1c2-t7">
<p>Street base name</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r8c1-t7" headers="r1c1-t7">
<p>8</p>
</td>
<td class="cellalignment742" headers="r8c1-t7 r1c2-t7">
<p>Street suffix</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r9c1-t7" headers="r1c1-t7">
<p>9</p>
</td>
<td class="cellalignment742" headers="r9c1-t7 r1c2-t7">
<p>Street type</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r10c1-t7" headers="r1c1-t7">
<p>10</p>
</td>
<td class="cellalignment742" headers="r10c1-t7 r1c2-t7">
<p>Secondary unit</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r11c1-t7" headers="r1c1-t7">
<p>11</p>
</td>
<td class="cellalignment742" headers="r11c1-t7 r1c2-t7">
<p>Built-up area or city</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r12c1-t7" headers="r1c1-t7">
<p>14</p>
</td>
<td class="cellalignment742" headers="r12c1-t7 r1c2-t7">
<p>Region</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r13c1-t7" headers="r1c1-t7">
<p>15</p>
</td>
<td class="cellalignment742" headers="r13c1-t7 r1c2-t7">
<p>Country</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r14c1-t7" headers="r1c1-t7">
<p>16</p>
</td>
<td class="cellalignment742" headers="r14c1-t7 r1c2-t7">
<p>Postal code</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r15c1-t7" headers="r1c1-t7">
<p>17</p>
</td>
<td class="cellalignment742" headers="r15c1-t7 r1c2-t7">
<p>Postal add-on code</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<p>Each character position in <a href="#CIHDFIFB">Table 11-5</a> can have one of the following possible numeric values:</p>
<ul>
<li>
<p>0: The input attribute is not null and is matched with a non-null value.</p>
</li>
<li>
<p>1: The input attribute is null and is matched with a null value.</p>
</li>
<li>
<p>2: The input attribute is not null and is replaced by a different non-null value.</p>
</li>
<li>
<p>3: The input attribute is not null and is replaced by a null value.</p>
</li>
<li>
<p>4: The input attribute is null and is replaced by a non-null value.</p>
</li>
</ul>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="CIHDHEHA"></a>
<div id="SPATL819" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1"><span class="secnum">11.2</span> <a id="sthref730"></a><a id="sthref731"></a>Data Types for Geocoding</h2>
<p>This section describes the data types specific to geocoding functions and procedures.</p>
<a id="CIHDEFFB"></a>
<div id="SPATL820" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">11.2.1</span> <a id="sthref732"></a>SDO_GEO_ADDR Type</h3>
<p>The SDO_GEO_ADDR object type is used to describe an address. When a geocoded address is output by an SDO_GCDR function or procedure, it is stored as an object of type SDO_GEO_ADDR.</p>
<p><a href="#CIHFFDAD">Table 11-6</a> lists the attributes of the SDO_GEO_ADDR type. Not all attributes will be relevant in any given case. The attributes used for a returned geocoded address depend on the geographical context of the input address, especially the country.</p>
<div id="SPATL821" class="tblformal">
<p class="titleintable"><a id="sthref733"></a><a id="CIHFFDAD"></a>Table 11-6 SDO_GEO_ADDR Type Attributes</p>
<table class="cellalignment740" title="SDO_GEO_ADDR Type Attributes" summary="SDO_GEO_ADDR Type Attributes" dir="ltr">
<thead>
<tr class="cellalignment734">
<th class="cellalignment741" id="r1c1-t8">Attribute</th>
<th class="cellalignment741" id="r1c2-t8">Data Type</th>
<th class="cellalignment741" id="r1c3-t8">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment734">
<td class="cellalignment742" id="r2c1-t8" headers="r1c1-t8">
<p>Id</p>
</td>
<td class="cellalignment742" headers="r2c1-t8 r1c2-t8">
<p>NUMBER</p>
</td>
<td class="cellalignment742" headers="r2c1-t8 r1c3-t8">
<p>(Not used.)</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r3c1-t8" headers="r1c1-t8">
<p>AddressLines</p>
</td>
<td class="cellalignment742" headers="r3c1-t8 r1c2-t8">
<p>SDO_KEYWORDARRAY</p>
</td>
<td class="cellalignment742" headers="r3c1-t8 r1c3-t8">
<p>Address lines. (The SDO_KEYWORDARRAY type is described in <a href="#CIHBDFBE">Section 11.2.3</a>.)</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r4c1-t8" headers="r1c1-t8">
<p>PlaceName</p>
</td>
<td class="cellalignment742" headers="r4c1-t8 r1c2-t8">
<p>VARCHAR2(200)</p>
</td>
<td class="cellalignment742" headers="r4c1-t8 r1c3-t8">
<p>Point of interest (POI) name. Example: <span class="italic">CALIFORNIA PACIFIC MEDICAL CTR</span></p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r5c1-t8" headers="r1c1-t8">
<p>StreetName</p>
</td>
<td class="cellalignment742" headers="r5c1-t8 r1c2-t8">
<p>VARCHAR2(200)</p>
</td>
<td class="cellalignment742" headers="r5c1-t8 r1c3-t8">
<p>Street name, including street type. Example: <span class="italic">MAIN ST</span></p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r6c1-t8" headers="r1c1-t8">
<p>IntersectStreet</p>
</td>
<td class="cellalignment742" headers="r6c1-t8 r1c2-t8">
<p>VARCHAR2(200)</p>
</td>
<td class="cellalignment742" headers="r6c1-t8 r1c3-t8">
<p>Intersecting street.</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r7c1-t8" headers="r1c1-t8">
<p>SecUnit</p>
</td>
<td class="cellalignment742" headers="r7c1-t8 r1c2-t8">
<p>VARCHAR2(200)</p>
</td>
<td class="cellalignment742" headers="r7c1-t8 r1c3-t8">
<p>Secondary unit, such as an apartment number or building number.</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r8c1-t8" headers="r1c1-t8">
<p>Settlement</p>
</td>
<td class="cellalignment742" headers="r8c1-t8 r1c2-t8">
<p>VARCHAR2(200)</p>
</td>
<td class="cellalignment742" headers="r8c1-t8 r1c3-t8">
<p>Lowest-level administrative area to which the address belongs. (See <a href="#CIHBBGIF">Table 11-1</a>.)</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r9c1-t8" headers="r1c1-t8">
<p>Municipality</p>
</td>
<td class="cellalignment742" headers="r9c1-t8 r1c2-t8">
<p>VARCHAR2(200)</p>
</td>
<td class="cellalignment742" headers="r9c1-t8 r1c3-t8">
<p>Administrative area above settlement. (See <a href="#CIHBBGIF">Table 11-1</a>.)</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r10c1-t8" headers="r1c1-t8">
<p>Region</p>
</td>
<td class="cellalignment742" headers="r10c1-t8 r1c2-t8">
<p>VARCHAR2(200)</p>
</td>
<td class="cellalignment742" headers="r10c1-t8 r1c3-t8">
<p>Administrative area above municipality (if applicable), or above settlement if municipality does not apply. (See <a href="#CIHBBGIF">Table 11-1</a>.)</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r11c1-t8" headers="r1c1-t8">
<p>Country</p>
</td>
<td class="cellalignment742" headers="r11c1-t8 r1c2-t8">
<p>VARCHAR2(100)</p>
</td>
<td class="cellalignment742" headers="r11c1-t8 r1c3-t8">
<p>Country name or ISO country code.</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r12c1-t8" headers="r1c1-t8">
<p>PostalCode</p>
</td>
<td class="cellalignment742" headers="r12c1-t8 r1c2-t8">
<p>VARCHAR2(20)</p>
</td>
<td class="cellalignment742" headers="r12c1-t8 r1c3-t8">
<p>Postal code (optional if administrative area information is provided). In the United States, the postal code is the 5-digit ZIP code.</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r13c1-t8" headers="r1c1-t8">
<p>PostalAddOnCode</p>
</td>
<td class="cellalignment742" headers="r13c1-t8 r1c2-t8">
<p>VARCHAR2(20)</p>
</td>
<td class="cellalignment742" headers="r13c1-t8 r1c3-t8">
<p>String appended to the postal code. In the United States, the postal add-on code is typically the last four numbers of a 9-digit ZIP code specified in "5-4" format.</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r14c1-t8" headers="r1c1-t8">
<p>FullPostalCode</p>
</td>
<td class="cellalignment742" headers="r14c1-t8 r1c2-t8">
<p>VARCHAR2(20)</p>
</td>
<td class="cellalignment742" headers="r14c1-t8 r1c3-t8">
<p>Full postal code, including the postal code and postal add-on code.</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r15c1-t8" headers="r1c1-t8">
<p>POBox</p>
</td>
<td class="cellalignment742" headers="r15c1-t8 r1c2-t8">
<p>VARCHAR2(100)</p>
</td>
<td class="cellalignment742" headers="r15c1-t8 r1c3-t8">
<p>Post Office box number.</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r16c1-t8" headers="r1c1-t8">
<p>HouseNumber</p>
</td>
<td class="cellalignment742" headers="r16c1-t8 r1c2-t8">
<p>VARCHAR2(100)</p>
</td>
<td class="cellalignment742" headers="r16c1-t8 r1c3-t8">
<p>House or building number. Example: <span class="italic">123</span> in <span class="italic">123 MAIN ST</span></p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r17c1-t8" headers="r1c1-t8">
<p>BaseName</p>
</td>
<td class="cellalignment742" headers="r17c1-t8 r1c2-t8">
<p>VARCHAR2(200)</p>
</td>
<td class="cellalignment742" headers="r17c1-t8 r1c3-t8">
<p>Base name of the street. Example: <span class="italic">MAIN</span> in <span class="italic">123 MAIN ST</span></p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r18c1-t8" headers="r1c1-t8">
<p>StreetType</p>
</td>
<td class="cellalignment742" headers="r18c1-t8 r1c2-t8">
<p>VARCHAR2(20)</p>
</td>
<td class="cellalignment742" headers="r18c1-t8 r1c3-t8">
<p>Type of the street. Example: ST in <span class="italic">123 MAIN ST</span></p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r19c1-t8" headers="r1c1-t8">
<p>StreetTypeBefore</p>
</td>
<td class="cellalignment742" headers="r19c1-t8 r1c2-t8">
<p>VARCHAR2(1)</p>
</td>
<td class="cellalignment742" headers="r19c1-t8 r1c3-t8">
<p>(Not used.)</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r20c1-t8" headers="r1c1-t8">
<p>StreetTypeAttached</p>
</td>
<td class="cellalignment742" headers="r20c1-t8 r1c2-t8">
<p>VARCHAR2(1)</p>
</td>
<td class="cellalignment742" headers="r20c1-t8 r1c3-t8">
<p>(Not used.)</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r21c1-t8" headers="r1c1-t8">
<p>StreetPrefix</p>
</td>
<td class="cellalignment742" headers="r21c1-t8 r1c2-t8">
<p>VARCHAR2(20)</p>
</td>
<td class="cellalignment742" headers="r21c1-t8 r1c3-t8">
<p>Prefix for the street. Example: <span class="italic">S</span> in <span class="italic">123 S MAIN ST</span></p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r22c1-t8" headers="r1c1-t8">
<p>StreetSuffix</p>
</td>
<td class="cellalignment742" headers="r22c1-t8 r1c2-t8">
<p>VARCHAR2(20)</p>
</td>
<td class="cellalignment742" headers="r22c1-t8 r1c3-t8">
<p>Suffix for the street. Example: <span class="italic">NE</span> in <span class="italic">123 MAIN ST NE</span></p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r23c1-t8" headers="r1c1-t8">
<p>Side</p>
</td>
<td class="cellalignment742" headers="r23c1-t8 r1c2-t8">
<p>VARCHAR2(1)</p>
</td>
<td class="cellalignment742" headers="r23c1-t8 r1c3-t8">
<p>Side of the street (<code>L</code> for left or <code>R</code> for right) that the house is on when you are traveling along the road segment following its orientation (that is, from its start node toward its end node). The house numbers may be increasing or decreasing.</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r24c1-t8" headers="r1c1-t8">
<p>Percent</p>
</td>
<td class="cellalignment742" headers="r24c1-t8 r1c2-t8">
<p>NUMBER</p>
</td>
<td class="cellalignment742" headers="r24c1-t8 r1c3-t8">
<p>Number from 0 to 1 (multiply by 100 to get a percentage value) indicating how far along the street you are when traveling following the road segment orientation.</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r25c1-t8" headers="r1c1-t8">
<p>EdgeID</p>
</td>
<td class="cellalignment742" headers="r25c1-t8 r1c2-t8">
<p>NUMBER</p>
</td>
<td class="cellalignment742" headers="r25c1-t8 r1c3-t8">
<p>Edge ID of the road segment.</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r26c1-t8" headers="r1c1-t8">
<p>ErrorMessage</p>
</td>
<td class="cellalignment742" headers="r26c1-t8 r1c2-t8">
<p>VARCHAR2(20)</p>
</td>
<td class="cellalignment742" headers="r26c1-t8 r1c3-t8">
<p>Error message (see <a href="#CIHGAAGG">Section 11.1.4</a>). Note: You are encouraged to use the <code>MatchVector</code> attribute instead of the <code>ErrorMessage</code> attribute.</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r27c1-t8" headers="r1c1-t8">
<p>MatchCode</p>
</td>
<td class="cellalignment742" headers="r27c1-t8 r1c2-t8">
<p>NUMBER</p>
</td>
<td class="cellalignment742" headers="r27c1-t8 r1c3-t8">
<p>Match code (see <a href="#CIHJCIBJ">Section 11.1.3</a>).</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r28c1-t8" headers="r1c1-t8">
<p>MatchMode</p>
</td>
<td class="cellalignment742" headers="r28c1-t8 r1c2-t8">
<p>VARCHAR2(30)</p>
</td>
<td class="cellalignment742" headers="r28c1-t8 r1c3-t8">
<p>Match mode (see <a href="#CIHCBFFH">Section 11.1.2</a>).</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r29c1-t8" headers="r1c1-t8">
<p>Longitude</p>
</td>
<td class="cellalignment742" headers="r29c1-t8 r1c2-t8">
<p>NUMBER</p>
</td>
<td class="cellalignment742" headers="r29c1-t8 r1c3-t8">
<p>Longitude coordinate value.</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r30c1-t8" headers="r1c1-t8">
<p>Latitude</p>
</td>
<td class="cellalignment742" headers="r30c1-t8 r1c2-t8">
<p>NUMBER</p>
</td>
<td class="cellalignment742" headers="r30c1-t8 r1c3-t8">
<p>Latitude coordinate value.</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r31c1-t8" headers="r1c1-t8">
<p>MatchVector</p>
</td>
<td class="cellalignment742" headers="r31c1-t8 r1c2-t8">
<p>VARCHAR2(20)</p>
</td>
<td class="cellalignment742" headers="r31c1-t8 r1c3-t8">
<p>A string that indicates how each address attribute has been matched against the data used for geocoding (see <a href="#CIHECBIG">Section 11.1.5</a>).</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<p>You can return the entire SDO_GEO_ADDR object, or you can specify an attribute using standard "dot" notation. <a href="#CIHFDFAI">Example 11-1</a> contains statements that geocode the address of the San Francisco City Hall; the first statement returns the entire SDO_GEO_ADDR object, and the remaining statements return some specific attributes.</p>
<div id="SPATL822" class="example">
<p class="titleinexample"><a id="CIHFDFAI"></a>Example 11-1 Geocoding, Returning Address Object and Specific Attributes</p>
<pre>
SELECT SDO_GCDR.GEOCODE('SCOTT', 
  SDO_KEYWORDARRAY('1 Carlton B Goodlett Pl', 'San Francisco, CA  94102'), 
    'US', 'RELAX_BASE_NAME') FROM DUAL;
 
SDO_GCDR.GEOCODE('SCOTT',SDO_KEYWORDARRAY('1CARLTONBGOODLETTPL','SANFRANCISCO
--------------------------------------------------------------------------------
SDO_GEO_ADDR(0, SDO_KEYWORDARRAY(), NULL, 'CARLTON B GOODLETT PL', NULL, NULL, '
SAN FRANCISCO', NULL, 'CA', 'US', '94102', NULL, '94102', NULL, '1', 'CARLTON B
GOODLETT', 'PL', 'F', 'F', NULL, NULL, 'L', .01, 23614360, '????#ENUT?B281CP?',
1, 'RELAX_BASE_NAME', -122.41815, 37.7784183, '????0101010??000?')

SELECT SDO_GCDR.GEOCODE('SCOTT',
  SDO_KEYWORDARRAY('1 Carlton B Goodlett Pl', 'San Francisco, CA  94102'),
  'US', 'RELAX_BASE_NAME').StreetType  FROM DUAL;
 
SDO_GCDR.GEOCODE('SCOTT',SDO_KEYWORDARRAY('1CARLTONBGOODLETTPL','SANFRANCISCO
--------------------------------------------------------------------------------
PL                                                                              
 
SELECT SDO_GCDR.GEOCODE('SCOTT',
  SDO_KEYWORDARRAY('1 Carlton B Goodlett Pl', 'San Francisco, CA  94102'),
  'US', 'RELAX_BASE_NAME').Side  RROM DUAL;
 
S                                                                               
-                                                                               
L                                                                               
 
SELECT SDO_GCDR.GEOCODE('SCOTT',
  SDO_KEYWORDARRAY('1 Carlton B Goodlett Pl', 'San Francisco, CA  94102'),
  'US', 'RELAX_BASE_NAME').Percent  FROM DUAL;
 
SDO_GCDR.GEOCODE('SCOTT',SDO_KEYWORDARRAY('1CARLTONBGOODLETTPL','SANFRANCISCO
--------------------------------------------------------------------------------
                                                                             .01
 
SELECT SDO_GCDR.GEOCODE('SCOTT',
  SDO_KEYWORDARRAY('1 Carlton B Goodlett Pl', 'San Francisco, CA  94102'),
  'US', 'RELAX_BASE_NAME').EdgeID  FROM DUAL;
 
SDO_GCDR.GEOCODE('SCOTT',SDO_KEYWORDARRAY('1CARLTONBGOODLETTPL','SANFRANCISCO
--------------------------------------------------------------------------------
                                                                        23614360
 
SELECT SDO_GCDR.GEOCODE('SCOTT',
  SDO_KEYWORDARRAY('1 Carlton B Goodlett Pl', 'San Francisco, CA  94102'),
  'US', 'RELAX_BASE_NAME').MatchCode  FROM DUAL;
 
SDO_GCDR.GEOCODE('SCOTT',SDO_KEYWORDARRAY('1CARLTONBGOODLETTPL','SANFRANCISCO
--------------------------------------------------------------------------------
                                                                               1

SELECT SDO_GCDR.GEOCODE('SCOTT',
  SDO_KEYWORDARRAY('1 Carlton B Goodlett Pl', 'San Francisco, CA  94102'),
  'US', 'RELAX_BASE_NAME').MatchVector  FROM DUAL;
 
SDO_GCDR.GEOCODE('SC
--------------------
????0101010??000?
</pre></div>
<!-- class="example" --></div>
<!-- class="sect2" -->
<a id="CIHFAGBH"></a>
<div id="SPATL823" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">11.2.2</span> <a id="sthref734"></a>SDO_ADDR_ARRAY Type</h3>
<p>The SDO_ADDR_ARRAY type is a VARRAY of SDO_GEO_ADDR objects (described in <a href="#CIHDEFFB">Section 11.2.1</a>) used to store geocoded address results. Multiple address objects can be returned when multiple addresses are matched as a result of a geocoding operation.</p>
<p>The SDO_ADDR_ARRAY type is defined as follows:</p>
<pre>
CREATE TYPE sdo_addr_array AS VARRAY(1000) OF sdo_geo_addr;
</pre></div>
<!-- class="sect2" -->
<a id="CIHBDFBE"></a>
<div id="SPATL824" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">11.2.3</span> <a id="sthref735"></a>SDO_KEYWORDARRAY Type</h3>
<p>The SDO_KEYWORDARRAY type is a VARRAY of VARCHAR2 strings used to store address lines for unformatted addresses. (Formatted and unformatted addresses are described in <a href="#CIHGGJCG">Section 11.1.1</a>.)</p>
<p>The SDO_KEYWORDARRAY type is defined as follows:</p>
<pre>
CREATE TYPE sdo_keywordarray AS VARRAY(10000) OF VARCHAR2(9000);
</pre></div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="CIHJABFA"></a>
<div id="SPATL825" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1"><span class="secnum">11.3</span> <a id="sthref736"></a>Using the Geocoding Capabilities</h2>
<p>To use the Oracle Spatial and Graph geocoding capabilities, you must use data provided by a geocoding vendor, and the data must be in the format supported by the Oracle Spatial and Graph geocoding feature. For information about geocoding, go to:</p>
<p><code><a href="http://www.oracle.com/technetwork/database/options/spatialandgraph/learnmore/sol-n-tech-idx-alt1-213053.html#geocoding">http://www.oracle.com/technetwork/database/options/spatialandgraph/learnmore/sol-n-tech-idx-alt1-213053.html#geocoding</a></code></p>
<p>To geocode an address using the geocoding data, use the SDO_GCDR PL/SQL package subprograms, which are documented in <a href="sdo_geocode_ref.htm#CACCHBGE">Chapter 23</a>:</p>
<ul>
<li>
<p>The <a href="sdo_geocode_ref.htm#CACIBFDJ">SDO_GCDR.GEOCODE</a> function geocodes an unformatted address to return an SDO_GEO_ADDR object.</p>
</li>
<li>
<p>The <a href="sdo_geocode_ref.htm#CACIEABI">SDO_GCDR.GEOCODE_ADDR</a> function geocodes an input address using attributes in an SDO_GEO_ADDR object, and returns the first matched address as an SDO_GEO_ADDR object.</p>
</li>
<li>
<p>The <a href="sdo_geocode_ref.htm#CACCGHED">SDO_GCDR.GEOCODE_ADDR_ALL</a> function geocodes an input address using attributes in an SDO_GEO_ADDR object, and returns matching addresses as an SDO_ADDR_ARRAY object.</p>
</li>
<li>
<p>The <a href="sdo_geocode_ref.htm#CACJJJIG">SDO_GCDR.GEOCODE_AS_GEOMETRY</a> function geocodes an unformatted address to return an SDO_GEOMETRY object.</p>
</li>
<li>
<p>The <a href="sdo_geocode_ref.htm#CACDDBCB">SDO_GCDR.GEOCODE_ALL</a> function geocodes all addresses associated with an unformatted address and returns the result as an SDO_ADDR_ARRAY object (an array of address objects).</p>
</li>
<li>
<p>The <a href="sdo_geocode_ref.htm#CACFCJBC">SDO_GCDR.REVERSE_GEOCODE</a> function reverse geocodes a location, specified by its spatial geometry object and country, and returns the result as an SDO_GEO_ADDR object.</p>
</li>
</ul>
</div>
<!-- class="sect1" -->
<a id="CIHFDEBG"></a>
<div id="SPATL826" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1"><span class="secnum">11.4</span> <a id="sthref737"></a>Geocoding from a Place Name</h2>
<p>If you know a place name (point of interest) but not its locality details, you can create a PL/SQL function to construct an SDO_GEO_ADDR object from <code>placename</code> and <code>country</code> input parameters, as shown in <a href="#CIHGDHHA">Example 11-2</a>, which creates a function named <code>create_addr_from_placename</code>. The SELECT statement in this example uses the <a href="sdo_geocode_ref.htm#CACIEABI">SDO_GCDR.GEOCODE_ADDR</a> function to geocode the address constructed using the <code>create_addr_from_placename</code> function.</p>
<div id="SPATL827" class="example">
<p class="titleinexample"><a id="CIHGDHHA"></a>Example 11-2 Geocoding from a Place Name and Country</p>
<pre>
create or replace function create_addr_from_placename(
placename varchar2,
country varchar2)
return sdo_geo_addr
deterministic
as
  addr sdo_geo_addr ;
  begin
  addr := sdo_geo_addr() ;
  addr.country := country ;
  addr.placename := placename ;
  addr.matchmode := 'default' ;
  return addr ;
  end;
  /
 
SELECT sdo_gcdr.geocode_addr('SCOTT', 
  create_addr_from_placename('CALIFORNIA PACIFIC MEDICAL CTR', 'US')) 
FROM DUAL;
</pre></div>
<!-- class="example" -->
<p>If you know at least some of the locality information, such as settlement, region, and postal code, you can get better performance if you can provide such information. <a href="#CIHHFJFG">Example 11-3</a> provides an alternate version of the <code>create_addr_from_placename</code> function that accepts additional parameters. To call this version of the function, specify actual values for the placename and country parameters, and specify an actual value or a null value for each of the other input parameters.</p>
<div id="SPATL828" class="example">
<p class="titleinexample"><a id="CIHHFJFG"></a>Example 11-3 Geocoding from a Place Name, Country, and Other Fields</p>
<pre>
create or replace function create_addr_from_placename(
placename varchar2,
city varchar2,
state varchar2,
postalcode varchar2,
country varchar2)
return sdo_geo_addr
deterministic
as
  addr sdo_geo_addr ;
  begin
  addr := sdo_geo_addr() ;
  addr.settlement := city ;
  addr.region := state ;
  addr.postalcode := postalcode ;
  addr.country := country ;
  addr.placename := placename ;
  addr.matchmode := 'default' ;
  return addr ;
  end;
  /
 
SELECT sdo_gcdr.geocode_addr('SCOTT', 
  create_addr_from_placename('CALIFORNIA PACIFIC MEDICAL CTR', 
    'san francisco', 'ca', null, 'US')) FROM DUAL;
</pre></div>
<!-- class="example" --></div>
<!-- class="sect1" -->
<a id="CIHFIEDB"></a>
<div id="SPATL829" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1"><span class="secnum">11.5</span> Data Structures for Geocoding</h2>
<p>Oracle uses the following tables for geocoding:</p>
<ul>
<li>
<p>GC_PARSER_PROFILES</p>
</li>
<li>
<p>GC_PARSER_PROFILEAFS</p>
</li>
<li>
<p>GC_COUNTRY_PROFILE</p>
</li>
<li>
<p>GC_AREA_&lt;suffix&gt;</p>
</li>
<li>
<p>GC_POSTAL_CODE_&lt;suffix&gt;</p>
</li>
<li>
<p>GC_ROAD_SEGMENT_&lt;suffix&gt;</p>
</li>
<li>
<p>GC_ROAD_&lt;suffix&gt;</p>
</li>
<li>
<p>GC_POI_&lt;suffix&gt;</p>
</li>
<li>
<p>GC_INTERSECTION_&lt;suffix&gt;</p>
</li>
</ul>
<p>The GC_PARSER_PROFILES and GC_PARSER_PROFILEAFS tables store address format definitions of all supported counties. These tables are used by the internal address parser in parsing postal addresses into addressing fields. The data for these two tables is provided by your data provider or by Oracle. (If these tables are not supplied by your data provider, you will need to install and populate them as explained in <a href="#CIHIACJA">Section 11.6</a>.) The remaining tables store geocoding data provided by data vendors.</p>
<p>Each user that owns the tables containing geocoding data (that is, each user that can be specified with the <code>username</code> parameter in a call to an SDO_GCDR subprogram) must have one GC_PARSER_PROFILES table, one GC_PARSER_PROFILEAFS table, and one GC_COUNTRY_PROFILE table. Each such user can have multiple sets of the other tables (GC_<span class="italic">xxx</span>_&lt;suffix&gt;). Each set of tables whose names end with the same suffix stores geocoding data of a country. For example, the following set of tables can be used to store geocoding data of the United States:</p>
<ul>
<li>
<p>GC_AREA_US</p>
</li>
<li>
<p>GC_POSTAL_CODE_US</p>
</li>
<li>
<p>GC_ROAD_SEGMENT_US</p>
</li>
<li>
<p>GC_ROAD_US</p>
</li>
<li>
<p>GC_POI_US</p>
</li>
<li>
<p>GC_INTERSECTION_US</p>
</li>
</ul>
<p>Geocoding data of one country cannot be stored in more than one set of those tables. The table suffix is defined by data venders and is specified in the GC_TABLE_SUFFIX column in the GC_COUNTRY_PROFILE table (described in <a href="#CIHFGFHH">Section 11.5.3</a>).</p>
<p>The following sections describe the vendor-supplied tables that store geocoding data, in alphabetical order by table name.</p>
<p><a href="#CIHJCAFA">Section 11.5.11</a> describes the indexes that you must create in order to use these tables for geocoding.</p>
<a id="CIHCJAFG"></a>
<div id="SPATL1414" class="sect2">
<h3 class="sect2"><span class="secnum">11.5.1</span> <a id="sthref738"></a>GC_ADDRESS_POINT_&lt;suffix&gt; Table and Index</h3>
<p>The GC_ADDRESS_POINT_&lt;suffix&gt; table (for example, GC_ADDRESS_POINT_US) stores the geographic (latitude, longitude) coordinates for addresses in the country or group of countries associated with the table-name suffix. This table is <span class="italic">not</span> required for geocoding (although it is required for point-based geocoding); however, it enables the geocoder to provide more accurate location results. It is automatically used when present in the schema. This table contains one row for each address stored in the table, and it contains the columns shown in <a href="#CIHJJGGJ">Table 11-7</a>.</p>
<div id="SPATL1415" class="tblformal">
<p class="titleintable"><a id="sthref739"></a><a id="CIHJJGGJ"></a>Table 11-7 GC_ADDRESS_POINT_&lt;suffix&gt; Table</p>
<table class="cellalignment740" title="GC_ADDRESS_POINT_&lt;suffix&gt; Table" summary="GC_ADDRESS_POINT_&lt;suffix&gt; table" dir="ltr">
<thead>
<tr class="cellalignment734">
<th class="cellalignment741" id="r1c1-t9">Column Name</th>
<th class="cellalignment741" id="r1c2-t9">Data Type</th>
<th class="cellalignment741" id="r1c3-t9">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment734">
<td class="cellalignment742" id="r2c1-t9" headers="r1c1-t9">
<p>ADDRESS_POINT_ID</p>
</td>
<td class="cellalignment742" headers="r2c1-t9 r1c2-t9">
<p>NUMBER(10)</p>
</td>
<td class="cellalignment742" headers="r2c1-t9 r1c3-t9">
<p>ID number of the address point. (Required)</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r3c1-t9" headers="r1c1-t9">
<p>ROAD_ID</p>
</td>
<td class="cellalignment742" headers="r3c1-t9 r1c2-t9">
<p>NUMBER</p>
</td>
<td class="cellalignment742" headers="r3c1-t9 r1c3-t9">
<p>ID number of the road on which the address point is located. (Required)</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r4c1-t9" headers="r1c1-t9">
<p>ROAD_SEGMENT_ID</p>
</td>
<td class="cellalignment742" headers="r4c1-t9 r1c2-t9">
<p>NUMBER(10)</p>
</td>
<td class="cellalignment742" headers="r4c1-t9 r1c3-t9">
<p>ID number of the road segment on the road on which the address point is located. (Required)</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r5c1-t9" headers="r1c1-t9">
<p>SIDE</p>
</td>
<td class="cellalignment742" headers="r5c1-t9 r1c2-t9">
<p>VARCHAR2(1)</p>
</td>
<td class="cellalignment742" headers="r5c1-t9 r1c3-t9">
<p>Side of the road on which the address point is located. Possible values: <code>L</code> (left) or <code>R</code> (right). (Required)</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r6c1-t9" headers="r1c1-t9">
<p>LANG_CODE</p>
</td>
<td class="cellalignment742" headers="r6c1-t9 r1c2-t9">
<p>VARCHAR2(3)</p>
</td>
<td class="cellalignment742" headers="r6c1-t9 r1c3-t9">
<p>3-letter ISO national language code for the language associated with the address point. (Required) point</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r7c1-t9" headers="r1c1-t9">
<p>HOUSE_NUMBER</p>
</td>
<td class="cellalignment742" headers="r7c1-t9 r1c2-t9">
<p>VARCHAR2(600 CHAR)</p>
</td>
<td class="cellalignment742" headers="r7c1-t9 r1c3-t9">
<p>House number of the address point; may contain non-numeric characters. (Required)</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r8c1-t9" headers="r1c1-t9">
<p>PERCENT</p>
</td>
<td class="cellalignment742" headers="r8c1-t9 r1c2-t9">
<p>NUMBER</p>
</td>
<td class="cellalignment742" headers="r8c1-t9 r1c3-t9">
<p>Decimal fraction of the length of the road segment on which the address point is located. It is computed by dividing the distance from the segment start point to the address point by the length of the road segment. (Required).</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r9c1-t9" headers="r1c1-t9">
<p>ADDR_LONG</p>
</td>
<td class="cellalignment742" headers="r9c1-t9 r1c2-t9">
<p>NUMBER(10)</p>
</td>
<td class="cellalignment742" headers="r9c1-t9 r1c3-t9">
<p>Longitude coordinate value of the address point. (Required)</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r10c1-t9" headers="r1c1-t9">
<p>ADDR_LAT</p>
</td>
<td class="cellalignment742" headers="r10c1-t9 r1c2-t9">
<p>NUMBER(10)</p>
</td>
<td class="cellalignment742" headers="r10c1-t9 r1c3-t9">
<p>Latitude coordinate value of the address point. (Required)</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r11c1-t9" headers="r1c1-t9">
<p>COUNTRY_CODE_2</p>
</td>
<td class="cellalignment742" headers="r11c1-t9 r1c2-t9">
<p>VARCHAR2(2)</p>
</td>
<td class="cellalignment742" headers="r11c1-t9 r1c3-t9">
<p>2- letter ISO country code of the country to which the address point belongs. (Required)</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r12c1-t9" headers="r1c1-t9">
<p>PARTITION_ID</p>
</td>
<td class="cellalignment742" headers="r12c1-t9 r1c2-t9">
<p>NUMBER</p>
</td>
<td class="cellalignment742" headers="r12c1-t9 r1c3-t9">
<p>Partition key used for partitioning geocoder data by geographic boundaries. If the data is not partitioned, set the value to 1. (Required)</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<p>If you use the GC_ADDRESS_POINT_&lt;suffix&gt; table, you must create an index on the table using a statement in the following form:</p>
<pre>
CREATE INDEX idx_<span class="italic">&lt;suffix&gt;</span>_addrpt_addr ON gc_address_point_<span class="italic">&lt;suffix&gt;</span> (road_segment_id, road_id, house_number, side);
</pre></div>
<!-- class="sect2" -->
<div id="SPATL830" class="sect2"><a id="sthref740"></a>
<h3 class="sect2"><span class="secnum">11.5.2</span> <a id="sthref741"></a>GC_AREA_&lt;suffix&gt; Table</h3>
<p>The GC_AREA_&lt;suffix&gt; table (for example, CG_AREA_US) stores administration area information for the country associated with the table name suffix. This table contains one row for each administration area, and it contains the columns shown in <a href="#CIHBDJCI">Table 11-8</a>.</p>
<div id="SPATL831" class="tblformal">
<p class="titleintable"><a id="sthref742"></a><a id="CIHBDJCI"></a>Table 11-8 GC_AREA_&lt;suffix&gt; Table</p>
<table class="cellalignment740" title="GC_AREA_&lt;suffix&gt; Table" summary="GC_AREA_&lt;suffix&gt; table" dir="ltr">
<thead>
<tr class="cellalignment734">
<th class="cellalignment741" id="r1c1-t10">Column Name</th>
<th class="cellalignment741" id="r1c2-t10">Data Type</th>
<th class="cellalignment741" id="r1c3-t10">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment734">
<td class="cellalignment742" id="r2c1-t10" headers="r1c1-t10">
<p>AREA_ID</p>
</td>
<td class="cellalignment742" headers="r2c1-t10 r1c2-t10">
<p>NUMBER(10)</p>
</td>
<td class="cellalignment742" headers="r2c1-t10 r1c3-t10">
<p>Area ID number. (Required)</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r3c1-t10" headers="r1c1-t10">
<p>AREA_NAME</p>
</td>
<td class="cellalignment742" headers="r3c1-t10 r1c2-t10">
<p>VARCHAR2(64)</p>
</td>
<td class="cellalignment742" headers="r3c1-t10 r1c3-t10">
<p>Area name. (Required)</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r4c1-t10" headers="r1c1-t10">
<p>LANG_CODE</p>
</td>
<td class="cellalignment742" headers="r4c1-t10 r1c2-t10">
<p>VARCHAR2(3)</p>
</td>
<td class="cellalignment742" headers="r4c1-t10 r1c3-t10">
<p>3-letter ISO national language code for the language associated with the area. (Required)</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r5c1-t10" headers="r1c1-t10">
<p>ADMIN_LEVEL</p>
</td>
<td class="cellalignment742" headers="r5c1-t10 r1c2-t10">
<p>NUMBER(1)</p>
</td>
<td class="cellalignment742" headers="r5c1-t10 r1c3-t10">
<p>Administration hierarchy level for the area. (Required)</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r6c1-t10" headers="r1c1-t10">
<p>LEVEL1_AREA_ID</p>
</td>
<td class="cellalignment742" headers="r6c1-t10 r1c2-t10">
<p>NUMBER(10)</p>
</td>
<td class="cellalignment742" headers="r6c1-t10 r1c3-t10">
<p>ID of the level-1 area to which the area belongs. In the administration hierarchy, the level-1 area is the country. (Required)</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r7c1-t10" headers="r1c1-t10">
<p>LEVEL2_AREA_ID</p>
</td>
<td class="cellalignment742" headers="r7c1-t10 r1c2-t10">
<p>NUMBER(10)</p>
</td>
<td class="cellalignment742" headers="r7c1-t10 r1c3-t10">
<p>ID of the level-2 area to which the area belongs, if applicable. You must specify an area ID for each level in the administration hierarchy to which this area belongs. (Optional)</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r8c1-t10" headers="r1c1-t10">
<p>LEVEL3_AREA_ID</p>
</td>
<td class="cellalignment742" headers="r8c1-t10 r1c2-t10">
<p>NUMBER(10)</p>
</td>
<td class="cellalignment742" headers="r8c1-t10 r1c3-t10">
<p>ID of the level-3 area to which the area belongs, if applicable. You must specify an area ID for each level in the administration hierarchy to which this area belongs. (Optional)</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r9c1-t10" headers="r1c1-t10">
<p>LEVEL4_AREA_ID</p>
</td>
<td class="cellalignment742" headers="r9c1-t10 r1c2-t10">
<p>NUMBER(10)</p>
</td>
<td class="cellalignment742" headers="r9c1-t10 r1c3-t10">
<p>ID of the level-4 area to which the area belongs, if applicable. You must specify an area ID for each level in the administration hierarchy to which this area belongs. (Optional)</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r10c1-t10" headers="r1c1-t10">
<p>LEVEL5_AREA_ID</p>
</td>
<td class="cellalignment742" headers="r10c1-t10 r1c2-t10">
<p>NUMBER(10)</p>
</td>
<td class="cellalignment742" headers="r10c1-t10 r1c3-t10">
<p>ID of the level-5 area to which the area belongs, if applicable. You must specify an area ID for each level in the administration hierarchy to which this area belongs. (Optional)</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r11c1-t10" headers="r1c1-t10">
<p>LEVEL6_AREA_ID</p>
</td>
<td class="cellalignment742" headers="r11c1-t10 r1c2-t10">
<p>NUMBER(10)</p>
</td>
<td class="cellalignment742" headers="r11c1-t10 r1c3-t10">
<p>ID of the level-6 area to which the area belongs, if applicable. You must specify an area ID for each level in the administration hierarchy to which this area belongs. (Optional)</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r12c1-t10" headers="r1c1-t10">
<p>LEVEL7_AREA_ID</p>
</td>
<td class="cellalignment742" headers="r12c1-t10 r1c2-t10">
<p>NUMBER(10)</p>
</td>
<td class="cellalignment742" headers="r12c1-t10 r1c3-t10">
<p>ID of the level-7 area to which the area belongs, if applicable. You must specify an area ID for each level in the administration hierarchy to which this area belongs. (Optional)</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r13c1-t10" headers="r1c1-t10">
<p>CENTER_LONG</p>
</td>
<td class="cellalignment742" headers="r13c1-t10 r1c2-t10">
<p>NUMBER</p>
</td>
<td class="cellalignment742" headers="r13c1-t10 r1c3-t10">
<p>Longitude value of the center of the area. The center is set to the closest road segment to the center longitude and latitude values. Oracle recommends that these two attributes be set properly. If these values are not set, the longitude and latitude coordinates of the geocoded result of an area will be (0,0). (Optional)</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r14c1-t10" headers="r1c1-t10">
<p>CENTER_LAT</p>
</td>
<td class="cellalignment742" headers="r14c1-t10 r1c2-t10">
<p>NUMBER</p>
</td>
<td class="cellalignment742" headers="r14c1-t10 r1c3-t10">
<p>Latitude value of the center of the area. (See the explanation for the CENTER_LONG column.) (Optional)</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r15c1-t10" headers="r1c1-t10">
<p>ROAD_SEGMENT_ID</p>
</td>
<td class="cellalignment742" headers="r15c1-t10 r1c2-t10">
<p>NUMBER(10)</p>
</td>
<td class="cellalignment742" headers="r15c1-t10 r1c3-t10">
<p>ID of the road segment to which the area center is set. This value must be set correctly if the geocoder is intended to work with the Oracle Spatial routing engine (described in <a href="sdo_route_server.htm#CCHGDJJD">Chapter 13</a>); otherwise, it can be set to any nonzero value, but it cannot be null. (Required)</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r16c1-t10" headers="r1c1-t10">
<p>POSTAL_CODE</p>
</td>
<td class="cellalignment742" headers="r16c1-t10 r1c2-t10">
<p>VARCHAR2(16)</p>
</td>
<td class="cellalignment742" headers="r16c1-t10 r1c3-t10">
<p>Postal code for the center of the area. Oracle recommends that this attribute be set correctly. If this value is null, the postal code attribute of the geocoded result of an area will be null. (Optional)</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r17c1-t10" headers="r1c1-t10">
<p>COUNTRY_CODE_2</p>
</td>
<td class="cellalignment742" headers="r17c1-t10 r1c2-t10">
<p>VARCHAR2(2)</p>
</td>
<td class="cellalignment742" headers="r17c1-t10 r1c3-t10">
<p>2- letter ISO country code of the country to which the area belongs. (Required)</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r18c1-t10" headers="r1c1-t10">
<p>PARTITION_ID</p>
</td>
<td class="cellalignment742" headers="r18c1-t10 r1c2-t10">
<p>NUMBER</p>
</td>
<td class="cellalignment742" headers="r18c1-t10 r1c3-t10">
<p>Partition key used for partitioning geocoder data by geographic boundaries. If the data is not partitioned, set the value to 1. (Required)</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r19c1-t10" headers="r1c1-t10">
<p>REAL_NAME</p>
</td>
<td class="cellalignment742" headers="r19c1-t10 r1c2-t10">
<p>VARCHAR2(64)</p>
</td>
<td class="cellalignment742" headers="r19c1-t10 r1c3-t10">
<p>The real name of the area, as spelled using the local language. This column is useful for area names that are not in English. For example, the German name of city <code>MUNICH</code> is <code>M&Uuml;NCHEN</code>. It is allowed to be spelled as <code>MUNCHEN</code>, but its REAL_NAME value should be <code>M&Uuml;NCHEN</code>. In the area table for Germany, areas with name <code>M&Uuml;NCHEN</code> and <code>MUNCHEN</code> both refer to the same area, and they both have the same real name <code>M&Uuml;NCHEN</code>. If the area name does not have any non-English characters, set REAL_NAME to be the same as AREA_NAME. (Required)</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r20c1-t10" headers="r1c1-t10">
<p>IS_ALIAS</p>
</td>
<td class="cellalignment742" headers="r20c1-t10 r1c2-t10">
<p>VARCHAR2(1)</p>
</td>
<td class="cellalignment742" headers="r20c1-t10 r1c3-t10">
<p>Contains <code>T</code> if this area is an alias of another area that is an officially recognized administrative area; contains <code>F</code> if this area is not an alias of another area that is an officially recognized administrative area. For example, Manhattan is not an officially recognized administrative area, but it is used by the public to refer to a part of New York City. In this case, <code>Manhattan</code> is an alias of <code>New York City</code>. (Required)</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r21c1-t10" headers="r1c1-t10">
<p>NUM_STREETS</p>
</td>
<td class="cellalignment742" headers="r21c1-t10 r1c2-t10">
<p>NUMBER</p>
</td>
<td class="cellalignment742" headers="r21c1-t10 r1c3-t10">
<p>The number of streets inside this area. (Optional)</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="sect2" -->
<a id="CIHFGFHH"></a>
<div id="SPATL832" class="sect2">
<h3 class="sect2"><span class="secnum">11.5.3</span> <a id="sthref743"></a>GC_COUNTRY_PROFILE Table</h3>
<p>The GC_COUNTRY_PROFILE table stores country profile information used by the geocoder. This information includes administrative-area hierarchy definitions, the national languages, and the table-name suffix used by the data tables and their indexes. This table contains one row for each supported country, and it contains the columns shown in <a href="#CIHIAECC">Table 11-9</a>.</p>
<div id="SPATL833" class="tblformal">
<p class="titleintable"><a id="sthref744"></a><a id="CIHIAECC"></a>Table 11-9 GC_COUNTRY_PROFILE Table</p>
<table class="cellalignment740" title="GC_COUNTRY_PROFILE Table" summary="GC_COUNTRY_PROFILE table" dir="ltr">
<thead>
<tr class="cellalignment734">
<th class="cellalignment741" id="r1c1-t11">Column Name</th>
<th class="cellalignment741" id="r1c2-t11">Data Type</th>
<th class="cellalignment741" id="r1c3-t11">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment734">
<td class="cellalignment742" id="r2c1-t11" headers="r1c1-t11">
<p>COUNTRY_NAME</p>
</td>
<td class="cellalignment742" headers="r2c1-t11 r1c2-t11">
<p>VARCHAR2(60)</p>
</td>
<td class="cellalignment742" headers="r2c1-t11 r1c3-t11">
<p>Country name. (Required)</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r3c1-t11" headers="r1c1-t11">
<p>COUNTRY_CODE_3</p>
</td>
<td class="cellalignment742" headers="r3c1-t11 r1c2-t11">
<p>VARCHAR2(3)</p>
</td>
<td class="cellalignment742" headers="r3c1-t11 r1c3-t11">
<p>3- letter ISO country code. (Required)</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r4c1-t11" headers="r1c1-t11">
<p>COUNTRY_CODE_2</p>
</td>
<td class="cellalignment742" headers="r4c1-t11 r1c2-t11">
<p>VARCHAR2(2)</p>
</td>
<td class="cellalignment742" headers="r4c1-t11 r1c3-t11">
<p>2- letter ISO country code. (Required)</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r5c1-t11" headers="r1c1-t11">
<p>LANG_CODE_1</p>
</td>
<td class="cellalignment742" headers="r5c1-t11 r1c2-t11">
<p>VARCHAR2(3)</p>
</td>
<td class="cellalignment742" headers="r5c1-t11 r1c3-t11">
<p>3-letter ISO national language code. Some countries might have multiple national languages, in which case LANG_CODE_2 and perhaps other LANG_CODE_<span class="italic">n</span> columns should contain values. (Required)</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r6c1-t11" headers="r1c1-t11">
<p>LANG_CODE_2</p>
</td>
<td class="cellalignment742" headers="r6c1-t11 r1c2-t11">
<p>VARCHAR2(3)</p>
</td>
<td class="cellalignment742" headers="r6c1-t11 r1c3-t11">
<p>3-letter ISO national language code. (Optional)</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r7c1-t11" headers="r1c1-t11">
<p>LANG_CODE_3</p>
</td>
<td class="cellalignment742" headers="r7c1-t11 r1c2-t11">
<p>VARCHAR2(3)</p>
</td>
<td class="cellalignment742" headers="r7c1-t11 r1c3-t11">
<p>3-letter ISO national language code. (Optional)</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r8c1-t11" headers="r1c1-t11">
<p>LANG_CODE_4</p>
</td>
<td class="cellalignment742" headers="r8c1-t11 r1c2-t11">
<p>VARCHAR2(3)</p>
</td>
<td class="cellalignment742" headers="r8c1-t11 r1c3-t11">
<p>3-letter ISO national language code. (Optional)</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r9c1-t11" headers="r1c1-t11">
<p>NUMBER_ADMIN_LEVELS</p>
</td>
<td class="cellalignment742" headers="r9c1-t11 r1c2-t11">
<p>NUMBER(1)</p>
</td>
<td class="cellalignment742" headers="r9c1-t11 r1c3-t11">
<p>Number of administration hierarchy levels. A country can have up to 7 administration area levels, numbered from 1 to 7 (largest to smallest). The top level area (country) is level 1. For the United States, the administration hierarchy is as follows: level 1 = country, level 2 = state, level 3 = county, level 4 = city. (Required)</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r10c1-t11" headers="r1c1-t11">
<p>SETTLEMENT_LEVEL</p>
</td>
<td class="cellalignment742" headers="r10c1-t11 r1c2-t11">
<p>NUMBER(1)</p>
</td>
<td class="cellalignment742" headers="r10c1-t11 r1c3-t11">
<p>Administration hierarchy level for a settlement, which is the lowest area level used in addressing. In the United States, this is the city level; in Europe, this is generally a subdivision of a city (level 5). (Required)</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r11c1-t11" headers="r1c1-t11">
<p>MUNICIPALITY_LEVEL</p>
</td>
<td class="cellalignment742" headers="r11c1-t11 r1c2-t11">
<p>NUMBER(1)</p>
</td>
<td class="cellalignment742" headers="r11c1-t11 r1c3-t11">
<p>Administration hierarchy level for a municipality, which is the second-lowest area level used in addressing. In the United States, this is the county (level 3); in Europe, this is generally a city (level 4). (Optional)</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r12c1-t11" headers="r1c1-t11">
<p>REGION_LEVEL</p>
</td>
<td class="cellalignment742" headers="r12c1-t11 r1c2-t11">
<p>NUMBER(1)</p>
</td>
<td class="cellalignment742" headers="r12c1-t11 r1c3-t11">
<p>Administrative level for the region, which is above the municipality level. In the United States, this is the state or third-lowest area level used in addressing (level 2); in Europe, this is a recognized subdivision of the country (level 2 or level 3). (Optional)</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r13c1-t11" headers="r1c1-t11">
<p>SETTLEMENT_IS_OPTIONAL</p>
</td>
<td class="cellalignment742" headers="r13c1-t11 r1c2-t11">
<p>VARCHAR2(1)</p>
</td>
<td class="cellalignment742" headers="r13c1-t11 r1c3-t11">
<p>Contains <code>T</code> if settlement information is optional in the address data; contains <code>F</code> if settlement information is not optional (that is, is required) in the address data. (Required)</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r14c1-t11" headers="r1c1-t11">
<p>MUNICIPALITY_IS_OPTIONAL</p>
</td>
<td class="cellalignment742" headers="r14c1-t11 r1c2-t11">
<p>VARCHAR2(1)</p>
</td>
<td class="cellalignment742" headers="r14c1-t11 r1c3-t11">
<p>Contains <code>T</code> if municipality information is optional in the address data; contains <code>F</code> if municipality information is not optional (that is, is required) in the address data. (Required)</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r15c1-t11" headers="r1c1-t11">
<p>REGION_IS_OPTIONAL</p>
</td>
<td class="cellalignment742" headers="r15c1-t11 r1c2-t11">
<p>VARCHAR2(1)</p>
</td>
<td class="cellalignment742" headers="r15c1-t11 r1c3-t11">
<p>Contains <code>T</code> if region information is optional in the address data; contains <code>F</code> if region information is not optional (that is, is required) in the address data. (Required)</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r16c1-t11" headers="r1c1-t11">
<p>POSTCODE_IN_SETTLEMENT</p>
</td>
<td class="cellalignment742" headers="r16c1-t11 r1c2-t11">
<p>VARCHAR(1)</p>
</td>
<td class="cellalignment742" headers="r16c1-t11 r1c3-t11">
<p>Contains <code>T</code> if each postal code must be completely within a settlement area; contains <code>F</code> if a postal code can include areas from multiple settlements. (Required)</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r17c1-t11" headers="r1c1-t11">
<p>SETTLEMENT_AS_CITY</p>
</td>
<td class="cellalignment742" headers="r17c1-t11 r1c2-t11">
<p>VARCHAR(1)</p>
</td>
<td class="cellalignment742" headers="r17c1-t11 r1c3-t11">
<p>Contains <code>T</code> if a city name can identify both a municipality and a settlement; contains <code>F</code> if a city name can identify only a settlement. For example, in the United Kingdom, London can be both the name of a municipality area and the name of a settlement area, which is inside the municipality of London. This is common in large cities in some European countries, such as the UK and Belgium. (Required)</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r18c1-t11" headers="r1c1-t11">
<p>CACHED_ADMIN_AREA_LEVEL</p>
</td>
<td class="cellalignment742" headers="r18c1-t11 r1c2-t11">
<p>NUMBER</p>
</td>
<td class="cellalignment742" headers="r18c1-t11 r1c3-t11">
<p>(Reserved for future use.)</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r19c1-t11" headers="r1c1-t11">
<p>GC_TABLE_SUFFIX</p>
</td>
<td class="cellalignment742" headers="r19c1-t11 r1c2-t11">
<p>VARCHAR2(5)</p>
</td>
<td class="cellalignment742" headers="r19c1-t11 r1c3-t11">
<p>Table name suffix identifying the country for the GC_* data tables. For example, if the value of GC_TABLE_SUFFIX is <code>US</code>, the names of tables with geocoding data for this country end with <code>_US</code> (for example, CG_AREA_US). (Required)</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r20c1-t11" headers="r1c1-t11">
<p>CENTER_LONG</p>
</td>
<td class="cellalignment742" headers="r20c1-t11 r1c2-t11">
<p>NUMBER</p>
</td>
<td class="cellalignment742" headers="r20c1-t11 r1c3-t11">
<p>Longitude value of the center of the area. (Optional)</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r21c1-t11" headers="r1c1-t11">
<p>CENTER_LAT</p>
</td>
<td class="cellalignment742" headers="r21c1-t11 r1c2-t11">
<p>NUMBER</p>
</td>
<td class="cellalignment742" headers="r21c1-t11 r1c3-t11">
<p>Latitude value of the center of the area. (Optional)</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r22c1-t11" headers="r1c1-t11">
<p>SEPARATE_PREFIX</p>
</td>
<td class="cellalignment742" headers="r22c1-t11 r1c2-t11">
<p>VARCHAR2(1)</p>
</td>
<td class="cellalignment742" headers="r22c1-t11 r1c3-t11">
<p>Contains <code>T</code> if the street name prefix is a separate word from the street name; contains <code>F</code> if the street name prefix is in the same word with the street name. For example, in an American street address of <code>123 N Main St</code>, the prefix is <code>N</code>, and it is separate from the street name, which is <code>Main</code>. (Optional; not currently used by Oracle)</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r23c1-t11" headers="r1c1-t11">
<p>SEPARATE_SUFFIX</p>
</td>
<td class="cellalignment742" headers="r23c1-t11 r1c2-t11">
<p>VARCHAR2(1)</p>
</td>
<td class="cellalignment742" headers="r23c1-t11 r1c3-t11">
<p>Contains <code>T</code> if the street name suffix is a separate word from the street name; contains <code>F</code> if the street name suffix is in the same word with the street name. For example, in an American street address of <code>123 Main St NW</code>, the suffix is <code>NW</code>, and it is separate from the street name, which is <code>Main</code>, and from the street type, which is <code>St</code>. (Optional; not currently used by Oracle)</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r24c1-t11" headers="r1c1-t11">
<p>SEPARATE_STYPE</p>
</td>
<td class="cellalignment742" headers="r24c1-t11 r1c2-t11">
<p>VARCHAR2(1)</p>
</td>
<td class="cellalignment742" headers="r24c1-t11 r1c3-t11">
<p>Contains <code>T</code> if the street type is a separate word from the street name; contains <code>F</code> if the street type is in the same word with the street name. For example, in a German street address of <code>123 Beethovenstrass</code>, the type is <code>strass</code>, and it is in the same word with the street name, which is <code>Beethoven</code>. (Optional; not currently used by Oracle)</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r25c1-t11" headers="r1c1-t11">
<p>AREA_ID</p>
</td>
<td class="cellalignment742" headers="r25c1-t11 r1c2-t11">
<p>NUMBER</p>
</td>
<td class="cellalignment742" headers="r25c1-t11 r1c3-t11">
<p>Not currently used by Oracle. (Optional)</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r26c1-t11" headers="r1c1-t11">
<p>VERSION</p>
</td>
<td class="cellalignment742" headers="r26c1-t11 r1c2-t11">
<p>VARCHAR2(10)</p>
</td>
<td class="cellalignment742" headers="r26c1-t11 r1c3-t11">
<p>Version of the data. The first version should be <code>1.0</code>. (Required)</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="sect2" -->
<div id="SPATL834" class="sect2"><a id="sthref745"></a>
<h3 class="sect2"><span class="secnum">11.5.4</span> <a id="sthref746"></a><a id="sthref747"></a>GC_INTERSECTION_&lt;suffix&gt; Table</h3>
<p>The GC_INTERSECTION_&lt;suffix&gt; table (for example, GC_INTERSECTION_US) stores information on road intersections for the country or group of countries associated with the table-name suffix. An intersection occurs when roads meet or cross each other. This table contains the columns shown in <a href="#CIHDDDBG">Table 11-10</a>.</p>
<div id="SPATL835" class="tblformal">
<p class="titleintable"><a id="sthref748"></a><a id="CIHDDDBG"></a>Table 11-10 GC_INTERSECTION_&lt;suffix&gt; Table</p>
<table class="cellalignment740" title="GC_INTERSECTION_&lt;suffix&gt; Table" summary="GC_INTERSECTION_&lt;suffix&gt; table" dir="ltr">
<thead>
<tr class="cellalignment734">
<th class="cellalignment741" id="r1c1-t12">Column Name</th>
<th class="cellalignment741" id="r1c2-t12">Data Type</th>
<th class="cellalignment741" id="r1c3-t12">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment734">
<td class="cellalignment742" id="r2c1-t12" headers="r1c1-t12">
<p>ROAD_ID_1</p>
</td>
<td class="cellalignment742" headers="r2c1-t12 r1c2-t12">
<p>NUMBER</p>
</td>
<td class="cellalignment742" headers="r2c1-t12 r1c3-t12">
<p>ID number of the first road on which the intersection is located. (Required)</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r3c1-t12" headers="r1c1-t12">
<p>ROAD_SEGMENT_ID_1</p>
</td>
<td class="cellalignment742" headers="r3c1-t12 r1c2-t12">
<p>NUMBER</p>
</td>
<td class="cellalignment742" headers="r3c1-t12 r1c3-t12">
<p>ID number of the road segment on the first road on which the intersection is located. (Required)</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r4c1-t12" headers="r1c1-t12">
<p>ROAD_ID_2</p>
</td>
<td class="cellalignment742" headers="r4c1-t12 r1c2-t12">
<p>NUMBER</p>
</td>
<td class="cellalignment742" headers="r4c1-t12 r1c3-t12">
<p>ID number of the second road on which the intersection is located. (Required)</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r5c1-t12" headers="r1c1-t12">
<p>ROAD_SEGMENT_ID_2</p>
</td>
<td class="cellalignment742" headers="r5c1-t12 r1c2-t12">
<p>NUMBER</p>
</td>
<td class="cellalignment742" headers="r5c1-t12 r1c3-t12">
<p>ID number of the road segment on the second road on which the intersection is located. (Required)</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r6c1-t12" headers="r1c1-t12">
<p>INTS_LONG</p>
</td>
<td class="cellalignment742" headers="r6c1-t12 r1c2-t12">
<p>NUMBER</p>
</td>
<td class="cellalignment742" headers="r6c1-t12 r1c3-t12">
<p>Longitude coordinate value of the intersection. (Required)</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r7c1-t12" headers="r1c1-t12">
<p>INTS_LAT</p>
</td>
<td class="cellalignment742" headers="r7c1-t12 r1c2-t12">
<p>NUMBER</p>
</td>
<td class="cellalignment742" headers="r7c1-t12 r1c3-t12">
<p>Latitude coordinate value of the intersection. (Required)</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r8c1-t12" headers="r1c1-t12">
<p>HOUSE_NUMBER</p>
</td>
<td class="cellalignment742" headers="r8c1-t12 r1c2-t12">
<p>NUMBER</p>
</td>
<td class="cellalignment742" headers="r8c1-t12 r1c3-t12">
<p>The leading numerical part of the house number at the intersection. (See the explanation of house numbers after <a href="#CIHDEFHD">Table 11-16</a> in <a href="#CIHHEBJI">Section 11.5.10</a>.) (Required)</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r9c1-t12" headers="r1c1-t12">
<p>HOUSE_NUMBER_2</p>
</td>
<td class="cellalignment742" headers="r9c1-t12 r1c2-t12">
<p>VARCHAR2(10)</p>
</td>
<td class="cellalignment742" headers="r9c1-t12 r1c3-t12">
<p>The second part of the house number at the intersection. (See the explanation of house numbers after <a href="#CIHDEFHD">Table 11-16</a> in <a href="#CIHHEBJI">Section 11.5.10</a>.) (Required)</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r10c1-t12" headers="r1c1-t12">
<p>SIDE</p>
</td>
<td class="cellalignment742" headers="r10c1-t12 r1c2-t12">
<p>VARCHAR2(1)</p>
</td>
<td class="cellalignment742" headers="r10c1-t12 r1c3-t12">
<p>Side of the street on which the house at the intersection is located. Possible values: <code>L</code> (left) or <code>R</code> (right). (Required)</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r11c1-t12" headers="r1c1-t12">
<p>COUNTRY_CODE_2</p>
</td>
<td class="cellalignment742" headers="r11c1-t12 r1c2-t12">
<p>VARCHAR2(2)</p>
</td>
<td class="cellalignment742" headers="r11c1-t12 r1c3-t12">
<p>2- letter ISO country code of the country to which the house at the intersection belongs. (Required)</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r12c1-t12" headers="r1c1-t12">
<p>PARTITION_ID</p>
</td>
<td class="cellalignment742" headers="r12c1-t12 r1c2-t12">
<p>NUMBER</p>
</td>
<td class="cellalignment742" headers="r12c1-t12 r1c3-t12">
<p>Partition key used for partitioning geocoder data by geographic boundaries. If the data is not partitioned, set the value to 1. (Required)</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="sect2" -->
<div id="SPATL1434" class="sect2"><a id="sthref749"></a>
<h3 class="sect2"><span class="secnum">11.5.5</span> <a id="sthref750"></a><a id="sthref751"></a>GC_PARSER_PROFILES Table</h3>
<p>The GC_PARSER_PROFILES table stores information about keywords typically found in postal addresses. The geocoder uses keywords to identify address fields, such as house number, road name, city name, state name, and postal code. A keyword can be the type of street (such as road, street, drive, or avenue) or the prefix or suffix of a street (such as north, south, east, or west). This table contains the columns shown in <a href="#CIHIGBJJ">Table 11-11</a>.</p>
<div id="SPATL1435" class="tblformal">
<p class="titleintable"><a id="sthref752"></a><a id="CIHIGBJJ"></a>Table 11-11 GC_PARSER_PROFILES Table</p>
<table class="cellalignment740" title="GC_PARSER_PROFILES Table" summary="GC_PARSER_PROFILES table" dir="ltr">
<thead>
<tr class="cellalignment734">
<th class="cellalignment741" id="r1c1-t13">Column Name</th>
<th class="cellalignment741" id="r1c2-t13">Data Type</th>
<th class="cellalignment741" id="r1c3-t13">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment734">
<td class="cellalignment742" id="r2c1-t13" headers="r1c1-t13">
<p>COUNTRY_CODE</p>
</td>
<td class="cellalignment742" headers="r2c1-t13 r1c2-t13">
<p>VARCHAR2(2)</p>
</td>
<td class="cellalignment742" headers="r2c1-t13 r1c3-t13">
<p>2- letter ISO country code of the country for the keyword. (Required)</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r3c1-t13" headers="r1c1-t13">
<p>KEYWORDS</p>
</td>
<td class="cellalignment742" headers="r3c1-t13 r1c2-t13">
<p>SDO_KEYWORDARRAY</p>
</td>
<td class="cellalignment742" headers="r3c1-t13 r1c3-t13">
<p>A single array of keywords for a specific address field. The array may contain a single word, or a group of words and abbreviations that can be used with the same meaning; for example, <span class="italic">United States of America</span>, <span class="italic">USA</span>, and <span class="italic">United States</span> all refer to the US. The first word of this array should be the official full name of the keyword, if there is any. The US uses over 400 keywords in parsing addresses. The following are some examples of keyword arrays and keywords from the US data set; however, only a single SDO_KEYWORDARRAY object is stored in each row:</p>
<p>SDO_KEYWORDARRAY( 'UNITED STATES OF AMERICA','US', 'USA', 'UNITED STATES', 'U.S.A.', 'U.S.')</p>
<p>SDO_KEYWORDARRAY('AVENUE','AV', 'AVE', 'AVEN', 'AVENU', 'AVN', 'AVNUE', 'AV.','AVE.')</p>
<p>SDO_KEYWORDARRAY('40TH', 'FORTIETH')</p>
<p>SDO_KEYWORDARRAY('NEW YORK','NY')</p>
<p>SDO_KEYWORDARRAY('LIBRARY')</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r4c1-t13" headers="r1c1-t13">
<p>OUTPUT_KEYWORD</p>
</td>
<td class="cellalignment742" headers="r4c1-t13 r1c2-t13">
<p>VARCHAR2(2000)</p>
</td>
<td class="cellalignment742" headers="r4c1-t13 r1c3-t13">
<p>A keyword used in the geocoder data to represent an address field. It must be the same as one of the keywords used in the keyword array. The output keyword is used to match the addresses stored in the geocoding data tables to the user's input, for example, if the output keyword <code>AV</code> is used for street type <code>Avenue</code> in the GC_ROAD_US table, wherever a user enters an address containing any of the keywords (<span class="italic">AVENUE</span>, <span class="italic">AV</span>, <span class="italic">AVE</span>, <span class="italic">AVEN</span>, <span class="italic">AVENU</span>, <span class="italic">AVN</span>, <span class="italic">AVNUE</span>, <span class="italic">AV</span>., <span class="italic">AVE.</span>), the keyword will be interpreted and matched to the output keyword <code>AV</code> to help find the address in the database The following are some examples of output keywords; however, only a single output keyword is stored in each row:</p>
<p><code>US</code></p>
<p><code>AV</code></p>
<p><code>40TH</code></p>
<p><code>NY</code></p>
<p><code>LIBRARY</code></p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r5c1-t13" headers="r1c1-t13">
<p>SECTION_LABEL</p>
</td>
<td class="cellalignment742" headers="r5c1-t13 r1c2-t13">
<p>VARCHAR2(30)</p>
</td>
<td class="cellalignment742" headers="r5c1-t13 r1c3-t13">
<p>A label used to identify the type of keyword represented in the KEYWORDS and OUTPUT_KEYWORD columns. There are the multiple different section labels; however, only a single section label for each row is used in identifying the type of keywords:</p>
<p>COUNTRY_NAME: Identifies keywords that are used to represent country names.</p>
<p>LOCALITY_KEYWORD_DICTIONARY: Identifies keywords that are used to replace words in a locality (city, state, province, and so on) with a standardized form of the word. For example, <span class="italic">Saint</span> is replaced by <span class="italic">St</span>; and by doing so, the city names <span class="italic">Saint Thomas</span> and <span class="italic">St. Thomas</span> will be standardized to <span class="italic">St Thomas</span>, which is stored in the database.</p>
<p>PLACE_NAME_KEYWORD: Identifies a point of interest (POI) name keyword, such as for a restaurant or a hotel.</p>
<p>REGION_LIST: Identifies keywords that are known names of regions, such as <span class="italic">NY</span>, <span class="italic">New York</span>, <span class="italic">NH</span>, and <span class="italic">New Hampshire</span>. The regions identified must be administrative areas that belong to the third-lowest area level or third-smallest area used in addressing. In the US this is the state level (the lowest area level or smallest area is the city level).</p>
<p>SECOND_UNIT_KEYWORD: Identifies keywords used in second-unit descriptions, such as <span class="italic">Floor</span>, <span class="italic">#</span>, <span class="italic">Suite</span>, and <span class="italic">Apartment</span>.</p>
<p>STREET_KEYWORD_DICTIONARY: Identifies keywords used to replace non-street-type keywords in street names (such as <span class="italic">40TH</span> and <span class="italic">Fortieth</span>) with a standardized form.</p>
<p>STREET_PREFIX_KEYWORD: Identifies street name prefix keywords, such as <span class="italic">South</span>, <span class="italic">North</span>, <span class="italic">West</span>, and <span class="italic">East</span>.</p>
<p>STREET_TYPE_KEYWORD: Identifies street type keywords, such as <span class="italic">Road</span>, <span class="italic">Street</span>, and <span class="italic">Drive</span>.</p>
<p>IN_LINE_STREET_TYPE_KEYWORD: Identifies street type keywords that are attached to street names, such as <span class="italic">strasse</span> in the German street name <span class="italic">Steinstrasse</span>.</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r6c1-t13" headers="r1c1-t13">
<p>POSITION</p>
</td>
<td class="cellalignment742" headers="r6c1-t13 r1c2-t13">
<p>VARCHAR2(1)</p>
</td>
<td class="cellalignment742" headers="r6c1-t13 r1c3-t13">
<p>The position of the keyword relative to a street name. It indicates whether the keyword can precede (<code>P</code>) or follow (<code>F</code>) the actual street name, or both (<code>B</code>). Thus, <code>P</code>, <code>F</code>, and <code>B</code> are the only valid entries. In the US, most street type keywords follow the street names, for example, the street type <code>Blvd</code> in <span class="italic">Hollywood Blvd</span>. In France, however, street type keywords usually precede the street names, for example, the street type <code>Avenue</code> in <span class="italic">Avenue De Paris</span>.</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r7c1-t13" headers="r1c1-t13">
<p>SEPARATENESS</p>
</td>
<td class="cellalignment742" headers="r7c1-t13 r1c2-t13">
<p>VARCHAR2(1)</p>
</td>
<td class="cellalignment742" headers="r7c1-t13 r1c3-t13">
<p>Indicates whether the keyword is separate from a street name. Keywords are either separable (<code>S</code>) or non-separable (<code>N</code>). Thus, <code>S</code> and <code>N</code> are the only valid entries. In the US, all street-type keywords are separate words from the street name, for example, the street type <code>Blvd</code> in <span class="italic">Hollywood Blvd</span>. In Germany, however, the street-type keywords are not separate from the street name, for example, the street type <code>strasse</code> in <span class="italic">Augustenstrasse</span>.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="sect2" -->
<div id="SPATL1436" class="sect2"><a id="sthref753"></a>
<h3 class="sect2"><span class="secnum">11.5.6</span> <a id="sthref754"></a><a id="sthref755"></a>GC_PARSER_PROFILEAFS Table</h3>
<p>The GC_PARSER_PROFILEAFS table stores the XML definition of postal-address formats. An XML string describes each address format for a specific country. In the Oracle Geocoder 10g and earlier, the J2EE geocoder uses a country_name.ppr file instead of this table. The content of the country_name.ppr file is equivalent to the content of the ADDRESS_FORMAT_STRING attribute. This table contains the columns shown in <a href="#CIHBCDAI">Table 11-12</a>.</p>
<div id="SPATL1437" class="tblformal">
<p class="titleintable"><a id="sthref756"></a><a id="CIHBCDAI"></a>Table 11-12 GC_PARSER_PROFILEAFS Table</p>
<table class="cellalignment740" title="GC_PARSER_PROFILEAFS Table" summary="GC_PARSER_PROFILEAFS table" dir="ltr">
<thead>
<tr class="cellalignment734">
<th class="cellalignment741" id="r1c1-t14">Column Name</th>
<th class="cellalignment741" id="r1c2-t14">Data Type</th>
<th class="cellalignment741" id="r1c3-t14">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment734">
<td class="cellalignment742" id="r2c1-t14" headers="r1c1-t14">
<p>COUNTRY_CODE</p>
</td>
<td class="cellalignment742" headers="r2c1-t14 r1c2-t14">
<p>VARCHAR2(2)</p>
</td>
<td class="cellalignment742" headers="r2c1-t14 r1c3-t14">
<p>2- letter ISO country code of the country. (Required)</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r3c1-t14" headers="r1c1-t14">
<p>ADDRESS_FORMAT_STRING</p>
</td>
<td class="cellalignment742" headers="r3c1-t14 r1c2-t14">
<p>CLOB</p>
</td>
<td class="cellalignment742" headers="r3c1-t14 r1c3-t14">
<p>XML string describing the address format for the country specified in the COUNTRY_CODE column. (<a href="#CIHECJBI">Example 11-4</a> shows the XML definition for the US address format, and <a href="#CIHFCAHG">Section 11.5.6.1</a> explains the elements used in the US address format definition.).</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<p><a href="#CIHECJBI">Example 11-4</a> shows the ADDRESS_FORMAT_STRING definition for the US address format.</p>
<div id="SPATL1438" class="example">
<p class="titleinexample"><a id="CIHECJBI"></a>Example 11-4 XML Definition for the US Address Format</p>
<pre>
&lt;address_format unit_separator="," replace_hyphen="true"&gt;
 &lt;address_line&gt;
   &lt;place_name /&gt;
 &lt;/address_line&gt;
 &lt;address_line&gt;
   &lt;street_address&gt;
     &lt;house_number&gt;
       &lt;format form="0*" effective="0-1" output="$" /&gt;
       &lt;format form="0*1*" effective="0-1" output="$"&gt;
         &lt;exception form="0*TH" /&gt;
         &lt;exception form="0*ST" /&gt;
         &lt;exception form="0*2ND" /&gt;
         &lt;exception form="0*3RD" /&gt;
       &lt;/format&gt;
       &lt;format form="0*10*" effective="0-1" output="$" /&gt;
       &lt;format form="0*-0*" effective="0-1" output="$" /&gt;
       &lt;format form="0*.0*" effective="0-1" output="$" /&gt;
       &lt;format form="0* 0*/0*" effective="0-1" output="$" /&gt;
     &lt;/house_number&gt;
     &lt;street_name&gt;
       &lt;prefix /&gt;
       &lt;base_name /&gt;
        &lt;suffix /&gt;
       &lt;street_type /&gt;
       &lt;special_format&gt;
   &lt;format form="1* HWY 0*" effective="7-8" addon_effective="0-1" addon_output="$ HWY"/&gt;
   &lt;format form="1* HIGHWAY 0*" effective="11-12" addon_effective="0-1" addon_output="$ HWY"/&gt;
   &lt;format form="1* HWY-0*" effective="7-8" addon_effective="0-1" addon_output="$ HWY"/&gt;
   &lt;format form="1* HIGHWAY-0*" effective="11-12" addon_effective="0-1" addon_output="$ HWY"/&gt;
         &lt;format form="HWY 0*" effective="4-5" addon_output="HWY" /&gt;
         &lt;format form="HIGHWAY 0*" effective="8-9" addon_output="HWY" /&gt;
         &lt;format form="ROUTE 0*" effective="6-7" addon_output="RT" /&gt;
         &lt;format form="I 0*" effective="2-3" addon_output="I" /&gt;
         &lt;format form="11 0*" effective="3-4" addon_effective="0-1" /&gt;
         &lt;format form="I0*" effective="1-2" addon_output="I" /&gt;
         &lt;format form="I-0*" effective="2-3" addon_output="I" /&gt;
         &lt;format form="11-0*" effective="3-4" addon_effective="0-1" /&gt;
         &lt;format form="ROUTE-0*" effective="6-7" addon_output="RT" /&gt;
         &lt;format form="US0*" effective="2-3" addon_output="US" /&gt;
         &lt;format form="HWY-0*" effective="2-3" addon_output="US" /&gt;
         &lt;format form="HIGHWAY-0*" effective="8-9" addon_output="HWY" /&gt;
       &lt;/special_format&gt;
     &lt;/street_name&gt;
     &lt;second_unit&gt;
       &lt;special_format&gt;
         &lt;format form="# 0*" effective="2-3" output="APT $" /&gt;
         &lt;format form="#0*" effective="1-2" output="APT $" /&gt;
       &lt;/special_format&gt;
     &lt;/second_unit&gt;
   &lt;/street_address&gt;
 &lt;/address_line&gt;
 &lt;address_line&gt;
   &lt;po_box&gt;
     &lt;format form="PO BOX 0*" effective="7-8" /&gt;
     &lt;format form="P.O. BOX 0*" effective="9-10" /&gt;
     &lt;format form="PO 0*" effective="3-4" /&gt;
     &lt;format form="P.O. 0*" effective="5-6" /&gt;
     &lt;format form="POBOX 0*" effective="6-7" /&gt;
   &lt;/po_box&gt;
 &lt;/address_line&gt;
 &lt;address_line&gt;
   &lt;city optional="no" /&gt;
   &lt;region optional="no" order="1" /&gt;
   &lt;postal_code&gt;
     &lt;format form="00000" effective="0-4" /&gt;
     &lt;format form="00000-0000" effective="0-4" addon_effective="6-9" /&gt;
     &lt;format form="00000 0000" effective="0-4" addon_effective="6-9" /&gt;
   &lt;/postal_code&gt;
 &lt;/address_line&gt;
&lt;/address_format&gt;
</pre></div>
<!-- class="example" -->
<a id="CIHFCAHG"></a>
<div id="SPATL1439" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3"><span class="secnum">11.5.6.1</span> ADDRESS_FORMAT_STRING Description</h4>
<p>The ADDRESS_FORMAT_STRING column of the GC_PARSER_PROFILEAFS table describes the format of address fields and their positioning in valid postal addresses. The address format string is organized by address lines, because postal addresses are typically written in multiple address lines.</p>
<p>The address parser uses the format description defined in the XML address format, combined with the keyword definition for each address field defined in the GC_PARSER_PROFILES table, to parse the input address and identify individual address fields.</p>
<p class="subhead2"><a id="SPATL1440"></a>&lt;address_format&gt; Element</p>
<p>The <code>&lt;address_format&gt;</code> element includes the <code>unit_separator</code> and <code>replace_hyphen</code> attributes. The <code>unit_separator</code> attribute is used to separate fields in the stored data. By default it is a comma (<code>unit_separator=","</code>). The <code>replace_hyphen</code> attribute specifies whether to replace all hyphens in the user's input with a space. By default it is set to true (<code>replace_hyphen="true"</code>), that is, it is expected that all names in the data tables will contain a space instead of a hyphen.</p>
<p>If <code>replace_hyphen="true"</code>, administrative-area names in the data tables containing hyphens will not be matched during geocoding if <code>replace_hyphen="true"</code>; however, these area names with hyphens can be placed in the REAL_NAME column of the GC_AREA table to be returned as the administrative-area name in the geocoded result. Road names in the NAME column of the GC_ROAD table containing hyphens will, however, be matched during geocoding, but the matching performance will be degraded</p>
<p class="subhead2"><a id="SPATL1441"></a>&lt;address_line&gt; Elements</p>
<p>Each <code>&lt;address_line&gt;</code> element in the XML address format string describes the format of an address line. Each <code>&lt;address_line&gt;</code> element can have one or more child elements describing the individual address fields, such as street address, city, state (region or province), and postal code. These address field elements are listed in the order that the address fields appear in valid postal addresses. The <code>optional</code> attribute of the address field element is set to <code>"no"</code> if the address field is mandatory. By default, address field elements are optional.</p>
<p class="subhead2"><a id="SPATL1442"></a>&lt;format&gt; Elements</p>
<p>The format descriptions for house number, special street name, post box, and postal code elements are specified with a single or multiple <code>&lt;format&gt;</code> elements. Each <code>&lt;format&gt;</code> element specifies a valid layout and range of values for a particular address field. The following example illustrates the format used to define a special street name:</p>
<pre>
&lt;format 
     form="1* HWY 0*" 
     effective="7-8" 
     output="$"
     addon_effective="0-1" 
     addon_output="$ HIGHWAY" /&gt;
</pre>
<p>The <code>form</code> attribute uses a regular expression-like string to describe the format: <code>1</code> stands for any alphabetic letter; <code>0</code> stands for any numerical digit; <code>2</code> stands for any alphabetic letter or any numerical digit; <code>1*</code> specifies a sting consisting of all alphabetic letters; <code>0*</code> specifies a string consisting of all numerical digits; <code>2*</code> specifies a string consisting of any combination of numerical digits and alphabetic letters. All other symbols represent themselves.</p>
<p>Any string matching the pattern specified by the <code>form</code> attribute is considered to be a valid string for its (parent) address field. A valid string can then be broken down into segments specified by the attributes <code>effective</code> and <code>addon_effective</code>. The effective attribute specifies the more important, primary piece of the address string; the addon_effective attribute specifies the secondary piece of the address string.</p>
<ul>
<li>
<p>The <code>effective</code> attribute specifies a substring of the full pattern using the start and end positions for the end descriptor of the <code>form</code> attribute. In the preceding example, <code>effective="7-8"</code> retrieves the substring (counting from position 0) starting at position 7 and ending at position 8, which is the substring defined by <code>0*</code>, at the end of the <code>form</code> attribute.</p>
</li>
<li>
<p>The <code>addon_effective</code> attribute specifies a substring of the full pattern using the start and end positions for the start descriptor of the <code>form</code> attribute. In the preceding example, <code>addon_effective="0-1"</code> retrieves the substring, (counting from position 0) starting at position 0 and ending at position 1, which is the sub-string defined by <code>1*</code>, at the beginning of the <code>form</code> attribute.</p>
</li>
</ul>
<p>The <code>output</code> and <code>addon_output</code> attributes specify the output form of the address string for segments specified by the <code>effective</code> and <code>addon_effective</code> attributes, respectively. These output forms are used during address matching. The symbol <code>$</code> stands for the matched string, and other symbols represent themselves. In the preceding example:</p>
<ul>
<li>
<p>In <code>output="$"</code>, the <code>$</code> stands for the substring that was matched in the <code>effective</code> attribute.</p>
</li>
<li>
<p>In <code>addon_output="$ HIGHWAY"</code>, the <code>$ HIGHWAY</code> stands for the substring that was matched in the <code>addon_effective</code> attribute, followed by a space, followed by the word <span class="italic">HIGHWAY</span>.</p>
</li>
</ul>
<p>Using the <code>&lt;format&gt;</code> element in the preceding example, with <code>form="1* HWY 0*"</code>, the input string <span class="italic">'STATE HWY 580'</span> will have <code>effective=580</code>, <code>output=580</code>, <code>addon_effective=STATE</code>, and <code>addon_output=STATE HIGHWAY</code>.</p>
<p>The <code>&lt;format&gt;</code> element may also contain an <code>&lt;exception&gt;</code> element. The <code>&lt;exception&gt;</code> element specifies a string that has a valid form, but must be excluded from the address field. For example, in a <code>&lt;house_number&gt;</code> element with valid numbers <code>0*1*</code> (that is, any numeric digits followed by any alphabetic letters), specifying <code>&lt;exception form="0*TH" /&gt;</code> means that any house number with (or without) numeric digits and ending with "TH" must be excluded.</p>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<div id="SPATL836" class="sect2"><a id="sthref757"></a>
<h3 class="sect2"><span class="secnum">11.5.7</span> <a id="sthref758"></a><a id="sthref759"></a>GC_POI_&lt;suffix&gt; Table</h3>
<p>The GC_POI_&lt;suffix&gt; table (for example, GC_POI_US) stores point of interest (POI) information for the country or group of countries associated with the table name suffix. POIs include features such as airports, monuments, and parks. This table contains one or more rows for each point of interest. (For example, it can contain multiple rows for a POI if the POI is associated with multiple settlements.) The GC_POI_&lt;suffix&gt; table contains the columns shown in <a href="#CIHDBHHG">Table 11-13</a>.</p>
<div id="SPATL837" class="tblformal">
<p class="titleintable"><a id="sthref760"></a><a id="CIHDBHHG"></a>Table 11-13 GC_POI_&lt;suffix&gt; Table</p>
<table class="cellalignment740" title="GC_POI_&lt;suffix&gt; Table" summary="GC_POI_&lt;suffix&gt; table" dir="ltr">
<thead>
<tr class="cellalignment734">
<th class="cellalignment741" id="r1c1-t15">Column Name</th>
<th class="cellalignment741" id="r1c2-t15">Data Type</th>
<th class="cellalignment741" id="r1c3-t15">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment734">
<td class="cellalignment742" id="r2c1-t15" headers="r1c1-t15">
<p>POI_ID</p>
</td>
<td class="cellalignment742" headers="r2c1-t15 r1c2-t15">
<p>NUMBER</p>
</td>
<td class="cellalignment742" headers="r2c1-t15 r1c3-t15">
<p>ID number of the POI. (Required)</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r3c1-t15" headers="r1c1-t15">
<p>POI_NAME</p>
</td>
<td class="cellalignment742" headers="r3c1-t15 r1c2-t15">
<p>VARCHAR2(64)</p>
</td>
<td class="cellalignment742" headers="r3c1-t15 r1c3-t15">
<p>Name of the POI. (Required)</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r4c1-t15" headers="r1c1-t15">
<p>LANG_CODE</p>
</td>
<td class="cellalignment742" headers="r4c1-t15 r1c2-t15">
<p>VARCHAR2(3)</p>
</td>
<td class="cellalignment742" headers="r4c1-t15 r1c3-t15">
<p>3-letter ISO national language code for the language for the POI name. (Required)</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r5c1-t15" headers="r1c1-t15">
<p>FEATURE_CODE</p>
</td>
<td class="cellalignment742" headers="r5c1-t15 r1c2-t15">
<p>NUMBER</p>
</td>
<td class="cellalignment742" headers="r5c1-t15 r1c3-t15">
<p>Feature code for the POI, if the data vendor classifies POIs by category. (Optional)</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r6c1-t15" headers="r1c1-t15">
<p>HOUSE_NUMBER</p>
</td>
<td class="cellalignment742" headers="r6c1-t15 r1c2-t15">
<p>VARCHAR2(10)</p>
</td>
<td class="cellalignment742" headers="r6c1-t15 r1c3-t15">
<p>House number of the POI; may contain non-numeric characters. (Required)</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r7c1-t15" headers="r1c1-t15">
<p>STREET_NAME</p>
</td>
<td class="cellalignment742" headers="r7c1-t15 r1c2-t15">
<p>VARCHAR2(80)</p>
</td>
<td class="cellalignment742" headers="r7c1-t15 r1c3-t15">
<p>Road name of the POI. (Required)</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r8c1-t15" headers="r1c1-t15">
<p>SETTLEMENT_ID</p>
</td>
<td class="cellalignment742" headers="r8c1-t15 r1c2-t15">
<p>NUMBER(10)</p>
</td>
<td class="cellalignment742" headers="r8c1-t15 r1c3-t15">
<p>ID number of the settlement to which the POI belongs. (Required if the POI is associated with a settlement)</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r9c1-t15" headers="r1c1-t15">
<p>MUNICIPALITY_ID</p>
</td>
<td class="cellalignment742" headers="r9c1-t15 r1c2-t15">
<p>NUMBER(10)</p>
</td>
<td class="cellalignment742" headers="r9c1-t15 r1c3-t15">
<p>ID number of the municipality to which the POI belongs. (Required if the POI is associated with a municipality)</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r10c1-t15" headers="r1c1-t15">
<p>REGION_ID</p>
</td>
<td class="cellalignment742" headers="r10c1-t15 r1c2-t15">
<p>NUMBER(10)</p>
</td>
<td class="cellalignment742" headers="r10c1-t15 r1c3-t15">
<p>ID number of the region to which the POI belongs. (Required if the POI is associated with a region)</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r11c1-t15" headers="r1c1-t15">
<p>SETTLEMENT_NAME</p>
</td>
<td class="cellalignment742" headers="r11c1-t15 r1c2-t15">
<p>VARCHAR2(64)</p>
</td>
<td class="cellalignment742" headers="r11c1-t15 r1c3-t15">
<p>Name of the settlement to which the POI belongs. (Required if the POI is associated with a settlement)</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r12c1-t15" headers="r1c1-t15">
<p>MUNICIPALITY_NAME</p>
</td>
<td class="cellalignment742" headers="r12c1-t15 r1c2-t15">
<p>VARCHAR2(64)</p>
</td>
<td class="cellalignment742" headers="r12c1-t15 r1c3-t15">
<p>Name of the municipality to which the POI belongs. (Required if the POI is associated with a municipality)</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r13c1-t15" headers="r1c1-t15">
<p>REGION_NAME</p>
</td>
<td class="cellalignment742" headers="r13c1-t15 r1c2-t15">
<p>VARCHAR2(64)</p>
</td>
<td class="cellalignment742" headers="r13c1-t15 r1c3-t15">
<p>Name of the region to which the POI belongs. (Required if the POI is associated with a region)</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r14c1-t15" headers="r1c1-t15">
<p>POSTAL_CODE</p>
</td>
<td class="cellalignment742" headers="r14c1-t15 r1c2-t15">
<p>VARCHAR2(16)</p>
</td>
<td class="cellalignment742" headers="r14c1-t15 r1c3-t15">
<p>Postal code of the POI. (Required)</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r15c1-t15" headers="r1c1-t15">
<p>VANITY_CITY</p>
</td>
<td class="cellalignment742" headers="r15c1-t15 r1c2-t15">
<p>VARCHAR2(35)</p>
</td>
<td class="cellalignment742" headers="r15c1-t15 r1c3-t15">
<p>Name of the city popularly associated with the POI, if it is different from the actual city containing the POI. For example, the London Heathrow Airport is actually located in a town named Hayes, which is part of greater London, but people tend to associate the airport only with London. In this case, the VANITY_CITY value is <code>London</code>. (Optional)</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r16c1-t15" headers="r1c1-t15">
<p>ROAD_SEGMENT_ID</p>
</td>
<td class="cellalignment742" headers="r16c1-t15 r1c2-t15">
<p>NUMBER</p>
</td>
<td class="cellalignment742" headers="r16c1-t15 r1c3-t15">
<p>ID of the road segment on which the POI is located. (Required)</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r17c1-t15" headers="r1c1-t15">
<p>SIDE</p>
</td>
<td class="cellalignment742" headers="r17c1-t15 r1c2-t15">
<p>VARCHAR2(1)</p>
</td>
<td class="cellalignment742" headers="r17c1-t15 r1c3-t15">
<p>Side of the street on which the POI is located. Possible values: <code>L</code> (left) or <code>R</code> (right). (Required)</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r18c1-t15" headers="r1c1-t15">
<p>PERCENT</p>
</td>
<td class="cellalignment742" headers="r18c1-t15 r1c2-t15">
<p>NUMBER</p>
</td>
<td class="cellalignment742" headers="r18c1-t15 r1c3-t15">
<p>Percentage value at which the POI is located on the road. It is computed by dividing the distance from the street segment start point to the POI by the length of the street segment. (Required)</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r19c1-t15" headers="r1c1-t15">
<p>TELEPHONE_NUMBER</p>
</td>
<td class="cellalignment742" headers="r19c1-t15 r1c2-t15">
<p>VARCHAR2(20)</p>
</td>
<td class="cellalignment742" headers="r19c1-t15 r1c3-t15">
<p>Telephone number of the POI. (Optional)</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r20c1-t15" headers="r1c1-t15">
<p>LOC_LONG</p>
</td>
<td class="cellalignment742" headers="r20c1-t15 r1c2-t15">
<p>NUMBER</p>
</td>
<td class="cellalignment742" headers="r20c1-t15 r1c3-t15">
<p>Longitude coordinate value of the POI. (Required)</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r21c1-t15" headers="r1c1-t15">
<p>LOC_LAT</p>
</td>
<td class="cellalignment742" headers="r21c1-t15 r1c2-t15">
<p>NUMBER</p>
</td>
<td class="cellalignment742" headers="r21c1-t15 r1c3-t15">
<p>Latitude coordinate value of the POI. (Required)</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r22c1-t15" headers="r1c1-t15">
<p>COUNTRY_CODE_2</p>
</td>
<td class="cellalignment742" headers="r22c1-t15 r1c2-t15">
<p>VARCHAR2(2)</p>
</td>
<td class="cellalignment742" headers="r22c1-t15 r1c3-t15">
<p>2- letter ISO country code of the country to which the POI belongs. (Required)</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r23c1-t15" headers="r1c1-t15">
<p>PARTITION_ID</p>
</td>
<td class="cellalignment742" headers="r23c1-t15 r1c2-t15">
<p>NUMBER</p>
</td>
<td class="cellalignment742" headers="r23c1-t15 r1c3-t15">
<p>Partition key used for partitioning geocoder data by geographic boundaries. If the data is not partitioned, set the value to 1. (Required)</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="sect2" -->
<div id="SPATL838" class="sect2"><a id="sthref761"></a>
<h3 class="sect2"><span class="secnum">11.5.8</span> <a id="sthref762"></a>GC_POSTAL_CODE_&lt;suffix&gt; Table</h3>
<p>The GC_POSTAL_CODE_&lt;suffix&gt; table (for example, GC_POSTAL_CODE_US) stores postal code information for the country or group of countries associated with the table-name suffix, if postal codes are used in the address format. This table contains one or more rows for each postal code; it may contain multiple rows for a postal code when the postal code is associated with multiple settlements. The GC_POSTAL_CODE_&lt;suffix&gt; table contains the columns shown in <a href="#CIHCGHHG">Table 11-14</a>.</p>
<div id="SPATL839" class="tblformal">
<p class="titleintable"><a id="sthref763"></a><a id="CIHCGHHG"></a>Table 11-14 GC_POSTAL_CODE_&lt;suffix&gt; Table</p>
<table class="cellalignment740" title="GC_POSTAL_CODE_&lt;suffix&gt; Table" summary="GC_POSTAL_CODE_&lt;suffix&gt; table" dir="ltr">
<thead>
<tr class="cellalignment734">
<th class="cellalignment741" id="r1c1-t16">Column Name</th>
<th class="cellalignment741" id="r1c2-t16">Data Type</th>
<th class="cellalignment741" id="r1c3-t16">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment734">
<td class="cellalignment742" id="r2c1-t16" headers="r1c1-t16">
<p>POSTAL_CODE</p>
</td>
<td class="cellalignment742" headers="r2c1-t16 r1c2-t16">
<p>VARCHAR2(16)</p>
</td>
<td class="cellalignment742" headers="r2c1-t16 r1c3-t16">
<p>Postal code for the postal code area. (Required)</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r3c1-t16" headers="r1c1-t16">
<p>SETTLEMENT_NAME</p>
</td>
<td class="cellalignment742" headers="r3c1-t16 r1c2-t16">
<p>VARCHAR2(64)</p>
</td>
<td class="cellalignment742" headers="r3c1-t16 r1c3-t16">
<p>Name of the settlement to which the postal code belongs. (Required if the postal code is associated with a settlement)</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r4c1-t16" headers="r1c1-t16">
<p>MUNICIPALITY_NAME</p>
</td>
<td class="cellalignment742" headers="r4c1-t16 r1c2-t16">
<p>VARCHAR2(64)</p>
</td>
<td class="cellalignment742" headers="r4c1-t16 r1c3-t16">
<p>Name of the municipality to which the postal code belongs. (Required if the postal code is associated with a municipality)</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r5c1-t16" headers="r1c1-t16">
<p>REGION_NAME</p>
</td>
<td class="cellalignment742" headers="r5c1-t16 r1c2-t16">
<p>VARCHAR2(64)</p>
</td>
<td class="cellalignment742" headers="r5c1-t16 r1c3-t16">
<p>Name of the region to which the postal code belongs. (Required if the postal code is associated with a region)</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r6c1-t16" headers="r1c1-t16">
<p>LANG_CODE</p>
</td>
<td class="cellalignment742" headers="r6c1-t16 r1c2-t16">
<p>VARCHAR2(3)</p>
</td>
<td class="cellalignment742" headers="r6c1-t16 r1c3-t16">
<p>3-letter ISO national language code for the language associated with the area. (Required)</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r7c1-t16" headers="r1c1-t16">
<p>SETTLEMENT_ID</p>
</td>
<td class="cellalignment742" headers="r7c1-t16 r1c2-t16">
<p>NUMBER(10)</p>
</td>
<td class="cellalignment742" headers="r7c1-t16 r1c3-t16">
<p>ID number of the settlement to which the postal code belongs. (Required if the postal code is associated with a settlement)</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r8c1-t16" headers="r1c1-t16">
<p>MUNICIPALITY_ID</p>
</td>
<td class="cellalignment742" headers="r8c1-t16 r1c2-t16">
<p>NUMBER(10)</p>
</td>
<td class="cellalignment742" headers="r8c1-t16 r1c3-t16">
<p>ID number of the municipality to which the postal code belongs. (Required if the postal code is associated with a municipality)</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r9c1-t16" headers="r1c1-t16">
<p>REGION_ID</p>
</td>
<td class="cellalignment742" headers="r9c1-t16 r1c2-t16">
<p>NUMBER(10)</p>
</td>
<td class="cellalignment742" headers="r9c1-t16 r1c3-t16">
<p>ID number of the region to which the postal code belongs. (Required if the postal code is associated with a region)</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r10c1-t16" headers="r1c1-t16">
<p>CENTER_LONG</p>
</td>
<td class="cellalignment742" headers="r10c1-t16 r1c2-t16">
<p>NUMBER</p>
</td>
<td class="cellalignment742" headers="r10c1-t16 r1c3-t16">
<p>Longitude value of the center of the postal-code area. The center (longitude, latitude) value is set to the start- or end-point of the closest road segment to the center, depending on which point is closer. Oracle recommends that the CENTER_LONG and CENTER_LAT values be correctly set. If these values are not set, the longitude, latitude values of the geocoded result for an area will be (0,0). (Optional)</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r11c1-t16" headers="r1c1-t16">
<p>CENTER_LAT</p>
</td>
<td class="cellalignment742" headers="r11c1-t16 r1c2-t16">
<p>NUMBER</p>
</td>
<td class="cellalignment742" headers="r11c1-t16 r1c3-t16">
<p>Latitude value of the center of the area. (See the explanation for the CENTER_LONG column.) (Optional)</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r12c1-t16" headers="r1c1-t16">
<p>ROAD_SEGMENT_ID</p>
</td>
<td class="cellalignment742" headers="r12c1-t16 r1c2-t16">
<p>NUMBER(10)</p>
</td>
<td class="cellalignment742" headers="r12c1-t16 r1c3-t16">
<p>ID of the road segment to which the area center is set. This value must be set correctly if the geocoder is intended to work with the Oracle Spatial routing engine (described in <a href="sdo_route_server.htm#CCHGDJJD">Chapter 13</a>); otherwise, it can be set to any nonzero value, but it cannot be null. (Required)</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r13c1-t16" headers="r1c1-t16">
<p>COUNTRY_CODE_2</p>
</td>
<td class="cellalignment742" headers="r13c1-t16 r1c2-t16">
<p>VARCHAR2(2)</p>
</td>
<td class="cellalignment742" headers="r13c1-t16 r1c3-t16">
<p>2- letter ISO country code of the country to which the area belongs. (Required)</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r14c1-t16" headers="r1c1-t16">
<p>PARTITION_ID</p>
</td>
<td class="cellalignment742" headers="r14c1-t16 r1c2-t16">
<p>NUMBER</p>
</td>
<td class="cellalignment742" headers="r14c1-t16 r1c3-t16">
<p>Partition key used for partitioning geocoder data by geographic boundaries. If the data is not partitioned, set the value to 1. (Required)</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r15c1-t16" headers="r1c1-t16">
<p>NUM_STREETS</p>
</td>
<td class="cellalignment742" headers="r15c1-t16 r1c2-t16">
<p>NUMBER</p>
</td>
<td class="cellalignment742" headers="r15c1-t16 r1c3-t16">
<p>The number of streets inside this postal code area. (Optional)</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="sect2" -->
<div id="SPATL840" class="sect2"><a id="sthref764"></a>
<h3 class="sect2"><span class="secnum">11.5.9</span> <a id="sthref765"></a><a id="sthref766"></a>GC_ROAD_&lt;suffix&gt; Table</h3>
<p>The GC_ROAD_&lt;suffix&gt; table (for example, GC_ROAD_US) stores road information for the country associated with the table name suffix. A road is a collection of road segments with the same name in the same settlement area; a road segment is defined in <a href="#CIHHEBJI">Section 11.5.10</a>. The GC_ROAD_&lt;suffix&gt; table contains one or more rows for each road. (For example, it can contain multiple rows for a road if the road is associated with multiple settlements.) The GC_ROAD_&lt;suffix&gt; table contains the columns shown in <a href="#CIHFIAHD">Table 11-15</a>.</p>
<div id="SPATL841" class="tblformal">
<p class="titleintable"><a id="sthref767"></a><a id="CIHFIAHD"></a>Table 11-15 GC_ROAD_&lt;suffix&gt; Table</p>
<table class="cellalignment740" title="GC_ROAD_&lt;suffix&gt; Table" summary="GC_ROAD_&lt;suffix&gt; table" dir="ltr">
<thead>
<tr class="cellalignment734">
<th class="cellalignment741" id="r1c1-t17">Column Name</th>
<th class="cellalignment741" id="r1c2-t17">Data Type</th>
<th class="cellalignment741" id="r1c3-t17">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment734">
<td class="cellalignment742" id="r2c1-t17" headers="r1c1-t17">
<p>ROAD_ID</p>
</td>
<td class="cellalignment742" headers="r2c1-t17 r1c2-t17">
<p>NUMBER</p>
</td>
<td class="cellalignment742" headers="r2c1-t17 r1c3-t17">
<p>ID number of the road. (Required)</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r3c1-t17" headers="r1c1-t17">
<p>SETTLEMENT_ID</p>
</td>
<td class="cellalignment742" headers="r3c1-t17 r1c2-t17">
<p>NUMBER(10)</p>
</td>
<td class="cellalignment742" headers="r3c1-t17 r1c3-t17">
<p>ID number of the settlement to which the road belongs. (Required if the road is associated with a settlement)</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r4c1-t17" headers="r1c1-t17">
<p>MUNICIPALITY_ID</p>
</td>
<td class="cellalignment742" headers="r4c1-t17 r1c2-t17">
<p>NUMBER(10)</p>
</td>
<td class="cellalignment742" headers="r4c1-t17 r1c3-t17">
<p>ID number of the municipality to which the road belongs. (Required if the road is associated with a municipality)</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r5c1-t17" headers="r1c1-t17">
<p>PARENT_AREA_ID</p>
</td>
<td class="cellalignment742" headers="r5c1-t17 r1c2-t17">
<p>NUMBER(10)</p>
</td>
<td class="cellalignment742" headers="r5c1-t17 r1c3-t17">
<p>ID number of the parent area of the municipality to which the road belongs. (Required if the road is associated with a parent area)</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r6c1-t17" headers="r1c1-t17">
<p>LANG_CODE</p>
</td>
<td class="cellalignment742" headers="r6c1-t17 r1c2-t17">
<p>VARCHAR2(3)</p>
</td>
<td class="cellalignment742" headers="r6c1-t17 r1c3-t17">
<p>3-letter ISO national language code for the language for the road name. (Required)</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r7c1-t17" headers="r1c1-t17">
<p>NAME</p>
</td>
<td class="cellalignment742" headers="r7c1-t17 r1c2-t17">
<p>VARCHAR2(64)</p>
</td>
<td class="cellalignment742" headers="r7c1-t17 r1c3-t17">
<p>Name of the road, including the type (if any), the prefix (if any), and the suffix (if any). For example, <code>N Main St</code> as NAME. (Required)</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r8c1-t17" headers="r1c1-t17">
<p>BASE_NAME</p>
</td>
<td class="cellalignment742" headers="r8c1-t17 r1c2-t17">
<p>VARCHAR2(64)</p>
</td>
<td class="cellalignment742" headers="r8c1-t17 r1c3-t17">
<p>Name of the road, excluding the type (if any), the prefix (if any), and the suffix (if any). For example, <code>N Main St</code> as NAME, with <code>Main</code> as BASE_NAME. (Required)</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r9c1-t17" headers="r1c1-t17">
<p>PREFIX</p>
</td>
<td class="cellalignment742" headers="r9c1-t17 r1c2-t17">
<p>VARCHAR2(32)</p>
</td>
<td class="cellalignment742" headers="r9c1-t17 r1c3-t17">
<p>Prefix of the road name. For example, <code>N Main St</code> as NAME, with <code>N</code> as PREFIX. (Required if the road name has a prefix)</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r10c1-t17" headers="r1c1-t17">
<p>SUFFIX</p>
</td>
<td class="cellalignment742" headers="r10c1-t17 r1c2-t17">
<p>VARCHAR2(32)</p>
</td>
<td class="cellalignment742" headers="r10c1-t17 r1c3-t17">
<p>Suffix of the road name. For example, <code>Main St NW</code> as NAME, with <code>NW</code> as SUFFIX. (Required if the road name has a suffix)</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r11c1-t17" headers="r1c1-t17">
<p>STYPE_BEFORE</p>
</td>
<td class="cellalignment742" headers="r11c1-t17 r1c2-t17">
<p>VARCHAR2(32)</p>
</td>
<td class="cellalignment742" headers="r11c1-t17 r1c3-t17">
<p>Street type that precedes the base name. For example, <code>Avenue Victor Hugo</code> as NAME, with <code>Avenue</code> as STYPE_BEFORE and <code>Victor Hugo</code> as BASE_NAME. (Required if the road type precedes the base name)</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r12c1-t17" headers="r1c1-t17">
<p>STYPE_AFTER</p>
</td>
<td class="cellalignment742" headers="r12c1-t17 r1c2-t17">
<p>VARCHAR2(32)</p>
</td>
<td class="cellalignment742" headers="r12c1-t17 r1c3-t17">
<p>Street type that follows the base name. For example, <code>Main St</code> as NAME, with <code>St</code> as STYPE_AFTER and <code>Main</code> as BASE_NAME. (Required if the road type follows the base name)</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r13c1-t17" headers="r1c1-t17">
<p>STYPE_ATTACHED</p>
</td>
<td class="cellalignment742" headers="r13c1-t17 r1c2-t17">
<p>VARCHAR2(1)</p>
</td>
<td class="cellalignment742" headers="r13c1-t17 r1c3-t17">
<p>Contains <code>T</code> if the street type is in the same word with the street name; contains <code>F</code> if the street type is a separate word from the street name. For example, in a German street address of <code>123 Beethovenstrass</code>, the street type is <code>strass</code>, and it is in the same word with the street name, which is <code>Beethoven</code>. (Required)</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r14c1-t17" headers="r1c1-t17">
<p>START_HN</p>
</td>
<td class="cellalignment742" headers="r14c1-t17 r1c2-t17">
<p>NUMBER(5)</p>
</td>
<td class="cellalignment742" headers="r14c1-t17 r1c3-t17">
<p>The lowest house number on the road. It is returned when a specified house number is lower than this value.</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r15c1-t17" headers="r1c1-t17">
<p>CENTER_HN</p>
</td>
<td class="cellalignment742" headers="r15c1-t17 r1c2-t17">
<p>NUMBER(5)</p>
</td>
<td class="cellalignment742" headers="r15c1-t17 r1c3-t17">
<p>Leading numerical part of the center house number. The center house number is the left side house number at the start point of the center road segment, which is located in the center of the whole road. (See the explanation of house numbers after <a href="#CIHDEFHD">Table 11-16</a> in <a href="#CIHHEBJI">Section 11.5.10</a>.) It is returned when no house number is specified in an input address. (Required)</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r16c1-t17" headers="r1c1-t17">
<p>END_HN</p>
</td>
<td class="cellalignment742" headers="r16c1-t17 r1c2-t17">
<p>NUMBER(5)</p>
</td>
<td class="cellalignment742" headers="r16c1-t17 r1c3-t17">
<p>The highest house number on the road. It is returned when a specified house number is higher than this value.</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r17c1-t17" headers="r1c1-t17">
<p>START_HN_SIDE</p>
</td>
<td class="cellalignment742" headers="r17c1-t17 r1c2-t17">
<p>VARCHAR2(1)</p>
</td>
<td class="cellalignment742" headers="r17c1-t17 r1c3-t17">
<p>Side of the road of the lowest house number: <code>L</code> for left or <code>R</code> for right.</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r18c1-t17" headers="r1c1-t17">
<p>CENTER_HN_SIDE</p>
</td>
<td class="cellalignment742" headers="r18c1-t17 r1c2-t17">
<p>VARCHAR2(1)</p>
</td>
<td class="cellalignment742" headers="r18c1-t17 r1c3-t17">
<p>Side of the road of the center house number: <code>L</code> for left or <code>R</code> for right. The center house number is the left side house number at the start point of the center road segment, which is located in the center of the whole road. (See the explanation of house numbers after <a href="#CIHDEFHD">Table 11-16</a> in <a href="#CIHHEBJI">Section 11.5.10</a>.) (Required if there are houses on the road)</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r19c1-t17" headers="r1c1-t17">
<p>END_HN_SIDE</p>
</td>
<td class="cellalignment742" headers="r19c1-t17 r1c2-t17">
<p>VARCHAR2(1)</p>
</td>
<td class="cellalignment742" headers="r19c1-t17 r1c3-t17">
<p>Side of the road of the highest house number: <code>L</code> for left or <code>R</code> for right.</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r20c1-t17" headers="r1c1-t17">
<p>START_LONG</p>
</td>
<td class="cellalignment742" headers="r20c1-t17 r1c2-t17">
<p>NUMBER</p>
</td>
<td class="cellalignment742" headers="r20c1-t17 r1c3-t17">
<p>Longitude value of the lowest house number.</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r21c1-t17" headers="r1c1-t17">
<p>START_LAT</p>
</td>
<td class="cellalignment742" headers="r21c1-t17 r1c2-t17">
<p>NUMBER</p>
</td>
<td class="cellalignment742" headers="r21c1-t17 r1c3-t17">
<p>Latitude value of the lowest house number.</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r22c1-t17" headers="r1c1-t17">
<p>CENTER_LONG</p>
</td>
<td class="cellalignment742" headers="r22c1-t17 r1c2-t17">
<p>NUMBER</p>
</td>
<td class="cellalignment742" headers="r22c1-t17 r1c3-t17">
<p>Longitude value of the center house number. The center house number is the left side house number at the start point of the center road segment, which is located in the center of the whole road. (See the explanation of house numbers after <a href="#CIHDEFHD">Table 11-16</a> in <a href="#CIHHEBJI">Section 11.5.10</a>.) (Required)</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r23c1-t17" headers="r1c1-t17">
<p>CENTER_LAT</p>
</td>
<td class="cellalignment742" headers="r23c1-t17 r1c2-t17">
<p>NUMBER</p>
</td>
<td class="cellalignment742" headers="r23c1-t17 r1c3-t17">
<p>Latitude value of the center house number. (See also the explanation of the CENTER_LONG column.) (Required)</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r24c1-t17" headers="r1c1-t17">
<p>END_LONG</p>
</td>
<td class="cellalignment742" headers="r24c1-t17 r1c2-t17">
<p>NUMBER</p>
</td>
<td class="cellalignment742" headers="r24c1-t17 r1c3-t17">
<p>Longitude value of the highest house number.</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r25c1-t17" headers="r1c1-t17">
<p>END_LAT</p>
</td>
<td class="cellalignment742" headers="r25c1-t17 r1c2-t17">
<p>NUMBER</p>
</td>
<td class="cellalignment742" headers="r25c1-t17 r1c3-t17">
<p>Latitude value of the highest house number.</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r26c1-t17" headers="r1c1-t17">
<p>START_ROAD_SEG_ID</p>
</td>
<td class="cellalignment742" headers="r26c1-t17 r1c2-t17">
<p>NUMBER(5)</p>
</td>
<td class="cellalignment742" headers="r26c1-t17 r1c3-t17">
<p>ID number of the road segment at the start of the road.</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r27c1-t17" headers="r1c1-t17">
<p>CENTER_ROAD_SEG_ID</p>
</td>
<td class="cellalignment742" headers="r27c1-t17 r1c2-t17">
<p>NUMBER(5)</p>
</td>
<td class="cellalignment742" headers="r27c1-t17 r1c3-t17">
<p>ID number of the road segment at the center point of the road. (Required)</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r28c1-t17" headers="r1c1-t17">
<p>END_ROAD_SEG_ID</p>
</td>
<td class="cellalignment742" headers="r28c1-t17 r1c2-t17">
<p>NUMBER(5)</p>
</td>
<td class="cellalignment742" headers="r28c1-t17 r1c3-t17">
<p>ID number of the road segment at the end of the road.</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r29c1-t17" headers="r1c1-t17">
<p>POSTAL_CODE</p>
</td>
<td class="cellalignment742" headers="r29c1-t17 r1c2-t17">
<p>VARCHAR2(16)</p>
</td>
<td class="cellalignment742" headers="r29c1-t17 r1c3-t17">
<p>Postal code for the road. (Required)</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r30c1-t17" headers="r1c1-t17">
<p>COUNTRY_CODE_2</p>
</td>
<td class="cellalignment742" headers="r30c1-t17 r1c2-t17">
<p>VARCHAR2(2)</p>
</td>
<td class="cellalignment742" headers="r30c1-t17 r1c3-t17">
<p>2- letter ISO country code of the country to which the road belongs. (Required)</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r31c1-t17" headers="r1c1-t17">
<p>PARTITION_ID</p>
</td>
<td class="cellalignment742" headers="r31c1-t17 r1c2-t17">
<p>NUMBER</p>
</td>
<td class="cellalignment742" headers="r31c1-t17 r1c3-t17">
<p>Partition key used for partitioning geocoder data by geographic boundaries. If the data is not partitioned, set the value to 1. (Required)</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r32c1-t17" headers="r1c1-t17">
<p>CENTER_HN2</p>
</td>
<td class="cellalignment742" headers="r32c1-t17 r1c2-t17">
<p>VARCHAR2(10)</p>
</td>
<td class="cellalignment742" headers="r32c1-t17 r1c3-t17">
<p>The second part of the center house number. (See the explanation of house numbers after <a href="#CIHDEFHD">Table 11-16</a> in <a href="#CIHHEBJI">Section 11.5.10</a>.) (Required)</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="sect2" -->
<a id="CIHHEBJI"></a>
<div id="SPATL842" class="sect2">
<h3 class="sect2"><span class="secnum">11.5.10</span> <a id="sthref768"></a><a id="sthref769"></a>GC_ROAD_SEGMENT_&lt;suffix&gt; Table</h3>
<p>The GC_ROAD_SEGMENT_&lt;suffix&gt; table (for example, GC_ROAD_SEGMENT_US) stores road segment information for the country associated with the table name suffix. A road segment is the portion of a road between two continuous intersections along the road; an intersection occurs when roads meet or cross each other. A road segment can also be the portion of a road between the start (or end) of the road and its closest intersection along the road, or it can be the entire length of a road if there are no intersections along the road. The GC_ROAD_SEGMENT_&lt;suffix&gt; table contains one row for each road segment, and it contains the columns shown in <a href="#CIHDEFHD">Table 11-16</a>.</p>
<div id="SPATL843" class="tblformal">
<p class="titleintable"><a id="sthref770"></a><a id="CIHDEFHD"></a>Table 11-16 GC_ROAD_SEGMENT_&lt;suffix&gt; Table</p>
<table class="cellalignment740" title="GC_ROAD_SEGMENT_&lt;suffix&gt; Table" summary="GC_ROAD_SEGMENT_&lt;suffix&gt; table" dir="ltr">
<thead>
<tr class="cellalignment734">
<th class="cellalignment741" id="r1c1-t18">Column Name</th>
<th class="cellalignment741" id="r1c2-t18">Data Type</th>
<th class="cellalignment741" id="r1c3-t18">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment734">
<td class="cellalignment742" id="r2c1-t18" headers="r1c1-t18">
<p>ROAD_SEGMENT_ID</p>
</td>
<td class="cellalignment742" headers="r2c1-t18 r1c2-t18">
<p>NUMBER</p>
</td>
<td class="cellalignment742" headers="r2c1-t18 r1c3-t18">
<p>ID number of the road segment. (Required)</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r3c1-t18" headers="r1c1-t18">
<p>ROAD_ID</p>
</td>
<td class="cellalignment742" headers="r3c1-t18 r1c2-t18">
<p>NUMBER</p>
</td>
<td class="cellalignment742" headers="r3c1-t18 r1c3-t18">
<p>ID number of the road containing this road segment. (Required)</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r4c1-t18" headers="r1c1-t18">
<p>L_ADDR_FORMAT</p>
</td>
<td class="cellalignment742" headers="r4c1-t18 r1c2-t18">
<p>VARCHAR2(1)</p>
</td>
<td class="cellalignment742" headers="r4c1-t18 r1c3-t18">
<p>Left side address format. Specify <code>N</code> if there are one or more house numbers on the left side of the road segment; leave null if there is no house number on the left side of the road segment. (Required)</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r5c1-t18" headers="r1c1-t18">
<p>R_ADDR_FORMAT</p>
</td>
<td class="cellalignment742" headers="r5c1-t18 r1c2-t18">
<p>VARCHAR2(1)</p>
</td>
<td class="cellalignment742" headers="r5c1-t18 r1c3-t18">
<p>Right side address format. Specify <code>N</code> if there are one or more house numbers on the right side of the road segment; leave null if there is no house number on the right side of the road segment. (Required)</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r6c1-t18" headers="r1c1-t18">
<p>L_ADDR_SCHEME</p>
</td>
<td class="cellalignment742" headers="r6c1-t18 r1c2-t18">
<p>VARCHAR2(1)</p>
</td>
<td class="cellalignment742" headers="r6c1-t18 r1c3-t18">
<p>Numbering scheme for house numbers on the left side of the road segment: <code>O</code> (all odd numbers), <code>E</code> (all even numbers), or <code>M</code> (mixture of odd and even numbers). (Required)</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r7c1-t18" headers="r1c1-t18">
<p>R_ADDR_SCHEME</p>
</td>
<td class="cellalignment742" headers="r7c1-t18 r1c2-t18">
<p>VARCHAR2(1)</p>
</td>
<td class="cellalignment742" headers="r7c1-t18 r1c3-t18">
<p>Numbering scheme for house numbers on the right side of the road segment: <code>O</code> (all odd numbers), <code>E</code> (all even numbers), or <code>M</code> (mixture of odd and even numbers). (Required)</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r8c1-t18" headers="r1c1-t18">
<p>START_HN</p>
</td>
<td class="cellalignment742" headers="r8c1-t18 r1c2-t18">
<p>NUMBER(5)</p>
</td>
<td class="cellalignment742" headers="r8c1-t18 r1c3-t18">
<p>The lowest house number on this road segment. (Required)</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r9c1-t18" headers="r1c1-t18">
<p>END_HN</p>
</td>
<td class="cellalignment742" headers="r9c1-t18 r1c2-t18">
<p>NUMBER(5)</p>
</td>
<td class="cellalignment742" headers="r9c1-t18 r1c3-t18">
<p>The highest house number on this road segment. (Required)</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r10c1-t18" headers="r1c1-t18">
<p>L_START_HN</p>
</td>
<td class="cellalignment742" headers="r10c1-t18 r1c2-t18">
<p>NUMBER(5)</p>
</td>
<td class="cellalignment742" headers="r10c1-t18 r1c3-t18">
<p>The leading numerical part of the left side starting house number. (See the explanation of house numbers after this table.) (Required)</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r11c1-t18" headers="r1c1-t18">
<p>L_END_HN</p>
</td>
<td class="cellalignment742" headers="r11c1-t18 r1c2-t18">
<p>NUMBER(5)</p>
</td>
<td class="cellalignment742" headers="r11c1-t18 r1c3-t18">
<p>The leading numerical part of the left side ending house number. (See the explanation of house numbers after this table.) (Required)</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r12c1-t18" headers="r1c1-t18">
<p>R_START_HN</p>
</td>
<td class="cellalignment742" headers="r12c1-t18 r1c2-t18">
<p>NUMBER(5)</p>
</td>
<td class="cellalignment742" headers="r12c1-t18 r1c3-t18">
<p>The leading numerical part of the right side starting house number. (See the explanation of house numbers after this table.) (Required)</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r13c1-t18" headers="r1c1-t18">
<p>R_END_HN</p>
</td>
<td class="cellalignment742" headers="r13c1-t18 r1c2-t18">
<p>NUMBER(5)</p>
</td>
<td class="cellalignment742" headers="r13c1-t18 r1c3-t18">
<p>The leading numerical part of the right side ending house number. (See the explanation of house numbers after this table.) (Required)</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r14c1-t18" headers="r1c1-t18">
<p>POSTAL_CODE</p>
</td>
<td class="cellalignment742" headers="r14c1-t18 r1c2-t18">
<p>VARCHAR2(16)</p>
</td>
<td class="cellalignment742" headers="r14c1-t18 r1c3-t18">
<p>Postal code for the road segment. If the left side and right side of the road segment belong to two different postal codes, create two rows for the road segment with identical values in all columns except for POSTAL_CODE. (Required)</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r15c1-t18" headers="r1c1-t18">
<p>GEOMETRY</p>
</td>
<td class="cellalignment742" headers="r15c1-t18 r1c2-t18">
<p>SDO_GEOMETRY</p>
</td>
<td class="cellalignment742" headers="r15c1-t18 r1c3-t18">
<p>Spatial geometry object representing the road segment. (Required)</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r16c1-t18" headers="r1c1-t18">
<p>COUNTRY_CODE_2</p>
</td>
<td class="cellalignment742" headers="r16c1-t18 r1c2-t18">
<p>VARCHAR2(2)</p>
</td>
<td class="cellalignment742" headers="r16c1-t18 r1c3-t18">
<p>2- letter ISO country code of the country to which the road segment belongs. (Required)</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r17c1-t18" headers="r1c1-t18">
<p>PARTITION_ID</p>
</td>
<td class="cellalignment742" headers="r17c1-t18 r1c2-t18">
<p>NUMBER</p>
</td>
<td class="cellalignment742" headers="r17c1-t18 r1c3-t18">
<p>Partition key used for partitioning geocoder data by geographic boundaries. If the data is not partitioned, set the value to 1. (Required)</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r18c1-t18" headers="r1c1-t18">
<p>L_START_HN2</p>
</td>
<td class="cellalignment742" headers="r18c1-t18 r1c2-t18">
<p>VARCHAR2(10)</p>
</td>
<td class="cellalignment742" headers="r18c1-t18 r1c3-t18">
<p>The second part of the left side starting house number. (See the explanation of house numbers after this table.) (Required if the left side starting house number has a second part)</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r19c1-t18" headers="r1c1-t18">
<p>L_END_HN2</p>
</td>
<td class="cellalignment742" headers="r19c1-t18 r1c2-t18">
<p>VARCHAR2(10)</p>
</td>
<td class="cellalignment742" headers="r19c1-t18 r1c3-t18">
<p>The second part of the left side ending house number. (See the explanation of house numbers after this table.) (Required if the left side ending house number has a second part)</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r20c1-t18" headers="r1c1-t18">
<p>R_START_HN2</p>
</td>
<td class="cellalignment742" headers="r20c1-t18 r1c2-t18">
<p>VARCHAR2(10)</p>
</td>
<td class="cellalignment742" headers="r20c1-t18 r1c3-t18">
<p>The second part of the right side starting house number. (See the explanation of house numbers after this table.) (Required if the right side starting house number has a second part)</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r21c1-t18" headers="r1c1-t18">
<p>R_END_HN2</p>
</td>
<td class="cellalignment742" headers="r21c1-t18 r1c2-t18">
<p>VARCHAR2(10)</p>
</td>
<td class="cellalignment742" headers="r21c1-t18 r1c3-t18">
<p>The second part of the right side ending house number. (See the explanation of house numbers after this table.) (Required if the right side ending house number has a second part)</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<p>A house number is a descriptive part of an address that helps identify the location of a establishment along a road segment. A house number is divided into two parts: the leading numerical part and the second part, which is the rest of the house number. The leading numerical part is the numerical part of the house number that starts from the beginning of the complete house number string and ends just before the first non-numeric character (if present). If the house number contains non-numeric characters, the second part of the house number is the portion from the first non-numeric character through the last character of the string. For example, if the house number is <code>123</code>, the leading numerical part is <code>123</code> and the second part is null; however, if the house number is <code>123A23</code>, the leading numerical part is <code>123</code> and the second part is <code>A23</code>.</p>
<p>The starting house number is the house number at the start point of a road segment; the start point of the road segment is the first shape point of the road segment geometry. The ending house number is the house number at the end point of a road segment; the end point of the road segment is the last shape point of the road segment geometry. The left and right side starting house numbers do not need to be lower than the left and right side ending house numbers. The house number attributes in the data tables follow these conventions in locating establishments along road segments.</p>
</div>
<!-- class="sect2" -->
<a id="CIHJCAFA"></a>
<div id="SPATL844" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">11.5.11</span> <a id="sthref771"></a>Indexes on Tables for Geocoding</h3>
<p>To use the vendor-supplied tables for geocoding, indexes must be created on many of the tables, and the names of these indexes must follow certain requirements.</p>
<p><a href="#CIHGHBGD">Example 11-5</a> lists the format of CREATE INDEX statements that create the required indexes. In each statement, you must use the index name, table name, column names, and (if multiple columns are indexed) sequence of column names as shown in <a href="#CIHGHBGD">Example 11-5</a>, except that you must replace all occurrences of <span class="italic">&lt;suffix&gt;</span> with the appropriate string (for example, <code>US</code> for the United States). Note that the first index in the example is a spatial index. Optionally, you can also include other valid keywords and clauses in the CREATE INDEX statements.</p>
<div id="SPATL845" class="example">
<p class="titleinexample"><a id="CIHGHBGD"></a>Example 11-5 Required Indexes on Tables for Geocoding</p>
<pre>
CREATE INDEX idx_&lt;suffix&gt;_road_geom ON gc_road_segment_&lt;suffix&gt; (geometry) INDEXTYPE IS mdsys.spatial_index;
CREATE INDEX idx_&lt;suffix&gt;_road_seg_rid ON gc_road_segment_&lt;suffix&gt; (road_id, start_hn, end_hn);
CREATE INDEX idx_&lt;suffix&gt;_road_id ON gc_road_&lt;suffix&gt; (road_id);
CREATE INDEX idx_&lt;suffix&gt;_road_setbn ON gc_road_&lt;suffix&gt; (settlement_id, base_name);
CREATE INDEX idx_&lt;suffix&gt;_road_munbn ON gc_road_&lt;suffix&gt; (municipality_id, base_name);
CREATE INDEX idx_&lt;suffix&gt;_road_parbn ON gc_road_&lt;suffix&gt; (parent_area_id, country_code_2, base_name);
CREATE INDEX idx_&lt;suffix&gt;_road_setbnsd ON gc_road_&lt;suffix&gt; (settlement_id, soundex(base_name));
CREATE INDEX idx_&lt;suffix&gt;_road_munbnsd ON gc_road_&lt;suffix&gt; (municipality_id, soundex(base_name));
CREATE INDEX idx_&lt;suffix&gt;_road_parbnsd ON gc_road_&lt;suffix&gt; (parent_area_id, country_code_2, soundex(base_name));
CREATE INDEX idx_&lt;suffix&gt;_inters ON gc_intersection_&lt;suffix&gt; (country_code_2, road_id_1, road_id_2);
CREATE INDEX idx_&lt;suffix&gt;_area_name_id ON gc_area_&lt;suffix&gt; (country_code_2, area_name, admin_level);
CREATE INDEX idx_&lt;suffix&gt;_area_id_name ON gc_area_&lt;suffix&gt; (area_id, area_name, country_code_2);
CREATE INDEX idx_&lt;suffix&gt;_poi_name ON gc_poi_&lt;suffix&gt; (country_code_2, name);
CREATE INDEX idx_&lt;suffix&gt;_poi_setnm ON gc_poi_&lt;suffix&gt; (country_code_2, settlement_id, name);
CREATE INDEX idx_&lt;suffix&gt;_poi_ munnm ON gc_poi_&lt;suffix&gt; (country_code_2, municipality_id, name);
CREATE INDEX idx_&lt;suffix&gt;_poi_ regnm ON gc_poi_&lt;suffix&gt; (country_code_2, region_id, name);
CREATE INDEX idx_&lt;suffix&gt;_ postcode ON gc_postal_code_&lt;suffix&gt; (country_code_2, postal_code);
CREATE INDEX idx_&lt;suffix&gt;_addrpt_addr ON gc_address_point_&lt;suffix&gt; (road_segment_id, road_id, house_number, side);
</pre></div>
<!-- class="example" --></div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="CIHIACJA"></a>
<div id="SPATL846" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1"><span class="secnum">11.6</span> Installing the Profile Tables</h2>
<p>The Oracle Geocoder profile tables are typically supplied by a data provider. Use the data provider's profile tables for geocoding whenever they are available. For users building their own geocoder schema, Oracle provides sample GC_COUNTRY_PROFILE, GC_PARSER_PROFILES, and GC_PARSER_PROFILEAFS tables; however, you should install these Oracle-supplied profile tables <span class="italic">only</span> if profile tables are <span class="italic">not</span> supplied with the data tables.</p>
<p>The Oracle-supplied tables contain parser profiles for a limited number of countries. If profiles for your country or group of countries of interest are not included, you will need to manually add them; and for a quick start, you can copy the parser profiles of a country with a similar address format to your country of interest, and edit these profiles where necessary. If your parser profiles of interest are included in the Oracle-supplied tables, you can use them directly or update them if necessary. No sample country profiles are provided, so you will need to add your own</p>
<p>To install and query the Oracle-supplied profile tables, perform the following steps:</p>
<ol>
<li>
<p>Log on to your database as the geocoder user. The geocoder user is the user under whose schema the geocoder schema will be loaded.</p>
</li>
<li>
<p>Create the GC_COUNTRY_PROFILE, GC_PARSER_PROFILES, and GC_PARSER_PROFILEAFS tables by executing the <a href="sdo_geocode_ref.htm#CACDBHHC">SDO_GCDR.CREATE_PROFILE_TABLES</a> procedure:</p>
<pre>
SQL&gt; EXECUTE SDO_GCDR.CREATE_PROFILE_TABLES;
</pre></li>
<li>
<p>Populate the GC_PARSER_PROFILES and GC_PARSER_PROFILEAFS tables by running the <code>sdogcprs.sql</code> script in the <code>$ORACLE_HOME/md/admin/</code> directory. For example:</p>
<pre>
SQL&gt; @$ORACLE_HOME/md/admin/sdogcprs.sql
</pre></li>
<li>
<p>Query the profile tables to determine if parser profiles for your country of interest are supplied, by checking if its country code is included in the output of the following statements:</p>
<pre>
SQL&gt; SELECT DISTINCT(country_code) FROM gc_parser_profiles ORDER BY country_code;
SQL&gt; SELECT DISTINCT(country_code) FROM gc_parser_profileafs ORDER BY country_code;
</pre></li>
</ol>
</div>
<!-- class="sect1" -->
<a id="CIHFABDJ"></a>
<div id="SPATL847" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1"><span class="secnum">11.7</span> Using the Geocoding Service (XML API)</h2>
<p>In addition to the SQL API, Oracle Spatial also provides an XML API for a geocoding service that enables you to geocode addresses. A Java geocoder application engine performs international address standardization, geocoding, and POI matching, by querying geocoder data stored in the Oracle database. The support for unparsed addresses adds flexibility and convenience to customer applications.</p>
<p>This geocoding service is implemented as a Java 2 Enterprise Edition (J2EE) Web application that you can deploy in a WebLogic Server, Oracle Application Server, or standalone Oracle Application Server Containers for J2EE (OC4J) environment.</p>
<ul>
<li>
<p>If the geocoding service is deployed in a standalone OC4J, the user name is <code>oc4jadmin</code> and the password is the administrator password you specified when you installed the OC4J instance.</p>
</li>
<li>
<p>If the geocoding service is deployed in a full Oracle Application Server, you must have created a security user in the OC4J instance where the geocoding service is running, and mapped the security user to the geocoding service's built-in security role <code>GC_ADMIN_ROLE</code>. After you have completed these tasks through Enterprise Manager, you can then use that security user's name and password to log in as the geocoding service administrator.</p>
</li>
</ul>
<p><a href="#CIHCBEHA">Figure 11-1</a> shows the basic flow of action with the geocoding service: a client locates a remote geocoding service instance, sends a geocoding request, and processes the response returned by the geocoding service instance.</p>
<div id="SPATL848" class="figure">
<p class="titleinfigure"><a id="CIHCBEHA"></a>Figure 11-1 Basic Flow of Action with the Spatial Geocoding Service</p>
<img width="573" height="399" src="img/basic_flow_geocode.jpg" alt="Description of Figure 11-1 follows" /><br />
<a id="sthref772" href="img_text/basic_flow_geocode.htm">Description of "Figure 11-1 Basic Flow of Action with the Spatial Geocoding Service"</a><br />
<br /></div>
<!-- class="figure" -->
<p>As shown in <a href="#CIHCBEHA">Figure 11-1</a>:</p>
<ol>
<li>
<p>The client sends an XML geocoding request, containing one or more input addresses to be geocoded, to the geocoding service using the HTTP protocol.</p>
</li>
<li>
<p>The geocoding service parses the input request and looks up the input address in the database.</p>
</li>
<li>
<p>The geocoding service sends the geocoded result in XML format to the client using the HTTP protocol.</p>
</li>
</ol>
<p>After you load the geocoder schema into the database, you must configure the J2EE geocoder before it can be used, as explained in <a href="#CIHHBEJC">Section 11.7.1</a></p>
<a id="CIHHBEJC"></a>
<div id="SPATL849" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">11.7.1</span> Deploying and Configuring the J2EE Geocoder</h3>
<p>The J2EE geocoder processes geocoding requests and generates responses. To enable this geocoding service, the geocoder.ear file (in <code>$ORACLE_HOME/md/jlib</code>) must be deployed using the Oracle WebLogic Server, Oracle Application Server (OracleAS), or a standalone installation of Oracle Application Server Containers for J2EE (OC4J). To deploy and configure the geocoding service, follow these steps.</p>
<ol>
<li>
<p>Deploy the geocoder using Oracle WebLogic Server, Oracle Application Server, or OC4J:</p>
<ul>
<li>
<p><span class="bold">Using Oracle WebLogic Server</span>: Unpack the geocoder.ear file in your <code>$ORACLE_HOME/md/jlib</code> directory. Rename the geocoder.ear file and unpack its contents into a directory called <code>../geocoder.ear</code> . Rename the <code>web.war</code> file now found under the <code>$geocoder.ear/ directory</code> and unpack its contents into a subdirectory called <code>../web.war</code> . Your directory structure should therefore be <code>$geocoder.ear/web.war/</code> .</p>
<p>After unpacking the geocoder.ear and web.war files, copy the <code>xmlparserv2.jar</code> file in your <code>$ORACLE_HOME/LIB/</code> directory into the <code>$geocoder.ear/web.war/WEB-INF/lib/</code> directory.</p>
<p>To deploy the <code>geocoder.ear</code> file, log on to the WLS console (for example, <code>http://</code><code><span class="codeinlineitalic">&lt;hostname&gt;</span></code><code>:7001/console</code>); and from Deployments, install the <code>geocoder.ear</code> file, accepting the name <code>geocoder</code> for the deployment and choosing the option to make the deployment accessible from a specified location.</p>
</li>
<li>
<p><span class="bold">Using Oracle Application Server or OC4J</span>: Deploy the <code>geocoder.ear</code> file in your <code>$ORACLE_HOME/md/jlib directory</code> using the OracleAS or the standalone OC4J Application Server Control (for example, <code>http://</code><code><span class="codeinlineitalic">&lt;hostname&gt;</span></code><code>:8888/em</code>). You can deploy the <code>geocoder.ear</code> file in an existing OC4J instance, or you can create a new OC4J instance for the geocoder. In either case, enter <code>geocoder</code> for the Application Name during deployment.</p>
</li>
</ul>
</li>
<li>
<p>Launch the Oracle Geocoder welcome page in a Web browser using the URL <code>http://</code><code><span class="codeinlineitalic">&lt;hostname&gt;:&lt;port&gt;</span></code><code>/geocoder</code> . On the welcome page, select the Administration link and enter the administrator (weblogic or oc4jadmin) user name and password.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
If you are using WebLogic Server and if you are <span class="italic">not</span> using the default WebLogic administrator user name, you will need to edit the <code>weblogic.xml</code> file located in the <code>$geocoder.ear/web.war/WEB-INF/</code> directory. Replace <code>&lt;principal-name&gt;weblogic&lt;/principal-name&gt;</code> with your WebLogic Server administrator user name, for example, <code>&lt;principal-name&gt;my_weblogic_admin&lt;/principal-name&gt;</code>.</div>
</li>
<li>
<p>Modify the geocoder configuration file (geocodercfg.xml). Uncomment at least one <code>&lt;geocoder&gt;</code> element, and change the <code>&lt;database&gt;</code> element attributes of that <code>&lt;geocoder&gt;</code> element to reflect the configuration of your database. For information about this file, see <a href="#CIHFFDHH">Section 11.7.1.1</a>.</p>
</li>
<li>
<p>Save the changes to the file, and restart the geocoder.</p>
<p>If the welcome page is not displayed, ensure that the newly deployed geocoding service was successfully started. It is assumed that you are running WebLogic Server 10.3.1.0 or later with an Oracle Database Release 11.2 or later <code>geocoder.ear</code> file; or that you are running Oracle AS or OC4J 10.1.3 or later with an Oracle 11<span class="italic">g</span> or later <code>geocoder.ear</code> file.</p>
</li>
<li>
<p>Test the database connection by going to the welcome page at URL <code>http://</code><code><span class="codeinlineitalic">&lt;hostname&gt;:&lt;port&gt;</span></code><code>/geocoder</code> and running the international postal address parsing/geocoding demo and the XML geocoding request page. (These demos require geocoder data for the United States.)</p>
<p>Examples are available to demonstrate various capabilities of the geocoding service. Using the examples is the best way to learn the XML API, which is described in <a href="#CIHCBDFA">Section 11.7.2</a>.</p>
</li>
</ol>
<a id="CIHFFDHH"></a>
<div id="SPATL850" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3"><span class="secnum">11.7.1.1</span> Configuring the geocodercfg.xml File</h4>
<p>You will need to edit the <code>&lt;database&gt;</code> element in the default <code>geocodercfg.xml</code> file that is included with Spatial, to specify the database and schema where the geocoding data is loaded.</p>
<p>In this file, each <code>&lt;geocoder&gt;</code> element defines the geocoder for the database in which the geocoder schema resides. The <code>&lt;database&gt;</code> element defines the database connection for the geocoder. In Oracle 11<span class="italic">g</span> or later, there are two ways to define a database connection: by providing the JDBC database connection parameters, or by providing the JNDI name (<code>container_ds</code>) of a predefined container data source.</p>
<p><a href="#CIHCHCGJ">Example 11-6</a> illustrates two different ways in which a <code>&lt;database&gt;</code> element can be defined. The first definition specifies a JDBC connection; the second definition uses the JNDI name of a predefined container data source.</p>
<div id="SPATL851" class="example">
<p class="titleinexample"><a id="CIHCHCGJ"></a>Example 11-6 &lt;database&gt; Element Definitions</p>
<pre>
&lt;database name="gcdatabase"
          host="gisserver.us.oracle.com"
          port="1521"
          sid="orcl"
          mode="thin"
          user="geocoder_us"
          password="geocoder_us"
          load_db_parser_profiles="true" /&gt;
 
&lt;database container_ds="jdbc/gc_europe"
          load_db_parser_profiles="true" /&gt;
</pre></div>
<!-- class="example" -->
<p>The attributes of the <code>&lt;database&gt;</code> element are as follows</p>
<ul>
<li>
<p><code>name</code> is a descriptive name for the database connection; it is not used to connect to the database.</p>
</li>
<li>
<p><code>host</code>, <code>port</code>, and <code>sid</code> identify the database.</p>
</li>
<li>
<p><code>mode</code> identifies the type of JDBC driver to use for the connection.</p>
</li>
<li>
<p><code>user</code> and <code>password</code> are the user name and password for the database user under whose schema the geocoding data is stored.</p>
</li>
<li>
<p><code>load_db_parser_profiles</code> specifies whether to load the address parser profiles from the specified database connection. If <code>true</code>, the address parser-profiles are loaded from the geocoder schema; otherwise, the parser profiles are loaded from the application at <code>../applications/geocoder/web/WEB-INF/parser_profiles/</code><code><span class="codeinlineitalic">&lt;country-name&gt;</span></code><code>.ppr</code> (for example, usa.ppr). Before Oracle 11<span class="italic">g</span>, parser profiles were loaded from the application only. This parameter should be set to <code>true</code>.</p>
</li>
<li>
<p><code>container_ds</code> specifies the JNDI name for a predefined data source.</p>
</li>
</ul>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="CIHCBDFA"></a>
<div id="SPATL852" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">11.7.2</span> <a id="sthref773"></a>Geocoding Request XML Schema Definition and Example</h3>
<p>For a geocoding request (HTTP GET or POST method), it is assumed the request has a parameter named <code>xml_request</code> whose value is a string containing the XML document for the request. The input XML document describes the input addresses that need to be geocoded. One XML request can contain one or more input addresses. Several internationalized address formats are available for describing the input addresses. (The input XML API also supports reverse geocoding, that is, a longitude/latitude point to a street address.)</p>
<p>The XML schema definition (XSD) for a geocoding request is as follows:</p>
<pre>
&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;!-- Schema for an XML geocoding request that takes one or more input_locations and supports reverse geocoding using the input_location's attributes --&gt;
&lt;xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified"&gt;
  &lt;xsd:complexType name="address_lineType"&gt;
    &lt;xsd:attribute name="value" type="xsd:string" use="required"/&gt;
  &lt;/xsd:complexType&gt;
  &lt;xsd:complexType name="address_listType"&gt;
    &lt;xsd:sequence&gt;
      &lt;xsd:element name="input_location" type="input_locationType"
         maxOccurs="unbounded"/&gt;
    &lt;/xsd:sequence&gt;
  &lt;/xsd:complexType&gt;
  &lt;xsd:complexType name="gdf_formType"&gt;
    &lt;xsd:attribute name="name" type="xsd:string"/&gt;
    &lt;xsd:attribute name="street" type="xsd:string"/&gt;
    &lt;xsd:attribute name="intersecting_street" type="xsd:string"/&gt;
    &lt;xsd:attribute name="builtup_area" type="xsd:string"/&gt;
    &lt;xsd:attribute name="order8_area" type="xsd:string"/&gt;
    &lt;xsd:attribute name="order2_area" type="xsd:string"/&gt;
    &lt;xsd:attribute name="order1_area" type="xsd:string"/&gt;
    &lt;xsd:attribute name="country" type="xsd:string"/&gt;
    &lt;xsd:attribute name="postal_code" type="xsd:string"/&gt;
    &lt;xsd:attribute name="postal_addon_code" type="xsd:string"/&gt;
  &lt;/xsd:complexType&gt;
  &lt;xsd:complexType name="gen_formType"&gt;
    &lt;xsd:attribute name="name" type="xsd:string"/&gt;
    &lt;xsd:attribute name="street" type="xsd:string"/&gt;
    &lt;xsd:attribute name="intersecting_street" type="xsd:string"/&gt;
    &lt;xsd:attribute name="sub_area" type="xsd:string"/&gt;
    &lt;xsd:attribute name="city" type="xsd:string"/&gt;
    &lt;xsd:attribute name="region" type="xsd:string"/&gt;
    &lt;xsd:attribute name="country" type="xsd:string"/&gt;
    &lt;xsd:attribute name="postal_code" type="xsd:string"/&gt;
    &lt;xsd:attribute name="postal_addon_code" type="xsd:string"/&gt;
  &lt;/xsd:complexType&gt;
  &lt;xsd:element name="geocode_request"&gt;
    &lt;xsd:complexType&gt;
      &lt;xsd:sequence&gt;
        &lt;xsd:element name="address_list" type="address_listType"/&gt;
      &lt;/xsd:sequence&gt;
      &lt;xsd:attribute name="vendor" type="xsd:string"/&gt;
    &lt;/xsd:complexType&gt;
  &lt;/xsd:element&gt;
  &lt;xsd:complexType name="input_addressType"&gt;
    &lt;xsd:choice&gt;
      &lt;xsd:element name="us_form1" type="us_form1Type"/&gt;
      &lt;xsd:element name="us_form2" type="us_form2Type"/&gt;
      &lt;xsd:element name="gdf_form" type="gdf_formType"/&gt;
      &lt;xsd:element name="gen_form" type="gen_formType"/&gt;
      &lt;xsd:element name="unformatted" type="unformattedType"/&gt;
    &lt;/xsd:choice&gt;
    &lt;xsd:attribute name="match_mode" default="relax_postal_code"&gt;
      &lt;xsd:simpleType&gt;
        &lt;xsd:restriction base="xsd:NMTOKEN"&gt;
          &lt;xsd:enumeration value="exact"/&gt;
          &lt;xsd:enumeration value="relax_street_type"/&gt;
          &lt;xsd:enumeration value="relax_poi_name"/&gt;
          &lt;xsd:enumeration value="relax_house_number"/&gt;
          &lt;xsd:enumeration value="relax_base_name"/&gt;
          &lt;xsd:enumeration value="relax_postal_code"/&gt;
          &lt;xsd:enumeration value="relax_builtup_area"/&gt;
          &lt;xsd:enumeration value="relax_all"/&gt;
          &lt;xsd:enumeration value="DEFAULT"/&gt;
        &lt;/xsd:restriction&gt;
      &lt;/xsd:simpleType&gt;
    &lt;/xsd:attribute&gt;
  &lt;/xsd:complexType&gt;
  &lt;xsd:complexType name="input_locationType"&gt;
    &lt;xsd:sequence&gt;
      &lt;xsd:element name="input_address" type="input_addressType"
         minOccurs="0"/&gt;
    &lt;/xsd:sequence&gt;
    &lt;xsd:attribute name="id" type="xsd:string"/&gt;
    &lt;xsd:attribute name="country" type="xsd:string"/&gt;
    &lt;xsd:attribute name="longitude" type="xsd:string"/&gt;
    &lt;xsd:attribute name="latitude" type="xsd:string"/&gt;
    &lt;xsd:attribute name="x" type="xsd:string"/&gt;
    &lt;xsd:attribute name="y" type="xsd:string"/&gt;
    &lt;xsd:attribute name="srid" type="xsd:string"/&gt;
    &lt;xsd:attribute name="multimatch_number" type="xsd:string" default="1000"/&gt;
  &lt;/xsd:complexType&gt;
  &lt;xsd:complexType name="unformattedType"&gt;
    &lt;xsd:sequence&gt;
      &lt;xsd:element name="address_line" type="address_lineType"
         maxOccurs="unbounded"/&gt;
    &lt;/xsd:sequence&gt;
    &lt;xsd:attribute name="country" type="xsd:string"/&gt;
  &lt;/xsd:complexType&gt;
  &lt;xsd:complexType name="us_form1Type"&gt;
    &lt;xsd:attribute name="name" type="xsd:string"/&gt;
    &lt;xsd:attribute name="street" type="xsd:string"/&gt;
    &lt;xsd:attribute name="intersecting_street" type="xsd:string"/&gt;
    &lt;xsd:attribute name="lastline" type="xsd:string"/&gt;
  &lt;/xsd:complexType&gt;
  &lt;xsd:complexType name="us_form2Type"&gt;
    &lt;xsd:attribute name="name" type="xsd:string"/&gt;
    &lt;xsd:attribute name="street" type="xsd:string"/&gt;
    &lt;xsd:attribute name="intersecting_street" type="xsd:string"/&gt;
    &lt;xsd:attribute name="city" type="xsd:string"/&gt;
    &lt;xsd:attribute name="state" type="xsd:string"/&gt;
    &lt;xsd:attribute name="zip_code" type="xsd:string"/&gt;
  &lt;/xsd:complexType&gt;
&lt;/xsd:schema&gt;
</pre>
<p><a href="#CIHFGGCB">Example 11-7</a> is a request to geocode several three addresses (representing two different actual physical addresses), using different address formats and an unformatted address.</p>
<div id="SPATL853" class="example">
<p class="titleinexample"><a id="CIHFGGCB"></a>Example 11-7 Geocoding Request (XML API)</p>
<pre>
&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;geocode_request xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../geocode_request.xsd"&gt;
  &lt;address_list&gt;
    &lt;input_location id="1"&gt;
      &lt;input_address&gt;
        &lt;us_form2 name="Oracle" street="500 Oracle Parkway" city="Redwood City"
           state="CA" zip_code="94021"/&gt;
      &lt;/input_address&gt;
    &lt;/input_location&gt;
    &lt;input_location id="2"&gt;
      &lt;input_address&gt;
 &lt;gdf_form street="1 Oracle Drive" builtup_area="Nashua" order1_area="NH"
        postal_code="03062" country="US"/&gt;
      &lt;/input_address&gt;
    &lt;/input_location&gt;
    &lt;input_location id="3"&gt;
      &lt;input_address&gt;
&lt;gen_form street="1 Oracle Drive" city="Nashua" region="NH" postal_code="03062" country="US"/&gt;
      &lt;/input_address&gt;
    &lt;/input_location&gt;
    &lt;input_location id="4"&gt;
      &lt;input_address&gt;
        &lt;unformatted country="UNITED STATES"&gt;
          &lt;address_line value="Oracle NEDC"/&gt;
          &lt;address_line value="1 Oracle drive "/&gt;
          &lt;address_line value="Nashua "/&gt;
          &lt;address_line value="NH"/&gt;
        &lt;/unformatted&gt;
      &lt;/input_address&gt;
    &lt;/input_location&gt;
  &lt;/address_list&gt;
&lt;/geocode_request&gt;
</pre></div>
<!-- class="example" --></div>
<!-- class="sect2" -->
<div id="SPATL854" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref774"></a>
<h3 class="sect2"><span class="secnum">11.7.3</span> <a id="sthref775"></a>Geocoding Response XML Schema Definition and Example</h3>
<p>A geocoding response contains one or more standardized addresses including longitude/latitude points, the matching code, and possibly multiple match and no match indication and an error message.</p>
<p>The XML schema definition (XSD) for a geocoding response is as follows:</p>
<pre>
&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;!-- Schema for an XML geocoding response --&gt;
&lt;xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified"&gt;
  &lt;xsd:complexType name="geocodeType"&gt;
    &lt;xsd:sequence&gt;
      &lt;xsd:element name="match" type="matchType" minOccurs="0"
         maxOccurs="unbounded"/&gt;
    &lt;/xsd:sequence&gt;
    &lt;xsd:attribute name="id" type="xsd:string" use="required"/&gt;
    &lt;xsd:attribute name="match_count" type="xsd:string"/&gt;
  &lt;/xsd:complexType&gt;
  &lt;xsd:element name="geocode_response"&gt;
    &lt;xsd:complexType&gt;
      &lt;xsd:sequence&gt;
        &lt;xsd:element name="geocode" type="geocodeType" maxOccurs="unbounded"/&gt;
      &lt;/xsd:sequence&gt;
    &lt;/xsd:complexType&gt;
  &lt;/xsd:element&gt;
  &lt;xsd:complexType name="matchType"&gt;
    &lt;xsd:sequence&gt;
      &lt;xsd:element name="output_address" type="output_addressType"/&gt;
    &lt;/xsd:sequence&gt;
    &lt;xsd:attribute name="sequence" type="xsd:string" use="required"/&gt;
    &lt;xsd:attribute name="longitude" type="xsd:string" use="required"/&gt;
    &lt;xsd:attribute name="latitude" type="xsd:string" use="required"/&gt;
    &lt;xsd:attribute name="match_code" use="required"&gt;
      &lt;xsd:simpleType&gt;
        &lt;xsd:restriction base="xsd:NMTOKEN"&gt;
          &lt;xsd:enumeration value="0"/&gt;
          &lt;xsd:enumeration value="1"/&gt;
          &lt;xsd:enumeration value="2"/&gt;
          &lt;xsd:enumeration value="3"/&gt;
          &lt;xsd:enumeration value="4"/&gt;
          &lt;xsd:enumeration value="10"/&gt;
          &lt;xsd:enumeration value="11"/&gt;
        &lt;/xsd:restriction&gt;
      &lt;/xsd:simpleType&gt;
    &lt;/xsd:attribute&gt;
    &lt;xsd:attribute name="error_message" type="xsd:string"/&gt;
  &lt;/xsd:complexType&gt;
  &lt;xsd:complexType name="output_addressType"&gt;
    &lt;xsd:attribute name="name" type="xsd:string"/&gt;
    &lt;xsd:attribute name="house_number" type="xsd:string"/&gt;
    &lt;xsd:attribute name="street" type="xsd:string"/&gt;
    &lt;xsd:attribute name="builtup_area" type="xsd:string"/&gt;
    &lt;xsd:attribute name="order1_area" type="xsd:string"/&gt;
    &lt;xsd:attribute name="order8_area" type="xsd:string"/&gt;
    &lt;xsd:attribute name="country" type="xsd:string"/&gt;
    &lt;xsd:attribute name="postal_code" type="xsd:string"/&gt;
    &lt;xsd:attribute name="postal_addon_code" type="xsd:string"/&gt;
    &lt;xsd:attribute name="side" type="xsd:string"/&gt;
    &lt;xsd:attribute name="percent" type="xsd:string"/&gt;
    &lt;xsd:attribute name="edge_id" type="xsd:string"/&gt;
  &lt;/xsd:complexType&gt;
&lt;/xsd:schema&gt;
</pre>
<p><a href="#CIHDDGCG">Example 11-8</a> is the response to the request in <a href="#CIHFGGCB">Example 11-7</a> in <a href="#CIHCBDFA">Section 11.7.2</a>.</p>
<div id="SPATL855" class="example">
<p class="titleinexample"><a id="CIHDDGCG"></a>Example 11-8 Geocoding Response (XML API)</p>
<pre>
&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;geocode_response xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
     xsi:noNamespaceSchemaLocation="../geocode_response.xsd"&gt;
 &lt;geocode id="1" match_count="1"&gt;
    &lt;match sequence="0" 
         longitude="-122.26193971893862" latitude="37.53195483966782"
         match_code="10" error_message="????#ENUT?B281C??"&gt;
      &lt;output_address name="" house_number="500" street="ORACLE PKY"
           builtup_area="REDWOOD CITY" order1_area="CA" order8_area="" 
           country="US" postal_code="94065" postal_addon_code="" side="L" 
           percent="0.33166666666666667" edge_id="28503563"/&gt;
    &lt;/match&gt;
 &lt;/geocode&gt;
 &lt;geocode id="2" match_count="1"&gt;
   &lt;match sequence="0" 
        longitude="-71.45937299307225" latitude="42.70784494226865"
        match_code="1" error_message="????#ENUT?B281CP?"&gt;
      &lt;output_address name="" house_number="1" street="ORACLE DR"
            builtup_area="NASHUA" order1_area="NH" order8_area="" 
            country="US" postal_code="03062" postal_addon_code="" side="L" 
            percent="0.01" edge_id="22325991"/&gt;
   &lt;/match&gt;
 &lt;/geocode&gt;
 &lt;geocode id="3" match_count="1"&gt;
   &lt;match sequence="0" 
         longitude="-71.45937299307225" latitude="42.70784494226865"
         match_code="1" error_message="????#ENUT?B281CP?"&gt;
      &lt;output_address name="" house_number="1" street="ORACLE DR"
            builtup_area="NASHUA" order1_area="NH" order8_area="" 
            country="US" postal_code="03062" postal_addon_code="" side="L" 
            percent="0.01" edge_id="22325991"/&gt;
   &lt;/match&gt;
 &lt;/geocode&gt;
 &lt;geocode id="4" match_count="1"&gt;
   &lt;match sequence="0" 
         longitude="-71.45937299307225" latitude="42.70784494226865"
         match_code="1" error_message="????#ENUT?B281CP?"&gt;
     &lt;output_address name="" house_number="1" street="ORACLE DR"
           builtup_area="NASHUA" order1_area="NH" order8_area="" 
           country="US" postal_code="03062" postal_addon_code="" side="L" 
           percent="0.01" edge_id="22325991"/&gt;
   &lt;/match&gt;
 &lt;/geocode&gt;
&lt;/geocode_response&gt;
</pre></div>
<!-- class="example" --></div>
<!-- class="sect2" --></div>
<!-- class="sect1" --></div>
<!-- class="chapter" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment733">
<tr>
<td class="cellalignment742">
<table class="cellalignment738">
<tr>
<td class="cellalignment737"><a href="sdo_webserv_intro.htm"><img width="24" height="24" src="../../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment737"><a href="sdo_yp.htm"><img width="24" height="24" src="../../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;1999, 2013,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment744">
<table class="cellalignment736">
<tr>
<td class="cellalignment737"><a href="../../index.htm"><img width="24" height="24" src="../../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment737"><a href="../../nav/portal_booklist.htm"><img width="24" height="24" src="../../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment737"><a href="toc.htm"><img width="24" height="24" src="../../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment737"><a href="index.htm"><img width="24" height="24" src="../../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment737"><a href="../../nav/mindx.htm"><img width="24" height="24" src="../../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment737"><a href="../../dcommon/html/feedback.htm"><img width="24" height="24" src="../../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>
</body>
</html>
