<!DOCTYPE html>
<html lang="en" >
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1">
<meta charset="utf-8">
<title>Linear Referencing System</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Version 5.1.2 Build 743" />
<meta name="description" content="Provides usage and reference information for indexing and storing spatial data and for developing spatial applications using Oracle Spatial and Graph and Oracle Locator." />
<meta name="dcterms.created" content="2013-11-26T3:11:44Z" />
<meta name="robots" content="all" />
<meta name="dcterms.title" content="Spatial Developer's Guide" />
<meta name="dcterms.identifier" content="E11830-15" />
<meta name="dcterms.isVersionOf" content="SPATL" />
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;1999, 2013,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved." />
<link rel="Start" href="../../index.htm" title="Home" type="text/html" />
<link rel="Copyright" href="../../dcommon/html/cpyr.htm" title="Copyright" type="text/html" />

<script type="application/javascript"  src="../../dcommon/js/headfoot.js"></script>
<script type="application/javascript"  src="../../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html" />
<link rel="Index" href="index.htm" title="Index" type="text/html" />
<link rel="Glossary" href="glossary.htm" title="Glossary" type="text/html" />
<link rel="Prev" href="sdo_cs_concepts.htm" title="Previous" type="text/html" />
<link rel="Next" href="sdo_sam_concepts.htm" title="Next" type="text/html" />
<link rel="alternate" href="../e11830.pdf" title="PDF version" type="application/pdf" />
<link rel="schema.dcterms" href="http://purl.org/dc/terms/" />
<link rel="stylesheet" href="../../dcommon/css/fusiondoc.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/header.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/footer.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/fonts.css">
<link rel="stylesheet" href="../../dcommon/css/foundation.css">
<link rel="stylesheet" href="../../dcommon/css/codemirror.css">
<link rel="stylesheet" type="text/css" title="Default" href="../../nav/css/html5.css">
<link rel="stylesheet" href="../../dcommon/css/respond-480-tablet.css">
<link rel="stylesheet" href="../../dcommon/css/respond-768-laptop.css">
<link rel="stylesheet" href="../../dcommon/css/respond-1140-deskop.css">
<script type="application/javascript" src="../../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">15/51</span> <!-- End Header -->
<div id="SPATL060" class="chapter"><a id="BABIIFFH"></a>
<h1 class="chapter"><span class="secnum">7</span> Linear Referencing System</h1>
<p><a id="sthref583"></a>Linear referencing is a natural and convenient means to associate attributes or events to locations or portions of a linear feature. It has been widely used in transportation applications (such as for highways, railroads, and transit routes) and utilities applications (such as for gas and oil pipelines). The major advantage of linear referencing is its capability of locating attributes and events along a linear feature with only one parameter (usually known as <span class="italic">measure</span>) instead of two (such as <span class="italic">longitude/latitude</span> or <span class="italic">x/y</span> in Cartesian space). Sections of a linear feature can be referenced and created dynamically by indicating the start and end locations along the feature without explicitly storing them.</p>
<p>The linear referencing system (LRS) application programming interface (API) in Oracle Spatial provides server-side LRS capabilities at the cartographic level. The linear measure information is directly integrated into the Oracle Spatial geometry structure. The Oracle Spatial LRS API provides support for dynamic segmentation, and it serves as a groundwork for third-party or middle-tier application development for virtually any linear referencing methods and models in any coordinate system.</p>
<p>For an example of LRS, see <a href="#i885918">Section 7.7</a>. However, you may want to read the rest of this chapter first, to understand the concepts that the example illustrates.</p>
<p>For reference information about LRS functions and procedures, see <a href="sdo_lrs_ref.htm#g1013943">Chapter 25</a>.</p>
<p>This chapter contains the following major sections:</p>
<ul>
<li>
<p><a href="#i890038">Section 7.1, "Terms and Concepts"</a></p>
</li>
<li>
<p><a href="#i887530">Section 7.2, "LRS Data Model"</a></p>
</li>
<li>
<p><a href="#CIHJBDCA">Section 7.3, "Indexing of LRS Data"</a></p>
</li>
<li>
<p><a href="#i890852">Section 7.4, "3D Formats of LRS Functions"</a></p>
</li>
<li>
<p><a href="#CIHCCJJE">Section 7.5, "LRS Operations"</a></p>
</li>
<li>
<p><a href="#CIHJBDGG">Section 7.6, "Tolerance Values with LRS Functions"</a></p>
</li>
<li>
<p><a href="#i885918">Section 7.7, "Example of LRS Functions"</a></p>
</li>
</ul>
<a id="i890038"></a>
<div id="SPATL739" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1"><span class="secnum">7.1</span> Terms and Concepts</h2>
<p>This section explains important terms and concepts related to linear referencing support in Oracle Spatial.</p>
<div id="SPATL740" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref584"></a>
<h3 class="sect2"><span class="secnum">7.1.1</span> Geometric Segments (LRS Segments)</h3>
<p><a id="sthref585"></a><a id="sthref586"></a><a id="sthref587"></a><span class="bold">Geometric segments</span> are basic LRS elements in Oracle Spatial. A geometric segment can be any of the following:</p>
<ul>
<li>
<p>Line string: an ordered, nonbranching, and continuous geometry (for example, a simple road)</p>
</li>
<li>
<p>Multiline string: nonconnected line strings (for example, a highway with a gap caused by a lake or a bypass road)</p>
</li>
<li>
<p>Polygon (for example, a racetrack or a scenic tour route that starts and ends at the same point)</p>
</li>
</ul>
<p>A geometric segment must contain at least start and end measures for its start and end points. Measures of points of interest (such as highway exits) on the geometric segments can also be assigned. These measures are either assigned by users or derived from existing geometric segments. <a href="#i884952">Figure 7-1</a> shows a geometric segment with four line segments and one arc. Points on the geometric segment are represented by triplets (x, y, m), where <span class="italic">x</span> and <span class="italic">y</span> describe the location and <span class="italic">m</span> denotes the measure (with each measure value underlined in <a href="#i884952">Figure 7-1</a>).</p>
<div id="SPATL741" class="figure">
<p class="titleinfigure"><a id="i884952"></a>Figure 7-1 Geometric Segment</p>
<img width="515" height="229" src="img/geoseg.gif" alt="Description of Figure 7-1 follows" /><br />
<a id="sthref588" href="img_text/geoseg.htm">Description of "Figure 7-1 Geometric Segment"</a><br />
<br /></div>
<!-- class="figure" --></div>
<!-- class="sect2" -->
<div id="SPATL742" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref589"></a>
<h3 class="sect2"><span class="secnum">7.1.2</span> Shape Points</h3>
<p><a id="sthref590"></a><a id="sthref591"></a><span class="bold">Shape points</span> are points that are specified when an LRS segment is constructed, and that are assigned measure information. In Oracle Spatial, a line segment is represented by its start and end points, and an arc is represented by three points: start, middle, and end points of the arc. You must specify these points as shape points, but you can also specify other points as shape points if you need measure information stored for these points (for example, an exit in the middle of a straight part of the highway).</p>
<p>Thus, shape points can serve one or both of the following purposes: to indicate the direction of the segment (for example, a turn or curve), and to identify a point of interest for which measure information is to be stored.</p>
<p>Shape points might not directly relate to mileposts or reference posts in LRS; they are used as internal reference points. The measure information of shape points is automatically populated when you define the LRS segment using the <a href="sdo_lrs_ref.htm#i84344">SDO_LRS.DEFINE_GEOM_SEGMENT</a> procedure, which is described in <a href="sdo_lrs_ref.htm#g1013943">Chapter 25</a>.</p>
</div>
<!-- class="sect2" -->
<div id="SPATL743" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref592"></a>
<h3 class="sect2"><span class="secnum">7.1.3</span> Direction of a Geometric Segment</h3>
<p><a id="sthref593"></a><a id="sthref594"></a>The <span class="bold">direction</span> of a geometric segment is indicated from the start point of the geometric segment to the end point. The direction is determined by the order of the vertices (from start point to end point) in the geometry definition. Measures of points on a geometric segment always either increase or decrease along the direction of the geometric segment.</p>
</div>
<!-- class="sect2" -->
<div id="SPATL744" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref595"></a>
<h3 class="sect2"><span class="secnum">7.1.4</span> Measure (Linear Measure)</h3>
<p><a id="sthref596"></a><a id="sthref597"></a>The <span class="bold">measure</span> of a point along a geometric segment is the linear distance (in the measure dimension) to the point measured from the start point (for increasing values) or end point (for decreasing values) of the geometric segment. The measure information does not necessarily have to be of the same scale as the distance. However, the linear mapping relationship between measure and distance is always preserved.</p>
<p>Some LRS functions use <span class="italic">offset</span> instead of measure to represent measured distance along linear features. Although some other linear referencing systems might use offset to mean what the Oracle Spatial LRS refers to as measure, offset has a different meaning in Oracle Spatial from measure, as explained in <a href="#i884979">Section 7.1.5</a>.</p>
</div>
<!-- class="sect2" -->
<a id="i884979"></a>
<div id="SPATL745" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">7.1.5</span> Offset</h3>
<p><a id="sthref598"></a>The <span class="bold">offset</span> of a point along a geometric segment is the perpendicular distance between the point and the geometric segment. Offsets are positive if the points are on the left side along the segment direction and are negative if they are on the right side. Points are on a geometric segment if their offsets to the segment are zero.</p>
<p>The unit of measurement for an offset is the same as for the coordinate system associated with the geometric segment. For geodetic data, the default unit of measurement is meters.</p>
<p><a href="#i891553">Figure 7-2</a> shows how a point can be located along a geometric segment with measure and offset information. By assigning an offset together with a measure, it is possible to locate not only points that are on the geometric segment, but also points that are perpendicular to the geometric segment.</p>
<div id="SPATL746" class="figure">
<p class="titleinfigure"><a id="i891553"></a>Figure 7-2 Describing a Point Along a Segment with a Measure and an Offset</p>
<img width="303" height="161" src="img/point.gif" alt="Description of Figure 7-2 follows" /><br />
<a id="sthref599" href="img_text/point.htm">Description of "Figure 7-2 Describing a Point Along a Segment with a Measure and an Offset"</a><br />
<br /></div>
<!-- class="figure" --></div>
<!-- class="sect2" -->
<div id="SPATL747" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref600"></a>
<h3 class="sect2"><span class="secnum">7.1.6</span> Measure Populating</h3>
<p><a id="sthref601"></a><a id="sthref602"></a>Any unassigned measures of a geometric segment are automatically populated based upon their distance distribution. This is done before any LRS operations for geometric segments with unknown measures (NULL in Oracle Spatial). The resulting geometric segments from any LRS operations return the measure information associated with geometric segments. The measure of a point on the geometric segment can be obtained based upon a linear mapping relationship between its previous and next known measures or locations. See the algorithm representation in <a href="#i884936">Figure 7-3</a> and the example in <a href="#i888540">Figure 7-4</a>.</p>
<div id="SPATL748" class="figure">
<p class="titleinfigure"><a id="i884936"></a>Figure 7-3 Measures, Distances, and Their Mapping Relationship</p>
<img width="390" height="177" src="img/maprel.gif" alt="Description of Figure 7-3 follows" /><br />
<a id="sthref603" href="img_text/maprel.htm">Description of "Figure 7-3 Measures, Distances, and Their Mapping Relationship"</a><br />
<br /></div>
<!-- class="figure" -->
<div id="SPATL749" class="figure">
<p class="titleinfigure"><a id="i888540"></a>Figure 7-4 Measure Populating of a Geometric Segment</p>
<img width="504" height="131" src="img/measpop.gif" alt="Description of Figure 7-4 follows" /><br />
<a id="sthref604" href="img_text/measpop.htm">Description of "Figure 7-4 Measure Populating of a Geometric Segment"</a><br />
<br /></div>
<!-- class="figure" -->
<p>Measures are evenly spaced between assigned measures. However, the assigned measures for points of interest on a geometric segment do not need to be evenly spaced. This could eliminate the problem of error accumulation and account for inaccuracy of data source.</p>
<p>Moreover, the assigned measures do not even need to reflect actual distances (for example, they can reflect estimated driving time); they can be any valid values within the measure range. <a href="#i889839">Figure 7-5</a> shows the measure population that results when assigned measure values are not proportional and reflect widely varying gaps.</p>
<div id="SPATL750" class="figure">
<p class="titleinfigure"><a id="i889839"></a>Figure 7-5 Measure Populating with Disproportional Assigned Measures</p>
<img width="504" height="131" src="img/disprop.gif" alt="Description of Figure 7-5 follows" /><br />
<a id="sthref605" href="img_text/disprop.htm">Description of "Figure 7-5 Measure Populating with Disproportional Assigned Measures"</a><br />
<br /></div>
<!-- class="figure" -->
<p>In all cases, measure populating is done in an incremental fashion along the segment direction. This improves the performance of current and subsequent LRS operations.</p>
</div>
<!-- class="sect2" -->
<div id="SPATL751" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref606"></a>
<h3 class="sect2"><span class="secnum">7.1.7</span> Measure Range of a Geometric Segment</h3>
<p><a id="sthref607"></a><a id="sthref608"></a>The start and end measures of a geometric segment define the linear <span class="bold">measure range</span> of the geometric segment. Any valid LRS measures of a geometric segment must fall within its linear measure range.</p>
</div>
<!-- class="sect2" -->
<div id="SPATL752" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref609"></a>
<h3 class="sect2"><span class="secnum">7.1.8</span> Projection</h3>
<p><a id="sthref610"></a><a id="sthref611"></a>The <span class="bold">projection</span> of a point along a geometric segment is the point on the geometric segment with the minimum distance to the specified point. The measure information of the resulting point is also returned in the point geometry.</p>
</div>
<!-- class="sect2" -->
<div id="SPATL753" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref612"></a>
<h3 class="sect2"><span class="secnum">7.1.9</span> LRS Point</h3>
<p><a id="sthref613"></a><a id="sthref614"></a><a id="sthref615"></a><span class="bold">LRS points</span> are points with linear measure information along a geometric segment. A valid LRS point is a point geometry with measure information.</p>
<p>All LRS point data must be stored in the SDO_ELEM_INFO_ARRAY and SDO_ORDINATE_ARRAY, and cannot be stored in the SDO_POINT field in the SDO_GEOMETRY definition of the point.</p>
</div>
<!-- class="sect2" -->
<div id="SPATL754" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref616"></a>
<h3 class="sect2"><span class="secnum">7.1.10</span> Linear Features</h3>
<p><a id="sthref617"></a><a id="sthref618"></a><span class="bold">Linear features</span> are any spatial objects that can be treated as a logical set of linear segments. Examples of linear features are highways in transportation applications and pipelines in utility industry applications. The relationship of linear features, geometric segments, and LRS points is shown in <a href="#i884386">Figure 7-6</a>, where a single linear feature consists of three geometric segments, and three LRS points are shown on the first segment.</p>
<div id="SPATL755" class="figure">
<p class="titleinfigure"><a id="i884386"></a>Figure 7-6 Linear Feature, Geometric Segments, and LRS Points</p>
<img width="449" height="185" src="img/linear.gif" alt="Description of Figure 7-6 follows" /><br />
<a id="sthref619" href="img_text/linear.htm">Description of "Figure 7-6 Linear Feature, Geometric Segments, and LRS Points"</a><br />
<br /></div>
<!-- class="figure" --></div>
<!-- class="sect2" -->
<div id="SPATL756" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref620"></a>
<h3 class="sect2"><span class="secnum">7.1.11</span> <a id="sthref621"></a><a id="sthref622"></a><a id="sthref623"></a>Measures with Multiline Strings and Polygons with Holes</h3>
<p>With a multiline string or polygon with hole LRS geometry, the <a href="sdo_lrs_ref.htm#i84344">SDO_LRS.DEFINE_GEOM_SEGMENT</a> procedure and <a href="sdo_lrs_ref.htm#i85408">SDO_LRS.CONVERT_TO_LRS_GEOM</a> function by default assign the same measure value to the end point of one segment and the start point (separated by a gap) of the next segment, although you can later assign different measure values to points. Thus, by default there will duplicate measure values in different segments for such geometries. In such cases, LRS subprograms use the first point with a specified measure, except when doing so would result in an invalid geometry.</p>
<p>For example, assume that in a multiline string LRS geometry, the first segment is from measures 0 through 100 and the second segment is from measures 100 through 150. If you use the <a href="sdo_lrs_ref.htm#i85478">SDO_LRS.LOCATE_PT</a> function to find the point at measure 100, the returned point will be at measure 100 in the first segment. If you use the <a href="sdo_lrs_ref.htm#CHEHFHIC">SDO_LRS.CLIP_GEOM_SEGMENT</a>, <a href="sdo_lrs_ref.htm#i83484">SDO_LRS.DYNAMIC_SEGMENT</a>, or <a href="sdo_lrs_ref.htm#i88633">SDO_LRS.OFFSET_GEOM_SEGMENT</a> function to return the geometry object between measures 75 and 125, the result is a multiline string geometry consisting of two segments. If you use the same function to return the geometry object between measures 100 and 125, the point at measure 100 in the first segment is ignored, and the result is a line string along the second segment from measures 100 through 125.</p>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="i887530"></a>
<div id="SPATL757" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1"><span class="secnum">7.2</span> LRS Data Model</h2>
<p><a id="sthref624"></a><a id="sthref625"></a>The Oracle Spatial LRS data model incorporates measure information into its geometry representation at the point level. The measure information is directly integrated into the Oracle Spatial model. To accomplish this, an additional <span class="italic">measure</span> dimension must be added to the Oracle Spatial metadata.</p>
<p>Oracle Spatial LRS support affects the Spatial metadata and data (the geometries). <a href="#i885124">Example 7-1</a> shows how a measure dimension can be added to two-dimensional geometries in the Spatial metadata. The measure dimension must be the last element of the SDO_DIM_ARRAY in a spatial object definition (shown in bold in <a href="#i885124">Example 7-1</a>).</p>
<div id="SPATL758" class="example">
<p class="titleinexample"><a id="i885124"></a>Example 7-1 Including LRS Measure Dimension in Spatial Metadata</p>
<pre>
INSERT INTO user_sdo_geom_metadata
    (TABLE_NAME,
     COLUMN_NAME,
     DIMINFO,
     SRID)
  VALUES(
  'LRS_ROUTES',
  'GEOMETRY',
  SDO_DIM_ARRAY (
    SDO_DIM_ELEMENT('X', 0, 20, 0.005),
    SDO_DIM_ELEMENT('Y', 0, 20, 0.005),
    <span class="bold">SDO_DIM_ELEMENT('M', 0, 100, 0.005)</span>),
  NULL);
</pre>
<p>After adding the new measure dimension, geometries with measure information such as geometric segments and LRS points can be represented. An example of creating a geometric segment with three line segments is shown in <a href="#i884481">Figure 7-7</a>.</p>
</div>
<!-- class="example" -->
<div id="SPATL759" class="figure">
<p class="titleinfigure"><a id="i884481"></a>Figure 7-7 Creating a Geometric Segment</p>
<img width="344" height="71" src="img/creating.gif" alt="Description of Figure 7-7 follows" /><br />
<a id="sthref626" href="img_text/creating.htm">Description of "Figure 7-7 Creating a Geometric Segment"</a><br />
<br /></div>
<!-- class="figure" -->
<p>In <a href="#i884481">Figure 7-7</a>, the geometric segment has the following definition (with measure values underlined):</p>
<pre>
SDO_GEOMETRY(3302, NULL, NULL,
     SDO_ELEM_INFO_ARRAY(1,2,1),
     SDO_ORDINATE_ARRAY(5,10,<span class="underline">0</span>, 20,5,<span class="underline">NULL</span>, 35,10,<span class="underline">NULL</span>, 55,10,<span class="underline">100</span>))
</pre>
<p>Whenever a geometric segment is defined, its start and end measures must be defined or derived from some existing geometric segment. The unsigned measures of all shape points on a geometric segment will be automatically populated.</p>
<p>The SDO_GTYPE of any point geometry used with an LRS function must be 3301.</p>
</div>
<!-- class="sect1" -->
<a id="CIHJBDCA"></a>
<div id="SPATL760" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1"><span class="secnum">7.3</span> <a id="sthref627"></a><a id="sthref628"></a>Indexing of LRS Data</h2>
<p>If LRS data has four dimensions (three plus the M dimension) and if you need to index all three non-measure dimensions, you must use a spatial R-tree index to index the data, and you must specify PARAMETERS('sdo_indx_dims=3') in the <a href="sdo_objindex.htm#i78196">CREATE INDEX</a> statement to ensure that the first three dimensions are indexed. Note, however, that if you specify an <code>sdo_indx_dims</code> value of 3 or higher, only those operators listed in <a href="sdo_intro.htm#BABIDJJB">Section 1.11</a> as considering all three dimensions can be used on the indexed geometries; the other operators described in <a href="sdo_operat.htm#g1001037">Chapter 19</a> cannot be used. (The default value for the <code>sdo_indx_dims</code> keyword is 2, which would cause only the first two dimensions to be indexed.) For example, if the dimensions are X, Y, Z, and M, specify <code>sdo_indx_dims=3</code> to index the X, Y, and Z dimensions, but not the measure (M) dimension. Do not include the measure dimension in a spatial index, because this causes additional processing overhead and produces no benefit.</p>
<p>Information about the <a href="sdo_objindex.htm#i78196">CREATE INDEX</a> statement and its parameters and keywords is in <a href="sdo_objindex.htm#g999465">Chapter 18</a>.</p>
</div>
<!-- class="sect1" -->
<a id="i890852"></a>
<div id="SPATL761" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1"><span class="secnum">7.4</span> <a id="sthref629"></a><a id="sthref630"></a><a id="sthref631"></a>3D Formats of LRS Functions</h2>
<p>Most LRS functions have formats that end in <span class="italic">_3D</span>: for example, DEFINE_GEOM_SEGMENT_3D, CLIP_GEOM_SEGMENT_3D, FIND_MEASURE_3D, and LOCATE_PT_3D. If a function has a <span class="italic">3D</span> format, it is identified in the Usage Notes for the function in <a href="sdo_lrs_ref.htm#g1013943">Chapter 25</a>.</p>
<p>The <span class="italic">3D</span> formats are supported only for line string and multiline string geometries. The <span class="italic">3D</span> formats should be used only when the geometry object has four dimensions and the fourth dimension is the measure (for example, X, Y, Z, and M), and only when you want the function to consider the first three dimensions (for example, X, Y, and Z). If the standard format of a function (that is, without the <span class="italic">_3D</span>) is used on a geometry with four dimensions, the function considers only the first two dimensions (for example, X and Y).</p>
<p>For example, the following format considers the X, Y, and Z dimensions of the specified GEOM object in performing the clip operation:</p>
<pre>
SELECT  SDO_LRS.CLIP_GEOM_SEGMENT_3D(a.geom, m.diminfo, 5, 10)
  FROM routes r, user_sdo_geom_metadata m
  WHERE m.table_name = 'ROUTES' AND m.column_name = 'GEOM'
    AND r.route_id = 1;
</pre>
<p>However, the following format considers only the X and Y dimensions, and ignores the Z dimension, of the specified GEOM object in performing the clip operation:</p>
<pre>
SELECT  SDO_LRS.CLIP_GEOM_SEGMENT(a.geom, m.diminfo, 5, 10)
  FROM routes r, user_sdo_geom_metadata m
  WHERE m.table_name = 'ROUTES' AND m.column_name = 'GEOM'
    AND r.route_id = 1;
</pre>
<p>The parameters for the standard and <span class="italic">3D</span> formats of any function are the same, and the Usage Notes apply to both formats.</p>
<p>The <span class="italic">3D</span> formats are not supported with the following:</p>
<ul>
<li>
<p>Geodetic data</p>
</li>
<li>
<p>Polygons, arcs, or circles</p>
</li>
</ul>
</div>
<!-- class="sect1" -->
<a id="CIHCCJJE"></a>
<div id="SPATL762" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1"><span class="secnum">7.5</span> LRS Operations</h2>
<p>This section describes several linear referencing operations supported by the Oracle Spatial LRS API.</p>
<a id="i890039"></a>
<div id="SPATL763" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">7.5.1</span> Defining a Geometric Segment</h3>
<p><a id="sthref632"></a><a id="sthref633"></a>There are two ways to create a geometric segment with measure information:</p>
<ul>
<li>
<p>Construct a geometric segment and assign measures explicitly.</p>
</li>
<li>
<p>Define a geometric segment with specified start and end, and any other measures, in an ascending or descending order. Measures of shape points with unknown (unassigned) measures (null values) in the geometric segment will be automatically populated according to their locations and distance distribution.</p>
</li>
</ul>
<p><a href="#i887823">Figure 7-8</a> shows different ways of defining a geometric segment:</p>
<div id="SPATL764" class="figure">
<p class="titleinfigure"><a id="i887823"></a>Figure 7-8 Defining a Geometric Segment</p>
<img width="392" height="315" src="img/defining.gif" alt="Description of Figure 7-8 follows" /><br />
<a id="sthref634" href="img_text/defining.htm">Description of "Figure 7-8 Defining a Geometric Segment"</a><br />
<br /></div>
<!-- class="figure" -->
<p>An LRS segment must be defined (or must already exist) before any LRS operations can proceed. That is, the start, end, and any other assigned measures must be present to derive the location from a specified measure. The measure information of intermediate shape points will automatically be populated if measure values are not assigned.</p>
</div>
<!-- class="sect2" -->
<a id="i890043"></a>
<div id="SPATL765" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">7.5.2</span> Redefining a Geometric Segment</h3>
<p><a id="sthref635"></a><a id="sthref636"></a>You can redefine a geometric segment to replace the existing measures of all shape points between the start and end point with automatically calculated measures. Redefining a segment can be useful if errors have been made in one or more explicit measure assignments, and you want to start over with proportionally assigned measures.</p>
<p><a href="#i889831">Figure 7-9</a> shows the redefinition of a segment where the existing (before) assigned measure values are not proportional and reflect widely varying gaps.</p>
<div id="SPATL766" class="figure">
<p class="titleinfigure"><a id="i889831"></a>Figure 7-9 Redefining a Geometric Segment</p>
<img width="504" height="154" src="img/redefining.gif" alt="Description of Figure 7-9 follows" /><br />
<a id="sthref637" href="img_text/redefining.htm">Description of "Figure 7-9 Redefining a Geometric Segment"</a><br />
<br /></div>
<!-- class="figure" -->
<p>After the segment redefinition in <a href="#i889831">Figure 7-9</a>, the populated measures reflect proportional distances along the segment.</p>
</div>
<!-- class="sect2" -->
<a id="i890036"></a>
<div id="SPATL767" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">7.5.3</span> Clipping a Geometric Segment</h3>
<p><a id="sthref638"></a><a id="sthref639"></a>You can clip a geometric segment to create a new geometric segment out of an existing geometric segment, as shown in <a href="#i890600">Figure 7-10</a>, part a.</p>
<div id="SPATL768" class="figure">
<p class="titleinfigure"><a id="i890600"></a>Figure 7-10 Clipping, Splitting, and Concatenating Geometric Segments</p>
<img width="543" height="245" src="img/clipping.gif" alt="Description of Figure 7-10 follows" /><br />
<a id="sthref640" href="img_text/clipping.htm">Description of "Figure 7-10 Clipping, Splitting, and Concatenating Geometric Segments"</a><br />
<br /></div>
<!-- class="figure" -->
<p>In <a href="#i890600">Figure 7-10</a>, part a, a segment is created from part of a larger segment. The new segment has its own start and end points, and the direction is the same as in the original larger segment.</p>
</div>
<!-- class="sect2" -->
<a id="i890045"></a>
<div id="SPATL769" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">7.5.4</span> Splitting a Geometric Segment</h3>
<p><a id="sthref641"></a><a id="sthref642"></a>You can create two new geometric segments by splitting a geometric segment, as shown in <a href="#i890600">Figure 7-10</a>, part b. The direction of each new segment is the same as in the original segment.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
In <a href="#i890600">Figure 7-10</a> and several figures that follow, small gaps between segments are used in illustrations of segment splitting and concatenation. Each gap simply reinforces the fact that two different segments are involved. However, the two segments (such as segment 1 and segment 2 in <a href="#i890600">Figure 7-10</a>, parts b and c) are actually connected. The tolerance (see <a href="sdo_intro.htm#i884589">Section 1.5.5</a>) is considered in determining whether or not segments are connected.</div>
</div>
<!-- class="sect2" -->
<a id="i890037"></a>
<div id="SPATL770" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">7.5.5</span> Concatenating Geometric Segments</h3>
<p><a id="sthref643"></a><a id="sthref644"></a>You can create a new geometric segment by concatenating two geometric segments, as shown in <a href="#i890600">Figure 7-10</a>, part c. The geometric segments do not need to be spatially connected, although they are connected in the illustration in <a href="#i890600">Figure 7-10</a>, part c. (If the segments are not spatially connected, the concatenated result is a multiline string.) The measures of the second geometric segment are shifted so that the end measure of the first segment is the same as the start measure of the second segment. The direction of the segment resulting from the concatenation is the same as in the two original segments.</p>
<p>Measure assignments for the clipping, splitting, and concatenating operations in <a href="#i890600">Figure 7-10</a> are shown in <a href="#i887072">Figure 7-11</a>. Measure information and segment direction are preserved in a consistent manner. The assignment is done automatically when the operations have completed.</p>
<div id="SPATL771" class="figure">
<p class="titleinfigure"><a id="i887072"></a>Figure 7-11 Measure Assignment in Geometric Segment Operations</p>
<img width="463" height="299" src="img/geosegoper.gif" alt="Description of Figure 7-11 follows" /><br />
<a id="sthref645" href="img_text/geosegoper.htm">Description of "Figure 7-11 Measure Assignment in Geometric Segment Operations"</a><br />
<br /></div>
<!-- class="figure" -->
<p><a id="sthref646"></a><a id="sthref647"></a>The direction of the geometric segment resulting from concatenation is always the direction of the first segment (<code>geom_segment1</code> in the call to the <a href="sdo_lrs_ref.htm#i80091">SDO_LRS.CONCATENATE_GEOM_SEGMENTS</a> function), as shown in <a href="#i892282">Figure 7-12</a>.</p>
<div id="SPATL772" class="figure">
<p class="titleinfigure"><a id="i892282"></a>Figure 7-12 Segment Direction with Concatenation</p>
<img width="498" height="203" src="img/concat.gif" alt="Description of Figure 7-12 follows" /><br />
<a id="sthref648" href="img_text/concat.htm">Description of "Figure 7-12 Segment Direction with Concatenation"</a><br />
<br /></div>
<!-- class="figure" -->
<p><a id="sthref649"></a><a id="sthref650"></a>In addition to explicitly concatenating two connected segments using the <a href="sdo_lrs_ref.htm#i80091">SDO_LRS.CONCATENATE_GEOM_SEGMENTS</a> function, you can perform aggregate concatenation: that is, you can concatenate all connected geometric segments in a column (layer) using the <a href="sdo_aggr.htm#i866716">SDO_AGGR_LRS_CONCAT</a> spatial aggregate function. (See the description and example of the <a href="sdo_aggr.htm#i866716">SDO_AGGR_LRS_CONCAT</a> spatial aggregate function in <a href="sdo_aggr.htm#g998149">Chapter 20</a>.)</p>
</div>
<!-- class="sect2" -->
<a id="i890044"></a>
<div id="SPATL773" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">7.5.6</span> Scaling a Geometric Segment</h3>
<p><a id="sthref651"></a><a id="sthref652"></a>You can create a new geometric segment by performing a linear scaling operation on a geometric segment. <a href="#i884764">Figure 7-13</a> shows the mapping relationship for geometric segment scaling.</p>
<div id="SPATL774" class="figure">
<p class="titleinfigure"><a id="i884764"></a>Figure 7-13 Scaling a Geometric Segment</p>
<img width="425" height="182" src="img/scaling.gif" alt="Description of Figure 7-13 follows" /><br />
<a id="sthref653" href="img_text/scaling.htm">Description of "Figure 7-13 Scaling a Geometric Segment"</a><br />
<br /></div>
<!-- class="figure" -->
<p>In general, scaling a geometric segment only involves rearranging measures of the newly created geometric segment. However, if the scaling factor is negative, the order of the shape points needs to be reversed so that measures will increase along the geometric segment's direction (which is defined by the order of the shape points).</p>
<p>A scale operation can perform any combination of the following operations:</p>
<ul>
<li>
<p>Translating (shifting) measure information. (For example, add the same value to Ms and Me to get M's and M'e.)</p>
</li>
<li>
<p>Reversing measure information. (Let M's = Me, M'e = Ms, and Mshift = 0.)</p>
</li>
<li>
<p>Performing simple scaling of measure information. (Let Mshift = 0.)</p>
</li>
</ul>
<p>For examples of these operations, see the Usage Notes and Examples for the<a href="sdo_lrs_ref.htm#CACHCCGB">SDO_LRS.SCALE_GEOM_SEGMENT</a>, <a href="sdo_lrs_ref.htm#i85156">SDO_LRS.TRANSLATE_MEASURE</a>, <a href="sdo_lrs_ref.htm#i89756">SDO_LRS.REVERSE_GEOMETRY</a>, and <a href="sdo_lrs_ref.htm#i85130">SDO_LRS.REDEFINE_GEOM_SEGMENT</a> subprograms in <a href="sdo_lrs_ref.htm#g1013943">Chapter 25</a>.</p>
</div>
<!-- class="sect2" -->
<a id="CIHICAHE"></a>
<div id="SPATL775" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">7.5.7</span> Offsetting a Geometric Segment</h3>
<p><a id="sthref654"></a><a id="sthref655"></a>You can create a new geometric segment by performing an offsetting operation on a geometric segment. <a href="#i892782">Figure 7-14</a> shows the mapping relationship for geometric segment offsetting.</p>
<div id="SPATL776" class="figure">
<p class="titleinfigure"><a id="i892782"></a>Figure 7-14 Offsetting a Geometric Segment</p>
<img width="296" height="121" src="img/offsetting.gif" alt="Description of Figure 7-14 follows" /><br />
<a id="sthref656" href="img_text/offsetting.htm">Description of "Figure 7-14 Offsetting a Geometric Segment"</a><br />
<br /></div>
<!-- class="figure" -->
<p>In the offsetting operation shown in <a href="#i892782">Figure 7-14</a>, the resulting geometric segment is offset by 5 units from the specified start and end measures of the original segment.</p>
<p>For more information, see the Usage Notes and Examples for the <a href="sdo_lrs_ref.htm#i88633">SDO_LRS.OFFSET_GEOM_SEGMENT</a> function in <a href="sdo_lrs_ref.htm#g1013943">Chapter 25</a>.</p>
</div>
<!-- class="sect2" -->
<a id="i890041"></a>
<div id="SPATL777" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">7.5.8</span> Locating a Point on a Geometric Segment</h3>
<p><a id="sthref657"></a><a id="sthref658"></a>You can find the position of a point described by a measure and an offset on a geometric segment (see <a href="#i884817">Figure 7-15</a>).</p>
<div id="SPATL778" class="figure">
<p class="titleinfigure"><a id="i884817"></a>Figure 7-15 Locating a Point Along a Segment with a Measure and an Offset</p>
<img width="454" height="166" src="img/point_offset.gif" alt="Description of Figure 7-15 follows" /><br />
<a id="sthref659" href="img_text/point_offset.htm">Description of "Figure 7-15 Locating a Point Along a Segment with a Measure and an Offset"</a><br />
<br /></div>
<!-- class="figure" -->
<p>There is always a unique location with a specific measure on a geometric segment. Ambiguity arises when offsets are given and the points described by the measures fall on shape points of the geometric segment (see <a href="#i884861">Figure 7-16</a>).</p>
<div id="SPATL779" class="figure">
<p class="titleinfigure"><a id="i884861"></a>Figure 7-16 Ambiguity in Location Referencing with Offsets</p>
<img width="366" height="320" src="img/ambiguity.gif" alt="Description of Figure 7-16 follows" /><br />
<a id="sthref660" href="img_text/ambiguity.htm">Description of "Figure 7-16 Ambiguity in Location Referencing with Offsets"</a><br />
<br /></div>
<!-- class="figure" -->
<p>As shown in <a href="#i884861">Figure 7-16</a>, an offset arc of a shape point on a geometric segment is an arc on which all points have the same minimum distance to the shape point. As a result, all points on the offset arc are represented by the same (measure, offset) pair. To resolve this one-to-many mapping problem, the middle point on the offset arc is returned.</p>
</div>
<!-- class="sect2" -->
<a id="i890042"></a>
<div id="SPATL780" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">7.5.9</span> Projecting a Point onto a Geometric Segment</h3>
<p><a id="sthref661"></a><a id="sthref662"></a><a id="sthref663"></a>You can find the projection point of a point with respect to a geometric segment. The point to be projected can be on or off the segment. If the point is on the segment, the point and its projection point are the same.</p>
<p>Projection is a reverse operation of the point-locating operation shown in <a href="#i884817">Figure 7-15</a>. Similar to a point-locating operation, all points on the offset arc of a shape point will have the same projection point (that is, the shape point itself), measure, and offset (see <a href="#i884861">Figure 7-16</a>). If there are multiple projection points for a point, the first one from the start point is returned (Projection Point 1 in both illustrations in <a href="#i884057">Figure 7-17</a>).</p>
<div id="SPATL781" class="figure">
<p class="titleinfigure"><a id="i884057"></a>Figure 7-17 Multiple Projection Points</p>
<img width="414" height="128" src="img/multiprojpts.gif" alt="Description of Figure 7-17 follows" /><br />
<a id="sthref664" href="img_text/multiprojpts.htm">Description of "Figure 7-17 Multiple Projection Points"</a><br />
<br /></div>
<!-- class="figure" --></div>
<!-- class="sect2" -->
<a id="i887224"></a>
<div id="SPATL782" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">7.5.10</span> Converting LRS Geometries</h3>
<p><a id="sthref665"></a><a id="sthref666"></a>You can convert geometries from standard line string format to LRS format, and the reverse. The main use of conversion functions will probably occur if you have a large amount of existing line string data, in which case conversion is a convenient alternative to creating all of the LRS segments manually. However, if you need to convert LRS segments to standard line strings for certain applications, that capability is provided also.</p>
<p>Functions are provided to convert:</p>
<ul>
<li>
<p>Individual line strings or points</p>
<p>For conversion from standard format to LRS format, a measure dimension (named <span class="italic">M</span> by default) is added, and measure information is provided for each point. For conversion from LRS format to standard format, the measure dimension and information are removed. In both cases, the dimensional information (DIMINFO) metadata in the USER_SDO_GEOM_METADATA view is not affected.</p>
</li>
<li>
<p>Layers (all geometries in a column)</p>
<p>For conversion from standard format to LRS format, a measure dimension (named <span class="italic">M</span> by default) is added, but no measure information is provided for each point. For conversion from LRS format to standard format, the measure dimension and information are removed. In both cases, the dimensional information (DIMINFO) metadata in the USER_SDO_GEOM_METADATA view is modified as needed.</p>
</li>
<li>
<p>Dimensional information (DIMINFO)</p>
<p>The dimensional information (DIMINFO) metadata in the USER_SDO_GEOM_METADATA view is modified as needed. For example, converting a standard dimensional array with X and Y dimensions (SDO_DIM_ELEMENT) to an LRS dimensional array causes an M dimension (SDO_DIM_ELEMENT) to be added.</p>
</li>
</ul>
<p><a href="#i890004">Figure 7-18</a> shows the addition of measure information when a standard line string is converted to an LRS line string (using the <a href="sdo_lrs_ref.htm#i85408">SDO_LRS.CONVERT_TO_LRS_GEOM</a> function). The measure dimension values are underlined in <a href="#i890004">Figure 7-18</a>.</p>
<div id="SPATL783" class="figure">
<p class="titleinfigure"><a id="i890004"></a>Figure 7-18 Conversion from Standard to LRS Line String</p>
<img width="195" height="114" src="img/conversion.gif" alt="Description of Figure 7-18 follows" /><br />
<a id="sthref667" href="img_text/conversion.htm">Description of "Figure 7-18 Conversion from Standard to LRS Line String"</a><br />
<br /></div>
<!-- class="figure" -->
<p>For conversions of point geometries, the SDO_POINT attribute (described in <a href="sdo_objrelschema.htm#g1019115">Section 2.2.3</a>) in the returned geometry is affected as follows:</p>
<ul>
<li>
<p>If a standard point is converted to an LRS point, the SDO_POINT attribute information in the input geometry is used to set the SDO_ELEM_INFO and SDO_ORDINATES attributes (described in <a href="sdo_objrelschema.htm#i1006226">Section 2.2.4</a> and <a href="sdo_objrelschema.htm#i1013373">Section 2.2.5</a>) in the resulting geometry, and the SDO_POINT attribute in the resulting geometry is set to null.</p>
</li>
<li>
<p>If an LRS point is converted to a standard point, the information in the SDO_ELEM_INFO and SDO_ORDINATES attributes (described in <a href="sdo_objrelschema.htm#i1006226">Section 2.2.4</a> and <a href="sdo_objrelschema.htm#i1013373">Section 2.2.5</a>) in the input geometry is used to set the SDO_POINT attribute information in the resulting geometry, and the SDO_ELEM_INFO and SDO_ORDINATES attributes in the resulting geometry are set to null.</p>
</li>
</ul>
<p>The conversion functions are listed in <a href="sdo_lrs_ref.htm#g997022">Table 25-3</a> in <a href="sdo_lrs_ref.htm#g1013943">Chapter 25</a>. See also the reference information in <a href="sdo_lrs_ref.htm#g1013943">Chapter 25</a> about each conversion function.</p>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="CIHJBDGG"></a>
<div id="SPATL784" class="sect1">
<h2 class="sect1"><span class="secnum">7.6</span> Tolerance <a id="sthref668"></a><a id="sthref669"></a>Values with LRS Functions</h2>
<p>Many LRS functions require that you specify a tolerance value or one or more dimensional arrays. Thus, you can control whether to specify a single tolerance value for all non-measure dimensions or to use the tolerance associated with each non-measure dimension in the dimensional array or arrays. The tolerance is applied only to the geometry portion of the data, not to the measure dimension. The tolerance value for geodetic data is in meters, and for non-geodetic data it is in the unit of measurement associated with the data. (For a detailed discussion of tolerance, see <a href="sdo_intro.htm#i884589">Section 1.5.5</a>.)</p>
<p>Be sure that the tolerance value used is appropriate to the data and your purpose. If the results of LRS functions seem imprecise or incorrect, you may need to specify a smaller tolerance value.</p>
<p>For clip operations (see <a href="#i890036">Section 7.5.3</a>) and offset operations (see <a href="#CIHICAHE">Section 7.5.7</a>), if the returned segment has any shape points within the tolerance value of the input geometric segment from what would otherwise be the start point or end point of the returned segment, the shape point is used as the start point or end point of the returned segment. This is done to ensure that the resulting geometry does not contain any redundant vertices, which would cause the geometry to be invalid. For example, assume that the tolerance associated with the geometric segment (non-geodetic data) in <a href="#CIHGJHBI">Figure 7-19</a> is 0.5.</p>
<div id="SPATL785" class="figure">
<p class="titleinfigure"><a id="CIHGJHBI"></a>Figure 7-19 Segment for Clip Operation Affected by Tolerance</p>
<img width="344" height="61" src="img/lrs_tol.gif" alt="Description of Figure 7-19 follows" /><br />
<a id="sthref670" href="img_text/lrs_tol.htm">Description of "Figure 7-19 Segment for Clip Operation Affected by Tolerance"</a><br />
<br /></div>
<!-- class="figure" -->
<p>If you request a clip operation to return the segment between measure values 0 (the start point) and 61.5 in <a href="#CIHGJHBI">Figure 7-19</a>, and if the distance between the points associated with measure values 61.5 and 61.257 is less than the 0.5 tolerance value, the end point of the returned segment is (35, 10, 61.257).</p>
</div>
<!-- class="sect1" -->
<a id="i885918"></a>
<div id="SPATL786" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1"><span class="secnum">7.7</span> Example of LRS Functions</h2>
<p><a id="sthref671"></a><a id="sthref672"></a>This section presents a simplified example that uses LRS functions. It refers to concepts that are explained in this chapter and uses functions documented in <a href="sdo_lrs_ref.htm#g1013943">Chapter 25</a>.</p>
<p>This example uses the road that is illustrated in <a href="#i888413">Figure 7-20</a>.</p>
<div id="SPATL787" class="figure">
<p class="titleinfigure"><a id="i888413"></a>Figure 7-20 Simplified LRS Example: Highway</p>
<img width="304" height="303" src="img/highway.gif" alt="Description of Figure 7-20 follows" /><br />
<a id="sthref673" href="img_text/highway.htm">Description of "Figure 7-20 Simplified LRS Example: Highway"</a><br />
<br /></div>
<!-- class="figure" -->
<p>In <a href="#i888413">Figure 7-20</a>, the highway (Route 1) starts at point 2,2 and ends at point 5,14, follows the path shown, and has six entrance-exit points (Exit 1 through Exit 6). For simplicity, each unit on the graph represents one unit of measure, and thus the measure from start to end is 27 (the segment from Exit 5 to Exit 6 being the hypotenuse of a 3-4-5 right triangle).</p>
<p>Each row in <a href="#BABECGJD">Table 7-1</a> lists an actual highway-related feature and the LRS feature that corresponds to it or that can be used to represent it.</p>
<div id="SPATL788" class="tblformal">
<p class="titleintable"><a id="sthref674"></a><a id="BABECGJD"></a>Table 7-1 Highway Features and LRS Counterparts</p>
<table class="cellalignment740" title="Highway Features and LRS Counterparts" summary="Highway Features and LRS Counterparts" dir="ltr">
<thead>
<tr class="cellalignment734">
<th class="cellalignment741" id="r1c1-t3">Highway Feature</th>
<th class="cellalignment741" id="r1c2-t3">LRS Feature</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment734">
<td class="cellalignment742" id="r2c1-t3" headers="r1c1-t3">
<p>Named route, road, or street</p>
</td>
<td class="cellalignment742" headers="r2c1-t3 r1c2-t3">
<p>LRS segment, or linear feature (logical set of segments)</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r3c1-t3" headers="r1c1-t3">
<p>Mile or kilometer marker</p>
</td>
<td class="cellalignment742" headers="r3c1-t3 r1c2-t3">
<p>Measure</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r4c1-t3" headers="r1c1-t3">
<p>Accident reporting and location tracking</p>
</td>
<td class="cellalignment742" headers="r4c1-t3 r1c2-t3">
<p><a href="sdo_lrs_ref.htm#i85478">SDO_LRS.LOCATE_PT</a> function</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r5c1-t3" headers="r1c1-t3">
<p>Construction zone (portion of a road)</p>
</td>
<td class="cellalignment742" headers="r5c1-t3 r1c2-t3">
<p><a href="sdo_lrs_ref.htm#CHEHFHIC">SDO_LRS.CLIP_GEOM_SEGMENT</a> function</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r6c1-t3" headers="r1c1-t3">
<p>Road extension (adding at the beginning or end) or combination (designating or renaming two roads that meet as one road)</p>
</td>
<td class="cellalignment742" headers="r6c1-t3 r1c2-t3">
<p><a href="sdo_lrs_ref.htm#i80091">SDO_LRS.CONCATENATE_GEOM_SEGMENTS</a> function</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r7c1-t3" headers="r1c1-t3">
<p>Road reconstruction or splitting (resulting in two named roads from one named road)</p>
</td>
<td class="cellalignment742" headers="r7c1-t3 r1c2-t3">
<p><a href="sdo_lrs_ref.htm#i80081">SDO_LRS.SPLIT_GEOM_SEGMENT</a> procedure</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r8c1-t3" headers="r1c1-t3">
<p>Finding the closest point on the road to a point off the road (such as a building)</p>
</td>
<td class="cellalignment742" headers="r8c1-t3 r1c2-t3">
<p><a href="sdo_lrs_ref.htm#i79426">SDO_LRS.PROJECT_PT</a> function</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r9c1-t3" headers="r1c1-t3">
<p>Guard rail or fence alongside a road</p>
</td>
<td class="cellalignment742" headers="r9c1-t3 r1c2-t3">
<p><a href="sdo_lrs_ref.htm#i88633">SDO_LRS.OFFSET_GEOM_SEGMENT</a> function</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<p><a href="#BABFDJGE">Example 7-2</a> does the following:</p>
<ul>
<li>
<p>Creates a table to hold the segment depicted in <a href="#i888413">Figure 7-20</a></p>
</li>
<li>
<p>Inserts the definition of the highway depicted in <a href="#i888413">Figure 7-20</a> into the table</p>
</li>
<li>
<p>Inserts the necessary metadata into the USER_SDO_GEOM_METADATA view</p>
</li>
<li>
<p>Uses PL/SQL and SQL statements to define the segment and perform operations on it</p>
</li>
</ul>
<p><a href="#BABGFEHE">Example 7-3</a> includes the output of the SELECT statements in <a href="#BABFDJGE">Example 7-2</a>.</p>
<div id="SPATL789" class="example">
<p class="titleinexample"><a id="BABFDJGE"></a>Example 7-2 Simplified Example: Highway</p>
<pre>
-- Create a table for routes (highways).
CREATE TABLE lrs_routes (
  route_id  NUMBER PRIMARY KEY,
  route_name  VARCHAR2(32),
  route_geometry  SDO_GEOMETRY);

-- Populate table with just one route for this example.
INSERT INTO lrs_routes VALUES(
  1,
  'Route1',
  SDO_GEOMETRY(
    3302,  -- line string, 3 dimensions: X,Y,M
    NULL,
    NULL,
    SDO_ELEM_INFO_ARRAY(1,2,1), -- one line string, straight segments
    SDO_ORDINATE_ARRAY(
      2,2,0,   -- Start point - Exit1; 0 is measure from start.
      2,4,2,   -- Exit2; 2 is measure from start. 
      8,4,8,   -- Exit3; 8 is measure from start. 
      12,4,12,  -- Exit4; 12 is measure from start. 
      12,10,NULL,  -- Not an exit; measure automatically calculated and filled.
      8,10,22,  -- Exit5; 22 is measure from start.  
      5,14,27)  -- End point (Exit6); 27 is measure from start.
  )
);

-- Update the Spatial metadata.
INSERT INTO user_sdo_geom_metadata
    (TABLE_NAME,
     COLUMN_NAME,
     DIMINFO,
     SRID)
  VALUES (
  'lrs_routes',
  'route_geometry',
  SDO_DIM_ARRAY(   -- 20X20 grid
    SDO_DIM_ELEMENT('X', 0, 20, 0.005),
    SDO_DIM_ELEMENT('Y', 0, 20, 0.005),
    SDO_DIM_ELEMENT('M', 0, 20, 0.005) -- Measure dimension
     ),
  NULL   -- SRID
);

-- Create the spatial index.
CREATE INDEX lrs_routes_idx ON lrs_routes(route_geometry)
  INDEXTYPE IS MDSYS.SPATIAL_INDEX;

-- Test the LRS procedures.
DECLARE
geom_segment SDO_GEOMETRY;
line_string SDO_GEOMETRY;
dim_array SDO_DIM_ARRAY;
result_geom_1 SDO_GEOMETRY;
result_geom_2 SDO_GEOMETRY;
result_geom_3 SDO_GEOMETRY;

BEGIN

SELECT a.route_geometry into geom_segment FROM lrs_routes a
  WHERE a.route_name = 'Route1';
SELECT m.diminfo into dim_array from 
  user_sdo_geom_metadata m
  WHERE m.table_name = 'LRS_ROUTES' AND m.column_name = 'ROUTE_GEOMETRY';

-- Define the LRS segment for Route1. This will populate any null measures.
-- No need to specify start and end measures, because they are already defined 
-- in the geometry.
SDO_LRS.DEFINE_GEOM_SEGMENT (geom_segment, dim_array);

SELECT a.route_geometry INTO line_string FROM lrs_routes a 
  WHERE a.route_name = 'Route1';

-- Split Route1 into two segments.
SDO_LRS.SPLIT_GEOM_SEGMENT(line_string,dim_array,5,result_geom_1,result_geom_2);

-- Concatenate the segments that were just split.
result_geom_3 := SDO_LRS.CONCATENATE_GEOM_SEGMENTS(result_geom_1, dim_array, result_geom_2, dim_array);

-- Update and insert geometries into table, to display later.
UPDATE lrs_routes a SET a.route_geometry = geom_segment
   WHERE a.route_id = 1;

INSERT INTO lrs_routes VALUES(
  11,
  'result_geom_1',
  result_geom_1
);
INSERT INTO lrs_routes VALUES(
  12,
  'result_geom_2',
  result_geom_2
);
INSERT INTO lrs_routes VALUES(
  13,
  'result_geom_3',
  result_geom_3
);

END;
/

-- First, display the data in the LRS table.
SELECT route_id, route_name, route_geometry FROM lrs_routes;

-- Are result_geom_1 and result_geom2 connected? 
SELECT  SDO_LRS.CONNECTED_GEOM_SEGMENTS(a.route_geometry,
           b.route_geometry, 0.005)
  FROM lrs_routes a, lrs_routes b
  WHERE a.route_id = 11 AND b.route_id = 12;

-- Is the Route1 segment valid?
SELECT  SDO_LRS.VALID_GEOM_SEGMENT(route_geometry)
  FROM lrs_routes WHERE route_id = 1;

-- Is 50 a valid measure on Route1? (Should return FALSE; highest Route1 measure is 27.)
SELECT  SDO_LRS.VALID_MEASURE(route_geometry, 50)
  FROM lrs_routes WHERE route_id = 1;

-- Is the Route1 segment defined?
SELECT  SDO_LRS.IS_GEOM_SEGMENT_DEFINED(route_geometry)
  FROM lrs_routes WHERE route_id = 1;

-- How long is Route1?
SELECT  SDO_LRS.GEOM_SEGMENT_LENGTH(route_geometry)
  FROM lrs_routes WHERE route_id = 1;

-- What is the start measure of Route1?
SELECT  SDO_LRS.GEOM_SEGMENT_START_MEASURE(route_geometry)
  FROM lrs_routes WHERE route_id = 1;

-- What is the end measure of Route1?
SELECT  SDO_LRS.GEOM_SEGMENT_END_MEASURE(route_geometry)
  FROM lrs_routes WHERE route_id = 1;

-- What is the start point of Route1?
SELECT  SDO_LRS.GEOM_SEGMENT_START_PT(route_geometry)
  FROM lrs_routes WHERE route_id = 1;

-- What is the end point of Route1?
SELECT  SDO_LRS.GEOM_SEGMENT_END_PT(route_geometry)
  FROM lrs_routes WHERE route_id = 1;

-- Translate (shift measure values) (+10).
-- First, display the original segment; then, translate.
SELECT a.route_geometry FROM lrs_routes a WHERE a.route_id = 1;
SELECT SDO_LRS.TRANSLATE_MEASURE(a.route_geometry, m.diminfo, 10)
  FROM lrs_routes a, user_sdo_geom_metadata m
  WHERE m.table_name = 'LRS_ROUTES' AND m.column_name = 'ROUTE_GEOMETRY'
    AND a.route_id = 1;
 
-- Redefine geometric segment to "convert" miles to kilometers
DECLARE
geom_segment SDO_GEOMETRY;
dim_array SDO_DIM_ARRAY;
 
BEGIN
 
SELECT a.route_geometry into geom_segment FROM lrs_routes a
  WHERE a.route_name = 'Route1';
SELECT m.diminfo into dim_array from 
  user_sdo_geom_metadata m
  WHERE m.table_name = 'LRS_ROUTES' AND m.column_name = 'ROUTE_GEOMETRY';
 
-- "Convert" mile measures to kilometers (27 * 1.609 = 43.443).
SDO_LRS.REDEFINE_GEOM_SEGMENT (geom_segment,
  dim_array,
  0, -- Zero starting measure: LRS segment starts at start of route.
  43.443); -- End of LRS segment. 27 miles = 43.443 kilometers.
 
-- Update and insert geometries into table, to display later.
UPDATE lrs_routes a SET a.route_geometry = geom_segment
   WHERE a.route_id = 1;
 
END;/
-- Display the redefined segment, with all measures "converted."
SELECT a.route_geometry FROM lrs_routes a WHERE a.route_id = 1;

-- Clip a piece of Route1.
SELECT  SDO_LRS.CLIP_GEOM_SEGMENT(route_geometry, 5, 10)
  FROM lrs_routes WHERE route_id = 1;

-- Point (9,3,NULL) is off the road; should return (9,4,9).
SELECT  SDO_LRS.PROJECT_PT(route_geometry, 
  SDO_GEOMETRY(3301, NULL, NULL, 
     SDO_ELEM_INFO_ARRAY(1, 1, 1), 
     SDO_ORDINATE_ARRAY(9, 3, NULL)) )
  FROM lrs_routes WHERE route_id = 1;

-- Return the measure of the projected point.
SELECT  SDO_LRS.GET_MEASURE(
 SDO_LRS.PROJECT_PT(a.route_geometry, m.diminfo,
  SDO_GEOMETRY(3301, NULL, NULL, 
     SDO_ELEM_INFO_ARRAY(1, 1, 1), 
     SDO_ORDINATE_ARRAY(9, 3, NULL)) ),
 m.diminfo )
 FROM lrs_routes a, user_sdo_geom_metadata m
 WHERE m.table_name = 'LRS_ROUTES' AND m.column_name = 'ROUTE_GEOMETRY'
   AND a.route_id = 1;

-- Is point (9,3,NULL) a valid LRS point? (Should return TRUE.)
SELECT  SDO_LRS.VALID_LRS_PT(
  SDO_GEOMETRY(3301, NULL, NULL, 
     SDO_ELEM_INFO_ARRAY(1, 1, 1), 
     SDO_ORDINATE_ARRAY(9, 3, NULL)),
  m.diminfo)
  FROM lrs_routes a, user_sdo_geom_metadata m
  WHERE m.table_name = 'LRS_ROUTES' AND m.column_name = 'ROUTE_GEOMETRY'
    AND a.route_id = 1;

-- Locate the point on Route1 at measure 9, offset 0.
SELECT  SDO_LRS.LOCATE_PT(route_geometry, 9, 0)
  FROM lrs_routes WHERE route_id = 1;
</pre>
<p><a href="#BABGFEHE">Example 7-3</a> shows the output of the SELECT statements in <a href="#BABFDJGE">Example 7-2</a>.</p>
</div>
<!-- class="example" -->
<div id="SPATL790" class="example">
<p class="titleinexample"><a id="BABGFEHE"></a>Example 7-3 Simplified Example: Output of SELECT Statements</p>
<pre>
SQL&gt; -- First, display the data in the LRS table.
SQL&gt; SELECT route_id, route_name, route_geometry FROM lrs_routes;

  ROUTE_ID ROUTE_NAME                                                           
---------- --------------------------------                                     
ROUTE_GEOMETRY(SDO_GTYPE, SDO_SRID, SDO_POINT(X, Y, Z), SDO_ELEM_INFO, SDO_ORDIN
--------------------------------------------------------------------------------
         1 Route1                                                               
SDO_GEOMETRY(3302, NULL, NULL, SDO_ELEM_INFO_ARRAY(1, 2, 1), SDO_ORDINATE_ARRAY(
2, 2, 0, 2, 4, 2, 8, 4, 8, 12, 4, 12, 12, 10, 18, 8, 10, 22, 5, 14, 27))        
                                                                                
        11 result_geom_1                                                        
SDO_GEOMETRY(3302, NULL, NULL, SDO_ELEM_INFO_ARRAY(1, 2, 1), SDO_ORDINATE_ARRAY(
2, 2, 0, 2, 4, 2, 5, 4, 5))                                                     
                                                                                
        12 result_geom_2                                                        

  ROUTE_ID ROUTE_NAME                                                           
---------- --------------------------------                                     
ROUTE_GEOMETRY(SDO_GTYPE, SDO_SRID, SDO_POINT(X, Y, Z), SDO_ELEM_INFO, SDO_ORDIN
--------------------------------------------------------------------------------
SDO_GEOMETRY(3302, NULL, NULL, SDO_ELEM_INFO_ARRAY(1, 2, 1), SDO_ORDINATE_ARRAY(
5, 4, 5, 8, 4, 8, 12, 4, 12, 12, 10, 18, 8, 10, 22, 5, 14, 27))                 
                                                                                
        13 result_geom_3                                                        
SDO_GEOMETRY(3302, NULL, NULL, SDO_ELEM_INFO_ARRAY(1, 2, 1), SDO_ORDINATE_ARRAY(
2, 2, 0, 2, 4, 2, 5, 4, 5, 8, 4, 8, 12, 4, 12, 12, 10, 18, 8, 10, 22, 5, 14, 27)
)  
 
SQL&gt; -- Are result_geom_1 and result_geom2 connected?
SQL&gt; SELECT  SDO_LRS.CONNECTED_GEOM_SEGMENTS(a.route_geometry,
  2             b.route_geometry, 0.005)
  3    FROM lrs_routes a, lrs_routes b
  4    WHERE a.route_id = 11 AND b.route_id = 12;

SDO_LRS.CONNECTED_GEOM_SEGMENTS(A.ROUTE_GEOMETRY,B.ROUTE_GEOMETRY,0.005)        
--------------------------------------------------------------------------------
TRUE
 
SQL&gt; -- Is the Route1 segment valid?
SQL&gt; SELECT  SDO_LRS.VALID_GEOM_SEGMENT(route_geometry)
  2    FROM lrs_routes WHERE route_id = 1;

SDO_LRS.VALID_GEOM_SEGMENT(ROUTE_GEOMETRY)                                      
--------------------------------------------------------------------------------
TRUE 
 
SQL&gt; -- Is 50 a valid measure on Route1? (Should return FALSE; highest Route1 measure is 27.)
SQL&gt; SELECT  SDO_LRS.VALID_MEASURE(route_geometry, 50)
  2    FROM lrs_routes WHERE route_id = 1;

SDO_LRS.VALID_MEASURE(ROUTE_GEOMETRY,50)                                        
--------------------------------------------------------------------------------
FALSE 
 
SQL&gt; -- Is the Route1 segment defined?
SQL&gt; SELECT  SDO_LRS.IS_GEOM_SEGMENT_DEFINED(route_geometry)
  2    FROM lrs_routes WHERE route_id = 1;

SDO_LRS.IS_GEOM_SEGMENT_DEFINED(ROUTE_GEOMETRY)                                 
--------------------------------------------------------------------------------
TRUE 
 
SQL&gt; -- How long is Route1?
SQL&gt; SELECT  SDO_LRS.GEOM_SEGMENT_LENGTH(route_geometry)
  2    FROM lrs_routes WHERE route_id = 1;

SDO_LRS.GEOM_SEGMENT_LENGTH(ROUTE_GEOMETRY)                                     
-------------------------------------------                                     
                                         27  
 
SQL&gt; -- What is the start measure of Route1?
SQL&gt; SELECT  SDO_LRS.GEOM_SEGMENT_START_MEASURE(route_geometry)
  2    FROM lrs_routes WHERE route_id = 1;

SDO_LRS.GEOM_SEGMENT_START_MEASURE(ROUTE_GEOMETRY)                              
--------------------------------------------------                              
                                                 0  
 
SQL&gt; -- What is the end measure of Route1?
SQL&gt; SELECT  SDO_LRS.GEOM_SEGMENT_END_MEASURE(route_geometry)
  2    FROM lrs_routes WHERE route_id = 1;

SDO_LRS.GEOM_SEGMENT_END_MEASURE(ROUTE_GEOMETRY)                                
------------------------------------------------                                
                                              27  
 
SQL&gt; -- What is the start point of Route1?
SQL&gt; SELECT  SDO_LRS.GEOM_SEGMENT_START_PT(route_geometry)
  2    FROM lrs_routes WHERE route_id = 1;

SDO_LRS.GEOM_SEGMENT_START_PT(ROUTE_GEOMETRY)(SDO_GTYPE, SDO_SRID, SDO_POINT(X, 
--------------------------------------------------------------------------------
SDO_GEOMETRY(3301, NULL, NULL, SDO_ELEM_INFO_ARRAY(1, 1, 1), SDO_ORDINATE_ARRAY(
2, 2, 0)) 
 
SQL&gt; -- What is the end point of Route1?
SQL&gt; SELECT  SDO_LRS.GEOM_SEGMENT_END_PT(route_geometry)
  2    FROM lrs_routes WHERE route_id = 1;

SDO_LRS.GEOM_SEGMENT_END_PT(ROUTE_GEOMETRY)(SDO_GTYPE, SDO_SRID, SDO_POINT(X, Y,
--------------------------------------------------------------------------------
SDO_GEOMETRY(3301, NULL, NULL, SDO_ELEM_INFO_ARRAY(1, 1, 1), SDO_ORDINATE_ARRAY(
5, 14, 27))  
 
SQL&gt; -- Translate (shift measure values) (+10).
SQL&gt; -- First, display the original segment; then, translate.
SQL&gt; SELECT a.route_geometry FROM lrs_routes a WHERE a.route_id = 1;
 
ROUTE_GEOMETRY(SDO_GTYPE, SDO_SRID, SDO_POINT(X, Y, Z), SDO_ELEM_INFO, SDO_ORDIN
--------------------------------------------------------------------------------
SDO_GEOMETRY(3302, NULL, NULL, SDO_ELEM_INFO_ARRAY(1, 2, 1), SDO_ORDINATE_ARRAY(
2, 2, 0, 2, 4, 2, 8, 4, 8, 12, 4, 12, 12, 10, 18, 8, 10, 22, 5, 14, 27))        
                                                                                
SQL&gt; SELECT SDO_LRS.TRANSLATE_MEASURE(a.route_geometry, m.diminfo, 10)
  2    FROM lrs_routes a, user_sdo_geom_metadata m
  3    WHERE m.table_name = 'LRS_ROUTES' AND m.column_name = 'ROUTE_GEOMETRY'
  4   AND a.route_id = 1;
 
SDO_LRS.TRANSLATE_MEASURE(A.ROUTE_GEOMETRY,M.DIMINFO,10)(SDO_GTYPE, SDO_SRID, SD
--------------------------------------------------------------------------------
SDO_GEOMETRY(3302, NULL, NULL, SDO_ELEM_INFO_ARRAY(1, 2, 1), SDO_ORDINATE_ARRAY(
2, 2, 10, 2, 4, 12, 8, 4, 18, 12, 4, 22, 12, 10, 28, 8, 10, 32, 5, 14, 37))     
                                                                                
 
SQL&gt; -- Redefine geometric segment to "convert" miles to kilometers
SQL&gt; DECLARE
  2  geom_segment SDO_GEOMETRY;
  3  dim_array SDO_DIM_ARRAY;
  4  
  5  BEGIN
  6  
  7  SELECT a.route_geometry into geom_segment FROM lrs_routes a
  8    WHERE a.route_name = 'Route1';
  9  SELECT m.diminfo into dim_array from
 10    user_sdo_geom_metadata m
 11    WHERE m.table_name = 'LRS_ROUTES' AND m.column_name = 'ROUTE_GEOMETRY';
 12  
 13  -- "Convert" mile measures to kilometers (27 * 1.609 = 43.443).
 14  SDO_LRS.REDEFINE_GEOM_SEGMENT (geom_segment,
 15    dim_array,
 16    0, -- Zero starting measure: LRS segment starts at start of route.
 17    43.443); -- End of LRS segment. 27 miles = 43.443 kilometers.
 18  
 19  -- Update and insert geometries into table, to display later.
 20  UPDATE lrs_routes a SET a.route_geometry = geom_segment
 21     WHERE a.route_id = 1;
 22  
 23  END;
 24  /
 
PL/SQL procedure successfully completed.
 
SQL&gt; -- Display the redefined segment, with all measures "converted."
SQL&gt; SELECT a.route_geometry FROM lrs_routes a WHERE a.route_id = 1;
 
ROUTE_GEOMETRY(SDO_GTYPE, SDO_SRID, SDO_POINT(X, Y, Z), SDO_ELEM_INFO, SDO_ORDIN
--------------------------------------------------------------------------------
SDO_GEOMETRY(3302, NULL, NULL, SDO_ELEM_INFO_ARRAY(1, 2, 1), SDO_ORDINATE_ARRAY(
2, 2, 0, 2, 4, 3.218, 8, 4, 12.872, 12, 4, 19.308, 12, 10, 28.962, 8, 10, 35.398
, 5, 14, 43.443)) 
 
SQL&gt; -- Clip a piece of Route1.
SQL&gt; SELECT  SDO_LRS.CLIP_GEOM_SEGMENT(route_geometry, 5, 10)
  2    FROM lrs_routes WHERE route_id = 1;

SDO_LRS.CLIP_GEOM_SEGMENT(ROUTE_GEOMETRY,5,10)(SDO_GTYPE, SDO_SRID, SDO_POINT(X,
--------------------------------------------------------------------------------
SDO_GEOMETRY(3302, NULL, NULL, SDO_ELEM_INFO_ARRAY(1, 2, 1), SDO_ORDINATE_ARRAY(
5, 4, 5, 8, 4, 8, 10, 4, 10))   
 
SQL&gt; -- Point (9,3,NULL) is off the road; should return (9,4,9).
SQL&gt; SELECT  SDO_LRS.PROJECT_PT(route_geometry,
  2    SDO_GEOMETRY(3301, NULL, NULL,
  3    SDO_ELEM_INFO_ARRAY(1, 1, 1),
  4    SDO_ORDINATE_ARRAY(9, 3, NULL)) )
  5    FROM lrs_routes WHERE route_id = 1;

SDO_LRS.PROJECT_PT(ROUTE_GEOMETRY,SDO_GEOMETRY(3301,NULL,NULL,SDO_EL
--------------------------------------------------------------------------------
SDO_GEOMETRY(3301, NULL, NULL, SDO_ELEM_INFO_ARRAY(1, 1, 1), SDO_ORDINATE_ARRAY(
9, 4, 9)) 
 
SQL&gt; -- Return the measure of the projected point.
SQL&gt; SELECT  SDO_LRS.GET_MEASURE(
  2   SDO_LRS.PROJECT_PT(a.route_geometry, m.diminfo,
  3    SDO_GEOMETRY(3301, NULL, NULL,
  4    SDO_ELEM_INFO_ARRAY(1, 1, 1),
  5    SDO_ORDINATE_ARRAY(9, 3, NULL)) ),
  6   m.diminfo )
  7   FROM lrs_routes a, user_sdo_geom_metadata m
  8   WHERE m.table_name = 'LRS_ROUTES' AND m.column_name = 'ROUTE_GEOMETRY'
  9      AND a.route_id = 1;

SDO_LRS.GET_MEASURE(SDO_LRS.PROJECT_PT(A.ROUTE_GEOMETRY,M.DIMINFO,SDO_GEOM
--------------------------------------------------------------------------------
                                                                               9
 
SQL&gt; -- Is point (9,3,NULL) a valid LRS point? (Should return TRUE.)
SQL&gt; SELECT  SDO_LRS.VALID_LRS_PT(
  2    SDO_GEOMETRY(3301, NULL, NULL,
  3    SDO_ELEM_INFO_ARRAY(1, 1, 1),
  4    SDO_ORDINATE_ARRAY(9, 3, NULL)),
  5    m.diminfo)
  6    FROM lrs_routes a, user_sdo_geom_metadata m
  7    WHERE m.table_name = 'LRS_ROUTES' AND m.column_name = 'ROUTE_GEOMETRY'
  8    AND a.route_id = 1;

SDO_LRS.VALID_LRS_PT(SDO_GEOMETRY(3301,NULL,NULL,SDO_ELEM_INFO_ARRAY
------------------------------------------------------------------------------
TRUE   
 
SQL&gt; -- Locate the point on Route1 at measure 9, offset 0.
SQL&gt; SELECT  SDO_LRS.LOCATE_PT(route_geometry, 9, 0)
  2    FROM lrs_routes WHERE route_id = 1;

SDO_LRS.LOCATE_PT(ROUTE_GEOMETRY,9,0)(SDO_GTYPE, SDO_SRID, SDO_POINT(X, Y, Z), S
--------------------------------------------------------------------------------
SDO_GEOMETRY(3301, NULL, NULL, SDO_ELEM_INFO_ARRAY(1, 1, 1), SDO_ORDINATE_ARRAY(
9, 4, 9)) 
</pre></div>
<!-- class="example" --></div>
<!-- class="sect1" --></div>
<!-- class="chapter" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment733">
<tr>
<td class="cellalignment742">
<table class="cellalignment738">
<tr>
<td class="cellalignment737"><a href="sdo_cs_concepts.htm"><img width="24" height="24" src="../../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment737"><a href="sdo_sam_concepts.htm"><img width="24" height="24" src="../../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;1999, 2013,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment744">
<table class="cellalignment736">
<tr>
<td class="cellalignment737"><a href="../../index.htm"><img width="24" height="24" src="../../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment737"><a href="../../nav/portal_booklist.htm"><img width="24" height="24" src="../../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment737"><a href="toc.htm"><img width="24" height="24" src="../../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment737"><a href="index.htm"><img width="24" height="24" src="../../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment737"><a href="../../nav/mindx.htm"><img width="24" height="24" src="../../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment737"><a href="../../dcommon/html/feedback.htm"><img width="24" height="24" src="../../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>
</body>
</html>
