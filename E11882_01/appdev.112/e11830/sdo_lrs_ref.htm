<!DOCTYPE html>
<html lang="en" >
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1">
<meta charset="utf-8">
<title>SDO_LRS Package (Linear Referencing System)</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Version 5.1.2 Build 743" />
<meta name="description" content="Provides usage and reference information for indexing and storing spatial data and for developing spatial applications using Oracle Spatial and Graph and Oracle Locator." />
<meta name="dcterms.created" content="2013-11-26T3:11:48Z" />
<meta name="robots" content="all" />
<meta name="dcterms.title" content="Spatial Developer's Guide" />
<meta name="dcterms.identifier" content="E11830-15" />
<meta name="dcterms.isVersionOf" content="SPATL" />
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;1999, 2013,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved." />
<link rel="Start" href="../../index.htm" title="Home" type="text/html" />
<link rel="Copyright" href="../../dcommon/html/cpyr.htm" title="Copyright" type="text/html" />

<script type="application/javascript"  src="../../dcommon/js/headfoot.js"></script>
<script type="application/javascript"  src="../../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html" />
<link rel="Index" href="index.htm" title="Index" type="text/html" />
<link rel="Glossary" href="glossary.htm" title="Glossary" type="text/html" />
<link rel="Prev" href="sdo_objgeom.htm" title="Previous" type="text/html" />
<link rel="Next" href="sdo_objmigr.htm" title="Next" type="text/html" />
<link rel="alternate" href="../e11830.pdf" title="PDF version" type="application/pdf" />
<link rel="schema.dcterms" href="http://purl.org/dc/terms/" />
<link rel="stylesheet" href="../../dcommon/css/fusiondoc.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/header.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/footer.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/fonts.css">
<link rel="stylesheet" href="../../dcommon/css/foundation.css">
<link rel="stylesheet" href="../../dcommon/css/codemirror.css">
<link rel="stylesheet" type="text/css" title="Default" href="../../nav/css/html5.css">
<link rel="stylesheet" href="../../dcommon/css/respond-480-tablet.css">
<link rel="stylesheet" href="../../dcommon/css/respond-768-laptop.css">
<link rel="stylesheet" href="../../dcommon/css/respond-1140-deskop.css">
<script type="application/javascript" src="../../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">35/51</span> <!-- End Header -->
<div id="SPATL150" class="chapter"><a id="g1013943"></a>
<h1 class="chapter"><span class="secnum">25</span> SDO_LRS Package <a id="sthref1941"></a>(Linear Referencing System)</h1>
<p><a id="sthref1942"></a>The MDSYS.SDO_LRS package contains subprograms that create, modify, query, and convert linear referencing elements. These subprograms do not change the state of the database. Most LRS subprograms are functions.</p>
<p>To use the subprograms in this chapter, you must understand the linear referencing system (LRS) concepts and techniques described in <a href="sdo_lrs_concepts.htm#BABIIFFH">Chapter 7</a>.</p>
<p><a id="sthref1943"></a><a id="sthref1944"></a><a id="sthref1945"></a><a id="sthref1946"></a><a href="#g996908">Table 25-1</a> lists subprograms related to creating and editing geometric segments.</p>
<div id="SPATL1134" class="tblformal">
<p class="titleintable"><a id="sthref1947"></a><a id="g996908"></a>Table 25-1 Subprograms for Creating and Editing Geometric Segments</p>
<table class="cellalignment740" title="Subprograms for Creating and Editing Geometric Segments" summary="Subprograms for Creating and Editing Geometric Segments" dir="ltr">
<thead>
<tr class="cellalignment734">
<th class="cellalignment741" id="r1c1-t2">Subprogram</th>
<th class="cellalignment741" id="r1c2-t2">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment734">
<td class="cellalignment742" id="r2c1-t2" headers="r1c1-t2">
<p><a href="#i84344">SDO_LRS.DEFINE_GEOM_SEGMENT</a></p>
</td>
<td class="cellalignment742" headers="r2c1-t2 r1c2-t2">
<p>Defines a geometric segment.</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r3c1-t2" headers="r1c1-t2">
<p><a href="#i85130">SDO_LRS.REDEFINE_GEOM_SEGMENT</a></p>
</td>
<td class="cellalignment742" headers="r3c1-t2 r1c2-t2">
<p>Populates the measures of all shape points of a geometric segment based on the start and end measures, overriding any previously assigned measures between the start point and end point.</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r4c1-t2" headers="r1c1-t2">
<p><a href="#CHEHFHIC">SDO_LRS.CLIP_GEOM_SEGMENT</a></p>
</td>
<td class="cellalignment742" headers="r4c1-t2 r1c2-t2">
<p>Clips a geometric segment (synonym of <a href="#i83484">SDO_LRS.DYNAMIC_SEGMENT</a>).</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r5c1-t2" headers="r1c1-t2">
<p><a href="#i83484">SDO_LRS.DYNAMIC_SEGMENT</a></p>
</td>
<td class="cellalignment742" headers="r5c1-t2 r1c2-t2">
<p>Clips a geometric segment (synonym of <a href="#CHEHFHIC">SDO_LRS.CLIP_GEOM_SEGMENT</a>).</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r6c1-t2" headers="r1c1-t2">
<p><a href="#i80091">SDO_LRS.CONCATENATE_GEOM_SEGMENTS</a></p>
</td>
<td class="cellalignment742" headers="r6c1-t2 r1c2-t2">
<p>Concatenates two geometric segments into one segment.</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r7c1-t2" headers="r1c1-t2">
<p><a href="#CACJAEFE">SDO_LRS.LRS_INTERSECTION</a></p>
</td>
<td class="cellalignment742" headers="r7c1-t2 r1c2-t2">
<p>Returns an LRS geometry object that is the topological intersection (AND operation) of two geometry objects where one or both are LRS geometries.</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r8c1-t2" headers="r1c1-t2">
<p><a href="#i88633">SDO_LRS.OFFSET_GEOM_SEGMENT</a></p>
</td>
<td class="cellalignment742" headers="r8c1-t2 r1c2-t2">
<p>Returns the geometric segment at a specified offset from a geometric segment.</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r9c1-t2" headers="r1c1-t2">
<p><a href="#i80081">SDO_LRS.SPLIT_GEOM_SEGMENT</a></p>
</td>
<td class="cellalignment742" headers="r9c1-t2 r1c2-t2">
<p>Splits a geometric segment into two segments.</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r10c1-t2" headers="r1c1-t2">
<p><a href="#CACHBEJJ">SDO_LRS.RESET_MEASURE</a></p>
</td>
<td class="cellalignment742" headers="r10c1-t2 r1c2-t2">
<p>Sets all measures of a geometric segment, including the start and end measures, to null values, overriding any previously assigned measures.</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r11c1-t2" headers="r1c1-t2">
<p><a href="#CACHCCGB">SDO_LRS.SCALE_GEOM_SEGMENT</a></p>
</td>
<td class="cellalignment742" headers="r11c1-t2 r1c2-t2">
<p>Returns the geometry object resulting from a measure scaling operation on a geometric segment.</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r12c1-t2" headers="r1c1-t2">
<p><a href="#CACECEFG">SDO_LRS.SET_PT_MEASURE</a></p>
</td>
<td class="cellalignment742" headers="r12c1-t2 r1c2-t2">
<p>Sets the measure value of a specified point.</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r13c1-t2" headers="r1c1-t2">
<p><a href="#i85148">SDO_LRS.REVERSE_MEASURE</a></p>
</td>
<td class="cellalignment742" headers="r13c1-t2 r1c2-t2">
<p>Returns a new geometric segment by reversing the measure values, but not the direction, of the original geometric segment.</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r14c1-t2" headers="r1c1-t2">
<p><a href="#i85156">SDO_LRS.TRANSLATE_MEASURE</a></p>
</td>
<td class="cellalignment742" headers="r14c1-t2 r1c2-t2">
<p>Returns a new geometric segment by translating the original geometric segment (that is, shifting the start and end measures by a specified value).</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r15c1-t2" headers="r1c1-t2">
<p><a href="#i89756">SDO_LRS.REVERSE_GEOMETRY</a></p>
</td>
<td class="cellalignment742" headers="r15c1-t2 r1c2-t2">
<p>Returns a new geometric segment by reversing the measure values and the direction of the original geometric segment.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<p><a id="sthref1948"></a><a id="sthref1949"></a><a href="#g996948">Table 25-2</a> lists subprograms related to querying geometric segments.</p>
<div id="SPATL1135" class="tblformal">
<p class="titleintable"><a id="sthref1950"></a><a id="g996948"></a>Table 25-2 Subprograms for Querying and Validating Geometric Segments</p>
<table class="cellalignment740" title="Subprograms for Querying and Validating Geometric Segments" summary="Subprograms for Querying and Validating Geometric Segments" dir="ltr">
<thead>
<tr class="cellalignment734">
<th class="cellalignment741" id="r1c1-t3">Subprogram</th>
<th class="cellalignment741" id="r1c2-t3">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment734">
<td class="cellalignment742" id="r2c1-t3" headers="r1c1-t3">
<p><a href="#i78247">SDO_LRS.VALID_GEOM_SEGMENT</a></p>
</td>
<td class="cellalignment742" headers="r2c1-t3 r1c2-t3">
<p>Checks if a geometric segment is valid.</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r3c1-t3" headers="r1c1-t3">
<p><a href="#i80120">SDO_LRS.VALID_LRS_PT</a></p>
</td>
<td class="cellalignment742" headers="r3c1-t3 r1c2-t3">
<p>Checks if an LRS point is valid.</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r4c1-t3" headers="r1c1-t3">
<p><a href="#i80130">SDO_LRS.VALID_MEASURE</a></p>
</td>
<td class="cellalignment742" headers="r4c1-t3 r1c2-t3">
<p>Checks if a measure falls within the measure range of a geometric segment.</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r5c1-t3" headers="r1c1-t3">
<p><a href="#i80140">SDO_LRS.CONNECTED_GEOM_SEGMENTS</a></p>
</td>
<td class="cellalignment742" headers="r5c1-t3 r1c2-t3">
<p>Checks if two geometric segments are spatially connected.</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r6c1-t3" headers="r1c1-t3">
<p><a href="#i84493">SDO_LRS.GEOM_SEGMENT_LENGTH</a></p>
</td>
<td class="cellalignment742" headers="r6c1-t3 r1c2-t3">
<p>Returns the length of a geometric segment.</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r7c1-t3" headers="r1c1-t3">
<p><a href="#i84563">SDO_LRS.GEOM_SEGMENT_START_PT</a></p>
</td>
<td class="cellalignment742" headers="r7c1-t3 r1c2-t3">
<p>Returns the start point of a geometric segment.</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r8c1-t3" headers="r1c1-t3">
<p><a href="#i84462">SDO_LRS.GEOM_SEGMENT_END_PT</a></p>
</td>
<td class="cellalignment742" headers="r8c1-t3 r1c2-t3">
<p>Returns the end point of a geometric segment.</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r9c1-t3" headers="r1c1-t3">
<p><a href="#i84533">SDO_LRS.GEOM_SEGMENT_START_MEASURE</a></p>
</td>
<td class="cellalignment742" headers="r9c1-t3 r1c2-t3">
<p>Returns the start measure of a geometric segment.</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r10c1-t3" headers="r1c1-t3">
<p><a href="#i84432">SDO_LRS.GEOM_SEGMENT_END_MEASURE</a></p>
</td>
<td class="cellalignment742" headers="r10c1-t3 r1c2-t3">
<p>Returns the end measure of a geometric segment.</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r11c1-t3" headers="r1c1-t3">
<p><a href="#i84595">SDO_LRS.GET_MEASURE</a></p>
</td>
<td class="cellalignment742" headers="r11c1-t3 r1c2-t3">
<p>Returns the measure of an LRS point.</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r12c1-t3" headers="r1c1-t3">
<p><a href="#CACFEHDB">SDO_LRS.GET_NEXT_SHAPE_PT</a></p>
</td>
<td class="cellalignment742" headers="r12c1-t3 r1c2-t3">
<p>Returns the next shape point on a geometric segment after a specified measure value or LRS point.</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r13c1-t3" headers="r1c1-t3">
<p><a href="#CACEJBBJ">SDO_LRS.GET_NEXT_SHAPE_PT_MEASURE</a></p>
</td>
<td class="cellalignment742" headers="r13c1-t3 r1c2-t3">
<p>Returns the measure value of the next shape point on a geometric segment after a specified measure value or LRS point.</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r14c1-t3" headers="r1c1-t3">
<p><a href="#CACBIJJD">SDO_LRS.GET_PREV_SHAPE_PT</a></p>
</td>
<td class="cellalignment742" headers="r14c1-t3 r1c2-t3">
<p>Returns the previous shape point on a geometric segment before a specified measure value or LRS point.</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r15c1-t3" headers="r1c1-t3">
<p><a href="#CACFGFCB">SDO_LRS.GET_PREV_SHAPE_PT_MEASURE</a></p>
</td>
<td class="cellalignment742" headers="r15c1-t3 r1c2-t3">
<p>Returns the measure value of the previous shape point on a geometric segment before a specified measure value or LRS point.</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r16c1-t3" headers="r1c1-t3">
<p><a href="#CACEGBDC">SDO_LRS.IS_GEOM_SEGMENT_DEFINED</a></p>
</td>
<td class="cellalignment742" headers="r16c1-t3 r1c2-t3">
<p>Checks if an LRS segment is defined correctly.</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r17c1-t3" headers="r1c1-t3">
<p><a href="#i89648">SDO_LRS.IS_MEASURE_DECREASING</a></p>
</td>
<td class="cellalignment742" headers="r17c1-t3 r1c2-t3">
<p>Checks if the measure values along an LRS segment are decreasing (that is, descending in numerical value).</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r18c1-t3" headers="r1c1-t3">
<p><a href="#i89579">SDO_LRS.IS_MEASURE_INCREASING</a></p>
</td>
<td class="cellalignment742" headers="r18c1-t3 r1c2-t3">
<p>Checks if the measure values along an LRS segment are increasing (that is, ascending in numerical value).</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r19c1-t3" headers="r1c1-t3">
<p><a href="#CACDIFAE">SDO_LRS.IS_SHAPE_PT_MEASURE</a></p>
</td>
<td class="cellalignment742" headers="r19c1-t3 r1c2-t3">
<p>Checks if a specified measure value is associated with a shape point on a geometric segment.</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r20c1-t3" headers="r1c1-t3">
<p><a href="#i85244">SDO_LRS.MEASURE_RANGE</a></p>
</td>
<td class="cellalignment742" headers="r20c1-t3 r1c2-t3">
<p>Returns the measure range of a geometric segment, that is, the difference between the start measure and end measure.</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r21c1-t3" headers="r1c1-t3">
<p><a href="#i84773">SDO_LRS.MEASURE_TO_PERCENTAGE</a></p>
</td>
<td class="cellalignment742" headers="r21c1-t3 r1c2-t3">
<p>Returns the percentage (0 to 100) that a specified measure is of the measure range of a geometric segment.</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r22c1-t3" headers="r1c1-t3">
<p><a href="#i84808">SDO_LRS.PERCENTAGE_TO_MEASURE</a></p>
</td>
<td class="cellalignment742" headers="r22c1-t3 r1c2-t3">
<p>Returns the measure value of a specified percentage (0 to 100) of the measure range of a geometric segment.</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r23c1-t3" headers="r1c1-t3">
<p><a href="#i85478">SDO_LRS.LOCATE_PT</a></p>
</td>
<td class="cellalignment742" headers="r23c1-t3 r1c2-t3">
<p>Returns the point located at a specified distance from the start of a geometric segment.</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r24c1-t3" headers="r1c1-t3">
<p><a href="#i79426">SDO_LRS.PROJECT_PT</a></p>
</td>
<td class="cellalignment742" headers="r24c1-t3 r1c2-t3">
<p>Returns the projection point of a specified point. The projection point is on the geometric segment.</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r25c1-t3" headers="r1c1-t3">
<p><a href="#i91388">SDO_LRS.FIND_LRS_DIM_POS</a></p>
</td>
<td class="cellalignment742" headers="r25c1-t3 r1c2-t3">
<p>Returns the position of the measure dimension within the SDO_DIM_ARRAY structure for a specified SDO_GEOMETRY column.</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r26c1-t3" headers="r1c1-t3">
<p><a href="#i85426">SDO_LRS.FIND_MEASURE</a></p>
</td>
<td class="cellalignment742" headers="r26c1-t3 r1c2-t3">
<p>Returns the measure of the closest point on a segment to a specified projection point.</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r27c1-t3" headers="r1c1-t3">
<p><a href="#CACGADDG">SDO_LRS.FIND_OFFSET</a></p>
</td>
<td class="cellalignment742" headers="r27c1-t3 r1c2-t3">
<p>Returns the signed offset (shortest distance) from a point to a geometric segment.</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r28c1-t3" headers="r1c1-t3">
<p><a href="#CACEDFIG">SDO_LRS.VALIDATE_LRS_GEOMETRY</a></p>
</td>
<td class="cellalignment742" headers="r28c1-t3 r1c2-t3">
<p>Checks if an LRS geometry is valid.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<p><a id="sthref1951"></a><a id="sthref1952"></a><a href="#g997022">Table 25-3</a> lists subprograms related to converting geometric segments.</p>
<div id="SPATL1136" class="tblformal">
<p class="titleintable"><a id="sthref1953"></a><a id="g997022"></a>Table 25-3 Subprograms for Converting Geometric Segments</p>
<table class="cellalignment740" title="Subprograms for Converting Geometric Segments" summary="Subprograms for Converting Geometric Segments" dir="ltr">
<thead>
<tr class="cellalignment734">
<th class="cellalignment741" id="r1c1-t4">Subprogram</th>
<th class="cellalignment741" id="r1c2-t4">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment734">
<td class="cellalignment742" id="r2c1-t4" headers="r1c1-t4">
<p><a href="#i85363">SDO_LRS.CONVERT_TO_LRS_DIM_ARRAY</a></p>
</td>
<td class="cellalignment742" headers="r2c1-t4 r1c2-t4">
<p>Converts a standard dimensional array to an LRS dimensional array by creating a measure dimension.</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r3c1-t4" headers="r1c1-t4">
<p><a href="#i85408">SDO_LRS.CONVERT_TO_LRS_GEOM</a></p>
</td>
<td class="cellalignment742" headers="r3c1-t4 r1c2-t4">
<p>Converts a standard SDO_GEOMETRY line string to an LRS geometric segment by adding measure information.</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r4c1-t4" headers="r1c1-t4">
<p><a href="#i85409">SDO_LRS.CONVERT_TO_LRS_LAYER</a></p>
</td>
<td class="cellalignment742" headers="r4c1-t4 r1c2-t4">
<p>Converts all geometry objects in a column of type SDO_GEOMETRY from standard line string geometries without measure information to LRS geometric segments with measure information, and updates the metadata.</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r5c1-t4" headers="r1c1-t4">
<p><a href="#i85410">SDO_LRS.CONVERT_TO_STD_DIM_ARRAY</a></p>
</td>
<td class="cellalignment742" headers="r5c1-t4 r1c2-t4">
<p>Converts an LRS dimensional array to a standard dimensional array by removing the measure dimension.</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r6c1-t4" headers="r1c1-t4">
<p><a href="#i85411">SDO_LRS.CONVERT_TO_STD_GEOM</a></p>
</td>
<td class="cellalignment742" headers="r6c1-t4 r1c2-t4">
<p>Converts an LRS geometric segment to a standard SDO_GEOMETRY line string by removing measure information.</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r7c1-t4" headers="r1c1-t4">
<p><a href="#i85412">SDO_LRS.CONVERT_TO_STD_LAYER</a></p>
</td>
<td class="cellalignment742" headers="r7c1-t4 r1c2-t4">
<p>Converts all geometry objects in a column of type SDO_GEOMETRY from LRS geometric segments with measure information to standard line string geometries without measure information, and updates the metadata.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<p>For more information about conversion subprograms, see <a href="sdo_lrs_concepts.htm#i887224">Section 7.5.10</a>.</p>
<p>The rest of this chapter provides reference information on the subprograms, listed in alphabetical order.</p>
<div class="refentry"><a id="CHEHFHIC"></a>
<div id="SPATL1137" class="refsect1">
<h2 class="refsect1"><a id="sthref1954"></a><a id="sthref1955"></a>SDO_LRS.CLIP_GEOM_SEGMENT</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1956"></a>Format</p>
<p class="synopsis">SDO_LRS.CLIP_GEOM_SEGMENT(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;geom_segment IN SDO_GEOMETRY,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;start_measure IN NUMBER,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end_measure IN NUMBER,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tolerance IN NUMBER DEFAULT 1.0e-8</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) RETURN SDO_GEOMETRY;</p>
<p>or</p>
<p class="synopsis">SDO_LRS.CLIP_GEOM_SEGMENT(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;geom_segment IN SDO_GEOMETRY,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dim_array IN SDO_DIM_ARRAY,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;start_measure IN NUMBER,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end_measure IN NUMBER</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) RETURN SDO_GEOMETRY;</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1957"></a>Description</p>
<p>Returns the geometry object resulting from a clip operation on a geometric segment.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
SDO_LRS.CLIP_GEOM_SEGMENT and <a href="#i83484">SDO_LRS.DYNAMIC_SEGMENT</a> are synonyms: both functions have the same parameters, behavior, and return value.</div>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1958"></a>Parameters</p>
<dl>
<dt>geom_segment</dt>
<dd>
<p>Cartographic representation of a linear feature.</p>
</dd>
<dt>dim_array</dt>
<dd>
<p>Dimensional information array corresponding to <code>geom_segment</code>, usually selected from one of the xxx_SDO_GEOM_METADATA views (described in <a href="sdo_objrelschema.htm#i1001937">Section 2.8</a>).</p>
</dd>
<dt>start_measure</dt>
<dd>
<p>Start measure of the geometric segment.</p>
</dd>
<dt>end_measure</dt>
<dd>
<p>End measure of the geometric segment.</p>
</dd>
<dt>tolerance</dt>
<dd>
<p>Tolerance value (see <a href="sdo_intro.htm#i884589">Section 1.5.5</a> and <a href="sdo_lrs_concepts.htm#CIHJBDGG">Section 7.6</a>). The default value is 0.00000001.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1959"></a>Usage Notes</p>
<p>An exception is raised if <code>geom_segment</code>, <code>start_measure</code>, or <code>end_measure</code> is invalid.</p>
<p><code>start_measure</code> and <code>end_measure</code> can be any points on the geometric segment. They do not have to be in any specific order. For example, <code>start_measure</code> and <code>end_measure</code> can be 5 and 10, respectively, or 10 and 5, respectively.</p>
<p>The direction and measures of the resulting geometric segment are preserved (that is, they reflect the original segment).</p>
<p>The <span class="italic">_3D</span> format of this function (SDO_LRS.CLIP_GEOM_SEGMENT_3D) is available. For information about <span class="italic">_3D</span> formats of LRS functions, see <a href="sdo_lrs_concepts.htm#i890852">Section 7.4</a>.</p>
<p>For more information about clipping geometric segments, see <a href="sdo_lrs_concepts.htm#i890036">Section 7.5.3</a>.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1960"></a>Examples</p>
<p>The following example clips the geometric segment representing Route 1, returning the segment from measures 5 through 10. This segment might represent a construction zone. (This example uses the definitions from the example in <a href="sdo_lrs_concepts.htm#i885918">Section 7.7</a>.)</p>
<pre>
SELECT  SDO_LRS.CLIP_GEOM_SEGMENT(route_geometry, 5, 10)
  FROM lrs_routes WHERE route_id = 1;

SDO_LRS.CLIP_GEOM_SEGMENT(ROUTE_GEOMETRY,5,10)(SDO_GTYPE, SDO_SRID, SDO_POINT(X,
--------------------------------------------------------------------------------
SDO_GEOMETRY(3302, NULL, NULL, SDO_ELEM_INFO_ARRAY(1, 2, 1), SDO_ORDINATE_ARRAY(
5, 4, 5, 8, 4, 8, 10, 4, 10))
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" -->
<a id="i80091"></a>
<div id="SPATL1138" class="refsect1">
<h2 class="refsect1">SDO_LRS.<a id="sthref1961"></a><a id="sthref1962"></a>CONCATENATE_GEOM_SEGMENTS</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1963"></a>Format</p>
<p class="synopsis">SDO_LRS.CONCATENATE_GEOM_SEGMENTS(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;geom_segment_1 IN SDO_GEOMETRY,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;geom_segment_2 IN SDO_GEOMETRY,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tolerance IN NUMBER DEFAULT 1.0e-8</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) RETURN SDO_GEOMETRY;</p>
<p>or</p>
<p class="synopsis">SDO_LRS.CONCATENATE_GEOM_SEGMENTS(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;geom_segment_1 IN SDO_GEOMETRY,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dim_array_1 IN SDO_DIM_ARRAY,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;geom_segment_2 IN SDO_GEOMETRY,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dim_array_2 IN SDO_DIM_ARRAY</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) RETURN SDO_GEOMETRY;</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1964"></a>Description</p>
<p>Returns the geometry object resulting from the concatenation of two geometric segments.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1965"></a>Parameters</p>
<dl>
<dt>geom_segment_1</dt>
<dd>
<p>First geometric segment to be concatenated.</p>
</dd>
<dt>dim_array_1</dt>
<dd>
<p>Dimensional information array corresponding to <code>geom_segment_1</code>, usually selected from one of the xxx_SDO_GEOM_METADATA views (described in <a href="sdo_objrelschema.htm#i1001937">Section 2.8</a>).</p>
</dd>
<dt>geom_segment_2</dt>
<dd>
<p>Second geometric segment to be concatenated.</p>
</dd>
<dt>dim_array_2</dt>
<dd>
<p>Dimensional information array corresponding to <code>geom_segment_2</code>, usually selected from one of the xxx_SDO_GEOM_METADATA views (described in <a href="sdo_objrelschema.htm#i1001937">Section 2.8</a>).</p>
</dd>
<dt>tolerance</dt>
<dd>
<p>Tolerance value (see <a href="sdo_intro.htm#i884589">Section 1.5.5</a> and <a href="sdo_lrs_concepts.htm#CIHJBDGG">Section 7.6</a>). The default value is 0.00000001.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1966"></a>Usage Notes</p>
<p>An exception is raised if <code>geom_segment_1</code> or <code>geom_segment_2</code> has an invalid geometry type or dimensionality, or if <code>geom_segment_1</code> and <code>geom_segment_2</code> are based on different coordinate systems.</p>
<p>The direction of the first geometric segment is preserved, and all measures of the second segment are shifted so that its start measure is the same as the end measure of the first segment.</p>
<p>The geometry type of <code>geom_segment_1</code> and <code>geom_segment_2</code> must be line or multiline. Neither can be a polygon.</p>
<p>The <span class="italic">_3D</span> format of this function (SDO_LRS.CONCATENATE_GEOM_SEGMENTS_3D) is available. For information about <span class="italic">_3D</span> formats of LRS functions, see <a href="sdo_lrs_concepts.htm#i890852">Section 7.4</a>.</p>
<p>For more information about concatenating geometric segments, see <a href="sdo_lrs_concepts.htm#i890037">Section 7.5.5</a>.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1967"></a>Examples</p>
<p>The following example defines the geometric segment, splits it into two segments, then concatenates those segments. (This example uses the definitions from the example in <a href="sdo_lrs_concepts.htm#i885918">Section 7.7</a>. The definitions of <code>result_geom_1</code>, <code>result_geom_2</code>, and <code>result_geom_3</code> are displayed in <a href="sdo_lrs_concepts.htm#BABGFEHE">Example 7-3</a>.)</p>
<pre>
DECLARE
geom_segment SDO_GEOMETRY;
line_string SDO_GEOMETRY;
dim_array SDO_DIM_ARRAY;
result_geom_1 SDO_GEOMETRY;
result_geom_2 SDO_GEOMETRY;
result_geom_3 SDO_GEOMETRY;

BEGIN

SELECT a.route_geometry into geom_segment FROM lrs_routes a
  WHERE a.route_name = 'Route1';
SELECT m.diminfo into dim_array from 
  user_sdo_geom_metadata m
  WHERE m.table_name = 'LRS_ROUTES' AND m.column_name = 'ROUTE_GEOMETRY';

-- Define the LRS segment for Route1.
SDO_LRS.DEFINE_GEOM_SEGMENT (geom_segment, 
  dim_array,
  0,    -- Zero starting measure: LRS segment starts at start of route.
  27);  -- End of LRS segment is at measure 27.

SELECT a.route_geometry INTO line_string FROM lrs_routes a 
  WHERE a.route_name = 'Route1';

-- Split Route1 into two segments.
SDO_LRS.SPLIT_GEOM_SEGMENT(line_string,dim_array,5,result_geom_1,result_geom_2);

-- Concatenate the segments that were just split.
result_geom_3 := SDO_LRS.CONCATENATE_GEOM_SEGMENTS(result_geom_1, dim_array, result_geom_2, dim_array);

-- Insert geometries into table, to display later.
INSERT INTO lrs_routes VALUES(
  11,
  'result_geom_1',
  result_geom_1
);
INSERT INTO lrs_routes VALUES(
  12,
  'result_geom_2',
  result_geom_2
);
INSERT INTO lrs_routes VALUES(
  13,
  'result_geom_3',
  result_geom_3
);

END;
/
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" -->
<a id="i80140"></a>
<div id="SPATL1139" class="refsect1">
<h2 class="refsect1"><a id="sthref1968"></a><a id="sthref1969"></a>SDO_LRS.CONNECTED_GEOM_SEGMENTS</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1970"></a>Format</p>
<p class="synopsis">SDO_LRS.CONNECTED_GEOM_SEGMENTS(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;geom_segment_1 IN SDO_GEOMETRY,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;geom_segment_2 IN SDO_GEOMETRY,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tolerance IN NUMBER DEFAULT 1.0e-8</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) RETURN VARCHAR2;</p>
<p>or</p>
<p class="synopsis">SDO_LRS.CONNECTED_GEOM_SEGMENTS(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;geom_segment_1 IN SDO_GEOMETRY,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dim_array_1 IN SDO_DIM_ARRAY,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;geom_segment_2 IN SDO_GEOMETRY,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dim_array_2 IN SDO_DIM_ARRAY</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) RETURN VARCHAR2;</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1971"></a>Description</p>
<p>Checks if two geometric segments are spatially connected.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1972"></a>Parameters</p>
<dl>
<dt>geom_segment_1</dt>
<dd>
<p>First of two geometric segments to be checked.</p>
</dd>
<dt>dim_array_1</dt>
<dd>
<p>Dimensional information array corresponding to <code>geom_segment_1</code>, usually selected from one of the xxx_SDO_GEOM_METADATA views (described in <a href="sdo_objrelschema.htm#i1001937">Section 2.8</a>).</p>
</dd>
<dt>geom_segment_2</dt>
<dd>
<p>Second of two geometric segments to be checked.</p>
</dd>
<dt>dim_array_2</dt>
<dd>
<p>Dimensional information array corresponding to <code>geom_segment_2</code>, usually selected from one of the xxx_SDO_GEOM_METADATA views (described in <a href="sdo_objrelschema.htm#i1001937">Section 2.8</a>).</p>
</dd>
<dt>tolerance</dt>
<dd>
<p>Tolerance value (see <a href="sdo_intro.htm#i884589">Section 1.5.5</a> and <a href="sdo_lrs_concepts.htm#CIHJBDGG">Section 7.6</a>). The default value is 0.00000001.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1973"></a>Usage Notes</p>
<p>This function returns TRUE if the geometric segments are spatially connected and FALSE if the geometric segments are not spatially connected.</p>
<p>An exception is raised if <code>geom_segment_1</code> or <code>geom_segment_2</code> has an invalid geometry type or dimensionality, or if <code>geom_segment_1</code> and <code>geom_segment_2</code> are based on different coordinate systems.</p>
<p>The <span class="italic">_3D</span> format of this function (SDO_LRS.CONNECTED_GEOM_SEGMENTS_3D) is available. For information about <span class="italic">_3D</span> formats of LRS functions, see <a href="sdo_lrs_concepts.htm#i890852">Section 7.4</a>.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1974"></a>Examples</p>
<p>The following example checks if two geometric segments (results of a previous split operation) are spatially connected.</p>
<pre>
-- Are result_geom_1 and result_geom2 connected? 
SELECT  SDO_LRS.CONNECTED_GEOM_SEGMENTS(a.route_geometry,
           b.route_geometry, 0.005)
  FROM lrs_routes a, lrs_routes b
  WHERE a.route_id = 11 AND b.route_id = 12;

SDO_LRS.CONNECTED_GEOM_SEGMENTS(A.ROUTE_GEOMETRY,B.ROUTE_GEOMETRY,0.005)        
--------------------------------------------------------------------------------
TRUE
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" -->
<a id="i85363"></a>
<div id="SPATL1140" class="refsect1">
<h2 class="refsect1"><a id="sthref1975"></a><a id="sthref1976"></a>SDO_LRS.CONVERT_TO_LRS_DIM_ARRAY</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1977"></a>Format</p>
<p class="synopsis">SDO_LRS.CONVERT_TO_LRS_DIM_ARRAY(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dim_array IN SDO_DIM_ARRAY</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[, lower_bound IN NUMBER,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;upper_bound IN NUMBER,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tolerance IN NUMBER]</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) RETURN SDO_DIM_ARRAY;</p>
<p class="synopsis">or</p>
<p class="synopsis">SDO_LRS.CONVERT_TO_LRS_DIM_ARRAY(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dim_array IN SDO_DIM_ARRAY,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dim_name IN VARCHAR2</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[, lower_bound IN NUMBER,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;upper_bound IN NUMBER,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tolerance IN NUMBER]</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) RETURN SDO_DIM_ARRAY;</p>
<p class="synopsis">or</p>
<p class="synopsis">SDO_LRS.CONVERT_TO_LRS_DIM_ARRAY(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dim_array IN SDO_DIM_ARRAY,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dim_name IN VARCHAR2,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dim_pos IN INTEGER</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[, lower_bound IN NUMBER,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;upper_bound IN NUMBER,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tolerance IN NUMBER]</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) RETURN SDO_DIM_ARRAY;</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1978"></a>Description</p>
<p>Converts a standard dimensional array to an LRS dimensional array by creating a measure dimension.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1979"></a>Parameters</p>
<dl>
<dt>dim_array</dt>
<dd>
<p>Dimensional information array corresponding to the layer (column of geometries) to be converted, usually selected from one of the xxx_SDO_GEOM_METADATA views (described in <a href="sdo_objrelschema.htm#i1001937">Section 2.8</a>).</p>
</dd>
<dt>dim_name</dt>
<dd>
<p>Name of the measure dimension (<code>M</code>, if not otherwise specified).</p>
</dd>
<dt>dim_pos</dt>
<dd>
<p>Position of the measure dimension (the last SDO_DIM_ELEMENT object position in the SDO_DIM_ARRAY, if not otherwise specified).</p>
</dd>
<dt>lower_bound</dt>
<dd>
<p>Lower bound (SDO_LB value in the SDO_DIM_ELEMENT definition) of the ordinate in the measure dimension.</p>
</dd>
<dt>upper_bound</dt>
<dd>
<p>Upper bound (SDO_UB value in the SDO_DIM_ELEMENT definition) of the ordinate in the measure dimension.</p>
</dd>
<dt>tolerance</dt>
<dd>
<p>Tolerance value (see <a href="sdo_intro.htm#i884589">Section 1.5.5</a> and <a href="sdo_lrs_concepts.htm#CIHJBDGG">Section 7.6</a>). The default value is 0.00000001.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1980"></a>Usage Notes</p>
<p>This function converts a standard dimensional array to an LRS dimensional array by creating a measure dimension. Specifically, it adds an SDO_DIM_ELEMENT object at the end of the current SDO_DIM_ELEMENT objects in the SDO_DIM_ARRAY for the dimensional array (unless another <code>dim_pos</code> is specified), and sets the SDO_DIMNAME value in this added SDO_DIM_ELEMENT to M (unless another <code>dim_name</code> is specified). It sets the other values in the added SDO_DIM_ELEMENT according to the values of the <code>upper_bound</code>, <code>lower_bound</code>, and <code>tolerance</code> parameter values.</p>
<p>If <code>dim_array</code> already contains dimensional information, the <code>dim_array</code> is returned.</p>
<p>The <span class="italic">_3D</span> format of this function (SDO_LRS.CONVERT_TO_LRS_DIM_ARRAY_3D) is available. For information about <span class="italic">_3D</span> formats of LRS functions, see <a href="sdo_lrs_concepts.htm#i890852">Section 7.4</a>.</p>
<p>For more information about conversion functions, see <a href="sdo_lrs_concepts.htm#i887224">Section 7.5.10</a>.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1981"></a>Examples</p>
<p>The following example converts the dimensional array for the LRS_ROUTES table to LRS format. (This example uses the definitions from the example in <a href="sdo_lrs_concepts.htm#i885918">Section 7.7</a>.)</p>
<pre>
SELECT SDO_LRS.CONVERT_TO_LRS_DIM_ARRAY(m.diminfo)
   FROM user_sdo_geom_metadata m
   WHERE m.table_name = 'LRS_ROUTES' AND m.column_name = 'ROUTE_GEOMETRY';

SDO_LRS.CONVERT_TO_LRS_DIM_ARRAY(M.DIMINFO)(SDO_DIMNAME, SDO_LB, SDO_UB, SDO_TOL
--------------------------------------------------------------------------------
SDO_DIM_ARRAY(SDO_DIM_ELEMENT('X', 0, 20, .005), SDO_DIM_ELEMENT('Y', 0, 20, .00
5), SDO_DIM_ELEMENT('M', 0, 20, .005))
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" -->
<a id="i85408"></a>
<div id="SPATL1141" class="refsect1">
<h2 class="refsect1"><a id="sthref1982"></a><a id="sthref1983"></a>SDO_LRS.CONVERT_TO_LRS_GEOM</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1984"></a>Format</p>
<p class="synopsis">SDO_LRS.CONVERT_TO_LRS_GEOM(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;standard_geom IN SDO_GEOMETRY</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[, start_measure IN NUMBER,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end_measure IN NUMBER]</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) RETURN SDO_GEOMETRY;</p>
<p class="synopsis">or</p>
<p class="synopsis">SDO_LRS.CONVERT_TO_LRS_GEOM(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;standard_geom IN SDO_GEOMETRY,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dim_array IN SDO_DIM_ARRAY</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[, start_measure IN NUMBER,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end_measure IN NUMBER]</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) RETURN SDO_GEOMETRY;</p>
<p class="synopsis">or</p>
<p class="synopsis">SDO_LRS.CONVERT_TO_LRS_GEOM(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;standard_geom IN SDO_GEOMETRY,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m_pos IN INTEGER</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[, start_measure IN NUMBER,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end_measure IN NUMBER]</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) RETURN SDO_GEOMETRY;</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1985"></a>Description</p>
<p>Converts a standard SDO_GEOMETRY line string to an LRS geometric segment by adding measure information.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1986"></a>Parameters</p>
<dl>
<dt>standard_geom</dt>
<dd>
<p>Line string geometry that does not contain measure information.</p>
</dd>
<dt>dim_array</dt>
<dd>
<p>Dimensional information array corresponding to <code>standard_geom</code>, usually selected from one of the xxx_SDO_GEOM_METADATA views (described in <a href="sdo_objrelschema.htm#i1001937">Section 2.8</a>).</p>
</dd>
<dt>m_pos</dt>
<dd>
<p>Position of the measure dimension. If specified, must be 3 or 4. By default, the measure dimension is the last dimension in the SDO_DIM_ARRAY.</p>
</dd>
<dt>start_measure</dt>
<dd>
<p>Distance measured from the start point of a geometric segment to the start point of the linear feature. The default is 0.</p>
</dd>
<dt>end_measure</dt>
<dd>
<p>Distance measured from the end point of a geometric segment to the start point of the linear feature. The default is the cartographic length (for example, 75 if the cartographic length is 75 and the unit of measure is miles).</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1987"></a>Usage Notes</p>
<p>This function returns an LRS geometric segment with measure information, with measure information provided for all shape points.</p>
<p>An exception is raised if <code>standard_geom</code> has an invalid geometry type or dimensionality, if <code>m_pos</code> is less than 3 or greater than 4, or if <code>start_measure</code> or <code>end_measure</code> is out of range.</p>
<p>The <span class="italic">_3D</span> format of this function (SDO_LRS.CONVERT_TO_LRS_GEOM_3D) is available; however, the <code>m_pos</code> parameter is not available for SDO_LRS.CONVERT_TO_LRS_GEOM_3D. For information about <span class="italic">_3D</span> formats of LRS functions, see <a href="sdo_lrs_concepts.htm#i890852">Section 7.4</a>.</p>
<p>For more information about conversion functions, see <a href="sdo_lrs_concepts.htm#i887224">Section 7.5.10</a>.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1988"></a>Examples</p>
<p>The following example converts the geometric segment representing Route 1 to LRS format. (This example uses the definitions from the example in <a href="sdo_lrs_concepts.htm#i885918">Section 7.7</a>.)</p>
<pre>
SELECT SDO_LRS.CONVERT_TO_LRS_GEOM(a.route_geometry, m.diminfo)
  FROM lrs_routes a, user_sdo_geom_metadata m
  WHERE m.table_name = 'LRS_ROUTES' AND m.column_name = 'ROUTE_GEOMETRY'
    AND a.route_id = 1;

SDO_LRS.CONVERT_TO_LRS_GEOM(A.ROUTE_GEOMETRY,M.DIMINFO)(SDO_GTYPE, SDO_SRID, SDO
--------------------------------------------------------------------------------
SDO_GEOMETRY(3002, NULL, NULL, SDO_ELEM_INFO_ARRAY(1, 2, 1), SDO_ORDINATE_ARRAY(
2, 2, 0, 2, 4, 2, 8, 4, 8, 12, 4, 12, 12, 10, NULL, 8, 10, 22, 5, 14, 27))
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" -->
<a id="i85409"></a>
<div id="SPATL1142" class="refsect1">
<h2 class="refsect1"><a id="sthref1989"></a><a id="sthref1990"></a>SDO_LRS.CONVERT_TO_LRS_LAYER</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1991"></a>Format</p>
<p class="synopsis">SDO_LRS.CONVERT_TO_LRS_LAYER(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;table_name IN VARCHAR2,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;column_name IN VARCHAR2</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[, lower_bound IN NUMBER,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;upper_bound IN NUMBER,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tolerance IN NUMBER]</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) RETURN VARCHAR2;</p>
<p>or</p>
<p class="synopsis">SDO_LRS.CONVERT_TO_LRS_LAYER(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;table_name IN VARCHAR2,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;column_name IN VARCHAR2,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dim_name IN VARCHAR2,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dim_pos IN INTEGER</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[, lower_bound IN NUMBER,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;upper_bound IN NUMBER,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tolerance IN NUMBER]</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) RETURN VARCHAR2;</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1992"></a>Description</p>
<p>Converts all geometry objects in a column of type SDO_GEOMETRY (that is, converts a layer) from standard line string geometries without measure information to LRS geometric segments with measure information, and updates the metadata in the USER_SDO_GEOM_METADATA view.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1993"></a>Parameters</p>
<dl>
<dt>table_name</dt>
<dd>
<p>Table containing the column with the SDO_GEOMETRY objects.</p>
</dd>
<dt>column_name</dt>
<dd>
<p>Column in <code>table_name</code> containing the SDO_GEOMETRY objects.</p>
</dd>
<dt>dim_name</dt>
<dd>
<p>Name of the measure dimension. If this parameter is null, <code>M</code> is assumed.</p>
</dd>
<dt>dim_pos</dt>
<dd>
<p>Position of the measure dimension within the SDO_DIM_ARRAY structure for the specified SDO_GEOMETRY column. If this parameter is null, the number corresponding to the last position is assumed.</p>
</dd>
<dt>lower_bound</dt>
<dd>
<p>Lower bound (SDO_LB value in the SDO_DIM_ELEMENT definition) of the ordinate in the measure dimension.</p>
</dd>
<dt>upper_bound</dt>
<dd>
<p>Upper bound (SDO_UB value in the SDO_DIM_ELEMENT definition) of the ordinate in the measure dimension.</p>
</dd>
<dt>tolerance</dt>
<dd>
<p>Tolerance value (see <a href="sdo_intro.htm#i884589">Section 1.5.5</a> and <a href="sdo_lrs_concepts.htm#CIHJBDGG">Section 7.6</a>). The default value is 0.00000001.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1994"></a>Usage Notes</p>
<p>This function returns TRUE if the conversion was successful or if the layer already contains measure information, and the function returns an exception if the conversion was not successful.</p>
<p>An exception is raised if the existing dimensional information for the table is invalid.</p>
<p>The measure values are assigned based on a start measure of zero and an end measure of the cartographic length.</p>
<p>If a spatial index already exists on <code>column_name</code>, you must delete (drop) the index before converting the layer and create a new index after converting the layer. For information about deleting and creating indexes, see the <a href="sdo_objindex.htm#i78197">DROP INDEX</a> and <a href="sdo_objindex.htm#i78196">CREATE INDEX</a> statements in <a href="sdo_objindex.htm#g999465">Chapter 18</a>.</p>
<p>The <span class="italic">_3D</span> format of this function (SDO_LRS.CONVERT_TO_LRS_LAYER_3D) is available. For information about <span class="italic">_3D</span> formats of LRS functions, see <a href="sdo_lrs_concepts.htm#i890852">Section 7.4</a>.</p>
<p>For more information about conversion functions, see <a href="sdo_lrs_concepts.htm#i887224">Section 7.5.10</a>.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1995"></a>Examples</p>
<p>The following example converts the geometric segments in the ROUTE_GEOMETRY column of the LRS_ROUTES table to LRS format. (This example uses the definitions from the example in <a href="sdo_lrs_concepts.htm#i885918">Section 7.7</a>.) The SELECT statement shows that dimensional information has been added (that is, <code>SDO_DIM_ELEMENT('M', NULL, NULL, NULL)</code> is included in the definition).</p>
<pre>
BEGIN
  IF (SDO_LRS.CONVERT_TO_LRS_LAYER('LRS_ROUTES', 'ROUTE_GEOMETRY') =  'TRUE')
    THEN
      DBMS_OUTPUT.PUT_LINE('Conversion from STD_LAYER to LRS_LAYER succeeded.');
    ELSE
      DBMS_OUTPUT.PUT_LINE('Conversion from STD_LAYER to LRS_LAYER failed.');
  END IF;
END;
.
/
Conversion from STD_LAYER to LRS_LAYER succeeded.

PL/SQL procedure successfully completed.

SQL&gt; SELECT diminfo FROM user_sdo_geom_metadata WHERE table_name = 'LRS_ROUTES' AND column_name = 'ROUTE_GEOMETRY';

DIMINFO(SDO_DIMNAME, SDO_LB, SDO_UB, SDO_TOLERANCE)                             
--------------------------------------------------------------------------------
SDO_DIM_ARRAY(SDO_DIM_ELEMENT('X', 0, 20, .005), SDO_DIM_ELEMENT('Y', 0, 20, .00
5), SDO_DIM_ELEMENT('M', NULL, NULL, NULL))
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" -->
<a id="i85410"></a>
<div id="SPATL1143" class="refsect1">
<h2 class="refsect1"><a id="sthref1996"></a><a id="sthref1997"></a>SDO_LRS.CONVERT_TO_STD_DIM_ARRAY</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1998"></a>Format</p>
<p class="synopsis">SDO_LRS.CONVERT_TO_STD_DIM_ARRAY(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dim_array IN SDO_DIM_ARRAY</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[, m_pos IN INTEGER]</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) RETURN SDO_DIM_ARRAY;</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1999"></a>Description</p>
<p>Converts an LRS dimensional array to a standard dimensional array by removing the measure dimension.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2000"></a>Parameters</p>
<dl>
<dt>dim_array</dt>
<dd>
<p>Dimensional information array corresponding to the layer (column of geometries) to be converted, usually selected from one of the xxx_SDO_GEOM_METADATA views (described in <a href="sdo_objrelschema.htm#i1001937">Section 2.8</a>).</p>
</dd>
<dt>m_pos</dt>
<dd>
<p>Position of the measure dimension. If specified, must be 3 or 4. By default, the measure dimension is the last dimension in the SDO_DIM_ARRAY.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2001"></a>Usage Notes</p>
<p>This function converts an LRS dimensional array to a standard dimensional array by removing the measure dimension. Specifically, it removes the SDO_DIM_ELEMENT object at the end of the current SDO_DIM_ELEMENT objects in the SDO_DIM_ARRAY for the <code>dim_array</code>.</p>
<p>An exception is raised if <code>m_pos</code> is invalid (less than 3 or greater than 4).</p>
<p>If <code>dim_array</code> is already a standard dimensional array (that is, does not contain dimensional information), the <code>dim_array</code> is returned.</p>
<p>The <span class="italic">_3D</span> format of this function (SDO_LRS.CONVERT_TO_STD_DIM_ARRAY_3D) is available. For information about <span class="italic">_3D</span> formats of LRS functions, see <a href="sdo_lrs_concepts.htm#i890852">Section 7.4</a>.</p>
<p>For more information about conversion functions, see <a href="sdo_lrs_concepts.htm#i887224">Section 7.5.10</a>.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2002"></a>Examples</p>
<p>The following example converts the dimensional array for the LRS_ROUTES table to standard format. (This example uses the definitions from the example in <a href="sdo_lrs_concepts.htm#i885918">Section 7.7</a>.)</p>
<pre>
SELECT SDO_LRS.CONVERT_TO_STD_DIM_ARRAY(m.diminfo)
   FROM user_sdo_geom_metadata m
   WHERE m.table_name = 'LRS_ROUTES' AND m.column_name = 'ROUTE_GEOMETRY';

SDO_LRS.CONVERT_TO_STD_DIM_ARRAY(M.DIMINFO)(SDO_DIMNAME, SDO_LB, SDO_UB, SDO_TOL
--------------------------------------------------------------------------------
SDO_DIM_ARRAY(SDO_DIM_ELEMENT('X', 0, 20, .005), SDO_DIM_ELEMENT('Y', 0, 20, .00
5))
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" -->
<a id="i85411"></a>
<div id="SPATL1144" class="refsect1">
<h2 class="refsect1"><a id="sthref2003"></a><a id="sthref2004"></a>SDO_LRS.CONVERT_TO_STD_GEOM</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2005"></a>Format</p>
<p class="synopsis">SDO_LRS.CONVERT_TO_STD_GEOM(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lrs _geom IN SDO_GEOMETRY</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[, dim_array IN SDO_DIM_ARRAY]</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) RETURN SDO_GEOMETRY;</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2006"></a>Description</p>
<p>Converts an LRS geometric segment to a standard SDO_GEOMETRY line string by removing measure information.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2007"></a>Parameters</p>
<dl>
<dt>lrs_geom</dt>
<dd>
<p>LRS geometry that contains measure information.</p>
</dd>
<dt>dim_array</dt>
<dd>
<p>Dimensional information array corresponding to <code>lrs_geom</code>, usually selected from one of the xxx_SDO_GEOM_METADATA views (described in <a href="sdo_objrelschema.htm#i1001937">Section 2.8</a>).</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2008"></a>Usage Notes</p>
<p>This function returns an SDO_GEOMETRY object in which all measure information is removed.</p>
<p>The <span class="italic">_3D</span> format of this function (SDO_LRS.CONVERT_TO_STD_GEOM_3D) is available. For information about <span class="italic">_3D</span> formats of LRS functions, see <a href="sdo_lrs_concepts.htm#i890852">Section 7.4</a>.</p>
<p>For more information about conversion functions, see <a href="sdo_lrs_concepts.htm#i887224">Section 7.5.10</a>.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2009"></a>Examples</p>
<p>The following example converts the geometric segment representing Route 1 to standard format. (This example uses the definitions from the example in <a href="sdo_lrs_concepts.htm#i885918">Section 7.7</a>.)</p>
<pre>
SELECT SDO_LRS.CONVERT_TO_STD_GEOM(a.route_geometry, m.diminfo)
  FROM lrs_routes a, user_sdo_geom_metadata m
  WHERE m.table_name = 'LRS_ROUTES' AND m.column_name = 'ROUTE_GEOMETRY'
    AND a.route_id = 1;

SDO_LRS.CONVERT_TO_STD_GEOM(A.ROUTE_GEOMETRY,M.DIMINFO)(SDO_GTYPE, SDO_SRID, SDO
--------------------------------------------------------------------------------
SDO_GEOMETRY(2002, NULL, NULL, SDO_ELEM_INFO_ARRAY(1, 2, 1), SDO_ORDINATE_ARRAY(
2, 2, 2, 4, 8, 4, 12, 4, 12, 10, 8, 10, 5, 14))
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" -->
<a id="i85412"></a>
<div id="SPATL1145" class="refsect1">
<h2 class="refsect1"><a id="sthref2010"></a><a id="sthref2011"></a>SDO_LRS.CONVERT_TO_STD_LAYER</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2012"></a>Format</p>
<p class="synopsis">SDO_LRS.CONVERT_TO_STD_LAYER(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;table_name IN VARCHAR2,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;column_name IN VARCHAR2</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) RETURN VARCHAR2;</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2013"></a>Description</p>
<p>Converts all geometry objects in a column of type SDO_GEOMETRY (that is, converts a layer) from LRS geometric segments with measure information to standard line string geometries without measure information, and updates the metadata in the USER_SDO_GEOM_METADATA view.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2014"></a>Parameters</p>
<dl>
<dt>table_name</dt>
<dd>
<p>Table containing the column with the SDO_GEOMETRY objects.</p>
</dd>
<dt>column_name</dt>
<dd>
<p>Column in <code>table_name</code> containing the SDO_GEOMETRY objects.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2015"></a>Usage Notes</p>
<p>This function returns TRUE if the conversion was successful or if the layer already is a standard layer (that is, contains geometries without measure information), and the function returns an exception if the conversion was not successful.</p>
<p>If a spatial index already exists on <code>column_name</code>, you must delete (drop) the index before converting the layer and create a new index after converting the layer. For information about deleting and creating indexes, see the <a href="sdo_objindex.htm#i78197">DROP INDEX</a> and <a href="sdo_objindex.htm#i78196">CREATE INDEX</a> statements in <a href="sdo_objindex.htm#g999465">Chapter 18</a>.</p>
<p>The <span class="italic">_3D</span> format of this function (SDO_LRS.CONVERT_TO_STD_LAYER_3D) is available. For information about <span class="italic">_3D</span> formats of LRS functions, see <a href="sdo_lrs_concepts.htm#i890852">Section 7.4</a>.</p>
<p>For more information about conversion functions, see <a href="sdo_lrs_concepts.htm#i887224">Section 7.5.10</a>.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2016"></a>Examples</p>
<p>The following example converts the geometric segments in the ROUTE_GEOMETRY column of the LRS_ROUTES table to standard format. (This example uses the definitions from the example in <a href="sdo_lrs_concepts.htm#i885918">Section 7.7</a>.) The SELECT statement shows that dimensional information has been removed (that is, no <code>SDO_DIM_ELEMENT('M', NULL, NULL, NULL)</code> is included in the definition).</p>
<pre>
BEGIN
  IF (SDO_LRS.CONVERT_TO_STD_LAYER('LRS_ROUTES', 'ROUTE_GEOMETRY') =  'TRUE')
    THEN
      DBMS_OUTPUT.PUT_LINE('Conversion from LRS_LAYER to STD_LAYER succeeded.');
    ELSE
      DBMS_OUTPUT.PUT_LINE('Conversion from LRS_LAYER to STD_LAYER failed.');
  END IF;
END;
.
/
Conversion from LRS_LAYER to STD_LAYER succeeded.

PL/SQL procedure successfully completed.

SELECT diminfo FROM user_sdo_geom_metadata 
   WHERE table_name = 'LRS_ROUTES' AND column_name = 'ROUTE_GEOMETRY';

DIMINFO(SDO_DIMNAME, SDO_LB, SDO_UB, SDO_TOLERANCE)                             
--------------------------------------------------------------------------------
SDO_DIM_ARRAY(SDO_DIM_ELEMENT('X', 0, 20, .005), SDO_DIM_ELEMENT('Y', 0, 20, .00
5))   
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" -->
<a id="i84344"></a>
<div id="SPATL1146" class="refsect1">
<h2 class="refsect1"><a id="sthref2017"></a><a id="sthref2018"></a>SDO_LRS.DEFINE_GEOM_SEGMENT</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2019"></a>Format</p>
<p class="synopsis">SDO_LRS.DEFINE_GEOM_SEGMENT(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;geom_segment IN OUT SDO_GEOMETRY</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[, start_measure IN NUMBER,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end_measure IN NUMBER]);</p>
<p>or</p>
<p class="synopsis">SDO_LRS.DEFINE_GEOM_SEGMENT(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;geom_segment IN OUT SDO_GEOMETRY,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dim_array IN SDO_DIM_ARRAY</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[, start_measure IN NUMBER,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end_measure IN NUMBER]);</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2020"></a>Description</p>
<p>Defines a geometric segment by assigning start and end measures to a geometric segment, and assigns values to any null measures.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2021"></a>Parameters</p>
<dl>
<dt>geom_segment</dt>
<dd>
<p>Cartographic representation of a linear feature.</p>
</dd>
<dt>dim_array</dt>
<dd>
<p>Dimensional information array corresponding to <code>geom_segment</code>, usually selected from one of the xxx_SDO_GEOM_METADATA views (described in <a href="sdo_objrelschema.htm#i1001937">Section 2.8</a>).</p>
</dd>
<dt>start_measure</dt>
<dd>
<p>Distance measured from the start point of a geometric segment to the start point of the linear feature. The default is the existing value (if any) in the measure dimension; otherwise, the default is 0.</p>
</dd>
<dt>end_measure</dt>
<dd>
<p>Distance measured from the end point of a geometric segment to the start point of the linear feature. The default is the existing value (if any) in the measure dimension; otherwise, the default is the cartographic length of the segment.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2022"></a>Usage Notes</p>
<p>An exception is raised if <code>geom_segment</code> has an invalid geometry type or dimensionality, or if <code>start_measure</code> or <code>end_measure</code> is out of range.</p>
<p>All unassigned measures of the geometric segment will be populated automatically.</p>
<p>To store the resulting geometric segment (<code>geom_segment</code>) in the database, you must execute an UPDATE or INSERT statement, as appropriate.</p>
<p>The <span class="italic">_3D</span> format of this procedure (SDO_LRS.DEFINE_GEOM_SEGMENT_3D) is available. For information about <span class="italic">_3D</span> formats of LRS functions and procedures, see <a href="sdo_lrs_concepts.htm#i890852">Section 7.4</a>.</p>
<p>For more information about defining a geometric segment, see <a href="sdo_lrs_concepts.htm#i890039">Section 7.5.1</a>.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2023"></a>Examples</p>
<p>The following example defines the geometric segment, splits it into two segments, then concatenates those segments. (This example uses the definitions from the example in <a href="sdo_lrs_concepts.htm#i885918">Section 7.7</a>. The definitions of <code>result_geom_1</code>, <code>result_geom_2</code>, and <code>result_geom_3</code> are displayed in <a href="sdo_lrs_concepts.htm#BABGFEHE">Example 7-3</a>.)</p>
<pre>
DECLARE
geom_segment SDO_GEOMETRY;
line_string SDO_GEOMETRY;
dim_array SDO_DIM_ARRAY;
result_geom_1 SDO_GEOMETRY;
result_geom_2 SDO_GEOMETRY;
result_geom_3 SDO_GEOMETRY;

BEGIN

SELECT a.route_geometry into geom_segment FROM lrs_routes a
  WHERE a.route_name = 'Route1';
SELECT m.diminfo into dim_array from 
  user_sdo_geom_metadata m
  WHERE m.table_name = 'LRS_ROUTES' AND m.column_name = 'ROUTE_GEOMETRY';

-- Define the LRS segment for Route1. This will populate any null measures.
SDO_LRS.DEFINE_GEOM_SEGMENT (geom_segment, 
  dim_array,
  0,    -- Zero starting measure: LRS segment starts at start of route.
  27);  -- End of LRS segment is at measure 27.

SELECT a.route_geometry INTO line_string FROM lrs_routes a 
  WHERE a.route_name = 'Route1';

-- Split Route1 into two segments.
SDO_LRS.SPLIT_GEOM_SEGMENT(line_string,dim_array,5,result_geom_1,result_geom_2);

-- Concatenate the segments that were just split.
result_geom_3 := SDO_LRS.CONCATENATE_GEOM_SEGMENTS(result_geom_1, dim_array, result_geom_2, dim_array);

-- Update and insert geometries into table, to display later.
UPDATE lrs_routes a SET a.route_geometry = geom_segment
   WHERE a.route_id = 1;

INSERT INTO lrs_routes VALUES(
  11,
  'result_geom_1',
  result_geom_1
);
INSERT INTO lrs_routes VALUES(
  12,
  'result_geom_2',
  result_geom_2
);
INSERT INTO lrs_routes VALUES(
  13,
  'result_geom_3',
  result_geom_3
);

END;
/
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" -->
<a id="i83484"></a>
<div id="SPATL1147" class="refsect1">
<h2 class="refsect1"><a id="sthref2024"></a><a id="sthref2025"></a>SDO_LRS.DYNAMIC_SEGMENT</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2026"></a>Format</p>
<p class="synopsis">SDO_LRS.DYNAMIC_SEGMENT(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;geom_segment IN SDO_GEOMETRY,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;start_measure IN NUMBER,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end_measure IN NUMBER,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tolerance IN NUMBER DEFAULT 1.0e-8</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) RETURN SDO_GEOMETRY;</p>
<p>or</p>
<p class="synopsis">SDO_LRS.DYNAMIC_SEGMENT(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;geom_segment IN SDO_GEOMETRY,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dim_array IN SDO_DIM_ARRAY,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;start_measure IN NUMBER,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end_measure IN NUMBER</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) RETURN SDO_GEOMETRY;</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2027"></a>Description</p>
<p>Returns the geometry object resulting from a clip operation on a geometric segment.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
<a href="#CHEHFHIC">SDO_LRS.CLIP_GEOM_SEGMENT</a> and SDO_LRS.DYNAMIC_SEGMENT are synonyms: both functions have the same parameters, behavior, and return value.</div>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2028"></a>Parameters</p>
<dl>
<dt>geom_segment</dt>
<dd>
<p>Cartographic representation of a linear feature.</p>
</dd>
<dt>dim_array</dt>
<dd>
<p>Dimensional information array corresponding to <code>geom_segment</code>, usually selected from one of the xxx_SDO_GEOM_METADATA views (described in <a href="sdo_objrelschema.htm#i1001937">Section 2.8</a>).</p>
</dd>
<dt>start_measure</dt>
<dd>
<p>Start measure of the geometric segment.</p>
</dd>
<dt>end_measure</dt>
<dd>
<p>End measure of the geometric segment.</p>
</dd>
<dt>tolerance</dt>
<dd>
<p>Tolerance value (see <a href="sdo_intro.htm#i884589">Section 1.5.5</a> and <a href="sdo_lrs_concepts.htm#CIHJBDGG">Section 7.6</a>). The default value is 0.00000001.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2029"></a>Usage Notes</p>
<p>An exception is raised if <code>geom_segment</code>, <code>start_measure</code>, or <code>end_measure</code> is invalid.</p>
<p>The direction and measures of the resulting geometric segment are preserved.</p>
<p>For more information about clipping a geometric segment, see <a href="sdo_lrs_concepts.htm#i890036">Section 7.5.3</a>.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2030"></a>Examples</p>
<p>The following example clips the geometric segment representing Route 1, returning the segment from measures 5 through 10. This segment might represent a construction zone. (This example uses the definitions from the example in <a href="sdo_lrs_concepts.htm#i885918">Section 7.7</a>.)</p>
<pre>
SELECT  SDO_LRS.DYNAMIC_SEGMENT(route_geometry, 5, 10)
  FROM lrs_routes WHERE route_id = 1;

SDO_LRS.DYNAMIC_SEGMENT(ROUTE_GEOMETRY,5,10)(SDO_GTYPE, SDO_SRID, SDO_POINT(X, Y
--------------------------------------------------------------------------------
SDO_GEOMETRY(3302, NULL, NULL, SDO_ELEM_INFO_ARRAY(1, 2, 1), SDO_ORDINATE_ARRAY(
5, 4, 5, 8, 4, 8, 10, 4, 10))
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" -->
<a id="i91388"></a>
<div id="SPATL1148" class="refsect1">
<h2 class="refsect1"><a id="sthref2031"></a><a id="sthref2032"></a>SDO_LRS.FIND_LRS_DIM_POS</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2033"></a>Format</p>
<p class="synopsis">SDO_LRS.FIND_LRS_DIM_POS(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;table_name IN VARCHAR2,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;column_name IN VARCHAR2</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) RETURN INTEGER;</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2034"></a>Description</p>
<p>Returns the position of the measure dimension within the SDO_DIM_ARRAY structure for a specified SDO_GEOMETRY column.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2035"></a>Parameters</p>
<dl>
<dt>table_name</dt>
<dd>
<p>Table containing the column with the SDO_GEOMETRY objects.</p>
</dd>
<dt>column_name</dt>
<dd>
<p>Column in <code>table_name</code> containing the SDO_GEOMETRY objects.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2036"></a>Usage Notes</p>
<p>None.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2037"></a>Examples</p>
<p>The following example returns the position of the measure dimension within the SDO_DIM_ARRAY structure for geometries in the ROUTE_GEOMETRY column of the LRS_ROUTES table. (This example uses the definitions from the example in <a href="sdo_lrs_concepts.htm#i885918">Section 7.7</a>.)</p>
<pre>
SELECT SDO_LRS.FIND_LRS_DIM_POS('LRS_ROUTES', 'ROUTE_GEOMETRY') FROM DUAL;

SDO_LRS.FIND_LRS_DIM_POS('LRS_ROUTES','ROUTE_GEOMETRY')
-------------------------------------------------------
                                                      3
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" -->
<a id="i85426"></a>
<div id="SPATL1149" class="refsect1">
<h2 class="refsect1"><a id="sthref2038"></a><a id="sthref2039"></a>SDO_LRS.FIND_MEASURE</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2040"></a>Format</p>
<p class="synopsis">SDO_LRS.FIND_MEASURE(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;geom_segment IN SDO_GEOMETRY,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;point IN SDO_GEOMETRY</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) RETURN NUMBER;</p>
<p>or</p>
<p class="synopsis">SDO_LRS.FIND_MEASURE(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;geom_segment IN SDO_GEOMETRY,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dim_array IN SDO_DIM_ARRAY,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;point IN SDO_GEOMETRY</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) RETURN NUMBER;</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2041"></a>Description</p>
<p>Returns the measure of the closest point on a segment to a specified projection point.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2042"></a>Parameters</p>
<dl>
<dt>geom_segment</dt>
<dd>
<p>Cartographic representation of a linear feature. This function returns the measure of the point on this segment that is closest to the projection point.</p>
</dd>
<dt>dim_array</dt>
<dd>
<p>Dimensional information array corresponding to <code>geom_segment</code>, usually selected from one of the xxx_SDO_GEOM_METADATA views (described in <a href="sdo_objrelschema.htm#i1001937">Section 2.8</a>).</p>
</dd>
<dt>point</dt>
<dd>
<p>Projection point. This function returns the measure of the point on <code>geom_segment</code> that is closest to the projection point.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2043"></a>Usage Notes</p>
<p>This function returns the measure of the point on <code>geom_segment</code> that is closest to the projection point. For example, if the projection point represents a shopping mall, the function could be used to find how far from the start of the highway is the point on the highway that is closest to the shopping mall.</p>
<p>An exception is raised if <code>geom_segment</code> has an invalid geometry type or dimensionality, or if <code>geom_segment</code> and <code>point</code> are based on different coordinate systems.</p>
<p>The <span class="italic">_3D</span> format of this function (SDO_LRS.FIND_MEASURE_3D) is available. For information about <span class="italic">_3D</span> formats of LRS functions, see <a href="sdo_lrs_concepts.htm#i890852">Section 7.4</a>.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2044"></a>Examples</p>
<p>The following example finds the measure for the point on the geometric segment representing Route 1 that is closest to the point (10, 7). (This example uses the definitions from the example in <a href="sdo_lrs_concepts.htm#i885918">Section 7.7</a>.)</p>
<pre>
-- Find measure for point on segment closest to 10,7.
-- Should return 15 (for point 12,7).
SELECT  SDO_LRS.FIND_MEASURE(a.route_geometry, m.diminfo,
  SDO_GEOMETRY(3001, NULL, NULL, 
     SDO_ELEM_INFO_ARRAY(1, 1, 1), 
     SDO_ORDINATE_ARRAY(10, 7, NULL)) )
 FROM lrs_routes a, user_sdo_geom_metadata m
 WHERE m.table_name = 'LRS_ROUTES' AND m.column_name = 'ROUTE_GEOMETRY'
   AND a.route_id = 1;

SDO_LRS.FIND_MEASURE(A.ROUTE_GEOMETRY,M.DIMINFO,SDO_GEOMETRY(3001,NULL,NUL
--------------------------------------------------------------------------------
                                                                              15
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" -->
<a id="CACGADDG"></a>
<div id="SPATL1150" class="refsect1">
<h2 class="refsect1"><a id="sthref2045"></a><a id="sthref2046"></a><a id="sthref2047"></a>SDO_LRS.FIND_OFFSET</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2048"></a>Format</p>
<p class="synopsis">SDO_LRS.FIND_OFFSET(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;geom_segment IN SDO_GEOMETRY,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;point IN SDO_GEOMETRY,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tolerance IN NUMBER DEFAULT 1.0e-8</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) RETURN NUMBER;</p>
<p>or</p>
<p class="synopsis">SDO_LRS.FIND_OFFSET(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;geom_segment IN SDO_GEOMETRY,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dim_array IN SDO_DIM_ARRAY,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;point IN SDO_GEOMETRY</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[, point_dim_array IN SDO_GEOMETRY]</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) RETURN NUMBER;</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2049"></a>Description</p>
<p>Returns the signed offset (shortest distance) from a point to a geometric segment.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2050"></a>Parameters</p>
<dl>
<dt>geom_segment</dt>
<dd>
<p>Geometric segment to be checked for distance from <code>point</code>.</p>
</dd>
<dt>point</dt>
<dd>
<p>Point whose shortest distance from <code>geom_segment</code> is to be returned.</p>
</dd>
<dt>tolerance</dt>
<dd>
<p>Tolerance value (see <a href="sdo_intro.htm#i884589">Section 1.5.5</a> and <a href="sdo_lrs_concepts.htm#CIHJBDGG">Section 7.6</a>). The default value is 0.00000001.</p>
</dd>
<dt>dim_array</dt>
<dd>
<p>Dimensional information array corresponding to <code>geom_segment</code>, usually selected from one of the xxx_SDO_GEOM_METADATA views (described in <a href="sdo_objrelschema.htm#i1001937">Section 2.8</a>).</p>
</dd>
<dt>point_dim_array</dt>
<dd>
<p>Dimensional information array corresponding to <code>point</code>, usually selected from one of the xxx_SDO_GEOM_METADATA views (described in <a href="sdo_objrelschema.htm#i1001937">Section 2.8</a>).</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2051"></a>Usage Notes</p>
<p>This function calls the <a href="#i79426">SDO_LRS.PROJECT_PT</a> function format that includes the <code>offset</code> output parameter: it passes in the geometric segment and point information, and it returns the <a href="#i79426">SDO_LRS.PROJECT_PT</a> <code>offset</code> parameter value. Thus, to find the offset of a point from a geometric segment, you can use either this function or the <a href="#i79426">SDO_LRS.PROJECT_PT</a> function with the <code>offset</code> parameter.</p>
<p>An exception is raised if <code>geom_segment</code> or <code>point</code> has an invalid geometry type or dimensionality, or if <code>geom_segment</code> and <code>point</code> are based on different coordinate systems.</p>
<p>For more information about offsets to a geometric segment, see <a href="sdo_lrs_concepts.htm#i884979">Section 7.1.5</a>.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2052"></a>Examples</p>
<p>The following example returns the offset of point (9,3,NULL) from the geometric segment representing Route 1. (This example uses the definitions from the example in <a href="sdo_lrs_concepts.htm#i885918">Section 7.7</a>.) As you can see from <a href="sdo_lrs_concepts.htm#i888413">Figure 7-20</a> in <a href="sdo_lrs_concepts.htm#i885918">Section 7.7</a>, the point at (9,3,NULL) is on the right side along the segment, and therefore the offset has a negative value, as explained in <a href="sdo_lrs_concepts.htm#i884979">Section 7.1.5</a>. The point at (9,3.NULL) is one distance unit away from the point at (9,4,NULL), which is on the segment.</p>
<pre>
-- Find the offset of point (9,3,NULL) from the road; should return -1.
SELECT  SDO_LRS.FIND_OFFSET(route_geometry, 
  SDO_GEOMETRY(3301, NULL, NULL, 
     SDO_ELEM_INFO_ARRAY(1, 1, 1), 
     SDO_ORDINATE_ARRAY(9, 3, NULL)) )
  FROM lrs_routes WHERE route_id = 1;

SDO_LRS.FIND_OFFSET(ROUTE_GEOMETRY,SDO_GEOMETRY(3301,NULL,NULL,SDO_ELEM_INFO_ARR
--------------------------------------------------------------------------------
                                                                              -1
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" -->
<a id="i84432"></a>
<div id="SPATL1151" class="refsect1">
<h2 class="refsect1">SDO_LRS.<a id="sthref2053"></a><a id="sthref2054"></a>GEOM_SEGMENT_END_MEASURE</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2055"></a>Format</p>
<p class="synopsis">SDO_LRS.GEOM_SEGMENT_END_MEASURE(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;geom_segment IN SDO_GEOMETRY</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[, dim_array IN SDO_DIM_ARRAY]</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) RETURN NUMBER;</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2056"></a>Description</p>
<p>Returns the end measure of a geometric segment.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2057"></a>Parameters</p>
<dl>
<dt>geom_segment</dt>
<dd>
<p>Geometric segment whose end measure is to be returned.</p>
</dd>
<dt>dim_array</dt>
<dd>
<p>Dimensional information array corresponding to <code>geom_segment</code>, usually selected from one of the xxx_SDO_GEOM_METADATA views (described in <a href="sdo_objrelschema.htm#i1001937">Section 2.8</a>).</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2058"></a>Usage Notes</p>
<p>This function returns the end measure of <code>geom_segment</code>.</p>
<p>An exception is raised if <code>geom_segment</code> has an invalid geometry type or dimensionality.</p>
<p>The <span class="italic">_3D</span> format of this function (SDO_LRS.GEOM_SEGMENT_END_MEASURE_3D) is available. For information about <span class="italic">_3D</span> formats of LRS functions, see <a href="sdo_lrs_concepts.htm#i890852">Section 7.4</a>.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2059"></a>Examples</p>
<p>The following example returns the end measure of the geometric segment representing Route 1. (This example uses the definitions from the example in <a href="sdo_lrs_concepts.htm#i885918">Section 7.7</a>.)</p>
<pre>
SELECT  SDO_LRS.GEOM_SEGMENT_END_MEASURE(route_geometry)
  FROM lrs_routes WHERE route_id = 1;

SDO_LRS.GEOM_SEGMENT_END_MEASURE(ROUTE_GEOMETRY)                                
------------------------------------------------                                
                                              27
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" -->
<a id="i84462"></a>
<div id="SPATL1152" class="refsect1">
<h2 class="refsect1"><a id="sthref2060"></a><a id="sthref2061"></a>SDO_LRS.GEOM_SEGMENT_END_PT</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2062"></a>Format</p>
<p class="synopsis">SDO_LRS.GEOM_SEGMENT_END_PT(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;geom_segment IN SDO_GEOMETRY</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[, dim_array IN SDO_DIM_ARRAY]</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) RETURN SDO_GEOMETRY;</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2063"></a>Description</p>
<p>Returns the end point of a geometric segment.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2064"></a>Parameters</p>
<dl>
<dt>geom_segment</dt>
<dd>
<p>Geometric segment whose end point is to be returned.</p>
</dd>
<dt>dim_array</dt>
<dd>
<p>Dimensional information array corresponding to <code>geom_segment</code>, usually selected from one of the xxx_SDO_GEOM_METADATA views (described in <a href="sdo_objrelschema.htm#i1001937">Section 2.8</a>).</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2065"></a>Usage Notes</p>
<p>This function returns the end point of <code>geom_segment</code>.</p>
<p>An exception is raised if <code>geom_segment</code> has an invalid geometry type or dimensionality.</p>
<p>The <span class="italic">_3D</span> format of this function (SDO_LRS.GEOM_SEGMENT_END_PT_3D) is available. For information about <span class="italic">_3D</span> formats of LRS functions, see <a href="sdo_lrs_concepts.htm#i890852">Section 7.4</a>.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2066"></a>Examples</p>
<p>The following example returns the end point of the geometric segment representing Route 1. (This example uses the definitions from the example in <a href="sdo_lrs_concepts.htm#i885918">Section 7.7</a>.)</p>
<pre>
SELECT  SDO_LRS.GEOM_SEGMENT_END_PT(route_geometry)
  FROM lrs_routes WHERE route_id = 1;

SDO_LRS.GEOM_SEGMENT_END_PT(ROUTE_GEOMETRY)(SDO_GTYPE, SDO_SRID, SDO_POINT(X, Y,
--------------------------------------------------------------------------------
SDO_GEOMETRY(3301, NULL, NULL, SDO_ELEM_INFO_ARRAY(1, 1, 1), SDO_ORDINATE_ARRAY(
5, 14, 27))
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" -->
<a id="i84493"></a>
<div id="SPATL1153" class="refsect1">
<h2 class="refsect1"><a id="sthref2067"></a><a id="sthref2068"></a>SDO_LRS.GEOM_SEGMENT_LENGTH</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2069"></a>Format</p>
<p class="synopsis">SDO_LRS.GEOM_SEGMENT_LENGTH(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;geom_segment IN SDO_GEOMETRY</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[, dim_array IN SDO_DIM_ARRAY]</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) RETURN NUMBER;</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2070"></a>Description</p>
<p>Returns the length of a geometric segment.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2071"></a>Parameters</p>
<dl>
<dt>geom_segment</dt>
<dd>
<p>Geometric segment whose length is to be calculated.</p>
</dd>
<dt>dim_array</dt>
<dd>
<p>Dimensional information array corresponding to <code>geom_segment</code>, usually selected from one of the xxx_SDO_GEOM_METADATA views (described in <a href="sdo_objrelschema.htm#i1001937">Section 2.8</a>).</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2072"></a>Usage Notes</p>
<p>This function returns the length of <code>geom_segment</code>. The length is the geometric length, which is not the same as the total of the measure unit values. To determine how long a segment is in terms of measure units, subtract the result of an <a href="#i84533">SDO_LRS.GEOM_SEGMENT_START_MEASURE</a> operation from the result of an <a href="#i84432">SDO_LRS.GEOM_SEGMENT_END_MEASURE</a> operation.</p>
<p>An exception is raised if <code>geom_segment</code> has an invalid geometry type or dimensionality.</p>
<p>The <span class="italic">_3D</span> format of this function (SDO_LRS.GEOM_SEGMENT_LENGTH_3D) is available. For information about <span class="italic">_3D</span> formats of LRS functions, see <a href="sdo_lrs_concepts.htm#i890852">Section 7.4</a>.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2073"></a>Examples</p>
<p>The following example returns the length of the geometric segment representing Route 1. (This example uses the definitions from the example in <a href="sdo_lrs_concepts.htm#i885918">Section 7.7</a>.)</p>
<pre>
SELECT  SDO_LRS.GEOM_SEGMENT_LENGTH(route_geometry)
  FROM lrs_routes WHERE route_id = 1;

SDO_LRS.GEOM_SEGMENT_LENGTH(ROUTE_GEOMETRY)                                     
-------------------------------------------                                     
                                         27
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" -->
<a id="i84533"></a>
<div id="SPATL1154" class="refsect1">
<h2 class="refsect1"><a id="sthref2074"></a><a id="sthref2075"></a>SDO_LRS.GEOM_SEGMENT_START_MEASURE</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2076"></a>Format</p>
<p class="synopsis">SDO_LRS.GEOM_SEGMENT_START_MEASURE(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;geom_segment IN SDO_GEOMETRY</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[, dim_array IN SDO_DIM_ARRAY]</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) RETURN NUMBER;</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2077"></a>Description</p>
<p>Returns the start measure of a geometric segment.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2078"></a>Parameters</p>
<dl>
<dt>geom_segment</dt>
<dd>
<p>Geometric segment whose start measure is to be returned.</p>
</dd>
<dt>dim_array</dt>
<dd>
<p>Dimensional information array corresponding to <code>geom_segment</code>, usually selected from one of the xxx_SDO_GEOM_METADATA views (described in <a href="sdo_objrelschema.htm#i1001937">Section 2.8</a>).</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2079"></a>Usage Notes</p>
<p>This function returns the start measure of <code>geom_segment</code>.</p>
<p>An exception is raised if <code>geom_segment</code> has an invalid geometry type or dimensionality.</p>
<p>The <span class="italic">_3D</span> format of this function (SDO_LRS.GEOM_SEGMENT_START_MEASURE_3D) is available. For information about <span class="italic">_3D</span> formats of LRS functions, see <a href="sdo_lrs_concepts.htm#i890852">Section 7.4</a>.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2080"></a>Examples</p>
<p>The following example returns the start measure of the geometric segment representing Route 1. (This example uses the definitions from the example in <a href="sdo_lrs_concepts.htm#i885918">Section 7.7</a>.)</p>
<pre>
SELECT  SDO_LRS.GEOM_SEGMENT_START_MEASURE(route_geometry)
  FROM lrs_routes WHERE route_id = 1;

SDO_LRS.GEOM_SEGMENT_START_MEASURE(ROUTE_GEOMETRY)                              
--------------------------------------------------                              
                                                 0
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" -->
<a id="i84563"></a>
<div id="SPATL1155" class="refsect1">
<h2 class="refsect1"><a id="sthref2081"></a><a id="sthref2082"></a>SDO_LRS.GEOM_SEGMENT_START_PT</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2083"></a>Format</p>
<p class="synopsis">SDO_LRS.GEOM_SEGMENT_START_PT(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;geom_segment IN SDO_GEOMETRY</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[, dim_array IN SDO_DIM_ARRAY]</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) RETURN SDO_GEOMETRY;</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2084"></a>Description</p>
<p>Returns the start point of a geometric segment.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2085"></a>Parameters</p>
<dl>
<dt>geom_segment</dt>
<dd>
<p>Geometric segment whose start point is to be returned.</p>
</dd>
<dt>dim_array</dt>
<dd>
<p>Dimensional information array corresponding to <code>geom_segment</code>, usually selected from one of the xxx_SDO_GEOM_METADATA views (described in <a href="sdo_objrelschema.htm#i1001937">Section 2.8</a>).</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2086"></a>Usage Notes</p>
<p>This function returns the start point of <code>geom_segment</code>.</p>
<p>An exception is raised if <code>geom_segment</code> has an invalid geometry type or dimensionality.</p>
<p>The <span class="italic">_3D</span> format of this function (SDO_LRS.GEOM_SEGMENT_START_PT_3D) is available. For information about <span class="italic">_3D</span> formats of LRS functions, see <a href="sdo_lrs_concepts.htm#i890852">Section 7.4</a>.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2087"></a>Examples</p>
<p>The following example returns the start point of the geometric segment representing Route 1. (This example uses the definitions from the example in <a href="sdo_lrs_concepts.htm#i885918">Section 7.7</a>.)</p>
<pre>
SELECT  SDO_LRS.GEOM_SEGMENT_START_PT(route_geometry)
  FROM lrs_routes WHERE route_id = 1;

SDO_LRS.GEOM_SEGMENT_START_PT(ROUTE_GEOMETRY)(SDO_GTYPE, SDO_SRID, SDO_POINT(X, 
--------------------------------------------------------------------------------
SDO_GEOMETRY(3301, NULL, NULL, SDO_ELEM_INFO_ARRAY(1, 1, 1), SDO_ORDINATE_ARRAY(
2, 2, 0))
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" -->
<a id="i84595"></a>
<div id="SPATL1156" class="refsect1">
<h2 class="refsect1"><a id="sthref2088"></a><a id="sthref2089"></a>SDO_LRS.GET_MEASURE</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2090"></a>Format</p>
<p class="synopsis">SDO_LRS.GET_MEASURE(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;point IN SDO_GEOMETRY</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[, dim_array IN SDO_DIM_ARRAY]</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) RETURN NUMBER;</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2091"></a>Description</p>
<p>Returns the measure of an LRS point.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2092"></a>Parameters</p>
<dl>
<dt>point</dt>
<dd>
<p>Point whose measure is to be returned.</p>
</dd>
<dt>dim_array</dt>
<dd>
<p>Dimensional information array corresponding to <code>point</code>, usually selected from one of the xxx_SDO_GEOM_METADATA views (described in <a href="sdo_objrelschema.htm#i1001937">Section 2.8</a>).</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2093"></a>Usage Notes</p>
<p>This function returns the measure of an LRS point.</p>
<p>If <code>point</code> is not valid, an "invalid LRS point" exception is raised.</p>
<p>Contrast this function with <a href="#i79426">SDO_LRS.PROJECT_PT</a>, which accepts as input a point that is not necessarily on the geometric segment, but which returns a point that is on the geometric segment, as opposed to a measure value. As the following example shows, the SDO_LRS.GET_MEASURE function can be used to return the measure of the projected point returned by <a href="#i79426">SDO_LRS.PROJECT_PT</a>.</p>
<p>The <span class="italic">_3D</span> format of this function (SDO_LRS.GET_MEASURE_3D) is available. For information about <span class="italic">_3D</span> formats of LRS functions, see <a href="sdo_lrs_concepts.htm#i890852">Section 7.4</a>.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2094"></a>Examples</p>
<p>The following example returns the measure of a projected point. In this case, the point resulting from the projection is 9 units from the start of the segment.</p>
<pre>
SELECT SDO_LRS.GET_MEASURE(
   SDO_LRS.PROJECT_PT(a.route_geometry, m.diminfo,
    SDO_GEOMETRY(3001, NULL, NULL,
       SDO_ELEM_INFO_ARRAY(1, 1, 1),
       SDO_ORDINATE_ARRAY(9, 3, NULL)) ),
   m.diminfo )
   FROM lrs_routes a, user_sdo_geom_metadata m
   WHERE m.table_name = 'LRS_ROUTES' AND m.column_name = 'ROUTE_GEOMETRY'
       AND a.route_id = 1;

SDO_LRS.GET_MEASURE(SDO_LRS.PROJECT_PT(A.ROUTE_GEOMETRY,M.DIMINFO,SDO_GEOM
--------------------------------------------------------------------------------
                                                                               9
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" -->
<a id="CACFEHDB"></a>
<div id="SPATL1157" class="refsect1">
<h2 class="refsect1"><a id="sthref2095"></a><a id="sthref2096"></a><a id="sthref2097"></a>SDO_LRS.GET_NEXT_SHAPE_PT</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2098"></a>Format</p>
<p class="synopsis">SDO_LRS.GET_NEXT_SHAPE_PT(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;geom_segment IN SDO_GEOMETRY,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;measure IN NUMBER</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) RETURN SDO_GEOMETRY;</p>
<p>or</p>
<p class="synopsis">SDO_LRS.GET_NEXT_SHAPE_PT(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;geom_segment IN SDO_GEOMETRY,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dim_array IN SDO_DIM_ARRAY,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;measure IN NUMBER</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) RETURN SDO_GEOMETRY;</p>
<p>or</p>
<p class="synopsis">SDO_LRS.GET_NEXT_SHAPE_PT(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;geom_segment IN SDO_GEOMETRY,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;point IN SDO_GEOMETRY</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) RETURN SDO_GEOMETRY;</p>
<p>or</p>
<p class="synopsis">SDO_LRS.GET_NEXT_SHAPE_PT(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;geom_segment IN SDO_GEOMETRY,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dim_array IN SDO_DIM_ARRAY,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;point IN SDO_GEOMETRY</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) RETURN SDO_GEOMETRY;</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2099"></a>Description</p>
<p>Returns the next shape point on a geometric segment after a specified measure value or LRS point.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2100"></a>Parameters</p>
<dl>
<dt>geom_segment</dt>
<dd>
<p>Geometric segment.</p>
</dd>
<dt>measure</dt>
<dd>
<p>Measure value on the geometric segment for which to return the next shape point.</p>
</dd>
<dt>point</dt>
<dd>
<p>Point for which to return the next shape point. If <code>point</code> is not on <code>geom_segment</code>, the point on the geometric segment closest to the specified point is computed, and the next shape point after that point is returned.</p>
</dd>
<dt>dim_array</dt>
<dd>
<p>Dimensional information array corresponding to <code>geom_segment</code>, usually selected from one of the xxx_SDO_GEOM_METADATA views (described in <a href="sdo_objrelschema.htm#i1001937">Section 2.8</a>).</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2101"></a>Usage Notes</p>
<p>If <code>measure</code> or <code>point</code> identifies the end point of the geometric segment, a null value is returned.</p>
<p>An exception is raised if <code>measure</code> is not a valid value for <code>geom_segment</code> or if <code>point</code> is not a valid LRS point.</p>
<p>Contrast this function with <a href="#CACBIJJD">SDO_LRS.GET_PREV_SHAPE_PT</a>, which returns the previous shape point on a geometric segment before a specified measure value or LRS point.</p>
<p>The <span class="italic">_3D</span> format of this function (SDO_LRS.GET_NEXT_SHAPE_PT_3D) is available. For information about <span class="italic">_3D</span> formats of LRS functions, see <a href="sdo_lrs_concepts.htm#i890852">Section 7.4</a>.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2102"></a>Examples</p>
<p>The following example returns the next shape point after measure 14 on the geometric segment representing Route 1. (This example uses the definitions from the example in <a href="sdo_lrs_concepts.htm#i885918">Section 7.7</a>.)</p>
<pre>
SELECT SDO_LRS.GET_NEXT_SHAPE_PT(a.route_geometry, 14)
   FROM lrs_routes a WHERE a.route_id = 1;

SDO_LRS.GET_NEXT_SHAPE_PT(A.ROUTE_GEOMETRY,14)(SDO_GTYPE, SDO_SRID, SDO_POINT(X,
--------------------------------------------------------------------------------
SDO_GEOMETRY(3301, NULL, NULL, SDO_ELEM_INFO_ARRAY(1, 1, 1), SDO_ORDINATE_ARRAY(
12, 10, 18)) 
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" -->
<a id="CACEJBBJ"></a>
<div id="SPATL1158" class="refsect1">
<h2 class="refsect1"><a id="sthref2103"></a><a id="sthref2104"></a><a id="sthref2105"></a>SDO_LRS.GET_NEXT_SHAPE_PT_MEASURE</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2106"></a>Format</p>
<p class="synopsis">SDO_LRS.GET_NEXT_SHAPE_PT_MEASURE(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;geom_segment IN SDO_GEOMETRY,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;measure IN NUMBER</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) RETURN NUMBER;</p>
<p>or</p>
<p class="synopsis">SDO_LRS.GET_NEXT_SHAPE_PT_MEASURE(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;geom_segment IN SDO_GEOMETRY,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dim_array IN SDO_DIM_ARRAY,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;measure IN NUMBER</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) RETURN NUMBER;</p>
<p>or</p>
<p class="synopsis">SDO_LRS.GET_NEXT_SHAPE_PT_MEASURE(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;geom_segment IN SDO_GEOMETRY,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;point IN SDO_GEOMETRY</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) RETURN NUMBER;</p>
<p>or</p>
<p class="synopsis">SDO_LRS.GET_NEXT_SHAPE_PT_MEASURE(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;geom_segment IN SDO_GEOMETRY,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dim_array IN SDO_DIM_ARRAY,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;point IN SDO_GEOMETRY</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) RETURN NUMBER;</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2107"></a>Description</p>
<p>Returns the measure value of the next shape point on a geometric segment after a specified measure value or LRS point.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2108"></a>Parameters</p>
<dl>
<dt>geom_segment</dt>
<dd>
<p>Geometric segment.</p>
</dd>
<dt>measure</dt>
<dd>
<p>Measure value on the geometric segment for which to return the measure value of the next shape point.</p>
</dd>
<dt>point</dt>
<dd>
<p>Point for which to return the measure value of the next shape point. If <code>point</code> is not on <code>geom_segment</code>, the point on the geometric segment closest to the specified point is computed, and the measure value of the next shape point after that point is returned.</p>
</dd>
<dt>dim_array</dt>
<dd>
<p>Dimensional information array corresponding to <code>geom_segment</code>, usually selected from one of the xxx_SDO_GEOM_METADATA views (described in <a href="sdo_objrelschema.htm#i1001937">Section 2.8</a>).</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2109"></a>Usage Notes</p>
<p>If <code>measure</code> or <code>point</code> identifies the end point of the geometric segment, a null value is returned.</p>
<p>An exception is raised if <code>measure</code> is not a valid value for <code>geom_segment</code> or if <code>point</code> is not a valid LRS point.</p>
<p>Contrast this function with <a href="#CACFGFCB">SDO_LRS.GET_PREV_SHAPE_PT_MEASURE</a>, which returns the measure value of the previous shape point on a geometric segment before a specified measure value or LRS point.</p>
<p>The <span class="italic">_3D</span> format of this function (SDO_LRS.GET_NEXT_SHAPE_PT_MEASURE_3D) is available. For information about <span class="italic">_3D</span> formats of LRS functions, see <a href="sdo_lrs_concepts.htm#i890852">Section 7.4</a>.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2110"></a>Examples</p>
<p>The following example returns the measure value of the next shape point after measure 14 on the geometric segment representing Route 1. (This example uses the definitions from the example in <a href="sdo_lrs_concepts.htm#i885918">Section 7.7</a>.)</p>
<pre>
SELECT SDO_LRS.GET_NEXT_SHAPE_PT_MEASURE(a.route_geometry, 14)
   FROM lrs_routes a WHERE a.route_id = 1;

SDO_LRS.GET_NEXT_SHAPE_PT_MEASURE(A.ROUTE_GEOMETRY,14)                          
------------------------------------------------------                          
                                                    18 
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" -->
<a id="CACBIJJD"></a>
<div id="SPATL1159" class="refsect1">
<h2 class="refsect1"><a id="sthref2111"></a><a id="sthref2112"></a><a id="sthref2113"></a>SDO_LRS.GET_PREV_SHAPE_PT</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2114"></a>Format</p>
<p class="synopsis">SDO_LRS.GET_PREV_SHAPE_PT(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;geom_segment IN SDO_GEOMETRY,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;measure IN NUMBER</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) RETURN SDO_GEOMETRY;</p>
<p>or</p>
<p class="synopsis">SDO_LRS.GET_PREV_SHAPE_PT(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;geom_segment IN SDO_GEOMETRY,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dim_array IN SDO_DIM_ARRAY,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;measure IN NUMBER</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) RETURN SDO_GEOMETRY;</p>
<p>or</p>
<p class="synopsis">SDO_LRS.GET_PREV_SHAPE_PT(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;geom_segment IN SDO_GEOMETRY,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;point IN SDO_GEOMETRY</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) RETURN SDO_GEOMETRY;</p>
<p>or</p>
<p class="synopsis">SDO_LRS.GET_PREV_SHAPE_PT(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;geom_segment IN SDO_GEOMETRY,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dim_array IN SDO_DIM_ARRAY,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;point IN SDO_GEOMETRY</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) RETURN SDO_GEOMETRY;</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2115"></a>Description</p>
<p>Returns the previous shape point on a geometric segment before a specified measure value or LRS point.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2116"></a>Parameters</p>
<dl>
<dt>geom_segment</dt>
<dd>
<p>Geometric segment.</p>
</dd>
<dt>measure</dt>
<dd>
<p>Measure value on the geometric segment for which to return the previous shape point.</p>
</dd>
<dt>point</dt>
<dd>
<p>Point for which to return the previous shape point. If <code>point</code> is not on <code>geom_segment</code>, the point on the geometric segment closest to the specified point is computed, and the closest shape point before that point is returned.</p>
</dd>
<dt>dim_array</dt>
<dd>
<p>Dimensional information array corresponding to <code>geom_segment</code>, usually selected from one of the xxx_SDO_GEOM_METADATA views (described in <a href="sdo_objrelschema.htm#i1001937">Section 2.8</a>).</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2117"></a>Usage Notes</p>
<p>If <code>measure</code> or <code>point</code> identifies the start point of the geometric segment, a null value is returned.</p>
<p>An exception is raised if <code>measure</code> is not a valid value for <code>geom_segment</code> or if <code>point</code> is not a valid LRS point.</p>
<p>Contrast this function with <a href="#CACFEHDB">SDO_LRS.GET_NEXT_SHAPE_PT</a>, which returns the next shape point on a geometric segment after a specified measure value or LRS point.</p>
<p>The <span class="italic">_3D</span> format of this function (SDO_LRS.GET_PREV_SHAPE_PT_3D) is available. For information about <span class="italic">_3D</span> formats of LRS functions, see <a href="sdo_lrs_concepts.htm#i890852">Section 7.4</a>.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2118"></a>Examples</p>
<p>The following example returns the closest shape point to measure 14 and before measure 14 on the geometric segment representing Route 1. (This example uses the definitions from the example in <a href="sdo_lrs_concepts.htm#i885918">Section 7.7</a>.)</p>
<pre>
SELECT SDO_LRS.GET_PREV_SHAPE_PT(a.route_geometry, 14)
   FROM lrs_routes a WHERE a.route_id = 1;

SDO_LRS.GET_PREV_SHAPE_PT(A.ROUTE_GEOMETRY,14)(SDO_GTYPE, SDO_SRID, SDO_POINT(X,
--------------------------------------------------------------------------------
SDO_GEOMETRY(3301, NULL, NULL, SDO_ELEM_INFO_ARRAY(1, 1, 1), SDO_ORDINATE_ARRAY(
12, 4, 12)) 
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" -->
<a id="CACFGFCB"></a>
<div id="SPATL1160" class="refsect1">
<h2 class="refsect1"><a id="sthref2119"></a><a id="sthref2120"></a><a id="sthref2121"></a>SDO_LRS.GET_PREV_SHAPE_PT_MEASURE</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2122"></a>Format</p>
<p class="synopsis">SDO_LRS.GET_PREV_SHAPE_PT_MEASURE(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;geom_segment IN SDO_GEOMETRY,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;measure IN NUMBER</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) RETURN NUMBER;</p>
<p>or</p>
<p class="synopsis">SDO_LRS.GET_PREV_SHAPE_PT_MEASURE(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;geom_segment IN SDO_GEOMETRY,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dim_array IN SDO_DIM_ARRAY,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;measure IN NUMBER</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) RETURN NUMBER;</p>
<p>or</p>
<p class="synopsis">SDO_LRS.GET_PREV_SHAPE_PT_MEASURE(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;geom_segment IN SDO_GEOMETRY,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;point IN SDO_GEOMETRY</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) RETURN NUMBER;</p>
<p>or</p>
<p class="synopsis">SDO_LRS.GET_PREV_SHAPE_PT_MEASURE(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;geom_segment IN SDO_GEOMETRY,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dim_array IN SDO_DIM_ARRAY,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;point IN SDO_GEOMETRY</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) RETURN NUMBER;</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2123"></a>Description</p>
<p>Returns the measure value of the previous shape point on a geometric segment before a specified measure value or LRS point.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2124"></a>Parameters</p>
<dl>
<dt>geom_segment</dt>
<dd>
<p>Geometric segment.</p>
</dd>
<dt>measure</dt>
<dd>
<p>Measure value on the geometric segment for which to return the measure value of the previous shape point.</p>
</dd>
<dt>point</dt>
<dd>
<p>Point for which to return the measure value of the previous shape point. If <code>point</code> is not on <code>geom_segment</code>, the point on the geometric segment closest to the specified point is computed, and the measure value of the closest shape point before that point is returned.</p>
</dd>
<dt>dim_array</dt>
<dd>
<p>Dimensional information array corresponding to <code>geom_segment</code>, usually selected from one of the xxx_SDO_GEOM_METADATA views (described in <a href="sdo_objrelschema.htm#i1001937">Section 2.8</a>).</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2125"></a>Usage Notes</p>
<p>If <code>measure</code> or <code>point</code> identifies the start point of the geometric segment, a null value is returned.</p>
<p>An exception is raised if <code>measure</code> is not a valid value for <code>geom_segment</code> or if <code>point</code> is not a valid LRS point.</p>
<p>Contrast this function with <a href="#CACEJBBJ">SDO_LRS.GET_NEXT_SHAPE_PT_MEASURE</a>, which returns the measure value of the next shape point on a geometric segment after a specified measure value or LRS point.</p>
<p>The <span class="italic">_3D</span> format of this function (SDO_LRS.GET_PREV_SHAPE_PT_MEASURE_3D) is available. For information about <span class="italic">_3D</span> formats of LRS functions, see <a href="sdo_lrs_concepts.htm#i890852">Section 7.4</a>.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2126"></a>Examples</p>
<p>The following example returns the measure value of the closest shape point to measure 14 and before measure 14 on the geometric segment representing Route 1. (This example uses the definitions from the example in <a href="sdo_lrs_concepts.htm#i885918">Section 7.7</a>.)</p>
<pre>
SELECT SDO_LRS.GET_PREV_SHAPE_PT_MEASURE(a.route_geometry, 14)
   FROM lrs_routes a WHERE a.route_id = 1;

SDO_LRS.GET_PREV_SHAPE_PT_MEASURE(A.ROUTE_GEOMETRY,14)                          
------------------------------------------------------                          
                                                    12
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" -->
<a id="CACEGBDC"></a>
<div id="SPATL1161" class="refsect1">
<h2 class="refsect1"><a id="sthref2127"></a><a id="sthref2128"></a>SDO_LRS.IS_GEOM_SEGMENT_DEFINED</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2129"></a>Format</p>
<p class="synopsis">SDO_LRS.IS_GEOM_SEGMENT_DEFINED(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;geom_segment IN SDO_GEOMETRY</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[, dim_array IN SDO_DIM_ARRAY]</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) RETURN VARCHAR2;</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2130"></a>Description</p>
<p>Checks if an LRS segment is defined correctly.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2131"></a>Parameters</p>
<dl>
<dt>geom_segment</dt>
<dd>
<p>Geometric segment to be checked.</p>
</dd>
<dt>dim_array</dt>
<dd>
<p>Dimensional information array corresponding to <code>geom_segment</code>, usually selected from one of the xxx_SDO_GEOM_METADATA views (described in <a href="sdo_objrelschema.htm#i1001937">Section 2.8</a>).</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2132"></a>Usage Notes</p>
<p>This function returns TRUE if <code>geom_segment</code> is defined correctly and FALSE if <code>geom_segment</code> is not defined correctly.</p>
<p>The start and end measures of <code>geom_segment</code> must be defined (cannot be null), and any measures assigned must be in an ascending or descending order along the segment direction.</p>
<p>The <span class="italic">_3D</span> format of this function (SDO_LRS.IS_GEOM_SEGMENT_DEFINED_3D) is available. For information about <span class="italic">_3D</span> formats of LRS functions, see <a href="sdo_lrs_concepts.htm#i890852">Section 7.4</a>.</p>
<p>See also the <a href="#i78247">SDO_LRS.VALID_GEOM_SEGMENT</a> function.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2133"></a>Examples</p>
<p>The following example checks if the geometric segment representing Route 1 is defined. (This example uses the definitions from the example in <a href="sdo_lrs_concepts.htm#i885918">Section 7.7</a>.)</p>
<pre>
SELECT  SDO_LRS.IS_GEOM_SEGMENT_DEFINED(route_geometry)
  FROM lrs_routes WHERE route_id = 1;

SDO_LRS.IS_GEOM_SEGMENT_DEFINED(ROUTE_GEOMETRY)                                 
--------------------------------------------------------------------------------
TRUE
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" -->
<a id="i89648"></a>
<div id="SPATL1162" class="refsect1">
<h2 class="refsect1"><a id="sthref2134"></a><a id="sthref2135"></a>SDO_LRS.IS_MEASURE_DECREASING</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2136"></a>Format</p>
<p class="synopsis">SDO_LRS.IS_MEASURE_DECREASING(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;geom_segment IN SDO_GEOMETRY</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[, dim_array IN SDO_DIM_ARRAY]</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) RETURN VARCHAR2;</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2137"></a>Description</p>
<p>Checks if the measure values along an LRS segment are decreasing (that is, descending in numerical value).</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2138"></a>Parameters</p>
<dl>
<dt>geom_segment</dt>
<dd>
<p>Geometric segment to be checked.</p>
</dd>
<dt>dim_array</dt>
<dd>
<p>Dimensional information array corresponding to <code>geom_segment</code>, usually selected from one of the xxx_SDO_GEOM_METADATA views (described in <a href="sdo_objrelschema.htm#i1001937">Section 2.8</a>).</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2139"></a>Usage Notes</p>
<p>This function returns TRUE if the measure values along an LRS segment are decreasing and FALSE if the measure values along an LRS segment are not decreasing.</p>
<p>The start and end measures of <code>geom_segment</code> must be defined (cannot be null).</p>
<p>The <span class="italic">_3D</span> format of this function (SDO_LRS.IS_MEASURE_DECREASING_3D) is available. For information about <span class="italic">_3D</span> formats of LRS functions, see <a href="sdo_lrs_concepts.htm#i890852">Section 7.4</a>.</p>
<p>See also the <a href="#i89579">SDO_LRS.IS_MEASURE_INCREASING</a> function.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2140"></a>Examples</p>
<p>The following example checks if the measure values along the geometric segment representing Route 1 are decreasing. (This example uses the definitions from the example in <a href="sdo_lrs_concepts.htm#i885918">Section 7.7</a>.)</p>
<pre>
SELECT SDO_LRS.IS_MEASURE_DECREASING(a.route_geometry, m.diminfo)
   FROM lrs_routes a, user_sdo_geom_metadata m
   WHERE m.table_name = 'LRS_ROUTES' AND m.column_name = 'ROUTE_GEOMETRY'
   AND a.route_id = 1;

SDO_LRS.IS_MEASURE_DECREASING(A.ROUTE_GEOMETRY,M.DIMINFO)                       
--------------------------------------------------------------------------------
FALSE
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" -->
<a id="i89579"></a>
<div id="SPATL1163" class="refsect1">
<h2 class="refsect1"><a id="sthref2141"></a><a id="sthref2142"></a>SDO_LRS.IS_MEASURE_INCREASING</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2143"></a>Format</p>
<p class="synopsis">SDO_LRS.IS_MEASURE_INCREASING(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;geom_segment IN SDO_GEOMETRY</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[, dim_array IN SDO_DIM_ARRAY]</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) RETURN VARCHAR2;</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2144"></a>Description</p>
<p>Checks if the measure values along an LRS segment are increasing (that is, ascending in numerical value).</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2145"></a>Parameters</p>
<dl>
<dt>geom_segment</dt>
<dd>
<p>Geometric segment to be checked.</p>
</dd>
<dt>dim_array</dt>
<dd>
<p>Dimensional information array corresponding to <code>geom_segment</code>, usually selected from one of the xxx_SDO_GEOM_METADATA views (described in <a href="sdo_objrelschema.htm#i1001937">Section 2.8</a>).</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2146"></a>Usage Notes</p>
<p>This function returns TRUE if the measure values along an LRS segment are increasing and FALSE if the measure values along an LRS segment are not increasing.</p>
<p>The start and end measures of <code>geom_segment</code> must be defined (cannot be null).</p>
<p>The <span class="italic">_3D</span> format of this function (SDO_LRS.IS_MEASURE_INCREASING_3D) is available. For information about <span class="italic">_3D</span> formats of LRS functions, see <a href="sdo_lrs_concepts.htm#i890852">Section 7.4</a>.</p>
<p>See also the <a href="#i89648">SDO_LRS.IS_MEASURE_DECREASING</a> function.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2147"></a>Examples</p>
<p>The following example checks if the measure values along the geometric segment representing Route 1 are increasing. (This example uses the definitions from the example in <a href="sdo_lrs_concepts.htm#i885918">Section 7.7</a>.)</p>
<pre>
SELECT SDO_LRS.IS_MEASURE_INCREASING(a.route_geometry, m.diminfo)
   FROM lrs_routes a, user_sdo_geom_metadata m
   WHERE m.table_name = 'LRS_ROUTES' AND m.column_name = 'ROUTE_GEOMETRY'
   AND a.route_id = 1;

SDO_LRS.IS_MEASURE_INCREASING(A.ROUTE_GEOMETRY,M.DIMINFO)                       
--------------------------------------------------------------------------------
TRUE
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" -->
<a id="CACDIFAE"></a>
<div id="SPATL1164" class="refsect1">
<h2 class="refsect1"><a id="sthref2148"></a><a id="sthref2149"></a><a id="sthref2150"></a>SDO_LRS.IS_SHAPE_PT_MEASURE</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2151"></a>Format</p>
<p class="synopsis">SDO_LRS.IS_SHAPE_PT_MEASURE(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;geom_segment IN SDO_GEOMETRY,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;measure IN NUMBER</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) RETURN VARCHAR2;</p>
<p>or</p>
<p class="synopsis">SDO_LRS.IS_SHAPE_PT_MEASURE(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;geom_segment IN SDO_GEOMETRY,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dim_array IN SDO_DIM_ARRAY,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;measure IN NUMBER</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) RETURN VARCHAR2;</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2152"></a>Description</p>
<p>Checks if a specified measure value is associated with a shape point on a geometric segment.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2153"></a>Parameters</p>
<dl>
<dt>geom_segment</dt>
<dd>
<p>Geometric segment to be checked.</p>
</dd>
<dt>measure</dt>
<dd>
<p>Measure value on the geometric segment to check if it is a shape point.</p>
</dd>
<dt>dim_array</dt>
<dd>
<p>Dimensional information array corresponding to <code>geom_segment</code>, usually selected from one of the xxx_SDO_GEOM_METADATA views (described in <a href="sdo_objrelschema.htm#i1001937">Section 2.8</a>).</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2154"></a>Usage Notes</p>
<p>This function returns TRUE if the specified measure value is associated with a shape point and FALSE if the measure value is not associated with a shape point.</p>
<p>An exception is raised if <code>measure</code> is not a valid value for <code>geom_segment</code>.</p>
<p>The <span class="italic">_3D</span> format of this function (SDO_LRS.IS_SHAPE_PT_MEASURE_3D) is available. For information about <span class="italic">_3D</span> formats of LRS functions, see <a href="sdo_lrs_concepts.htm#i890852">Section 7.4</a>.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2155"></a>Examples</p>
<p>The following example checks if measure 14 on the geometric segment representing Route 1 is a shape point. (This example uses the definitions from the example in <a href="sdo_lrs_concepts.htm#i885918">Section 7.7</a>.)</p>
<pre>
SELECT SDO_LRS.IS_SHAPE_PT_MEASURE(a.route_geometry, 14)
  FROM lrs_routes a WHERE a.route_id = 1;
 
SDO_LRS.IS_SHAPE_PT_MEASURE(A.ROUTE_GEOMETRY,14)                                
--------------------------------------------------------------------------------
FALSE
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" -->
<a id="i85478"></a>
<div id="SPATL1165" class="refsect1">
<h2 class="refsect1"><a id="sthref2156"></a><a id="sthref2157"></a>SDO_LRS.LOCATE_PT</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2158"></a>Format</p>
<p class="synopsis">SDO_LRS.LOCATE_PT(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;geom_segment IN SDO_GEOMETRY,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;measure IN NUMBER</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[, offset IN NUMBER</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) RETURN SDO_GEOMETRY;</p>
<p>or</p>
<p class="synopsis">SDO_LRS.LOCATE_PT(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;geom_segment IN SDO_GEOMETRY,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dim_array IN SDO_DIM_ARRAY,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;measure IN NUMBER</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[, offset IN NUMBER]</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) RETURN SDO_GEOMETRY;</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2159"></a>Description</p>
<p>Returns the point located at a specified distance from the start of a geometric segment.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2160"></a>Parameters</p>
<dl>
<dt>geom_segment</dt>
<dd>
<p>Geometric segment to be checked to see if it falls within the measure range of <code>measure</code>.</p>
</dd>
<dt>dim_array</dt>
<dd>
<p>Dimensional information array corresponding to <code>geom_segment</code>, usually selected from one of the xxx_SDO_GEOM_METADATA views (described in <a href="sdo_objrelschema.htm#i1001937">Section 2.8</a>).</p>
</dd>
<dt>measure</dt>
<dd>
<p>Distance to measure from the start point of <code>geom_segment</code>.</p>
</dd>
<dt>offset</dt>
<dd>
<p>Distance to measure perpendicularly from the point that is located at <code>measure</code> units from the start point of <code>geom_segment</code>. The default is 0 (that is, the point is on <code>geom_segment</code>).</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2161"></a>Usage Notes</p>
<p>This function returns the referenced point. For example, on a highway, the point might represent the location of an accident.</p>
<p>The unit of measurement for <code>offset</code> is the same as for the coordinate system associated with <code>geom_segment</code>. For geodetic data, the default unit of measurement is meters.</p>
<p>With geodetic data using the WGS 84 coordinate system, this function can be used to return the longitude and latitude coordinates of any point on or offset from the segment.</p>
<p>An exception is raised if <code>geom_segment</code> has an invalid geometry type or dimensionality, or if the location is out of range.</p>
<p>The <span class="italic">_3D</span> format of this function (SDO_LRS.LOCATE_PT_3D) is available; however, the <code>offset</code> parameter is not available for SDO_LRS.LOCATE_PT_3D. For information about <span class="italic">_3D</span> formats of LRS functions, see <a href="sdo_lrs_concepts.htm#i890852">Section 7.4</a>.</p>
<p>For more information about locating a point on a geometric segment, see <a href="sdo_lrs_concepts.htm#i890041">Section 7.5.8</a>.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2162"></a>Examples</p>
<p>The following example creates a table for automobile accident data, inserts a record for an accident at the point at measure 9 and on (that is, offset 0) the geometric segment representing Route 1, and displays the data. (The accident table is deliberately oversimplified. This example also uses the route definition from the example in <a href="sdo_lrs_concepts.htm#i885918">Section 7.7</a>.)</p>
<pre>
-- Create a table for accidents.
CREATE TABLE accidents (
  accident_id  NUMBER PRIMARY KEY,
  route_id  NUMBER,
  accident_geometry  SDO_GEOMETRY);
 
-- Insert an accident record.
DECLARE
geom_segment SDO_GEOMETRY;
 
BEGIN
 
SELECT  SDO_LRS.LOCATE_PT(a.route_geometry, 9, 0) into geom_segment
  FROM lrs_routes a WHERE a.route_name = 'Route1';
 
INSERT INTO accidents VALUES(1, 1, geom_segment);
 
END;
/
 
SELECT * from accidents;
 
ACCIDENT_ID   ROUTE_ID                                                          
----------- ----------                                                          
ACCIDENT_GEOMETRY(SDO_GTYPE, SDO_SRID, SDO_POINT(X, Y, Z), SDO_ELEM_INFO, SDO_OR
--------------------------------------------------------------------------------
          1          1                                                          
SDO_GEOMETRY(3301, NULL, NULL, SDO_ELEM_INFO_ARRAY(1, 1, 1), SDO_ORDINATE_ARRAY(
9, 4, 9))
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" -->
<a id="CACJAEFE"></a>
<div id="SPATL1166" class="refsect1">
<h2 class="refsect1"><a id="sthref2163"></a><a id="sthref2164"></a><a id="sthref2165"></a>SDO_LRS.LRS_INTERSECTION</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2166"></a>Format</p>
<p class="synopsis">SDO_LRS.LRS_INTERSECTION(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;geom_1 IN SDO_GEOMETRY,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dim_array_1 IN SDO_DIM_ARRAY,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;geom_2 IN SDO_GEOMETRY,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dim_array_2 IN SDO_DIM_ARRAY</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) RETURN SDO_GEOMETRY;</p>
<p>or</p>
<p class="synopsis">SDO_LRS.LRS_INTERSECTION(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;geom_1 IN SDO_GEOMETRY,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;geom_2 IN SDO_GEOMETRY,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tolerance IN NUMBER</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) RETURN SDO_GEOMETRY;</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2167"></a>Description</p>
<p>Returns an LRS geometry object that is the topological intersection (AND operation) of two geometry objects where one or both are LRS geometries.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2168"></a>Parameters</p>
<dl>
<dt>geom_1</dt>
<dd>
<p>Geometry object.</p>
</dd>
<dt>dim_array_1</dt>
<dd>
<p>Dimensional information array corresponding to <code>geom_1</code>, usually selected from one of the xxx_SDO_GEOM_METADATA views (described in <a href="sdo_objrelschema.htm#i1001937">Section 2.8</a>).</p>
</dd>
<dt>geom_2</dt>
<dd>
<p>Geometry object.</p>
</dd>
<dt>dim_array_2</dt>
<dd>
<p>Dimensional information array corresponding to <code>geom_2</code>, usually selected from one of the xxx_SDO_GEOM_METADATA views (described in <a href="sdo_objrelschema.htm#i1001937">Section 2.8</a>).</p>
</dd>
<dt>tolerance</dt>
<dd>
<p>Tolerance value (see <a href="sdo_intro.htm#i884589">Section 1.5.5</a>).</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2169"></a>Usage Notes</p>
<p>This function performs essentially the same intersection operation as the <a href="sdo_objgeom.htm#i857570">SDO_GEOM.SDO_INTERSECTION</a> function (described in <a href="sdo_objgeom.htm#BGHCIGBI">Chapter 24</a>), except that SDO_LRS.LRS_INTERSECTION is designed to return a valid LRS geometry (point, line string, or multiline string) where one or both of the geometry-related input parameters are LRS geometries. (If neither input geometry is an LRS geometry, this function operates the same as the <a href="sdo_objgeom.htm#i857570">SDO_GEOM.SDO_INTERSECTION</a> function.).</p>
<p>The returned geometry is an LRS line string, multiline string, or point geometry that includes measure dimension information. The measure values reflect those in the first LRS geometry specified as an input parameter.</p>
<p>The first LRS geometry specified as an input parameter must not be a polygon; it must be a line string, multiline string, or point.</p>
<p>If an LRS line string (geometric segment) intersects a line string (LRS or standard), the result is an LRS point; if an LRS line string intersects a polygon, the result is an LRS line string.</p>
<p>An exception is raised if <code>geom_1</code> and <code>geom_2</code> are based on different coordinate systems.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2170"></a>Examples</p>
<p>The following example shows an LRS geometric segment (illustrated in <a href="sdo_lrs_concepts.htm#i888413">Figure 7-20</a> in <a href="sdo_lrs_concepts.htm#i885918">Section 7.7</a>) intersected by a vertical line from (8,2) to (8,6). The result is an LRS point geometry, in which the measure value (8) reflects the measure for that point (designated as Exit 3 in <a href="sdo_lrs_concepts.htm#i888413">Figure 7-20</a>) in the <code>geom_1</code> geometry. (This example uses the definitions from the example in <a href="sdo_lrs_concepts.htm#i885918">Section 7.7</a>.)</p>
<pre>
-- Intersection of LRS segment and standard line segment
SELECT SDO_LRS.LRS_INTERSECTION(route_geometry,
  SDO_GEOMETRY(2002, NULL, NULL, SDO_ELEM_INFO_ARRAY(1,2,1),
    SDO_ORDINATE_ARRAY(8,2, 8,6)), 0.005)
  FROM lrs_routes WHERE route_id = 1;
 
SDO_LRS.LRS_INTERSECTION(ROUTE_GEOMETRY,SDO_GEOMETRY(2002,NULL,NULL,SDO_ELEM_INF
--------------------------------------------------------------------------------
SDO_GEOMETRY(3301, NULL, NULL, SDO_ELEM_INFO_ARRAY(1, 1, 1), SDO_ORDINATE_ARRAY(
8, 4, 8))
</pre>
<p>The following example shows an LRS geometric segment (illustrated in <a href="sdo_lrs_concepts.htm#i888413">Figure 7-20</a> in <a href="sdo_lrs_concepts.htm#i885918">Section 7.7</a>) intersected by a vertical line from (12,2) to (12,6). The result is an LRS line string geometry, in which the measure values (12 and 14) reflect measures for points (the first of which is designated as Exit 4 in <a href="sdo_lrs_concepts.htm#i888413">Figure 7-20</a>) in the <code>geom_1</code> geometry. (This example uses the definitions from the example in <a href="sdo_lrs_concepts.htm#i885918">Section 7.7</a>.)</p>
<pre>
SELECT SDO_LRS.LRS_INTERSECTION(route_geometry,
  SDO_GEOMETRY(2002, NULL, NULL, SDO_ELEM_INFO_ARRAY(1,2,1),
   SDO_ORDINATE_ARRAY(12,2, 12,6)), 0.005)
  FROM lrs_routes WHERE route_id = 1;
 
SDO_LRS.LRS_INTERSECTION(ROUTE_GEOMETRY,SDO_GEOMETRY(2002,NULL,NULL,SDO_ELEM_INF
--------------------------------------------------------------------------------
SDO_GEOMETRY(3302, NULL, NULL, SDO_ELEM_INFO_ARRAY(1, 2, 1), SDO_ORDINATE_ARRAY(
12, 4, 12, 12, 6, 14))
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" -->
<a id="i85244"></a>
<div id="SPATL1167" class="refsect1">
<h2 class="refsect1"><a id="sthref2171"></a><a id="sthref2172"></a>SDO_LRS.MEASURE_RANGE</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2173"></a>Format</p>
<p class="synopsis">SDO_LRS.MEASURE_RANGE(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;geom_segment IN SDO_GEOMETRY</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[, dim_array IN SDO_DIM_ARRAY]</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) RETURN NUMBER;</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2174"></a>Description</p>
<p>Returns the measure range of a geometric segment, that is, the difference between the start measure and end measure.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2175"></a>Parameters</p>
<dl>
<dt>geom_segment</dt>
<dd>
<p>Cartographic representation of a linear feature.</p>
</dd>
<dt>dim_array</dt>
<dd>
<p>Dimensional information array corresponding to <code>geom_segment</code>, usually selected from one of the xxx_SDO_GEOM_METADATA views (described in <a href="sdo_objrelschema.htm#i1001937">Section 2.8</a>).</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2176"></a>Usage Notes</p>
<p>This function subtracts the start measure of <code>geom_segment</code> from the end measure of <code>geom_segment</code>.</p>
<p>The <span class="italic">_3D</span> format of this function (SDO_LRS.MEASURE_RANGE_3D) is available. For information about <span class="italic">_3D</span> formats of LRS functions, see <a href="sdo_lrs_concepts.htm#i890852">Section 7.4</a>.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2177"></a>Examples</p>
<p>The following example returns the measure range of the geometric segment representing Route 1. (This example uses the definitions from the example in <a href="sdo_lrs_concepts.htm#i885918">Section 7.7</a>.)</p>
<pre>
SELECT SDO_LRS.MEASURE_RANGE(route_geometry)
  FROM lrs_routes WHERE route_id = 1;

SDO_LRS.MEASURE_RANGE(ROUTE_GEOMETRY)                                           
-------------------------------------                                           
                                   27
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" -->
<a id="i84773"></a>
<div id="SPATL1168" class="refsect1">
<h2 class="refsect1"><a id="sthref2178"></a><a id="sthref2179"></a>SDO_LRS.MEASURE_TO_PERCENTAGE</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2180"></a>Format</p>
<p class="synopsis">SDO_LRS.MEASURE_TO_PERCENTAGE(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;geom_segment IN SDO_GEOMETRY,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;measure IN NUMBER</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) RETURN NUMBER;</p>
<p>or</p>
<p class="synopsis">SDO_LRS.MEASURE_TO_PERCENTAGE(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;geom_segment IN SDO_GEOMETRY,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dim_array IN SDO_DIM_ARRAY,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;measure IN NUMBER</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) RETURN NUMBER;</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2181"></a>Description</p>
<p>Returns the percentage (0 to 100) that a specified measure is of the measure range of a geometric segment.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2182"></a>Parameters</p>
<dl>
<dt>geom_segment</dt>
<dd>
<p>Cartographic representation of a linear feature.</p>
</dd>
<dt>dim_array</dt>
<dd>
<p>Dimensional information array corresponding to <code>geom_segment</code>, usually selected from one of the xxx_SDO_GEOM_METADATA views (described in <a href="sdo_objrelschema.htm#i1001937">Section 2.8</a>).</p>
</dd>
<dt>measure</dt>
<dd>
<p>Measure value. This function returns the percentage that this measure value is of the measure range.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2183"></a>Usage Notes</p>
<p>This function returns a number (0 to 100) that is the percentage of the measure range that the specified measure represents. (The measure range is the end measure minus the start measure.) For example, if the measure range of <code>geom_segment</code> is 50 and <code>measure</code> is 20, the function returns 40 (because 20/50 = 40%).</p>
<p>This function performs the reverse of the <a href="#i84808">SDO_LRS.PERCENTAGE_TO_MEASURE</a> function, which returns the measure that corresponds to a percentage value.</p>
<p>An exception is raised if <code>geom_segment</code> or <code>measure</code> is invalid.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2184"></a>Examples</p>
<p>The following example returns the percentage that 5 is of the measure range of the geometric segment representing Route 1. (This example uses the definitions from the example in <a href="sdo_lrs_concepts.htm#i885918">Section 7.7</a>.) The measure range of this segment is 27, and 5 is approximately 18.5 percent of 27.</p>
<pre>
SELECT SDO_LRS.MEASURE_TO_PERCENTAGE(a.route_geometry, m.diminfo, 5)
  FROM lrs_routes a, user_sdo_geom_metadata m
  WHERE m.table_name = 'LRS_ROUTES' AND m.column_name = 'ROUTE_GEOMETRY'
    AND a.route_id = 1;

SDO_LRS.MEASURE_TO_PERCENTAGE(A.ROUTE_GEOMETRY,M.DIMINFO,5)                     
-----------------------------------------------------------                     
                                                 18.5185185
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" -->
<a id="i88633"></a>
<div id="SPATL1169" class="refsect1">
<h2 class="refsect1"><a id="sthref2185"></a><a id="sthref2186"></a>SDO_LRS.OFFSET_GEOM_SEGMENT</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2187"></a>Format</p>
<p class="synopsis">SDO_LRS.OFFSET_GEOM_SEGMENT(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;geom_segment IN SDO_GEOMETRY,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;start_measure IN NUMBER,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end_measure IN NUMBER,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;offset IN NUMBER,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tolerance IN NUMBER DEFAULT 1.0e-8</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[, unit IN VARCHAR2]</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) RETURN SDO_GEOMETRY;</p>
<p>or</p>
<p class="synopsis">SDO_LRS.OFFSET_GEOM_SEGMENT(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;geom_segment IN SDO_GEOMETRY,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dim_array IN SDO_DIM_ARRAY,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;start_measure IN NUMBER,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end_measure IN NUMBER,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;offset IN NUMBER</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[, unit IN VARCHAR2]</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) RETURN SDO_GEOMETRY;</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2188"></a>Description</p>
<p>Returns the geometric segment at a specified offset from a geometric segment.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2189"></a>Parameters</p>
<dl>
<dt>geom_segment</dt>
<dd>
<p>Cartographic representation of a linear feature.</p>
</dd>
<dt>dim_array</dt>
<dd>
<p>Dimensional information array corresponding to <code>geom_segment</code>, usually selected from one of the xxx_SDO_GEOM_METADATA views (described in <a href="sdo_objrelschema.htm#i1001937">Section 2.8</a>).</p>
</dd>
<dt>start_measure</dt>
<dd>
<p>Start measure of <code>geom_segment</code> at which to start the offset operation.</p>
</dd>
<dt>end_measure</dt>
<dd>
<p>End measure of <code>geom_segment</code> at which to start the offset operation.</p>
</dd>
<dt>offset</dt>
<dd>
<p>Distance to measure perpendicularly from the points along <code>geom_segment</code>. Positive offset values are to the left of <code>geom_segment</code>; negative offset values are to the right of <code>geom_segment</code>.</p>
</dd>
<dt>tolerance</dt>
<dd>
<p>Tolerance value (see <a href="sdo_intro.htm#i884589">Section 1.5.5</a> and <a href="sdo_lrs_concepts.htm#CIHJBDGG">Section 7.6</a>). The default value is 0.00000001.</p>
</dd>
<dt>unit</dt>
<dd>
<p>Unit of measurement specification: a quoted string with one or both of the following keywords:</p>
</dd>
</dl>
<ul>
<li>
<p><code>unit</code> and an SDO_UNIT value from the MDSYS.SDO_DIST_UNITS table. See <a href="sdo_objrelschema.htm#i1010145">Section 2.10</a> for more information about unit of measurement specification.</p>
</li>
<li>
<p><code>arc_tolerance</code> and an arc tolerance value. See the Usage Notes for the <a href="sdo_objgeom.htm#i867686">SDO_GEOM.SDO_ARC_DENSIFY</a> function in <a href="sdo_objgeom.htm#BGHCIGBI">Chapter 24</a> for more information about the <code>arc_tolerance</code> keyword.</p>
</li>
</ul>
<p>For example: 'unit=km arc_tolerance=0.05'</p>
<p>If the input geometry is geodetic data, this parameter is required, and <code>arc_tolerance</code> must be specified. If the input geometry is Cartesian or projected data, <code>arc_tolerance</code> has no effect and should not be specified.</p>
<p>If this parameter is not specified for a Cartesian or projected geometry, or if the <code>arc_tolerance</code> keyword is specified for a geodetic geometry but the <code>unit</code> keyword is not specified, the unit of measurement associated with the data is assumed.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2190"></a>Usage Notes</p>
<p><code>start_measure</code> and <code>end_measure</code> can be any points on the geometric segment. They do not have to be in any specific order. For example, <code>start_measure</code> and <code>end_measure</code> can be 5 and 10, respectively, or 10 and 5, respectively.</p>
<p>The direction and measures of the resulting geometric segment are preserved (that is, they reflect the original segment).</p>
<p>The geometry type of <code>geom_segment</code> must be line or multiline. For example, it cannot be a polygon.</p>
<p>An exception is raised if <code>geom_segment</code>, <code>start_measure</code>, or <code>end_measure</code> is invalid.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2191"></a>Examples</p>
<p>The following example returns the geometric segment 2 distance units to the left (positive offset 2) of the segment from measures 5 through 10 of Route 1. Note in SDO_ORDINATE_ARRAY of the returned segment that the Y values (6) are 2 greater than the Y values (4) of the relevant part of the original segment. (This example uses the definitions from the example in <a href="sdo_lrs_concepts.htm#i885918">Section 7.7</a>.)</p>
<pre>
-- Create a segment offset 2 to the left from measures 5 through 10.
-- First, display the original segment; then, offset.
SELECT a.route_geometry FROM lrs_routes a WHERE a.route_id = 1;

ROUTE_GEOMETRY(SDO_GTYPE, SDO_SRID, SDO_POINT(X, Y, Z), SDO_ELEM_INFO, SDO_ORDIN
--------------------------------------------------------------------------------
SDO_GEOMETRY(3302, NULL, NULL, SDO_ELEM_INFO_ARRAY(1, 2, 1), SDO_ORDINATE_ARRAY(
2, 2, 0, 2, 4, 2, 8, 4, 8, 12, 4, 12, 12, 10, 18, 8, 10, 22, 5, 14, 27))        
                                                                                
SELECT  SDO_LRS.OFFSET_GEOM_SEGMENT(a.route_geometry, m.diminfo, 5, 10, 2)
    FROM lrs_routes a, user_sdo_geom_metadata m
    WHERE m.table_name = 'LRS_ROUTES' AND m.column_name = 'ROUTE_GEOMETRY'
      AND a.route_id = 1;

SDO_LRS.OFFSET_GEOM_SEGMENT(A.ROUTE_GEOMETRY,M.DIMINFO,5,10,2)(SDO_GTYPE, SDO_SR
--------------------------------------------------------------------------------
SDO_GEOMETRY(3302, NULL, NULL, SDO_ELEM_INFO_ARRAY(1, 2, 1), SDO_ORDINATE_ARRAY(
5, 6, 5, 10, 6, 10))
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" -->
<a id="i84808"></a>
<div id="SPATL1170" class="refsect1">
<h2 class="refsect1"><a id="sthref2192"></a><a id="sthref2193"></a>SDO_LRS.PERCENTAGE_TO_MEASURE</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2194"></a>Format</p>
<p class="synopsis">SDO_LRS.PERCENTAGE_TO_MEASURE(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;geom_segment IN SDO_GEOMETRY,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;percentage IN NUMBER</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) RETURN NUMBER;</p>
<p>or</p>
<p class="synopsis">SDO_LRS.PERCENTAGE_TO_MEASURE(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;geom_segment IN SDO_GEOMETRY,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dim_array IN SDO_DIM_ARRAY,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;percentage IN NUMBER</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) RETURN NUMBER;</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2195"></a>Description</p>
<p>Returns the measure value of a specified percentage (0 to 100) of the measure range of a geometric segment.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2196"></a>Parameters</p>
<dl>
<dt>geom_segment</dt>
<dd>
<p>Cartographic representation of a linear feature.</p>
</dd>
<dt>dim_array</dt>
<dd>
<p>Dimensional information array corresponding to <code>geom_segment</code>, usually selected from one of the xxx_SDO_GEOM_METADATA views (described in <a href="sdo_objrelschema.htm#i1001937">Section 2.8</a>).</p>
</dd>
<dt>percentage</dt>
<dd>
<p>Percentage value. Must be from 0 to 100. This function returns the measure value corresponding to this percentage of the measure range.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2197"></a>Usage Notes</p>
<p>This function returns the measure value corresponding to the specified percentage of the measure range. (The measure range is the end measure minus the start measure.) For example, if the measure range of <code>geom_segment</code> is 50 and <code>percentage</code> is 40, the function returns 20 (because 40% of 50 = 20).</p>
<p>This function performs the reverse of the <a href="#i84773">SDO_LRS.MEASURE_TO_PERCENTAGE</a> function, which returns the percentage value that corresponds to a measure.</p>
<p>An exception is raised if <code>geom_segment</code> has an invalid geometry type or dimensionality, or if <code>percentage</code> is less than 0 or greater than 100.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2198"></a>Examples</p>
<p>The following example returns the measure that is 50 percent of the measure range of the geometric segment representing Route 1. (This example uses the definitions from the example in <a href="sdo_lrs_concepts.htm#i885918">Section 7.7</a>.) The measure range of this segment is 27, and 50 percent of 27 is 13.5.</p>
<pre>
SELECT SDO_LRS.PERCENTAGE_TO_MEASURE(a.route_geometry, m.diminfo, 50)
  FROM lrs_routes a, user_sdo_geom_metadata m
  WHERE m.table_name = 'LRS_ROUTES' AND m.column_name = 'ROUTE_GEOMETRY'
    AND a.route_id = 1;

SDO_LRS.PERCENTAGE_TO_MEASURE(A.ROUTE_GEOMETRY,M.DIMINFO,50)                    
------------------------------------------------------------                    
                                                        13.5
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" -->
<a id="i79426"></a>
<div id="SPATL1171" class="refsect1">
<h2 class="refsect1"><a id="sthref2199"></a><a id="sthref2200"></a><a id="sthref2201"></a>SDO_LRS.PROJECT_PT</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2202"></a>Format</p>
<p class="synopsis">SDO_LRS.PROJECT_PT(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;geom_segment IN SDO_GEOMETRY,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;point IN SDO_GEOMETRY,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tolerance IN NUMBER DEFAULT 1.0e-8</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[, offset OUT NUMBER]</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) RETURN SDO_GEOMETRY;</p>
<p>or</p>
<p class="synopsis">SDO_LRS.PROJECT_PT(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;geom_segment IN SDO_GEOMETRY,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dim_array IN SDO_DIM_ARRAY,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;point IN SDO_GEOMETRY</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[, point_dim_array IN SDO_DIM_ARRAY]</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) RETURN SDO_GEOMETRY;</p>
<p>or</p>
<p class="synopsis">SDO_LRS.PROJECT_PT(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;geom_segment IN SDO_GEOMETRY,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dim_array IN SDO_DIM_ARRAY,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;point IN SDO_GEOMETRY,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;point_dim_array IN SDO_DIM_ARRAY</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[, offset OUT NUMBER]</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) RETURN SDO_GEOMETRY;</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2203"></a>Description</p>
<p>Returns the projection point of a specified point. The projection point is on the geometric segment.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2204"></a>Parameters</p>
<dl>
<dt>geom_segment</dt>
<dd>
<p>Geometric segment to be checked.</p>
</dd>
<dt>dim_array</dt>
<dd>
<p>Dimensional information array corresponding to <code>geom_segment</code>, usually selected from one of the xxx_SDO_GEOM_METADATA views (described in <a href="sdo_objrelschema.htm#i1001937">Section 2.8</a>).</p>
</dd>
<dt>point</dt>
<dd>
<p>Point to be projected.</p>
</dd>
<dt>tolerance</dt>
<dd>
<p>Tolerance value (see <a href="sdo_intro.htm#i884589">Section 1.5.5</a> and <a href="sdo_lrs_concepts.htm#CIHJBDGG">Section 7.6</a>). The default value is 0.00000001.</p>
</dd>
<dt>point_dim_array</dt>
<dd>
<p>Dimensional information array corresponding to <code>point</code>, usually selected from one of the xxx_SDO_GEOM_METADATA views (described in <a href="sdo_objrelschema.htm#i1001937">Section 2.8</a>).</p>
</dd>
<dt>offset</dt>
<dd>
<p>Offset (shortest distance) from the point to the geometric segment.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2205"></a>Usage Notes</p>
<p>This function returns the projection point (including its measure) of a specified point (<code>point</code>). The projection point is on the geometric segment.</p>
<p>If multiple projection points exist, the first projection point encountered from the start point is returned.</p>
<p>If you specify the output parameter <code>offset</code>, the function stores the signed offset (shortest distance) from the point to the geometric segment. For more information about the offset to a geometric segment, see <a href="sdo_lrs_concepts.htm#i884979">Section 7.1.5</a>.</p>
<p>An exception is raised if <code>geom_segment</code> or <code>point</code> has an invalid geometry type or dimensionality, or if <code>geom_segment</code> and <code>point</code> are based on different coordinate systems.</p>
<p>The <span class="italic">_3D</span> format of this function (SDO_LRS.PROJECT_PT_3D) is available. For information about <span class="italic">_3D</span> formats of LRS functions, see <a href="sdo_lrs_concepts.htm#i890852">Section 7.4</a>.</p>
<p>For more information about projecting a point onto a geometric segment, see <a href="sdo_lrs_concepts.htm#i890042">Section 7.5.9</a>.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2206"></a>Examples</p>
<p>The following example returns the point (9,4,9) on the geometric segment representing Route 1 that is closest to the specified point (9,3,NULL). (This example uses the definitions from the example in <a href="sdo_lrs_concepts.htm#i885918">Section 7.7</a>.)</p>
<pre>
-- Point 9,3,NULL is off the road; should return 9,4,9.
SELECT  SDO_LRS.PROJECT_PT(route_geometry, 
  SDO_GEOMETRY(3301, NULL, NULL, 
     SDO_ELEM_INFO_ARRAY(1, 1, 1), 
     SDO_ORDINATE_ARRAY(9, 3, NULL)) )
  FROM lrs_routes WHERE route_id = 1;

SDO_LRS.PROJECT_PT(ROUTE_GEOMETRY,SDO_GEOMETRY(3301,NULL,NULL,SDO_EL
--------------------------------------------------------------------------------
SDO_GEOMETRY(3301, NULL, NULL, SDO_ELEM_INFO_ARRAY(1, 1, 1), SDO_ORDINATE_ARRAY(
9, 4, 9))
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" -->
<a id="i85130"></a>
<div id="SPATL1172" class="refsect1">
<h2 class="refsect1"><a id="sthref2207"></a><a id="sthref2208"></a>SDO_LRS.REDEFINE_GEOM_SEGMENT</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2209"></a>Format</p>
<p class="synopsis">SDO_LRS.REDEFINE_GEOM_SEGMENT(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;geom_segment IN OUT SDO_GEOMETRY</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[, start_measure IN NUMBER,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end_measure IN NUMBER]);</p>
<p>or</p>
<p class="synopsis">SDO_LRS.REDEFINE_GEOM_SEGMENT(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;geom_segment IN OUT SDO_GEOMETRY,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dim_array IN SDO_DIM_ARRAY</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[, start_measure IN NUMBER,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end_measure IN NUMBER]);</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2210"></a>Description</p>
<p>Populates the measures of all shape points based on the start and end measures of a geometric segment, overriding any previously assigned measures between the start point and end point.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2211"></a>Parameters</p>
<dl>
<dt>geom_segment</dt>
<dd>
<p>Cartographic representation of a linear feature.</p>
</dd>
<dt>dim_array</dt>
<dd>
<p>Dimensional information array corresponding to <code>geom_segment</code>, usually selected from one of the xxx_SDO_GEOM_METADATA views (described in <a href="sdo_objrelschema.htm#i1001937">Section 2.8</a>).</p>
</dd>
<dt>start_measure</dt>
<dd>
<p>Distance measured from the start point of a geometric segment to the start point of the linear feature. The default is the existing value (if any) in the measure dimension; otherwise, the default is 0.</p>
</dd>
<dt>end_measure</dt>
<dd>
<p>Distance measured from the end point of a geometric segment to the start point of the linear feature. The default is the existing value (if any) in the measure dimension; otherwise, the default is the cartographic length of the segment.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2212"></a>Usage Notes</p>
<p>An exception is raised if <code>geom_segment</code> has an invalid geometry type or dimensionality, or if <code>start_measure</code> or <code>end_measure</code> is out of range.</p>
<p>The <span class="italic">_3D</span> format of this procedure (SDO_LRS.REDEFINE_GEOM_SEGMENT_3D) is available. For information about <span class="italic">_3D</span> formats of LRS functions and procedures, see <a href="sdo_lrs_concepts.htm#i890852">Section 7.4</a>.</p>
<p>For more information about redefining a geometric segment, see <a href="sdo_lrs_concepts.htm#i890043">Section 7.5.2</a>.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2213"></a>Examples</p>
<p>The following example redefines a geometric segment, effectively converting miles to kilometers in the measure values. (This example uses the definitions from the example in <a href="sdo_lrs_concepts.htm#i885918">Section 7.7</a>.)</p>
<pre>
-- First, display the original segment; then, redefine.
SELECT a.route_geometry FROM lrs_routes a WHERE a.route_id = 1;

ROUTE_GEOMETRY(SDO_GTYPE, SDO_SRID, SDO_POINT(X, Y, Z), SDO_ELEM_INFO, SDO_ORDIN
--------------------------------------------------------------------------------
SDO_GEOMETRY(3302, NULL, NULL, SDO_ELEM_INFO_ARRAY(1, 2, 1), SDO_ORDINATE_ARRAY(
2, 2, 0, 2, 4, 2, 8, 4, 8, 12, 4, 12, 12, 10, 18, 8, 10, 22, 5, 14, 27))        
                                                                                
-- Redefine geometric segment to "convert" miles to kilometers.
DECLARE
geom_segment SDO_GEOMETRY;
dim_array SDO_DIM_ARRAY;

BEGIN

SELECT a.route_geometry into geom_segment FROM lrs_routes a
  WHERE a.route_name = 'Route1';
SELECT m.diminfo into dim_array from 
  user_sdo_geom_metadata m
  WHERE m.table_name = 'LRS_ROUTES' AND m.column_name = 'ROUTE_GEOMETRY';

-- "Convert" mile measures to kilometers (27 * 1.609 = 43.443).
SDO_LRS.REDEFINE_GEOM_SEGMENT (geom_segment, 
  dim_array,
   0,    -- Zero starting measure: LRS segment starts at start of route.
   43.443);  -- End of LRS segment. 27 miles = 43.443 kilometers.

-- Update and insert geometries into table, to display later.
UPDATE lrs_routes a SET a.route_geometry = geom_segment
   WHERE a.route_id = 1;

END;
/

PL/SQL procedure successfully completed.

-- Display the redefined segment, with all measures "converted."
SELECT a.route_geometry FROM lrs_routes a WHERE a.route_id = 1;

ROUTE_GEOMETRY(SDO_GTYPE, SDO_SRID, SDO_POINT(X, Y, Z), SDO_ELEM_INFO, SDO_ORDIN
--------------------------------------------------------------------------------
SDO_GEOMETRY(3302, NULL, NULL, SDO_ELEM_INFO_ARRAY(1, 2, 1), SDO_ORDINATE_ARRAY(
2, 2, 0, 2, 4, 3.218, 8, 4, 12.872, 12, 4, 19.308, 12, 10, 28.962, 8, 10, 35.398
, 5, 14, 43.443))
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" -->
<a id="CACHBEJJ"></a>
<div id="SPATL1173" class="refsect1">
<h2 class="refsect1"><a id="sthref2214"></a><a id="sthref2215"></a><a id="sthref2216"></a>SDO_LRS.RESET_MEASURE</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2217"></a>Format</p>
<p class="synopsis">SDO_LRS.RESET_MEASURE(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;geom_segment IN OUT SDO_GEOMETRY</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[, dim_array IN SDO_DIM_ARRAY]);</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2218"></a>Description</p>
<p>Sets all measures of a geometric segment, including the start and end measures, to null values, overriding any previously assigned measures.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2219"></a>Parameters</p>
<dl>
<dt>geom_segment</dt>
<dd>
<p>Cartographic representation of a linear feature.</p>
</dd>
<dt>dim_array</dt>
<dd>
<p>Dimensional information array corresponding to <code>geom_segment</code>, usually selected from one of the xxx_SDO_GEOM_METADATA views (described in <a href="sdo_objrelschema.htm#i1001937">Section 2.8</a>).</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2220"></a>Usage Notes</p>
<p>An exception is raised if <code>geom_segment</code> has an invalid geometry type or dimensionality.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2221"></a>Examples</p>
<p>The following example sets all measures of a geometric segment to null values. (This example uses the definitions from the example in <a href="sdo_lrs_concepts.htm#i885918">Section 7.7</a>.)</p>
<pre>
-- First, display the original segment; then, redefine.
SELECT a.route_geometry FROM lrs_routes a WHERE a.route_id = 1;

ROUTE_GEOMETRY(SDO_GTYPE, SDO_SRID, SDO_POINT(X, Y, Z), SDO_ELEM_INFO, SDO_ORDIN
--------------------------------------------------------------------------------
SDO_GEOMETRY(3302, NULL, NULL, SDO_ELEM_INFO_ARRAY(1, 2, 1), SDO_ORDINATE_ARRAY(
2, 2, 0, 2, 4, 2, 8, 4, 8, 12, 4, 12, 12, 10, 18, 8, 10, 22, 5, 14, 27))        
                                                                                
-- Reset geometric segment measures.
DECLARE
geom_segment SDO_GEOMETRY;

BEGIN

SELECT a.route_geometry into geom_segment FROM lrs_routes a
  WHERE a.route_name = 'Route1';

SDO_LRS.RESET_MEASURE (geom_segment);

-- Update and insert geometries into table, to display later.
UPDATE lrs_routes a SET a.route_geometry = geom_segment
   WHERE a.route_id = 1;

END;
/

PL/SQL procedure successfully completed.

-- Display the segment, with all measures set to null.
SELECT a.route_geometry FROM lrs_routes a WHERE a.route_id = 1;

ROUTE_GEOMETRY(SDO_GTYPE, SDO_SRID, SDO_POINT(X, Y, Z), SDO_ELEM_INFO, SDO_ORDIN
--------------------------------------------------------------------------------
SDO_GEOMETRY(3302, NULL, NULL, SDO_ELEM_INFO_ARRAY(1, 2, 1), SDO_ORDINATE_ARRAY(
2, 2, NULL, 2, 4, NULL, 8, 4, NULL, 12, 4, NULL, 12, 10, NULL, 8, 10, NULL, 5, 1
4, NULL))  
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" -->
<a id="i89756"></a>
<div id="SPATL1174" class="refsect1">
<h2 class="refsect1"><a id="sthref2222"></a><a id="sthref2223"></a>SDO_LRS.REVERSE_GEOMETRY</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2224"></a>Format</p>
<p class="synopsis">SDO_LRS.REVERSE_GEOMETRY(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;geom IN SDO_GEOMETRY</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[, dim_array IN SDO_DIM_ARRAY]</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) RETURN SDO_GEOMETRY;</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2225"></a>Description</p>
<p>Returns a new geometric segment by reversing the measure values and the direction of the original geometric segment.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2226"></a>Parameters</p>
<dl>
<dt>geom</dt>
<dd>
<p>Cartographic representation of a linear feature.</p>
</dd>
<dt>dim_array</dt>
<dd>
<p>Dimensional information array corresponding to <code>geom</code>, usually selected from one of the xxx_SDO_GEOM_METADATA views (described in <a href="sdo_objrelschema.htm#i1001937">Section 2.8</a>).</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2227"></a>Usage Notes</p>
<p>This function:</p>
<ul>
<li>
<p>Reverses the measure values of <code>geom</code></p>
<p>That is, the start measure of <code>geom</code> is the end measure of the returned geometric segment, the end measure of <code>geom</code> is the start measure of the returned geometric segment, and all other measures are adjusted accordingly.</p>
</li>
<li>
<p>Reverses the direction of <code>geom</code></p>
</li>
</ul>
<p>Compare this function with <a href="#i85148">SDO_LRS.REVERSE_MEASURE</a>, which reverses only the measure values (not the direction) of a geometric segment.</p>
<p>To reverse the vertices of a non-LRS line string geometry, use the <a href="sdo_util.htm#BJEEBBAG">SDO_UTIL.REVERSE_LINESTRING</a> function, which is described in <a href="sdo_util.htm#CEGCFDED">Chapter 32</a>.</p>
<p>An exception is raised if <code>geom</code> has an invalid geometry type or dimensionality. The geometry type must be a line or multiline, and the dimensionality must be 3 (two dimensions plus the measure dimension).</p>
<p>The <span class="italic">_3D</span> format of this function (SDO_LRS.REVERSE_GEOMETRY_3D) is available. For information about <span class="italic">_3D</span> formats of LRS functions, see <a href="sdo_lrs_concepts.htm#i890852">Section 7.4</a>.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2228"></a>Examples</p>
<p>The following example reverses the measure values and the direction of the geometric segment representing Route 1. (This example uses the definitions from the example in <a href="sdo_lrs_concepts.htm#i885918">Section 7.7</a>.)</p>
<pre>
-- Reverse direction and measures (for example, to prepare for
-- concatenating with another road).
-- First, display the original segment; then, reverse.
SELECT a.route_geometry FROM lrs_routes a WHERE a.route_id = 1;

ROUTE_GEOMETRY(SDO_GTYPE, SDO_SRID, SDO_POINT(X, Y, Z), SDO_ELEM_INFO, SDO_ORDIN
--------------------------------------------------------------------------------
SDO_GEOMETRY(3302, NULL, NULL, SDO_ELEM_INFO_ARRAY(1, 2, 1), SDO_ORDINATE_ARRAY(
2, 2, 0, 2, 4, 2, 8, 4, 8, 12, 4, 12, 12, 10, 18, 8, 10, 22, 5, 14, 27))        
                                                                                

SELECT  SDO_LRS.REVERSE_GEOMETRY(a.route_geometry, m.diminfo)
    FROM lrs_routes a, user_sdo_geom_metadata m
    WHERE m.table_name = 'LRS_ROUTES' AND m.column_name = 'ROUTE_GEOMETRY'
      AND a.route_id = 1;

SDO_LRS.REVERSE_GEOMETRY(A.ROUTE_GEOMETRY,M.DIMINFO)(SDO_GTYPE, SDO_SRID, SDO_PO
--------------------------------------------------------------------------------
SDO_GEOMETRY(3302, NULL, NULL, SDO_ELEM_INFO_ARRAY(1, 2, 1), SDO_ORDINATE_ARRAY(
5, 14, 27, 8, 10, 22, 12, 10, 18, 12, 4, 12, 8, 4, 8, 2, 4, 2, 2, 2, 0))
</pre>
<p>Note in the returned segment that the M values (measures) now go in descending order from 27 to 0, and the segment start and end points have the opposite X and Y values as in the original segment (5,14 and 2,2 here, as opposed to 2,2 and 5,14 in the original).</p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" -->
<a id="i85148"></a>
<div id="SPATL1175" class="refsect1">
<h2 class="refsect1"><a id="sthref2229"></a><a id="sthref2230"></a><a id="sthref2231"></a>SDO_LRS.REVERSE_MEASURE</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2232"></a>Format</p>
<p class="synopsis">SDO_LRS.REVERSE_MEASURE(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;geom_segment IN SDO_GEOMETRY</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[, dim_array IN SDO_DIM_ARRAY]</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) RETURN SDO_GEOMETRY;</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2233"></a>Description</p>
<p>Returns a new geometric segment by reversing the measure values, but not the direction, of the original geometric segment.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2234"></a>Parameters</p>
<dl>
<dt>geom_segment</dt>
<dd>
<p>Cartographic representation of a linear feature.</p>
</dd>
<dt>dim_array</dt>
<dd>
<p>Dimensional information array corresponding to <code>geom_segment</code>, usually selected from one of the xxx_SDO_GEOM_METADATA views (described in <a href="sdo_objrelschema.htm#i1001937">Section 2.8</a>).</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2235"></a>Usage Notes</p>
<p>This function:</p>
<ul>
<li>
<p>Reverses the measure values of <code>geom_segment</code></p>
<p>That is, the start measure of <code>geom_segment</code> is the end measure of the returned geometric segment, the end measure of <code>geom_segment</code> is the start measure of the returned geometric segment, and all other measures are adjusted accordingly.</p>
</li>
<li>
<p>Does not affect the direction of <code>geom_segment</code></p>
</li>
</ul>
<p>Compare this function with <a href="#i89756">SDO_LRS.REVERSE_GEOMETRY</a>, which reverses both the direction and the measure values of a geometric segment.</p>
<p>An exception is raised if <code>geom_segment</code> has an invalid geometry type or dimensionality.</p>
<p>The <span class="italic">_3D</span> format of this function (SDO_LRS.REVERSE_MEASURE_3D) is available. For information about <span class="italic">_3D</span> formats of LRS functions, see <a href="sdo_lrs_concepts.htm#i890852">Section 7.4</a>.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
The behavior of the SDO_LRS.REVERSE_MEASURE function changed after release 8.1.7. In release 8.1.7, REVERSE_MEASURE reversed both the measures and the segment direction. However, if you want to have this same behavior with subsequent releases, you must use the <a href="#i89756">SDO_LRS.REVERSE_GEOMETRY</a> function.</div>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2236"></a>Examples</p>
<p>The following example reverses the measure values of the geometric segment representing Route 1, but does not affect the direction. (This example uses the definitions from the example in <a href="sdo_lrs_concepts.htm#i885918">Section 7.7</a>.)</p>
<pre>
-- First, display the original segment; then, reverse.
SELECT a.route_geometry FROM lrs_routes a WHERE a.route_id = 1;

ROUTE_GEOMETRY(SDO_GTYPE, SDO_SRID, SDO_POINT(X, Y, Z), SDO_ELEM_INFO, SDO_ORDIN
--------------------------------------------------------------------------------
SDO_GEOMETRY(3302, NULL, NULL, SDO_ELEM_INFO_ARRAY(1, 2, 1), SDO_ORDINATE_ARRAY(
2, 2, 0, 2, 4, 2, 8, 4, 8, 12, 4, 12, 12, 10, 18, 8, 10, 22, 5, 14, 27))        
                                                                                

SELECT SDO_LRS.REVERSE_MEASURE(a.route_geometry, m.diminfo)
  FROM lrs_routes a, user_sdo_geom_metadata m
  WHERE m.table_name = 'LRS_ROUTES' AND m.column_name = 'ROUTE_GEOMETRY'
    AND a.route_id = 1;

SDO_LRS.REVERSE_MEASURE(A.ROUTE_GEOMETRY,M.DIMINFO)(SDO_GTYPE, SDO_SRID, SDO_POI
--------------------------------------------------------------------------------
SDO_GEOMETRY(3302, NULL, NULL, SDO_ELEM_INFO_ARRAY(1, 2, 1), SDO_ORDINATE_ARRAY(
2, 2, 27, 2, 4, 25, 8, 4, 19, 12, 4, 15, 12, 10, 9, 8, 10, 5, 5, 14, 0)) 
</pre>
<p>Note in the returned segment that the M values (measures) now go in descending order from 27 to 0, but the segment start and end points have the same X and Y values as in the original segment (2,2 and 5,14).</p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" -->
<a id="CACHCCGB"></a>
<div id="SPATL1176" class="refsect1">
<h2 class="refsect1"><a id="sthref2237"></a><a id="sthref2238"></a>SDO_LRS.SCALE_GEOM_SEGMENT</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2239"></a>Format</p>
<p class="synopsis">SDO_LRS.SCALE_GEOM_SEGMENT(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;geom_segment IN SDO_GEOMETRY,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;start_measure IN NUMBER,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end_measure IN NUMBER,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;shift_measure IN NUMBER,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tolerance IN NUMBER DEFAULT 1.0e-8</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) RETURN SDO_GEOMETRY;</p>
<p>or</p>
<p class="synopsis">SDO_LRS.SCALE_GEOM_SEGMENT(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;geom_segment IN SDO_GEOMETRY,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dim_array IN SDO_DIM_ARRAY,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;start_measure IN NUMBER,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end_measure IN NUMBER,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;shift_measure IN NUMBER,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) RETURN SDO_GEOMETRY;</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2240"></a>Description</p>
<p>Returns the geometry object resulting from a measure scaling operation on a geometric segment.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2241"></a>Parameters</p>
<dl>
<dt>geom_segment</dt>
<dd>
<p>Cartographic representation of a linear feature.</p>
</dd>
<dt>dim_array</dt>
<dd>
<p>Dimensional information array corresponding to <code>geom_segment</code>, usually selected from one of the xxx_SDO_GEOM_METADATA views (described in <a href="sdo_objrelschema.htm#i1001937">Section 2.8</a>).</p>
</dd>
<dt>start_measure</dt>
<dd>
<p>Start measure of the geometric segment.</p>
</dd>
<dt>end_measure</dt>
<dd>
<p>End measure of the geometric segment.</p>
</dd>
<dt>shift_measure</dt>
<dd>
<p>Amount to be added to each measure value after the initial scaling. A value of 0 (zero) means that nothing is added (no shifting of measure values).</p>
</dd>
<dt>tolerance</dt>
<dd>
<p>Tolerance value (see <a href="sdo_intro.htm#i884589">Section 1.5.5</a> and <a href="sdo_lrs_concepts.htm#CIHJBDGG">Section 7.6</a>). The default value is 0.00000001.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2242"></a>Usage Notes</p>
<p>This function performs the following actions:</p>
<ol>
<li>
<p>It redistributes the measure values of the LRS geometric segment, using between <code>start_measure</code> for the start point and <code>end_measure</code> for the end point, and adjusting (scaling) the measure values in between accordingly.</p>
</li>
<li>
<p>If <code>shift_measure</code> is not 0 (zero), it translates (shifts) each measure value computed in step 1 by adding the <code>shift_measure</code> value.</p>
</li>
</ol>
<p>The action of this function is sometimes referred to as "stretching" the measure values. The function affects only the measure values; the other coordinates of the geometry are not changed.</p>
<p>An exception is raised if <code>geom_segment</code>, <code>start_measure</code>, or <code>end_measure</code> is invalid.</p>
<p>The direction of the resulting geometric segment is preserved (that is, it reflects the original segment).</p>
<p>For more information about scaling geometric segments, see <a href="sdo_lrs_concepts.htm#i890044">Section 7.5.6</a>.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2243"></a>Examples</p>
<p>The following example scales the geometric segment representing Route 1, returning a segment in which the start measure is specified as100, the end measure is specified 200, with a shift measure value of 10. Consequently, after all measure values are scaled according to the start and end measure values, 10 is added to all measure values. Thus, for example, the start point measure is 110 and the end point measure is 210 in the returned geometry. (This example uses the definitions from the example in <a href="sdo_lrs_concepts.htm#i885918">Section 7.7</a>.)</p>
<pre>
SQL&gt; SELECT  SDO_LRS.SCALE_GEOM_SEGMENT(route_geometry, 100, 200, 10)
  FROM lrs_routes WHERE route_id = 1;
 
SDO_LRS.SCALE_GEOM_SEGMENT(ROUTE_GEOMETRY,100,200,10)(SDO_GTYPE, SDO_SRID, SDO_P
--------------------------------------------------------------------------------
SDO_GEOMETRY(3302, NULL, NULL, SDO_ELEM_INFO_ARRAY(1, 2, 1), SDO_ORDINATE_ARRAY(
2, 2, 110, 2, 4, 117.407407, 8, 4, 139.62963, 12, 4, 154.444444, 12, 10, 176.666
667, 8, 10, 191.481481, 5, 14, 210))
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" -->
<a id="CACECEFG"></a>
<div id="SPATL1177" class="refsect1">
<h2 class="refsect1"><a id="sthref2244"></a><a id="sthref2245"></a>SDO_LRS.SET_PT_MEASURE</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2246"></a>Format</p>
<p class="synopsis">SDO_LRS.SET_PT_MEASURE(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;geom_segment IN OUT SDO_GEOMETRY,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;point IN SDO_GEOMETRY,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;measure IN NUMBER) RETURN VARCHAR2;</p>
<p>or</p>
<p class="synopsis">SDO_LRS.SET_PT_MEASURE(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;geom_segment IN OUT SDO_GEOMETRY,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dim_array IN SDO_DIM_ARRAY,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;point IN SDO_GEOMETRY,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pt_dim_array IN SDO_DIM_ARRAY,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;measure IN NUMBER) RETURN VARCHAR2;</p>
<p>or</p>
<p class="synopsis">SDO_LRS.SET_PT_MEASURE(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;point IN OUT SDO_GEOMETRY,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;measure IN NUMBER) RETURN VARCHAR2;</p>
<p>or</p>
<p class="synopsis">SDO_LRS.SET_PT_MEASURE(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;point IN OUT SDO_GEOMETRY,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dim_array IN SDO_DIM_ARRAY,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;measure IN NUMBER) RETURN VARCHAR2;</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2247"></a>Description</p>
<p>Sets the measure value of a specified point.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2248"></a>Parameters</p>
<dl>
<dt>geom_segment</dt>
<dd>
<p>Geometric segment containing the point.</p>
</dd>
<dt>dim_array</dt>
<dd>
<p>Dimensional information array corresponding to <code>geom_segment</code> (in the second format) or <code>point</code> (in the fourth format), usually selected from one of the xxx_SDO_GEOM_METADATA views (described in <a href="sdo_objrelschema.htm#i1001937">Section 2.8</a>).</p>
</dd>
<dt>point</dt>
<dd>
<p>Point for which the measure value is to be set.</p>
</dd>
<dt>pt_dim_array</dt>
<dd>
<p>Dimensional information array corresponding to <code>point</code> (in the second format), usually selected from one of the xxx_SDO_GEOM_METADATA views (described in <a href="sdo_objrelschema.htm#i1001937">Section 2.8</a>).</p>
</dd>
<dt>measure</dt>
<dd>
<p>Measure value to be assigned to the specified point.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2249"></a>Usage Notes</p>
<p>The function returns TRUE if the measure value was successfully set, and FALSE if the measure value was not set.</p>
<p>If both <code>geom_segment</code> and <code>point</code> are specified, the behavior of the procedure depends on whether or not <code>point</code> is a shape point on <code>geom_segment</code>:</p>
<ul>
<li>
<p>If <code>point</code> is a shape point on <code>geom_segment</code>, the measure value of <code>point</code> is set.</p>
</li>
<li>
<p>If <code>point</code> is not a shape point on <code>geom_segment</code>, the shape point on <code>geom_segment</code> that is nearest to <code>point</code> is found, and the measure value of that shape point is set.</p>
</li>
</ul>
<p>The <span class="italic">_3D</span> format of this function (SDO_LRS.SET_PT_MEASURE_3D) is available; however, only the formats that include the <code>geom_segment</code> parameter are available for SDO_LRS.SET_PT_MEASURE_3D. For information about <span class="italic">_3D</span> formats of LRS functions, see <a href="sdo_lrs_concepts.htm#i890852">Section 7.4</a>.</p>
<p>An exception is raised if <code>geom_segment</code> or <code>point</code> is invalid.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2250"></a>Examples</p>
<p>The following example sets the measure value of point (8,10) to 20. (This example uses the definitions from the example in <a href="sdo_lrs_concepts.htm#i885918">Section 7.7</a>.)</p>
<pre>
-- Set the measure value of point 8,10 to 20 (originally 22).
DECLARE
geom_segment SDO_GEOMETRY;
dim_array SDO_DIM_ARRAY;
result VARCHAR2(32);

BEGIN

SELECT a.route_geometry into geom_segment FROM lrs_routes a
  WHERE a.route_name = 'Route1';
SELECT m.diminfo into dim_array from 
  user_sdo_geom_metadata m
  WHERE m.table_name = 'LRS_ROUTES' AND m.column_name = 'ROUTE_GEOMETRY';

-- Set the measure value of point 8,10 to 20 (originally 22).
result := SDO_LRS.SET_PT_MEASURE (geom_segment, 
  SDO_GEOMETRY(3301, NULL, NULL, 
     SDO_ELEM_INFO_ARRAY(1, 1, 1), 
     SDO_ORDINATE_ARRAY(8, 10, 22)),
  20);

-- Display the result.
DBMS_OUTPUT.PUT_LINE('Returned value = ' || result);

END;
/
Returned value = TRUE

PL/SQL procedure successfully completed.
                                                                                
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" -->
<a id="i80081"></a>
<div id="SPATL1178" class="refsect1">
<h2 class="refsect1"><a id="sthref2251"></a><a id="sthref2252"></a>SDO_LRS.SPLIT_GEOM_SEGMENT</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2253"></a>Format</p>
<p class="synopsis">SDO_LRS.SPLIT_GEOM_SEGMENT(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;geom_segment IN SDO_GEOMETRY,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;split_measure IN NUMBER,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;segment_1 OUT SDO_GEOMETRY,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;segment_2 OUT SDO_GEOMETRY);</p>
<p>or</p>
<p class="synopsis">SDO_LRS.SPLIT_GEOM_SEGMENT(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;geom_segment IN SDO_GEOMETRY,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dim_array IN SDO_DIM_ARRAY,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;split_measure IN NUMBER,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;segment_1 OUT SDO_GEOMETRY,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;segment_2 OUT SDO_GEOMETRY);</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2254"></a>Description</p>
<p>Splits a geometric segment into two geometric segments.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2255"></a>Parameters</p>
<dl>
<dt>geom_segment</dt>
<dd>
<p>Geometric segment to be split.</p>
</dd>
<dt>dim_array</dt>
<dd>
<p>Dimensional information array corresponding to <code>geom_segment</code>, usually selected from one of the xxx_SDO_GEOM_METADATA views (described in <a href="sdo_objrelschema.htm#i1001937">Section 2.8</a>).</p>
</dd>
<dt>split_measure</dt>
<dd>
<p>Distance measured from the start point of a geometric segment to the split point.</p>
</dd>
<dt>segment_1</dt>
<dd>
<p>First geometric segment: from the start point of <code>geom_segment</code> to the split point.</p>
</dd>
<dt>segment_2</dt>
<dd>
<p>Second geometric segment: from the split point to the end point of <code>geom_segment</code>.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2256"></a>Usage Notes</p>
<p>An exception is raised if <code>geom_segment</code> or <code>split_measure</code> is invalid.</p>
<p>The directions and measures of the resulting geometric segments are preserved.</p>
<p>The <span class="italic">_3D</span> format of this procedure (SDO_LRS.SPLIT_GEOM_SEGMENT_3D) is available. For information about <span class="italic">_3D</span> formats of LRS functions and procedures, see <a href="sdo_lrs_concepts.htm#i890852">Section 7.4</a>.</p>
<p>For more information about splitting a geometric segment, see <a href="sdo_lrs_concepts.htm#i890045">Section 7.5.4</a>.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2257"></a>Examples</p>
<p>The following example defines the geometric segment, splits it into two segments, then concatenates those segments. (This example uses the definitions from the example in <a href="sdo_lrs_concepts.htm#i885918">Section 7.7</a>. The definitions of <code>result_geom_1</code>, <code>result_geom_2</code>, and <code>result_geom_3</code> are displayed in <a href="sdo_lrs_concepts.htm#BABGFEHE">Example 7-3</a>.)</p>
<pre>
DECLARE
geom_segment SDO_GEOMETRY;
line_string SDO_GEOMETRY;
dim_array SDO_DIM_ARRAY;
result_geom_1 SDO_GEOMETRY;
result_geom_2 SDO_GEOMETRY;
result_geom_3 SDO_GEOMETRY;

BEGIN

SELECT a.route_geometry into geom_segment FROM lrs_routes a
  WHERE a.route_name = 'Route1';
SELECT m.diminfo into dim_array from 
  user_sdo_geom_metadata m
  WHERE m.table_name = 'LRS_ROUTES' AND m.column_name = 'ROUTE_GEOMETRY';

-- Define the LRS segment for Route1.
SDO_LRS.DEFINE_GEOM_SEGMENT (geom_segment, 
  dim_array,
  0,    -- Zero starting measure: LRS segment starts at start of route.
  27);  -- End of LRS segment is at measure 27.

SELECT a.route_geometry INTO line_string FROM lrs_routes a 
  WHERE a.route_name = 'Route1';

-- Split Route1 into two segments.
SDO_LRS.SPLIT_GEOM_SEGMENT(line_string,dim_array,5,result_geom_1,result_geom_2);

-- Concatenate the segments that were just split.
result_geom_3 := SDO_LRS.CONCATENATE_GEOM_SEGMENTS(result_geom_1, dim_array, result_geom_2, dim_array);

-- Insert geometries into table, to display later.
INSERT INTO lrs_routes VALUES(
  11,
  'result_geom_1',
  result_geom_1
);
INSERT INTO lrs_routes VALUES(
  12,
  'result_geom_2',
  result_geom_2
);
INSERT INTO lrs_routes VALUES(
  13,
  'result_geom_3',
  result_geom_3
);

END;
/
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" -->
<a id="i85156"></a>
<div id="SPATL1179" class="refsect1">
<h2 class="refsect1"><a id="sthref2258"></a><a id="sthref2259"></a>SDO_LRS.TRANSLATE_MEASURE</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2260"></a>Format</p>
<p class="synopsis">SDO_LRS.TRANSLATE_MEASURE(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;geom_segment IN SDO_GEOMETRY,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;translate_m IN NUMBER</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) RETURN SDO_GEOMETRY;</p>
<p>or</p>
<p class="synopsis">SDO_LRS.TRANSLATE_MEASURE(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;geom_segment IN SDO_GEOMETRY,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dim_array IN SDO_DIM_ARRAY,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;translate_m IN NUMBER</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) RETURN SDO_GEOMETRY;</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2261"></a>Description</p>
<p>Returns a new geometric segment by translating the original geometric segment (that is, shifting the start and end measures by a specified value).</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2262"></a>Parameters</p>
<dl>
<dt>geom_segment</dt>
<dd>
<p>Cartographic representation of a linear feature.</p>
</dd>
<dt>dim_array</dt>
<dd>
<p>Dimensional information array corresponding to <code>geom_segment</code>, usually selected from one of the xxx_SDO_GEOM_METADATA views (described in <a href="sdo_objrelschema.htm#i1001937">Section 2.8</a>).</p>
</dd>
<dt>translate_m</dt>
<dd>
<p>Distance measured from the start point of a geometric segment to the start point of the linear feature.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2263"></a>Usage Notes</p>
<p>This function adds <code>translate_m</code> to the start and end measures of <code>geom_segment</code>. For example, if <code>geom_segment</code> has a start measure of 50 and an end measure of 100, and if <code>translate_m</code> is 10, the returned geometric segment has a start measure of 60 and an end measure of 110, as shown in <a href="#i87856">Figure 25-1</a>.</p>
<div id="SPATL1180" class="figure">
<p class="titleinfigure"><a id="i87856"></a>Figure 25-1 Translating a Geometric Segment</p>
<img width="500" height="62" src="img/translate.gif" alt="Description of Figure 25-1 follows" /><br />
<a id="sthref2264" href="img_text/translate.htm">Description of "Figure 25-1 Translating a Geometric Segment"</a><br />
<br /></div>
<!-- class="figure" -->
<p>An exception is raised if <code>geom_segment</code> has an invalid geometry type or dimensionality.</p>
<p>The <span class="italic">_3D</span> format of this function (SDO_LRS.TRANSLATE_MEASURE_3D) is available. For information about <span class="italic">_3D</span> formats of LRS functions, see <a href="sdo_lrs_concepts.htm#i890852">Section 7.4</a>.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2265"></a>Examples</p>
<p>The following example translates (shifts) by 10 the geometric segment representing Route 1. (This example uses the definitions from the example in <a href="sdo_lrs_concepts.htm#i885918">Section 7.7</a>.)</p>
<pre>
SELECT SDO_LRS.TRANSLATE_MEASURE(a.route_geometry, m.diminfo, 10)
  FROM lrs_routes a, user_sdo_geom_metadata m
  WHERE m.table_name = 'LRS_ROUTES' AND m.column_name = 'ROUTE_GEOMETRY'
    AND a.route_id = 1;

SDO_LRS.TRANSLATE_MEASURE(A.ROUTE_GEOMETRY,M.DIMINFO,10)(SDO_GTYPE, SDO_SRID, SD
--------------------------------------------------------------------------------
SDO_GEOMETRY(3002, NULL, NULL, SDO_ELEM_INFO_ARRAY(1, 2, 1), SDO_ORDINATE_ARRAY(
2, 2, 10, 2, 4, 12, 8, 4, 18, 12, 4, 22, 12, 10, 28, 8, 10, 32, 5, 14, 37))
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" -->
<a id="i78247"></a>
<div id="SPATL1181" class="refsect1">
<h2 class="refsect1"><a id="sthref2266"></a><a id="sthref2267"></a>SDO_LRS.VALID_GEOM_SEGMENT</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2268"></a>Format</p>
<p class="synopsis">SDO_LRS.VALID_GEOM_SEGMENT(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;geom_segment IN SDO_GEOMETRY</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[, dim_array IN SDO_DIM_ARRAY]</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) RETURN VARCHAR2;</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2269"></a>Description</p>
<p>Checks if a geometry object is a valid geometric segment.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2270"></a>Parameters</p>
<dl>
<dt>geom_segment</dt>
<dd>
<p>Geometric segment to be checked for validity.</p>
</dd>
<dt>dim_array</dt>
<dd>
<p>Dimensional information array corresponding to <code>geom_segment</code>, usually selected from one of the xxx_SDO_GEOM_METADATA views (described in <a href="sdo_objrelschema.htm#i1001937">Section 2.8</a>).</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2271"></a>Usage Notes</p>
<p>This function returns TRUE if <code>geom_segment</code> is valid and FALSE if <code>geom_segment</code> is not valid.</p>
<p>Measure information is assumed to be stored in the last element of the SDO_DIM_ARRAY in the Oracle Spatial metadata.</p>
<p>This function only checks for geometry type and number of dimensions of the geometric segment. To further validate measure information, use the <a href="#CACEGBDC">SDO_LRS.IS_GEOM_SEGMENT_DEFINED</a> function.</p>
<p>The <span class="italic">_3D</span> format of this function (SDO_LRS.VALID_GEOM_SEGMENT_3D) is available. For information about <span class="italic">_3D</span> formats of LRS functions, see <a href="sdo_lrs_concepts.htm#i890852">Section 7.4</a>.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2272"></a>Examples</p>
<p>The following example checks if the geometric segment representing Route 1 is valid. (This example uses the definitions from the example in <a href="sdo_lrs_concepts.htm#i885918">Section 7.7</a>.)</p>
<pre>
SELECT  SDO_LRS.VALID_GEOM_SEGMENT(route_geometry)
  FROM lrs_routes WHERE route_id = 1;

SDO_LRS.VALID_GEOM_SEGMENT(ROUTE_GEOMETRY)                                      
--------------------------------------------------------------------------------
TRUE   
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" -->
<a id="i80120"></a>
<div id="SPATL1182" class="refsect1">
<h2 class="refsect1"><a id="sthref2273"></a><a id="sthref2274"></a>SDO_LRS.VALID_LRS_PT</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2275"></a>Format</p>
<p class="synopsis">SDO_LRS.VALID_LRS_PT(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;point IN SDO_GEOMETRY</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[, dim_array IN SDO_DIM_ARRAY]</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) RETURN VARCHAR2;</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2276"></a>Description</p>
<p>Checks if an LRS point is valid.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2277"></a>Parameters</p>
<dl>
<dt>point</dt>
<dd>
<p>Point to be checked for validity.</p>
</dd>
<dt>dim_array</dt>
<dd>
<p>Dimensional information array corresponding to <code>point</code>, usually selected from one of the xxx_SDO_GEOM_METADATA views (described in <a href="sdo_objrelschema.htm#i1001937">Section 2.8</a>).</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2278"></a>Usage Notes</p>
<p>This function returns TRUE if <code>point</code> is valid and FALSE if <code>point</code> is not valid.</p>
<p>This function checks if <code>point</code> is a point with measure information, and it checks for the geometry type and number of dimensions for the point geometry.</p>
<p>All LRS point data must be stored in the SDO_ELEM_INFO_ARRAY and SDO_ORDINATE_ARRAY, and cannot be stored in the SDO_POINT field in the SDO_GEOMETRY definition of the point.</p>
<p>The <span class="italic">_3D</span> format of this function (SDO_LRS.VALID_LRS_PT_3D) is available. For information about <span class="italic">_3D</span> formats of LRS functions, see <a href="sdo_lrs_concepts.htm#i890852">Section 7.4</a>.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2279"></a>Examples</p>
<p>The following example checks if point (9,3,NULL) is a valid LRS point. (This example uses the definitions from the example in <a href="sdo_lrs_concepts.htm#i885918">Section 7.7</a>.)</p>
<pre>
SELECT  SDO_LRS.VALID_LRS_PT(
    SDO_GEOMETRY(3301, NULL, NULL,
       SDO_ELEM_INFO_ARRAY(1, 1, 1),
       SDO_ORDINATE_ARRAY(9, 3, NULL)),
    m.diminfo)
    FROM lrs_routes a, user_sdo_geom_metadata m
    WHERE m.table_name = 'LRS_ROUTES' AND m.column_name = 'ROUTE_GEOMETRY'
      AND a.route_id = 1;

SDO_LRS.VALID_LRS_PT(SDO_GEOMETRY(3301,NULL,NULL,SDO_ELEM_INFO_ARRAY(1,1,1),SDO_
--------------------------------------------------------------------------------
TRUE
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" -->
<a id="i80130"></a>
<div id="SPATL1183" class="refsect1">
<h2 class="refsect1"><a id="sthref2280"></a><a id="sthref2281"></a>SDO_LRS.VALID_MEASURE</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2282"></a>Format</p>
<p class="synopsis">SDO_LRS.VALID_MEASURE(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;geom_segment IN SDO_GEOMETRY,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;measure IN NUMBER</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) RETURN VARCHAR2;</p>
<p>or</p>
<p class="synopsis">SDO_LRS.VALID_MEASURE(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;geom_segment IN SDO_GEOMETRY,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dim_array IN SDO_DIM_ARRAY,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;measure IN NUMBER</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) RETURN VARCHAR2;</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2283"></a>Description</p>
<p>Checks if a measure falls within the measure range of a geometric segment.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2284"></a>Parameters</p>
<dl>
<dt>geom_segment</dt>
<dd>
<p>Geometric segment to be checked to see if <code>measure</code> falls within its measure range.</p>
</dd>
<dt>dim_array</dt>
<dd>
<p>Dimensional information array corresponding to <code>geom_segment</code>, usually selected from one of the xxx_SDO_GEOM_METADATA views (described in <a href="sdo_objrelschema.htm#i1001937">Section 2.8</a>).</p>
</dd>
<dt>measure</dt>
<dd>
<p>Measure value to be checked to see if it falls within the measure range of <code>geom_segment</code>.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2285"></a>Usage Notes</p>
<p>This function returns TRUE if <code>measure</code> falls within the measure range of <code>geom_segment</code> and FALSE if <code>measure</code> does not fall within the measure range of <code>geom_segment</code>.</p>
<p>An exception is raised if <code>geom_segment</code> has an invalid geometry type or dimensionality.</p>
<p>The <span class="italic">_3D</span> format of this function (SDO_LRS.VALID_MEASURE_3D) is available. For information about <span class="italic">_3D</span> formats of LRS functions, see <a href="sdo_lrs_concepts.htm#i890852">Section 7.4</a>.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2286"></a>Examples</p>
<p>The following example checks if 50 is a valid measure on the Route 1 segment. The function returns FALSE because the measure range for that segment is 0 to 27. For example, if the route is 27 miles long with mile markers at 1-mile intervals, there is no 50-mile marker because the last marker is the 27-mile marker. (This example uses the definitions from the example in <a href="sdo_lrs_concepts.htm#i885918">Section 7.7</a>.)</p>
<pre>
SELECT  SDO_LRS.VALID_MEASURE(route_geometry, 50)
  FROM lrs_routes WHERE route_id = 1;

SDO_LRS.VALID_MEASURE(ROUTE_GEOMETRY,50)                                        
--------------------------------------------------------------------------------
FALSE
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" -->
<a id="CACEDFIG"></a>
<div id="SPATL1184" class="refsect1">
<h2 class="refsect1"><a id="sthref2287"></a><a id="sthref2288"></a>SDO_LRS.VALIDATE_LRS_GEOMETRY</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2289"></a>Format</p>
<p class="synopsis">SDO_LRS.VALIDATE_LRS_GEOMETRY(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;geom_segment IN SDO_GEOMETRY</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[, dim_array IN SDO_DIM_ARRAY]</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) RETURN VARCHAR2;</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2290"></a>Description</p>
<p>Checks if an LRS geometry is valid.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2291"></a>Parameters</p>
<dl>
<dt>geom_segment</dt>
<dd>
<p>Geometric segment to be checked.</p>
</dd>
<dt>dim_array</dt>
<dd>
<p>Dimensional information array corresponding to <code>geom_segment</code>, usually selected from one of the xxx_SDO_GEOM_METADATA views (described in <a href="sdo_objrelschema.htm#i1001937">Section 2.8</a>).</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2292"></a>Usage Notes</p>
<p>This function returns TRUE if <code>geom_segment</code> is valid and one of the following errors if <code>geom_segment</code> is not valid:</p>
<ul>
<li>
<p>ORA-13331 (invalid LRS segment)</p>
</li>
<li>
<p>ORA-13335 (measure information not defined)</p>
</li>
</ul>
<p>The <span class="italic">_3D</span> format of this function (SDO_LRS.VALIDATE_LRS_GEOMETRY_3D) is available. For information about <span class="italic">_3D</span> formats of LRS functions, see <a href="sdo_lrs_concepts.htm#i890852">Section 7.4</a>.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2293"></a>Examples</p>
<p>The following example checks if the Route 1 segment is a valid LRS geometry. (This example uses the definitions from the example in <a href="sdo_lrs_concepts.htm#i885918">Section 7.7</a>.)</p>
<pre>
SELECT SDO_LRS.VALIDATE_LRS_GEOMETRY(a.route_geometry, m.diminfo)
   FROM lrs_routes a, user_sdo_geom_metadata m
   WHERE m.table_name = 'LRS_ROUTES' AND m.column_name = 'ROUTE_GEOMETRY'
   AND a.route_id = 1;

SDO_LRS.VALIDATE_LRS_GEOMETRY(A.ROUTE_GEOMETRY,M.DIMINFO)                       
--------------------------------------------------------------------------------
TRUE
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" --></div>
<!-- class="refentry" --></div>
<!-- class="chapter" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment733">
<tr>
<td class="cellalignment742">
<table class="cellalignment738">
<tr>
<td class="cellalignment737"><a href="sdo_objgeom.htm"><img width="24" height="24" src="../../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment737"><a href="sdo_objmigr.htm"><img width="24" height="24" src="../../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;1999, 2013,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment744">
<table class="cellalignment736">
<tr>
<td class="cellalignment737"><a href="../../index.htm"><img width="24" height="24" src="../../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment737"><a href="../../nav/portal_booklist.htm"><img width="24" height="24" src="../../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment737"><a href="toc.htm"><img width="24" height="24" src="../../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment737"><a href="index.htm"><img width="24" height="24" src="../../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment737"><a href="../../nav/mindx.htm"><img width="24" height="24" src="../../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment737"><a href="../../dcommon/html/feedback.htm"><img width="24" height="24" src="../../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>
</body>
</html>
