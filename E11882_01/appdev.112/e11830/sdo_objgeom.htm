<!DOCTYPE html>
<html lang="en" >
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1">
<meta charset="utf-8">
<title>SDO_GEOM Package (Geometry)</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Version 5.1.2 Build 743" />
<meta name="description" content="Provides usage and reference information for indexing and storing spatial data and for developing spatial applications using Oracle Spatial and Graph and Oracle Locator." />
<meta name="dcterms.created" content="2013-11-26T3:11:47Z" />
<meta name="robots" content="all" />
<meta name="dcterms.title" content="Spatial Developer's Guide" />
<meta name="dcterms.identifier" content="E11830-15" />
<meta name="dcterms.isVersionOf" content="SPATL" />
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;1999, 2013,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved." />
<link rel="Start" href="../../index.htm" title="Home" type="text/html" />
<link rel="Copyright" href="../../dcommon/html/cpyr.htm" title="Copyright" type="text/html" />

<script type="application/javascript"  src="../../dcommon/js/headfoot.js"></script>
<script type="application/javascript"  src="../../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html" />
<link rel="Index" href="index.htm" title="Index" type="text/html" />
<link rel="Glossary" href="glossary.htm" title="Glossary" type="text/html" />
<link rel="Prev" href="sdo_geocode_ref.htm" title="Previous" type="text/html" />
<link rel="Next" href="sdo_lrs_ref.htm" title="Next" type="text/html" />
<link rel="alternate" href="../e11830.pdf" title="PDF version" type="application/pdf" />
<link rel="schema.dcterms" href="http://purl.org/dc/terms/" />
<link rel="stylesheet" href="../../dcommon/css/fusiondoc.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/header.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/footer.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/fonts.css">
<link rel="stylesheet" href="../../dcommon/css/foundation.css">
<link rel="stylesheet" href="../../dcommon/css/codemirror.css">
<link rel="stylesheet" type="text/css" title="Default" href="../../nav/css/html5.css">
<link rel="stylesheet" href="../../dcommon/css/respond-480-tablet.css">
<link rel="stylesheet" href="../../dcommon/css/respond-768-laptop.css">
<link rel="stylesheet" href="../../dcommon/css/respond-1140-deskop.css">
<script type="application/javascript" src="../../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">34/51</span> <!-- End Header -->
<div id="SPATL120" class="chapter"><a id="BGHCIGBI"></a> <a id="i865398"></a>
<h1 class="chapter"><span class="secnum">24</span> SDO_GEOM Package <a id="sthref1699"></a><a id="sthref1700"></a>(Geometry)</h1>
<p>This chapter contains descriptions of the geometry-related PL/SQL subprograms in the SDO_GEOM package, which can be grouped into the following categories:</p>
<ul>
<li>
<p>Relationship (True/False) between two objects: RELATE, WITHIN_DISTANCE</p>
</li>
<li>
<p>Validation: VALIDATE_GEOMETRY_WITH_CONTEXT, VALIDATE_LAYER_WITH_CONTEXT</p>
</li>
<li>
<p>Single-object operations: SDO_ALPHA_SHAPE, SDO_ARC_DENSIFY, SDO_AREA, SDO_BUFFER, SDO_CENTROID, SDO_CONVEXHULL, SDO_CONCAVEHULL, SDO_CONCAVEHULL_BOUNDARY, SDO_LENGTH, SDO_MAX_MBR_ORDINATE, SDO_MIN_MBR_ORDINATE, SDO_MBR, SDO_POINTONSURFACE, SDO_TRIANGULATE, SDO_VOLUME</p>
</li>
<li>
<p>Two-object operations: SDO_CLOSEST_POINTS, SDO_DISTANCE, SDO_DIFFERENCE, SDO_INTERSECTION, SDO_UNION, SDO_XOR</p>
</li>
</ul>
<p>The geometry subprograms are listed <a href="#BGHGDBED">Table 24-1</a>, and some usage information follows the table.</p>
<div id="SPATL1106" class="tblformal">
<p class="titleintable"><a id="sthref1701"></a><a id="BGHGDBED"></a>Table 24-1 Geometry Subprograms</p>
<table class="cellalignment740" title="Geometry Subprograms" summary="Geometry Subprograms" dir="ltr">
<thead>
<tr class="cellalignment734">
<th class="cellalignment741" id="r1c1-t2">Subprogram</th>
<th class="cellalignment741" id="r1c2-t2">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment734">
<td class="cellalignment742" id="r2c1-t2" headers="r1c1-t2">
<p><a href="#BGHCDIDG">SDO_GEOM.RELATE</a></p>
</td>
<td class="cellalignment742" headers="r2c1-t2 r1c2-t2">
<p>Determines how two objects interact.</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r3c1-t2" headers="r1c1-t2">
<p><a href="#CACDIECC">SDO_GEOM.SDO_ALPHA_SHAPE</a></p>
</td>
<td class="cellalignment742" headers="r3c1-t2 r1c2-t2">
<p>Returns the alpha shape geometry of the input geometry, based on a specified radius value.</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r4c1-t2" headers="r1c1-t2">
<p><a href="#i867686">SDO_GEOM.SDO_ARC_DENSIFY</a></p>
</td>
<td class="cellalignment742" headers="r4c1-t2 r1c2-t2">
<p>Changes each circular arc into an approximation consisting of straight lines, and each circle into a polygon consisting of a series of straight lines that approximate the circle.</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r5c1-t2" headers="r1c1-t2">
<p><a href="#i856247">SDO_GEOM.SDO_AREA</a></p>
</td>
<td class="cellalignment742" headers="r5c1-t2 r1c2-t2">
<p>Computes the area of a two-dimensional polygon.</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r6c1-t2" headers="r1c1-t2">
<p><a href="#i856140">SDO_GEOM.SDO_BUFFER</a></p>
</td>
<td class="cellalignment742" headers="r6c1-t2 r1c2-t2">
<p>Generates a buffer polygon around or inside a geometry.</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r7c1-t2" headers="r1c1-t2">
<p><a href="#i860848">SDO_GEOM.SDO_CENTROID</a></p>
</td>
<td class="cellalignment742" headers="r7c1-t2 r1c2-t2">
<p>Returns the centroid of a polygon.</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r8c1-t2" headers="r1c1-t2">
<p><a href="#CACGDHGE">SDO_GEOM.SDO_CLOSEST_POINTS</a></p>
</td>
<td class="cellalignment742" headers="r8c1-t2 r1c2-t2">
<p>Computes the minimum distance between two geometries and the points (one on each geometry) that are the minimum distance apart.</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r9c1-t2" headers="r1c1-t2">
<p><a href="#CACDAEEA">SDO_GEOM.SDO_CONCAVEHULL</a></p>
</td>
<td class="cellalignment742" headers="r9c1-t2 r1c2-t2">
<p>Returns a polygon-type object that represents the concave hull of a geometry object.</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r10c1-t2" headers="r1c1-t2">
<p><a href="#CACIFBIE">SDO_GEOM.SDO_CONCAVEHULL_BOUNDARY</a></p>
</td>
<td class="cellalignment742" headers="r10c1-t2 r1c2-t2">
<p>Returns a polygon-type object that represents the concave hull of a geometry object, based on boundary points rather than the alpha shape.</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r11c1-t2" headers="r1c1-t2">
<p><a href="#i857920">SDO_GEOM.SDO_CONVEXHULL</a></p>
</td>
<td class="cellalignment742" headers="r11c1-t2 r1c2-t2">
<p>Returns a polygon-type object that represents the convex hull of a geometry object.</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r12c1-t2" headers="r1c1-t2">
<p><a href="#i857512">SDO_GEOM.SDO_DIFFERENCE</a></p>
</td>
<td class="cellalignment742" headers="r12c1-t2 r1c2-t2">
<p>Returns a geometry object that is the topological difference (MINUS operation) of two geometry objects.</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r13c1-t2" headers="r1c1-t2">
<p><a href="#i857957">SDO_GEOM.SDO_DISTANCE</a></p>
</td>
<td class="cellalignment742" headers="r13c1-t2 r1c2-t2">
<p>Computes the distance between two geometry objects.</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r14c1-t2" headers="r1c1-t2">
<p><a href="#i857570">SDO_GEOM.SDO_INTERSECTION</a></p>
</td>
<td class="cellalignment742" headers="r14c1-t2 r1c2-t2">
<p>Returns a geometry object that is the topological intersection (AND operation) of two geometry objects.</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r15c1-t2" headers="r1c1-t2">
<p><a href="#i856257">SDO_GEOM.SDO_LENGTH</a></p>
</td>
<td class="cellalignment742" headers="r15c1-t2 r1c2-t2">
<p>Computes the length or perimeter of a geometry.</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r16c1-t2" headers="r1c1-t2">
<p><a href="#i866249">SDO_GEOM.SDO_MAX_MBR_ORDINATE</a></p>
</td>
<td class="cellalignment742" headers="r16c1-t2 r1c2-t2">
<p>Returns the maximum value for the specified ordinate (dimension) of the minimum bounding rectangle of a geometry object.</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r17c1-t2" headers="r1c1-t2">
<p><a href="#i866042">SDO_GEOM.SDO_MBR</a></p>
</td>
<td class="cellalignment742" headers="r17c1-t2 r1c2-t2">
<p>Returns the minimum bounding rectangle of a geometry.</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r18c1-t2" headers="r1c1-t2">
<p><a href="#i866250">SDO_GEOM.SDO_MIN_MBR_ORDINATE</a></p>
</td>
<td class="cellalignment742" headers="r18c1-t2 r1c2-t2">
<p>Returns the minimum value for the specified ordinate (dimension) of the minimum bounding rectangle of a geometry object.</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r19c1-t2" headers="r1c1-t2">
<p><a href="#i860858">SDO_GEOM.SDO_POINTONSURFACE</a></p>
</td>
<td class="cellalignment742" headers="r19c1-t2 r1c2-t2">
<p>Returns a point that is guaranteed to be on the surface of a polygon.</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r20c1-t2" headers="r1c1-t2">
<p><a href="#CACBGJEB">SDO_GEOM.SDO_TRIANGULATE</a></p>
</td>
<td class="cellalignment742" headers="r20c1-t2 r1c2-t2">
<p>Returns a collection of triangles resulting from Delaunay triangulation of the input geometry.</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r21c1-t2" headers="r1c1-t2">
<p><a href="#i857624">SDO_GEOM.SDO_UNION</a></p>
</td>
<td class="cellalignment742" headers="r21c1-t2 r1c2-t2">
<p>Returns a geometry object that is the topological union (OR operation) of two geometry objects.</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r22c1-t2" headers="r1c1-t2">
<p><a href="#CACHCHEH">SDO_GEOM.SDO_VOLUME</a></p>
</td>
<td class="cellalignment742" headers="r22c1-t2 r1c2-t2">
<p>Computes the volume of a three-dimensional solid geometry.</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r23c1-t2" headers="r1c1-t2">
<p><a href="#i857842">SDO_GEOM.SDO_XOR</a></p>
</td>
<td class="cellalignment742" headers="r23c1-t2 r1c2-t2">
<p>Returns a geometry object that is the topological symmetric difference (XOR operation) of two geometry objects.</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r24c1-t2" headers="r1c1-t2">
<p><a href="#BGHFDDBF">SDO_GEOM.VALIDATE_GEOMETRY_WITH_CONTEXT</a></p>
</td>
<td class="cellalignment742" headers="r24c1-t2 r1c2-t2">
<p>Determines if a geometry is valid, and returns context information if the geometry is invalid.</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r25c1-t2" headers="r1c1-t2">
<p><a href="#BGHIAAIF">SDO_GEOM.VALIDATE_LAYER_WITH_CONTEXT</a></p>
</td>
<td class="cellalignment742" headers="r25c1-t2 r1c2-t2">
<p>Determines if all geometries stored in a column are valid, and returns context information about any invalid geometries.</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r26c1-t2" headers="r1c1-t2">
<p><a href="#i856373">SDO_GEOM.WITHIN_DISTANCE</a></p>
</td>
<td class="cellalignment742" headers="r26c1-t2 r1c2-t2">
<p>Determines if two geometries are within a specified distance from one another.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<p>The following usage information applies to the geometry subprograms. (See also the Usage Notes under the reference information for each subprogram.)</p>
<ul>
<li>
<p>Certain combinations of input parameters and operations can return a null value, that is, an empty geometry. For example, requesting the intersection of two disjoint geometry objects returns a null value.</p>
</li>
<li>
<p>A null value (empty geometry) as an input parameter to a geometry function (for example, <a href="#BGHCDIDG">SDO_GEOM.RELATE</a>) produces an error.</p>
</li>
<li>
<p>Certain operations can return a geometry of a different type than one or both input geometries. For example, the intersection of a line and an overlapping polygon returns a line; the intersection of two lines returns a point; and the intersection of two tangent polygons returns a line.</p>
</li>
<li>
<p>SDO_GEOM subprograms are supported for two-dimensional geometries only, except for the following, which are supported for both two-dimensional and three-dimensional geometries:</p>
<ul>
<li>
<p><a href="#BGHCDIDG">SDO_GEOM.RELATE</a> with (A) the ANYINTERACT mask, or (B) the INSIDE mask (3D support for solid geometries only)</p>
</li>
<li>
<p><a href="#i856247">SDO_GEOM.SDO_AREA</a></p>
</li>
<li>
<p><a href="#i857957">SDO_GEOM.SDO_DISTANCE</a></p>
</li>
<li>
<p><a href="#i856257">SDO_GEOM.SDO_LENGTH</a></p>
</li>
<li>
<p><a href="#i866249">SDO_GEOM.SDO_MAX_MBR_ORDINATE</a></p>
</li>
<li>
<p><a href="#i866042">SDO_GEOM.SDO_MBR</a></p>
</li>
<li>
<p><a href="#i866250">SDO_GEOM.SDO_MIN_MBR_ORDINATE</a></p>
</li>
<li>
<p><a href="#CACHCHEH">SDO_GEOM.SDO_VOLUME</a></p>
</li>
<li>
<p><a href="#BGHFDDBF">SDO_GEOM.VALIDATE_GEOMETRY_WITH_CONTEXT</a></p>
</li>
<li>
<p><a href="#BGHIAAIF">SDO_GEOM.VALIDATE_LAYER_WITH_CONTEXT</a></p>
</li>
<li>
<p><a href="#i856373">SDO_GEOM.WITHIN_DISTANCE</a></p>
</li>
</ul>
</li>
</ul>
<div class="refentry"><a id="BGHCDIDG"></a>
<div id="SPATL1107" class="refsect1">
<h2 class="refsect1">SDO_GEOM.<a id="sthref1702"></a><a id="sthref1703"></a>RELATE</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1704"></a>Format</p>
<p class="synopsis">SDO_GEOM.RELATE(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;geom1 IN SDO_GEOMETRY,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dim1 IN SDO_DIM_ARRAY,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mask IN VARCHAR2,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;geom2 IN SDO_GEOMETRY,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dim2 IN SDO_DIM_ARRAY</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) RETURN VARCHAR2;</p>
<p>or</p>
<p class="synopsis">SDO_GEOM.RELATE(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;geom1 IN SDO_GEOMETRY,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mask IN VARCHAR2,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;geom2 IN SDO_GEOMETRY,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tol IN NUMBER</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) RETURN VARCHAR2;</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1705"></a>Description</p>
<p>Examines two geometry objects to determine their spatial relationship.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1706"></a>Parameters</p>
<dl>
<dt>geom1</dt>
<dd>
<p>Geometry object.</p>
</dd>
<dt>dim1</dt>
<dd>
<p>Dimensional information array corresponding to <code>geom1</code>, usually selected from one of the xxx_SDO_GEOM_METADATA views (described in <a href="sdo_objrelschema.htm#i1001937">Section 2.8</a>).</p>
</dd>
<dt>mask</dt>
<dd>
<p>Specifies a list of relationships to check. See the list of keywords in the Usage Notes.</p>
</dd>
<dt>geom2</dt>
<dd>
<p>Geometry object.</p>
</dd>
<dt>dim2</dt>
<dd>
<p>Dimensional information array corresponding to <code>geom2</code>, usually selected from one of the xxx_SDO_GEOM_METADATA views (described in <a href="sdo_objrelschema.htm#i1001937">Section 2.8</a>).</p>
</dd>
<dt>tol</dt>
<dd>
<p>Tolerance value (see <a href="sdo_intro.htm#i884589">Section 1.5.5</a>).</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1707"></a>Usage Notes</p>
<p>For better performance, use the <a href="sdo_operat.htm#i78531">SDO_RELATE</a> operator or one of its convenience operator formats (all described in <a href="sdo_operat.htm#g1001037">Chapter 19</a>) instead of the <code>SDO_GEOM.RELATE</code> function, unless you need to use the function. For example, the DETERMINE mask keyword does not apply with the <a href="sdo_operat.htm#i78531">SDO_RELATE</a> operator. For more information about performance considerations with operators and functions, see <a href="sdo_intro.htm#BAJDEGDH">Section 1.9</a>.</p>
<p>The <code>SDO_GEOM.RELATE</code> function can return the following types of answers:</p>
<ul>
<li>
<p>If you pass a <code>mask</code> listing one or more relationships, the function returns the specified <code>mask</code> value if one or more of the relationships are true for the pair of geometries. If all relationships are false, the procedure returns FALSE.</p>
</li>
<li>
<p>If you pass the DETERMINE keyword in <code>mask</code>, the function returns the one relationship keyword that best matches the geometries.</p>
</li>
<li>
<p>If you pass the ANYINTERACT keyword in <code>mask</code>, the function returns TRUE if the two geometries are not disjoint.</p>
</li>
</ul>
<p>The following <code>mask</code> relationships can be tested:</p>
<ul>
<li>
<p>ANYINTERACT: Returns TRUE if the objects are not disjoint.</p>
</li>
<li>
<p>CONTAINS: Returns CONTAINS if the second object is entirely within the first object and the object boundaries do not touch; otherwise, returns FALSE.</p>
</li>
<li>
<p>COVEREDBY: Returns COVEREDBY if the first object is entirely within the second object and the object boundaries touch at one or more points; otherwise, returns FALSE.</p>
</li>
<li>
<p>COVERS: Returns COVERS if the second object is entirely within the first object and the boundaries touch in one or more places; otherwise, returns FALSE.</p>
</li>
<li>
<p>DISJOINT: Returns DISJOINT if the objects have no common boundary or interior points; otherwise, returns FALSE.</p>
</li>
<li>
<p>EQUAL: Returns EQUAL if the objects share every point of their boundaries and interior, including any holes in the objects; otherwise, returns FALSE.</p>
</li>
<li>
<p>INSIDE: Returns INSIDE if the first object is entirely within the second object and the object boundaries do not touch; otherwise, returns FALSE.</p>
</li>
<li>
<p>ON: Returns ON if the boundary and interior of a line (the first object) is completely on the boundary of a polygon (the second object); otherwise, returns FALSE.</p>
</li>
<li>
<p>OVERLAPBDYDISJOINT: Returns OVERLAPBDYDISJOINT if the objects overlap, but their boundaries do not interact; otherwise, returns FALSE.</p>
</li>
<li>
<p>OVERLAPBDYINTERSECT: Returns OVERLAPBDYINTERSECT if the objects overlap, and their boundaries intersect in one or more places; otherwise, returns FALSE.</p>
</li>
<li>
<p>TOUCH: Returns TOUCH if the two objects share a common boundary point, but no interior points; otherwise, returns FALSE.</p>
</li>
</ul>
<p>Values for <code>mask</code> can be combined using the logical Boolean operator OR. For example, 'INSIDE + TOUCH' returns <code>INSIDE+TOUCH</code> if the relationship between the geometries is INSIDE or TOUCH or both INSIDE and TOUCH; it returns <code>FALSE</code> if the relationship between the geometries is neither INSIDE nor TOUCH.</p>
<p>An exception is raised if <code>geom1</code> and <code>geom2</code> are based on different coordinate systems.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1708"></a>Examples</p>
<p>The following example finds the relationship between each geometry in the SHAPE column and the <code>cola_b</code> geometry. (The example uses the definitions and data from <a href="sdo_objrelschema.htm#i1004750">Section 2.1</a>. The output is reformatted for readability.)</p>
<pre>
SELECT c.name,
  SDO_GEOM.RELATE(c.shape, 'determine', c_b.shape, 0.005) relationship 
  FROM cola_markets c, cola_markets c_b WHERE c_b.name = 'cola_b';

NAME     RELATIONSHIP 
---------------------------                                  cola_a   TOUCH
cola_b   EQUAL
cola_c   OVERLAPBDYINTERSECT
cola_d   DISJOINT 
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1709"></a>Related Topics</p>
<ul>
<li>
<p><a href="sdo_operat.htm#i78531">SDO_RELATE</a> operator</p>
</li>
</ul>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" -->
<a id="CACDIECC"></a>
<div id="SPATL1418" class="refsect1">
<h2 class="refsect1">SDO_GEOM.<a id="sthref1710"></a><a id="sthref1711"></a><a id="sthref1712"></a>SDO_ALPHA_SHAPE</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1713"></a>Format</p>
<p class="synopsis">SDO_GEOM.SDO_ALPHA_SHAPE(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;geom IN SDO_GEOMETRY,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tol IN NUMBER,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;radius IN NUMBER DEFALT NULL,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;flag IN BINARY_INTEGER DEFAULT 0</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) RETURN SDO_GEOMETRY;</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1714"></a>Description</p>
<p>Returns the alpha shape geometry of the input geometry, based on a specified radius value.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1715"></a>Parameters</p>
<dl>
<dt>geom</dt>
<dd>
<p>Geometry object.</p>
</dd>
<dt>tol</dt>
<dd>
<p>Tolerance value (see <a href="sdo_intro.htm#i884589">Section 1.5.5</a>).</p>
</dd>
<dt>radius</dt>
<dd>
<p>Radius to be used in calculating the alpha shape. If this parameter is null, the alpha shape is the convex hull of the input geometry.</p>
</dd>
<dt>flag</dt>
<dd>
<p>Determines whether isolated points and edges are included: <code>0</code> (the default) includes isolated points and edges, so that the alpha shape is returned; <code>1</code> does not include isolated points and edges, so that only the polygon portion of the alpha shape is returned.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1716"></a>Usage Notes</p>
<p>The <span class="bold">alpha shape</span> is a generalization of the convex hull (see <code><a href="http://biogeometry.duke.edu/software/alphashapes/">http://biogeometry.duke.edu/software/alphashapes/</a></code>). This function takes all coordinates from the input geometry, uses them to compute Delaunay triangulations and the alpha shape.</p>
<p>If you specify a value for the <code>radius</code> parameter, you may first want to call the <a href="#CACDAEEA">SDO_GEOM.SDO_CONCAVEHULL</a> function using the format with the <code>radius</code> output parameter.</p>
<p>An exception is raised if <code>geom</code> is of point type, has fewer than three points or vertices, or consists of multiple points all in a straight line, or if <code>radius</code> is less than 0.</p>
<p>With geodetic data, this function is supported by approximations, as explained in <a href="sdo_cs_concepts.htm#i894707">Section 6.10.3</a>.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1717"></a>Examples</p>
<p>The following example returns a geometry object that is the alpha shape of <code>cola_c</code>, which is also the convex hull of <code>cola_c</code> because the default value for the <code>radius</code> parameter (null) is used. (This simplified example uses a polygon as the input geometry; this function is normally used with a large set of point data. The example uses the definitions and data from <a href="sdo_objrelschema.htm#i1004750">Section 2.1</a>.)</p>
<pre>
SELECT c.name, SDO_GEOM.SDO_ALPHA_SHAPE(c.shape, 0.005)
  FROM cola_markets c WHERE c.name = 'cola_c';
 
SDO_GEOM.SDO_ALPHA_SHAPE(C.SHAPE,0.005)(SDO_GTYPE, SDO_SRID, SDO_POINT(X, Y, Z),
--------------------------------------------------------------------------------
cola_c                                                                          
SDO_GEOMETRY(2003, NULL, NULL, SDO_ELEM_INFO_ARRAY(1, 1003, 1), SDO_ORDINATE_ARR
AY(4, 5, 3, 3, 6, 3, 6, 5, 4, 5))
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1718"></a>Related Topics</p>
<p><a href="#CACDAEEA">SDO_GEOM.SDO_CONCAVEHULL</a></p>
<p><a href="#i857920">SDO_GEOM.SDO_CONVEXHULL</a></p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" -->
<a id="i867686"></a>
<div id="SPATL1108" class="refsect1">
<h2 class="refsect1">SDO_GEOM.<a id="sthref1719"></a><a id="sthref1720"></a><a id="sthref1721"></a><a id="sthref1722"></a>SDO_ARC_DENSIFY</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1723"></a>Format</p>
<p class="synopsis">SDO_GEOM.SDO_ARC_DENSIFY(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;geom IN SDO_GEOMETRY,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dim IN SDO_DIM_ARRAY</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;params IN VARCHAR2</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) RETURN SDO_GEOMETRY;</p>
<p>or</p>
<p class="synopsis">SDO_GEOM.SDO_ARC_DENSIFY(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;geom IN SDO_GEOMETRY,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tol IN NUMBER</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;params IN VARCHAR2</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) RETURN SDO_GEOMETRY;</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1724"></a>Description</p>
<p>Returns a geometry in which each circular arc in the input geometry is changed into an approximation of the circular arc consisting of straight lines, and each circle is changed into a polygon consisting of a series of straight lines that approximate the circle.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1725"></a>Parameters</p>
<dl>
<dt>geom</dt>
<dd>
<p>Geometry object.</p>
</dd>
<dt>dim</dt>
<dd>
<p>Dimensional information array corresponding to <code>geom</code>, usually selected from one of the xxx_SDO_GEOM_METADATA views (described in <a href="sdo_objrelschema.htm#i1001937">Section 2.8</a>).</p>
</dd>
<dt>tol</dt>
<dd>
<p>Tolerance value (see <a href="sdo_intro.htm#i884589">Section 1.5.5</a>).</p>
</dd>
<dt>params</dt>
<dd>
<p>A quoted string containing an arc tolerance value and optionally a unit value. See the Usage Notes for an explanation of the format and meaning.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1726"></a>Usage Notes</p>
<p>If you have geometries in a projected coordinate system that contain circles or circular arcs, you can use this function to densify them into regular polygons. You can then use the resulting straight-line polygon geometries for any Spatial operations, or you can transform them to any projected or geodetic coordinate system.</p>
<p>The <code>params</code> parameter is a quoted string that can contain the <code>arc_tolerance</code> keyword, as well as the <code>unit</code> keyword to identify the unit of measurement associated with the <code>arc_tolerance</code> value. For example:</p>
<pre>
'arc_tolerance=0.05 unit=km'
</pre>
<p>The <code>arc_tolerance</code> keyword specifies, for each arc in the geometry, the maximum length of the perpendicular line between the surface of the arc and the straight line between the start and end points of the arc. <a href="#i867636">Figure 24-1</a> shows a line whose length is the <code>arc_tolerance</code> value for the arc between points A and B.</p>
<div id="SPATL1109" class="figure">
<p class="titleinfigure"><a id="i867636"></a>Figure 24-1 Arc Tolerance</p>
<img width="334" height="48" src="img/arc_tolerance.gif" alt="Description of Figure 24-1 follows" /><br />
<a id="sthref1727" href="img_text/arc_tolerance.htm">Description of "Figure 24-1 Arc Tolerance"</a><br />
<br /></div>
<!-- class="figure" -->
<p>The <code>arc_tolerance</code> keyword value must be greater than the tolerance value associated with the geometry. (The default value for <code>arc_tolerance</code> is 20 times the tolerance value.) As you increase the <code>arc_tolerance</code> keyword value, the resulting polygon has fewer sides and a smaller area; as you decrease the <code>arc_tolerance</code> keyword value, the resulting polygon has more sides and a larger area (but never larger than the original geometry).</p>
<p>If the <code>unit</code> keyword is specified, the value must be an SDO_UNIT value from the MDSYS.SDO_DIST_UNITS table (for example, 'unit=KM'). If the <code>unit</code> keyword is not specified, the unit of measurement associated with the geometry is used. See <a href="sdo_objrelschema.htm#i1010145">Section 2.10</a> for more information about unit of measurement specification.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1728"></a>Examples</p>
<p>The following example returns the geometry that results from the arc densification of <code>cola_d</code>, which is a circle. (The example uses the definitions and data from <a href="sdo_objrelschema.htm#i1004750">Section 2.1</a>.)</p>
<pre>
-- Arc densification of the circle cola_d
SELECT c.name, SDO_GEOM.SDO_ARC_DENSIFY(c.shape, m.diminfo, 
                                       'arc_tolerance=0.05') 
  FROM cola_markets c, user_sdo_geom_metadata m 
  WHERE m.table_name = 'COLA_MARKETS' AND m.column_name = 'SHAPE' 
  AND c.name = 'cola_d';

NAME
--------------------------------
SDO_GEOM.SDO_ARC_DENSIFY(C.SHAPE,M.DIMINFO,'ARC_TOLERANCE=0.05')(SDO_GTYPE, SDO_
--------------------------------------------------------------------------------
cola_d
SDO_GEOMETRY(2003, NULL, NULL, SDO_ELEM_INFO_ARRAY(1, 1003, 1), SDO_ORDINATE_ARR
AY(8, 7, 8.76536686, 7.15224093, 9.41421356, 7.58578644, 9.84775907, 8.23463314,
 10, 9, 9.84775907, 9.76536686, 9.41421356, 10.4142136, 8.76536686, 10.8477591,
8, 11, 7.23463314, 10.8477591, 6.58578644, 10.4142136, 6.15224093, 9.76536686, 6
, 9, 6.15224093, 8.23463314, 6.58578644, 7.58578644, 7.23463314, 7.15224093, 8,
7))
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1729"></a>Related Topics</p>
<ul>
<li>
<p><a href="sdo_cs_concepts.htm#i895077">Section 6.2.5, "Other Considerations and Requirements with Geodetic Data"</a></p>
</li>
</ul>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" -->
<a id="i856247"></a>
<div id="SPATL1110" class="refsect1">
<h2 class="refsect1">SDO_GEOM.<a id="sthref1730"></a><a id="sthref1731"></a><a id="sthref1732"></a><a id="sthref1733"></a>SDO_AREA</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1734"></a>Format</p>
<p class="synopsis">SDO_GEOM.SDO_AREA(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;geom IN SDO_GEOMETRY,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dim IN SDO_DIM_ARRAY</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[, unit IN VARCHAR2]</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) RETURN NUMBER;</p>
<p>or</p>
<p class="synopsis">SDO_GEOM.SDO_AREA(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;geom IN SDO_GEOMETRY,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tol IN NUMBER</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[, unit IN VARCHAR2]</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) RETURN NUMBER;</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1735"></a>Description</p>
<p>Returns the area of a two-dimensional polygon.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1736"></a>Parameters</p>
<dl>
<dt>geom</dt>
<dd>
<p>Geometry object.</p>
</dd>
<dt>dim</dt>
<dd>
<p>Dimensional information array corresponding to <code>geom</code>, usually selected from one of the xxx_SDO_GEOM_METADATA views (described in <a href="sdo_objrelschema.htm#i1001937">Section 2.8</a>).</p>
</dd>
<dt>unit</dt>
<dd>
<p>Unit of measurement: a quoted string with <code>unit=</code> and an SDO_UNIT value from the MDSYS.SDO_AREA_UNITS table (for example, 'unit=SQ_KM'). See <a href="sdo_objrelschema.htm#i1010145">Section 2.10</a> for more information about unit of measurement specification.</p>
<p>If this parameter is not specified, the unit of measurement associated with the data is assumed. For geodetic data, the default unit of measurement is square meters.</p>
</dd>
<dt>tol</dt>
<dd>
<p>Tolerance value (see <a href="sdo_intro.htm#i884589">Section 1.5.5</a>).</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1737"></a>Usage Notes</p>
<p>This function works with any polygon, including polygons with holes.</p>
<p>Lines that close to form a ring have no area.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1738"></a>Examples</p>
<p>The following example returns the areas of geometry objects stored in the COLA_MARKETS table. The first statement returns the areas of all objects; the second returns just the area of <code>cola_a</code>. (The example uses the definitions and data from <a href="sdo_objrelschema.htm#i1004750">Section 2.1</a>.)</p>
<pre>
-- Return the areas of all cola markets.
SELECT name, SDO_GEOM.SDO_AREA(shape, 0.005) FROM cola_markets;

NAME                             SDO_GEOM.SDO_AREA(SHAPE,0.005)
-------------------------------- ------------------------------
cola_a                                                       24
cola_b                                                     16.5
cola_c                                                        5
cola_d                                               12.5663706

-- Return the area of just cola_a.
SELECT c.name, SDO_GEOM.SDO_AREA(c.shape, 0.005) FROM cola_markets c 
   WHERE c.name = 'cola_a';

NAME                             SDO_GEOM.SDO_AREA(C.SHAPE,0.005)
-------------------------------- --------------------------------
cola_a                                                         24
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1739"></a>Related Topics</p>
<p>None.</p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" -->
<a id="i856140"></a>
<div id="SPATL1111" class="refsect1">
<h2 class="refsect1">SDO_GEOM.<a id="sthref1740"></a><a id="sthref1741"></a><a id="sthref1742"></a>SDO_BUFFER</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1743"></a>Format</p>
<p class="synopsis">SDO_GEOM.SDO_BUFFER(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;geom IN SDO_GEOMETRY,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dim IN SDO_DIM_ARRAY,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dist IN NUMBER</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[, params IN VARCHAR2]</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) RETURN SDO_GEOMETRY;</p>
<p>or</p>
<p class="synopsis">SDO_GEOM.SDO_BUFFER(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;geom IN SDO_GEOMETRY,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dist IN NUMBER,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tol IN NUMBER</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[, params IN VARCHAR2]</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) RETURN SDO_GEOMETRY;</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1744"></a>Description</p>
<p>Generates a <a id="sthref1745"></a>buffer polygon around or inside a geometry object.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1746"></a>Parameters</p>
<dl>
<dt>geom</dt>
<dd>
<p>Geometry object.</p>
</dd>
<dt>dim</dt>
<dd>
<p>Dimensional information array corresponding to <code>geom</code>, usually selected from one of the xxx_SDO_GEOM_METADATA views (described in <a href="sdo_objrelschema.htm#i1001937">Section 2.8</a>).</p>
</dd>
<dt>dist</dt>
<dd>
<p>Distance value. If the value is positive, the buffer is generated around the geometry; if the value is negative (valid only for polygons), the buffer is generated inside the geometry. The absolute value of this parameter must be greater than the tolerance value, as specified in the dimensional array (<code>dim</code> parameter) or in the <code>tol</code> parameter.</p>
</dd>
<dt>tol</dt>
<dd>
<p>Tolerance value (see <a href="sdo_intro.htm#i884589">Section 1.5.5</a>).</p>
</dd>
<dt>params</dt>
<dd>
<p>A quoted string that can contain one or both of the following keywords:</p>
<ul>
<li>
<p><code>unit</code> and an SDO_UNIT value from the MDSYS.SDO_DIST_UNITS table. It identifies the unit of measurement associated with the <code>dist</code> parameter value, and also with the arc tolerance value if the <code>arc_tolerance</code> keyword is specified. See <a href="sdo_objrelschema.htm#i1010145">Section 2.10</a> for more information about unit of measurement specification.</p>
</li>
<li>
<p><code>arc_tolerance</code> and an arc tolerance value. See the Usage Notes for the <a href="#i867686">SDO_GEOM.SDO_ARC_DENSIFY</a> function in this chapter for more information about the <code>arc_tolerance</code> keyword.</p>
</li>
</ul>
<p>For example: <code>'unit=km arc_tolerance=0.05'</code></p>
<p>If the input geometry is geodetic data and if <code>arc_tolerance</code> is not specified, the default value is the tolerance value multiplied by 20. Spatial uses the <code>arc_tolerance</code> value to perform arc densification in computing the result. If the input geometry is Cartesian or projected data, <code>arc_tolerance</code> has no effect and should not be specified.</p>
<p>If this parameter is not specified for a Cartesian or projected geometry, or if the <code>arc_tolerance</code> keyword is specified for a geodetic geometry but the <code>unit</code> keyword is not specified, the unit of measurement associated with the data is assumed.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1747"></a>Usage Notes</p>
<p>This function returns a geometry object representing the buffer polygon.</p>
<p>This function creates a rounded buffer around a point, line, or polygon, or inside a polygon. The buffer within a void is also rounded, and is the same distance from the inner boundary as the outer buffer is from the outer boundary. See <a href="sdo_intro.htm#i878990">Figure 1-7</a> for an illustration.</p>
<p>If the buffer polygon geometry is in a projected coordinate system, it will contain arcs; and if you want to transform that geometry to a geodetic coordinate system, you must first densify it using the <a href="#i867686">SDO_GEOM.SDO_ARC_DENSIFY</a> function, and then transform the densified geometry.</p>
<p>If the input geometry has more than 50 ordinates, and the buffer width is less than 0.1 percent (0.001) of the root-mean-square spacing between consecutive coordinates, then the original geometry is returned unchanged.</p>
<p>With geodetic data, this function is supported by approximations, as explained in <a href="sdo_cs_concepts.htm#i894707">Section 6.10.3</a>.</p>
<p>With geodetic data, this function should be used only for relatively small geometries: geometries for which the local tangent plane projection that is used for internal computations does not introduce significant distortions or errors. This limits the applicable domain of source geometries, whether line strings or polygons, to approximately the area of Texas (United States), France, or Manchuria province (China).</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1748"></a>Examples</p>
<p>The following example returns a polygon representing a buffer of 1 around <code>cola_a</code>. Note the rounded corners (for example, at .292893219,.292893219) in the returned polygon. (The example uses the non-geodetic definitions and data from <a href="sdo_objrelschema.htm#i1004750">Section 2.1</a>.)</p>
<pre>
-- Generate a buffer of 1 unit around a geometry.
SELECT c.name, SDO_GEOM.SDO_BUFFER(c.shape, m.diminfo, 1) 
  FROM cola_markets c, user_sdo_geom_metadata m 
  WHERE m.table_name = 'COLA_MARKETS'  AND m.column_name = 'SHAPE' 
  AND c.name = 'cola_a';

NAME                                                                            
--------------------------------                                                
SDO_GEOM.SDO_BUFFER(C.SHAPE,M.DIMINFO,1)(SDO_GTYPE, SDO_SRID, SDO_POINT(X, Y, Z)
--------------------------------------------------------------------------------
cola_a                                                                          
SDO_GEOMETRY(2003, NULL, NULL, SDO_ELEM_INFO_ARRAY(1, 1005, 8, 1, 2, 2, 5, 2, 1,
 7, 2, 2, 11, 2, 1, 13, 2, 2, 17, 2, 1, 19, 2, 2, 23, 2, 1), SDO_ORDINATE_ARRAY(
0, 1, .292893219, .292893219, 1, 0, 5, 0, 5.70710678, .292893219, 6, 1, 6, 7, 5.
70710678, 7.70710678, 5, 8, 1, 8, .292893219, 7.70710678, 0, 7, 0, 1))
</pre>
<p>The following example returns a polygon representing a buffer of 1 around <code>cola_a</code> using the geodetic definitions and data from <a href="sdo_cs_concepts.htm#i889615">Section 6.13</a>.</p>
<pre>
-- Generate a buffer of 1 kilometer around a geometry.
SELECT c.name, SDO_GEOM.SDO_BUFFER(c.shape, m.diminfo, 1, 
                                  'unit=km arc_tolerance=0.05')
 FROM cola_markets c, user_sdo_geom_metadata m 
 WHERE m.table_name = 'COLA_MARKETS' 
 AND m.column_name = 'SHAPE' AND c.name = 'cola_a';

NAME                                                                            
--------------------------------                                                
SDO_GEOM.SDO_BUFFER(C.SHAPE,M.DIMINFO,1,'UNIT=KMARC_TOLERANCE=0.05')(SDO_GTYPE, 
--------------------------------------------------------------------------------
cola_a                                                                          
SDO_GEOMETRY(2003, 8307, NULL, SDO_ELEM_INFO_ARRAY(1, 1003, 1), SDO_ORDINATE_ARR
AY(.991023822, 1.00002073, .992223711, .995486419, .99551726, .99217077, 1.00001
929, .990964898, 4.99998067, .990964929, 5.00448268, .9921708, 5.00777624, .9954
86449, 5.00897618, 1.00002076, 5.00904194, 6.99997941, 5.00784065, 7.00450033, 5
.00454112, 7.00781357, 5.00002479, 7.009034, .999975166, 7.00903403, .995458814,
 7.00781359, .992159303, 7.00450036, .990958058, 6.99997944, .991023822, 1.00002
073))
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1749"></a>Related Topics</p>
<ul>
<li>
<p><a href="#i857624">SDO_GEOM.SDO_UNION</a></p>
</li>
<li>
<p><a href="#i857570">SDO_GEOM.SDO_INTERSECTION</a></p>
</li>
<li>
<p><a href="#i857842">SDO_GEOM.SDO_XOR</a></p>
</li>
</ul>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" -->
<a id="i860848"></a>
<div id="SPATL1112" class="refsect1">
<h2 class="refsect1">SDO_GEOM.<a id="sthref1750"></a><a id="sthref1751"></a><a id="sthref1752"></a><a id="sthref1753"></a><a id="sthref1754"></a>SDO_CENTROID</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1755"></a>Format</p>
<p class="synopsis">SDO_GEOM.SDO_CENTROID(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;geom1 IN SDO_GEOMETRY,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dim1 IN SDO_DIM_ARRAY</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) RETURN SDO_GEOMETRY;</p>
<p>or</p>
<p class="synopsis">SDO_GEOM.SDO_CENTROID(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;geom1 IN SDO_GEOMETRY,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tol IN NUMBER</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) RETURN SDO_GEOMETRY;</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1756"></a>Description</p>
<p>Returns a point geometry that is the centroid of a polygon, multipolygon, point, or point cluster. (The centroid is also known as the "center of gravity.")</p>
<p>For an input geometry consisting of multiple objects, the result is weighted by the area of each polygon in the geometry objects. If the geometry objects are a mixture of polygons and points, the points are not used in the calculation of the centroid. If the geometry objects are all points, the points have equal weight.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1757"></a>Parameters</p>
<dl>
<dt>geom1</dt>
<dd>
<p>Geometry object.</p>
</dd>
<dt>dim1</dt>
<dd>
<p>Dimensional information array corresponding to <code>geom</code>, usually selected from one of the xxx_SDO_GEOM_METADATA views (described in <a href="sdo_objrelschema.htm#i1001937">Section 2.8</a>).</p>
</dd>
<dt>tol</dt>
<dd>
<p>Tolerance value (see <a href="sdo_intro.htm#i884589">Section 1.5.5</a>).</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1758"></a>Usage Notes</p>
<p>The function returns a null value if <code>geom1</code> is not a polygon, multipolygon, point, or point cluster, as identified by the SDO_GTYPE value in the SDO_GEOMETRY object.</p>
<p>If <code>geom1</code> is a point, the function returns the point (the input geometry).</p>
<p>With geodetic data, this function is supported by approximations, as explained in <a href="sdo_cs_concepts.htm#i894707">Section 6.10.3</a>.</p>
<p>Depending on the shape and complexity of the input geometry, the returned point might not be on the surface of the input geometry.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1759"></a>Examples</p>
<p>The following example returns a geometry object that is the centroid of <code>cola_c</code>. (The example uses the definitions and data from <a href="sdo_objrelschema.htm#i1004750">Section 2.1</a>.)</p>
<pre>
-- Return the centroid of a geometry.
SELECT c.name, SDO_GEOM.SDO_CENTROID(c.shape, m.diminfo) 
  FROM cola_markets c, user_sdo_geom_metadata m 
  WHERE m.table_name = 'COLA_MARKETS' AND m.column_name = 'SHAPE' 
  AND c.name = 'cola_c';

NAME                                                                            
--------------------------------                                                
SDO_GEOM.SDO_CENTROID(C.SHAPE,M.DIMINFO)(SDO_GTYPE, SDO_SRID, SDO_POINT(X, Y, Z)
--------------------------------------------------------------------------------
cola_c                                                                          
SDO_GEOMETRY(2001, NULL, NULL, SDO_ELEM_INFO_ARRAY(1, 1, 1), SDO_ORDINATE_ARRAY(
4.73333333, 3.93333333))
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1760"></a>Related Topics</p>
<p>None.</p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" -->
<a id="CACGDHGE"></a>
<div id="SPATL1113" class="refsect1">
<h2 class="refsect1">SDO_GEOM.<a id="sthref1761"></a><a id="sthref1762"></a><a id="sthref1763"></a>SDO_CLOSEST_POINTS</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1764"></a>Format</p>
<p class="synopsis">SDO_GEOM.SDO_CLOSEST_POINTS(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;geom1 IN SDO_GEOMETRY,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;geom2 IN SDO_GEOMETRY,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tolerance IN NUMBER,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;unit IN VARCHAR2,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dist OUT NUMBER,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;geoma OUT SDO_GEOMETRY,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;geomb OUT SDO_GEOMETRY);</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1765"></a>Description</p>
<p>Computes the minimum distance between two geometries and the points (one on each geometry) that are the minimum distance apart.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1766"></a>Parameters</p>
<dl>
<dt>geom1</dt>
<dd>
<p>Geometry object.</p>
</dd>
<dt>geom2</dt>
<dd>
<p>Geometry object.</p>
</dd>
<dt>tolerance</dt>
<dd>
<p>Tolerance value (see <a href="sdo_intro.htm#i884589">Section 1.5.5</a>).</p>
</dd>
<dt>unit</dt>
<dd>
<p>Unit of measurement: a quoted string with <code>unit=</code> and an SDO_UNIT value from the MDSYS.SDO_DIST_UNITS table (for example, 'unit=KM'). See <a href="sdo_objrelschema.htm#i1010145">Section 2.10</a> for more information about unit of measurement specification.</p>
<p>If this parameter is not specified, the unit of measurement associated with the data is assumed.</p>
</dd>
<dt>dist</dt>
<dd>
<p>Output parameter containing the minimum distance between <code>geom1</code> and <code>geom2</code>. Specifically, the distance between <code>geoma</code> and <code>geomb</code>.</p>
</dd>
<dt>geoma</dt>
<dd>
<p>Output parameter containing the point geometry object on the boundary of <code>geom1</code> that is closest to the closest point on the boundary of <code>geom2</code>.</p>
</dd>
<dt>geomb</dt>
<dd>
<p>Output parameter containing the point geometry object on the boundary of <code>geom2</code> that is closest to the closest point on the boundary of <code>geom1</code>.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1767"></a>Usage Notes</p>
<p>This procedure uses output parameters to store the computed minimum distance and the point on each input geometry associated with the minimum distance.</p>
<p>If the distance between the two points is 0 (zero), the output geometries (<code>geoma</code> and <code>geomb</code>) are null.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1768"></a>Examples</p>
<p>The following example computes the minimum distance between geometries <code>cola_c</code> and cola_d, as well as the one point on each input geometry associated with the minimum distance. It also inserts the two output point geometries into the table and then selects these point geometries. The minimum distance between the two input geometries is 2.47213595499958, the closest point on <code>cola_c</code> is at (6,5), and the closest point on <code>cola_d</code> is at (7.10557281, 7.21114562). (The example uses the definitions and data from <a href="sdo_objrelschema.htm#i1004750">Section 2.1</a>.)</p>
<pre>
DECLARE
  cola_c_geom SDO_GEOMETRY;
  cola_d_geom SDO_GEOMETRY;
  dist NUMBER;
  geoma SDO_GEOMETRY;
  geomb SDO_GEOMETRY;
  
BEGIN
  
-- Populate geometry variables with cola market shapes.
SELECT c.shape into cola_c_geom FROM cola_markets c
  WHERE c.name = 'cola_c';
SELECT c.shape into cola_d_geom FROM cola_markets c
  WHERE c.name = 'cola_d';
 
SDO_GEOM.SDO_CLOSEST_POINTS(cola_c_geom, cola_d_geom, 0.005, NULL,
  dist, geoma, geomb);
  
INSERT INTO cola_markets VALUES(9901, 'geoma', geoma);
INSERT INTO cola_markets VALUES(9902, 'geomb', geomb);
  
DBMS_OUTPUT.PUT_LINE('dist output parameter value = ' || dist);
END;
/
dist output parameter value = 2.47213595499958                                  
 
PL/SQL procedure successfully completed.
 
SELECT c.shape FROM cola_markets c WHERE c.name = 'geoma';
 
SHAPE(SDO_GTYPE, SDO_SRID, SDO_POINT(X, Y, Z), SDO_ELEM_INFO, SDO_ORDINATES)    
--------------------------------------------------------------------------------
SDO_GEOMETRY(2001, NULL, NULL, SDO_ELEM_INFO_ARRAY(1, 1, 1), SDO_ORDINATE_ARRAY(
6, 5))                                                                          
                                                                                
SELECT c.shape FROM cola_markets c WHERE c.name = 'geomb';
 
SHAPE(SDO_GTYPE, SDO_SRID, SDO_POINT(X, Y, Z), SDO_ELEM_INFO, SDO_ORDINATES)    
--------------------------------------------------------------------------------
SDO_GEOMETRY(2001, NULL, NULL, SDO_ELEM_INFO_ARRAY(1, 1, 1), SDO_ORDINATE_ARRAY(
7.10557281, 7.21114562))
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1769"></a>Related Topics</p>
<p>None.</p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" -->
<a id="CACDAEEA"></a>
<div id="SPATL1419" class="refsect1">
<h2 class="refsect1">SDO_GEOM.<a id="sthref1770"></a><a id="sthref1771"></a><a id="sthref1772"></a>SDO_CONCAVEHULL</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1773"></a>Format</p>
<p class="synopsis">SDO_GEOM.SDO_CONCAVEHULL(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;geom IN SDO_GEOMETRY,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tol IN NUMBER</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) RETURN SDO_GEOMETRY;</p>
<p>or</p>
<p class="synopsis">SDO_GEOM.SDO_CONCAVEHULL(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;geom IN SDO_GEOMETRY,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tol IN NUMBER,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;radius OUT NUMBER</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) RETURN SDO_GEOMETRY;</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1774"></a>Description</p>
<p>Returns a polygon-type object that represents the concave hull of a geometry object.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1775"></a>Parameters</p>
<dl>
<dt>geom</dt>
<dd>
<p>Geometry object.</p>
</dd>
<dt>tol</dt>
<dd>
<p>Tolerance value (see <a href="sdo_intro.htm#i884589">Section 1.5.5</a>).</p>
</dd>
<dt>radius</dt>
<dd>
<p>Output parameter to hold the radius of the circumcircle of the triangles created internally (using Delaunay triangulations) in computing the concave hull.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1776"></a>Usage Notes</p>
<p>The <span class="bold">concave hull</span> is a polygon that represents the area of the input geometry, such as a collection of points. With complex input geometries, the concave hull is typically significantly smaller in area that the convex hull.</p>
<p>This function takes all coordinates from the input geometry, uses them to compute Delaunay triangulations, and computes a concave hull. It returns only an exterior ring; any interior rings are discarded.</p>
<p>This function uses the alpha shape in computing the concave hull. By contrast, the <a href="#CACIFBIE">SDO_GEOM.SDO_CONCAVEHULL_BOUNDARY</a> function uses exterior boundary points.</p>
<p>The format with the <code>radius</code> parameter returns a radius value that can be useful if you plan to call the <a href="#CACDIECC">SDO_GEOM.SDO_ALPHA_SHAPE</a> function.</p>
<p>An exception is raised if <code>geom</code> has fewer than three points or vertices, or consists of multiple points all in a straight line.</p>
<p>With geodetic data, this function is supported by approximations, as explained in <a href="sdo_cs_concepts.htm#i894707">Section 6.10.3</a>.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1777"></a>Examples</p>
<p>The following example returns a geometry object that is the concave hull of <code>cola_c</code>. (The example uses the definitions and data from <a href="sdo_objrelschema.htm#i1004750">Section 2.1</a>.</p>
<pre>
-- Return the concave hull of a polygon.
SELECT c.name, SDO_GEOM.SDO_CONCAVEHULL(c.shape, 0.005)
  FROM cola_markets c WHERE c.name = 'cola_c';
 
NAME                                                                            
--------------------------------                                                
SDO_GEOM.SDO_CONCAVEHULL(C.SHAPE,0.005)(SDO_GTYPE, SDO_SRID, SDO_POINT(X, Y, Z),
--------------------------------------------------------------------------------
cola_c                                                                          
SDO_GEOMETRY(2003, NULL, NULL, SDO_ELEM_INFO_ARRAY(1, 1003, 1), SDO_ORDINATE_ARR
AY(6, 3, 6, 5, 4, 5, 3, 3, 6, 3))                                             
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1778"></a>Related Topics</p>
<p><a href="#CACDIECC">SDO_GEOM.SDO_ALPHA_SHAPE</a></p>
<p><a href="#CACIFBIE">SDO_GEOM.SDO_CONCAVEHULL_BOUNDARY</a></p>
<p><a href="#i857920">SDO_GEOM.SDO_CONVEXHULL</a></p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" -->
<a id="CACIFBIE"></a>
<div id="SPATL1420" class="refsect1">
<h2 class="refsect1">SDO_GEOM.<a id="sthref1779"></a><a id="sthref1780"></a><a id="sthref1781"></a>SDO_CONCAVEHULL_BOUNDARY</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1782"></a>Format</p>
<p class="synopsis">SDO_GEOM.SDO_CONCAVEHULL_BOUNDARY(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;geom IN SDO_GEOMETRY,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tol IN NUMBER,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;length IN NUMBER DEFAULT NULL</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) RETURN SDO_GEOMETRY;</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1783"></a>Description</p>
<p>Returns a polygon-type object that represents the concave hull of a geometry object, based on boundary points rather than the alpha shape.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1784"></a>Parameters</p>
<dl>
<dt>geom</dt>
<dd>
<p>Geometry object.</p>
</dd>
<dt>tol</dt>
<dd>
<p>Tolerance value (see <a href="sdo_intro.htm#i884589">Section 1.5.5</a>).</p>
</dd>
<dt>length</dt>
<dd>
<p>A value to control the size of the concave hull: specifically, computation of the concave hull is stopped when the longest edge in the concave hull is shorter than the <code>length</code> value. Thus, the larger the <code>length</code> value, the larger the concave hull will probably be. If you do not specify this parameter, computation continues as described in the Usage Notes.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1785"></a>Usage Notes</p>
<p>The <span class="bold">concave hull</span> is a polygon that represents the area of the input geometry, such as a collection of points. With complex input geometries, the concave hull is typically significantly smaller in area than the convex hull.</p>
<p>Like the <a href="#CACDAEEA">SDO_GEOM.SDO_CONCAVEHULL</a> function, this function takes all coordinates from the input geometry, and uses them to compute Delaunay triangulations. But after that, it computes a convex hull, puts all boundary edges into a priority queue based on the lengths of these edges, and then removes edges one by one as long as the shape is still a single connected polygon (unless stopped by a specified <code>length</code> parameter value). If an edge is removed during the computation, the other two edges of its triangle will be on the boundary.</p>
<p>An exception is raised if <code>geom</code> has fewer than three points or vertices, or consists of multiple points all in a straight line.</p>
<p>With geodetic data, this function is supported by approximations, as explained in <a href="sdo_cs_concepts.htm#i894707">Section 6.10.3</a>.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1786"></a>Examples</p>
<p>The following example returns a geometry object that is the concave hull of <code>cola_c</code>. (The example uses the definitions and data from <a href="sdo_objrelschema.htm#i1004750">Section 2.1</a>.)</p>
<pre>
-- Return the concave hull of a polygon.
SELECT c.name, SDO_GEOM.SDO_CONCAVEHULL_BOUNDARY(c.shape, 0.005)
  FROM cola_markets c WHERE c.name = 'cola_c';
 
NAME                                                                            
--------------------------------                                                
SDO_GEOM.SDO_CONCAVEHULL_BOUNDARY(C.SHAPE,0.005)(SDO_GTYPE, SDO_SRID, SDO_POINT(
--------------------------------------------------------------------------------
cola_c                                                                          
SDO_GEOMETRY(2003, NULL, NULL, SDO_ELEM_INFO_ARRAY(1, 1003, 1), SDO_ORDINATE_ARR
AY(6, 3, 6, 5, 4, 5, 3, 3, 6, 3))
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1787"></a>Related Topics</p>
<p><a href="#CACDIECC">SDO_GEOM.SDO_ALPHA_SHAPE</a></p>
<p><a href="#CACDAEEA">SDO_GEOM.SDO_CONCAVEHULL</a></p>
<p><a href="#i857920">SDO_GEOM.SDO_CONVEXHULL</a></p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" -->
<a id="i857920"></a>
<div id="SPATL1114" class="refsect1">
<h2 class="refsect1">SDO_GEOM.<a id="sthref1788"></a><a id="sthref1789"></a><a id="sthref1790"></a>SDO_CONVEXHULL</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1791"></a>Format</p>
<p class="synopsis">SDO_GEOM.SDO_CONVEXHULL(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;geom1 IN SDO_GEOMETRY,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dim1 IN SDO_DIM_ARRAY</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) RETURN SDO_GEOMETRY;</p>
<p>or</p>
<p class="synopsis">SDO_GEOM.SDO_CONVEXHULL(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;geom1 IN SDO_GEOMETRY,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tol IN NUMBER</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) RETURN SDO_GEOMETRY;</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1792"></a>Description</p>
<p>Returns a polygon-type object that represents the convex hull of a geometry object.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1793"></a>Parameters</p>
<dl>
<dt>geom1</dt>
<dd>
<p>Geometry object.</p>
</dd>
<dt>dim1</dt>
<dd>
<p>Dimensional information array corresponding to <code>geom1</code>, usually selected from one of the xxx_SDO_GEOM_METADATA views (described in <a href="sdo_objrelschema.htm#i1001937">Section 2.8</a>).</p>
</dd>
<dt>tol</dt>
<dd>
<p>Tolerance value (see <a href="sdo_intro.htm#i884589">Section 1.5.5</a>).</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1794"></a>Usage Notes</p>
<p>The <span class="bold">convex hull</span> is a simple convex polygon that completely encloses the geometry object. Spatial uses as few straight-line sides as possible to create the smallest polygon that completely encloses the specified object. A convex hull is a convenient way to get an approximation of a complex geometry object.</p>
<p>If the geometry (<code>geom1</code>) contains any arc elements, the function calculates the minimum bounding rectangle (MBR) for each arc element and uses these MBRs in calculating the convex hull of the geometry. If the geometry object (<code>geom1</code>) is a circle, the function returns a square that minimally encloses the circle.</p>
<p>The function returns a null value if <code>geom1</code> is of point type, has fewer than three points or vertices, or consists of multiple points all in a straight line.</p>
<p>With geodetic data, this function is supported by approximations, as explained in <a href="sdo_cs_concepts.htm#i894707">Section 6.10.3</a>.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1795"></a>Examples</p>
<p>The following example returns a geometry object that is the convex hull of <code>cola_c</code>. (The example uses the definitions and data from <a href="sdo_objrelschema.htm#i1004750">Section 2.1</a>. This specific example, however, does not produce useful output&mdash;the returned polygon has the same vertices as the input polygon&mdash;because the input polygon is already a simple convex polygon.)</p>
<pre>
-- Return the convex hull of a polygon.
SELECT c.name, SDO_GEOM.SDO_CONVEXHULL(c.shape, m.diminfo) 
  FROM cola_markets c, user_sdo_geom_metadata m 
  WHERE m.table_name = 'COLA_MARKETS' AND m.column_name = 'SHAPE' 
  AND c.name = 'cola_c';

NAME                                                                            
--------------------------------                                                
SDO_GEOM.SDO_CONVEXHULL(C.SHAPE,M.DIMINFO)(SDO_GTYPE, SDO_SRID, SDO_POINT(X, Y, 
--------------------------------------------------------------------------------
cola_c                                                                          
SDO_GEOMETRY(2003, NULL, NULL, SDO_ELEM_INFO_ARRAY(1, 1003, 1), SDO_ORDINATE_ARR
AY(6, 3, 6, 5, 4, 5, 3, 3, 6, 3))
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1796"></a>Related Topics</p>
<p><a href="#CACDAEEA">SDO_GEOM.SDO_CONCAVEHULL</a></p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" -->
<a id="i857512"></a>
<div id="SPATL1115" class="refsect1">
<h2 class="refsect1">SDO_GEOM.<a id="sthref1797"></a><a id="sthref1798"></a><a id="sthref1799"></a>SDO_DIFFERENCE</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1800"></a>Format</p>
<p class="synopsis">SDO_GEOM.SDO_DIFFERENCE(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;geom1 IN SDO_GEOMETRY,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dim1 IN SDO_DIM_ARRAY,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;geom2 IN SDO_GEOMETRY,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dim2 IN SDO_DIM_ARRAY</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) RETURN SDO_GEOMETRY;</p>
<p>or</p>
<p class="synopsis">SDO_GEOM.SDO_DIFFERENCE(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;geom1 IN SDO_GEOMETRY,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;geom2 IN SDO_GEOMETRY,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tol IN NUMBER</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) RETURN SDO_GEOMETRY;</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1801"></a>Description</p>
<p>Returns a geometry object that is the topological difference (MINUS operation) of two geometry objects.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1802"></a>Parameters</p>
<dl>
<dt>geom1</dt>
<dd>
<p>Geometry object.</p>
</dd>
<dt>dim1</dt>
<dd>
<p>Dimensional information array corresponding to <code>geom1</code>, usually selected from one of the xxx_SDO_GEOM_METADATA views (described in <a href="sdo_objrelschema.htm#i1001937">Section 2.8</a>).</p>
</dd>
<dt>geom2</dt>
<dd>
<p>Geometry object.</p>
</dd>
<dt>dim2</dt>
<dd>
<p>Dimensional information array corresponding to <code>geom2</code>, usually selected from one of the xxx_SDO_GEOM_METADATA views (described in <a href="sdo_objrelschema.htm#i1001937">Section 2.8</a>).</p>
</dd>
<dt>tol</dt>
<dd>
<p>Tolerance value (see <a href="sdo_intro.htm#i884589">Section 1.5.5</a>).</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1803"></a>Usage Notes</p>
<p>In <a href="#i859495">Figure 24-2</a>, the shaded area represents the polygon returned when SDO_DIFFERENCE is used with a square (<code>geom1</code>) and another polygon (<code>geom2</code>).</p>
<div id="SPATL1116" class="figure">
<p class="titleinfigure"><a id="i859495"></a>Figure 24-2 SDO_GEOM.SDO_DIFFERENCE</p>
<img width="217" height="145" src="img/sdodiff.gif" alt="Description of Figure 24-2 follows" /><br />
<a id="sthref1804" href="img_text/sdodiff.htm">Description of "Figure 24-2 SDO_GEOM.SDO_DIFFERENCE"</a><br />
<br /></div>
<!-- class="figure" -->
<p>An exception is raised if <code>geom1</code> and <code>geom2</code> are based on different coordinate systems.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1805"></a>Examples</p>
<p>The following example returns a geometry object that is the topological difference (MINUS operation) of <code>cola_a</code> and <code>cola_c</code>. (The example uses the definitions and data from <a href="sdo_objrelschema.htm#i1004750">Section 2.1</a>.)</p>
<pre>
-- Return the topological difference of two geometries.
SELECT SDO_GEOM.SDO_DIFFERENCE(c_a.shape, m.diminfo, c_c.shape, m.diminfo) 
  FROM cola_markets c_a, cola_markets c_c, user_sdo_geom_metadata m 
  WHERE m.table_name = 'COLA_MARKETS' AND m.column_name = 'SHAPE' 
  AND c_a.name = 'cola_a' AND c_c.name = 'cola_c';

SDO_GEOM.SDO_DIFFERENCE(C_A.SHAPE,M.DIMINFO,C_C.SHAPE,M.DIMINFO)(SDO_GTYPE, SDO_
--------------------------------------------------------------------------------
SDO_GEOMETRY(2003, NULL, NULL, SDO_ELEM_INFO_ARRAY(1, 1003, 1), SDO_ORDINATE_ARR
AY(1, 7, 1, 1, 5, 1, 5, 3, 3, 3, 4, 5, 5, 5, 5, 7, 1, 7)
</pre>
<p>Note that in the returned polygon, the SDO_ORDINATE_ARRAY starts and ends at the same point (1, 7).</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1806"></a>Related Topics</p>
<ul>
<li>
<p><a href="#i857570">SDO_GEOM.SDO_INTERSECTION</a></p>
</li>
<li>
<p><a href="#i857624">SDO_GEOM.SDO_UNION</a></p>
</li>
<li>
<p><a href="#i857842">SDO_GEOM.SDO_XOR</a></p>
</li>
</ul>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" -->
<a id="i857957"></a>
<div id="SPATL1117" class="refsect1">
<h2 class="refsect1">SDO_GEOM.<a id="sthref1807"></a><a id="sthref1808"></a>SDO_DISTANCE</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1809"></a>Format</p>
<p class="synopsis">SDO_GEOM.SDO_DISTANCE(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;geom1 IN SDO_GEOMETRY,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dim1 IN SDO_DIM_ARRAY,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;geom2 IN SDO_GEOMETRY,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dim2 IN SDO_DIM_ARRAY</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[, unit IN VARCHAR2]</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) RETURN NUMBER;</p>
<p>or</p>
<p class="synopsis">SDO_GEOM.SDO_DISTANCE(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;geom1 IN SDO_GEOMETRY,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;geom2 IN SDO_GEOMETRY,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tol IN NUMBER</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[, unit IN VARCHAR2]</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) RETURN NUMBER;</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1810"></a>Description</p>
<p>Computes the distance between two geometry objects. The distance between two geometry objects is the distance between the closest pair of points or segments of the two objects.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1811"></a>Parameters</p>
<dl>
<dt>geom1</dt>
<dd>
<p>Geometry object whose distance from <code>geom2</code> is to be computed.</p>
</dd>
<dt>dim1</dt>
<dd>
<p>Dimensional information array corresponding to <code>geom1</code>, usually selected from one of the xxx_SDO_GEOM_METADATA views (described in <a href="sdo_objrelschema.htm#i1001937">Section 2.8</a>).</p>
</dd>
<dt>geom2</dt>
<dd>
<p>Geometry object whose distance from <code>geom1</code> is to be computed.</p>
</dd>
<dt>dim2</dt>
<dd>
<p>Dimensional information array corresponding to <code>geom2</code>, usually selected from one of the xxx_SDO_GEOM_METADATA views (described in <a href="sdo_objrelschema.htm#i1001937">Section 2.8</a>).</p>
</dd>
<dt>unit</dt>
<dd>
<p>Unit of measurement: a quoted string with <code>unit=</code> and an SDO_UNIT value from the MDSYS.SDO_DIST_UNITS table (for example, 'unit=KM'). See <a href="sdo_objrelschema.htm#i1010145">Section 2.10</a> for more information about unit of measurement specification.</p>
<p>If this parameter is not specified, the unit of measurement associated with the data is assumed.</p>
</dd>
<dt>tol</dt>
<dd>
<p>Tolerance value (see <a href="sdo_intro.htm#i884589">Section 1.5.5</a>).</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1812"></a>Usage Notes</p>
<p>An exception is raised if <code>geom1</code> and <code>geom2</code> are based on different coordinate systems.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1813"></a>Examples</p>
<p>The following example returns the shortest distance between <code>cola_b</code> and <code>cola_d</code>. (The example uses the definitions and data from <a href="sdo_objrelschema.htm#i1004750">Section 2.1</a>.)</p>
<pre>
-- Return the distance between two geometries.
SELECT SDO_GEOM.SDO_DISTANCE(c_b.shape, c_d.shape, 0.005)
   FROM cola_markets c_b, cola_markets c_d
   WHERE c_b.name = 'cola_b' AND c_d.name = 'cola_d';

SDO_GEOM.SDO_DISTANCE(C_B.SHAPE,C_D.SHAPE,0.005)
------------------------------------------------
                                      .846049894
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1814"></a>Related Topics</p>
<ul>
<li>
<p><a href="#i856373">SDO_GEOM.WITHIN_DISTANCE</a></p>
</li>
</ul>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" -->
<a id="i857570"></a>
<div id="SPATL1118" class="refsect1">
<h2 class="refsect1">SDO_GEOM.<a id="sthref1815"></a><a id="sthref1816"></a><a id="sthref1817"></a>SDO_INTERSECTION</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1818"></a>Format</p>
<p class="synopsis">SDO_GEOM.SDO_INTERSECTION(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;geom1 IN SDO_GEOMETRY,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dim1 IN SDO_DIM_ARRAY,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;geom2 IN SDO_GEOMETRY,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dim2 IN SDO_DIM_ARRAY</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) RETURN SDO_GEOMETRY;</p>
<p>or</p>
<p class="synopsis">SDO_GEOM.SDO_INTERSECTION(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;geom1 IN SDO_GEOMETRY,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;geom2 IN SDO_GEOMETRY,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tol IN NUMBER</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) RETURN SDO_GEOMETRY;</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1819"></a>Description</p>
<p>Returns a geometry object that is the topological intersection (AND operation) of two geometry objects.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1820"></a>Parameters</p>
<dl>
<dt>geom1</dt>
<dd>
<p>Geometry object.</p>
</dd>
<dt>dim1</dt>
<dd>
<p>Dimensional information array corresponding to <code>geom1</code>, usually selected from one of the xxx_SDO_GEOM_METADATA views (described in <a href="sdo_objrelschema.htm#i1001937">Section 2.8</a>).</p>
</dd>
<dt>geom2</dt>
<dd>
<p>Geometry object.</p>
</dd>
<dt>dim2</dt>
<dd>
<p>Dimensional information array corresponding to <code>geom2</code>, usually selected from one of the xxx_SDO_GEOM_METADATA views (described in <a href="sdo_objrelschema.htm#i1001937">Section 2.8</a>).</p>
</dd>
<dt>tol</dt>
<dd>
<p>Tolerance value (see <a href="sdo_intro.htm#i884589">Section 1.5.5</a>).</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1821"></a>Usage Notes</p>
<p>In <a href="#i858275">Figure 24-3</a>, the shaded area represents the polygon returned when SDO_INTERSECTION is used with a square (<code>geom1</code>) and another polygon (<code>geom2</code>).</p>
<div id="SPATL1119" class="figure">
<p class="titleinfigure"><a id="i858275"></a>Figure 24-3 SDO_GEOM.SDO_INTERSECTION</p>
<img width="217" height="145" src="img/sdointer.gif" alt="Description of Figure 24-3 follows" /><br />
<a id="sthref1822" href="img_text/sdointer.htm">Description of "Figure 24-3 SDO_GEOM.SDO_INTERSECTION"</a><br />
<br /></div>
<!-- class="figure" -->
<p>An exception is raised if <code>geom1</code> and <code>geom2</code> are based on different coordinate systems.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1823"></a>Examples</p>
<p>The following example returns a geometry object that is the topological intersection (AND operation) of <code>cola_a</code> and <code>cola_c</code>. (The example uses the definitions and data from <a href="sdo_objrelschema.htm#i1004750">Section 2.1</a>.)</p>
<pre>
-- Return the topological intersection of two geometries.
SELECT SDO_GEOM.SDO_INTERSECTION(c_a.shape, c_c.shape, 0.005)
   FROM cola_markets c_a, cola_markets c_c 
   WHERE c_a.name = 'cola_a' AND c_c.name = 'cola_c';

SDO_GEOM.SDO_INTERSECTION(C_A.SHAPE,C_C.SHAPE,0.005)(SDO_GTYPE, SDO_SRID, SDO_PO
--------------------------------------------------------------------------------
SDO_GEOMETRY(2003, NULL, NULL, SDO_ELEM_INFO_ARRAY(1, 1003, 1), SDO_ORDINATE_ARR
AY(4, 5, 3, 3, 5, 3, 5, 5, 4, 5))
</pre>
<p>Note that in the returned polygon, the SDO_ORDINATE_ARRAY starts and ends at the same point (4, 5).</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1824"></a>Related Topics</p>
<ul>
<li>
<p><a href="#i857512">SDO_GEOM.SDO_DIFFERENCE</a></p>
</li>
<li>
<p><a href="#i857624">SDO_GEOM.SDO_UNION</a></p>
</li>
<li>
<p><a href="#i857842">SDO_GEOM.SDO_XOR</a></p>
</li>
</ul>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" -->
<a id="i856257"></a>
<div id="SPATL1120" class="refsect1">
<h2 class="refsect1">SDO_GEOM.<a id="sthref1825"></a><a id="sthref1826"></a><a id="sthref1827"></a><a id="sthref1828"></a>SDO_LENGTH</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1829"></a>Format</p>
<p class="synopsis">SDO_GEOM.SDO_LENGTH(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;geom IN SDO_GEOMETRY,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dim IN SDO_DIM_ARRAY</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[, unit IN VARCHAR2]</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[, count_shared_edges IN NUMBER]</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) RETURN NUMBER;</p>
<p>or</p>
<p class="synopsis">SDO_GEOM.SDO_LENGTH(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;geom IN SDO_GEOMETRY,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tol IN NUMBER</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[, unit IN VARCHAR2]</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[, count_shared_edges IN NUMBER]</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) RETURN NUMBER;</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1830"></a>Description</p>
<p>Returns the length or perimeter of a geometry object.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1831"></a>Parameters</p>
<dl>
<dt>geom</dt>
<dd>
<p>Geometry object.</p>
</dd>
<dt>dim</dt>
<dd>
<p>Dimensional information array corresponding to <code>geom</code>, usually selected from one of the xxx_SDO_GEOM_METADATA views (described in <a href="sdo_objrelschema.htm#i1001937">Section 2.8</a>).</p>
</dd>
<dt>tol</dt>
<dd>
<p>Tolerance value (see <a href="sdo_intro.htm#i884589">Section 1.5.5</a>).</p>
</dd>
<dt>unit</dt>
<dd>
<p>Unit of measurement: a quoted string with <code>unit=</code> and an SDO_UNIT value from the MDSYS.SDO_DIST_UNITS table (for example, 'unit=KM'). See <a href="sdo_objrelschema.htm#i1010145">Section 2.10</a> for more information about unit of measurement specification.</p>
<p>If this parameter is not specified, the unit of measurement associated with the data is assumed. For geodetic data, the default unit of measurement is meters.</p>
</dd>
<dt>count_shared_edges</dt>
<dd>
<p>For three-dimensional geometries only: the number of times to count the length of shared parts of edges if the input geometry contains any edges that are fully or partially shared. If specified, must be 1 (count each once) or 2 (count each twice). The default is 1.</p>
<p>This parameter is ignored for two-dimensional input geometries.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1832"></a>Usage Notes</p>
<p>If the input polygon contains one or more holes, this function calculates the perimeters of the exterior boundary and all holes. It returns the sum of all perimeters.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1833"></a>Examples</p>
<p>The following example returns the perimeters of geometry objects stored in the COLA_MARKETS table. The first statement returns the perimeters of all objects; the second returns just the perimeter of <code>cola_a</code>. (The example uses the definitions and data from <a href="sdo_objrelschema.htm#i1004750">Section 2.1</a>.)</p>
<pre>
-- Return the perimeters of all cola markets.
SELECT c.name, SDO_GEOM.SDO_LENGTH(c.shape, m.diminfo) 
  FROM cola_markets c, user_sdo_geom_metadata m 
  WHERE m.table_name = 'COLA_MARKETS' AND m.column_name = 'SHAPE';

NAME                             SDO_GEOM.SDO_LENGTH(C.SHAPE,M.DIMINFO)         
-------------------------------- --------------------------------------         
cola_a                                                               20         
cola_b                                                       17.1622777         
cola_c                                                       9.23606798         
cola_d                                                       12.5663706

-- Return the perimeter of just cola_a.
SELECT c.name, SDO_GEOM.SDO_LENGTH(c.shape, m.diminfo) 
  FROM cola_markets c, user_sdo_geom_metadata m 
  WHERE m.table_name = 'COLA_MARKETS' AND m.column_name = 'SHAPE' 
  AND c.name = 'cola_a';

NAME                             SDO_GEOM.SDO_LENGTH(C.SHAPE,M.DIMINFO)         
-------------------------------- --------------------------------------         
cola_a                                                               20
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1834"></a>Related Topics</p>
<p>None.</p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" -->
<a id="i866249"></a>
<div id="SPATL1121" class="refsect1">
<h2 class="refsect1">SDO_GEOM.<a id="sthref1835"></a><a id="sthref1836"></a><a id="sthref1837"></a>SDO_MAX_MBR_ORDINATE</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1838"></a>Format</p>
<p class="synopsis">SDO_GEOM.SDO_MAX_MBR_ORDINATE(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;geom IN SDO_GEOMETRY,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ordinate_pos IN NUMBER</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) RETURN NUMBER;</p>
<p>or</p>
<p class="synopsis">SDO_GEOM.SDO_MAX_MBR_ORDINATE(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;geom IN SDO_GEOMETRY,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dim IN SDO_DIM_ARRAY,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ordinate_pos IN NUMBER</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) RETURN NUMBER;</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1839"></a>Description</p>
<p>Returns the maximum value for the specified ordinate (dimension) of the minimum bounding rectangle of a geometry object.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1840"></a>Parameters</p>
<dl>
<dt>geom</dt>
<dd>
<p>Geometry object.</p>
</dd>
<dt>dim</dt>
<dd>
<p>Dimensional information array corresponding to <code>geom</code>, usually selected from one of the xxx_SDO_GEOM_METADATA views (described in <a href="sdo_objrelschema.htm#i1001937">Section 2.8</a>).</p>
</dd>
<dt>ordinate_pos</dt>
<dd>
<p>Position of the ordinate (dimension) in the definition of the geometry object: 1 for the first ordinate, 2 for the second ordinate, and so on. For example, if <code>geom</code> has X, Y ordinates, 1 identifies the X ordinate and 2 identifies the Y ordinate.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1841"></a>Usage Notes</p>
<p>None.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1842"></a>Examples</p>
<p>The following example returns the maximum X (first) ordinate value of the minimum bounding rectangle of the <code>cola_d</code> geometry in the COLA_MARKETS table. (The example uses the definitions and data from <a href="sdo_objrelschema.htm#i1004750">Section 2.1</a>. The minimum bounding rectangle of <code>cola_d</code> is returned in the example for the <a href="#i866042">SDO_GEOM.SDO_MBR</a> function.)</p>
<pre>
SELECT SDO_GEOM.SDO_MAX_MBR_ORDINATE(c.shape, m.diminfo, 1)
  FROM cola_markets c, user_sdo_geom_metadata m
  WHERE m.table_name = 'COLA_MARKETS' AND m.column_name = 'SHAPE' 
  AND c.name = 'cola_d';

SDO_GEOM.SDO_MAX_MBR_ORDINATE(C.SHAPE,M.DIMINFO,1)                              
--------------------------------------------------                              
                                                10
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1843"></a>Related Topics</p>
<ul>
<li>
<p><a href="#i866042">SDO_GEOM.SDO_MBR</a></p>
</li>
<li>
<p><a href="#i866250">SDO_GEOM.SDO_MIN_MBR_ORDINATE</a></p>
</li>
</ul>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" -->
<a id="i866042"></a>
<div id="SPATL1122" class="refsect1">
<h2 class="refsect1">SDO_GEOM.<a id="sthref1844"></a><a id="sthref1845"></a><a id="sthref1846"></a>SDO_MBR</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1847"></a>Format</p>
<p class="synopsis">SDO_GEOM.SDO_MBR(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;geom IN SDO_GEOMETRY</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[, dim IN SDO_DIM_ARRAY]</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) RETURN SDO_GEOMETRY;</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1848"></a>Description</p>
<p>Returns the minimum bounding rectangle of a geometry object, that is, a single rectangle that minimally encloses the geometry.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1849"></a>Parameters</p>
<dl>
<dt>geom</dt>
<dd>
<p>Geometry object.</p>
</dd>
<dt>dim</dt>
<dd>
<p>Dimensional information array corresponding to <code>geom</code>, usually selected from one of the xxx_SDO_GEOM_METADATA views (described in <a href="sdo_objrelschema.htm#i1001937">Section 2.8</a>).</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1850"></a>Usage Notes</p>
<p>This function does not return an MBR geometry if a proper MBR cannot be constructed. Specifically:</p>
<ul>
<li>
<p>If the input geometry is null, the function returns a null geometry.</p>
</li>
<li>
<p>If the input geometry is a point, the function returns the point.</p>
</li>
<li>
<p>If the input geometry consists of points all on a straight line, the function returns a two-point line.</p>
</li>
<li>
<p>If the input geometry has three dimensions but all Z dimension values are the same, the function returns a three-dimensional line.</p>
</li>
</ul>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1851"></a>Examples</p>
<p>The following example returns the minimum bounding rectangle of the <code>cola_d</code> geometry in the COLA_MARKETS table. (The example uses the definitions and data from <a href="sdo_objrelschema.htm#i1004750">Section 2.1</a>. Because <code>cola_d</code> is a circle, the minimum bounding rectangle in this case is a square.)</p>
<pre>
-- Return the minimum bounding rectangle of cola_d (a circle).
SELECT SDO_GEOM.SDO_MBR(c.shape, m.diminfo) 
  FROM cola_markets c, user_sdo_geom_metadata m
  WHERE m.table_name = 'COLA_MARKETS' AND m.column_name = 'SHAPE' 
  AND c.name = 'cola_d';

SDO_GEOM.SDO_MBR(C.SHAPE,M.DIMINFO)(SDO_GTYPE, SDO_SRID, SDO_POINT(X, Y, Z), SDO
--------------------------------------------------------------------------------
SDO_GEOMETRY(2003, NULL, NULL, SDO_ELEM_INFO_ARRAY(1, 1003, 3), SDO_ORDINATE_ARR
AY(6, 7, 10, 11))
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1852"></a>Related Topics</p>
<ul>
<li>
<p><a href="#i866249">SDO_GEOM.SDO_MAX_MBR_ORDINATE</a></p>
</li>
<li>
<p><a href="#i866250">SDO_GEOM.SDO_MIN_MBR_ORDINATE</a></p>
</li>
</ul>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" -->
<a id="i866250"></a>
<div id="SPATL1123" class="refsect1">
<h2 class="refsect1">SDO_GEOM.<a id="sthref1853"></a><a id="sthref1854"></a><a id="sthref1855"></a>SDO_MIN_MBR_ORDINATE</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1856"></a>Format</p>
<p class="synopsis">SDO_GEOM.SDO_MIN_MBR_ORDINATE(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;geom IN SDO_GEOMETRY,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ordinate_pos IN NUMBER</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) RETURN NUMBER;</p>
<p>or</p>
<p class="synopsis">SDO_GEOM.SDO_MIN_MBR_ORDINATE(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;geom IN SDO_GEOMETRY,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dim IN SDO_DIM_ARRAY,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ordinate_pos IN NUMBER</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) RETURN NUMBER;</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1857"></a>Description</p>
<p>Returns the minimum value for the specified ordinate (dimension) of the minimum bounding rectangle of a geometry object.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1858"></a>Parameters</p>
<dl>
<dt>geom</dt>
<dd>
<p>Geometry object.</p>
</dd>
<dt>dim</dt>
<dd>
<p>Dimensional information array corresponding to <code>geom</code>, usually selected from one of the xxx_SDO_GEOM_METADATA views (described in <a href="sdo_objrelschema.htm#i1001937">Section 2.8</a>).</p>
</dd>
<dt>ordinate_pos</dt>
<dd>
<p>Position of the ordinate (dimension) in the definition of the geometry object: 1 for the first ordinate, 2 for the second ordinate, and so on. For example, if <code>geom</code> has X, Y ordinates, 1 identifies the X ordinate and 2 identifies the Y ordinate.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1859"></a>Usage Notes</p>
<p>None.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1860"></a>Examples</p>
<p>The following example returns the minimum X (first) ordinate value of the minimum bounding rectangle of the <code>cola_d</code> geometry in the COLA_MARKETS table. (The example uses the definitions and data from <a href="sdo_objrelschema.htm#i1004750">Section 2.1</a>. The minimum bounding rectangle of <code>cola_d</code> is returned in the example for the <a href="#i866042">SDO_GEOM.SDO_MBR</a> function.)</p>
<pre>
SELECT SDO_GEOM.SDO_MIN_MBR_ORDINATE(c.shape, m.diminfo, 1)
  FROM cola_markets c, user_sdo_geom_metadata m
  WHERE m.table_name = 'COLA_MARKETS' AND m.column_name = 'SHAPE' 
  AND c.name = 'cola_d';

SDO_GEOM.SDO_MIN_MBR_ORDINATE(C.SHAPE,M.DIMINFO,1)                              
--------------------------------------------------                              
                                                 6 
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1861"></a>Related Topics</p>
<ul>
<li>
<p><a href="#i866249">SDO_GEOM.SDO_MAX_MBR_ORDINATE</a></p>
</li>
<li>
<p><a href="#i866042">SDO_GEOM.SDO_MBR</a></p>
</li>
</ul>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" -->
<a id="i860858"></a>
<div id="SPATL1124" class="refsect1">
<h2 class="refsect1">SDO_GEOM.<a id="sthref1862"></a><a id="sthref1863"></a><a id="sthref1864"></a><a id="sthref1865"></a>SDO_POINTONSURFACE</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1866"></a>Format</p>
<p class="synopsis">SDO_GEOM.SDO_POINTONSURFACE(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;geom1 IN SDO_GEOMETRY,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dim1 IN SDO_DIM_ARRAY</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) RETURN SDO_GEOMETRY;</p>
<p>or</p>
<p class="synopsis">SDO_GEOM.SDO_POINTONSURFACE(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;geom1 IN SDO_GEOMETRY,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tol IN NUMBER</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) RETURN SDO_GEOMETRY;</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1867"></a>Description</p>
<p>Returns a point that is guaranteed to be on the surface of a polygon geometry object.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1868"></a>Parameters</p>
<dl>
<dt>geom1</dt>
<dd>
<p>Polygon geometry object.</p>
</dd>
<dt>dim1</dt>
<dd>
<p>Dimensional information array corresponding to <code>geom1</code>, usually selected from one of the xxx_SDO_GEOM_METADATA views (described in <a href="sdo_objrelschema.htm#i1001937">Section 2.8</a>).</p>
</dd>
<dt>tol</dt>
<dd>
<p>Tolerance value (see <a href="sdo_intro.htm#i884589">Section 1.5.5</a>).</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1869"></a>Usage Notes</p>
<p>This function returns a point geometry object representing a point that is guaranteed to be on the surface of <code>geom1</code>; however, it is not guaranteed to be an interior point. (That is, it can be on the boundary or edge of <code>geom1</code>.)</p>
<p>The returned point can be any point on the surface. You should not make any assumptions about where on the surface the returned point is, or about whether the point is the same or different when the function is called multiple times with the same input parameter values.</p>
<p>In most cases this function is less useful than the <a href="sdo_util.htm#BJEHCBAG">SDO_UTIL.INTERIOR_POINT</a> function, which returns a point that is guaranteed to be an interior point.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1870"></a>Examples</p>
<p>The following example returns a geometry object that is a point on the surface of <code>cola_a</code>. (The example uses the definitions and data from <a href="sdo_objrelschema.htm#i1004750">Section 2.1</a>.)</p>
<pre>
-- Return a point on the surface of a geometry.
SELECT SDO_GEOM.SDO_POINTONSURFACE(c.shape, m.diminfo) 
  FROM cola_markets c, user_sdo_geom_metadata m 
  WHERE m.table_name = 'COLA_MARKETS' AND m.column_name = 'SHAPE' 
  AND c.name = 'cola_a';

SDO_GEOM.SDO_POINTONSURFACE(C.SHAPE,M.DIMINFO)(SDO_GTYPE, SDO_SRID, SDO_POINT(X,
--------------------------------------------------------------------------------
SDO_GEOMETRY(2001, NULL, NULL, SDO_ELEM_INFO_ARRAY(1, 1, 1), SDO_ORDINATE_ARRAY(
1, 1))
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1871"></a>Related Topics</p>
<p>None.</p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" -->
<a id="CACBGJEB"></a>
<div id="SPATL1421" class="refsect1">
<h2 class="refsect1">SDO_GEOM.<a id="sthref1872"></a><a id="sthref1873"></a><a id="sthref1874"></a>SDO_TRIANGULATE</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1875"></a>Format</p>
<p class="synopsis">SDO_GEOM.SDO_TRIANGULATE(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;geom IN SDO_GEOMETRY,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tol IN NUMBER</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) RETURN SDO_GEOMETRY;</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1876"></a>Description</p>
<p>Returns a geometry with triangular elements that result from Delaunay triangulation of the input geometry.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1877"></a>Parameters</p>
<dl>
<dt>geom</dt>
<dd>
<p>Geometry object.</p>
</dd>
<dt>tol</dt>
<dd>
<p>Tolerance value (see <a href="sdo_intro.htm#i884589">Section 1.5.5</a>).</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1878"></a>Usage Notes</p>
<p>This function takes all coordinates from the input geometry, uses them to compute Delaunay triangulations, and returns a geometry object, each element of which is a triangle.</p>
<p>An exception is raised if <code>geom</code> has fewer than three points or vertices, or consists of multiple points all in a straight line.</p>
<p>With geodetic data, this function is supported by approximations, as explained in <a href="sdo_cs_concepts.htm#i894707">Section 6.10.3</a>.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1879"></a>Examples</p>
<p>The following example returns a geometry object that consists of triangular elements (two in this case) comprising the <code>cola_c</code> polygon geometry. (The example uses the definitions and data from <a href="sdo_objrelschema.htm#i1004750">Section 2.1</a>.</p>
<pre>
-- Return triangles comprising a specified polygon.
SELECT c.name, SDO_GEOM.SDO_TRIANGULATE(c.shape, 0.005)
  FROM cola_markets c WHERE c.name = 'cola_c';
 
NAME                                                                            
--------------------------------                                                
SDO_GEOM.SDO_TRIANGULATE(C.SHAPE,0.005)(SDO_GTYPE, SDO_SRID, SDO_POINT(X, Y, Z),
--------------------------------------------------------------------------------
cola_c                                                                          
SDO_GEOMETRY(2007, NULL, NULL, SDO_ELEM_INFO_ARRAY(1, 1003, 1, 9, 1003, 1), SDO_
ORDINATE_ARRAY(3, 3, 6, 3, 4, 5, 3, 3, 4, 5, 6, 3, 6, 5, 4, 5))
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1880"></a>Related Topics</p>
<p><a href="#CACDIECC">SDO_GEOM.SDO_ALPHA_SHAPE</a></p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" -->
<a id="i857624"></a>
<div id="SPATL1125" class="refsect1">
<h2 class="refsect1">SDO_GEOM.<a id="sthref1881"></a><a id="sthref1882"></a><a id="sthref1883"></a>SDO_UNION</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1884"></a>Format</p>
<p class="synopsis">SDO_GEOM.SDO_UNION(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;geom1 IN SDO_GEOMETRY,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dim1 IN SDO_DIM_ARRAY,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;geom2 IN SDO_GEOMETRY,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dim2 IN SDO_DIM_ARRAY</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) RETURN SDO_GEOMETRY;</p>
<p>or</p>
<p class="synopsis">SDO_GEOM.SDO_UNION(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;geom1 IN SDO_GEOMETRY,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;geom2 IN SDO_GEOMETRY,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tol IN NUMBER</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) RETURN SDO_GEOMETRY;</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1885"></a>Description</p>
<p>Returns a geometry object that is the topological union (OR operation) of two geometry objects.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1886"></a>Parameters</p>
<dl>
<dt>geom1</dt>
<dd>
<p>Geometry object.</p>
</dd>
<dt>dim1</dt>
<dd>
<p>Dimensional information array corresponding to <code>geom1</code>, usually selected from one of the xxx_SDO_GEOM_METADATA views (described in <a href="sdo_objrelschema.htm#i1001937">Section 2.8</a>).</p>
</dd>
<dt>geom2</dt>
<dd>
<p>Geometry object.</p>
</dd>
<dt>dim2</dt>
<dd>
<p>Dimensional information array corresponding to <code>geom2</code>, usually selected from one of the xxx_SDO_GEOM_METADATA views (described in <a href="sdo_objrelschema.htm#i1001937">Section 2.8</a>).</p>
</dd>
<dt>tol</dt>
<dd>
<p>Tolerance value (see <a href="sdo_intro.htm#i884589">Section 1.5.5</a>).</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1887"></a>Usage Notes</p>
<p>In <a href="#i858294">Figure 24-4</a>, the shaded area represents the polygon returned when SDO_UNION is used with a square (<code>geom1</code>) and another polygon (<code>geom2</code>).</p>
<div id="SPATL1126" class="figure">
<p class="titleinfigure"><a id="i858294"></a>Figure 24-4 SDO_GEOM.SDO_UNION</p>
<img width="217" height="145" src="img/sdounion.gif" alt="Description of Figure 24-4 follows" /><br />
<a id="sthref1888" href="img_text/sdounion.htm">Description of "Figure 24-4 SDO_GEOM.SDO_UNION"</a><br />
<br /></div>
<!-- class="figure" -->
<p>If it is sufficient to append one geometry to another geometry without performing a topological union operation, and if both geometries are disjoint, using the <a href="sdo_util.htm#BJEDEFBA">SDO_UTIL.APPEND</a> function (described in <a href="sdo_util.htm#CEGCFDED">Chapter 32</a>) is faster than using the SDO_UNION function.</p>
<p>An exception is raised if <code>geom1</code> and <code>geom2</code> are based on different coordinate systems.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1889"></a>Examples</p>
<p>The following example returns a geometry object that is the topological union (OR operation) of <code>cola_a</code> and <code>cola_c</code>. (The example uses the definitions and data from <a href="sdo_objrelschema.htm#i1004750">Section 2.1</a>.)</p>
<pre>
-- Return the topological union of two geometries.
SELECT SDO_GEOM.SDO_UNION(c_a.shape, m.diminfo, c_c.shape, m.diminfo) 
  FROM cola_markets c_a, cola_markets c_c, user_sdo_geom_metadata m 
  WHERE m.table_name = 'COLA_MARKETS' AND m.column_name = 'SHAPE' 
  AND c_a.name = 'cola_a' AND c_c.name = 'cola_c';

SDO_GEOM.SDO_UNION(C_A.SHAPE,M.DIMINFO,C_C.SHAPE,M.DIMINFO)(SDO_GTYPE, SDO_SRID,
--------------------------------------------------------------------------------
SDO_GEOMETRY(2003, NULL, NULL, SDO_ELEM_INFO_ARRAY(1, 1003, 1), SDO_ORDINATE_ARR
AY(5, 5, 5, 7, 1, 7, 1, 1, 5, 1, 5, 3, 6, 3, 6, 5, 5, 5))
</pre>
<p>Note that in the returned polygon, the SDO_ORDINATE_ARRAY starts and ends at the same point (5, 5).</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1890"></a>Related Topics</p>
<ul>
<li>
<p><a href="#i857512">SDO_GEOM.SDO_DIFFERENCE</a></p>
</li>
<li>
<p><a href="#i857570">SDO_GEOM.SDO_INTERSECTION</a></p>
</li>
<li>
<p><a href="#i857842">SDO_GEOM.SDO_XOR</a></p>
</li>
</ul>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" -->
<a id="CACHCHEH"></a>
<div id="SPATL1127" class="refsect1">
<h2 class="refsect1">SDO_GEOM.<a id="sthref1891"></a><a id="sthref1892"></a><a id="sthref1893"></a><a id="sthref1894"></a>SDO_VOLUME</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1895"></a>Format</p>
<p class="synopsis">SDO_GEOM.SDO_VOLUME(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;geom IN SDO_GEOMETRY,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tol IN NUMBER</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[, unit IN VARCHAR2]</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) RETURN NUMBER;</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1896"></a>Description</p>
<p>Returns the volume of a three-dimensional solid.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1897"></a>Parameters</p>
<dl>
<dt>geom</dt>
<dd>
<p>Geometry object.</p>
</dd>
<dt>tol</dt>
<dd>
<p>Tolerance value (see <a href="sdo_intro.htm#i884589">Section 1.5.5</a>).</p>
</dd>
<dt>unit</dt>
<dd>
<p>Unit of measurement: a quoted string with <code>unit=</code> and volume unit (for example, <code>'unit=CUBIC_FOOT'</code> or <code>'unit=CUBIC_METER'</code>). For a list of volume units, enter the following query:</p>
<pre>
SELECT short_name FROM mdsys.sdo_units_of_measure WHERE unit_of_meas_type = 'volume';
</pre>
<p>See <a href="sdo_objrelschema.htm#i1010145">Section 2.10</a> for more information about unit of measurement specification.</p>
<p>If this parameter is not specified, the unit of measurement associated with the data is assumed.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1898"></a>Usage Notes</p>
<p>This function works with any solid, including solids with holes.</p>
<p>This function is not supported with geodetic data.</p>
<p>For information about support for three-dimensional geometries, see <a href="sdo_intro.htm#BABIDJJB">Section 1.11</a>.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1899"></a>Examples</p>
<p>The following example returns the volume of a solid geometry object.</p>
<pre>
-- Return the volume of a solid geometry.
SELECT p.id, SDO_GEOM.SDO_VOLUME(p.geometry, 0.005) FROM polygons3d p
  WHERE p.id = 12;

        ID SDO_GEOM.SDO_VOLUME(P.GEOMETRY,0.005)
---------- -------------------------------------
        12                                     6
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1900"></a>Related Topics</p>
<p>None.</p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" -->
<a id="i857842"></a>
<div id="SPATL1128" class="refsect1">
<h2 class="refsect1">SDO_GEOM.<a id="sthref1901"></a><a id="sthref1902"></a><a id="sthref1903"></a>SDO_XOR</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1904"></a>Format</p>
<p class="synopsis">SDO_GEOM.SDO_XOR(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;geom1 IN SDO_XOR,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dim1 IN SDO_DIM_ARRAY,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;geom2 IN SDO_GEOMETRY,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dim2 IN SDO_DIM_ARRAY</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) RETURN SDO_GEOMETRY;</p>
<p>or</p>
<p class="synopsis">SDO_GEOM.SDO_XOR(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;geom1 IN SDO_GEOMETRY,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;geom2 IN SDO_GEOMETRY,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tol IN NUMBER</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) RETURN SDO_GEOMETRY;</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1905"></a>Description</p>
<p>Returns a geometry object that is the topological symmetric difference (XOR operation) of two geometry objects.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1906"></a>Parameters</p>
<dl>
<dt>geom1</dt>
<dd>
<p>Geometry object.</p>
</dd>
<dt>dim1</dt>
<dd>
<p>Dimensional information array corresponding to <code>geom1</code>, usually selected from one of the xxx_SDO_GEOM_METADATA views (described in <a href="sdo_objrelschema.htm#i1001937">Section 2.8</a>).</p>
</dd>
<dt>geom2</dt>
<dd>
<p>Geometry object.</p>
</dd>
<dt>dim2</dt>
<dd>
<p>Dimensional information array corresponding to <code>geom2</code>, usually selected from one of the xxx_SDO_GEOM_METADATA views (described in <a href="sdo_objrelschema.htm#i1001937">Section 2.8</a>).</p>
</dd>
<dt>tol</dt>
<dd>
<p>Tolerance value (see <a href="sdo_intro.htm#i884589">Section 1.5.5</a>).</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1907"></a>Usage Notes</p>
<p>In <a href="#i863866">Figure 24-5</a>, the shaded area represents the polygon returned when SDO_XOR is used with a square (<code>geom1</code>) and another polygon (<code>geom2</code>).</p>
<div id="SPATL1129" class="figure">
<p class="titleinfigure"><a id="i863866"></a>Figure 24-5 SDO_GEOM.SDO_XOR</p>
<img width="217" height="145" src="img/sdoxor.gif" alt="Description of Figure 24-5 follows" /><br />
<a id="sthref1908" href="img_text/sdoxor.htm">Description of "Figure 24-5 SDO_GEOM.SDO_XOR"</a><br />
<br /></div>
<!-- class="figure" -->
<p>An exception is raised if <code>geom1</code> and <code>geom2</code> are based on different coordinate systems.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1909"></a>Examples</p>
<p>The following example returns a geometry object that is the topological symmetric difference (XOR operation) of <code>cola_a</code> and <code>cola_c</code>. (The example uses the definitions and data from <a href="sdo_objrelschema.htm#i1004750">Section 2.1</a>.)</p>
<pre>
-- Return the topological symmetric difference of two geometries.
SELECT SDO_GEOM.SDO_XOR(c_a.shape, m.diminfo, c_c.shape, m.diminfo) 
  FROM cola_markets c_a, cola_markets c_c, user_sdo_geom_metadata m 
  WHERE m.table_name = 'COLA_MARKETS' AND m.column_name = 'SHAPE' 
  AND c_a.name = 'cola_a' AND c_c.name = 'cola_c';

SDO_GEOM.SDO_XOR(C_A.SHAPE,M.DIMINFO,C_C.SHAPE,M.DIMINFO)(SDO_GTYPE, SDO_SRID, S
--------------------------------------------------------------------------------
SDO_GEOMETRY(2007, NULL, NULL, SDO_ELEM_INFO_ARRAY(1, 1003, 1, 19, 1003, 1), SDO
_ORDINATE_ARRAY(1, 7, 1, 1, 5, 1, 5, 3, 3, 3, 4, 5, 5, 5, 5, 7, 1, 7, 5, 5, 5, 3
, 6, 3, 6, 5, 5, 5))
</pre>
<p>Note that the returned polygon is a multipolygon (SDO_GTYPE = 2007), and the SDO_ORDINATE_ARRAY describes two polygons: one starting and ending at (1, 7) and the other starting and ending at (5, 5).</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1910"></a>Related Topics</p>
<ul>
<li>
<p><a href="#i857512">SDO_GEOM.SDO_DIFFERENCE</a></p>
</li>
<li>
<p><a href="#i857570">SDO_GEOM.SDO_INTERSECTION</a></p>
</li>
<li>
<p><a href="#i857624">SDO_GEOM.SDO_UNION</a></p>
</li>
</ul>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" -->
<a id="BGHFDDBF"></a>
<div id="SPATL1130" class="refsect1">
<h2 class="refsect1">SDO_GEOM.<a id="sthref1911"></a><a id="sthref1912"></a><a id="sthref1913"></a>VALIDATE_GEOMETRY_WITH_CONTEXT</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1914"></a>Format</p>
<p class="synopsis">SDO_GEOM.VALIDATE_GEOMETRY_WITH_CONTEXT(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;theGeometry IN SDO_GEOMETRY,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;theDimInfo IN SDO_DIM_ARRAY,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;conditional IN VARCHAR2 DEFAULT 'TRUE' ,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;flag10g IN VARCHAR2 DEFAULT 'FALSE'</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) RETURN VARCHAR2;</p>
<p>or</p>
<p class="synopsis">SDO_GEOM.VALIDATE_GEOMETRY_WITH_CONTEXT(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;theGeometry IN SDO_GEOMETRY,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tolerance IN NUMBER,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;conditional IN VARCHAR2 DEFAULT 'TRUE' ,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;flag10g IN VARCHAR2 DEFAULT 'FALSE'</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) RETURN VARCHAR2;</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1915"></a>Description</p>
<p>Performs a <a id="sthref1916"></a>consistency check for valid geometry types and returns context information if the geometry is invalid. The function checks the representation of the geometry from the tables against the element definitions.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1917"></a>Parameters</p>
<dl>
<dt>theGeometry</dt>
<dd>
<p>Geometry object.</p>
</dd>
<dt>theDimInfo</dt>
<dd>
<p>Dimensional information array corresponding to <code>theGeometry</code>, usually selected from one of the xxx_SDO_GEOM_METADATA views (described in <a href="sdo_objrelschema.htm#i1001937">Section 2.8</a>).</p>
</dd>
<dt>tolerance</dt>
<dd>
<p>Tolerance value (see <a href="sdo_intro.htm#i884589">Section 1.5.5</a>).</p>
</dd>
<dt>conditional</dt>
<dd>
<p>Conditional flag; relevant only for a three-dimensional composite surface or composite solid. A string value of <code>TRUE</code> (the default) causes validation to fail if two outer rings are on the same plane and share an edge; a string value of <code>FALSE</code> does not cause validation to fail if two outer rings are on the same plane and share an edge.</p>
</dd>
<dt>flag10g</dt>
<dd>
<p>Oracle Database 10<span class="italic">g</span> compatibility flag. A string value of <code>TRUE</code> causes only validation checks specific to two-dimensional geometries to be performed, and no 3D-specific validation checks to be performed. A string value of <code>FALSE</code> (the default) performs all validation checks that are relevant for the geometry. (See the Usage Notes for more information about the <code>flag10g</code> parameter.)</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1918"></a>Usage Notes</p>
<p>If the geometry is valid, this function returns TRUE. (For a user-defined geometry, that is, a geometry with an SDO_GTYPE value of 2000, this function returns the string NULL.)</p>
<p>If the geometry is not valid, this function returns the following:</p>
<ul>
<li>
<p>An Oracle error message number based on the specific reason the geometry is invalid, or FALSE if the geometry fails for some other reason</p>
</li>
<li>
<p>The context of the error (the coordinate, edge, or ring that causes the geometry to be invalid). (See <a href="#CACDHEDE">"Context of Errors: Details"</a> in this section.)</p>
</li>
</ul>
<p>This function checks for type consistency and geometry consistency.</p>
<p>For type consistency, the function checks for the following:</p>
<ul>
<li>
<p>The SDO_GTYPE is valid.</p>
</li>
<li>
<p>The SDO_ETYPE values are consistent with the SDO_GTYPE value. For example, if the SDO_GTYPE is 2003, there should be at least one element of type POLYGON in the geometry.</p>
</li>
<li>
<p>The SDO_ELEM_INFO_ARRAY has valid triplet values.</p>
</li>
</ul>
<p>For geometry consistency, the function checks for the following, as appropriate for the specific geometry type:</p>
<ul>
<li>
<p>Polygons have at least four points, which includes the point that closes the polygon. (The last point is the same as the first.)</p>
</li>
<li>
<p>Polygons are not self-crossing.</p>
</li>
<li>
<p>No two vertices on a line or polygon are the same.</p>
</li>
<li>
<p>Polygons are oriented correctly. (Exterior ring boundaries must be oriented counterclockwise, and interior ring boundaries must be oriented clockwise.)</p>
</li>
<li>
<p>An interior polygon ring touches the exterior polygon ring at no more than one point.</p>
</li>
<li>
<p>If two or more interior polygon rings are in an exterior polygon ring, the interior polygon rings touch at no more than one point.</p>
</li>
<li>
<p>Line strings have at least two points.</p>
</li>
<li>
<p>SDO_ETYPE 1-digit and 4-digit values are not mixed (that is, both used) in defining polygon ring elements.</p>
</li>
<li>
<p>Points on an arc are not colinear (that is, are not on a straight line) and are not the same point.</p>
</li>
<li>
<p>Geometries are within the specified bounds of the applicable DIMINFO column value (from the USER_SDO_GEOM_METADATA view).</p>
</li>
<li>
<p>LRS geometries (see <a href="sdo_lrs_concepts.htm#BABIIFFH">Chapter 7</a>) have three or four dimensions and a valid measure dimension position (3 or 4, depending on the number of dimensions).</p>
</li>
</ul>
<p>For COLLECTION type geometries, some of the preceding checks mentioned above are not performed. Specifically, interior ring checks and polygon-polygon overlap checks are not performed for polygon elements of the COLLECTION type geometry.</p>
<p>For multipoint geometries, this function checks for duplicate vertices with three-dimensional geometries, but not with two-dimensional geometries.</p>
<p>For three-dimensional geometries, this function also performs the checks described in <a href="sdo_intro.htm#BABHEJBH">Section 1.11.5</a>.</p>
<p>In checking for geometry consistency, the function considers the geometry's tolerance value in determining if lines touch or if points are the same.</p>
<p>If the function format with <code>tolerance</code> is used, no checking is done to validate that the geometry is within the coordinate system bounds as stored in the DIMINFO field of the USER_SDO_GEOM_METADATA view. If this check is required for your usage, use the function format with <code>theDimInfo</code>.</p>
<p>Setting the <code>flag10g</code> parameter value to <code>TRUE</code> causes the validation logic for Oracle Spatial Release 10.2 to be used, irrespective of the dimensionality of the geometry. This can be useful for allowing three-dimensional geometries that contain geometries in pre-Release 11.1 format to pass the validation check when they would otherwise fail. For example, a three-dimensional line is not valid if it contains circular arcs; and setting <code>flag10g</code> to <code>TRUE</code> will allow such geometries to avoid being considered invalid solely because of the circular arcs. (You should later make these geometries valid according to the criteria for the current release, such as by densifying the circular arcs.)</p>
<p>You can use this function in a PL/SQL procedure as an alternative to using the <a href="#BGHIAAIF">SDO_GEOM.VALIDATE_LAYER_WITH_CONTEXT</a> procedure. See the Usage Notes for <a href="#BGHIAAIF">SDO_GEOM.VALIDATE_LAYER_WITH_CONTEXT</a> for more information.</p>
<p class="subhead2"><a id="CACDHEDE"></a><a id="SPATL1131"></a>Context of Errors: Details</p>
<p>If a geometry is invalid, the result can include information about a combination of the following: coordinates, elements, rings, and edges.</p>
<ul>
<li>
<p><span class="bold">Coordinates</span>: A coordinate refers to a vertex in a geometry. In a two-dimensional geometry, a vertex is two numbers (X and Y, or Longitude and Latitude). In a three-dimensional geometry, a vertex is defined using three numbers; and in a four-dimensional geometry, a vertex is defined using four numbers. (You can use the <a href="sdo_util.htm#BABDEGIA">SDO_UTIL.GETVERTICES</a> function to return the coordinates in a geometry.)</p>
<p>If you receive a geometry validation error such as 13356 (adjacent points in a geometry are redundant), you can call the <a href="sdo_util.htm#BABDEGIA">SDO_UTIL.GETVERTICES</a> function, specifying a rownum stopping condition to include the coordinate one greater than the coordinate indicated with the error. The last two coordinates shown in the output are the redundant coordinates. These coordinates may be exactly the same, or they may be within the user-specified tolerance and thus are considered the same point. You can remove redundant coordinates by using the <a href="sdo_util.htm#BJEBHAJB">SDO_UTIL.REMOVE_DUPLICATE_VERTICES</a> function.</p>
</li>
<li>
<p><span class="bold">Elements</span>: An element is a point, a line string, or an exterior polygon with zero or more corresponding interior polygons. (That is, a polygon element includes the exterior ring and all interior rings associated with that exterior ring.) If a geometry is a multi-element geometry (for example, multiple points, lines, or polygons), the first element is element 1, the second element is element 2, and so on.</p>
</li>
<li>
<p><span class="bold">Rings</span>: A ring is only used with polygon elements. Exterior rings in a polygon are considered polygon elements, and an exterior ring can include zero or more interior rings (or holes). Each interior ring has its own ring designation, but Ring 1 is associated with the exterior polygon itself. For example, Element 1, Ring 1 refers to the first exterior polygon in a geometry; Element 1, Ring 2 refers to the first interior polygon of the first exterior polygon; and Element 1, Ring 3 refers to the second interior polygon. If the geometry is a multipolygon, Element 2, Ring 1 is used to refers to the second exterior polygon. If there are interior polygons associated with it, Element 2, Ring 2 refers to the first interior polygon of the second exterior polygon.</p>
</li>
<li>
<p><span class="bold">Edges</span>: An edge refers to a line segment between two coordinates. Edge 1 refers to the segment between coordinate 1 and coordinate 2, Edge 2 refers to the line segment between coordinates 2 and 3, and so on. <a id="sthref1919"></a><a id="sthref1920"></a>The most common place to see edge errors when validating geometries is with self-intersecting polygons. (The Open Geospatial Consortium simple features specification does not allow a polygon to self-intersect.) In such cases, Oracle reports error 13349 (polygon boundary crosses itself), including the Element, Ring, and Edge numbers where self-intersection occurs.</p>
<p>If error 13351 (shared edge) is returned for an optimized rectangle that spans more than 119 degrees in longitude, some queries on this rectangle will return correct results, as explained in <a href="sdo_cs_concepts.htm#CIHHGHFH">Section 6.2.4</a>.</p>
</li>
</ul>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1921"></a>Examples</p>
<p>The following example validates a geometry (deliberately created as invalid) named <code>cola_invalid_geom</code>.</p>
<pre>
-- Validate; provide context if invalid
SELECT c.name, SDO_GEOM.VALIDATE_GEOMETRY_WITH_CONTEXT(c.shape, 0.005)
   FROM cola_markets c WHERE c.name = 'cola_invalid_geom';

NAME                                                                            
--------------------------------                                                
SDO_GEOM.VALIDATE_GEOMETRY_WITH_CONTEXT(C.SHAPE,0.005)                          
--------------------------------------------------------------------------------
cola_invalid_geom                                                               
13349 [Element &lt;1&gt;] [Ring &lt;1&gt;][Edge &lt;1&gt;][Edge &lt;3&gt;] 
</pre>
<p>In the output for this example, 13349 indicates the error <code>ORA-13349: polygon boundary crosses itself</code>. The first ring of the first element has edges that intersect. The edges that intersect are edge 1 (the first and second vertices) and edge 3 (the third and fourth vertices).</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1922"></a>Related Topics</p>
<ul>
<li>
<p><a href="#BGHIAAIF">SDO_GEOM.VALIDATE_LAYER_WITH_CONTEXT</a></p>
</li>
</ul>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" -->
<a id="BGHIAAIF"></a>
<div id="SPATL1132" class="refsect1">
<h2 class="refsect1">SDO_GEOM.<a id="sthref1923"></a><a id="sthref1924"></a><a id="sthref1925"></a>VALIDATE_LAYER_WITH_CONTEXT</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1926"></a>Format</p>
<p class="synopsis">SDO_GEOM.VALIDATE_LAYER_WITH_CONTEXT(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;geom_table IN VARCHAR2,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;geom_column IN VARCHAR2,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;result_table IN VARCHAR2</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;commit_interval IN NUMBER DEFAULT -1,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;conditional IN VARCHAR2 DEFAULT 'TRUE' ,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;flag10g IN VARCHAR2 DEFAULT 'FALSE');</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1927"></a>Description</p>
<p>Examines a geometry column to determine if the stored geometries follow the defined rules for geometry objects, and returns context information about any invalid geometries.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1928"></a>Parameters</p>
<dl>
<dt>geom_table</dt>
<dd>
<p>Spatial geometry table.</p>
</dd>
<dt>geom_column</dt>
<dd>
<p>Geometry object column to be examined.</p>
</dd>
<dt>result_table</dt>
<dd>
<p>Result table to hold the validation results. A row is added to <code>result_table</code> for each invalid geometry. If there are no invalid geometries, one or more (depending on the <code>commit_interval</code> value) rows with a result of DONE are added.</p>
</dd>
<dt>commit_interval</dt>
<dd>
<p>Number of geometries to validate before Spatial performs an internal commit operation and writes a row with a result of DONE to <code>result_table</code> (if no rows for invalid geometries have been written since the last commit operation). If <code>commit_interval</code> is not specified, no internal commit operations are performed during the validation.</p>
<p>The <code>commit_interval</code> option is helpful if you want to look at the contents of <code>result_table</code> while the validation is in progress.</p>
</dd>
<dt>conditional</dt>
<dd>
<p>Conditional flag; relevant only for a three-dimensional composite surface or composite solid. A string value of <code>TRUE</code> (the default) causes validation to fail if two outer rings are on the same plane and share an edge; a string value of <code>FALSE</code> does not cause validation to fail if two outer rings are on the same plane and share an edge.</p>
</dd>
<dt>flag10g</dt>
<dd>
<p>Oracle Database 10<span class="italic">g</span> compatibility flag. A string value of <code>TRUE</code> causes only validation checks specific to two-dimensional geometries to be performed, and no 3D-specific validation checks to be performed. A string value of <code>FALSE</code> (the default) performs all validation checks that are relevant for the geometries. (See the Usage Notes for the <a href="#BGHFDDBF">SDO_GEOM.VALIDATE_GEOMETRY_WITH_CONTEXT</a> function for more information about the <code>flag10g</code> parameter.)</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1929"></a>Usage Notes</p>
<p>This procedure loads the result table with validation results.</p>
<p>An empty result table (<code>result_table</code> parameter) must be created before calling this procedure. The format of the result table is: (sdo_rowid ROWID, result VARCHAR2(2000)). If <code>result_table</code> is not empty, you should truncate the table before calling the procedure; otherwise, the procedure appends rows to the existing data in the table.</p>
<p>The result table contains one row for each invalid geometry. A row is not written if a geometry is valid, except as follows:</p>
<ul>
<li>
<p>If <code>commit_interval</code> is not specified (or if the <code>commit_interval</code> value is greater than the number of geometries in the layer) and no invalid geometries are found, a single row with a RESULT value of DONE is written.</p>
</li>
<li>
<p>If <code>commit_interval</code> is specified and if no invalid geometries are found between an internal commit and the previous internal commit (or start of validation for the first internal commit), a single row with the primary key of the last geometry validated and a RESULT value of DONE is written. (If there have been no invalid geometries since the last internal commit operation, this row replaces the previous row that had a result of DONE.)</p>
</li>
</ul>
<p>In each row for an invalid geometry, the SDO_ROWID column contains the ROWID value of the row containing the invalid geometry, and the RESULT column contains an Oracle error message number and the context of the error (the coordinate, edge, or ring that causes the geometry to be invalid). You can then look up the error message for more information about the cause of the failure.</p>
<p>This procedure performs the following checks on each geometry in the layer (<code>geom_column</code>):</p>
<ul>
<li>
<p>All type consistency and geometry consistency checks that are performed by the <a href="#BGHFDDBF">SDO_GEOM.VALIDATE_GEOMETRY_WITH_CONTEXT</a> function (see the Usage Notes for that function).</p>
</li>
<li>
<p>The geometry's SRID value (coordinate system) is the same as the one specified in the applicable DIMINFO column value (from the USER_SDO_GEOM_METADATA view, which is described in <a href="sdo_objrelschema.htm#i1001937">Section 2.8</a>).</p>
</li>
</ul>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1930"></a>Examples</p>
<p>The following example validates the geometry objects stored in the SHAPE column of the COLA_MARKETS table. The example includes the creation of the result table. For this example, a deliberately invalid geometry was inserted into the table before the validation was performed.</p>
<pre>
-- Is a layer valid? (First, create the result table.)
CREATE TABLE val_results (sdo_rowid ROWID, result varchar2(1000));
-- (Next statement must be on one command line.)
CALL SDO_GEOM.VALIDATE_LAYER_WITH_CONTEXT('COLA_MARKETS','SHAPE','VAL_RESULTS');

Call completed.

SQL&gt; SELECT * from val_results;

SDO_ROWID                                                                       
------------------                                                              
RESULT                                                                          
--------------------------------------------------------------------------------
                                                                                
Rows Processed &lt;12&gt;                                                             
                                                                                
AAABXNAABAAAK+YAAC                                                              
13349 [Element &lt;1&gt;] [Ring &lt;1&gt;][Edge &lt;1&gt;][Edge &lt;3&gt;] 
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1931"></a>Related Topics</p>
<ul>
<li>
<p><a href="#BGHFDDBF">SDO_GEOM.VALIDATE_GEOMETRY_WITH_CONTEXT</a></p>
</li>
</ul>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" -->
<a id="i856373"></a>
<div id="SPATL1133" class="refsect1">
<h2 class="refsect1">SDO_GEOM.<a id="sthref1932"></a><a id="sthref1933"></a><a id="sthref1934"></a>WITHIN_DISTANCE</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1935"></a>Format</p>
<p class="synopsis">SDO_GEOM.WITHIN_DISTANCE(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;geom1 IN SDO_GEOMETRY,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dim1 IN SDO_DIM_ARRAY,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dist IN NUMBER,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;geom2 IN SDO_GEOMETRY,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dim2 IN SDO_DIM_ARRAY</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[, units IN VARCHAR2]</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) RETURN VARCHAR2;</p>
<p>or</p>
<p class="synopsis">SDO_GEOM.WITHIN_DISTANCE(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;geom1 IN SDO_GEOMETRY,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dist IN NUMBER,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;geom2 IN SDO_GEOMETRY,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tol IN NUMBER</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[, units IN VARCHAR2]</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) RETURN VARCHAR2;</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1936"></a>Description</p>
<p>Determines if two spatial objects are within some specified distance from each other.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1937"></a>Parameters</p>
<dl>
<dt>geom1</dt>
<dd>
<p>Geometry object.</p>
</dd>
<dt>dim1</dt>
<dd>
<p>Dimensional information array corresponding to <code>geom1</code>, usually selected from one of the xxx_SDO_GEOM_METADATA views (described in <a href="sdo_objrelschema.htm#i1001937">Section 2.8</a>).</p>
</dd>
<dt>dist</dt>
<dd>
<p>Distance value.</p>
</dd>
<dt>geom2</dt>
<dd>
<p>Geometry object.</p>
</dd>
<dt>dim2</dt>
<dd>
<p>Dimensional information array corresponding to <code>geom2</code>, usually selected from one of the xxx_SDO_GEOM_METADATA views (described in <a href="sdo_objrelschema.htm#i1001937">Section 2.8</a>).</p>
</dd>
<dt>tol</dt>
<dd>
<p>Tolerance value (see <a href="sdo_intro.htm#i884589">Section 1.5.5</a>).</p>
</dd>
<dt>units</dt>
<dd>
<p>Unit of measurement: a quoted string with <code>unit=</code> and an SDO_UNIT value from the MDSYS.SDO_AREA_UNITS table (for example, 'unit=KM'). See <a href="sdo_objrelschema.htm#i1010145">Section 2.10</a> for more information about unit of measurement specification.</p>
<p>If this parameter is not specified, the unit of measurement associated with the data is assumed. For geodetic data, the default unit of measurement is meters.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1938"></a>Usage Notes</p>
<p>For better performance, use the <a href="sdo_operat.htm#i77653">SDO_WITHIN_DISTANCE</a> operator (described in <a href="sdo_operat.htm#g1001037">Chapter 19</a>) instead of the <code>SDO_GEOM.WITHIN_DISTANCE</code> function. For more information about performance considerations with operators and functions, see <a href="sdo_intro.htm#BAJDEGDH">Section 1.9</a>.</p>
<p>This function returns TRUE for object pairs that are within the specified distance, and FALSE otherwise.</p>
<p>The distance between two extended objects (for example, nonpoint objects such as lines and polygons) is defined as the minimum distance between these two objects. Thus the distance between two adjacent polygons is zero.</p>
<p>An exception is raised if <code>geom1</code> and <code>geom2</code> are based on different coordinate systems.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1939"></a>Examples</p>
<p>The following example checks if <code>cola_b</code> and <code>cola_d</code> are within 1 unit apart at the shortest distance between them. (The example uses the definitions and data from <a href="sdo_objrelschema.htm#i1004750">Section 2.1</a>.)</p>
<pre>
-- Are two geometries within 1 unit of distance apart?
SELECT SDO_GEOM.WITHIN_DISTANCE(c_b.shape, m.diminfo, 1,
     c_d.shape, m.diminfo) 
  FROM cola_markets c_b, cola_markets c_d, user_sdo_geom_metadata m 
  WHERE m.table_name = 'COLA_MARKETS' AND m.column_name = 'SHAPE' 
  AND c_b.name = 'cola_b' AND c_d.name = 'cola_d';

SDO_GEOM.WITHIN_DISTANCE(C_B.SHAPE,M.DIMINFO,1,C_D.SHAPE,M.DIMINFO)        
--------------------------------------------------------------------------------
TRUE   
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1940"></a>Related Topics</p>
<ul>
<li>
<p><a href="#i857957">SDO_GEOM.SDO_DISTANCE</a></p>
</li>
</ul>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" --></div>
<!-- class="refentry" --></div>
<!-- class="chapter" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment733">
<tr>
<td class="cellalignment742">
<table class="cellalignment738">
<tr>
<td class="cellalignment737"><a href="sdo_geocode_ref.htm"><img width="24" height="24" src="../../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment737"><a href="sdo_lrs_ref.htm"><img width="24" height="24" src="../../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;1999, 2013,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment744">
<table class="cellalignment736">
<tr>
<td class="cellalignment737"><a href="../../index.htm"><img width="24" height="24" src="../../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment737"><a href="../../nav/portal_booklist.htm"><img width="24" height="24" src="../../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment737"><a href="toc.htm"><img width="24" height="24" src="../../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment737"><a href="index.htm"><img width="24" height="24" src="../../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment737"><a href="../../nav/mindx.htm"><img width="24" height="24" src="../../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment737"><a href="../../dcommon/html/feedback.htm"><img width="24" height="24" src="../../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>
</body>
</html>
