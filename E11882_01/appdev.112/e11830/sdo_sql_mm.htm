<!DOCTYPE html>
<html lang="en" >
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1">
<meta charset="utf-8">
<title>SQL Multimedia Type Support</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Version 5.1.2 Build 743" />
<meta name="description" content="Provides usage and reference information for indexing and storing spatial data and for developing spatial applications using Oracle Spatial and Graph and Oracle Locator." />
<meta name="dcterms.created" content="2013-11-26T3:11:44Z" />
<meta name="robots" content="all" />
<meta name="dcterms.title" content="Spatial Developer's Guide" />
<meta name="dcterms.identifier" content="E11830-15" />
<meta name="dcterms.isVersionOf" content="SPATL" />
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;1999, 2013,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved." />
<link rel="Start" href="../../index.htm" title="Home" type="text/html" />
<link rel="Copyright" href="../../dcommon/html/cpyr.htm" title="Copyright" type="text/html" />

<script type="application/javascript"  src="../../dcommon/js/headfoot.js"></script>
<script type="application/javascript"  src="../../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html" />
<link rel="Index" href="index.htm" title="Index" type="text/html" />
<link rel="Glossary" href="glossary.htm" title="Glossary" type="text/html" />
<link rel="Prev" href="sdo_objrelschema.htm" title="Previous" type="text/html" />
<link rel="Next" href="sdo_objload.htm" title="Next" type="text/html" />
<link rel="alternate" href="../e11830.pdf" title="PDF version" type="application/pdf" />
<link rel="schema.dcterms" href="http://purl.org/dc/terms/" />
<link rel="stylesheet" href="../../dcommon/css/fusiondoc.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/header.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/footer.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/fonts.css">
<link rel="stylesheet" href="../../dcommon/css/foundation.css">
<link rel="stylesheet" href="../../dcommon/css/codemirror.css">
<link rel="stylesheet" type="text/css" title="Default" href="../../nav/css/html5.css">
<link rel="stylesheet" href="../../dcommon/css/respond-480-tablet.css">
<link rel="stylesheet" href="../../dcommon/css/respond-768-laptop.css">
<link rel="stylesheet" href="../../dcommon/css/respond-1140-deskop.css">
<script type="application/javascript" src="../../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">11/51</span> <!-- End Header -->
<div id="SPATL025" class="chapter"><a id="CHDCADHC"></a>
<h1 class="chapter"><span class="secnum">3</span> SQL <a id="sthref324"></a>Multimedia Type Support</h1>
<p>This chapter explains the support within Oracle Spatial for the use of the ST_<span class="italic">xxx</span> types specified in <span class="italic">ISO 13249-3, Information technology - Database languages - SQL Multimedia and Application Packages - Part 3: Spatial</span>. This chapter contains the following major sections:</p>
<ul>
<li>
<p><a href="#CHDJHAFA">Section 3.1, "ST_GEOMETRY and SDO_GEOMETRY Interoperability"</a></p>
</li>
<li>
<p><a href="#CHDCHJJJ">Section 3.3, "Tolerance Value with SQL Multimedia Types"</a></p>
</li>
<li>
<p><a href="#CHDCDAGF">Section 3.4, "Avoiding Name Conflicts"</a></p>
</li>
<li>
<p><a href="#CHDBIAFE">Section 3.5, "Annotation Text Type and Views"</a></p>
</li>
</ul>
<a id="CHDJHAFA"></a>
<div id="SPATL563" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1"><span class="secnum">3.1</span> <a id="sthref325"></a><a id="sthref326"></a>ST_GEOMETRY and SDO_GEOMETRY Interoperability</h2>
<p>The SQL Multimedia ST_GEOMETRY root type, including its subtypes, and the Oracle Spatial SDO_GEOMETRY type (described in <a href="sdo_objrelschema.htm#i1004087">Section 2.2</a>) are essentially interoperable. The ST_GEOMETRY subtypes are:</p>
<ul>
<li>
<p>ST_CIRCULARSTRING</p>
</li>
<li>
<p>ST_COMPOUNDCURVE</p>
</li>
<li>
<p>ST_CURVE</p>
</li>
<li>
<p>ST_CURVEPOLYGON</p>
</li>
<li>
<p>ST_GEOMCOLLECTION</p>
</li>
<li>
<p>ST_LINESTRING</p>
</li>
<li>
<p>ST_MULTICURVE</p>
</li>
<li>
<p>ST_MULTILINESTRING</p>
</li>
<li>
<p>ST_MULTIPOINT</p>
</li>
<li>
<p>ST_MULTIPOLYGON</p>
</li>
<li>
<p>ST_MULTISURFACE</p>
</li>
<li>
<p>ST_POINT</p>
</li>
<li>
<p>ST_POLYGON</p>
</li>
<li>
<p>ST_SURFACE</p>
</li>
</ul>
<p>The ST_GEOMETRY type has an additional constructor method (that is, in addition to the constructors defined in the ISO standard) for creating an instance of the type using an SDO_GEOMETRY object. This constructor has the following format:</p>
<pre>
ST_GEOMETRY(geom SDO_GEOMETRY);
</pre>
<p><a href="#CHDGHJJD">Example 3-1</a> creates a table using the ST_GEOMETRY type for a spatial column instead of the SDO_GEOMETRY type, and it uses the ST_GEOMETRY constructor to specify the SHAPE column value when inserting a row into that table.</p>
<div id="SPATL564" class="example">
<p class="titleinexample"><a id="CHDGHJJD"></a>Example 3-1 Using the ST_GEOMETRY Type for a Spatial Column</p>
<pre>
CREATE TABLE cola_markets (
  mkt_id NUMBER PRIMARY KEY,
  name VARCHAR2(32),
  shape <span class="bold">ST_GEOMETRY</span>);
 
INSERT INTO cola_markets VALUES(
  1,
  'cola_a',
  <span class="bold">ST_GEOMETRY</span>(
    SDO_GEOMETRY(
      2003,  -- two-dimensional polygon
      NULL,
      NULL,
      SDO_ELEM_INFO_ARRAY(1,1003,3), -- one rectangle (1003 = exterior)
      SDO_ORDINATE_ARRAY(1,1, 5,7) -- only 2 points needed to
            -- define rectangle (lower left and upper right) with
            -- Cartesian-coordinate data
    )
  )
);
</pre></div>
<!-- class="example" -->
<p>If you create a table with a spatial column of type ST_GEOMETRY, you should add its information to the USER_SDO_GEOM_METADATA view and create a spatial index on the ST_GEOMETRY column, just as you would for spatial data defined using the SDO_GEOMETRY type. After you have performed these operations, you can use Oracle Spatial operators (described in <a href="sdo_operat.htm#g1001037">Chapter 19</a>) in the ST_GEOMETRY data. In addition to the operators defined in the standard, you can use the <a href="sdo_operat.htm#i78067">SDO_NN</a> and <a href="sdo_operat.htm#i77653">SDO_WITHIN_DISTANCE</a> operators.</p>
<p><a href="#CHDHCJIB">Example 3-2</a> performs many of the same basic operations as in <a href="sdo_objrelschema.htm#i1004730">Example 2-1</a> in <a href="sdo_objrelschema.htm#i1004750">Section 2.1</a>, but it uses the ST_GEOMETRY type instead of the SDO_GEOMETRY type for the spatial column.</p>
<div id="SPATL565" class="example">
<p class="titleinexample"><a id="CHDHCJIB"></a>Example 3-2 Creating, Indexing, Storing, and Querying ST_GEOMETRY Data</p>
<pre>
CREATE TABLE cola_markets (
  mkt_id NUMBER PRIMARY KEY,
  name VARCHAR2(32),
  shape ST_GEOMETRY);
 
INSERT INTO cola_markets VALUES(
  1,
  'cola_a',
  ST_GEOMETRY(
    SDO_GEOMETRY(
      2003,  -- two-dimensional polygon
      NULL,
      NULL,
      SDO_ELEM_INFO_ARRAY(1,1003,3), -- one rectangle (1003 = exterior)
      SDO_ORDINATE_ARRAY(1,1, 5,7) -- only 2 points needed to
            -- define rectangle (lower left and upper right) with
            -- Cartesian-coordinate data
    )
  )
);
 
INSERT INTO cola_markets VALUES(
  2,
  'cola_b',
  ST_GEOMETRY(
    SDO_GEOMETRY(
      2003,  -- two-dimensional polygon
      NULL,
      NULL,
      SDO_ELEM_INFO_ARRAY(1,1003,1), -- one polygon (exterior polygon ring)
      SDO_ORDINATE_ARRAY(5,1, 8,1, 8,6, 5,7, 5,1)
    )
  )
);
 
INSERT INTO cola_markets VALUES(
  3,
  'cola_c',
  ST_GEOMETRY(
    SDO_GEOMETRY(
      2003,  -- two-dimensional polygon
      NULL,
      NULL,
      SDO_ELEM_INFO_ARRAY(1,1003,1), -- one polygon (exterior polygon ring)
      SDO_ORDINATE_ARRAY(3,3, 6,3, 6,5, 4,5, 3,3)
    )
  )
);
 
INSERT INTO cola_markets VALUES(
  4,
  'cola_d',
  ST_GEOMETRY(
    SDO_GEOMETRY(
      2003,  -- two-dimensional polygon
      NULL,
      NULL,
      SDO_ELEM_INFO_ARRAY(1,1003,4), -- one circle
      SDO_ORDINATE_ARRAY(8,7, 10,9, 8,11)
    )
  )
);
 
---------------------------------------------------------------------------
-- UPDATE METADATA VIEW --
---------------------------------------------------------------------------
 
-- Update the USER_SDO_GEOM_METADATA view. This is required before
-- the spatial index can be created. Do this only once for each layer
-- (that is, table-column combination; here: cola_markets and shape).
 
INSERT INTO user_sdo_geom_metadata
    (TABLE_NAME,
     COLUMN_NAME,
     DIMINFO,
     SRID) 
  VALUES (
    'cola_markets',
    'shape',
    SDO_DIM_ARRAY(   -- 20X20 grid
      SDO_DIM_ELEMENT('X', 0, 20, 0.005),
      SDO_DIM_ELEMENT('Y', 0, 20, 0.005)
       ),
    NULL   -- SRID
  );
 
-------------------------------------------------------------------
-- CREATE THE SPATIAL INDEX --
-------------------------------------------------------------------
 
CREATE INDEX cola_spatial_idx
ON cola_markets(shape)
INDEXTYPE IS MDSYS.SPATIAL_INDEX;
 
---------------------------
-- SDO_NN and SDO_WITHIN_DISTANCE
--------------------------
 
-- SDO_NN operator.
 
SELECT  /*+ INDEX(c cola_spatial_idx) */ c.mkt_id, c.name  
   FROM cola_markets c  
   WHERE SDO_NN(c.shape,  sdo_geometry(2001, NULL, 
      sdo_point_type(10,7,NULL), NULL,  NULL),  'sdo_num_res=2') = 'TRUE'; 
 
-- SDO_NN_DISTANCE ancillary operator
 
SELECT   /*+ INDEX(c cola_spatial_idx) */ 
   c.mkt_id, c.name, SDO_NN_DISTANCE(1) dist
   FROM cola_markets c  
   WHERE SDO_NN(c.shape,  sdo_geometry(2001, NULL, 
      sdo_point_type(10,7,NULL), NULL,  NULL),
      'sdo_num_res=2', 1) = 'TRUE' ORDER BY dist; 
 
-- SDO_WITHIN_DISTANCE operator (two examples)
 
SELECT c.name FROM cola_markets c WHERE SDO_WITHIN_DISTANCE(c.shape, 
  SDO_GEOMETRY(2003, NULL, NULL, SDO_ELEM_INFO_ARRAY(1,1003,3), 
    SDO_ORDINATE_ARRAY(4,6, 8,8)), 
  'distance=10') = 'TRUE';  
 
-- What geometries are within a distance of 10 from a query window
-- (here, a rectangle with lower-left, upper-right coordinates 4,6, 8,8)?
-- But exclude geoms with MBRs with both sides &lt; 4.1, i.e., cola_c and cola_d.
 
SELECT c.name FROM cola_markets c WHERE SDO_WITHIN_DISTANCE(c.shape, 
  SDO_GEOMETRY(2003, NULL, NULL, SDO_ELEM_INFO_ARRAY(1,1003,3), 
    SDO_ORDINATE_ARRAY(4,6, 8,8)), 
  'distance=10 min_resolution=4.1') = 'TRUE';  
 
-------------------------------------
-- Some ST_GEOMETRY member functions
-------------------------------------
 
SELECT c.shape.GET_WKB() 
  FROM cola_markets c WHERE c.name = 'cola_b';
 
SELECT c.shape.GET_WKT() 
  FROM cola_markets c WHERE c.name = 'cola_b';
 
SELECT c.shape.ST_COORDDIM()
  FROM cola_markets c WHERE c.name = 'cola_b';
 
SELECT c.shape.ST_ISVALID() 
  FROM cola_markets c WHERE c.name = 'cola_b';
 
SELECT c.shape.ST_SRID() 
  FROM cola_markets c WHERE c.name = 'cola_b';
 
SELECT c.shape.ST_SRID(8307) 
  FROM cola_markets c WHERE c.name = 'cola_b';
 
SELECT c.shape.ST_ISEMPTY() 
  FROM cola_markets c WHERE c.name = 'cola_b';
 
SELECT c.shape.ST_ENVELOPE() 
  FROM cola_markets c WHERE c.name = 'cola_b';
 
SELECT c.shape.ST_BOUNDARY() 
  FROM cola_markets c WHERE c.name = 'cola_b';
 
SELECT c.shape.ST_GEOMETRYTYPE() 
  FROM cola_markets c WHERE c.name = 'cola_b';
 
SELECT c.shape.ST_ISSIMPLE()
  FROM cola_markets c WHERE c.name = 'cola_b';
 
SELECT c.shape.ST_DIMENSION()
  FROM cola_markets c WHERE c.name = 'cola_b';
 
SELECT c.shape.ST_CONVEXHULL()
  FROM cola_markets c WHERE c.name = 'cola_b';
 
SELECT c.shape.ST_CENTROID()
  FROM cola_markets c WHERE c.name = 'cola_b';
 
SELECT c.shape.ST_GETTOLERANCE()
  FROM cola_markets c WHERE c.name = 'cola_b';
 
-- Some member functions that require a parameter
DECLARE
  cola_a_geom ST_GEOMETRY;
  cola_b_geom ST_GEOMETRY;
  cola_c_geom ST_GEOMETRY;
  cola_d_geom ST_GEOMETRY;
  returned_geom ST_GEOMETRY;
  returned_number NUMBER;
 
BEGIN
 
-- Populate geometry variables with cola market shapes.
SELECT c.shape INTO cola_a_geom FROM cola_markets c
  WHERE c.name = 'cola_a';
SELECT c.shape INTO cola_b_geom FROM cola_markets c
  WHERE c.name = 'cola_b';
SELECT c.shape INTO cola_c_geom FROM cola_markets c
  WHERE c.name = 'cola_c';
SELECT c.shape INTO cola_d_geom FROM cola_markets c
  WHERE c.name = 'cola_d';
 
SELECT c.shape.ST_EQUALS(cola_a_geom) INTO returned_number
  FROM cola_markets c WHERE c.name = 'cola_b';
DBMS_OUTPUT.PUT_LINE('Is cola_b equal to cola_a?: ' || returned_number);
 
SELECT c.shape.ST_SYMMETRICDIFFERENCE(cola_a_geom) INTO returned_geom
  FROM cola_markets c WHERE c.name = 'cola_b';
 
SELECT c.shape.ST_DISTANCE(cola_d_geom) INTO returned_number
  FROM cola_markets c WHERE c.name = 'cola_b';
DBMS_OUTPUT.PUT_LINE('Distance between cola_b equal to cola_d: ' || returned_number);
 
SELECT c.shape.ST_INTERSECTS(cola_a_geom) INTO returned_number
  FROM cola_markets c WHERE c.name = 'cola_b';
DBMS_OUTPUT.PUT_LINE('Does cola_b intersect cola_a?: ' || returned_number);
 
SELECT c.shape.ST_CROSS(cola_a_geom) INTO returned_number
  FROM cola_markets c WHERE c.name = 'cola_b';
DBMS_OUTPUT.PUT_LINE('Does cola_b cross cola_a?: ' || returned_number);
 
SELECT c.shape.ST_DISJOINT(cola_a_geom) INTO returned_number
  FROM cola_markets c WHERE c.name = 'cola_b';
DBMS_OUTPUT.PUT_LINE('Is cola_b disjoint with cola_a?: ' || returned_number);
 
SELECT c.shape.ST_TOUCH(cola_a_geom) INTO returned_number
  FROM cola_markets c WHERE c.name = 'cola_b';
DBMS_OUTPUT.PUT_LINE('Does cola_b touch cola_a?: ' || returned_number);
 
SELECT c.shape.ST_WITHIN(cola_a_geom) INTO returned_number
  FROM cola_markets c WHERE c.name = 'cola_b';
DBMS_OUTPUT.PUT_LINE('Is cola_b within cola_a?: ' || returned_number);
 
SELECT c.shape.ST_OVERLAP(cola_a_geom) INTO returned_number
  FROM cola_markets c WHERE c.name = 'cola_b';
DBMS_OUTPUT.PUT_LINE('Does cola_b overlap cola_a?: ' || returned_number);
 
SELECT c.shape.ST_CONTAINS(cola_a_geom) INTO returned_number
  FROM cola_markets c WHERE c.name = 'cola_b';
DBMS_OUTPUT.PUT_LINE('Does cola_b contain cola_a?: ' || returned_number);
 
SELECT c.shape.ST_INTERSECTION(cola_a_geom) INTO returned_geom
  FROM cola_markets c WHERE c.name = 'cola_b';
 
SELECT c.shape.ST_DIFFERENCE(cola_a_geom) INTO returned_geom
  FROM cola_markets c WHERE c.name = 'cola_b';
 
SELECT c.shape.ST_UNION(cola_a_geom) INTO returned_geom
  FROM cola_markets c WHERE c.name = 'cola_b';
 
SELECT c.shape.ST_SYMDIFFERENCE(cola_a_geom) INTO returned_geom
  FROM cola_markets c WHERE c.name = 'cola_b';
 
SELECT c.shape.ST_TOUCHES(cola_a_geom) INTO returned_number
  FROM cola_markets c WHERE c.name = 'cola_b';
DBMS_OUTPUT.PUT_LINE('Does cola_b touch cola_a?: ' || returned_number);
 
SELECT c.shape.ST_CROSSES(cola_a_geom) INTO returned_number
  FROM cola_markets c WHERE c.name = 'cola_b';
DBMS_OUTPUT.PUT_LINE('Does cola_b cross cola_a?: ' || returned_number);
 
END;
/
</pre></div>
<!-- class="example" --></div>
<!-- class="sect1" -->
<a id="BABBIDCI"></a>
<div class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1"><span class="secnum">3.2</span> ST_xxx Functions and Spatial Counterparts</h2>
<p><a href="#BABJGFAG">Table 3-1</a> lists SQL Multimedia functions and the comparable Oracle Spatial SDO_GEOMETRY method or Spatial function, procedure, operator. Note that in some cases the Oracle Spatial counterpart has more features than the SQL Multimedia function.</p>
<div class="tblformal">
<p class="titleintable"><a id="sthref327"></a><a id="BABJGFAG"></a>Table 3-1 ST_xxx Functions and Spatial Counterparts</p>
<table class="cellalignment740" title="ST_xxx Functions and Spatial Counterparts" summary="SQL Multiumedia functions and Oracle Spatial counterparts" dir="ltr">
<thead>
<tr class="cellalignment734">
<th class="cellalignment741" id="r1c1-t2">SQL Multimedia Function</th>
<th class="cellalignment741" id="r1c2-t2">Comparable Oracle Spatial Interface</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment734">
<td class="cellalignment742" id="r2c1-t2" headers="r1c1-t2">
<p>FROM_WKB</p>
</td>
<td class="cellalignment742" headers="r2c1-t2 r1c2-t2">
<p><a href="sdo_util.htm#BJEGAIGB">SDO_UTIL.FROM_WKBGEOMETRY</a></p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r3c1-t2" headers="r1c1-t2">
<p>FROM_WKT</p>
</td>
<td class="cellalignment742" headers="r3c1-t2 r1c2-t2">
<p><a href="sdo_util.htm#BJEGGIAB">SDO_UTIL.FROM_WKTGEOMETRY</a></p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r4c1-t2" headers="r1c1-t2">
<p>GET_WKB</p>
</td>
<td class="cellalignment742" headers="r4c1-t2 r1c2-t2">
<p>SDO_GEOMETRY.Get_WKB</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r5c1-t2" headers="r1c1-t2">
<p>GET_WKT</p>
</td>
<td class="cellalignment742" headers="r5c1-t2 r1c2-t2">
<p>SDO_GEOMETRY.Get_WKT</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r6c1-t2" headers="r1c1-t2">
<p>ST_BUFFER</p>
</td>
<td class="cellalignment742" headers="r6c1-t2 r1c2-t2">
<p><a href="sdo_objgeom.htm#i856140">SDO_GEOM.SDO_BUFFER</a></p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r7c1-t2" headers="r1c1-t2">
<p>ST_CENTROID</p>
</td>
<td class="cellalignment742" headers="r7c1-t2 r1c2-t2">
<p><a href="sdo_objgeom.htm#i860848">SDO_GEOM.SDO_CENTROID</a></p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r8c1-t2" headers="r1c1-t2">
<p>ST_CONTAINS</p>
</td>
<td class="cellalignment742" headers="r8c1-t2 r1c2-t2">
<p><a href="sdo_objgeom.htm#BGHCDIDG">SDO_GEOM.RELATE</a> with <code>mask=CONTAINS</code></p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r9c1-t2" headers="r1c1-t2">
<p>ST_CONVEXHULL</p>
</td>
<td class="cellalignment742" headers="r9c1-t2 r1c2-t2">
<p><a href="sdo_objgeom.htm#i857920">SDO_GEOM.SDO_CONVEXHULL</a></p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r10c1-t2" headers="r1c1-t2">
<p>ST_COORDDIM</p>
</td>
<td class="cellalignment742" headers="r10c1-t2 r1c2-t2">
<p>SDO_GEOMETRY.Get_Dims and SDO_GEOMETRY.ST_CoordDim (equivalent)</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r11c1-t2" headers="r1c1-t2">
<p>ST_CROSS</p>
</td>
<td class="cellalignment742" headers="r11c1-t2 r1c2-t2">
<p>(None predefined; requires using <a href="sdo_objgeom.htm#BGHCDIDG">SDO_GEOM.RELATE</a> with a complex mask)</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r12c1-t2" headers="r1c1-t2">
<p>ST_CROSSES</p>
</td>
<td class="cellalignment742" headers="r12c1-t2 r1c2-t2">
<p>(None predefined; requires using <a href="sdo_objgeom.htm#BGHCDIDG">SDO_GEOM.RELATE</a> with a complex mask)</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r13c1-t2" headers="r1c1-t2">
<p>ST_DIFFERENCE</p>
</td>
<td class="cellalignment742" headers="r13c1-t2 r1c2-t2">
<p><a href="sdo_objgeom.htm#i857512">SDO_GEOM.SDO_DIFFERENCE</a></p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r14c1-t2" headers="r1c1-t2">
<p>ST_DIMENSION</p>
</td>
<td class="cellalignment742" headers="r14c1-t2 r1c2-t2">
<p>SDO_GEOMETRY.Get_Dims</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r15c1-t2" headers="r1c1-t2">
<p>ST_DISJOINT</p>
</td>
<td class="cellalignment742" headers="r15c1-t2 r1c2-t2">
<p><a href="sdo_objgeom.htm#BGHCDIDG">SDO_GEOM.RELATE</a> with <code>mask=DISJOINT</code></p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r16c1-t2" headers="r1c1-t2">
<p>ST_DISTANCE</p>
</td>
<td class="cellalignment742" headers="r16c1-t2 r1c2-t2">
<p><a href="sdo_objgeom.htm#i857957">SDO_GEOM.SDO_DISTANCE</a></p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r17c1-t2" headers="r1c1-t2">
<p>ST_ENVELOPE</p>
</td>
<td class="cellalignment742" headers="r17c1-t2 r1c2-t2">
<p><a href="sdo_objgeom.htm#i866042">SDO_GEOM.SDO_MBR</a></p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r18c1-t2" headers="r1c1-t2">
<p>ST_EQUALS</p>
</td>
<td class="cellalignment742" headers="r18c1-t2 r1c2-t2">
<p><a href="sdo_objgeom.htm#BGHCDIDG">SDO_GEOM.RELATE</a> with <code>mask=EQUAL</code></p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r19c1-t2" headers="r1c1-t2">
<p>ST_GEOMETRYTYPE</p>
</td>
<td class="cellalignment742" headers="r19c1-t2 r1c2-t2">
<p>SDO_GEOMETRY.Get_GType</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r20c1-t2" headers="r1c1-t2">
<p>ST_INTERSECTION</p>
</td>
<td class="cellalignment742" headers="r20c1-t2 r1c2-t2">
<p><a href="sdo_objgeom.htm#i857570">SDO_GEOM.SDO_INTERSECTION</a></p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r21c1-t2" headers="r1c1-t2">
<p>ST_INTERSECTS</p>
</td>
<td class="cellalignment742" headers="r21c1-t2 r1c2-t2">
<p><a href="sdo_objgeom.htm#BGHCDIDG">SDO_GEOM.RELATE</a> with <code>mask=OVERLAPBDYDISJOINT + OVERLAPBDYINTERSECT</code></p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r22c1-t2" headers="r1c1-t2">
<p>ST_ISVALID</p>
</td>
<td class="cellalignment742" headers="r22c1-t2 r1c2-t2">
<p><a href="sdo_objgeom.htm#BGHFDDBF">SDO_GEOM.VALIDATE_GEOMETRY_WITH_CONTEXT</a></p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r23c1-t2" headers="r1c1-t2">
<p>ST_OVERLAP</p>
</td>
<td class="cellalignment742" headers="r23c1-t2 r1c2-t2">
<p><a href="sdo_objgeom.htm#BGHCDIDG">SDO_GEOM.RELATE</a> with <code>mask=CONTAINS</code></p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r24c1-t2" headers="r1c1-t2">
<p>ST_RELATE</p>
</td>
<td class="cellalignment742" headers="r24c1-t2 r1c2-t2">
<p><a href="sdo_operat.htm#i78531">SDO_RELATE</a>, <a href="sdo_objgeom.htm#BGHCDIDG">SDO_GEOM.RELATE</a></p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r25c1-t2" headers="r1c1-t2">
<p>ST_SYMDIFFERENCE</p>
</td>
<td class="cellalignment742" headers="r25c1-t2 r1c2-t2">
<p><a href="sdo_objgeom.htm#i857842">SDO_GEOM.SDO_XOR</a></p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r26c1-t2" headers="r1c1-t2">
<p>ST_SYMMETRICDIFFERENCE</p>
</td>
<td class="cellalignment742" headers="r26c1-t2 r1c2-t2">
<p><a href="sdo_objgeom.htm#i857842">SDO_GEOM.SDO_XOR</a></p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r27c1-t2" headers="r1c1-t2">
<p>ST_TOUCH</p>
</td>
<td class="cellalignment742" headers="r27c1-t2 r1c2-t2">
<p><a href="sdo_objgeom.htm#BGHCDIDG">SDO_GEOM.RELATE</a> with <code>mask=TOUCH</code></p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r28c1-t2" headers="r1c1-t2">
<p>ST_TOUCHES</p>
</td>
<td class="cellalignment742" headers="r28c1-t2 r1c2-t2">
<p><a href="sdo_objgeom.htm#BGHCDIDG">SDO_GEOM.RELATE</a> with <code>mask=TOUCH</code></p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r29c1-t2" headers="r1c1-t2">
<p>ST_UNION</p>
</td>
<td class="cellalignment742" headers="r29c1-t2 r1c2-t2">
<p><a href="sdo_objgeom.htm#i857624">SDO_GEOM.SDO_UNION</a></p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r30c1-t2" headers="r1c1-t2">
<p>ST_WITHIN</p>
</td>
<td class="cellalignment742" headers="r30c1-t2 r1c2-t2">
<p><a href="sdo_objgeom.htm#BGHCDIDG">SDO_GEOM.RELATE</a> with <code>mask=COVERS+CONTAINS</code></p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="sect1" -->
<a id="CHDCHJJJ"></a>
<div id="SPATL566" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1"><span class="secnum">3.3</span> <a id="sthref328"></a><a id="sthref329"></a><a id="sthref330"></a>Tolerance Value with SQL Multimedia Types</h2>
<p>Because the SQL Multimedia standard does not define how tolerance is to be used with the ST_ xxx, Spatial uses a default value of 0.005 in all the member methods of the ST_GEOMETRY type. If you want to specify a different tolerance value to be used with ST_GEOMETRY member functions, override the default by inserting the desired value into the SDO_ST_TOLERANCE table.</p>
<p>The SDO_ST_TOLERANCE table is a global temporary table that should have a single row specifying the tolerance to be used with ST_GEOMETRY member methods. This table has a single column, defined as <code>(tolerance NUMBER)</code>.</p>
<p>For all Spatial operators that use a spatial index, Spatial uses the tolerance value specified for the spatial column in the USER_SDO_GEOM_METADATA view.</p>
</div>
<!-- class="sect1" -->
<a id="CHDCDAGF"></a>
<div id="SPATL567" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1"><span class="secnum">3.4</span> <a id="sthref331"></a><a id="sthref332"></a>Avoiding Name Conflicts</h2>
<p>Some third-party vendors support their own version of ST_<span class="italic">xxx</span> types on Oracle. For example, a vendor might create its own version of the ST_GEOMETRY type.</p>
<p>To avoid possible conflicts between third-party names and Oracle-supplied names, any third-party implementation of ST_<span class="italic">xxx</span> types on Oracle should use a schema prefix. For example, this will ensure that if someone specifies a column type as just ST_GEOMETRY, the column will be created with the Oracle implementation of the ST_GEOMETRY type.</p>
</div>
<!-- class="sect1" -->
<a id="CHDBIAFE"></a>
<div id="SPATL568" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1"><span class="secnum">3.5</span> <a id="sthref333"></a><a id="sthref334"></a>Annotation Text Type and Views</h2>
<p>Oracle Spatial supports annotation text as specified in the <span class="italic">OpenGIS Implementation Specification for Geographic information - Simple feature access - Part 1: Common architecture</span>, which defines <span class="bold">annotation text</span> as "simply placed text that can carry either geographically-related or ad-hoc data and process-related information as displayable text. This text may be used for display in editors or in simpler maps. It is usually lacking in full cartographic quality, but may act as an approximation to such text as needed by any application."</p>
<p>The ST_ANNOTATION_TEXT object type can be used to store annotation text. This type has a constructor for inserting annotation text into a table, as explained in <a href="#CHDFEJAF">Section 3.5.1</a>.</p>
<p>The USER_ANNOTATION_TEXT_METADATA and ALL_ANNOTATION_TEXT_METADATA views store metadata related to annotation text, as explained in <a href="#CHDBGIBF">Section 3.5.2</a>.</p>
<a id="CHDFEJAF"></a>
<div id="SPATL569" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">3.5.1</span> <a id="sthref335"></a>Using the ST_ANNOTATION_TEXT Constructor</h3>
<p>An annotation text object contains an array of objects, where each object consists of a text label, the point at which to start rendering the text label, a leader line (typically from the text label to the associated point on the map), and optionally extra attribute information. A single annotation text object may typically contain all the text labels for a map.</p>
<p>Each text label object has the following definition:</p>
<pre>
 Name                                      Null?    Type
 ----------------------------------------- -------- ----------------------------
 PRIVATEVALUE                                       VARCHAR2(4000)
 PRIVATELOCATION                                    MDSYS.SDO_GEOMETRY
 PRIVATELEADERLINE                                  MDSYS.SDO_GEOMETRY
 PRIVATETEXTATTRIBUTES                              VARCHAR2(4000)
</pre>
<p>To insert the annotation for a single point, use the ST_ANNOTATION_TEXT constructor. This constructor specifies the information for a single point using an array, as shown in <a href="#CHDIEACA">Example 3-3</a>, which creates a table with a column of type ST_ANNOTATION_TEXT and inserts one row, using the ST_ANNOTATION_TEXT constructor in the INSERT statement.</p>
<div id="SPATL570" class="example">
<p class="titleinexample"><a id="CHDIEACA"></a>Example 3-3 Using the ST_ANNOTATION_TEXT Constructor</p>
<pre>
CREATE TABLE my_annotations (id NUMBER, textobj ST_ANNOTATION_TEXT);
 
INSERT INTO my_annotations VALUES (2,
 ST_ANNOTATION_TEXT(
    ST_ANNOTATIONTEXTELEMENT_ARRAY(
           ST_ANNOT_TEXTELEMENT_ARRAY(
                 ST_ANNOTATIONTEXTELEMENT(
                    'Sample Label 2',
                    SDO_GEOMETRY(2001,null,sdo_point_type(10,10,null),null,null),
                    SDO_GEOMETRY(2002,null,null,
                        SDO_ELEM_INFO_ARRAY(1,2,1),
                        SDO_ORDINATE_ARRAY(5,10, 10,10)), 
                    NULL)))));
</pre></div>
<!-- class="example" -->
<p>In the ST_ANNOTATION_TEXT constructor in <a href="#CHDIEACA">Example 3-3</a>, the ST_ANNOTATIONTEXTELEMENT subelement specifies the following:</p>
<ul>
<li>
<p>The text for the label, in this case <code>Sample Label 2</code></p>
</li>
<li>
<p>A point geometry specifying where to start rendering the label, in this case location (10,10)</p>
</li>
<li>
<p>A line string geometry specifying the start and end points of the leader line between the point of interest and the text label, in this case a line between locations (5,10) and (10,10)</p>
</li>
<li>
<p>No text display attribute information (NULL), which means that the information TEXT_ATTRIBUTES column of the annotation text metadata views is used (see <a href="#CHDFIHBB">Table 3-2</a> in <a href="#CHDBGIBF">Section 3.5.2</a>)</p>
</li>
</ul>
</div>
<!-- class="sect2" -->
<a id="CHDBGIBF"></a>
<div id="SPATL571" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">3.5.2</span> Annotation Text Metadata Views</h3>
<p>The annotation text metadata is stored in a global table owned by MDSYS (which users should never directly update). Each Spatial user has the following views available in the schema associated with that user:</p>
<ul>
<li>
<p><a id="sthref336"></a><a id="sthref337"></a>USER_ANNOTATION_TEXT_METADATA contains metadata information for all annotation text in tables owned by the user (schema). This is the only view that you can update, and it is the one in which Spatial users must insert metadata related to spatial tables.</p>
</li>
<li>
<p><a id="sthref338"></a><a id="sthref339"></a>ALL_ANNOTATION_TEXT_METADATA contains metadata information for all annotation text in tables on which the user has SELECT permission.</p>
</li>
</ul>
<p>Spatial users are responsible for populating these views. For each annotation text object, you must insert an appropriate row into the USER_ANNOTATION_TEXT_METADATA view. Oracle Spatial ensures that the ALL_ANNOTATION_TEXT_METADATA view is also updated to reflect the rows that you insert into USER_ANNOTATION_TEXT_METADATA.</p>
<p>The USER_ANNOTATION_TEXT_METADATA and ALL_ANNOTATION_TEXT_METADATA views contain the same columns, as shown <a href="#CHDFIHBB">Table 3-2</a>, except that the USER_ANNOTATION_TEXT_METADATA view does not contain the OWNER column. (The columns are listed in their order in the view definition.)</p>
<div id="SPATL572" class="tblformalwide">
<p class="titleintable"><a id="sthref340"></a><a id="CHDFIHBB"></a>Table 3-2 Columns in the Annotation Text Metadata Views</p>
<table class="cellalignment745" title="Columns in the Annotation Text Metadata Views" summary="Columns in the Annotation Text Metadata Views" dir="ltr">
<thead>
<tr class="cellalignment734">
<th class="cellalignment741" id="r1c1-t3">Column Name</th>
<th class="cellalignment741" id="r1c2-t3">Data Type</th>
<th class="cellalignment741" id="r1c3-t3">Purpose</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment734">
<td class="cellalignment742" id="r2c1-t3" headers="r1c1-t3">
<p>OWNER</p>
</td>
<td class="cellalignment742" headers="r2c1-t3 r1c2-t3">
<p>VARCHAR2(32)</p>
</td>
<td class="cellalignment742" headers="r2c1-t3 r1c3-t3">
<p>Owner of the table specified in the TABLE_NAME column (ALL_ANNOTATION_TEXT_METADATA view only).</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r3c1-t3" headers="r1c1-t3">
<p>TABLE_NAME</p>
</td>
<td class="cellalignment742" headers="r3c1-t3 r1c2-t3">
<p>VARCHAR2(32)</p>
</td>
<td class="cellalignment742" headers="r3c1-t3 r1c3-t3">
<p>Name of the table containing the column of type ST_ANNOTATION_TEXT.</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r4c1-t3" headers="r1c1-t3">
<p>COLUMN_NAME</p>
</td>
<td class="cellalignment742" headers="r4c1-t3 r1c2-t3">
<p>VARCHAR2(1024)</p>
</td>
<td class="cellalignment742" headers="r4c1-t3 r1c3-t3">
<p>Name of the column of type ST_ANNOTATION_TEXT.</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r5c1-t3" headers="r1c1-t3">
<p>TEXT_EXPRESSION</p>
</td>
<td class="cellalignment742" headers="r5c1-t3 r1c2-t3">
<p>VARCHAR2(4000)</p>
</td>
<td class="cellalignment742" headers="r5c1-t3 r1c3-t3">
<p>A value that can be used if text is not specified for a label. As explained in the OpenGIS specification: "Text to place is first derived from the contents of VALUE in the current element, if VALUE is not null. Otherwise, text is derived from the first non-null preceding element VALUE. If all preceding elements have null VALUE fields, VALUE is derived from the TEXT_EXPRESSION in the metadata table."</p>
</td>
</tr>
<tr class="cellalignment734">
<td class="cellalignment742" id="r6c1-t3" headers="r1c1-t3">
<p>TEXT_ATTRIBUTES</p>
</td>
<td class="cellalignment742" headers="r6c1-t3 r1c2-t3">
<p>VARCHAR2(4000)</p>
</td>
<td class="cellalignment742" headers="r6c1-t3 r1c3-t3">
<p>Default text display attributes (font family and size, horizontal and vertical spacing, and so on) for the label text style and layout, unless overridden in the PRIVATETEXTATTRIBUTES attribute of the ST_ANNOTATION_TEXT constructor (described in <a href="#CHDFEJAF">Section 3.5.1</a>). Use the format specified in the "XML for Text Attributes" section of the OpenGIS specification.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformalwide" --></div>
<!-- class="sect2" --></div>
<!-- class="sect1" --></div>
<!-- class="chapter" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment733">
<tr>
<td class="cellalignment742">
<table class="cellalignment738">
<tr>
<td class="cellalignment737"><a href="sdo_objrelschema.htm"><img width="24" height="24" src="../../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment737"><a href="sdo_objload.htm"><img width="24" height="24" src="../../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;1999, 2013,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment744">
<table class="cellalignment736">
<tr>
<td class="cellalignment737"><a href="../../index.htm"><img width="24" height="24" src="../../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment737"><a href="../../nav/portal_booklist.htm"><img width="24" height="24" src="../../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment737"><a href="toc.htm"><img width="24" height="24" src="../../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment737"><a href="index.htm"><img width="24" height="24" src="../../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment737"><a href="../../nav/mindx.htm"><img width="24" height="24" src="../../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment737"><a href="../../dcommon/html/feedback.htm"><img width="24" height="24" src="../../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>
</body>
</html>
