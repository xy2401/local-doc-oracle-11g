<!DOCTYPE html>
<html lang="en">
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1">
<meta charset="utf-8">
<title>SDO_NET Package Subprograms</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Merged Version 1023" />
<meta name="description" content="Provides usage and reference information about the Topology Data Model and Network Data Model Graph features of Oracle Spatial and Graph." />
<meta name="dcterms.created" content="2014-07-09T11:54:32Z" />
<meta name="robots" content="all" />
<meta name="dcterms.title" content="Spatial Topology and Network Data Models Developer's Guide" />
<meta name="dcterms.identifier" content="E11831-07" />
<meta name="dcterms.isVersionOf" content="TOPOL" />
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;2003, 2014,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved." />
<link rel="Start" href="../../index.htm" title="Home" type="text/html" />
<link rel="Copyright" href="../../dcommon/html/cpyr.htm" title="Copyright" type="text/html" />

<script type="application/javascript"  src="../../dcommon/js/headfoot.js"></script>
<script type="application/javascript"  src="../../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html" />
<link rel="Index" href="index.htm" title="Index" type="text/html" />
<link rel="Prev" href="sdo_net_concepts.htm" title="Previous" type="text/html" />
<link rel="Next" href="sdo_net_mem_ref.htm" title="Next" type="text/html" />
<link rel="alternate" href="../e11831.pdf" title="PDF version" type="application/pdf" />
<link rel="schema.dcterms" href="http://purl.org/dc/terms/" />
<link rel="stylesheet" href="../../dcommon/css/fusiondoc.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/header.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/footer.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/fonts.css">
<link rel="stylesheet" href="../../dcommon/css/foundation.css">
<link rel="stylesheet" href="../../dcommon/css/codemirror.css">
<link rel="stylesheet" type="text/css" title="Default" href="../../nav/css/html5.css">
<link rel="stylesheet" href="../../dcommon/css/respond-480-tablet.css">
<link rel="stylesheet" href="../../dcommon/css/respond-768-laptop.css">
<link rel="stylesheet" href="../../dcommon/css/respond-1140-deskop.css">
<script type="application/javascript" src="../../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">15/17</span> <!-- End Header -->
<div id="TOPOL400" class="chapter"><a id="CHDDAHAF"></a>
<h1 class="chapter"><span class="secnum">6</span> SDO_NET Package Subprograms</h1>
<p><a id="sthref888"></a><a id="sthref889"></a>The MDSYS.SDO_NET package contains subprograms (functions and procedures) for managing networks. To use the subprograms in this chapter, you must understand the conceptual information in <a href="sdo_net_concepts.htm#CIHHEDAC">Chapter 5</a>.</p>
<p>For a listing of the subprograms grouped in logical categories, see <a href="sdo_net_concepts.htm#CIHBICII">Section 5.11.1</a>. The rest of this chapter provides reference information about the subprograms, listed in alphabetical order.</p>
<div class="refentry">
<div id="TOPOL972" class="refsect1"><a id="sthref890"></a>
<h2 class="refsect1"><a id="sthref891"></a><a id="sthref892"></a><a id="sthref893"></a><a id="sthref894"></a>SDO_NET.COMPUTE_PATH_GEOMETRY</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref895"></a>Format</p>
<p class="synopsis">SDO_NET.COMPUTE_PATH_GEOMETRY(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;network IN VARCHAR2,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;path_id IN NUMBER,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tolerance IN NUMBER</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) RETURN SDO_GEOMETRY;</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref896"></a>Description</p>
<p>Returns the spatial geometry for a path.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref897"></a>Parameters</p>
<dl>
<dt>network</dt>
<dd>
<p>Network name.</p>
</dd>
<dt>path_id</dt>
<dd>
<p>Path ID number.</p>
</dd>
<dt>tolerance</dt>
<dd>
<p>Tolerance value associated with geometries in the network. (Tolerance is explained in Chapter 1 of <a class="olink SPATL" href="../e11830/toc.htm"><span class="italic">Oracle Spatial Developer's Guide</span></a>.) This value should be consistent with the tolerance values of the geometries in the link table and node table for the network.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref898"></a>Usage Notes</p>
<p>This function computes and returns the SDO_GEOMETRY object for the specified path.</p>
<p>This function and the <a href="sdo_net_mem_ref.htm#CHDHHBIG">SDO_NET_MEM.PATH.COMPUTE_GEOMETRY</a> procedure (documented in <a href="#CHDDAHAF">Chapter 6</a>) both compute a path geometry, but they have the following differences:</p>
<ul>
<li>
<p>The SDO_NET.COMPUTE_PATH_GEOMETRY function computes the path from the links in the database, and does not use a network memory object. It returns the path geometry.</p>
</li>
<li>
<p>The <a href="sdo_net_mem_ref.htm#CHDHHBIG">SDO_NET_MEM.PATH.COMPUTE_GEOMETRY</a> procedure computes the path using a network memory object that has been loaded. It does not return the path geometry; you must use the <a href="sdo_net_mem_ref.htm#CHDHFFDJ">SDO_NET_MEM.PATH.GET_GEOMETRY</a> function to get the geometry.</p>
</li>
</ul>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref899"></a>Examples</p>
<p>The following example computes and returns the spatial geometry of the path with path ID 1 in the network named <code>SDO_NET1</code>, using a tolerance value of 0.005. The returned path geometry is a straight line from (1,1) to (15,1) because this path consists of a single link.</p>
<pre>
SELECT SDO_NET.COMPUTE_PATH_GEOMETRY('SDO_NET1', 1, 0.005) FROM DUAL;
 
SDO_NET.COMPUTE_PATH_GEOMETRY('SDO_NET1',1,0.005)(SDO_GTYPE, SDO_SRID, SDO_POINT
--------------------------------------------------------------------------------
SDO_GEOMETRY(2002, NULL, NULL, SDO_ELEM_INFO_ARRAY(1, 2, 1), SDO_ORDINATE_ARRAY(
1, 1, 15, 1))
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" -->
<a id="CHDBIGAF"></a>
<div id="TOPOL973" class="refsect1">
<h2 class="refsect1"><a id="sthref900"></a><a id="sthref901"></a>SDO_NET.COPY_NETWORK</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref902"></a>Format</p>
<p class="synopsis">SDO_NET.COPY_NETWORK(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;source_network IN VARCHAR2,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;target_network IN VARCHAR2,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;storage_parameters IN VARCHAR2 DEFAULT NULL);</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref903"></a>Description</p>
<p>Creates a copy of a network, including its metadata tables.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref904"></a>Parameters</p>
<dl>
<dt>source_network</dt>
<dd>
<p>Name of the network to be copied.</p>
</dd>
<dt>target_network</dt>
<dd>
<p>Name of the network to be created as a copy of <code>source_network</code>.</p>
</dd>
<dt>storage_parameters</dt>
<dd>
<p>Physical storage parameters used internally to create network tables. Must be a valid string for use with the CREATE TABLE statement. For example: <code>TABLESPACE tbs_3 STORAGE (INITIAL 100K NEXT 200K)</code>. If you do not specify this parameter, the default physical storage values are used.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref905"></a>Usage Notes</p>
<p>This procedure creates an entry in the xxx_SDO_NETWORK_METADATA views (described in <a href="sdo_net_concepts.htm#CIHGBCAI">Section 5.10.1</a>) for <code>target_network</code> that has the same information as for <code>source_network</code>, except for the new network name.</p>
<p>This procedure also creates a new node table, link table, and path table (if a path table exists for <code>source_network</code>) for <code>target_network</code> based on the metadata and data in these tables for <code>source_network</code>. These tables have names in the form <span class="italic">&lt;target-network&gt;</span>_NODE$, <span class="italic">&lt;target-network&gt;</span>_LINK$, and <span class="italic">&lt;target-network&gt;</span>_PATH$. For example, if <code>target_network</code> has the value <code>ROADS_NETWORK2</code> and if <code>source_network</code> has a path table, the names of the created metadata tables are ROADS_NETWORK2_NODE$, ROADS_NETWORK2_LINK$, and ROADS_NETWORK2_PATH$.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref906"></a>Examples</p>
<p>The following example creates a new network named <code>ROADS_NETWORK2</code> that is a copy of the network named <code>ROADS_NETWORK</code>.</p>
<pre>
EXECUTE SDO_NET.COPY_NETWORK('ROADS_NETWORK', 'ROADS_NETWORK2');
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" -->
<a id="CHDFIFJF"></a>
<div id="TOPOL974" class="refsect1">
<h2 class="refsect1"><a id="sthref907"></a><a id="sthref908"></a>SDO_NET.CREATE_LINK_TABLE</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref909"></a>Format</p>
<p class="synopsis">SDO_NET.CREATE_LINK_TABLE(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;table_name IN VARCHAR2,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;geom_type IN VARCHAR2,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;geom_column IN VARCHAR2,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cost_column IN VARCHAR2,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;no_of_hierarchy_levels IN NUMBER,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;add_bidirected_column IN BOOLEAN DEFALT FALSE,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;storage_parameters IN VARCHAR2 DEFAULT NULL);</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref910"></a>Description</p>
<p>Creates a link table for a network.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref911"></a>Parameters</p>
<dl>
<dt>table_name</dt>
<dd>
<p>Name of the link table.</p>
</dd>
<dt>geom_type</dt>
<dd>
<p>For a spatial network, specify a value indicating the geometry type of links: <code>SDO_GEOMETRY</code> for non-LRS SDO_GEOMETRY objects, <code>LRS_GEOMETRY</code> for LRS SDO_GEOMETRY objects, or <code>TOPO_GEOMETRY</code> for SDO_TOPO_GEOMETRY objects. (If the <code>geom_type</code> value is not spelled correctly, the <code>geom_column</code> column is <span class="italic">not</span> included in the table.)</p>
</dd>
<dt>geom_column</dt>
<dd>
<p>For a spatial network, the name of the column containing the geometry objects associated with the links.</p>
</dd>
<dt>cost_column</dt>
<dd>
<p>Name of the column containing the cost values to be associated with the links.</p>
</dd>
<dt>no_of_hierarchy_levels</dt>
<dd>
<p>Number of hierarchy levels for links in the network. (For an explanation of network hierarchy, see <a href="sdo_net_concepts.htm#CIHDHHGB">Section 5.5</a>.)</p>
</dd>
<dt>add_bidirected_column</dt>
<dd>
<p><code>TRUE</code> adds a column named BIDIRECTED to the link table; <code>FALSE</code> (the default) does not add a column named BIDIRECTED to the link table.</p>
</dd>
<dt>storage_parameters</dt>
<dd>
<p>Physical storage parameters used internally to create the link table. Must be a valid string for use with the CREATE TABLE statement. For example: <code>TABLESPACE tbs_3 STORAGE (INITIAL 100K NEXT 200K)</code>. If you do not specify this parameter, the default physical storage values are used.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref912"></a>Usage Notes</p>
<p>The link table is described in <a href="sdo_net_concepts.htm#CIHIFBFJ">Section 5.9.2</a>.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref913"></a>Examples</p>
<p>The following example creates a link table named ROADS_LINKS, with a geometry column named LINK_GEOMETRY that will contain LRS geometries, a cost column named COST, and a single hierarchy level.</p>
<pre>
EXECUTE SDO_NET.CREATE_LINK_TABLE('ROADS_LINKS', 'LRS_GEOMETRY', 'LINK_GEOMETRY', 'COST', 1);
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" -->
<a id="CHDFGEAI"></a>
<div id="TOPOL975" class="refsect1">
<h2 class="refsect1"><a id="sthref914"></a><a id="sthref915"></a>SDO_NET.CREATE_LOGICAL_NETWORK</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref916"></a>Format</p>
<p class="synopsis">SDO_NET.CREATE_LOGICAL_NETWORK(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;network IN VARCHAR2,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;no_of_hierarchy_levels IN NUMBER,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;is_directed IN BOOLEAN,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;node_with_cost IN BOOLEAN DEFAULT FALSE,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;is_complex IN BOOLEAN DEFAULT FALSE,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;storage_parameters IN VARCHAR2 DEFAULT NULL);</p>
<p>or</p>
<p class="synopsis">SDO_NET.CREATE_LOGICAL_NETWORK(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;network IN VARCHAR2,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;no_of_hierarchy_levels IN NUMBER,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;is_directed IN BOOLEAN,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;node_table_name IN VARCHAR2,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;node_cost_column IN VARCHAR2,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;link_table_name IN VARCHAR2,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;link_cost_column IN VARCHAR2,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;path_table_name IN VARCHAR2,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;path_link_table_name IN VARCHAR2,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;subpath_table_name IN VARCHAR2,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;is_complex IN BOOLEAN DEFAULT FALSE,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;storage_parameters IN VARCHAR2 DEFAULT NULL);</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref917"></a>Description</p>
<p>Creates a logical network, creates all necessary tables, and updates the network metadata.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref918"></a>Parameters</p>
<dl>
<dt>network</dt>
<dd>
<p>Network name.</p>
</dd>
<dt>no_of_hierarchy_levels</dt>
<dd>
<p>Number of hierarchy levels for links in the network. (For an explanation of network hierarchy, see <a href="sdo_net_concepts.htm#CIHDHHGB">Section 5.5</a>.)</p>
</dd>
<dt>is_directed</dt>
<dd>
<p>A Boolean value. <code>TRUE</code> indicates that the links are directed; <code>FALSE</code> indicates that the links are undirected (not directed).</p>
</dd>
<dt>node_with_cost</dt>
<dd>
<p>A Boolean value. <code>TRUE</code> causes a column named COST to be included in the <span class="italic">&lt;network-name&gt;</span>_NODE$ table; <code>FALSE</code> (the default) causes a column named COST not to be included in the <span class="italic">&lt;network-name&gt;</span>_NODE$ table.</p>
</dd>
<dt>node_table_name</dt>
<dd>
<p>Name of the node table to be created. (The node table is explained in <a href="sdo_net_concepts.htm#CIHHHDJE">Section 5.9.1</a>.) If you use the format that does not specify this parameter, a node table named <span class="italic">&lt;network-name&gt;</span>_NODE$ is created.</p>
</dd>
<dt>node_cost_column</dt>
<dd>
<p>Name of the cost column in the node table. (The node table is explained in <a href="sdo_net_concepts.htm#CIHHHDJE">Section 5.9.1</a>.) If you use the format that does not specify this parameter, the geometry column is named COST.</p>
</dd>
<dt>link_table_name</dt>
<dd>
<p>Name of the link table to be created. (The link table is explained in <a href="sdo_net_concepts.htm#CIHIFBFJ">Section 5.9.2</a>.) If you use the format that does not specify this parameter, a link table named <span class="italic">&lt;network-name&gt;</span>_LINK$ is created.</p>
</dd>
<dt>link_cost_column</dt>
<dd>
<p>Name of the cost column in the link table. (The link table is explained in <a href="sdo_net_concepts.htm#CIHIFBFJ">Section 5.9.2</a>.) If you use the format that does not specify this parameter, the geometry column is named COST.</p>
</dd>
<dt>path_table_name</dt>
<dd>
<p>Name of the path table to be created. (The path table is explained in <a href="sdo_net_concepts.htm#CIHHJIEI">Section 5.9.3</a>.) If you use the format that does not specify this parameter, a path table named <span class="italic">&lt;network-name&gt;</span>_PATH$ is created.</p>
</dd>
<dt>path_link_table_name</dt>
<dd>
<p>Name of the path-link table to be created. (The path-link table is explained in <a href="sdo_net_concepts.htm#CIHCBCJC">Section 5.9.4</a>.) If you use the format that does not specify this parameter, a path-link table named <span class="italic">&lt;network-name&gt;</span>_PLINK$ is created.</p>
</dd>
<dt>subpath_table_name</dt>
<dd>
<p>Name of the subpath table to be created. (The subpath table is explained in <a href="sdo_net_concepts.htm#CIHHIJFA">Section 5.9.5</a>.)</p>
</dd>
<dt>is_complex</dt>
<dd>
<p>Reserved for future use. Ignored for the current release.</p>
</dd>
<dt>storage_parameters</dt>
<dd>
<p>Physical storage parameters used internally to create network tables. Must be a valid string for use with the CREATE TABLE statement. For example: <code>TABLESPACE tbs_3 STORAGE (INITIAL 100K NEXT 200K)</code>. If you do not specify this parameter, the default physical storage values are used.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref919"></a>Usage Notes</p>
<p>This procedure provides a convenient way to create a logical network when the node, link, and optional related tables do not already exist. The procedure creates the network; creates the node, link, path, and path-link tables for the network; and inserts the appropriate information in the xxx_SDO_NETWORK_METADATA views (described in <a href="sdo_net_concepts.htm#CIHGBCAI">Section 5.10.1</a>).</p>
<p>An exception is generated if any of the tables to be created already exists.</p>
<p>The procedure has two formats. The simpler format creates the tables using default values for the table name and the cost column name. The other format lets you specify names for the tables and the cost column.</p>
<p>As an alternative to using this procedure, you can create the network as follows: create the tables using the <a href="#CHDECBDE">SDO_NET.CREATE_NODE_TABLE</a>, <a href="#CHDFIFJF">SDO_NET.CREATE_LINK_TABLE</a>, <a href="#CHDHCIJD">SDO_NET.CREATE_PATH_TABLE</a>, and <a href="#CHDBDHID">SDO_NET.CREATE_PATH_LINK_TABLE</a> procedures; and insert the appropriate row in the USER_SDO_NETWORK_METADATA view.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref920"></a>Examples</p>
<p>The following example creates a directed logical network named <code>LOG_NET1</code>. The example creates the LOG_NET1_NODE$, LOG_NET1_LINK$,LOG_NET1_PATH$, and LOG_NET1_PLINK$ tables, and updates the xxx_SDO_NETWORK_METADATA views. Both the node and link tables contain a cost column named COST.</p>
<pre>
EXECUTE SDO_NET.CREATE_LOGICAL_NETWORK('LOG_NET1', 1, TRUE, TRUE);
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" -->
<a id="CHDJADJI"></a>
<div id="TOPOL976" class="refsect1">
<h2 class="refsect1"><a id="sthref921"></a><a id="sthref922"></a>SDO_NET.CREATE_LRS_NETWORK</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref923"></a>Format</p>
<p class="synopsis">SDO_NET.CREATE_LRS_NETWORK(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;network IN VARCHAR2,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lrs_table_name IN VARCHAR2,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lrs_geom_column IN VARCHAR2,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;no_of_hierarchy_levels IN NUMBER,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;is_directed IN BOOLEAN,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;node_with_cost IN BOOLEAN DEFAULT FALSE,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;is_complex IN BOOLEAN DEFAULT FALSE,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;storage_parameters IN VARCHAR2 DEFAULT NULL);</p>
<p>or</p>
<p class="synopsis">SDO_NET.CREATE_LRS_NETWORK(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;network IN VARCHAR2,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;no_of_hierarchy_levels IN NUMBER,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;is_directed IN BOOLEAN,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;node_table_name IN VARCHAR2,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;node_cost_column IN VARCHAR2,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;link_table_name IN VARCHAR2,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;link_cost_column IN VARCHAR2,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lrs_table_name IN VARCHAR2,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lrs_geom_column IN VARCHAR2,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;path_table_name IN VARCHAR2,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;path_geom_column IN VARCHAR2,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;path_link_table_name IN VARCHAR2,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;subpath_table_name IN VARCHAR2,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;subpath_geom_column IN VARCHAR2,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;is_complex IN BOOLEAN DEFAULT FALSE,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;storage_parameters IN VARCHAR2 DEFAULT NULL);</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref924"></a>Description</p>
<p>Creates a spatial network containing LRS SDO_GEOMETRY objects, creates all necessary tables, and updates the network metadata.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref925"></a>Parameters</p>
<dl>
<dt>network</dt>
<dd>
<p>Network name.</p>
</dd>
<dt>lrs_table_name</dt>
<dd>
<p>Name of the table containing the LRS geometry column.</p>
</dd>
<dt>lrs_geom_column</dt>
<dd>
<p>Name of the column in <code>lrs_table_name</code> that contains LRS geometries (that is, SDO_GEOMETRY objects that include measure information for linear referencing).</p>
</dd>
<dt>is_directed</dt>
<dd>
<p>A Boolean value. <code>TRUE</code> indicates that the links are directed; <code>FALSE</code> indicates that the links are undirected (not directed).</p>
</dd>
<dt>no_of_hierarchy_levels</dt>
<dd>
<p>Number of hierarchy levels for links in the network. (For an explanation of network hierarchy, see <a href="sdo_net_concepts.htm#CIHDHHGB">Section 5.5</a>.)</p>
</dd>
<dt>node_with_cost</dt>
<dd>
<p>A Boolean value. <code>TRUE</code> causes a column named COST to be included in the <span class="italic">&lt;network-name&gt;</span>_NODE$ table; <code>FALSE</code> (the default) causes a column named COST not to be included in the <span class="italic">&lt;network-name&gt;</span>_NODE$ table.</p>
</dd>
<dt>is_complex</dt>
<dd>
<p>Reserved for future use. Ignored for the current release.</p>
</dd>
<dt>node_table_name</dt>
<dd>
<p>Name of the node table to be created. (The node table is explained in <a href="sdo_net_concepts.htm#CIHHHDJE">Section 5.9.1</a>.) If you use the format that does not specify this parameter, a node table named <span class="italic">&lt;network-name&gt;</span>_NODE$ is created.</p>
</dd>
<dt>node_cost_column</dt>
<dd>
<p>Name of the cost column in the node table. (The node table is explained in <a href="sdo_net_concepts.htm#CIHHHDJE">Section 5.9.1</a>.) If you use the format that does not specify this parameter, the geometry column is named COST.</p>
</dd>
<dt>link_table_name</dt>
<dd>
<p>Name of the link table to be created. (The link table is explained in <a href="sdo_net_concepts.htm#CIHIFBFJ">Section 5.9.2</a>.) If you use the format that does not specify this parameter, a link table named <span class="italic">&lt;network-name&gt;</span>_LINK$ is created.</p>
</dd>
<dt>link_cost_column</dt>
<dd>
<p>Name of the cost column in the link table. (The link table is explained in <a href="sdo_net_concepts.htm#CIHIFBFJ">Section 5.9.2</a>.) If you use the format that does not specify this parameter, the geometry column is named COST.</p>
</dd>
<dt>path_table_name</dt>
<dd>
<p>Name of the path table to be created. (The path table is explained in <a href="sdo_net_concepts.htm#CIHHJIEI">Section 5.9.3</a>.) If you use the format that does not specify this parameter, a path table named <span class="italic">&lt;network-name&gt;</span>_PATH$ is created.</p>
</dd>
<dt>path_geom_column</dt>
<dd>
<p>Name of the geometry column in the path table. (The path table is explained in <a href="sdo_net_concepts.htm#CIHHJIEI">Section 5.9.3</a>.) If you use the format that does not specify this parameter, the geometry column is named GEOMETRY.</p>
</dd>
<dt>path_link_table_name</dt>
<dd>
<p>Name of the path-link table to be created. (The path-link table is explained in <a href="sdo_net_concepts.htm#CIHCBCJC">Section 5.9.4</a>.) If you use the format that does not specify this parameter, a path-link table named <span class="italic">&lt;network-name&gt;</span>_PLINK$ is created.</p>
</dd>
<dt>subpath_table_name</dt>
<dd>
<p>Name of the subpath table to be created. (The subpath table is explained in <a href="sdo_net_concepts.htm#CIHHIJFA">Section 5.9.5</a>.).</p>
</dd>
<dt>subpath_geom_column</dt>
<dd>
<p>Name of the geometry column in the subpath table. (The subpath table is explained in <a href="sdo_net_concepts.htm#CIHHIJFA">Section 5.9.5</a>.)</p>
</dd>
<dt>storage_parameters</dt>
<dd>
<p>Physical storage parameters used internally to create network tables. Must be a valid string for use with the CREATE TABLE statement. For example: <code>TABLESPACE tbs_3 STORAGE (INITIAL 100K NEXT 200K)</code>. If you do not specify this parameter, the default physical storage values are used.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref926"></a>Usage Notes</p>
<p>This procedure provides a convenient way to create a spatial network of LRS geometries when the node, link, and optional related tables do not already exist. The procedure creates the network; creates the node, link, path, and path-link tables for the network; and inserts the appropriate information in the xxx_SDO_NETWORK_METADATA views (described in <a href="sdo_net_concepts.htm#CIHGBCAI">Section 5.10.1</a>).</p>
<p>An exception is generated if any of the tables to be created already exists.</p>
<p>The procedure has two formats. The simpler format creates the tables using default values for the table name and the geometry and cost column names. The other format lets you specify names for the tables and the geometry and cost columns.</p>
<p>As an alternative to using this procedure, you can create the network as follows: create the tables using the <a href="#CHDECBDE">SDO_NET.CREATE_NODE_TABLE</a>, <a href="#CHDFIFJF">SDO_NET.CREATE_LINK_TABLE</a>, <a href="#CHDHCIJD">SDO_NET.CREATE_PATH_TABLE</a>, and <a href="#CHDBDHID">SDO_NET.CREATE_PATH_LINK_TABLE</a> procedures; and insert the appropriate row in the USER_SDO_NETWORK_METADATA view.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref927"></a>Examples</p>
<p>The following example creates a directed spatial network named <code>LRS_NET1</code>. The LRS geometries are in the column named LRS_GEOM in the table named LRS_TAB. The example creates the LRS_NET1_NODE$, LRS_NET1_LINK$, LRS_NET1_PATH$, and LRS_NET1_PLINK$ tables, and updates the xxx_SDO_NETWORK_METADATA views. All geometry columns are named GEOMETRY. Both the node and link tables contain a cost column named COST.</p>
<pre>
EXECUTE SDO_NET.CREATE_LRS_NETWORK('LRS_NET1', 'LRS_TAB', 'LRS_GEOM', 1, TRUE, TRUE);
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" -->
<a id="CHDBIBAA"></a>
<div id="TOPOL977" class="refsect1">
<h2 class="refsect1"><a id="sthref928"></a><a id="sthref929"></a>SDO_NET.CREATE_LRS_TABLE</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref930"></a>Format</p>
<p class="synopsis">SDO_NET.CREATE_LRS_TABLE(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;table_name IN VARCHAR2,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;geom_column IN VARCHAR2,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;storage_parameters IN VARCHAR2 DEFAULT NULL);</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref931"></a>Description</p>
<p>Creates a table for storing Oracle Spatial linear referencing system (LRS) geometries.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref932"></a>Parameters</p>
<dl>
<dt>table_name</dt>
<dd>
<p>Name of the table containing the geometry column specified in <code>geom_column</code>.</p>
</dd>
<dt>geom_column</dt>
<dd>
<p>Name of the column (of type SDO_GEOMETRY) to contain geometry objects.</p>
</dd>
<dt>storage_parameters</dt>
<dd>
<p>Physical storage parameters used internally to create the LRS table. Must be a valid string for use with the CREATE TABLE statement. For example: <code>TABLESPACE tbs_3 STORAGE (INITIAL 100K NEXT 200K)</code>. If you do not specify this parameter, the default physical storage values are used.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref933"></a>Usage Notes</p>
<p>This procedure creates a table named <code>table_name</code> with two columns: GEOM_ID of type NUMBER and <code>geom_column</code> of type SDO_GEOMETRY.</p>
<p>Although the created table does not need to be used to store LRS geometries, the procedure is intended as a convenient method for creating a table to store such geometries. You will probably want to modify the table to add other columns before you store data in the table.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref934"></a>Examples</p>
<p>The following example creates a table named HIGHWAYS with a geometry column named GEOM.</p>
<pre>
EXECUTE SDO_NET.CREATE_LRS_TABLE('HIGHWAYS', 'GEOM');
 
PL/SQL procedure successfully completed.
 
DESCRIBE highways
 Name                                      Null?    Type
 ----------------------------------------- -------- ----------------------------
 GEOM_ID                                   NOT NULL NUMBER
 GEOM                                               MDSYS.SDO_GEOMETRY
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" -->
<a id="CHDECBDE"></a>
<div id="TOPOL978" class="refsect1">
<h2 class="refsect1"><a id="sthref935"></a><a id="sthref936"></a>SDO_NET.CREATE_NODE_TABLE</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref937"></a>Format</p>
<p class="synopsis">SDO_NET.CREATE_NODE_TABLE(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;table_name IN VARCHAR2,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;geom_type IN VARCHAR2,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;geom_column IN VARCHAR2,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cost_column IN VARCHAR2,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;no_of_hierarchy_levels IN NUMBER,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;is_complex IN BOOLEAN DEFAULT FALSE,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;storage_parameters IN VARCHAR2 DEFAULT NULL);</p>
<p>or</p>
<p class="synopsis">SDO_NET.CREATE_NODE_TABLE(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;table_name IN VARCHAR2,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;geom_type IN VARCHAR2,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;geom_column IN VARCHAR2,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cost_column IN VARCHAR2,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;partition_column IN VARCHAR2,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;no_of_hierarchy_levels IN NUMBER,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;is_complex IN BOOLEAN DEFAULT FALSE,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;storage_parameters IN VARCHAR2 DEFAULT NULL);</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref938"></a>Description</p>
<p>Creates a node table.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref939"></a>Parameters</p>
<dl>
<dt>table_name</dt>
<dd>
<p>Name of the node table.</p>
</dd>
<dt>geom_type</dt>
<dd>
<p>For a spatial network, specify a value indicating the geometry type of nodes: <code>SDO_GEOMETRY</code> for non-LRS SDO_GEOMETRY objects, <code>LRS_GEOMETRY</code> for LRS SDO_GEOMETRY objects, or <code>TOPO_GEOMETRY</code> for SDO_TOPO_GEOMETRY objects. (If the <code>geom_type</code> value is not spelled correctly, the <code>geom_column</code> column is <span class="italic">not</span> included in the table.)</p>
</dd>
<dt>geom_column</dt>
<dd>
<p>For a spatial network, the name of the column containing the geometry objects associated with the nodes.</p>
</dd>
<dt>cost_column</dt>
<dd>
<p>Name of the column containing the cost values to be associated with the nodes.</p>
</dd>
<dt>partition_column</dt>
<dd>
<p>Name of the column containing the partition ID values to be associated with the nodes.</p>
</dd>
<dt>no_of_hierarchy_levels</dt>
<dd>
<p>Number of hierarchy levels for nodes in the network. (For an explanation of network hierarchy, see <a href="sdo_net_concepts.htm#CIHDHHGB">Section 5.5</a>.)</p>
</dd>
<dt>is_complex</dt>
<dd>
<p>Reserved for future use. Ignored for the current release.</p>
</dd>
<dt>storage_parameters</dt>
<dd>
<p>Physical storage parameters used internally to create the &lt;network-name&gt;_NODE$ table (described in <a href="sdo_net_concepts.htm#CIHHHDJE">Section 5.9.1</a>). Must be a valid string for use with the CREATE TABLE statement. For example: <code>TABLESPACE tbs_3 STORAGE (INITIAL 100K NEXT 200K)</code>. If you do not specify this parameter, the default physical storage values are used.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref940"></a>Usage Notes</p>
<p>This procedure has two formats, one without the <code>partition_column</code> parameter and one with the <code>partition_column</code> parameter.</p>
<p>The node table is described in <a href="sdo_net_concepts.htm#CIHHHDJE">Section 5.9.1</a>.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref941"></a>Examples</p>
<p>The following example creates a node table named ROADS_NODES with a geometry column named NODE_GEOMETRY that will contain LRS geometries, no cost column, and a single hierarchy level.</p>
<pre>
EXECUTE SDO_NET.CREATE_NODE_TABLE('ROADS_NODES', 'LRS_GEOMETRY', 'NODE_GEOMETRY', NULL, 1);
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" -->
<div id="TOPOL979" class="refsect1"><a id="sthref942"></a>
<h2 class="refsect1"><a id="sthref943"></a><a id="sthref944"></a>SDO_NET.CREATE_PARTITION_TABLE</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref945"></a>Format</p>
<p class="synopsis">SDO_NET.CREATE_PARTITION_TABLE(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;table_name IN VARCHAR2);</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref946"></a>Description</p>
<p>Creates a partition table.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref947"></a>Parameters</p>
<dl>
<dt>table_name</dt>
<dd>
<p>Name of the partition table.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref948"></a>Usage Notes</p>
<p>The partition table is described in <a href="sdo_net_concepts.htm#CIHIDACD">Section 5.9.6</a>.</p>
<p>For information about using partitioned networks to perform analysis using the load on demand approach, see <a href="sdo_net_concepts.htm#CIHFHAID">Section 5.7</a>.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref949"></a>Examples</p>
<p>The following example creates a partition table named MY_PART_TAB.</p>
<pre>
EXECUTE SDO_NET.CREATE_PARTITION_TABLE('MY_PART_TAB');
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" -->
<a id="CHDBDHID"></a>
<div id="TOPOL980" class="refsect1">
<h2 class="refsect1"><a id="sthref950"></a><a id="sthref951"></a>SDO_NET.CREATE_PATH_LINK_TABLE</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref952"></a>Format</p>
<p class="synopsis">SDO_NET.CREATE_PATH_LINK_TABLE(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;table_name IN VARCHAR2,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;storage_parameters IN VARCHAR2 DEFAULT NULL);</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref953"></a>Description</p>
<p>Creates a path-link table, that is, a table with a row for each link in each path in the path table.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref954"></a>Parameters</p>
<dl>
<dt>table_name</dt>
<dd>
<p>Name of the path-link table.</p>
</dd>
<dt>storage_parameters</dt>
<dd>
<p>Physical storage parameters used internally to create the path-link table. Must be a valid string for use with the CREATE TABLE statement. For example: <code>TABLESPACE tbs_3 STORAGE (INITIAL 100K NEXT 200K)</code>. If you do not specify this parameter, the default physical storage values are used.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref955"></a>Usage Notes</p>
<p>The path-link table is described in <a href="sdo_net_concepts.htm#CIHCBCJC">Section 5.9.4</a>.</p>
<p>To use paths with a network, you must populate the path-link table.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref956"></a>Examples</p>
<p>The following example creates a path-link table named ROADS_PATHS_LINKS.</p>
<pre>
EXECUTE SDO_NET.CREATE_PATH_LINK_TABLE('ROADS_PATHS_LINKS');
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" -->
<a id="CHDHCIJD"></a>
<div id="TOPOL981" class="refsect1">
<h2 class="refsect1"><a id="sthref957"></a><a id="sthref958"></a>SDO_NET.CREATE_PATH_TABLE</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref959"></a>Format</p>
<p class="synopsis">SDO_NET.CREATE_PATH_TABLE(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;table_name IN VARCHAR2,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;geom_column IN VARCHAR2,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;storage_parameters IN VARCHAR2 DEFAULT NULL);</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref960"></a>Description</p>
<p>Creates a path table.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref961"></a>Parameters</p>
<dl>
<dt>table_name</dt>
<dd>
<p>Name of the path table.</p>
</dd>
<dt>geom_column</dt>
<dd>
<p>For a spatial network, name of the column containing the geometry objects associated with the paths.</p>
</dd>
<dt>storage_parameters</dt>
<dd>
<p>Physical storage parameters used internally to create the path table. Must be a valid string for use with the CREATE TABLE statement. For example: <code>TABLESPACE tbs_3 STORAGE (INITIAL 100K NEXT 200K)</code>. If you do not specify this parameter, the default physical storage values are used.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref962"></a>Usage Notes</p>
<p>The path table is described in <a href="sdo_net_concepts.htm#CIHHJIEI">Section 5.9.3</a>.</p>
<p>To use paths with a network, after you create the path table, you must create the path-link table using the <a href="#CHDBDHID">SDO_NET.CREATE_PATH_LINK_TABLE</a> procedure, and populate the path-link table.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref963"></a>Examples</p>
<p>The following example creates a path table named ROADS_PATHS that contains a geometry column named PATH_GEOMETRY.</p>
<pre>
EXECUTE SDO_NET.CREATE_PATH_TABLE('ROADS_PATHS', 'PATH_GEOMETRY');
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" -->
<a id="CHDIBGFF"></a>
<div id="TOPOL982" class="refsect1">
<h2 class="refsect1"><a id="sthref964"></a><a id="sthref965"></a>SDO_NET.CREATE_SDO_NETWORK</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref966"></a>Format</p>
<p class="synopsis">SDO_NET.CREATE_SDO_NETWORK(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;network IN VARCHAR2,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;no_of_hierarchy_levels IN NUMBER,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;is_directed IN BOOLEAN,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;node_with_cost IN BOOLEAN DEFAULT FALSE,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;is_complex IN BOOLEAN DEFAULT FALSE,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;storage_parameters IN VARCHAR2 DEFAULT NULL);</p>
<p>or</p>
<p class="synopsis">SDO_NET.CREATE_SDO_NETWORK(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;network IN VARCHAR2,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;no_of_hierarchy_levels IN NUMBER,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;is_directed IN BOOLEAN,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;node_table_name IN VARCHAR2,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;node_geom_column IN VARCHAR2,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;node_cost_column IN VARCHAR2,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;link_table_name IN VARCHAR2,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;link_geom_column IN VARCHAR2,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;link_cost_column IN VARCHAR2,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;path_table_name IN VARCHAR2,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;path_geom_column IN VARCHAR2,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;path_link_table_name IN VARCHAR2,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;subpath_table_name IN VARCHAR2,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;subpath_geom_column IN VARCHAR2,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;is_complex IN BOOLEAN DEFAULT FALSE,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;storage_parameters IN VARCHAR2 DEFAULT NULL);</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref967"></a>Description</p>
<p>Creates a spatial network containing non-LRS SDO_GEOMETRY objects, creates all necessary tables, and updates the network metadata.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref968"></a>Parameters</p>
<dl>
<dt>network</dt>
<dd>
<p>Network name.</p>
</dd>
<dt>no_of_hierarchy_levels</dt>
<dd>
<p>Number of hierarchy levels for links in the network. (For an explanation of network hierarchy, see <a href="sdo_net_concepts.htm#CIHDHHGB">Section 5.5</a>.)</p>
</dd>
<dt>is_directed</dt>
<dd>
<p>A Boolean value. <code>TRUE</code> indicates that the links are directed; <code>FALSE</code> indicates that the links are undirected (not directed).</p>
</dd>
<dt>node_with_cost</dt>
<dd>
<p>A Boolean value. <code>TRUE</code> causes a column named COST to be included in the <span class="italic">&lt;network-name&gt;</span>_NODE$ table; <code>FALSE</code> (the default) causes a column named COST not to be included in the <span class="italic">&lt;network-name&gt;</span>_NODE$ table.</p>
</dd>
<dt>node_table_name</dt>
<dd>
<p>Name of the node table to be created. (The node table is explained in <a href="sdo_net_concepts.htm#CIHHHDJE">Section 5.9.1</a>.) If you use the format that does not specify this parameter, a node table named <span class="italic">&lt;network-name&gt;</span>_NODE$ is created.</p>
</dd>
<dt>node_geom_column</dt>
<dd>
<p>Name of the geometry column in the node table. (The node table is explained in <a href="sdo_net_concepts.htm#CIHHHDJE">Section 5.9.1</a>.) If you use the format that does not specify this parameter, the geometry column is named GEOMETRY.</p>
</dd>
<dt>node_cost_column</dt>
<dd>
<p>Name of the cost column in the node table. (The node table is explained in <a href="sdo_net_concepts.htm#CIHHHDJE">Section 5.9.1</a>.) If you use the format that does not specify this parameter, the geometry column is named COST.</p>
</dd>
<dt>link_table_name</dt>
<dd>
<p>Name of the link table to be created. (The link table is explained in <a href="sdo_net_concepts.htm#CIHIFBFJ">Section 5.9.2</a>.) If you use the format that does not specify this parameter, a link table named <span class="italic">&lt;network-name&gt;</span>_LINK$ is created.</p>
</dd>
<dt>link_geom_column</dt>
<dd>
<p>Name of the geometry column in the link table. (The link table is explained in <a href="sdo_net_concepts.htm#CIHIFBFJ">Section 5.9.2</a>.) If you use the format that does not specify this parameter, the geometry column is named GEOMETRY.</p>
</dd>
<dt>link_cost_column</dt>
<dd>
<p>Name of the cost column in the link table. (The link table is explained in <a href="sdo_net_concepts.htm#CIHIFBFJ">Section 5.9.2</a>.) If you use the format that does not specify this parameter, the geometry column is named COST.</p>
</dd>
<dt>path_table_name</dt>
<dd>
<p>Name of the path table to be created. (The path table is explained in <a href="sdo_net_concepts.htm#CIHHJIEI">Section 5.9.3</a>.) If you use the format that does not specify this parameter, a path table named <span class="italic">&lt;network-name&gt;</span>_PATH$ is created.</p>
</dd>
<dt>path_geom_column</dt>
<dd>
<p>Name of the geometry column in the path table. (The path table is explained in <a href="sdo_net_concepts.htm#CIHHJIEI">Section 5.9.3</a>.) If you use the format that does not specify this parameter, the geometry column is named GEOMETRY.</p>
</dd>
<dt>path_link_table_name</dt>
<dd>
<p>Name of the path-link table to be created. (The path-link table is explained in <a href="sdo_net_concepts.htm#CIHCBCJC">Section 5.9.4</a>.) If you use the format that does not specify this parameter, a path-link table named <span class="italic">&lt;network-name&gt;</span>_PLINK$ is created.</p>
</dd>
<dt>subpath_table_name</dt>
<dd>
<p>Name of the subpath table to be created. (The subpath table is explained in <a href="sdo_net_concepts.htm#CIHHIJFA">Section 5.9.5</a>.)</p>
</dd>
<dt>subpath_geom_column</dt>
<dd>
<p>Name of the geometry column in the subpath table. (The subpath table is explained in <a href="sdo_net_concepts.htm#CIHHIJFA">Section 5.9.5</a>.).</p>
</dd>
<dt>is_complex</dt>
<dd>
<p>Reserved for future use. Ignored for the current release.</p>
</dd>
<dt>storage_parameters</dt>
<dd>
<p>Physical storage parameters used internally to create network tables. Must be a valid string for use with the CREATE TABLE statement. For example: <code>TABLESPACE tbs_3 STORAGE (INITIAL 100K NEXT 200K)</code>. If you do not specify this parameter, the default physical storage values are used.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref969"></a>Usage Notes</p>
<p>This procedure provides a convenient way to create a spatial network when the node, link, and optional related tables do not already exist. The procedure creates the network; creates the node, link, path, and path-link tables for the network; and inserts the appropriate information in the xxx_SDO_NETWORK_METADATA views (described in <a href="sdo_net_concepts.htm#CIHGBCAI">Section 5.10.1</a>).</p>
<p>An exception is generated if any of the tables to be created already exists.</p>
<p>The procedure has two formats. The simpler format creates the tables using default values for the table name and the geometry and cost column names. The other format lets you specify names for the tables and the geometry and cost columns.</p>
<p>As an alternative to using this procedure, you can create the network as follows: create the tables using the <a href="#CHDECBDE">SDO_NET.CREATE_NODE_TABLE</a>, <a href="#CHDFIFJF">SDO_NET.CREATE_LINK_TABLE</a>, <a href="#CHDHCIJD">SDO_NET.CREATE_PATH_TABLE</a>, and <a href="#CHDBDHID">SDO_NET.CREATE_PATH_LINK_TABLE</a> procedures; and insert the appropriate row in the USER_SDO_NETWORK_METADATA view.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref970"></a>Examples</p>
<p>The following example creates a directed spatial network named <code>SDO_NET1</code>. The example creates the SDO_NET1_NODE$, SDO_NET1_LINK$, SDO_NET1_PATH$, and SDO_NET1_PLINK$ tables, and updates the xxx_SDO_NETWORK_METADATA views. All geometry columns are named GEOMETRY. Both the node and link tables contain a cost column named COST.</p>
<pre>
EXECUTE SDO_NET.CREATE_SDO_NETWORK('SDO_NET1', 1, TRUE, TRUE);
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" -->
<a id="CACIHFHI"></a>
<div id="TOPOL983" class="refsect1">
<h2 class="refsect1"><a id="sthref971"></a><a id="sthref972"></a><a id="sthref973"></a>SDO_NET.CREATE_SUBPATH_TABLE</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref974"></a>Format</p>
<p class="synopsis">SDO_NET.CREATE_PATH_TABLE(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;table_name IN VARCHAR2,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;geom_column IN VARCHAR2,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;storage_parameters IN VARCHAR2 DEFAULT NULL);</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref975"></a>Description</p>
<p>Creates a subpath table.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref976"></a>Parameters</p>
<dl>
<dt>table_name</dt>
<dd>
<p>Name of the subpath table.</p>
</dd>
<dt>geom_column</dt>
<dd>
<p>For a spatial network, name of the column containing the geometry objects associated with the subpaths.</p>
</dd>
<dt>storage_parameters</dt>
<dd>
<p>Physical storage parameters used internally to create the subpath table (described in <a href="sdo_net_concepts.htm#CIHHHDJE">Section 5.9.1</a>). Must be a valid string for use with the CREATE TABLE statement. For example: <code>TABLESPACE tbs_3 STORAGE (INITIAL 100K NEXT 200K)</code>. If you do not specify this parameter, the default physical storage values are used.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref977"></a>Usage Notes</p>
<p>The subpath table is described in <a href="sdo_net_concepts.htm#CIHHIJFA">Section 5.9.5</a>.</p>
<p>To use subpaths with a network, you must create one or more path tables and their associated path-link tables.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref978"></a>Examples</p>
<p>The following example creates a subpath table named ROADS_SUBPATHS that contains a geometry column named SUBPATH_GEOMETRY.</p>
<pre>
EXECUTE SDO_NET.CREATE_SUBPATH_TABLE('ROADS_SUBPATHS', 'SUBPATH_GEOMETRY');
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" -->
<a id="CHDJFHAF"></a>
<div id="TOPOL984" class="refsect1">
<h2 class="refsect1"><a id="sthref979"></a><a id="sthref980"></a>SDO_NET.CREATE_TOPO_NETWORK</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref981"></a>Format</p>
<p class="synopsis">SDO_NET.CREATE_TOPO_NETWORK(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;network IN VARCHAR2,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;no_of_hierarchy_levels IN NUMBER,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;is_directed IN BOOLEAN,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;node_with_cost IN BOOLEAN DEFAULT FALSE,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;is_complex IN BOOLEAN DEFAULT FALSE,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;storage_parameters IN VARCHAR2 DEFAULT NULL);</p>
<p>or</p>
<p class="synopsis">SDO_NET.CREATE_TOPO_NETWORK(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;network IN VARCHAR2,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;no_of_hierarchy_levels IN NUMBER,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;is_directed IN BOOLEAN,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;node_table_name IN VARCHAR2,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;node_cost_column IN VARCHAR2,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;link_table_name IN VARCHAR2,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;link_cost_column IN VARCHAR2,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;path_table_name IN VARCHAR2,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;path_geom_column IN VARCHAR2,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;path_link_table_name IN VARCHAR2,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;is_complex IN BOOLEAN DEFAULT FALSE,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;storage_parameters IN VARCHAR2 DEFAULT NULL);</p>
<p>or</p>
<p class="synopsis">SDO_NET.CREATE_TOPO_NETWORK(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;network IN VARCHAR2,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;no_of_hierarchy_levels IN NUMBER,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;is_directed IN BOOLEAN,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;node_table_name IN VARCHAR2,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;node_geom_column IN VARCHAR2,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;node_cost_column IN VARCHAR2,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;link_table_name IN VARCHAR2,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;link_cost_column IN VARCHAR2,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;path_table_name IN VARCHAR2,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;path_geom_column IN VARCHAR2,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;path_link_table_name IN VARCHAR2,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;subpath_table_name IN VARCHAR2,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;subpath_geom_column IN VARCHAR2,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;is_complex IN BOOLEAN DEFAULT FALSE,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;storage_parameters IN VARCHAR2 DEFAULT NULL);</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref982"></a>Description</p>
<p>Creates a spatial topology network containing SDO_TOPO_GEOMETRY objects, creates all necessary tables, and updates the network metadata.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref983"></a>Parameters</p>
<dl>
<dt>network</dt>
<dd>
<p>Network name.</p>
</dd>
<dt>no_of_hierarchy_levels</dt>
<dd>
<p>Number of hierarchy levels for links in the network. (For an explanation of network hierarchy, see <a href="sdo_net_concepts.htm#CIHDHHGB">Section 5.5</a>.)</p>
</dd>
<dt>is_directed</dt>
<dd>
<p>A Boolean value. <code>TRUE</code> indicates that the links are directed; <code>FALSE</code> indicates that the links are undirected (not directed).</p>
</dd>
<dt>node_with_cost</dt>
<dd>
<p>A Boolean value. <code>TRUE</code> causes a column named COST to be included in the <span class="italic">&lt;network-name&gt;</span>_NODE$ table; <code>FALSE</code> (the default) causes a column named COST not to be included in the <span class="italic">&lt;network-name&gt;</span>_NODE$ table.</p>
</dd>
<dt>node_table_name</dt>
<dd>
<p>Name of the node table to be created. (The node table is explained in <a href="sdo_net_concepts.htm#CIHHHDJE">Section 5.9.1</a>.) If you use the format that does not specify this parameter, a node table named <span class="italic">&lt;network-name&gt;</span>_NODE$ is created.</p>
</dd>
<dt>node_cost_column</dt>
<dd>
<p>Name of the cost column in the node table. (The node table is explained in <a href="sdo_net_concepts.htm#CIHHHDJE">Section 5.9.1</a>.) If you use the format that does not specify this parameter, the geometry column is named COST.</p>
</dd>
<dt>link_table_name</dt>
<dd>
<p>Name of the link table to be created. (The link table is explained in <a href="sdo_net_concepts.htm#CIHIFBFJ">Section 5.9.2</a>.) If you use the format that does not specify this parameter, a link table named <span class="italic">&lt;network-name&gt;</span>_LINK$ is created.</p>
</dd>
<dt>link_cost_column</dt>
<dd>
<p>Name of the cost column in the link table. (The link table is explained in <a href="sdo_net_concepts.htm#CIHIFBFJ">Section 5.9.2</a>.) If you use the format that does not specify this parameter, the geometry column is named COST.</p>
</dd>
<dt>path_table_name</dt>
<dd>
<p>Name of the path table to be created. (The path table is explained in <a href="sdo_net_concepts.htm#CIHHJIEI">Section 5.9.3</a>.) If you use the format that does not specify this parameter, a path table named <span class="italic">&lt;network-name&gt;</span>_PATH$ is created.</p>
</dd>
<dt>path_geom_column</dt>
<dd>
<p>Name of the geometry column in the path table. (The path table is explained in <a href="sdo_net_concepts.htm#CIHHJIEI">Section 5.9.3</a>.) If you use the format that does not specify this parameter, the geometry column is named GEOMETRY.</p>
</dd>
<dt>path_link_table_name</dt>
<dd>
<p>Name of the path-link table to be created. (The path-link table is explained in <a href="sdo_net_concepts.htm#CIHCBCJC">Section 5.9.4</a>.) If you use the format that does not specify this parameter, a path-link table named <span class="italic">&lt;network-name&gt;</span>_PLINK$ is created.</p>
</dd>
<dt>subpath_table_name</dt>
<dd>
<p>Name of the subpath table to be created. (The subpath table is explained in <a href="sdo_net_concepts.htm#CIHHIJFA">Section 5.9.5</a>.).</p>
</dd>
<dt>subpath_geom_column</dt>
<dd>
<p>Name of the geometry column in the subpath table. (The subpath table is explained in <a href="sdo_net_concepts.htm#CIHHIJFA">Section 5.9.5</a>.)</p>
</dd>
<dt>is_complex</dt>
<dd>
<p>Reserved for future use. Ignored for the current release.</p>
</dd>
<dt>storage_parameters</dt>
<dd>
<p>Physical storage parameters used internally to create network tables. Must be a valid string for use with the CREATE TABLE statement. For example: <code>TABLESPACE tbs_3 STORAGE (INITIAL 100K NEXT 200K)</code>. If you do not specify this parameter, the default physical storage values are used.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref984"></a>Usage Notes</p>
<p>This procedure provides a convenient way to create a spatial network when the node, link, and optional related tables do not already exist. The procedure creates the network; creates the node, link, path, and path-link tables for the network; and inserts the appropriate information in the xxx_SDO_NETWORK_METADATA views (described in <a href="sdo_net_concepts.htm#CIHGBCAI">Section 5.10.1</a>). The node and link tables contain a topology geometry column named TOPO_GEOMETRY of type SDO_TOPO_GEOMETRY.</p>
<p>An exception is generated if any of the tables to be created already exists.</p>
<p>The procedure has two formats. The simpler format creates the tables using default values for the table name and the geometry and cost column names. The other format lets you specify names for the tables and the geometry and cost columns.</p>
<p>As an alternative to using this procedure, you can create the network as follows: create the tables using the <a href="#CHDECBDE">SDO_NET.CREATE_NODE_TABLE</a>, <a href="#CHDFIFJF">SDO_NET.CREATE_LINK_TABLE</a>, <a href="#CHDHCIJD">SDO_NET.CREATE_PATH_TABLE</a>, and <a href="#CHDBDHID">SDO_NET.CREATE_PATH_LINK_TABLE</a> procedures; and insert the appropriate row in the USER_SDO_NETWORK_METADATA view.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref985"></a>Examples</p>
<p>The following example creates a directed spatial topology geometry network named <code>TOPO_NET1</code>. The example creates the TOPO_NET1_NODE$, TOPO_NET1_LINK$, TOPO_NET1_PATH$, and TOPO_NET1_PLINK$ tables, and updates the xxx_SDO_NETWORK_METADATA views. The topology geometry columns are named TOPO_GEOMETRY. Both the node and link tables contain a cost column named COST.</p>
<pre>
EXECUTE SDO_NET.CREATE_TOPO_NETWORK('TOPO_NET1', 1, TRUE, TRUE);
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" -->
<div id="TOPOL985" class="refsect1"><a id="sthref986"></a>
<h2 class="refsect1"><a id="sthref987"></a><a id="sthref988"></a><a id="sthref989"></a>SDO_NET.DELETE_LINK</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref990"></a>Format</p>
<p class="synopsis">SDO_NET.DELETE_LINK(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;network IN VARCHAR2,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;link_id IN NUMBER);</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref991"></a>Description</p>
<p>Deletes a link and all dependent network elements.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref992"></a>Parameters</p>
<dl>
<dt>network</dt>
<dd>
<p>Network name.</p>
</dd>
<dt>link_id</dt>
<dd>
<p>ID of the link to delete.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref993"></a>Usage Notes</p>
<p>This procedure deletes the specified link from the link table (described in <a href="sdo_net_concepts.htm#CIHIFBFJ">Section 5.9.2</a>), and it deletes any other network elements that depend on this link. For example, if the specified link is included in any paths and subpaths, those paths and subpaths are deleted also.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref994"></a>Examples</p>
<p>The following example deletes the link in the SDO_NET2 network whose link ID is 1.</p>
<pre>
SELECT SDO_NET.DELETE_LINK('SDO_NET2', 1);
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" -->
<div id="TOPOL986" class="refsect1"><a id="sthref995"></a>
<h2 class="refsect1"><a id="sthref996"></a><a id="sthref997"></a><a id="sthref998"></a>SDO_NET.DELETE_NODE</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref999"></a>Format</p>
<p class="synopsis">SDO_NET.DELETE_NODE(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;network IN VARCHAR2,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;node_id IN NUMBER);</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1000"></a>Description</p>
<p>Deletes a node and all dependent network elements.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1001"></a>Parameters</p>
<dl>
<dt>network</dt>
<dd>
<p>Network name.</p>
</dd>
<dt>node_id</dt>
<dd>
<p>ID of the node to delete.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1002"></a>Usage Notes</p>
<p>This procedure deletes the specified node from the node table (described in <a href="sdo_net_concepts.htm#CIHHHDJE">Section 5.9.1</a>), and it deletes any other network elements that depend on this node. For example, if the specified node is included in any link definitions, those links are deleted; and if any of the deleted links are included in any paths and subpaths, those paths and subpaths are deleted also.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1003"></a>Examples</p>
<p>The following example deletes the node in the SDO_NET2 network whose node ID is 1.</p>
<pre>
SELECT SDO_NET.DELETE_NODE('SDO_NET2', 1);
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" -->
<div id="TOPOL987" class="refsect1"><a id="sthref1004"></a>
<h2 class="refsect1"><a id="sthref1005"></a><a id="sthref1006"></a><a id="sthref1007"></a>SDO_NET.DELETE_PATH</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1008"></a>Format</p>
<p class="synopsis">SDO_NET.DELETE_PATH(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;network IN VARCHAR2,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;path_id IN NUMBER);</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1009"></a>Description</p>
<p>Deletes a path and all dependent network elements.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1010"></a>Parameters</p>
<dl>
<dt>network</dt>
<dd>
<p>Network name.</p>
</dd>
<dt>path_id</dt>
<dd>
<p>ID of the path to delete.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1011"></a>Usage Notes</p>
<p>This procedure deletes the specified path from the path table (described in <a href="sdo_net_concepts.htm#CIHHJIEI">Section 5.9.3</a>), and it deletes any other network elements that depend on this path. For example, if the specified path has any subpaths, those subpaths are deleted also.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1012"></a>Examples</p>
<p>The following example deletes the path in the SDO_NET2 network whose path ID is 1.</p>
<pre>
SELECT SDO_NET.DELETE_PATH('SDO_NET2', 1);
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" -->
<div id="TOPOL988" class="refsect1"><a id="sthref1013"></a>
<h2 class="refsect1"><a id="sthref1014"></a><a id="sthref1015"></a><a id="sthref1016"></a>SDO_NET.DELETE_SUBPATH</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1017"></a>Format</p>
<p class="synopsis">SDO_NET.DELETE_SUBPATH(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;network IN VARCHAR2,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;subpath_id IN NUMBER);</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1018"></a>Description</p>
<p>Deletes a subpath.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1019"></a>Parameters</p>
<dl>
<dt>network</dt>
<dd>
<p>Network name.</p>
</dd>
<dt>subpath_id</dt>
<dd>
<p>ID of the subpath to delete.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1020"></a>Usage Notes</p>
<p>This procedure deletes the specified subpath from the path table (described in <a href="sdo_net_concepts.htm#CIHHJIEI">Section 5.9.3</a>). It does not delete any other network elements, because no other elements depend on a subpath definition.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1021"></a>Examples</p>
<p>The following example deletes the subpath in the SDO_NET2 network whose subpath ID is 17.</p>
<pre>
SELECT SDO_NET.DELETE_SUBPATH('SDO_NET2', 17);
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" -->
<a id="CACDGBCJ"></a>
<div id="TOPOL989" class="refsect1">
<h2 class="refsect1"><a id="sthref1022"></a><a id="sthref1023"></a><a id="sthref1024"></a>SDO_NET.DEREGISTER_CONSTRAINT</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1025"></a>Format</p>
<p class="synopsis">SDO_NET.DEREGISTER_CONSTRAINT(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;constraint_name IN VARCHAR2);</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1026"></a>Description</p>
<p>Unloads (removes) the class for the specified network constraint from the Java repository in the database, and deletes the row for that constraint from the USER_SDO_NETWORK_CONSTRAINTS view (described in <a href="sdo_net_concepts.htm#CIHJFCBA">Section 5.10.2</a>).</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1027"></a>Parameters</p>
<dl>
<dt>constraint_name</dt>
<dd>
<p>Name of the network constraint. Must match a value in the CONSTRAINT column of the USER_SDO_NETWORK_CONSTRAINTS view.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1028"></a>Usage Notes</p>
<p>Use this procedure if you want to disable a network constraint that you had previously enabled, such as by using the <a href="#CACCJIEB">SDO_NET.REGISTER_CONSTRAINT</a>procedure. For more information about network constraints, see <a href="sdo_net_concepts.htm#CIHJFIIG">Section 5.6</a>.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1029"></a>Examples</p>
<p>The following example deregisters (disables) a network constraint named <code>GivenProhibitedTurn</code>.</p>
<pre>
EXECUTE SDO_NET.DEREGISTER_CONSTRAINT('GivenProhibitedTurn');
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" -->
<a id="CHDIEAIB"></a>
<div id="TOPOL990" class="refsect1">
<h2 class="refsect1"><a id="sthref1030"></a><a id="sthref1031"></a>SDO_NET.DROP_NETWORK</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1032"></a>Format</p>
<p class="synopsis">SDO_NET.DROP_NETWORK(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;network IN VARCHAR2);</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1033"></a>Description</p>
<p>Drops (deletes) a network.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1034"></a>Parameters</p>
<dl>
<dt>network</dt>
<dd>
<p>Name of the network to be dropped.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1035"></a>Usage Notes</p>
<p>This procedure also deletes the node, link, and path tables associated with the network, and the network metadata for the network.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1036"></a>Examples</p>
<p>The following example drops the network named <code>ROADS_NETWORK</code>.</p>
<pre>
EXECUTE SDO_NET.DROP_NETWORK('ROADS_NETWORK');
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" -->
<a id="CACCFCAB"></a>
<div id="TOPOL991" class="refsect1">
<h2 class="refsect1"><a id="sthref1037"></a><a id="sthref1038"></a><a id="sthref1039"></a>SDO_NET.FIND_CONNECTED_COMPONENTS</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1040"></a>Format</p>
<p class="synopsis">SDO_NET.FIND_CONNECTED_COMPONENTS(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;network IN VARCHAR2,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;link_level IN NUMBER DEFAULT 1,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;component_table_name IN VARCHAR2,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;log_loc IN VARCHAR2,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;log_file IN VARCHAR2,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;open_mode IN VARCHAR2 DEFAULT 'A');</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1041"></a>Description</p>
<p>Finds all connected components for a specified link level in a network, and stores the information in the connected component table.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1042"></a>Parameters</p>
<dl>
<dt>network</dt>
<dd>
<p>Network name.</p>
</dd>
<dt>link_level</dt>
<dd>
<p>Link level for which to find connected components (default = 1). The link level reflects the priority level for the link, and is used for network analysis, so that links with higher priority levels can be considered first in computing a path.</p>
</dd>
<dt>component_table_name</dt>
<dd>
<p>Name of the connected component table, which is created by this procedure. (If an existing table with the specified name already exists, it is updated with information for the specified link level.) The connected component table is described in <a href="sdo_net_concepts.htm#CIHCCGEF">Section 5.9.8</a>.</p>
</dd>
<dt>log_loc</dt>
<dd>
<p>Directory object that identifies the path for the log file. To create a directory object, use the SQL*Plus command CREATE DIRECTORY.</p>
</dd>
<dt>log_file</dt>
<dd>
<p>Log file containing information about Spatial network operations, including any possible errors or problems.</p>
</dd>
<dt>open_mode</dt>
<dd>
<p>A one-character code indicating the mode in which to open the log file: <code>W</code> for write over (that is, delete any existing log file at the specified location and name, and create a new file), or <code>A</code> (the default) for append (that is, append information to the existing specified log file). If you specify <code>A</code> and the log file does not exist, a new log file is created.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1043"></a>Usage Notes</p>
<p>This procedure finds, for each node in the specified network, information about all other nodes that are reachable from that node, and it stores the information in the specified connected component table. Having this information in the table enables better performance for many network analysis operations.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1044"></a>Examples</p>
<p>The following example finds the connected components for link level 1 in the SDO_PARTITIONED network, and creates or updates the SDO_PARTITIONED_CONN_COMP_TAB table. Information about the operation is added (<code>open_mode =&gt; 'a'</code>) to the <code>sdo_partitioned.log</code> file, located in the location associated with the directory object named <code>LOG_DIR</code>.</p>
<pre>
EXECUTE SDO_NET.FIND_CONNECTED_COMPONENTS(-
  network =&gt; 'SDO_PARTITIONED', -
  link_level =&gt; 1,-
  component_table_name =&gt; 'sdo_partitioned_conn_comp_tab',-
  log_loc =&gt; 'LOG_DIR', log_file=&gt; 'sdo_partitioned.log',-
  open_mode =&gt; 'a');
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" -->
<a id="CACGIJFD"></a>
<div class="refsect1">
<h2 class="refsect1"><a id="sthref1045"></a><a id="sthref1046"></a><a id="sthref1047"></a>SDO_NET.GENERATE_NODE_LEVELS</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1048"></a>Format</p>
<p class="synopsis">SDO_NET.GENERATE_NODE_LEVELS(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;network IN VARCHAR2,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;node_level_table_name IN VARCHAR2,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;overwrite IN BOOLEAN DEFAULT FALSE,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;log_loc IN VARCHAR2,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;log_file IN VARCHAR2,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;open_mode IN VARCHAR2 DEFAULT 'A');</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1049"></a>Description</p>
<p>Generates node levels for a specified hierarchical (multilevel) network, and stores the information in a table.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1050"></a>Parameters</p>
<dl>
<dt>network</dt>
<dd>
<p>Network name.</p>
</dd>
<dt>node_level_table_name</dt>
<dd>
<p>Table in which to store node level information. This table must have the following definition: <code>(node_id NUMBER PRIMARY KEY, link_level NUMBER)</code></p>
</dd>
<dt>overwrite</dt>
<dd>
<p>Controls the behavior if the table specified in <code>node_level_table_name</code> already exists: <code>TRUE</code> replaces the contents of that table with new data; <code>FALSE</code> (the default) generates an error. (This parameter has no effect if the table specified in <code>node_level_table_name</code> does not exist.)</p>
</dd>
<dt>log_loc</dt>
<dd>
<p>Directory object that identifies the path for the log file. To create a directory object, use the SQL*Plus command CREATE DIRECTORY.</p>
</dd>
<dt>log_file</dt>
<dd>
<p>Log file containing information about Spatial network operations, including any possible errors or problems.</p>
</dd>
<dt>open_mode</dt>
<dd>
<p>A one-character code indicating the mode in which to open the log file: <code>W</code> for write over (that is, delete any existing log file at the specified location and name, and create a new file), or <code>A</code> (the default) for append (that is, append information to the existing specified log file). If you specify <code>A</code> and the log file does not exist, a new log file is created.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1051"></a>Usage Notes</p>
<p>If <code>network</code> is not a hierarchical network (one with multiple link levels), this procedure does not perform any operation. For information about hierarchical networks, see <a href="sdo_net_concepts.htm#CIHDHHGB">Section 5.5</a>.</p>
<p>The node level table name is stored in the NODE_LEVEL_TABLE_NAME column of the USER_SDO_NETWORK_METADATA view, which is described in <a href="sdo_net_concepts.htm#CIHGBCAI">Section 5.10.1</a>.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1052"></a>Examples</p>
<p>The following example generates the node level information for the MY_MULTILEVEL_NET network, and stores the information in the MY_NET_NODE_LEVELS table. Information about the operation is added (<code>open_mode =&gt; 'a'</code>) to the <code>my_multilevel_net.log</code> file, located in the location associated with the directory object named <code>LOG_DIR</code>.</p>
<pre>
EXECUTE SDO_NET.GENERATE_NODE_LEVELS(-
  network =&gt; 'MY_MULTILEVEL_NET', -
  node_level_table_name =&gt; 'MY_NET_NODE_LEVELS',-
  overwrite =&gt; FALSE,-
  log_loc =&gt; 'LOG_DIR', log_file=&gt; 'my_multilevel_net.log',-
  open_mode =&gt; 'a');
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" -->
<a id="CACFHGAE"></a>
<div id="TOPOL992" class="refsect1">
<h2 class="refsect1"><a id="sthref1053"></a><a id="sthref1054"></a><a id="sthref1055"></a>SDO_NET.GENERATE_PARTITION_BLOB</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1056"></a>Format</p>
<p class="synopsis">SDO_NET.GENERATE_PARTITION_BLOB(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;network IN VARCHAR2,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;link_level IN NUMBER DEFAULT 1,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;partition_id IN VARCHAR2,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;include_user_data IN BOOLEAN,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;log_loc IN VARCHAR2,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;log_file IN VARCHAR2,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;open_mode IN VARCHAR2 DEFAULT 'A',</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;preform_delta_update IN BOOLEAN DEFAULT FALSE);</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1057"></a>Description</p>
<p>Generates a single binary large object (BLOB) representation for a specified partition associated with a specified link level in the network, and stores the information in the existing partition BLOB table.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1058"></a>Parameters</p>
<dl>
<dt>network</dt>
<dd>
<p>Network name.</p>
</dd>
<dt>link_level</dt>
<dd>
<p>Link level for links to be included in the BLOB (default = 1). The link level reflects the priority level for the link, and is used for network analysis, so that links with higher priority levels can be considered first in computing a path.</p>
</dd>
<dt>partition_id</dt>
<dd>
<p>Partition ID number. Network elements associated with the specified combination of link level and partition ID are included in the generated BLOB.</p>
</dd>
<dt>include_user_data</dt>
<dd>
<p><code>TRUE</code> if the BLOB should include any user data associated with the network elements represented in each BLOB, or <code>FALSE</code> if the BLOB should not include any user data.</p>
</dd>
<dt>log_loc</dt>
<dd>
<p>Directory object that identifies the path for the log file. To create a directory object, use the SQL*Plus command CREATE DIRECTORY.</p>
</dd>
<dt>log_file</dt>
<dd>
<p>Log file containing information about Spatial network operations, including any possible errors or problems.</p>
</dd>
<dt>open_mode</dt>
<dd>
<p>A one-character code indicating the mode in which to open the log file: <code>W</code> for write over (that is, delete any existing log file at the specified location and name, and create a new file), or <code>A</code> (the default) for append (that is, append information to the existing specified log file). If you specify <code>A</code> and the log file does not exist, a new log file is created.</p>
</dd>
<dt>perform_delta_update</dt>
<dd>
<p>(Reserved for future use. The only permitted value is <code>FALSE</code>, the default.)</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1059"></a>Usage Notes</p>
<p>This procedure adds a single new BLOB or replaces a single existing BLOB in the partition BLOB table, which must have been previously created using the <a href="#CACIHEGB">SDO_NET.GENERATE_PARTITION_BLOBS</a> procedure.</p>
<p>One use for this procedure is to perform a relatively quick update of the BLOB for a desired partition in a network that contains multiple large partitions, as opposed to than updating the BLOBs for all partitions using the <a href="#CACIHEGB">SDO_NET.GENERATE_PARTITION_BLOBS</a> procedure.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1060"></a>Examples</p>
<p>The following example generates the partition BLOB for the partition associated with partition ID 1 and link level 1 in the SDO_PARTITIONED network, and adds or replaces the appropriate BLOB in the SDO_PARTITIONED_PART_BLOB_TAB table. Any user data associated with the network elements is also included. Information about the operation is added (<code>open_mode =&gt; 'a'</code>) to the <code>sdo_partitioned.log</code> file, located in the location associated with the directory object named <code>LOG_DIR</code>.</p>
<pre>
EXECUTE SDO_NET.GENERATE_PARTITION_BLOB(-
  network =&gt; 'SDO_PARTITIONED', -
  link_level =&gt; 1,-
  partition_id =&gt; 1,-
  include_user_data =&gt; true,-
  log_loc =&gt; 'LOG_DIR', log_file=&gt; 'sdo_partitioned.log',-
  open_mode =&gt; 'a');
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" -->
<a id="CACIHEGB"></a>
<div id="TOPOL993" class="refsect1">
<h2 class="refsect1"><a id="sthref1061"></a><a id="sthref1062"></a><a id="sthref1063"></a>SDO_NET.GENERATE_PARTITION_BLOBS</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1064"></a>Format</p>
<p class="synopsis">SDO_NET.GENERATE_PARTITION_BLOBS(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;network IN VARCHAR2,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;link_level IN NUMBER DEFAULT 1,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;partition_blob_table_name IN VARCHAR2,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;include_user_data IN BOOLEAN,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;commit_for_each_blob IN BOOLEAN DEFAULT TRUE,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;log_loc IN VARCHAR2,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;log_file IN VARCHAR2,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;open_mode IN VARCHAR2 DEFAULT 'A',</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;preform_delta_update IN BOOLEAN DEFAULT FALSE,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;regenerate_node_levels IN BOOLEAN DEFAULT FALSE);</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1065"></a>Description</p>
<p>Generates a binary large object (BLOB) representation for partitions associated with a specified link level in the network, and stores the information in the partition BLOB table.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1066"></a>Parameters</p>
<dl>
<dt>network</dt>
<dd>
<p>Network name.</p>
</dd>
<dt>link_level</dt>
<dd>
<p>Link level for links to be included in each BLOB (default = 1). The link level reflects the priority level for the link, and is used for network analysis, so that links with higher priority levels can be considered first in computing a path.</p>
</dd>
<dt>partition_blob_table_name</dt>
<dd>
<p>Name of the partition BLOB table, which is created by this procedure. (If an existing table with the specified name already exists, it is updated with information for the specified link level.) The partition BLOB table is described in <a href="sdo_net_concepts.htm#CIHCHCAB">Section 5.9.7</a>.</p>
</dd>
<dt>include_user_data</dt>
<dd>
<p><code>TRUE</code> if each BLOB should include any user data associated with the network elements represented in each BLOB, or <code>FALSE</code> if each BLOB should not include any user data.</p>
</dd>
<dt>commit_for_each_blob</dt>
<dd>
<p><code>TRUE</code> (the default) if each partition BLOB should be committed to the database after it is generated, or <code>FALSE</code> if each BLOB should not be committed (in which case you must perform one or more explicit commit operations).</p>
</dd>
<dt>log_loc</dt>
<dd>
<p>Directory object that identifies the path for the log file. To create a directory object, use the SQL*Plus command CREATE DIRECTORY.</p>
</dd>
<dt>log_file</dt>
<dd>
<p>Log file containing information about Spatial network operations, including any possible errors or problems.</p>
</dd>
<dt>open_mode</dt>
<dd>
<p>A one-character code indicating the mode in which to open the log file: <code>W</code> for write over (that is, delete any existing log file at the specified location and name, and create a new file), or <code>A</code> (the default) for append (that is, append information to the existing specified log file). If you specify <code>A</code> and the log file does not exist, a new log file is created.</p>
</dd>
<dt>perform_delta_update</dt>
<dd>
<p>(Reserved for future use. The only permitted value is <code>FALSE</code>, the default.)</p>
</dd>
<dt>regenerate_node_levels</dt>
<dd>
<p><code>TRUE</code> to regenerate the node level table for multilevel networks, or <code>FALSE</code> (the default) not to regenerate the node level table for multilevel networks. You should set this parameter to <code>TRUE</code> if higher-level (second level or above) nodes are added or deleted from the network, or if the level of a node is changed. The level of a node is defined as the maximum link level coming into or out of the node.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1067"></a>Usage Notes</p>
<p>Generating partition BLOBs enables better performance for many network analysis operations, especially with large networks.</p>
<p>If the network is not partitioned, this procedure generates a single BLOB representing the entire network.</p>
<p>Do not confuse this procedure with <a href="#CACFHGAE">SDO_NET.GENERATE_PARTITION_BLOB</a>, which regenerates a single BLOB for a specified combination of link level and partition ID, and adds that information to the existing partition BLOB table.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1068"></a>Examples</p>
<p>The following example generates partition BLOBs for link level 1 in the SDO_PARTITIONED network, and creates or updates the SDO_PARTITIONED_PART_BLOB_TAB table. Any user data associated with the network elements is also included. Information about the operation is added (<code>open_mode =&gt; 'a'</code>) to the <code>sdo_partitioned.log</code> file, located in the location associated with the directory object named <code>LOG_DIR</code>.</p>
<pre>
EXECUTE SDO_NET.GENERATE_PARTITION_BLOBS(-
  network =&gt; 'SDO_PARTITIONED', -
  link_level =&gt; 1,-
  partition_blob_table_name =&gt; 'sdo_partitioned_part_blob_tab',-
  include_user_data =&gt; true,-
  log_loc =&gt; 'LOG_DIR', log_file=&gt; 'sdo_partitioned.log',-
  open_mode =&gt; 'a');
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" -->
<a id="CHDIFBBC"></a>
<div id="TOPOL994" class="refsect1">
<h2 class="refsect1"><a id="sthref1069"></a><a id="sthref1070"></a>SDO_NET.GET_CHILD_LINKS</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1071"></a>Format</p>
<p class="synopsis">SDO_NET.GET_CHILD_LINKS(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;network IN VARCHAR2,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;link_id IN NUMBER</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) RETURN SDO_NUMBER_ARRAY;</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1072"></a>Description</p>
<p>Returns the child links of a link.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1073"></a>Parameters</p>
<dl>
<dt>network</dt>
<dd>
<p>Network name.</p>
</dd>
<dt>link_id</dt>
<dd>
<p>ID of the link for which to return the child links.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1074"></a>Usage Notes</p>
<p>For information about parent and child nodes and links in a network hierarchy, see <a href="sdo_net_concepts.htm#CIHDHHGB">Section 5.5</a>.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1075"></a>Examples</p>
<p>The following example returns the child links of the link in the <code>XYZ_NETWORK</code> network whose link ID is 1001.</p>
<pre>
SELECT SDO_NET.GET_CHILD_LINKS('XYZ_NETWORK', 1001) FROM DUAL;
 
SDO_NET.GET_CHILD_LINKS('XYZ_NETWORK',1001)                                     
--------------------------------------------------------------------------------
SDO_NUMBER_ARRAY(1108, 1109) 
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" -->
<a id="CHDFDCIB"></a>
<div id="TOPOL995" class="refsect1">
<h2 class="refsect1"><a id="sthref1076"></a><a id="sthref1077"></a>SDO_NET.GET_CHILD_NODES</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1078"></a>Format</p>
<p class="synopsis">SDO_NET.GET_CHILD_NODES(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;network IN VARCHAR2,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;node_id IN NUMBER</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) RETURN SDO_NUMBER_ARRAY;</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1079"></a>Description</p>
<p>Returns the child nodes of a node.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1080"></a>Parameters</p>
<dl>
<dt>network</dt>
<dd>
<p>Network name.</p>
</dd>
<dt>node_id</dt>
<dd>
<p>ID of the node for which to return the child nodes.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1081"></a>Usage Notes</p>
<p>For information about parent and child nodes and links in a network hierarchy, see <a href="sdo_net_concepts.htm#CIHDHHGB">Section 5.5</a>.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1082"></a>Examples</p>
<p>The following example returns the child nodes of the node in the <code>XYZ_NETWORK</code> network whose node ID is 1.</p>
<pre>
SELECT SDO_NET.GET_CHILD_NODES('XYZ_NETWORK', 1) FROM DUAL;
 
SDO_NET.GET_CHILD_NODES('XYZ_NETWORK',1)                                        
--------------------------------------------------------------------------------
SDO_NUMBER_ARRAY(101, 102, 103, 104, 105, 106)
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" -->
<a id="CHDHGHGF"></a>
<div id="TOPOL996" class="refsect1">
<h2 class="refsect1"><a id="sthref1083"></a><a id="sthref1084"></a>SDO_NET.GET_GEOMETRY_TYPE</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1085"></a>Format</p>
<p class="synopsis">SDO_NET.GET_GEOMETRY_TYPE(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;network IN VARCHAR2</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) RETURN VARCHAR2;</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1086"></a>Description</p>
<p>Returns the geometry type for a spatial network.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1087"></a>Parameters</p>
<dl>
<dt>network</dt>
<dd>
<p>Network name.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1088"></a>Usage Notes</p>
<p>This function returns the value of the GEOMETRY_TYPE column for the network in the USER_SDO_NETWORK_METADATA view (see <a href="sdo_net_concepts.htm#CIHFCDFC">Table 5-9</a> in <a href="sdo_net_concepts.htm#CIHGBCAI">Section 5.10.1</a>).</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1089"></a>Examples</p>
<p>The following example returns the geometry type for the network named <code>ROADS_NETWORK</code>.</p>
<pre>
SELECT SDO_NET.GET_GEOMETRY_TYPE('ROADS_NETWORK') FROM DUAL;
 
SDO_NET.GET_GEOMETRY_TYPE('ROADS_NETWORK')                                      
--------------------------------------------------------------------------------
LRS_GEOMETRY 
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" -->
<a id="CHDDHAFG"></a>
<div id="TOPOL997" class="refsect1">
<h2 class="refsect1"><a id="sthref1090"></a><a id="sthref1091"></a><a id="sthref1092"></a>SDO_NET.GET_IN_LINKS</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1093"></a>Format</p>
<p class="synopsis">SDO_NET.GET_IN_LINKS(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;network IN VARCHAR2,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;node_id IN NUMBER</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) RETURN SDO_NUMBER_ARRAY;</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1094"></a>Description</p>
<p>Returns an array of link ID numbers of the inbound links to a node.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1095"></a>Parameters</p>
<dl>
<dt>network</dt>
<dd>
<p>Network name.</p>
</dd>
<dt>node_id</dt>
<dd>
<p>ID of the node for which to return the array of inbound links.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1096"></a>Usage Notes</p>
<p>For information about inbound links and related network data model concepts, see <a href="sdo_net_concepts.htm#CIHFIHFB">Section 5.3</a>.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1097"></a>Examples</p>
<p>The following example returns an array of link ID numbers of the inbound links into the node whose node ID is 3 in the network named <code>ROADS_NETWORK</code>.</p>
<pre>
SELECT SDO_NET.GET_IN_LINKS('ROADS_NETWORK', 3) FROM DUAL;
 
SDO_NET.GET_IN_LINKS('ROADS_NETWORK',3)                                         
--------------------------------------------------------------------------------
SDO_NUMBER_ARRAY(102)
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" -->
<div id="TOPOL998" class="refsect1"><a id="sthref1098"></a>
<h2 class="refsect1"><a id="sthref1099"></a><a id="sthref1100"></a><a id="sthref1101"></a><a id="sthref1102"></a>SDO_NET.GET_INVALID_LINKS</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1103"></a>Format</p>
<p class="synopsis">SDO_NET.GET_INVALID_LINKS(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;network IN VARCHAR2</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) RETURN SDO_NUMBER_ARRAY;</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1104"></a>Description</p>
<p>Returns the invalid links in a network.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1105"></a>Parameters</p>
<dl>
<dt>network</dt>
<dd>
<p>Network name.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1106"></a>Usage Notes</p>
<p>This function returns an SDO_NUMBER_ARRAY object with a comma-delimited list of node ID numbers of invalid links in the specified network. If there are no invalid links, this function returns a null value.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1107"></a>Examples</p>
<p>The following example returns the invalid links in the SDO_PARTITIONED network.</p>
<pre>
SELECT SDO_NET.GET_INVALID_LINKS('SDO_PARTITIONED') FROM DUAL;
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" -->
<div id="TOPOL999" class="refsect1"><a id="sthref1108"></a>
<h2 class="refsect1"><a id="sthref1109"></a><a id="sthref1110"></a><a id="sthref1111"></a><a id="sthref1112"></a>SDO_NET.GET_INVALID_NODES</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1113"></a>Format</p>
<p class="synopsis">SDO_NET.GET_INVALID_NODES(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;network IN VARCHAR2</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) RETURN SDO_NUMBER_ARRAY;</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1114"></a>Description</p>
<p>Returns the invalid nodes in a network.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1115"></a>Parameters</p>
<dl>
<dt>network</dt>
<dd>
<p>Network name.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1116"></a>Usage Notes</p>
<p>This function returns an SDO_NUMBER_ARRAY object with a comma-delimited list of node ID numbers of invalid nodes in the specified network. If there are no invalid nodes, this function returns a null value.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1117"></a>Examples</p>
<p>The following example returns the invalid nodes in the SDO_PARTITIONED network.</p>
<pre>
SELECT SDO_NET.GET_INVALID_NODES('SDO_PARTITIONED') FROM DUAL;
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" -->
<div id="TOPOL1000" class="refsect1"><a id="sthref1118"></a>
<h2 class="refsect1"><a id="sthref1119"></a><a id="sthref1120"></a><a id="sthref1121"></a><a id="sthref1122"></a>SDO_NET.GET_INVALID_PATHS</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1123"></a>Format</p>
<p class="synopsis">SDO_NET.GET_INVALID_PATHS(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;network IN VARCHAR2</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) RETURN SDO_NUMBER_ARRAY;</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1124"></a>Description</p>
<p>Returns the invalid paths in a network.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1125"></a>Parameters</p>
<dl>
<dt>network</dt>
<dd>
<p>Network name.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1126"></a>Usage Notes</p>
<p>This function returns an SDO_NUMBER_ARRAY object with a comma-delimited list of node ID numbers of invalid paths in the specified network. If there are no invalid paths, this function returns a null value.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1127"></a>Examples</p>
<p>The following example returns the invalid paths in the SDO_PARTITIONED network.</p>
<pre>
SELECT SDO_NET.GET_INVALID_PATHS('SDO_PARTITIONED') FROM DUAL;
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" -->
<div id="TOPOL1001" class="refsect1"><a id="sthref1128"></a>
<h2 class="refsect1"><a id="sthref1129"></a><a id="sthref1130"></a><a id="sthref1131"></a><a id="sthref1132"></a>SDO_NET.GET_ISOLATED_NODES</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1133"></a>Format</p>
<p class="synopsis">SDO_NET.GET_ISOLATED_NODES(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;network IN VARCHAR2</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) RETURN SDO_NUMBER_ARRAY;</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1134"></a>Description</p>
<p>Returns the isolated nodes in a network.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1135"></a>Parameters</p>
<dl>
<dt>network</dt>
<dd>
<p>Network name.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1136"></a>Usage Notes</p>
<p>This function returns an SDO_NUMBER_ARRAY object with a comma-delimited list of node ID numbers of isolated nodes in the specified network. If there are no isolated nodes, this function returns a null value.</p>
<p>For a brief explanation of isolated nodes in a network, see <a href="sdo_net_concepts.htm#CIHFIHFB">Section 5.3</a>.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1137"></a>Examples</p>
<p>The following example returns the isolated nodes in the SDO_PARTITIONED network.</p>
<pre>
SELECT SDO_NET.GET_ISOLATED_NODES('SDO_PARTITIONED') FROM DUAL;
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" -->
<a id="CHDGCIHI"></a>
<div id="TOPOL1002" class="refsect1">
<h2 class="refsect1"><a id="sthref1138"></a><a id="sthref1139"></a>SDO_NET.GET_LINK_COST_COLUMN</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1140"></a>Format</p>
<p class="synopsis">SDO_NET.GET_LINK_COST_COLUMN(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;network IN VARCHAR2</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) RETURN VARCHAR2;</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1141"></a>Description</p>
<p>Returns the name of the link cost column for a network.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1142"></a>Parameters</p>
<dl>
<dt>network</dt>
<dd>
<p>Network name.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1143"></a>Usage Notes</p>
<p>This function returns the value of the LINK_COST_COLUMN column for the network in the USER_SDO_NETWORK_METADATA view (see <a href="sdo_net_concepts.htm#CIHFCDFC">Table 5-9</a> in <a href="sdo_net_concepts.htm#CIHGBCAI">Section 5.10.1</a>).</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1144"></a>Examples</p>
<p>The following example returns the name of the link cost column for the network named <code>ROADS_NETWORK</code>.</p>
<pre>
SELECT SDO_NET.GET_LINK_COST_COLUMN('ROADS_NETWORK') FROM DUAL;
 
SDO_NET.GET_LINK_COST_COLUMN('ROADS_NETWORK')                                   
--------------------------------------------------------------------------------
COST
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" -->
<a id="CHDCEIJA"></a>
<div id="TOPOL1003" class="refsect1">
<h2 class="refsect1"><a id="sthref1145"></a><a id="sthref1146"></a><a id="sthref1147"></a><a id="sthref1148"></a>SDO_NET.GET_LINK_DIRECTION</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1149"></a>Format</p>
<p class="synopsis">SDO_NET.GET_LINK_DIRECTION(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;network IN VARCHAR2</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) RETURN VARCHAR2;</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1150"></a>Description</p>
<p>Returns the link direction for a network.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1151"></a>Parameters</p>
<dl>
<dt>network</dt>
<dd>
<p>Network name.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1152"></a>Usage Notes</p>
<p>This function returns the value of the LINK_DIRECTION column for the network in the USER_SDO_NETWORK_METADATA view (see <a href="sdo_net_concepts.htm#CIHFCDFC">Table 5-9</a> in <a href="sdo_net_concepts.htm#CIHGBCAI">Section 5.10.1</a>).</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1153"></a>Examples</p>
<p>The following example returns the link direction for the network named <code>ROADS_NETWORK</code>.</p>
<pre>
SELECT SDO_NET.GET_LINK_DIRECTION('ROADS_NETWORK') FROM DUAL;
 
SDO_NET.GET_LINK_DIRECTION('ROADS_NETWORK')                                     
--------------------------------------------------------------------------------
DIRECTED 
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" -->
<a id="CHDFEAFF"></a>
<div id="TOPOL1004" class="refsect1">
<h2 class="refsect1"><a id="sthref1154"></a><a id="sthref1155"></a>SDO_NET.GET_LINK_GEOM_COLUMN</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1156"></a>Format</p>
<p class="synopsis">SDO_NET.GET_LINK_GEOM_COLUMN(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;network IN VARCHAR2</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) RETURN VARCHAR2;</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1157"></a>Description</p>
<p>Returns the name of the link geometry column for a spatial network.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1158"></a>Parameters</p>
<dl>
<dt>network</dt>
<dd>
<p>Network name.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1159"></a>Usage Notes</p>
<p>This function returns the value of the LINK_GEOM_COLUMN column for the network in the USER_SDO_NETWORK_METADATA view (see <a href="sdo_net_concepts.htm#CIHFCDFC">Table 5-9</a> in <a href="sdo_net_concepts.htm#CIHGBCAI">Section 5.10.1</a>).</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1160"></a>Examples</p>
<p>The following example returns the name of the link geometry column for the network named <code>ROADS_NETWORK</code>.</p>
<pre>
SELECT SDO_NET.GET_LINK_GEOM_COLUMN('ROADS_NETWORK') FROM DUAL;
 
SDO_NET.GET_LINK_GEOM_COLUMN('ROADS_NETWORK')                                   
--------------------------------------------------------------------------------
LINK_GEOMETRY
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" -->
<a id="CHDCCHBF"></a>
<div id="TOPOL1005" class="refsect1">
<h2 class="refsect1"><a id="sthref1161"></a><a id="sthref1162"></a><a id="sthref1163"></a><a id="sthref1164"></a>SDO_NET.GET_LINK_GEOMETRY</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1165"></a>Format</p>
<p class="synopsis">SDO_NET.GET_LINK_GEOMETRY(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;network IN VARCHAR2,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;link_id IN NUMBER,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;start_percentage IN NUMBER DEFAULT 0,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end_percentage IN NUMBER DEFAULT 1.0</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) RETURN SDO_GEOMETRY;</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1166"></a>Description</p>
<p>Returns the entire geometry or a portion of the geometry associated with a link in a spatial network.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1167"></a>Parameters</p>
<dl>
<dt>network</dt>
<dd>
<p>Network name.</p>
</dd>
<dt>link_id</dt>
<dd>
<p>ID number of the link for which to return the geometry.</p>
</dd>
<dt>start_percentage</dt>
<dd>
<p>Percentage of the distance along the link to be used for the start point of the returned geometry. Expressed as a number between 0 and 1.0; for example, 0.5 is 50 percent. The default value is 0; that is, the start of the returned geometry is associated with the start point of the link.</p>
</dd>
<dt>end_percentage</dt>
<dd>
<p>Percentage of the distance along the link to be used for the end point of the returned geometry. Expressed as a number between 0 and 1.0; for example, 0.5 is 50 percent. The default value is 1.0; that is, the end of returned geometry is associated with the end point of the link.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1168"></a>Usage Notes</p>
<p>None.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1169"></a>Examples</p>
<p>The following example returns the geometry associated with the link whose link ID is 103 in the network named <code>ROADS_NETWORK</code>.</p>
<pre>
SELECT SDO_NET.GET_LINK_GEOMETRY('ROADS_NETWORK', 103) FROM DUAL;
 
SDO_NET.GET_LINK_GEOMETRY('ROADS_NETWORK',103)(SDO_GTYPE, SDO_SRID, SDO_POINT(X,
--------------------------------------------------------------------------------
SDO_GEOMETRY(2002, NULL, NULL, SDO_ELEM_INFO_ARRAY(1, 2, 1), SDO_ORDINATE_ARRAY(
8, 4, 12, 4)) 
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" -->
<a id="CHDBEFAD"></a>
<div id="TOPOL1006" class="refsect1">
<h2 class="refsect1"><a id="sthref1170"></a><a id="sthref1171"></a>SDO_NET.GET_LINK_TABLE_NAME</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1172"></a>Format</p>
<p class="synopsis">SDO_NET.GET_LINK_TABLE_NAME(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;network IN VARCHAR2</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) RETURN VARCHAR2;</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1173"></a>Description</p>
<p>Returns the name of the link table for a network.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1174"></a>Parameters</p>
<dl>
<dt>network</dt>
<dd>
<p>Network name.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1175"></a>Usage Notes</p>
<p>This function returns the value of the LINK_TABLE_NAME column for the network in the USER_SDO_NETWORK_METADATA view (see <a href="sdo_net_concepts.htm#CIHFCDFC">Table 5-9</a> in <a href="sdo_net_concepts.htm#CIHGBCAI">Section 5.10.1</a>).</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1176"></a>Examples</p>
<p>The following example returns the name of the link table for the network named <code>ROADS_NETWORK</code>.</p>
<pre>
SELECT SDO_NET.GET_LINK_TABLE_NAME('ROADS_NETWORK') FROM DUAL;
 
SDO_NET.GET_LINK_TABLE_NAME('ROADS_NETWORK')                                    
--------------------------------------------------------------------------------
ROADS_LINKS  
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" -->
<div id="TOPOL1007" class="refsect1"><a id="sthref1177"></a>
<h2 class="refsect1"><a id="sthref1178"></a><a id="sthref1179"></a>SDO_NET.GET_LINKS_IN_PATH</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1180"></a>Format</p>
<p class="synopsis">SDO_NET.GET_LINKS_IN_PATH(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;network IN VARCHAR2,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;path_id IN NUMBER</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) RETURN SDO_NUMBER_ARRAY;</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1181"></a>Description</p>
<p>Returns the links in a path.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1182"></a>Parameters</p>
<dl>
<dt>network</dt>
<dd>
<p>Network name.</p>
</dd>
<dt>path_id</dt>
<dd>
<p>ID of the path for which to return the links.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1183"></a>Usage Notes</p>
<p>For an explanation of links and paths, see <a href="sdo_net_concepts.htm#CIHFIHFB">Section 5.3</a>.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1184"></a>Examples</p>
<p>The following example returns the link ID values of links in the path in the <code>XYZ_NETWORK</code> network whose path ID is 1.</p>
<pre>
SELECT SDO_NET.GET_LINKS_IN_PATH('XYZ_NETWORK', 1) FROM DUAL;
 
SDO_NET.GET_LINKS_IN_PATH('XYZ_NETWORK',1)
--------------------------------------------------------------------------------
SDO_NUMBER_ARRAY(1102, 1104, 1105)
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" -->
<a id="CHDJJHJI"></a>
<div id="TOPOL1008" class="refsect1">
<h2 class="refsect1"><a id="sthref1185"></a><a id="sthref1186"></a>SDO_NET.GET_LRS_GEOM_COLUMN</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1187"></a>Format</p>
<p class="synopsis">SDO_NET.GET_LRS_GEOM_COLUMN(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;network IN VARCHAR2</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) RETURN VARCHAR2;</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1188"></a>Description</p>
<p>Returns the name of the LRS geometry column for a spatial network.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1189"></a>Parameters</p>
<dl>
<dt>network</dt>
<dd>
<p>Network name.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1190"></a>Usage Notes</p>
<p>This function returns the value of the LRS_GEOM_COLUMN column for the network in the USER_SDO_NETWORK_METADATA view (see <a href="sdo_net_concepts.htm#CIHFCDFC">Table 5-9</a> in <a href="sdo_net_concepts.htm#CIHGBCAI">Section 5.10.1</a>).</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1191"></a>Examples</p>
<p>The following example returns the name of the LRS geometry column for the network named <code>ROADS_NETWORK</code>.</p>
<pre>
SELECT SDO_NET.GET_LRS_GEOM_COLUMN('ROADS_NETWORK') FROM DUAL;
 
SDO_NET.GET_LRS_GEOM_COLUMN('ROADS_NETWORK')                                    
--------------------------------------------------------------------------------
ROAD_GEOM 
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" -->
<a id="CHDJCCID"></a>
<div id="TOPOL1009" class="refsect1">
<h2 class="refsect1"><a id="sthref1192"></a><a id="sthref1193"></a>SDO_NET.GET_LRS_LINK_GEOMETRY</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1194"></a>Format</p>
<p class="synopsis">SDO_NET.GET_LRS_LINK_GEOMETRY(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;network IN VARCHAR2,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;link_id IN NUMBER</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) RETURN SDO_GEOMETRY;</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1195"></a>Description</p>
<p>Returns the LRS geometry associated with a link in a spatial LRS network.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1196"></a>Parameters</p>
<dl>
<dt>network</dt>
<dd>
<p>Network name.</p>
</dd>
<dt>link_id</dt>
<dd>
<p>ID number of the link for which to return the geometry.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1197"></a>Usage Notes</p>
<p>None.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1198"></a>Examples</p>
<p>The following example returns the LRS geometry associated with the link whose link ID is 103 in the network named <code>ROADS_NETWORK</code>.</p>
<pre>
SELECT SDO_NET.GET_LRS_LINK_GEOMETRY('ROADS_NETWORK', 103) FROM DUAL;
 
SDO_NET.GET_LRS_LINK_GEOMETRY('ROADS_NETWORK',103)(SDO_GTYPE, SDO_SRID, SDO_POIN
--------------------------------------------------------------------------------
SDO_GEOMETRY(2002, NULL, NULL, SDO_ELEM_INFO_ARRAY(1, 2, 1), SDO_ORDINATE_ARRAY(
8, 4, 12, 4))
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" -->
<a id="CHDDDEHB"></a>
<div id="TOPOL1010" class="refsect1">
<h2 class="refsect1"><a id="sthref1199"></a><a id="sthref1200"></a>SDO_NET.GET_LRS_NODE_GEOMETRY</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1201"></a>Format</p>
<p class="synopsis">SDO_NET.GET_LRS_NODE_GEOMETRY(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;network IN VARCHAR2,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;node_id IN NUMBER</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) RETURN SDO_GEOMETRY;</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1202"></a>Description</p>
<p>Returns the LRS geometry associated with a node in a spatial LRS network.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1203"></a>Parameters</p>
<dl>
<dt>network</dt>
<dd>
<p>Network name.</p>
</dd>
<dt>node_id</dt>
<dd>
<p>ID number of the node for which to return the geometry.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1204"></a>Usage Notes</p>
<p>None.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1205"></a>Examples</p>
<p>The following example returns the LRS geometry associated with the node whose node ID is 3 in the network named <code>ROADS_NETWORK</code>.</p>
<pre>
SELECT SDO_NET.GET_LRS_NODE_GEOMETRY('ROADS_NETWORK', 3) FROM DUAL;
 
SDO_NET.GET_LRS_NODE_GEOMETRY('ROADS_NETWORK',3)(SDO_GTYPE, SDO_SRID, SDO_POINT(
--------------------------------------------------------------------------------
SDO_GEOMETRY(2001, NULL, SDO_POINT_TYPE(8, 4, NULL), NULL, NULL)
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" -->
<a id="CHDDABGE"></a>
<div id="TOPOL1011" class="refsect1">
<h2 class="refsect1"><a id="sthref1206"></a><a id="sthref1207"></a>SDO_NET.GET_LRS_TABLE_NAME</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1208"></a>Format</p>
<p class="synopsis">SDO_NET.GET_LRS_TABLE_NAME(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;network IN VARCHAR2</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) RETURN VARCHAR2;</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1209"></a>Description</p>
<p>Returns the name of the table containing LRS geometries in a spatial LRS network.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1210"></a>Parameters</p>
<dl>
<dt>network</dt>
<dd>
<p>Network name.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1211"></a>Usage Notes</p>
<p>This function returns the value of the LRS_TABLE_NAME column for the network in the USER_SDO_NETWORK_METADATA view (see <a href="sdo_net_concepts.htm#CIHFCDFC">Table 5-9</a> in <a href="sdo_net_concepts.htm#CIHGBCAI">Section 5.10.1</a>).</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1212"></a>Examples</p>
<p>The following example returns the name of the table that contains LRS geometries for the network named <code>ROADS_NETWORK</code>.</p>
<pre>
SELECT SDO_NET.GET_LRS_TABLE_NAME('ROADS_NETWORK') FROM DUAL;
 
SDO_NET.GET_LRS_TABLE_NAME('ROADS_NETWORK')                                     
--------------------------------------------------------------------------------
ROADS 
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" -->
<a id="CHDEAEIH"></a>
<div id="TOPOL1012" class="refsect1">
<h2 class="refsect1"><a id="sthref1213"></a><a id="sthref1214"></a>SDO_NET.GET_NETWORK_TYPE</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1215"></a>Format</p>
<p class="synopsis">SDO_NET.GET_NETWORK_TYPE(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;network IN VARCHAR2</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) RETURN VARCHAR2;</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1216"></a>Description</p>
<p>Returns the network type.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1217"></a>Parameters</p>
<dl>
<dt>network</dt>
<dd>
<p>Network name.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1218"></a>Usage Notes</p>
<p>This function returns the value of the NETWORK_TYPE column for the network in the USER_SDO_NETWORK_METADATA view (see <a href="sdo_net_concepts.htm#CIHFCDFC">Table 5-9</a> in <a href="sdo_net_concepts.htm#CIHGBCAI">Section 5.10.1</a>).</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1219"></a>Examples</p>
<p>The following example returns the network type for the network named <code>ROADS_NETWORK</code>.</p>
<pre>
SELECT SDO_NET.GET_NETWORK_TYPE('ROADS_NETWORK') FROM DUAL;
 
SDO_NET.GET_NETWORK_TYPE('ROADS_NETWORK')                                       
--------------------------------------------------------------------------------
Roadways
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" -->
<a id="CHDFGIFI"></a>
<div id="TOPOL1013" class="refsect1">
<h2 class="refsect1"><a id="sthref1220"></a><a id="sthref1221"></a>SDO_NET.GET_NO_OF_HIERARCHY_LEVELS</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1222"></a>Format</p>
<p class="synopsis">SDO_NET.GET_NO_OF_HIERARCHY_LEVELS(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;network IN VARCHAR2</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) RETURN NUMBER;</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1223"></a>Description</p>
<p>Returns the number of hierarchy levels for a network.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1224"></a>Parameters</p>
<dl>
<dt>network</dt>
<dd>
<p>Network name.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1225"></a>Usage Notes</p>
<p>This function returns the value of the NO_OF_HIERARCHY_LEVELS column for the network in the USER_SDO_NETWORK_METADATA view (see <a href="sdo_net_concepts.htm#CIHFCDFC">Table 5-9</a> in <a href="sdo_net_concepts.htm#CIHGBCAI">Section 5.10.1</a>).</p>
<p>For an explanation of network hierarchy, see <a href="sdo_net_concepts.htm#CIHDHHGB">Section 5.5</a>.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1226"></a>Examples</p>
<p>The following example returns the number of hierarchy levels for the network named <code>ROADS_NETWORK</code>.</p>
<pre>
SELECT SDO_NET.GET_NO_OF_HIERARCHY_LEVELS('ROADS_NETWORK') FROM DUAL;
 
SDO_NET.GET_NO_OF_HIERARCHY_LEVELS('ROADS_NETWORK')                             
---------------------------------------------------                             
                                                  1
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" -->
<a id="CHDIHIGC"></a>
<div id="TOPOL1014" class="refsect1">
<h2 class="refsect1"><a id="sthref1227"></a><a id="sthref1228"></a>SDO_NET.GET_NO_OF_LINKS</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1229"></a>Format</p>
<p class="synopsis">SDO_NET.GET_NO_OF_LINKS(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;network IN VARCHAR2</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) RETURN NUMBER;</p>
<p>or</p>
<p class="synopsis">SDO_NET.GET_NO_OF_LINKS(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;network IN VARCHAR2,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;hierarchy_id IN NUMBER</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) RETURN NUMBER;</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1230"></a>Description</p>
<p>Returns the number of links for a network or a hierarchy level in a network.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1231"></a>Parameters</p>
<dl>
<dt>network</dt>
<dd>
<p>Network name.</p>
</dd>
<dt>hierarchy_id</dt>
<dd>
<p>Hierarchy level number for which to return the number of links.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1232"></a>Usage Notes</p>
<p>None.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1233"></a>Examples</p>
<p>The following example returns the number of links in the network named <code>ROADS_NETWORK</code>.</p>
<pre>
SELECT SDO_NET.GET_NO_OF_LINKS('ROADS_NETWORK') FROM DUAL;
 
SDO_NET.GET_NO_OF_LINKS('ROADS_NETWORK')                                        
----------------------------------------                                        
                                      10 
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" -->
<a id="CHDCEHAJ"></a>
<div id="TOPOL1015" class="refsect1">
<h2 class="refsect1"><a id="sthref1234"></a><a id="sthref1235"></a><a id="sthref1236"></a>SDO_NET.GET_NO_OF_NODES</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1237"></a>Format</p>
<p class="synopsis">SDO_NET.GET_NO_OF_NODES(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;network IN VARCHAR2</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) RETURN NUMBER;</p>
<p>or</p>
<p class="synopsis">SDO_NET.GET_NO_OF_NODES(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;network IN VARCHAR2,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;hierarchy_id IN NUMBER</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) RETURN NUMBER;</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1238"></a>Description</p>
<p>Returns the number of nodes for a network or a hierarchy level in a network.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1239"></a>Parameters</p>
<dl>
<dt>network</dt>
<dd>
<p>Network name.</p>
</dd>
<dt>hierarchy_id</dt>
<dd>
<p>Hierarchy level number for which to return the number of nodes.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1240"></a>Usage Notes</p>
<p>For information about nodes and related concepts, see <a href="sdo_net_concepts.htm#CIHFIHFB">Section 5.3</a>.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1241"></a>Examples</p>
<p>The following example returns the number of nodes in the network named <code>ROADS_NETWORK</code>.</p>
<pre>
SELECT SDO_NET.GET_NO_OF_NODES('ROADS_NETWORK') FROM DUAL;
 
SDO_NET.GET_NO_OF_NODES('ROADS_NETWORK')                                        
----------------------------------------                                        
                                       8
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" -->
<a id="CHDBDJEA"></a>
<div id="TOPOL1016" class="refsect1">
<h2 class="refsect1"><a id="sthref1242"></a><a id="sthref1243"></a>SDO_NET.GET_NODE_DEGREE</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1244"></a>Format</p>
<p class="synopsis">SDO_NET.GET_NODE_DEGREE(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;network IN VARCHAR2,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;node_id IN NUMBER</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) RETURN NUMBER;</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1245"></a>Description</p>
<p>Returns the number of links to a node.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1246"></a>Parameters</p>
<dl>
<dt>network</dt>
<dd>
<p>Network name.</p>
</dd>
<dt>node_id</dt>
<dd>
<p>Node ID of the node for which to return the number of links.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1247"></a>Usage Notes</p>
<p>For information about node degree and related network data model concepts, see <a href="sdo_net_concepts.htm#CIHFIHFB">Section 5.3</a>.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1248"></a>Examples</p>
<p>The following example returns the number of links to the node whose node ID is 3 in the network named <code>ROADS_NETWORK</code>.</p>
<pre>
SELECT SDO_NET.GET_NODE_DEGREE('ROADS_NETWORK', 3) FROM DUAL;
 
SDO_NET.GET_NODE_DEGREE('ROADS_NETWORK',3)                                      
------------------------------------------                                      
                                         3
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" -->
<a id="CHDFDDEG"></a>
<div id="TOPOL1017" class="refsect1">
<h2 class="refsect1"><a id="sthref1249"></a><a id="sthref1250"></a>SDO_NET.GET_NODE_GEOM_COLUMN</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1251"></a>Format</p>
<p class="synopsis">SDO_NET.GET_NODE_GEOM_COLUMN(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;network IN VARCHAR2</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) RETURN VARCHAR2;</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1252"></a>Description</p>
<p>Returns the name of the geometry column for nodes in a spatial network.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1253"></a>Parameters</p>
<dl>
<dt>network</dt>
<dd>
<p>Network name.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1254"></a>Usage Notes</p>
<p>This function returns the value of the NODE_GEOM_COLUMN column for the network in the USER_SDO_NETWORK_METADATA view (see <a href="sdo_net_concepts.htm#CIHFCDFC">Table 5-9</a> in <a href="sdo_net_concepts.htm#CIHGBCAI">Section 5.10.1</a>).</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1255"></a>Examples</p>
<p>The following example returns the name of the geometry column for nodes in the network named <code>ROADS_NETWORK</code>.</p>
<pre>
SELECT SDO_NET.GET_NODE_GEOM_COLUMN('ROADS_NETWORK') FROM DUAL;
 
SDO_NET.GET_NODE_GEOM_COLUMN('ROADS_NETWORK')                                   
--------------------------------------------------------------------------------
NODE_GEOMETRY
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" -->
<a id="CHDIIDGA"></a>
<div id="TOPOL1018" class="refsect1">
<h2 class="refsect1"><a id="sthref1256"></a><a id="sthref1257"></a><a id="sthref1258"></a><a id="sthref1259"></a>SDO_NET.GET_NODE_GEOMETRY</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1260"></a>Format</p>
<p class="synopsis">SDO_NET.GET_NODE_GEOMETRY(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;network IN VARCHAR2,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;node_id IN NUMBER</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) RETURN SDO_GEOMETRY;</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1261"></a>Description</p>
<p>Returns the LRS geometry associated with a node in a spatial network.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1262"></a>Parameters</p>
<dl>
<dt>network</dt>
<dd>
<p>Network name.</p>
</dd>
<dt>node_id</dt>
<dd>
<p>ID number of the node for which to return the geometry.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1263"></a>Usage Notes</p>
<p>None.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1264"></a>Examples</p>
<p>The following example returns the geometry associated with the node whose node ID is 3 in the network named <code>ROADS_NETWORK</code>.</p>
<pre>
SELECT SDO_NET.GET_NODE_GEOMETRY('ROADS_NETWORK', 3) FROM DUAL;
 
SDO_NET.GET_NODE_GEOMETRY('ROADS_NETWORK',3)(SDO_GTYPE, SDO_SRID, SDO_POINT(X, Y
--------------------------------------------------------------------------------
SDO_GEOMETRY(2001, NULL, SDO_POINT_TYPE(8, 4, NULL), NULL, NULL) 
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" -->
<a id="CHDFIDFH"></a>
<div id="TOPOL1019" class="refsect1">
<h2 class="refsect1"><a id="sthref1265"></a><a id="sthref1266"></a><a id="sthref1267"></a>SDO_NET.GET_NODE_IN_DEGREE</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1268"></a>Format</p>
<p class="synopsis">SDO_NET.GET_NODE_IN_DEGREE(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;network IN VARCHAR2,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;node_id IN NUMBER</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) RETURN NUMBER;</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1269"></a>Description</p>
<p>Returns the number of inbound links to a node.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1270"></a>Parameters</p>
<dl>
<dt>network</dt>
<dd>
<p>Network name.</p>
</dd>
<dt>node_id</dt>
<dd>
<p>Node ID of the node for which to return the number of inbound links.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1271"></a>Usage Notes</p>
<p>For information about node degree and related network data model concepts, see <a href="sdo_net_concepts.htm#CIHFIHFB">Section 5.3</a>.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1272"></a>Examples</p>
<p>The following example returns the number of inbound links to the node whose node ID is 3 in the network named <code>ROADS_NETWORK</code>.</p>
<pre>
SELECT SDO_NET.GET_NODE_IN_DEGREE('ROADS_NETWORK', 3) FROM DUAL;
 
SDO_NET.GET_NODE_IN_DEGREE('ROADS_NETWORK',3)                                   
---------------------------------------------                                   
                                            1
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" -->
<a id="CHDEABCJ"></a>
<div id="TOPOL1020" class="refsect1">
<h2 class="refsect1"><a id="sthref1273"></a><a id="sthref1274"></a><a id="sthref1275"></a>SDO_NET.GET_NODE_OUT_DEGREE</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1276"></a>Format</p>
<p class="synopsis">SDO_NET.GET_NODE_OUT_DEGREE(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;network IN VARCHAR2,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;node_id IN NUMBER</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) RETURN NUMBER;</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1277"></a>Description</p>
<p>Returns the number of outbound links from a node.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1278"></a>Parameters</p>
<dl>
<dt>network</dt>
<dd>
<p>Network name.</p>
</dd>
<dt>node_id</dt>
<dd>
<p>Node ID of the node for which to return the number of outbound links.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1279"></a>Usage Notes</p>
<p>For information about node degree and related network data model concepts, see <a href="sdo_net_concepts.htm#CIHFIHFB">Section 5.3</a>.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1280"></a>Examples</p>
<p>The following example returns the number of outbound links from the node whose node ID is 3 in the network named <code>ROADS_NETWORK</code>.</p>
<pre>
SELECT SDO_NET.GET_NODE_OUT_DEGREE('ROADS_NETWORK', 3) FROM DUAL;
 
SDO_NET.GET_NODE_OUT_DEGREE('ROADS_NETWORK',3)                                  
----------------------------------------------                                  
                                             2
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" -->
<a id="CHDJGDAJ"></a>
<div id="TOPOL1021" class="refsect1">
<h2 class="refsect1"><a id="sthref1281"></a><a id="sthref1282"></a>SDO_NET.GET_NODE_TABLE_NAME</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1283"></a>Format</p>
<p class="synopsis">SDO_NET.GET_NODE_TABLE_NAME(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;network IN VARCHAR2</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) RETURN VARCHAR2;</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1284"></a>Description</p>
<p>Returns the name of the table that contains the nodes in a spatial network.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1285"></a>Parameters</p>
<dl>
<dt>network</dt>
<dd>
<p>Network name.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1286"></a>Usage Notes</p>
<p>This function returns the value of the NODE_TABLE_NAME column for the network in the USER_SDO_NETWORK_METADATA view (see <a href="sdo_net_concepts.htm#CIHFCDFC">Table 5-9</a> in <a href="sdo_net_concepts.htm#CIHGBCAI">Section 5.10.1</a>).</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1287"></a>Examples</p>
<p>The following example returns the name of the table that contains the nodes in the network named <code>ROADS_NETWORK</code>.</p>
<pre>
SELECT SDO_NET.GET_NODE_TABLE_NAME('ROADS_NETWORK') FROM DUAL;
 
SDO_NET.GET_NODE_TABLE_NAME('ROADS_NETWORK')                                    
--------------------------------------------------------------------------------
ROADS_NODES
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" -->
<a id="CHDJDBEE"></a>
<div id="TOPOL1022" class="refsect1">
<h2 class="refsect1"><a id="sthref1288"></a><a id="sthref1289"></a><a id="sthref1290"></a>SDO_NET.GET_OUT_LINKS</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1291"></a>Format</p>
<p class="synopsis">SDO_NET.GET_OUT_LINKS(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;network IN VARCHAR2,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;node_id IN NUMBER</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) RETURN SDO_NUMBER_ARRAY;</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1292"></a>Description</p>
<p>Returns an array of link ID numbers of the outbound links from a node.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1293"></a>Parameters</p>
<dl>
<dt>network</dt>
<dd>
<p>Network name.</p>
</dd>
<dt>node_id</dt>
<dd>
<p>ID of the node for which to return the array of outbound links.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1294"></a>Usage Notes</p>
<p>For information about outbound links and related network data model concepts, see <a href="sdo_net_concepts.htm#CIHFIHFB">Section 5.3</a>.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1295"></a>Examples</p>
<p>The following example returns an array of link ID numbers of the outbound links from the node whose node ID is 3 in the network named <code>ROADS_NETWORK</code>.</p>
<pre>
SELECT SDO_NET.GET_OUT_LINKS('ROADS_NETWORK', 3) FROM DUAL;
 
SDO_NET.GET_OUT_LINKS('ROADS_NETWORK',3)                                        
--------------------------------------------------------------------------------
SDO_NUMBER_ARRAY(103, 201)
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" -->
<a id="CACFJAAB"></a>
<div id="TOPOL1023" class="refsect1">
<h2 class="refsect1"><a id="sthref1296"></a><a id="sthref1297"></a><a id="sthref1298"></a>SDO_NET.GET_PARTITION_SIZE</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1299"></a>Format</p>
<p class="synopsis">SDO_NET.GET_PARTITION_SIZE(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;network IN VARCHAR2,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;partition_id IN VARCHAR2,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;link_level IN NUMBER DEFAULT 1,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;include_user_data IN VARCHAR2 DEFAULT 'FALSE',</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;include_spatial_data IN VARCHAR2 DEFAULT 'FALSE') RETURN NUMBER;</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1300"></a>Description</p>
<p>Gets the estimated size (in bytes) for a specified combination of partition ID and link level.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1301"></a>Parameters</p>
<dl>
<dt>network</dt>
<dd>
<p>Network name.</p>
</dd>
<dt>partition_id</dt>
<dd>
<p>Partition ID number.</p>
</dd>
<dt>link_level</dt>
<dd>
<p>Link level (default = 1). The link level reflects the priority level for the link, and is used for network analysis, so that links with higher priority levels can be considered first in computing a path.</p>
</dd>
<dt>include_user_data</dt>
<dd>
<p><code>TRUE</code> if the size should include any user data associated with the network elements represented in each BLOB, or <code>FALSE</code> (the default) if the size should not include any user data.</p>
</dd>
<dt>include_spatial_data</dt>
<dd>
<p><code>TRUE</code> if the size should include spatial geometry definitions associated with the network elements represented in each BLOB, or <code>FALSE</code> (the default) if the size should not include spatial geometry definitions.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1302"></a>Usage Notes</p>
<p>The returned size of a network partition is a rough estimate and might vary depending on the Java Virtual Machine and garbage collection.</p>
<p>For information about using partitioned networks to perform analysis using the load on demand approach, see <a href="sdo_net_concepts.htm#CIHFHAID">Section 5.7</a>.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1303"></a>Examples</p>
<p>The following example returns the number of bytes for the partition associated with partition ID 1 and link level 1 in the SDO_PARTITIONED network, not including any user data or spatial data.</p>
<pre>
SELECT SDO_NET.GET_PARTITION_SIZE('SDO_PARTITIONED', 1, 1, 'N', 'N') FROM DUAL;
 
SDO_NET.GET_PARTITION_SIZE('SDO_PARTITIONED',1,1,'FALSE','FALSE')
---------------------------------------------------------
                                                     5192
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" -->
<a id="CHDJCGBG"></a>
<div id="TOPOL1024" class="refsect1">
<h2 class="refsect1"><a id="sthref1304"></a><a id="sthref1305"></a>SDO_NET.GET_PATH_GEOM_COLUMN</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1306"></a>Format</p>
<p class="synopsis">SDO_NET.GET_PATH_GEOM_COLUMN(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;network IN VARCHAR2</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) RETURN VARCHAR2;</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1307"></a>Description</p>
<p>Returns the name of the geometry column for paths in a spatial network.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1308"></a>Parameters</p>
<dl>
<dt>network</dt>
<dd>
<p>Network name.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1309"></a>Usage Notes</p>
<p>This function returns the value of the PATH_GEOM_COLUMN column for the network in the USER_SDO_NETWORK_METADATA view (see <a href="sdo_net_concepts.htm#CIHFCDFC">Table 5-9</a> in <a href="sdo_net_concepts.htm#CIHGBCAI">Section 5.10.1</a>).</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1310"></a>Examples</p>
<p>The following example returns the name of the geometry column for paths in the network named <code>ROADS_NETWORK</code>.</p>
<pre>
SELECT SDO_NET.GET_PATH_GEOM_COLUMN('ROADS_NETWORK') FROM DUAL;
 
SDO_NET.GET_PATH_GEOM_COLUMN('ROADS_NETWORK')                                   
--------------------------------------------------------------------------------
PATH_GEOMETRY
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" -->
<a id="CHDIICJI"></a>
<div id="TOPOL1025" class="refsect1">
<h2 class="refsect1"><a id="sthref1311"></a><a id="sthref1312"></a>SDO_NET.GET_PATH_TABLE_NAME</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1313"></a>Format</p>
<p class="synopsis">SDO_NET.GET_PATH_TABLE_NAME(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;network IN VARCHAR2</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) RETURN VARCHAR2;</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1314"></a>Description</p>
<p>Returns the name of the table that contains the paths in a spatial network.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1315"></a>Parameters</p>
<dl>
<dt>network</dt>
<dd>
<p>Network name.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1316"></a>Usage Notes</p>
<p>This function returns the value of the PATH_TABLE_NAME column for the network in the USER_SDO_NETWORK_METADATA view (see <a href="sdo_net_concepts.htm#CIHFCDFC">Table 5-9</a> in <a href="sdo_net_concepts.htm#CIHGBCAI">Section 5.10.1</a>).</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1317"></a>Examples</p>
<p>The following example returns the name of the table that contains the paths in the network named <code>ROADS_NETWORK</code>.</p>
<pre>
SELECT SDO_NET.GET_PATH_TABLE_NAME('ROADS_NETWORK') FROM DUAL;
 
SDO_NET.GET_PATH_TABLE_NAME('ROADS_NETWORK')                                    
--------------------------------------------------------------------------------
ROADS_PATHS 
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" -->
<a id="CACBJIHF"></a>
<div class="refsect1">
<h2 class="refsect1"><a id="sthref1318"></a><a id="sthref1319"></a><a id="sthref1320"></a>SDO_NET.GET_PERCENTAGE</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1321"></a>Format</p>
<p class="synopsis">SDO_NET.GET_PERCENTAGE(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;network IN VARCHAR2,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;link_id IN NUMBER,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pt_geom IN SDO_GEOMETRY</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) RETURN SDO_GEOMETRY;</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1322"></a>Description</p>
<p>Returns the percentage of the distance along a link's line string geometry of a point geometry.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1323"></a>Parameters</p>
<dl>
<dt>network</dt>
<dd>
<p>Network name.</p>
</dd>
<dt>link_id</dt>
<dd>
<p>ID number of the link.</p>
</dd>
<dt>pt_geom</dt>
<dd>
<p>Point geometry.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1324"></a>Usage Notes</p>
<p>This function returns a value between 0 and 1. For example, if the point is 25 percent (one-fourth) of the distance between the start node and end node for the link, the function returns .25.</p>
<p>If <code>pt_geom</code> is not on the link geometry, the nearest point on the link geometry to <code>pt_geom</code> is used.</p>
<p>To find the point geometry that is a specified percentage of the distance along a link's line string geometry, use the <a href="#CACGDJEF">SDO_NET.GET_PT</a> function.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1325"></a>Examples</p>
<p>The following example returns the percentage (as a decimal fraction) of the distance of a specified point along the geometry associated with the link whose link ID is 101 in the network named <code>ROADS_NETWORK</code>.</p>
<pre>
SQL&gt; SELECT SDO_NET.GET_PERCENTAGE('ROADS_NETWORK', 101,
  SDO_GEOMETRY(2001, NULL, SDO_POINT_TYPE(2, 2.5, NULL), NULL, NULL))
  FROM DUAL;  2    3
 
SDO_NET.GET_PERCENTAGE('ROADS_NETWORK',101,SDO_GEOMETRY(2001,NULL,SDO_POINT_TYPE
--------------------------------------------------------------------------------
                                                                             .25
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" -->
<a id="CACGDJEF"></a>
<div class="refsect1">
<h2 class="refsect1"><a id="sthref1326"></a><a id="sthref1327"></a><a id="sthref1328"></a>SDO_NET.GET_PT</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1329"></a>Format</p>
<p class="synopsis">SDO_NET.GET_PT(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;network IN VARCHAR2,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;link_id IN NUMBER,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;percentage IN NUMBER</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) RETURN SDO_GEOMETRY;</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1330"></a>Description</p>
<p>Returns the point geometry that is a specified percentage of the distance along a link's line string geometry.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1331"></a>Parameters</p>
<dl>
<dt>network</dt>
<dd>
<p>Network name.</p>
</dd>
<dt>link_id</dt>
<dd>
<p>ID number of the link for which to return the point geometry at the specified <code>percentage</code> distance.</p>
</dd>
<dt>percentage</dt>
<dd>
<p>Percentage value as a decimal fraction between 0 and 1. For example, 0.25 is 25 percent.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1332"></a>Usage Notes</p>
<p>To find the percentage along a link geometry for a specified point, use the <a href="#CACBJIHF">SDO_NET.GET_PERCENTAGE</a> function.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1333"></a>Examples</p>
<p>The following example returns the point geometry that is 25 percent of the distance from the start node along the geometry associated with the link whose link ID is 101 in the network named <code>ROADS_NETWORK</code>.</p>
<pre>
SELECT SDO_NET.GET_PT('ROADS_NETWORK', 101, 0.25) FROM DUAL;
 
SDO_NET.GET_PT('ROADS_NETWORK',101,0.25)(SDO_GTYPE, SDO_SRID, SDO_POINT(X, Y, Z)
--------------------------------------------------------------------------------
SDO_GEOMETRY(2001, NULL, SDO_POINT_TYPE(2, 2.5, NULL), NULL, NULL)
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" -->
<a id="CHDFHHAI"></a>
<div id="TOPOL1026" class="refsect1">
<h2 class="refsect1"><a id="sthref1334"></a><a id="sthref1335"></a>SDO_NET.IS_HIERARCHICAL</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1336"></a>Format</p>
<p class="synopsis">SDO_NET.IS_HIERARCHICAL(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;network IN VARCHAR2</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) RETURN VARCHAR2;</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1337"></a>Description</p>
<p>Returns the string <code>TRUE</code> if the network has more than one level of hierarchy; returns the string <code>FALSE</code> if the network does not have more than one level of hierarchy.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1338"></a>Parameters</p>
<dl>
<dt>network</dt>
<dd>
<p>Network name.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1339"></a>Usage Notes</p>
<p>For an explanation of network hierarchy, see <a href="sdo_net_concepts.htm#CIHDHHGB">Section 5.5</a>.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1340"></a>Examples</p>
<p>The following example checks if the network named <code>ROADS_NETWORK</code> has more than one level of hierarchy.</p>
<pre>
SELECT SDO_NET.IS_HIERARCHICAL('ROADS_NETWORK') FROM DUAL;

SDO_NET.IS_HIERARCHICAL('ROADS_NETWORK')                                        
--------------------------------------------------------------------------------
TRUE   
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" -->
<div id="TOPOL1027" class="refsect1"><a id="sthref1341"></a>
<h2 class="refsect1"><a id="sthref1342"></a><a id="sthref1343"></a>SDO_NET.IS_LINK_IN_PATH</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1344"></a>Format</p>
<p class="synopsis">SDO_NET.IS_LINK_IN_PATH(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;network IN VARCHAR2,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;path_id IN NUMBER,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;link_id IN NUMBER,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) RETURN VARCHAR2;</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1345"></a>Description</p>
<p>Returns the string <code>TRUE</code> if the specified link is in the specified path; returns the string <code>FALSE</code> if the specified link is not in the specified path.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1346"></a>Parameters</p>
<dl>
<dt>network</dt>
<dd>
<p>Network name.</p>
</dd>
<dt>path_id</dt>
<dd>
<p>ID number of the path.</p>
</dd>
<dt>link_id</dt>
<dd>
<p>ID number of the link.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1347"></a>Usage Notes</p>
<p>You can use this function to check if a specific link is included in a specific path.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1348"></a>Examples</p>
<p>The following example checks if the link with link ID 1 is in the path with path ID 1 in the network named <code>SDO_NET1</code>.</p>
<pre>
SELECT SDO_NET.IS_LINK_IN_PATH('SDO_NET1', 1, 1) FROM DUAL;
 
SDO_NET.IS_LINK_IN_PATH('SDO_NET1',1,1)                                        
--------------------------------------------------------------------------------
TRUE
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" -->
<a id="CHDJCEEC"></a>
<div id="TOPOL1028" class="refsect1">
<h2 class="refsect1"><a id="sthref1349"></a><a id="sthref1350"></a>SDO_NET.IS_LOGICAL</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1351"></a>Format</p>
<p class="synopsis">SDO_NET.IS_LOGICAL(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;network IN VARCHAR2</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) RETURN VARCHAR2;</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1352"></a>Description</p>
<p>Returns the string <code>TRUE</code> if the network is a logical network; returns the string <code>FALSE</code> if the network is not a logical network.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1353"></a>Parameters</p>
<dl>
<dt>network</dt>
<dd>
<p>Network name.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1354"></a>Usage Notes</p>
<p>A network can be a spatial network or a logical network, as explained in <a href="sdo_net_concepts.htm#CIHFIHFB">Section 5.3</a>.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1355"></a>Examples</p>
<p>The following example checks if the network named <code>ROADS_NETWORK</code> is a logical network.</p>
<pre>
SELECT SDO_NET.IS_LOGICAL('ROADS_NETWORK') FROM DUAL;
 
SDO_NET.IS_LOGICAL('ROADS_NETWORK')                                             
--------------------------------------------------------------------------------
FALSE 
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" -->
<div id="TOPOL1029" class="refsect1"><a id="sthref1356"></a>
<h2 class="refsect1"><a id="sthref1357"></a><a id="sthref1358"></a>SDO_NET.IS_NODE_IN_PATH</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1359"></a>Format</p>
<p class="synopsis">SDO_NET.IS_NODE_IN_PATH(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;network IN VARCHAR2,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;path_id IN NUMBER,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;node_id IN NUMBER,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) RETURN VARCHAR2;</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1360"></a>Description</p>
<p>Returns the string <code>TRUE</code> if the specified node is in the specified path; returns the string <code>FALSE</code> if the specified node is not in the specified path.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1361"></a>Parameters</p>
<dl>
<dt>network</dt>
<dd>
<p>Network name.</p>
</dd>
<dt>path_id</dt>
<dd>
<p>ID number of the path.</p>
</dd>
<dt>node_id</dt>
<dd>
<p>ID number of the node.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1362"></a>Usage Notes</p>
<p>You can use this function to check if a specific node is included in a specific path.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1363"></a>Examples</p>
<p>The following example checks if the node with node ID 1 is in the path with path ID 1 in the network named <code>SDO_NET1</code>.</p>
<pre>
SELECT SDO_NET.IS_NODE_IN_PATH('SDO_NET1', 1, 1) FROM DUAL;
 
SDO_NET.IS_NODE_IN_PATH('SDO_NET1',1,1)                                        
--------------------------------------------------------------------------------
TRUE
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" -->
<a id="CHDDDFBH"></a>
<div id="TOPOL1030" class="refsect1">
<h2 class="refsect1"><a id="sthref1364"></a><a id="sthref1365"></a>SDO_NET.IS_SPATIAL</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1366"></a>Format</p>
<p class="synopsis">SDO_NET.IS_SPATIAL(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;network IN VARCHAR2</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) RETURN VARCHAR2;</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1367"></a>Description</p>
<p>Returns the string <code>TRUE</code> if the network is a spatial network; returns the string <code>FALSE</code> if the network is not a spatial network.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1368"></a>Parameters</p>
<dl>
<dt>network</dt>
<dd>
<p>Network name.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1369"></a>Usage Notes</p>
<p>A network can be a spatial network or a logical network, as explained in <a href="sdo_net_concepts.htm#CIHFIHFB">Section 5.3</a>.</p>
<p>You can further check for the geometry type of a spatial network by using the following functions: <a href="#CHDEAIFJ">SDO_NET.LRS_GEOMETRY_NETWORK</a>, <a href="#CHDDCACC">SDO_NET.SDO_GEOMETRY_NETWORK</a>, and <a href="#CHDBAGBJ">SDO_NET.TOPO_GEOMETRY_NETWORK</a>.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1370"></a>Examples</p>
<p>The following example checks if the network named <code>ROADS_NETWORK</code> is a spatial network.</p>
<pre>
SELECT SDO_NET.IS_SPATIAL('ROADS_NETWORK') FROM DUAL;
 
SDO_NET.IS_SPATIAL('ROADS_NETWORK')                                             
--------------------------------------------------------------------------------
TRUE
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" -->
<div id="TOPOL1031" class="refsect1"><a id="sthref1371"></a>
<h2 class="refsect1"><a id="sthref1372"></a><a id="sthref1373"></a><a id="sthref1374"></a>SDO_NET.LOAD_CONFIG</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1375"></a>Format</p>
<p class="synopsis">SDO_NET.LOAD_CONFIG(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;file_directory IN VARCHAR2,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;file_name IN VARCHAR2);</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1376"></a>Description</p>
<p>Loads (or reloads) the configuration for load on demand Java stored procedures from the specified XML file. The load on demand configuration is mainly for partition BLOB translation and partition cache configuration. (The Java stored procedures are classes in the package <code>oracle.spatial.network.lod</code>.)</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1377"></a>Parameters</p>
<dl>
<dt>file_directory</dt>
<dd>
<p>Directory object that identifies the path for the XML file. To create a directory object, use the SQL*Plus command CREATE DIRECTORY.</p>
</dd>
<dt>file_name</dt>
<dd>
<p>Name of the XML file containing the information to be loaded.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1378"></a>Usage Notes</p>
<p>A default configuration is provided for load on demand. You can use this procedure if you need to change the default configuration.</p>
<p>For information about configuring the load on demand environment, including the partition cache, see <a href="sdo_net_concepts.htm#CIHCAFFD">Section 5.7.3</a>.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1379"></a>Examples</p>
<p>The following example loads the load on demand configuration from a specified XML file.</p>
<pre>
EXECUTE SDO_NET.LOAD_CONFIG('WORK_DIR', 'netlodcfg.xml');
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" -->
<a id="CACFCCED"></a>
<div class="refsect1">
<h2 class="refsect1"><a id="sthref1380"></a><a id="sthref1381"></a><a id="sthref1382"></a>SDO_NET.LOGICAL_PARTITION</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1383"></a>Format</p>
<p class="synopsis">SDO_NET.LOGICAL_PARTITION(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;network IN VARCHAR2,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;partition_table_name IN VARCHAR2,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;max_num_nodes IN NUMBER,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;log_loc IN VARCHAR2,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;log_file IN VARCHAR2,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;open_mode IN VARCHAR2 DEFAULT 'A',</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;link_level IN NUMBER DEFAULT 1);</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1384"></a>Description</p>
<p>Partitions a logical network, and stores the information in the partition table.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
If the logical network is a power law (scale-free) network, do not use this procedure to partition it, but instead use the <a href="#CACIHIJC">SDO_NET.LOGICAL_POWERLAW_PARTITION</a> procedure.</div>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1385"></a>Parameters</p>
<dl>
<dt>network</dt>
<dd>
<p>Network name.</p>
</dd>
<dt>partition_table_name</dt>
<dd>
<p>Name of the partition table, which is created by this procedure. (If an existing table with the specified name already exists, it is updated with partition information for the specified link level.) The partition table is described in <a href="sdo_net_concepts.htm#CIHIDACD">Section 5.9.6</a>.</p>
</dd>
<dt>max_num_nodes</dt>
<dd>
<p>Maximum number of nodes to include in each partition. For example, if you specify 5000 and if the network contains 50,000 nodes, each partition will have 5000 or fewer nodes, and the total number of partitions will be 10 or higher.</p>
</dd>
<dt>log_loc</dt>
<dd>
<p>Directory object that identifies the path for the log file. To create a directory object, use the SQL*Plus command CREATE DIRECTORY.</p>
</dd>
<dt>log_file</dt>
<dd>
<p>Log file containing information about operations on the logical network, including any possible errors or problems.</p>
</dd>
<dt>open_mode</dt>
<dd>
<p>A one-character code indicating the mode in which to open the log file: <code>W</code> for write over (that is, delete any existing log file at the specified location and name, and create a new file), or <code>A</code> (the default) for append (that is, append information to the existing specified log file). If you specify <code>A</code> and the log file does not exist, a new log file is created.</p>
</dd>
<dt>link_level</dt>
<dd>
<p>Network link level on which to perform the partitioning (default = 1). The link level reflects the priority level for the link, and is used for network analysis, so that links with higher priority levels can be considered first in computing a path.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1386"></a>Usage Notes</p>
<p>After you use this procedure to create the partitions, consider using the <a href="#CACIHEGB">SDO_NET.GENERATE_PARTITION_BLOBS</a> procedure, to enable better performance for many network analysis operations, especially with large networks.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1387"></a>Examples</p>
<p>The following example creates partitions for link level 1 in the <code>MY_LOGICAL_NET</code> network, and creates the MY_LOGICAL_PART_TAB table. The maximum number of nodes to be placed in any partition is 5000. Information about the operation is added (<code>open_mode =&gt; 'a'</code>) to the <code>my_logical_part.log</code> file, located in the location associated with the directory object named <code>LOG_DIR</code>.</p>
<pre>
EXECUTE SDO_NET.LOGICAL_PARTITION(network =&gt; 'MY_LOGICAL_NET', -
  partition_table_name =&gt; 'my_logical_part_tab',-
  max_num_nodes =&gt; 5000,-
  log_loc =&gt; 'LOG_DIR', log_file=&gt; 'my_logical_part.log',-
  link_level =&gt; 1, open_mode =&gt; 'a');
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" -->
<a id="CACIHIJC"></a>
<div class="refsect1">
<h2 class="refsect1"><a id="sthref1388"></a><a id="sthref1389"></a><a id="sthref1390"></a><a id="sthref1391"></a><a id="sthref1392"></a>SDO_NET.LOGICAL_POWERLAW_PARTITION</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1393"></a>Format</p>
<p class="synopsis">SDO_NET.LOGICAL_POWERLAW_PARTITION(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;network IN VARCHAR2,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;partition_table_name IN VARCHAR2,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;max_num_nodes IN NUMBER,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;log_loc IN VARCHAR2,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;log_file IN VARCHAR2,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;open_mode IN VARCHAR2 DEFAULT 'A',</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;link_level IN NUMBER DEFAULT 1);</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1394"></a>Description</p>
<p>Partitions a logical power law (also called scale-free) network, and stores the information in the partition table. (In a power law network, the node degree values contain the power law information.)</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1395"></a>Parameters</p>
<dl>
<dt>network</dt>
<dd>
<p>Network name.</p>
</dd>
<dt>partition_table_name</dt>
<dd>
<p>Name of the partition table, which is created by this procedure. (If an existing table with the specified name already exists, it is updated with partition information for the specified link level.) The partition table is described in <a href="sdo_net_concepts.htm#CIHIDACD">Section 5.9.6</a>.</p>
</dd>
<dt>max_num_nodes</dt>
<dd>
<p>Maximum number of nodes to include in each partition. For example, if you specify 5000 and if the network contains 50,000 nodes, each partition will have 5000 or fewer nodes, and the total number of partitions will be 10 or higher.</p>
</dd>
<dt>log_loc</dt>
<dd>
<p>Directory object that identifies the path for the log file. To create a directory object, use the SQL*Plus command CREATE DIRECTORY.</p>
</dd>
<dt>log_file</dt>
<dd>
<p>Log file containing information about operations on the logical power law network, including any possible errors or problems.</p>
</dd>
<dt>open_mode</dt>
<dd>
<p>A one-character code indicating the mode in which to open the log file: <code>W</code> for write over (that is, delete any existing log file at the specified location and name, and create a new file), or <code>A</code> (the default) for append (that is, append information to the existing specified log file). If you specify <code>A</code> and the log file does not exist, a new log file is created.</p>
</dd>
<dt>link_level</dt>
<dd>
<p>Network link level on which to perform the partitioning (default = 1). The link level reflects the priority level for the link, and is used for network analysis, so that links with higher priority levels can be considered first in computing a path.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1396"></a>Usage Notes</p>
<p>After you use this procedure to create the partitions, consider using the <a href="#CACIHEGB">SDO_NET.GENERATE_PARTITION_BLOBS</a> procedure, to enable better performance for many network analysis operations, especially with large networks.</p>
<p>If the logical network is not a power law network, do not use this procedure, but instead use the <a href="#CACFCCED">SDO_NET.LOGICAL_PARTITION</a> procedure.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1397"></a>Examples</p>
<p>The following example creates partitions for link level 1 in the <code>MY_LOGICAL_PLAW_NET</code> network, and creates the MY_LOGICAL_PLAW_PART_TAB table. The maximum number of nodes to be placed in any partition is 5000. Information about the operation is added (<code>open_mode =&gt; 'a'</code>) to the <code>my_logical_plaw_part.log</code> file, located in the location associated with the directory object named <code>LOG_DIR</code>.</p>
<pre>
EXECUTE SDO_NET.LOGICAL_POWERLAW_PARTITION(network =&gt; 'MY_LOGICAL_PLAW_NET', -
  partition_table_name =&gt; 'my_logical_plaw_part_tab',-
  max_num_nodes =&gt; 5000,-
  log_loc =&gt; 'LOG_DIR', log_file=&gt; 'my_logical_plaw_part.log',-
  link_level =&gt; 1, open_mode =&gt; 'a');
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" -->
<a id="CHDEAIFJ"></a>
<div id="TOPOL1032" class="refsect1">
<h2 class="refsect1"><a id="sthref1398"></a><a id="sthref1399"></a>SDO_NET.LRS_GEOMETRY_NETWORK</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1400"></a>Format</p>
<p class="synopsis">SDO_NET.LRS_GEOMETRY_NETWORK(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;network IN VARCHAR2</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) RETURN VARCHAR2;</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1401"></a>Description</p>
<p>Returns the string <code>TRUE</code> if the network is a spatial network containing LRS geometries; returns the string <code>FALSE</code> if the network is not a spatial network containing LRS geometries.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1402"></a>Parameters</p>
<dl>
<dt>network</dt>
<dd>
<p>Network name.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1403"></a>Usage Notes</p>
<p>A network contains LRS geometries if the GEOMETRY_TYPE column in its entry in the USER_SDO_NETWORK_METADATA view contains the value <code>LRS_GEOMETRY</code>. (The USER_SDO_NETWORK_METADATA view is explained in <a href="sdo_net_concepts.htm#CIHGBCAI">Section 5.10.1</a>.)</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1404"></a>Examples</p>
<p>The following example checks if the network named <code>ROADS_NETWORK</code> is a spatial network containing LRS geometries.</p>
<pre>
SELECT SDO_NET.LRS_GEOMETRY_NETWORK('ROADS_NETWORK') FROM DUAL;
 
SDO_NET.LRS_GEOMETRY_NETWORK('ROADS_NETWORK')                                   
--------------------------------------------------------------------------------
TRUE
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" -->
<a id="CHDDHDGI"></a>
<div id="TOPOL1033" class="refsect1">
<h2 class="refsect1"><a id="sthref1405"></a><a id="sthref1406"></a>SDO_NET.NETWORK_EXISTS</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1407"></a>Format</p>
<p class="synopsis">SDO_NET.NETWORK_EXISTS(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;network IN VARCHAR2</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) RETURN VARCHAR2;</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1408"></a>Description</p>
<p>Returns the string <code>TRUE</code> if the network exists; returns the string <code>FALSE</code> if the network does not exist.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1409"></a>Parameters</p>
<dl>
<dt>network</dt>
<dd>
<p>Network name.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1410"></a>Usage Notes</p>
<p>If you drop a network (using the <a href="#CHDIEAIB">SDO_NET.DROP_NETWORK</a> procedure), the network no longer exists.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1411"></a>Examples</p>
<p>The following example checks if the network named <code>ROADS_NETWORK</code> exists.</p>
<pre>
SELECT SDO_NET.NETWORK_EXISTS('ROADS_NETWORK') FROM DUAL;
 
SDO_NET.NETWORK_EXISTS('ROADS_NETWORK')                                         
--------------------------------------------------------------------------------
TRUE 
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" -->
<a id="CACCJIEB"></a>
<div id="TOPOL1034" class="refsect1">
<h2 class="refsect1"><a id="sthref1412"></a><a id="sthref1413"></a><a id="sthref1414"></a>SDO_NET.REGISTER_CONSTRAINT</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1415"></a>Format</p>
<p class="synopsis">SDO_NET.REGISTER_CONSTRAINT(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;constraint_name IN VARCHAR2,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;class_name IN VARCHAR2,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;directory_name IN VARCHAR2,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;description IN VARCHAR2);</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1416"></a>Description</p>
<p>Loads the compiled Java code for the specified network constraint into the Java class repository in the database, and loads the class name into the CLASS column of the USER_SDO_NETWORK_CONSTRAINTS view (described in <a href="sdo_net_concepts.htm#CIHJFCBA">Section 5.10.2</a>).</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1417"></a>Parameters</p>
<dl>
<dt>constraint_name</dt>
<dd>
<p>Name of the network constraint.</p>
</dd>
</dl>
<dl>
<dt>class_name</dt>
<dd>
<p>Fully qualified name (including the name of the package) of the class that implements the network constraint.</p>
</dd>
</dl>
<dl>
<dt>directory_name</dt>
<dd>
<p>Name of the directory object (created using the SQL statement CREATE DIRECTORY) that identifies the location of the class file created when you compiled the network constraint.</p>
</dd>
</dl>
<dl>
<dt>description</dt>
<dd>
<p>Description of the network constraint.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1418"></a>Usage Notes</p>
<p>Before you call this procedure, you must insert a row into the USER_SDO_NETWORK_CONSTRAINTS view, compile the code for the Java class that implements the network constraint, and use the CREATE DIRECTORY statement to create a directory object identifying the location of the compiled class. For more information about network constraints, see <a href="sdo_net_concepts.htm#CIHJFIIG">Section 5.6</a>.</p>
<p>To delete the row for the constraint from the USER_SDO_NETWORK_CONSTRAINTS view and thus disable the constraint, use the <a href="#CACDGBCJ">SDO_NET.DEREGISTER_CONSTRAINT</a> procedure.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1419"></a>Examples</p>
<p>The following example registers a network constraint named <code>GivenProhibitedTurn</code>.</p>
<pre>
-- Set up the network constraint.
REM
REM Create the geor_dir on the file system first.
REM
-- Connect as SYSTEM.
DECLARE 
  -- This is the directory that contains the CLASS file generated when you
  -- compiled the network constraint.
  geor_dir varchar2(1000) := 'C:\my_data\files81\PROTOTYPES\NETWORK_CONSTRAINT\PLSQL_EXAMPLE';
BEGIN 
  EXECUTE IMMEDIATE 'CREATE OR REPLACE DIRECTORY work_dir AS''' || geor_dir || ''''; 
END;
/
GRANT read,write on directory work_dir to net_con;
 
-- Connect as the user that will register the constraint. 
 
REM
REM Compile GivenProhibitedTurn before you register the constraint.
REM
BEGIN
  SDO_NET.REGISTER_CONSTRAINT('GivenProhibitedTurn', 
     'com/network/constraints/ProhibitedTurn',
     'WORK_DIR', 'This is a network constraint that '||
     'prohibits certain turns');
 
END;
/
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" -->
<a id="CHDDCACC"></a>
<div id="TOPOL1035" class="refsect1">
<h2 class="refsect1"><a id="sthref1420"></a><a id="sthref1421"></a>SDO_NET.SDO_GEOMETRY_NETWORK</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1422"></a>Format</p>
<p class="synopsis">SDO_NET.SDO_GEOMETRY_NETWORK(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;network IN VARCHAR2</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) RETURN VARCHAR2;</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1423"></a>Description</p>
<p>Returns the string <code>TRUE</code> if the network is a spatial network containing SDO geometries (spatial geometries without measure information); returns the string <code>FALSE</code> if the network is not a spatial network containing SDO geometries.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1424"></a>Parameters</p>
<dl>
<dt>network</dt>
<dd>
<p>Network name.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1425"></a>Usage Notes</p>
<p>A network contains SDO geometries if the GEOMETRY_TYPE column in its entry in the USER_SDO_NETWORK_METADATA view contains the value <code>SDO_GEOMETRY</code>. (The USER_SDO_NETWORK_METADATA view is explained in <a href="sdo_net_concepts.htm#CIHGBCAI">Section 5.10.1</a>.)</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1426"></a>Examples</p>
<p>The following example checks if the network named <code>ROADS_NETWORK</code> is a spatial network containing SDO geometries.</p>
<pre>
SELECT SDO_NET.SDO_GEOMETRY_NETWORK('ROADS_NETWORK') FROM DUAL;
 
SDO_NET.SDO_GEOMETRY_NETWORK('ROADS_NETWORK')                                   
--------------------------------------------------------------------------------
FALSE
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" -->
<a id="CACFJJIH"></a>
<div id="TOPOL1036" class="refsect1">
<h2 class="refsect1"><a id="sthref1427"></a><a id="sthref1428"></a><a id="sthref1429"></a>SDO_NET.SET_LOGGING_LEVEL</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1430"></a>Format</p>
<p class="synopsis">SDO_NET.SET_LOGGING_LEVEL(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;level IN NUMBER);</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1431"></a>Description</p>
<p>Sets the minimum level of severity for messages to be displayed for network operations.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1432"></a>Parameters</p>
<dl>
<dt>level</dt>
<dd>
<p>Minimum severity level for messages to be displayed for network operations. Must be one of the numeric constants specified in the Usage Notes.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1433"></a>Usage Notes</p>
<p>All messages at the specified logging level and higher levels will be written. The logging levels, from highest to lowest, are:</p>
<pre>
SDO_NET.LOGGING_LEVEL_FATAL
SDO_NET.LOGGING_LEVEL_ERROR
SDO_NET.LOGGING_LEVEL_WARN
SDO_NET.LOGGING_LEVEL_INFO
SDO_NET.LOGGING_LEVEL_DEBUG
SDO_NET.LOGGING_LEVEL_FINEST
</pre>
<p>The logging level is the Java logging level from the underlying implementation of this function; therefore, to see the Java logging output on the console, execute the following statements beforehand:</p>
<pre>
SET SERVEROUTPUT ON;
EXECUTE DBMS_JAVA.SET_OUTPUT(10000);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1434"></a>Examples</p>
<p>The following example sets the logging level at <code>SDO_NET.</code><code>LOGGING_LEVEL_ERROR</code>, which means that only messages with a severity of <code>SDO_NET.LOGGING_LEVEL_ERROR</code> or <code>SDO_NET.LOGGING_LEVEL_FATAL</code> will be displayed.</p>
<pre>
EXECUTE SDO_NET.SET_LOGGING_LEVEL(SDO_NET.LOGGING_LEVEL_ERROR);
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" -->
<div id="TOPOL1037" class="refsect1"><a id="sthref1435"></a>
<h2 class="refsect1"><a id="sthref1436"></a><a id="sthref1437"></a><a id="sthref1438"></a><a id="sthref1439"></a>SDO_NET.SET_MAX_JAVA_HEAP_SIZE</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1440"></a>Format</p>
<p class="synopsis">SDO_NET.SET_MAX_JAVA_HEAP_SIZE(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bytes IN NUMBER);</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1441"></a>Description</p>
<p>Sets the Java maximum heap size for an application to run in an Oracle Java virtual machine.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1442"></a>Parameters</p>
<dl>
<dt>bytes</dt>
<dd>
<p>Number of bytes for the Java maximum heap size.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1443"></a>Usage Notes</p>
<p>If you encounter the <code>java.lang.OutOfMemoryError</code> exception, you can use this procedure to increase the maximum heap size.</p>
<p>If you specify a value greater than the system limit, the system limit is used.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1444"></a>Examples</p>
<p>The following example sets the Java maximum heap size to 536870912 (512 MB).</p>
<pre>
EXECUTE SDO_NET.SET_MAX_JAVA_HEAP_SIZE(536870912);
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" -->
<a id="CACHHCJE"></a>
<div id="TOPOL1038" class="refsect1">
<h2 class="refsect1"><a id="sthref1445"></a><a id="sthref1446"></a><a id="sthref1447"></a>SDO_NET.SPATIAL_PARTITION</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1448"></a>Format</p>
<p class="synopsis">SDO_NET.SPATIAL_PARTITION(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;network IN VARCHAR2,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;partition_table_name IN VARCHAR2,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;max_num_nodes IN NUMBER,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;log_loc IN VARCHAR2,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;log_file IN VARCHAR2,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;open_mode IN VARCHAR2 DEFAULT 'A',</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;link_level IN NUMBER DEFAULT 1);</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1449"></a>Description</p>
<p>Partitions a spatial network, and stores the information in the partition table.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1450"></a>Parameters</p>
<dl>
<dt>network</dt>
<dd>
<p>Network name.</p>
</dd>
<dt>partition_table_name</dt>
<dd>
<p>Name of the partition table, which is created by this procedure. (If an existing table with the specified name already exists, it is updated with partition information for the specified link level.) The partition table is described in <a href="sdo_net_concepts.htm#CIHIDACD">Section 5.9.6</a>.</p>
</dd>
<dt>max_num_nodes</dt>
<dd>
<p>Maximum number of nodes to include in each partition. For example, if you specify 5000 and if the network contains 50,000 nodes, each partition will have 5000 or fewer nodes, and the total number of partitions will be 10 or higher.</p>
</dd>
<dt>log_loc</dt>
<dd>
<p>Directory object that identifies the path for the log file. To create a directory object, use the SQL*Plus command CREATE DIRECTORY.</p>
</dd>
<dt>log_file</dt>
<dd>
<p>Log file containing information about Spatial network operations, including any possible errors or problems.</p>
</dd>
<dt>open_mode</dt>
<dd>
<p>A one-character code indicating the mode in which to open the log file: <code>W</code> for write over (that is, delete any existing log file at the specified location and name, and create a new file), or <code>A</code> (the default) for append (that is, append information to the existing specified log file). If you specify <code>A</code> and the log file does not exist, a new log file is created.</p>
</dd>
<dt>link_level</dt>
<dd>
<p>Network link level on which to perform the partitioning (default = 1). The link level reflects the priority level for the link, and is used for network analysis, so that links with higher priority levels can be considered first in network computations.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1451"></a>Usage Notes</p>
<p>After you use this procedure to create the partitions, consider using the <a href="#CACIHEGB">SDO_NET.GENERATE_PARTITION_BLOBS</a> procedure, to enable better performance for many network analysis operations, especially with large networks.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1452"></a>Examples</p>
<p>The following example creates partitions for link level 1 in the <code>MY_PARTITIONED_NET</code> network, and creates the MY_PARTITIONED_NET_TAB table. The maximum number of nodes to be placed in any partition is 5000. Information about the operation is added (<code>open_mode =&gt; 'a'</code>) to the <code>my_partitioned_net.log</code> file, located in the location associated with the directory object named <code>LOG_DIR</code>.</p>
<pre>
EXECUTE SDO_NET.SPATIAL_PARTITION(network =&gt; 'MY_PARTITIONED_NET', -
  partition_table_name =&gt; 'my_partitioned_net_tab',-
  max_num_nodes =&gt; 5000,-
  log_loc =&gt; 'LOG_DIR', log_file=&gt; 'my_partitioned_net.log',-
  link_level =&gt; 1, open_mode =&gt; 'a');
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" -->
<a id="CHDBAGBJ"></a>
<div id="TOPOL1039" class="refsect1">
<h2 class="refsect1"><a id="sthref1453"></a><a id="sthref1454"></a>SDO_NET.TOPO_GEOMETRY_NETWORK</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1455"></a>Format</p>
<p class="synopsis">SDO_NET.TOPO_GEOMETRY_NETWORK(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;network IN VARCHAR2</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) RETURN VARCHAR2;</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1456"></a>Description</p>
<p>Returns the string <code>TRUE</code> if the network is a spatial network containing SDO_TOPO_GEOMETRY (topology geometry) objects; returns the string <code>FALSE</code> if the network is not a spatial network containing SDO_TOPO_GEOMETRY objects.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1457"></a>Parameters</p>
<dl>
<dt>network</dt>
<dd>
<p>Network name.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1458"></a>Usage Notes</p>
<p>A network contains SDO_TOPO_GEOMETRY objects if the GEOMETRY_TYPE column in its entry in the USER_SDO_NETWORK_METADATA view contains the value <code>TOPO_GEOMETRY</code>. (The USER_SDO_NETWORK_METADATA view is explained in <a href="sdo_net_concepts.htm#CIHGBCAI">Section 5.10.1</a>.)</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1459"></a>Examples</p>
<p>The following example checks if the network named <code>ROADS_NETWORK</code> is a spatial network containing SDO_TOPO_GEOMETRY objects.</p>
<pre>
SELECT SDO_NET.TOPO_GEOMETRY_NETWORK('ROADS_NETWORK') FROM DUAL;
 
SDO_NET.TOPO_GEOMETRY_NETWORK('ROADS_NETWORK')                                  
--------------------------------------------------------------------------------
FALSE
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" -->
<a id="CHDCGIIH"></a>
<div id="TOPOL1040" class="refsect1">
<h2 class="refsect1"><a id="sthref1460"></a><a id="sthref1461"></a>SDO_NET.VALIDATE_LINK_SCHEMA</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1462"></a>Format</p>
<p class="synopsis">SDO_NET.VALIDATE_LINK_SCHEMA(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;network IN VARCHAR2</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) RETURN VARCHAR2;</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1463"></a>Description</p>
<p>Returns the string <code>TRUE</code> if the metadata relating to links in a network is valid; returns the string <code>FALSE</code> if the metadata relating to links in a network is not valid.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1464"></a>Parameters</p>
<dl>
<dt>network</dt>
<dd>
<p>Network name.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1465"></a>Usage Notes</p>
<p>This function checks the following for validity: table name, geometry column, and cost column for spatial networks; measure-related information for LRS networks; topology-related information for topology networks; and hierarchy-related information for hierarchical networks.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1466"></a>Examples</p>
<p>The following example checks the validity of the metadata related to links in the network named <code>ROADS_NETWORK</code>.</p>
<pre>
SELECT SDO_NET.VALIDATE_LINK_SCHEMA('ROADS_NETWORK') FROM DUAL;
 
SDO_NET.VALIDATE_LINK_SCHEMA('ROADS_NETWORK')                                   
--------------------------------------------------------------------------------
TRUE
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" -->
<a id="CHDHABJA"></a>
<div id="TOPOL1041" class="refsect1">
<h2 class="refsect1"><a id="sthref1467"></a><a id="sthref1468"></a>SDO_NET.VALIDATE_LRS_SCHEMA</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1469"></a>Format</p>
<p class="synopsis">SDO_NET.VALIDATE_LRS_SCHEMA(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;network IN VARCHAR2</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) RETURN VARCHAR2;</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1470"></a>Description</p>
<p>Returns the string <code>TRUE</code> if the metadata relating to LRS information in a network is valid; returns the string <code>FALSE</code> if the metadata relating to LRS information in a network is not valid.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1471"></a>Parameters</p>
<dl>
<dt>network</dt>
<dd>
<p>Network name.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1472"></a>Usage Notes</p>
<p>None.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1473"></a>Examples</p>
<p>The following example checks the validity of the metadata related to LRS information in the network named <code>ROADS_NETWORK</code>.</p>
<pre>
SELECT SDO_NET.VALIDATE_LRS_SCHEMA('ROADS_NETWORK') FROM DUAL;
 
SDO_NET.VALIDATE_LRS_SCHEMA('ROADS_NETWORK')                                    
--------------------------------------------------------------------------------
TRUE
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" -->
<a id="CHDCFEFH"></a>
<div id="TOPOL1042" class="refsect1">
<h2 class="refsect1"><a id="sthref1474"></a><a id="sthref1475"></a>SDO_NET.VALIDATE_NETWORK</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1476"></a>Format</p>
<p class="synopsis">SDO_NET.VALIDATE_NETWORK(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;network IN VARCHAR2,</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;check_data IN VARCHAR2 DEFAULT 'FALSE'</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) RETURN VARCHAR2;</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1477"></a>Description</p>
<p>Returns the string <code>TRUE</code> if the network is valid; returns the string <code>FALSE</code> if the network is not valid.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1478"></a>Parameters</p>
<dl>
<dt>network</dt>
<dd>
<p>Network name.</p>
</dd>
<dt>check_data</dt>
<dd>
<p><code>TRUE</code> performs additional checks on the referential integrity of network data; <code>FALSE</code> (the default) performs basic checks, but not additional checks, on the referential integrity of network data.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1479"></a>Usage Notes</p>
<p>This function checks the metadata for the network and any applicable network schema structures (link, node, path, subpath, LRS). It performs basic referential integrity checks on the network data, and it optionally performs additional checks. If any errors are found, the function returns the string <code>FALSE</code>.</p>
<p>The checks performed by this function include the following:</p>
<ul>
<li>
<p>The network exists.</p>
</li>
<li>
<p>The node and link tables for the network exist, and they contain the required columns.</p>
</li>
<li>
<p>The start and end nodes of each link exist in the node table.</p>
</li>
<li>
<p>For an LRS geometry network, the LRS table exists and contains the required columns.</p>
</li>
<li>
<p>For a spatial network, columns for the node and path geometries exist and have spatial indexes defined on them.</p>
</li>
<li>
<p>If <code>check_data</code> is <code>TRUE</code>, additional referential integrity checking on the network data is performed. This will take longer, especially if the network is large.</p>
</li>
</ul>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1480"></a>Examples</p>
<p>The following example validates the network named <code>LOG_NET1</code>.</p>
<pre>
SELECT SDO_NET.VALIDATE_NETWORK('LOG_NET1') FROM DUAL;
 
SDO_NET.VALIDATE_NETWORK('LOG_NET1')
--------------------------------------------------------------------------------
TRUE
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" -->
<a id="CHDBFCJB"></a>
<div id="TOPOL1043" class="refsect1">
<h2 class="refsect1"><a id="sthref1481"></a><a id="sthref1482"></a>SDO_NET.VALIDATE_NODE_SCHEMA</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1483"></a>Format</p>
<p class="synopsis">SDO_NET.VALIDATE_NODE_SCHEMA(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;network IN VARCHAR2</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) RETURN VARCHAR2;</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1484"></a>Description</p>
<p>Returns the string <code>TRUE</code> if the metadata relating to nodes in a network is valid; returns the string <code>FALSE</code> if the metadata relating to nodes in a network is not valid.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1485"></a>Parameters</p>
<dl>
<dt>network</dt>
<dd>
<p>Network name.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1486"></a>Usage Notes</p>
<p>This function checks the following for validity: table name, geometry column, and cost column for spatial networks; measure-related information for LRS networks; topology-related information for topology networks; and hierarchy-related information for hierarchical networks.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1487"></a>Examples</p>
<p>The following example checks the validity of the metadata related to nodes in the network named <code>LOG_NET1</code>.</p>
<pre>
SELECT SDO_NET.VALIDATE_NODE_SCHEMA('LOG_NET1') FROM DUAL;
 
SDO_NET.VALIDATE_NODE_SCHEMA('LOG_NET1')
--------------------------------------------------------------------------------
TRUE
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" -->
<div id="TOPOL1044" class="refsect1"><a id="sthref1488"></a>
<h2 class="refsect1"><a id="sthref1489"></a><a id="sthref1490"></a>SDO_NET.VALIDATE_PARTITION_SCHEMA</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1491"></a>Format</p>
<p class="synopsis">SDO_NET.VALIDATE_PARTITION_SCHEMA(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;network IN VARCHAR2</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) RETURN VARCHAR2;</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1492"></a>Description</p>
<p>Returns the string <code>TRUE</code> if the metadata relating to partitions in a network is valid; returns the string <code>FALSE</code> if the metadata relating to partitions in a network is not valid.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1493"></a>Parameters</p>
<dl>
<dt>network</dt>
<dd>
<p>Network name.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1494"></a>Usage Notes</p>
<p>This function checks the validity of information in the partition table, which is described in <a href="sdo_net_concepts.htm#CIHIDACD">Section 5.9.6</a>.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1495"></a>Examples</p>
<p>The following example checks the validity of the metadata related to partitions in the network named <code>SDO_PARTITIONED</code>.</p>
<pre>
SELECT SDO_NET.VALIDATE_PARTITION_SCHEMA('SDO_PARTITIONED') FROM DUAL;
 
SDO_NET.VALIDATE_PARTITION_SCHEMA('SDO_PARTITIONED')
--------------------------------------------------------------------------------
TRUE
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" -->
<a id="CHDIFFHJ"></a>
<div id="TOPOL1045" class="refsect1">
<h2 class="refsect1"><a id="sthref1496"></a><a id="sthref1497"></a>SDO_NET.VALIDATE_PATH_SCHEMA</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1498"></a>Format</p>
<p class="synopsis">SDO_NET.VALIDATE_PATH_SCHEMA(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;network IN VARCHAR2</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) RETURN VARCHAR2;</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1499"></a>Description</p>
<p>Returns the string <code>TRUE</code> if the metadata relating to paths in a network is valid; returns the string <code>FALSE</code> if the metadata relating to paths in a network is not valid.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1500"></a>Parameters</p>
<dl>
<dt>network</dt>
<dd>
<p>Network name.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1501"></a>Usage Notes</p>
<p>This function checks the following for validity: table name, geometry column, and cost column for spatial networks; measure-related information for LRS networks; topology-related information for topology networks; and hierarchy-related information for hierarchical networks.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1502"></a>Examples</p>
<p>The following example checks the validity of the metadata related to paths in the network named <code>ROADS_NETWORK</code>.</p>
<pre>
SELECT SDO_NET.VALIDATE_PATH_SCHEMA('ROADS_NETWORK') FROM DUAL;
 
SDO_NET.VALIDATE_PATH_SCHEMA('ROADS_NETWORK')                                   
--------------------------------------------------------------------------------
TRUE
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" -->
<div id="TOPOL1046" class="refsect1"><a id="sthref1503"></a>
<h2 class="refsect1"><a id="sthref1504"></a><a id="sthref1505"></a>SDO_NET.VALIDATE_SUBPATH_SCHEMA</h2>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1506"></a>Format</p>
<p class="synopsis">SDO_NET.VALIDATE_SUBPATH_SCHEMA(</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;network IN VARCHAR2</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) RETURN VARCHAR2;</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1507"></a>Description</p>
<p>Returns the string <code>TRUE</code> if the metadata relating to subpaths in a network is valid; returns the string <code>FALSE</code> if the metadata relating to subpaths in a network is not valid.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1508"></a>Parameters</p>
<dl>
<dt>network</dt>
<dd>
<p>Network name.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1509"></a>Usage Notes</p>
<p>This function checks the validity of information in the subpath table, which is described in <a href="sdo_net_concepts.htm#CIHHIJFA">Section 5.9.5</a>.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1510"></a>Examples</p>
<p>The following example checks the validity of the metadata related to subpaths in the network named <code>MY_NETWORK</code>.</p>
<pre>
SELECT SDO_NET.VALIDATE_SUBPATH_SCHEMA('MY_NETWORK') FROM DUAL;
 
SDO_NET.VALIDATE_SUBPATH_SCHEMA('MY_NETWORK')
--------------------------------------------------------------------------------
TRUE
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" --></div>
<!-- class="refentry" --></div>
<!-- class="chapter" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment778">
<tr>
<td class="cellalignment785">
<table class="cellalignment783">
<tr>
<td class="cellalignment782"><a href="sdo_net_concepts.htm"><img width="24" height="24" src="../../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment782"><a href="sdo_net_mem_ref.htm"><img width="24" height="24" src="../../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;2003, 2014,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment787">
<table class="cellalignment781">
<tr>
<td class="cellalignment782"><a href="../../index.htm"><img width="24" height="24" src="../../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment782"><a href="../../nav/portal_booklist.htm"><img width="24" height="24" src="../../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment782"><a href="toc.htm"><img width="24" height="24" src="../../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment782"><a href="index.htm"><img width="24" height="24" src="../../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment782"><a href="../../nav/mindx.htm"><img width="24" height="24" src="../../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment782"><a href="../../dcommon/html/feedback.htm"><img width="24" height="24" src="../../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>
</body>
</html>
