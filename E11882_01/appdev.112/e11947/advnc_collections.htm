<!DOCTYPE html>
<html lang="en" >
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1">
<meta charset="utf-8">
<title>Using Collections</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Version 5.1.2 Build 737" />
<meta name="dcterms.created" content="2013-07-29T17:38:52Z" />
<meta name="robots" content="all" />
<meta name="dcterms.title" content="Application Express Application Builder User's Guide" />
<meta name="dcterms.identifier" content="E11947-03" />
<meta name="dcterms.isVersionOf" content="HTMDB" />
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;2003, 2013,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved." />
<link rel="Start" href="../../index.htm" title="Home" type="text/html" />
<link rel="Copyright" href="../../dcommon/html/cpyr.htm" title="Copyright" type="text/html" />

<script type="application/javascript"  src="../../dcommon/js/headfoot.js"></script>
<script type="application/javascript"  src="../../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html" />
<link rel="Index" href="index.htm" title="Index" type="text/html" />
<link rel="Prev" href="aadm_email.htm" title="Previous" type="text/html" />
<link rel="Next" href="advnc_act_log.htm" title="Next" type="text/html" />
<link rel="alternate" href="../e11947.pdf" title="PDF version" type="application/pdf" />
<link rel="schema.dcterms" href="http://purl.org/dc/terms/" />
<link rel="stylesheet" href="../../dcommon/css/fusiondoc.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/header.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/footer.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/fonts.css">
<link rel="stylesheet" href="../../dcommon/css/foundation.css">
<link rel="stylesheet" href="../../dcommon/css/codemirror.css">
<link rel="stylesheet" type="text/css" title="Default" href="../../nav/css/html5.css">
<link rel="stylesheet" href="../../dcommon/css/respond-480-tablet.css">
<link rel="stylesheet" href="../../dcommon/css/respond-768-laptop.css">
<link rel="stylesheet" href="../../dcommon/css/respond-1140-deskop.css">
<script type="application/javascript" src="../../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">118/138</span> <!-- End Header --><a id="BABFFJJJ"></a>
<div id="HTMDB13002" class="sect1"><!-- infolevel="all" infotype="General" -->
<h1 class="sect1">Using <a id="sthref2063"></a><a id="sthref2064"></a>Collections</h1>
<p>Collections enable you to temporarily capture one or more nonscalar values. You can use collections to store rows and columns currently in session state so they can be accessed, manipulated, or processed during a user's specific session. You can think of a collection as a bucket in which you temporarily store and name rows of information.</p>
<p>The following are examples of when you might use collections:</p>
<ul>
<li>
<p>When you are creating a data-entry wizard in which multiple rows of information first need to be collected within a logical transaction. You can use collections to temporarily store the contents of the multiple rows of information, before performing the final step in the wizard when both the physical and logical transactions are completed.</p>
</li>
<li>
<p>When your application includes an update page on which a user updates multiple detail rows on one page. The user can make many updates, apply these updates to a collection and then call a final process to apply the changes to the database.</p>
</li>
<li>
<p>When you are building a wizard where you are collecting an arbitrary number of attributes. At the end of the wizard, the user then performs a task that takes the information temporarily stored in the collection and applies it to the database.</p>
</li>
</ul>
<p>Topics in this section include:</p>
<ul>
<li>
<p><a href="#CIHHCGGD">About the APEX_COLLECTION API</a></p>
</li>
<li>
<p><a href="#BABGHJFD">Creating a Collection</a></p>
</li>
<li>
<p><a href="#BABEBBEI">Truncating a Collection</a></p>
</li>
<li>
<p><a href="#CHDGGECE">Accessing a Collection</a></p>
</li>
<li>
<p><a href="#BABGGIDG">Deleting a Collection</a></p>
</li>
<li>
<p><a href="#BABCHDBC">Adding Members to a Collection</a></p>
</li>
<li>
<p><a href="#BABJHCFB">Updating Collection Members</a></p>
</li>
<li>
<p><a href="#BABHHGJC">Deleting Collection Members</a></p>
</li>
<li>
<p><a href="#BABIAEDH">Determining Collection Status</a></p>
</li>
<li>
<p><a href="#BABICJHH">Merging Collections</a></p>
</li>
<li>
<p><a href="#BABBFIAA">Managing Collections</a></p>
</li>
<li>
<p><a href="#BABHBFJA">Clearing Collection Session State</a></p>
</li>
</ul>
<a id="CIHHCGGD"></a>
<div id="HTMDB25857" class="sect2"><!-- infolevel="all" infotype="General" -->
<h2 class="sect2">About the APEX_COLLECTION <a id="sthref2065"></a><a id="sthref2066"></a><a id="sthref2067"></a>API</h2>
<p>Every collection contains a named list of data elements (or members) which can have up to 50 character attributes (<code>VARCHAR2(4000)</code>), and one large character attribute (<code>CLOB</code>). You insert, update, and delete collection information using the PL/SQL API <code>APEX_COLLECTION</code>.</p>
<a id="BABBCHID"></a>
<div id="HTMDB25858" class="sect3"><!-- infolevel="all" infotype="General" -->
<h3 class="sect3">About Collection <a id="sthref2068"></a>Naming</h3>
<p>When you create a collection, you must give it a name that cannot exceed 255 characters. Note that collection names are not case-sensitive and will be converted to uppercase.</p>
<p>Once the collection is named, you can access the values in the collection by running a SQL query against the view <code>APEX_COLLECTIONS</code>.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#CHDGGECE">"Accessing a Collection"</a></div>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="BABGHJFD"></a>
<div id="HTMDB25859" class="sect2"><!-- infolevel="all" infotype="General" -->
<h2 class="sect2">Creating a <a id="sthref2069"></a>Collection</h2>
<p>Every collection contains a named list of data elements (or members) which can have up to 50 character attributes (<code>VARCHAR2(4000)</code>), and one large character attribute (<code>CLOB</code>). You use the following methods to create a collection:</p>
<ul>
<li>
<p><code>CREATE_COLLECTION</code></p>
</li>
<li>
<p><code>CREATE_OR_TRUNCATE_COLLECTION</code></p>
</li>
<li>
<p><code>CREATE_COLLECTION_FROM_QUERY</code></p>
</li>
<li>
<p><code>CREATE_COLLECTION_FROM_QUERY_B</code></p>
</li>
</ul>
<p>The <code>CREATE_COLLECTION</code> method raises an exception if the named collection exists, for example:</p>
<pre>
<a id="sthref2070"></a>APEX_COLLECTION.CREATE_COLLECTION(
    p_collection_name =&gt; collection name );
</pre>
<p>The <code>CREATE_OR_TRUNCATE_COLLECTION</code> method creates a collection if the named collection does not exist. If the named collection exists, this method truncates it. Truncating a collection empties it, but leaves it in place, for example:</p>
<pre>
<a id="sthref2071"></a>APEX_COLLECTION.CREATE_OR_TRUNCATE_COLLECTION(
    p_collection_name =&gt; collection name);
</pre>
<p>The <code>CREATE_COLLECTION_FROM_QUERY</code> method creates a collection and then populates it with the results of a specified query, for example:</p>
<pre>
<a id="sthref2072"></a>APEX_COLLECTION.CREATE_COLLECTION_FROM_QUERY(
    p_collection_name =&gt; collection name,
    p_query           =&gt; your query ,
    p_generate_md5    =&gt; 'YES' or 'NO' );
</pre>
<p>The <code>CREATE_COLLECTION_FROM_QUERY_B</code> method also creates a collection and then populates it with the results of a specified query, for example:</p>
<pre>
<a id="sthref2073"></a>APEX_COLLECTION.CREATE_COLLECTION_FROM_QUERY_B(
    p_collection_name =&gt; collection name,
    p_query           =&gt; your query );
   
</pre>
<p>The <code>CREATE_COLLECTION_FROM_QUERY_B</code> method offers significantly faster performance than the <code>CREATE_COLLECTION_FROM_QUERY</code> method by performing bulk SQL operations, but has the following limitations:</p>
<ul>
<li>
<p>No column value in the select list of the query can be more than 2,000 bytes. If a row is encountered that has a column value of more than 2,000 bytes, an error will be raised during execution.</p>
</li>
<li>
<p>The MD5 checksum will not be computed for any members in the collection.</p>
</li>
</ul>
<div id="HTMDB25860" class="sect3"><!-- infolevel="all" infotype="General" --><a id="sthref2074"></a>
<h3 class="sect3">About the Parameter p_generate_md5</h3>
<p>Use the <code>p_generate_md5</code> flag to specify if the message digest of the data of the collection member should be computed. By default, this flag is set to <code>NO</code>. Use this parameter to check the MD5 of the collection member (that is, compare it with another member or see if a member has changed).</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#BABIAEDH">"Determining Collection Status"</a> for information about using the <code>GET_MEMBER_MD5</code> function</div>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="BABEBBEI"></a>
<div id="HTMDB25861" class="sect2"><!-- infolevel="all" infotype="General" -->
<h2 class="sect2">Truncating a <a id="sthref2075"></a>Collection</h2>
<p>If you truncate a collection, you remove all members from the specified collection, but the named collection remains in place, for example:</p>
<pre>
<a id="sthref2076"></a>APEX_COLLECTION.TRUNCATE_COLLECTION(
    p_collection_name =&gt; collection name );
</pre></div>
<!-- class="sect2" -->
<a id="CHDGGECE"></a>
<div id="HTMDB25862" class="sect2"><!-- infolevel="all" infotype="General" -->
<h2 class="sect2">Accessing a Collection<a id="sthref2077"></a></h2>
<p>You can access the members of a collection by querying the database view <code>APEX_COLLECTIONS</code>. The <code>APEX_COLLECTIONS</code> view has the following definition:</p>
<pre>
COLLECTION_NAME   NOT NULL VARCHAR2(255)
SEQ_ID            NOT NULL NUMBER 
C001                       VARCHAR2(4000)
C002                       VARCHAR2(4000)
C003                       VARCHAR2(4000)   
C004                       VARCHAR2(4000)   
C005                       VARCHAR2(4000)  
...
C050                       VARCHAR2(4000)
CLOB001                    CLOB   
MD5_ORIGINAL               VARCHAR2(4000)  
</pre>
<p>Use the <code>APEX_COLLECTIONS</code> view in an application just as you would use any other table or view in an application, for example:</p>
<pre>
SELECT c001, c002, c003
   FROM APEX_collections
 WHERE collection_name = 'FIREARMS'
</pre></div>
<!-- class="sect2" -->
<a id="BABGGIDG"></a>
<div id="HTMDB25863" class="sect2"><!-- infolevel="all" infotype="General" -->
<h2 class="sect2">Deleting a Collection<a id="sthref2078"></a></h2>
<p>If you delete a collection, you delete the collection and all of its members, for example:</p>
<pre>
<a id="sthref2079"></a>APEX_COLLECTION.DELETE_COLLECTION (
    p_collection_name =&gt; collection name );
</pre>
<p>Be aware that if you do not delete a collection, it will eventually be deleted when the session is purged. For example:</p>
<div id="HTMDB25864" class="sect3"><!-- infolevel="all" infotype="General" --><a id="sthref2080"></a>
<h3 class="sect3">Deleting All Collections for the Current Application</h3>
<p>Use the <code>DELETE_ALL_COLLECTIONS</code> method to delete all collections defined in the current application, for example:</p>
<pre>
<a id="sthref2081"></a>APEX_COLLECTION.DELETE_ALL_COLLECTIONS;
</pre></div>
<!-- class="sect3" -->
<div id="HTMDB25865" class="sect3"><!-- infolevel="all" infotype="General" --><a id="sthref2082"></a>
<h3 class="sect3">Deleting All Collections in the Current Session</h3>
<p>Use the <code>DELETE_ALL_COLLECTIONS_SESSION</code> method to delete all collections defined in the current session., for example:</p>
<pre>
<a id="sthref2083"></a>APEX_COLLECTION.DELETE_ALL_COLLECTIONS_SESSION;
</pre></div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="BABCHDBC"></a>
<div id="HTMDB25866" class="sect2"><!-- infolevel="all" infotype="General" -->
<h2 class="sect2">Adding Members to a <a id="sthref2084"></a>Collection</h2>
<p>When data elements (or members) are added to a collection, they are assigned a unique sequence ID. As you add members to a collection, the sequence ID will change in increments of 1, with the newest members having the largest ID.</p>
<p>You add new members to a collection using the <code>ADD_MEMBER function</code>. Calling this function returns the sequence ID of the newly added member. The following example demonstrates how to use the <code>ADD_MEMBER</code> function.</p>
<pre>
<a id="sthref2085"></a>APEX_COLLECTION.ADD_MEMBER(
    p_collection_name =&gt; collection name,
    p_c001          =&gt; [member attribute 1],
    p_c002          =&gt; [member attribute 2],
    p_c003          =&gt; [member attribute 3],
    p_c004          =&gt; [member attribute 4],
    p_c005          =&gt; [member attribute 5],
    p_c006          =&gt; [member attribute 6],
    p_c007          =&gt; [member attribute 7],
    ...
    p_c050          =&gt; [member attribute 50]);
    p_clob001       =&gt; [CLOB member attribute 1],
    p_generate_md5  =&gt; 'YES' or 'NO');    
</pre>
<p>You can also add new members (or an array of members) to a collection using the <code>ADD_MEMBERS</code> method, for example:</p>
<pre>
APEX_COLLECTION.ADD_MEMBERS(
    p_collection_name =&gt; collection name,
    p_c001          =&gt; member attribute array 1,
    p_c002          =&gt; member attribute array 2,
    p_c003          =&gt; member attribute array 3,
    p_c004          =&gt; member attribute array 4,
    p_c005          =&gt; member attribute array 5,
    p_c006          =&gt; member attribute array 6,
    p_c007          =&gt; member attribute array 7,
    ...
    p_c050          =&gt; member attribute array 50);
    p_generate_md5  =&gt; 'YES' or 'NO');
</pre>
<p>This method raises an error if the specified collection does not exist with the specified name of the current user and in the same session. Also any attribute exceeding 4,000 characters will be truncated to 4,000 characters. The number of members added is based on the number of elements in the first array.</p>
<div id="HTMDB25867" class="sect3"><!-- infolevel="all" infotype="General" --><a id="sthref2086"></a>
<h3 class="sect3">About the Parameters p_generate_md5 and p_clob001</h3>
<p>Use the <code>p_generate_md5</code> flag to specify if the message digest of the data of the collection member should be computed. By default, this flag is set to <code>NO</code>. Use this parameter to check the MD5 of the collection member (that is, compare it with another member or see if a member has changed).</p>
<p>Use <code>p_clob001</code> for collection member attributes which exceed 4,000 characters.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#BABIAEDH">"Determining Collection Status"</a> for information about using the function <code>GET_MEMBER_MD5</code></div>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="BABJHCFB"></a>
<div id="HTMDB25868" class="sect2"><!-- infolevel="all" infotype="General" -->
<h2 class="sect2">Updating Collection <a id="sthref2087"></a>Members</h2>
<p>You can update collection members by calling the <code>UPDATE_MEMBER</code> procedure and referencing the desired collection member by its sequence ID, for example:</p>
<pre>
<a id="sthref2088"></a>APEX_COLLECTION.UPDATE_MEMBER (
    p_collection_name =&gt; collection name,
    p_seq             =&gt; member sequence number,
    p_c001            =&gt; member attribute 1,
    p_c002            =&gt; member attribute 2,
    p_c003            =&gt; member attribute 3,
    p_c004            =&gt; member attribute 4,
    p_c005            =&gt; member attribute 5,
    p_c006            =&gt; member attribute 6,
    p_c007            =&gt; member attribute 7,
    ...
    p_c050            =&gt; member attribute 50),
    p_clob001         =&gt; [CLOB member attribute 1];  
</pre>
<p>The <code>UPDATE_MEMBER</code> procedure replaces an entire collection member, not individual member attributes. This procedure causes an error if the named collection does not exist.</p>
<p>Use the <code>p_clob001</code> parameter for collection member attributes which exceed 4,000 characters.</p>
<p>To update a single attribute of a collection member, use the <code>UPDATE_MEMBER_ATTRIBUTE procedure</code>, for example:</p>
<pre>
<a id="sthref2089"></a>APEX_COLLECTION.UPDATE_MEMBER_ATTRIBUTE(
    p_collection_name       =&gt; collection_name,
    p_seq                   =&gt; member sequence number,
    p_attr_number           =&gt; member attribute number,
    p_attr_value            =&gt; member attribute value )
</pre>
<pre>
<a id="sthref2090"></a>APEX_COLLECTION.UPDATE_MEMBER_ATTRIBUTE(
    p_collection_name        =&gt; collection_name,
    p_seq                    =&gt; member sequence number,
    p_clob_number            =&gt; CLOB member attribute number,
    p_clob_value             =&gt; CLOB member attribute value );
</pre>
<p>Calling the <code>UPDATE_MEMBER_ATTRIBUTE</code> procedure causes an error if the named collection does not exist.</p>
<p>Note that the only valid value for the <code>p_clob_number</code> parameter is 1.</p>
</div>
<!-- class="sect2" -->
<a id="BABHHGJC"></a>
<div id="HTMDB25869" class="sect2"><!-- infolevel="all" infotype="General" -->
<h2 class="sect2">Deleting Collection <a id="sthref2091"></a>Members</h2>
<p>You can delete a collection member by calling the <code>DELETE_MEMBER</code> procedure and referencing the desired collection member by its sequence ID, for example:</p>
<pre>
<a id="sthref2092"></a>APEX_COLLECTION.DELETE_MEMBER(
    p_collection_name =&gt; collection name,
    p_seq             =&gt; member sequence number);
</pre>
<p>Note that this procedure leaves a gap in the sequence IDs in the specified collection. In addition, calling this procedure causes an error if the named collection does not exist.</p>
<p>You can also delete all members from a collection by when an attribute matches a specific value, for example:</p>
<pre>
<a id="sthref2093"></a>APEX_COLLECTION.DELETE_MEMBERS(
    p_collection_name =&gt; collection name,
    p_attr_number     =&gt; number of attribute used to match for the specified
                         attribute value for deletion, 
    p_attr_value      =&gt; attribute value of the member attribute used to 
                         match for deletion);
</pre>
<p>Note that the <code>DELETE_MEMBERS</code> procedure also leaves a gap in the sequence IDs in the specified collection. This procedure causes an error if:</p>
<ul>
<li>
<p>The named collection does not exist.</p>
</li>
<li>
<p>The specified attribute number is outside the range of 1 to 50, or not valid.</p>
</li>
</ul>
<p>If the supplied attribute value is null, then all members of the named collection will be deleted where the attribute (specified by p_attr_number) is null.</p>
</div>
<!-- class="sect2" -->
<a id="BABIAEDH"></a>
<div id="HTMDB25870" class="sect2"><!-- infolevel="all" infotype="General" -->
<h2 class="sect2">Determining Collection <a id="sthref2094"></a>Status</h2>
<p>The <code>p_generate_md5</code> parameter determines if the MD5 message digests are computed for each member of a collection. The collection status flag is set to <code>FALSE</code> immediately after you create a collection. If any operations are performed on the collection (such as add, update, truncate, and so on), this flag is set to <code>TRUE</code>.</p>
<p>You can reset this flag manually by calling <code>RESET_COLLECTION_CHANGED</code>, for example:</p>
<pre>
<a id="sthref2095"></a>APEX_COLLECTION.RESET_COLLECTION_CHANGED (
    p_collection_name =&gt; collection name)
</pre>
<p>Once this flag has been reset, you can determine if a collection has changed by calling <code>COLLECTION_HAS_CHANGED</code>, for example:</p>
<pre>
l_changed := APEX_COLLECTION.COLLECTION_HAS_CHANGED(
  p_collection_name =&gt; collection_name);
</pre>
<p>When you add a new member to a collection, an MD5 message digest is computed against all 50 attributes and the CLOB attribute if the <code>p_generated_md5</code> parameter is set to <code>YES</code>. You can access this value from the <code>MD5_ORIGINAL</code> column of the view <code>APEX_COLLECTION</code>. You can access the MD5 message digest for the current value of a specified collection member by using the function <code>GET_MEMBER_MD5</code>. For example:</p>
<pre>
<a id="sthref2096"></a>APEX_COLLECTION.GET_MEMBER_MD5 (
    p_collection_name =&gt; collection name,
    p_seq             =&gt; member sequence number );
    RETURN VARCHAR2;
</pre></div>
<!-- class="sect2" -->
<a id="BABICJHH"></a>
<div id="HTMDB25871" class="sect2"><!-- infolevel="all" infotype="General" -->
<h2 class="sect2">Merging <a id="sthref2097"></a>Collections</h2>
<p>You can merge members of a collection with values passed in a set of arrays. By using the <code>p_init_query</code> argument, you can create a collection from the supplied query.</p>
<p>Note that if the collection exists, the following occurs:</p>
<ul>
<li>
<p>Rows in the collection not in the arrays will be deleted.</p>
</li>
<li>
<p>Rows in the collection and in the arrays will be updated.</p>
</li>
<li>
<p>Rows in the array and not in the collection will be inserted.</p>
</li>
</ul>
<p>Any attribute value exceeding 4,000 characters will be truncated to 4,000 characters. <a href="#BABDFCEE">Table 15-1</a> describes the available arguments you can use when merging collections.</p>
<div id="HTMDB26265" class="tblformal">
<p class="titleintable"><a id="sthref2098"></a><a id="BABDFCEE"></a>Table 15-1 Available Arguments for Merging Collections</p>
<table class="cellalignment725" title="Available Arguments for Merging Collections" summary="The table describes the available arguments you can use when merging collections." dir="ltr">
<thead>
<tr class="cellalignment719">
<th class="cellalignment726" id="r1c1-t13">Argument</th>
<th class="cellalignment726" id="r1c2-t13">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment719">
<td class="cellalignment727" id="r2c1-t13" headers="r1c1-t13">
<p><code>p_collection_name</code></p>
</td>
<td class="cellalignment727" headers="r2c1-t13 r1c2-t13">
<p>Name of the collection.</p>
<p><span class="bold">See Also:</span> <a href="#BABBCHID">"About Collection Naming"</a></p>
</td>
</tr>
<tr class="cellalignment719">
<td class="cellalignment727" id="r3c1-t13" headers="r1c1-t13">
<p><code>p_seq</code></p>
</td>
<td class="cellalignment727" headers="r3c1-t13 r1c2-t13">
<p>Identifies the sequence number of the member to be merged.</p>
</td>
</tr>
<tr class="cellalignment719">
<td class="cellalignment727" id="r4c1-t13" headers="r1c1-t13">
<p><code>p_c001</code></p>
</td>
<td class="cellalignment727" headers="r4c1-t13 r1c2-t13">
<p>Array of first attribute values to be merged. Maximum length is 4,000 characters. If the maximum length is greater, it will be truncated to 4,000 characters.</p>
<p>The count of elements in the P_C001 PL/SQL table is used as the total number of items across all PL/SQL tables. For example, if P_C001.count = 2 and P_C002.count = 10, only 2 members will be merged. Note that if P_C001 is null, an application error will be raised.</p>
</td>
</tr>
<tr class="cellalignment719">
<td class="cellalignment727" id="r5c1-t13" headers="r1c1-t13">
<p><code>p_c0xx</code></p>
</td>
<td class="cellalignment727" headers="r5c1-t13 r1c2-t13">
<p>Attribute of <code>XX</code> attributes values to be merged. Maximum length is 4,000 characters. If the maximum length is greater, it will be truncated to 4,000 characters.</p>
</td>
</tr>
<tr class="cellalignment719">
<td class="cellalignment727" id="r6c1-t13" headers="r1c1-t13">
<p><code>p_null_index</code></p>
</td>
<td class="cellalignment727" headers="r6c1-t13 r1c2-t13">
<p>Use this argument to identify rows the merge function should ignore. This argument identifies an row as null. Null rows are automatically removed from the collection.</p>
</td>
</tr>
<tr class="cellalignment719">
<td class="cellalignment727" id="r7c1-t13" headers="r1c1-t13">
<p><code>p_null_value</code></p>
</td>
<td class="cellalignment727" headers="r7c1-t13 r1c2-t13">
<p>Use this argument with the <code>p_null_index</code>. Identifies the null value. If used this value cannot be null. A typical value for this argument is 0.</p>
</td>
</tr>
<tr class="cellalignment719">
<td class="cellalignment727" id="r8c1-t13" headers="r1c1-t13">
<p><code>p_init_query</code></p>
</td>
<td class="cellalignment727" headers="r8c1-t13 r1c2-t13">
<p>Use the query defined by this argument to create a collection if the collection does not exist.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="sect2" -->
<a id="BABBFIAA"></a>
<div id="HTMDB25872" class="sect2"><!-- infolevel="all" infotype="General" -->
<h2 class="sect2">Managing <a id="sthref2099"></a>Collections</h2>
<p>You can use the following utilities to manage collections.</p>
<p>Topics in this section include:</p>
<ul>
<li>
<p><a href="#CHDBCGAA">Obtaining a Member Count</a></p>
</li>
<li>
<p><a href="#CHDBGHCD">Resequencing a Collection</a></p>
</li>
<li>
<p><a href="#CHDDHCIF">Verifying Whether a Collection Exists</a></p>
</li>
<li>
<p><a href="#CHDDADFF">Adjusting a Member Sequence ID</a></p>
</li>
<li>
<p><a href="#CHDFFJCE">Sorting Collection Members</a></p>
</li>
</ul>
<a id="CHDBCGAA"></a>
<div id="HTMDB25873" class="sect3"><!-- infolevel="all" infotype="General" -->
<h3 class="sect3">Obtaining a Member Count</h3>
<p>Use <code>COLLECTION_MEMBER_COUNT</code> to return the total count of all members in a collection. Note that this count does not indicate the highest sequence in the collection, for example:</p>
<pre>
l_count := <a id="sthref2100"></a>APEX_COLLECTION.COLLECTION_MEMBER_COUNT (
  p_collection_name =&gt; collection name );
</pre></div>
<!-- class="sect3" -->
<a id="CHDBGHCD"></a>
<div id="HTMDB25874" class="sect3"><!-- infolevel="all" infotype="General" -->
<h3 class="sect3">Resequencing a Collection</h3>
<p>Use <code>RESEQUENCE_COLLECTION</code> to resequence a collection to remove any gaps in sequence IDs while maintaining the same element order, for example:</p>
<pre>
<a id="sthref2101"></a>APEX_COLLECTION.RESEQUENCE_COLLECTION (
   p_collection_name =&gt; collection name )
   
</pre></div>
<!-- class="sect3" -->
<a id="CHDDHCIF"></a>
<div id="HTMDB25875" class="sect3"><!-- infolevel="all" infotype="General" -->
<h3 class="sect3">Verifying Whether a Collection Exists</h3>
<p>Use <code>COLLECTION_EXISTS</code> to determine if a collection exists, for example:</p>
<pre>
l_exists := <a id="sthref2102"></a>APEX_COLLECTION.COLLECTION_EXISTS  (
  p_collection_name =&gt; collection name );
</pre></div>
<!-- class="sect3" -->
<a id="CHDDADFF"></a>
<div id="HTMDB25876" class="sect3"><!-- infolevel="all" infotype="General" -->
<h3 class="sect3">Adjusting a Member Sequence ID</h3>
<p>You can adjust the sequence ID of a specific member within a collection by moving the ID up or down. When you adjust a sequence ID, the specified ID is exchanged with another ID. For example, if you were to move the ID 2 up, 2 becomes 3, and 3 would become 2.</p>
<p>Use <code>MOVE_MEMBER_UP</code> to adjust a member sequence ID up by one. Alternately, use <code>MOVE_MEMBER_DOWN</code> to adjust a member sequence ID down by one, for example:</p>
<pre>
<a id="sthref2103"></a>APEX_COLLECTION.MOVE_MEMBER_DOWN(
    p_collection_name =&gt; collection name,
    p_seq             =&gt; member sequence number);
</pre>
<p>Note that while using either of these methods an application error displays:</p>
<ul>
<li>
<p>If the named collection does not exist for the current user in the current session</p>
</li>
<li>
<p>If the member specified by the <code>p_seq</code> sequence ID does not exist</p>
</li>
</ul>
<p>However, an application error will not be returned if the specified member has the highest or lowest sequence ID in the collection (depending on if you are calling <code>MOVE_MEMBER_UP</code> or <code>MOVE_MEMBER_DOWN</code>).</p>
</div>
<!-- class="sect3" -->
<a id="CHDFFJCE"></a>
<div id="HTMDB25877" class="sect3"><!-- infolevel="all" infotype="General" -->
<h3 class="sect3">Sorting Collection Members</h3>
<p>Use the <code>SORT_MEMBERS</code> method to reorder members of a collection by the column number. This method sorts the collection by a particular column number and also reassigns the sequence IDs for each member to remove gaps, for example:</p>
<pre>
<a id="sthref2104"></a>APEX_COLLECTION.SORT_MEMBERS(
    p_collection_name       =&gt; collection name,
    p_sort_on_column_number =&gt; column number to sort by);
</pre></div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="BABHBFJA"></a>
<div id="HTMDB25878" class="sect2"><!-- infolevel="all" infotype="General" -->
<h2 class="sect2">Clearing Collection <a id="sthref2105"></a>Session State</h2>
<p>Clearing the session state of a collection removes the collection members. A shopping cart is a good example of when you might need to clear collection session state. When a user requests to empty the shopping cart and start again, you must clear the session state for a collection. You can remove session state of a collection by calling the <code>TRUNCATE_COLLECTION</code> method or by using <code>f?p</code> syntax.</p>
<p>Calling the <code>TRUNCATE_COLLECTION</code> method deletes the existing collection and then re-creates it, for example:</p>
<pre>
<a id="sthref2106"></a>APEX_COLLECTION.TRUNCATE_COLLECTION(
    p_collection_name =&gt; collection name);
</pre>
<p>You can also use the sixth <code>f?p</code> syntax argument to clear session state, for example:</p>
<pre>
f?p=App:Page:Session::NO:collection name
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="concept_url.htm#BEIFCDGF">"Understanding URL Syntax"</a></div>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment718">
<tr>
<td class="cellalignment727">
<table class="cellalignment723">
<tr>
<td class="cellalignment722"><a href="aadm_email.htm"><img width="24" height="24" src="../../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment722"><a href="advnc_act_log.htm"><img width="24" height="24" src="../../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;2003, 2013,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment729">
<table class="cellalignment721">
<tr>
<td class="cellalignment722"><a href="../../index.htm"><img width="24" height="24" src="../../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment722"><a href="../../nav/portal_booklist.htm"><img width="24" height="24" src="../../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment722"><a href="toc.htm"><img width="24" height="24" src="../../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment722"><a href="index.htm"><img width="24" height="24" src="../../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment722"><a href="../../nav/mindx.htm"><img width="24" height="24" src="../../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment722"><a href="../../dcommon/html/feedback.htm"><img width="24" height="24" src="../../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>
</body>
</html>
