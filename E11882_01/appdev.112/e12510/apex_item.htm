<!DOCTYPE html>
<html lang="en" >
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1">
<meta charset="utf-8">
<title>APEX_ITEM</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Version 5.1.2 Build 736" />
<meta name="dcterms.created" content="2013-08-06T16:48:13Z" />
<meta name="robots" content="all" />
<meta name="dcterms.title" content="Application Express API Reference" />
<meta name="dcterms.identifier" content="E12510-02" />
<meta name="dcterms.isVersionOf" content="AEAPI" />
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;2003, 2013,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved." />
<link rel="Start" href="../../index.htm" title="Home" type="text/html" />
<link rel="Copyright" href="../../dcommon/html/cpyr.htm" title="Copyright" type="text/html" />

<script type="application/javascript"  src="../../dcommon/js/headfoot.js"></script>
<script type="application/javascript"  src="../../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html" />
<link rel="Prev" href="apex_mail.htm" title="Previous" type="text/html" />
<link rel="Next" href="apex_app.htm" title="Next" type="text/html" />
<link rel="alternate" href="../e12510.pdf" title="PDF version" type="application/pdf" />
<link rel="schema.dcterms" href="http://purl.org/dc/terms/" />
<link rel="stylesheet" href="../../dcommon/css/fusiondoc.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/header.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/footer.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/fonts.css">
<link rel="stylesheet" href="../../dcommon/css/foundation.css">
<link rel="stylesheet" href="../../dcommon/css/codemirror.css">
<link rel="stylesheet" type="text/css" title="Default" href="../../nav/css/html5.css">
<link rel="stylesheet" href="../../dcommon/css/respond-480-tablet.css">
<link rel="stylesheet" href="../../dcommon/css/respond-768-laptop.css">
<link rel="stylesheet" href="../../dcommon/css/respond-1140-deskop.css">
<script type="application/javascript" src="../../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">6/14</span> <!-- End Header -->
<div id="AEAPI192" class="chapter"><a id="CACEEEJE"></a>
<h1 class="chapter"><span class="secnum">3</span> APEX_ITEM</h1>
<p>You can use the <code>APEX_ITEM</code> package to create form elements dynamically based on a SQL query instead of creating individual items page by page.</p>
<p>This section contains the following topics:</p>
<ul>
<li>
<p><a href="#CHDDCHAF">CHECKBOX Function</a></p>
</li>
<li>
<p><a href="#CHDFDDEI">DATE_POPUP Function</a></p>
</li>
<li>
<p><a href="#CHDFCFAG">DISPLAY_AND_SAVE Function</a></p>
</li>
<li>
<p><a href="#CHDBFHGA">HIDDEN Function</a></p>
</li>
<li>
<p><a href="#CHDHHGIG">MD5_CHECKSUM Function</a></p>
</li>
<li>
<p><a href="#CHDHJDBE">MD5_HIDDEN Function</a></p>
</li>
<li>
<p><a href="#CHDIJCBD">POPUP_FROM_LOV Function</a></p>
</li>
<li>
<p><a href="#CHDEBCCI">POPUP_FROM_QUERY Function</a></p>
</li>
<li>
<p><a href="#CHDHJICI">POPUPKEY_FROM_LOV Function</a></p>
</li>
<li>
<p><a href="#CHDEHBAC">POPUPKEY_FROM_QUERY Function</a></p>
</li>
<li>
<p><a href="#CHDGCJCG">RADIOGROUP Function</a></p>
</li>
<li>
<p><a href="#CHDHJJAB">SELECT_LIST Function</a></p>
</li>
<li>
<p><a href="#CHDFGAEC">SELECT_LIST_FROM_LOV Function</a></p>
</li>
<li>
<p><a href="#CHDCAEAB">SELECT_LIST_FROM_LOV_XL Function</a></p>
</li>
<li>
<p><a href="#CHDIDGDA">SELECT_LIST_FROM_QUERY Function</a></p>
</li>
<li>
<p><a href="#CHDGBFBE">SELECT_LIST_FROM_QUERY_XL Function</a></p>
</li>
<li>
<p><a href="#CHDCDHJI">TEXT Function</a></p>
</li>
<li>
<p><a href="#CHDJJFGG">TEXTAREA Function</a></p>
</li>
<li>
<p><a href="#CHDEBBHH">TEXT_FROM_LOV Function</a></p>
</li>
<li>
<p><a href="#CHDJBFFI">TEXT_FROM_LOV_QUERY Function</a></p>
</li>
</ul>
<div class="refentry"><a id="CHDDCHAF"></a>
<hr />
<div id="AEAPI193" class="refsect1">
<h2 class="refsect1">CHECKBOX Function</h2>
<p>This function creates check boxes.</p>
<p class="subhead2"><a id="AEAPI739"></a>Syntax</p>
<pre>
APEX_ITEM.CHECKBOX(
    p_idx                       IN    NUMBER,
    p_value                     IN    VARCHAR2 DEFAULT NULL,
    p_attributes                IN    VARCHAR2 DEFAULT NULL,
    p_checked_values            IN    VARCHAR2 DEFAULT NULL,
    p_checked_values_delimitor  IN    VARCHAR2 DEFAULT ':',
    p_item_id                   IN    VARCHAR2 DEFAULT NULL,
    p_item_label                IN    VARCHAR2 DEFAULT NULL)
    RETURN VARCHAR2;
</pre>
<p class="subhead2"><a id="AEAPI740"></a>Parameters</p>
<p><a href="#CHDBHBBJ">Table 3-1</a> describes the parameters available in the <code>CHECKBOX</code> function.</p>
<div id="AEAPI741" class="tblformal">
<p class="titleintable"><a id="sthref94"></a><a id="CHDBHBBJ"></a>Table 3-1 CHECKBOX Parameters</p>
<table class="cellalignment965" title="CHECKBOX Parameters" summary="This table describes the parameters available in CHECKBOX." dir="ltr">
<thead>
<tr class="cellalignment959">
<th class="cellalignment966" id="r1c1-t2">Parameter</th>
<th class="cellalignment966" id="r1c2-t2">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment959">
<td class="cellalignment967" id="r2c1-t2" headers="r1c1-t2">
<p><code>p_idx</code></p>
</td>
<td class="cellalignment967" headers="r2c1-t2 r1c2-t2">
<p>Number that determines which <code>APEX_APPLICATION</code> global variable will be used. Valid range of values is 1 to 50. For example 1 creates <code>F01</code> and 2 creates <code>F02</code></p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r3c1-t2" headers="r1c1-t2">
<p><code>p_value</code></p>
</td>
<td class="cellalignment967" headers="r3c1-t2 r1c2-t2">
<p>Value of a check box, hidden field, or input form item</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r4c1-t2" headers="r1c1-t2">
<p><code>p_attributes</code></p>
</td>
<td class="cellalignment967" headers="r4c1-t2 r1c2-t2">
<p>Controls HTML tag attributes (such as disabled)</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r5c1-t2" headers="r1c1-t2">
<p><code>p_checked_values</code></p>
</td>
<td class="cellalignment967" headers="r5c1-t2 r1c2-t2">
<p>Values to be checked by default</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r6c1-t2" headers="r1c1-t2">
<p><code>p_checked_values_delimitor</code></p>
</td>
<td class="cellalignment967" headers="r6c1-t2 r1c2-t2">
<p>Delimits the values in the previous parameter, <code>p_checked_values</code></p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r7c1-t2" headers="r1c1-t2">
<p><code>p_item_id</code></p>
</td>
<td class="cellalignment967" headers="r7c1-t2 r1c2-t2">
<p>HTML attribute ID for the <code>&lt;input&gt;</code> tag</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r8c1-t2" headers="r1c1-t2">
<p><code>p_item_label</code></p>
</td>
<td class="cellalignment967" headers="r8c1-t2 r1c2-t2">
<p>Invisible label created for the item</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI742"></a>Examples of Default Check Box Behavior</p>
<p>The following example demonstrates how to create a selected check box for each employee in the <code>emp</code> table.</p>
<pre>
SELECT APEX_ITEM.CHECKBOX(1,empno,'CHECKED') "Select",
    ename, job
FROM   emp
ORDER BY 1
</pre>
<p>The following example demonstrates how to have all check boxes for employees display without being selected.</p>
<pre>
SELECT APEX_ITEM.CHECKBOX(1,empno) "Select",
    ename, job
FROM   emp
ORDER BY 1
</pre>
<p>The following example demonstrates how to select the check boxes for employees who work in department 10.</p>
<pre>
SELECT APEX_ITEM.CHECKBOX(1,empno,DECODE(deptno,10,'CHECKED',NULL)) "Select",
    ename, job
FROM   emp
ORDER BY 1
</pre>
<p>The next example demonstrates how to select the check boxes for employees who work in department 10 or department 20.</p>
<pre>
SELECT APEX_ITEM.CHECKBOX(1,deptno,NULL,'10:20',':') "Select",
    ename, job
FROM   emp
ORDER BY 1
</pre>
<p class="subhead2"><a id="AEAPI743"></a>Creating an On-Submit Process</p>
<p>If you are using check boxes in your application, you might need to create an On Submit process to perform a specific type of action on the selected rows. For example, you could have a Delete button that utilizes the following logic:</p>
<pre>
SELECT APEX_ITEM.CHECKBOX(1,empno) "Select",
    ename, job
FROM   emp
ORDER  by 1
</pre>
<p>Consider the following sample on-submit process:</p>
<pre>
FOR I in 1..APEX_APPLICATION.G_F01.COUNT LOOP
    DELETE FROM emp WHERE empno = to_number(APEX_APPLICATION.G_F01(i));
END LOOP;
</pre>
<p>The following example demonstrates how to create unselected checkboxes for each employee in the emp table, with a unique ID. This is useful for referencing records from within JavaScript code:</p>
<pre>
SELECT APEX_ITEM.CHECKBOX(1,empno,NULL,NULL,NULL,'f01_#ROWNUM#') "Select",
    ename, job
FROM   emp
ORDER BY 1
</pre></div>
<!-- class="refsect1" -->
<a id="CHDFDDEI"></a>
<hr />
<div id="AEAPI194" class="refsect1">
<h2 class="refsect1">DATE_POPUP Function</h2>
<p>Use this function with forms that include date fields. The <code>DATE_POPUP</code> function dynamically generates a date field that has a popup calendar button.</p>
<p class="subhead2"><a id="AEAPI744"></a>Syntax</p>
<pre>
APEX_ITEM.DATE_POPUP(
    p_idx                       IN    NUMBER,
    p_row                       IN    NUMBER,
    p_value                     IN    VARCHAR2 DEFAULT NULL,
    p_date_format               IN    DATE DEFAULT 'DD-MON-YYYY',
    p_size                      IN    NUMBER DEFAULT 20,
    p_maxlength                 IN    NUMBER DEFAULT 2000,
    p_attributes                IN    VARCHAR2 DEFAULT NULL,
    p_item_id                   IN    VARCHAR2 DEFAULT NULL,
    p_item_label                IN    VARCHAR2 DEFAULT NULL)
    RETURN VARCHAR2;
</pre>
<p class="subhead2"><a id="AEAPI745"></a>Parameters</p>
<p><a href="#CHDEHIBC">Table 3-2</a> describes the parameters available in the <code>DATE_POPUP</code> function.</p>
<div id="AEAPI746" class="tblformal">
<p class="titleintable"><a id="sthref95"></a><a id="CHDEHIBC"></a>Table 3-2 DATE_POPUP Parameters</p>
<table class="cellalignment965" title="DATE_POPUP Parameters" summary="This table describes the parameters available in DATE_POPUP." dir="ltr">
<thead>
<tr class="cellalignment959">
<th class="cellalignment966" id="r1c1-t3">Parameter</th>
<th class="cellalignment966" id="r1c2-t3">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment959">
<td class="cellalignment967" id="r2c1-t3" headers="r1c1-t3">
<p><code>p_idx</code></p>
</td>
<td class="cellalignment967" headers="r2c1-t3 r1c2-t3">
<p>Number that determines which <code>APEX_APPLICATION</code> global variable will be used.Valid range of values is 1 to 50. For example, 1 creates <code>F01</code> and 2 creates <code>F02</code></p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r3c1-t3" headers="r1c1-t3">
<p><code>p_row</code></p>
</td>
<td class="cellalignment967" headers="r3c1-t3 r1c2-t3">
<p>This parameter is deprecated. Anything specified for this value will be ignored</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r4c1-t3" headers="r1c1-t3">
<p><code>p_value</code></p>
</td>
<td class="cellalignment967" headers="r4c1-t3 r1c2-t3">
<p>Value of a field item</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r5c1-t3" headers="r1c1-t3">
<p><code>p_date_format</code></p>
</td>
<td class="cellalignment967" headers="r5c1-t3 r1c2-t3">
<p>Valid database date format</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r6c1-t3" headers="r1c1-t3">
<p><code>p_size</code></p>
</td>
<td class="cellalignment967" headers="r6c1-t3 r1c2-t3">
<p>Controls HTML tag attributes (such as disabled)</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r7c1-t3" headers="r1c1-t3">
<p><code>p_maxlength</code></p>
</td>
<td class="cellalignment967" headers="r7c1-t3 r1c2-t3">
<p>Determines the maximum number of enterable characters. Becomes the maxlength attribute of the <code>&lt;input&gt;</code> HTML tag</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r8c1-t3" headers="r1c1-t3">
<p><code>p_attributes</code></p>
</td>
<td class="cellalignment967" headers="r8c1-t3 r1c2-t3">
<p>Extra HTML parameters you want to add</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r9c1-t3" headers="r1c1-t3">
<p><code>p_item_id</code></p>
</td>
<td class="cellalignment967" headers="r9c1-t3 r1c2-t3">
<p>HTML attribute ID for the <code>&lt;input&gt;</code> tag</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r10c1-t3" headers="r1c1-t3">
<p><code>p_item_label</code></p>
</td>
<td class="cellalignment967" headers="r10c1-t3 r1c2-t3">
<p>Invisible label created for the item</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink SQLRF" href="../../server.112/e41084/toc.htm"><span class="italic">Oracle Database SQL Language Reference</span></a> for information about the <code>TO_CHAR</code> or <code>TO_DATE</code> functions</div>
<p class="subhead2"><a id="AEAPI747"></a>Example</p>
<p>The following example demonstrates how to use <code>APEX_ITEM.DATE_POPUP</code> to create popup calendar buttons for the <code>hiredate</code> column.</p>
<pre>
SELECT 
    empno, 
    APEX_ITEM.HIDDEN(1,empno)||
    APEX_ITEM.TEXT(2,ename) ename, 
    APEX_ITEM.TEXT(3,job) job, 
    mgr, 
    APEX_ITEM.DATE_POPUP(4,rownum,hiredate,'dd-mon-yyyy') hd,
    APEX_ITEM.TEXT(5,sal) sal, 
    APEX_ITEM.TEXT(6,comm) comm,
    deptno
FROM emp
ORDER BY 1
</pre></div>
<!-- class="refsect1" -->
<a id="CHDFCFAG"></a>
<hr />
<div id="AEAPI195" class="refsect1">
<h2 class="refsect1">DISPLAY_AND_SAVE Function</h2>
<p>Use this function to display an item as text, but save its value to session state.</p>
<p class="subhead2"><a id="AEAPI748"></a>Syntax</p>
<pre>
APEX_ITEM.DISPLAY_AND_SAVE(
    p_idx         IN    NUMBER,
    p_value       IN    VARCHAR2 DEFAULT NULL,
    p_item_id     IN    VARCHAR2 DEFAULT NULL,
    p_item_label  IN    VARCHAR2 DEFAULT NULL)
    RETURN VARCHAR2;
</pre>
<p class="subhead2"><a id="AEAPI749"></a>Parameters</p>
<p><a href="#CHDFBJEH">Table 3-3</a> describes the parameters available in the <code>DISPLAY_AND_SAVE</code> function.</p>
<div id="AEAPI750" class="tblformal">
<p class="titleintable"><a id="sthref96"></a><a id="CHDFBJEH"></a>Table 3-3 DISPLAY_AND_SAVE Parameters</p>
<table class="cellalignment965" title="DISPLAY_AND_SAVE Parameters" summary="This table describes the parameters available in DISPLAY_AND_SAVE." dir="ltr">
<thead>
<tr class="cellalignment959">
<th class="cellalignment966" id="r1c1-t5">Parameter</th>
<th class="cellalignment966" id="r1c2-t5">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment959">
<td class="cellalignment967" id="r2c1-t5" headers="r1c1-t5">
<p><code>p_idx</code></p>
</td>
<td class="cellalignment967" headers="r2c1-t5 r1c2-t5">
<p>Number that determines which <code>APEX_APPLICATION</code> global variable will be used.Valid range of values is 1 to 50. For example, 1 creates <code>F01</code> and 2 creates <code>F02</code></p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r3c1-t5" headers="r1c1-t5">
<p><code>p_value</code></p>
</td>
<td class="cellalignment967" headers="r3c1-t5 r1c2-t5">
<p>Current value</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r4c1-t5" headers="r1c1-t5">
<p><code>p_item_id</code></p>
</td>
<td class="cellalignment967" headers="r4c1-t5 r1c2-t5">
<p>HTML attribute ID for the <code>&lt;span&gt;</code> tag</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r5c1-t5" headers="r1c1-t5">
<p><code>p_item_label</code></p>
</td>
<td class="cellalignment967" headers="r5c1-t5 r1c2-t5">
<p>Invisible label created for the item</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI751"></a>Example</p>
<p>The following example demonstrates how to use the <code>APEX_ITEM.DISPLAY_AND_SAVE</code> function.</p>
<pre>
SELECT APEX_ITEM.DISPLAY_AND_SAVE(10,empno) c FROM emp
</pre></div>
<!-- class="refsect1" -->
<a id="CHDBFHGA"></a>
<hr />
<div id="AEAPI196" class="refsect1">
<h2 class="refsect1">HIDDEN Function</h2>
<p>This function dynamically generates hidden form items.</p>
<p class="subhead2"><a id="AEAPI752"></a>Syntax</p>
<pre>
APEX_ITEM.HIDDEN(
    p_idx         IN    NUMBER,
    p_value       IN    VARCHAR2 DEFAULT
    p_attributes  IN    VARCHAR2 DEFAULT NULL,
    p_item_id     IN    VARCHAR2 DEFAULT NULL,
    p_item_label  IN    VARCHAR2 DEFAULT NULL
) RETURN VARCHAR2;
</pre>
<p class="subhead2"><a id="AEAPI753"></a>Parameters</p>
<p><a href="#CHDHFHHI">Table 3-4</a> describes the parameters available in the <code>HIDDEN</code> function.</p>
<div id="AEAPI754" class="tblformal">
<p class="titleintable"><a id="sthref97"></a><a id="CHDHFHHI"></a>Table 3-4 HIDDEN Parameters</p>
<table class="cellalignment965" title="HIDDEN Parameters" summary="This table describes the parameters available in HIDDEN." dir="ltr">
<thead>
<tr class="cellalignment959">
<th class="cellalignment966" id="r1c1-t6">Parameter</th>
<th class="cellalignment966" id="r1c2-t6">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment959">
<td class="cellalignment967" id="r2c1-t6" headers="r1c1-t6">
<p><code>p_idx</code></p>
</td>
<td class="cellalignment967" headers="r2c1-t6 r1c2-t6">
<p>Number to identify the item you want to generate. The number will determine which <code>G_FXX</code> global is populated</p>
<p><span class="bold">See Also:</span> <a href="apex_app.htm#CHDDADIE">"APEX_APPLICATION"</a></p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r3c1-t6" headers="r1c1-t6">
<p><code>p_value</code></p>
</td>
<td class="cellalignment967" headers="r3c1-t6 r1c2-t6">
<p>Value of the hidden input form item</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r4c1-t6" headers="r1c1-t6">
<p><code>p_attributes</code></p>
</td>
<td class="cellalignment967" headers="r4c1-t6 r1c2-t6">
<p>Extra HTML parameters you want to add</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r5c1-t6" headers="r1c1-t6">
<p><code>p_item_id</code></p>
</td>
<td class="cellalignment967" headers="r5c1-t6 r1c2-t6">
<p>HTML attribute ID for the <code>&lt;input&gt;</code> tag</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r6c1-t6" headers="r1c1-t6">
<p><code>p_item_label</code></p>
</td>
<td class="cellalignment967" headers="r6c1-t6 r1c2-t6">
<p>Invisible label created for the item</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI755"></a>Example</p>
<p>Typically, the primary key of a table is stored as a hidden column and used for subsequent update processing, for example:</p>
<pre>
SELECT
    empno, 
    APEX_ITEM.HIDDEN(1,empno)||
    APEX_ITEM.TEXT(2,ename) ename,
    APEX_ITEM.TEXT(3,job) job, 
    mgr, 
    APEX_ITEM.DATE_POPUP(4,rownum,hiredate,'dd-mon-yyyy') hiredate,
    APEX_ITEM.TEXT(5,sal) sal, 
    APEX_ITEM.TEXT(6,comm) comm, 
    deptno
FROM emp
ORDER BY 1
</pre>
<p>The previous query could use the following page process to process the results:</p>
<pre>
BEGIN 
    FOR i IN 1..APEX_APPLICATION.G_F01.COUNT LOOP
        UPDATE emp
            SET
                ename=APEX_APPLICATION.G_F02(i),
                job=APEX_APPLICATION.G_F03(i),
                    hiredate=to_date(APEX_APPLICATION.G_F04(i),'dd-mon-yyyy'),
                    sal=APEX_APPLICATION.G_F05(i),
                    comm=APEX_APPLICATION.G_F06(i)
        WHERE empno=to_number(APEX_APPLICATION.G_F01(i));
    END LOOP;
END;
</pre>
<p>Note that the <code>G_F01</code> column (which corresponds to the hidden <code>EMPNO</code>) is used as the key to update each row.</p>
</div>
<!-- class="refsect1" -->
<a id="CHDHHGIG"></a>
<hr />
<div id="AEAPI197" class="refsect1">
<h2 class="refsect1">MD5_CHECKSUM Function</h2>
<p>This function is used for lost update detection. Lost update detection ensures data integrity in applications where data can be accessed concurrently.</p>
<p>This function produces hidden form field(s) with a name attribute equal to 'fcs' and includes 50 inputs. APEX_ITEM.MD5_CHECKSUM also produces an MD5 checksum using the Oracle database DBMS_OBFUSCATION_TOOLKIT:</p>
<pre>
UTL_RAW.CAST_TO_RAW(DBMS_OBFUSCATION_TOOLKIT.MD5())
</pre>
<p>An MD5 checksum provides data integrity through hashing and sequencing to ensure that data is not altered or stolen as it is transmitted over a network.</p>
<p class="subhead2"><a id="AEAPI756"></a>Syntax</p>
<pre>
APEX_ITEM.MD5_CHECKSUM(
    p_value01   IN    VARCHAR2 DEFAULT NULL,
    p_value02   IN    VARCHAR2 DEFAULT NULL,
    p_value03   IN    VARCHAR2 DEFAULT NULL,
    ...
    p_value50   IN    VARCHAR2 DEFAULT NULL,
    p_col_sep   IN    VARCHAR2 DEFAULT '|')
    RETURN VARCHAR2;
</pre>
<p class="subhead2"><a id="AEAPI757"></a>Parameters</p>
<p><a href="#BABBAICB">Table 3-5</a> describes the parameters available in the <code>MD5_CHECKSUM</code> function.</p>
<div id="AEAPI758" class="tblformal">
<p class="titleintable"><a id="sthref98"></a><a id="BABBAICB"></a>Table 3-5 MD5_CHECKSUM Parameters</p>
<table class="cellalignment965" title="MD5_CHECKSUM Parameters" summary="This table describes the parameters available in MD5_CHECKSUM." dir="ltr">
<thead>
<tr class="cellalignment959">
<th class="cellalignment966" id="r1c1-t7">Parameter</th>
<th class="cellalignment966" id="r1c2-t7">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment959">
<td class="cellalignment967" id="r2c1-t7" headers="r1c1-t7">
<p><code>p_value01</code></p>
<p>...</p>
<p><code>p_value50</code></p>
</td>
<td class="cellalignment967" headers="r2c1-t7 r1c2-t7">
<p>Fifty available inputs. If no parameters are supplied, the default to NULL</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r3c1-t7" headers="r1c1-t7">
<p><code>p_col_sep</code></p>
</td>
<td class="cellalignment967" headers="r3c1-t7 r1c2-t7">
<p>String used to separate <code>p_value</code> inputs. Defaults to the pipe symbol (|)</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI759"></a>Example</p>
<p>This function generates hidden form elements with the name '<code>fcs</code>'. The values can subsequently be accessed via the <code>APEX_APPLICATION.G_FCS array</code>.</p>
<pre>
SELECT APEX_ITEM.MD5_CHECKSUM(ename,job,sal) md5_cks,
       ename, job, sal
FROM emp
</pre></div>
<!-- class="refsect1" -->
<a id="CHDHJDBE"></a>
<hr />
<div id="AEAPI198" class="refsect1">
<h2 class="refsect1">MD5_HIDDEN Function</h2>
<p>This function is used for lost update detection. Lost update detection ensures data integrity in applications where data can be accessed concurrently.</p>
<p>This function produces a hidden form field and includes 50 inputs. <code>APEX_ITEM</code>.<code>MD5_HIDDEN</code> also produces an MD5 checksum using the Oracle database <code>DBMS_OBFUSCATION_TOOLKIT</code>:</p>
<pre>
UTL_RAW.CAST_TO_RAW(DBMS_OBFUSCATION_TOOLKIT.MD5())
</pre>
<p>An MD5 checksum provides data integrity through hashing and sequencing to ensure that data is not altered or stolen as it is transmitted over a network</p>
<p class="subhead2"><a id="AEAPI760"></a>Syntax</p>
<pre>
APEX_ITEM.MD5_HIDDEN(
    p_idx       IN    NUMBER,
    p_value01   IN    VARCHAR2 DEFAULT NULL,
    p_value02   IN    VARCHAR2 DEFAULT NULL,
    p_value03   IN    VARCHAR2 DEFAULT NULL,
    ...
    p_value50   IN    VARCHAR2 DEFAULT NULL,
    p_col_sep   IN    VARCHAR2 DEFAULT '|')
    RETURN VARCHAR2;
</pre>
<p class="subhead2"><a id="AEAPI761"></a>Parameters</p>
<p><a href="#CHDBFDEB">Table 3-6</a> describes the parameters available in the <code>MD5_HIDDEN</code> function.</p>
<div id="AEAPI762" class="tblformal">
<p class="titleintable"><a id="sthref99"></a><a id="CHDBFDEB"></a>Table 3-6 MD5_HIDDEN Parameters</p>
<table class="cellalignment965" title="MD5_HIDDEN Parameters" summary="This table describes the parameters available in MD5_HIDDEN." dir="ltr">
<thead>
<tr class="cellalignment959">
<th class="cellalignment966" id="r1c1-t8">Parameter</th>
<th class="cellalignment966" id="r1c2-t8">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment959">
<td class="cellalignment967" id="r2c1-t8" headers="r1c1-t8">
<p><code>p_idx</code></p>
</td>
<td class="cellalignment967" headers="r2c1-t8 r1c2-t8">
<p>Indicates the form element to be generated. For example, 1 equals <code>F01</code> and 2 equals <code>F02</code>. Typically the <code>p_idx</code> parameter is constant for a given column</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r3c1-t8" headers="r1c1-t8">
<p><code>p_value</code><code>01</code></p>
<p>...</p>
<p><code>p_value</code><code>50</code></p>
</td>
<td class="cellalignment967" headers="r3c1-t8 r1c2-t8">
<p>Fifty available inputs. Parameters not supplied default to NULL</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r4c1-t8" headers="r1c1-t8">
<p><code>p_col_sep</code></p>
</td>
<td class="cellalignment967" headers="r4c1-t8 r1c2-t8">
<p>String used to separate <code>p_value</code> inputs. Defaults to the pipe symbol (|)</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI763"></a>Example</p>
<p>The <code>p_idx</code> parameter specifies the FXX form element to be generated. In the following example, 7 generates <code>F07</code>. Also note that an HTML hidden form element will be generated.</p>
<pre>
SELECT APEX_ITEM.MD5_HIDDEN(7,ename,job,sal)md5_h, ename, job, sal 
FROM emp
</pre></div>
<!-- class="refsect1" -->
<a id="CHDIJCBD"></a>
<hr />
<div id="AEAPI200" class="refsect1">
<h2 class="refsect1">POPUP_FROM_LOV Function</h2>
<p>This function generates an HTML popup select list from an application shared list of values (LOV). Like other available functions in the <code>APEX_ITEM</code> package, <code>POPUP_FROM_LOV</code> function is designed to generate forms with <code>F01</code> to <code>F50</code> form array elements.</p>
<p class="subhead2"><a id="AEAPI764"></a>Syntax</p>
<pre>
APEX_ITEM.POPUP_FROM_LOV(
    p_idx              IN    NUMBER,
    p_value            IN    VARCHAR2 DEFAULT NULL,
    p_lov_name         IN    VARCHAR2,
    p_width            IN    VARCHAR2 DEFAULT NULL,
    p_max_length       IN    VARCHAR2 DEFAULT NULL,
    p_form_index       IN    VARCHAR2 DEFAULT '0',
    p_escape_html      IN    VARCHAR2 DEFAULT NULL,
    p_max_elements     IN    VARCHAR2 DEFAULT NULL,
    p_attributes       IN    VARCHAR2 DEFAULT NULL,
    p_ok_to_query      IN    VARCHAR2 DEFAULT 'YES',
    p_item_id          IN    VARCHAR2 DEFAULT NULL,
    p_item_label       IN    VARCHAR2 DEFAULT NULL)
    RETURN VARCHAR2;
</pre>
<p class="subhead2"><a id="AEAPI765"></a>Parameters</p>
<p><a href="#CHDJGHEF">Table 3-7</a> describes the some parameters in the <code>POPUP_FROM_LOV</code> function.</p>
<div id="AEAPI766" class="tblformal">
<p class="titleintable"><a id="sthref100"></a><a id="CHDJGHEF"></a>Table 3-7 POPUP_FROM_LOV Parameters</p>
<table class="cellalignment965" title="POPUP_FROM_LOV Parameters" summary="This table describes the parameters available in POPUP_FROM_LOV." dir="ltr">
<thead>
<tr class="cellalignment959">
<th class="cellalignment966" id="r1c1-t9">Parameter</th>
<th class="cellalignment966" id="r1c2-t9">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment959">
<td class="cellalignment967" id="r2c1-t9" headers="r1c1-t9">
<p><code>p_idx</code></p>
</td>
<td class="cellalignment967" headers="r2c1-t9 r1c2-t9">
<p>Form element name. For example, <code>1</code> equals <code>F01</code> and <code>2</code> equals <code>F02</code>. Typically, <code>p_idx</code> is a constant for a given column</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r3c1-t9" headers="r1c1-t9">
<p><code>p_value</code></p>
</td>
<td class="cellalignment967" headers="r3c1-t9 r1c2-t9">
<p>Form element current value. This value should be one of the values in the <code>p_lov_name</code> parameter</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r4c1-t9" headers="r1c1-t9">
<p><code>p_lov_name</code></p>
</td>
<td class="cellalignment967" headers="r4c1-t9 r1c2-t9">
<p>Named LOV used for this popup</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r5c1-t9" headers="r1c1-t9">
<p><code>p_width</code></p>
</td>
<td class="cellalignment967" headers="r5c1-t9 r1c2-t9">
<p>Width of the text box</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r6c1-t9" headers="r1c1-t9">
<p><code>p_max_length</code></p>
</td>
<td class="cellalignment967" headers="r6c1-t9 r1c2-t9">
<p>Maximum number of characters that can be entered in the text box</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r7c1-t9" headers="r1c1-t9">
<p><code>p_form_index</code></p>
</td>
<td class="cellalignment967" headers="r7c1-t9 r1c2-t9">
<p>HTML form on the page in which an item is contained. Defaults to 0 and rarely used.</p>
<p>Only use this parameter when it is necessary to embed a custom form in your page template (such as a search field that posts to a different Web site). If this form comes before the <code>#FORM_OPEN#</code> substitution string, then its index is zero and the form opened automatically by Oracle Application Express must be referenced as form 1. This functionality supports the JavaScript used in the popup LOV that passes a value back to a form element.</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r8c1-t9" headers="r1c1-t9">
<p><code>p_escape_html</code></p>
</td>
<td class="cellalignment967" headers="r8c1-t9 r1c2-t9">
<p>Replacements for special characters that require an escaped equivalent:</p>
<ul>
<li>
<p><code>&amp;lt;</code> for <code>&lt;</code></p>
</li>
<li>
<p><code>&amp;gt;</code> for <code>&gt;</code></p>
</li>
<li>
<p><code>&amp;amp;</code> for <code>&amp;</code></p>
</li>
</ul>
<p>Range of values is <code>YES</code> and <code>NO</code>. If <code>YES</code>, special characters will be escaped. This parameter is useful if you know your query will return illegal HTML.</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r9c1-t9" headers="r1c1-t9">
<p><code>p_max_elements</code></p>
</td>
<td class="cellalignment967" headers="r9c1-t9 r1c2-t9">
<p>Limit on the number of rows that can be returned by your query. Limits the performance impact of user searches. By entering a value in this parameter, you force the user to search for a narrower set of results.</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r10c1-t9" headers="r1c1-t9">
<p><code>p_attributes</code></p>
</td>
<td class="cellalignment967" headers="r10c1-t9 r1c2-t9">
<p>Additional HTML attributes to use for the form item.</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r11c1-t9" headers="r1c1-t9">
<p><code>p_ok_to_query</code></p>
</td>
<td class="cellalignment967" headers="r11c1-t9 r1c2-t9">
<p>Range of values is <code>YES</code> and <code>NO</code>. If <code>YES</code>, a popup returns first set of rows for the LOV. If <code>NO</code>, a search is initiated to return rows.</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r12c1-t9" headers="r1c1-t9">
<p><code>p_item_id</code></p>
</td>
<td class="cellalignment967" headers="r12c1-t9 r1c2-t9">
<p>ID attribute of the form element.</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r13c1-t9" headers="r1c1-t9">
<p><code>p_item_label</code></p>
</td>
<td class="cellalignment967" headers="r13c1-t9 r1c2-t9">
<p>Invisible label created for the item.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI767"></a>Example</p>
<p>The following example demonstrates a sample query the generates a popup from an LOV named <code>DEPT_LOV</code>.</p>
<pre>
SELECT APEX_ITEM.POPUP_FROM_LOV (1,deptno,'DEPT_LOV') dt 
FROM emp
</pre></div>
<!-- class="refsect1" -->
<a id="CHDEBCCI"></a>
<hr />
<div id="AEAPI201" class="refsect1">
<h2 class="refsect1">POPUP_FROM_QUERY Function</h2>
<p>This function generates an HTML popup select list from a query. Like other available functions in the <code>APEX_ITEM</code> package, the <code>POPUP_FROM_QUERY</code> function is designed to generate forms with <code>F01</code> to <code>F50</code> form array elements.</p>
<p class="subhead2"><a id="AEAPI768"></a>Syntax</p>
<pre>
APEX_ITEM.POPUP_FROM_QUERY(

    p_idx              IN    NUMBER,
    p_value            IN    VARCHAR2 DEFAULT NULL,
    p_lov_query        IN    VARCHAR2,
    p_width            IN    VARCHAR2 DEFAULT NULL,
    p_max_length       IN    VARCHAR2 DEFAULT NULL,
    p_form_index       IN    VARCHAR2 DEFAULT '0',
    p_escape_html      IN    VARCHAR2 DEFAULT NULL,
    p_max_elements     IN    VARCHAR2 DEFAULT NULL,
    p_attributes       IN    VARCHAR2 DEFAULT NULL,
    p_ok_to_query      IN    VARCHAR2 DEFAULT 'YES',
    p_item_id          IN    VARCHAR2 DEFAULT NULL,
    p_item_label       IN    VARCHAR2 DEFAULT NULL)
    RETURN VARCHAR2;
</pre>
<p class="subhead2"><a id="AEAPI769"></a>Parameters</p>
<p><a href="#CHDCIFFG">Table 3-8</a> describes the parameters in the <code>POPUP_FROM_QUERY</code> function.</p>
<div id="AEAPI770" class="tblformal">
<p class="titleintable"><a id="sthref101"></a><a id="CHDCIFFG"></a>Table 3-8 POPUP_FROM_QUERY Parameters</p>
<table class="cellalignment965" title="POPUP_FROM_QUERY Parameters" summary="This table describes the parameters available in POPUP_FROM_QUERY." dir="ltr">
<thead>
<tr class="cellalignment959">
<th class="cellalignment966" id="r1c1-t10">Parameter</th>
<th class="cellalignment966" id="r1c2-t10">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment959">
<td class="cellalignment967" id="r2c1-t10" headers="r1c1-t10">
<p><code>p_idx</code></p>
</td>
<td class="cellalignment967" headers="r2c1-t10 r1c2-t10">
<p>Form element name. For example, <code>1</code> equals <code>F01</code> and <code>2</code> equals <code>F02</code>. Typically, <code>p_idx</code> is a constant for a given column.</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r3c1-t10" headers="r1c1-t10">
<p><code>p_value</code></p>
</td>
<td class="cellalignment967" headers="r3c1-t10 r1c2-t10">
<p>Form element current value. This value should be one of the values in the <code>p_lov_query</code> parameter.</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r4c1-t10" headers="r1c1-t10">
<p><code>p_lov_query</code></p>
</td>
<td class="cellalignment967" headers="r4c1-t10 r1c2-t10">
<p>SQL query that is expected to select two columns (a display column and a return column). For example:</p>
<pre>
SELECT dname, deptno FROM dept
</pre></td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r5c1-t10" headers="r1c1-t10">
<p><code>p_width</code></p>
</td>
<td class="cellalignment967" headers="r5c1-t10 r1c2-t10">
<p>Width of the text box.</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r6c1-t10" headers="r1c1-t10">
<p><code>p_max_length</code></p>
</td>
<td class="cellalignment967" headers="r6c1-t10 r1c2-t10">
<p>Maximum number of characters that can be entered in the text box.</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r7c1-t10" headers="r1c1-t10">
<p><code>p_form_index</code></p>
</td>
<td class="cellalignment967" headers="r7c1-t10 r1c2-t10">
<p>HTML form on the page in which an item is contained. Defaults to 0 and rarely used.</p>
<p>Only use this parameter when it is necessary to embed a custom form in your page template (such as a search field that posts to a different Web site). If this form comes before the <code>#FORM_OPEN#</code> substitution string, then its index is zero and the form opened automatically by Oracle Application Express must be referenced as form 1. This functionality supports the JavaScript used in the popup LOV that passes a value back to a form element.</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r8c1-t10" headers="r1c1-t10">
<p><code>p_escape_html</code></p>
</td>
<td class="cellalignment967" headers="r8c1-t10 r1c2-t10">
<p>Replacements for special characters that require an escaped equivalent.</p>
<ul>
<li>
<p><code>&amp;lt;</code> for <code>&lt;</code></p>
</li>
<li>
<p><code>&amp;gt;</code> for <code>&gt;</code></p>
</li>
<li>
<p><code>&amp;amp;</code> for <code>&amp;</code></p>
</li>
</ul>
<p>Range of values is <code>YES</code> and <code>NO</code>. If <code>YES</code>, special characters will be escaped. This parameter is useful if you know your query will return illegal HTML.</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r9c1-t10" headers="r1c1-t10">
<p><code>p_max_elements</code></p>
</td>
<td class="cellalignment967" headers="r9c1-t10 r1c2-t10">
<p>Limit on the number of rows that can be returned by your query. Limits the performance impact of user searches. By entering a value in this parameter, you force the user to search for a narrower set of results.</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r10c1-t10" headers="r1c1-t10">
<p><code>p_attributes</code></p>
</td>
<td class="cellalignment967" headers="r10c1-t10 r1c2-t10">
<p>Additional HTML attributes to use for the form item.</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r11c1-t10" headers="r1c1-t10">
<p><code>p_ok_to_query</code></p>
</td>
<td class="cellalignment967" headers="r11c1-t10 r1c2-t10">
<p>Range of values is <code>YES</code> and <code>NO</code>. If <code>YES</code>, a popup returns the first set of rows for the LOV. If <code>NO</code>, a search is initiated to return rows.</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r12c1-t10" headers="r1c1-t10">
<p><code>p_item_id</code></p>
</td>
<td class="cellalignment967" headers="r12c1-t10 r1c2-t10">
<p>ID attribute of the form element.</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r13c1-t10" headers="r1c1-t10">
<p><code>p_item_label</code></p>
</td>
<td class="cellalignment967" headers="r13c1-t10 r1c2-t10">
<p>Invisible label created for the item.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI771"></a>Example</p>
<p>The following example demonstrates a sample query the generates a popup select list from the <code>emp</code> table.</p>
<pre>
SELECT APEX_ITEM.POPUP_FROM_QUERY (1,deptno,'SELECT dname, deptno FROM dept') dt 
FROM emp
</pre></div>
<!-- class="refsect1" -->
<a id="CHDHJICI"></a>
<hr />
<div id="AEAPI202" class="refsect1">
<h2 class="refsect1">POPUPKEY_FROM_LOV Function</h2>
<p>This function generates a popup key select list from a shared list of values (LOV). Similar to other available functions in the <code>APEX_ITEM</code> package, the <code>POPUPKEY_FROM_LOV</code> function is designed to generate forms with <code>F01</code> to <code>F50</code> form array elements.</p>
<p class="subhead2"><a id="AEAPI772"></a>Syntax</p>
<pre>
APEX_ITEM.POPUPKEY_FROM_LOV(
    p_idx              IN    NUMBER,
    p_value            IN    VARCHAR2 DEFAULT NULL,
    p_lov_name         IN    VARCHAR2,
    p_width            IN    VARCHAR2 DEFAULT NULL,
    p_max_length       IN    VARCHAR2 DEFAULT NULL,
    p_form_index       IN    VARCHAR2 DEFAULT '0',
    p_escape_html      IN    VARCHAR2 DEFAULT NULL,
    p_max_elements     IN    VARCHAR2 DEFAULT NULL,
    p_attributes       IN    VARCHAR2 DEFAULT NULL,
    p_ok_to_query      IN    VARCHAR2 DEFAULT 'YES',
    p_item_id          IN    VARCHAR2 DEFAULT NULL,
    p_item_label       IN    VARCHAR2 DEFAULT NULL)
    RETURN VARCHAR2;
</pre>
<p>Although the text field associated with the popup displays in the first column in the LOV query, the actual value is specified in the second column in the query.</p>
<p class="subhead2"><a id="AEAPI773"></a>Parameters</p>
<p><a href="#CHDFJBBI">Table 3-9</a> describes the some parameters in the <code>POPUPKEY_FROM_LOV</code> function.</p>
<div id="AEAPI774" class="tblformal">
<p class="titleintable"><a id="sthref102"></a><a id="CHDFJBBI"></a>Table 3-9 POPUPKEY_FROM_LOV Parameters</p>
<table class="cellalignment965" title="POPUPKEY_FROM_LOV Parameters" summary="This table describes the parameters available in the POPUPKEY_FROM_LOV." dir="ltr">
<thead>
<tr class="cellalignment959">
<th class="cellalignment966" id="r1c1-t11">Parameter</th>
<th class="cellalignment966" id="r1c2-t11">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment959">
<td class="cellalignment967" id="r2c1-t11" headers="r1c1-t11">
<p><code>p_idx</code></p>
</td>
<td class="cellalignment967" headers="r2c1-t11 r1c2-t11">
<p>Identifies a form element name. For example, <code>1</code> equals <code>F01</code> and <code>2</code> equals <code>F02</code>. Typically, <code>p_idx</code> is a constant for a given column</p>
<p>Because of the behavior of <code>POPUPKEY_FROM_QUERY</code>, the next index value should be <code>p_idx + 1</code>. For example:</p>
<pre>
SELECT APEX_ITEM.POPUPKEY_FROM_LOV (1,deptno,'DEPT') dt,
APEX_ITEM.HIDDEN(3,empno) eno
</pre></td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r3c1-t11" headers="r1c1-t11">
<p><code>p_value</code></p>
</td>
<td class="cellalignment967" headers="r3c1-t11 r1c2-t11">
<p>Indicates the current value. This value should be one of the values in the <code>P_LOV_NAME</code> parameter.</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r4c1-t11" headers="r1c1-t11">
<p><code>p_lov_name</code></p>
</td>
<td class="cellalignment967" headers="r4c1-t11 r1c2-t11">
<p>Identifies a named LOV used for this popup.</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r5c1-t11" headers="r1c1-t11">
<p><code>p_width</code></p>
</td>
<td class="cellalignment967" headers="r5c1-t11 r1c2-t11">
<p>Width of the text box.</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r6c1-t11" headers="r1c1-t11">
<p><code>p_max_length</code></p>
</td>
<td class="cellalignment967" headers="r6c1-t11 r1c2-t11">
<p>Maximum number of characters that can be entered in the text box.</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r7c1-t11" headers="r1c1-t11">
<p><code>p_form_index</code></p>
</td>
<td class="cellalignment967" headers="r7c1-t11 r1c2-t11">
<p>HTML form on the page in which an item is contained. Defaults to 0 and rarely used.</p>
<p>Only use this parameter when it is necessary to embed a custom form in your page template (such as a search field that posts to a different Web site). If this form comes before the <code>#FORM_OPEN#</code> substitution string, then its index is zero and the form opened automatically by Oracle Application Express must be referenced as form 1. This functionality supports the JavaScript used in the popup LOV that passes a value back to a form element.</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r8c1-t11" headers="r1c1-t11">
<p><code>p_escape_html</code></p>
</td>
<td class="cellalignment967" headers="r8c1-t11 r1c2-t11">
<p>Replacements for special characters that require an escaped equivalent.</p>
<ul>
<li>
<p><code>&amp;lt;</code> for <code>&lt;</code></p>
</li>
<li>
<p><code>&amp;gt;</code> for <code>&gt;</code></p>
</li>
<li>
<p><code>&amp;amp;</code> for <code>&amp;</code></p>
</li>
</ul>
<p>This parameter is useful if you know your query will return illegal HTML.</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r9c1-t11" headers="r1c1-t11">
<p><code>p_max_elements</code></p>
</td>
<td class="cellalignment967" headers="r9c1-t11 r1c2-t11">
<p>Limit on the number of rows that can be returned by your query. Limits the performance impact of user searches. By entering a value in this parameter, you force the user to search for a narrower set of results.</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r10c1-t11" headers="r1c1-t11">
<p><code>p_attributes</code></p>
</td>
<td class="cellalignment967" headers="r10c1-t11 r1c2-t11">
<p>Additional HTML attributes to use for the form item.</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r11c1-t11" headers="r1c1-t11">
<p><code>p_ok_to_query</code></p>
</td>
<td class="cellalignment967" headers="r11c1-t11 r1c2-t11">
<p>Range of values is <code>YES</code> and <code>NO</code>. If <code>YES</code>, a popup returns the first set of rows for the LOV. If <code>NO</code>, a search is initiated to return rows.</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r12c1-t11" headers="r1c1-t11">
<p><code>p_item_id</code></p>
</td>
<td class="cellalignment967" headers="r12c1-t11 r1c2-t11">
<p>HTML attribute ID for the &lt;input&gt; tag</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r13c1-t11" headers="r1c1-t11">
<p><code>p_item_label</code></p>
</td>
<td class="cellalignment967" headers="r13c1-t11 r1c2-t11">
<p>Invisible label created for the item</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI775"></a>Example</p>
<p>The following example demonstrates how to generate a popup key select list from a shared list of values (LOV).</p>
<pre>
SELECT APEX_ITEM.POPUPKEY_FROM_LOV (1,deptno,'DEPT') dt 
FROM emp
</pre></div>
<!-- class="refsect1" -->
<a id="CHDEHBAC"></a>
<hr />
<div id="AEAPI203" class="refsect1">
<h2 class="refsect1">POPUPKEY_FROM_QUERY Function</h2>
<p>This function generates a popup key select list from a SQL query. Similar to other available functions in the <code>APEX_ITEM</code> package, the <code>POPUPKEY_FROM_QUERY</code> function is designed to generate forms with <code>F01</code> to <code>F50</code> form array elements.</p>
<p class="subhead2"><a id="AEAPI776"></a>Syntax</p>
<pre>
APEX_ITEM.POPUPKEY_FROM_QUERY(
    p_idx              IN    NUMBER,
    p_value            IN    VARCHAR2 DEFAULT NULL,
    p_lov_query        IN    VARCHAR2,
    p_width            IN    VARCHAR2 DEFAULT NULL,
    p_max_length       IN    VARCHAR2 DEFAULT NULL,
    p_form_index       IN    VARCHAR2 DEFAULT '0',
    p_escape_html      IN    VARCHAR2 DEFAULT NULL,
    p_max_elements     IN    VARCHAR2 DEFAULT NULL,
    p_attributes       IN    VARCHAR2 DEFAULT NULL,
    p_ok_to_query      IN    VARCHAR2 DEFAULT 'YES',
    p_item_id          IN    VARCHAR2 DEFAULT NULL,
    p_item_label       IN    VARCHAR2 DEFAULT NULL)
    RETURN VARCHAR2;
</pre>
<p class="subhead2"><a id="AEAPI777"></a>Parameters</p>
<p><a href="#CHDDDHEI">Table 3-10</a> describes the some parameters in the <code>POPUPKEY_FROM_QUERY</code> function.</p>
<div id="AEAPI778" class="tblformal">
<p class="titleintable"><a id="sthref103"></a><a id="CHDDDHEI"></a>Table 3-10 POPUPKEY_FROM_QUERY Parameters</p>
<table class="cellalignment965" title="POPUPKEY_FROM_QUERY Parameters" summary="This table describes the parameters available in POPUPKEY_FROM_QUERY." dir="ltr">
<thead>
<tr class="cellalignment959">
<th class="cellalignment966" id="r1c1-t12">Parameter</th>
<th class="cellalignment966" id="r1c2-t12">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment959">
<td class="cellalignment967" id="r2c1-t12" headers="r1c1-t12">
<p><code>p_idx</code></p>
</td>
<td class="cellalignment967" headers="r2c1-t12 r1c2-t12">
<p>Form element name. For example, <code>1</code> equals <code>F01</code> and <code>2</code> equals <code>F02</code>. Typically, <code>p_idx</code> is a constant for a given column.</p>
<p>Because of the behavior of <code>POPUPKEY_FROM_QUERY</code>, the next index value should be <code>p_idx + 1</code>. For example:</p>
<pre>
SELECT APEX_ITEM.POPUPKEY_FROM_QUERY (1,deptno,'SELECT dname, deptno FROM dept') dt,
APEX_ITEM.HIDDEN(3,empno) eno
</pre></td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r3c1-t12" headers="r1c1-t12">
<p><code>p_value</code></p>
</td>
<td class="cellalignment967" headers="r3c1-t12 r1c2-t12">
<p>Form element current value. This value should be one of the values in the <code>P_LOV_QUERY</code> parameter.</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r4c1-t12" headers="r1c1-t12">
<p><code>p_lov_query</code></p>
</td>
<td class="cellalignment967" headers="r4c1-t12 r1c2-t12">
<p>LOV query used for this popup.</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r5c1-t12" headers="r1c1-t12">
<p><code>p_width</code></p>
</td>
<td class="cellalignment967" headers="r5c1-t12 r1c2-t12">
<p>Width of the text box.</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r6c1-t12" headers="r1c1-t12">
<p><code>p_max_length</code></p>
</td>
<td class="cellalignment967" headers="r6c1-t12 r1c2-t12">
<p>Maximum number of characters that can be entered in the text box.</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r7c1-t12" headers="r1c1-t12">
<p><code>p_form_index</code></p>
</td>
<td class="cellalignment967" headers="r7c1-t12 r1c2-t12">
<p>HTML form on the page in which an item is contained. Defaults to 0 and rarely used.</p>
<p>Only use this parameter when it is necessary to embed a custom form in your page template (such as a search field that posts to a different Web site). If this form comes before the <code>#FORM_OPEN#</code> substitution string, then its index is zero and the form opened automatically by Oracle Application Express must be referenced as form 1. This functionality supports the JavaScript used in the popup LOV that passes a value back to a form element.</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r8c1-t12" headers="r1c1-t12">
<p><code>p_escape_html</code></p>
</td>
<td class="cellalignment967" headers="r8c1-t12 r1c2-t12">
<p>Replacements for special characters that require an escaped equivalent.</p>
<ul>
<li>
<p><code>&amp;lt;</code> for <code>&lt;</code></p>
</li>
<li>
<p><code>&amp;gt;</code> for <code>&gt;</code></p>
</li>
<li>
<p><code>&amp;amp;</code> for <code>&amp;</code></p>
</li>
</ul>
<p>This parameter is useful if you know your query will return illegal HTML.</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r9c1-t12" headers="r1c1-t12">
<p><code>p_max_elements</code></p>
</td>
<td class="cellalignment967" headers="r9c1-t12 r1c2-t12">
<p>Limit on the number of rows that can be returned by your query. Limits the performance impact of user searches. By entering a value in this parameter, you force the user to search for a narrower set of results.</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r10c1-t12" headers="r1c1-t12">
<p><code>p_attributes</code></p>
</td>
<td class="cellalignment967" headers="r10c1-t12 r1c2-t12">
<p>Additional HTML attributes to use for the form item.</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r11c1-t12" headers="r1c1-t12">
<p><code>p_ok_to_query</code></p>
</td>
<td class="cellalignment967" headers="r11c1-t12 r1c2-t12">
<p>Range of values is <code>YES</code> and <code>NO</code>. If <code>YES</code>, a popup returns first set of rows for the LOV. If <code>NO</code>, a search is initiated to return rows.</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r12c1-t12" headers="r1c1-t12">
<p><code>p_item_id</code></p>
</td>
<td class="cellalignment967" headers="r12c1-t12 r1c2-t12">
<p>ID attribute of the form element.</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r13c1-t12" headers="r1c1-t12">
<p><code>p_item_label</code></p>
</td>
<td class="cellalignment967" headers="r13c1-t12 r1c2-t12">
<p>Invisible label created for the item.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI779"></a>Example</p>
<p>The following example demonstrates how to generate a popup select list from a SQL query.</p>
<pre>
SELECT APEX_ITEM.POPUPKEY_FROM_QUERY (1,deptno,'SELECT dname, deptno FROM dept') dt 
FROM emp
</pre></div>
<!-- class="refsect1" -->
<a id="CHDGCJCG"></a>
<hr />
<div id="AEAPI204" class="refsect1">
<h2 class="refsect1">RADIOGROUP Function</h2>
<p>This function generates a radio group from a SQL query.</p>
<p class="subhead2"><a id="AEAPI780"></a>Syntax</p>
<pre>
APEX_ITEM.RADIOGROUP(
    p_idx              IN    NUMBER,
    p_value            IN    VARCHAR2 DEFAULT NULL,
    p_selected_value   IN    VARCHAR2 DEFAULT NULL,
    p_display          IN    VARCHAR2 DEFAULT NULL,
    p_attributes       IN    VARCHAR2 DEFAULT NULL,
    p_onblur           IN    VARCHAR2 DEFAULT NULL,
    p_onchange         IN    VARCHAR2 DEFAULT NULL,
    p_onfocus          IN    VARCHAR2 DEFAULT NULL,
    p_item_id          IN    VARCHAR2 DEFAULT NULL,
    p_item_label       IN    VARCHAR2 DEFAULT NULL)
    RETURN VARCHAR2;
</pre>
<p class="subhead2"><a id="AEAPI781"></a>Parameters</p>
<p><a href="#CHDCAEFH">Table 3-11</a> describes the parameters available in the <code>RADIOGROUP</code> function.</p>
<div id="AEAPI782" class="tblformal">
<p class="titleintable"><a id="sthref104"></a><a id="CHDCAEFH"></a>Table 3-11 RADIOGROUP Parameters</p>
<table class="cellalignment965" title="RADIOGROUP Parameters" summary="This table describes the parameters available in RADIOGROUP." dir="ltr">
<thead>
<tr class="cellalignment959">
<th class="cellalignment966" id="r1c1-t13">Parameter</th>
<th class="cellalignment966" id="r1c2-t13">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment959">
<td class="cellalignment967" id="r2c1-t13" headers="r1c1-t13">
<p><code>p_idx</code></p>
</td>
<td class="cellalignment967" headers="r2c1-t13 r1c2-t13">
<p>Number that determines which <code>APEX_APPLICATION</code> global variable will be used. Valid range of values is <code>1</code> to <code>50</code>.For example <code>1</code> creates <code>F01</code> and <code>2</code> creates <code>F02</code>.</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r3c1-t13" headers="r1c1-t13">
<p><code>p_value</code></p>
</td>
<td class="cellalignment967" headers="r3c1-t13 r1c2-t13">
<p>Value of the radio group.</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r4c1-t13" headers="r1c1-t13">
<p><code>p_selected_value</code></p>
</td>
<td class="cellalignment967" headers="r4c1-t13 r1c2-t13">
<p>Value that should be selected.</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r5c1-t13" headers="r1c1-t13">
<p><code>p_display</code></p>
</td>
<td class="cellalignment967" headers="r5c1-t13 r1c2-t13">
<p>Text to display next to the radio option.</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r6c1-t13" headers="r1c1-t13">
<p><code>p_attributes</code></p>
</td>
<td class="cellalignment967" headers="r6c1-t13 r1c2-t13">
<p>Extra HTML parameters you want to add.</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r7c1-t13" headers="r1c1-t13">
<p><code>p_onblur</code></p>
</td>
<td class="cellalignment967" headers="r7c1-t13 r1c2-t13">
<p>JavaScript to execute in the <code>onBlur</code> event.</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r8c1-t13" headers="r1c1-t13">
<p><code>p_onchange</code></p>
</td>
<td class="cellalignment967" headers="r8c1-t13 r1c2-t13">
<p>JavaScript to execute in the <code>onChange</code> event.</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r9c1-t13" headers="r1c1-t13">
<p><code>p_onfocus</code></p>
</td>
<td class="cellalignment967" headers="r9c1-t13 r1c2-t13">
<p>JavaScript to execute in the <code>onFocus</code> event.</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r10c1-t13" headers="r1c1-t13">
<p><code>p_item_id</code></p>
</td>
<td class="cellalignment967" headers="r10c1-t13 r1c2-t13">
<p>HTML attribute ID for the &lt;input&gt; tag</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r11c1-t13" headers="r1c1-t13">
<p><code>p_item_label</code></p>
</td>
<td class="cellalignment967" headers="r11c1-t13 r1c2-t13">
<p>Invisible label created for the item</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI783"></a>Example</p>
<p>The following example demonstrates how to select department 20 from the <code>emp</code> table as a default in a radio group.</p>
<pre>
SELECT APEX_ITEM.RADIOGROUP (1,deptno,'20',dname) dt
FROM   dept
ORDER  BY 1
</pre></div>
<!-- class="refsect1" -->
<a id="CHDHJJAB"></a>
<hr />
<div id="AEAPI205" class="refsect1">
<h2 class="refsect1">SELECT_LIST Function</h2>
<p>This function dynamically generates a static select list. Similar to other functions available in the <code>APEX_ITEM</code> package, these select list functions are designed to generate forms with <code>F01</code> to <code>F50</code> form array elements.</p>
<p class="subhead2"><a id="AEAPI784"></a>Syntax</p>
<pre>
APEX_ITEM.SELECT_LIST(
    p_idx           IN   NUMBER,
    p_value         IN   VARCHAR2 DEFAULT NULL,
    p_list_values   IN   VARCHAR2 DEFAULT NULL,
    p_attributes    IN   VARCHAR2 DEFAULT NULL,
    p_show_null     IN   VARCHAR2 DEFAULT 'NO',
    p_null_value    IN   VARCHAR2 DEFAULT '%NULL%',
    p_null_text     IN   VARCHAR2 DEFAULT '%',
    p_item_id       IN   VARCHAR2 DEFAULT NULL,
    p_item_label    IN   VARCHAR2 DEFAULT NULL,
    p_show_extra    IN   VARCHAR2 DEFAULT 'YES')
    RETURN VARCHAR2;
</pre>
<p class="subhead2"><a id="AEAPI785"></a>Parameters</p>
<p><a href="#CHDCBBHG">Table 3-12</a> describes the parameters available in the <code>SELECT_LIST</code> function.</p>
<div id="AEAPI786" class="tblformal">
<p class="titleintable"><a id="sthref105"></a><a id="CHDCBBHG"></a>Table 3-12 SELECT_LIST Parameters</p>
<table class="cellalignment965" title="SELECT_LIST Parameters" summary="This table describes the parameters available in SELECT_LIST." dir="ltr">
<thead>
<tr class="cellalignment959">
<th class="cellalignment966" id="r1c1-t14">Parameter</th>
<th class="cellalignment966" id="r1c2-t14">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment959">
<td class="cellalignment967" id="r2c1-t14" headers="r1c1-t14">
<p><code>p_idx</code></p>
</td>
<td class="cellalignment967" headers="r2c1-t14 r1c2-t14">
<p>Form element name. For example, <code>1</code> equals <code>F01</code> and <code>2</code> equals <code>F02</code>. Typically the <code>P_IDX</code> parameter is constant for a given column.</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r3c1-t14" headers="r1c1-t14">
<p><code>p_value</code></p>
</td>
<td class="cellalignment967" headers="r3c1-t14 r1c2-t14">
<p>Current value. This value should be a value in the <code>P_LIST_VALUES</code> parameter.</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r4c1-t14" headers="r1c1-t14">
<p><code>p_list_values</code></p>
</td>
<td class="cellalignment967" headers="r4c1-t14 r1c2-t14">
<p>List of static values separated by commas. Displays values and returns values that are separated by semicolons.</p>
<p>Note that this is only available in the <code>SELECT_LIST</code> function.</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r5c1-t14" headers="r1c1-t14">
<p><code>p_attributes</code></p>
</td>
<td class="cellalignment967" headers="r5c1-t14 r1c2-t14">
<p>Extra HTML parameters you want to add.</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r6c1-t14" headers="r1c1-t14">
<p><code>p_show_null</code></p>
</td>
<td class="cellalignment967" headers="r6c1-t14 r1c2-t14">
<p>Extra select option to enable the NULL selection. Range of values is <code>YES</code> and <code>NO</code>.</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r7c1-t14" headers="r1c1-t14">
<p><code>p_null_value</code></p>
</td>
<td class="cellalignment967" headers="r7c1-t14 r1c2-t14">
<p>Value to be returned when a user selects the NULL option. Only relevant when <code>p_show_null</code> equals <code>YES</code>.</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r8c1-t14" headers="r1c1-t14">
<p><code>p_null_text</code></p>
</td>
<td class="cellalignment967" headers="r8c1-t14 r1c2-t14">
<p>Value to be displayed when a user selects the NULL option. Only relevant when <code>p_show_null</code> equals YES.</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r9c1-t14" headers="r1c1-t14">
<p><code>p_item_id</code></p>
</td>
<td class="cellalignment967" headers="r9c1-t14 r1c2-t14">
<p>HTML attribute ID for the &lt;<code>input</code>&gt; tag.</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r10c1-t14" headers="r1c1-t14">
<p><code>p_item_label</code></p>
</td>
<td class="cellalignment967" headers="r10c1-t14 r1c2-t14">
<p>Invisible lable created for the item.</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r11c1-t14" headers="r1c1-t14">
<p><code>p_show_extra</code></p>
</td>
<td class="cellalignment967" headers="r11c1-t14 r1c2-t14">
<p>Shows the current value even if the value of p_value is not located in the select list.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI787"></a>Example</p>
<p>The following example demonstrates a static select list that displays <code>Yes</code>, returns <code>Y</code>, defaults to <code>Y</code>, and generates a <code>F01</code> form item.</p>
<pre>
SELECT APEX_ITEM.SELECT_LIST(1,'Y','Yes;Y,No;N')yn 
FROM emp
</pre>
<p>The following example demonstrates the use of <code>APEX_ITEM.SELECT_LIST</code> to generate a static select list where:</p>
<ul>
<li>
<p>A form array element <code>F03</code> will be generated (<code>p_idx</code> parameter).</p>
</li>
<li>
<p>The initial value for each element will be equal to the value for <code>deptno</code> for the row from <code>emp</code> (<code>p_value</code> parameter).</p>
</li>
<li>
<p>The select list will contain 4 options (<code>p_list_values</code> parameter).</p>
</li>
<li>
<p>The text within the select list will display in red (<code>p_attributes</code> parameter).</p>
</li>
<li>
<p>A null option will be displayed (<code>p_show_null</code>) and this option will display <code>-Select-</code> as the text (<code>p_null_text</code> parameter).</p>
</li>
<li>
<p>An HTML ID attribute will be generated for each row, where <code>#ROWNUM#</code> will be substituted for the current row <code>rownum</code> (<code>p_item_id</code> parameter). (So an ID of '<code>f03_4</code>' will be generated for row 4.)</p>
</li>
<li>
<p>A HTML label element will be generated for each row (<code>p_item_label</code> parameter).</p>
</li>
<li>
<p>The current value for <code>deptno</code> will be displayed, even if it is not contained with the list of values passed in the <code>p_list_values</code> parameter (<code>p_show_extra</code> parameter).</p>
</li>
</ul>
<pre>
SELECT  empno "Employee #", 
    ename "Name",
    APEX_ITEM.SELECT_LIST(
        p_idx           =&gt;   3,
        p_value         =&gt;   deptno,
        p_list_values   =&gt;   'ACCOUNTING;10,RESEARCH;20,SALES;30,OPERATIONS;40',
        p_attributes    =&gt;   'style="color:red;"',
        p_show_null     =&gt;   'YES',
        p_null_value    =&gt;   NULL,
        p_null_text     =&gt;   '-Select-',
        p_item_id       =&gt;   'f03_#ROWNUM#',
        p_item_label    =&gt;   'Label for f03_#ROWNUM#',
        p_show_extra    =&gt;   'YES') "Department"
  FROM  emp;
</pre></div>
<!-- class="refsect1" -->
<a id="CHDFGAEC"></a>
<hr />
<div id="AEAPI206" class="refsect1">
<h2 class="refsect1">SELECT_LIST_FROM_LOV Function</h2>
<p>This function dynamically generates select lists from a shared list of values (LOV). Similar to other functions available in the <code>APEX_ITEM</code> package, these select list functions are designed to generate forms with <code>F01</code> to <code>F50</code> form array elements.</p>
<p class="subhead2"><a id="AEAPI788"></a>Syntax</p>
<pre>
APEX_ITEM.SELECT_LIST_FROM_LOV(
    p_idx           IN   NUMBER,
    p_value         IN   VARCHAR2 DEFAULT NULL,
    p_lov           IN   VARCHAR2,
    p_attributes    IN   VARCHAR2 DEFAULT NULL,
    p_show_null     IN   VARCHAR2 DEFAULT 'YES',
    p_null_value    IN   VARCHAR2 DEFAULT '%NULL%',
    p_null_text     IN   VARCHAR2 DEFAULT '%',
    p_item_id       IN   VARCHAR2 DEFAULT NULL,
    p_item_label    IN   VARCHAR2 DEFAULT NULL,
    p_show_extra    IN   VARCHAR2 DEFAULT 'YES')
    RETURN VARCHAR2;
</pre>
<p class="subhead2"><a id="AEAPI789"></a>Parameters</p>
<p><a href="#CHDHHDAH">Table 3-13</a> describes the parameters available in the <code>SELECT_LIST_FROM_LOV</code> function.</p>
<div id="AEAPI790" class="tblformal">
<p class="titleintable"><a id="sthref106"></a><a id="CHDHHDAH"></a>Table 3-13 SELECT_LIST_FROM_LOV Parameters</p>
<table class="cellalignment965" title="SELECT_LIST_FROM_LOV Parameters" summary="This table describes the parameters available in SELECT_LIST_FROM_LOV." dir="ltr">
<thead>
<tr class="cellalignment959">
<th class="cellalignment966" id="r1c1-t15">Parameter</th>
<th class="cellalignment966" id="r1c2-t15">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment959">
<td class="cellalignment967" id="r2c1-t15" headers="r1c1-t15">
<p><code>p_idx</code></p>
</td>
<td class="cellalignment967" headers="r2c1-t15 r1c2-t15">
<p>Form element name. For example, <code>1</code> equals <code>F01</code> and <code>2</code> equals <code>F02</code>. Typically, the <code>p_idx</code> parameter is constant for a given column.</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r3c1-t15" headers="r1c1-t15">
<p><code>p_value</code></p>
</td>
<td class="cellalignment967" headers="r3c1-t15 r1c2-t15">
<p>Current value. This value should be a value in the <code>p_lov</code> parameter.</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r4c1-t15" headers="r1c1-t15">
<p><code>p_lov</code></p>
</td>
<td class="cellalignment967" headers="r4c1-t15 r1c2-t15">
<p>Text name of an application list of values. This list of values must be defined in your application. This parameter is used only by the <code>select_list_from_lov</code> function.</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r5c1-t15" headers="r1c1-t15">
<p><code>p_attributes</code></p>
</td>
<td class="cellalignment967" headers="r5c1-t15 r1c2-t15">
<p>Extra HTML parameters you want to add.</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r6c1-t15" headers="r1c1-t15">
<p><code>p_show_null</code></p>
</td>
<td class="cellalignment967" headers="r6c1-t15 r1c2-t15">
<p>Extra select option to enable the NULL selection. Range of values is <code>YES</code> and <code>NO</code>.</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r7c1-t15" headers="r1c1-t15">
<p><code>p_null_value</code></p>
</td>
<td class="cellalignment967" headers="r7c1-t15 r1c2-t15">
<p>Value to be returned when a user selects the NULL option. Only relevant when <code>p_show_null</code> equals <code>YES</code>.</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r8c1-t15" headers="r1c1-t15">
<p><code>p_null_text</code></p>
</td>
<td class="cellalignment967" headers="r8c1-t15 r1c2-t15">
<p>Value to be displayed when a user selects the NULL option. Only relevant when <code>p_show_null</code> equals <code>YES</code>.</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r9c1-t15" headers="r1c1-t15">
<p><code>p_item_id</code></p>
</td>
<td class="cellalignment967" headers="r9c1-t15 r1c2-t15">
<p>HTML attribute ID for the <code>&lt;select&gt;</code> tag.</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r10c1-t15" headers="r1c1-t15">
<p><code>p_item_label</code></p>
</td>
<td class="cellalignment967" headers="r10c1-t15 r1c2-t15">
<p>Invisible label created for the item.</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r11c1-t15" headers="r1c1-t15">
<p><code>p_show_extra</code></p>
</td>
<td class="cellalignment967" headers="r11c1-t15 r1c2-t15">
<p>Shows the current value even if the value of <code>p_value</code> is not located in the select list.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI791"></a>Example</p>
<p>The following example demonstrates a select list based on an LOV defined in the application.</p>
<pre>
SELECT APEX_ITEM.SELECT_LIST_FROM_LOV(2,job,'JOB_FLOW_LOV')job 
FROM emp
</pre></div>
<!-- class="refsect1" -->
<a id="CHDCAEAB"></a>
<hr />
<div id="AEAPI207" class="refsect1">
<h2 class="refsect1">SELECT_LIST_FROM_LOV_XL Function</h2>
<p>This function dynamically generates very large select lists (greater than 32K) from a shared list of values (LOV). Similar to other functions available in the <code>APEX_ITEM</code> package, these select list functions are designed to generate forms with <code>F01</code> to <code>F50</code> form array elements. This function is the same as <code>SELECT_LIST_FROM_LOV</code>, but its return value is CLOB. This enables you to use it in SQL queries where you need to handle a column value longer than 4000 characters.</p>
<p class="subhead2"><a id="AEAPI792"></a>Syntax</p>
<pre>
APEX_ITEM.SELECT_LIST_FROM_LOV_XL(
    p_idx           IN   NUMBER,
    p_value         IN   VARCHAR2 DEFAULT NULL,
    p_lov           IN   VARCHAR2,
    p_attributes    IN   VARCHAR2 DEFAULT NULL,
    p_show_null     IN   VARCHAR2 DEFAULT 'YES',
    p_null_value    IN   VARCHAR2 DEFAULT '%NULL%',
    p_null_text     IN   VARCHAR2 DEFAULT '%',
    p_item_id       IN   VARCHAR2 DEFAULT NULL,
    p_item_label    IN   VARCHAR2 DEFAULT NULL,
    p_show_extra    IN   VARCHAR2 DEFAULT 'YES')
    RETURN CLOB;
</pre>
<p class="subhead2"><a id="AEAPI793"></a>Parameters</p>
<p><a href="#CHDHGEBA">Table 3-14</a> describes the parameters available in the <code>SELECT_LIST_FROM_LOV_XL</code> function.</p>
<div id="AEAPI794" class="tblformal">
<p class="titleintable"><a id="sthref107"></a><a id="CHDHGEBA"></a>Table 3-14 SELECT_LIST_FROM_LOV_XL Parameters</p>
<table class="cellalignment965" title="SELECT_LIST_FROM_LOV_XL Parameters" summary="This table describes the parameters available in SELECT_LIST_FROM_LOV_XL." dir="ltr">
<thead>
<tr class="cellalignment959">
<th class="cellalignment966" id="r1c1-t16">Parameter</th>
<th class="cellalignment966" id="r1c2-t16">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment959">
<td class="cellalignment967" id="r2c1-t16" headers="r1c1-t16">
<p><code>p_idx</code></p>
</td>
<td class="cellalignment967" headers="r2c1-t16 r1c2-t16">
<p>Form element name. For example, <code>1</code> equals <code>F01</code> and <code>2</code> equals <code>F02</code>. Typically, the <code>p_idx</code> parameter is constant for a given column.</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r3c1-t16" headers="r1c1-t16">
<p><code>p_value</code></p>
</td>
<td class="cellalignment967" headers="r3c1-t16 r1c2-t16">
<p>Current value. This value should be a value in the <code>p_lov</code> parameter.</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r4c1-t16" headers="r1c1-t16">
<p><code>p_lov</code></p>
</td>
<td class="cellalignment967" headers="r4c1-t16 r1c2-t16">
<p>Text name of a list of values. This list of values must be defined in your application. This parameter is used only by the <code>select_list_from_lov</code> function.</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r5c1-t16" headers="r1c1-t16">
<p><code>p_attributes</code></p>
</td>
<td class="cellalignment967" headers="r5c1-t16 r1c2-t16">
<p>Extra HTML parameters you want to add.</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r6c1-t16" headers="r1c1-t16">
<p><code>p_show_null</code></p>
</td>
<td class="cellalignment967" headers="r6c1-t16 r1c2-t16">
<p>Extra select option to enable the NULL selection. Range of values is <code>YES</code> and <code>NO</code>.</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r7c1-t16" headers="r1c1-t16">
<p><code>p_null_value</code></p>
</td>
<td class="cellalignment967" headers="r7c1-t16 r1c2-t16">
<p>Value to be returned when a user selects the NULL option. Only relevant when <code>p_show_null</code> equals <code>YES</code>.</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r8c1-t16" headers="r1c1-t16">
<p><code>p_null_text</code></p>
</td>
<td class="cellalignment967" headers="r8c1-t16 r1c2-t16">
<p>Value to be displayed when a user selects the NULL option. Only relevant when <code>p_show_null</code> equals <code>YES</code>.</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r9c1-t16" headers="r1c1-t16">
<p><code>p_item_id</code></p>
</td>
<td class="cellalignment967" headers="r9c1-t16 r1c2-t16">
<p>HTML attribute ID for the <code>&lt;select&gt;</code> tag.</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r10c1-t16" headers="r1c1-t16">
<p><code>p_item_label</code></p>
</td>
<td class="cellalignment967" headers="r10c1-t16 r1c2-t16">
<p>Invisible label created for the item.</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r11c1-t16" headers="r1c1-t16">
<p><code>p_show_extra</code></p>
</td>
<td class="cellalignment967" headers="r11c1-t16 r1c2-t16">
<p>Shows the current value even if the value of <code>p_value</code> is not located in the select list.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI795"></a>Example</p>
<p>The following example demonstrates how to create a select list based on an LOV defined in the application.</p>
<pre>
SELECT APEX_ITEM.SELECT_LIST_FROM_LOV_XL(2,job,'JOB_FLOW_LOV')job 
FROM emp
</pre></div>
<!-- class="refsect1" -->
<a id="CHDIDGDA"></a>
<hr />
<div id="AEAPI208" class="refsect1">
<h2 class="refsect1">SELECT_LIST_FROM_QUERY Function</h2>
<p>This function dynamically generates a select list from a query. Similar to other functions available in the <code>APEX_ITEM</code> package, these select list functions are designed to generate forms with <code>F01</code> to <code>F50</code> form array elements.</p>
<p class="subhead2"><a id="AEAPI796"></a>Syntax</p>
<pre>
APEX_ITEM.SELECT_LIST_FROM_QUERY(
    p_idx           IN    NUMBER,
    p_value         IN    VARCHAR2 DEFAULT NULL,
    p_query         IN    VARCHAR2,
    p_attributes    IN    VARCHAR2 DEFAULT NULL,
    p_show_null     IN    VARCHAR2 DEFAULT 'YES',
    p_null_value    IN    VARCHAR2 DEFAULT '%NULL%',
    p_null_text     IN    VARCHAR2 DEFAULT '%',
    p_item_id       IN    VARCHAR2 DEFAULT NULL,
    p_item_label    IN    VARCHAR2 DEFAULT NULL,
    p_show_extra    IN    VARCHAR2 DEFAULT 'YES')
    RETURN VARCHAR2;
</pre>
<p class="subhead2"><a id="AEAPI797"></a>Parameters</p>
<p><a href="#CHDJEBJD">Table 3-15</a> describes the parameters available in the <code>SELECT_LIST_FROM_QUERY</code> function.</p>
<div id="AEAPI798" class="tblformal">
<p class="titleintable"><a id="sthref108"></a><a id="CHDJEBJD"></a>Table 3-15 SELECT_LIST_FROM_QUERY Parameters</p>
<table class="cellalignment965" title="SELECT_LIST_FROM_QUERY Parameters" summary="This table describes the parameters available in SELECT_LIST_FROM_QUERY." dir="ltr">
<thead>
<tr class="cellalignment959">
<th class="cellalignment966" id="r1c1-t17">Parameter</th>
<th class="cellalignment966" id="r1c2-t17">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment959">
<td class="cellalignment967" id="r2c1-t17" headers="r1c1-t17">
<p><code>p_idx</code></p>
</td>
<td class="cellalignment967" headers="r2c1-t17 r1c2-t17">
<p>Form element name. For example, <code>1</code> equals <code>F01</code> and <code>2</code> equals <code>F02</code>. Typically, the <code>p_idx</code> parameter is constant for a given column.</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r3c1-t17" headers="r1c1-t17">
<p><code>p_value</code></p>
</td>
<td class="cellalignment967" headers="r3c1-t17 r1c2-t17">
<p>Current value. This value should be a value in the <code>p_query</code> parameter.</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r4c1-t17" headers="r1c1-t17">
<p><code>p_query</code></p>
</td>
<td class="cellalignment967" headers="r4c1-t17 r1c2-t17">
<p>SQL query that is expected to select two columns, a display column, and a return column. For example:</p>
<pre>
SELECT dname, deptno FROM dept
</pre>
<p>Note that this is used only by the <code>SELECT_LIST_FROM_QUERY</code> function.</p>
<p>Also note, if only one column is specified in the select clause of this query, the value for this column will be used for both display and return purposes.</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r5c1-t17" headers="r1c1-t17">
<p><code>p_attributes</code></p>
</td>
<td class="cellalignment967" headers="r5c1-t17 r1c2-t17">
<p>Extra HTML parameters you want to add.</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r6c1-t17" headers="r1c1-t17">
<p><code>p_show_null</code></p>
</td>
<td class="cellalignment967" headers="r6c1-t17 r1c2-t17">
<p>Extra select option to enable the NULL selection. Range of values is <code>YES</code> and <code>NO</code>.</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r7c1-t17" headers="r1c1-t17">
<p><code>p_null_value</code></p>
</td>
<td class="cellalignment967" headers="r7c1-t17 r1c2-t17">
<p>Value to be returned when a user selects the NULL option. Only relevant when <code>p_show_null</code> equals <code>YES</code>.</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r8c1-t17" headers="r1c1-t17">
<p><code>p_null_text</code></p>
</td>
<td class="cellalignment967" headers="r8c1-t17 r1c2-t17">
<p>Value to be displayed when a user selects the NULL option. Only relevant when <code>p_show_null</code> equals <code>YES</code>.</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r9c1-t17" headers="r1c1-t17">
<p><code>p_item_id</code></p>
</td>
<td class="cellalignment967" headers="r9c1-t17 r1c2-t17">
<p>HTML attribute ID for the <code>&lt;select&gt;</code> tag.</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r10c1-t17" headers="r1c1-t17">
<p><code>p_item_label</code></p>
</td>
<td class="cellalignment967" headers="r10c1-t17 r1c2-t17">
<p>Invisible label created for the item.</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r11c1-t17" headers="r1c1-t17">
<p><code>p_show_extra</code></p>
</td>
<td class="cellalignment967" headers="r11c1-t17 r1c2-t17">
<p>Show the current value even if the value of <code>p_value</code> is not located in the select list.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI799"></a>Example</p>
<p>The following example demonstrates a select list based on a SQL query.</p>
<pre>
SELECT APEX_ITEM.SELECT_LIST_FROM_QUERY(3,job,'SELECT DISTINCT job FROM emp')job 
FROM emp
</pre></div>
<!-- class="refsect1" -->
<a id="CHDGBFBE"></a>
<hr />
<div id="AEAPI209" class="refsect1">
<h2 class="refsect1">SELECT_LIST_FROM_QUERY_XL Function</h2>
<p>This function is the same as <code>SELECT_LIST_FROM_QUERY</code>, but its return value is a CLOB. This allows its use in SQL queries where you need to handle a column value longer than 4000 characters. Similar to other functions available in the <code>APEX_ITEM</code> package, these select list functions are designed to generate forms with <code>F01</code> to <code>F50</code> form array elements.</p>
<p class="subhead2"><a id="AEAPI800"></a>Syntax</p>
<pre>
APEX_ITEM.SELECT_LIST_FROM_QUERY_XL(
    p_idx           IN    NUMBER,
    p_value         IN    VARCHAR2 DEFAULT NULL,
    p_query         IN    VARCHAR2,
    p_attributes    IN    VARCHAR2 DEFAULT NULL,
    p_show_null     IN    VARCHAR2 DEFAULT 'YES',
    p_null_value    IN    VARCHAR2 DEFAULT '%NULL%',
    p_null_text     IN    VARCHAR2 DEFAULT '%',
    p_item_id       IN    VARCHAR2 DEFAULT NULL,
    p_item_label    IN    VARCHAR2 DEFAULT NULL,
    p_show_extra    IN    VARCHAR2 DEFAULT 'YES')
    RETURN CLOB;
</pre>
<p class="subhead2"><a id="AEAPI801"></a>Parameters</p>
<p><a href="#CHDFGCEB">Table 3-16</a> describes the parameters available in the <code>SELECT_LIST_FROM_QUERY_XL</code> function.</p>
<div id="AEAPI802" class="tblformal">
<p class="titleintable"><a id="sthref109"></a><a id="CHDFGCEB"></a>Table 3-16 SELECT_LIST_FROM_QUERY_XL Parameters</p>
<table class="cellalignment965" title="SELECT_LIST_FROM_QUERY_XL Parameters" summary="This table describes the parameters available in SELECT_LIST_FROM_QUERY_XL." dir="ltr">
<thead>
<tr class="cellalignment959">
<th class="cellalignment966" id="r1c1-t18">Parameter</th>
<th class="cellalignment966" id="r1c2-t18">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment959">
<td class="cellalignment967" id="r2c1-t18" headers="r1c1-t18">
<p><code>p_idx</code></p>
</td>
<td class="cellalignment967" headers="r2c1-t18 r1c2-t18">
<p>Form element name. For example, <code>1</code> equals <code>F01</code> and <code>2</code> equals <code>F02</code>. Typically the <code>p_idx</code> parameter is constant for a given column.</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r3c1-t18" headers="r1c1-t18">
<p><code>p_value</code></p>
</td>
<td class="cellalignment967" headers="r3c1-t18 r1c2-t18">
<p>Current value. This value should be a value in the <code>p_query</code> parameter.</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r4c1-t18" headers="r1c1-t18">
<p><code>p_query</code></p>
</td>
<td class="cellalignment967" headers="r4c1-t18 r1c2-t18">
<p>SQL query that is expected to select two columns, a display column, and a return column. For example:</p>
<pre>
SELECT dname, deptno FROM dept
</pre>
<p>Note that this is used only by the <code>SELECT_LIST_FROM_QUERY_XL</code> function.</p>
<p>Also note, if only one column is specified in the select clause of this query, the value for this column will be used for both display and return purposes.</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r5c1-t18" headers="r1c1-t18">
<p><code>p_attributes</code></p>
</td>
<td class="cellalignment967" headers="r5c1-t18 r1c2-t18">
<p>Extra HTML parameters you want to add.</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r6c1-t18" headers="r1c1-t18">
<p><code>p_show_null</code></p>
</td>
<td class="cellalignment967" headers="r6c1-t18 r1c2-t18">
<p>Extra select option to enable the NULL selection. Range of values is <code>YES</code> and <code>NO</code>.</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r7c1-t18" headers="r1c1-t18">
<p><code>p_null_value</code></p>
</td>
<td class="cellalignment967" headers="r7c1-t18 r1c2-t18">
<p>Value to be returned when a user selects the NULL option. Only relevant when <code>p_show_null</code> equals <code>YES</code>.</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r8c1-t18" headers="r1c1-t18">
<p><code>p_null_text</code></p>
</td>
<td class="cellalignment967" headers="r8c1-t18 r1c2-t18">
<p>Value to be displayed when a user selects the NULL option. Only relevant when <code>p_show_null</code> equals <code>YES</code>.</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r9c1-t18" headers="r1c1-t18">
<p><code>p_item_id</code></p>
</td>
<td class="cellalignment967" headers="r9c1-t18 r1c2-t18">
<p>HTML attribute ID for the <code>&lt;select&gt;</code> tag.</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r10c1-t18" headers="r1c1-t18">
<p><code>p_item_label</code></p>
</td>
<td class="cellalignment967" headers="r10c1-t18 r1c2-t18">
<p>Invisible label created for the item.</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r11c1-t18" headers="r1c1-t18">
<p><code>p_show_extra</code></p>
</td>
<td class="cellalignment967" headers="r11c1-t18 r1c2-t18">
<p>Show the current value even if the value of <code>p_value</code> is not located in the select list.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI803"></a>Example</p>
<p>The following example demonstrates a select list based on a SQL query.</p>
<pre>
SELECT APEX_ITEM.SELECT_LIST_FROM_QUERY_XL(3,job,'SELECT DISTINCT job FROM emp')job 
FROM emp
</pre></div>
<!-- class="refsect1" -->
<a id="CHDCDHJI"></a>
<hr />
<div id="AEAPI211" class="refsect1">
<h2 class="refsect1">TEXT Function</h2>
<p>This function generates text fields (or text input form items) from a SQL query.</p>
<p class="subhead2"><a id="AEAPI804"></a>Syntax</p>
<pre>
APEX_ITEM.TEXT(
    p_idx         IN    NUMBER,
    p_value       IN    VARCHAR2 DEFAULT NULL,
    p_size        IN    NUMBER DEFAULT NULL,
    p_maxlength   IN    NUMBER DEFAULT NULL,
    p_attributes  IN    VARCHAR2 DEFAULT NULL,
    p_item_id     IN    VARCHAR2 DEFAULT NULL,
    p_item_label  IN    VARCHAR2 DEFAULT NULL)
    RETURN VARCHAR2;
</pre>
<p class="subhead2"><a id="AEAPI805"></a>Parameters</p>
<p><a href="#CHDEHCGE">Table 3-17</a> describes the parameters available in the <code>TEXT</code> function.</p>
<div id="AEAPI806" class="tblformal">
<p class="titleintable"><a id="sthref110"></a><a id="CHDEHCGE"></a>Table 3-17 TEXT Parameters</p>
<table class="cellalignment965" title="TEXT Parameters" summary="This table describes the parameters available in TEXT." dir="ltr">
<thead>
<tr class="cellalignment959">
<th class="cellalignment966" id="r1c1-t19">Parameter</th>
<th class="cellalignment966" id="r1c2-t19">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment959">
<td class="cellalignment967" id="r2c1-t19" headers="r1c1-t19">
<p><code>p_idx</code></p>
</td>
<td class="cellalignment967" headers="r2c1-t19 r1c2-t19">
<p>Number to identify the item you want to generate. The number will determine which <code>G_FXX</code> global is populated.</p>
<p><span class="bold">See Also:</span> <a href="apex_app.htm#CHDDADIE">"APEX_APPLICATION"</a></p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r3c1-t19" headers="r1c1-t19">
<p><code>p_value</code></p>
</td>
<td class="cellalignment967" headers="r3c1-t19 r1c2-t19">
<p>Value of a text field item.</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r4c1-t19" headers="r1c1-t19">
<p><code>p_size</code></p>
</td>
<td class="cellalignment967" headers="r4c1-t19 r1c2-t19">
<p>Controls HTML tag attributes (such as disabled).</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r5c1-t19" headers="r1c1-t19">
<p><code>p_maxlength</code></p>
</td>
<td class="cellalignment967" headers="r5c1-t19 r1c2-t19">
<p>Maximum number of characters that can be entered in the text box.</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r6c1-t19" headers="r1c1-t19">
<p><code>p_attributes</code></p>
</td>
<td class="cellalignment967" headers="r6c1-t19 r1c2-t19">
<p>Extra HTML parameters you want to add.</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r7c1-t19" headers="r1c1-t19">
<p><code>p_item_id</code></p>
</td>
<td class="cellalignment967" headers="r7c1-t19 r1c2-t19">
<p>HTML attribute ID for the <code>&lt;input&gt;</code> tag.</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r8c1-t19" headers="r1c1-t19">
<p><code>p_item_label</code></p>
</td>
<td class="cellalignment967" headers="r8c1-t19 r1c2-t19">
<p>Invisible label created for the item.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI807"></a>Example</p>
<p>The following sample query demonstrates how to generate one update field for each row. Note that the <code>ename</code>, <code>sal</code>, and <code>comm</code> columns use the <code>APEX_ITEM</code>.<code>TEXT</code> function to generate an HTML text field for each row. Also, notice that each item in the query is passed a unique <code>p_idx</code> parameter to ensure that each column is stored in its own array.</p>
<pre>
SELECT 
  empno, 
  APEX_ITEM.HIDDEN(1,empno)||
  APEX_ITEM.TEXT(2,ename) ename, 
  APEX_ITEM.TEXT(3,job) job, 
  mgr, 
  APEX_ITEM.DATE_POPUP(4,rownum,hiredate,'dd-mon-yyyy') hiredate,
  APEX_ITEM.TEXT(5,sal) sal, 
  APEX_ITEM.TEXT(6,comm) comm,
  deptno
FROM emp
ORDER BY 1
</pre></div>
<!-- class="refsect1" -->
<a id="CHDJJFGG"></a>
<hr />
<div id="AEAPI210" class="refsect1">
<h2 class="refsect1">TEXTAREA Function</h2>
<p>This function creates text areas.</p>
<p class="subhead2"><a id="AEAPI808"></a>Syntax</p>
<pre>
APEX_ITEM.TEXTAREA(
    p_idx         IN    NUMBER,
    p_value       IN    VARCHAR2 DEFAULT NULL,
    p_rows        IN    NUMBER DEAULT 40,
    p_cols        IN    NUMBER DEFAULT 4,
    p_attributes  IN    VARCHAR2 DEFAULT NULL,
    p_item_id     IN    VARCHAR2 DEFAULT NULL,
    p_item_label  IN    VARCHAR2 DEFAULT NULL)
    RETURN VARCHAR2;
</pre>
<p class="subhead2"><a id="AEAPI809"></a>Parameters</p>
<p><a href="#BABGHDEF">Table 3-18</a> describes the parameters available in the <code>TEXTAREA</code> function.</p>
<div id="AEAPI810" class="tblformal">
<p class="titleintable"><a id="sthref111"></a><a id="BABGHDEF"></a>Table 3-18 TEXTAREA Parameters</p>
<table class="cellalignment965" title="TEXTAREA Parameters" summary="This table describes the parameters available in TEXTAREA." dir="ltr">
<thead>
<tr class="cellalignment959">
<th class="cellalignment966" id="r1c1-t20">Parameter</th>
<th class="cellalignment966" id="r1c2-t20">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment959">
<td class="cellalignment967" id="r2c1-t20" headers="r1c1-t20">
<p><code>p_idx</code></p>
</td>
<td class="cellalignment967" headers="r2c1-t20 r1c2-t20">
<p>Number to identify the item you want to generate. The number will determine which <code>G_FXX</code> global is populated.</p>
<p><span class="bold">See Also:</span> <a href="apex_app.htm#CHDDADIE">"APEX_APPLICATION"</a></p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r3c1-t20" headers="r1c1-t20">
<p><code>p_value</code></p>
</td>
<td class="cellalignment967" headers="r3c1-t20 r1c2-t20">
<p>Value of the text area item.</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r4c1-t20" headers="r1c1-t20">
<p><code>p_rows</code></p>
</td>
<td class="cellalignment967" headers="r4c1-t20 r1c2-t20">
<p>Height of the text area (HTML rows attribute)</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r5c1-t20" headers="r1c1-t20">
<p><code>p_cols</code></p>
</td>
<td class="cellalignment967" headers="r5c1-t20 r1c2-t20">
<p>Width of the text area (HTML column attribute).</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r6c1-t20" headers="r1c1-t20">
<p><code>p_attributes</code></p>
</td>
<td class="cellalignment967" headers="r6c1-t20 r1c2-t20">
<p>Extra HTML parameters you want to add.</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r7c1-t20" headers="r1c1-t20">
<p><code>p_item_id</code></p>
</td>
<td class="cellalignment967" headers="r7c1-t20 r1c2-t20">
<p>HTML attribute ID for the <code>&lt;textarea&gt;</code> tag.</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r8c1-t20" headers="r1c1-t20">
<p><code>p_item_label</code></p>
</td>
<td class="cellalignment967" headers="r8c1-t20 r1c2-t20">
<p>Invisible label created for the item.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI811"></a>Example</p>
<p>The following example demonstrates how to create a text area based on a SQL query.</p>
<pre>
SELECT APEX_ITEM.TEXTAREA(3,ename,5,80) a
FROM emp
</pre></div>
<!-- class="refsect1" -->
<a id="CHDEBBHH"></a>
<hr />
<div id="AEAPI212" class="refsect1">
<h2 class="refsect1">TEXT_FROM_LOV Function</h2>
<p>Use this function to display an item as text, deriving the display value of the named LOV.</p>
<p class="subhead2"><a id="AEAPI812"></a>Syntax</p>
<pre>
APEX_ITEM.TEXT_FROM_LOV (
    p_value       IN    VARCHAR2 DEFAULT NULL,
    p_lov         IN    VARCHAR2,
    p_null_text   IN    VARCHAR2 DEFAULT '%')
    RETURN VARCHAR2;
</pre>
<p class="subhead2"><a id="AEAPI813"></a>Parameters</p>
<p><a href="#CHDHHHCC">Table 3-19</a> describes the parameters available in the <code>TEXT_FROM_LOV</code> function.</p>
<div id="AEAPI814" class="tblformal">
<p class="titleintable"><a id="sthref112"></a><a id="CHDHHHCC"></a>Table 3-19 TEXT_FROM_LOV Parameters</p>
<table class="cellalignment965" title="TEXT_FROM_LOV Parameters" summary="This table describes the parameters available in TEXT_FROM_LOV." dir="ltr">
<thead>
<tr class="cellalignment959">
<th class="cellalignment966" id="r1c1-t21">Parameter</th>
<th class="cellalignment966" id="r1c2-t21">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment959">
<td class="cellalignment967" id="r2c1-t21" headers="r1c1-t21">
<p><code>p_value</code></p>
</td>
<td class="cellalignment967" headers="r2c1-t21 r1c2-t21">
<p>Value of a field item.</p>
<p>Note that if <code>p_value</code> is not located in the list of values, <code>p_null_text</code> is value displayed.</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r3c1-t21" headers="r1c1-t21">
<p><code>p_lov</code></p>
</td>
<td class="cellalignment967" headers="r3c1-t21 r1c2-t21">
<p>Text name of a shared list of values. This list of values must be defined in your application.</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r4c1-t21" headers="r1c1-t21">
<p><code>p_null_text</code></p>
</td>
<td class="cellalignment967" headers="r4c1-t21 r1c2-t21">
<p>Value displayed when the value of the field item is NULL.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI815"></a>Example</p>
<p>The following example demonstrates how to derive the display value from a named LOV (<code>EMPNO_ENAME_LOV</code>).</p>
<pre>
SELECT APEX_ITEM.TEXT_FROM_LOV(empno,'EMPNO_ENAME_LOV') c FROM emp
</pre></div>
<!-- class="refsect1" -->
<a id="CHDJBFFI"></a>
<hr />
<div id="AEAPI213" class="refsect1">
<h2 class="refsect1">TEXT_FROM_LOV_QUERY Function</h2>
<p>Use this function to display an item as text, deriving the display value from a list of values query.</p>
<p class="subhead2"><a id="AEAPI816"></a>Syntax</p>
<pre>
APEX_ITEM.TEXT_FROM_LOV_QUERY (
    p_value       IN    VARCHAR2 DEFAULT NULL,
    p_query       IN    VARCHAR2,
    p_null_text   IN    VARCHAR2 DEFAULT '%')
    RETURN VARCHAR2;
</pre>
<p class="subhead2"><a id="AEAPI817"></a>Parameters</p>
<p><a href="#BABIFEEC">Table 3-20</a> describes the parameters available in the <code>TEXT_FROM_LOV_QUERY</code> function.</p>
<div id="AEAPI818" class="tblformal">
<p class="titleintable"><a id="sthref113"></a><a id="BABIFEEC"></a>Table 3-20 TEXT_FROM_LOV_QUERY Parameters</p>
<table class="cellalignment965" title="TEXT_FROM_LOV_QUERY Parameters" summary="This table describes the parameters available in TEXT_FROM_LOV_QUERY." dir="ltr">
<thead>
<tr class="cellalignment959">
<th class="cellalignment966" id="r1c1-t22">Parameter</th>
<th class="cellalignment966" id="r1c2-t22">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment959">
<td class="cellalignment967" id="r2c1-t22" headers="r1c1-t22">
<p><code>p_value</code></p>
</td>
<td class="cellalignment967" headers="r2c1-t22 r1c2-t22">
<p>Value of a field item.</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r3c1-t22" headers="r1c1-t22">
<p><code>p_query</code></p>
</td>
<td class="cellalignment967" headers="r3c1-t22 r1c2-t22">
<p>SQL query that is expected to select two columns, a display column and a return column. For example:</p>
<pre>
SELECT dname, deptno FROM dept
</pre>
<p>Note if only one column is specified in the select clause of this query, the value for this column will be used for both display and return purposes.</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r4c1-t22" headers="r1c1-t22">
<p><code>p_null_text</code></p>
</td>
<td class="cellalignment967" headers="r4c1-t22 r1c2-t22">
<p>Value to be displayed when the value of the field item is NULL or a corresponding entry is not located for the value <code>p_value</code> in the list of values query.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI819"></a>Example</p>
<p>The following example demonstrates how to derive the display value from a query.</p>
<pre>
SELECT APEX_ITEM.TEXT_FROM_LOV_QUERY(empno,'SELECT ename, empno FROM emp') c from emp
</pre></div>
<!-- class="refsect1" --></div>
<!-- class="refentry" --></div>
<!-- class="chapter" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment958">
<tr>
<td class="cellalignment967">
<table class="cellalignment963">
<tr>
<td class="cellalignment962"><a href="apex_mail.htm"><img width="24" height="24" src="../../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment962"><a href="apex_app.htm"><img width="24" height="24" src="../../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;2003, 2013,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment969">
<table class="cellalignment961">
<tr>
<td class="cellalignment962"><a href="../../index.htm"><img width="24" height="24" src="../../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment962"><a href="../../nav/portal_booklist.htm"><img width="24" height="24" src="../../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment962"><a href="toc.htm"><img width="24" height="24" src="../../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment962"><a href="../../nav/mindx.htm"><img width="24" height="24" src="../../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment962"><a href="../../dcommon/html/feedback.htm"><img width="24" height="24" src="../../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>
</body>
</html>
