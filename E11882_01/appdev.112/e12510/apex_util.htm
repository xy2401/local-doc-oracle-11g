<!DOCTYPE html>
<html lang="en" >
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1">
<meta charset="utf-8">
<title>APEX_UTIL</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Version 5.1.2 Build 736" />
<meta name="dcterms.created" content="2013-08-06T16:48:13Z" />
<meta name="robots" content="all" />
<meta name="dcterms.title" content="Application Express API Reference" />
<meta name="dcterms.identifier" content="E12510-02" />
<meta name="dcterms.isVersionOf" content="AEAPI" />
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;2003, 2013,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved." />
<link rel="Start" href="../../index.htm" title="Home" type="text/html" />
<link rel="Copyright" href="../../dcommon/html/cpyr.htm" title="Copyright" type="text/html" />

<script type="application/javascript"  src="../../dcommon/js/headfoot.js"></script>
<script type="application/javascript"  src="../../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html" />
<link rel="Prev" href="preface.htm" title="Previous" type="text/html" />
<link rel="Next" href="apex_mail.htm" title="Next" type="text/html" />
<link rel="alternate" href="../e12510.pdf" title="PDF version" type="application/pdf" />
<link rel="schema.dcterms" href="http://purl.org/dc/terms/" />
<link rel="stylesheet" href="../../dcommon/css/fusiondoc.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/header.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/footer.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/fonts.css">
<link rel="stylesheet" href="../../dcommon/css/foundation.css">
<link rel="stylesheet" href="../../dcommon/css/codemirror.css">
<link rel="stylesheet" type="text/css" title="Default" href="../../nav/css/html5.css">
<link rel="stylesheet" href="../../dcommon/css/respond-480-tablet.css">
<link rel="stylesheet" href="../../dcommon/css/respond-768-laptop.css">
<link rel="stylesheet" href="../../dcommon/css/respond-1140-deskop.css">
<script type="application/javascript" src="../../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">4/14</span> <!-- End Header -->
<div id="AEAPI101" class="chapter"><a id="CHDIEDJH"></a>
<h1 class="chapter"><span class="secnum">1</span> APEX_UTIL</h1>
<p>The <code>APEX_UTIL</code> package provides utilities you can use when programming in the Oracle Application Express environment. You can use the <code>APEX_UTIL</code> package to get and set session state, get files, check authorizations for users, reset different states for users, get and purge cache information and also to get and set preferences for users.</p>
<p>Topics in this section include:</p>
<ul>
<li>
<p><a href="#CHDDHJHE">CACHE_GET_DATE_OF_PAGE_CACHE Function</a></p>
</li>
<li>
<p><a href="#CHDFCGDF">CACHE_GET_DATE_OF_REGION_CACHE Function</a></p>
</li>
<li>
<p><a href="#CHDECEGE">CACHE_PURGE_BY_APPLICATION Procedure</a></p>
</li>
<li>
<p><a href="#CHDEGECD">CACHE_PURGE_BY_PAGE Procedure</a></p>
</li>
<li>
<p><a href="#CHDJAFAB">CACHE_PURGE_STALE Procedure</a></p>
</li>
<li>
<p><a href="#BABHDJHD">CHANGE_CURRENT_USER_PW Procedure</a></p>
</li>
<li>
<p><a href="#CHDFJCDH">CHANGE_PASSWORD_ON_FIRST_USE Function</a></p>
</li>
<li>
<p><a href="#CHDEGFII">CLEAR_APP_CACHE Procedure</a></p>
</li>
<li>
<p><a href="#BABCIAFJ">CLEAR_PAGE_CACHE Procedure</a></p>
</li>
<li>
<p><a href="#CHDIADIJ">CLEAR_USER_CACHE Procedure</a></p>
</li>
<li>
<p><a href="#CHDBHDFF">COUNT_CLICK Procedure</a></p>
</li>
<li>
<p><a href="#BABCFBGG">CREATE_USER Procedure</a></p>
</li>
<li>
<p><a href="#BABCCAFG">CREATE_USER_GROUP Procedure</a></p>
</li>
<li>
<p><a href="#BABHCBEG">CURRENT_USER_IN_GROUP Function</a></p>
</li>
<li>
<p><a href="#CHDGFADB">DOWNLOAD_PRINT_DOCUMENT Procedure Signature 1</a></p>
</li>
<li>
<p><a href="#CHDHGFDA">DOWNLOAD_PRINT_DOCUMENT Procedure Signature 2</a></p>
</li>
<li>
<p><a href="#CHDGIFJD">DOWNLOAD_PRINT_DOCUMENT Procedure Signature 3</a></p>
</li>
<li>
<p><a href="#CHDFIGIJ">DOWNLOAD_PRINT_DOCUMENT Procedure Signature 4</a></p>
</li>
<li>
<p><a href="#BABGDGJH">EDIT_USER Procedure</a></p>
</li>
<li>
<p><a href="#CHDGFAHB">END_USER_ACCOUNT_DAYS_LEFT Function</a></p>
</li>
<li>
<p><a href="#CHDEGHHE">EXPIRE_END_USER_ACCOUNT Procedure</a></p>
</li>
<li>
<p><a href="#CHDDBEEE">EXPIRE_WORKSPACE_ACCOUNT Procedure</a></p>
</li>
<li>
<p><a href="#BABCDACJ">EXPORT_USERS Procedure</a></p>
</li>
<li>
<p><a href="#BABIBAID">FETCH_APP_ITEM Function</a></p>
</li>
<li>
<p><a href="#CHDJJGIB">FETCH_USER Procedure Signature 1</a></p>
</li>
<li>
<p><a href="#CHDCEGHH">FETCH_USER Procedure Signature 2</a></p>
</li>
<li>
<p><a href="#BABDAHCJ">FETCH_USER Procedure Signature 3</a></p>
</li>
<li>
<p><a href="#BABBEIEJ">FIND_SECURITY_GROUP_ID Function</a></p>
</li>
<li>
<p><a href="#BABFICHD">FIND_WORKSPACE Function</a></p>
</li>
<li>
<p><a href="#CHDIFICC">GET_ACCOUNT_LOCKED_STATUS Function</a></p>
</li>
<li>
<p><a href="#BABJAHCE">GET_ATTRIBUTE Function</a></p>
</li>
<li>
<p><a href="#CHDICEAJ">GET_AUTHENTICATION_RESULT Function</a></p>
</li>
<li>
<p><a href="#CHDICGDA">GET_BLOB_FILE_SRC Function</a></p>
</li>
<li>
<p><a href="#BABCHECD">GET_CURRENT_USER_ID Function</a></p>
</li>
<li>
<p><a href="#BABIEDHD">GET_DEFAULT_SCHEMA Function</a></p>
</li>
<li>
<p><a href="#BABGIEJC">GET_EMAIL Function</a></p>
</li>
<li>
<p><a href="#CHDHEEAF">GET_FILE Procedure</a></p>
</li>
<li>
<p><a href="#CHDICJGD">GET_FILE_ID Function</a></p>
</li>
<li>
<p><a href="#BABFFJGB">GET_FIRST_NAME Function</a></p>
</li>
<li>
<p><a href="#BABGHFGB">GET_GROUPS_USER_BELONGS_TO Function</a></p>
</li>
<li>
<p><a href="#BABFECFJ">GET_GROUP_ID Function</a></p>
</li>
<li>
<p><a href="#BABIDGGD">GET_GROUP_NAME Function</a></p>
</li>
<li>
<p><a href="#BABCAAGG">GET_LAST_NAME Function</a></p>
</li>
<li>
<p><a href="#CHDBHEAD">GET_NUMERIC_SESSION_STATE Function</a></p>
</li>
<li>
<p><a href="#CHDJJBGI">GET_PREFERENCE Function</a></p>
</li>
<li>
<p><a href="#CHDDECIA">GET_PRINT_DOCUMENT Function Signature 1</a></p>
</li>
<li>
<p><a href="#CHDHDDFI">GET_PRINT_DOCUMENT Function Signature 2</a></p>
</li>
<li>
<p><a href="#CHDJBJCF">GET_PRINT_DOCUMENT Function Signature 3</a></p>
</li>
<li>
<p><a href="#CHDCABJF">GET_PRINT_DOCUMENT Function Signature 4</a></p>
</li>
<li>
<p><a href="#CHDEJEJE">GET_SESSION_STATE Function</a></p>
</li>
<li>
<p><a href="#BABHDJCD">GET_USER_ID Function</a></p>
</li>
<li>
<p><a href="#BABCHEEH">GET_USER_ROLES Function</a></p>
</li>
<li>
<p><a href="#BABDBCCD">GET_USERNAME Function</a></p>
</li>
<li>
<p><a href="#BABEEGHB">IS_LOGIN_PASSWORD_VALID Function</a></p>
</li>
<li>
<p><a href="#BABBFADB">IS_USERNAME_UNIQUE Function</a></p>
</li>
<li>
<p><a href="#CDECGAHI">KEYVAL_NUM Function</a></p>
</li>
<li>
<p><a href="#CDEGEDHJ">KEYVAL_VC2 Function</a></p>
</li>
<li>
<p><a href="#CHDGCCHI">LOCK_ACCOUNT Procedure</a></p>
</li>
<li>
<p><a href="#CHDGCDII">PASSWORD_FIRST_USE_OCCURRED Function</a></p>
</li>
<li>
<p><a href="#CDEIBCJD">PREPARE_URL Function</a></p>
</li>
<li>
<p><a href="#CHDJHBFJ">PUBLIC_CHECK_AUTHORIZATION Function</a></p>
</li>
<li>
<p><a href="#CHDEJJJH">PURGE_REGIONS_BY_APP Procedure</a></p>
</li>
<li>
<p><a href="#CHDICGBE">PURGE_REGIONS_BY_NAME Procedure</a></p>
</li>
<li>
<p><a href="#CHDGAGJA">PURGE_REGIONS_BY_PAGE Procedure</a></p>
</li>
<li>
<p><a href="#CHDIBDEC">REMOVE_PREFERENCE Procedure</a></p>
</li>
<li>
<p><a href="#CHDHDFHB">REMOVE_SORT_PREFERENCES Procedure</a></p>
</li>
<li>
<p><a href="#BABCBJDG">REMOVE_USER Procedure</a></p>
</li>
<li>
<p><a href="#CHDHBBFF">RESET_AUTHORIZATIONS Procedure</a></p>
</li>
<li>
<p><a href="#BABHJDHG">RESET_PW Procedure</a></p>
</li>
<li>
<p><a href="#CDECCEAJ">SAVEKEY_NUM Function</a></p>
</li>
<li>
<p><a href="#CDEIHDAA">SAVEKEY_VC2 Function</a></p>
</li>
<li>
<p><a href="#CDEJDGEF">SET_ATTRIBUTE Procedure</a></p>
</li>
<li>
<p><a href="#CHDCAECI">SET_AUTHENTICATION_RESULT Procedure</a></p>
</li>
<li>
<p><a href="#CHDHHJGJ">SET_CUSTOM_AUTH_STATUS Procedure</a></p>
</li>
<li>
<p><a href="#BABFCJDC">SET_EMAIL Procedure</a></p>
</li>
<li>
<p><a href="#BABEFBED">SET_FIRST_NAME Procedure</a></p>
</li>
<li>
<p><a href="#BABIGGEF">SET_LAST_NAME Procedure</a></p>
</li>
<li>
<p><a href="#CHDJDCAC">SET_PREFERENCE Procedure</a></p>
</li>
<li>
<p><a href="#CHDDHJAH">SET_SESSION_LIFETIME_SECONDS Procedure</a></p>
</li>
<li>
<p><a href="#CHDGBIJH">SET_SESSION_MAX_IDLE_SECONDS Procedure</a></p>
</li>
<li>
<p><a href="#CHDBGEEC">SET_SESSION_STATE Procedure</a></p>
</li>
<li>
<p><a href="#BABIBIBH">SET_USERNAME Procedure</a></p>
</li>
<li>
<p><a href="#CHDDHGCB">STRONG_PASSWORD_CHECK Procedure</a></p>
</li>
<li>
<p><a href="#CHDCIGBH">STRONG_PASSWORD_VALIDATION Function</a></p>
</li>
<li>
<p><a href="#CHDFEEJD">STRING_TO_TABLE Function</a></p>
</li>
<li>
<p><a href="#CHDJBFHG">TABLE_TO_STRING Function</a></p>
</li>
<li>
<p><a href="#CHDEDBIF">UNEXPIRE_END_USER_ACCOUNT Procedure</a></p>
</li>
<li>
<p><a href="#CHDFDFDH">UNEXPIRE_WORKSPACE_ACCOUNT Procedure</a></p>
</li>
<li>
<p><a href="#CHDBFABJ">UNLOCK_ACCOUNT Procedure</a></p>
</li>
<li>
<p><a href="#CHDHEFFG">URL_ENCODE Function</a></p>
</li>
<li>
<p><a href="#CHDHBAEH">WORKSPACE_ACCOUNT_DAYS_LEFT Function</a></p>
</li>
</ul>
<div class="refentry"><a id="CHDDHJHE"></a>
<hr />
<div id="AEAPI103" class="refsect1">
<h2 class="refsect1">CACHE_GET_DATE_OF_PAGE_CACHE Function</h2>
<p>This function returns the date and time a specified application page was cached either for the user issuing the call, or for all users if the page was not set to be cached by user.</p>
<p class="subhead2"><a id="AEAPI368"></a>Syntax</p>
<pre>
APEX_UTIL.CACHE_GET_DATE_OF_PAGE_CACHE (
    p_application  IN    NUMBER,
    p_page         IN    NUMBER)
RETURN DATE;
</pre>
<p class="subhead2"><a id="AEAPI369"></a>Parameters</p>
<p><a href="#CHDHEFDF">Table 1-1</a> describes the parameters available in the <code>CACHE_GET_DATE_OF_PAGE_CACHE</code> procedure.</p>
<div id="AEAPI370" class="tblformal">
<p class="titleintable"><a id="sthref5"></a><a id="CHDHEFDF"></a>Table 1-1 CACHE_GET_DATE_OF_PAGE_CACHE Parameters</p>
<table class="cellalignment965" title="CACHE_GET_DATE_OF_PAGE_CACHE Parameters" summary="This table describes the parameters available in the CACHE_GET_DATE_OF_PAGE_CACHE procedure." dir="ltr">
<thead>
<tr class="cellalignment959">
<th class="cellalignment966" id="r1c1-t2">Parameter</th>
<th class="cellalignment966" id="r1c2-t2">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment959">
<td class="cellalignment967" id="r2c1-t2" headers="r1c1-t2">
<p><code>p_application</code></p>
</td>
<td class="cellalignment967" headers="r2c1-t2 r1c2-t2">
<p>The identification number (ID) of the application.</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r3c1-t2" headers="r1c1-t2">
<p><code>p_page</code></p>
</td>
<td class="cellalignment967" headers="r3c1-t2 r1c2-t2">
<p>The page number (ID).</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI371"></a>Example</p>
<p>The following example demonstrates how to use the <code>CACHE_GET_DATE_OF_PAGE_CACHE</code> function to retrieve the cache date and time for page 9 of the currently executing application. If page 9 has been cached, the cache date and time is output using the HTP package. The page could have been cached either by the user issuing the call, or for all users if the page was not to be cached by the user.</p>
<pre>
DECLARE
    l_cache_date DATE DEFAULT NULL;
BEGIN
    l_cache_date := APEX_UTIL.CACHE_GET_DATE_OF_PAGE_CACHE(
                        p_application =&gt; :APP_ID,
                        p_page =&gt; 9);
    IF l_cache_date IS NOT NULL THEN
        HTP.P('Cached on ' || TO_CHAR(l_cache_date, 'DD-MON-YY HH24:MI:SS'));
    END IF;
END;
</pre></div>
<!-- class="refsect1" -->
<a id="CHDFCGDF"></a>
<hr />
<div id="AEAPI104" class="refsect1">
<h2 class="refsect1">CACHE_GET_DATE_OF_REGION_CACHE Function</h2>
<p>This function returns the date and time a specified region was cached either for the user issuing the call, or for all users if the page was not set to be cached by user.</p>
<p class="subhead2"><a id="AEAPI372"></a>Syntax</p>
<pre>
APEX_UTIL.CACHE_GET_DATE_OF_REGION_CACHE (
    p_application  IN    NUMBER,
    p_page         IN    NUMBER,
    p_region_name  IN    VARCHAR2)
RETURN DATE;
</pre>
<p class="subhead2"><a id="AEAPI373"></a>Parameters</p>
<p><a href="#CHDJHJFG">Table 1-2</a> describes the parameters available in the <code>CACHE_GET_DATE_OF_REGION_CACHE</code> function.</p>
<div id="AEAPI374" class="tblformal">
<p class="titleintable"><a id="sthref6"></a><a id="CHDJHJFG"></a>Table 1-2 CACHE_GET_DATE_OF_REGION_CACHE Parameters</p>
<table class="cellalignment965" title="CACHE_GET_DATE_OF_REGION_CACHE Parameters" summary="This table describes the parameters available in the CACHE_GET_DATE_OF_REGION_CACHE procedure." dir="ltr">
<thead>
<tr class="cellalignment959">
<th class="cellalignment966" id="r1c1-t3">Parameter</th>
<th class="cellalignment966" id="r1c2-t3">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment959">
<td class="cellalignment967" id="r2c1-t3" headers="r1c1-t3">
<p><code>p_application</code></p>
</td>
<td class="cellalignment967" headers="r2c1-t3 r1c2-t3">
<p>The identification number (ID) of the application</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r3c1-t3" headers="r1c1-t3">
<p><code>p_page</code></p>
</td>
<td class="cellalignment967" headers="r3c1-t3 r1c2-t3">
<p>The page number (ID)</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r4c1-t3" headers="r1c1-t3">
<p><code>p_region_name</code></p>
</td>
<td class="cellalignment967" headers="r4c1-t3 r1c2-t3">
<p>The region name</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI375"></a>Example</p>
<p>The following example demonstrates how to use the <code>CACHE_GET_DATE_OF_REGION_CACHE</code> function to retrieve the cache date and time for the region named Cached Region on page 13 of the currently executing application. If the region has been cached, the cache date and time is output using the HTP package. The region could have been cached either by the user issuing the call, or for all users if the page was not to be cached by user.</p>
<pre>
DECLARE
    l_cache_date DATE DEFAULT NULL;
BEGIN
    l_cache_date := APEX_UTIL.CACHE_GET_DATE_OF_REGION_CACHE(
        p_application =&gt; :APP_ID,
        p_page =&gt; 13,
        p_region_name =&gt; 'Cached Region');
    IF l_cache_date IS NOT NULL THEN
        HTP.P('Cached on ' || TO_CHAR(l_cache_date, 'DD-MON-YY HH24:MI:SS'));
    END IF;
END;
</pre></div>
<!-- class="refsect1" -->
<a id="CHDECEGE"></a>
<hr />
<div id="AEAPI105" class="refsect1">
<h2 class="refsect1">CACHE_PURGE_BY_APPLICATION Procedure</h2>
<p>This procedure purges all cached pages and regions for a given application.</p>
<p class="subhead2"><a id="AEAPI376"></a>Syntax</p>
<pre>
APEX_UTIL.CACHE_PURGE_BY_APPLICATION (
    p_application  IN  NUMBER);
</pre>
<p class="subhead2"><a id="AEAPI377"></a>Parameters</p>
<p><a href="#CHDEDHIB">Table 1-3</a> describes the parameters available in the <code>CACHE_PURGE_BY_APPLICATION</code> procedure.</p>
<div id="AEAPI378" class="tblformal">
<p class="titleintable"><a id="sthref7"></a><a id="CHDEDHIB"></a>Table 1-3 CACHE_PURGE_BY_APPLICATION Parameters</p>
<table class="cellalignment965" title="CACHE_PURGE_BY_APPLICATION Parameters" summary="This table describes the parameters available in the CACHE_PURGE_BY_APPLICATION procedure." dir="ltr">
<thead>
<tr class="cellalignment959">
<th class="cellalignment966" id="r1c1-t4">Parameter</th>
<th class="cellalignment966" id="r1c2-t4">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment959">
<td class="cellalignment967" id="r2c1-t4" headers="r1c1-t4">
<p><code>p_application</code></p>
</td>
<td class="cellalignment967" headers="r2c1-t4 r1c2-t4">
<p>The identification number (ID) of the application.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI379"></a>Example</p>
<p>The following example demonstrates how to use the <code>CACHE_PURGE_BY_APPLICATION</code> procedure to purge all the cached pages and regions for the application currently executing.</p>
<pre>
BEGIN
    APEX_UTIL.CACHE_PURGE_BY_APPLICATION(p_application =&gt; :APP_ID);
END;
</pre></div>
<!-- class="refsect1" -->
<a id="CHDEGECD"></a>
<hr />
<div id="AEAPI106" class="refsect1">
<h2 class="refsect1">CACHE_PURGE_BY_PAGE Procedure</h2>
<p>This procedure purges the cache for a given application and page. If the page itself is not cached but contains one or more cached regions, then the cache for these will also be purged.</p>
<p class="subhead2"><a id="AEAPI380"></a>Syntax</p>
<pre>
APEX_UTIL.CACHE_PURGE_BY_PAGE (
    p_application  IN    NUMBER,
    p_page         IN    NUMBER,
    p_user_name    IN    VARCHAR2 DEFAULT NULL);
</pre>
<p class="subhead2"><a id="AEAPI381"></a>Parameters</p>
<p><a href="#CHDFHAEH">Table 1-4</a> describes the parameters available in the <code>CACHE_PURGE_BY_PAGE</code> procedure.</p>
<div id="AEAPI382" class="tblformal">
<p class="titleintable"><a id="sthref8"></a><a id="CHDFHAEH"></a>Table 1-4 CACHE_PURGE_BY_PAGE Parameters</p>
<table class="cellalignment965" title="CACHE_PURGE_BY_PAGE Parameters" summary="This table describes the parameters available in the CACHE_PURGE_BY_PAGE procedure." dir="ltr">
<thead>
<tr class="cellalignment959">
<th class="cellalignment966" id="r1c1-t5">Parameter</th>
<th class="cellalignment966" id="r1c2-t5">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment959">
<td class="cellalignment967" id="r2c1-t5" headers="r1c1-t5">
<p><code>p_application</code></p>
</td>
<td class="cellalignment967" headers="r2c1-t5 r1c2-t5">
<p>The identification number (ID) of the application.</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r3c1-t5" headers="r1c1-t5">
<p><code>p_page</code></p>
</td>
<td class="cellalignment967" headers="r3c1-t5 r1c2-t5">
<p>The page number (ID).</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r4c1-t5" headers="r1c1-t5">
<p><code>p_user_name</code></p>
</td>
<td class="cellalignment967" headers="r4c1-t5 r1c2-t5">
<p>The user associated with cached pages and regions.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI383"></a>Example</p>
<p>The following example demonstrates how to use the <code>CACHE_PURGE_BY_PAGE</code> procedure to purge the cache for page 9 of the application currently executing. Additionally, if the <code>p_user_name</code> parameter is supplied, this procedure would be further restricted by a specific users cache (only relevant if the cache is set to be by user).</p>
<pre>
BEGIN
    APEX_UTIL.CACHE_PURGE_BY_PAGE(
        p_application =&gt; :APP_ID,
        p_page =&gt; 9);
END;
</pre></div>
<!-- class="refsect1" -->
<a id="CHDJAFAB"></a>
<hr />
<div id="AEAPI107" class="refsect1">
<h2 class="refsect1">CACHE_PURGE_STALE Procedure</h2>
<p>This procedure deletes all cached pages and regions for a specified application that have passed the defined active time period. When you cache a page or region, you specify an active time period (or Cache Timeout). Once that period has passed, the cache will no longer be used, thus removing those unusable pages or regions from the cache.</p>
<p class="subhead2"><a id="AEAPI384"></a>Syntax</p>
<pre>
APEX_UTIL.CACHE_PURGE_STALE (
    p_application  IN    NUMBER);
</pre>
<p class="subhead2"><a id="AEAPI385"></a>Parameters</p>
<p><a href="#CHDGJHBI">Table 1-5</a> describes the parameters available in the <code>CACHE_PURGE_STALE</code> procedure.</p>
<div id="AEAPI386" class="tblformal">
<p class="titleintable"><a id="sthref9"></a><a id="CHDGJHBI"></a>Table 1-5 CACHE_PURGE_STALE Parameters</p>
<table class="cellalignment965" title="CACHE_PURGE_STALE Parameters" summary="This table describes the parameters available in the CACHE_PURGE_STALE procedure." dir="ltr">
<thead>
<tr class="cellalignment959">
<th class="cellalignment966" id="r1c1-t6">Parameter</th>
<th class="cellalignment966" id="r1c2-t6">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment959">
<td class="cellalignment967" id="r2c1-t6" headers="r1c1-t6">
<p><code>p_application</code></p>
</td>
<td class="cellalignment967" headers="r2c1-t6 r1c2-t6">
<p>The identification number (ID) of the application.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI387"></a>Example</p>
<p>The following example demonstrates how to use the CACHE_PURGE_STALE procedure to purge all the stale pages and regions in the application currently executing.</p>
<pre>
BEGIN
    APEX_UTIL.CACHE_PURGE_STALE(p_application =&gt; :APP_ID);
END;
</pre></div>
<!-- class="refsect1" -->
<a id="BABHDJHD"></a>
<hr />
<div id="AEAPI102" class="refsect1">
<h2 class="refsect1">CHANGE_CURRENT_USER_PW Procedure</h2>
<p>This procedure changes the password of the currently authenticated user, assuming Application Express user accounts are in use.</p>
<p class="subhead2"><a id="AEAPI388"></a>Syntax</p>
<pre>
APEX_UTIL.CHANGE_CURRENT_USER_PW(
    p_new_password IN VARCHAR2);
</pre>
<p class="subhead2"><a id="AEAPI389"></a>Parameters</p>
<p><a href="#BABCGHGA">Table 1-6</a> describes the parameters available in the <code>CHANGE_CURRENT_USER_PW</code> procedure.</p>
<div id="AEAPI390" class="tblformal">
<p class="titleintable"><a id="sthref10"></a><a id="BABCGHGA"></a>Table 1-6 CHANGE_CURRENT_USER_PW Parameters</p>
<table class="cellalignment965" title="CHANGE_CURRENT_USER_PW Parameters" summary="This table describes the parameters available in the CHANGE_CURRENT_USER_PW procedure." dir="ltr">
<thead>
<tr class="cellalignment959">
<th class="cellalignment966" id="r1c1-t7">Parameter</th>
<th class="cellalignment966" id="r1c2-t7">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment959">
<td class="cellalignment967" id="r2c1-t7" headers="r1c1-t7">
<p><code>p_new_password</code></p>
</td>
<td class="cellalignment967" headers="r2c1-t7 r1c2-t7">
<p>The new password value in clear text</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI391"></a>Example</p>
<p>The following example demonstrates how to use the <code>CHANGE_CURRENT_USER_PW</code> procedure to change the password for the user who is currently authenticated, assuming Application Express accounts are in use.</p>
<pre>
BEGIN
    APEX_UTIL.CHANGE_CURRENT_USER_PW ('secret99');
END;
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#CHDGAIHJ">"RESET_PW Procedure"</a></div>
</div>
<!-- class="refsect1" -->
<a id="CHDFJCDH"></a>
<hr />
<div id="AEAPI108" class="refsect1">
<h2 class="refsect1">CHANGE_PASSWORD_ON_FIRST_USE Function</h2>
<p>Enables a developer to check whether this property is enabled or disabled for an end user account. This function returns true if the account password must be changed upon first use (after successful authentication) after the password is initially set and after it is changed on the Administration Service, Edit User page. This function returns false if the account does not have this property.</p>
<p>This function may be run in a page request context by any authenticated user.</p>
<p class="subhead2"><a id="AEAPI392"></a>Syntax</p>
<pre>
APEX_UTIL.CHANGE_PASSWORD_ON_FIRST_USE (
    p_user_name IN VARCHAR2)
RETURN BOOLEAN;
</pre>
<p class="subhead2"><a id="AEAPI393"></a>Parameters</p>
<p><a href="#CHDDBHIA">Table 1-7</a> describes the parameters available in the <code>CHANGE_PASSWORD_ON_FIRST_USE</code> function.</p>
<div id="AEAPI394" class="tblformal">
<p class="titleintable"><a id="sthref11"></a><a id="CHDDBHIA"></a>Table 1-7 CHANGE_PASSWORD_ON_FIRST_USE Parameters</p>
<table class="cellalignment965" title="CHANGE_PASSWORD_ON_FIRST_USE Parameters" summary="This table describes the parameters available in the CHANGE_PASSWORD_ON_FIRST_USE function." dir="ltr">
<thead>
<tr class="cellalignment959">
<th class="cellalignment966" id="r1c1-t9">Parameter</th>
<th class="cellalignment966" id="r1c2-t9">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment959">
<td class="cellalignment967" id="r2c1-t9" headers="r1c1-t9">
<p><code>p_user_name</code></p>
</td>
<td class="cellalignment967" headers="r2c1-t9 r1c2-t9">
<p>The user name of the user account</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI395"></a>Example</p>
<p>The following example demonstrates how to use the <code>CHANGE_PASSWORD_ON_FIRST_USE</code> function. Use this function to check if the password of an Application Express user account (workspace administrator, developer, or end user) in the current workspace must be changed by the user the first time it is used.</p>
<pre>
BEGIN
    FOR c1 IN (SELECT user_name FROM wwv_flow_users) LOOP
        IF APEX_UTIL.CHANGE_PASSWORD_ON_FIRST_USE(p_user_name =&gt; c1.user_name) THEN
            htp.p('User:'||c1.user_name||' requires password to be changed the first time it is used.');
        END IF;
    END LOOP;
END;
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#CHDGCDII">"PASSWORD_FIRST_USE_OCCURRED Function"</a></div>
</div>
<!-- class="refsect1" -->
<a id="CHDEGFII"></a>
<hr />
<div id="AEAPI109" class="refsect1">
<h2 class="refsect1">CLEAR_APP_CACHE Procedure</h2>
<p>This procedure removes session state for a given application for the current session.</p>
<p class="subhead2"><a id="AEAPI396"></a>Syntax</p>
<pre>
APEX_UTIL.CLEAR_APP_CACHE (
    p_app_id    IN    VARCHAR2 DEFAULT NULL);
</pre>
<p class="subhead2"><a id="AEAPI397"></a>Parameters</p>
<p><a href="#BABEBBDG">Table 1-8</a> describes the parameters available in the <code>CLEAR_APP_CACHE</code> procedure.</p>
<div id="AEAPI398" class="tblformal">
<p class="titleintable"><a id="sthref12"></a><a id="BABEBBDG"></a>Table 1-8 CLEAR_APP_CACHE Parameters</p>
<table class="cellalignment965" title="CLEAR_APP_CACHE Parameters" summary="This table describes the parameters available in the CLEAR_APP_CACHE procedure." dir="ltr">
<thead>
<tr class="cellalignment959">
<th class="cellalignment966" id="r1c1-t11">Parameter</th>
<th class="cellalignment966" id="r1c2-t11">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment959">
<td class="cellalignment967" id="r2c1-t11" headers="r1c1-t11">
<p><code>p_app_id</code></p>
</td>
<td class="cellalignment967" headers="r2c1-t11 r1c2-t11">
<p>The ID of the application for which session state will be cleared for current session</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI399"></a>Example</p>
<p>The following example demonstrates how to use the CLEAR_APP_CACHE procedure to clear all the current sessions state for the application with an ID of 100.</p>
<pre>
BEGIN
    APEX_UTIL.CLEAR_APP_CACHE('100');
END;
</pre></div>
<!-- class="refsect1" -->
<a id="BABCIAFJ"></a>
<hr />
<div id="AEAPI110" class="refsect1">
<h2 class="refsect1">CLEAR_PAGE_CACHE Procedure</h2>
<p>This procedure removes session state for a given page for the current session.</p>
<p class="subhead2"><a id="AEAPI400"></a>Syntax</p>
<pre>
APEX_UTIL.CLEAR_PAGE_CACHE (
    p_page IN NUMBER DEFAULT NULL);
</pre>
<p class="subhead2"><a id="AEAPI401"></a>Parameters</p>
<p><a href="#BABDAEHJ">Table 1-9</a> describes the parameters available in the <code>CLEAR_PAGE_CACHE</code> procedure.</p>
<div id="AEAPI402" class="tblformal">
<p class="titleintable"><a id="sthref13"></a><a id="BABDAEHJ"></a>Table 1-9 CLEAR_PAGE_CACHE Parameters</p>
<table class="cellalignment965" title="CLEAR_PAGE_CACHE Parameters" summary="This table describes the parameters available in the CLEAR_PAGE_CACHE procedure." dir="ltr">
<thead>
<tr class="cellalignment959">
<th class="cellalignment966" id="r1c1-t12">Parameter</th>
<th class="cellalignment966" id="r1c2-t12">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment959">
<td class="cellalignment967" id="r2c1-t12" headers="r1c1-t12">
<p><code>p_page</code></p>
</td>
<td class="cellalignment967" headers="r2c1-t12 r1c2-t12">
<p>The ID of the page in the current application for which session state will be cleared for current session.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI403"></a>Example</p>
<p>The following example demonstrates how to use the CLEAR_PAGE_CACHE procedure to clear the current session s state for the page with an ID of 10.</p>
<pre>
BEGIN
    APEX_UTIL.CLEAR_PAGE_CACHE('10');
END;
</pre></div>
<!-- class="refsect1" -->
<a id="CHDIADIJ"></a>
<hr />
<div id="AEAPI111" class="refsect1">
<h2 class="refsect1">CLEAR_USER_CACHE Procedure</h2>
<p>This procedure removes session state and application system preferences for the current user's session. Run this procedure if you reuse session IDs and want to run applications without the benefit of existing session state.</p>
<p class="subhead2"><a id="AEAPI404"></a>Syntax</p>
<pre>
APEX_UTIL.CLEAR_USER_CACHE;
</pre>
<p class="subhead2"><a id="AEAPI405"></a>Parameters</p>
<p>None.</p>
<p class="subhead2"><a id="AEAPI406"></a>Example</p>
<p>The following example demonstrates how to use the CLEAR_USER_CACHE procedure to clear all session state and application system preferences for the current user's session.</p>
<pre>
BEGIN
    APEX_UTIL.CLEAR_USER_CACHE;
END;
</pre></div>
<!-- class="refsect1" -->
<a id="CHDBHDFF"></a>
<hr />
<div id="AEAPI112" class="refsect1">
<h2 class="refsect1">COUNT_CLICK Procedure</h2>
<p>This procedure counts clicks from an application built in Application Builder to an external site. You can also use the shorthand version, procedure <code>Z</code>, in place of <code>APEX_UTIL</code>.<code>COUNT_CLICK</code>.</p>
<p class="subhead2"><a id="AEAPI407"></a>Syntax</p>
<pre>
APEX_UTIL.COUNT_CLICK (
    p_url         IN    VARCHAR2,
    p_cat         IN    VARCHAR2,
    p_id          IN    VARCHAR2    DEFAULT NULL,
    p_user        IN    VARCHAR2    DEFAULT NULL,
    p_workspace   IN    VARCHAR2    DEFAULT NULL);
</pre>
<p class="subhead2"><a id="AEAPI408"></a>Parameters</p>
<p><a href="#CHDFDDDI">Table 1-10</a> describes the parameters available in the <code>COUNT_CLICK</code> procedure.</p>
<div id="AEAPI409" class="tblformal">
<p class="titleintable"><a id="sthref14"></a><a id="CHDFDDDI"></a>Table 1-10 COUNT_CLICK Parameters</p>
<table class="cellalignment965" title="COUNT_CLICK Parameters" summary="This table describes the parameters available in the COUNT_CLICK procedure." dir="ltr">
<thead>
<tr class="cellalignment959">
<th class="cellalignment966" id="r1c1-t13">Parameter</th>
<th class="cellalignment966" id="r1c2-t13">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment959">
<td class="cellalignment967" id="r2c1-t13" headers="r1c1-t13">
<p><code>p_url</code></p>
</td>
<td class="cellalignment967" headers="r2c1-t13 r1c2-t13">
<p>The URL to which to redirect</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r3c1-t13" headers="r1c1-t13">
<p><code>p_cat</code></p>
</td>
<td class="cellalignment967" headers="r3c1-t13 r1c2-t13">
<p>A category to classify the click</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r4c1-t13" headers="r1c1-t13">
<p><code>p_id</code></p>
</td>
<td class="cellalignment967" headers="r4c1-t13 r1c2-t13">
<p>Secondary ID to associate with the click (optional)</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r5c1-t13" headers="r1c1-t13">
<p><code>p_user</code></p>
</td>
<td class="cellalignment967" headers="r5c1-t13 r1c2-t13">
<p>The application user ID (optional)</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r6c1-t13" headers="r1c1-t13">
<p><code>p_workspace</code></p>
</td>
<td class="cellalignment967" headers="r6c1-t13 r1c2-t13">
<p>The workspace associated with the application (optional)</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI410"></a>Example</p>
<p>The following example demonstrates how to use the COUNT_CLICK procedure to log how many user's click on the <code>http://yahoo.com</code> link specified. Note that once this information is logged, you can view it via the APEX_WORKSPACE_CLICKS view and in the reports on this view available to workspace and site administrators.</p>
<pre>
DECLARE
    l_url VARCHAR2(255);
    l_cat VARCHAR2(30);
    l_workspace_id VARCHAR2(30);
BEGIN
    l_url := 'http://yahoo.com';
    l_cat := 'yahoo';
    l_workspace_id := TO_CHAR(APEX_UTIL.FIND_SECURITY_GROUP_ID('MY_WORKSPACE'));
 
    HTP.P('&lt;a href=APEX_UTIL.COUNT_CLICK?p_url=' || l_url || '&amp;p_cat=' || l_cat || '&amp;p_workspace=' || l_workspace_id || '&gt;Click&lt;/a&gt;');
END;
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#BABBEIEJ">"FIND_SECURITY_GROUP_ID Function"</a> in this document and <a class="olink AEADM148" href="../../appdev.112/e12512/aadm_mg_logs.htm#AEADM148">"Purging the External Click Count Log"</a> in <a class="olink AEADM" href="../e12512/toc.htm"><span class="italic">Oracle Application Express Administration Guide</span></a></div>
</div>
<!-- class="refsect1" -->
<a id="BABCFBGG"></a>
<hr />
<div id="AEAPI114" class="refsect1">
<h2 class="refsect1">CREATE_USER Procedure</h2>
<p>This procedure creates a new account record in the Application Express user account table. To execute this procedure, the current user must have administrative privileges.</p>
<p class="subhead2"><a id="AEAPI411"></a>Syntax</p>
<pre>
APEX_UTIL.CREATE_USER(
    p_user_id                       IN      NUMBER      DEFAULT NULL,
    p_user_name                     IN      VARCHAR2,
    p_first_name                    IN      VARCHAR2    DEFAULT NULL,
    p_last_name                     IN      VARCHAR2    DEFAULT NULL,
    p_description                   IN      VARCHAR2    DEFAULT NULL,
    p_email_address                 IN      VARCHAR2    DEFAULT NULL,
    p_web_password                  IN      VARCHAR2,
    p_web_password_format           IN      VARCHAR2    DEFAULT 'CLEAR_TEXT',
    p_group_ids                     IN      VARCHAR2    DEFAULT NULL,
    p_developer_privs               IN      VARCHAR2    DEFAULT NULL,
    p_default_schema                IN      VARCHAR2    DEFAULT NULL,
    p_allow_access_to_schemas       IN      VARCHAR2    DEFAULT NULL,
    p_account_expiry                IN      DATE        DEFAULT TRUNC(SYSDATE),
    p_account_locked                IN      VARCHAR2    DEFAULT 'N',
    p_failed_access_attempts        IN      NUMBER      DEFAULT 0,
    p_change_password_on_first_use  IN      VARCHAR2    DEFAULT 'Y',
    p_first_password_use_occurred   IN      VARCHAR2    DEFAULT 'N',
    p_attribute_01                  IN      VARCHAR2    DEFAULT NULL,
    p_attribute_02                  IN      VARCHAR2    DEFAULT NULL,
    p_attribute_03                  IN      VARCHAR2    DEFAULT NULL,
    p_attribute_04                  IN      VARCHAR2    DEFAULT NULL,
    p_attribute_05                  IN      VARCHAR2    DEFAULT NULL,
    p_attribute_06                  IN      VARCHAR2    DEFAULT NULL,
    p_attribute_07                  IN      VARCHAR2    DEFAULT NULL,
    p_attribute_08                  IN      VARCHAR2    DEFAULT NULL,
    p_attribute_09                  IN      VARCHAR2    DEFAULT NULL,
    p_attribute_10                  IN      VARCHAR2    DEFAULT NULL);
</pre>
<p class="subhead2"><a id="AEAPI412"></a>Parameters</p>
<p><a href="#BABCJCFI">Table 1-11</a> describes the parameters available in the <code>CREATE_USER</code> procedure.</p>
<div id="AEAPI413" class="tblformal">
<p class="titleintable"><a id="sthref15"></a><a id="BABCJCFI"></a>Table 1-11 CREATE_USER Procedure Parameters</p>
<table class="cellalignment965" title="CREATE_USER Procedure Parameters" summary="This table describes the parameters available in CREATE_USER procedure." dir="ltr">
<thead>
<tr class="cellalignment959">
<th class="cellalignment966" id="r1c1-t15">Parameter</th>
<th class="cellalignment966" id="r1c2-t15">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment959">
<td class="cellalignment967" id="r2c1-t15" headers="r1c1-t15">
<p><code>p_user_id</code></p>
</td>
<td class="cellalignment967" headers="r2c1-t15 r1c2-t15">
<p>Numeric primary key of user account</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r3c1-t15" headers="r1c1-t15">
<p><code>p_user_name</code></p>
</td>
<td class="cellalignment967" headers="r3c1-t15 r1c2-t15">
<p>Alphanumeric name used for login</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r4c1-t15" headers="r1c1-t15">
<p><code>p_first_name</code></p>
</td>
<td class="cellalignment967" headers="r4c1-t15 r1c2-t15">
<p>Informational</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r5c1-t15" headers="r1c1-t15">
<p><code>p_last_name</code></p>
</td>
<td class="cellalignment967" headers="r5c1-t15 r1c2-t15">
<p>Informational</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r6c1-t15" headers="r1c1-t15">
<p><code>p_description</code></p>
</td>
<td class="cellalignment967" headers="r6c1-t15 r1c2-t15">
<p>Informational</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r7c1-t15" headers="r1c1-t15">
<p><code>p_email_address</code></p>
</td>
<td class="cellalignment967" headers="r7c1-t15 r1c2-t15">
<p>Email address</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r8c1-t15" headers="r1c1-t15">
<p><code>p_web_password</code></p>
</td>
<td class="cellalignment967" headers="r8c1-t15 r1c2-t15">
<p>Clear text password</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r9c1-t15" headers="r1c1-t15">
<p><code>p_web_password_format</code></p>
</td>
<td class="cellalignment967" headers="r9c1-t15 r1c2-t15">
<p>If the value your passing for the <code>p_web_password</code> parameter is in clear text format then use <code>CLEAR_TEXT</code>, otherwise use <code>HEX_ENCODED_DIGEST_V2</code>.</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r10c1-t15" headers="r1c1-t15">
<p><code>p_group_ids</code></p>
</td>
<td class="cellalignment967" headers="r10c1-t15 r1c2-t15">
<p>Colon separated list of numeric group IDs</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r11c1-t15" headers="r1c1-t15">
<p><code>p_developer_privs</code></p>
</td>
<td class="cellalignment967" headers="r11c1-t15 r1c2-t15">
<p>Colon separated list of developer privileges. The following are acceptable values for this parameter:</p>
<p><span class="bold">null</span> - To create an end user (a user who can only authenticate to developed applications).</p>
<p><span class="bold">CREATE:DATA_LOADER:EDIT:HELP:MONITOR:SQL</span> - To create a user with developer privilege.</p>
<p><span class="bold">ADMIN:CREATE:DATA_LOADER:EDIT:HELP:MONITOR:SQL</span> - To create a user with full workspace administrator and developer privilege.</p>
<p>Note: Currently this parameter is named inconsistently between the <code>CREATE_USER</code>, <code>EDIT_USER</code> and <code>FETCH_USER</code> APIs, although they all relate to the <code>DEVELOPER_ROLE</code> field stored in the named user account record. <code>CREATE_USER</code> uses <code>p_developer_privs</code>, <code>EDIT_USER</code> uses <code>p_developer_roles</code> and <code>FETCH_USER</code> uses <code>p_developer_role</code>.</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r12c1-t15" headers="r1c1-t15">
<p><code>p_default_schema</code></p>
</td>
<td class="cellalignment967" headers="r12c1-t15 r1c2-t15">
<p>A database schema assigned to the user's workspace, used by default for browsing.</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r13c1-t15" headers="r1c1-t15">
<p><code>p_allow_access_to_schemas</code></p>
</td>
<td class="cellalignment967" headers="r13c1-t15 r1c2-t15">
<p>Colon separated list of schemas assigned to the user's workspace to which the user is restricted (leave null for all).</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r14c1-t15" headers="r1c1-t15">
<p><code>p_account_expiry</code></p>
</td>
<td class="cellalignment967" headers="r14c1-t15 r1c2-t15">
<p>Date password was last updated, which will default to today's date on creation.</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r15c1-t15" headers="r1c1-t15">
<p><code>p_account_locked</code></p>
</td>
<td class="cellalignment967" headers="r15c1-t15 r1c2-t15">
<p>'Y' or 'N' indicating if account is locked or unlocked.</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r16c1-t15" headers="r1c1-t15">
<p><code>p_failed_access_attempts</code></p>
</td>
<td class="cellalignment967" headers="r16c1-t15 r1c2-t15">
<p>Number of consecutive login failures that have occurred, defaults to 0 on creation.</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r17c1-t15" headers="r1c1-t15">
<p><code>p_change_password_on_first_use</code></p>
</td>
<td class="cellalignment967" headers="r17c1-t15 r1c2-t15">
<p>'Y' or 'N' to indicate whether password must be changed on first use, defaults to 'Y' on creation.</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r18c1-t15" headers="r1c1-t15">
<p><code>p_first_password_use_occurred</code></p>
</td>
<td class="cellalignment967" headers="r18c1-t15 r1c2-t15">
<p>'Y' or 'N' to indicate whether login has occurred since password change, defaults to 'N' on creation.</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r19c1-t15" headers="r1c1-t15">
<p><code>p_attribute_01</code></p>
<p><code>...</code></p>
<p><code>p_attribute_10</code></p>
</td>
<td class="cellalignment967" headers="r19c1-t15 r1c2-t15">
<p>Arbitrary text accessible with an API</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI414"></a>Example 1</p>
<p>The following simple example creates an 'End User' called 'NEWUSER1' with a password of 'secret99'. Note an 'End User' can only authenticate to developed applications.</p>
<pre>
BEGIN
    APEX_UTIL.CREATE_USER(
        p_user_name    =&gt; 'NEWUSER1',
        p_web_password =&gt; 'secret99');
END;
</pre>
<p class="subhead2"><a id="AEAPI415"></a>Example 2</p>
<p>The following example creates a 'Workspace Administrator' called 'NEWUSER2'. Where the user 'NEWUSER2':</p>
<ul>
<li>
<p>Has full workspace administration and developer privilege (<code>p_developer_privs</code> parameter set to '<code>ADMIN:CREATE:DATA_LOADER:EDIT:HELP:MONITOR:SQL</code>').</p>
</li>
<li>
<p>Has access to 2 schemas, both their browsing default '<code>MY_SCHEMA</code>' (<code>p_default_schema</code> parameter set to '<code>MY_SCHEMA</code>') and also '<code>MY_SCHEMA2</code>' (<code>p_allow_access_to_schemas</code> parameter set to '<code>MY_SCHEMA2</code>').</p>
</li>
<li>
<p>Does not have to change their password when they first login (<code>p_change_password_on_first_use</code> parameter set to 'N').</p>
</li>
<li>
<p>Has their phone number stored in the first additional attribute (<code>p_attribute_01</code> parameter set to '123 456 7890').</p>
</li>
</ul>
<pre>
BEGIN
    APEX_UTIL.CREATE_USER(
        p_user_name                     =&gt; 'NEWUSER2',
        p_first_name                    =&gt; 'FRANK',
        p_last_name                     =&gt; 'SMITH',
        p_description                   =&gt; 'Description...',
        p_email_address                 =&gt; 'frank@smith.com',
        p_web_password                  =&gt; 'password',
        p_developer_privs               =&gt; 'ADMIN:CREATE:DATA_LOADER:EDIT:HELP:MONITOR:SQL',
        p_default_schema                =&gt; 'MY_SCHEMA',
        p_allow_access_to_schemas       =&gt; 'MY_SCHEMA2',
        p_change_password_on_first_use  =&gt; 'N',
        p_attribute_01                  =&gt; '123 456 7890');
END;
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#BABDAHCJ">"FETCH_USER Procedure Signature 3"</a>, <a href="#BABGDGJH">"EDIT_USER Procedure"</a>, and <a href="#BABFECFJ">"GET_GROUP_ID Function"</a></div>
</div>
<!-- class="refsect1" -->
<a id="BABCCAFG"></a>
<hr />
<div id="AEAPI115" class="refsect1">
<h2 class="refsect1">CREATE_USER_GROUP Procedure</h2>
<p>Assuming you are using Application Express authentication, this procedure creates a user group. To execute this procedure, the current user must have administrative privileges in the workspace.</p>
<p class="subhead2"><a id="AEAPI416"></a>Syntax</p>
<pre>
APEX_UTIL.CREATE_USER_GROUP(
    p_id                       IN                   NUMBER,
    p_group_name               IN                   VARCHAR2,
    p_security_group_id        IN                   NUMBER,
    p_group_desc               IN                   VARCHAR2);
</pre>
<p class="subhead2"><a id="AEAPI417"></a>Parameter</p>
<p><a href="#BABEFJGC">Table 1-12</a> describes the parameters available in the <code>CREATE_USER_GROUP</code> procedure.</p>
<div id="AEAPI418" class="tblformal">
<p class="titleintable"><a id="sthref16"></a><a id="BABEFJGC"></a>Table 1-12 CREATE_USER_GROUP Parameters</p>
<table class="cellalignment965" title="CREATE_USER_GROUP Parameters" summary="This table describes the parameters available in the CREATE_USER_GROUP procedure." dir="ltr">
<thead>
<tr class="cellalignment959">
<th class="cellalignment966" id="r1c1-t17">Parameter</th>
<th class="cellalignment966" id="r1c2-t17">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment959">
<td class="cellalignment967" id="r2c1-t17" headers="r1c1-t17">
<p><code>p_id</code></p>
</td>
<td class="cellalignment967" headers="r2c1-t17 r1c2-t17">
<p>Primary key of group</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r3c1-t17" headers="r1c1-t17">
<p><code>p_group_name</code></p>
</td>
<td class="cellalignment967" headers="r3c1-t17 r1c2-t17">
<p>Name of group</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r4c1-t17" headers="r1c1-t17">
<p><code>p_security_group_id</code></p>
</td>
<td class="cellalignment967" headers="r4c1-t17 r1c2-t17">
<p>Workspace ID</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r5c1-t17" headers="r1c1-t17">
<p><code>p_group_desc</code></p>
</td>
<td class="cellalignment967" headers="r5c1-t17 r1c2-t17">
<p>Descriptive text</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI419"></a>Example</p>
<p>The following example demonstrates how to use the <code>CREATE_USER_GROUP</code> procedure to create a new group called 'Managers' with a description of 'text'. Pass null for the <code>p_id</code> parameter to allow the database trigger to assign the new primary key value. Pass null for the <code>p_security_group_id</code> parameter to default to the current workspace ID.</p>
<pre>
BEGIN
    APEX_UTIL.CREATE_USER_GROUP (
        p_id                =&gt; null,         -- trigger will assign PK
        p_group_name        =&gt; 'Managers',
        p_security_group_id =&gt; null,         -- defaults to current workspace ID
        p_group_desc        =&gt; 'text');
END;

</pre></div>
<!-- class="refsect1" -->
<a id="BABHCBEG"></a>
<hr />
<div id="AEAPI116" class="refsect1">
<h2 class="refsect1">CURRENT_USER_IN_GROUP Function</h2>
<p>This function returns a Boolean result based on whether or not the current user is a member of the specified group. You can use the group name or group ID to identify the group.</p>
<p class="subhead2"><a id="AEAPI420"></a>Syntax</p>
<pre>
APEX_UTIL.CURRENT_USER_IN_GROUP(
    p_group_name    IN VARCHAR2)
RETURN BOOLEAN;

APEX_UTIL.CURRENT_USER_IN_GROUP(
    p_group_id    IN NUMBER)
RETURN BOOLEAN;
</pre>
<p class="subhead2"><a id="AEAPI421"></a>Parameters</p>
<p><a href="#BABFFACE">Table 1-13</a> describes the parameters available in the <code>CURRENT_USER_IN_GROUP</code> function.</p>
<div id="AEAPI422" class="tblformal">
<p class="titleintable"><a id="sthref17"></a><a id="BABFFACE"></a>Table 1-13 CURRENT_USER_IN_GROUP Parameters</p>
<table class="cellalignment965" title="CURRENT_USER_IN_GROUP Parameters" summary="This table describes the parameters available in CURRENT_USER_IN_GROUP fucntion." dir="ltr">
<thead>
<tr class="cellalignment959">
<th class="cellalignment966" id="r1c1-t18">Parameter</th>
<th class="cellalignment966" id="r1c2-t18">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment959">
<td class="cellalignment967" id="r2c1-t18" headers="r1c1-t18">
<p><code>p_group_name</code></p>
</td>
<td class="cellalignment967" headers="r2c1-t18 r1c2-t18">
<p>Identifies the name of an existing group in the workspace</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r3c1-t18" headers="r1c1-t18">
<p><code>p_group_id</code></p>
</td>
<td class="cellalignment967" headers="r3c1-t18 r1c2-t18">
<p>Identifies the numeric ID of an existing group in the workspace</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI423"></a>Example</p>
<p>The following example demonstrates how to use the <code>CURRENT_USER_IN_GROUP</code> function to check if the user currently authenticated belongs to the group 'Managers'.</p>
<pre>
DECLARE 
    VAL BOOLEAN;
BEGIN
    VAL := APEX_UTIL.CURRENT_USER_IN_GROUP(p_group_name=&gt;'Managers');
END;
</pre></div>
<!-- class="refsect1" -->
<a id="CHDGFADB"></a>
<hr />
<div id="AEAPI147" class="refsect1">
<h2 class="refsect1">DOWNLOAD_PRINT_DOCUMENT Procedure Signature 1</h2>
<p>This procedure initiates the download of a print document using XML based report data (as a BLOB) and RTF or XSL-FO based report layout.</p>
<p class="subhead2"><a id="AEAPI424"></a>Syntax</p>
<pre>
APEX_UTIL.DOWNLOAD_PRINT_DOCUMENT (
    p_file_name           IN VARCHAR,
    p_content_disposition IN VARCHAR,
    p_report_data         IN BLOB,
    p_report_layout       IN CLOB,
    p_report_layout_type  IN VARCHAR2 default 'xsl-fo',
    p_document_format     IN VARCHAR2 default 'pdf',
    p_print_server        IN VARCHAR2 default null);
</pre>
<p class="subhead2"><a id="AEAPI425"></a>Parameters</p>
<p><a href="#CHDCICFF">Table 1-14</a> describes the parameters available in the <code>DOWNLOAD_PRINT_DOCUMENT</code> procedure for Signature 1.</p>
<div id="AEAPI426" class="tblformal">
<p class="titleintable"><a id="sthref18"></a><a id="CHDCICFF"></a>Table 1-14 DOWNLOAD_PRINT_DOCUMENT Parameters</p>
<table class="cellalignment965" title="DOWNLOAD_PRINT_DOCUMENT Parameters" summary="This table describes the parameters available in the DOWNLOAD_PRINT_DOCUMENT." dir="ltr">
<thead>
<tr class="cellalignment959">
<th class="cellalignment966" id="r1c1-t19">Parameter</th>
<th class="cellalignment966" id="r1c2-t19">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment959">
<td class="cellalignment967" id="r2c1-t19" headers="r1c1-t19">
<p><code>p_file_name</code></p>
</td>
<td class="cellalignment967" headers="r2c1-t19 r1c2-t19">
<p>Defines the filename of the print document</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r3c1-t19" headers="r1c1-t19">
<p><code>p_content_disposition</code></p>
</td>
<td class="cellalignment967" headers="r3c1-t19 r1c2-t19">
<p>Specifies whether to download the print document or display inline ("attachment", "inline")</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r4c1-t19" headers="r1c1-t19">
<p><code>p_report_data</code></p>
</td>
<td class="cellalignment967" headers="r4c1-t19 r1c2-t19">
<p>XML based report data</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r5c1-t19" headers="r1c1-t19">
<p><code>p_report_layout</code></p>
</td>
<td class="cellalignment967" headers="r5c1-t19 r1c2-t19">
<p>Report layout in XSL-FO or RTF format</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r6c1-t19" headers="r1c1-t19">
<p><code>p_report_layout_type</code></p>
</td>
<td class="cellalignment967" headers="r6c1-t19 r1c2-t19">
<p>Defines the report layout type, that is "xsl-fo" or "rtf"</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r7c1-t19" headers="r1c1-t19">
<p><code>p_document_format</code></p>
</td>
<td class="cellalignment967" headers="r7c1-t19 r1c2-t19">
<p>Defines the document format, that is "pdf", "rtf", "xls", "htm", or "xml"</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r8c1-t19" headers="r1c1-t19">
<p><code>p_print_server</code></p>
</td>
<td class="cellalignment967" headers="r8c1-t19 r1c2-t19">
<p>URL of the print server. If not specified, the print server will be derived from preferences.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink HTMDB05033" href="../../appdev.112/e11947/bldapp_rpt.htm#HTMDB05033">"Printing Report Regions"</a> in <a class="olink HTMDB" href="../e11947/toc.htm"><span class="italic">Oracle Application Express Application Builder User's Guide</span></a>.</div>
</div>
<!-- class="refsect1" -->
<a id="CHDHGFDA"></a>
<hr />
<div id="AEAPI148" class="refsect1">
<h2 class="refsect1">DOWNLOAD_PRINT_DOCUMENT Procedure Signature 2</h2>
<p>This procedure initiates the download of a print document using pre-defined report query and RTF and XSL-FO based report layout.</p>
<p class="subhead2"><a id="AEAPI427"></a>Syntax</p>
<pre>
APEX_UTIL.DOWNLOAD_PRINT_DOCUMENT (
    p_file_name           IN VARCHAR,
    p_content_disposition IN VARCHAR,
    p_application_id      IN NUMBER,
    p_report_query_name   IN VARCHAR2,
    p_report_layout       IN CLOB,
    p_report_layout_type  IN VARCHAR2 default 'xsl-fo',
    p_document_format     IN VARCHAR2 default 'pdf',
    p_print_server        IN VARCHAR2 default null);
</pre>
<p class="subhead2"><a id="AEAPI428"></a>Parameters</p>
<p><a href="#CHDGEFGB">Table 1-15</a> describes the parameters available in the <code>DOWNLOAD_PRINT_DOCUMENT</code> function.</p>
<div id="AEAPI429" class="tblformal">
<p class="titleintable"><a id="sthref19"></a><a id="CHDGEFGB"></a>Table 1-15 DOWNLOAD_PRINT_DOCUMENT Parameters</p>
<table class="cellalignment965" title="DOWNLOAD_PRINT_DOCUMENT Parameters" summary="This table describes the parameters available in the DOWNLOAD_PRINT_DOCUMENT." dir="ltr">
<thead>
<tr class="cellalignment959">
<th class="cellalignment966" id="r1c1-t21">Parameter</th>
<th class="cellalignment966" id="r1c2-t21">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment959">
<td class="cellalignment967" id="r2c1-t21" headers="r1c1-t21">
<p><code>p_file_name</code></p>
</td>
<td class="cellalignment967" headers="r2c1-t21 r1c2-t21">
<p>Defines the filename of the print document</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r3c1-t21" headers="r1c1-t21">
<p><code>p_content_disposition</code></p>
</td>
<td class="cellalignment967" headers="r3c1-t21 r1c2-t21">
<p>Specifies whether to download the print document or display inline ("attachment", "inline")</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r4c1-t21" headers="r1c1-t21">
<p><code>p_application_id</code></p>
</td>
<td class="cellalignment967" headers="r4c1-t21 r1c2-t21">
<p>Defines the application ID of the report query</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r5c1-t21" headers="r1c1-t21">
<p><code>p_report_query_name</code></p>
</td>
<td class="cellalignment967" headers="r5c1-t21 r1c2-t21">
<p>Name of the report query (stored under application's Shared Components)</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r6c1-t21" headers="r1c1-t21">
<p><code>p_report_layout</code></p>
</td>
<td class="cellalignment967" headers="r6c1-t21 r1c2-t21">
<p>Report layout in XSL-FO or RTF format</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r7c1-t21" headers="r1c1-t21">
<p><code>p_report_layout_type</code></p>
</td>
<td class="cellalignment967" headers="r7c1-t21 r1c2-t21">
<p>Defines the report layout type, that is "xsl-fo" or "rtf"</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r8c1-t21" headers="r1c1-t21">
<p><code>p_document_format</code></p>
</td>
<td class="cellalignment967" headers="r8c1-t21 r1c2-t21">
<p>Defines the document format, that is "pdf", "rtf", "xls", "htm", or "xml"</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r9c1-t21" headers="r1c1-t21">
<p><code>p_print_server</code></p>
</td>
<td class="cellalignment967" headers="r9c1-t21 r1c2-t21">
<p>URL of the print server. If not specified, the print server will be derived from preferences.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI430"></a>Example for Signature 2</p>
<p>The following example shows how to use the <code>DOWNLOAD_PRINT_DOCUMENT</code> using Signature 2 (Pre-defined report query and RTF or XSL-FO based report layout.). In this example, the data for the report is taken from a Report Query called '<code>ReportQueryAndXSL</code>' stored in the current application's Shared Components &gt; Report Queries. The report layout is taken from a value stored in a page item (<code>P1_XSL</code>).</p>
<pre>
BEGIN
    APEX_UTIL.DOWNLOAD_PRINT_DOCUMENT (
        p_file_name           =&gt; 'mydocument',
        p_content_disposition =&gt; 'attachment',
        p_application_id      =&gt; :APP_ID,
        p_report_query_name   =&gt; 'ReportQueryAndXSL',
        p_report_layout       =&gt; :P1_XSL,
        p_report_layout_type  =&gt; 'xsl-fo',
        p_document_format     =&gt; 'pdf');
END;
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink HTMDB05033" href="../../appdev.112/e11947/bldapp_rpt.htm#HTMDB05033">"Printing Report Regions"</a> in <a class="olink HTMDB" href="../e11947/toc.htm"><span class="italic">Oracle Application Express Application Builder User's Guide</span></a>.</div>
</div>
<!-- class="refsect1" -->
<a id="CHDGIFJD"></a>
<hr />
<div id="AEAPI149" class="refsect1">
<h2 class="refsect1">DOWNLOAD_PRINT_DOCUMENT Procedure Signature 3</h2>
<p>This procedure initiates the download of a print document using pre-defined report query and pre-defined report layout.</p>
<p class="subhead2"><a id="AEAPI431"></a>Syntax</p>
<pre>
APEX_UTIL.DOWNLOAD_PRINT_DOCUMENT (
    p_file_name           IN VARCHAR,
    p_content_disposition IN VARCHAR,
    p_application_id      IN NUMBER,
    p_report_query_name   IN VARCHAR2,
    p_report_layout_name  IN VARCHAR2,
    p_report_layout_type  IN VARCHAR2 default 'xsl-fo',
    p_document_format     IN VARCHAR2 default 'pdf',
    p_print_server        IN VARCHAR2 default null);
</pre>
<p class="subhead2"><a id="AEAPI432"></a>Parameters</p>
<p><a href="#CHDHIAGE">Table 1-16</a> describes the parameters available in the <code>DOWNLOAD_PRINT_DOCUMENT</code> procedure for Signature 3.</p>
<div id="AEAPI433" class="tblformal">
<p class="titleintable"><a id="sthref20"></a><a id="CHDHIAGE"></a>Table 1-16 DOWNLOAD_PRINT_DOCUMENT Parameters</p>
<table class="cellalignment965" title="DOWNLOAD_PRINT_DOCUMENT Parameters" summary="This table describes the parameters available in the DOWNLOAD_PRINT_DOCUMENT." dir="ltr">
<thead>
<tr class="cellalignment959">
<th class="cellalignment966" id="r1c1-t23">Parameter</th>
<th class="cellalignment966" id="r1c2-t23">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment959">
<td class="cellalignment967" id="r2c1-t23" headers="r1c1-t23">
<p><code>p_file_name</code></p>
</td>
<td class="cellalignment967" headers="r2c1-t23 r1c2-t23">
<p>Defines the filename of the print document</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r3c1-t23" headers="r1c1-t23">
<p><code>p_content_disposition</code></p>
</td>
<td class="cellalignment967" headers="r3c1-t23 r1c2-t23">
<p>Specifies whether to download the print document or display inline ("attachment", "inline")</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r4c1-t23" headers="r1c1-t23">
<p><code>p_application_id</code></p>
</td>
<td class="cellalignment967" headers="r4c1-t23 r1c2-t23">
<p>Defines the application ID of the report query</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r5c1-t23" headers="r1c1-t23">
<p><code>p_report_query_name</code></p>
</td>
<td class="cellalignment967" headers="r5c1-t23 r1c2-t23">
<p>Name of the report query (stored under application's Shared Components)</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r6c1-t23" headers="r1c1-t23">
<p><code>p_report_layout_name</code></p>
</td>
<td class="cellalignment967" headers="r6c1-t23 r1c2-t23">
<p>Name of the report layout (stored under application's Shared Components)</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r7c1-t23" headers="r1c1-t23">
<p><code>p_report_layout_type</code></p>
</td>
<td class="cellalignment967" headers="r7c1-t23 r1c2-t23">
<p>Defines the report layout type, that is "xsl-fo" or "rtf"</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r8c1-t23" headers="r1c1-t23">
<p><code>p_document_format</code></p>
</td>
<td class="cellalignment967" headers="r8c1-t23 r1c2-t23">
<p>Defines the document format, that is "pdf", "rtf", "xls", "htm", or "xml"</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r9c1-t23" headers="r1c1-t23">
<p><code>p_print_server</code></p>
</td>
<td class="cellalignment967" headers="r9c1-t23 r1c2-t23">
<p>URL of the print server. If not specified, the print server will be derived from preferences.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI434"></a>Example for Signature 3</p>
<p>The following example shows how to use the <code>DOWNLOAD_PRINT_DOCUMENT</code> using Signature 3 (Pre-defined report query and pre-defined report layout). In this example, the data for the report is taken from a Report Query called '<code>ReportQuery</code>' stored in the current application's Shared Components &gt; Report Queries. The report layout is taken from a Report Layout called '<code>ReportLayout</code>' stored in the current application's Shared Components &gt; Report Layouts. Note that if you wish to provision dynamic layouts, instead of specifying '<code>ReportLayout</code>' for the <code>p_report_layout_name</code> parameter, you could reference a page item that allowed the user to select one of multiple saved Report Layouts. This example also provides a way for the user to specify how they wish to receive the document (as an attachment or inline), through passing the value of <code>P1_CONTENT_DISP</code> to the <code>p_content_disposition</code> parameter. <code>P1_CONTENT_DISP</code> is a page item of type '<code>Select</code> <code>List</code>' with the following List of Values Definition:</p>
<pre>
STATIC2:In Browser;inline,Save / Open in separate Window;attachment

BEGIN
    APEX_UTIL.DOWNLOAD_PRINT_DOCUMENT (
        p_file_name           =&gt; 'myreport123',
        p_content_disposition =&gt; :P1_CONTENT_DISP,
        p_application_id      =&gt; :APP_ID,
        p_report_query_name   =&gt; 'ReportQuery',
        p_report_layout_name  =&gt; 'ReportLayout',
        p_report_layout_type  =&gt; 'rtf',
        p_document_format     =&gt; 'pdf');
END;
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink HTMDB05033" href="../../appdev.112/e11947/bldapp_rpt.htm#HTMDB05033">"Printing Report Regions"</a> in <a class="olink HTMDB" href="../e11947/toc.htm"><span class="italic">Oracle Application Express Application Builder User's Guide</span></a>.</div>
</div>
<!-- class="refsect1" -->
<a id="CHDFIGIJ"></a>
<hr />
<div id="AEAPI150" class="refsect1">
<h2 class="refsect1">DOWNLOAD_PRINT_DOCUMENT Procedure Signature 4</h2>
<p>This procedure initiates the download of a print document using XML based report data (as a CLOB) and RTF or XSL-FO based report layout.</p>
<p class="subhead2"><a id="AEAPI435"></a>Syntax</p>
<pre>
APEX_UTIL.DOWNLOAD_PRINT_DOCUMENT (
    p_file_name           IN VARCHAR,
    p_content_disposition IN VARCHAR,
    p_report_data         IN CLOB,
    p_report_layout       IN CLOB,
    p_report_layout_type  IN VARCHAR2 default 'xsl-fo',
    p_document_format     IN VARCHAR2 default 'pdf',
    p_print_server        IN VARCHAR2 default null);
</pre>
<p class="subhead2"><a id="AEAPI436"></a>Parameters</p>
<p><a href="#CHDHIAGE">Table 1-16</a> describes the parameters available in the <code>DOWNLOAD_PRINT_DOCUMENT</code> procedure for Signature 4.</p>
<div id="AEAPI437" class="tblformal">
<p class="titleintable"><a id="sthref21"></a><a id="sthref22"></a>Table 1-17 DOWNLOAD_PRINT_DOCUMENT Parameters</p>
<table class="cellalignment965" title="DOWNLOAD_PRINT_DOCUMENT Parameters" summary="This table describes the parameters available in the DOWNLOAD_PRINT_DOCUMENT." dir="ltr">
<thead>
<tr class="cellalignment959">
<th class="cellalignment966" id="r1c1-t25">Parameter</th>
<th class="cellalignment966" id="r1c2-t25">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment959">
<td class="cellalignment967" id="r2c1-t25" headers="r1c1-t25">
<p><code>p_file_name</code></p>
</td>
<td class="cellalignment967" headers="r2c1-t25 r1c2-t25">
<p>Defines the filename of the print document</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r3c1-t25" headers="r1c1-t25">
<p><code>p_content_disposition</code></p>
</td>
<td class="cellalignment967" headers="r3c1-t25 r1c2-t25">
<p>Specifies whether to download the print document or display inline ("attachment", "inline")</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r4c1-t25" headers="r1c1-t25">
<p><code>p_report_data</code></p>
</td>
<td class="cellalignment967" headers="r4c1-t25 r1c2-t25">
<p>XML based report data, must be encoded in UTF-8</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r5c1-t25" headers="r1c1-t25">
<p><code>p_report_layout</code></p>
</td>
<td class="cellalignment967" headers="r5c1-t25 r1c2-t25">
<p>Report layout in XSL-FO or RTF format</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r6c1-t25" headers="r1c1-t25">
<p><code>p_report_layout_type</code></p>
</td>
<td class="cellalignment967" headers="r6c1-t25 r1c2-t25">
<p>Defines the report layout type, that is "xsl-fo" or "rtf"</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r7c1-t25" headers="r1c1-t25">
<p><code>p_document_format</code></p>
</td>
<td class="cellalignment967" headers="r7c1-t25 r1c2-t25">
<p>Defines the document format, that is "pdf", "rtf", "xls", "htm", or "xml"</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r8c1-t25" headers="r1c1-t25">
<p><code>p_print_server</code></p>
</td>
<td class="cellalignment967" headers="r8c1-t25 r1c2-t25">
<p>URL of the print server. If not specified, the print server will be derived from preferences.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI438"></a>Example for Signature 4</p>
<p>The following example shows how to use the DOWNLOAD_PRINT_DOCUMENT using Signature 4 (XML based report data (as a CLOB) and RTF or XSL-FO based report layout). In this example both the report data (XML) and report layout (XSL-FO) are taken from values stored in page items.</p>
<pre>
BEGIN
    APEX_UTIL.DOWNLOAD_PRINT_DOCUMENT (
        p_file_name           =&gt; 'mydocument',
        p_content_disposition =&gt; 'attachment',
        p_report_data         =&gt; :P1_XML,
        p_report_layout       =&gt; :P1_XSL,
        p_report_layout_type  =&gt; 'xsl-fo',
        p_document_format     =&gt; 'pdf');
END;
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink HTMDB05033" href="../../appdev.112/e11947/bldapp_rpt.htm#HTMDB05033">"Printing Report Regions"</a> in <a class="olink HTMDB" href="../e11947/toc.htm"><span class="italic">Oracle Application Express Application Builder User's Guide</span></a>.</div>
</div>
<!-- class="refsect1" -->
<a id="BABGDGJH"></a>
<hr />
<div id="AEAPI117" class="refsect1">
<h2 class="refsect1">EDIT_USER Procedure</h2>
<p>This procedure enables a user account record to be altered. To execute this procedure, the current user must have administrative privileges in the workspace.</p>
<p class="subhead2"><a id="AEAPI439"></a>Syntax</p>
<pre>
APEX_UTIL.EDIT_USER (
    p_user_id                      IN                   NUMBER,
    p_user_name                    IN                   VARCHAR2,
    p_first_name                   IN                   VARCHAR2    DEFAULT NULL,
    p_last_name                    IN                   VARCHAR2    DEFAULT NULL,
    p_web_password                 IN                   VARCHAR2    DEFAULT NULL,
    p_new_password                 IN                   VARCHAR2    DEFAULT NULL,
    p_email_address                IN                   VARCHAR2    DEFAULT NULL,
    p_start_date                   IN                   VARCHAR2    DEFAULT NULL,
    p_end_date                     IN                   VARCHAR2    DEFAULT NULL,
    p_employee_id                  IN                   VARCHAR2    DEFAULT NULL,
    p_allow_access_to_schemas      IN                   VARCHAR2    DEFAULT NULL,
    p_person_type                  IN                   VARCHAR2    DEFAULT NULL,
    p_default_schema               IN                   VARCHAR2    DEFAULT NULL,
    p_group_ids                    IN                   VARCHAR2    DEFAULT NULL,
    p_developer_roles              IN                   VARCHAR2    DEFAULT NULL,
    p_description                  IN                   VARCHAR2    DEFAULT NULL,
    p_account_expiry               IN                   DATE        DEFAULT NULL,
    p_account_locked               IN                   VARCHAR2    DEFAULT 'N',
    p_failed_access_attempts       IN                   NUMBER      DEFAULT 0,
    p_change_password_on_first_use IN                   VARCHAR2    DEFAULT 'Y',
    p_first_password_use_occurred  IN                   VARCHAR2    DEFAULT 'N');
</pre>
<p class="subhead2"><a id="AEAPI440"></a>Parameters</p>
<p><a href="#BABBAABA">Table 1-18</a> describes the parameters available in the <code>EDIT_USER</code> procedure.</p>
<div id="AEAPI441" class="tblformal">
<p class="titleintable"><a id="sthref23"></a><a id="BABBAABA"></a>Table 1-18 EDIT_USER Parameters</p>
<table class="cellalignment965" title="EDIT_USER Parameters" summary="This table describes the parameters available in EDIT_USER procedure." dir="ltr">
<thead>
<tr class="cellalignment959">
<th class="cellalignment966" id="r1c1-t27">Parameter</th>
<th class="cellalignment966" id="r1c2-t27">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment959">
<td class="cellalignment967" id="r2c1-t27" headers="r1c1-t27">
<p><code>p_user_id</code></p>
</td>
<td class="cellalignment967" headers="r2c1-t27 r1c2-t27">
<p>Numeric primary key of the user account</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r3c1-t27" headers="r1c1-t27">
<p><code>p_user_name</code></p>
</td>
<td class="cellalignment967" headers="r3c1-t27 r1c2-t27">
<p>Alphanumeric name used for login.</p>
<p><span class="bold">See Also</span>: <a href="#BABIBIBH">"SET_USERNAME Procedure"</a></p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r4c1-t27" headers="r1c1-t27">
<p><code>p_first_name</code></p>
</td>
<td class="cellalignment967" headers="r4c1-t27 r1c2-t27">
<p>Informational.</p>
<p><span class="bold">See Also</span>: <a href="#BABEFBED">"SET_FIRST_NAME Procedure"</a></p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r5c1-t27" headers="r1c1-t27">
<p><code>p_last_name</code></p>
</td>
<td class="cellalignment967" headers="r5c1-t27 r1c2-t27">
<p>Informational.</p>
<p><span class="bold">See Also</span>: <a href="#BABIGGEF">"SET_LAST_NAME Procedure"</a></p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r6c1-t27" headers="r1c1-t27">
<p><code>p_web_password</code></p>
</td>
<td class="cellalignment967" headers="r6c1-t27 r1c2-t27">
<p>Clear text password. If using this procedure to update the password for the user, values for both <code>p_web_password</code> and <code>p_new_password</code> must not be null and must be identical.</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r7c1-t27" headers="r1c1-t27">
<p><code>p_new_password</code></p>
</td>
<td class="cellalignment967" headers="r7c1-t27 r1c2-t27">
<p>Clear text new password. If using this procedure to update the password for the user, values for both <code>p_web_password</code> and <code>p_new_password</code> must not be null and must be identical.</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r8c1-t27" headers="r1c1-t27">
<p><code>p_email_address</code></p>
</td>
<td class="cellalignment967" headers="r8c1-t27 r1c2-t27">
<p>Informational.</p>
<p><span class="bold">See Also</span>: <a href="#BABFCJDC">"SET_EMAIL Procedure"</a></p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r9c1-t27" headers="r1c1-t27">
<p><code>p_start_date</code></p>
</td>
<td class="cellalignment967" headers="r9c1-t27 r1c2-t27">
<p>Unused</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r10c1-t27" headers="r1c1-t27">
<p><code>p_end_date</code></p>
</td>
<td class="cellalignment967" headers="r10c1-t27 r1c2-t27">
<p>Unused</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r11c1-t27" headers="r1c1-t27">
<p><code>p_employee_id</code></p>
</td>
<td class="cellalignment967" headers="r11c1-t27 r1c2-t27">
<p>Unused</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r12c1-t27" headers="r1c1-t27">
<p><code>p_allow_access_to_schemas</code></p>
</td>
<td class="cellalignment967" headers="r12c1-t27 r1c2-t27">
<p>A list of schemas assigned to the user's workspace to which the user is restricted</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r13c1-t27" headers="r1c1-t27">
<p><code>p_person_type</code></p>
</td>
<td class="cellalignment967" headers="r13c1-t27 r1c2-t27">
<p>Unused</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r14c1-t27" headers="r1c1-t27">
<p><code>p_default_schema</code></p>
</td>
<td class="cellalignment967" headers="r14c1-t27 r1c2-t27">
<p>A database schema assigned to the user's workspace, used by default for browsing</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r15c1-t27" headers="r1c1-t27">
<p><code>p_group_ids</code></p>
</td>
<td class="cellalignment967" headers="r15c1-t27 r1c2-t27">
<p>Colon-separated list of numeric group IDs</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r16c1-t27" headers="r1c1-t27">
<p><code>p_developer_roles</code></p>
</td>
<td class="cellalignment967" headers="r16c1-t27 r1c2-t27">
<p>Colon-separated list of developer privileges. The following are acceptable values for this parameter:</p>
<p>&middot; <span class="bold">null</span> - To update the user to be an end user (a user who can only authenticate to developed applications)</p>
<p>&middot; <span class="bold">CREATE:DATA_LOADER:EDIT:HELP:MONITOR:SQL</span> - To update the user to have developer privilege</p>
<p><span class="bold">&middot; ADMIN:CREATE:DATA_LOADER:EDIT:HELP:MONITOR:SQL</span> - To update the user to have full workspace administrator and developer privilege</p>
<p><span class="bold">Note</span>: Currently this parameter is named inconsistently between the CREATE_USER, EDIT_USER and FETCH_USER APIs, although they all relate to the DEVELOPER_ROLE field stored in the named user account record. CREATE_USER uses p_developer_privs, EDIT_USER uses p_developer_roles and FETCH_USER uses p_developer_role.</p>
<p><span class="bold">See Also</span>: <a href="#BABCHEEH">"GET_USER_ROLES Function"</a></p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r17c1-t27" headers="r1c1-t27">
<p><code>p_description</code></p>
</td>
<td class="cellalignment967" headers="r17c1-t27 r1c2-t27">
<p>Informational</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r18c1-t27" headers="r1c1-t27">
<p><code>p_account_expiry</code></p>
</td>
<td class="cellalignment967" headers="r18c1-t27 r1c2-t27">
<p>Date password was last updated.</p>
<p><span class="bold">See Also</span>: <a href="#CHDEGHHE">"EXPIRE_END_USER_ACCOUNT Procedure"</a>, <a href="#CHDDBEEE">"EXPIRE_WORKSPACE_ACCOUNT Procedure"</a>, <a href="#CHDEDBIF">"UNEXPIRE_END_USER_ACCOUNT Procedure"</a>, <a href="#CHDFDFDH">"UNEXPIRE_WORKSPACE_ACCOUNT Procedure"</a></p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r19c1-t27" headers="r1c1-t27">
<p><code>p_account_locked</code></p>
</td>
<td class="cellalignment967" headers="r19c1-t27 r1c2-t27">
<p>'Y' or 'N' indicating if account is locked or unlocked.</p>
<p><span class="bold">See Also</span>: <a href="#CHDGCCHI">"LOCK_ACCOUNT Procedure"</a>, <a href="#CHDBFABJ">"UNLOCK_ACCOUNT Procedure"</a></p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r20c1-t27" headers="r1c1-t27">
<p><code>p_failed_access_attempts</code></p>
</td>
<td class="cellalignment967" headers="r20c1-t27 r1c2-t27">
<p>Number of consecutive login failures that have occurred.</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r21c1-t27" headers="r1c1-t27">
<p><code>p_change_password_on_first_use</code></p>
</td>
<td class="cellalignment967" headers="r21c1-t27 r1c2-t27">
<p>'Y' or 'N' to indicate whether password must be changed on first use.</p>
<p><span class="bold">See Also</span>: <a href="#CHDFJCDH">"CHANGE_PASSWORD_ON_FIRST_USE Function"</a></p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r22c1-t27" headers="r1c1-t27">
<p><code>p_first_password_use_occurred</code></p>
</td>
<td class="cellalignment967" headers="r22c1-t27 r1c2-t27">
<p>'Y' or 'N' to indicate whether login has occurred since password change.</p>
<p><span class="bold">See Also</span>: <a href="#CHDGCDII">"PASSWORD_FIRST_USE_OCCURRED Function"</a></p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI442"></a>Example</p>
<p>The following example shows how to use the <code>EDIT_USER</code> procedure to update a user account. This example shows how you can use the <code>EDIT_USER</code> procedure to change the user 'FRANK' from a user with just developer privilege to a user with workspace administrator and developer privilege. Firstly, the <code>FETCH_USER</code> procedure is called to assign account details for the user 'FRANK' to local variables. These variables are then used in the call to <code>EDIT_USER</code> to preserve the details of the account, with the exception of the value for the <code>p_developer_roles</code> parameter, which is set to '<code>ADMIN:CREATE:DATA_LOADER:EDIT:HELP:MONITOR:SQL</code>'.</p>
<pre>
DECLARE
    l_user_id                       NUMBER;
    l_workspace                     VARCHAR2(255);
    l_user_name                     VARCHAR2(100);
    l_first_name                    VARCHAR2(255);
    l_last_name                     VARCHAR2(255);
    l_web_password                  VARCHAR2(255);
    l_email_address                 VARCHAR2(240);
    l_start_date                    DATE;
    l_end_date                      DATE;
    l_employee_id                   NUMBER(15,0);
    l_allow_access_to_schemas       VARCHAR2(4000);
    l_person_type                   VARCHAR2(1);
    l_default_schema                VARCHAR2(30);
    l_groups                        VARCHAR2(1000);
    l_developer_role                VARCHAR2(60);
    l_description                   VARCHAR2(240);
    l_account_expiry                DATE;
    l_account_locked                VARCHAR2(1);
    l_failed_access_attempts        NUMBER;
    l_change_password_on_first_use  VARCHAR2(1);
    l_first_password_use_occurred   VARCHAR2(1);
BEGIN
    l_user_id := APEX_UTIL.GET_USER_ID('FRANK');

APEX_UTIL.FETCH_USER(
    p_user_id                       =&gt; l_user_id,
    p_workspace                     =&gt; l_workspace,
    p_user_name                     =&gt; l_user_name,
    p_first_name                    =&gt; l_first_name,
    p_last_name                     =&gt; l_last_name,
    p_web_password                  =&gt; l_web_password,
    p_email_address                 =&gt; l_email_address,
    p_start_date                    =&gt; l_start_date,
    p_end_date                      =&gt; l_end_date,
    p_employee_id                   =&gt; l_employee_id,
    p_allow_access_to_schemas       =&gt; l_allow_access_to_schemas,
    p_person_type                   =&gt; l_person_type,
    p_default_schema                =&gt; l_default_schema,
    p_groups                        =&gt; l_groups,
    p_developer_role                =&gt; l_developer_role,
    p_description                   =&gt; l_description,
    p_account_expiry                =&gt; l_account_expiry,
    p_account_locked                =&gt; l_account_locked,
    p_failed_access_attempts        =&gt; l_failed_access_attempts,
    p_change_password_on_first_use  =&gt; l_change_password_on_first_use,
    p_first_password_use_occurred   =&gt; l_first_password_use_occurred);
APEX_UTIL.EDIT_USER (
    p_user_id                       =&gt; l_user_id,
    p_user_name                     =&gt; l_user_name,
    p_first_name                    =&gt; l_first_name,
    p_last_name                     =&gt; l_last_name,
    p_web_password                  =&gt; l_web_password,
    p_new_password                  =&gt; l_web_password,
    p_email_address                 =&gt; l_email_address,
    p_start_date                    =&gt; l_start_date,
    p_end_date                      =&gt; l_end_date,
    p_employee_id                   =&gt; l_employee_id,
    p_allow_access_to_schemas       =&gt; l_allow_access_to_schemas,
    p_person_type                   =&gt; l_person_type,
    p_default_schema                =&gt; l_default_schema,
    p_group_ids                     =&gt; l_groups,
    p_developer_roles               =&gt; 'ADMIN:CREATE:DATA_LOADER:EDIT:HELP:MONITOR:SQL',
    p_description                   =&gt; l_description,
    p_account_expiry                =&gt; l_account_expiry,
    p_account_locked                =&gt; l_account_locked,
    p_failed_access_attempts        =&gt; l_failed_access_attempts,
    p_change_password_on_first_use  =&gt; l_change_password_on_first_use,
    p_first_password_use_occurred   =&gt; l_first_password_use_occurred);
END;

</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#BABDAHCJ">"FETCH_USER Procedure Signature 3"</a></div>
</div>
<!-- class="refsect1" -->
<a id="CHDGFAHB"></a>
<hr />
<div id="AEAPI118" class="refsect1">
<h2 class="refsect1">END_USER_ACCOUNT_DAYS_LEFT Function</h2>
<p>Returns the number of days remaining before a end user account password expires. This function may be run in a page request context by any authenticated user.</p>
<p class="subhead2"><a id="AEAPI443"></a>Syntax</p>
<pre>
APEX_UTIL.END_USER_ACCOUNT_DAYS_LEFT (
    p_user_name IN VARCHAR2)
RETURN NUMBER;
</pre>
<p class="subhead2"><a id="AEAPI444"></a>Parameters</p>
<p><a href="#CHDEAHIJ">Table 1-19</a> describes the parameters available in the <code>END_USER_ACCOUNT_DAYS_LEFT</code> function.</p>
<div id="AEAPI445" class="tblformal">
<p class="titleintable"><a id="sthref24"></a><a id="CHDEAHIJ"></a>Table 1-19 END_USER_ACCOUNT_DAYS_LEFT Parameters</p>
<table class="cellalignment965" title="END_USER_ACCOUNT_DAYS_LEFT Parameters" summary="This table describes the parameters available in the END_USER_ACCOUNT_DAYS_LEFT function." dir="ltr">
<thead>
<tr class="cellalignment959">
<th class="cellalignment966" id="r1c1-t29">Parameter</th>
<th class="cellalignment966" id="r1c2-t29">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment959">
<td class="cellalignment967" id="r2c1-t29" headers="r1c1-t29">
<p><code>p_user_name</code></p>
</td>
<td class="cellalignment967" headers="r2c1-t29 r1c2-t29">
<p>The user name of the user account</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI446"></a>Example</p>
<p>The following example shows how to use the <code>END_USER_ACCOUNT_DAYS_LEFT</code> function. Use this function to determine the number of days remaining before an Application Express end user account in the current workspace will expire.</p>
<pre>
DECLARE
    l_days_left NUMBER;
BEGIN
    FOR c1 IN (SELECT user_name from wwv_flow_users) LOOP
        l_days_left := APEX_UTIL.END_USER_ACCOUNT_DAYS_LEFT(p_user_name =&gt; c1.user_name);
        htp.p('End User Account:'||c1.user_name||' will expire in '||l_days_left||' days.');
    END LOOP;
END;
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#CHDEGHHE">"EXPIRE_END_USER_ACCOUNT Procedure"</a> and <a href="#CHDEDBIF">"UNEXPIRE_END_USER_ACCOUNT Procedure"</a></div>
</div>
<!-- class="refsect1" -->
<a id="CHDEGHHE"></a>
<hr />
<div id="AEAPI119" class="refsect1">
<h2 class="refsect1">EXPIRE_END_USER_ACCOUNT Procedure</h2>
<p>Expires the login account for use as a workspace end user. Must be run by an authenticated workspace administrator in a page request context.</p>
<p class="subhead2"><a id="AEAPI447"></a>Syntax</p>
<pre>
APEX_UTIL.EXPIRE_END_USER_ACCOUNT (
    p_user_name IN VARCHAR2
    );
</pre>
<p class="subhead2"><a id="AEAPI448"></a>Parameters</p>
<p><a href="#CHDGEIFG">Table 1-21</a> describes the parameters available in the <code>EXPIRE_END_USER_ACCOUNT</code> procedure.</p>
<div id="AEAPI449" class="tblformal">
<p class="titleintable"><a id="sthref25"></a><a id="CHDIEFCE"></a>Table 1-20 EXPIRE_END_USER_ACCOUNT Parameters</p>
<table class="cellalignment965" title="EXPIRE_END_USER_ACCOUNT Parameters" summary="This table describes the parameters available in the EXPIRE_END_USER_ACCOUNT procedure" dir="ltr">
<thead>
<tr class="cellalignment959">
<th class="cellalignment966" id="r1c1-t31">Parameter</th>
<th class="cellalignment966" id="r1c2-t31">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment959">
<td class="cellalignment967" id="r2c1-t31" headers="r1c1-t31">
<p><code>p_user_name</code></p>
</td>
<td class="cellalignment967" headers="r2c1-t31 r1c2-t31">
<p>The user name of the user account</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI450"></a>Example</p>
<p>The following example shows how to use the <code>EXPIRE_END_USER_ACCOUNT</code> procedure. Use this procedure to expire an Oracle Application Express account (workspace administrator, developer, or end user) in the current workspace. This action specifically expires the account with respect to its use by end users to authenticate to developed applications, but it may also expire the account with respect to its use by developers or administrators to log in to a workspace.</p>
<p>Note that this procedure must be run by a user having administration privileges in the current workspace.</p>
<pre>
BEGIN
    FOR c1 IN (select user_name from wwv_flow_users) LOOP
        APEX_UTIL.EXPIRE_END_USER_ACCOUNT(p_user_name =&gt; c1.user_name);
        htp.p('End User Account:'||c1.user_name||' is now expired.');    
    END LOOP;
END;    
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#CHDEDBIF">"UNEXPIRE_END_USER_ACCOUNT Procedure"</a></div>
</div>
<!-- class="refsect1" -->
<a id="CHDDBEEE"></a>
<hr />
<div id="AEAPI120" class="refsect1">
<h2 class="refsect1">EXPIRE_WORKSPACE_ACCOUNT Procedure</h2>
<p>Expires developer or workspace administrator login accounts. Must be run by an authenticated workspace administrator in a page request context.</p>
<p class="subhead2"><a id="AEAPI451"></a>Syntax</p>
<pre>
APEX_UTIL.EXPIRE_WORKSPACE_ACCOUNT (
    p_user_name IN VARCHAR2
    );
</pre>
<p class="subhead2"><a id="AEAPI452"></a>Parameters</p>
<p><a href="#CHDGEIFG">Table 1-21</a> describes the parameters available in the <code>EXPIRE_WORKSPACE_ACCOUNT</code> procedure.</p>
<div id="AEAPI453" class="tblformal">
<p class="titleintable"><a id="sthref26"></a><a id="CHDGEIFG"></a>Table 1-21 EXPIRE_WORKSPACE_ACCOUNT Parameters</p>
<table class="cellalignment965" title="EXPIRE_WORKSPACE_ACCOUNT Parameters" summary="This table describes the parameters available in the EXPIRE_WORKSPACE_ACCOUNTprocedure." dir="ltr">
<thead>
<tr class="cellalignment959">
<th class="cellalignment966" id="r1c1-t33">Parameter</th>
<th class="cellalignment966" id="r1c2-t33">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment959">
<td class="cellalignment967" id="r2c1-t33" headers="r1c1-t33">
<p><code>p_user_name</code></p>
</td>
<td class="cellalignment967" headers="r2c1-t33 r1c2-t33">
<p>The user name of the user account</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI454"></a>Example</p>
<p>The following example shows how to use the <code>EXPIRE_WORKSPACE_ACCOUNT</code> procedure. Use this procedure to expire an Application Express account (workspace administrator, developer, or end user) in the current workspace. This action specifically expires the account with respect to its use by developers or administrators to log in to a workspace, but it may also expire the account with respect to its use by end users to authenticate to developed applications.</p>
<pre>
BEGIN
    FOR c1 IN (SELECT user_name FROM wwv_flow_users) LOOP
        APEX_UTIL.EXPIRE_WORKSPACE_ACCOUNT(p_user_name =&gt; c1.user_name);
        htp.p('Workspace Account:'||c1.user_name||' is now expired.');  
    END LOOP;
END;
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#CHDFDFDH">"UNEXPIRE_WORKSPACE_ACCOUNT Procedure"</a></div>
</div>
<!-- class="refsect1" -->
<a id="BABCDACJ"></a>
<hr />
<div id="AEAPI121" class="refsect1">
<h2 class="refsect1">EXPORT_USERS Procedure</h2>
<p>When called from a page, this procedure produces an export file of the current workspace definition, workspace users, and workspace groups. To execute this procedure, the current user must have administrative privilege in the workspace.</p>
<p class="subhead2"><a id="AEAPI455"></a>Syntax</p>
<pre>
APEX_UTIL.EXPORT_USERS(
    p_export_format IN VARCHAR2 DEFAULT 'UNIX');
</pre>
<p class="subhead2"><a id="AEAPI456"></a>Parameters</p>
<p><a href="#BABDJCFG">Table 1-22</a> describes the parameters available in the <code>EXPORT_USERS</code> procedure.</p>
<div id="AEAPI457" class="tblformal">
<p class="titleintable"><a id="sthref27"></a><a id="BABDJCFG"></a>Table 1-22 EXPORT_USERS Parameters</p>
<table class="cellalignment965" title="EXPORT_USERS Parameters" summary="This table describes the parameters available in EXPORT_USERS procedure." dir="ltr">
<thead>
<tr class="cellalignment959">
<th class="cellalignment966" id="r1c1-t35">Parameter</th>
<th class="cellalignment966" id="r1c2-t35">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment959">
<td class="cellalignment967" id="r2c1-t35" headers="r1c1-t35">
<p><code>p_export_format</code></p>
</td>
<td class="cellalignment967" headers="r2c1-t35 r1c2-t35">
<p>Indicates how rows in the export file will be formatted. Specify <code>'UNIX'</code> to have the resulting file contain rows delimited by line feeds. Specify <code>'DOS'</code> to have the resulting file contain rows delimited by carriage returns and line feeds</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI458"></a>Example</p>
<p>The following example shows how to use the <code>EXPORT_USERS</code> procedure. Call this procedure from a page to produce an export file containing the current workspace definition, list of workspace users and list of workspace groups. The file will be formatted with rows delimited by line feeds.</p>
<pre>
BEGIN
    APEX_UTIL.EXPORT_USERS;
END;
</pre></div>
<!-- class="refsect1" -->
<a id="BABIBAID"></a>
<hr />
<div id="AEAPI122" class="refsect1">
<h2 class="refsect1">FETCH_APP_ITEM Function</h2>
<p>This function fetches session state for the current or specified application in the current or specified session.</p>
<p class="subhead2"><a id="AEAPI459"></a>Syntax</p>
<pre>
APEX_UTIL.FETCH_APP_ITEM(
    p_item    IN VARCHAR2,
    p_app     IN NUMBER DEFAULT NULL,
    p_session IN NUMBER DEFAULT NULL)
RETURN VARCHAR2;
</pre>
<p class="subhead2"><a id="AEAPI460"></a>Parameters</p>
<p><a href="#BABGABIE">Table 1-23</a> describes the parameters available in the <code>FETCH_APP_ITEM</code> function.</p>
<div id="AEAPI461" class="tblformal">
<p class="titleintable"><a id="sthref28"></a><a id="BABGABIE"></a>Table 1-23 FETCH_APP_ITEM Parameters</p>
<table class="cellalignment965" title="FETCH_APP_ITEM Parameters" summary="The table describes the parameters available in the FETCH_APP_ITEM function." dir="ltr">
<thead>
<tr class="cellalignment959">
<th class="cellalignment966" id="r1c1-t36">Parameter</th>
<th class="cellalignment966" id="r1c2-t36">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment959">
<td class="cellalignment967" id="r2c1-t36" headers="r1c1-t36">
<p><code>p_item</code></p>
</td>
<td class="cellalignment967" headers="r2c1-t36 r1c2-t36">
<p>The name of an application-level item (not a page item) whose current value is to be fetched</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r3c1-t36" headers="r1c1-t36">
<p><code>p_app</code></p>
</td>
<td class="cellalignment967" headers="r3c1-t36 r1c2-t36">
<p>The ID of the application that owns the item (leave null for the current application)</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r4c1-t36" headers="r1c1-t36">
<p><code>p_session</code></p>
</td>
<td class="cellalignment967" headers="r4c1-t36 r1c2-t36">
<p>The session ID from which to obtain the value (leave null for the current session)</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI462"></a>Example</p>
<p>The following example shows how to use the <code>FETCH_APP_ITEM</code> function to obtain the value of the application item '<code>F300_NAME</code>' in application 300. As no value is passed for <code>p_session</code>, this defaults to the current session state value.</p>
<pre>
DECLARE
    VAL VARCHAR2(30);
BEGIN
    VAL := APEX_UTIL.FETCH_APP_ITEM(
        p_item =&gt; 'F300_NAME',
        p_app =&gt; 300);
END;
</pre></div>
<!-- class="refsect1" -->
<a id="CHDJJGIB"></a>
<hr />
<div id="AEAPI123" class="refsect1">
<h2 class="refsect1">FETCH_USER Procedure Signature 1</h2>
<p>This procedure fetches a user account record. To execute this procedure, the current user must have administrative privileges in the workspace. Three overloaded versions of this procedure exist, each with a distinct set of allowed parameters or signatures.</p>
<p class="subhead2"><a id="AEAPI463"></a>Syntax for Signature 1</p>
<pre>
APEX_UTIL.FETCH_USER (
    p_user_id                       IN                    NUMBER,
    p_workspace                     OUT                   VARCHAR2,
    p_user_name                     OUT                   VARCHAR2,
    p_first_name                    OUT                   VARCHAR2,
    p_last_name                     OUT                   VARCHAR2,
    p_web_password                  OUT                   VARCHAR2,
    p_email_address                 OUT                   VARCHAR2,
    p_start_date                    OUT                   VARCHAR2,
    p_end_date                      OUT                   VARCHAR2,
    p_employee_id                   OUT                   VARCHAR2,
    p_allow_access_to_schemas       OUT                   VARCHAR2,
    p_person_type                   OUT                   VARCHAR2,
    p_default_schema                OUT                   VARCHAR2,
    p_groups                        OUT                   VARCHAR2,
    p_developer_role                OUT                   VARCHAR2,
    p_description                   OUT                   VARCHAR2 );
</pre>
<p class="subhead2"><a id="AEAPI464"></a>Parameters for Signature 1</p>
<p><a href="#CHDCCGCA">Table 1-24</a> describes the parameters available in the <code>FETCH_USER</code> procedure for signature 1.</p>
<div id="AEAPI465" class="tblformal">
<p class="titleintable"><a id="sthref29"></a><a id="CHDCCGCA"></a>Table 1-24 Fetch_User Parameters Signature 1</p>
<table class="cellalignment965" title="Fetch_User Parameters Signature 1" summary="This table describes the parameters available in the FETCH_USER procedure." dir="ltr">
<thead>
<tr class="cellalignment959">
<th class="cellalignment966" id="r1c1-t37">Parameter</th>
<th class="cellalignment966" id="r1c2-t37">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment959">
<td class="cellalignment967" id="r2c1-t37" headers="r1c1-t37">
<p><code>p_user_id</code></p>
</td>
<td class="cellalignment967" headers="r2c1-t37 r1c2-t37">
<p>Numeric primary key of the user account</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r3c1-t37" headers="r1c1-t37">
<p><code>p_workspace</code></p>
</td>
<td class="cellalignment967" headers="r3c1-t37 r1c2-t37">
<p>The name of the workspace</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r4c1-t37" headers="r1c1-t37">
<p><code>p_user_name</code></p>
</td>
<td class="cellalignment967" headers="r4c1-t37 r1c2-t37">
<p>Alphanumeric name used for login.</p>
<p><span class="bold">See Also</span>: <a href="#BABDBCCD">"GET_USERNAME Function"</a></p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r5c1-t37" headers="r1c1-t37">
<p><code>p_first_name</code></p>
</td>
<td class="cellalignment967" headers="r5c1-t37 r1c2-t37">
<p>Informational.</p>
<p><span class="bold">See Also</span>: <a href="#BABFFJGB">"GET_FIRST_NAME Function"</a></p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r6c1-t37" headers="r1c1-t37">
<p><code>p_last_name</code></p>
</td>
<td class="cellalignment967" headers="r6c1-t37 r1c2-t37">
<p>Informational.</p>
<p><span class="bold">See Also</span>: <a href="#BABCAAGG">"GET_LAST_NAME Function"</a></p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r7c1-t37" headers="r1c1-t37">
<p><code>p_web_password</code></p>
</td>
<td class="cellalignment967" headers="r7c1-t37 r1c2-t37">
<p>Obfuscated account password</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r8c1-t37" headers="r1c1-t37">
<p><code>p_email_address</code></p>
</td>
<td class="cellalignment967" headers="r8c1-t37 r1c2-t37">
<p>Email address.</p>
<p><span class="bold">See Also</span>: <a href="#BABGIEJC">"GET_EMAIL Function"</a></p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r9c1-t37" headers="r1c1-t37">
<p><code>p_start_date</code></p>
</td>
<td class="cellalignment967" headers="r9c1-t37 r1c2-t37">
<p>Unused</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r10c1-t37" headers="r1c1-t37">
<p><code>p_end_date</code></p>
</td>
<td class="cellalignment967" headers="r10c1-t37 r1c2-t37">
<p>Unused</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r11c1-t37" headers="r1c1-t37">
<p><code>p_employee_id</code></p>
</td>
<td class="cellalignment967" headers="r11c1-t37 r1c2-t37">
<p>Unused</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r12c1-t37" headers="r1c1-t37">
<p><code>p_allow_access_to_schemas</code></p>
</td>
<td class="cellalignment967" headers="r12c1-t37 r1c2-t37">
<p>A list of schemas assigned to the user's workspace to which user is restricted</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r13c1-t37" headers="r1c1-t37">
<p><code>p_person_type</code></p>
</td>
<td class="cellalignment967" headers="r13c1-t37 r1c2-t37">
<p>Unused</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r14c1-t37" headers="r1c1-t37">
<p><code>p_default_schema</code></p>
</td>
<td class="cellalignment967" headers="r14c1-t37 r1c2-t37">
<p>A database schema assigned to the user's workspace, used by default for browsing.</p>
<p><span class="bold">See Also</span>: <a href="#BABIEDHD">"GET_DEFAULT_SCHEMA Function"</a></p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r15c1-t37" headers="r1c1-t37">
<p><code>p_groups</code></p>
</td>
<td class="cellalignment967" headers="r15c1-t37 r1c2-t37">
<p>List of groups of which user is a member.</p>
<p><span class="bold">See Also</span>: <a href="#BABGHFGB">"GET_GROUPS_USER_BELONGS_TO Function"</a> and <a href="#BABHCBEG">"CURRENT_USER_IN_GROUP Function"</a></p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r16c1-t37" headers="r1c1-t37">
<p><code>p_developer_role</code></p>
</td>
<td class="cellalignment967" headers="r16c1-t37 r1c2-t37">
<p>Colon-separated list of developer roles. The following are acceptable values for this parameter:</p>
<p><code>null</code> - Indicates an end user (a user who can only authenticate to developed applications).</p>
<p><code>CREATE:DATA_LOADER:EDIT:HELP:MONITOR:SQL</code> - Indicates a user with developer privilege.</p>
<p><code>ADMIN:CREATE:DATA_LOADER:EDIT:HELP:MONITOR:SQL</code> - Indicates a user with full workspace administrator and developer privilege.</p>
<p>Note: Currently this parameter is named inconsistently between the <code>CREATE_USER</code>, <code>EDIT_USER</code> and <code>FETCH_USER</code> APIs, although they all relate to the <code>DEVELOPER_ROLE</code> field stored in the named user account record. <code>CREATE_USER</code> uses <code>p_developer_privs</code>, <code>EDIT_USER</code> uses <code>p_developer_roles</code> and <code>FETCH_USER</code> uses <code>p_developer_role</code>.</p>
<p><span class="bold">See Also</span>: <a href="#BABCHEEH">"GET_USER_ROLES Function"</a></p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r17c1-t37" headers="r1c1-t37">
<p><code>p_description</code></p>
</td>
<td class="cellalignment967" headers="r17c1-t37 r1c2-t37">
<p>Informational</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI466"></a>Example for Signature 1</p>
<p>The following example shows how to use the <code>FETCH_USER</code> procedure with Signature 1. This procedure is passed the ID of the currently authenticated user for the only <code>IN</code> parameter <code>p_user_id</code>. The code then stores all the other <code>OUT</code> parameter values in local variables.</p>
<pre>
DECLARE
    l_workspace                 VARCHAR2(255);
    l_user_name                 VARCHAR2(100);
    l_first_name                VARCHAR2(255);
    l_last_name                 VARCHAR2(255);
    l_web_password              VARCHAR2(255);
    l_email_address             VARCHAR2(240);
    l_start_date                DATE;
    l_end_date                  DATE;
    l_employee_id               NUMBER(15,0);
    l_allow_access_to_schemas   VARCHAR2(4000);
    l_person_type               VARCHAR2(1);
    l_default_schema            VARCHAR2(30);
    l_groups                    VARCHAR2(1000);
    l_developer_role            VARCHAR2(60);
    l_description               VARCHAR2(240);
BEGIN
    APEX_UTIL.FETCH_USER(
        p_user_id                   =&gt; APEX_UTIL.GET_CURRENT_USER_ID,
        p_workspace                 =&gt; l_workspace,
        p_user_name                 =&gt; l_user_name,
        p_first_name                =&gt; l_first_name,
        p_last_name                 =&gt; l_last_name,
        p_web_password              =&gt; l_web_password,
        p_email_address             =&gt; l_email_address,
        p_start_date                =&gt; l_start_date,
        p_end_date                  =&gt; l_end_date,
        p_employee_id               =&gt; l_employee_id,
        p_allow_access_to_schemas   =&gt; l_allow_access_to_schemas,
        p_person_type               =&gt; l_person_type,
        p_default_schema            =&gt; l_default_schema,
        p_groups                    =&gt; l_groups,
        p_developer_role            =&gt; l_developer_role,
        p_description               =&gt; l_description);
END;
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#BABGDGJH">"EDIT_USER Procedure"</a> and <a href="#BABCHECD">"GET_CURRENT_USER_ID Function"</a></div>
</div>
<!-- class="refsect1" -->
<a id="CHDCEGHH"></a>
<hr />
<div id="AEAPI351" class="refsect1">
<h2 class="refsect1">FETCH_USER Procedure Signature 2</h2>
<p>This procedure fetches a user account record. To execute this procedure, the current user must have administrative privileges in the workspace. Three overloaded versions of this procedure exist, each with a distinct set of allowed parameters or signatures.</p>
<p class="subhead2"><a id="AEAPI467"></a>Syntax for Signature 2</p>
<pre>
APEX_UTIL.FETCH_USER (
    p_user_id                     IN                 NUMBER,
    p_user_name                   OUT                VARCHAR2,
    p_first_name                  OUT                VARCHAR2,
    p_last_name                   OUT                VARCHAR2,
    p_email_address               OUT                VARCHAR2,
    p_groups                      OUT                VARCHAR2,
    p_developer_role              OUT                VARCHAR2,
    p_description                 OUT                VARCHAR2 );
</pre>
<p class="subhead2"><a id="AEAPI468"></a>Parameters for Signature 2</p>
<p><a href="#CHDIDAIB">Table 1-25</a> describes the parameters available in the <code>FETCH_USER</code> procedure for signature 2.</p>
<div id="AEAPI469" class="tblformal">
<p class="titleintable"><a id="sthref30"></a><a id="CHDIDAIB"></a>Table 1-25 Fetch_User Parameters Signature 2</p>
<table class="cellalignment965" title="Fetch_User Parameters Signature 2" summary="This table describes the parameters available in the FETCH_USER procedure." dir="ltr">
<thead>
<tr class="cellalignment959">
<th class="cellalignment966" id="r1c1-t39">Parameter</th>
<th class="cellalignment966" id="r1c2-t39">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment959">
<td class="cellalignment967" id="r2c1-t39" headers="r1c1-t39">
<p><code>p_user_id</code></p>
</td>
<td class="cellalignment967" headers="r2c1-t39 r1c2-t39">
<p>Numeric primary key of the user account</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r3c1-t39" headers="r1c1-t39">
<p><code>p_user_name</code></p>
</td>
<td class="cellalignment967" headers="r3c1-t39 r1c2-t39">
<p>Alphanumeric name used for login.</p>
<p><span class="bold">See Also</span>: <a href="#BABDBCCD">"GET_USERNAME Function"</a></p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r4c1-t39" headers="r1c1-t39">
<p><code>p_first_name</code></p>
</td>
<td class="cellalignment967" headers="r4c1-t39 r1c2-t39">
<p>Informational.</p>
<p><span class="bold">See Also:</span> <a href="#BABFFJGB">"GET_FIRST_NAME Function"</a></p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r5c1-t39" headers="r1c1-t39">
<p><code>p_last_name</code></p>
</td>
<td class="cellalignment967" headers="r5c1-t39 r1c2-t39">
<p>Informational.</p>
<p><span class="bold">See Also:</span> <a href="#BABCAAGG">"GET_LAST_NAME Function"</a></p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r6c1-t39" headers="r1c1-t39">
<p><code>p_email_address</code></p>
</td>
<td class="cellalignment967" headers="r6c1-t39 r1c2-t39">
<p>Email address.</p>
<p><span class="bold">See Also</span>: <a href="#BABGIEJC">"GET_EMAIL Function"</a></p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r7c1-t39" headers="r1c1-t39">
<p><code>p_groups</code></p>
</td>
<td class="cellalignment967" headers="r7c1-t39 r1c2-t39">
<p>List of groups of which user is a member.</p>
<p><span class="bold">See Also:</span> <a href="#BABGHFGB">"GET_GROUPS_USER_BELONGS_TO Function"</a> and <a href="#BABHCBEG">"CURRENT_USER_IN_GROUP Function"</a></p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r8c1-t39" headers="r1c1-t39">
<p><code>p_developer_role</code></p>
</td>
<td class="cellalignment967" headers="r8c1-t39 r1c2-t39">
<p>Colon-separated list of developer roles. The following are acceptable values for this parameter:</p>
<p><code>null</code> - Indicates an end user (a user who can only authenticate to developed applications).</p>
<p><code>CREATE:DATA_LOADER:EDIT:HELP:MONITOR:SQL</code> - Indicates a user with developer privilege.</p>
<p><code>ADMIN:CREATE:DATA_LOADER:EDIT:HELP:MONITOR:SQL</code> - Indicates a user with full workspace administrator and developer privilege.</p>
<p>Note: Currently this parameter is named inconsistently between the <code>CREATE_USER</code>, <code>EDIT_USER</code> and <code>FETCH_USER</code> APIs, although they all relate to the <code>DEVELOPER_ROLE</code> field stored in the named user account record. <code>CREATE_USER</code> uses <code>p_developer_privs</code>, <code>EDIT_USER</code> uses <code>p_developer_roles</code> and <code>FETCH_USER</code> uses <code>p_developer_role</code>.</p>
<p><span class="bold">See Also</span>: <a href="#BABCHEEH">"GET_USER_ROLES Function"</a></p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r9c1-t39" headers="r1c1-t39">
<p><code>p_description</code></p>
</td>
<td class="cellalignment967" headers="r9c1-t39 r1c2-t39">
<p>Informational</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI470"></a>Example for Signature 2</p>
<p>The following example shows how to use the <code>FETCH_USER</code> procedure with Signature 2. This procedure is passed the ID of the currently authenticated user for the only <code>IN</code> parameter <code>p_user_id</code>. The code then stores all the other <code>OUT</code> parameter values in local variables.</p>
<pre>
DECLARE
    l_user_name         VARCHAR2(100);
    l_first_name        VARCHAR2(255);
    l_last_name         VARCHAR2(255);
    l_email_address     VARCHAR2(240);
    l_groups            VARCHAR2(1000);
    l_developer_role    VARCHAR2(60);
    l_description       VARCHAR2(240);
BEGIN
    APEX_UTIL.FETCH_USER(
        p_user_id           =&gt; APEX_UTIL.GET_CURRENT_USER_ID,
        p_user_name         =&gt; l_user_name,
        p_first_name        =&gt; l_first_name,
        p_last_name         =&gt; l_last_name,
        p_email_address     =&gt; l_email_address,
        p_groups            =&gt; l_groups,
        p_developer_role    =&gt; l_developer_role,
        p_description       =&gt; l_description);
END;
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#BABGDGJH">"EDIT_USER Procedure"</a> and <a href="#BABCHECD">"GET_CURRENT_USER_ID Function"</a></div>
</div>
<!-- class="refsect1" -->
<a id="BABDAHCJ"></a>
<hr />
<div id="AEAPI352" class="refsect1">
<h2 class="refsect1">FETCH_USER Procedure Signature 3</h2>
<p>This procedure fetches a user account record. To execute this procedure, the current user must have administrative privileges in the workspace. Three overloaded versions of this procedure exist, each with a distinct set of allowed parameters or signatures.</p>
<p class="subhead2"><a id="AEAPI471"></a>Syntax for Signature 3</p>
<pre>
APEX_UTIL.FETCH_USER (
    p_user_id                           IN                   NUMBER,
    p_workspace                         OUT                  VARCHAR2,
    p_user_name                         OUT                  VARCHAR2,
    p_first_name                        OUT                  VARCHAR2,
    p_last_name                         OUT                  VARCHAR2,
    p_web_password                      OUT                  VARCHAR2,
    p_email_address                     OUT                  VARCHAR2,
    p_start_date                        OUT                  VARCHAR2,
    p_end_date                          OUT                  VARCHAR2,
    p_employee_id                       OUT                  VARCHAR2,
    p_allow_access_to_schemas           OUT                  VARCHAR2,
    p_person_type                       OUT                  VARCHAR2,
    p_default_schema                    OUT                  VARCHAR2,
    p_groups                            OUT                  VARCHAR2,
    p_developer_role                    OUT                  VARCHAR2,
    p_description                       OUT                  VARCHAR2,
    p_account_expiry                    OUT                  DATE,
    p_account_locked                    OUT                  VARCHAR2,
    p_failed_access_attempts            OUT                  NUMBER,
    p_change_password_on_first_use      OUT                  VARCHAR2,
    p_first_password_use_occurred       OUT                  VARCHAR2 );
</pre>
<p class="subhead2"><a id="AEAPI472"></a>Parameters for Signature 3</p>
<p><a href="#CHDFBHEC">Table 1-26</a> describes the parameters available in the <code>FETCH_USER</code> procedure.</p>
<div id="AEAPI473" class="tblformal">
<p class="titleintable"><a id="sthref31"></a><a id="CHDFBHEC"></a>Table 1-26 Fetch_User Parameters Signature 3</p>
<table class="cellalignment965" title="Fetch_User Parameters Signature 3" summary="This table describes the parameters available in the FETCH_USER procedure." dir="ltr">
<thead>
<tr class="cellalignment959">
<th class="cellalignment966" id="r1c1-t41">Parameter</th>
<th class="cellalignment966" id="r1c2-t41">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment959">
<td class="cellalignment967" id="r2c1-t41" headers="r1c1-t41">
<p><code>p_user_id</code></p>
</td>
<td class="cellalignment967" headers="r2c1-t41 r1c2-t41">
<p>Numeric primary key of the user account</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r3c1-t41" headers="r1c1-t41">
<p><code>p_workspace</code></p>
</td>
<td class="cellalignment967" headers="r3c1-t41 r1c2-t41">
<p>The name of the workspace</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r4c1-t41" headers="r1c1-t41">
<p><code>p_user_name</code></p>
</td>
<td class="cellalignment967" headers="r4c1-t41 r1c2-t41">
<p>Alphanumeric name used for login.</p>
<p><span class="bold">See Also</span>: <a href="#BABDBCCD">"GET_USERNAME Function"</a></p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r5c1-t41" headers="r1c1-t41">
<p><code>p_first_name</code></p>
</td>
<td class="cellalignment967" headers="r5c1-t41 r1c2-t41">
<p>Informational.</p>
<p><span class="bold">See Also</span>: <a href="#BABFFJGB">"GET_FIRST_NAME Function"</a></p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r6c1-t41" headers="r1c1-t41">
<p><code>p_last_name</code></p>
</td>
<td class="cellalignment967" headers="r6c1-t41 r1c2-t41">
<p>Informational.</p>
<p><span class="bold">See Also</span>: <a href="#BABCAAGG">"GET_LAST_NAME Function"</a></p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r7c1-t41" headers="r1c1-t41">
<p><code>p_web_password</code></p>
</td>
<td class="cellalignment967" headers="r7c1-t41 r1c2-t41">
<p>Obfuscated account password</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r8c1-t41" headers="r1c1-t41">
<p><code>p_email_address</code></p>
</td>
<td class="cellalignment967" headers="r8c1-t41 r1c2-t41">
<p>Email address.</p>
<p><span class="bold">See Also</span>: <a href="#BABGIEJC">"GET_EMAIL Function"</a></p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r9c1-t41" headers="r1c1-t41">
<p><code>p_start_date</code></p>
</td>
<td class="cellalignment967" headers="r9c1-t41 r1c2-t41">
<p>Unused</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r10c1-t41" headers="r1c1-t41">
<p><code>p_end_date</code></p>
</td>
<td class="cellalignment967" headers="r10c1-t41 r1c2-t41">
<p>Unused</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r11c1-t41" headers="r1c1-t41">
<p><code>p_employee_id</code></p>
</td>
<td class="cellalignment967" headers="r11c1-t41 r1c2-t41">
<p>Unused</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r12c1-t41" headers="r1c1-t41">
<p><code>p_allow_access_to_schemas</code></p>
</td>
<td class="cellalignment967" headers="r12c1-t41 r1c2-t41">
<p>A list of schemas assigned to the user's workspace to which user is restricted</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r13c1-t41" headers="r1c1-t41">
<p><code>p_person_type</code></p>
</td>
<td class="cellalignment967" headers="r13c1-t41 r1c2-t41">
<p>Unused</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r14c1-t41" headers="r1c1-t41">
<p><code>p_default_schema</code></p>
</td>
<td class="cellalignment967" headers="r14c1-t41 r1c2-t41">
<p>A database schema assigned to the user's workspace, used by default for browsing.</p>
<p><span class="bold">See Also</span>: <a href="#BABIEDHD">"GET_DEFAULT_SCHEMA Function"</a></p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r15c1-t41" headers="r1c1-t41">
<p><code>p_groups</code></p>
</td>
<td class="cellalignment967" headers="r15c1-t41 r1c2-t41">
<p>List of groups of which user is a member.</p>
<p><span class="bold">See Also</span>: <a href="#BABGHFGB">"GET_GROUPS_USER_BELONGS_TO Function"</a> and <a href="#BABHCBEG">"CURRENT_USER_IN_GROUP Function"</a></p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r16c1-t41" headers="r1c1-t41">
<p><code>p_developer_role</code></p>
</td>
<td class="cellalignment967" headers="r16c1-t41 r1c2-t41">
<p>Colon-separated list of developer roles. The following are acceptable values for this parameter:</p>
<p><code>null</code> - Indicates an end user (a user who can only authenticate to developed applications).</p>
<p><code>CREATE:DATA_LOADER:EDIT:HELP:MONITOR:SQL</code> - Indicates a user with developer privilege.</p>
<p><code>ADMIN:CREATE:DATA_LOADER:EDIT:HELP:MONITOR:SQL</code> - Indicates a user with full workspace administrator and developer privilege.</p>
<p>Note: Currently this parameter is named inconsistently between the <code>CREATE_USER</code>, <code>EDIT_USER</code> and <code>FETCH_USER</code> APIs, although they all relate to the <code>DEVELOPER_ROLE</code> field stored in the named user account record. <code>CREATE_USER</code> uses <code>p_developer_privs</code>, <code>EDIT_USER</code> uses <code>p_developer_roles</code> and <code>FETCH_USER</code> uses <code>p_developer_role</code>.</p>
<p><span class="bold">See Also</span>: <a href="#BABCHEEH">"GET_USER_ROLES Function"</a></p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r17c1-t41" headers="r1c1-t41">
<p><code>p_description</code></p>
</td>
<td class="cellalignment967" headers="r17c1-t41 r1c2-t41">
<p>Informational</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r18c1-t41" headers="r1c1-t41">
<p><code>p_account_expiry</code></p>
</td>
<td class="cellalignment967" headers="r18c1-t41 r1c2-t41">
<p>Date account password was last reset.</p>
<p><span class="bold">See Also</span>: <a href="#CHDGFAHB">"END_USER_ACCOUNT_DAYS_LEFT Function"</a> and <a href="#CHDHBAEH">"WORKSPACE_ACCOUNT_DAYS_LEFT Function"</a></p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r19c1-t41" headers="r1c1-t41">
<p><code>p_account_locked</code></p>
</td>
<td class="cellalignment967" headers="r19c1-t41 r1c2-t41">
<p>Locked/Unlocked indicator <code>Y</code> or <code>N</code>.</p>
<p><span class="bold">See Also</span>: <a href="#CHDIFICC">"GET_ACCOUNT_LOCKED_STATUS Function"</a></p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r20c1-t41" headers="r1c1-t41">
<p><code>p_failed_access_attempts</code></p>
</td>
<td class="cellalignment967" headers="r20c1-t41 r1c2-t41">
<p>Counter for consecutive login failures</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r21c1-t41" headers="r1c1-t41">
<p><code>p_change_password_on_first_use</code></p>
</td>
<td class="cellalignment967" headers="r21c1-t41 r1c2-t41">
<p>Setting to force password change on first use <code>Y</code> or <code>N</code></p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r22c1-t41" headers="r1c1-t41">
<p><code>p_first_password_use_occurred</code></p>
</td>
<td class="cellalignment967" headers="r22c1-t41 r1c2-t41">
<p>Indicates whether login with password occurred <code>Y</code> or <code>N</code></p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI474"></a>Example for Signature 3</p>
<p>The following example shows how to use the <code>FETCH_USER</code> procedure with Signature 3. This procedure is passed the ID of the currently authenticated user for the only <code>IN</code> parameter <code>p_user_id</code>. The code then stores all the other <code>OUT</code> parameter values in local variables.</p>
<pre>
DECLARE
    l_workspace                     VARCHAR2(255);
    l_user_name                     VARCHAR2(100);
    l_first_name                    VARCHAR2(255);
    l_last_name                     VARCHAR2(255);
    l_web_password                  VARCHAR2(255);
    l_email_address                 VARCHAR2(240);
    l_start_date                    DATE;
    l_end_date                      DATE;
    l_employee_id                   NUMBER(15,0);
    l_allow_access_to_schemas       VARCHAR2(4000);
    l_person_type                   VARCHAR2(1);
    l_default_schema                VARCHAR2(30);
    l_groups                        VARCHAR2(1000);
    l_developer_role                VARCHAR2(60);
    l_description                   VARCHAR2(240);
    l_account_expiry                DATE;
    l_account_locked                VARCHAR2(1);
    l_failed_access_attempts        NUMBER;
    l_change_password_on_first_use  VARCHAR2(1);
    l_first_password_use_occurred   VARCHAR2(1);
BEGIN
    APEX_UTIL.FETCH_USER(
        p_user_id                       =&gt; APEX_UTIL.GET_CURRENT_USER_ID,
        p_workspace                     =&gt; l_workspace,
        p_user_name                     =&gt; l_user_name,
        p_first_name                    =&gt; l_first_name,
        p_last_name                     =&gt; l_last_name,
        p_web_password                  =&gt; l_web_password,
        p_email_address                 =&gt; l_email_address,
        p_start_date                    =&gt; l_start_date,
        p_end_date                      =&gt; l_end_date,
        p_employee_id                   =&gt; l_employee_id,
        p_allow_access_to_schemas       =&gt; l_allow_access_to_schemas,
        p_person_type                   =&gt; l_person_type,
        p_default_schema                =&gt; l_default_schema,
        p_groups                        =&gt; l_groups,
        p_developer_role                =&gt; l_developer_role,
        p_description                   =&gt; l_description,
        p_account_expiry                =&gt; l_account_expiry,
        p_account_locked                =&gt; l_account_locked,
        p_failed_access_attempts        =&gt; l_failed_access_attempts,
        p_change_password_on_first_use  =&gt; l_change_password_on_first_use,
        p_first_password_use_occurred   =&gt; l_first_password_use_occurred);
END;
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#BABGDGJH">"EDIT_USER Procedure"</a> and <a href="#BABCHECD">"GET_CURRENT_USER_ID Function"</a></div>
</div>
<!-- class="refsect1" -->
<a id="BABBEIEJ"></a>
<hr />
<div id="AEAPI124" class="refsect1">
<h2 class="refsect1">FIND_SECURITY_GROUP_ID Function</h2>
<p>This function returns the numeric security group ID of the named workspace.</p>
<p class="subhead2"><a id="AEAPI475"></a>Syntax</p>
<pre>
APEX_UTIL.FIND_SECURITY_GROUP_ID(
    p_workspace    IN VARCHAR2)
RETURN NUMBER;
</pre>
<p class="subhead2"><a id="AEAPI476"></a>Parameters</p>
<p><a href="#BABFGACC">Table 1-27</a> describes the parameters available in the <code>FIND_SECURITY_GROUP_ID</code> function.</p>
<div id="AEAPI477" class="tblformal">
<p class="titleintable"><a id="sthref32"></a><a id="BABFGACC"></a>Table 1-27 FIND_SECURITY_GROUP_ID Parameters</p>
<table class="cellalignment965" title="FIND_SECURITY_GROUP_ID Parameters" summary="This table describes the parameters available in the FIND_SECURITY_GROUP_ID function." dir="ltr">
<thead>
<tr class="cellalignment959">
<th class="cellalignment966" id="r1c1-t43">Parameter</th>
<th class="cellalignment966" id="r1c2-t43">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment959">
<td class="cellalignment967" id="r2c1-t43" headers="r1c1-t43">
<p><code>p_workspace</code></p>
</td>
<td class="cellalignment967" headers="r2c1-t43 r1c2-t43">
<p>The name of the workspace</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI478"></a>Example</p>
<p>The following example demonstrates how to use the <code>FIND_SECURITY_GROUP_ID</code> function to return the security group ID for the workspace called 'DEMOS'.</p>
<pre>
DECLARE
    VAL NUMBER;
BEGIN
    VAL := APEX_UTIL.FIND_SECURITY_GROUP_ID (p_workspace=&gt;'DEMOS');
END;
</pre></div>
<!-- class="refsect1" -->
<a id="BABFICHD"></a>
<hr />
<div id="AEAPI125" class="refsect1">
<h2 class="refsect1">FIND_WORKSPACE Function</h2>
<p>This function returns the workspace name associated with a security group ID.</p>
<p class="subhead2"><a id="AEAPI479"></a>Syntax</p>
<pre>
APEX_UTIL.FIND_WORKSPACE(
    p_security_group_id    IN VARCHAR2)
RETURN VARCHAR2;
</pre>
<p class="subhead2"><a id="AEAPI480"></a>Parameters</p>
<p><a href="#BABEDGCA">Table 1-28</a> describes the parameters available in the <code>FIND_WORKSPACE</code> function.</p>
<div id="AEAPI481" class="tblformal">
<p class="titleintable"><a id="sthref33"></a><a id="BABEDGCA"></a>Table 1-28 FIND_WORKSPACE Parameters</p>
<table class="cellalignment965" title="FIND_WORKSPACE Parameters" summary="This table describes the parameters available in the FIND_WORKSPACE function." dir="ltr">
<thead>
<tr class="cellalignment959">
<th class="cellalignment966" id="r1c1-t44">Parameter</th>
<th class="cellalignment966" id="r1c2-t44">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment959">
<td class="cellalignment967" id="r2c1-t44" headers="r1c1-t44">
<p><code>p_security_group_id</code></p>
</td>
<td class="cellalignment967" headers="r2c1-t44 r1c2-t44">
<p>The security group ID of a workspace</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI482"></a>Example</p>
<p>The following example demonstrates how to use the <code>FIND_WORKSPACE</code> function to return the workspace name for the workspace with a security group ID of 20.</p>
<pre>
DECLARE
    VAL VARCHAR2(255);
BEGIN
    VAL := APEX_UTIL.FIND_WORKSPACE (p_security_group_id =&gt;'20');
END;
</pre></div>
<!-- class="refsect1" -->
<a id="CHDIFICC"></a>
<hr />
<div id="AEAPI126" class="refsect1">
<h2 class="refsect1">GET_ACCOUNT_LOCKED_STATUS Function</h2>
<p>Returns <code>TRUE</code> if the account is locked and <code>FALSE</code> if the account is unlocked. Must be run by an authenticated workspace administrator in a page request context.</p>
<p class="subhead2"><a id="AEAPI483"></a>Syntax</p>
<pre>
APEX_UTIL.GET_ACCOUNT_LOCKED_STATUS (
     p_user_name IN VARCHAR2
     ) RETURN BOOLEAN;
</pre>
<p class="subhead2"><a id="AEAPI484"></a>Parameters</p>
<p><a href="#CHDHHCBE">Table 1-29</a> describes the parameters available in the <code>GET_ACCOUNT_LOCKED_STATUS</code> function.</p>
<div id="AEAPI485" class="tblformal">
<p class="titleintable"><a id="sthref34"></a><a id="CHDHHCBE"></a>Table 1-29 GET_ACCOUNT_LOCKED_STATUS Parameters</p>
<table class="cellalignment965" title="GET_ACCOUNT_LOCKED_STATUS Parameters" summary="This table describes the parameters available in the GET_ACCOUNT_LOCKED_STATUS function." dir="ltr">
<thead>
<tr class="cellalignment959">
<th class="cellalignment966" id="r1c1-t45">Parameter</th>
<th class="cellalignment966" id="r1c2-t45">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment959">
<td class="cellalignment967" id="r2c1-t45" headers="r1c1-t45">
<p><code>p_user_name</code></p>
</td>
<td class="cellalignment967" headers="r2c1-t45 r1c2-t45">
<p>The user name of the user account</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI486"></a>Example</p>
<p>The following example shows how to use the <code>GET_ACCOUNT_LOCKED_STATUS</code> function. Use this function to check if an Application Express user account (workspace administrator, developer, or end user) in the current workspace is locked.</p>
<pre>
BEGIN
    FOR c1 IN (SELECT user_name FROM wwv_flow_users) loop
        IF APEX_UTIL.GET_ACCOUNT_LOCKED_STATUS(p_user_name =&gt; c1.user_name) THEN
            HTP.P('User Account:'||c1.user_name||' is locked.'); 
        END IF;   
    END LOOP;
END;
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#CHDGCCHI">LOCK_ACCOUNT Procedure</a> and <a href="#CHDBFABJ">UNLOCK_ACCOUNT Procedure</a>.</div>
</div>
<!-- class="refsect1" -->
<a id="BABJAHCE"></a>
<hr />
<div id="AEAPI127" class="refsect1">
<h2 class="refsect1">GET_ATTRIBUTE Function</h2>
<p>This function returns the value of one of the attribute values (1 through 10) of a named user in the Application Express accounts table. Please note these are only accessible via the APIs.</p>
<p class="subhead2"><a id="AEAPI487"></a>Syntax</p>
<pre>
APEX_UTIL.GET_ATTRIBUTE(
    p_username                IN VARCHAR2,
    p_attribute_number        IN NUMBER)
RETURN VARCHAR2;
</pre>
<p class="subhead2"><a id="AEAPI488"></a>Parameters</p>
<p><a href="#BABHBAJB">Table 1-30</a> describes the parameters available in the <code>GET_ATTRIBUTE</code> function.</p>
<div id="AEAPI489" class="tblformal">
<p class="titleintable"><a id="sthref35"></a><a id="BABHBAJB"></a>Table 1-30 GET_ATTRIBUTE Parameters</p>
<table class="cellalignment965" title="GET_ATTRIBUTE Parameters" summary="This table describes the parameters available in the GET_ATRRIBUTE function." dir="ltr">
<thead>
<tr class="cellalignment959">
<th class="cellalignment966" id="r1c1-t47">Parameter</th>
<th class="cellalignment966" id="r1c2-t47">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment959">
<td class="cellalignment967" id="r2c1-t47" headers="r1c1-t47">
<p><code>p_username</code></p>
</td>
<td class="cellalignment967" headers="r2c1-t47 r1c2-t47">
<p>User name in the account.</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r3c1-t47" headers="r1c1-t47">
<p><code>p_attribute_number</code></p>
</td>
<td class="cellalignment967" headers="r3c1-t47 r1c2-t47">
<p>Number of attributes in the user record (1 through 10)</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI490"></a>Example</p>
<p>The following example shows how to use the <code>GET_ATTTIBUTE</code> function to return the value for the 1st attribute for the user 'FRANK'.</p>
<pre>
DECLARE
    VAL VARCHAR2(4000);
BEGIN
    VAL := APEX_UTIL.GET_ATTRIBUTE (
        p_username =&gt; 'FRANK',
        p_attribute_number =&gt; 1);
END;
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#CDEJDGEF">"SET_ATTRIBUTE Procedure"</a></div>
</div>
<!-- class="refsect1" -->
<a id="CHDICEAJ"></a>
<hr />
<div id="AEAPI128" class="refsect1">
<h2 class="refsect1">GET_AUTHENTICATION_RESULT Function</h2>
<p>Use this function to retrieve the authentication result of the current session. Any authenticated user can call this function in a page request context.</p>
<p class="subhead2"><a id="AEAPI491"></a>Syntax</p>
<pre>
APEX_UTIL.GET_AUTHENTICATION_RESULT
RETURN NUMBER;
</pre>
<p class="subhead2"><a id="AEAPI492"></a>Parameters</p>
<p>None.</p>
<p class="subhead2"><a id="AEAPI493"></a>Example</p>
<p>The following example demonstrates how to use the post-authentication process of an application's authentication scheme to retrieve the authentication result code set during authentication.</p>
<pre>
APEX_UTIL.SET_SESSION_STATE('MY_AUTH_STATUS','Authentication result:'||APEX_UTIL.GET_AUTHENTICATION_RESULT);
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#CHDCAECI">"SET_AUTHENTICATION_RESULT Procedure"</a> and <a href="#CHDHHJGJ">"SET_CUSTOM_AUTH_STATUS Procedure"</a></div>
</div>
<!-- class="refsect1" -->
<a id="CHDICGDA"></a>
<hr />
<div id="AEAPI129" class="refsect1">
<h2 class="refsect1">GET_BLOB_FILE_SRC Function</h2>
<p>As an alternative to using the built-in methods of providing a download link, you can use the <code>APEX_UTIL.GET_BLOB_FILE_SRC</code> function. One advantage of this approach, is the ability to more specifically format the display of the image (with height and width tags). Please note that this approach is only valid if called from a valid Oracle Application Express session. Also, this method requires that the parameters that describe the BLOB to be listed as the format of a valid item within the application. That item is then referenced by the function.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink HTMDB25908" href="../../appdev.112/e11947/advnc_blob.htm#HTMDB25908">"About BLOB Support in Forms and Reports"</a> in <a class="olink HTMDB" href="../e11947/toc.htm"><span class="italic">Oracle Application Express Application Builder User's Guide</span></a></div>
<p class="subhead2"><a id="AEAPI494"></a>Syntax</p>
<pre>
APEX_UTIL.GET_BLOB_FILE_SRC (
    p_item_name           IN VARCHAR2 DEFAULT NULL,
    p_v1                  IN VARCHAR2 DEFAULT NULL,
    p_v2                  IN VARCHAR2 DEFAULT NULL,
    p_content_disposition IN VARCHAR2 DEFAULT NULL)
RETURN VARCHAR2;
</pre>
<p class="subhead2"><a id="AEAPI495"></a>Parameters</p>
<p><a href="#CHDIHEEJ">Table 1-31</a> describes the parameters available in <code>GET_BLOB_FILE_SRC</code> function.</p>
<div id="AEAPI496" class="tblformal">
<p class="titleintable"><a id="sthref36"></a><a id="CHDIHEEJ"></a>Table 1-31 GET_BLOB_FILE_SRC Parameters</p>
<table class="cellalignment965" title="GET_BLOB_FILE_SRC Parameters" summary="This table describes the parameters available in the GET_BLOB_FILE_SRC function." dir="ltr">
<thead>
<tr class="cellalignment959">
<th class="cellalignment966" id="r1c1-t51">Parameter</th>
<th class="cellalignment966" id="r1c2-t51">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment959">
<td class="cellalignment967" id="r2c1-t51" headers="r1c1-t51">
<p><code>p_item_name</code></p>
</td>
<td class="cellalignment967" headers="r2c1-t51 r1c2-t51">
<p>Name of valid application page ITEM that with type FILE that contains the source type of DB column.</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r3c1-t51" headers="r1c1-t51">
<p><code>p_v1</code></p>
</td>
<td class="cellalignment967" headers="r3c1-t51 r1c2-t51">
<p>Value of primary key column 1.</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r4c1-t51" headers="r1c1-t51">
<p><code>p_v2</code></p>
</td>
<td class="cellalignment967" headers="r4c1-t51 r1c2-t51">
<p>Value of primary key column 2.</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r5c1-t51" headers="r1c1-t51">
<p><code>p_content_disposition</code></p>
</td>
<td class="cellalignment967" headers="r5c1-t51 r1c2-t51">
<p>Specify <code>inline</code> or <code>attachment</code>, all other values ignored</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI497"></a>Example</p>
<p>As a PLSQL Function Body:</p>
<pre>
RETURN '&lt;img src="'||APEX_UTIL.GET_BLOB_FILE_SRC('P2_ATTACHMENT',:P2_EMPNO)||'" /&gt;';
</pre>
<p>As a Region Source of type SQL:</p>
<pre>
SELECT ID, NAME,CASE WHEN NVL(dbms_lob.getlength(document),0) = 0
    THEN NULL 
    ELSE CASE WHEN attach_mimetype like 'image%'
    THEN '&lt;img src="'||apex_util.get_blob_file_src('P4_DOCUMENT',id)||'" /&gt;' 
    ELSE 
    '&lt;a href="'||apex_util.get_blob_file_src('P4_DOCUMENT',id)||'"&gt;Download&lt;/a&gt;'
    end 
    END new_img
    FROM TEST_WITH_BLOB
</pre>
<p>The previous example illustrates how to display the <code>BLOB</code> within the report, if it can be displayed, and provide a download link, if it cannot be displayed.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink HTMDB02000" href="../../appdev.112/e11947/demo.htm#HTMDB02000">"Running a Demonstration Application"</a> in <a class="olink HTMDB" href="../e11947/toc.htm"><span class="italic">Oracle Application Express Application Builder User's Guide</span></a>.</div>
</div>
<!-- class="refsect1" -->
<a id="BABCHECD"></a>
<hr />
<div id="AEAPI130" class="refsect1">
<h2 class="refsect1">GET_CURRENT_USER_ID Function</h2>
<p>This function returns the numeric user ID of the current user.</p>
<p class="subhead2"><a id="AEAPI498"></a>Syntax</p>
<pre>
APEX_UTIL.GET_CURRENT_USER_ID
RETURN NUMBER;
</pre>
<p class="subhead2"><a id="AEAPI499"></a>Parameters</p>
<p>None.</p>
<p class="subhead2"><a id="AEAPI500"></a>Example</p>
<p>This following example shows how to use the <code>GET_CURRENT_USER_ID</code> function. It returns the numeric user ID of the current user into a local variable.</p>
<pre>
DECLARE
    VAL NUMBER;
BEGIN
    VAL := APEX_UTIL.GET_CURRENT_USER_ID;
END;
</pre></div>
<!-- class="refsect1" -->
<a id="BABIEDHD"></a>
<hr />
<div id="AEAPI131" class="refsect1">
<h2 class="refsect1">GET_DEFAULT_SCHEMA Function</h2>
<p>This function returns the default schema name associated with the current user.</p>
<p class="subhead2"><a id="AEAPI501"></a>Syntax</p>
<pre>
APEX_UTIL.GET_DEFAULT_SCHEMA
RETURN VARCHAR2;
</pre>
<p class="subhead2"><a id="AEAPI502"></a>Parameters</p>
<p>None.</p>
<p class="subhead2"><a id="AEAPI503"></a>Example</p>
<p>The following example shows how to use the <code>GET_DEFAULT_SCHEMA</code> function. It returns the default schema name associated with the current user into a local variable.</p>
<pre>
DECLARE
    VAL VARCHAR2(30);
BEGIN
    VAL := APEX_UTIL.GET_DEFAULT_SCHEMA;
END;
</pre></div>
<!-- class="refsect1" -->
<a id="BABGIEJC"></a>
<hr />
<div id="AEAPI132" class="refsect1">
<h2 class="refsect1">GET_EMAIL Function</h2>
<p>This function returns the email address associated with the named user.</p>
<p class="subhead2"><a id="AEAPI504"></a>Syntax</p>
<pre>
APEX_UTIL.GET_EMAIL(
   p_username IN VARCHAR2);
RETURN VARCHAR2;
</pre>
<p class="subhead2"><a id="AEAPI505"></a>Parameters</p>
<p><a href="#BABEIBIA">Table 1-32</a> describes the parameters available in <code>GET_EMAIL</code> function.</p>
<div id="AEAPI506" class="tblformal">
<p class="titleintable"><a id="sthref37"></a><a id="BABEIBIA"></a>Table 1-32 GET_EMAIL Parameters</p>
<table class="cellalignment965" title="GET_EMAIL Parameters" summary="This table describes the parameters available in the GET_EMAIL function." dir="ltr">
<thead>
<tr class="cellalignment959">
<th class="cellalignment966" id="r1c1-t53">Parameter</th>
<th class="cellalignment966" id="r1c2-t53">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment959">
<td class="cellalignment967" id="r2c1-t53" headers="r1c1-t53">
<p><code>p_username</code></p>
</td>
<td class="cellalignment967" headers="r2c1-t53 r1c2-t53">
<p>The user name in the account</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI507"></a>Example</p>
<p>The following example shows how to use the <code>GET_EMAIL</code> function to return the email address of the user 'FRANK'.</p>
<pre>
DECLARE
    VAL VARCHAR2(240);
BEGIN
    VAL := APEX_UTIL.GET_EMAIL(p_username =&gt; 'FRANK');
END;
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#BABFCJDC">"SET_EMAIL Procedure"</a></div>
</div>
<!-- class="refsect1" -->
<a id="CHDHEEAF"></a>
<hr />
<div id="AEAPI133" class="refsect1">
<h2 class="refsect1">GET_FILE Procedure</h2>
<p>This procedure downloads files from the Oracle Application Express file repository. Please note if you are invoking this procedure during page processing, you must ensure that no page branch will be invoked under the same condition, as it will interfere with the file retrieval. This means that branches with any of the following conditions should not be set to fire:</p>
<ul>
<li>
<p>Branches with a 'When Button Pressed' attribute equal to the button that invokes the procedure.</p>
</li>
<li>
<p>Branches with conditional logic defined that would succeed during page processing when the procedure is being invoked.</p>
</li>
<li>
<p>As unconditional.</p>
</li>
</ul>
<p class="subhead2"><a id="AEAPI508"></a>Syntax</p>
<pre>
APEX_UTIL.GET_FILE (
    p_file_id    IN   VARCHAR2,
    p_inline     IN   VARCHAR2 DEFAULT 'NO');
</pre>
<p class="subhead2"><a id="AEAPI509"></a>Parameters</p>
<p><a href="#CHDFEBDG">Table 1-33</a> describes the parameters available in <code>GET_FILE</code> procedure.</p>
<div id="AEAPI510" class="tblformal">
<p class="titleintable"><a id="sthref38"></a><a id="CHDFEBDG"></a>Table 1-33 GET_FILE Parameters</p>
<table class="cellalignment965" title="GET_FILE Parameters" summary="This table describes the parameters available in the GET_FILE procedure." dir="ltr">
<thead>
<tr class="cellalignment959">
<th class="cellalignment966" id="r1c1-t55">Parameter</th>
<th class="cellalignment966" id="r1c2-t55">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment959">
<td class="cellalignment967" id="r2c1-t55" headers="r1c1-t55">
<p><code>p_file_id</code></p>
</td>
<td class="cellalignment967" headers="r2c1-t55 r1c2-t55">
<p>ID in <code>APEX_APPLICATION_FILES</code> of the file to be downloaded. <code>APEX_APPLICATION_FILES</code> is a view on all files uploaded to your workspace. The following example demonstrates how to use <code>APEX_APPLICATION_FILES</code>:</p>
<pre>
DECLARE
    l_file_id NUMBER;
BEGIN
    SELECT id
        INTO l_file_id
        FROM APEX_APPLICATION_FILES
        WHERE filename = 'myxml';
        --
        APEX_UTIL.GET_FILE(
            p_file_id   =&gt; l_file_id, 
            p_inline    =&gt; 'YES');  
END;
</pre></td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r3c1-t55" headers="r1c1-t55">
<p><code>p_inline</code></p>
</td>
<td class="cellalignment967" headers="r3c1-t55 r1c2-t55">
<p>Valid values include <code>YES</code> and <code>NO</code>. <code>YES</code> to display inline in a browser. <code>NO</code> to download as attachment</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI511"></a>Example</p>
<p>The following example shows how to use the <code>GET_FILE</code> function to return the file identified by the ID 8675309. This will be displayed inline in the browser.</p>
<pre>
BEGIN
    APEX_UTIL.GET_FILE(
        p_file_id   =&gt; '8675309',
        p_inline    =&gt; 'YES');
END;
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#CHDICJGD">"GET_FILE_ID Function"</a></div>
</div>
<!-- class="refsect1" -->
<a id="CHDICJGD"></a>
<hr />
<div id="AEAPI134" class="refsect1">
<h2 class="refsect1">GET_FILE_ID Function</h2>
<p>This function obtains the primary key of a file in the Oracle Application Express file repository.</p>
<p class="subhead2"><a id="AEAPI512"></a>Syntax</p>
<pre>
APEX_UTIL.GET_FILE_ID (
    p_name    IN   VARCHAR2)
RETURN NUMBER;
</pre>
<p class="subhead2"><a id="AEAPI513"></a>Parameters</p>
<p><a href="#BABGAFDD">Table 1-34</a> describes the parameters available in <code>GET_FILE_ID</code> function.</p>
<div id="AEAPI514" class="tblformal">
<p class="titleintable"><a id="sthref39"></a><a id="BABGAFDD"></a>Table 1-34 GET_FILE_ID Parameters</p>
<table class="cellalignment965" title="GET_FILE_ID Parameters" summary="This table describes the parameters available in the GET_FILE_ID function." dir="ltr">
<thead>
<tr class="cellalignment959">
<th class="cellalignment966" id="r1c1-t57">Parameter</th>
<th class="cellalignment966" id="r1c2-t57">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment959">
<td class="cellalignment967" id="r2c1-t57" headers="r1c1-t57">
<p><code>p_name</code></p>
</td>
<td class="cellalignment967" headers="r2c1-t57 r1c2-t57">
<p>The NAME in <code>APEX_APPLICATION_FILES</code> of the file to be downloaded. <code>APEX_APPLICATION_FILES</code> is a view on all files uploaded to your workspace.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI515"></a>Example</p>
<p>The following example shows how to use the <code>GET_FILE_ID</code> function to retrieve the database ID of the file with a filename of 'F125.sql'.</p>
<pre>
DECLARE
    l_name VARCHAR2(255);
    l_file_id NUMBER;
BEGIN
    SELECT name
        INTO l_name
        FROM APEX_APPLICATION_FILES
        WHERE filename = 'F125.sql';
        --
        l_file_id := APEX_UTIL.GET_FILE_ID(p_name =&gt; l_name);
END;
</pre></div>
<!-- class="refsect1" -->
<a id="BABFFJGB"></a>
<hr />
<div id="AEAPI135" class="refsect1">
<h2 class="refsect1">GET_FIRST_NAME Function</h2>
<p>This function returns the <code>FIRST_NAME</code> field stored in the named user account record.</p>
<p class="subhead2"><a id="AEAPI516"></a>Syntax</p>
<pre>
APEX_UTIL.GET_FIRST_NAME
    p_username IN VARCHAR2)
RETURN VARCHAR2;
</pre>
<p class="subhead2"><a id="AEAPI517"></a>Parameters</p>
<p><a href="#BABDFFJE">Table 1-35</a> describes the parameters available in <code>GET_FIRST_NAME</code> function.</p>
<div id="AEAPI518" class="tblformal">
<p class="titleintable"><a id="sthref40"></a><a id="BABDFFJE"></a>Table 1-35 GET_FIRST_NAME Parameters</p>
<table class="cellalignment965" title="GET_FIRST_NAME Parameters" summary="This table describes the parameters available in the GET_FIRST_NAME function." dir="ltr">
<thead>
<tr class="cellalignment959">
<th class="cellalignment966" id="r1c1-t58">Parameter</th>
<th class="cellalignment966" id="r1c2-t58">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment959">
<td class="cellalignment967" id="r2c1-t58" headers="r1c1-t58">
<p><code>p_username</code></p>
</td>
<td class="cellalignment967" headers="r2c1-t58 r1c2-t58">
<p>Identifies the user name in the account</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI519"></a>Example</p>
<p>The following example shows how to use the <code>GET_FIRST_NAME</code> function to return the <code>FIRST_NAME</code> of the user 'FRANK'.</p>
<pre>
DECLARE
    VAL VARCHAR2(255);
BEGIN
    VAL := APEX_UTIL.GET_FIRST_NAME(p_username =&gt; 'FRANK');
END;
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#BABEFBED">"SET_FIRST_NAME Procedure"</a></div>
</div>
<!-- class="refsect1" -->
<a id="BABGHFGB"></a>
<hr />
<div id="AEAPI136" class="refsect1">
<h2 class="refsect1">GET_GROUPS_USER_BELONGS_TO Function</h2>
<p>This function returns a comma then a space separated list of group names to which the named user is a member.</p>
<p class="subhead2"><a id="AEAPI520"></a>Syntax</p>
<pre>
APEX_UTIL.GET_GROUPS_USER_BELONGS_TO(
   p_username IN VARCHAR2)
RETURN VARCHAR2;
</pre>
<p class="subhead2"><a id="AEAPI521"></a>Parameters</p>
<p><a href="#BABDCEGD">Table 1-36</a> describes the parameters available in <code>GET_GROUPS_USER_BELONGS_TO</code> function.</p>
<div id="AEAPI522" class="tblformal">
<p class="titleintable"><a id="sthref41"></a><a id="BABDCEGD"></a>Table 1-36 GET_GROUPS_USER_BELONGS_TO Parameters</p>
<table class="cellalignment965" title="GET_GROUPS_USER_BELONGS_TO Parameters" summary="This table describes the parameters available in the GET_GROUPS_USER_BELONGS_TO function." dir="ltr">
<thead>
<tr class="cellalignment959">
<th class="cellalignment966" id="r1c1-t60">Parameter</th>
<th class="cellalignment966" id="r1c2-t60">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment959">
<td class="cellalignment967" id="r2c1-t60" headers="r1c1-t60">
<p><code>p_username</code></p>
</td>
<td class="cellalignment967" headers="r2c1-t60 r1c2-t60">
<p>Identifies the user name in the account</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI523"></a>Example</p>
<p>The following example shows how to use the <code>GET_GROUPS_USER_BELONGS_TO</code> to return the list of groups to which the user 'FRANK' is a member.</p>
<pre>
DECLARE
    VAL VARCHAR2(32765);
BEGIN
    VAL := APEX_UTIL.GET_GROUPS_USER_BELONGS_TO(p_username =&gt; 'FRANK');
END;
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#BABGDGJH">"EDIT_USER Procedure"</a></div>
</div>
<!-- class="refsect1" -->
<a id="BABFECFJ"></a>
<hr />
<div id="AEAPI137" class="refsect1">
<h2 class="refsect1">GET_GROUP_ID Function</h2>
<p>This function returns the numeric ID of a named group in the workspace.</p>
<p class="subhead2"><a id="AEAPI524"></a>Syntax</p>
<pre>
APEX_UTIL.GET_GROUP_ID(
    p_group_name IN VARCHAR2)
RETURN VARCHAR2;
</pre>
<p class="subhead2"><a id="AEAPI525"></a>Parameters</p>
<p><a href="#BABIBBBB">Table 1-37</a> describes the parameters available in <code>GET_GROUP_ID</code> function.</p>
<div id="AEAPI526" class="tblformal">
<p class="titleintable"><a id="sthref42"></a><a id="BABIBBBB"></a>Table 1-37 GET_GROUP_ID Parameters</p>
<table class="cellalignment965" title="GET_GROUP_ID Parameters" summary="This table describes the parameters available in the GET_GROUP_ID function." dir="ltr">
<thead>
<tr class="cellalignment959">
<th class="cellalignment966" id="r1c1-t62">Parameter</th>
<th class="cellalignment966" id="r1c2-t62">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment959">
<td class="cellalignment967" id="r2c1-t62" headers="r1c1-t62">
<p><code>p_group_name</code></p>
</td>
<td class="cellalignment967" headers="r2c1-t62 r1c2-t62">
<p>Identifies the user name in the account</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI527"></a>Example</p>
<p>The following example shows how to use the <code>GET_GROUP_ID</code> function to return the ID for the group named 'Managers'.</p>
<pre>
DECLARE
    VAL NUMBER;
BEGIN
    VAL := APEX_UTIL.GET_GROUP_ID(p_group_name =&gt; 'Managers');
END;
</pre></div>
<!-- class="refsect1" -->
<a id="BABIDGGD"></a>
<hr />
<div id="AEAPI138" class="refsect1">
<h2 class="refsect1">GET_GROUP_NAME Function</h2>
<p>This function returns the name of a group identified by a numeric ID.</p>
<p class="subhead2"><a id="AEAPI528"></a>Syntax</p>
<pre>
APEX_UTIL.GET_GROUP_NAME(
    p_group_id IN NUMBER)
RETURN VARCHAR2;
</pre>
<p class="subhead2"><a id="AEAPI529"></a>Parameters</p>
<p><a href="#BABIBJGC">Table 1-38</a> describes the parameters available in <code>GET_GROUP_NAME</code> function.</p>
<div id="AEAPI530" class="tblformal">
<p class="titleintable"><a id="sthref43"></a><a id="BABIBJGC"></a>Table 1-38 GET_GROUP_NAME Parameters</p>
<table class="cellalignment965" title="GET_GROUP_NAME Parameters" summary="This table describes the parameters available in the GET_GROUP_NAME function." dir="ltr">
<thead>
<tr class="cellalignment959">
<th class="cellalignment966" id="r1c1-t63">Parameter</th>
<th class="cellalignment966" id="r1c2-t63">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment959">
<td class="cellalignment967" id="r2c1-t63" headers="r1c1-t63">
<p><code>p_group_id</code></p>
</td>
<td class="cellalignment967" headers="r2c1-t63 r1c2-t63">
<p>Identifies a numeric ID of a group in the workspace</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI531"></a>Example</p>
<p>The following example shows how to use the <code>GET_GROUP_NAME</code> function to return the name of the group with the ID 8922003.</p>
<pre>
DECLARE
    VAL VARCHAR2(255);
BEGIN
    VAL := APEX_UTIL.GET_GROUP_NAME(p_group_id =&gt; 8922003);
END;
</pre></div>
<!-- class="refsect1" -->
<a id="BABCAAGG"></a>
<hr />
<div id="AEAPI139" class="refsect1">
<h2 class="refsect1">GET_LAST_NAME Function</h2>
<p>This function returns the <code>LAST_NAME</code> field stored in the named user account record.</p>
<p class="subhead2"><a id="AEAPI532"></a>Syntax</p>
<pre>
APEX_UTIL.GET_LAST_NAME(
    p_username IN VARCHAR2)
RETURN VARCHAR2;
</pre>
<p class="subhead2"><a id="AEAPI533"></a>Parameters</p>
<p><a href="#BABCIFAC">Table 1-39</a> describes the parameters available in <code>GET_LAST_NAME</code> function.</p>
<div id="AEAPI534" class="tblformal">
<p class="titleintable"><a id="sthref44"></a><a id="BABCIFAC"></a>Table 1-39 GET_LAST_NAME Parameters</p>
<table class="cellalignment965" title="GET_LAST_NAME Parameters" summary="This table describes the parameters available in the GET_LAST_NAME function." dir="ltr">
<thead>
<tr class="cellalignment959">
<th class="cellalignment966" id="r1c1-t64">Parameter</th>
<th class="cellalignment966" id="r1c2-t64">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment959">
<td class="cellalignment967" id="r2c1-t64" headers="r1c1-t64">
<p><code>p_username</code></p>
</td>
<td class="cellalignment967" headers="r2c1-t64 r1c2-t64">
<p>The user name in the user account record</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI535"></a>Example</p>
<p>The following example shows how to use the function to return the <code>LAST_NAME</code> for the user 'FRANK'.</p>
<pre>
DECLARE
    VAL VARCHAR2(255);
BEGIN
    VAL := APEX_UTIL.GET_LAST_NAME(p_username =&gt; 'FRANK');
END;
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#BABIGGEF">"SET_LAST_NAME Procedure"</a></div>
</div>
<!-- class="refsect1" -->
<a id="CHDBHEAD"></a>
<hr />
<div id="AEAPI141" class="refsect1">
<h2 class="refsect1">GET_NUMERIC_SESSION_STATE Function</h2>
<p>This function returns a numeric value for a numeric item. You can use this function in Oracle Application Express applications wherever you can use PL/SQL or SQL. You can also use the shorthand, function <code>NV</code>, in place of <code>APEX_UTIL</code>.<code>GET_NUMERIC_SESSION_STATE</code>.</p>
<p class="subhead2"><a id="AEAPI536"></a>Syntax</p>
<pre>
APEX_UTIL.GET_NUMERIC_SESSION_STATE (
    p_item     IN VARCHAR2) 
RETURN NUMBER;
</pre>
<p class="subhead2"><a id="AEAPI537"></a>Parameters</p>
<p><a href="#BABJEBGF">Table 1-40</a> describes the parameters available in <code>GET_NUMERIC_SESSION_STATE</code> function.</p>
<div id="AEAPI538" class="tblformal">
<p class="titleintable"><a id="sthref45"></a><a id="BABJEBGF"></a>Table 1-40 GET_NUMERIC_SESSION_STATE Parameters</p>
<table class="cellalignment965" title="GET_NUMERIC_SESSION_STATE Parameters" summary="This table describes the parameters available in the GET_NUMERIC_SESSION_STATE function." dir="ltr">
<thead>
<tr class="cellalignment959">
<th class="cellalignment966" id="r1c1-t66">Parameter</th>
<th class="cellalignment966" id="r1c2-t66">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment959">
<td class="cellalignment967" id="r2c1-t66" headers="r1c1-t66">
<p><code>p_item</code></p>
</td>
<td class="cellalignment967" headers="r2c1-t66 r1c2-t66">
<p>The case insensitive name of the item for which you want to have the session state fetched</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI539"></a>Example</p>
<p>The following example shows how to use the function to return the numeric value stored in session state for the item '<code>my_item</code>'.</p>
<pre>
DECLARE
    l_item_value    NUMBER;
BEGIN
    l_item_value := APEX_UTIL.GET_NUMERIC_SESSION_STATE('my_item');
END;
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#CHDEJEJE">"GET_SESSION_STATE Function"</a> and <a href="#CHDBGEEC">"SET_SESSION_STATE Procedure"</a></div>
</div>
<!-- class="refsect1" -->
<a id="CHDJJBGI"></a>
<hr />
<div id="AEAPI142" class="refsect1">
<h2 class="refsect1">GET_PREFERENCE Function</h2>
<p>This function retrieves the value of a previously saved preference for a given user.</p>
<p class="subhead2"><a id="AEAPI540"></a>Syntax</p>
<pre>
APEX_UTIL.GET_PREFERENCE (
    p_preference  IN    VARCHAR2 DEFAULT NULL,
    p_user        IN    VARCHAR2 DEFAULT V('USER')) 
RETURN VARCHAR2;
</pre>
<p class="subhead2"><a id="AEAPI541"></a>Parameters</p>
<p><a href="#CHDHJBAJ">Table 1-41</a> describes the parameters available in the <code>GET_PREFERENCE</code> function.</p>
<div id="AEAPI542" class="tblformal">
<p class="titleintable"><a id="sthref46"></a><a id="CHDHJBAJ"></a>Table 1-41 GET_PREFERENCE Parameters</p>
<table class="cellalignment965" title="GET_PREFERENCE Parameters" summary="This table describes the parameters available in the GET_PREFERENCE function." dir="ltr">
<thead>
<tr class="cellalignment959">
<th class="cellalignment966" id="r1c1-t68">Parameter</th>
<th class="cellalignment966" id="r1c2-t68">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment959">
<td class="cellalignment967" id="r2c1-t68" headers="r1c1-t68">
<p><code>p_preference</code></p>
</td>
<td class="cellalignment967" headers="r2c1-t68 r1c2-t68">
<p>Name of the preference to retrieve the value</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r3c1-t68" headers="r1c1-t68">
<p><code>p_value</code></p>
</td>
<td class="cellalignment967" headers="r3c1-t68 r1c2-t68">
<p>Value of the preference</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r4c1-t68" headers="r1c1-t68">
<p><code>p_user</code></p>
</td>
<td class="cellalignment967" headers="r4c1-t68 r1c2-t68">
<p>User for whom the preference is being retrieved</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI543"></a>Example</p>
<p>The following example shows how to use the <code>GET_PREFERENCE</code> function to return the value for the currently authenticated user's preference named '<code>default_view</code>'.</p>
<pre>
DECLARE
    l_default_view    VARCHAR2(255);
BEGIN
    l_default_view := APEX_UTIL.GET_PREFERENCE(      
        p_preference =&gt; 'default_view',
        p_user       =&gt; :APP_USER);
END;
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#CHDJDCAC">"SET_PREFERENCE Procedure"</a>, <a href="#CHDIBDEC">"REMOVE_PREFERENCE Procedure"</a> and <a class="olink AEADM116" href="../../appdev.112/e12512/aadm_mg_sessions.htm#AEADM116">"Managing User Preferences" i</a>n <a class="olink AEADM" href="../e12512/toc.htm"><span class="italic">Oracle Application Express Administration Guide</span></a>.</div>
</div>
<!-- class="refsect1" -->
<a id="CHDDECIA"></a>
<hr />
<div id="AEAPI143" class="refsect1">
<h2 class="refsect1">GET_PRINT_DOCUMENT Function Signature 1</h2>
<p>This function returns a document as BLOB using XML based report data and RTF or XSL-FO based report layout.</p>
<p class="subhead2"><a id="AEAPI544"></a>Syntax</p>
<pre>
APEX_UTIL.GET_PRINT_DOCUMENT (
    p_report_data         IN BLOB,
    p_report_layout       IN CLOB,
    p_report_layout_type  IN VARCHAR2 default 'xsl-fo',
    p_document_format     IN VARCHAR2 default 'pdf',
    p_print_server        IN VARCHAR2 default NULL)
RETURN BLOB;
</pre>
<p class="subhead2"><a id="AEAPI545"></a>Parameters</p>
<p><a href="#CHDIDAEC">Table 1-42</a> describes the parameters available in the <code>GET_PRINT_DOCUMENT</code> function.</p>
<div id="AEAPI546" class="tblformal">
<p class="titleintable"><a id="sthref47"></a><a id="CHDIDAEC"></a>Table 1-42 GET_PRINT_DOCUMENT Parameters</p>
<table class="cellalignment965" title="GET_PRINT_DOCUMENT Parameters" summary="This table describes the parameters available in the GET_PRINT_DOCUMENT." dir="ltr">
<thead>
<tr class="cellalignment959">
<th class="cellalignment966" id="r1c1-t70">Parameter</th>
<th class="cellalignment966" id="r1c2-t70">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment959">
<td class="cellalignment967" id="r2c1-t70" headers="r1c1-t70">
<p><code>p_report_data</code></p>
</td>
<td class="cellalignment967" headers="r2c1-t70 r1c2-t70">
<p>XML based report data</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r3c1-t70" headers="r1c1-t70">
<p><code>p_report_layout</code></p>
</td>
<td class="cellalignment967" headers="r3c1-t70 r1c2-t70">
<p>Report layout in XSL-FO or RTF format</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r4c1-t70" headers="r1c1-t70">
<p><code>p_report_layout_type</code></p>
</td>
<td class="cellalignment967" headers="r4c1-t70 r1c2-t70">
<p>Defines the report layout type, that is "xsl-fo" or "rtf"</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r5c1-t70" headers="r1c1-t70">
<p><code>p_document_format</code></p>
</td>
<td class="cellalignment967" headers="r5c1-t70 r1c2-t70">
<p>Defines the document format, that is "pdf", "rtf", "xls", "htm", or "xml"</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r6c1-t70" headers="r1c1-t70">
<p><code>p_print_server</code></p>
</td>
<td class="cellalignment967" headers="r6c1-t70 r1c2-t70">
<p>URL of the print server. If not specified, the print server will be derived from preferences.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<p>For a <code>GET_PRINT_DOCUMENT</code> example see <a href="#CHDCABJF">"GET_PRINT_DOCUMENT Function Signature 4"</a>.</p>
</div>
<!-- class="refsect1" -->
<a id="CHDHDDFI"></a>
<hr />
<div id="AEAPI144" class="refsect1">
<h2 class="refsect1">GET_PRINT_DOCUMENT Function Signature 2</h2>
<p>This function returns a document as BLOB using pre-defined report query and pre-defined report layout.</p>
<p class="subhead2"><a id="AEAPI547"></a>Syntax</p>
<pre>
APEX_UTIL.GET_PRINT_DOCUMENT (
    p_application_id      IN NUMBER,
    p_report_query_name   IN VARCHAR2,
    p_report_layout_name  IN VARCHAR2 default null,
    p_report_layout_type  IN VARCHAR2 default 'xsl-fo',
    p_document_format     IN VARCHAR2 default 'pdf',
    p_print_server        IN VARCHAR2 default null)
RETURN BLOB;
</pre>
<p class="subhead2"><a id="AEAPI548"></a>Parameters</p>
<p><a href="#CHDDHHHI">Table 1-43</a> describes the parameters available in the <code>GET_PRINT_DOCUMENT</code> function.</p>
<div id="AEAPI549" class="tblformal">
<p class="titleintable"><a id="sthref48"></a><a id="CHDDHHHI"></a>Table 1-43 GET_PRINT_DOCUMENT Parameters</p>
<table class="cellalignment965" title="GET_PRINT_DOCUMENT Parameters" summary="This table describes the parameters available in the GET_PRINT_DOCUMENT." dir="ltr">
<thead>
<tr class="cellalignment959">
<th class="cellalignment966" id="r1c1-t71">Parameter</th>
<th class="cellalignment966" id="r1c2-t71">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment959">
<td class="cellalignment967" id="r2c1-t71" headers="r1c1-t71">
<p><code>p_application_id</code></p>
</td>
<td class="cellalignment967" headers="r2c1-t71 r1c2-t71">
<p>Defines the application ID of the report query</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r3c1-t71" headers="r1c1-t71">
<p><code>p_report_query_name</code></p>
</td>
<td class="cellalignment967" headers="r3c1-t71 r1c2-t71">
<p>Name of the report query (stored under application's shared components)</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r4c1-t71" headers="r1c1-t71">
<p><code>p_report_layout_name</code></p>
</td>
<td class="cellalignment967" headers="r4c1-t71 r1c2-t71">
<p>Name of the report layout (stored under application's Shared Components)</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r5c1-t71" headers="r1c1-t71">
<p><code>p_report_layout_type</code></p>
</td>
<td class="cellalignment967" headers="r5c1-t71 r1c2-t71">
<p>Defines the report layout type, that is "xsl-fo" or "rtf"</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r6c1-t71" headers="r1c1-t71">
<p><code>p_document_format</code></p>
</td>
<td class="cellalignment967" headers="r6c1-t71 r1c2-t71">
<p>Defines the document format, that is "pdf", "rtf", "xls", "htm", or "xml"</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r7c1-t71" headers="r1c1-t71">
<p><code>p_print_server</code></p>
</td>
<td class="cellalignment967" headers="r7c1-t71 r1c2-t71">
<p>URL of the print server. If not specified, the print server will be derived from preferences.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<p>For a <code>GET_PRINT_DOCUMENT</code> example see <a href="#CHDCABJF">"GET_PRINT_DOCUMENT Function Signature 4"</a>.</p>
</div>
<!-- class="refsect1" -->
<a id="CHDJBJCF"></a>
<hr />
<div id="AEAPI145" class="refsect1">
<h2 class="refsect1">GET_PRINT_DOCUMENT Function Signature 3</h2>
<p>This function returns a document as BLOB using a pre-defined report query and RTF or XSL-FO based report layout.</p>
<p class="subhead2"><a id="AEAPI550"></a>Syntax</p>
<pre>
APEX_UTIL.GET_PRINT_DOCUMENT (
    p_application_id      IN NUMBER,
    p_report_query_name   IN VARCHAR2,
    p_report_layout       IN CLOB,
    p_report_layout_type  IN VARCHAR2 default 'xsl-fo',
    p_document_format     IN VARCHAR2 default 'pdf',
    p_print_server        IN VARCHAR2 default null)
RETURN BLOB;
</pre>
<p class="subhead2"><a id="AEAPI551"></a>Parameters</p>
<p><a href="#CHDJHCAC">Table 1-44</a> describes the parameters available in the <code>GET_PRINT_DOCUMENT</code> function.</p>
<div id="AEAPI552" class="tblformal">
<p class="titleintable"><a id="sthref49"></a><a id="CHDJHCAC"></a>Table 1-44 GET_PRINT_DOCUMENT Parameters</p>
<table class="cellalignment965" title="GET_PRINT_DOCUMENT Parameters" summary="This table describes the parameters available in the GET_PRINT_DOCUMENT." dir="ltr">
<thead>
<tr class="cellalignment959">
<th class="cellalignment966" id="r1c1-t72">Parameter</th>
<th class="cellalignment966" id="r1c2-t72">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment959">
<td class="cellalignment967" id="r2c1-t72" headers="r1c1-t72">
<p><code>p_application_id</code></p>
</td>
<td class="cellalignment967" headers="r2c1-t72 r1c2-t72">
<p>Defines the application ID of the report query</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r3c1-t72" headers="r1c1-t72">
<p><code>p_report_query_name</code></p>
</td>
<td class="cellalignment967" headers="r3c1-t72 r1c2-t72">
<p>Name of the report query (stored under application's shared components)</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r4c1-t72" headers="r1c1-t72">
<p><code>p_report_layout</code></p>
</td>
<td class="cellalignment967" headers="r4c1-t72 r1c2-t72">
<p>Defines the report layout in XSL-FO or RTF format</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r5c1-t72" headers="r1c1-t72">
<p><code>p_report_layout_type</code></p>
</td>
<td class="cellalignment967" headers="r5c1-t72 r1c2-t72">
<p>Defines the report layout type, that is "xsl-fo" or "rtf"</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r6c1-t72" headers="r1c1-t72">
<p><code>p_document_format</code></p>
</td>
<td class="cellalignment967" headers="r6c1-t72 r1c2-t72">
<p>Defines the document format, that is "pdf", "rtf", "xls", "htm", or "xml"</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r7c1-t72" headers="r1c1-t72">
<p><code>p_print_server</code></p>
</td>
<td class="cellalignment967" headers="r7c1-t72 r1c2-t72">
<p>URL of the print server. If not specified, the print server will be derived from preferences.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<p>For a <code>GET_PRINT_DOCUMENT</code> example see <a href="#CHDCABJF">"GET_PRINT_DOCUMENT Function Signature 4"</a>.</p>
</div>
<!-- class="refsect1" -->
<a id="CHDCABJF"></a>
<hr />
<div id="AEAPI146" class="refsect1">
<h2 class="refsect1">GET_PRINT_DOCUMENT Function Signature 4</h2>
<p>This function returns a document as <code>BLOB</code> using XML based report data and RTF or XSL-FO based report layout.</p>
<p class="subhead2"><a id="AEAPI553"></a>Syntax</p>
<pre>
APEX_UTIL.GET_PRINT_DOCUMENT (
    p_report_data         IN CLOB,
    p_report_layout       IN CLOB,
    p_report_layout_type  IN VARCHAR2 default 'xsl-fo',
    p_document_format     IN VARCHAR2 default 'pdf',
    p_print_server        IN VARCHAR2 default NULL)
RETURN BLOB;
</pre>
<p class="subhead2"><a id="AEAPI554"></a>Parameters</p>
<p><a href="#CHDEFFAD">Table 1-45</a> describes the parameters available in the <code>GET_PRINT_DOCUMENT</code> function. for Signature 4</p>
<div id="AEAPI555" class="tblformal">
<p class="titleintable"><a id="sthref50"></a><a id="CHDEFFAD"></a>Table 1-45 GET_PRINT_DOCUMENT Parameters</p>
<table class="cellalignment965" title="GET_PRINT_DOCUMENT Parameters" summary="This table describes the parameters available in the GET_PRINT_DOCUMENT." dir="ltr">
<thead>
<tr class="cellalignment959">
<th class="cellalignment966" id="r1c1-t73">Parameter</th>
<th class="cellalignment966" id="r1c2-t73">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment959">
<td class="cellalignment967" id="r2c1-t73" headers="r1c1-t73">
<p><code>p_report_data</code></p>
</td>
<td class="cellalignment967" headers="r2c1-t73 r1c2-t73">
<p>XML based report data, must be encoded in UTF-8</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r3c1-t73" headers="r1c1-t73">
<p><code>p_report_layout</code></p>
</td>
<td class="cellalignment967" headers="r3c1-t73 r1c2-t73">
<p>Report layout in XSL-FO or RTF format</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r4c1-t73" headers="r1c1-t73">
<p><code>p_report_layout_type</code></p>
</td>
<td class="cellalignment967" headers="r4c1-t73 r1c2-t73">
<p>Defines the report layout type, that is "xsl-fo" or "rtf"</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r5c1-t73" headers="r1c1-t73">
<p><code>p_document_format</code></p>
</td>
<td class="cellalignment967" headers="r5c1-t73 r1c2-t73">
<p>Defines the document format, that is "pdf", "rtf", "xls", "htm", or "xml"</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r6c1-t73" headers="r1c1-t73">
<p><code>p_print_server</code></p>
</td>
<td class="cellalignment967" headers="r6c1-t73 r1c2-t73">
<p>URL of the print server. If not specified, the print server will be derived from preferences</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI556"></a>Example for Signature 4</p>
<p>The following example shows how to use the <code>GET_PRINT_DOCUMENT</code> using Signature 4 (Document returns as a BLOB using XML based report data and RTF or XSL-FO based report layout). In this example, <code>GET_PRINT_DOCUMENT</code> is used in conjunction with <code>APEX_MAIL</code>.<code>SEND</code> and <code>APEX_MAIL.ADD_ATTACHMENT</code> to send an email with an attachment of the file returned by <code>GET_PRINT_DOCUMENT</code>. Both the report data and layout are taken from values stored in page items (<code>P1_XML</code> and <code>P1_XSL</code>).</p>
<pre>
DECLARE
    l_id number;
    l_document BLOB;
BEGIN
    l_document := APEX_UTIL.GET_PRINT_DOCUMENT (
        p_report_data         =&gt; :P1_XML,
        p_report_layout       =&gt; :P1_XSL,
        p_report_layout_type  =&gt; 'xsl-fo',
        p_document_format     =&gt; 'pdf');
 
   l_id := APEX_MAIL.SEND(
       p_to        =&gt; :P35_MAIL_TO,
       p_from      =&gt; 'noreplies@oracle.com',
       p_subj      =&gt; 'sending PDF via print API',
       p_body      =&gt; 'Please review the attachment.',
       p_body_html =&gt; 'Please review the attachment');
 
   APEX_MAIL.ADD_ATTACHMENT (
       p_mail_id    =&gt; l_id,
       p_attachment =&gt; l_document,
       p_filename   =&gt; 'mydocument.pdf',
       p_mime_type  =&gt; 'application/pdf');
END;
</pre></div>
<!-- class="refsect1" -->
<a id="CHDEJEJE"></a>
<hr />
<div id="AEAPI151" class="refsect1">
<h2 class="refsect1">GET_SESSION_STATE Function</h2>
<p>This function returns the value for an item. You can use this function in your Oracle Application Express applications wherever you can use PL/SQL or SQL. You can also use the shorthand, function <code>V</code>, in place of <code>APEX_UTIL.GET_SESSION_STATE</code>.</p>
<p class="subhead2"><a id="AEAPI557"></a>Syntax</p>
<pre>
APEX_UTIL.GET_SESSION_STATE (
    p_item    IN   VARCHAR2) 
RETURN VARCHAR2;
</pre>
<p class="subhead2"><a id="AEAPI558"></a>Parameters</p>
<p><a href="#BABBBHBC">Table 1-46</a> describes the parameters available in <code>GET_SESSION_STATE</code> function.</p>
<div id="AEAPI559" class="tblformal">
<p class="titleintable"><a id="sthref51"></a><a id="BABBBHBC"></a>Table 1-46 GET_SESSION_STATE Parameters</p>
<table class="cellalignment965" title="GET_SESSION_STATE Parameters" summary="This table describes the parameters available in the GET_SESSION_STATE function." dir="ltr">
<thead>
<tr class="cellalignment959">
<th class="cellalignment966" id="r1c1-t74">Parameter</th>
<th class="cellalignment966" id="r1c2-t74">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment959">
<td class="cellalignment967" id="r2c1-t74" headers="r1c1-t74">
<p><code>p_item</code></p>
</td>
<td class="cellalignment967" headers="r2c1-t74 r1c2-t74">
<p>The case insensitive name of the item for which you want to have the session state fetched</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI560"></a>Example</p>
<p>The following example shows how to use the <code>GET_SESSION_STATE</code> function to return the value stored in session state for the item 'my_item'.</p>
<pre>
DECLARE
    l_item_value  VARCHAR2(255);
BEGIN
    l_item_value := APEX_UTIL.GET_SESSION_STATE('my_item');
END;
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#CHDBHEAD">"GET_NUMERIC_SESSION_STATE Function"</a> and <a href="#CHDBGEEC">"SET_SESSION_STATE Procedure"</a></div>
</div>
<!-- class="refsect1" -->
<a id="BABHDJCD"></a>
<hr />
<div id="AEAPI152" class="refsect1">
<h2 class="refsect1">GET_USER_ID Function</h2>
<p>This function returns the numeric ID of a named user in the workspace.</p>
<p class="subhead2"><a id="AEAPI561"></a>Syntax</p>
<pre>
APEX_UTIL.GET_USER_ID(
    p_username   IN VARCHAR2)
RETURN NUMBER;
</pre>
<p class="subhead2"><a id="AEAPI562"></a>Parameters</p>
<p><a href="#BABBHCFH">Table 1-47</a> describes the parameters available in <code>GET_USER_ID</code> function.</p>
<div id="AEAPI563" class="tblformal">
<p class="titleintable"><a id="sthref52"></a><a id="BABBHCFH"></a>Table 1-47 GET_USER_ID Parameters</p>
<table class="cellalignment965" title="GET_USER_ID Parameters" summary="This table describes the parameters available in the GET_USER_ID function." dir="ltr">
<thead>
<tr class="cellalignment959">
<th class="cellalignment966" id="r1c1-t76">Parameter</th>
<th class="cellalignment966" id="r1c2-t76">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment959">
<td class="cellalignment967" id="r2c1-t76" headers="r1c1-t76">
<p><code>p_username</code></p>
</td>
<td class="cellalignment967" headers="r2c1-t76 r1c2-t76">
<p>Identifies the name of a user in the workspace</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI564"></a>Example</p>
<p>The following example shows how to use the <code>GET_USER_ID</code> function to return the ID for the user named 'FRANK'.</p>
<pre>
DECLARE
    VAL NUMBER;
BEGIN
    VAL := APEX_UTIL.GET_USER_ID(p_username =&gt; 'FRANK');
END;
</pre></div>
<!-- class="refsect1" -->
<a id="BABCHEEH"></a>
<hr />
<div id="AEAPI153" class="refsect1">
<h2 class="refsect1">GET_USER_ROLES Function</h2>
<p>This function returns the <code>DEVELOPER_ROLE</code> field stored in the named user account record. Please note that currently this parameter is named inconsistently between the <code>CREATE_USER</code>, <code>EDIT_USER</code> and <code>FETCH_USER</code> APIs, although they all relate to the <code>DEVELOPER_ROLE</code> field. <code>CREATE_USER</code> uses <code>p_developer_privs</code>, <code>EDIT_USER</code> uses <code>p_developer_roles</code> and <code>FETCH_USER</code> uses <code>p_developer_role</code>.</p>
<p class="subhead2"><a id="AEAPI565"></a>Syntax</p>
<pre>
APEX_UTIL.GET_USER_ROLES(
   p_username IN VARCHAR2)
RETURN VARCHAR2;
</pre>
<p class="subhead2"><a id="AEAPI566"></a>Parameters</p>
<p><a href="#BABJHIDC">Table 1-48</a> describes the parameters available in <code>GET_USER_ROLES</code> function.</p>
<div id="AEAPI567" class="tblformal">
<p class="titleintable"><a id="sthref53"></a><a id="BABJHIDC"></a>Table 1-48 GET_USER_ROLES Parameters</p>
<table class="cellalignment965" title="GET_USER_ROLES Parameters" summary="This table describes the parameters available in the GET_USER_ROLES function." dir="ltr">
<thead>
<tr class="cellalignment959">
<th class="cellalignment966" id="r1c1-t77">Parameter</th>
<th class="cellalignment966" id="r1c2-t77">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment959">
<td class="cellalignment967" id="r2c1-t77" headers="r1c1-t77">
<p><code>p_username</code></p>
</td>
<td class="cellalignment967" headers="r2c1-t77 r1c2-t77">
<p>Identifies a user name in the account</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI568"></a>Example</p>
<p>The following example shows how to use the <code>GET_USER_ROLES</code> function to return colon separated list of roles stored in the <code>DEVELOPER_ROLE</code> field for the user 'FRANK'.</p>
<pre>
DECLARE
    VAL VARCHAR2(4000);
BEGIN
    VAL := APEX_UTIL.GET_USER_ROLES(p_username=&gt;'FRANK');
END;
</pre></div>
<!-- class="refsect1" -->
<a id="BABDBCCD"></a>
<hr />
<div id="AEAPI140" class="refsect1">
<h2 class="refsect1">GET_USERNAME Function</h2>
<p>This function returns the user name of a user account identified by a numeric ID.</p>
<p class="subhead2"><a id="AEAPI569"></a>Syntax</p>
<pre>
APEX_UTIL.GET_USERNAME(
    p_userid IN NUMBER)
RETURN VARCHAR2;
</pre>
<p class="subhead2"><a id="AEAPI570"></a>Parameters</p>
<p><a href="#BABBICJG">Table 1-49</a> describes the parameters available in <code>GET_USERNAME</code> function.</p>
<div id="AEAPI571" class="tblformal">
<p class="titleintable"><a id="sthref54"></a><a id="BABBICJG"></a>Table 1-49 GET_USERNAME Parameters</p>
<table class="cellalignment965" title="GET_USERNAME Parameters" summary="This table describes the parameters available in the GET_USERNAME function." dir="ltr">
<thead>
<tr class="cellalignment959">
<th class="cellalignment966" id="r1c1-t78">Parameter</th>
<th class="cellalignment966" id="r1c2-t78">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment959">
<td class="cellalignment967" id="r2c1-t78" headers="r1c1-t78">
<p><code>p_userid</code></p>
</td>
<td class="cellalignment967" headers="r2c1-t78 r1c2-t78">
<p>Identifies the numeric ID of a user account in the workspace</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI572"></a>Example</p>
<p>The following example shows how to use the <code>GET_USERNAME</code> function to return the user name for the user with an ID of 228922003.</p>
<pre>
DECLARE
    VAL VARCHAR2(100);
BEGIN
    VAL := APEX_UTIL.GET_USERNAME(p_userid =&gt; 228922003);
END;
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#BABIBIBH">"SET_USERNAME Procedure"</a></div>
</div>
<!-- class="refsect1" -->
<a id="BABEEGHB"></a>
<hr />
<div id="AEAPI154" class="refsect1">
<h2 class="refsect1">IS_LOGIN_PASSWORD_VALID Function</h2>
<p>This function returns a Boolean result based on the validity of the password for a named user account in the current workspace. This function returns true if the password matches and it returns false if the password does not match.</p>
<p class="subhead2"><a id="AEAPI573"></a>Syntax</p>
<pre>
APEX_UTIL.IS_LOGIN_PASSWORD_VALID(
    p_username IN VARCHAR2,
    p_password IN VARCHAR2)
RETURN BOOLEAN;
</pre>
<p class="subhead2"><a id="AEAPI574"></a>Parameters</p>
<p><a href="#BABIGFHI">Table 1-50</a> describes the parameters available in the <code>IS_LOGIN_PASSWORD_VALID</code> function.</p>
<div id="AEAPI575" class="tblformal">
<p class="titleintable"><a id="sthref55"></a><a id="BABIGFHI"></a>Table 1-50 IS_LOGIN_PASSWORD_VALID Parameters</p>
<table class="cellalignment965" title="IS_LOGIN_PASSWORD_VALID Parameters" summary="This table describes the parameters available in the IS_LOGIN_PASSWORD_VALID function." dir="ltr">
<thead>
<tr class="cellalignment959">
<th class="cellalignment966" id="r1c1-t80">Parameter</th>
<th class="cellalignment966" id="r1c2-t80">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment959">
<td class="cellalignment967" id="r2c1-t80" headers="r1c1-t80">
<p><code>p_username</code></p>
</td>
<td class="cellalignment967" headers="r2c1-t80 r1c2-t80">
<p>User name in account</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r3c1-t80" headers="r1c1-t80">
<p><code>p_password</code></p>
</td>
<td class="cellalignment967" headers="r3c1-t80 r1c2-t80">
<p>Password to be compared with password stored in the account</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI576"></a>Example</p>
<p>The following example shows how to use the <code>IS_LOGIN_PASSWORD_VALID</code> function to check if the user 'FRANK' has the password 'tiger'. <code>TRUE</code> will be returned if this is a valid password for 'FRANK', <code>FALSE</code> if not.</p>
<pre>
DECLARE
    VAL BOOLEAN;
BEGIN
    VAL := APEX_UTIL.IS_LOGIN_PASSWORD_VALID (
        p_username=&gt;'FRANK',
        p_password=&gt;'tiger');
END;
</pre></div>
<!-- class="refsect1" -->
<a id="BABBFADB"></a>
<hr />
<div id="AEAPI155" class="refsect1">
<h2 class="refsect1">IS_USERNAME_UNIQUE Function</h2>
<p>This function returns a Boolean result based on whether the named user account is unique in the workspace.</p>
<p class="subhead2"><a id="AEAPI577"></a>Syntax</p>
<pre>
APEX_UTIL.IS_USERNAME_UNIQUE(
    p_username IN VARCHAR2)
RETURN BOOLEAN;
</pre>
<p class="subhead2"><a id="AEAPI578"></a>Parameters</p>
<p><a href="#BABDEDBI">Table 1-51</a> describes the parameters available in <code>IS_USERNAME_UNIQUE</code> function.</p>
<div id="AEAPI579" class="tblformal">
<p class="titleintable"><a id="sthref56"></a><a id="BABDEDBI"></a>Table 1-51 IS_USERNAME_UNIQUE Parameters</p>
<table class="cellalignment965" title="IS_USERNAME_UNIQUE Parameters" summary="This table describes the parameters available in the IS_USERNAME_UNIQUE function." dir="ltr">
<thead>
<tr class="cellalignment959">
<th class="cellalignment966" id="r1c1-t81">Parameter</th>
<th class="cellalignment966" id="r1c2-t81">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment959">
<td class="cellalignment967" id="r2c1-t81" headers="r1c1-t81">
<p><code>p_username</code></p>
</td>
<td class="cellalignment967" headers="r2c1-t81 r1c2-t81">
<p>Identifies the user name to be tested</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI580"></a>Example</p>
<p>The following example shows how to use the <code>IS_USERNAME_UNIQUE</code> function. If the user 'FRANK' already exists in the current workspace, <code>FALSE</code> will be returned, otherwise <code>TRUE</code> is returned.</p>
<pre>
DECLARE
    VAL BOOLEAN;
BEGIN
    VAL := APEX_UTIL.IS_USERNAME_UNIQUE(
        p_username=&gt;'FRANK');
END;
</pre></div>
<!-- class="refsect1" -->
<a id="CDECGAHI"></a>
<hr />
<div id="AEAPI156" class="refsect1">
<h2 class="refsect1">KEYVAL_NUM Function</h2>
<p>This function gets the value of the package variable (<code>wwv_flow_utilities.g_val_num</code>) set by <code>APEX_UTIL.SAVEKEY_NUM</code>.</p>
<p class="subhead2"><a id="AEAPI581"></a>Syntax</p>
<pre>
APEX_UTIL.KEYVAL_NUM
RETURN NUMBER;
</pre>
<p class="subhead2"><a id="AEAPI582"></a>Parameters</p>
<p>None</p>
<p class="subhead2"><a id="AEAPI583"></a>Example</p>
<p>The following example shows how to use the <code>KEYVAL_NUM</code> function to return the current value of the package variable <code>wwv_flow_utilities.g_val_num</code>.</p>
<pre>
DECLARE
    VAL NUMBER;
BEGIN
    VAL := APEX_UTIL.KEYVAL_NUM;
END;
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#CDECCEAJ">"SAVEKEY_NUM Function"</a></div>
</div>
<!-- class="refsect1" -->
<a id="CDEGEDHJ"></a>
<hr />
<div id="AEAPI157" class="refsect1">
<h2 class="refsect1">KEYVAL_VC2 Function</h2>
<p>This function gets the value of the package variable (<code>wwv_flow_utilities.g_val_vc2</code>) set by <code>APEX_UTIL.SAVEKEY_VC2</code>.</p>
<p class="subhead2"><a id="AEAPI584"></a>Syntax</p>
<pre>
APEX_UTIL.KEYVAL_VC2;
</pre>
<p class="subhead2"><a id="AEAPI585"></a>Parameters</p>
<p>None.</p>
<p class="subhead2"><a id="AEAPI586"></a>Example</p>
<p>The following example shows how to use the <code>KEYVAL_VC2</code> function to return the current value of the package variable <code>wwv_flow_utilities.g_val_vc2</code>.</p>
<pre>
DECLARE
    VAL VARCHAR2(4000);
BEGIN
    VAL := APEX_UTIL.KEYVAL_VC2;
END;
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#CDEIHDAA">"SAVEKEY_VC2 Function"</a></div>
</div>
<!-- class="refsect1" -->
<a id="CHDGCCHI"></a>
<hr />
<div id="AEAPI158" class="refsect1">
<h2 class="refsect1">LOCK_ACCOUNT Procedure</h2>
<p>Sets a user account status to locked. Must be run by an authenticated workspace administrator in the context of a page request.</p>
<p class="subhead2"><a id="AEAPI587"></a>Syntax</p>
<pre>
APEX_UTIL.LOCK_ACCOUNT (
     p_user_name IN VARCHAR2); 
</pre>
<p class="subhead2"><a id="AEAPI588"></a>Parameters</p>
<p><a href="#CHDIEHGF">Table 1-52</a> describes the parameters available in the <code>LOCK_ACCOUNT</code> procedure.</p>
<div id="AEAPI589" class="tblformal">
<p class="titleintable"><a id="sthref57"></a><a id="CHDIEHGF"></a>Table 1-52 LOCK_ACCOUNT Parameters</p>
<table class="cellalignment965" title="LOCK_ACCOUNT Parameters" summary="This table describes the parameters available in the LOCK_ACCOUNTprocedure." dir="ltr">
<thead>
<tr class="cellalignment959">
<th class="cellalignment966" id="r1c1-t84">Parameter</th>
<th class="cellalignment966" id="r1c2-t84">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment959">
<td class="cellalignment967" id="r2c1-t84" headers="r1c1-t84">
<p><code>p_user_name</code></p>
</td>
<td class="cellalignment967" headers="r2c1-t84 r1c2-t84">
<p>The user name of the user account</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI590"></a>Example</p>
<p>The following example shows how to use the <code>LOCK_ACCOUNT</code> procedure. Use this procedure to lock an Application Express account (workspace administrator, developer, or end user) in the current workspace. This action locks the account for use by administrators, developers, and end users.</p>
<pre>
BEGIN
    FOR c1 IN (SELECT user_name from wwv_flow_users) LOOP
        APEX_UTIL.LOCK_ACCOUNT(p_user_name =&gt; c1.user_name);
        htp.p('End User Account:'||c1.user_name||' is now locked.');    
    END LOOP;
END;
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#CHDBFABJ">"UNLOCK_ACCOUNT Procedure"</a> and <a href="#CHDIFICC">"GET_ACCOUNT_LOCKED_STATUS Function"</a></div>
</div>
<!-- class="refsect1" -->
<a id="CHDGCDII"></a>
<hr />
<div id="AEAPI159" class="refsect1">
<h2 class="refsect1">PASSWORD_FIRST_USE_OCCURRED Function</h2>
<p>Returns true if the account's password has changed since the account was created, an Oracle Application Express administrator performs a password reset operation that results in a new password being emailed to the account holder, or a user has initiated password reset operation. This function returns false if the account's password has not been changed since either of the events just described.</p>
<p>This function may be run in a page request context by any authenticated user.</p>
<p class="subhead2"><a id="AEAPI591"></a>Syntax</p>
<pre>
APEX_UTIL.PASSWORD_FIRST_USE_OCCURRED (
    p_user_name IN VARCHAR2)
RETURN BOOLEAN;
</pre>
<p class="subhead2"><a id="AEAPI592"></a>Parameters</p>
<p><a href="#CHDCFBIH">Table 1-53</a> describes the parameters available in the <code>PASSWORD_FIRST_USE_OCCURRED</code> procedure.</p>
<div id="AEAPI593" class="tblformal">
<p class="titleintable"><a id="sthref58"></a><a id="CHDCFBIH"></a>Table 1-53 PASSWORD_FIRST_USE_OCCURRED Parameters</p>
<table class="cellalignment965" title="PASSWORD_FIRST_USE_OCCURRED Parameters" summary="This table describes the parameters available in the PASSWORD_FIRST_USE_OCCURRED function." dir="ltr">
<thead>
<tr class="cellalignment959">
<th class="cellalignment966" id="r1c1-t86">Parameter</th>
<th class="cellalignment966" id="r1c2-t86">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment959">
<td class="cellalignment967" id="r2c1-t86" headers="r1c1-t86">
<p><code>p_user_name</code></p>
</td>
<td class="cellalignment967" headers="r2c1-t86 r1c2-t86">
<p>The user name of the user account</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI594"></a>Example</p>
<p>The following example shows how to use the <code>PASSWORD_FIRST_USE_OCCURRED</code> function. Use this function to check if the password for an Application Express user account (workspace administrator, developer, or end user) in the current workspace has been changed by the user the first time the user logged in after the password was initially set during account creation, or was changed by one of the password reset operations described above.This is meaningful only with accounts for which the <code>CHANGE_PASSWORD_ON_FIRST_USE</code> attribute is set to <span class="bold">Yes</span>.</p>
<pre>
BEGIN
    FOR c1 IN (SELECT user_name from wwv_flow_users) LOOP
        IF APEX_UTIL.PASSWORD_FIRST_USE_OCCURRED(p_user_name =&gt; c1.user_name) THEN
            htp.p('User:'||c1.user_name||' has logged in and updated the password.');
        END IF;
    END LOOP;
END;    
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#CHDFJCDH">"CHANGE_PASSWORD_ON_FIRST_USE Function"</a></div>
</div>
<!-- class="refsect1" -->
<a id="CDEIBCJD"></a>
<hr />
<div id="AEAPI160" class="refsect1">
<h2 class="refsect1">PREPARE_URL Function</h2>
<p>The PREPARE_URL function serves two purposes:</p>
<ol>
<li>
<p>To return an f?p URL with the Session State Protection checksum argument (&amp;cs=) if one is required.</p>
</li>
<li>
<p>To return an f?p URL with the session ID component replaced with zero (0) if the zero session ID feature is in use and other criteria are met.</p>
</li>
</ol>
<div class="infobox-note">
<p class="notep1">Note:</p>
The <code>PREPARE_URL</code> functions returns the f?p URL with <code>&amp;cs=&lt;large hex value&gt;</code> appended. If you use this returned value, for example in JavaScript, it may be necessary to escape the ampersand in the URL in order to conform with syntax rules of the particular context. One place you may encounter this is in SVG chart SQL queries which might include <code>PREPARE_URL</code> calls.</div>
<p class="subhead2"><a id="AEAPI595"></a>Syntax</p>
<pre>
APEX_UTIL.PREPARE_URL (
    p_url           IN VARCHAR2,
    p_url_charset   IN VARCHAR2 default null,
    p_checksum_type IN VARCHAR2 default null)
RETURN VARCHAR2;
</pre>
<p class="subhead2"><a id="AEAPI596"></a>Parameters</p>
<p><a href="#CDEJBFIF">Table 1-54</a> describes the parameters available in the PREPARE_URL function.</p>
<div id="AEAPI597" class="tblformal">
<p class="titleintable"><a id="sthref59"></a><a id="CDEJBFIF"></a>Table 1-54 PREPARE_URL Parameters</p>
<table class="cellalignment965" title="PREPARE_URL Parameters" summary="This table describes the parameters available in the PREPARE_URL function." dir="ltr">
<thead>
<tr class="cellalignment959">
<th class="cellalignment966" id="r1c1-t89">Parameter</th>
<th class="cellalignment966" id="r1c2-t89">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment959">
<td class="cellalignment967" id="r2c1-t89" headers="r1c1-t89">
<p>p_url</p>
</td>
<td class="cellalignment967" headers="r2c1-t89 r1c2-t89">
<p>An f?p relative URL with all substitutions resolved</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r3c1-t89" headers="r1c1-t89">
<p>p_url_charset</p>
</td>
<td class="cellalignment967" headers="r3c1-t89 r1c2-t89">
<p>The character set name (for example, <code>UTF-8</code>) to use when escaping special characters contained within argument values</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r4c1-t89" headers="r1c1-t89">
<p>p_checksum type</p>
</td>
<td class="cellalignment967" headers="r4c1-t89 r1c2-t89">
<p>Null or any of the following six values, <code>SESSION</code> or <code>3</code>, <code>PRIVATE_BOOKMARK</code> or <code>2</code>, or <code>PUBLIC_BOOKMARK</code> or <code>1</code></p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI598"></a>Example 1</p>
<p>The following example shows how to use the <code>PREPARE_URL</code> function to return a URL with a valid 'SESSION' level checksum argument. This URL sets the value of <code>P1_ITEM</code> page item to <code>xyz</code>.</p>
<pre>
DECLARE
    l_url varchar2(2000);
    l_app number := v('APP_ID');
    l_session number := v('APP_SESSION');
BEGIN
    l_url := APEX_UTIL.PREPARE_URL(
        p_url =&gt; 'f?p=' || l_app || ':1:'||l_session||'::NO::P1_ITEM:xyz',
        p_checksum_type =&gt; 'SESSION');
END;
</pre>
<p class="subhead2"><a id="AEAPI599"></a>Example 2</p>
<p>The following example shows how to use the <code>PREPARE_URL</code> function to return a URL with a zero session ID. In a PL/SQL Dynamic Content region that generates <code>f?p</code> URLs (anchors), call <code>PREPARE_URL</code> to ensure that the session ID will set to zero when the zero session ID feature is in use, when the user is a public user (not authenticated), and when the target page is a public page in the current application:</p>
<pre>
htp.p(APEX_UTIL.PREPARE_URL(p_url =&gt; 'f?p=' || :APP_ID || ':10:'|| :APP_SESSION
||'::NO::P10_ITEM:ABC');
</pre>
<p>When using <code>PREPARE_URL</code> for this purpose, the <code>p_url_charset</code> and <code>p_checksum_type</code> arguments can be omitted. However, it is permissible to use them when both the Session State Protection and Zero Session ID features are applicable.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink HTMDB03025" href="../../appdev.112/e11947/concept_url.htm#HTMDB03025">"Facilitating Bookmarks by Using Zero as the Session ID"</a> and <a class="olink HTMDB12002" href="../../appdev.112/e11947/sec_dev.htm#HTMDB12002">"Understanding Session State Protection"</a> in <a class="olink HTMAD" href="../../appdev.112/e11945/toc.htm"><span class="italic">Oracle Application Express Advanced Tutorials</span></a></div>
</div>
<!-- class="refsect1" -->
<a id="CHDJHBFJ"></a>
<hr />
<div id="AEAPI161" class="refsect1">
<h2 class="refsect1">PUBLIC_CHECK_AUTHORIZATION Function</h2>
<p>Given the name of a security scheme, this function determines if the current user passes the security check.</p>
<p class="subhead2"><a id="AEAPI600"></a>Syntax</p>
<pre>
APEX_UTIL.PUBLIC_CHECK_AUTHORIZATION (
    p_security_scheme    IN    VARCHAR2) 
RETURN BOOLEAN;
</pre>
<p class="subhead2"><a id="AEAPI601"></a>Parameters</p>
<p><a href="#CHDGEJGC">Table 1-55</a> describes the parameters available in <code>PUBLIC_CHECK_AUTHORIZATION</code> function.</p>
<div id="AEAPI602" class="tblformal">
<p class="titleintable"><a id="sthref60"></a><a id="CHDGEJGC"></a>Table 1-55 PUBLIC_CHECK_AUTHORIZATION Parameters</p>
<table class="cellalignment965" title="PUBLIC_CHECK_AUTHORIZATION Parameters" summary="This table describes the parameters available in the PUBLIC_CHECK_AUTHORIZATION function." dir="ltr">
<thead>
<tr class="cellalignment959">
<th class="cellalignment966" id="r1c1-t91">Parameter</th>
<th class="cellalignment966" id="r1c2-t91">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment959">
<td class="cellalignment967" id="r2c1-t91" headers="r1c1-t91">
<p><code>p_security_name</code></p>
</td>
<td class="cellalignment967" headers="r2c1-t91 r1c2-t91">
<p>The name of the security scheme that determines if the user passes the security check</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI603"></a>Example</p>
<p>The following example shows how to use the <code>PUBLIC_CHECK_AUTHORIZATION</code> function to check if the current user passes the check defined in the <code>my_auth_scheme</code> authorization scheme.</p>
<pre>
DECLARE
    l_check_security  BOOLEAN;
BEGIN
    l_check_security := APEX_UTIL.PUBLIC_CHECK_AUTHORIZATION('my_auth_scheme');
END;
</pre></div>
<!-- class="refsect1" -->
<a id="CHDEJJJH"></a>
<hr />
<div id="AEAPI162" class="refsect1">
<h2 class="refsect1">PURGE_REGIONS_BY_APP Procedure</h2>
<p>Deletes all cached regions for an application.</p>
<p class="subhead2"><a id="AEAPI604"></a>Syntax</p>
<pre>
APEX_UTIL.PURGE_REGIONS_BY_APP (
    p_application IN NUMBER);
</pre>
<p class="subhead2"><a id="AEAPI605"></a>Parameters</p>
<p><a href="#CHDJEFFD">Table 1-56</a> describes the parameters available in <code>PURGE_REGIONS_BY_APP</code>.</p>
<div id="AEAPI606" class="tblformal">
<p class="titleintable"><a id="sthref61"></a><a id="CHDJEFFD"></a>Table 1-56 PURGE_REGIONS_BY_APP Parameters</p>
<table class="cellalignment965" title="PURGE_REGIONS_BY_APP Parameters" summary="This table describes the parameters available in the PURGE_REGIONS_BY_APP procedure." dir="ltr">
<thead>
<tr class="cellalignment959">
<th class="cellalignment966" id="r1c1-t92">Parameter</th>
<th class="cellalignment966" id="r1c2-t92">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment959">
<td class="cellalignment967" id="r2c1-t92" headers="r1c1-t92">
<p><code>p_application</code></p>
</td>
<td class="cellalignment967" headers="r2c1-t92 r1c2-t92">
<p>The identification number (ID) of the application.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI607"></a>Example</p>
<p>The following example show how to use <code>APEX_UTIL.PURGE_REGIONS_BY_APP</code> to delete all cached regions for application #123.</p>
<pre>
BEGIN
    APEX_UTILITIES.PURGE_REGIONS_BY_APP(p_application=&gt;123);
END;
</pre></div>
<!-- class="refsect1" -->
<a id="CHDICGBE"></a>
<hr />
<div id="AEAPI163" class="refsect1">
<h2 class="refsect1">PURGE_REGIONS_BY_NAME Procedure</h2>
<p>Deletes all cached values for a region identified by the application ID, page number and region name.</p>
<p class="subhead2"><a id="AEAPI608"></a>Syntax</p>
<pre>
APEX_UTIL.PURGE_REGIONS_BY_NAME (
     p_application IN NUMBER,
     p_page        IN NUMBER,
     p_region_name IN VARCHAR2);
</pre>
<p class="subhead2"><a id="AEAPI609"></a>Parameters</p>
<p><a href="#CHDCFFDA">Table 1-57</a> describes the parameters available in <code>PURGE_REGIONS_BY_NAME</code>.</p>
<div id="AEAPI610" class="tblformal">
<p class="titleintable"><a id="sthref62"></a><a id="CHDCFFDA"></a>Table 1-57 PURGE_REGIONS_BY_NAME Parameters</p>
<table class="cellalignment965" title="PURGE_REGIONS_BY_NAME Parameters" summary="This table describes the parameters available in the PURGE_REGIONS_BY_ID procedure." dir="ltr">
<thead>
<tr class="cellalignment959">
<th class="cellalignment966" id="r1c1-t93">Parameter</th>
<th class="cellalignment966" id="r1c2-t93">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment959">
<td class="cellalignment967" id="r2c1-t93" headers="r1c1-t93">
<p><code>p_application</code></p>
</td>
<td class="cellalignment967" headers="r2c1-t93 r1c2-t93">
<p>The identification number (ID) of the application.</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r3c1-t93" headers="r1c1-t93">
<p><code>p_page</code></p>
</td>
<td class="cellalignment967" headers="r3c1-t93 r1c2-t93">
<p>The number of the page containing the region to be deleted.</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r4c1-t93" headers="r1c1-t93">
<p><code>p_region_name</code></p>
</td>
<td class="cellalignment967" headers="r4c1-t93 r1c2-t93">
<p>The region name to be deleted.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI611"></a>Example</p>
<p>The following example shows how to use the <code>PURGE_REGIONS_BY_NAME</code> procedure to delete all the cached values for the region '<code>my_cached_region</code>' on page 1 of the current application.</p>
<pre>
BEGIN
    APEX_UTIL.PURGE_REGIONS_BY_NAME(
        p_application =&gt; :APP_ID,
        p_page =&gt; 1,
        p_region_name =&gt; 'my_cached_region');
END;
</pre></div>
<!-- class="refsect1" -->
<a id="CHDGAGJA"></a>
<hr />
<div id="AEAPI165" class="refsect1">
<h2 class="refsect1">PURGE_REGIONS_BY_PAGE Procedure</h2>
<p>Deletes all cached regions by application and page.</p>
<p class="subhead2"><a id="AEAPI612"></a>Syntax</p>
<pre>
APEX_UTIL.PURGE_REGIONS_BY_PAGE (
     p_application IN NUMBER,
     p_page     IN NUMBER);
</pre>
<p class="subhead2"><a id="AEAPI613"></a>Parameters</p>
<p><a href="#CHDIJHHJ">Table 1-58</a> describes the parameters available in <code>PURGE_REGIONS_BY_PAGE</code>.</p>
<div id="AEAPI614" class="tblformal">
<p class="titleintable"><a id="sthref63"></a><a id="CHDIJHHJ"></a>Table 1-58 PURGE_REGIONS_BY_PAGE Parameters</p>
<table class="cellalignment965" title="PURGE_REGIONS_BY_PAGE Parameters" summary="This table describes the parameters available in the PURGE_REGIONS_BY_PAGE procedure." dir="ltr">
<thead>
<tr class="cellalignment959">
<th class="cellalignment966" id="r1c1-t94">Parameter</th>
<th class="cellalignment966" id="r1c2-t94">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment959">
<td class="cellalignment967" id="r2c1-t94" headers="r1c1-t94">
<p><code>p_application</code></p>
</td>
<td class="cellalignment967" headers="r2c1-t94 r1c2-t94">
<p>The identification number (ID) of the application.</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r3c1-t94" headers="r1c1-t94">
<p><code>p_page</code></p>
</td>
<td class="cellalignment967" headers="r3c1-t94 r1c2-t94">
<p>The identification number of page containing the region.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI615"></a>Example</p>
<p>The following example shows how to use the <code>PURGE_REGIONS_BY_PAGE</code> procedure to delete all the cached values for regions on page 1 of the current application.</p>
<pre>
BEGIN
    APEX_UTIL.PURGE_REGIONS_BY_PAGE(
        p_application =&gt; :APP_ID,
        p_page =&gt; 1);
END;
</pre></div>
<!-- class="refsect1" -->
<a id="CHDIBDEC"></a>
<hr />
<div id="AEAPI167" class="refsect1">
<h2 class="refsect1">REMOVE_PREFERENCE Procedure</h2>
<p>This procedure removes the preference for the supplied user.</p>
<p class="subhead2"><a id="AEAPI616"></a>Syntax</p>
<pre>
APEX_UTIL.REMOVE_PREFERENCE(
    p_preference    IN    VARCHAR2 DEFAULT NULL,
    p_user          IN    VARCHAR2 DEFAULT V('USER'));
</pre>
<p class="subhead2"><a id="AEAPI617"></a>Parameters</p>
<p><a href="#CHDEGEJC">Table 1-59</a> describes the parameters available in the <code>REMOVE_PREFERENCE</code> procedure.</p>
<div id="AEAPI618" class="tblformal">
<p class="titleintable"><a id="sthref64"></a><a id="CHDEGEJC"></a>Table 1-59 REMOVE_PREFERENCE Parameters</p>
<table class="cellalignment965" title="REMOVE_PREFERENCE Parameters" summary="This table describes the parameters available in the REMOVE_PREFERENCE procedure." dir="ltr">
<thead>
<tr class="cellalignment959">
<th class="cellalignment966" id="r1c1-t95">Parameter</th>
<th class="cellalignment966" id="r1c2-t95">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment959">
<td class="cellalignment967" id="r2c1-t95" headers="r1c1-t95">
<p><code>p_preference</code></p>
</td>
<td class="cellalignment967" headers="r2c1-t95 r1c2-t95">
<p>Name of the preference to remove</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r3c1-t95" headers="r1c1-t95">
<p><code>p_user</code></p>
</td>
<td class="cellalignment967" headers="r3c1-t95 r1c2-t95">
<p>User for whom the preference is defined</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI619"></a>Example</p>
<p>The following example shows how to use the <code>REMOVE_PREFERENCE</code> procedure to remove the preference <code>default_view</code> for the currently authenticated user.</p>
<pre>
BEGIN
    APEX_UTIL.REMOVE_PREFERENCE(
        p_preference =&gt; 'default_view',
        p_user       =&gt; :APP_USER);    
END;
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#CHDJJBGI">"GET_PREFERENCE Function"</a>, <a href="#CHDJDCAC">"SET_PREFERENCE Procedure"</a> and <a class="olink AEADM110" href="../../appdev.112/e12512/aadm_mg_sessions.htm#AEADM110">"Managing Session State and User Preferences"</a> in <a class="olink AEADM" href="../e12512/toc.htm"><span class="italic">Oracle Application Express Administration Guide</span></a>.</div>
</div>
<!-- class="refsect1" -->
<a id="CHDHDFHB"></a>
<hr />
<div id="AEAPI168" class="refsect1">
<h2 class="refsect1">REMOVE_SORT_PREFERENCES Procedure</h2>
<p>This procedure removes the user's column heading sorting preference value.</p>
<p class="subhead2"><a id="AEAPI620"></a>Syntax</p>
<pre>
APEX_UTIL.REMOVE_SORT_PREFERENCES (
    p_user  IN   VARCHAR2 DEFAULT V('USER'));
</pre>
<p class="subhead2"><a id="AEAPI621"></a>Parameters</p>
<p><a href="#CHDEJHCF">Table 1-60</a> describes the parameters available in <code>REMOVE_SORT_PREFERENCES</code> function.</p>
<div id="AEAPI622" class="tblformal">
<p class="titleintable"><a id="sthref65"></a><a id="CHDEJHCF"></a>Table 1-60 REMOVE_SORT_PREFERENCES Parameters</p>
<table class="cellalignment965" title="REMOVE_SORT_PREFERENCES Parameters" summary="This table describes the parameters available in the REMOVE_SORT_PREFERENCESfunction." dir="ltr">
<thead>
<tr class="cellalignment959">
<th class="cellalignment966" id="r1c1-t97">Parameter</th>
<th class="cellalignment966" id="r1c2-t97">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment959">
<td class="cellalignment967" id="r2c1-t97" headers="r1c1-t97">
<p><code>p_user</code></p>
</td>
<td class="cellalignment967" headers="r2c1-t97 r1c2-t97">
<p>Identifies the user for whom sorting preferences will be removed</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI623"></a>Example</p>
<p>The following example shows how to use the <code>REMOVE_SORT_PREFERENCES</code> procedure to remove the currently authenticated user's column heading sorting preferences.</p>
<pre>
BEGIN
    APEX_UTIL.REMOVE_SORT_PREFERENCES(:APP_USER);
END;
</pre></div>
<!-- class="refsect1" -->
<a id="BABCBJDG"></a>
<hr />
<div id="AEAPI169" class="refsect1">
<h2 class="refsect1">REMOVE_USER Procedure</h2>
<p>This procedure removes the user account identified by the primary key or a user name. To execute this procedure, the current user must have administrative privilege in the workspace.</p>
<p class="subhead2"><a id="AEAPI624"></a>Syntax</p>
<pre>
APEX_UTIL.REMOVE_USER(
    p_user_id   IN NUMBER,
    p_user_name IN VARCHAR2);
</pre>
<p class="subhead2"><a id="AEAPI625"></a>Parameters</p>
<p><a href="#BABIIDGF">Table 1-61</a> describes the parameters available in the <code>REMOVE_USER</code> procedure.</p>
<div id="AEAPI626" class="tblformal">
<p class="titleintable"><a id="sthref66"></a><a id="BABIIDGF"></a>Table 1-61 REMOVE_USER Parameters</p>
<table class="cellalignment965" title="REMOVE_USER Parameters" summary="This table describes the parameters available in the REMOVE_USER procedure." dir="ltr">
<thead>
<tr class="cellalignment959">
<th class="cellalignment966" id="r1c1-t98">Parameter</th>
<th class="cellalignment966" id="r1c2-t98">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment959">
<td class="cellalignment967" id="r2c1-t98" headers="r1c1-t98">
<p><code>p_user_id</code></p>
</td>
<td class="cellalignment967" headers="r2c1-t98 r1c2-t98">
<p>The numeric primary key of the user account record</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r3c1-t98" headers="r1c1-t98">
<p><code>p_user_name</code></p>
</td>
<td class="cellalignment967" headers="r3c1-t98 r1c2-t98">
<p>The user name of the user account</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI627"></a>Example</p>
<p>The following examples show how to use the <code>REMOVE_USER</code> procedure to remove a user account. Firstly, by the primary key (using the <code>p_user_id</code> parameter) and secondly by user name (using the <code>p_user_name</code> parameter).</p>
<pre>
BEGIN
    APEX_UTIL.REMOVE_USER(p_user_id=&gt; 99997);
END;

BEGIN
    APEX_UTIL.REMOVE_USER(p_user_name =&gt; 'FRANK');
END;
</pre></div>
<!-- class="refsect1" -->
<a id="CHDHBBFF"></a>
<hr />
<div id="AEAPI170" class="refsect1">
<h2 class="refsect1">RESET_AUTHORIZATIONS Procedure</h2>
<p>To increase performance, Oracle Application Express caches the results of authorization schemes after they have been evaluated. You can use this procedure to undo caching, requiring each authorization scheme be revalidated when it is next encountered during page show or accept processing. You can use this procedure if you want users to have the ability to change their responsibilities (their authorization profile) within your application.</p>
<p class="subhead2"><a id="AEAPI628"></a>Syntax</p>
<pre>
APEX_UTIL.RESET_AUTHORIZATIONS; 
</pre>
<p class="subhead2"><a id="AEAPI629"></a>Parameters</p>
<p>None.</p>
<p class="subhead2"><a id="AEAPI630"></a>Example</p>
<p>The following example shows how to use the <code>RESET_AUTHORIZATIONS</code> procedure to clear the authorization scheme cache.</p>
<pre>
BEGIN
    APEX_UTIL.RESET_AUTHORIZATIONS;
END;
</pre></div>
<!-- class="refsect1" -->
<a id="BABHJDHG"></a>
<hr />
<div id="AEAPI171" class="refsect1"><a id="CHDGAIHJ"></a>
<h2 class="refsect1">RESET_PW Procedure</h2>
<p>This procedure resets the password for a named user and emails it in a message to the email address located for the named account in the current workspace. To execute this procedure, the current user must have administrative privilege in the workspace.</p>
<p class="subhead2"><a id="AEAPI631"></a>Syntax</p>
<pre>
APEX_UTIL.RESET_PW(
    p_user IN VARCHAR2,
    p_msg  IN VARCHAR2);
</pre>
<p class="subhead2"><a id="AEAPI632"></a>Parameters</p>
<p><a href="#BABIBCFI">Table 1-62</a> describes the parameters available in the <code>RESET_PW</code> procedure.</p>
<div id="AEAPI633" class="tblformal">
<p class="titleintable"><a id="sthref67"></a><a id="BABIBCFI"></a>Table 1-62 RESET_PW Parameters</p>
<table class="cellalignment965" title="RESET_PW Parameters" summary="This table describes the parameters available in the RESET_PW procedure." dir="ltr">
<thead>
<tr class="cellalignment959">
<th class="cellalignment966" id="r1c1-t99">Parameter</th>
<th class="cellalignment966" id="r1c2-t99">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment959">
<td class="cellalignment967" id="r2c1-t99" headers="r1c1-t99">
<p><code>p_user</code></p>
</td>
<td class="cellalignment967" headers="r2c1-t99 r1c2-t99">
<p>The user name of the user account</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r3c1-t99" headers="r1c1-t99">
<p><code>p_msg</code></p>
</td>
<td class="cellalignment967" headers="r3c1-t99 r1c2-t99">
<p>Message text to be mailed to a user</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI634"></a>Example</p>
<p>The following example shows how to use the <code>RESET_PW</code> procedure to reset the password for the user 'FRANK'.</p>
<pre>
BEGIN
    APEX_UTIL.RESET_PW(
        p_user =&gt; 'FRANK',
        p_msg =&gt; 'Contact help desk at 555-1212 with questions');
END;
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#BABHDJHD">"CHANGE_CURRENT_USER_PW Procedure"</a></div>
</div>
<!-- class="refsect1" -->
<a id="CDECCEAJ"></a>
<hr />
<div id="AEAPI172" class="refsect1">
<h2 class="refsect1">SAVEKEY_NUM Function</h2>
<p>This function sets a package variable (<code>wwv_flow_utilities.g_val_num</code>) so that it can be retrieved using the function <code>KEYVAL_NUM</code>.</p>
<p class="subhead2"><a id="AEAPI635"></a>Syntax</p>
<pre>
APEX_UTIL.SAVEKEY_NUM(
    p_val IN NUMBER)
RETURN NUMBER;
</pre>
<p class="subhead2"><a id="AEAPI636"></a>Parameters</p>
<p><a href="#CHDIDDHE">Table 1-63</a> describes the parameters available in the <code>SAVEKEY_NUM</code> procedure.</p>
<div id="AEAPI637" class="tblformal">
<p class="titleintable"><a id="sthref68"></a><a id="CHDIDDHE"></a>Table 1-63 SAVEKEY_NUM Parameters</p>
<table class="cellalignment965" title="SAVEKEY_NUM Parameters" summary="This table describes the parameters available in the SAVEKEY_NUM procedure." dir="ltr">
<thead>
<tr class="cellalignment959">
<th class="cellalignment966" id="r1c1-t101">Parameter</th>
<th class="cellalignment966" id="r1c2-t101">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment959">
<td class="cellalignment967" id="r2c1-t101" headers="r1c1-t101">
<p><code>p_val</code></p>
</td>
<td class="cellalignment967" headers="r2c1-t101 r1c2-t101">
<p>The numeric value to be saved</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI638"></a>Example</p>
<p>The following example shows how to use the <code>SAVEKEY_NUM</code> function to set the <code>wwv_flow_utilities.g_val_num</code> package variable to the value of <code>10</code>.</p>
<pre>
DECLARE
    VAL NUMBER;
BEGIN
    VAL := APEX_UTIL.SAVEKEY_NUM(p_val =&gt; 10);
END;
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#CDECGAHI">"KEYVAL_NUM Function"</a></div>
</div>
<!-- class="refsect1" -->
<a id="CDEIHDAA"></a>
<hr />
<div id="AEAPI173" class="refsect1">
<h2 class="refsect1">SAVEKEY_VC2 Function</h2>
<p>This function sets a package variable (<code>wwv_flow_utilities.g_val_vc2</code>) so that it can be retrieved using the function <code>KEYVAL_VC2</code>.</p>
<p class="subhead2"><a id="AEAPI639"></a>Syntax</p>
<pre>
APEX_UTIL.SAVEKEY_VC2(
    p_val IN VARCHAR2)
RETURN VARCHAR2;
</pre>
<p class="subhead2"><a id="AEAPI640"></a>Parameters</p>
<p><a href="#CHDFBGAJ">Table 1-64</a> describes the parameters available in the <code>SAVEKEY_VC2</code> function.</p>
<div id="AEAPI641" class="tblformal">
<p class="titleintable"><a id="sthref69"></a><a id="CHDFBGAJ"></a>Table 1-64 SAVEKEY_VC2 Parameters</p>
<table class="cellalignment965" title="SAVEKEY_VC2 Parameters" summary="This table describes the parameters available in the SAVEKEY_VC2 function." dir="ltr">
<thead>
<tr class="cellalignment959">
<th class="cellalignment966" id="r1c1-t103">Parameter</th>
<th class="cellalignment966" id="r1c2-t103">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment959">
<td class="cellalignment967" id="r2c1-t103" headers="r1c1-t103">
<p><code>p_val</code></p>
</td>
<td class="cellalignment967" headers="r2c1-t103 r1c2-t103">
<p>The is the VARCHAR2 value to be saved</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI642"></a>Example</p>
<p>The following example shows how to use the <code>SAVEKEY_VC2</code> function to set the <code>wwv_flow_utilities.g_val_vc2</code> package variable to the value of 'XXX'.</p>
<pre>
DECLARE
    VAL VARCHAR2(4000);
BEGIN
    VAL := APEX_UTIL.SAVEKEY_VC2(p_val =&gt; 'XXX');
END;
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#CDEGEDHJ">"KEYVAL_VC2 Function"</a></div>
</div>
<!-- class="refsect1" -->
<a id="CDEJDGEF"></a>
<hr />
<div id="AEAPI174" class="refsect1">
<h2 class="refsect1">SET_ATTRIBUTE Procedure</h2>
<p>This procedure sets the value of one of the attribute values (1 through 10) of a user in the Application Express accounts table.</p>
<p class="subhead2"><a id="AEAPI643"></a>Syntax</p>
<pre>
APEX_UTIL.SET_ATTRIBUTE( 
    p_userid           IN NUMBER, 
    p_attribute_number IN NUMBER,
    p_attribute_value  IN VARCHAR2); 
</pre>
<p class="subhead2"><a id="AEAPI644"></a>Parameters</p>
<p><a href="#CDEGDIEC">Table 1-65</a> describes the parameters available in the <code>SET_ATTRIBUTE</code> procedure.</p>
<div id="AEAPI645" class="tblformal">
<p class="titleintable"><a id="sthref70"></a><a id="CDEGDIEC"></a>Table 1-65 SET_ATTRIBUTE Parameters</p>
<table class="cellalignment965" title="SET_ATTRIBUTE Parameters" summary="This table describes the parameters available in the SET_ATTRIBUTE procedure." dir="ltr">
<thead>
<tr class="cellalignment959">
<th class="cellalignment966" id="r1c1-t105">Parameter</th>
<th class="cellalignment966" id="r1c2-t105">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment959">
<td class="cellalignment967" id="r2c1-t105" headers="r1c1-t105">
<p><code>p_userid</code></p>
</td>
<td class="cellalignment967" headers="r2c1-t105 r1c2-t105">
<p>The numeric ID of the user account</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r3c1-t105" headers="r1c1-t105">
<p><code>p_attribute_number</code></p>
</td>
<td class="cellalignment967" headers="r3c1-t105 r1c2-t105">
<p>Attribute number in the user record (1 through 10)</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r4c1-t105" headers="r1c1-t105">
<p><code>p_attribute_value</code></p>
</td>
<td class="cellalignment967" headers="r4c1-t105 r1c2-t105">
<p>Value of the attribute located by <code>p_attribute_number</code> to be set in the user record</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI646"></a>Example</p>
<p>The following example shows how to use the <code>SET_ATTRIBUTE</code> procedure to set the number 1 attribute for user 'FRANK' with the value 'foo'.</p>
<pre>
DECLARE  
    VAL VARCHAR2(4000);
BEGIN 
    APEX_UTIL.SET_ATTRIBUTE ( 
        p_userid =&gt; apex_util.get_user_id(p_username =&gt; 'FRANK'), 
        p_attribute_number =&gt; 1, 
        p_attribute_value =&gt; 'foo'); 
END; 
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#BABJAHCE">"GET_ATTRIBUTE Function"</a></div>
</div>
<!-- class="refsect1" -->
<a id="CHDCAECI"></a>
<hr />
<div id="AEAPI175" class="refsect1">
<h2 class="refsect1">SET_AUTHENTICATION_RESULT Procedure</h2>
<p>This procedure can be called from an application's custom authentication function (that is, credentials verification function). The status passed to this procedure is logged in the Login Access Log.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink AEADM160" href="../../appdev.112/e12512/aadm_activity.htm#AEADM160">"Monitoring Activity within a Workspace"</a> in <a class="olink AEADM" href="../e12512/toc.htm"><span class="italic">Oracle Application Express Administration Guide</span></a></div>
<p class="subhead2"><a id="AEAPI647"></a>Syntax</p>
<pre>
APEX_UTIL.SET_AUTHENTICATION_RESULT(
    p_code IN NUMBER);
</pre>
<p class="subhead2"><a id="AEAPI648"></a>Parameters</p>
<p><a href="#CHDGEIFG">Table 1-21</a> describes the parameters available in the <code>SET_AUTHENTICATION_RESULT</code> procedure.</p>
<div id="AEAPI649" class="tblformal">
<p class="titleintable"><a id="sthref71"></a><a id="sthref72"></a>Table 1-66 SET_AUTHENTICATION_RESULT Parameters</p>
<table class="cellalignment965" title="SET_AUTHENTICATION_RESULT Parameters" summary="This table describes the parameters available in the SET_AUTHENTICATION_RESULT procedure." dir="ltr">
<thead>
<tr class="cellalignment959">
<th class="cellalignment966" id="r1c1-t108">Parameter</th>
<th class="cellalignment966" id="r1c2-t108">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment959">
<td class="cellalignment967" id="r2c1-t108" headers="r1c1-t108">
<p><code>p_code</code></p>
</td>
<td class="cellalignment967" headers="r2c1-t108 r1c2-t108">
<p>Any numeric value the developer chooses. After this value is set in the session using this procedure, it can be retrieved using the <code>APEX_UTIL.GET_AUTHENTICATION_RESULT</code> function.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI650"></a>Example</p>
<p>One way to use this procedure is to include it in the application authentication scheme. This example demonstrates how text and numeric status values can be registered for logging. In this example, no credentials verification is performed, it just demonstrates how text and numeric status values can be registered for logging.Note that the status set using this procedure is visible in the <code>apex_user_access_log</code> view and in the reports on this view available to workspace and site administrators.</p>
<pre>
CREATE OR REPLACE FUNCTION MY_AUTH(
    p_username IN VARCHAR2,
    p_password IN VARCHAR2)
RETURN BOOLEAN
IS
BEGIN
    APEX_UTIL.SET_CUSTOM_AUTH_STATUS(p_status=&gt;'User:'||p_username||' is back.');
    IF UPPER(p_username) = 'GOOD' THEN
        APEX_UTIL.SET_AUTHENTICATION_RESULT(24567);
        RETURN TRUE;
    ELSE
        APEX_UTIL.SET_AUTHENTICATION_RESULT(-666);
        RETURN FALSE;
    END IF;
END;
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#CHDICEAJ">"GET_AUTHENTICATION_RESULT Function"</a> and <a href="#CHDHHJGJ">"SET_CUSTOM_AUTH_STATUS Procedure"</a></div>
</div>
<!-- class="refsect1" -->
<a id="CHDHHJGJ"></a>
<hr />
<div id="AEAPI176" class="refsect1">
<h2 class="refsect1">SET_CUSTOM_AUTH_STATUS Procedure</h2>
<p>This procedure can be called from an application's custom authentication function (that is, credentials verification function). The status passed to this procedure is logged in the Login Access Log.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink AEADM160" href="../../appdev.112/e12512/aadm_activity.htm#AEADM160">"Monitoring Activity within a Workspace"</a> in <a class="olink AEADM" href="../e12512/toc.htm"><span class="italic">Oracle Application Express Administration Guide</span></a></div>
<p class="subhead2"><a id="AEAPI651"></a>Syntax</p>
<pre>
APEX_UTIL.SET_CUSTOM_AUTH_STATUS(
    p_status  IN VARCHAR2);
</pre>
<p class="subhead2"><a id="AEAPI652"></a>Parameters</p>
<p><a href="#CHDEDBJB">Table 1-67</a> describes the parameters available in the <code>SET_CUSTOM_AUTH_STATUS</code> procedure.</p>
<div id="AEAPI653" class="tblformal">
<p class="titleintable"><a id="sthref73"></a><a id="CHDEDBJB"></a>Table 1-67 SET_CUSTOM_AUTH_STATUS Parameters</p>
<table class="cellalignment965" title="SET_CUSTOM_AUTH_STATUS Parameters" summary="This table describes the parameters available in the SET_CUSTOM_AUTH_STATUS procedure." dir="ltr">
<thead>
<tr class="cellalignment959">
<th class="cellalignment966" id="r1c1-t111">Parameter</th>
<th class="cellalignment966" id="r1c2-t111">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment959">
<td class="cellalignment967" id="r2c1-t111" headers="r1c1-t111">
<p><code>p_status</code></p>
</td>
<td class="cellalignment967" headers="r2c1-t111 r1c2-t111">
<p>Any text the developer chooses to denote the result of the authentication attempt (up to 4000 characters).</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI654"></a>Example</p>
<p>One way to use the <code>SET_CUSTOM_AUTH_STATUS</code> procedure is to include it in the application authentication scheme. This example demonstrates how text and numeric status values can be registered for logging. Note that no credentials verification is performed. The status set using this procedure is visible in the <code>apex_user_access_log</code> view and in the reports on this view available to workspace and site administrators.</p>
<pre>
CREATE OR REPLACE FUNCTION MY_AUTH(
    p_username IN VARCHAR2, 
    p_password IN VARCHAR2)
RETURN BOOLEAN
IS
BEGIN
    APEX_UTIL.SET_CUSTOM_AUTH_STATUS(p_status=&gt;'User:'||p_username||' is back.');
    IF UPPER(p_username) = 'GOOD' THEN
        APEX_UTIL.SET_AUTHENTICATION_RESULT(24567);
        RETURN TRUE;
    ELSE
        APEX_UTIL.SET_AUTHENTICATION_RESULT(-666);
        RETURN FALSE;
    END IF;
END;
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#CHDCAECI">"SET_AUTHENTICATION_RESULT Procedure"</a> and <a href="#CHDICEAJ">"GET_AUTHENTICATION_RESULT Function"</a></div>
</div>
<!-- class="refsect1" -->
<a id="BABFCJDC"></a>
<hr />
<div id="AEAPI177" class="refsect1">
<h2 class="refsect1">SET_EMAIL Procedure</h2>
<p>This procedure updates a user account with a new email address. To execute this procedure, the current user must have administrative privileges in the workspace.</p>
<p class="subhead2"><a id="AEAPI655"></a>Syntax</p>
<pre>
APEX_UTIL.SET_EMAIL(
    p_userid IN NUMBER,
    p_email  IN VARCHAR2);
</pre>
<p class="subhead2"><a id="AEAPI656"></a>Parameters</p>
<p><a href="#BABIHBDJ">Table 1-68</a> describes the parameters available in the <code>SET_EMAIL</code> procedure.</p>
<div id="AEAPI657" class="tblformal">
<p class="titleintable"><a id="sthref74"></a><a id="BABIHBDJ"></a>Table 1-68 SET_EMAIL Parameters</p>
<table class="cellalignment965" title="SET_EMAIL Parameters" summary="This table describes the parameters available in the SET_EMAIL procedure." dir="ltr">
<thead>
<tr class="cellalignment959">
<th class="cellalignment966" id="r1c1-t113">Parameter</th>
<th class="cellalignment966" id="r1c2-t113">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment959">
<td class="cellalignment967" id="r2c1-t113" headers="r1c1-t113">
<p><code>p_userid</code></p>
</td>
<td class="cellalignment967" headers="r2c1-t113 r1c2-t113">
<p>The numeric ID of the user account</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r3c1-t113" headers="r1c1-t113">
<p><code>p_email</code></p>
</td>
<td class="cellalignment967" headers="r3c1-t113 r1c2-t113">
<p>The email address to be saved in user account</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI658"></a>Example</p>
<p>The following example shows how to use the <code>SET_EMAIL</code> procedure to set the value of <code>EMAIL</code> to 'frank.scott@somewhere.com' for the user 'FRANK'.</p>
<pre>
BEGIN
    APEX_UTIL.SET_EMAIL(
        p_userid  =&gt; APEX_UTIL.GET_USER_ID('FRANK'),
        p_email   =&gt; 'frank.scott@somewhere.com');
END;
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#BABGIEJC">"GET_EMAIL Function"</a> and <a href="#BABHDJCD">"GET_USER_ID Function"</a></div>
</div>
<!-- class="refsect1" -->
<a id="BABEFBED"></a>
<hr />
<div id="AEAPI178" class="refsect1">
<h2 class="refsect1">SET_FIRST_NAME Procedure</h2>
<p>This procedure updates a user account with a new <code>FIRST_NAME</code> value. To execute this procedure, the current user must have administrative privileges in the workspace.</p>
<p class="subhead2"><a id="AEAPI659"></a>Syntax</p>
<pre>
APEX_UTIL.SET_FIRST_NAME(
    p_userid      IN NUMBER,
    p_first_name  IN VARCHAR2);
</pre>
<p class="subhead2"><a id="AEAPI660"></a>Parameters</p>
<p><a href="#BABEJCID">Table 1-69</a> describes the parameters available in the <code>SET_FIRST_NAME</code> procedure.</p>
<div id="AEAPI661" class="tblformal">
<p class="titleintable"><a id="sthref75"></a><a id="BABEJCID"></a>Table 1-69 SET_FIRST_NAME Parameters</p>
<table class="cellalignment965" title="SET_FIRST_NAME Parameters" summary="This table describes the parameters available in the SET_FIRST_NAME procedure." dir="ltr">
<thead>
<tr class="cellalignment959">
<th class="cellalignment966" id="r1c1-t115">Parameter</th>
<th class="cellalignment966" id="r1c2-t115">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment959">
<td class="cellalignment967" id="r2c1-t115" headers="r1c1-t115">
<p><code>p_userid</code></p>
</td>
<td class="cellalignment967" headers="r2c1-t115 r1c2-t115">
<p>The numeric ID of the user account</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r3c1-t115" headers="r1c1-t115">
<p><code>p_first_name</code></p>
</td>
<td class="cellalignment967" headers="r3c1-t115 r1c2-t115">
<p><code>FIRST_NAME</code> value to be saved in user account</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI662"></a>Example</p>
<p>The following example shows how to use the <code>SET_FIRST_NAME</code> procedure to set the value of <code>FIRST_NAME</code> to 'FRANK' for the user 'FRANK'.</p>
<pre>
BEGIN     
    APEX_UTIL.SET_FIRST_NAME(
        p_userid       =&gt; APEX_UTIL.GET_USER_ID('FRANK'),
        p_first_name   =&gt; 'FRANK');
END;
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#BABFFJGB">"GET_FIRST_NAME Function"</a> and <a href="#BABHDJCD">"GET_USER_ID Function"</a></div>
</div>
<!-- class="refsect1" -->
<a id="BABIGGEF"></a>
<hr />
<div id="AEAPI179" class="refsect1">
<h2 class="refsect1">SET_LAST_NAME Procedure</h2>
<p>This procedure updates a user account with a new <code>LAST_NAME</code> value. To execute this procedure, the current user must have administrative privileges in the workspace.</p>
<p class="subhead2"><a id="AEAPI663"></a>Syntax</p>
<pre>
APEX_UTIL.SET_LAST_NAME(
    p_userid      IN NUMBER,
    p_last_name   IN VARCHAR2);
</pre>
<p class="subhead2"><a id="AEAPI664"></a>Parameters</p>
<p><a href="#BABFAAEA">Table 1-70</a> describes the parameters available in the <code>SET_LAST_NAME</code> procedure.</p>
<div id="AEAPI665" class="tblformal">
<p class="titleintable"><a id="sthref76"></a><a id="BABFAAEA"></a>Table 1-70 SET_LAST_NAME Parameters</p>
<table class="cellalignment965" title="SET_LAST_NAME Parameters" summary="This table describes the parameters available in the SET_LAST_NAME procedure." dir="ltr">
<thead>
<tr class="cellalignment959">
<th class="cellalignment966" id="r1c1-t117">Parameter</th>
<th class="cellalignment966" id="r1c2-t117">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment959">
<td class="cellalignment967" id="r2c1-t117" headers="r1c1-t117">
<p><code>p_userid</code></p>
</td>
<td class="cellalignment967" headers="r2c1-t117 r1c2-t117">
<p>The numeric ID of the user account</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r3c1-t117" headers="r1c1-t117">
<p><code>p_last_name</code></p>
</td>
<td class="cellalignment967" headers="r3c1-t117 r1c2-t117">
<p><code>LAST_NAME</code> value to be saved in the user account</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI666"></a>Example</p>
<p>The following example shows how to use the <code>SET_LAST_NAME</code> procedure to set the value of <code>LAST_NAME</code> to 'SMITH' for the user 'FRANK'.</p>
<pre>
BEGIN     
    APEX_UTIL.SET_LAST_NAME(
        p_userid       =&gt; APEX_UTIL.GET_USER_ID('FRANK'),
        p_last_name   =&gt; 'SMITH');
END;
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#BABCAAGG">"GET_LAST_NAME Function"</a> and <a href="#BABHDJCD">"GET_USER_ID Function"</a></div>
</div>
<!-- class="refsect1" -->
<a id="CHDJDCAC"></a>
<hr />
<div id="AEAPI180" class="refsect1">
<h2 class="refsect1">SET_PREFERENCE Procedure</h2>
<p>This procedure sets a preference that will persist beyond the user's current session.</p>
<p class="subhead2"><a id="AEAPI667"></a>Syntax</p>
<pre>
APEX_UTIL.SET_PREFERENCE (
    p_preference   IN    VARCHAR2 DEFAULT NULL,
    p_value        IN    VARCHAR2 DEFAULT NULL,
    p_user         IN    VARCHAR2 DEFAULT NULL);
</pre>
<p class="subhead2"><a id="AEAPI668"></a>Parameters</p>
<p><a href="#CHDEDDFG">Table 1-71</a> describes the parameters available in the <code>SET_PREFERENCE</code> procedure.</p>
<div id="AEAPI669" class="tblformal">
<p class="titleintable"><a id="sthref77"></a><a id="CHDEDDFG"></a>Table 1-71 SET_PREFERENCE Parameters</p>
<table class="cellalignment965" title="SET_PREFERENCE Parameters" summary="This table describes the parameters available in the SET_PREFERENCE procedure." dir="ltr">
<thead>
<tr class="cellalignment959">
<th class="cellalignment966" id="r1c1-t119">Parameter</th>
<th class="cellalignment966" id="r1c2-t119">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment959">
<td class="cellalignment967" id="r2c1-t119" headers="r1c1-t119">
<p><code>p_preference</code></p>
</td>
<td class="cellalignment967" headers="r2c1-t119 r1c2-t119">
<p>Name of the preference (case-sensitive)</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r3c1-t119" headers="r1c1-t119">
<p><code>p_value</code></p>
</td>
<td class="cellalignment967" headers="r3c1-t119 r1c2-t119">
<p>Value of the preference</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r4c1-t119" headers="r1c1-t119">
<p><code>p_user</code></p>
</td>
<td class="cellalignment967" headers="r4c1-t119 r1c2-t119">
<p>User for whom the preference is being set</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI670"></a>Example</p>
<p>The following example shows how to use the <code>SET_PREFERENCE</code> procedure to set a preference called '<code>default_view</code>' to the value 'WEEKLY' that will persist beyond session for the currently authenticated user.</p>
<pre>
BEGIN
    APEX_UTIL.SET_PREFERENCE(        
        p_preference =&gt; 'default_view',
        p_value      =&gt; 'WEEKLY',      
        p_user       =&gt; :APP_USER); 
END;
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#CHDJJBGI">"GET_PREFERENCE Function"</a> and <a href="#CHDIBDEC">"REMOVE_PREFERENCE Procedure"</a></div>
</div>
<!-- class="refsect1" -->
<a id="CHDDHJAH"></a>
<hr />
<div id="AEAPI356" class="refsect1">
<h2 class="refsect1">SET_SESSION_LIFETIME_SECONDS Procedure</h2>
<p>This procedure sets the current application's Maximum Session Length in Seconds value for the current session, overriding the corresponding application attribute. This allows developers to dynamically shorten or lengthen the session life based on criteria determined after the user authenticates.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
In order for this procedure to have any effect, the application's Maximum Session Length in Seconds attribute must have been set to a non-zero value in the application definition. This procedure will have no effect if that attribute was not set by the developer.</div>
<p class="subhead2"><a id="AEAPI671"></a>Syntax</p>
<pre>
APEX_UTIL.SET_SESSION_LIFETIME_SECONDS (
    p_seconds  IN    NUMEBER,
    p_scope    IN    VARCHAR2 DEFAULT 'SESSION');
</pre>
<p class="subhead2"><a id="AEAPI672"></a>Parameters</p>
<p><a href="#BABEHBGB">Table 1-72</a> describes the parameters available in the <code>SET_SESSION_LIFETIME_SECONDS</code> procedure.</p>
<div id="AEAPI673" class="tblformal">
<p class="titleintable"><a id="sthref78"></a><a id="BABEHBGB"></a>Table 1-72 SET_SESSION_LIFETIME_SECONDS Parameters</p>
<table class="cellalignment965" title="SET_SESSION_LIFETIME_SECONDS Parameters" summary="This table describes the parameters available in the SET_SESSION_STATE procedure." dir="ltr">
<thead>
<tr class="cellalignment959">
<th class="cellalignment966" id="r1c1-t122">Parameter</th>
<th class="cellalignment966" id="r1c2-t122">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment959">
<td class="cellalignment967" id="r2c1-t122" headers="r1c1-t122">
<p><code>p_seconds</code></p>
</td>
<td class="cellalignment967" headers="r2c1-t122 r1c2-t122">
<p>A positive integer indicating the number of seconds the session used by this application is allowed to exist.</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r3c1-t122" headers="r1c1-t122">
<p><code>p_scope</code></p>
</td>
<td class="cellalignment967" headers="r3c1-t122 r1c2-t122">
<p>Defaults to 'SESSION' and may also be set to 'APPLICATION'. If 'SESSION', all applications using this session are affected. If 'APPLICATION', only the current application using the current session is affected.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI674"></a>Example 1</p>
<p>The following example shows how to use the SET_SESSION_LIFETIME_SECONDS procedure to set the current application's Maximum Session Length in Seconds attribute to 7200 seconds (two hours). This API call will have no effect if the application's Maximum Session Length in Seconds attribute was not set by the developer to a non-zero value in the application definition.By allowing the p_scope input parameter to use the default value of 'SESSION', the following example would actually apply to all applications using the current session. This would be the most common use case when multiple Application Express applications use a common authentication scheme and are designed to operate as a suite in a common session.</p>
<pre>
BEGIN
   APEX_UTIL.SET_SESSION_LIFETIME_SECONDS(p_seconds =&gt; 7200);
END;
</pre>
<p class="subhead2"><a id="AEAPI675"></a>Example 2</p>
<p>The following example shows how to use the SET_SESSION_LIFETIME_SECONDS procedure to set the current application's Maximum Session Length in Seconds attribute to 3600 seconds (one hour). This API call will have no effect if the application's Maximum Session Length in Seconds attribute was not set by the developer to a non-zero value in the application definition.By overriding the p_scope input parameter's default value and setting it to 'APPLICATION', the following example would actually apply to only to the current application using the current session even if other applications are using the same session.</p>
<pre>
BEGIN
    APEX_UTIL.SET_SESSION_LIFETIME_SECONDS(p_seconds =&gt; 3600, 
    p_scope =&gt; 'APPLICATION');
END;
</pre></div>
<!-- class="refsect1" -->
<a id="CHDGBIJH"></a>
<hr />
<div id="AEAPI355" class="refsect1">
<h2 class="refsect1">SET_SESSION_MAX_IDLE_SECONDS Procedure</h2>
<p>Sets the current application's Maximum Session Idle Time in Seconds value for the current session, overriding the corresponding application attribute. This allows developers to dynamically shorten or lengthen the maximum idle time allowed between page requests based on criteria determined after the user authenticates.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
In order for this procedure to have any effect, the application's Maximum Session Idle Time in Seconds attribute must have been set to a non-zero value in the application definition. This procedure will have no effect if that attribute was not set by the developer.</div>
<p class="subhead2"><a id="AEAPI676"></a>Syntax</p>
<pre>
APEX_UTIL.SET_SESSION_MAX_IDLE_SECONDS (
    p_seconds  IN    NUMEBER,
    p_scope    IN    VARCHAR2 DEFAULT 'SESSION');
</pre>
<p class="subhead2"><a id="AEAPI677"></a>Parameters</p>
<p><a href="#CHDIHHEA">Table 1-73</a> describes the parameters available in the <code>SET_SESSION_MAX_IDLE_SECONDS</code> procedure.</p>
<div id="AEAPI678" class="tblformal">
<p class="titleintable"><a id="sthref79"></a><a id="CHDIHHEA"></a>Table 1-73 SET_SESSION_MAX_IDLE_SECONDS Parameters</p>
<table class="cellalignment965" title="SET_SESSION_MAX_IDLE_SECONDS Parameters" summary="This table describes the parameters available in the SET_SESSION_STATE procedure." dir="ltr">
<thead>
<tr class="cellalignment959">
<th class="cellalignment966" id="r1c1-t124">Parameter</th>
<th class="cellalignment966" id="r1c2-t124">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment959">
<td class="cellalignment967" id="r2c1-t124" headers="r1c1-t124">
<p><code>p_seconds</code></p>
</td>
<td class="cellalignment967" headers="r2c1-t124 r1c2-t124">
<p>A positive integer indicating the number of seconds allowed between page requests.</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r3c1-t124" headers="r1c1-t124">
<p><code>p_scope</code></p>
</td>
<td class="cellalignment967" headers="r3c1-t124 r1c2-t124">
<p>Defaults to 'SESSION' and may also be set to 'APPLICATION'. If 'SESSION', this idle time applies to all applications using this session. If 'APPLICATION', this idle time only applies to the current application using the current session.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI679"></a>Example 1</p>
<p>The following example shows how to use the <code>SET_SESSION_MAX_IDLE_SECONDS</code> procedure to set the current application's Maximum Session Idle Time in Seconds attribute to 1200 seconds (twenty minutes). This API call will have no effect if the application's Maximum Session Idle Time in Seconds attribute was not set by the developer to a non-zero value in the application definition.By allowing the <code>p_scope</code> input parameter to use the default value of '<code>SESSION</code>', the following example would actually apply to all applications using the current session. This would be the most common use case when multiple Application Express applications use a common authentication scheme and are designed to operate as a suite in a common session.</p>
<pre>
BEGIN
   APEX_UTIL.SET_SESSION_MAX_IDLE_SECONDS(p_seconds =&gt; 1200);
END;
</pre>
<p class="subhead2"><a id="AEAPI680"></a>Example 2</p>
<p>The following example shows how to use the <code>SET_SESSION_MAX_IDLE_SECONDS</code> procedure to set the current application's Maximum Session Idle Time in Seconds attribute to 600 seconds (ten minutes). This API call will have no effect if the application's Maximum Session Idle Time in Seconds attribute was not set by the developer to a non-zero value in the application definition.By overriding the <code>p_scope</code> input parameter's default value and setting it to '<code>APPLICATION</code>', the following example would actually apply to only to the current application using the current session even if other applications are using the same session.</p>
<pre>
BEGIN
    APEX_UTIL.SET_SESSION_MAX_IDLE_SECONDS(p_seconds =&gt; 600, 
    p_scope =&gt; 'APPLICATION');
END;
</pre></div>
<!-- class="refsect1" -->
<a id="CHDBGEEC"></a>
<hr />
<div id="AEAPI181" class="refsect1">
<h2 class="refsect1">SET_SESSION_STATE Procedure</h2>
<p>This procedure sets session state for a current Oracle Application Express session.</p>
<p class="subhead2"><a id="AEAPI681"></a>Syntax</p>
<pre>
APEX_UTIL.SET_SESSION_STATE (
    p_name     IN    VARCHAR2 DEFAULT NULL,
    p_value    IN    VARCHAR2 DEFAULT NULL);
</pre>
<p class="subhead2"><a id="AEAPI682"></a>Parameters</p>
<p><a href="#CHDDAFFE">Table 1-74</a> describes the parameters available in the <code>SET_SESSION_STATE</code> procedure.</p>
<div id="AEAPI683" class="tblformal">
<p class="titleintable"><a id="sthref80"></a><a id="CHDDAFFE"></a>Table 1-74 SET_SESSION_STATE Parameters</p>
<table class="cellalignment965" title="SET_SESSION_STATE Parameters" summary="This table describes the parameters available in the SET_SESSION_STATE procedure." dir="ltr">
<thead>
<tr class="cellalignment959">
<th class="cellalignment966" id="r1c1-t125">Parameter</th>
<th class="cellalignment966" id="r1c2-t125">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment959">
<td class="cellalignment967" id="r2c1-t125" headers="r1c1-t125">
<p><code>p_name</code></p>
</td>
<td class="cellalignment967" headers="r2c1-t125 r1c2-t125">
<p>Name of the application-level or page-level item for which you are setting sessions state</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r3c1-t125" headers="r1c1-t125">
<p><code>p_value</code></p>
</td>
<td class="cellalignment967" headers="r3c1-t125 r1c2-t125">
<p>Value of session state to set</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI684"></a>Example</p>
<p>The following example shows how to use the <code>SET_SESSION_STATE</code> procedure to set the value of the item '<code>my_item</code>' to '<code>myvalue</code>' in the current session.</p>
<pre>
BEGIN
    APEX_UTIL.SET_SESSION_STATE('my_item','myvalue');
END;
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#CHDEJEJE">"GET_SESSION_STATE Function"</a>, <a href="#CHDBHEAD">"GET_NUMERIC_SESSION_STATE Function"</a>, and <a class="olink HTMDB03007" href="../../appdev.112/e11947/concept_ses.htm#HTMDB03007">"Understanding Session State Management"</a> in <a class="olink HTMDB" href="../e11947/toc.htm"><span class="italic">Oracle Application Express Application Builder User's Guide</span></a></div>
</div>
<!-- class="refsect1" -->
<a id="BABIBIBH"></a>
<hr />
<div id="AEAPI182" class="refsect1">
<h2 class="refsect1">SET_USERNAME Procedure</h2>
<p>This procedure updates a user account with a new <code>USER_NAME</code> value. To execute this procedure, the current user must have administrative privileges in the workspace.</p>
<p class="subhead2"><a id="AEAPI685"></a>Syntax</p>
<pre>
APEX_UTIL.SET_USERNAME(
    p_userid   IN NUMBER,
    p_username IN VARCHAR2);
</pre>
<p class="subhead2"><a id="AEAPI686"></a>Parameters</p>
<p><a href="#BABCIDJH">Table 1-75</a> describes the parameters available in the <code>SET_USERNAME</code> procedure.</p>
<div id="AEAPI687" class="tblformal">
<p class="titleintable"><a id="sthref81"></a><a id="BABCIDJH"></a>Table 1-75 SET_USERNAME Parameters</p>
<table class="cellalignment965" title="SET_USERNAME Parameters" summary="This table describes the parameters available in the SET_USERNAME procedure." dir="ltr">
<thead>
<tr class="cellalignment959">
<th class="cellalignment966" id="r1c1-t127">Parameter</th>
<th class="cellalignment966" id="r1c2-t127">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment959">
<td class="cellalignment967" id="r2c1-t127" headers="r1c1-t127">
<p><code>p_userid</code></p>
</td>
<td class="cellalignment967" headers="r2c1-t127 r1c2-t127">
<p>The numeric ID of the user account</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r3c1-t127" headers="r1c1-t127">
<p><code>p_username</code></p>
</td>
<td class="cellalignment967" headers="r3c1-t127 r1c2-t127">
<p><code>USER_NAME</code> value to be saved in the user account</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI688"></a>Example</p>
<p>The following example shows how to use the <code>SET_USERNAME</code> procedure to set the value of <code>USERNAME</code> to 'USER-XRAY' for the user 'FRANK'.</p>
<pre>
BEGIN     
    APEX_UTIL.SET_USERNAME(
        p_userid     =&gt; APEX_UTIL.GET_USER_ID('FRANK'),
        P_username   =&gt; 'USER-XRAY');
END;
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#BABDBCCD">"GET_USERNAME Function"</a> and <a href="#BABHDJCD">"GET_USER_ID Function"</a></div>
</div>
<!-- class="refsect1" -->
<a id="CHDDHGCB"></a>
<hr />
<div id="AEAPI183" class="refsect1">
<h2 class="refsect1">STRONG_PASSWORD_CHECK Procedure</h2>
<p>This procedure returns <code>Boolean OUT</code> values based on whether or not a proposed password meets the password strength requirements as defined by the Oracle Application Express site administrator.</p>
<p class="subhead2"><a id="AEAPI689"></a>Syntax</p>
<pre>
APEX_UTIL.STRONG_PASSWORD_CHECK(
    p_username                    IN  VARCHAR2,
    p_password                    IN  VARCHAR2,
    p_old_password                IN  VARCHAR2,
    p_workspace_name              IN  VARCHAR2,
    p_use_strong_rules            IN  BOOLEAN,
    p_min_length_err              OUT BOOLEAN,
    p_new_differs_by_err          OUT BOOLEAN,
    p_one_alpha_err               OUT BOOLEAN,
    p_one_numeric_err             OUT BOOLEAN,
    p_one_punctuation_err         OUT BOOLEAN,
    p_one_upper_err               OUT BOOLEAN,
    p_one_lower_err               OUT BOOLEAN,
    p_not_like_username_err       OUT BOOLEAN,
    p_not_like_workspace_name_err OUT BOOLEAN,
    p_not_like_words_err          OUT BOOLEAN,
    p_not_reusable_err            OUT BOOLEAN);
</pre>
<p class="subhead2"><a id="AEAPI690"></a>Parameters</p>
<p><a href="#CHDJCCHC">Table 1-76</a> describes the parameters available in the <code>STRONG_PASSWORD_CHECK</code> procedure.</p>
<div id="AEAPI691" class="tblformal">
<p class="titleintable"><a id="sthref82"></a><a id="CHDJCCHC"></a>Table 1-76 STRONG_PASSWORD_CHECK Parameters</p>
<table class="cellalignment965" title="STRONG_PASSWORD_CHECK Parameters" summary="This table describes the parameters available in the STRONG_PASSWORD_CHECKprocedure." dir="ltr">
<thead>
<tr class="cellalignment959">
<th class="cellalignment966" id="r1c1-t129">Parameter</th>
<th class="cellalignment966" id="r1c2-t129">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment959">
<td class="cellalignment967" id="r2c1-t129" headers="r1c1-t129">
<p><code>p_username</code></p>
</td>
<td class="cellalignment967" headers="r2c1-t129 r1c2-t129">
<p>Username that identifies the account in the current workspace</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r3c1-t129" headers="r1c1-t129">
<p><code>p_password</code></p>
</td>
<td class="cellalignment967" headers="r3c1-t129 r1c2-t129">
<p>Password to be checked against password strength rules</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r4c1-t129" headers="r1c1-t129">
<p><code>p_old_password</code></p>
</td>
<td class="cellalignment967" headers="r4c1-t129 r1c2-t129">
<p>Current password for the account. Used only to enforce "new password must differ from old" rule</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r5c1-t129" headers="r1c1-t129">
<p><code>p_workspace_name</code></p>
</td>
<td class="cellalignment967" headers="r5c1-t129 r1c2-t129">
<p>Current workspace name, used only to enforce "password must not contain workspace name" rule</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r6c1-t129" headers="r1c1-t129">
<p><code>p_use_strong_rules</code></p>
</td>
<td class="cellalignment967" headers="r6c1-t129 r1c2-t129">
<p>Pass <code>FALSE</code> when calling this API</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r7c1-t129" headers="r1c1-t129">
<p><code>p_min_length_err</code></p>
</td>
<td class="cellalignment967" headers="r7c1-t129 r1c2-t129">
<p>Result returns <code>True</code> or <code>False</code> depending upon whether the password meets minimum length requirement</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r8c1-t129" headers="r1c1-t129">
<p><code>p_new_differs_by_err</code></p>
</td>
<td class="cellalignment967" headers="r8c1-t129 r1c2-t129">
<p>Result returns <code>True</code> or <code>False</code> depending upon whether the password meets "new password must differ from old" requirements</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r9c1-t129" headers="r1c1-t129">
<p><code>p_one_alpha_err</code></p>
</td>
<td class="cellalignment967" headers="r9c1-t129 r1c2-t129">
<p>Result returns <code>True</code> or <code>False</code> depending upon whether the password meets requirement to contain at least one alphabetic character</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r10c1-t129" headers="r1c1-t129">
<p><code>p_one_numeric_err</code></p>
</td>
<td class="cellalignment967" headers="r10c1-t129 r1c2-t129">
<p>Result returns <code>True</code> or <code>False</code> depending upon whether the password meets requirements to contain at least one numeric character</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r11c1-t129" headers="r1c1-t129">
<p><code>p_one_punctuation_err</code></p>
</td>
<td class="cellalignment967" headers="r11c1-t129 r1c2-t129">
<p>Result returns <code>True</code> or <code>False</code> depending upon whether the password meets requirements to contain at least one punctuation character</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r12c1-t129" headers="r1c1-t129">
<p><code>p_one_upper_err</code></p>
</td>
<td class="cellalignment967" headers="r12c1-t129 r1c2-t129">
<p>Result returns <code>True</code> or <code>False</code> depending upon whether the password meets requirements to contain at least one upper-case character</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r13c1-t129" headers="r1c1-t129">
<p><code>p_one_lower_err</code></p>
</td>
<td class="cellalignment967" headers="r13c1-t129 r1c2-t129">
<p>Result returns <code>True</code> or <code>False</code> depending upon whether the password meets requirements to contain at least one lower-case character</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r14c1-t129" headers="r1c1-t129">
<p><code>p_not_like_username_err</code></p>
</td>
<td class="cellalignment967" headers="r14c1-t129 r1c2-t129">
<p>Result returns <code>True</code> or <code>False</code> depending upon whether the password meets requirements that it not contain the username</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r15c1-t129" headers="r1c1-t129">
<p><code>p_not_like_workspace_name_err</code></p>
</td>
<td class="cellalignment967" headers="r15c1-t129 r1c2-t129">
<p>Result returns <code>True</code> or <code>False</code> whether upon whether the password meets requirements that it not contain the workspace name</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r16c1-t129" headers="r1c1-t129">
<p><code>p_not_like_words_err</code></p>
</td>
<td class="cellalignment967" headers="r16c1-t129 r1c2-t129">
<p>Result returns <code>True</code> or <code>False</code> whether the password meets requirements that it not contain specified simple words</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r17c1-t129" headers="r1c1-t129">
<p><code>p_not_reusable_err</code></p>
</td>
<td class="cellalignment967" headers="r17c1-t129 r1c2-t129">
<p>Result returns <code>True</code> or <code>False</code> whether the password can be reused based on password history rules</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI692"></a>Example</p>
<p>The following example shows how to use the <code>STRONG_PASSWORD_CHECK</code> procedure. It checks the new password '<code>foo</code>' for the user '<code>SOMEBODY</code>' meets all the password strength requirements defined by the Oracle Application Express site administrator. If any of the checks fail (the associated OUT parameter returns <code>TRUE</code>), then the example outputs a relevant message. For example, if the Oracle Application Express site administrator has defined that passwords must have at least one numeric character and the password '<code>foo</code>' was checked, then the <code>p_one_numeric_err</code> OUT parameter would return <code>TRUE</code> and the message 'Password must contain at least one numeric character' would be output.</p>
<pre>
DECLARE
    l_username                    varchar2(30);
    l_password                    varchar2(30);
    l_old_password                varchar2(30);
    l_workspace_name              varchar2(30);
    l_min_length_err              boolean;
    l_new_differs_by_err          boolean;
    l_one_alpha_err               boolean;
    l_one_numeric_err             boolean;
    l_one_punctuation_err         boolean;
    l_one_upper_err               boolean;
    l_one_lower_err               boolean;
    l_not_like_username_err       boolean;
    l_not_like_workspace_name_err boolean;
    l_not_like_words_err          boolean;
    l_not_reusable_err            boolean;
    l_password_history_days       pls_integer;
BEGIN
    l_username := 'SOMEBODY';
    l_password := 'foo';
    l_old_password := 'foo';
    l_workspace_name := 'XYX_WS';
    l_password_history_days := 
        apex_instance_admin.get_parameter ('PASSWORD_HISTORY_DAYS');
 
    APEX_UTIL.STRONG_PASSWORD_CHECK(
        p_username                    =&gt; l_username,
        p_password                    =&gt; l_password,
        p_old_password                =&gt; l_old_password,
        p_workspace_name              =&gt; l_workspace_name,
        p_use_strong_rules            =&gt; false,
        p_min_length_err              =&gt; l_min_length_err,
        p_new_differs_by_err          =&gt; l_new_differs_by_err,
        p_one_alpha_err               =&gt; l_one_alpha_err,
        p_one_numeric_err             =&gt; l_one_numeric_err,
        p_one_punctuation_err         =&gt; l_one_punctuation_err,
        p_one_upper_err               =&gt; l_one_upper_err,
        p_one_lower_err               =&gt; l_one_lower_err,
        p_not_like_username_err       =&gt; l_not_like_username_err,
        p_not_like_workspace_name_err =&gt; l_not_like_workspace_name_err,
        p_not_like_words_err          =&gt; l_not_like_words_err,
        p_not_reusable_err            =&gt; l_not_reusable_err);

    IF l_min_length_err THEN
        htp.p('Password is too short');
    END IF;
 
    IF l_new_differs_by_err THEN
        htp.p('Password is too similar to the old password');
    END IF;
 
    IF l_one_alpha_err THEN
        htp.p('Password must contain at least one alphabetic character');
    END IF;
 
    IF l_one_numeric_err THEN
        htp.p('Password  must contain at least one numeric character');
    END IF;
 
    IF l_one_punctuation_err THEN
        htp.p('Password  must contain at least one punctuation character');
    END IF;
 
    IF l_one_upper_err THEN
        htp.p('Password must contain at least one upper-case character');
    END IF;
 
    IF l_one_lower_err THEN
        htp.p('Password must contain at least one lower-case character');
    END IF;
 
    IF l_not_like_username_err THEN
        htp.p('Password may not contain the username');
    END IF;
 
    IF l_not_like_workspace_name_err THEN
        htp.p('Password may not contain the workspace name');
    END IF;
 
    IF l_not_like_words_err THEN
        htp.p('Password contains one or more prohibited common words');
    END IF;

    IF l_not_reusable_err THEN
        htp.p('Password cannot be used because it has been used for the account within the last '||l_password_history_days||' days.');
    END IF;
END;
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink AEADM204" href="../../appdev.112/e12512/adm_env.htm#AEADM204">"About Password Policies"</a> in <a class="olink AEADM" href="../e12512/toc.htm"><span class="italic">Oracle Application Express Administration Guide</span></a></div>
</div>
<!-- class="refsect1" -->
<a id="CHDCIGBH"></a>
<hr />
<div id="AEAPI184" class="refsect1">
<h2 class="refsect1">STRONG_PASSWORD_VALIDATION Function</h2>
<p>This function returns formatted HTML in a VARCHAR2 result based on whether or not a proposed password meets the password strength requirements as defined by the Oracle Application Express site administrator.</p>
<p class="subhead2"><a id="AEAPI693"></a>Syntax</p>
<pre>
FUNCTION STRONG_PASSWORD_VALIDATION(
    p_username                    IN  VARCHAR2,
    p_password                    IN  VARCHAR2,
    P_OLD_PASSWORD                IN  VARCHAR2 DEFAULT NULL,
    P_WORKSPACE_NAME              IN  VARCHAR2)
RETURN VARCHAR2;
</pre>
<p class="subhead2"><a id="AEAPI694"></a>Parameters</p>
<p><a href="#CHDJFAEE">Table 1-77</a> describes the parameters available in the <code>STRONG_PASSWORD_VALIDATION</code> function.</p>
<div id="AEAPI695" class="tblformal">
<p class="titleintable"><a id="sthref83"></a><a id="CHDJFAEE"></a>Table 1-77 STRONG_PASSWORD_VALIDATION Parameters</p>
<table class="cellalignment965" title="STRONG_PASSWORD_VALIDATION Parameters" summary="This table describes the parameters available in the STRONG_PASSWORD_VALIDATION function." dir="ltr">
<thead>
<tr class="cellalignment959">
<th class="cellalignment966" id="r1c1-t131">Parameter</th>
<th class="cellalignment966" id="r1c2-t131">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment959">
<td class="cellalignment967" id="r2c1-t131" headers="r1c1-t131">
<p><code>p_username</code></p>
</td>
<td class="cellalignment967" headers="r2c1-t131 r1c2-t131">
<p>Username that identifies the account in the current workspace</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r3c1-t131" headers="r1c1-t131">
<p><code>p_password</code></p>
</td>
<td class="cellalignment967" headers="r3c1-t131 r1c2-t131">
<p>Password to be checked against password strength rules</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r4c1-t131" headers="r1c1-t131">
<p><code>p_old_password</code></p>
</td>
<td class="cellalignment967" headers="r4c1-t131 r1c2-t131">
<p>Current password for the account. Used only to enforce "new password must differ from old" rule</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r5c1-t131" headers="r1c1-t131">
<p><code>p_workspace_name</code></p>
</td>
<td class="cellalignment967" headers="r5c1-t131 r1c2-t131">
<p>Current workspace name, used only to enforce "password must not contain workspace name" rule</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI696"></a>Example</p>
<p>The following example shows how to use the <code>STRONG_PASSWORD_VALIDATION</code> procedure. It checks the new password '<code>foo</code>' for the user '<code>SOMEBODY</code>' meets all the password strength requirements defined by the Oracle Application Express site administrator. If any of the checks fail, then the example outputs formatted HTML showing details of where the new password fails to meet requirements.</p>
<pre>
DECLARE
      l_username                    varchar2(30);
      l_password                    varchar2(30);
      l_old_password                varchar2(30);
      l_workspace_name              varchar2(30);
BEGIN
    l_username := 'SOMEBODY';
    l_password := 'foo';
    l_old_password := 'foo';
    l_workspace_name := 'XYX_WS';

    HTP.P(APEX_UTIL.STRONG_PASSWORD_VALIDATION(
        p_username                    =&gt; l_username,
        p_password                    =&gt; l_password,
        p_old_password                =&gt; l_old_password,
        p_workspace_name              =&gt; l_workspace_name));
END;

</pre></div>
<!-- class="refsect1" -->
<a id="CHDFEEJD"></a>
<hr />
<div id="AEAPI185" class="refsect1">
<h2 class="refsect1">STRING_TO_TABLE Function</h2>
<p>Given a string, this function returns a PL/SQL array of type <code>APEX_APPLICATION_GLOBAL</code>.<code>VC_ARR2</code>. This array is a <code>VARCHAR2(32767)</code> table.</p>
<p class="subhead2"><a id="AEAPI697"></a>Syntax</p>
<pre>
APEX_UTIL.STRING_TO_TABLE (
    p_string       IN VARCHAR2,
    p_separator    IN VARCHAR2 DEFAULT ':') 
    RETURN APEX_APPLICATION_GLOBAL.VC_ARR2;
</pre>
<p class="subhead2"><a id="AEAPI698"></a>Parameters</p>
<p><a href="#CHDGJBCD">Table 1-78</a> describes the parameters available in the <code>STRING_TO_TABLE</code> function.</p>
<div id="AEAPI699" class="tblformal">
<p class="titleintable"><a id="sthref84"></a><a id="CHDGJBCD"></a>Table 1-78 STRING_TO_TABLE Parameters</p>
<table class="cellalignment965" title="STRING_TO_TABLE Parameters" summary="This table describes the parameters available in the STRING_TO_TABLE function." dir="ltr">
<thead>
<tr class="cellalignment959">
<th class="cellalignment966" id="r1c1-t132">Parameter</th>
<th class="cellalignment966" id="r1c2-t132">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment959">
<td class="cellalignment967" id="r2c1-t132" headers="r1c1-t132">
<p><code>p_string</code></p>
</td>
<td class="cellalignment967" headers="r2c1-t132 r1c2-t132">
<p>String to be converted into a PL/SQL table of type <code>APEX_APPLICATION_GLOBAL</code>.<code>VC_ARR2</code></p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r3c1-t132" headers="r1c1-t132">
<p><code>p_separator</code></p>
</td>
<td class="cellalignment967" headers="r3c1-t132 r1c2-t132">
<p>String separator. The default is a colon</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI700"></a>Example</p>
<p>The following example shows how to use the STRING_TO_TABLE function. The function is passed the string 'One:Two:Three' in the p_string parameter and it returns a PL/SQL array of type APEX_APPLICATION_GLOBAL.VC_ARR2 containing 3 elements, the element at position 1 contains the value 'One', position 2 contains the value 'Two' and position 3 contains the value 'Three'. This is then output using the HTP.P function call.</p>
<pre>
DECLARE
    l_vc_arr2    APEX_APPLICATION_GLOBAL.VC_ARR2;
BEGIN
    l_vc_arr2 := APEX_UTIL.STRING_TO_TABLE('One:Two:Three');
    FOR z IN 1..l_vc_arr2.count LOOP
        htp.p(l_vc_arr2(z));
    END LOOP;
END;
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#CHDJBFHG">"TABLE_TO_STRING Function"</a></div>
</div>
<!-- class="refsect1" -->
<a id="CHDJBFHG"></a>
<hr />
<div id="AEAPI186" class="refsect1">
<h2 class="refsect1">TABLE_TO_STRING Function</h2>
<p>Given a a PL/SQL table of type <code>APEX_APPLICATION_GLOBAL</code>.<code>VC_ARR2</code>, this function returns a delimited string separated by the supplied separator, or by the default separator, a colon (:).</p>
<p class="subhead2"><a id="AEAPI701"></a>Syntax</p>
<pre>
APEX_UTIL.TABLE_TO_STRING (
    p_table       IN     APEX_APPLICATION_GLOBAL.VC_ARR2,
    p_string      IN     VARCHAR2 DEFAULT ':') 
RETURN VARCHAR2;
</pre>
<p class="subhead2"><a id="AEAPI702"></a>Parameters</p>
<p><a href="#CHDHDGAJ">Table 1-79</a> describes the parameters available in the <code>TABLE_TO_STRING</code> function.</p>
<div id="AEAPI703" class="tblformal">
<p class="titleintable"><a id="sthref85"></a><a id="CHDHDGAJ"></a>Table 1-79 TABLE_TO_STRING Parameters</p>
<table class="cellalignment965" title="TABLE_TO_STRING Parameters" summary="This table describes the parameters available in the TABLE_TO_STRING function." dir="ltr">
<thead>
<tr class="cellalignment959">
<th class="cellalignment966" id="r1c1-t134">Parameter</th>
<th class="cellalignment966" id="r1c2-t134">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment959">
<td class="cellalignment967" id="r2c1-t134" headers="r1c1-t134">
<p><code>p_string</code></p>
</td>
<td class="cellalignment967" headers="r2c1-t134 r1c2-t134">
<p>String separator. Default separator is a colon (:)</p>
</td>
</tr>
<tr class="cellalignment959">
<td class="cellalignment967" id="r3c1-t134" headers="r1c1-t134">
<p><code>p_table</code></p>
</td>
<td class="cellalignment967" headers="r3c1-t134 r1c2-t134">
<p>PL/SQL table that is to be converted into a delimited string</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI704"></a>Example</p>
<p>The following example shows how to use the <code>TABLE_TO_STRING</code> function. The example first calls <code>STRING_TO_TABLE</code> which is passed the string 'One:Two:Three' in the <code>p_string</code> parameter, and returns a PL/SQL array of type <code>APEX_APPLICATION_GLOBAL.VC_ARR2</code> containing 3 elements, the element at position 1 contains the value 'One', position 2 contains the value 'Two' and position 3 contains the value 'Three'. This array is then passed in to the <code>TABLE_TO_STRING</code> function in the <code>p_string</code> parameter, which then returns back the original string 'One:Two:Three'.</p>
<pre>
DECLARE
    l_string     VARCHAR2(255);
    l_vc_arr2    APEX_APPLICATION_GLOBAL.VC_ARR2;
BEGIN
    l_vc_arr2 := APEX_UTIL.STRING_TO_TABLE('One:Two:Three');
    l_string := APEX_UTIL.TABLE_TO_STRING(l_vc_arr2);
END;
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#CHDFEEJD">"STRING_TO_TABLE Function"</a></div>
</div>
<!-- class="refsect1" -->
<a id="CHDEDBIF"></a>
<hr />
<div id="AEAPI187" class="refsect1">
<h2 class="refsect1">UNEXPIRE_END_USER_ACCOUNT Procedure</h2>
<p>Makes expired end users accounts and the associated passwords usable, enabling a end user to log in to developed applications.</p>
<p class="subhead2"><a id="AEAPI705"></a>Syntax</p>
<pre>
APEX_UTIL.UNEXPIRE_END_USER_ACCOUNT (
    p_user_name IN VARCHAR2);
</pre>
<p class="subhead2"><a id="AEAPI706"></a>Parameters</p>
<p><a href="#CHDECEJD">Table 1-80</a> describes the parameters available in the <code>UNEXPIRE_END_USER_ACCOUNT</code> procedure.</p>
<div id="AEAPI707" class="tblformal">
<p class="titleintable"><a id="sthref86"></a><a id="CHDECEJD"></a>Table 1-80 UNEXPIRE_END_USER_ACCOUNT Parameters</p>
<table class="cellalignment965" title="UNEXPIRE_END_USER_ACCOUNT Parameters" summary="This table describes the parameters available in the UNEXPIRE_END_USER_ACCOUNT procedure." dir="ltr">
<thead>
<tr class="cellalignment959">
<th class="cellalignment966" id="r1c1-t136">Parameter</th>
<th class="cellalignment966" id="r1c2-t136">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment959">
<td class="cellalignment967" id="r2c1-t136" headers="r1c1-t136">
<p><code>p_user_name</code></p>
</td>
<td class="cellalignment967" headers="r2c1-t136 r1c2-t136">
<p>The user name of the user account</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI708"></a>Example</p>
<p>The following example shows how to use the <code>UNEXPIRE_END_USER_ACCOUNT</code> procedure. Use this procedure to renew (unexpire) an Application Express end user account in the current workspace. This action specifically renews the account for use by end users to authenticate to developed applications and may also renew the account for use by developers or administrators to log in to a workspace.</p>
<p>This procedure must be run by a user having administration privileges in the current workspace.</p>
<pre>
BEGIN
    FOR c1 IN (SELECT user_name from wwv_flow_users) LOOP
        APEX_UTIL.UNEXPIRE_END_USER_ACCOUNT(p_user_name =&gt; c1.user_name);
        htp.p('End User Account:'||c1.user_name||' is now valid.');   
    END LOOP;
END;   
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#CHDIEFCE">"EXPIRE_END_USER_ACCOUNT Parameters"</a> and <a href="#CHDGFAHB">"END_USER_ACCOUNT_DAYS_LEFT Function"</a></div>
</div>
<!-- class="refsect1" -->
<a id="CHDFDFDH"></a>
<hr />
<div id="AEAPI188" class="refsect1">
<h2 class="refsect1">UNEXPIRE_WORKSPACE_ACCOUNT Procedure</h2>
<p>Unexpires developer and workspace administrator accounts and the associated passwords, enabling the developer or administrator to log in to a workspace.</p>
<p class="subhead2"><a id="AEAPI709"></a>Syntax</p>
<pre>
APEX_UTIL.UNEXPIRE_WORKSPACE_ACCOUNT (
    p_user_name IN VARCHAR2);
</pre>
<p class="subhead2"><a id="AEAPI710"></a>Parameters</p>
<p><a href="#CHDIGECG">Table 1-81</a> describes the parameters available in the <code>UNEXPIRE_WORKSPACE_ACCOUNT</code> procedure.</p>
<div id="AEAPI711" class="tblformal">
<p class="titleintable"><a id="sthref87"></a><a id="CHDIGECG"></a>Table 1-81 UNEXPIRE_WORKSPACE_ACCOUNT Parameters</p>
<table class="cellalignment965" title="UNEXPIRE_WORKSPACE_ACCOUNT Parameters" summary="This table describes the parameters available in the UNEXPIRE_WORKSPACE_ACCOUNTprocedure." dir="ltr">
<thead>
<tr class="cellalignment959">
<th class="cellalignment966" id="r1c1-t138">Parameter</th>
<th class="cellalignment966" id="r1c2-t138">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment959">
<td class="cellalignment967" id="r2c1-t138" headers="r1c1-t138">
<p><code>p_user_name</code></p>
</td>
<td class="cellalignment967" headers="r2c1-t138 r1c2-t138">
<p>The user name of the user account</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI712"></a>Example</p>
<p>The following example shows how to use the <code>UNEXPIRE_WORKSPACE_ACCOUNT</code> procedure. Use this procedure to renew (unexpire) an Application Express workspace administrator account in the current workspace. This action specifically renews the account for use by developers or administrators to login to a workspace and may also renew the account with respect to its use by end users to authenticate to developed applications.</p>
<p>This procedure must be run by a user having administration privileges in the current workspace.</p>
<pre>
BEGIN
    FOR c1 IN (select user_name from wwv_flow_users) loop
        APEX_UTIL.UNEXPIRE_WORKSPACE_ACCOUNT(p_user_name =&gt; c1.user_name);
        htp.p('Workspace Account:'||c1.user_name||' is now valid.'); 
    END LOOP;
END;   
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#CHDDBEEE">"EXPIRE_WORKSPACE_ACCOUNT Procedure"</a> and <a href="#CHDHBAEH">"WORKSPACE_ACCOUNT_DAYS_LEFT Function"</a></div>
</div>
<!-- class="refsect1" -->
<a id="CHDBFABJ"></a>
<hr />
<div id="AEAPI189" class="refsect1">
<h2 class="refsect1">UNLOCK_ACCOUNT Procedure</h2>
<p>Sets a user account status to unlocked. Must be run by an authenticated workspace administrator in a page request context.</p>
<p class="subhead2"><a id="AEAPI713"></a>Syntax</p>
<pre>
APEX_UTIL.UNLOCK_ACCOUNT (
     p_user_name IN VARCHAR2); 
</pre>
<p class="subhead2"><a id="AEAPI714"></a>Parameters</p>
<p><a href="#CHDGGIGB">Table 1-82</a> describes the parameters available in the <code>UNLOCK_ACCOUNT</code> procedure.</p>
<div id="AEAPI715" class="tblformal">
<p class="titleintable"><a id="sthref88"></a><a id="CHDGGIGB"></a>Table 1-82 UNLOCK_ACCOUNT Parameters</p>
<table class="cellalignment965" title="UNLOCK_ACCOUNT Parameters" summary="This table describes the parameters available in the UNLOCK_ACCOUNTprocedure." dir="ltr">
<thead>
<tr class="cellalignment959">
<th class="cellalignment966" id="r1c1-t140">Parameter</th>
<th class="cellalignment966" id="r1c2-t140">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment959">
<td class="cellalignment967" id="r2c1-t140" headers="r1c1-t140">
<p><code>p_user_name</code></p>
</td>
<td class="cellalignment967" headers="r2c1-t140 r1c2-t140">
<p>The user name of the user account</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI716"></a>Example</p>
<p>The following example shows how to use the <code>UNLOCK_ACCOUNT</code> procedure. Use this procedure to unlock an Application Express account in the current workspace. This action unlocks the account for use by administrators, developers, and end users.This procedure must be run by a user who has administration privileges in the current workspace</p>
<pre>
BEGIN
    FOR c1 IN (SELECT user_name from wwv_flow_users) LOOP
        APEX_UTIL.UNLOCK_ACCOUNT(p_user_name =&gt; c1.user_name);
        htp.p('End User Account:'||c1.user_name||' is now unlocked.');    
    END LOOP;
END;
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#CHDGCCHI">"LOCK_ACCOUNT Procedure"</a> and <a href="#CHDIFICC">"GET_ACCOUNT_LOCKED_STATUS Function"</a></div>
</div>
<!-- class="refsect1" -->
<a id="CHDHEFFG"></a>
<hr />
<div id="AEAPI190" class="refsect1">
<h2 class="refsect1">URL_ENCODE Function</h2>
<p>The following special characters are encoded as follows:</p>
<pre>
 <span class="bold">Special</span>       <span class="bold">After</span> 
<span class="bold">Characters</span>    <span class="bold">Encoding</span>
    %          %25
    +          %2B
  space         +
    .          %2E
    *          %2A
    ?          %3F
    \          %5C
    /          %2F
    &gt;          %3E
    &lt;          %3C
    }          %7B
    {          %7D
    ~          %7E
    [          %5B
    ]          %5D
    '          %60
    ;          %3B
    ?          %3F
    @          %40
    &amp;          %26
    #          %23
    |          %7C
    &icirc;          %5E
    :          %3A
    =          %3D
    $          %24
</pre>
<p class="subhead2"><a id="AEAPI717"></a>Syntax</p>
<pre>
APEX_UTIL.URL_ENCODE (
    p_url   IN    VARCHAR2) 
    RETURN VARCHAR2;
</pre>
<p class="subhead2"><a id="AEAPI718"></a>Parameters</p>
<p><a href="#CHDHIFDI">Table 1-83</a> describes the parameters available in the <code>URL_ENCODE</code> function.</p>
<div id="AEAPI719" class="tblformal">
<p class="titleintable"><a id="sthref89"></a><a id="CHDHIFDI"></a>Table 1-83 URL_ENCODE Parameters</p>
<table class="cellalignment965" title="URL_ENCODE Parameters" summary="This table describes the parameters available in the URL_ENCODE function." dir="ltr">
<thead>
<tr class="cellalignment959">
<th class="cellalignment966" id="r1c1-t142">Parameter</th>
<th class="cellalignment966" id="r1c2-t142">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment959">
<td class="cellalignment967" id="r2c1-t142" headers="r1c1-t142">
<p><code>p_url</code></p>
</td>
<td class="cellalignment967" headers="r2c1-t142 r1c2-t142">
<p>The string to be encoded</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI720"></a>Example</p>
<p>The following example shows how to use the <code>URL_ENCODE</code> function.</p>
<pre>
DECLARE
    l_url  VARCHAR2(255);
BEGIN
    l_url := APEX_UTIL.URL_ENCODE('http://www.myurl.com?id=1&amp;cat=foo');
END;
</pre>
<p>In this example, the following URL:</p>
<pre>
http://www.myurl.com?id=1&amp;cat=foo
</pre>
<p>Would be returned as:</p>
<pre>
http%3A%2F%2Fwww%2Emyurl%2Ecom%3Fid%3D1%26cat%3Dfoo
</pre></div>
<!-- class="refsect1" -->
<a id="CHDHBAEH"></a>
<hr />
<div id="AEAPI191" class="refsect1">
<h2 class="refsect1">WORKSPACE_ACCOUNT_DAYS_LEFT Function</h2>
<p>Returns the number of days remaining before the developer or workspace administrator account password expires. This function may be run in a page request context by any authenticated user.</p>
<p class="subhead2"><a id="AEAPI721"></a>Syntax</p>
<pre>
APEX_UTIL.WORKSPACE_ACCOUNT_DAYS_LEFT (
    p_user_name IN VARCHAR2)
    RETURN NUMBER;
</pre>
<p class="subhead2"><a id="AEAPI722"></a>Parameters</p>
<p><a href="#CHDFEFCD">Table 1-84</a> describes the parameters available in the <code>WORKSPACE_ACCOUNT_DAYS_LEFT</code> procedure.</p>
<div id="AEAPI723" class="tblformal">
<p class="titleintable"><a id="sthref90"></a><a id="CHDFEFCD"></a>Table 1-84 WORKSPACE_ACCOUNT_DAYS_LEFT Parameters</p>
<table class="cellalignment965" title="WORKSPACE_ACCOUNT_DAYS_LEFT Parameters" summary="This table describes the parameters available in the WORKSPACE_ACCOUNT_DAYS_LEFTfunction." dir="ltr">
<thead>
<tr class="cellalignment959">
<th class="cellalignment966" id="r1c1-t143">Parameter</th>
<th class="cellalignment966" id="r1c2-t143">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment959">
<td class="cellalignment967" id="r2c1-t143" headers="r1c1-t143">
<p><code>p_user_name</code></p>
</td>
<td class="cellalignment967" headers="r2c1-t143 r1c2-t143">
<p>The user name of the user account</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="AEAPI724"></a>Example</p>
<p>The following example shows how to use the <code>WORKSPACE_ACCOUNT_DAYS_LEFT</code> function. It can be used in to find the number of days remaining before an Application Express administrator or developer account in the current workspace expires.</p>
<pre>
DECLARE
    l_days_left NUMBER;
BEGIN
    FOR c1 IN (SELECT user_name from wwv_flow_users) LOOP
        l_days_left := APEX_UTIL.WORKSPACE_ACCOUNT_DAYS_LEFT(p_user_name =&gt; 
c1.user_name)
        htp.p('Workspace Account:'||c1.user_name||' will expire in '||l_days_left||' days.');    
    END LOOP;
END;     
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#CHDDBEEE">"EXPIRE_WORKSPACE_ACCOUNT Procedure"</a> and <a href="#CHDFDFDH">"UNEXPIRE_WORKSPACE_ACCOUNT Procedure"</a></div>
</div>
<!-- class="refsect1" --></div>
<!-- class="refentry" --></div>
<!-- class="chapter" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment958">
<tr>
<td class="cellalignment967">
<table class="cellalignment963">
<tr>
<td class="cellalignment962"><a href="preface.htm"><img width="24" height="24" src="../../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment962"><a href="apex_mail.htm"><img width="24" height="24" src="../../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;2003, 2013,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment969">
<table class="cellalignment961">
<tr>
<td class="cellalignment962"><a href="../../index.htm"><img width="24" height="24" src="../../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment962"><a href="../../nav/portal_booklist.htm"><img width="24" height="24" src="../../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment962"><a href="toc.htm"><img width="24" height="24" src="../../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment962"><a href="../../nav/mindx.htm"><img width="24" height="24" src="../../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment962"><a href="../../dcommon/html/feedback.htm"><img width="24" height="24" src="../../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>
</body>
</html>
