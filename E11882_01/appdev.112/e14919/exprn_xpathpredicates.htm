<!DOCTYPE html>
<html lang="en">
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1">
<meta charset="utf-8">
<title>Expressions with XPath Predicates</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Version 5.1.2 Build 033" />
<meta name="dcterms.created" content="2011-08-16T11:52:3Z" />
<meta name="robots" content="all" />
<meta name="dcterms.title" content="Database Rules Manager and Expression Filter Developer's Guide" />
<meta name="dcterms.identifier" content="E14919-04" />
<meta name="dcterms.isVersionOf" content="EXPRN" />
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;2003, 2011,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved." />
<link rel="Start" href="../../index.htm" title="Home" type="text/html" />
<link rel="Copyright" href="../../dcommon/html/cpyr.htm" title="Copyright" type="text/html" />

<script type="application/javascript"  src="../../dcommon/js/headfoot.js"></script>
<script type="application/javascript"  src="../../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html" />
<link rel="Index" href="index.htm" title="Index" type="text/html" />
<link rel="Prev" href="exprn_indexexpressions.htm" title="Previous" type="text/html" />
<link rel="Next" href="exprn_spatialpred.htm" title="Next" type="text/html" />
<link rel="alternate" href="../e14919.pdf" title="PDF version" type="application/pdf" />
<link rel="schema.dcterms" href="http://purl.org/dc/terms/" />
<link rel="stylesheet" href="../../dcommon/css/fusiondoc.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/header.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/footer.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/fonts.css">
<link rel="stylesheet" href="../../dcommon/css/foundation.css">
<link rel="stylesheet" href="../../dcommon/css/codemirror.css">
<link rel="stylesheet" type="text/css" title="Default" href="../../nav/css/html5.css">
<link rel="stylesheet" href="../../dcommon/css/respond-480-tablet.css">
<link rel="stylesheet" href="../../dcommon/css/respond-768-laptop.css">
<link rel="stylesheet" href="../../dcommon/css/respond-1140-deskop.css">
<script type="application/javascript" src="../../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">22/36</span> <!-- End Header --><a id="BABCGCGD"></a><a id="EXPRN027"></a>
<h1 class="chapter"><span class="secnum">13</span> <a id="sthref265"></a><a id="sthref266"></a>Expressions with XPath Predicates</h1>
<p>The expressions stored in a column of a table may contain XPath predicates defined on <code>XMLType</code> attributes. This chapter describes an application for XPath predicates using the <code>Car4Sale</code> example introduced in <a href="exprn_expconcepts.htm#BABHFCIC">Chapter 11</a>. For this purpose, the information published for each car going on sale includes a <code>Details</code> attribute in addition to the <code>Model</code>, <code>Price</code>, <code>Mileage</code>, and <code>Year</code> attributes. The <code>Details</code> attribute contains additional information about the car in XML format as shown in the following example:</p>
<pre>
&lt;details&gt;
  &lt;color&gt;White&lt;/color&gt; 
  &lt;accessory&gt;
     &lt;stereo make="Koss"&gt;CD&lt;/stereo&gt;
     &lt;GPS&gt;
       &lt;resolution&gt;1FT&lt;/resolution&gt;
       &lt;memory&gt;64MB&lt;/memory&gt;
     &lt;/GPS&gt;
  &lt;/accessory&gt;
&lt;/details&gt;
</pre>
<p>A sample predicate on the <code>Details</code> attribute is:</p>
<pre>
extract(Details, '//stereo[@make="Koss"]') IS NOT NULL
</pre>
<p>You can combine this predicate with one or more predicates on other XML or non-XML attributes.</p>
<a id="EXPRN028"></a>
<div class="sect1"><!-- infolevel="all" infotype="General" --><a id="sthref267"></a>
<h2 class="sect1"><span class="secnum">13.1</span> Using XPath Predicates in Expressions</h2>
<p>Using the <code><a id="sthref268"></a>XMLType</code> data type supplied by Oracle Database, you can apply <a id="sthref269"></a>XPath predicates on XML documents within a standard SQL <code>WHERE</code> clause of a query. These predicates use SQL operators such as <code>EXTRACT</code> and <code>EXISTSNODE</code> on an instance of the <code>XMLType</code> data type to process an XPath expression for the XML instance. For more information, see <a class="olink SQLRF" href="../../server.112/e41084/toc.htm"><span class="italic">Oracle Database SQL Language Reference</span></a> and <a class="olink ADXDB" href="../e23094/toc.htm"><span class="italic">Oracle XML DB Developer's Guide</span></a>.</p>
<p>To allow XPath predicates in an <a id="sthref270"></a>expression set, you should create the corresponding attribute set with an attribute of <code>sys.XMLType</code> data type, as shown in the following example:</p>
<pre>
CREATE OR REPLACE TYPE Car4Sale AS OBJECT 
                                   (Model   VARCHAR2(20), 
                                    Year    NUMBER, 
                                    Price   NUMBER, 
                                    Mileage NUMBER,
                                    Details sys.XMLType);
/
 
BEGIN 
  DBMS_EXPFIL.CREATE_ATTRIBUTE_SET(attr_set  =&gt; 'Car4Sale',
                                   from_type =&gt; 'YES');
END;
/
</pre>
<p>The expression sets using this attribute set can include predicates on the <code>XMLType</code> attribute, as shown in the following example:</p>
<pre>
Model='Taurus' and Price &lt; 15000 and Mileage &lt; 25000 AND 
             extract(Details, '//stereo[@make="Koss"]') IS NOT NULL
 
                      -- or --
 
Model='Taurus' and Price &lt; 15000 and Mileage &lt; 25000 AND 
             existsNode(Details, '//stereo[@make="Koss"]') = 1 
</pre>
<p>Now, you can process a set of expressions stored in the <code>Interest</code> column of the <code>Consumer</code> table for a data item by passing an instance of <code>XMLType</code> for the <code>Details</code> attribute along with other attribute values to the <code>EVALUATE</code> operator:</p>
<pre>
SELECT * FROM Consumer WHERE 
    EVALUATE (Consumer.Interest, 
              'Model=&gt;''Mustang'', 
               Year=&gt;2000,
               Price=&gt;18000,
               Mileage=&gt;22000,
               Details=&gt;sys.XMLType(''&lt;details&gt;
                                       &lt;color&gt;White&lt;/color&gt; 
                                       &lt;accessory&gt;
                                        &lt;stereo make="Koss"&gt;CD&lt;/stereo&gt;
                                        &lt;GPS&gt;
                                         &lt;resolution&gt;1FT&lt;/resolution&gt;
                                         &lt;memory&gt;64MB&lt;/memory&gt;
                                        &lt;/GPS&gt;
                                       &lt;/accessory&gt;
                                      &lt;/details&gt;'')'
         ) = 1;
</pre>
<p>The previous query identifies all the rows with expressions that are true based on their XPath and non-XPath predicates.</p>
</div>
<!-- class="sect1" -->
<a id="EXPRN029"></a>
<div class="sect1"><!-- infolevel="all" infotype="General" --><a id="sthref271"></a>
<h2 class="sect1"><span class="secnum">13.2</span> <a id="sthref272"></a><a id="sthref273"></a>Indexing XPath Predicates</h2>
<p>To process a large set of XPath predicates in an expression set efficiently, you can configure the Expression Filter index defined for the expression set for the XPath predicates (in addition to some simple predicates). The Expression Filter indexes use the commonalities in the XPath expressions to efficiently compare them to a data item. These commonalities are based on the positions and the values for the XML elements and attributes appearing in the XPath expressions.</p>
<p>The indexable constructs in an XPath expression are the levels (or positions) of XML elements, the values for text nodes in XML elements, the positions of XML attributes, and the values for XML attributes. For this purpose, Expression Filter treats an XPath predicate as a combination of positional and value filters on XML elements and attributes appearing in an XML document. For example, the following XPath expression can be deciphered as a set of checks on the XML document. The list following the example explains those checks.</p>
<pre>
extract(Details, '//stereo[@make="Koss" and /*/*/GPS/memory[text()="64MB"]]')
                                                              IS NOT NULL
</pre>
<ol>
<li>
<p>Level (position) of <code>stereo</code> element is 1 or higher.</p>
</li>
<li>
<p>The <code>stereo</code> element appearing at level 1 or higher has a <code>make</code> attribute.</p>
</li>
<li>
<p>The value for <code>stereo</code> element's <code>make</code> attribute is <code>Koss</code>.</p>
</li>
<li>
<p>The <code>GPS</code> element appears at level 3.</p>
</li>
<li>
<p>The <code>memory</code> element appears at level 4.</p>
</li>
<li>
<p>The <code>memory</code> element has a text node with a value of <code>64MB</code>.</p>
</li>
</ol>
<a id="EXPRN030"></a>
<div class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref274"></a>
<h3 class="sect2"><span class="secnum">13.2.1</span> <a id="sthref275"></a>Indexable XPath Predicates</h3>
<p>The Expression Filter index does not support some constructs in an XPath predicate. Therefore, the XPath predicate is always included in the sparse predicates and evaluated during the last phase of expression filtering. For more information about sparse predicates, see <a href="exprn_indexexpressions.htm#CIHGIAFB">Section 12.4</a>.</p>
<p>You can configure a positional filter for an Expression Filter index from any XML element or attribute. A value filter can only be configured from equality predicates on XML attributes and text nodes in XML elements. XPath predicates that are indexed in an expression set must use either the <code>EXTRACT</code> or the <code>EXISTSNODE</code> operator with a positive test on the return value. For example, the following XPath predicate can be indexed, but a similar predicate with an <code>IS NULL</code> check on the return value cannot be indexed.</p>
<pre>
extract(Details, '//stereo[@make="Koss"]') IS NOT NULL
</pre>
<p>Some of the XPath constructs that cannot be indexed by the Expression Filter include:</p>
<ul>
<li>
<p>Inequality or range predicates in the node test. For example, the predicate on the <code>stereo</code> element's <code>make</code> attribute cannot be indexed in the following XPath predicate:</p>
<pre>
extract(Details, '//stereo[@make!="Koss"]') IS NOT NULL
</pre></li>
<li>
<p>Disjunctions in the node test. For example, the predicates on the <code>stereo</code> element's <code>make</code> attribute cannot be indexed in the following XPath predicate:</p>
<pre>
extract(Details, '//stereo[@make="Koss" or @make="Bose"]') IS NOT NULL
</pre></li>
<li>
<p>Node tests using XML functions other than <code>text()</code>. For example, the predicate using the XML function, <code>position</code>, cannot be indexed in the following XPath predicate:</p>
<pre>
extract(Details, '//accessory/stereo[position()=3]') IS NOT NULL
</pre>
<p>However, the <code>text()</code> function in the following example can be a value filter on the <code>stereo</code> element:</p>
<pre>
extract(Details, '//accessory/stereo[text()="CD"]') IS NOT NULL
</pre></li>
<li>
<p>Duplicate references to an XML element or an attribute within a single XPath expression. For example, if the <code>stereo</code> element appears in an XPath expression at two different locations, only the last occurrence is indexed, and all other references are processed during sparse predicate evaluation.</p>
</li>
</ul>
</div>
<!-- class="sect2" -->
<a id="EXPRN031"></a>
<div class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref276"></a>
<h3 class="sect2"><span class="secnum">13.2.2</span> Index Representation</h3>
<p>You can configure the <a id="sthref277"></a><a id="sthref278"></a>Expression Filter index to process the XPath predicates efficiently by using the most discriminating XML elements and attributes as positional and value filters. Each one forms a predicate group for the expression set.</p>
<p>For the purpose of indexing XPath predicates, the predicate table structure described in <a href="exprn_indexexpressions.htm#CIHFECIH">Section 12.3</a> is extended to include two columns for each XML tag. For an XML tag configured as positional filter, these columns capture the relative and absolute positions of the tag in various XPath predicates. For an XML tag configured as a value filter, these columns capture the constants appearing with the tag in the node tests and their relational operators.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
Only equality operators are indexed in this release.</div>
<p><a href="#BABDHADB">Figure 13-1</a> shows the predicate table structure for the index configured with the following XML tags:</p>
<ul>
<li>
<p>XML attribute <code>stereo@make</code> as value filter. (Predicate Group 4 - G4)</p>
</li>
<li>
<p>XML element <code>stereo</code> as positional filter. (Predicate Group 5 - G5)</p>
</li>
<li>
<p>Text node of the XML element <code>memory</code> as value filter. (Predicate Group 6 - G6)</p>
</li>
</ul>
<p>This image can be viewed as an extension of the predicate table shown in <a href="exprn_indexexpressions.htm#CIHJGBEA">Figure 12-1</a>. The partial row shown in the predicate table captures the following XPath predicate:</p>
<pre>
extract(Details, '//stereo[@make="Koss" and /*/*/GPS/memory[text()="64MB"]]')
                                                                  IS NOT NULL
</pre>
<div class="figure">
<p class="titleinfigure"><a id="BABDHADB"></a><a id="EXPRN548"></a>Figure 13-1 Conceptual Predicate Table with XPath Predicates</p>
<img width="547" height="75" src="img/xpathpred.gif" alt="Description of Figure 13-1 follows" /><br />
<a id="sthref279" href="img_text/xpathpred.htm">Description of "Figure 13-1 Conceptual Predicate Table with XPath Predicates"</a><br />
<br /></div>
<!-- class="figure" --></div>
<!-- class="sect2" -->
<a id="EXPRN032"></a>
<div class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref280"></a>
<h3 class="sect2"><span class="secnum">13.2.3</span> <a id="sthref281"></a>Index Processing</h3>
<p>The XPath predicates that Expression Filter captures in the predicate table are compared to an XML document that is included in the data item passed to the <code>EVALUATE</code> operator. The positions and values of the XML tags used in the index are computed for the XML document, and these are compared with the values stored in the corresponding columns of the predicate table. Assuming that the relational operators and the right-hand-side constants for the value filter on <code>stereo@make</code> attribute are stored in <code>G4_OP</code> and <code>G4_RHS</code> columns of the predicate table (see <a href="#BABDHADB">Figure 13-1</a>), the following query on the predicate table identifies the rows that satisfy this check for an XML document:</p>
<pre>
SELECT Rid FROM predicate_table
  WHERE G4_OP = '=' AND 
        G4_RHS in (SELECT column_value FROM TABLE (:G4ValuesArray));
</pre>
<p>For the previous query, you can represent the values for all the occurrences of the <code>stereo@make</code> attribute in the given XML document as a VARRAY and these are bound to the <code>:G4ValuesArray</code> variable.</p>
<p>Similarly, assuming that the position constraints and the absolute levels (positions) of the <code>stereo</code> element are stored in the <code>G5_OP</code> and <code>G5_POS</code> columns of the predicate table, the following query identifies all the rows that satisfy these positional checks for an XML document:</p>
<pre>
SELECT Rid FROM predicate_table 
    WHERE (G5_OP = '=' AND                     --- absolute position check --
           G5_POS in (SELECT column_value FROM table (:G5PosArray))) OR
           (G5_OP = '&gt;=' AND                   --- relative position check --
            G5_POS &lt;= SELECT max(column_value) FROM table (:G5PosArray)));
 
</pre>
<p>For the previous query, the <code>:G5PosArray</code> variable contains the levels for all the occurrences of the <code>stereo</code> element in the XML document. These checks on each predicate group can be combined with the checks on other (XPath and non-XPath) predicate groups to form a complete predicate table query. Expression Filter identifies a subset of the XML tags as the most selective predicate groups and configures them as the indexed predicate groups (See <a href="exprn_indexexpressions.htm#CIHGIAFB">Section 12.4</a>). Expression Filter creates bitmap indexes for the selective predicate groups, and these indexes are used along with indexes defined for other indexed predicate groups to efficiently process the predicate table query.</p>
</div>
<!-- class="sect2" -->
<a id="CIHDBFHG"></a><a id="EXPRN033"></a>
<div class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">13.2.4</span> <a id="sthref282"></a>Index Tuning for XPath Predicates</h3>
<p>Expression Filter classifies the most discriminating XML tags in a set of XPath predicates as positional filters and value filters<a id="sthref283"></a>. A value filter is considered discriminating if node tests using the XML tag are selective enough to match only a subset of XML documents. Similarly, a positional filter is considered discriminating if the tag appears at different levels or does not appear in all XML documents, and thus match only a subset of them.</p>
<p>The XPath positional and value filters can be further mapped to indexed predicate groups or stored predicate groups. PL/SQL procedures are provided to configure an Expression Filter index with these parameters. For an attribute set consisting of two or more <code>XMLType</code> attributes, the XML tags can be associated with each of these attributes</p>
<p>The XPath index parameters for a set of expressions are considered part of the index parameter, and they can be assigned to an attribute set or an expression set (the column storing the expressions). The index parameters assigned to the attribute set act as defaults and are shared across all the expression sets associated with the attribute set.</p>
<p>You can assign a few XPath index parameters to an <code>XMLType</code> attribute of an attribute set using the <code>DBMS_EXPFIL.<a id="sthref284"></a>DEFAULT_XPINDEX_PARAMETERS</code> procedure, as shown in the following example:</p>
<pre>
BEGIN
  DBMS_EXPFIL.DEFAULT_XPINDEX_PARAMETERS(
       attr_set   =&gt; 'Car4Sale',
       xmlt_attr  =&gt; 'Details',                         --- XMLType attribute
       xptag_list =&gt;                                    --- Tag list 
         exf$xpath_tags(
           exf$xpath_tag(tag_name    =&gt; 'stereo@make',  --- XML attribute
                         tag_indexed =&gt; 'TRUE',
                         tag_type    =&gt; 'VARCHAR(15)'), --- value filter
           exf$xpath_tag(tag_name    =&gt; 'stereo',       --- XML element
                         tag_indexed =&gt; 'FALSE',
                         tag_type    =&gt; null),   --- null =&gt; positional filter
           exf$xpath_tag(tag_name    =&gt; 'memory',       --- XML element
                         tag_indexed =&gt; 'TRUE',
                         tag_type    =&gt; 'VARCHAR(10)')  --- value filter
          )
        );
END;
/
</pre>
<p>Note that a missing or null value for the <code>tag_type</code> argument configures the XML tag as a positional filter.</p>
<p>For more information about assigning XPath index parameters, see <a class="olink ARPLS165" href="../../appdev.112/e40758/d_expfilref.htm#ARPLS165">DEFAULT_XPINDEX_PARAMETERS Procedure</a>.</p>
<p>By default, Expression Filter uses the previous XPath index parameters for any index created on an expression set that is associated with the <code>Car4Sale</code> attribute set.</p>
<pre>
CREATE INDEX InterestIndex ON Consumer (Interest) 
        INDEXTYPE IS EXFSYS.EXPFILTER;
</pre>
<p>Unlike simple index parameters, the XPath index parameters cannot be fine-tuned for an expression set when you create the index. However, you can achieve this by associating index parameters directly with the expression set using the <code>DBMS_EXPFIL.<a id="sthref285"></a>INDEX_PARAMETERS</code> and <code>DBMS_EXPFIL.<a id="sthref286"></a>XPINDEX_PARAMETERS</code> procedures and then creating the index, as shown in the following example:</p>
<pre>
BEGIN
  -- Derive the index parameters including XPath index params from defaults --
  DBMS_EXPFIL.INDEX_PARAMETERS(expr_tab  =&gt; 'Consumer',
                               expr_col  =&gt; 'Interest',
                               attr_list =&gt; null, 
                               operation =&gt; 'DEFAULT');
 
  -- fine-tune the XPath index parameters by adding another Tag --
  DBMS_EXPFIL.XPINDEX_PARAMETERS(expr_tab  =&gt; 'Consumer',
                                 expr_col  =&gt; 'Interest',
                                 xmlt_attr =&gt; 'Details',
                                 xptag_list =&gt;
                                   exf$xpath_tags(
                                     exf$xpath_tag(tag_name    =&gt; 'GPS',
                                                   tag_indexed =&gt; 'TRUE',
                                                   tag_type    =&gt; null)),
                                 operation =&gt; 'ADD'); 
END;
/
 
 
CREATE INDEX InterestIndex ON Consumer (Interest) 
            INDEXTYPE IS EXFSYS.EXPFILTER;
</pre>
<p>For more information, see <a class="olink ARPLS170" href="../../appdev.112/e40758/d_expfilref.htm#ARPLS170"><code>INDEX_PARAMETERS</code> Procedure</a> and <a class="olink ARPLS174" href="../../appdev.112/e40758/d_expfilref.htm#ARPLS174"><code>XPINDEX_PARAMETERS</code> Procedure</a>.</p>
<p>Once you create the index on a column storing the expressions, a query with the <code>EVALUATE</code> operator can efficiently process a large set of XPath and non-XPath predicates for a data item:</p>
<pre>
SELECT * FROM Consumer WHERE 
    EVALUATE (Consumer.Interest, 
              'Model=&gt;''Mustang'', 
               Year=&gt;2000,
               Price=&gt;18000,
               Mileage=&gt;22000,
               Details=&gt;sys.XMLType(''&lt;details&gt;
                                       &lt;color&gt;White&lt;/color&gt; 
                                       &lt;accessory&gt;
                                        &lt;stereo make="Koss"&gt;CD&lt;/stereo&gt;
                                        &lt;GPS&gt;
                                         &lt;resolution&gt;1FT&lt;/resolution&gt;
                                         &lt;memory&gt;64MB&lt;/memory&gt;
                                        &lt;/GPS&gt;
                                       &lt;/accessory&gt;
                                      &lt;/details&gt;'')'
              ) = 1;
</pre>
<div class="infobox-note">
<p class="notep1">Note:</p>
Expression Filter index tuning based on XPath statistics is not supported in the current release.</div>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment988">
<tr>
<td class="cellalignment995">
<table class="cellalignment993">
<tr>
<td class="cellalignment992"><a href="exprn_indexexpressions.htm"><img width="24" height="24" src="../../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment992"><a href="exprn_spatialpred.htm"><img width="24" height="24" src="../../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;2003, 2011,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment997">
<table class="cellalignment991">
<tr>
<td class="cellalignment992"><a href="../../index.htm"><img width="24" height="24" src="../../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment992"><a href="../../nav/portal_booklist.htm"><img width="24" height="24" src="../../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment992"><a href="toc.htm"><img width="24" height="24" src="../../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment992"><a href="index.htm"><img width="24" height="24" src="../../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment992"><a href="../../nav/mindx.htm"><img width="24" height="24" src="../../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment992"><a href="../../dcommon/html/feedback.htm"><img width="24" height="24" src="../../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>
</body>
</html>
