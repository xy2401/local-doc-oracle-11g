<!DOCTYPE html>
<html lang="en" >
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1">
<meta charset="utf-8">
<title>LOB APIs for BFILE Operations</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Version 5.1.2 Build 737" />
<meta name="dcterms.created" content="2013-07-18T13:32:42Z" />
<meta name="robots" content="all" />
<meta name="dcterms.title" content="Database SecureFiles and Large Objects Developer's Guide" />
<meta name="dcterms.identifier" content="E18294-04" />
<meta name="dcterms.isVersionOf" content="ADLOB" />
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;1996, 2013,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved." />
<link rel="Start" href="../../index.htm" title="Home" type="text/html" />
<link rel="Copyright" href="../../dcommon/html/cpyr.htm" title="Copyright" type="text/html" />

<script type="application/javascript"  src="../../dcommon/js/headfoot.js"></script>
<script type="application/javascript"  src="../../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html" />
<link rel="Index" href="index.htm" title="Index" type="text/html" />
<link rel="Glossary" href="glossary.htm" title="Glossary" type="text/html" />
<link rel="Prev" href="adlob_data_interface.htm" title="Previous" type="text/html" />
<link rel="Next" href="adlob_lob_ops.htm" title="Next" type="text/html" />
<link rel="alternate" href="../e18294.pdf" title="PDF version" type="application/pdf" />
<link rel="schema.dcterms" href="http://purl.org/dc/terms/" />
<link rel="stylesheet" href="../../dcommon/css/fusiondoc.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/header.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/footer.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/fonts.css">
<link rel="stylesheet" href="../../dcommon/css/foundation.css">
<link rel="stylesheet" href="../../dcommon/css/codemirror.css">
<link rel="stylesheet" type="text/css" title="Default" href="../../nav/css/html5.css">
<link rel="stylesheet" href="../../dcommon/css/respond-480-tablet.css">
<link rel="stylesheet" href="../../dcommon/css/respond-768-laptop.css">
<link rel="stylesheet" href="../../dcommon/css/respond-1140-deskop.css">
<script type="application/javascript" src="../../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">33/37</span> <!-- End Header -->
<div id="ADLOB012" class="chapter"><a id="g1088337"></a><a id="i1037309"></a>
<h1 class="chapter"><span class="secnum">21</span> LOB APIs for BFILE Operations</h1>
<p>This chapter describes APIs for operations that use <code>BFILE</code>s. APIs covered in this chapter are listed in <a href="#g1074815">Table 21-1</a>.</p>
<p>The following information is given for each operation described in this chapter:</p>
<ul>
<li>
<p><span class="bolditalic">Usage Notes</span> provide implementation guidelines such as information specific to a given programmatic environment or data type.</p>
</li>
<li>
<p><span class="bolditalic">Syntax</span> refers you to the syntax reference documentation for each supported programmatic environment.</p>
</li>
<li>
<p><span class="bolditalic">Examples</span> describe any setup tasks necessary to run the examples given. Demonstration files listed are available in subdirectories under <code>$ORACLE_HOME/rdbms/demo/lobs/</code> named <code>plsql</code>, <code>oci</code>, <code>vb</code>, and <code>java</code>. The driver program <code>lobdemo.sql</code> is in <code>/plsql</code> and the driver program <code>lobdemo.c</code> is in <code>/oci</code>.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
LOB APIs do not support loading data into <code>BFILE</code>s. See <a href="adlob_managing.htm#i1006100">"Using SQL*Loader to Load LOBs"</a> for details on techniques for loading data into <code>BFILE</code>s.</div>
</li>
</ul>
<p>This chapter contains these topics:</p>
<ul>
<li>
<p><a href="#i1049679">Supported Environments for BFILE APIs</a></p>
</li>
<li>
<p><a href="#i1037372">Accessing BFILEs</a></p>
</li>
<li>
<p><a href="#i1006270">Directory Objects</a></p>
</li>
<li>
<p><a href="#i1006319">BFILENAME and Initialization</a></p>
</li>
<li>
<p><a href="#CIHGGJHC">Characteristics of the BFILE Data Type</a></p>
</li>
<li>
<p><a href="#i1006368">BFILE Security</a></p>
</li>
<li>
<p><a href="#i1006552">Loading a LOB with BFILE Data</a></p>
</li>
<li>
<p><a href="#i1008227">Opening a BFILE with OPEN</a></p>
</li>
<li>
<p><a href="#i1007482">Opening a BFILE with FILEOPEN</a></p>
</li>
<li>
<p><a href="#i1010795">Determining Whether a BFILE Is Open Using ISOPEN</a></p>
</li>
<li>
<p><a href="#i1009760">Determining Whether a BFILE Is Open with FILEISOPEN</a></p>
</li>
<li>
<p><a href="#i1010877">Displaying BFILE Data</a></p>
</li>
<li>
<p><a href="#i1011639">Reading Data from a BFILE</a></p>
</li>
<li>
<p><a href="#i1012332">Reading a Portion of BFILE Data Using SUBSTR</a></p>
</li>
<li>
<p><a href="#i1012821">Comparing All or Parts of Two BFILES</a></p>
</li>
<li>
<p><a href="#i1013414">Checking If a Pattern Exists in a BFILE Using INSTR</a></p>
</li>
<li>
<p><a href="#i1013913">Determining Whether a BFILE Exists</a></p>
</li>
<li>
<p><a href="#i1014616">Getting the Length of a BFILE</a></p>
</li>
<li>
<p><a href="#i1015218">Assigning a BFILE Locator</a></p>
</li>
<li>
<p><a href="#i1015743">Getting Directory Object Name and File Name of a BFILE</a></p>
</li>
<li>
<p><a href="#i1016310">Updating a BFILE by Initializing a BFILE Locator</a></p>
</li>
<li>
<p><a href="#i1016914">Closing a BFILE with FILECLOSE</a></p>
</li>
<li>
<p><a href="#i1017271">Closing a BFILE with CLOSE</a></p>
</li>
<li>
<p><a href="#i1017971">Closing All Open BFILEs with FILECLOSEALL</a></p>
</li>
<li>
<p><a href="#i1018688">Inserting a Row Containing a BFILE</a></p>
</li>
</ul>
<a id="i1049679"></a>
<div id="ADLOB45825" class="sect1">
<h2 class="sect1">Supported Environments for BFILE APIs</h2>
<p><a href="#g1074815">Table 21-1, "Environments Supported for BFILE APIs"</a> indicates which programmatic environments are supported for the APIs discussed in this chapter. The first column describes the operation that the API performs. The remaining columns indicate with "Yes" or "No" whether the API is supported in PL/SQL, OCI, COBOL, Pro*C/C++, COM, and JDBC.</p>
<div id="ADLOB45826" class="tblhruleformalwide">
<p class="titleintable"><a id="sthref983"></a><a id="g1074815"></a>Table 21-1 Environments Supported for BFILE APIs</p>
<table class="cellalignment910" title="Environments Supported for BFILE APIs" summary="This table is described in the preceding text" dir="ltr">
<thead>
<tr class="cellalignment899">
<th class="cellalignment906" id="r1c1-t3">Operation</th>
<th class="cellalignment906" id="r1c2-t3">PL/SQL</th>
<th class="cellalignment906" id="r1c3-t3">OCI</th>
<th class="cellalignment906" id="r1c4-t3">COBOL</th>
<th class="cellalignment906" id="r1c5-t3">Pro*C/C++</th>
<th class="cellalignment906" id="r1c6-t3">COM</th>
<th class="cellalignment906" id="r1c7-t3">JDBC</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment899">
<td class="cellalignment907" id="r2c1-t3" headers="r1c1-t3">
<p><a href="#i1018688">Inserting a Row Containing a BFILE</a></p>
</td>
<td class="cellalignment907" headers="r2c1-t3 r1c2-t3">
<p>Yes</p>
</td>
<td class="cellalignment907" headers="r2c1-t3 r1c3-t3">
<p>Yes</p>
</td>
<td class="cellalignment907" headers="r2c1-t3 r1c4-t3">
<p>Yes</p>
</td>
<td class="cellalignment907" headers="r2c1-t3 r1c5-t3">
<p>Yes</p>
</td>
<td class="cellalignment907" headers="r2c1-t3 r1c6-t3">
<p>Yes</p>
</td>
<td class="cellalignment907" headers="r2c1-t3 r1c7-t3">
<p>Yes</p>
</td>
</tr>
<tr class="cellalignment899">
<td class="cellalignment907" id="r3c1-t3" headers="r1c1-t3">
<p><a href="#i1006552">Loading a LOB with BFILE Data</a></p>
</td>
<td class="cellalignment907" headers="r3c1-t3 r1c2-t3">
<p>Yes</p>
</td>
<td class="cellalignment907" headers="r3c1-t3 r1c3-t3">
<p>Yes</p>
</td>
<td class="cellalignment907" headers="r3c1-t3 r1c4-t3">
<p>Yes</p>
</td>
<td class="cellalignment907" headers="r3c1-t3 r1c5-t3">
<p>Yes</p>
</td>
<td class="cellalignment907" headers="r3c1-t3 r1c6-t3">
<p>Yes</p>
</td>
<td class="cellalignment907" headers="r3c1-t3 r1c7-t3">
<p>Yes</p>
</td>
</tr>
<tr class="cellalignment899">
<td class="cellalignment907" id="r4c1-t3" headers="r1c1-t3">
<p><a href="#i1007482">Opening a BFILE with FILEOPEN</a></p>
</td>
<td class="cellalignment907" headers="r4c1-t3 r1c2-t3">
<p>Yes</p>
</td>
<td class="cellalignment907" headers="r4c1-t3 r1c3-t3">
<p>Yes</p>
</td>
<td class="cellalignment907" headers="r4c1-t3 r1c4-t3">
<p>No</p>
</td>
<td class="cellalignment907" headers="r4c1-t3 r1c5-t3">
<p>No</p>
</td>
<td class="cellalignment907" headers="r4c1-t3 r1c6-t3">
<p>No</p>
</td>
<td class="cellalignment907" headers="r4c1-t3 r1c7-t3">
<p>Yes</p>
</td>
</tr>
<tr class="cellalignment899">
<td class="cellalignment907" id="r5c1-t3" headers="r1c1-t3">
<p><a href="#i1008227">Opening a BFILE with OPEN</a></p>
</td>
<td class="cellalignment907" headers="r5c1-t3 r1c2-t3">
<p>Yes</p>
</td>
<td class="cellalignment907" headers="r5c1-t3 r1c3-t3">
<p>Yes</p>
</td>
<td class="cellalignment907" headers="r5c1-t3 r1c4-t3">
<p>Yes</p>
</td>
<td class="cellalignment907" headers="r5c1-t3 r1c5-t3">
<p>Yes</p>
</td>
<td class="cellalignment907" headers="r5c1-t3 r1c6-t3">
<p>Yes</p>
</td>
<td class="cellalignment907" headers="r5c1-t3 r1c7-t3">
<p>Yes</p>
</td>
</tr>
<tr class="cellalignment899">
<td class="cellalignment907" id="r6c1-t3" headers="r1c1-t3">
<p><a href="#i1010795">Determining Whether a BFILE Is Open Using ISOPEN</a></p>
</td>
<td class="cellalignment907" headers="r6c1-t3 r1c2-t3">
<p>Yes</p>
</td>
<td class="cellalignment907" headers="r6c1-t3 r1c3-t3">
<p>Yes</p>
</td>
<td class="cellalignment907" headers="r6c1-t3 r1c4-t3">
<p>Yes</p>
</td>
<td class="cellalignment907" headers="r6c1-t3 r1c5-t3">
<p>Yes</p>
</td>
<td class="cellalignment907" headers="r6c1-t3 r1c6-t3">
<p>Yes</p>
</td>
<td class="cellalignment907" headers="r6c1-t3 r1c7-t3">
<p>Yes</p>
</td>
</tr>
<tr class="cellalignment899">
<td class="cellalignment907" id="r7c1-t3" headers="r1c1-t3">
<p><a href="#i1009760">Determining Whether a BFILE Is Open with FILEISOPEN</a></p>
</td>
<td class="cellalignment907" headers="r7c1-t3 r1c2-t3">
<p>Yes</p>
</td>
<td class="cellalignment907" headers="r7c1-t3 r1c3-t3">
<p>Yes</p>
</td>
<td class="cellalignment907" headers="r7c1-t3 r1c4-t3">
<p>No</p>
</td>
<td class="cellalignment907" headers="r7c1-t3 r1c5-t3">
<p>No</p>
</td>
<td class="cellalignment907" headers="r7c1-t3 r1c6-t3">
<p>No</p>
</td>
<td class="cellalignment907" headers="r7c1-t3 r1c7-t3">
<p>Yes</p>
</td>
</tr>
<tr class="cellalignment899">
<td class="cellalignment907" id="r8c1-t3" headers="r1c1-t3">
<p><a href="#i1010877">Displaying BFILE Data</a></p>
</td>
<td class="cellalignment907" headers="r8c1-t3 r1c2-t3">
<p>Yes</p>
</td>
<td class="cellalignment907" headers="r8c1-t3 r1c3-t3">
<p>Yes</p>
</td>
<td class="cellalignment907" headers="r8c1-t3 r1c4-t3">
<p>Yes</p>
</td>
<td class="cellalignment907" headers="r8c1-t3 r1c5-t3">
<p>Yes</p>
</td>
<td class="cellalignment907" headers="r8c1-t3 r1c6-t3">
<p>Yes</p>
</td>
<td class="cellalignment907" headers="r8c1-t3 r1c7-t3">
<p>Yes</p>
</td>
</tr>
<tr class="cellalignment899">
<td class="cellalignment907" id="r9c1-t3" headers="r1c1-t3">
<p><a href="#i1011639">Reading Data from a BFILE</a></p>
</td>
<td class="cellalignment907" headers="r9c1-t3 r1c2-t3">
<p>Yes</p>
</td>
<td class="cellalignment907" headers="r9c1-t3 r1c3-t3">
<p>Yes</p>
</td>
<td class="cellalignment907" headers="r9c1-t3 r1c4-t3">
<p>Yes</p>
</td>
<td class="cellalignment907" headers="r9c1-t3 r1c5-t3">
<p>Yes</p>
</td>
<td class="cellalignment907" headers="r9c1-t3 r1c6-t3">
<p>Yes</p>
</td>
<td class="cellalignment907" headers="r9c1-t3 r1c7-t3">
<p>Yes</p>
</td>
</tr>
<tr class="cellalignment899">
<td class="cellalignment907" id="r10c1-t3" headers="r1c1-t3">
<p><a href="#i1012332">Reading a Portion of BFILE Data Using SUBSTR</a></p>
</td>
<td class="cellalignment907" headers="r10c1-t3 r1c2-t3">
<p>Yes</p>
</td>
<td class="cellalignment907" headers="r10c1-t3 r1c3-t3">
<p>No</p>
</td>
<td class="cellalignment907" headers="r10c1-t3 r1c4-t3">
<p>Yes</p>
</td>
<td class="cellalignment907" headers="r10c1-t3 r1c5-t3">
<p>Yes</p>
</td>
<td class="cellalignment907" headers="r10c1-t3 r1c6-t3">
<p>Yes</p>
</td>
<td class="cellalignment907" headers="r10c1-t3 r1c7-t3">
<p>Yes</p>
</td>
</tr>
<tr class="cellalignment899">
<td class="cellalignment907" id="r11c1-t3" headers="r1c1-t3">
<p><a href="#i1012821">Comparing All or Parts of Two BFILES</a></p>
</td>
<td class="cellalignment907" headers="r11c1-t3 r1c2-t3">
<p>Yes</p>
</td>
<td class="cellalignment907" headers="r11c1-t3 r1c3-t3">
<p>No</p>
</td>
<td class="cellalignment907" headers="r11c1-t3 r1c4-t3">
<p>Yes</p>
</td>
<td class="cellalignment907" headers="r11c1-t3 r1c5-t3">
<p>Yes</p>
</td>
<td class="cellalignment907" headers="r11c1-t3 r1c6-t3">
<p>Yes</p>
</td>
<td class="cellalignment907" headers="r11c1-t3 r1c7-t3">
<p>Yes</p>
</td>
</tr>
<tr class="cellalignment899">
<td class="cellalignment907" id="r12c1-t3" headers="r1c1-t3">
<p><a href="#i1013414">Checking If a Pattern Exists in a BFILE Using INSTR</a></p>
</td>
<td class="cellalignment907" headers="r12c1-t3 r1c2-t3">
<p>Yes</p>
</td>
<td class="cellalignment907" headers="r12c1-t3 r1c3-t3">
<p>No</p>
</td>
<td class="cellalignment907" headers="r12c1-t3 r1c4-t3">
<p>Yes</p>
</td>
<td class="cellalignment907" headers="r12c1-t3 r1c5-t3">
<p>Yes</p>
</td>
<td class="cellalignment907" headers="r12c1-t3 r1c6-t3">
<p>No</p>
</td>
<td class="cellalignment907" headers="r12c1-t3 r1c7-t3">
<p>Yes</p>
</td>
</tr>
<tr class="cellalignment899">
<td class="cellalignment907" id="r13c1-t3" headers="r1c1-t3">
<p><a href="#i1013913">Determining Whether a BFILE Exists</a></p>
</td>
<td class="cellalignment907" headers="r13c1-t3 r1c2-t3">
<p>Yes</p>
</td>
<td class="cellalignment907" headers="r13c1-t3 r1c3-t3">
<p>Yes</p>
</td>
<td class="cellalignment907" headers="r13c1-t3 r1c4-t3">
<p>Yes</p>
</td>
<td class="cellalignment907" headers="r13c1-t3 r1c5-t3">
<p>Yes</p>
</td>
<td class="cellalignment907" headers="r13c1-t3 r1c6-t3">
<p>Yes</p>
</td>
<td class="cellalignment907" headers="r13c1-t3 r1c7-t3">
<p>Yes</p>
</td>
</tr>
<tr class="cellalignment899">
<td class="cellalignment907" id="r14c1-t3" headers="r1c1-t3">
<p><a href="#i1014616">Getting the Length of a BFILE</a></p>
</td>
<td class="cellalignment907" headers="r14c1-t3 r1c2-t3">
<p>Yes</p>
</td>
<td class="cellalignment907" headers="r14c1-t3 r1c3-t3">
<p>Yes</p>
</td>
<td class="cellalignment907" headers="r14c1-t3 r1c4-t3">
<p>Yes</p>
</td>
<td class="cellalignment907" headers="r14c1-t3 r1c5-t3">
<p>Yes</p>
</td>
<td class="cellalignment907" headers="r14c1-t3 r1c6-t3">
<p>Yes</p>
</td>
<td class="cellalignment907" headers="r14c1-t3 r1c7-t3">
<p>Yes</p>
</td>
</tr>
<tr class="cellalignment899">
<td class="cellalignment907" id="r15c1-t3" headers="r1c1-t3">
<p><a href="#i1015218">Assigning a BFILE Locator</a></p>
</td>
<td class="cellalignment907" headers="r15c1-t3 r1c2-t3">
<p>Yes</p>
</td>
<td class="cellalignment907" headers="r15c1-t3 r1c3-t3">
<p>Yes</p>
</td>
<td class="cellalignment907" headers="r15c1-t3 r1c4-t3">
<p>Yes</p>
</td>
<td class="cellalignment907" headers="r15c1-t3 r1c5-t3">
<p>Yes</p>
</td>
<td class="cellalignment907" headers="r15c1-t3 r1c6-t3">
<p>No</p>
</td>
<td class="cellalignment907" headers="r15c1-t3 r1c7-t3">
<p>Yes</p>
</td>
</tr>
<tr class="cellalignment899">
<td class="cellalignment907" id="r16c1-t3" headers="r1c1-t3">
<p><a href="#i1015743">Getting Directory Object Name and File Name of a BFILE</a></p>
</td>
<td class="cellalignment907" headers="r16c1-t3 r1c2-t3">
<p>Yes</p>
</td>
<td class="cellalignment907" headers="r16c1-t3 r1c3-t3">
<p>Yes</p>
</td>
<td class="cellalignment907" headers="r16c1-t3 r1c4-t3">
<p>Yes</p>
</td>
<td class="cellalignment907" headers="r16c1-t3 r1c5-t3">
<p>Yes</p>
</td>
<td class="cellalignment907" headers="r16c1-t3 r1c6-t3">
<p>Yes</p>
</td>
<td class="cellalignment907" headers="r16c1-t3 r1c7-t3">
<p>Yes</p>
</td>
</tr>
<tr class="cellalignment899">
<td class="cellalignment907" id="r17c1-t3" headers="r1c1-t3">
<p><a href="#i1016310">Updating a BFILE by Initializing a BFILE Locator</a></p>
</td>
<td class="cellalignment907" headers="r17c1-t3 r1c2-t3">
<p>Yes</p>
</td>
<td class="cellalignment907" headers="r17c1-t3 r1c3-t3">
<p>Yes</p>
</td>
<td class="cellalignment907" headers="r17c1-t3 r1c4-t3">
<p>Yes</p>
</td>
<td class="cellalignment907" headers="r17c1-t3 r1c5-t3">
<p>Yes</p>
</td>
<td class="cellalignment907" headers="r17c1-t3 r1c6-t3">
<p>Yes</p>
</td>
<td class="cellalignment907" headers="r17c1-t3 r1c7-t3">
<p>Yes</p>
</td>
</tr>
<tr class="cellalignment899">
<td class="cellalignment907" id="r18c1-t3" headers="r1c1-t3">
<p><a href="#i1016914">Closing a BFILE with FILECLOSE</a></p>
</td>
<td class="cellalignment907" headers="r18c1-t3 r1c2-t3">
<p>Yes</p>
</td>
<td class="cellalignment907" headers="r18c1-t3 r1c3-t3">
<p>Yes</p>
</td>
<td class="cellalignment907" headers="r18c1-t3 r1c4-t3">
<p>No</p>
</td>
<td class="cellalignment907" headers="r18c1-t3 r1c5-t3">
<p>No</p>
</td>
<td class="cellalignment907" headers="r18c1-t3 r1c6-t3">
<p>Yes</p>
</td>
<td class="cellalignment907" headers="r18c1-t3 r1c7-t3">
<p>Yes</p>
</td>
</tr>
<tr class="cellalignment899">
<td class="cellalignment907" id="r19c1-t3" headers="r1c1-t3">
<p><a href="#i1017271">Closing a BFILE with CLOSE</a></p>
</td>
<td class="cellalignment907" headers="r19c1-t3 r1c2-t3">
<p>Yes</p>
</td>
<td class="cellalignment907" headers="r19c1-t3 r1c3-t3">
<p>Yes</p>
</td>
<td class="cellalignment907" headers="r19c1-t3 r1c4-t3">
<p>Yes</p>
</td>
<td class="cellalignment907" headers="r19c1-t3 r1c5-t3">
<p>Yes</p>
</td>
<td class="cellalignment907" headers="r19c1-t3 r1c6-t3">
<p>Yes</p>
</td>
<td class="cellalignment907" headers="r19c1-t3 r1c7-t3">
<p>Yes</p>
</td>
</tr>
<tr class="cellalignment899">
<td class="cellalignment907" id="r20c1-t3" headers="r1c1-t3">
<p><a href="#i1017971">Closing All Open BFILEs with FILECLOSEALL</a></p>
</td>
<td class="cellalignment907" headers="r20c1-t3 r1c2-t3">
<p>Yes</p>
</td>
<td class="cellalignment907" headers="r20c1-t3 r1c3-t3">
<p>Yes</p>
</td>
<td class="cellalignment907" headers="r20c1-t3 r1c4-t3">
<p>Yes</p>
</td>
<td class="cellalignment907" headers="r20c1-t3 r1c5-t3">
<p>Yes</p>
</td>
<td class="cellalignment907" headers="r20c1-t3 r1c6-t3">
<p>Yes</p>
</td>
<td class="cellalignment907" headers="r20c1-t3 r1c7-t3">
<p>Yes</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblhruleformalwide" --></div>
<!-- class="sect1" -->
<a id="i1037372"></a>
<div id="ADLOB45827" class="sect1">
<h2 class="sect1">Accessing <a id="sthref984"></a><a id="sthref985"></a>BFILEs</h2>
<p>To access <code>BFILE</code>s use one of the following interfaces:</p>
<ul>
<li>
<p>OCI (Oracle Call Interface)</p>
</li>
<li>
<p>PL/SQL (DBMS_LOB package)</p>
</li>
<li>
<p>Precompilers, such as Pro*C/C++ and Pro*COBOL</p>
</li>
<li>
<p>Oracle Objects for OLE (OO4O)</p>
</li>
<li>
<p>Java (JDBC)</p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1"><span class="bold">See Also</span>:</p>
<a href="adlob_api_overview.htm#g1060414">Chapter 13, "Overview of Supplied LOB APIs"</a> for information about supported environments for accessing <code>BFILE</code>s.</div>
</div>
<!-- class="sect1" -->
<a id="i1006270"></a>
<div id="ADLOB45828" class="sect1">
<h2 class="sect1">Directory <a id="sthref986"></a>Objects</h2>
<p>The <code>DIRECTORY</code> object facilitates administering access and usage of <code>BFILE</code> data types. A <code>DIRECTORY</code> object specifies a <span class="italic">logical alias name</span> for a physical directory on the database server file system under which the file to be accessed is located. You can access a file in the server file system only if granted the required access privilege on <code>DIRECTORY</code> object. You can also use Enterprise Manager Web console to manage <code>DIRECTORY</code> objects.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><code>CREATE</code> <code>DIRECTORY</code> in <a class="olink SQLRF" href="../../server.112/e41084/toc.htm"><span class="italic">Oracle Database SQL Language Reference</span></a></p>
</li>
<li>
<p>See <a class="olink ADMQS" href="../../server.112/e10897/toc.htm"><span class="italic">Oracle Database 2 Day DBA.</span></a> See the description of Web-based Oracle Enterprise Manager Database Control.</p>
</li>
</ul>
</div>
<a id="i1006281"></a>
<div id="ADLOB45829" class="sect2">
<h3 class="sect2">Initializing a BFILE Locator</h3>
<p>The <code>DIRECTORY</code> object also provides the flexibility to manage the locations of the files, instead of forcing you to hard-code the absolute path names of physical files in your applications. A directory object name is used in conjunction with the <code>BFILENAME</code> function, in SQL and PL/SQL, or the <code>OCILobFileSetName()</code> in OCI, for initializing a <code>BFILE</code> locator.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
<p class="warnsp">The database does not verify that the directory and path name you specify actually exist. You should take care to specify a valid directory in your operating system. If your operating system uses case-sensitive path names, then be sure you specify the directory in the correct format. There is no requirement to specify a terminating slash (for example, <code>/tmp/</code> is not necessary, simply use <code>/tmp</code>).</p>
<p class="warnsp">Directory specifications cannot contain ".." anywhere in the path (for example, <code>/abc/def/hij..</code>).</p>
</div>
</div>
<!-- class="sect2" -->
<div id="ADLOB45830" class="sect2"><a id="sthref987"></a>
<h3 class="sect2">How to Associate Operating System Files with a BFILE</h3>
<p><a id="i1006292"></a>To associate an operating system file to a <code>BFILE</code>, first create a <code>DIRECTORY</code> object which is an alias for the full path name to the operating system file.</p>
<p>To associate existing operating system files with relevant database records of a particular table use Oracle SQL DML (Data Manipulation Language). For example:</p>
<a id="i1006295"></a>
<ul>
<li>
<p>Use <code>INSERT</code> to initialize a <code>BFILE</code> column to point to an existing file in the server file system.</p>
</li>
<li id="i1006297">
<p>Use <code>UPDATE</code> to change the reference target of the <code>BFILE</code>.</p>
</li>
<li>
<p>Initialize a <code>BFILE</code> to <code>NULL</code> and then update it later to refer to an operating system file using the <code>BFILENAME</code> function.</p>
</li>
<li>
<p>OCI users can also use <code>OCILobFileSetName()</code> to initialize a <code>BFILE</code> locator variable that is then used in the <code>VALUES</code> clause of an <code>INSERT</code> statement.</p>
</li>
</ul>
<p class="subhead1"><a id="ADLOB45831"></a>Directory Example</p>
<p>The following statements associate the files <code>Image1.gif</code> and <code>image2.gif</code> with records having <code>key_value</code> of 21 and 22 respectively. '<code>IMG</code>' is a <code>DIRECTORY</code> object that represents the physical directory under which <code>Image1.gif</code> and <code>image2.gif</code> are stored.</p>
<p>You may be required to set up data structures similar to the following for certain examples to work:</p>
<pre>
CREATE TABLE Lob_table (
   Key_value NUMBER NOT NULL,
   F_lob BFILE)
<span class="bold">   </span>INSERT INTO Lob_table VALUES
      (21,  BFILENAME('IMG', 'Image1.gif'));
   INSERT INTO Lob_table VALUES
      (22, BFILENAME('IMG', 'image2.gif'));
</pre>
<p>The following <code>UPDATE</code> statement changes the target file to <code>image3.gif</code> for the row with <code>key_value</code> of 22.</p>
<pre>
<span class="bold">  </span> UPDATE Lob_table SET f_lob = BFILENAME('IMG', 'image3.gif') 
       WHERE Key_value = 22;
</pre>
<div class="infobox-note">
<p class="notep1">Note:</p>
<p class="warnsp">The database does not expand environment variables specified in the <code>DIRECTORY</code> object or file name of a <code>BFILE</code> locator. For example, specifying:</p>
<pre>
BFILENAME('WORK_DIR', '$MY_FILE') 
</pre>
<p class="warnsp">where <code>MY_FILE</code>, an environment variable defined in the operating system, is not valid.</p>
</div>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="i1006319"></a>
<div id="ADLOB45832" class="sect1">
<h2 class="sect1">BFILENAME and Initialization</h2>
<p><a id="sthref988"></a><code>BFILENAME</code> is a built-in function that you use to initialize a <code>BFILE</code> column to point to an external file.</p>
<p>Once physical files are associated with records using SQL DML, subsequent read operations on the <code>BFILE</code> can be performed using PL/SQL <code>DBMS_LOB</code> package and OCI. However, these files are read-only when accessed through <code>BFILE</code>s, and so they cannot be updated or deleted through <code>BFILE</code>s.</p>
<p>As a consequence of the <a id="sthref989"></a>reference-based <a id="sthref990"></a>semantics for <code>BFILEs</code>, it is possible to have multiple <code>BFILE</code> columns in the same record or different records referring to the same file. For example, the following <code>UPDATE</code> statements set the <code>BFILE</code> column of the row with <code>key_value</code> = 21 in <code>lob_table</code> to point to the same file as the row with <code>key_value</code> = 22.</p>
<pre>
UPDATE lob_table 
   SET f_lob = (SELECT f_lob FROM lob_table WHERE key_value = 22)
      WHERE key_value = 21;
</pre>
<p>Think of <code>BFILENAME</code> in terms of initialization &mdash; it can initialize the value for the following:</p>
<ul>
<li>
<p><code>BFILE</code> column</p>
</li>
<li>
<p><code>BFILE</code> (automatic) variable declared inside a PL/SQL module</p>
</li>
</ul>
</div>
<!-- class="sect1" -->
<a id="CIHGGJHC"></a>
<div id="ADLOB45833" class="sect1">
<h2 class="sect1">Characteristics of the BFILE Data Type</h2>
<p>Using the <code>BFILE</code> data type has the following advantages:</p>
<ul>
<li>
<p>If your need for a particular <code>BFILE</code> is temporary and limited within the module on which you are working, then you can use the <code>BFILE</code> related APIs on the variable without ever having to associate this with a column in the database.</p>
</li>
<li>
<p>Because you are not forced to create a <code>BFILE</code> column in a server side table, initialize this column value, and then retrieve this column value using a <code>SELECT</code>, you save a round-trip to the server.</p>
</li>
</ul>
<p>For more information, refer to the example given for <code>DBMS_LOB</code>.<code>LOADFROMFILE</code> (see <a href="#i1006552">"Loading a LOB with BFILE Data"</a>).</p>
<p>The OCI counterpart for <code>BFILENAME</code> is <code><a id="sthref991"></a>OCILobFileSetName()</code>, which can be used in a similar fashion.</p>
<a id="i1006347"></a>
<div id="ADLOB45834" class="sect2">
<h3 class="sect2"><a id="sthref992"></a>DIRECTORY Name Specification</h3>
<p>You must have <code>CREATE ANY DIRECTORY</code> system privilege to create directories. Path names cannot contain two dots (".."). The naming convention for <code><a id="sthref993"></a><a id="sthref994"></a><a id="sthref995"></a>DIRECTORY</code> objects is the same as that for tables and indexes. That is, normal identifiers are interpreted in uppercase, but delimited identifiers are interpreted as is. For example, the following statement:</p>
<pre>
CREATE OR REPLACE DIRECTORY scott_dir AS '/usr/home/scott';
</pre>
<p>creates or redefines a <code>DIRECTORY</code> object whose name is '<code>SCOTT_DIR</code>' (in uppercase). But if a delimited identifier is used for the <code>DIRECTORY</code> name, as shown in the following statement</p>
<pre>
CREATE DIRECTORY "Mary_Dir" AS '/usr/home/mary';
</pre>
<p>then the directory object name is '<code>Mary_Dir</code>'. Use '<code>SCOTT_DIR</code>' and '<code>Mary_Dir</code>' when calling <code><a id="sthref996"></a>BFILENAME</code>. For example:</p>
<pre>
BFILENAME('SCOTT_DIR', 'afile')
BFILENAME('Mary_Dir', 'afile')
</pre>
<div id="ADLOB45835" class="sect3"><a id="sthref997"></a>
<h4 class="sect3">On <a id="sthref998"></a>Windows Platforms</h4>
<p>On Windows platforms the directory names are case-insensitive. Therefore the following two statements refer to the same directory:</p>
<pre>
CREATE DIRECTORY "big_cap_dir" AS "g:\data\source";

CREATE DIRECTORY "small_cap_dir" AS "G:\DATA\SOURCE";
</pre></div>
<!-- class="sect3" --></div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="i1006368"></a>
<div id="ADLOB45836" class="sect1">
<h2 class="sect1">BFILE <a id="sthref999"></a><a id="sthref1000"></a>Security</h2>
<p>This section introduces the <code>BFILE</code> security model and associated SQL statements. The main SQL statements associated with <code>BFILE</code> security are:</p>
<ul>
<li>
<p>SQL DDL: <code>CREATE</code> and <code>REPLACE</code> or <code>ALTER</code> a <code>DIRECTORY</code> object</p>
</li>
<li>
<p>SQL DML: <code>GRANT</code> and <code>REVOKE</code> the <code>READ</code> system and object privileges on <code>DIRECTORY</code> objects</p>
</li>
</ul>
<div id="ADLOB45837" class="sect2"><a id="sthref1001"></a>
<h3 class="sect2"><a id="sthref1002"></a>Ownership and Privileges</h3>
<p>The <code>DIRECTORY</code> object is a <span class="italic">system owned</span> object. For more information on system owned objects, see <a class="olink SQLRF" href="../../server.112/e41084/toc.htm"><span class="italic">Oracle Database SQL Language Reference</span></a>. Oracle Database supports two new system privileges, which are granted only to DBA:</p>
<ul>
<li>
<p><code>CREATE</code> <code>ANY</code> <code>DIRECTORY</code> &mdash; for creating or altering the <code>DIRECTORY</code> object creation</p>
</li>
<li>
<p><code>DROP</code> <code>ANY</code> <code>DIRECTORY</code> &mdash; for deleting the <code>DIRECTORY</code> object</p>
</li>
</ul>
</div>
<!-- class="sect2" -->
<div id="ADLOB45838" class="sect2"><a id="sthref1003"></a>
<h3 class="sect2">Read Permission on a DIRECTORY Object</h3>
<p><code>READ</code> permission on the <code>DIRECTORY</code> object enables you to read files located under that directory. The creator of the <code>DIRECTORY</code> object automatically earns the <code>READ</code> privilege.</p>
<p>If you have been granted the <code>READ</code> permission with <code>GRANT</code> option, then you may in turn grant this privilege to other users/roles and add them to your privilege domains.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
The <code>READ</code> permission is defined only on the <code>DIRECTORY</code> <span class="italic"><a id="sthref1004"></a>object</span>, not on individual files. Hence there is no way to assign different privileges to files in the same directory.</div>
<p>The physical directory that it represents may or may not have the corresponding operating system privileges (<span class="italic">read</span> in this case) for the Oracle Server process.</p>
<p>It is the responsibility of the DBA to ensure the following:</p>
<ul>
<li>
<p>That the physical directory exists</p>
</li>
<li>
<p><span class="italic">Read</span> permission for the Oracle Server process is enabled on the file, the directory, and the path leading to it</p>
</li>
<li>
<p>The directory remains available, and <span class="italic">read</span> permission remains enabled, for the entire duration of file access by database users</p>
</li>
</ul>
<p>The privilege just implies that as far as the Oracle Server is concerned, you may read from files in the directory. These privileges are checked and enforced by the PL/SQL <code>DBMS_LOB</code> package and OCI APIs at the time of the actual file operations.</p>
<div class="infoboxnotewarn">
<p class="notep1">Caution:</p>
<p class="warnsp">Because <code><span class="codeinlinebold">CREATE</span></code> <code><span class="codeinlinebold">ANY</span></code> <code><span class="codeinlinebold">DIRECTORY</span></code> and <code><span class="codeinlinebold">DROP</span></code> <code><span class="codeinlinebold">ANY</span></code> <code><span class="codeinlinebold">DIRECTORY</span></code> privileges potentially expose the server file system to all database users, the DBA should be prudent in granting these privileges to normal database users to prevent security breach.</p>
</div>
</div>
<!-- class="sect2" -->
<div id="ADLOB45839" class="sect2"><a id="sthref1005"></a>
<h3 class="sect2"><a id="sthref1006"></a>SQL DDL for BFILE <a id="sthref1007"></a>Security</h3>
<p>Refer to the <a class="olink SQLRF" href="../../server.112/e41084/toc.htm"><span class="italic">Oracle Database SQL Language Reference</span></a> for information about the following SQL DDL statements that create, replace, and drop <code>DIRECTORY</code> objects:</p>
<ul>
<li>
<p><code>CREATE</code> <code>DIRECTORY</code></p>
</li>
<li>
<p><code>DROP</code> <code>DIRECTORY</code></p>
</li>
</ul>
</div>
<!-- class="sect2" -->
<div id="ADLOB45840" class="sect2"><a id="sthref1008"></a>
<h3 class="sect2"><a id="sthref1009"></a>SQL DML for BFILE <a id="sthref1010"></a>Security</h3>
<p>Refer to the <a class="olink SQLRF" href="../../server.112/e41084/toc.htm"><span class="italic">Oracle Database SQL Language Reference</span></a> for information about the following SQL DML statements that provide security for <code>BFILE</code>s:</p>
<ul>
<li>
<p><code>GRANT</code> (system privilege)</p>
</li>
<li>
<p><code>GRANT</code> (object privilege)</p>
</li>
<li>
<p><code>REVOKE</code> (system privilege)</p>
</li>
<li>
<p><code>REVOKE</code> (object privilege)</p>
</li>
<li>
<p><code>AUDIT</code> (new statements)</p>
</li>
<li>
<p><code>AUDIT</code> (schema objects)</p>
</li>
</ul>
</div>
<!-- class="sect2" -->
<div id="ADLOB45841" class="sect2"><a id="sthref1011"></a>
<h3 class="sect2"><a id="sthref1012"></a>Catalog <a id="sthref1013"></a><a id="sthref1014"></a>Views on Directories</h3>
<p>Catalog views are provided for DIRECTORY objects to enable users to view object names and corresponding paths and privileges. Supported views are:</p>
<ul>
<li>
<p><code>ALL_DIRECTORIES</code> (<code>OWNER</code>, <code>DIRECTORY_NAME</code>, <code>DIRECTORY_PATH</code>)</p>
<p>This view describes all directories accessible to the user.</p>
</li>
<li>
<p><code>DBA_DIRECTORIES</code>(<code>OWNER</code>, <code>DIRECTORY_NAME</code>, <code>DIRECTORY_PATH</code>)</p>
<p>This view describes all directories specified for the entire database.</p>
</li>
</ul>
</div>
<!-- class="sect2" -->
<a id="i1006439"></a>
<div id="ADLOB45842" class="sect2">
<h3 class="sect2"><a id="sthref1015"></a>Guidelines for <a id="sthref1016"></a>DIRECTORY Usage</h3>
<p>The main goal of the <code>DIRECTORY</code> feature is to enable a simple, flexible, non-intrusive, yet secure mechanism for the DBA to manage access to large files in the server file system. But to realize this goal, it is very important that the DBA follow these guidelines when using <code>DIRECTORY</code> objects:</p>
<ul>
<li>
<p>Do not map a <code>DIRECTORY</code> object to a data file directory. A <code>DIRECTORY</code> object should not be mapped to physical directories that contain Oracle data files, control files, log files, and other system files. Tampering with these files (accidental or otherwise) could corrupt the database or the server operating system.</p>
</li>
<li>
<p>Only the DBA should have system privileges. The system privileges such as <code>CREATE</code> <code>ANY</code> <code>DIRECTORY</code> (granted to the DBA initially) should be used carefully and not granted to other users indiscriminately. In most cases, only the database administrator should have these privileges.</p>
</li>
<li>
<p>Use caution when granting the DIRECTORY privilege. Privileges on <code>DIRECTORY</code> objects should be granted to different users carefully. The same holds for the use of the <code>WITH</code> <code>GRANT</code> <code>OPTION</code> clause when granting privileges to users.</p>
</li>
<li>
<p>Do not drop or replace <code>DIRECTORY</code> objects when database is in operation. <code>DIRECTORY</code> objects should not be arbitrarily dropped or replaced when the database is in operation. If this were to happen, then operations <span class="italic">from all sessions</span> on all files associated with this <code>DIRECTORY</code> object fail. Further, if a <code>DROP</code> or <code>REPLACE</code> command is executed before these files could be successfully closed, then the references to these files are lost in the programs, and system resources associated with these files are not be released until the session(s) is shut down.</p>
<p>The only recourse left to PL/SQL users, for example, is to either run a program block that calls <code>DBMS_LOB</code>.<code>FILECLOSEALL</code> and restart their file operations, or exit their sessions altogether. Hence, it is imperative that you use these commands with prudence, and preferably during maintenance downtimes.</p>
</li>
<li>
<p>Use caution when revoking a user's privilege on <code>DIRECTORY</code> objects. Revoking a user's privilege on a <code>DIRECTORY</code> object using the <code>REVOKE</code> statement causes all subsequent operations on dependent files from the user's session to fail. Either you must re-acquire the privileges to close the file, or run a <code><a id="sthref1017"></a>FILECLOSEALL</code> in the session and restart the file operations.</p>
</li>
</ul>
<p>In general, using <code>DIRECTORY</code> objects for managing file access is an extension of system administration work at the operating system level. With some planning, files can be logically organized into suitable directories that have READ privileges for the Oracle process.</p>
<p><code>DIRECTORY</code> objects can be created with <code>READ</code> privileges that map to these physical directories, and specific database users granted access to these directories.</p>
</div>
<!-- class="sect2" -->
<div id="ADLOB45843" class="sect2"><a id="sthref1018"></a>
<h3 class="sect2">BFILEs in <a id="sthref1019"></a>Shared Server (Multithreaded Server) Mode</h3>
<p><a id="sthref1020"></a><a id="sthref1021"></a><a id="sthref1022"></a>The database does not support session migration for <code>BFILE</code> data types in shared server (multithreaded server) mode. This implies that operations on open <code>BFILE</code> instances can persist beyond the end of a call to a shared server.</p>
<p>In shared server sessions, <code>BFILE</code> operations are bound to one shared server, they cannot migrate from one server to another.</p>
</div>
<!-- class="sect2" -->
<div id="ADLOB45844" class="sect2"><a id="sthref1023"></a>
<h3 class="sect2">External LOB (BFILE) <a id="sthref1024"></a>Locators</h3>
<p>For <code>BFILE</code>s, the value is stored in a server-side operating system file; in other words, external to the database. The <code>BFILE</code> locator that refers to that file is stored in the row.</p>
<div id="ADLOB45845" class="sect3"><a id="sthref1025"></a>
<h4 class="sect3">When Two Rows in a BFILE Table <a id="sthref1026"></a>Refer to the Same File</h4>
<p>If a <code>BFILE</code> locator variable that is used in a <code>DBMS_LOB</code>.<code>FILEOPEN</code> (for example L1) is assigned to another locator variable, (for example L2), then both L1 and L2 point to the same file. This means that two rows in a table with a <code>BFILE</code> column can refer to the same file or to two distinct files &mdash; a fact that the canny developer might turn to advantage, but which could well be a pitfall for the unwary.</p>
</div>
<!-- class="sect3" -->
<div id="ADLOB45846" class="sect3"><a id="sthref1027"></a>
<h4 class="sect3">BFILE Locator Variable</h4>
<p><code>A BFILE</code> locator variable operates like any other automatic variable. With respect to file operations, it operates like a <span class="italic">file descriptor</span> available as part of the standard input/output library of most conventional programming languages. This implies that once you define and initialize a <code>BFILE</code> locator, and open the file pointed to by this locator, all subsequent operations until the closure of this file must be done from within the same program block using this locator or local copies of this locator.</p>
</div>
<!-- class="sect3" -->
<div id="ADLOB45847" class="sect3"><a id="sthref1028"></a>
<h4 class="sect3"><a id="sthref1029"></a>Guidelines for BFILEs</h4>
<p>Note the following guidelines when working with <code>BFILE</code>s:</p>
<ul>
<li>
<p>Open and close a file from the same program block at same nesting level. The <code>BFILE</code> locator variable can be used, just as any scalar, as a parameter to other procedures, member methods, or external function callouts. However, it is recommended that you open and close a file from the same program block at the same nesting level.</p>
</li>
<li>
<p>Set the <code>BFILE</code> value before flushing the object to the database. If an object contains a <code>BFILE</code>, then you must set the <code>BFILE</code> value before flushing the object to the database, thereby inserting a new row. In other words, you must call <code><a id="sthref1030"></a>OCILobFileSetName()</code> after <code><a id="sthref1031"></a>OCIObjectNew()</code> and before <code><a id="sthref1032"></a>OCIObjectFlush()</code>.</p>
</li>
<li>
<p>Indicate the <code>DIRECTORY</code> object name and file name before inserting or updating of a <code>BFILE</code>. It is an error to insert or update a <code>BFILE</code> without indicating a <code>DIRECTORY</code> object name and file name.</p>
<p>This rule also applies to users using an OCI bind variable for a <code>BFILE</code> in an insert or update statement. The OCI bind variable must be initialized with a <code>DIRECTORY</code> object name and file name before issuing the insert or update statement.</p>
</li>
<li>
<p>Initialize <code>BFILE</code> Before insert or update</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
<code><a id="sthref1033"></a>OCISetAttr()</code> does not allow the user to set a <code>BFILE</code> locator to <code>NULL</code>.</div>
</li>
<li>
<p>Before using SQL to insert or update a row with a <code>BFILE</code>, you must initialize the <code>BFILE</code> to one of the following:</p>
<ul>
<li>
<p><code>NULL</code> (not possible if using an OCI bind variable)</p>
</li>
<li>
<p>A <code>DIRECTORY</code> object name and file name</p>
</li>
</ul>
</li>
<li>
<p>A path name cannot contain two dots ("..") anywhere in its specification. A file name cannot start with two dots.</p>
</li>
</ul>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="i1006552"></a>
<div id="ADLOB1016" class="sect1">
<h2 class="sect1">Loading a <a id="sthref1034"></a>LOB with BFILE Data</h2>
<p>This section describes how to load a LOB with data from a <code>BFILE</code>.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#g1074815">Table 21-1, "Environments Supported for BFILE APIs"</a>, for a list of operations on <code>BFILE</code>s and APIs provided for each programmatic environment.
<p><a class="olink JJDBC" href="../../java.112/e16548/toc.htm"><span class="italic">Oracle Database JDBC Developer's Guide and Reference</span></a> for details of working with <code>BFILE</code> functions in this chapter.</p>
</div>
<p class="subhead1"><a id="ADLOB45848"></a>Preconditions</p>
<p>The following preconditions must exist before calling this procedure:</p>
<ul>
<li>
<p>The source <code>BFILE</code> instance must exist.</p>
</li>
<li>
<p>The destination LOB instance must exist.</p>
</li>
</ul>
<p class="subhead1"><a id="ADLOB45849"></a>Usage Notes</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
The <code><a id="sthref1035"></a><a id="sthref1036"></a>LOADBLOBFROMFILE</code> and <code>LOADCLOBFROMFILE</code> procedures implement the functionality of this procedure and provide improved features for loading binary data and character data. The improved procedures are available in the PL/SQL environment only. When possible, using one of the improved procedures is recommended. See <a href="adlob_lob_ops.htm#i1010559">"Loading a BLOB with Data from a BFILE"</a> and <a href="adlob_lob_ops.htm#i1010659">"Loading a CLOB or NCLOB with Data from a BFILE"</a> for more information.</div>
<p class="subhead2"><a id="ADLOB45850"></a><a id="sthref1037"></a><a id="sthref1038"></a><a id="sthref1039"></a>Character Set Conversion</p>
<p>In using OCI, or any of the programmatic environments that access OCI functionality, character set conversions are <span class="italic">implicitly</span> performed when translating from one character set to another.</p>
<p class="subhead2"><a id="ADLOB45851"></a>BFILE to CLOB or NCLOB: Converting From Binary Data to a Character Set</p>
<p>When you use the <code>DBMS_LOB.LOADFROMFILE</code> procedure to populate a <code>CLOB</code> or <code>NCLOB</code>, you are populating the LOB with binary data from the <code>BFILE</code>. <span class="italic">No implicit translation</span> is performed from binary data to a character set. For this reason, you should use the <code>LOADCLOBFROMFILE</code> procedure when loading text (see <a href="adlob_lob_ops.htm#i1010659">Loading a CLOB or NCLOB with Data from a BFILE</a>).</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink NLSPG" href="../../server.112/e10729/toc.htm"><span class="italic">Oracle Database Globalization Support Guide</span></a> for character set conversion issues.</div>
<p class="subhead2"><a id="ADLOB45852"></a><a id="sthref1040"></a>Amount Parameter</p>
<p>Note the following with respect to the <code>amount</code> parameter:</p>
<ul>
<li>
<p><code><a id="sthref1041"></a>DBMS_LOB.LOADFROMFILE</code></p>
<p>If you want to load the entire <code>BFILE</code>, then pass the constant <code>DBMS_LOB.LOBMAXSIZE</code>. If you pass any other value, then it must be less than or equal to the size of the <code>BFILE</code>.</p>
</li>
<li>
<p><code><a id="sthref1042"></a>OCILobLoadFromFile()</code></p>
<p>If you want to load the entire <code>BFILE</code>, then you can pass the constant <code>UB4MAXVAL</code>. If you pass any other value, then it must be less than or equal to the size of the <code>BFILE</code>.</p>
</li>
<li>
<p><code><a id="sthref1043"></a>OCILobLoadFromFile2()</code></p>
<p>If you want to load the entire <code>BFILE</code>, then you can pass the constant <code>UB8MAXVAL</code>. If you pass any other value, then it must be less than or equal to the size of the <code>BFILE</code>.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="adlob_lob_ops.htm#g1098617">Table 22-2, "Maximum LOB Size for Load from File Operations"</a> for details on the maximum value of the amount parameter.</div>
</li>
</ul>
<p class="subhead1"><a id="ADLOB45853"></a>Syntax</p>
<p>Use the following syntax references for each programmatic environment:</p>
<ul>
<li>
<p>PL/SQL (DBMS_LOB) <a class="olink ARPLS600" href="../../appdev.112/e40758/d_lob.htm#ARPLS600"><span class="italic">(Oracle Database PL/SQL Packages and Types Reference):</span></a> "DBMS_LOB" &mdash; LOADFROMFILE</p>
</li>
<li>
<p>C (OCI): <a class="olink LNOCI070" href="../../appdev.112/e10646/oci07lob.htm#LNOCI070"><span class="italic">Oracle Call Interface Programmer's Guide)</span></a>: Chapter 7, "LOB and File Operations", for usage notes and examples. Chapter 16, "LOB Functions" &mdash; <code>OCILobLoadFromFile2()</code>.</p>
</li>
<li>
<p>COBOL (Pro*COBOL) <a class="olink LNPCB" href="../../appdev.112/e10826/toc.htm"><span class="italic">Pro*COBOL Programmer's Guide</span></a> for information on LOBs, usage notes on LOB Statements, embedded SQL, and LOB LOAD precompiler directives.</p>
</li>
<li>
<p>C/C++ (Pro*C/C++) (<a class="olink LNPCC017" href="../../appdev.112/e10825/pc_17obj.htm#LNPCC017"><span class="italic">Pro*C/C++ Programmer's Guide)</span></a>: "Large Objects (LOBs)", "LOB Statements" "Embedded SQL Statements and Directives"&mdash; LOB LOAD.</p>
</li>
<li>
<p>COM (OO4O): <a class="olink OOFOL" href="../../win.112/e17727/toc.htm"><span class="italic">Oracle Objects for OLE Developer's Guide</span></a></p>
</li>
<li>
<p>Java (JDBC) <a class="olink JJDBC15000" href="../../java.112/e16548/oralob.htm#JJDBC15000"><span class="italic">Oracle Database JDBC Developer's Guide and Reference)</span></a>: "Working With LOBs and BFILEs" &mdash; Working with BFILEs.</p>
</li>
</ul>
<p class="subhead1"><a id="ADLOB45854"></a>Examples</p>
<p>Examples are provided in the following programmatic environments:</p>
<ul>
<li>
<p>PL/SQL (DBMS_LOB): <code>floaddat.sql</code></p>
</li>
<li>
<p>OCI: <code>floaddat.c</code></p>
</li>
<li>
<p>COM (OO4O): <code>floaddat.bas</code></p>
</li>
<li>
<p>Java (JDBC): No example.</p>
</li>
</ul>
</div>
<!-- class="sect1" -->
<a id="i1008227"></a>
<div id="ADLOB45855" class="sect1">
<h2 class="sect1">Opening a <a id="sthref1044"></a>BFILE with OPEN</h2>
<p>This section describes how to open a <code>BFILE</code> using the OPEN function.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
You can also open a <code>BFILE</code> using the <code>FILEOPEN</code> function; however, using the <code>OPEN</code> function is recommended for new development. Using the <code>FILEOPEN</code> function is described in <a href="#i1007482">Opening a BFILE with FILEOPEN</a>.</div>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#g1074815">Table 21-1, "Environments Supported for BFILE APIs"</a>, for a list of operations on <code>BFILE</code>s and APIs provided for each programmatic environment.</div>
<p class="subhead1"><a id="ADLOB45856"></a>Syntax</p>
<p>Use the following syntax references for each programmatic environment:</p>
<ul>
<li>
<p>PL/SQL(DBMS_LOB) <a class="olink ARPLS600" href="../../appdev.112/e40758/d_lob.htm#ARPLS600"><span class="italic">(Oracle Database PL/SQL Packages and Types Reference): "DBMS_LOB" &mdash;</span></a> OPEN</p>
</li>
<li>
<p>C (OCI) (<a class="olink LNOCI070" href="../../appdev.112/e10646/oci07lob.htm#LNOCI070"><span class="italic">Oracle Call Interface Programmer's Guide)</span></a>: Chapter 7, "LOB and File Operations", for usage notes. Chapter 16, section "LOB Functions" &mdash; <code>OCILobOpen()</code>, <code>OCILobClose()</code>.</p>
</li>
<li>
<p>COBOL (Pro*COBOL) <a class="olink LNPCB" href="../../appdev.112/e10826/toc.htm"><span class="italic">Pro*COBOL Programmer's Guide</span></a> for information on LOBs, usage notes on LOB statements, and embedded SQL and precompiler directives &mdash; LOB OPEN.</p>
</li>
<li>
<p>C/C++ (Pro*C/C++) (<a class="olink LNPCC017" href="../../appdev.112/e10825/pc_17obj.htm#LNPCC017"><span class="italic">Pro*C/C++ Programmer's Guide)</span></a>: "Large Objects (LOBs)", "LOB Statements", "Embedded SQL Statements and Directives" &mdash; LOB OPEN.</p>
</li>
<li>
<p>COM (OO4O): <a class="olink OOFOL" href="../../win.112/e17727/toc.htm"><span class="italic">Oracle Objects for OLE Developer's Guide</span></a></p>
</li>
<li>
<p>Java (JDBC) <a class="olink JJDBC15000" href="../../java.112/e16548/oralob.htm#JJDBC15000"><span class="italic">(Oracle Database JDBC Developer's Guide and Reference):</span></a> "Working With LOBs and BFILEs" &mdash; Working with BFILEs.</p>
</li>
</ul>
<p class="subhead1"><a id="ADLOB45857"></a><span class="bold">Scenario</span></p>
<p>These examples open an image in operating system file <code>ADPHOTO_DIR</code>.</p>
<p class="subhead1"><a id="ADLOB45858"></a>Examples</p>
<p>Examples are provided in the following programmatic environments:</p>
<ul>
<li>
<p>PL/SQL(DBMS_LOB): <code>fopen.sql</code></p>
</li>
<li>
<p>OCI: <code>fopen.c</code></p>
</li>
<li>
<p>COM (OO4O): <code>fopen.bas</code></p>
</li>
<li>
<p>Java (JDBC): <code>fopen.java</code></p>
</li>
</ul>
</div>
<!-- class="sect1" -->
<a id="i1007482"></a>
<div id="ADLOB1012" class="sect1">
<h2 class="sect1">Opening a <a id="sthref1045"></a>BFILE with FILEOPEN</h2>
<p>This section describes how to open a <code>BFILE</code> using the <code>FILEOPEN</code> function.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
The <code>FILEOPEN</code> function is not recommended for new application development. The <code>OPEN</code> function is recommended for new development. See <a href="#i1008227">"Opening a BFILE with OPEN"</a></div>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#g1074815">Table 21-1, "Environments Supported for BFILE APIs"</a>, for a list of operations on <code>BFILE</code>s and APIs provided for each programmatic environment.</div>
<p class="subhead1"><a id="ADLOB45859"></a>Usage Notes for Opening a BFILE</p>
<p>While you can continue to use the older <code>FILEOPEN</code> form, Oracle <span class="italic">strongly recommends</span> that you switch to using <code>OPEN</code>, because this facilitates future extensibility.</p>
<p class="subhead1"><a id="ADLOB45860"></a>Syntax</p>
<p>Use the following syntax references for each programmatic environment:</p>
<ul>
<li>
<p>PL/SQL (DBMS_LOB) <a class="olink ARPLS600" href="../../appdev.112/e40758/d_lob.htm#ARPLS600"><span class="italic">(Oracle Database PL/SQL Packages and Types Reference):</span></a> "DBMS_LOB" <span class="italic">&mdash;</span> FILEOPEN, FILECLOSE</p>
</li>
<li>
<p>C (OCI) (<a class="olink LNOCI070" href="../../appdev.112/e10646/oci07lob.htm#LNOCI070"><span class="italic">Oracle Call Interface Programmer's Guide)</span></a>: Chapter 7, "LOB and File Operations, for usage notes. Chapter 16, section "LOB Functions" &mdash; <code>OCILobFileOpen()</code>, <code>OCILobFileClose()</code>, <code>OCILobFileSetName()</code>.</p>
</li>
<li>
<p>COBOL (Pro*COBOL): A syntax reference is not applicable in this release.</p>
</li>
<li>
<p>C/C++ (Pro*C/C++): A syntax reference is not applicable in this release.</p>
</li>
<li>
<p>COM (OO4O): A syntax reference is not applicable in this release.</p>
</li>
<li>
<p>Java (JDBC) (<a class="olink JJDBC15000" href="../../java.112/e16548/oralob.htm#JJDBC15000"><span class="italic">Oracle Database JDBC Developer's Guide and Reference</span></a><span class="italic">)</span>: "Working With LOBs and BFILEs" &mdash; Working with BFILEs.</p>
</li>
</ul>
<p class="subhead1"><a id="ADLOB45861"></a>Scenario for Opening a BFILE</p>
<p>These examples open <code>keyboard_logo.jpg</code> in <code>DIRECTORY</code> object <code>MEDIA_DIR</code>.</p>
<p class="subhead1"><a id="ADLOB45862"></a>Examples</p>
<p>Examples are provided in the following four programmatic environments:</p>
<ul>
<li>
<p>PL/SQL (DBMS_LOB): <code>ffilopen.sql</code></p>
</li>
<li>
<p>OCI: <code>ffilopen.c</code></p>
</li>
<li>
<p>Java (JDBC): <code>ffilopen.java</code></p>
</li>
</ul>
</div>
<!-- class="sect1" -->
<a id="i1010795"></a>
<div id="ADLOB45863" class="sect1">
<h2 class="sect1">Determining Whether a <a id="sthref1046"></a>BFILE Is Open Using ISOPEN</h2>
<p>This section describes how to determine whether a <code>BFILE</code> is open using ISOPEN.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
This function (<code>ISOPEN</code>) is recommended for new application development. The older <code>FILEISOPEN</code> function, described in <a href="#i1009760">"Determining Whether a BFILE Is Open with FILEISOPEN"</a>, is not recommended for new development.</div>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#g1074815">Table 21-1, "Environments Supported for BFILE APIs"</a>, for a list of operations on <code>BFILE</code>s and APIs provided for each programmatic environment.</div>
<p class="subhead1"><a id="ADLOB45864"></a>Syntax</p>
<p>Use the following syntax references for each programmatic environment:</p>
<ul>
<li>
<p>PL/SQL (DBMS_LOB) <a class="olink ARPLS600" href="../../appdev.112/e40758/d_lob.htm#ARPLS600"><span class="italic">(Oracle Database PL/SQL Packages and Types Reference):</span></a> "DBMS_LOB" &mdash; ISOPEN</p>
</li>
<li>
<p>C (OCI) (<a class="olink LNOCI070" href="../../appdev.112/e10646/oci07lob.htm#LNOCI070"><span class="italic">Oracle Call Interface Programmer's Guide)</span></a>: Chapter 7, "LOB and File Operations" for usage notes. Chapter 16, section "LOB Functions" &mdash; <code>OCILobFileIsOpen()</code>.</p>
</li>
<li>
<p>COBOL (Pro*COBOL) <a class="olink LNPCB" href="../../appdev.112/e10826/toc.htm"><span class="italic">Pro*COBOL Programmer's Guide</span></a> for information on LOBs, usage notes on LOB Statements, and embedded SQL and precompiler directives &mdash; LOB DESCRIBE ... ISOPEN.</p>
</li>
<li>
<p>C/C++ (Pro*C/C++) (<a class="olink LNPCC017" href="../../appdev.112/e10825/pc_17obj.htm#LNPCC017"><span class="italic">Pro*C/C++ Programmer's Guide)</span></a>: "Large Objects (LOBs)", "LOB Statements", "Large Objects (LOBs)", "LOB Statements", "Embedded SQL Statements and Directives" &mdash; LOB DESCRIBE ... ISOPEN</p>
</li>
<li>
<p>COM (OO4O): <a class="olink OOFOL" href="../../win.112/e17727/toc.htm"><span class="italic">Oracle Objects for OLE Developer's Guide</span></a></p>
</li>
<li>
<p>Java (JDBC) <a class="olink JJDBC15000" href="../../java.112/e16548/oralob.htm#JJDBC15000"><span class="italic">(Oracle Database JDBC Developer's Guide and Reference):</span></a> "Working With LOBs and BFILEs" &mdash; Working with BFILEs.</p>
</li>
</ul>
<p class="subhead1"><a id="i1010300"></a><a id="ADLOB45865"></a>Examples</p>
<p>Examples are provided in the following programmatic environments:</p>
<ul>
<li>
<p>PL/SQL (DBMS_LOB): <code>fisopen.sql</code></p>
</li>
<li>
<p>OCI: <code>fisopen.c</code></p>
</li>
<li>
<p>COM (OO4O): <code>fisopen.bas</code></p>
</li>
<li>
<p>Java (JDBC): <code>fisopen.java</code></p>
</li>
</ul>
</div>
<!-- class="sect1" -->
<a id="i1009760"></a>
<div id="ADLOB1011" class="sect1">
<h2 class="sect1">Determining Whether a <a id="sthref1047"></a>BFILE Is Open with FILEISOPEN</h2>
<p>This section describes how to determine whether a <code>BFILE</code> is OPEN using the FILEISOPEN function.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
The <code>FILEISOPEN</code> function is not recommended for new application development. The <code>ISOPEN</code> function is recommended for new development. See <a href="#i1010795">Determining Whether a BFILE Is Open Using ISOPEN</a></div>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#g1074815">Table 21-1, "Environments Supported for BFILE APIs"</a>, for a list of operations on <code>BFILE</code>s and APIs provided for each programmatic environment.</div>
<p class="subhead1"><a id="ADLOB45866"></a>Usage Notes</p>
<p>While you can continue to use the older <code>FILEISOPEN</code> form, Oracle <span class="italic">strongly recommends</span> that you switch to using <code>ISOPEN</code>, because this facilitates future extensibility.</p>
<p class="subhead1"><a id="ADLOB45867"></a>Syntax</p>
<p>Use the following syntax references for each programmatic environment:</p>
<ul>
<li>
<p>PL/SQL(DBMS_LOB) <a class="olink ARPLS600" href="../../appdev.112/e40758/d_lob.htm#ARPLS600"><span class="italic">(Oracle Database PL/SQL Packages and Types Reference):</span></a> "DBMS_LOB" &mdash; FILEISOPEN</p>
</li>
<li>
<p>C (OCI) (<a class="olink LNOCI070" href="../../appdev.112/e10646/oci07lob.htm#LNOCI070"><span class="italic">Oracle Call Interface Programmer's Guide)</span></a>: Chapter 7, "LOB and File Operations" for usage notes. Chapter 16, section "LOB Functions" &mdash; <code>OCILobFileIsOpen()</code>.</p>
</li>
<li>
<p>COBOL (Pro*COBOL): A syntax reference is not applicable in this release.</p>
</li>
<li>
<p>C/C++ (Pro*C/C++): A syntax reference is not applicable in this release.</p>
</li>
<li>
<p>COM (OO4O): A syntax reference is not applicable in this release.</p>
</li>
<li>
<p>Java (JDBC) (<a class="olink JJDBC15000" href="../../java.112/e16548/oralob.htm#JJDBC15000"><span class="italic">Oracle Database JDBC Developer's Guide and Reference</span></a><span class="italic">)</span>: "Working With LOBs and BFILEs" &mdash; Working with BFILEs.</p>
</li>
</ul>
<p class="subhead1"><a id="ADLOB45868"></a>Scenario</p>
<p>These examples query whether a <code>BFILE</code> associated with <code>ad_graphic</code> is open.</p>
<p class="subhead1"><a id="ADLOB45869"></a>Examples</p>
<p>Examples are provided in the following programmatic environments:</p>
<ul>
<li>
<p>PL/SQL(DBMS_LOB): <code>ffisopen.sql</code></p>
</li>
<li>
<p>OCI: <code>ffisopen.c</code></p>
</li>
<li>
<p>Java (JDBC): <code>ffisopen.java</code></p>
</li>
</ul>
</div>
<!-- class="sect1" -->
<a id="i1010877"></a>
<div id="ADLOB45870" class="sect1">
<h2 class="sect1">Displaying BFILE Data</h2>
<p>This section describes how to display <code>BFILE</code> data.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#g1074815">Table 21-1, "Environments Supported for BFILE APIs"</a>, for a list of operations on <code>BFILE</code>s and APIs provided for each programmatic environment.</div>
<p class="subhead1"><a id="ADLOB45871"></a>Syntax</p>
<p>Use the following syntax references for each programmatic environment:</p>
<ul>
<li>
<p>PL/SQL (DBMS_LOB) <a class="olink ARPLS600" href="../../appdev.112/e40758/d_lob.htm#ARPLS600"><span class="italic">(Oracle Database PL/SQL Packages and Types Reference):</span></a> "DBMS_LOB" &mdash; READ. Chapter 29, "DBMS_OUTPUT" - PUT_LINE</p>
</li>
<li>
<p>C (OCI) (<a class="olink LNOCI070" href="../../appdev.112/e10646/oci07lob.htm#LNOCI070"><span class="italic">Oracle Call Interface Programmer's Guide)</span></a>: Chapter 7, "LOB and File Operations" for usage notes. Chapter 16, section "LOB Functions" &mdash; <code>OCILobFileOpen()</code>, <code>OCILobRead2()</code>.</p>
</li>
<li>
<p>COBOL (Pro*COBOL) <a class="olink LNPCB" href="../../appdev.112/e10826/toc.htm"><span class="italic">Pro*COBOL Programmer's Guide</span></a> for information on LOBs, usage notes on LOB Statements, and embedded SQL and precompiler directives &mdash; LOB READ, DISPLAY.</p>
</li>
<li>
<p>C/C++ (Pro*C/C++) (<a class="olink LNPCC017" href="../../appdev.112/e10825/pc_17obj.htm#LNPCC017"><span class="italic">Pro*C/C++ Programmer's Guide)</span></a>: "Large Objects (LOBs)", "LOB Statements" &mdash; READ</p>
</li>
<li>
<p>COM (OO4O): <a class="olink OOFOL" href="../../win.112/e17727/toc.htm"><span class="italic">Oracle Objects for OLE Developer's Guide</span></a></p>
</li>
<li>
<p>Java (JDBC) (<a class="olink JJDBC15000" href="../../java.112/e16548/oralob.htm#JJDBC15000"><span class="italic">Oracle Database JDBC Developer's Guide and Reference</span></a><span class="italic">)</span>: Chapter 7, "Working With LOBs and BFILEs" &mdash; Working with BFILEs.</p>
</li>
</ul>
<p class="subhead1"><a id="ADLOB45872"></a>Examples</p>
<p>Examples are provided in these programmatic environments:</p>
<ul>
<li>
<p>PL/SQL (DBMS_LOB): <code>fdisplay.sql</code></p>
</li>
<li>
<p>OCI: <code>fdisplay.c</code></p>
</li>
<li>
<p>Java (JDBC): <code>fdisplay.java</code></p>
</li>
</ul>
</div>
<!-- class="sect1" -->
<a id="i1011639"></a>
<div id="ADLOB45873" class="sect1">
<h2 class="sect1"><a id="sthref1048"></a>Reading Data from a BFILE</h2>
<p>This section describes how to read data from a <code>BFILE</code>.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#g1074815">Table 21-1, "Environments Supported for BFILE APIs"</a>, for a list of operations on <code>BFILE</code>s and APIs provided for each programmatic environment.</div>
<p class="subhead1"><a id="ADLOB45874"></a>Usage Notes</p>
<p>Note the following when using this operation.</p>
<p class="subhead2"><a id="ADLOB45875"></a>Streaming Read in OCI</p>
<p>The most efficient way to read large amounts of <code>BFILE</code> data is by <code><a id="sthref1049"></a>OCILobRead2()</code> with the streaming mechanism enabled, and using polling or callback. To do so, specify the starting point of the read using the <code>offset</code> parameter as follows:</p>
<pre>
ub8  char_amt =  0;
ub8  byte_amt =  0;
ub4  offset = 1000;

OCILobRead2(svchp, errhp, locp, &amp;byte_amt, &amp;char_amt, offset, bufp, bufl,
            OCI_ONE_PIECE, 0, 0, 0, 0);
</pre>
<p>When using <span class="italic"><a id="sthref1050"></a>polling mode</span>, be sure to look at the value of the <code>byte_amt</code> parameter after each <code>OCILobRead2()</code> call to see how many bytes were read into the buffer, because the buffer may not be entirely full.</p>
<p>When using <span class="italic"><a id="sthref1051"></a>callbacks</span>, the <code>lenp</code> parameter, which is input to the callback, indicates how many bytes are filled in the buffer. Be sure to check the <code>lenp</code> parameter during your callback processing because the entire buffer may not be filled with data (see the <a class="olink LNOCI" href="../e10646/toc.htm"><span class="italic">Oracle Call Interface Programmer's Guide</span></a><span class="italic">.</span>)</p>
<p class="subhead2"><a id="ADLOB45876"></a><a id="sthref1052"></a>Amount Parameter</p>
<ul>
<li>
<p>When calling <code><a id="sthref1053"></a>DBMS_LOB.READ</code>, the amount parameter can be larger than the size of the data; however, the amount parameter should be less than or equal to the size of the buffer. In PL/SQL, the buffer size is limited to 32K.</p>
</li>
<li>
<p>When calling <code><a id="sthref1054"></a>OCILobRead2()</code>, you can pass a value of 0 (zero) for the <code>byte_amt</code> parameter to read to the end of the <code>BFILE</code>.</p>
</li>
</ul>
<p class="subhead1"><a id="ADLOB45877"></a>Syntax</p>
<p>Use the following syntax references for each programmatic environment:</p>
<ul>
<li>
<p>PL/SQL (DBMS_LOB) <a class="olink ARPLS600" href="../../appdev.112/e40758/d_lob.htm#ARPLS600"><span class="italic">(Oracle Database PL/SQL Packages and Types Reference):</span></a> "DBMS_LOB" &mdash; READ</p>
</li>
<li>
<p>C (OCI) (<a class="olink LNOCI070" href="../../appdev.112/e10646/oci07lob.htm#LNOCI070"><span class="italic">Oracle Call Interface Programmer's Guide)</span></a>: Chapter 7, "LOB and File Operations" for usage notes. Chapter 16, section "LOB Functions" &mdash; <code>OCILobRead2()</code>.</p>
</li>
<li>
<p>COBOL (Pro*COBOL) <a class="olink LNPCB" href="../../appdev.112/e10826/toc.htm"><span class="italic">Pro*COBOL Programmer's Guide</span></a> for information on LOBs, usage notes on LOB Statements, and embedded SQL and precompiler directives &mdash; LOB READ.</p>
</li>
<li>
<p>C/C++ (Pro*C/C++) (<a class="olink LNPCC017" href="../../appdev.112/e10825/pc_17obj.htm#LNPCC017"><span class="italic">Pro*C/C++ Programmer's Guide)</span></a>: "Large Objects (LOBs)", "LOB Statements", "Embedded SQL Statements and Directives" &mdash; LOB READ</p>
</li>
<li>
<p>COM (OO4O): <a class="olink OOFOL" href="../../win.112/e17727/toc.htm"><span class="italic">Oracle Objects for OLE Developer's Guide</span></a></p>
</li>
<li>
<p>Java (JDBC) <a class="olink JJDBC15000" href="../../java.112/e16548/oralob.htm#JJDBC15000"><span class="italic">(Oracle Database JDBC Developer's Guide and Reference):</span></a> Chapter 7, "Working With LOBs and BFILEs" &mdash; Working with BFILEs.</p>
</li>
</ul>
<p class="subhead1"><a id="ADLOB45878"></a>Examples</p>
<p>Examples are provided in the following programmatic environments:</p>
<ul>
<li>
<p>PL/SQL (DBMS_LOB): <code>fread.sql</code></p>
</li>
<li>
<p>OCI: <code>fread.c</code></p>
</li>
<li>
<p>COM (OO4O): <code>fread.bas</code></p>
</li>
<li>
<p>Java (JDBC): <code>fread.java</code></p>
</li>
</ul>
</div>
<!-- class="sect1" -->
<a id="i1012332"></a>
<div id="ADLOB45879" class="sect1">
<h2 class="sect1">Reading a <a id="sthref1055"></a>Portion of BFILE Data Using SUBSTR</h2>
<p>This section describes how to read portion of <code>BFILE</code> data using <code>SUBSTR</code>.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#g1074815">Table 21-1, "Environments Supported for BFILE APIs"</a>, for a list of operations on <code>BFILE</code>s and APIs provided for each programmatic environment.</div>
<p class="subhead1"><a id="ADLOB45880"></a>Syntax</p>
<p>Use the following syntax references for each programmatic environment:</p>
<ul>
<li>
<p>PL/SQL (DBMS_LOB) <a class="olink ARPLS600" href="../../appdev.112/e40758/d_lob.htm#ARPLS600"><span class="italic">(Oracle Database PL/SQL Packages and Types Reference):</span></a> "DBMS_LOB" &mdash; SUBSTR</p>
</li>
<li>
<p>OCI: A syntax reference is not applicable in this release.</p>
</li>
<li>
<p>COBOL (Pro*COBOL) <a class="olink LNPCB" href="../../appdev.112/e10826/toc.htm"><span class="italic">Pro*COBOL Programmer's Guide</span></a> for information on LOBs, usage notes on LOB Statements, and embedded SQL and precompiler directives &mdash; LOB OPEN, LOB CLOSE. See PL/SQL DBMS_LOB.SUBSTR.</p>
</li>
<li>
<p>C/C++ (Pro*C/C++) (<a class="olink LNPCC017" href="../../appdev.112/e10825/pc_17obj.htm#LNPCC017"><span class="italic">Pro*C/C++ Programmer's Guide)</span></a>: "Large Objects (LOBs)", "LOB Statements", "Embedded SQL Statements and Directives" &mdash; LOB OPEN. See also PL/SQL DBMS_LOB.SUBSTR</p>
</li>
<li>
<p>COM (OO4O): <a class="olink OOFOL" href="../../win.112/e17727/toc.htm"><span class="italic">Oracle Objects for OLE Developer's Guide</span></a></p>
</li>
<li>
<p>Java (JDBC) <a class="olink JJDBC15000" href="../../java.112/e16548/oralob.htm#JJDBC15000"><span class="italic">(Oracle Database JDBC Developer's Guide and Reference)</span></a>: Chapter 7, "Working With LOBs and BFILEs" &mdash; Working with BFILEs.</p>
</li>
</ul>
<p class="subhead1"><a id="ADLOB45881"></a>Examples</p>
<p>Examples are provided in these five programmatic environments:</p>
<ul>
<li>
<p>PL/SQL (DBMS_LOB): <code>freadprt.sql</code></p>
</li>
<li>
<p>C (OCI): No example is provided with this release.</p>
</li>
<li>
<p>COM (OO4O): <code>freadprt.bas</code></p>
</li>
<li>
<p>Java (JDBC): <code>freadprt.java</code></p>
</li>
</ul>
</div>
<!-- class="sect1" -->
<a id="i1012821"></a>
<div id="ADLOB45882" class="sect1">
<h2 class="sect1">Comparing <a id="sthref1056"></a>All or Parts of Two BFILES</h2>
<p>This section describes how to compare all or parts of two <code>BFILE</code>s.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#g1074815">Table 21-1, "Environments Supported for BFILE APIs"</a>, for a list of operations on <code>BFILE</code>s and APIs provided for each programmatic environment.</div>
<p class="subhead1"><a id="ADLOB45883"></a>Syntax</p>
<p>Use the following syntax references for each programmatic environment:</p>
<ul>
<li>
<p>PL/SQL(DBMS_LOB) <a class="olink ARPLS600" href="../../appdev.112/e40758/d_lob.htm#ARPLS600"><span class="italic">(Oracle Database PL/SQL Packages and Types Reference):</span></a> "DBMS_LOB" &mdash; COMPARE</p>
</li>
<li>
<p>C (OCI): A syntax reference is not applicable in this release.</p>
</li>
<li>
<p>COBOL (Pro*COBOL) <a class="olink LNPCB" href="../../appdev.112/e10826/toc.htm"><span class="italic">Pro*COBOL Programmer's Guide</span></a> for information on LOBs, usage notes on LOB Statements, and embedded SQL and precompiler directives &mdash; LOB OPEN. See PL/SQL DBMS_LOB.COMPARE.</p>
</li>
<li>
<p>C/C++ (Pro*C/C++) (<a class="olink LNPCC017" href="../../appdev.112/e10825/pc_17obj.htm#LNPCC017"><span class="italic">Pro*C/C++ Programmer's Guide)</span></a>: "Large Objects (LOBs)", "LOB Statements", "Embedded SQL Statements and Directives" &mdash; LOB OPEN. See PL/SQL DBMS_LOB.COMPARE.</p>
</li>
<li>
<p>COM (OO4O): <a class="olink OOFOL" href="../../win.112/e17727/toc.htm"><span class="italic">Oracle Objects for OLE Developer's Guide</span></a></p>
</li>
<li>
<p>Java (JDBC) <a class="olink JJDBC15000" href="../../java.112/e16548/oralob.htm#JJDBC15000"><span class="italic">(Oracle Database JDBC Developer's Guide and Reference):</span></a> "Working With LOBs and BFILEs" &mdash; Working with BFILEs.</p>
</li>
</ul>
<p class="subhead1"><a id="ADLOB45884"></a>Examples</p>
<p>Examples are provided in these five programmatic environments:</p>
<ul>
<li>
<p>PL/SQL(DBMS_LOB): <code>fcompare.sql</code></p>
</li>
<li>
<p>OCI: No example is provided with this release.</p>
</li>
<li>
<p>COM (OO4O): <code>fcompare.bas</code></p>
</li>
<li>
<p>Java (JDBC): <code>fcompare.java</code></p>
</li>
</ul>
</div>
<!-- class="sect1" -->
<a id="i1013414"></a>
<div id="ADLOB45885" class="sect1">
<h2 class="sect1">Checking If a <a id="sthref1057"></a>Pattern Exists in a BFILE Using INSTR</h2>
<p>This section describes how to determine whether a pattern exists in a <code>BFILE</code> using <code>INSTR</code>.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#g1074815">Table 21-1, "Environments Supported for BFILE APIs"</a>, for a list of operations on <code>BFILE</code>s and APIs provided for each programmatic environment.</div>
<p class="subhead1"><a id="ADLOB45886"></a>Syntax</p>
<p>Use the following syntax references for each programmatic environment:</p>
<ul>
<li>
<p>PL/SQL (DBMS_LOB) <a class="olink ARPLS600" href="../../appdev.112/e40758/d_lob.htm#ARPLS600"><span class="italic">(Oracle Database PL/SQL Packages and Types Reference):</span></a> "DBMS_LOB" &mdash; INSTR</p>
</li>
<li>
<p>C (OCI): A syntax reference is not applicable in this release.</p>
</li>
<li>
<p>COBOL (Pro*COBOL) <a class="olink LNPCB" href="../../appdev.112/e10826/toc.htm"><span class="italic">Pro*COBOL Programmer's Guide</span></a> for information on LOBs, usage notes on LOB Statements, and embedded SQL and precompiler directives &mdash; LOB OPEN. See PL/SQL DBMS_LOB.INSTR.</p>
</li>
<li>
<p>C/C++ (Pro*C/C++) (<a class="olink LNPCC017" href="../../appdev.112/e10825/pc_17obj.htm#LNPCC017"><span class="italic">Pro*C/C++ Programmer's Guide)</span></a>: "Large Objects (LOBs)", "LOB Statements", "Embedded SQL Statements and Directives" &mdash; LOB OPEN. See PL/SQL DBMS_LOB.INSTR.</p>
</li>
<li>
<p>COM (OO4O): A syntax reference is not applicable in this release.</p>
</li>
<li>
<p>Java (JDBC) <a class="olink JJDBC15000" href="../../java.112/e16548/oralob.htm#JJDBC15000"><span class="italic">(Oracle Database JDBC Developer's Guide and Reference):</span></a>"Working With LOBs and BFILEs" &mdash; Working with BFILEs.</p>
</li>
</ul>
<p class="subhead1"><a id="ADLOB45887"></a>Examples</p>
<p>These examples are provided in the following four programmatic environments:</p>
<ul>
<li>
<p>PL/SQL (DBMS_LOB): <code>fpattern.sql</code></p>
</li>
<li>
<p>OCI: No example is provided with this release.</p>
</li>
<li>
<p>COM (OO4O): No example is provided with this release.</p>
</li>
<li>
<p>Java (JDBC): <code>fpattern.java</code></p>
</li>
</ul>
</div>
<!-- class="sect1" -->
<a id="i1013913"></a>
<div id="ADLOB1009" class="sect1">
<h2 class="sect1">Determining Whether a <a id="sthref1058"></a>BFILE Exists</h2>
<p>This procedure determines whether a <code>BFILE</code> locator points to a valid <code>BFILE</code> instance.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#g1074815">Table 21-1, "Environments Supported for BFILE APIs"</a>, for a list of operations on <code>BFILE</code>s and APIs provided for each programmatic environment.</div>
<p class="subhead1"><a id="ADLOB45888"></a>Syntax</p>
<p>Use the following syntax references for each programmatic environment:</p>
<ul>
<li>
<p>PL/SQL (DBMS_LOB) <a class="olink ARPLS600" href="../../appdev.112/e40758/d_lob.htm#ARPLS600"><span class="italic">Oracle Database PL/SQL Packages and Types Reference):</span></a> "DBMS_LOB" &mdash; FILEEXISTS</p>
</li>
<li>
<p>C (OCI) <a class="olink LNOCI070" href="../../appdev.112/e10646/oci07lob.htm#LNOCI070"><span class="italic">Oracle Call Interface Programmer's Guide)</span></a>: Chapter 7, "LOB and File Operations" for usage notes. Chapter 16, section "LOB Functions" &mdash; <code>OCILobFileExists()</code>.</p>
</li>
<li>
<p>COBOL (Pro*COBOL) <a class="olink LNPCB" href="../../appdev.112/e10826/toc.htm"><span class="italic">Pro*COBOL Programmer's Guide</span></a> for information on LOBs, usage notes on LOB Statements, and embedded SQL and precompiler directives &mdash; LOB DESCRIBE ... FILEEXISTS.</p>
</li>
<li>
<p>C/C++ (Pro*C/C++) <a class="olink LNPCC017" href="../../appdev.112/e10825/pc_17obj.htm#LNPCC017"><span class="italic">Pro*C/C++ Programmer's Guide)</span></a>: "Large Objects (LOBs)", "LOB Statements", "Embedded SQL Statements and Directives" &mdash; LOB DESCRIBE ... GET FILEEXISTS</p>
</li>
<li>
<p>COM (OO4O): <a class="olink OOFOL" href="../../win.112/e17727/toc.htm"><span class="italic">Oracle Objects for OLE Developer's Guide</span></a></p>
</li>
<li>
<p>Java (JDBC) <a class="olink JJDBC15000" href="../../java.112/e16548/oralob.htm#JJDBC15000"><span class="italic">Oracle Database JDBC Developer's Guide and Reference:</span></a> "Working With LOBs and BFILEs" &mdash; Working with BFILEs.</p>
</li>
</ul>
<p class="subhead1"><a id="ADLOB45889"></a>Examples</p>
<p>The examples are provided in the following programmatic environments:</p>
<ul>
<li>
<p>PL/SQL (DBMS_LOB): <code>fexists.sql</code></p>
</li>
<li>
<p>OCI: <code>fexists.c</code></p>
</li>
<li>
<p>COM (OO4O): <code>fexists.bas</code></p>
</li>
<li>
<p>Java (JDBC): <code>fexists.java</code></p>
</li>
</ul>
</div>
<!-- class="sect1" -->
<a id="i1014616"></a>
<div id="ADLOB45890" class="sect1">
<h2 class="sect1"><a id="sthref1059"></a>Getting the <a id="sthref1060"></a>Length of a BFILE</h2>
<p>This section describes how to get the length of a <code>BFILE</code>.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#g1074815">Table 21-1, "Environments Supported for BFILE APIs"</a>, for a list of operations on <code>BFILE</code>s and APIs provided for each programmatic environment.</div>
<p class="subhead1"><a id="ADLOB45891"></a>Syntax</p>
<p>Use the following syntax references for each programmatic environment:</p>
<ul>
<li>
<p>PL/SQL (DBMS_LOB) <a class="olink ARPLS600" href="../../appdev.112/e40758/d_lob.htm#ARPLS600"><span class="italic">(Oracle Database PL/SQL Packages and Types Reference):</span></a> "DBMS_LOB" <span class="italic">&mdash;</span> GETLENGTH</p>
</li>
<li>
<p>C (OCI) (<a class="olink LNOCI070" href="../../appdev.112/e10646/oci07lob.htm#LNOCI070"><span class="italic">Oracle Call Interface Programmer's Guide)</span></a>: Chapter 7, "LOB and File Operations". Chapter 16, section "LOB Functions" &mdash; <code>OCILobGetLength2()</code>.</p>
</li>
<li>
<p>COBOL (Pro*COBOL) <a class="olink LNPCB" href="../../appdev.112/e10826/toc.htm"><span class="italic">Pro*COBOL Programmer's Guide</span></a> for information on LOBs, usage notes on LOB Statements, and embedded SQL and precompiler directives &mdash; LOB DESCRIBE ... GET LENGTH INTO ...</p>
</li>
<li>
<p>C/C++ (Pro*C/C++) (<a class="olink LNPCC017" href="../../appdev.112/e10825/pc_17obj.htm#LNPCC017"><span class="italic">Pro*C/C++ Programmer's Guide)</span></a>: "Large Objects (LOBs)", "LOB Statements", "Embedded SQL Statements and Directives" &mdash; LOB DESCRIBE ... GET LENGTH INTO ...</p>
</li>
<li>
<p>COM (OO4O): <a class="olink OOFOL" href="../../win.112/e17727/toc.htm"><span class="italic">Oracle Objects for OLE Developer's Guide</span></a></p>
</li>
<li>
<p>Java (JDBC) <a class="olink JJDBC15000" href="../../java.112/e16548/oralob.htm#JJDBC15000"><span class="italic">Oracle Database JDBC Developer's Guide and Reference</span></a>: "Working With LOBs and BFILEs" &mdash; Working with BFILEs.</p>
</li>
</ul>
<p class="subhead1"><a id="ADLOB45892"></a>Examples</p>
<p>The examples are provided in these programmatic environments:</p>
<ul>
<li>
<p>PL/SQL (DBMS_LOB): <code>flength.sql</code></p>
</li>
<li>
<p>OCI: <code>flength.c</code></p>
</li>
<li>
<p>COM (OO4O): <code>flength.bas</code></p>
</li>
<li>
<p>Java (JDBC): <code>flength.java</code></p>
</li>
</ul>
</div>
<!-- class="sect1" -->
<a id="i1015218"></a>
<div id="ADLOB45893" class="sect1">
<h2 class="sect1">Assigning a <a id="sthref1061"></a>BFILE Locator</h2>
<p>This section describes how to assign one <code>BFILE</code> locator to another.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#g1074815">Table 21-1, "Environments Supported for BFILE APIs"</a>, for a list of operations on <code>BFILE</code>s and APIs provided for each programmatic environment.</div>
<p class="subhead1"><a id="ADLOB45894"></a>Syntax</p>
<p>Use the following syntax references for each programmatic environment:</p>
<ul>
<li>
<p>SQL <a class="olink SQLRF013" href="../../server.112/e41084/statements_6.htm#SQLRF013"><span class="italic">(Oracle Database SQL Language Reference):</span></a> Chapter 7, "SQL Statements" <span class="italic">&mdash;</span> CREATE PROCEDURE</p>
</li>
<li>
<p>PL/SQL (DBMS_LOB): Refer to <a href="adlob_design.htm#g1027057">Chapter 12, "Advanced Design Considerations"</a> of this manual for information on assigning one lob locator to another.</p>
</li>
<li>
<p>C (OCI) (<a class="olink LNOCI070" href="../../appdev.112/e10646/oci07lob.htm#LNOCI070"><span class="italic">Oracle Call Interface Programmer's Guide)</span></a>: Chapter 7, "LOB and File Operations" for usage notes. Chapter 16, section "LOB Functions" &mdash; <code>OCILobLocatorAssign()</code>.</p>
</li>
<li>
<p>COBOL (Pro*COBOL) <a class="olink LNPCB" href="../../appdev.112/e10826/toc.htm"><span class="italic">Pro*COBOL Programmer's Guide</span></a> for information on LOBs, usage notes on LOB Statements, and embedded SQL and precompiler directives &mdash; LOB ASSIGN</p>
</li>
<li>
<p>C/C++ (Pro*C/C++) (<a class="olink LNPCC017" href="../../appdev.112/e10825/pc_17obj.htm#LNPCC017"><span class="italic">Pro*C/C++ Programmer's Guide)</span></a>: "Large Objects (LOBs)", "LOB Statements", "Embedded SQL Statements and Directives" &mdash; LOB ASSIGN</p>
</li>
<li>
<p>COM (OO4O): A syntax reference is not applicable in this release.</p>
</li>
<li>
<p>Java (JDBC<a class="olink JJDBC15000" href="../../java.112/e16548/oralob.htm#JJDBC15000"><span class="italic">) Oracle Database JDBC Developer's Guide and Reference:</span></a> "Working With LOBs and BFILEs" &mdash; Working with BFILEs.</p>
</li>
</ul>
<p class="subhead1"><a id="ADLOB45895"></a>Examples</p>
<p>The examples are provided in the following five programmatic environments:</p>
<ul>
<li>
<p>PL/SQL (DBMS_LOB): <code>fcopyloc.sql</code></p>
</li>
<li>
<p>OCI: <code>fcopyloc.c</code></p>
</li>
<li>
<p>COM: An example is not provided with this release.</p>
</li>
<li>
<p>Java (JDBC): <code>fcopyloc.java</code></p>
</li>
</ul>
</div>
<!-- class="sect1" -->
<a id="i1015743"></a>
<div id="ADLOB1010" class="sect1">
<h2 class="sect1">Getting <a id="sthref1062"></a>Directory Object Name and File Name of a BFILE</h2>
<p>This section describes how to get the <code>DIRECTORY</code> object name and file name of a <code>BFILE</code>.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#g1074815">Table 21-1, "Environments Supported for BFILE APIs"</a>, for a list of operations on <code>BFILE</code>s and APIs provided for each programmatic environment.</div>
<p class="subhead1"><a id="ADLOB45896"></a>Syntax</p>
<p>Use the following syntax references for each programmatic environment:</p>
<ul>
<li>
<p>PL/SQL (DBMS_LOB) <a class="olink ARPLS600" href="../../appdev.112/e40758/d_lob.htm#ARPLS600"><span class="italic">(Oracle Database PL/SQL Packages and Types Reference):</span></a> "DBMS_LOB" <span class="italic">&mdash;</span> FILEGETNAME</p>
</li>
<li>
<p>C (OCI) (<a class="olink LNOCI070" href="../../appdev.112/e10646/oci07lob.htm#LNOCI070"><span class="italic">Oracle Call Interface Programmer's Guide)</span></a>: Chapter 7, "LOB and File Operations" for usage notes. Chapter 16, section "LOB Functions" &mdash; <code>OCILobFileGetName()</code>.</p>
</li>
<li>
<p>COBOL (Pro*COBOL) <a class="olink LNPCB" href="../../appdev.112/e10826/toc.htm"><span class="italic">Pro*COBOL Programmer's Guide</span></a> for information on LOBs, usage notes on LOB Statements, and embedded SQL and precompiler directives &mdash; LOB DESCRIBE ... GET DIRECTORY ...</p>
</li>
<li>
<p>C/C++ (Pro*C/C++) (<a class="olink LNPCC017" href="../../appdev.112/e10825/pc_17obj.htm#LNPCC017"><span class="italic">Pro*C/C++ Programmer's Guide)</span></a>: "Large Objects (LOBs)", "LOB Statements", "Embedded SQL Statements and Directives" &mdash; LOB DESCRIBE ... GET DIRECTORY ...</p>
</li>
<li>
<p>COM (OO4O): <a class="olink OOFOL" href="../../win.112/e17727/toc.htm"><span class="italic">Oracle Objects for OLE Developer's Guide</span></a></p>
</li>
<li>
<p>Java (JDBC) <a class="olink JJDBC15000" href="../../java.112/e16548/oralob.htm#JJDBC15000"><span class="italic">Oracle Database JDBC Developer's Guide and Reference:</span></a> "Working With LOBs and BFILEs" &mdash; Working with BFILEs.</p>
</li>
</ul>
<p class="subhead1"><a id="ADLOB45897"></a>Examples</p>
<p>Examples of this procedure are provided in the following programmatic environments:</p>
<ul>
<li>
<p>PL/SQL (DBMS_LOB): <code>fgetdir.sql</code></p>
</li>
<li>
<p>OCI: <code>fgetdir.c</code></p>
</li>
<li>
<p>COM (OO4O): <code>fgetdir.bas</code></p>
</li>
<li>
<p>Java (JDBC): <code>fgetdir.java</code></p>
</li>
</ul>
</div>
<!-- class="sect1" -->
<a id="i1016310"></a>
<div id="ADLOB45898" class="sect1">
<h2 class="sect1">Updating a BFILE by Initializing a BFILE Locator</h2>
<p>This section describes how to update a <code>BFILE</code> by initializing a <code>BFILE</code> locator.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#g1074815">Table 21-1, "Environments Supported for BFILE APIs"</a>, for a list of operations on <code>BFILE</code>s and APIs provided for each programmatic environment.</div>
<p class="subhead1"><a id="ADLOB45899"></a>Syntax</p>
<p>Use the following syntax references for each programmatic environment:</p>
<ul>
<li>
<p>PL/SQL (DBMS_LOB): See the <a class="olink SQLRF017" href="../../server.112/e41084/statements_10.htm#SQLRF017"><span class="italic">(Oracle Database SQL Language Reference),</span></a> Chapter 7, "SQL Statements" <span class="italic">&mdash;</span> UPDATE</p>
</li>
<li>
<p>C (OCI) (<a class="olink LNOCI070" href="../../appdev.112/e10646/oci07lob.htm#LNOCI070"><span class="italic">Oracle Call Interface Programmer's Guide)</span></a>: Chapter 7, "LOB and File Operations" for usage notes. Chapter 16, section "LOB Functions" &mdash; <code>OCILobFileSetName()</code>.</p>
</li>
<li>
<p>COBOL (Pro*COBOL) <a class="olink LNPCB" href="../../appdev.112/e10826/toc.htm"><span class="italic">Pro*COBOL Programmer's Guide</span></a> for information on LOBs, usage notes on LOB Statements, and embedded SQL and precompiler directives &mdash; ALLOCATE. See also <a class="olink ARPLS" href="../e40758/toc.htm"><span class="italic">(Oracle Database SQL Language Reference), Chapter 7, "SQL Statements" &mdash;</span></a> UPDATE</p>
</li>
<li>
<p>C/C++ (Pro*C/C++) (<a class="olink LNPCC017" href="../../appdev.112/e10825/pc_17obj.htm#LNPCC017"><span class="italic">Pro*C/C++ Programmer's Guide)</span></a>: "Large Objects (LOBs)", "LOB Statements", "Embedded SQL Statements and Directives". See also <a class="olink ARPLS" href="../e40758/toc.htm"><span class="italic">(Oracle Database SQL Language Reference), Chapter 7, "SQL Statements" &mdash;</span></a> UPDATE</p>
</li>
<li>
<p>COM (OO4O): <a class="olink OOFOL" href="../../win.112/e17727/toc.htm"><span class="italic">Oracle Objects for OLE Developer's Guide</span></a></p>
</li>
<li>
<p>Topics, Contents tab, select OO4O Automation Server &gt; OBJECTS &gt; OraBFILE &gt; PROPERTIES &gt; DirectoryName, FileName, and OO4O Automation Server &gt; OBJECTS &gt; OraDatabase &gt; METHODS &gt; ExecuteSQL. See also OO4O Automation Server &gt; OBJECTS &gt; OraBfile &gt; Examples</p>
</li>
<li>
<p>Java (JDBC) <a class="olink JJDBC15000" href="../../java.112/e16548/oralob.htm#JJDBC15000"><span class="italic">Oracle Database JDBC Developer's Guide and Reference:</span></a> "Working With LOBs and BFILEs" &mdash; Working with BFILEs.</p>
</li>
</ul>
<p class="subhead1"><a id="ADLOB45900"></a>Examples</p>
<p>The examples are provided in these programmatic environments:</p>
<ul>
<li>
<p>PL/SQL (DBMS_LOB): <code>fupdate.sql</code></p>
</li>
<li>
<p>OCI: <code>fupdate.c</code></p>
</li>
<li>
<p>COM (OO4O): <code>fupdate.bas</code></p>
</li>
<li>
<p>Java (JDBC): <code>fupdate.java</code></p>
</li>
</ul>
</div>
<!-- class="sect1" -->
<a id="i1016914"></a>
<div id="ADLOB1007" class="sect1">
<h2 class="sect1">Closing a <a id="sthref1063"></a>BFILE with FILECLOSE</h2>
<p>This section describes how to close a <code>BFILE</code> with <code>FILECLOSE</code>.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
This function (<code>FILECLOSE</code>) is not recommended for new development. For new development, use the <code>CLOSE</code> function instead. See <a href="#i1017271">"Closing a BFILE with CLOSE"</a> for more information.</div>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#g1074815">Table 21-1, "Environments Supported for BFILE APIs"</a>, for a list of operations on <code>BFILE</code>s and APIs provided for each programmatic environment.</div>
<p class="subhead1"><a id="ADLOB45901"></a>Syntax</p>
<p>Use the following syntax references for each programmatic environment:</p>
<ul>
<li>
<p>PL/SQL (DBMS_LOB)<a class="olink ARPLS600" href="../../appdev.112/e40758/d_lob.htm#ARPLS600"><span class="italic">(Oracle Database PL/SQL Packages and Types Reference):</span></a> "DBMS_LOB" &mdash; FILEOPEN, FILECLOSE</p>
</li>
<li>
<p>C (OCI) (<a class="olink LNOCI070" href="../../appdev.112/e10646/oci07lob.htm#LNOCI070"><span class="italic">Oracle Call Interface Programmer's Guide)</span></a>: Chapter 7, "LOB and File Operations" for usage notes. Chapter 16, section "LOB Functions" &mdash; <code>OCILobFileClose()</code>.</p>
</li>
<li>
<p>COBOL (Pro*COBOL): A syntax reference is not applicable in this release.</p>
</li>
<li>
<p>C/C++ (Pro*C/C++): A syntax reference is not applicable in this release.</p>
</li>
<li>
<p>COM (OO4O): A syntax reference is not applicable in this release.</p>
</li>
<li>
<p>Java (JDBC<a class="olink JJDBC15000" href="../../java.112/e16548/oralob.htm#JJDBC15000"><span class="italic">) Oracle Database JDBC Developer's Guide and Reference:</span></a> "Working With LOBs and BFILEs" &mdash; Working with BFILEs.</p>
</li>
</ul>
<p class="subhead1"><a id="ADLOB45902"></a>Examples</p>
<ul>
<li>
<p>PL/SQL (DBMS_LOB): <code>fclose_f.sql</code></p>
</li>
<li>
<p>OCI: <code>fclose_f.c</code></p>
</li>
<li>
<p>COM (OO4O): This operation is not supported in COM. Instead use <a href="#i1017271">"Closing a BFILE with CLOSE"</a> as described .</p>
</li>
<li>
<p>Java (JDBC): <code>fclose_f.java</code></p>
</li>
</ul>
</div>
<!-- class="sect1" -->
<a id="i1017271"></a>
<div id="ADLOB45903" class="sect1">
<h2 class="sect1">Closing a <a id="sthref1064"></a>BFILE with CLOSE</h2>
<p>This section describes how to close a <code>BFILE</code> with the <code>CLOSE</code> function.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
This function (<code>CLOSE</code>) is recommended for new application development. The older <code>FILECLOSE</code> function, is not recommended for new development.</div>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#g1074815">Table 21-1, "Environments Supported for BFILE APIs"</a>, for a list of operations on <code>BFILE</code>s and APIs provided for each programmatic environment.</div>
<p class="subhead1"><a id="ADLOB45904"></a>Usage Notes</p>
<p>Opening and closing a <code>BFILE</code> is mandatory. You must close the instance later in the session.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="#i1008227">Opening a BFILE with OPEN</a></p>
</li>
<li>
<p><a href="#i1010795">Determining Whether a BFILE Is Open Using ISOPEN</a></p>
</li>
</ul>
</div>
<p class="subhead1"><a id="ADLOB45905"></a>Syntax</p>
<p>Use the following syntax references for each programmatic environment:</p>
<ul>
<li>
<p>PL/SQL (DBMS_LOB) <a class="olink ARPLS600" href="../../appdev.112/e40758/d_lob.htm#ARPLS600"><span class="italic">(Oracle Database PL/SQL Packages and Types Reference):</span></a> "DBMS_LOB" &mdash; CLOSE</p>
</li>
<li>
<p>C (OCI) (<a class="olink LNOCI070" href="../../appdev.112/e10646/oci07lob.htm#LNOCI070"><span class="italic">Oracle Call Interface Programmer's Guide)</span></a>: Chapter 7, "LOB and File Operations" for usage notes. Chapter 16, section "LOB Functions" &mdash; <code>OCILobClose()</code>.</p>
</li>
<li>
<p>COBOL (Pro*COBOL) <a class="olink LNPCB" href="../../appdev.112/e10826/toc.htm"><span class="italic">Pro*COBOL Programmer's Guide</span></a> for information on LOBs, usage notes on LOB Statements, and embedded SQL and precompiler directives &mdash; LOB CLOSE</p>
</li>
<li>
<p>C/C++ (Pro*C/C++) (<a class="olink LNPCC017" href="../../appdev.112/e10825/pc_17obj.htm#LNPCC017"><span class="italic">Pro*C/C++ Programmer's Guide)</span></a>: "Large Objects (LOBs)", "LOB Statements", "Embedded SQL Statements and Directives" &mdash; LOB CLOSE</p>
</li>
<li>
<p>COM (OO4O: <a class="olink OOFOL" href="../../win.112/e17727/toc.htm"><span class="italic">Oracle Objects for OLE Developer's Guide</span></a></p>
</li>
<li>
<p>Java (JDBC) <a class="olink JJDBC15000" href="../../java.112/e16548/oralob.htm#JJDBC15000"><span class="italic">Oracle Database JDBC Developer's Guide and Reference:</span></a> "Working With LOBs and BFILEs" &mdash; Working with BFILEs.</p>
</li>
</ul>
<p class="subhead1"><a id="ADLOB45906"></a>Examples</p>
<ul>
<li>
<p>PL/SQL (DBMS_LOB): <code>fclose_c.sql</code></p>
</li>
<li>
<p>OCI: <code>fclose_c.c</code></p>
</li>
<li>
<p>COM (OO4O): <code>fclose_c.bas</code></p>
</li>
<li>
<p>Java (JDBC): <code>fclose_c.java</code></p>
</li>
</ul>
</div>
<!-- class="sect1" -->
<a id="i1017971"></a>
<div id="ADLOB1008" class="sect1">
<h2 class="sect1">Closing All <a id="sthref1065"></a>Open BFILEs with FILECLOSEALL</h2>
<p>This section describes how to close all open <code>BFILE</code>s.</p>
<p>You are responsible for closing any <code>BFILE</code> instances before your program terminates. For example, you must close any open <code>BFILE</code> instance before the termination of a PL/SQL block or OCI program.</p>
<p>You must close open BFILE instances even in cases where an exception or unexpected termination of your application occurs. In these cases, if a <code>BFILE</code> instance is not closed, then it is still considered open by the database. Ensure that your exception handling strategy does not allow BFILE instances to remain open in these situations.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="#g1074815">Table 21-1, "Environments Supported for BFILE APIs"</a>, for a list of operations on <code>BFILE</code>s and APIs provided for each programmatic environment.</p>
</li>
<li>
<p><a href="adlob_managing.htm#i1006564">"Setting Maximum Number of Open BFILEs"</a></p>
</li>
</ul>
</div>
<p class="subhead1"><a id="ADLOB45907"></a>Syntax</p>
<p>Use the following syntax references for each programmatic environment:</p>
<ul>
<li>
<p>PL/SQL (DBMS_LOB) <a class="olink ARPLS600" href="../../appdev.112/e40758/d_lob.htm#ARPLS600"><span class="italic">(Oracle Database PL/SQL Packages and Types Reference):</span></a> "DBMS_LOB" <span class="italic">&mdash;</span> FILECLOSEALL</p>
</li>
<li>
<p>C (OCI) (<a class="olink LNOCI070" href="../../appdev.112/e10646/oci07lob.htm#LNOCI070"><span class="italic">Oracle Call Interface Programmer's Guide)</span></a>: Chapter 7, "LOB and File Operations" for usage notes. Chapter 16, section "LOB Functions" &mdash; <code>OCILobFileCloseAll()</code>.</p>
</li>
<li>
<p>COBOL (Pro*COBOL) <a class="olink LNPCB" href="../../appdev.112/e10826/toc.htm"><span class="italic">Pro*COBOL Programmer's Guide</span></a> for information on LOBs, usage notes on LOB Statements, and embedded SQL and precompiler directives &mdash; LOB FILE CLOSE ALL</p>
</li>
<li>
<p>C/C++ (Pro*C/C++) (<a class="olink LNPCC017" href="../../appdev.112/e10825/pc_17obj.htm#LNPCC017"><span class="italic">Pro*C/C++ Programmer's Guide)</span></a>: "Large Objects (LOBs)", "LOB Statements", "Embedded SQL Statements and Directives" &mdash; LOB FILE CLOSE ALL</p>
</li>
<li>
<p>COM (OO4O): <a class="olink OOFOL" href="../../win.112/e17727/toc.htm"><span class="italic">Oracle Objects for OLE Developer's Guide</span></a></p>
</li>
<li>
<p>Java (JDBC) <a class="olink JJDBC15000" href="../../java.112/e16548/oralob.htm#JJDBC15000"><span class="italic">Oracle Database JDBC Developer's Guide and Reference:</span></a> Chapter 7, "Working With LOBs and BFILEs" &mdash; Working with BFILEs.</p>
</li>
</ul>
<p class="subhead1"><a id="ADLOB45908"></a>Examples</p>
<ul>
<li>
<p>PL/SQL (DBMS_LOB): <code>fclosea.sql</code></p>
</li>
<li>
<p>OCI: <code>fclosea.c</code></p>
</li>
<li>
<p>COM (OO4O): <code>fclosea.bas</code></p>
</li>
<li>
<p>Java (JDBC): <code>fclosea.java</code></p>
</li>
</ul>
</div>
<!-- class="sect1" -->
<a id="i1018688"></a>
<div id="ADLOB45909" class="sect1">
<h2 class="sect1">Inserting a <a id="sthref1066"></a>Row Containing a BFILE</h2>
<p>This section describes how to insert a row containing a <code>BFILE</code> by initializing a <code>BFILE</code> locator.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="#g1074815">Table 21-1, "Environments Supported for BFILE APIs"</a>, for a list of operations on <code>BFILE</code>s and APIs provided for each programmatic environment.</p>
</li>
</ul>
</div>
<p class="subhead1"><a id="ADLOB45910"></a>Usage Notes</p>
<p>You must initialize the <code>BFILE</code> locator bind variable to <code>NULL</code> or a <code>DIRECTORY</code> object and file name before issuing the <code>INSERT</code> statement.</p>
<p class="subhead1"><a id="ADLOB45911"></a>Syntax</p>
<p>See the following syntax references for each programmatic environment:</p>
<ul>
<li>
<p>SQL(<a class="olink SQLRF016" href="../../server.112/e41084/statements_9.htm#SQLRF016"><span class="italic">Oracle Database SQL Language Reference</span></a>, Chapter 7 "SQL Statements" &mdash; INSERT</p>
</li>
<li>
<p>C (OCI) <a class="olink LNOCI070" href="../../appdev.112/e10646/oci07lob.htm#LNOCI070"><span class="italic">Oracle Call Interface Programmer's Guide</span></a>: Chapter 7, "LOB and File Operations".</p>
</li>
<li>
<p>COBOL (Pro*COBOL) <a class="olink LNPCB" href="../../appdev.112/e10826/toc.htm"><span class="italic">Pro*COBOL Programmer's Guide</span></a> for information on LOBs, usage notes on LOB Statements, embedded SQL, and precompiler directives. See also <a class="olink SQLRF016" href="../../server.112/e41084/statements_9.htm#SQLRF016"><span class="italic">Oracle Database SQL Language Reference</span></a>, for related information on the SQL INSERT statement.</p>
</li>
<li>
<p>C/C++ (Pro*C/C++) <a class="olink LNPCC017" href="../../appdev.112/e10825/pc_17obj.htm#LNPCC017"><span class="italic">Pro*C/C++ Programmer's Guide</span></a>: "Large Objects (LOBs)", "LOB Statements", "Embedded SQL Statements and Directives" &mdash; LOB FILE SET. See also (<a class="olink SQLRF016" href="../../server.112/e41084/statements_9.htm#SQLRF016"><span class="italic">Oracle Database SQL Language Reference</span></a>), Chapter 7 "SQL Statements" &mdash; INSERT</p>
</li>
<li>
<p>COM (OO4O): <a class="olink OOFOL" href="../../win.112/e17727/toc.htm"><span class="italic">Oracle Objects for OLE Developer's Guide</span></a></p>
</li>
<li>
<p>Java (JDBC) <a class="olink JJDBC15000" href="../../java.112/e16548/oralob.htm#JJDBC15000"><span class="italic">Oracle Database JDBC Developer's Guide and Reference</span></a>: "Working With LOBs and BFILEs" &mdash; Working with BFILEs.</p>
</li>
</ul>
<p class="subhead1"><a id="ADLOB45912"></a>Examples</p>
<p>Examples in the following programmatic environments are provided:</p>
<ul>
<li>
<p>PL/SQL (DBMS_LOB): <code>finsert.sql</code></p>
</li>
<li>
<p>OCI: <code>finsert.c</code></p>
</li>
<li>
<p>COM (OO4O): <code>finsert.bas</code></p>
</li>
<li>
<p>Java (JDBC): <code>finsert.java</code></p>
</li>
</ul>
</div>
<!-- class="sect1" --></div>
<!-- class="chapter" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment898">
<tr>
<td class="cellalignment907">
<table class="cellalignment903">
<tr>
<td class="cellalignment902"><a href="adlob_data_interface.htm"><img width="24" height="24" src="../../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment902"><a href="adlob_lob_ops.htm"><img width="24" height="24" src="../../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;1996, 2013,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment909">
<table class="cellalignment901">
<tr>
<td class="cellalignment902"><a href="../../index.htm"><img width="24" height="24" src="../../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment902"><a href="../../nav/portal_booklist.htm"><img width="24" height="24" src="../../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment902"><a href="toc.htm"><img width="24" height="24" src="../../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment902"><a href="index.htm"><img width="24" height="24" src="../../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment902"><a href="../../nav/mindx.htm"><img width="24" height="24" src="../../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment902"><a href="../../dcommon/html/feedback.htm"><img width="24" height="24" src="../../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>
</body>
</html>
