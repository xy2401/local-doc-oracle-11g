<!DOCTYPE html>
<html lang="en" >
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1">
<meta charset="utf-8">
<title>Introduction to Large Objects</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Version 5.1.2 Build 737" />
<meta name="dcterms.created" content="2013-07-18T13:32:40Z" />
<meta name="robots" content="all" />
<meta name="dcterms.title" content="Database SecureFiles and Large Objects Developer's Guide" />
<meta name="dcterms.identifier" content="E18294-04" />
<meta name="dcterms.isVersionOf" content="ADLOB" />
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;1996, 2013,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved." />
<link rel="Start" href="../../index.htm" title="Home" type="text/html" />
<link rel="Copyright" href="../../dcommon/html/cpyr.htm" title="Copyright" type="text/html" />

<script type="application/javascript"  src="../../dcommon/js/headfoot.js"></script>
<script type="application/javascript"  src="../../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html" />
<link rel="Index" href="index.htm" title="Index" type="text/html" />
<link rel="Glossary" href="glossary.htm" title="Glossary" type="text/html" />
<link rel="Prev" href="whatsnew.htm" title="Previous" type="text/html" />
<link rel="Next" href="part_start.htm" title="Next" type="text/html" />
<link rel="alternate" href="../e18294.pdf" title="PDF version" type="application/pdf" />
<link rel="schema.dcterms" href="http://purl.org/dc/terms/" />
<link rel="stylesheet" href="../../dcommon/css/fusiondoc.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/header.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/footer.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/fonts.css">
<link rel="stylesheet" href="../../dcommon/css/foundation.css">
<link rel="stylesheet" href="../../dcommon/css/codemirror.css">
<link rel="stylesheet" type="text/css" title="Default" href="../../nav/css/html5.css">
<link rel="stylesheet" href="../../dcommon/css/respond-480-tablet.css">
<link rel="stylesheet" href="../../dcommon/css/respond-768-laptop.css">
<link rel="stylesheet" href="../../dcommon/css/respond-1140-deskop.css">
<script type="application/javascript" src="../../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">8/37</span> <!-- End Header -->
<div id="ADLOB001" class="chapter"><a id="g1011954"></a><a id="i1006087"></a>
<h1 class="chapter"><span class="secnum">1</span> Introduction to Large Objects</h1>
<p>This chapter introduces Large Objects (LOBs) and discusses how LOB data types are used in application development. This chapter contains these topics:</p>
<ul>
<li>
<p><a href="#i1009630">What Are Large Objects?</a></p>
</li>
<li>
<p><a href="#i1007642">Why Use Large Objects?</a></p>
</li>
<li>
<p><a href="#i1006116">Why Not Use LONGs?</a></p>
</li>
<li>
<p><a href="#i1009787">Different Kinds of LOBs</a></p>
</li>
<li>
<p><a href="#i1009691">Introducing LOB Locators</a></p>
</li>
<li>
<p><a href="#i1009692">Database Semantics for Internal and External LOBs</a></p>
</li>
<li>
<p><a href="#i1009016">Large Object Data Types</a></p>
</li>
<li>
<p><a href="#i1009693">Object Data Types and LOBs</a></p>
</li>
<li>
<p><a href="#i1009717">Storing and Creating Other Data Types with LOBs</a></p>
</li>
</ul>
<a id="i1009630"></a>
<div id="ADLOB45114" class="sect1">
<h2 class="sect1">What Are Large Objects?</h2>
<p><a href="glossary.htm#i433115"><span class="xrefglossterm">Large Objects (LOBs)</span></a> are a set of data types that are designed to hold large amounts of data. A LOB can hold up to a maximum size ranging from 8 terabytes to 128 terabytes depending on how your database is configured. Storing data in LOBs enables you to access and manipulate the data efficiently in your application.</p>
</div>
<!-- class="sect1" -->
<a id="i1007642"></a>
<div id="ADLOB45115" class="sect1">
<h2 class="sect1"><a id="sthref7"></a>Why Use Large Objects?</h2>
<p>This section introduces different types of data that you encounter when developing applications and discusses which kinds of data are suitable for large objects.</p>
<p>In the world today, applications must deal with the following kinds of data:</p>
<ul>
<li>
<p>Simple structured data.</p>
<p>This data can be organized into simple tables that are structured based on business rules.</p>
</li>
<li>
<p>Complex structured data</p>
<p>This kind of data is complex in nature and is suited for the object-relational features of the Oracle database such as collections, references, and user-defined types.</p>
</li>
<li>
<p>Semi-structured data</p>
<p>This kind of data has a logical structure that is not typically interpreted by the database. For example, an XML document that is processed by your application or an external service, can be thought of as semi-structured data. The database provides technologies such as Oracle XML DB, Advanced Queuing, and Messages to help your application work with semi-structured data.</p>
</li>
<li>
<p>Unstructured data</p>
<p>This kind of data is not broken down into smaller logical structures and is not typically interpreted by the database or your application. A photographic image stored as a binary file is an example of unstructured data.</p>
</li>
</ul>
<p>Large objects are suitable for these last two kinds of data: semi-structured data and unstructured data. Large objects features allow you to store these kinds of data in the database and in operating system files that are accessed from the database.</p>
<p>With the growth of the internet and content-rich applications, it has become imperative that the database support a data type that:</p>
<ul>
<li>
<p>Can store unstructured and semi-structured data in an efficient manner.</p>
</li>
<li>
<p>Is optimized for large amounts of data.</p>
</li>
<li>
<p>Provides a uniform way of accessing data stored within the database or outside the database.</p>
</li>
</ul>
<div id="ADLOB45116" class="sect2"><a id="sthref8"></a>
<h3 class="sect2">Using LOBs for Semi-structured Data</h3>
<p>Examples of semi-structured data include document files such as XML documents or word processor files. These kinds of documents contain data in a logical structure that is processed or interpreted by an application, and is not broken down into smaller logical units when stored in the database.</p>
<p>Applications involving semi-structured data typically use large amounts of character data. The Character Large Object (<code>CLOB</code>) and National Character Large Object (<code>NCLOB</code>) data types are ideal for storing and manipulating this kind of data.</p>
<p>Binary File objects (<code>BFILE</code> data types) can also store character data. You can use <code>BFILE</code>s to load read-only data from operating system files into <code>CLOB</code> or <code>NCLOB</code> instances that you then manipulate in your application.</p>
</div>
<!-- class="sect2" -->
<a id="i1006104"></a>
<div id="ADLOB45117" class="sect2">
<h3 class="sect2"><a id="sthref9"></a><a id="sthref10"></a>Using LOBs for Unstructured Data</h3>
<p>Unstructured data cannot be decomposed into standard components. For example, data about an employee can be structured into a name, which is stored as a string; an identifier, such as an ID number, a salary and so on. A photograph, on the other hand, consists of a long stream of 1s and 0s. These bits are used to switch pixels on or off so that you can see the picture on a display, but are not broken down into any finer structure for database storage.</p>
<p>Also, unstructured data such as text, graphic images, still video clips, full motion video, and sound waveforms tends to be large in size. A typical employee record may be a few hundred bytes, while even small amounts of multimedia data can be thousands of times larger.</p>
<p>SQL data types that are ideal for large amounts of unstructured binary data include the <code>BLOB</code> data type (Binary Large Object) and the <code>BFILE</code> data type (Binary File object).</p>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="i1006116"></a>
<div id="ADLOB45118" class="sect1">
<h2 class="sect1"><a id="sthref11"></a><a id="sthref12"></a>Why Not Use LONGs?</h2>
<p>The database supports LONG and LOB data types. When possible, change your existing applications to use LOBs instead of LONGs because of the added benefits that LOBs provide. LONG-to-LOB migration enables you to easily migrate your existing applications that access LONG columns, to use LOB columns.</p>
<div class="infoboxnotealso">
<p class="notep1"><span class="bold">See Also</span>:</p>
<a href="adlob_long_lob.htm#g1029181">Chapter 18, "Migrating Columns from LONGs to LOBs"</a></div>
<p>Applications developed for use with Oracle Database version 7 and earlier, used the LONG or LONG RAW data type to store large amounts of unstructured data.</p>
<p>With the Oracle8<span class="italic">i</span> and later versions of the database, using LOB data types is recommended for storing large amounts of structured and semi-structured data. LOB data types have several advantages over LONG and LONG RAW types including:</p>
<ul>
<li>
<p>LOB Capacity: LOBs can store much larger amounts of data. LOBs can store 4GB of data or more depending on you system configuration. LONG and LONG RAW types are limited to 2GB of data.</p>
</li>
<li>
<p>Number of LOB columns in a table: A table can have multiple LOB columns. LOB columns in a table can be of any LOB type. In Oracle Database Release 7.3 and higher, tables are limited to a single LONG or LONG RAW column.</p>
</li>
<li>
<p>Random piece-wise access: LOBs support random access to data, but LONGs support only sequential access.</p>
</li>
<li>
<p>LOBs can also be object attributes.</p>
</li>
</ul>
</div>
<!-- class="sect1" -->
<a id="i1009787"></a>
<div id="ADLOB45119" class="sect1">
<h2 class="sect1">Different Kinds of LOBs</h2>
<p>Different kinds of LOBs can be stored in the database or in external files.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
LOBs in the database are sometimes also referred to as <span class="italic">internal LOBs</span> or <span class="italic">internal persistent LOBs</span>.</div>
<a id="i1006145"></a>
<div id="ADLOB45120" class="sect2">
<h3 class="sect2">Internal LOBs</h3>
<p><a id="sthref13"></a><a id="sthref14"></a>LOBs in the database are stored inside database tablespaces in a way that optimizes space and provides efficient access. <a id="sthref15"></a>The following SQL data types are supported for declaring internal LOBs: <code>BLOB</code>, <code>CLOB</code>, and <code>NCLOB</code>. Details on these data types are given in <a href="#i1009016">"Large Object Data Types"</a>.</p>
<p class="subhead1"><a id="ADLOB45121"></a>Persistent and Temporary LOBs</p>
<p>Internal LOBs (LOBs in the database) can be either persistent or temporary. A persistent LOB is a LOB instance that exists in a table row in the database. A temporary LOB instance is created when you instantiate a LOB only within the scope of your local application.</p>
<p>A temporary instance becomes a persistent instance when you insert the instance into a table row.</p>
<p>Persistent LOBs use copy semantics and participate in database transactions. You can recover persistent LOBs in the event of transaction or media failure, and any changes to a persistent LOB value can be committed or rolled back. In other words, all the Atomicity Consistency Isolation Durability (ACID) properties that pertain to using database objects pertain to using persistent LOBs.</p>
</div>
<!-- class="sect2" -->
<a id="i1006165"></a>
<div id="ADLOB45122" class="sect2">
<h3 class="sect2"><a id="sthref16"></a>External LOBs and the BFILE Data Type</h3>
<p>External LOBs are data objects stored in operating system files, outside the database tablespaces. The database accesses external LOBs using the SQL data type <code>BFILE</code>. The <code>BFILE</code> data type is the only external LOB data type.</p>
<p><code>BFILE</code>s are read-only data types. The database allows read-only byte stream access to data stored in <code>BFILE</code>s. You cannot write to a BFILE from within your application.</p>
<p>The database uses reference semantics with <code>BFILE</code> columns. Data stored in a table column of type <code>BFILE</code>, is physically located in an operating system file, not in the database tablespace.</p>
<p>You typically use <code>BFILE</code>s to hold:</p>
<ul>
<li>
<p>Binary data that does not change while your application is running, such as graphics.</p>
</li>
<li>
<p>Data that is loaded into other large object types, such as a <code>BLOB</code> or <code>CLOB</code> where the data can then be manipulated.</p>
</li>
<li>
<p>Data that is appropriate for byte-stream access, such as multimedia.</p>
</li>
<li>
<p>Read-only data that is relatively large in size, to avoid taking up large amounts database tablespace.</p>
</li>
</ul>
<p>Any storage device accessed by your operating system can hold <code>BFILE</code> data, including hard disk drives, CD-ROMs, PhotoCDs and DVDs. <a id="sthref17"></a>The database can access <code>BFILE</code>s provided the operating system supports stream-mode access to the operating system files.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
External LOBs do not participate in transactions. Any support for integrity and durability must be provided by the underlying file system as governed by the operating system.</div>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="i1009691"></a>
<div id="ADLOB45123" class="sect1">
<h2 class="sect1">Introducing LOB Locators</h2>
<p>A LOB instance has a locator and a value. The LOB locator is a reference to where the LOB value is physically stored. The LOB value is the data stored in the LOB. <a id="sthref18"></a></p>
<p>When you use a LOB in an operation such as passing a LOB as a parameter, you are actually passing a LOB locator. For the most part, you can work with a LOB instance in your application without being concerned with the semantics of LOB locators. There is no requirement to dereference LOB locators, as is required with pointers in some programming languages.</p>
<p>There are some issues regarding the semantics of LOB locators and how LOB values are stored that you should be aware of. These details are covered in the context of the discussion where they apply throughout this guide.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="adlob_working.htm#i1010009">"LOB Locator and LOB Value"</a></p>
</li>
<li>
<p><a href="adlob_working.htm#i1007838">"LOB Locators and BFILE Locators"</a></p>
</li>
<li>
<p><a href="adlob_tables.htm#CIHEBABG">"LOB Storage Parameters"</a></p>
</li>
</ul>
</div>
</div>
<!-- class="sect1" -->
<a id="i1009692"></a>
<div id="ADLOB45124" class="sect1">
<h2 class="sect1">Database Semantics for Internal and External LOBs</h2>
<p>In all programmatic environments, database semantics differ between internal LOBs and external LOBs as follows:</p>
<ul>
<li>
<p>Internal LOBs use <span class="italic">copy semantics</span>.</p>
<p>With copy semantics, both the <a id="sthref19"></a><a id="sthref20"></a><a id="sthref21"></a><a id="sthref22"></a><a id="sthref23"></a>LOB locator and LOB value are logically copied during insert, update, or assignment operations. This ensures that each table cell or each variable containing a LOB, holds a unique LOB instance.</p>
</li>
<li>
<p>External LOBs use <span class="italic">reference semantics</span>.</p>
<p>With reference semantics, only the LOB locator is copied during insert operations. (Note that update operations do not apply to external LOBs as external LOBs are read-only. This is explained in more detail later in this section.)</p>
</li>
</ul>
</div>
<!-- class="sect1" -->
<a id="i1009016"></a>
<div id="ADLOB45125" class="sect1">
<h2 class="sect1">Large Object Data Types</h2>
<p><a href="#g1010446">Table 1-1</a> describes each large object data type supported by the database and describes the kind of data each data type is typically used for. The names of data types given here are the SQL data types provided by the database. In general, the descriptions given for the data types in this table and the rest of this book also apply to the corresponding data types provided for other programmatic environments. Also, note that the term <span class="italic">LOB</span> generally refers to the set of all large object data types.</p>
<div id="ADLOB45126" class="tblformal">
<p class="titleintable"><a id="sthref24"></a><a id="g1010446"></a>Table 1-1 Large Object Data Types</p>
<table class="cellalignment905" title="Large Object Data Types" summary="This table is described in the preceding text" dir="ltr">
<thead>
<tr class="cellalignment899">
<th class="cellalignment906" id="r1c1-t6">SQL Data Type</th>
<th class="cellalignment906" id="r1c2-t6">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment899">
<td class="cellalignment907" id="r2c1-t6" headers="r1c1-t6">
<p><code>BLOB</code> <code><a id="sthref25"></a></code></p>
</td>
<td class="cellalignment907" headers="r2c1-t6 r1c2-t6">
<p>Binary Large Object</p>
<p>Stores any kind of data in binary format. Typically used for multimedia data such as images, audio, and video.</p>
</td>
</tr>
<tr class="cellalignment899">
<td class="cellalignment907" id="r3c1-t6" headers="r1c1-t6">
<p><code>CLOB</code> <code><a id="sthref26"></a></code></p>
</td>
<td class="cellalignment907" headers="r3c1-t6 r1c2-t6">
<p>Character Large Object</p>
<p>Stores string data in the database character set format. Used for large strings or documents that use the database character set exclusively. Characters in the database character set are in a fixed width format.</p>
</td>
</tr>
<tr class="cellalignment899">
<td class="cellalignment907" id="r4c1-t6" headers="r1c1-t6">
<p><code>NCLOB</code> <code><a id="sthref27"></a><a id="sthref28"></a></code></p>
</td>
<td class="cellalignment907" headers="r4c1-t6 r1c2-t6">
<p>National Character Set Large Object</p>
<p>Stores string data in National Character Set format. Used for large strings or documents in the National Character Set. Supports characters of varying width format.</p>
</td>
</tr>
<tr class="cellalignment899">
<td class="cellalignment907" id="r5c1-t6" headers="r1c1-t6">
<p><code>BFILE <a id="sthref29"></a><a id="sthref30"></a></code></p>
</td>
<td class="cellalignment907" headers="r5c1-t6 r1c2-t6">
<p>External Binary File</p>
<p>A binary file stored outside of the database in the host operating system file system, but accessible from database tables. <code>BFILE</code>s can be accessed from your application on a <span class="bold">read-only</span> basis. Use <code>BFILE</code>s to store static data, such as image data, that is not manipulated in applications.</p>
<p>Any kind of data, that is, any operating system file, can be stored in a <code>BFILE</code>. For example, you can store character data in a <code>BFILE</code> and then load the <code>BFILE</code> data into a <code>CLOB</code> specifying the character set upon loading.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="sect1" -->
<a id="i1009693"></a>
<div id="ADLOB45127" class="sect1">
<h2 class="sect1">Object Data Types and LOBs <a id="sthref31"></a><a id="sthref32"></a><a id="sthref33"></a><a id="sthref34"></a></h2>
<p>You can declare LOB data types as fields, or members, of object data types. For example, you can have an attribute of type <code>CLOB</code> on an object type. In general, there is no difference in the usage of a LOB instance in a LOB column and the usage of a LOB instance that is a member or of an object data type. Any difference in usage is called out when it applies. When used in this guide, the term <span class="bold">LOB attribute</span> refers to a LOB instance that is a member of an object data type. Unless otherwise specified, discussions that apply to LOB columns also apply to LOB attributes.</p>
</div>
<!-- class="sect1" -->
<a id="i1009717"></a>
<div id="ADLOB45128" class="sect1">
<h2 class="sect1">Storing and Creating Other Data Types with LOBs</h2>
<p>You can use LOBs to create other user-defined data types or store other data types as LOBs. This section discusses some of the data types provided with the database as examples of data types that are stored or created with LOB types.</p>
<div id="ADLOB45129" class="sect2"><a id="sthref35"></a>
<h3 class="sect2">VARRAYs Stored as LOBs</h3>
<p>An instance of type <code>VARRAY</code> in the database is stored as an array of LOBs when you create a table in the following scenarios:</p>
<ul>
<li>
<p>If the VARRAY storage clause&mdash; <code>VARRAY varray_item STORE AS</code> &mdash;is not specified, and the declared size of varray data is more than 4000 bytes.</p>
</li>
<li>
<p>If the varray column properties are specified using the STORE AS LOB clause&mdash; <code>VARRAY varray_item STORE AS LOB ...</code></p>
</li>
</ul>
</div>
<!-- class="sect2" -->
<div id="ADLOB45130" class="sect2"><a id="sthref36"></a>
<h3 class="sect2">XMLType Columns Stored as CLOBs</h3>
<p>A good example of how LOB data types can be used to store other data types is the <code>XMLType</code> data type. The <code>XMLType</code> data type is sometimes stored as a <code>CLOB</code>. Setting up your table or column to store <code>XMLType</code> data types as <code>CLOB</code>s enables you to store schema-less XML documents in the database.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a class="olink ADXDB" href="../e23094/toc.htm"><span class="italic">Oracle XML DB Developer's Guide</span></a> for information on creating <code>XMLType</code> tables and columns and how XML is stored in <code>CLOB</code>s.</p>
</li>
<li>
<p><a class="olink ADXDK" href="../e23582/toc.htm"><span class="italic">Oracle XML Developer's Kit Programmer's Guide,</span></a> for information about working with XML.</p>
</li>
</ul>
</div>
</div>
<!-- class="sect2" -->
<a id="i1008646"></a>
<div id="ADLOB45131" class="sect2">
<h3 class="sect2"><a id="sthref37"></a>LOBs Used in Oracle Multimedia</h3>
<p>Oracle Multimedia uses LOB data types to create data types specialized for use in multimedia application such as Multimedia ORDAudio, ORDDoc, ORDImage, and ORDVideo. Oracle Multimedia uses the database infrastructure to define object types, methods, and LOBs necessary to represent these specialized types of data in the database.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a class="olink IMURG" href="../e10777/toc.htm"><span class="italic">Oracle Multimedia User's Guide</span></a> for more information on using Oracle Multimedia.</p>
</li>
<li>
<p><a class="olink AIVUG" href="../e10776/toc.htm"><span class="italic">Oracle Multimedia Reference</span></a> for more information on using Oracle Multimedia data types.</p>
</li>
</ul>
</div>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" --></div>
<!-- class="chapter" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment898">
<tr>
<td class="cellalignment907">
<table class="cellalignment903">
<tr>
<td class="cellalignment902"><a href="whatsnew.htm"><img width="24" height="24" src="../../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment902"><a href="part_start.htm"><img width="24" height="24" src="../../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;1996, 2013,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment909">
<table class="cellalignment901">
<tr>
<td class="cellalignment902"><a href="../../index.htm"><img width="24" height="24" src="../../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment902"><a href="../../nav/portal_booklist.htm"><img width="24" height="24" src="../../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment902"><a href="toc.htm"><img width="24" height="24" src="../../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment902"><a href="index.htm"><img width="24" height="24" src="../../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment902"><a href="../../nav/mindx.htm"><img width="24" height="24" src="../../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment902"><a href="../../dcommon/html/feedback.htm"><img width="24" height="24" src="../../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>
</body>
</html>
