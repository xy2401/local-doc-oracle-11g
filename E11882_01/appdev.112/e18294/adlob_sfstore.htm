<!DOCTYPE html>
<html lang="en">
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1">
<meta charset="utf-8">
<title>DBFS SecureFiles Store</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Version 5.1.2 Build 737" />
<meta name="dcterms.created" content="2013-07-18T13:32:41Z" />
<meta name="robots" content="all" />
<meta name="dcterms.title" content="Database SecureFiles and Large Objects Developer's Guide" />
<meta name="dcterms.identifier" content="E18294-04" />
<meta name="dcterms.isVersionOf" content="ADLOB" />
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;1996, 2013,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved." />
<link rel="Start" href="../../index.htm" title="Home" type="text/html" />
<link rel="Copyright" href="../../dcommon/html/cpyr.htm" title="Copyright" type="text/html" />

<script type="application/javascript"  src="../../dcommon/js/headfoot.js"></script>
<script type="application/javascript"  src="../../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html" />
<link rel="Index" href="index.htm" title="Index" type="text/html" />
<link rel="Glossary" href="glossary.htm" title="Glossary" type="text/html" />
<link rel="Prev" href="adlob_cont.htm" title="Previous" type="text/html" />
<link rel="Next" href="adlob_hierarch.htm" title="Next" type="text/html" />
<link rel="alternate" href="../e18294.pdf" title="PDF version" type="application/pdf" />
<link rel="schema.dcterms" href="http://purl.org/dc/terms/" />
<link rel="stylesheet" href="../../dcommon/css/fusiondoc.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/header.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/footer.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/fonts.css">
<link rel="stylesheet" href="../../dcommon/css/foundation.css">
<link rel="stylesheet" href="../../dcommon/css/codemirror.css">
<link rel="stylesheet" type="text/css" title="Default" href="../../nav/css/html5.css">
<link rel="stylesheet" href="../../dcommon/css/respond-480-tablet.css">
<link rel="stylesheet" href="../../dcommon/css/respond-768-laptop.css">
<link rel="stylesheet" href="../../dcommon/css/respond-1140-deskop.css">
<script type="application/javascript" src="../../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">17/37</span> <!-- End Header -->
<div id="ADLOB4594" class="chapter"><a id="BABBCJAF"></a>
<h1 class="chapter"><span class="secnum">8</span> DBFS SecureFiles Store</h1>
<p>This section contains the following topics:</p>
<ul>
<li>
<p><a href="#BABFHABD">The DBFS SecureFiles Store Package, DBMS_DBFS_SFS</a></p>
</li>
<li>
<p><a href="#BABFIAFE">Using a DBFS SecureFiles Store File System</a></p>
</li>
</ul>
<a id="BABFHABD"></a>
<div id="ADLOB46057" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">The DBFS SecureFiles Store Package, DBMS_DBFS_SFS</h2>
<p>This package is a store provider for the DBFS Content API, and conforms to the Provider SPI defined in <code>DBMS_DBFS_CONTENT_SPI</code>, in <a class="olink ARPLS72231" href="../../appdev.112/e40758/d_dbfs_content_spi.htm#ARPLS72231"><span class="italic">Oracle Database PL/SQL Packages and Types Reference</span></a>.</p>
<p>See <a class="olink ARPLS72180" href="../../appdev.112/e40758/d_dbfs_sfs.htm#ARPLS72180"><span class="italic">Oracle Database PL/SQL Packages and Types Reference</span></a> for more information.</p>
<div id="ADLOB46058" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref237"></a>
<h3 class="sect2">Creating and Registering a New SecureFiles Store</h3>
<p>Procedure <code>CREATEFILESYSTEM()</code> creates a new SecureFiles Store file system store <code>store_name</code> in schema <code>schema_name</code> (defaulting to the current schema) as table <code>tbl_name</code>, with the table (and internal indexes) in tablespace <code>tbl_tbs</code> (defaulting to the schema's default tablespace), and its lob column in tablespace <code>lob_tbs</code> (defaulting to <code>tbl_tbs</code>).</p>
<p>If <code>use_bf</code> is <code>true</code>, a BasicFiles LOB is used, otherwise a SecureFiles LOB is used.</p>
<p><code>props</code> is a table of (name, value, typecode) tuples that can be used to configure the store properties. Currently, no such properties are defined or used, but the placeholder exists for future versions of the reference implementation.</p>
<p>If the <code>create_only</code> argument is <code>true</code>, the file system is created, but not registered with the current user -- a separate call to <code>DBMS_DBFS_SFS_ADMIN.registerFilesystem</code> (by the same users or by other users) is needed to make the file system visible for provider operations.</p>
<p>The procedure executes like a DDL (auto-commits before and after its execution). The method <code>createStore()</code> is a wrapper around <code>createFilesystem()</code>.</p>
<p>See <a class="olink ARPLS72079" href="../../appdev.112/e40758/d_dbfs_sfs.htm#ARPLS72079"><span class="italic">Oracle Database PL/SQL Packages and Types Reference</span></a>, for details on using <code>DBMS_DBFS_SFS</code>.</p>
</div>
<!-- class="sect2" -->
<div id="ADLOB46059" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref238"></a>
<h3 class="sect2">Initializing or Re-initializing a SecureFiles Store</h3>
<p>Procedure <code>INITFS()</code> truncates and re-initializes the table associated with the SecureFiles Store <code>store_name</code>. The procedure executes like a DDL, auto-commiting before and after its execution.</p>
<p>See <a class="olink ARPLS65201" href="../../appdev.112/e40758/d_dbfs_sfs.htm#ARPLS65201"><span class="italic">Oracle Database PL/SQL Packages and Types Reference</span></a> for details of the <code>DBMS_DBFS_SFS</code> methods.</p>
</div>
<!-- class="sect2" -->
<div id="ADLOB46060" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref239"></a>
<h3 class="sect2">Unregister and Drop A SecureFiles Store File System Store</h3>
<p>All stores referring to the file system are removed from the metadata tables, and the underlying file system table is itself dropped. The procedure executes like a DDL, auto-commiting before and after its execution.</p>
<p>See <a class="olink ARPLS65201" href="../../appdev.112/e40758/d_dbfs_sfs.htm#ARPLS65201"><span class="italic">Oracle Database PL/SQL Packages and Types Reference</span></a>, for details of the <code>DBMS_DBFS_SFS</code> methods.</p>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="BABFIAFE"></a>
<div id="ADLOB46061" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Using a DBFS SecureFiles Store File System</h2>
<p>This section describes how to create a SecureFiles Store file system.</p>
<div id="ADLOB46062" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref240"></a>
<h3 class="sect2">Permissions Management</h3>
<p class="subhead2"><a id="ADLOB46156"></a>To manage permissions:</p>
<ol>
<li>
<p>Create or pick DBFS Content API target users.</p>
<p>Assume that you use the DBFS Content API as database user/password as <code>user1/</code><code><span class="codeinlineitalic">password1</span></code>, <code>user2/</code><code><span class="codeinlineitalic">password2</span></code>, and <code>sfs_demo/</code><code><span class="codeinlineitalic">password3</span></code>. At minimum, these database users must have the <code>CREATE SESSION</code>, <code>RESOURCE</code>, and <code>CREATE VIEW</code> privileges.</p>
<p>Always use a regular database user for all operational access to the Content API and stores. Never use the <code>SYS</code> or <code>SYSTEM</code> users, or the <code>SYSDBA</code> / <code>SYSOPER</code> roles for DBFS Content API operations.</p>
</li>
<li>
<p>Grant the <code>dbfs_role</code> to each of these users. The <code>dbfs_role</code> controls who is authorized to use the DBFS Content API, and indirectly confers additional privileges to the target users.</p>
<p>Without this role, the DBFS Content API is not available to a database user. A user with suitable administrative privileges (or <code>SYSDBA</code>) can grant the role to additional users as needed.</p>
<pre>
connect / as sysdba
grant dbfs_role to user1;
grant dbfs_role to user2;
grant dbfs_role to sfs_demo;
</pre></li>
</ol>
<p>This sets up the DBFS Content API for any database user who has the <code>dbfs_role</code>.</p>
<p>Because of the way roles, access control, and definer and invoker rights interact in the database, it may be necessary to explicitly grant various permissions (almost always execute permissions) on DBFS Content API types (SQL types with the <code>DBMS_DBFS_CONTENT_</code> <code><span class="codeinlineitalic">prefix</span></code>) and packages (typically only <code>DBMS_DBFS_CONTENT</code> and <code>DBMS_DBFS_SFS</code>) to users who might otherwise have the <code>dbfs_role</code>.</p>
<p>These explicit, direct grants are normal and to be expected, and can be provided as needed and on demand.</p>
</div>
<!-- class="sect2" -->
<div id="ADLOB46063" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref241"></a>
<h3 class="sect2">Creating a SecureFiles File System Store</h3>
<p class="subhead2"><a id="ADLOB46157"></a>To create a SecureFiles File System Store:</p>
<ol>
<li>
<p>Create the necessary stores for access using the DBFS CAPI:</p>
<pre>
declare
  begin
    dbms_dbfs_sfs.createFilesystem(
      store_name =&gt; 'FS1',
      tbl_name =&gt; 'T1',
      tbl_tbs =&gt; null,
      use_bf =&gt; false 
    );
    commit;
  end;
/
</pre>
<p>were:</p>
<ul>
<li>
<p><code>store_name</code> is any arbitrary, user-unique name.</p>
</li>
<li>
<p><code>tbl_name</code> is a valid table name, created in the current schema.</p>
</li>
<li>
<p><code>tbl_tbs</code> is a valid tablespace name used for the store table and its dependent segments, such as indexes, lob, nested tables. The default is <code>NULL</code>, and specifies a tablespace of the current schema.</p>
</li>
</ul>
</li>
<li>
<p>Register these file systems with the DBFS CAPI as new stores managed by the SecureFiles Store.</p>
<pre>
connect sfs_demo/******
declare
  begin
    dbms_dbfs_content.registerStore(
      store_name    =&gt; 'FS1',
      provider_name =&gt; 'anything',
      provider_package =&gt; 'dbms_dbfs_sfs'
    );
    commit;
  end;
/
</pre>
<p>This operation associates the SecureFiles Store <code>FS1</code> with the <code>dbms_dbfs_sfs</code> provider.</p>
<p>where:</p>
<ul>
<li>
<p><code>store_name</code> is SecureFiles Store <code>FS1</code> that uses table <code>SFS_DEMO.T1</code>.</p>
</li>
<li>
<p><code>provider_name</code> is ignored.</p>
</li>
<li>
<p><code>provider_package</code> is <code>dbms_dbfs_sfs</code>, for SecureFiles Store reference provider.</p>
</li>
</ul>
</li>
<li>
<p>Mount the stores at suitable mount-points.</p>
<pre>
connect sfs_demo/******
declare
  begin
    dbms_dbfs_content.mountStore(
      store_name    =&gt; 'FS1',
      store_mount   =&gt; 'mnt1'
    );
    commit;
  end;
/
</pre>
<p>where:</p>
<ul>
<li>
<p><code>store_name</code> is SecureFiles Store <code>FS1</code> that uses table <code>SFS_DEMO.T1</code>.</p>
</li>
<li>
<p><code>store_mount</code> is the mount point.</p>
</li>
</ul>
</li>
<li>
<p>[Optional] To see the results of the preceding steps, you can use one of the following statements.</p>
<ul>
<li>
<p>verify SecureFiles Store tables and file systems</p>
<pre>
select * from table(dbms_dbfs_sfs.listTables);
select * from table(dbms_dbfs_sfs.listFilesystems);
</pre></li>
<li>
<p>verify ContentAPI Stores and mounts</p>
<pre>
select * from table(dbms_dbfs_content.listStores);
select * from table(dbms_dbfs_content.listMounts);
 
</pre></li>
<li>
<p>verify SecureFiles Store features</p>
<pre>
var fs1f number;
exec :fs1f := dbms_dbfs_content.getFeaturesByName('FS1');
select * from table(dbms_dbfs_content.decodeFeatures(:fs1f)); 
</pre></li>
<li>
<p>verify resource and property views</p>
<pre>
select * from dbfs_content;
select * from dbfs_content_properties;
</pre></li>
</ul>
</li>
</ol>
<p>You should never directly access tables that hold data for SecureFiles Store file systems, even through the <code>DBMS_DBFS_SFS</code> package methods. The correct way to access the file systems is using the DBFS Content API, (<code>DBMS_DBFS_CONTENT</code> methods) for procedural operations, and through the resource and property views (<code>dbfs_content</code> and <code>dbfs_content_properties</code>) for SQL operations.</p>
</div>
<!-- class="sect2" -->
<div id="ADLOB46064" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref242"></a>
<h3 class="sect2">Comparing SecureFiles LOBs to BasicFiles LOBs</h3>
<p>SecureFiles LOBs are only available in Oracle Database 11<span class="italic">g</span> Release 1 and higher. They are not available in earlier releases.</p>
<p>Compatibility must be at least 11.1.0.0 to use SecureFiles LOBs.</p>
<p>Specify <code>use_bf =&gt; false</code> in <code>DBMS_DBFS_SFS.CREATEFILESYSTEM</code> to use SecureFiles LOBs.</p>
<p>Specify <code>use_bf =&gt; true</code> in <code>DBMS_DBFS_SFS.CREATEFILESYSTEM</code> to use BasicFiles LOBs.</p>
</div>
<!-- class="sect2" -->
<div id="ADLOB46065" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref243"></a>
<h3 class="sect2">Initializing SecureFiles Store File Systems</h3>
<p>Initialize and re-initialize a SecureFiles Store file system store. The following example uses file system <code>FS1</code>, and table "<code>SFS_DEMO</code>"."<code>T1</code>".</p>
<pre>
connect sfs_demo/******;
exec dbms_dbfs_content.initFS(store_name =&gt; 'FS1');
</pre></div>
<!-- class="sect2" -->
<div id="ADLOB46066" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref244"></a>
<h3 class="sect2">Drop SecureFiles Store File Systems</h3>
<p class="subhead2"><a id="ADLOB46158"></a>To drop a SecureFiles Store file system</p>
<ol>
<li>
<p>Unmount the stores.</p>
<pre>
connect sfs_demo/******;
declare
  begin
    dbms_dbfs_content.unmountStore(
      store_name    =&gt; 'FS1',
      store_mount   =&gt; &amp;#8216;mnt1&amp;#8217;
    );
    commit;
end;
/
</pre>
<p>where:</p>
<ul>
<li>
<p><code>store_name</code> is SecureFiles Store <code>FS1</code> that uses table <code>SFS_DEMO.T1</code>.</p>
</li>
<li>
<p><code>store_mount</code> is the mount point.</p>
</li>
</ul>
</li>
<li>
<p>Unregister the stores.</p>
<pre>
connect sfs_demo/******;
exec dbms_dbfs_content.unregisterStore(store_name =&gt; 'FS1');
commit;
</pre>
<p>where <code>store_name</code> is SecureFiles Store <code>FS1</code> that uses table <code>SFS_DEMO.T1</code>.</p>
</li>
<li>
<p>Drop the file system.</p>
<pre>
connect sfs_demo/******;
exec dbms_dbfs_sfs.dropFilesystem(store_name =&gt; 'FS1');
commit;
</pre>
<p>where <code>store_name</code> is SecureFiles Store <code>FS1</code> that uses table <code>SFS_DEMO.T1</code>.</p>
</li>
</ol>
</div>
<!-- class="sect2" -->
<div id="ADLOB46067" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref245"></a>
<h3 class="sect2">Working with DBFS Content API</h3>
<p>Assuming the above steps have been executed to set up the DBFS Content API, and to create and mount at least one SecureFiles Store reference file system under the mount point <code>/mnt1</code>, you can create a new file and directory elements as demonstrated in <a href="#BABHCECE">Example 8-1</a>.</p>
<div id="ADLOB46159" class="example">
<p class="titleinexample"><a id="BABHCECE"></a>Example 8-1 Working with DBFS Content API</p>
<pre>
connect foo/******
 
declare
   ret integer;
   b   blob;
   str varchar2(1000)  := '' || chr(10) ||
 
'#include &lt;stdio.h&gt;' || chr(10) ||
'' || chr(10) ||
'int main(int argc, char** argv)' || chr(10) ||
'{' || chr(10) ||
'    (void) printf("hello world\n");' || chr(10) ||
'    return 0;' || chr(10) ||
'}' || chr(10) ||
'';
 
    begin
        ret := dbms_fuse.fs_mkdir('/mnt1/src');
        ret := dbms_fuse.fs_creat('/mnt1/src/hello.c', content =&gt; b);
        dbms_lob.writeappend(b, length(str), utl_raw.cast_to_raw(str));
        commit;
    end;
    /
    show errors;
 
    -- verify newly created directory and file
    select pathname, pathtype, length(filedata),
        utl_raw.cast_to_varchar2(filedata)
        from dbfs_content
            where pathname like '/mnt1/src%'
            order by pathname;
</pre></div>
<!-- class="example" -->
<p>The file system can be populated and accessed from PL/SQL with <code>DBMS_DBFS_CONTENT</code>. The file system can be accessed read-only from SQL using the <code>dbfs_content</code> and <code>dbfs_content_properties</code> views.</p>
<p>The file system can be populated and accessed through <code>FUSE</code>, using regular file system APIs and UNIX utilities, or by the standalone <code>dbfs_client</code> tool (in environments where <code>FUSE</code> is either unavailable or not set up).</p>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" --></div>
<!-- class="chapter" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment898">
<tr>
<td class="cellalignment907">
<table class="cellalignment903">
<tr>
<td class="cellalignment902"><a href="adlob_cont.htm"><img width="24" height="24" src="../../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment902"><a href="adlob_hierarch.htm"><img width="24" height="24" src="../../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;1996, 2013,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment909">
<table class="cellalignment901">
<tr>
<td class="cellalignment902"><a href="../../index.htm"><img width="24" height="24" src="../../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment902"><a href="../../nav/portal_booklist.htm"><img width="24" height="24" src="../../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment902"><a href="toc.htm"><img width="24" height="24" src="../../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment902"><a href="index.htm"><img width="24" height="24" src="../../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment902"><a href="../../nav/mindx.htm"><img width="24" height="24" src="../../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment902"><a href="../../dcommon/html/feedback.htm"><img width="24" height="24" src="../../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>
</body>
</html>
