<!DOCTYPE html>
<html lang="en">
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1">
<meta charset="utf-8">
<title>Working with LOBs</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Version 5.1.2 Build 737" />
<meta name="dcterms.created" content="2013-07-18T13:32:40Z" />
<meta name="robots" content="all" />
<meta name="dcterms.title" content="Database SecureFiles and Large Objects Developer's Guide" />
<meta name="dcterms.identifier" content="E18294-04" />
<meta name="dcterms.isVersionOf" content="ADLOB" />
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;1996, 2013,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved." />
<link rel="Start" href="../../index.htm" title="Home" type="text/html" />
<link rel="Copyright" href="../../dcommon/html/cpyr.htm" title="Copyright" type="text/html" />

<script type="application/javascript"  src="../../dcommon/js/headfoot.js"></script>
<script type="application/javascript"  src="../../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html" />
<link rel="Index" href="index.htm" title="Index" type="text/html" />
<link rel="Glossary" href="glossary.htm" title="Glossary" type="text/html" />
<link rel="Prev" href="part_start.htm" title="Previous" type="text/html" />
<link rel="Next" href="adlob_managing.htm" title="Next" type="text/html" />
<link rel="alternate" href="../e18294.pdf" title="PDF version" type="application/pdf" />
<link rel="schema.dcterms" href="http://purl.org/dc/terms/" />
<link rel="stylesheet" href="../../dcommon/css/fusiondoc.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/header.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/footer.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/fonts.css">
<link rel="stylesheet" href="../../dcommon/css/foundation.css">
<link rel="stylesheet" href="../../dcommon/css/codemirror.css">
<link rel="stylesheet" type="text/css" title="Default" href="../../nav/css/html5.css">
<link rel="stylesheet" href="../../dcommon/css/respond-480-tablet.css">
<link rel="stylesheet" href="../../dcommon/css/respond-768-laptop.css">
<link rel="stylesheet" href="../../dcommon/css/respond-1140-deskop.css">
<script type="application/javascript" src="../../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">10/37</span> <!-- End Header -->
<div id="ADLOB002" class="chapter"><a id="g1015543"></a>
<h1 class="chapter"><span class="secnum">2</span> Working with LOBs</h1>
<p>This chapter describes the usage and semantics of LOBs required for application development, and covers various techniques for working with LOBs.</p>
<p>Most of the discussions in this chapter regarding persistent LOBs assume that you are dealing with existing LOBs in tables. The task of creating tables with LOB columns is typically performed by your database administrator.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="adlob_smart.htm#g1024256">Chapter 4, "Using Oracle SecureFiles LOBs"</a> for creating LOBs using the SecureFiles paradigm</p>
</li>
<li>
<p><a href="adlob_tables.htm#g1000000">Chapter 11, "LOB Storage"</a> for storage parameters used in creating LOBs</p>
</li>
</ul>
</div>
<p>This chapter contains these topics:</p>
<ul>
<li>
<p><a href="#i1010291">LOB Column States</a></p>
</li>
<li>
<p><a href="#i1010367">Locking a Row Containing a LOB</a></p>
</li>
<li>
<p><a href="#i1010200">Opening and Closing LOBs</a></p>
</li>
<li>
<p><a href="#i1010009">LOB Locator and LOB Value</a></p>
</li>
<li>
<p><a href="#i1007838">LOB Locators and BFILE Locators</a></p>
</li>
<li>
<p><a href="#i1010368">Accessing LOBs</a></p>
</li>
<li>
<p><a href="#i1006278">LOB Rules and Restrictions</a></p>
</li>
</ul>
<a id="i1010291"></a>
<div id="ADLOB45133" class="sect1">
<h2 class="sect1">LOB Column States</h2>
<p>The techniques you use when accessing a cell in a LOB column differ depending on the state of the given cell. A cell in a LOB Column can be in one of the following states:</p>
<ul>
<li>
<p><span class="bold">NULL</span></p>
<p>The table cell is created, but the cell holds no locator or value.</p>
</li>
<li>
<p><span class="bold">Empty</span></p>
<p>A LOB instance with a locator exists in the cell, but it has no value. The length of the LOB is zero.</p>
</li>
<li>
<p><span class="bold">Populated</span></p>
<p>A LOB instance with a locator and a value exists in the cell.</p>
</li>
</ul>
</div>
<!-- class="sect1" -->
<a id="i1010367"></a>
<div id="ADLOB45134" class="sect1">
<h2 class="sect1">Locking a Row Containing a LOB</h2>
<p>You can lock a row containing a LOB to prevent other database users from writing to the LOB during a transaction. To lock a row containing a LOB, specify the <code>FOR UPDATE</code> clause when you select the row. While the row is locked, other users cannot lock or update the LOB, until you end your transaction.</p>
</div>
<!-- class="sect1" -->
<a id="i1010200"></a>
<div id="ADLOB45135" class="sect1">
<h2 class="sect1">Opening and Closing LOBs</h2>
<p>The LOB APIs include operations that enable you to explicitly open and close a LOB instance. You can open and close a persistent LOB instance of any type: <code>BLOB</code>, <code>CLOB</code>, <code>NCLOB</code>, or <code>BFILE</code>. You open a LOB to achieve one or both of the following results:</p>
<ul>
<li>
<p>Open the LOB in read-only mode.</p>
<p>This ensures that the LOB (both the LOB locator and LOB value) cannot be changed in your session until you explicitly close the LOB. For example, you can open the LOB to ensure that the LOB is not changed by some other part of your program while you are using the LOB in a critical operation. After you perform the operation, you can then close the LOB.</p>
</li>
<li>
<p>Open the LOB in read write/mode&mdash;persistent <code>BLOB</code>, <code>CLOB</code>, or <code>NCLOB</code> instances only.</p>
<p>Opening a LOB in read write mode defers any index maintenance on the LOB column until you close the LOB. Opening a LOB in read write mode is only useful if there is an extensible index on the LOB column and you do not want the database to perform index maintenance every time you write to the LOB. This technique can increase the performance of your application if you are doing several write operations on the LOB while it is open.</p>
</li>
</ul>
<p>If you open a LOB, then you must close the LOB at some point later in your session. This is the only requirement for an open LOB. While a LOB instance is open, you can perform as many operations as you want on the LOB&mdash;provided the operations are allowed in the given mode.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="adlob_design.htm#i1006373">"Opening Persistent LOBs with the OPEN and CLOSE Interfaces"</a> for details on usage of these APIs.</div>
</div>
<!-- class="sect1" -->
<a id="i1010009"></a>
<div id="ADLOB45136" class="sect1">
<h2 class="sect1">LOB Locator and LOB Value</h2>
<p>There are two techniques that you can use to access and modify LOB values:</p>
<ul>
<li>
<p><a href="#i1010479">Using the Data Interface for LOBs</a></p>
</li>
<li>
<p><a href="#i1010483">Using the LOB Locator to Access and Modify LOB Values</a></p>
</li>
</ul>
<a id="i1010479"></a>
<div id="ADLOB45137" class="sect2">
<h3 class="sect2">Using the Data Interface for LOBs</h3>
<p>You can perform bind and define operations on <code>CLOB</code> and <code>BLOB</code> columns in C applications using the data interface for LOBs in OCI. Doing so, enables you to insert or select out data in a LOB column without using a LOB locator as follows:</p>
<ul>
<li>
<p>Using a bind variable associated with a LOB column to insert character data into a <code>CLOB</code>, or <code>RAW</code> data into a <code>BLOB</code>.</p>
</li>
<li>
<p>Using a define operation to define an output buffer in your application that holds character data selected from a <code>CLOB</code>, or <code>RAW</code> data selected from a <code>BLOB</code>.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="adlob_data_interface.htm#g1029381">Chapter 20, "Data Interface for Persistent LOBs"</a> for more information on implicit assignment of LOBs to other data types.</div>
</li>
</ul>
</div>
<!-- class="sect2" -->
<a id="i1010483"></a>
<div id="ADLOB45138" class="sect2">
<h3 class="sect2">Using the LOB Locator to Access and Modify LOB Values</h3>
<p>The value of a LOB instance stored in the database can be accessed through a LOB locator, a reference to the location of the LOB value. Database tables store only locators in <code>CLOB</code>, <code>BLOB</code>, <code>NCLOB</code> and <code>BFILE</code> columns. Note the following with respect to LOB locators and values:</p>
<ul>
<li>
<p>To access or manipulate a LOB value, you pass the LOB locator to the various LOB APIs.</p>
</li>
<li>
<p>A LOB locator can be assigned to any LOB instance of the same type.</p>
</li>
<li>
<p>The characteristics of a LOB as being temporary or persistent have nothing to do with the locator. The characteristics of temporary or persistent apply only to the LOB instance.</p>
</li>
</ul>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="i1007838"></a>
<div id="ADLOB45139" class="sect1">
<h2 class="sect1">LOB <a id="sthref38"></a><a id="sthref39"></a>Locators and BFILE Locators</h2>
<p>There are differences between the semantics of locators for LOB types <code>BLOB</code>, <code>CLOB</code>, and <code>NCLOB</code> on one hand, and the semantics of locators for the <code>BFILE</code> type on the other hand:</p>
<ul>
<li>
<p><span class="bold"><a id="sthref40"></a></span>For LOB types <code>BLOB</code>, <code>CLOB</code>, and <code>NCLOB</code>, the LOB column stores a locator to the LOB value. Each LOB instance has its own distinct LOB locator and also a distinct copy of the LOB value.</p>
</li>
<li>
<p><span class="bold"><a id="sthref41"></a><a id="sthref42"></a></span>For initialized <code>BFILE</code> columns, the row stores a locator to the external operating system file that holds the value of the <code>BFILE</code>. Each <code>BFILE</code> instance in a given row has its own distinct locator; however, two different rows can contain a <code>BFILE</code> locator that points to the same operating system file.</p>
</li>
</ul>
<p>Regardless of where the value of a LOB is stored, a locator is stored in the table row of any initialized LOB column. Note that when the term locator is used without an identifying prefix term, it refers to both LOB locators and <code>BFILE</code> locators. Also, when you select a LOB from a table, the LOB returned is always a temporary LOB. For more information on working with locators for temporary LOBs, see <a href="adlob_sql_semantics.htm#i1012891">"LOBs Returned from SQL Functions"</a>.</p>
<div id="ADLOB45140" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref43"></a>
<h3 class="sect2"><a id="sthref44"></a><a id="sthref45"></a>Table print_media</h3>
<p>The table <code>print_media</code> of the Oracle Database Sample Schema <code>PM</code>, is used in many examples in this documentation and is defined as:</p>
<pre>
CREATE TABLE print_media
    ( product_id        NUMBER(6)
    , ad_id             NUMBER(6)
    , ad_composite      BLOB
    , ad_sourcetext     CLOB
    , ad_finaltext      CLOB
    , ad_fltextn        NCLOB
    , ad_textdocs_ntab  textdoc_tab
    , ad_photo          BLOB
    , ad_graphic        BFILE
    , ad_header         adheader_typ
    ) NESTED TABLE ad_textdocs_ntab STORE AS textdocs_nestedtab;
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="adlob_ddl.htm#i1007083">"Creating a Table Containing One or More LOB Columns"</a> for the details of how <code>print_media</code> and its associated tables and files are created.</div>
</div>
<!-- class="sect2" -->
<a id="i1006167"></a>
<div id="ADLOB45141" class="sect2">
<h3 class="sect2"><a id="sthref46"></a><a id="sthref47"></a><a id="sthref48"></a>Initializing a LOB Column to Contain a Locator</h3>
<p>Any LOB instance that is <code>NULL</code> does not have a locator. Before you can pass a LOB instance to any LOB API routine, the instance must contain a locator. For example, you can select a <code>NULL</code> LOB from a row, but you cannot pass the instance to the PL/SQL DBMS_LOB.READ procedure. The following sub-sections describe how to initialize a persistent LOB column and how to initialize a <code>BFILE</code> column.</p>
<div id="ADLOB45142" class="sect3"><a id="sthref49"></a>
<h4 class="sect3"><a id="sthref50"></a><a id="sthref51"></a>Initializing a Persistent LOB Column</h4>
<p>Before you can start writing data to a persistent LOB using the supported programmatic environment interfaces (PL/SQL, OCI, OCCI, Pro*C/C++, Pro*COBOL, Visual Basic, Java, or OLEDB), the LOB column/attribute must be made non-<code>NULL</code>, that is, it must contain a locator.</p>
<p>You can accomplish this by initializing the persistent LOB to empty in an <code>INSERT</code>/<code>UPDATE</code> statement using the functions <code>EMPTY_BLOB</code> for <code>BLOB</code>s or <code>EMPTY_CLOB</code> for <code>CLOB</code>s and <code>NCLOB</code>s.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
You can use SQL to populate a LOB column with data even if it contains a <code>NULL</code> value.</div>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="adlob_tables.htm#g1000000">Chapter 11, "LOB Storage"</a> for more information on initializing LOB columns.</div>
<p>Running the <code>EMPTY_BLOB()</code> or <code>EMPTY_CLOB()</code> function in and of itself does not raise an exception. However, using a LOB locator that was set to empty to access or manipulate the LOB value in any PL/SQL <code>DBMS_LOB</code> or OCI function raises an exception.</p>
<p>Valid places where <span class="italic">empty</span> LOB locators may be used include the <code>VALUES</code> clause of an <code>INSERT</code> statement and the <code>SET</code> clause of an <code>UPDATE</code> statement.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="adlob_bfile_ops.htm#i1006270">"Directory Objects"</a> for details of <code>CREATE DIRECTORY</code> and <code>BFILENAME</code> usage</p>
</li>
<li>
<p><code>CREATE</code> <code>DIRECTORY</code> statement in <a class="olink REFRN" href="../../server.112/e40402/toc.htm"><span class="italic">Oracle Database Reference</span></a>. for more information about creating a directory object</p>
</li>
<li>
<p><a class="olink SQLRF" href="../../server.112/e41084/toc.htm"><span class="italic">Oracle Database SQL Language Reference</span></a>, CREATE DIRECTORY statement</p>
</li>
</ul>
</div>
<div class="infobox-note">
<p class="notep1">Note:</p>
Character strings are inserted using the default character set for the instance.</div>
<p>The following <code>INSERT</code> statement in the <code>PM</code>, table <code>print_media</code>:</p>
<ul>
<li>
<p>Populates <code>ad_sourcetext</code> with the character string 'my Oracle',</p>
</li>
<li>
<p>Sets <code>ad_composite</code><span class="italic">,</span> <code>ad_finaltext</code><span class="italic">,</span> and <code>ad_fltextn</code> to an empty value,</p>
</li>
<li>
<p>Sets <code>ad_photo</code> to <code>NULL</code>, and</p>
</li>
<li>
<p>Initializes <code>ad_graphic</code> to point to the file <code>my_picture</code> located under the logical directory <code>my_directory_object</code>.</p>
</li>
</ul>
<pre>
CREATE OR REPLACE DIRECTORY my_directory_object AS 'oracle/work/tklocal';
INSERT INTO print_media VALUES (1726, 1, EMPTY_BLOB(), 
    'my Oracle', EMPTY_CLOB(), EMPTY_CLOB(),
    NULL, NULL, BFILENAME('my_directory_object', 'my_picture'), NULL);
</pre>
<p>Similarly, the LOB attributes for the <code>ad_header</code> column in <code>print_media</code> can be initialized to <code>NULL</code>, empty, or a character/raw literal, which is shown in the following statement:</p>
<pre>
INSERT INTO print_media (product_id, ad_id, ad_header) 
    VALUES (1726, 1, adheader_typ('AD FOR ORACLE', sysdate, 
    'Have Grid', EMPTY_BLOB()));
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="adlob_ddl.htm#i1007251">"Inserting a Row by Selecting a LOB From Another Table"</a></p>
</li>
<li>
<p><a href="adlob_ddl.htm#g1012364">"<span class="bold">Inserting a LOB Value Into a Table</span>"</a></p>
</li>
<li>
<p><a href="adlob_ddl.htm#i1008129">"Inserting a Row by Initializing a LOB Locator Bind Variable"</a></p>
</li>
<li>
<p><a href="adlob_api_overview.htm#i1032166">"OCILobLocator Pointer Assignment"</a> for details on LOB locator semantics in OCI</p>
</li>
</ul>
</div>
</div>
<!-- class="sect3" -->
<div id="ADLOB45143" class="sect3"><a id="sthref52"></a>
<h4 class="sect3">Initializing BFILEs</h4>
<p>Before you can access <code>BFILE</code> values using LOB APIs, the <code>BFILE</code> column or attribute must be made non-<code>NULL</code>. You can initialize the <code>BFILE</code> column to point to an external operating system file by using the <a id="sthref53"></a><code>BFILENAME</code> function.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="adlob_bfile_ops.htm#i1037372">"Accessing BFILEs"</a> for more information on initializing BFILE columns.</div>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="i1010368"></a>
<div id="ADLOB45144" class="sect1">
<h2 class="sect1">Accessing LOBs</h2>
<p>You can access a LOB instance using the following techniques:</p>
<ul>
<li>
<p><a href="#i1008511">Accessing a LOB Using SQL</a></p>
</li>
<li>
<p><a href="#i1010731">Accessing a LOB Using the Data Interface</a></p>
</li>
<li>
<p><a href="#i1010723">Accessing a LOB Using the Locator Interface</a></p>
</li>
</ul>
<a id="i1008511"></a>
<div id="ADLOB45145" class="sect2">
<h3 class="sect2">Accessing a LOB Using SQL</h3>
<p>Support for columns that use LOB data types is built into many SQL functions. This support enables you to use SQL semantics to access LOB columns in SQL. In most cases, you can use the same SQL semantics on a LOB column that you would use on a <code>VARCHAR2</code> column.</p>
<div class="infoboxnotealso">
<p class="notep1"><span class="bold">See Also</span>:</p>
For details on SQL semantics support for LOBs, see <a href="adlob_sql_semantics.htm#BABBFDDF">Chapter 16, "SQL Semantics and LOBs"</a>.</div>
</div>
<!-- class="sect2" -->
<a id="i1010731"></a>
<div id="ADLOB45146" class="sect2">
<h3 class="sect2">Accessing a LOB Using the Data Interface</h3>
<p>You can select a LOB directly into <code>CHAR</code> or <code>RAW</code> buffers using the LONG-to-LOB API in OCI and PL/SQL. In the following PL/SQL example, <code>ad_finaltext</code> is selected into a <code>VARCHAR2</code> buffer <code>final_ad</code>.</p>
<pre>
DECLARE
    final_ad VARCHAR(32767);
BEGIN
    SELECT ad_finaltext INTO final_ad FROM print_media
        WHERE product_id = 2056 and ad_id = 12001 ; 
    /* PUT_LINE can only output up to 255 characters at a time  */
    ...
    DBMS_OUTPUT.PUT_LINE(final_ad);
    /* more calls to read final_ad */
    ...
END;
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
For more details on accessing LOBs using the data interface, see <a href="adlob_data_interface.htm#g1029381">Chapter 20, "Data Interface for Persistent LOBs"</a>.</div>
</div>
<!-- class="sect2" -->
<a id="i1010723"></a>
<div id="ADLOB45147" class="sect2">
<h3 class="sect2"><a id="sthref54"></a>Accessing a LOB Using the Locator Interface</h3>
<p>You can access and manipulate a LOB instance by passing the LOB locator to the LOB APIs supplied with the database. An extensive set of LOB APIs is provided with each supported programmatic environment. In OCI, a LOB locator is mapped to a locator pointer which is used to access the LOB value.</p>
<div class="infoboxnotealso">
<p class="notep1">Note:</p>
In all environments, including OCI, the LOB APIs operate on the LOB value implicitly&mdash;there is no requirement to dereference the LOB locator.</div>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="adlob_api_overview.htm#g1060414">Chapter 13, "Overview of Supplied LOB APIs"</a></p>
</li>
<li>
<p><a href="adlob_api_overview.htm#i1032166">"OCILobLocator Pointer Assignment"</a> for details on LOB locator semantics in OCI</p>
</li>
</ul>
</div>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="i1006278"></a>
<div id="ADLOB2010" class="sect1">
<h2 class="sect1">LOB Rules and Restrictions<a id="sthref55"></a><a id="sthref56"></a></h2>
<p>This section provides details on LOB rules and restrictions.</p>
<div id="ADLOB45148" class="sect2"><a id="sthref57"></a>
<h3 class="sect2">Rules for LOB Columns</h3>
<p>LOB columns are subject to the following rules and restrictions:</p>
<ul>
<li>
<p>You cannot specify a LOB as a primary key column.</p>
</li>
<li>
<p>Oracle Database has limited support for remote LOBs. Remote LOBs are supported in three ways.</p>
<p><span class="bold">1. Create table as select or insert as select.</span></p>
<pre>
CREATE TABLE t AS SELECT * FROM table1@remote_site;
INSERT INTO t SELECT * FROM table1@remote_site;
UPDATE t SET lobcol = (SELECT lobcol FROM table1@remote_site);
INSERT INTO table1@remote_site SELECT * FROM local_table;
UPDATE table1@remote_site SET lobcol = (SELECT lobcol FROM local_table);
DELETE FROM table1@remote_site <span class="italic">&lt;WHERE clause involving non_lob_columns&gt;</span>
</pre>
<p>In statements structured like the preceding examples, only standalone LOB columns are allowed in the select list.</p>
<p><span class="bold">2. Functions on remote LOBs returning scalars.</span> SQL and PL/SQL functions having a LOB parameter and returning a scalar data type are supported. Other SQL functions and <code>DBMS_LOB</code> APIs are not supported for use with remote LOB columns. For example, the following statement is supported:</p>
<pre>
CREATE TABLE tab AS SELECT DBMS_LOB.GETLENGTH@dbs2(clob_col) len FROM tab@dbs2;
CREATE TABLE tab AS SELECT LENGTH(clob_col) len FROM tab@dbs2;
</pre>
<p>However, the following statement is not supported because <code>DBMS_LOB.SUBSTR</code> returns a LOB:</p>
<pre>
CREATE TABLE tab AS SELECT DBMS_LOB.SUBSTR(clob_col) from tab@dbs2; 
</pre>
<p><span class="bold">3. Data Interface for remote LOBs.</span> You can insert a character or binary buffer into a remote <code>CLOB</code> or <code>BLOB</code>, and select a remote <code>CLOB</code> or <code>BLOB</code> into a character or binary buffer. For example (in PL/SQL):</p>
<pre>
SELECT clobcol1, type1.blobattr INTO varchar_buf1, raw_buf2 FROM
   table1@remote_site;
INSERT INTO table1@remotesite (clobcol1, type1.blobattr) VALUES varchar_buf1,
   raw_buf2;
INSERT INTO table1@remotesite (lobcol) VALUES ('test');
UPDATE table1 SET lobcol = 'xxx';
</pre>
<p>These are the only supported syntax involving LOBs in remote tables. No other usage is supported.</p>
</li>
</ul>
<ul>
<li>
<p>Clusters cannot contain LOBs, either as key or nonkey columns.</p>
</li>
<li>
<p>The following data structures are supported only as temporary instances. You cannot store these instances in database tables: <a id="sthref58"></a></p>
<ul>
<li>
<p><code>VARRAY</code> of any LOB type</p>
</li>
<li>
<p><code>VARRAY</code> of any type containing a LOB type, such as an object type with a LOB attribute</p>
</li>
<li>
<p><code>ANYDATA</code> of any LOB type</p>
</li>
<li>
<p><code>ANYDATA</code> of any type containing a LOB</p>
</li>
</ul>
</li>
<li>
<p>You cannot specify LOB columns in the <code>ORDER</code> <code>BY</code> clause of a query, or in the <code>GROUP</code> <code>BY</code> clause of a query or in an aggregate function.</p>
</li>
<li>
<p>You cannot specify a LOB column in a <code>SELECT</code>... <code>DISTINCT</code> or <code>SELECT</code>... <code>UNIQUE</code> statement or in a join. However, you can specify a LOB attribute of an object type column in a <code>SELECT</code>... <code>DISTINCT</code> statement or in a query that uses the <code>UNION</code> or <code>MINUS</code> set operator if the column's object type has a <code>MAP</code> or <code>ORDER</code> function defined on it.</p>
</li>
<li>
<p>The first (<code>INITIAL</code>) extent of a LOB segment must contain at least three database blocks.</p>
</li>
<li>
<p>The minimum extent size is 14 blocks. For an 8K block size (the default), this is equivalent to 112K.</p>
</li>
<li>
<p>When creating an <code>AFTER UPDATE</code> DML trigger, you cannot specify a LOB column in the <code>UPDATE</code> <code>OF</code> clause.</p>
</li>
<li>
<p>You cannot specify a LOB column as part of an index key. However, you can specify a LOB column in the indextype specification of a domain index. In addition, Oracle Text lets you define an index on a <code>CLOB</code> column.</p>
</li>
<li>
<p>In an <code>INSERT</code>... <code>AS</code> <code>SELECT</code> operation, you can bind up to 4000 bytes of data to LOB columns and attributes.</p>
</li>
<li>
<p>If a table has both <code>LONG</code> and LOB columns, you cannot bind more than 4000 bytes of data to both the <code>LONG</code> and LOB columns in the same SQL statement. However, you can bind more than 4000 bytes of data to either the <code>LONG</code> or the LOB column.</p>
</li>
</ul>
<div class="infobox-note">
<p class="notep1">Note:</p>
For a table on which you have defined an <code>AFTER</code> <code>UPDATE</code> DML trigger, if you use OCI functions or <code>DBMS_LOB</code> package to change the value of a LOB column or the LOB attribute of an object type column, the database does not fire the DML trigger.</div>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="adlob_smart.htm#g1024256">Chapter 4, "Using Oracle SecureFiles LOBs"</a> for the SecureFiles capabilities (encryption, compression, and deduplication).</p>
</li>
<li>
<p><a href="adlob_tables.htm#i1007002">"Restrictions for LOBs in Partitioned Index-Organized Tables"</a></p>
</li>
<li>
<p><a href="adlob_long_lob.htm#g1029181">Chapter 18, "Migrating Columns from LONGs to LOBs"</a> under <a href="adlob_long_lob.htm#i1022886">"Migrating Applications from LONGs to LOBs"</a>, describes LONG to LOB migration limitations for clustered tables, replication, triggers, domain indexes, and function-based indexes.</p>
</li>
<li>
<p><a href="adlob_sql_semantics.htm#i1010111">"Unsupported Use of LOBs in SQL"</a> for restrictions on SQL semantics.</p>
</li>
</ul>
<ul>
<li>
<p>For details on the INITIAL extent of a LOB segment, see <a href="adlob_tables.htm#i1012593">"Restriction on First Extent of a LOB Segment"</a> .</p>
</li>
<li>
<p>LOBs in partitioned index-organized tables are subject to other restrictions. See <a href="adlob_tables.htm#i1007002">"Restrictions for LOBs in Partitioned Index-Organized Tables"</a> for more information.</p>
</li>
<li>
<p><a href="adlob_data_interface.htm#CACIFCJF">"Using the Data Interface with Remote LOBs"</a></p>
</li>
</ul>
</div>
</div>
<!-- class="sect2" -->
<div id="ADLOB45149" class="sect2"><a id="sthref59"></a>
<h3 class="sect2">Restrictions for LOB Operations</h3>
<p>Other general LOB restrictions include the following:</p>
<ul>
<li>
<p>In SQL Loader, A field read from a LOB cannot be used as an argument to a clause. See <a href="adlob_managing.htm#i1009613">"Database Utilities for Loading Data into LOBs"</a>.</p>
</li>
<li>
<p>Session <span class="bolditalic"><a id="sthref60"></a><a id="sthref61"></a><a id="sthref62"></a></span>migration is not supported for <code>BFILE</code>s in shared server (multithreaded server) mode. This implies that operations on open <code>BFILE</code>s can persist beyond the end of a call to a shared server. In shared server sessions, <code>BFILE</code> operations are bound to one shared server, they cannot migrate from one server to another.</p>
</li>
<li>
<p>Case-insensitive searches on <code>CLOB</code> columns often do not succeed. For example, to do a case-insensitive search on a <code>CLOB</code> column:</p>
<pre>
ALTER SESSION SET NLS_COMP=LINGUISTIC;
ALTER SESSION SET NLS_SORT=BINARY_CI;
SELECT * FROM ci_test WHERE LOWER(clob_col) LIKE 'aa%';
</pre>
<p>The select fails without the <code>LOWER</code> function. Oracle Text does do case-insensitive searches. Use <code>DBMS_LOB.INSTR()</code> as another alternative. See <a href="adlob_sql_semantics.htm#BABBFDDF">Chapter 16, "SQL Semantics and LOBs"</a>.</p>
</li>
</ul>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" --></div>
<!-- class="chapter" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment898">
<tr>
<td class="cellalignment907">
<table class="cellalignment903">
<tr>
<td class="cellalignment902"><a href="part_start.htm"><img width="24" height="24" src="../../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment902"><a href="adlob_managing.htm"><img width="24" height="24" src="../../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;1996, 2013,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment909">
<table class="cellalignment901">
<tr>
<td class="cellalignment902"><a href="../../index.htm"><img width="24" height="24" src="../../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment902"><a href="../../nav/portal_booklist.htm"><img width="24" height="24" src="../../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment902"><a href="toc.htm"><img width="24" height="24" src="../../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment902"><a href="index.htm"><img width="24" height="24" src="../../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment902"><a href="../../nav/mindx.htm"><img width="24" height="24" src="../../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment902"><a href="../../dcommon/html/feedback.htm"><img width="24" height="24" src="../../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>
</body>
</html>
