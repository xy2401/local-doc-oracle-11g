<!DOCTYPE html>
<html lang="en" >
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1">
<meta charset="utf-8">
<title>Accessing the Repository using RESOURCE_VIEW and PATH_VIEW</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Version 5.1.2 Build 748" />
<meta name="description" content="This manual describes Oracle XML&nbsp;DB. It includes guidelines and examples for storing, generating, accessing, searching, validating, transforming, evolving, and indexing XML data in Oracle Database." />
<meta name="dcterms.created" content="2014-02-20T9:56:16Z" />
<meta name="robots" content="all" />
<meta name="dcterms.title" content="XML DB Developer's Guide" />
<meta name="dcterms.identifier" content="E23094-04" />
<meta name="dcterms.isVersionOf" content="ADXDB" />
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;2002, 2014,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved." />
<link rel="Start" href="../../index.htm" title="Home" type="text/html" />
<link rel="Copyright" href="../../dcommon/html/cpyr.htm" title="Copyright" type="text/html" />

<script type="application/javascript"  src="../../dcommon/js/headfoot.js"></script>
<script type="application/javascript"  src="../../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html" />
<link rel="Index" href="index.htm" title="Index" type="text/html" />
<link rel="Prev" href="xdb17ver.htm" title="Previous" type="text/html" />
<link rel="Next" href="xdb19rpl.htm" title="Next" type="text/html" />
<link rel="alternate" href="../e23094.pdf" title="PDF version" type="application/pdf" />
<link rel="schema.dcterms" href="http://purl.org/dc/terms/" />
<link rel="stylesheet" href="../../dcommon/css/fusiondoc.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/header.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/footer.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/fonts.css">
<link rel="stylesheet" href="../../dcommon/css/foundation.css">
<link rel="stylesheet" href="../../dcommon/css/codemirror.css">
<link rel="stylesheet" type="text/css" title="Default" href="../../nav/css/html5.css">
<link rel="stylesheet" href="../../dcommon/css/respond-480-tablet.css">
<link rel="stylesheet" href="../../dcommon/css/respond-768-laptop.css">
<link rel="stylesheet" href="../../dcommon/css/respond-1140-deskop.css">
<script type="application/javascript" src="../../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">37/54</span> <!-- End Header -->
<div id="ADXDB2200" class="chapter"><a id="g1034945"></a>
<h1 class="chapter"><span class="secnum">25</span> Accessing the Repository using <a id="sthref1481"></a><a id="sthref1482"></a>R<a id="sthref1483"></a>ESOURCE_VIEW and PATH_VIEW</h1>
<p>This chapter describes the predefined public views, <code>RESOURCE_VIEW</code> and <code>PATH_VIEW</code>, that provide access to Oracle XML&nbsp;DB repository data. It discusses Oracle SQL functions <code>under_path</code> and <code>equals_path</code> that query resources based on their path names and <code>path</code> and <code>depth</code> that return resource path names and depths, respectively.</p>
<p>This chapter contains these topics:</p>
<ul>
<li>
<p><a href="#i1028397">Overview of Oracle XML&nbsp;DB RESOURCE_VIEW and PATH_VIEW</a></p>
</li>
<li>
<p><a href="#i1028402">RESOURCE_VIEW and PATH_VIEW SQL Functions</a></p>
</li>
<li>
<p><a href="#i1029458">Using RESOURCE_VIEW and PATH_VIEW SQL Functions</a></p>
</li>
<li>
<p><a href="#i1027109">Working with Multiple Oracle XML&nbsp;DB Resources</a></p>
</li>
<li>
<p><a href="#i1030416">Performance Tuning of Oracle XML&nbsp;DB Repository Operations</a></p>
</li>
<li>
<p><a href="#i1030834">Searching for Resources using Oracle Text</a></p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a class="olink REFRN29079" href="../../server.112/e40402/statviews_5151.htm#REFRN29079"><span class="italic">Oracle Database Reference</span></a> for more information about view <code>PATH_VIEW</code></p>
</li>
<li>
<p><a class="olink REFRN29080" href="../../server.112/e40402/statviews_5169.htm#REFRN29080"><span class="italic">Oracle Database Reference</span></a> for more information about view <code>RESOURCE_VIEW</code></p>
</li>
</ul>
</div>
<a id="i1028397"></a>
<div id="ADXDB5388" class="sect1">
<h2 class="sect1">Overview of Oracle XML&nbsp;DB RESOURCE_VIEW and PATH_VIEW</h2>
<p><a href="#i1029352">Figure 25-1</a> shows how Oracle XML&nbsp;DB <code>RESOURCE_VIEW</code> and <code>PATH_VIEW</code> provide a mechanism for using SQL to access data stored in Oracle XML&nbsp;DB Repository. Data stored in the repository using protocols such as FTP and WebDAV, or using application program interfaces (APIs), can be accessed in SQL using <code>RESOURCE_VIEW</code> values and <code>PATH_VIEW</code> values.</p>
<p><code>RESOURCE_VIEW</code> consists of a resource, itself an <code>XMLType</code>, that contains the name of the resource that can be queried, its ACLs, and its properties, static or extensible.</p>
<ul>
<li>
<p>If the content comprising the resource is XML data stored somewhere in an <code>XMLType</code> table or view, then the <code>RESOURCE_VIEW</code> points to the <code>XMLType</code> row that stores the content.</p>
</li>
<li>
<p>If the content is not XML data, then the <code>RESOURCE_VIEW</code> stores it as a LOB.</p>
</li>
</ul>
<div class="infobox-note">
<p class="notep1">Note:</p>
As of Oracle Database&nbsp;Release 11.2.0.1.0, repository content stored in line as a LOB uses SecureFile LOB storage. Prior to that, it used BasicFile LOB storage.</div>
<p>Parent-child relationships between folders (necessary to construct the hierarchy) are maintained and traversed efficiently using the hierarchical repository index. Text indexes are available to search the properties of a resource, and internal B-tree indexes over Names and ACLs speed up access to these attributes of the Resource <code>XMLType</code>.</p>
<p><code>RESOURCE_VIEW</code> and <code>PATH_VIEW</code>, along with PL/SQL package <code>DBMS_XDB</code>, provide all <a id="sthref1484"></a>query-based access to Oracle XML&nbsp;DB and DML functionality that is available through the API.</p>
<p>The base table for <code>RESOURCE_VIEW</code> is <code>XDB.XDB$RESOURCE</code>. Access this table only through <code>RESOURCE_VIEW</code> or the <code>DBMS_XDB</code> API.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="xdb03usg.htm#g1055369">Chapter 3, "Using Oracle XML&nbsp;DB"</a></div>
<div id="ADXDB5389" class="figure">
<p class="titleinfigure"><a id="i1029352"></a>Figure 25-1 Accessing Repository Resources using RESOURCE_VIEW and PATH_VIEW</p>
<img width="405" height="384" src="img/adxdb034.gif" alt="Description of Figure 25-1 follows" /><br />
<a id="sthref1485" href="img_text/adxdb034.htm">Description of "Figure 25-1 Accessing Repository Resources using RESOURCE_VIEW and PATH_VIEW"</a><br />
<br /></div>
<!-- class="figure" -->
<div class="infobox-note">
<p class="notep1">Note:</p>
Neither <code>RESOURCE_VIEW</code> nor <code>PATH_VIEW</code> contains the <span class="italic">root</span> folder (<code>/</code>) resource. All other repository resources are included.</div>
<div id="ADXDB5390" class="sect2"><a id="sthref1486"></a>
<h3 class="sect2">RESOURCE_VIEW Definition and Structure</h3>
<p>The <code>RESOURCE_VIEW</code> contains one row for each resource in Oracle XML&nbsp;DB Repository (except for the root folder resource). <a href="#CHDBBIBF">Table 25-1</a> describes its structure.</p>
<div id="ADXDB5391" class="tblformal">
<p class="titleintable"><a id="sthref1487"></a><a id="CHDBBIBF"></a>Table 25-1 Structure of RESOURCE_VIEW</p>
<table class="cellalignment1026" title="Structure of RESOURCE_VIEW" summary="Structure of RESOURCE_VIEW" dir="ltr">
<thead>
<tr class="cellalignment1020">
<th class="cellalignment1027" id="r1c1-t6">Column</th>
<th class="cellalignment1027" id="r1c2-t6">Data Type</th>
<th class="cellalignment1027" id="r1c3-t6">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1020">
<td class="cellalignment1028" id="r2c1-t6" headers="r1c1-t6">
<p><code>RES</code></p>
</td>
<td class="cellalignment1028" headers="r2c1-t6 r1c2-t6">
<p><code>XMLType</code></p>
</td>
<td class="cellalignment1028" headers="r2c1-t6 r1c3-t6">
<p>A resource in the repository (except for the root folder resource)</p>
</td>
</tr>
<tr class="cellalignment1020">
<td class="cellalignment1028" id="r3c1-t6" headers="r1c1-t6">
<p><code>ANY_PATH</code></p>
</td>
<td class="cellalignment1028" headers="r3c1-t6 r1c2-t6">
<p><code>VARCHAR2</code></p>
</td>
<td class="cellalignment1028" headers="r3c1-t6 r1c3-t6">
<p>An (absolute) path to the resource</p>
</td>
</tr>
<tr class="cellalignment1020">
<td class="cellalignment1028" id="r4c1-t6" headers="r1c1-t6">
<p><code>RESID</code></p>
</td>
<td class="cellalignment1028" headers="r4c1-t6 r1c2-t6">
<p><code>RAW</code></p>
</td>
<td class="cellalignment1028" headers="r4c1-t6 r1c3-t6">
<p>Resource OID, which is a unique handle to the resource</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="sect2" -->
<div id="ADXDB5392" class="sect2"><a id="sthref1488"></a>
<h3 class="sect2">PATH_VIEW Definition and Structure</h3>
<p>The <code>PATH_VIEW</code> contains one row for each unique path to access a resource in Oracle XML&nbsp;DB Repository (except for the root folder resource). Each resource may have multiple paths, also called <span class="glossaryterm">links</span>. <a href="#CHDICFHF">Table 25-2</a> describes its structure.</p>
<div id="ADXDB5393" class="tblformal">
<p class="titleintable"><a id="sthref1489"></a><a id="CHDICFHF"></a>Table 25-2 Structure of PATH_VIEW</p>
<table class="cellalignment1026" title="Structure of PATH_VIEW" summary="Structure of RESOURCE_VIEW" dir="ltr">
<thead>
<tr class="cellalignment1020">
<th class="cellalignment1027" id="r1c1-t7">Column</th>
<th class="cellalignment1027" id="r1c2-t7">Data Type</th>
<th class="cellalignment1027" id="r1c3-t7">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1020">
<td class="cellalignment1028" id="r2c1-t7" headers="r1c1-t7">
<p><code>PATH</code></p>
</td>
<td class="cellalignment1028" headers="r2c1-t7 r1c2-t7">
<p><code>VARCHAR2</code></p>
</td>
<td class="cellalignment1028" headers="r2c1-t7 r1c3-t7">
<p>An (absolute) path to repository resource <code>RES</code></p>
</td>
</tr>
<tr class="cellalignment1020">
<td class="cellalignment1028" id="r3c1-t7" headers="r1c1-t7">
<p><code>RES</code></p>
</td>
<td class="cellalignment1028" headers="r3c1-t7 r1c2-t7">
<p><code>XMLType</code></p>
</td>
<td class="cellalignment1028" headers="r3c1-t7 r1c3-t7">
<p>The resource referred to by column <code>PATH</code></p>
</td>
</tr>
<tr class="cellalignment1020">
<td class="cellalignment1028" id="r4c1-t7" headers="r1c1-t7">
<p><code>LINK</code></p>
</td>
<td class="cellalignment1028" headers="r4c1-t7 r1c2-t7">
<p><code>XMLType</code></p>
</td>
<td class="cellalignment1028" headers="r4c1-t7 r1c3-t7">
<p>Link property</p>
</td>
</tr>
<tr class="cellalignment1020">
<td class="cellalignment1028" id="r5c1-t7" headers="r1c1-t7">
<p><code>RESID</code></p>
</td>
<td class="cellalignment1028" headers="r5c1-t7 r1c2-t7">
<p><code>RAW</code></p>
</td>
<td class="cellalignment1028" headers="r5c1-t7 r1c3-t7">
<p>Resource OID</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<p><a href="#i1027962">Figure 25-2</a> illustrates the structure of <code>RESOURCE_VIEW</code> and <code>PATH_VIEW</code>.</p>
<p>The path in the <code>RESOURCE_VIEW</code> is an arbitrary one and one of the accessible paths that can be used to access that resource. Oracle SQL function <code>under_path</code> lets applications search for resources that are contained (recursively) within a particular folder, get the resource depth, and so on. Each row in the <code>PATH_VIEW</code> and <code>RESOURCE_VIEW</code> columns is of <code>XMLType</code>. DML on repository views can be used to insert, rename, delete, and update resource properties and contents. Programmatic APIs must be used for some operations, such as creating links to existing resources.</p>
<p>Paths in the <code>ANY_PATH</code> column of the <code>RESOURCE_VIEW</code> and the <code>PATH</code> column in the <code>PATH_VIEW</code> are <span class="italic">absolute</span> paths: they start at the root.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
Test resource paths for equality using Oracle SQL function <code>equals_path</code>: <code>equals_path('/my/path') = 1</code>. Do <span class="italic">not</span> test <code>ANY_PATH</code> for equality against an absolute path: <code>ANY_PATH = '/my/path'</code>.</div>
<p>Paths returned by the <code>path</code> function are <span class="italic">relative</span> paths under the path name specified by function <code>under_path</code>. For example, if there are two resources referenced by path names <code>/a/b/c</code> and <code>/a/d</code>, respectively, then a <code>path</code> expression that retrieves paths under folder <code>/a</code> returns relative paths <code>b/c</code> and <code>d</code>.</p>
<p>When there are multiple hard links to the same resource, only paths under the path name specified by function <code>under_path</code> are returned. If <code>/a/b/c</code>, <code>/a/b/d</code>, and <code>/a/e</code> are all links to the same resource, then a query on <code>PATH_VIEW</code> that retrieves all of the paths under <code>/a/b</code> returns only <code>/a/b/c</code> and <code>/a/b/d</code>, not <code>/a/e</code>.</p>
<div id="ADXDB5394" class="figure">
<p class="titleinfigure"><a id="i1027962"></a>Figure 25-2 RESOURCE_VIEW and PATH_VIEW Structure</p>
<img width="497" height="132" src="img/adxdb032.gif" alt="Description of Figure 25-2 follows" /><br />
<a id="sthref1490" href="img_text/adxdb032.htm">Description of "Figure 25-2 RESOURCE_VIEW and PATH_VIEW Structure"</a><br />
<br /></div>
<!-- class="figure" --></div>
<!-- class="sect2" -->
<div id="ADXDB5395" class="sect2"><a id="sthref1491"></a>
<h3 class="sect2">Understanding the Difference Between RESOURCE_VIEW and PATH_VIEW</h3>
<p>Views <code>RESOURCE_VIEW</code> and <code>PATH_VIEW</code> differ as follows:</p>
<ul>
<li>
<p><code>PATH_VIEW</code> displays <span class="italic">all</span> the path names to a particular resource. <code>RESOURCE_VIEW</code> displays <span class="italic">one</span> of the possible path names to the resource</p>
</li>
<li>
<p><code>PATH_VIEW</code> also displays the properties of the link</p>
</li>
</ul>
<p><a href="#i1027970">Figure 25-3</a> illustrates this difference between <code>RESOURCE_VIEW</code> and <code>PATH_VIEW</code>.</p>
<p>Because many Internet applications only need one URL to access a resource, <code>RESOURCE_VIEW</code> is widely applicable.</p>
<p><code>PATH_VIEW</code> contains the <span class="italic">link</span> properties and resource properties, whereas the <code>RESOURCE_VIEW</code> only contains resource properties.</p>
<p>Whenever possible, use <code>RESOURCE_VIEW</code>, not <code>PATH_VIEW</code>, for better performance. Because it handles the information for multiple paths, <code>PATH_VIEW</code> access can be slower. If you use <code>RESOURCE_VIEW</code>, then the database can determine that only one path is needed, and the index can do less work to determine all the possible paths.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
When using the <code>RESOURCE_VIEW</code>, if you specify a path with functions <code>under_path</code> or <code>equals_path</code>, then they find the resource regardless of whether or not that path is the arbitrary one chosen to normally appear with that resource using <code>RESOURCE_VIEW</code>.</div>
<div id="ADXDB5396" class="figure">
<p class="titleinfigure"><a id="i1027970"></a>Figure 25-3 RESOURCE_VIEW and PATH_VIEW Explained</p>
<img width="636" height="341" src="img/adxdb018.gif" alt="Description of Figure 25-3 follows" /><br />
<a id="sthref1492" href="img_text/adxdb018.htm">Description of "Figure 25-3 RESOURCE_VIEW and PATH_VIEW Explained"</a><br />
<br /></div>
<!-- class="figure" --></div>
<!-- class="sect2" -->
<div id="ADXDB5397" class="sect2"><a id="sthref1493"></a>
<h3 class="sect2">Operations You Can Perform using UNDER_PATH and EQUALS_PATH</h3>
<p>You can perform the following operations using Oracle SQL functions <code>under_path</code> and <code>equals_path</code>:</p>
<ul>
<li>
<p>Given a path name:</p>
<ul>
<li>
<p>Get a resource or its OID</p>
</li>
<li>
<p>List the directory given by the path name</p>
</li>
<li>
<p>Create a resource</p>
</li>
<li>
<p>Delete a resource</p>
</li>
<li>
<p>Update a resource</p>
</li>
</ul>
</li>
<li>
<p>Given a condition that uses <code>under_path</code> or other SQL functions:</p>
<ul>
<li>
<p>Update resources</p>
</li>
<li>
<p>Delete resources</p>
</li>
<li>
<p>Get resources or their OID</p>
</li>
</ul>
</li>
</ul>
<p>See the <a href="#i1029458">"Using RESOURCE_VIEW and PATH_VIEW SQL Functions"</a> and <code>equals_path</code>.</p>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="i1028402"></a>
<div id="ADXDB5398" class="sect1">
<h2 class="sect1">RESOURCE_VIEW and PATH_VIEW SQL Functions</h2>
<p>This section describes Oracle SQL functions that are applicable to <code>RESOURCE_VIEW</code> and <code>PATH_VIEW</code>.</p>
<a id="i1029314"></a>
<div id="ADXDB5399" class="sect2">
<h3 class="sect2">UNDER_<a id="sthref1494"></a><a id="sthref1495"></a>PATH SQL Function</h3>
<p>Oracle SQL function <code>under_path</code> uses the hierarchical index of Oracle XML&nbsp;DB Repository to return the paths to all hard links under a particular path. This index is designed to speed access when traversing a path (the most common usage).</p>
<p>If the other parts of the query predicate are very selective, however, then a functional implementation of <code>under_path</code> can be chosen that walks back up the repository. This can be more efficient, because fewer links must be traversed. <a href="#BABIHCGH">Figure 25-4</a> shows the <code>under_path</code> syntax.</p>
<div id="ADXDB5400" class="figure">
<p class="titleinfigure"><a id="BABIHCGH"></a>Figure 25-4 UNDER_PATH Syntax</p>
<img width="683" height="46" src="img/under_path_condition.gif" alt="Description of Figure 25-4 follows" /><br />
<a id="sthref1496" href="img_text/under_path_condition.htm">Description of "Figure 25-4 UNDER_PATH Syntax"</a><br />
<br /></div>
<!-- class="figure" -->
<p><a href="#g1031254">Table 25-3</a> details the signature of Oracle SQL function <code>under_path</code>.</p>
<div id="ADXDB5401" class="tblhruleformal">
<p class="titleintable"><a id="sthref1497"></a><a id="g1031254"></a>Table 25-3 UNDER_PATH SQL Function Signature</p>
<table class="cellalignment1032" title=" UNDER_PATH SQL Function Signature" summary="This table describes the UNDER_PATH operator syntax for RESOURCE_VIEW and PATH_VIEW." dir="ltr">
<thead>
<tr class="cellalignment1020">
<th class="cellalignment1027" id="r1c1-t10">Syntax</th>
<th class="cellalignment1027" id="r1c2-t10">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1020">
<td class="cellalignment1028" id="r2c1-t10" headers="r1c1-t10">
<pre>
under_path(<span class="italic">resource_column</span>, <span class="italic">pathname</span>); 
</pre></td>
<td class="cellalignment1028" headers="r2c1-t10 r1c2-t10">
<p>Determines whether a resource is under a specified path.</p>
<p>Parameters:</p>
<ul>
<li>
<p><code><span class="codeinlineitalic">resource_column</span></code> &ndash;The column name or column alias of the <code>RESOURCE</code> column in the <code>PATH_VIEW</code> or <code>RESOURCE_VIEW.</code></p>
</li>
<li>
<p><code><span class="codeinlineitalic">pathname</span></code> &ndash; The path name to resolve.</p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment1020">
<td class="cellalignment1028" id="r3c1-t10" headers="r1c1-t10">
<pre>
under_path(<span class="italic">resource_column</span>, <span class="italic">depth</span>, <span class="italic">pathname</span>);
</pre></td>
<td class="cellalignment1028" headers="r3c1-t10 r1c2-t10">
<p>Determines whether a resource is under a specified path, with a depth argument to restrict the number of levels to search.</p>
<p>Parameters:</p>
<ul>
<li>
<p><code><span class="codeinlineitalic">resource_column</span></code> &ndash; The column name or column alias of the <code>RESOURCE</code> column in the <code>PATH_VIEW</code> or <code>RESOURCE_VIEW</code><code>.</code></p>
</li>
<li>
<p><code>depth</code> &ndash; The maximum depth to search. A nonnegative integer.</p>
</li>
<li>
<p><code><span class="codeinlineitalic">pathname</span></code> &ndash; The path name to resolve.</p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment1020">
<td class="cellalignment1028" id="r4c1-t10" headers="r1c1-t10">
<pre>
under_path(<span class="italic">resource_column</span>, <span class="italic">pathname</span>, <span class="italic">correlation</span>);
</pre></td>
<td class="cellalignment1028" headers="r4c1-t10 r1c2-t10">
<p>Determines if a resource is under a specified path, with a correlation argument for related SQL functions.</p>
<p>Parameters:</p>
<ul>
<li>
<p><code><span class="codeinlineitalic">resource_column</span></code> &ndash; The column name or column alias of the <code>RESOURCE</code> column in the <code>PATH_VIEW</code> or <code>RESOURCE_VIEW</code><code>.</code></p>
</li>
<li>
<p><code><span class="codeinlineitalic">pathname</span></code> &ndash; The path name to resolve.</p>
</li>
<li>
<p><code><span class="codeinlineitalic">correlation</span></code> &ndash; An integer that can be used to correlate <code>under_path</code> with related SQL functions (<code>path</code> and <code>depth</code>).</p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment1020">
<td class="cellalignment1028" id="r5c1-t10" headers="r1c1-t10">
<pre>
under_path(<span class="italic">resource_column</span>, <span class="italic">depth</span>, <span class="italic">pathname</span>, <span class="italic">correlation</span>);
</pre></td>
<td class="cellalignment1028" headers="r5c1-t10 r1c2-t10">
<p>Determines if a resource is under a specified path with a depth argument to restrict the number of levels to search, and with a correlation argument for related SQL functions.</p>
<p>Parameters:</p>
<ul>
<li>
<p><code><span class="codeinlineitalic">resource_column</span></code> &ndash; The column name or column alias of the <code>RESOURCE</code> column in the <code>PATH_VIEW</code> or <code>RESOURCE_VIEW</code>.</p>
</li>
<li>
<p><code><span class="codeinlineitalic">depth</span></code> &ndash; The maximum depth to search. A nonnegative integer.</p>
</li>
<li>
<p><code><span class="codeinlineitalic">pathname</span></code> &ndash; The path name to resolve.</p>
</li>
<li>
<p><code><span class="codeinlineitalic">correlation</span></code> &ndash; An integer that can be used to correlate <code>under_path</code> with related SQL functions (<code>path</code> and <code>depth</code>).</p>
</li>
</ul>
<p>Note that only one of the accessible paths to the resource must be under the path argument for a resource to be returned.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblhruleformal" -->
<div class="infobox-note">
<p class="notep1">Note:</p>
Function <code>under_path</code> does not follow weak links, because such traversal could lead to cycles. A weak-link argument to <code>under_path</code> is resolved correctly, but weak links are not followed when traversing resources under that path.</div>
</div>
<!-- class="sect2" -->
<a id="i1029318"></a>
<div id="ADXDB5402" class="sect2">
<h3 class="sect2">EQUALS_PATH SQL Function</h3>
<p>Oracle SQL function <code><a id="sthref1498"></a><a id="sthref1499"></a>equals_path</code> is used to find the resource with the specified path name. It is functionally equivalent to <code>under_path</code> with a depth restriction of zero.</p>
<pre>
equals_path(resource_column, pathname);
</pre>
<p>where:</p>
<ul>
<li>
<p><code>resource_column</code> is the column name or column alias of the <code>RESOURCE</code> column in <code>PATH_VIEW</code> or <code>RESOURCE_VIEW.</code></p>
</li>
<li>
<p><code>pathname</code> is the (absolute) path name to resolve. This can contain components that are hard or weak resource links.</p>
</li>
</ul>
<p><a href="#BABJBIAI">Figure 25-5</a> illustrates the complete <code>equals_path</code> syntax.</p>
<div id="ADXDB5403" class="figure">
<p class="titleinfigure"><a id="BABJBIAI"></a>Figure 25-5 EQUALS_PATH Syntax</p>
<img width="558" height="46" src="img/equals_path_condition.gif" alt="Description of Figure 25-5 follows" /><br />
<a id="sthref1500" href="img_text/equals_path_condition.htm">Description of "Figure 25-5 EQUALS_PATH Syntax"</a><br />
<br /></div>
<!-- class="figure" -->
<div class="infobox-note">
<p class="notep1">Note:</p>
<ul>
<li>
<p>Test resource paths for equality using Oracle SQL function <code>equals_path</code>: <code>equals_path('/my/path') = 1</code>. Do <span class="italic">not</span> test <code>ANY_PATH</code> for equality against an absolute path: <code>ANY_PATH = '/my/path'</code>.</p>
</li>
<li>
<p>Use bind variables, instead of hard-coded strings, with <code>equals_path</code>.</p>
</li>
</ul>
</div>
</div>
<!-- class="sect2" -->
<a id="i1028827"></a>
<div id="ADXDB5404" class="sect2">
<h3 class="sect2">PATH SQL Function</h3>
<p>Oracle SQL function <code><a id="sthref1501"></a><a id="sthref1502"></a>path</code> returns the relative path name of the resource under the specified <code>pathname</code> argument. Note that the path column in the <code>RESOURCE_VIEW</code> always contains the absolute path of the resource. The <code>path</code> syntax is:</p>
<pre>
path(correlation);
</pre>
<p>where:</p>
<ul>
<li>
<p><code>correlation</code> is an integer that can be used to correlate <code>under_path</code> with related SQL functions (<code>path</code> and <code>depth</code>).</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
If a path is not under the specified <code>pathname</code> argument, a <code>NULL</code> value is returned as the output of the current path.</div>
</li>
</ul>
<p><a href="#BABBDBAB">Figure 25-6</a> illustrates the <code>path</code> syntax.</p>
<div id="ADXDB5405" class="figure">
<p class="titleinfigure"><a id="BABBDBAB"></a>Figure 25-6 PATH Syntax</p>
<img width="254" height="27" src="img/path.gif" alt="Description of Figure 25-6 follows" /><br />
<a id="sthref1503" href="img_text/path.htm">Description of "Figure 25-6 PATH Syntax"</a><br />
<br /></div>
<!-- class="figure" --></div>
<!-- class="sect2" -->
<a id="i1028840"></a>
<div id="ADXDB5406" class="sect2">
<h3 class="sect2">DEPTH SQL Function</h3>
<p>Oracle SQL function <a id="sthref1504"></a><a id="sthref1505"></a><code>depth</code> returns the folder depth of the resource under the specified starting path.</p>
<pre>
depth(correlation);
</pre>
<p>where:</p>
<p><code>correlation</code> is an integer that can be used to correlate <code>under_path</code> with related SQL functions (<code>path</code> and <code>depth</code>).</p>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="i1029458"></a>
<div id="ADXDB5407" class="sect1">
<h2 class="sect1">Using RESOURCE_VIEW and PATH_VIEW SQL Functions</h2>
<p>The following <code>RESOURCE_VIEW</code> and <code>PATH_VIEW</code> examples use Oracle SQL functions <code>under_path</code>, <code>equals_path</code>, <code>path</code>, and <code>depth</code>.</p>
<div id="ADXDB5408" class="sect2"><a id="sthref1506"></a>
<h3 class="sect2">Accessing Repository Data Paths, Resources and Links: Examples</h3>
<p>The following examples illustrate how you can access paths, resources, and link properties in Oracle XML&nbsp;DB Repository. The first few examples use resources specified by the following paths:</p>
<pre>
/a/b/c
/a/b/c/d
/a/e/c
/a/e/c/d
</pre>
<p><a href="#CHDFJCAJ">Example 25-1</a> uses Oracle SQL function <code>path</code> to retrieve the <span class="italic">relative</span> paths under path <code>/a/b</code>.</p>
<div id="ADXDB5409" class="example">
<p class="titleinexample"><a id="CHDFJCAJ"></a>Example 25-1 Determining Paths Under a Path: Relative</p>
<pre>
SELECT <span class="bold">path(1)</span> FROM RESOURCE_VIEW WHERE under_path(RES, '/a/b', 1) = 1;
</pre>
<pre>
PATH(1)
-------
c
c/d

2 rows selected.
</pre></div>
<!-- class="example" -->
<p><a href="#CHDGBEFF">Example 25-2</a> uses <code>ANY_PATH</code> to retrieve the <span class="italic">absolute</span> paths under path <code>/a/b</code>.</p>
<div id="ADXDB5410" class="example">
<p class="titleinexample"><a id="CHDGBEFF"></a>Example 25-2 Determining Paths Under a Path: Absolute</p>
<pre>
SELECT <span class="bold">ANY_PATH</span> FROM RESOURCE_VIEW WHERE under_path(RES, '/a/b') = 1;
</pre>
<pre>
ANY_PATH
--------
/a/b/c
/a/b/c/d

2 rows selected.
</pre></div>
<!-- class="example" -->
<p><a href="#CJAGAEHJ">Example 25-3</a> is the same as <a href="#CHDGBEFF">Example 25-2</a>, except that the test is <span class="italic">not</span>-equals (<code>!=</code>) instead of equals (<code>=</code>). The query in <a href="#CJAGAEHJ">Example 25-3</a> finds <span class="italic">all paths in the repository</span> that are <span class="italic">not</span> under path <code>/a/b</code>.</p>
<div id="ADXDB5411" class="example">
<p class="titleinexample"><a id="CJAGAEHJ"></a>Example 25-3 Determining Paths Not Under a Path</p>
<pre>
SELECT ANY_PATH FROM RESOURCE_VIEW WHERE under_path(RES, '/a/b') <span class="bold">!=</span> 1
</pre>
<pre>
ANY_PATH
--------
/a
/a/b
/a/e
/a/e/c
/a/e/c/d
/home
/home/OE
/home/OE/PurchaseOrders
/home/OE/PurchaseOrders/2002
/home/OE/PurchaseOrders/2002/Apr
/home/OE/PurchaseOrders/2002/Apr/AMCEWEN-20021009123336171PDT.xml
/home/OE/PurchaseOrders/2002/Apr/AMCEWEN-20021009123336271PDT.xml
/home/OE/PurchaseOrders/2002/Apr/EABEL-20021009123336251PDT.xml
<span class="bold">. . .</span>
/public
/sys
/sys/acls
/sys/acls/all_all_acl.xml
/sys/acls/all_owner_acl.xml
/sys/acls/bootstrap_acl.xml
/sys/acls/ro_all_acl.xml
/sys/apps
/sys/apps/plsql
/sys/apps/plsql/xs
/sys/apps/plsql/xs/netaclrc.xml
/sys/apps/plsql/xs/netaclsc.xml
/sys/databaseSummary.xml
/sys/log
/sys/schemas
/sys/schemas/OE
/sys/schemas/OE/localhost:8080
<span class="bold">. . .</span>

326 rows selected.
</pre></div>
<!-- class="example" -->
<div id="ADXDB5412" class="example">
<p class="titleinexample"><a id="sthref1507"></a>Example 25-4 Determining Paths using Multiple Correlations</p>
<pre>
SELECT ANY_PATH, path(<span class="bold">1</span>), path(<span class="bold">2</span>) 
  FROM RESOURCE_VIEW
  WHERE under_path(RES, '/a/b', <span class="bold">1</span>) = 1 OR under_path(RES, '/a/e', <span class="bold">2</span>) = 1;
</pre>
<pre>
ANY_PATH   PATH(<span class="bold">1</span>)  PATH(<span class="bold">2</span>)
---------- -------- --------
/a/b/c     c
/a/b/c/d   c/d
/a/e/c              c
/a/e/c/d            c/d
 
4 rows selected.
</pre></div>
<!-- class="example" -->
<div id="ADXDB5413" class="example">
<p class="titleinexample"><a id="CHDEJCDD"></a>Example 25-5 Relative Path Names for Three Levels of Resources</p>
<pre>
SELECT path(1) FROM RESOURCE_VIEW WHERE under_path(RES, <span class="bold">3</span>, '/sys', 1) = 1;
</pre>
<p>This produces a result similar to the following.</p>
<pre>
PATH(1)
-------
acls
acls/all_all_acl.xml
acls/all_owner_acl.xml
acls/bootstrap_acl.xml
acls/ro_all_acl.xml
apps
apps/plsql
apps/plsql/xs
databaseSummary.xml
log
schemas
schemas/OE
schemas/OE/localhost:8080
schemas/PUBLIC
schemas/PUBLIC/www.w3.org
schemas/PUBLIC/xmlns.oracle.com
 
93 rows selected.
</pre></div>
<!-- class="example" -->
<div id="ADXDB5414" class="example">
<p class="titleinexample"><a id="i1029466"></a>Example 25-6 Extracting Resource Metadata using UNDER_PATH</p>
<pre>
SELECT ANY_PATH,
       XMLQuery('declare namespace ns = "http://xmlns.oracle.com/xdb/XDBResource.xsd"; (: :)
                 $r/ns:Resource' PASSING RES AS "r" RETURNING CONTENT)
  FROM RESOURCE_VIEW WHERE under_path(RES, '/sys') = 1;
 
</pre>
<p>This produces a result similar to the following:</p>
<pre>
ANY_PATH
--------
XMLQUERY('DECLARENAMESPACENS="HTTP://XMLNS.ORACLE.COM/XDB/XDBRESOURCE.XSD";(::)$
--------------------------------------------------------------------------------
/sys/acls
&lt;Resource xmlns="http://xmlns.oracle.com/xdb/XDBResource.xsd"&gt;
  &lt;CreationDate&gt;2008-06-25T13:17:45.164662&lt;/CreationDate&gt;
  &lt;ModificationDate&gt;2008-06-25T13:17:47.865163&lt;/ModificationDate&gt;
  &lt;DisplayName&gt;acls&lt;/DisplayName&gt;
  &lt;Language&gt;en-US&lt;/Language&gt;
  &lt;CharacterSet&gt;UTF-8&lt;/CharacterSet&gt;
  &lt;ContentType&gt;application/octet-stream&lt;/ContentType&gt;
  &lt;RefCount&gt;1&lt;/RefCount&gt;
&lt;/Resource&gt;
 
/sys/acls/all_all_acl.xml
&lt;Resource xmlns="http://xmlns.oracle.com/xdb/XDBResource.xsd"&gt;
  &lt;CreationDate&gt;2008-06-25T13:17:47.759806&lt;/CreationDate&gt;
  &lt;ModificationDate&gt;2008-06-25T13:17:47.759806&lt;/ModificationDate&gt;
  &lt;DisplayName&gt;all_all_acl.xml&lt;/DisplayName&gt;
  &lt;Language&gt;en-US&lt;/Language&gt;
  &lt;CharacterSet&gt;UTF-8&lt;/CharacterSet&gt;
  &lt;ContentType&gt;text/xml&lt;/ContentType&gt;
  &lt;RefCount&gt;1&lt;/RefCount&gt;
&lt;/Resource&gt;
<span class="bold">. . .</span>
41 rows selected.
</pre></div>
<!-- class="example" -->
<div id="ADXDB5415" class="example">
<p class="titleinexample"><a id="sthref1508"></a>Example 25-7 Using Functions PATH and DEPTH with PATH_VIEW</p>
<pre>
SELECT path(1) path, depth(1) <span class="bold">depth</span> FROM PATH_VIEW 
  WHERE under_path(RES, 3, '/sys', 1) = 1;
 
</pre>
<p>This produces a result similar to the following:</p>
<pre>
PATH                                      DEPTH
----                                      -----
acls                                      1
acls/all_all_acl.xml                      2
acls/all_owner_acl.xml                    2
acls/bootstrap_acl.xml                    2
acls/ro_all_acl.xml                       2
apps                                      1
apps/plsql                                2
apps/plsql/xs                             3
databaseSummary.xml                       1
log                                       1
schemas                                   1
schemas/OE                                2
schemas/OE/localhost:8080                 3
schemas/PUBLIC                            2
schemas/PUBLIC/www.w3.org                 3
schemas/PUBLIC/xmlns.oracle.com           3
<span class="bold">. . .</span>
</pre></div>
<!-- class="example" -->
<div id="ADXDB5416" class="example">
<p class="titleinexample"><a id="sthref1509"></a>Example 25-8 Extracting Link and Resource Information from PATH_VIEW</p>
<pre>
SELECT PATH, 
       XMLCast(XMLQuery(
                 'declare namespace ns =
                           "http://xmlns.oracle.com/xdb/XDBResource.xsd"; (: :)
                  $l/ns:LINK/ns:<span class="bold">Name</span>' PASSING LINK AS "l" RETURNING CONTENT)
               AS VARCHAR2(256)),
       XMLCast(XMLQuery(
                 'declare namespace ns =
                           "http://xmlns.oracle.com/xdb/XDBResource.xsd"; (: :)
                  $l/ns:LINK/ns:<span class="bold">ParentName</span>' PASSING LINK AS "l" RETURNING CONTENT)
               AS VARCHAR2(256)),
       XMLCast(XMLQuery(
                 'declare namespace ns =
                           "http://xmlns.oracle.com/xdb/XDBResource.xsd"; (: :)
                  $l/ns:LINK/ns:<span class="bold">ChildName</span>' PASSING LINK AS "l" RETURNING CONTENT)
               AS VARCHAR2(256)),
       XMLCast(XMLQuery(
                 'declare namespace ns =
                           "http://xmlns.oracle.com/xdb/XDBResource.xsd"; (: :)
                  $r/ns:Resource/ns:<span class="bold">DisplayName</span>' 
                    PASSING RES AS "r" RETURNING CONTENT)
               AS VARCHAR2(128))
  FROM PATH_VIEW WHERE PATH LIKE '/sys%';
</pre>
<p>This produces a result similar to the following:</p>
<pre>
/sys/schemas/PUBLIC/www.w3.org/1999/xlink.xsd
xlink.xsd
 
/sys/schemas/PUBLIC/www.w3.org/1999/xlink
xlink
 
/sys/schemas/PUBLIC/www.w3.org/1999/csx.xlink.xsd
csx.xlink.xsd

<span class="bold">. . .</span>

118 rows selected.
</pre></div>
<!-- class="example" -->
<div id="ADXDB5417" class="example">
<p class="titleinexample"><a id="sthref1510"></a>Example 25-9 All Repository Paths to a Certain Depth Under a Path</p>
<pre>
SELECT path(1) FROM PATH_VIEW WHERE under_path(RES, 3, '/sys', 1) &gt; 0;
</pre>
<p>This produces a result similar to the following:</p>
<pre>
PATH(1)
-------
acls
acls/all_all_acl.xml
acls/all_owner_acl.xml
acls/bootstrap_acl.xml
acls/ro_all_acl.xml
apps
apps/plsql
apps/plsql/xs
databaseSummary.xml
log
principals
principals/groups
principals/users
schemas
schemas/PUBLIC
schemas/PUBLIC/www.opengis.net
schemas/PUBLIC/www.w3.org
schemas/PUBLIC/xmlns.oracle.com
workspaces
<span class="bold">. . .</span>
 
43 rows selected.
</pre></div>
<!-- class="example" -->
<div id="ADXDB5418" class="example">
<p class="titleinexample"><a id="sthref1511"></a>Example 25-10 Locating a Repository Path using EQUALS_PATH</p>
<pre>
SELECT ANY_PATH FROM RESOURCE_VIEW WHERE equals_path(RES, '/sys') &gt; 0;
</pre>
<pre>
ANY_PATH
--------
/sys
 
1 row selected.
</pre></div>
<!-- class="example" -->
<div id="ADXDB5419" class="example">
<p class="titleinexample"><a id="sthref1512"></a>Example 25-11 Retrieve RESID of a Given Resource</p>
<pre>
SELECT RESID FROM RESOURCE_VIEW
  WHERE XMLCast(XMLQuery(
                  'declare namespace ns = 
                     "http://xmlns.oracle.com/xdb/XDBResource.xsd"; (: :)
                   $r/ns:Resource/ns:DisplayName'
                  PASSING RES AS "r" RETURNING CONTENT)
                AS VARCHAR2(128))
        = 'example';
</pre>
<p>This produces a result similar to the following:</p>
<pre>
RESID
--------------------------------
F301A10152470252E030578CB00B432B
 
1 row selected.
</pre></div>
<!-- class="example" -->
<div id="ADXDB5420" class="example">
<p class="titleinexample"><a id="sthref1513"></a>Example 25-12 Obtaining the Path Name of a Resource from its RESID</p>
<pre>
DECLARE
  resid_example RAW(16);
  path          VARCHAR2(4000);
BEGIN
  SELECT RESID INTO resid_example FROM RESOURCE_VIEW
    WHERE XMLCast(XMLQuery(
                    'declare namespace ns =
                       "http://xmlns.oracle.com/xdb/XDBResource.xsd"; (: :)
                     $r/ns:Resource/ns:DisplayName'
                    PASSING RES AS "r" RETURNING CONTENT)
                  AS VARCHAR2(128))
 
          = 'example';
  SELECT ANY_PATH INTO path FROM RESOURCE_VIEW WHERE RESID = resid_example;
  DBMS_OUTPUT.put_line('The path is: ' || path);
END;
/
<span class="bold">The path is: /public/example</span>
 
PL/SQL procedure successfully completed.
</pre></div>
<!-- class="example" -->
<div id="ADXDB5421" class="example">
<p class="titleinexample"><a id="sthref1514"></a>Example 25-13 Folders Under a Given Path</p>
<pre>
SELECT ANY_PATH FROM RESOURCE_VIEW
  WHERE under_path(RES, 1, '/sys') = 1
    AND XMLExists('declare namespace ns = 
                     "http://xmlns.oracle.com/xdb/XDBResource.xsd"; (: :)
                   $r/ns:Resource[@Container = xs:boolean("true")]'
                  PASSING RES AS "r");
</pre>
<p>This produces a result like the following:</p>
<pre>
ANY_PATH
--------
/sys/acls
/sys/apps
/sys/log
/sys/schemas
 
4 rows selected.
</pre></div>
<!-- class="example" -->
<div id="ADXDB5422" class="example">
<p class="titleinexample"><a id="sthref1515"></a>Example 25-14 Joining RESOURCE_VIEW with an XMLType Table</p>
<pre>
SELECT ANY_PATH, XMLQuery('$p/PurchaseOrder/LineItems'
                          PASSING po.OBJECT_VALUE AS "p" RETURNING CONTENT)
  FROM purchaseorder po, RESOURCE_VIEW rv
  WHERE ref(po)
        = XMLCast(XMLQuery('declare default element namespace
                            "http://xmlns.oracle.com/xdb/XDBResource.xsd"; (: :)
                            fn:data(/Resource/XMLRef)'
                           PASSING rv.RES RETURNING CONTENT)
                  AS REF XMLType)
    AND ROWNUM &lt; 2;
 
ANY_PATH
--------------------------------------------------------------------------------
XMLQUERY('$P/PURCHASEORDER/LINEITEMS'PASSINGPO.OBJECT_VALUEAS"P"RETURNINGCONTENT
--------------------------------------------------------------------------------
/home/OE/PurchaseOrders/2002/Apr/AMCEWEN-20021009123336171PDT.xml
&lt;LineItems&gt;
  &lt;LineItem ItemNumber="1"&gt;
    &lt;Description&gt;Salesman&lt;/Description&gt;
    &lt;Part Id="37429158920" UnitPrice="39.95" Quantity="2"/&gt;
  &lt;/LineItem&gt;
  &lt;LineItem ItemNumber="2"&gt;
    &lt;Description&gt;Big Deal on Madonna Street&lt;/Description&gt;
    &lt;Part Id="37429155424" UnitPrice="29.95" Quantity="1"/&gt;
  &lt;/LineItem&gt;
  &lt;LineItem ItemNumber="3"&gt;
    &lt;Description&gt;Hearts and Minds&lt;/Description&gt;
    &lt;Part Id="37429166321" UnitPrice="39.95" Quantity="1"/&gt;
  &lt;/LineItem&gt;

<span class="bold">. . .</span>

  &lt;LineItem ItemNumber="23"&gt;
    &lt;Description&gt;Great Expectations&lt;/Description&gt;
    &lt;Part Id="37429128022" UnitPrice="39.95" Quantity="4"/&gt;
  &lt;/LineItem&gt;
&lt;/LineItems&gt;
 
1 row selected.
</pre></div>
<!-- class="example" --></div>
<!-- class="sect2" -->
<a id="i1029579"></a>
<div id="ADXDB5423" class="sect2">
<h3 class="sect2">Deleting Repository Resources: Examples</h3>
<p>The examples in this section illustrate how to <a id="sthref1516"></a><a id="sthref1517"></a>delete resources and paths.</p>
<p>If you delete only <span class="italic">leaf</span> resources, then you can use <code>DELETE FROM RESOURCE_VIEW</code>, as in <a href="#CJAJEJAB">Example 25-15</a>.</p>
<div id="ADXDB5424" class="example">
<p class="titleinexample"><a id="CJAJEJAB"></a>Example 25-15 Deleting Resources</p>
<pre>
DELETE FROM RESOURCE_VIEW WHERE equals_path(RES, '/public/myfile') = 1';
 
</pre></div>
<!-- class="example" -->
<p>For multiple links to the same resource, deleting from <code>RESOURCE_VIEW</code> deletes the resource together with <span class="italic">all</span> of its links. Deleting from <code>PATH_VIEW</code> deletes only the link with the specified path.</p>
<p><a href="#CJAJFFDA">Example 25-16</a> illustrates this.</p>
<div id="ADXDB5425" class="example">
<p class="titleinexample"><a id="CJAJFFDA"></a>Example 25-16 Deleting Links to Resources</p>
<p>Suppose that <code>'/home/myfile1'</code> is a link to <code>'/public/myfile'</code>:</p>
<pre>
CALL DBMS_XDB.link('/public/myfile', '/home', 'myfile1');
</pre>
<p>The following SQL DML statement deletes everything in Oracle XML&nbsp;DB Repository that is found at path <code>/home/myfile1</code> &ndash; both the link and the resource:</p>
<pre>
DELETE FROM <span class="bold">RESOURCE_VIEW</span> WHERE equals_path(RES, '/home/myfile1') = 1;
</pre>
<p>The following DML statement deletes <span class="italic">only the link</span> with path <code>/home/file1</code>:</p>
<pre>
DELETE FROM <span class="bold">PATH_VIEW</span> WHERE equals_path(RES, '/home/file1') = 1;
</pre></div>
<!-- class="example" -->
<div id="ADXDB5426" class="sect3"><a id="sthref1518"></a>
<h4 class="sect3">Deleting <a id="sthref1519"></a>Nonempty Folder Resources</h4>
<p>The <code>DELETE</code> DML operator is not allowed on a nonempty folder. If you try to delete a nonempty folder, you must first delete its contents and then delete the resulting empty folder. This rule must be applied recursively to any folders contained in the target folder.</p>
<p>However, the order of the paths returned from a <code>WHERE</code> clause is not guaranteed, and the <code>DELETE</code> operator does not allow an <code>ORDER BY</code> clause in its table-expression subclause. You <span class="italic">cannot</span> do the following:</p>
<pre>
DELETE FROM (SELECT 1 FROM RESOURCE_VIEW
               WHERE under_path(RES, '/public', 1) = 1
               ORDER BY depth(1) DESCENDING);
</pre>
<p><a href="#CHDJHEHB">Example 25-17</a> illustrates how to delete a nonempty folder: folder <code>example</code> is deleted, along with its subfolder <code>example1</code>.</p>
<div id="ADXDB5427" class="example">
<p class="titleinexample"><a id="CHDJHEHB"></a>Example 25-17 Deleting a Nonempty Folder</p>
<pre>
SELECT PATH FROM PATH_VIEW WHERE under_path(RES, '/home/US1') = 1;
 
PATH
--------------------------
/home/US1/example
/home/US1/example/example1
 
2 rows selected.

DECLARE
  CURSOR c1 IS
    SELECT ANY_PATH p FROM RESOURCE_VIEW
      WHERE under_path(RES, '/home/US1', 1) = 1
        AND XMLExists('declare namespace ns =
                         "http://xmlns.oracle.com/xdb/XDBResource.xsd"; (: :)
                       $r/ns:Resource[ns:Owner="US1"]' PASSING RES AS "r")
      ORDER BY depth(1) DESC;
  del_stmt VARCHAR2(500) :=
    'DELETE FROM RESOURCE_VIEW WHERE equals_path(RES, :1)=1';
BEGIN
  FOR r1 IN c1 LOOP
    EXECUTE IMMEDIATE del_stmt USING r1.p;
  END LOOP;
END;
/
 
PL/SQL procedure successfully completed.
 
SELECT PATH FROM PATH_VIEW WHERE under_path(RES, '/home/US1') = 1;
 
<span class="bold">no rows selected</span>
</pre></div>
<!-- class="example" -->
<div class="infobox-note">
<p class="notep1">Note:</p>
As always, take care to avoid deadlocks with concurrent transactions when operating on multiple rows.</div>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<div id="ADXDB5428" class="sect2"><a id="sthref1520"></a>
<h3 class="sect2">Updating Repository Resources: Examples</h3>
<p>This section illustrates how to <a id="sthref1521"></a><a id="sthref1522"></a>update resources and paths.</p>
<p><a href="#CJAIBBFE">Example 25-18</a> changes the resource at path <code>/test/HR/example/paper</code>.</p>
<div id="ADXDB5429" class="example">
<p class="titleinexample"><a id="CJAIBBFE"></a>Example 25-18 Updating a Resource</p>
<p>This is the complete resource before the update operation:</p>
<pre>
SELECT XMLSerialize(DOCUMENT r.RES AS CLOB)
  FROM RESOURCE_VIEW r WHERE equals_path(r.RES, '/test/HR/example/paper') = 1;
 
XMLSERIALIZE(DOCUMENTR.RESASCLOB)
--------------------------------------------------------------------------------
&lt;Resource xmlns="http://xmlns.oracle.com/xdb/XDBResource.xsd" Hidden="false" Inv
alid="false" Container="false" CustomRslv="false" VersionHistory="false" StickyR
ef="true"&gt;
  &lt;CreationDate&gt;2005-04-29T16:30:01.588835&lt;/CreationDate&gt;
  &lt;ModificationDate&gt;2005-04-29T16:30:01.588835&lt;/ModificationDate&gt;
  &lt;DisplayName&gt;<span class="bold">paper</span>&lt;/DisplayName&gt;
  &lt;Language&gt;en-US&lt;/Language&gt;
  &lt;CharacterSet&gt;UTF-8&lt;/CharacterSet&gt;
  &lt;ContentType&gt;application/octet-stream&lt;/ContentType&gt;
  &lt;RefCount&gt;1&lt;/RefCount&gt;
  &lt;ACL&gt;
    &lt;acl description="Public:All privileges to PUBLIC" xmlns="http://xmlns.oracl
e.com/xdb/acl.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:sch
emaLocation="http://xmlns.oracle.com/xdb/acl.xsd                           http:
//xmlns.oracle.com/xdb/acl.xsd"&gt;
      &lt;ace&gt;
        &lt;principal&gt;PUBLIC&lt;/principal&gt;
        &lt;grant&gt;true&lt;/grant&gt;
        &lt;privilege&gt;
          &lt;all/&gt;
        &lt;/privilege&gt;
      &lt;/ace&gt;
    &lt;/acl&gt;
  &lt;/ACL&gt;
  &lt;Owner&gt;TESTUSER1&lt;/Owner&gt;
  &lt;Creator&gt;TESTUSER1&lt;/Creator&gt;
  &lt;LastModifier&gt;TESTUSER1&lt;/LastModifier&gt;
  &lt;SchemaElement&gt;http://xmlns.oracle.com/xdb/XDBSchema.xsd#binary&lt;/SchemaElement
&gt;
  &lt;Contents&gt;
    &lt;binary&gt;4F7261636C65206F7220554E4958&lt;/binary&gt;
  &lt;/Contents&gt;
&lt;/Resource&gt;
 
1 row selected.
</pre>
<p>All of the XML elements shown here are resource <span class="italic">metadata</span> elements, with the exception of <code>Contents</code>, which contains the resource <span class="italic">content</span>.</p>
<p>This <code>UPDATE</code> statement updates (only) the <code>DisplayName</code> metadata element.</p>
<pre>
UPDATE RESOURCE_VIEW r
  SET r.RES = updateXML(r.RES, '/Resource/DisplayName/text()', 'My New Paper')
    WHERE equals_path(r.RES, '/test/HR/example/paper') = 1;
 
1 row updated.

SELECT XMLSerialize(DOCUMENT r.RES AS CLOB)
  FROM RESOURCE_VIEW r WHERE equals_path(r.RES, '/test/HR/example/paper') = 1;
 
XMLSERIALIZE(DOCUMENTR.RESASCLOB)
--------------------------------------------------------------------------------
&lt;Resource xmlns="http://xmlns.oracle.com/xdb/XDBResource.xsd" Hidden="false" Inv
alid="false" Container="false" CustomRslv="false" VersionHistory="false" StickyR
ef="true"&gt;
  &lt;CreationDate&gt;2005-04-29T16:30:01.588835&lt;/CreationDate&gt;
  &lt;ModificationDate&gt;2005-04-29T16:30:01.883838&lt;/ModificationDate&gt;
  &lt;DisplayName&gt;<span class="bold">My New Paper</span>&lt;/DisplayName&gt;
  &lt;Language&gt;en-US&lt;/Language&gt;

  <span class="bold">. . .</span>

  &lt;Contents&gt;
    &lt;binary&gt;4F7261636C65206F7220554E4958&lt;/binary&gt;
  &lt;/Contents&gt;
&lt;/Resource&gt;
 
1 row selected.
</pre></div>
<!-- class="example" -->
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="xdb_repos_meta.htm#CIAIGHHG">Chapter 29, "User-Defined Repository Metadata"</a> for additional examples of updating resource metadata</div>
<p>Note that, by default, the <code>DisplayName</code> element content, <code>paper</code>, was the same text as the last location step of the resource path, <code>/test/HR/example/paper</code>. This is only the default value, however. The <code>DisplayName</code> is independent of the resource path, so updating it does not change the path.</p>
<p>Element <code>DisplayName</code> is defined by the WebDAV standard, and it is recognized by WebDAV applications. Applications, such as an FTP client, that are not WebDAV-based do not recognize the <code>DisplayName</code> of a resource. An FTP client lists the resource as <code>paper</code> (using FTP command <code>ls</code>, for example) even after the <code>UPDATE</code> operation.</p>
<p><a href="#CJAHGHGE">Example 25-19</a> changes the path for the resource from <code>/test/HR/example/paper</code> to <code>/test/myexample</code>. It is analogous to using the UNIX or Linux command <code>mv /test/HR/example/paper /test/myexample</code>.</p>
<div id="ADXDB5430" class="example">
<p class="titleinexample"><a id="CJAHGHGE"></a>Example 25-19 Updating a Path in the PATH_VIEW</p>
<pre>
SELECT ANY_PATH FROM RESOURCE_VIEW WHERE under_path(RES, '/test') = 1;
 
ANY_PATH
--------
/test/HR
/test/HR/example
/test/HR/<span class="bold">example/paper</span>
 
3 rows selected.

UPDATE PATH_VIEW 
  SET PATH = '/test/<span class="bold">myexample</span>' WHERE PATH = '/test/HR/<span class="bold">example/paper</span>';

ANY_PATH
--------
/test/HR
/test/HR/example
/test/<span class="bold">myexample</span>
 
3 rows selected.
</pre></div>
<!-- class="example" -->
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="xdb16fol.htm#BABBJJDI">Table 21-3, "Accessing Oracle XML&nbsp;DB Repository: API Options"</a> for additional examples that use SQL functions that apply to <code>RESOURCE_VIEW</code> and <code>PATH_VIEW</code></div>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="i1027109"></a>
<div id="ADXDB5431" class="sect1">
<h2 class="sect1">Working with Multiple Oracle XML&nbsp;DB <a id="sthref1523"></a>Resources</h2>
<p>The repository operations listed in <a href="xdb16fol.htm#BABBJJDI">Table 21-3</a> typically apply to a single resource at a time. To perform the same operation on multiple Oracle XML&nbsp;DB resources, or to find one or more Oracle XML&nbsp;DB resources that meet a certain set of criteria, use SQL with <code>RESOURCE_VIEW</code> and <code>PATH_VIEW</code>.</p>
<p>For example, you can perform the following operations:</p>
<ul>
<li>
<p>Updating based on attributes &ndash; see <a href="#CHDDHFII">Example 25-20</a></p>
</li>
<li>
<p>Finding resources inside a folder &ndash; see <a href="#CHDJCACB">Example 25-21</a></p>
</li>
<li>
<p>Copying a set of Oracle XML&nbsp;DB resources &ndash; see <a href="#CHDIGEEH">Example 25-22</a></p>
</li>
</ul>
<div id="ADXDB5432" class="example">
<p class="titleinexample"><a id="CHDDHFII"></a>Example 25-20 Updating Resources Based on Attributes</p>
<pre>
UPDATE RESOURCE_VIEW
  SET RES = updateXML(RES, '/Resource/DisplayName/text()', 'My New Paper')
    WHERE XMLCast(XMLQuery(
                    'declare namespace ns =
                       "http://xmlns.oracle.com/xdb/XDBResource.xsd"; (: :)
                     $r/ns:Resource/ns:DisplayName'
                    PASSING RES AS "r" RETURNING CONTENT)
                  AS VARCHAR2(128))
          = 'My Paper';
 
1 row updated.
 
SELECT ANY_PATH FROM RESOURCE_VIEW
  WHERE XMLCast(XMLQuery('declare namespace ns =
                            "http://xmlns.oracle.com/xdb/XDBResource.xsd"; (: :)
                          $r/ns:Resource/ns:DisplayName'
                         PASSING RES AS "r" RETURNING CONTENT)
                AS VARCHAR2(128))
          = 'My New Paper';
 
ANY_PATH
---------------
/test/myexample
 
1 row selected.
</pre></div>
<!-- class="example" -->
<div id="ADXDB5433" class="example">
<p class="titleinexample"><a id="CHDJCACB"></a>Example 25-21 Finding Resources Inside a Folder</p>
<pre>
SELECT ANY_PATH FROM RESOURCE_VIEW
  WHERE under_path(resource, '/sys/schemas/PUBLIC/xmlns.oracle.com/xdb') = 1;

ANY_PATH
--------------------------------------------------------------
/sys/schemas/PUBLIC/xmlns.oracle.com/xdb/XDBFolderListing.xsd
/sys/schemas/PUBLIC/xmlns.oracle.com/xdb/XDBResource.xsd
/sys/schemas/PUBLIC/xmlns.oracle.com/xdb/XDBSchema.xsd
/sys/schemas/PUBLIC/xmlns.oracle.com/xdb/XDBStandard.xsd
/sys/schemas/PUBLIC/xmlns.oracle.com/xdb/acl.xsd
/sys/schemas/PUBLIC/xmlns.oracle.com/xdb/dav.xsd
/sys/schemas/PUBLIC/xmlns.oracle.com/xdb/log
/sys/schemas/PUBLIC/xmlns.oracle.com/xdb/log/ftplog.xsd
/sys/schemas/PUBLIC/xmlns.oracle.com/xdb/log/httplog.xsd
/sys/schemas/PUBLIC/xmlns.oracle.com/xdb/log/xdblog.xsd
/sys/schemas/PUBLIC/xmlns.oracle.com/xdb/stats.xsd
/sys/schemas/PUBLIC/xmlns.oracle.com/xdb/xdbconfig.xsd
 
12 rows selected.
</pre></div>
<!-- class="example" -->
<p>The SQL DML statement in <a href="#CHDIGEEH">Example 25-22</a> copies all of the resources in folder <code>public</code> to folder <code>newlocation</code>. It is analogous to the UNIX or Linux command <code>cp /public/* /newlocation</code>. Target folder <code>newlocation</code> must exist before the copy.</p>
<div id="ADXDB5434" class="example">
<p class="titleinexample"><a id="CHDIGEEH"></a>Example 25-22 Copying Resources</p>
<pre>
SELECT PATH FROM PATH_VIEW WHERE under_path(RES, '/test') = 1;
 
PATH
-----------------
/test/HR
/test/HR/example
/test/myexample
 
3 rows selected.
 
INSERT INTO PATH_VIEW
  SELECT '/newlocation/' || path(1), RES, LINK, NULL FROM PATH_VIEW
    WHERE under_path(RES, '/test', 1) = 1
    ORDER BY depth(1);
 
3 rows created.
 
SELECT PATH FROM PATH_VIEW WHERE under_path(RES, '/newlocation') = 1;
 
PATH
------------------------
/newlocation/HR
/newlocation/HR/example
/newlocation/myexample
 
3 rows selected.
</pre></div>
<!-- class="example" --></div>
<!-- class="sect1" -->
<a id="i1030416"></a>
<div id="ADXDB5435" class="sect1">
<h2 class="sect1">Performance Tuning of Oracle XML&nbsp;DB Repository Operations</h2>
<p>This section includes some guidelines for improving the performance of repository operations such as resource creation and querying.</p>
<p>For optimal performance of queries on repository resources, gather statistics for the optimizer using procedure <code>DBMS_XDB_ADMIN.gatherRepositoryStats</code> after resource creation. To use <code>gatherRepositoryStats</code>, you need role <code>DBA</code> or role <code>XDBADMIN</code> with privilege <code>ANALYZE ANY</code>.</p>
<p>Folders that contain a large number of resources can negatively affect concurrency, particularly when many resources are created or deleted. As a rule of thumb, do not have folders that contain more than 10,000 resources. This empirical limit is based on the database block size and the average filename length.</p>
<p>If you create resources in bulk, perform a <code>COMMIT</code> operation at least every 1,000 resources. Performance can be negatively impacted if you commit very often or you commit less often than every 1,000 resource creations.</p>
<p>When creating a file resource that is an XML Schema-based document for which the XML schema is known, specify the XML schema URL as a parameter to PL/SQL function <code>DBMS_XDB.createResource</code>. This saves preparsing the document to determine the XML schema.</p>
<p>Oracle XML&nbsp;DB uses configuration file <code>xdbconfig.xml</code> for configuring the system and protocol environment. This file includes an element parameter, <a id="sthref1524"></a><code>resource-view-cache-size</code>, that defines the size in dynamic memory of the <code>RESOURCE_VIEW</code> cache. The default value is <code>1048576</code>.</p>
<p>The performance of some queries on <code>RESOURCE_VIEW</code> and <code>PATH_VIEW</code> can be improved by tuning <code>resource-view-cache-size</code>. In general, the bigger the cache size, the faster the query. The default <code>resource-view-cache-size</code> is appropriate for most cases, but you may want to enlarge your <code>resource-view-cache-size</code> element when querying a sizable <code>RESOURCE_VIEW</code>.</p>
<p>The default limits for the following elements are soft limits. The system automatically adapts when these limits are exceeded.</p>
<ul>
<li>
<p><code><a id="sthref1525"></a>xdbcore-loadableunit-size</code> &ndash; This element indicates the maximum size to which a loadable unit (partition) can grow in Kilobytes. When a partition is read into memory or a partition is built while consuming a new document, the partition is built until it reaches the maximum size. The default value is 16 KB.</p>
</li>
<li>
<p><code><a id="sthref1526"></a>xdbcore-xobmem-bound</code> &ndash; This element indicates the maximum memory in kilobytes that a document is allowed to occupy. The default value is 1024 KB. Once the document exceeds this number, some loadable units (partitions) are swapped out.</p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="appaman.htm#g645751">Chapter 34, "Administering Oracle XML&nbsp;DB"</a></p>
</li>
<li>
<p><a class="olink ARPLS371" href="../../appdev.112/e40758/d_xdb.htm#ARPLS371"><span class="italic">Oracle Database PL/SQL Packages and Types Reference</span></a> for information about PL/SQL function <code>DBMS_XDB.createResource</code></p>
</li>
<li>
<p><a class="olink TDPSG20030" href="../../server.112/e10575/tdpsg_user_accounts.htm#TDPSG20030"><span class="italic">Oracle Database 2 Day + Security Guide</span></a> for information about database schema <code>XDB</code></p>
</li>
</ul>
</div>
</div>
<!-- class="sect1" -->
<a id="i1030834"></a>
<div id="ADXDB5436" class="sect1">
<h2 class="sect1">Searching for Resources using <a id="sthref1527"></a><a id="sthref1528"></a>Oracle Text</h2>
<p>Table <code>XDB$RESOURCE</code> in database schema <code><a id="sthref1529"></a><a id="sthref1530"></a><a id="sthref1531"></a>XDB</code> stores the metadata and content of repository resources. You can search for resources that contain a specific keyword by using Oracle SQL function <code>contains</code> with <code>RESOURCE_VIEW</code> or <code>PATH_VIEW</code>.</p>
<div id="ADXDB5437" class="example">
<p class="titleinexample"><a id="sthref1532"></a>Example 25-23 Find All Resources Containing "Paper"</p>
<pre>
SELECT PATH FROM PATH_VIEW WHERE contains(RES, 'Paper') &gt; 0;

PATH
-----------------------
/newlocation/myexample
/test/myexample
 
2 rows selected.
</pre></div>
<!-- class="example" -->
<div id="ADXDB5438" class="example">
<p class="titleinexample"><a id="CHDDAJAE"></a>Example 25-24 Find All Resources Containing "Paper" that are Under a Specified Path</p>
<pre>
SELECT ANY_PATH FROM RESOURCE_VIEW
   WHERE contains(RES, 'Paper') &gt; 0 AND under_path(RES, '/test') &gt; 0;

ANY_PATH
----------------
/test/myexample
 
1 row selected.
</pre></div>
<!-- class="example" -->
<p>To evaluate such queries, you must first create a context index on the <code>XDB$RESOURCE</code> table. Depending on the type of documents stored in Oracle XML&nbsp;DB, choose one of the following options for creating your context index:</p>
<ul>
<li>
<p><span class="italic">If Oracle XML&nbsp;DB contains only XML documents</span>, that is, no binary data, then a regular Context Index can be created on the <code>XDB$RESOURCE</code> table. This is the case for <a href="#CHDDAJAE">Example 25-24</a>.</p>
<pre>
CREATE INDEX xdb$resource_ctx_i ON XDB.XDB$RESOURCE(OBJECT_VALUE)
  INDEXTYPE IS CTXSYS.CONTEXT;
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="xdb04cre.htm#g1050045">Chapter 4, "XMLType Operations"</a> and <a href="xdb09sea.htm#i1006756">Chapter 12, "Full-Text Search Over XML Data"</a></div>
</li>
<li>
<p><span class="italic">If Oracle XML&nbsp;DB contains binary data</span> such as Microsoft Word documents, then a user filter is required to filter such documents prior to indexing. Use package <code>DBMS_XDBT</code> (<code>dbmsxdbt.sql</code>) to create and configure the Context Index.</p>
<pre>
-- Install the package - connected as SYS
@dbmsxdbt
-- Create the preferences
EXEC DBMS_XDBT.createPreferences;
-- Create the index
EXEC DBMS_XDBT.createIndex;
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a class="olink ARPLS372" href="../../appdev.112/e40758/d_xdbt.htm#ARPLS372"><span class="italic">Oracle Database PL/SQL Packages and Types Reference,</span></a> for information about installing and using <code>DBMS_XDBT</code>.</p>
</li>
<li>
<p><a href="xdb01int.htm#CHDCDBFI">"APIs for XML"</a></p>
</li>
</ul>
</div>
</li>
</ul>
<p>Package <code>DBMS_XDBT</code> also includes procedures to synchronize and optimize the index. You can use procedure <code>configureAutoSync()</code> to automatically sync the index by using job queues.</p>
</div>
<!-- class="sect1" --></div>
<!-- class="chapter" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment1019">
<tr>
<td class="cellalignment1028">
<table class="cellalignment1024">
<tr>
<td class="cellalignment1023"><a href="xdb17ver.htm"><img width="24" height="24" src="../../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment1023"><a href="xdb19rpl.htm"><img width="24" height="24" src="../../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;2002, 2014,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment1030">
<table class="cellalignment1022">
<tr>
<td class="cellalignment1023"><a href="../../index.htm"><img width="24" height="24" src="../../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment1023"><a href="../../nav/portal_booklist.htm"><img width="24" height="24" src="../../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment1023"><a href="toc.htm"><img width="24" height="24" src="../../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment1023"><a href="index.htm"><img width="24" height="24" src="../../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment1023"><a href="../../nav/mindx.htm"><img width="24" height="24" src="../../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment1023"><a href="../../dcommon/html/feedback.htm"><img width="24" height="24" src="../../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>
</body>
</html>
