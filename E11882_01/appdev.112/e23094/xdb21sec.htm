<!DOCTYPE html>
<html lang="en" >
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1">
<meta charset="utf-8">
<title>Repository Access Control</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Version 5.1.2 Build 748" />
<meta name="description" content="This manual describes Oracle XML&nbsp;DB. It includes guidelines and examples for storing, generating, accessing, searching, validating, transforming, evolving, and indexing XML data in Oracle Database." />
<meta name="dcterms.created" content="2014-02-20T9:56:17Z" />
<meta name="robots" content="all" />
<meta name="dcterms.title" content="XML DB Developer's Guide" />
<meta name="dcterms.identifier" content="E23094-04" />
<meta name="dcterms.isVersionOf" content="ADXDB" />
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;2002, 2014,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved." />
<link rel="Start" href="../../index.htm" title="Home" type="text/html" />
<link rel="Copyright" href="../../dcommon/html/cpyr.htm" title="Copyright" type="text/html" />

<script type="application/javascript"  src="../../dcommon/js/headfoot.js"></script>
<script type="application/javascript"  src="../../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html" />
<link rel="Index" href="index.htm" title="Index" type="text/html" />
<link rel="Prev" href="xdb19rpl.htm" title="Previous" type="text/html" />
<link rel="Next" href="xdb22pro.htm" title="Next" type="text/html" />
<link rel="alternate" href="../e23094.pdf" title="PDF version" type="application/pdf" />
<link rel="schema.dcterms" href="http://purl.org/dc/terms/" />
<link rel="stylesheet" href="../../dcommon/css/fusiondoc.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/header.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/footer.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/fonts.css">
<link rel="stylesheet" href="../../dcommon/css/foundation.css">
<link rel="stylesheet" href="../../dcommon/css/codemirror.css">
<link rel="stylesheet" type="text/css" title="Default" href="../../nav/css/html5.css">
<link rel="stylesheet" href="../../dcommon/css/respond-480-tablet.css">
<link rel="stylesheet" href="../../dcommon/css/respond-768-laptop.css">
<link rel="stylesheet" href="../../dcommon/css/respond-1140-deskop.css">
<script type="application/javascript" src="../../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">39/54</span> <!-- End Header -->
<script  >
<!-- // <![CDATA[
window.name='xdb21sec'
// ]]> -->
</script> <script  >
// <![CDATA[
function footdisplay(footnum,footnote) {
    var msg = window.open('', 'NewWindow' + footnum,
        'directories=no,height=120,location=no,menubar=no,resizable=yes,' +
        'scrollbars=yes,status=no,toolbar=no,width=598');
    msg.document.open('text/html');
    msg.document.write('<!DOCTYPE html ');
    msg.document.write('PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" ');

    msg.document.write('"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">');
    msg.document.write('<html xmlns="http://www.w3.org/1999/xhtml" lang="en"><head><title>');
    msg.document.write('Footnote ' + footnum);
    msg.document.write('<\/title><meta http-equiv="Content-Type" ');
    msg.document.write('content="text/html; charset=utf-8" />');
    msg.document.write('');
    msg.document.write('<style> <![CDATA[ ');
    msg.document.write('h1 {text-align: center; font-size: 14pt;}');
    msg.document.write('fieldset {border: none;}');
    msg.document.write('form {text-align: center;}');
    msg.document.write(' ]]\u003e <\/style>');
    msg.document.write('<\/head><body><h1>Footnote ' + footnum + '<\/h1><p>');
    msg.document.write(footnote);
    msg.document.write('<\/p><form action="" method="post"><fieldset>');
    msg.document.write('<input type="button" value="OK" ');
    msg.document.write('onclick="window.close();" />');
    msg.document.write('<\/fieldset><\/form><\/body><\/html>');
    msg.document.close();
    msg.focus();
}
// ]]>
</script> <noscript>
<p>The script content on this page is for navigation purposes only and does not alter the content in any way.</p>
</noscript>
<div id="ADXDB2400" class="chapter"><a id="g1040139"></a>
<h1 class="chapter"><span class="secnum">27</span> Repository Access Control</h1>
<p>Oracle Database provides classic database security such as row-level and column-level secure access by database users. It also provides fine-grained access control for resources in Oracle XML&nbsp;DB Repository. This chapter describes the latter. It includes how to create, set, and modify access control lists (ACLs) and how ACL security interacts with other Oracle Database security mechanisms.</p>
<p>This chapter contains these topics:</p>
<ul>
<li>
<p><a href="#CHDCFDEF">Access Control Concepts</a></p>
</li>
<li>
<p><a href="#CHDBEDFJ">Database Privileges for Repository Operations</a></p>
</li>
<li>
<p><a href="#CHDDHFAD">Privileges</a></p>
</li>
<li>
<p><a href="#CHDEHIDA">ACLs and ACEs</a></p>
</li>
<li>
<p><a href="#CEGHCIBA">Working with Access Control Lists (ACLs)</a></p>
</li>
<li>
<p><a href="#CIHFAIBF">ACL Caching</a></p>
</li>
<li>
<p><a href="#i1036286">Repository Resources and Database Table Security</a></p>
</li>
<li>
<p><a href="#CEGHHIHC">Integrating Oracle XML&nbsp;DB with LDAP</a></p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="xdb22pro.htm#g1031760">Chapter 28, "Accessing the Repository using Protocols"</a> for more information about WebDAV</p>
</li>
<li>
<p><a href="appaman.htm#g645751">Chapter 34, "Administering Oracle XML&nbsp;DB"</a> for information about configuring and administering resource security</p>
</li>
<li>
<p><a href="xdb01int.htm#CHDCDBFI">"APIs for XML"</a> for information about the PL/SQL APIs you can use to manage resource security</p>
</li>
</ul>
</div>
<a id="CHDCFDEF"></a>
<div id="ADXDB5453" class="sect1">
<h2 class="sect1">Access Control Concepts</h2>
<p>This section describes several access control terms and concepts. Each of the entities described here, user, role, principal, privilege, access control list (ACL), and access control entry (ACE), is implemented declaratively as an XML document or fragment.</p>
<p>Secure authorization requires defining which users, applications, or functions can have access to which data, to perform which kinds of operations. There are thus three dimensions: (1) <span class="italic">which users</span> can (2) perform <span class="italic">which operations</span> (3) on <span class="italic">which data</span>. We speak of (1) principals, (2) privileges, and (3) objects, corresponding to these three dimensions, respectively. Principals are users or roles.</p>
<p>Principals and privileges (dimensions 1 and 2) are related in a declarative way by defining <span class="italic">access control lists</span>. These are then related to the third dimension, data, in various ways, either declaratively or procedurally. For example, you can protect an Oracle XML&nbsp;DB Repository resource or table data by using PL/SQL procedure <code>DBMS_XDB.setACL</code> to set its controlling ACL.</p>
<div id="ADXDB5454" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref1545"></a>
<h3 class="sect2">Principal: A User or Role</h3>
<p>In the context of fine-grained database access control, a <a id="sthref1546"></a><span class="glossaryterm"><a id="sthref1547"></a>principal</span> is a user or a role. A <span class="glossaryterm"><a id="sthref1548"></a>user</span> can be any person or application that accesses information in the database. A <span class="glossaryterm"><a id="sthref1549"></a><a id="sthref1550"></a>role</span> is composed of users and possibly other roles, but this recursion cannot be circular. Ultimately, each role, and thus each principal, corresponds to a <span class="italic">set of users</span>.</p>
<p>A user is represented for access control purposes by an XML fragment with element <code>user</code>. A role is represented by a fragment with element <code>role</code>.</p>
<p>Oracle Database supports the following as principals:</p>
<ul>
<li>
<p>Database users and <span class="glossaryterm"><a id="sthref1551"></a>database roles</span>. A <span class="bold"><a id="sthref1552"></a>database user</span> is also sometimes referred to as a database <span class="glossaryterm">schema</span> or a user <span class="glossaryterm">account</span>. When a person or application logs onto the database, it uses a database user (schema) and password. A <span class="glossaryterm"><a id="sthref1553"></a>database role</span> corresponds to a set of database privileges that can be granted to database users, applications, or other database roles&thinsp;&mdash;&thinsp;see <a href="#CHDIGFFH">"Database Roles Map Database Privileges to Users"</a>.</p>
</li>
<li>
<p>LDAP users and groups of LDAP users. For details on using LDAP principals see <a href="#CEGHHIHC">"Integrating Oracle XML&nbsp;DB with LDAP"</a>.</p>
</li>
</ul>
<p>When a term such as "user" or "role" is used here without qualification, it applies to each type of user or role. When it is important to distinguish the type, the qualifier "database" or "LDAP" is used.</p>
<a id="CHDIGFFH"></a>
<div id="ADXDB5455" class="sect3">
<h4 class="sect3">Database Roles Map Database Privileges to Users</h4>
<p>A database role is <span class="italic">granted</span> privileges, just as a database user can be granted privileges. A database role serves as an intermediary for mapping database privileges to database users (and applications): a role is granted privileges, and the role is then granted to users (giving them the privileges). The line between a group of users and a group of privileges that are granted to those users is blurred a bit in the concept of database role: the role can serve to group the privileges that are mapped to the users and to group the users to which the privileges are mapped. The mapping is done by defining the role and granting it to users, and traditional database terminology considers the role to be the same thing as the set of privileges that are granted to it.</p>
<p>In the context of fine-grained access control, a different mechanism, an <span class="italic">access control list</span> (ACL), is used as the intermediary that maps privileges to users. A role is simply a set of users. In this context, the act of associating privileges with users and with roles is not a database grant. It is a declarative ACL entry, together with a run-time evaluation of ACLs and resolution of ACL conflicts.</p>
<p>Please keep this terminology difference in mind, to avoid confusion. As a means of mapping privileges to users, a database role combines some of the functionality that in an access-control context is divided into (1) principals, (2) privileges, and (3) ACLs. In access control terminology, roles are classified with users as principals. In traditional database terminology, roles are instead classified as sets of privileges.</p>
</div>
<!-- class="sect3" -->
<div id="ADXDB5457" class="sect3"><a id="sthref1554"></a>
<h4 class="sect3">Principal DAV::owner</h4>
<p>You can use principal <code>DAV::owner</code> in connection with a given Oracle XML&nbsp;DB Repository resource to refer to the resource owner. The owner of a resource is one of the properties of the resource. You can use principal <code>DAV::owner</code> to facilitate ACL sharing among principals, because the owner of a resource often has special rights.</p>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="CIHGFAAE"></a>
<div id="ADXDB5458" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Privilege: A Permission</h3>
<p>A <span class="glossaryterm"><a id="sthref1555"></a>privilege</span> is a particular right or permission that can be granted or denied to a principal. A privilege is aggregate or atomic:</p>
<ul>
<li>
<p><span class="glossaryterm"><a id="sthref1556"></a>Aggregate</span> privilege &ndash; A privilege that includes other privileges.</p>
</li>
<li>
<p><a id="sthref1557"></a><span class="glossaryterm">Atomic</span> privilege &ndash; A privilege that does not include other privileges. It cannot be subdivided.</p>
</li>
</ul>
<p>Aggregate privileges simplify usability when the number of privileges becomes large, and they promote interoperability between ACL clients. See <a href="#CHDDHFAD">"Privileges"</a>.</p>
<p>Aggregate privileges retain their identity: they are not decomposed into the corresponding atomic (leaf) privileges. In WebDAV terms, Oracle Database aggregate privileges are not abstract. This implies that an aggregate privilege acts as a set of pointers to its component privileges, rather than a copy of those components. Thus, an aggregate privilege is always up to date, even if the definition of a component changes.</p>
<p>The set of privileges granted to a principal controls whether that principal can perform a given operation on the data that it protects. For example, if the principal (database user) <code>HR</code> wants to perform the <code>read</code> operation on a given resource, then read privileges must be granted to principal <code>HR</code> prior to the read operation.</p>
</div>
<!-- class="sect2" -->
<div id="ADXDB5461" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref1558"></a>
<h3 class="sect2">Access Control Entry (ACE)</h3>
<p>An <span class="glossaryterm"><a id="sthref1559"></a>access control entry</span> (<span class="glossaryterm">ACE</span>) is an XML element (<code>ace</code>) that is an entry in an access control list (ACL). An ACE either grants or denies access to some repository resource or other database data by a particular principal (user or role). The ACE does not, itself, specify which data to protect. That is done outside the ACE and the ACL, by associating the ACL with target data. One way to make that association is by using PL/SQL procedure <code>DBMS_XDB.setACL</code>.</p>
<p>See <a href="#CHDBBGEA">"ACL and ACE Evaluation"</a>.</p>
<p>An Oracle XML&nbsp;DB ACE either grants or denies privileges for a principal. An <code><span class="codeinlinebold">ace</span></code> element has the following:</p>
<ul>
<li>
<p>Operation <code>grant</code>: either <code>true</code> (to grant) or <code>false</code> (to deny) access.</p>
</li>
<li>
<p>Either a valid principal (element <code>principal</code>) or a completed list of principals (element <code>invert</code>).</p>
</li>
<li>
<p>Privileges: A set of privileges to be granted or denied for a particular principal (element <code>privilege</code>).</p>
</li>
<li>
<p>Principal format (optional): The format of the principal. An LDAP distinguished name (DN), a short name (database user/role or LDAP nickname), or an LDAP GUID. The default value is <code>short name</code>. If the principal name matches both a database user and an LDAP nickname, it is assumed to refer to the LDAP nickname.</p>
</li>
<li>
<p>Collection (optional): A <code>BOOLEAN</code> attribute that specifies whether the principal is a collection of users (LDAP group or database role) or a single user (LDAP or database user).</p>
</li>
<li>
<p>Start and end date (optional): Attributes that define the time period over which an ACE is valid. See <a href="#BCGIGFFG">"ACE Validity Time Period"</a>.</p>
</li>
</ul>
<p><a href="#CHDGJBCF">Example 27-1</a> shows a simple ACE that grants privilege <code>DAV::all</code> to principal <code>DAV::owner</code>. It thus grants all privileges to the owner of the resource to which its ACL applies.</p>
<div id="ADXDB5462" class="example">
<p class="titleinexample"><a id="CHDGJBCF"></a>Example 27-1 Simple Access Control Entry (ACE) that Grants a Privilege</p>
<pre>
&lt;ace&gt;
  &lt;grant&gt;true&lt;/grant&gt;
  &lt;principal&gt;DAV::owner&lt;/principal&gt;
  &lt;privilege&gt;
    &lt;DAV::all/&gt;
  &lt;/privilege&gt;
&lt;/ace&gt;
</pre></div>
<!-- class="example" --></div>
<!-- class="sect2" -->
<div id="ADXDB5463" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref1560"></a>
<h3 class="sect2">Access Control List (ACL)</h3>
<p>An <span class="glossaryterm"><a id="sthref1561"></a>access control list</span> (<span class="glossaryterm">ACL</span>) is a list of access control entries (ACEs). By default, order in the list is relevant (see <a href="#CHDBBGEA">"ACL and ACE Evaluation"</a>). <a href="#CHDGIJJJ">Example 27-2</a> shows a simple ACL that contains only the ACE of <a href="#CHDGJBCF">Example 27-1</a>.</p>
<div id="ADXDB5464" class="example">
<p class="titleinexample"><a id="CHDGIJJJ"></a>Example 27-2 Simple Access Control List (ACL) that Grants a Privilege</p>
<pre>
&lt;acl description="myacl"
     xmlns="http://xmlns.oracle.com/xdb/acl.xsd"
     xmlns:dav="DAV:"
     xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
     xsi:schemaLocation="http://xmlns.oracle.com/xdb/acl.xsd
                         http://xmlns.oracle.com/xdb/acl.xsd"&gt;
  &lt;ace&gt;
    &lt;grant&gt;true&lt;/grant&gt;
    &lt;principal&gt;dav:owner&lt;/principal&gt;
    &lt;privilege&gt;
      &lt;dav:all/&gt;
    &lt;/privilege&gt;
  &lt;/ace&gt;
&lt;/acl&gt;
</pre></div>
<!-- class="example" --></div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="CHDBEDFJ"></a>
<div id="ADXDB5465" class="sect1">
<h2 class="sect1">Database Privileges for Repository Operations</h2>
<p><a href="#g1037226">Table 27-1</a> shows the database privileges required for some common operations on resources in Oracle XML&nbsp;DB Repository. In addition to the privileges listed in column <span class="bold">Privileges Required</span> you must have the <code>resolve</code> <a id="sthref1562"></a>privilege for the folder containing the resource and for all of its parent folders, up to the root folder.</p>
<div id="ADXDB5466" class="tblhruleformalwide">
<p class="titleintable"><a id="sthref1563"></a><a id="g1037226"></a>Table 27-1 Database Privileges Needed for Operations on Oracle XML&nbsp;DB Resources</p>
<table class="cellalignment1032" title="Database Privileges Needed for Operations on Oracle XML DB Resources " summary="This table describes privileges needed for various operations on Oracle XML DB resources, such as create, delete, and update." >
<thead>
<tr class="cellalignment1020">
<th class="cellalignment1027" id="r1c1-t3">Operation</th>
<th class="cellalignment1027" id="r1c2-t3">Description</th>
<th class="cellalignment1027" id="r1c3-t3">Privileges Required</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1020">
<td class="cellalignment1028" id="r2c1-t3" headers="r1c1-t3">
<p><code>CREATE</code></p>
</td>
<td class="cellalignment1028" headers="r2c1-t3 r1c2-t3">
<p>Create a new resource in folder F</p>
</td>
<td class="cellalignment1028" headers="r2c1-t3 r1c3-t3">
<p><code>update</code> and <code>link</code> on folder F</p>
</td>
</tr>
<tr class="cellalignment1020">
<td class="cellalignment1028" id="r3c1-t3" headers="r1c1-t3">
<p><code>DELETE</code></p>
</td>
<td class="cellalignment1028" headers="r3c1-t3 r1c2-t3">
<p>Delete resource R from folder F</p>
</td>
<td class="cellalignment1028" headers="r3c1-t3 r1c3-t3">
<p><code>update</code> and <code>unlink-from</code> on R, <code>update</code> and <code>unlink</code> on folder F</p>
</td>
</tr>
<tr class="cellalignment1020">
<td class="cellalignment1028" id="r4c1-t3" headers="r1c1-t3">
<p><code>UPDATE</code></p>
</td>
<td class="cellalignment1028" headers="r4c1-t3 r1c2-t3">
<p>Update the contents or properties of resources R</p>
</td>
<td class="cellalignment1028" headers="r4c1-t3 r1c3-t3">
<p><code>update</code> on R</p>
</td>
</tr>
<tr class="cellalignment1020">
<td class="cellalignment1028" id="r5c1-t3" headers="r1c1-t3">
<p><code>GET</code></p>
</td>
<td class="cellalignment1028" headers="r5c1-t3 r1c2-t3">
<p>An FTP or HTTP(S) retrieval of resource R</p>
</td>
<td class="cellalignment1028" headers="r5c1-t3 r1c3-t3">
<p><code>read-properties</code>, <code>read-contents</code> on R</p>
</td>
</tr>
<tr class="cellalignment1020">
<td class="cellalignment1028" id="r6c1-t3" headers="r1c1-t3">
<p><code>SET_ACL</code></p>
</td>
<td class="cellalignment1028" headers="r6c1-t3 r1c2-t3">
<p>Set the ACL of a resource R</p>
</td>
<td class="cellalignment1028" headers="r6c1-t3 r1c3-t3">
<p><code>DAV::write-acl</code> on R</p>
</td>
</tr>
<tr class="cellalignment1020">
<td class="cellalignment1028" id="r7c1-t3" headers="r1c1-t3">
<p><code>LIST</code></p>
</td>
<td class="cellalignment1028" headers="r7c1-t3 r1c2-t3">
<p>List the resources in folder F</p>
</td>
<td class="cellalignment1028" headers="r7c1-t3 r1c3-t3">
<p><code>read-properties</code> on folder F, <code>read-properties</code> on resources in folder F. Only those resources on which the user has <code>read-properties</code> privilege are listed.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblhruleformalwide" -->
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="appaman.htm#i640804">"Upgrading an Existing Oracle XML&nbsp;DB Installation"</a> for information about treatment of database access privileges when upgrading</div>
</div>
<!-- class="sect1" -->
<a id="CHDDHFAD"></a>
<div id="ADXDB2410" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Privileges</h2>
<p>This section describes the privileges that are provided with Oracle Database. These include the standard WebDAV privileges, which use the WebDAV namespace <a id="sthref1564"></a><code><span class="codeinlinebold">DAV:</span></code><a id="sthref1565" href="#sthref1565" onclick='footdisplay(1,"Note the colon (\u003ccode\u003e:\u003c/code\u003e) as part of the namespace name. \u003ccode\u003eDAV:\u003c/code\u003e is the namespace itself, \u003cspan class=\"italic\"\u003enot\u003c/span\u003e a prefix. A prefix commonly used for namespace \u003ccode\u003eDAV:\u003c/code\u003e is \u003ccode\u003edav\u003c/code\u003e, but this is only conventional. \u003ccode\u003edav\u003c/code\u003e is not a predefined prefix for Oracle XML&nbsp;DB. ")'><sup class="tablefootnote">Foot&nbsp;1&nbsp;</sup></a>, and Oracle-specific privileges, which use the Oracle XML&nbsp;DB ACL namespace, <code>http://xmlns.oracle.com/xdb/acl.xsd</code>, which has the predefined prefix <a id="sthref1566"></a><code><span class="codeinlinebold">xdb</span></code>.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
RFC 3744: "Web Distributed Authoring and Versioning (WebDAV) Access Control Protocol", IETF Network Working Group Request For Comments #3744, May 2004</div>
<div id="ADXDB5472" class="sect2"><a id="sthref1567"></a>
<h3 class="sect2">Atomic Privileges</h3>
<p><a href="#CHDBECJA">Table 27-2</a> lists the atomic privileges.</p>
<div id="ADXDB5473" class="tblhruleformalwide">
<p class="titleintable"><a id="sthref1568"></a><a id="CHDBECJA"></a>Table 27-2 Atomic Privileges</p>
<table class="cellalignment1032" title="Atomic Privileges" summary="This table describes atomic privileges supported by Oracle XML DB. It includes the database equivalent privilege." dir="ltr">
<thead>
<tr class="cellalignment1020">
<th class="cellalignment1027" id="r1c1-t6">Atomic Privilege</th>
<th class="cellalignment1027" id="r1c2-t6">Description</th>
<th class="cellalignment1027" id="r1c3-t6">Database Counterpart</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1020">
<td class="cellalignment1028" id="r2c1-t6" headers="r1c1-t6">
<p><code>DAV::lock</code></p>
</td>
<td class="cellalignment1028" headers="r2c1-t6 r1c2-t6">
<p>Lock a resource using WebDAV locks.</p>
</td>
<td class="cellalignment1028" headers="r2c1-t6 r1c3-t6">
<p><code>UPDATE</code></p>
</td>
</tr>
<tr class="cellalignment1020">
<td class="cellalignment1028" id="r3c1-t6" headers="r1c1-t6">
<p><code>DAV::read-current-user-privilege-set</code></p>
</td>
<td class="cellalignment1028" headers="r3c1-t6 r1c2-t6">
<p>Access the <code>DAV::current-user-privilege-set</code> property of a resource.</p>
</td>
<td class="cellalignment1028" headers="r3c1-t6 r1c3-t6">
<p>N/A</p>
</td>
</tr>
<tr class="cellalignment1020">
<td class="cellalignment1028" id="r4c1-t6" headers="r1c1-t6">
<p><code>DAV::take-ownership</code></p>
</td>
<td class="cellalignment1028" headers="r4c1-t6 r1c2-t6">
<p>Take ownership of a resource.</p>
</td>
<td class="cellalignment1028" headers="r4c1-t6 r1c3-t6">
<p>N/A</p>
</td>
</tr>
<tr class="cellalignment1020">
<td class="cellalignment1028" id="r5c1-t6" headers="r1c1-t6">
<p><code>DAV::unlock</code></p>
</td>
<td class="cellalignment1028" headers="r5c1-t6 r1c2-t6">
<p>Unlock a resource locked using a WebDAV lock.</p>
</td>
<td class="cellalignment1028" headers="r5c1-t6 r1c3-t6">
<p><code>UPDATE</code></p>
</td>
</tr>
<tr class="cellalignment1020">
<td class="cellalignment1028" id="r6c1-t6" headers="r1c1-t6">
<p><code>DAV::write-content</code></p>
</td>
<td class="cellalignment1028" headers="r6c1-t6 r1c2-t6">
<p>Modify the content of a resource.</p>
</td>
<td class="cellalignment1028" headers="r6c1-t6 r1c3-t6">
<p><code>UPDATE</code></p>
</td>
</tr>
<tr class="cellalignment1020">
<td class="cellalignment1028" id="r7c1-t6" headers="r1c1-t6">
<p><code>DAV::write-properties</code></p>
</td>
<td class="cellalignment1028" headers="r7c1-t6 r1c2-t6">
<p>Modify the properties of a resource. Lock or unlock a resource. Modifiable properties include <code>Author</code>, <code>DisplayName</code>, <code>Language</code>, <code>CharacterSet</code>, <code>ContentType</code>, <code>SBResExtra</code>, <code>Owner</code>, <code>OwnerID</code>, <code>CreationDate</code>, <code>Modification Date</code>, <code>ACL</code>, <code>ACLOID</code>, <code>Lock</code>, and <code>Locktoken</code>.</p>
</td>
<td class="cellalignment1028" headers="r7c1-t6 r1c3-t6">
<p><code>UPDATE</code></p>
</td>
</tr>
<tr class="cellalignment1020">
<td class="cellalignment1028" id="r8c1-t6" headers="r1c1-t6">
<p><code>xdb:link</code></p>
</td>
<td class="cellalignment1028" headers="r8c1-t6 r1c2-t6">
<p>Allow creation of links from a resource.</p>
</td>
<td class="cellalignment1028" headers="r8c1-t6 r1c3-t6">
<p><code>INSERT</code></p>
</td>
</tr>
<tr class="cellalignment1020">
<td class="cellalignment1028" id="r9c1-t6" headers="r1c1-t6">
<p><code>xdb:link-to</code></p>
</td>
<td class="cellalignment1028" headers="r9c1-t6 r1c2-t6">
<p>Allow creation of links to a resource.</p>
</td>
<td class="cellalignment1028" headers="r9c1-t6 r1c3-t6">
<p>N/A</p>
</td>
</tr>
<tr class="cellalignment1020">
<td class="cellalignment1028" id="r10c1-t6" headers="r1c1-t6">
<p><code>xdb:read-acl</code></p>
</td>
<td class="cellalignment1028" headers="r10c1-t6 r1c2-t6">
<p>Read the ACL of a resource.</p>
</td>
<td class="cellalignment1028" headers="r10c1-t6 r1c3-t6">
<p><code>SELECT</code></p>
</td>
</tr>
<tr class="cellalignment1020">
<td class="cellalignment1028" id="r11c1-t6" headers="r1c1-t6">
<p><code>xdb:read-contents</code></p>
</td>
<td class="cellalignment1028" headers="r11c1-t6 r1c2-t6">
<p>Read the contents of a resource.</p>
</td>
<td class="cellalignment1028" headers="r11c1-t6 r1c3-t6">
<p><code>SELECT</code></p>
</td>
</tr>
<tr class="cellalignment1020">
<td class="cellalignment1028" id="r12c1-t6" headers="r1c1-t6">
<p><code>xdb:read-properties</code></p>
</td>
<td class="cellalignment1028" headers="r12c1-t6 r1c2-t6">
<p>Read the properties of a resource.</p>
</td>
<td class="cellalignment1028" headers="r12c1-t6 r1c3-t6">
<p><code>SELECT</code></p>
</td>
</tr>
<tr class="cellalignment1020">
<td class="cellalignment1028" id="r13c1-t6" headers="r1c1-t6">
<p><code>xdb:resolve</code></p>
</td>
<td class="cellalignment1028" headers="r13c1-t6 r1c2-t6">
<p>Traverse a folder (for folders only).</p>
</td>
<td class="cellalignment1028" headers="r13c1-t6 r1c3-t6">
<p><code>SELECT</code></p>
</td>
</tr>
<tr class="cellalignment1020">
<td class="cellalignment1028" id="r14c1-t6" headers="r1c1-t6">
<p><code>xdb:unlink</code></p>
</td>
<td class="cellalignment1028" headers="r14c1-t6 r1c2-t6">
<p>Allow deletion of links from a resource.</p>
</td>
<td class="cellalignment1028" headers="r14c1-t6 r1c3-t6">
<p><code>DELETE</code></p>
</td>
</tr>
<tr class="cellalignment1020">
<td class="cellalignment1028" id="r15c1-t6" headers="r1c1-t6">
<p><code>xdb:unlink-from</code></p>
</td>
<td class="cellalignment1028" headers="r15c1-t6 r1c2-t6">
<p>Allow deletion of links to a resource.</p>
</td>
<td class="cellalignment1028" headers="r15c1-t6 r1c3-t6">
<p>N/A</p>
</td>
</tr>
<tr class="cellalignment1020">
<td class="cellalignment1028" id="r16c1-t6" headers="r1c1-t6">
<p><code>xdb:update-acl</code></p>
</td>
<td class="cellalignment1028" headers="r16c1-t6 r1c2-t6">
<p>Change the contents of the resource ACL.</p>
</td>
<td class="cellalignment1028" headers="r16c1-t6 r1c3-t6">
<p><code>UPDATE</code></p>
</td>
</tr>
<tr class="cellalignment1020">
<td class="cellalignment1028" id="r17c1-t6" headers="r1c1-t6">
<p><code>xdb:write-acl-ref</code></p>
</td>
<td class="cellalignment1028" headers="r17c1-t6 r1c2-t6">
<p>Change the ACLOID of a resource.</p>
</td>
<td class="cellalignment1028" headers="r17c1-t6 r1c3-t6">
<p><code>UPDATE</code></p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblhruleformalwide" --></div>
<!-- class="sect2" -->
<div id="ADXDB5474" class="sect2"><a id="sthref1569"></a>
<h3 class="sect2">Aggregate Privileges</h3>
<p><a href="#CHDGJIHA">Table 27-3</a> lists the aggregate privileges and the atomic privileges of which each is composed.</p>
<div id="ADXDB5475" class="tblhruleformal">
<p class="titleintable"><a id="sthref1570"></a><a id="CHDGJIHA"></a>Table 27-3 Aggregate Privileges</p>
<table class="cellalignment1032" title="Aggregate Privileges" summary="This table describes aggregate privileges supported by Oracle XML DB." dir="ltr">
<thead>
<tr class="cellalignment1020">
<th class="cellalignment1027" id="r1c1-t7">Aggregate Privilege</th>
<th class="cellalignment1027" id="r1c2-t7">Component Atomic Privileges</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1020">
<td class="cellalignment1028" id="r2c1-t7" headers="r1c1-t7">
<p><code>DAV::all</code></p>
</td>
<td class="cellalignment1028" headers="r2c1-t7 r1c2-t7">
<p>All atomic DAV privileges.</p>
</td>
</tr>
<tr class="cellalignment1020">
<td class="cellalignment1028" id="r3c1-t7" headers="r1c1-t7">
<p><code>xdb:all</code></p>
</td>
<td class="cellalignment1028" headers="r3c1-t7 r1c2-t7">
<p>All atomic DAV privileges plus <code>xdb:link-to</code>.</p>
</td>
</tr>
<tr class="cellalignment1020">
<td class="cellalignment1028" id="r4c1-t7" headers="r1c1-t7">
<p><code>DAV::bind</code></p>
</td>
<td class="cellalignment1028" headers="r4c1-t7 r1c2-t7">
<p><code>xdb:link</code></p>
</td>
</tr>
<tr class="cellalignment1020">
<td class="cellalignment1028" id="r5c1-t7" headers="r1c1-t7">
<p><code>DAV::unbind</code></p>
</td>
<td class="cellalignment1028" headers="r5c1-t7 r1c2-t7">
<p><code>xdb:unlink</code></p>
</td>
</tr>
<tr class="cellalignment1020">
<td class="cellalignment1028" id="r6c1-t7" headers="r1c1-t7">
<p><code>DAV::read</code></p>
</td>
<td class="cellalignment1028" headers="r6c1-t7 r1c2-t7">
<p><code>xdb:read-properties</code>, <code>xdb:read-contents</code>, <code>xdb:resolve</code></p>
</td>
</tr>
<tr class="cellalignment1020">
<td class="cellalignment1028" id="r7c1-t7" headers="r1c1-t7">
<p><code>DAV::read-acl</code></p>
</td>
<td class="cellalignment1028" headers="r7c1-t7 r1c2-t7">
<p><code>xdb:read-acl</code></p>
</td>
</tr>
<tr class="cellalignment1020">
<td class="cellalignment1028" id="r8c1-t7" headers="r1c1-t7">
<p><code>DAV::write</code></p>
</td>
<td class="cellalignment1028" headers="r8c1-t7 r1c2-t7">
<p><code>DAV::write-content</code>, <code>DAV::write-properties</code>, <code>xdb:link</code>, <code>xdb:unlink</code>, <code>xdb:unlink-from</code></p>
</td>
</tr>
<tr class="cellalignment1020">
<td class="cellalignment1028" id="r9c1-t7" headers="r1c1-t7">
<p><code>DAV::write-acl</code></p>
</td>
<td class="cellalignment1028" headers="r9c1-t7 r1c2-t7">
<p><code>xdb:write-acl-ref</code>, <code>xdb:update-acl</code></p>
</td>
</tr>
<tr class="cellalignment1020">
<td class="cellalignment1028" id="r10c1-t7" headers="r1c1-t7">
<p><code>DAV::update</code></p>
</td>
<td class="cellalignment1028" headers="r10c1-t7 r1c2-t7">
<p><code>DAV::write-content</code>, <code>DAV::write-properties</code></p>
</td>
</tr>
<tr class="cellalignment1020">
<td class="cellalignment1028" id="r11c1-t7" headers="r1c1-t7">
<p><code>xdb:update</code></p>
</td>
<td class="cellalignment1028" headers="r11c1-t7 r1c2-t7">
<p><code>DAV::write-properties</code>, <code>DAV::write-content</code></p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblhruleformal" --></div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="CHDEHIDA"></a>
<div id="ADXDB2430" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">ACLs and ACEs</h2>
<p>An access control list (ACL) is a standard security mechanism that is used in some languages, such as Java, and some operating systems, such as Microsoft Windows. ACLs are also a part of the WebDAV standard. ACLs are used to protect resources, which in the case of Oracle Database can be either resources (files and folders) in Oracle XML&nbsp;DB Repository.</p>
<p>Repository resources can be accessed using WebDAV, and their protecting ACLs act as WebDAV ACLs. Each repository resource is protected by some ACL. ACLs that protect a resource are enforced no matter how the resource is accessed, whether by WebDAV, SQL, or any other way.</p>
<p>When a new resource is created in Oracle XML&nbsp;DB Repository, by default the ACL on its parent folder is used to protect the resource. After the resource is created, a new ACL can be set on it.</p>
<p>ACLs in Oracle Database are XML documents that are validated against the Oracle Database ACL XML schema, which is located in Oracle XML&nbsp;DB Repository at <code>/sys/schemas/PUBLIC/xmlns.oracle.com/xdb/acl.xsd</code>. ACLs are themselves stored and managed as resources in the repository.</p>
<p>Before a principal performs an operation on ACL-protected data, the user privileges for the protected data are checked. The set of privileges checked depends on the operation to be performed.</p>
<p>Aggregate privileges are composed of other privileges. When an ACL is stored, the aggregate privileges it refers to act as sets of pointers to their component privileges.</p>
<p>All ACLs are stored in table <code><span class="codeinlinebold"><a id="sthref1571"></a>XDB$ACL</span></code>, which is owned by database user <code><a id="sthref1572"></a><a id="sthref1573"></a><a id="sthref1574"></a>XDB</code>. This is an XML schema-based <code>XMLType</code> table. Each row in this table (and therefore each ACL) has a system-generated object identifier (<span class="glossaryterm"><a id="sthref1575"></a>OID</span>) that can be accessed as a column named <code><span class="codeinlinebold"><a id="sthref1576"></a>OBJECT_ID</span></code>.</p>
<p>Each Oracle XML&nbsp;DB Repository resource has a property named <code><span class="codeinlinebold"><a id="sthref1577"></a>ACLOID</span></code>. The <code>ACLOID</code> stores the OID of the ACL that protects the resource. An ACL is itself a resource, and the <code>XMLRef</code> property of an ACL, for example, <code>/sys/acls/all_all_acl.xml</code>, is a <code>REF</code> to the row in table <code>XDB$ACL</code> that contains the content of the ACL. These two properties form the link between table <code>XDB$RESOURCE</code>, which stores Oracle XML&nbsp;DB resources, and table <code>XDB$ACL</code>.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="apphxdb.htm#g648966">Appendix A, "Oracle-Supplied XML Schemas and Examples"</a> for the ACL XML schema</p>
</li>
<li>
<p><a class="olink TDPSG20030" href="../../server.112/e10575/tdpsg_user_accounts.htm#TDPSG20030"><span class="italic">Oracle Database 2 Day + Security Guide</span></a> for information about database schema <code>XDB</code></p>
</li>
</ul>
</div>
<div id="ADXDB5480" class="sect2"><a id="sthref1578"></a>
<h3 class="sect2">System <a id="sthref1579"></a><a id="sthref1580"></a>ACLs</h3>
<p>Some ACLs are predefined and supplied with Oracle Database. They are referred to as <span class="glossaryterm"><a id="sthref1581"></a><a id="sthref1582"></a>system ACLs</span>.</p>
<p>There is only one ACL that is self-protected, that is, protected by its own contents. It is the <span class="glossaryterm"><a id="sthref1583"></a>bootstrap ACL</span>, a system ACL that is located in Oracle XML&nbsp;DB Repository at <code>/sys/acls/bootstrap_acl.xml</code>. The bootstrap ACL grants <code>READ</code> privilege to all users. It also grants <code>FULL ACCESS</code> to database roles <code><a id="sthref1584"></a><a id="sthref1585"></a><a id="sthref1586"></a>XDBADMIN</code> (the Oracle XML&nbsp;DB administrator) and <code>DBA</code>. Database role <code>XDBADMIN</code> is particularly useful for users who must register global XML schemas.</p>
<p>Other system ACLs include the following. Each is protected by the bootstrap ACL.</p>
<ul>
<li>
<p><code><span class="codeinlinebold">all_all_acl.xml</span></code> &ndash; Grants all privileges to all users.</p>
</li>
<li>
<p><code><span class="codeinlinebold">all_owner_acl.xml</span></code> &ndash; Grants all privileges to the owner of the resource.</p>
</li>
<li>
<p><code><span class="codeinlinebold">ro_all_acl.xml</span></code> &ndash; Grants read privileges to all users.</p>
</li>
</ul>
<p>System ACLs use the file-naming convention <code><span class="codeinlineitalic">&lt;privilege&gt;</span></code><code>_</code><code><span class="codeinlineitalic">&lt;users&gt;</span></code><code>_acl.xml</code>, where <code><span class="codeinlineitalic">&lt;privilege&gt;</span></code> represents the privilege granted, and <code><span class="codeinlineitalic">&lt;users&gt;</span></code> represents the users that are granted access to the resource. When you define your own ACLs, you can use any names you like.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="xdb05sto.htm#BJFFCACF">"Local and Global XML Schemas"</a></div>
</div>
<!-- class="sect2" -->
<a id="CHDBBGEA"></a>
<div id="ADXDB2435" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">ACL and ACE Evaluation</h3>
<p><a id="CHDJGEEH"></a>Privileges are checked before a principal is allowed to access a repository resource that is protected by one or more ACLs. This check is done by evaluating the protecting ACLs for that principal, in order. For each such ACL, the ACEs in it that apply to the principal are examined, in order.</p>
<p>If one ACE grants a certain privilege to the current user and another ACE denies that privilege to the user, then a conflict arises. There are two possible ways to manage conflicts among ACEs for the same principal.</p>
<ul>
<li>
<p>The default behavior, termed <code><span class="codeinlinebold">ace-order</span></code>, is to use only the <span class="italic">first</span> ACE that occurs for a given principal. Additional ACEs for that principal have no effect. In this case, <span class="italic">ACE order is relevant</span>.</p>
</li>
<li>
<p>You can, however, configure the database to use an alternate behavior, <code><span class="codeinlinebold">deny-trumps-grant</span></code>. In this case, any ACE with child <code>deny</code> for a given principal denies permission to that principal, whether or not there are other ACEs for that principal that have a <code>grant</code> child. In this case, <code>deny</code> always takes precedence over <code>grant</code>, and <span class="italic">ACE order is irrelevant</span>.</p>
</li>
</ul>
<p>You can configure ACL evaluation behavior by setting configuration parameter <code><span class="codeinlinebold">acl-evaluation-method</span></code>, in configuration file <code>xdbconfig.xml</code>, to either <code>ace-order</code> or <code>deny-trumps-grant</code>. The default configuration file specifies <code>ace-method</code>, but the default value for element <code>acl-evaluation-method</code>, used when no method is given, is <code>deny-trumps-grant</code>.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
In releases prior to Oracle Database&nbsp;11<span class="italic">g</span> Release 1, only one ACL evaluation behavior was available: <code>deny-trumps-grant</code> (though it was not specified in the configuration file).
<p>The change to use <code>ace-order</code> as the default behavior has important consequences for upgrading and downgrading between database versions. See <a href="appaman.htm#i640804">"Upgrading an Existing Oracle XML&nbsp;DB Installation"</a>.</p>
</div>
</div>
<!-- class="sect2" -->
<div id="ADXDB5481" class="sect2"><a id="sthref1587"></a>
<h3 class="sect2">ACL Validation</h3>
<p>When an ACL is created, it is validated against the XML schema for ACLs, and some correctness tests are run, such as ensuring that start and end dates for ACEs are in chronological order. There is no complete check at ACL creation time of relations among ACLs. For example, no check is made for the existence and correctness of a parent ACL. (See <a href="#CIHJCJHE">"ACL Inheritance"</a>.)</p>
<p>Such a complete check of ACL correctness is called <span class="glossaryterm">ACL validity</span> checking, but it is not to be confused with its XML <span class="italic">schema</span> validity. For an ACL to be valid (as an ACL), it must also be XML schema-valid, but the converse does not hold.</p>
<p>A full ACL validity check is made at run time, whenever an ACL is evaluated to check whether a principal has the proper privileges for some operation. If this check finds that the ACL is invalid, then all privileges that the ACL would grant are <span class="italic">denied</span> to the specified principals.</p>
<p>ACL validity can also be checked independently of its run-time use to check privileges, by invoking PL/SQL procedure <code>DBMS_XDBZ.validateACL</code>. You can do this ahead of time, to avoid run-time errors or privilege denial due to ACL invalidity.</p>
</div>
<!-- class="sect2" -->
<a id="CIHJCJHE"></a>
<div id="ADXDB5482" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">ACL Inheritance</h3>
<p>An ACL can inherit grants, that is, associations of principals with privileges, from another ACL. Inheritance provides flexibility of definition and promotes reuse of access control policies.</p>
<p>Grants are defined in ACEs, so inheritance of grants involves traversing ACL inheritance chains and the associated ACES. But ACL inheritance, and therefore grant inheritance, can be <span class="italic">recursive</span>. If ACL <span class="italic">A1</span> inherits from ACL <span class="italic">A2</span>, a grant defined by <span class="italic">A1</span> is not necessarily present in an ACE of <span class="italic">A2</span>. It might instead be in an ACE in ACL <span class="italic">A3</span>, where <span class="italic">A2</span> inherits (directly or indirectly) from <span class="italic">A3</span>.</p>
<p>ACL inheritance is simple, not multiple, inheritance: an ACL inherits from at most one other ACL. Cycles are not permitted in an inheritance chain: an ACL that inherits directly or indirectly from itself is invalid. An ACL that inherits from an ACL that does not exist is also invalid.</p>
<p>The grants <span class="glossaryterm"><a id="sthref1588"></a>declared in</span> an ACL are those explicitly defined by its ACES. The grants <span class="glossaryterm"><a id="sthref1589"></a>defined for</span> an ACL are those defined by its ACES plus those inherited by it.</p>
<p>There are two kinds of ACL inheritance, extending inheritance and constraining inheritance, specified using element <code>extends-from</code> or element <code>constrained-with</code>, respectively. Both elements reference the ACL being inherited from. An ACL can have at most one <code>extends-from</code> or <code>constrained-with</code> element. <a href="#CHDHAHHC">Example 27-3</a> shows an <code>extends-from</code> element. <a href="#CHDBIGFE">Example 27-4</a> shows a <code>constrained-with</code> element.</p>
<div id="ADXDB5483" class="example">
<p class="titleinexample"><a id="CHDHAHHC"></a>Example 27-3 Element extends-from</p>
<pre>
&lt;extends-from type="simple" href="/sys/acls/extend_acl.xml"/&gt;
</pre></div>
<!-- class="example" -->
<div id="ADXDB5484" class="example">
<p class="titleinexample"><a id="CHDBIGFE"></a>Example 27-4 Element constrained-with</p>
<pre>
&lt;constrained-with type="simple" href="/sys/acls/constrain_acl.xml"/&gt;
</pre></div>
<!-- class="example" -->
<p><span class="glossaryterm"><a id="sthref1590"></a><a id="sthref1591"></a>Extending inheritance</span> extends the grants that are declared in the inheriting ACL (the <span class="glossaryterm"><a id="sthref1592"></a><a id="sthref1593"></a>child ACL</span>) by some grants that are defined for the ACL it is inheriting from (the <span class="glossaryterm"><a id="sthref1594"></a><a id="sthref1595"></a>parent ACL</span>). For example, if ACL <span class="italic">A1</span> declares that it extends from ACL <span class="italic">A2</span>, then <span class="italic">A1</span> can include grants defined for <span class="italic">A2</span>.</p>
<p><span class="glossaryterm"><a id="sthref1596"></a><a id="sthref1597"></a>Constraining inheritance</span> restricts the grants that are declared in the inheriting ACL to grants that are also defined for the ACL it is inheriting from. For example, if ACL <span class="italic">A1</span> declares that it inherits from ACL <span class="italic">A2</span> by constraining, then all grants defined for <span class="italic">A1</span> must also be defined for <span class="italic">A2</span>.</p>
<p>Extending inheritance is a set <span class="italic">union</span> operation, and constraining inheritance is a set <span class="italic">intersection</span> operation. When ACL A1 extends from ACL A2, the grants in both can be <span class="italic">combined</span> to determine whether a given principal is granted a given privilege. When ACL <span class="italic">A1</span> is constrained with ACL <span class="italic">A2</span>, only the grants that are <span class="italic">common</span> to both <span class="italic">A1</span> and <span class="italic">A2</span> are used to determine a grant.</p>
<p>More precisely, when ACL <span class="italic">A1</span> inherits from ACL <span class="italic">A2</span>, and <span class="italic">A1</span> is checked to see if a given principal has been granted a given set of privileges, determination proceeds as follows:</p>
<ul>
<li>
<p>If <span class="italic">A1</span> extends from <span class="italic">A2</span> &ndash; The ACEs that are declared in <span class="italic">A1</span> are examined first. If they do not grant all or deny any of the privileges in question to the principal, then the ACEs defined in the <code>extending-from</code> parent of <span class="italic">A1</span> are examined. This in turn means that if the ACEs that are explicitly declared in <span class="italic">A2</span> do not grant all or deny any of the privileges in question to the principal, and if <span class="italic">A2</span> extends from <span class="italic">A3</span>, then <span class="italic">A3</span> is examined. And so on.</p>
</li>
<li>
<p>If <span class="italic">A1</span> is constrained with <span class="italic">A2</span> &ndash; The ACEs that are explicitly declared in <span class="italic">A1</span> and those defined for <span class="italic">A2</span> are each examined separately to ensure that they <span class="italic">both</span> grant all of the privileges in question to the specified principal. The check for <span class="italic">A2</span> proceeds the same way if it is constrained by ACL <span class="italic">A3</span>, and so on.</p>
</li>
</ul>
<p>Put another way, extending inheritance accumulates granted privileges and constraining inheritance accumulates denied privileges. In extending inheritance, if either the child or the parent ACL grants a privilege to the principal, then the privilege is granted. In constraining inheritance, if either the child or the parent ACL denies a privilege, then it is denied.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#CHDHIHCG">Example 27-5</a> for an ACL that uses extending inheritance</div>
</div>
<!-- class="sect2" -->
<div id="ADXDB5485" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref1598"></a>
<h3 class="sect2">Complementing the Principals in an ACE: Element invert</h3>
<p>It is sometimes more convenient to define a set of principals by complementing another set of principals&thinsp;&mdash;&thinsp;that is the purpose of ACE element <code>invert</code>. Instead of listing each of the principals that you want to include, wrap the list of principals that you want to exclude with element <code>invert</code>.</p>
<p>In <a href="#CHDHIHCG">Example 27-5</a>, the first ACE denies privilege <code>privilege1</code> to all principals except <code>IntranetUsers</code>. Because (by default) ACEs are considered in the order they appear, all subsequent ACEs are overridden by the first ACE, so principal <code>NonIntraNetUser</code> is denied privilege <code>privilege1</code> in spite of the explicit grant.</p>
<div id="ADXDB5486" class="example">
<p class="titleinexample"><a id="CHDHIHCG"></a>Example 27-5 Complementing a Set of Principals with Element invert</p>
<pre>
&lt;acl description="invert ACL" 
     xmlns="http://xmlns.oracle.com/xdb/acl.xsd"
     xmlns:dav="DAV:" 
     xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
     xsi:schemaLocation="http://xmlns.oracle.com/xdb/acl.xsd 
                         http://xmlns.oracle.com/xdb/acl.xsd"&gt;
  &lt;extends-from type="simple" href="/sys/acls/parent_acl.xml"/&gt;
  &lt;ace&gt;
    &lt;grant&gt;<span class="bold">false</span>&lt;/grant&gt;
    &lt;<span class="bold">invert</span>&gt;&lt;principal&gt;dav:owner&lt;/principal&gt;&lt;/invert&gt;
    &lt;privilege&gt;&lt;read-contents/&gt;&lt;/privilege&gt;
  &lt;/ace&gt;
  &lt;ace&gt;
    &lt;grant&gt;true&lt;/grant&gt;
    &lt;principal&gt;GERONIMO&lt;/principal&gt;
    &lt;privilege&gt;&lt;read-contents/&gt;&lt;/privilege&gt;
  &lt;/ace&gt;
&lt;/acl&gt;
</pre></div>
<!-- class="example" --></div>
<!-- class="sect2" -->
<a id="BCGIGFFG"></a>
<div id="ADXDB5487" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">ACE Validity Time Period</h3>
<p>You can use optional attributes <code>start_date</code> and <code>end_date</code> (of XML Schema type <code>dateTime</code>) to define the time period over which an ACE is valid. If <code><span class="codeinlinebold">start_date</span></code> is specified, then the ACE is valid on and after that date. If <code><span class="codeinlinebold">end_date</span></code> is specified, then the ACS is invalid after that date. The <code>end_date</code> value must follow the <code>start_date</code> chronologically or else be the same value. Otherwise, the ACE and its ACL are invalid. If no time zone is specified in an XML Schema <code>dateTime</code> value, then GMT (UTC) is assumed. <a href="#CHDCFFJG">Example 27-6</a> shows an ACE with start and end dates.</p>
<div id="ADXDB5488" class="example">
<p class="titleinexample"><a id="CHDCFFJG"></a>Example 27-6 ACE with Start and End Dates</p>
<pre>
&lt;ace <span class="bold">start_date</span>="2008-02-12T00:00:00Z" <span class="bold">end_date</span>="2008-12-31T00:00:00Z"&gt;
  &lt;grant&gt;true&lt;/grant&gt;
  &lt;principal&gt;GERONIMO&lt;/principal&gt;
  &lt;privilege&gt;&lt;read-contents/&gt;&lt;/privilege&gt;
&lt;/ace&gt;
</pre></div>
<!-- class="example" --></div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="CEGHCIBA"></a>
<div id="ADXDB2420" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Working with <a id="sthref1599"></a>Access Control Lists (ACLs)</h2>
<p>Oracle Database access control lists (ACLs) are themselves (file) resources in Oracle XML&nbsp;DB Repository, so all of the access methods that operate on repository resources also apply to ACLs. In addition, there are several APIs specific to ACLs in package <code>DBMS_XDB</code>. Those procedures and functions let you use PL/SQL to access Oracle XML&nbsp;DB security mechanisms, check user privileges based on a particular ACL, and list the set of privileges the current user has for a particular ACL and resource.</p>
<div align="center">
<div class="inftblinformal"><br />
<table class="cellalignment1031">
<tbody>
<tr class="cellalignment1020">
<td class="cellalignment1028">
<p class="notep1">See Also:</p>
<a href="appaman.htm#g645751">Chapter 34, "Administering Oracle XML&nbsp;DB"</a></td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" --></div>
<div id="ADXDB5489" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref1600"></a>
<h3 class="sect2">Creating an ACL using DBMS_XDB.CREATERESOURCE</h3>
<p><a href="#CEGCAIHC">Example 27-7</a> creates an ACL as file resource <code>/TESTUSER/acl1.xml</code>. If applied to a resource, this ACL grants all privileges to the owner of the resource.</p>
<div id="ADXDB5490" class="example">
<p class="titleinexample"><a id="CEGCAIHC"></a>Example 27-7 Creating an ACL using CREATERESOURCE</p>
<pre>
DECLARE
  b BOOLEAN;
BEGIN
  b := DBMS_XDB.createFolder('/TESTUSER');
  b := DBMS_XDB.createResource(
         '<span class="bold">/TESTUSER/acl1.xml</span>', 
         '&lt;acl description="myacl"
               xmlns="http://xmlns.oracle.com/xdb/acl.xsd"
               xmlns:dav="DAV:"
               xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
               xsi:schemaLocation="http://xmlns.oracle.com/xdb/acl.xsd
                                   http://xmlns.oracle.com/xdb/acl.xsd"&gt;
            &lt;ace&gt;
              &lt;grant&gt;true&lt;/grant&gt;
              &lt;principal&gt;<span class="bold">dav:owner</span>&lt;/principal&gt;
              &lt;privilege&gt;
                <span class="bold">&lt;dav:all/&gt;</span>
              &lt;/privilege&gt;
            &lt;/ace&gt;
          &lt;/acl&gt;',
         'http://xmlns.oracle.com/xdb/acl.xsd',
         'acl');
END;
</pre></div>
<!-- class="example" -->
<div class="infobox-note">
<p class="notep1">Note:</p>
Before performing any operation that uses an ACL file resource that was created during the current transaction, you must perform a <code>COMMIT</code> operation. Until you do that, an ORA-22881 "dangling REF" error is raised whenever you use the ACL file.</div>
</div>
<!-- class="sect2" -->
<div id="ADXDB2425" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref1601"></a>
<h3 class="sect2">Retrieving an ACL Document, Given its Repository Path</h3>
<p><a href="#CHDCDIFA">Example 27-8</a> shows how to retrieve an ACL document, given its location in Oracle XML&nbsp;DB Repository.</p>
<div id="ADXDB5491" class="example">
<p class="titleinexample"><a id="CHDCDIFA"></a>Example 27-8 Retrieving an ACL Document, Given its Repository Path</p>
<pre>
SELECT a.OBJECT_VALUE FROM RESOURCE_VIEW rv, XDB.XDB$ACL a
  WHERE ref(a)
        = XMLCast(XMLQuery('declare default element namespace
                            "http://xmlns.oracle.com/xdb/XDBResource.xsd"; (: :)
                            fn:data(/Resource/XMLRef)'
                           PASSING rv.RES RETURNING CONTENT)
                  AS REF XMLType)
    AND equals_path(rv.RES, '<span class="bold">/TESTUSER/acl1.xml</span>') = 1;

OBJECT_VALUE
--------------------------------------------------------------------------------
&lt;acl description="myacl" xmlns="http://xmlns.oracle.com/xdb/acl.xsd" xmlns:dav="
DAV:" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="
http://xmlns.oracle.com/xdb/acl.xsd                                    http://xm
lns.oracle.com/xdb/acl.xsd" shared="true"&gt;
  &lt;ace&gt;
    &lt;grant&gt;true&lt;/grant&gt;
    &lt;principal&gt;dav:owner&lt;/principal&gt;
    &lt;privilege&gt;
      &lt;dav:all/&gt;
    &lt;/privilege&gt;
  &lt;/ace&gt;
&lt;/acl&gt;
</pre></div>
<!-- class="example" --></div>
<!-- class="sect2" -->
<div id="ADXDB5492" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref1602"></a>
<h3 class="sect2">Setting the ACL of a Resource</h3>
<p><a href="#CEGCCFDD">Example 27-9</a> creates resource <code>/TESTUSER/po1.xml</code> and sets its ACL to <code>/TESTUSER/acl1.xml</code> using PL/SQL procedure <code>DBMS_XDB.setACL</code>.</p>
<div id="ADXDB5493" class="example">
<p class="titleinexample"><a id="CEGCCFDD"></a>Example 27-9 Setting the ACL of a Resource</p>
<pre>
DECLARE
  b BOOLEAN;
BEGIN
  b := DBMS_XDB.createResource('/TESTUSER/po1.xml', 'Hello');
END;
/
 
CALL DBMS_XDB.setACL('/TESTUSER/po1.xml', '/TESTUSER/acl1.xml');
</pre></div>
<!-- class="example" --></div>
<!-- class="sect2" -->
<div id="ADXDB5494" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref1603"></a>
<h3 class="sect2">Deleting an ACL</h3>
<p><a href="#CEGEGGBC">Example 27-10</a> illustrates how to delete an ACL using procedure <code>DBMS_XDB.deleteResource</code>. It deletes the ACL created in <a href="#CEGCAIHC">Example 27-7</a>.</p>
<div id="ADXDB5495" class="example">
<p class="titleinexample"><a id="CEGEGGBC"></a>Example 27-10 Deleting an ACL</p>
<pre>
CALL DBMS_XDB.deleteResource('/TESTUSER/acl1.xml');
</pre></div>
<!-- class="example" -->
<p>If a resource is being protected by an ACL that you want to delete, change the ACL of that resource before deleting the ACL.</p>
</div>
<!-- class="sect2" -->
<div id="ADXDB5496" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref1604"></a>
<h3 class="sect2">Updating an ACL</h3>
<p>You can update an ACL using any of the standard ways of updating resources. In particular, since an ACL is an XML document, you can use Oracle SQL function <code>updateXML</code> and related XML-updating functions to manipulate ACLs. You must <code>COMMIT</code> after making any ACL changes.</p>
<p>Oracle XML&nbsp;DB ACLs are <span class="italic">cached</span>, for fast evaluation. When a transaction that updates an ACL is committed, the modified ACL is picked up by existing database sessions, after the timeout specified in the Oracle XML&nbsp;DB configuration file, <code>/xdbconfig.xml</code>. The XPath location for this timeout parameter is <code>/xdbconfig/sysconfig/acl-max-age</code>. The value is expressed in seconds. Sessions initiated after the ACL is modified use the new ACL without any delay.</p>
<p>If an ACL resource is updated with non-ACL content, the same rules apply as for deletion. Thus, if any resource is being protected by an ACL that is being updated, you must first change the ACL.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="xdb04cre.htm#i1032611">"Updating XML Data"</a> for information about the Oracle SQL functions used here to update XML data</div>
<p>You can use FTP or WebDAV to update an ACL. For more details on how to use these protocols, see <a href="xdb22pro.htm#g1031760">Chapter 28, "Accessing the Repository using Protocols"</a>. You can update an ACL or an access control entry (ACE) using <code>RESOURCE_VIEW</code>.</p>
<p><a href="#BCGFICIA">Example 27-11</a> uses Oracle SQL function <code>updateXML</code> to update the ACL <code>/TESTUSER/acl1.xml</code> by replacing it entirely. The effect is to replace the principal value <code>DAV::owner</code> by <code>TESTUSER</code>, because the rest of the replacement ACL is the same as it was before.</p>
<div id="ADXDB5497" class="example">
<p class="titleinexample"><a id="BCGFICIA"></a>Example 27-11 Updating (Replacing) an Access Control List</p>
<pre>
UPDATE RESOURCE_VIEW r
  SET r.RES =
        updateXML(
          r.RES,
          '/r:Resource/r:Contents/a:acl',
          '&lt;acl description="myacl"
                xmlns="http://xmlns.oracle.com/xdb/acl.xsd"
                xmlns:dav="DAV:"
                xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                xsi:schemaLocation="http://xmlns.oracle.com/xdb/acl.xsd
                                    http://xmlns.oracle.com/xdb/acl.xsd"&gt;
             &lt;ace&gt;
               &lt;grant&gt;true&lt;/grant&gt;
               &lt;principal&gt;<span class="bold">TESTUSER</span>&lt;/principal&gt;
               &lt;privilege&gt;
                 &lt;dav:all/&gt;
               &lt;/privilege&gt;
             &lt;/ace&gt;
           &lt;/acl&gt;',
          'xmlns:r="http://xmlns.oracle.com/xdb/XDBResource.xsd"
           xmlns:a="http://xmlns.oracle.com/xdb/acl.xsd"')
  WHERE equals_path(r.RES, '/TESTUSER/acl1.xml') = 1;
</pre></div>
<!-- class="example" -->
<p><a href="#BCGIGIDB">Example 27-12</a> uses Oracle SQL function <code>appendChildXML</code> to append an ACE to an existing ACL. The ACE gives privileges <code>read-properties</code> and <code>read-contents</code> to user <code>HR</code>.</p>
<div id="ADXDB5498" class="example">
<p class="titleinexample"><a id="BCGIGIDB"></a>Example 27-12 Appending ACEs to an Access Control List</p>
<pre>
UPDATE RESOURCE_VIEW r
  SET r.RES =
        appendChildXML(
          r.RES,
          '/r:Resource/r:Contents/a:acl',
          XMLType('&lt;ace xmlns="http://xmlns.oracle.com/xdb/acl.xsd"&gt;
                     &lt;grant&gt;true&lt;/grant&gt;
                     &lt;principal&gt;<span class="bold">HR</span>&lt;/principal&gt;
                     &lt;privilege&gt;
                       <span class="bold">&lt;read-properties/&gt;</span>
                       <span class="bold">&lt;read-contents/&gt;</span>
                     &lt;/privilege&gt;
                   &lt;/ace&gt;'),
                  'xmlns:r="http://xmlns.oracle.com/xdb/XDBResource.xsd"
                   xmlns:a="http://xmlns.oracle.com/xdb/acl.xsd"')
  WHERE equals_path(r.RES, '/TESTUSER/acl1.xml') = 1;
</pre></div>
<!-- class="example" -->
<p><a href="#BCGGBIJH">Example 27-13</a> uses Oracle SQL function <code>deleteXML</code> to delete an ACE from an ACL. The first ACE is deleted.</p>
<div id="ADXDB5499" class="example">
<p class="titleinexample"><a id="BCGGBIJH"></a>Example 27-13 Deleting an ACE from an Access Control List</p>
<pre>
UPDATE RESOURCE_VIEW r
  SET r.RES =
        deleteXML(r.RES,
                  '/r:Resource/r:Contents/a:acl/a:ace[1]',
                  'xmlns:r="http://xmlns.oracle.com/xdb/XDBResource.xsd"
                   xmlns:a="http://xmlns.oracle.com/xdb/acl.xsd"')
  WHERE equals_path(r.RES, '/TESTUSER/acl1.xml') = 1;
</pre></div>
<!-- class="example" --></div>
<!-- class="sect2" -->
<div id="ADXDB5500" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref1605"></a>
<h3 class="sect2">Retrieving the ACL Document that Protects a Given Resource</h3>
<p><a href="xdb19rpl.htm#i1028509">Example 26-2</a> illustrates how to use function <code>DBMS_XDB.getACLDocument</code> to retrieve the ACL document that protects a given resource.</p>
<div id="ADXDB5501" class="example">
<p class="titleinexample"><a id="CEGHFHJE"></a>Example 27-14 Retrieving the ACL Document for a Resource</p>
<pre>
SELECT XMLSerialize(DOCUMENT DBMS_XDB.getACLDocument('<span class="bold">/TESTUSER/po1.xml</span>')
                    AS CLOB)
  FROM DUAL;
 
XMLSERIALIZE(DOCUMENTDBMS_XDB.GETACLDOCUMENT('/TESTUSER/PO1.XML')ASCLOB)
--------------------------------------------------------------------------------
&lt;acl description="myacl" xmlns="http://xmlns.oracle.com/xdb/acl.xsd" xmlns:dav="
DAV:" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="
http://xmlns.oracle.com/xdb/acl.xsd                                     http://x
mlns.oracle.com/xdb/acl.xsd"&gt;
  &lt;ace&gt;
    &lt;grant&gt;true&lt;/grant&gt;
    &lt;principal&gt;TESTUSER&lt;/principal&gt;
    &lt;privilege&gt;
      &lt;dav:all/&gt;
    &lt;/privilege&gt;
  &lt;/ace&gt;
  &lt;ace xmlns="http://xmlns.oracle.com/xdb/acl.xsd"&gt;
    &lt;grant&gt;true&lt;/grant&gt;
    &lt;principal&gt;HR&lt;/principal&gt;
    &lt;privilege&gt;
      &lt;read-properties/&gt;
      &lt;read-contents/&gt;
    &lt;/privilege&gt;
  &lt;/ace&gt;
&lt;/acl&gt;
 
1 row selected.
</pre></div>
<!-- class="example" -->
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="xdb19rpl.htm#i1028509">Example 26-2, "Using DBMS_XDB.GETACLDOCUMENT"</a></div>
</div>
<!-- class="sect2" -->
<div id="ADXDB5502" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref1606"></a>
<h3 class="sect2">Retrieving Privileges Granted to the Current User for a Particular Resource</h3>
<p><a href="#BABDDAHF">Example 27-15</a> illustrates how to retrieve privileges granted to the current user using function <code>DBMS_XDB.getPrivileges</code>.</p>
<div id="ADXDB5503" class="example">
<p class="titleinexample"><a id="BABDDAHF"></a>Example 27-15 Retrieving Privileges Granted to the Current User for a Particular Resource</p>
<pre>
SELECT XMLSerialize(DOCUMENT DBMS_XDB.getPrivileges('/TESTUSER/po1.xml')
                    AS CLOB)
  FROM DUAL;
 
XMLSERIALIZE(DOCUMENTDBMS_XDB.GETPRIVILEGES('/TESTUSER/PO1.XML')ASCLOB)
--------------------------------------------------------------------------------
&lt;privilege xmlns="http://xmlns.oracle.com/xdb/acl.xsd" xmlns:xsi="http://www.w3.
org/2001/XMLSchema-instance" xsi:schemaLocation="http://xmlns.oracle.com/xdb/acl
.xsd http://xmlns.oracle.com/xdb/acl.xsd DAV: http://xmlns.oracle.com/xdb/dav.xs
d" xmlns:xdbacl="http://xmlns.oracle.com/xdb/acl.xsd" xmlns:dav="DAV:"&gt;
  &lt;read-acl/&gt;
  &lt;dav:execute/&gt;
  &lt;read-contents/&gt;
  &lt;update-acl/&gt;
  &lt;dav:write-content/&gt;
  &lt;dav:read-current-user-privilege-set/&gt;
  &lt;link-to/&gt;
  &lt;resolve/&gt;
  &lt;dav:lock/&gt;
  &lt;unlink-from/&gt;
  &lt;write-config/&gt;
  &lt;dav:write-properties/&gt;
  &lt;dav:unlock/&gt;
  &lt;link/&gt;
  &lt;write-acl-ref/&gt;
  &lt;read-properties/&gt;
  &lt;dav:take-ownership/&gt;
  &lt;unlink/&gt;
&lt;/privilege&gt;

1 row selected.
</pre></div>
<!-- class="example" --></div>
<!-- class="sect2" -->
<div id="ADXDB5504" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref1607"></a>
<h3 class="sect2">Checking Whether the Current User Has Privileges on a Resource</h3>
<p><a href="#CEGBGBFB">Example 27-16</a> illustrates how to use function <code>DBMS_XDB.checkPrivileges</code> to check whether the current user has a given set of privileges on a resource. This function returns a nonzero value if the user has the privileges.</p>
<div id="ADXDB5505" class="example">
<p class="titleinexample"><a id="CEGBGBFB"></a>Example 27-16 Checking If a User Has a Certain Privileges on a Resource</p>
<pre>
SELECT DBMS_XDB.checkPrivileges(
</pre>
<pre>
         '<span class="bold">/TESTUSER/po1.xml</span>',
         XMLType('&lt;privilege
                      xmlns="http://xmlns.oracle.com/xdb/acl.xsd"
                      xmlns:dav="DAV:"
                      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                      xsi:schemaLocation="http://xmlns.oracle.com/xdb/acl.xsd
                                          http://xmlns.oracle.com/xdb/acl.xsd"&gt;
                    <span class="bold">&lt;read-contents/&gt;</span>
                    <span class="bold">&lt;read-properties/&gt;</span>
                  &lt;/privilege&gt;'))
  FROM DUAL;
 
DBMS_XDB.CHECKPRIVILEGES('/TESTUSER/PO1.XML',
---------------------------------------------
                                            <span class="bold">1</span>
 
1 row selected.
</pre></div>
<!-- class="example" -->
<p><a href="#CEGBGBFB">Example 27-16</a> checks to see if the access privileges <code>read-contents</code> and <code>read-properties</code> have been granted to the current user on resource <code>/TESTUSER/po1.xml</code>. The positive-integer return value shows that they have.</p>
</div>
<!-- class="sect2" -->
<div id="ADXDB5506" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref1608"></a>
<h3 class="sect2">Checking Whether a User Has Privileges using the ACL and Resource Owner</h3>
<p>Function <code>DBMS_XDB.ACLCheckPrivileges</code> is typically used by applications that must perform ACL evaluation on their own, before allowing a user to perform an operation.</p>
<p><a href="#BCGIACEI">Example 27-17</a> checks whether the ACL <code>/TESTUSER/acl1.xml</code> grants the privileges <code>read-contents</code> and <code>read-properties</code> to the current user, <code>sh</code>. The second argument, <code>TESTUSER</code>, is the user that is substituted for <code>DAV::owner</code> in the ACL when checking. Since user <code>sh</code> does <span class="italic">not</span> match any of the users granted the specified privileges, the return value is zero.</p>
<div id="ADXDB5507" class="example">
<p class="titleinexample"><a id="BCGIACEI"></a>Example 27-17 Checking User Privileges using ACLCheckPrivileges</p>
<pre>
CONNECT <span class="bold">sh</span>
Enter password: <span class="italic">&lt;password&gt;</span>

Connected.

SELECT DBMS_XDB.ACLCheckPrivileges(
         '<span class="bold">/TESTUSER/acl1.xml</span>',
         '<span class="bold">TESTUSER</span>',
         XMLType('&lt;privilege
                      xmlns="http://xmlns.oracle.com/xdb/acl.xsd"
                      xmlns:dav="DAV:"
                      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                      xsi:schemaLocation="http://xmlns.oracle.com/xdb/acl.xsd
                                          http://xmlns.oracle.com/xdb/acl.xsd"&gt;
                    <span class="bold">&lt;read-contents/&gt;</span>
                    <span class="bold">&lt;read-properties/&gt;</span>
                  &lt;/privilege&gt;'))
  FROM DUAL;
 
DBMS_XDB.ACLCHECKPRIVILEGES('/TESTUSER/ACL1.XML','TESTUSER',
------------------------------------------------------------
                                                           <span class="bold">0</span>
 
1 row selected.
</pre></div>
<!-- class="example" --></div>
<!-- class="sect2" -->
<div id="ADXDB5508" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref1609"></a>
<h3 class="sect2">Retrieving the Path of the ACL that Protects a Given Resource</h3>
<p><a href="#CEGJJGII">Example 27-18</a> retrieves the path of the ACL that protects a given resource, by using a <code>RESOURCE_VIEW</code> query. The query uses the fact that the <code>XMLRef</code> and <code>ACLOID</code> elements of the resource form the link between an ACL and a resource.</p>
<div id="ADXDB5509" class="example">
<p class="titleinexample"><a id="CEGJJGII"></a>Example 27-18 Retrieving the Path of the ACL that Protects a Given Resource</p>
<pre>
SELECT rv1.ANY_PATH
  FROM RESOURCE_VIEW rv1
  WHERE
    XMLCast(XMLQuery('declare default element namespace
                      "http://xmlns.oracle.com/xdb/XDBResource.xsd"; (: :)
                      fn:data(/Resource/XMLRef)'
                     PASSING rv1.RES RETURNING CONTENT)
            AS REF XMLType)
    = make_ref(XDB.XDB$ACL,
               (SELECT XMLCast(XMLQuery('declare default element namespace
                                         "http://xmlns.oracle.com/xdb/XDBResource.xsd"; (: :)
                                         fn:data(/Resource/ACLOID)'
                                        PASSING rv2.RES RETURNING CONTENT)
                               AS REF XMLType)
                  FROM RESOURCE_VIEW rv2
                  WHERE equals_path(rv2.RES, '/TESTUSER/po1.xml') = 1));

ANY_PATH
------------------
/TESTUSER/acl1.xml
</pre></div>
<!-- class="example" -->
<p><a href="#CEGJJGII">Example 27-18</a> retrieves the path to an ACL, given a resource protected by the ACL. The ACLOID of a protected resource (<code>r</code>) stores the OID of the ACL resource (<code>a</code>) that protects it. The <code>REF</code> of the ACL resource is the same as that of the object identified by the protected-resource <code>ACLOID</code>.</p>
<p>The <code>REF</code> of the resource <code>ACLOID</code> can be obtained using Oracle SQL function <code>make_ref</code>, which returns a <code>REF</code> to an object-table row with a given OID.</p>
<p>In this example, <code>make_ref</code> returns a <code>REF</code> to the row of table <code>XDB$ACL</code> whose OID is the <code>/Resource/ACLOID</code> for the resource <code>/TESTUSER/po1.xml</code>. The inner query returns the <code>ACLOID</code> of the resource. The outer query returns the path to the corresponding ACL.</p>
</div>
<!-- class="sect2" -->
<div id="ADXDB5510" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref1610"></a>
<h3 class="sect2">Retrieving the Paths of All Resources Protected by a Given ACL</h3>
<p><a href="#CEGFHAFJ">Example 27-19</a> retrieves the paths of all resources protected by a given ACL.</p>
<div id="ADXDB5511" class="example">
<p class="titleinexample"><a id="CEGFHAFJ"></a>Example 27-19 Retrieving the Paths of All Resources Protected by a Given ACL</p>
<pre>
SELECT rv1.ANY_PATH
  FROM RESOURCE_VIEW rv1
  WHERE make_ref(XDB.XDB$ACL, 
                 XMLCast(XMLQuery('declare default element namespace
                                   "http://xmlns.oracle.com/xdb/XDBResource.xsd"; (: :)
                                   fn:data(/Resource/ACLOID)'
                                  PASSING rv1.RES RETURNING CONTENT)
                         AS REF XMLType))
        = (SELECT XMLCast(XMLQuery('declare default element namespace
                                    "http://xmlns.oracle.com/xdb/XDBResource.xsd"; (: :)
                                    fn:data(/Resource/XMLRef)'
                                   PASSING rv2.RES RETURNING CONTENT)
                          AS REF XMLType)
             FROM RESOURCE_VIEW rv2
             WHERE equals_path(rv2.RES, '/TESTUSER/acl1.xml') = 1);

ANY_PATH
-----------------
/TESTUSER/po1.xml
 
1 row selected.
</pre></div>
<!-- class="example" -->
<p><a href="#CEGFHAFJ">Example 27-19</a> retrieves the paths to the resources whose <code>ACLOID</code> <code>REF</code> matches the <code>REF</code> of the ACL resource whose path is <code>/TESTUSER/acl1.xml</code>. Function <code>make_ref</code> returns the resource <code>ACLOID</code> <code>REF</code>.</p>
<p>The inner query retrieves the <code>REF</code> of the specified ACL. The outer query selects the paths of the resources whose <code>ACLOID</code> <code>REF</code> matches the <code>REF</code> of the specified ACL.</p>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="CIHFAIBF"></a>
<div id="ADXDB5516" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">ACL Caching</h2>
<p>Since ACLs are checked for each access to the data they protect, the performance of the ACL check operation is critical to the performance of such data, including Oracle XML&nbsp;DB Repository resources. In Oracle XML&nbsp;DB, the required performance for this repository operation is achieved by employing several caches.</p>
<p>ACLs are saved in a cache that is shared by all sessions in the database instance. When an ACL is updated, its entry in the cache is invalidated, together with all objects dependent on it. The next time the ACL is used, a new copy of it is brought into the cache. Oracle recommends that you share ACLs among resources as much as possible.</p>
<p>There is a session-specific cache of privileges granted to a given user by a given ACL. The entries in this cache have a time out (in seconds) specified by the element <code>&lt;acl-max-age&gt;</code> in the Oracle XML&nbsp;DB configuration file (<code>/xdbconfig.xml</code>). For maximum performance, set this timeout as large as possible. But note that there is a trade-off here: the greater the timeout, the longer it takes for current sessions to pick up an updated ACL.</p>
<p>Oracle XML&nbsp;DB also maintains caches to improve performance when using ACLs that have LDAP principals (LDAP groups or users). The goal of these caches is to minimize network communication with the LDAP server. One is a shared cache that maps LDAP GUIDs to the corresponding LDAP nicknames and Distinguished Names (DNs). This is used when an ACL document is being displayed (or converted to <code>CLOB</code> or <code>VARCHAR</code>2 values from an <code>XMLType</code> instance). To purge this cache, use procedure <code>DBMS_XDBZ.<a id="sthref1611"></a><a id="sthref1612"></a><a id="sthref1613"></a>purgeLDAPCache</code>. The other cache is session-specific and maps LDAP groups to their members (nested membership). Note that whenever Oracle XML&nbsp;DB encounters an LDAP group for the first time (in a session) it gets the nested membership of that group from the LDAP server. Hence it is best to use groups with as few members and levels of nesting as possible.</p>
</div>
<!-- class="sect1" -->
<a id="i1036286"></a>
<div id="ADXDB5517" class="sect1">
<h2 class="sect1">Repository Resources and Database Table Security</h2>
<p>Resources in Oracle XML&nbsp;DB Repository are of two types:</p>
<ul>
<li>
<p>LOB-based (content is stored in a LOB which is part of the resource). Access is determined only by the ACL that protects the resource.</p>
</li>
<li>
<p><code>REF</code>-based (content is XML and is stored in a database table). Users must have the appropriate privilege for the underlying table or view where the XML content is stored in addition to ACL permissions for the resource.</p>
</li>
</ul>
<p>Since the content of a <code>REF</code>-based resource can be stored in a table, it is possible to access this data directly using SQL queries on the table. A <a id="sthref1614"></a><span class="glossaryterm">uniform</span> access control mechanism is one where the privileges needed for access are independent of the method of access (for example, FTP, HTTP, or SQL). To provide a uniform security mechanism using ACLs, the underlying table must first be <span class="glossaryterm"><a id="sthref1615"></a>hierarchy-enabled</span>, before resources that reference the rows in the table are inserted into Oracle XML&nbsp;DB.</p>
<p>The default tables produced by XML schema registration are hierarchy-enabled. Enabling hierarchy is the default behavior when you register an XML schema with Oracle XML&nbsp;DB. You can also enable hierarchy after registration, using procedure <code><a id="sthref1616"></a><a id="sthref1617"></a><a id="sthref1618"></a><a id="sthref1619"></a>DBMS_XDBZ.<a id="sthref1620"></a><a id="sthref1621"></a>enable_hierarchy</code>.</p>
<p>Enabling hierarchy on a resource table does the following:</p>
<ul>
<li>
<p>Adds two hidden columns to store the <code>ACLOID</code> and the <code>OWNER</code> of the resources that reference the rows in the table.</p>
</li>
<li>
<p>Adds a row-level security (RLS) policy to the table, which checks the ACL whenever a <code>SELECT</code>, <code>UPDATE</code>, or <code>DELETE</code> operation is executed on the table.</p>
</li>
<li>
<p>Creates a database trigger, called the <span class="glossaryterm"><a id="sthref1622"></a><a id="sthref1623"></a>path-index trigger</span>, that ensures that the last-modified information for a resource is updated whenever the corresponding row is updated in the <code>XMLType</code> table where the content is stored.</p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a class="olink ARPLS377" href="../../appdev.112/e40758/d_xmlsch.htm#ARPLS377"><span class="italic">Oracle Database PL/SQL Packages and Types Reference</span></a> for information about procedure <code>DBMS_XMLSCHEMA.registerSchema</code></p>
</li>
<li>
<p><a class="olink ARPLS805" href="../../appdev.112/e40758/d_xdbz.htm#ARPLS805"><span class="italic">Oracle Database PL/SQL Packages and Types Reference</span></a> for information about procedure <code>DBMS_XDBZ.enable_hierarchy</code></p>
</li>
</ul>
</div>
<p>In any given table, it is possible that only some of the objects are mapped to Oracle XML&nbsp;DB resources. Only those objects that are mapped undergo ACL checking, but <span class="italic">all</span> of the objects have table-level security.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
You cannot hide data in <code>XMLType</code> tables from other users if <span class="italic">out-of-line</span> storage of is used. Out-of-line data is <span class="italic">not</span> protected by ACL security.</div>
<a id="BCGCFJAB"></a>
<div id="ADXDB5928" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Optimization: Do not enforce acl-based security if you do not need it</h3>
<p>ACL-based security provides control of access to XML content document-by-document, rather than just table-by-table. When you call PL/SQL procedure <code>DBMS_XMLSCHEMA.register_chema</code>, the tables it creates have ACL-based security enabled, by default.</p>
<p>One effect of this is that when the XML content of such a table is accessed using a SQL statement, a call to <code>sys_checkACL</code> is automatically added to the query <code>WHERE</code> clause, to ensure that the ACL security that was defined is enforced at the SQL level.</p>
<p>Enforcing ACL-based security adds overhead to the SQL query, however. If ACL-based security is <span class="italic">not</span> required, then use procedure <code><a id="sthref1624"></a><a id="sthref1625"></a><a id="sthref1626"></a>disable_hierarchy</code> in package <code>DBMS_XDBZ</code> to turn <span class="italic">off</span> ACL checking.</p>
<p>When ACL-based security is enabled for an <code>XMLType</code> table, the execution plan output for a query of that table contains a filter similar to the following:</p>
<pre>
3 - filter(<span class="bold">SYS_CHECKACL</span>("ACLOID","OWNERID",xmltype(''&lt;privilege
              xmlns="http://xmlns.oracle.com/xdb/acl.xsd"
              xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
              xsi:schemaLocation="http://xmlns.oracle.com/xdb/acl.xsd
              http://xmlns.oracle.com/xdb/acl.xsd
              DAV:http://xmlns.oracle.com/xdb/dav.xsd"&gt;
                        <span class="bold">&lt;read-properties/&gt;&lt;read-contents/&gt;</span>&lt;/privilege&gt;''))=1)
</pre>
<p>In this example, the filter checks that the user performing the SQL query has <code>read-contents</code> privilege on each of the documents to be accessed.</p>
<p>After calling <code>DBMX_XDBZ.disable_hierarchy</code>, an execution plan of the same query does not show <code>SYS_CHECKACL</code> in the filter.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink ARPLS805" href="../../appdev.112/e40758/d_xdbz.htm#ARPLS805"><span class="italic">Oracle Database PL/SQL Packages and Types Reference</span></a> for information about procedure <code>DBMS_XDBZ.disable_hierarchy</code></div>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="CEGHHIHC"></a>
<div id="ADXDB2470" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Integrating Oracle XML&nbsp;DB with LDAP</h2>
<p>This section discusses allowing LDAP users to use the features of Oracle XML&nbsp;DB, including ACLs. The typical scenario is a single, shared database schema (user), to which multiple LDAP users are mapped. This mapping is maintained in the <a id="sthref1627"></a>Oracle Internet Directory. End users can log into the database using their LDAP username and password. They are then automatically mapped to the corresponding shared database schema. (Users can log in using SQL or any of the supported Oracle XML&nbsp;DB protocols.) The implicit ACL resolution is based on the current LDAP user and the corresponding LDAP group membership information.</p>
<p>Before you can use LDAP users and groups as principals in Oracle XML&nbsp;DB ACLs, the following prerequisites must be satisfied:</p>
<ul>
<li>
<p>An Oracle Internet Directory must be set up, and the database must be registered with it.</p>
</li>
<li>
<p>SSL authentication must be set up between the database and the Oracle Internet Directory.</p>
</li>
<li>
<p>A database user must be created that corresponds to the shared database schema.</p>
</li>
<li>
<p>The LDAP users must be created and mapped in the Oracle Internet Directory to the shared database schema.</p>
</li>
<li>
<p>The LDAP groups must be created and their members must be specified.</p>
</li>
<li>
<p>ACLs must be defined for the LDAP groups and users, and they must be used to protect the repository resources to be accessed by the LDAP users.</p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a class="olink OIDAG" href="http://www.oracle.com/pls/topic/lookup?ctx=db112&amp;id=OIDAG"><span class="italic">Oracle Internet Directory Administrator's Guide</span></a></p>
</li>
<li>
<p><a class="olink DBSEG070" href="http://www.oracle.com/pls/topic/lookup?ctx=db112&amp;id=DBSEG070"><span class="italic">Oracle Database Advanced Security Administrator's Guide</span></a> for information about setting up SSL authentication</p>
</li>
<li>
<p><a class="olink DBIMI151" href="../../network.112/e10744/concepts.htm#DBIMI151"><span class="italic">Oracle Database Enterprise User Security Administrator's Guide</span></a> for information about using shared database schemas for enterprise (LDAP) users</p>
</li>
</ul>
</div>
<p><a href="#BCGJADII">Example 27-20</a> shows an ACL for an LDAP user. Element <code>&lt;principal&gt;</code> contains the full <span class="italic">distinguished name</span> of the LDAP user &ndash; in this case, <code>cn=user1,ou=Americas,o=oracle,l=redwoodshores,st=CA,c=US</code>.</p>
<div id="ADXDB5518" class="example">
<p class="titleinexample"><a id="BCGJADII"></a>Example 27-20 ACL Referencing an LDAP User</p>
<pre>
&lt;acl description="/public/txmlacl1/acl1.xml"
     xmlns="http://xmlns.oracle.com/xdb/acl.xsd" xmlns:dav="DAV:"
     xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
     xsi:schemaLocation="http://xmlns.oracle.com/xdb/acl.xsd 
                         http://xmlns.oracle.com/xdb/acl.xsd"&gt;
  &lt;ace principalFormat="DistinguishedName"&gt; 
    &lt;grant&gt;true&lt;/grant&gt;
    &lt;principal&gt;<span class="bold">cn=user1,ou=Americas,o=oracle,l=redwoodshores,st=CA,c=US</span>
    &lt;/principal&gt;
    &lt;privilege&gt;
      &lt;dav:all/&gt;
    &lt;/privilege&gt;
  &lt;/ace&gt; 
&lt;/acl&gt;
</pre></div>
<!-- class="example" -->
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<span class="italic">Oracle Internet Directory Administrator's Guide</span> for the format of an LDAP user distinguished name</div>
<p><a href="#BCGGJAGE">Example 27-21</a> shows an ACL for an LDAP group. Element <code>&lt;principal&gt;</code> contains the full distinguished name of the LDAP group.</p>
<div id="ADXDB5519" class="example">
<p class="titleinexample"><a id="BCGGJAGE"></a>Example 27-21 ACL Referencing an LDAP Group</p>
<pre>
&lt;acl xmlns="http://xmlns.oracle.com/xdb/acl.xsd" xmlns:dav="DAV:"
     xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
     xsi:schemaLocation="http://xmlns.oracle.com/xdb/acl.xsd 
                         http://xmlns.oracle.com/xdb/acl.xsd"&gt;
  &lt;ace principalFormat="DistinguishedName"&gt; 
    &lt;grant&gt;true&lt;/grant&gt;
    &lt;principal&gt;<span class="bold">cn=grp1,ou=Americas,o=oracle,l=redwoodshores,st=CA,c=US</span>&lt;/principal&gt;
    &lt;privilege&gt;
      &lt;dav:read/&gt;
    &lt;/privilege&gt;
  &lt;/ace&gt; 
&lt;/acl&gt;
</pre></div>
<!-- class="example" -->
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<span class="italic">Oracle Internet Directory Administrator's Guide</span> for the format of an LDAP group distinguished name</div>
</div>
<!-- class="sect1" --></div>
<!-- class="chapter" -->
<hr />
<br />
<p style="text-decoration:underline">Footnote Legend</p>
Footnote&nbsp;1:&nbsp;Note the colon (<code>:</code>) as part of the namespace name. <code>DAV:</code> is the namespace itself, <span class="italic">not</span> a prefix. A prefix commonly used for namespace <code>DAV:</code> is <code>dav</code>, but this is only conventional. <code>dav</code> is not a predefined prefix for Oracle XML&nbsp;DB.<br /></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment1019">
<tr>
<td class="cellalignment1028">
<table class="cellalignment1024">
<tr>
<td class="cellalignment1023"><a href="xdb19rpl.htm"><img width="24" height="24" src="../../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment1023"><a href="xdb22pro.htm"><img width="24" height="24" src="../../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;2002, 2014,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment1030">
<table class="cellalignment1022">
<tr>
<td class="cellalignment1023"><a href="../../index.htm"><img width="24" height="24" src="../../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment1023"><a href="../../nav/portal_booklist.htm"><img width="24" height="24" src="../../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment1023"><a href="toc.htm"><img width="24" height="24" src="../../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment1023"><a href="index.htm"><img width="24" height="24" src="../../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment1023"><a href="../../nav/mindx.htm"><img width="24" height="24" src="../../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment1023"><a href="../../dcommon/html/feedback.htm"><img width="24" height="24" src="../../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
</body>
</html>
