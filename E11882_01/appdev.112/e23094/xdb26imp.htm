<!DOCTYPE html>
<html lang="en" >
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1">
<meta charset="utf-8">
<title>Exporting and Importing XMLType Tables</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Version 5.1.2 Build 748" />
<meta name="description" content="This manual describes Oracle XML&nbsp;DB. It includes guidelines and examples for storing, generating, accessing, searching, validating, transforming, evolving, and indexing XML data in Oracle Database." />
<meta name="dcterms.created" content="2014-02-20T9:56:17Z" />
<meta name="robots" content="all" />
<meta name="dcterms.title" content="XML DB Developer's Guide" />
<meta name="dcterms.identifier" content="E23094-04" />
<meta name="dcterms.isVersionOf" content="ADXDB" />
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;2002, 2014,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved." />
<link rel="Start" href="../../index.htm" title="Home" type="text/html" />
<link rel="Copyright" href="../../dcommon/html/cpyr.htm" title="Copyright" type="text/html" />

<script type="application/javascript"  src="../../dcommon/js/headfoot.js"></script>
<script type="application/javascript"  src="../../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html" />
<link rel="Index" href="index.htm" title="Index" type="text/html" />
<link rel="Prev" href="xdb25loa.htm" title="Previous" type="text/html" />
<link rel="Next" href="xdb27aq.htm" title="Next" type="text/html" />
<link rel="alternate" href="../e23094.pdf" title="PDF version" type="application/pdf" />
<link rel="schema.dcterms" href="http://purl.org/dc/terms/" />
<link rel="stylesheet" href="../../dcommon/css/fusiondoc.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/header.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/footer.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/fonts.css">
<link rel="stylesheet" href="../../dcommon/css/foundation.css">
<link rel="stylesheet" href="../../dcommon/css/codemirror.css">
<link rel="stylesheet" type="text/css" title="Default" href="../../nav/css/html5.css">
<link rel="stylesheet" href="../../dcommon/css/respond-480-tablet.css">
<link rel="stylesheet" href="../../dcommon/css/respond-768-laptop.css">
<link rel="stylesheet" href="../../dcommon/css/respond-1140-deskop.css">
<script type="application/javascript" src="../../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">49/54</span> <!-- End Header -->
<div id="ADXDB3000" class="chapter"><a id="g1027830"></a>
<h1 class="chapter"><span class="secnum">36</span> Exporting and Importing XMLType Tables</h1>
<p>This chapter describes how you can export and import <code>XMLType</code> tables for use with Oracle XML&nbsp;DB using Oracle Data Pump.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
The original Export and Import utilities can be used to migrate data to database releases that are prior to Oracle Database 11<span class="italic">g</span> Release 2 (11.2).</div>
<p>This chapter discusses the following topics:</p>
<ul>
<li>
<p><a href="#BABCCGDD">Overview of Oracle Data Pump</a></p>
</li>
<li>
<p><a href="#i1026619">EXPORT/IMPORT Support in Oracle XML&nbsp;DB</a></p>
</li>
<li>
<p><a href="#i1026629">Exporting XML Schema-Based XMLType Tables</a></p>
</li>
<li>
<p><a href="#BABCIBFF">Exporting Hierarchy-Enabled (Repository) Tables</a></p>
</li>
<li>
<p><a href="#BABBFHJA">Exporting and Importing Transportable Tablespaces</a></p>
</li>
<li>
<p><a href="#BABJGFCJ">Repository Resources and Foldering Support</a></p>
</li>
<li>
<p><a href="#i1026634">Export/Import Syntax and Examples</a></p>
</li>
</ul>
<a id="BABCCGDD"></a>
<div id="ADXDB5733" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Overview of Oracle Data Pump</h2>
<p>Oracle Data Pump technology enables high-speed movement of data and metadata from one database to another. Oracle Data Pump has two command-line clients, <code>expdp</code> and <code>impdp</code>, that invoke Data Pump Export utility and Data Pump Import utility, respectively. The <code>expdp</code> and <code>impdp</code> clients use procedures provided in PL/SQL package <code>DBMS_DATAPUMP</code> to execute export and import commands, passing the parameters entered at the command-line. These parameters enable the exporting and importing of data and metadata for a complete database or subsets of a database.</p>
<p>The Data Pump Export and Import utilities (invoked with commands <code>expdp</code> and <code>impdp</code>, respectively) have a similar look and feel to the original Export (<code>exp</code>) and Import (<code>imp</code>) utilities, but they are completely separate.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink SUTIL959" href="../../server.112/e22490/dp_legacy.htm#SUTIL959"><span class="italic">Oracle Database Utilities</span></a>, for information about situations in which you should still use the original Export and Import utilities.</div>
<p>Data Pump Export utility (invoked with <code>expdp)</code> unloads data and metadata into a set of operating system files called a <span class="italic">dump file set</span>. The dump file set can be imported only by the Data Pump Import utility (invoked with <code>impdp</code>).</p>
</div>
<!-- class="sect1" -->
<a id="i1026619"></a>
<div id="ADXDB5734" class="sect1">
<h2 class="sect1">EXPORT/IMPORT Support in Oracle XML&nbsp;DB</h2>
<p>Oracle XML&nbsp;DB supports export and import of <code>XMLType</code> tables and columns that store XML data.</p>
<p>You can export and import this data regardless of the <code>XMLType</code> storage format (structured, unstructured, or binary XML). However, Data Pump exports and imports XML data as text or binary XML data only. The underlying object-relational tables and columns used for structured storage of <code>XMLType</code> are thus not exported. Instead, they are converted to binary form and then exported as self-describing binary XML data. <code>XMLType</code> data stored as <code>CLOB</code> instances (unstructured storage) is exported as text.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
Oracle Data Pump for Oracle Database 11<span class="italic">g</span> Release 1 (11.1) does not support the export of XML schemas, XML schema-based <code>XMLType</code> columns, or binary XML data to database releases prior to 11.1.</div>
<p>Regardless of the export format, the format of the dump file is either <code>CLOB</code> or self-describing binary XML with a token map preamble. How Oracle Data Pump stores this data in the dump file depends on the value of the export parameter, <code>data_options</code> (the only valid value for this parameter is <code>xml_clobs.)</code> If you specify this value on the export command line, all <code>XMLType</code> data is stored in text format in the dump file. If you do not specify the <code>xml_clobs</code> parameter in the <code>expdp</code> command, then the format of the <code>XMLType</code> columns in the table determines the format of the data in the dump file. <a href="#BABJDGJG">Table 36-1</a> shows the format of the <code>XMLType</code> columns in the table with the corresponding format of the dump file.</p>
<div id="ADXDB5735" class="tblformal">
<p class="titleintable"><a id="sthref1873"></a><a id="BABJDGJG"></a>Table 36-1 Format of the XMLType columns in the table with the corresponding format of the dump file</p>
<table class="cellalignment1026" title="Format of the XMLType columns in the table with the corresponding format of the dump file " summary="XMLType column" dir="ltr">
<thead>
<tr class="cellalignment1020">
<th class="cellalignment1027" id="r1c1-t5">Storage Model of XMLType Columns</th>
<th class="cellalignment1027" id="r1c2-t5">Dump File Format of XML Data</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1020">
<td class="cellalignment1028" id="r2c1-t5" headers="r1c1-t5">
<p>Unstructured storage</p>
</td>
<td class="cellalignment1028" headers="r2c1-t5 r1c2-t5">
<p>Text</p>
</td>
</tr>
<tr class="cellalignment1020">
<td class="cellalignment1028" id="r3c1-t5" headers="r1c1-t5">
<p>Structured storage, binary XML storage, or hybrid storage (a mixture of unstructured and structured storage)</p>
</td>
<td class="cellalignment1028" headers="r3c1-t5 r1c2-t5">
<p>Self-describing binary XML</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<p>Since <code>XMLType</code> data is exported and imported as XML data, the source and target databases can use different <code>XMLType</code> storage models for that data. You can export data from a database that stores <code>XMLType</code> data one way and import it into a database that stores <code>XMLType</code> data a different way.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
When importing using an external table, do not use option <code>append</code> to import more than once from the same dump file into an <code>XMLType</code> table or column, regardless of the <code>XMLType</code> storage model used. Doing so raises a unique-constraint violation error.
<p>See <a class="olink SUTIL805" href="../../server.112/e22490/dp_overview.htm#SUTIL805"><span class="italic">Oracle Database Utilities</span></a> for information about importing using an external table.</p>
</div>
</div>
<!-- class="sect1" -->
<a id="i1026629"></a>
<div id="ADXDB5736" class="sect1">
<h2 class="sect1">Exporting XML Schema-Based XMLType Tables</h2>
<p>You can export <code>XMLType</code> tables, whether they are XML schema-based or not. If a table is XML schema-based, then it depends on the XML schema used to define its data. This XML schema can also have dependencies on SQL object types that are used to store the data, in the case of structured storage. Therefore, exporting a user who has XML schema-based <code>XMLType</code> tables also exports the following:</p>
<ul>
<li>
<p>SQL objects types (if structured storage was used)</p>
</li>
<li>
<p>XML schemas</p>
</li>
<li>
<p>XML tables</p>
</li>
</ul>
</div>
<!-- class="sect1" -->
<a id="BABCIBFF"></a>
<div id="ADXDB5737" class="sect1">
<h2 class="sect1">Exporting Hierarchy-Enabled (Repository) Tables</h2>
<p>The following guidelines apply to exporting hierarchy-enabled tables, that is, tables that underlie Oracle XML&nbsp;DB Repository data:</p>
<ul>
<li>
<p>The row-level security (RLS) policies and path-index triggers are not exported for hierarchy-enabled tables. When these tables are imported, they are <span class="italic">not</span> hierarchy-enabled.</p>
</li>
<li>
<p>Hidden columns <code>ACLOID</code> and <code>OWNERID</code> are <span class="italic">not</span> exported for these tables. In an imported database the values of these columns could be different, so they should be reinitialized.</p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="xdb21sec.htm#i1036286">"Repository Resources and Database Table Security"</a> for information about RLS policies and path-index triggers</div>
</div>
<!-- class="sect1" -->
<a id="BABBFHJA"></a>
<div id="ADXDB3500" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Exporting and Importing Transportable Tablespaces</h2>
<p>Using the <span class="italic">transportable tablespace</span> feature, you can move a set of tablespaces from one Oracle database to another, whether it is XML schema-based or non-schema-based. When you export using transportable tablespaces mode, only the metadata for tables (and their dependent objects) within a specified set of tablespaces are unloaded. You can then copy the tablespace data files to another Oracle database and perform a transport tablespace import. This is generally very fast, because it involves only copying the tablespace and re-creating the tablespace metadata.</p>
<p>Use <code>TRANSPORT_TABLESPACES</code> parameter in <code>expdp</code> to specify a list of tablespace names for which the object metadata is to be exported from the source database to the target database.</p>
<p>You cannot export transportable tablespaces and import them to a database at a lower release level. The target database must be at the same or higher release level as the source database.</p>
<p>When <span class="italic">exporting</span>, Oracle XML&nbsp;DB Repository hierarchy information is lost (see <a href="#BABCIBFF">"Exporting Hierarchy-Enabled (Repository) Tables"</a>). When <span class="italic">importing</span>, any XML schemas referenced by the data to be imported are also imported.</p>
</div>
<!-- class="sect1" -->
<a id="BABJGFCJ"></a>
<div id="ADXDB5738" class="sect1">
<h2 class="sect1">Repository Resources and Foldering Support</h2>
<p>Oracle XML&nbsp;DB supports a <span class="italic">foldering mechanism</span> that helps store content in the database in hierarchical structures, as opposed to traditional relational database structures. Foldering lets you use path names and URIs to refer to data (repository resources), rather than table names, column names, and so on. This foldering mechanism is not entirely supported using <a id="sthref1874"></a><code>expdp</code> or <code>impdp</code>.</p>
<p>However, for resources based on a registered XML schema, the <code>XMLType</code> tables storing the data can be exported and imported. During export, only the XML data is exported, the relationship in the Oracle XML&nbsp;DB foldering hierarchy is lost.</p>
<div id="ADXDB5739" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref1875"></a>
<h3 class="sect2">Full Database Export</h3>
<p>Oracle XML&nbsp;DB stores the metadata (and data unrelated to XML Schema) for Oracle XML&nbsp;DB Repository in database schema (user account) <code><a id="sthref1876"></a><a id="sthref1877"></a><a id="sthref1878"></a>XDB</code>. Because Oracle Database does not export the repository structure, these metadata tables and structures are not exported during a full database export.The entire database schema (user) <code><a id="sthref1879"></a><a id="sthref1880"></a><a id="sthref1881"></a>XDB</code> is skipped during a full database export, and any database objects owned by user <code>XDB</code> are not exported.</p>
</div>
<!-- class="sect2" -->
<div id="ADXDB5740" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref1882"></a>
<h3 class="sect2">Exporting and Importing with Different Character Sets</h3>
<p>As with other database objects, XML data is exported in the character set of the exporting server. During import, the data gets converted to the character set of the importing server.</p>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="i1026634"></a>
<div id="ADXDB5741" class="sect1">
<h2 class="sect1">Export/Import Syntax and Examples</h2>
<p>Export and import using Oracle Data Pump is described in <a class="olink SUTIL" href="../../server.112/e22490/toc.htm"><span class="italic">Oracle Database Utilities.</span></a> This section includes additional guidelines and examples for using commands <code>expdp</code> and <code>impdp</code> with <code>XMLType</code> data. For tables with <code>XMLType</code> data stored as <code>CLOB</code>, Oracle Data Pump exports and imports the tables in the same way as it would do for any table.</p>
<p>The examples presented here use the command-line commands <code>expdp</code> and <code>impdp</code>. After submitting such a command with a user name and command parameters, you are prompted for a password. The examples here do not show this prompting.</p>
<div id="ADXDB5742" class="sect2"><a id="sthref1883"></a>
<h3 class="sect2">Performing a Table-Mode Export /Import</h3>
<p>An <code>XMLType</code> table has a dependency on the XML schema that was used to define it. Similarly, the XML schema has dependencies on the SQL object types created or specified for it. Importing an <code>XMLType</code> table requires the existence of the XML schema and the SQL object types. When a <code>TABLE</code> mode export is used, only the table related metadata and data are exported. To be able to import this data successfully, the user needs to ensure that both the XML schema and object types have been created.</p>
<p>The examples here assume that you are using a database with the following features:</p>
<ul>
<li>
<p>A database with a sample schema</p>
</li>
<li>
<p>A table <code>foo</code> with an <code>XMLType</code> column in unstructured (<code>CLOB</code>) storage format</p>
</li>
<li>
<p>A directory object <code>dpump_dir</code>, for which <code>READ</code> and <code>WRITE</code> privileges have been granted to the sample schema</p>
</li>
</ul>
<p><a href="#BABGBDGC">Example 36-1</a> shows a table-mode export, specified using the <code>TABLES</code> parameter. It exports table <code>foo</code> to <code>foo.dmp</code> dump file.</p>
<div id="ADXDB5743" class="example">
<p class="titleinexample"><a id="BABGBDGC"></a>Example 36-1 Exporting XMLType Data in TABLE Mode</p>
<pre>
expdp system directory=dpump_dir dumpfile=foo.dmp tables=foo 
</pre></div>
<!-- class="example" -->
<div class="infobox-note">
<p class="notep1">Note:</p>
In table mode, if you do not specify a schema prefix in the <code>expdp</code> command, the schema of the exporter is used by default.</div>
<p><a href="#BABEBIIF">Example 36-2</a> shows a table-mode import. It imports table <code>foo</code> from the <code>foo.dmp</code> dump file.</p>
<div id="ADXDB5744" class="example">
<p class="titleinexample"><a id="BABEBIIF"></a>Example 36-2 Importing XMLType Data in TABLE Mode</p>
<pre>
impdp system tables=foo directory=dpump_dir dumpfile=foo.dmp table_exists_action=append
</pre></div>
<!-- class="example" -->
<p>If a table by the name <code>foo</code> already exists at the time of this import, then parameter <code>table_exists_action</code> appends rows at the end of the existing table. When you use <code>APPEND</code>, the data is always loaded into new space. Existing space, even if available, is never reused. For this reason, you might need to compress your data after the load.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink SUTIL" href="../../server.112/e22490/toc.htm"><span class="italic">Oracle Database Utilities</span></a>, for more information about Oracle Data Pump and its command-line clients, <code>expdp</code> and <code>impdp</code></div>
</div>
<!-- class="sect2" -->
<div id="ADXDB5745" class="sect2"><a id="sthref1884"></a>
<h3 class="sect2">Performing a Schema-Mode Export/Import</h3>
<p>When performing a <code>Schema</code> mode export, if you have role <code>EXP_FULL_DATABASE</code>, then you can export a database schema, the database schema definition, and the system grants and privileges of that database schema.</p>
<p>The example here assumes that you are using a database with the following features:</p>
<ul>
<li>
<p>User <code>x4a</code> has created a table <code>po2</code>.</p>
</li>
<li>
<p>User <code>x4a</code> has a registered XML schema, <code>ipo</code>, which created two ordered collection tables <code>item_oct2</code> and <code>sitem_nt2</code>.</p>
</li>
</ul>
<p>User <code>x4a</code> creates table <code>po2</code> as shown in <a href="#BABDGIJG">Example 36-3</a>.</p>
<div id="ADXDB5746" class="example">
<p class="titleinexample"><a id="BABDGIJG"></a>Example 36-3 Creating Table po2</p>
<pre>
CREATE TABLE po2 (po XMLType)
  XMLTYPE COLUMN po
  XMLSCHEMA "ipo.xsd"
  ELEMENT "purchaseOrder"
  VARRAY po.XMLDATA."items"."item"
    STORE AS TABLE item_oct2 ((PRIMARY KEY(NESTED_TABLE_ID, SYS_NC_ARRAY_INDEX$)))
      NESTED TABLE po.XMLDATA."shippedItems"."item" STORE AS sitem_nt2;
</pre></div>
<!-- class="example" -->
<p>Table <code>po2</code> is then populated and exported, as shown in <a href="#BABGHAHH">Example 36-4</a>.</p>
<div id="ADXDB5747" class="example">
<p class="titleinexample"><a id="BABGHAHH"></a>Example 36-4 Exporting XMLType Data in SCHEMA Mode</p>
<pre>
expdp x4a directory=tkxm_xmldir dumpfile=x4a.dmp
</pre></div>
<!-- class="example" -->
<p><a href="#BABGHAHH">Example 36-4</a> exports all of the following:</p>
<ul>
<li>
<p>All data types that were generated during registration of XML schema <code>ipo</code>.</p>
</li>
<li>
<p>XML schema <code>ipo</code>.</p>
</li>
<li>
<p>Table <code>po2</code> and the ordered collection tables <code>item_oct2</code> and <code>sitem_nt2</code>, which were generated during registration of XML schema <code>ipo</code>.</p>
</li>
<li>
<p>All data in all of those tables.</p>
</li>
</ul>
<div id="ADXDB5748" class="example">
<p class="titleinexample"><a id="BABFGJBG"></a>Example 36-5 Importing XMLType Data in SCHEMA Mode</p>
<pre>
impdp x4a directory=tkxm_xmldir dumpfile=x4a.dmp
</pre></div>
<!-- class="example" -->
<p><a href="#BABFGJBG">Example 36-5</a> imports all of the data in <code>x4a.dmp</code> to another database, in which the user <code>x4a</code> already exists.</p>
<p><a href="#BABCEEJB">Example 36-6</a> does the same thing as <a href="#BABFGJBG">Example 36-5</a>, but it also remaps the database schema from user <code>x4a</code> to user <code>quine</code>.</p>
<div id="ADXDB5749" class="example">
<p class="titleinexample"><a id="BABCEEJB"></a>Example 36-6 Importing XMLType Data in SCHEMA Mode, Remapping Schema</p>
<pre>
impdp x4a directory=tkxm_xmldir dumpfile=x4a.dmp remap_schema=x4a:quine
</pre></div>
<!-- class="example" -->
<p><a href="#BABCEEJB">Example 36-6</a> imports all of the data in <code>x4a.dmp</code> (exported from the database schema of user <code>x4a</code>) into database schema <code>quine</code>. To remap the database schema, user <code>x4a</code> must have been granted role <code>IMP_FULL_DATABASE</code> on the local database and role <code>EXP_FULL_DATABASE</code> on the source database. <code>REMAP_SCHEMA</code> loads all of the objects from the source schema into the target schema.</p>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" --></div>
<!-- class="chapter" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment1019">
<tr>
<td class="cellalignment1028">
<table class="cellalignment1024">
<tr>
<td class="cellalignment1023"><a href="xdb25loa.htm"><img width="24" height="24" src="../../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment1023"><a href="xdb27aq.htm"><img width="24" height="24" src="../../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;2002, 2014,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment1030">
<table class="cellalignment1022">
<tr>
<td class="cellalignment1023"><a href="../../index.htm"><img width="24" height="24" src="../../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment1023"><a href="../../nav/portal_booklist.htm"><img width="24" height="24" src="../../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment1023"><a href="toc.htm"><img width="24" height="24" src="../../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment1023"><a href="index.htm"><img width="24" height="24" src="../../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment1023"><a href="../../nav/mindx.htm"><img width="24" height="24" src="../../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment1023"><a href="../../dcommon/html/feedback.htm"><img width="24" height="24" src="../../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>
</body>
</html>
