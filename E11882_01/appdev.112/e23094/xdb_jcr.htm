<!DOCTYPE html>
<html lang="en" >
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1">
<meta charset="utf-8">
<title>Using Oracle XML DB Content Connector</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Version 5.1.2 Build 748" />
<meta name="description" content="This manual describes Oracle XML&nbsp;DB. It includes guidelines and examples for storing, generating, accessing, searching, validating, transforming, evolving, and indexing XML data in Oracle Database." />
<meta name="dcterms.created" content="2014-02-20T9:56:17Z" />
<meta name="robots" content="all" />
<meta name="dcterms.title" content="XML DB Developer's Guide" />
<meta name="dcterms.identifier" content="E23094-04" />
<meta name="dcterms.isVersionOf" content="ADXDB" />
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;2002, 2014,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved." />
<link rel="Start" href="../../index.htm" title="Home" type="text/html" />
<link rel="Copyright" href="../../dcommon/html/cpyr.htm" title="Copyright" type="text/html" />

<script type="application/javascript"  src="../../dcommon/js/headfoot.js"></script>
<script type="application/javascript"  src="../../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html" />
<link rel="Index" href="index.htm" title="Index" type="text/html" />
<link rel="Prev" href="xdb_repos_events.htm" title="Previous" type="text/html" />
<link rel="Next" href="xdb23jv1.htm" title="Next" type="text/html" />
<link rel="alternate" href="../e23094.pdf" title="PDF version" type="application/pdf" />
<link rel="schema.dcterms" href="http://purl.org/dc/terms/" />
<link rel="stylesheet" href="../../dcommon/css/fusiondoc.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/header.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/footer.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/fonts.css">
<link rel="stylesheet" href="../../dcommon/css/foundation.css">
<link rel="stylesheet" href="../../dcommon/css/codemirror.css">
<link rel="stylesheet" type="text/css" title="Default" href="../../nav/css/html5.css">
<link rel="stylesheet" href="../../dcommon/css/respond-480-tablet.css">
<link rel="stylesheet" href="../../dcommon/css/respond-768-laptop.css">
<link rel="stylesheet" href="../../dcommon/css/respond-1140-deskop.css">
<script type="application/javascript" src="../../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">43/54</span> <!-- End Header -->
<div id="ADXDB2630" class="chapter"><a id="BABHGHCI"></a>
<h1 class="chapter"><span class="secnum">31</span> Using Oracle XML DB Content Connector</h1>
<p><a id="sthref1744"></a>This chapter describes how to use Oracle XML DB Content Connector to access Oracle XML&nbsp;DB Repository.</p>
<p>Oracle XML DB Content Connector implements Content Repository API for Java (sometimes referred to as JCR), a Java API standard developed by the Java community as JSR-170.</p>
<p>This chapter contains these topics:</p>
<ul>
<li>
<p><a href="#CHDHDDAD">Overview of JCR and Oracle XML DB Content Connector</a></p>
</li>
<li>
<p><a href="#CHDIBJIB">How Oracle XML&nbsp;DB Repository Is Exposed in JCR</a></p>
</li>
<li>
<p><a href="#CHDFJGBC">How to Use Oracle XML DB Content Connector</a></p>
</li>
<li>
<p><a href="#CHDIIJDA">Using XML Schemas with JCR</a></p>
</li>
</ul>
<a id="CHDHDDAD"></a>
<div id="ADXDB5610" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Overview of JCR and Oracle XML DB Content Connector</h2>
<p>This section contains the following topics:</p>
<ul>
<li>
<p><a href="#CHDHEAEH">About the Content Repository API for Java (JCR)</a></p>
</li>
<li>
<p><a href="#CHDBJGEG">About Oracle XML DB Content Connector</a></p>
</li>
</ul>
<a id="CHDHEAEH"></a>
<div id="ADXDB5611" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">About the Content Repository API for Java (JCR)</h3>
<p><a id="sthref1745"></a>JCR 1.0 defines a standard Java API for applications to interact with content repositories.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
Java Community Process, "Content Repository for Java technology API", <code><a href="http://jcp.org/en/jsr/detail?id=170">http://jcp.org/en/jsr/detail?id=170</a></code>. Chapter 4 of the JSR-170 specification provides a concise introduction to JCR 1.0</div>
<p>JCR models the data in a content repository as a tree of nodes. Each node may have one or more child nodes. Every node has exactly one parent node, except for the root node, which has no parent.</p>
<p>In addition to child nodes, a node may also have one or more properties. A property is a simple name/value pair. For example, a node representing a particular file in the content repository has a property named <code>jcr:created</code> whose value is the date the file was created.</p>
<p>Each property has a property type. For example, the <code>jcr:created</code> property has the <code>DATE</code> property type, requiring its value to be a valid date/time.</p>
<p>Similarly, each node has a node type. For example, a node representing a file has node type <code>nt:file</code>. The node type controls what child nodes and properties the node may have or must have. For example, all nodes of type <code>nt:file</code> must have a <code>jcr:created</code> property.</p>
<p>Because nodes and properties are named, they can be addressed by path. JCR supports both absolute and relative paths. For example, the absolute path</p>
<pre>
/My Documents/pictures/puppy.jpg/jcr:created
</pre>
<p>resolves to the <code>jcr:created</code> property of file <code>puppy.jpg</code>. This property can also be addressed relative to the <code>My Documents</code> folder by the following relative path:</p>
<pre>
pictures/puppy.jpg/jcr:created
</pre>
<p>Node and property names can be namespace qualified. Like XML, JCR uses colon-delimited namespace prefixes to express namespace-qualified names, for example, <code>jcr:created</code>. Unlike XML, JCR records the namespace prefix-to-URI mappings in a repository-wide namespace registry, which, for example, maps the <code>jcr</code> prefix to the URI <code>http://www.jcp.org/jcr/1.0</code>.</p>
</div>
<!-- class="sect2" -->
<a id="CHDBJGEG"></a>
<div id="ADXDB5612" class="sect2">
<h3 class="sect2">About Oracle XML DB Content Connector</h3>
<p><a id="sthref1746"></a>Oracle XML DB Content Connector lets you access Oracle XML&nbsp;DB Repository using the JCR 1.0 Java API. Your applications can run either in a standalone Java Virtual Machine or a J2EE container.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
Using Oracle XML DB Content Connector in the database Oracle JVM (the Java Virtual Machine available within a database process) is not supported. To use the content connector in the database tier, you must use either a standalone Java Virtual Machine or a J2EE container.</div>
<p>Files and folders in Oracle XML&nbsp;DB Repository are represented as JCR nodes (and properties of those nodes). They can be created, retrieved, and updated using the JCR APIs.</p>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="CHDIBJIB"></a>
<div id="ADXDB5613" class="sect1">
<h2 class="sect1">How Oracle XML&nbsp;DB Repository Is Exposed in JCR<a id="sthref1747"></a><a id="sthref1748"></a><a id="sthref1749"></a><a id="sthref1750"></a><a id="sthref1751"></a><a id="sthref1752"></a><a id="sthref1753"></a></h2>
<p>Oracle XML DB Content Connector represents data in Oracle XML&nbsp;DB Repository as JCR nodes and properties. Files and folders are represented as nodes of type <code>nt:file</code> and <code>nt:folder</code>, respectively. Their content and metadata is exposed as nodes of node type <code>nt:resource</code>.</p>
<p>This section contains the following topics:</p>
<ul>
<li>
<p><a href="#CHDFCDEE">Example of How Files and Folders are Exposed in JCR</a></p>
</li>
<li>
<p><a href="#CHDJJACD">Oracle Extensions to JCR Node Types</a></p>
</li>
<li>
<p><a href="#CHDGCEBF">Binary and XML Content</a></p>
</li>
<li>
<p><a href="#CHDDFDFH">System-Defined Metadata</a></p>
</li>
<li>
<p><a href="#CHDHAHCI">User-Defined Metadata</a></p>
</li>
<li>
<p><a href="#CHDIAGCJ">Hard Links and Weak Links</a></p>
</li>
</ul>
<a id="CHDFCDEE"></a>
<div id="ADXDB5614" class="sect2">
<h3 class="sect2">Example of How Files and Folders are Exposed in JCR<a id="sthref1754"></a></h3>
<p>The folder <code>MyFolder</code> is stored in the root folder of Oracle XML&nbsp;DB Repository. It contains two files, <code>Address.xml</code> and <code>Car.jpg</code>.</p>
<p>File <code>Address.xml</code> has the following XML content:</p>
<pre>
&lt;Address country="US"&gt;
  &lt;name&gt;Alice Smith&lt;/name&gt;
  &lt;street&gt;123 Maple Street&lt;/street&gt;
  &lt;city&gt;Mill Valley&lt;/city&gt;
  &lt;state&gt;CA&lt;/state&gt;
  &lt;zip&gt;90952&lt;/zip&gt;
&lt;/Address&gt;
</pre>
<p>File <code>Car.jpg</code> has binary content: a picture of an automobile. It also has the following user-defined XML metadata:</p>
<pre>
&lt;i:ImageMetadata&gt;
  &lt;Height&gt;640&lt;/Height&gt;
  &lt;Width&gt;480&lt;/Width&gt;
  &lt;RGB R="44" G="123" B="74"/&gt;
&lt;/i:ImageMetadata&gt; 
</pre>
<p>Oracle XML DB Content Connector exposes <code>MyFolder</code>, <code>Address.xml</code>, and <code>Car.jpg</code> as JCR nodes and properties.</p>
<p><a href="#CHDEDHFJ">Example 31-1</a> shows folder <code>MyFolder</code> represented as a tree of JCR nodes and properties. In this representation, <code><span class="codeinlinebold">bold</span></code> type indicates a node, <code><span class="codeinlineitalic">italic</span></code> type indicates a node type, <code>regular</code> type indicates a property, and italic type with angle brackets (<code>&lt;&gt;</code>) indicates omitted data, such as binary data.</p>
<div id="ADXDB5615" class="example">
<p class="titleinexample"><a id="CHDEDHFJ"></a>Example 31-1 JCR Node Representation of MyFolder</p>
<pre>
<span class="bold">[root]</span> <span class="italic">(nt:folder)</span>
  jcr:created="2001-01-01T00:00:00.000Z"
  <span class="bold">jcr:content </span><span class="italic">(nt:resource)</span>
    jcr:data=null
    jcr:lastModified="2001-01-01T00:00:00.000Z"
    ojcr:owner="SYS"
    ojcr:creator="SYS"
    ojcr:lastModifier="SYS"
    ojcr:displayName=""
    ojcr:language="en-US"
  <span class="bold">MyFolder</span> <span class="italic">(nt:folder)</span>
    jcr:created="2001-01-01T00:00:00.000Z"
    <span class="bold">jcr:content</span> <span class="italic">(nt:resource)</span>
      jcr:data=null
      jcr:lastModified="2001-01-01T00:00:00.000Z"
      ojcr:owner="ALICE"
      ojcr:creator="BOB"
      ojcr:lastModifier="CHARLIE"
      ojcr:author="BOB"
      ojcr:comment="An application folder"
      ojcr:displayName="MyFolder"
      ojcr:language="en-US"
      <span class="bold">ojcr:links</span> <span class="italic">(ojcr:links)</span>
        <span class="bold">ojcr:folderLink</span> <span class="italic">(ojcr:linkProperties)</span>
          ojcr:linkType="Hard"
          ojcr:linkSource=<span class="italic">&lt;RESID of the root folder&gt;</span>
          ojcr:linkTarget=<span class="italic">&lt;RESID of folder MyFolder&gt;</span>
          ojcr:linkName="MyFolder"
    <span class="bold">Address.xml</span> <span class="italic">(nt:file)</span>
      jcr:created="2005-09-01T12:34:56.789Z"
      <span class="bold">jcr:content</span> <span class="italic">(nt:resource)</span>
        jcr:encoding="UTF-8"
        jcr:mimeType="text/xml"
        jcr:data=<span class="italic">&lt;binary representation of the XML content&gt;</span>
        jcr:lastModified="2005-09-01T12:34:56.789Z"
        ojcr:owner="ALICE"
        ojcr:creator="BOB"
        ojcr:lastModifier="CHARLIE"
        ojcr:author="BOB"
        ojcr:displayName="Address.xml"
        ojcr:language="en-US"
        <span class="bold">ojcr:xmlContent</span> <span class="italic">(nt:unstructured)</span>
          <span class="bold">Address</span>
            country="US"
            <span class="bold">name</span>
              <span class="bold">jcr:xmltext</span>
                jcr:xmlcharacters="Alice Smith"
            <span class="bold">street</span>
              <span class="bold">jcr:xmltext</span>
                jcr:xmlcharacters="123 Maple Street"
            <span class="bold">city</span>
              <span class="bold">jcr:xmltext</span>
                jcr:xmlcharacters="Mill Valley"
            <span class="bold">state</span>
              <span class="bold">jcr:xmltext</span>
                jcr:xmlcharacters="CA"
            <span class="bold">zip</span>
              <span class="bold">jcr:xmltext</span>
                jcr:xmlcharacters="90952"
        <span class="bold">ojcr:links</span> <span class="italic">(ojcr:links)</span>
          <span class="bold">ojcr:folderLink</span> <span class="italic">(ojcr:linkProperties)</span>
            ojcr:linkType="Hard"
            ojcr:linkSource=<span class="italic">&lt;RESID of folder MyFolder&gt;</span>
            ojcr:linkTarget=<span class="italic">&lt;RESID of file Address.xml&gt;</span>
            ojcr:linkName="Address.xml"
    <span class="bold">Car.jpg</span> <span class="italic">(nt:file)</span>
      jcr:created="2004-02-12T16:15:23.247Z"
      <span class="bold">jcr:content</span> <span class="italic">(nt:resource)</span>
        jcr:mimeType="image/jpeg"
        jcr:data=<span class="italic">&lt;binary content of file Car.jpg&gt;</span>
        jcr:lastModified="2004-02-12T17:20:25.314Z"
        ojcr:owner="ALICE"
        ojcr:creator="BOB"
        ojcr:lastModifier="CHARLIE"
        ojcr:author="BOB"
        ojcr:displayName="A shiny red car!"
        ojcr:language="en-US"
        <span class="bold">i:ImageMetadata</span>
          <span class="bold">Height</span>
            <span class="bold">jcr:xmltext</span>
              jcr:xmlcharacters="640"
          <span class="bold">Width</span>
            <span class="bold">jcr:xmltext</span>
              jcr:xmlcharacters="480"
          <span class="bold">RGB</span>
            R="44"
            G="123"
            B="74"
        <span class="bold">ojcr:links</span> <span class="italic">(ojcr:links)</span>
          <span class="bold">ojcr:folderLink</span> <span class="italic">(ojcr:linkProperties)</span>
            ojcr:linkType="Hard"
            ojcr:linkSource=<span class="italic">&lt;RESID of folder MyFolder&gt;</span>
            ojcr:linkTarget=<span class="italic">&lt;RESID of file Car.jpg&gt;</span>
            ojcr:linkName="Car.jpg"
</pre></div>
<!-- class="example" --></div>
<!-- class="sect2" -->
<a id="CHDJJACD"></a>
<div id="ADXDB5616" class="sect2">
<h3 class="sect2">Oracle Extensions to JCR Node Types<a id="sthref1755"></a><a id="sthref1756"></a><a id="sthref1757"></a><a id="sthref1758"></a></h3>
<p>Oracle XML DB Content Connector augments the definitions of node types <code>nt:file</code>, <code>nt:folder</code>, and <code>nt:resource</code> to include additional information held in Oracle XML&nbsp;DB Repository. Node type <code>ojcr:folder</code> is added as a supertype of <code>nt:folder</code>, and node type <code>ojcr:resource</code> is added as a supertype of <code>nt:resource</code>. All Oracle extensions are in the namespace <code>http://xmlns.oracle.com/jcr/1.0</code>, which is mapped to namespace prefix <code><span class="codeinlinebold">ojcr</span></code>.</p>
<p>In addition, node type <code>mix:referenceable</code> is added as a supertype of <code>nt:file</code> and <code>nt:folder</code> to allow all files and folders to be accessed by their resource id.</p>
</div>
<!-- class="sect2" -->
<a id="CHDGCEBF"></a>
<div id="ADXDB5617" class="sect2">
<h3 class="sect2">Binary and XML Content<a id="sthref1759"></a><a id="sthref1760"></a><a id="sthref1761"></a></h3>
<p>Property <code>jcr:data</code> contains the binary content of a file. Note that <code>jcr:data</code> is a property not of node <code>nt:file</code>, but rather of its child node <code>jcr:content</code>.For files containing XML content, node <code>jcr:content</code> has a child node <code>ojcr:xmlContent</code>, under which the XML content can be accessed as a set of JCR nodes and properties. File <code>Address.xml</code>, referenced in <a href="#CHDEDHFJ">Example 31-1</a>, is such a file. The XML content of an XML file in the repository is mapped to JCR nodes and properties using the <span class="glossaryterm"><a id="sthref1762"></a><a id="sthref1763"></a>document view serialization</span> defined by JCR, in which:</p>
<ul>
<li>
<p>XML elements are exposed as JCR nodes.</p>
</li>
<li>
<p>XML attributes are exposed as JCR properties.</p>
</li>
<li>
<p>XML text is exposed as JCR properties named <code>jcr:xmlcharacters</code> within nodes named <code>jcr:xmltext</code>.</p>
</li>
</ul>
</div>
<!-- class="sect2" -->
<a id="CHDDFDFH"></a>
<div id="ADXDB5618" class="sect2">
<h3 class="sect2">System-Defined Metadata<a id="sthref1764"></a></h3>
<p>Oracle XML&nbsp;DB Repository maintains metadata for each repository file and folder. In database views <code>RESOURCE_VIEW</code> and <code>PATH_VIEW</code>, this metadata is represented as a set of XML elements within <code>XMLType</code> column <code>RES</code>. In JCR, this metadata is mapped to properties in namespaces <code>jcr</code> and <code>ojcr</code>. <a href="#BABCJEDC">Table 31-1</a> describes this mapping.</p>
<div id="ADXDB5619" class="tblformal">
<p class="titleintable"><a id="sthref1765"></a><a id="BABCJEDC"></a>Table 31-1 Oracle XML&nbsp;DB Resource to JCR Mappings</p>
<table class="cellalignment1026" title="Oracle XML DB Resource to JCR Mappings" summary="rows are types; the first column are the XMLTypes and the second column are the JCR nodes or properties that map to the XMLTypes." dir="ltr">
<thead>
<tr class="cellalignment1020">
<th class="cellalignment1027" id="r1c1-t4">XPath</th>
<th class="cellalignment1027" id="r1c2-t4">Relative Path From Node nt:file or nt:folder</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1020">
<td class="cellalignment1028" id="r2c1-t4" headers="r1c1-t4">
<p><code>/Resource/CreationDate</code></p>
</td>
<td class="cellalignment1028" headers="r2c1-t4 r1c2-t4">
<p><code>jcr:created</code></p>
</td>
</tr>
<tr class="cellalignment1020">
<td class="cellalignment1028" id="r3c1-t4" headers="r1c1-t4">
<p><code>/Resource/ModificationDate</code></p>
</td>
<td class="cellalignment1028" headers="r3c1-t4 r1c2-t4">
<p><code>jcr:content/jcr:lastModified</code></p>
</td>
</tr>
<tr class="cellalignment1020">
<td class="cellalignment1028" id="r4c1-t4" headers="r1c1-t4">
<p><code>/Resource/Author</code></p>
</td>
<td class="cellalignment1028" headers="r4c1-t4 r1c2-t4">
<p><code>jcr:content/ojcr:author</code></p>
</td>
</tr>
<tr class="cellalignment1020">
<td class="cellalignment1028" id="r5c1-t4" headers="r1c1-t4">
<p><code>/Resource/DisplayName</code></p>
</td>
<td class="cellalignment1028" headers="r5c1-t4 r1c2-t4">
<p><code>jcr:content/ojcr:displayName</code></p>
</td>
</tr>
<tr class="cellalignment1020">
<td class="cellalignment1028" id="r6c1-t4" headers="r1c1-t4">
<p><code>/Resource/Comment</code></p>
</td>
<td class="cellalignment1028" headers="r6c1-t4 r1c2-t4">
<p><code>jcr:content/ojcr:comment</code></p>
</td>
</tr>
<tr class="cellalignment1020">
<td class="cellalignment1028" id="r7c1-t4" headers="r1c1-t4">
<p><code>/Resource/Language</code></p>
</td>
<td class="cellalignment1028" headers="r7c1-t4 r1c2-t4">
<p><code>jcr:content/ojcr:language</code></p>
</td>
</tr>
<tr class="cellalignment1020">
<td class="cellalignment1028" id="r8c1-t4" headers="r1c1-t4">
<p><code>/Resource/CharacterSet</code></p>
</td>
<td class="cellalignment1028" headers="r8c1-t4 r1c2-t4">
<p><code>jcr:content/jcr:encoding</code></p>
</td>
</tr>
<tr class="cellalignment1020">
<td class="cellalignment1028" id="r9c1-t4" headers="r1c1-t4">
<p><code>/Resource/ContentType</code></p>
</td>
<td class="cellalignment1028" headers="r9c1-t4 r1c2-t4">
<p><code>jcr:content/jcr:mimeType</code></p>
</td>
</tr>
<tr class="cellalignment1020">
<td class="cellalignment1028" id="r10c1-t4" headers="r1c1-t4">
<p><code>/Resource/Owner</code></p>
</td>
<td class="cellalignment1028" headers="r10c1-t4 r1c2-t4">
<p><code>jcr:content/ojcr:owner</code></p>
</td>
</tr>
<tr class="cellalignment1020">
<td class="cellalignment1028" id="r11c1-t4" headers="r1c1-t4">
<p><code>/Resource/Creator</code></p>
</td>
<td class="cellalignment1028" headers="r11c1-t4 r1c2-t4">
<p><code>jcr:content/ojcr:creator</code></p>
</td>
</tr>
<tr class="cellalignment1020">
<td class="cellalignment1028" id="r12c1-t4" headers="r1c1-t4">
<p><code>/Resource/LastModifier</code></p>
</td>
<td class="cellalignment1028" headers="r12c1-t4 r1c2-t4">
<p><code>jcr:content/ojcr:lastModifier</code></p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="sect2" -->
<a id="CHDHAHCI"></a>
<div id="ADXDB5620" class="sect2">
<h3 class="sect2">User-Defined Metadata<a id="sthref1766"></a><a id="sthref1767"></a></h3>
<p>User-defined XML metadata is exposed as JCR nodes and properties under the <code>jcr:content</code> child node of the repository file or folder. As with XML file content, XML metadata is mapped to JCR nodes and properties using the document view serialization that is defined by JCR. See <a href="#CHDGCEBF">"Binary and XML Content"</a> for a description of this serialization.</p>
<p>In <a href="#CHDEDHFJ">Example 31-1</a>, file <code>Car.jpg</code> has this user-defined metadata:</p>
<pre>
&lt;i:ImageMetadata&gt;
  &lt;Height&gt;640&lt;/Height&gt;
  &lt;Width&gt;480&lt;/Width&gt;
  &lt;RGB R="44" G="123" B="74"/&gt;
&lt;/i:ImageMetadata&gt; 
</pre>
<p>The following JCR path retrieves the <code>Width</code> value:</p>
<pre>
/My Folder/Car.jpg/jcr:content/i:ImageMetadata/
   Width/jcr:xmltext/jcr:xmlcharacters
</pre></div>
<!-- class="sect2" -->
<a id="CHDIAGCJ"></a>
<div id="ADXDB5621" class="sect2">
<h3 class="sect2">Hard Links and Weak Links<a id="sthref1768"></a><a id="sthref1769"></a><a id="sthref1770"></a><a id="sthref1771"></a><a id="sthref1772"></a></h3>
<p>In JCR, each node and property has exactly one parent node, except for the root node, which has no parent. Consequently, there is exactly one absolute path to each JCR node or property.</p>
<p>However, in Oracle XML&nbsp;DB Repository, a resource (file or folder) can be linked to more than one parent folder, either by hard links, which control the life span of the child, or by weak links, which do not. Consequently, there can be more than one path to a resource, and a resource can have more than one parent.</p>
<p>In resolving a path, Oracle XML DB Content Connector traverses both hard and weak links. If there is more than one path to a resource, JCR method <code>getPath()</code> returns the path by which that resource was first discovered, subsequent to the most recent call to either <code>save()</code> or <code>refresh(boolean)</code> by that session. JCR method <code>getParent()</code> returns the folder targeted by that path.</p>
<p>It is often useful to obtain a list of all parents of a resource, if the resource is the target of more than one link and therefore has more than one parent folder. Oracle XML DB Content Connector presents this as nodes of type <code>ojcr:linkProperties</code> with path <code>jcr:content/ojcr:links/ojcr:folderLink</code> relative to node <code>nt:file</code> or <code>nt:folder</code>. There is one <code>ojcr:folderLink</code> node for each parent of the resource.</p>
<p>Node <code>ojcr:folderLink</code> has the following properties:</p>
<ul>
<li>
<p><code>ojcr:linkType</code>: Link type (<code>Hard</code> or <code>Weak</code>)</p>
</li>
<li>
<p><code>ojcr:linkSource</code>: Resource id of the parent folder</p>
</li>
<li>
<p><code>ojcr:linkTarget</code>: Resource id of the child file or folder</p>
</li>
<li>
<p><code>ojcr:linkName</code>: Name of the child file or folder in that parent</p>
</li>
</ul>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="CHDFJGBC"></a>
<div id="ADXDB5623" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">How to Use Oracle XML DB Content Connector<a id="sthref1773"></a></h2>
<p>This section describes how to use Oracle XML DB Content Connector to access information in Oracle XML&nbsp;DB Repository. It has the following topics:</p>
<ul>
<li>
<p><a href="#CHDJEGHA">Setting CLASSPATH</a></p>
</li>
<li>
<p><a href="#CHDCEADE">Obtaining the JCR Repository Object</a></p>
</li>
<li>
<p><a href="#CHDCFADA">Sample Code to Upload File</a></p>
</li>
<li>
<p><a href="#CHDJHFEH">Additional Code Samples</a></p>
</li>
<li>
<p><a href="#CHDDDHII">Logging API for Oracle XML DB Content Connector</a></p>
</li>
<li>
<p><a href="#CHDJJFIF">Supported JCR Compliance Levels</a></p>
</li>
<li>
<p><a href="#CHDCIHJD">Oracle XML DB Content Connector Restrictions</a></p>
</li>
</ul>
<a id="CHDJEGHA"></a>
<div id="ADXDB5624" class="sect2">
<h3 class="sect2">Setting CLASSPATH<a id="sthref1774"></a></h3>
<p>Oracle XML DB Content Connector requires the following entries in the Java <code>CLASSPATH</code> variable:</p>
<ul>
<li>
<p><code>$ORACLE_HOME/lib/jcr-1.0.jar</code></p>
</li>
<li>
<p><code>$ORACLE_HOME/lib/ojcr.jar</code></p>
</li>
<li>
<p><code>$ORACLE_HOME/lib/xmlparserv2.jar</code></p>
</li>
<li>
<p><code>$ORACLE_HOME/jlib/xquery.jar</code></p>
</li>
</ul>
</div>
<!-- class="sect2" -->
<a id="CHDCEADE"></a>
<div id="ADXDB5625" class="sect2">
<h3 class="sect2">Obtaining the JCR Repository Object<a id="sthref1775"></a><a id="sthref1776"></a><a id="sthref1777"></a></h3>
<p>In Oracle XML DB Content Connector, <code>oracle.jcr.OracleRepository</code> implements the JCR interface <code>javax.jcr.Repository</code>, which provides the entry point to a JCR repository. The code fragment in <a href="#BABIDJDH">Example 31-2</a> shows how to obtain a <code>Repository</code> object for Oracle XML&nbsp;DB Repository.</p>
<div id="ADXDB5626" class="example">
<p class="titleinexample"><a id="BABIDJDH"></a>Example 31-2 Code Fragment Showing How to Get a Repository Object</p>
<pre>
import oracle.jcr.OracleRepository;
import oracle.jcr.OracleRepositoryFactory;
import oracle.jcr.xdb.XDBRepositoryConfiguration;
import oracle.jdbc.pool.OracleDataSource;
...
XDBRepositoryConfiguration configuration =
  new XDBRepositoryConfiguration();
OracleDataSource ods =
  (OracleDataSource)configuration.getDataSource();
// databaseURL is a JDBC database URL.
ods.setURL(databaseURL);
// OracleRepository implements javax.jcr.Repository.
OracleRepository repository =
  OracleRepositoryFactory.<span class="bold">createOracleRepository</span>(configuration);
</pre></div>
<!-- class="example" -->
<p><code>OracleRepository</code> implements both <code>java.io.Serializable</code> and <code>javax.naming.Referenceable</code>. This lets you create and configure an <code>OracleRepository</code> object upon application deployment, and store the ready-to-use <code>OracleRepository</code> object in a JNDI directory. At run-time, your application can retrieve the preconfigured <code>OracleRepository</code> object from the JNDI directory. This approach, recommended by the JCR specification, separates deployment and run-time concerns.</p>
<p>In Oracle XML DB Content Connector, the set of prefix-to-URI mappings forming the JCR namespace registry is stored as part of the <code>OracleRepository</code> configuration.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink JAXML" href="../e10769/toc.htm"><span class="italic">Oracle Database XML Java API Reference</span></a>, package <code>oracle.jcr</code></div>
</div>
<!-- class="sect2" -->
<a id="CHDCFADA"></a>
<div id="ADXDB5627" class="sect2">
<h3 class="sect2">Sample Code to Upload File<a id="sthref1778"></a></h3>
<p><a href="#BABGDJIG">Example 31-3</a> is a Java program that uploads a file from the local file system to Oracle XML&nbsp;DB Repository using Oracle XML DB Content Connector.</p>
<div id="ADXDB5628" class="example">
<p class="titleinexample"><a id="BABGDJIG"></a>Example 31-3 Uploading a File using Oracle XML DB Content Connector</p>
<pre>
import java.io.FileInputStream;
 
import javax.jcr.Node;
import javax.jcr.Session;
import javax.jcr.SimpleCredentials;
 
import oracle.jcr.OracleRepository;
import oracle.jcr.OracleRepositoryFactory;
 
import oracle.jcr.xdb.XDBRepositoryConfiguration;
 
import oracle.jdbc.pool.OracleDataSource;
 
public class UploadFile
{
  public static void main(String[] args)
    throws Exception
  {
    String databaseURL = args[0];
    String userName = args[1];
    String password = args[2];
    String parentPath = args[3];
    String fileName = args[4];
    String mimeType = args[5];
    
    // Get the JCR Repository object.
    XDBRepositoryConfiguration configuration =
      new XDBRepositoryConfiguration();
 
    OracleDataSource ods =
      (OracleDataSource)configuration.getDataSource();
 
    ods.setURL(databaseURL);
    
    OracleRepository repository =
      OracleRepositoryFactory.createOracleRepository(configuration);
    
    // Create a JCR Session.
    SimpleCredentials sc =  
      new SimpleCredentials(userName, password.toCharArray());
 
    Session session = repository.login(sc);
 
    // Get the parent node.
    Node parentNode = (Node)session.getItem(parentPath);
    
    // Get the child contents.
    FileInputStream inputStream = new FileInputStream(fileName);
    
    // Create child node.
    Node node = parentNode.addNode(fileName, "nt:file");
    Node contentNode = node.getNode("jcr:content");
    contentNode.setProperty("jcr:mimeType", mimeType);
    contentNode.setProperty("jcr:data", inputStream);
    
    // Save changes and logout.
    session.save();
    session.logout();
  }
}
 
// EOF
</pre></div>
<!-- class="example" -->
<p>You can compile and run <a href="#BABGDJIG">Example 31-3</a> from the command line. The program requires the following command-line arguments:</p>
<ul>
<li>
<p>JDBC database URL</p>
</li>
<li>
<p>User ID</p>
</li>
<li>
<p>User password</p>
</li>
<li>
<p>Folder in Oracle XML&nbsp;DB Repository into which to upload the file</p>
</li>
<li>
<p>File to be uploaded</p>
</li>
<li>
<p>MIME type</p>
</li>
</ul>
<p><a href="#BGBFJGFD">Example 31-4</a> illustrates this.</p>
<div id="ADXDB5929" class="example">
<p class="titleinexample"><a id="BGBFJGFD"></a>Example 31-4 Uploading a File Using the Command Line</p>
<pre>
export CLASSPATH=.:$ORACLE_HOME/lib/jcr-1.0.jar:$ORACLE_HOME/lib/ojcr.jar:$ORACLE_HOME/lib/xmlparserv2.jar:$ORACLE_HOME/jlib/xquery.jar

javac UploadFile.java

java UploadFile jdbc:oracle:oci:@ quine <span class="codeinlineitalic">password</span> /public MyFile.txt text/plain
</pre></div>
<!-- class="example" --></div>
<!-- class="sect2" -->
<a id="CHDJHFEH"></a>
<div id="ADXDB5629" class="sect2">
<h3 class="sect2">Additional Code Samples</h3>
<p>You can find additional sample code at the following location:</p>
<pre>
$ORACLE_HOME/xdk/demo/java/jcr
</pre>
<p>For each code sample, a <code>README</code> file describes its purpose and use.</p>
</div>
<!-- class="sect2" -->
<a id="CHDDDHII"></a>
<div id="ADXDB5630" class="sect2">
<h3 class="sect2">Logging<a id="sthref1779"></a><a id="sthref1780"></a> API for Oracle XML DB Content Connector</h3>
<p>Oracle XML DB Content Connector uses the standard <code>java.util.logging</code> framework. You can use the logging API provided by that framework to control logging behavior. For example, the following Java code fragment disables all logging.</p>
<pre>
import java.util.logging.LogManager;
...
LogManager.getLogManager().reset();
</pre></div>
<!-- class="sect2" -->
<a id="CHDJJFIF"></a>
<div id="ADXDB5631" class="sect2">
<h3 class="sect2">Supported JCR Compliance<a id="sthref1781"></a> Levels</h3>
<p>The JSR-170 standard, which defines JCR version 1.0, defines two compliance levels and a set of optional features. Oracle XML DB Content Connector supports Level 1 (read functions) and Level 2 (write functions).</p>
</div>
<!-- class="sect2" -->
<a id="CHDCIHJD"></a>
<div id="ADXDB5632" class="sect2">
<h3 class="sect2">Oracle XML DB Content Connector Restrictions<a id="sthref1782"></a><a id="sthref1783"></a></h3>
<p>This section describes certain restrictions of Oracle XML DB Content Connector.</p>
<div id="ADXDB5633" class="sect3"><a id="sthref1784"></a>
<h4 class="sect3">Default Workspace Name</h4>
<p>A single workspace is supported. In calling the <code>login(Credentials, String)</code> or <code>login(String)</code> methods of <code>javax.jcr.Repository</code>, the workspace name must be either an empty-string (<code>""</code>) or <code>NULL</code>.</p>
</div>
<!-- class="sect3" -->
<div id="ADXDB5634" class="sect3"><a id="sthref1785"></a>
<h4 class="sect3">Operations Restricted to Specific Node Types</h4>
<p>Methods <code>save()</code> and <code>refresh()</code> of <code>javax.jcr.Item</code> can be called only on nodes whose type is <code>nt:file</code> or <code>nt:folder</code>. Method <code>move()</code> of <code>javax.jcr.Session</code> and methods <code>copy()</code> and <code>move()</code> of <code>javax.jcr.Workspace</code> can be called only on <code>nt:file</code> and <code>nt:folder</code> nodes.</p>
</div>
<!-- class="sect3" -->
<div id="ADXDB5635" class="sect3"><a id="sthref1786"></a>
<h4 class="sect3">Determining the State of Files or Folders</h4>
<p>Methods <code>isNew()</code> and <code>isModified()</code> of <code>javax.jcr.Item</code> return the state of the file or folder containing the item, not the item itself. Method <code>isNew()</code> returns <code>true</code> if the file or folder has been created in the JCR transient layer but not saved. Method <code>isModified()</code> returns <code>true</code> if the file or folder has been changed in the transient layer but not saved.</p>
</div>
<!-- class="sect3" -->
<div id="ADXDB5636" class="sect3"><a id="sthref1787"></a>
<h4 class="sect3">Interaction Between Binary and XML Content</h4>
<p>The <code>jcr:data</code> property contains the binary-format content of a file. If the file content is XML, there is also an <code>ojcr:xmlContent</code> node under which its XML content is exposed as JCR nodes and properties. Changes you make to the <code>ojcr:xmlContent</code> subtree are not reflected in the <code>jcr:data</code> property until those changes are saved. If you change both the <code>jcr:data</code> property and the <code>ojcr:xmlContent</code> subtree, then the <code>ojcr:xmlContent</code> subtree takes precedence when those changes are saved.</p>
</div>
<!-- class="sect3" -->
<div id="ADXDB5637" class="sect3"><!-- infolevel="all" infotype="General" --><a id="sthref1788"></a>
<h4 class="sect3">Order in Which Changes Are Saved</h4>
<p>Method <code>save</code> of class <code>javax.jcr.Session</code> or class <code>javax.jcr.Item</code> saves changes made in the transient layer. If more than one node or property has been changed, then JCR does not specify the order in which the changes are stored. Oracle XML DB Content Connector saves changes in the following:</p>
<ol>
<li>
<p>Apply updates to existing files and folders, in path-sorted order.</p>
</li>
<li>
<p>Create new files and folders, in path-sorted order.</p>
</li>
<li>
<p>Move existing files and folders, in reverse path-sorted order.</p>
</li>
<li>
<p>Delete existing files and folders, in reverse path-sorted order.</p>
</li>
</ol>
</div>
<!-- class="sect3" -->
<div id="ADXDB5638" class="sect3"><!-- infolevel="all" infotype="General" --><a id="sthref1789"></a>
<h4 class="sect3">Undefined Properties</h4>
<p>Properties that have definitions of type <code>UNDEFINED</code> are stored as <code>STRING</code> values.</p>
</div>
<!-- class="sect3" -->
<div id="ADXDB5639" class="sect3"><!-- infolevel="all" infotype="General" --><a id="sthref1790"></a>
<h4 class="sect3">Node Type nt:base Is Abstract</h4>
<p>Node type <code>nt:base</code> is abstract and cannot be specified as the type of a new node.</p>
</div>
<!-- class="sect3" -->
<div id="ADXDB5640" class="sect3"><!-- infolevel="all" infotype="General" --><a id="sthref1791"></a>
<h4 class="sect3">Node jcr:content Is Created Automatically</h4>
<p>When you create a node of type <code>nt:file</code> or <code>nt:folder</code>, a <code>jcr:content</code> node is created automatically as a child.</p>
</div>
<!-- class="sect3" -->
<div id="ADXDB5641" class="sect3"><!-- infolevel="all" infotype="General" --><a id="sthref1792"></a>
<h4 class="sect3">Saving Normalizes Node jcr:xmltext</h4>
<p>Saving combines successive <code>jcr:xmltext</code> nodes, which represent text within XML content or user-defined metadata, into a single <code>jcr:xmltext</code> node.</p>
</div>
<!-- class="sect3" -->
<div id="ADXDB5642" class="sect3"><!-- infolevel="all" infotype="General" --><a id="sthref1793"></a>
<h4 class="sect3">Node Type mix:referenceable</h4>
<p>Node types <code>nt:file</code>, <code>nt:folder</code>, and <code>nt:resource</code> are subtypes of mix-in node type <code>mix:referenceable</code>. Consequently, all <code>nt:file</code>, <code>nt:folder</code>, and <code>nt:resource</code> nodes can be referenced by UUID. You cannot add <code>mix:referenceable</code> to nodes of any type.</p>
</div>
<!-- class="sect3" -->
<div id="ADXDB5643" class="sect3"><!-- infolevel="all" infotype="General" --><a id="sthref1794"></a>
<h4 class="sect3">Full-Text Indexing</h4>
<p>You can create a full-text index on file content using PL/SQL package <code>DBMS_XDBT</code>. This lets queries apply function <code>jcr:contains</code> to property <code>jcr:data</code> of a <code>jcr:content</code> node. Full-text indexes on other properties are not supported.</p>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="CHDIIJDA"></a>
<div id="ADXDB5644" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Using XML Schemas with JCR<a id="sthref1795"></a><a id="sthref1796"></a></h2>
<p>Oracle XML DB Content Connector can create JCR node types from XML schemas.</p>
<p>This section has the following topics:</p>
<ul>
<li>
<p><a href="#CHDDCBFF">Why Register XML Schemas for Use with JCR?</a></p>
</li>
<li>
<p><a href="#CHDBIHDB">How to Register an XML Schema with JCR</a></p>
</li>
<li>
<p><a href="#CHDDIEHH">How JCR Node Types are Generated from XML Schemas</a></p>
</li>
</ul>
<a id="CHDDCBFF"></a>
<div id="ADXDB5645" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Why Register XML Schemas for Use with JCR?<a id="sthref1797"></a><a id="sthref1798"></a></h3>
<p>XML data can be stored in Oracle XML&nbsp;DB Repository as either file content or user-defined metadata. In either case, the XML data can be based on an XML schema. XML schema-based data is validated against an XML schema that has been registered with Oracle XML&nbsp;DB.</p>
<p>By default, the JCR nodes corresponding to XML document content and user-defined metadata are of node type <code>nt:unstructured</code>, a generic node type defined by JCR, even if the XML data is XML schema-based. Oracle XML&nbsp;DB Repository still validates any changes made through the Oracle XML DB Content Connector against the XML schema, but it is not possible to access or specify typing metadata through JCR.</p>
<p>However, Oracle XML DB Content Connector lets XML schemas be registered for use in JCR. This causes the content connector to generate JCR node types for the XML-schema simple types, complex types, and global element declarations in the registered XML schema.</p>
<p>In exposing XML data as JCR nodes, the content connector determines whether the XML data conforms to an XML schema registered for JCR use, based on the value of XML attribute <code>xsi:schemaLocation</code> or <code>xsi:noNamespaceSchemaLocation</code> of its root element. If the XML data conforms to a JCR registered XML schema, then the XML data is exposed as JCR nodes of the node types generated from the XML schema, instead of using the generic node type <code>nt:unstructured</code>.</p>
<p>You can also use the generated JCR node types to create or update XML document content and user-defined metadata.</p>
<p><a href="#BABJBCEI">Example 31-5</a> shows an XML document with XML schema-based content.</p>
<div id="ADXDB5646" class="example">
<p class="titleinexample"><a id="BABJBCEI"></a>Example 31-5 XML Document with XML Schema-Based Content</p>
<pre>
&lt;Address country="US"
   xmlns:xsi=
     "http://www.w3.org/2001/XMLSchema-instance"
   xsi:noNamespaceSchemaLocation=
     "http://www.example.com/Address"&gt;
  &lt;name&gt;Alice Smith&lt;/name&gt;
  &lt;street&gt;123 Maple Street&lt;/street&gt;
  &lt;city&gt;Mill Valley&lt;/city&gt;
  &lt;state&gt;CA&lt;/state&gt;
  &lt;zip&gt;90952&lt;/zip&gt;
&lt;/Address&gt;
</pre></div>
<!-- class="example" -->
<p>The content of <a href="#BABJBCEI">Example 31-5</a> is valid with respect to the XML schema shown in <a href="#BABGFHFF">Example 31-6</a>.</p>
<div id="ADXDB5647" class="example">
<p class="titleinexample"><a id="BABGFHFF"></a>Example 31-6 XML Schema</p>
<pre>
&lt;xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema"&gt;
  &lt;xsd:complexType name="USAddress"&gt;
    &lt;xsd:sequence&gt;
      &lt;xsd:element name="name"   type="xsd:string"/&gt;
      &lt;xsd:element name="street" type="xsd:string"/&gt;
      &lt;xsd:element name="city"   type="xsd:string"/&gt;
      &lt;xsd:element name="state"  type="xsd:string"/&gt;
      &lt;xsd:element name="zip"    type="xsd:long"/&gt;
    &lt;/xsd:sequence&gt;
    &lt;xsd:attribute name="country" type="xsd:NMTOKEN"
                   fixed="US"/&gt;
  &lt;/xsd:complexType&gt;
&lt;/xsd:schema&gt;
</pre></div>
<!-- class="example" -->
<p>Initially, this XML schema is not registered for JCR use. The JCR nodes and properties representing the XML content are shown in <a href="#BABFEBBJ">Example 31-7</a>.</p>
<div id="ADXDB5648" class="example">
<p class="titleinexample"><a id="BABFEBBJ"></a>Example 31-7 JCR Representation of XML Content Not Registered for JCR Use</p>
<pre>
 ojcr:xmlContent <span class="italic">(nt:unstructured)</span>
   Address <span class="italic">(nt:unstructured)</span>
     country="US" (String)
     name <span class="italic">(nt:unstructured)</span>
       jcr:xmltext<span class="italic">(ojcr:xmltext)</span>
         jcr:xmlcharacters="Alice Smith" <span class="italic">(String)</span>
     street <span class="italic">(nt:unstructured)</span>
       jcr:xmltext<span class="italic">(ojcr:xmltext)</span>
         jcr:xmlcharacters="123 Maple Street" <span class="italic">(String)</span>
     city <span class="italic">(nt:unstructured)</span>
       jcr:xmltext<span class="italic">(ojcr:xmltext)</span>
         jcr:xmlcharacters="Mill Valley" <span class="italic">(String)</span>
     state <span class="italic">(nt:unstructured)</span>
       jcr:xmltext<span class="italic">(ojcr:xmltext)</span>
         jcr:xmlcharacters="CA" <span class="italic">(String)</span>
     zip <span class="italic">(nt:unstructured)</span>
       jcr:xmltext <span class="italic">(ojcr:xmltext)</span>
         jcr:xmlcharacters="90952" <span class="italic">(String)</span>
</pre></div>
<!-- class="example" -->
<p>The XML schema is then registered for JCR use. The JCR nodes and properties are shown in <a href="#BABBCDHA">Example 31-8</a>.</p>
<div id="ADXDB5649" class="example">
<p class="titleinexample"><a id="BABBCDHA"></a>Example 31-8 JCR Representation of XML Content Registered for JCR Use</p>
<pre>
ojcr:xmlContent <span class="italic">(nt:unstructured)</span>
  Address <span class="italic">(USAddress)</span>
    country="US" <span class="italic">(String)</span>
    name <span class="italic">(xsd:string)</span>
      jcr:xmltext<span class="italic">(ojcr:xmltext)</span>
        jcr:xmlcharacters="Alice Smith" <span class="italic">(String)</span>
    street <span class="italic">(xsd:string)</span>
      jcr:xmltext<span class="italic">(ojcr:xmltext)</span>
        jcr:xmlcharacters="123 Maple Street" <span class="italic">(String)</span>
    city <span class="italic">(xsd:string)</span>
      jcr:xmltext<span class="italic">(ojcr:xmltext)</span>
        jcr:xmlcharacters="Mill Valley" <span class="italic">(String)</span>
    state <span class="italic">(xsd:string)</span>
      jcr:xmltext<span class="italic">(ojcr:xmltext)</span>
        jcr:xmlcharacters="CA" <span class="italic">(String)</span>
    zip <span class="italic">(xsd:long)</span>
      jcr:xmltext <span class="italic">(ojcr:xmltext)</span>
        jcr:xmlcharacters="90952" <span class="italic">(Long)</span>
</pre></div>
<!-- class="example" -->
<p>Node <code>Address</code> now has node type <code>USAddress</code>. Similarly, nodes <code>name</code>, <code>street</code>, <code>city</code>, and <code>state</code> have node type <code>xsd:string</code>. Node <code>zip</code> has node type <code>xsd:long</code>, and the <code>jcr:xmlcharacters</code> property of its <code>jcr:xmltext</code> child is a <code>LONG</code> property type.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="xdb_repos_meta.htm#CIAIGHHG">Chapter 29, "User-Defined Repository Metadata"</a></div>
</div>
<!-- class="sect2" -->
<a id="CHDBIHDB"></a>
<div id="ADXDB5650" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">How to Register an XML Schema with JCR</h3>
<p>Before you register an XML schema for use with JCR, you must register it for use with Oracle XML&nbsp;DB, using PL/SQL procedure <code>DBMS_XMLSCHEMA</code>.<code>registerSchema</code>. For example, to register an XML schema with location <code>http://www.example.com/Address</code>, first register it for use with Oracle XML&nbsp;DB, as shown in <a href="#BABEBHGE">Example 31-9</a>. Then, register it for use with JCR, using Oracle XML DB Content Connector Java APIs, as shown in <a href="#BABEHAEI">Example 31-10</a>.</p>
<div id="ADXDB5651" class="example">
<p class="titleinexample"><a id="BABEBHGE"></a>Example 31-9 Registering an XML Schema for Use with Oracle XML&nbsp;DB</p>
<pre>
BEGIN
  DBMS_XMLSCHEMA.registerSchema(
    SCHEMAURL       =&gt; 'http://www.example.com/Address',
    SCHEMADOC       =&gt; <span class="italic">bfileContainingSchema</span>,
    LOCAL           =&gt; FALSE,
    ENABLEHIERARCHY =&gt; DBMS_XMLSCHEMA.ENABLE_HIERARCHY_RESMETADATA);
END;
/
</pre></div>
<!-- class="example" -->
<div class="infobox-note">
<p class="notep1">Note:</p>
You can use only globally registered XML schemas (<code>local =&gt; false</code>) with JCR.</div>
<div id="ADXDB5652" class="example">
<p class="titleinexample"><a id="BABEHAEI"></a>Example 31-10 Registering an XML Schema for Use with JCR</p>
<pre>
 
import oracle.jcr.nodetype.OracleNodeTypeManager;...
OracleNodeTypeManager ntm = (OracleNodeTypeManager)
  session.getWorkspace().getNodeTypeManager();
 
ntm.registerXMLSchema("http://www.example.com/Address", null);
</pre></div>
<!-- class="example" -->
<p>The list of XML schemas registered for use with JCR is stored in the <code>OracleRepository</code> object. You can save this registration data by storing the <code>OracleRepository</code> object in a JNDI directory, as recommended by the JCR specification.</p>
<p>JCR requires that each node type have a unique name. By default, Oracle XML DB Content Connector generates JCR nodes types that correspond to a registered XML schema in the target namespace of the XML schema. If you wish to register two XML schemas with the same namespace, and the XML schemas declare types with the same names, you can avoid a name clash by overriding the namespace into which the JCR node types are generated. Refer to the Javadoc of method <code>registerXMLSchema()</code> for details.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="xdb05sto.htm#i1031977">"Managing XML Schemas with DBMS_XMLSCHEMA"</a> for information on registering XML schemas with Oracle XML&nbsp;DB</p>
</li>
<li>
<p><a class="olink JAXML" href="../e10769/toc.htm"><span class="italic">Oracle Database XML Java API Reference</span></a>, package <code>oracle.jcr</code>, for information on Java method <code>registerXMLSchema()</code></p>
</li>
</ul>
</div>
</div>
<!-- class="sect2" -->
<a id="CHDDIEHH"></a>
<div id="ADXDB5653" class="sect2">
<h3 class="sect2">How JCR Node <a id="sthref1799"></a><a id="sthref1800"></a>Types are Generated from XML Schemas</h3>
<p>This section describes how Oracle XML DB Content Connector generates JCR node types from XML schemas that are registered for JCR use.</p>
<p>The type models of JCR and XML Schema are similar but not equivalent. Some aspects of XML Schema have no representation in JCR. For example, some constraining facets of an XML-schema simple type are not discoverable through JCR. They are enforced by Oracle XML DB Content Connector nonetheless.</p>
<p>More generally, the JCR node types generated from an XML schema do not augment, detract, or alter the XML schema validation performed when XML data that conforms to that XML schema is created or updated, whether through JCR or other interfaces.</p>
<div id="ADXDB5654" class="sect3"><a id="sthref1801"></a>
<h4 class="sect3">Built-In Simple Types</h4>
<p>A JCR node type is provided for each XML Schema built-in type. For example, the JCR node type <code>xsd:decimal</code> corresponds to the built-in type <code>xsd:decimal</code>.</p>
<p>The inheritance hierarchy of the JCR node types follows that of the built-in types. For example, <code>xsd:integer</code> is a subtype of <code>xsd:decimal</code>.</p>
<p>Each XML Schema built-in type maps to a JCR property value type, which is used to represent values of that type in JCR.</p>
<div id="ADXDB5655" class="tblformal">
<p class="titleintable"><a id="sthref1802"></a><a id="CHDFEEDH"></a>Table 31-2 &nbsp;XML Schema Built-In Types Mapped to JCR Property Value Types</p>
<table class="cellalignment1026" title="&nbsp;XML Schema Built-In Types Mapped to JCR Property Value Types" summary="Rows are types. First column are XML Schema Built-In Types and second column are corresponding JCR Property Types" dir="ltr">
<thead>
<tr class="cellalignment1020">
<th class="cellalignment1027" id="r1c1-t9">XML Schema Built-in Type</th>
<th class="cellalignment1027" id="r1c2-t9">JCR Property Value Type</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1020">
<td class="cellalignment1028" id="r2c1-t9" headers="r1c1-t9">
<p><code>xsd:anySimpleType</code></p>
</td>
<td class="cellalignment1028" headers="r2c1-t9 r1c2-t9">
<p><code>STRING</code></p>
</td>
</tr>
<tr class="cellalignment1020">
<td class="cellalignment1028" id="r3c1-t9" headers="r1c1-t9">
<p><code>xsd:anyURI</code></p>
</td>
<td class="cellalignment1028" headers="r3c1-t9 r1c2-t9">
<p><code>STRING</code></p>
</td>
</tr>
<tr class="cellalignment1020">
<td class="cellalignment1028" id="r4c1-t9" headers="r1c1-t9">
<p><code>xsd:base64Binary</code></p>
</td>
<td class="cellalignment1028" headers="r4c1-t9 r1c2-t9">
<p><code>BINARY</code></p>
</td>
</tr>
<tr class="cellalignment1020">
<td class="cellalignment1028" id="r5c1-t9" headers="r1c1-t9">
<p><code>xsd:boolean</code></p>
</td>
<td class="cellalignment1028" headers="r5c1-t9 r1c2-t9">
<p><code>BOOLEAN</code></p>
</td>
</tr>
<tr class="cellalignment1020">
<td class="cellalignment1028" id="r6c1-t9" headers="r1c1-t9">
<p><code>xsd:byte</code></p>
</td>
<td class="cellalignment1028" headers="r6c1-t9 r1c2-t9">
<p><code>LONG</code></p>
</td>
</tr>
<tr class="cellalignment1020">
<td class="cellalignment1028" id="r7c1-t9" headers="r1c1-t9">
<p><code>xsd:date</code></p>
</td>
<td class="cellalignment1028" headers="r7c1-t9 r1c2-t9">
<p><code>DATE</code> (<a href="#CHDFIBBF">1</a>)</p>
</td>
</tr>
<tr class="cellalignment1020">
<td class="cellalignment1028" id="r8c1-t9" headers="r1c1-t9">
<p><code>xsd:dateTime</code></p>
</td>
<td class="cellalignment1028" headers="r8c1-t9 r1c2-t9">
<p><code>DATE</code> (<a href="#CHDFIBBF">1</a>)</p>
</td>
</tr>
<tr class="cellalignment1020">
<td class="cellalignment1028" id="r9c1-t9" headers="r1c1-t9">
<p><code>xsd:decimal</code></p>
</td>
<td class="cellalignment1028" headers="r9c1-t9 r1c2-t9">
<p><code>DOUBLE</code> (<a href="#CHDFJFDH">2</a>)</p>
</td>
</tr>
<tr class="cellalignment1020">
<td class="cellalignment1028" id="r10c1-t9" headers="r1c1-t9">
<p><code>xsd:double</code></p>
</td>
<td class="cellalignment1028" headers="r10c1-t9 r1c2-t9">
<p><code>DOUBLE</code></p>
</td>
</tr>
<tr class="cellalignment1020">
<td class="cellalignment1028" id="r11c1-t9" headers="r1c1-t9">
<p><code>xsd:duration</code></p>
</td>
<td class="cellalignment1028" headers="r11c1-t9 r1c2-t9">
<p><code>STRING</code></p>
</td>
</tr>
<tr class="cellalignment1020">
<td class="cellalignment1028" id="r12c1-t9" headers="r1c1-t9">
<p><code>xsd:ENTITIES</code></p>
</td>
<td class="cellalignment1028" headers="r12c1-t9 r1c2-t9">
<p><code>STRING</code> (<a href="#CHDGFFFG">3</a>)</p>
</td>
</tr>
<tr class="cellalignment1020">
<td class="cellalignment1028" id="r13c1-t9" headers="r1c1-t9">
<p><code>xsd:ENTITY</code></p>
</td>
<td class="cellalignment1028" headers="r13c1-t9 r1c2-t9">
<p><code>STRING</code></p>
</td>
</tr>
<tr class="cellalignment1020">
<td class="cellalignment1028" id="r14c1-t9" headers="r1c1-t9">
<p><code>xsd:float</code></p>
</td>
<td class="cellalignment1028" headers="r14c1-t9 r1c2-t9">
<p><code>DOUBLE</code></p>
</td>
</tr>
<tr class="cellalignment1020">
<td class="cellalignment1028" id="r15c1-t9" headers="r1c1-t9">
<p><code>xsd:gDay</code></p>
</td>
<td class="cellalignment1028" headers="r15c1-t9 r1c2-t9">
<p><code>STRING</code></p>
</td>
</tr>
<tr class="cellalignment1020">
<td class="cellalignment1028" id="r16c1-t9" headers="r1c1-t9">
<p><code>xsd:gMonth</code></p>
</td>
<td class="cellalignment1028" headers="r16c1-t9 r1c2-t9">
<p><code>STRING</code></p>
</td>
</tr>
<tr class="cellalignment1020">
<td class="cellalignment1028" id="r17c1-t9" headers="r1c1-t9">
<p><code>xsd:gMonthDay</code></p>
</td>
<td class="cellalignment1028" headers="r17c1-t9 r1c2-t9">
<p><code>STRING</code></p>
</td>
</tr>
<tr class="cellalignment1020">
<td class="cellalignment1028" id="r18c1-t9" headers="r1c1-t9">
<p><code>xsd:gYear</code></p>
</td>
<td class="cellalignment1028" headers="r18c1-t9 r1c2-t9">
<p><code>STRING</code></p>
</td>
</tr>
<tr class="cellalignment1020">
<td class="cellalignment1028" id="r19c1-t9" headers="r1c1-t9">
<p><code>xsd:gYearMonth</code></p>
</td>
<td class="cellalignment1028" headers="r19c1-t9 r1c2-t9">
<p><code>STRING</code></p>
</td>
</tr>
<tr class="cellalignment1020">
<td class="cellalignment1028" id="r20c1-t9" headers="r1c1-t9">
<p><code>xsd:hexBinary</code></p>
</td>
<td class="cellalignment1028" headers="r20c1-t9 r1c2-t9">
<p><code>BINARY</code></p>
</td>
</tr>
<tr class="cellalignment1020">
<td class="cellalignment1028" id="r21c1-t9" headers="r1c1-t9">
<p><code>xsd:ID</code></p>
</td>
<td class="cellalignment1028" headers="r21c1-t9 r1c2-t9">
<p><code>STRING</code></p>
</td>
</tr>
<tr class="cellalignment1020">
<td class="cellalignment1028" id="r22c1-t9" headers="r1c1-t9">
<p><code>xsd:IDREF</code></p>
</td>
<td class="cellalignment1028" headers="r22c1-t9 r1c2-t9">
<p><code>STRING</code></p>
</td>
</tr>
<tr class="cellalignment1020">
<td class="cellalignment1028" id="r23c1-t9" headers="r1c1-t9">
<p><code>xsd:IDREFS</code></p>
</td>
<td class="cellalignment1028" headers="r23c1-t9 r1c2-t9">
<p><code>STRING</code> (<a href="#CHDGFFFG">3</a>)</p>
</td>
</tr>
<tr class="cellalignment1020">
<td class="cellalignment1028" id="r24c1-t9" headers="r1c1-t9">
<p><code>xsd:int</code></p>
</td>
<td class="cellalignment1028" headers="r24c1-t9 r1c2-t9">
<p><code>LONG</code></p>
</td>
</tr>
<tr class="cellalignment1020">
<td class="cellalignment1028" id="r25c1-t9" headers="r1c1-t9">
<p><code>xsd:integer</code></p>
</td>
<td class="cellalignment1028" headers="r25c1-t9 r1c2-t9">
<p><code>LONG</code> (<a href="#CHDFJFDH">2</a>)</p>
</td>
</tr>
<tr class="cellalignment1020">
<td class="cellalignment1028" id="r26c1-t9" headers="r1c1-t9">
<p><code>xsd:language</code></p>
</td>
<td class="cellalignment1028" headers="r26c1-t9 r1c2-t9">
<p><code>STRING</code></p>
</td>
</tr>
<tr class="cellalignment1020">
<td class="cellalignment1028" id="r27c1-t9" headers="r1c1-t9">
<p><code>xsd:long</code></p>
</td>
<td class="cellalignment1028" headers="r27c1-t9 r1c2-t9">
<p><code>LONG</code></p>
</td>
</tr>
<tr class="cellalignment1020">
<td class="cellalignment1028" id="r28c1-t9" headers="r1c1-t9">
<p><code>xsd:Name</code></p>
</td>
<td class="cellalignment1028" headers="r28c1-t9 r1c2-t9">
<p><code>STRING</code></p>
</td>
</tr>
<tr class="cellalignment1020">
<td class="cellalignment1028" id="r29c1-t9" headers="r1c1-t9">
<p><code>xsd:NCName</code></p>
</td>
<td class="cellalignment1028" headers="r29c1-t9 r1c2-t9">
<p><code>STRING</code></p>
</td>
</tr>
<tr class="cellalignment1020">
<td class="cellalignment1028" id="r30c1-t9" headers="r1c1-t9">
<p><code>xsd:negativeInteger</code></p>
</td>
<td class="cellalignment1028" headers="r30c1-t9 r1c2-t9">
<p><code>LONG</code></p>
</td>
</tr>
<tr class="cellalignment1020">
<td class="cellalignment1028" id="r31c1-t9" headers="r1c1-t9">
<p><code>xsd:NMTOKEN</code></p>
</td>
<td class="cellalignment1028" headers="r31c1-t9 r1c2-t9">
<p><code>STRING</code></p>
</td>
</tr>
<tr class="cellalignment1020">
<td class="cellalignment1028" id="r32c1-t9" headers="r1c1-t9">
<p><code>xsd:NMTOKENS</code></p>
</td>
<td class="cellalignment1028" headers="r32c1-t9 r1c2-t9">
<p><code>STRING</code> (<a href="#CHDGFFFG">3</a>)</p>
</td>
</tr>
<tr class="cellalignment1020">
<td class="cellalignment1028" id="r33c1-t9" headers="r1c1-t9">
<p><code>xsd:nonNegativeInteger</code></p>
</td>
<td class="cellalignment1028" headers="r33c1-t9 r1c2-t9">
<p><code>LONG</code></p>
</td>
</tr>
<tr class="cellalignment1020">
<td class="cellalignment1028" id="r34c1-t9" headers="r1c1-t9">
<p><code>xsd:nonPositiveInteger</code></p>
</td>
<td class="cellalignment1028" headers="r34c1-t9 r1c2-t9">
<p><code>LONG</code></p>
</td>
</tr>
<tr class="cellalignment1020">
<td class="cellalignment1028" id="r35c1-t9" headers="r1c1-t9">
<p><code>xsd:normalizedString</code></p>
</td>
<td class="cellalignment1028" headers="r35c1-t9 r1c2-t9">
<p><code>STRING</code></p>
</td>
</tr>
<tr class="cellalignment1020">
<td class="cellalignment1028" id="r36c1-t9" headers="r1c1-t9">
<p><code>xsd:NOTATION</code></p>
</td>
<td class="cellalignment1028" headers="r36c1-t9 r1c2-t9">
<p><code>STRING</code></p>
</td>
</tr>
<tr class="cellalignment1020">
<td class="cellalignment1028" id="r37c1-t9" headers="r1c1-t9">
<p><code>xsd:positiveInteger</code></p>
</td>
<td class="cellalignment1028" headers="r37c1-t9 r1c2-t9">
<p><code>LONG</code></p>
</td>
</tr>
<tr class="cellalignment1020">
<td class="cellalignment1028" id="r38c1-t9" headers="r1c1-t9">
<p><code>xsd:QName</code></p>
</td>
<td class="cellalignment1028" headers="r38c1-t9 r1c2-t9">
<p><code>STRING</code></p>
</td>
</tr>
<tr class="cellalignment1020">
<td class="cellalignment1028" id="r39c1-t9" headers="r1c1-t9">
<p><code>xsd:short</code></p>
</td>
<td class="cellalignment1028" headers="r39c1-t9 r1c2-t9">
<p><code>LONG</code></p>
</td>
</tr>
<tr class="cellalignment1020">
<td class="cellalignment1028" id="r40c1-t9" headers="r1c1-t9">
<p><code>xsd:string</code></p>
</td>
<td class="cellalignment1028" headers="r40c1-t9 r1c2-t9">
<p><code>STRING</code></p>
</td>
</tr>
<tr class="cellalignment1020">
<td class="cellalignment1028" id="r41c1-t9" headers="r1c1-t9">
<p><code>xsd:time</code></p>
</td>
<td class="cellalignment1028" headers="r41c1-t9 r1c2-t9">
<p><code>DATE</code> (<a href="#CHDFIBBF">1</a>)</p>
</td>
</tr>
<tr class="cellalignment1020">
<td class="cellalignment1028" id="r42c1-t9" headers="r1c1-t9">
<p><code>xsd:token</code></p>
</td>
<td class="cellalignment1028" headers="r42c1-t9 r1c2-t9">
<p><code>STRING</code></p>
</td>
</tr>
<tr class="cellalignment1020">
<td class="cellalignment1028" id="r43c1-t9" headers="r1c1-t9">
<p><code>xsd:unsignedByte</code></p>
</td>
<td class="cellalignment1028" headers="r43c1-t9 r1c2-t9">
<p><code>LONG</code></p>
</td>
</tr>
<tr class="cellalignment1020">
<td class="cellalignment1028" id="r44c1-t9" headers="r1c1-t9">
<p><code>xsd:unsignedInt</code></p>
</td>
<td class="cellalignment1028" headers="r44c1-t9 r1c2-t9">
<p><code>LONG</code></p>
</td>
</tr>
<tr class="cellalignment1020">
<td class="cellalignment1028" id="r45c1-t9" headers="r1c1-t9">
<p><code>xsd:unsignedLong</code></p>
</td>
<td class="cellalignment1028" headers="r45c1-t9 r1c2-t9">
<p><code>LONG</code></p>
</td>
</tr>
<tr class="cellalignment1020">
<td class="cellalignment1028" id="r46c1-t9" headers="r1c1-t9">
<p><code>xsd:unsignedShort</code></p>
</td>
<td class="cellalignment1028" headers="r46c1-t9 r1c2-t9">
<p><code>LONG</code></p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<p>Notes for <a href="#CHDFEEDH">Table 31-2</a>:</p>
<ol>
<li id="CHDFIBBF">
<p>The JCR <code>DATE</code> property type is accessed using <code>java.util.Calendar</code> objects. Since <code>Calendar</code> requires all fields to be set, a mask of <code>1970-01-01T00:00:00.000+00:00</code> is used to supply default values for missing fields when <code>Property.getDate()</code> or <code>Value.getDate()</code> is called. This includes omitted hour/minute/second values (for <code>xsd:date</code>), year/month/day values (for <code>xsd:time</code>), or time-zone values (for <code>xsd:date</code>, <code>xsd:time</code>, and <code>xsd:dateTime</code>). Calling <code>Property.getString()</code> or <code>Value.getString()</code> returns the unparsed string representation. Similarly, <code>Property.setValue(String)</code> or <code>Property.setValue(valueFactory.createValue(String))</code> may be used to set <code>DATE</code> properties without applying the mask.</p>
</li>
<li id="CHDFJFDH">
<p>The value space of <code>xsd:decimal</code> and <code>xsd:integer</code> exceeds that of the corresponding JCR types, <code>DOUBLE</code> and <code>LONG</code> (accessed as Java <code>double</code> and <code>long</code> values). Consequently, some <code>xsd:decimal</code> and <code>xsd:integer</code> values can only be accessed in JCR as strings. For example, <code>bigIntegerProperty.getLong()</code> throws a <code>javax.jcr.ValueFormatException</code>, but <code>bigIntegerProperty.getString()</code> returns the unparsed string representation. Similarly, <code>Property.setValue(String)</code> or <code>Property.setValue(valueFactory.createValue(String))</code> may be used to set <code>DOUBLE</code> or <code>LONG</code> properties to values outside the JCR value space.</p>
</li>
<li id="CHDGFFFG">
<p><code>xsd:ENTITIES</code>, <code>xsd:IDREFS</code>, and <code>xsd:NMTOKENS</code> are represented in JCR as multi-valued <code>STRING</code> properties.</p>
</li>
</ol>
</div>
<!-- class="sect3" -->
<div id="ADXDB5656" class="sect3"><a id="sthref1803"></a>
<h4 class="sect3">XML Schema-Defined Simple Types</h4>
<p>A JCR node type is created for each simple type defined in an XML schema. The inheritance hierarchy of the JCR node types follows that of the XML schema types.</p>
<p>A derived-by-list simple type is represented by a multi-valued JCR property definition.</p>
<p>A derived-by-union simple type is represented by a JCR property definition with property type <code>UNDEFINED</code>.</p>
<p>The JCR node type corresponding to an anonymous simple type has a synthetic name <code>anonymousNodeType#</code><code><span class="codeinlineitalic">sequenceNumber</span></code>. Your application should not rely on the synthesized name. It is not guaranteed to be the same across sessions, and it may change when an XML schema is registered or deregistered for JCR use or the definition of a registered XML schema is changed.</p>
</div>
<!-- class="sect3" -->
<div id="ADXDB5657" class="sect3"><a id="sthref1804"></a>
<h4 class="sect3">Complex Types</h4>
<p>A JCR node type is created for each complex type defined in an XML schema. The inheritance hierarchy of the JCR node types follows that of the XML schema types.</p>
<p>For a JCR node type corresponding to an XML schema complex type:</p>
<ul>
<li>
<p>A property definition is created for each attribute declaration of the complex type. Attribute declarations or attribute groups referenced by name in a complex type are treated as though they were defined in line.</p>
</li>
<li>
<p>A residual property definition is created if the complex type has an attribute wildcard.</p>
</li>
<li>
<p>A child node definition is created for each uniquely-named element declaration in the complex type's content model. Element declarations or module groups referenced by name are treated as though they were defined in line. If an element declaration is the head of a substitution group, a child node definition is also created for each element declaration within the substitution group.</p>
</li>
<li>
<p>A residual child node definition is created if the complex type has an element wildcard.</p>
</li>
<li>
<p>A <code>jcr:xmltext</code> child node definition is created if the complex type permits XML text, either because <code>xsd:mixed = "true"</code> or it is an <code>xsd:simpleContent</code> definition.</p>
</li>
</ul>
<p>The JCR node type for a complex type supports child node ordering.</p>
<p>It is not possible to determine whether a type was derived by extension or restriction using JCR.</p>
<p>The JCR node type corresponding to an anonymous complex type has a synthetic name <code>anonymousNodeType#</code><code><span class="codeinlineitalic">sequenceNumber</span></code>. Your application should not rely on the synthesized name. It is not guaranteed to be the same across sessions, and it may change when an XML schema is registered or deregistered for JCR use or the definition of a registered XML schema is changed.</p>
</div>
<!-- class="sect3" -->
<div id="ADXDB5658" class="sect3"><a id="sthref1805"></a>
<h4 class="sect3">Global Element Declarations<a id="sthref1806"></a></h4>
<p>A JCR node type is created for each global element declaration in an XML schema. The local name of the generated node type is formed by prepending an underscore (<code>_</code>) to the local name of the global element declaration. For example, in a namespace-qualified purchase order XML schema, a node type named <code>po:_purchaseOrder</code> is created for global element named <code>po:purchaseOrder</code>.</p>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" --></div>
<!-- class="sect1" --></div>
<!-- class="chapter" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment1019">
<tr>
<td class="cellalignment1028">
<table class="cellalignment1024">
<tr>
<td class="cellalignment1023"><a href="xdb_repos_events.htm"><img width="24" height="24" src="../../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment1023"><a href="xdb23jv1.htm"><img width="24" height="24" src="../../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;2002, 2014,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment1030">
<table class="cellalignment1022">
<tr>
<td class="cellalignment1023"><a href="../../index.htm"><img width="24" height="24" src="../../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment1023"><a href="../../nav/portal_booklist.htm"><img width="24" height="24" src="../../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment1023"><a href="toc.htm"><img width="24" height="24" src="../../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment1023"><a href="index.htm"><img width="24" height="24" src="../../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment1023"><a href="../../nav/mindx.htm"><img width="24" height="24" src="../../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment1023"><a href="../../dcommon/html/feedback.htm"><img width="24" height="24" src="../../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>
</body>
</html>
