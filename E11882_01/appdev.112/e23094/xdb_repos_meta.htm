<!DOCTYPE html>
<html lang="en">
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1">
<meta charset="utf-8">
<title>User-Defined Repository Metadata</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Version 5.1.2 Build 748" />
<meta name="description" content="This manual describes Oracle XML&nbsp;DB. It includes guidelines and examples for storing, generating, accessing, searching, validating, transforming, evolving, and indexing XML data in Oracle Database." />
<meta name="dcterms.created" content="2014-02-20T9:56:17Z" />
<meta name="robots" content="all" />
<meta name="dcterms.title" content="XML DB Developer's Guide" />
<meta name="dcterms.identifier" content="E23094-04" />
<meta name="dcterms.isVersionOf" content="ADXDB" />
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;2002, 2014,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved." />
<link rel="Start" href="../../index.htm" title="Home" type="text/html" />
<link rel="Copyright" href="../../dcommon/html/cpyr.htm" title="Copyright" type="text/html" />

<script type="application/javascript"  src="../../dcommon/js/headfoot.js"></script>
<script type="application/javascript"  src="../../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html" />
<link rel="Index" href="index.htm" title="Index" type="text/html" />
<link rel="Prev" href="xdb22pro.htm" title="Previous" type="text/html" />
<link rel="Next" href="xdb_repos_events.htm" title="Next" type="text/html" />
<link rel="alternate" href="../e23094.pdf" title="PDF version" type="application/pdf" />
<link rel="schema.dcterms" href="http://purl.org/dc/terms/" />
<link rel="stylesheet" href="../../dcommon/css/fusiondoc.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/header.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/footer.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/fonts.css">
<link rel="stylesheet" href="../../dcommon/css/foundation.css">
<link rel="stylesheet" href="../../dcommon/css/codemirror.css">
<link rel="stylesheet" type="text/css" title="Default" href="../../nav/css/html5.css">
<link rel="stylesheet" href="../../dcommon/css/respond-480-tablet.css">
<link rel="stylesheet" href="../../dcommon/css/respond-768-laptop.css">
<link rel="stylesheet" href="../../dcommon/css/respond-1140-deskop.css">
<script type="application/javascript" src="../../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">41/54</span> <!-- End Header -->
<div id="ADXDB2560" class="chapter"><a id="CIAIGHHG"></a>
<h1 class="chapter"><span class="secnum">29</span> User-Defined Repository Metadata</h1>
<p>This chapter describes how to create and use XML metadata, which you associate with XML data and store in Oracle XML&nbsp;DB Repository.</p>
<p>This chapter contains these topics:</p>
<ul>
<li>
<p><a href="#CIAJBFDH">Overview of Metadata and XML</a></p>
</li>
<li>
<p><a href="#CIABGAHD">XML Schemas to Define Resource Metadata</a></p>
</li>
<li>
<p><a href="#CIAIBCFI">Adding, Updating, and Deleting Resource Metadata</a></p>
</li>
<li>
<p><a href="#CIAHFIDA">Querying XML Schema-Based Resource Metadata</a></p>
</li>
<li>
<p><a href="#CIAEHGFA">XML Image Metadata from Binary Image Metadata</a></p>
</li>
<li>
<p><a href="#CIAJHFJG">Adding Non-Schema-Based Resource Metadata</a></p>
</li>
<li>
<p><a href="#CIAIGEJF">PL/SQL Procedures Affecting Resource Metadata</a></p>
</li>
</ul>
<a id="CIAJBFDH"></a>
<div id="ADXDB5569" class="sect1">
<h2 class="sect1">Overview of Metadata and XML</h2>
<p>Data that you use is often associated with additional information that is not part of the content. To process it in different ways, you can use such <span class="glossaryterm"><a id="sthref1693"></a>metadata</span> to group or classify data. For example, you might have a collection of digital photographs, and you might associate metadata with each picture, such as information about the photographic characteristics (color composition, focal length) or context (location, kind of subject: landscape, people).</p>
<p>An Oracle XML&nbsp;DB repository <span class="glossaryterm"><a id="sthref1694"></a>resource</span> is an XML document that contains both metadata and data. The data is the contents of element <code>Contents</code>. All other elements in the resource contain metadata. The data of a resource can be XML, but it need not be.</p>
<p>You can associate resources in the Oracle XML&nbsp;DB repository with metadata that you define. In addition to such <span class="italic">user-defined metadata</span>, each repository resource also has associated metadata that Oracle XML&nbsp;DB creates automatically and uses (transparently) to manage the resource. Such <span class="italic">system-defined metadata</span> includes properties such as the owner and creation date of each resource.</p>
<p>Except for system-defined metadata, you decide which resource information should be treated as data and which should be treated as metadata. For a photo resource, supplemental information about the photo is normally not considered to be part of the photo data, which is a binary image. For text, however, you sometimes have a choice of whether to include particular information in the resource contents (data) or keep it separate and associate it with the contents as metadata&thinsp;&mdash;&thinsp;that choice is often influenced by the applications that use or produce the data.</p>
<div id="ADXDB5570" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref1695"></a>
<h3 class="sect2">Kinds of Metadata &ndash; Uses of the Term</h3>
<p>In addition to resource metadata (system-defined and user-defined), the term "metadata" is sometimes used to refer to the following:</p>
<ul>
<li>
<p>An XML <span class="italic">schema</span> is metadata that describes a class of XML documents.</p>
</li>
<li>
<p>An XML <span class="italic">tag</span> (element or attribute name) is metadata that is used to label and organize the element content or attribute value.</p>
</li>
</ul>
<p>You can associate metadata with an XML document that is the content of a repository resource in any of these ways:</p>
<ul>
<li>
<p>You can add additional XML elements containing the metadata information to the resource <span class="italic">contents</span>. For example, you could wrap digital image data in an XML document that also includes elements describing the photo. In this case, the data and its metadata are associated by being in the contents of the same resource. It is up to applications to separate the two and relate them correctly.</p>
</li>
<li>
<p>You can add metadata information for a particular resource to the repository as the contents of a <span class="italic">separate resource</span>. In this case, it is up to applications to treat this resource as metadata and associate it with the data.</p>
</li>
<li>
<p>You can add metadata information for a resource as repository <span class="italic">resource metadata</span>. In this case, Oracle XML&nbsp;DB recognizes the metadata as such. Applications can <span class="italic">discover</span> this metadata by querying the repository for it. They need not be informed separately of its existence and its association with the data.</p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="xdb16fol.htm#i1044846">"Oracle XML&nbsp;DB Repository Resources"</a></div>
</div>
<!-- class="sect2" -->
<div id="ADXDB5571" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref1696"></a>
<h3 class="sect2">User-Defined Resource Metadata</h3>
<p>Of these different ways of considering metadata, this chapter is about only the last of those just listed: <span class="italic">user-defined resource metadata</span>. Such metadata is itself <span class="italic">represented as XML</span>: it is XML data that is associated with other XML data, describing it or providing supplementary, related information.</p>
<p>User-defined metadata for resources can be either XML schema-based or not:</p>
<ul>
<li>
<p>Resource metadata that is <span class="italic">schema-based</span> is stored in separate (out-of-line) tables. These are related to the resource table by the resource OID, which is stored in the hidden object column <code>RESID</code> of the metadata tables.</p>
</li>
<li>
<p>Resource metadata that is <span class="italic">not</span> schema-based is stored in a <code>CLOB</code> column in the resource table.</p>
</li>
</ul>
<p>You can take advantage of schema-based metadata, in particular, to perform efficient queries and DML operations on resources. In this chapter, you learn how to perform the following tasks involving schema-based resource metadata:</p>
<ul>
<li>
<p>Create and register an <span class="italic">XML schema</span> that defines the metadata for a particular kind of resource.</p>
</li>
<li>
<p><span class="italic">Add</span> metadata to a repository resource, and <span class="italic">update</span> (modify) such metadata.</p>
</li>
<li>
<p><span class="italic">Query</span> resource metadata to find associated content.</p>
</li>
<li>
<p><span class="italic">Delete</span> specific metadata associated with a resource and <span class="italic">purge</span> all metadata associated with a resource.</p>
</li>
</ul>
<p>In addition, you learn how to add non-schema-based metadata to a resource.</p>
<p>You can generally use user-defined resource metadata just as you would use resource data. In particular, versioning and access control management apply.</p>
<p>Typical uses of resource metadata include workflow applications, enforcing user rights management, tracking resource ownership, and controlling resource validity dates.</p>
</div>
<!-- class="sect2" -->
<div id="ADXDB5572" class="sect2"><a id="sthref1697"></a>
<h3 class="sect2">Scenario: Metadata for a Photo Collection</h3>
<p>To illustrate the use of schema-based resource metadata, this chapter uses metadata associated with photographic image files that are stored in repository resources. You can create any number of different kinds of metadata to be associated with the same resource. For image files, examples create metadata for information about both 1) the technical aspects of a photo and 2) the photo subject or the uses to which a photo might be put. These two kinds of associated metadata are used to query photo resources.</p>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="CIABGAHD"></a>
<div id="ADXDB5573" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">XML Schemas to Define Resource Metadata</h2>
<p>This section first defines the metadata to associate with each photo resource using XML Schema. An XML schema is created and registered for each kind (technique, category) of metadata.</p>
<p>The XML schema in <a href="#BABCEEAA">Example 29-1</a> defines metadata used to describe the technical aspects of a photo image file. It uses PL/SQL procedure <code>DBMS_XMLSCHEMA.registerSchema</code> to register the XML schema. To identify this schema as defining repository resource <span class="italic">metadata</span>, it uses <code><a id="sthref1698"></a><a id="sthref1699"></a>ENABLE_HIERARCHY_RESMETADATA</code> as the value for parameter <code>enableHierarchy</code>. Resource contents (data) are defined by using value <code>ENABLE_HIERARCHY_CONTENTS</code> (the default value), instead.</p>
<p>The properties defined in <a href="#BABCEEAA">Example 29-1</a> are the image height, width, color depth, title, and brief description.</p>
<div id="ADXDB5574" class="example">
<p class="titleinexample"><a id="BABCEEAA"></a>Example 29-1 Register an XML Schema for Technical Photo Information</p>
<pre>
BEGIN
  DBMS_XMLSCHEMA.registerSchema(
    SCHEMAURL       =&gt; '<span class="bold">imagetechnique.xsd</span>',
    SCHEMADOC       =&gt; '&lt;xsd:schema targetNamespace="inamespace"
                                    xmlns:xsd="http://www.w3.org/2001/XMLSchema"
                                    xmlns:xdb="http://xmlns.oracle.com/xdb"
                                    xmlns="inamespace"&gt;
                          &lt;xsd:element name="<span class="bold">ImgTechMetadata</span>"
                                       xdb:defaultTable="<span class="bold">IMGTECHMETADATATABLE</span>"&gt;
                            &lt;xsd:complexType&gt;
                              &lt;xsd:sequence&gt;
                                &lt;xsd:element name="<span class="bold">Height</span>"      type="xsd:float"/&gt;
                                &lt;xsd:element name="<span class="bold">Width</span>"       type="xsd:float"/&gt;
                                &lt;xsd:element name="<span class="bold">ColorDepth</span>"  type="xsd:integer"/&gt;
                                &lt;xsd:element name="<span class="bold">Title</span>"       type="xsd:string"/&gt;
                                &lt;xsd:element name="<span class="bold">Description</span>" type="xsd:string"/&gt;
                              &lt;/xsd:sequence&gt;
                            &lt;/xsd:complexType&gt;
                          &lt;/xsd:element&gt;
                        &lt;/xsd:schema&gt;',
    enableHierarchy =&gt; DBMS_XMLSCHEMA.<span class="bold">ENABLE_HIERARCHY_RESMETADATA</span>);
END;
/
</pre></div>
<!-- class="example" -->
<p>The XML schema in <a href="#BABHHHFC">Example 29-2</a> defines metadata used to categorize a photo image file: to describe its content or possible uses. This simple example defines a single, general property for classification, named <code>Category</code>.</p>
<div id="ADXDB5575" class="example">
<p class="titleinexample"><a id="BABHHHFC"></a>Example 29-2 Register an XML Schema for Photo Categorization</p>
<pre>
BEGIN
  DBMS_XMLSCHEMA.registerSchema(
    SCHEMAURL       =&gt; '<span class="bold">imagecategories.xsd</span>',
    SCHEMADOC       =&gt; '&lt;xsd:schema targetNamespace="<span class="bold">cnamespace</span>"
                                    xmlns:xsd="http://www.w3.org/2001/XMLSchema"
                                    xmlns:xdb="http://xmlns.oracle.com/xdb"
                                    xmlns="cnamespace"&gt;
                          &lt;xsd:element name="<span class="bold">ImgCatMetadata</span>"
                                       xdb:defaultTable="<span class="bold">IMGCATMETADATATABLE</span>"&gt;
                            &lt;xsd:complexType&gt;
                              &lt;xsd:sequence&gt;
                                &lt;xsd:element name="<span class="bold">Categories</span>" 
                                             type="CategoriesType"/&gt;
                              &lt;/xsd:sequence&gt;
                            &lt;/xsd:complexType&gt;
                          &lt;/xsd:element&gt;
                          &lt;xsd:complexType name="CategoriesType"&gt;
                            &lt;xsd:sequence&gt;
                              &lt;xsd:element name="<span class="bold">Category</span>" type="xsd:string"
                                           maxOccurs="unbounded"/&gt;
                            &lt;/xsd:sequence&gt;
                          &lt;/xsd:complexType&gt;
                        &lt;/xsd:schema&gt;',
    enableHierarchy =&gt; DBMS_XMLSCHEMA.ENABLE_HIERARCHY_RESMETADATA);
END;
/
</pre></div>
<!-- class="example" -->
<p>Notice that there is nothing in the XML schema definitions of metadata that restrict that information to being associated with any particular kind of data. You are free to associate any type of metadata with any type of resource. And multiple types of metadata can be associated with the same resource.</p>
<p>Notice, too, that the XML schema does not, by itself, define its associated data as being metadata&thinsp;&mdash;&thinsp;it is the schema <span class="italic">registration</span> that makes this characterization, through <code>enableHierarchy</code> value <code>ENABLE_HIERARCHY_RESMETADATA</code>. If the same schema were registered instead with <code>enableHierarchy</code> value <code>ENABLE_HIERARCHY_CONTENTS</code> (the default value), then it would define not metadata for resources, but resource <span class="italic">contents</span> with the same information. The same XML schema cannot be registered more than once under the same name.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
XML schema-based user-defined metadata is stored as a <code>CLOB</code>, by default. You can store it as binary XML, instead, by setting the <code>OPTIONS</code> parameter for XML schema registration to <code>REGISTER_BINARYXML</code>.</div>
</div>
<!-- class="sect1" -->
<a id="CIAIBCFI"></a>
<div id="ADXDB5576" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Adding, Updating, and Deleting Resource Metadata</h2>
<p>You can add, update, and delete user-defined resource metadata in the following ways:</p>
<ul>
<li>
<p>Use PL/SQL procedures in package <code>DBMS_XDB</code>:</p>
<ul>
<li>
<p><code>appendResourceMetadata</code> &ndash; add metadata to a resource</p>
</li>
<li>
<p><code>updateResourceMetadata</code> &ndash; modify resource metadata</p>
</li>
<li>
<p><code>deleteResourceMetadata</code> &ndash; delete specific metadata from a resource</p>
</li>
<li>
<p><code>purgeResourceMetadata</code> &ndash; delete <span class="italic">all</span> metadata from a resource</p>
</li>
</ul>
</li>
<li>
<p>Use SQL DML statements <code>INSERT</code>, <code>UPDATE</code>, and <code>DELETE</code> to update the resource directly</p>
</li>
<li>
<p>Use WebDAV protocol method <code>PROPPATCH</code></p>
</li>
</ul>
<p>You use SQL DM statements and WebDAV method <code>PROPPATCH</code> to update or delete metadata in the same way as you add metadata. If you supply a complete <code>Resource</code> element for one of these operations, then keep in mind that each resource metadata property must be a child (not just a descendant) of element <code>Resource</code>&thinsp;&mdash;&thinsp;if you want multiple metadata elements of the same kind, you must collect them as children of a single parent metadata element. The order among such top-level user-defined resource metadata properties is unimportant and is not necessarily maintained by Oracle XML&nbsp;DB.</p>
<p>The separate PL/SQL procedures in package <code>DBMS_XDB</code> are similar in their use. Each can be used with either XML schema-based or non-schema-based metadata. Some forms (signatures) of some of the procedures apply only to schema-based metadata. Procedures <code>appendResourceMetadata</code> and <code>deleteResourceMetadata</code> are illustrated here with examples.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink ARPLS371" href="../../appdev.112/e40758/d_xdb.htm#ARPLS371"><span class="italic">Oracle Database PL/SQL Packages and Types Reference</span></a> for information about the procedures in PL/SQL package <code>DBMS_XDB</code></div>
<div id="ADXDB5577" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref1700"></a>
<h3 class="sect2">Adding Metadata using APPENDRESOURCEMETADATA</h3>
<p>You can use procedure <code>DBMS_XDB.appendResourceMetadata</code> to add user-defined metadata to resources.</p>
<p><a href="#CIACFBID">Example 29-3</a> creates a photo resource and adds XML schema-based metadata of type <code>ImgTechMetadata</code> to it, recording the technical information about the photo.</p>
<div id="ADXDB5578" class="example">
<p class="titleinexample"><a id="CIACFBID"></a>Example 29-3 Add Metadata to a Resource &ndash; Technical Photo Information</p>
<pre>
DECLARE
  returnbool BOOLEAN;
BEGIN
  returnbool := DBMS_XDB.createResource(
                  '/public/horse_with_pig.jpg',
                  bfilename('MYDIR', 'horse_with_pig.jpg'));
  DBMS_XDB.<span class="bold">appendResourceMetadata</span>(
    '/public/horse_with_pig.jpg',
    XMLType('&lt;i:<span class="bold">ImgTechMetadata</span>
                 xmlns:i="inamespace"
                 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                 xsi:schemaLocation="inamespace <span class="bold">imagetechnique.xsd</span>"&gt;
               &lt;Height&gt;1024&lt;/Height&gt;
               &lt;Width&gt;768&lt;/Width&gt;
               &lt;ColorDepth&gt;24&lt;/ColorDepth&gt;
               &lt;Title&gt;Pig Riding Horse&lt;/Title&gt;
               &lt;Description&gt;Picture of a pig riding a horse on the beach,
taken outside hotel window.&lt;/Description&gt;
             &lt;/i:ImgTechMetadata&gt;'));
END;
/
</pre></div>
<!-- class="example" -->
<p><a href="#CIACDCJD">Example 29-4</a> adds metadata of type <code>ImgTechMetadata</code> to the same resource as <a href="#CIACFBID">Example 29-3</a>, placing the photo in several user-defined content categories.</p>
<div id="ADXDB5579" class="example">
<p class="titleinexample"><a id="CIACDCJD"></a>Example 29-4 Add Metadata to a Resource &ndash; Photo Content Categories</p>
<pre>
BEGIN
  DBMS_XDB.appendResourceMetadata(
    '/public/horse_with_pig.jpg',
    XMLType('&lt;c:<span class="bold">ImgCatMetadata</span>
                 xmlns:c="cnamespace"
                 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                 xsi:schemaLocation="cnamespace <span class="bold">imagecategories.xsd</span>"&gt;
               &lt;Categories&gt;
                 &lt;Category&gt;Vacation&lt;/Category&gt;
                 &lt;Category&gt;Animals&lt;/Category&gt;
                 &lt;Category&gt;Humor&lt;/Category&gt;
                 &lt;Category&gt;2005&lt;/Category&gt;
               &lt;/Categories&gt;
             &lt;/c:ImgCatMetadata&gt;'));
END;
/

PL/SQL procedure successfully completed.
 
SELECT * FROM imgcatmetadatatable;
 
SYS_NC_ROWINFO$
--------------------------------------------------------------------------------
&lt;c:ImgCatMetadata xmlns:c="cnamespace" xmlns:xsi="http://www.w3.org/2001/XMLSche
ma-instance" xsi:schemaLocation="cnamespace imagecategories.xsd"&gt;
  &lt;Categories&gt;
    &lt;Category&gt;Vacation&lt;/Category&gt;
    &lt;Category&gt;Animals&lt;/Category&gt;
    &lt;Category&gt;Humor&lt;/Category&gt;
    &lt;Category&gt;2005&lt;/Category&gt;
  &lt;/Categories&gt;
&lt;/c:ImgCatMetadata&gt;
 
1 row selected.
</pre></div>
<!-- class="example" --></div>
<!-- class="sect2" -->
<a id="CIAIHJBB"></a>
<div id="ADXDB5580" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Deleting Metadata using DELETERESOURCEMETADATA</h3>
<p>You can use procedure <code>DBMS_XDB.deleteResourceMetadata</code> to delete specific metadata associated with a resource. To delete <span class="italic">all</span> of the metadata associated with a resource, you can use procedure <code>DBMS_XDB.purgeResourceMetadata</code>.</p>
<p><a href="#BABEJIGD">Example 29-5</a> deletes the category metadata that was added to the photo resource in <a href="#CIACDCJD">Example 29-4</a>. By default, both the resource link (<code>REF</code>) to the metadata and the metadata table identified by that link are deleted. An optional parameter can be used to specify that only the link is to be deleted. The metadata table is then left as is but becomes unrelated to the resource. In this example, the default behavior is used.</p>
<div id="ADXDB5581" class="example">
<p class="titleinexample"><a id="BABEJIGD"></a>Example 29-5 Delete Specific Metadata from a Resource</p>
<pre>
BEGIN
  DBMS_XDB.<span class="bold">deleteResourceMetadata</span>('/public/horse_with_pig.jpg',
                                  'cnamespace',
                                  'ImgCatMetadata');
END;
/

PL/SQL procedure successfully completed.
 
SELECT * FROM imgcatmetadatatable;
 
no rows selected
</pre></div>
<!-- class="example" --></div>
<!-- class="sect2" -->
<div id="ADXDB5582" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref1701"></a>
<h3 class="sect2">Adding Metadata using SQL DML</h3>
<p>An alternative to using procedure <code>DBMS_XDB.appendResourceMetadata</code> to add, update, or delete resource metadata is to update the <code>RESOURCE_VIEW</code> directly using DML statements <code>INSERT</code> and <code>UPDATE</code>.</p>
<p>Adding resource metadata in this way is illustrated by <a href="#CIAGJEDB">Example 29-6</a>. It shows how to accomplish the same thing as <a href="#CIACFBID">Example 29-3</a> by inserting the metadata directly into <code>RESOURCE_VIEW</code> using SQL statement <code>UPDATE</code>. Other SQL DML statements may be used similarly.</p>
<div id="ADXDB5583" class="example">
<p class="titleinexample"><a id="CIAGJEDB"></a>Example 29-6 Adding Metadata to a Resource using DML with RESOURCE_VIEW</p>
<pre>
UPDATE RESOURCE_VIEW
  SET RES = 
        insertChildXML(
          RES, 
          '/r:Resource', 
          'c:ImgCatMetadata', 
          XMLType('&lt;c:ImgCatMetadata
                       xmlns:c="cnamespace"
                       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                       xsi:schemaLocation="cnamespace imagecategories.xsd"&gt;
                     &lt;Categories&gt;
                       &lt;Category&gt;Vacation&lt;/Category&gt;
                       &lt;Category&gt;Animals&lt;/Category&gt;
                       &lt;Category&gt;Humor&lt;/Category&gt;
                       &lt;Category&gt;2005&lt;/Category&gt;
                     &lt;/Categories&gt;
                   &lt;/c:ImgCatMetadata&gt;'),
          'xmlns:r="http://xmlns.oracle.com/xdb/XDBResource.xsd"
           xmlns:c="cnamespace"')
  WHERE equals_path(RES, '/public/horse_with_pig.jpg') = 1;
/

SELECT * FROM imgcatmetadatatable;
 
SYS_NC_ROWINFO$
--------------------------------------------------------------------------------
&lt;c:ImgCatMetadata xmlns:c="cnamespace" xmlns:xsi="http://www.w3.org/2001/XMLSche
ma-instance" xsi:schemaLocation="cnamespace imagecategories.xsd"&gt;
  &lt;Categories&gt;
    &lt;Category&gt;Vacation&lt;/Category&gt;
    &lt;Category&gt;Animals&lt;/Category&gt;
    &lt;Category&gt;Humor&lt;/Category&gt;
    &lt;Category&gt;2005&lt;/Category&gt;
  &lt;/Categories&gt;
&lt;/c:ImgCatMetadata&gt;
 
1 row selected.
</pre>
<p>The following query extracts the inserted metadata using <code>RESOURCE_VIEW</code>, rather than directly using metadata table <code>imgcatmetadatatable</code>. (The result is shown here pretty-printed, for clarity.)</p>
<pre>
SELECT XMLQuery('declare namespace r
                   = "http://xmlns.oracle.com/xdb/XDBResource.xsd"; (: :)
                 declare namespace c
                   = "cnamespace"; (: :)
                 /r:Resource/c:ImgCatMetadata'
                PASSING RES RETURNING CONTENT)
  FROM RESOURCE_VIEW
  WHERE equals_path(RES, '/public/horse_with_pig.jpg') = 1;
 
XMLQUERY('DECLARENAMESPACER="HTTP://XMLNS.ORACLE.COM/XDB/XDBRESOURCE.XSD";(::)DE
--------------------------------------------------------------------------------
&lt;c:ImgCatMetadata xmlns:c="cnamespace" 
                  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                  xsi:schemaLocation="cnamespace imagecategories.xsd"&gt;
  &lt;Categories&gt;
    &lt;Category&gt;Vacation&lt;/Category&gt;
    &lt;Category&gt;Animals&lt;/Category&gt;
    &lt;Category&gt;Humor&lt;/Category&gt;
    &lt;Category&gt;2005&lt;/Category&gt;
  &lt;/Categories&gt;
&lt;/c:ImgCatMetadata&gt;
 
1 row selected.
</pre></div>
<!-- class="example" --></div>
<!-- class="sect2" -->
<a id="CIAGCCIJ"></a>
<div id="ADXDB2565" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Adding Metadata using WebDAV PROPPATCH</h3>
<p>Another alternative to using procedure <code>DBMS_XDB.appendResourceMetadata</code> to add resource metadata is to use WebDAV method <code>PROPPATCH</code>. This is illustrated in <a href="#CIAJIIEF">Example 29-7</a>. You can update and delete metadata similarly.</p>
<p><a href="#CIAJIIEF">Example 29-7</a> shows how to accomplish the same thing as <a href="#CIACDCJD">Example 29-4</a> by inserting the metadata using WebDAV method <code>PROPPATCH</code>. Using appropriate tools, your application creates such a <code>PROPPATCH</code> WebDAV request and sends it to the WebDAV server for processing.</p>
<p>To update user-defined metadata, you proceed in the same way. To <span class="italic">delete</span> user-defined metadata, the WebDAV request is similar, but it has <code>D:remove</code> in place of <code>D:set</code>.</p>
<div id="ADXDB5584" class="example">
<p class="titleinexample"><a id="CIAJIIEF"></a>Example 29-7 Adding Metadata using WebDAV PROPPATCH</p>
<pre>
PROPPATCH /public/horse_with_pig.jpg HTTP/1.1
Host: www.example.com
Content-Type: text/xml; charset="utf-8"
Content-Length: 609
Authorization: Basic dGRhZHhkYl9tZXRhOnRkYWR4ZGJfbWV0YQ==
Connection: close
 
&lt;?xml version="1.0" encoding="utf-8" ?&gt;
&lt;D:<span class="bold">propertyupdate</span> xmlns:D="<span class="bold">DAV:</span>" xmlns:Z="http://www.w3.com/standards/z39.50/"&gt;
  &lt;D:<span class="bold">set</span>&gt;
    &lt;D:<span class="bold">prop</span>&gt;
      &lt;c:ImgCatMetadata
          xmlns:c="cnamespace"
          xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          xsi:schemaLocation="cnamespace imagecategories.xsd"&gt;
        &lt;Categories&gt;
          &lt;Category&gt;Vacation&lt;/Category&gt;
          &lt;Category&gt;Animals&lt;/Category&gt;
          &lt;Category&gt;Humor&lt;/Category&gt;
          &lt;Category&gt;2005&lt;/Category&gt;
        &lt;/Categories&gt;
      &lt;/c:ImgCatMetadata&gt;
    &lt;/D:prop&gt;
  &lt;/D:set&gt;
&lt;/D:propertyupdate&gt;
</pre></div>
<!-- class="example" --></div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="CIAHFIDA"></a>
<div id="ADXDB5585" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Querying XML Schema-Based Resource Metadata</h2>
<p>When you register an XML schema using the <code>enableHierarchy</code> value <code>ENABLE_HIERARCHY_RESMETADATA</code>, an additional column, <code>RESID</code>, is added automatically to the <code>XMLType</code> tables used to store the metadata. This column stores the object identifier (OID) of the resource associated with the metadata. You can use column <code>RESID</code> when querying metadata, to join the metadata with the associated data.</p>
<p>You can query metadata in these ways:</p>
<ul>
<li>
<p>Query <code>RESOURCE_VIEW</code> for the metadata. For example:</p>
<pre>
SELECT count(*) FROM RESOURCE_VIEW
  WHERE
    XMLExists(
      'declare namespace r
         = "http://xmlns.oracle.com/xdb/XDBResource.xsd"; (: :)
       declare namespace c
         = "cnamespace"; (: :)
       /r:Resource/c:ImgCatMetadata/Categories/Category[text()="Vacation"]'
      PASSING RES);

  COUNT(*)
----------
         1
 
1 row selected.
</pre></li>
<li>
<p>Query the XML schema-based table for the user-defined metadata directly, and join this metadata back to the resource table, identifying which resource to select. Use column <code>RESID</code> of the metadata table to do this. For example:</p>
<pre>
SELECT COUNT(*) FROM RESOURCE_VIEW rs, <span class="bold">imgcatmetadatatable ct</span>
  WHERE
    XMLExists(
      'declare namespace r
         = "http://xmlns.oracle.com/xdb/XDBResource.xsd"; (: :)
       declare namespace c
         = "cnamespace"; (: :)
       /r:Resource/c:ImgCatMetadata/Categories/Category'
      PASSING RES)
    AND <span class="bold">rs.RESID = ct.RESID</span>;

  COUNT(*)
----------
         1
 
1 row selected.
</pre></li>
</ul>
<p>Oracle recommends querying for user-defined metadata directly, for performance reasons. Direct queries of the <code>RESOURCE_VIEW</code> alone <span class="italic">cannot be optimized</span> using XPath rewrite, because there is no way to determine whether or not target elements like <code>Category</code> are stored in the <code>CLOB</code> value or in an out-of-line table.</p>
<p>To improve performance further, create an index on each metadata column you intend to query.</p>
<p><a href="#BABEHBGB">Example 29-8</a> queries both kinds of photo resource metadata, retrieving the paths to the resources that are categorized as vacation photos and have the title "Pig Riding Horse".</p>
<div id="ADXDB5586" class="example">
<p class="titleinexample"><a id="BABEHBGB"></a>Example 29-8 Query XML Schema-Based Resource Metadata</p>
<pre>
SELECT ANY_PATH
  FROM RESOURCE_VIEW rs, imgcatmetadatatable ct, imgtechmetadatatable tt
  WHERE XMLExists(
          'declare namespace r
             = "http://xmlns.oracle.com/xdb/XDBResource.xsd"; (: :)
           declare namespace c
             = "cnamespace"; (: :)
           /r:Resource/c:ImgCatMetadata/Categories/Category[text()="Vacation"]'
          PASSING RES)
    AND XMLExists(
          'declare namespace r
             = "http://xmlns.oracle.com/xdb/XDBResource.xsd"; (: :)
           declare namespace i
             = "inamespace"; (: :)
           /r:Resource/i:ImgTechMetadata/Title[text()="Pig Riding Horse"]'
          PASSING RES)
    AND rs.RESID = ct.RESID
    AND rs.RESID = tt.RESID;

ANY_PATH
--------------------------
/public/horse_with_pig.jpg
 
1 row selected.
</pre></div>
<!-- class="example" --></div>
<!-- class="sect1" -->
<a id="CIAEHGFA"></a>
<div id="ADXDB5587" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">XML Image Metadata from Binary Image Metadata</h2>
<p>Previous sections of this chapter use a simple user-defined XML schema that defines technical image metadata, <code>imagetechnique.xsd</code>, to illustrate ways of adding and changing repository resource metadata. That simple XML schema is not intended to be realistic with respect to technical photographic image information.</p>
<p>However, most digital cameras include image metadata as part of the binary image files they produce, and Oracle <span class="italic">inter</span>Media, which is part of Oracle Database, provides tools for extracting and converting this binary metadata to XML. Oracle <span class="italic">inter</span>Media XML schemas are automatically registered with Oracle XML&nbsp;DB Repository to convert binary image metadata of the followings kinds to XML data:</p>
<ul>
<li>
<p>EXIF &ndash; Exchangeable Image File Format</p>
</li>
<li>
<p>IPTC-NAA IIM &ndash; International Press Telecommunications Council-Newspaper Association of America Information Interchange Model</p>
</li>
<li>
<p>XMP &ndash; Extensible Metadata Platform</p>
</li>
</ul>
<p>EXIF is the metadata standard for digital still cameras. EXIF metadata is stored in TIFF and JPEG image files. IPTC and XMP metadata is commonly embedded in image files by desktop image-processing software.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a class="olink IMURG3500" href="../../appdev.112/e10777/ch_metadata.htm#IMURG3500"><span class="italic">Oracle Multimedia User's Guide</span></a> for information about working with digital image metadata, including examples of extracting binary image metadata and converting it to XML</p>
</li>
<li>
<p><a class="olink AIVUG65000" href="../../appdev.112/e10776/ap_xmlschms.htm#AIVUG65000"><span class="italic">Oracle Multimedia Reference</span></a> for information about the XML schemas supported by Oracle <span class="italic">inter</span>Media for use with image metadata</p>
</li>
</ul>
</div>
</div>
<!-- class="sect1" -->
<a id="CIAJHFJG"></a>
<div id="ADXDB5588" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Adding Non-Schema-Based Resource Metadata</h2>
<p>You store user-defined resource metadata that is <span class="italic">not</span> schema-based as a <code>CLOB</code> instance under the <code>Resource</code> element of the associated resource. The default XML schema for a resource has a top-level element <code><span class="codeinlinebold">any</span></code> (declared with <code>maxOccurs= "unbounded"</code>), which admits any valid XML data as part of the resource document. This metadata is stored in a <code>CLOB</code> column of the resource table.</p>
<p>The following skeleton shows the structure and position of non-schema-based resource metadata:</p>
<pre>
<a id="BABHDBHA"></a>
     &lt;Resource xmlns="http://xmlns.oracle.com/xdb/XDBResource.xsd"
       &lt;Owner&gt;DESELBY&lt;/Owner&gt;
       ... &lt;!-- other system-defined metadata --&gt;
       &lt;!-- contents of the resource&gt;
       &lt;Contents&gt;
         ...
       &lt;/Contents&gt;
       &lt;!-- User-defined metadata (appearing within different namespace) --&gt;
       <span class="bold">&lt;MyOwnMetadata xmlns="http://www.example.com/custommetadata"&gt;</span>
         <span class="bold">&lt;MyElement1&gt;value1&lt;/MyElement1&gt;</span>
         <span class="bold">&lt;MyElement2&gt;value2&lt;/MyElement2&gt;</span>
       <span class="bold">&lt;/MyOwnMetadata&gt;</span>
     &lt;/Resource&gt;
</pre>
<p>You can set and access non-schema-based resource metadata belonging to namespaces other than <code>XDBResource.xsd</code> by using any of the means described previously for accessing XML schema-based resource metadata.</p>
<p><a href="#BABEDFFF">Example 29-9</a> illustrates this for the case of SQL DML operations, adding user-defined metadata directly to the <code>&lt;RESOURCE&gt;</code> <span class="italic">document</span>. It shows how to add non-schema-based metadata to a resource using SQL DML.</p>
<div id="ADXDB5589" class="example">
<p class="titleinexample"><a id="BABEDFFF"></a>Example 29-9 Add Non-Schema-Based Metadata to a Resource</p>
<pre>
DECLARE
  res BOOLEAN;
BEGIN
  res := DBMS_XDB.createResource('/public/NurseryRhyme.txt',
                                 bfilename('MYDIR',
                                           'tdadxdb-xdb_repos_meta-011.txt'),
                                 nls_charset_id('AL32UTF8'));
UPDATE RESOURCE_VIEW
  SET RES = insertChildXML(RES, 
                           '/r:Resource', 
                           'n:NurseryMetadata', 
                           XMLType('&lt;n:NurseryMetadata xmlns:n="nurserynamespace"&gt;
                                      &lt;Author&gt;Mother Goose&lt;/Author&gt;
                                   &lt;n:NurseryMetadata&gt;'),
                           'xmlns:r="http://xmlns.oracle.com/xdb/XDBResource.xsd"
                            xmlns:n="nurserynamespace"')
  WHERE equals_path(RES, '/public/NurseryRhyme.txt') = 1;
END;
/

PL/SQL procedure successfully completed.
 

SELECT XMLSerialize(DOCUMENT rs.RES AS CLOB) FROM RESOURCE_VIEW rs
  WHERE equals_path(RES, '/public/NurseryRhyme.txt') = 1;
 
XMLSERIALIZE(DOCUMENTRS.RESASCLOB)
--------------------------------------------------------------------------------
&lt;Resource xmlns="http://xmlns.oracle.com/xdb/XDBResource.xsd" Hidden="false" Inv
alid="false" Container="false" CustomRslv="false" VersionHistory="false" StickyR
ef="true"&gt;
  &lt;CreationDate&gt;2005-05-24T13:51:48.043234&lt;/CreationDate&gt;
  &lt;ModificationDate&gt;2005-05-24T13:51:48.290144&lt;/ModificationDate&gt;
  &lt;DisplayName&gt;NurseryRhyme.txt&lt;/DisplayName&gt;
  &lt;Language&gt;en-US&lt;/Language&gt;
  &lt;CharacterSet&gt;UTF-8&lt;/CharacterSet&gt;
  &lt;ContentType&gt;text/plain&lt;/ContentType&gt;
  &lt;RefCount&gt;1&lt;/RefCount&gt;
  &lt;ACL&gt;
    &lt;acl description="Public:All privileges to PUBLIC" xmlns="http://xmlns.oracl
e.com/xdb/acl.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:sch
emaLocation="http://xmlns.oracle.com/xdb/acl.xsd                           http:
//xmlns.oracle.com/xdb/acl.xsd" shared="true"&gt;
      &lt;ace&gt;
        &lt;principal&gt;PUBLIC&lt;/principal&gt;
        &lt;grant&gt;true&lt;/grant&gt;
        &lt;privilege&gt;
          &lt;all/&gt;
        &lt;/privilege&gt;
      &lt;/ace&gt;
    &lt;/acl&gt;
  &lt;/ACL&gt;
  &lt;Owner&gt;TDADXDB_META&lt;/Owner&gt;
  &lt;Creator&gt;TDADXDB_META&lt;/Creator&gt;
  &lt;LastModifier&gt;TDADXDB_META&lt;/LastModifier&gt;
  &lt;SchemaElement&gt;http://xmlns.oracle.com/xdb/XDBSchema.xsd#text&lt;/SchemaElement&gt;
  &lt;Contents&gt;
    &lt;text&gt;Mary had a little lamb
Its fleece was white as snow
and everywhere that Mary went
that lamb was sure to go
&lt;/text&gt;
  &lt;/Contents&gt;
  &lt;n:NurseryMetadata xmlns:n="nurserynamespace"&gt;
    &lt;Author xmlns=""&gt;Mother Goose&lt;/Author&gt;
  &lt;/n:NurseryMetadata&gt;
&lt;/Resource&gt;
 
1 row selected.
</pre></div>
<!-- class="example" --></div>
<!-- class="sect1" -->
<a id="CIAIGEJF"></a>
<div id="ADXDB5590" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">PL/SQL Procedures Affecting Resource Metadata</h2>
<p>The following PL/SQL procedures perform resource metadata operations:</p>
<ul>
<li>
<p><code>DBMS_XMLSCHEMA.registerSchema</code> &ndash; Register an XML schema. Parameter <code>ENABLEHIERARCHY</code> affects resource metadata.</p>
</li>
<li>
<p><code><a id="sthref1702"></a><a id="sthref1703"></a>DBMS_XDBZ.enable_hierarchy</code> &ndash; Enable repository support for an <code>XMLType</code> table or view. Use parameter <code>HIERARCHY_TYPE</code> with a value of <code>DBMS_XDBZ.ENABLE_HIERARCHY_RESMETADATA</code> to enable resource metadata. This adds column <code>RESID</code> to track the resource associated with the metadata.</p>
</li>
<li>
<p><code>DBMS_XDBZ.disable_hierarchy</code> &ndash; Disable all repository support for an <code>XMLType</code> table or view.</p>
</li>
<li>
<p><code>DBMS_XDBZ.<a id="sthref1704"></a><a id="sthref1705"></a><a id="sthref1706"></a>is_hierarchy_enabled</code> &ndash; Tests, using parameter <code>HIERARCHY_TYPE</code>, whether the specified type of hierarchy is currently enabled for the specified <code>XMLType</code> table or view. Value <code>DBMS_XDBZ.IS_ENABLED_RESMETADATA</code> for <code>HIERARCHY_TYPE</code> tests whether resource metadata is enabled.</p>
</li>
<li>
<p><code>DBMS_XDB.appendResourceMetadata</code> &ndash; Add metadata to a resource.</p>
</li>
<li>
<p><code>DBMS_XDB.deleteResourceMetadata</code> &ndash; Delete specified metadata from a resource.</p>
</li>
<li>
<p><code>DBMS_XDB.purgeResourceMetadata</code> &ndash; Delete all user-defined metadata from a resource. For schema-based resources, optional parameter <code>DELETE_OPTION</code> can be used to specify whether or not to delete the metadata information, in addition to unlinking it.</p>
</li>
<li>
<p><code>DBMS_XDB.updateResourceMetadata</code> &ndash; Update the metadata for a resource.</p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink ARPLS805" href="../../appdev.112/e40758/d_xdbz.htm#ARPLS805"><span class="italic">Oracle Database PL/SQL Packages and Types Reference</span></a> for detailed information about these PL/SQL procedures</div>
</div>
<!-- class="sect1" --></div>
<!-- class="chapter" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment1019">
<tr>
<td class="cellalignment1028">
<table class="cellalignment1024">
<tr>
<td class="cellalignment1023"><a href="xdb22pro.htm"><img width="24" height="24" src="../../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment1023"><a href="xdb_repos_events.htm"><img width="24" height="24" src="../../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;2002, 2014,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment1030">
<table class="cellalignment1022">
<tr>
<td class="cellalignment1023"><a href="../../index.htm"><img width="24" height="24" src="../../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment1023"><a href="../../nav/portal_booklist.htm"><img width="24" height="24" src="../../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment1023"><a href="toc.htm"><img width="24" height="24" src="../../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment1023"><a href="index.htm"><img width="24" height="24" src="../../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment1023"><a href="../../nav/mindx.htm"><img width="24" height="24" src="../../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment1023"><a href="../../dcommon/html/feedback.htm"><img width="24" height="24" src="../../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>
</body>
</html>
