<!DOCTYPE html>
<html lang="en" >
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1">
<meta charset="utf-8">
<title>Using Native Oracle XML&nbsp;DB Web Services</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Version 5.1.2 Build 748" />
<meta name="description" content="This manual describes Oracle XML&nbsp;DB. It includes guidelines and examples for storing, generating, accessing, searching, validating, transforming, evolving, and indexing XML data in Oracle Database." />
<meta name="dcterms.created" content="2014-02-20T9:56:17Z" />
<meta name="robots" content="all" />
<meta name="dcterms.title" content="XML DB Developer's Guide" />
<meta name="dcterms.identifier" content="E23094-04" />
<meta name="dcterms.isVersionOf" content="ADXDB" />
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;2002, 2014,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved." />
<link rel="Start" href="../../index.htm" title="Home" type="text/html" />
<link rel="Copyright" href="../../dcommon/html/cpyr.htm" title="Copyright" type="text/html" />

<script type="application/javascript"  src="../../dcommon/js/headfoot.js"></script>
<script type="application/javascript"  src="../../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html" />
<link rel="Index" href="index.htm" title="Index" type="text/html" />
<link rel="Prev" href="xdb23jv1.htm" title="Previous" type="text/html" />
<link rel="Next" href="partpg6.htm" title="Next" type="text/html" />
<link rel="alternate" href="../e23094.pdf" title="PDF version" type="application/pdf" />
<link rel="schema.dcterms" href="http://purl.org/dc/terms/" />
<link rel="stylesheet" href="../../dcommon/css/fusiondoc.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/header.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/footer.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/fonts.css">
<link rel="stylesheet" href="../../dcommon/css/foundation.css">
<link rel="stylesheet" href="../../dcommon/css/codemirror.css">
<link rel="stylesheet" type="text/css" title="Default" href="../../nav/css/html5.css">
<link rel="stylesheet" href="../../dcommon/css/respond-480-tablet.css">
<link rel="stylesheet" href="../../dcommon/css/respond-768-laptop.css">
<link rel="stylesheet" href="../../dcommon/css/respond-1140-deskop.css">
<script type="application/javascript" src="../../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">45/54</span> <!-- End Header -->
<div id="ADXDB3900" class="chapter"><a id="CHDDBCHB"></a>
<h1 class="chapter"><span class="secnum">33</span> Using Native Oracle XML&nbsp;DB Web Services</h1>
<p>This chapter contains these topics:</p>
<ul>
<li>
<p><a href="#CHDDBJBG">Overview of Native Oracle XML&nbsp;DB Web Services</a></p>
</li>
<li>
<p><a href="#CHDECACB">Configuring and Enabling Web Services for Oracle XML&nbsp;DB</a></p>
</li>
<li>
<p><a href="#CHDDJBJF">Querying Oracle XML&nbsp;DB using a Web Service</a></p>
</li>
<li>
<p><a href="#CHDFGIBD">Accessing PL/SQL Stored Procedures using a Web Service</a></p>
</li>
</ul>
<a id="CHDDBJBG"></a>
<div id="ADXDB5676" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Overview of Native Oracle XML&nbsp;DB <a id="sthref1828"></a>Web Services</h2>
<p>Web services provide a standard way for applications to exchange information over the Internet and access services that implement business logic. Your applications can access Oracle Database using native Oracle XML&nbsp;DB Web services. One available service lets you issue SQL and XQuery queries and receive results as XML data. Another service provides access to all PL/SQL stored functions and procedures.</p>
<p>You can customize the input and output document formats when you use the latter service. If you do that then the WSDL is automatically generated by the native database Web services engine.</p>
<p><a id="sthref1829"></a>SOAP 1.1 is the version supported by Oracle XML&nbsp;DB. Applications use HTTP method <code>POST</code> to submit SOAP requests to native Oracle XML&nbsp;DB Web services. You can configure the locations of all native Oracle XML&nbsp;DB Web services and WSDL documents using the Oracle XML&nbsp;DB configuration file, <code>xdbconfig.xml</code>. You can also configure security settings for the Web services using the same configuration file.</p>
<p>You can use the <code>Accept-Charsets</code> field of the input HTTP header to specify the character set of Web-service responses. If this header field is omitted, then responses are in the database character set. The language of the input document and any error responses is the locale language of the database.</p>
<p>Error handling for native Oracle XML&nbsp;DB Web services uses the SOAP framework for faults.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><code><a href="http://www.w3.org/2002/ws/">http://www.w3.org/2002/ws/</a></code> for more information on Web services</p>
</li>
<li>
<p>The W3C SOAP primer, <code><a href="http://www.w3.org/TR/2000/NOTE-SOAP-20000508">http://www.w3.org/TR/2000/NOTE-SOAP-20000508</a></code>, for more information on SOAP</p>
</li>
<li>
<p><code><a href="http://www.w3.org/TR/wsdl">http://www.w3.org/TR/wsdl</a></code> for information on the Web Services Description Language (WSDL)</p>
</li>
<li>
<p><code><a href="http://www.w3.org/TR/2003/REC-soap12-part0-20030624/#L11549">http://www.w3.org/TR/2003/REC-soap12-part0-20030624/#L11549</a></code> for information on SOAP fault handling</p>
</li>
<li>
<p><a href="appaman.htm#i641205">"Configuring Oracle XML&nbsp;DB using xdbconfig.xml"</a></p>
</li>
</ul>
</div>
</div>
<!-- class="sect1" -->
<a id="CHDECACB"></a>
<div id="ADXDB5677" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Configuring and Enabling Web Services for Oracle XML&nbsp;DB</h2>
<p>For security reasons, Oracle XML&nbsp;DB is not preconfigured with the native Web services enabled. To make native Oracle XML&nbsp;DB Web services available, you must have the Oracle XML&nbsp;DB HTTP server up and running, and you must explicitly add Web service configuration. Then, to allow specific users to use Web services, you must grant them appropriate roles.</p>
<ol>
<li>
<p>Configure Web services &ndash; see <a href="#CHDDDIEC">"Configuring Web Services for Oracle XML&nbsp;DB"</a>.</p>
</li>
<li>
<p>Enable Web services for specific users, by granting them appropriate roles &ndash; <a href="#CHDIJGFG">"Enabling Web Services for Specific Users"</a>.</p>
</li>
</ol>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="xdb22pro.htm#i1026724">"Using HTTP(S) and Oracle XML&nbsp;DB Protocol Server"</a> for information about Oracle XML&nbsp;DB HTTP server</div>
<a id="CHDDDIEC"></a>
<div id="ADXDB5678" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Configuring Web Services for Oracle XML&nbsp;DB</h3>
<p>To make Web services available for Oracle XML&nbsp;DB, log on as user <code>SYS</code> and add the servlet configuration that is shown as the query output of <a href="#CHDGGFCI">Example 33-2</a> to your Oracle XML&nbsp;DB configuration file, <code>xdbconfig.xml</code>.</p>
<p><a href="#CHDIICEJ">Example 33-1</a> shows how to use procedures in PL/SQL package <code>DBMS_XDB</code> to add the servlet. <a href="#CHDGGFCI">Example 33-2</a> shows how to verify that the servlet was added correctly.</p>
<div id="ADXDB5679" class="example">
<p class="titleinexample"><a id="CHDIICEJ"></a>Example 33-1 Adding a Web Services Configuration Servlet</p>
<pre>
DECLARE
  SERVLET_NAME VARCHAR2(32) := 'orawsv';
BEGIN
  DBMS_XDB.deleteServletMapping(SERVLET_NAME);
  DBMS_XDB.deleteServlet(SERVLET_NAME);
  DBMS_XDB.addServlet(NAME     =&gt; SERVLET_NAME,
                      LANGUAGE =&gt; 'C',
                      DISPNAME =&gt; 'Oracle Query Web Service',
                      DESCRIPT =&gt; 'Servlet for issuing queries as a Web Service',
                      SCHEMA   =&gt; 'XDB');
  DBMS_XDB.addServletSecRole(SERVNAME =&gt; SERVLET_NAME,
                             ROLENAME =&gt; 'XDB_WEBSERVICES',
                             ROLELINK =&gt; 'XDB_WEBSERVICES');
  DBMS_XDB.addServletMapping(PATTERN =&gt; '/orawsv/*',
                             NAME    =&gt; SERVLET_NAME);
END;
/
</pre></div>
<!-- class="example" -->
<div id="ADXDB5680" class="example">
<p class="titleinexample"><a id="CHDGGFCI"></a>Example 33-2 Verifying Addition of Web Services Configuration Servlet</p>
<pre>
XQUERY declare default element namespace "http://xmlns.oracle.com/xdb/xdbconfig.xsd"; (: :)
       (: This path is split over two lines for documentation purposes only.
          The path should actually be a single long line. :)
       for $doc in fn:doc("/xdbconfig.xml")/xdbconfig/sysconfig/protocolconfig/httpconfig/
        webappconfig/servletconfig/servlet-list/servlet[servlet-name='orawsv']
       return $doc
/
 
Result Sequence
-------------------------------------------------------------------------
&lt;servlet xmlns="http://xmlns.oracle.com/xdb/xdbconfig.xsd"&gt;
  &lt;servlet-name&gt;orawsv&lt;/servlet-name&gt;
  &lt;servlet-language&gt;C&lt;/servlet-language&gt;
  &lt;display-name&gt;Oracle Query Web Service&lt;/display-name&gt;
  &lt;description&gt;Servlet for issuing queries as a Web Service&lt;/description&gt;
  &lt;servlet-schema&gt;XDB&lt;/servlet-schema&gt;
  &lt;security-role-ref&gt;
    &lt;description/&gt;
    &lt;role-name&gt;XDB_WEBSERVICES&lt;/role-name&gt;
    &lt;role-link&gt;XDB_WEBSERVICES&lt;/role-link&gt;
  &lt;/security-role-ref&gt;
&lt;/servlet&gt;
 
1 item(s) selected.
</pre></div>
<!-- class="example" -->
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="appaman.htm#i641205">"Configuring Oracle XML&nbsp;DB using xdbconfig.xml"</a> for more information about configuring Oracle XML&nbsp;DB with <code>xdbconfig.xml</code></div>
</div>
<!-- class="sect2" -->
<a id="CHDIJGFG"></a>
<div id="ADXDB5681" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Enabling Web Services for Specific Users</h3>
<p>To enable Web services for a specific user, log on as user <code>SYS</code> and grant the role <code>XDB_WEBSERVICES</code> to the user. This role enables Web services over HTTPS. This role is <span class="italic">required</span> to be able to use Web services.</p>
<p>User <code>SYS</code> can, in <span class="italic">addition</span>, grant one or both of the following roles to the user:</p>
<ul>
<li>
<p><code>XDB_WEBSERVICES_OVER_HTTP</code> &ndash; Enable use of Web services over HTTP (not just HTTPS).</p>
</li>
<li>
<p><code>XDB_WEBSERVICES_WITH_PUBLIC</code> &ndash; Enable access, using Web services, to database objects that are accessible to <code>PUBLIC</code>.</p>
</li>
</ul>
<p>If a user is not granted <code>XDB_WEBSERVICES_WITH_PUBLIC</code>, then the user has access, using Web services, to all database objects (regardless of owner) that would normally be available to the user, <span class="italic">except</span> for <code>PUBLIC</code> objects. To make <code>PUBLIC</code> objects accessible to a user through Web services, <code>SYS</code> must grant role <code>XDB_WEBSERVICES_WITH_PUBLIC</code> to the user. With this role, a user can access any <code>PUBLIC</code> objects that would normally be available to the user if logged on to the database.</p>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="CHDDJBJF"></a>
<div id="ADXDB5682" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Querying Oracle XML&nbsp;DB using a <a id="sthref1830"></a>Web Service</h2>
<p>The Oracle XML&nbsp;DB Web service for database queries is located at URL <code>http://</code><code><span class="codeinlineitalic">host</span></code><code>:</code><code><span class="codeinlineitalic">port</span></code><code>/</code><code><span class="codeinlinebold">orawsv</span></code>, where <code><span class="codeinlineitalic">host</span></code> and <code><span class="codeinlineitalic">port</span></code> are the host and HTTP(S) port properties of your database. This Web service has a WSDL document associated with it that specifies the formats of the incoming and outgoing documents using XML Schema. This WSDL document is located at URL <code>http://</code><code><span class="codeinlineitalic">host</span></code><code>:</code><code><span class="codeinlineitalic">port</span></code><code>/</code><code><span class="codeinlinebold">orawsv?wsdl</span></code>.</p>
<p>Your application sends database queries to the Web service as XML documents that conform to the XML schema listed in <a href="#CHDEGIEE">Example 33-3</a>.</p>
<div id="ADXDB5683" class="example">
<p class="titleinexample"><a id="CHDEGIEE"></a>Example 33-3 XML Schema for Database Queries To Be Processed by Web Service</p>
<pre>
&lt;schema xmlns="http://www.w3.org/2001/XMLSchema"
        xmlns:xdb="http://xmlns.oracle.com/xdb"
        targetNamespace="http://xmlns.oracle.com/orawsv"&gt;
  &lt;element name="query"&gt;
    &lt;complexType&gt;
      &lt;sequence&gt;
        &lt;element name="<span class="bold">query_text</span>"&gt;
          &lt;complexType&gt;
            &lt;simpleContent&gt;
              &lt;extension base="string"&gt;
                &lt;attribute name="<span class="bold">type</span>"&gt;
                  &lt;simpleType&gt;
                    &lt;restriction base="NMTOKEN"&gt;
                      &lt;enumeration value="SQL"/&gt;
                      &lt;enumeration value="XQUERY"/&gt;
                    &lt;/restriction&gt;
                  &lt;/simpleType&gt;
                &lt;/attribute&gt;
              &lt;/extension&gt;
            &lt;/simpleContent&gt;
          &lt;/complexType&gt;
        &lt;/element&gt;
        &lt;choice maxOccurs="unbounded"&gt;
          &lt;element name="<span class="bold">bind</span>"&gt;
            &lt;complexType&gt;
              &lt;simpleContent&gt;
                &lt;extension base="string"&gt;
                  &lt;attribute name="<span class="bold">name</span>" type="string"/&gt;
                &lt;/extension&gt;
              &lt;/simpleContent&gt;
            &lt;/complexType&gt;
          &lt;/element&gt;
          &lt;element name="<span class="bold">bindXML</span>" type="any"/&gt;
        &lt;/choice&gt;
        &lt;element name="<span class="bold">null_handling</span>" minOccurs="0"&gt;
          &lt;simpleType&gt;
            &lt;restriction base="NMTOKEN"&gt;
              &lt;enumeration value="DROP_NULLS"/&gt;
              &lt;enumeration value="NULL_ATTR"/&gt;
              &lt;enumeration value="EMPTY_TAG"/&gt;
            &lt;/restriction&gt;
          &lt;/simpleType&gt;
        &lt;/element&gt;
        &lt;element name="<span class="bold">max_rows</span>" type="positiveInteger" minOccurs="0"/&gt;
        &lt;element name="<span class="bold">skip_rows</span>" type="positiveInteger" minOccurs="0"/&gt;
        &lt;element name="<span class="bold">pretty_print</span>" type="boolean" minOccurs="0"/&gt;
        &lt;element name="<span class="bold">indentation_width</span>" type="positiveInteger" minOccurs="0"/&gt;
        &lt;element name="<span class="bold">rowset_tag</span>" type="string" minOccurs="0"/&gt;
        &lt;element name="<span class="bold">row_tag</span>" type="string" minOccurs="0"/&gt;
        &lt;element name="<span class="bold">item_tags_for_coll</span>" type="boolean" minOccurs="0"/&gt;
      &lt;/sequence&gt;
    &lt;/complexType&gt;
  &lt;/element&gt;
&lt;/schema&gt;
</pre></div>
<!-- class="example" -->
<p>This XML schema is contained in the WSDL document. The important parts of incoming query documents are as follows:</p>
<ul>
<li>
<p><code>query_text</code> &ndash; The text of your query. Attribute <code>type</code> specifies the type of your query: either <code>SQL</code> or <code>XQUERY</code>.</p>
</li>
<li>
<p><code>bind</code> &ndash; A scalar bind-variable value. Attribute <code>name</code> names the variable.</p>
</li>
<li>
<p><code>bindXML</code> &ndash; An <code>XMLType</code> bind-variable value.</p>
</li>
<li>
<p><code>null_handling</code> &ndash; How <code>NULL</code> values returned by the query are to be treated:</p>
<ul>
<li>
<p><code>DROP_NULLS</code> &ndash; Put nothing in the output (no element). This is the default behavior.</p>
</li>
<li>
<p><code>NULL_ATTR</code> &ndash; Use an empty element for <code>NULL</code>-value output. Use attribute <code>xsi:nil = "true"</code> in the element.</p>
</li>
<li>
<p><code>EMPTY_TAG</code> &ndash; Use an empty element for <code>NULL</code>-value output, without a <code>nil</code> attribute.</p>
</li>
</ul>
</li>
<li>
<p><code>max_rows</code> &ndash; The maximum number of rows to output for the query. By default, all rows are returned.</p>
</li>
<li>
<p><code>skip_rows</code> &ndash; The number of query output rows to skip, before including rows in the data returned in the SOAP message. You can use this in connection with <code>max_rows</code> to provide paginated output. The default value is zero (<code>0</code>).</p>
</li>
<li>
<p><code>pretty_print</code> &ndash; <a id="sthref1831"></a><a id="sthref1832"></a>Whether the output document should be formatted for pretty-printing. The default value is <code>true</code>, meaning that the document is pretty-printed. When the value is <code>false</code>, no pretty-printing is done, and output rows are not broken with newline characters.</p>
</li>
<li>
<p><code>indentation_width</code> &ndash; The number of characters to indent nested elements that start a new line. The default value is one (<code>1</code>).</p>
</li>
<li>
<p><code>rowset_tag</code> &ndash; Name of the root element of the output document.</p>
</li>
<li>
<p><code>row_tag</code> &ndash; Name of the element whose value is a single row of query output.</p>
</li>
<li>
<p><code>item_tags_for_coll</code> &ndash; Whether to generate collection elements with name <code><span class="codeinlineitalic">collection_name</span></code><code>_item</code>, where <code><span class="codeinlineitalic">collection_name</span></code> is the name of the collection.</p>
</li>
</ul>
<p>These elements have the same meanings as corresponding parameters of procedures in PL/SQL package <code>DBMS_XMLGEN</code>.</p>
<p><a href="#CHDCCADC">Example 33-4</a> and <a href="#CHDFJJEE">Example 33-5</a> show the input and output of a simple SQL query.</p>
<div id="ADXDB5684" class="example">
<p class="titleinexample"><a id="CHDCCADC"></a>Example 33-4 Input XML Document for SQL Query using Query Web Service</p>
<pre>
&lt;?xml version="1.0" ?&gt;
&lt;env:Envelope xmlns:env="http://www.w3.org/2002/06/soap-envelope "&gt;
  &lt;env:Body&gt;
    &lt;<span class="bold">query</span> xmlns="http://xmlns.oracle.com/orawsv"&gt;
      &lt;<span class="bold">query_text</span> type="SQL"&gt;
        &lt;![CDATA[SELECT * FROM employees WHERE salary = <span class="bold">:e</span>]]&gt;
      &lt;/query_text&gt;
      &lt;<span class="bold">bind</span> name="<span class="bold">e</span>"&gt;8300&lt;/bind&gt;
      &lt;<span class="bold">pretty_print</span>&gt;false&lt;/pretty_print&gt;
    &lt;/query&gt;
  &lt;/env:Body&gt;
&lt;/env:Envelope&gt;
</pre></div>
<!-- class="example" -->
<p>In <a href="#CHDCCADC">Example 33-4</a>, the query text is enclosed in <code>&lt;![CDATA[</code>...<code>]]&gt;</code>. Although not strictly necessary in this example, it is appropriate to do this generally, because queries often contain characters such as <code>&lt;</code> and <code>&gt;</code>. Element <code>bind</code> is used to bind a value (<code>8300</code>) to the bind variable named <code>e</code>. Element <code>pretty_print</code> turns off pretty-printing of the output.</p>
<div id="ADXDB5685" class="example">
<p class="titleinexample"><a id="CHDFJJEE"></a>Example 33-5 Output XML Document for SQL Query using Query Web Service</p>
<pre>
&lt;?xml version="1.0"?&gt;
&lt;soap:Envelope xmlns:soap="http://www.w3.org/2002/06/soap-envelope"&gt;
&lt;soap:Body&gt;
&lt;ROWSET&gt;&lt;ROW&gt;&lt;EMPLOYEE_ID&gt;206&lt;/EMPLOYEE_ID&gt;&lt;FIRST_NAME&gt;William&lt;/FIRST_NAME&gt;&lt;LAST_NAME&gt;G
ietz&lt;/LAST_NAME&gt;&lt;EMAIL&gt;WGIETZ&lt;/EMAIL&gt;&lt;PHONE_NUMBER&gt;515.123.8181&lt;/PHONE_NUMBER&gt;&lt;HIRE_DATE&gt;07-JUN-
94&lt;/HIRE_DATE&gt;&lt;JOB_ID&gt;AC_ACCOUNT&lt;/JOB_ID&gt;&lt;SALARY&gt;8300&lt;/SALARY&gt;&lt;MANAGER_ID&gt;205&lt;/MANAGER_ID
&gt;&lt;DEPARTMENT_ID&gt;110&lt;/DEPARTMENT_ID&gt;&lt;/ROW&gt;&lt;/ROWSET&gt;
&lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;
</pre></div>
<!-- class="example" --></div>
<!-- class="sect1" -->
<a id="CHDFGIBD"></a>
<div id="ADXDB5686" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Accessing PL/SQL Stored <a id="sthref1833"></a>Procedures using a Web Service</h2>
<p>The Oracle XML&nbsp;DB Web service for accessing PL/SQL stored functions and procedures is located at URL <code>http://</code><code><span class="codeinlineitalic">host</span></code><code>:</code><code><span class="codeinlineitalic">port</span></code><code>/</code><code><span class="codeinlinebold">orawsv</span></code><code>/</code><code><span class="codeinlineitalic">dbschema</span></code><code>/</code><code><span class="codeinlineitalic">package</span></code><code>/</code><code><span class="codeinlineitalic">fn_or_proc</span></code> or, for a function or procedure that is not in a package (standalone), <code>http://</code><code><span class="codeinlineitalic">host</span></code><code>:</code><code><span class="codeinlineitalic">port</span></code><code>/</code><code><span class="codeinlinebold">orawsv</span></code><code>/</code><code><span class="codeinlineitalic">dbschema</span></code><code>/</code><code><span class="codeinlineitalic">fn_or_proc</span></code>. Here, <code><span class="codeinlineitalic">host</span></code> and <code><span class="codeinlineitalic">port</span></code> are the host and HTTP(S) port properties of your database, <code><span class="codeinlineitalic">fn_or_proc</span></code> is the stored function or procedure name, <code><span class="codeinlineitalic">package</span></code> is the package it is in, and <code><span class="codeinlineitalic">dbschema</span></code> is the database schema owning that package.</p>
<p>The input XML document must contain the inputs needed by the function or procedure. The output XML document contains the return value and the values of all <code>OUT</code> variables.</p>
<p>The names of the XML elements in the input and output documents correspond to the variable names of the function or procedure. The generated WSDL document shows you the exact XML element names. This is the naming convention used:</p>
<ul>
<li>
<p>The XML element introducing the input to a PL/SQL function is named <code><span class="codeinlineitalic">function-name</span></code><code><span class="codeinlinebold">Input</span></code>, where <code><span class="codeinlineitalic">function-name</span></code> is the name of the function (uppercase).</p>
</li>
<li>
<p>The XML elements introducing input parameters for the function are named <code><span class="codeinlineitalic">param-name</span></code><code><span class="codeinlinebold">-</span></code><code><span class="codeinlineitalic">param-type</span></code><code><span class="codeinlinebold">-</span></code><code><span class="codeinlineitalic">io-mode</span></code>, where <code><span class="codeinlineitalic">param-name</span></code> is the name of the parameter (uppercase), <code><span class="codeinlineitalic">param-type</span></code> is its SQL data type, and <code><span class="codeinlineitalic">io-mode</span></code> is its input-output mode, as follows:</p>
<ul>
<li>
<p><code><span class="codeinlinebold">IN</span></code> &ndash; <code>IN</code> mode</p>
</li>
<li>
<p><code><span class="codeinlinebold">OUT</span></code> &ndash; <code>OUT</code> mode</p>
</li>
<li>
<p><code><span class="codeinlinebold">INOUT</span></code> &ndash; <code>IN OUT</code> mode</p>
</li>
</ul>
</li>
<li>
<p>The XML element introducing the output from a PL/SQL function is named <code><span class="codeinlinebold">S</span></code><code><span class="codeinlineitalic">return-type</span></code><code><span class="codeinlinebold">-</span></code><code><span class="codeinlineitalic">function-name</span></code><code><span class="codeinlinebold">Output</span></code>, where <code><span class="codeinlineitalic">return-type</span></code> is the SQL data type of the return value (uppercase), and <code><span class="codeinlineitalic">function-name</span></code> is the name of the function (uppercase).</p>
</li>
<li>
<p>The XML elements introducing output parameters for the function are named the same as the output parameters themselves (uppercase). The element introducing the return value is named <code>RETURN</code>.</p>
</li>
</ul>
<p>The return value of a function is in the <code>RETURN</code> element of the output document, which is always the first element in the document. This return-value position disambiguates it from any <code>OUT</code> parameter that might be named "<code>RETURN</code>".</p>
<p>Each stored function or procedure is associated with a separate, dynamic Web service that has its own, generated WSDL document. This WSDL document is located at URL <code>http://</code><code><span class="codeinlineitalic">host</span></code><code>:</code><code><span class="codeinlineitalic">port</span></code><code>/</code><code><span class="codeinlinebold">orawsv</span></code><code>/</code><code><span class="codeinlineitalic">dbschema</span></code><code>/</code><code><span class="codeinlineitalic">package</span></code><code>/</code><code><span class="codeinlineitalic">fn_or_proc</span></code><code><span class="codeinlinebold">?wsdl</span></code> or <code>http://</code><code><span class="codeinlineitalic">host</span></code><code>:</code><code><span class="codeinlineitalic">port</span></code><code>/</code><code><span class="codeinlinebold">orawsv</span></code><code>/</code><code><span class="codeinlineitalic">dbschema</span></code><code>/</code><code><span class="codeinlineitalic">fn_or_proc</span></code><code><span class="codeinlinebold">?wsdl</span></code>. In addition, you can optionally generate a single WSDL document to be used for all stored functions and procedures in a given package. The URL for that WSDL document is <code>http://</code><code><span class="codeinlineitalic">host</span></code><code>:</code><code><span class="codeinlineitalic">port</span></code><code>/</code><code><span class="codeinlinebold">orawsv</span></code><code>/</code><code><span class="codeinlineitalic">dbschema</span></code><code>/</code><code><span class="codeinlineitalic">package</span></code><code><span class="codeinlinebold">?wsdl</span></code>.</p>
<p>Data types in the incoming and outgoing XML documents are mapped to SQL data types for use by the stored function or procedure, according to <a href="#CHDGBFID">Table 33-1</a>.</p>
<div id="ADXDB5687" class="tblformal">
<p class="titleintable"><a id="sthref1834"></a><a id="CHDGBFID"></a>Table 33-1 Web Service Mapping Between XML and SQL Data Types</p>
<table class="cellalignment1026" title="Web Service Mapping Between XML and SQL Data Types" summary="Web Service Mapping Between XML and SQL Data Types" dir="ltr">
<thead>
<tr class="cellalignment1020">
<th class="cellalignment1027" id="r1c1-t5">SQL Data Type</th>
<th class="cellalignment1027" id="r1c2-t5">XML Schema Data Type</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1020">
<td class="cellalignment1028" id="r2c1-t5" headers="r1c1-t5">
<p><code>CHAR</code>, <code>VARCHAR2</code>, <code>VARCHAR</code></p>
</td>
<td class="cellalignment1028" headers="r2c1-t5 r1c2-t5">
<p><code>xsd:string</code></p>
</td>
</tr>
<tr class="cellalignment1020">
<td class="cellalignment1028" id="r3c1-t5" headers="r1c1-t5">
<p><code>DATE</code> &ndash; Dates must be in the database format.</p>
</td>
<td class="cellalignment1028" headers="r3c1-t5 r1c2-t5">
<p><code>xsd:date</code></p>
</td>
</tr>
<tr class="cellalignment1020">
<td class="cellalignment1028" id="r4c1-t5" headers="r1c1-t5">
<p><code>TIMESTAMP</code>, <code>TIMESTAMP WITH TIMEZONE</code>, <code>TIMESTAMP WITH LOCAL TIMEZONE</code></p>
</td>
<td class="cellalignment1028" headers="r4c1-t5 r1c2-t5">
<p><code>xsd:dateTime</code></p>
</td>
</tr>
<tr class="cellalignment1020">
<td class="cellalignment1028" id="r5c1-t5" headers="r1c1-t5">
<p><code>INTERVAL YEAR TO MONTH</code>, <code>INTERVAL DAY TO SECOND</code></p>
</td>
<td class="cellalignment1028" headers="r5c1-t5 r1c2-t5">
<p><code>xsd:duration</code></p>
</td>
</tr>
<tr class="cellalignment1020">
<td class="cellalignment1028" id="r6c1-t5" headers="r1c1-t5">
<p><code>NUMBER</code>, <code>BINARY_DOUBLE</code>, <code>BINARY_FLOAT</code></p>
</td>
<td class="cellalignment1028" headers="r6c1-t5 r1c2-t5">
<p><code>xsd:double</code></p>
</td>
</tr>
<tr class="cellalignment1020">
<td class="cellalignment1028" id="r7c1-t5" headers="r1c1-t5">
<p>PL/SQL <code>BOOLEAN</code></p>
</td>
<td class="cellalignment1028" headers="r7c1-t5 r1c2-t5">
<p><code>xsd:boolean</code></p>
</td>
</tr>
<tr class="cellalignment1020">
<td class="cellalignment1028" id="r8c1-t5" headers="r1c1-t5">
<p>Object types</p>
</td>
<td class="cellalignment1028" headers="r8c1-t5 r1c2-t5">
<p><code>complexType</code></p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<p>An object type is represented in XML as a complex-type element named the same as the object type. The object attributes are represented as children of this element.</p>
<div id="ADXDB5688" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref1835"></a>
<h3 class="sect2">Example of Using a PL/SQL Function with a Web Service</h3>
<p>This section presents a simple PL/SQL function and its access using a Web service. The function takes as input a department ID and name, and it returns the salary total of all employees in the department. It also returns, as in-out and output parameters, respectively, the department name and the number of employees in the department. The default value of the department ID is <code>20</code>. In this simple example, the input value of the in-out parameter <code>dept_name</code> is not actually used. It is ignored, and the correct name is returned.</p>
<p><a href="#CHDIHFIH">Example 33-6</a> shows the function definition. <a href="#CHDGGCFJ">Example 33-7</a> shows the WSDL document that is created automatically from this function definition. <a href="#CHDEFFFB">Example 33-8</a> shows an input document that invokes the stored function. <a href="#CHDIBFIH">Example 33-9</a> shows the resulting output document.</p>
<div id="ADXDB5689" class="example">
<p class="titleinexample"><a id="CHDIHFIH"></a>Example 33-6 Definition of PL/SQL Function Used for Web-Service Access</p>
<pre>
CREATE OR REPLACE PACKAGE salary_calculator AUTHID CURRENT_USER AS
  FUNCTION TotalDepartmentSalary (dept_id    IN     NUMBER DEFAULT 20,
                                  dept_name  IN OUT VARCHAR2,
                                  nummembers OUT    NUMBER)
    RETURN NUMBER;
END salary_calculator;
/
CREATE OR REPLACE PACKAGE BODY salary_calculator AS
  FUNCTION TotalDepartmentSalary (dept_id    IN     NUMBER DEFAULT 20,
                                  dept_name  IN OUT VARCHAR2,
                                  nummembers OUT    NUMBER)
    RETURN NUMBER IS
      sum_sal NUMBER;
      BEGIN
        SELECT SUM(salary) INTO sum_sal FROM employees
          WHERE department_id = dept_id;
        SELECT department_name INTO dept_name FROM departments
          WHERE department_name = dept_name;
        SELECT count(*) INTO nummembers FROM employees
          WHERE department_id = dept_id;
    RETURN sum_sal;
  END;
END;         
/
</pre></div>
<!-- class="example" -->
<div id="ADXDB5690" class="example">
<p class="titleinexample"><a id="CHDGGCFJ"></a>Example 33-7 WSDL Document Corresponding to a Stored PL/SQL Function</p>
<pre>
&lt;definitions name="SALARY_CALCULATOR"
             targetNamespace="http://xmlns.oracle.com/orawsv/HR/SALARY_CALCULATOR"
             xmlns="http://schemas.xmlsoap.org/wsdl/"
             xmlns:tns="http://xmlns.oracle.com/orawsv/HR/SALARY_CALCULATOR"
             xmlns:xsd="http://www.w3.org/2001/XMLSchema"
             xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"&gt;
  &lt;types&gt;
    &lt;xsd:schema targetNamespace="http://xmlns.oracle.com/orawsv/HR/SALARY_CALCULATOR"
                elementFormDefault="qualified"&gt;
      &lt;xsd:element name="<span class="bold">SNUMBER-TOTALDEPARTMENTSALARYInput</span>"&gt;
        &lt;xsd:complexType&gt;
          &lt;xsd:sequence&gt;
            &lt;xsd:element name="<span class="bold">NUMMEMBERS-NUMBER-OUT</span>"&gt;
              &lt;xsd:complexType/&gt;
            &lt;/xsd:element&gt;
            &lt;xsd:element name="<span class="bold">DEPT_NAME-VARCHAR2-INOUT</span>" type="xsd:string"/&gt;
            &lt;xsd:element name="<span class="bold">DEPT_ID-NUMBER-IN</span>" type="xsd:double"/&gt;
          &lt;/xsd:sequence&gt;
        &lt;/xsd:complexType&gt;
      &lt;/xsd:element&gt;
      &lt;xsd:element name="<span class="bold">TOTALDEPARTMENTSALARYOutput</span>"&gt;
        &lt;xsd:complexType&gt;
          &lt;xsd:sequence&gt;
            &lt;xsd:element name="<span class="bold">RETURN</span>" type="xsd:double"/&gt;
            &lt;xsd:element name="<span class="bold">NUMMEMBERS</span>" type="xsd:double"/&gt;
            &lt;xsd:element name="<span class="bold">DEPT_NAME</span>" type="xsd:string"/&gt;
          &lt;/xsd:sequence&gt;
        &lt;/xsd:complexType&gt;
      &lt;/xsd:element&gt;
    &lt;/xsd:schema&gt;
  &lt;/types&gt;
  &lt;message name="TOTALDEPARTMENTSALARYInputMessage"&gt;
    &lt;part name="parameters" element="tns:SNUMBER-TOTALDEPARTMENTSALARYInput"/&gt;
  &lt;/message&gt;
  &lt;message name="TOTALDEPARTMENTSALARYOutputMessage"&gt;
    &lt;part name="parameters" element="tns:TOTALDEPARTMENTSALARYOutput"/&gt;
  &lt;/message&gt;
  &lt;portType name="SALARY_CALCULATORPortType"&gt;
    &lt;operation name="TOTALDEPARTMENTSALARY"&gt;
      &lt;input message="tns:TOTALDEPARTMENTSALARYInputMessage"/&gt;
      &lt;output message="tns:TOTALDEPARTMENTSALARYOutputMessage"/&gt;
    &lt;/operation&gt;
  &lt;/portType&gt;
 &lt;binding name="SALARY_CALCULATORBinding" type="tns:SALARY_CALCULATORPortType"&gt;
    &lt;soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/&gt;
    &lt;operation name="TOTALDEPARTMENTSALARY"&gt;
      &lt;soap:operation soapAction="TOTALDEPARTMENTSALARY"/&gt;
      &lt;input&gt;
        &lt;soap:body parts="parameters" use="literal"/&gt;
      &lt;/input&gt;
      &lt;output&gt;
        &lt;soap:body parts="parameters" use="literal"/&gt;
      &lt;/output&gt;
    &lt;/operation&gt;
  &lt;/binding&gt;
  &lt;service name="SALARY_CALCULATORService"&gt;
    &lt;documentation&gt;Oracle Web Service&lt;/documentation&gt;
    &lt;port name="SALARY_CALCULATORPort" binding="tns:SALARY_CALCULATORBinding"&gt;
      &lt;soap:address location="httpS://example:8088/orawsv/HR/SALARY_CALCULATOR"/&gt;
     &lt;/port&gt;
  &lt;/service&gt;
&lt;/definitions&gt;
</pre></div>
<!-- class="example" -->
<div id="ADXDB5691" class="example">
<p class="titleinexample"><a id="CHDEFFFB"></a>Example 33-8 Input XML Document for PL/SQL Query using Web Service</p>
<pre>
&lt;?xml version="1.0" ?&gt;&lt;soap:Envelope 
xmlns:soap="http://www.w3.org/2002/06/soap-envelope"&gt;&lt;soap:Body&gt;&lt;SNUMBER-
TOTALDEPARTMENTSALARYinput 
xmlns="http://xmlns.oracle.com/orawsv/HR/SALARY_CALCULATOR/TOTALDEPARTMENTSALARY"&gt;
&lt;DEPT_ID-NUMBER-IN&gt;30&lt;/DEPT_ID-NUMBER-IN&gt;&lt;DEPT_NAME-VARCHAR2-INOUT&gt;Purchasing
&lt;/DEPT_NAME-VARCHAR2-INOUT&gt;&lt;NUMMEMBERS-NUMBER-OUT/&gt;&lt;/SNUMBER-
TOTALDEPARTMENTSALARYinput&gt;&lt;/soap:Body&gt;&lt;/soap:Envelope&gt;
</pre></div>
<!-- class="example" -->
<div id="ADXDB5692" class="example">
<p class="titleinexample"><a id="CHDIBFIH"></a>Example 33-9 Output XML Document for PL/SQL Query using Web Service</p>
<pre>
&lt;?xml version="1.0" ?&gt;
&lt;soap:Envelope xmlns:soap="http://www.w3.org/2002/06/soap-envelope"&gt;
  &lt;soap:Body&gt;
    &lt;TOTALDEPARTMENTSALARYOutput 
       xmlns="http://xmlns.oracle.com/orawsv/HR/SALARY_CALCULATOR/TOTALDEPARTMENTSALARY"&gt;
      &lt;RETURN&gt;24900&lt;/RETURN&gt;
      &lt;NUMMEMBERS&gt;6&lt;/NUMMEMBERS&gt;
      &lt;DEPT_NAME&gt;Purchasing&lt;/DEPT_NAME&gt;
    &lt;/TOTALDEPARTMENTSALARYOutput&gt;
  &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;
</pre></div>
<!-- class="example" --></div>
<!-- class="sect2" --></div>
<!-- class="sect1" --></div>
<!-- class="chapter" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment1019">
<tr>
<td class="cellalignment1028">
<table class="cellalignment1024">
<tr>
<td class="cellalignment1023"><a href="xdb23jv1.htm"><img width="24" height="24" src="../../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment1023"><a href="partpg6.htm"><img width="24" height="24" src="../../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;2002, 2014,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment1030">
<table class="cellalignment1022">
<tr>
<td class="cellalignment1023"><a href="../../index.htm"><img width="24" height="24" src="../../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment1023"><a href="../../nav/portal_booklist.htm"><img width="24" height="24" src="../../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment1023"><a href="toc.htm"><img width="24" height="24" src="../../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment1023"><a href="index.htm"><img width="24" height="24" src="../../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment1023"><a href="../../nav/mindx.htm"><img width="24" height="24" src="../../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment1023"><a href="../../dcommon/html/feedback.htm"><img width="24" height="24" src="../../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>
</body>
</html>
