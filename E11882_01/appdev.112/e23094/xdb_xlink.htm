<!DOCTYPE html>
<html lang="en">
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1">
<meta charset="utf-8">
<title>Using XLink and XInclude with Oracle XML&nbsp;DB</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Version 5.1.2 Build 748" />
<meta name="description" content="This manual describes Oracle XML&nbsp;DB. It includes guidelines and examples for storing, generating, accessing, searching, validating, transforming, evolving, and indexing XML data in Oracle Database." />
<meta name="dcterms.created" content="2014-02-20T9:56:16Z" />
<meta name="robots" content="all" />
<meta name="dcterms.title" content="XML DB Developer's Guide" />
<meta name="dcterms.identifier" content="E23094-04" />
<meta name="dcterms.isVersionOf" content="ADXDB" />
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;2002, 2014,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved." />
<link rel="Start" href="../../index.htm" title="Home" type="text/html" />
<link rel="Copyright" href="../../dcommon/html/cpyr.htm" title="Copyright" type="text/html" />

<script type="application/javascript"  src="../../dcommon/js/headfoot.js"></script>
<script type="application/javascript"  src="../../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html" />
<link rel="Index" href="index.htm" title="Index" type="text/html" />
<link rel="Prev" href="xdb_repos_config.htm" title="Previous" type="text/html" />
<link rel="Next" href="xdb17ver.htm" title="Next" type="text/html" />
<link rel="alternate" href="../e23094.pdf" title="PDF version" type="application/pdf" />
<link rel="schema.dcterms" href="http://purl.org/dc/terms/" />
<link rel="stylesheet" href="../../dcommon/css/fusiondoc.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/header.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/footer.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/fonts.css">
<link rel="stylesheet" href="../../dcommon/css/foundation.css">
<link rel="stylesheet" href="../../dcommon/css/codemirror.css">
<link rel="stylesheet" type="text/css" title="Default" href="../../nav/css/html5.css">
<link rel="stylesheet" href="../../dcommon/css/respond-480-tablet.css">
<link rel="stylesheet" href="../../dcommon/css/respond-768-laptop.css">
<link rel="stylesheet" href="../../dcommon/css/respond-1140-deskop.css">
<script type="application/javascript" src="../../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">35/54</span> <!-- End Header -->
<div id="ADXDB3800" class="chapter"><a id="CIHHHJGC"></a>
<h1 class="chapter"><span class="secnum">23</span> Using <a id="sthref1428"></a><a id="sthref1429"></a><a id="sthref1430"></a>XLink and <a id="sthref1431"></a>XInclude with Oracle XML&nbsp;DB</h1>
<p>This chapter describes how to use XLink and XInclude with resources in Oracle XML&nbsp;DB Repository. It contains these topics:</p>
<ul>
<li>
<p><a href="#CIHDFFEF">Overview of XLink and XInclude</a></p>
</li>
<li>
<p><a href="#CIHJCHHJ">XLink and XInclude Link Types</a></p>
</li>
<li>
<p><a href="#CIHHDFGI">XInclude: Compound Documents</a></p>
</li>
<li>
<p><a href="#CIHGAFIB">Using XLink with Oracle XML&nbsp;DB</a></p>
</li>
<li>
<p><a href="#CIHCGAID">Using XInclude with Oracle XML&nbsp;DB</a></p>
</li>
<li>
<p><a href="#CIHIGABA">Examining XLink and XInclude Links using DOCUMENT_LINKS View</a></p>
</li>
<li>
<p><a href="#CIHHJJCC">Configuring Resources for XLink and XInclude</a></p>
</li>
<li>
<p><a href="#CIHGBCJA">Managing XLink and XInclude Links using DBMS_XDB.processLinks</a></p>
</li>
</ul>
<a id="CIHDFFEF"></a>
<div id="ADXDB5331" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Overview of XLink and XInclude</h2>
<p>A document-oriented, or <span class="glossaryterm"><a id="sthref1432"></a>content-management</span>, application often tracks relationships, between documents, and those relationships are often represented and manipulated as links of various kinds. Such links can affect application behavior in various ways, including affecting the document content and the response to user operations such as mouse clicks.</p>
<p>W3C has two recommendations that are pertinent in this context, for documents that are managed in XML repositories:</p>
<ul>
<li>
<p><span class="glossaryterm"><a id="sthref1433"></a>XLink &ndash;</span> Defines various types of links between resources. These links can model arbitrary relationships between documents. Those documents can reside inside or outside the repository.</p>
</li>
<li>
<p><span class="glossaryterm"><a id="sthref1434"></a>XInclude &ndash;</span> Defines ways to include the content of multiple XML documents or fragments in a single infoset. This provides for compound documents, which model inclusion relationships. <span class="glossaryterm"><a id="sthref1435"></a>Compound documents</span> are documents that contain other documents. More precisely, they are file resources that include documents or document fragments. The included objects can be file resources in the same repository or documents or fragments outside the repository.</p>
</li>
</ul>
<p>Each of these standards is very general, and it is not limited to modeling relationships between XML documents. There is no requirement that the documents linked using XLink or included in an XML document using XInclude be XML documents.</p>
<p>Using XLink and XInclude to represent document relationships provides flexibility for applications, facilitates reuse of component documents, and enables their fine-grained manipulation (access control, versioning, metadata, and so on). Whereas using XML data structure (an ancestor&ndash;descendents hierarchy) to model relationships requires those relationships to be relatively fixed, using XLink and XInclude to model relationships can easily allow for change in those relationships.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
For XML schema-based documents to be able to use XLink and XInclude attributes, the XML schema must either explicitly declare those attributes or allow any attributes.</div>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><code><a href="http://www.w3.org/TR/xlink">http://www.w3.org/TR/xlink</a></code> for information about the XLink standard</p>
</li>
<li>
<p><code><a href="http://www.w3.org/TR/xinclude">http://www.w3.org/TR/xinclude</a></code> for information about the XInclude standard</p>
</li>
</ul>
</div>
</div>
<!-- class="sect1" -->
<a id="CIHJCHHJ"></a>
<div id="ADXDB5332" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">XLink and XInclude Link Types</h2>
<p>This section describes XLink and XInclude link types and the relation between these and Oracle XML&nbsp;DB Repository links. XLink links are more general than repository links. XLink links can be simple or extended. Oracle XML&nbsp;DB supports only simple XLink links, not extended links.</p>
<div id="ADXDB5333" class="sect2"><a id="sthref1436"></a>
<h3 class="sect2">XLink and XInclude Links Model Document Relationships</h3>
<p>XLink and XInclude links model arbitrary relationships among documents. The meaning and behavior of a relationship are determined by the applications that use the link. They are not inherent in the link itself. XLink and XInclude links can be mapped to Oracle XML&nbsp;DB <span class="glossaryterm"><a id="sthref1437"></a>document links</span>. When document links target Oracle XML&nbsp;DB Repository resources, they can (according to a configuration option) be hard or weak links. In this, they are similar to repository links in that context. Repository links can be navigated using file system-related protocols such as FTP and HTTP. Document links cannot, but they can be navigated using the XPath 2.0 function <code>fn:doc</code>.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="xdb16fol.htm#BABFIFIH">"Hard Links and Weak Links"</a></div>
</div>
<!-- class="sect2" -->
<div id="ADXDB5334" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref1438"></a>
<h3 class="sect2">XLink and XInclude Link <a id="sthref1439"></a><a id="sthref1440"></a><a id="sthref1441"></a><a id="sthref1442"></a><a id="sthref1443"></a>Types</h3>
<p>XLink and XInclude can provide links to other documents. In the case of XInclude, attributes <code>href</code> and <code>xpointer</code> are used to specify the target document.</p>
<p>Xlink links can be simple or extended. <span class="glossaryterm"><a id="sthref1444"></a>Simple</span> links are unidirectional, from a source to a target. <span class="glossaryterm"><a id="sthref1445"></a>Extended</span> links (sometimes called <span class="glossaryterm"><a id="sthref1446"></a>complex</span>) can model relationships between multiple documents, with different directionalities. Both simple and extended links can include link metadata. XLink links are represented in XML data using various attributes of the namespace <code>http://www.w3.org/1999/xlink</code>, which has the predefined prefix <code>xlink</code>. Simple links are represented in XML data using attribute <code>type</code> with value <code>simple</code>, that is, <code>xlink:type = "simple"</code>. Extended Xlink links are represented using <code>xlink:type = "extended"</code>.</p>
<p><span class="glossaryterm"><a id="sthref1447"></a>Third-party</span> extended Xlink links are not contained in any of the documents whose relationships they model. Third-party links can thus be used to relate documents, such as binary files, that, themselves, have no way of representing a link.</p>
<p>The source end of a simple Xlink link (that is, the document containing the link) must be an XML document. The target end of a simple link can be any document. There are no such restrictions for extended links. <a href="#CIHBJGJB">Example 23-3</a> shows examples of simple links. The link targets are represented using attribute <code>xlink:href</code>.</p>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="CIHHDFGI"></a>
<div id="ADXDB5335" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">XInclude: <a id="sthref1448"></a>Compound Documents</h2>
<p>XInclude is the W3C recommendation for the syntax and processing model for merging the infosets of multiple XML documents into a single infoset. Element <code>xi:include</code> is used to include another document, specifying its URI as the value of an <code>href</code> attribute. Element <code>xi:include</code> can be nested, so that an included document can itself include other documents.</p>
<p>(However, an inclusion cycle raises an error in Oracle XML&nbsp;DB. The resources are created, but an error is raised when the inclusions are expanded.)</p>
<p>XInclude thus provides for <span class="italic">compound</span> documents: repository file resources that include other XML documents or fragments. The included objects can be file resources in the same repository or documents or fragments outside the repository.</p>
<p>A book might be an example of a typical compound document, as managed by a content-management system. Each book includes chapter documents, which can each be managed as separate objects, with their own URLs. A chapter document can have its own metadata and access control, and it can be versioned. A book can include (reference) a specific version of a chapter document. The same chapter document can be included in multiple book documents, for reuse. Because inclusion is modeled using XInclude, content management is simplified. It is easy, for example, to replace one chapter in a book by another.</p>
<p><a href="#CIHBIICH">Example 23-1</a> illustrates an XML <code>Book</code> element that includes four documents. One of those documents, <code>part1.xml</code>, is also shown. Document <code>part1.xml</code> includes other documents, representing chapters.</p>
<div id="ADXDB5336" class="example">
<p class="titleinexample"><a id="CIHBIICH"></a>Example 23-1 XInclude Used in a Book Document to Include Parts and Chapters</p>
<p>The top-level document representing a book contains element <code>Book</code>.</p>
<pre>
&lt;Book xmlns:xi="http://www.w3.org/2001/XInclude"&gt;
  &lt;xi:include href=toc.xml"/&gt;
  &lt;xi:include href=part1.xml"/&gt;
  &lt;xi:include href=part2.xml"/&gt;
  &lt;xi:include href=index.xml"/&gt;
&lt;/Book&gt;
</pre>
<p>A major book part, file (resource) <code>part2.xml</code>, contains a <code>Part</code> element, which includes multiple chapter documents.</p>
<pre>
&lt;?xml version="1.0"?&gt;
&lt;Part xmlns:xi="http://www.w3.org/2001/XInclude"&gt;
  &lt;xi:include href="chapter5.xml"/&gt;
  &lt;xi:include href="chapter6.xml"/&gt;
  &lt;xi:include href="chapter8.xml"/&gt;
  &lt;xi:include href="chapter9.xml"/&gt;
&lt;/Part&gt;
</pre></div>
<!-- class="example" -->
<p>These are some additional features of XInclude:</p>
<ul>
<li>
<p>Inclusion of plain text &ndash; You can include unparsed, non-XML text using attribute <code>parse</code> with a value of <code>text</code>: <code>parse = "text"</code>.</p>
</li>
<li>
<p>Inclusion of XML fragments &ndash; You can use an <code>xpointer</code> attribute in an <code>xi:include</code> element to specify an XML fragment to include, instead of an entire document.</p>
</li>
<li>
<p>Fallback processing &ndash; In case of error, such as inability to access the URI of an included document, an <code>xi:include</code> syntax error, or an <code>xpointer</code> reference that returns null, XInclude performs the treatment specified by element <code>xi:fallback</code>. This generally specifies an alternative element to be included. The alternative element can itself use <code>xi:include</code> to include other documents.</p>
</li>
</ul>
</div>
<!-- class="sect1" -->
<a id="CIHGAFIB"></a>
<div id="ADXDB5337" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Using XLink with Oracle XML&nbsp;DB</h2>
<p>Oracle XML&nbsp;DB supports only simple XLink links, not extended XLink links.</p>
<p>When an XML document containing XLink attributes is added to Oracle XML&nbsp;DB Repository, either as resource content or as user-defined resource metadata, special processing can occur, depending on how the repository or individual repository resources are configured. Element <code>XLinkConfig</code> of the resource configuration document, <code>XDBResConfig.xsd</code>, determines this behavior. In particular, you can configure resources so that XLink links are ignored, or so that they are mapped to Oracle XML&nbsp;DB document links. In the latter case, configuration can specify that the document links are to be hard or weak. Hard and weak document links have the same properties as hard and weak repository links.</p>
<p>The privileges needed to create or update document links are the same as those needed to create or update repository links. Even partially updating a document requires the same privileges needed to delete the entire document and reinsert it. In particular, even if you update just one document link you must have delete and insert privileges for <span class="italic">each</span> of the documents linked by the document containing the link.</p>
<p>If configuration maps XLink links to document links, then, whenever a document containing XLink links is added to the repository, the XLink information is extracted and stored in a system link table. Link target (destination) locations are replaced by direct paths that are based on the resource OIDs. Configuration can also specify whether OID paths are to be replaced by named paths (URLs) upon document retrieval. Using OID paths instead of named paths generally offers a performance advantage when links are processed, including when resource contents are retrieved.</p>
<p>You can use XLink within resource content, but not within resource metadata.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="#CIHIGABA">"Examining XLink and XInclude Links using DOCUMENT_LINKS View"</a></p>
</li>
<li>
<p><a href="xdb_repos_meta.htm#CIAIGHHG">Chapter 29, "User-Defined Repository Metadata"</a></p>
</li>
<li>
<p><a href="xdb16fol.htm#BABFIFIH">"Hard Links and Weak Links"</a></p>
</li>
<li>
<p><a href="#CIHHJJCC">"Configuring Resources for XLink and XInclude"</a></p>
</li>
<li>
<p><a href="apphxdb.htm#BABEEABF">"XDBResConfig.xsd: XML Schema for Resource Configuration"</a></p>
</li>
</ul>
</div>
</div>
<!-- class="sect1" -->
<a id="CIHCGAID"></a>
<div id="ADXDB5338" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Using XInclude with Oracle XML&nbsp;DB</h2>
<p>Oracle XML&nbsp;DB supports XInclude 1.0 as the standard mechanism for managing compound documents. It does not support attribute <code>xpointer</code> and the inclusion of document fragments, however. Only complete documents can be included (using attribute <code>href</code>).</p>
<p>You can use XInclude to create XML documents that include existing content. You can also configure the implicit decomposition of non-schema-based XML documents, creating a set of repository resources that contain XInclude inclusion references.</p>
<p>The content of included documents must be XML data or plain text (with attribute <code>parse = "text"</code>). You cannot include binary content directly using XInclude, but you can use XLink to link to binary content.</p>
<p>You can use XInclude within resource content, but not within resource metadata.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#CIHIGABA">"Examining XLink and XInclude Links using DOCUMENT_LINKS View"</a></div>
<a id="CIHJBDGG"></a>
<div id="ADXDB5339" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Expanding Compound-Document Inclusions</h3>
<p>When you retrieve a compound document from Oracle XML&nbsp;DB Repository, you have a choice:</p>
<ul>
<li>
<p>Retrieve it as is, with the <code>xi:include</code> elements remaining as such. This is the default behavior.</p>
</li>
<li>
<p>Retrieve it after replacing the <code>xi:include</code> elements with their targets, recursively, that is, after expansion of all inclusions. An error is raised if any <code>xi:include</code> element cannot be resolved.</p>
</li>
</ul>
<p>To retrieve the document in expanded form, use PL/SQL constructor <code><a id="sthref1449"></a>XDBURIType</code>, passing a value of <code>'1'</code> or <code>'3'</code> as the second argument (flags). <a href="#CIHHFJDC">Example 23-2</a> illustrates this. These are the possible values for the <code><a id="sthref1450"></a>XDBURIType</code> constructor second argument:</p>
<ul>
<li>
<p><code>1</code> &ndash; Expand all XInclude inclusions before returning the result. If any such inclusion cannot be resolved according to the XInclude standard fallback semantics, then raise an error.</p>
</li>
<li>
<p><code>2</code> &ndash; Suppress all errors that might occur during document retrieval. This includes dangling <code>href</code> pointers.</p>
</li>
<li>
<p><code>3</code> &ndash; Same as <code>1</code> and <code>2</code> together.</p>
</li>
</ul>
<p><a href="#CIHHFJDC">Example 23-2</a> retrieves all documents that are under repository folder <code>public/bookdir</code>, expanding each inclusion:</p>
<div id="ADXDB5340" class="example">
<p class="titleinexample"><a id="CIHHFJDC"></a>Example 23-2 Expanding Document Inclusions using XDBURIType</p>
<pre>
SELECT XDBURIType(ANY_PATH, <span class="bold">'1'</span>).getXML() FROM RESOURCE_VIEW
  WHERE under_path(RES, '/public/bookdir') = 1;

XDBURITYPE(ANY_PATH,'1').GETXML()
---------------------------------
&lt;Book&gt;
  &lt;Title&gt;A book&lt;/Title&gt;
  &lt;Chapter id="1"&gt;
    &lt;Title&gt;Introduction&lt;/Title&gt;
    &lt;Body&gt;
      &lt;Para&gt;blah blah&lt;/Para&gt;
      &lt;Para&gt;foo bar&lt;/Para&gt;
    &lt;/Body&gt;
  &lt;/Chapter&gt;
  &lt;Chapter id="2"&gt;
    &lt;Title&gt;Conclusion&lt;/Title&gt;
    &lt;Body&gt;
      &lt;Para&gt;xyz xyz&lt;/Para&gt;
      &lt;Para&gt;abc abc&lt;/Para&gt;
    &lt;/Body&gt;
  &lt;/Chapter&gt;
&lt;/Book&gt;
 
&lt;Chapter id="1"&gt;
  &lt;Title&gt;Introduction&lt;/Title&gt;
  &lt;Body&gt;
    &lt;Para&gt;blah blah&lt;/Para&gt;
    &lt;Para&gt;foo bar&lt;/Para&gt;
  &lt;/Body&gt;
&lt;/Chapter&gt;
 
&lt;Chapter id="2"&gt;
  &lt;Title&gt;Conclusion&lt;/Title&gt;
  &lt;Body&gt;
    &lt;Para&gt;xyz xyz&lt;/Para&gt;
    &lt;Para&gt;abc abc&lt;/Para&gt;
  &lt;/Body&gt;
&lt;/Chapter&gt;
 
3 rows selected.
</pre></div>
<!-- class="example" -->
<p>(The result shown here corresponds to the resource <code>bookfile.xml</code> shown in <a href="#CIHJIACF">Example 23-8</a>, together with its included resources, <code>chap1.xml</code> and <code>chap2.xml</code>.)</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="#CIHJCHBF">"Versioning, Locking, and Controlling Access to Compound Documents"</a> for information about access control during expansion</p>
</li>
<li>
<p><a class="olink ARPLS800" href="../../appdev.112/e40758/t_dburi.htm#ARPLS800"><span class="italic">Oracle Database PL/SQL Packages and Types Reference</span></a> for more information about <code>XDBURIType</code></p>
</li>
</ul>
</div>
</div>
<!-- class="sect2" -->
<div id="ADXDB5341" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref1451"></a>
<h3 class="sect2">Validating Compound Documents</h3>
<p>You validate a compound document the way you would any XML document. However, you can choose to validate it in either form: with <code>xi:include</code> elements as is or after replacing them with their targets.</p>
<p>You can also choose to use one XML schema to validate the unexpanded form, and another to validate the expanded form. For example, you might use one XML schema to validate without first expanding, in order to set up storage structures, and then use another XML schema to validate the expanded document after it is stored.</p>
</div>
<!-- class="sect2" -->
<div id="ADXDB5342" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref1452"></a>
<h3 class="sect2">Updating Compound Documents</h3>
<p>You can update a compound document just as you would update any resource. This replaces the resource with a new value. It thus corresponds to a resource deletion followed by a resource insertion. This means, in particular, that any <code>xi:include</code> elements in the original resource are deleted. Any <code>xi:include</code> elements in the replacement (inserted) document are processed as usual, according to the configuration defined at the time of insertion.</p>
</div>
<!-- class="sect2" -->
<a id="CIHJCHBF"></a>
<div id="ADXDB5343" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Versioning, Locking, and Controlling Access to Compound Documents</h3>
<p>The components of a compound document are separate resources. They are versioned and locked independently, and their access is controlled independently.</p>
<ul>
<li>
<p>Document links to version-controlled resources (VCRs) always resolve to the latest version of the target resource, or the selected version within the current workspace. You can, however, explicitly refer to any specific version, by identifying the target resource by its OID-based path.</p>
</li>
<li>
<p>Locking a document that contains <code>xi:include</code> elements does not also lock the included documents. Locking an included document does not also lock documents that include it.</p>
</li>
<li>
<p>The access control list (ACL) on each referenced document is checked whenever you retrieve a compound document with expansion. This is done using the privileges of the current user (invoker's rights). If privileges are insufficient for any of the included documents, the expansion is canceled and an error is raised.</p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="#CIHJBDGG">"Expanding Compound-Document Inclusions"</a></p>
</li>
<li>
<p><a href="xdb17ver.htm#g1046246">Chapter 24, "Managing Resource Versions"</a> for information about VCRs</p>
</li>
<li>
<p><a href="xdb21sec.htm#g1040139">Chapter 27, "Repository Access Control"</a> for information about resource ACLs</p>
</li>
</ul>
</div>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="CIHIGABA"></a>
<div id="ADXDB5344" class="sect1">
<h2 class="sect1">Examining XLink and XInclude Links using DOCUMENT_LINKS View</h2>
<p>You can query the read-only public view <code><a id="sthref1453"></a><a id="sthref1454"></a>DOCUMENT_LINKS</code> to obtain system information about document links derived from both XLink and XInclude links. The information in this view includes the following columns, for each link:</p>
<ul>
<li>
<p><code>SOURCE_ID</code> &ndash; The source resource OID. <code>RAW(16)</code>.</p>
</li>
<li>
<p><code>TARGET_ID</code> &ndash; The target resource OID. <code>RAW(16)</code>.</p>
</li>
<li>
<p><code>TARGET_PATH</code> &ndash; Always <code>NULL</code>. Reserved for future use. <code>VARCHAR2(4000)</code>.</p>
</li>
<li>
<p><code>LINK_TYPE</code> &ndash; The document link type: <code>Hard</code> or <code>Weak</code>. <code>VARCHAR2(8)</code>.</p>
</li>
<li>
<p><code>LINK_FORM</code> &ndash; Whether the original link was of form <code>XLink</code> or <code>XInclude</code>. <code>VARCHAR2(8)</code>.</p>
</li>
<li>
<p><code>SOURCE_TYPE</code> &ndash; Always <code>Resource Content</code>. <code>VARCHAR2(17)</code>.</p>
</li>
</ul>
<p>You can obtain information about a resource from this view only if one of the following conditions holds:</p>
<ul>
<li>
<p>The resource is a link source, and you have the privilege <code>read-contents</code> or <code>read-properties</code> on it.</p>
</li>
<li>
<p>The resource is a link target, and you have the privilege <code>read-properties</code> on it.</p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink REFRN29078" href="../../server.112/e40402/statviews_5122.htm#REFRN29078"><span class="italic">Oracle Database Reference</span></a> for more information on public view <code>DOCUMENT_LINKS</code></div>
<div id="ADXDB5345" class="sect2"><a id="sthref1455"></a>
<h3 class="sect2">Querying DOCUMENT_LINKS for XLink Information</h3>
<p><a href="#CIHBJGJB">Example 23-3</a> shows how XLink links are treated when resources are created, and how to obtain system information about document links from view <code>DOCUMENT_LINKS</code>. It assumes that the folder containing the resource has been configured to map XLink links to document hard links.</p>
<div id="ADXDB5346" class="example">
<p class="titleinexample"><a id="CIHBJGJB"></a>Example 23-3 Querying Document Links Mapped From XLink Links</p>
<pre>
DECLARE
  b BOOLEAN;
BEGIN
  b := DBMS_XDB.createResource(
         '/public/hardlinkdir/po101.xml', 
         '&lt;PurchaseOrder id="101" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;
            &lt;Company xlink:type="simple" 
                     xlink:href="/public/hardlinkdir/oracle.xml"&gt;Oracle Corporation&lt;/Company&gt;
            &lt;Approver xlink:type="simple"
                      xlink:href="/public/hardlinkdir/quine.xml"&gt;Willard Quine&lt;/Approver&gt;
          &lt;/PurchaseOrder&gt;');
 
  b := DBMS_XDB.createResource(
         '/public/hardlinkdir/po102.xml', 
         '&lt;PurchaseOrder id="102" xmlns:xlink="http://www.w3.org/1999/xlink"&gt;
            &lt;Company xlink:type="simple" 
                     xlink:href="/public/hardlinkdir/oracle.xml"&gt;Oracle Corporation&lt;/Company&gt;
            &lt;Approver xlink:type="simple" 
                      xlink:href="/public/hardlinkdir/curry.xml"&gt;Haskell Curry&lt;/Approver&gt;
            &lt;ReferencePO xlink:type="simple"
                         xlink:href="/public/hardlinkdir/po101.xml"/&gt;
          &lt;/PurchaseOrder&gt;');
END;
/

SELECT r1.ANY_PATH source, r2.ANY_PATH target, dl.LINK_TYPE, dl.LINK_FORM
  FROM DOCUMENT_LINKS dl, RESOURCE_VIEW r1, RESOURCE_VIEW r2 
  WHERE dl.SOURCE_ID = r1.RESID and dl.TARGET_ID = r2.RESID;

SOURCE                        TARGET                         LINK_TYPE LINK_FORM
----------------------------- ------------------------------ --------- ---------
/public/hardlinkdir/po101.xml /public/hardlinkdir/oracle.xml Hard      XLink
/public/hardlinkdir/po101.xml /public/hardlinkdir/quine.xml  Hard      XLink
/public/hardlinkdir/po102.xml /public/hardlinkdir/oracle.xml Hard      XLink
/public/hardlinkdir/po102.xml /public/hardlinkdir/curry.xml  Hard      XLink
/public/hardlinkdir/po102.xml /public/hardlinkdir/po101.xml  Hard      XLink
</pre></div>
<!-- class="example" -->
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#CIHGBEAB">"Mapping XInclude Links to Hard Document Links, with OID Retrieval"</a> for an example of configuring a folder to map XLink links to hard links</div>
</div>
<!-- class="sect2" -->
<div id="ADXDB5347" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref1456"></a>
<h3 class="sect2">Querying DOCUMENT_LINKS for XInclude Information</h3>
<p><a href="#CIHDHGAE">Example 23-4</a> queries view <code>DOCUMENT_LINKS</code> to show all document links.</p>
<div id="ADXDB5348" class="example">
<p class="titleinexample"><a id="CIHDHGAE"></a>Example 23-4 Querying Document Links Mapped From XInclude Links</p>
<pre>
DECLARE
  ret BOOLEAN;
BEGIN
  ret := DBMS_XDB.createResource(
           '/public/hardlinkdir/book.xml',
           '&lt;Book xmlns:xi="http://www.w3.org/2001/XInclude"&gt;
              &lt;xi:include href="/public/hardlinkdir/toc.xml"/&gt;
              &lt;xi:include href="/public/hardlinkdir/part1.xml"/&gt;
              &lt;xi:include href="/public/hardlinkdir/part2.xml"/&gt;
              &lt;xi:include href="/public/hardlinkdir/index.xml"/&gt;
            &lt;/Book&gt;');
END;

SELECT r1.ANY_PATH source, r2.ANY_PATH target, dl.LINK_TYPE, dl.LINK_FORM
  FROM DOCUMENT_LINKS dl, RESOURCE_VIEW r1, RESOURCE_VIEW r2
  WHERE dl.SOURCE_ID = r1.RESID and dl.TARGET_ID = r2.RESID;

SOURCE                       TARGET                        LINK_TYPE LINK_FORM
------                       ------                        --------- ---------
/public/hardlinkdir/book.xml /public/hardlinkdir/toc.xml   Hard      XInclude
/public/hardlinkdir/book.xml /public/hardlinkdir/part1.xml Hard      XInclude
/public/hardlinkdir/book.xml /public/hardlinkdir/part2.xml Hard      XInclude
/public/hardlinkdir/book.xml /public/hardlinkdir/index.xml Hard      XInclude
</pre></div>
<!-- class="example" --></div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="CIHHJJCC"></a>
<div id="ADXDB5349" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Configuring Resources for XLink and XInclude</h2>
<p>You configure XLink and XInclude treatment for Oracle XML&nbsp;DB Repository resources as you would configure any other treatment of repository resources&thinsp;&mdash;&thinsp;see <a href="xdb_repos_config.htm#BABFEBBI">"Configuring a Resource"</a>. The rest of this section describes the resource configuration file that you use as a resource to configure XLink and XInclude processing for other resources.</p>
<p>A resource configuration file is an XML file that conforms to the XML schema <code>XDBResConfig.xsd</code>, which is accessible in Oracle XML&nbsp;DB Repository at path <code>/sys/schemas/PUBLIC/xmlns.oracle.com/xdb/XDBResConfig.xsd</code>. You use elements <code>XLinkConfig</code> and <code>XIncludeConfig</code>, children of element <code>ResConfig</code>, to configure XLink and XInclude treatment, respectively. If one of these elements is absent, then there is no treatment of the corresponding type of links.</p>
<p>Both <code>XLinkConfig</code> and <code>XIncludeConfig</code> can have attribute <code>UnresolvedLink</code> and child elements <code>LinkType</code> and <code>PathFormat</code>. Element <code>XIncludeConfig</code> can also have child element <code>ConflictRule</code>. If the <code>LinkType</code> element content is <code>None</code>, however, then there must be no <code>PathFormat</code> or <code>ConflictRule</code> element.</p>
<p>You cannot define any preconditions for <code>XLinkConfig</code> or <code>XIncludeConfig</code>. During repository resource creation, the <code>ResConfig</code> element of the parent folder determines the treatment of XLink and XInclude links for the new resource. If the parent folder has no <code>ResConfig</code> element, then the repository-wide configuration applies.</p>
<p>Any change to the resource configuration file applies only to documents that are created or updated after the configuration-file change. To process links in existing documents, use PL/SQL procedure <code>DBMS_XDB.processLinks</code>, after specifying the appropriate resource configuration parameters.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="#CIHGBCJA">"Managing XLink and XInclude Links using DBMS_XDB.processLinks"</a></p>
</li>
<li>
<p><a href="xdb_repos_config.htm#BABJDDHH">Chapter 22, "Configuring Oracle XML&nbsp;DB Repository"</a></p>
</li>
</ul>
</div>
<a id="CIHJBAJD"></a>
<div id="ADXDB5350" class="sect2">
<h3 class="sect2">Configuring Treatment of <a id="sthref1457"></a><a id="sthref1458"></a><a id="sthref1459"></a><a id="sthref1460"></a>Unresolved Links: UnresolvedLink Attribute</h3>
<p>A <code>LinkConfig</code> element can have an <code>UnresolvedLink</code> attribute with a value of <code>Error</code> (default value) or <code>Skip</code>. This determines what happens if an XLink or XInclude link cannot be resolved at the time of document insertion into the repository (resource creation). <code>Error</code> means raise an error and roll back the current operation. <code>Skip</code> means skip any treatment of the XLink or XInclude link. Skipping treatment creates the resource with no corresponding document links, and sets the resource's <code>HasUnresolvedLinks</code> attribute to <code>true</code>, to indicate that the resource has unresolved links.</p>
<p>Using <code>Skip</code> as the value of attribute <code>UnresolvedLink</code> can be especially useful when you create a resource that contains a cycle of weak links, which would otherwise lead to unresolved-link errors during resource creation. After the resource and all of its linked resources have been created, you can use PL/SQL procedure <code>DBMS_XDB.processLinks</code> to process the skipped links. If all XLink and XInclude links have been resolved by this procedure, then attribute <code>HasUnresolvedLinks</code> is set to <code>false</code>.</p>
<p>Resource attribute <code>HasUnresolvedLinks</code> is also set to <code>true</code> for a resource that has a weak link to a resource that has been deleted. Deleting a resource thus effectively also deletes any weak links pointing to that resource. In particular, whenever the last hard link to a resource is deleted, the resource is itself deleted, and all resources that point to the deleted resource with a weak link have attribute <code>HasUnresolvedLinks</code> set to <code>true</code>.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="xdb16fol.htm#BABFIFIH">"Hard Links and Weak Links"</a></p>
</li>
<li>
<p><a href="#CIHGBCJA">"Managing XLink and XInclude Links using DBMS_XDB.processLinks"</a></p>
</li>
</ul>
</div>
</div>
<!-- class="sect2" -->
<div id="ADXDB5351" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref1461"></a>
<h3 class="sect2">Configuring the Document Links to Create: LinkType Element</h3>
<p>You use the <code>LinkType</code> element of a resource configuration file to specify the type of document link to be created whenever an XLink or XInclude link is encountered when a document is stored in Oracle XML&nbsp;DB Repository. The <code>LinkType</code> element has these possible values (element content):</p>
<ul>
<li>
<p><code>None</code> (default) &ndash; Ignore XLink or XInclude links: create no corresponding document links.</p>
</li>
<li>
<p><code>Hard</code> &ndash; Map XLink or XInclude links to hard document links in repository documents.</p>
</li>
<li>
<p><code>Weak</code> &ndash; Map XLink or XInclude links to weak document links in repository documents.</p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="#CIHGBEAB">Example 23-5</a></p>
</li>
<li>
<p><a href="#CIHIAGIB">Example 23-6</a></p>
</li>
</ul>
</div>
</div>
<!-- class="sect2" -->
<div id="ADXDB5352" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref1462"></a>
<h3 class="sect2">Configuring the Path Format for Retrieval: PathFormat Element</h3>
<p>You use the <code>PathFormat</code> element of a resource configuration file to specify the path format to be used when retrieving documents with <code>xlink:href</code> or <code>xi:include:href</code> attributes. The <code>PathFormat</code> element has these possible values (element content) for hard and weak document links:</p>
<ul>
<li>
<p><code>OID</code> (default) &ndash; Map XLink or XInclude <code>href</code> paths to OID-based paths in repository documents&thinsp;&mdash;&thinsp;that is, use OIDs directly.</p>
</li>
<li>
<p><code>Named</code> &ndash; Map XLink or XInclude <code>href</code> paths to named paths (URLs) in repository documents. The path is computed from the internal OID when the document is retrieved, so retrieval can be slower than in the case of using OID paths directly.</p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="#CIHGBEAB">Example 23-5</a></p>
</li>
<li>
<p><a href="#CIHIAGIB">Example 23-6</a></p>
</li>
</ul>
</div>
</div>
<!-- class="sect2" -->
<div id="ADXDB5354" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref1463"></a>
<h3 class="sect2">Configuring Conflict-Resolution for XInclude: ConflictRule Element</h3>
<p>You use the <code>ConflictRule</code> element of a resource configuration file to specify the conflict-resolution rules to use if the path computed for a component document is already present in Oracle XML&nbsp;DB Repository. The <code>ConflictRule</code> element has these possible values (element content):</p>
<ul>
<li>
<p><code>Error</code> (default) &ndash; Raise an error.</p>
</li>
<li>
<p><code>Overwrite</code> &ndash; Update the document targeted by the existing repository path, replacing it with the document to be included. If the existing document is a version-controlled resource, then it must already be checked out, unless it is autoversioned. Otherwise, an error is raised.</p>
</li>
<li>
<p><code>Syspath</code> &ndash; Change the path to the included document to a new, system-defined path.</p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="xdb17ver.htm#g1046246">Chapter 24, "Managing Resource Versions"</a> for information about version-controlled resources</div>
</div>
<!-- class="sect2" -->
<a id="CIHGIHII"></a>
<div id="ADXDB5355" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Configuring Decomposition of Documents using XInclude: SectionConfig Element</h3>
<p>You use the <code>SectionConfig</code> element of a resource configuration file to specify how non-schema-based XML documents are to be decomposed when added to Oracle XML&nbsp;DB Repository, to create a set of resources that contain XInclude inclusion references. You use simple XPath expressions in the resource configuration file to identify which parts of a document to map to separate resources, and which resources to map them to.</p>
<p>Element <code>SectionConfig</code> contains one or more <code>Section</code> elements, each of which contains the following child elements:</p>
<ul>
<li>
<p><code>sectionPath</code> &ndash; Simple XPath 1.0 expression that identifies a section root. This must use only child and descendant axes, and it must not use wildcards.</p>
</li>
<li>
<p><code>documentPath</code> (optional) &ndash; Simple XPath 1.0 expression that is evaluated to identify the resources to be created from decomposing the document according to <code>sectionPath</code>. The XPath expression must use only child, descendant, and attribute axes.</p>
</li>
<li>
<p><code>namespace</code> (optional) &ndash; Namespace in effect for <code>sectionPath</code> and <code>documentPath</code>.</p>
</li>
</ul>
<p>Element <code>Section</code> also has a <code>type</code> attribute that specifies the type of section to be created. Value <code>Document</code> means create a document. The default value, <code>None</code>, means do not create anything. Using <code>None</code> is equivalent to removing the <code>SectionConfig</code> element. You can thus set the <code>type</code> attribute to <code>None</code> to disable a <code>SectionConfig</code> element temporarily, without removing it, and then set it back to <code>Document</code> to enable it again.</p>
<p>If an element in the document being added to the repository matches more than one <code>sectionPath</code> value, only the first such expression (in document order) is used.</p>
<p>If no <code>documentPath</code> element is present, then the resource created has a system-defined name, and is put into the folder specified for the original document.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="#CIHFEBIG">Example 23-7, "Configuring XInclude Document Decomposition"</a></p>
</li>
<li>
<p><a href="#CIHJIACF">Example 23-8, "Repository Document, Showing Generated xi:include Elements"</a></p>
</li>
</ul>
</div>
</div>
<!-- class="sect2" -->
<div id="ADXDB5356" class="sect2"><a id="sthref1464"></a>
<h3 class="sect2">XLink and XInclude Configuration Examples</h3>
<p><a href="#CIHGBEAB">Example 23-5</a> shows a configuration-file section that configures XInclude treatment, mapping XInclude attributes to Oracle XML&nbsp;DB Repository hard document links. Repository paths in retrieved resources are configured to be based on resource OIDs.</p>
<div id="ADXDB5357" class="example">
<p class="titleinexample"><a id="CIHGBEAB"></a>Example 23-5 Mapping XInclude Links to Hard Document Links, with OID Retrieval</p>
<pre>
&lt;ResConfig&gt;
  . . .
  &lt;XIncludeConfig UnresolvedLink="Skip"&gt;
    &lt;LinkType&gt;<span class="bold">Hard</span>&lt;/LinkType&gt;
    &lt;PathFormat&gt;<span class="bold">OID</span>&lt;/PathFormat&gt;
  &lt;/XIncludeConfig&gt;
  . . .
&lt;/ResConfig&gt;
</pre></div>
<!-- class="example" -->
<p><a href="#CIHIAGIB">Example 23-6</a> shows an <code>XLinkConfig</code> section that maps XLink links to weak document links in the repository. In this case, retrieval of a document uses named paths (URLs).</p>
<div id="ADXDB5358" class="example">
<p class="titleinexample"><a id="CIHIAGIB"></a>Example 23-6 Mapping XLInk Links to Weak Links, with Named-Path Retrieval</p>
<pre>
&lt;ResConfig&gt;
  . . .
  &lt;XLinkConfig UnresolvedLink="Skip"&gt;
    &lt;LinkType&gt;<span class="bold">Weak</span>&lt;/LinkType&gt;
    &lt;PathFormat&gt;<span class="bold">Named</span>&lt;/PathFormat&gt;
  &lt;/XLinkConfig&gt;
  . . .
&lt;/ResConfig&gt;
</pre></div>
<!-- class="example" -->
<p><a href="#CIHFEBIG">Example 23-7</a> shows a <code>SectionConfig</code> section that specifies that each <code>Chapter</code> element in an input document is to become a separate repository file, when the input document is added to Oracle XML&nbsp;DB Repository. The repository path for the resulting file is specified using configuration element <code>documentPath</code>, and this path is relative to the location of the resource configuration file of <a href="#CIHIAGIB">Example 23-6</a>.</p>
<div id="ADXDB5359" class="example">
<p class="titleinexample"><a id="CIHFEBIG"></a>Example 23-7 Configuring XInclude Document Decomposition</p>
<pre>
&lt;ResConfig&gt;
  . . .
  &lt;SectionConfig&gt;
    &lt;Section type = "Document"&gt;
      &lt;sectionPath&gt;//Chapter&lt;/sectionPath&gt;
      &lt;documentPath&gt;concat("chap", @id, ".xml")&lt;/documentPath&gt;
    &lt;/Section&gt;
  &lt;/SectionConfig&gt;
  . . .
&lt;/ResConfig&gt;
</pre></div>
<!-- class="example" -->
<p>The XPath expression here uses XPath function <code>concat</code> to concatenate the following strings to produce the resulting repository path to use:</p>
<ul>
<li>
<p><code>chap</code> &ndash; (prefix) <code>chap</code>.</p>
</li>
<li>
<p>The value of attribute <code>id</code> of element <code>Chapter</code> in the input document.</p>
</li>
<li>
<p><code>.xml</code> as a file extension.</p>
</li>
</ul>
<p>For example, a repository path of <code>chap27.xml</code> would result from an input document with a <code>Chapter</code> element that has an <code>id</code> attribute with value <code>27</code>:</p>
<pre>
&lt;Chapter id="27"&gt; ... &lt;/Chapter&gt;
</pre>
<p>If the configuration document of <a href="#CIHIAGIB">Example 23-6</a> and the book document that contains the <code>XInclude</code> elements are in repository folder <code>/public/bookdir</code>, then the individual chapter files generated from <code>XInclude</code> decomposition are in files <code>/public/bookdir/chap</code><code><span class="codeinlineitalic">N</span></code><code>.xml</code>, where the values of <code><span class="codeinlineitalic">N</span></code> are the values of the <code>id</code> attributes of <code>Chapter</code> elements.</p>
<p>The book document that is added to the repository is derived from the input book document. The embedded <code>Chapter</code> elements in the input book document are replaced by <code>xi:include</code> elements that reference the generated chapter documents&thinsp;&mdash;&thinsp;<a href="#CIHJIACF">Example 23-8</a> illustrates this.</p>
<div id="ADXDB5360" class="example">
<p class="titleinexample"><a id="CIHJIACF"></a>Example 23-8 Repository Document, Showing Generated xi:include Elements</p>
<pre>
SELECT XDBURIType('/public/bookdir/bookfile.xml').getclob() FROM DUAL;
 
XDBURITYPE('/PUBLIC/BOOKDIR/BOOKFILE.XML').GETCLOB()
--------------------------------------------------------------------------------
&lt;Book&gt;
  &lt;Title&gt;A book&lt;/Title&gt;
  &lt;xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="/public/bookdir/chap1.xml"/&gt;
  &lt;xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="/public/bookdir/chap2.xml"/&gt;
&lt;/Book&gt;
</pre></div>
<!-- class="example" -->
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="xdb_repos_config.htm#BABJDDHH">Chapter 22, "Configuring Oracle XML&nbsp;DB Repository"</a></p>
</li>
<li>
<p><a href="apphxdb.htm#BABEEABF">XDBResConfig.xsd: XML Schema for Resource Configuration</a></p>
</li>
<li>
<p><a href="#CIHGIHII">"Configuring Decomposition of Documents using XInclude: SectionConfig Element"</a></p>
</li>
</ul>
</div>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="CIHGBCJA"></a>
<div id="ADXDB5361" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Managing XLink and XInclude Links using DBMS_XDB.processLinks</h2>
<p>You can use PL/SQL procedure <code>DBMS_XDB.processLinks</code> to manually process all XLink and XInclude links in a single document or in all documents of a folder. Pass <code>RECURSIVE</code> as the mode argument to this procedure, if you want to process all hard-linked subfolders recursively. All XLink and XInclude links are processed according to the corresponding configuration parameters. If any of the links within a resource cannot be resolved, the resource's <code>HasUnresolvedLinks</code> attribute is set to <code>true</code>, to indicate that the resource has unresolved links. The default value of attribute <code>HasUnresolvedLinks</code> is <code>false</code>.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#CIHJBAJD">"Configuring Treatment of Unresolved Links: UnresolvedLink Attribute"</a></div>
</div>
<!-- class="sect1" --></div>
<!-- class="chapter" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment1019">
<tr>
<td class="cellalignment1028">
<table class="cellalignment1024">
<tr>
<td class="cellalignment1023"><a href="xdb_repos_config.htm"><img width="24" height="24" src="../../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment1023"><a href="xdb17ver.htm"><img width="24" height="24" src="../../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;2002, 2014,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment1030">
<table class="cellalignment1022">
<tr>
<td class="cellalignment1023"><a href="../../index.htm"><img width="24" height="24" src="../../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment1023"><a href="../../nav/portal_booklist.htm"><img width="24" height="24" src="../../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment1023"><a href="toc.htm"><img width="24" height="24" src="../../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment1023"><a href="index.htm"><img width="24" height="24" src="../../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment1023"><a href="../../nav/mindx.htm"><img width="24" height="24" src="../../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment1023"><a href="../../dcommon/html/feedback.htm"><img width="24" height="24" src="../../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>
</body>
</html>
