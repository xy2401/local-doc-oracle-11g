<!DOCTYPE html>
<html lang="en" >
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1">
<meta charset="utf-8">
<title>Using the XML Class Generator for C++</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Merged Version 1032" />
<meta name="dcterms.created" content="2014-12-05T14:20:39Z" />
<meta name="robots" content="all" />
<meta name="dcterms.title" content="XML Developer's Kit Programmer's Guide" />
<meta name="dcterms.identifier" content="E23582-06" />
<meta name="dcterms.isVersionOf" content="ADXDK" />
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;2001, 2014,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved." />
<link rel="Start" href="../../index.htm" title="Home" type="text/html" />
<link rel="Copyright" href="../../dcommon/html/cpyr.htm" title="Copyright" type="text/html" />

<script type="application/javascript"  src="../../dcommon/js/headfoot.js"></script>
<script type="application/javascript"  src="../../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html" />
<link rel="Index" href="index.htm" title="Index" type="text/html" />
<link rel="Glossary" href="glossary.htm" title="Glossary" type="text/html" />
<link rel="Prev" href="adx_cp_xpath.htm" title="Previous" type="text/html" />
<link rel="Next" href="adx_pt_ref.htm" title="Next" type="text/html" />
<link rel="alternate" href="../e23582.pdf" title="PDF version" type="application/pdf" />
<link rel="schema.dcterms" href="http://purl.org/dc/terms/" />
<link rel="stylesheet" href="../../dcommon/css/fusiondoc.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/header.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/footer.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/fonts.css">
<link rel="stylesheet" href="../../dcommon/css/foundation.css">
<link rel="stylesheet" href="../../dcommon/css/codemirror.css">
<link rel="stylesheet" type="text/css" title="Default" href="../../nav/css/html5.css">
<link rel="stylesheet" href="../../dcommon/css/respond-480-tablet.css">
<link rel="stylesheet" href="../../dcommon/css/respond-768-laptop.css">
<link rel="stylesheet" href="../../dcommon/css/respond-1140-deskop.css">
<script type="application/javascript" src="../../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">39/47</span> <!-- End Header -->
<div id="ADXDK2300" class="chapter"><a id="g1007411"></a> <a id="i1004957"></a>
<h1 class="chapter"><span class="secnum">29</span> Using the XML <a id="sthref613"></a>Class Generator for C++ <a id="sthref614"></a></h1>
<p>This chapter contains these topics:</p>
<ul>
<li>
<p><a href="#i1003440">Accessing XML C++ Class Generator</a></p>
</li>
<li>
<p><a href="#i1003448">Using XML C++ Class Generator</a></p>
</li>
<li>
<p><a href="#i1004763">Using the XML C++ Class Generator Command-Line Utility</a></p>
</li>
<li>
<p><a href="#i1004773">Using the XML C++ Class Generator Examples</a></p>
</li>
</ul>
<a id="i1003440"></a>
<div id="ADXDK19939" class="sect1">
<h2 class="sect1">Accessing XML C++ Class Generator</h2>
<p>The XML C++ class generator is provided with Oracle Database.</p>
</div>
<!-- class="sect1" -->
<a id="i1003448"></a>
<div id="ADXDK19940" class="sect1">
<h2 class="sect1">Using XML C++ Class Generator</h2>
<p>The XML C++ class generator creates source files from an XML DTD or XML Schema. The class generator takes the Document Type Definition (DTD) or the XML Schema, and generates classes for each defined element. Those classes are then used in a C++ program to construct XML documents conforming to the DTD.</p>
<p>This is useful when an application wants to send an XML message to another application based on an agreed-upon DTD or XML Schema, or as the back end of a Web form to construct an XML document. Using these classes, C++ applications can construct, validate, and print XML documents that comply with the input.</p>
<p>The class generator works in conjunction with the Oracle XML parser for C++, which parses the input and passes the parsed document to the class generator.</p>
<div id="ADXDK19941" class="sect2"><a id="sthref615"></a>
<h3 class="sect2">External DTD Parsing</h3>
<p>The XML C++ class generator can also parse an external DTD directly without requiring a complete (dummy) document by using the Oracle XML parser for C++ routine <code dir="ltr">xmlparsedtd()</code>.</p>
<p>The provided command-line program <code dir="ltr">xmlcg</code> has a '-d' option that is used to parse external DTDs.</p>
</div>
<!-- class="sect2" -->
<div id="ADXDK19942" class="sect2"><a id="sthref616"></a>
<h3 class="sect2">Error Message Files</h3>
<p>Error message files are provided in the <code dir="ltr">mesg/</code> subdirectory. The messages files also exist in the <code dir="ltr">$ORACLE_HOME/xdk/mesg</code> directory. You may set the environment variable <code dir="ltr">ORA_XML_MESG</code> to point to the absolute path of the <code dir="ltr">mesg</code> subdirectory although this not required.</p>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="i1004763"></a>
<div id="ADXDK19943" class="sect1">
<h2 class="sect1">Using the XML C++ Class Generator Command-Line Utility<a id="sthref617"></a></h2>
<p>The standalone class generator can be called as an executable by invoking <code dir="ltr">bin/xmlcg</code>.</p>
<ol>
<li>
<p>You can run the C++ class generator from the command line as follows:</p>
<pre dir="ltr">
xmlcg [options] <span class="italic">input_file</span>
</pre>
<p><a href="#g1015836">Table 29-1</a> describes the options for the utility.</p>
<div id="ADXDK19944" class="tblformal">
<p class="titleintable"><a id="sthref618"></a><a id="g1015836"></a>Table 29-1 C++ Class Generator Options</p>
<table class="cellalignment1214" title="C++ Class Generator Options " summary="Option and Meaning are the columns." dir="ltr">
<thead>
<tr class="cellalignment1205">
<th class="cellalignment1212" id="r1c1-t2">Option</th>
<th class="cellalignment1212" id="r1c2-t2">Meaning</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1205">
<td class="cellalignment1213" id="r2c1-t2" headers="r1c1-t2">
<p><code dir="ltr">-d</code> <code dir="ltr"><span class="codeinlineitalic">name</span></code></p>
</td>
<td class="cellalignment1213" headers="r2c1-t2 r1c2-t2">
<p>Input is an external DTD or a DTD file. Generates <code dir="ltr">name.cpp</code> and <code dir="ltr">name.h.</code></p>
</td>
</tr>
<tr class="cellalignment1205">
<td class="cellalignment1213" id="r3c1-t2" headers="r1c1-t2">
<p><code dir="ltr">-o</code> <code dir="ltr"><span class="codeinlineitalic">directory</span></code></p>
</td>
<td class="cellalignment1213" headers="r3c1-t2 r1c2-t2">
<p>Output directory for generated files (the default is the current directory).</p>
</td>
</tr>
<tr class="cellalignment1205">
<td class="cellalignment1213" id="r4c1-t2" headers="r1c1-t2">
<p><code dir="ltr">-e</code> <code dir="ltr"><span class="codeinlineitalic">encoding</span></code></p>
</td>
<td class="cellalignment1213" headers="r4c1-t2 r1c2-t2">
<p>Default input file encoding.</p>
</td>
</tr>
<tr class="cellalignment1205">
<td class="cellalignment1213" id="r5c1-t2" headers="r1c1-t2">
<p><code dir="ltr">-h</code></p>
</td>
<td class="cellalignment1213" headers="r5c1-t2 r1c2-t2">
<p>Show this usage help.</p>
</td>
</tr>
<tr class="cellalignment1205">
<td class="cellalignment1213" id="r6c1-t2" headers="r1c1-t2">
<p>-v</p>
</td>
<td class="cellalignment1213" headers="r6c1-t2 r1c2-t2">
<p>Show the class generator version validator options.</p>
</td>
</tr>
<tr class="cellalignment1205">
<td class="cellalignment1213" id="r7c1-t2" headers="r1c1-t2">
<p>-s <span class="italic">name</span></p>
</td>
<td class="cellalignment1213" headers="r7c1-t2 r1c2-t2">
<p>Input is an XML Schema file with the given name. Generates name.cpp and name.h.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<p>input_file name is the name of the parsed XML document with <code dir="ltr">&lt;!DOCTYPE&gt;</code> definitions, or parsed DTD, or an XML Schema document. The XML document must have an associated DTD.</p>
<p>The DTD input to the XML C++ class generator is an XML document containing a DTD, or an external DTD. The document body itself is ignored; only the DTD is relevant, though the document must conform to the DTD.</p>
</li>
<li>
<p>If invalid options, or no input is provided, a usage message with the preceding information is output.</p>
</li>
<li>
<p>Two source files are output, a <span class="italic">name</span>.h header file and a C++ file, <span class="italic">name</span>.cpp. These are named after the DTD file.</p>
</li>
<li>
<p>The output files are typically used to generate XML documents.</p>
</li>
</ol>
<p>Constructors are provided for each class (element) that allow an object to be created in the following two ways:</p>
<ul>
<li>
<p>Initially empty, then adding the children or data after the initial creation</p>
</li>
<li>
<p>Created with the initial full set of children or initial data</p>
</li>
</ul>
<p>A method is provided for <code dir="ltr">#PCDATA</code> (and Mixed) elements to set the data and, when appropriate, set an element's attributes.</p>
<a id="i1005194"></a>
<div id="ADXDK19945" class="sect2">
<h3 class="sect2">Input to the XML C++ Class Generator</h3>
<p>The input is an XML document containing a DTD. The document body itself is ignored; only the DTD is relevant, though the dummy document must conform to the DTD. The underlying XML parser only accepts file names for the document and associated external entities.</p>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="i1004773"></a>
<div id="ADXDK19946" class="sect1">
<h2 class="sect1">Using the XML C++ Class Generator Examples</h2>
<p><a href="#g1005605">Table 29-2</a> lists the demo XML C++ class generator files:</p>
<div id="ADXDK19947" class="tblformal">
<p class="titleintable"><a id="sthref619"></a><a id="g1005605"></a>Table 29-2 XML C++ Class Generator Files</p>
<table class="cellalignment1214" title="XML C++ Class Generator Files " summary="Sample File Name and Description are the columns." dir="ltr">
<thead>
<tr class="cellalignment1205">
<th class="cellalignment1212" id="r1c1-t3">File Name</th>
<th class="cellalignment1212" id="r1c2-t3">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1205">
<td class="cellalignment1213" id="r2c1-t3" headers="r1c1-t3">
<p><code dir="ltr">CG.cpp</code></p>
</td>
<td class="cellalignment1213" headers="r2c1-t3 r1c2-t3">
<p>Sample program</p>
</td>
</tr>
<tr class="cellalignment1205">
<td class="cellalignment1213" id="r3c1-t3" headers="r1c1-t3">
<p><code dir="ltr">CG.xml</code></p>
</td>
<td class="cellalignment1213" headers="r3c1-t3 r1c2-t3">
<p>XML file contains DTD and dummy document</p>
</td>
</tr>
<tr class="cellalignment1205">
<td class="cellalignment1213" id="r4c1-t3" headers="r1c1-t3">
<p><code dir="ltr">CG.dtd</code></p>
</td>
<td class="cellalignment1213" headers="r4c1-t3 r1c2-t3">
<p>DTD file referenced by CG.xml</p>
</td>
</tr>
<tr class="cellalignment1205">
<td class="cellalignment1213" id="r5c1-t3" headers="r1c1-t3">
<p><code dir="ltr">Make.bat</code> on Windows</p>
<p><code dir="ltr">Makefile</code> on UNIX</p>
</td>
<td class="cellalignment1213" headers="r5c1-t3 r1c2-t3">
<p>Batch file (on Windows) or Make file (on UNIX) to generate classes and build the sample programs.</p>
</td>
</tr>
<tr class="cellalignment1205">
<td class="cellalignment1213" id="r6c1-t3" headers="r1c1-t3">
<p>README</p>
</td>
<td class="cellalignment1213" headers="r6c1-t3 r1c2-t3">
<p>A readme file with these instructions</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<p>The <code dir="ltr">make.bat</code> batch file (on Windows) or <code dir="ltr">Makefile</code> (on UNIX) do the following:</p>
<ul>
<li>
<p>Generate classes based on <code dir="ltr">CG.xml</code> into Sample.h and Sample.cpp</p>
</li>
<li>
<p>Compile the program <code dir="ltr">CG.cpp</code> (using <code dir="ltr">Sample.h</code>), and link this with the Sample object into an executable named <code dir="ltr">CG.exe</code> in the...<code dir="ltr">\bin</code> (or ...<code dir="ltr">/bin</code>) directory.</p>
</li>
</ul>
<div id="ADXDK19948" class="sect2"><a id="sthref620"></a>
<h3 class="sect2">XML C++ Class Generator Example 1: XML &mdash; Input File to Class Generator, CG.xml</h3>
<p>This XML file, <code dir="ltr">CG.xml</code>, inputs XML C++ class generator. It references the DTD file, <code dir="ltr">CG.dtd</code>.</p>
<pre dir="ltr">
&lt;?xml version="1.0"?&gt;
&lt;!DOCTYPE Sample SYSTEM "CG.dtd"&gt;
  &lt;Sample&gt;
    &lt;B&gt;Be!&lt;/B&gt;
    &lt;D attr="value"&gt;&lt;/D&gt;
    &lt;E&gt;
      &lt;F&gt;Formula1&lt;/F&gt;
      &lt;F&gt;Formula2&lt;/F&gt;
    &lt;/E&gt;
  &lt;/Sample&gt;
</pre></div>
<!-- class="sect2" -->
<div id="ADXDK19949" class="sect2"><a id="sthref621"></a>
<h3 class="sect2">XML C++ Class Generator Example 2: DTD &mdash; Input File to Class Generator, CG.dtd</h3>
<p>This DTD file, <code dir="ltr">CG.dtd</code> is referenced by the XML file <code dir="ltr">CG.xml</code>. <code dir="ltr">CG.xml</code> inputs XML C++ class generator.</p>
<pre dir="ltr">
&lt;!ELEMENT Sample (A | (B, (C | (D, E))) | F)&gt;
&lt;!ELEMENT A (#PCDATA)&gt;
&lt;!ELEMENT B (#PCDATA | F)*&gt;
&lt;!ELEMENT C (#PCDATA)&gt;
&lt;!ELEMENT D (#PCDATA)&gt;
&lt;!ATTLIST D attr CDATA #REQUIRED&gt;
&lt;!ELEMENT E (F, F)&gt;
&lt;!ELEMENT F (#PCDATA)&gt;
</pre></div>
<!-- class="sect2" -->
<div id="ADXDK19950" class="sect2"><a id="sthref622"></a>
<h3 class="sect2">XML C++ Class Generator Example 3: CG Sample Program</h3>
<p>The CG sample program, <code dir="ltr">CG.cpp</code>, does the following:</p>
<ol>
<li>
<p>Initializes the XML parser.</p>
</li>
<li>
<p>Loads the DTD (by parsing the DTD-containing file-- the dummy document part is ignored).</p>
</li>
<li>
<p>Creates some objects using the generated classes.</p>
</li>
<li>
<p>Invokes the validation function which verifies that the constructed classes match the DTD.</p>
</li>
<li>
<p>Writes the constructed document to <code dir="ltr">Sample.xml</code>.</p>
</li>
</ol>
<pre dir="ltr">
//////////////////////////////////////////////////////////////////////////////
// NAME        CG.cpp
// DESCRIPTION Demonstration program for C++ class generator usage
//////////////////////////////////////////////////////////////////////////////

#ifndef ORAXMLDOM_ORACLE
# include &lt;oraxmldom.h&gt;
#endif

#include &lt;fstream.h&gt;

#include "Sample.h"

#define DTD_DOCUMENT "CG.xml"
#define OUT_DOCUMENT Sample.xml"

int main()
{
    XMLParser parser;
    Document *doc;
    Sample   *samp;
    B        *b;
    D        *d;
    E        *e;
    F        *f1, *f2;
    fstream  *out;
    ub4       flags = XML_FLAG_VALIDATE;
    uword     ecode;

    // Initialize XML parser
    cout &lt;&lt; "Initializing XML parser...\n";
    if (ecode = parser.xmlinit())
    {
        cout &lt;&lt; "Failed to initialize parser, code " &lt;&lt; ecode &lt;&lt; "\n";
        return 1;
    }

    // Parse the document containing a DTD; parsing just a DTD is not
    // possible yet, so the file must contain a valid document (which
    // is parsed but we're ignoring).
    cout &lt;&lt; "Loading DTD from " &lt;&lt; DTD_DOCUMENT &lt;&lt; "...\n";
    if (ecode = parser.xmlparse((oratext *) DTD_DOCUMENT, (oratext *)0, flags))
    {
        cout &lt;&lt; "Failed to parse DTD document " &lt;&lt; DTD_DOCUMENT &lt;&lt;
        ", code " &lt;&lt; ecode &lt;&lt; "\n";
        return 2;
    }

    // Fetch dummy document
    cout &lt;&lt; "Fetching dummy document...\n";
    doc = parser.getDocument();

    // Create the constituent parts of a Sample
    cout &lt;&lt; "Creating components...\n";
    b = new B(doc, (String) "Be there or be square");
    d = new D(doc, (String) "Dit dah");
    d-&gt;setattr((String) "attribute value");
    f1 = new F(doc, (String) "Formula1");
    f2 = new F(doc, (String) "Formula2");
    e = new E(doc, f1, f2);

    // Create the Sample
    cout &lt;&lt; "Creating top-level element...\n";
    samp = new Sample(doc, b, d, e);

    // Validate the construct
    cout &lt;&lt; "Validating...\n";
    if (ecode = parser.validate(samp))
    {
     cout &lt;&lt; "Validation failed, code " &lt;&lt; ecode &lt;&lt; "\n";
     return 3;
    }

    // Write out doc
    cout &lt;&lt; "Writing document to " &lt;&lt; OUT_DOCUMENT &lt;&lt; "\n";
    if (!(out = new fstream(OUT_DOCUMENT, ios::out)))
    {
      cout &lt;&lt; "Failed to open output stream\n";
      return 4;
    }
    samp-&gt;print(out, 0);
    out-&gt;close();

    // Everything's OK
    cout &lt;&lt; "Success.\n";

    // Shut down
    parser.xmlterm();
    return 0;
}

// end of CG.cpp
</pre></div>
<!-- class="sect2" --></div>
<!-- class="sect1" --></div>
<!-- class="chapter" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment1204">
<tr>
<td class="cellalignment1213">
<table class="cellalignment1209">
<tr>
<td class="cellalignment1208"><a href="adx_cp_xpath.htm"><img width="24" height="24" src="../../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment1208"><a href="adx_pt_ref.htm"><img width="24" height="24" src="../../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;2001, 2014,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment1216">
<table class="cellalignment1207">
<tr>
<td class="cellalignment1208"><a href="../../index.htm"><img width="24" height="24" src="../../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment1208"><a href="../../nav/portal_booklist.htm"><img width="24" height="24" src="../../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment1208"><a href="toc.htm"><img width="24" height="24" src="../../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment1208"><a href="index.htm"><img width="24" height="24" src="../../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment1208"><a href="../../nav/mindx.htm"><img width="24" height="24" src="../../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment1208"><a href="../../dcommon/html/feedback.htm"><img width="24" height="24" src="../../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>
</body>
</html>
