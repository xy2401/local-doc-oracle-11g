<!DOCTYPE html>
<html lang="en" >
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1">
<meta charset="utf-8">
<title>Using the XML Parser for C++</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Merged Version 1032" />
<meta name="dcterms.created" content="2014-12-05T14:20:39Z" />
<meta name="robots" content="all" />
<meta name="dcterms.title" content="XML Developer's Kit Programmer's Guide" />
<meta name="dcterms.identifier" content="E23582-06" />
<meta name="dcterms.isVersionOf" content="ADXDK" />
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;2001, 2014,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved." />
<link rel="Start" href="../../index.htm" title="Home" type="text/html" />
<link rel="Copyright" href="../../dcommon/html/cpyr.htm" title="Copyright" type="text/html" />

<script type="application/javascript"  src="../../dcommon/js/headfoot.js"></script>
<script type="application/javascript"  src="../../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html" />
<link rel="Index" href="index.htm" title="Index" type="text/html" />
<link rel="Glossary" href="glossary.htm" title="Glossary" type="text/html" />
<link rel="Prev" href="adx_cp_unified.htm" title="Previous" type="text/html" />
<link rel="Next" href="adx_cp_xslt.htm" title="Next" type="text/html" />
<link rel="alternate" href="../e23582.pdf" title="PDF version" type="application/pdf" />
<link rel="schema.dcterms" href="http://purl.org/dc/terms/" />
<link rel="stylesheet" href="../../dcommon/css/fusiondoc.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/header.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/footer.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/fonts.css">
<link rel="stylesheet" href="../../dcommon/css/foundation.css">
<link rel="stylesheet" href="../../dcommon/css/codemirror.css">
<link rel="stylesheet" type="text/css" title="Default" href="../../nav/css/html5.css">
<link rel="stylesheet" href="../../dcommon/css/respond-480-tablet.css">
<link rel="stylesheet" href="../../dcommon/css/respond-768-laptop.css">
<link rel="stylesheet" href="../../dcommon/css/respond-1140-deskop.css">
<script type="application/javascript" src="../../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">35/47</span> <!-- End Header -->
<div id="ADXDK1900" class="chapter"><a id="BABCIECI"></a>
<h1 class="chapter"><span class="secnum">25</span> Using the XML Parser for C++</h1>
<p>This chapter contains these topics:</p>
<ul>
<li>
<p><a href="#BABIHGAI">Introduction to Parser for C++</a></p>
</li>
<li>
<p><a href="#BHAJHBFI">DOM Namespace</a></p>
</li>
<li>
<p><a href="#BHADDGBA">DOM Interfaces</a></p>
</li>
<li>
<p><a href="#BHADFGCJ">Parser Namespace</a></p>
</li>
<li>
<p><a href="#BABIHIFJ">Thread Safety</a></p>
</li>
<li>
<p><a href="#i1021476">XML Parser for C++ Usage</a></p>
</li>
<li>
<p><a href="#i1021835">XML Parser for C++ Default Behavior</a></p>
</li>
<li>
<p><a href="#i1021307">C++ Sample Files</a></p>
</li>
</ul>
<div class="infobox-note">
<p class="notep1">Note:</p>
Use the new unified C++ API in <code dir="ltr">xml.hpp</code> for new XDK applications. The old C++ API in <code dir="ltr">oraxml.hpp</code> is deprecated and supported only for backward compatibility.</div>
<a id="BABIHGAI"></a>
<div id="ADXDK19903" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Introduction to Parser for C++</h2>
<p>Oracle XML parser for C++ determines whether an XML document is well-formed and optionally validates it against a DTD or XML schema. The parser constructs an object tree which can be accessed through one of the following two XML APIs:</p>
<ul>
<li>
<p>DOM: Tree-based APIs. A tree-based API compiles an XML document into an internal tree structure, then allows an application to navigate that tree using the Document Object Model (DOM), a standard tree-based API for XML and HTML documents.</p>
</li>
<li>
<p>SAX: Event-based APIs. An event-based API, on the other hand, reports parsing events (such as the start and end of elements) directly to the application through a user defined SAX even handler, and does not usually build an internal tree. The application implements handlers to deal with the different events, much like handling events in a graphical user interface.</p>
</li>
</ul>
<p>Tree-based APIs are useful for a wide range of applications, but they often put a great strain on system resources, especially if the document is large (under very controlled circumstances, it is possible to construct the tree in a lazy fashion to avoid some of this problem). Furthermore, some applications need to build their own, different data trees, and it is very inefficient to build a tree of parse nodes, only to map it onto a new tree.</p>
</div>
<!-- class="sect1" -->
<a id="BHAJHBFI"></a>
<div id="ADXDK19904" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">DOM Namespace</h2>
<p>This is the namespace for DOM-related types and interfaces.</p>
<p>DOM interfaces are represented as generic references to different implementations of the DOM specification. They are parameterized by <code dir="ltr">Node</code> that supports various specializations and instantiations. Of them, the most important is <code dir="ltr">xmlnode</code> which corresponds to the current C implementation</p>
<p>These generic references do not have a <code dir="ltr">NULL</code>-like value. Any implementation must never create a reference with no state (like <code dir="ltr">NULL</code>). If there is a need to signal that something has no state, an exception should be thrown.</p>
<p>Many methods might throw the <code dir="ltr">SYNTAX_ERR</code> exception, if the DOM tree is incorrectly formed, or throw <code dir="ltr">UNDEFINED_ERR</code>, in the case of wrong parameters or unexpected <code dir="ltr">NULL</code> pointers. If these are the only errors that a particular method might throw, it is not reflected in the method signature.</p>
<p>Actual DOM trees do <span class="italic">not</span> depend on the context, <code dir="ltr">TCtx</code>. However, manipulations on DOM trees in the current, <code dir="ltr">xmlctx</code>-based implementation require access to the current context, <code dir="ltr">TCtx</code>. This is accomplished by passing the context pointer to the constructor of <code dir="ltr">DOMImplRef</code>. In multithreaded environment <code dir="ltr">DOMImplRef</code> is always created in the thread context and, so, has the pointer to the right context.</p>
<p><code dir="ltr">DOMImplRef</code> provides a way to create DOM trees. <code dir="ltr">DomImplRef</code> is a reference to the actual <code dir="ltr">DOMImplementation</code> object that is created when a regular, non-copy constructor of <code dir="ltr">DomImplRef</code> is invoked. This works well in a multithreaded environment where DOM trees need to be shared, and each thread has a separate <code dir="ltr">TCtx</code> associated with it. This works equally well in a single threaded environment.DOMString is only one of the encodings supported by Oracle implementations. The support of other encodings is an Oracle extension. The <code dir="ltr">oratext*</code> data type is used for all encodings.Interfaces represent DOM level 2 Core interfaces according to <code dir="ltr"><a href="http://www.w3.org/TR/DOM-Level-2-Core/core.html">http://www.w3.org/TR/DOM-Level-2-Core/core.html</a></code>. These C++ interfaces support the DOM specification as closely as possible. However, Oracle cannot guarantee that the specification is fully supported by our implementation because the W3C specification does not cover C++ binding.</p>
<div id="ADXDK19905" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref596"></a>
<h3 class="sect2">DOM Datatypes</h3>
<p>DATATYPE DomNodeType - Defines types of DOM nodes.</p>
<p>DATATYPE DomExceptionCode - Defines exception codes returned by the DOM API.</p>
</div>
<!-- class="sect2" -->
<a id="BHADDGBA"></a>
<div id="ADXDK19906" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">DOM Interfaces</h3>
<p><code dir="ltr">DOMException</code> Interface - See exception <code dir="ltr">DOMException</code> in the W3C DOM documentation. DOM operations only raise exceptions in "exceptional" circumstances: when an operation is impossible to perform (either for logical reasons, because data is lost, or because the implementation has become unstable). The functionality of XMLException can be used for a wider range of exceptions.</p>
<p><code dir="ltr">NodeRef</code> Interface - See interface <code dir="ltr">Node</code> in the W3C documentation.</p>
<p><code dir="ltr">DocumentRef</code> Interface - See interface <code dir="ltr">Document</code> in the W3C documentation.</p>
<p><code dir="ltr">DocumentFragmentRef</code> Interface - See interface <code dir="ltr">DocumentFragment</code> in the W3C documentation.</p>
<p><code dir="ltr">ElementRef</code> Interface - See interface <code dir="ltr">Element</code> in the W3C documentation.</p>
<p><code dir="ltr">AttrRef</code> Interface - See interface <code dir="ltr">Attr</code> in the W3C documentation.</p>
<p><code dir="ltr">CharacterDataRef</code> Interface - See interface <code dir="ltr">CharacterData</code> in the W3C documentation.</p>
<p><code dir="ltr">TextRef</code> Interface - See <code dir="ltr">Text</code> nodes in the W3C documentation.</p>
<p><code dir="ltr">CDATASectionRef</code> Interface - See <code dir="ltr">CDATASection</code> nodes in the W3C documentation.</p>
<p><code dir="ltr">CommentRef</code> Interface - See <code dir="ltr">Comment</code> nodes in the W3C documentation.</p>
<p><code dir="ltr">ProcessingInstructionRef</code> Interface - See <code dir="ltr">PI</code> nodes in the W3C documentation.</p>
<p><code dir="ltr">EntityRef</code> Interface - See <code dir="ltr">Entity</code> nodes in the W3C documentation.</p>
<p><code dir="ltr">EntityReferenceRef</code> Interface - See <code dir="ltr">EntityReference</code> nodes in the W3C documentation.</p>
<p><code dir="ltr">NotationRef</code> Interface - See <code dir="ltr">Notation</code> nodes in the W3C documentation.</p>
<p><code dir="ltr">DocumentTypeRef</code> Interface - See <code dir="ltr">DTD</code> nodes in the W3C documentation.</p>
<p><code dir="ltr">DOMImplRef</code> Interface - See interface <code dir="ltr">DOMImplementation</code> in the W3C DOM documentation. <code dir="ltr">DOMImplementation</code> is fundamental for manipulating DOM trees. Every DOM tree is attached to a particular DOM implementation object. Several DOM trees can be attached to the same DOM implementation object. Each DOM tree can be deleted and deallocated by deleting the document object. All DOM trees attached to a particular DOM implementation object are deleted when this object is deleted. <code dir="ltr">DOMImplementation</code> object is not visible to the user directly. It is visible through class <code dir="ltr">DOMImplRef</code>. This is needed because of requirements in the case of multithreaded environments</p>
<p><code dir="ltr">NodeListRef</code> Interface - Abstract implementation of node list. See interface NodeList in the W3C documentation.</p>
<p><code dir="ltr">NamedNodeMapRef</code> Interface - Abstract implementation of a node map. See interface NamedNodeMap in the W3C documentation.</p>
</div>
<!-- class="sect2" -->
<div id="ADXDK19907" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref597"></a>
<h3 class="sect2">DOM Traversal and Range Datatypes</h3>
<p>DATATYPE <code dir="ltr">AcceptNodeCode</code> defines values returned by node filters provided by the user and passed to iterators and tree walkers.</p>
<p>DATATYPE <code dir="ltr">WhatToShowCode</code> specifies codes to filter certain types of nodes.</p>
<p>DATATYPE <code dir="ltr">RangeExceptionCode</code> specifies Exception kinds that can be thrown by the <code dir="ltr">Range</code> interface.</p>
<p>DATATYPE <code dir="ltr">CompareHowCode</code> specifies kinds of comparisons that can be done on two ranges.</p>
</div>
<!-- class="sect2" -->
<div id="ADXDK19908" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref598"></a>
<h3 class="sect2">DOM Traversal and Range Interfaces</h3>
<p><code dir="ltr">NodeFilter</code> Interface - DOM 2 Node Filter.</p>
<p><code dir="ltr">NodeIterator</code> Interface - DOM 2 Node Iterator.</p>
<p><code dir="ltr">TreeWalker</code> Interface - DOM 2 TreeWalker.</p>
<p><code dir="ltr">DocumentTraversal</code> Interface - DOM 2 interface.</p>
<p><code dir="ltr">RangeException</code> Interface - Exceptions for DOM 2 Range operations.</p>
<p><code dir="ltr">Range</code> Interface - DOM 2 Range.</p>
<p><code dir="ltr">DocumentRange</code> Interface - DOM 2 interface.</p>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="BHADFGCJ"></a>
<div id="ADXDK19909" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Parser Namespace</h2>
<p><code dir="ltr">DOMParser</code> Interface - DOM parser root class.</p>
<p><code dir="ltr">GParser</code> Interface - Root class for XML parsers.</p>
<p><code dir="ltr">ParserException</code> Interface - Exception class for parser and validator.</p>
<p><code dir="ltr">SAXHandler</code> Interface - Root class for current SAX handler implementations.</p>
<p><code dir="ltr">SAXHandlerRoot</code> Interface - Root class for all SAX handlers.</p>
<p><code dir="ltr">SAXParser</code> Interface - Root class for all SAX parsers.</p>
<p><code dir="ltr">SchemaValidator</code> Interface - XML schema-aware validator.</p>
<div id="ADXDK19910" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref599"></a>
<h3 class="sect2">GParser Interface</h3>
<p><code dir="ltr">GParser</code> Interface - Root class for all XML parser interfaces and implementations. It is not an abstract class, that is, it is not an interface. It is a real class that allows users to set and check parser parameters.</p>
</div>
<!-- class="sect2" -->
<div id="ADXDK19911" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref600"></a>
<h3 class="sect2">DOMParser Interface</h3>
<p><code dir="ltr">DOMParser</code> Interface - DOM parser root abstract class or interface. In addition to parsing and checking that a document is well formed, DOMParser provides means to validate the document against DTD or XML schema.</p>
</div>
<!-- class="sect2" -->
<div id="ADXDK19912" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref601"></a>
<h3 class="sect2">SAXParser Interface</h3>
<p><code dir="ltr">SAXParser</code> Interface - Root abstract class for all SAX parsers.</p>
<div id="ADXDK19913" class="sect3"><!-- infolevel="all" infotype="General" --><a id="sthref602"></a>
<h4 class="sect3">SAX Event Handlers</h4>
<p>To use SAX, a SAX event handler class should be provided by the user and passed to the SAXParser in a call to <code dir="ltr">parse()</code> or set before such call.</p>
<p><code dir="ltr">SAXHandlerRoot</code> Interface - root class for all SAX handlers.</p>
<p><code dir="ltr">SAXHandler</code> Interface - root class for current SAX handler implementations.</p>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="BABIHIFJ"></a>
<div id="ADXDK19914" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Thread Safety</h2>
<p>If threads are forked off somewhere in the midst of the init-parse-term sequence of calls, you will get unpredictable behavior and results.</p>
</div>
<!-- class="sect1" -->
<a id="i1021476"></a>
<div id="ADXDK19915" class="sect1">
<h2 class="sect1">XML Parser for C++ Usage</h2>
<ol>
<li>
<p>A call to <code dir="ltr">Tools::Factory</code> to create a parser initializes the parsing process.</p>
</li>
<li>
<p>The XML input can be any of the <code dir="ltr">InputSource</code> kinds (see <code dir="ltr">IO</code> namespace).</p>
</li>
<li>
<p><code dir="ltr">DOMParser</code> invocation results in the DOM tree.</p>
</li>
<li>
<p><code dir="ltr">SAXParser</code> invocation results in SAX events.</p>
</li>
<li>
<p>A call to <code dir="ltr">parser</code> destructor terminates the process.</p>
</li>
</ol>
</div>
<!-- class="sect1" -->
<a id="i1021835"></a>
<div id="ADXDK19916" class="sect1">
<h2 class="sect1">XML Parser for C++ Default Behavior</h2>
<p>The following is the XML parser for C++ default behavior:</p>
<ul>
<li>
<p>Character set encoding is UTF-8. If all your documents are ASCII, you are encouraged to set the encoding to US-ASCII for better performance.</p>
</li>
<li>
<p>Messages are printed to <code dir="ltr">stderr</code> unless <code dir="ltr">msghdlr</code> is specified.</p>
</li>
<li>
<p>XML parser for C++ determines whether an XML document is well-formed and optionally validates it against a DTD. The parser constructs an object tree that can be accessed through a DOM interface or operates serially through a SAX interface.</p>
</li>
<li>
<p>A parse tree which can be accessed by DOM APIs is built unless <code dir="ltr">saxcb</code> is set to use the SAX callback APIs. Note that any of the SAX callback functions can be set to <code dir="ltr">NULL</code> if not needed.</p>
</li>
<li>
<p>The default behavior for the parser is to check that the input is well-formed but not to check whether it is valid. The flag <code dir="ltr">XML_FLAG_VALIDATE</code> can be set to validate the input. The default behavior for whitespace processing is to be fully conformant to the XML 1.0 spec, that is, all whitespace is reported back to the application but it is indicated which whitespace is ignorable. However, some applications may prefer to set the <code dir="ltr">XML_FLAG_DISCARD_WHITESPACE</code> which will discard all whitespace between an end-element tag and the following start-element tag.</p>
<div class="infobox-note">
<p class="notep1"><span class="bold">Note</span>:</p>
It is recommended that you set the default encoding explicitly if using only single byte character sets (such as US-ASCII or any of the ISO-8859 character sets) for performance up to 25% faster than with multibyte character sets, such as UTF-8.</div>
</li>
<li>
<p>In both of these cases, an event-based API provides a simpler, lower-level access to an XML document: you can parse documents much larger than your available system memory, and you can construct your own data structures using your callback event handlers.</p>
</li>
</ul>
</div>
<!-- class="sect1" -->
<a id="i1021307"></a>
<div id="ADXDK19917" class="sect1">
<h2 class="sect1">C++ Sample Files</h2>
<p><code dir="ltr">xdk/demo/cpp/parser/</code> directory contains several XML applications to illustrate how to use the XML parser for C++ with the DOM and SAX interfaces.</p>
<p>Change directories to the sample directory (<code dir="ltr">$ORACLE_HOME/xdk/demo/cpp</code> on Solaris, for example) and read the <code dir="ltr">README</code> file. This will explain how to build the sample programs.</p>
<p><a href="#g1026908">Table 25-1</a> lists the sample files in the directory. Each file <code dir="ltr">*Main.cpp</code> has a corresponding <code dir="ltr">*Gen.cpp</code> and <code dir="ltr">*Gen.hpp</code>.</p>
<div id="ADXDK19918" class="tblformal">
<p class="titleintable"><a id="sthref603"></a><a id="g1026908"></a>Table 25-1 XML Parser for C++ Sample Files</p>
<table class="cellalignment1214" title="XML Parser for C++ Sample Files " summary="Sample File Name and Description are the columns." dir="ltr">
<thead>
<tr class="cellalignment1205">
<th class="cellalignment1212" id="r1c1-t4">Sample File Name</th>
<th class="cellalignment1212" id="r1c2-t4">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1205">
<td class="cellalignment1213" id="r2c1-t4" headers="r1c1-t4">
<pre dir="ltr">
DOMSampleMain.cpp
</pre></td>
<td class="cellalignment1213" headers="r2c1-t4 r1c2-t4">
<p>Sample usage of C++ interfaces of XML parser and DOM.</p>
</td>
</tr>
<tr class="cellalignment1205">
<td class="cellalignment1213" id="r3c1-t4" headers="r1c1-t4">
<pre dir="ltr">
FullDOMSampleMain.cpp
</pre></td>
<td class="cellalignment1213" headers="r3c1-t4 r1c2-t4">
<p>Manually build DOM and then exercise.</p>
</td>
</tr>
<tr class="cellalignment1205">
<td class="cellalignment1213" id="r4c1-t4" headers="r1c1-t4">
<pre dir="ltr">
SAXSampleMain.cpp
</pre></td>
<td class="cellalignment1213" headers="r4c1-t4 r1c2-t4">
<p>Source for SAXSample program.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink CPXML01600" href="../../appdev.112/e10771/parser.htm#CPXML01600"><span class="italic">Oracle Database XML C++ API Reference</span></a> for parser package APIs for C++</div>
</div>
<!-- class="sect1" --></div>
<!-- class="chapter" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment1204">
<tr>
<td class="cellalignment1213">
<table class="cellalignment1209">
<tr>
<td class="cellalignment1208"><a href="adx_cp_unified.htm"><img width="24" height="24" src="../../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment1208"><a href="adx_cp_xslt.htm"><img width="24" height="24" src="../../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;2001, 2014,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment1216">
<table class="cellalignment1207">
<tr>
<td class="cellalignment1208"><a href="../../index.htm"><img width="24" height="24" src="../../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment1208"><a href="../../nav/portal_booklist.htm"><img width="24" height="24" src="../../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment1208"><a href="toc.htm"><img width="24" height="24" src="../../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment1208"><a href="index.htm"><img width="24" height="24" src="../../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment1208"><a href="../../nav/mindx.htm"><img width="24" height="24" src="../../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment1208"><a href="../../dcommon/html/feedback.htm"><img width="24" height="24" src="../../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>
</body>
</html>
