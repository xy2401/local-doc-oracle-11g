<!DOCTYPE html>
<html lang="en" >
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1">
<meta charset="utf-8">
<title>Using the TransX Utility</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Merged Version 1032" />
<meta name="dcterms.created" content="2014-12-05T14:20:38Z" />
<meta name="robots" content="all" />
<meta name="dcterms.title" content="XML Developer's Kit Programmer's Guide" />
<meta name="dcterms.identifier" content="E23582-06" />
<meta name="dcterms.isVersionOf" content="ADXDK" />
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;2001, 2014,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved." />
<link rel="Start" href="../../index.htm" title="Home" type="text/html" />
<link rel="Copyright" href="../../dcommon/html/cpyr.htm" title="Copyright" type="text/html" />

<script type="application/javascript"  src="../../dcommon/js/headfoot.js"></script>
<script type="application/javascript"  src="../../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html" />
<link rel="Index" href="index.htm" title="Index" type="text/html" />
<link rel="Glossary" href="glossary.htm" title="Glossary" type="text/html" />
<link rel="Prev" href="adx_j_xsu.htm" title="Previous" type="text/html" />
<link rel="Next" href="adx_ref_dlf.htm" title="Next" type="text/html" />
<link rel="alternate" href="../e23582.pdf" title="PDF version" type="application/pdf" />
<link rel="schema.dcterms" href="http://purl.org/dc/terms/" />
<link rel="stylesheet" href="../../dcommon/css/fusiondoc.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/header.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/footer.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/fonts.css">
<link rel="stylesheet" href="../../dcommon/css/foundation.css">
<link rel="stylesheet" href="../../dcommon/css/codemirror.css">
<link rel="stylesheet" type="text/css" title="Default" href="../../nav/css/html5.css">
<link rel="stylesheet" href="../../dcommon/css/respond-480-tablet.css">
<link rel="stylesheet" href="../../dcommon/css/respond-768-laptop.css">
<link rel="stylesheet" href="../../dcommon/css/respond-1140-deskop.css">
<script type="application/javascript" src="../../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">20/47</span> <!-- End Header -->
<div id="ADXDK1200" class="chapter"><a id="g1015063"></a>
<h1 class="chapter"><span class="secnum">12</span> Using the TransX Utility <a id="sthref349"></a></h1>
<p>This chapter contains these topics:</p>
<ul>
<li>
<p><a href="#BHAJFIFB">Introduction to the TransX Utility</a></p>
</li>
<li>
<p><a href="#BHAHEIJC">Using the TransX Utility: Overview</a></p>
</li>
<li>
<p><a href="#BHAJABFA">Loading Data with the TransX Utility</a></p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="adx_ref_dlf.htm#CACJEAGH">Chapter 13, "Data Loading Format (DLF) Specification"</a></div>
<a id="BHAJFIFB"></a>
<div id="ADXDK19494" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Introduction to the TransX Utility</h2>
<p><a href="glossary.htm#i999065"><span class="xrefglossterm">TransX Utility</span></a> enables you to transfer XML to a database. More specifically, the TransX utility is an application of <a href="glossary.htm#i999059"><span class="xrefglossterm">XML SQL Utility (XSU)</span></a> that loads translated seed data and messages into a database schema. If you have data to be populated into a database in multiple languages, then the utility provides the functionality that you would otherwise need to develop with XSU.</p>
<p>The TransX utility is particularly useful when handling multilingual XML. The utility does the following:</p>
<ul>
<li>
<p>Automatically manages the change variables, start sequences, and additional SQL statements that would otherwise require multiple inserts or sessions. Thus, translation vendors do not need to work with unfamiliar SQL and PL/SQL scripts.</p>
</li>
<li>
<p>Automates character encoding. Consequently, loading errors due to incorrect encoding are impossible so long as the data file conforms to the XML standard.</p>
</li>
<li>
<p>Reduces globalization costs by preparing strings to be translated, translating the strings, and loading them into the database.</p>
</li>
<li>
<p>Minimizes translation data format errors and accurately loads the translation contents into pre-determined locations in the database. When the data is in a predefined format, the TransX utility validates it.</p>
</li>
<li>
<p>Eliminates syntax errors due to varying Globalization Support settings.</p>
</li>
<li>
<p>Does not require the <code dir="ltr">UNISTR</code> construct for every piece of <code dir="ltr">NCHAR</code> data.</p>
</li>
</ul>
<div class="infobox-note">
<p class="notep1">Note:</p>
TransX runs as the authenticated user. Care must be taken to review data files and only to load data files from a trusted source.</div>
<div id="ADXDK19495" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref350"></a>
<h3 class="sect2">Prerequisites</h3>
<p>This chapter assumes that you are familiar with <a href="glossary.htm#i999059"><span class="xrefglossterm">XML SQL Utility (XSU)</span></a> because TransX is an application of XSU.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="adx_j_xsu.htm#i1000441">Chapter 11, "Using the XML SQL Utility (XSU)"</a></div>
</div>
<!-- class="sect2" -->
<a id="BHABFGIC"></a>
<div id="ADXDK19496" class="sect2">
<h3 class="sect2">TransX UtilityFeatures</h3>
<p>This section describes the following features of the TransX utility:</p>
<ul>
<li>
<p><a href="#i1011687">Simplified Multilingual Data Loading</a></p>
</li>
<li>
<p><a href="#i1011691">Simplified Data Format Support and Interface</a></p>
</li>
<li>
<p><a href="#i1011705">Additional TransX Utility Features</a></p>
</li>
</ul>
<a id="i1011687"></a>
<div id="ADXDK19497" class="sect3">
<h4 class="sect3">Simplified Multilingual Data Loading</h4>
<p>When inserting multilingual data or data translations into an Oracle database, or when encoding, each XML file requires validation. The traditional translation data loading method is to change the <code dir="ltr">NLS_LANG</code> environment variable setting when switching load files. This variable sets the language and territory used by the client application and the database server. It also sets the client character set, which is the character set for data entered or displayed by a client program.</p>
<p>In the traditional method, each load file is encoded in a character set suitable for its language, which is necessary because translations must be performed in the same file format&mdash;typically in a SQL script&mdash;as the original. The <code dir="ltr">NLS_LANG</code> setting changes as files are loaded to adapt to the character set that corresponds to the language. As well as consuming time, this approach is error-prone because the encoding metadata is separate from the data itself.</p>
<p>With the TransX utility you use an XML document with a predefined format called a <span class="glossaryterm">dataset</span>. The dataset contains the encoding information and the data so that you can transfer multilingual data without changing <code dir="ltr">NLS_LANG</code> settings. The TransX utility frees development and translation groups by maintaining the correct character set while loading XML data into the database.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink NLSPG003" href="../../server.112/e10729/ch3globenv.htm#NLSPG003"><span class="italic">Oracle Database Globalization Support Guide</span></a> to learn about the <code dir="ltr">NLS_LANG</code> environment variable</div>
</div>
<!-- class="sect3" -->
<a id="i1011691"></a>
<div id="ADXDK19498" class="sect3">
<h4 class="sect3">Simplified Data Format Support and Interface</h4>
<p>The TransX utility provides a command-line interface and programmable API. The utility complies with a data format defined to be the canonical method for the representation of seed data loaded into the database. The format is intuitive and simplified for use by translation groups. The format specification defines how translators can describe the data so that it is loaded in an expected way. You can represent the values in the data set with scalar values or expressions such as constants, sequences, and queries.</p>
</div>
<!-- class="sect3" -->
<a id="i1011705"></a>
<div id="ADXDK19499" class="sect3">
<h4 class="sect3">Additional TransX Utility Features</h4>
<p><a href="#BHABGCFB">Table 12-1</a> describes other useful TransX utility features.</p>
<div id="ADXDK19500" class="tblformal">
<p class="titleintable"><a id="sthref351"></a><a id="BHABGCFB"></a>Table 12-1 TransX Utility Features</p>
<table class="cellalignment1214" title="TransX Utility Features" summary="This table describes the TransX features." dir="ltr">
<thead>
<tr class="cellalignment1205">
<th class="cellalignment1212" id="r1c1-t6">Feature</th>
<th class="cellalignment1212" id="r1c2-t6">TransX Utility . . .</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1205">
<td class="cellalignment1213" id="r2c1-t6" headers="r1c1-t6">
<p>Command-line interface</p>
</td>
<td class="cellalignment1213" headers="r2c1-t6 r1c2-t6">
<p>Provides easy-to-use commands.</p>
</td>
</tr>
<tr class="cellalignment1205">
<td class="cellalignment1213" id="r3c1-t6" headers="r1c1-t6">
<p>User API</p>
</td>
<td class="cellalignment1213" headers="r3c1-t6 r1c2-t6">
<p>Exposes a Java API.</p>
</td>
</tr>
<tr class="cellalignment1205">
<td class="cellalignment1213" id="r4c1-t6" headers="r1c1-t6">
<p>Validation</p>
</td>
<td class="cellalignment1213" headers="r4c1-t6 r1c2-t6">
<p>Validates the data format and reports errors.</p>
</td>
</tr>
<tr class="cellalignment1205">
<td class="cellalignment1213" id="r5c1-t6" headers="r1c1-t6">
<p>Whitespace handling</p>
</td>
<td class="cellalignment1213" headers="r5c1-t6 r1c2-t6">
<p>Does not consider whitespace characters in the data set as significant unless otherwise specified in various granularity.</p>
</td>
</tr>
<tr class="cellalignment1205">
<td class="cellalignment1213" id="r6c1-t6" headers="r1c1-t6">
<p>Unloading</p>
</td>
<td class="cellalignment1213" headers="r6c1-t6 r1c2-t6">
<p>Exports the result into the standard data format based on an input query.</p>
</td>
</tr>
<tr class="cellalignment1205">
<td class="cellalignment1213" id="r7c1-t6" headers="r1c1-t6">
<p>Intimacy with translation exchange format</p>
</td>
<td class="cellalignment1213" headers="r7c1-t6 r1c2-t6">
<p>Enables transformation to and from translation exchange format.</p>
</td>
</tr>
<tr class="cellalignment1205">
<td class="cellalignment1213" id="r8c1-t6" headers="r1c1-t6">
<p>Localized user interface</p>
</td>
<td class="cellalignment1213" headers="r8c1-t6 r1c2-t6">
<p>Provides messages in many languages.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="sect3" --></div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="BHAHEIJC"></a>
<div id="ADXDK19501" class="sect1">
<h2 class="sect1"><a id="sthref352"></a>Using the TransX Utility: Overview</h2>
<p>This section contains the following topics:</p>
<ul>
<li>
<p><a href="#BHAJCHJG">Using the TransX Utility: Basic Process</a></p>
</li>
<li>
<p><a href="#BHAFFHJD">Running the TransX Utility Demo Programs</a></p>
</li>
<li>
<p><a href="#BHAGHDCA">Using the TransX Command-Line Utility</a></p>
</li>
</ul>
<a id="BHAJCHJG"></a>
<div id="ADXDK19502" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Using the TransX Utility: Basic Process</h3>
<p>TransX is accessible through the following API:</p>
<ul>
<li>
<p><code dir="ltr">oracle.xml.transx.loader</code> class, which contains the <code dir="ltr">getLoader()</code> method to obtain a TransX instance</p>
</li>
<li>
<p><code dir="ltr">oracle.xml.transx.TransX</code> interface, which is the TransX API</p>
</li>
</ul>
<p><a href="#BHAFBGBA">Figure 12-1</a> illustrates the basic process for using the TransX API to transfer XML to an Oracle database.</p>
<div id="ADXDK19503" class="figure">
<p class="titleinfigure"><a id="BHAFBGBA"></a>Figure 12-1 Basic Process of a TransX Application</p>
<img width="489" height="324" src="img/adxdk118.gif" alt="Description of Figure 12-1 follows" /><br />
<a id="sthref353" href="img_text/adxdk118.htm">Description of "Figure 12-1 Basic Process of a TransX Application"</a><br />
<br /></div>
<!-- class="figure" -->
<p>The basic process of a TransX application is as follows:</p>
<ol>
<li>
<p>Create a TransX loader object. Instantiate the <code dir="ltr">TransX</code> class by calling <code dir="ltr">getLoader()</code> as follows:</p>
<pre dir="ltr">
TransX  transx = loader.getLoader();
</pre></li>
<li>
<p>Start a data loading session by supplying database connection information with <code dir="ltr">TransX.open()</code>. You create a session by supplying the JDBC connect string, database username, and database password. You have the following options:</p>
<ul>
<li>
<p>Create the connection with the JDBC OCI driver. The following code fragment illustrates this technique and connects with the supplied user name and password:</p>
<pre dir="ltr">
transx.open( "jdbc:oracle:oci8:@", <span class="italic">user</span>, <span class="italic">passwd</span> );
</pre></li>
</ul>
<ul>
<li>
<p>Create the connection with the JDBC thin driver. The thin driver is written in pure Java and can be called from any Java program. The following code fragment illustrates this technique and connects:</p>
<pre dir="ltr">
transx.open( "jdbc:oracle:thin:@//myhost:1521/myservicename", <span class="italic">user</span>,<span class="italic">passwd</span>); 
</pre>
<p>The thin driver requires the host name (<code dir="ltr">myhost</code>), port number (<code dir="ltr">1521</code>), and the service name (<code dir="ltr">myservicename</code>). The database must have an active TCP/IP listener.</p>
</li>
</ul>
<div class="infobox-note">
<p class="notep1">Note:</p>
If you are just validating your data format, then you do not need to establish a database connection because the validation is performed by TransX. Thus, you can invoke the <code dir="ltr">TransX.validate()</code> method without a preceding <code dir="ltr">open()</code> call.</div>
</li>
<li>
<p>Configure the TransX loader. <a href="#BHAJJJAB">Table 12-2</a> describes configuration methods.</p>
<div id="ADXDK19504" class="tblhruleformal">
<p class="titleintable"><a id="sthref354"></a><a id="BHAJJJAB"></a>Table 12-2 TransX Configuration Methods</p>
<table class="cellalignment1211" title="TransX Configuration Methods" summary="TransX configuration methods" dir="ltr">
<thead>
<tr class="cellalignment1205">
<th class="cellalignment1212" id="r1c1-t8">Method</th>
<th class="cellalignment1212" id="r1c2-t8">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1205">
<td class="cellalignment1213" id="r2c1-t8" headers="r1c1-t8">
<p><code dir="ltr">setLoadingMode()</code></p>
</td>
<td class="cellalignment1213" headers="r2c1-t8 r1c2-t8">
<p>Sets the operation mode on duplicates. The mode determines TransX behavior when there are one or more existing rows in the database whose values in the key columns are the same as those in the dataset to be loaded. You can specify the constants <code dir="ltr">EXCEPTION_ON_DUPLICATES</code>, <code dir="ltr">SKIP_DUPLICATES</code>, or <code dir="ltr">UPDATE_DUPLICATES</code> in class <code dir="ltr">oracle.xml.transx.LoadingMode</code>. By default the loader skips duplicates.</p>
</td>
</tr>
<tr class="cellalignment1205">
<td class="cellalignment1213" id="r3c1-t8" headers="r1c1-t8">
<p><code dir="ltr">setNormalizeLangTag()</code></p>
</td>
<td class="cellalignment1213" headers="r3c1-t8 r1c2-t8">
<p>Sets the case of language tag. By default the loader uses the style specified in the <code dir="ltr">normalize-langtag</code> attribute on DLF.</p>
</td>
</tr>
<tr class="cellalignment1205">
<td class="cellalignment1213" id="r4c1-t8" headers="r1c1-t8">
<p><code dir="ltr">setPreserveWhitespace()</code></p>
</td>
<td class="cellalignment1213" headers="r4c1-t8 r1c2-t8">
<p>Specifies how the loader should handle whitespace. The default is <code dir="ltr">FALSE</code>, which means that the loader ignores the type of whitespace characters in the dataset and loads them as space characters. The loader treats consecutive whitespace characters in the dataset as one space character.</p>
</td>
</tr>
<tr class="cellalignment1205">
<td class="cellalignment1213" id="r5c1-t8" headers="r1c1-t8">
<p><code dir="ltr">setValidationMode()</code></p>
</td>
<td class="cellalignment1213" headers="r5c1-t8 r1c2-t8">
<p>Sets the validation mode. The default is <code dir="ltr">TRUE</code>, which means that the loader performs validation of the dataset format against the canonical schema definition on each <code dir="ltr">load()</code> call. The validation mode should be disabled only if the dataset has already been validated.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblhruleformal" -->
<p>The following example specifies that the loader should skip duplicate rows and not validate the dataset:</p>
<pre dir="ltr">
transx.setLoadingMode( LoadingMode.SKIP_DUPLICATES ); 
transx.setValidationMode( false ); 
</pre></li>
<li>
<p>Load the datasets by invoking <code dir="ltr">TransX.load()</code>. The same JDBC connection is used during the iteration of the load operations. For example, load three datasets as follows:</p>
<pre dir="ltr">
String  datasrc[] = {"data1.xml", "data2.xml", "data3.xml"}; 
...
for ( int i = 0 ; i &lt; datasrc.length ; i++ ) 
{ 
  transx.load( datasrc[i] ); 
} 
</pre></li>
<li>
<p>Close the loading session by invoking <code dir="ltr">TransX.close()</code>. This method call closes the database connection:</p>
<pre dir="ltr">
transx.close();
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a class="olink JJDEV" href="../../java.112/e10588/toc.htm"><span class="italic">Oracle Database Java Developer's Guide</span></a> to learn about Oracle JDBC</p>
</li>
<li>
<p><a class="olink JAXML" href="../e10769/toc.htm"><span class="italic">Oracle Database XML Java API Reference</span></a> to learn about <code dir="ltr">TransX</code> classes and methods</p>
</li>
</ul>
</div>
</li>
</ol>
</div>
<!-- class="sect2" -->
<a id="BHAFFHJD"></a>
<div id="ADXDK19505" class="sect2">
<h3 class="sect2">Running the TransX Utility Demo Programs<a id="sthref355"></a></h3>
<p>Demo programs for the TransX utility are included in <code dir="ltr">$ORACLE_HOME/xdk/demo/java/transx</code>. <a href="#BHAJGJGF">Table 12-3</a> describes the XML files and programs that you can use to test the utility.</p>
<div id="ADXDK19506" class="tblformal">
<p class="titleintable"><a id="sthref356"></a><a id="BHAJGJGF"></a>Table 12-3 TransX Utility Sample Files</p>
<table class="cellalignment1214" title="TransX Utility Sample Files " summary="File and Description are the Columns." dir="ltr">
<thead>
<tr class="cellalignment1205">
<th class="cellalignment1212" id="r1c1-t10">File</th>
<th class="cellalignment1212" id="r1c2-t10">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1205">
<td class="cellalignment1213" id="r2c1-t10" headers="r1c1-t10">
<p><code dir="ltr">README</code></p>
</td>
<td class="cellalignment1213" headers="r2c1-t10 r1c2-t10">
<p>A text file that describes how to set up the TransX demos.</p>
</td>
</tr>
<tr class="cellalignment1205">
<td class="cellalignment1213" id="r3c1-t10" headers="r1c1-t10">
<p><code dir="ltr">emp-dlf.xml</code></p>
</td>
<td class="cellalignment1213" headers="r3c1-t10 r1c2-t10">
<p>A sample output file. The following command generates a file <code dir="ltr">emp.xml</code> that contains all data in the table emp:</p>
<pre dir="ltr">
transx -s "jdbc:oracle:thin:@//myhost:1521/myservicename" <span class="italic">user</span>
 -pw emp.xml emp
</pre>
<p>The <code dir="ltr">emp-dlf.xml</code> file should be identical to <code dir="ltr">emp.xml</code>.</p>
</td>
</tr>
<tr class="cellalignment1205">
<td class="cellalignment1213" id="r4c1-t10" headers="r1c1-t10">
<p><code dir="ltr">txclean.sql</code></p>
</td>
<td class="cellalignment1213" headers="r4c1-t10 r1c2-t10">
<p>A SQL file that drops the tables and sequences created for the demo.</p>
</td>
</tr>
<tr class="cellalignment1205">
<td class="cellalignment1213" id="r5c1-t10" headers="r1c1-t10">
<p><code dir="ltr">txdemo1.java</code></p>
</td>
<td class="cellalignment1213" headers="r5c1-t10 r1c2-t10">
<p>A sample Java application that creates a JDBC connection and loads three datasets into the database.</p>
</td>
</tr>
<tr class="cellalignment1205">
<td class="cellalignment1213" id="r6c1-t10" headers="r1c1-t10">
<p><code dir="ltr">txdemo1.sql</code></p>
</td>
<td class="cellalignment1213" headers="r6c1-t10 r1c2-t10">
<p>A SQL script that creates two tables and a sequence for use by the demo application.</p>
</td>
</tr>
<tr class="cellalignment1205">
<td class="cellalignment1213" id="r7c1-t10" headers="r1c1-t10">
<p><code dir="ltr">txdemo1.xml</code></p>
</td>
<td class="cellalignment1213" headers="r7c1-t10 r1c2-t10">
<p>A sample dataset.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<p>Documentation for how to compile and run the sample programs is located in the <code dir="ltr">README</code>. The basic steps are as follows:</p>
<ol>
<li>
<p>Change into the <code dir="ltr">$ORACLE_HOME/xdk/demo/java/transx</code> directory (UNIX) or <code dir="ltr">%ORACLE_HOME%\xdk\demo\java\transx</code> directory (Windows).</p>
</li>
<li>
<p>Make sure that your environment variables are set as described in <a href="adx_j_gs.htm#BACFEAGD">"Setting Up the Java XDK Environment"</a>. It is recommended that you set the <code dir="ltr">$ORACLE_SID</code> (UNIX) or <code dir="ltr">%ORACLE_SID%</code> (Windows) environment variables to the default database.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
For security purposes, do not expose passwords in command-line interfaces. If "<code dir="ltr">-pw</code>" is specified instead of the password in <code dir="ltr">TransX</code>, the user will be prompted for the password [ <code dir="ltr">Enter password :</code> ]. When the user types the password, it will not be echoed; instead, "<code dir="ltr">*</code>"s will be printed in the command window.</div>
</li>
<li>
<p>Set up the sample database objects by executing <code dir="ltr">txdemo1.sql</code>. Connect to the database and run the <code dir="ltr">txdemo1.sql</code> script as follows:</p>
<pre dir="ltr">
@txdemo1
</pre></li>
<li>
<p>Run the TransX utility from the command line. For example, assume that you want to connect with the Java thin driver and that your host is <code dir="ltr">myhost</code>, your port is <code dir="ltr">1521</code>, and your service name is <code dir="ltr">myservicename</code>. Enter the user name where the token <code dir="ltr"><span class="codeinlineitalic">user</span></code> appears. You can execute the following command to load dataset <code dir="ltr">txdemo1.xml</code>:</p>
<pre dir="ltr">
transx "jdbc:oracle:thin:@//myhost:1521/myservicename" <span class="italic">user</span> -pw txdemo1.xml
</pre>
<p>When the operation is successful, nothing is printed out on your terminal.</p>
</li>
<li>
<p>Query the database to determine whether the load was successful. For example:</p>
<pre dir="ltr">
SELECT * FROM i18n_messages;
</pre></li>
<li>
<p>Drop the demo objects to prepare for another test. Connect to the database and run the <code dir="ltr">txclean.sql</code> script as follows:</p>
<pre dir="ltr">
@txclean
</pre></li>
<li>
<p>Compile the Java demo program. For example:</p>
<pre dir="ltr">
javac txdemo1.java
</pre></li>
<li>
<p>Run the Java program, using the same JDBC and database connection data that you used when invoking the command-line interface. For example:</p>
<pre dir="ltr">
java txdemo1 "jdbc:oracle:thin:@//myhost:1521/myservicename" <span class="italic">user</span> -pw\
              txdemo1.xml
</pre>
<p>Perform the same query test (step 5) and clean-up operation (step 6) as before.</p>
</li>
<li>
<p>Run the TransX Utility to unload data into the predefined XML format. For example:</p>
<pre dir="ltr">
transx -s "jdbc:oracle:thin:@//myhost:1521/myservicename" <span class="italic">user</span> -pw emp.xml emp
</pre>
<p>Compare the data in <code dir="ltr">emp.xml</code> with <code dir="ltr">emp-dlf.xml</code>.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
For simplicity in demonstrating this feature, this example does not perform the password management techniques that a deployed system normally uses. In a production environment, follow the Oracle Database password management guidelines, and disable any sample accounts. See <a class="olink DBSEG50053" href="../../network.112/e36292/app_devs.htm#DBSEG50053"><span class="italic">Oracle Database Security Guide</span></a> for password management guidelines and other security recommendations.</div>
</li>
</ol>
</div>
<!-- class="sect2" -->
<a id="BHAGHDCA"></a>
<div id="ADXDK19507" class="sect2">
<h3 class="sect2">Using the TransX Command-Line Utility</h3>
<p>TransX utility is packaged with Oracle Database. By default, the Oracle Universal Installer installs the utility on disk. As explained in <a href="adx_j_gs.htm#CHDDHEIJ">"Java XDK Component Dependencies"</a>, the TransX library is <code dir="ltr">$ORACLE_HOME/lib/xml.jar</code> (UNIX) and <code dir="ltr">%ORACLE_HOME%\lib\xml.jar</code> (Windows).</p>
<p>You can run the TransX utility from the operating system command line with the following syntax:</p>
<pre dir="ltr">
java oracle.xml.transx.loader
</pre>
<p>The XDK includes a script version of TransX named <code dir="ltr">$ORACLE_HOME/bin/transx</code> (UNIX) and <code dir="ltr">%ORACLE_HOME%\bin\transx.bat</code> (Windows). Assuming that your <code dir="ltr">PATH</code> variable is set correctly, you can run TransX as follows:</p>
<pre dir="ltr">
transx <span class="codeinlineitalic">options</span> <span class="codeinlineitalic">parameters</span>
transx.bat <span class="codeinlineitalic">options</span> <span class="codeinlineitalic">parameters</span>
</pre>
<p>For example, the following command shows valid syntax:</p>
<pre dir="ltr">
transx -s "jdbc:oracle:thin:@//myhost:1521/myservicename" <span class="italic">user</span> -pw emp.xml emp
</pre>
<a id="BHAIEEED"></a>
<div id="ADXDK19508" class="sect3">
<h4 class="sect3">TransX Utility Command-Line Options</h4>
<p><a href="#g1013647">Table 12-4</a> describes the options for the TransX utility.</p>
<div id="ADXDK19509" class="tblformal">
<p class="titleintable"><a id="sthref357"></a><a id="g1013647"></a>Table 12-4 TransX Utility Command-Line Options</p>
<table class="cellalignment1214" title="TransX Utility Command-Line Options " summary="Option, Meaning, and Description are the column names." dir="ltr">
<thead>
<tr class="cellalignment1205">
<th class="cellalignment1212" id="r1c1-t13">Option</th>
<th class="cellalignment1212" id="r1c2-t13">Meaning</th>
<th class="cellalignment1212" id="r1c3-t13">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1205">
<td class="cellalignment1213" id="r2c1-t13" headers="r1c1-t13">
<pre dir="ltr">
-u 
</pre></td>
<td class="cellalignment1213" headers="r2c1-t13 r1c2-t13">
<p>Update existing rows.</p>
</td>
<td class="cellalignment1213" headers="r2c1-t13 r1c3-t13">
<p>Does not skip existing rows but updates them. To exclude a column from the update operation, set the <code dir="ltr">useforupdate</code> attribute to <code dir="ltr">no</code>.</p>
</td>
</tr>
<tr class="cellalignment1205">
<td class="cellalignment1213" id="r3c1-t13" headers="r1c1-t13">
<pre dir="ltr">
-e 
</pre></td>
<td class="cellalignment1213" headers="r3c1-t13 r1c2-t13">
<p>Raise exception if a row is already existing in the database.</p>
</td>
<td class="cellalignment1213" headers="r3c1-t13 r1c3-t13">
<p>Throws an exception if a duplicate row is found. By default, TransX skips duplicate rows. Rows are considered duplicate if the values for lookup-key column(s) in the database and the data set are the same.</p>
</td>
</tr>
<tr class="cellalignment1205">
<td class="cellalignment1213" id="r4c1-t13" headers="r1c1-t13">
<pre dir="ltr">
-x 
</pre></td>
<td class="cellalignment1213" headers="r4c1-t13 r1c2-t13">
<p>Print data in the database in the predefined format.</p>
</td>
<td class="cellalignment1213" headers="r4c1-t13 r1c3-t13">
<p>Similar to the <code dir="ltr">-s</code> option, it causes the utility to perform the opposite operation of loading. Unlike the <code dir="ltr">-s</code> option, it prints to <code dir="ltr">stdout</code>. Redirecting this output to a file is discouraged because intervention of the operating system may result in data loss due to unexpected transcoding.</p>
</td>
</tr>
<tr class="cellalignment1205">
<td class="cellalignment1213" id="r5c1-t13" headers="r1c1-t13">
<p><code dir="ltr">-s</code></p>
</td>
<td class="cellalignment1213" headers="r5c1-t13 r1c2-t13">
<p>Save data in the database into a file in the predefined format.</p>
</td>
<td class="cellalignment1213" headers="r5c1-t13 r1c3-t13">
<p>Performs unloading. TransX Utility queries the database, formats the result into the predefined XML format, and stores it under the specified file name.</p>
</td>
</tr>
<tr class="cellalignment1205">
<td class="cellalignment1213" id="r6c1-t13" headers="r1c1-t13">
<p><code dir="ltr">-p</code></p>
</td>
<td class="cellalignment1213" headers="r6c1-t13 r1c2-t13">
<p>Print the XML to load.</p>
</td>
<td class="cellalignment1213" headers="r6c1-t13 r1c3-t13">
<p>Prints out the data set for insert in the canonical format of XSU.</p>
</td>
</tr>
<tr class="cellalignment1205">
<td class="cellalignment1213" id="r7c1-t13" headers="r1c1-t13">
<p><code dir="ltr">-t</code></p>
</td>
<td class="cellalignment1213" headers="r7c1-t13 r1c2-t13">
<p>Print the XML for update.</p>
</td>
<td class="cellalignment1213" headers="r7c1-t13 r1c3-t13">
<p>Prints out the data set for update in the canonical format of XSU.</p>
</td>
</tr>
<tr class="cellalignment1205">
<td class="cellalignment1213" id="r8c1-t13" headers="r1c1-t13">
<p><code dir="ltr">-o</code></p>
</td>
<td class="cellalignment1213" headers="r8c1-t13 r1c2-t13">
<p>Omit validation (as the data set is parsed it is validated by default).</p>
</td>
<td class="cellalignment1213" headers="r8c1-t13 r1c3-t13">
<p>Causes TransX Utility to skip the format validation, which is performed by default.</p>
</td>
</tr>
<tr class="cellalignment1205">
<td class="cellalignment1213" id="r9c1-t13" headers="r1c1-t13">
<p><code dir="ltr">-v</code></p>
</td>
<td class="cellalignment1213" headers="r9c1-t13 r1c2-t13">
<p>Validate the data format and exit without loading.</p>
</td>
<td class="cellalignment1213" headers="r9c1-t13 r1c3-t13">
<p>Causes TransX Utility to perform validation and exit.</p>
</td>
</tr>
<tr class="cellalignment1205">
<td class="cellalignment1213" id="r10c1-t13" headers="r1c1-t13">
<p><code dir="ltr">-w</code></p>
</td>
<td class="cellalignment1213" headers="r10c1-t13 r1c2-t13">
<p>Preserve white space.</p>
</td>
<td class="cellalignment1213" headers="r10c1-t13 r1c3-t13">
<p>Causes TransX Utility to treat whitespace characters (such as \t, \r, \n, and ' ') as significant. The utility condenses consecutive whitespace characters in string data elements into one space character by default.</p>
</td>
</tr>
<tr class="cellalignment1205">
<td class="cellalignment1213" id="r11c1-t13" headers="r1c1-t13">
<p><code dir="ltr">-l</code></p>
</td>
<td class="cellalignment1213" headers="r11c1-t13 r1c2-t13">
<p>Set the case of language tag.</p>
</td>
<td class="cellalignment1213" headers="r11c1-t13 r1c3-t13">
<p>Causes TransX Utility to override the style of normalizing the case of language tag specified in the <code dir="ltr">normalize-langtag</code> attribute on DLF or the <code dir="ltr">setNormalizeLangTag()</code> method on the TransX API. Valid options are <code dir="ltr">-ls</code>, <code dir="ltr">-lu</code> and <code dir="ltr">-ll</code> for standard, uppercase and lowercase, respectively.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<p>Note the following command-line option exceptions:</p>
<ul>
<li>
<p><code dir="ltr">-u</code> and <code dir="ltr">-e</code> are mutually exclusive.</p>
</li>
<li>
<p><code dir="ltr">-v</code> must be the only option followed by data, as shown in the examples.</p>
</li>
<li>
<p><code dir="ltr">-x</code> must be the only option followed by connect information and a SQL query, as shown in the examples.</p>
</li>
</ul>
<p>Omitting all arguments results in the display of the usage information shown in <a href="#g1013647">Table 12-4</a>.</p>
</div>
<!-- class="sect3" -->
<div id="ADXDK19510" class="sect3"><!-- infolevel="all" infotype="General" --><a id="sthref358"></a>
<h4 class="sect3">TransX Utility Command-Line Parameters</h4>
<p><a href="#BHAEAFBA">Table 12-5</a> describes the command-line parameters for the TransX utility.</p>
<div id="ADXDK19511" class="tblformal">
<p class="titleintable"><a id="sthref359"></a><a id="BHAEAFBA"></a>Table 12-5 TransX Utility Command-Line Parameters</p>
<table class="cellalignment1214" title="TransX Utility Command-Line Parameters" summary="Parameter andd Meaning are the columns." dir="ltr">
<thead>
<tr class="cellalignment1205">
<th class="cellalignment1212" id="r1c1-t14">Parameter</th>
<th class="cellalignment1212" id="r1c2-t14">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1205">
<td class="cellalignment1213" id="r2c1-t14" headers="r1c1-t14">
<pre dir="ltr">
connect_string 
</pre></td>
<td class="cellalignment1213" headers="r2c1-t14 r1c2-t14">
<p>The JDBC connect string. See <a class="olink JJDBC" href="../../java.112/e16548/toc.htm"><span class="italic">Oracle Database JDBC Developer's Guide</span></a>,</p>
</td>
</tr>
<tr class="cellalignment1205">
<td class="cellalignment1213" id="r3c1-t14" headers="r1c1-t14">
<pre dir="ltr">
username 
</pre></td>
<td class="cellalignment1213" headers="r3c1-t14 r1c2-t14">
<p>Database user name.</p>
</td>
</tr>
<tr class="cellalignment1205">
<td class="cellalignment1213" id="r4c1-t14" headers="r1c1-t14">
<pre dir="ltr">
password 
</pre></td>
<td class="cellalignment1213" headers="r4c1-t14 r1c2-t14">
<p>Password for the database user, or "<code dir="ltr">-pw</code>".</p>
</td>
</tr>
<tr class="cellalignment1205">
<td class="cellalignment1213" id="r5c1-t14" headers="r1c1-t14">
<pre dir="ltr">
datasource 
</pre></td>
<td class="cellalignment1213" headers="r5c1-t14 r1c2-t14">
<p>An XML document specified by filename or URL.</p>
</td>
</tr>
<tr class="cellalignment1205">
<td class="cellalignment1213" id="r6c1-t14" headers="r1c1-t14">
<pre dir="ltr">
options
</pre></td>
<td class="cellalignment1213" headers="r6c1-t14 r1c2-t14">
<p>Described in <a href="#g1013647">Table 12-4, "TransX Utility Command-Line Options"</a>.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink JAXML" href="../e10769/toc.htm"><span class="italic">Oracle Database XML Java API Reference</span></a> for complete details of the <code dir="ltr">TransX</code> interface</div>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="BHAJABFA"></a>
<div id="ADXDK19512" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Loading Data with the TransX Utility</h2>
<p>The TransX utility is especially useful for populating a database with multilingual data. To use the utility to transfer data in and out of a database schema you must create a dataset that maps to this schema. This section describes a typical use scenario in which you use TransX to organize translated application messages in a database.</p>
<p>This section contains the following topics:</p>
<ul>
<li>
<p><a href="#BHAGABGH">Storing Messages in the Database</a></p>
</li>
<li>
<p><a href="#BHAGIAGE">Creating a Dataset in a Predefined Format</a></p>
</li>
<li>
<p><a href="#BHAFHFCH">Loading the Data</a></p>
</li>
<li>
<p><a href="#BHAIHGGC">Querying the Data</a></p>
</li>
</ul>
<a id="BHAGABGH"></a>
<div id="ADXDK19513" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Storing Messages in the Database</h3>
<p>To build an internationalized system, it is essential to decouple localizable resources from business logic. A typical example of such a resource is translated text information. Data that is specific to a particular region and shares a common language and cultural conventions must be organized with a resource management facility that can retrieve locale-specific information. A database is often used to store such data because of easy maintenance and flexibility.</p>
<p>Assume that you create the table with the structure and content shown in <a href="#BHAEHHJD">Example 12-1</a> and insert data.</p>
<div id="ADXDK19514" class="example">
<p class="titleinexample"><a id="BHAEHHJD"></a>Example 12-1 Structure of Table translated_messages</p>
<pre dir="ltr">
CREATE TABLE translated_messages
(
  MESSAGE_ID       NUMBER(4)
     CONSTRAINT tm_mess_id_nn NOT NULL
, LANGUAGE_ID      VARCHAR2(42)
, MESSAGE          VARCHAR2(200)
);
</pre></div>
<!-- class="example" -->
<p>The column <code dir="ltr">language_id</code> is defined in this table so that applications can retrieve messages based on the preferred language of the end user. It contains abbreviations of language names to identify the language of messages.</p>
<p><a href="#BHACAHIG">Example 12-2</a> shows sample data for the table.</p>
<div id="ADXDK19515" class="example">
<p class="titleinexample"><a id="BHACAHIG"></a>Example 12-2 Query of translated_messages</p>
<pre dir="ltr">
MESSAGE_ID  LANGUAGE_ID  MESSAGE
----------  -----------  ----------------------------------
1           us           Welcome to System X
2           us           Please enter username and password
</pre></div>
<!-- class="example" -->
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink NLSPG012" href="../../server.112/e10729/ch12scanner.htm#NLSPG012"><span class="italic">Oracle Database Globalization Support Guide</span></a> for Oracle language abbreviations</div>
</div>
<!-- class="sect2" -->
<a id="BHAGIAGE"></a>
<div id="ADXDK19516" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Creating a Dataset in a Predefined Format</h3>
<p><a href="adx_ref_dlf.htm#CACJEAGH">Chapter 13, "Data Loading Format (DLF) Specification"</a> describes the complete syntax of the Data Loading Format (DLF) language. This language is used to create a DLF document that provides the input to TransX.</p>
<p>Given the dataset (the input data) in the canonical format, the TransX utility loads the data into the designated locations in the database. Note that TransX does not create the database objects: you must create the tables or views before attempting to load data.</p>
<p>An XML document that represents the <code dir="ltr">translated_messages</code> table created in <a href="#BHAEHHJD">Example 12-1</a> looks something like <a href="#BHAEHJDB">Example 12-3</a>. The dataset reflects the structure of the target table, which in this case is called <code dir="ltr">translated_messages</code>.</p>
<div id="ADXDK19517" class="example">
<p class="titleinexample"><a id="BHAEHJDB"></a>Example 12-3 example.xml</p>
<pre dir="ltr">
&lt;?xml version="1.0"?&gt;
&lt;table name="translated_messages"&gt;
  &lt;!-- Specify the unique identifier --&gt; 
  &lt;lookup-key&gt;
    &lt;column name="message_id" /&gt;
    &lt;column name="language_id" /&gt;
  &lt;/lookup-key&gt;
  &lt;!-- Specify the columns into which data will be inserted --&gt;  
  &lt;columns&gt;
    &lt;column name="message_id"  type="number"/&gt;
    &lt;column name="language_id" type="string" constant="us" translate="yes"/&gt;
    &lt;column name="message"     type="string" translate="yes"/&gt;
  &lt;/columns&gt;
  &lt;!-- Specify the data to be inserted --&gt;
  &lt;dataset&gt;
    &lt;row&gt;
      &lt;col name="message_id"&gt;1&lt;/col&gt;
      &lt;col name="message" translation-note="dnt'X'"&gt;Welcome to System X&lt;/col&gt;
    &lt;/row&gt;
    &lt;row&gt;
      &lt;col name="message_id"&gt;2&lt;/col&gt;
      &lt;col name="message"&gt;Please enter username and password&lt;/col&gt;
    &lt;/row&gt;
    &lt;!-- ... --&gt;
  &lt;/dataset&gt; 
&lt;/table&gt; 
</pre></div>
<!-- class="example" -->
<div id="ADXDK19518" class="sect3"><!-- infolevel="all" infotype="General" --><a id="sthref360"></a>
<h4 class="sect3">Format of the Input XML Document</h4>
<p>The XML document in <a href="#BHAEHJDB">Example 12-3</a> starts with the following declaration:</p>
<pre dir="ltr">
&lt;?xml version="1.0"?&gt;
</pre>
<p>Its root element <code dir="ltr">&lt;table&gt;</code>, which has an attribute that specifies the name of the table, encloses all the other elements:</p>
<pre dir="ltr">
&lt;table name="translated_messages"&gt;
...
&lt;/table&gt;
</pre>
<p>As explained in <a href="adx_ref_dlf.htm#CACCBAAD">"Elements in DLF"</a>, the <code dir="ltr">&lt;table&gt;</code> element contains three subsections:</p>
<ul>
<li>
<p><a href="adx_ref_dlf.htm#CACHACBF">Lookup Key Elements</a></p>
</li>
<li>
<p><a href="adx_ref_dlf.htm#CACEDGAB">Metadata Elements</a></p>
</li>
<li>
<p><a href="adx_ref_dlf.htm#CACJEFBC">Data Elements</a></p>
</li>
</ul>
<p>The preceding sections map to elements in <a href="#BHAEHJDB">Example 12-3</a> as follows:</p>
<pre dir="ltr">
&lt;lookup-key&gt;...&lt;/lookup-key&gt;
&lt;columns&gt;...&lt;/columns&gt;
&lt;dataset&gt;...&lt;/dataset&gt;
</pre>
<p>The lookup keys are columns used to evaluate rows if they already exist in the database. Because we want a pair of message and language IDs to identify a unique string, the document lists the corresponding columns. Thus, the <code dir="ltr">message_id</code>, <code dir="ltr">language_id</code>, and <code dir="ltr">message</code> columns in table <code dir="ltr">translated_messages</code> map to the attributes in the <code dir="ltr">&lt;column&gt;</code> element as follows:</p>
<pre dir="ltr">
&lt;column name="message_id"  type="number"/&gt;
&lt;column name="language_id" type="string" constant="us" translate="yes"/&gt;
&lt;column name="message"     type="string" translate="yes"/&gt;
</pre>
<p>The columns section should mirror the table structure because it specifies which piece of data in the dataset section maps to which table column. The column names should be consistent throughout the XML dataset and database. You can use the <code dir="ltr">&lt;column&gt;</code> attributes in <a href="#BHAJCBHG">Table 12-6</a> to describe the data to be loaded. Note that these attributes form a subset of the DLF attributes described in <a href="adx_ref_dlf.htm#CACJJFJG">"Attributes in DLF"</a>.</p>
<div id="ADXDK19519" class="tblhruleformalwide">
<p class="titleintable"><a id="sthref361"></a><a id="BHAJCBHG"></a>Table 12-6 &lt;column&gt; Attributes</p>
<table class="cellalignment1211" title="&lt;column&gt; Attributes" summary="This table describes the TransX data set expressions: constant, sequence, and query." dir="ltr">
<thead>
<tr class="cellalignment1205">
<th class="cellalignment1212" id="r1c1-t17">Attribute</th>
<th class="cellalignment1212" id="r1c2-t17">Description</th>
<th class="cellalignment1212" id="r1c3-t17">Example</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1205">
<td class="cellalignment1213" id="r2c1-t17" headers="r1c1-t17">
<p>type</p>
</td>
<td class="cellalignment1213" headers="r2c1-t17 r1c2-t17">
<p>Specifies the datatype of a column in the dataset. This attribute specifies the kind of text contained in the <code dir="ltr">&lt;col&gt;</code> element in the dataset. Depending on this type, the data loading tool applies different datatype conventions to the data.</p>
</td>
<td class="cellalignment1213" headers="r2c1-t17 r1c3-t17">
<pre dir="ltr">
&lt;column name="col" type="string" /&gt;
</pre></td>
</tr>
<tr class="cellalignment1205">
<td class="cellalignment1213" id="r3c1-t17" headers="r1c1-t17">
<p>constant</p>
</td>
<td class="cellalignment1213" headers="r3c1-t17 r1c2-t17">
<p>Specifies a constant value. A column with a fixed value for each row does not have to repeat that same value.</p>
</td>
<td class="cellalignment1213" headers="r3c1-t17 r1c3-t17">
<pre dir="ltr">
&lt;column name="col" type="string" constant="us" /&gt;
</pre></td>
</tr>
<tr class="cellalignment1205">
<td class="cellalignment1213" id="r4c1-t17" headers="r1c1-t17">
<p>language</p>
</td>
<td class="cellalignment1213" headers="r4c1-t17 r1c2-t17">
<p>The language attribute indicates that the column is the language column, which stores a language tag. It works in the same way as the constant attribute, except for the role to declare the column is the language column.</p>
</td>
<td class="cellalignment1213" headers="r4c1-t17 r1c3-t17">
<pre dir="ltr">
&lt;column name="language" type="string" language="us" /&gt;
</pre></td>
</tr>
<tr class="cellalignment1205">
<td class="cellalignment1213" id="r5c1-t17" headers="r1c1-t17">
<p>sequence</p>
</td>
<td class="cellalignment1213" headers="r5c1-t17 r1c2-t17">
<p>Specifies a sequence in the database used to fill in the value for this column.</p>
</td>
<td class="cellalignment1213" headers="r5c1-t17 r1c3-t17">
<pre dir="ltr">
&lt;column name="id" type="number" sequence="id_sq" /&gt;
</pre></td>
</tr>
<tr class="cellalignment1205">
<td class="cellalignment1213" id="r6c1-t17" headers="r1c1-t17">
<p>translate</p>
</td>
<td class="cellalignment1213" headers="r6c1-t17 r1c2-t17">
<p>Indicates whether the text of this column or parameter is to be translated.</p>
</td>
<td class="cellalignment1213" headers="r6c1-t17 r1c3-t17">
<pre dir="ltr">
&lt;column name="msg" type="string" translate="yes"/&gt;
</pre></td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblhruleformalwide" -->
<p>The <code dir="ltr">constant</code> attribute of a <code dir="ltr">&lt;column&gt;</code> element specifies a value to be stored into the corresponding column for every row in the dataset section. Because in this example we are working in the original language, the <code dir="ltr">language_id</code> column is set to the value <code dir="ltr">us</code>.</p>
<p><span class="bold">Defining the Language Column</span></p>
<p>Alternatively, the <code dir="ltr">language_id</code> column may use the <code dir="ltr">language</code> attribute instead of the <code dir="ltr">constant</code> attribute. A DLF document with the <code dir="ltr">language</code> attribute can use the <code dir="ltr">lang</code> attribute in the xml namespace. A language column can use the "%x" placeholder to get its value from the standard <code dir="ltr">xml:lang</code> attribute at the root table element.Thus <code dir="ltr">translate="yes"</code> is not needed, because the value "%x" does not have to be translated. The result of loading this DLF is the same as Example 10-3.</p>
<div id="ADXDK19520" class="example">
<p class="titleinexample"><a id="BABGAAJB"></a>Example 12-4 example.xml with a Language Attribute</p>
<pre dir="ltr">
&lt;?xml version="1.0"?&gt;
&lt;table <span class="bold">xml:lang="us"</span> name="translated_messages"&gt;
  &lt;!-- Specify the unique identifier --&gt; 
  &lt;lookup-key&gt;
    &lt;column name="message_id" /&gt;
    &lt;column name="language_id" /&gt;
  &lt;/lookup-key&gt;
  &lt;!-- Specify the columns into which data will be inserted --&gt;  
  &lt;columns&gt;
    &lt;column name="message_id"  type="number"/&gt;
    &lt;column name="language_id" type="string" language="%x"/&gt;
    &lt;column name="message"     type="string" translate="yes"/&gt;
  &lt;/columns&gt;
  &lt;!-- Specify the data to be inserted --&gt;
  &lt;dataset&gt;
    &lt;row&gt;
      &lt;col name="message_id"&gt;1&lt;/col&gt;
      &lt;col name="message" translation-note="dnt'X'"&gt;Welcome to System X&lt;/col&gt;
    &lt;/row&gt;
    &lt;row&gt;
      &lt;col name="message_id"&gt;2&lt;/col&gt;
      &lt;col name="message"&gt;Please enter username and password&lt;/col&gt;
    &lt;/row&gt;
    &lt;!-- ... --&gt;
  &lt;/dataset&gt; 
&lt;/table&gt;
</pre></div>
<!-- class="example" -->
<p>As explained in <a href="adx_ref_dlf.htm#CACIDCGF">Table 13-10</a>, the valid values for the <code dir="ltr">type</code> attribute are <code dir="ltr">string</code>, <code dir="ltr">number</code>, <code dir="ltr">date</code>, and <code dir="ltr">dateTime</code>. These values correspond to the datatypes defined in the XML schema standard, so each piece of data should conform to the respective datatype definition. In particular, it is important to use the ISO 8601 format for the <code dir="ltr">date</code> and <code dir="ltr">dateTime</code> datatypes, as shown in <a href="#BHAFBCHD">Table 12-7</a>.</p>
<div id="ADXDK19521" class="tblhruleformal">
<p class="titleintable"><a id="sthref362"></a><a id="BHAFBCHD"></a>Table 12-7 date and dateTime Formats</p>
<table class="cellalignment1211" title="date and dateTime Formats" summary="date and dateTime formats" dir="ltr">
<thead>
<tr class="cellalignment1205">
<th class="cellalignment1212" id="r1c1-t18">Datatype</th>
<th class="cellalignment1212" id="r1c2-t18">Format</th>
<th class="cellalignment1212" id="r1c3-t18">Example</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1205">
<td class="cellalignment1213" id="r2c1-t18" headers="r1c1-t18">
<p>date</p>
</td>
<td class="cellalignment1213" headers="r2c1-t18 r1c2-t18">
<p>CCYY-MM-DD</p>
</td>
<td class="cellalignment1213" headers="r2c1-t18 r1c3-t18">
<p>2009-05-20</p>
</td>
</tr>
<tr class="cellalignment1205">
<td class="cellalignment1213" id="r3c1-t18" headers="r1c1-t18">
<p>dateTime</p>
</td>
<td class="cellalignment1213" headers="r3c1-t18 r1c2-t18">
<p>CCYY-MM-DDThh:mm:ss</p>
</td>
<td class="cellalignment1213" headers="r3c1-t18 r1c3-t18">
<p>2009-05-20T16:01:37</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblhruleformal" -->
<p><a href="#BHAJBGGJ">Example 12-5</a> shows how you can represent a table row with <code dir="ltr">dateTime</code> data in a TransX dataset.</p>
<div id="ADXDK19522" class="example">
<p class="titleinexample"><a id="BHAJBGGJ"></a>Example 12-5 dateTime Row</p>
<pre dir="ltr">
&lt;row&gt;
  &lt;col name="article_id"&gt;12345678&lt;/col&gt;
  &lt;col name="author_id"&gt;10500&lt;/col&gt;
  &lt;col name="submission"&gt;2002-03-09T16:01:37&lt;/col&gt;
  &lt;col name="title"&gt;...&lt;/col&gt;
  &lt;!-- some columns follows --&gt;
&lt;/row&gt;
</pre></div>
<!-- class="example" --></div>
<!-- class="sect3" -->
<div id="ADXDK19523" class="sect3"><!-- infolevel="all" infotype="General" --><a id="sthref363"></a>
<h4 class="sect3">Specifying Translations in a Dataset</h4>
<p>As explained in <a href="adx_ref_dlf.htm#CACJJFJG">"Attributes in DLF"</a>, you can use the <code dir="ltr">translation</code> attribute to specify whether the column contains translated data. In <a href="#BHAEHJDB">Example 12-3</a>, two <code dir="ltr">&lt;column&gt;</code> elements use the <code dir="ltr">translate</code> attribute differently. The attribute for the <code dir="ltr">language_id</code> column specifies that the value of the <code dir="ltr">constant</code> attribute should be translated:</p>
<pre dir="ltr">
&lt;column name="language_id" type="string" constant="us" translate="yes"/&gt;
</pre>
<p>In contrast, the following <code dir="ltr">translate</code> attribute requests translation of the data in the dataset section with a name that matches this column:</p>
<pre dir="ltr">
&lt;column name="message"     type="string" translate="yes"/&gt;
</pre>
<p>For example, the preceding element specifies that the following messages in the dataset section should be translated:</p>
<pre dir="ltr">
&lt;col name="message" translation-note="dnt'X'"&gt;Welcome to System X&lt;/col&gt;
&lt;col name="message"&gt;Please enter username and password&lt;/col&gt;
</pre>
<p>When translating messages for applications, you may decide that specified words or phrases should be left untranslated. The <code dir="ltr">translation-note</code> attribute shown in the preceding example achieves this goal.</p>
<p>An XSLT processor can convert the preceding format into another format for exchanging translation data among localization service providers for use with XML-based translation tools. This transformation insulates developers from tasks such as keeping track of revisions, categorizing translatable strings into units, and so on.</p>
<p><a href="#BABHAHGI">Example 12-6</a> shows what the document in <a href="#BHAEHJDB">Example 12-3</a> looks like after translation.</p>
<div id="ADXDK19524" class="example">
<p class="titleinexample"><a id="BABHAHGI"></a>Example 12-6 example_es.xml</p>
<pre dir="ltr">
&lt;?xml version="1.0"?&gt;
&lt;table name="translated_messages"&gt;
&lt;!-- Specify the unique identifier --&gt;
&lt;lookup-key&gt;
&lt;column name="message_id" /&gt;
&lt;column name="language_id" /&gt;
&lt;/lookup-key&gt;
&lt;!-- Specify the columns into which data will be inserted --&gt;
&lt;columns&gt;
&lt;column name="message_id" type="number"/&gt;
&lt;column name="language_id" type="string" constant="es"
translate="yes"/&gt;
</pre></div>
<!-- class="example" -->
<p><a href="#BABJDFBJ">Example 12-7</a> shows what the document in <a href="#BABGAAJB">Example 12-4</a> looks like after translation. Unlike the previous example, the column definition is not changed.</p>
<div id="ADXDK19525" class="example">
<p class="titleinexample"><a id="BABJDFBJ"></a>Example 12-7 example_es.xml with a Language Attribute</p>
<pre dir="ltr">
&lt;?xml version="1.0"?&gt;
&lt;table  name="translated_messages"&gt;
  &lt;!-- Specify the unique identifier --&gt;
  &lt;lookup-key&gt;
    &lt;column name="message_id" /&gt;
    &lt;column name="language_id" /&gt;
  &lt;/lookup-key&gt;
  &lt;!-- Specify the columns into which data will be inserted --&gt;
  &lt;columns&gt;
    &lt;column name="message_id"  type="number"/&gt;
    &lt;column name="language_id" type="string" language="%x"/&gt;
 
:
:
</pre></div>
<!-- class="example" -->
<p>If you use a text editor or a traditional text-based translation tool during the translation process, it is important to maintain the encoding of the document. After a document is translated, it may be in a different encoding from the original. As explained in <a href="adx_ref_dlf.htm#CACDBHCB">"XML Declaration in DLF"</a>, If the translated document is in an encoding other than Unicode, then add the encoding declaration to the XML declaration on the first line. A declaration for non-Unicode encoding looks like the following:</p>
<pre dir="ltr">
&lt;?xml version="1.0" encoding="ISO-8859-15"?&gt;
</pre>
<p>To ensure that the translation process does not lose syntactic integrity, process the document as XML. Otherwise, you can check the format by specifying the <code dir="ltr">-v</code> option of the command-line interface. If a syntactic error exists, the utility prints the location and description of the error. You must fix errors for the data transfer to succeed.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="adx_ref_dlf.htm#CACJEAGH">Chapter 13, "Data Loading Format (DLF) Specification"</a></div>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="BHAFHFCH"></a>
<div id="ADXDK19526" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Loading the Data</h3>
<p>Suppose that you want to load the sample documents in <a href="#BHAEHJDB">Example 12-3</a> and <a href="#BHABCIHD">Example 12-8</a> into the <code dir="ltr">translated_messages</code> table that you created in <a href="#BHAEHHJD">Example 12-1</a>. You can use the sample program in <a href="#BHABCIHD">Example 12-8</a>, which you can find in the TransX demo directory, to load the data.</p>
<div id="ADXDK19527" class="example">
<p class="titleinexample"><a id="BHABCIHD"></a>Example 12-8 txdemo1.java</p>
<pre dir="ltr">
// Copyright (c) 2001 All rights reserved Oracle Corporation
 
import oracle.xml.transx.*;
 
public class txdemo1 {
 
  /**
   * Constructor
   */
  public txdemo1() {
  }
 
  /**
   * main
   * @param args
   *
   * args[0] : connect string
   * args[1] : username
   * args[2] : password
   * args[3+] : xml file names
   */
  public static void main(String[] args) throws Exception {
 
    // instantiate a transx class
    TransX  transx = loader.getLoader();
 
    // start a data loading session
    transx.open( args[0], args[1], args[2] );
 
    // specify operation modes
    transx.setLoadingMode( LoadingMode.SKIP_DUPLICATES );
    transx.setValidationMode( false );
 
    // load the dataset(s)
    for ( int i = 3 ; i &lt; args.length ; i++ )
    {
      transx.load( args[i] );
    }
 
    // cleanup
    transx.close();
  }
}
</pre></div>
<!-- class="example" -->
<p>The <code dir="ltr">txdemo1.java</code> program follows these steps:</p>
<ol>
<li>
<p>Create a TransX loader object. For example:</p>
<pre dir="ltr">
TransX  transx = loader.getLoader();
</pre></li>
<li>
<p>Open a data loading session. The first three command-line parameters are the JDBC connect string, database username, and database password. These parameters are passed to the <code dir="ltr">TransX.open()</code> method. The program includes the following statement:</p>
<pre dir="ltr">
transx.open( args[0], args[1], args[2] );
</pre></li>
<li>
<p>Configure the TransX loader. The program configures the loader to skip duplicate rows and to validate the input dataset. The program includes the following statements:</p>
<pre dir="ltr">
transx.setLoadingMode( LoadingMode.SKIP_DUPLICATES );
transx.setValidationMode( false );
</pre></li>
<li>
<p>Load the data. The first three command-line parameters specify connection information; any additional parameters specify input XML documents. The program invokes the <code dir="ltr">load()</code> method for every specified document:</p>
<pre dir="ltr">
for ( int i = 3 ; i &lt; args.length ; i++ )
{
  transx.load( args[i] );
}
</pre></li>
<li>
<p>Close the data loading session. The program includes the following statement:</p>
<pre dir="ltr">
transx.close();
</pre></li>
</ol>
<p>After compiling the program with <code dir="ltr">javac</code>, you can run it from the command line. The following example uses the Java thin driver to connect to instance <code dir="ltr">mydb</code> on port <code dir="ltr">1521</code> of computer <code dir="ltr">myhost</code>. It connects to the <span class="italic">user</span> schema and loads the XML documents example.xml and example_es.xml:</p>
<pre dir="ltr">
java txdemo1 "jdbc:oracle:thin:@//myhost:1521/mydb" <span class="italic">user</span> -pw example.xml
     example_es.xml
</pre>
<p>In building a multilingual software system, translations usually become available at a later stage of development. They also tend to evolve over a period of time. If you need to add messages to the database, then you can add new rows in your <code dir="ltr">&lt;dataset&gt;</code> definition by running the TransX utility again. TransX recognizes which rows are new and inserts only the new messages based on the columns specified in the <code dir="ltr">&lt;lookup-key&gt;</code> section. If some messages are updated, then run TransX with the <code dir="ltr">-u</code> option to update existing rows with the data specified in XML, as shown in the following example:</p>
<pre dir="ltr">
transx -u "jdbc:oracle:thin:@//myhost:1521/mydb" <span class="italic">user</span> -pw example.xml
       example_es.xml
</pre></div>
<!-- class="sect2" -->
<a id="BHAIHGGC"></a>
<div id="ADXDK19528" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Querying the Data</h3>
<p>After using the program in <a href="#BHABCIHD">Example 12-8</a> to load the data, you can query the <code dir="ltr">translated_messages</code> table to see the results. The results should look like the following:</p>
<pre dir="ltr">
MESSAGE_ID  LANGUAGE_ID  MESSAGE
----------  -----------  ----------------------------------
1           us           Welcome to System X
1           es           Bienvenido al Sistema X
2           us           Please enter username and password
2           es           Porfavor entre su nombre de usuario y su contrase&ntilde;a
</pre>
<p>An application can retrieve a message in a specific language by using the <code dir="ltr">language_id</code> and <code dir="ltr">message_id</code> columns in a <code dir="ltr">WHERE</code> clause. For example, you can execute the following query:</p>
<pre dir="ltr">
SELECT message 
FROM   translated_messages 
WHERE  message_id = 2 
AND    language_id = 'es';

MESSAGE
----------------------------------
Porfavor entre su nombre de usuario y su contrase&ntilde;a
</pre></div>
<!-- class="sect2" --></div>
<!-- class="sect1" --></div>
<!-- class="chapter" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment1204">
<tr>
<td class="cellalignment1213">
<table class="cellalignment1209">
<tr>
<td class="cellalignment1208"><a href="adx_j_xsu.htm"><img width="24" height="24" src="../../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment1208"><a href="adx_ref_dlf.htm"><img width="24" height="24" src="../../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;2001, 2014,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment1216">
<table class="cellalignment1207">
<tr>
<td class="cellalignment1208"><a href="../../index.htm"><img width="24" height="24" src="../../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment1208"><a href="../../nav/portal_booklist.htm"><img width="24" height="24" src="../../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment1208"><a href="toc.htm"><img width="24" height="24" src="../../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment1208"><a href="index.htm"><img width="24" height="24" src="../../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment1208"><a href="../../nav/mindx.htm"><img width="24" height="24" src="../../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment1208"><a href="../../dcommon/html/feedback.htm"><img width="24" height="24" src="../../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>
</body>
</html>
