<!DOCTYPE html>
<html lang="en" >
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1">
<meta charset="utf-8">
<title>Unified Java API for XML</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Merged Version 1032" />
<meta name="dcterms.created" content="2014-12-05T14:20:37Z" />
<meta name="robots" content="all" />
<meta name="dcterms.title" content="XML Developer's Kit Programmer's Guide" />
<meta name="dcterms.identifier" content="E23582-06" />
<meta name="dcterms.isVersionOf" content="ADXDK" />
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;2001, 2014,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved." />
<link rel="Start" href="../../index.htm" title="Home" type="text/html" />
<link rel="Copyright" href="../../dcommon/html/cpyr.htm" title="Copyright" type="text/html" />

<script type="application/javascript"  src="../../dcommon/js/headfoot.js"></script>
<script type="application/javascript"  src="../../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html" />
<link rel="Index" href="index.htm" title="Index" type="text/html" />
<link rel="Glossary" href="glossary.htm" title="Glossary" type="text/html" />
<link rel="Prev" href="adx_pt_java.htm" title="Previous" type="text/html" />
<link rel="Next" href="adx_j_gs.htm" title="Next" type="text/html" />
<link rel="alternate" href="../e23582.pdf" title="PDF version" type="application/pdf" />
<link rel="schema.dcterms" href="http://purl.org/dc/terms/" />
<link rel="stylesheet" href="../../dcommon/css/fusiondoc.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/header.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/footer.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/fonts.css">
<link rel="stylesheet" href="../../dcommon/css/foundation.css">
<link rel="stylesheet" href="../../dcommon/css/codemirror.css">
<link rel="stylesheet" type="text/css" title="Default" href="../../nav/css/html5.css">
<link rel="stylesheet" href="../../dcommon/css/respond-480-tablet.css">
<link rel="stylesheet" href="../../dcommon/css/respond-768-laptop.css">
<link rel="stylesheet" href="../../dcommon/css/respond-1140-deskop.css">
<script type="application/javascript" src="../../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">10/47</span> <!-- End Header -->
<div id="ADXDK8880" class="chapter"><a id="g1009876"></a>
<h1 class="chapter"><span class="secnum">2</span> Unified Java API for XML</h1>
<p>This chapter introduces you to the <a id="sthref39"></a>Unified Java API for XMLType and provides information about the APIs that are unified for Oracle XML DB and Oracle XML Developer's Kit.</p>
<p>This chapter contains these topics:</p>
<ul>
<li>
<p><a href="#BABIDGFA">Overview of Unified Java API</a>&nbsp;</p>
</li>
<li>
<p><a href="#BABDBFCB">Component Unification</a></p>
</li>
<li>
<p><a href="#BABCCJFF">Moving to the Unified Java API Model</a></p>
</li>
</ul>
<a id="BABIDGFA"></a>
<div id="ADXDK19056" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Overview of <a id="sthref40"></a><a id="sthref41"></a><a id="sthref42"></a><a id="sthref43"></a><a id="sthref44"></a>Unified Java API</h2>
<p>Unified Java API is a programming interface that combines the functionality required by both Oracle XDK and Oracle XML DB. Oracle XML DB implements Java DOM API using the Java package <code dir="ltr">oracle.xdb.dom</code> and Oracle XML Developer's Kit implements it using the <code dir="ltr">oracle.xml.parser.v2</code> package. With Unified Java APIs, you can use a unified set of core DOM APIs required by both Oracle XDK and Oracle XML DB, as well as make use of the new Java classes that provide extra functionality that is built on top of the DOM API.</p>
<p>You can use Unified Java APIs irrespective of how your XML data is stored, that is, whether it resides within or outside the database. This is because Unified Java APIs use a session pool model of connection management. If you do not specify the connection type as <span class="italic">thick</span> (that uses OCI APIs and is C-based) or <span class="italic">thin</span> (that uses JDBC APIs and is pure Java-based), then Java Document Object Model (DOM) APIs are used for connecting to a local document object that is not stored in the database.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink JAXML" href="../e10769/toc.htm">Oracle Database XML Java API Reference</a> for information about the <code dir="ltr">oracle.xml.parser.v2</code> package.</div>
</div>
<!-- class="sect1" -->
<a id="BABDBFCB"></a>
<div id="ADXDK19057" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Component Unification</h2>
<p>Certain components that were either supported by only the <span class="italic">thick</span> connection or the <span class="italic">thin</span> connection have been unified in the Unified Java API model. The components that were earlier supported by <span class="italic">thin</span> connection but have been unified include:</p>
<ul>
<li>
<p>DOM Parser</p>
</li>
<li>
<p>JAXP Transformer</p>
</li>
<li>
<p>XSU</p>
</li>
<li>
<p>XSLT</p>
</li>
</ul>
</div>
<!-- class="sect1" -->
<a id="BABCCJFF"></a>
<div id="ADXDK19058" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Moving to the Unified Java API Model</h2>
<p>Unified Java API provides new Java classes that replace the old <code dir="ltr">oracle.xdb.dom</code> Java classes. All classes in the <code dir="ltr">oracle.xdb.dom</code> package have been deprecated. If you are using any of the old classes, you need to migrate to the new Unified Java API and use the <code dir="ltr">oracle.xml.parser.v2</code> classes instead.</p>
<div id="ADXDK19059" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref45"></a>
<h3 class="sect2">Java DOM APIs for XMLType Classes</h3>
<p><a href="#BABGEAJI">Table 2-1</a> lists the <code dir="ltr">oracle.xdb.dom</code> package <a id="sthref46"></a>classes that have been deprecated in the Oracle Database 11g release 1.</p>
<div id="ADXDK19060" class="tblformal">
<p class="titleintable"><a id="sthref47"></a><a id="BABGEAJI"></a>Table 2-1 Deprecated XDB <a id="sthref48"></a>Package Classes And Their Unified Java API Equivalent</p>
<table class="cellalignment1214" title="Deprecated XDB Package Classes And Their Unified Java API Equivalent" summary="Old deprecated classes and their Unified Java API equivalent" dir="ltr">
<thead>
<tr class="cellalignment1205">
<th class="cellalignment1212" id="r1c1-t3">oracle.xdb.dom.* classes</th>
<th class="cellalignment1212" id="r1c2-t3">oracle.xml.parser.v2 (Unified Java API) classes</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1205">
<td class="cellalignment1213" id="r2c1-t3" headers="r1c1-t3">
<p><code dir="ltr">XDBAttribute</code></p>
</td>
<td class="cellalignment1213" headers="r2c1-t3 r1c2-t3">
<p><code dir="ltr">XMLAttr</code></p>
</td>
</tr>
<tr class="cellalignment1205">
<td class="cellalignment1213" id="r3c1-t3" headers="r1c1-t3">
<p><code dir="ltr">XDBBinaryDocument</code></p>
</td>
<td class="cellalignment1213" headers="r3c1-t3 r1c2-t3">
<p>This has been deprecated and has no replacement in the Java DOM API <code dir="ltr">XMLType</code> classes</p>
</td>
</tr>
<tr class="cellalignment1205">
<td class="cellalignment1213" id="r4c1-t3" headers="r1c1-t3">
<p><code dir="ltr">XDBCData</code></p>
</td>
<td class="cellalignment1213" headers="r4c1-t3 r1c2-t3">
<p><code dir="ltr">XMLCDATA</code></p>
</td>
</tr>
<tr class="cellalignment1205">
<td class="cellalignment1213" id="r5c1-t3" headers="r1c1-t3">
<p><code dir="ltr">XDBCharData</code></p>
</td>
<td class="cellalignment1213" headers="r5c1-t3 r1c2-t3">
<p><code dir="ltr">CharData</code></p>
</td>
</tr>
<tr class="cellalignment1205">
<td class="cellalignment1213" id="r6c1-t3" headers="r1c1-t3">
<p><code dir="ltr">XDBComment</code></p>
</td>
<td class="cellalignment1213" headers="r6c1-t3 r1c2-t3">
<p><code dir="ltr">XMLComment</code></p>
</td>
</tr>
<tr class="cellalignment1205">
<td class="cellalignment1213" id="r7c1-t3" headers="r1c1-t3">
<p><code dir="ltr">XDBDocFragment</code></p>
</td>
<td class="cellalignment1213" headers="r7c1-t3 r1c2-t3">
<p><code dir="ltr">XMLDocumentFragment</code></p>
</td>
</tr>
<tr class="cellalignment1205">
<td class="cellalignment1213" id="r8c1-t3" headers="r1c1-t3">
<p><code dir="ltr">XDBDocument</code></p>
</td>
<td class="cellalignment1213" headers="r8c1-t3 r1c2-t3">
<p><code dir="ltr">XMLDocument</code></p>
</td>
</tr>
<tr class="cellalignment1205">
<td class="cellalignment1213" id="r9c1-t3" headers="r1c1-t3">
<p><code dir="ltr">XDBDocumentType</code></p>
</td>
<td class="cellalignment1213" headers="r9c1-t3 r1c2-t3">
<p><code dir="ltr">DTD</code></p>
</td>
</tr>
<tr class="cellalignment1205">
<td class="cellalignment1213" id="r10c1-t3" headers="r1c1-t3">
<p><code dir="ltr">XDBDOMException</code></p>
</td>
<td class="cellalignment1213" headers="r10c1-t3 r1c2-t3">
<p><code dir="ltr">XMLDomException</code></p>
</td>
</tr>
<tr class="cellalignment1205">
<td class="cellalignment1213" id="r11c1-t3" headers="r1c1-t3">
<p><code dir="ltr">XDBDomImplementation</code></p>
</td>
<td class="cellalignment1213" headers="r11c1-t3 r1c2-t3">
<p><code dir="ltr">XMLDomImplementation</code></p>
</td>
</tr>
<tr class="cellalignment1205">
<td class="cellalignment1213" id="r12c1-t3" headers="r1c1-t3">
<p><code dir="ltr">XDBDOMNotFoundErrException</code></p>
</td>
<td class="cellalignment1213" headers="r12c1-t3 r1c2-t3">
<p>This has been deprecated and has no replacement in the Java DOM API <code dir="ltr">XMLType</code> classes</p>
</td>
</tr>
<tr class="cellalignment1205">
<td class="cellalignment1213" id="r13c1-t3" headers="r1c1-t3">
<p><code dir="ltr">XDBElement</code></p>
</td>
<td class="cellalignment1213" headers="r13c1-t3 r1c2-t3">
<p><code dir="ltr">XMLElement</code></p>
</td>
</tr>
<tr class="cellalignment1205">
<td class="cellalignment1213" id="r14c1-t3" headers="r1c1-t3">
<p><code dir="ltr">XDBEntity</code></p>
</td>
<td class="cellalignment1213" headers="r14c1-t3 r1c2-t3">
<p><code dir="ltr">XMLEntity</code></p>
</td>
</tr>
<tr class="cellalignment1205">
<td class="cellalignment1213" id="r15c1-t3" headers="r1c1-t3">
<p><code dir="ltr">XDBEntityReference</code></p>
</td>
<td class="cellalignment1213" headers="r15c1-t3 r1c2-t3">
<p><code dir="ltr">XMLEntityReference</code></p>
</td>
</tr>
<tr class="cellalignment1205">
<td class="cellalignment1213" id="r16c1-t3" headers="r1c1-t3">
<p><code dir="ltr">XDBNamedNodeMap</code></p>
</td>
<td class="cellalignment1213" headers="r16c1-t3 r1c2-t3">
<p><code dir="ltr">XMLAttrList</code></p>
</td>
</tr>
<tr class="cellalignment1205">
<td class="cellalignment1213" id="r17c1-t3" headers="r1c1-t3">
<p><code dir="ltr">XDBNode</code></p>
</td>
<td class="cellalignment1213" headers="r17c1-t3 r1c2-t3">
<p><code dir="ltr">XMLNode</code></p>
</td>
</tr>
<tr class="cellalignment1205">
<td class="cellalignment1213" id="r18c1-t3" headers="r1c1-t3">
<p><code dir="ltr">XDBNotation</code></p>
</td>
<td class="cellalignment1213" headers="r18c1-t3 r1c2-t3">
<p><code dir="ltr">XMLNotation</code></p>
</td>
</tr>
<tr class="cellalignment1205">
<td class="cellalignment1213" id="r19c1-t3" headers="r1c1-t3">
<p><code dir="ltr">XDBNotImplementedException</code></p>
</td>
<td class="cellalignment1213" headers="r19c1-t3 r1c2-t3">
<p>This has been deprecated and has no replacement in the Java DOM API <code dir="ltr">XMLType</code> classes</p>
</td>
</tr>
<tr class="cellalignment1205">
<td class="cellalignment1213" id="r20c1-t3" headers="r1c1-t3">
<p><code dir="ltr">XDBProcInst</code></p>
</td>
<td class="cellalignment1213" headers="r20c1-t3 r1c2-t3">
<p><code dir="ltr">XMLPI</code></p>
</td>
</tr>
<tr class="cellalignment1205">
<td class="cellalignment1213" id="r21c1-t3" headers="r1c1-t3">
<p><code dir="ltr">XDBText</code></p>
</td>
<td class="cellalignment1213" headers="r21c1-t3 r1c2-t3">
<p><code dir="ltr">XMLText</code></p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<p>When you use the Java DOM API to retrieve XML data, you either get an <code dir="ltr">XMLDocument</code> instance if the connection is <span class="italic">thin</span>, or an <code dir="ltr">XDBDocument</code> instance with method <code dir="ltr">getDOM()</code> and an <code dir="ltr">XMLDocument</code> instance with method <code dir="ltr">getDocument()</code>. Both <code dir="ltr">XMLDocument</code> and <code dir="ltr">XDBDocument</code> are instances of the W3C DOM interface. The <code dir="ltr">getDOM()</code> method and <code dir="ltr">XDBDocument</code> class have been deprecated in the Unified Java APIs. <a href="#BABIFGIC">Table 2-2</a> lists the new methods and classes that are supported with the current release.</p>
<div id="ADXDK19061" class="tblformal">
<p class="titleintable"><a id="sthref49"></a><a id="BABIFGIC"></a>Table 2-2 Deprecated XMLType Methods</p>
<table class="cellalignment1214" title="Deprecated XMLType Methods" summary="Deprecated XMLType methods" dir="ltr">
<thead>
<tr class="cellalignment1205">
<th class="cellalignment1212" id="r1c1-t4">oracle.xdb.XMLType old API</th>
<th class="cellalignment1212" id="r1c2-t4">oracle.xdb.XMLType new API</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1205">
<td class="cellalignment1213" id="r2c1-t4" headers="r1c1-t4">
<p><code dir="ltr">getDOM()</code></p>
</td>
<td class="cellalignment1213" headers="r2c1-t4 r1c2-t4">
<p><code dir="ltr">getDocument()</code></p>
</td>
</tr>
<tr class="cellalignment1205">
<td class="cellalignment1213" id="r3c1-t4" headers="r1c1-t4">
<p><code dir="ltr">public XMLType createXML(...)</code></p>
</td>
<td class="cellalignment1213" headers="r3c1-t4 r1c2-t4">
<p><code dir="ltr">public XMLType createXML(..., int kind)</code> where <code dir="ltr">kind</code> is either <code dir="ltr">XMLDocument.THICK</code> or <code dir="ltr">XMLDocument.THIN</code></p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="sect2" -->
<div id="ADXDK19062" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref50"></a>
<h3 class="sect2">Extension APIs</h3>
<p>In addition to the W3C Recommendation, the Unified Java API implementation provides some extension APIs that extend the W3C DOM APIs in various ways. You can use the Oracle-specific extension APIs for either performing the basic functions like connecting to a database or for performance enhancement.</p>
<p><code dir="ltr">XMLDocument</code> is a class that represents the DOM for the instantiated XML document. You can retrieve the <code dir="ltr">XMLType</code> value from the XML document using the <code dir="ltr">XMLType</code> constructor that takes a <code dir="ltr">Document</code> argument:</p>
<p><code dir="ltr">XMLType createXML(Connection conn, Document domdoc)</code></p>
<p>Use the <code dir="ltr">freeNode()</code> extension API available in the <code dir="ltr">oracle.xml.parser.v2</code> package (<code dir="ltr">XMLNode</code> class) for manual dereferencing of nodes. When you use <code dir="ltr">freeNode()</code>, you explicitly dereference a document fragment from the DOM tree.</p>
</div>
<!-- class="sect2" -->
<div id="ADXDK19063" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref51"></a>
<h3 class="sect2"><a id="sthref52"></a><a id="sthref53"></a>Document Creation Java APIs</h3>
<p>The unified Java APIs that create an XMLDocument must create either a thin document or a thick document. A thick document requires a <code dir="ltr">Connection</code> object in order to establish communication with the database. So the creation APIs are extended to accept a <code dir="ltr">Connection</code> object.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
You must specify the <code dir="ltr">Connection</code> type. Old document creation APIs are still supported for backward compatibility.</div>
<p>For <code dir="ltr">XMLType.createXML</code> APIs, <code dir="ltr">Connection</code> determines the type of object and for other APIs, a thin (pure Java) object is created if not explicitly specified.</p>
<p><a href="#BABEEEFG">Table 2-3</a> lists the <code dir="ltr">XMLDocument</code> output, based on the <code dir="ltr">KIND</code> and <code dir="ltr">Connection</code> property:</p>
<div id="ADXDK19064" class="tblformal">
<p class="titleintable"><a id="sthref54"></a><a id="BABEEEFG"></a>Table 2-3 XMLDocument Output Based on XMLDocument.KIND and XMLDocument.CONNECTION</p>
<table class="cellalignment1214" title="XMLDocument Output Based on XMLDocument.KIND and XMLDocument.CONNECTION" summary="table" dir="ltr">
<thead>
<tr class="cellalignment1205">
<th class="cellalignment1212" id="r1c1-t6">XMLDocument.KIND</th>
<th class="cellalignment1212" id="r1c2-t6">XMLDocument.CONNECTION</th>
<th class="cellalignment1212" id="r1c3-t6">XMLDocument</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1205">
<td class="cellalignment1213" id="r2c1-t6" headers="r1c1-t6">
<p><code dir="ltr">XMLDocument.THICK</code></p>
</td>
<td class="cellalignment1213" headers="r2c1-t6 r1c2-t6">
<p>Thick or KPRB connection</p>
</td>
<td class="cellalignment1213" headers="r2c1-t6 r1c3-t6">
<p>Thick DOM</p>
</td>
</tr>
<tr class="cellalignment1205">
<td class="cellalignment1213" id="r3c1-t6" headers="r1c1-t6">
<p><code dir="ltr">XMLDocument.THICK</code></p>
</td>
<td class="cellalignment1213" headers="r3c1-t6 r1c2-t6">
<p>Thin or no connection</p>
</td>
<td class="cellalignment1213" headers="r3c1-t6 r1c3-t6">
<p>Exception</p>
</td>
</tr>
<tr class="cellalignment1205">
<td class="cellalignment1213" id="r4c1-t6" headers="r1c1-t6">
<p><code dir="ltr">XMLDocument.THIN</code></p>
</td>
<td class="cellalignment1213" headers="r4c1-t6 r1c2-t6">
<p>Any connection type</p>
</td>
<td class="cellalignment1213" headers="r4c1-t6 r1c3-t6">
<p>Thin DOM</p>
</td>
</tr>
<tr class="cellalignment1205">
<td class="cellalignment1213" id="r5c1-t6" headers="r1c1-t6">
<p>Not specified</p>
</td>
<td class="cellalignment1213" headers="r5c1-t6 r1c2-t6">
<p>Any connection type</p>
</td>
<td class="cellalignment1213" headers="r5c1-t6 r1c3-t6">
<p>Non-XMLType APIs. Thin DOM</p>
<p>XMLType.createXML APIs - Based on connection type. That is, Thick DOM for OCI or KPRB connection, and Thin DOM for a Thin connection.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<p><a id="sthref55"></a>The following objects and methods are provided for document creation in the unified Java API model:</p>
<ul>
<li>
<p><code dir="ltr">DOMParser</code> object and <code dir="ltr">parse()</code> method: Use the <code dir="ltr">DOMParser</code> object and <code dir="ltr">parse()</code> method to parse XML documents. You must specify the type of object, that is, thick or thin. For thick objects, you must also provide the <code dir="ltr">Connection</code> property using the <code dir="ltr">DOMParser.setAttribute()</code> API. For example:</p>
<pre dir="ltr">
DOMParser parser = new oracle.xml.parser.v2.DOMParser();
parser.setAttribute(XMLDocument.KIND, XMLDocument.THICK);
parser.setAttribute(XMLDocument.CONNECTION, conn);
</pre></li>
<li>
<p><code dir="ltr">DocumentBuilder</code> object: Use the <code dir="ltr">DocumentBuilder</code> object to parse XML document using the Java-specific API, JAXP. You need to create a DOM parser factory with the <code dir="ltr">DocumentBuilderFactory</code> class. The <code dir="ltr">DocumentBuilderFactory</code> class then passes the connection into the DOMParser, which is used to create the document from these APIs.</p>
</li>
<li>
<p><code dir="ltr">DocumentBuilder</code> builds DOM from input SAX events. This takes the Connection from a property set on the <code dir="ltr">DocumentBuilderFactory</code>. For example:</p>
<pre dir="ltr">
DocumentBuilderFactory.setAttribute(XMLDocument.CONNECTION, conn);
DocumentBuilderFactory.setAttribute(XMLDocument.KIND,XMLDocument.THICK); 
</pre>
<p><code dir="ltr">DocumentBuilderFactory</code> passes the connection into the <code dir="ltr">DOMParser</code> that is used to create the document from the following APIs:</p>
<pre dir="ltr">
DocumentBuilder.newDocument()
DocumentBuilder parse(InputStream)
DocumentBuilder parse(InputStream, int)
DocumentBuilder.parse(InputSource)
</pre></li>
<li>
<p>XSU: These methods return an <code dir="ltr">XMLDocument</code> to the user. You can specify whether they want a thick or thin object:</p>
<pre dir="ltr">
OracleXMLUtil util = new OracleXMLUtil(...);
util.setAttribute(XMLDocument.KIND, XMLDocument.THICK);
util.setAttribute(XMLDocument.CONNECTION, conn);
Document doc = util.getXMLDOMFromStruct(struct, enc);

OracleXMLQuery query = new OracleXMLQuery(...);
query.setAttribute(XMLDocument.KIND, XMLDocument.THICK);
query.setAttribute(XMLDocument.CONNECTION, conn);
Document doc = query.getXMLDOM (root, meta);

OracleXMLDocGenDOM dgd = new OracleXMLDocGenDOM(...);
dgd.setAttribute(XMLDocument.KIND, XMLDocument.THICK);
dgd.setAttribute(XMLDocument.CONNECTION, conn);
Document doc = dgd.getXMLDocumentDOM(struct, enc);
</pre></li>
<li>
<p><code dir="ltr">XMLType</code>: Using the <code dir="ltr">getDocument()</code> method, you can specify whether you want a thick or thin object. All existing <code dir="ltr">XMLType</code> methods are still available. In this example, the connection is inferred from the OPAQUE:</p>
<pre dir="ltr">
XMLType xt = XMLType.createXML(orset.getOPAQUE(1), XMLDocument.THICK);
Document doc = xt.getDocument();
</pre></li>
</ul>
<p>One known case that will not allow for the user to specify the type is the case of an <code dir="ltr">XMLType</code> that is created using the <code dir="ltr">ResultSet.getObject()</code> API. If a user has a table with an <code dir="ltr">XMLType</code> column, and the user selects of this column, the user can call <code dir="ltr">getObject()</code> on the ResultSet. This will return an <code dir="ltr">XMLType</code> object. The type is determined by the Connection used in the JDBC call to fetch the column.</p>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" --></div>
<!-- class="chapter" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment1204">
<tr>
<td class="cellalignment1213">
<table class="cellalignment1209">
<tr>
<td class="cellalignment1208"><a href="adx_pt_java.htm"><img width="24" height="24" src="../../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment1208"><a href="adx_j_gs.htm"><img width="24" height="24" src="../../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;2001, 2014,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment1216">
<table class="cellalignment1207">
<tr>
<td class="cellalignment1208"><a href="../../index.htm"><img width="24" height="24" src="../../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment1208"><a href="../../nav/portal_booklist.htm"><img width="24" height="24" src="../../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment1208"><a href="toc.htm"><img width="24" height="24" src="../../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment1208"><a href="index.htm"><img width="24" height="24" src="../../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment1208"><a href="../../nav/mindx.htm"><img width="24" height="24" src="../../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment1208"><a href="../../dcommon/html/feedback.htm"><img width="24" height="24" src="../../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>
</body>
</html>
