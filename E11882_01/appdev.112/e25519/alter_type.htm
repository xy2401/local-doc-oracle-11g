<!DOCTYPE html>
<html lang="en" >
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1">
<meta charset="utf-8">
<title>ALTER TYPE Statement</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Merged Version 1032" />
<meta name="dcterms.created" content="2014-12-05T11:53:4Z" />
<meta name="robots" content="all" />
<meta name="dcterms.title" content="Database PL/SQL Language Reference" />
<meta name="dcterms.identifier" content="E25519-13" />
<meta name="dcterms.isVersionOf" content="LNPLS" />
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;1996, 2014,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved." />
<link rel="Start" href="../../index.htm" title="Home" type="text/html" />
<link rel="Copyright" href="../../dcommon/html/cpyr.htm" title="Copyright" type="text/html" />

<script type="application/javascript"  src="../../dcommon/js/headfoot.js"></script>
<script type="application/javascript"  src="../../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html" />
<link rel="Index" href="index.htm" title="Index" type="text/html" />
<link rel="Prev" href="alter_trigger.htm" title="Previous" type="text/html" />
<link rel="Next" href="create_function.htm" title="Next" type="text/html" />
<link rel="alternate" href="../e25519.pdf" title="PDF version" type="application/pdf" />
<link rel="schema.dcterms" href="http://purl.org/dc/terms/" />
<link rel="stylesheet" href="../../dcommon/css/fusiondoc.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/header.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/footer.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/fonts.css">
<link rel="stylesheet" href="../../dcommon/css/foundation.css">
<link rel="stylesheet" href="../../dcommon/css/codemirror.css">
<link rel="stylesheet" type="text/css" title="Default" href="../../nav/css/html5.css">
<link rel="stylesheet" href="../../dcommon/css/respond-480-tablet.css">
<link rel="stylesheet" href="../../dcommon/css/respond-768-laptop.css">
<link rel="stylesheet" href="../../dcommon/css/respond-1140-deskop.css">
<script type="application/javascript" src="../../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">78/99</span> <!-- End Header --><a id="i2057828"></a>
<div id="LNPLS99995" class="refsect1">
<h1 class="refsect1">ALTER TYPE Statement</h1>
<p>The <a id="sthref1295"></a><code dir="ltr">ALTER</code> <code dir="ltr">TYPE</code> statement does one of the following to a type that was created with <a href="create_type.htm#BABHJHEB">"CREATE TYPE Statement"</a> and <a href="create_type_body.htm#i2064997">"CREATE TYPE BODY Statement"</a>:</p>
<ul>
<li>
<p><a id="sthref1296"></a><span class="bold">Evolves</span> the type; that is, adds or drops member attributes or methods.</p>
<p>For more information about type evolution, see <a class="olink ADOBJ00603" href="../../appdev.112/e11822/adobjadv.htm#ADOBJ00603"><span class="italic">Oracle Database Object-Relational Developer's Guide</span></a>.</p>
</li>
<li>
<p>Changes the specification of the type by adding object member subprogram specifications.</p>
</li>
<li>
<p>Recompiles the specification or body of the type.</p>
</li>
<li>
<p>Resets the version of the type to 1, so that it is no longer considered to be evolved.</p>
</li>
</ul>
<p class="subhead2"><a id="LNPLS1896"></a>Topics</p>
<ul>
<li>
<p><a href="#BABJDJIH">Prerequisites</a></p>
</li>
<li>
<p><a href="#BABFHIFB">Syntax</a></p>
</li>
<li>
<p><a href="#g2262971">Semantics</a></p>
</li>
<li>
<p><a href="#g2265470">Examples</a></p>
</li>
<li>
<p><a href="#BABFFFFF">Related Topics</a></p>
</li>
</ul>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="BABJDJIH"></a>Prerequisites</p>
<p>If the type is in the <code dir="ltr">SYS</code> schema, you must be connected as <code dir="ltr">SYSDBA</code>. Otherwise, the type must be in your schema and you must have <code dir="ltr">CREATE</code> <code dir="ltr">TYPE</code> or <code dir="ltr">CREATE</code> <code dir="ltr">ANY</code> <code dir="ltr">TYPE</code> system privilege, or you must have <code dir="ltr">ALTER</code> <code dir="ltr">ANY</code> <code dir="ltr">TYPE</code> system privileges.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="BABFHIFB"></a>Syntax</p>
<p class="subhead2"><a id="LNPLS1422"></a><span class="italic">alter_type</span> ::=</p>
<img width="551" height="331" src="img/alter_type.gif" alt="Description of alter_type.gif follows" /><br />
<a id="sthref1297" href="img_text/alter_type.htm">Description of the illustration alter_type.gif</a><br />
<br />
<p>See:</p>
<ul>
<li>
<p><a href="#i2112566">"<span class="italic">alter_attribute_definition</span> ::="</a></p>
</li>
<li>
<p><a href="#i2112555">"<span class="italic">alter_method_spec</span> ::="</a></p>
</li>
<li>
<p><a href="#i2129758">"<span class="italic">alter_collections_clauses</span>::="</a></p>
</li>
<li>
<p><a href="#i2161217">"<span class="italic">compile_type_clause</span> ::="</a></p>
</li>
<li>
<p><a href="#i2112577">"<span class="italic">dependent_handling_clause</span> ::="</a></p>
</li>
<li>
<p><a href="#i2121140">"<span class="italic">replace_type_clause</span> ::="</a></p>
</li>
</ul>
<p class="subhead2"><a id="i2161217"></a><a id="LNPLS1423"></a><span class="italic">compile_type_clause</span> ::=</p>
<img width="463" height="154" src="img/compile_type_clause.gif" alt="Description of compile_type_clause.gif follows" /><br />
<a id="sthref1298" href="img_text/compile_type_clause.htm">Description of the illustration compile_type_clause.gif</a><br />
<br />
<p class="subhead2"><a id="LNPLS1424"></a><span class="italic">compiler_parameters_clause</span> ::=</p>
<img width="275" height="27" src="img/compiler_parameters_clause.gif" alt="Description of compiler_parameters_clause.gif follows" /><br />
<a id="sthref1299" href="img_text/compiler_parameters_clause.htm">Description of the illustration compiler_parameters_clause.gif</a><br />
<br />
<p class="subhead2"><a id="i2121140"></a><a id="LNPLS1425"></a><span class="italic">replace_type_clause</span> ::=</p>
<img width="454" height="154" src="img/replace_type_clause.gif" alt="Description of replace_type_clause.gif follows" /><br />
<a id="sthref1300" href="img_text/replace_type_clause.htm">Description of the illustration replace_type_clause.gif</a><br />
<br />
<p class="subhead2"><a id="i2112544"></a><a id="LNPLS1426"></a><span class="italic">invoker_rights_clause</span> ::=</p>
<img width="237" height="58" src="img/invoker_rights_clause.gif" alt="Description of invoker_rights_clause.gif follows" /><br />
<a id="sthref1301" href="img_text/invoker_rights_clause.htm">Description of the illustration invoker_rights_clause.gif</a><br />
<br />
<p class="subhead2"><a id="LNPLS1427"></a><span class="italic">element_spec</span> ::=</p>
<img width="654" height="103" src="img/element_spec.gif" alt="Description of element_spec.gif follows" /><br />
<a id="sthref1302" href="img_text/element_spec.htm">Description of the illustration element_spec.gif</a><br />
<br />
<p>See:</p>
<ul>
<li>
<p><a href="#i2112611">"<span class="italic">constructor_spec</span> ::="</a></p>
</li>
<li>
<p><a href="#i2112677">"<span class="italic">inheritance_clauses</span> ::="</a></p>
</li>
<li>
<p><a href="#i2112622">"<span class="italic">map_order_function_spec</span> ::="</a></p>
</li>
<li>
<p><a href="#CIHBCICG">"<span class="italic">restrict_references_pragma</span>"</a></p>
</li>
<li>
<p><a href="#i2112600">"<span class="italic">subprogram_spec</span> ::="</a></p>
</li>
</ul>
<p class="subhead2"><a id="i2112677"></a><a id="LNPLS1428"></a><span class="italic">inheritance_clauses</span> ::=</p>
<img width="284" height="103" src="img/inheritance_clauses.gif" alt="Description of inheritance_clauses.gif follows" /><br />
<a id="sthref1303" href="img_text/inheritance_clauses.htm">Description of the illustration inheritance_clauses.gif</a><br />
<br />
<p class="subhead2"><a id="i2112600"></a><a id="LNPLS1429"></a><span class="italic">subprogram_spec</span> ::=</p>
<img width="265" height="58" src="img/subprogram_spec.gif" alt="Description of subprogram_spec.gif follows" /><br />
<a id="sthref1304" href="img_text/subprogram_spec.htm">Description of the illustration subprogram_spec.gif</a><br />
<br />
<p>See:</p>
<ul>
<li>
<p><a href="#i2112696">"<span class="italic">function_spec</span> ::="</a></p>
</li>
<li>
<p><a href="#i2154358">"<span class="italic">procedure_spec</span> ::="</a></p>
</li>
</ul>
<p class="subhead2"><a id="i2154358"></a><a id="LNPLS1430"></a><span class="italic">procedure_spec</span> ::=</p>
<img width="661" height="79" src="img/procedure_spec.gif" alt="Description of procedure_spec.gif follows" /><br />
<a id="sthref1305" href="img_text/procedure_spec.htm">Description of the illustration procedure_spec.gif</a><br />
<br />
<p>See <a href="create_function.htm#CJADHIEA">"<span class="italic">call_spec</span> ::="</a>.</p>
<p class="subhead2"><a id="i2112696"></a><a id="LNPLS1431"></a><span class="italic">function_spec</span> ::=</p>
<img width="491" height="58" src="img/function_spec.gif" alt="Description of function_spec.gif follows" /><br />
<a id="sthref1306" href="img_text/function_spec.htm">Description of the illustration function_spec.gif</a><br />
<br />
<p class="subhead2"><a id="LNPLS1897"></a><span class="italic">return_clause</span> ::=</p>
<img width="385" height="110" src="img/return_clause.gif" alt="Description of return_clause.gif follows" /><br />
<a id="sthref1307" href="img_text/return_clause.htm">Description of the illustration return_clause.gif</a><br />
<br />
<p>See <a href="create_function.htm#CJADHIEA">"<span class="italic">call_spec</span> ::="</a>.</p>
<p class="subhead2"><a id="i2112611"></a><a id="LNPLS1432"></a><span class="italic">constructor_spec</span> ::=</p>
<img width="591" height="249" src="img/constructor_spec.gif" alt="Description of constructor_spec.gif follows" /><br />
<a id="sthref1308" href="img_text/constructor_spec.htm">Description of the illustration constructor_spec.gif</a><br />
<br />
<p>See <a href="create_function.htm#CJADHIEA">"<span class="italic">call_spec</span> ::="</a>.</p>
<p class="subhead2"><a id="i2112622"></a><a id="LNPLS1433"></a><span class="italic">map_order_function_spec</span> ::=</p>
<img width="289" height="58" src="img/map_order_function_spec.gif" alt="Description of map_order_function_spec.gif follows" /><br />
<a id="sthref1309" href="img_text/map_order_function_spec.htm">Description of the illustration map_order_function_spec.gif</a><br />
<br />
<p>See <a href="#i2112696">"<span class="italic">function_spec</span> ::="</a>.</p>
<p class="subhead2"><a id="i2112737"></a><a id="LNPLS1434"></a><span class="italic">pragma_clause</span> ::=</p>
<img width="607" height="187" src="img/pragma_clause.gif" alt="Description of pragma_clause.gif follows" /><br />
<a id="sthref1310" href="img_text/pragma_clause.htm">Description of the illustration pragma_clause.gif</a><br />
<br />
<p class="subhead2"><a id="i2112555"></a><a id="LNPLS1435"></a><span class="italic">alter_method_spec</span> ::=</p>
<img width="329" height="91" src="img/alter_method_spec.gif" alt="Description of alter_method_spec.gif follows" /><br />
<a id="sthref1311" href="img_text/alter_method_spec.htm">Description of the illustration alter_method_spec.gif</a><br />
<br />
<p>See:</p>
<ul>
<li>
<p><a href="#i2112622">"<span class="italic">map_order_function_spec</span> ::="</a></p>
</li>
<li>
<p><a href="#i2112600">"<span class="italic">subprogram_spec</span> ::="</a></p>
</li>
</ul>
<p class="subhead2"><a id="i2112566"></a><a id="LNPLS1436"></a><span class="italic">alter_attribute_definition</span> ::=</p>
<img width="499" height="208" src="img/alter_attribute_definition.gif" alt="Description of alter_attribute_definition.gif follows" /><br />
<a id="sthref1312" href="img_text/alter_attribute_definition.htm">Description of the illustration alter_attribute_definition.gif</a><br />
<br />
<p class="subhead2"><a id="i2129758"></a><a id="LNPLS1437"></a><span class="italic">alter_collections_clauses</span>::=</p>
<img width="326" height="58" src="img/alter_collection_clauses.gif" alt="Description of alter_collection_clauses.gif follows" /><br />
<a id="sthref1313" href="img_text/alter_collection_clauses.htm">Description of the illustration alter_collection_clauses.gif</a><br />
<br />
<p class="subhead2"><a id="i2112577"></a><a id="LNPLS99987"></a><span class="italic">dependent_handling_clause</span> ::=</p>
<img width="793" height="131" src="img/dependent_handling_clause.gif" alt="Description of dependent_handling_clause.gif follows" /><br />
<a id="sthref1314" href="img_text/dependent_handling_clause.htm">Description of the illustration dependent_handling_clause.gif</a><br />
<br />
<p class="subhead2"><a id="LNPLS1438"></a><span class="italic">exceptions_clause</span> ::=</p>
<img width="364" height="46" src="img/exceptions_clause.gif" alt="Description of exceptions_clause.gif follows" /><br />
<a id="sthref1315" href="img_text/exceptions_clause.htm">Description of the illustration exceptions_clause.gif</a><br />
<br /></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="g2262971"></a>Semantics</p>
<p class="subhead2"><a id="LNPLS1439"></a><span class="italic">schema</span></p>
<p>Name of the schema containing the type. <span class="bold">Default:</span> your schema.</p>
<p class="subhead2"><a id="LNPLS1440"></a><span class="italic">type</span></p>
<p>Name of an ADT, <code dir="ltr">VARRAY</code> type, or nested table type.</p>
<p><a id="BABHBGBE"></a><a id="LNPLS1898"></a><span class="subhead3">Restriction on <span class="italic">type</span>&nbsp;</span>You cannot evolve an <a id="sthref1316"></a><a id="sthref1317"></a>editioned ADT.</p>
<p>The <code dir="ltr">ALTER</code> <code dir="ltr">TYPE</code> statement fails with ORA-22348 if either of the following is true:</p>
<ul>
<li>
<p><code dir="ltr"><span class="codeinlineitalic">type</span></code> is an editioned ADT and the <code dir="ltr">ALTER</code> <code dir="ltr">TYPE</code> statement has no <code dir="ltr"><span class="codeinlineitalic">compile_type_clause</span></code>.</p>
<p>(You can use the <code dir="ltr">ALTER</code> <code dir="ltr">TYPE</code> statement to recompile an editioned object type, but not for any other purpose.)</p>
</li>
<li>
<p><code dir="ltr"><span class="codeinlineitalic">type</span></code> has a dependent that is an editioned ADT and the <code dir="ltr">ALTER</code> <code dir="ltr">TYPE</code> statement has a <code dir="ltr">CASCADE</code> clause.</p>
</li>
</ul>
<p>An <span class="bold">editioned object</span> is a schema object that has an editionable object type and was created by a user for whom editions are enabled. For more information about editioned objects, see <a class="olink ADFNS99923" href="../../appdev.112/e41502/adfns_editions.htm#ADFNS99923"><span class="italic">Oracle Database Advanced Application Developer's Guide</span></a>.</p>
<p class="subhead2"><a id="LNPLS1899"></a>RESET</p>
<p>Resets the version of this type to 1, so that it is no longer considered to be evolved.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
Resetting the version of this type to 1 invalidates all of its dependents.</div>
<p><code dir="ltr">RESET</code> is intended for evolved ADTs that are preventing their owners from being editions-enabled. For information about enabling editions for users, see <a class="olink ADFNS99878" href="../../appdev.112/e41502/adfns_editions.htm#ADFNS99878"><span class="italic">Oracle Database Advanced Application Developer's Guide</span></a>.</p>
<p>To see the version number of an ADT, select <code dir="ltr">VERSION#</code> from the static data dictionary view <code dir="ltr">*_TYPE_VERSIONS</code>. For example:</p>
<pre dir="ltr">
SELECT Version# FROM DBA_TYPE_VERSIONS
WHERE Owner = <span class="italic">schema</span>
AND Name = '<span class="italic">type_name</span>'
AND Type = 'TYPE'
</pre>
<p>For an evolved ADT, the preceding query returns multiple rows with different version numbers. <code dir="ltr">RESET</code> deletes every row whose version number is less than the maximum version number, and resets the version number of the remaining rows to&nbsp;1&mdash;see <a href="#BABHDDFE">"Evolving and Resetting an ADT: Example"</a>.</p>
<p><a id="LNPLS1900"></a><span class="subhead3">Restriction on RESET&nbsp;</span>You cannot specify <code dir="ltr">RESET</code> if the type has any table dependents (direct or indirect).</p>
<p class="subhead2"><a id="LNPLS1475"></a>[NOT] INSTANTIABLE</p>
<p>Specify <code dir="ltr">INSTANTIABLE</code> if object instances of this type can be constructed.</p>
<p>Specify <code dir="ltr">NOT</code> <code dir="ltr">INSTANTIABLE</code> if no constructor (default or user-defined) exists for this type. You must specify these keywords for any type with noninstantiable methods and for any type that has no attributes (either inherited or specified in this statement).</p>
<p><a id="LNPLS1476"></a><span class="subhead3">Restriction on NOT INSTANTIABLE&nbsp;</span>You cannot change a user-defined type from <code dir="ltr">INSTANTIABLE</code> to <code dir="ltr">NOT</code> <code dir="ltr">INSTANTIABLE</code> if the type has any table dependents.</p>
<p class="subhead2"><a id="i2129717"></a><a id="LNPLS1473"></a>[NOT] FINAL</p>
<p>Specify <code dir="ltr">FINAL</code> if no further subtypes can be created for this type.</p>
<p>Specify <code dir="ltr">NOT</code> <code dir="ltr">FINAL</code> if further subtypes can be created under this type.</p>
<p>If you change the property from <code dir="ltr">FINAL</code> to <code dir="ltr">NOT</code> <code dir="ltr">FINAL</code>, or the reverse, then you must specify the <code dir="ltr">CASCADE</code> clause of the <a href="#i2079300">"<span class="italic">dependent_handling_clause</span>"</a> to convert data in dependent columns and tables. Specifically:</p>
<ul>
<li>
<p>If you change a type from <code dir="ltr">NOT</code> <code dir="ltr">FINAL</code> to <code dir="ltr">FINAL</code>, then you must specify <code dir="ltr">CASCADE</code> [<code dir="ltr">INCLUDING</code> <code dir="ltr">TABLE</code> <code dir="ltr">DATA</code>]. You cannot defer data conversion with <code dir="ltr">CASCADE</code> <code dir="ltr">NOT</code> <code dir="ltr">INCLUDING</code> <code dir="ltr">TABLE</code> <code dir="ltr">DATA</code>.</p>
</li>
<li>
<p>If you change a type from <code dir="ltr">FINAL</code> to <code dir="ltr">NOT</code> <code dir="ltr">FINAL</code>, then:</p>
<ul>
<li>
<p>Specify <code dir="ltr">CASCADE</code> <code dir="ltr">INCLUDING</code> <code dir="ltr">TABLE</code> <code dir="ltr">DATA</code> if you want to create substitutable tables and columns of that type, but you are not concerned about the substitutability of the existing dependent tables and columns.</p>
<p>The database marks all existing dependent columns and tables <code dir="ltr">NOT</code> <code dir="ltr">SUBSTITUTABLE</code> <code dir="ltr">AT</code> <code dir="ltr">ALL</code> <code dir="ltr">LEVELS</code>, so you cannot insert the subtype instances of the altered type into these existing columns and tables.</p>
</li>
<li>
<p>Specify <code dir="ltr">CASCADE</code> <code dir="ltr">CONVERT</code> <code dir="ltr">TO</code> <code dir="ltr">SUBSTITUTABLE</code> if you want to create substitutable tables and columns of the type and also store subtype instances of the altered type in existing dependent tables and columns.</p>
<p>The database marks all existing dependent columns and tables <code dir="ltr">SUBSTITUTABLE</code> <code dir="ltr">AT</code> <code dir="ltr">ALL</code> <code dir="ltr">LEVELS</code> except those that are explicitly marked <code dir="ltr">NOT</code> <code dir="ltr">SUBSTITUTABLE</code> <code dir="ltr">AT</code> <code dir="ltr">ALL</code> <code dir="ltr">LEVELS</code>.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink ADOBJ00603" href="../../appdev.112/e11822/adobjadv.htm#ADOBJ00603"><span class="italic">Oracle Database Object-Relational Developer's Guide</span></a> for a full discussion of ADT evolution</div>
</li>
</ul>
</li>
</ul>
<p><a id="LNPLS1474"></a><span class="subhead3">Restriction on FINAL&nbsp;</span>You cannot change a user-defined type from <code dir="ltr">NOT</code> <code dir="ltr">FINAL</code> to <code dir="ltr">FINAL</code> if the type has any subtypes.</p>
<p class="subhead2"><a id="i2119532"></a><a id="LNPLS1441"></a><span class="italic">compile_type_clause</span></p>
<p><span class="bold">(Default)</span> Recompiles the type specification and body.</p>
<p>During recompilation, the database drops all persistent compiler switch settings, retrieves them again from the session, and stores them after compilation. To avoid this process, specify <code dir="ltr">REUSE</code> <code dir="ltr">SETTINGS</code>.</p>
<p>If recompiling the type results in compilation errors, then the database returns an error and the type remains invalid. You can see the associated compiler error messages with the SQL*Plus command <code dir="ltr">SHOW</code> <code dir="ltr">ERRORS</code>.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="#i2115744">"Recompiling a Type: Example"</a></p>
</li>
<li>
<p><a href="#i2115755">"Recompiling a Type Specification: Example"</a></p>
</li>
</ul>
</div>
<p class="subhead2"><a id="LNPLS1901"></a>COMPILE</p>
<p>Has the same behavior for a type as it does for a function. See <a href="alter_function.htm#CIHGCBFG">"COMPILE"</a>.</p>
<p class="subhead2"><a id="LNPLS1902"></a>DEBUG</p>
<p>Has the same behavior for a type as it does for a function. See <a href="alter_function.htm#BABJGHDD">"DEBUG"</a>.</p>
<p class="subhead2"><a id="LNPLS1443"></a>SPECIFICATION</p>
<p>Recompiles only the type specification.</p>
<p class="subhead2"><a id="LNPLS1444"></a>BODY</p>
<p>Recompiles only the type body.</p>
<p class="subhead2"><a id="BABBFJFC"></a><a id="LNPLS1445"></a><span class="italic">compiler_parameters_clause</span></p>
<p>Has the same behavior for a type as it does for a function. See the <code dir="ltr">ALTER</code> <code dir="ltr">FUNCTION</code> <a href="alter_function.htm#BGBHCICA">"<span class="italic">compiler_parameters_clause</span>"</a>.</p>
<p class="subhead2"><a id="LNPLS1446"></a>REUSE SETTINGS</p>
<p>Has the same behavior for a type as it does for a function. See <a href="alter_function.htm#BGBGEIGD">"REUSE SETTINGS"</a>.</p>
<p class="subhead2"><a id="i2158499"></a><a id="LNPLS1447"></a><span class="italic">replace_type_clause</span></p>
<p>Adds member subprogram specifications.</p>
<p><a id="LNPLS1903"></a><span class="subhead3">Restriction on <span class="italic">replace_type_clause</span>&nbsp;</span>This clause is valid only for ADTs, not for nested tables or varrays.</p>
<p class="subhead2"><a id="i2058072"></a><a id="LNPLS1457"></a><span class="italic">invoker_rights_clause</span></p>
<p>Specifies the <code dir="ltr">AUTHID</code> property of the member functions and procedures of the ADT. For information about the <code dir="ltr">AUTHID</code> property, see <a href="subprograms.htm#i18574">"Invoker's Rights and Definer's Rights (AUTHID Property)"</a>.</p>
<p><a id="LNPLS1458"></a><span class="subhead3">Restriction on <span class="italic">invoker_rights_clause</span>&nbsp;</span>You can specify this clause only for an ADT, not for a nested table or varray.</p>
<p class="subhead2"><a id="LNPLS1448"></a><span class="italic">attribute</span></p>
<p>Name of an object attribute. Attributes are data items with a name and a type specifier that form the structure of the object.</p>
<p class="subhead2"><a id="i2057900"></a><a id="LNPLS1449"></a><span class="italic">element_spec</span></p>
<p>Specifies elements of the redefined object.</p>
<p class="subhead2"><a id="i2079255"></a><a id="LNPLS1450"></a><span class="italic">inheritance_clauses</span></p>
<p>Specifies the relationship between supertypes and subtypes.</p>
<p class="subhead2"><a id="i2151401"></a><a id="LNPLS1451"></a><span class="italic">subprogram_spec</span></p>
<p>Specifies a subprogram to be referenced as an ADT attribute. For each such subprogram, you must specify a corresponding method body in the ADT body.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="create_type.htm#BABHJHEB">"CREATE TYPE Statement"</a> for a description of the difference between member and static methods, and for examples</p>
</li>
<li>
<p><a href="create_type_body.htm#i2064997">"CREATE TYPE BODY Statement"</a></p>
</li>
<li>
<p><a href="subprograms.htm#i12352">"Overloaded Subprograms"</a> for information about overloading subprogram names in a package</p>
</li>
</ul>
</div>
<p class="subhead2"><a id="BABHABJJ"></a><a id="LNPLS1452"></a><span class="italic">procedure_spec</span></p>
<p>Specification of a procedure subprogram.</p>
<p class="subhead2"><a id="BABIBFED"></a><a id="LNPLS1453"></a><span class="italic">function_spec</span></p>
<p>Specification of a function subprogram.</p>
<p class="subhead2"><a id="CIHBCICG"></a><a id="LNPLS1904"></a><span class="italic">restrict_references_pragma</span></p>
<p>Deprecated clause, described in <a href="restrictreferences_pragma.htm#i35854">"RESTRICT_REFERENCES Pragma"</a>.</p>
<p><a id="LNPLS1455"></a><span class="subhead3">Restriction on <span class="italic">restrict_references_pragma</span>&nbsp;</span>This clause is not valid when dropping a method.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink ADFNS007" href="../../appdev.112/e41502/adfns_sqlproc.htm#ADFNS007"><span class="italic">Oracle Database Advanced Application Developer's Guide</span></a> for more information about pragmas</div>
<p class="subhead2"><a id="i2079288"></a><a id="LNPLS1456"></a><span class="italic">map_order_function_spec</span></p>
<p>You can declare either one <code dir="ltr">MAP</code> method or one <code dir="ltr">ORDER</code> method, regardless of how many <code dir="ltr">MEMBER</code> or <code dir="ltr">STATIC</code> methods you declare. However, a subtype can override a <code dir="ltr">MAP</code> method if the supertype defines a <code dir="ltr">NOT</code> <code dir="ltr">FINAL</code> <code dir="ltr">MAP</code> method. If you declare either method, then you can compare object instances in SQL.</p>
<p>If you do not declare either method, then you can compare object instances only for equality or inequality. Instances of the same type definition are equal only if each pair of their corresponding attributes is equal. You must not specify a comparison method to determine the equality of two ADTs.</p>
<p class="subhead2"><a id="LNPLS1905"></a>MAP</p>
<p>For <code dir="ltr">MAP</code>, specify a member function (<code dir="ltr">MAP</code> method) that returns the relative position of a given instance in the ordering of all instances of the object. A map method is called implicitly and induces an ordering of object instances by mapping them to values of a predefined scalar type. The database uses the ordering for comparison conditions and <code dir="ltr">ORDER</code> <code dir="ltr">BY</code> clauses.</p>
<p>If <code dir="ltr"><span class="codeinlineitalic">type</span></code> is to be referenced in queries involving sorts (through <code dir="ltr">ORDER</code> <code dir="ltr">BY</code>, <code dir="ltr">GROUP</code> <code dir="ltr">BY</code>, <code dir="ltr">DISTINCT</code>, or <code dir="ltr">UNION</code> clauses) or joins, and you want those queries to be parallelized, then you must specify a <code dir="ltr">MAP</code> member function.</p>
<p>If the argument to the <code dir="ltr">MAP</code> method is null, then the <code dir="ltr">MAP</code> method returns null and the method is not invoked.</p>
<p>An object specification can contain only one <code dir="ltr">MAP</code> method, which must be a function. The result type must be a predefined SQL scalar type, and the <code dir="ltr">MAP</code> function can have no arguments other than the implicit <code dir="ltr">SELF</code> argument.</p>
<p>A subtype cannot define a new <code dir="ltr">MAP</code> method, but it can override an inherited <code dir="ltr">MAP</code> method.</p>
<p class="subhead2"><a id="LNPLS1906"></a>ORDER</p>
<p>For <code dir="ltr">ORDER</code>, specify a member function (<code dir="ltr">ORDER</code> method) that takes an instance of an object as an explicit argument and the implicit <code dir="ltr">SELF</code> argument and returns either a negative, zero, or positive integer. The negative, zero, or positive value indicates that the implicit <code dir="ltr">SELF</code> argument is less than, equal to, or greater than the explicit argument.</p>
<p>If either argument to the <code dir="ltr">ORDER</code> method is null, then the <code dir="ltr">ORDER</code> method returns null and the method is not invoked.</p>
<p>When instances of the same ADT definition are compared in an <code dir="ltr">ORDER</code> <code dir="ltr">BY</code> clause, the <code dir="ltr">ORDER</code> method function is invoked.</p>
<p>An object specification can contain only one <code dir="ltr">ORDER</code> method, which must be a function having the return type <code dir="ltr">NUMBER</code>.</p>
<p>A subtype cannot define an <code dir="ltr">ORDER</code> method, nor can it override an inherited <code dir="ltr">ORDER</code> method.</p>
<p class="subhead2"><a id="i2079292"></a><a id="LNPLS1459"></a><span class="italic">alter_method_spec</span></p>
<p>Adds a method to or drops a method from <code dir="ltr"><span class="codeinlineitalic">type</span></code>. The database disables any function-based indexes that depend on the type.</p>
<p>In one <code dir="ltr">ALTER</code> <code dir="ltr">TYPE</code> statement you can add or drop multiple methods, but you can reference each method only once.</p>
<p class="subhead2"><a id="LNPLS1460"></a>ADD</p>
<p>When you add a method, its name must not conflict with any existing attributes in its type hierarchy.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#i2115685">"Adding a Member Function: Example"</a></div>
<p class="subhead2"><a id="LNPLS1461"></a>DROP</p>
<p>When you drop a method, the database removes the method from the target type.</p>
<p><a id="LNPLS1462"></a><span class="subhead3">Restriction on DROP&nbsp;</span>You cannot drop from a subtype a method inherited from its supertype. Instead you must drop the method from the supertype.</p>
<p class="subhead2"><a id="LNPLS1463"></a><span class="italic">subprogram_spec</span></p>
<p>The <code dir="ltr">MEMBER</code> and <code dir="ltr">STATIC</code> clauses let you add a procedure subprogram to or drop it from the ADT.</p>
<p><a id="LNPLS1464"></a><span class="subhead3">Restriction on <span class="italic">subprogram_spec</span>&nbsp;</span>You cannot define a <code dir="ltr">STATIC</code> method on a subtype that redefines a <code dir="ltr">MEMBER</code> method in its supertype, or vice versa.</p>
<p class="subhead2"><a id="LNPLS1465"></a><span class="italic">map_order_function_spec</span></p>
<p>If you declare either a <code dir="ltr">MAP</code> or <code dir="ltr">ORDER</code> method, then you can compare object instances in SQL.</p>
<p><a id="LNPLS1466"></a><span class="subhead3">Restriction on <span class="italic">map_order_function_spec</span>&nbsp;</span>You cannot add an <code dir="ltr">ORDER</code> method to a subtype.</p>
<p class="subhead2"><a id="i2079296"></a><a id="LNPLS1467"></a><span class="italic">alter_attribute_definition</span></p>
<p>Adds, drops, or modifies an attribute of an ADT. In one <code dir="ltr">ALTER</code> <code dir="ltr">TYPE</code> statement, you can add, drop, or modify multiple member attributes or methods, but you can reference each attribute or method only once.</p>
<p class="subhead2"><a id="LNPLS1468"></a>ADD ATTRIBUTE</p>
<p>Name of the attribute must not conflict with existing attributes or methods in the type hierarchy. The database adds the attribute to the end of the locally defined attribute list.</p>
<p>If you add the attribute to a supertype, then it is inherited by all of its subtypes. In subtypes, inherited attributes always precede declared attributes. Therefore, you might need to update the mappings of the implicitly altered subtypes after adding an attribute to a supertype.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#i2123852">"Adding a Collection Attribute: Example"</a></div>
<p class="subhead2"><a id="i2115720"></a><a id="LNPLS1469"></a>DROP ATTRIBUTE</p>
<p>When you drop an attribute from a type, the database drops the column corresponding to the dropped attribute and any indexes, statistics, and constraints referencing the dropped attribute.</p>
<p>You need not specify the data type of the attribute you are dropping.</p>
<p><a id="LNPLS1470"></a><span class="subhead3">Restrictions on DROP ATTRIBUTE&nbsp;</span></p>
<ul>
<li>
<p>You cannot drop an attribute inherited from a supertype. Instead you must drop the attribute from the supertype.</p>
</li>
<li>
<p>You cannot drop an attribute that is part of a partitioning, subpartitioning, or cluster key.</p>
<div class="infobox-note">
<p class="notep1">Caution:</p>
If you use the <code dir="ltr">INVALIDATE</code> option, then the compiler does not check dependents; therefore, this rule is not enforced. However, dropping such an attribute leaves the table in an unusable state.</div>
</li>
<li>
<p>You cannot drop an attribute of a primary-key-based object identifier of an object table or a primary key of an index-organized table.</p>
</li>
<li>
<p>You cannot drop all of the attributes of a root type. Instead you must drop the type. However, you can drop all of the locally declared attributes of a subtype.</p>
</li>
</ul>
<p class="subhead2"><a id="LNPLS1471"></a>MODIFY ATTRIBUTE</p>
<p>Modifies the data type of an existing scalar attribute. For example, you can increase the length of a <code dir="ltr">VARCHAR2</code> or <code dir="ltr">RAW</code> attribute, or you can increase the precision or scale of a numeric attribute.</p>
<p><a id="LNPLS1472"></a><span class="subhead3">Restriction on MODIFY ATTRIBUTE&nbsp;</span>You cannot expand the size of an attribute referenced in a function-based index, domain index, or cluster key.</p>
<p class="subhead2"><a id="i2129328"></a><a id="LNPLS1477"></a><span class="italic">alter_collection_clauses</span></p>
<p>These clauses are valid only for collection types.</p>
<p class="subhead2"><a id="LNPLS1478"></a>MODIFY LIMIT <span class="italic">integer</span></p>
<p>Increases the number of elements in a varray. It is not valid for nested tables. Specify an integer greater than the current maximum number of elements in the varray.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#i2147552">"Increasing the Number of Elements of a Collection Type: Example"</a></div>
<p class="subhead2"><a id="LNPLS1479"></a>ELEMENT TYPE <span class="italic">datatype</span></p>
<p>Increases the precision, size, or length of a scalar data type of a varray or nested table. This clause is not valid for collections of ADTs.</p>
<ul>
<li>
<p>For a collection of <code dir="ltr">NUMBER</code>, you can increase the precision or scale.</p>
</li>
<li>
<p>For a collection of <code dir="ltr">RAW</code>, you can increase the maximum size.</p>
</li>
<li>
<p>For a collection of <code dir="ltr">VARCHAR2</code> or <code dir="ltr">NVARCHAR2</code>, you can increase the maximum length.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#i2147536">"Increasing the Length of a Collection Type: Example"</a></div>
</li>
</ul>
<p class="subhead2"><a id="i2079300"></a><a id="LNPLS1480"></a><span class="italic">dependent_handling_clause</span></p>
<p>Specifies how the database is to handle objects that are dependent on the modified type. If you omit this clause, then the <code dir="ltr">ALTER</code> <code dir="ltr">TYPE</code> statement terminates if <code dir="ltr"><span class="codeinlineitalic">type</span></code> has any dependent type or table.</p>
<p class="subhead2"><a id="LNPLS1481"></a>INVALIDATE</p>
<p>Invalidates all dependent objects without any checking mechanism.</p>
<div class="infobox-note">
<p class="notep1">Caution:</p>
The database does not validate the type change, so use this clause with caution. For example, if you drop an attribute that is a partitioning or cluster key, then the table becomes unusable.</div>
<p class="subhead2"><a id="LNPLS1482"></a>CASCADE</p>
<p>Propagates the type change to dependent types and tables. The database terminates the statement if any errors are found in the dependent types or tables unless you also specify <code dir="ltr">FORCE</code>.</p>
<p>If you change the property of the type between <code dir="ltr">FINAL</code> and <code dir="ltr">NOT</code> <code dir="ltr">FINAL</code>, then you must specify this clause to convert data in dependent columns and tables. See <a href="#i2129717">"[NOT] FINAL"</a>.</p>
<p class="subhead2"><a id="LNPLS1483"></a>INCLUDING TABLE DATA</p>
<p><span class="bold">(Default)</span> Converts data stored in all user-defined columns to the most recent version of the column type.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
You must specify this clause if your column data is in Oracle database version 8.0 image format. This clause is also required if you are changing the type property between <code dir="ltr">FINAL</code> and <code dir="ltr">NOT</code> <code dir="ltr">FINAL</code></div>
<ul>
<li>
<p>For each attribute added to the column type, the database adds an attribute to the data and initializes it to null.</p>
</li>
<li>
<p>For each attribute dropped from the referenced type, the database removes the corresponding attribute data from each row in the table.</p>
</li>
</ul>
<p>If you specify <code dir="ltr">INCLUDING</code> <code dir="ltr">TABLE</code> <code dir="ltr">DATA</code>, then all of the tablespaces containing the table data must be in read/write mode.</p>
<p>If you specify <code dir="ltr">NOT</code> <code dir="ltr">INCLUDING</code> <code dir="ltr">TABLE</code> <code dir="ltr">DATA</code>, then the database upgrades the metadata of the column to reflect the changes to the type but does not scan the dependent column and update the data as part of this <code dir="ltr">ALTER</code> <code dir="ltr">TYPE</code> statement. However, the dependent column data remains accessible, and the results of subsequent queries of the data reflect the type modifications.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink ADOBJ00603" href="../../appdev.112/e11822/adobjadv.htm#ADOBJ00603"><span class="italic">Oracle Database Object-Relational Developer's Guide</span></a> for more information about the implications of not including table data when modifying type attribute</div>
<p class="subhead2"><a id="LNPLS1484"></a>CONVERT TO SUBSTITUTABLE</p>
<p>Specify this clause if you are changing the type from <code dir="ltr">FINAL</code> to <code dir="ltr">NOT</code> <code dir="ltr">FINAL</code> and you want to create substitutable tables and columns of the type and also store subtype instances of the altered type in existing dependent tables and columns. See <a href="#i2129717">"[NOT] FINAL"</a> for more information.</p>
<p class="subhead2"><a id="BABJBCII"></a><a id="LNPLS1485"></a><span class="italic">exceptions_clause</span></p>
<p>Specify <code dir="ltr">FORCE</code> if you want the database to ignore the errors from dependent tables and indexes and log all errors in the specified exception table. The exception table must have been created by running the <code dir="ltr">DBMS_UTILITY</code>.<code dir="ltr">CREATE_ALTER_TYPE_ERROR_TABLE</code> procedure.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="g2265470"></a>Examples</p>
<p><a id="i2115685"></a><a id="LNPLS99994"></a><span class="subhead3">Adding a Member Function: Example&nbsp;</span>This example uses the ADT <code dir="ltr">data_typ1</code>. See <a href="create_type.htm#i2083561">"ADT Examples"</a> for the example that creates this ADT. A method is added to <code dir="ltr">data_typ1</code> and its type body is modified to correspond. The date formats are consistent with the <code dir="ltr">order_date</code> column of the <code dir="ltr">oe.orders</code> sample table:</p>
<pre dir="ltr">
ALTER TYPE data_typ1 
   ADD MEMBER FUNCTION qtr(der_qtr DATE) 
   RETURN CHAR CASCADE;

CREATE OR REPLACE TYPE BODY data_typ1 IS 
  MEMBER FUNCTION prod (invent NUMBER) RETURN NUMBER IS 
  BEGIN 
  RETURN (year + invent); 
  END; 
     MEMBER FUNCTION qtr(der_qtr DATE) RETURN CHAR IS 
     BEGIN 
       IF (der_qtr &lt; TO_DATE('01-APR', 'DD-MON')) THEN 
         RETURN 'FIRST'; 
       ELSIF (der_qtr &lt; TO_DATE('01-JUL', 'DD-MON')) THEN 
         RETURN 'SECOND'; 
       ELSIF (der_qtr &lt; TO_DATE('01-OCT', 'DD-MON')) THEN 
         RETURN 'THIRD'; 
       ELSE 
         RETURN 'FOURTH'; 
       END IF; 
     END; 
   END;
/
</pre>
<p><a id="i2123852"></a><a id="LNPLS1486"></a><span class="subhead3">Adding a Collection Attribute: Example&nbsp;</span>This example adds the <code dir="ltr">author</code> attribute to the <code dir="ltr">textdoc_tab</code> object column of the <code dir="ltr">text</code> table. See <a href="create_type.htm#i2083561">"ADT Examples"</a> for the example that creates the underlying <code dir="ltr">textdoc_typ</code> type.</p>
<pre dir="ltr">
CREATE TABLE text (
   doc_id       NUMBER,
   description  textdoc_tab)
   NESTED TABLE description STORE AS text_store;

ALTER TYPE textdoc_typ 
   ADD ATTRIBUTE (author VARCHAR2) CASCADE;
</pre>
<p>The <code dir="ltr">CASCADE</code> keyword is required because both the <code dir="ltr">textdoc_tab</code> and <code dir="ltr">text</code> table are dependent on the <code dir="ltr">textdoc_typ</code> type.</p>
<p><a id="i2147552"></a><a id="LNPLS1487"></a><span class="subhead3">Increasing the Number of Elements of a Collection Type: Example&nbsp;</span>This example increases the maximum number of elements in the varray <code dir="ltr">phone_list_typ_demo</code>. See <a href="create_type.htm#i2083561">"ADT Examples"</a> for the example that creates this type.</p>
<pre dir="ltr">
ALTER TYPE phone_list_typ_demo
  MODIFY LIMIT 10 CASCADE;
</pre>
<p><a id="i2147536"></a><a id="LNPLS1488"></a><span class="subhead3">Increasing the Length of a Collection Type: Example&nbsp;</span>This example increases the length of the varray element type <code dir="ltr">phone_list_typ</code>:</p>
<pre dir="ltr">
ALTER TYPE phone_list_typ
  MODIFY ELEMENT TYPE VARCHAR(64) CASCADE;
</pre>
<p><a id="i2115744"></a><a id="LNPLS1489"></a><span class="subhead3">Recompiling a Type: Example&nbsp;</span>This example recompiles type <code dir="ltr">cust_address_typ</code> in the <code dir="ltr">hr</code> schema:</p>
<pre dir="ltr">
ALTER TYPE cust_address_typ2 COMPILE;
</pre>
<p><a id="i2115755"></a><a id="LNPLS1490"></a><span class="subhead3">Recompiling a Type Specification: Example&nbsp;</span>This example compiles the type specification of <code dir="ltr">link2</code>.</p>
<pre dir="ltr">
CREATE TYPE link1 AS OBJECT
  (a NUMBER); 
/
CREATE TYPE link2 AS OBJECT
  (a NUMBER, 
   b link1, 
   <span class="italic">MEMBER FUNCTION p(c1 NUMBER) RETURN NUMBER</span>); 
/
CREATE TYPE BODY link2 AS
<span class="italic">   MEMBER FUNCTION p(c1 NUMBER) RETURN NUMBER IS </span>
<span class="italic">      BEGIN  </span>
<span class="italic">         dbms_output.put_line(c1);</span>
<span class="italic">         RETURN c1; </span>
<span class="italic">      END; </span>
   END; 
/
</pre>
<p>In this example, both the specification and body of <code dir="ltr">link2</code> are invalidated because <code dir="ltr">link1</code>, which is an attribute of <code dir="ltr">link2</code>, is altered.</p>
<pre dir="ltr">
ALTER TYPE link1 ADD ATTRIBUTE (b NUMBER) INVALIDATE;
</pre>
<p>You must recompile the type by recompiling the specification and body in separate statements:</p>
<pre dir="ltr">
ALTER TYPE link2 COMPILE SPECIFICATION;
         
ALTER TYPE link2 COMPILE BODY;
         
</pre>
<p>Alternatively, you can compile both specification and body at the same time:</p>
<pre dir="ltr">
ALTER TYPE link2 COMPILE;
</pre>
<p><a id="BABHDDFE"></a><a id="LNPLS1907"></a><span class="subhead3">Evolving and Resetting an ADT: Example&nbsp;</span>This example creates an ADT in the schema <code dir="ltr">Usr</code>, evolves that ADT, and then tries to enable editions for <code dir="ltr">Usr</code>, which fails. Then the example resets the version of the ADT to 1 and succeeds in enabling editions for <code dir="ltr">Usr</code>. To show the version numbers of the newly created, evolved, and reset ADT, the example uses the static data dictionary view <code dir="ltr">DBA_TYPE_VERSIONS</code>.</p>
<pre dir="ltr">
<span class="bold">-- Create ADT in schema Usr:</span>
create type Usr.My_ADT authid Definer is object(a1 number)

<span class="bold">-- Show version number of ADT:</span>
select Version#||Chr(10)||Text t
from DBA_Type_Versions
where Owner = 'USR'
and Type_Name = 'MY_ADT'
/
</pre>
<p>Result:</p>
<pre dir="ltr">
T
--------------------------------------------------------------------------------
<span class="bold">1</span>
type     My_ADT authid Definer is object(a1 number)


1 row selected.

<span class="bold">-- Evolve ADT:</span>
alter type Usr.My_ADT add attribute (a2 number)
/

<span class="bold">-- Show version number of evolved ADT:</span>
select Version#||Chr(10)||Text t
from DBA_Type_Versions
where Owner = 'USR'
and Type_Name = 'MY_ADT'
/
</pre>
<p>Result:</p>
<pre dir="ltr">
T
--------------------------------------------------------------------------------
<span class="bold">1</span>
type     My_ADT authid Definer is object(a1 number)

<span class="bold">2</span>
type     My_ADT authid Definer is object(a1 number)

<span class="bold">2</span>
 alter type     My_ADT add attribute (a2 number)


<span class="bold">3 rows selected.</span>

<span class="bold">-- Try to enable editions for Usr:</span>
alter user Usr enable editions
/
</pre>
<p>Result:</p>
<pre dir="ltr">
alter user Usr enable editions
*
<span class="bold">ERROR at line 1:</span>
<span class="bold">ORA-38820: user has evolved object type</span>

<span class="bold">-- Reset version of ADT to 1:</span>
alter type Usr.My_ADT reset
/

<span class="bold">-- Show version number of reset ADT:</span>
select Version#||Chr(10)||Text t
from DBA_Type_Versions
where Owner = 'USR'
and Type_Name = 'MY_ADT'
/
</pre>
<p>Result:</p>
<pre dir="ltr">
T
--------------------------------------------------------------------------------
<span class="bold">1</span>
type     My_ADT authid Definer is object(a1 number)

<span class="bold">1</span>
 alter type     My_ADT add attribute (a2 number)


<span class="bold">2 rows selected.</span>

<span class="bold">-- Try to enable editions for Usr:</span>
alter user Usr enable editions
/
</pre>
<p>Result:</p>
<pre dir="ltr">
<span class="bold">User altered.</span>
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="BABFFFFF"></a>Related Topics</p>
<ul>
<li>
<p><a href="create_type.htm#BABHJHEB">"CREATE TYPE Statement"</a></p>
</li>
<li>
<p><a href="create_type_body.htm#i2064997">"CREATE TYPE BODY Statement"</a></p>
</li>
<li>
<p><a href="drop_type.htm#CJAEEEJI">"DROP TYPE Statement"</a></p>
</li>
</ul>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment1082">
<tr>
<td class="cellalignment1091">
<table class="cellalignment1087">
<tr>
<td class="cellalignment1086"><a href="alter_trigger.htm"><img width="24" height="24" src="../../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment1086"><a href="create_function.htm"><img width="24" height="24" src="../../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;1996, 2014,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment1094">
<table class="cellalignment1085">
<tr>
<td class="cellalignment1086"><a href="../../index.htm"><img width="24" height="24" src="../../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment1086"><a href="../../nav/portal_booklist.htm"><img width="24" height="24" src="../../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment1086"><a href="toc.htm"><img width="24" height="24" src="../../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment1086"><a href="index.htm"><img width="24" height="24" src="../../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment1086"><a href="../../nav/mindx.htm"><img width="24" height="24" src="../../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment1086"><a href="../../dcommon/html/feedback.htm"><img width="24" height="24" src="../../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>
</body>
</html>
