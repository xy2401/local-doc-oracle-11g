<!DOCTYPE html>
<html lang="en" >
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1">
<meta charset="utf-8">
<title>CREATE FUNCTION Statement</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Merged Version 1032" />
<meta name="dcterms.created" content="2014-12-05T11:53:5Z" />
<meta name="robots" content="all" />
<meta name="dcterms.title" content="Database PL/SQL Language Reference" />
<meta name="dcterms.identifier" content="E25519-13" />
<meta name="dcterms.isVersionOf" content="LNPLS" />
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;1996, 2014,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved." />
<link rel="Start" href="../../index.htm" title="Home" type="text/html" />
<link rel="Copyright" href="../../dcommon/html/cpyr.htm" title="Copyright" type="text/html" />

<script type="application/javascript"  src="../../dcommon/js/headfoot.js"></script>
<script type="application/javascript"  src="../../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html" />
<link rel="Index" href="index.htm" title="Index" type="text/html" />
<link rel="Prev" href="alter_type.htm" title="Previous" type="text/html" />
<link rel="Next" href="create_library.htm" title="Next" type="text/html" />
<link rel="alternate" href="../e25519.pdf" title="PDF version" type="application/pdf" />
<link rel="schema.dcterms" href="http://purl.org/dc/terms/" />
<link rel="stylesheet" href="../../dcommon/css/fusiondoc.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/header.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/footer.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/fonts.css">
<link rel="stylesheet" href="../../dcommon/css/foundation.css">
<link rel="stylesheet" href="../../dcommon/css/codemirror.css">
<link rel="stylesheet" type="text/css" title="Default" href="../../nav/css/html5.css">
<link rel="stylesheet" href="../../dcommon/css/respond-480-tablet.css">
<link rel="stylesheet" href="../../dcommon/css/respond-768-laptop.css">
<link rel="stylesheet" href="../../dcommon/css/respond-1140-deskop.css">
<script type="application/javascript" src="../../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">79/99</span> <!-- End Header --><a id="i2153260"></a>
<div id="LNPLS01370" class="refsect1">
<h1 class="refsect1">CREATE FUNCTION Statement</h1>
<p>The <a id="sthref1318"></a><code dir="ltr">CREATE</code> <code dir="ltr">FUNCTION</code> statement creates or replaces a <a id="sthref1319"></a><a id="sthref1320"></a>standalone function or a <a id="sthref1321"></a>call specification.</p>
<p>A <span class="bold">standalone function</span> is a function (a subprogram that returns a single value) that is stored in the database.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
A standalone function that you create with the <code dir="ltr">CREATE</code> <code dir="ltr">FUNCTION</code> statement differs from a function that you declare and define in a PL/SQL block or package. For information about the latter, see <a href="function.htm#i34368">"Function Declaration and Definition"</a>.</div>
<p>A <span class="bold">call specification</span> declares a Java method or a third-generation language (3GL) subprogram so that it can be invoked from PL/SQL. You can also use the SQL <code dir="ltr">CALL</code> statement to invoke such a method or subprogram. The call specification tells the database which Java method, or which named function in which shared library, to invoke when an invocation is made. It also tells the database what type conversions to make for the arguments and return value.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
To be callable from SQL statements, a stored function must obey certain rules that control side effects. See <a href="subprograms.htm#i22204">"Subprogram Side Effects"</a>.</div>
<p class="subhead2"><a id="LNPLS1908"></a>Topics</p>
<ul>
<li>
<p><a href="#BABJECBJ">Prerequisites</a></p>
</li>
<li>
<p><a href="#BABFIIBA">Syntax</a></p>
</li>
<li>
<p><a href="#g2273331">Semantics</a></p>
</li>
<li>
<p><a href="#i2062371">Examples</a></p>
</li>
<li>
<p><a href="#BABFFCGA">Related Topics</a></p>
</li>
</ul>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="BABJECBJ"></a>Prerequisites</p>
<p>To create or replace a standalone function in your schema, you must have the <code dir="ltr">CREATE</code> <code dir="ltr">PROCEDURE</code> system privilege. To create or replace a standalone function in another user's schema, you must have the <code dir="ltr">CREATE</code> <code dir="ltr">ANY</code> <code dir="ltr">PROCEDURE</code> system privilege.</p>
<p>To invoke a call specification, you may need additional privileges, for example, <code dir="ltr">EXECUTE</code> privileges on a C library for a C call specification.</p>
<p>To embed a <code dir="ltr">CREATE</code> <code dir="ltr">FUNCTION</code> statement inside an Oracle precompiler program, you must terminate the statement with the keyword <code dir="ltr">END-EXEC</code> followed by the embedded SQL statement terminator for the specific language.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
For more information about such prerequisites:
<ul>
<li>
<p><a class="olink ADFNS00906" href="../../appdev.112/e41502/adfns_packages.htm#ADFNS00906"><span class="italic">Oracle Database Advanced Application Developer's Guide</span></a></p>
</li>
<li>
<p><a class="olink JJDEV" href="../../java.112/e10588/toc.htm"><span class="italic">Oracle Database Java Developer's Guide</span></a></p>
</li>
</ul>
</div>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="BABFIIBA"></a>Syntax</p>
<p class="subhead2"><a id="LNPLS1491"></a><span class="italic">create_function</span> ::=</p>
<img width="588" height="550" src="img/create_function.gif" alt="Description of create_function.gif follows" /><br />
<a id="sthref1322" href="img_text/create_function.htm">Description of the illustration create_function.gif</a><br />
<br />
<p>See:</p>
<ul>
<li>
<p><a href="block.htm#CJACHDGG">"<span class="italic">body</span> ::="</a></p>
</li>
<li>
<p><a href="#CJADHIEA">"<span class="italic">call_spec</span> ::="</a></p>
</li>
<li>
<p><a href="collection.htm#CJAICDHA">"<span class="italic">datatype</span> ::="</a></p>
</li>
<li>
<p><a href="block.htm#CJAIABJJ">"<span class="italic">declare_section</span> ::="</a></p>
</li>
<li>
<p><a href="#CIHCAJAF">"<span class="italic">parallel_enable_clause</span> ::="</a></p>
</li>
<li>
<p><a href="parameter_declaration.htm#CJAJDGCC">"<span class="italic">parameter_declaration</span> ::="</a></p>
</li>
<li>
<p><a href="function.htm#CJADHAHB">"<span class="italic">relies_on_clause</span> ::="</a></p>
</li>
</ul>
<p class="subhead2"><a id="LNPLS1909"></a><span class="italic">invoker_rights_clause</span> ::=</p>
<img width="237" height="58" src="img/invoker_rights_clause.gif" alt="Description of invoker_rights_clause.gif follows" /><br />
<a id="sthref1323" href="img_text/invoker_rights_clause.htm">Description of the illustration invoker_rights_clause.gif</a><br />
<br />
<p class="subhead2"><a id="CIHCAJAF"></a><a id="LNPLS1910"></a><span class="italic">parallel_enable_clause</span> ::=</p>
<img width="772" height="175" src="img/parallel_enable_clause.gif" alt="Description of parallel_enable_clause.gif follows" /><br />
<a id="sthref1324" href="img_text/parallel_enable_clause.htm">Description of the illustration parallel_enable_clause.gif</a><br />
<br />
<p class="subhead2"><a id="LNPLS1494"></a><span class="italic">streaming_clause</span> ::=</p>
<img width="371" height="76" src="img/streaming_clause.gif" alt="Description of streaming_clause.gif follows" /><br />
<a id="sthref1325" href="img_text/streaming_clause.htm">Description of the illustration streaming_clause.gif</a><br />
<br />
<p class="subhead2"><a id="CJADHIEA"></a><a id="LNPLS1495"></a><span class="italic">call_spec</span> ::=</p>
<img width="248" height="58" src="img/call_spec.gif" alt="Description of call_spec.gif follows" /><br />
<a id="sthref1326" href="img_text/call_spec.htm">Description of the illustration call_spec.gif</a><br />
<br />
<p class="subhead2"><a id="LNPLS1496"></a><span class="italic">java_declaration</span> ::=</p>
<img width="185" height="27" src="img/java_declaration.gif" alt="Description of java_declaration.gif follows" /><br />
<a id="sthref1327" href="img_text/java_declaration.htm">Description of the illustration java_declaration.gif</a><br />
<br />
<p class="subhead2"><a id="LNPLS1497"></a><span class="italic">c_declaration</span> ::=</p>
<img width="706" height="204" src="img/c_declaration.gif" alt="Description of c_declaration.gif follows" /><br />
<a id="sthref1328" href="img_text/c_declaration.htm">Description of the illustration c_declaration.gif</a><br />
<br />
<p class="subhead2"><a id="LNPLS1911"></a><span class="italic">external_parameter</span> ::=</p>
<img width="656" height="180" src="img/external_parameter.gif" alt="Description of external_parameter.gif follows" /><br />
<a id="sthref1329" href="img_text/external_parameter.htm">Description of the illustration external_parameter.gif</a><br />
<br />
<p class="subhead2"><a id="LNPLS1912"></a><span class="italic">property</span> ::=</p>
<img width="289" height="239" src="img/property.gif" alt="Description of property.gif follows" /><br />
<a id="sthref1330" href="img_text/property.htm">Description of the illustration property.gif</a><br />
<br /></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="g2273331"></a>Semantics</p>
<p class="subhead2"><a id="LNPLS1913"></a>OR REPLACE</p>
<p>Re-creates the function if it exists, and recompiles it.</p>
<p>Users who were granted privileges on the function before it was redefined can still access the function without being regranted the privileges.</p>
<p>If any function-based indexes depend on the function, then the database marks the indexes <code dir="ltr">DISABLED</code>.</p>
<p class="subhead2"><a id="LNPLS1914"></a><span class="italic">schema</span></p>
<p>Name of the schema containing the function. <span class="bold">Default:</span> your schema.</p>
<p class="subhead2"><a id="LNPLS1915"></a><span class="italic">function_name</span></p>
<p>Name of the function to be created.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
If you plan to invoke a stored subprogram using a stub generated by SQL*Module, then the stored subprogram name must also be a legal identifier in the invoking host 3GL language, such as Ada or C.</div>
<p class="subhead2"><a id="LNPLS1916"></a>RETURN <span class="italic">datatype</span></p>
<p>For <code dir="ltr"><span class="codeinlineitalic">datatype</span></code>, specify the data type of the return value of the function. The return value can have any data type supported by PL/SQL.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
Oracle SQL does not support invoking functions with <code dir="ltr">BOOLEAN</code> parameters or returns. Therefore, for SQL statements to invoke your user-defined functions, you must design them to return numbers (0 or 1) or character strings ('<code dir="ltr">TRUE</code>' or '<code dir="ltr">FALSE</code>').</div>
<p>The data type cannot specify a length, precision, or scale. The database derives the length, precision, or scale of the return value from the environment from which the function is called.</p>
<p>If the return type is <code dir="ltr">ANYDATASET</code> and you intend to use the function in the <code dir="ltr">FROM</code> clause of a query, then you must also specify the <code dir="ltr">PIPELINED</code> clause and define a describe method (<code dir="ltr">ODCITableDescribe</code>) as part of the implementation type of the function.</p>
<p>You cannot constrain this data type (with <code dir="ltr">NOT</code> <code dir="ltr">NULL</code>, for example).</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="datatypes.htm#CJAEDAEA">Chapter 3, "PL/SQL Data Types,"</a> for information about PL/SQL data types</p>
</li>
<li>
<p><a class="olink ADDCI2140" href="../../appdev.112/e10765/pipe_paral_tbl.htm#ADDCI2140"><span class="italic">Oracle Database Data Cartridge Developer's Guide</span></a> for information about defining the <code dir="ltr">ODCITableDescribe</code> function</p>
</li>
</ul>
</div>
<p class="subhead2"><a id="BABGDHEH"></a><a id="LNPLS1917"></a><span class="italic">invoker_rights_clause</span></p>
<p>Specifies the <code dir="ltr">AUTHID</code> property of the function. For information about the <code dir="ltr">AUTHID</code> property, see <a href="subprograms.htm#i18574">"Invoker's Rights and Definer's Rights (AUTHID Property)"</a>.</p>
<p class="subhead2"><a id="LNPLS1918"></a>DETERMINISTIC</p>
<p>Indicates that the function returns the same result value whenever it is called with the same values for its parameters.</p>
<p>You must specify this keyword if you intend to invoke the function in the expression of a function-based index or from the query of a materialized view that is marked <code dir="ltr">REFRESH</code> <code dir="ltr">FAST</code> or <code dir="ltr">ENABLE</code> <code dir="ltr">QUERY</code> <code dir="ltr">REWRITE</code>. When the database encounters a deterministic function in one of these contexts, it attempts to use previously calculated results when possible rather than reexecuting the function. If you subsequently change the semantics of the function, then you must manually rebuild all dependent function-based indexes and materialized views.</p>
<p>Do not specify this clause to define a function that uses package variables or that accesses the database in any way that might affect the return result of the function. The results of doing so are not captured if the database chooses not to reexecute the function.</p>
<p>These semantic rules govern the use of the <code dir="ltr">DETERMINISTIC</code> clause:</p>
<ul>
<li>
<p>You can declare a schema-level subprogram <code dir="ltr">DETERMINISTIC</code>.</p>
</li>
<li>
<p>You can declare a package-level subprogram <code dir="ltr">DETERMINISTIC</code> in the package specification but not in the package body.</p>
</li>
<li>
<p>You cannot declare <code dir="ltr">DETERMINISTIC</code> a private subprogram (declared inside another subprogram or inside a package body).</p>
</li>
<li>
<p>A <code dir="ltr">DETERMINISTIC</code> subprogram can invoke another subprogram whether the called program is declared <code dir="ltr">DETERMINISTIC</code> or not.</p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a class="olink DWHSG008" href="../../server.112/e25554/basicmv.htm#DWHSG008"><span class="italic">Oracle Database Data Warehousing Guide</span></a> for information about materialized views</p>
</li>
<li>
<p><a class="olink SQLRF01209" href="../../server.112/e41084/statements_5012.htm#SQLRF01209"><span class="italic">Oracle Database SQL Language Reference</span></a> for information about function-based indexes</p>
</li>
</ul>
</div>
<p class="subhead2"><a id="CIHIHEIB"></a><a id="LNPLS1919"></a><span class="italic">parallel_enable_clause</span></p>
<p>Indicates that the function can run from a parallel execution server of a parallel query operation. The function must not use session state, such as package variables, as those variables are not necessarily shared among the parallel execution servers.</p>
<ul>
<li>
<p>Use the optional <code dir="ltr">PARTITION</code> <code dir="ltr"><span class="codeinlineitalic">argument</span></code> <code dir="ltr">BY</code> clause only with a function that has a <code dir="ltr">REF</code> <code dir="ltr">CURSOR</code> data type. This clause lets you define the partitioning of the inputs to the function from the <code dir="ltr">REF</code> <code dir="ltr">CURSOR</code> argument.</p>
<p>Partitioning the inputs to the function affects the way the query is parallelized when the function is used as a table function in the <code dir="ltr">FROM</code> clause of the query. <code dir="ltr">ANY</code> indicates that the data can be partitioned randomly among the parallel execution servers. Alternatively, you can specify <code dir="ltr">RANGE</code> or <code dir="ltr">HASH</code> partitioning on a specified column list.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
You can partition weak cursor variable arguments to table functions only with <code dir="ltr">ANY</code>, not with <code dir="ltr">RANGE</code> or <code dir="ltr">HASH</code>.</div>
</li>
<li>
<p>The optional <code dir="ltr"><span class="codeinlineitalic">streaming_clause</span></code> lets you order or cluster the parallel processing by a specified column list.</p>
<ul>
<li>
<p><code dir="ltr">ORDER</code> <code dir="ltr">BY</code> indicates that the rows on a parallel execution server must be locally ordered.</p>
</li>
<li>
<p><code dir="ltr">CLUSTER</code> <code dir="ltr">BY</code> indicates that the rows on a parallel execution server must have the same key values as specified by the <code dir="ltr"><span class="codeinlineitalic">column_list</span></code>.</p>
</li>
<li>
<p><code dir="ltr"><span class="codeinlineitalic">expr</span></code> identifies the <code dir="ltr">REF</code> <code dir="ltr">CURSOR</code> parameter name of the table function on which partitioning was specified, and on whose columns you are specifying ordering or clustering for each slave in a parallel query execution.</p>
</li>
</ul>
</li>
</ul>
<p>The columns specified in all of these optional clauses refer to columns that are returned by the <code dir="ltr">REF</code> <code dir="ltr">CURSOR</code> argument of the function.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink ADDCI2140" href="../../appdev.112/e10765/pipe_paral_tbl.htm#ADDCI2140"><span class="italic">Oracle Database Data Cartridge Developer's Guide</span></a> for information about using parallel table functions</div>
<p class="subhead2"><a id="LNPLS1920"></a>PIPELINED { IS | USING }</p>
<p>Instructs the database to return the results of a <span class="bold">table function</span> iteratively. A table function returns a collection type (a nested table or varray). You query table functions by using the <code dir="ltr">TABLE</code> keyword before the function name in the <code dir="ltr">FROM</code> clause of the query. For example:</p>
<pre dir="ltr">
SELECT * FROM TABLE(<span class="italic">function_name</span>(...))
</pre>
<p>the database then returns rows as they are produced by the function.</p>
<ul>
<li>
<p>If you specify the keyword <code dir="ltr">PIPELINED</code> alone (<code dir="ltr">PIPELINED</code> <code dir="ltr">IS</code> ...), then the PL/SQL function body must use the <code dir="ltr">PIPE</code> keyword. This keyword instructs the database to return single elements of the collection out of the function, instead of returning the whole collection as a single value.</p>
</li>
<li>
<p>You can specify the <code dir="ltr">PIPELINED</code> <code dir="ltr">USING</code> <code dir="ltr"><span class="codeinlineitalic">implementation_type</span></code> clause to predefine an interface containing the start, fetch, and close operations. The implementation type must implement the <code dir="ltr">ODCITable</code> interface and must exist at the time the table function is created. This clause is useful for table functions implemented in external languages such as C++ and Java.</p>
<p>If the return type of the function is <code dir="ltr">ANYDATASET</code>, then you must also define a describe method (<code dir="ltr">ODCITableDescribe</code>) as part of the implementation type of the function.</p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="tuning.htm#i52932">"Chaining Pipelined Table Functions for Multiple Transformations"</a></p>
</li>
<li>
<p><a class="olink ADDCI2140" href="../../appdev.112/e10765/pipe_paral_tbl.htm#ADDCI2140"><span class="italic">Oracle Database Data Cartridge Developer's Guide</span></a> for information about using pipelined table functions</p>
</li>
</ul>
</div>
<p class="subhead2"><a id="LNPLS1921"></a>AGGREGATE USING</p>
<p>Identifies this function as an <a id="sthref1331"></a><span class="bold">aggregate function</span>, or one that evaluates a group of rows and returns a single row. You can specify aggregate functions in the select list, <code dir="ltr">HAVING</code> clause, and <code dir="ltr">ORDER</code> <code dir="ltr">BY</code> clause.</p>
<p>When you specify a user-defined aggregate function in a query, you can treat it as an <span class="bold">analytic function</span> (one that operates on a query result set). To do so, use the <code dir="ltr">OVER</code> <code dir="ltr"><span class="codeinlineitalic">analytic_clause</span></code> syntax available for SQL analytic functions. See <a class="olink SQLRF06174" href="../../server.112/e41084/functions004.htm#SQLRF06174"><span class="italic">Oracle Database SQL Language Reference</span></a> for syntax and semantics of analytic functions.</p>
<p>In the <code dir="ltr">USING</code> clause, specify the name of the implementation type of the function. The implementation type must be an ADT containing the implementation of the <code dir="ltr">ODCIAggregate</code> subprograms. If you do not specify <code dir="ltr"><span class="codeinlineitalic">schema</span></code>, then the database assumes that the implementation type is in your schema.</p>
<p><a id="LNPLS1922"></a><span class="subhead3">Restriction on AGGREGATE USING&nbsp;</span>If you specify this clause, then you can specify only one input argument for the function.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a class="olink ADDCI2120" href="../../appdev.112/e10765/aggr_functions.htm#ADDCI2120"><span class="italic">Oracle Database Data Cartridge Developer's Guide</span></a> for more information about user-defined aggregate functions</p>
</li>
<li>
<p><a class="olink ADDCI2120" href="../../appdev.112/e10765/aggr_functions.htm#ADDCI2120"><span class="italic">Oracle Database Data Cartridge Developer's Guide</span></a> for information about ODCI subprograms</p>
</li>
</ul>
</div>
<p class="subhead2"><a id="LNPLS1923"></a><span class="italic">body</span></p>
<p>The required executable part of the function and, optionally, the exception-handling part of the function.</p>
<p class="subhead2"><a id="LNPLS1924"></a><span class="italic">declare_section</span></p>
<p>The optional declarative part of the function. Declarations are local to the function, can be referenced in <code dir="ltr"><span class="codeinlineitalic">body</span></code>, and cease to exist when the function completes execution.</p>
<p class="subhead2"><a id="BABIBEBE"></a><a id="LNPLS1925"></a><span class="italic">call_spec</span></p>
<p>Maps a C procedure or Java method name, parameter types, and return type to their SQL counterparts. In <code dir="ltr"><span class="codeinlineitalic">java_declaration</span></code>, <code dir="ltr"><span class="codeinlineitalic">string</span></code> identifies the Java implementation of the method. In <code dir="ltr"><span class="codeinlineitalic">c_declaration</span></code>, <code dir="ltr">LIBRARY</code> <code dir="ltr"><span class="codeinlineitalic">lib_name</span></code> identifies a library created by the <a href="create_library.htm#BABFFFBH">"CREATE LIBRARY Statement"</a>.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a class="olink JJDEV" href="../../java.112/e10588/toc.htm"><span class="italic">Oracle Database Java Developer's Guide</span></a> to learn how to write Java call specifications</p>
</li>
<li>
<p><a class="olink ADFNS010" href="../../appdev.112/e41502/adfns_externproc.htm#ADFNS010"><span class="italic">Oracle Database Advanced Application Developer's Guide</span></a> to learn how to write C call specifications</p>
</li>
</ul>
</div>
<p class="subhead2"><a id="CIHDFDFG"></a><a id="LNPLS1926"></a>EXTERNAL</p>
<p>Deprecated way of declaring a C function, supported only for backward compatibility. Oracle recommends that you use the <code dir="ltr">LANGUAGE</code> <code dir="ltr">C</code> syntax.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="i2062371"></a>Examples</p>
<p><a id="i2092700"></a><a id="LNPLS1512"></a><span class="subhead3">Creating a Function: Examples&nbsp;</span>This statement creates the function <code dir="ltr">get_bal</code> on the sample table <code dir="ltr">oe.orders</code>:</p>
<pre dir="ltr">
CREATE FUNCTION get_bal(acc_no IN NUMBER) 
   RETURN NUMBER 
   IS acc_bal NUMBER(11,2);
   BEGIN 
      SELECT order_total 
      INTO acc_bal 
      FROM orders 
      WHERE customer_id = acc_no; 
      RETURN(acc_bal); 
    END;
/
</pre>
<p>The <code dir="ltr">get_bal</code> function returns the balance of a specified account.</p>
<p>When you invoke the function, you must specify the argument <code dir="ltr">acc_no</code>, the number of the account whose balance is sought. The data type of <code dir="ltr">acc_no</code> is <code dir="ltr">NUMBER</code>.</p>
<p>The function returns the account balance. The <code dir="ltr">RETURN</code> clause of the <code dir="ltr">CREATE</code> <code dir="ltr">FUNCTION</code> statement specifies the data type of the return value to be <code dir="ltr">NUMBER</code>.</p>
<p>The function uses a <code dir="ltr">SELECT</code> statement to select the <code dir="ltr">balance</code> column from the row identified by the argument <code dir="ltr">acc_no</code> in the <code dir="ltr">orders</code> table. The function uses a <code dir="ltr">RETURN</code> statement to return this value to the environment in which the function is called.</p>
<p>The function created in the preceding example can be used in a SQL statement. For example:</p>
<pre dir="ltr">
SELECT get_bal(165) FROM DUAL; 

GET_BAL(165)
------------
        2519
</pre>
<p>The hypothetical following statement creates a PL/SQL standalone function <code dir="ltr">get_val</code> that registers the C subprogram <code dir="ltr">c_get_val</code> as an external function. (The parameters have been omitted from this example.)</p>
<pre dir="ltr">
CREATE FUNCTION get_val
   ( x_val IN NUMBER,
    y_val IN NUMBER,
    image IN LONG RAW )
   RETURN BINARY_INTEGER AS LANGUAGE C
     <span class="italic"> NAME "c_get_val"</span>
      LIBRARY c_utils
      PARAMETERS (...);
</pre>
<p><a id="i2129412"></a><a id="LNPLS01377"></a><span class="subhead3">Creating Aggregate Functions: Example&nbsp;</span>The next statement creates an aggregate function called <code dir="ltr">SecondMax</code> to aggregate over number values. It assumes that the ADT <code dir="ltr">SecondMaxImpl</code> subprograms contains the implementations of the <code dir="ltr">ODCIAggregate</code> subprograms:</p>
<pre dir="ltr">
CREATE FUNCTION SecondMax (input NUMBER) RETURN NUMBER
    PARALLEL_ENABLE AGGREGATE USING SecondMaxImpl;
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink ADDCI2120" href="../../appdev.112/e10765/aggr_functions.htm#ADDCI2120"><span class="italic">Oracle Database Data Cartridge Developer's Guide</span></a> for the complete implementation of type and type body for <code dir="ltr">SecondMaxImpl</code></div>
<p>Use such an aggregate function in a query like this statement, which queries the sample table <code dir="ltr">hr.employees</code>:</p>
<pre dir="ltr">
SELECT SecondMax(salary) "SecondMax", department_id
      FROM employees
      GROUP BY department_id
      HAVING SecondMax(salary) &gt; 9000
      ORDER BY "SecondMax", department_id;

SecondMax DEPARTMENT_ID
--------- -------------
      9450           100
  13670.74            50
     14175            80
   18742.5            90
</pre>
<p><a id="i2092916"></a><a id="LNPLS01382"></a><span class="subhead3">Package Procedure in a Function: Example&nbsp;</span>This statement creates a function that uses a <code dir="ltr">DBMS_LOB.GETLENGTH</code> procedure to return the length of a <code dir="ltr">CLOB</code> column:</p>
<pre dir="ltr">
CREATE OR REPLACE FUNCTION text_length(a CLOB) 
   RETURN NUMBER DETERMINISTIC IS
BEGIN 
  RETURN DBMS_LOB.GETLENGTH(a);
END;
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="BABFFCGA"></a>Related Topics</p>
<p class="subhead2"><a id="LNPLS1927"></a>In this chapter:</p>
<ul>
<li>
<p><a href="alter_function.htm#i2166972">"ALTER FUNCTION Statement"</a></p>
</li>
<li>
<p><a href="create_procedure.htm#i2072424">"CREATE PROCEDURE Statement"</a></p>
</li>
<li>
<p><a href="drop_function.htm#CJAFFEDB">"DROP FUNCTION Statement"</a></p>
</li>
</ul>
<p class="subhead2"><a id="LNPLS1928"></a>In other chapters:</p>
<ul>
<li>
<p><a href="function.htm#i34368">"Function Declaration and Definition"</a> for information about creating a function in a PL/SQL block</p>
</li>
<li>
<p><a href="parameter_declaration.htm#CJADCJFE">"Formal Parameter Declaration"</a></p>
</li>
<li>
<p><a href="subprograms.htm#CHDBEJGF">Chapter 8, "PL/SQL Subprograms"</a></p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a class="olink SQLRF01108" href="../../server.112/e41084/statements_4008.htm#SQLRF01108"><span class="italic">Oracle Database SQL Language Reference</span></a> for information about the <code dir="ltr">CALL</code> statement</p>
</li>
<li>
<p><a class="olink ADFNS00908" href="../../appdev.112/e41502/adfns_packages.htm#ADFNS00908"><span class="italic">Oracle Database Advanced Application Developer's Guide</span></a> for information about restrictions on user-defined functions that are called from SQL statements</p>
</li>
<li>
<p><a class="olink ADFNS010" href="../../appdev.112/e41502/adfns_externproc.htm#ADFNS010"><span class="italic">Oracle Database Advanced Application Developer's Guide</span></a> for more information about call specifications</p>
</li>
</ul>
</div>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment1082">
<tr>
<td class="cellalignment1091">
<table class="cellalignment1087">
<tr>
<td class="cellalignment1086"><a href="alter_type.htm"><img width="24" height="24" src="../../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment1086"><a href="create_library.htm"><img width="24" height="24" src="../../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;1996, 2014,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment1094">
<table class="cellalignment1085">
<tr>
<td class="cellalignment1086"><a href="../../index.htm"><img width="24" height="24" src="../../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment1086"><a href="../../nav/portal_booklist.htm"><img width="24" height="24" src="../../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment1086"><a href="toc.htm"><img width="24" height="24" src="../../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment1086"><a href="index.htm"><img width="24" height="24" src="../../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment1086"><a href="../../nav/mindx.htm"><img width="24" height="24" src="../../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment1086"><a href="../../dcommon/html/feedback.htm"><img width="24" height="24" src="../../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>
</body>
</html>
