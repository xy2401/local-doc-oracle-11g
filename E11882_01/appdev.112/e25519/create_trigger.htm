<!DOCTYPE html>
<html lang="en" >
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1">
<meta charset="utf-8">
<title>CREATE TRIGGER Statement</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Merged Version 1032" />
<meta name="dcterms.created" content="2014-12-05T11:53:5Z" />
<meta name="robots" content="all" />
<meta name="dcterms.title" content="Database PL/SQL Language Reference" />
<meta name="dcterms.identifier" content="E25519-13" />
<meta name="dcterms.isVersionOf" content="LNPLS" />
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;1996, 2014,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved." />
<link rel="Start" href="../../index.htm" title="Home" type="text/html" />
<link rel="Copyright" href="../../dcommon/html/cpyr.htm" title="Copyright" type="text/html" />

<script type="application/javascript"  src="../../dcommon/js/headfoot.js"></script>
<script type="application/javascript"  src="../../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html" />
<link rel="Index" href="index.htm" title="Index" type="text/html" />
<link rel="Prev" href="create_procedure.htm" title="Previous" type="text/html" />
<link rel="Next" href="create_type.htm" title="Next" type="text/html" />
<link rel="alternate" href="../e25519.pdf" title="PDF version" type="application/pdf" />
<link rel="schema.dcterms" href="http://purl.org/dc/terms/" />
<link rel="stylesheet" href="../../dcommon/css/fusiondoc.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/header.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/footer.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/fonts.css">
<link rel="stylesheet" href="../../dcommon/css/foundation.css">
<link rel="stylesheet" href="../../dcommon/css/codemirror.css">
<link rel="stylesheet" type="text/css" title="Default" href="../../nav/css/html5.css">
<link rel="stylesheet" href="../../dcommon/css/respond-480-tablet.css">
<link rel="stylesheet" href="../../dcommon/css/respond-768-laptop.css">
<link rel="stylesheet" href="../../dcommon/css/respond-1140-deskop.css">
<script type="application/javascript" src="../../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">84/99</span> <!-- End Header --><a id="i2235611"></a>
<div id="LNPLS01374" class="refsect1"><!-- infolevel="all" infotype="General" -->
<h1 class="refsect1">CREATE TRIGGER Statement</h1>
<p>The <a id="sthref1349"></a><code dir="ltr">CREATE</code> <code dir="ltr">TRIGGER</code> statement creates or replaces a <span class="bold">database trigger</span>, which is either of these:</p>
<ul>
<li>
<p>A stored PL/SQL block associated with a table, a schema, or the database</p>
</li>
<li>
<p>An anonymous PL/SQL block or an invocation of a procedure implemented in PL/SQL or Java</p>
</li>
</ul>
<p>The database automatically runs a trigger when specified conditions occur.</p>
<p class="subhead2"><a id="LNPLS1962"></a>Topics</p>
<ul>
<li>
<p><a href="#BABHJFGH">Prerequisites</a></p>
</li>
<li>
<p><a href="#BABBJHHG">Syntax</a></p>
</li>
<li>
<p><a href="#CIHEJCFA">Semantics</a></p>
</li>
<li>
<p><a href="#CIHBCBEI">Examples</a></p>
</li>
<li>
<p><a href="#BABCHGAE">Related Topics</a></p>
</li>
</ul>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="BABHJFGH"></a>Prerequisites</p>
<ul>
<li>
<p>To create a trigger in your schema on a table in your schema or on your schema (<code dir="ltr">SCHEMA</code>), you must have the <code dir="ltr">CREATE</code> <code dir="ltr">TRIGGER</code> system privilege.</p>
</li>
<li>
<p>To create a trigger in any schema on a table in any schema, or on another user's schema (<code dir="ltr"><span class="codeinlineitalic">schema</span></code>.<code dir="ltr">SCHEMA</code>), you must have the <code dir="ltr">CREATE</code> <code dir="ltr">ANY</code> <code dir="ltr">TRIGGER</code> system privilege.</p>
</li>
<li>
<p>In addition to the preceding privileges, to create a trigger on <code dir="ltr">DATABASE</code>, you must have the <code dir="ltr">ADMINISTER</code> <code dir="ltr">DATABASE</code> <code dir="ltr">TRIGGER</code> system privilege.</p>
</li>
<li>
<p>In addition to the preceding privileges, to create a crossedition trigger, you must be enabled for editions. For information about enabling editions for a user, see <a class="olink ADFNS99878" href="../../appdev.112/e41502/adfns_editions.htm#ADFNS99878"><span class="italic">Oracle Database Advanced Application Developer's Guide</span></a>.</p>
</li>
</ul>
<p>If the trigger issues SQL statements or invokes procedures or functions, then the owner of the trigger must have the privileges necessary to perform these operations. These privileges must be granted directly to the owner rather than acquired through roles.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="BABBJHHG"></a>Syntax</p>
<p class="subhead2"><a id="CJAFADBD"></a><a id="LNPLS1542"></a><span class="italic">create_trigger</span> ::=</p>
<img width="466" height="46" src="img/create_trigger.gif" alt="Description of create_trigger.gif follows" /><br />
<a id="sthref1350" href="img_text/create_trigger.htm">Description of the illustration create_trigger.gif</a><br />
<br />
<p class="subhead2"><a id="LNPLS1972"></a><span class="italic">plsql_trigger_source</span> ::=</p>
<img width="426" height="123" src="img/plsql_trigger_source.gif" alt="Description of plsql_trigger_source.gif follows" /><br />
<a id="sthref1351" href="img_text/plsql_trigger_source.htm">Description of the illustration plsql_trigger_source.gif</a><br />
<br />
<p>See:</p>
<ul>
<li>
<p><a href="#BABDFIFA">"<span class="italic">compound_dml_trigger</span> ::="</a></p>
</li>
<li>
<p><a href="#CIHEIGBE">"<span class="italic">instead_of_dml_trigger</span> ::="</a></p>
</li>
<li>
<p><a href="#BABHEFGE">"<span class="italic">system_trigger</span> ::="</a></p>
</li>
</ul>
<p class="subhead2"><a id="BABFDFFG"></a><a id="LNPLS1543"></a><span class="italic">simple_dml_trigger</span> ::=</p>
<img width="617" height="235" src="img/simple_dml_trigger.gif" alt="Description of simple_dml_trigger.gif follows" /><br />
<a id="sthref1352" href="img_text/simple_dml_trigger.htm">Description of the illustration simple_dml_trigger.gif</a><br />
<br />
<p>See:</p>
<ul>
<li>
<p><a href="#BABGDFBI">"<span class="italic">dml_event_clause</span> ::="</a></p>
</li>
<li>
<p><a href="#BABEBAAB">"<span class="italic">referencing_clause</span> ::="</a></p>
</li>
<li>
<p><a href="#CJAJBHAA">"<span class="italic">trigger_body</span> ::="</a></p>
</li>
<li>
<p><a href="#CJABEJEA">"<span class="italic">trigger_edition_clause</span> ::="</a></p>
</li>
<li>
<p><a href="#CJAEJAFB">"<span class="italic">trigger_ordering_clause</span> ::="</a></p>
</li>
</ul>
<p class="subhead2"><a id="CIHEIGBE"></a><a id="LNPLS1973"></a><span class="italic">instead_of_dml_trigger</span> ::=</p>
<img width="683" height="371" src="img/instead_of_trigger.gif" alt="Description of instead_of_trigger.gif follows" /><br />
<a id="sthref1353" href="img_text/instead_of_trigger.htm">Description of the illustration instead_of_trigger.gif</a><br />
<br />
<p>See:</p>
<ul>
<li>
<p><a href="#BABEBAAB">"<span class="italic">referencing_clause</span> ::="</a></p>
</li>
<li>
<p><a href="#CJAJBHAA">"<span class="italic">trigger_body</span> ::="</a></p>
</li>
<li>
<p><a href="#CJABEJEA">"<span class="italic">trigger_edition_clause</span> ::="</a></p>
</li>
<li>
<p><a href="#CJAEJAFB">"<span class="italic">trigger_ordering_clause</span> ::="</a></p>
</li>
</ul>
<p class="subhead2"><a id="BABDFIFA"></a><a id="LNPLS1544"></a><span class="italic">compound_dml_trigger</span> ::=</p>
<img width="732" height="154" src="img/compound_dml_trigger.gif" alt="Description of compound_dml_trigger.gif follows" /><br />
<a id="sthref1354" href="img_text/compound_dml_trigger.htm">Description of the illustration compound_dml_trigger.gif</a><br />
<br />
<p>See:</p>
<ul>
<li>
<p><a href="#CJACFCDJ">"<span class="italic">compound_trigger_block</span> ::="</a></p>
</li>
<li>
<p><a href="#BABGDFBI">"<span class="italic">dml_event_clause</span> ::="</a></p>
</li>
<li>
<p><a href="#BABEBAAB">"<span class="italic">referencing_clause</span> ::="</a></p>
</li>
<li>
<p><a href="#CJABEJEA">"<span class="italic">trigger_edition_clause</span> ::="</a></p>
</li>
<li>
<p><a href="#CJAEJAFB">"<span class="italic">trigger_ordering_clause</span> ::="</a></p>
</li>
</ul>
<p class="subhead2"><a id="BABHEFGE"></a><a id="LNPLS1545"></a><span class="italic">system_trigger</span> ::=</p>
<img width="628" height="190" src="img/system_trigger.gif" alt="Description of system_trigger.gif follows" /><br />
<a id="sthref1355" href="img_text/system_trigger.htm">Description of the illustration system_trigger.gif</a><br />
<br />
<p class="subhead2"><a id="BABGDFBI"></a><a id="LNPLS1549"></a><span class="italic">dml_event_clause</span> ::=</p>
<img width="603" height="175" src="img/dml_event_clause.gif" alt="Description of dml_event_clause.gif follows" /><br />
<a id="sthref1356" href="img_text/dml_event_clause.htm">Description of the illustration dml_event_clause.gif</a><br />
<br />
<p class="subhead2"><a id="BABEBAAB"></a><a id="LNPLS1550"></a><span class="italic">referencing_clause</span> ::=</p>
<img width="409" height="162" src="img/referencing_clause.gif" alt="Description of referencing_clause.gif follows" /><br />
<a id="sthref1357" href="img_text/referencing_clause.htm">Description of the illustration referencing_clause.gif</a><br />
<br />
<p class="subhead2"><a id="CJABEJEA"></a><a id="LNPLS1547"></a><span class="italic">trigger_edition_clause</span> ::=</p>
<img width="294" height="79" src="img/trigger_edition_clause.gif" alt="Description of trigger_edition_clause.gif follows" /><br />
<a id="sthref1358" href="img_text/trigger_edition_clause.htm">Description of the illustration trigger_edition_clause.gif</a><br />
<br />
<p class="subhead2"><a id="CJAEJAFB"></a><a id="LNPLS1548"></a><span class="italic">trigger_ordering_clause</span> ::=</p>
<img width="369" height="95" src="img/trigger_ordering_clause.gif" alt="Description of trigger_ordering_clause.gif follows" /><br />
<a id="sthref1359" href="img_text/trigger_ordering_clause.htm">Description of the illustration trigger_ordering_clause.gif</a><br />
<br />
<p class="subhead2"><a id="CJAJBHAA"></a><a id="LNPLS1546"></a><span class="italic">trigger_body</span> ::=</p>
<img width="204" height="58" src="img/trigger_body.gif" alt="Description of trigger_body.gif follows" /><br />
<a id="sthref1360" href="img_text/trigger_body.htm">Description of the illustration trigger_body.gif</a><br />
<br />
<p>See:</p>
<ul>
<li>
<p><a href="block.htm#CJACBIJG">"<span class="italic">plsql_block</span> ::="</a></p>
</li>
<li>
<p><code dir="ltr"><span class="codeinlineitalic">routine_clause</span></code> in <a class="olink SQLRF01108" href="../../server.112/e41084/statements_4008.htm#SQLRF01108"><span class="italic">Oracle Database SQL Language Reference</span></a></p>
</li>
</ul>
<p class="subhead2"><a id="CJACFCDJ"></a><a id="LNPLS1551"></a><span class="italic">compound_trigger_block</span> ::=</p>
<img width="680" height="46" src="img/compound_trigger_block.gif" alt="Description of compound_trigger_block.gif follows" /><br />
<a id="sthref1361" href="img_text/compound_trigger_block.htm">Description of the illustration compound_trigger_block.gif</a><br />
<br />
<p>See <a href="block.htm#CJAIABJJ">"<span class="italic">declare_section</span> ::="</a>.</p>
<p class="subhead2"><a id="LNPLS1552"></a><span class="italic">timing_point_section</span> ::=</p>
<img width="435" height="27" src="img/timing_point_section.gif" alt="Description of timing_point_section.gif follows" /><br />
<a id="sthref1362" href="img_text/timing_point_section.htm">Description of the illustration timing_point_section.gif</a><br />
<br />
<p class="subhead2"><a id="LNPLS1963"></a><span class="italic">timing_point</span> ::=</p>
<img width="279" height="156" src="img/timing_point.gif" alt="Description of timing_point.gif follows" /><br />
<a id="sthref1363" href="img_text/timing_point.htm">Description of the illustration timing_point.gif</a><br />
<br />
<p class="subhead2"><a id="LNPLS1553"></a><span class="italic">tps_body</span> ::=</p>
<img width="569" height="91" src="img/tps_body.gif" alt="Description of tps_body.gif follows" /><br />
<a id="sthref1364" href="img_text/tps_body.htm">Description of the illustration tps_body.gif</a><br />
<br />
<p>See:</p>
<ul>
<li>
<p><a href="exception_handler.htm#CJAEIGAB">"<span class="italic">exception_handler</span> ::="</a></p>
</li>
<li>
<p><a href="block.htm#CJADJGJE">"<span class="italic">pragma</span> ::="</a></p>
</li>
<li>
<p><a href="block.htm#CJACJBCH">"<span class="italic">statement</span> ::="</a></p>
</li>
</ul>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="CIHEJCFA"></a>Semantics</p>
<p class="subhead2"><a id="LNPLS1974"></a>OR REPLACE</p>
<p>Re-creates the trigger if it exists, and recompiles it.</p>
<p>Users who were granted privileges on the trigger before it was redefined can still access the procedure without being regranted the privileges.</p>
<p class="subhead2"><a id="LNPLS1975"></a><span class="italic">schema</span></p>
<p>Name of the schema for the trigger to be created. <span class="bold">Default:</span> your schema.</p>
<p class="subhead2"><a id="LNPLS1976"></a><span class="italic">trigger</span></p>
<p>Name of the trigger to be created.</p>
<p>Triggers in the same schema cannot have the same names. Triggers can have the same names as other schema objects&mdash;for example, a table and a trigger can have the same name&mdash;however, to avoid confusion, this is not recommended.</p>
<p>If a trigger produces compilation errors, then it is still created, but it fails on execution. A trigger that fails on execution effectively blocks all triggering DML statements until it is disabled, replaced by a version without compilation errors, or dropped. You can see the associated compiler error messages with the SQL*Plus command <code dir="ltr">SHOW</code> <code dir="ltr">ERRORS</code>.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
If you create a trigger on a base table of a materialized view, then you must ensure that the trigger does not fire during a refresh of the materialized view. During refresh, the <code dir="ltr">DBMS_MVIEW</code> procedure <code dir="ltr">I_AM_A_REFRESH</code> returns <code dir="ltr">TRUE</code>.</div>
<p><a id="LNPLS1977"></a><span class="subhead3">Restrictions on <span class="italic">create_trigger</span>&nbsp;</span>See <a href="triggers.htm#g1042050">"Trigger Restrictions"</a>.</p>
<p class="subhead2"><a id="LNPLS1978"></a><span class="italic">simple_dml_trigger</span></p>
<p>Creates a simple DML trigger (described in <a href="triggers.htm#CIHEHBEB">"DML Triggers"</a>).</p>
<p class="subhead2"><a id="LNPLS1979"></a>BEFORE</p>
<p>Causes the database to fire the trigger before running the triggering event. For row triggers, the trigger fires before each affected row is changed.</p>
<p><a id="LNPLS1980"></a><span class="subhead3">Restrictions on BEFORE&nbsp;</span></p>
<ul>
<li>
<p>You cannot specify a <code dir="ltr">BEFORE</code> trigger on a view unless it is an editioning view.</p>
</li>
<li>
<p>In a <code dir="ltr">BEFORE</code> statement trigger, the trigger body cannot read <code dir="ltr">:NEW</code> or <code dir="ltr">:OLD</code>. (In a <code dir="ltr">BEFORE</code> row trigger, the trigger body can read and write the <code dir="ltr">:OLD</code> and <code dir="ltr">:NEW</code> fields.)</p>
</li>
</ul>
<p class="subhead2"><a id="LNPLS1981"></a>AFTER</p>
<p>Causes the database to fire the trigger after running the triggering event. For row triggers, the trigger fires after each affected row is changed.</p>
<p><a id="LNPLS1982"></a><span class="subhead3">Restrictions on AFTER&nbsp;</span></p>
<ul>
<li>
<p>You cannot specify an <code dir="ltr">AFTER</code> trigger on a view unless it is an editioning view.</p>
</li>
<li>
<p>In an <code dir="ltr">AFTER</code> statement trigger, the trigger body cannot read <code dir="ltr">:NEW</code> or <code dir="ltr">:OLD</code>. (In an <code dir="ltr">AFTER</code> row trigger, the trigger body can read but not write the <code dir="ltr">:OLD</code> and <code dir="ltr">:NEW</code> fields.)</p>
</li>
</ul>
<div class="infobox-note">
<p class="notep1">Note:</p>
When you create a materialized view log for a table, the database implicitly creates an <code dir="ltr">AFTER</code> row trigger on the table. This trigger inserts a row into the materialized view log whenever an <code dir="ltr">INSERT</code>, <code dir="ltr">UPDATE</code>, or <code dir="ltr">DELETE</code> statement modifies data in the master table. You cannot control the order in which multiple row triggers fire. Therefore, do not write triggers intended to affect the content of the <a id="sthref1365"></a><a id="sthref1366"></a><a id="sthref1367"></a>materialized view.</div>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a class="olink SQLRF01303" href="../../server.112/e41084/statements_6003.htm#SQLRF01303"><span class="italic">Oracle Database SQL Language Reference</span></a> for more information about materialized view logs</p>
</li>
<li>
<p><a class="olink ADFNS0202" href="../../appdev.112/e41502/adfns_editions.htm#ADFNS0202"><span class="italic">Oracle Database Advanced Application Developer's Guide</span></a> for information about editioning views</p>
</li>
</ul>
</div>
<p class="subhead2"><a id="LNPLS1983"></a>FOR EACH ROW</p>
<p>Creates the trigger as a row trigger. The database fires a row trigger for each row that is affected by the triggering statement and meets the optional trigger constraint defined in the <code dir="ltr">WHEN</code> condition.</p>
<p>If you omit this clause, then the trigger is a statement trigger. The database fires a statement trigger only when the triggering statement is issued if the optional trigger constraint is met.</p>
<p class="subhead2"><a id="LNPLS1984"></a>[ ENABLE | DISABLE ]</p>
<p>Creates the trigger in an enabled (default) or disabled state. Creating a trigger in a disabled state lets you ensure that the trigger compiles without errors before you enable it.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
<code dir="ltr">DISABLE</code> is especially useful if you are creating a crossedition trigger, which affects the online application being redefined if compilation errors occur.</div>
<p class="subhead2"><a id="CIHBJHFE"></a><a id="LNPLS1985"></a>WHEN (<span class="italic">condition</span>)</p>
<p>Specifies a SQL condition that the database evaluates for each row that the triggering statement affects. If the value of <code dir="ltr"><span class="codeinlineitalic">condition</span></code> is <code dir="ltr">TRUE</code> for an affected row, then <code dir="ltr"><span class="codeinlineitalic">trigger_body</span></code> runs for that row; otherwise, <code dir="ltr"><span class="codeinlineitalic">trigger_body</span></code> does not run for that row. The triggering statement runs regardless of the value of <code dir="ltr"><span class="codeinlineitalic">condition</span></code>.</p>
<p>The <code dir="ltr"><span class="codeinlineitalic">condition</span></code> can contain correlation names (see <a href="#BABEBAAB">"<span class="italic">referencing_clause</span> ::="</a>). In <code dir="ltr"><span class="codeinlineitalic">condition</span></code>, do not put a colon (:) before the correlation name <code dir="ltr">NEW</code>, <code dir="ltr">OLD</code>, or <code dir="ltr">PARENT</code> (in this context, it is not a placeholder for a bind variable).</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink SQLRF005" href="../../server.112/e41084/conditions.htm#SQLRF005"><span class="italic">Oracle Database SQL Language Reference</span></a> for information about SQL conditions</div>
<p><a id="LNPLS1986"></a><span class="subhead3">Restrictions on WHEN (<span class="italic">condition</span>)&nbsp;</span></p>
<ul>
<li>
<p>If you specify this clause, then you must also specify <code dir="ltr">FOR</code> <code dir="ltr">EACH</code> <code dir="ltr">ROW</code>.</p>
</li>
<li>
<p>The <code dir="ltr"><span class="codeinlineitalic">condition</span></code> cannot include a subquery or a PL/SQL expression (for example, an invocation of a user-defined function).</p>
</li>
</ul>
<p class="subhead2"><a id="LNPLS1987"></a><span class="italic">trigger_body</span></p>
<p>The PL/SQL block or <code dir="ltr">CALL</code> subprogram that the database runs to fire the trigger. A <code dir="ltr">CALL</code> subprogram is either a PL/SQL subprogram or a Java subprogram in a PL/SQL wrapper.</p>
<p>If <code dir="ltr"><span class="codeinlineitalic">trigger_body</span></code> is a PL/SQL block and it contains errors, then the <code dir="ltr">CREATE</code> [<code dir="ltr">OR</code> <code dir="ltr">REPLACE</code>] statement fails.</p>
<p><a id="LNPLS1988"></a><span class="subhead3">Restriction on <span class="italic">trigger_body</span>&nbsp;</span>The <code dir="ltr"><span class="codeinlineitalic">declare_section</span></code> cannot declare variables of the data type <code dir="ltr">LONG</code> or <code dir="ltr">LONG</code> <code dir="ltr">RAW</code>.</p>
<p class="subhead2"><a id="LNPLS1989"></a><span class="italic">instead_of_dml_trigger</span></p>
<p>Creates an <code dir="ltr">INSTEAD</code> <code dir="ltr">OF</code> DML trigger (described in <a href="triggers.htm#i1006376">"INSTEAD OF DML Triggers"</a>).</p>
<p><a id="LNPLS1990"></a><span class="subhead3">Restriction on INSTEAD OF&nbsp;</span>An <code dir="ltr">INSTEAD</code> <code dir="ltr">OF</code> trigger can read the <code dir="ltr">:OLD</code> and <code dir="ltr">:NEW</code> values, but cannot change them.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
<ul>
<li>
<p>If the <a id="sthref1368"></a>view is inherently updatable and has <code dir="ltr">INSTEAD</code> <code dir="ltr">OF</code> triggers, the triggers take precedence: The database fires the triggers instead of performing DML on the view.</p>
</li>
<li>
<p>If the view belongs to a hierarchy, then the subviews do not inherit the trigger.</p>
</li>
<li>
<p>The <code dir="ltr">WITH</code> <code dir="ltr">CHECK</code> <code dir="ltr">OPTION</code> for views is not enforced when inserts or updates to the view are done using <code dir="ltr">INSTEAD</code> <code dir="ltr">OF</code> triggers. The <code dir="ltr">INSTEAD</code> <code dir="ltr">OF</code> trigger body must enforce the check. For information about <code dir="ltr">WITH</code> <code dir="ltr">CHECK</code> <code dir="ltr">OPTION</code>, see <a class="olink SQLRF54786" href="../../server.112/e41084/statements_8004.htm#SQLRF54786"><span class="italic">Oracle Database SQL Language Reference</span></a>.</p>
</li>
<li>
<p>The database fine-grained access control lets you define row-level security policies on views. These policies enforce specified rules in response to DML operations. If an <code dir="ltr">INSTEAD</code> <code dir="ltr">OF</code> trigger is also defined on the view, then the database does not enforce the row-level security policies, because the database fires the <code dir="ltr">INSTEAD</code> <code dir="ltr">OF</code> trigger instead of running the DML on the view.</p>
</li>
</ul>
</div>
<p class="subhead2"><a id="LNPLS1991"></a>DELETE</p>
<p>If the trigger is created on a noneditioning view, then <code dir="ltr">DELETE</code> causes the database to fire the trigger whenever a <code dir="ltr">DELETE</code> statement removes a row from the table on which the noneditioning view is defined.</p>
<p>If the trigger is created on a nested table column of a noneditioning view, then <code dir="ltr">DELETE</code> causes the database to fire the trigger whenever a <code dir="ltr">DELETE</code> statement removes an element from the nested table.</p>
<p class="subhead2"><a id="LNPLS1992"></a>INSERT</p>
<p>If the trigger is created on a noneditioning view, then <code dir="ltr">INSERT</code> causes the database to fire the trigger whenever an <code dir="ltr">INSERT</code> statement adds a row to the table on which the noneditioning view is defined.</p>
<p>If the trigger is created on a nested table column of a noneditioning view, then <code dir="ltr">INSERT</code> causes the database to fire the trigger whenever an <code dir="ltr">INSERT</code> statement adds an element to the nested table.</p>
<p class="subhead2"><a id="LNPLS1993"></a>UPDATE</p>
<p>If the trigger is created on a noneditioning view, then <code dir="ltr">UPDATE</code> causes the database to fire the trigger whenever an <code dir="ltr">UPDATE</code> statement changes a value in a column of the table on which the noneditioning view is defined.</p>
<p>If the trigger is created on a nested table column of a noneditioning view, then <code dir="ltr">UPDATE</code> causes the database to fire the trigger whenever an <code dir="ltr">UPDATE</code> statement changes a value in a column of the nested table.</p>
<p class="subhead2"><a id="LNPLS1994"></a><span class="italic">nested_table_column</span></p>
<p>Name of the <code dir="ltr"><span class="codeinlineitalic">nested_table_column</span></code> on which the trigger is to be created. The trigger fires only if the DML operates on the elements of the nested table. Performing DML operations directly on nested table columns does not cause the database to fire triggers defined on the table containing the nested table column. For more information, see <a href="triggers.htm#CIHGDJFJ">"INSTEAD OF Triggers on Nested Table Columns of Views"</a>.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<code dir="ltr">AS</code> <code dir="ltr"><span class="codeinlineitalic">subquery</span></code> clause of <a class="olink SQLRF01504" href="../../server.112/e41084/statements_8004.htm#SQLRF01504"><code dir="ltr">CREATE</code> <code dir="ltr">VIEW</code></a> in <span class="italic">Oracle Database SQL Language Reference</span> for a list of constructs that prevent inserts, updates, or deletes on a view</div>
<p class="subhead2"><a id="LNPLS1995"></a><span class="italic">schema</span></p>
<p>Name of the schema containing the noneditioning view. <span class="bold">Default:</span> your schema.</p>
<p class="subhead2"><a id="LNPLS1996"></a><span class="italic">noneditioning_view</span></p>
<p>If you specify <code dir="ltr"><span class="codeinlineitalic">nested_table_column</span></code>, then <code dir="ltr"><span class="codeinlineitalic">noneditioning_view</span></code> is the name of the noneditioning view that includes <code dir="ltr"><span class="codeinlineitalic">nested_table_column</span></code>. Otherwise, <code dir="ltr"><span class="codeinlineitalic">noneditioning_view</span></code> is the name of the noneditioning view on which the trigger is to be created.</p>
<p class="subhead2"><a id="LNPLS1997"></a>FOR EACH ROW</p>
<p>For documentation only, because an <code dir="ltr">INSTEAD</code> <code dir="ltr">OF</code> trigger is always a row trigger.</p>
<p class="subhead2"><a id="LNPLS1998"></a>ENABLE</p>
<p><span class="bold">(Default)</span> Creates the trigger in an enabled state.</p>
<p class="subhead2"><a id="LNPLS1999"></a>DISABLE</p>
<p>Creates the trigger in a disabled state, which lets you ensure that the trigger compiles without errors before you enable it.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
<code dir="ltr">DISABLE</code> is especially useful if you are creating a crossedition trigger, which affects the online application being redefined if compilation errors occur.</div>
<p class="subhead2"><a id="LNPLS2000"></a><span class="italic">trigger_body</span></p>
<p>The PL/SQL block or <code dir="ltr">CALL</code> subprogram that the database runs to fire the trigger. A <code dir="ltr">CALL</code> subprogram is either a PL/SQL subprogram or a Java subprogram in a PL/SQL wrapper.</p>
<p>If <code dir="ltr"><span class="codeinlineitalic">trigger_body</span></code> is a PL/SQL block and it contains errors, then the <code dir="ltr">CREATE</code> [<code dir="ltr">OR</code> <code dir="ltr">REPLACE</code>] statement fails.</p>
<p><a id="LNPLS2003"></a><span class="subhead3">Restriction on <span class="italic">trigger_body</span>&nbsp;</span>The <code dir="ltr"><span class="codeinlineitalic">declare_section</span></code> cannot declare variables of the data type <code dir="ltr">LONG</code> or <code dir="ltr">LONG</code> <code dir="ltr">RAW</code>.</p>
<p class="subhead2"><a id="LNPLS2004"></a><span class="italic">compound_dml_trigger</span></p>
<p>Creates a compound DML trigger (described in <a href="triggers.htm#CIHEFGFD">"Compound DML Triggers"</a>).</p>
<p class="subhead2"><a id="LNPLS2006"></a>ENABLE</p>
<p><span class="bold">(Default)</span> Creates the trigger in an enabled state.</p>
<p class="subhead2"><a id="LNPLS2055"></a>DISABLE</p>
<p>Creates the trigger in a disabled state, which lets you ensure that the trigger compiles without errors before you enable it.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
<code dir="ltr">DISABLE</code> is especially useful if you are creating a crossedition trigger, which affects the online application being redefined if compilation errors occur.</div>
<p class="subhead2"><a id="LNPLS2056"></a>WHEN (<span class="italic">condition</span>)</p>
<p>Specifies a SQL condition that the database evaluates for each row that the triggering statement affects. If the value of <code dir="ltr"><span class="codeinlineitalic">condition</span></code> is <code dir="ltr">TRUE</code> for an affected row, then <code dir="ltr"><span class="codeinlineitalic">tps_body</span></code> runs for that row; otherwise, <code dir="ltr"><span class="codeinlineitalic">tps_body</span></code> does not run for that row. The triggering statement runs regardless of the value of <code dir="ltr"><span class="codeinlineitalic">condition</span></code>.</p>
<p>The <code dir="ltr"><span class="codeinlineitalic">condition</span></code> can contain correlation names (see <a href="#BABEBAAB">"<span class="italic">referencing_clause</span> ::="</a>). In <code dir="ltr"><span class="codeinlineitalic">condition</span></code>, do not put a colon (:) before the correlation name <code dir="ltr">NEW</code>, <code dir="ltr">OLD</code>, or <code dir="ltr">PARENT</code> (in this context, it is not a placeholder for a bind variable).</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink SQLRF005" href="../../server.112/e41084/conditions.htm#SQLRF005"><span class="italic">Oracle Database SQL Language Reference</span></a> for information about SQL conditions</div>
<p><a id="LNPLS2057"></a><span class="subhead3">Restrictions on WHEN (<span class="italic">condition</span>)&nbsp;</span></p>
<ul>
<li>
<p>If you specify this clause, then you must also specify at least one of these timing points:</p>
<ul>
<li>
<p><code dir="ltr">BEFORE</code> <code dir="ltr">EACH</code> <code dir="ltr">ROW</code></p>
</li>
<li>
<p><code dir="ltr">AFTER</code> <code dir="ltr">EACH</code> <code dir="ltr">ROW</code></p>
</li>
<li>
<p><code dir="ltr">INSTEAD</code> <code dir="ltr">OF</code> <code dir="ltr">EACH</code> <code dir="ltr">ROW</code></p>
</li>
</ul>
</li>
<li>
<p>The <code dir="ltr"><span class="codeinlineitalic">condition</span></code> cannot include a subquery or a PL/SQL expression (for example, an invocation of a user-defined function).</p>
</li>
</ul>
<p class="subhead2"><a id="LNPLS2058"></a><span class="italic">system_trigger</span></p>
<p>Defines a system trigger (described in <a href="triggers.htm#CIHEFBJA">"System Triggers"</a>).</p>
<p class="subhead2"><a id="LNPLS2059"></a>BEFORE</p>
<p>Causes the database to fire the trigger before running the triggering event.</p>
<p class="subhead2"><a id="LNPLS2060"></a>AFTER</p>
<p>Causes the database to fire the trigger after running the triggering event.</p>
<p class="subhead2"><a id="LNPLS2061"></a>INSTEAD OF</p>
<p>Creates an <code dir="ltr">INSTEAD</code> <code dir="ltr">OF</code> trigger.</p>
<p><a id="LNPLS2062"></a><span class="subhead3">Restriction on INSTEAD OF&nbsp;</span>The triggering event must be a <code dir="ltr">CREATE</code> statement.</p>
<p class="subhead2"><a id="CIHGCJHC"></a><a id="LNPLS2063"></a><span class="italic">ddl_event</span></p>
<p>One or more types of DDL SQL statements that can cause the trigger to fire. You can create triggers for these events on <code dir="ltr">DATABASE</code> or <code dir="ltr">SCHEMA</code> unless otherwise noted. You can create <code dir="ltr">BEFORE</code> and <code dir="ltr">AFTER</code> triggers for any of these events, but you can create <code dir="ltr">INSTEAD</code> <code dir="ltr">OF</code> triggers only for <code dir="ltr">CREATE</code> events.The database fires the trigger in the existing user transaction.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
Some objects are created, altered, and dropped using PL/SQL APIs (for example, scheduler jobs are maintained by subprograms in the <code dir="ltr">DBMS_SCHEDULER</code> package). Such PL/SQL subprograms do not fire DDL triggers.</div>
<p>The following <code dir="ltr"><span class="codeinlineitalic">ddl_event</span></code> values are valid:</p>
<ul>
<li>
<p><code dir="ltr">ALTER</code></p>
<p>Causes the database to fire the trigger whenever an <code dir="ltr">ALTER</code> statement modifies a database object in the data dictionary. An <code dir="ltr">ALTER</code> <code dir="ltr">DATABASE</code> statement does not fire the trigger.</p>
</li>
<li>
<p><code dir="ltr">ANALYZE</code></p>
<p>Causes the database to fire the trigger whenever the database collects or deletes statistics or validates the structure of a database object.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink SQLRF01105" href="../../server.112/e41084/statements_4005.htm#SQLRF01105"><span class="italic">Oracle Database SQL Language Reference</span></a> for information about using the SQL statement <code dir="ltr">ANALYZE</code> to collect statistics</div>
</li>
<li>
<p><code dir="ltr">ASSOCIATE</code> <code dir="ltr">STATISTICS</code></p>
<p>Causes the database to fire the trigger whenever the database associates a statistics type with a database object.</p>
</li>
<li>
<p><code dir="ltr">AUDIT</code></p>
<p>Causes the database to fire the trigger whenever an <code dir="ltr">AUDIT</code> statement is issued.</p>
</li>
<li>
<p><code dir="ltr">COMMENT</code></p>
<p>Causes the database to fire the trigger whenever a comment on a database object is added to the data dictionary.</p>
</li>
<li>
<p><code dir="ltr">CREATE</code></p>
<p>Causes the database to fire the trigger whenever a <code dir="ltr">CREATE</code> statement adds a database object to the data dictionary. The <code dir="ltr">CREATE</code> <code dir="ltr">DATABASE</code> or <code dir="ltr">CREATE</code> <code dir="ltr">CONTROLFILE</code> statement does not fire the trigger.</p>
</li>
<li>
<p><code dir="ltr">DISASSOCIATE</code> <code dir="ltr">STATISTICS</code></p>
<p>Causes the database to fire the trigger whenever the database disassociates a statistics type from a database object.</p>
</li>
<li>
<p><code dir="ltr">DROP</code></p>
<p>Causes the database to fire the trigger whenever a <code dir="ltr">DROP</code> statement removes a database object from the data dictionary.</p>
</li>
<li>
<p><code dir="ltr">GRANT</code></p>
<p>Causes the database to fire the trigger whenever a user grants system privileges or roles or object privileges to another user or to a role.</p>
</li>
<li>
<p><code dir="ltr">NOAUDIT</code></p>
<p>Causes the database to fire the trigger whenever a <code dir="ltr">NOAUDIT</code> statement is issued.</p>
</li>
<li>
<p><code dir="ltr">RENAME</code></p>
<p>Causes the database to fire the trigger whenever a <code dir="ltr">RENAME</code> statement changes the name of a database object.</p>
</li>
<li>
<p><code dir="ltr">REVOKE</code></p>
<p>Causes the database to fire the trigger whenever a <code dir="ltr">REVOKE</code> statement removes system privileges or roles or object privileges from a user or role.</p>
</li>
<li>
<p><code dir="ltr">TRUNCATE</code></p>
<p>Causes the database to fire the trigger whenever a <code dir="ltr">TRUNCATE</code> statement removes the rows from a table or cluster and resets its storage characteristics.</p>
</li>
<li>
<p><code dir="ltr">DDL</code></p>
<p>Causes the database to fire the trigger whenever any of the preceding DDL statements is issued.</p>
</li>
</ul>
<p class="subhead2"><a id="CIHFAEJC"></a><a id="LNPLS2064"></a><span class="italic">database_event</span></p>
<p>One of the following database events. You can create triggers for these events on either <code dir="ltr">DATABASE</code> or <code dir="ltr">SCHEMA</code> unless otherwise noted. Each database event is valid in either a <code dir="ltr">BEFORE</code> trigger or an <code dir="ltr">AFTER</code> trigger, but not both. For each of these triggering events, the database opens an autonomous transaction scope, fires the trigger, and commits any separate transaction (regardless of any existing user transaction).</p>
<ul>
<li>
<p><code dir="ltr">AFTER</code> <code dir="ltr">STARTUP</code></p>
<p>Causes the database to fire the trigger whenever the database is opened. This event is valid only with <code dir="ltr">DATABASE</code>, not with <code dir="ltr">SCHEMA</code>.</p>
</li>
<li>
<p><code dir="ltr">BEFORE</code> <code dir="ltr">SHUTDOWN</code></p>
<p>Causes the database to fire the trigger whenever an instance of the database is shut down. This event is valid only with <code dir="ltr">DATABASE</code>, not with <code dir="ltr">SCHEMA</code>.</p>
</li>
<li>
<p><code dir="ltr">AFTER</code> <code dir="ltr">DB_ROLE_CHANGE</code></p>
<p>In a Data Guard configuration, causes the database to fire the trigger whenever a role change occurs from standby to primary or from primary to standby. This event is valid only with <code dir="ltr">DATABASE</code>, not with <code dir="ltr">SCHEMA</code>.</p>
</li>
<li id="CIHHJGAJ">
<p><code dir="ltr">AFTER</code> <code dir="ltr">SERVERERROR</code></p>
<p>Causes the database to fire the trigger whenever both of these conditions are true:</p>
<ul>
<li>
<p>A server error message is logged.</p>
</li>
<li>
<p>Oracle relational database management system (RDBMS) determines that it is safe to fire error triggers.</p>
<p>Examples of when it is unsafe to fire error triggers include:</p>
<ul>
<li>
<p>RDBMS is starting up.</p>
</li>
<li>
<p>A critical error has occurred.</p>
</li>
</ul>
</li>
</ul>
</li>
<li>
<p><code dir="ltr">AFTER</code> <code dir="ltr">LOGON</code></p>
<p>Causes the database to fire the trigger whenever a client application logs onto the database.</p>
</li>
<li>
<p><code dir="ltr">BEFORE</code> <code dir="ltr">LOGOFF</code></p>
<p>Causes the database to fire the trigger whenever a client application logs off the database.</p>
</li>
<li>
<p><code dir="ltr">AFTER</code> <code dir="ltr">SUSPEND</code></p>
<p>Causes the database to fire the trigger whenever a server error causes a transaction to be suspended.</p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="triggers.htm#i1007895">"Triggers for Publishing Events"</a> for more information about responding to database events through triggers</div>
<p class="subhead2"><a id="LNPLS2065"></a>[<span class="italic">schema</span>.]SCHEMA</p>
<p>Defines the trigger on the specified schema. <span class="bold">Default:</span> current schema. The trigger fires whenever any user connected as the specified schema initiates the triggering event.</p>
<p class="subhead2"><a id="LNPLS2066"></a>DATABASE</p>
<p><code dir="ltr">DATABASE</code> defines the trigger on the root. The trigger fires whenever any user of the specified database or pluggable database initiates the triggering event.</p>
<p class="subhead2"><a id="LNPLS2067"></a>ENABLE</p>
<p><span class="bold">(Default)</span> Creates the trigger in an enabled state.</p>
<p class="subhead2"><a id="LNPLS2068"></a>DISABLE</p>
<p>Creates the trigger in a disabled state, which lets you ensure that the trigger compiles without errors before you enable it.</p>
<p class="subhead2"><a id="LNPLS2069"></a>WHEN (<span class="italic">condition</span>)</p>
<p>Specifies a SQL condition that the database evaluates. If the value of <code dir="ltr"><span class="codeinlineitalic">condition</span></code> is <code dir="ltr">TRUE</code>, then <code dir="ltr"><span class="codeinlineitalic">trigger_body</span></code> runs for that row; otherwise, <code dir="ltr"><span class="codeinlineitalic">trigger_body</span></code> does not run for that row. The triggering statement runs regardless of the value of <code dir="ltr"><span class="codeinlineitalic">condition</span></code>.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink SQLRF005" href="../../server.112/e41084/conditions.htm#SQLRF005"><span class="italic">Oracle Database SQL Language Reference</span></a> for information about SQL conditions</div>
<p><a id="LNPLS2070"></a><span class="subhead3">Restrictions on WHEN (<span class="italic">condition</span>)&nbsp;</span></p>
<ul>
<li>
<p>You cannot specify this clause for a <code dir="ltr">STARTUP</code>, <code dir="ltr">SHUTDOWN</code>, or <code dir="ltr">DB_ROLE_CHANGE</code> trigger.</p>
</li>
<li>
<p>If you specify this clause for a <code dir="ltr">SERVERERROR</code> trigger, then <code dir="ltr"><span class="codeinlineitalic">condition</span></code> must be <code dir="ltr">ERRNO</code> <code dir="ltr">=</code> <code dir="ltr"><span class="codeinlineitalic">error_code</span></code>.</p>
</li>
<li>
<p>The <code dir="ltr"><span class="codeinlineitalic">condition</span></code> cannot include a subquery, a PL/SQL expression (for example, an invocation of a user-defined function), or a correlation name.</p>
</li>
</ul>
<p class="subhead2"><a id="LNPLS2071"></a><span class="italic">trigger_body</span></p>
<p>The PL/SQL block or <code dir="ltr">CALL</code> subprogram that the database runs to fire the trigger. A <code dir="ltr">CALL</code> subprogram is either a PL/SQL subprogram or a Java subprogram in a PL/SQL wrapper.</p>
<p>If <code dir="ltr"><span class="codeinlineitalic">trigger_body</span></code> is a PL/SQL block and it contains errors, then the <code dir="ltr">CREATE</code> [<code dir="ltr">OR</code> <code dir="ltr">REPLACE</code>] statement fails.</p>
<p><a id="LNPLS2072"></a><span class="subhead3">Restrictions on <span class="italic">trigger_body</span>&nbsp;</span></p>
<ul>
<li>
<p>The <code dir="ltr"><span class="codeinlineitalic">declare_section</span></code> cannot declare variables of the data type <code dir="ltr">LONG</code> or <code dir="ltr">LONG</code> <code dir="ltr">RAW</code>.</p>
</li>
<li>
<p>The trigger body cannot specify either <code dir="ltr">:NEW</code> or <code dir="ltr">:OLD</code>.</p>
</li>
</ul>
<p class="subhead2"><a id="CIHBAGHF"></a><a id="LNPLS2073"></a><span class="italic">dml_event_clause</span></p>
<p>Specifies the triggering statements for <code dir="ltr"><span class="codeinlineitalic">simple_dml_trigger</span></code> or <code dir="ltr"><span class="codeinlineitalic">compound_dml_trigger</span></code>. The database fires the trigger in the existing user transaction.</p>
<p class="subhead2"><a id="LNPLS2074"></a>DELETE</p>
<p>Causes the database to fire the trigger whenever a <code dir="ltr">DELETE</code> statement removes a row from <code dir="ltr"><span class="codeinlineitalic">table</span></code> or the table on which <code dir="ltr"><span class="codeinlineitalic">view</span></code> is defined.</p>
<p class="subhead2"><a id="LNPLS2075"></a>INSERT</p>
<p>Causes the database to fire the trigger whenever an <code dir="ltr">INSERT</code> statement adds a row to <code dir="ltr"><span class="codeinlineitalic">table</span></code> or the table on which <code dir="ltr"><span class="codeinlineitalic">view</span></code> is defined.</p>
<p class="subhead2"><a id="LNPLS2076"></a>UPDATE [ OF <span class="italic">column</span> [, <span class="italic">column</span> ] ]</p>
<p>Causes the database to fire the trigger whenever an <code dir="ltr">UPDATE</code> statement changes a value in a specified column. <span class="bold">Default:</span> The database fires the trigger whenever an <code dir="ltr">UPDATE</code> statement changes a value in any column of <code dir="ltr"><span class="codeinlineitalic">table</span></code> or the table on which <code dir="ltr"><span class="codeinlineitalic">view</span></code> is defined.</p>
<p>If you specify a <code dir="ltr"><span class="codeinlineitalic">column</span></code>, then you cannot change its value in the body of the trigger.</p>
<p class="subhead2"><a id="LNPLS2077"></a><span class="italic">schema</span></p>
<p>Name of the schema that contains the database object on which the trigger is to be created. <span class="bold">Default:</span> your schema.</p>
<p class="subhead2"><a id="LNPLS2078"></a><span class="italic">table</span></p>
<p>Name of the database table or object table on which the trigger is to be created.</p>
<p><a id="LNPLS2079"></a><span class="subhead3">Restriction on <span class="italic">schema.table</span>&nbsp;</span>You cannot create a trigger on a table in the schema <code dir="ltr">SYS</code>.</p>
<p class="subhead2"><a id="LNPLS2080"></a><span class="italic">view</span></p>
<p>Name of the database view or object view on which the trigger is to be created.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
A compound DML trigger created on a noneditioning view is not really compound, because it has only one timing point section.</div>
<p class="subhead2"><a id="LNPLS2081"></a><span class="italic">referencing_clause</span></p>
<p>Specifies correlation names, which refer to old, new, and parent values of the current row. <span class="bold">Defaults:</span> <code dir="ltr">OLD</code>, <code dir="ltr">NEW</code>, and <code dir="ltr">PARENT</code>.</p>
<p>If your trigger is associated with a table named <code dir="ltr">OLD</code>, <code dir="ltr">NEW</code>, or <code dir="ltr">PARENT</code>, then use this clause to specify different correlation names to avoid confusion between the table names and the correlation names.</p>
<p>If the trigger is defined on a nested table, then <code dir="ltr">OLD</code> and <code dir="ltr">NEW</code> refer to the current row of the nested table, and <code dir="ltr">PARENT</code> refers to the current row of the parent table. If the trigger is defined on a database table or view, then <code dir="ltr">OLD</code> and <code dir="ltr">NEW</code> refer to the current row of the database table or view, and <code dir="ltr">PARENT</code> is undefined.</p>
<p><a id="LNPLS2082"></a><span class="subhead3">Restriction on <span class="italic">referencing_clause</span>&nbsp;</span>The <code dir="ltr"><span class="codeinlineitalic">referencing_clause</span></code> is not valid if <code dir="ltr"><span class="codeinlineitalic">trigger_body</span></code> is <code dir="ltr">CALL</code> <code dir="ltr"><span class="codeinlineitalic">routine</span></code>.</p>
<p class="subhead2"><a id="LNPLS2083"></a><span class="italic">trigger_edition_clause</span></p>
<p>Creates the trigger as a crossedition trigger.</p>
<p>The handling of DML changes during edition-based redefinition (EBR) of an online application can entail multiple steps. Therefore, it is likely, though not required, that a crossedition trigger is also a <span class="bold">compound trigger</span>.</p>
<p><a id="LNPLS2084"></a><span class="subhead3">Restriction on <span class="italic">trigger_edition_clause</span>&nbsp;</span>You cannot define a crossedition trigger on a view.</p>
<p class="subhead2"><a id="LNPLS2085"></a>FORWARD</p>
<p><span class="bold">(Default)</span> Creates the trigger as a forward crossedition trigger. A forward crossedition trigger is intended to fire when DML changes are made in a database while an online application that uses the database is being patched or upgraded with EBR. The body of a crossedition trigger is designed to handle these DML changes so that they can be appropriately applied after the changes to the application code are completed.</p>
<p class="subhead2"><a id="LNPLS2086"></a>REVERSE</p>
<p>Creates the trigger as a reverse crossedition trigger, which is intended to fire when the application, after being patched or upgraded with EBR, makes DML changes. This trigger propagates data to columns or tables used by the application before it was patched or upgraded.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink ADFNS0203" href="../../appdev.112/e41502/adfns_editions.htm#ADFNS0203"><span class="italic">Oracle Database Advanced Application Developer's Guide</span></a> for more information crossedition triggers</div>
<p class="subhead2"><a id="LNPLS2087"></a><span class="italic">trigger_ordering_clause</span></p>
<p class="subhead2"><a id="CIHEAGIF"></a><a id="LNPLS2088"></a>FOLLOWS | PRECEDES</p>
<p>Specifies the relative firing of triggers that have the same timing point. It is especially useful when creating crossedition triggers, which must fire in a specific order to achieve their purpose.</p>
<p>Use <code dir="ltr">FOLLOWS</code> to indicate that the trigger being created must fire after the specified triggers. You can specify <code dir="ltr">FOLLOWS</code> for a conventional trigger or for a forward crossedition trigger.</p>
<p>Use <code dir="ltr">PRECEDES</code> to indicate that the trigger being created must fire before the specified triggers. You can specify <code dir="ltr">PRECEDES</code> only for a reverse crossedition trigger.</p>
<p>The specified triggers must exist, and they must have been successfully compiled. They need not be enabled.</p>
<p>If you are creating a noncrossedition trigger, then the specified triggers must be all of the following:</p>
<ul>
<li>
<p>Noncrossedition triggers</p>
</li>
<li>
<p>Defined on the same table as the trigger being created</p>
</li>
<li>
<p>Visible in the same edition as the trigger being created</p>
</li>
</ul>
<p>If you are creating a crossedition trigger, then the specified triggers must be all of the following:</p>
<ul>
<li>
<p>Crossedition triggers</p>
</li>
<li>
<p>Defined on the same table or editioning view as the trigger being created, unless you specify <code dir="ltr">FOLLOWS</code> or <code dir="ltr">PRECEDES</code>.</p>
<p>If you specify <code dir="ltr">FOLLOWS</code>, then the specified triggers must be forward crossedition triggers, and if you specify <code dir="ltr">PRECEDES</code>, then the specified triggers must be reverse crossedition triggers. However, the specified triggers need not be on the same table or editioning view as the trigger being created.</p>
</li>
<li>
<p>Visible in the same edition as the trigger being created</p>
</li>
</ul>
<p>In the following definitions, A, B, C, and D are either noncrossedition triggers or forward crossedition triggers:</p>
<ul>
<li>
<p>If B specifies A in its <code dir="ltr">FOLLOWS</code> clause, then B <span class="bold">directly follows</span> A.</p>
</li>
<li>
<p>If C directly follows B, and B directly follows A, then C <span class="bold">indirectly follows</span> A.</p>
</li>
<li>
<p>If D directly follows C, and C indirectly follows A, then D indirectly follows A.</p>
</li>
<li>
<p>If B directly or indirectly follows A, then B <span class="bold">explicitly follows</span> A (that is, the firing order of B and A is explicitly specified by one or more <code dir="ltr">FOLLOWS</code> clauses).</p>
</li>
</ul>
<p>In the following definitions, A, B, C, and D are reverse crossedition triggers:</p>
<ul>
<li>
<p>If A specifies B in its <code dir="ltr">PRECEDES</code> clause, then A <span class="bold">directly precedes</span> B.</p>
</li>
<li>
<p>If A directly precedes B, and B directly precedes C, then A <span class="bold">indirectly precedes</span> C.</p>
</li>
<li>
<p>If A directly precedes B, and B indirectly precedes D, then A indirectly precedes D.</p>
</li>
<li>
<p>If A directly or indirectly precedes B, then A <span class="bold">explicitly precedes</span> B (that is, the firing order of A and B is explicitly specified by one or more <code dir="ltr">PRECEDES</code> clauses).</p>
</li>
</ul>
<p class="subhead2"><a id="LNPLS2089"></a><span class="italic">compound_trigger_block</span></p>
<p>Belongs to <code dir="ltr"><span class="codeinlineitalic">compound_dml_trigger</span></code>.</p>
<p>If the trigger is created on a noneditioning view, then <code dir="ltr"><span class="codeinlineitalic">compound_trigger_block</span></code> must have only the <code dir="ltr">INSTEAD</code> <code dir="ltr">OF</code> <code dir="ltr">EACH</code> <code dir="ltr">ROW</code> section.</p>
<p>If the trigger is created on a table or editioning view, then timing point sections can be in any order, but no section can be repeated. The <code dir="ltr"><span class="codeinlineitalic">compound_trigger_block</span></code> cannot have an <code dir="ltr">INSTEAD</code> <code dir="ltr">OF</code> <code dir="ltr">EACH</code> <code dir="ltr">ROW</code> section.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="triggers.htm#CIHJBEFE">"Compound DML Trigger Structure"</a></div>
<p><a id="LNPLS2090"></a><span class="subhead3">Restriction on <span class="italic">compound_trigger_block</span>&nbsp;</span>The <code dir="ltr"><span class="codeinlineitalic">declare_section</span></code> of <code dir="ltr"><span class="codeinlineitalic">compound_trigger_block</span></code> cannot include <code dir="ltr">PRAGMA</code> <code dir="ltr">AUTONOMOUS_TRANSACTION</code>.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="triggers.htm#CIHIEFAE">"Compound DML Trigger Restrictions"</a></div>
<p class="subhead2"><a id="LNPLS2091"></a>BEFORE STATEMENT</p>
<p>Specifies the <code dir="ltr">BEFORE</code> <code dir="ltr">STATEMENT</code> section of a <code dir="ltr"><span class="codeinlineitalic">compound_dml_trigger</span></code> on a table or editioning view. This section causes the database to fire the trigger before running the triggering event.</p>
<p><a id="LNPLS2092"></a><span class="subhead3">Restriction on BEFORE STATEMENT&nbsp;</span>This section cannot specify <code dir="ltr">:NEW</code> or <code dir="ltr">:OLD</code>.</p>
<p class="subhead2"><a id="LNPLS2093"></a>BEFORE EACH ROW</p>
<p>Specifies the <code dir="ltr">BEFORE</code> <code dir="ltr">EACH</code> <code dir="ltr">ROW</code> section of a <code dir="ltr"><span class="codeinlineitalic">compound_dml_trigger</span></code> on a table or editioning view. This section causes the database to fire the trigger before running the triggering event. The trigger fires before each affected row is changed.</p>
<p>This section can read and write the <code dir="ltr">:OLD</code> and <code dir="ltr">:NEW</code> fields.</p>
<p class="subhead2"><a id="LNPLS2094"></a>AFTER STATEMENT</p>
<p>Specifies the <code dir="ltr">AFTER</code> <code dir="ltr">STATEMENT</code> section of <code dir="ltr"><span class="codeinlineitalic">compound_dml_trigger</span></code> on a table or editioning view. This section causes the database to fire the trigger after running the triggering event.</p>
<p><a id="LNPLS2095"></a><span class="subhead3">Restriction on AFTER STATEMENT&nbsp;</span>This section cannot specify <code dir="ltr">:NEW</code> or <code dir="ltr">:OLD</code>.</p>
<p class="subhead2"><a id="LNPLS2096"></a>AFTER EACH ROW</p>
<p>Specifies the <code dir="ltr">AFTER</code> <code dir="ltr">EACH</code> <code dir="ltr">ROW</code> section of a <code dir="ltr"><span class="codeinlineitalic">compound_dml_trigger</span></code> on a table or editioning view. This section causes the database to fire the trigger after running the triggering event. The trigger fires after each affected row is changed.</p>
<p>This section can read but not write the <code dir="ltr">:OLD</code> and <code dir="ltr">:NEW</code> fields.</p>
<p class="subhead2"><a id="LNPLS2097"></a>INSTEAD OF EACH ROW</p>
<p>Specifies the <code dir="ltr">INSTEAD</code> <code dir="ltr">OF</code> <code dir="ltr">EACH</code> <code dir="ltr">ROW</code> section (the only timing point section) of a <code dir="ltr"><span class="codeinlineitalic">compound_dml_trigger</span></code> on a noneditioning view. The database runs <code dir="ltr"><span class="codeinlineitalic">tps_body</span></code> instead of running the triggering DML statement. For more information, see <a href="triggers.htm#i1006376">"INSTEAD OF DML Triggers"</a>.</p>
<p><a id="LNPLS2098"></a><span class="subhead3">Restriction on INSTEAD OF EACH ROW&nbsp;</span></p>
<ul>
<li>
<p>This section can appear only in a <code dir="ltr"><span class="codeinlineitalic">compound_dml_trigger</span></code> on a noneditioning view.</p>
</li>
<li>
<p>This section can read but not write the <code dir="ltr">:OLD</code> and <code dir="ltr">:NEW</code> values.</p>
</li>
</ul>
<p class="subhead2"><a id="LNPLS2099"></a><span class="italic">tps_body</span></p>
<p>The PL/SQL block or <code dir="ltr">CALL</code> subprogram that the database runs to fire the trigger. A <code dir="ltr">CALL</code> subprogram is either a PL/SQL subprogram or a Java subprogram in a PL/SQL wrapper.</p>
<p>If <code dir="ltr"><span class="codeinlineitalic">tps_body</span></code> is a PL/SQL block and it contains errors, then the <code dir="ltr">CREATE</code> [<code dir="ltr">OR</code> <code dir="ltr">REPLACE</code>] statement fails.</p>
<p><a id="LNPLS2100"></a><span class="subhead3">Restriction on <span class="italic">tps_body</span>&nbsp;</span>The <code dir="ltr"><span class="codeinlineitalic">declare_section</span></code> cannot declare variables of the data type <code dir="ltr">LONG</code> or <code dir="ltr">LONG</code> <code dir="ltr">RAW</code>.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="CIHBCBEI"></a>Examples</p>
<p class="subhead2"><a id="sthref1369"></a>Simple DML Triggers</p>
<ul>
<li>
<p><a href="triggers.htm#CIHBCDJH">Example 9-1, "Trigger Uses Conditional Predicates to Detect Triggering Statement"</a></p>
</li>
<li>
<p><a href="triggers.htm#BCFBDJEC">Example 9-2, "Trigger Logs Changes to EMPLOYEES.SALARY"</a></p>
</li>
<li>
<p><a href="triggers.htm#CIHHEJCD">Example 9-3, "Conditional Trigger Prints Salary Change Information"</a></p>
</li>
<li>
<p><a href="triggers.htm#BCFJDBEH">Example 9-4, "Trigger Modifies LOB Columns"</a></p>
</li>
<li>
<p><a href="triggers.htm#BCFIAABG">Example 9-5, "Trigger with REFERENCING Clause"</a></p>
</li>
<li>
<p><a href="triggers.htm#BCFFIBBA">Example 9-6, "Trigger References OBJECT_VALUE Pseudocolumn"</a></p>
</li>
</ul>
<p class="subhead2"><a id="sthref1370"></a>INSTEAD OF DML Triggers</p>
<ul>
<li>
<p><a href="triggers.htm#CIHFGDJG">Example 9-7, "INSTEAD OF Trigger"</a></p>
</li>
<li>
<p><a href="triggers.htm#CIHFBGDC">Example 9-8, "INSTEAD OF Trigger on Nested Table Column of View"</a></p>
</li>
</ul>
<p class="subhead2"><a id="sthref1371"></a>Compound DML Triggers</p>
<ul>
<li>
<p><a href="triggers.htm#CIHGJFAB">Example 9-9, "Compound Trigger Logs Changes to One Table in Another Table"</a></p>
</li>
<li>
<p><a href="triggers.htm#CHDFGDAH">Example 9-10, "Compound Trigger Avoids Mutating-Table Error"</a></p>
</li>
</ul>
<p class="subhead2"><a id="sthref1372"></a>Triggers for Ensuring Referential Integrity</p>
<ul>
<li>
<p><a href="triggers.htm#BCFGAHIB">Example 9-11, "Foreign Key Trigger for Child Table"</a></p>
</li>
<li>
<p><a href="triggers.htm#BCFCCBAF">Example 9-12, "UPDATE and DELETE RESTRICT Trigger for Parent Table"</a></p>
</li>
<li>
<p><a href="triggers.htm#BCFBGFDJ">Example 9-13, "UPDATE and DELETE SET NULL Trigger for Parent Table"</a></p>
</li>
<li>
<p><a href="triggers.htm#BCFHHHBD">Example 9-14, "DELETE CASCADE Trigger for Parent Table"</a></p>
</li>
<li>
<p><a href="triggers.htm#BCFDBJDA">Example 9-15, "UPDATE CASCADE Trigger for Parent Table"</a></p>
</li>
<li>
<p><a href="triggers.htm#BCFECGBI">Example 9-16, "Trigger Checks Complex Constraints"</a></p>
</li>
<li>
<p><a href="triggers.htm#BCFGEBAA">Example 9-17, "Trigger Enforces Security Authorizations"</a></p>
</li>
<li>
<p><a href="triggers.htm#BCFDEHHE">Example 9-18, "Trigger Derives New Column Values"</a></p>
</li>
</ul>
<p class="subhead2"><a id="sthref1373"></a>System Triggers</p>
<ul>
<li>
<p><a href="triggers.htm#CIHFGGEH">Example 9-19, "BEFORE Statement Trigger on Sample Schema HR"</a></p>
</li>
<li>
<p><a href="triggers.htm#CIHEBJDD">Example 9-20, "AFTER Statement Trigger on Database"</a></p>
</li>
<li>
<p><a href="triggers.htm#CIHEFABC">Example 9-21, "Trigger Monitors Logons"</a></p>
</li>
<li>
<p><a href="triggers.htm#CIHGIHFA">Example 9-22, "INSTEAD OF CREATE Trigger on Schema"</a></p>
</li>
</ul>
<p class="subhead2"><a id="sthref1374"></a>Miscellaneous Trigger Examples</p>
<ul>
<li>
<p><a href="triggers.htm#CIHGEEIC">Example 9-23, "Trigger Invokes Java Subprogram"</a></p>
</li>
<li>
<p><a href="triggers.htm#BCFDBDJH">Example 9-24, "Trigger Cannot Handle Exception if Remote Database is Unavailable"</a></p>
</li>
<li>
<p><a href="triggers.htm#BCFEHHDA">Example 9-25, "Workaround for "</a></p>
</li>
<li>
<p><a href="triggers.htm#BCFHJBBE">Example 9-26, "Trigger Causes Mutating-Table Error"</a></p>
</li>
<li>
<p><a href="triggers.htm#BCFEFDIA">Example 9-27, "Update Cascade"</a></p>
</li>
<li>
<p><a href="triggers.htm#BCFHCBGE">Example 9-28, "Viewing Information About Triggers"</a></p>
</li>
</ul>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="BABCHGAE"></a>Related Topics</p>
<p class="subhead2"><a id="LNPLS2009"></a>In this chapter:</p>
<ul>
<li>
<p><a href="alter_trigger.htm#BABFDCBJ">"ALTER TRIGGER Statement"</a></p>
</li>
<li>
<p><a href="drop_trigger.htm#CJAEFCHJ">"DROP TRIGGER Statement"</a></p>
</li>
</ul>
<p class="subhead2"><a id="LNPLS2010"></a>In other chapters:</p>
<ul>
<li>
<p><a href="triggers.htm#g1043102">Chapter 9, "PL/SQL Triggers"</a></p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink ADFNS0203" href="../../appdev.112/e41502/adfns_editions.htm#ADFNS0203"><span class="italic">Oracle Database Advanced Application Developer's Guide</span></a> for more information about crossedition triggers</div>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment1082">
<tr>
<td class="cellalignment1091">
<table class="cellalignment1087">
<tr>
<td class="cellalignment1086"><a href="create_procedure.htm"><img width="24" height="24" src="../../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment1086"><a href="create_type.htm"><img width="24" height="24" src="../../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;1996, 2014,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment1094">
<table class="cellalignment1085">
<tr>
<td class="cellalignment1086"><a href="../../index.htm"><img width="24" height="24" src="../../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment1086"><a href="../../nav/portal_booklist.htm"><img width="24" height="24" src="../../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment1086"><a href="toc.htm"><img width="24" height="24" src="../../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment1086"><a href="index.htm"><img width="24" height="24" src="../../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment1086"><a href="../../nav/mindx.htm"><img width="24" height="24" src="../../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment1086"><a href="../../dcommon/html/feedback.htm"><img width="24" height="24" src="../../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>
</body>
</html>
