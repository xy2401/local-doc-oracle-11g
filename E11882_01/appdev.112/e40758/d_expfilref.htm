<!DOCTYPE html>
<html lang="en" >
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1">
<meta charset="utf-8">
<title>DBMS_EXPFIL</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Version 5.1.2 Build 737" />
<meta name="dcterms.created" content="2013-07-19T18:55:14Z" />
<meta name="robots" content="all" />
<meta name="dcterms.title" content="Database PL/SQL Packages and Types Reference" />
<meta name="dcterms.identifier" content="E40758-03" />
<meta name="dcterms.isVersionOf" content="ARPLS" />
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;1996, 2013,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved." />
<link rel="Start" href="../../index.htm" title="Home" type="text/html" />
<link rel="Copyright" href="../../dcommon/html/cpyr.htm" title="Copyright" type="text/html" />

<script type="application/javascript"  src="../../dcommon/js/headfoot.js"></script>
<script type="application/javascript"  src="../../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html" />
<link rel="Index" href="index.htm" title="Index" type="text/html" />
<link rel="Prev" href="d_errlog.htm" title="Previous" type="text/html" />
<link rel="Next" href="d_fga.htm" title="Next" type="text/html" />
<link rel="alternate" href="../e40758.pdf" title="PDF version" type="application/pdf" />
<link rel="schema.dcterms" href="http://purl.org/dc/terms/" />
<link rel="stylesheet" href="../../dcommon/css/fusiondoc.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/header.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/footer.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/fonts.css">
<link rel="stylesheet" href="../../dcommon/css/foundation.css">
<link rel="stylesheet" href="../../dcommon/css/codemirror.css">
<link rel="stylesheet" type="text/css" title="Default" href="../../nav/css/html5.css">
<link rel="stylesheet" href="../../dcommon/css/respond-480-tablet.css">
<link rel="stylesheet" href="../../dcommon/css/respond-768-laptop.css">
<link rel="stylesheet" href="../../dcommon/css/respond-1140-deskop.css">
<script type="application/javascript" src="../../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">69/265</span> <!-- End Header -->
<div id="ARPLS465" class="chapter"><a id="CACFCDGC"></a>
<h1 class="chapter"><span class="secnum">65</span> DBMS_EXPFIL</h1>
<div class="infoboxnotewarn">
<p class="notep1">Note:</p>
<p class="warnsp">This functionality is deprecated with Oracle Database Release 11.2 and obsoleted with Release 12.1. For details regarding obsolescence, seeMy Oracle Support Note <a href="https://support.oracle.com/CSP/ui/flash.html#tab=KBHome%28page=KBHome&amp;id=%28%29%29,%28page=KBNavigator&amp;id=%28from=BOOKMARK&amp;bmDocType=DESUPPORT&amp;bmDocID=1244535.1&amp;bmDocDsrc=KB&amp;viewingMode=1143&amp;bmDocTitle=Obsolescence%20Notice:%20Rules%20Manager%20Feature%20of%20Oracle%20Database%29%29">ID 1244535.1</a></p>
</div>
<p>The <code>DBMS_EXPFIL</code> package<a id="sthref4267"></a><a id="sthref4268"></a> contains all the procedures used to manage attribute sets, expression sets, expression indexes, optimizer statistics, and privileges by Expression Filter.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink EXPRN" href="../e14919/toc.htm"><span class="italic">Oracle Database Rules Manager and Expression Filter Developer's Guide</span></a> for more information.</div>
<p>This chapter contains the following topics:</p>
<ul>
<li>
<p><a href="#CHDBJBIF">Using DBMS_EXPFIL</a></p>
</li>
<li>
<p><a href="#CHDDIDBD">Summary of Expression Filter Subprograms</a></p>
</li>
</ul>
<div class="refentry"><a id="CHDBJBIF"></a>
<hr />
<div id="ARPLS73356" class="refsect1"><!-- infolevel="all" infotype="General" -->
<h2 class="refsect1">Using DBMS_EXPFIL</h2>
<p>This section contains topics that relate to using the Rules Manager <code>DBMS_EXPFIL</code> package.</p>
<ul>
<li>
<p><a href="#CHDFAFDC">Security Model</a></p>
</li>
</ul>
<div id="ARPLS73357" class="refsect2"><a id="CHDFAFDC"></a>
<hr />
<h3 class="refsect2">Security Model</h3>
<p>The Oracle Database installation runs the <code>catexf.sql</code> script to load the <code>DBMS_EXPFIL</code> package and create the required Expression Filter schema objects in the <code>EXFSYS</code> schema.</p>
<p><code>DBMS_EXPFIL</code> is an <code>EXFSYS</code>-owned package compiled with <code>AUTHID CURRENT_USER</code>. Any <code>DBMS_EXPFIL</code> subprogram called from an anonymous PL/SQL block is run using the privileges of the current user.</p>
<p>Before you issue <code>COPY_ATTRIBUTE_SET</code> procedure, the user must have the <code>EXECUTE</code> privilege for the object type associated with the original attribute set.</p>
<p>A user requires <code>SELECT</code> privileges on a table storing expressions to evaluate them. The <code>SQL EVALUATE</code> operator evaluates expressions with the privileges of the owner of the table that stores the expressions. The privileges of the user issuing the query are not considered. The owner of the table can insert, update, and delete expressions. Other users must have <code>INSERT</code> and <code>UPDATE</code> privileges for the table and <code>INSERT EXPRESSION</code> and <code>UPDATE EXPRESSION</code> privilege for a specific Expression column in the table to be able to make modifications to it.</p>
<p>Using the <code>GRANT_PRIVILEGE</code> procedure, the owner of the table can grant <code>INSERT EXPRESSION</code> or <code>UPDATE EXPRESSION</code> privileges on one or more Expression columns to other users. Both privileges can be granted to a user by specifying <code>ALL</code> for the privilege type.</p>
<p>A user with <code>CREATE INDEX</code> privileges on a table cannot create an Expression Filter index unless the user is the owner of the table.</p>
<p>A user must have <code>EXECUTE</code> privilege on the <code>CTX_DDL</code> package for successful synchronization of the text indexes using the <code>DBMS_EXPFIL.SYNC_TEXT_INDEXES</code> procedure.</p>
<p>The <code>USER_EXPFIL_PRIVILEGES</code> view lists the privileges of the current user on expression sets belonging to other schemas and the privileges of other users on the expression sets owned by the current user.</p>
</div>
<!-- class="refsect2" --></div>
<!-- class="refsect1" -->
<a id="CHDDIDBD"></a>
<hr />
<div id="ARPLS66326" class="refsect1"><!-- infolevel="all" infotype="General" -->
<h2 class="refsect1">Summary of Expression Filter Subprograms</h2>
<p><a href="#CJAIIEHA">Table 65-1</a> describes the subprograms in the <code>DBMS_EXPFIL</code> package.</p>
<p>All the values and names passed to the procedures defined in the <code>DBMS_EXPFIL</code> package are not case sensitive, unless otherwise mentioned. To preserve the case, you use double quotation marks around the values.</p>
<div id="ARPLS66327" class="tblformalwide">
<p class="titleintable"><a id="sthref4269"></a><a id="CJAIIEHA"></a>Table 65-1 DBMS_EXPFIL Package Subprograms</p>
<table class="cellalignment1226" title="DBMS_EXPFIL Package Subprograms" summary="This two column table (read from right to left) lists the name of the procedures in the DBMS_EXPFIL package and gives a description of the procedure." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t4">Subprogram</th>
<th class="cellalignment1227" id="r1c2-t4">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t4" headers="r1c1-t4">
<p><a href="#CHDIFDCC">ADD_ELEMENTARY_ATTRIBUTE Procedures</a></p>
</td>
<td class="cellalignment1228" headers="r2c1-t4 r1c2-t4">
<p>Adds the specified attribute to the attribute set</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t4" headers="r1c1-t4">
<p><a href="#CHDEBABD">ADD_FUNCTIONS Procedure</a></p>
</td>
<td class="cellalignment1228" headers="r3c1-t4 r1c2-t4">
<p>Adds a function, type, or package to the approved list of functions with an attribute set</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r4c1-t4" headers="r1c1-t4">
<p><a href="#CJAFAGID">ASSIGN_ATTRIBUTE_SET Procedure</a></p>
</td>
<td class="cellalignment1228" headers="r4c1-t4 r1c2-t4">
<p>Assigns an attribute set to a column storing expressions</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r5c1-t4" headers="r1c1-t4">
<p><a href="#CJADCEED">BUILD_EXCEPTIONS_TABLE Procedure</a></p>
</td>
<td class="cellalignment1228" headers="r5c1-t4 r1c2-t4">
<p>Creates an exception table to hold references to invalid expressions</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r6c1-t4" headers="r1c1-t4">
<p><a href="#BABHECFC">CLEAR_EXPRSET_STATS Procedure</a></p>
</td>
<td class="cellalignment1228" headers="r6c1-t4 r1c2-t4">
<p>Clears the predicate statistics for an expression set</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r7c1-t4" headers="r1c1-t4">
<p><a href="#CJACBAGI">COPY_ATTRIBUTE_SET Procedure</a></p>
</td>
<td class="cellalignment1228" headers="r7c1-t4 r1c2-t4">
<p>Makes a copy of the attribute set</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r8c1-t4" headers="r1c1-t4">
<p><a href="#CJAFFDBB">CREATE_ATTRIBUTE_SET Procedure</a></p>
</td>
<td class="cellalignment1228" headers="r8c1-t4 r1c2-t4">
<p>Creates an attribute set</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r9c1-t4" headers="r1c1-t4">
<p><a href="#CJAEHGAH">DEFAULT_INDEX_PARAMETERS Procedure</a></p>
</td>
<td class="cellalignment1228" headers="r9c1-t4 r1c2-t4">
<p>Assigns default index parameters to an attribute set</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r10c1-t4" headers="r1c1-t4">
<p><a href="#CJAIADEG">DEFAULT_XPINDEX_PARAMETERS Procedure</a></p>
</td>
<td class="cellalignment1228" headers="r10c1-t4 r1c2-t4">
<p>Assigns default XPath index parameters to an attribute set</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r11c1-t4" headers="r1c1-t4">
<p><a href="#CJAFJDEB">DEFRAG_INDEX Procedure</a></p>
</td>
<td class="cellalignment1228" headers="r11c1-t4 r1c2-t4">
<p>Rebuilds the bitmap indexes online to reduce fragmentation</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r12c1-t4" headers="r1c1-t4">
<p><a href="#CJAHJFAD">DROP_ATTRIBUTE_SET Procedure</a></p>
</td>
<td class="cellalignment1228" headers="r12c1-t4 r1c2-t4">
<p>Drops an unused attribute set</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r13c1-t4" headers="r1c1-t4">
<p><a href="#CIHIJFEE">GET_EXPRSET_STATS Procedure</a></p>
</td>
<td class="cellalignment1228" headers="r13c1-t4 r1c2-t4">
<p>Collects predicate statistics for an expression set</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r14c1-t4" headers="r1c1-t4">
<p><a href="#CJABDFBH">GRANT_PRIVILEGE Procedure</a></p>
</td>
<td class="cellalignment1228" headers="r14c1-t4 r1c2-t4">
<p>Grants an expression DML privilege to a user</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r15c1-t4" headers="r1c1-t4">
<p><a href="#CJAEGGHA">INDEX_PARAMETERS Procedure</a></p>
</td>
<td class="cellalignment1228" headers="r15c1-t4 r1c2-t4">
<p>Assigns index parameters to an expression set</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r16c1-t4" headers="r1c1-t4">
<p><a href="#CACFHJDG">MODIFY_OPERATOR_LIST Procedure</a></p>
</td>
<td class="cellalignment1228" headers="r16c1-t4 r1c2-t4">
<p>Modifies the list of common operators used in predicates with a certain attribute</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r17c1-t4" headers="r1c1-t4">
<p><a href="#CJABIGJJ">REVOKE_PRIVILEGE Procedure</a></p>
</td>
<td class="cellalignment1228" headers="r17c1-t4 r1c2-t4">
<p>Revokes an expression DML privilege from a user</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r18c1-t4" headers="r1c1-t4">
<p><a href="#CACIJHCE">SYNC_TEXT_INDEXES Procedure</a></p>
</td>
<td class="cellalignment1228" headers="r18c1-t4 r1c2-t4">
<p>Synchronizes the indexes defined to process the predicates involving the <code>CONTAINS</code> operator in stored expressions</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r19c1-t4" headers="r1c1-t4">
<p><a href="#CJADGDFB">UNASSIGN_ATTRIBUTE_SET Procedure</a></p>
</td>
<td class="cellalignment1228" headers="r19c1-t4 r1c2-t4">
<p>Breaks the association between a column storing expressions and the attribute set</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r20c1-t4" headers="r1c1-t4">
<p><a href="#CJAHCFCA">VALIDATE_EXPRESSIONS Procedure</a></p>
</td>
<td class="cellalignment1228" headers="r20c1-t4 r1c2-t4">
<p>Validates expression metadata and the expressions stored in a column</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r21c1-t4" headers="r1c1-t4">
<p><a href="#CJAJGJFE">XPINDEX_PARAMETERS Procedure</a></p>
</td>
<td class="cellalignment1228" headers="r21c1-t4 r1c2-t4">
<p>Assigns XPath index parameters to an expression set</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformalwide" -->
<div id="ARPLS157" class="refsect2"><a id="CHDIFDCC"></a>
<hr />
<h3 class="refsect2"><a id="sthref4270"></a><a id="sthref4271"></a>ADD_ELEMENTARY_ATTRIBUTE Procedures</h3>
<p>This procedure adds the specified attribute to the attribute set. The procedure is overloaded. The different functionality of each form of syntax is presented along with the definitions.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4272"></a>Syntax</p>
<p>Adds the specified elementary attribute to the attribute set:</p>
<pre>
DBMS_EXPFIL.ADD_ELEMENTARY_ATTRIBUTE (
   attr_set   IN   VARCHAR2, 
   attr_name  IN   VARCHAR2, 
   attr_type  IN   VARCHAR2, 
   attr_defv1 IN   VARCHAR2 DEFAULT NULL);
</pre>
<p>Identifies the elementary attributes that are table aliases and adds them to the attribute set:</p>
<pre>
DBMS_EXPFIL.ADD_ELEMENTARY_ATTRIBUTE (
   attr_set   IN   VARCHAR2,
   attr_name  IN   VARCHAR2,
   tab_alias  IN   exf$table_alias);
</pre>
<p>Allows addition of text attributes to the attribute set:</p>
<pre>
DBMS_EXPFIL.ADD_ELEMENTARY_ATTRIBUTE (
   attr_set       IN   VARCHAR2,
   attr_name      IN   VARCHAR2,
   attr_type      IN   VARCHAR2,
   text_pref      IN   EXF$TEXT);
 
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4273"></a>Parameters</p>
<div id="ARPLS66328" class="tblformal">
<p class="titleintable"><a id="sthref4274"></a><a id="sthref4275"></a>Table 65-2 ADD_ELEMENTARY_ATTRIBUTE Procedure Parameters</p>
<table class="cellalignment1229" title="ADD_ELEMENTARY_ATTRIBUTE Procedure Parameters" summary="This table describes the parameters of the DBMS_EXPFIL.ADD_ELEMENTARY_ATTRIBUTE subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t5">Parameter</th>
<th class="cellalignment1227" id="r1c2-t5">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t5" headers="r1c1-t5">
<p><code>attr_set</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t5 r1c2-t5">
<p>Name of the attribute set to which this attribute is added</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t5" headers="r1c1-t5">
<p><code>attr_name</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t5 r1c2-t5">
<p>Name of the elementary attribute to be added. No two attributes in a set can have the same name.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r4c1-t5" headers="r1c1-t5">
<p><code>attr_type</code></p>
</td>
<td class="cellalignment1228" headers="r4c1-t5 r1c2-t5">
<p>Datatype of the attribute. This argument accepts any standard SQL datatype or the name of an object type that is accessible to the current user.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r5c1-t5" headers="r1c1-t5">
<p><code>attr_defv1</code></p>
</td>
<td class="cellalignment1228" headers="r5c1-t5 r1c2-t5">
<p>Default value for the elementary attribute</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r6c1-t5" headers="r1c1-t5">
<p><code>tab_alias</code></p>
</td>
<td class="cellalignment1228" headers="r6c1-t5 r1c2-t5">
<p>Type that identifies the database table to which the attribute is aliased</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r7c1-t5" headers="r1c1-t5">
<p><code>text_pref</code></p>
</td>
<td class="cellalignment1228" headers="r7c1-t5 r1c2-t5">
<p>Text preferences such as LEXER and WORDLIST specification.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4276"></a>Usage Notes</p>
<ul>
<li>
<p>If the attribute set receiving the elementary attribute was originally created from an existing object type, then additional attributes cannot be added.</p>
</li>
<li>
<p>One or more, or all elementary attributes in an attribute set can be table aliases. If an elementary attribute is a table alias, then the value assigned to the elementary attribute is a <code>ROWID</code> from the corresponding table. An attribute set with one or more table alias attributes cannot be created from an existing object type. For more information about table aliases, see <a class="olink EXPRN111" href="../../appdev.112/e14919/exprn_app_a.htm#EXPRN111"><span class="italic">Oracle Database Rules Manager and Expression Filter Developer's Guide.</span></a></p>
</li>
<li>
<p>Elementary attributes cannot be added to an attribute set that is already assigned to a column storing expressions.</p>
</li>
<li>
<p>The default value specification for an attribute is similar to a default value specification for a table column. The resulting default values should agree with the datatype of the attribute. For example, valid default values for an attribute of <code>DATE</code> datatype are <code>SYSDATE</code> and <code>to_date('01-01-2004','DD-MM-YYYY')</code>.</p>
</li>
<li>
<p>See the section on defining attribute sets in <a class="olink EXPRN011" href="../../appdev.112/e14919/exprn_expconcepts.htm#EXPRN011"><span class="italic">Oracle Database Rules Manager and Expression Filter Developer's Guide</span></a> for more information about adding elementary attributes.</p>
</li>
<li>
<p>Related views: <a class="olink EXPRN056" href="../../appdev.112/e14919/exprn_views.htm#EXPRN056"><code>USER_EXPFIL_ATTRIBUTE_SETS</code></a> and <a class="olink EXPRN055" href="../../appdev.112/e14919/exprn_views.htm#EXPRN055"><code>USER_EXPFIL_ATTRIBUTES</code></a>.</p>
</li>
<li>
<p>This procedure with a text preference bound to the <code>text_pref</code> argument creates a text attribute in the attribute set. The data type for such an attribute should be a <code>VARCHAR2</code> or a <code>CLOB</code>. The preferences specified with this procedure are validated only when an Expression Filter index is created using this attribute set.</p>
</li>
<li>
<p>These preferences are used in the creation of the <code>CTXRULE</code> index that processes the predicates involving <code>CONTAINS</code> operator. The valid preferences are those that are valid in the <code>PARAMETERS</code> clause of <code>CTXRULE</code> index creation. See <a class="olink CCAPP" href="../../text.112/e24435/toc.htm"><span class="italic">Oracle Text Application Developer's Guide</span></a> for the syntax.</p>
</li>
</ul>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4277"></a>Examples</p>
<p>The following commands add two elementary attributes to an attribute set:</p>
<pre>
BEGIN
  DBMS_EXPFIL.ADD_ELEMENTARY_ATTRIBUTE (
                               attr_set   =&gt; 'HRAttrSet',
                               attr_name  =&gt; 'HRREP',
                               attr_type  =&gt; 'VARCHAR2(30)'
                               attr_defv1 =&gt; 'Betty Smith');
  DBMS_EXPFIL.ADD_ELEMENTARY_ATTRIBUTE (
                               attr_set  =&gt; 'HRAttrSet',
                               attr_name =&gt; 'DEPT',
                               tab_alias =&gt; exf$table_alias('DEPT'));
END;
/
</pre>
<p>The following commands define a CreationTime elementary attribute that takes the database time as the default value.</p>
<pre>
BEGIN
  DBMS_EXPFIL.ADD_ELEMENTARY_ATTRIBUTE (
                          attr_set   =&gt; 'PurchaseOrder',
                          attr_name  =&gt; 'CreationTime',
                          attr_type  =&gt; 'DATE',
                          attr_defvl =&gt; 'SYSDATE');
END;
/
</pre>
<p>Alternately, the following commands initialize the <code>CreationTime</code> attribute to a specific value when it is not explicitly specified in the data item passed to the EVALUATE operator.</p>
<pre>
BEGIN
  DBMS_EXPFIL.ADD_ELEMENTARY_ATTRIBUTE (
                          attr_set   =&gt; 'PurchaseOrder',
                          attr_name  =&gt; 'CreationTime',
                          attr_type  =&gt; 'DATE',
                          attr_defvl =&gt; 'to_date(''01-01-2004'',''DD-MM-YYYY'')');
END;
/
</pre>
<p>The following commands create an attribute set with a <code>Model</code> attribute of <code>VARCHAR2</code> data type and an InsReport attribute configured for text predicates.</p>
<pre>
BEGIN
   DBMS_EXPFIL.CREATE_EVENT_STRUT(event_struct =&gt; 'Car4Sale');
   // create scalar attributes
   DBMS_EXPFIL.ADD_ELEMENTARY_ATTRIBUTE(
                       attr_set  =&gt; 'Car4Sale',
                       attr_name =&gt; 'Model',
                       attr_type =&gt; 'VARCHAR2(30)');

   //create text attribute
   DBMS_EXPFIL.ADD_ELEMENTARY_ATTRIBUTE(
                       attr_set  =&gt; 'Car4Sale',
                       attr_name =&gt; 'InsReport',
                       attr_type =&gt; 'CLOB',
                       attr_type =&gt; exf$text(
                                    'LEXER insrpt_lexer
                                     WORDLIST insrpt_wordlist'));
END;
/
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS158" class="refsect2"><a id="CHDEBABD"></a>
<hr />
<h3 class="refsect2"><a id="sthref4278"></a><a id="sthref4279"></a><a id="sthref4280"></a>ADD_FUNCTIONS Procedure</h3>
<p>This procedure adds a user-defined function, package, or type representing a set of functions to the attribute set.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4281"></a>Syntax</p>
<pre>
DBMS_EXPFIL.ADD_FUNCTIONS (
   attr_set   IN   VARCHAR2, 
   funcs_name IN   VARCHAR2);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4282"></a>Parameters</p>
<div id="ARPLS66329" class="tblformal">
<p class="titleintable"><a id="sthref4283"></a><a id="sthref4284"></a>Table 65-3 ADD_FUNCTIONS Procedure Parameters</p>
<table class="cellalignment1229" title="ADD_FUNCTIONS Procedure Parameters" summary="This table describes the parameters of the DBMS_EXPFIL.ADD_FUNCTIONS subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t6">Parameter</th>
<th class="cellalignment1227" id="r1c2-t6">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t6" headers="r1c1-t6">
<p><code>attr_set</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t6 r1c2-t6">
<p>Name of the attribute set to which the functions are added</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t6" headers="r1c1-t6">
<p><code>funcs_name</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t6 r1c2-t6">
<p>Name of a function, package, or type (representing a function set) or its synonyms</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4285"></a>Usage Notes</p>
<ul>
<li>
<p>By default, an attribute set implicitly allows references to all Oracle Database supplied SQL functions for use by the expression set. If the expression set refers to a user-defined function, the function must be explicitly added to the attribute set.</p>
</li>
<li>
<p>The <code>ADD_FUNCTIONS</code> procedure adds a user-defined function or a package (or type) representing a set of functions to the attribute set. Any new or modified expressions are validated using this list. The function added to the attribute set, and thus used in the stored expressions, should not perform any DML or DDL (database state changing) operations. Oracle Database catches violations to this rule only at run-time while evaluating the expressions. Violations are not checked during the <code>ADD_FUNCTIONS</code> procedure call.</p>
</li>
<li>
<p>The function or the package name can be specified with a schema extension. If a function name is specified without a schema extension, only such references in the expression set are considered valid. The expressions in a set can be restricted to use a synonym to a function or a package by adding the corresponding synonym to the attribute set. This preserves the portability of the expression set to other schemas.</p>
</li>
<li>
<p>See the section on defining attribute sets in <a class="olink EXPRN012" href="../../appdev.112/e14919/exprn_expconcepts.htm#EXPRN012"><span class="italic">Oracle Database Rules Manager and Expression Filter Developer's Guide</span></a> for more information about adding functions to an attribute set.</p>
</li>
<li>
<p>Related views: <a class="olink EXPRN056" href="../../appdev.112/e14919/exprn_views.htm#EXPRN056"><code>USER_EXPFIL_ATTRIBUTE_SETS</code></a> and <a class="olink EXPRN058" href="../../appdev.112/e14919/exprn_views.htm#EXPRN058"><code>USER_EXPFIL_EXPRESSION_SETS</code></a></p>
</li>
</ul>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4286"></a>Examples</p>
<p>The following commands add two functions to the attribute set:</p>
<pre>
BEGIN 
  DBMS_EXPFIL.ADD_FUNCTIONS (
   attr_set   =&gt; 'Car4Sale', 
   funcs_name =&gt; 'HorsePower');
  DBMS_EXPFIL.ADD_FUNCTIONS (
   attr_set   =&gt; 'Car4Sale', 
   funcs_name =&gt; 'Scott.CrashTestRating');
END;
/
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS159" class="refsect2"><a id="CJAFAGID"></a>
<hr />
<h3 class="refsect2"><a id="sthref4287"></a><a id="sthref4288"></a>ASSIGN_ATTRIBUTE_SET Procedure</h3>
<p>This procedure assigns an attribute set to a <code>VARCHAR2</code> column in a user table to create an Expression column.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4289"></a>Syntax</p>
<pre>
DBMS_EXPFIL.ASSIGN_ATTRIBUTE_SET (
   attr_set   IN   VARCHAR2,
   expr_tab   IN   VARCHAR2,
   expr_col   IN   VARCHAR2,
   force      IN   VARCHAR2 DEFAULT 'FALSE');
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4290"></a>Parameters</p>
<div id="ARPLS66330" class="tblformal">
<p class="titleintable"><a id="sthref4291"></a><a id="sthref4292"></a>Table 65-4 ASSIGN_ATTRIBUTE_SET Procedure Parameters</p>
<table class="cellalignment1229" title="ASSIGN_ATTRIBUTE_SET Procedure Parameters" summary="This table describes the parameters of the DBMS_EXPFIL.ASSIGN_ATTRIBUTE_SET subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t7">Parameter</th>
<th class="cellalignment1227" id="r1c2-t7">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t7" headers="r1c1-t7">
<p><code>attr_set</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t7 r1c2-t7">
<p>Name of the attribute set</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t7" headers="r1c1-t7">
<p><code>expr_tab</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t7 r1c2-t7">
<p>Name of table storing the expression set</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r4c1-t7" headers="r1c1-t7">
<p><code>expr_col</code></p>
</td>
<td class="cellalignment1228" headers="r4c1-t7 r1c2-t7">
<p>Name of column in the table that stores the expressions</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r5c1-t7" headers="r1c1-t7">
<p><code>force</code></p>
</td>
<td class="cellalignment1228" headers="r5c1-t7 r1c2-t7">
<p>Argument used to trust the existing expressions in a table (and skip validation)</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4293"></a>Usage Notes</p>
<ul>
<li>
<p>The <code>ASSIGN_ATTRIBUTE_SET</code> procedure assigns an attribute set to a <code>VARCHAR2</code> column in a user table to create an Expression column. The attribute set contains the elementary attribute names and their data types and any functions used in the expressions. The Expression column, the column named by the <code>expr_col</code> parameter to store the expression, uses the attribute set to validate changes and additions to the expression set.</p>
</li>
<li>
<p>An attribute set can be assigned only to a table column in the same schema as the attribute set. An attribute set can be assigned to one or more table columns. Assigning an attribute set to a column storing expressions implicitly creates methods for the associated object type. For this operation to succeed, the object type cannot have any dependent objects before the attribute set is assigned.</p>
</li>
<li>
<p>By default, the column should not have any expressions at the time of association. However, if the values in the column are known to be valid expressions, you can use a value of <code>'TRUE'</code> for the <code>force</code> argument to assign the attribute set to a column containing expressions.</p>
</li>
<li>
<p>See the information about defining Expression columns in <a class="olink EXPRN012" href="../../appdev.112/e14919/exprn_expconcepts.htm#EXPRN012"><span class="italic">Oracle Database Rules Manager and Expression Filter Developer's Guide</span></a> for more information about adding elementary attributes.</p>
</li>
<li>
<p>Related views: <a class="olink EXPRN056" href="../../appdev.112/e14919/exprn_views.htm#EXPRN056"><code>USER_EXPFIL_ATTRIBUTE_SETS</code></a> and <a class="olink EXPRN058" href="../../appdev.112/e14919/exprn_views.htm#EXPRN058"><code>USER_EXPFIL_EXPRESSION_SETS</code></a></p>
</li>
</ul>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4294"></a>Examples</p>
<p>The following command assigns the attribute set to a column storing expressions. The expression set should be empty at the time of association.</p>
<pre>
BEGIN
  DBMS_EXPFIL.ASSIGN_ATTRIBUTE_SET (attr_set =&gt; 'Car4Sale', 
                                    expr_tab =&gt; 'consumer',
                                    expr_col =&gt; 'interest');
END;
/
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS160" class="refsect2"><a id="CJADCEED"></a>
<hr />
<h3 class="refsect2"><a id="sthref4295"></a><a id="sthref4296"></a>BUILD_EXCEPTIONS_TABLE Procedure</h3>
<p>This procedure creates the exception table, used in validation, in the current schema.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4297"></a>Syntax</p>
<pre>
DBMS_EXPFIL.BUILD_EXCEPTIONS_TABLE (
   exception_tab IN VARCHAR2);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4298"></a>Parameters</p>
<div id="ARPLS66331" class="tblformal">
<p class="titleintable"><a id="sthref4299"></a><a id="sthref4300"></a>Table 65-5 BUILD_EXCEPTIONS_TABLE Procedure Parameter</p>
<table class="cellalignment1229" title="BUILD_EXCEPTIONS_TABLE Procedure Parameter" summary="This table describes the parameters of the DBMS_EXPFIL.BUILD_EXCEPTIONS_TABLE subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t8">Parameter</th>
<th class="cellalignment1227" id="r1c2-t8">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t8" headers="r1c1-t8">
<p><code>exception_tab</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t8 r1c2-t8">
<p>Name of the exception table</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4301"></a>Usage Notes</p>
<ul>
<li>
<p>During expression validation, you can optionally provide the name of the exception table in which the references to the invalid expressions are stored. The <code>BUILD_EXCEPTIONS_TABLE</code> procedure creates the exception table in the current schema.</p>
</li>
<li>
<p>See the section on evaluation semantics in <a class="olink EXPRN015" href="../../appdev.112/e14919/exprn_expconcepts.htm#EXPRN015"><span class="italic">Oracle Database Rules Manager and Expression Filter Developer's Guide</span></a> and <a href="#CJAHCFCA">VALIDATE_EXPRESSIONS Procedure</a> for more information.</p>
</li>
<li>
<p>Related view: <code>USER_TABLES</code></p>
</li>
</ul>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4302"></a>Examples</p>
<p>The following command creates the exception table, <code>InterestExceptions</code>, in the current schema:</p>
<pre>
BEGIN
  DBMS_EXPFIL.BUILD_EXCEPTIONS_TABLE (exception_tab =&gt; 'InterestExceptions');
END;
/
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS161" class="refsect2"><a id="BABHECFC"></a>
<hr />
<h3 class="refsect2"><a id="sthref4303"></a><a id="sthref4304"></a>CLEAR_EXPRSET_STATS Procedure</h3>
<p>This procedure clears the predicate statistics for the expression set stored in a table column.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4305"></a>Syntax</p>
<pre>
DBMS_EXPFIL.CLEAR_EXPRSET_STATS (
   expr_tab   IN   VARCHAR2,
   expr_col   IN   VARCHAR2);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4306"></a>Parameters</p>
<div id="ARPLS66332" class="tblformal">
<p class="titleintable"><a id="sthref4307"></a><a id="sthref4308"></a>Table 65-6 CLEAR_EXPRSET_STATS Procedure Parameters</p>
<table class="cellalignment1229" title="CLEAR_EXPRSET_STATS Procedure Parameters" summary="This table describes the parameters of the DBMS_EXPFIL.CLEAR_EXPRSET_STATS subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t9">Parameter</th>
<th class="cellalignment1227" id="r1c2-t9">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t9" headers="r1c1-t9">
<p><code>expr_tab</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t9 r1c2-t9">
<p>Name of table storing the expression set</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t9" headers="r1c1-t9">
<p><code>expr_col</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t9 r1c2-t9">
<p>Name of column in the table that stores the expressions</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4309"></a>Usage Notes</p>
<ul>
<li>
<p>See also <a href="#CIHIJFEE">GET_EXPRSET_STATS Procedure</a> for information about gathering the statistics.</p>
</li>
<li>
<p>Related views: <a class="olink EXPRN058" href="../../appdev.112/e14919/exprn_views.htm#EXPRN058"><code>USER_EXPFIL_EXPRESSION_SETS</code></a> and <a class="olink EXPRN059" href="../../appdev.112/e14919/exprn_views.htm#EXPRN059"><code>USER_EXPFIL_EXPRSET_STATS</code></a></p>
</li>
</ul>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4310"></a>Examples</p>
<p>The following command clears the predicate statistics for the expression set stored in <code>interest</code> column of the <code>consumer</code> table:</p>
<pre>
BEGIN
  DBMS_EXPFIL.CLEAR_EXPRSET_STATS (expr_tab =&gt; 'consumer',
                                    expr_col =&gt; 'interest');
END;
/
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS162" class="refsect2"><a id="CJACBAGI"></a>
<hr />
<h3 class="refsect2"><a id="sthref4311"></a><a id="sthref4312"></a>COPY_ATTRIBUTE_SET Procedure</h3>
<p>This procedure copies an attribute set along with its user-defined function list and default index parameters to another set.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4313"></a>Syntax</p>
<pre>
DBMS_EXPFIL.COPY_ATTRIBUTE_SET (
   from_set   IN   VARCHAR2,
   to_set     IN   VARCHAR2);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4314"></a>Parameters</p>
<div id="ARPLS66333" class="tblformal">
<p class="titleintable"><a id="sthref4315"></a><a id="sthref4316"></a>Table 65-7 COPY_ATTRIBUTE_SET Procedure Parameters</p>
<table class="cellalignment1229" title="COPY_ATTRIBUTE_SET Procedure Parameters" summary="This table describes the parameters of the DBMS_EXPFIL.COPY_ATTRIBUTE_SET subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t10">Parameter</th>
<th class="cellalignment1227" id="r1c2-t10">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t10" headers="r1c1-t10">
<p><code>from_set</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t10 r1c2-t10">
<p>Name of an existing attribute set to be copied</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t10" headers="r1c1-t10">
<p><code>to_set</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t10 r1c2-t10">
<p>Name of the new attribute set</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4317"></a>Usage Notes</p>
<ul>
<li>
<p>A schema-extended name can be used for the <code>from_set</code> argument to copy an attribute set across schemas. Before you issue this command, you must have the <code>EXECUTE</code> privilege for the object type associated with the original attribute set. Ensure that any references to schema objects (user-defined functions, tables, and embedded objects) are valid in the new schema.</p>
</li>
<li>
<p>The default index parameters and the user-defined function list of the new set can be changed independent of the original set.</p>
</li>
<li>
<p>Related views: <code>ALL_EXPFIL_ATTRIBUTE_SETS</code> and <code>ALL_EXPFIL_ATTRIBUTES</code>.</p>
</li>
</ul>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4318"></a>Examples</p>
<p>The following command makes a copy of the <code>Car4Sale</code> attribute set:</p>
<pre>
BEGIN
  DBMS_EXPFIL.COPY_ATTRIBUTE_SET (from_set =&gt; 'Car4Sale', 
                                  to_set   =&gt; 'Vehicle');
END;
/
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS163" class="refsect2"><a id="CJAFFDBB"></a>
<hr />
<h3 class="refsect2"><a id="sthref4319"></a><a id="sthref4320"></a>CREATE_ATTRIBUTE_SET Procedure</h3>
<p>This procedure creates an empty attribute set or an attribute set with a complete set of elementary attributes derived from an object type with a matching name.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4321"></a>Syntax</p>
<pre>
DBMS_EXPFIL.CREATE_ATTRIBUTE_SET (
   attr_set   IN   VARCHAR2,
   from_type  IN   VARCHAR2 DEFAULT 'NO');
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4322"></a>Parameters</p>
<div id="ARPLS66334" class="tblformal">
<p class="titleintable"><a id="sthref4323"></a><a id="sthref4324"></a>Table 65-8 CREATE_ATTRIBUTE_SET Procedure Parameters</p>
<table class="cellalignment1229" title="CREATE_ATTRIBUTE_SET Procedure Parameters" summary="This table describes the parameters of the DBMS_EXPFIL.CLEAR_EXPRSET_STATS subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t11">Parameter</th>
<th class="cellalignment1227" id="r1c2-t11">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t11" headers="r1c1-t11">
<p><code>attr_set</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t11 r1c2-t11">
<p>Name of the attribute set to be created</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t11" headers="r1c1-t11">
<p><code>from_type</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t11 r1c2-t11">
<p><code>YES</code>, if the attributes for the attribute set should be derived from an existing object type</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4325"></a>Usage Notes</p>
<ul>
<li>
<p>The object type used for an attribute set cannot contain any user methods, and it should not be an evolved type (with the use of <code>ALTER TYPE</code> command). This object type should not have any dependent objects at the time of the attribute set creation. If the attribute set is not derived from an existing object type, this procedure creates an object type with a matching name.</p>
</li>
<li>
<p>An attribute set with one or more table alias attributes cannot be derived from an object type. For this purpose, create an empty attribute set and add one elementary attribute at a time using the <code>DBMS_EXPFIL</code>.<code>ADD_ELEMENTARY_ATTRIBUTE</code> procedure. (See <a class="olink EXPRN111" href="../../appdev.112/e14919/exprn_app_a.htm#EXPRN111"><span class="italic">Oracle Database Rules Manager and Expression Filter Developer's Guide</span></a> for more information.)</p>
</li>
<li>
<p>See the section on defining attribute sets in <a class="olink EXPRN011" href="../../appdev.112/e14919/exprn_expconcepts.htm#EXPRN011"><span class="italic">Oracle Database Rules Manager and Expression Filter Developer's Guide</span></a> and <a href="#CHDIFDCC">ADD_ELEMENTARY_ATTRIBUTE Procedures</a> for more information.</p>
</li>
<li>
<p>Related views: <a class="olink EXPRN056" href="../../appdev.112/e14919/exprn_views.htm#EXPRN056"><code>USER_EXPFIL_ATTRIBUTE_SETS</code></a> and <a class="olink EXPRN055" href="../../appdev.112/e14919/exprn_views.htm#EXPRN055"><code>USER_EXPFIL_ATTRIBUTES</code></a>.</p>
</li>
</ul>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4326"></a>Examples</p>
<p>The following commands create an attribute set with all the required elementary attributes derived from the <code>Car4Sale</code> type:</p>
<pre>
CREATE OR REPLACE TYPE Car4Sale AS OBJECT 
                                   (Model   VARCHAR2(20), 
                                    Year    NUMBER, 
                                    Price   NUMBER, 
                                    Mileage NUMBER);
/
 
BEGIN 
  DBMS_EXPFIL.CREATE_ATTRIBUTE_SET(attr_set  =&gt; 'Car4Sale',
                                   from_type =&gt; 'YES');
END;
/
 
</pre>
<p>Assuming that the <code>Car4Sale</code> type does not exist, the attribute set can be created from scratch as shown in the following example:</p>
<pre>
BEGIN
  DBMS_EXPFIL.CREATE_ATTRIBUTE_SET(attr_set =&gt; 'Car4Sale');
  DBMS_EXPFIL.ADD_ELEMENTARY_ATTRIBUTE( 
                               attr_set  =&gt; 'Car4Sale',
                               attr_name =&gt; 'Model',
                               attr_type =&gt; 'VARCHAR2(20)');
  DBMS_EXPFIL.ADD_ELEMENTARY_ATTRIBUTE(
                               attr_set  =&gt; 'Car4Sale',
                               attr_name =&gt; 'Year',
                               attr_type =&gt; 'NUMBER');
  DBMS_EXPFIL.ADD_ELEMENTARY_ATTRIBUTE(
                               attr_set  =&gt; 'Car4Sale',
                               attr_name =&gt; 'Price',
                               attr_type =&gt; 'NUMBER');
  DBMS_EXPFIL.ADD_ELEMENTARY_ATTRIBUTE(
                               attr_set  =&gt; 'Car4Sale',
                               attr_name =&gt; 'Mileage',
                               attr_type =&gt; 'NUMBER');
END;
/
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS164" class="refsect2"><a id="CJAEHGAH"></a>
<hr />
<h3 class="refsect2"><a id="sthref4327"></a><a id="sthref4328"></a>DEFAULT_INDEX_PARAMETERS Procedure</h3>
<p>This procedure assigns default index parameters to an attribute set. It also adds or drops a partial list of stored and indexed attributes to or from the default list associated with the attribute list.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4329"></a>Syntax</p>
<pre>
DBMS_EXPFIL.DEFAULT_INDEX_PARAMETERS (
   attr_set   IN   VARCHAR2,
   attr_list  IN   EXF$ATTRIBUTE_LIST,
   operation  IN   VARCHAR2 DEFAULT 'ADD');
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4330"></a>Parameters</p>
<div id="ARPLS66335" class="tblformal">
<p class="titleintable"><a id="sthref4331"></a><a id="sthref4332"></a>Table 65-9 DEFAULT_INDEX_PARAMETERS Procedure Parameters</p>
<table class="cellalignment1229" title="DEFAULT_INDEX_PARAMETERS Procedure Parameters" summary="This table describes the parameters of the DBMS_EXPFIL.DEFAULT_INDEX_PARAMETERS subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t12">Parameter</th>
<th class="cellalignment1227" id="r1c2-t12">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t12" headers="r1c1-t12">
<p><code>attr_set</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t12 r1c2-t12">
<p>Name of the attribute set</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t12" headers="r1c1-t12">
<p><code>attr_list</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t12 r1c2-t12">
<p>An instance of <code>EXF$ATTRIBUTE_LIST</code> with a partial list of (default) stored and indexed attributes for an Expression Filter index</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r4c1-t12" headers="r1c1-t12">
<p><code>operation</code></p>
</td>
<td class="cellalignment1228" headers="r4c1-t12 r1c2-t12">
<p>Operation to be performed on the list of index parameters. Default value: <code>ADD</code>. Valid values: <code>ADD</code> and <code>DROP</code>.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4333"></a>Usage Notes</p>
<ul>
<li>
<p>Existing Expression Filter indexes are not modified when the default parameters for the corresponding attribute set are changed. The new index defaults are used when a new Expression Filter index is created and when an existing index is rebuilt. (See the section on alter index rebuild in <a class="olink EXPRN047" href="../../appdev.112/e14919/exprn_sql.htm#EXPRN047"><span class="italic">Oracle Database Rules Manager and Expression Filter Developer's Guide</span></a> for more information about rebuilding indexes.)</p>
</li>
<li>
<p>See the section on creating an index from default parameters in <a class="olink EXPRN024" href="../../appdev.112/e14919/exprn_indexexpressions.htm#EXPRN024"><span class="italic">Oracle Database Rules Manager and Expression Filter Developer's Guide</span></a> for more information about assigning default index parameters to an attribute set.</p>
</li>
<li>
<p>Related views: <a class="olink EXPRN056" href="../../appdev.112/e14919/exprn_views.htm#EXPRN056"><code>USER_EXPFIL_ATTRIBUTE_SETS</code></a> and <a class="olink EXPRN057" href="../../appdev.112/e14919/exprn_views.htm#EXPRN057"><code>USER_EXPFIL_DEF_INDEX_PARAMS</code></a></p>
</li>
</ul>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4334"></a>Examples</p>
<p>The following command adds the specified stored and indexed attributes to the attribute set's default index parameters list:</p>
<pre>
BEGIN
 DBMS_EXPFIL.DEFAULT_INDEX_PARAMETERs(
    attr_set  =&gt; 'Car4Sale', 
    attr_list =&gt; exf$attribute_list (
       exf$attribute (attr_name =&gt; 'Model',            
                      attr_oper =&gt; exf$indexoper('='),
                      attr_indexed =&gt; 'TRUE'),         
       exf$attribute (attr_name =&gt; 'Price', 
                      attr_oper =&gt; exf$indexoper('all'), 
                      attr_indexed =&gt; 'TRUE'), 
       exf$attribute (attr_name =&gt; 'HorsePower(Model, Year)', 
                      attr_oper =&gt; exf$indexoper('=','&lt;','&gt;','&gt;=','&lt;='), 
                      attr_indexed =&gt; 'FALSE'),
       exf$attribute (attr_name =&gt; 'CrashTestRating(Model, Year)', 
                      attr_oper =&gt; exf$indexoper('=','&lt;','&gt;','&gt;=','&lt;='), 
                      attr_indexed =&gt; 'FALSE')),
    operation =&gt; 'ADD');
END;
/
 
</pre>
<p>The following command drops the <code>CrashTestRating(Model, Year)</code> attribute (stored or indexed) from the previous list.</p>
<pre>
BEGIN
  DBMS_EXPFIL.DEFAULT_INDEX_PARAMETERS(
      attr_set  =&gt; 'Car4Sale', 
      attr_list =&gt; exf$attribute_list (
         exf$attribute (attr_name =&gt; 'CrashTestRating(Model, Year)')),
      operation =&gt; 'DROP');
END;
/
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS165" class="refsect2"><a id="CJAIADEG"></a>
<hr />
<h3 class="refsect2"><a id="sthref4335"></a><a id="sthref4336"></a>DEFAULT_XPINDEX_PARAMETERS Procedure</h3>
<p><a id="sthref4337"></a><a id="sthref4338"></a>This procedure adds (or drops) a partial list of XPath parameters to the default index parameters associated with the attribute set.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4339"></a>Syntax</p>
<pre>
DBMS_EXPFIL.DEFAULT_XPINDEX_PARAMETERS (
   attr_set   IN   VARCHAR2,
   xmlt_attr  IN   VARCHAR2,
   xptag_list IN   EXF$XPATH_TAGS,
   operation  IN   VARCHAR2 DEFAULT 'ADD');
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4340"></a>Parameters</p>
<div id="ARPLS66336" class="tblformal">
<p class="titleintable"><a id="sthref4341"></a><a id="sthref4342"></a>Table 65-10 DEFAULT_XPINDEX_PARAMETERS Procedure Parameters</p>
<table class="cellalignment1229" title="DEFAULT_XPINDEX_PARAMETERS Procedure Parameters" summary="This table describes the parameters of the DBMS_EXPFIL.DEFAULT_XPINDEX_PARAMETERS subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t13">Parameter</th>
<th class="cellalignment1227" id="r1c2-t13">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t13" headers="r1c1-t13">
<p><code>attr_set</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t13 r1c2-t13">
<p>Name of the attribute set</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t13" headers="r1c1-t13">
<p><code>xmlt_attr</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t13 r1c2-t13">
<p>Name of the attribute with the <code>XMLType</code> datatype</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r4c1-t13" headers="r1c1-t13">
<p><code>xptag_list</code></p>
</td>
<td class="cellalignment1228" headers="r4c1-t13 r1c2-t13">
<p>An instance of <code>EXF$XPATH_TAGS</code> type with a partial list of XML elements and attributes to be configured for the Expression Filter index</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r5c1-t13" headers="r1c1-t13">
<p><code>operation</code></p>
</td>
<td class="cellalignment1228" headers="r5c1-t13 r1c2-t13">
<p>Operation to be performed on the list of index parameters. Default value: <code>ADD</code>. Valid values: <code>ADD</code> and <code>DROP</code>.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4343"></a>Usage Notes</p>
<ul>
<li>
<p>The attribute set used for an expression set may have one or more XML type attributes (defined with <code>XMLType</code> datatype) and the corresponding expressions may contain XPath predicates on these attributes. The Expression Filter index created for the expression set can be tuned to process these XPath predicates efficiently by using some XPath-specific index parameters (in addition to some non-XPath index parameters).</p>
</li>
<li>
<p>The <code>DEFAULT_XPINDEX_PARAMETERS</code> procedure adds (or drops) a partial list of XPath parameters to the default index parameters associated with the attribute set. The XPath parameters are assigned to a specific <code>XMLType</code> attribute in the attribute set and this information can be viewed using the <code>USER_EXPFIL_DEF_INDEX_PARAMS</code> view. The <code>DEFAULT_INDEX_PARAMETERS</code> procedure and the <code>DEFAULT_XPINDEX_PARAMETERS</code> procedure can be used independent of each other. They maintain a common list of default index parameters for the attribute set.</p>
</li>
<li>
<p>See the section on index tuning for XPath predicates in <a class="olink EXPRN033" href="../../appdev.112/e14919/exprn_xpathpredicates.htm#EXPRN033"><span class="italic">Oracle Database Rules Manager and Expression Filter Developer's Guide</span></a> for more information about XPath parameters to the default index parameters of an attribute set. See also <a href="#CJAEHGAH">DEFAULT_INDEX_PARAMETERS Procedure</a> for more information about default index parameters.</p>
</li>
<li>
<p>Related views: <a class="olink EXPRN055" href="../../appdev.112/e14919/exprn_views.htm#EXPRN055"><code>USER_EXPFIL_ATTRIBUTES</code></a> and <a class="olink EXPRN057" href="../../appdev.112/e14919/exprn_views.htm#EXPRN057"><code>USER_EXPFIL_DEF_INDEX_PARAMS</code></a>.</p>
</li>
</ul>
<div align="center">
<div class="inftblinformal"><br />
<table class="cellalignment1235">
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228">
<p class="notep1">Note:</p>
The values assigned to the <code>tag_name</code> argument of <code>exf$xpath_tag</code> type are case sensitive.</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" --></div>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4344"></a>Examples</p>
<p>The following command adds the specified XML tags to the default index parameters list along with their preferences such as positional or value filter and indexed or stored predicate group:</p>
<pre>
BEGIN
  DBMS_EXPFIL.DEFAULT_XPINDEX_PARAMETERS(
       attr_set   =&gt; 'Car4Sale',
       xmlt_attr  =&gt; 'Details',
       xptag_list =&gt;                                    --- XPath tag list 
         exf$xpath_tags(
           exf$xpath_tag(tag_name    =&gt; 'stereo@make',  --- XML attribute
                         tag_indexed =&gt; 'TRUE',
                         tag_type    =&gt; 'VARCHAR(15)'), --- value filter
           exf$xpath_tag(tag_name    =&gt; 'stereo',       --- XML element
                         tag_indexed =&gt; 'FALSE',
                         tag_type    =&gt; null),          --- positional filter
           exf$xpath_tag(tag_name    =&gt; 'memory',       --- XML element
                         tag_indexed =&gt; 'TRUE',
                         tag_type    =&gt; 'VARCHAR(10)'), --- value filter
           exf$xpath_tag(tag_name    =&gt; 'GPS',
                         tag_indexed =&gt; 'TRUE',
                         tag_type    =&gt; null)
          )
        );
END;
/
 
</pre>
<p>The following command drops the <code>stereo@make</code> tag from the default index parameters:</p>
<pre>
BEGIN
  DBMS_EXPFIL.DEFAULT_XPINDEX_PARAMETERS(
       attr_set   =&gt; 'Car4Sale',
       xmlt_attr  =&gt; 'Details',
       xptag_list =&gt;                                    --- XPath tag list 
         exf$xpath_tags(
           exf$xpath_tag(tag_name    =&gt; 'stereo@make')
         ),
       operation =&gt; 'DROP'
       );
END;
/
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS166" class="refsect2"><a id="CJAFJDEB"></a>
<hr />
<h3 class="refsect2"><a id="sthref4345"></a><a id="sthref4346"></a>DEFRAG_INDEX Procedure</h3>
<p>This procedure rebuilds the bitmap indexes online and thus reduces the fragmentation.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4347"></a>Syntax</p>
<pre>
DBMS_EXPFIL.DEFRAG_INDEX (
   idx_name   IN  VARCHAR2);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4348"></a>Parameters</p>
<div id="ARPLS66337" class="tblformal">
<p class="titleintable"><a id="sthref4349"></a><a id="sthref4350"></a>Table 65-11 DEFRAG_INDEX Procedure Parameter</p>
<table class="cellalignment1229" title="DEFRAG_INDEX Procedure Parameter" summary="This table describes the parameters of the DBMS_EXPFIL.DEFRAG_INDEX subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t15">Parameter</th>
<th class="cellalignment1227" id="r1c2-t15">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t15" headers="r1c1-t15">
<p><code>idx_name</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t15 r1c2-t15">
<p>Name of the Expression Filter index</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4351"></a>Usage Notes</p>
<ul>
<li>
<p>The bitmap indexes defined for the indexed attributes of an Expression Filter index become fragmented as additions and updates are made to the expression set. This can affect performance. The <code>DEFRAG_INDEX</code> procedure rebuilds the bitmap indexes online and thus reduces the fragmentation.</p>
</li>
<li>
<p>Indexes can be defragmented when the expression set is being modified. However, you should schedule defragmentation when the workload is relatively light, such as 2 a.m.</p>
</li>
<li>
<p>See the section on index storage and maintenance in <a class="olink EXPRN026" href="../../appdev.112/e14919/exprn_indexexpressions.htm#EXPRN026"><span class="italic">Oracle Database Rules Manager and Expression Filter Developer's Guide</span></a> for more information about rebuilding indexes.</p>
</li>
<li>
<p>Related views: <a class="olink EXPRN061" href="../../appdev.112/e14919/exprn_views.htm#EXPRN061"><code>USER_EXPFIL_INDEXES</code></a> and <code>USER_INDEXES</code>.</p>
</li>
</ul>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4352"></a>Examples</p>
<p>The following command is issued to defragment the bitmap indexes associated with the Expression Filter index:</p>
<pre>
BEGIN
  DBMS_EXPFIL.DEFRAG_INDEX (idx_name =&gt; 'InterestIndex');
END;
/
 
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS167" class="refsect2"><a id="CJAHJFAD"></a>
<hr />
<h3 class="refsect2"><a id="sthref4353"></a><a id="sthref4354"></a><a id="sthref4355"></a>DROP_ATTRIBUTE_SET Procedure</h3>
<p>This procedure drops an attribute set not being used for any expression set.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4356"></a>Syntax</p>
<pre>
DBMS_EXPFIL.DROP_ATTRIBUTE_SET (
   attr_set   IN   VARCHAR2);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4357"></a>Parameters</p>
<div id="ARPLS66338" class="tblformal">
<p class="titleintable"><a id="sthref4358"></a><a id="sthref4359"></a>Table 65-12 DROP_ATTRIBUTE_SET Procedure Parameter</p>
<table class="cellalignment1229" title="DROP_ATTRIBUTE_SET Procedure Parameter" summary="This table describes the parameters of the DBMS_EXPFIL.DROP_ATTRIBUTE_SET subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t16">Parameter</th>
<th class="cellalignment1227" id="r1c2-t16">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t16" headers="r1c1-t16">
<p><code>attr_set</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t16 r1c2-t16">
<p>Name of the attribute set to be dropped</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4360"></a>Usage Notes</p>
<ul>
<li>
<p>The <code>DROP_ATTRIBUTE_SET</code> procedure drops an attribute set not being used for any expression set. If the attribute set was initially created from an existing object type, the object type remains after dropping the attribute set. Otherwise, the object type is dropped with the attribute set.</p>
</li>
<li>
<p>Related views: <a class="olink EXPRN056" href="../../appdev.112/e14919/exprn_views.htm#EXPRN056"><code>USER_EXPFIL_ATTRIBUTE_SETS</code></a> and <a class="olink EXPRN058" href="../../appdev.112/e14919/exprn_views.htm#EXPRN058"><code>USER_EXPFIL_EXPRESSION_SETS</code></a>.</p>
</li>
</ul>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4361"></a>Examples</p>
<p>Assuming that the attribute set is not used by an Expression column, the following command drops the attribute set:</p>
<pre>
BEGIN
  DBMS_EXPFIL.DROP_ATTRIBUTE_SET(attr_set =&gt; 'Car4Sale');  
END;
/
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS168" class="refsect2"><a id="CIHIJFEE"></a>
<hr />
<h3 class="refsect2"><a id="sthref4362"></a><a id="sthref4363"></a>GET_EXPRSET_STATS Procedure</h3>
<p>This procedure computes the predicate statistics for an expression set and stores them in the expression filter dictionary.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4364"></a>Syntax</p>
<pre>
DBMS_EXPFIL.GET_EXPRSET_STATS (
   expr_tab   IN   VARCHAR2,
   expr_col   IN   VARCHAR2);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4365"></a>Parameters</p>
<div id="ARPLS66339" class="tblformal">
<p class="titleintable"><a id="sthref4366"></a><a id="sthref4367"></a>Table 65-13 GET_EXPRSET_STATS Procedure Parameters</p>
<table class="cellalignment1229" title="GET_EXPRSET_STATS Procedure Parameters" summary="This table describes the parameters of the DBMS_EXPFIL.GET_EXPRSET_STATS subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t17">Parameter</th>
<th class="cellalignment1227" id="r1c2-t17">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t17" headers="r1c1-t17">
<p><code>expr_tab</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t17 r1c2-t17">
<p>Name of table storing the expression set</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t17" headers="r1c1-t17">
<p><code>expr_col</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t17 r1c2-t17">
<p>Name of column in the table that stores the expressions</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4368"></a>Usage Notes</p>
<ul>
<li>
<p>When a representative set of expressions are stored in a table column, you can use predicate statistics for those expressions to configure the corresponding Expression Filter index (using the <code>TOP</code> parameters clause). The <code>GET_EXPRSET_STATS</code> procedure computes the predicate statistics for an expression set and stores them in the expression filter dictionary.</p>
</li>
<li>
<p>See the section on creating an index from statistics in <a class="olink EXPRN024" href="../../appdev.112/e14919/exprn_indexexpressions.htm#EXPRN024"><span class="italic">Oracle Database Rules Manager and Expression Filter Developer's Guide</span></a> for more information about using predicate statistics.</p>
</li>
<li>
<p>Related views: <a class="olink EXPRN058" href="../../appdev.112/e14919/exprn_views.htm#EXPRN058"><code>USER_EXPFIL_EXPRESSION_SETS</code></a> and <a class="olink EXPRN059" href="../../appdev.112/e14919/exprn_views.htm#EXPRN059"><code>USER_EXPFIL_EXPRSET_STATS</code></a>.</p>
</li>
</ul>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4369"></a>Examples</p>
<p>The following command computes the predicate statistics for the expressions stored in the <code>interest</code> column of the <code>consumer</code> table:</p>
<pre>
BEGIN
  DBMS_EXPFIL.GET_EXPRSET_STATS (expr_tab =&gt; 'consumer',
                                 expr_col =&gt; 'interest');
END;
/
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS169" class="refsect2"><a id="CJABDFBH"></a>
<hr />
<h3 class="refsect2"><a id="sthref4370"></a><a id="sthref4371"></a><a id="sthref4372"></a>GRANT_PRIVILEGE Procedure</h3>
<p>This procedure grants privileges on one or more Expression columns to other users.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4373"></a>Syntax</p>
<pre>
DBMS_EXPFIL.GRANT_PRIVILEGE (
   expr_tab   IN  VARCHAR2,
   expr_col   IN  VARCHAR2,
   priv_type  IN  VARCHAR2,
   to_user    IN  VARCHAR2);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4374"></a>Parameters</p>
<div id="ARPLS66340" class="tblformal">
<p class="titleintable"><a id="sthref4375"></a><a id="sthref4376"></a>Table 65-14 GRANT_PRIVILEGE Procedure Parameters</p>
<table class="cellalignment1229" title="GRANT_PRIVILEGE Procedure Parameters" summary="This table describes the parameters of the DBMS_EXPFIL.GRANT_PRIVILEGE subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t18">Parameter</th>
<th class="cellalignment1227" id="r1c2-t18">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t18" headers="r1c1-t18">
<p><code>expr_tab</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t18 r1c2-t18">
<p>Name of table storing the expression set</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t18" headers="r1c1-t18">
<p><code>expr_col</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t18 r1c2-t18">
<p>Name of column in the table that stores the expressions</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r4c1-t18" headers="r1c1-t18">
<p><code>priv_type</code></p>
</td>
<td class="cellalignment1228" headers="r4c1-t18 r1c2-t18">
<p>Type of the privilege to be granted. Valid values: INSERT EXPRESSION, UPDATE EXPRESSION, ALL.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r5c1-t18" headers="r1c1-t18">
<p><code>to_user</code></p>
</td>
<td class="cellalignment1228" headers="r5c1-t18 r1c2-t18">
<p>User to whom the privilege is to be granted</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4377"></a>Usage Notes</p>
<ul>
<li>
<p>The SQL <code>EVALUATE</code> operator evaluates expressions with the privileges of the owner of the table that stores the expressions. The privileges of the user issuing the query are not considered. The owner of the table can insert, update, and delete expressions. Other users must have <code>INSERT</code> and <code>UPDATE</code> privileges for the table and <code>INSERT EXPRESSION</code> and <code>UPDATE EXPRESSION</code> privilege for a specific Expression column in the table.</p>
</li>
<li>
<p>Using the <code>GRANT_PRIVILEGE</code> procedure, the owner of the table can grant <code>INSERT</code> <code>EXPRESSION</code> or <code>UPDATE</code> <code>EXPRESSION</code> privileges on one or more Expression columns to other users. Both the privileges can be granted to a user by specifying <code>ALL</code> for the privilege type.</p>
</li>
<li>
<p>See <a href="#CJABIGJJ">REVOKE_PRIVILEGE Procedure</a> and the section on granting and revoking privileges in <a class="olink EXPRN016" href="../../appdev.112/e14919/exprn_expconcepts.htm#EXPRN016"><span class="italic">Oracle Database Rules Manager and Expression Filter Developer's Guide</span></a> for more information about granting and revoking privileges.</p>
</li>
<li>
<p>Related views: <a class="olink EXPRN058" href="../../appdev.112/e14919/exprn_views.htm#EXPRN058"><code>USER_EXPFIL_EXPRESSION_SETS</code></a> and <a class="olink EXPRN063" href="../../appdev.112/e14919/exprn_views.htm#EXPRN063"><code>USER_EXPFIL_PRIVILEGES</code></a>.</p>
</li>
</ul>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4378"></a>Examples</p>
<p>The owner of <code>consumer</code> table can grant <code>INSERT</code> <code>EXPRESSION</code> privileges to user <code>SCOTT</code> with the following command. User <code>SCOTT</code> should also have <code>INSERT</code> privileges on the table so that he can add new expressions to the set.</p>
<pre>
BEGIN
  DBMS_EXPFIL.GRANT_PRIVILEGE (expr_tab  =&gt; 'consumer',
                               expr_col  =&gt; 'interest',
                               priv_type =&gt; 'INSERT EXPRESSION',
                               to_user   =&gt; 'SCOTT');
END;
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS170" class="refsect2"><a id="CJAEGGHA"></a>
<hr />
<h3 class="refsect2"><a id="sthref4379"></a><a id="sthref4380"></a>INDEX_PARAMETERS Procedure</h3>
<p>This procedure fine-tunes the index parameters for each expression set before index creation.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4381"></a>Syntax</p>
<pre>
DBMS_EXPFIL.INDEX_PARAMETERS (
   expr_tab   IN   VARCHAR2,
   expr_col   IN   VARCHAR2,
   attr_list  IN   EXF$ATTRIBUTE_LIST,
   operation  IN   VARCHAR2 DEFAULT 'ADD');
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4382"></a>Parameters</p>
<div id="ARPLS66341" class="tblformal">
<p class="titleintable"><a id="sthref4383"></a><a id="sthref4384"></a>Table 65-15 INDEX_PARAMETERS Procedure Parameters</p>
<table class="cellalignment1229" title="INDEX_PARAMETERS Procedure Parameters" summary="This table describes the parameters of the DBMS_EXPFIL.INDEX_PARAMETERS subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t19">Parameter</th>
<th class="cellalignment1227" id="r1c2-t19">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t19" headers="r1c1-t19">
<p><code>expr_tab</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t19 r1c2-t19">
<p>Name of table storing the expression set</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t19" headers="r1c1-t19">
<p><code>expr_col</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t19 r1c2-t19">
<p>Name of column in the table that stores the expressions.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r4c1-t19" headers="r1c1-t19">
<p><code>attr_list</code></p>
</td>
<td class="cellalignment1228" headers="r4c1-t19 r1c2-t19">
<p>An instance of <code>EXF$ATTRIBUTE_LIST</code> with a partial list of stored and indexed attributes</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r5c1-t19" headers="r1c1-t19">
<p><code>operation</code></p>
</td>
<td class="cellalignment1228" headers="r5c1-t19 r1c2-t19">
<p>Operation to be performed on the list of index parameters. Default value: <code>ADD</code>. Valid values: <code>ADD</code> and <code>DROP</code>.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4385"></a>Usage Notes</p>
<ul>
<li>
<p>An attribute set can be used by multiple expression sets stored in different columns of user tables. By default, the index parameters associated with the attribute set are used to define an Expression Filter index on an expression set. If you need to fine-tune the index for each expression set, you can specify a small list of the index parameters in the <code>PARAMETERS</code> clause of the <code>CREATE</code> <code>INDEX</code> statement. However, when an Expression Filter index uses a large number of index parameters or if the index is configured for XPath predicates, fine-tuning the parameters with the <code>CREATE</code> <code>INDEX</code> statement is not possible.</p>
</li>
<li>
<p>The <code>INDEX_PARAMETERS</code> procedure fine-tunes the index parameters for each expression set before index creation. This procedure can be used to copy the defaults from the corresponding attribute set and selectively add (or drop) additional index parameters for the expression set. (You use the <code>XPINDEX_PARAMETERS</code> procedure to add and drop XPath index parameters.) The Expression Filter index defined for an expression set with a non-empty list of index parameters always uses these parameters. The <code>INDEX_PARAMETERS</code> procedure cannot be used when the Expression Filter index is already defined for the column storing expressions.</p>
</li>
<li>
<p>The operations allowed with this procedure include:</p>
<ul>
<li>
<p>Deriving the current list of default index parameters (including any XPath-specific parameters) from the corresponding attribute set and assigning them to the specified expression set (a value of <code>DEFAULT</code> for the operation argument).</p>
</li>
<li>
<p>Adding (or dropping) one or more attributes to (or from) the current list of parameters assigned to the expression set (values of <code>ADD</code> or <code>DROP</code> for the operation argument).</p>
</li>
<li>
<p>Clearing the index parameters assigned to the expression set. This enables the user to start using default parameters or tune the parameters from scratch (a value of <code>CLEAR</code> for the operation argument).</p>
</li>
</ul>
<div class="infobox-note">
<p class="notep1">Note:</p>
This procedure is useful only when an attribute set is shared across multiple expression sets. In all other cases, the defaults assigned to the attribute set can be tuned for the expression set using it.</div>
</li>
<li>
<p>See the section on creating an index from exact parameters in <a class="olink EXPRN024" href="../../appdev.112/e14919/exprn_indexexpressions.htm#EXPRN024"><span class="italic">Oracle Database Rules Manager and Expression Filter Developer's Guide</span></a> and <a href="#CJAJGJFE">XPINDEX_PARAMETERS Procedure</a> for more information.</p>
</li>
<li>
<p>Related views: <a class="olink EXPRN058" href="../../appdev.112/e14919/exprn_views.htm#EXPRN058"><code>USER_EXPFIL_EXPRESSION_SETS</code></a>, <a class="olink EXPRN057" href="../../appdev.112/e14919/exprn_views.htm#EXPRN057"><code>USER_EXPFIL_DEF_INDEX_PARAMS</code></a> and <a class="olink EXPRN060" href="../../appdev.112/e14919/exprn_views.htm#EXPRN060"><code>USER_EXPFIL_INDEX_PARAMS</code></a>.</p>
</li>
</ul>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4386"></a>Examples</p>
<p>The following command synchronizes the expression set's index parameters with the defaults associated with the corresponding attribute set:</p>
<pre>
BEGIN
  DBMS_EXPFIL.INDEX_PARAMETERS(expr_tab  =&gt; 'consumer',
                               expr_col  =&gt; 'interest',
                               attr_list =&gt; null, 
                               operation =&gt; 'DEFAULT');
END;
/
</pre>
<p>The following command adds a stored attribute to the expression set's index parameters.</p>
<pre>
BEGIN
  DBMS_EXPFIL.INDEX_PARAMETERS(expr_tab  =&gt; 'consumer',
                               expr_col  =&gt; 'interest',
                               attr_list =&gt;
                                exf$attribute_list (
                                 exf$attribute (
                                   attr_name =&gt; 'CrashTestRating(Model, Year)',
                                   attr_oper =&gt; exf$indexoper('all'),
                                   attr_indexed =&gt; 'FALSE')),
                               operation =&gt; 'ADD');
END;
/
</pre>
<p>The following command clears the index parameters associated with the expression set:</p>
<pre>
BEGIN
  DBMS_EXPFIL.INDEX_PARAMETERS(expr_tab  =&gt; 'consumer',
                               expr_col  =&gt; 'interest',
                               attr_list =&gt; null, 
                               operation =&gt; 'CLEAR');
END;
/
</pre>
<p>A subsequent index creation will use the default index parameters assigned to the corresponding attribute set.</p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS280" class="refsect2"><a id="CACFHJDG"></a>
<hr />
<h3 class="refsect2"><a id="sthref4387"></a><a id="sthref4388"></a>MODIFY_OPERATOR_LIST Procedure</h3>
<p>This procedure modifies the list of common operators associated with a certain attribute in the attribute set.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4389"></a>Syntax</p>
<pre>
DBMS_EXPFIL.MODIFY_OPERATOR_LIST (
   attr_set   IN   VARCHAR2,
   attr_name  IN   VARCHAR2,
   attr_oper  IN   EXF$INDEXOPER);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4390"></a>Parameters</p>
<div id="ARPLS66342" class="tblformal">
<p class="titleintable"><a id="sthref4391"></a><a id="sthref4392"></a>Table 65-16 MODIFY_OPERATOR_LIST Procedure Parameters</p>
<table class="cellalignment1229" title="MODIFY_OPERATOR_LIST Procedure Parameters" summary="This table describes the parameters of the DBMS_EXPFIL.REVOKE_PRIVILEGE subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t21">Parameter</th>
<th class="cellalignment1227" id="r1c2-t21">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t21" headers="r1c1-t21">
<p><code>attr_set</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t21 r1c2-t21">
<p>Name of the attribute set</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t21" headers="r1c1-t21">
<p><code>attr_name</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t21 r1c2-t21">
<p>Name of the stored or indexed attribute being modified</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r4c1-t21" headers="r1c1-t21">
<p><code>attr_oper</code></p>
</td>
<td class="cellalignment1228" headers="r4c1-t21 r1c2-t21">
<p>New list of operators that are frequently used in the predicates with the attribute</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4393"></a>Usage Notes</p>
<ul>
<li>
<p>The <code>MODIFY_OPERATOR_LIST</code> procedure modifies the operator list for the stored and indexed attributes defined in the default index parameters of the attribute set. Existing Expression Filter indexes are not affected when an attribute's operator list is modified. The updated index defaults are used when a new Expression Filter index is created or when an existing index is rebuilt.</p>
</li>
<li>
<p>Related views: <a class="olink EXPRN057" href="../../appdev.112/e14919/exprn_views.htm#EXPRN057"><code>USER_EXPFIL_DEF_INDEX_PARAMS</code></a></p>
</li>
</ul>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4394"></a>Examples</p>
<p>The following command modifies the operator list associated with the <code>HorsePower(Model,Year)</code> attribute defined in the <code>Car4Sale</code> attribute set.</p>
<pre>
BEGIN
  DBMS_EXPFIL.MODIFY_OPERATOR_LIST (
    attr_set =&gt; 'Car4Sale',
    attr_name =&gt; 'HorsePower(Model, Year)',
    attr_oper =&gt; exf$indexoper('=','&lt;','&gt;', 'between'));
END;
/
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS171" class="refsect2"><a id="CJABIGJJ"></a>
<hr />
<h3 class="refsect2"><a id="sthref4395"></a><a id="sthref4396"></a><a id="sthref4397"></a>REVOKE_PRIVILEGE Procedure</h3>
<p>This procedure revokes an expression privilege previously granted by the owner.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4398"></a>Syntax</p>
<pre>
DBMS_EXPFIL.REVOKE_PRIVILEGE (
   expr_tab   IN  VARCHAR2,
   expr_col   IN  VARCHAR2,
   priv_type  IN  VARCHAR2,
   from_user  IN  VARCHAR2);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4399"></a>Parameters</p>
<div id="ARPLS66343" class="tblformal">
<p class="titleintable"><a id="sthref4400"></a><a id="sthref4401"></a>Table 65-17 REVOKE_PRIVILEGE Procedure Parameters</p>
<table class="cellalignment1229" title="REVOKE_PRIVILEGE Procedure Parameters" summary="This table describes the parameters of the DBMS_EXPFIL.REVOKE_PRIVILEGE subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t22">Parameter</th>
<th class="cellalignment1227" id="r1c2-t22">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t22" headers="r1c1-t22">
<p><code>expr_tab</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t22 r1c2-t22">
<p>Name of table storing the expression set</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t22" headers="r1c1-t22">
<p><code>expr_col</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t22 r1c2-t22">
<p>Name of column in the table that stores the expressions</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r4c1-t22" headers="r1c1-t22">
<p><code>priv_type</code></p>
</td>
<td class="cellalignment1228" headers="r4c1-t22 r1c2-t22">
<p>Type of privilege to be revoked</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r5c1-t22" headers="r1c1-t22">
<p><code>from_user</code></p>
</td>
<td class="cellalignment1228" headers="r5c1-t22 r1c2-t22">
<p>User from whom the privilege is to be revoked</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4402"></a>Usage Notes</p>
<ul>
<li>
<p>See <a href="#CJABDFBH">GRANT_PRIVILEGE Procedure</a> and the section on granting and revoking privileges in <a class="olink EXPRN016" href="../../appdev.112/e14919/exprn_expconcepts.htm#EXPRN016"><span class="italic">Oracle Database Rules Manager and Expression Filter Developer's Guide</span></a> for more information about granting and revoking privileges.</p>
</li>
<li>
<p>Related views: <a class="olink EXPRN058" href="../../appdev.112/e14919/exprn_views.htm#EXPRN058"><code>USER_EXPFIL_EXPRESSION_SETS</code></a> and <a class="olink EXPRN063" href="../../appdev.112/e14919/exprn_views.htm#EXPRN063"><code>USER_EXPFIL_PRIVILEGES</code></a>.</p>
</li>
</ul>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4403"></a>Examples</p>
<p>The following command revokes the <code>INSERT EXPRESSION</code> privilege on the <code>interest</code> column of the <code>consumer</code> table from user <code>SCOTT</code>:</p>
<pre>
BEGIN
  DBMS_EXPFIL.REVOKE_PRIVILEGE (expr_tab  =&gt; 'consumer',
                                expr_col  =&gt; 'interest',
                                priv_type =&gt; 'INSERT EXPRESSION',
                                 from_user =&gt; 'SCOTT');
END;/
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS282" class="refsect2"><a id="CACIJHCE"></a>
<hr />
<h3 class="refsect2"><a id="sthref4404"></a><a id="sthref4405"></a>SYNC_TEXT_INDEXES Procedure</h3>
<p>This procedure synchronizes the indexes defined to process the predicates involving the <code>CONTAINS</code> operator in stored expressions.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4406"></a>Syntax</p>
<pre>
DBMS_EXPFIL.SYNC_TEXT_INDEXES (
     expr_tab   IN   VARCHAR2);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4407"></a>Parameters</p>
<div id="ARPLS66344" class="tblformal">
<p class="titleintable"><a id="sthref4408"></a><a id="sthref4409"></a>Table 65-18 SYNC_TEXT_INDEXES Procedure Parameters</p>
<table class="cellalignment1229" title="SYNC_TEXT_INDEXES Procedure Parameters" summary="This table describes the parameters of the DBMS_EXPFIL.SYNC_TEXT_INDEXES subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t23">Parameter</th>
<th class="cellalignment1227" id="r1c2-t23">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t23" headers="r1c1-t23">
<p><code>expr_tab</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t23 r1c2-t23">
<p>Name of table with expression columns containing text predicates</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4410"></a>Usage Notes</p>
<ul>
<li>
<p>When an expression filter index is defined on a column storing expressions, any text predicates in the expressions are indexed using a <code>CTXRULE</code> index. Unlike the other types of indexes (bitmap for scalar and XML predicates or spatial for spatial predicates) used to process the predicates in the expression set, the <code>CTXRULE</code> index defined to process the text predicates is not transactional in nature. That is, when the text predicates are updated with DML operations on the table storing expressions, the new predicates are not automatically reflected in the corresponding <code>CTXRULE</code> index. This could result in inconsistent results until the <code>CTXRULE</code> index is synchronized. This procedure can be used to synchronize all the <code>CTXRULE</code> indexes associated with a table with one or more expression columns. This procedure identifies all the <code>CTXRULE</code> indexes and invokes the CTX_DDL.SYNC_INDEX procedure on each of these indexes.</p>
<p>You must have the <code>EXECUTE</code> privilege on the CTX_DDL package for successful synchronization of the text indexes.</p>
</li>
</ul>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4411"></a>Examples</p>
<p>The following command synchronizes the text indexes associated with the expression columns in the <code>consumer</code> table:</p>
<pre>
BEGIN
  DBMS_EXPFIL.SYNC_TEXT_INDEXES (expr_tab =&gt; 'consumer');
END;
/
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS172" class="refsect2"><a id="CJADGDFB"></a>
<hr />
<h3 class="refsect2"><a id="sthref4412"></a><a id="sthref4413"></a>UNASSIGN_ATTRIBUTE_SET Procedure</h3>
<p>This procedure unassigns an attribute set from a column storing expressions.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4414"></a>Syntax</p>
<pre>
DBMS_EXPFIL.UNASSIGN_ATTRIBUTE_SET (
   expr_tab   IN   VARCHAR2,
   expr_col   IN   VARCHAR2);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4415"></a>Parameters</p>
<div id="ARPLS66345" class="tblformal">
<p class="titleintable"><a id="sthref4416"></a><a id="sthref4417"></a>Table 65-19 UNASSIGN_ATTRIBUTE_SET Procedure Parameters</p>
<table class="cellalignment1229" title="UNASSIGN_ATTRIBUTE_SET Procedure Parameters" summary="This table describes the parameters of the DBMS_EXPFIL.UNASSIGN_ATTRIBUTE_SET subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t24">Parameter</th>
<th class="cellalignment1227" id="r1c2-t24">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t24" headers="r1c1-t24">
<p><code>expr_tab</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t24 r1c2-t24">
<p>Name of table storing the expression set</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t24" headers="r1c1-t24">
<p><code>expr_col</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t24 r1c2-t24">
<p>Name of column in the table that stores the expressions</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4418"></a>Usage Notes</p>
<ul>
<li>
<p>A column of an expression data type can be converted back to a <code>VARCHAR2</code> type by unassigning the attribute set. You can unassign an attribute set from a column storing expressions if an Expression Filter index is not defined on the column.</p>
</li>
<li>
<p>See <a href="#CJAFAGID">ASSIGN_ATTRIBUTE_SET Procedure</a> for information about assigning attribute sets.</p>
</li>
<li>
<p>Related views: <a class="olink EXPRN058" href="../../appdev.112/e14919/exprn_views.htm#EXPRN058"><code>USER_EXPFIL_EXPRESSION_SETS</code></a> and <a class="olink EXPRN061" href="../../appdev.112/e14919/exprn_views.htm#EXPRN061"><code>USER_EXPFIL_INDEXES</code></a>.</p>
</li>
</ul>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4419"></a>Examples</p>
<p>The following command unassigns the attribute set previously assigned to the <code>interest</code> column of the <code>consumer</code> table. (See the section on bulk loading of expression data in <a class="olink EXPRN040" href="../../appdev.112/e14919/exprn_utilities.htm#EXPRN040"><span class="italic">Oracle Database Rules Manager and Expression Filter Developer's Guide</span></a>.)</p>
<pre>
BEGIN
  DBMS_EXPFIL.UNASSIGN_ATTRIBUTE_SET (expr_tab =&gt; 'consumer',
                                      expr_col =&gt; 'interest');
END;
/ 
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS173" class="refsect2"><a id="CJAHCFCA"></a>
<hr />
<h3 class="refsect2"><a id="sthref4420"></a><a id="sthref4421"></a>VALIDATE_EXPRESSIONS Procedure</h3>
<p>This procedure validates all the expressions in a set.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4422"></a>Syntax</p>
<pre>
DBMS_EXPFIL.VALIDATE_EXPRESSIONS (
   expr_tab      IN  VARCHAR2,
   expr_col      IN  VARCHAR2,
   exception_tab IN  VARCHAR2 DEFAULT NULL);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4423"></a>Parameters</p>
<div id="ARPLS66346" class="tblformal">
<p class="titleintable"><a id="sthref4424"></a><a id="sthref4425"></a>Table 65-20 VALIDATE_EXPRESSIONS Procedure Parameters</p>
<table class="cellalignment1229" title="VALIDATE_EXPRESSIONS Procedure Parameters" summary="This table describes the parameters of the DBMS_EXPFIL.VALIDATE_EXPRESSIONS subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t25">Parameter</th>
<th class="cellalignment1227" id="r1c2-t25">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t25" headers="r1c1-t25">
<p><code>expr_tab</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t25 r1c2-t25">
<p>Name of table storing the expression set</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t25" headers="r1c1-t25">
<p><code>expr_col</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t25 r1c2-t25">
<p>Name of column in the table that stores the expressions</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r4c1-t25" headers="r1c1-t25">
<p><code>exception_tab</code></p>
</td>
<td class="cellalignment1228" headers="r4c1-t25 r1c2-t25">
<p>Name of the exception table. This table is created using the <code>BUILD_EXCEPTIONS_TABLE</code> procedure.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4426"></a>Usage Notes</p>
<ul>
<li>
<p>The expressions stored in a table may have references to schema objects like user-defined functions and tables. When these schema objects are dropped or modified, the expressions could become invalid and the subsequent evaluation (query with <code>EVALUATE</code> operator) could fail.</p>
</li>
<li>
<p>By default, the expression validation procedure fails on the first expression that is invalid. Optionally, the caller can pass an exception table to store references to all the invalid expressions. In addition to validating expressions in the set, this procedure validates the parameters (stored and indexed attributes) of the associated index and the approved list of user-defined functions. Any errors in the index parameters or the user-defined function list are immediately reported to the caller.</p>
</li>
<li>
<p>See the section on evaluation semantics in <a class="olink EXPRN015" href="../../appdev.112/e14919/exprn_expconcepts.htm#EXPRN015"><span class="italic">Oracle Database Rules Manager and Expression Filter Developer's Guide</span></a> and <a href="#CJADCEED">BUILD_EXCEPTIONS_TABLE Procedure</a> for more information.</p>
</li>
<li>
<p>Related views: <a class="olink EXPRN058" href="../../appdev.112/e14919/exprn_views.htm#EXPRN058"><code>USER_EXPFIL_EXPRESSION_SETS</code></a>, <a class="olink EXPRN054" href="../../appdev.112/e14919/exprn_views.htm#EXPRN054"><code>USER_EXPFIL_ASET_FUNCTIONS</code></a>, and <a class="olink EXPRN062" href="../../appdev.112/e14919/exprn_views.htm#EXPRN062"><code>USER_EXPFIL_PREDTAB_ATTRIBUTES</code></a>.</p>
</li>
</ul>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4427"></a>Examples</p>
<p>The following command validates the expressions stored in the <code>interest</code> column of the <code>consumer</code> table.</p>
<pre>
BEGIN
  DBMS_EXPFIL.VALIDATE_EXPRESSIONS (expr_tab =&gt; 'consumer',
                                    expr_col =&gt; 'interest');
END;
/ 
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS174" class="refsect2"><a id="CJAJGJFE"></a>
<hr />
<h3 class="refsect2"><a id="sthref4428"></a><a id="sthref4429"></a>XPINDEX_PARAMETERS Procedure</h3>
<p>This procedure is used in conjunction with the <code>INDEX_PARAMETERS</code> procedure to fine-tune the XPath-specific index parameters for each expression set.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4430"></a>Syntax</p>
<pre>
DBMS_EXPFIL.XPINDEX_PARAMETERS (
   expr_tab   IN   VARCHAR2,
   expr_col   IN   VARCHAR2,
   xmlt_attr  IN   VARCHAR2,
   xptag_list IN   EXF$XPATH_TAGS,
   operation  IN   VARCHAR2 DEFAULT 'ADD');
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4431"></a>Parameters</p>
<div id="ARPLS66347" class="tblformal">
<p class="titleintable"><a id="sthref4432"></a><a id="sthref4433"></a>Table 65-21 XPINDEX_PARAMETERS Procedure Parameters</p>
<table class="cellalignment1229" title="XPINDEX_PARAMETERS Procedure Parameters" summary="This table describes the parameters of the DBMS_EXPFIL.XPINDEX_PARAMETERS subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t26">Parameter</th>
<th class="cellalignment1227" id="r1c2-t26">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t26" headers="r1c1-t26">
<p><code>exp_tab</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t26 r1c2-t26">
<p>Name of table storing the expression set</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t26" headers="r1c1-t26">
<p><code>expr_col</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t26 r1c2-t26">
<p>Name of column in the table that stores the expressions</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r4c1-t26" headers="r1c1-t26">
<p><code>xmlt_attr</code></p>
</td>
<td class="cellalignment1228" headers="r4c1-t26 r1c2-t26">
<p>Name of the attribute with the <code>XMLType</code> datatype</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r5c1-t26" headers="r1c1-t26">
<p><code>xptag_list</code></p>
</td>
<td class="cellalignment1228" headers="r5c1-t26 r1c2-t26">
<p>An instance of <code>EXF$XPATH_TAGS</code> type with a partial list of XML elements and attributes</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r6c1-t26" headers="r1c1-t26">
<p><code>operation</code></p>
</td>
<td class="cellalignment1228" headers="r6c1-t26 r1c2-t26">
<p>Operation to be performed on the list of index parameters. Default value: <code>ADD</code>. Valid values: <code>ADD</code> and <code>DROP</code>.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4434"></a>Usage Notes</p>
<ul>
<li>
<p>When an attribute set is shared by multiple expression sets, the <code>INDEX_PARAMETERS</code> procedure can be used to tune the simple (non-XPath) index parameters for each expression set. The <code>XPINDEX_PARAMETERS</code> procedure is used in conjunction with the <code>INDEX_PARAMETERS</code> procedure to fine-tune the XPath-specific index parameters for each expression set.</p>
</li>
<li>
<p>See also <a href="#CJAEGGHA">INDEX_PARAMETERS Procedure</a> and the section on index tuning for XPath predicates in <a class="olink EXPRN033" href="../../appdev.112/e14919/exprn_xpathpredicates.htm#EXPRN033"><span class="italic">Oracle Database Rules Manager and Expression Filter Developer's Guide</span></a> for more information.</p>
</li>
<li>
<p>Related views: <a class="olink EXPRN055" href="../../appdev.112/e14919/exprn_views.htm#EXPRN055"><code>USER_EXPFIL_ATTRIBUTES</code></a>, <a class="olink EXPRN057" href="../../appdev.112/e14919/exprn_views.htm#EXPRN057"><code>USER_EXPFIL_DEF_INDEX_PARAMS</code></a>, and <a class="olink EXPRN060" href="../../appdev.112/e14919/exprn_views.htm#EXPRN060"><code>USER_EXPFIL_INDEX_PARAMS</code></a>.</p>
<div align="center">
<div class="inftblinformal"><br />
<table class="cellalignment1235">
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228">
<p class="notep1">Note:</p>
The values assigned to the <code>tag_name</code> argument of <code>exf$xpath_tag</code> type are case-sensitive.</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" --></div>
</li>
</ul>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4435"></a>Examples</p>
<p>The following command synchronizes the index parameters of the expression set (XPath and non-XPath) with the defaults associated with the corresponding attribute set:</p>
<pre>
BEGIN
  DBMS_EXPFIL.INDEX_PARAMETERS(expr_tab  =&gt; 'consumer',
                               expr_col  =&gt; 'interest',
                               attr_list =&gt; null, 
                               operation =&gt; 'DEFAULT');
END;
/
</pre>
<p>The following command adds an XPath-specific index parameter to the expression set:</p>
<pre>
BEGIN
  DBMS_EXPFIL.XPINDEX_PARAMETERS(expr_tab   =&gt; 'consumer',
                                 expr_col   =&gt; 'interest',
                                 xmlt_attr  =&gt; 'details',
                                 xptag_list =&gt;
                                  exf$xpath_tags(
                                   exf$xpath_tag(tag_name    =&gt; 'GPS',
                                                 tag_indexed =&gt; 'TRUE',
                                                 tag_type    =&gt; NULL)),
                                 operation  =&gt; 'ADD');
END;
/
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" --></div>
<!-- class="refsect1" --></div>
<!-- class="refentry" --></div>
<!-- class="chapter" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment1219">
<tr>
<td class="cellalignment1228">
<table class="cellalignment1224">
<tr>
<td class="cellalignment1223"><a href="d_errlog.htm"><img width="24" height="24" src="../../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment1223"><a href="d_fga.htm"><img width="24" height="24" src="../../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;1996, 2013,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment1231">
<table class="cellalignment1222">
<tr>
<td class="cellalignment1223"><a href="../../index.htm"><img width="24" height="24" src="../../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment1223"><a href="../../nav/portal_booklist.htm"><img width="24" height="24" src="../../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment1223"><a href="toc.htm"><img width="24" height="24" src="../../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment1223"><a href="index.htm"><img width="24" height="24" src="../../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment1223"><a href="../../nav/mindx.htm"><img width="24" height="24" src="../../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment1223"><a href="../../dcommon/html/feedback.htm"><img width="24" height="24" src="../../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>
</body>
</html>
