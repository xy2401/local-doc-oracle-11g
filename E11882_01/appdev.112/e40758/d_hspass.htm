<!DOCTYPE html>
<html lang="en" >
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1">
<meta charset="utf-8">
<title>DBMS_HS_PASSTHROUGH</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Version 5.1.2 Build 737" />
<meta name="dcterms.created" content="2013-07-19T18:55:14Z" />
<meta name="robots" content="all" />
<meta name="dcterms.title" content="Database PL/SQL Packages and Types Reference" />
<meta name="dcterms.identifier" content="E40758-03" />
<meta name="dcterms.isVersionOf" content="ARPLS" />
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;1996, 2013,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved." />
<link rel="Start" href="../../index.htm" title="Home" type="text/html" />
<link rel="Copyright" href="../../dcommon/html/cpyr.htm" title="Copyright" type="text/html" />

<script type="application/javascript"  src="../../dcommon/js/headfoot.js"></script>
<script type="application/javascript"  src="../../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html" />
<link rel="Index" href="index.htm" title="Index" type="text/html" />
<link rel="Prev" href="d_hsparallel.htm" title="Previous" type="text/html" />
<link rel="Next" href="d_iot.htm" title="Next" type="text/html" />
<link rel="alternate" href="../e40758.pdf" title="PDF version" type="application/pdf" />
<link rel="schema.dcterms" href="http://purl.org/dc/terms/" />
<link rel="stylesheet" href="../../dcommon/css/fusiondoc.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/header.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/footer.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/fonts.css">
<link rel="stylesheet" href="../../dcommon/css/foundation.css">
<link rel="stylesheet" href="../../dcommon/css/codemirror.css">
<link rel="stylesheet" type="text/css" title="Default" href="../../nav/css/html5.css">
<link rel="stylesheet" href="../../dcommon/css/respond-480-tablet.css">
<link rel="stylesheet" href="../../dcommon/css/respond-768-laptop.css">
<link rel="stylesheet" href="../../dcommon/css/respond-1140-deskop.css">
<script type="application/javascript" src="../../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">79/265</span> <!-- End Header -->
<div id="ARPLS017" class="chapter"><a id="CHDEEGAF"></a>
<h1 class="chapter"><span class="secnum">75</span> DBMS_HS_PASSTHROUGH</h1>
<p>The <code>DBMS_HS_PASSTHROUGH</code> PL/SQL package allows you to send a statement directly to a non-Oracle sys<a id="sthref4719"></a>tem without being interpreted by the Oracle server. This can be useful if the non-Oracle system allows operations in statements for which there is no equivalent in Oracle.</p>
<p>This chapter discusses the following topics:</p>
<ul>
<li>
<p><a href="#BEICCAAA">Using DBMS_HS_PASSTHROUGH</a></p>
<ul>
<li>
<p>Overview</p>
</li>
<li>
<p>Operational Notes</p>
</li>
</ul>
</li>
<li>
<p><a href="#BEIIHDFI">Summary of DBMS_HS_PASSTHROUGH Subprograms</a></p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink HETER" href="../../server.112/e11050/toc.htm"><span class="italic">Oracle Database Heterogeneous Connectivity User's Guide</span></a> for more information about this package</div>
</li>
</ul>
<div class="refentry"><a id="BEICCAAA"></a>
<hr />
<div id="ARPLS72925" class="refsect1"><!-- infolevel="all" infotype="General" -->
<h2 class="refsect1">Using DBMS_HS_PASSTHROUGH</h2>
<p>This section contains topics which relate to using the <code>DBMS_HS_PASSTHROUGH</code> package.</p>
<div id="ARPLS72926" class="refsect2">
<hr />
<a id="sthref4720"></a>
<h3 class="refsect2">Overview</h3>
<p>You can execute passthrough SQL statements directly at the non-Oracle system using the PL/SQL package <code>DBMS_HS_PASSTHROUGH</code>. Any statement executed with this package is executed in the same transaction as standard SQL statements.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink DMCON001" href="../../datamine.112/e16808/intro_concepts.htm#DMCON001"><span class="italic">Oracle Database Heterogeneous Connectivity User's Guide</span></a> for information about this package</div>
</div>
<!-- class="refsect2" -->
<div id="ARPLS72927" class="refsect2">
<hr />
<a id="sthref4721"></a>
<h3 class="refsect2">Operational Notes</h3>
<p>The <code>DBMS_HS_PASSTHROUGH</code> package is a virtual package. It conceptually resides at the non-Oracle system. In reality, however, calls to this package are intercepted by Heterogeneous Services and mapped to one or more Heterogeneous Services calls. The driver, in turn, maps these Heterogeneous Services calls to the API of the non-Oracle system. The client application should invoke the procedures in the package through a database link in exactly the same way as it would invoke a non-Oracle system stored procedure. The special processing done by Heterogeneous Services is transparent to the user.</p>
</div>
<!-- class="refsect2" --></div>
<!-- class="refsect1" --></div>
<!-- class="refentry" -->
<div class="refentry"><a id="BEIIHDFI"></a>
<hr />
<div id="ARPLS66443" class="refsect1">
<h2 class="refsect1">Summary of DBMS_HS_PASSTHROUGH Subprograms</h2>
<div id="ARPLS72928" class="tblformal">
<p class="titleintable"><a id="sthref4722"></a><a id="sthref4723"></a>Table 75-1 <span class="bolditalic">DBMS_HS_PASSTHROUGH Package Subprograms</span></p>
<table class="cellalignment1229" title="DBMS_HS_PASSTHROUGH Package Subprograms " summary="This table lists the DBMS_HS_PASSTHROUGH subprograms in alphabetical order and briefly describes them." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t4">Subprogram</th>
<th class="cellalignment1227" id="r1c2-t4">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t4" headers="r1c1-t4">
<p><a href="#i997192">BIND_INOUT_VARIABLE Procedure</a></p>
</td>
<td class="cellalignment1228" headers="r2c1-t4 r1c2-t4">
<p>Binds <code>IN</code> <code>OUT</code> bind variables</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t4" headers="r1c1-t4">
<p><a href="#i997273">BIND_INOUT_VARIABLE_RAW Procedure</a></p>
</td>
<td class="cellalignment1228" headers="r3c1-t4 r1c2-t4">
<p>Binds <code>IN</code> <code>OUT</code> bind variables of data type <code>RAW</code></p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r4c1-t4" headers="r1c1-t4">
<p><a href="#BEIHAABB">BIND_OUT_VARIABLE Procedure</a></p>
</td>
<td class="cellalignment1228" headers="r4c1-t4 r1c2-t4">
<p>Binds an <code>OUT</code> variable with a PL/SQL program variable</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r5c1-t4" headers="r1c1-t4">
<p><a href="#i997126">BIND_OUT_VARIABLE_RAW Procedure</a></p>
</td>
<td class="cellalignment1228" headers="r5c1-t4 r1c2-t4">
<p>Binds an <code>OUT</code> variable of data type <code>RAW</code> with a PL/SQL program variable</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r6c1-t4" headers="r1c1-t4">
<p><a href="#BEIFIAGH">BIND_VARIABLE Procedure</a></p>
</td>
<td class="cellalignment1228" headers="r6c1-t4 r1c2-t4">
<p>Binds an <code>IN</code> variable positionally with a PL/SQL program variable</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r7c1-t4" headers="r1c1-t4">
<p><a href="#i996981">BIND_VARIABLE_RAW Procedure</a></p>
</td>
<td class="cellalignment1228" headers="r7c1-t4 r1c2-t4">
<p>Binds <code>IN</code> variables of type <code>RAW</code></p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r8c1-t4" headers="r1c1-t4">
<p><a href="#i997341">CLOSE_CURSOR Procedure</a></p>
</td>
<td class="cellalignment1228" headers="r8c1-t4 r1c2-t4">
<p>Closes the cursor and releases associated memory after the SQL statement has been run at the non-Oracle system</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r9c1-t4" headers="r1c1-t4">
<p><a href="#i997379">EXECUTE_IMMEDIATE Procedure</a></p>
</td>
<td class="cellalignment1228" headers="r9c1-t4 r1c2-t4">
<p>Runs a (non-<code>SELECT</code>) SQL statement immediately, without bind variables</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r10c1-t4" headers="r1c1-t4">
<p><a href="#i997426">EXECUTE_NON_QUERY Function</a></p>
</td>
<td class="cellalignment1228" headers="r10c1-t4 r1c2-t4">
<p>Runs a (non-<code>SELECT</code>) SQL statement</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r11c1-t4" headers="r1c1-t4">
<p><a href="#BEIDJGGB">FETCH_ROW Function</a></p>
</td>
<td class="cellalignment1228" headers="r11c1-t4 r1c2-t4">
<p>Fetches rows from a query</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r12c1-t4" headers="r1c1-t4">
<p><a href="#BEIHICII">GET_VALUE Procedure</a></p>
</td>
<td class="cellalignment1228" headers="r12c1-t4 r1c2-t4">
<p>Retrieves column value from <code>SELECT</code> statement, or retrieves <code>OUT</code> bind parameters</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r13c1-t4" headers="r1c1-t4">
<p><a href="#i997609">GET_VALUE_RAW Procedure</a></p>
</td>
<td class="cellalignment1228" headers="r13c1-t4 r1c2-t4">
<p>Similar to <code>GET_VALUE</code>, but for data type <code>RAW</code></p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r14c1-t4" headers="r1c1-t4">
<p><a href="#BEIHJIAB">OPEN_CURSOR Function</a></p>
</td>
<td class="cellalignment1228" headers="r14c1-t4 r1c2-t4">
<p>Opens a cursor for running a passthrough SQL statement at the non-Oracle system</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r15c1-t4" headers="r1c1-t4">
<p><a href="#i997699">PARSE Procedure</a></p>
</td>
<td class="cellalignment1228" headers="r15c1-t4 r1c2-t4">
<p>Parses SQL statement at non-Oracle system</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<div id="ARPLS66445" class="refsect2"><a id="i997192"></a>
<hr />
<h3 class="refsect2"><a id="sthref4724"></a>BIND_INOUT_VARIABLE Procedure</h3>
<p>This procedure binds <code>IN</code> <code>OUT</code> bind variables.</p>
<div id="ARPLS66446" class="refsect3"><a id="sthref4725"></a>
<h4 class="refsect3">Syntax</h4>
<pre>
DBMS_HS_PASSTHROUGH.BIND_INOUT_VARIABLE (
   c     IN     BINARY_INTEGER NOT NULL,
   p     IN     BINARY_INTEGER NOT NULL,
   v     IN OUT &lt;dty&gt;,
   n     IN     VARCHAR2);
</pre>
<p><code>&lt;dty&gt;</code> is either <code>DATE</code>, <code>NUMBER</code>, or <code>VARCHAR2</code>.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
For binding <code>IN</code> <code>OUT</code> variables of data type <code>RAW</code> see <a href="#i997273">BIND_INOUT_VARIABLE_RAW Procedure</a>.</div>
</div>
<!-- class="refsect3" -->
<div id="ARPLS66447" class="refsect3"><a id="sthref4726"></a>
<h4 class="refsect3">Parameters</h4>
<div id="ARPLS66448" class="tblformal">
<p class="titleintable"><a id="sthref4727"></a><a id="sthref4728"></a>Table 75-2 BIND_INOUT_VARIABLE Procedure Parameters</p>
<table class="cellalignment1229" title="BIND_INOUT_VARIABLE Procedure Parameters" summary="This table describes the parameters of DBMS_HS_PASSTHROUGH.BIND_INOUT_VARIABLE." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t6">Parameter</th>
<th class="cellalignment1227" id="r1c2-t6">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t6" headers="r1c1-t6">
<p><code>c</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t6 r1c2-t6">
<p>Cursor associated with the passthrough SQL statement. Cursor must be opened and parsed, using the routines <code>OPEN_CURSOR</code> and <code>PARSE</code> respectively.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t6" headers="r1c1-t6">
<p><code>p</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t6 r1c2-t6">
<p>Position of the bind variable in the SQL statement: Starts at 1.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r4c1-t6" headers="r1c1-t6">
<p><code>v</code></p>
</td>
<td class="cellalignment1228" headers="r4c1-t6 r1c2-t6">
<p>This value is used for two purposes:</p>
<p>- To provide the IN value before the SQL statement is run.</p>
<p>- To determine the size of the out value.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r5c1-t6" headers="r1c1-t6">
<p><code>n</code></p>
</td>
<td class="cellalignment1228" headers="r5c1-t6 r1c2-t6">
<p>(Optional) Name of the bind variable.</p>
<p>For example, in <code>SELECT * FROM emp WHERE ename=:ename</code>, the position of the bind variable :<code>ename</code> is 1, the name is :<code>ename</code>. This parameter can be used if the non-Oracle system supports "named binds" instead of positional binds. Passing the position is still required.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsect3" -->
<div id="ARPLS66449" class="refsect3"><a id="sthref4729"></a>
<h4 class="refsect3">Exceptions</h4>
<div id="ARPLS66450" class="tblformal">
<p class="titleintable"><a id="sthref4730"></a><a id="sthref4731"></a>Table 75-3 BIND_INOUT_VARIABLE Procedure Exceptions</p>
<table class="cellalignment1229" title="BIND_INOUT_VARIABLE Procedure Exceptions" summary="This table describes the Exceptions for BIND_INOUT_VARIABLE." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t7">Exception</th>
<th class="cellalignment1227" id="r1c2-t7">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t7" headers="r1c1-t7">
<p><code>ORA-28550</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t7 r1c2-t7">
<p>The cursor passed is invalid.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t7" headers="r1c1-t7">
<p><code>ORA-28552</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t7 r1c2-t7">
<p>Procedure is not run in right order. (Did you first open the cursor and parse the SQL statement?)</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r4c1-t7" headers="r1c1-t7">
<p><code>ORA-28553</code></p>
</td>
<td class="cellalignment1228" headers="r4c1-t7 r1c2-t7">
<p>The position of the bind variable is out of range.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r5c1-t7" headers="r1c1-t7">
<p><code>ORA-28555</code></p>
</td>
<td class="cellalignment1228" headers="r5c1-t7 r1c2-t7">
<p>A <code>NULL</code> value was passed for a <code>NOT</code> <code>NULL</code> parameter.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsect3" -->
<div id="ARPLS66451" class="refsect3"><a id="sthref4732"></a>
<h4 class="refsect3">Pragmas</h4>
<pre>
Purity level defined : WNDS, RNDS
</pre></div>
<!-- class="refsect3" --></div>
<!-- class="refsect2" -->
<div id="ARPLS66452" class="refsect2"><a id="i997273"></a>
<hr />
<h3 class="refsect2"><a id="sthref4733"></a>BIND_INOUT_VARIABLE_RAW Procedure</h3>
<p>This procedure binds <code>IN</code> <code>OUT</code> bind variables of data type <code>RAW</code>.</p>
<div id="ARPLS66453" class="refsect3"><a id="sthref4734"></a>
<h4 class="refsect3">Syntax</h4>
<pre>
DBMS_HS_PASSTHROUGH.BIND_INOUT_VARIABLE_RAW (
   c      IN     BINARY_INTEGER NOT NULL,
   p      IN     BINARY_INTEGER NOT NULL,
   v      IN OUT RAW,
   n      IN     VARCHAR2);
</pre></div>
<!-- class="refsect3" -->
<div id="ARPLS66454" class="refsect3"><a id="sthref4735"></a>
<h4 class="refsect3">Parameters</h4>
<div id="ARPLS66455" class="tblformal">
<p class="titleintable"><a id="sthref4736"></a><a id="sthref4737"></a>Table 75-4 BIND_INOUT_VARIABLE_RAW Procedure Parameters</p>
<table class="cellalignment1229" title="BIND_INOUT_VARIABLE_RAW Procedure Parameters" summary="This table describes the parameters of DBMS_HS_PASSTHROUGH.BIND_INOUT_VARIABLE_RAW." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t8">Parameter</th>
<th class="cellalignment1227" id="r1c2-t8">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t8" headers="r1c1-t8">
<p><code>c</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t8 r1c2-t8">
<p>Cursor associated with the passthrough SQL statement. Cursor must be opened and parsed using the routines <code>OPEN_CURSOR</code> and <code>PARSE</code> respectively.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t8" headers="r1c1-t8">
<p><code>p</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t8 r1c2-t8">
<p>Position of the bind variable in the SQL statement: Starts at 1.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r4c1-t8" headers="r1c1-t8">
<p><code>v</code></p>
</td>
<td class="cellalignment1228" headers="r4c1-t8 r1c2-t8">
<p>This value is used for two purposes:</p>
<p>- To provide the IN value before the SQL statement is run.</p>
<p>- To determine the size of the out value.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r5c1-t8" headers="r1c1-t8">
<p><code>n</code></p>
</td>
<td class="cellalignment1228" headers="r5c1-t8 r1c2-t8">
<p>(Optional) Name the bind variable.</p>
<p>For example, in <code>SELECT * FROM emp WHERE ename=:ename</code>, the position of the bind variable :<code>ename</code> is 1, the name is :<code>ename</code>. This parameter can be used if the non-Oracle system supports "named binds" instead of positional binds. Passing the position is still required.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsect3" -->
<div id="ARPLS66456" class="refsect3"><a id="sthref4738"></a>
<h4 class="refsect3">Exceptions</h4>
<div id="ARPLS66457" class="tblformal">
<p class="titleintable"><a id="sthref4739"></a><a id="sthref4740"></a>Table 75-5 BIND_INOUT_VARIABLE_RAW Procedure Exceptions</p>
<table class="cellalignment1229" title="BIND_INOUT_VARIABLE_RAW Procedure Exceptions" summary="This table describes the Exceptions for BIND_INOUT_VARIABLE_RAW." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t9">Exception</th>
<th class="cellalignment1227" id="r1c2-t9">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t9" headers="r1c1-t9">
<p><code>ORA-28550</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t9 r1c2-t9">
<p>The cursor passed is invalid.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t9" headers="r1c1-t9">
<p><code>ORA-28552</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t9 r1c2-t9">
<p>Procedure is not run in right order. (Did you first open the cursor and parse the SQL statement?)</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r4c1-t9" headers="r1c1-t9">
<p><code>ORA-28553</code></p>
</td>
<td class="cellalignment1228" headers="r4c1-t9 r1c2-t9">
<p>The position of the bind variable is out of range.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r5c1-t9" headers="r1c1-t9">
<p><code>ORA-28555</code></p>
</td>
<td class="cellalignment1228" headers="r5c1-t9 r1c2-t9">
<p>A <code>NULL</code> value was passed for a <code>NOT</code> <code>NULL</code> parameter.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsect3" -->
<div id="ARPLS66458" class="refsect3"><a id="sthref4741"></a>
<h4 class="refsect3">Pragmas</h4>
<pre>
Purity level defined : WNDS, RNDS 
</pre></div>
<!-- class="refsect3" --></div>
<!-- class="refsect2" -->
<div id="ARPLS66459" class="refsect2"><a id="BEIHAABB"></a>
<hr />
<h3 class="refsect2"><a id="sthref4742"></a>BIND_OUT_VARIABLE Procedure</h3>
<p>This procedure binds an <code>OUT</code> variable with a PL/SQL program variable.</p>
<div id="ARPLS66460" class="refsect3"><a id="sthref4743"></a>
<h4 class="refsect3">Syntax</h4>
<pre>
DBMS_HS_PASSTHROUGH.BIND_OUT_VARIABLE (
   c      IN  BINARY_INTEGER NOT NULL,
   p      IN  BINARY_INTEGER NULL,
   v      OUT &lt;dty&gt;,
   n      IN  VARCHAR2);
</pre>
<p><code>&lt;dty&gt;</code> is either <code>DATE</code>, <code>NUMBER</code>, or <code>VARCHAR2</code>.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
For binding <code>OUT</code> variables of data type <code>RAW</code>, see <a href="#i997126">BIND_OUT_VARIABLE_RAW Procedure</a>.</div>
</div>
<!-- class="refsect3" -->
<div id="ARPLS66461" class="refsect3"><a id="sthref4744"></a>
<h4 class="refsect3">Parameters</h4>
<div id="ARPLS66462" class="tblformal">
<p class="titleintable"><a id="sthref4745"></a><a id="sthref4746"></a>Table 75-6 BIND_OUT_VARIABLE Procedure Parameters</p>
<table class="cellalignment1229" title="BIND_OUT_VARIABLE Procedure Parameters" summary="This table describes the parameters of DBMS_HS_PASSTHROUGH.BIND_OUT_VARIABLE." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t11">Parameter</th>
<th class="cellalignment1227" id="r1c2-t11">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t11" headers="r1c1-t11">
<p><code>c</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t11 r1c2-t11">
<p>Cursor associated with the passthrough SQL statement. Cursor must be opened and parsed, using the routines <code>OPEN_CURSOR</code> and <code>PARSE</code> respectively.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t11" headers="r1c1-t11">
<p><code>p</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t11 r1c2-t11">
<p>Position of the bind variable in the SQL statement: Starts at 1.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r4c1-t11" headers="r1c1-t11">
<p><code>v</code></p>
</td>
<td class="cellalignment1228" headers="r4c1-t11 r1c2-t11">
<p>Variable in which the <code>OUT</code> bind variable stores its value. The package remembers only the "size" of the variable. After the SQL statement is run, you can use <code>GET_VALUE</code> to retrieve the value of the <code>OUT</code> parameter. The size of the retrieved value should not exceed the size of the parameter that was passed using <code>BIND_OUT_VARIABLE</code>.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r5c1-t11" headers="r1c1-t11">
<p><code>n</code></p>
</td>
<td class="cellalignment1228" headers="r5c1-t11 r1c2-t11">
<p>(Optional) Name of the bind variable.</p>
<p>For example, in <code>SELECT * FROM emp WHERE ename=:ename</code>, the position of the bind variable :<code>ename</code> is 1, the name is :<code>ename</code>. This parameter can be used if the non-Oracle system supports "named binds" instead of positional binds. Passing the position is still required.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsect3" -->
<div id="ARPLS66463" class="refsect3"><a id="sthref4747"></a>
<h4 class="refsect3">Exceptions</h4>
<div id="ARPLS66464" class="tblformal">
<p class="titleintable"><a id="sthref4748"></a><a id="sthref4749"></a>Table 75-7 BIND_OUT_VARIABLE Procedure Exceptions</p>
<table class="cellalignment1229" title="BIND_OUT_VARIABLE Procedure Exceptions" summary="This table describes the Exceptions for BIND_OUT_VARIABLE." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t12">Exception</th>
<th class="cellalignment1227" id="r1c2-t12">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t12" headers="r1c1-t12">
<p><code>ORA-28550</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t12 r1c2-t12">
<p>The cursor passed is invalid.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t12" headers="r1c1-t12">
<p><code>ORA-28552</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t12 r1c2-t12">
<p>Procedure is not run in right order. (Did you first open the cursor and parse the SQL statement?)</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r4c1-t12" headers="r1c1-t12">
<p><code>ORA-28553</code></p>
</td>
<td class="cellalignment1228" headers="r4c1-t12 r1c2-t12">
<p>The position of the bind variable is out of range.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r5c1-t12" headers="r1c1-t12">
<p><code>ORA-28555</code></p>
</td>
<td class="cellalignment1228" headers="r5c1-t12 r1c2-t12">
<p>A <code>NULL</code> value was passed for a <code>NOT</code> <code>NULL</code> parameter.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsect3" -->
<div id="ARPLS66465" class="refsect3"><a id="sthref4750"></a>
<h4 class="refsect3">Pragmas</h4>
<pre>
Purity level defined : WNDS, RNDS 
</pre></div>
<!-- class="refsect3" --></div>
<!-- class="refsect2" -->
<div id="ARPLS66466" class="refsect2"><a id="i997126"></a>
<hr />
<h3 class="refsect2"><a id="sthref4751"></a>BIND_OUT_VARIABLE_RAW Procedure</h3>
<p>This procedure binds an <code>OUT</code> variable of data type <code>RAW</code> with a PL/SQL program variable.</p>
<div id="ARPLS66467" class="refsect3"><a id="sthref4752"></a>
<h4 class="refsect3">Syntax</h4>
<pre>
DBMS_HS_PASSTHROUGH.BIND_OUT_VARIABLE_RAW (
   c     IN  BINARY_INTEGER NOT NULL,
   p     IN  BINARY_INTEGER NOT NULL,
   v     OUT RAW,
   n     IN  VARCHAR2);
</pre></div>
<!-- class="refsect3" -->
<div id="ARPLS66468" class="refsect3"><a id="sthref4753"></a>
<h4 class="refsect3">Parameters</h4>
<div id="ARPLS66469" class="tblformal">
<p class="titleintable"><a id="sthref4754"></a><a id="sthref4755"></a>Table 75-8 BIND_OUT_VARIABLE_RAW Procedure Parameters</p>
<table class="cellalignment1229" title="BIND_OUT_VARIABLE_RAW Procedure Parameters" summary="This table describes the parameters of DBMS_HS_PASSTHROUGH.BIND_OUT_VARIABLE_RAW." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t13">Parameter</th>
<th class="cellalignment1227" id="r1c2-t13">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t13" headers="r1c1-t13">
<p><code>c</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t13 r1c2-t13">
<p>Cursor associated with the passthrough SQL statement. Cursor must be opened and parsed, using the routines <code>OPEN_CURSOR</code> and <code>PARSE</code> respectively.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t13" headers="r1c1-t13">
<p><code>p</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t13 r1c2-t13">
<p>Position of the bind variable in the SQL statement: Starts at 1.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r4c1-t13" headers="r1c1-t13">
<p><code>v</code></p>
</td>
<td class="cellalignment1228" headers="r4c1-t13 r1c2-t13">
<p>Variable in which the <code>OUT</code> bind variable stores its value. The package remembers only the "size" of the variable. After the SQL statement is run, you can use <code>GET_VALUE</code> to retrieve the value of the <code>OUT</code> parameter. The size of the retrieved value should not exceed the size of the parameter that was passed using <code>BIND_OUT_VARIABLE_RAW</code>.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r5c1-t13" headers="r1c1-t13">
<p><code>n</code></p>
</td>
<td class="cellalignment1228" headers="r5c1-t13 r1c2-t13">
<p>(Optional) Name of the bind variable.</p>
<p>For example, in <code>SELECT * FROM emp WHERE ename=:ename</code>, the position of the bind variable :<code>ename</code> is 1, the name is :<code>ename</code>. This parameter can be used if the non-Oracle system supports "named binds" instead of positional binds. Passing the position is still required.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsect3" -->
<div id="ARPLS66470" class="refsect3"><a id="sthref4756"></a>
<h4 class="refsect3">Exceptions</h4>
<div id="ARPLS66471" class="tblformal">
<p class="titleintable"><a id="sthref4757"></a><a id="sthref4758"></a>Table 75-9 BIND_OUT_VARIABLE_RAW Procedure Exceptions</p>
<table class="cellalignment1229" title="BIND_OUT_VARIABLE_RAW Procedure Exceptions" summary="This table describes the Exceptions for BIND_OUT_VARIABLE_RAW." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t14">Exception</th>
<th class="cellalignment1227" id="r1c2-t14">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t14" headers="r1c1-t14">
<p><code>ORA-28550</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t14 r1c2-t14">
<p>The cursor passed is invalid.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t14" headers="r1c1-t14">
<p><code>ORA-28552</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t14 r1c2-t14">
<p>Procedure is not run in right order. (Did you first open the cursor and parse the SQL statement?)</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r4c1-t14" headers="r1c1-t14">
<p><code>ORA-28553</code></p>
</td>
<td class="cellalignment1228" headers="r4c1-t14 r1c2-t14">
<p>The position of the bind variable is out of range.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r5c1-t14" headers="r1c1-t14">
<p><code>ORA-28555</code></p>
</td>
<td class="cellalignment1228" headers="r5c1-t14 r1c2-t14">
<p>A <code>NULL</code> value was passed for a <code>NOT</code> <code>NULL</code> parameter.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsect3" -->
<div id="ARPLS66472" class="refsect3"><a id="sthref4759"></a>
<h4 class="refsect3">Pragmas</h4>
<pre>
Purity level defined : WNDS, RNDS 
</pre></div>
<!-- class="refsect3" --></div>
<!-- class="refsect2" -->
<div id="ARPLS66473" class="refsect2"><a id="BEIFIAGH"></a>
<hr />
<h3 class="refsect2"><a id="sthref4760"></a>BIND_VARIABLE Procedure</h3>
<p>This procedure binds an <code>IN</code> variable positionally with a PL/SQL program variable.</p>
<div id="ARPLS66474" class="refsect3"><a id="sthref4761"></a>
<h4 class="refsect3">Syntax</h4>
<pre>
DBMS_HS_PASSTHROUGH.BIND_VARIABLE (
   c      IN BINARY_INTEGER NOT NULL,
   p      IN BINARY_INTEGER NOT NULL,
   v      IN &lt;dty&gt;,
   n      IN VARCHAR2);
</pre>
<p><code>&lt;dty&gt;</code> is either <code>DATE</code>, <code>NUMBER</code>, or <code>VARCHAR2</code>.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
To bind <code>RAW</code> variables use <a href="#i996981">BIND_VARIABLE_RAW Procedure</a>.</div>
</div>
<!-- class="refsect3" -->
<div id="ARPLS66475" class="refsect3"><a id="sthref4762"></a>
<h4 class="refsect3">Parameters</h4>
<div id="ARPLS66476" class="tblformal">
<p class="titleintable"><a id="sthref4763"></a><a id="sthref4764"></a>Table 75-10 BIND_VARIABLE Procedure Parameters</p>
<table class="cellalignment1229" title="BIND_VARIABLE Procedure Parameters" summary="This table describes the parameters of DBMS_HS_PASSTHROUGH.BIND_VARIABLE." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t16">Parameter</th>
<th class="cellalignment1227" id="r1c2-t16">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t16" headers="r1c1-t16">
<p><code>c</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t16 r1c2-t16">
<p>Cursor associated with the passthrough SQL statement. Cursor must be opened and parsed using the routines <code>OPEN_CURSOR</code> and <code>PARSE</code> respectively.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t16" headers="r1c1-t16">
<p><code>p</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t16 r1c2-t16">
<p>Position of the bind variable in the SQL statement: Starts at 1.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r4c1-t16" headers="r1c1-t16">
<p><code>v</code></p>
</td>
<td class="cellalignment1228" headers="r4c1-t16 r1c2-t16">
<p>Value that must be passed to the bind variable name.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r5c1-t16" headers="r1c1-t16">
<p><code>n</code></p>
</td>
<td class="cellalignment1228" headers="r5c1-t16 r1c2-t16">
<p>(Optional) Name of the bind variable.</p>
<p>For example, in <code>SELECT * FROM emp WHERE ename=:ename</code>, the position of the bind variable :<code>ename</code> is 1, the name is :<code>ename</code>. This parameter can be used if the non-Oracle system supports "named binds" instead of positional binds. Passing the position is still required.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsect3" -->
<div id="ARPLS66477" class="refsect3"><a id="sthref4765"></a>
<h4 class="refsect3">Exceptions</h4>
<div id="ARPLS66478" class="tblformal">
<p class="titleintable"><a id="sthref4766"></a><a id="sthref4767"></a>Table 75-11 BIND_VARIABLE Procedure Exceptions</p>
<table class="cellalignment1229" title="BIND_VARIABLE Procedure Exceptions" summary="This table describes the Exceptions for BIND_VARIABLE." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t17">Exception</th>
<th class="cellalignment1227" id="r1c2-t17">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t17" headers="r1c1-t17">
<p><code>ORA-28550</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t17 r1c2-t17">
<p>The cursor passed is invalid.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t17" headers="r1c1-t17">
<p><code>ORA-28552</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t17 r1c2-t17">
<p>Procedure is not run in right order. (Did you first open the cursor and parse the SQL statement?)</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r4c1-t17" headers="r1c1-t17">
<p><code>ORA-28553</code></p>
</td>
<td class="cellalignment1228" headers="r4c1-t17 r1c2-t17">
<p>The position of the bind variable is out of range.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r5c1-t17" headers="r1c1-t17">
<p><code>ORA-28555</code></p>
</td>
<td class="cellalignment1228" headers="r5c1-t17 r1c2-t17">
<p>A <code>NULL</code> value was passed for a <code>NOT</code> <code>NULL</code> parameter.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsect3" -->
<div id="ARPLS66479" class="refsect3"><a id="sthref4768"></a>
<h4 class="refsect3">Pragmas</h4>
<pre>
Purity level defined: WNDS, RNDS 
</pre></div>
<!-- class="refsect3" --></div>
<!-- class="refsect2" -->
<div id="ARPLS66480" class="refsect2"><a id="i996981"></a>
<hr />
<h3 class="refsect2"><a id="sthref4769"></a>BIND_VARIABLE_RAW Procedure</h3>
<p>This procedure binds <code>IN</code> variables of type <code>RAW</code>.</p>
<div id="ARPLS66481" class="refsect3"><a id="sthref4770"></a>
<h4 class="refsect3">Syntax</h4>
<pre>
DBMS_HS_PASSTHROUGH.BIND_VARIABLE_RAW (
   c    IN BINARY_INTEGER NOT NULL,
   p    IN BINARY_INTEGER NOT NULL,
   v    IN RAW,  
   n    IN VARCHAR2); 
</pre></div>
<!-- class="refsect3" -->
<div id="ARPLS66482" class="refsect3"><a id="sthref4771"></a>
<h4 class="refsect3">Parameters</h4>
<div id="ARPLS66483" class="tblformal">
<p class="titleintable"><a id="sthref4772"></a><a id="sthref4773"></a>Table 75-12 BIND_VARIABLE_RAW Procedure Parameters</p>
<table class="cellalignment1229" title="BIND_VARIABLE_RAW Procedure Parameters" summary="This table describes the parameters of DBMS_HS_PASSTHROUGH.BIND_VARIABLE_RAW." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t18">Parameter</th>
<th class="cellalignment1227" id="r1c2-t18">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t18" headers="r1c1-t18">
<p><code>c</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t18 r1c2-t18">
<p>Cursor associated with the passthrough SQL statement. Cursor must be opened and parsed, using the routines <code>OPEN_CURSOR</code> and <code>PARSE</code> respectively.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t18" headers="r1c1-t18">
<p><code>p</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t18 r1c2-t18">
<p>Position of the bind variable in the SQL statement: Starts at 1.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r4c1-t18" headers="r1c1-t18">
<p><code>v</code></p>
</td>
<td class="cellalignment1228" headers="r4c1-t18 r1c2-t18">
<p>Value that must be passed to the bind variable.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r5c1-t18" headers="r1c1-t18">
<p><code>n</code></p>
</td>
<td class="cellalignment1228" headers="r5c1-t18 r1c2-t18">
<p>(Optional) Name of the bind variable.</p>
<p>For example, in <code>SELECT * FROM emp WHERE ename=:ename</code>, the position of the bind variable :<code>ename</code> is 1, the name is :<code>ename</code>. This parameter can be used if the non-Oracle system supports "named binds" instead of positional binds. Passing the position is still required.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsect3" -->
<div id="ARPLS66484" class="refsect3"><a id="sthref4774"></a>
<h4 class="refsect3">Exceptions</h4>
<div id="ARPLS66485" class="tblformal">
<p class="titleintable"><a id="sthref4775"></a><a id="sthref4776"></a>Table 75-13 BIND_VARIABLE_RAW Procedure Exceptions</p>
<table class="cellalignment1229" title="BIND_VARIABLE_RAW Procedure Exceptions" summary="This table describes the Exceptions for BIND_VARIABLE_RAW." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t19">Exception</th>
<th class="cellalignment1227" id="r1c2-t19">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t19" headers="r1c1-t19">
<p><code>ORA-28550</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t19 r1c2-t19">
<p>The cursor passed is invalid.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t19" headers="r1c1-t19">
<p><code>ORA-28552</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t19 r1c2-t19">
<p>Procedure is not run in right order. (Did you first open the cursor and parse the SQL statement?)</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r4c1-t19" headers="r1c1-t19">
<p><code>ORA-28553</code></p>
</td>
<td class="cellalignment1228" headers="r4c1-t19 r1c2-t19">
<p>The position of the bind variable is out of range.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r5c1-t19" headers="r1c1-t19">
<p><code>ORA-28555</code></p>
</td>
<td class="cellalignment1228" headers="r5c1-t19 r1c2-t19">
<p>A <code>NULL</code> value was passed for a <code>NOT</code> <code>NULL</code> parameter.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsect3" -->
<div id="ARPLS66486" class="refsect3"><a id="sthref4777"></a>
<h4 class="refsect3">Pragmas</h4>
<pre>
Purity level defined : WNDS, RNDS 
</pre></div>
<!-- class="refsect3" --></div>
<!-- class="refsect2" -->
<div id="ARPLS66487" class="refsect2"><a id="i997341"></a>
<hr />
<h3 class="refsect2"><a id="sthref4778"></a>CLOSE_CURSOR Procedure</h3>
<p>This function closes the cursor and releases associated memory after the SQL statement has been run at the non-Oracle system. If the cursor was not open, then the operation is a "no operation".</p>
<div id="ARPLS66488" class="refsect3"><a id="sthref4779"></a>
<h4 class="refsect3">Syntax</h4>
<pre>
DBMS_HS_PASSTHROUGH.CLOSE_CURSOR (
   c IN BINARY_INTEGER NOT NULL);
</pre></div>
<!-- class="refsect3" -->
<div id="ARPLS66489" class="refsect3"><a id="sthref4780"></a>
<h4 class="refsect3">Parameters</h4>
<div id="ARPLS66490" class="tblformal">
<p class="titleintable"><a id="sthref4781"></a><a id="sthref4782"></a>Table 75-14 CLOSE_CURSOR Procedure Parameters</p>
<table class="cellalignment1229" title="CLOSE_CURSOR Procedure Parameters" summary="his table describes the parameters of DBMS_HS_PASSTHROUGH.CLOSE_CURSOR." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t20">Parameter</th>
<th class="cellalignment1227" id="r1c2-t20">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t20" headers="r1c1-t20">
<p><code>c</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t20 r1c2-t20">
<p>Cursor to be released.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsect3" -->
<div id="ARPLS66491" class="refsect3"><a id="sthref4783"></a>
<h4 class="refsect3">Exceptions</h4>
<div id="ARPLS66492" class="tblformal">
<p class="titleintable"><a id="sthref4784"></a><a id="sthref4785"></a>Table 75-15 CLOSE_CURSOR Procedure Exceptions</p>
<table class="cellalignment1229" title="CLOSE_CURSOR Procedure Exceptions" summary="This table describes the Exceptions for CLOSE_CURSOR." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t21">Exception</th>
<th class="cellalignment1227" id="r1c2-t21">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t21" headers="r1c1-t21">
<p><code>ORA-28555</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t21 r1c2-t21">
<p>A <code>NULL</code> value was passed for a <code>NOT</code> <code>NULL</code> parameter.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsect3" -->
<div id="ARPLS66493" class="refsect3"><a id="sthref4786"></a>
<h4 class="refsect3">Pragmas</h4>
<pre>
Purity level defined : WNDS, RNDS
</pre></div>
<!-- class="refsect3" --></div>
<!-- class="refsect2" -->
<div id="ARPLS66494" class="refsect2"><a id="i997379"></a>
<hr />
<h3 class="refsect2"><a id="sthref4787"></a>EXECUTE_IMMEDIATE Procedure</h3>
<p>This function runs a SQL statement immediately. Any valid SQL command except <code>SELECT</code> can be run immediately. The statement must not contain any bind variables. The statement is passed in as a <code>VARCHAR2</code> in the argument. Internally the SQL statement is run using the <code>PASSTHROUGH</code> SQL protocol sequence of <code>OPEN_CURSOR</code>, <code>PARSE</code>, <code>EXECUTE_NON_QUERY</code>, <code>CLOSE_CURSOR</code>.</p>
<div id="ARPLS66495" class="refsect3"><a id="sthref4788"></a>
<h4 class="refsect3">Syntax</h4>
<pre>
DBMS_HS_PASSTHROUGH.EXECUTE_IMMEDIATE ( 
   s IN VARCHAR2 NOT NULL)  
RETURN BINARY_INTEGER; 
</pre></div>
<!-- class="refsect3" -->
<div id="ARPLS66496" class="refsect3"><a id="sthref4789"></a>
<h4 class="refsect3">Parameters</h4>
<div id="ARPLS66497" class="tblformal">
<p class="titleintable"><a id="sthref4790"></a><a id="sthref4791"></a>Table 75-16 EXECUTE_IMMEDIATE Procedure Parameters</p>
<table class="cellalignment1229" title="EXECUTE_IMMEDIATE Procedure Parameters" summary="This table describes the parameters of DBMS_HS_PASSTHROUGH.EXECUTE_IMMEDIATE." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t22">Parameter</th>
<th class="cellalignment1227" id="r1c2-t22">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t22" headers="r1c1-t22">
<p><code>s</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t22 r1c2-t22">
<p><code>VARCHAR2</code> variable with the statement to be executed immediately.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsect3" -->
<div id="ARPLS66498" class="refsect3"><a id="sthref4792"></a>
<h4 class="refsect3">Return Values</h4>
<p>The number of rows affected by the execution of the SQL statement.</p>
</div>
<!-- class="refsect3" -->
<div id="ARPLS66499" class="refsect3"><a id="sthref4793"></a>
<h4 class="refsect3">Exceptions</h4>
<div id="ARPLS66500" class="tblformal">
<p class="titleintable"><a id="sthref4794"></a><a id="sthref4795"></a>Table 75-17 EXECUTE_IMMEDIATE Procedure Exceptions</p>
<table class="cellalignment1229" title="EXECUTE_IMMEDIATE Procedure Exceptions" summary="This table describes the Exceptions for EXECUTE_IMMEDIATE." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t23">Exception</th>
<th class="cellalignment1227" id="r1c2-t23">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t23" headers="r1c1-t23">
<p><code>ORA-28551</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t23 r1c2-t23">
<p>SQL statement is invalid.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t23" headers="r1c1-t23">
<p><code>ORA-28554</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t23 r1c2-t23">
<p>Max open cursors.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r4c1-t23" headers="r1c1-t23">
<p><code>ORA-28555</code></p>
</td>
<td class="cellalignment1228" headers="r4c1-t23 r1c2-t23">
<p>A <code>NULL</code> value was passed for a <code>NOT</code> <code>NULL</code> parameter.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsect3" --></div>
<!-- class="refsect2" -->
<div id="ARPLS66501" class="refsect2"><a id="i997426"></a>
<hr />
<h3 class="refsect2"><a id="sthref4796"></a>EXECUTE_NON_QUERY Function</h3>
<p>This function runs a SQL statement. The SQL statement cannot be a <code>SELECT</code> statement. A cursor has to be open and the SQL statement has to be parsed before the SQL statement can be run.</p>
<div id="ARPLS66502" class="refsect3"><a id="sthref4797"></a>
<h4 class="refsect3">Syntax</h4>
<pre>
DBMS_HS_PASSTHROUGH.EXECUTE_NON_QUERY ( 
   c IN BINARY_INTEGER NOT NULL)
  RETURN BINARY_INTEGER;
</pre></div>
<!-- class="refsect3" -->
<div id="ARPLS66503" class="refsect3"><a id="sthref4798"></a>
<h4 class="refsect3">Parameters</h4>
<div id="ARPLS66504" class="tblformal">
<p class="titleintable"><a id="sthref4799"></a><a id="sthref4800"></a>Table 75-18 EXECUTE_NON_QUERY Function Parameters</p>
<table class="cellalignment1229" title="EXECUTE_NON_QUERY Function Parameters" summary="This table describes the parameters of DBMS_HS_PASSTHROUGH.EXECUTE_NON_QUERY." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t24">Parameter</th>
<th class="cellalignment1227" id="r1c2-t24">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t24" headers="r1c1-t24">
<p><code>c</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t24 r1c2-t24">
<p>Cursor associated with the passthrough SQL statement. Cursor must be opened and parsed, using the routines <code>OPEN_CURSOR</code> and <code>PARSE</code> respectively.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsect3" -->
<div id="ARPLS66505" class="refsect3"><a id="sthref4801"></a>
<h4 class="refsect3">Return Values</h4>
<p>The number of rows affected by the SQL statement in the non-Oracle system</p>
</div>
<!-- class="refsect3" -->
<div id="ARPLS66506" class="refsect3"><a id="sthref4802"></a>
<h4 class="refsect3">Exceptions</h4>
<div id="ARPLS66507" class="tblformal">
<p class="titleintable"><a id="sthref4803"></a><a id="sthref4804"></a>Table 75-19 EXECUTE_NON_QUERY Function Exceptions</p>
<table class="cellalignment1229" title="EXECUTE_NON_QUERY Function Exceptions" summary="This table describes the Exceptions for EXECUTE_NON_QUERY." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t25">Exception</th>
<th class="cellalignment1227" id="r1c2-t25">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t25" headers="r1c1-t25">
<p><code>ORA-28550</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t25 r1c2-t25">
<p>The cursor passed is invalid.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t25" headers="r1c1-t25">
<p><code>ORA-28552</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t25 r1c2-t25">
<p><code>BIND_VARIABLE</code> procedure is not run in right order. (Did you first open the cursor and parse the SQL statement?)</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r4c1-t25" headers="r1c1-t25">
<p><code>ORA-28555</code></p>
</td>
<td class="cellalignment1228" headers="r4c1-t25 r1c2-t25">
<p>A <code>NULL</code> value was passed for a <code>NOT</code> <code>NULL</code> parameter.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsect3" --></div>
<!-- class="refsect2" -->
<div id="ARPLS66508" class="refsect2"><a id="BEIDJGGB"></a>
<hr />
<h3 class="refsect2"><a id="sthref4805"></a>FETCH_ROW Function</h3>
<p>This function fetches rows from a result set. The result set is defined with a SQL <code>SELECT</code> statement. When there are no more rows to be fetched, the exception <code>NO_DATA_FOUND</code> is raised. Before the rows can be fetched, a cursor has to be opened, and the SQL statement has to be parsed.</p>
<div id="ARPLS66509" class="refsect3"><a id="sthref4806"></a>
<h4 class="refsect3">Syntax</h4>
<pre>
DBMS_HS_PASSTHROUGH.FETCH_ROW (
   c   IN BINARY_INTEGER NOT NULL,
   f   IN BOOLEAN)
  RETURN BINARY_INTEGER;
</pre></div>
<!-- class="refsect3" -->
<div id="ARPLS66510" class="refsect3"><a id="sthref4807"></a>
<h4 class="refsect3">Parameters</h4>
<div id="ARPLS66511" class="tblformal">
<p class="titleintable"><a id="sthref4808"></a><a id="sthref4809"></a>Table 75-20 FETCH_ROW Function Parameters</p>
<table class="cellalignment1229" title="FETCH_ROW Function Parameters" summary="This table describes the parameters of DBMS_HS_PASSTHROUGH.FETCH_ROW." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t26">Parameter</th>
<th class="cellalignment1227" id="r1c2-t26">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t26" headers="r1c1-t26">
<p><code>c</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t26 r1c2-t26">
<p>Cursor associated with the passthrough SQL statement. Cursor must be opened and parsed, using the routines <code>OPEN_CURSOR</code> and <code>PARSE</code> respectively.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t26" headers="r1c1-t26">
<p><code>first</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t26 r1c2-t26">
<p>(Optional) Reexecutes <code>SELECT</code> statement. Possible values:</p>
<p><code>- TRUE</code>: reexecute <code>SELECT</code> statement.</p>
<p><code>- FALSE</code>: fetch the next row, or if run for the first time, then execute and fetch rows (default).</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsect3" -->
<div id="ARPLS66512" class="refsect3"><a id="sthref4810"></a>
<h4 class="refsect3">Return Values</h4>
<p>The returns the number of rows fetched. The function returns "0" if the last row was already fetched.</p>
</div>
<!-- class="refsect3" -->
<div id="ARPLS66513" class="refsect3"><a id="sthref4811"></a>
<h4 class="refsect3">Exceptions</h4>
<div id="ARPLS66514" class="tblformal">
<p class="titleintable"><a id="sthref4812"></a><a id="sthref4813"></a>Table 75-21 FETCH_ROW Function Exceptions</p>
<table class="cellalignment1229" title="FETCH_ROW Function Exceptions" summary="This table describes the Exceptions for FETCH_ROW." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t27">Exception</th>
<th class="cellalignment1227" id="r1c2-t27">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t27" headers="r1c1-t27">
<p><code>ORA-28550</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t27 r1c2-t27">
<p>The cursor passed is invalid.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t27" headers="r1c1-t27">
<p><code>ORA-28552</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t27 r1c2-t27">
<p>Procedure is not run in right order. (Did you first open the cursor and parse the SQL statement?)</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r4c1-t27" headers="r1c1-t27">
<p><code>ORA-28555</code></p>
</td>
<td class="cellalignment1228" headers="r4c1-t27 r1c2-t27">
<p>A <code>NULL</code> value was passed for a <code>NOT</code> <code>NULL</code> parameter.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsect3" -->
<div id="ARPLS66515" class="refsect3"><a id="sthref4814"></a>
<h4 class="refsect3">Pragmas</h4>
<pre>
Purity level defined : WNDS 
</pre></div>
<!-- class="refsect3" --></div>
<!-- class="refsect2" -->
<div id="ARPLS66516" class="refsect2"><a id="BEIHICII"></a>
<hr />
<h3 class="refsect2"><a id="sthref4815"></a>GET_VALUE Procedure</h3>
<p>This procedure has two purposes:</p>
<ul>
<li>
<p>It retrieves the select list items of <code>SELECT</code> statements, after a row has been fetched.</p>
</li>
<li>
<p>It retrieves the <code>OUT</code> bind values, after the SQL statement has been run.</p>
</li>
</ul>
<div id="ARPLS66517" class="refsect3"><a id="sthref4816"></a>
<h4 class="refsect3">Syntax</h4>
<pre>
DBMS_HS_PASSTHROUGH.GET_VALUE (
   c      IN  BINARY_INTEGER NOT NULL,
   p    IN  BINARY_INTEGER NOT NULL,
   v    OUT &lt;dty&gt;);
</pre>
<p><code>&lt;dty&gt;</code> is either <code>DATE</code>, <code>NUMBER</code>, or <code>VARCHAR2</code>.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
For retrieving values of data type <code>RAW</code>, see <a href="#i997609">GET_VALUE_RAW Procedure</a>.</div>
</div>
<!-- class="refsect3" -->
<div id="ARPLS66518" class="refsect3"><a id="sthref4817"></a>
<h4 class="refsect3">Parameters</h4>
<div id="ARPLS66519" class="tblformal">
<p class="titleintable"><a id="sthref4818"></a><a id="sthref4819"></a>Table 75-22 GET_VALUE Procedure Parameters</p>
<table class="cellalignment1229" title="GET_VALUE Procedure Parameters" summary="This table describes the parameters of DBMS_HS_PASSTHROUGH.GET_VALUE." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t29">Parameter</th>
<th class="cellalignment1227" id="r1c2-t29">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t29" headers="r1c1-t29">
<p><code>c</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t29 r1c2-t29">
<p>Cursor associated with the passthrough SQL statement. Cursor must be opened and parsed, using the routines <code>OPEN_CURSOR</code> and <code>PARSE</code> respectively.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t29" headers="r1c1-t29">
<p><code>p</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t29 r1c2-t29">
<p>Position of the bind variable or select list item in the SQL statement: Starts at 1.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r4c1-t29" headers="r1c1-t29">
<p><code>v</code></p>
</td>
<td class="cellalignment1228" headers="r4c1-t29 r1c2-t29">
<p>Variable in which the <code>OUT</code> bind variable or select list item stores its value.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsect3" -->
<div id="ARPLS66520" class="refsect3"><a id="sthref4820"></a>
<h4 class="refsect3">Exceptions</h4>
<div id="ARPLS66521" class="tblformal">
<p class="titleintable"><a id="sthref4821"></a><a id="sthref4822"></a>Table 75-23 GET_VALUE Procedure Exceptions</p>
<table class="cellalignment1229" title="GET_VALUE Procedure Exceptions" summary="This table describes the Exceptions for GET_VALUE." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t30">Exception</th>
<th class="cellalignment1227" id="r1c2-t30">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t30" headers="r1c1-t30">
<p><code>ORA-1403</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t30 r1c2-t30">
<p>Returns <code>NO_DATA_FOUND</code> exception when running the <code>GET_VALUE</code> after the last row was fetched (that is, <code>FETCH_ROW</code> returned "0").</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t30" headers="r1c1-t30">
<p><code>ORA-28550</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t30 r1c2-t30">
<p>The cursor passed is invalid.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r4c1-t30" headers="r1c1-t30">
<p><code>ORA-28552</code></p>
</td>
<td class="cellalignment1228" headers="r4c1-t30 r1c2-t30">
<p>Procedure is not run in right order. (Did you first open the cursor and parse the SQL statement?)</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r5c1-t30" headers="r1c1-t30">
<p><code>ORA-28553</code></p>
</td>
<td class="cellalignment1228" headers="r5c1-t30 r1c2-t30">
<p>The position of the bind variable is out of range.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r6c1-t30" headers="r1c1-t30">
<p><code>ORA-28555</code></p>
</td>
<td class="cellalignment1228" headers="r6c1-t30 r1c2-t30">
<p>A <code>NULL</code> value was passed for a <code>NOT</code> <code>NULL</code> parameter.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsect3" -->
<div id="ARPLS66522" class="refsect3"><a id="sthref4823"></a>
<h4 class="refsect3">Pragmas</h4>
<pre>
Purity level defined : WNDS
</pre></div>
<!-- class="refsect3" --></div>
<!-- class="refsect2" -->
<div id="ARPLS66523" class="refsect2"><a id="i997609"></a>
<hr />
<h3 class="refsect2"><a id="sthref4824"></a>GET_VALUE_RAW Procedure</h3>
<p>This procedure is similar to <code>GET_VALUE</code>, but for data type <code>RAW</code>.</p>
<div id="ARPLS66524" class="refsect3"><a id="sthref4825"></a>
<h4 class="refsect3">Syntax</h4>
<pre>
DBMS_HS_PASSTHROUGH.GET_VALUE_RAW (
   c    IN  BINARY_INTEGER NOT NULL,
   p    IN  BINARY_INTEGER NOT NULL,
   v    OUT RAW);
</pre></div>
<!-- class="refsect3" -->
<div id="ARPLS66525" class="refsect3"><a id="sthref4826"></a>
<h4 class="refsect3">Parameters</h4>
<div id="ARPLS66526" class="tblformal">
<p class="titleintable"><a id="sthref4827"></a><a id="sthref4828"></a>Table 75-24 GET_VALUE_RAW Procedure Parameters</p>
<table class="cellalignment1229" title="GET_VALUE_RAW Procedure Parameters" summary="This table describes the parameters of DBMS_HS_PASSTHROUGH.GET_VALUE_RAW." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t31">Parameter</th>
<th class="cellalignment1227" id="r1c2-t31">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t31" headers="r1c1-t31">
<p><code>c</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t31 r1c2-t31">
<p>Cursor associated with the passthrough SQL statement. Cursor must be opened and parsed, using the routines <code>OPEN_CURSOR</code> and <code>PARSE</code> respectively.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t31" headers="r1c1-t31">
<p><code>p</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t31 r1c2-t31">
<p>Position of the bind variable or select list item in the SQL statement: Starts at 1.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r4c1-t31" headers="r1c1-t31">
<p><code>v</code></p>
</td>
<td class="cellalignment1228" headers="r4c1-t31 r1c2-t31">
<p>Variable in which the <code>OUT</code> bind variable or select list item stores its value.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsect3" -->
<div id="ARPLS66527" class="refsect3"><a id="sthref4829"></a>
<h4 class="refsect3">Exceptions</h4>
<div id="ARPLS66528" class="tblformal">
<p class="titleintable"><a id="sthref4830"></a><a id="sthref4831"></a>Table 75-25 GET_VALUE_RAW Procedure Exceptions</p>
<table class="cellalignment1229" title="GET_VALUE_RAW Procedure Exceptions" summary="This table describes the Exceptions for GET_VALUE_RAW." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t32">Exception</th>
<th class="cellalignment1227" id="r1c2-t32">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t32" headers="r1c1-t32">
<p><code>ORA-1403</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t32 r1c2-t32">
<p>Returns <code>NO_DATA_FOUND</code> exception when running the <code>GET_VALUE</code> after the last row was fetched (that is, <code>FETCH_ROW</code> returned "0").</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t32" headers="r1c1-t32">
<p><code>ORA-28550</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t32 r1c2-t32">
<p>The cursor passed is invalid.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r4c1-t32" headers="r1c1-t32">
<p><code>ORA-28552</code></p>
</td>
<td class="cellalignment1228" headers="r4c1-t32 r1c2-t32">
<p>Procedure is not run in right order. (Did you first open the cursor and parse the SQL statement?)</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r5c1-t32" headers="r1c1-t32">
<p><code>ORA-28553</code></p>
</td>
<td class="cellalignment1228" headers="r5c1-t32 r1c2-t32">
<p>The position of the bind variable is out of range.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r6c1-t32" headers="r1c1-t32">
<p><code>ORA-28555</code></p>
</td>
<td class="cellalignment1228" headers="r6c1-t32 r1c2-t32">
<p>A <code>NULL</code> value was passed for a <code>NOT</code> <code>NULL</code> parameter.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsect3" -->
<div id="ARPLS66529" class="refsect3"><a id="sthref4832"></a>
<h4 class="refsect3">Pragmas</h4>
<pre>
Purity level defined : WNDS 
</pre></div>
<!-- class="refsect3" --></div>
<!-- class="refsect2" -->
<div id="ARPLS66530" class="refsect2"><a id="BEIHJIAB"></a>
<hr />
<h3 class="refsect2"><a id="sthref4833"></a>OPEN_CURSOR Function</h3>
<p>This function opens a cursor for running a passthrough SQL statement at the non-Oracle system. This function must be called for any type of SQL statement.</p>
<p>The function returns a cursor, which must be used in subsequent calls. This call allocates memory. To deallocate the associated memory, call the procedure <code>CLOSE_CURSOR</code>.</p>
<div id="ARPLS66531" class="refsect3"><a id="sthref4834"></a>
<h4 class="refsect3">Syntax</h4>
<pre>
DBMS_HS_PASSTHROUGH.OPEN_CURSOR 
  RETURN BINARY_INTEGER;
</pre></div>
<!-- class="refsect3" -->
<div id="ARPLS66532" class="refsect3"><a id="sthref4835"></a>
<h4 class="refsect3">Return Values</h4>
<p>The cursor to be used on subsequent procedure and function calls.</p>
</div>
<!-- class="refsect3" -->
<div id="ARPLS66533" class="refsect3"><a id="sthref4836"></a>
<h4 class="refsect3">Exceptions</h4>
<div id="ARPLS66534" class="tblformal">
<p class="titleintable"><a id="sthref4837"></a><a id="sthref4838"></a>Table 75-26 OPEN_CURSOR Function Exceptions</p>
<table class="cellalignment1229" title="OPEN_CURSOR Function Exceptions" summary="This table describes the Exceptions for OPEN_CURSOR." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t33">Exception</th>
<th class="cellalignment1227" id="r1c2-t33">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t33" headers="r1c1-t33">
<p><code>ORA-28554</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t33 r1c2-t33">
<p>Maximum number of open cursor has been exceeded. Increase Heterogeneous Services' <code>OPEN_CURSORS</code> initialization parameter.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsect3" -->
<div id="ARPLS66535" class="refsect3"><a id="sthref4839"></a>
<h4 class="refsect3">Pragmas</h4>
<pre>
Purity level defined : WNDS, RNDS
</pre></div>
<!-- class="refsect3" --></div>
<!-- class="refsect2" -->
<div id="ARPLS66536" class="refsect2"><a id="i997699"></a>
<hr />
<h3 class="refsect2"><a id="sthref4840"></a>PARSE Procedure</h3>
<p>This procedure parses SQL statement at non-Oracle system.</p>
<div id="ARPLS66537" class="refsect3"><a id="sthref4841"></a>
<h4 class="refsect3">Syntax</h4>
<pre>
DBMS_HS_PASSTHROUGH.PARSE (
   c       IN  BINARY_INTEGER NOT NULL,
   stmt    IN  VARCHAR2 NOT NULL);
</pre></div>
<!-- class="refsect3" -->
<div id="ARPLS66538" class="refsect3"><a id="sthref4842"></a>
<h4 class="refsect3">Parameters</h4>
<div id="ARPLS66539" class="tblformal">
<p class="titleintable"><a id="sthref4843"></a><a id="sthref4844"></a>Table 75-27 PARSE Procedure Parameters</p>
<table class="cellalignment1229" title="PARSE Procedure Parameters" summary="This table describes the parameters of DBMS_HS_PASSTHROUGH.PARSE." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t34">Parameter</th>
<th class="cellalignment1227" id="r1c2-t34">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t34" headers="r1c1-t34">
<p><code>c</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t34 r1c2-t34">
<p>Cursor associated with the passthrough SQL statement. Cursor must be opened using function <code>OPEN_CURSOR</code>.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t34" headers="r1c1-t34">
<p><code>stmt</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t34 r1c2-t34">
<p>Statement to be parsed.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsect3" -->
<div id="ARPLS66540" class="refsect3"><a id="sthref4845"></a>
<h4 class="refsect3">Exceptions</h4>
<div id="ARPLS66541" class="tblformal">
<p class="titleintable"><a id="sthref4846"></a><a id="sthref4847"></a>Table 75-28 PARSE Procedure Exceptions</p>
<table class="cellalignment1229" title="PARSE Procedure Exceptions" summary="This table describes the Exceptions for PARSE." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t35">Exception</th>
<th class="cellalignment1227" id="r1c2-t35">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t35" headers="r1c1-t35">
<p><code>ORA-28550</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t35 r1c2-t35">
<p>The cursor passed is invalid.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t35" headers="r1c1-t35">
<p><code>ORA-28551</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t35 r1c2-t35">
<p>SQL statement is illegal.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r4c1-t35" headers="r1c1-t35">
<p><code>ORA-28555</code></p>
</td>
<td class="cellalignment1228" headers="r4c1-t35 r1c2-t35">
<p>A <code>NULL</code> value was passed for a <code>NOT</code> <code>NULL</code> parameter.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsect3" -->
<div id="ARPLS66542" class="refsect3"><a id="sthref4848"></a>
<h4 class="refsect3">Pragmas</h4>
<pre>
Purity level defined : WNDS, RNDS
</pre></div>
<!-- class="refsect3" --></div>
<!-- class="refsect2" --></div>
<!-- class="refsect1" --></div>
<!-- class="refentry" --></div>
<!-- class="chapter" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment1219">
<tr>
<td class="cellalignment1228">
<table class="cellalignment1224">
<tr>
<td class="cellalignment1223"><a href="d_hsparallel.htm"><img width="24" height="24" src="../../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment1223"><a href="d_iot.htm"><img width="24" height="24" src="../../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;1996, 2013,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment1231">
<table class="cellalignment1222">
<tr>
<td class="cellalignment1223"><a href="../../index.htm"><img width="24" height="24" src="../../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment1223"><a href="../../nav/portal_booklist.htm"><img width="24" height="24" src="../../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment1223"><a href="toc.htm"><img width="24" height="24" src="../../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment1223"><a href="index.htm"><img width="24" height="24" src="../../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment1223"><a href="../../nav/mindx.htm"><img width="24" height="24" src="../../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment1223"><a href="../../dcommon/html/feedback.htm"><img width="24" height="24" src="../../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>
</body>
</html>
