<!DOCTYPE html>
<html lang="en" >
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1">
<meta charset="utf-8">
<title>DBMS_MVIEW</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Version 5.1.2 Build 737" />
<meta name="dcterms.created" content="2013-07-19T18:55:20Z" />
<meta name="robots" content="all" />
<meta name="dcterms.title" content="Database PL/SQL Packages and Types Reference" />
<meta name="dcterms.identifier" content="E40758-03" />
<meta name="dcterms.isVersionOf" content="ARPLS" />
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;1996, 2013,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved." />
<link rel="Start" href="../../index.htm" title="Home" type="text/html" />
<link rel="Copyright" href="../../dcommon/html/cpyr.htm" title="Copyright" type="text/html" />

<script type="application/javascript"  src="../../dcommon/js/headfoot.js"></script>
<script type="application/javascript"  src="../../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html" />
<link rel="Index" href="index.htm" title="Index" type="text/html" />
<link rel="Prev" href="d_monitor.htm" title="Previous" type="text/html" />
<link rel="Next" href="d_networkacl_adm.htm" title="Next" type="text/html" />
<link rel="alternate" href="../e40758.pdf" title="PDF version" type="application/pdf" />
<link rel="schema.dcterms" href="http://purl.org/dc/terms/" />
<link rel="stylesheet" href="../../dcommon/css/fusiondoc.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/header.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/footer.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/fonts.css">
<link rel="stylesheet" href="../../dcommon/css/foundation.css">
<link rel="stylesheet" href="../../dcommon/css/codemirror.css">
<link rel="stylesheet" type="text/css" title="Default" href="../../nav/css/html5.css">
<link rel="stylesheet" href="../../dcommon/css/respond-480-tablet.css">
<link rel="stylesheet" href="../../dcommon/css/respond-768-laptop.css">
<link rel="stylesheet" href="../../dcommon/css/respond-1140-deskop.css">
<script type="application/javascript" src="../../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">97/265</span> <!-- End Header -->
<div id="ARPLS027" class="chapter"><a id="CEGHCECB"></a>
<h1 class="chapter"><span class="secnum">93</span> DBMS_MVIEW</h1>
<p><code>DBMS_MVIEW<a id="sthref6380"></a></code> enables you to understand capabilities for materialized views and potential materialized views, including their rewrite availability. It also enables you to refresh materialized views that are not part of the same refresh group and purge logs.</p>
<div class="infobox-note">
<p class="notep1"><span class="bold">Note</span>:</p>
<code>DBMS_MVIEW</code> is a synonym for <code>DBMS_SNAPSHOT</code>.</div>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a class="olink REPLN003" href="../../server.112/e10706/repmview.htm#REPLN003"><span class="italic">Oracle Database Advanced Replication</span></a> for more information about using materialized views in a replication environment</p>
</li>
<li>
<p><a class="olink DWHSG" href="../../server.112/e25554/toc.htm"><span class="italic">Oracle Database Data Warehousing Guide</span></a> for more information about using materialized views in a data warehousing environment</p>
</li>
</ul>
</div>
<p>This chapter contains the following topics:</p>
<ul>
<li>
<p><a href="#CEGCAIAD">Using DBMS_MVIEW</a></p>
<ul>
<li>
<p>Operational Notes</p>
</li>
<li>
<p>Security Model</p>
</li>
<li>
<p>Rules and Limits</p>
</li>
</ul>
</li>
<li>
<p><a href="#i996759">Summary of DBMS_MVIEW Subprograms</a></p>
</li>
</ul>
<div class="refentry"><a id="CEGCAIAD"></a>
<hr />
<div id="ARPLS67180" class="refsect1">
<h2 class="refsect1"><a id="sthref6381"></a>Using DBMS_MVIEW</h2>
<p>This section contains topics which relate to using the <code>DBMS_MVIEW</code> package.</p>
<ul>
<li>
<p><a href="#i1001216">Operational Notes</a></p>
</li>
<li>
<p><a href="#BABHGBAB">Security Model</a></p>
</li>
<li>
<p><a href="#CEGJDDEA">Rules and Limits</a></p>
</li>
</ul>
<div id="ARPLS67181" class="refsect2"><a id="i1001216"></a>
<hr />
<h3 class="refsect2">Operational Notes</h3>
<p>If a query is less than 256 characters long, you can invoke <code>EXPLAIN_REWRITE</code> using the <code>EXECUTE</code> command from SQL*Plus. Otherwise, the recommended method is to use a PL/SQL <code>BEGIN..END</code> block, as shown in the examples in <code>/rdbms/demo/smxrw.sql</code>.</p>
</div>
<!-- class="refsect2" -->
<div id="ARPLS73297" class="refsect2"><a id="BABHGBAB"></a>
<hr />
<h3 class="refsect2">Security Model</h3>
<p>The <code>DBMS_MVIEW</code> package consists of a number of materialized view-related subprograms, each of which has different functionality and privilege requirements. The privilege model is generally based on the invoker's right. Each package subprogram is executed by first checking the privileges against the invoker. If all the required privileges are met, the subprogram will be executed. Otherwise, an insufficient privileges error will be thrown.</p>
</div>
<!-- class="refsect2" -->
<div id="ARPLS67182" class="refsect2"><a id="CEGJDDEA"></a>
<hr />
<h3 class="refsect2">Rules and Limits</h3>
<p>The <code>EXPLAIN_REWRITE</code> procedure cannot accept queries longer than 32627 characters. These restrictions also apply when passing the defining query of a materialized view to the <code>EXPLAIN_MVIEW</code> procedure.</p>
</div>
<!-- class="refsect2" --></div>
<!-- class="refsect1" -->
<a id="i996759"></a>
<hr />
<div id="ARPLS67183" class="refsect1">
<h2 class="refsect1"><a id="sthref6382"></a>Summary of DBMS_MVIEW Subprograms</h2>
<div id="ARPLS67184" class="tblformal">
<p class="titleintable"><a id="sthref6383"></a><a id="sthref6384"></a>Table 93-1 DBMS_MVIEW Package Subprograms</p>
<table class="cellalignment1229" title="DBMS_MVIEW Package Subprograms" summary="This table lists the DBMS_MVIEW subprograms in alphabetical order and briefly describes them." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t4">Subprogram</th>
<th class="cellalignment1227" id="r1c2-t4">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t4" headers="r1c1-t4">
<p><a href="#CEGGFHDA">BEGIN_TABLE_REORGANIZATION Procedure</a></p>
</td>
<td class="cellalignment1228" headers="r2c1-t4 r1c2-t4">
<p>Performs a process to preserve materialized view data needed for refresh</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t4" headers="r1c1-t4">
<p><a href="#i996947">END_TABLE_REORGANIZATION Procedure</a></p>
</td>
<td class="cellalignment1228" headers="r3c1-t4 r1c2-t4">
<p>Ensures that the materialized view data for the master table is valid and that the master table is in the proper state</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r4c1-t4" headers="r1c1-t4">
<p><a href="#i1000942">ESTIMATE_MVIEW_SIZE Procedure</a></p>
</td>
<td class="cellalignment1228" headers="r4c1-t4 r1c2-t4">
<p>Estimates the size of a materialized view that you might create, in bytes and rows</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r5c1-t4" headers="r1c1-t4">
<p><a href="#CEGGEHHC">EXPLAIN_MVIEW Procedure</a></p>
</td>
<td class="cellalignment1228" headers="r5c1-t4 r1c2-t4">
<p>Explains what is possible with a materialized view or potential materialized view</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r6c1-t4" headers="r1c1-t4">
<p><a href="#i997015">EXPLAIN_REWRITE Procedure</a></p>
</td>
<td class="cellalignment1228" headers="r6c1-t4 r1c2-t4">
<p>Explains why a query failed to rewrite or why the optimizer chose to rewrite a query with a particular materialized view or materialized views</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r7c1-t4" headers="r1c1-t4">
<p><a href="#CEGHBIBJ">I_AM_A_REFRESH Function</a></p>
</td>
<td class="cellalignment1228" headers="r7c1-t4 r1c2-t4">
<p>Returns the value of the <code>I_AM_REFRESH</code> package state</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r8c1-t4" headers="r1c1-t4">
<p><a href="#i997068">PMARKER Function</a></p>
</td>
<td class="cellalignment1228" headers="r8c1-t4 r1c2-t4">
<p>Returns a partition marker from a rowid, and is used for Partition Change Tracking (PCT)</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r9c1-t4" headers="r1c1-t4">
<p><a href="#i997090">PURGE_DIRECT_LOAD_LOG Procedure</a></p>
</td>
<td class="cellalignment1228" headers="r9c1-t4 r1c2-t4">
<p>Purges rows from the direct loader log after they are no longer needed by any materialized views (used with data warehousing)</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r10c1-t4" headers="r1c1-t4">
<p><a href="#i997108">PURGE_LOG Procedure</a></p>
</td>
<td class="cellalignment1228" headers="r10c1-t4 r1c2-t4">
<p>Purges rows from the materialized view log</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r11c1-t4" headers="r1c1-t4">
<p><a href="#CEGIEEEE">PURGE_MVIEW_FROM_LOG Procedure</a></p>
</td>
<td class="cellalignment1228" headers="r11c1-t4 r1c2-t4">
<p>Purges rows from the materialized view log</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r12c1-t4" headers="r1c1-t4">
<p><a href="#i997194">REFRESH Procedures</a></p>
</td>
<td class="cellalignment1228" headers="r12c1-t4 r1c2-t4">
<p>Refreshes one or more materialized views that are not members of the same refresh group</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r13c1-t4" headers="r1c1-t4">
<p><a href="#i997279">REFRESH_ALL_MVIEWS Procedure</a></p>
</td>
<td class="cellalignment1228" headers="r13c1-t4 r1c2-t4">
<p>Refreshes all materialized views that do not reflect changes to their master table or master materialized view</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r14c1-t4" headers="r1c1-t4">
<p><a href="#i997332">REFRESH_DEPENDENT Procedures</a></p>
</td>
<td class="cellalignment1228" headers="r14c1-t4 r1c2-t4">
<p>Refreshes all table-based materialized views that depend on a specified master table or master materialized view, or list of master tables or master materialized views</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r15c1-t4" headers="r1c1-t4">
<p><a href="#CEGHDBIJ">REGISTER_MVIEW Procedure</a></p>
</td>
<td class="cellalignment1228" headers="r15c1-t4 r1c2-t4">
<p>Enables the administration of individual materialized views</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r16c1-t4" headers="r1c1-t4">
<p><a href="#i997476">UNREGISTER_MVIEW Procedure</a></p>
</td>
<td class="cellalignment1228" headers="r16c1-t4 r1c2-t4">
<p>Enables the administration of individual materialized views once invoked at a master site or master materialized view site to unregister a materialized view</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<div id="ARPLS67185" class="refsect2"><a id="CEGGFHDA"></a>
<hr />
<h3 class="refsect2">BEGI<a id="sthref6385"></a>N_TABLE_REORGANIZATION Procedure</h3>
<p>This procedure performs a process to preserve materialized view data needed for refresh. It must be called before a master table is reorganized.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref6386"></a>Syntax</p>
<pre>
DBMS_MVIEW.BEGIN_TABLE_REORGANIZATION (
   tabowner    IN   VARCHAR2,
   tabname     IN   VARCHAR2);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref6387"></a>Parameters</p>
<div id="ARPLS67186" class="tblformal">
<p class="titleintable"><a id="sthref6388"></a><a id="sthref6389"></a>Table 93-2 BEGIN_TABLE_REORGANIZATION Procedure Parameters</p>
<table class="cellalignment1229" title="BEGIN_TABLE_REORGANIZATION Procedure Parameters" summary="This table describes Parameters used by the DBMS_MVIEW.BEGIN_TABLE_REORGANIZATION subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t5">Parameter</th>
<th class="cellalignment1227" id="r1c2-t5">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t5" headers="r1c1-t5">
<p><code>tabowner</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t5 r1c2-t5">
<p>Owner of the table being reorganized</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t5" headers="r1c1-t5">
<p><code>tabname</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t5 r1c2-t5">
<p>Name of the table being reorganized</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS67187" class="refsect2"><a id="i996947"></a>
<hr />
<h3 class="refsect2">E<a id="sthref6390"></a>ND_TABLE_REORGANIZATION Procedure</h3>
<p>This procedure ensures that the materialized view data for the master table is valid and that the master table is in the proper state. It must be called after a master table is reorganized.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref6391"></a>Syntax</p>
<pre>
DBMS_MVIEW.END_TABLE_REORGANIZATION (
   tabowner    IN   VARCHAR2,
   tabname     IN   VARCHAR2);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref6392"></a>Parameters</p>
<div id="ARPLS67188" class="tblformal">
<p class="titleintable"><a id="sthref6393"></a><a id="sthref6394"></a>Table 93-3 END_TABLE_REORGANIZATION Procedure Parameters</p>
<table class="cellalignment1229" title="END_TABLE_REORGANIZATION Procedure Parameters" summary="This table describes Parameters used by the DBMS_MVIEW.END_TABLE_REORGANIZATION subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t6">Parameter</th>
<th class="cellalignment1227" id="r1c2-t6">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t6" headers="r1c1-t6">
<p><code>tabowner</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t6 r1c2-t6">
<p>Owner of the table being reorganized</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t6" headers="r1c1-t6">
<p><code>tabname</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t6 r1c2-t6">
<p>Name of the table being reorganized</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS67189" class="refsect2"><a id="i1000942"></a>
<hr />
<h3 class="refsect2"><a id="sthref6395"></a>ESTIMATE_MVIEW_SIZE Procedure</h3>
<p>This procedure estimates the size of a materialized view that you might create, in bytes and number of rows.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref6396"></a>Syntax</p>
<pre>
DBMS_MVIEW.ESTIMATE_MVIEW_SIZE (
   stmt_id       IN  VARCHAR2,
   select_clause IN  VARCHAR2,
   num_rows      OUT NUMBER,
   num_bytes     OUT NUMBER);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref6397"></a>Parameters</p>
<div id="ARPLS67190" class="tblformal">
<p class="titleintable"><a id="sthref6398"></a><a id="sthref6399"></a>Table 93-4 ESTIMATE_MVIEW_SIZE Procedure Parameters</p>
<table class="cellalignment1229" title="ESTIMATE_MVIEW_SIZE Procedure Parameters " summary="This table describes Parameters used by the DBMS_MVIEW.ESTIMATE_MVIEW_SIZE subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t7">Parameter</th>
<th class="cellalignment1227" id="r1c2-t7">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t7" headers="r1c1-t7">
<p><code>stmt_id</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t7 r1c2-t7">
<p>Arbitrary string used to identify the statement in an <code>EXPLAIN PLAN</code></p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t7" headers="r1c1-t7">
<p><code>select_clause</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t7 r1c2-t7">
<p>The <code>SELECT</code> statement to be analyzed</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r4c1-t7" headers="r1c1-t7">
<p><code>num_rows</code></p>
</td>
<td class="cellalignment1228" headers="r4c1-t7 r1c2-t7">
<p>Estimated cardinality</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r5c1-t7" headers="r1c1-t7">
<p><code>num_bytes</code></p>
</td>
<td class="cellalignment1228" headers="r5c1-t7 r1c2-t7">
<p>Estimated number of bytes</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS67191" class="refsect2"><a id="CEGGEHHC"></a>
<hr />
<h3 class="refsect2">EXPLAIN_MVIEW Procedure <a id="sthref6400"></a></h3>
<p>This procedure enables you to learn what is possible with a materialized view or potential materialized view. For example, you can determine if a materialized view is fast refreshable and what types of query rewrite you can perform with a particular materialized view.</p>
<p>Using this procedure is straightforward. You simply call <code>DBMS_MVIEW</code>.<code>EXPLAIN_MVIEW</code>, passing in as parameters the schema and materialized view name for an existing materialized view. Alternatively, you can specify the <code>SELECT</code> string or <code>CREATE</code> <code>MATERIALIZED</code> <code>VIEW</code> statement for a potential materialized view. The materialized view or potential materialized view is then analyzed and the results are written into either a table called <code>MV_CAPABILITIES_TABLE</code>, which is the default, or to an array called <code>MSG_ARRAY</code>.</p>
<p>The procedure is overloaded:</p>
<ul>
<li>
<p>The first version is for explaining an existing or potential materialized view with output to <code>MV_CAPABILITIES_TABLE</code>.</p>
</li>
<li>
<p>The second version is for explaining an existing or potential materialized view with output to a <code>VARRAY</code>.</p>
</li>
</ul>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref6401"></a>Syntax</p>
<pre>
DBMS_MVIEW.EXPLAIN_MVIEW (
   mv            IN VARCHAR2,
   statement_id  IN VARCHAR2:= NULL);

DBMS_MVIEW.EXPLAIN_MVIEW (
   mv          IN VARCHAR2,
   msg_array   OUT SYS.ExplainMVArrayType);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref6402"></a>Parameters</p>
<div id="ARPLS67192" class="tblformal">
<p class="titleintable"><a id="sthref6403"></a><a id="sthref6404"></a>Table 93-5 EXPLAIN_MVIEW Procedure Parameters</p>
<table class="cellalignment1229" title="EXPLAIN_MVIEW Procedure Parameters" summary="This table describes Parameters used by the DBMS_MVIEW.EXPLAIN_MVIEW subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t8">Parameter</th>
<th class="cellalignment1227" id="r1c2-t8">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t8" headers="r1c1-t8">
<p><code>mv</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t8 r1c2-t8">
<p>The name of an existing materialized view (optionally qualified with the owner name separated by a ".") or a <code>SELECT</code> statement or a <code>CREATE</code> <code>MATERIALIZED</code> <code>VIEW</code> statement for a potential materialized view.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t8" headers="r1c1-t8">
<p><code>statement_id</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t8 r1c2-t8">
<p>A client-supplied unique identifier to associate output rows with specific invocations of <code>EXPLAIN_MVIEW</code></p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r4c1-t8" headers="r1c1-t8">
<p><code>msg_array</code></p>
</td>
<td class="cellalignment1228" headers="r4c1-t8 r1c2-t8">
<p>The PL/SQL <code>VARRAY</code> that receives the output. Use this parameter to direct <code>EXPLAIN_MVIEW</code>'s output to a PL/SQL VARRAY rather than <code>MV_CAPABILITIES_TABLE</code>.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref6405"></a>Usage Notes</p>
<p>You must run the <code>utlxmv.sql</code> script to create <code>MV_CAPABILITIES_TABLE</code> in the current schema prior to calling <code>EXPLAIN_MVIEW</code> except when you direct output to a <code>VARRAY</code>. The script is found in the <code>ADMIN</code> directory.</p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS67193" class="refsect2"><a id="i997015"></a>
<hr />
<h3 class="refsect2">EXPLAIN_REWRITE Procedure<a id="sthref6406"></a></h3>
<p>This procedure enables you to learn why a query failed to rewrite, or, if it rewrites, which materialized views will be used. Using the results from the procedure, you can take the appropriate action needed to make a query rewrite if at all possible. The query specified in the <code>EXPLAIN_REWRITE</code> statement is never actually executed.</p>
<p>A demo file, <code>xrwutl.sql</code>, is available to help format the output from <code>EXPLAIN_REWRITE</code>.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref6407"></a>Syntax</p>
<p>You can obtain the output from <code>DBMS_MVIEW.EXPLAIN_REWRITE</code> in two ways. The first is to use a table, while the second is to create a <code>VARRAY</code>. The following shows the basic syntax for using an output table:</p>
<pre>
DBMS_MVIEW.EXPLAIN_REWRITE (
    query           VARCHAR2,
    mv              VARCHAR2(30),
    statement_id    VARCHAR2(30));
</pre>
<p>You can create an output table called <code>REWRITE_TABLE</code> by executing the <code>utlxrw.sql</code> script.</p>
<p>The <code>query</code> parameter is a text string representing the SQL query. The parameter, <code>mv</code>, is a fully qualified materialized view name in the form of <code>schema.mv</code>. This is an optional parameter. When it is not specified, <code>EXPLAIN_REWRITE</code> returns any relevant messages regarding all the materialized views considered for rewriting the given query. When <code>schema</code> is omitted and only <code>mv</code> is specified, <code>EXPLAIN_REWRITE</code> looks for the materialized view in the current schema.</p>
<p>If you want to direct the output of <code>EXPLAIN_REWRITE</code> to a <code>VARRAY</code> instead of a table, you should call the procedure as follows:</p>
<pre>
DBMS_MVIEW.EXPLAIN_REWRITE (
    query           [VARCHAR2 | CLOB],
    mv               VARCHAR2(30),
    output_array     SYS.RewriteArrayType);
</pre>
<p>Note that if the query is less than 256 characters long, <code>EXPLAIN_REWRITE</code> can be easily invoked with the <code>EXECUTE</code> command from SQL*Plus. Otherwise, the recommended method is to use a PL/SQL <code>BEGIN... END</code> block, as shown in the examples in <code>/rdbms/demo/smxrw*</code>.</p>
<p>You can also use <code>EXPLAIN_REWRITE</code> with multiple materialized views, in which case the syntax will be the same as with a single materialized view, except that the materialized views are specified by a comma-delimited string. For example, to find out whether a given set of materialized views <code>mv1</code>, <code>mv2</code>, and <code>mv3</code> could be used to rewrite the query, <code>query_txt</code>, and, if not, why not, use <code>EXPLAIN_REWRITE</code> as follows:</p>
<pre>
DBMS_MVIEW.EXPLAIN_REWRITE(query_txt, 'mv1, mv2, mv3')
</pre>
<p>See <a class="olink DWHSG080" href="../../server.112/e25554/qradv.htm#DWHSG080"><span class="italic">Oracle Database Data Warehousing Guide</span></a> for more information on using the <code>EXPLAIN_REWRITE</code> procedure.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref6408"></a>Parameters</p>
<div id="ARPLS67194" class="tblformal">
<p class="titleintable"><a id="sthref6409"></a><a id="sthref6410"></a>Table 93-6 EXPLAIN_REWRITE Procedure Parameters</p>
<table class="cellalignment1229" title="EXPLAIN_REWRITE Procedure Parameters" summary="This table describes Parameters used by the DBMS_MVIEW.EXPLAIN_REWRITE subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t9">Parameter</th>
<th class="cellalignment1227" id="r1c2-t9">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t9" headers="r1c1-t9">
<p><code>query</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t9 r1c2-t9">
<p>SQL <code>SELECT</code> statement to be explained</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t9" headers="r1c1-t9">
<p><code>mv</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t9 r1c2-t9">
<p>The fully qualified name of an existing materialized view in the form of <code>SCHEMA.MV</code>. For multiple materialized views, you can provide a comma-delimited list of names.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r4c1-t9" headers="r1c1-t9">
<p><code>statement_id</code></p>
</td>
<td class="cellalignment1228" headers="r4c1-t9 r1c2-t9">
<p>A client-supplied unique identifier to distinguish output messages</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r5c1-t9" headers="r1c1-t9">
<p><code>msg_array</code></p>
</td>
<td class="cellalignment1228" headers="r5c1-t9 r1c2-t9">
<p>The PL/SQL <code>VARRAY</code> that receives the output. Use this parameter to direct <code>EXPLAIN_REWRITE</code>'s output to a PL/SQL <code>VARRAY</code>.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref6411"></a>Usage Notes</p>
<p>To obtain the output into a table, you must run the <code>utlxrw.sq</code>l script before calling <code>EXPLAIN_REWRITE</code>. This script creates a table named <code>REWRITE_TABLE</code> in the current schema.</p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS67195" class="refsect2"><a id="CEGHBIBJ"></a>
<hr />
<h3 class="refsect2">I_AM_A_REFRESH<a id="sthref6412"></a><a id="sthref6413"></a> Function</h3>
<p>This function returns the value of the <code>I_AM_REFRESH</code> package state.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref6414"></a>Syntax</p>
<pre>
DBMS_MVIEW.I_AM_A_REFRESH
   RETURN BOOLEAN;
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref6415"></a>Return Values</p>
<p>A return value of <code>true</code> indicates that all local replication triggers for materialized views are effectively disabled in this session because each replication trigger first checks this state. A return value of <code>false</code> indicates that these triggers are enabled.</p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS67196" class="refsect2"><a id="i997068"></a>
<hr />
<h3 class="refsect2">PMARKER<a id="sthref6416"></a> Function</h3>
<p>This function returns a partition marker from a rowid. It is used for Partition Change Tracking (PCT).</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref6417"></a>Syntax</p>
<pre>
DBMS_MVIEW.PMARKER(
   rid IN ROWID)
 RETURN NUMBER; 
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref6418"></a>Parameters</p>
<div id="ARPLS67197" class="tblformal">
<p class="titleintable"><a id="sthref6419"></a><a id="sthref6420"></a>Table 93-7 PMARKER Function Parameters</p>
<table class="cellalignment1229" title="PMARKER Function Parameters" summary="This table describes Parameters used by the DBMS_MVIEW.PMARKER subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t10">Parameter</th>
<th class="cellalignment1227" id="r1c2-t10">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t10" headers="r1c1-t10">
<p><code>rid</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t10 r1c2-t10">
<p>The rowid of a row entry in a master table</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS67198" class="refsect2"><a id="i997090"></a>
<hr />
<h3 class="refsect2">PURGE_DIRECT_LOAD_LOG<a id="sthref6421"></a><a id="sthref6422"></a> Procedure</h3>
<p>This procedure removes entries from the direct loader log after they are no longer needed for any known materialized view. This procedure usually is used in environments using Oracle's data warehousing technology.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink DWHSG" href="../../server.112/e25554/toc.htm"><span class="variable">Oracle Database Data Warehousing Guide</span></a> for more information</div>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref6423"></a>Syntax</p>
<pre>
DBMS_MVIEW.PURGE_DIRECT_LOAD_LOG();
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS67199" class="refsect2"><a id="i997108"></a>
<hr />
<h3 class="refsect2">PURGE_LOG<a id="sthref6424"></a><a id="sthref6425"></a> Procedure</h3>
<p>This procedure purges rows from the materialized view log.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref6426"></a>Syntax</p>
<pre>
DBMS_MVIEW.PURGE_LOG (
   master        IN   VARCHAR2,
   num           IN   BINARY_INTEGER := 1,
   flag          IN   VARCHAR2       := 'NOP');
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref6427"></a>Parameters</p>
<div id="ARPLS67200" class="tblformal">
<p class="titleintable"><a id="sthref6428"></a><a id="sthref6429"></a>Table 93-8 PURGE_LOG Procedure Parameters</p>
<table class="cellalignment1229" title="PURGE_LOG Procedure Parameters" summary="This table describes Parameters used by the DBMS_MVIEW.PURGE_LOG subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t12">Parameter</th>
<th class="cellalignment1227" id="r1c2-t12">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t12" headers="r1c1-t12">
<p><code>master</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t12 r1c2-t12">
<p>Name of the master table or master materialized view.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t12" headers="r1c1-t12">
<p><code>num</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t12 r1c2-t12">
<p>Number of least recently refreshed materialized views whose rows you want to remove from materialized view log. For example, the following statement deletes rows needed to refresh the two least recently refreshed materialized views:</p>
<p><code>DBMS_MVIEW.PURGE_LOG('master_table', 2);</code></p>
<p>To delete all rows in the materialized view log, indicate a high number of materialized views to disregard, as in this example:</p>
<p><code>DBMS_MVIEW.PURGE_LOG('master_table',9999);</code></p>
<p>This statement completely purges the materialized view log that corresponds to <code>master_table</code> if fewer than 9999 materialized views are based on <code>master_table</code>. A simple materialized view whose rows have been purged from the materialized view log must be completely refreshed the next time it is refreshed.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r4c1-t12" headers="r1c1-t12">
<p><code>flag</code></p>
</td>
<td class="cellalignment1228" headers="r4c1-t12 r1c2-t12">
<p>Specify <code>delete</code> to guarantee that rows are deleted from the materialized view log for at least one materialized view. This parameter can override the setting for the parameter <code>num</code>. For example, the following statement deletes rows from the materialized view log that has dependency rows in the least recently refreshed materialized view:</p>
<p><code>DBMS_MVIEW.PURGE_LOG('master_table',1,'delete');</code></p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS67201" class="refsect2"><a id="CEGIEEEE"></a>
<hr />
<h3 class="refsect2">PURGE_MVIEW_FROM_LOG<a id="sthref6430"></a><a id="sthref6431"></a> Procedure</h3>
<p>This procedure is called on the master site or master materialized view site to delete the rows in materialized view refresh related data dictionary tables maintained at the master for the specified materialized view identified by its <code>mview_id</code> or the combination of the <code>mviewowner</code>, <code>mviewname</code>, and the <code>mviewsite</code>. If the materialized view specified is the oldest materialized view to have refreshed from any of the master tables or master materialized views, then the materialized view log is also purged. This procedure does not unregister the materialized view.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref6432"></a>Syntax</p>
<pre>
<a id="i997154"></a>
DBMS_MVIEW.PURGE_MVIEW_FROM_LOG (
   mview_id       IN   BINARY_INTEGER  |
   mviewowner     IN   VARCHAR2,
   mviewname      IN   VARCHAR2, 
   mviewsite      IN   VARCHAR2);
</pre>
<div class="infobox-note">
<p class="notep1">Note:</p>
This procedure is overloaded. The <code>mview_id</code> parameter is mutually exclusive with the three remaining parameters: <code>mviewowner</code>, <code>mviewname</code>, and <code>mviewsite</code>.</div>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref6433"></a>Parameters</p>
<div id="ARPLS67202" class="tblformal">
<p class="titleintable"><a id="sthref6434"></a><a id="sthref6435"></a>Table 93-9 PURGE_MVIEW_FROM_LOG Procedure Parameters</p>
<table class="cellalignment1229" title="PURGE_MVIEW_FROM_LOG Procedure Parameters" summary="This table describes Parameters used by the DBMS_MVIEW.PURGE_MVIEW_FROM_LOG subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t14">Parameter</th>
<th class="cellalignment1227" id="r1c2-t14">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t14" headers="r1c1-t14">
<p><code>mview_id</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t14 r1c2-t14">
<p>If you want to execute this procedure based on the identification of the target materialized view, specify the materialized view identification using the <code>mview_id</code> parameter. Query the <code>DBA_BASE_TABLE_MVIEWS</code> view at the materialized view log site for a listing of materialized view IDs.</p>
<p>Executing this procedure based on the materialized view identification is useful if the target materialized view is not listed in the list of registered materialized views (<code>DBA_REGISTERED_MVIEWS</code>).</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t14" headers="r1c1-t14">
<p><code>mviewowner</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t14 r1c2-t14">
<p>If you do not specify an <code>mview_id</code>, enter the owner of the target materialized view using the <code>mviewowner</code> parameter. Query the <code>DBA_REGISTERED_MVIEWS</code> view at the materialized view log site to view the materialized view owners.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r4c1-t14" headers="r1c1-t14">
<p><code>mviewname</code></p>
</td>
<td class="cellalignment1228" headers="r4c1-t14 r1c2-t14">
<p>If you do not specify an <code>mview_id</code>, enter the name of the target materialized view using the <code>mviewname</code> parameter. Query the <code>DBA_REGISTERED_MVIEWS</code> view at the materialized view log site to view the materialized view names.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r5c1-t14" headers="r1c1-t14">
<p><code>mviewsite</code></p>
</td>
<td class="cellalignment1228" headers="r5c1-t14 r1c2-t14">
<p>If you do not specify an <code>mview_id</code>, enter the site of the target materialized view using the <code>mviewsite</code> parameter. Query the <code>DBA_REGISTERED_MVIEWS</code> view at the materialized view log site to view the materialized view sites.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref6436"></a>Usage Notes</p>
<p>If there is an error while purging one of the materialized view logs, the successful purge operations of the previous materialized view logs are not rolled back. This is to minimize the size of the materialized view logs. In case of an error, this procedure can be invoked again until all the materialized view logs are purged.</p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS67203" class="refsect2"><a id="i997194"></a>
<hr />
<h3 class="refsect2">REFRESH<a id="sthref6437"></a><a id="sthref6438"></a><a id="sthref6439"></a> Procedures</h3>
<p>This procedure refreshes a list of materialized views.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref6440"></a>Syntax</p>
<pre>
DBMS_MVIEW.REFRESH (
   { list                 IN     VARCHAR2,
   | tab                  IN     DBMS_UTILITY.UNCL_ARRAY,}
   method                 IN     VARCHAR2       := NULL,
   rollback_seg           IN     VARCHAR2       := NULL,
   push_deferred_rpc      IN     BOOLEAN        := true,
   refresh_after_errors   IN     BOOLEAN        := false,
   purge_option           IN     BINARY_INTEGER := 1,
   parallelism            IN     BINARY_INTEGER := 0,
   heap_size              IN     BINARY_INTEGER := 0,
   atomic_refresh         IN     BOOLEAN        := true,
   nested                 IN     BOOLEAN        := false);
</pre>
<div class="infobox-note">
<p class="notep1">Note:</p>
This procedure is overloaded. The <code>list</code> and <code>tab</code> parameters are mutually exclusive.</div>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref6441"></a>Parameters</p>
<div id="ARPLS67204" class="tblformal">
<p class="titleintable"><a id="sthref6442"></a><a id="sthref6443"></a>Table 93-10 REFRESH Procedure Parameters</p>
<table class="cellalignment1229" title="REFRESH Procedure Parameters" summary="This table describes Parameters used by the DBMS_MVIEW.REFRESH subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t16">Parameter</th>
<th class="cellalignment1227" id="r1c2-t16">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t16" headers="r1c1-t16">
<p><code>list | tab</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t16 r1c2-t16">
<p>Comma-delimited list of materialized views that you want to refresh. (Synonyms are not supported.) These materialized views can be located in different schemas and have different master tables or master materialized views. However, all of the listed materialized views must be in your local database.</p>
<p>Alternatively, you may pass in a PL/SQL index-by table of type <code>DBMS_UTILITY.UNCL_ARRAY</code>, where each element is the name of a materialized view.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t16" headers="r1c1-t16">
<p><code>method</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t16 r1c2-t16">
<p>A string of refresh methods indicating how to refresh the listed materialized views. An <code>f</code> indicates fast refresh, <code>?</code> indicates force refresh, <code>C</code> or <code>c</code> indicates complete refresh, and <code>A</code> or <code>a</code> indicates always refresh. <code>A</code> and <code>C</code> are equivalent. <code>P</code> or <code>p</code> refreshes by recomputing the rows in the materialized view affected by changed partitions in the detail tables.</p>
<p>If a materialized view does not have a corresponding refresh method (that is, if more materialized views are specified than refresh methods), then that materialized view is refreshed according to its default refresh method. For example, consider the following <code>EXECUTE</code> statement within SQL*Plus:</p>
<pre>
DBMS_MVIEW.REFRESH
   ('countries_mv,regions_mv,hr.employees_mv','cf');
</pre>
<p>This statement performs a complete refresh of the <code>countries_mv</code> materialized view, a fast refresh of the <code>regions_mv</code> materialized view, and a default refresh of the <code>hr.employees</code> materialized view.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r4c1-t16" headers="r1c1-t16">
<p><code>rollback_seg</code></p>
</td>
<td class="cellalignment1228" headers="r4c1-t16 r1c2-t16">
<p>Name of the materialized view site rollback segment to use while refreshing materialized views</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r5c1-t16" headers="r1c1-t16">
<p><code>push_deferred_rpc</code></p>
</td>
<td class="cellalignment1228" headers="r5c1-t16 r1c2-t16">
<p>Used by updatable materialized views only. Set this parameter to <code>true</code> if you want to push changes from the materialized view to its associated master tables or master materialized views before refreshing the materialized view. Otherwise, these changes may appear to be temporarily lost.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r6c1-t16" headers="r1c1-t16">
<p><code>refresh_after_errors</code></p>
</td>
<td class="cellalignment1228" headers="r6c1-t16 r1c2-t16">
<p>If this parameter is <code>true</code>, an updatable materialized view continues to refresh even if there are outstanding conflicts logged in the <code>DEFERROR</code> view for the materialized view's master table or master materialized view. If this parameter is <code>true</code> and <code>atomic_refresh</code> is <code>false</code>, this procedure continues to refresh other materialized views if it fails while refreshing a materialized view.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r7c1-t16" headers="r1c1-t16">
<p><code>purge_option</code></p>
</td>
<td class="cellalignment1228" headers="r7c1-t16 r1c2-t16">
<p>If you are using the parallel propagation mechanism (in other words, parallelism is set to 1 or greater), 0 means do not purge, 1 means lazy purge, and 2 means aggressive purge. In most cases, lazy purge is the optimal setting. Set purge to aggressive to trim the queue if multiple master replication groups are pushed to different target sites, and updates to one or more replication groups are infrequent and infrequently pushed. If all replication groups are infrequently updated and pushed, then set this parameter to <code>0</code> and occasionally execute <code>PUSH</code> with this parameter set to <code>2</code> to reduce the queue.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r8c1-t16" headers="r1c1-t16">
<p><code>parallelism</code></p>
</td>
<td class="cellalignment1228" headers="r8c1-t16 r1c2-t16">
<p>0 specifies serial propagation.</p>
<p><span class="italic">n</span> &gt; 1 specifies parallel propagation with <span class="italic">n</span> parallel processes.</p>
<p>1 specifies parallel propagation using only one parallel process.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r9c1-t16" headers="r1c1-t16">
<p><code>heap_size</code></p>
</td>
<td class="cellalignment1228" headers="r9c1-t16 r1c2-t16">
<p>Maximum number of transactions to be examined simultaneously for parallel propagation scheduling. Oracle automatically calculates the default setting for optimal performance.</p>
<p>Note<span class="bold">:</span> Do not set this parameter unless directed to do so by Oracle Support Services.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r10c1-t16" headers="r1c1-t16">
<p><code>atomic_refresh</code></p>
</td>
<td class="cellalignment1228" headers="r10c1-t16 r1c2-t16">
<p>If this parameter is set to <code>true</code>, then the list of materialized views is refreshed in a single transaction. All of the refreshed materialized views are updated to a single point in time. If the refresh fails for any of the materialized views, none of the materialized views are updated.</p>
<p>If this parameter is set to <code>false</code>, then each of the materialized views is refreshed in a separate transaction.</p>
<p>As part of complete refresh, if truncate is used (non-atomic refresh), unique index rebuild is executed. <code>INDEX</code> <code>REBUILD</code> automatically computes statistics. Thus, statistics are updated for truncated tables.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r11c1-t16" headers="r1c1-t16">
<p><code>nested</code></p>
</td>
<td class="cellalignment1228" headers="r11c1-t16 r1c2-t16">
<p>If <code>true</code>, then perform nested refresh operations for the specified set of materialized views. Nested refresh operations refresh all the depending materialized views and the specified set of materialized views based on a dependency order to ensure the nested materialized views are truly fresh with respect to the underlying base tables.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS67205" class="refsect2"><a id="i997279"></a>
<hr />
<h3 class="refsect2">REFRESH_ALL_MVIEWS<a id="sthref6444"></a><a id="sthref6445"></a><a id="sthref6446"></a> Procedure</h3>
<p>This procedure refreshes all materialized views that have the following properties:</p>
<ul>
<li>
<p>The materialized view has not been refreshed since the most recent change to a master table or master materialized view on which it depends.</p>
</li>
<li>
<p>The materialized view and all of the master tables or master materialized views on which it depends are local.</p>
</li>
<li>
<p>The materialized view is in the view <code>DBA_MVIEWS</code>.</p>
</li>
</ul>
<p>This procedure is intended for use with data warehouses.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref6447"></a>Syntax</p>
<pre>
DBMS_MVIEW.REFRESH_ALL_MVIEWS (
   number_of_failures     OUT   BINARY_INTEGER,
   method                 IN    VARCHAR2         := NULL,
   rollback_seg           IN    VARCHAR2         := NULL,
   refresh_after_errors   IN    BOOLEAN          := false,
   atomic_refresh         IN    BOOLEAN          := true);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref6448"></a>Parameters</p>
<div id="ARPLS67206" class="tblformal">
<p class="titleintable"><a id="sthref6449"></a><a id="sthref6450"></a>Table 93-11 REFRESH_ALL_MVIEWS Procedure Parameters</p>
<table class="cellalignment1229" title="REFRESH_ALL_MVIEWS Procedure Parameters" summary="This table describes Parameters used by the DBMS_MVIEW.REFRESH_ALL_MVIEWS subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t17">Parameter</th>
<th class="cellalignment1227" id="r1c2-t17">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t17" headers="r1c1-t17">
<p><code>number_of_failures</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t17 r1c2-t17">
<p>Returns the number of failures that occurred during processing</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t17" headers="r1c1-t17">
<p><code>method</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t17 r1c2-t17">
<p>A single refresh method indicating the type of refresh to perform for each materialized view that is refreshed. <code>F</code> or <code>f</code> indicates fast refresh, <code>?</code> indicates force refresh, <code>C</code> or c indicates complete refresh, and <code>A</code> or a indicates always refresh. <code>A</code> and <code>C</code> are equivalent. If no method is specified, a materialized view is refreshed according to its default refresh method. <code>P</code> or <code>p</code> refreshes by recomputing the rows in the materialized view affected by changed partitions in the detail tables.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r4c1-t17" headers="r1c1-t17">
<p><code>rollback_seg</code></p>
</td>
<td class="cellalignment1228" headers="r4c1-t17 r1c2-t17">
<p>Name of the materialized view site rollback segment to use while refreshing materialized views</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r5c1-t17" headers="r1c1-t17">
<p><code>refresh_after_errors</code></p>
</td>
<td class="cellalignment1228" headers="r5c1-t17 r1c2-t17">
<p>If this parameter is <code>true</code>, an updatable materialized view continues to refresh even if there are outstanding conflicts logged in the <code>DEFERROR</code> view for the materialized view's master table or master materialized view. If this parameter is <code>true</code> and <code>atomic_refresh</code> is <code>false</code>, this procedure continues to refresh other materialized views if it fails while refreshing a materialized view.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r6c1-t17" headers="r1c1-t17">
<p><code>atomic_refresh</code></p>
</td>
<td class="cellalignment1228" headers="r6c1-t17 r1c2-t17">
<p>If this parameter is set to <code>true</code>, then the refreshed materialized views are refreshed in a single transaction. All of the refreshed materialized views are updated to a single point in time. If the refresh fails for any of the materialized views, none of the materialized views are updated.</p>
<p>If this parameter is set to <code>false</code>, then each of the refreshed materialized views is refreshed in a separate transaction.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS67207" class="refsect2"><a id="i997332"></a>
<hr />
<h3 class="refsect2">REFRESH_DEPENDENT<a id="sthref6451"></a><a id="sthref6452"></a><a id="sthref6453"></a> Procedures</h3>
<p>This procedure refreshes all materialized views that have the following properties:</p>
<ul>
<li>
<p>The materialized view depends on a master table or master materialized view in the list of specified masters.</p>
</li>
<li>
<p>The materialized view has not been refreshed since the most recent change to a master table or master materialized view on which it depends.</p>
</li>
<li>
<p>The materialized view and all of the master tables or master materialized views on which it depends are local.</p>
</li>
<li>
<p>The materialized view is in the view <code>DBA_MVIEWS</code>.</p>
</li>
</ul>
<p>This procedure is intended for use with data warehouses.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref6454"></a>Syntax</p>
<pre>
DBMS_MVIEW.REFRESH_DEPENDENT (
   number_of_failures     OUT    BINARY_INTEGER,
   { list                 IN     VARCHAR2,
   | tab                  IN     DBMS_UTILITY.UNCL_ARRAY,}
   method                 IN     VARCHAR2    := NULL,
   rollback_seg           IN     VARCHAR2    := NULL,
   refresh_after_errors   IN     BOOLEAN     := false,
   atomic_refresh         IN     BOOLEAN     := true,
   nested                 IN     BOOLEAN     := false);
</pre>
<div class="infobox-note">
<p class="notep1">Note:</p>
This procedure is overloaded. The <code>list</code> and <code>tab</code> parameters are mutually exclusive.</div>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref6455"></a>Parameters</p>
<div id="ARPLS67208" class="tblformal">
<p class="titleintable"><a id="sthref6456"></a><a id="sthref6457"></a>Table 93-12 REFRESH_DEPENDENT Procedure Parameters</p>
<table class="cellalignment1229" title="REFRESH_DEPENDENT Procedure Parameters" summary="This table describes Parameters used by the DBMS_MVIEW.REFRESH_DEPENDENT subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t19">Parameter</th>
<th class="cellalignment1227" id="r1c2-t19">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t19" headers="r1c1-t19">
<p><code>number_of_failures</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t19 r1c2-t19">
<p>Returns the number of failures that occurred during processing</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t19" headers="r1c1-t19">
<p><code>list | tab</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t19 r1c2-t19">
<p>Comma-delimited list of master tables or master materialized views on which materialized views can depend. (Synonyms are not supported.) These tables and the materialized views that depend on them can be located in different schemas. However, all of the tables and materialized views must be in your local database.</p>
<p>Alternatively, you may pass in a PL/SQL index-by table of type <code>DBMS_UTILITY.UNCL_ARRAY</code>, where each element is the name of a table.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r4c1-t19" headers="r1c1-t19">
<p><code>method</code></p>
</td>
<td class="cellalignment1228" headers="r4c1-t19 r1c2-t19">
<p>A string of refresh methods indicating how to refresh the dependent materialized views. All of the materialized views that depend on a particular table are refreshed according to the refresh method associated with that table. <code>F</code> or <code>f</code> indicates fast refresh, ? indicates force refresh, <code>C</code> or <code>c</code> indicates complete refresh, and <code>A</code> or <code>a</code> indicates always refresh. <code>A</code> and <code>C</code> are equivalent. <code>P</code> or <code>p</code> refreshes by recomputing the rows in the materialized view affected by changed partitions in the detail tables.</p>
<p>If a table does not have a corresponding refresh method (that is, if more tables are specified than refresh methods), then any materialized view that depends on that table is refreshed according to its default refresh method. For example, the following <code>EXECUTE</code> statement within SQL*Plus:</p>
<pre>
DBMS_MVIEW.REFRESH_DEPENDENT
   ('employees,deptartments,hr.regions','cf');
</pre>
<p>performs a complete refresh of the materialized views that depend on the <code>employees</code> table, a fast refresh of the materialized views that depend on the <code>departments</code> table, and a default refresh of the materialized views that depend on the <code>hr.regions</code> table.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r5c1-t19" headers="r1c1-t19">
<p><code>rollback_seg</code></p>
</td>
<td class="cellalignment1228" headers="r5c1-t19 r1c2-t19">
<p>Name of the materialized view site rollback segment to use while refreshing materialized views</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r6c1-t19" headers="r1c1-t19">
<p><code>refresh_after_errors</code></p>
</td>
<td class="cellalignment1228" headers="r6c1-t19 r1c2-t19">
<p>If this parameter is <code>true</code>, an updatable materialized view continues to refresh even if there are outstanding conflicts logged in the <code>DEFERROR</code> view for the materialized view's master table or master materialized view. If this parameter is <code>true</code> and <code>atomic_refresh</code> is <code>false</code>, this procedure continues to refresh other materialized views if it fails while refreshing a materialized view.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r7c1-t19" headers="r1c1-t19">
<p><code>atomic_refresh</code></p>
</td>
<td class="cellalignment1228" headers="r7c1-t19 r1c2-t19">
<p>If this parameter is set to <code>true</code>, then the refreshed materialized views are refreshed in a single transaction. All of the refreshed materialized views are updated to a single point in time. If the refresh fails for any of the materialized views, none of the materialized views are updated.</p>
<p>If this parameter is set to <code>false</code>, then each of the refreshed materialized views is refreshed in a separate transaction.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r8c1-t19" headers="r1c1-t19">
<p><code>nested</code></p>
</td>
<td class="cellalignment1228" headers="r8c1-t19 r1c2-t19">
<p>If <code>true</code>, then perform nested refresh operations for the specified set of tables. Nested refresh operations refresh all the depending materialized views of the specified set of tables based on a dependency order to ensure the nested materialized views are truly fresh with respect to the underlying base tables.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS67209" class="refsect2"><a id="CEGHDBIJ"></a>
<hr />
<h3 class="refsect2">REGISTER_MVIEW Procedure<a id="sthref6458"></a></h3>
<p>This procedure enables the administration of individual materialized views. It is invoked at a master site or master materialized view site to register a materialized view.</p>
<p>Note that, typically, a materialized view is registered automatically during materialized view creation. You should only run this procedure to manually register a materialized view if the automatic registration failed or if the registration information was deleted.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref6459"></a>Syntax</p>
<pre>
DBMS_MVIEW.REGISTER_MVIEW (
   mviewowner  IN   VARCHAR2,
   mviewname   IN   VARCHAR2,
   mviewsite   IN   VARCHAR2,
   mview_id    IN   DATE | BINARY_INTEGER,
   flag        IN   BINARY_INTEGER,
   qry_txt     IN   VARCHAR2,
   rep_type    IN   BINARY_INTEGER := DBMS_MVIEW.REG_UNKNOWN);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref6460"></a>Parameters</p>
<div id="ARPLS67210" class="tblformal">
<p class="titleintable"><a id="sthref6461"></a><a id="sthref6462"></a>Table 93-13 REGISTER_MVIEW Procedure Parameters</p>
<table class="cellalignment1229" title="REGISTER_MVIEW Procedure Parameters" summary="This table describes Parameters used by the DBMS_MVIEW.REGISTER_MVIEW subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t20">Parameter</th>
<th class="cellalignment1227" id="r1c2-t20">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t20" headers="r1c1-t20">
<p><code>mviewowner</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t20 r1c2-t20">
<p>Owner of the materialized view.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t20" headers="r1c1-t20">
<p><code>mviewname</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t20 r1c2-t20">
<p>Name of the materialized view.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r4c1-t20" headers="r1c1-t20">
<p><code>mviewsite</code></p>
</td>
<td class="cellalignment1228" headers="r4c1-t20 r1c2-t20">
<p>Name of the materialized view site for a materialized view registering at an Oracle database version 8.x and higher master site or master materialized view site. This name should not contain any double quotes.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r5c1-t20" headers="r1c1-t20">
<p><code>mview_id</code></p>
</td>
<td class="cellalignment1228" headers="r5c1-t20 r1c2-t20">
<p>The identification number of the materialized view. Specify an Oracle database version 8.x and higher materialized view as a <code>BINARY_INTEGER</code>. Specify an Oracle database version 7 materialized view registering at an Oracle database version 8.x and higher master sites or master materialized view sites as a <code>DATE</code>.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r6c1-t20" headers="r1c1-t20">
<p><code>flag</code></p>
</td>
<td class="cellalignment1228" headers="r6c1-t20 r1c2-t20">
<p>A constant that describes the properties of the materialized view being registered. Valid constants that can be assigned include the following:</p>
<p><code>DBMS_MVIEW.REG_ROWID_MVIEW</code> for a rowid materialized view</p>
<p><code>DBMS_MVIEW.REG_PRIMARY_KEY_MVIEW</code> for a primary key materialized view</p>
<p><code>DBMS_MVIEW.REG_OBJECT_ID_MVIEW</code> for an object id materialized view</p>
<p><code>DBMS_MVIEW.REG_FAST_REFRESHABLE_MVIEW</code> for a materialized view that can be fast refreshed</p>
<p><code>DBMS_MVIEW.REG_UPDATABLE_MVIEW</code> for a materialized view that is updatable</p>
<p>A materialized view can have more than one of these properties. In this case, use the plus sign (+) to specify more than one property. For example, if a primary key materialized view can be fast refreshed, you can enter the following for this parameter:</p>
<p><code>DBMS_MVIEW.REG_PRIMARY_KEY_MVIEW</code> + <code>DBMS_MVIEW.REG_FAST_REFRESHABLE_MVIEW</code></p>
<p>You can determine the properties of a materialized view by querying the <code>ALL_MVIEWS</code> data dictionary view.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r7c1-t20" headers="r1c1-t20">
<p><code>qry_txt</code></p>
</td>
<td class="cellalignment1228" headers="r7c1-t20 r1c2-t20">
<p>The first 32,000 bytes of the materialized view definition query.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r8c1-t20" headers="r1c1-t20">
<p><code>rep_type</code></p>
</td>
<td class="cellalignment1228" headers="r8c1-t20 r1c2-t20">
<p>Version of the materialized view. Valid constants that can be assigned include the following:</p>
<p><code>DBMS_MVIEW.REG_V7_SNAPSHOT</code> if the materialized view is at an Oracle database version 7 site</p>
<ul>
<li>
<p><code>DBMS_MVIEW.REG_V8_SNAPSHOT</code></p>
</li>
</ul>
<p><code>reg_repapi_snapshot</code> if the materialized view is at an Oracle database version 8.x or higher site</p>
<p><code>DBMS_MVIEW.REG_UNKNOWN</code> (the default) if you do not know whether the materialized view is at an Oracle database version 7 site or an Oracle database version 8.x (or higher) site</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref6463"></a>Usage Notes</p>
<p>This procedure is invoked at the master site or master materialized view site by a remote materialized view site using a remote procedure call. If <code>REGISTER_MVIEW</code> is called multiple times with the same <code>mviewowner</code>, <code>mviewname</code>, and <code>mviewsite</code>, then the most recent values for <code>mview_id</code>, <code>flag</code>, and <code>qry_txt</code> are stored. If a query exceeds the maximum <code>VARCHAR2</code> size, then <code>qry_txt</code> contains the first 32000 characters of the query and the remainder is truncated. When invoked manually, the value of <code>mview_id</code> must be looked up in the materialized view data dictionary views by the person who calls the procedure.</p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS67211" class="refsect2"><a id="i997476"></a>
<hr />
<h3 class="refsect2">U<a id="sthref6464"></a>NREGISTER_MVIEW Procedure</h3>
<p>This procedure enables the administration of individual materialized views. It is invoked at a master site or master materialized view site to unregister a materialized view.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref6465"></a>Syntax</p>
<pre>
<a id="i997481"></a>
DBMS_MVIEW.UNREGISTER_MVIEW (
   mviewowner      IN   VARCHAR2,
   mviewname       IN   VARCHAR2,
   mviewsite       IN   VARCHAR2);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref6466"></a>Parameters</p>
<div id="ARPLS67212" class="tblformal">
<p class="titleintable"><a id="sthref6467"></a><a id="sthref6468"></a>Table 93-14 UNREGISTER_MVIEW Procedure Parameters</p>
<table class="cellalignment1229" title="UNREGISTER_MVIEW Procedure Parameters" summary="This table describes Parameters used by the DBMS_MVIEW.UNREGISTER_MVIEW subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t21">Parameters</th>
<th class="cellalignment1227" id="r1c2-t21">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t21" headers="r1c1-t21">
<p><code>mviewowner</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t21 r1c2-t21">
<p>Owner of the materialized view</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t21" headers="r1c1-t21">
<p><code>mviewname</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t21 r1c2-t21">
<p>Name of the materialized view</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r4c1-t21" headers="r1c1-t21">
<p><code>mviewsite</code></p>
</td>
<td class="cellalignment1228" headers="r4c1-t21 r1c2-t21">
<p>Name of the materialized view site</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" --></div>
<!-- class="refsect1" --></div>
<!-- class="refentry" --></div>
<!-- class="chapter" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment1219">
<tr>
<td class="cellalignment1228">
<table class="cellalignment1224">
<tr>
<td class="cellalignment1223"><a href="d_monitor.htm"><img width="24" height="24" src="../../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment1223"><a href="d_networkacl_adm.htm"><img width="24" height="24" src="../../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;1996, 2013,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment1231">
<table class="cellalignment1222">
<tr>
<td class="cellalignment1223"><a href="../../index.htm"><img width="24" height="24" src="../../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment1223"><a href="../../nav/portal_booklist.htm"><img width="24" height="24" src="../../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment1223"><a href="toc.htm"><img width="24" height="24" src="../../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment1223"><a href="index.htm"><img width="24" height="24" src="../../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment1223"><a href="../../nav/mindx.htm"><img width="24" height="24" src="../../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment1223"><a href="../../dcommon/html/feedback.htm"><img width="24" height="24" src="../../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>
</body>
</html>
