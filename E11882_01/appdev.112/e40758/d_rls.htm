<!DOCTYPE html>
<html lang="en" >
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1">
<meta charset="utf-8">
<title>DBMS_RLS</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Version 5.1.2 Build 737" />
<meta name="dcterms.created" content="2013-07-19T18:55:23Z" />
<meta name="robots" content="all" />
<meta name="dcterms.title" content="Database PL/SQL Packages and Types Reference" />
<meta name="dcterms.identifier" content="E40758-03" />
<meta name="dcterms.isVersionOf" content="ARPLS" />
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;1996, 2013,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved." />
<link rel="Start" href="../../index.htm" title="Home" type="text/html" />
<link rel="Copyright" href="../../dcommon/html/cpyr.htm" title="Copyright" type="text/html" />

<script type="application/javascript"  src="../../dcommon/js/headfoot.js"></script>
<script type="application/javascript"  src="../../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html" />
<link rel="Index" href="index.htm" title="Index" type="text/html" />
<link rel="Prev" href="d_rlmgrref.htm" title="Previous" type="text/html" />
<link rel="Next" href="d_rowid.htm" title="Next" type="text/html" />
<link rel="alternate" href="../e40758.pdf" title="PDF version" type="application/pdf" />
<link rel="schema.dcterms" href="http://purl.org/dc/terms/" />
<link rel="stylesheet" href="../../dcommon/css/fusiondoc.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/header.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/footer.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/fonts.css">
<link rel="stylesheet" href="../../dcommon/css/foundation.css">
<link rel="stylesheet" href="../../dcommon/css/codemirror.css">
<link rel="stylesheet" type="text/css" title="Default" href="../../nav/css/html5.css">
<link rel="stylesheet" href="../../dcommon/css/respond-480-tablet.css">
<link rel="stylesheet" href="../../dcommon/css/respond-768-laptop.css">
<link rel="stylesheet" href="../../dcommon/css/respond-1140-deskop.css">
<script type="application/javascript" src="../../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">129/265</span> <!-- End Header -->
<div id="ARPLS052" class="chapter"><a id="BABFDECH"></a><a id="i1000830"></a>
<h1 class="chapter"><span class="secnum">125</span> DBMS_RLS</h1>
<p><a id="sthref7768"></a>The <code>DBMS_RLS</code> package contains the fine-grained ac<a id="sthref7769"></a>cess control administrative interface, which is used to implement <a id="sthref7770"></a>Virtual Private Database (VPD). <code>DBMS_RLS</code> is available with the Enterprise Edition only.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink DBSEG" href="../../network.112/e36292/toc.htm"><span class="italic">Oracle Database Security Guide</span></a> for usage information on <code>DBMS_RLS.</code></div>
<p>This chapter contains the following topics:</p>
<ul>
<li>
<p><a href="#BABFIFJG">Using DBMS_RLS</a></p>
<ul>
<li>
<p>Overview</p>
</li>
<li>
<p>Security Model</p>
</li>
<li>
<p>Operational Notes</p>
</li>
</ul>
</li>
<li>
<p><a href="#i1002506">Summary of DBMS_RLS Subprograms</a></p>
</li>
</ul>
<div class="refentry"><a id="BABFIFJG"></a>
<hr />
<div id="ARPLS67713" class="refsect1">
<h2 class="refsect1">Using DBMS_RLS</h2>
<ul>
<li>
<p><a href="#i1004711">Overview</a></p>
</li>
<li>
<p><a href="#i1004716">Security Model</a></p>
</li>
<li>
<p><a href="#i1004721">Operational Notes</a></p>
</li>
</ul>
<div id="ARPLS67714" class="refsect2"><a id="i1004711"></a>
<hr />
<h3 class="refsect2">Overview</h3>
<p>The functionality to support fine-grained access control is based on dynamic predicates, where security rules are not embedded in views, but are acquired at the statement parse time, when the base table or view is referenced in a DML statement.</p>
<p>A dynamic predicate for a table, view, or synonym is generated by a PL/SQL function, which is associated with a security policy through a PL/SQL interface. For example:</p>
<pre>
DBMS_RLS.ADD_POLICY (
   'hr', 'employees', 'emp_policy', 'hr', 'emp_sec', 'select');
</pre>
<p>Whenever the <code>EMPLOYEES</code> table, under the HR schema, is referenced in a query or subquery (<code>SELECT</code>), the server calls the <code>EMP_SEC</code> function (under the <code>HR</code> schema). This function returns a predicate specific to the current user for the <code>EMP_POLICY</code> policy. The policy function may generate the predicates based on the session environment variables available during the function call. These variables usually appear in the form of application contexts. The policy can specify any combination of security-relevant columns and of these statement types: <code>INDEX</code>, <code>SELECT</code>, INSERT, <code>UPDATE</code>, or <code>DELETE</code>.</p>
<p>The server then produces a transient view with the text:</p>
<pre>
SELECT * FROM hr.employees WHERE P1
</pre>
<p>Here, <code>P1</code> (for example, where <code>SAL</code> &gt; 10000, or even a subquery) is the predicate returned from the <code>EMP_SEC</code> function. The server treats the <code>EMPLOYEES</code> table as a view and does the view expansion just like the ordinary view, except that the view text is taken from the transient view instead of the data dictionary.</p>
<p>If the predicate contains subqueries, then the owner (definer) of the policy function is used to resolve objects within the subqueries and checks security for those objects. In other words, users who have access privilege to the policy-protected objects do not need to know anything about the policy. They do not need to be granted object privileges for any underlying security policy. Furthermore, the users do not require <code>EXECUTE</code> privilege on the policy function, because the server makes the call with the function definer's right.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
The transient view can preserve the updatability of the parent object because it is derived from a single table or view with predicate only; that is, no <code>JOIN</code>, <code>ORDER</code> <code>BY</code>, <code>GROUP</code> <code>BY</code>, and so on.</div>
<p><code>DBMS_RLS</code> also provides the interface to drop or enable security policies. For example, you can drop or enable the <code>EMP_POLICY</code> with the following PL/SQL statements:</p>
<pre>
DBMS_RLS.DROP_POLICY('hr', 'employees', 'emp_policy'); 
DBMS_RLS.ENABLE_POLICY('hr', 'employees', 'emp_policy', TRUE);
</pre></div>
<!-- class="refsect2" -->
<div id="ARPLS67715" class="refsect2"><a id="i1004716"></a>
<hr />
<h3 class="refsect2">Security Model</h3>
<p>A security check is performed when the transient view is created with a subquery. The schema owning the policy function, which generates the dynamic predicate, is the transient view's definer for security check and object lookup.</p>
</div>
<!-- class="refsect2" -->
<div id="ARPLS67716" class="refsect2"><a id="i1004721"></a>
<hr />
<h3 class="refsect2">Operational Notes</h3>
<p>The <code>DBMS_RLS</code> procedures cause current DML transactions, if any, to commit before the operation. However, the procedures do not cause a commit first if they are inside a DDL event trigger. With DDL transactions, the <code>DBMS_RLS</code> procedures are part of the DDL transaction.</p>
<p>For example, you may create a trigger for <code>CREATE</code> <code>TABLE</code>. Inside the trigger, you may add a column through <code>ALTER</code> <code>TABLE</code>, and you can add a policy through <code>DBMS_RLS</code>. All these operations are in the same transaction as <code>CREATE</code> <code>TABLE</code>, even though each one is a DDL statement. The <code>CREATE</code> <code>TABLE</code> succeeds only if the trigger is completed successfully.</p>
<p><a id="sthref7771"></a>Views of current cursors and corresponding predicates are available from <a id="sthref7772"></a><code>v$vpd_policies</code>.</p>
<p>A synonym can reference only a view or a table.</p>
</div>
<!-- class="refsect2" --></div>
<!-- class="refsect1" -->
<a id="i1002506"></a>
<hr />
<div id="ARPLS67717" class="refsect1">
<h2 class="refsect1">Summary of DBMS_RLS Subprograms</h2>
<div id="ARPLS67718" class="tblformal">
<p class="titleintable"><a id="sthref7773"></a><a id="sthref7774"></a>Table 125-1 DBMS_RLS Package Subprograms</p>
<table class="cellalignment1229" title="DBMS_RLS Package Subprograms" summary="This table lists the subprograms available in DBMS_RLS in alphabetical order, giving for each one a link, a page number, and a brief description." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t4">Subprogram</th>
<th class="cellalignment1227" id="r1c2-t4">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t4" headers="r1c1-t4">
<p><a href="#i1002047">ADD_GROUPED_POLICY Procedure</a></p>
</td>
<td class="cellalignment1228" headers="r2c1-t4 r1c2-t4">
<p>Adds a policy associated with a policy group</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t4" headers="r1c1-t4">
<p><a href="#i998159">ADD_POLICY Procedure</a></p>
</td>
<td class="cellalignment1228" headers="r3c1-t4 r1c2-t4">
<p>Adds a fine-grained access control policy to a table, view, or synonym</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r4c1-t4" headers="r1c1-t4">
<p><a href="#i1002054">ADD_POLICY_CONTEXT Procedure</a></p>
</td>
<td class="cellalignment1228" headers="r4c1-t4 r1c2-t4">
<p>Adds the context for the active application</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r5c1-t4" headers="r1c1-t4">
<p><a href="#i1002040">CREATE_POLICY_GROUP Procedure</a></p>
</td>
<td class="cellalignment1228" headers="r5c1-t4 r1c2-t4">
<p>Creates a policy group</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r6c1-t4" headers="r1c1-t4">
<p><a href="#i1002061">DELETE_POLICY_GROUP Procedure</a></p>
</td>
<td class="cellalignment1228" headers="r6c1-t4 r1c2-t4">
<p>Deletes a policy group</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r7c1-t4" headers="r1c1-t4">
<p><a href="#i1003610">DISABLE_GROUPED_POLICY Procedure</a></p>
</td>
<td class="cellalignment1228" headers="r7c1-t4 r1c2-t4">
<p>Disables a row-level group security policy</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r8c1-t4" headers="r1c1-t4">
<p><a href="#i1002068">DROP_GROUPED_POLICY Procedure</a></p>
</td>
<td class="cellalignment1228" headers="r8c1-t4 r1c2-t4">
<p>Drops a policy associated with a policy group</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r9c1-t4" headers="r1c1-t4">
<p><a href="#CIHGHJGG">DROP_POLICY Procedure</a></p>
</td>
<td class="cellalignment1228" headers="r9c1-t4 r1c2-t4">
<p>Drops a fine-grained access control policy from a table, view, or synonym</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r10c1-t4" headers="r1c1-t4">
<p><a href="#i1002075">DROP_POLICY_CONTEXT Procedure</a></p>
</td>
<td class="cellalignment1228" headers="r10c1-t4 r1c2-t4">
<p>Drops a driving context from the object so that it will have one less driving context</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r11c1-t4" headers="r1c1-t4">
<p><a href="#i1002088">ENABLE_GROUPED_POLICY Procedure</a></p>
</td>
<td class="cellalignment1228" headers="r11c1-t4 r1c2-t4">
<p>Enables or disables a row-level group security policy</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r12c1-t4" headers="r1c1-t4">
<p><a href="#i998317">ENABLE_POLICY Procedure</a></p>
</td>
<td class="cellalignment1228" headers="r12c1-t4 r1c2-t4">
<p>Enables or disables a fine-grained access control policy</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r13c1-t4" headers="r1c1-t4">
<p><a href="#i1002095">REFRESH_GROUPED_POLICY Procedure</a></p>
</td>
<td class="cellalignment1228" headers="r13c1-t4 r1c2-t4">
<p>Reparses the SQL statements associated with a refreshed policy</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r14c1-t4" headers="r1c1-t4">
<p><a href="#i998280">REFRESH_POLICY Procedure</a></p>
</td>
<td class="cellalignment1228" headers="r14c1-t4 r1c2-t4">
<p>Causes all the cached statements associated with the policy to be reparsed</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<div id="ARPLS67719" class="refsect2"><a id="i1002047"></a>
<hr />
<h3 class="refsect2">ADD_GROUPED_POLICY Procedure</h3>
<p>This procedure adds a policy associated with a policy group.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref7775"></a>Syntax</p>
<pre>
DBMS_RLS.ADD_GROUPED_POLICY(
   object_schema         IN VARCHAR2 NULL,
   object_name           IN VARCHAR2,
   policy_group          IN VARCHAR2 'SYS_DEFAULT',
   policy_name           IN VARCHAR2,
   function_schema       IN VARCHAR2 NULL,
   policy_function       IN VARCHAR2,
   statement_types       IN VARCHAR2 NULL,
   update_check          IN BOOLEAN FALSE,
   enable                IN BOOLEAN TRUE,
   static_policy         IN BOOLEAN  FALSE,
   policy_type           IN BINARY_INTEGER NULL,
   long_predicate           BOOLEAN  FALSE,
   sec_relevant_cols     IN VARCHAR2,
   sec_relevant_cols_opt IN BINARY_INTEGER NULL);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref7776"></a>Parameters</p>
<div id="ARPLS67720" class="tblformal">
<p class="titleintable"><a id="sthref7777"></a><a id="sthref7778"></a>Table 125-2 ADD_GROUPED_POLICY Procedure Parameters</p>
<table class="cellalignment1229" title="ADD_GROUPED_POLICY Procedure Parameters " summary="This table describes Parameters used by the DBMS_RLS.ADD_GROUPED_POLICY subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t5">Parameter</th>
<th class="cellalignment1227" id="r1c2-t5">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t5" headers="r1c1-t5">
<p><code><a id="sthref7779"></a>object_schema</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t5 r1c2-t5">
<p>The schema containing the table, view, or synonym. The default is <code>NULL</code>, which means that the current user schema is used as the <code>object_schema</code>.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t5" headers="r1c1-t5">
<p><code><a id="sthref7780"></a>object_name</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t5 r1c2-t5">
<p>The name of the table, view, or synonym to which the policy is added.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r4c1-t5" headers="r1c1-t5">
<p><code><a id="sthref7781"></a>policy_group</code></p>
</td>
<td class="cellalignment1228" headers="r4c1-t5 r1c2-t5">
<p>The name of the policy group that the policy belongs to.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r5c1-t5" headers="r1c1-t5">
<p><code><a id="sthref7782"></a>policy_name</code></p>
</td>
<td class="cellalignment1228" headers="r5c1-t5 r1c2-t5">
<p>The name of the policy; must be unique for the same table or view.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r6c1-t5" headers="r1c1-t5">
<p><code><a id="sthref7783"></a>function_schema</code></p>
</td>
<td class="cellalignment1228" headers="r6c1-t5 r1c2-t5">
<p>The schema owning the policy function. The default is <code>NULL</code>, which means that the current user schema is used as the <code>function_schema</code>.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r7c1-t5" headers="r1c1-t5">
<p><code><a id="sthref7784"></a>policy_function</code></p>
</td>
<td class="cellalignment1228" headers="r7c1-t5 r1c2-t5">
<p>The name of the function that generates a predicate for the policy. If the function is defined within a package, the name of the package must be present.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r8c1-t5" headers="r1c1-t5">
<p><code><a id="sthref7785"></a>statement_types</code></p>
</td>
<td class="cellalignment1228" headers="r8c1-t5 r1c2-t5">
<p>Statement types to which the policy applies. It can be any combination of <code>INDEX,</code> <code>SELECT</code>, <code>INSERT</code>, <code>UPDATE</code>, or <code>DELETE</code>. The default is to apply to all of these types except <code>INDEX</code>.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r9c1-t5" headers="r1c1-t5">
<p><code><a id="sthref7786"></a>update_check</code></p>
</td>
<td class="cellalignment1228" headers="r9c1-t5 r1c2-t5">
<p>For <code>INSERT</code> and <code>UPDATE</code> statements only, setting update_check to <code>TRUE</code> causes the server to check the policy against the value after <code>INSERT</code> or <code>UPDATE.</code></p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r10c1-t5" headers="r1c1-t5">
<p><code><a id="sthref7787"></a>enable</code></p>
</td>
<td class="cellalignment1228" headers="r10c1-t5 r1c2-t5">
<p>Indicates if the policy is enable when it is added. The default is <code>TRUE</code>.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r11c1-t5" headers="r1c1-t5">
<p><code><a id="sthref7788"></a>static_policy</code></p>
</td>
<td class="cellalignment1228" headers="r11c1-t5 r1c2-t5">
<p>The default is <code>FALSE</code>. If it is set to <code>TRUE</code>, the server assumes that the policy function for the static policy produces the same predicate string for anyone accessing the object, except for <code>SYS</code> or the privilege user who has the <code>EXEMPT ACCESS POLICY</code> privilege.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r12c1-t5" headers="r1c1-t5">
<p><code><a id="sthref7789"></a>policy_type</code></p>
</td>
<td class="cellalignment1228" headers="r12c1-t5 r1c2-t5">
<p>Default is <code>NULL</code>, which means <code>policy_type</code> is decided by the value of <code>static_policy</code>. The available policy types are listed in <a href="#BABDFFAD">Table 125-4</a>. Specifying any of these policy types overrides the value of <code>static_policy</code>.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r13c1-t5" headers="r1c1-t5">
<p><code><a id="sthref7790"></a>long_predicate</code></p>
</td>
<td class="cellalignment1228" headers="r13c1-t5 r1c2-t5">
<p>Default is <code>FALSE</code>, which means the policy function can return a predicate with a length of up to 4000 bytes. <code>TRUE</code> means the predicate text string length can be up to 32K bytes.Policies existing prior to the availability of this parameter retain a 32K limit.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r14c1-t5" headers="r1c1-t5">
<p><code><a id="sthref7791"></a><a id="sthref7792"></a>sec_relevant_cols</code></p>
</td>
<td class="cellalignment1228" headers="r14c1-t5 r1c2-t5">
<p>Enables column-level Virtual Private Database (VPD), which enforces security policies when a column containing sensitive information is referenced in a query. Applies to tables and views, but not to synonyms. Specify a list of comma- or space-separated valid column names of the policy-protected object. The policy is enforced only if a specified column is referenced (or, for an abstract datatype column, its attributes are referenced) in the user SQL statement or its underlying view definition. Default is all the user-defined columns for the object.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r15c1-t5" headers="r1c1-t5">
<p><code>sec_relevant_cols_opt</code></p>
</td>
<td class="cellalignment1228" headers="r15c1-t5 r1c2-t5">
<p>Use with <code>sec_relevant_cols</code> to display all rows for column-level VPD filtered queries (<code>SELECT</code> only), but where sensitive columns appear as <code>NULL</code>. Default is set to <code>NULL</code>, which allows the filtering defined with <code>sec_relevant_cols</code> to take effect. Set to <code>dbms_rls.ALL_ROWS</code> to display all rows, but with sensitive column values, which are filtered by <code>sec_relevant_cols</code>, displayed as <code>NULL</code>. See <a href="#i1005326">"Usage Notes"</a> for restrictions and additional information about this option.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref7793"></a>Usage Notes</p>
<ul>
<li>
<p>This procedure adds a policy to the specified table, view, or synonym and associates the policy with the specified policy group.</p>
</li>
<li>
<p>The policy group must have been created by using the <a href="#i1002040">CREATE_POLICY_GROUP Procedure</a>.</p>
</li>
<li>
<p>The policy name must be unique within a policy group for a specific object.</p>
</li>
<li>
<p>Policies from the default policy group, <code>SYS_DEFAULT</code>, are always executed regardless of the active policy group; however, fine-grained access control policies do not apply to users with <code>EXEMPT ACCESS POLICY</code> system privilege.</p>
</li>
<li>
<p>If no <code>object_schema</code> is specified, the current user's schema is assumed.</p>
</li>
<li>
<p>If no <code>function_schema</code> is specified, the current user's schema is assumed.</p>
</li>
</ul>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS67721" class="refsect2"><a id="i998159"></a>
<hr />
<h3 class="refsect2">ADD_POLICY Procedure</h3>
<p>This procedure adds a fine-grained access control policy to a table, view, or synonym.</p>
<p>The procedure causes the current transaction, if any, to commit before the operation is carried out. However, this does not cause a commit first if it is inside a DDL event trigger.</p>
<div class="infoboxnotealso">
<p class="notep1"><span class="bold">See Also</span>:</p>
<a href="#i1004721">Operational Notes</a></div>
<p>A <code>COMMIT</code> is also performed at the end of the operation.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref7794"></a>Syntax</p>
<pre>
DBMS_RLS.ADD_POLICY (
   object_schema            IN VARCHAR2 NULL,
   object_name              IN VARCHAR2,
   policy_name              IN VARCHAR2,
   function_schema          IN VARCHAR2 NULL,
   policy_function          IN VARCHAR2,
   statement_types          IN VARCHAR2 NULL,
   update_check             IN BOOLEAN  FALSE,
   enable                   IN BOOLEAN  TRUE,
   static_policy            IN BOOLEAN  FALSE,
   policy_type              IN BINARY_INTEGER NULL,
   long_predicate           IN BOOLEAN  FALSE,
   sec_relevant_cols        IN VARCHAR2 NULL,
   sec_relevant_cols_opt    IN BINARY_INTEGER NULL);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref7795"></a>Parameters</p>
<div id="ARPLS67722" class="tblformal">
<p class="titleintable"><a id="sthref7796"></a><a id="sthref7797"></a>Table 125-3 ADD_POLICY Procedure Parameters</p>
<table class="cellalignment1229" title="ADD_POLICY Procedure Parameters " summary="This table describes Parameters used by the DBMS_RLS.ADD_POLICY subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t7">Parameter</th>
<th class="cellalignment1227" id="r1c2-t7">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t7" headers="r1c1-t7">
<p><code><a id="sthref7798"></a>object_schema</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t7 r1c2-t7">
<p>Schema containing the table, view, or synonym. If no <code>object_schema</code> is <code>specified,</code> the current user's schema is assumed.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t7" headers="r1c1-t7">
<p><code><a id="sthref7799"></a>object_name</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t7 r1c2-t7">
<p>Name of table, view, or synonym to which the policy is added.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r4c1-t7" headers="r1c1-t7">
<p><code><a id="sthref7800"></a>policy_name</code></p>
</td>
<td class="cellalignment1228" headers="r4c1-t7 r1c2-t7">
<p>Name of policy to be added. It must be unique for the same table or view.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r5c1-t7" headers="r1c1-t7">
<p><code><a id="sthref7801"></a>function_schema</code></p>
</td>
<td class="cellalignment1228" headers="r5c1-t7 r1c2-t7">
<p>Schema of the policy function (current default schema, if <code>NULL</code>). If no <code>function_schema</code> is <code>specified,</code> the current user's schema is assumed.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r6c1-t7" headers="r1c1-t7">
<p><code><a id="sthref7802"></a>policy_function</code></p>
</td>
<td class="cellalignment1228" headers="r6c1-t7 r1c2-t7">
<p>Name of a function which generates a predicate for the policy. If the function is defined within a package, then the name of the package must be present.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r7c1-t7" headers="r1c1-t7">
<p><code><a id="sthref7803"></a>statement_types</code></p>
</td>
<td class="cellalignment1228" headers="r7c1-t7 r1c2-t7">
<p>Statement types to which the policy applies. It can be any combination of <code>INDEX,</code> <code>SELECT</code>, <code>INSERT</code>, <code>UPDATE</code>, or <code>DELETE</code>. The default is to apply to all of these types except <code>INDEX</code>.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r8c1-t7" headers="r1c1-t7">
<p><code><a id="sthref7804"></a>update_check</code></p>
</td>
<td class="cellalignment1228" headers="r8c1-t7 r1c2-t7">
<p>Optional argument for <code>INSERT</code> or <code>UPDATE</code> statement types. The default is <code>FALSE</code>. Setting <code>update_check</code> to <code>TRUE</code> causes the server to also check the policy against the value after insert or update.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r9c1-t7" headers="r1c1-t7">
<p><code><a id="sthref7805"></a>enable</code></p>
</td>
<td class="cellalignment1228" headers="r9c1-t7 r1c2-t7">
<p>Indicates if the policy is enabled when it is added. The default is <code>TRUE.</code></p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r10c1-t7" headers="r1c1-t7">
<p><code><a id="sthref7806"></a>static_policy</code></p>
</td>
<td class="cellalignment1228" headers="r10c1-t7 r1c2-t7">
<p>The default is <code>FALSE</code>. If it is set to <code>TRUE</code>, the server assumes that the policy function for the static policy produces the same predicate string for anyone accessing the object, except for <code>SYS</code> or the privileged user who has the <code>EXEMPT</code> <code>ACCESS</code> <code>POLICY</code> privilege.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r11c1-t7" headers="r1c1-t7">
<p><code><a id="sthref7807"></a>policy_type</code></p>
</td>
<td class="cellalignment1228" headers="r11c1-t7 r1c2-t7">
<p>Default is <code>NULL</code>, which means <code>policy_type</code> is decided by the value of <code>static_policy</code>. The available policy types are listed in <a href="#BABDFFAD">Table 125-4</a>. Specifying any of these policy types overrides the value of <code>static_policy</code>.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r12c1-t7" headers="r1c1-t7">
<p><code><a id="sthref7808"></a>long_predicate</code></p>
</td>
<td class="cellalignment1228" headers="r12c1-t7 r1c2-t7">
<p>Default is <code>FALSE</code>, which means the policy function can return a predicate with a length of up to 4000 bytes. <code>TRUE</code> means the predicate text string length can be up to 32K bytes.Policies existing prior to the availability of this parameter retain a 32K limit.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r13c1-t7" headers="r1c1-t7">
<p><code><a id="sthref7809"></a>sec_relevant_cols</code></p>
</td>
<td class="cellalignment1228" headers="r13c1-t7 r1c2-t7">
<p><a id="sthref7810"></a>Enables column-level Virtual Private Database (VPD), which enforces security policies when a column containing sensitive information is referenced in a query. Applies to tables and views, but not to synonyms. Specify a list of comma- or space-separated valid column names of the policy-protected object. The policy is enforced only if a specified column is referenced (or, for an abstract datatype column, its attributes are referenced) in the user SQL statement or its underlying view definition. Default is all the user-defined columns for the object.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r14c1-t7" headers="r1c1-t7">
<p><code><a id="sthref7811"></a><a id="sthref7812"></a><a id="sthref7813"></a>sec_relevant_cols_opt</code></p>
</td>
<td class="cellalignment1228" headers="r14c1-t7 r1c2-t7">
<p>Use with <code>sec_relevant_cols</code> to display all rows for column-level VPD filtered queries (<code>SELECT</code> only), but where sensitive columns appear as <code>NULL</code>. Default is set to <code>NULL</code>, which allows the filtering defined with <code>sec_relevant_cols</code> to take effect. Set to <code>dbms_rls.ALL_ROWS</code> to display all rows, but with sensitive column values, which are filtered by <code>sec_relevant_cols</code>, displayed as <code>NULL</code>. See <a href="#i1005326">"Usage Notes"</a> for restrictions and additional information about this option.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<div id="ARPLS67723" class="tblformalwidemax">
<p class="titleintable"><a id="sthref7814"></a><a id="BABDFFAD"></a>Table 125-4 DBMS_RLS.ADD_POLICY Policy Types</p>
<table class="cellalignment1226" title="DBMS_RLS.ADD_POLICY Policy Types" summary="This table describes DBMS_RLS.ADD_POLICY Policy Types." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t8">Policy Type</th>
<th class="cellalignment1227" id="r1c2-t8">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t8" headers="r1c1-t8">
<p><code><a id="sthref7815"></a>STATIC</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t8 r1c2-t8">
<p>Predicate is assumed to be the same regardless of the runtime environment. Static policy functions are executed once and then cached in SGA. Statements accessing the same object do not reexecute the policy function. However, each execution of the same cursor could produce a different row set even for the same predicate because the predicate may filter the data differently based on attributes such as <code>SYS_CONTEXT</code> or <code>SYSDATE</code>. Applies to only one object.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t8" headers="r1c1-t8">
<p><code><a id="sthref7816"></a>SHARED_STATIC</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t8 r1c2-t8">
<p>Same as <code>STATIC</code> except that the server first looks for a cached predicate generated by the same policy function of the same policy type. Shared across multiple objects.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r4c1-t8" headers="r1c1-t8">
<p><code><a id="sthref7817"></a>CONTEXT_SENSITIVE</code></p>
</td>
<td class="cellalignment1228" headers="r4c1-t8 r1c2-t8">
<p>Server re-evaluates the policy function at statement execution time if it detects context changes since the last use of the cursor. For session pooling where multiple clients share a database session, the middle tier must reset context during client switches. Note that the server does not cache the value returned by the function for this policy type; it always executes the policy function on statement parsing. Applies to only one object.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r5c1-t8" headers="r1c1-t8">
<p><code><a id="sthref7818"></a>SHARED_CONTEXT_SENSITIVE</code></p>
</td>
<td class="cellalignment1228" headers="r5c1-t8 r1c2-t8">
<p>Same as <code>CONTEXT_SENSITIVE</code> except that the server first looks for a cached predicate generated by the same policy function of the same policy type within the same database session. If the predicate is found in the session memory, the policy function is not reexecuted and the cached value is valid until session private application context changes occur. Shared across multiple objects.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r6c1-t8" headers="r1c1-t8">
<p><code><a id="sthref7819"></a>DYNAMIC</code></p>
</td>
<td class="cellalignment1228" headers="r6c1-t8 r1c2-t8">
<p>The default policy type. Server assumes the predicate may be affected by any system or session environment at any time, and so always reexecutes the policy function upon each statement parsing and execution. Applies to only one object.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformalwidemax" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="i1005326"></a>Usage Notes</p>
<ul>
<li>
<p><code>SYS</code> is free of any security policy.</p>
</li>
<li>
<p>If no <code>object_schema</code> is specified, the current user's schema is assumed.</p>
</li>
<li>
<p>If no <code>function_schema</code> is specified, the current user's schema is assumed.</p>
</li>
<li>
<p>The policy functions are called by the server. Following is the interface for the function:</p>
</li>
</ul>
<pre>
    FUNCTION policy_function (object_schema IN VARCHAR2, object_name VARCHAR2) 
        RETURN VARCHAR2 
    --- object_schema is the schema owning the table or view.
    --- object_name is the name of table, view, or synonym to which the policy applies. 
</pre>
<ul>
<li>
<p>The policy functions must have the purity level of <code>WNDS</code> (write no database state).</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
The <a class="olink ADFNS" href="../e41502/toc.htm"><span class="italic">Oracle Database Advanced Application Developer's Guide</span></a> has more details about the <code>RESTRICT_REFERENCES</code> pragma.</div>
</li>
<li>
<p>Predicates generated from different VPD policies for the same object have the combined effect of a conjunction (<code>AND</code>ed) of all the predicates.</p>
</li>
<li>
<p>The security check and object lookup are performed against the owner of the policy function for objects in the subqueries of the dynamic predicates.</p>
</li>
<li>
<p>If the function returns a zero length predicate, then it is interpreted as no restriction being applied to the current user for the policy.</p>
</li>
<li>
<p>When a table alias is required (for example, parent object is a type table) in the predicate, the name of the table or view itself must be used as the name of the alias. The server constructs the transient view as something like</p>
<pre>
"select c1, c2, ... from tab tab where &lt;predicate&gt;"
 
</pre></li>
<li>
<p>Validity of the function is checked at runtime for ease of installation and other dependency issues during import and export.</p>
</li>
<li>
<p>Column-level VPD column masking behavior (specified with <code>sec_relevant_cols_opt =&gt; dbms_rls.ALL_ROWS</code>) is fundamentally different from all other VPD policies, which return only a subset of rows. Instead the column masking behavior returns all rows specified by the user's query, but the sensitive column values display as <code>NULL</code>. The restrictions for this option are as follows:</p>
<ul>
<li>
<p>Only applies to <code>SELECT</code> statements</p>
</li>
<li>
<p>Unlike regular VPD predicates, the masking condition that is generated by the policy function must be a simple boolean expression.</p>
</li>
<li>
<p>If your application performs calculations, or does not expect <code>NULL</code> values, then you should use the default behavior of column-level VPD, which is specified with the <code>sec_relevant_cols</code> parameter.</p>
</li>
<li>
<p>If you use <code>UPDATE AS SELECT</code> with this option, then only the values in the columns you are allowed to see will be updated.</p>
</li>
<li>
<p>This option may prevent some rows from displaying. For example:</p>
<pre>
select * from employees
where salary = 10
</pre>
<p>This query may not return rows if the <code>salary</code> column returns a <code>NULL</code> value because the column masking option has been set.</p>
</li>
</ul>
</li>
<li>
<p>When you add a VPD policy to a synonym, it causes all the dependent objects of the synonym, including policy functions that reference the synonym, to be marked <code>INVALID</code>.</p>
</li>
</ul>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref7820"></a>Examples</p>
<p>As the first of two examples, the following creates a policy that applies to the <code>hr.employee</code> table. This is a column-level VPD policy that will be enforced only if a <code>SELECT</code> or an <code>INDEX</code> statement refers to the <code>salary</code>, <code>birthdate</code>, or <code>SSN</code> columns of the table explicitly, or implicitly through a view. It is also a <code>CONTEXT_SENSITIVE</code> policy, so the server will invoke the policy function <code>hr.hrfun</code> at parse time. During execution, it will only invoke the function if there has been any session private context change since the last use of the statement cursor. The predicate generated by the policy function must not exceed 4000 bytes, the default length limit, since the <code>long_predicate</code> parameter is omitted from the call.</p>
<pre>
BEGIN
dbms_rls.add_policy(object_schema =&gt; 'hr',
</pre>
<pre>
object_name =&gt; 'employee',
policy_name =&gt; 'hr_policy',
function_schema =&gt;'hr',
policy_function =&gt; 'hrfun',
statement_types =&gt;'select,index',
policy_type =&gt; dbms_rls.CONTEXT_SENSITIVE,
sec_relevant_cols=&gt;'salary,birthdate,ssn');
</pre>
<pre>
END;
/
</pre>
<p>As the second example, the following command creates another policy that applies to the same object for hosting, so users can access only data based on their subscriber ID. Since it is defined as a <code>SHARED_STATIC</code> policy type, the server will first try to find the predicate in the SGA cache. The server will only invoke the policy function, <code>subfun</code>, if that search fails.</p>
<pre>
BEGIN
dbms_rls.add_policy(object_schema =&gt; 'hr',
object_name =&gt; 'employee',
policy_name =&gt; 'hosting_policy',
function_schema =&gt;'hr',
policy_function =&gt; 'subfun',
policy_type =&gt; dbms_rls.SHARED_STATIC);
END;
/
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS67724" class="refsect2"><a id="i1002054"></a>
<hr />
<h3 class="refsect2">ADD_POLICY_CONTEXT Procedure</h3>
<p>This procedure adds the context for the active application.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref7821"></a>Syntax</p>
<pre>
DBMS_RLS.ADD_POLICY_CONTEXT (
   object_schema   IN VARCHAR2 NULL,
   object_name     IN VARCHAR2,
   namespace       IN VARCHAR2,
   attribute       IN VARCHAR2); 
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref7822"></a>Parameters</p>
<div id="ARPLS67725" class="tblformal">
<p class="titleintable"><a id="sthref7823"></a><a id="sthref7824"></a>Table 125-5 ADD_POLICY_CONTEXT Procedure Parameters</p>
<table class="cellalignment1229" title="ADD_POLICY_CONTEXT Procedure Parameters " summary="This table describes Parameters used by the DBMS_RLS.ADD_POLICY_CONTEXT subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t10">Parameter</th>
<th class="cellalignment1227" id="r1c2-t10">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t10" headers="r1c1-t10">
<p><code><a id="sthref7825"></a>object_schema</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t10 r1c2-t10">
<p>The schema containing the table, view, or synonym.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t10" headers="r1c1-t10">
<p><code><a id="sthref7826"></a>object_name</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t10 r1c2-t10">
<p>The name of the table, view, or synonym to which the policy is added.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r4c1-t10" headers="r1c1-t10">
<p><code><a id="sthref7827"></a>namespace</code></p>
</td>
<td class="cellalignment1228" headers="r4c1-t10 r1c2-t10">
<p>The namespace of the driving context</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r5c1-t10" headers="r1c1-t10">
<p><code><a id="sthref7828"></a>attribute</code></p>
</td>
<td class="cellalignment1228" headers="r5c1-t10 r1c2-t10">
<p>The attribute of the driving context.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref7829"></a>Usage Notes</p>
<p>Note the following:</p>
<ul>
<li>
<p>This procedure indicates the application context that drives the enforcement of policies; this is the context that determines which application is running.</p>
</li>
<li>
<p>If no <code>object_schema</code> is specified, the current user's schema is assumed.</p>
</li>
<li>
<p>The driving context can be session or global.</p>
</li>
<li>
<p>At execution time, the server retrieves the name of the active policy group from the value of this context.</p>
</li>
<li>
<p>There must be at least one driving context defined for each object that has fine-grained access control policies; otherwise, all policies for the object will be executed.</p>
</li>
<li>
<p>Adding multiple context to the same object will cause policies from multiple policy groups to be enforced.</p>
</li>
<li>
<p>If the driving context is <code>NULL,</code> policies from all policy groups are used.</p>
</li>
<li>
<p>If the driving context is a policy group with policies, all enabled policies from that policy group will be applied, along with all policies from the <code>SYS_DEFAULT</code> policy group.</p>
</li>
<li>
<p>To add a policy to table <code>hr.employees</code> in group <code>access_control_group,</code> the following command is issued:</p>
<pre>
DBMS_RLS.ADD_GROUPED_POLICY('hr','employees','access_control_group','policy1','SYS', 'HR.ACCESS');
</pre></li>
</ul>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS67726" class="refsect2"><a id="i1002040"></a>
<hr />
<h3 class="refsect2">CREATE_POLICY_GROUP Procedure</h3>
<p>This procedure creates a policy group.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref7830"></a>Syntax</p>
<pre>
DBMS_RLS.CREATE_POLICY_GROUP (
   object_schema   IN VARCHAR2 NULL,
   object_name     IN VARCHAR2,
   policy_group    IN VARCHAR2); 
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref7831"></a>Parameters</p>
<div id="ARPLS67727" class="tblformal">
<p class="titleintable"><a id="sthref7832"></a><a id="sthref7833"></a>Table 125-6 CREATE_POLICY_GROUP Procedure Parameters</p>
<table class="cellalignment1229" title="CREATE_POLICY_GROUP Procedure Parameters " summary="This table describes Parameters used by the DBMS_RLS.CREATE_POLICY_GROUP subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t11">Parameter</th>
<th class="cellalignment1227" id="r1c2-t11">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t11" headers="r1c1-t11">
<p><code><a id="sthref7834"></a>object_schema</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t11 r1c2-t11">
<p>Schema containing the table, view, or synonym.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t11" headers="r1c1-t11">
<p><code><a id="sthref7835"></a>object_name</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t11 r1c2-t11">
<p>Name of the table, view, or synonym to which the policy is added.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r4c1-t11" headers="r1c1-t11">
<p><code><a id="sthref7836"></a>policy_group</code></p>
</td>
<td class="cellalignment1228" headers="r4c1-t11 r1c2-t11">
<p>Name of the policy group that the policy belongs to.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref7837"></a>Usage Notes</p>
<p>The group must be unique for each table or view.</p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS67728" class="refsect2"><a id="i1002061"></a>
<hr />
<h3 class="refsect2">DELETE_POLICY_GROUP Procedure</h3>
<p>This procedure deletes a policy group.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref7838"></a>Syntax</p>
<pre>
DBMS_RLS.DELETE_POLICY_GROUP (
  object_schema   IN VARCHAR2 NULL,
  object_name     IN VARCHAR2,
  policy_group    IN VARCHAR2); 
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref7839"></a>Parameters</p>
<div id="ARPLS67729" class="tblformal">
<p class="titleintable"><a id="sthref7840"></a><a id="sthref7841"></a>Table 125-7 DELETE_POLICY_GROUP Procedure Parameters</p>
<table class="cellalignment1229" title="DELETE_POLICY_GROUP Procedure Parameters " summary="This table describes Parameters used by the DBMS_RLS.DELETE_POLICY_GROUP subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t12">Parameter</th>
<th class="cellalignment1227" id="r1c2-t12">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t12" headers="r1c1-t12">
<p><code><a id="sthref7842"></a>object_schema</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t12 r1c2-t12">
<p>The schema containing the table, view, or synonym.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t12" headers="r1c1-t12">
<p><code><a id="sthref7843"></a>object_name</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t12 r1c2-t12">
<p>The name of the table, view, or synonym to which the policy is added.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r4c1-t12" headers="r1c1-t12">
<p><code><a id="sthref7844"></a>policy_group</code></p>
</td>
<td class="cellalignment1228" headers="r4c1-t12 r1c2-t12">
<p>The name of the policy group that the policy belongs to.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref7845"></a>Usage Notes</p>
<p>Note the following:</p>
<ul>
<li>
<p>This procedure deletes a policy group for the specified table, view, or synonym.</p>
</li>
<li>
<p>No policy can be in the policy group.</p>
</li>
</ul>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS67730" class="refsect2"><a id="i1003610"></a>
<hr />
<h3 class="refsect2">DISABLE_GROUPED_POLICY Procedure</h3>
<p>This procedure disables a row-level group security policy.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref7846"></a>Syntax</p>
<pre>
DBMS_RLS.DISABLE_GROUPED_POLICY (
   object_schema   IN VARCHAR2 NULL,
   object_name     IN VARCHAR2,
   group_name      IN VARCHAR2,
   policy_name     IN VARCHAR2); 
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref7847"></a>Parameters</p>
<div id="ARPLS67731" class="tblformal">
<p class="titleintable"><a id="sthref7848"></a><a id="sthref7849"></a>Table 125-8 ENABLE_GROUPED_POLICY Procedure Parameters</p>
<table class="cellalignment1229" title="ENABLE_GROUPED_POLICY Procedure Parameters " summary="This table describes Parameters used by the DBMS_RLS.ENABLE_GROUPED_POLICY subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t13">Parameter</th>
<th class="cellalignment1227" id="r1c2-t13">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t13" headers="r1c1-t13">
<p><code><a id="sthref7850"></a>object_schema</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t13 r1c2-t13">
<p>The schema containing the table, view, or synonym.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t13" headers="r1c1-t13">
<p><code><a id="sthref7851"></a>object_name</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t13 r1c2-t13">
<p>The name of the table, view, or synonym with which the policy is associated.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r4c1-t13" headers="r1c1-t13">
<p><code><a id="sthref7852"></a>group_name</code></p>
</td>
<td class="cellalignment1228" headers="r4c1-t13 r1c2-t13">
<p>The name of the group of the policy.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r5c1-t13" headers="r1c1-t13">
<p><code><a id="sthref7853"></a>policy_name</code></p>
</td>
<td class="cellalignment1228" headers="r5c1-t13 r1c2-t13">
<p>The name of the policy to be enabled or disabled.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref7854"></a>Usage Notes</p>
<ul>
<li>
<p>The procedure causes the current transaction, if any, to commit before the operation is carried out.</p>
</li>
<li>
<p>A commit is performed at the end of the operation.</p>
</li>
<li>
<p>A policy is disabled when this procedure is executed or when the ENABLE_GROUPED_POLICY procedure is executed with "enable" set to FALSE.</p>
</li>
</ul>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS67732" class="refsect2"><a id="i1002068"></a>
<hr />
<h3 class="refsect2">DROP_GROUPED_POLICY Procedure</h3>
<p>This procedure drops a policy associated with a policy group.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref7855"></a>Syntax</p>
<pre>
DBMS_RLS.DROP_GROUPED_POLICY (
   object_schema   IN VARCHAR2 NULL,
   object_name     IN VARCHAR2,
   policy_group    IN VARCHAR2 'SYS_DEFAULT',
   policy_name     IN VARCHAR2); 
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref7856"></a>Parameters</p>
<div id="ARPLS67733" class="tblformal">
<p class="titleintable"><a id="sthref7857"></a><a id="sthref7858"></a>Table 125-9 DROP_GROUPED_POLICY Procedure Parameters</p>
<table class="cellalignment1229" title="DROP_GROUPED_POLICY Procedure Parameters " summary="This table describes Parameters used by the DBMS_RLS.DROP_GROUPED_POLICY subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t14">Parameter</th>
<th class="cellalignment1227" id="r1c2-t14">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t14" headers="r1c1-t14">
<p><code><a id="sthref7859"></a>object_schema</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t14 r1c2-t14">
<p>The schema containing the table, view, or synonym.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t14" headers="r1c1-t14">
<p><code><a id="sthref7860"></a>object_name</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t14 r1c2-t14">
<p>The name of the table, view, or synonym to which the policy is dropped.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r4c1-t14" headers="r1c1-t14">
<p><code><a id="sthref7861"></a>policy_group</code></p>
</td>
<td class="cellalignment1228" headers="r4c1-t14 r1c2-t14">
<p>The name of the policy group that the policy belongs to.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r5c1-t14" headers="r1c1-t14">
<p><code><a id="sthref7862"></a>policy_name</code></p>
</td>
<td class="cellalignment1228" headers="r5c1-t14 r1c2-t14">
<p>The name of the policy.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS67734" class="refsect2"><a id="CIHGHJGG"></a>
<hr />
<h3 class="refsect2">DROP_POLICY Procedure</h3>
<p>This procedure drops a fine-grained access control policy from a table, view, or synonym.</p>
<p>The procedure causes the current transaction, if any, to commit before the operation is carried out. However, this does not cause a commit first if it is inside a DDL event trigger.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#i1004721">Operational Notes</a></div>
<p>A COMMIT is also performed at the end of the operation.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref7863"></a>Syntax</p>
<pre>
DBMS_RLS.DROP_POLICY (
   object_schema   IN VARCHAR2 NULL,
   object_name     IN VARCHAR2,
   policy_name     IN VARCHAR2); 
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref7864"></a>Parameters</p>
<div id="ARPLS67735" class="tblformal">
<p class="titleintable"><a id="sthref7865"></a><a id="sthref7866"></a>Table 125-10 DROP_GROUPED_POLICY Procedure Parameters</p>
<table class="cellalignment1229" title="DROP_GROUPED_POLICY Procedure Parameters " summary="This table describes Parameters used by the DBMS_RLS.DROP_GROUPED_POLICY subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t16">Parameter</th>
<th class="cellalignment1227" id="r1c2-t16">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t16" headers="r1c1-t16">
<p><code><a id="sthref7867"></a>object_schema</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t16 r1c2-t16">
<p>Schema containing the table, view or synonym. If no <code>object_schema</code> is specified, or <code>NULL</code> is provided, then the current user's schema is assumed.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t16" headers="r1c1-t16">
<p><code><a id="sthref7868"></a>object_name</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t16 r1c2-t16">
<p>Name of the table, view, or synonym for which the policy is dropped.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r4c1-t16" headers="r1c1-t16">
<p><code><a id="sthref7869"></a>policy_name</code></p>
</td>
<td class="cellalignment1228" headers="r4c1-t16 r1c2-t16">
<p>Name of policy to be dropped from table, view, or synonym.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref7870"></a>Usage Notes</p>
<ul>
<li>
<p>When you drop a VPD policy from a synonym, it causes all the dependent objects of the synonym, including policy functions that reference the synonym, to be marked <code>INVALID</code>.</p>
</li>
</ul>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS67736" class="refsect2"><a id="i1002075"></a>
<hr />
<h3 class="refsect2">DROP_POLICY_CONTEXT Procedure</h3>
<p>This procedure drops a driving context from the object so that it will have one less driving context.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref7871"></a>Syntax</p>
<pre>
DBMS_RLS.DROP_POLICY_CONTEXT (
   object_schema   IN VARCHAR2 NULL,
   object_name     IN VARCHAR2,
   namespace       IN VARCHAR2,
   attribute       IN VARCHAR2); 
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref7872"></a>Parameters</p>
<div id="ARPLS67737" class="tblformal">
<p class="titleintable"><a id="sthref7873"></a><a id="sthref7874"></a>Table 125-11 DROP_POLICY_CONTEXT Procedure Parameters</p>
<table class="cellalignment1229" title="DROP_POLICY_CONTEXT Procedure Parameters " summary="This table describes Parameters used by the DBMS_RLS.DROP_POLICY_CONTEXT subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t17">Parameter</th>
<th class="cellalignment1227" id="r1c2-t17">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t17" headers="r1c1-t17">
<p><code><a id="sthref7875"></a>object_schema</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t17 r1c2-t17">
<p>The schema containing the table, view, or synonym. If no <code>object_schema</code> is specified, or <code>NULL</code> is provided, then the current user's schema is assumed.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t17" headers="r1c1-t17">
<p><code><a id="sthref7876"></a>object_name</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t17 r1c2-t17">
<p>The name of the table, view, or synonym to which the policy is dropped.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r4c1-t17" headers="r1c1-t17">
<p><code><a id="sthref7877"></a>namespace</code></p>
</td>
<td class="cellalignment1228" headers="r4c1-t17 r1c2-t17">
<p>The namespace of the driving context.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r5c1-t17" headers="r1c1-t17">
<p><code><a id="sthref7878"></a>attribute</code></p>
</td>
<td class="cellalignment1228" headers="r5c1-t17 r1c2-t17">
<p>The attribute of the driving context.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS67738" class="refsect2"><a id="i1002088"></a>
<hr />
<h3 class="refsect2">ENABLE_GROUPED_POLICY Procedure</h3>
<p>This procedure enables or disables a row-level group security policy.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref7879"></a>Syntax</p>
<pre>
DBMS_RLS.ENABLE_GROUPED_POLICY (
   object_schema   IN VARCHAR2 NULL,
   object_name     IN VARCHAR2,
   group_name      IN VARCHAR2,
   policy_name     IN VARCHAR2,
   enable          IN BOOLEAN TRUE); 
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref7880"></a>Parameters</p>
<div id="ARPLS67739" class="tblformal">
<p class="titleintable"><a id="sthref7881"></a><a id="sthref7882"></a>Table 125-12 ENABLE_GROUPED_POLICY Procedure Parameters</p>
<table class="cellalignment1229" title="ENABLE_GROUPED_POLICY Procedure Parameters " summary="This table describes Parameters used by the DBMS_RLS.ENABLE_GROUPED_POLICY subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t18">Parameter</th>
<th class="cellalignment1227" id="r1c2-t18">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t18" headers="r1c1-t18">
<p><code><a id="sthref7883"></a>object_schema</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t18 r1c2-t18">
<p>The schema containing the table, view, or synonym. If no <code>object_schema</code> is specified, or <code>NULL</code> is provided, then the current user's schema is assumed.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t18" headers="r1c1-t18">
<p><code><a id="sthref7884"></a>object_name</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t18 r1c2-t18">
<p>The name of the table, view, or synonym with which the policy is associated.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r4c1-t18" headers="r1c1-t18">
<p><code><a id="sthref7885"></a>group_name</code></p>
</td>
<td class="cellalignment1228" headers="r4c1-t18 r1c2-t18">
<p>The name of the group of the policy.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r5c1-t18" headers="r1c1-t18">
<p><code><a id="sthref7886"></a>policy_name</code></p>
</td>
<td class="cellalignment1228" headers="r5c1-t18 r1c2-t18">
<p>The name of the policy to be enabled or disabled.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r6c1-t18" headers="r1c1-t18">
<p><code><a id="sthref7887"></a>enable</code></p>
</td>
<td class="cellalignment1228" headers="r6c1-t18 r1c2-t18">
<p><code>TRUE</code> enables the policy; <code>FALSE</code> disables the policy.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref7888"></a>Usage Notes</p>
<ul>
<li>
<p>The procedure causes the current transaction, if any, to commit before the operation is carried out.</p>
</li>
<li>
<p>A commit is performed at the end of the operation.</p>
</li>
<li>
<p>A policy is enabled when it is created.</p>
</li>
</ul>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS67740" class="refsect2"><a id="i998317"></a>
<hr />
<h3 class="refsect2">ENABLE_POLICY Procedure</h3>
<p>This procedure enables or disables a fine-grained access control policy. A policy is enabled when it is created.</p>
<p>The procedure causes the current transaction, if any, to commit before the operation is carried out. However, this does not cause a commit first if it is inside a DDL event trigger.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#i1004721">Operational Notes</a></div>
<p>A <code>COMMIT</code> is also performed at the end of the operation.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref7889"></a>Syntax</p>
<pre>
DBMS_RLS.ENABLE_POLICY (
   object_schema IN VARCHAR2 NULL,
   object_name   IN VARCHAR2,
   policy_name   IN VARCHAR2,
   enable        IN BOOLEAN TRUE);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref7890"></a>Parameters</p>
<div id="ARPLS67741" class="tblformal">
<p class="titleintable"><a id="sthref7891"></a><a id="sthref7892"></a>Table 125-13 ENABLE_POLICY Procedure Parameters</p>
<table class="cellalignment1229" title="ENABLE_POLICY Procedure Parameters " summary="This table describes Parameters used by the DBMS_RLS.ENABLE_POLICY subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t20">Parameter</th>
<th class="cellalignment1227" id="r1c2-t20">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t20" headers="r1c1-t20">
<p><code><a id="sthref7893"></a>object_schema</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t20 r1c2-t20">
<p>Schema containing table, view, or synonym. If no <code>object_schema</code> is specified, or <code>NULL</code> is provided, then the current user's schema is assumed.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t20" headers="r1c1-t20">
<p><code><a id="sthref7894"></a>object_name</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t20 r1c2-t20">
<p>Name of table, view, or synonym with which the policy is associated.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r4c1-t20" headers="r1c1-t20">
<p><code><a id="sthref7895"></a>policy_name</code></p>
</td>
<td class="cellalignment1228" headers="r4c1-t20 r1c2-t20">
<p>Name of policy to be enabled or disabled.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r5c1-t20" headers="r1c1-t20">
<p><code><a id="sthref7896"></a>enable</code></p>
</td>
<td class="cellalignment1228" headers="r5c1-t20 r1c2-t20">
<p><code>TRUE</code> to enable the policy, <code>FALSE</code> to disable the policy.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS67742" class="refsect2"><a id="i1002095"></a>
<hr />
<h3 class="refsect2">REFRESH_GROUPED_POLICY Procedure</h3>
<p>This procedure reparses the SQL statements associated with a refreshed policy.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref7897"></a>Syntax</p>
<pre>
DBMS_RLS.REFRESH_GROUPED_POLICY (
   object_schema   IN VARCHAR2 NULL,
   object_name     IN VARCHAR2 NULL,
   group_name      IN VARCHAR2 NULL,
   policy_name     IN VARCHAR2 NULL); 
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref7898"></a>Parameters</p>
<div id="ARPLS67743" class="tblformal">
<p class="titleintable"><a id="sthref7899"></a><a id="sthref7900"></a>Table 125-14 REFRESH_GROUPED_POLICY Procedure Parameters</p>
<table class="cellalignment1229" title="REFRESH_GROUPED_POLICY Procedure Parameters " summary="This table describes Parameters used by the DBMS_RLS.REFRESH_GROUPED_POLICY subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t21">Parameter</th>
<th class="cellalignment1227" id="r1c2-t21">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t21" headers="r1c1-t21">
<p><code><a id="sthref7901"></a>object_schema</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t21 r1c2-t21">
<p>The schema containing the table, view, or synonym. If no <code>object_schema</code> is specified, or <code>NULL</code> is provided, then the current user's schema is assumed.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t21" headers="r1c1-t21">
<p><code><a id="sthref7902"></a>object_name</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t21 r1c2-t21">
<p>The name of the table, view, or synonym with which the policy is associated.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r4c1-t21" headers="r1c1-t21">
<p><code><a id="sthref7903"></a>group_name</code></p>
</td>
<td class="cellalignment1228" headers="r4c1-t21 r1c2-t21">
<p>The name of the group of the policy.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r5c1-t21" headers="r1c1-t21">
<p><code><a id="sthref7904"></a>policy_name</code></p>
</td>
<td class="cellalignment1228" headers="r5c1-t21 r1c2-t21">
<p>The name of the policy.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref7905"></a>Usage Notes</p>
<ul>
<li>
<p>This procedure causes all the cached statements associated with the policy to be reparsed. This guarantees that the latest change to the policy has immediate effect after the procedure is executed.</p>
</li>
<li>
<p>The procedure causes the current transaction, if any, to commit before the operation is carried out.</p>
</li>
<li>
<p>A commit is performed at the end of the operation.</p>
</li>
<li>
<p>The procedure returns an error if it tries to refresh a disabled policy.</p>
</li>
</ul>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS67744" class="refsect2"><a id="i998280"></a>
<hr />
<h3 class="refsect2">REFRESH_POLICY Procedure</h3>
<p>This procedure causes all the cached statements associated with the policy to be reparsed. This guarantees that the latest change to this policy will have immediate effect after the procedure is executed.</p>
<p>The procedure causes the current transaction, if any, to commit before the operation is carried out. However, this does not cause a commit first if it is inside a DDL event trigger.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#i1004721">Operational Notes</a></div>
<p>A COMMIT is also performed at the end of the operation.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref7906"></a>Syntax</p>
<pre>
DBMS_RLS.REFRESH_POLICY (
   object_schema IN VARCHAR2 NULL,
   object_name   IN VARCHAR2 NULL,
   policy_name   IN VARCHAR2 NULL); 
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref7907"></a>Parameters</p>
<div id="ARPLS67745" class="tblformal">
<p class="titleintable"><a id="sthref7908"></a><a id="sthref7909"></a>Table 125-15 REFRESH_POLICY Procedure Parameters</p>
<table class="cellalignment1229" title="REFRESH_POLICY Procedure Parameters " summary="This table describes Parameters used by the DBMS_RLS.REFRESH_POLICY subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t23">Parameter</th>
<th class="cellalignment1227" id="r1c2-t23">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t23" headers="r1c1-t23">
<p><code><a id="sthref7910"></a>object_schema</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t23 r1c2-t23">
<p>Schema containing the table, view, or synonym. If no <code>object_schema</code> is specified, or <code>NULL</code> is provided, then the current user's schema is assumed.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t23" headers="r1c1-t23">
<p><code><a id="sthref7911"></a>object_name</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t23 r1c2-t23">
<p>Name of table, view, or synonym with which the policy is associated.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r4c1-t23" headers="r1c1-t23">
<p><code><a id="sthref7912"></a>policy_name</code></p>
</td>
<td class="cellalignment1228" headers="r4c1-t23 r1c2-t23">
<p>Name of policy to be refreshed.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref7913"></a>Usage Notes</p>
<p>The procedure returns an error if it tries to refresh a disabled policy.</p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" --></div>
<!-- class="refsect1" --></div>
<!-- class="refentry" --></div>
<!-- class="chapter" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment1219">
<tr>
<td class="cellalignment1228">
<table class="cellalignment1224">
<tr>
<td class="cellalignment1223"><a href="d_rlmgrref.htm"><img width="24" height="24" src="../../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment1223"><a href="d_rowid.htm"><img width="24" height="24" src="../../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;1996, 2013,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment1231">
<table class="cellalignment1222">
<tr>
<td class="cellalignment1223"><a href="../../index.htm"><img width="24" height="24" src="../../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment1223"><a href="../../nav/portal_booklist.htm"><img width="24" height="24" src="../../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment1223"><a href="toc.htm"><img width="24" height="24" src="../../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment1223"><a href="index.htm"><img width="24" height="24" src="../../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment1223"><a href="../../nav/mindx.htm"><img width="24" height="24" src="../../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment1223"><a href="../../dcommon/html/feedback.htm"><img width="24" height="24" src="../../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>
</body>
</html>
