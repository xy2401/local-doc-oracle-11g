<!DOCTYPE html>
<html lang="en" >
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1">
<meta charset="utf-8">
<title>DBMS_SPACE_ADMIN</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Version 5.1.2 Build 737" />
<meta name="dcterms.created" content="2013-07-19T18:55:30Z" />
<meta name="robots" content="all" />
<meta name="dcterms.title" content="Database PL/SQL Packages and Types Reference" />
<meta name="dcterms.identifier" content="E40758-03" />
<meta name="dcterms.isVersionOf" content="ARPLS" />
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;1996, 2013,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved." />
<link rel="Start" href="../../index.htm" title="Home" type="text/html" />
<link rel="Copyright" href="../../dcommon/html/cpyr.htm" title="Copyright" type="text/html" />

<script type="application/javascript"  src="../../dcommon/js/headfoot.js"></script>
<script type="application/javascript"  src="../../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html" />
<link rel="Index" href="index.htm" title="Index" type="text/html" />
<link rel="Prev" href="d_space.htm" title="Previous" type="text/html" />
<link rel="Next" href="d_spm.htm" title="Next" type="text/html" />
<link rel="alternate" href="../e40758.pdf" title="PDF version" type="application/pdf" />
<link rel="schema.dcterms" href="http://purl.org/dc/terms/" />
<link rel="stylesheet" href="../../dcommon/css/fusiondoc.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/header.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/footer.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/fonts.css">
<link rel="stylesheet" href="../../dcommon/css/foundation.css">
<link rel="stylesheet" href="../../dcommon/css/codemirror.css">
<link rel="stylesheet" type="text/css" title="Default" href="../../nav/css/html5.css">
<link rel="stylesheet" href="../../dcommon/css/respond-480-tablet.css">
<link rel="stylesheet" href="../../dcommon/css/respond-768-laptop.css">
<link rel="stylesheet" href="../../dcommon/css/respond-1140-deskop.css">
<script type="application/javascript" src="../../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">139/265</span> <!-- End Header -->
<div id="ARPLS057" class="chapter"><a id="BABEHCAD"></a>
<h1 class="chapter"><span class="secnum">135</span> DBMS_SPACE_ADMIN</h1>
<p>The <code><a id="sthref8905"></a>DBMS_SPACE_ADMIN</code> package provides functionality for locally managed tablespaces.</p>
<div class="infoboxnotealso">
<p class="notep1"><span class="bold">See Also</span>:</p>
<a class="olink ADMIN" href="../../server.112/e25494/toc.htm"><span class="italic">Oracle Database Administrator's Guide</span></a> for an example and description of using <code>DBMS_SPACE_ADMIN</code>.</div>
<p>This chapter contains the following topics:</p>
<ul>
<li>
<p><a href="#CHECEBHD">Using DBMS_SPACE_ADMIN</a></p>
<ul>
<li>
<p>Security Model</p>
</li>
<li>
<p>Constants</p>
</li>
<li>
<p>Operational Notes</p>
</li>
</ul>
</li>
<li>
<p><a href="#i1003061">Summary of DBMS_SPACE_ADMIN Subprograms</a></p>
</li>
</ul>
<div class="refentry"><a id="CHECEBHD"></a>
<hr />
<div id="ARPLS68117" class="refsect1">
<h2 class="refsect1">Using DBMS_SPACE_ADMIN</h2>
<p>This section contains topics which relate to using the <code>DBMS_SPACE_ADMIN</code> package.</p>
<ul>
<li>
<p><a href="#i996761">Security Model</a></p>
</li>
<li>
<p><a href="#CHEIDHEB">Constants</a></p>
</li>
<li>
<p><a href="#i1002966">Operational Notes</a></p>
</li>
</ul>
<div id="ARPLS68118" class="refsect2"><a id="i996761"></a>
<hr />
<h3 class="refsect2">Security Model</h3>
<p>This package runs with <code>SYS</code> privileges; therefore, any user who has privilege to execute the package can manipulate the bitmaps.</p>
</div>
<!-- class="refsect2" -->
<div id="ARPLS68119" class="refsect2"><a id="CHEIDHEB"></a>
<hr />
<h3 class="refsect2">Constants</h3>
<div id="ARPLS68120" class="tblformal">
<p class="titleintable"><a id="sthref8906"></a><a id="sthref8907"></a>Table 135-1 DBMS_SPACE_ADMIN Constants</p>
<table class="cellalignment1229" title="DBMS_SPACE_ADMIN Constants" summary="This table describes Constants used by DBMS_SPACE_ADMIN subprograms." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t3">Constant</th>
<th class="cellalignment1227" id="r1c2-t3">Type</th>
<th class="cellalignment1227" id="r1c3-t3">Value</th>
<th class="cellalignment1227" id="r1c4-t3">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t3" headers="r1c1-t3">
<p><code>SEGMENT_VERIFY_EXTENTS</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t3 r1c2-t3">
<p><code>POSITIVE</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t3 r1c3-t3">
<p><code>1</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t3 r1c4-t3">
<p>Verifies that the space owned by segment is appropriately reflected in the bitmap as used</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t3" headers="r1c1-t3">
<p><code>SEGMENT_VERIFY_EXTENTS_GLOBAL</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t3 r1c2-t3">
<p><code>POSITIVE</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t3 r1c3-t3">
<p><code>2</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t3 r1c4-t3">
<p>Verifies that the space owned by segment is appropriately reflected in the bitmap as used and that no other segment claims any of this space to be used by it</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r4c1-t3" headers="r1c1-t3">
<p><code>SEGMENT_MARK_CORRUPT</code></p>
</td>
<td class="cellalignment1228" headers="r4c1-t3 r1c2-t3">
<p><code>POSITIVE</code></p>
</td>
<td class="cellalignment1228" headers="r4c1-t3 r1c3-t3">
<p><code>3</code></p>
</td>
<td class="cellalignment1228" headers="r4c1-t3 r1c4-t3">
<p>Marks a temporary segment as corrupt whereby facilitating its elimination from the dictionary (without space reclamation)</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r5c1-t3" headers="r1c1-t3">
<p><code>SEGMENT_MARK_VALID</code></p>
</td>
<td class="cellalignment1228" headers="r5c1-t3 r1c2-t3">
<p><code>POSITIVE</code></p>
</td>
<td class="cellalignment1228" headers="r5c1-t3 r1c3-t3">
<p><code>4</code></p>
</td>
<td class="cellalignment1228" headers="r5c1-t3 r1c4-t3">
<p>Marks a corrupt temporary segment as valid. It is useful when the corruption in the segment extent map or elsewhere has been resolved and the segment can be dropped normally.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r6c1-t3" headers="r1c1-t3">
<p><code>SEGMENT_DUMP_EXTENT_MAP</code></p>
</td>
<td class="cellalignment1228" headers="r6c1-t3 r1c2-t3">
<p><code>POSITIVE</code></p>
</td>
<td class="cellalignment1228" headers="r6c1-t3 r1c3-t3">
<p><code>5</code></p>
</td>
<td class="cellalignment1228" headers="r6c1-t3 r1c4-t3">
<p>Dumps the extent map for a given segment</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r7c1-t3" headers="r1c1-t3">
<p><code>TABLESPACE_VERIFY_BITMAP</code></p>
</td>
<td class="cellalignment1228" headers="r7c1-t3 r1c2-t3">
<p><code>POSITIVE</code></p>
</td>
<td class="cellalignment1228" headers="r7c1-t3 r1c3-t3">
<p><code>6</code></p>
</td>
<td class="cellalignment1228" headers="r7c1-t3 r1c4-t3">
<p>Verifies the bitmap of the tablespace with extent maps of the segments in that tablespace to make sure everything is consistent</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r8c1-t3" headers="r1c1-t3">
<p><code>TABLESPACE_EXTENT_MAKE_FREE</code></p>
</td>
<td class="cellalignment1228" headers="r8c1-t3 r1c2-t3">
<p><code>POSITIVE</code></p>
</td>
<td class="cellalignment1228" headers="r8c1-t3 r1c3-t3">
<p><code>7</code></p>
</td>
<td class="cellalignment1228" headers="r8c1-t3 r1c4-t3">
<p>Marks the block range (extent) as free in the bitmaps</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r9c1-t3" headers="r1c1-t3">
<p><code>TABLESPACE_EXTENT_MAKE_USED</code></p>
</td>
<td class="cellalignment1228" headers="r9c1-t3 r1c2-t3">
<p><code>POSITIVE</code></p>
</td>
<td class="cellalignment1228" headers="r9c1-t3 r1c3-t3">
<p><code>8</code></p>
</td>
<td class="cellalignment1228" headers="r9c1-t3 r1c4-t3">
<p>Marks the block range (extent) as used in the bitmaps</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r10c1-t3" headers="r1c1-t3">
<p><code>SEGMENT_VERIFY</code><code>_BASIC</code></p>
</td>
<td class="cellalignment1228" headers="r10c1-t3 r1c2-t3">
<p><code>POSITIVE</code></p>
</td>
<td class="cellalignment1228" headers="r10c1-t3 r1c3-t3">
<p><code>9</code></p>
</td>
<td class="cellalignment1228" headers="r10c1-t3 r1c4-t3">
<p>Performs the basic metadata checks</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r11c1-t3" headers="r1c1-t3">
<p><code>SEGMENT_VERIFY</code><code>_DEEP</code></p>
</td>
<td class="cellalignment1228" headers="r11c1-t3 r1c2-t3">
<p><code>POSITIVE</code></p>
</td>
<td class="cellalignment1228" headers="r11c1-t3 r1c3-t3">
<p><code>10</code></p>
</td>
<td class="cellalignment1228" headers="r11c1-t3 r1c4-t3">
<p>Performs deep verification</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r12c1-t3" headers="r1c1-t3">
<p><code>SEGMENT_VERIFY</code><code>_SPECIFIC</code></p>
</td>
<td class="cellalignment1228" headers="r12c1-t3 r1c2-t3">
<p><code>POSITIVE</code></p>
</td>
<td class="cellalignment1228" headers="r12c1-t3 r1c3-t3">
<p><code>11</code></p>
</td>
<td class="cellalignment1228" headers="r12c1-t3 r1c4-t3">
<p>Performs a specific check for the segment</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r13c1-t3" headers="r1c1-t3">
<p><code>HWM_CHECK</code></p>
</td>
<td class="cellalignment1228" headers="r13c1-t3 r1c2-t3">
<p><code>POSITIVE</code></p>
</td>
<td class="cellalignment1228" headers="r13c1-t3 r1c3-t3">
<p><code>12</code></p>
</td>
<td class="cellalignment1228" headers="r13c1-t3 r1c4-t3">
<p>Checks high water mark (HWM)</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r14c1-t3" headers="r1c1-t3">
<p><code>BMB_CHECK</code></p>
</td>
<td class="cellalignment1228" headers="r14c1-t3 r1c2-t3">
<p><code>POSITIVE</code></p>
</td>
<td class="cellalignment1228" headers="r14c1-t3 r1c3-t3">
<p><code>13</code></p>
</td>
<td class="cellalignment1228" headers="r14c1-t3 r1c4-t3">
<p>Checks integrity among L1, L2 and L3 BMBs (Bit Map Blocks)</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r15c1-t3" headers="r1c1-t3">
<p><code>SEG_DICT_CHECK</code></p>
</td>
<td class="cellalignment1228" headers="r15c1-t3 r1c2-t3">
<p><code>POSITIVE</code></p>
</td>
<td class="cellalignment1228" headers="r15c1-t3 r1c3-t3">
<p><code>14</code></p>
</td>
<td class="cellalignment1228" headers="r15c1-t3 r1c4-t3">
<p>Checks consistency of segment header with corresponding <code>SEG</code> entry</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r16c1-t3" headers="r1c1-t3">
<p><code>EXTENT_TS_BITMAP_CHECK</code></p>
</td>
<td class="cellalignment1228" headers="r16c1-t3 r1c2-t3">
<p><code>POSITIVE</code></p>
</td>
<td class="cellalignment1228" headers="r16c1-t3 r1c3-t3">
<p><code>15</code></p>
</td>
<td class="cellalignment1228" headers="r16c1-t3 r1c4-t3">
<p>Checks whether the tablespace bitmaps corresponding to the extent map are marked used</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r17c1-t3" headers="r1c1-t3">
<p><code>DB_BACKPOINTER_CHECK</code></p>
</td>
<td class="cellalignment1228" headers="r17c1-t3 r1c2-t3">
<p><code>POSITIVE</code></p>
</td>
<td class="cellalignment1228" headers="r17c1-t3 r1c3-t3">
<p><code>16</code></p>
</td>
<td class="cellalignment1228" headers="r17c1-t3 r1c4-t3">
<p>Checks whether the L1 BMBs, L2 BMBs, L3 BMBs and data blocks point to the same parent segment</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r18c1-t3" headers="r1c1-t3">
<p><code>EXTENT_SEGMENT_BITMAP_CHECK</code></p>
</td>
<td class="cellalignment1228" headers="r18c1-t3 r1c2-t3">
<p><code>POSITIVE</code></p>
</td>
<td class="cellalignment1228" headers="r18c1-t3 r1c3-t3">
<p><code>17</code></p>
</td>
<td class="cellalignment1228" headers="r18c1-t3 r1c4-t3">
<p>Checks whether the bitmap blocks are consistent with the extent map</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r19c1-t3" headers="r1c1-t3">
<p><code>BITMAPS_CHECK</code></p>
</td>
<td class="cellalignment1228" headers="r19c1-t3 r1c2-t3">
<p><code>POSITIVE</code></p>
</td>
<td class="cellalignment1228" headers="r19c1-t3 r1c3-t3">
<p><code>18</code></p>
</td>
<td class="cellalignment1228" headers="r19c1-t3 r1c4-t3">
<p>Checks from the datablocks that the bitmap states representing the blocks are consistent</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r20c1-t3" headers="r1c1-t3">
<p><code>TS_VERIFY_BITMAPS</code></p>
</td>
<td class="cellalignment1228" headers="r20c1-t3 r1c2-t3">
<p><code>POSITIVE</code></p>
</td>
<td class="cellalignment1228" headers="r20c1-t3 r1c3-t3">
<p><code>19</code></p>
</td>
<td class="cellalignment1228" headers="r20c1-t3 r1c4-t3">
<p>Checks whether the tablespace bitmaps are consistent with the extents belonging to that tablespace</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r21c1-t3" headers="r1c1-t3">
<p><code>TS_VERIFY_DEEP</code></p>
</td>
<td class="cellalignment1228" headers="r21c1-t3 r1c2-t3">
<p><code>POSITIVE</code></p>
</td>
<td class="cellalignment1228" headers="r21c1-t3 r1c3-t3">
<p><code>20</code></p>
</td>
<td class="cellalignment1228" headers="r21c1-t3 r1c4-t3">
<p>Performs <code>TS_VERIFY_BITMAPS</code> and <code>TS_VERIFY_SEGMENTS</code> with <code>DEEP</code> option</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r22c1-t3" headers="r1c1-t3">
<p><code>TS_VERIFY_SEGMENTS</code></p>
</td>
<td class="cellalignment1228" headers="r22c1-t3 r1c2-t3">
<p><code>POSITIVE</code></p>
</td>
<td class="cellalignment1228" headers="r22c1-t3 r1c3-t3">
<p><code>21</code></p>
</td>
<td class="cellalignment1228" headers="r22c1-t3 r1c4-t3">
<p>Performs <code>ASSM_SEGMENT_VERIFY</code> on all segments in the tablespace, taking either the <code>BASIC</code> or the <code>DEEP</code> option</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r23c1-t3" headers="r1c1-t3">
<p><code>SEGMENTS_DUMP_BITMAP_SUMMARY</code></p>
</td>
<td class="cellalignment1228" headers="r23c1-t3 r1c2-t3">
<p><code>POSITIVE</code></p>
</td>
<td class="cellalignment1228" headers="r23c1-t3 r1c3-t3">
<p><code>27</code></p>
</td>
<td class="cellalignment1228" headers="r23c1-t3 r1c4-t3">
<p>Dumps only bitmap block summaries</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsect2" -->
<div id="ARPLS68121" class="refsect2"><a id="i1002966"></a>
<hr />
<h3 class="refsect2">Operational Notes</h3>
<p>Before migrating the <code>SYSTEM</code> tablespace, the following conditions must be met. These conditions are enforced by the <code>TABLESPACE_MIGRATE_TO_LOCAL</code> procedure, except for the cold backup.</p>
<ul>
<li>
<p>The database must have a default temporary tablespace that is not <code>SYSTEM</code>.</p>
</li>
<li>
<p>Dictionary-managed tablespaces cannot have any rollback segments.</p>
</li>
<li>
<p>A locally managed tablespace must have at least one online rollback segment. If you are using automatic undo management, then an undo tablespace must be online.</p>
</li>
<li>
<p>All tablespaces&mdash;except the tablespace containing the rollback segment or the undo tablespace&mdash;must be read-only.</p>
</li>
<li>
<p>You must have a cold backup of the database.</p>
</li>
<li>
<p>The system must be in restricted mode.</p>
</li>
</ul>
</div>
<!-- class="refsect2" --></div>
<!-- class="refsect1" -->
<a id="i1003061"></a>
<hr />
<div id="ARPLS68122" class="refsect1">
<h2 class="refsect1">Summary of DBMS_SPACE_ADMIN Subprograms</h2>
<div id="ARPLS68123" class="tblformal">
<p class="titleintable"><a id="sthref8908"></a><a id="sthref8909"></a>Table 135-2 DBMS_SPACE_ADMIN Package Subprograms</p>
<table class="cellalignment1229" title="DBMS_SPACE_ADMIN Package Subprograms" summary="This table lists the DBMS_SPACE_ADMIN subprograms in alphabetical order and briefly describes them." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t4">Subprogram</th>
<th class="cellalignment1227" id="r1c2-t4">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t4" headers="r1c1-t4">
<p><a href="#CACFGICA">ASSM_SEGMENT_VERIFY Procedure</a></p>
</td>
<td class="cellalignment1228" headers="r2c1-t4 r1c2-t4">
<p>Verifies segments created in ASSM (Automatic Segment-Space Management) tablespaces</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t4" headers="r1c1-t4">
<p><a href="#CACBDCIF">ASSM_TABLESPACE_VERIFY Procedure</a></p>
</td>
<td class="cellalignment1228" headers="r3c1-t4 r1c2-t4">
<p>Verifies ASSM tablespaces</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r4c1-t4" headers="r1c1-t4">
<p><a href="#CACGGIAF">DROP_EMPTY_SEGMENTS Procedure</a></p>
</td>
<td class="cellalignment1228" headers="r4c1-t4 r1c2-t4">
<p>Drops segments from empty tables or table fragments and dependent objects</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r5c1-t4" headers="r1c1-t4">
<p><a href="#CACFEJDA">MATERIALIZE_DEFERRED_SEGMENTS Procedure</a></p>
</td>
<td class="cellalignment1228" headers="r5c1-t4 r1c2-t4">
<p>Materializes segments for tables and table fragments with deferred segment creation and their dependent objects</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r6c1-t4" headers="r1c1-t4">
<p><a href="#i1003202">SEGMENT_CORRUPT Procedure</a></p>
</td>
<td class="cellalignment1228" headers="r6c1-t4 r1c2-t4">
<p>Marks the segment corrupt or valid so that appropriate error recovery can be done</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r7c1-t4" headers="r1c1-t4">
<p><a href="#i997057">SEGMENT_DROP_CORRUPT Procedure</a></p>
</td>
<td class="cellalignment1228" headers="r7c1-t4 r1c2-t4">
<p>Drops a segment currently marked corrupt (without reclaiming space)</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r8c1-t4" headers="r1c1-t4">
<p><a href="#i997098">SEGMENT_DUMP Procedure</a></p>
</td>
<td class="cellalignment1228" headers="r8c1-t4 r1c2-t4">
<p>Dumps the segment header and extent maps of a given segment</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r9c1-t4" headers="r1c1-t4">
<p><a href="#i1003253">SEGMENT_VERIFY Procedure</a></p>
</td>
<td class="cellalignment1228" headers="r9c1-t4 r1c2-t4">
<p>Verifies the consistency of the extent map of the segment</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r10c1-t4" headers="r1c1-t4">
<p><a href="#i997164">TABLESPACE_FIX_BITMAPS Procedure</a></p>
</td>
<td class="cellalignment1228" headers="r10c1-t4 r1c2-t4">
<p>Marks the appropriate block range (extent) as free or used in bitmap</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r11c1-t4" headers="r1c1-t4">
<p><a href="#i1003383">TABLESPACE_FIX_SEGMENT_STATES Procedure</a></p>
</td>
<td class="cellalignment1228" headers="r11c1-t4 r1c2-t4">
<p>Fixes the state of the segments in a tablespace in which migration was aborted</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r12c1-t4" headers="r1c1-t4">
<p><a href="#i1003433">TABLESPACE_MIGRATE_FROM_LOCAL Procedure</a></p>
</td>
<td class="cellalignment1228" headers="r12c1-t4 r1c2-t4">
<p>Migrates a locally managed tablespace to dictionary-managed tablespace</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r13c1-t4" headers="r1c1-t4">
<p><a href="#i997300">TABLESPACE_MIGRATE_TO_LOCAL Procedure</a></p>
</td>
<td class="cellalignment1228" headers="r13c1-t4 r1c2-t4">
<p>Migrates a tablespace from dictionary-managed format to locally managed format</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r14c1-t4" headers="r1c1-t4">
<p><a href="#i1003443">TABLESPACE_REBUILD_BITMAPS Procedure</a></p>
</td>
<td class="cellalignment1228" headers="r14c1-t4 r1c2-t4">
<p>Rebuilds the appropriate bitmaps</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r15c1-t4" headers="r1c1-t4">
<p><a href="#i1003484">TABLESPACE_REBUILD_QUOTAS Procedure</a></p>
</td>
<td class="cellalignment1228" headers="r15c1-t4 r1c2-t4">
<p>Rebuilds quotas for given tablespace</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r16c1-t4" headers="r1c1-t4">
<p><a href="#i997372">TABLESPACE_RELOCATE_BITMAPS Procedure</a></p>
</td>
<td class="cellalignment1228" headers="r16c1-t4 r1c2-t4">
<p>Relocates the bitmaps to the destination specified</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r17c1-t4" headers="r1c1-t4">
<p><a href="#i1003313">TABLESPACE_VERIFY Procedure</a></p>
</td>
<td class="cellalignment1228" headers="r17c1-t4 r1c2-t4">
<p>Verifies that the bitmaps and extent maps for the segments in the tablespace are synchronized</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<div id="ARPLS68124" class="refsect2"><a id="CACFGICA"></a>
<hr />
<h3 class="refsect2"><a id="sthref8910"></a>ASSM_SEGMENT_VERIFY Procedure</h3>
<p>Given a segment definition, the procedure verifies the basic consistency of the space metadata blocks as well as consistency between space metadata and segment data blocks. This procedure verifies segments created in Automatic Segment Space Management (ASSM) tablespaces.</p>
<p>There is however a difference between basic verification and deep verification:</p>
<ul>
<li>
<p>Basic verification involves consistency checks of space metadata, such as integrity among level 1, level 2, level 3 bitmap blocks, consistency of segment extent map and level 1 bitmap ranges.</p>
</li>
<li>
<p>Deep verification involves consistency checks between datablocks and space metadata blocks such as whether the datablocks point correctly to the parent level 1 bitmap blocks, and whether the freeness states in the datablocks are consistent with the freeness states of bits in level 1 bitmap blocks corresponding to the datablocks.</p>
</li>
</ul>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref8911"></a>Syntax</p>
<pre>
DBMS_SPACE_ADMIN.ASSM_SEGMENT_VERIFY (
   segment_owner   IN VARCHAR2,
   segment_name    IN VARCHAR2,
   segment_type    IN VARCHAR2,
   partition_name  IN VARCHAR2,
   verify_option   IN POSITIVE  DEFAULT SEGMENT_VERIFY_BASIC,
   attrib          IN POSITIVE  DEFAULT NULL);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref8912"></a>Parameters</p>
<div id="ARPLS68125" class="tblformal">
<p class="titleintable"><a id="sthref8913"></a><a id="sthref8914"></a>Table 135-3 ASSM_SEGMENT_VERIFY Procedure Parameters</p>
<table class="cellalignment1229" title="ASSM_SEGMENT_VERIFY Procedure Parameters" summary="This table describes Parameters used by the DBMS_SPACE_ADMIN.SEGMENT_CORRUPT subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t5">Parameter</th>
<th class="cellalignment1227" id="r1c2-t5">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t5" headers="r1c1-t5">
<p><code>segment_owner</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t5 r1c2-t5">
<p>Schema that owns the segment</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t5" headers="r1c1-t5">
<p><code>segment_name</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t5 r1c2-t5">
<p>Name of the segment to be verified</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r4c1-t5" headers="r1c1-t5">
<p><code>segment_type</code></p>
</td>
<td class="cellalignment1228" headers="r4c1-t5 r1c2-t5">
<p>Segment namespace is one of <code>TABLE</code>, <code>TABLE</code> <code>PARTITION</code>, <code>TABLE</code> <code>SUBPARTITION</code>, <code>INDEX</code>, <code>INDEX</code> <code>PARTITION</code>, <code>INDEX</code> <code>SUBPARTITION</code>, <code>LOB</code>, <code>LOB</code> <code>PARTITION</code>, <code>LOB</code> <code>SUBPARTITION</code>, <code>CLUSTER</code></p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r5c1-t5" headers="r1c1-t5">
<p><code>partition_name</code></p>
</td>
<td class="cellalignment1228" headers="r5c1-t5 r1c2-t5">
<p>Name of the partition or subpartition</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r6c1-t5" headers="r1c1-t5">
<p><code>verify_option</code></p>
</td>
<td class="cellalignment1228" headers="r6c1-t5 r1c2-t5">
<p>One of the following options:</p>
<ul>
<li>
<p><code>SEGMENT_VERIFY_BASIC</code> := 9. Performs deep verification</p>
</li>
<li>
<p><code>SEGMENT_VERIFY_DEEP</code> := 10. Performs the basic metadata checks (Default)</p>
</li>
<li>
<p><code>SEGMENT_VERIFY_SPECIFIC</code> := 11. Performs a specific check for the segment</p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r7c1-t5" headers="r1c1-t5">
<p><code>attrib</code></p>
</td>
<td class="cellalignment1228" headers="r7c1-t5 r1c2-t5">
<p>When option <code>SEGMENT_VERIFY_SPECIFIC</code> is specified as option, <code>attrib</code> can be one of the following:</p>
<ul>
<li>
<p><code>HWM_CHECK</code> := 12. Checks whether high water mark information is accurate</p>
</li>
<li>
<p><code>BMB_CHECK</code> := 13. Checks whether space bitmap blocks have correct backpointers to the segment header</p>
</li>
<li>
<p><code>SEG_DICT_CHECK</code> := 14. Checks whether dictionary information for segment is accurate</p>
</li>
<li>
<p><code>EXTENT_TS_BITMAP_CHECK</code> := 15. Checks whether extent maps are consistent with file level bitmaps</p>
</li>
<li>
<p><code>DB_BACKPOINTER_CHECK</code> := 16. Checks whether datablocks have correct backpointers to the space metadata blocks</p>
</li>
<li>
<p><code>EXTENT_SEGMENT_BITMAP_CHECK</code> := 17. Checks whether extent map in the segment matches the bitmaps in the segment</p>
</li>
<li>
<p><code>BITMAPS_CHECK</code> := 18. Checks whether space bitmap blocks are accurate</p>
</li>
</ul>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref8915"></a>Usage Notes</p>
<ul>
<li>
<p>Using this procedure requires <code>SYSDBA</code> privileges.</p>
</li>
<li>
<p>You can determine the relative file # and header block # (<code>header_relative_file</code> and <code>header_block</code> parameters) by querying <code>DBA_SEGMENTS</code>.</p>
</li>
<li>
<p>This procedure outputs a dump file named <code>sid_ora_</code><code><span class="codeinlineitalic">process_ID</span></code>.<code>trc</code> to the location specified in the <code>USER_DUMP_DEST</code> initialization parameter.</p>
</li>
</ul>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS68126" class="refsect2"><a id="CACBDCIF"></a>
<hr />
<h3 class="refsect2"><a id="sthref8916"></a>ASSM_TABLESPACE_VERIFY Procedure</h3>
<p>This procedures verifies all the segments created in an ASSM tablespace. The verification for each segment performs basic consistency checks of the space metadata blocks as well as consistency checks between space metadata and segment data blocks.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref8917"></a>Syntax</p>
<pre>
DBMS_SPACE_ADMIN.ASSM_TABLESPACE_VERIFY (
   tablespace_name   IN VARCHAR2,
   ts_option         IN POSITIVE,
   segment_option    IN POSITIVE DEFAULT NULL);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref8918"></a>Parameters</p>
<div id="ARPLS68127" class="tblformal">
<p class="titleintable"><a id="sthref8919"></a><a id="sthref8920"></a>Table 135-4 ASSM_TABLESPACE_VERIFY Procedure Parameters</p>
<table class="cellalignment1229" title="ASSM_TABLESPACE_VERIFY Procedure Parameters" summary="This table describes Parameters used by the DBMS_SPACE_ADMIN.ASSM_TABLESPACE_VERIFY subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t6">Parameter</th>
<th class="cellalignment1227" id="r1c2-t6">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t6" headers="r1c1-t6">
<p><code>tablespace_name</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t6 r1c2-t6">
<p>Name of the tablespace to verify. The tablespace must be an ASSM tablespace.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t6" headers="r1c1-t6">
<p><code>ts_option</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t6 r1c2-t6">
<ul>
<li>
<p><code>TS_VERIFY_BITMAPS</code> := 19. The bitmaps are verified against the extents. This detects bits that are marked used or free wrongly and detects multiple allocation of extents. The file metadata is validated against <code>file$</code> and control file.</p>
</li>
<li>
<p><code>TS_VERIFY_DEEP</code> := 20. This option is used to verify the file bitmaps as well perform checks on all the segments .</p>
</li>
<li>
<p><code>TS_VERIFY_SEGMENTS</code> := 21. This option is used to invoke <code>SEGMENT_VERIFY</code> on all the segments in the tablespace. Optionally you can write a script that queries all the segments in the tablespace and invoke <code>SEGMENT_VERIFY</code>.</p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r4c1-t6" headers="r1c1-t6">
<p><code>segment_option</code></p>
</td>
<td class="cellalignment1228" headers="r4c1-t6 r1c2-t6">
<p>When <code>TS_VERIFY_SEGMENTS</code> is specified, <code>segment_option</code> can be one of the following:</p>
<ul>
<li>
<p><code>SEGMENT_VERIFY_BASIC</code> := 9</p>
</li>
<li>
<p><code>SEGMENT_VERIFY_DEEP</code> := 10</p>
</li>
</ul>
<p>The value of <code>segment_option</code> is <code>NULL</code> when <code>TS_VERIFY_DEEP</code> or <code>TS_VERIFY_BITMAPS</code> is specified.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref8921"></a>Usage Notes</p>
<ul>
<li>
<p>Using this procedure requires <code>SYSDBA</code> privileges.</p>
</li>
<li>
<p>This procedure outputs a dump file named <code>sid_ora_</code><code><span class="codeinlineitalic">process_ID</span></code>.<code>trc</code> to the location specified in the <code>USER_DUMP_DEST</code> initialization parameter.</p>
</li>
</ul>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS73093" class="refsect2"><a id="CACGGIAF"></a>
<hr />
<h3 class="refsect2"><a id="sthref8922"></a>DROP_EMPTY_SEGMENTS Procedure</h3>
<p>This procedures drops segments from empty tables or table fragments and dependent objects.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
This functionality is available starting with Oracle Database 11<span class="italic">g</span> Release 2 (11.2.0.2).</div>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref8923"></a>Syntax</p>
<pre>
DBMS_SPACE_ADMIN.DROP_EMPTY_SEGMENTS (
   schema_name       IN     VARCHAR2   DEFAULT NULL,
   table_name        IN     VARCHAR2   DEFAULT NULL,
   partition_name    IN     VARCHAR2   DEFAULT NULL);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref8924"></a>Parameters</p>
<div id="ARPLS73094" class="tblformal">
<p class="titleintable"><a id="sthref8925"></a><a id="sthref8926"></a>Table 135-5 DROP_EMPTY_SEGMENTS Procedure Parameters</p>
<table class="cellalignment1229" title="DROP_EMPTY_SEGMENTS Procedure Parameters" summary="This table describes Parameters used by the DBMS_SPACE_ADMIN.DROP_EMPTY_SEGMENTS subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t8">Parameter</th>
<th class="cellalignment1227" id="r1c2-t8">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t8" headers="r1c1-t8">
<p><code>schema_name</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t8 r1c2-t8">
<p>Name of schema</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t8" headers="r1c1-t8">
<p><code>table_name</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t8 r1c2-t8">
<p>Name of table</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r4c1-t8" headers="r1c1-t8">
<p><code>partition_name</code></p>
</td>
<td class="cellalignment1228" headers="r4c1-t8 r1c2-t8">
<p>Name of partition</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref8927"></a>Usage Notes</p>
<p>Given a schema name, this procedure scans all tables in the schema. For each table, if the table or any of its fragments are found to be empty, and the table satisfies certain criteria (restrictions being the same as those described in <a class="olink SQLRF54480" href="../../server.112/e41084/statements_7002.htm#SQLRF54480">"Restrictions on Deferred Segment Creation"</a>), then the empty table fragment and associated index segments are dropped along with the corresponding LOB data and index segments. A subsequent insert creates segments with the same properties.</p>
<p>Optionally:</p>
<ul>
<li>
<p>No schema_name is specified, in which case tables belonging to all schemas are scanned</p>
</li>
<li>
<p>Both <code>schema_name</code> and <code>table_name</code> are specified to perform the operation on a specified table</p>
</li>
<li>
<p>All three arguments are supplied, restricting the operation to the partition and its dependent objects</p>
</li>
</ul>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS73095" class="refsect2"><a id="CACFEJDA"></a>
<hr />
<h3 class="refsect2"><a id="sthref8928"></a>MATERIALIZE_DEFERRED_SEGMENTS Procedure</h3>
<p>This procedure materializes segments for tables and table fragments with deferred segment creation and their dependent objects.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
This functionality is available starting with Oracle Database 11<span class="italic">g</span> Release 2 (11.2.0.2).</div>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref8929"></a>Syntax</p>
<pre>
DBMS_SPACE_ADMIN.MATERIALIZE_DEFERRED_SEGMENTS (
   schema_name       IN     VARCHAR2   DEFAULT NULL,
   table_name        IN     VARCHAR2   DEFAULT NULL,
   partition_name    IN     VARCHAR2   DEFAULT NULL);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref8930"></a>Parameters</p>
<div id="ARPLS73096" class="tblformal">
<p class="titleintable"><a id="sthref8931"></a><a id="sthref8932"></a>Table 135-6 MATERIALIZE_DEFERRED_SEGMENTS Procedure Parameters</p>
<table class="cellalignment1229" title="MATERIALIZE_DEFERRED_SEGMENTS Procedure Parameters" summary="This table describes Parameters used by the DBMS_SPACE_ADMIN.MATERIALIZE_DEFERRED_SEGMENTS subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t10">Parameter</th>
<th class="cellalignment1227" id="r1c2-t10">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t10" headers="r1c1-t10">
<p><code>schema_name</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t10 r1c2-t10">
<p>Name of schema</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t10" headers="r1c1-t10">
<p><code>table_name</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t10 r1c2-t10">
<p>Name of table</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r4c1-t10" headers="r1c1-t10">
<p><code>partition_name</code></p>
</td>
<td class="cellalignment1228" headers="r4c1-t10 r1c2-t10">
<p>Name of partition</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref8933"></a>Usage Notes</p>
<p>Given a schema name, this procedure scans all tables in the schema. For each table, if the deferred or delayed segment property is set for the table or any of its fragments, then a new segment is created for those fragments and their dependent objects.</p>
<p>Optionally:</p>
<ul>
<li>
<p>No schema_name is specified, in which case tables belonging to all schemas are scanned</p>
</li>
<li>
<p>Both <code>schema_name</code> and <code>table_name</code> are specified to perform the operation on a specified table</p>
</li>
<li>
<p>All three arguments are supplied, restricting the operation to the partition and its dependent objects</p>
</li>
</ul>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS68128" class="refsect2"><a id="i1003202"></a>
<hr />
<h3 class="refsect2"><a id="sthref8934"></a>SEGMENT_CORRUPT Procedure</h3>
<p>This procedure marks the segment corrupt or valid so that appropriate error recovery can be done. It cannot be used on the <code>SYSTEM</code> tablespace.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref8935"></a>Syntax</p>
<pre>
DBMS_SPACE_ADMIN.SEGMENT_CORRUPT (
   tablespace_name         IN    VARCHAR2,
   header_relative_file    IN    POSITIVE,
   header_block            IN    POSITIVE,
   corrupt_option          IN    POSITIVE  DEFAULT SEGMENT_MARK_CORRUPT);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref8936"></a>Parameters</p>
<div id="ARPLS68129" class="tblformal">
<p class="titleintable"><a id="sthref8937"></a><a id="sthref8938"></a>Table 135-7 SEGMENT_CORRUPT Procedure Parameters</p>
<table class="cellalignment1229" title="SEGMENT_CORRUPT Procedure Parameters" summary="This table describes Parameters used by the DBMS_SPACE_ADMIN.SEGMENT_CORRUPT subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t11">Parameter</th>
<th class="cellalignment1227" id="r1c2-t11">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t11" headers="r1c1-t11">
<p><code>tablespace_name</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t11 r1c2-t11">
<p>Name of tablespace in which segment resides</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t11" headers="r1c1-t11">
<p><code>header_relative_file</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t11 r1c2-t11">
<p>Relative file number of segment header</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r4c1-t11" headers="r1c1-t11">
<p><code>header_block</code></p>
</td>
<td class="cellalignment1228" headers="r4c1-t11 r1c2-t11">
<p>Block number of segment header</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r5c1-t11" headers="r1c1-t11">
<p><code>corrupt_option</code></p>
</td>
<td class="cellalignment1228" headers="r5c1-t11 r1c2-t11">
<p><code>SEGMENT_MARK_CORRUPT</code> (default) or <code>SEGMENT_MARK_VALID</code></p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref8939"></a>Usage Noes</p>
<p>You can determine the relative file number and block number (<code>header_relative_file</code> and <code>header_block</code> parameter) of the segment header block by querying <code>DBA_SEGMENTS</code>.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref8940"></a>Examples</p>
<p>The following example marks the segment as corrupt:</p>
<pre>
EXECUTE DBMS_SPACE_ADMIN.SEGMENT_CORRUPT('USERS', 4, 33, DBMS_SPACE_ADMIN.SEGMENT_MARK_CORRUPT); 
</pre>
<p>Alternately, the next example marks a corrupt segment valid:</p>
<pre>
EXECUTE DBMS_SPACE_ADMIN.SEGMENT_CORRUPT('USERS', 4, 33, DBMS_SPACE_ADMIN.SEGMENT_MARK_VALID); 
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS68130" class="refsect2"><a id="i997057"></a>
<hr />
<h3 class="refsect2"><a id="sthref8941"></a>SEGMENT_DROP_CORRUPT Procedure</h3>
<p>This procedure drops a segment currently marked corrupt (without reclaiming space). For this to work, the segment must be marked <span class="italic">temporary</span>. To mark a corrupt segment as temporary, issue a <code>DROP</code> command on the segment.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref8942"></a>Syntax</p>
<pre>
DBMS_SPACE_ADMIN.SEGMENT_DROP_CORRUPT (
   tablespace_name         IN    VARCHAR2,
   header_relative_file    IN    POSITIVE,
   header_block            IN    POSITIVE);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref8943"></a>Parameters</p>
<div id="ARPLS68131" class="tblformal">
<p class="titleintable"><a id="sthref8944"></a><a id="sthref8945"></a>Table 135-8 SEGMENT_DROP_CORRUPT Procedure Parameters</p>
<table class="cellalignment1229" title="SEGMENT_DROP_CORRUPT Procedure Parameters" summary="This table describes Parameters used by the DBMS_SPACE_ADMIN.SEGMENT_CORRUPT subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t12">Parameter</th>
<th class="cellalignment1227" id="r1c2-t12">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t12" headers="r1c1-t12">
<p><code>tablespace_name</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t12 r1c2-t12">
<p>Name of tablespace in which segment resides</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t12" headers="r1c1-t12">
<p><code>header_relative_file</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t12 r1c2-t12">
<p>Relative file number of segment header</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r4c1-t12" headers="r1c1-t12">
<p><code>header_block</code></p>
</td>
<td class="cellalignment1228" headers="r4c1-t12 r1c2-t12">
<p>Block number of segment header</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref8946"></a>Usage Notes</p>
<ul>
<li>
<p>The space for the segment is not released, and it must be fixed by using the <a href="#i997164">TABLESPACE_FIX_BITMAPS Procedure</a> or the <a href="#i1003443">TABLESPACE_REBUILD_BITMAPS Procedure</a>.</p>
</li>
<li>
<p>The procedure cannot be used on the <code>SYSTEM</code> tablespace.</p>
</li>
<li>
<p>You can determine the relative file number and block number (<code>header_relative_file</code> and <code>header_block</code> parameter) of the segment header block by querying <code>DBA_SEGMENTS</code>.</p>
</li>
</ul>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref8947"></a>Examples</p>
<pre>
EXECUTE DBMS_SPACE_ADMIN.SEGMENT_DROP_CORRUPT('USERS', 4, 33); 
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS68132" class="refsect2"><a id="i997098"></a>
<hr />
<h3 class="refsect2"><a id="sthref8948"></a>SEGMENT_DUMP Procedure</h3>
<p>This procedure dumps the segment header and bitmap blocks of a specific segment to the location specified in the <code>USER_DUMP_DEST</code> initialization parameter.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref8949"></a>Syntax</p>
<pre>
DBMS_SPACE_ADMIN.SEGMENT_DUMP (
   tablespace_name         IN    VARCHAR2,
   header_relative_file    IN    POSITIVE,
   header_block            IN    POSITIVE,
   dump_option             IN    POSITIVE  DEFAULT SEGMENT_DUMP_EXTENT_MAP);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref8950"></a>Parameters</p>
<div id="ARPLS68133" class="tblformal">
<p class="titleintable"><a id="sthref8951"></a><a id="sthref8952"></a>Table 135-9 SEGMENT_DUMP Procedure Parameters</p>
<table class="cellalignment1229" title="SEGMENT_DUMP Procedure Parameters" summary="This table describes Parameters used by the DBMS_SPACE_ADMIN.SEGMENT_DUMP subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t13">Parameter</th>
<th class="cellalignment1227" id="r1c2-t13">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t13" headers="r1c1-t13">
<p><code>tablespace_name</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t13 r1c2-t13">
<p>Name of tablespace in which segment resides</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t13" headers="r1c1-t13">
<p><code>header_relative_file</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t13 r1c2-t13">
<p>Relative file number of segment header</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r4c1-t13" headers="r1c1-t13">
<p><code>header_block</code></p>
</td>
<td class="cellalignment1228" headers="r4c1-t13 r1c2-t13">
<p>Block number of segment header</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r5c1-t13" headers="r1c1-t13">
<p><code>dump_option</code></p>
</td>
<td class="cellalignment1228" headers="r5c1-t13 r1c2-t13">
<p>One of the following options:</p>
<ul>
<li>
<p><code>SEGMENT_DUMP_EXTENT_MAP</code></p>
</li>
<li>
<p><code>SEGMENT_DUMP_BITMAP_SUMMARY</code></p>
</li>
</ul>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref8953"></a>Usage Notes</p>
<ul>
<li>
<p>You can produce a slightly abbreviated dump, which includes the segment header and bitmap block summaries, without percent-free states of each block if you pass <code>SEGMENT_DUMP_BITMAP_SUMMARY</code> as the <code>dump_option</code> parameter.</p>
</li>
<li>
<p>You can determine the relative file number and block number (<code>header_relative_file</code> and <code>header_block</code> parameter) of the segment header block by querying <code>DBA_SEGMENTS</code>.</p>
</li>
</ul>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref8954"></a>Examples</p>
<pre>
EXECUTE DBMS_SPACE_ADMIN.SEGMENT_DUMP('USERS', 4, 33); 
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS68134" class="refsect2"><a id="i1003253"></a>
<hr />
<h3 class="refsect2"><a id="sthref8955"></a>SEGMENT_VERIFY Procedure</h3>
<p>This procedure checks the consistency of the segment extent map with the tablespace file bitmaps.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref8956"></a>Syntax</p>
<pre>
DBMS_SPACE_ADMIN.SEGMENT_VERIFY (
   tablespace_name         IN    VARCHAR2,
   header_relative_file    IN    POSITIVE,
   header_block            IN    POSITIVE,
   verify_option           IN    POSITIVE  DEFAULT SEGMENT_VERIFY_EXTENTS);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref8957"></a>Parameters</p>
<div id="ARPLS68135" class="tblformal">
<p class="titleintable"><a id="sthref8958"></a><a id="sthref8959"></a>Table 135-10 SEGMENT_VERIFY Procedure Parameters</p>
<table class="cellalignment1229" title="SEGMENT_VERIFY Procedure Parameters" summary="This table describes Parameters used by the DBMS_SPACE_ADMIN.SEGMENT_VERIFY subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t14">Parameters</th>
<th class="cellalignment1227" id="r1c2-t14">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t14" headers="r1c1-t14">
<p><code>tablespace_name</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t14 r1c2-t14">
<p>Name of tablespace in which segment resides</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t14" headers="r1c1-t14">
<p><code>header_relative_file</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t14 r1c2-t14">
<p>Relative file number of segment header</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r4c1-t14" headers="r1c1-t14">
<p><code>header_block</code></p>
</td>
<td class="cellalignment1228" headers="r4c1-t14 r1c2-t14">
<p>Block number of segment header</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r5c1-t14" headers="r1c1-t14">
<p><code>verify_option</code></p>
</td>
<td class="cellalignment1228" headers="r5c1-t14 r1c2-t14">
<p>What kind of check to do: <code>SEGMENT_VERIFY_EXTENTS</code> or <code>SEGMENT_VERIFY_EXTENTS_GLOBAL</code></p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref8960"></a>Usage Notes</p>
<ul>
<li>
<p>Anomalies are output as block range, bitmap-block, bitmap-block-range, anomaly-information, in the trace file for all block ranges found to have incorrect space representation. The kinds of problems which would be reported are free space not considered free, used space considered free, and the same space considered used by multiple segments.</p>
</li>
<li>
<p>You can determine the relative file number and block number (<code>header_relative_file</code> and <code>header_block</code> parameter) of the segment header block by querying <code>DBA_SEGMENTS</code>.</p>
</li>
</ul>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref8961"></a>Examples</p>
<p>The following example verifies that the segment with segment header at relative file number 4, block number 33, has its extent maps and bitmaps synchronized.</p>
<pre>
EXECUTE DBMS_SPACE_ADMIN.SEGMENT_VERIFY('USERS', 4, 33, DBMS_SPACE_ADMIN.SEGMENT_VERIFY_EXTENTS); 
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS68136" class="refsect2"><a id="i997164"></a>
<hr />
<h3 class="refsect2"><a id="sthref8962"></a>TABLESPACE_FIX_BITMAPS Procedure</h3>
<p>This procedure marks the appropriate block range (extent) as free or used in bitmap. It cannot be used on the <code>SYSTEM</code> tablespace.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref8963"></a>Syntax</p>
<pre>
DBMS_SPACE_ADMIN.TABLESPACE_FIX_BITMAPS (
   tablespace_name         IN    VARCHAR2,
   dbarange_relative_file  IN    POSITIVE,
   dbarange_begin_block    IN    POSITIVE,
   dbarange_end_block      IN    POSITIVE,
   fix_option              IN    POSITIVE);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref8964"></a>Parameters</p>
<div id="ARPLS68137" class="tblformal">
<p class="titleintable"><a id="sthref8965"></a><a id="sthref8966"></a>Table 135-11 TABLESPACE_FIX_BITMAPS Procedure Parameters</p>
<table class="cellalignment1229" title="TABLESPACE_FIX_BITMAPS Procedure Parameters" summary="This table describes Parameters used by the DBMS_SPACE_ADMIN.TABLESPACE_FIX_BITMAPS subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t15">Parameter</th>
<th class="cellalignment1227" id="r1c2-t15">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t15" headers="r1c1-t15">
<p><code>tablespace_name</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t15 r1c2-t15">
<p>Name of tablespace</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t15" headers="r1c1-t15">
<p><code>dbarange_relative_file</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t15 r1c2-t15">
<p>Relative file number of block range (extent)</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r4c1-t15" headers="r1c1-t15">
<p><code>dbarange_begin_block</code></p>
</td>
<td class="cellalignment1228" headers="r4c1-t15 r1c2-t15">
<p>Block number of beginning of extent</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r5c1-t15" headers="r1c1-t15">
<p><code>dbarange_end_block</code></p>
</td>
<td class="cellalignment1228" headers="r5c1-t15 r1c2-t15">
<p>Block number (inclusive) of end of extent</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r6c1-t15" headers="r1c1-t15">
<p><code>fix_option</code></p>
</td>
<td class="cellalignment1228" headers="r6c1-t15 r1c2-t15">
<p>One of the following options:</p>
<ul>
<li>
<p><code>TABLESPACE_EXTENT_MAKE_FREE</code></p>
</li>
<li>
<p><code>TABLESPACE_EXTENT_MAKE_USED</code></p>
</li>
</ul>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref8967"></a>Examples</p>
<p>The following example marks bits for 51 blocks for relative file number 4, beginning at block number 33 and ending at 83, as <code>USED</code> in bitmaps.</p>
<pre>
EXECUTE DBMS_SPACE_ADMIN.TABLESPACE_FIX_BITMAPS('USERS', 4, 33, 83, DBMS_SPACE_ADMIN.EXTENT_MAKE_USED); 
</pre>
<p>Alternatively, specifying an option of <code>TABLESPACE_EXTENT_MAKE_FREE</code> marks the bits free in bitmaps. The <code>BEGIN</code> and <code>END</code> blocks must be in extent boundary and be extent multiple; otherwise, an error is raised.</p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS68138" class="refsect2"><a id="i1003383"></a>
<hr />
<h3 class="refsect2"><a id="sthref8968"></a>TABLESPACE_FIX_SEGMENT_STATES Procedure</h3>
<p>This procedure fixes the state of the segments in a tablespace in which migration was aborted. During tablespace migration to or from local, the segments are put in a transient state. If migration is aborted, then the segment states are corrected by SMON when event 10906 is set. A database with segments in such a transient state cannot be downgraded. The procedure can be used to fix the state of such segments.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref8969"></a>Syntax</p>
<pre>
DBMS_SPACE_ADMIN.TABLESPACE_FIX_SEGMENT_STATES (
   tablespace_name     IN    VARCHAR);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref8970"></a>Parameters</p>
<div id="ARPLS68139" class="tblhruleformal">
<p class="titleintable"><a id="sthref8971"></a><a id="sthref8972"></a>Table 135-12 TABLESPACE_FIX_SEGMENT_STATES Procedure Parameters</p>
<table class="cellalignment1226" title="TABLESPACE_FIX_SEGMENT_STATES Procedure Parameters" summary="This table describes Parameters used by the DBMS_SPACE_ADMIN.TABLESPACE_FIX_SEGMENT_STATES subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t16">Parameter Name</th>
<th class="cellalignment1227" id="r1c2-t16">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t16" headers="r1c1-t16">
<p><code>tablespace_name</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t16 r1c2-t16">
<p>Name of the tablespace whose segments must be fixed</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblhruleformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref8973"></a>Usage Notes</p>
<p>The tablespace must be kept online and read/write when this procedure is called.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref8974"></a>Examples</p>
<pre>
EXECUTE DBMS_SPACE_ADMIN.TABLESPACE_FIX_SEGMENT_STATES('TS1') 
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS68140" class="refsect2"><a id="i1003433"></a>
<hr />
<h3 class="refsect2"><a id="sthref8975"></a>TABLESPACE_MIGRATE_FROM_LOCAL Procedure</h3>
<p>This procedure migrates a locally managed tablespace to a dictionary-managed tablespace.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref8976"></a>Syntax</p>
<pre>
DBMS_SPACE_ADMIN.TABLESPACE_MIGRATE_FROM_LOCAL (
   tablespace_name         IN    VARCHAR2);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref8977"></a>Parameter</p>
<div id="ARPLS68141" class="tblformal">
<p class="titleintable"><a id="sthref8978"></a><a id="sthref8979"></a>Table 135-13 TABLESPACE_MIGRATE_FROM_LOCAL Procedure Parameter</p>
<table class="cellalignment1229" title="TABLESPACE_MIGRATE_FROM_LOCAL Procedure Parameter" summary="This table describes Parameters used by the DBMS_SPACE_ADMIN.TABLESPACE_MIGRATE_FROM_LOCAL subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t17">Parameter</th>
<th class="cellalignment1227" id="r1c2-t17">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t17" headers="r1c1-t17">
<p><code>tablespace_name</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t17 r1c2-t17">
<p>Name of tablespace</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref8980"></a>Usage Notes</p>
<p>The tablespace must be kept online and read/write during migration. Migration of temporary tablespaces and migration of <code>SYSTEM</code> tablespaces are not supported.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref8981"></a>Examples</p>
<pre>
EXECUTE DBMS_SPACE_ADMIN.TABLESPACE_MIGRATE_FROM_LOCAL('USERS'); 
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS68142" class="refsect2"><a id="i997300"></a>
<hr />
<h3 class="refsect2"><a id="sthref8982"></a>TABLESPACE_MIGRATE_TO_LOCAL Procedure</h3>
<p>This procedure migrates the tablespace from a dictionary-managed format to a locally managed format. Tablespaces migrated to locally managed format are user managed.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref8983"></a>Syntax</p>
<pre>
DBMS_SPACE_ADMIN.TABLESPACE_MIGRATE_TO_LOCAL (
   tablespace_name     IN     VARCHAR2,
   unit_size           IN     POSITIVE DEFAULT NULL,
   rfno                IN     POSITIVE DEFAULT NULL);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref8984"></a>Parameters</p>
<div id="ARPLS68143" class="tblhruleformal">
<p class="titleintable"><a id="sthref8985"></a><a id="sthref8986"></a>Table 135-14 TABLESPACE_MIGRATE_TO_LOCAL Procedure Parameters</p>
<table class="cellalignment1226" title="TABLESPACE_MIGRATE_TO_LOCAL Procedure Parameters" summary="This table describes Parameters used by the DBMS_SPACE_ADMIN.TABLESPACE_MIGRATE_TO_LOCAL subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t18">Parameter Name</th>
<th class="cellalignment1227" id="r1c2-t18">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t18" headers="r1c1-t18">
<p><code>tablespace_name</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t18 r1c2-t18">
<p>Name of the tablespace to be migrated</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t18" headers="r1c1-t18">
<p><code>unit_size</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t18 r1c2-t18">
<p>Bitmap unit size (which is the size of the smallest possible chunk of space that can be allocated) in the tablespace specified in number of blocks</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r4c1-t18" headers="r1c1-t18">
<p><code>rfno</code></p>
</td>
<td class="cellalignment1228" headers="r4c1-t18 r1c2-t18">
<p>Relative File Number of the file where the bitmap blocks are placed</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblhruleformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref8987"></a>Usage Notes</p>
<ul>
<li>
<p>Before you migrate the <code>SYSTEM</code> tablespace, migrate any dictionary-managed tablespaces that you want to use in read/write mode to locally managed. After the <code>SYSTEM</code> tablespace is migrated, you cannot change dictionary-managed tablespaces to read/write.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink ADMIN11393" href="../../server.112/e25494/tspaces.htm#ADMIN11393"><span class="italic">Oracle Database Administrator's Guide</span></a></div>
</li>
<li>
<p>The tablespace must be kept online and read/write during migration. Note that temporary tablespaces cannot be migrated.</p>
</li>
<li>
<p>Allocation Unit may be specified optionally. The default is calculated by the system based on the highest common divisor of all extents (used or free) for the tablespace. This number is further trimmed based on the <code>MINIMUM EXTENT</code> for the tablespace (5 if <code>MINIMUM EXTENT</code> is not specified). Thus, the calculated value will not be larger than the <code>MINIMUM EXTENT</code> for the tablespace. The last free extent in every file is ignored for GCD calculation. If you specify the unit size, then it must be a factor of the <code>unit_size</code> calculated by the system; otherwise an error message is returned.</p>
</li>
<li>
<p>The Relative File Number parameter is used to place the bitmaps in a desired file. If space is not found in the file, then an error is issued. The data file specified must be part of the tablespace being migrated. If the dataflow is not specified, then the system chooses a dataflow in which to place the initial bitmap blocks. If space is not found for the initial bitmaps, then an error is raised.</p>
</li>
</ul>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref8988"></a>Examples</p>
<p>To migrate a tablespace 'TS1' in 2KB blocksize with minimum extent size 1MB:</p>
<pre>
EXECUTE DBMS_SPACE_ADMIN.TABLESPACE_MIGRATE_TO_LOCAL('TS1', 512, 2);
</pre>
<p>The bitmaps are placed in file with relative file number 2.</p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS68144" class="refsect2"><a id="i1003443"></a>
<hr />
<h3 class="refsect2"><a id="sthref8989"></a>TABLESPACE_REBUILD_BITMAPS Procedure</h3>
<p>This procedure rebuilds the appropriate bitmaps. If no bitmap block is specified, then it rebuilds all bitmaps for the given tablespace.</p>
<p>The procedure cannot be used on the <code>SYSTEM</code> tablespace.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref8990"></a>Syntax</p>
<pre>
DBMS_SPACE_ADMIN.TABLESPACE_REBUILD_BITMAPS (
   tablespace_name         IN    VARCHAR2,
   bitmap_relative_file    IN    POSITIVE   DEFAULT NULL,
   bitmap_block            IN    POSITIVE   DEFAULT NULL);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref8991"></a>Parameters</p>
<div id="ARPLS68145" class="tblformal">
<p class="titleintable"><a id="sthref8992"></a><a id="sthref8993"></a>Table 135-15 TABLESPACE_REBUILD_BITMAPS Procedure Parameters</p>
<table class="cellalignment1229" title="TABLESPACE_REBUILD_BITMAPS Procedure Parameters" summary="This table describes Parameters used by the DBMS_SPACE_ADMIN.TABLESPACE_REBUILD_BITMAPS subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t20">Parameter</th>
<th class="cellalignment1227" id="r1c2-t20">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t20" headers="r1c1-t20">
<p><code>tablespace_name</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t20 r1c2-t20">
<p>Name of tablespace</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t20" headers="r1c1-t20">
<p><code>bitmap_relative_file</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t20 r1c2-t20">
<p>Relative file number of bitmap block to rebuild</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r4c1-t20" headers="r1c1-t20">
<p><code>bitmap_block</code></p>
</td>
<td class="cellalignment1228" headers="r4c1-t20 r1c2-t20">
<p>Block number of bitmap block to rebuild</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref8994"></a>Usage Notes</p>
<p>Only full rebuild is supported.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref8995"></a>Examples</p>
<p>The following example rebuilds bitmaps for all the files in the <code>USERS</code> tablespace.</p>
<pre>
EXECUTE DBMS_SPACE_ADMIN.TABLESPACE_REBUILD_BITMAPS('USERS'); 
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS68146" class="refsect2"><a id="i1003484"></a>
<hr />
<h3 class="refsect2"><a id="sthref8996"></a>TABLESPACE_REBUILD_QUOTAS Procedure</h3>
<p>This procedure rebuilds quotas for the given tablespace.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref8997"></a>Syntax</p>
<pre>
DBMS_SPACE_ADMIN.TABLESPACE_REBUILD_QUOTAS (
   tablespace_name         IN    VARCHAR2);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref8998"></a>Parameters</p>
<div id="ARPLS68147" class="tblformal">
<p class="titleintable"><a id="sthref8999"></a><a id="sthref9000"></a>Table 135-16 TABLESPACE_REBUILD_QUOTAS Procedure Parameters</p>
<table class="cellalignment1229" title="TABLESPACE_REBUILD_QUOTAS Procedure Parameters" summary="This table describes Parameters used by the DBMS_SPACE_ADMIN.TABLESPACE_REBUILD_QUOTAS subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t21">Parameter</th>
<th class="cellalignment1227" id="r1c2-t21">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t21" headers="r1c1-t21">
<p><code>tablespace_name</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t21 r1c2-t21">
<p>Name of tablespace</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref9001"></a>Examples</p>
<pre>
EXECUTE DBMS_SPACE_ADMIN.TABLESPACE_REBUILD_QUOTAS('USERS');
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS68148" class="refsect2"><a id="i997372"></a>
<hr />
<h3 class="refsect2"><a id="sthref9002"></a>TABLESPACE_RELOCATE_BITMAPS Procedure</h3>
<p>This procedure relocates the bitmaps to the destination specified.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref9003"></a>Syntax</p>
<pre>
DBMS_SPACE_ADMIN.TABLESPACE_RELOCATE_BITMAPS (
   tablespace_name    IN      VARCHAR2,
   filno              IN      POSITIVE,
   blkno              IN      POSITIVE);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref9004"></a>Parameters</p>
<div id="ARPLS68149" class="tblhruleformal">
<p class="titleintable"><a id="sthref9005"></a><a id="sthref9006"></a>Table 135-17 TABLESPACE_RELOCATE_BITMAPS Procedure Parameters</p>
<table class="cellalignment1226" title="TABLESPACE_RELOCATE_BITMAPS Procedure Parameters" summary="This table describes Parameters used by the DBMS_SPACE_ADMIN.TABLESPACE_RELOCATE_BITMAPS subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t22">Parameter Name</th>
<th class="cellalignment1227" id="r1c2-t22">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t22" headers="r1c1-t22">
<p><code>tablespace_name</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t22 r1c2-t22">
<p>Name of tablespace</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t22" headers="r1c1-t22">
<p><code>filno</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t22 r1c2-t22">
<p>Relative File Number of the destination file</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r4c1-t22" headers="r1c1-t22">
<p><code>blkno</code></p>
</td>
<td class="cellalignment1228" headers="r4c1-t22 r1c2-t22">
<p>Block Number of the destination range</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblhruleformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref9007"></a>Usage Notes</p>
<ul>
<li>
<p>Migration of a tablespace from dictionary-managed to locally managed format could result in the creation of <code>SPACE HEADER</code> segment that contains the bitmap blocks. The <code>SPACE</code> <code>HEADER</code> segment is treated as user data. If you explicitly resize a file at or below the space header segment, then an error is issued. Use the <code>TABLESPACE_RELOCATE_BITMAPS</code> command to move the control information to a different destination and then resize the file.</p>
</li>
<li>
<p>This procedure cannot be used on the <code>SYSTEM</code> tablespace.</p>
</li>
<li>
<p>The tablespace must be kept online and read/write during relocation of bitmaps. This can be done only on migrated locally managed tablespaces.</p>
</li>
</ul>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref9008"></a>Examples</p>
<pre>
EXECUTE  DBMS_SPACE_ADMIN.TABLESPACE_RELOCATE_BITMAPS('TS1', 3, 4);
</pre>
<p>Moves the bitmaps to file 3, block 4.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
The source and the destination addresses must not overlap. The destination block number is rounded down to the unit boundary. If there is user data in that location, then an error is raised.</div>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS68150" class="refsect2"><a id="i1003313"></a>
<hr />
<h3 class="refsect2"><a id="sthref9009"></a>TABLESPACE_VERIFY Procedure</h3>
<p>This procedure verifies that the bitmaps and extent maps for the segments in the tablespace are synchronized.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref9010"></a>Syntax</p>
<pre>
DBMS_SPACE_ADMIN.TABLESPACE_VERIFY (
   tablespace_name         IN    VARCHAR2,
   verify_option           IN    POSITIVE DEFAULT TABLESPACE_VERIFY_BITMAP);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref9011"></a>Parameters</p>
<div id="ARPLS68151" class="tblformal">
<p class="titleintable"><a id="sthref9012"></a><a id="sthref9013"></a>Table 135-18 TABLESPACE_VERIFY Procedure Parameters</p>
<table class="cellalignment1229" title="TABLESPACE_VERIFY Procedure Parameters" summary="This table describes Parameters used by the DBMS_SPACE_ADMIN.TABLESPACE_VERIFY subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t24">Parameter</th>
<th class="cellalignment1227" id="r1c2-t24">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t24" headers="r1c1-t24">
<p><code>tablespace_name</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t24 r1c2-t24">
<p>Name of tablespace</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t24" headers="r1c1-t24">
<p><code>verify_option</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t24 r1c2-t24">
<p>One option is supported: <code>TABLESPACE_VERIFY_BITMAP</code></p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref9014"></a>Examples</p>
<pre>
EXECUTE DBMS_SPACE_ADMIN.TABLESPACE_VERIFY('USERS'); 
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" --></div>
<!-- class="refsect1" --></div>
<!-- class="refentry" --></div>
<!-- class="chapter" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment1219">
<tr>
<td class="cellalignment1228">
<table class="cellalignment1224">
<tr>
<td class="cellalignment1223"><a href="d_space.htm"><img width="24" height="24" src="../../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment1223"><a href="d_spm.htm"><img width="24" height="24" src="../../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;1996, 2013,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment1231">
<table class="cellalignment1222">
<tr>
<td class="cellalignment1223"><a href="../../index.htm"><img width="24" height="24" src="../../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment1223"><a href="../../nav/portal_booklist.htm"><img width="24" height="24" src="../../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment1223"><a href="toc.htm"><img width="24" height="24" src="../../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment1223"><a href="index.htm"><img width="24" height="24" src="../../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment1223"><a href="../../nav/mindx.htm"><img width="24" height="24" src="../../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment1223"><a href="../../dcommon/html/feedback.htm"><img width="24" height="24" src="../../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>
</body>
</html>
