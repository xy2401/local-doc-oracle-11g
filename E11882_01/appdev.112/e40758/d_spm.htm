<!DOCTYPE html>
<html lang="en" >
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1">
<meta charset="utf-8">
<title>DBMS_SPM</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Version 5.1.2 Build 737" />
<meta name="dcterms.created" content="2013-07-19T18:55:30Z" />
<meta name="robots" content="all" />
<meta name="dcterms.title" content="Database PL/SQL Packages and Types Reference" />
<meta name="dcterms.identifier" content="E40758-03" />
<meta name="dcterms.isVersionOf" content="ARPLS" />
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;1996, 2013,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved." />
<link rel="Start" href="../../index.htm" title="Home" type="text/html" />
<link rel="Copyright" href="../../dcommon/html/cpyr.htm" title="Copyright" type="text/html" />

<script type="application/javascript"  src="../../dcommon/js/headfoot.js"></script>
<script type="application/javascript"  src="../../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html" />
<link rel="Index" href="index.htm" title="Index" type="text/html" />
<link rel="Prev" href="d_spadmn.htm" title="Previous" type="text/html" />
<link rel="Next" href="d_sql.htm" title="Next" type="text/html" />
<link rel="alternate" href="../e40758.pdf" title="PDF version" type="application/pdf" />
<link rel="schema.dcterms" href="http://purl.org/dc/terms/" />
<link rel="stylesheet" href="../../dcommon/css/fusiondoc.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/header.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/footer.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/fonts.css">
<link rel="stylesheet" href="../../dcommon/css/foundation.css">
<link rel="stylesheet" href="../../dcommon/css/codemirror.css">
<link rel="stylesheet" type="text/css" title="Default" href="../../nav/css/html5.css">
<link rel="stylesheet" href="../../dcommon/css/respond-480-tablet.css">
<link rel="stylesheet" href="../../dcommon/css/respond-768-laptop.css">
<link rel="stylesheet" href="../../dcommon/css/respond-1140-deskop.css">
<script type="application/javascript" src="../../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">140/265</span> <!-- End Header -->
<div id="ARPLS150" class="chapter"><a id="CACHJJJA"></a>
<h1 class="chapter"><span class="secnum">136</span> DBMS_SPM</h1>
<p>The <a id="sthref9015"></a><code>DBMS_SPM</code> package supports the SQL plan management feature by providing an interface for the DBA or other user to perform controlled manipulation of plan history and SQL plan baselines maintained for various SQL statements.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
For more information about <a class="olink PFGRF007" href="../../server.112/e41573/optplanmgmt.htm#PFGRF007">"Using SQL Plan Management"</a> in the <span class="italic">Oracle Database Performance Tuning Guide</span></div>
<p>This chapter contains the following topics:</p>
<ul>
<li>
<p><a href="#CACBGEII">Using DBMS_SPM</a></p>
<ul>
<li>
<p>Overview</p>
</li>
<li>
<p>Security Model</p>
</li>
<li>
<p>Constants</p>
</li>
<li>
<p>Examples</p>
</li>
</ul>
</li>
<li>
<p><a href="#CACEEADG">Data Structures</a></p>
</li>
<li>
<p><a href="#CACCCGCB">Summary of DBMS_SPM Subprograms</a></p>
</li>
</ul>
<div class="refentry"><a id="CACBGEII"></a>
<hr />
<div id="ARPLS68152" class="refsect1"><!-- infolevel="all" infotype="General" -->
<h2 class="refsect1">Using DBMS_SPM</h2>
<ul>
<li>
<p><a href="#CACHICJD">Overview</a></p>
</li>
<li>
<p><a href="#CACDGJFE">Security Model</a></p>
</li>
<li>
<p><a href="#CACFDHHJ">Constants</a></p>
</li>
<li>
<p><a href="#CACCHBHB">Examples</a></p>
</li>
</ul>
<div id="ARPLS72671" class="refsect2"><a id="CACHICJD"></a>
<hr />
<h3 class="refsect2">Overview</h3>
<p>The <code>DBMS_SPM</code> package allows the user to manage SQL execution plans using SQL plan management. SQL plan management prevents performance regressions resulting from sudden changes to the execution plan of a SQL statement by recording and evaluating the execution plans of SQL statements over time, and builds SQL plan baselines composed of a set of existing plans known to be efficient. The SQL plan baselines are then used to preserve performance of corresponding SQL statements, regardless of changes occurring in the system. Common usage scenarios where SQL plan management can improve or preserve SQL performance include:</p>
<ul>
<li>
<p>A database upgrade that installs a new optimizer version usually results in plan changes for a small percentage of SQL statements, with most of the plan changes resulting in either no performance change or improvement. However, certain plan changes may cause performance regressions. The use of SQL plan baselines significantly minimizes potential performance regressions resulting from a database upgrade.</p>
</li>
<li>
<p>Ongoing system and data changes can impact plans for some SQL statements, potentially causing performance regressions. The use of SQL plan baselines helps to minimize performance regressions and stabilize SQL performance.</p>
</li>
<li>
<p>Deployment of new application modules means introducing new SQL statements into the system. The application software may use appropriate SQL execution plans developed under a standard test configuration for the new SQL statements. If the system production configuration differs significantly from the test configuration, SQL plan baselines can be evolved over time to produce better performance.</p>
</li>
</ul>
</div>
<!-- class="refsect2" -->
<div id="ARPLS68153" class="refsect2"><a id="CACDGJFE"></a>
<hr />
<h3 class="refsect2">Security Model</h3>
<p>The package is owned by <code>SYS</code>. The <code>EXECUTE</code> package privilege is required to execute its procedures. Any user granted the <code>ADMINISTER</code> <code>SQL</code> <code>MANAGEMENT</code> <code>OBJECT</code> privilege is able to execute the <code>DBMS_SPM</code> package.</p>
</div>
<!-- class="refsect2" -->
<div id="ARPLS72667" class="refsect2"><a id="CACFDHHJ"></a>
<hr />
<h3 class="refsect2">Constants</h3>
<p>The <code>DBMS_SPM</code> package uses the constants shown in <a href="#CACDCCDI">Table 136-1, "DBMS_SPM Constants"</a>. These constants are defined as standard input for the <code>time_limit</code> parameter of the <a href="#CACEBBEI">EVOLVE_SQL_PLAN_BASELINE Function</a>.</p>
<div id="ARPLS72668" class="tblformal">
<p class="titleintable"><a id="sthref9016"></a><a id="CACDCCDI"></a>Table 136-1 DBMS_SPM Constants</p>
<table class="cellalignment1229" title="DBMS_SPM Constants" summary="This table describes DBMS_AM Constants - Chunk Status Value" dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t3">Constant</th>
<th class="cellalignment1227" id="r1c2-t3">Type</th>
<th class="cellalignment1227" id="r1c3-t3">Value</th>
<th class="cellalignment1227" id="r1c4-t3">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t3" headers="r1c1-t3">
<p><code>AUTO_LIMIT</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t3 r1c2-t3">
<p><code>INTEGER</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t3 r1c3-t3">
<p><code>2147483647</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t3 r1c4-t3">
<p>Oracle determines the appropriate time spent by the <a href="#CACEBBEI">EVOLVE_SQL_PLAN_BASELINE Function</a>.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t3" headers="r1c1-t3">
<p><code>NO_LIMIT</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t3 r1c2-t3">
<p><code>INTEGER</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t3 r1c3-t3">
<p><code>2147483647 -1</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t3 r1c4-t3">
<p>There is no limit to the time spent by the <a href="#CACEBBEI">EVOLVE_SQL_PLAN_BASELINE Function</a>.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsect2" -->
<div id="ARPLS72970" class="refsect2"><a id="CACCHBHB"></a>
<hr />
<h3 class="refsect2">Examples</h3>
<p>Detailed examples are located under the following topics:</p>
<ul>
<li>
<p><a class="olink PFGRF3616" href="../../server.112/e41573/optplanmgmt.htm#PFGRF3616">Migrating Stored Outlines to SQL Plan Baselines</a></p>
</li>
<li>
<p><a class="olink PFGRF95139" href="../../server.112/e41573/optplanmgmt.htm#PFGRF95139">Migrating Outlines to Utilize SQL Plan Management Features</a></p>
</li>
<li>
<p><a class="olink PFGRF95140" href="../../server.112/e41573/optplanmgmt.htm#PFGRF95140">Migrating Outlines to Preserve Stored Outline Behavior</a></p>
</li>
<li>
<p><a class="olink PFGRF95141" href="../../server.112/e41573/optplanmgmt.htm#PFGRF95141">Performing Follow-Up Tasks After Stored Outline Migratio</a>n</p>
</li>
</ul>
</div>
<!-- class="refsect2" --></div>
<!-- class="refsect1" -->
<a id="CACEEADG"></a>
<hr />
<div id="ARPLS72669" class="refsect1"><!-- infolevel="all" infotype="General" -->
<h2 class="refsect1">Data Structures</h2>
<p>The <code>DBMS_SPM</code> package defines a <code>TABLE</code> type.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref9017"></a>Table Types</p>
<ul>
<li>
<p><a href="#CACCHEDI">NAMELIST Table Type</a></p>
</li>
</ul>
</div>
<!-- class="refsubsect" -->
<div id="ARPLS72670" class="refsect2"><a id="CACCHEDI"></a>
<hr />
<h3 class="refsect2"><a id="sthref9018"></a>NAMELIST Table Type</h3>
<p>This type allows for a list of names as an input parameter.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref9019"></a>Syntax</p>
<pre>
TYPE  name_list  IS TABLE OF VARCHAR2(30);
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" --></div>
<!-- class="refsect1" --></div>
<!-- class="refentry" -->
<div class="refentry"><a id="CACCCGCB"></a>
<hr />
<div id="ARPLS68154" class="refsect1"><!-- infolevel="all" infotype="General" -->
<h2 class="refsect1">Summary of DBMS_SPM Subprograms</h2>
<p>This table list the package subprograms in alphabetical order.</p>
<div id="ARPLS68155" class="tblformal">
<p class="titleintable"><a id="sthref9020"></a><a id="sthref9021"></a>Table 136-2 DBMS_SPM Package Subprograms</p>
<table class="cellalignment1229" title="DBMS_SPM Package Subprograms" summary="This table lists the DBMS_WORKLOAD_CAPTURE subprograms in alphabetical order and briefly describes them." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t4">Subprogram</th>
<th class="cellalignment1227" id="r1c2-t4">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t4" headers="r1c1-t4">
<p><a href="#CACJJFDB">ALTER_SQL_PLAN_BASELINE Function</a></p>
</td>
<td class="cellalignment1228" headers="r2c1-t4 r1c2-t4">
<p>Changes an attribute of a single plan or all plans associated with a SQL statement using the attribute name/value format</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t4" headers="r1c1-t4">
<p><a href="#CACHAGGA">CONFIGURE Procedure</a></p>
</td>
<td class="cellalignment1228" headers="r3c1-t4 r1c2-t4">
<p>Sets configuration options for SQL management base, in parameter/value format</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r4c1-t4" headers="r1c1-t4">
<p><a href="#CACBHIHE">CREATE_STGTAB_BASELINE Procedure</a></p>
</td>
<td class="cellalignment1228" headers="r4c1-t4 r1c2-t4">
<p>Creates a staging table that used for transporting SQL plan baselines from one system to another</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r5c1-t4" headers="r1c1-t4">
<p><a href="#CACGAHJF">DROP_SQL_PLAN_BASELINE Function</a></p>
</td>
<td class="cellalignment1228" headers="r5c1-t4 r1c2-t4">
<p>drops a single plan, or all plans associated with a SQL statement</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r6c1-t4" headers="r1c1-t4">
<p><a href="#CACEBBEI">EVOLVE_SQL_PLAN_BASELINE Function</a></p>
</td>
<td class="cellalignment1228" headers="r6c1-t4 r1c2-t4">
<p>Evolves SQL plan baselines associated with one or more SQL statements</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r7c1-t4" headers="r1c1-t4">
<p><a href="#CACBFHHJ">LOAD_PLANS_FROM_CURSOR_CACHE Functions</a></p>
</td>
<td class="cellalignment1228" headers="r7c1-t4 r1c2-t4">
<p>Loads one or more plans present in the cursor cache for a SQL statement</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r8c1-t4" headers="r1c1-t4">
<p><a href="#CACBCAGD">LOAD_PLANS_FROM_SQLSET Function</a></p>
</td>
<td class="cellalignment1228" headers="r8c1-t4 r1c2-t4">
<p>Loads plans stored in a SQL tuning set (STS) into SQL plan baselines</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r9c1-t4" headers="r1c1-t4">
<p><a href="#CACCGDBG">MIGRATE_STORED_OUTLINE Functions</a></p>
</td>
<td class="cellalignment1228" headers="r9c1-t4 r1c2-t4">
<p>Migrates existing stored outlines to SQL plan baselines</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r10c1-t4" headers="r1c1-t4">
<p><a href="#CACEGFAI">PACK_STGTAB_BASELINE Function</a></p>
</td>
<td class="cellalignment1228" headers="r10c1-t4 r1c2-t4">
<p>Packs (exports) SQL plan baselines from SQL management base into a staging table</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r11c1-t4" headers="r1c1-t4">
<p><a href="#CACHBGBD">UNPACK_STGTAB_BASELINE Function</a></p>
</td>
<td class="cellalignment1228" headers="r11c1-t4 r1c2-t4">
<p>Unpacks (imports) SQL plan baselines from a staging table into SQL management base</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<div id="ARPLS68156" class="refsect2"><a id="CACJJFDB"></a>
<hr />
<h3 class="refsect2"><a id="sthref9022"></a>ALTER_SQL_PLAN_BASELINE Function</h3>
<p>This function changes an attribute of a single plan or all plans associated with a SQL statement using the attribute name/value format.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref9023"></a>Syntax</p>
<pre>
DBMS_SPM.ALTER_SQL_PLAN_BASELINE (
   sql_handle        IN VARCHAR2 := NULL,
   plan_name         IN VARCHAR2 := NULL,
   attribute_name    IN VARCHAR2,
   attribute_value   IN VARCHAR2)
 RETURN PLS_INTEGER;
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref9024"></a>Parameters</p>
<div id="ARPLS68157" class="tblformal">
<p class="titleintable"><a id="sthref9025"></a><a id="sthref9026"></a>Table 136-3 ALTER_SQL_PLAN_BASELINE Function Parameters</p>
<table class="cellalignment1229" title="ALTER_SQL_PLAN_BASELINE Function Parameters" summary="This table describes the parameters of DBMS_SPM.ALTER_SQL_PLAN_BASELINE" dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t5">Parameter</th>
<th class="cellalignment1227" id="r1c2-t5">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t5" headers="r1c1-t5">
<p><code>sql_handle</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t5 r1c2-t5">
<p>SQL statement handle. It identifies plans associated with a SQL statement for an attribute change. If <code>NULL</code> then <code>plan_name</code> must be specified.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t5" headers="r1c1-t5">
<p><code>plan_name</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t5 r1c2-t5">
<p>Plan name. It identifies a specific plan. Default <code>NULL</code> means set the attribute for all plans associated with a SQL statement identified by <code>sql_handle</code>. If <code>NULL</code> then <code>sql_handle</code> must be specified.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r4c1-t5" headers="r1c1-t5">
<p><code>attribute_name</code></p>
</td>
<td class="cellalignment1228" headers="r4c1-t5 r1c2-t5">
<p>Name of plan attribute to set (see table below).</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r5c1-t5" headers="r1c1-t5">
<p><code>attribute_value</code></p>
</td>
<td class="cellalignment1228" headers="r5c1-t5 r1c2-t5">
<p>Value of plan attribute to use (see table below)</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<div id="ARPLS68158" class="tblformal">
<p class="titleintable"><a id="sthref9027"></a><a id="sthref9028"></a>Table 136-4 Names &amp; Values for ALTER_SQL_PLAN_BASELINE Function Parameters</p>
<table class="cellalignment1229" title="Names &amp; Values for ALTER_SQL_PLAN_BASELINE Function Parameters" summary="Names &amp; Values for CONFIGURE Procedure Parameters" dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t6">Name</th>
<th class="cellalignment1227" id="r1c2-t6">Description</th>
<th class="cellalignment1227" id="r1c3-t6">Possible Values</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t6" headers="r1c1-t6">
<p><code>enabled</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t6 r1c2-t6">
<p>'<code>YES</code>' means the plan is available for use by the optimizer. It may or may not be used depending on <code>accepted</code> status.</p>
</td>
<td class="cellalignment1228" headers="r2c1-t6 r1c3-t6">
<p>'<code>YES</code>' or '<code>NO</code>'</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t6" headers="r1c1-t6">
<p><code>fixed</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t6 r1c2-t6">
<p>'<code>YES</code>' means the SQL plan baseline is not evolved over time. A fixed plan takes precedence over a non-fixed plan.</p>
</td>
<td class="cellalignment1228" headers="r3c1-t6 r1c3-t6">
<p>'<code>YES</code>' or '<code>NO</code>'</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r4c1-t6" headers="r1c1-t6">
<p><code>autopurge</code></p>
</td>
<td class="cellalignment1228" headers="r4c1-t6 r1c2-t6">
<p>'<code>YES</code>' means the plan is purged if it is not used for a time period. '<code>NO</code>' means it is never purged.</p>
</td>
<td class="cellalignment1228" headers="r4c1-t6 r1c3-t6">
<p>'<code>YES</code>' or '<code>NO</code>'</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r5c1-t6" headers="r1c1-t6">
<p><code>plan_name</code></p>
</td>
<td class="cellalignment1228" headers="r5c1-t6 r1c2-t6">
<p>Name of the plan</p>
</td>
<td class="cellalignment1228" headers="r5c1-t6 r1c3-t6">
<p>String of up to 30-characters</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r6c1-t6" headers="r1c1-t6">
<p><code>description</code></p>
</td>
<td class="cellalignment1228" headers="r6c1-t6 r1c2-t6">
<p>Plan description.</p>
</td>
<td class="cellalignment1228" headers="r6c1-t6 r1c3-t6">
<p>String of up to 500-characters</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref9029"></a>Return Values</p>
<p>The number of plans altered.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref9030"></a>Usage Notes</p>
<p>When a single plan is specified, one of various statuses, or plan name, or description can be altered. When all plans for a SQL statement are specified, one of various statuses, or description can be altered. This function can be called numerous times, each time setting a different plan attribute of same plan(s) or different plan(s).</p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS68159" class="refsect2"><a id="CACHAGGA"></a>
<hr />
<h3 class="refsect2"><a id="sthref9031"></a>CONFIGURE Procedure</h3>
<p>This procedure sets configuration options for SQL management base, in parameter/value format. This function can be called numerous times, each time setting a different configuration option.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref9032"></a>Syntax</p>
<pre>
DBMS_SPM.CONFIGURE (
   parameter_name    IN VARCHAR2,
   parameter_value   IN NUMBER);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref9033"></a>Parameters</p>
<div id="ARPLS68160" class="tblformal">
<p class="titleintable"><a id="sthref9034"></a><a id="sthref9035"></a>Table 136-5 CONFIGURE Procedure Parameters</p>
<table class="cellalignment1229" title="CONFIGURE Procedure Parameters" summary="This table describes the parameters of DBMS_SPM.CONFIGURE" dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t7">Parameter</th>
<th class="cellalignment1227" id="r1c2-t7">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t7" headers="r1c1-t7">
<p><code>parameter_name</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t7 r1c2-t7">
<p>Name of parameter to set (see table below)</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t7" headers="r1c1-t7">
<p><code>parameter_value</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t7 r1c2-t7">
<p>Value of parameter to use (see table below)</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<div id="ARPLS68161" class="tblformal">
<p class="titleintable"><a id="sthref9036"></a><a id="sthref9037"></a>Table 136-6 Names &amp; Values for CONFIGURE Procedure Parameters</p>
<table class="cellalignment1229" title="Names &amp; Values for CONFIGURE Procedure Parameters" summary="Names &amp; Values for CONFIGURE Procedure Parameters" dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t8">Name</th>
<th class="cellalignment1227" id="r1c2-t8">Description</th>
<th class="cellalignment1227" id="r1c3-t8">Possible Values</th>
<th class="cellalignment1227" id="r1c4-t8">Default Value</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t8" headers="r1c1-t8">
<p><code>space_budget_percent</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t8 r1c2-t8">
<p>Maximum percent of <code>SYSAUX</code> space that can be used for SQL management base</p>
</td>
<td class="cellalignment1228" headers="r2c1-t8 r1c3-t8">
<p>1,2, &hellip;, 50</p>
</td>
<td class="cellalignment1228" headers="r2c1-t8 r1c4-t8">
<p>10</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t8" headers="r1c1-t8">
<p><code>plan_retention_weeks</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t8 r1c2-t8">
<p>Number of weeks to retain unused plans before they are purged</p>
</td>
<td class="cellalignment1228" headers="r3c1-t8 r1c3-t8">
<p>5,6, &hellip;, 523</p>
</td>
<td class="cellalignment1228" headers="r3c1-t8 r1c4-t8">
<p>53</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref9038"></a>Usage Notes</p>
<ul>
<li>
<p>The default space budget for SQL management base is no more than ten percent of the size of <code>SYSAUX</code> tablespace. The space budget can be set to a maximum of 50%. The default unused plan retention period is one year and one week, which means a plan will be automatically purged if it has not been used for more than a year. The retention period can be set to a maximum of 523 weeks (i.e. a little over 10 years).</p>
</li>
<li>
<p>When the space occupied by SQL management base exceeds the defined space budget limit, a weekly database alert is generated.</p>
</li>
</ul>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS68162" class="refsect2"><a id="CACBHIHE"></a>
<hr />
<h3 class="refsect2"><a id="sthref9039"></a>CREATE_STGTAB_BASELINE Procedure</h3>
<p>This procedure creates a staging table used for transporting SQL plan baselines from one system to another.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref9040"></a>Syntax</p>
<pre>
DBMS_SPM.CREATE_STGTAB_BASELINE (
   table_name        IN VARCHAR2,
   table_owner       IN VARCHAR2 := NULL,
   tablespace_name   IN VARCHAR2 := NULL);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref9041"></a>Parameters</p>
<div id="ARPLS68163" class="tblformal">
<p class="titleintable"><a id="sthref9042"></a><a id="sthref9043"></a>Table 136-7 CREATE_STGTAB_BASELINE Procedure Parameters</p>
<table class="cellalignment1229" title="CREATE_STGTAB_BASELINE Procedure Parameters" summary="This table describes the parameters of DBMS_SPM.CREATE_STGTAB_BASELINE" dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t9">Parameter</th>
<th class="cellalignment1227" id="r1c2-t9">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t9" headers="r1c1-t9">
<p><code>table_name</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t9 r1c2-t9">
<p>Name of staging table to create for the purpose of packing and unpacking SQL plan baselines</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t9" headers="r1c1-t9">
<p><code>table_owner</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t9 r1c2-t9">
<p>Name of owner of the staging table. Default <code>NULL</code> means current schema is the table owner.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r4c1-t9" headers="r1c1-t9">
<p><code>tablespace_name</code></p>
</td>
<td class="cellalignment1228" headers="r4c1-t9 r1c2-t9">
<p>Name of tablespace. Default NULL means create staging table in the default tablespace.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref9044"></a>Usage Notes</p>
<p>The creation of staging table is the first step. To migrate SQL plan baselines from one system to another, the user/DBA has to perform a series of steps as follows:</p>
<ol>
<li>
<p>Create a staging table in the source system</p>
</li>
<li>
<p>Select SQL plan baselines in the source system and pack them into the staging table</p>
</li>
<li>
<p>Export staging table into a flat file using Oracle EXP utility or Data Pump</p>
</li>
<li>
<p>Transfer flat file to the target system</p>
</li>
<li>
<p>Import staging table from the flat file using Oracle IMP utility or Data Pump</p>
</li>
<li>
<p>Select SQL plan baselines from the staging table and unpack them into the target system</p>
</li>
</ol>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS68164" class="refsect2"><a id="CACGAHJF"></a>
<hr />
<h3 class="refsect2"><a id="sthref9045"></a>DROP_SQL_PLAN_BASELINE Function</h3>
<p>This function drops a single plan, or all plans associated with a SQL statement.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref9046"></a>Syntax</p>
<pre>
DBMS_SPM.DROP_SQL_PLAN_BASELINE (
   sql_handle     IN VARCHAR2 := NULL,
   plan_name      IN VARCHAR2 := NULL)
RETURN PLS_INTEGER;
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref9047"></a>Parameters</p>
<div id="ARPLS68165" class="tblformal">
<p class="titleintable"><a id="sthref9048"></a><a id="sthref9049"></a>Table 136-8 DROP_SQL_PLAN_BASELINE Function Parameters</p>
<table class="cellalignment1229" title="DROP_SQL_PLAN_BASELINE Function Parameters" summary="This table describes the parameters of DBMS_SPM.DROP_SQL_PLAN_BASELINE" dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t10">Parameter</th>
<th class="cellalignment1227" id="r1c2-t10">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t10" headers="r1c1-t10">
<p><code>sql_handle</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t10 r1c2-t10">
<p>SQL statement handle. It identifies plans associated with a SQL statement that are to be dropped. If <code>NULL</code> then <code>plan_name</code> must be specified.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t10" headers="r1c1-t10">
<p><code>plan_name</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t10 r1c2-t10">
<p>Plan name. It identifies a specific plan. Default <code>NULL</code> means to drop all plans associated with the SQL statement identified by <code>sql_handle</code>.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref9050"></a>Return Values</p>
<p>The number of plans dropped</p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS68166" class="refsect2"><a id="CACEBBEI"></a>
<hr />
<h3 class="refsect2"><a id="sthref9051"></a>EVOLVE_SQL_PLAN_BASELINE Function</h3>
<p>This function evolves SQL plan baselines associated with one or more SQL statements. A SQL plan baseline is evolved when one or more of its non-accepted plans is changed to an accepted plan or plans. If interrogated by the user (parameter <code>verify</code> = '<code>YES</code>'), the execution performance of each non-accepted plan is compared against the performance of a plan chosen from the associated SQL plan baseline. If the non-accepted plan performance is found to be better than SQL plan baseline performance, the non-accepted plan is changed to an accepted plan provided such action is permitted by the user (parameter <code>commit</code> = 'YES').</p>
<p>The second form of the function employs a plan list format.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref9052"></a>Syntax</p>
<pre>
DBMS_SPM.EVOLVE_SQL_PLAN_BASELINE (
   sql_handle   IN VARCHAR2 := NULL,
   plan_name    IN VARCHAR2 := NULL,
   time_limit   IN INTEGER  := DBMS_SPM.AUTO_LIMIT,
   verify       IN VARCHAR2 := 'YES',
   commit       IN VARCHAR2 := 'YES')
  RETURN CLOB;

DBMS_SPM.EVOLVE_SQL_PLAN_BASELINE (
   plan_list    IN DBMS_SPM.NAME_LIST,
   time_limit   IN INTEGER  := DBMS_SPM.AUTO_LIMIT,
   verify       IN VARCHAR2 := 'YES',
   commit       IN VARCHAR2 := 'YES')
  RETURN CLOB;
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref9053"></a>Parameters</p>
<div id="ARPLS68167" class="tblformal">
<p class="titleintable"><a id="sthref9054"></a><a id="sthref9055"></a>Table 136-9 EVOLVE_SQL_PLAN_BASELINE Function Parameters</p>
<table class="cellalignment1229" title="EVOLVE_SQL_PLAN_BASELINE Function Parameters" summary="This table describes the parameters of DBMS_SPM.EVOLVE_SQL_PLAN_BASELINE." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t11">Parameter</th>
<th class="cellalignment1227" id="r1c2-t11">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t11" headers="r1c1-t11">
<p><code>sql_handle</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t11 r1c2-t11">
<p>SQL statement identifier. Unless <code>plan_name</code> is specified, <code>NULL</code> means to consider all statements with non-accepted plans in their SQL plan baselines.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t11" headers="r1c1-t11">
<p><code>plan_name</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t11 r1c2-t11">
<p>Plan identifier. Default <code>NULL</code> means to consider all non- accepted plans in the SQL plan baseline of either the identified SQL statement or all SQL statements if <code>sql_handle</code> is <code>NULL</code>.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r4c1-t11" headers="r1c1-t11">
<p><code>plan_list</code></p>
</td>
<td class="cellalignment1228" headers="r4c1-t11 r1c2-t11">
<p>A list of plan names. Each plan in the list can belong to same or different SQL statement.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r5c1-t11" headers="r1c1-t11">
<p><code>time_limit</code></p>
</td>
<td class="cellalignment1228" headers="r5c1-t11 r1c2-t11">
<p>Time limit in number of minutes. This applies only if <code>verify</code> = '<code>YES</code>'. The time limit is global and it is used as follows: The time limit for first non-accepted plan verification is set equal to the input value; the time limit for second non-accepted plan verification is set equal to (input value - time spent in first plan verification); and so on.</p>
<ul>
<li>
<p><code>DBMS_SPM</code>.<code>AUTO_LIMIT</code> (Default) lets the system choose an appropriate time limit based on the number of plan verifications required to be done.</p>
</li>
<li>
<p><code>DBMS_SPM</code>.<code>NO_LIMIT</code> means there is no time limit.</p>
</li>
<li>
<p>A positive integer value represents a user specified time limit.</p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r6c1-t11" headers="r1c1-t11">
<p><code>verify</code></p>
</td>
<td class="cellalignment1228" headers="r6c1-t11 r1c2-t11">
<p>Specifies whether to execute the plans and compare the performance before changing non-accepted plans into accepted plans. A performance verification involves executing a non-accepted plan and a plan chosen from corresponding SQL plan baseline and comparing their performance statistics. If non-accepted plan shows performance improvement, it is changed to an accepted plan.</p>
<ul>
<li>
<p>'<code>YES</code>' (Default) - verifies that a non-accepted plan gives better performance before changing it to an accepted plan</p>
</li>
<li>
<p>'<code>NO</code>' - directs not to execute plans but only to change non-accepted plans into accepted plans</p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r7c1-t11" headers="r1c1-t11">
<p><code>commit</code></p>
</td>
<td class="cellalignment1228" headers="r7c1-t11 r1c2-t11">
<p>Specifies whether to update the <code>ACCEPTED</code> status of non-accepted plans from '<code>NO</code>' to '<code>YES</code>'.</p>
<ul>
<li>
<p>'<code>YES</code>' (Default) - perform updates of qualifying non-accepted plans and generate a report that shows the updates and the result of performance verification when verify = '<code>YES</code>'.</p>
</li>
<li>
<p>'<code>NO</code>' - generate a report without any updates. Note that <code>commit</code> = '<code>NO</code>' together with <code>verify</code> = '<code>NO</code>' represents a no-op.</p>
</li>
</ul>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref9056"></a>Return Values</p>
<p>A <code>CLOB</code> containing a formatted text report showing non-accepted plans in sequence, each with a possible change of its <code>ACCEPTED</code> status, and if verify = '<code>YES</code>' the result of their performance verification.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref9057"></a>Usage Notes</p>
<p>Invoking this subprogram requires the <code>ADMINISTER</code> <code>SQL</code> <code>MANAGEMENT</code> <code>OBJECT</code> privilege.</p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS68168" class="refsect2"><a id="CACBFHHJ"></a>
<hr />
<h3 class="refsect2"><a id="sthref9058"></a>LOAD_PLANS_FROM_CURSOR_CACHE Functions</h3>
<p>This function loads one or more plans present in the cursor cache for a SQL statement, or a set of SQL statements. It has four overloads: using SQL statement text, using SQL handle, using SQL ID, or using attribute_name and attribute_value pair.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref9059"></a>Syntax</p>
<pre>
DBMS_SPM.LOAD_PLANS_FROM_CURSOR_CACHE (
   sql_id            IN  VARCHAR2,
   plan_hash_value   IN  NUMBER   := NULL,
   sql_text          IN  CLOB,
   fixed             IN  VARCHAR2 := 'NO',
   enabled           IN  VARCHAR2 := 'YES')
 RETURN PLS_INTEGER;

DBMS_SPM.LOAD_PLANS_FROM_CURSOR_CACHE (
   sql_id            IN  VARCHAR2,
   plan_hash_value   IN  NUMBER   := NULL,
   sql_handle        IN  VARCHAR2,
   fixed             IN  VARCHAR2 := 'NO',
   enabled           IN  VARCHAR2 := 'YES')
 RETURN PLS_INTEGER;

DBMS_SPM.LOAD_PLANS_FROM_CURSOR_CACHE (
   sql_id            IN  VARCHAR2,
   plan_hash_value   IN  NUMBER   := NULL,
   fixed             IN  VARCHAR2 := 'NO',
   enabled           IN  VARCHAR2 := 'YES')
 RETURN PLS_INTEGER;

DBMS_SPM.LOAD_PLANS_FROM_CURSOR_CACHE (
   attribute_name   IN VARCHAR2,
   attribute_value  IN VARCHAR2,
   fixed            IN VARCHAR2 := 'NO',
   enabled          IN VARCHAR2 := 'YES')
  RETURN PLS_INTEGER;
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref9060"></a>Parameters</p>
<div id="ARPLS68169" class="tblformal">
<p class="titleintable"><a id="sthref9061"></a><a id="sthref9062"></a>Table 136-10 LOAD_PLANS_FROM_CURSOR_CACHE Function Parameters</p>
<table class="cellalignment1229" title="LOAD_PLANS_FROM_CURSOR_CACHE Function Parameters" summary="This table describes the parameters of DBMS_SPM.LOAD_PLANS_FROM_CURSOR_CACHE" dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t12">Parameter</th>
<th class="cellalignment1227" id="r1c2-t12">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t12" headers="r1c1-t12">
<p><code>sql_id</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t12 r1c2-t12">
<p>SQL statement identifier. Identifies a SQL statement in the cursor cache. Note: In the third overload the text of identified SQL statement is extracted from cursor cache and is used to identify the SQL plan baseline into which the plan(s) are loaded. If the SQL plan baseline doesn't exist it is created.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t12" headers="r1c1-t12">
<p><code>plan_hash_value</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t12 r1c2-t12">
<p>Plan identifier. Default <code>NULL</code> means capture all plans present in the cursor cache for the SQL statement identified by <code>SQL_ID</code>.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r4c1-t12" headers="r1c1-t12">
<p><code>sql_text</code></p>
</td>
<td class="cellalignment1228" headers="r4c1-t12 r1c2-t12">
<p>SQL text to use in identifying the SQL plan baseline into which the plans are loaded. If the SQL plan baseline does not exist, it is created. The use of text is crucial when the user tunes a SQL statement by adding hints to its text and then wants to load the resulting plan(s) into the SQL plan baseline of the original SQL statement.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r5c1-t12" headers="r1c1-t12">
<p><code>sql_handle</code></p>
</td>
<td class="cellalignment1228" headers="r5c1-t12 r1c2-t12">
<p>SQL handle to use in identifying the SQL plan baseline into which the plans are loaded. The <code>sql_handle</code> must denote an existing SQL plan baseline. The use of handle is crucial when the user tunes a SQL statement by adding hints to its text and then wants to load the resulting plan(s) into the SQL plan baseline of the original SQL statement.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r6c1-t12" headers="r1c1-t12">
<p><code>fixed</code></p>
</td>
<td class="cellalignment1228" headers="r6c1-t12 r1c2-t12">
<p>Default <code>'NO'</code> means the loaded plans are used as non-fixed plans. Value <code>'YES'</code> means the loaded plans are used as fixed plans and the SQL plan baseline will not be evolved over time.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r7c1-t12" headers="r1c1-t12">
<p><code>attribute_name</code></p>
</td>
<td class="cellalignment1228" headers="r7c1-t12 r1c2-t12">
<p>One of possible attribute names:</p>
<ul>
<li>
<p><code>SQL_TEXT</code>''</p>
</li>
<li>
<p>'<code>PARSING_SCHEMA_NAME</code>'</p>
</li>
<li>
<p>'<code>MODULE</code>'</p>
</li>
<li>
<p>'<code>ACTION'</code></p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r8c1-t12" headers="r1c1-t12">
<p><code>attribute_value</code></p>
</td>
<td class="cellalignment1228" headers="r8c1-t12 r1c2-t12">
<p>Attribute value is used as a search pattern of <code>LIKE</code> predicate if attribute name is <code>'SQL_TEXT'</code>. Otherwise, it is used as an equality search value. (for example, for specifying <code>attribute_name</code> =&gt; <code>'SQL_TEXT'</code>, and <code>attribute_value</code> =&gt; <code>'% HR-123 %'</code> means applying <code>SQL_TEXT</code> <code>LIKE</code> <code>'%</code> <code>HR</code>-<code>123</code> <code>%'</code> as a selection filter. Similarly, specifying <code>attribute_name</code> =&gt; <code>'MODULE'</code>, and <code>attribute_value</code> =&gt; <code>'HR'</code> means applying <code>'MODULE</code> = '<code>HR'</code> as a plan selection filter). The attribute value is upper-cased except when it is enclosed in double quotes or attribute name is <code>'SQL_TEXT'</code>.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r9c1-t12" headers="r1c1-t12">
<p><code>enabled</code></p>
</td>
<td class="cellalignment1228" headers="r9c1-t12 r1c2-t12">
<p>Default '<code>YES</code>' means the loaded plans are enabled for use by the optimizer</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref9063"></a>Return Values</p>
<p>Number of plans loaded</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref9064"></a>Usage Notes</p>
<p>Invoking this subprogram requires the <code>ADMINISTER</code> <code>SQL</code> <code>MANAGEMENT</code> <code>OBJECT</code> privilege.</p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS68170" class="refsect2"><a id="CACBCAGD"></a>
<hr />
<h3 class="refsect2"><a id="sthref9065"></a>LOAD_PLANS_FROM_SQLSET Function</h3>
<p>This function loads plans stored in a SQL tuning set (STS) into SQL plan baselines. The plans loaded from STS are not verified for performance but added as accepted plans to existing or new SQL plan baselines. This function can be used to seed SQL management base with new SQL plan baselines.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref9066"></a>Syntax</p>
<pre>
DBMS_SPM.LOAD_PLANS_FROM_SQLSET (
   sqlset_name      IN  VARCHAR2,
   sqlset_owner     IN  VARCHAR2 := NULL,
   basic_filter     IN  VARCHAR2 := NULL,
   fixed            IN  VARCHAR2 := 'NO',
   enabled          IN  VARCHAR2 := 'YES'
   commit_rows      IN  NUMBER   := 1000)
RETURN PLS_INTEGER;
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref9067"></a>Parameters</p>
<div id="ARPLS68171" class="tblformal">
<p class="titleintable"><a id="sthref9068"></a><a id="sthref9069"></a>Table 136-11 LOAD_PLANS_FROM_SQLSET Function Parameters</p>
<table class="cellalignment1229" title="LOAD_PLANS_FROM_SQLSET Function Parameters" summary="This table describes the parameters of DBMS_SPM.LOAD_PLANS_FROM_SQLSET" dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t13">Parameter</th>
<th class="cellalignment1227" id="r1c2-t13">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t13" headers="r1c1-t13">
<p><code>sqlset_name</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t13 r1c2-t13">
<p>Name of the STS from where the plans are loaded into SQL plan baselines</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t13" headers="r1c1-t13">
<p><code>sqlset_owner</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t13 r1c2-t13">
<p>Owner of STS. <code>NULL</code> means current schema is the owner.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r4c1-t13" headers="r1c1-t13">
<p><code>basic_filter</code></p>
</td>
<td class="cellalignment1228" headers="r4c1-t13 r1c2-t13">
<p>A filter applied to the STS to select only qualifying plans to be loaded. The filter can take the form of any <code>WHERE</code> clause predicate that can specified against the view <code>DBA_SQLSET_STATEMENTS</code>. For example <code>basic_filter</code> =&gt; '<code>sql_text like ''select /*LOAD_STS*/%'''</code> or <code>basic_filter =&gt; 'sql_id=''b62q7nc33gzwx'''</code>.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r5c1-t13" headers="r1c1-t13">
<p><code>fixed</code></p>
</td>
<td class="cellalignment1228" headers="r5c1-t13 r1c2-t13">
<p>Default '<code>NO</code>' means the loaded plans are used as non-fixed plans. Value '<code>YES</code>' means the loaded plans are used as fixed plans and the SQL plan baseline will not be evolved over time.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r6c1-t13" headers="r1c1-t13">
<p><code>enabled</code></p>
</td>
<td class="cellalignment1228" headers="r6c1-t13 r1c2-t13">
<p>Default '<code>YES</code>' means the loaded plans are enabled for use by the optimizer</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r7c1-t13" headers="r1c1-t13">
<p><code>commit_rows</code></p>
</td>
<td class="cellalignment1228" headers="r7c1-t13 r1c2-t13">
<p>Number of SQL plans to load before doing a periodic commit. This helps to shorten the undo log.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref9070"></a>Return Values</p>
<p>The number of plans loaded</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref9071"></a>Usage Notes</p>
<ul>
<li>
<p>To load plans from a remote system, first load the plans into an STS on the remote system, export/import the STS from remote to local system, and then use this function.</p>
</li>
<li>
<p>To load plans from Automatic Workload Repository (AWR), first load the plans stored in AWR snapshots into an STS, and then use this procedure.</p>
</li>
<li>
<p>The user can also capture plans resident in the cursor cache for one or more SQL statements into an STS, and then use this procedure.</p>
</li>
</ul>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS72437" class="refsect2"><a id="CACCGDBG"></a>
<hr />
<h3 class="refsect2"><a id="sthref9072"></a>MIGRATE_STORED_OUTLINE Functions</h3>
<p>This function migrates stored outlines for one or more SQL statements to plan baselines in the SQL management base (SMB). Users can specify which stored outline(s) to be migrated based on outline name, SQL text, or outline category, or migrate all stored outlines in the system to SQL plan baselines.</p>
<p>This second overload of the function migrates stored outlines for one or more SQL statements to plan baselines in the SQL management base (SMB) given one or more outline names.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref9073"></a>Syntax</p>
<pre>
DBMS_SPM.MIGRATE_STORED_OUTLINE (
   attribute_name     IN  VARCHAR2,
   attribute_value    IN  CLOB,
   fixed              IN  VARCHAR2 := 'NO')
 RETURN CLOB;

DBMS_SPM.MIGRATE_STORED_OUTLINE (
   outln_list         IN  DBMS_SPM.NAME_LIST,
   fixed              IN  VARCHAR2 := 'NO')
 RETURN CLOB;
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref9074"></a>Parameters</p>
<div id="ARPLS72438" class="tblformal">
<p class="titleintable"><a id="sthref9075"></a><a id="sthref9076"></a>Table 136-12 MIGRATE_STORED_OUTLINE Function Parameters</p>
<table class="cellalignment1229" title="MIGRATE_STORED_OUTLINE Function Parameters" summary="This table describes the parameters of DBMS_SPM.LOAD_PLANS_FROM_SQLSET" dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t14">Parameter</th>
<th class="cellalignment1227" id="r1c2-t14">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t14" headers="r1c1-t14">
<p><code>attribute_name</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t14 r1c2-t14">
<p>Specifies the type of parameter used in <code>attribute_value</code> to identify the migrated stored outlines. It is case insensitive. Possible values:</p>
<ul>
<li>
<p><code>outline_name</code></p>
</li>
<li>
<p><code>sql_text</code></p>
</li>
<li>
<p><code>category</code></p>
</li>
<li>
<p><code>all</code></p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t14" headers="r1c1-t14">
<p><code>attribute_value</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t14 r1c2-t14">
<p>Based on <code>attribute_name</code>, this can be:</p>
<ul>
<li>
<p>Name of stored outline to be migrated</p>
</li>
<li>
<p>SQL text of stored outlines to be migrated</p>
</li>
<li>
<p>Category of stored outlines to be migrated</p>
</li>
<li>
<p><code>NULL</code> if <code>attribute_name</code> is <code>all</code></p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r4c1-t14" headers="r1c1-t14">
<p><code>fixed</code></p>
</td>
<td class="cellalignment1228" headers="r4c1-t14 r1c2-t14">
<p><code>NO</code> (default) or <code>YES</code>. Specifies the "fixed" status of the plans generated during migration. By default, plans are generated as "non-fixed" plans.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r5c1-t14" headers="r1c1-t14">
<p><code>outln_list</code></p>
</td>
<td class="cellalignment1228" headers="r5c1-t14 r1c2-t14">
<p>List of outline names to be migrated</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref9077"></a>Return Values</p>
<p>A <code>CLOB</code> containing a formatted report to describe the statistics during the migration, including:</p>
<ul>
<li>
<p>Number of stored outlines successfully migrated</p>
</li>
<li>
<p>Number of stored outlines (and also the corresponding outline names) failed to be migrated and the reasons for the failure</p>
</li>
</ul>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref9078"></a>Usage Note</p>
<ul>
<li>
<p>When the user specifies an outline name, the function migrates stored outlines to plan baseline based on given outline name, which uniquely identifies a single stored outline to be migrated.</p>
</li>
<li>
<p>When the user specifies SQL text, the function migrates all stored outlines created for a given SQL statement. A single SQL statement can have multiple stored outlines created for it under different category names. One plan baseline plan is created for each stored outline. The new plan baselines have category names set to <code>DEFAULT</code>. The module name of a plan baseline is set to be the same as the stored outline.</p>
</li>
<li>
<p>When the user specifies a category name, the function migrates all stored outlines with the given category name. Only one stored outline exists per category per SQL statement. One plan baseline is created for each stored outline.</p>
</li>
<li>
<p>When user specifies to migrate <code>all</code>, the function migrates all stored outlines in the system to plan baselines. One plan baseline is created for each stored outline.</p>
</li>
</ul>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS68172" class="refsect2"><a id="CACEGFAI"></a>
<hr />
<h3 class="refsect2"><a id="sthref9079"></a>PACK_STGTAB_BASELINE Function</h3>
<p>This function packs (exports) SQL plan baselines from SQL management base into a staging table.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref9080"></a>Syntax</p>
<pre>
DBMS_SPM.PACK_STGTAB_BASELINE (
   table_name       IN VARCHAR2,
   table_owner      IN VARCHAR2 := NULL,
   sql_handle       IN VARCHAR2 := NULL,
   plan_name        IN VARCHAR2 := NULL,
   sql_text         IN CLOB     := NULL,
   creator          IN VARCHAR2 := NULL,   origin           IN VARCHAR2 := NULL,
   enabled          IN VARCHAR2 := NULL,
   accepted         IN VARCHAR2 := NULL,
   fixed            IN VARCHAR2 := NULL,
   module           IN VARCHAR2 := NULL,
   action           IN VARCHAR2 := NULL)
RETURN NUMBER;
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref9081"></a>Parameters</p>
<div id="ARPLS68173" class="tblformal">
<p class="titleintable"><a id="sthref9082"></a><a id="sthref9083"></a>Table 136-13 PACK_STGTAB_BASELINE Function Parameters</p>
<table class="cellalignment1229" title="PACK_STGTAB_BASELINE Function Parameters" summary="This table describes the parameters of DBMS_SPM.PACK_STGTAB_BASELINE" dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t15">Parameter</th>
<th class="cellalignment1227" id="r1c2-t15">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t15" headers="r1c1-t15">
<p><code>table_name</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t15 r1c2-t15">
<p>Name of staging table into which SQL plan baselines are packed (case insensitive unless double quoted)</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t15" headers="r1c1-t15">
<p><code>table_owner</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t15 r1c2-t15">
<p>Name of staging table owner.Default <code>NULL</code> means current schema is the table owner</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r4c1-t15" headers="r1c1-t15">
<p><code>sql_handle</code></p>
</td>
<td class="cellalignment1228" headers="r4c1-t15 r1c2-t15">
<p>SQL handle (case sensitive)</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r5c1-t15" headers="r1c1-t15">
<p><code>plan_name</code></p>
</td>
<td class="cellalignment1228" headers="r5c1-t15 r1c2-t15">
<p>Plan name (case sensitive, % wildcards accepted)</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r6c1-t15" headers="r1c1-t15">
<p><code>sql_text</code></p>
</td>
<td class="cellalignment1228" headers="r6c1-t15 r1c2-t15">
<p>SQL text string (case sensitive, % wildcards accepted)</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r7c1-t15" headers="r1c1-t15">
<p><code>creator</code></p>
</td>
<td class="cellalignment1228" headers="r7c1-t15 r1c2-t15">
<p>Creator of SQL plan baseline (case insensitive unless double quoted)</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r8c1-t15" headers="r1c1-t15">
<p><code>origin</code></p>
</td>
<td class="cellalignment1228" headers="r8c1-t15 r1c2-t15">
<p>Origin of SQL plan baseline, should be <code>'MANUAL-LOAD'</code>, <code>'AUTO-CAPTURE'</code>, <code>'MANUAL_SQLTUNE'</code> or <code>'AUTO-SQLTUNE'</code> (case insensitive)</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r9c1-t15" headers="r1c1-t15">
<p><code>enabled</code></p>
</td>
<td class="cellalignment1228" headers="r9c1-t15 r1c2-t15">
<p>Must be '<code>YES</code>' or '<code>NO</code>' (case insensitive)</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r10c1-t15" headers="r1c1-t15">
<p><code>accepted</code></p>
</td>
<td class="cellalignment1228" headers="r10c1-t15 r1c2-t15">
<p>Must be '<code>YES</code>' or '<code>NO</code>' (case insensitive)</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r11c1-t15" headers="r1c1-t15">
<p><code>fixed</code></p>
</td>
<td class="cellalignment1228" headers="r11c1-t15 r1c2-t15">
<p>Must be '<code>YES</code>' or '<code>NO</code>' (case insensitive)</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r12c1-t15" headers="r1c1-t15">
<p><code>module</code></p>
</td>
<td class="cellalignment1228" headers="r12c1-t15 r1c2-t15">
<p>Module (case sensitive)</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r13c1-t15" headers="r1c1-t15">
<p><code>action</code></p>
</td>
<td class="cellalignment1228" headers="r13c1-t15 r1c2-t15">
<p>Action (case sensitive)</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref9084"></a>Return Values</p>
<p>Number of SQL plan baselines packed</p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS68174" class="refsect2"><a id="CACHBGBD"></a>
<hr />
<h3 class="refsect2"><a id="sthref9085"></a>UNPACK_STGTAB_BASELINE Function</h3>
<p>This function unpacks (imports) SQL plan baselines from a staging table into SQL management base.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref9086"></a>Syntax</p>
<pre>
DBMS_SPM.UNPACK_STGTAB_BASELINE (
   table_name       IN VARCHAR2,
   table_owner      IN VARCHAR2 := NULL,
   sql_handle       IN VARCHAR2 := NULL,
   plan_name        IN VARCHAR2 := NULL,
   sql_text         IN CLOB     := NULL,
   creator          IN VARCHAR2 := NULL,   origin           IN VARCHAR2 := NULL,
   enabled          IN VARCHAR2 := NULL,
   accepted         IN VARCHAR2 := NULL,
   fixed            IN VARCHAR2 := NULL,
   module           IN VARCHAR2 := NULL,
   action           IN VARCHAR2 := NULL)
RETURN NUMBER;
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref9087"></a>Parameters</p>
<div id="ARPLS68175" class="tblformal">
<p class="titleintable"><a id="sthref9088"></a><a id="sthref9089"></a>Table 136-14 UNPACK_STGTAB_BASELINE Function Parameters</p>
<table class="cellalignment1229" title="UNPACK_STGTAB_BASELINE Function Parameters" summary="This table describes the parameters of DBMS_SPM.UNPACK_STGTAB_BASELINE" dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t16">Parameter</th>
<th class="cellalignment1227" id="r1c2-t16">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t16" headers="r1c1-t16">
<p><code>table_name</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t16 r1c2-t16">
<p>Name of staging table from which SQL plan baselines are unpacked (case insensitive unless double quoted)</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t16" headers="r1c1-t16">
<p><code>table_owner</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t16 r1c2-t16">
<p>Name of staging table owner.Default NULL means current schema is the table owner</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r4c1-t16" headers="r1c1-t16">
<p><code>sql_handle</code></p>
</td>
<td class="cellalignment1228" headers="r4c1-t16 r1c2-t16">
<p>SQL handle (case sensitive)</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r5c1-t16" headers="r1c1-t16">
<p><code>plan_name</code></p>
</td>
<td class="cellalignment1228" headers="r5c1-t16 r1c2-t16">
<p>Plan name (case sensitive,% wildcards accepted)</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r6c1-t16" headers="r1c1-t16">
<p><code>sql_text</code></p>
</td>
<td class="cellalignment1228" headers="r6c1-t16 r1c2-t16">
<p>SQL text string (case sensitive, % wildcards accepted)</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r7c1-t16" headers="r1c1-t16">
<p><code>creator</code></p>
</td>
<td class="cellalignment1228" headers="r7c1-t16 r1c2-t16">
<p>Creator of SQL plan baseline (case insensitive unless double quoted)</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r8c1-t16" headers="r1c1-t16">
<p><code>origin</code></p>
</td>
<td class="cellalignment1228" headers="r8c1-t16 r1c2-t16">
<p>Origin of SQL plan baseline, should be <code>'MANUAL-LOAD'</code>, <code>'AUTO-CAPTURE'</code>,<code>'MANUAL_SQLTUNE'</code> or <code>'AUTO-SQLTUNE'</code> (case insensitive)</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r9c1-t16" headers="r1c1-t16">
<p><code>enabled</code></p>
</td>
<td class="cellalignment1228" headers="r9c1-t16 r1c2-t16">
<p>Must be '<code>YES</code>' or '<code>NO</code>' (case insensitive)</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r10c1-t16" headers="r1c1-t16">
<p><code>accepted</code></p>
</td>
<td class="cellalignment1228" headers="r10c1-t16 r1c2-t16">
<p>Must be '<code>YES</code>' or '<code>NO</code>' (case insensitive)</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r11c1-t16" headers="r1c1-t16">
<p><code>fixed</code></p>
</td>
<td class="cellalignment1228" headers="r11c1-t16 r1c2-t16">
<p>Must be '<code>YES</code>' or '<code>NO</code>' (case insensitive)</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r12c1-t16" headers="r1c1-t16">
<p><code>module</code></p>
</td>
<td class="cellalignment1228" headers="r12c1-t16 r1c2-t16">
<p>Module (case sensitive)</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r13c1-t16" headers="r1c1-t16">
<p><code>action</code></p>
</td>
<td class="cellalignment1228" headers="r13c1-t16 r1c2-t16">
<p>Action (case sensitive)</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref9090"></a>Return Values</p>
<p>Number of plans unpacked</p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" --></div>
<!-- class="refsect1" --></div>
<!-- class="refentry" --></div>
<!-- class="chapter" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment1219">
<tr>
<td class="cellalignment1228">
<table class="cellalignment1224">
<tr>
<td class="cellalignment1223"><a href="d_spadmn.htm"><img width="24" height="24" src="../../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment1223"><a href="d_sql.htm"><img width="24" height="24" src="../../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;1996, 2013,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment1231">
<table class="cellalignment1222">
<tr>
<td class="cellalignment1223"><a href="../../index.htm"><img width="24" height="24" src="../../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment1223"><a href="../../nav/portal_booklist.htm"><img width="24" height="24" src="../../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment1223"><a href="toc.htm"><img width="24" height="24" src="../../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment1223"><a href="index.htm"><img width="24" height="24" src="../../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment1223"><a href="../../nav/mindx.htm"><img width="24" height="24" src="../../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment1223"><a href="../../dcommon/html/feedback.htm"><img width="24" height="24" src="../../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>
</body>
</html>
