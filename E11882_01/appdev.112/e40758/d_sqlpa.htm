<!DOCTYPE html>
<html lang="en" >
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1">
<meta charset="utf-8">
<title>DBMS_SQLPA</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Version 5.1.2 Build 737" />
<meta name="dcterms.created" content="2013-07-19T18:55:32Z" />
<meta name="robots" content="all" />
<meta name="dcterms.title" content="Database PL/SQL Packages and Types Reference" />
<meta name="dcterms.identifier" content="E40758-03" />
<meta name="dcterms.isVersionOf" content="ARPLS" />
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;1996, 2013,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved." />
<link rel="Start" href="../../index.htm" title="Home" type="text/html" />
<link rel="Copyright" href="../../dcommon/html/cpyr.htm" title="Copyright" type="text/html" />

<script type="application/javascript"  src="../../dcommon/js/headfoot.js"></script>
<script type="application/javascript"  src="../../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html" />
<link rel="Index" href="index.htm" title="Index" type="text/html" />
<link rel="Prev" href="d_sqldiag.htm" title="Previous" type="text/html" />
<link rel="Next" href="d_sqltun.htm" title="Next" type="text/html" />
<link rel="alternate" href="../e40758.pdf" title="PDF version" type="application/pdf" />
<link rel="schema.dcterms" href="http://purl.org/dc/terms/" />
<link rel="stylesheet" href="../../dcommon/css/fusiondoc.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/header.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/footer.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/fonts.css">
<link rel="stylesheet" href="../../dcommon/css/foundation.css">
<link rel="stylesheet" href="../../dcommon/css/codemirror.css">
<link rel="stylesheet" type="text/css" title="Default" href="../../nav/css/html5.css">
<link rel="stylesheet" href="../../dcommon/css/respond-480-tablet.css">
<link rel="stylesheet" href="../../dcommon/css/respond-768-laptop.css">
<link rel="stylesheet" href="../../dcommon/css/respond-1140-deskop.css">
<script type="application/javascript" src="../../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">143/265</span> <!-- End Header -->
<div id="ARPLS229" class="chapter"><a id="CHEEEBDI"></a><a id="i1009409"></a>
<h1 class="chapter"><span class="secnum">139</span> DBMS_SQLPA</h1>
<p>The <a id="sthref9482"></a>DBMS_SQLPA package provides the interface to implement the SQL Performance Analyzer.</p>
<p>The chapter contains the following topics:</p>
<ul>
<li>
<p><a href="#CHEBEBJJ">Using DBMS_SQLPA</a></p>
<ul>
<li>
<p>Overview</p>
</li>
<li>
<p>Security Model</p>
</li>
</ul>
</li>
<li>
<p><a href="#CHEHFCFA">Summary of DBMS_SQLPA Subprograms</a></p>
</li>
</ul>
<div class="refentry"><a id="CHEBEBJJ"></a>
<hr />
<div id="ARPLS68345" class="refsect1">
<h2 class="refsect1">Using DBMS_SQLPA</h2>
<ul>
<li>
<p><a href="#i1009502">Overview</a></p>
</li>
<li>
<p><a href="#CACDFEBH">Security Model</a></p>
</li>
</ul>
<div id="ARPLS68346" class="refsect2"><a id="i1009502"></a>
<hr />
<h3 class="refsect2">Overview</h3>
<p>The <code>DBMS_SQLPA</code> package provides a capacity to help users predict the impact of system environment changes on the performance of a SQL workload. The interface lets users build and then compare two different versions of the workload performance, analyze the differences between the two versions, and unmask the SQL statements that might be impacted by the changes.</p>
<p>The package provides a task-oriented interface to implement the SQL Performance Analyzer. For example</p>
<ol>
<li>
<p>You use the <a href="#i1006896">CREATE_ANALYSIS_TASK Functions</a> to create an analysis task for a single statement or a group of SQL statements.s</p>
</li>
<li>
<p>The <a href="#CHEFGHHI">EXECUTE_ANALYSIS_TASK Function &amp; Procedure</a> executes a previously created analysis task.</p>
</li>
<li>
<p>The <a href="#i1006953">REPORT_ANALYSIS_TASK Function</a> displays the results of an analysis task.</p>
</li>
</ol>
</div>
<!-- class="refsect2" -->
<div id="ARPLS68347" class="refsect2"><a id="CACDFEBH"></a>
<hr />
<h3 class="refsect2">Security Model</h3>
<p>This package is available to <code>PUBLIC</code> and performs its own security checking. All analysis task interfaces (<code>XXX_ANALYSIS_TASK</code>) require privilege <code>ADVISOR</code>.</p>
</div>
<!-- class="refsect2" --></div>
<!-- class="refsect1" -->
<a id="CHEHFCFA"></a>
<hr />
<div id="ARPLS68348" class="refsect1">
<h2 class="refsect1">Summary of DBMS_SQLPA Subprograms</h2>
<div id="ARPLS68349" class="tblformal">
<p class="titleintable"><a id="sthref9483"></a><a id="sthref9484"></a>Table 139-1 DBMS_SQLPA Package Subprograms</p>
<table class="cellalignment1229" title="DBMS_SQLPA Package Subprograms " summary="This table lists the DBMS_SQLPA subprograms in alphabetical order and briefly describes them." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t2">Subprogram</th>
<th class="cellalignment1227" id="r1c2-t2">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t2" headers="r1c1-t2">
<p><a href="#i1006894">CANCEL_ANALYSIS_TASK Procedure</a></p>
</td>
<td class="cellalignment1228" headers="r2c1-t2 r1c2-t2">
<p>Cancels the currently executing task analysis of one or more SQL statements</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t2" headers="r1c1-t2">
<p><a href="#i1006896">CREATE_ANALYSIS_TASK Functions</a></p>
</td>
<td class="cellalignment1228" headers="r3c1-t2 r1c2-t2">
<p>Creates an advisor task to process and analyze one or more SQL statements</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r4c1-t2" headers="r1c1-t2">
<p><a href="#i1006900">DROP_ANALYSIS_TASK Procedure</a></p>
</td>
<td class="cellalignment1228" headers="r4c1-t2 r1c2-t2">
<p>Drops a SQL analysis task</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r5c1-t2" headers="r1c1-t2">
<p><a href="#CHEFGHHI">EXECUTE_ANALYSIS_TASK Function &amp; Procedure</a></p>
</td>
<td class="cellalignment1228" headers="r5c1-t2 r1c2-t2">
<p>Executes a previously created analysis task</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r6c1-t2" headers="r1c1-t2">
<p><a href="#CHECJJHH">INTERRUPT_ANALYSIS_TASK Procedure</a></p>
</td>
<td class="cellalignment1228" headers="r6c1-t2 r1c2-t2">
<p>Interrupts the currently executing analysis task</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r7c1-t2" headers="r1c1-t2">
<p><a href="#i1006953">REPORT_ANALYSIS_TASK Function</a></p>
</td>
<td class="cellalignment1228" headers="r7c1-t2 r1c2-t2">
<p>Displays the results of an analysis task</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r8c1-t2" headers="r1c1-t2">
<p><a href="#i1006954">RESET_ANALYSIS_TASK Procedure</a></p>
</td>
<td class="cellalignment1228" headers="r8c1-t2 r1c2-t2">
<p>Resets the currently executing analysis task to its initial state</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r9c1-t2" headers="r1c1-t2">
<p><a href="#CACEJGJF">RESUME_ANALYSIS_TASK Procedure</a></p>
</td>
<td class="cellalignment1228" headers="r9c1-t2 r1c2-t2">
<p>Resumes a previously interrupted analysis task that was created to process a SQL tuning set.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r10c1-t2" headers="r1c1-t2">
<p><a href="#CACIFFJE">SET_ANALYSIS_TASK_PARAMETER Procedures</a></p>
</td>
<td class="cellalignment1228" headers="r10c1-t2 r1c2-t2">
<p>Sets the SQL analysis task parameter value</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r11c1-t2" headers="r1c1-t2">
<p><a href="#CHDEHJAB">SET_ANALYSIS_DEFAULT_PARAMETER Procedures</a></p>
</td>
<td class="cellalignment1228" headers="r11c1-t2 r1c2-t2">
<p>Sets the SQL analysis task parameter default value</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<div id="ARPLS68350" class="refsect2"><a id="i1006894"></a>
<hr />
<h3 class="refsect2"><a id="sthref9485"></a>CANCEL_ANALYSIS_TASK Procedure</h3>
<p>This procedure cancels the currently executing analysis task. All intermediate result data is removed from the task.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref9486"></a>Syntax</p>
<pre>
DBMS_SQLPA.CANCEL_ANALYSIS_TASK(
 task_name         IN VARCHAR2);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref9487"></a>Parameters</p>
<div id="ARPLS68351" class="tblformal">
<p class="titleintable"><a id="sthref9488"></a><a id="sthref9489"></a>Table 139-2 CANCEL_ANALYSIS_TASK Procedure Parameters</p>
<table class="cellalignment1229" title="CANCEL_ANALYSIS_TASK Procedure Parameters " summary="This table describes Parameters used by the DBMS_SQLPA.CANCEL_ANALYSIS_TASK subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t3">Parameter</th>
<th class="cellalignment1227" id="r1c2-t3">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t3" headers="r1c1-t3">
<p><code>task_name</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t3 r1c2-t3">
<p>Name of the task to cancel</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref9490"></a>Examples</p>
<p>Canceling a task when there is a need to stop it executing and it is not required to view any already-completed results:</p>
<pre>
EXEC DBMS_SQLPA.CANCEL_ANALYSIS_TASK(:my_task);
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS68352" class="refsect2"><a id="i1006896"></a>
<hr />
<h3 class="refsect2"><a id="sthref9491"></a>CREATE_ANALYSIS_TASK Functions</h3>
<p>These functions create an advisor task to process and analyze one or more SQL statements. You can use different forms of this function to:</p>
<ul>
<li>
<p>Create an analysis task for a single statement given its text.</p>
</li>
<li>
<p>Create an analysis task for a single statement from the cursor cache given its identifier.</p>
</li>
<li>
<p>Create an analysis task for a single statement from the workload repository given a range of snapshot identifiers.</p>
</li>
<li>
<p>Create an analysis task for a SQL tuning set.</p>
</li>
</ul>
<p>In all cases, the function creates an advisor task and sets its parameters.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref9492"></a>Syntax</p>
<p>SQL text format. This form of the function is called to prepare the analysis of a single statement given its text.</p>
<pre>
DBMS_SQLPA.CREATE_ANALYSIS_TASK(
  sql_text         IN CLOB,
  bind_list        IN sql_binds := NULL,
  parsing_schema   IN VARCHAR2  := NULL,
  task_name        IN VARCHAR2  := NULL,
  description      IN VARCHAR2  := NULL)
RETURN VARCHAR2;
</pre>
<p>SQL ID format. This form of the function is called to prepare the analysis of a single statement from the cursor cache given its identifier.</p>
<pre>
DBMS_SQLPA.CREATE_ANALYSIS_TASK(
  sql_id           IN VARCHAR2,
  plan_hash_value  IN NUMBER    := NULL,
  task_name        IN VARCHAR2  := NULL,
  description      IN VARCHAR2  := NULL)
RETURN VARCHAR2;
</pre>
<p>Workload Repository format. This form of the function is called to prepare the analysis of a single statement from the workload repository given a range of snapshot identifiers.</p>
<pre>
DBMS_SQLPA.CREATE_ANALYSIS_TASK(
  begin_snap       IN NUMBER,
  end_snap         IN NUMBER,
  sql_id           IN VARCHAR2,
  plan_hash_value  IN NUMBER    := NULL,
  task_name        IN VARCHAR2  := NULL,
  description      IN VARCHAR2  := NULL)
RETURN VARCHAR2;
</pre>
<p>SQLSET format. This form of the function is called to prepare the analysis of a SQL tuning set.</p>
<pre>
DBMS_SQLPA.CREATE_ANALYSIS_TASK(
  sqlset_name       IN VARCHAR2,
  basic_filter      IN VARCHAR2 :=  NULL,
  order_by          IN VARCHAR2 :=  NULL,
  top_sql           IN VARCHAR2 :=  NULL,
  task_name         IN VARCHAR2 :=  NULL,
  description       IN VARCHAR2 :=  NULL
  sqlset_owner      IN VARCHAR2 :=  NULL)
RETURN VARCHAR2;
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref9493"></a>Parameters</p>
<div id="ARPLS68353" class="tblformal">
<p class="titleintable"><a id="sthref9494"></a><a id="sthref9495"></a>Table 139-3 <span class="bolditalic">CREATE_ANALYSIS_TASK Function Parameters</span></p>
<table class="cellalignment1229" title="CREATE_ANALYSIS_TASK Function Parameters " summary="This table describes Parameters used by the DBMS_SQLPA.CREATE_TUNING_TASK subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t4">Parameter</th>
<th class="cellalignment1227" id="r1c2-t4">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t4" headers="r1c1-t4">
<p><code>sql_text</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t4 r1c2-t4">
<p>Text of a SQL statement</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t4" headers="r1c1-t4">
<p><code>bind_list</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t4 r1c2-t4">
<p>A set of bind values</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r4c1-t4" headers="r1c1-t4">
<p><code>parsing_schema</code></p>
</td>
<td class="cellalignment1228" headers="r4c1-t4 r1c2-t4">
<p>Name of the schema where the statement can be compiled</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r5c1-t4" headers="r1c1-t4">
<p><code>task_name</code></p>
</td>
<td class="cellalignment1228" headers="r5c1-t4 r1c2-t4">
<p>Optional analysis task name</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r6c1-t4" headers="r1c1-t4">
<p><code>description</code></p>
</td>
<td class="cellalignment1228" headers="r6c1-t4 r1c2-t4">
<p>Description of the SQL analysis task to a maximum of 256 characters</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r7c1-t4" headers="r1c1-t4">
<p><code>sql_id</code></p>
</td>
<td class="cellalignment1228" headers="r7c1-t4 r1c2-t4">
<p>Identifier of a SQL statement</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r8c1-t4" headers="r1c1-t4">
<p><code>plan_hash_value</code></p>
</td>
<td class="cellalignment1228" headers="r8c1-t4 r1c2-t4">
<p>Hash value of the SQL execution plan</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r9c1-t4" headers="r1c1-t4">
<p><code>begin_snap</code></p>
</td>
<td class="cellalignment1228" headers="r9c1-t4 r1c2-t4">
<p>Begin snapshot identifier</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r10c1-t4" headers="r1c1-t4">
<p><code>end_snap</code></p>
</td>
<td class="cellalignment1228" headers="r10c1-t4 r1c2-t4">
<p>End snapshot identifier</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r11c1-t4" headers="r1c1-t4">
<p><code>sqlset_name</code></p>
</td>
<td class="cellalignment1228" headers="r11c1-t4 r1c2-t4">
<p>SQL tuning set name</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r12c1-t4" headers="r1c1-t4">
<p><code>basic_filter</code></p>
</td>
<td class="cellalignment1228" headers="r12c1-t4 r1c2-t4">
<p>SQL predicate to filter the SQL from the SQL tuning set</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r13c1-t4" headers="r1c1-t4">
<p><code>order_by</code></p>
</td>
<td class="cellalignment1228" headers="r13c1-t4 r1c2-t4">
<p>Order-by clause on the selected SQL</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r14c1-t4" headers="r1c1-t4">
<p><code>top_sql</code></p>
</td>
<td class="cellalignment1228" headers="r14c1-t4 r1c2-t4">
<p>Top N SQL after filtering and ranking</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r15c1-t4" headers="r1c1-t4">
<p><code>sqlset_owner</code></p>
</td>
<td class="cellalignment1228" headers="r15c1-t4 r1c2-t4">
<p>The owner of the SQL tuning set, or <code>NULL</code> for the current schema owner</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref9496"></a>Return Values</p>
<p>A SQL analysis task name that is unique by user (two different users can give the same name to their advisor tasks).</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref9497"></a>Examples</p>
<pre>
variable stmt_task VARCHAR2(64);
variable sts_task  VARCHAR2(64);
 
-- Sql text format
EXEC :stmt_task := DBMS_SQLPA.CREATE_ANALYSIS_TASK(
     sql_text =&gt; 'select quantity_sold from sales s, times t where s.time_id = t.time_id and s.time_id = TO_DATE(''24-NOV-00'')');
 
-- Sql id format (cursor cache)
EXEC :stmt_task := DBMS_SQLPA.CREATE_ANALYSIS_TASK(
    sql_id       =&gt; 'ay1m3ssvtrh24');
 
-- Workload repository format
exec :stmt_task := DBMS_SQLPA.CREATE_ANALYSIS_TASK(
    begin_snap  =&gt; 1, 
    end_snap    =&gt; 2, 
    sql_id      =&gt; 'ay1m3ssvtrh24');
 
-- Sql tuning set format (first we need to load an STS, then analyze it)
EXEC :sts_task := DBMS_SQLPA.CREATE_ANALYSIS_TASK( -
  sqlset_name    =&gt;   'my_workload', -
  order_by       =&gt;   'BUFFER_GETS', -
  description    =&gt;   'process workload ordered by buffer gets'); 
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS68354" class="refsect2"><a id="i1006900"></a>
<hr />
<h3 class="refsect2"><a id="sthref9498"></a>DROP_ANALYSIS_TASK Procedure</h3>
<p>This procedure drops a SQL analysis task.The task and all its result data are deleted.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref9499"></a>Syntax</p>
<pre>
DBMS_SQLPA.DROP_ANALYSIS_TASK(
 task_name         IN VARCHAR2);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref9500"></a>Parameters</p>
<div id="ARPLS68355" class="tblformal">
<p class="titleintable"><a id="sthref9501"></a><a id="sthref9502"></a>Table 139-4 DROP_ANALYSIS_TASK Procedure Parameters</p>
<table class="cellalignment1229" title="DROP_ANALYSIS_TASK Procedure Parameters " summary="This table describes Parameters used by the DBMS_SQLPA.DROP_TUNING_TASK subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t5">Parameter</th>
<th class="cellalignment1227" id="r1c2-t5">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t5" headers="r1c1-t5">
<p><code>task_name</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t5 r1c2-t5">
<p>The name of the analysis task to drop</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS68356" class="refsect2"><a id="CHEFGHHI"></a>
<hr />
<h3 class="refsect2"><a id="sthref9503"></a>EXECUTE_ANALYSIS_TASK Function &amp; Procedure</h3>
<p>This function and procedure executes a previously created analysis task, the function version returning the new execution name.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref9504"></a>Syntax</p>
<pre>
DBMS_SQLPA.EXECUTE_ANALYSIS_TASK(
   task_name         IN VARCHAR2,
   execution_type    IN VARCHAR2               := 'test execute',
   execution_name    IN VARCHAR2               := NULL,
   execution_params  IN dbms_advisor.argList   := NULL,
   execution_desc    IN VARCHAR2               := NULL)
 RETURN VARCHAR2;
</pre>
<pre>
DBMS_SQLPA.EXECUTE_ANALYSIS_TASK(
   task_name         IN VARCHAR2,
   execution_type    IN VARCHAR2               := 'test execute',
   execution_name    IN VARCHAR2               := NULL,
   execution_params  IN dbms_advisor.argList   := NULL,
   execution_desc    IN VARCHAR2               := NULL);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref9505"></a>Parameters</p>
<div id="ARPLS68357" class="tblformal">
<p class="titleintable"><a id="sthref9506"></a><a id="sthref9507"></a>Table 139-5 EXECUTE_ANALYSIS_TASK Function &amp; Procedure Parameters</p>
<table class="cellalignment1229" title="EXECUTE_ANALYSIS_TASK Function &amp; Procedure Parameters " summary="This table describes Parameters used by the DBMS_SQLPA.EXECUTE_TUNING_TASK subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t6">Parameter</th>
<th class="cellalignment1227" id="r1c2-t6">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t6" headers="r1c1-t6">
<p><code>task_name</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t6 r1c2-t6">
<p>Identifier of the task to execute</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t6" headers="r1c1-t6">
<p><code>execution_type</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t6 r1c2-t6">
<p>Type of the action to perform by the function. If <code>NULL</code> it will default to the value of the <code>DEFAULT_EXECUTION_TYPE</code> parameter. Possible values are:</p>
<ul>
<li>
<p><code>[TEST]</code> <code>EXECUTE</code> - test-execute every SQL statement and collect its execution plans and execution statistics. The resulting plans and statistics will be stored in the advisor framework. This is default.</p>
</li>
<li>
<p><code>EXPLAIN</code> <code>PLAN</code> - generate explain plan for every statement in the SQL workload. This is similar to the <code>EXPLAIN</code> <code>PLAN</code> command. The resulting plans will be stored in the advisor framework in association with the task.</p>
</li>
<li>
<p><code>COMPARE</code> <code>[PERFORMANCE]</code> - analyze and compare two versions of SQL performance data. The performance data is generated by test-executing or generating explain plan of the SQL statements. Use this option when two executions of type <code>EXPLAIN_PLAN</code> or <code>TEST_EXECUTE</code> already exist in the task</p>
</li>
<li>
<p><code>CONVERT SQLSET</code> - used to read the statistics captured in a SQL Tuning Set and model them as a task execution. This can be used when you wish to avoid executing the SQL statements because valid data for the experiment already exists in the SQL Tuning Set.</p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r4c1-t6" headers="r1c1-t6">
<p><code>execution_name</code></p>
</td>
<td class="cellalignment1228" headers="r4c1-t6 r1c2-t6">
<p>A name to qualify and identify an execution. If not specified, it will be generated by the advisor and returned by function.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r5c1-t6" headers="r1c1-t6">
<p><code>execution_params</code></p>
</td>
<td class="cellalignment1228" headers="r5c1-t6 r1c2-t6">
<p>List of parameters (name, value) for the specified execution. The execution parameters have effect only on the execution for which they are specified. They will override the values for the parameters stored in the task (set through the <a href="#CHDEHJAB">SET_ANALYSIS_DEFAULT_PARAMETER Procedures</a>).</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r6c1-t6" headers="r1c1-t6">
<p><code>execution_desc</code></p>
</td>
<td class="cellalignment1228" headers="r6c1-t6 r1c2-t6">
<p>A 256-length string describing the execution</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref9508"></a>Usage Notes</p>
<p>SQL performance analyzer task can be executed multiples times without having to reset it. For example, when a task is created to perform a change impact analysis on a SQL workload, the created task has to be executed before making any change in the system environment to build a version of the workload that will be used as a reference for performance analysis. Once the change has been made, a second execution is required to build the post-change version of the workload. Finally, the task has to be executed a third time to let the advisor analyze and compare the performance of the workload in both versions.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref9509"></a>Examples</p>
<p class="subhead2"><a id="ARPLS68358"></a>1. Create a task with a purpose of change impact analysis</p>
<pre>
EXEC :tname := DBMS_SQLPA.CREATE_ANALYSIS_TASK(
    sqlset_name     =&gt; 'my_sts');
</pre>
<p class="subhead2"><a id="ARPLS68359"></a>2. Make baseline or the before change execution</p>
<pre>
EXEC DBMS_SQLPA.EXECUTE_ANALYSIS_TASK(
    task_name       =&gt; :tname,
    execution_type  =&gt; 'test execute',     execution_name  =&gt; 'before_change');
</pre>
<p class="subhead2"><a id="ARPLS68360"></a>3. Make change</p>
<pre>
...
</pre>
<p class="subhead2"><a id="ARPLS68361"></a>4. Make the after change version of the workload performance</p>
<pre>
EXEC DBMS_SQLPA.EXECUTE_ANALYSIS_TASK(
   task_name          =&gt; :tname, -
   execution_type     =&gt; 'test execute',
   execution_name     =&gt; 'after_change')
</pre>
<p class="subhead2"><a id="ARPLS68362"></a>5. Compare the two versions of the workload</p>
<p>By default we always compare the results of the two last executions. The SQL Performance Analyzer uses the <code>elapsed_time</code> as a default metric for comparison. Here we are changing it to <code>buffer_gets</code> instead.</p>
<pre>
EXEC DBMS_SQLPA.SET_ANALYSIS_TASK_PARAMETER(
   :tname,'comparison_metric', 'buffer_gets');
EXEC DBMS_SQLPA.EXECUTE_ANALYSIS_TASK(
   task_name         =&gt; :tname, -
   execution_type    =&gt; 'compare performance', - 
   execution_name    =&gt; 'after_change');
</pre>
<p>Use the following call if you would like to explicitly specify the two executions to compare as well as the comparison metric to use.</p>
<pre>
EXEC DBMS_SQLPA.EXECUTE_ANALYSIS_TASK(
   task_name        =&gt; :tname, -
   execution_type   =&gt; 'compare performance', 
   execution_params =&gt; dbms_advisor.arglist(
      'execution_name1', 
      'before_change', 
      'execution_name2', 
      'after_change',
      'comparion_metric', 
      'buffer_gets'));
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS68363" class="refsect2"><a id="CHECJJHH"></a>
<hr />
<h3 class="refsect2"><a id="sthref9510"></a>INTERRUPT_ANALYSIS_TASK Procedure</h3>
<p>This procedure interrupts the currently executing analysis task. All intermediate result data will not be removed from the task.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref9511"></a>Syntax</p>
<pre>
DBMS_SQLPA.INTERRUPT_ANALYSIS_TASK(
   task_name         IN VARCHAR2);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref9512"></a>Parameters</p>
<div id="ARPLS68364" class="tblformal">
<p class="titleintable"><a id="sthref9513"></a><a id="sthref9514"></a>Table 139-6 INTERRUPT_ANALYSIS_TASK Procedure Parameters</p>
<table class="cellalignment1229" title="INTERRUPT_ANALYSIS_TASK Procedure Parameters " summary="This table describes Parameters used by the DBMS_SQLPA.INTERRUPT_TUNING_TASK subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t7">Parameter</th>
<th class="cellalignment1227" id="r1c2-t7">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t7" headers="r1c1-t7">
<p><code>task_name</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t7 r1c2-t7">
<p>Identifier of the analysis task to interrupt</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref9515"></a>Examples</p>
<pre>
EXEC DBMS_SQLPA.INTERRUPT_ANALYSIS_TASK(:my_task);
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS68365" class="refsect2"><a id="i1006953"></a>
<hr />
<h3 class="refsect2"><a id="sthref9516"></a>REPORT_ANALYSIS_TASK Function</h3>
<p>This procedure displays the results of an analysis task.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref9517"></a>Syntax</p>
<pre>
DBMS_SQLPA.REPORT_ANALYSIS_TASK(
   task_name       IN   VARCHAR2,
   type            IN   VARCHAR2   := 'TEXT',
   level           IN   VARCHAR2   := 'TYPICAL',
   section         IN   VARCHAR2   := 'SUMMARY',
   object_id       IN   NUMBER     := NULL,
   top_sql         IN   NUMBER     := 100,
   execution_name  IN   VARCHAR2   := NULL,
   task_owner      IN   VARCHAR2   := NULL,
   order_by        IN   VARCHAR2   := NULL)
RETURN CLOB;
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref9518"></a>Parameters</p>
<div id="ARPLS68366" class="tblformal">
<p class="titleintable"><a id="sthref9519"></a><a id="sthref9520"></a>Table 139-7 REPORT_ANALYSIS_TASK Function Parameters</p>
<table class="cellalignment1229" title="REPORT_ANALYSIS_TASK Function Parameters " summary="This table describes Parameters used by the DBMS_SQLPA.REPORT_TUNING_TASK subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t8">Parameter</th>
<th class="cellalignment1227" id="r1c2-t8">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t8" headers="r1c1-t8">
<p><code>task_name</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t8 r1c2-t8">
<p>Name of the task to report</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t8" headers="r1c1-t8">
<p><code>type</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t8 r1c2-t8">
<p>Type of the report to produce. Possible values are <code>TEXT</code> (default), <code>HTML</code>, <code>XML</code> and <code>ACTIVE</code> (see Usage Notes).</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r4c1-t8" headers="r1c1-t8">
<p><code>level</code></p>
</td>
<td class="cellalignment1228" headers="r4c1-t8 r1c2-t8">
<p>Level of detail in the report:</p>
<ul>
<li>
<p><code>ALL</code> - details of all SQL</p>
</li>
<li>
<p><code>BASIC</code> - currently the same as typical</p>
</li>
<li>
<p><code>CHANGED</code> - only SQL with changed performance</p>
</li>
<li>
<p><code>CHANGED_PLANS</code> - only SQL with plan changes</p>
</li>
<li>
<p><code>ERRORS</code> - SQL with errors only</p>
</li>
<li>
<p><code>IMPROVED</code> - only improved SQL</p>
</li>
<li>
<p><code>REGRESSED</code> - only regressed SQL</p>
</li>
<li>
<p><code>TIMEOUT</code> - only SQL which timed-out during execution</p>
</li>
<li>
<p><code>TYPICAL</code> (default) - show information about every statement analyzed, including changing and errors</p>
</li>
<li>
<p><code>UNCHANGED</code> - only SQL with unchanged performance</p>
</li>
<li>
<p><code>UNCHANGED_PLANS</code> - only SQL with unchanged plans</p>
</li>
<li>
<p><code>UNSUPPORTED</code> - only SQL not supported by SPAs</p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r5c1-t8" headers="r1c1-t8">
<p><code>section</code></p>
</td>
<td class="cellalignment1228" headers="r5c1-t8 r1c2-t8">
<p>Optionally limit the report to a single section (<code>ALL</code> for all sections):</p>
<ul>
<li>
<p><code>SUMMARY</code> (default) - workload summary only</p>
</li>
<li>
<p><code>ALL</code> - summary and details on SQL</p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r6c1-t8" headers="r1c1-t8">
<p><code>object_id</code></p>
</td>
<td class="cellalignment1228" headers="r6c1-t8 r1c2-t8">
<p>Identifier of the advisor framework object that represents a given SQL in a tuning set (STS)</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r7c1-t8" headers="r1c1-t8">
<p><code>top_sql</code></p>
</td>
<td class="cellalignment1228" headers="r7c1-t8 r1c2-t8">
<p>Number of SQL statements in a STS for which the report is generated</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r8c1-t8" headers="r1c1-t8">
<p><code>execution_name</code></p>
</td>
<td class="cellalignment1228" headers="r8c1-t8 r1c2-t8">
<p>Name of the task execution to use. If <code>NULL</code>, the report will be generated for the last task execution.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r9c1-t8" headers="r1c1-t8">
<p><code>task_owner</code></p>
</td>
<td class="cellalignment1228" headers="r9c1-t8 r1c2-t8">
<p>Owner of the relevant analysis task. Defaults to the current schema owner.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r10c1-t8" headers="r1c1-t8">
<p><code>order_by</code></p>
</td>
<td class="cellalignment1228" headers="r10c1-t8 r1c2-t8">
<p>How to sort SQL statements in the report (summary and body). Possible values:</p>
<ul>
<li>
<p><code>CHANGE_DIFF</code> - sort SQL statements by change difference in SQL performance in terms of the comparison Metric</p>
</li>
<li>
<p><code>NULL</code> (default) - order SQL statement by impact on workload</p>
</li>
<li>
<p><code>SQL_IMPACT</code> - order SQL statement by change impact on SQL</p>
</li>
<li>
<p><code>WORKLOAD_IMPACT</code> - same as <code>NULL</code></p>
</li>
<li>
<p><code>METRIC_DELTA</code> - same as <code>CHANGE_DIFF</code></p>
</li>
</ul>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref9521"></a>Return Values</p>
<p>A <code>CLOB</code> containing the desired report.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref9522"></a>Usage Notes</p>
<p><code>ACTIVE</code> reports have a rich, interactive user interface similar to Enterprise Manager while not requiring any EM installation. The report file built is in <code>HTML</code> format so it can be interpreted by most modern browsers. The code powering the active report is downloaded transparently by the web browser when the report is first viewed, hence viewing it requires outside connectivity.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref9523"></a>Examples</p>
<pre>
-- Get the whole report for the single statement case.
SELECT DBMS_SQLPA.REPORT_ANALYSIS_TASK(:stmt_task) from dual;
 
-- Show me the summary for the sts case.
SELECT DBMS_SQLPA.REPORT_ANALYSIS_TASK(:sts_task, 'TEXT', 'TYPICAL', 'SUMMARY')
FROM DUAL;
 
-- Show me the findings for the statement I'm interested in.
SELECT DBMS_SQLPA.REPORT_ANALYSIS_TASK(:sts_task, 'TEXT', 'TYPICAL', 'ALL', 5) from dual;
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS68367" class="refsect2"><a id="i1006954"></a>
<hr />
<h3 class="refsect2"><a id="sthref9524"></a>RESET_ANALYSIS_TASK Procedure</h3>
<p>This procedure is called on an analysis task that is not currently executing to prepare it for re-execution. All intermediate result data will be deleted.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref9525"></a>Syntax</p>
<pre>
DBMS_SQLPA.RESET_ANALYSIS_TASK(
 task_name         IN VARCHAR2);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref9526"></a>Parameters</p>
<div id="ARPLS68368" class="tblformal">
<p class="titleintable"><a id="sthref9527"></a><a id="sthref9528"></a>Table 139-8 RESET_ANALYSIS_TASK Procedure Parameters</p>
<table class="cellalignment1229" title="RESET_ANALYSIS_TASK Procedure Parameters " summary="This table describes Parameters used by the DBMS_SQLPA.RESET_TUNING_TASK subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t9">Parameter</th>
<th class="cellalignment1227" id="r1c2-t9">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t9" headers="r1c1-t9">
<p><code>task_name</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t9 r1c2-t9">
<p>Identifier of the analysis task to reset</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref9529"></a>Examples</p>
<pre>
-- reset and re-execute a task
EXEC DBMS_SQLPA.RESET_ANALYSIS_TASK(:sts_task);
 
-- re-execute the task
EXEC DBMS_SQLPA.EXECUTE_ANALYSIS_TASK(:sts_task);
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS68369" class="refsect2"><a id="CACEJGJF"></a>
<hr />
<h3 class="refsect2"><a id="sthref9530"></a>RESUME_ANALYSIS_TASK Procedure</h3>
<p>This procedure resumes a previously interrupted or <code>FAILED</code> (with a fatalerror) task execution.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref9531"></a>Syntax</p>
<pre>
DBMS_SQLPA.RESUME_ANALYSIS_TASK(
 task_name         IN VARCHAR2,
 basic_filter      IN VARCHAR2 := NULL);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref9532"></a>Parameters</p>
<div id="ARPLS68370" class="tblformal">
<p class="titleintable"><a id="sthref9533"></a><a id="sthref9534"></a>Table 139-9 RESUME_ANALYSIS_TASK Procedure Parameters</p>
<table class="cellalignment1229" title="RESUME_ANALYSIS_TASK Procedure Parameters " summary="This table describes Parameters used by the DBMS_SQLPA.RESUME_TUNING_TASK subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t10">Parameter</th>
<th class="cellalignment1227" id="r1c2-t10">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t10" headers="r1c1-t10">
<p><code>task_name</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t10 r1c2-t10">
<p>Identifier of the analysis task to resume</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t10" headers="r1c1-t10">
<p><code>basic_filter</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t10 r1c2-t10">
<p>A SQL predicate to filter the SQL from the SQL tuning set. Note that this filter will be applied in conjunction with the basic filter (parameter <code>basic_filter</code>) that was specified when calling the <a href="#i1006896">CREATE_ANALYSIS_TASK Functions</a>.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref9535"></a>Usage Notes</p>
<p>Resuming a single SQL analysis task (a task that was created to analyze a single SQL statement as compared to a SQL Tuning Set) is not supported.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref9536"></a>Examples</p>
<pre>
-- Interrupt the task
EXEC DBMS_SQLPA.INTERRUPT_ANALYSIS_TASK(:conc_task);
 
-- Once a task is interrupted, we can elect to reset it, resume it, or check
-- out its results and then decide.  For this example we will just resume.
 
EXEC DBMS_SQLPA.RESUME_ANALYSIS_TASK(:conc_task);
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS68371" class="refsect2"><a id="CACIFFJE"></a>
<hr />
<h3 class="refsect2"><a id="sthref9537"></a>SET_ANALYSIS_TASK_PARAMETER Procedures</h3>
<p>This procedure sets the SQL analysis task parameter value.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref9538"></a>Syntax</p>
<p>This form of the procedure updates the value of a SQL analysis parameter of type <code>VARCHAR2</code>.</p>
<pre>
DBMS_SQLPA.SET_ANALYSIS_TASK_PARAMETER(
  task_name         IN VARCHAR2,
  parameter         IN VARCHAR2,
  value             IN VARCHAR2);
</pre>
<p>This form of the procedure updates the value of a SQL analysis parameter of type <code>NUMBER</code>.</p>
<pre>
DBMS_SQLPA.SET_ANALYSIS_TASK_PARAMETER(
  task_name         IN VARCHAR2,
  parameter         IN VARCHAR2,
  value             IN NUMBER);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref9539"></a>Parameters</p>
<div id="ARPLS68372" class="tblformal">
<p class="titleintable"><a id="sthref9540"></a><a id="sthref9541"></a>Table 139-10 SET_ANALYSIS_TASK_PARAMETER Procedure Parameters</p>
<table class="cellalignment1229" title="SET_ANALYSIS_TASK_PARAMETER Procedure Parameters " summary="This table describes Parameters used by the DBMS_SQLPA.RESET_TUNING_TASK subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t11">Parameter</th>
<th class="cellalignment1227" id="r1c2-t11">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t11" headers="r1c1-t11">
<p><code>task_name</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t11 r1c2-t11">
<p>Identifier of the task to execute</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t11" headers="r1c1-t11">
<p><code>parameter</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t11 r1c2-t11">
<p>Name of the parameter to set. The possible analysis parameters that can be set by this procedure are:</p>
<ul>
<li>
<p><code>APPLY_CAPTURED_COMPILENV</code>: indicates whether the advisor could use the compilation environment captured with the SQL statements. The default is 0 (that is, <code>NO</code>).</p>
</li>
<li>
<p><code>BASIC_FILTER</code>: basic filter for SQL tuning set</p>
</li>
<li>
<p><code>CELL_SIMULATION_ENABLED</code>: Set it to <code>'TRUE'</code> to simulate Exadata Cell effect on SQL tuning set. For more details, see the helper script <code>tcellsim.sql</code> in the <code>ADMIN</code> directory.</p>
</li>
<li>
<p><code>COMPARISON_METRIC</code>: specify an expression of execution statistics to use in performance comparison (Example: <code>buffer_gets</code>, <code>cpu_time</code> + <code>buffer_gets</code> * 10)</p>
</li>
<li>
<p><code>DATABASE_LINK</code>: can be set to the global name of a <code>PUBLIC</code> database link. When it is set, SQL Performance Analyzer will use the database link for all <code>TEST EXECUTE</code> and <code>EXPLAIN PLAN</code> operations by sending the SQL statements to the remote database to be processed remotely. The analysis results will still be stored on the local database.</p>
</li>
<li>
<p><code>DAYS_TO_EXPIRE</code>: number of days until the task is deleted</p>
</li>
<li>
<p><code>DEFAULT_EXECUTION_TYPE</code>: the task will default to this type of execution when none is specified by the <a href="#CHEFGHHI">EXECUTE_ANALYSIS_TASK Function &amp; Procedure</a>.</p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r4c1-t11" headers="r1c1-t11">
<p><code>parameter</code> (contd.)</p>
</td>
<td class="cellalignment1228" headers="r4c1-t11 r1c2-t11">
<ul>
<li>
<p><code>DISABLE_MULTI_EXEC</code>: SQL statements are executed multiple times and runtime statistics are then averaged. Set this parameter to <code>'TRUE'</code> to disable this capability. In this case, each SQL in the SQL tuning set is executed only once.</p>
</li>
<li>
<p><code>EXECUTION_DAYS_TO_EXPIRE</code>: number of days until the tasks's executions will be deleted (without deleting the task)</p>
</li>
<li>
<p><code>EXECUTE_FULLDML</code>: <code>TRUE</code> to execute DML statement fully, including acquiring row locks and modifying rows; <code>FALSE</code> (default) to execute only the query part of the DML without modifying data. When <code>TRUE</code>, SQL Performance Analyzer will issue a rollback following DML execution to prevent persistent changes from being made by the DML.</p>
</li>
<li>
<p><code>EXECUTION_NAME1</code>: name of the first task execution to analyze</p>
</li>
<li>
<p><code>EXECUTION_NAME2</code>: name of the second task execution to analyze</p>
</li>
<li>
<p><code>LOCAL_TIME_LIMIT</code>: per-statement time out (seconds)</p>
</li>
<li>
<p><code>METRIC_DELTA_THRESHOLD</code>: threshold of the difference between the SQL performance metric before and after the change. The default value is zero.</p>
</li>
<li>
<p><code>PLAN_FILTER</code>: plan filter for SQL tuning set (see <code>SELECT_SQLSET</code> for possible values)</p>
</li>
<li>
<p><code>RANK_MEASURE1</code>: first ranking measure for SQL tuning set</p>
</li>
<li>
<p><code>RANK_MEASURE2</code>: second possible ranking measure for SQL tuning set</p>
</li>
<li>
<p><code>RANK_MEASURE3</code>: third possible ranking measure for SQL tuning set</p>
</li>
<li>
<p><code>RESUME_FILTER</code>: a extra filter for SQL tuning sets besides <code>BASIC_FILTER</code></p>
</li>
<li>
<p><code>SQL_IMPACT_THRESHOLD</code>: threshold of a change impact on a SQL statement. Same as the previous parameter, but at the level of the SQL statement.</p>
</li>
<li>
<p><code>SQL_LIMIT</code>: maximum number of SQL statements to process</p>
</li>
<li>
<p><code>SQL_PERCENTAGE</code>: percentage filter of SQL tuning set statements</p>
</li>
<li>
<p><code>SQLSET_NAME</code>: name of the SQL tuning set to associate to the specified task or task execution. This parameter is mainly using in comparing two SQL tuning sets using SPA.</p>
</li>
<li>
<p><code>SQLSET_OWNER</code>: owner of the SQL tuning set specified using task parameter <code>SQLSET_NAME</code>.</p>
</li>
<li>
<p><code>TIME_LIMIT</code>: global time out (seconds)</p>
</li>
<li>
<p><code>WORKLOAD_IMPACT_THRESHOLD</code>: threshold of a SQL statement impact on a workload. Statements which workload change impact is below the absolute value of this threshold will be ignored and not considered for improvement or regression.</p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r5c1-t11" headers="r1c1-t11">
<p><code>value</code></p>
</td>
<td class="cellalignment1228" headers="r5c1-t11 r1c2-t11">
<p>New value of the specified parameter</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS68373" class="refsect2"><a id="CHDEHJAB"></a>
<hr />
<h3 class="refsect2"><a id="sthref9542"></a>SET_ANALYSIS_DEFAULT_PARAMETER Procedures</h3>
<p>This procedure sets the SQL analysis task parameter default value.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref9543"></a>Syntax</p>
<p>This form of the procedure updates the default value of an analyzer parameter of type <code>VARCHAR2</code>.</p>
<pre>
DBMS_SQLPA.SET_ANALYSIS_DEFAULT_PARAMETER(
   parameter    IN  VARCHAR2,
   value        IN  VARCHAR2);
</pre>
<p>This form of the procedure updates the <code>default</code> value of an analyzer parameter of type <code>NUMBER</code>.</p>
<pre>
DBMS_SQLPA.SET_ANALYSIS_DEFAULT_PARAMETER(
   parameter    IN  VARCHAR2,
   value        IN  NUMBER);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref9544"></a>Parameters</p>
<div id="ARPLS68374" class="tblformal">
<p class="titleintable"><a id="sthref9545"></a><a id="sthref9546"></a>Table 139-11 SET_ANALYSIS_DEFAULT_PARAMETER Procedure Parameters</p>
<table class="cellalignment1229" title="SET_ANALYSIS_DEFAULT_PARAMETER Procedure Parameters " summary="This table describes Parameters used by the DBMS_SQLPA.SET_ANALYSIS_DEFAULT_PARAMETER subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t12">Parameter</th>
<th class="cellalignment1227" id="r1c2-t12">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t12" headers="r1c1-t12">
<p><code>parameter</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t12 r1c2-t12">
<p>Name of the parameter to set. The possible analysis parameters that can be set by this procedure are:</p>
<ul>
<li>
<p><code>APPLY_CAPTURED_COMPILENV</code>: indicates whether the advisor could use the compilation environment captured with the SQL statements. The default is 0 (that is, <code>NO</code>).</p>
</li>
<li>
<p><code>BASIC_FILTER</code>: basic filter for SQL tuning set</p>
</li>
<li>
<p><code>COMPARISON_METRIC</code>: specify an expression of execution statistics to use in performance comparison (Example: <code>buffer_gets</code>, <code>cpu_time</code> + <code>buffer_gets</code> * 10)</p>
</li>
<li>
<p><code>DATABASE_LINK</code>: can be set to the global name of a <code>PUBLIC</code> database link. When it is set, SQL Performance Analyzer will use the database link for all <code>TEST EXECUTE</code> and <code>EXPLAIN PLAN</code> operations by sending the SQL statements to the remote database to be processed remotely. The analysis results will still be stored on the local database.</p>
</li>
<li>
<p><code>DAYS_TO_EXPIRE</code>: number of days until the task is deleted</p>
</li>
<li>
<p><code>DEFAULT_EXECUTION_TYPE</code>: the task will default to this type of execution when none is specified by the <a href="#CHEFGHHI">EXECUTE_ANALYSIS_TASK Function &amp; Procedure</a>.</p>
</li>
<li>
<p><code>EXECUTE_FULLDML</code>: <code>TRUE</code> to execute DML statement fully, including acquiring row locks and modifying rows; <code>FALSE</code> (default) to execute only the query part of the DML without modifying data. When <code>TRUE</code>, SQL Performance Analyzer will issue a rollback following DML execution to prevent persistent changes from being made by the DML.</p>
</li>
<li>
<p><code>EXECUTION_DAYS_TO_EXPIRE</code>: number of days until the tasks's executions will be deleted (without deleting the task)</p>
</li>
<li>
<p><code>EXECUTION_NAME1</code>: name of the first task execution to analyze</p>
</li>
<li>
<p><code>EXECUTION_NAME2</code>: name of the second task execution to analyze</p>
</li>
<li>
<p><code>LOCAL_TIME_LIMIT</code>: per-statement time out (seconds)</p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t12" headers="r1c1-t12">
<p><code>parameter</code> (contd.)</p>
</td>
<td class="cellalignment1228" headers="r3c1-t12 r1c2-t12">
<ul>
<li>
<p><code>PLAN_FILTER</code>: plan filter for SQL tuning set (see <code>SELECT_SQLSET</code> for possible values)</p>
</li>
<li>
<p><code>RANK_MEASURE1</code>: first ranking measure for SQL tuning set</p>
</li>
<li>
<p><code>RANK_MEASURE2</code>: second possible ranking measure for SQL tuning set</p>
</li>
<li>
<p><code>RANK_MEASURE3</code>: third possible ranking measure for SQL tuning set</p>
</li>
<li>
<p><code>RESUME_FILTER</code>: a extra filter for SQL tuning sets besides <code>BASIC_FILTER</code></p>
</li>
<li>
<p><code>SQL_IMPACT_THRESHOLD</code>: threshold of a change impact on a SQL statement. Same as the previous parameter, but at the level of the SQL statement.</p>
</li>
<li>
<p><code>SQL_LIMIT</code>: maximum number of SQL statements to process</p>
</li>
<li>
<p><code>SQL_PERCENTAGE</code>: percentage filter of SQL tuning set statements</p>
</li>
<li>
<p><code>TIME_LIMIT</code>: global time out (seconds)</p>
</li>
<li>
<p><code>WORKLOAD_IMPACT_THRESHOLD</code>: threshold of a SQL statement impact on a workload. Statements which workload change impact is below the absolute value of this threshold will be ignored and not considered for improvement or regression.</p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r4c1-t12" headers="r1c1-t12">
<p><code>value</code></p>
</td>
<td class="cellalignment1228" headers="r4c1-t12 r1c2-t12">
<p>New value of the specified parameter</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" --></div>
<!-- class="refsect1" --></div>
<!-- class="refentry" --></div>
<!-- class="chapter" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment1219">
<tr>
<td class="cellalignment1228">
<table class="cellalignment1224">
<tr>
<td class="cellalignment1223"><a href="d_sqldiag.htm"><img width="24" height="24" src="../../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment1223"><a href="d_sqltun.htm"><img width="24" height="24" src="../../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;1996, 2013,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment1231">
<table class="cellalignment1222">
<tr>
<td class="cellalignment1223"><a href="../../index.htm"><img width="24" height="24" src="../../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment1223"><a href="../../nav/portal_booklist.htm"><img width="24" height="24" src="../../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment1223"><a href="toc.htm"><img width="24" height="24" src="../../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment1223"><a href="index.htm"><img width="24" height="24" src="../../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment1223"><a href="../../nav/mindx.htm"><img width="24" height="24" src="../../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment1223"><a href="../../dcommon/html/feedback.htm"><img width="24" height="24" src="../../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>
</body>
</html>
