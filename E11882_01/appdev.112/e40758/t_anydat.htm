<!DOCTYPE html>
<html lang="en" >
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1">
<meta charset="utf-8">
<title>ANYDATA TYPE</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Version 5.1.2 Build 737" />
<meta name="dcterms.created" content="2013-07-19T18:56:13Z" />
<meta name="robots" content="all" />
<meta name="dcterms.title" content="Database PL/SQL Packages and Types Reference" />
<meta name="dcterms.identifier" content="E40758-03" />
<meta name="dcterms.isVersionOf" content="ARPLS" />
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;1996, 2013,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved." />
<link rel="Start" href="../../index.htm" title="Home" type="text/html" />
<link rel="Copyright" href="../../dcommon/html/cpyr.htm" title="Copyright" type="text/html" />

<script type="application/javascript"  src="../../dcommon/js/headfoot.js"></script>
<script type="application/javascript"  src="../../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html" />
<link rel="Index" href="index.htm" title="Index" type="text/html" />
<link rel="Prev" href="w_wdoclo.htm" title="Previous" type="text/html" />
<link rel="Next" href="t_anyset.htm" title="Next" type="text/html" />
<link rel="alternate" href="../e40758.pdf" title="PDF version" type="application/pdf" />
<link rel="schema.dcterms" href="http://purl.org/dc/terms/" />
<link rel="stylesheet" href="../../dcommon/css/fusiondoc.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/header.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/footer.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/fonts.css">
<link rel="stylesheet" href="../../dcommon/css/foundation.css">
<link rel="stylesheet" href="../../dcommon/css/codemirror.css">
<link rel="stylesheet" type="text/css" title="Default" href="../../nav/css/html5.css">
<link rel="stylesheet" href="../../dcommon/css/respond-480-tablet.css">
<link rel="stylesheet" href="../../dcommon/css/respond-768-laptop.css">
<link rel="stylesheet" href="../../dcommon/css/respond-1140-deskop.css">
<script type="application/javascript" src="../../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">245/265</span> <!-- End Header -->
<div id="ARPLS077" class="chapter"><a id="BEHEICHI"></a><a id="i1000038"></a>
<h1 class="chapter"><span class="secnum">241</span> ANYDATA TYPE</h1>
<p>An <code><a id="sthref18264"></a>ANYDATA</code> TYPE contains an instance of a given type, plus a description of the type. In this sense, an <code>ANYDATA</code> is self-describing. An <code>ANYDATA</code> can be persistently stored in the database.</p>
<p>This chapter contains the following topics:</p>
<ul>
<li>
<p><a href="#BEHGFEDI">Using ANYDATA TYPE</a></p>
<ul>
<li>
<p>Restrictions</p>
</li>
<li>
<p>Operational Notes</p>
</li>
</ul>
</li>
<li>
<p><a href="#BEHFBEJH">Summary of ANYDATA Subprograms</a></p>
</li>
</ul>
<div class="refentry"><a id="BEHGFEDI"></a>
<hr />
<div id="ARPLS71602" class="refsect1">
<h2 class="refsect1">Using ANYDATA TYPE</h2>
<ul>
<li>
<p><a href="#i1001302">Restrictions</a></p>
</li>
<li>
<p><a href="#i1001307">Operational Notes</a></p>
</li>
</ul>
<div id="ARPLS71603" class="refsect2"><a id="i1001302"></a>
<hr />
<h3 class="refsect2">Restrictions</h3>
<p>Persistent storage of <code>ANYDATA</code> instances whose type contains embedded LOBs other than <code>BFILE</code>s is not currently supported.</p>
</div>
<!-- class="refsect2" -->
<div id="ARPLS71604" class="refsect2"><a id="i1001307"></a>
<hr />
<h3 class="refsect2">Operational Notes</h3>
<ul>
<li>
<p><a href="#i1001265">Construction</a></p>
</li>
<li>
<p><a href="#i1001287">Access</a></p>
</li>
</ul>
<div id="ARPLS71605" class="refsect3"><a id="i1001265"></a>
<h4 class="refsect3">Construction</h4>
<p>There are 2 ways to construct an <code>ANYDATA</code>. The <code>CONVERT*</code> calls enable construction of the <code>ANYDATA</code> in its entirety with a single call. They serve as explicit CAST functions from any type in the Oracle ORDBMS to <code>ANYDATA</code>.</p>
<pre>
STATIC FUNCTION ConvertBDouble(dbl IN BINARY_DOUBLE) return ANYDATA,
STATIC FUNCTION ConvertBfile(b IN BFILE) RETURN ANYDATA,
STATIC FUNCTION ConvertBFloat(fl IN BINARY_FLOAT) return ANYDATA,
STATIC FUNCTION ConvertBlob(b IN BLOB) RETURN ANYDATA,
STATIC FUNCTION ConvertChar(c IN CHAR) RETURN ANYDATA,
STATIC FUNCTION ConvertClob(c IN CLOB) RETURN ANYDATA,
STATIC FUNCTION ConvertCollection(col IN "collection_type") RETURN ANYDATA,
STATIC FUNCTION ConvertDate(dat IN DATE) RETURN ANYDATA,
STATIC FUNCTION ConvertIntervalDS(inv IN INTERVAL DAY TO SECOND) return ANYDATA,
STATIC FUNCTION ConvertIntervalYM(invIN INTERVAL YEAR TO MONTH) return ANYDATA,
STATIC FUNCTION ConvertNchar(nc IN NCHAR) return ANYDATA,
STATIC FUNCTION ConvertNClob(nc IN NCLOB) return ANYDATA,
STATIC FUNCTION ConvertNumber(num IN NUMBER) RETURN ANYDATA,
STATIC FUNCTION ConvertNVarchar2(nc IN NVARCHAR2) return ANYDATA,
STATIC FUNCTION ConvertObject(obj IN "&lt;object_type&gt;") RETURN ANYDATA,
STATIC FUNCTION ConvertRaw(r IN RAW) RETURN ANYDATA,
STATIC FUNCTION ConvertRef(rf IN REF "&lt;object_type&gt;") RETURN ANYDATA,
STATIC FUNCTION ConvertTimestamp(ts IN TIMESTAMP) return ANYDATA,
STATIC FUNCTION ConvertTimestampTZ(ts IN TIMESTAMP WITH TIMEZONE) return ANYDATA,
STATIC FUNCTION ConvertTimestampLTZ(ts IN TIMESTAMP WITH LOCAL TIMEZONE) return ANYDATA,
STATIC FUNCTION ConvertURowid(rid IN UROWID) return ANYDATA,
STATIC FUNCTION ConvertVarchar(c IN VARCHAR) RETURN ANYDATA,
STATIC FUNCTION ConvertVarchar2(c IN VARCHAR2) RETURN ANYDATA,
</pre>
<p>The second way to construct an <code>ANYDATA</code> is a piece by piece approach. The <a href="#i996846">BEGINCREATE Static Procedure</a> call begins the construction process and <a href="#i1000002">ENDCREATE Member Procedure</a> call finishes the construction process. In between these two calls, the individual attributes of an object type or the elements of a collection can be set using <code>SET*</code> calls. For piece by piece access of the attributes of objects and elements of collections, the <a href="#i996876">PIECEWISE Member Procedure</a> should be invoked prior to <code>GET*</code> calls.</p>
<p>Note: The <code>ANYDATA</code> has to be constructed or accessed sequentially starting from its first attribute (or collection element). The <code>BEGINCREATE</code> call automatically begins the construction in a piece-wise mode. There is no need to call <code>PIECEWISE</code> immediately after <code>BEGINCREATE</code>. <code>ENDCREATE</code> should be called to finish the construction process (before which any access calls can be made).</p>
</div>
<!-- class="refsect3" -->
<div id="ARPLS71606" class="refsect3"><a id="i1001287"></a>
<h4 class="refsect3">Access</h4>
<p>Access functions are available based on SQL. These functions do not throw exceptions on type-mismatch. Instead, they return <code>NULL</code> if the type of the <code>ANYDATA</code> does not correspond to the type of access. If you wish to use only <code>ANYDATA</code> functions of the appropriate types returned in a query, you should use a <code>WHERE</code> clause which uses <code>GETTYPENAME</code> and choose the type you are interested in (say "<code>SYS</code>.<code>NUMBER</code>"). Each of these functions returns the value of a specified datatype inside a <code>SYS.ANYDATA</code> wrapper.</p>
<pre>
MEMBER FUNCTION AccessBDouble(self IN ANYDATA) return BINARY_DOUBLE
   DETERMINISTIC,
MEMBER FUNCTION AccessBfile(self IN ANYDATA) return BFILE,
MEMBER FUNCTION AccessBFloat(self IN ANYDATA) return BINARY_FLOAT
   DETERMINISTIC,
MEMBER FUNCTION AccessBlob(self IN ANYDATA) return BLOB,
MEMBER FUNCTION AccessChar(self IN ANYDATA) return CHAR,
MEMBER FUNCTION AccessClob(self IN ANYDATA) return CLOB,
MEMBER FUNCTION AccessDate(self IN ANYDATA) return DATE,
MEMBER FUNCTION AccessIntervalYM(self IN ANYDATA) return INTERVAL YEAR TO MONTH,
MEMBER FUNCTION AccessIntervalDS(self IN ANYDATA) return INTERVAL DAY TO SECOND,
MEMBER FUNCTION AccessNchar(self IN ANYDATA) return NCHAR,
MEMBER FUNCTION AccessNClob(self IN ANYDATA) return NCLOB
MEMBER FUNCTION AccessNumber(self IN ANYDATA) return NUMBER,
MEMBER FUNCTION AccessNVarchar2(self IN ANYDATA) return NVARCHAR2,
MEMBER FUNCTION AccessRaw(self IN ANYDATA) return RAW,
MEMBER FUNCTION AccessTimestamp(self IN ANYDATA) return TIMESTAMP,
MEMBER FUNCTION AccessTimestampLTZ(self IN ANYDATA) return TIMESTAMP WITH LOCAL 
   TIMEZONE,
MEMBER FUNCTION AccessTimestampTZ(self IN ANYDATA) return TIMESTAMP WITH 
   TIMEZONE,
MEMBER FUNCTION AccessURowid(self IN ANYDATA) return UROWID DETERMINISTIC
MEMBER FUNCTION AccessVarchar(self IN ANYDATA) return VARCHAR,
MEMBER FUNCTION AccessVarchar2(self IN ANYDATA) return VARCHAR2,
</pre></div>
<!-- class="refsect3" --></div>
<!-- class="refsect2" --></div>
<!-- class="refsect1" -->
<a id="BEHFBEJH"></a>
<hr />
<div id="ARPLS71607" class="refsect1">
<h2 class="refsect1">Summary of ANYDATA Subprograms</h2>
<div id="ARPLS71608" class="tblformal">
<p class="titleintable"><a id="sthref18265"></a><a id="sthref18266"></a>Table 241-1 <span class="bolditalic">ANYDATA Type Subprograms</span></p>
<table class="cellalignment1229" title="ANYDATA Type Subprograms" summary="This table lists the ANYDATA Type subprograms in alphabetical order and briefly describes them." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t2">Subprogram</th>
<th class="cellalignment1227" id="r1c2-t2">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t2" headers="r1c1-t2">
<p><a href="#i996846">BEGINCREATE Static Procedure</a></p>
</td>
<td class="cellalignment1228" headers="r2c1-t2 r1c2-t2">
<p>Begins creation process on a new <code>ANYDATA</code></p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t2" headers="r1c1-t2">
<p><a href="#i1000002">ENDCREATE Member Procedure</a></p>
</td>
<td class="cellalignment1228" headers="r3c1-t2 r1c2-t2">
<p>Ends creation of an <code>ANYDATA</code></p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r4c1-t2" headers="r1c1-t2">
<p><a href="#i999815">GET* Member Functions</a></p>
</td>
<td class="cellalignment1228" headers="r4c1-t2 r1c2-t2">
<p>Gets the current data value (which should be of appropriate type)</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r5c1-t2" headers="r1c1-t2">
<p><a href="#i1000029">GETTYPE Member Function</a></p>
</td>
<td class="cellalignment1228" headers="r5c1-t2 r1c2-t2">
<p>Gets the Type of the <code>ANYDATA</code></p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r6c1-t2" headers="r1c1-t2">
<p><a href="#i1000030">GETTYPENAME Member Function</a></p>
</td>
<td class="cellalignment1228" headers="r6c1-t2 r1c2-t2">
<p>Get the fully qualified type name for the <code>ANYDATA</code></p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r7c1-t2" headers="r1c1-t2">
<p><a href="#i996876">PIECEWISE Member Procedure</a></p>
</td>
<td class="cellalignment1228" headers="r7c1-t2 r1c2-t2">
<p>Sets the <code>MODE</code> of access of the current data value to be an attribute at a time (if the data value is of <code>TYPECODE_OBJECT</code>)</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r8c1-t2" headers="r1c1-t2">
<p><a href="#BEHGHHFG">SET* Member Procedures</a></p>
</td>
<td class="cellalignment1228" headers="r8c1-t2 r1c2-t2">
<p>Sets the current data value.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<div id="ARPLS71609" class="refsect2"><a id="i996846"></a>
<hr />
<h3 class="refsect2"><a id="sthref18267"></a>BEGINCREATE Static Procedure</h3>
<p>This procedure begins the creation process on a new <code>ANYDATA</code>.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18268"></a>Syntax</p>
<pre>
STATIC PROCEDURE BeginCreate(
   dtype          IN OUT NOCOPY AnyType,
   adata          OUT NOCOPY ANYDATA);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18269"></a>Parameters</p>
<div id="ARPLS71610" class="tblformal">
<p class="titleintable"><a id="sthref18270"></a><a id="sthref18271"></a>Table 241-2 BEGINCREATE Procedure Parameters</p>
<table class="cellalignment1229" title="BEGINCREATE Procedure Parameters" summary="This table describes the Parameters of the ANYDATA Type member subprogram BEGINCREATE." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t3">Parameter</th>
<th class="cellalignment1227" id="r1c2-t3">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t3" headers="r1c1-t3">
<p><code>dtype</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t3 r1c2-t3">
<p>The type of the <code>ANYDATA</code>. (Should correspond to <code>OCI_TYPECODE_OBJECT</code> or a Collection typecode.)</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t3" headers="r1c1-t3">
<p><code>adata</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t3 r1c2-t3">
<p>ANYDATA being constructed.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18272"></a>Exception</p>
<p><code>DBMS_TYPES.INVALID_PARAMETERS</code>: dtype is invalid (not fully constructed, and similar deficits.)</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18273"></a>Usage Notes</p>
<p>There is no need to call <code>PIECEWISE</code> immediately after this call. The construction process begins in a piece-wise manner automatically.</p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS71611" class="refsect2"><a id="i1000002"></a>
<hr />
<h3 class="refsect2"><a id="sthref18274"></a>ENDCREATE Member Procedure</h3>
<p>This procedure ends creation of an <code>ANYDATA</code>. Other creation functions cannot be called after this call.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18275"></a>Syntax</p>
<pre>
MEMBER PROCEDURE EndCreate(
   self         IN OUT NOCOPY ANYDATA);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18276"></a>Parameters</p>
<div id="ARPLS71612" class="tblformal">
<p class="titleintable"><a id="sthref18277"></a><a id="sthref18278"></a>Table 241-3 ENDCREATE Procedure Parameter</p>
<table class="cellalignment1229" title="ENDCREATE Procedure Parameter" summary="This table describes the Parameters of the ANYDATA Type member subprogram ENDCREATE." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t4">Parameter</th>
<th class="cellalignment1227" id="r1c2-t4">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t4" headers="r1c1-t4">
<p><code>self</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t4 r1c2-t4">
<p>An <code>ANYDATA</code>.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS71613" class="refsect2"><a id="i999815"></a>
<hr />
<h3 class="refsect2"><a id="sthref18279"></a>GET* Member Functions</h3>
<p>These functions get the current data value (which should be of appropriate type).</p>
<p>The type of the current data value depends on the MODE with which we are accessing (depending on whether we have invoked the <code>PIECEWISE</code> call).</p>
<p>If <code>PIECEWISE</code> has NOT been called, we are accessing the <code>ANYDATA</code> in its entirety and the type of the data value should match the type of the <code>ANYDATA</code>.</p>
<p>If <code>PIECEWISE</code> has been called, we are accessing the <code>ANYDATA</code> piece-wise. The type of the data value should match the type of the attribute (or collection element) at the current position.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18280"></a>Syntax</p>
<pre>
MEMBER FUNCTION GetBDouble(
   self         IN ANYDATA,
   dbl          OUT NOCOPY BINARY_DOUBLE)
RETURN PLS_INTEGER;

MEMBER FUNCTION GetBfile(
   self         IN ANYDATA,
   b            OUT NOCOPY BFILE)
   RETURN       PLS_INTEGER;

MEMBER FUNCTION GetBFloat(
   self         IN ANYDATA,
   fl           OUT NOCOPY BINARY_FLOAT)
RETURN PLS_INTEGER;

MEMBER FUNCTION GetBlob(
   self         IN ANYDATA,
   b            OUT NOCOPY BLOB)
   RETURN       PLS_INTEGER;

MEMBER FUNCTION GetChar(
   self         IN ANYDATA,
   c            OUT NOCOPY CHAR)
   RETURN       PLS_INTEGER;

MEMBER FUNCTION GetClob(
   self         IN ANYDATA,
   c            OUT NOCOPY CLOB)
   RETURN       PLS_INTEGER;

MEMBER FUNCTION GetCollection(
   self         IN ANYDATA,
   col          OUT NOCOPY "&lt;collection_type&gt;")
   RETURN       PLS_INTEGER;

MEMBER FUNCTION GetDate(
   self         IN ANYDATA,
   dat          OUT NOCOPY DATE)
   RETURN       PLS_INTEGER;

MEMBER FUNCTION GetIntervalDS(
   self         IN ANYDATA,
   inv          OUT NOCOPY INTERVAL DAY TO SECOND) 
 RETURN         PLS_INTEGER;

MEMBER FUNCTION GetIntervalYM(
   self         IN ANYDATA,
   inv          OUT NOCOPY INTERVAL YEAR TO MONTH) 
 RETURN         PLS_INTEGER;

MEMBER FUNCTION GetNchar(
   self         IN ANYDATA, 
   nc           OUT NOCOPY NCHAR) 
 RETURN         PLS_INTEGER;

MEMBER FUNCTION GetNClob(
   self         IN ANYDATA, 
   nc           OUT NOCOPY NCLOB) 
 RETURN         PLS_INTEGER;

MEMBER FUNCTION GetNumber(
   self         IN ANYDATA,
   num          OUT NOCOPY NUMBER)
   RETURN       PLS_INTEGER;

MEMBER FUNCTION GetNVarchar2(
   self         IN ANYDATA, 
   nc           OUT NOCOPY NVARCHAR2) 
 RETURN         PLS_INTEGER;

MEMBER FUNCTION GetObject(
   self         IN ANYDATA,
   obj          OUT NOCOPY "&lt;object_type&gt;")
   RETURN       PLS_INTEGER;

MEMBER FUNCTION GetRaw(
   self         IN ANYDATA,
   r            OUT NOCOPY RAW)
   RETURN       PLS_INTEGER;

MMEMBER FUNCTION GetRef(
   self         IN ANYDATA,
   rf           OUT NOCOPY REF "&lt;object_type&gt;")
   RETURN       PLS_INTEGER;

MEMBER FUNCTION GetTimestamp(
   self         IN ANYDATA, 
   ts           OUT NOCOPY TIMESTAMP)
 RETURN PLS_INTEGER;

MEMBER FUNCTION GetTimestampTZ(
   self         IN ANYDATA, 
   ts           OUT NOCOPY TIMESTAMP WITH TIME ZONE) 
 RETURN PLS_INTEGER;

MEMBER FUNCTION GetTimestampLTZ(
   self         IN ANYDATA,
   ts           OUT NOCOPY TIMESTAMP WITH LOCAL TIME ZONE) 
 RETURN PLS_INTEGER;

MEMBER FUNCTION GetVarchar(
   self         IN ANYDATA,
   c            OUT NOCOPY VARCHAR)
   RETURN       PLS_INTEGER;

MEMBER FUNCTION GetVarchar2(
   self         IN ANYDATA,
   c            OUT NOCOPY VARCHAR2)
   RETURN       PLS_INTEGER;
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18281"></a>Parameters</p>
<div id="ARPLS71614" class="tblformal">
<p class="titleintable"><a id="sthref18282"></a><a id="sthref18283"></a>Table 241-4 GET* Function Parameter</p>
<table class="cellalignment1229" title="GET* Function Parameter" summary="This table describes the Parameters of the ANYDATA Type member subprogram GET." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t5">Parameter</th>
<th class="cellalignment1227" id="r1c2-t5">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t5" headers="r1c1-t5">
<p><code>self</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t5 r1c2-t5">
<p>An ANYDATA.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t5" headers="r1c1-t5">
<p><code>num</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t5 r1c2-t5">
<p>The number to be obtained.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18284"></a>Return Values</p>
<p><code>DBMS_TYPES</code>.<code>SUCCESS</code> or <code>DBMS_TYPES</code>.<code>NO_DATA</code></p>
<p>The return value is relevant only if <code>PIECEWISE</code> has been already called (for a collection). In such a case, DBMS_TYPES.NO_DATA signifies the end of the collection when all elements have been accessed.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18285"></a>Exceptions</p>
<p><code>DBMS_TYPES.TYPE_MISMATCH</code>: When the expected type is different from the passed in type.</p>
<p><code>DBMS_TYPES.INVALID_PARAMETERS</code>: Invalid Parameters (if it is not appropriate to add a number at this point in the creation process).</p>
<p><code>DBMS_TYPES.INCORRECT_USAGE</code>: Incorrect usage.</p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS71615" class="refsect2"><a id="i1000029"></a>
<hr />
<h3 class="refsect2"><a id="sthref18286"></a>GETTYPE Member Function</h3>
<p>This function gets the typecode of the <code>ANYDATA</code>.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18287"></a>Syntax</p>
<pre>
MEMBER FUNCTION GETTYPE(
   self          IN ANYDATA,
   typ           OUT NOCOPY AnyType)
   RETURN        PLS_INTEGER;
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18288"></a>Parameters</p>
<div id="ARPLS71616" class="tblformal">
<p class="titleintable"><a id="sthref18289"></a><a id="sthref18290"></a>Table 241-5 GETTYPE Function Parameter</p>
<table class="cellalignment1229" title="GETTYPE Function Parameter" summary="This table describes the Parameters of the ANYDATA Type member subprogram GETTYPE." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t6">Parameter</th>
<th class="cellalignment1227" id="r1c2-t6">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t6" headers="r1c1-t6">
<p><code>self</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t6 r1c2-t6">
<p>An <code>ANYDATA</code>.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t6" headers="r1c1-t6">
<p><code>typ</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t6 r1c2-t6">
<p>The AnyType corresponding to the <code>ANYDATA</code>. May be <code>NULL</code> if it does not represent a user-defined type.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18291"></a>Return Values</p>
<p>The typecode corresponding to the type of the <code>ANYDATA</code>.</p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS71617" class="refsect2"><a id="i1000030"></a>
<hr />
<h3 class="refsect2"><a id="sthref18292"></a>GETTYPENAME Member Function</h3>
<p>This function gets the fully qualified type name for the ANYDATA.</p>
<p>If the <code>ANYDATA</code> is based on a built-in type, this function will return NUMBER and other relevant information.</p>
<p>If it is based on a user defined type, this function will return <span class="italic">schema_name</span>.<span class="italic">type_name</span>, for example, SCOTT.FOO.</p>
<p>If it is based on a transient anonymous type, this function will return NULL.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18293"></a>Syntax</p>
<pre>
MEMBER FUNCTION GETTYPENAME(
   self         IN ANYDATA)
   RETURN       VARCHAR2;
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18294"></a>Parameters</p>
<div id="ARPLS71618" class="tblformal">
<p class="titleintable"><a id="sthref18295"></a><a id="sthref18296"></a>Table 241-6 GETTYPENAME Function Parameter</p>
<table class="cellalignment1229" title="GETTYPENAME Function Parameter" summary="This table describes the Parameters of the ANYDATA Type member subprogram GETTYPENAME." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t7">Parameter</th>
<th class="cellalignment1227" id="r1c2-t7">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t7" headers="r1c1-t7">
<p><code>self</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t7 r1c2-t7">
<p>An <code>ANYDATA</code>.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18297"></a>Return Values</p>
<p>Type name of the <code>ANYDATA</code>.</p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS71619" class="refsect2"><a id="i996876"></a>
<hr />
<h3 class="refsect2"><a id="sthref18298"></a>PIECEWISE Member Procedure</h3>
<p>This procedure sets the MODE of access of the current data value to be an attribute at a time (if the data value is of <code>TYPECODE_OBJECT</code>).</p>
<p>It sets the MODE of access of the data value to be a collection element at a time (if the data value is of collection type). Once this call has been made, subsequent calls to <code>SET*</code> and <code>GET*</code> will sequentially obtain individual attributes or collection elements.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18299"></a>Syntax</p>
<pre>
MEMBER PROCEDURE PIECEWISE(
   self         IN OUT NOCOPY ANYDATA);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18300"></a>Parameters</p>
<div id="ARPLS71620" class="tblformal">
<p class="titleintable"><a id="sthref18301"></a><a id="sthref18302"></a>Table 241-7 PIECEWISE Procedure Parameters</p>
<table class="cellalignment1229" title="PIECEWISE Procedure Parameters" summary="This table describes the Parameters of the ANYDATA Type member subprogram PIECEWISE." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t8">Parameter</th>
<th class="cellalignment1227" id="r1c2-t8">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t8" headers="r1c1-t8">
<p><code>self</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t8 r1c2-t8">
<p>The current data value.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18303"></a>Exceptions</p>
<ul>
<li>
<p><code>DBMS_TYPES.INVALID_PARAMETERS</code></p>
</li>
<li>
<p><code>DBMS_TYPES.INCORRECT_USAGE</code>: On incorrect usage.</p>
</li>
</ul>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18304"></a>Usage Notes</p>
<p>The current data value must be of an <code>OBJECT</code> or <code>COLLECTION</code> type before this call can be made.</p>
<p>Piece-wise construction and access of nested attributes that are of object or collection types is not supported.</p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS71621" class="refsect2"><a id="BEHGHHFG"></a>
<hr />
<h3 class="refsect2"><a id="sthref18305"></a>SET* Member Procedures</h3>
<p>Sets the current data value.</p>
<p>This is a list of procedures that should be called depending on the type of the current data value. The type of the data value should be the type of the attribute at the current position during the piece-wise construction process.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18306"></a>Syntax</p>
<pre>
MEMBER PROCEDURE SETBDOUBLE(
   self        IN OUT NOCOPY ANYDATA,
   dbl         IN BINARY_DOUBLE,
   last_elem   IN boolean DEFAULT FALSE);

MEMBER PROCEDURE SETBFILE(
   self        IN OUT NOCOPY ANYDATA,
   b           IN BFILE,
   last_elem   IN boolean DEFAULT FALSE);

MEMBER PROCEDURE SETBFLOAT(
   self        IN OUT NOCOPY ANYDATA, 
   fl          IN            BINARY_FLOAT,
   last_elem   IN            boolean DEFAULT FALSE);

MEMBER PROCEDURE SETBLOB(
   self        IN OUT NOCOPY ANYDATA, 
   b           IN BLOB,
   last_elem   IN boolean DEFAULT FALSE);

MEMBER PROCEDURE SETCHAR(
   self        IN OUT NOCOPY ANYDATA, 
   c           IN CHAR,
   last_elem   IN boolean DEFAULT FALSE);

MEMBER PROCEDURE SETCLOB(
   self        IN OUT NOCOPY ANYDATA,
   c           IN CLOB,
   last_elem   IN boolean DEFAULT FALSE);

MEMBER PROCEDURE SETCOLLECTION(
   self        IN OUT NOCOPY ANYDATA,
   col         IN "&lt;collectyion_type&gt;",
   last_elem   IN boolean DEFAULT FALSE);

MEMBER PROCEDURE SETDATE(
   self        IN OUT NOCOPY ANYDATA, 
   dat         IN DATE,
   last_elem   IN boolean DEFAULT FALSE);

MEMBER PROCEDURE SETINTERVALDS(
   self        IN OUT NOCOPY ANYDATA,
   inv         IN INTERVAL DAY TO SECOND,
   last_elem IN boolean DEFAULT FALSE);
  
MEMBER PROCEDURE SETINTERVALYM(
   self        IN OUT NOCOPY ANYDATA,
   inv         IN INTERVAL YEAR TO MONTH,
   last_elem   IN boolean DEFAULT FALSE);
  
MEMBER PROCEDURE SETNCHAR(
   self        IN OUT NOCOPY ANYDATA,
   nc          IN NCHAR, 
   last_elem   IN boolean DEFAULT FALSE);
  
MEMBER PROCEDURE SETNCLOB(
   self        IN OUT NOCOPY ANYDATA,
   nc          IN NClob, 
   last_elem   IN boolean DEFAULT FALSE);

MEMBER PROCEDURE SETNUMBER(
   self        IN OUT NOCOPY ANYDATA, 
   num         IN NUMBER,
   last_elem   IN boolean DEFAULT FALSE);

MEMBER PROCEDURE SETNVARCHAR2(
   self        IN OUT NOCOPY ANYDATA,
   nc          IN NVarchar2, 
   last_elem   IN boolean DEFAULT FALSE),
  
MEMBER PROCEDURE SETOBJECT(
   self        IN OUT NOCOPY ANYDATA,
   obj         IN "&lt;object_type&gt;",
   last_elem   IN boolean DEFAULT FALSE);

MEMBER PROCEDURE SETRAW(
   self        IN OUT NOCOPY ANYDATA, 
   r           IN RAW,
   last_elem   IN boolean DEFAULT FALSE);

MEMBER PROCEDURE SETREF(
   self        IN OUT NOCOPY ANYDATA,
   rf          IN REF "&lt;object_type&gt;",
   last_elem   IN boolean DEFAULT FALSE);

MEMBER PROCEDURE SETTIMESTAMP(
   self       IN OUT NOCOPY ANYDATA, 
   ts         IN TIMESTAMP,
   last_elem  IN BOOLEAN DEFAULT FALSE);
  
MEMBER PROCEDURE SETTIMESTAMPTZ(self IN OUT NOCOPY ANYDATA, 
   ts          IN TIMESTAMP WITH TIME ZONE,
   last_elem   IN BOOLEAN DEFAULT FALSE);
  
MEMBER PROCEDURE SETTIMESTAMPLTZ(
   self IN OUT NOCOPY ANYDATA,
   ts IN TIMESTAMP WITH LOCAL TIME ZONE,
   last_elem IN boolean DEFAULT FALSE),
  
MEMBER PROCEDURE SETVARCHAR(
   self        IN OUT NOCOPY ANYDATA, 
   c           IN VARCHAR,
   last_elem   IN boolean DEFAULT FALSE);

MEMBER PROCEDURE SETVARCHAR2(
   self        IN OUT NOCOPY ANYDATA,
   c           IN VARCHAR2, 
   last_elem   IN boolean DEFAULT FALSE);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18307"></a>Parameters</p>
<div id="ARPLS71622" class="tblformal">
<p class="titleintable"><a id="sthref18308"></a><a id="sthref18309"></a>Table 241-8 SET* Procedure Parameters</p>
<table class="cellalignment1229" title="SET* Procedure Parameters" summary="This table describes the Parameters of the ANYDATA Type member subprogram SET." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t9">Parameter</th>
<th class="cellalignment1227" id="r1c2-t9">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t9" headers="r1c1-t9">
<p><code>self</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t9 r1c2-t9">
<p>An <code>ANYDATA</code>.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t9" headers="r1c1-t9">
<p><code>num</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t9 r1c2-t9">
<p>The number, and associated information, that is to be set.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r4c1-t9" headers="r1c1-t9">
<p><code>last_elem</code></p>
</td>
<td class="cellalignment1228" headers="r4c1-t9 r1c2-t9">
<p>Relevant only if <code>ANYDATA</code> represents a collection.</p>
<p>Set to <code>TRUE</code> if it is the last element of the collection, <code>FALSE</code> otherwise.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18310"></a>Exceptions</p>
<ul>
<li>
<p><code>DBMS_TYPES.INVALID_PARAMETERS</code>: Invalid Parameters (if it is not appropriate to add a number at this point in the creation process).</p>
</li>
<li>
<p><code>DBMS_TYPES.INCORRECT_USAGE</code>: Incorrect usage.</p>
</li>
<li>
<p><code>DBMS_TYPES.TYPE_MISMATCH</code>: When the expected type is different from the passed in type.</p>
</li>
</ul>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18311"></a>Usage Notes</p>
<p>When <code>BEGINCREATE</code> is called, construction has already begun in a piece-wise fashion. Subsequent calls to <code>SET*</code> will set the successive attribute values.</p>
<p>If the <code>ANYDATA</code> is a standalone collection, the <code>SET*</code> call will set the successive collection elements.</p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" --></div>
<!-- class="refsect1" --></div>
<!-- class="refentry" --></div>
<!-- class="chapter" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment1219">
<tr>
<td class="cellalignment1228">
<table class="cellalignment1224">
<tr>
<td class="cellalignment1223"><a href="w_wdoclo.htm"><img width="24" height="24" src="../../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment1223"><a href="t_anyset.htm"><img width="24" height="24" src="../../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;1996, 2013,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment1231">
<table class="cellalignment1222">
<tr>
<td class="cellalignment1223"><a href="../../index.htm"><img width="24" height="24" src="../../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment1223"><a href="../../nav/portal_booklist.htm"><img width="24" height="24" src="../../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment1223"><a href="toc.htm"><img width="24" height="24" src="../../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment1223"><a href="index.htm"><img width="24" height="24" src="../../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment1223"><a href="../../nav/mindx.htm"><img width="24" height="24" src="../../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment1223"><a href="../../dcommon/html/feedback.htm"><img width="24" height="24" src="../../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>
</body>
</html>
