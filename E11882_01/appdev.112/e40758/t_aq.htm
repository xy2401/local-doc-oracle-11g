<!DOCTYPE html>
<html lang="en" >
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1">
<meta charset="utf-8">
<title>Oracle Streams AQ TYPEs</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Version 5.1.2 Build 737" />
<meta name="dcterms.created" content="2013-07-19T18:56:13Z" />
<meta name="robots" content="all" />
<meta name="dcterms.title" content="Database PL/SQL Packages and Types Reference" />
<meta name="dcterms.identifier" content="E40758-03" />
<meta name="dcterms.isVersionOf" content="ARPLS" />
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;1996, 2013,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved." />
<link rel="Start" href="../../index.htm" title="Home" type="text/html" />
<link rel="Copyright" href="../../dcommon/html/cpyr.htm" title="Copyright" type="text/html" />

<script type="application/javascript"  src="../../dcommon/js/headfoot.js"></script>
<script type="application/javascript"  src="../../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html" />
<link rel="Index" href="index.htm" title="Index" type="text/html" />
<link rel="Prev" href="t_anytyp.htm" title="Previous" type="text/html" />
<link rel="Next" href="t_content.htm" title="Next" type="text/html" />
<link rel="alternate" href="../e40758.pdf" title="PDF version" type="application/pdf" />
<link rel="schema.dcterms" href="http://purl.org/dc/terms/" />
<link rel="stylesheet" href="../../dcommon/css/fusiondoc.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/header.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/footer.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/fonts.css">
<link rel="stylesheet" href="../../dcommon/css/foundation.css">
<link rel="stylesheet" href="../../dcommon/css/codemirror.css">
<link rel="stylesheet" type="text/css" title="Default" href="../../nav/css/html5.css">
<link rel="stylesheet" href="../../dcommon/css/respond-480-tablet.css">
<link rel="stylesheet" href="../../dcommon/css/respond-768-laptop.css">
<link rel="stylesheet" href="../../dcommon/css/respond-1140-deskop.css">
<script type="application/javascript" src="../../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">248/265</span> <!-- End Header -->
<div id="ARPLS301" class="chapter"><a id="CBACJJJG"></a>
<h1 class="chapter"><span class="secnum">244</span> <a id="sthref18426"></a>Oracle Streams AQ TYPEs</h1>
<p>This chapter describes the types used with Oracle Streams Advanced Queuing (AQ) packages for PL/SQL, <code>DBMS_AQ,</code> and <code>DBMS_AQADM</code>.</p>
<div class="infoboxnotealso">
<p class="notep1"><span class="bold">See Also</span>:</p>
<a class="olink ADQUE" href="../../server.112/e11013/toc.htm"><span class="italic">Oracle Streams Advanced Queuing User's Guide</span></a> for information about using Oracle Streams AQ.</div>
<p>This chapter contains the following topics:</p>
<ul>
<li>
<p><a href="#CBAIHAIE">Summary of Types</a></p>
</li>
</ul>
<div class="refentry"><a id="CBAIHAIE"></a>
<hr />
<div id="ARPLS71663" class="refsect1">
<h2 class="refsect1">Summary of Types</h2>
<ul>
<li>
<p><a href="#i996895">AQ$_AGENT Type</a></p>
</li>
<li>
<p><a href="#i996937">AQ$_AGENT_LIST_T Type</a></p>
</li>
<li>
<p><a href="#i996954">AQ$_DESCRIPTOR Type</a></p>
</li>
<li>
<p><a href="#BGBHHJHD">AQ$_NTFN_DESCRIPTOR Type</a></p>
</li>
<li>
<p><a href="#CBAJJBJB">AQ$_POST_INFO Type</a></p>
</li>
<li>
<p><a href="#i997038">AQ$_POST_INFO_LIST Type</a></p>
</li>
<li>
<p><a href="#i1003472">AQ$_PURGE_OPTIONS_T Type</a></p>
</li>
<li>
<p><a href="#CBAEJHIA">AQ$_RECIPIENT_LIST_T Type</a></p>
</li>
<li>
<p><a href="#i997071">AQ$_REG_INFO Type</a></p>
</li>
<li>
<p><a href="#i997233">AQ$_REG_INFO_LIST Type</a></p>
</li>
<li>
<p><a href="#i997250">AQ$_SUBSCRIBER_LIST_T Type</a></p>
</li>
<li>
<p><a href="#CBABBDGH">DEQUEUE_OPTIONS_T Type</a></p>
</li>
<li>
<p><a href="#i1003249">ENQUEUE_OPTIONS_T Type</a></p>
</li>
<li>
<p><a href="#BGBEBCBI">SYS.MSG_PROP_T Type</a></p>
</li>
<li>
<p><a href="#i997396">MESSAGE_PROPERTIES_T Type</a></p>
</li>
<li>
<p><a href="#i1003324">MESSAGE_PROPERTIES_ARRAY_T Type</a></p>
</li>
<li>
<p><a href="#CBADGHGH">MSGID_ARRAY_T Type</a></p>
</li>
</ul>
<div id="ARPLS71664" class="refsect2"><a id="i996895"></a>
<hr />
<h3 class="refsect2"><a id="sthref18427"></a>AQ$_AGENT Type</h3>
<p>This type identifies a producer or a consumer of a message.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18428"></a>Syntax</p>
<pre>
TYPE SYS.AQ$_AGENT IS OBJECT (
   name       VARCHAR2(30),
   address    VARCHAR2(1024),
   protocol   NUMBER  DEFAULT 0);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18429"></a>Attributes</p>
<div id="ARPLS71665" class="tblformal">
<p class="titleintable"><a id="sthref18430"></a><a id="sthref18431"></a>Table 244-1 AQ$_AGENT Attributes</p>
<table class="cellalignment1229" title="AQ$_AGENT Attributes" summary="This table describes the Attributes of the Oracle Streams AQ Type member subprogram ENDCREATE." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t3">Attribute</th>
<th class="cellalignment1227" id="r1c2-t3">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t3" headers="r1c1-t3">
<p><code>name</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t3 r1c2-t3">
<p>Name of a producer or consumer of a message. The name must follow object name guidelines in the <a class="olink SQLRF" href="../../server.112/e41084/toc.htm"><span class="italic">Oracle Database SQL Language Reference</span></a> with regard to reserved characters.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t3" headers="r1c1-t3">
<p><code>address</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t3 r1c2-t3">
<p>Protocol-specific address of the recipient. If the protocol is <code>0</code>, then the address is of the form [<code><span class="codeinlineitalic">schema</span></code><code>.]</code><code><span class="codeinlineitalic">queue</span></code><code>[@</code><code><span class="codeinlineitalic">dblink</span></code><code>]</code>.</p>
<p>For example, a queue named <code>emp_messages</code> in the <code>HR</code> queue at the site <code>dbs1.net</code> has the address: hr.emp_messages@dbs1.net</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r4c1-t3" headers="r1c1-t3">
<p><code>protocol</code></p>
</td>
<td class="cellalignment1228" headers="r4c1-t3 r1c2-t3">
<p>Protocol to interpret the address and propagate the message. Protocols 1-127 are reserved for internal use. If the protocol number is in the range 128 - 255, the address of the recipient is not interpreted by Oracle Streams AQ.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS71666" class="refsect2"><a id="i996937"></a>
<hr />
<h3 class="refsect2"><a id="sthref18432"></a>AQ$_AGENT_LIST_T Type</h3>
<p>This type identifies the list of agents for which <code>DBMS_AQ</code>.<code>LISTEN</code> listens.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#i996895">"AQ$_AGENT Type"</a></div>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18433"></a>Syntax</p>
<pre>
TYPE SYS.AQ$_AGENT_LIST_T IS TABLE OF SYS.AQ$_AGENT 
   INDEX BY BINARY INTEGER;
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS71667" class="refsect2"><a id="i996954"></a>
<hr />
<h3 class="refsect2"><a id="sthref18434"></a>AQ$_DESCRIPTOR Type</h3>
<p>This type specifies the Oracle Streams AQ descriptor received by the AQ PL/SQL callbacks upon notification.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#i997396">"MESSAGE_PROPERTIES_T Type"</a></div>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18435"></a>Syntax</p>
<pre>
TYPE SYS.AQ$_DESCRIPTOR IS OBJECT (
   queue_name      VARCHAR2(61),
   consumer_name   VARCHAR2(30),
   msg_id          RAW(16),
   msg_prop        MSG_PROP_T,
   gen_desc        AQ$_NTFN_DESCRIPTOR,
   msgid_array     SYS.AQ$_NTFN_MSGID_ARRAY, 
   ntfnsRecdInGrp  NUMBER);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18436"></a>Attributes</p>
<div id="ARPLS71668" class="tblformal">
<p class="titleintable"><a id="sthref18437"></a><a id="CBAHHFAG"></a>Table 244-2 AQ$_DESCRIPTOR Attributes</p>
<table class="cellalignment1229" title="AQ$_DESCRIPTOR Attributes" summary="This table describes Attributes of the Oracle AQ Streams Type SYS.AQ$_DESCRIPTOR." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t6">Attribute</th>
<th class="cellalignment1227" id="r1c2-t6">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t6" headers="r1c1-t6">
<p><code>queue_name</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t6 r1c2-t6">
<p>Name of the queue in which the message was enqueued which resulted in the notification</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t6" headers="r1c1-t6">
<p><code>consumer_name</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t6 r1c2-t6">
<p>Name of the consumer for the multiconsumer queue</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r4c1-t6" headers="r1c1-t6">
<p><code>msg_id</code></p>
</td>
<td class="cellalignment1228" headers="r4c1-t6 r1c2-t6">
<p>Identification number of the message</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r5c1-t6" headers="r1c1-t6">
<p><code>msg_prop</code></p>
</td>
<td class="cellalignment1228" headers="r5c1-t6 r1c2-t6">
<p>Message properties specified by the <code>MSG_PROP_T</code> type</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r6c1-t6" headers="r1c1-t6">
<p><code>gen_desc</code></p>
</td>
<td class="cellalignment1228" headers="r6c1-t6 r1c2-t6">
<p>Indicates the timeout specifications</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r7c1-t6" headers="r1c1-t6">
<p><code>msgid_array</code></p>
</td>
<td class="cellalignment1228" headers="r7c1-t6 r1c2-t6">
<p>Group notification message ID list</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r8c1-t6" headers="r1c1-t6">
<p><code>ntfnsRecdInGrp</code></p>
</td>
<td class="cellalignment1228" headers="r8c1-t6 r1c2-t6">
<p>Notifications received in group</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS71669" class="refsect2"><a id="BGBHHJHD"></a>
<hr />
<h3 class="refsect2"><a id="sthref18438"></a>AQ$_NTFN_DESCRIPTOR Type</h3>
<p>This type is for storing a generic notification descriptor regarding PL/SQL notification flags.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18439"></a>Syntax</p>
<pre>
TYPE SYS.AQ$_NTFN_DESCRIPTOR IS OBJECT(   ntfn_flags   NUMBER)
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18440"></a>Attributes</p>
<div id="ARPLS71670" class="tblformal">
<p class="titleintable"><a id="sthref18441"></a><a id="sthref18442"></a>Table 244-3 AQ$_NTFN_DESCRIPTOR Attributes</p>
<table class="cellalignment1229" title="AQ$_NTFN_DESCRIPTOR Attributes" summary="This table describes Attributes of the Oracle AQ Streams Type SYS.AQ$_DESCRIPTOR." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t7">Attribute</th>
<th class="cellalignment1227" id="r1c2-t7">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t7" headers="r1c1-t7">
<p><code>ntfn_flags</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t7 r1c2-t7">
<p>Set to 1 if the notifications are already removed after a stipulated timeout. Set 2 to denote grouping. Default is 0.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS71671" class="refsect2">
<hr />
<a id="sthref18443"></a>
<h3 class="refsect2"><a id="sthref18444"></a>AQ$_NTFN_MSGID_ARRAY Type</h3>
<p>This type is for storing grouping notification data for AQ namespace, value 2<sup>30</sup> which is the max varray size.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18445"></a>Syntax</p>
<pre>
TYPE SYS.AQ$_NTFN_MSGID_ARRAY   AS VARRAY(1073741824)OF RAW(16);
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS71672" class="refsect2"><a id="CBAJJBJB"></a>
<hr />
<h3 class="refsect2"><a id="sthref18446"></a>AQ$_POST_INFO Type</h3>
<p>Specifies anonymous subscriptions to which you want to post messages.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18447"></a>Syntax</p>
<pre>
TYPE SYS.AQ$_POST_INFO IS OBJECT (
   name        VARCHAR2(128),
   namespace   NUMBER,
   payload     RAW(2000)  DEFAULT NULL);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18448"></a>Attributes</p>
<div id="ARPLS71673" class="tblformal">
<p class="titleintable"><a id="sthref18449"></a><a id="sthref18450"></a>Table 244-4 AQ$_POST_INFO Attributes</p>
<table class="cellalignment1229" title="AQ$_POST_INFO Attributes" summary="This table describes Attributes of the Oracle AQ Streams Type SYS.AQ$_POST." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t8">Attribute</th>
<th class="cellalignment1227" id="r1c2-t8">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t8" headers="r1c1-t8">
<p><code>name</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t8 r1c2-t8">
<p>Name of the anonymous subscription to which you want to post</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t8" headers="r1c1-t8">
<p><code>namespace</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t8 r1c2-t8">
<p>To receive notifications from other applications through <code>DBMS_AQ.POST</code> or <code>OCISubscriptionPost(),</code> the namespace must be <code>DBMS_AQ.NAMESPACE_ANONYMOUS</code></p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r4c1-t8" headers="r1c1-t8">
<p><code>payload</code></p>
</td>
<td class="cellalignment1228" headers="r4c1-t8 r1c2-t8">
<p>The payload to be posted to the anonymous subscription</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS71674" class="refsect2"><a id="i997038"></a>
<hr />
<h3 class="refsect2"><a id="sthref18451"></a>AQ$_POST_INFO_LIST Type</h3>
<p>Identifies the list of anonymous subscriptions to which you want to post messages.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#CBAJJBJB">AQ$_POST_INFO Type</a></div>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18452"></a>Syntax</p>
<pre>
TYPE SYS.AQ$_POST_INFO_LIST AS VARRAY(1024) OF SYS.AQ$_POST_INFO;
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS71675" class="refsect2"><a id="i1003472"></a>
<hr />
<h3 class="refsect2"><a id="sthref18453"></a>AQ$_PURGE_OPTIONS_T Type</h3>
<p>This type specifies the options available for purging a queue table.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="d_aqadm.htm#i1014013">PURGE_QUEUE_TABLE Procedure</a>.</div>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18454"></a>Syntax</p>
<pre>
TYPE AQ$_PURGE_OPTIONS_T is RECORD (
   block           BOOLEAN       DEFAULT FALSE
   delivery_mode   PLS_INTEGER   DEFAULT PERSISTENT);
</pre></div>
<!-- class="refsubsect" -->
<div id="ARPLS71676" class="tblformal">
<p class="titleintable"><a id="sthref18455"></a><a id="sthref18456"></a>Table 244-5 AQ$_PURGE_OPTIONS_T Type Attributes</p>
<table class="cellalignment1229" title="AQ$_PURGE_OPTIONS_T Type Attributes" summary="This table describes Attributes of the Oracle AQ Streams Type AQ$_PURGE_OPTIONS_T." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t11">Attribute</th>
<th class="cellalignment1227" id="r1c2-t11">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t11" headers="r1c1-t11">
<p><code>block</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t11 r1c2-t11">
<p><code>TRUE/FALSE</code>.</p>
<ul>
<li>
<p>If <code>block</code> is <code>TRUE</code>, then an exclusive lock on all the queues in the queue table is held while purging the queue table. This will cause concurrent enqueuers and dequeuers to block while the queue table is purged. The purge call always succeeds if <code>block</code> is <code>TRUE</code>.</p>
</li>
<li>
<p>The default for <code>block</code> is <code>FALSE</code>. This will not block enqueuers and dequeuers, but it can cause the purge to fail with an error during high concurrency times.</p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t11" headers="r1c1-t11">
<p><code>delivery_mode</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t11 r1c2-t11">
<p>Kind of messages to purge, either <code>DBMS_AQ.BUFFERED</code> or <code>DBMS_AQ.PERSISTENT</code></p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsect2" -->
<div id="ARPLS71677" class="refsect2"><a id="CBAEJHIA"></a>
<hr />
<h3 class="refsect2"><a id="sthref18457"></a>AQ$_RECIPIENT_LIST_T Type</h3>
<p>Identifies the list of agents that receive the message. This type can be used only when the queue is enabled for multiple dequeues.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#i996895">"AQ$_AGENT Type"</a></div>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18458"></a>Syntax</p>
<pre>
TYPE SYS.AQ$_RECIPIENT_LIST_T IS TABLE OF SYS.AQ$_AGENT
   INDEX BY BINARY_INTEGER;
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS71678" class="refsect2"><a id="i997071"></a>
<hr />
<h3 class="refsect2"><a id="sthref18459"></a>AQ$_REG_INFO Type</h3>
<p>This type identifies a producer or a consumer of a message.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18460"></a>Syntax</p>
<pre>
TYPE SYS.AQ$_REG_INFO IS OBJECT (
   name                              VARCHAR2(128),
   namespace                         NUMBER,
   callback                          VARCHAR2(4000),
   context                           RAW(2000)  DEFAULT NULL,
   qosflags                          NUMBER,
   timeout                           NUMBER
   ntfn_grouping_class               NUMBER,
   ntfn_grouping_value               NUMBER    DEFAULT 600,
   ntfn_grouping_type                NUMBER,
   ntfn_grouping_start_time          TIMESTAMP WITH TIME ZONE,
   ntfn_grouping_repeat_count   NUMBER);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18461"></a>Attributes</p>
<div id="ARPLS71679" class="tblformal">
<p class="titleintable"><a id="sthref18462"></a><a id="CBAIDJBB"></a>Table 244-6 AQ$_REG_INFO Type Attributes</p>
<table class="cellalignment1229" title="AQ$_REG_INFO Type Attributes " summary="This table describes Attributes of the Oracle AQ Streams Type SYS.AQ$_REG_INFO." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t13">Attribute</th>
<th class="cellalignment1227" id="r1c2-t13">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t13" headers="r1c1-t13">
<p><code>name</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t13 r1c2-t13">
<p>Specifies the name of the subscription. The subscription name is of the form <code><span class="codeinlineitalic">schema.queue</span></code> if the registration is for a single consumer queue or <code><span class="codeinlineitalic">schema.queue:consumer_name</span></code> if the registration is for a multiconsumer queues.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t13" headers="r1c1-t13">
<p><code>namespace</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t13 r1c2-t13">
<p>Specifies the namespace of the subscription. To receive notification from Oracle Streams AQ queues, the namespace must be <code>DBMS_AQ.NAMESPACE_AQ.</code> To receive notifications from other applications through <code>DBMS_AQ.POST</code> or <code>OCISubscriptionPost(),</code> the namespace must be <code>DBMS_AQ.NAMESPACE_ANONYMOUS.</code></p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r4c1-t13" headers="r1c1-t13">
<p><code>callback</code></p>
</td>
<td class="cellalignment1228" headers="r4c1-t13 r1c2-t13">
<p>Specifies the action to be performed on message notification. For HTTP notifications, use <code>http://www.company.com:8080</code>. For e-mail notifications, use <code>mailto://xyz@company.com</code>. For raw message payload for the <code>PLSQLCALLBACK</code> procedure, use <code>plsql://</code><code><span class="codeinlineitalic">schema</span></code><code>.</code><code><span class="codeinlineitalic">procedure?</span></code><code>PR=0</code>. For user-defined type message payload converted to XML for the <code>PLSQLCALLBACK</code> procedure, use <code>plsql://</code><code><span class="codeinlineitalic">schema</span></code><code>.</code><code><span class="codeinlineitalic">procedure?</span></code><code>PR=1</code></p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r5c1-t13" headers="r1c1-t13">
<p><code>context</code></p>
</td>
<td class="cellalignment1228" headers="r5c1-t13 r1c2-t13">
<p>Specifies the context that is to be passed to the callback function</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r6c1-t13" headers="r1c1-t13">
<p><code>qosflags</code></p>
</td>
<td class="cellalignment1228" headers="r6c1-t13 r1c2-t13">
<p>Can be set to one or more of the following values to specify the notification quality of service:</p>
<ul>
<li>
<p><code>NTFN_QOS_RELIABLE</code>- This value specifies that reliable notification is required. Reliable notifications persist across instance and database restarts.</p>
</li>
<li>
<p><code>NTFN_QOS_PAYLOAD</code> - This value specifies that payload delivery is required. It is supported only for client notification and only for <code>RAW</code> queues.</p>
</li>
<li>
<p><code>NTFN_QOS_PURGE_ON_NTFN</code> - This value specifies that the registration is to be purged automatically when the first notification is delivered to this registration location.</p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r7c1-t13" headers="r1c1-t13">
<p><code>ntfn_grouping_class</code></p>
</td>
<td class="cellalignment1228" headers="r7c1-t13 r1c2-t13">
<p>Currently, only the following flag can be set to specify criterion for grouping. The default value will be 0. If <code>ntfn_grouping_class</code> is 0, all other notification grouping attributes must be 0.</p>
<ul>
<li>
<p><code>NTFN_GROUPING_CLASS_TIME</code> - Notifications grouped by time, that is, the user specifies a time value and a single notification gets published at the end of that time.</p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r8c1-t13" headers="r1c1-t13">
<p><code>ntfn_grouping_value</code></p>
</td>
<td class="cellalignment1228" headers="r8c1-t13 r1c2-t13">
<p>Time-period of grouping notifications specified in seconds, meaning the time after which grouping notification would be sent periodically until <code>ntfn_grouping_repeat_count</code> is exhausted.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r9c1-t13" headers="r1c1-t13">
<p><code>ntfn_grouping_type</code></p>
</td>
<td class="cellalignment1228" headers="r9c1-t13 r1c2-t13">
<ul>
<li>
<p><code>NTFN_GROUPING_TYPE_SUMMARY</code> - Summary of all notifications that occurred in the time interval. (Default)</p>
</li>
<li>
<p><code>NTFN_GROUPING_TYPE_LAST</code> - Last notification that occurred in the interval.</p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r10c1-t13" headers="r1c1-t13">
<p><code>ntfn_grouping_start_time</code></p>
</td>
<td class="cellalignment1228" headers="r10c1-t13 r1c2-t13">
<p>Notification grouping start time. Notification grouping can start from a user-specified time that should a valid timestamp with time zone. If <code>ntfn_grouping_start_time</code> is not specified when using grouping, the default is to current timestamp with time zone</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r11c1-t13" headers="r1c1-t13">
<p><code>ntfn_grouping_repeat_count</code></p>
</td>
<td class="cellalignment1228" headers="r11c1-t13 r1c2-t13">
<p>Grouping notifications will be sent as many times as specified by the notification grouping repeat count and after that revert to regular notifications. The ntfn_grouping_repeat_count, if not specified, will default to</p>
<ul>
<li>
<p><code>NTFN_GROUPING_FOREVER</code> - Keep sending grouping notifications forever.</p>
</li>
</ul>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18463"></a>Usage Notes</p>
<p>You can use the following notification mechanisms:</p>
<ul>
<li>
<p>OCI callback</p>
</li>
<li>
<p>e-mail callback</p>
</li>
<li>
<p>PL/SQL callback</p>
</li>
</ul>
<p><a href="#CBAFGEDA">Table 244-7</a> shows the actions performed for nonpersistent queues for different notification mechanisms when RAW presentation is specified. <a href="#CBACIEHA">Table 244-8</a> shows the actions performed when XML presentation is specified.</p>
<div id="ARPLS71680" class="tblformalwide">
<p class="titleintable"><a id="sthref18464"></a><a id="CBAFGEDA"></a>Table 244-7 Actions Performed for Nonpersistent Queues When RAW Presentation Specified</p>
<table class="cellalignment1226" title="Actions Performed for Nonpersistent Queues When RAW Presentation Specified" summary="This table describes Actions Performed for Nonpersistent Queues When RAW Presentation Specified." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t14">Queue Payload Type</th>
<th class="cellalignment1227" id="r1c2-t14">OCI Callback</th>
<th class="cellalignment1227" id="r1c3-t14">E-mail</th>
<th class="cellalignment1227" id="r1c4-t14">PL/SQL Callback</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t14" headers="r1c1-t14">
<p><code>RAW</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t14 r1c2-t14">
<p>OCI callback receives the RAW data in the payload.</p>
</td>
<td class="cellalignment1228" headers="r2c1-t14 r1c3-t14">
<p>Not supported</p>
</td>
<td class="cellalignment1228" headers="r2c1-t14 r1c4-t14">
<p>PL/SQL callback receives the RAW data in the payload.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t14" headers="r1c1-t14">
<p><code>Oracle object type</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t14 r1c2-t14">
<p>Not supported</p>
</td>
<td class="cellalignment1228" headers="r3c1-t14 r1c3-t14">
<p>Not supported</p>
</td>
<td class="cellalignment1228" headers="r3c1-t14 r1c4-t14">
<p>Not supported</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformalwide" -->
<div id="ARPLS71681" class="tblformalwide">
<p class="titleintable"><a id="sthref18465"></a><a id="CBACIEHA"></a>Table 244-8 Actions Performed for Nonpersistent Queues When XML Presentation Specified</p>
<table class="cellalignment1226" title="Actions Performed for Nonpersistent Queues When XML Presentation Specified" summary="This table describes Actions Performed for Nonpersistent Queues When XML Presentation Specified." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t15">Queue Payload Type</th>
<th class="cellalignment1227" id="r1c2-t15">OCI Callback</th>
<th class="cellalignment1227" id="r1c3-t15">E-mail</th>
<th class="cellalignment1227" id="r1c4-t15">PL/SQL Callback</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t15" headers="r1c1-t15">
<p><code>RAW</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t15 r1c2-t15">
<p>OCI callback receives the XML data in the payload.</p>
</td>
<td class="cellalignment1228" headers="r2c1-t15 r1c3-t15">
<p>XML data is formatted as a SOAP message and e-mailed to the registered e-mail address.</p>
</td>
<td class="cellalignment1228" headers="r2c1-t15 r1c4-t15">
<p>PL/SQL callback receives the XML data in the payload.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t15" headers="r1c1-t15">
<p><code>Oracle object type</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t15 r1c2-t15">
<p>OCI callback receives the XML data in the payload.</p>
</td>
<td class="cellalignment1228" headers="r3c1-t15 r1c3-t15">
<p>XML data is formatted as a SOAP message and e-mailed to the registered e-mail address.</p>
</td>
<td class="cellalignment1228" headers="r3c1-t15 r1c4-t15">
<p>PL/SQL callback receives the XML data in the payload.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformalwide" --></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS71682" class="refsect2"><a id="i997233"></a>
<hr />
<h3 class="refsect2"><a id="sthref18466"></a>AQ$_REG_INFO_LIST Type</h3>
<p>Identifies the list of registrations to a queue.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#i997071">"AQ$_REG_INFO Type"</a></div>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18467"></a>Syntax</p>
<pre>
TYPE SYS.AQ$_REG_INFO_LIST AS VARRAY(1024) OF SYS.AQ$_REG_INFO;
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS71683" class="refsect2"><a id="i997250"></a>
<hr />
<h3 class="refsect2"><a id="sthref18468"></a>AQ$_SUBSCRIBER_LIST_T Type</h3>
<p>Identifies the list of subscribers that subscribe to a queue.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#i996895">"AQ$_AGENT Type"</a></div>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18469"></a>Syntax</p>
<pre>
TYPE SYS.AQ$_SUBSCRIBER_LIST_T IS TABLE OF SYS.AQ$_AGENT
   INDEX BY BINARY_INTEGER;
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS71684" class="refsect2"><a id="CBABBDGH"></a>
<hr />
<h3 class="refsect2"><a id="sthref18470"></a>DEQUEUE_OPTIONS_T Type</h3>
<p>Specifies the options available for the dequeue operation.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18471"></a>Syntax</p>
<pre>
TYPE DEQUEUE_OPTIONS_T IS RECORD (
   consumer_name     VARCHAR2(30)    DEFAULT NULL,
   dequeue_mode      BINARY_INTEGER  DEFAULT REMOVE,
   navigation        BINARY_INTEGER  DEFAULT NEXT_MESSAGE,
   visibility        BINARY_INTEGER  DEFAULT ON_COMMIT,
   wait              BINARY_INTEGER  DEFAULT FOREVER,
   msgid             RAW(16)         DEFAULT NULL,
   correlation       VARCHAR2(128)   DEFAULT NULL,
   deq_condition     VARCHAR2(4000)  DEFAULT NULL,
   signature         aq$_sig_prop    DEFAULT NULL,
   transformation    VARCHAR2(61)    DEFAULT NULL,
   delivery_mode     PLS_INTEGER     DEFAULT PERSISTENT);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18472"></a>Attributes</p>
<div id="ARPLS71685" class="tblformal">
<p class="titleintable"><a id="sthref18473"></a><a id="CBAFHEFC"></a>Table 244-9 DEQUEUE_OPTIONS_T Attributes</p>
<table class="cellalignment1229" title="DEQUEUE_OPTIONS_T Attributes" summary="This table describes Attributes of the Oracle AQ Streams Type SYS.DEQUEUE_OPTIONS_T." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t18">Attribute</th>
<th class="cellalignment1227" id="r1c2-t18">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t18" headers="r1c1-t18">
<p><code>consumer_name</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t18 r1c2-t18">
<p>Name of the consumer. Only those messages matching the consumer name are accessed. If a queue is not set up for multiple consumers, then this field should be set to <code>NULL</code>.</p>
<p>For secure queues, consumer_name must be a valid AQ agent name, mapped to the database user performing the dequeue operation, through <code>dbms_aqadm.enable_db_access</code> procedure call.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t18" headers="r1c1-t18">
<p><code>dequeue_mode</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t18 r1c2-t18">
<p>Specifies the locking behavior associated with the dequeue. Possible settings are:</p>
<p><code>BROWSE</code>: Read the message without acquiring any lock on the message. This specification is equivalent to a select statement.</p>
<p><code>LOCKED</code>: Read and obtain a write lock on the message. The lock lasts for the duration of the transaction. This setting is equivalent to a select for update statement.</p>
<p><code>REMOVE</code>: Read the message and delete it. This setting is the default. The message can be retained in the queue table based on the retention properties.</p>
<p><code>REMOVE_NODATA</code>: Mark the message as updated or deleted. The message can be retained in the queue table based on the retention properties.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r4c1-t18" headers="r1c1-t18">
<p><code>navigation</code></p>
</td>
<td class="cellalignment1228" headers="r4c1-t18 r1c2-t18">
<p>Specifies the position of the message that will be retrieved. First, the position is determined. Second, the search criterion is applied. Finally, the message is retrieved. Possible settings are:</p>
<p><code>NEXT_MESSAGE</code>: Retrieve the next message that is available and matches the search criteria. If the previous message belongs to a message group, then AQ retrieves the next available message that matches the search criteria and belongs to the message group. This setting is the default.</p>
<p><code>NEXT_TRANSACTION</code>: Skip the remainder of the current transaction group (if any) and retrieve the first message of the next transaction group. This setting can only be used if message grouping is enabled for the current queue.</p>
<p><code>FIRST_MESSAGE</code>: Retrieves the first message which is available and matches the search criteria. This setting resets the position to the beginning of the queue.</p>
<p>F<code>IRST_MESSAGE_MULTI_GROUP</code>: indicates that a call to <code>DBMS_AQ.DEQUEUE_ARRAY</code> will reset the position to the beginning of the queue and dequeue messages (possibly across different transaction groups) that are available and match the search criteria, until reaching the <code>ARRAY_SIZE</code> limit. Refer to the <code>TRANSACTION_GROUP</code> attribute for the message to distinguish between transaction groups.</p>
<p><code>NEXT_MESSAGE_MULTI_GROUP</code>: indicates that a call to <code>DBMS_AQ</code>.<code>DEQUEUE_ARRAY</code> will dequeue the next set of messages (possibly across different transaction groups) that are available and match the search criteria, until reaching the <code>ARRAY_SIZE</code> limit. Refer to the <code>TRANSACTION_GROUP</code> attribute for the message to distinguish between transaction groups.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r5c1-t18" headers="r1c1-t18">
<p><code>visibility</code></p>
</td>
<td class="cellalignment1228" headers="r5c1-t18 r1c2-t18">
<p>Specifies whether the new message is dequeued as part of the current transaction.The visibility parameter is ignored when using the <code>BROWSE</code> dequeue mode. Possible settings are:</p>
<p><code>ON_COMMIT</code>: The dequeue will be part of the current transaction. This setting is the default.</p>
<p>I<code>MMEDIATE:</code> The dequeue operation is not part of the current transaction, but an autonomous transaction which commits at the end of the operation.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r6c1-t18" headers="r1c1-t18">
<p><code>wait</code></p>
</td>
<td class="cellalignment1228" headers="r6c1-t18 r1c2-t18">
<p>Specifies the wait time if there is currently no message available which matches the search criteria. Possible settings are:</p>
<p><code>FOREVER</code>: Wait forever. This setting is the default.</p>
<p><code>NO_WAIT</code>: Do not wait.</p>
<p>number: Wait time in seconds.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r7c1-t18" headers="r1c1-t18">
<p><code>msgid</code></p>
</td>
<td class="cellalignment1228" headers="r7c1-t18 r1c2-t18">
<p>Specifies the message identifier of the message to be dequeued.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r8c1-t18" headers="r1c1-t18">
<p><code>correlation</code></p>
</td>
<td class="cellalignment1228" headers="r8c1-t18 r1c2-t18">
<p>Specifies the correlation identifier of the message to be dequeued. Special pattern matching characters, such as the percent sign (<code>%</code>) and the underscore (<code>_</code>) can be used. If more than one message satisfies the pattern, then the order of dequeuing is undetermined.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r9c1-t18" headers="r1c1-t18">
<p><code>deq_condition</code></p>
</td>
<td class="cellalignment1228" headers="r9c1-t18 r1c2-t18">
<p>A conditional expression based on the message properties, the message data properties, and PL/SQL functions.</p>
<p>A <code>deq_condition</code> is specified as a Boolean expression using syntax similar to the <code>WHERE</code> clause of a SQL query. This Boolean expression can include conditions on message properties, user data properties (object payloads only), and PL/SQL or SQL functions (as specified in the <code>WHERE</code> clause of a SQL query). Message properties include <code>priority</code>, <code>corrid</code> and other columns in the queue table</p>
<p>To specify dequeue conditions on a message payload (object payload), use attributes of the object type in clauses. You must prefix each attribute with <code>tab</code>.<code>user_data</code> as a qualifier to indicate the specific column of the queue table that stores the payload. The <code>deq_condition</code> parameter cannot exceed 4000 characters. If more than one message satisfies the dequeue condition, then the order of dequeuing is undetermined.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r10c1-t18" headers="r1c1-t18">
<p><code>signature</code></p>
</td>
<td class="cellalignment1228" headers="r10c1-t18 r1c2-t18">
<p>Currently not implemented</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r11c1-t18" headers="r1c1-t18">
<p><code>transformation</code></p>
</td>
<td class="cellalignment1228" headers="r11c1-t18 r1c2-t18">
<p>Specifies a transformation that will be applied after dequeuing the message. The source type of the transformation must match the type of the queue.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r12c1-t18" headers="r1c1-t18">
<p><code>delivery_mode</code></p>
</td>
<td class="cellalignment1228" headers="r12c1-t18 r1c2-t18">
<p>The dequeuer specifies the delivery mode of the messages it wishes to dequeue in the dequeue options. It can be <code>BUFFERED</code> or <code>PERSISTENT</code> or <code>PERSISTENT_OR_BUFFERED</code>. The message properties of the dequeued message indicate the delivery mode of the dequeued message. Array dequeue is only supported for buffered messages with an array size of '1'.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS71686" class="refsect2"><a id="i1003249"></a>
<hr />
<h3 class="refsect2"><a id="sthref18474"></a>ENQUEUE_OPTIONS_T Type</h3>
<p>Specifies the options available for the enqueue operation.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18475"></a>Syntax</p>
<pre>
TYPE SYS.ENQUEUE_OPTIONS_T IS RECORD (
   visibility            BINARY_INTEGER  DEFAULT ON_COMMIT,
   relative_msgid        RAW(16)         DEFAULT NULL,
   sequence_deviation    BINARY_INTEGER  DEFAULT NULL,
   transformation        VARCHAR2(61)    DEFAULT NULL,
   delivery_mode         PLS_INTEGER     NOT NULL DEFAULT PERSISTENT);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18476"></a>Attributes</p>
<div id="ARPLS71687" class="tblformal">
<p class="titleintable"><a id="sthref18477"></a><a id="sthref18478"></a>Table 244-10 ENQUEUE_OPTIONS_T Attributes</p>
<table class="cellalignment1229" title="ENQUEUE_OPTIONS_T Attributes" summary="This table describes Attributes of the Oracle AQ Streams Type ENQUEUE_OPTIONS_T." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t19">Attribute</th>
<th class="cellalignment1227" id="r1c2-t19">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t19" headers="r1c1-t19">
<p><code>visibility</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t19 r1c2-t19">
<p>Specifies the transactional behavior of the enqueue request. Possible settings are:</p>
<p><code>ON_COMMIT</code>: The enqueue is part of the current transaction. The operation is complete when the transaction commits. This setting is the default.</p>
<p><code>IMMEDIATE</code>: The enqueue operation is not part of the current transaction, but an autonomous transaction which commits at the end of the operation. This is the only value allowed when enqueuing to a non-persistent queue.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t19" headers="r1c1-t19">
<p><code>relative_msgid</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t19 r1c2-t19">
<p>Specifies the message identifier of the message which is referenced in the sequence deviation operation. This field is valid only if <code>BEFORE</code> is specified in <code>sequence_deviation</code>. This parameter is ignored if sequence deviation is not specified.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r4c1-t19" headers="r1c1-t19">
<p><code>sequence_deviation</code></p>
</td>
<td class="cellalignment1228" headers="r4c1-t19 r1c2-t19">
<p>Specifies whether the message being enqueued should be dequeued before other messages already in the queue. Possible settings are:</p>
<p><code>BEFORE</code>: The message is enqueued ahead of the message specified by <code>relative_msgid</code><code><span class="codeinlineitalic">.</span></code></p>
<p><code>TOP</code>: The message is enqueued ahead of any other messages.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r5c1-t19" headers="r1c1-t19">
<p><code>transformation</code></p>
</td>
<td class="cellalignment1228" headers="r5c1-t19 r1c2-t19">
<p>Specifies a transformation that will be applied before enqueuing the message. The return type of the transformation function must match the type of the queue.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r6c1-t19" headers="r1c1-t19">
<p><code>delivery_mode</code></p>
</td>
<td class="cellalignment1228" headers="r6c1-t19 r1c2-t19">
<p>The enqueuer specifies the delivery mode of the messages it wishes to enqueue in the enqueue options. It can be <code>BUFFERED</code> or <code>PERSISTENT</code>. The message properties of the enqueued message indicate the delivery mode of the enqueued message. Array enqueue is only supported for buffered messages with an array size of '1'.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS71688" class="refsect2"><a id="BGBEBCBI"></a>
<hr />
<h3 class="refsect2">SYS.MSG_PROP_T Type</h3>
<p>This type is used in PL/SQL notification, as one field in <code>aq$_descriptor</code>, to pass message properties of an AQ message to the PL/SQL notification client callback.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18479"></a>Syntax</p>
<pre>
CREATE or replace TYPE sys.msg_prop_t AS OBJECT (
   priority         NUMBER,
   delay            NUMBER,
   expiration       NUMBER,
   correlation      VARCHAR2(128),
   attempts         NUMBER,
   exception_queue  VARCHAR2(51),
   enqueue_time     DATE,
   state            NUMBER,
   sender_id        aq$_agent,
   original_msgid   RAW(16),
   delivery_mode    NUMBER);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18480"></a>Parameters</p>
<div id="ARPLS71689" class="tblformal">
<p class="titleintable"><a id="sthref18481"></a><a id="sthref18482"></a>Table 244-11 SYS.MSG_PROP_T Type Attributes</p>
<table class="cellalignment1229" title="SYS.MSG_PROP_T Type Attributes" summary="This table describes Attributes of the Oracle AQ Streams Type SYS.MSG_PROP_T." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t20">Parameter</th>
<th class="cellalignment1227" id="r1c2-t20">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t20" headers="r1c1-t20">
<p><code>priority</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t20 r1c2-t20">
<p>Specifies the priority of the message. A smaller number indicates higher priority. The priority can be any number, including negative numbers.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t20" headers="r1c1-t20">
<p><code>delay</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t20 r1c2-t20">
<p>Specifies the delay of the enqueued message. The delay represents the number of seconds after which a message is available for dequeuing. Dequeuing by <code>msgid</code> overrides the delay specification. A message enqueued with delay set is in the <code>WAITING</code> state, and when the delay expires, the message goes to the <code>READY</code> state. <code>DELAY</code> processing requires the queue monitor to be started. However the queue monitor is started automatically by the system if needed. Delay is set by the producer who enqueues the message.</p>
<p>The possible settings follow:</p>
<p><code>NO_DELAY</code>: The message is available for immediate dequeuing</p>
<p>number: The number of seconds to delay the message</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r4c1-t20" headers="r1c1-t20">
<p><code>expiration</code></p>
</td>
<td class="cellalignment1228" headers="r4c1-t20 r1c2-t20">
<p>Specifies the expiration of the message. It determines, in seconds, the duration the message is available for dequeuing. This parameter is an offset from the time the message is ready for dequeue. Expiration processing requires the queue monitor to be running. However the queue monitor is started automatically by the system if needed.</p>
<p>The possible settings follow:</p>
<p><code>NEVER</code>: The message does not expire</p>
<p>number: The number of seconds message remains in <code>READY</code> state. If the message is not dequeued before it expires, then it is moved to the exception queue in the <code>EXPIRED</code> state.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r5c1-t20" headers="r1c1-t20">
<p><code>correlation</code></p>
</td>
<td class="cellalignment1228" headers="r5c1-t20 r1c2-t20">
<p>Returns the identifier supplied by the producer of the message at enqueue time.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r6c1-t20" headers="r1c1-t20">
<p><code>attempts</code></p>
</td>
<td class="cellalignment1228" headers="r6c1-t20 r1c2-t20">
<p>Returns the number of attempts that have been made to dequeue the message. This parameter cannot be set at enqueue time.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r7c1-t20" headers="r1c1-t20">
<p><code>exception_queue</code></p>
</td>
<td class="cellalignment1228" headers="r7c1-t20 r1c2-t20">
<p>Specifies the name of the queue into which the message is moved if it cannot be processed successfully.</p>
<p>Messages are moved automatically into the exception queue. Messages are moved into the exception queue in the following cases:</p>
<ul>
<li>
<p><code>RETRY_COUNT</code>, the number of unsuccessful dequeue attempts, has exceeded the specification for the <code>MAX_RETRIES</code> parameter in the <code>DBMS_AQADM.CREATE_QUEUE</code> procedure during queue creation.</p>
<p>For multiconsumer queues, the message becomes eligible to be moved to the exception queue even if failed dequeue attempts exceeds the <code>MAX_RETRIES</code> parameter for only one of the consumers. But the message will not be moved until either all other consumers have successfully consumed the message or failed more than <code>MAX_RETRIES</code>. You can view <code>MAX_RETRIES</code> for a queue in the <code>ALL_QUEUES</code> data dictionary view.</p>
<p>If a dequeue transaction fails because the server process dies (including <code>ALTER</code> <code>SYSTEM</code> <code>KILL</code> <code>SESSION</code>) or <code>SHUTDOWN</code> <code>ABORT</code> on the instance, then <code>RETRY_COUNT</code> is not incremented.</p>
</li>
<li>
<p>A message was not dequeued before the expiration time elapsed.</p>
</li>
<li>
<p>Message propagation to the specified destination queue failed with one of the following errors:</p>
<p>* There were no recipients for the multiconsumer destination queue.</p>
<p>* Recipients were specified for a single-consumer destination queue.</p>
<p>* Destination queue was an exception queue</p>
<p>* There was an error when applying transformation.</p>
</li>
</ul>
<p>The default is the exception queue associated with the queue table. If the exception queue specified does not exist at the time of the move, then the message is moved to the default exception queue associated with the queue table, and a warning is logged in the alert log. If the default exception queue is specified, then the parameter returns a <code>NULL</code> value at dequeue time.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r8c1-t20" headers="r1c1-t20">
<p><code>enqueue_time</code></p>
</td>
<td class="cellalignment1228" headers="r8c1-t20 r1c2-t20">
<p>Specifies the time the message was enqueued. This value is determined by the system and cannot be set by the user at enqueue time.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r9c1-t20" headers="r1c1-t20">
<p><code>state</code></p>
</td>
<td class="cellalignment1228" headers="r9c1-t20 r1c2-t20">
<p>Specifies the state of the message at the time of the dequeue. This parameter cannot be set at enqueue time. The possible states follow:</p>
<ul>
<li>
<p>DBMS_AQ.READY: The message is ready to be processed.</p>
</li>
<li>
<p>DBMS_AQ.WAITING: The message delay has not yet been reached.</p>
</li>
<li>
<p>DBMS_AQ.PROCESSED: The message has been processed and is retained.</p>
</li>
<li>
<p>DBMSAQ.EXPIRED: The message has been moved to the exception queue.</p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r10c1-t20" headers="r1c1-t20">
<p><code>sender_id</code></p>
</td>
<td class="cellalignment1228" headers="r10c1-t20 r1c2-t20">
<p>The application-sender identification specified at enqueue time by the message producer. Sender id is of type <code>aq$_agent</code>.</p>
<p>Sender name is required for secure queues at enqueue time. This must be a valid AQ agent name, mapped to the database user performing the enqueue operation, through <code>dbms_aqadm</code>.<code>enable_db_access</code> procedure call. Sender address and protocol should not be specified.</p>
<p>The Sender id in the message properties returned at dequeue time may have a sender address if the message was propagated from another queue. The value of the address is the <code>source_queue</code>, source database name if it was a remote database [<code>format source_queue@source_database_name</code>]</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r11c1-t20" headers="r1c1-t20">
<p><code>original_msgid</code></p>
</td>
<td class="cellalignment1228" headers="r11c1-t20 r1c2-t20">
<p>This parameter is used by Oracle Streams AQ for propagating messages.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r12c1-t20" headers="r1c1-t20">
<p><code>delivery_mode</code></p>
</td>
<td class="cellalignment1228" headers="r12c1-t20 r1c2-t20">
<p><code>DBMS_AQ.BUFFERED</code> or <code>DBMS_AQ.PERSISTENT</code>.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS71690" class="refsect2"><a id="i997396"></a>
<hr />
<h3 class="refsect2"><a id="sthref18483"></a>MESSAGE_PROPERTIES_T Type</h3>
<p>This type is defined inside the DBMS_AQ package, and describes the information that AQ uses to convey the state of individual messages. These are set at enqueue time, and their values are returned at dequeue time.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#CBAEJHIA">AQ$_RECIPIENT_LIST_T Type</a></div>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18484"></a>Syntax</p>
<pre>
TYPE message_properties_t IS RECORD (
   priority               BINARY_INTEGER  NOT NULL DEFAULT 1,
   delay                  BINARY_INTEGER  NOT NULL DEFAULT NO_DELAY,
   expiration             BINARY_INTEGER  NOT NULL DEFAULT NEVER,
   correlation            VARCHAR2(128)   DEFAULT NULL,
   attempts               BINARY_INTEGER,
   recipient_list         AQ$_RECIPIENT_LIST_T,
   exception_queue        VARCHAR2(61)    DEFAULT NULL,
   enqueue_time           DATE,
   state                  BINARY_INTEGER,
   sender_id              SYS.AQ$_AGENT   DEFAULT NULL, 
   original_msgid         RAW(16)         DEFAULT NULL,
   signature              aq$_sig_prop    DEFAULT NULL,
   transaction_group      VARCHAR2(30)    DEFAULT NULL,
   user_property          SYS.ANYDATA     DEFAULT NULL
   delivery_mode          PLS_INTEGER     NOT NULL DEFAULT DBMS_AQ.PERSISTENT); 
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18485"></a>Attributes</p>
<div id="ARPLS71691" class="tblformal">
<p class="titleintable"><a id="sthref18486"></a><a id="sthref18487"></a>Table 244-12 MESSAGE_PROPERTIES_T Attributes</p>
<table class="cellalignment1229" title="MESSAGE_PROPERTIES_T Attributes" summary="This table describes Attributes of the Oracle AQ Streams Type MESSAGE_PROPERTIES_T." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t22">Attribute</th>
<th class="cellalignment1227" id="r1c2-t22">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t22" headers="r1c1-t22">
<p><code>priority</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t22 r1c2-t22">
<p>Specifies the priority of the message. A smaller number indicates higher priority. The priority can be any number, including negative numbers.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t22" headers="r1c1-t22">
<p><code>delay</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t22 r1c2-t22">
<p>Specifies the delay of the enqueued message. The delay represents the number of seconds after which a message is available for dequeuing. Dequeuing by <code>msgid</code> overrides the delay specification. A message enqueued with delay set is in the <code>WAITING</code> state, and when the delay expires, the message goes to the <code>READY</code> state. <code>DELAY</code> processing requires the queue monitor to be started. However the queue monitor is started automatically by the system if needed. Delay is set by the producer who enqueues the message.</p>
<p>The possible settings follow:</p>
<p><code>NO_DELAY</code>: The message is available for immediate dequeuing</p>
<p>number: The number of seconds to delay the message</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r4c1-t22" headers="r1c1-t22">
<p><code>expiration</code></p>
</td>
<td class="cellalignment1228" headers="r4c1-t22 r1c2-t22">
<p>Specifies the expiration of the message. It determines, in seconds, the duration the message is available for dequeuing. This parameter is an offset from the time the message is ready for dequeue. Expiration processing requires the queue monitor to be running. However the queue monitor is started automatically by the system if needed.</p>
<p>The possible settings follow:</p>
<p><code>NEVER</code>: The message does not expire</p>
<p>number: The number of seconds message remains in <code>READY</code> state. If the message is not dequeued before it expires, then it is moved to the exception queue in the <code>EXPIRED</code> state.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r5c1-t22" headers="r1c1-t22">
<p><code>correlation</code></p>
</td>
<td class="cellalignment1228" headers="r5c1-t22 r1c2-t22">
<p>Returns the identifier supplied by the producer of the message at enqueue time.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r6c1-t22" headers="r1c1-t22">
<p><code>attempts</code></p>
</td>
<td class="cellalignment1228" headers="r6c1-t22 r1c2-t22">
<p>Returns the number of attempts that have been made to dequeue the message. This parameter cannot be set at enqueue time.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r7c1-t22" headers="r1c1-t22">
<p><code>recipient_list</code></p>
</td>
<td class="cellalignment1228" headers="r7c1-t22 r1c2-t22">
<p>This parameter is only valid for queues that allow multiple consumers. The default recipients are the queue subscribers. This parameter is not returned to a consumer at dequeue time.</p>
<p>For type definition, see the <a href="#i996895">"AQ$_AGENT Type"</a>.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r8c1-t22" headers="r1c1-t22">
<p><code>exception_queue</code></p>
</td>
<td class="cellalignment1228" headers="r8c1-t22 r1c2-t22">
<p>Specifies the name of the queue into which the message is moved if it cannot be processed successfully.</p>
<p>Messages are moved automatically into the exception queue. Messages are moved into the exception queue in the following cases:</p>
<ul>
<li>
<p><code>RETRY_COUNT</code>, the number of unsuccessful dequeue attempts, has exceeded the specification for the <code>MAX_RETRIES</code> parameter in the <code>DBMS_AQADM.CREATE_QUEUE</code> procedure during queue creation.</p>
<p>For multiconsumer queues, the message becomes eligible to be moved to the exception queue even if failed dequeue attempts exceeds the <code>MAX_RETRIES</code> parameter for only one of the consumers. But the message will not be moved until either all other consumers have successfully consumed the message or failed more than <code>MAX_RETRIES</code>. You can view <code>MAX_RETRIES</code> for a queue in the <code>ALL_QUEUES</code> data dictionary view.</p>
<p>If a dequeue transaction fails because the server process dies (including <code>ALTER</code> <code>SYSTEM</code> <code>KILL</code> <code>SESSION</code>) or <code>SHUTDOWN</code> <code>ABORT</code> on the instance, then <code>RETRY_COUNT</code> is not incremented.</p>
</li>
<li>
<p>A message was not dequeued before the expiration time elapsed.</p>
</li>
<li>
<p>Message propagation to the specified destination queue failed with one of the following errors:</p>
<p>* There were no recipients for the multiconsumer destination queue.</p>
<p>* Recipients were specified for a single-consumer destination queue.</p>
<p>* Destination queue was an exception queue</p>
<p>* There was an error when applying transformation.</p>
</li>
</ul>
<p>The default is the exception queue associated with the queue table. If the exception queue specified does not exist at the time of the move, then the message is moved to the default exception queue associated with the queue table, and a warning is logged in the alert log. If the default exception queue is specified, then the parameter returns a <code>NULL</code> value at dequeue time.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r9c1-t22" headers="r1c1-t22">
<p><code>enqueue_time</code></p>
</td>
<td class="cellalignment1228" headers="r9c1-t22 r1c2-t22">
<p>Specifies the time the message was enqueued. This value is determined by the system and cannot be set by the user at enqueue time.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r10c1-t22" headers="r1c1-t22">
<p><code>state</code></p>
</td>
<td class="cellalignment1228" headers="r10c1-t22 r1c2-t22">
<p>Specifies the state of the message at the time of the dequeue. This parameter cannot be set at enqueue time. The possible states follow:</p>
<ul>
<li>
<p><code>DBMS_AQ</code>.<code>READY</code>: The message is ready to be processed.</p>
</li>
<li>
<p><code>DBMS_AQ</code>.<code>WAITING</code>: The message delay has not yet been reached.</p>
</li>
<li>
<p><code>DBMS_AQ</code>.<code>PROCESSED</code>: The message has been processed and is retained.</p>
</li>
<li>
<p><code>DBMSAQ</code>.<code>EXPIRED</code>: The message has been moved to the exception queue.</p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r11c1-t22" headers="r1c1-t22">
<p><code>sender_id</code></p>
</td>
<td class="cellalignment1228" headers="r11c1-t22 r1c2-t22">
<p>The application-sender identification specified at enqueue time by the message producer. Sender id is of type <code>aq$_agent</code>.</p>
<p>Sender name is required for secure queues at enqueue time. This must be a valid AQ agent name, mapped to the database user performing the enqueue operation, through <code>dbms_aqadm</code>.<code>enable_db_access</code> procedure call. Sender address and protocol should not be specified.</p>
<p>The Sender id in the message properties returned at dequeue time may have a sender address if the message was propagated from another queue. The value of the address is the <code>source_queue</code>, source database name if it was a remote database [<code>format source_queue@source_database_name</code>]</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r12c1-t22" headers="r1c1-t22">
<p><code>original_msgid</code></p>
</td>
<td class="cellalignment1228" headers="r12c1-t22 r1c2-t22">
<p>This parameter is used by Oracle Streams AQ for propagating messages.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r13c1-t22" headers="r1c1-t22">
<p><code>signature</code></p>
</td>
<td class="cellalignment1228" headers="r13c1-t22 r1c2-t22">
<p>Currently not implemented</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r14c1-t22" headers="r1c1-t22">
<p><code>transaction_group</code></p>
</td>
<td class="cellalignment1228" headers="r14c1-t22 r1c2-t22">
<p>Specifies the <code>transaction_group</code> for the dequeued message. Messages belonging to the same transaction group will have the same value for this attribute. This attribute is only set by the <code>DBMS_AQ.DEQUEUE_ARRAY</code>. This attribute cannot be used to set the transaction group of a message through <code>DBMS_AQ.ENQUEUE</code> or <code>DBMS_AQ.ENQUEUE_ARRAY</code> calls.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r15c1-t22" headers="r1c1-t22">
<p><code>user_property</code></p>
</td>
<td class="cellalignment1228" headers="r15c1-t22 r1c2-t22">
<p>This optional attribute is used to store additional information about the payload.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r16c1-t22" headers="r1c1-t22">
<p><code>delivery_mode</code></p>
</td>
<td class="cellalignment1228" headers="r16c1-t22 r1c2-t22">
<p>The message publisher specifies the delivery mode in the <code>message_properties</code>. This can be <code>DBMS_AQ.BUFFERED</code> or <code>DBMS_AQ.PERSISTENT</code>. Array enqueue is only supported for buffered messages with an array size of '1'.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS71692" class="refsect2"><a id="i1003324"></a>
<hr />
<h3 class="refsect2"><a id="sthref18488"></a>MESSAGE_PROPERTIES_ARRAY_T Type</h3>
<p>This type is used by <code>dbms_aq.enqueue_array</code> and <code>dbms_aq.dequeue_array</code> calls to hold the set of message properties. Each element in the <code>payload_array</code> should have a corresponding element in the <code>MESSAGE_PROPERTIES_ARRAY_T</code> <code>VARRAY</code>.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#i997396">"MESSAGE_PROPERTIES_T Type"</a></div>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18489"></a>Syntax</p>
<pre>
TYPE MESSAGE_PROPERTIES_ARRAY_T IS VARRAY (2147483647)
   OF MESSAGE_PROPERTIES_T;
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS71693" class="refsect2"><a id="CBADGHGH"></a>
<hr />
<h3 class="refsect2"><a id="sthref18490"></a>MSGID_ARRAY_T Type</h3>
<p>The <code>msgid_array_t</code> type is used in <code>dbms_aq.enqueue_array</code> and <code>dbms_aq.dequeue_array</code> calls to hold the set of message IDs that correspond to the enqueued or dequeued messages.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18491"></a>Syntax</p>
<pre>
TYPE MSGID_ARRAY_T IS TABLE OF RAW(16) INDEX BY BINARY_INTEGER
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" --></div>
<!-- class="refsect1" --></div>
<!-- class="refentry" --></div>
<!-- class="chapter" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment1219">
<tr>
<td class="cellalignment1228">
<table class="cellalignment1224">
<tr>
<td class="cellalignment1223"><a href="t_anytyp.htm"><img width="24" height="24" src="../../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment1223"><a href="t_content.htm"><img width="24" height="24" src="../../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;1996, 2013,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment1231">
<table class="cellalignment1222">
<tr>
<td class="cellalignment1223"><a href="../../index.htm"><img width="24" height="24" src="../../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment1223"><a href="../../nav/portal_booklist.htm"><img width="24" height="24" src="../../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment1223"><a href="toc.htm"><img width="24" height="24" src="../../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment1223"><a href="index.htm"><img width="24" height="24" src="../../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment1223"><a href="../../nav/mindx.htm"><img width="24" height="24" src="../../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment1223"><a href="../../dcommon/html/feedback.htm"><img width="24" height="24" src="../../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>
</body>
</html>
