<!DOCTYPE html>
<html lang="en" >
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1">
<meta charset="utf-8">
<title>Expression Filter Types</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Version 5.1.2 Build 737" />
<meta name="dcterms.created" content="2013-07-19T18:56:13Z" />
<meta name="robots" content="all" />
<meta name="dcterms.title" content="Database PL/SQL Packages and Types Reference" />
<meta name="dcterms.identifier" content="E40758-03" />
<meta name="dcterms.isVersionOf" content="ARPLS" />
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;1996, 2013,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved." />
<link rel="Start" href="../../index.htm" title="Home" type="text/html" />
<link rel="Copyright" href="../../dcommon/html/cpyr.htm" title="Copyright" type="text/html" />

<script type="application/javascript"  src="../../dcommon/js/headfoot.js"></script>
<script type="application/javascript"  src="../../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html" />
<link rel="Index" href="index.htm" title="Index" type="text/html" />
<link rel="Prev" href="t_jms.htm" title="Previous" type="text/html" />
<link rel="Next" href="t_lcr.htm" title="Next" type="text/html" />
<link rel="alternate" href="../e40758.pdf" title="PDF version" type="application/pdf" />
<link rel="schema.dcterms" href="http://purl.org/dc/terms/" />
<link rel="stylesheet" href="../../dcommon/css/fusiondoc.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/header.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/footer.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/fonts.css">
<link rel="stylesheet" href="../../dcommon/css/foundation.css">
<link rel="stylesheet" href="../../dcommon/css/codemirror.css">
<link rel="stylesheet" type="text/css" title="Default" href="../../nav/css/html5.css">
<link rel="stylesheet" href="../../dcommon/css/respond-480-tablet.css">
<link rel="stylesheet" href="../../dcommon/css/respond-768-laptop.css">
<link rel="stylesheet" href="../../dcommon/css/respond-1140-deskop.css">
<script type="application/javascript" src="../../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">252/265</span> <!-- End Header -->
<div id="ARPLS71762" class="chapter"><a id="BGBFBAFG"></a>
<h1 class="chapter"><span class="secnum">248</span> Expression Filter Types</h1>
<div class="infoboxnotewarn">
<p class="notep1">Note:</p>
<p class="warnsp">This functionality is deprecated with Oracle Database Release 11.2 and obsoleted with Release 12.1. For details regarding obsolescence, seeMy Oracle Support Note <a href="https://support.oracle.com/CSP/ui/flash.html#tab=KBHome%28page=KBHome&amp;id=%28%29%29,%28page=KBNavigator&amp;id=%28from=BOOKMARK&amp;bmDocType=DESUPPORT&amp;bmDocID=1244535.1&amp;bmDocDsrc=KB&amp;viewingMode=1143&amp;bmDocTitle=Obsolescence%20Notice:%20Rules%20Manager%20Feature%20of%20Oracle%20Database%29%29">ID 1244535.1</a></p>
</div>
<p>The Expression Filter feature provides a set of predefined types<a id="sthref18626"></a><a id="sthref18627"></a> and public synonyms for these types. Most of these types are used for configuring index parameters with the Expression Filter procedural APIs. The <code>EXF$TABLE_ALIAS</code> type is used to support expressions defined on one or more database tables.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink EXPRN" href="../e14919/toc.htm"><span class="italic">Oracle Database Rules Manager and Expression Filter Developer's Guide</span></a> for more information.</div>
<p>This chapter contains the following topics:</p>
<ul>
<li>
<p><a href="#CHDJHHHF">Using Expression Filter Types</a></p>
</li>
<li>
<p><a href="#CHDGHCBF">Summary of Expression Filter Types</a></p>
</li>
</ul>
<div class="refentry"><a id="CHDJHHHF"></a>
<hr />
<div id="ARPLS73366" class="refsect1"><!-- infolevel="all" infotype="General" -->
<h2 class="refsect1">Using Expression Filter Types</h2>
<p>This section contains topics that relate to using the Expression Filter Types.</p>
<ul>
<li>
<p><a href="#CHDGDCBJ">Security Model</a></p>
</li>
</ul>
<div id="ARPLS73367" class="refsect2"><a id="CHDGDCBJ"></a>
<hr />
<h3 class="refsect2">Security Model</h3>
<p>The Oracle Database installation runs the <code>catexf.sql</code> script to load the <code>DBMS_EXPFIL</code> package and create the required Expression Filter schema objects in the <code>EXFSYS</code> schema.</p>
</div>
<!-- class="refsect2" --></div>
<!-- class="refsect1" -->
<a id="CHDGHCBF"></a>
<hr />
<div id="ARPLS71763" class="refsect1"><!-- infolevel="all" infotype="General" -->
<h2 class="refsect1">Summary of Expression Filter Types</h2>
<p><a href="#CHDJADHH">Table 248-1</a> describes the Expression Filter object types.</p>
<p>All the values and names passed to the types defined in this chapter are not case sensitive. To preserve the case, enclose the values with double quotation marks.</p>
<div id="ARPLS71764" class="tblformal">
<p class="titleintable"><a id="sthref18628"></a><a id="CHDJADHH"></a>Table 248-1 Expression Filter Object Types</p>
<table class="cellalignment1229" title="Expression Filter Object Types" summary="This two column table (read from right to left) lists the name of the Expression Filter object type followed by a brief description of each object type" dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t4">Object Type Name</th>
<th class="cellalignment1227" id="r1c2-t4">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t4" headers="r1c1-t4">
<p><a href="#BABEBAIE">EXF$ATTRIBUTE</a></p>
</td>
<td class="cellalignment1228" headers="r2c1-t4 r1c2-t4">
<p>Specifies the stored and indexed attributes for the Expression Filter indexes</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t4" headers="r1c1-t4">
<p><a href="#CHDGDDAG">EXF$ATTRIBUTE_LIST</a></p>
</td>
<td class="cellalignment1228" headers="r3c1-t4 r1c2-t4">
<p>Specifies a list of stored and indexed attributes when configuring index parameters</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r4c1-t4" headers="r1c1-t4">
<p><a href="#CJAFIDHB">EXF$INDEXOPER</a></p>
</td>
<td class="cellalignment1228" headers="r4c1-t4 r1c2-t4">
<p>Specifies a list of common operators in predicates with a stored or an indexed attribute</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r5c1-t4" headers="r1c1-t4">
<p><a href="#CHDIJHFB">EXF$TABLE_ALIAS</a></p>
</td>
<td class="cellalignment1228" headers="r5c1-t4 r1c2-t4">
<p>Indicates a special form of elementary attribute used to manage expressions defined on one or more database tables</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r6c1-t4" headers="r1c1-t4">
<p><a href="#BGBHBIEA">EXF$TEXT</a></p>
</td>
<td class="cellalignment1228" headers="r6c1-t4 r1c2-t4">
<p>Associates preferences to a text attribute in an attribute set or an event structure</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r7c1-t4" headers="r1c1-t4">
<p><a href="#CHDEAJGB">EXF$XPATH_TAG</a></p>
</td>
<td class="cellalignment1228" headers="r7c1-t4 r1c2-t4">
<p>Configures an XML element or an XML attribute for indexing a set of XPath predicates</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r8c1-t4" headers="r1c1-t4">
<p><a href="#CHDIBHBD">EXF$XPATH_TAGS</a></p>
</td>
<td class="cellalignment1228" headers="r8c1-t4 r1c2-t4">
<p>Specifies a list of XML tags when configuring the Expression Filter index parameters</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<div id="ARPLS151" class="refsect2"><a id="BABEBAIE"></a>
<hr />
<h3 class="refsect2"><a id="sthref18629"></a>EXF$ATTRIBUTE</h3>
<p>The <code>EXF$ATTRIBUTE</code> type is used to handle stored and indexed attributes for the Expression Filter indexes.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18630"></a>Syntax</p>
<pre>
CREATE or REPLACE TYPE EXF$ATTRIBUTE AS OBJECT attr_name    VARCHAR2(350),
                                               attr_oper    EXF$INDEXOPER,
                                               attr_indexed VARCHAR2(5);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18631"></a>Attributes</p>
<div id="ARPLS71765" class="tblformal">
<p class="titleintable"><a id="sthref18632"></a><a id="sthref18633"></a>Table 248-2 EXF$ATTRIBUTE Attributes</p>
<table class="cellalignment1229" title="EXF$ATTRIBUTE Attributes" summary="This table describes the fields of the Record Type EXF$ATTRIBUTE and breifly describes them." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t5">Attribute</th>
<th class="cellalignment1227" id="r1c2-t5">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t5" headers="r1c1-t5">
<p><code>attr_name</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t5 r1c2-t5">
<p>The arithmetic expression that constitutes the stored or indexed attribute</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t5" headers="r1c1-t5">
<p><code>attr_oper</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t5 r1c2-t5">
<p>The list of common operators in the predicates with the attribute. Default value: <code>EXF$INDEXOPER('all')</code></p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r4c1-t5" headers="r1c1-t5">
<p><code>attr_indexed</code></p>
</td>
<td class="cellalignment1228" headers="r4c1-t5 r1c2-t5">
<p><code>TRUE</code> if the attribute is indexed, else <code>FALSE.</code> Default value: <code>FALSE</code>.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18634"></a>Usage Notes</p>
<ul>
<li>
<p>The <code>EXF$ATTRIBUTE</code> type is used to specify the stored and indexed attributes for an Expression Filter index using the DBMS_EXPFIL.DEFAULT_INDEX_<code>PARAMETERS</code> procedure. When values for <code>attr_oper</code> and <code>attr_indexed</code> fields are omitted during <code>EXF$ATTRIBUTE</code> instantiation, it is considered a stored attribute with a default value for common operators (<code>EXF$INDEXOPER('all')</code>).</p>
</li>
</ul>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18635"></a>Examples</p>
<p>A stored attribute with no preference on the list of common operators is represented as follows:</p>
<pre>
exf$attribute (attr_name =&gt; 'HorsePower(Model, Year)')
</pre>
<p>An indexed attribute is represented as follows:</p>
<pre>
exf$attribute (attr_name =&gt; 'HorsePower(Model, Year)', 
               attr_indexed =&gt; 'TRUE')
</pre>
<p>An indexed attribute with a list of common operators is represented as follows:</p>
<pre>
exf$attribute (attr_name =&gt; 'HorsePower(Model, Year)', 
               attr_oper =&gt; exf$indexoper('=','&lt;','&gt;','&gt;=','&lt;='), 
               attr_indexed =&gt; 'TRUE')
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS152" class="refsect2"><a id="CHDGDDAG"></a>
<hr />
<h3 class="refsect2"><a id="sthref18636"></a>EXF$ATTRIBUTE_LIST</h3>
<p>The <code>EXF$ATTRIBUTE_LIST</code> type specifies a list of stored and indexed attributes while configuring the index parameters.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18637"></a>Syntax</p>
<pre>
CREATE or REPLACE TYPE EXF$ATTRIBUTE_LIST as VARRAY(490) of exf$attribute;
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18638"></a>Attributes</p>
<p>None.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18639"></a>Usage Notes</p>
<ul>
<li>
<p>Also see the <a href="d_expfilref.htm#CJAEHGAH">DEFAULT_INDEX_PARAMETERS Procedure</a> for more information</p>
</li>
</ul>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18640"></a>Examples</p>
<p>A list of stored and indexed attributes can be represented as follows:</p>
<pre>
exf$attribute_list (
       exf$attribute (attr_name =&gt; 'Model',            
                      attr_oper =&gt; exf$indexoper('='),
                      attr_indexed =&gt; 'TRUE'),         
       exf$attribute (attr_name =&gt; 'Price', 
                      attr_oper =&gt; exf$indexoper('all'), 
                      attr_indexed =&gt; 'TRUE'), 
       exf$attribute (attr_name =&gt; 'HorsePower(Model, Year)', 
                      attr_oper =&gt; exf$indexoper('=','&lt;','&gt;','&gt;=','&lt;='), 
                      attr_indexed =&gt; 'FALSE')         
    )
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS153" class="refsect2"><a id="CJAFIDHB"></a>
<hr />
<h3 class="refsect2"><a id="sthref18641"></a>EXF$INDEXOPER</h3>
<p>The <code>EXF$INDEXOPER</code> type specifies the list of common operators in predicates with a stored or an indexed attribute.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18642"></a>Syntax</p>
<pre>
CREATE or REPLACE TYPE EXFSYS.EXF$INDEXOPER as VARRAY(20) of VARCHAR2(15);
</pre></div>
<!-- class="refsubsect" -->
<p>The values for the <code>EXF$INDEXOPER</code> array are expected to be from the list in the following table:</p>
<div class="inftblinformal">
<table class="cellalignment1226" title="EXF$INDEXOPER Values" summary="List of values for the EXF$INDEXOPER object type" dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t6">Value</th>
<th class="cellalignment1227" id="r1c2-t6">Predicate Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t6" headers="r1c1-t6"><code>=</code></td>
<td class="cellalignment1228" headers="r2c1-t6 r1c2-t6">Equality predicates</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t6" headers="r1c1-t6"><code>&gt;</code></td>
<td class="cellalignment1228" headers="r3c1-t6 r1c2-t6">Greater than predicates</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r4c1-t6" headers="r1c1-t6"><code>&lt;</code></td>
<td class="cellalignment1228" headers="r4c1-t6 r1c2-t6">Less than predicates</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r5c1-t6" headers="r1c1-t6"><code>&gt;=</code></td>
<td class="cellalignment1228" headers="r5c1-t6 r1c2-t6">Greater than or equal to predicates</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r6c1-t6" headers="r1c1-t6"><code>&lt;=</code></td>
<td class="cellalignment1228" headers="r6c1-t6 r1c2-t6">Less than or equal to predicates</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r7c1-t6" headers="r1c1-t6"><code>!=</code> or <code>&lt;&gt;</code> or <code>^=</code></td>
<td class="cellalignment1228" headers="r7c1-t6 r1c2-t6">Not equal to predicates</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r8c1-t6" headers="r1c1-t6"><code>IS NULL</code></td>
<td class="cellalignment1228" headers="r8c1-t6 r1c2-t6"><code>IS NULL</code> predicates</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r9c1-t6" headers="r1c1-t6"><code>IS NOT NULL</code></td>
<td class="cellalignment1228" headers="r9c1-t6 r1c2-t6"><code>IS NOT NULL</code> predicates</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r10c1-t6" headers="r1c1-t6"><code>ALL</code></td>
<td class="cellalignment1228" headers="r10c1-t6 r1c2-t6">All the operators listed in this table starting with the equality predicate through the <code>IS NOT NULL</code> predicate</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r11c1-t6" headers="r1c1-t6"><code>NVL</code></td>
<td class="cellalignment1228" headers="r11c1-t6 r1c2-t6">Predicates with <code>NVL</code> (equality) operator</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r12c1-t6" headers="r1c1-t6"><code>LIKE</code></td>
<td class="cellalignment1228" headers="r12c1-t6 r1c2-t6">Predicates with <code>LIKE</code> operator</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r13c1-t6" headers="r1c1-t6"><code>BETWEEN</code></td>
<td class="cellalignment1228" headers="r13c1-t6 r1c2-t6"><code>BETWEEN</code> predicates</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18643"></a>Attributes</p>
<p>None.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18644"></a>Usage Notes</p>
<ul>
<li>
<p>A value of <code>ALL</code> for one of the <code>EXF$INDEXOPER</code> items implies that all the simple operators (<code>=</code>,<code>&gt;</code>,<code>&lt;</code>,<code>&gt;=</code>,<code>&lt;=</code>,<code>!=</code>, <code>IS NULL</code>, <code>IS NOT NULL</code>) are common in the predicates with an attribute. This value can be used along with one or more complex operators (<code>NVL</code>, <code>LIKE</code> and <code>BETWEEN</code>).</p>
</li>
<li>
<p>A predicate with a <code>BETWEEN</code> operator is treated as two predicates with binary operators, one with '<code>&gt;=</code>' operator and another with '<code>&lt;=</code>' operator. By default, only one of these operators is indexed, and the other operator is evaluated by value substitution. However, if predicates with the <code>BETWEEN</code> operator are common for an attribute (stored or indexed), both the binary operators resulting from the <code>BETWEEN</code> operator can be indexed by specifying <code>BETWEEN</code> in the <code>EXF$INDEXOPER VARRAY</code>. However, because this uses additional space in the predicate table, this operator should be used only when majority of predicates with an attribute use the <code>BETWEEN</code> operator.</p>
</li>
<li>
<p>When the <code>LIKE</code> operator is chosen as one of the common operators for an attribute, <code>LIKE</code> predicates on that attributes are indexed. Indexing a <code>LIKE</code> operator is beneficial only if the <code>VARCHAR2</code> constant on the right-hand side of the predicate does not lead with a wild-card character. For example, indexing a <code>LIKE</code> operator will filter the following predicates efficiently:</p>
<pre>
company LIKE 'General%'
company LIKE 'Proctor%'
</pre>
<p>But, the following predicates are evaluated as sparse predicates in the last stage:</p>
<pre>
company LIKE '%Electric'
company LIKE "%Gamble'
</pre></li>
</ul>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18645"></a>Examples</p>
<p>An attribute with a list of common operators is represented as follows:</p>
<pre>
exf$attribute (attr_name =&gt; 'HorsePower(Model, Year)', 
               attr_oper =&gt; exf$indexoper('=','&lt;','&gt;','&gt;=','&lt;=', 'between'), 
               attr_indexed =&gt; 'TRUE')
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS154" class="refsect2"><a id="CHDIJHFB"></a>
<hr />
<h3 class="refsect2"><a id="sthref18646"></a>EXF$TABLE_ALIAS</h3>
<p>A <code>EXF$TABLE_ALIAS</code> type is a special form of elementary attribute that can be included in the attribute set. These attributes manage expressions defined on one or more database tables.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18647"></a>Syntax</p>
<pre>
CREATE or REPLACE TYPE EXF$TABLE_ALIAS AS OBJECT table_name VARCHAR2(70);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18648"></a>Attributes</p>
<div id="ARPLS71766" class="tblformal">
<p class="titleintable"><a id="sthref18649"></a><a id="sthref18650"></a>Table 248-3 EXF$TABLE_ALIAS Attribute</p>
<table class="cellalignment1229" title="EXF$TABLE_ALIAS Attribute" summary="This table describes the fields of the Record Type EXF$TABLE_ALIAS and briefly describes them." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t7">Attribute</th>
<th class="cellalignment1227" id="r1c2-t7">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t7" headers="r1c1-t7">
<p><code>table_name</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t7 r1c2-t7">
<p>Name of the table with a possible schema extension</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18651"></a>Usage Notes</p>
<ul>
<li>
<p>The concept of a table alias<a id="sthref18652"></a> attribute is captured in the Expression Filter dictionary and the corresponding attribute in the attribute set's object type is created with a <code>VARCHAR2</code> data type. (Also see <a class="olink EXPRN111" href="../../appdev.112/e14919/exprn_app_a.htm#EXPRN111">Oracle Database Rules Manager and Expression Filter Developer's Guide</a> and <a href="d_expfilref.htm#CHDIFDCC">ADD_ELEMENTARY_ATTRIBUTE Procedures</a>.)</p>
</li>
</ul>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18653"></a>Examples</p>
<p>For a set of expressions defined on database tables, the corresponding table alias attributes are configured as follows:</p>
<pre>
BEGIN
  DBMS_EXPFIL.ADD_ELEMENTARY_ATTRIBUTE (
                               attr_set  =&gt; 'HRAttrSet',
                               attr_name =&gt; 'EMP',
                               tab_alias =&gt; exf$table_alias('SCOTT.EMP'));
  DBMS_EXPFIL.ADD_ELEMENTARY_ATTRIBUTE (
                               attr_set  =&gt; 'HRAttrSet',
                               attr_name =&gt; 'DEPT',
                               tab_alias =&gt; exf$table_alias('DEPT'));
END;
/
</pre>
<p>The Expression column using the previous attribute set can store expressions of form <code>EMP.JOB = 'Clerk' and EMP.NAME = 'Joe'</code>, where <code>JOB</code> and <code>NAME</code> are the names of the columns in the <code>SCOTT.EMP</code> table.</p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS285" class="refsect2"><a id="BGBHBIEA"></a>
<hr />
<h3 class="refsect2"><a id="sthref18654"></a>EXF$TEXT</h3>
<p>A <code>EXF$TEXT</code> type associates preferences to a text attribute in an attribute set or an event structure.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18655"></a>Syntax</p>
<pre>
CREATE or REPLACE TYPE EXFSYS.EXF$TEXT AS OBJECT(preferences VARCHAR2(1000));
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18656"></a>Attributes</p>
<div id="ARPLS71767" class="tblformal">
<p class="titleintable"><a id="sthref18657"></a><a id="sthref18658"></a>Table 248-4 EXF$TEXT Attribute</p>
<table class="cellalignment1229" title="EXF$TEXT Attribute" summary="This table describes the fields of the Record Type EXF$TEXT and briefly describes them." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t8">Attribute</th>
<th class="cellalignment1227" id="r1c2-t8">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t8" headers="r1c1-t8">
<p><code>preferences</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t8 r1c2-t8">
<p>Text preference specification, such as LEXER, CLASSIFIER, and WORDLIST</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18659"></a>Usage Notes</p>
<ul>
<li>
<p>The <code>EXF$TEXT</code> attribute is used to specify the preferences for a text attribute at the time of creation. The preferences specified through the instance of <code>EXF$TEXT</code> type are used in creation of the <code>CTXRULE</code> index for the text predicates. The syntax for the text preference specification is similar to the <code>PARAMETERS</code> clause specified for a <code>CTXRULE</code> Indextype. [See <code>CREATE INDEX</code> syntax for <code>CTXRULE</code> Indextype in <a class="olink CCREF" href="../../text.112/e24436/toc.htm"><span class="italic">Oracle Text Reference</span></a>, Release 10g Release 2.]</p>
</li>
</ul>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18660"></a>Examples</p>
<p>A text predicate with a <code>LEXER</code> and <code>WORDLIST</code> preferences can be created using the following instance of <code>EXF$TEXT</code> object as follows:</p>
<pre>
EXF$TEXT ('LEXER insrpt_lexer WORDLIST insrpt_wordlist');
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS155" class="refsect2"><a id="CHDEAJGB"></a>
<hr />
<h3 class="refsect2"><a id="sthref18661"></a>EXF$XPATH_TAG</h3>
<p>The <code>EXF$XPATH_TAG</code> type configures an XML element or an XML attribute for indexing a set of XPath predicates<a id="sthref18662"></a>.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18663"></a>Syntax</p>
<pre>
CREATE or REPLACE TYPE EXF$XPATH_TAG AS OBJECT tag_name    VARCHAR2(350),
                                               tag_indexed VARCHAR2(5),
                                               tag_type    VARCHAR2(30);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18664"></a>Attributes</p>
<div id="ARPLS71768" class="tblformal">
<p class="titleintable"><a id="sthref18665"></a><a id="sthref18666"></a>Table 248-5 EXF$XPATH_TAG Attributes</p>
<table class="cellalignment1229" title="EXF$XPATH_TAG Attributes" summary="This table describes the fields of the Record Type EXF$XPATH_TAG and briefly describes them." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t9">Attribute</th>
<th class="cellalignment1227" id="r1c2-t9">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t9" headers="r1c1-t9">
<p><code>tag_name</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t9 r1c2-t9">
<p>Name of the XML element or attribute. The name for an XML attribute is formatted as: <code>&lt;ElementName&gt;@&lt;AttributeName&gt;</code>. Optionally, the element name can be prefixed with its namespace URL as in &lt;Namespace URL&gt;:&lt;ElementName&gt;@&lt;AttributeName&gt;.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t9" headers="r1c1-t9">
<p><code>tag_indexed</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t9 r1c2-t9">
<p><code>TRUE</code> if XML tag is indexed; otherwise <code>FALSE</code>.</p>
<p>Default:</p>
<p><code>TRUE</code> if the tag is a positional filter.</p>
<p><code>FALSE</code> if the tag is a value filter.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r4c1-t9" headers="r1c1-t9">
<p><code>tag_type</code></p>
</td>
<td class="cellalignment1228" headers="r4c1-t9 r1c2-t9">
<p>Datatype for the value in the case of value filter. <code>NULL</code> for positional filters.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18667"></a>Usage Notes</p>
<ul>
<li>
<p><code>EXF$XPATH_TAG</code> type configures an XML element or an attribute as a positional or a value filter for an Expression Filter index (see the section on index tuning for XPath predicates in <a class="olink EXPRN033" href="../../appdev.112/e14919/exprn_xpathpredicates.htm#EXPRN033"><span class="italic">Oracle Database Rules Manager and Expression Filter Developer's Guide</span></a>). An instance of the <code>EXF$XPATH_TAG</code> type with <code>NULL</code> value for <code>tag_type</code> configures the XML tag as a positional filter. In the current release, the only other possible values for the <code>tag_type</code> attribute are strings (<code>CHAR</code> or <code>VARCHAR</code>) and such tags are configured as value filters. By default, all positional filters are indexed and the value filters are not indexed. This behavior can be overridden by setting a <code>TRUE</code> or <code>FALSE</code> value for the <code>tag_indexed</code> attribute accordingly.</p>
</li>
</ul>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18668"></a>Examples</p>
<p>An XML element can be configured as a positional filter and be indexed using the following instance of the <code>EXF$XPATH_TAG</code> type.</p>
<pre>
exf$xpath_tag(tag_name    =&gt; 'stereo',       --- XML element
              tag_indexed =&gt; 'TRUE',         --- indexed predicate group
              tag_type    =&gt; null)           --- positional filter
</pre>
<p>An XML attribute can be configured as a value filter and be indexed using the following type instance.</p>
<pre>
exf$xpath_tag(tag_name    =&gt; 'stereo@make',  --- XML attribute
              tag_indexed =&gt; 'TRUE',         --- indexed predicate group
              tag_type    =&gt; 'VARCHAR(15)')  --- value filter
</pre>
<p>The following commands configure the two filters shown previously using the namespace URL for the corresponding elements.</p>
<pre>
exf$xpath_tag(tag_name =&gt; 'http://www.auto.com/car.xsd:stereo', 
              tag_indexed =&gt; 'TRUE', --- indexed predicate group
              tag_type =&gt; null)      --- positional filter

exf$xpath_tag(tag_name =&gt; 'http://www.auto.com/car.xsd:stereo@make'
              tag_indexed =&gt; 'TRUE',     --- indexed predicate group
              tag_type =&gt; 'VARCHAR(15)') --- value filter
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS156" class="refsect2"><a id="CHDIBHBD"></a>
<hr />
<h3 class="refsect2"><a id="sthref18669"></a>EXF$XPATH_TAGS</h3>
<p>The <code>EXF$XPATH_TAGS</code> type specifies a list of XML tags while configuring the Expression Filter index parameters.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18670"></a>Syntax</p>
<pre>
CREATE or REPLACE TYPE EXF$XPATH_TAGS as VARRAY(490) of EXF$XPATH_TAG;
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18671"></a>Attributes</p>
<p>None.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18672"></a>Usage Notes</p>
<ul>
<li>
<p><code>EXF$XPATH_TAGS</code> type specifies a list of XML tags<a id="sthref18673"></a> while configuring the Expression Filter index parameters. (See <a href="d_expfilref.htm#CJAEHGAH">DEFAULT_INDEX_PARAMETERS Procedure</a>.)</p>
</li>
</ul>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18674"></a>Examples</p>
<p>A list of XML tags configured as positional and value filters can be represented as follows:</p>
<pre>
exf$xpath_tags(
           exf$xpath_tag(tag_name    =&gt; 'stereo@make',  --- XML attribute
                         tag_indexed =&gt; 'TRUE',
                         tag_type    =&gt; 'VARCHAR(15)'), --- value filter
           exf$xpath_tag(tag_name    =&gt; 'stereo',       --- XML element
                         tag_indexed =&gt; 'FALSE',
                         tag_type    =&gt; null),          --- positional filter
           exf$xpath_tag(tag_name    =&gt; 'memory',       --- XML element
                         tag_indexed =&gt; 'TRUE',
                         tag_type    =&gt; 'VARCHAR(10)')  --- value filter
          )
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" --></div>
<!-- class="refsect1" --></div>
<!-- class="refentry" --></div>
<!-- class="chapter" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment1219">
<tr>
<td class="cellalignment1228">
<table class="cellalignment1224">
<tr>
<td class="cellalignment1223"><a href="t_jms.htm"><img width="24" height="24" src="../../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment1223"><a href="t_lcr.htm"><img width="24" height="24" src="../../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;1996, 2013,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment1231">
<table class="cellalignment1222">
<tr>
<td class="cellalignment1223"><a href="../../index.htm"><img width="24" height="24" src="../../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment1223"><a href="../../nav/portal_booklist.htm"><img width="24" height="24" src="../../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment1223"><a href="toc.htm"><img width="24" height="24" src="../../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment1223"><a href="index.htm"><img width="24" height="24" src="../../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment1223"><a href="../../nav/mindx.htm"><img width="24" height="24" src="../../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment1223"><a href="../../dcommon/html/feedback.htm"><img width="24" height="24" src="../../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>
</body>
</html>
