<!DOCTYPE html>
<html lang="en" >
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1">
<meta charset="utf-8">
<title>UTL_FILE</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Version 5.1.2 Build 737" />
<meta name="dcterms.created" content="2013-07-19T18:56:5Z" />
<meta name="robots" content="all" />
<meta name="dcterms.title" content="Database PL/SQL Packages and Types Reference" />
<meta name="dcterms.identifier" content="E40758-03" />
<meta name="dcterms.isVersionOf" content="ARPLS" />
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;1996, 2013,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved." />
<link rel="Start" href="../../index.htm" title="Home" type="text/html" />
<link rel="Copyright" href="../../dcommon/html/cpyr.htm" title="Copyright" type="text/html" />

<script type="application/javascript"  src="../../dcommon/js/headfoot.js"></script>
<script type="application/javascript"  src="../../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html" />
<link rel="Index" href="index.htm" title="Index" type="text/html" />
<link rel="Prev" href="u_encode.htm" title="Previous" type="text/html" />
<link rel="Next" href="u_http.htm" title="Next" type="text/html" />
<link rel="alternate" href="../e40758.pdf" title="PDF version" type="application/pdf" />
<link rel="schema.dcterms" href="http://purl.org/dc/terms/" />
<link rel="stylesheet" href="../../dcommon/css/fusiondoc.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/header.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/footer.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/fonts.css">
<link rel="stylesheet" href="../../dcommon/css/foundation.css">
<link rel="stylesheet" href="../../dcommon/css/codemirror.css">
<link rel="stylesheet" type="text/css" title="Default" href="../../nav/css/html5.css">
<link rel="stylesheet" href="../../dcommon/css/respond-480-tablet.css">
<link rel="stylesheet" href="../../dcommon/css/respond-768-laptop.css">
<link rel="stylesheet" href="../../dcommon/css/respond-1140-deskop.css">
<script type="application/javascript" src="../../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">228/265</span> <!-- End Header -->
<div id="ARPLS069" class="chapter"><a id="BABGGEDF"></a>
<h1 class="chapter"><span class="secnum">224</span> UTL_FILE</h1>
<p>With the <code><a id="sthref16560"></a>UTL_FILE</code> package, PL/SQL programs can read and write operating system text files. <code>UTL_FILE</code> provides a restricted version of operating system stream file I/O.</p>
<p>This chapter contains the following topics:</p>
<ul>
<li>
<p><a href="#BABDEJDH">Using UTL_FILE</a></p>
<ul>
<li>
<p>Security Model</p>
</li>
<li>
<p>Operational Notes</p>
</li>
<li>
<p>Rules and Limits</p>
</li>
<li>
<p>Exceptions</p>
</li>
<li>
<p>Examples</p>
</li>
</ul>
</li>
<li>
<p><a href="#CIAJJDJI">Data Structures</a></p>
</li>
<li>
<p><a href="#i996959">Summary of UTL_FILE Subprograms</a></p>
</li>
</ul>
<div class="refentry"><a id="BABDEJDH"></a>
<hr />
<div id="ARPLS70896" class="refsect1">
<h2 class="refsect1">Using UTL_FILE</h2>
<ul>
<li>
<p><a href="#i996762">Security Model</a></p>
</li>
<li>
<p><a href="#i1004618">Operational Notes</a></p>
</li>
<li>
<p><a href="#i1005018">Rules and Limits</a></p>
</li>
<li>
<p><a href="#i996873">Exceptions</a></p>
</li>
<li>
<p><a href="#i1004619">Examples</a></p>
</li>
</ul>
<div id="ARPLS70897" class="refsect2"><a id="i996762"></a>
<hr />
<h3 class="refsect2">Security Model</h3>
<p>The set of files and directories that are accessible to the user through <code>UTL_FILE</code> is controlled by a number of factors and database parameters. Foremost of these is the set of directory objects that have been granted to the user. The nature of directory objects is discussed in the <a class="olink SQLRF01207" href="../../server.112/e41084/statements_5007.htm#SQLRF01207"><span class="italic">Oracle Database SQL Language Reference</span></a>.</p>
<p>Assuming the user has both <code>READ</code> and <code>WRITE</code> access to the directory object <code>USER_DIR</code>, the user can open a file located in the operating system directory described by <code>USER_DIR</code>, but not in subdirectories or parent directories of this directory.</p>
<p>Lastly, the client (text I/O) and server implementations are subject to operating system file permission checking.</p>
<p><code>UTL_FILE</code> provides file access both on the client side and on the server side. When run on the server, <code>UTL_FILE</code> provides access to all operating system files that are accessible from the server. On the client side, as in the case for Forms applications, <code>UTL_FILE</code> provides access to operating system files that are accessible from the client.</p>
<p>In the past, accessible directories for the <code>UTL_FILE</code> functions were specified in the initialization file using the <code>UTL_FILE_DIR</code> parameter. However, <code>UTL_FILE_DIR</code> access is no longer recommended. Oracle recommends that you instead use the directory object feature, which replaces <code>UTL_FILE_DIR</code>. Directory objects offer more flexibility and granular control to the <code>UTL_FILE</code> application administrator, can be maintained dynamically (that is, without shutting down the database), and are consistent with other Oracle tools. <code>CREATE</code> <code>ANY</code> <code>DIRECTORY</code> privilege is granted only to <code>SYS</code> and <code>SYSTEM</code> by default.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
Use the <code>CREATE</code> <code>DIRECTORY</code> feature instead of <code>UTL_FILE_DIR</code> for directory access verification.</div>
<p>Note that neither hard nor symbolic links are supported.</p>
<p>On UNIX systems, the owner of a file created by the <code>FOPEN</code> function is the owner of the shadow process running the instance. Normally, this owner is <code>ORACLE</code>. Files created using <code>FOPEN</code> are always writable and readable using the <code>UTL_FILE</code> subprograms. However, non-privileged operating system users who need to read these files outside of PL/SQL may need access from a system administrator.</p>
<div class="infoboxnotewarn">
<p class="notep1">Caution:</p>
<p class="warnsp">The privileges needed to access files in a directory object are operating system specific. <code>UTL_FILE</code> directory object privileges give you read and write access to all files within the specified directory.</p>
</div>
</div>
<!-- class="refsect2" -->
<div id="ARPLS70899" class="refsect2"><a id="i1004618"></a>
<hr />
<h3 class="refsect2">Operational Notes</h3>
<p>The file location and file name parameters are supplied to the <code>FOPEN</code> function as separate strings, so that the file location can be checked against the list of accessible directories as specified by the <code>ALL_DIRECTORIES</code> view of accessible directory objects. Together, the file location and name must represent a legal filename on the system, and the directory must be accessible. A subdirectory of an accessible directory is not necessarily also accessible; it too must be specified using a complete path name matching an <code>ALL_DIRECTORIES</code> object.</p>
<p><code>UTL_FILE</code> implicitly interprets line terminators on read requests, thereby affecting the number of bytes returned on a <code>GET_LINE</code> call. For example, the <code>len</code> parameter of <code>UTL_FILE.GET_LINE</code> specifies the requested number of bytes of character data. The number of bytes actually returned to the user will be the lesser of:</p>
<ul>
<li>
<p>The <code>GET_LINE</code> <code>len</code> parameter, or</p>
</li>
<li>
<p>The number of bytes until the next line terminator character, or</p>
</li>
<li>
<p>The <code>max_linesize</code> parameter specified by <code>UTL_FILE.FOPEN</code></p>
</li>
</ul>
<p>The <code>FOPEN</code> <code>max_linesize</code> parameter must be a number in the range 1 and 32767. If unspecified, Oracle supplies a default value of 1024. The <code>GET_LINE</code> <code>len</code> parameter must be a number in the range 1 and 32767. If unspecified, Oracle supplies the default value of <code>max_linesize</code>. If <code>max_linesize</code> and <code>len</code> are defined to be different values, then the lesser value takes precedence.</p>
<p><code>UTL_FILE.GET_RAW</code> ignores line terminators.</p>
<p><code>UTL_FILE</code> expects that files opened by <code>UTL_FILE.FOPEN</code> in text mode are encoded in the database character set. It expects that files opened by <code>UTL_FILE.FOPEN_NCHAR</code> in text mode are encoded in the UTF8 character set. If an opened file is not encoded in the expected character set, the result of an attempt to read the file is indeterminate. When data encoded in one character set is read and Globalization Support is told (such as by means of <code>NLS_LANG</code>) that it is encoded in another character set, the result is indeterminate. If <code>NLS_LANG</code> is set, it should therefore be the same as the database character set.</p>
</div>
<!-- class="refsect2" -->
<div id="ARPLS70900" class="refsect2"><a id="i1005018"></a>
<hr />
<h3 class="refsect2">Rules and Limits</h3>
<p>Operating system-specific parameters, such as C-shell environment variables under UNIX, cannot be used in the file location or file name parameters.</p>
<p><code>UTL_FILE</code> I/O capabilities are similar to standard operating system stream file I/O (<code>OPEN</code>, <code>GET</code>, <code>PUT</code>, <code>CLOSE</code>) capabilities, but with some limitations. For example, you call the <code>FOPEN</code> function to return a file handle, which you use in subsequent calls to <code>GET_LINE</code> or <code>PUT</code> to perform stream I/O to a file. When file I/O is done, you call <code>FCLOSE</code> to complete any output and free resources associated with the file.</p>
<div class="infobox-note">
<p class="notep1"><span class="bold">Note</span>:</p>
The <code>UTL_FILE</code> package is similar to the client-side <code>TEXT_IO</code> package currently provided by Oracle Procedure Builder. Restrictions for a server implementation require some API differences between <code>UTL_FILE</code> and <code>TEXT_IO</code>. In PL/SQL file I/O, errors are returned using PL/SQL exceptions.</div>
</div>
<!-- class="refsect2" -->
<div id="ARPLS70901" class="refsect2"><a id="i996873"></a>
<hr />
<h3 class="refsect2">Exceptions</h3>
<div id="ARPLS70902" class="tblformal">
<p class="titleintable"><a id="sthref16561"></a><a id="sthref16562"></a>Table 224-1 UTL_FILE Package Exceptions</p>
<table class="cellalignment1229" title="UTL_FILE Package Exceptions " summary="This table describes Exceptions raised by UTL_FILE subprograms." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t5">Exception Name</th>
<th class="cellalignment1227" id="r1c2-t5">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t5" headers="r1c1-t5">
<p><code>INVALID_PATH</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t5 r1c2-t5">
<p>File location is invalid.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t5" headers="r1c1-t5">
<p><code>INVALID_MODE</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t5 r1c2-t5">
<p>The <code>open_mode</code> parameter in <code>FOPEN</code> is invalid.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r4c1-t5" headers="r1c1-t5">
<p><code>INVALID_FILEHANDLE</code></p>
</td>
<td class="cellalignment1228" headers="r4c1-t5 r1c2-t5">
<p>File handle is invalid.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r5c1-t5" headers="r1c1-t5">
<p><code>INVALID_OPERATION</code></p>
</td>
<td class="cellalignment1228" headers="r5c1-t5 r1c2-t5">
<p>File could not be opened or operated on as requested.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r6c1-t5" headers="r1c1-t5">
<p><code>READ_ERROR</code></p>
</td>
<td class="cellalignment1228" headers="r6c1-t5 r1c2-t5">
<p>Destination buffer too small, or operating system error occurred during the read operation</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r7c1-t5" headers="r1c1-t5">
<p><code>WRITE_ERROR</code></p>
</td>
<td class="cellalignment1228" headers="r7c1-t5 r1c2-t5">
<p>Operating system error occurred during the write operation.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r8c1-t5" headers="r1c1-t5">
<p><code>INTERNAL_ERROR</code></p>
</td>
<td class="cellalignment1228" headers="r8c1-t5 r1c2-t5">
<p>Unspecified PL/SQL error</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r9c1-t5" headers="r1c1-t5">
<p><code>CHARSETMISMATCH</code></p>
</td>
<td class="cellalignment1228" headers="r9c1-t5 r1c2-t5">
<p>A file is opened using <code>FOPEN_NCHAR</code>, but later I/O operations use nonchar functions such as <code>PUTF</code> or <code>GET_LINE.</code></p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r10c1-t5" headers="r1c1-t5">
<p><code>FILE_OPEN</code></p>
</td>
<td class="cellalignment1228" headers="r10c1-t5 r1c2-t5">
<p>The requested operation failed because the file is open.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r11c1-t5" headers="r1c1-t5">
<p><code>INVALID_MAXLINESIZE</code></p>
</td>
<td class="cellalignment1228" headers="r11c1-t5 r1c2-t5">
<p>The <code>MAX_LINESIZE</code> value for <code>FOPEN()</code> is invalid; it should be within the range 1 to 32767.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r12c1-t5" headers="r1c1-t5">
<p><code>INVALID_FILENAME</code></p>
</td>
<td class="cellalignment1228" headers="r12c1-t5 r1c2-t5">
<p>The filename parameter is invalid.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r13c1-t5" headers="r1c1-t5">
<p><code>ACCESS_DENIED</code></p>
</td>
<td class="cellalignment1228" headers="r13c1-t5 r1c2-t5">
<p>Permission to access to the file location is denied.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r14c1-t5" headers="r1c1-t5">
<p><code>INVALID_OFFSET</code></p>
</td>
<td class="cellalignment1228" headers="r14c1-t5 r1c2-t5">
<p>Causes of the <code>INVALID_OFFSET</code> exception:</p>
<ul>
<li>
<p><code>ABSOLUTE_OFFSET</code> = <code>NULL</code> and <code>RELATIVE_OFFSET = NULL</code>, or</p>
</li>
<li>
<p><code>ABSOLUTE_OFFSET</code> &lt; 0, or</p>
</li>
<li>
<p>Either offset caused a seek past the end of the file</p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r15c1-t5" headers="r1c1-t5">
<p><code>DELETE_FAILED</code></p>
</td>
<td class="cellalignment1228" headers="r15c1-t5 r1c2-t5">
<p>The requested file delete operation failed.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r16c1-t5" headers="r1c1-t5">
<p><code>RENAME_FAILED</code></p>
</td>
<td class="cellalignment1228" headers="r16c1-t5 r1c2-t5">
<p>The requested file rename operation failed.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<p>Procedures in <code>UTL_FILE</code> can also raise predefined PL/SQL exceptions such as <code>NO_DATA_FOUND</code> or <code>VALUE_ERROR</code>.</p>
</div>
<!-- class="refsect2" -->
<div id="ARPLS70903" class="refsect2"><a id="i1004619"></a>
<hr />
<h3 class="refsect2">Examples</h3>
<p class="subhead2"><a id="ARPLS70904"></a>Example 1</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
The examples are UNIX-specific.</div>
<p>Given the following:</p>
<pre>
SQL&gt; CREATE DIRECTORY log_dir AS '/appl/gl/log'; 
SQL&gt; GRANT READ ON DIRECTORY log_dir TO DBA; 
SQL&gt; GRANT WRITE ON DIRECTORY log_dir TO DBA; 

SQL&gt; CREATE DIRECTORY USER_DIR AS '/appl/gl/user''; 
SQL&gt; GRANT READ ON DIRECTORY USER_DIR TO PUBLIC; 
SQL&gt; GRANT WRITE ON DIRECTORY USER_DIR TO PUBLIC; 
</pre>
<p>The following file locations and filenames are valid and accessible as follows:</p>
<div class="inftblinformal">
<table class="cellalignment1226" title="Valid file Locations and Filenames" summary="This table describes Valid and Accessible File Locations and Filenames used by UTL_FILE subprogams." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t7">File Location</th>
<th class="cellalignment1227" id="r1c2-t7">Filename</th>
<th class="cellalignment1227" id="r1c3-t7">READ and WRITE</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t7" headers="r1c1-t7"><code>/appl/gl/log</code></td>
<td class="cellalignment1228" headers="r2c1-t7 r1c2-t7"><code>L12345.log</code></td>
<td class="cellalignment1228" headers="r2c1-t7 r1c3-t7">Users with DBA privilege</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t7" headers="r1c1-t7"><code>/appl/gl/user</code></td>
<td class="cellalignment1228" headers="r3c1-t7 r1c2-t7"><code>u12345.tmp</code></td>
<td class="cellalignment1228" headers="r3c1-t7 r1c3-t7">All users</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" -->
<p>The following file locations and filenames are invalid:</p>
<div class="inftblinformal">
<table class="cellalignment1226" title="Invalid file Locations and Filenames" summary="This table describes Invalid File Locations and Filenames, which is to say that they cannot be used by UTL_FILE subprogams." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t8">File Location</th>
<th class="cellalignment1227" id="r1c2-t8">Filename</th>
<th class="cellalignment1227" id="r1c3-t8">Invalid Because</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t8" headers="r1c1-t8"><code>/appl/gl/log/backup</code></td>
<td class="cellalignment1228" headers="r2c1-t8 r1c2-t8"><code>L12345.log</code></td>
<td class="cellalignment1228" headers="r2c1-t8 r1c3-t8"># subdirectories are not accessible</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t8" headers="r1c1-t8"><code>/APPL/gl/log</code></td>
<td class="cellalignment1228" headers="r3c1-t8 r1c2-t8"><code>L12345.log</code></td>
<td class="cellalignment1228" headers="r3c1-t8 r1c3-t8"># directory strings must follow case sensitivity rules as required by the O/S</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r4c1-t8" headers="r1c1-t8"><code>/appl/gl/log</code></td>
<td class="cellalignment1228" headers="r4c1-t8 r1c2-t8"><code>backup/L1234.log</code></td>
<td class="cellalignment1228" headers="r4c1-t8 r1c3-t8"># filenames may not include portions of directory paths</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r5c1-t8" headers="r1c1-t8"><code>/user/tmp</code></td>
<td class="cellalignment1228" headers="r5c1-t8 r1c2-t8"><code>L12345.log</code></td>
<td class="cellalignment1228" headers="r5c1-t8 r1c3-t8"># no corresponding <code>CREATE DIRECTORY</code> command has been issued</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" -->
<p class="subhead2"><a id="ARPLS70905"></a>Example 2</p>
<pre>
DECLARE 
  V1 VARCHAR2(32767); 
  F1 UTL_FILE.FILE_TYPE; 
BEGIN 
  -- In this example MAX_LINESIZE is less than GET_LINE's length request 
  -- so the number of bytes returned will be 256 or less if a line terminator is seen. 
  F1 := UTL_FILE.FOPEN('USER_DIR','u12345.tmp','R',256); 
  UTL_FILE.GET_LINE(F1,V1,32767); 
  UTL_FILE.FCLOSE(F1); 

  -- In this example, FOPEN's MAX_LINESIZE is NULL and defaults to 1024, 
  -- so the number of bytes returned will be 1024 or less if a line terminator is seen. 
  F1 := UTL_FILE.FOPEN('USER_DIR','u12345.tmp','R'); 
  UTL_FILE.GET_LINE(F1,V1,32767); 
  UTL_FILE.FCLOSE(F1); 

  -- In this example, GET_LINE doesn't specify a number of bytes, so it defaults to 
  -- the same value as FOPEN's MAX_LINESIZE which is NULL in this case and defaults to 1024. 
  -- So the number of bytes returned will be 1024 or less if a line terminator is seen. 
  F1 := UTL_FILE.FOPEN('USER_DIR','u12345.tmp','R'); 
  UTL_FILE.GET_LINE(F1,V1); 
  UTL_FILE.FCLOSE(F1); 
END; 
</pre></div>
<!-- class="refsect2" --></div>
<!-- class="refsect1" -->
<a id="CIAJJDJI"></a>
<hr />
<div id="ARPLS72681" class="refsect1"><!-- infolevel="all" infotype="General" -->
<h2 class="refsect1">Data Structures</h2>
<p>The <code>UTL_FILE</code> package defines a RECORD type.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref16563"></a>Record Types</p>
<ul>
<li>
<p><a href="#CIAFFCGH">FILETYPE Record Type</a></p>
</li>
</ul>
</div>
<!-- class="refsubsect" -->
<div id="ARPLS72682" class="refsect2"><a id="CIAFFCGH"></a>
<hr />
<h3 class="refsect2"><a id="sthref16564"></a>FILETYPE Record Type</h3>
<p>The contents of <code>FILE_TYPE</code> are private to the <code>UTL_FILE</code> package. You should not reference or change components of this record.</p>
<pre>
TYPE file_type IS RECORD (
   id          BINARY_INTEGER, 
   datatype    BINARY_INTEGER,
   byte_mode   BOOLEAN);
</pre>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref16565"></a>Fields</p>
<div id="ARPLS72683" class="tblformal">
<p class="titleintable"><a id="sthref16566"></a><a id="sthref16567"></a>Table 224-2 FILE_TYPE Fields</p>
<table class="cellalignment1229" title="FILE_TYPE Fields" summary="This table describes the parameters of the DBMS_DEBUG.BREAKPOINT_INFO subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t9">Field</th>
<th class="cellalignment1227" id="r1c2-t9">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t9" headers="r1c1-t9">
<p><code>id</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t9 r1c2-t9">
<p>A numeric value indicating the internal file handle number</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t9" headers="r1c1-t9">
<p><code>datatype</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t9 r1c2-t9">
<p>Indicates whether the file is a <code>CHAR</code> file, <code>Nchar</code> file or other (binary)</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r4c1-t9" headers="r1c1-t9">
<p><code>byte_mode</code></p>
</td>
<td class="cellalignment1228" headers="r4c1-t9 r1c2-t9">
<p>Indicates whether the file was open as a binary file, or as a text file</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<div class="infobox-note">
<p class="notep1">Caution:</p>
Oracle does not guarrantee the persistence of <code>FILE_TYPE</code> values between database sessions or within a single session. Attempts to clone file handles or use dummy file handles may have inderterminate outcomes.</div>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" --></div>
<!-- class="refsect1" -->
<a id="i996959"></a>
<hr />
<div id="ARPLS70906" class="refsect1">
<h2 class="refsect1">Summary of UTL_FILE Subprograms</h2>
<div id="ARPLS70907" class="tblformal">
<p class="titleintable"><a id="sthref16568"></a><a id="sthref16569"></a>Table 224-3 UTL_FILE Subprograms</p>
<table class="cellalignment1229" title="UTL_FILE Subprograms" summary="This table lists the UTL_FILE subprograms in alphabetical order and briefly describes them." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t11">Subprogram</th>
<th class="cellalignment1227" id="r1c2-t11">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t11" headers="r1c1-t11">
<p><a href="#i1003326">FCLOSE Procedure</a></p>
</td>
<td class="cellalignment1228" headers="r2c1-t11 r1c2-t11">
<p>Closes a file</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t11" headers="r1c1-t11">
<p><a href="#i1003349">FCLOSE_ALL Procedure</a></p>
</td>
<td class="cellalignment1228" headers="r3c1-t11 r1c2-t11">
<p>Closes all open file handles</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r4c1-t11" headers="r1c1-t11">
<p><a href="#i1003400">FCOPY Procedure</a></p>
</td>
<td class="cellalignment1228" headers="r4c1-t11 r1c2-t11">
<p>Copies a contiguous portion of a file to a newly created file</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r5c1-t11" headers="r1c1-t11">
<p><a href="#i1003404">FFLUSH Procedure</a></p>
</td>
<td class="cellalignment1228" headers="r5c1-t11 r1c2-t11">
<p>Physically writes all pending output to a file</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r6c1-t11" headers="r1c1-t11">
<p><a href="#i1003488">FGETATTR Procedure</a></p>
</td>
<td class="cellalignment1228" headers="r6c1-t11 r1c2-t11">
<p>Reads and returns the attributes of a disk file</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r7c1-t11" headers="r1c1-t11">
<p><a href="#i1003493">FGETPOS Function</a></p>
</td>
<td class="cellalignment1228" headers="r7c1-t11 r1c2-t11">
<p>Returns the current relative offset position within a file, in bytes</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r8c1-t11" headers="r1c1-t11">
<p><a href="#i1003526">FOPEN Function</a></p>
</td>
<td class="cellalignment1228" headers="r8c1-t11 r1c2-t11">
<p>Opens a file for input or output</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r9c1-t11" headers="r1c1-t11">
<p><a href="#BABBBABB">FOPEN_NCHAR Function</a></p>
</td>
<td class="cellalignment1228" headers="r9c1-t11 r1c2-t11">
<p>Opens a file in Unicode for input or output</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r10c1-t11" headers="r1c1-t11">
<p><a href="#i1003602">FREMOVE Procedure</a></p>
</td>
<td class="cellalignment1228" headers="r10c1-t11 r1c2-t11">
<p>Deletes a disk file, assuming that you have sufficient privileges</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r11c1-t11" headers="r1c1-t11">
<p><a href="#i1003641">FRENAME Procedure</a></p>
</td>
<td class="cellalignment1228" headers="r11c1-t11 r1c2-t11">
<p>Renames an existing file to a new name, similar to the UNIX <code>mv</code> function</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r12c1-t11" headers="r1c1-t11">
<p><a href="#BABEGHIG">FSEEK Procedure</a></p>
</td>
<td class="cellalignment1228" headers="r12c1-t11 r1c2-t11">
<p>Adjusts the file pointer forward or backward within the file by the number of bytes specified</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r13c1-t11" headers="r1c1-t11">
<p><a href="#i1003796">GET_LINE Procedure</a></p>
</td>
<td class="cellalignment1228" headers="r13c1-t11 r1c2-t11">
<p>Reads text from an open file</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r14c1-t11" headers="r1c1-t11">
<p><a href="#i1006112">GET_LINE_NCHAR Procedure</a></p>
</td>
<td class="cellalignment1228" headers="r14c1-t11 r1c2-t11">
<p>Reads text in Unicode from an open file</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r15c1-t11" headers="r1c1-t11">
<p><a href="#i1003849">GET_RAW Procedure</a></p>
</td>
<td class="cellalignment1228" headers="r15c1-t11 r1c2-t11">
<p>Reads a <code>RAW</code> string value from a file and adjusts the file pointer ahead by the number of bytes read</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r16c1-t11" headers="r1c1-t11">
<p><a href="#i997322">IS_OPEN Function</a></p>
</td>
<td class="cellalignment1228" headers="r16c1-t11 r1c2-t11">
<p>Determines if a file handle refers to an open file</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r17c1-t11" headers="r1c1-t11">
<p><a href="#i1003892">NEW_LINE Procedure</a></p>
</td>
<td class="cellalignment1228" headers="r17c1-t11 r1c2-t11">
<p>Writes one or more operating system-specific line terminators to a file</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r18c1-t11" headers="r1c1-t11">
<p><a href="#i997504">PUT Procedure</a></p>
</td>
<td class="cellalignment1228" headers="r18c1-t11 r1c2-t11">
<p>Writes a string to a file</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r19c1-t11" headers="r1c1-t11">
<p><a href="#i997640">PUT_LINE Procedure</a></p>
</td>
<td class="cellalignment1228" headers="r19c1-t11 r1c2-t11">
<p>Writes a line to a file, and so appends an operating system-specific line terminator</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r20c1-t11" headers="r1c1-t11">
<p><a href="#i997684">PUT_LINE_NCHAR Procedure</a></p>
</td>
<td class="cellalignment1228" headers="r20c1-t11 r1c2-t11">
<p>Writes a Unicode line to a file</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r21c1-t11" headers="r1c1-t11">
<p><a href="#i997543">PUT_NCHAR Procedure</a></p>
</td>
<td class="cellalignment1228" headers="r21c1-t11 r1c2-t11">
<p>Writes a Unicode string to a file</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r22c1-t11" headers="r1c1-t11">
<p><a href="#i1004013">PUTF Procedure</a></p>
</td>
<td class="cellalignment1228" headers="r22c1-t11 r1c2-t11">
<p>A <code>PUT</code> procedure with formatting</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r23c1-t11" headers="r1c1-t11">
<p><a href="#i997790">PUTF_NCHAR Procedure</a></p>
</td>
<td class="cellalignment1228" headers="r23c1-t11 r1c2-t11">
<p>A <code>PUT_NCHAR</code> procedure with formatting, and writes a Unicode string to a file, with formatting</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r24c1-t11" headers="r1c1-t11">
<p><a href="#i997577">PUT_RAW Procedure</a></p>
</td>
<td class="cellalignment1228" headers="r24c1-t11 r1c2-t11">
<p>Accepts as input a <code>RAW</code> data value and writes the value to the output buffer</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<div id="ARPLS70908" class="refsect2"><a id="i1003326"></a>
<hr />
<h3 class="refsect2"><a id="sthref16570"></a>FCLOSE Procedure</h3>
<p>This procedure closes an open file identified by a file handle.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref16571"></a>Syntax</p>
<pre>
UTL_FILE.FCLOSE (
   file IN OUT FILE_TYPE);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref16572"></a>Parameters</p>
<div id="ARPLS70909" class="tblformal">
<p class="titleintable"><a id="sthref16573"></a><a id="sthref16574"></a>Table 224-4 FCLOSE Procedure Parameters</p>
<table class="cellalignment1229" title="FCLOSE Procedure Parameters " summary="This table describes the Parameters of the UTL_FILE.FCLOSE subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t12">Parameter</th>
<th class="cellalignment1227" id="r1c2-t12">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t12" headers="r1c1-t12">
<p><code>file</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t12 r1c2-t12">
<p>Active file handle returned by an <code>FOPEN</code> or <code>FOPEN_NCHAR</code> call</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref16575"></a>Usage Notes</p>
<p>If there is buffered data yet to be written when <code>FCLOSE</code> runs, then you may receive a <code>WRITE_ERROR</code> exception when closing a file.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref16576"></a>Exceptions</p>
<pre>
WRITE_ERROR
INVALID_FILEHANDLE
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS70910" class="refsect2"><a id="i1003349"></a>
<hr />
<h3 class="refsect2"><a id="sthref16577"></a>FCLOSE_ALL Procedure</h3>
<p>This procedure closes all open file handles for the session. This should be used as an emergency cleanup procedure, for example, when a PL/SQL program exits on an exception.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref16578"></a>Syntax</p>
<pre>
UTL_FILE.FCLOSE_ALL;
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref16579"></a>Usage Notes</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
<code>FCLOSE_ALL</code> does not alter the state of the open file handles held by the user. This means that an <code>IS_OPEN</code> test on a file handle after an <code>FCLOSE_ALL</code> call still returns <code>TRUE</code>, even though the file has been closed. No further read or write operations can be performed on a file that was open before an <code>FCLOSE_ALL</code>.</div>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref16580"></a>Exceptions</p>
<pre>
WRITE_ERROR
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS70911" class="refsect2"><a id="i1003400"></a>
<hr />
<h3 class="refsect2"><a id="sthref16581"></a>FCOPY Procedure</h3>
<p>This procedure copies a contiguous portion of a file to a newly created file. By default, the whole file is copied if the <code>start_line</code> and <code>end_line</code> parameters are omitted. The source file is opened in read mode. The destination file is opened in write mode. A starting and ending line number can optionally be specified to select a portion from the center of the source file for copying.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref16582"></a>Syntax</p>
<pre>
UTL_FILE.FCOPY (
   src_location    IN VARCHAR2,
   src_filename    IN VARCHAR2,
   dest_location   IN VARCHAR2,
   dest_filename   IN VARCHAR2,
   start_line      IN BINARY_INTEGER DEFAULT 1,
   end_line        IN BINARY_INTEGER DEFAULT NULL);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref16583"></a>Parameters</p>
<div id="ARPLS70912" class="tblformal">
<p class="titleintable"><a id="sthref16584"></a><a id="sthref16585"></a>Table 224-5 FCOPY Procedure Parameters</p>
<table class="cellalignment1229" title="FCOPY Procedure Parameters " summary="This table describes the Parameters of the UTL_FILE.FCOPY subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t14">Parameters</th>
<th class="cellalignment1227" id="r1c2-t14">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t14" headers="r1c1-t14">
<p><code>src_location</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t14 r1c2-t14">
<p>Directory location of the source file, a <code>DIRECTORY_NAME</code> from the <code>ALL_DIRECTORIES</code> view (case sensitive)</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t14" headers="r1c1-t14">
<p><code>src_filename</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t14 r1c2-t14">
<p>Source file to be copied</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r4c1-t14" headers="r1c1-t14">
<p><code>dest_location</code></p>
</td>
<td class="cellalignment1228" headers="r4c1-t14 r1c2-t14">
<p>Destination directory where the destination file is created</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r5c1-t14" headers="r1c1-t14">
<p><code>dest_filename</code></p>
</td>
<td class="cellalignment1228" headers="r5c1-t14 r1c2-t14">
<p>Destination file created from the source file</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r6c1-t14" headers="r1c1-t14">
<p><code>start_line</code></p>
</td>
<td class="cellalignment1228" headers="r6c1-t14 r1c2-t14">
<p>Line number at which to begin copying. The default is <code>1</code> for the first line</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r7c1-t14" headers="r1c1-t14">
<p><code>end_line</code></p>
</td>
<td class="cellalignment1228" headers="r7c1-t14 r1c2-t14">
<p>Line number at which to stop copying. The default is <code>NULL,</code> signifying end of file</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref16586"></a>Exceptions</p>
<p><code>INVALID_FILENAME</code></p>
<p><code>INVALID_PATH</code></p>
<p><code>INVALID_OPERATION</code></p>
<p><code>INVALID_OFFSET</code></p>
<p><code>READ_ERROR</code></p>
<p><code>WRITE_ERROR</code></p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS70913" class="refsect2"><a id="i1003404"></a>
<hr />
<h3 class="refsect2"><a id="sthref16587"></a>FFLUSH Procedure</h3>
<p><code>FFLUSH</code> physically writes pending data to the file identified by the file handle. Normally, data being written to a file is buffered. The <code>FFLUSH</code> procedure forces the buffered data to be written to the file. The data must be terminated with a newline character.</p>
<p>Flushing is useful when the file must be read while still open. For example, debugging messages can be flushed to the file so that they can be read immediately.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref16588"></a>Syntax</p>
<pre>
UTL_FILE.FFLUSH (
   file  IN FILE_TYPE);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref16589"></a>Parameters</p>
<div id="ARPLS70914" class="tblformal">
<p class="titleintable"><a id="sthref16590"></a><a id="sthref16591"></a>Table 224-6 FFLUSH Procedure Parameters</p>
<table class="cellalignment1229" title="FFLUSH Procedure Parameters " summary="This table describes the Parameters of the UTL_FILE.FFLUSH subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t15">Parameters</th>
<th class="cellalignment1227" id="r1c2-t15">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t15" headers="r1c1-t15">
<p><code>file</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t15 r1c2-t15">
<p>Active file handle returned by an <code>FOPEN</code> or <code>FOPEN_NCHAR</code> call</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref16592"></a>Exceptions</p>
<p><code>INVALID_FILENAME</code></p>
<p><code>INVALID_MAXLINESIZE</code></p>
<p><code>INVALID_OPERATION</code></p>
<p><code>WRITE_ERROR</code></p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS70915" class="refsect2"><a id="i1003488"></a>
<hr />
<h3 class="refsect2"><a id="sthref16593"></a>FGETATTR Procedure</h3>
<p>This procedure reads and returns the attributes of a disk file.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref16594"></a>Syntax</p>
<pre>
UTL_FILE.FGETATTR(
   location     IN VARCHAR2, 
   filename     IN VARCHAR2, 
   fexists      OUT BOOLEAN, 
   file_length  OUT NUMBER, 
   block_size   OUT BINARY_INTEGER);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref16595"></a>Parameters</p>
<div id="ARPLS70916" class="tblformal">
<p class="titleintable"><a id="sthref16596"></a><a id="sthref16597"></a>Table 224-7 FGETATTR Procedure Parameters</p>
<table class="cellalignment1229" title="FGETATTR Procedure Parameters " summary="This table describes the Parameters of the UTL_FILE.FGETATTR subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t16">Parameters</th>
<th class="cellalignment1227" id="r1c2-t16">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t16" headers="r1c1-t16">
<p><code>location</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t16 r1c2-t16">
<p>Directory location of the source file, a <code>DIRECTORY_NAME</code> from the <code>ALL_DIRECTORIES</code> view (case sensitive)</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t16" headers="r1c1-t16">
<p><code>filename</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t16 r1c2-t16">
<p>Name of the file to be examined</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r4c1-t16" headers="r1c1-t16">
<p><code>fexists</code></p>
</td>
<td class="cellalignment1228" headers="r4c1-t16 r1c2-t16">
<p>A <code>BOOLEAN</code> for whether or not the file exists</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r5c1-t16" headers="r1c1-t16">
<p><code>file_length</code></p>
</td>
<td class="cellalignment1228" headers="r5c1-t16 r1c2-t16">
<p>Length of the file in bytes. <code>NULL</code> if file does not exist.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r6c1-t16" headers="r1c1-t16">
<p><code>block_size</code></p>
</td>
<td class="cellalignment1228" headers="r6c1-t16 r1c2-t16">
<p>File system block size in bytes. <code>NULL</code> if the file does not exist.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref16598"></a>Exceptions</p>
<p><code>INVALID_PATH</code></p>
<p><code>INVALID_FILENAME</code></p>
<p><code>INVALID_OPERATION</code></p>
<p><code>READ_ERROR</code></p>
<p><code>ACCESS_DENIED</code></p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS70917" class="refsect2"><a id="i1003493"></a>
<hr />
<h3 class="refsect2"><a id="sthref16599"></a>FGETPOS Function</h3>
<p>This function returns the current relative offset position within a file, in bytes.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref16600"></a>Syntax</p>
<pre>
UTL_FILE.FGETPOS (
   file IN FILE_TYPE)
 RETURN PLS_INTEGER;
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref16601"></a>Parameters</p>
<div id="ARPLS70918" class="tblformal">
<p class="titleintable"><a id="sthref16602"></a><a id="sthref16603"></a>Table 224-8 FGETPOS Parameters</p>
<table class="cellalignment1229" title="FGETPOS Parameters " summary="This table describes the Parameters of the UTL_FILE.FGETPOS subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t17">Parameters</th>
<th class="cellalignment1227" id="r1c2-t17">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t17" headers="r1c1-t17">
<p><code>file</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t17 r1c2-t17">
<p>Directory location of the source file</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref16604"></a>Return Values</p>
<p><code>FGETPOS</code> returns the relative offset position for an open file, in bytes. It raises an exception if the file is not open. It returns <code>0</code> for the beginning of the file.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref16605"></a>Exceptions</p>
<p><code>INVALID_FILEHANDLE</code></p>
<p><code>INVALID_OPERATION</code></p>
<p><code>READ_ERROR</code></p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref16606"></a>Usage Notes</p>
<p>If file is opened for byte mode operations, then the <code>INVALID</code> <code>OPERATION</code> exception is raised.</p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS70919" class="refsect2"><a id="i1003526"></a>
<hr />
<h3 class="refsect2"><a id="sthref16607"></a>FOPEN Function</h3>
<p>This function opens a file. You can specify the maximum line size and have a maximum of 50 files open simultaneously. See also <a href="#BABBBABB">FOPEN_NCHAR Function</a>.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref16608"></a>Syntax</p>
<pre>
UTL_FILE.FOPEN (
   location     IN VARCHAR2,
   filename     IN VARCHAR2,
   open_mode    IN VARCHAR2,
   max_linesize IN BINARY_INTEGER DEFAULT 1024) 
  RETURN FILE_TYPE;
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref16609"></a>Parameters</p>
<div id="ARPLS70920" class="tblformal">
<p class="titleintable"><a id="sthref16610"></a><a id="sthref16611"></a>Table 224-9 FOPEN Function Parameters</p>
<table class="cellalignment1229" title="FOPEN Function Parameters" summary="This table describes the Parameters of the UTL_FILE.FOPEN subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t18">Parameter</th>
<th class="cellalignment1227" id="r1c2-t18">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t18" headers="r1c1-t18">
<p><code>location</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t18 r1c2-t18">
<p>Directory location of file. This string is a directory object name and must be specified in upper case. Read privileges must be granted on this directory object for the <code>UTL_FILE</code> user to run <code>FOPEN</code>.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t18" headers="r1c1-t18">
<p><code>filename</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t18 r1c2-t18">
<p>File name, including extension (file type), without directory path. If a directory path is given as a part of the filename, it is ignored by <code>FOPEN</code>. On Unix, the filename cannot end with /.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r4c1-t18" headers="r1c1-t18">
<p><code>open_mode</code></p>
</td>
<td class="cellalignment1228" headers="r4c1-t18 r1c2-t18">
<p>Specifies how the file is opened. Modes include:</p>
<ul>
<li>
<p><code>r</code> -- read text</p>
</li>
<li>
<p><code>w</code> -- write text</p>
</li>
<li>
<p><code>a</code> -- append text</p>
</li>
<li>
<p><code>rb</code> -- read byte mode</p>
</li>
<li>
<p><code>wb</code> -- write byte mode</p>
</li>
<li>
<p><code>ab</code> -- append byte mode</p>
</li>
</ul>
<p>If you try to open a file specifying '<code>a</code>' or '<code>ab</code>' for <code>open_mode</code> but the file does not exist, the file is created in <code>write</code> mode.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r5c1-t18" headers="r1c1-t18">
<p><code>max_linesize</code></p>
</td>
<td class="cellalignment1228" headers="r5c1-t18 r1c2-t18">
<p>Maximum number of characters for each line, including the newline character, for this file (minimum value 1, maximum value 32767). If unspecified, Oracle supplies a default value of 1024.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref16612"></a>Return Values</p>
<p><code>FOPEN</code> returns a file handle, which must be passed to all subsequent procedures that operate on that file. The specific contents of the file handle are private to the <code>UTL_FILE</code> package, and individual components should not be referenced or changed by the <code>UTL_FILE</code> user.</p>
<div id="ARPLS70921" class="tblformal">
<p class="titleintable"><a id="sthref16613"></a><a id="sthref16614"></a>Table 224-10 FOPEN Function Return Values</p>
<table class="cellalignment1229" title="FOPEN Function Return Values" summary="This table describes Values Returned by the FOPEN subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t19">Return</th>
<th class="cellalignment1227" id="r1c2-t19">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t19" headers="r1c1-t19">
<p><code>FILE_TYPE</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t19 r1c2-t19">
<p>Handle to open file</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref16615"></a>Exceptions</p>
<p><code>INVALID_MAXILINESIZE</code></p>
<p><code>INVALID_MODE</code></p>
<p><code>INVALID_OPERATION</code></p>
<p><code>INVALID_PATH</code></p>
<p><code>INVALID_FILENAME</code></p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref16616"></a>Usage Notes</p>
<p>The file location and file name parameters must be supplied to the <code>FOPEN</code> function as quoted strings so that the file location can be checked against the list of accessible directories as specified by the <code>ALL_DIRECTORIES</code> view of accessible directory objects.</p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS70922" class="refsect2"><a id="BABBBABB"></a>
<hr />
<h3 class="refsect2"><a id="sthref16617"></a>FOPEN_NCHAR Function</h3>
<p>This function opens a file in national character set mode for input or output, with the maximum line size specified. You can have a maximum of 50 files open simultaneously. With this function, you can read or write a text file in Unicode instead of in the database character set.</p>
<p>Even though the contents of an <code>NVARCHAR2</code> buffer may be AL16UTF16 or UTF8 (depending on the national character set of the database), the contents of the file are always read and written in UTF8. <code>UTL_FILE</code> converts between UTF8 and AL16UTF16 as necessary.</p>
<p>See also <a href="#i1003526">FOPEN Function</a>.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref16618"></a>Syntax</p>
<pre>
UTL_FILE.FOPEN_NCHAR (
   location     IN VARCHAR2,
   filename     IN VARCHAR2,
   open_mode    IN VARCHAR2,
   max_linesize IN BINARY_INTEGER DEFAULT 1024) 
RETURN FILE_TYPE;
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref16619"></a>Parameters</p>
<div id="ARPLS73436" class="tblformal">
<p class="titleintable"><a id="sthref16620"></a><a id="sthref16621"></a>Table 224-11 FOPEN_NCHAR Function Parameters</p>
<table class="cellalignment1229" title="FOPEN_NCHAR Function Parameters" summary="This table describes the Parameters of the UTL_FILE.FOPEN_NCHAR subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t20">Parameter</th>
<th class="cellalignment1227" id="r1c2-t20">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t20" headers="r1c1-t20">
<p><code>location</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t20 r1c2-t20">
<p>Directory location of file</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t20" headers="r1c1-t20">
<p><code>filename</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t20 r1c2-t20">
<p>File name (including extension)</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r4c1-t20" headers="r1c1-t20">
<p><code>open_mode</code></p>
</td>
<td class="cellalignment1228" headers="r4c1-t20 r1c2-t20">
<p>Open mode (<code>r</code>,<code>w</code>,<code>a</code>,<code>rb</code>,<code>wb</code>,<code>ab</code>)</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r5c1-t20" headers="r1c1-t20">
<p><code>max_linesize</code></p>
</td>
<td class="cellalignment1228" headers="r5c1-t20 r1c2-t20">
<p>Maximum number of characters for each line, including the newline character, for this file (minimum value 1, maximum value 32767)</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref16622"></a>Return Values</p>
<p><code>FOPEN_NCHAR</code> returns a file handle, which must be passed to all subsequent procedures that operate on that file. The specific contents of the file handle are private to the <code>UTL_FILE</code> package, and individual components should not be referenced or changed by the <code>UTL_FILE</code> user.</p>
<div id="ARPLS73437" class="tblformal">
<p class="titleintable"><a id="sthref16623"></a><a id="sthref16624"></a>Table 224-12 FOPEN_NCHAR Function Return Values</p>
<table class="cellalignment1229" title="FOPEN_NCHAR Function Return Values" summary="This table describes Values Returned by the FOPEN_NCHAR subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t21">Return</th>
<th class="cellalignment1227" id="r1c2-t21">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t21" headers="r1c1-t21">
<p><code>FILE_TYPE</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t21 r1c2-t21">
<p>Handle to open file</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref16625"></a>Exceptions</p>
<p><code>INVALID_MAXILINESIZE</code></p>
<p><code>INVALID_MODE</code></p>
<p><code>INVALID_OPERATION</code></p>
<p><code>INVALID_PATH</code></p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS70924" class="refsect2"><a id="i1003602"></a>
<hr />
<h3 class="refsect2"><a id="sthref16626"></a><a id="sthref16627"></a>FREMOVE Procedure</h3>
<p>This procedure deletes a disk file, assuming that you have sufficient privileges.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref16628"></a>Syntax</p>
<pre>
UTL_FILE.FREMOVE (
   location IN VARCHAR2,
   filename IN VARCHAR2);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref16629"></a>Parameters</p>
<div id="ARPLS70925" class="tblformal">
<p class="titleintable"><a id="sthref16630"></a><a id="sthref16631"></a>Table 224-13 FREMOVE Procedure Parameters</p>
<table class="cellalignment1229" title="FREMOVE Procedure Parameters " summary="This table describes the Parameters of the UTL_FILE.FREMOVE subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t22">Parameters</th>
<th class="cellalignment1227" id="r1c2-t22">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t22" headers="r1c1-t22">
<p><code>location</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t22 r1c2-t22">
<p>Directory location of the file, a <code>DIRECTORY_NAME</code> from <code>ALL_DIRECTORIES</code> (case sensitive)</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t22" headers="r1c1-t22">
<p><code>filename</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t22 r1c2-t22">
<p>Name of the file to be deleted</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref16632"></a>Exceptions</p>
<p><code>ACCESS_DENIED</code></p>
<p><code>DELETE_FAILED</code></p>
<p><code>INVALID_FILENAME</code></p>
<p><code>INVALID_OPERATION</code></p>
<p><code>INVALID_PATH</code></p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref16633"></a>Usage Notes</p>
<p>The <code>FREMOVE</code> procedure does not verify privileges before deleting a file. The O/S verifies file and directory permissions. An exception is returned on failure.</p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS70926" class="refsect2"><a id="i1003641"></a>
<hr />
<h3 class="refsect2"><a id="sthref16634"></a>FRENAME Procedure</h3>
<p>This procedure renames an existing file to a new name, similar to the UNIX <code>mv</code> function.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref16635"></a>Syntax</p>
<pre>
UTL_FILE.FRENAME (
   src_location     IN   VARCHAR2,
   src_filename     IN   VARCHAR2, 
   dest_location    IN   VARCHAR2,
   dest_filename    IN   VARCHAR2,
   overwrite        IN   BOOLEAN DEFAULT FALSE);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref16636"></a>Parameters</p>
<div id="ARPLS73438" class="tblformal">
<p class="titleintable"><a id="sthref16637"></a><a id="sthref16638"></a>Table 224-14 FRENAME Procedure Parameters</p>
<table class="cellalignment1229" title="FRENAME Procedure Parameters " summary="This table describes the Parameters of the UTL_FILE.FRENAME subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t23">Parameters</th>
<th class="cellalignment1227" id="r1c2-t23">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t23" headers="r1c1-t23">
<p><code>src_location</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t23 r1c2-t23">
<p>Directory location of the source file, a <code>DIRECTORY_NAME</code> from the <code>ALL_DIRECTORIES</code> view (case sensitive)</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t23" headers="r1c1-t23">
<p><code>src_filename</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t23 r1c2-t23">
<p>Source file to be renamed</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r4c1-t23" headers="r1c1-t23">
<p><code>dest_location</code></p>
</td>
<td class="cellalignment1228" headers="r4c1-t23 r1c2-t23">
<p>Destination directory of the destination file, a <code>DIRECTORY_NAME</code> from the <code>ALL_DIRECTORIES</code> view (case sensitive)</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r5c1-t23" headers="r1c1-t23">
<p><code>dest_filename</code></p>
</td>
<td class="cellalignment1228" headers="r5c1-t23 r1c2-t23">
<p>New name of the file</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r6c1-t23" headers="r1c1-t23">
<p><code>overwrite</code></p>
</td>
<td class="cellalignment1228" headers="r6c1-t23 r1c2-t23">
<p>Default is <code>FALSE</code>. Permission on both the source and destination directories must be granted. You can use the <code>overwrite</code> parameter to specify whether or not to overwrite a file if one exists in the destination directory. The default is <code>FALSE</code> for no overwrite.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref16639"></a>Exceptions</p>
<p><code>ACCESS_DENIED</code></p>
<p><code>INVALID_FILENAME</code></p>
<p><code>INVALID_PATH</code></p>
<p><code>RENAME_FAILED</code></p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS70928" class="refsect2"><a id="BABEGHIG"></a>
<hr />
<h3 class="refsect2"><a id="sthref16640"></a>FSEEK Procedure</h3>
<p>This procedure adjusts the file pointer forward or backward within the file by the number of bytes specified.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref16641"></a>Syntax</p>
<pre>
UTL_FILE.FSEEK (
   file             IN OUT  UTL_FILE.FILE_TYPE,
   absolute_offset  IN      PL_INTEGER DEFAULT NULL,
   relative_offset  IN      PLS_INTEGER DEFAULT NULL);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref16642"></a>Parameters</p>
<div id="ARPLS70929" class="tblformal">
<p class="titleintable"><a id="sthref16643"></a><a id="sthref16644"></a>Table 224-15 FSEEK Procedure Parameters</p>
<table class="cellalignment1229" title="FSEEK Procedure Parameters " summary="This table describes the Parameters of the UTL_FILE.FSEEK subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t24">Parameters</th>
<th class="cellalignment1227" id="r1c2-t24">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t24" headers="r1c1-t24">
<p><code>file</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t24 r1c2-t24">
<p>File handle</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t24" headers="r1c1-t24">
<p><code>absolute_offset</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t24 r1c2-t24">
<p>Absolute location to which to seek; default = <code>NULL</code></p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r4c1-t24" headers="r1c1-t24">
<p><code>relative_offset</code></p>
</td>
<td class="cellalignment1228" headers="r4c1-t24 r1c2-t24">
<p>Number of bytes to seek forward or backward; positive = forward, negative integer = backward, zero = current position, default = <code>NULL</code></p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref16645"></a>Exceptions</p>
<p><code>INVALID_FILEHANDLE</code></p>
<p><code>INVALID_OFFSET</code></p>
<p><code>INVALID_OPERATION</code></p>
<p><code>READ_ERROR</code></p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref16646"></a>Usage Notes</p>
<ul>
<li>
<p>Using <code>FSEEK</code>, you can read previous lines in the file without first closing and reopening the file. You must know the number of bytes by which you want to navigate.</p>
</li>
<li>
<p>If <code>relative_offset</code>, the procedure seeks forward. If <code>relative_offset</code> &gt; 0, or backward, if <code>relative_offset</code> &lt; 0, the procedure seeks through the file by the number of <code>relative_offset</code> bytes specified.</p>
</li>
<li>
<p>If the beginning of the file is reached before the number of bytes specified, then the file pointer is placed at the beginning of the file. If the end of the file is reached before the number of bytes specified, then an <code>INVALID_OFFSET</code> error is raised.</p>
</li>
<li>
<p>If <code>absolute_offset</code>, the procedure seeks to an absolute location specified in bytes.</p>
</li>
<li>
<p>If file is opened for byte mode operations, then the <code>INVALID</code> <code>OPERATION</code> exception is raised.</p>
</li>
</ul>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS70930" class="refsect2"><a id="i1003796"></a>
<hr />
<h3 class="refsect2"><a id="sthref16647"></a>GET_LINE Procedure</h3>
<p>This procedure reads text from the open file identified by the file handle and places the text in the output buffer parameter. Text is read up to, but not including, the line terminator, or up to the end of the file, or up to the end of the <code>len</code> parameter. It cannot exceed the <code>max_linesize</code> specified in <code>FOPEN</code>.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref16648"></a>Syntax</p>
<pre>
UTL_FILE.GET_LINE (
   file        IN  FILE_TYPE,
   buffer      OUT VARCHAR2,
   len         IN  PLS_INTEGER DEFAULT NULL);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref16649"></a>Parameters</p>
<div id="ARPLS70931" class="tblformal">
<p class="titleintable"><a id="sthref16650"></a><a id="sthref16651"></a>Table 224-16 GET_LINE Procedure Parameters</p>
<table class="cellalignment1229" title="GET_LINE Procedure Parameters " summary="This table describes the Parameters of the UTL_FILE.GETLINE subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t25">Parameters</th>
<th class="cellalignment1227" id="r1c2-t25">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t25" headers="r1c1-t25">
<p><code>file</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t25 r1c2-t25">
<p>Active file handle returned by an <code>FOPEN</code> call.</p>
<p>The file must be open for reading (mode <code>r</code>); otherwise an <code>INVALID_OPERATION</code> exception is raised.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t25" headers="r1c1-t25">
<p><code>buffer</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t25 r1c2-t25">
<p>Data buffer to receive the line read from the file</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r4c1-t25" headers="r1c1-t25">
<p><code>len</code></p>
</td>
<td class="cellalignment1228" headers="r4c1-t25 r1c2-t25">
<p>The number of bytes read from the file. Default is <code>NULL</code>. If <code>NULL</code>, Oracle supplies the value of <code>max_linesize</code>.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref16652"></a>Exceptions</p>
<p><code>INVALID_FILEHANDLE</code></p>
<p><code>INVALID_OPERATION</code></p>
<p><code>NO_DATA_FOUND</code></p>
<p><code>READ_ERROR</code></p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref16653"></a>Usage Notes</p>
<p>If the line does not fit in the buffer, a <code>READ_ERROR</code> exception is raised. If no text was read due to end of file, the <code>NO_DATA_FOUND</code> exception is raised. If the file is opened for byte mode operations, the <code>INVALID_OPERATION</code> exception is raised.</p>
<p>Because the line terminator character is not read into the buffer, reading blank lines returns empty strings.</p>
<p>The maximum size of the <code>buffer</code> parameter is 32767 bytes unless you specify a smaller size in <code>FOPEN</code>.If unspecified, Oracle supplies a default value of 1024. See also <a href="#i1006112">"GET_LINE_NCHAR Procedure"</a>.</p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS70932" class="refsect2"><a id="i1006112"></a>
<hr />
<h3 class="refsect2"><a id="sthref16654"></a>GET_LINE_NCHAR Procedure</h3>
<p>This procedure reads text from the open file identified by the file handle and places the text in the output buffer parameter. With this function, you can read a text file in Unicode instead of in the database character set.</p>
<p>The file must be opened in national character set mode, and must be encoded in the UTF8 character set. The expected buffer datatype is <code>NVARCHAR2</code>. If a variable of another datatype, such as <code>NCHAR</code>, <code>NCLOB</code>, or <code>VARCHAR2</code> is specified, PL/SQL will perform standard implicit conversion from <code>NVARCHAR2</code> after the text is read.</p>
<p>See also <a href="#i1003796">GET_LINE Procedure</a></p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref16655"></a>Syntax</p>
<pre>
UTL_FILE.GET_LINE_NCHAR (
   file        IN  FILE_TYPE,
   buffer      OUT NVARCHAR2,
   len         IN  PLS_INTEGER DEFAULT NULL);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref16656"></a>Parameters</p>
<div id="ARPLS73439" class="tblformal">
<p class="titleintable"><a id="sthref16657"></a><a id="sthref16658"></a>Table 224-17 GET_LINE_NCHAR Procedure Parameters</p>
<table class="cellalignment1229" title="GET_LINE_NCHAR Procedure Parameters " summary="This table describes the Parameters of the UTL_FILE.GET_LINE_NCHAR subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t26">Parameters</th>
<th class="cellalignment1227" id="r1c2-t26">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t26" headers="r1c1-t26">
<p><code>file</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t26 r1c2-t26">
<p>Active file handle returned by an <code>FOPEN_NCHAR</code> call. The file must be open for reading (mode <code>r</code>). If the file is opened by <code>FOPEN</code> instead of <code>FOPEN_NCHAR</code>, a <code>CHARSETMISMATCH</code> exception is raised.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t26" headers="r1c1-t26">
<p><code>buffer</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t26 r1c2-t26">
<p>Data buffer to receive the line read from the file</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r4c1-t26" headers="r1c1-t26">
<p><code>len</code></p>
</td>
<td class="cellalignment1228" headers="r4c1-t26 r1c2-t26">
<p>The number of bytes read from the file. Default is <code>NULL</code>. If <code>NULL</code>, Oracle supplies the value of max_linesize.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref16659"></a>Exceptions</p>
<p><code>INVALID_FILEHANDLE</code></p>
<p><code>INVALID_OPERATION</code></p>
<p><code>NO_DATA_FOUND</code></p>
<p><code>READ_ERROR</code></p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS70934" class="refsect2"><a id="i1003849"></a>
<hr />
<h3 class="refsect2"><a id="sthref16660"></a>GET_RAW Procedure</h3>
<p>This procedure reads a <code>RAW</code> string value from a file and adjusts the file pointer ahead by the number of bytes read. <code>UTL_FILE.GET_RAW</code> ignores line terminators.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref16661"></a>Syntax</p>
<pre>
UTL_FILE.GET_RAW (
   file       IN            UTL_FILE.FILE_TYPE, 
   buffer     OUT NOCOPY    RAW, 
   len        IN            PLS_INTEGER DEFAULT NULL);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref16662"></a>Parameters</p>
<div id="ARPLS70935" class="tblformal">
<p class="titleintable"><a id="sthref16663"></a><a id="sthref16664"></a>Table 224-18 GET_RAW Procedure Parameters</p>
<table class="cellalignment1229" title="GET_RAW Procedure Parameters " summary="This table describes the Parameters of the UTL_FILE.GET_RAW subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t27">Parameters</th>
<th class="cellalignment1227" id="r1c2-t27">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t27" headers="r1c1-t27">
<p><code>file</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t27 r1c2-t27">
<p>File handle</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t27" headers="r1c1-t27">
<p><code>buffer</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t27 r1c2-t27">
<p><code>RAW</code> data</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r4c1-t27" headers="r1c1-t27">
<p><code>len</code></p>
</td>
<td class="cellalignment1228" headers="r4c1-t27 r1c2-t27">
<p>The number of bytes read from the file. Default is <code>NULL</code>. If <code>NULL</code>, <code>len</code> is assumed to be the maximum length of <code>RAW</code>.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref16665"></a>Exceptions</p>
<p><code>INVALID_FILEHANDLE</code></p>
<p><code>INVALID_OPERATION</code></p>
<p><code>LENGTH_MISMATCH</code></p>
<p><code>NO_DATA_FOUND</code></p>
<p><code>READ_ERROR</code></p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref16666"></a>Usage Notes</p>
<p>The subprogram will raise <code>No_Data_Found</code> when it attempts to read past the end of the file. Your application should allow for this by catching the exception in its processing loop.</p>
<pre>
PROCEDURE Sys.p (n IN VARCHAR2) IS
      h     UTL_FILE.FILE_TYPE := UTL_FILE.FOPEN('D', n, 'r', 32767);
      Buf   RAW(32767);
      Amnt  CONSTANT PLS_INTEGER := 32767;
    BEGIN
      LOOP
        BEGIN
          Utl_File.Get_Raw(h, Buf, Amnt);
          -- Do something with this chunk
        EXCEPTION WHEN No_Data_Found THEN EXIT; END;
      END LOOP;
      UTL_FILE.FCLOSE (h);
    END;
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS70936" class="refsect2"><a id="i997322"></a>
<hr />
<h3 class="refsect2"><a id="sthref16667"></a>IS_OPEN Function</h3>
<p>This function tests a file handle to see if it identifies an open file. <code>IS_OPEN</code> reports only whether a file handle represents a file that has been opened, but not yet closed. It does not guarantee that there will be no operating system errors when you attempt to use the file handle.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref16668"></a>Syntax</p>
<pre>
UTL_FILE.IS_OPEN (
   file  IN FILE_TYPE)
  RETURN BOOLEAN;
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref16669"></a>Parameters</p>
<div id="ARPLS73440" class="tblformal">
<p class="titleintable"><a id="sthref16670"></a><a id="sthref16671"></a>Table 224-19 IS_OPEN Function Parameters</p>
<table class="cellalignment1229" title="IS_OPEN Function Parameters " summary="This table describes the Parameters of the UTL_FILE.IS_OPEN subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t28">Parameter</th>
<th class="cellalignment1227" id="r1c2-t28">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t28" headers="r1c1-t28">
<p><code>file</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t28 r1c2-t28">
<p>Active file handle returned by an <code>FOPEN</code> or <code>FOPEN_NCHAR</code> call</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref16672"></a>Return Values</p>
<p><code>TRUE</code> or <code>FALSE</code></p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref16673"></a>Exceptions</p>
<p><code>INVALID_FILEHANDLE</code></p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS70938" class="refsect2"><a id="i1003892"></a>
<hr />
<h3 class="refsect2"><a id="sthref16674"></a>NEW_LINE Procedure</h3>
<p>This procedure writes one or more line terminators to the file identified by the input file handle. This procedure is separate from <code>PUT</code> because the line terminator is a platform-specific character or sequence of characters.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref16675"></a>Syntax</p>
<pre>
UTL_FILE.NEW_LINE (
   file     IN FILE_TYPE,
   lines    IN BINARY_INTEGER := 1);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref16676"></a>Parameters</p>
<div id="ARPLS70939" class="tblformal">
<p class="titleintable"><a id="sthref16677"></a><a id="sthref16678"></a>Table 224-20 NEW_LINE Procedure Parameters</p>
<table class="cellalignment1229" title="NEW_LINE Procedure Parameters " summary="This table describes the Parameters of the UTL_FILE.NEW_LINE subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t29">Parameters</th>
<th class="cellalignment1227" id="r1c2-t29">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t29" headers="r1c1-t29">
<p><code>file</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t29 r1c2-t29">
<p>Active file handle returned by an <code>FOPEN</code> or <code>FOPEN_NCHAR</code> call</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t29" headers="r1c1-t29">
<p><code>lines</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t29 r1c2-t29">
<p>Number of line terminators to be written to the file</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref16679"></a>Exceptions</p>
<p><code>INVALID_FILEHANDLE</code></p>
<p><code>INVALID_OPERATION</code></p>
<p><code>WRITE_ERROR</code></p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS70940" class="refsect2"><a id="i997504"></a>
<hr />
<h3 class="refsect2"><a id="sthref16680"></a>PUT Procedure</h3>
<p><code>PUT</code> writes the text string stored in the buffer parameter to the open file identified by the file handle. The file must be open for write operations. No line terminator is appended by <code>PUT</code>; use <code>NEW_LINE</code> to terminate the line or use <code>PUT_LINE</code> to write a complete line with a line terminator. See also <a href="#i997543">"PUT_NCHAR Procedure"</a>.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref16681"></a>Syntax</p>
<pre>
UTL_FILE.PUT (
   file      IN FILE_TYPE,
   buffer    IN VARCHAR2);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref16682"></a>Parameters</p>
<div id="ARPLS70941" class="tblformal">
<p class="titleintable"><a id="sthref16683"></a><a id="sthref16684"></a>Table 224-21 PUT Procedure Parameters</p>
<table class="cellalignment1229" title="PUT Procedure Parameters " summary="This table describes the Parameters of the UTL_FILE.PUT subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t30">Parameters</th>
<th class="cellalignment1227" id="r1c2-t30">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t30" headers="r1c1-t30">
<p><code>file</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t30 r1c2-t30">
<p>Active file handle returned by an <code>FOPEN_NCHAR</code> call. The file must be open for writing.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t30" headers="r1c1-t30">
<p><code>buffer</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t30 r1c2-t30">
<p>Buffer that contains the text to be written to the file.</p>
<p>User must have opened the file using mode <code>w</code> or mode <code>a</code>; otherwise, an <code>INVALID_OPERATION</code> exception is raised.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref16685"></a>Usage Notes</p>
<p>The maximum size of the <code>buffer</code> parameter is 32767 bytes unless you specify a smaller size in <code>FOPEN</code>. If unspecified, Oracle supplies a default value of 1024. The sum of all sequential <code>PUT</code> calls cannot exceed 32767 without intermediate buffer flushes.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref16686"></a>Exceptions</p>
<p><code>INVALID_FILEHANDLE</code></p>
<p><code>INVALID_OPERATION</code></p>
<p><code>WRITE_ERROR</code></p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS70942" class="refsect2"><a id="i997640"></a>
<hr />
<h3 class="refsect2"><a id="sthref16687"></a><a id="sthref16688"></a>PUT_LINE Procedure</h3>
<p>This procedure writes the text string stored in the buffer parameter to the open file identified by the file handle. The file must be open for write operations. <code>PUT_LINE</code> terminates the line with the platform-specific line terminator character or characters.</p>
<p>See also <a href="#i997684">"PUT_LINE_NCHAR Procedure"</a>.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref16689"></a>Syntax</p>
<pre>
UTL_FILE.PUT_LINE (
   file      IN FILE_TYPE,
   buffer    IN VARCHAR2,
   autoflush IN BOOLEAN DEFAULT FALSE);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref16690"></a>Parameters</p>
<div id="ARPLS70943" class="tblformal">
<p class="titleintable"><a id="sthref16691"></a><a id="sthref16692"></a>Table 224-22 PUT_LINE Procedure Parameters</p>
<table class="cellalignment1229" title="PUT_LINE Procedure Parameters " summary="This table describes the Parameters of the UTL_FILE.PUT_LINE subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t31">Parameters</th>
<th class="cellalignment1227" id="r1c2-t31">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t31" headers="r1c1-t31">
<p><code>file</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t31 r1c2-t31">
<p>Active file handle returned by an <code>FOPEN</code> call</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t31" headers="r1c1-t31">
<p><code>buffer</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t31 r1c2-t31">
<p>Text buffer that contains the lines to be written to the file</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r4c1-t31" headers="r1c1-t31">
<p><code>autoflush</code></p>
</td>
<td class="cellalignment1228" headers="r4c1-t31 r1c2-t31">
<p>Flushes the buffer to disk after the <code>WRITE</code></p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref16693"></a>Exceptions</p>
<p><code>INVALID_FILEHANDLE</code></p>
<p><code>INVALID_OPERATION</code></p>
<p><code>WRITE_ERROR</code></p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref16694"></a>Usage Notes</p>
<ul>
<li>
<p>The maximum size of the <code>buffer</code> parameter is 32767 bytes unless you specify a smaller size in <code>FOPEN</code>. If unspecified, Oracle supplies a default value of 1024. The sum of all sequential <code>PUT</code> calls cannot exceed 32767 without intermediate buffer flushes.</p>
</li>
<li>
<p>If file is opened for byte mode operations, then the <code>INVALID</code> <code>OPERATION</code> exception is raised.</p>
</li>
</ul>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS70944" class="refsect2"><a id="i997684"></a>
<hr />
<h3 class="refsect2"><a id="sthref16695"></a>PUT_LINE_NCHAR Procedure</h3>
<p>This procedure writes the text string stored in the buffer parameter to the open file identified by the file handle. With this function, you can write a text file in Unicode instead of in the database character set. This procedure is equivalent to the <a href="#i997543">PUT_NCHAR Procedure</a>, except that the line separator is appended to the written text. See also <a href="#i997640">PUT_LINE Procedure</a>.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref16696"></a>Syntax</p>
<pre>
UTL_FILE.PUT_LINE_NCHAR (
   file    IN FILE_TYPE,
   buffer  IN NVARCHAR2);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref16697"></a>Parameters</p>
<div id="ARPLS70945" class="tblformal">
<p class="titleintable"><a id="sthref16698"></a><a id="sthref16699"></a>Table 224-23 PUT_LINE_NCHAR Procedure Parameters</p>
<table class="cellalignment1229" title="PUT_LINE_NCHAR Procedure Parameters " summary="This table describes the Parameters of the UTL_FILE.PUT_LINE_NCHAR subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t32">Parameters</th>
<th class="cellalignment1227" id="r1c2-t32">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t32" headers="r1c1-t32">
<p><code>file</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t32 r1c2-t32">
<p>Active file handle returned by an <code>FOPEN_NCHAR</code> call. The file must be open for writing.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t32" headers="r1c1-t32">
<p><code>buffer</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t32 r1c2-t32">
<p>Text buffer that contains the lines to be written to the file</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref16700"></a>Exceptions</p>
<p><code>INVALID_FILEHANDLE</code></p>
<p><code>INVALID_OPERATION</code></p>
<p><code>WRITE_ERROR</code></p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref16701"></a>Usage Notes</p>
<ul>
<li>
<p>The maximum size of the <code>buffer</code> parameter is 32767 bytes unless you specify a smaller size in <code>FOPEN</code>. If unspecified, Oracle supplies a default value of 1024. The sum of all sequential <code>PUT</code> calls cannot exceed 32767 without intermediate buffer flushes.</p>
</li>
<li>
<p>If file is opened for byte mode operations, then the <code>INVALID</code> <code>OPERATION</code> exception is raised.</p>
</li>
</ul>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS70946" class="refsect2"><a id="i997543"></a>
<hr />
<h3 class="refsect2"><a id="sthref16702"></a>PUT_NCHAR Procedure</h3>
<p>This procedure writes the text string stored in the buffer parameter to the open file identified by the file handle.</p>
<p>With this function, you can write a text file in Unicode instead of in the database character set. The file must be opened in the national character set mode. The text string will be written in the UTF8 character set. The expected buffer datatype is <code>NVARCHAR2</code>. If a variable of another datatype is specified, PL/SQL will perform implicit conversion to <code>NVARCHAR2</code> before writing the text.</p>
<p>See also <a href="#i997504">PUT Procedure</a></p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref16703"></a>Syntax</p>
<pre>
UTL_FILE.PUT_NCHAR (
   file      IN FILE_TYPE,
   buffer    IN NVARCHAR2);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref16704"></a>Parameters</p>
<div id="ARPLS73441" class="tblformal">
<p class="titleintable"><a id="sthref16705"></a><a id="sthref16706"></a>Table 224-24 PUT_NCHAR Procedure Parameters</p>
<table class="cellalignment1229" title="PUT_NCHAR Procedure Parameters " summary="This table describes the Parameters of the UTL_FILE.PUT_NCHAR subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t33">Parameters</th>
<th class="cellalignment1227" id="r1c2-t33">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t33" headers="r1c1-t33">
<p><code>file</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t33 r1c2-t33">
<p>Active file handle returned by an <code>FOPEN_NCHAR</code> call. If the file is opened by <code>FOPEN</code> instead of <code>FOPEN_NCHAR</code>, a <code>CHARSETMISMATCH</code> exception is raised.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t33" headers="r1c1-t33">
<p><code>buffer</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t33 r1c2-t33">
<p>Buffer that contains the text to be written to the file.</p>
<p>User must have opened the file using mode <code>w</code> or mode <code>a</code>; otherwise, an <code>INVALID_OPERATION</code> exception is raised.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref16707"></a>Exceptions</p>
<p><code>INVALID_FILEHANDLE</code></p>
<p><code>INVALID_OPERATION</code></p>
<p><code>WRITE_ERROR</code></p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref16708"></a>Usage Notes</p>
<p>The maximum size of the <code>buffer</code> parameter is 32767 bytes unless you specify a smaller size in <code>FOPEN</code>. If unspecified, Oracle supplies a default value of 1024. The sum of all sequential <code>PUT</code> calls cannot exceed 32767 without intermediate buffer flushes.</p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS70948" class="refsect2"><a id="i1004013"></a>
<hr />
<h3 class="refsect2"><a id="sthref16709"></a>PUTF Procedure</h3>
<p>This procedure is a formatted <code>PUT</code> procedure. It works like a limited <code>printf</code>(). See also <a href="#i997790">PUTF_NCHAR Procedure</a>.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref16710"></a>Syntax</p>
<pre>
UTL_FILE.PUTF (
   file    IN FILE_TYPE,
   format  IN VARCHAR2,
   [arg1   IN VARCHAR2  DEFAULT NULL,
   . . .  
   arg5    IN VARCHAR2  DEFAULT NULL]); 
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref16711"></a>Parameters</p>
<div id="ARPLS70949" class="tblformal">
<p class="titleintable"><a id="sthref16712"></a><a id="sthref16713"></a>Table 224-25 PUTF Procedure Parameters</p>
<table class="cellalignment1229" title="PUTF Procedure Parameters " summary="This table describes the Parameters of the UTL_FILE.PUTF subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t34">Parameters</th>
<th class="cellalignment1227" id="r1c2-t34">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t34" headers="r1c1-t34">
<p><code>file</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t34 r1c2-t34">
<p>Active file handle returned by an <code>FOPEN</code> call</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t34" headers="r1c1-t34">
<p><code>format</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t34 r1c2-t34">
<p>Format string that can contain text as well as the formatting characters <code>\n</code> and <code>%s</code></p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r4c1-t34" headers="r1c1-t34">
<p><code>arg1..arg5</code></p>
</td>
<td class="cellalignment1228" headers="r4c1-t34 r1c2-t34">
<p>From one to five operational argument strings.</p>
<p>Argument strings are substituted, in order, for the <code>%s</code> formatters in the format string.</p>
<p>If there are more formatters in the format parameter string than there are arguments, then an empty string is substituted for each <code>%s</code> for which there is no argument.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref16714"></a>Usage Notes</p>
<ul>
<li>
<p>If file is opened for byte mode operations, then the <code>INVALID</code> <code>OPERATION</code> exception is raised.</p>
</li>
<li>
<p>The format string can contain any text, but the character sequences <code>%s</code> and <code>\n</code> have special meaning.</p>
<div class="inftblinformal">
<table class="cellalignment1226" title="Character Sequences" summary="This table describes the Character Sequences that have special meaning for the PUTF subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t35">Character Sequence</th>
<th class="cellalignment1227" id="r1c2-t35">Meaning</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t35" headers="r1c1-t35"><code>%s</code></td>
<td class="cellalignment1228" headers="r2c1-t35 r1c2-t35">Substitute this sequence with the string value of the next argument in the argument list.</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t35" headers="r1c1-t35"><code>\n</code></td>
<td class="cellalignment1228" headers="r3c1-t35 r1c2-t35">Substitute with the appropriate platform-specific line terminator.</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" --></li>
</ul>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref16715"></a>Exceptions</p>
<p><code>INVALID_FILEHANDLE</code></p>
<p><code>INVALID_OPERATION</code></p>
<p><code>WRITE_ERROR</code></p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref16716"></a>Examples</p>
<p>The following example writes the lines:</p>
<pre>
Hello, world!
I come from Zork with greetings for all earthlings.

my_world  varchar2(4) := 'Zork';
...
PUTF(my_handle, 'Hello, world!\nI come from %s with %s.\n',
                my_world,
                'greetings for all earthlings');
</pre>
<p>If there are more <code>%s</code> formatters in the format parameter than there are arguments, then an empty string is substituted for each <code>%s</code> for which there is no matching argument.</p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS70950" class="refsect2"><a id="i997790"></a>
<hr />
<h3 class="refsect2"><a id="sthref16717"></a>PUTF_NCHAR Procedure</h3>
<p>This procedure is a formatted version of a <a href="#i997543">PUT_NCHAR Procedure</a>. Using <code>PUTF_NCHAR</code>, you can write a text file in Unicode instead of in the database character set. It accepts a format string with formatting elements <code>\n</code> and <code>%s</code>, and up to five arguments to be substituted for consecutive instances of <code>%s</code> in the format string. The expected datatype of the format string and the arguments is <code>NVARCHAR2</code>.</p>
<p>If variables of another datatype are specified, PL/SQL will perform implicit conversion to <code>NVARCHAR2</code> before formatting the text. Formatted text is written in the UTF8 character set to the file identified by the file handle. The file must be opened in the national character set mode.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref16718"></a>Syntax</p>
<pre>
UTL_FILE.PUTF_NCHAR (
   file    IN FILE_TYPE,
   format  IN NVARCHAR2,
   [arg1   IN NVARCHAR2  DEFAULT NULL,
   . . .  
   arg5    IN NVARCHAR2  DEFAULT NULL]); 
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref16719"></a>Parameters</p>
<div id="ARPLS70951" class="tblformal">
<p class="titleintable"><a id="sthref16720"></a><a id="sthref16721"></a>Table 224-26 PUTF_NCHAR Procedure Parameters</p>
<table class="cellalignment1229" title="PUTF_NCHAR Procedure Parameters " summary="This table describes the Parameters of the UTL_FILE.PUTF_NCHAR subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t36">Parameters</th>
<th class="cellalignment1227" id="r1c2-t36">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t36" headers="r1c1-t36">
<p><code>file</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t36 r1c2-t36">
<p>Active file handle returned by an <code>FOPEN_NCHAR</code> call. The file must be open for reading (mode <code>r</code>). If the file is opened by <code>FOPEN</code> instead of <code>FOPEN_NCHAR</code>, a <code>CHARSETMISMATCH</code> exception is raised.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t36" headers="r1c1-t36">
<p><code>format</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t36 r1c2-t36">
<p>Format string that can contain text as well as the formatting characters <code>\n</code> and %s</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r4c1-t36" headers="r1c1-t36">
<p><code>arg1..arg5</code></p>
</td>
<td class="cellalignment1228" headers="r4c1-t36 r1c2-t36">
<p>From one to five operational argument strings.</p>
<p>Argument strings are substituted, in order, for the %s formatters in the format string.</p>
<p>If there are more formatters in the format parameter string than there are arguments, then an empty string is substituted for each %s for which there is no argument.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref16722"></a>Exceptions</p>
<p><code>INVALID_FILEHANDLE</code></p>
<p><code>INVALID_OPERATION</code></p>
<p><code>WRITE_ERROR</code></p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref16723"></a>Usage Notes</p>
<ul>
<li>
<p>The maximum size of the <code>buffer</code> parameter is 32767 bytes unless you specify a smaller size in <code>FOPEN</code>. If unspecified, Oracle supplies a default value of 1024. The sum of all sequential <code>PUT</code> calls cannot exceed 32767 without intermediate buffer flushes.</p>
</li>
<li>
<p>If file is opened for byte mode operations, then the <code>INVALID</code> <code>OPERATION</code> exception is raised.</p>
</li>
</ul>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS70952" class="refsect2"><a id="i997577"></a>
<hr />
<h3 class="refsect2"><a id="sthref16724"></a>PUT_RAW Procedure</h3>
<p>This procedure accepts as input a <code>RAW</code> data value and writes the value to the output buffer.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref16725"></a>Syntax</p>
<pre>
UTL_FILE.PUT_RAW (
   file          IN    UTL_FILE.FILE_TYPE,
   buffer        IN    RAW, 
   autoflush     IN    BOOLEAN DEFAULT FALSE);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref16726"></a>Parameters</p>
<div id="ARPLS70953" class="tblformal">
<p class="titleintable"><a id="sthref16727"></a><a id="sthref16728"></a>Table 224-27 PUT_RAW Procedure Parameters</p>
<table class="cellalignment1229" title="PUT_RAW Procedure Parameters " summary="This table describes the Parameters of the UTL_FILE.PUT_RAW subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t37">Parameters</th>
<th class="cellalignment1227" id="r1c2-t37">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t37" headers="r1c1-t37">
<p><code>file</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t37 r1c2-t37">
<p>File handle</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t37" headers="r1c1-t37">
<p><code>buffer</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t37 r1c2-t37">
<p>The <code>RAW</code> data written to the buffer</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r4c1-t37" headers="r1c1-t37">
<p><code>autoflush</code></p>
</td>
<td class="cellalignment1228" headers="r4c1-t37 r1c2-t37">
<p>If <code>TRUE</code>, then performs a flush after writing the value to the output buffer; default is <code>FALSE.</code></p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref16729"></a>Exceptions</p>
<p><code>INVALID_FILEHANDLE</code></p>
<p><code>INVALID_OPERATION</code></p>
<p><code>WRITE_ERROR</code></p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref16730"></a>Usage Notes</p>
<p>You can request an automatic flush of the buffer by setting the third argument to <code>TRUE</code>.</p>
<p>The maximum size of the <code>buffer</code> parameter is 32767 bytes unless you specify a smaller size in <code>FOPEN</code>. If unspecified, Oracle supplies a default value of 1024. The sum of all sequential <code>PUT</code> calls cannot exceed 32767 without intermediate buffer flushes.</p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" --></div>
<!-- class="refsect1" --></div>
<!-- class="refentry" --></div>
<!-- class="chapter" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment1219">
<tr>
<td class="cellalignment1228">
<table class="cellalignment1224">
<tr>
<td class="cellalignment1223"><a href="u_encode.htm"><img width="24" height="24" src="../../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment1223"><a href="u_http.htm"><img width="24" height="24" src="../../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;1996, 2013,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment1231">
<table class="cellalignment1222">
<tr>
<td class="cellalignment1223"><a href="../../index.htm"><img width="24" height="24" src="../../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment1223"><a href="../../nav/portal_booklist.htm"><img width="24" height="24" src="../../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment1223"><a href="toc.htm"><img width="24" height="24" src="../../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment1223"><a href="index.htm"><img width="24" height="24" src="../../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment1223"><a href="../../nav/mindx.htm"><img width="24" height="24" src="../../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment1223"><a href="../../dcommon/html/feedback.htm"><img width="24" height="24" src="../../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>
</body>
</html>
