<!DOCTYPE html>
<html lang="en" >
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1">
<meta charset="utf-8">
<title>UTL_I18N</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Version 5.1.2 Build 737" />
<meta name="dcterms.created" content="2013-07-19T18:56:7Z" />
<meta name="robots" content="all" />
<meta name="dcterms.title" content="Database PL/SQL Packages and Types Reference" />
<meta name="dcterms.identifier" content="E40758-03" />
<meta name="dcterms.isVersionOf" content="ARPLS" />
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;1996, 2013,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved." />
<link rel="Start" href="../../index.htm" title="Home" type="text/html" />
<link rel="Copyright" href="../../dcommon/html/cpyr.htm" title="Copyright" type="text/html" />

<script type="application/javascript"  src="../../dcommon/js/headfoot.js"></script>
<script type="application/javascript"  src="../../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html" />
<link rel="Index" href="index.htm" title="Index" type="text/html" />
<link rel="Prev" href="u_http.htm" title="Previous" type="text/html" />
<link rel="Next" href="u_inaddr.htm" title="Next" type="text/html" />
<link rel="alternate" href="../e40758.pdf" title="PDF version" type="application/pdf" />
<link rel="schema.dcterms" href="http://purl.org/dc/terms/" />
<link rel="stylesheet" href="../../dcommon/css/fusiondoc.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/header.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/footer.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/fonts.css">
<link rel="stylesheet" href="../../dcommon/css/foundation.css">
<link rel="stylesheet" href="../../dcommon/css/codemirror.css">
<link rel="stylesheet" type="text/css" title="Default" href="../../nav/css/html5.css">
<link rel="stylesheet" href="../../dcommon/css/respond-480-tablet.css">
<link rel="stylesheet" href="../../dcommon/css/respond-768-laptop.css">
<link rel="stylesheet" href="../../dcommon/css/respond-1140-deskop.css">
<script type="application/javascript" src="../../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">230/265</span> <!-- End Header -->
<div id="ARPLS410" class="chapter"><a id="CHDICDCB"></a>
<h1 class="chapter"><span class="secnum">226</span> UTL_I18N</h1>
<p><code><a id="sthref17039"></a>UTL_I18N</code> is a set of services that provides additional globalization functionality for applications written in PL/SQL.</p>
<div class="infoboxnotealso">
<p class="notep1"><span class="bold">See Also</span>:</p>
<a class="olink NLSPG" href="../../server.112/e10729/toc.htm"><span class="italic">Oracle Database Globalization Support Guide</span></a></div>
<p>The chapter contains the following topics:</p>
<ul>
<li>
<p><a href="#CHDDJHHI">Using UTL_I18N</a></p>
<ul>
<li>
<p>Overview</p>
</li>
<li>
<p>Security Model</p>
</li>
<li>
<p>Constants</p>
</li>
</ul>
</li>
<li>
<p><a href="#CHDEEBGI">Summary of UTL_I18N Subprograms</a></p>
</li>
</ul>
<div class="refentry"><a id="CHDDJHHI"></a>
<hr />
<div id="ARPLS71114" class="refsect1">
<h2 class="refsect1">Using UTL_I18N</h2>
<p>This section contains topics which relate to using the <code>UTL_I18N</code> package.</p>
<ul>
<li>
<p><a href="#i1000606">Overview</a></p>
</li>
<li>
<p><a href="#CJHIAGJH">Security Model</a></p>
</li>
<li>
<p><a href="#i1000783">Constants</a></p>
</li>
</ul>
<div id="ARPLS71115" class="refsect2"><a id="i1000606"></a>
<hr />
<h3 class="refsect2">Overview</h3>
<p>The <code>UTL_I18N</code> PL/SQL package consists of the following categories of services:</p>
<ul>
<li>
<p>String conversion functions for various datatypes.</p>
</li>
<li>
<p>Functions that convert a text string to character references and vice versa.</p>
</li>
<li>
<p>Functions that map between Oracle, Java, and ISO languages and territories.</p>
</li>
<li>
<p>Functions that map between Oracle, Internet Assigned Numbers Authority (IANA), and e-mail safe character sets.</p>
</li>
<li>
<p>A function that returns the Oracle character set name from an Oracle language name.</p>
</li>
<li>
<p>A function that performs script transliteration.</p>
</li>
<li>
<p>Functions that return the ISO currency code, local time zones, and local languages supported for a given territory.</p>
</li>
<li>
<p>Functions that return the most appropriate linguistic sort, a listing of all the applicable linguistic sorts, and the local territories supported for a given language.</p>
</li>
<li>
<p>Functions that map between the Oracle full and short language names.</p>
</li>
<li>
<p>A function that returns the language translation of a given language and territory name.</p>
</li>
<li>
<p>A function that returns a listing of the most commonly used time zones.</p>
</li>
</ul>
</div>
<!-- class="refsect2" -->
<div id="ARPLS73281" class="refsect2"><a id="CJHIAGJH"></a>
<hr />
<h3 class="refsect2">Security Model</h3>
<p>The functions of the <code>UTL_I18N</code> package neither read database contents nor modify them. The functions operate on their arguments only and/or they retrieve static internationalization information from NLS Data files. The execution privilege for the package is granted to <code>PUBLIC</code> by default</p>
</div>
<!-- class="refsect2" -->
<div id="ARPLS71116" class="refsect2"><a id="i1000783"></a>
<hr />
<h3 class="refsect2">Constants</h3>
<p>The <code>UTL_I18N</code> package uses the constants shown in <a href="#CHDCFGJA">Table 226-1</a>.</p>
<div id="ARPLS71117" class="tblformal">
<p class="titleintable"><a id="sthref17040"></a><a id="CHDCFGJA"></a>Table 226-1 UTL_I18N Constants</p>
<table class="cellalignment1229" title="UTL_I18N Constants" summary="This table describes constants used by the UTL_I18N package." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t3">Constant</th>
<th class="cellalignment1227" id="r1c2-t3">Type</th>
<th class="cellalignment1227" id="r1c3-t3">Value</th>
<th class="cellalignment1227" id="r1c4-t3">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t3" headers="r1c1-t3">
<p><code>GENERIC_CONTEXT</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t3 r1c2-t3">
<p><code>PLS_INTEGER</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t3 r1c3-t3">
<p><code>0</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t3 r1c4-t3">
<p>Returns the default character set for general cases.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t3" headers="r1c1-t3">
<p><code>MAIL_GENERIC</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t3 r1c2-t3">
<p><code>PLS_INTEGER</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t3 r1c3-t3">
<p><code>0</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t3 r1c4-t3">
<p>Map from an Oracle character set name to an email safe character set name on a non-Windows platform.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r4c1-t3" headers="r1c1-t3">
<p><code>ORACLE_TO_IANA</code></p>
</td>
<td class="cellalignment1228" headers="r4c1-t3 r1c2-t3">
<p><code>PLS_INTEGER</code></p>
</td>
<td class="cellalignment1228" headers="r4c1-t3 r1c3-t3">
<p><code>0</code></p>
</td>
<td class="cellalignment1228" headers="r4c1-t3 r1c4-t3">
<p>Map from an Oracle character set name to an IANA character set name.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r5c1-t3" headers="r1c1-t3">
<p><code>SHIFT_IN</code></p>
</td>
<td class="cellalignment1228" headers="r5c1-t3 r1c2-t3">
<p><code>PLS_INTEGER</code></p>
</td>
<td class="cellalignment1228" headers="r5c1-t3 r1c3-t3">
<p><code>0</code></p>
</td>
<td class="cellalignment1228" headers="r5c1-t3 r1c4-t3">
<p>Used with <code>shift_status</code>. Must be set the first time it is called in piecewise conversion.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r6c1-t3" headers="r1c1-t3">
<p><code>IANA_TO_ORACLE</code></p>
</td>
<td class="cellalignment1228" headers="r6c1-t3 r1c2-t3">
<p><code>PLS_INTEGER</code></p>
</td>
<td class="cellalignment1228" headers="r6c1-t3 r1c3-t3">
<p><code>1</code></p>
</td>
<td class="cellalignment1228" headers="r6c1-t3 r1c4-t3">
<p>Map from an IANA character set name to an Oracle character set name.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r7c1-t3" headers="r1c1-t3">
<p><code>MAIL_CONTEXT</code></p>
</td>
<td class="cellalignment1228" headers="r7c1-t3 r1c2-t3">
<p><code>PLS_INTEGER</code></p>
</td>
<td class="cellalignment1228" headers="r7c1-t3 r1c3-t3">
<p><code>1</code></p>
</td>
<td class="cellalignment1228" headers="r7c1-t3 r1c4-t3">
<p>The mapping is between an Oracle character set name and an email safe character set name.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r8c1-t3" headers="r1c1-t3">
<p><code>MAIL_WINDOWS</code></p>
</td>
<td class="cellalignment1228" headers="r8c1-t3 r1c2-t3">
<p><code>PLS_INTEGER</code></p>
</td>
<td class="cellalignment1228" headers="r8c1-t3 r1c3-t3">
<p><code>1</code></p>
</td>
<td class="cellalignment1228" headers="r8c1-t3 r1c4-t3">
<p>Map from an Oracle character set name to an email safe character set name on a Windows platform.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r9c1-t3" headers="r1c1-t3">
<p><code>SHIFT_OUT</code></p>
</td>
<td class="cellalignment1228" headers="r9c1-t3 r1c2-t3">
<p><code>PLS_INTEGER</code></p>
</td>
<td class="cellalignment1228" headers="r9c1-t3 r1c3-t3">
<p><code>1</code></p>
</td>
<td class="cellalignment1228" headers="r9c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r10c1-t3" headers="r1c1-t3">
<p><code>FWKATAKANA_HIRAGANA</code></p>
</td>
<td class="cellalignment1228" headers="r10c1-t3 r1c2-t3">
<p><code>VARCHAR2(30)</code></p>
</td>
<td class="cellalignment1228" headers="r10c1-t3 r1c3-t3">
<p><code>'fwkatakana_hiragana'</code></p>
</td>
<td class="cellalignment1228" headers="r10c1-t3 r1c4-t3">
<p>Converts only fullwidth Katakana characters to fullwidth Hiragana characters.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r11c1-t3" headers="r1c1-t3">
<p><code>FWKATAKANA_HWKATAKANA</code></p>
</td>
<td class="cellalignment1228" headers="r11c1-t3 r1c2-t3">
<p><code>VARCHAR2(30)</code></p>
</td>
<td class="cellalignment1228" headers="r11c1-t3 r1c3-t3">
<p><code>'fwkatakana_hwkatakana'</code></p>
</td>
<td class="cellalignment1228" headers="r11c1-t3 r1c4-t3">
<p>Converts only fullwidth Katakana characters to halfwidth Katakana characters.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r12c1-t3" headers="r1c1-t3">
<p><code>HIRAGANA_FWKATAKANA</code></p>
</td>
<td class="cellalignment1228" headers="r12c1-t3 r1c2-t3">
<p><code>VARCHAR2(30)</code></p>
</td>
<td class="cellalignment1228" headers="r12c1-t3 r1c3-t3">
<p><code>'hiragana_fwkatakana'</code></p>
</td>
<td class="cellalignment1228" headers="r12c1-t3 r1c4-t3">
<p>Converts only fullwidth Hiragana characters to fullwidth Katakana characters.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r13c1-t3" headers="r1c1-t3">
<p><code>HIRAGANA_HWKATAKANA</code></p>
</td>
<td class="cellalignment1228" headers="r13c1-t3 r1c2-t3">
<p><code>VARCHAR2(30)</code></p>
</td>
<td class="cellalignment1228" headers="r13c1-t3 r1c3-t3">
<p><code>'hiragana_hwkatakana'</code></p>
</td>
<td class="cellalignment1228" headers="r13c1-t3 r1c4-t3">
<p>Converts only fullwidth Hiragana characters to halfwidth Katakana characters.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r14c1-t3" headers="r1c1-t3">
<p><code>HWKATAKANA_FWKATAKANA</code></p>
</td>
<td class="cellalignment1228" headers="r14c1-t3 r1c2-t3">
<p><code>VARCHAR2(30)</code></p>
</td>
<td class="cellalignment1228" headers="r14c1-t3 r1c3-t3">
<p><code>'hwkatakana_fwkatakana'</code></p>
</td>
<td class="cellalignment1228" headers="r14c1-t3 r1c4-t3">
<p>Converts only halfwidth Katakana characters to fullwidth Katakana characters.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r15c1-t3" headers="r1c1-t3">
<p><code>HWKATAKANA_HIRAGANA</code></p>
</td>
<td class="cellalignment1228" headers="r15c1-t3 r1c2-t3">
<p><code>VARCHAR2(30)</code></p>
</td>
<td class="cellalignment1228" headers="r15c1-t3 r1c3-t3">
<p><code>'hwkatakana_hiragana'</code></p>
</td>
<td class="cellalignment1228" headers="r15c1-t3 r1c4-t3">
<p>Converts only halfwidth Katakana characters to fullwidth Hiragana characters.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r16c1-t3" headers="r1c1-t3">
<p><code>KANA_FWKATAKANA</code></p>
</td>
<td class="cellalignment1228" headers="r16c1-t3 r1c2-t3">
<p><code>VARCHAR2(30)</code></p>
</td>
<td class="cellalignment1228" headers="r16c1-t3 r1c3-t3">
<p><code>'kana_fwkatakana'</code></p>
</td>
<td class="cellalignment1228" headers="r16c1-t3 r1c4-t3">
<p>Converts any type of Kana character to a fullwidth Katakana character.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r17c1-t3" headers="r1c1-t3">
<p><code>KANA_HIRAGANA</code></p>
</td>
<td class="cellalignment1228" headers="r17c1-t3 r1c2-t3">
<p><code>VARCHAR2(30)</code></p>
</td>
<td class="cellalignment1228" headers="r17c1-t3 r1c3-t3">
<p><code>'kana_hiragana'</code></p>
</td>
<td class="cellalignment1228" headers="r17c1-t3 r1c4-t3">
<p>Converts any type of Kana character to a fullwidth Hiragana character.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r18c1-t3" headers="r1c1-t3">
<p><code>KANA_HWKATAKANA</code></p>
</td>
<td class="cellalignment1228" headers="r18c1-t3 r1c2-t3">
<p><code>VARCHAR2(30)</code></p>
</td>
<td class="cellalignment1228" headers="r18c1-t3 r1c3-t3">
<p><code>'kana_hwkatakana'</code></p>
</td>
<td class="cellalignment1228" headers="r18c1-t3 r1c4-t3">
<p>Converts any type of Kana character to a halfwidth Katakana character.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsect2" --></div>
<!-- class="refsect1" -->
<a id="CHDEEBGI"></a>
<hr />
<div id="ARPLS71118" class="refsect1">
<h2 class="refsect1">Summary of UTL_I18N Subprograms</h2>
<div id="ARPLS71119" class="tblformal">
<p class="titleintable"><a id="sthref17041"></a><a id="sthref17042"></a>Table 226-2 UTL_I18N Package Subprograms</p>
<table class="cellalignment1229" title=" UTL_I18N Package Subprograms" summary="This table lists the UTL_I18N subprograms in alphabetical order and briefly describes them." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t4">Procedure</th>
<th class="cellalignment1227" id="r1c2-t4">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t4" headers="r1c1-t4">
<p><a href="#i1000938">ESCAPE_REFERENCE Function</a></p>
</td>
<td class="cellalignment1228" headers="r2c1-t4 r1c2-t4">
<p>Converts a given text string to its character reference counterparts, for characters that fall outside the document character set.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t4" headers="r1c1-t4">
<p><a href="#CACGGHHD">GET_COMMON_TIME_ZONES Function</a></p>
</td>
<td class="cellalignment1228" headers="r3c1-t4 r1c2-t4">
<p>Returns the list of common time zone IDs that are independent of the locales.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r4c1-t4" headers="r1c1-t4">
<p><a href="#i1001031">GET_DEFAULT_CHARSET Function</a></p>
</td>
<td class="cellalignment1228" headers="r4c1-t4 r1c2-t4">
<p>Returns the default Oracle character set name or the default e-mail safe character set name from an Oracle language name.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r5c1-t4" headers="r1c1-t4">
<p><a href="#CACCCHGG">GET_DEFAULT_ISO_CURRENCY Function</a></p>
</td>
<td class="cellalignment1228" headers="r5c1-t4 r1c2-t4">
<p>Returns the default ISO 4217 currency code for the specified territory.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r6c1-t4" headers="r1c1-t4">
<p><a href="#CACCFEFE">GET_DEFAULT_LINGUISTIC_SORT Function</a></p>
</td>
<td class="cellalignment1228" headers="r6c1-t4 r1c2-t4">
<p>Returns the default linguistic sort name for the specified language.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r7c1-t4" headers="r1c1-t4">
<p><a href="#CACEAJFA">GET_LOCAL_LANGUAGES Function</a></p>
</td>
<td class="cellalignment1228" headers="r7c1-t4 r1c2-t4">
<p>Returns the local language names for the specified territory.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r8c1-t4" headers="r1c1-t4">
<p><a href="#CACDDJBE">GET_LOCAL_LINGUISTIC_SORTS Function</a></p>
</td>
<td class="cellalignment1228" headers="r8c1-t4 r1c2-t4">
<p>Returns the local linguistic sort names for the specified language.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r9c1-t4" headers="r1c1-t4">
<p><a href="#CACHFIBJ">GET_LOCAL_TERRITORIES Function</a></p>
</td>
<td class="cellalignment1228" headers="r9c1-t4 r1c2-t4">
<p>Returns the local territory names for the specified language.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r10c1-t4" headers="r1c1-t4">
<p><a href="#CACGGGCD">GET_LOCAL_TIME_ZONES Function</a></p>
</td>
<td class="cellalignment1228" headers="r10c1-t4 r1c2-t4">
<p>Returns the local time zone IDs for the specified territory.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r11c1-t4" headers="r1c1-t4">
<p><a href="#CACCBGFC">GET_TRANSLATION Function</a></p>
</td>
<td class="cellalignment1228" headers="r11c1-t4 r1c2-t4">
<p>Returns the translation of the language and territory name in the specified translation language.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r12c1-t4" headers="r1c1-t4">
<p><a href="#i1001102">MAP_CHARSET Function</a></p>
</td>
<td class="cellalignment1228" headers="r12c1-t4 r1c2-t4">
<ul>
<li>
<p>Maps an Oracle character set name to an IANA character set name.</p>
</li>
<li>
<p>Maps an IANA character set name to an Oracle character set name.</p>
</li>
<li>
<p>Maps an Oracle character set name to an e-mail safe character set name.</p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r13c1-t4" headers="r1c1-t4">
<p><a href="#CACGHHBG">MAP_FROM_SHORT_LANGUAGE Function</a></p>
</td>
<td class="cellalignment1228" headers="r13c1-t4 r1c2-t4">
<p>Maps an Oracle short language name to an Oracle language name.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r14c1-t4" headers="r1c1-t4">
<p><a href="#i1001270">MAP_LANGUAGE_FROM_ISO Function</a></p>
</td>
<td class="cellalignment1228" headers="r14c1-t4 r1c2-t4">
<p>Returns an Oracle language name from an ISO locale name.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r15c1-t4" headers="r1c1-t4">
<p><a href="#i1001337">MAP_LOCALE_TO_ISO Function</a></p>
</td>
<td class="cellalignment1228" headers="r15c1-t4 r1c2-t4">
<p>Returns an ISO locale name from the Oracle language and territory name.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r16c1-t4" headers="r1c1-t4">
<p><a href="#i1001400">MAP_TERRITORY_FROM_ISO Function</a></p>
</td>
<td class="cellalignment1228" headers="r16c1-t4 r1c2-t4">
<p>Returns an Oracle territory name from an ISO locale name.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r17c1-t4" headers="r1c1-t4">
<p><a href="#CACBHDAC">MAP_TO_SHORT_LANGUAGE Function</a></p>
</td>
<td class="cellalignment1228" headers="r17c1-t4 r1c2-t4">
<p>Maps an Oracle language name to an Oracle short language name.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r18c1-t4" headers="r1c1-t4">
<p><a href="#i998567">RAW_TO_CHAR Functions</a></p>
</td>
<td class="cellalignment1228" headers="r18c1-t4 r1c2-t4">
<p>Converts <code>RAW</code> data that is not encoded in the database character set into a <code>VARCHAR2</code> string</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r19c1-t4" headers="r1c1-t4">
<p><a href="#i998574">RAW_TO_NCHAR Functions</a></p>
</td>
<td class="cellalignment1228" headers="r19c1-t4 r1c2-t4">
<p>Converts <code>RAW</code> data that is not encoded in the national character set into an <code>NVARCHAR2</code> string</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r20c1-t4" headers="r1c1-t4">
<p><a href="#i1001698">STRING_TO_RAW Function</a></p>
</td>
<td class="cellalignment1228" headers="r20c1-t4 r1c2-t4">
<p>Converts a <code>VARCHAR2</code> or <code>NVARCHAR2</code> string to another character set. The result is returned as a <code>RAW</code> datatype.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r21c1-t4" headers="r1c1-t4">
<p><a href="#CJHBGCAE">TRANSLITERATE Function</a></p>
</td>
<td class="cellalignment1228" headers="r21c1-t4 r1c2-t4">
<p>Transliterates between Japanese hiragana and katakana.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r22c1-t4" headers="r1c1-t4">
<p><a href="#i998992">UNESCAPE_REFERENCE Function</a></p>
</td>
<td class="cellalignment1228" headers="r22c1-t4 r1c2-t4">
<p>Converts an input string that contains character references to a text string.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<div id="ARPLS71120" class="refsect2"><a id="i1000938"></a>
<hr />
<h3 class="refsect2"><a id="sthref17043"></a>ESCAPE_REFERENCE Function</h3>
<p>This function converts a text string to its character reference counterparts for characters that fall outside the character set used by the current document. Character references are mainly used in HTML and XML documents to represent characters independently of the encoding of the document.Character references may appear in two forms, numeric character references and character entity references. Numeric character references specify the Unicode code point value of a character, while character entity references use symbolic names to refer to the same character. For example, <code>&amp;#xe5;</code> is the numeric character reference for the small letter "a" with a ring above, whereas <code>&amp;aring;</code> is the character entity reference for the same character. Character entity references are also used to escape special characters, as an example, <code>&amp;lt;</code> represents the &lt; (less than) sign. This is to avoid possible confusion with the beginning of a tag in Markup languages.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17044"></a>Syntax</p>
<pre>
UTL_I18N.ESCAPE_REFERENCE(
    str            IN VARCHAR2 CHARACTER SET ANY_CS,
    page_cs_name   IN VARCHAR2 DEFAULT NULL)
 RETURN VARCHAR2 CHARACTER SET str%CHARSET;
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17045"></a>Parameters</p>
<div id="ARPLS71121" class="tblformal">
<p class="titleintable"><a id="sthref17046"></a><a id="sthref17047"></a>Table 226-3 ESCAPE_REFERENCE Function Parameters</p>
<table class="cellalignment1229" title="ESCAPE_REFERENCE Function Parameters" summary="This table describes the Parameters of the UTL_I18N.ESCAPE_REFERENCE subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t5">Parameter</th>
<th class="cellalignment1227" id="r1c2-t5">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t5" headers="r1c1-t5">
<p><code>str</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t5 r1c2-t5">
<p>Specifies the input string</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t5" headers="r1c1-t5">
<p><code>page_cs_name</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t5 r1c2-t5">
<p>Specifies the character set of the document. If <code>page_cs_name</code> is <code>NULL</code>, then the database character set is used for <code>CHAR</code> data and the national character set is used for <code>NCHAR</code> data.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17048"></a>Usage Notes</p>
<p>If the user specifies an invalid character set or a <code>NULL</code> string, then the function returns a <code>NULL</code> string.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17049"></a>Examples</p>
<pre>
UTL_I18N.ESCAPE_REFERENCE('hello &lt; '||chr(229),'us7ascii')
</pre>
<p>This returns <code>'hello &amp;lt; &amp;#xe5;'</code>.</p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS71122" class="refsect2"><a id="CACGGHHD"></a>
<hr />
<h3 class="refsect2"><a id="sthref17050"></a>GET_COMMON_TIME_ZONES Function</h3>
<p>This function returns a listing of the most commonly used time zones. This list contains a subset of the time zones that are supported in the database.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17051"></a>Syntax</p>
<pre>
UTL_I18N.GET_COMMON_TIME_ZONES
 RETURN STRING_ARRAY;
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17052"></a>Examples</p>
<p>Returns the list of the most commonly used time zones.</p>
<pre>
DECLARE
   retval UTL_I18N.STRING_ARRAY;
BEGIN
   retval := UTL_I18N.GET_COMMON_TIME_ZONES;
END;
/
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS71123" class="refsect2"><a id="i1001031"></a>
<hr />
<h3 class="refsect2"><a id="sthref17053"></a>GET_DEFAULT_CHARSET Function</h3>
<p>This function returns the default Oracle character set name or the default e-mail safe character set name from an Oracle language name.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#i1001102">"MAP_CHARSET Function"</a> for an explanation of an e-mail safe character set</div>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17054"></a>Syntax</p>
<pre>
UTL_I18N.GET_DEFAULT_CHARSET( 
   language  IN VARCHAR2,
   context   IN PLS_INTEGER DEFAULT GENERIC_CONTEXT,
   iswindows IN BOOLEAN DEFAULT FALSE)
 RETURN VARCHAR2;
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17055"></a>Parameters</p>
<div id="ARPLS71124" class="tblformal">
<p class="titleintable"><a id="sthref17056"></a><a id="sthref17057"></a>Table 226-4 GET_DEFAULT_CHARSET Function Parameters</p>
<table class="cellalignment1229" title="GET_DEFAULT_CHARSET Function Parameters" summary="This table describes the Parameters of the UTL_I18N.GET_DEFAULT_CHARSET subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t7">Parameter</th>
<th class="cellalignment1227" id="r1c2-t7">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t7" headers="r1c1-t7">
<p><code>language</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t7 r1c2-t7">
<p>Specifies a valid Oracle language</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t7" headers="r1c1-t7">
<p><code>context</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t7 r1c2-t7">
<p><code>GENERIC_CONTEXT | MAIL_CONTEXT</code></p>
<p><code>GENERIC_CONTEXT</code>: Returns the default character set for general cases</p>
<p><code>MAIL_CONTEXT</code>: Returns the default e-mail safe character set name</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r4c1-t7" headers="r1c1-t7">
<p><code>iswindows</code></p>
</td>
<td class="cellalignment1228" headers="r4c1-t7 r1c2-t7">
<p>If <code>context</code> is set as <code>MAIL_CONTEXT</code>, then <code>iswindows</code> should be set to <code>TRUE</code> if the platform is Windows and <code>FALSE</code> if the platform is not Windows. The default is <code>FALSE</code>.</p>
<p><code>iswindows</code> has no effect if <code>context</code> is set as <code>GENERIC_CONTEXT</code>.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17058"></a>Usage Notes</p>
<p>If the user specifies an invalid language name or an invalid flag, then the function returns a <code>NULL</code> string.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17059"></a>Examples</p>
<p class="subhead1"><a id="ARPLS71125"></a>GENERIC_CONTEXT, iswindows=FALSE</p>
<pre>
UTL_I18N.GET_DEFAULT_CHARSET('French', UTL_I18N.GENERIC_CONTEXT, FALSE)
</pre>
<p>This returns <code>'WE8ISO8859P1'</code>.</p>
<p class="subhead1"><a id="ARPLS71126"></a>MAIL_CONTEXT, iswindows=TRUE</p>
<pre>
UTL_I18N.GET_DEFAULT_CHARSET('French', UTL_I18N.MAIL_CONTEXT, TRUE)
</pre>
<p>This returns '<code>WE8MSWIN1252</code>'.</p>
<p class="subhead1"><a id="ARPLS71127"></a>MAIL_CONTEXT, iswindows=FALSE</p>
<pre>
UTL_I18N.GET_DEFAULT_CHARSET('French', UTL_I18N.MAIL_CONTEXT, FALSE)
</pre>
<p>This returns '<code>WE8ISO8859P1</code>'.</p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS71128" class="refsect2"><a id="CACCCHGG"></a>
<hr />
<h3 class="refsect2"><a id="sthref17060"></a>GET_DEFAULT_ISO_CURRENCY Function</h3>
<p>This function returns the default ISO 4217 currency code for the specified territory.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17061"></a>Syntax</p>
<pre>
UTL_I18N.GET_DEFAULT_ISO_CURRENCY (
   territory    IN VARCHAR2 CHARACTER SET ANY_CS)
RETURN VARCHAR2;
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17062"></a>Parameters</p>
<div id="ARPLS71129" class="tblformal">
<p class="titleintable"><a id="sthref17063"></a><a id="sthref17064"></a>Table 226-5 GET_DEFAULT_ISO_CURRENCY Function Parameters</p>
<table class="cellalignment1229" title="GET_DEFAULT_ISO_CURRENCY Function Parameters" summary="This table describes the Parameters of the UTL_I18N.GET_DEFAULT_CHARSET subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t8">Parameter</th>
<th class="cellalignment1227" id="r1c2-t8">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t8" headers="r1c1-t8">
<p><code>territory</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t8 r1c2-t8">
<p>Specifies a valid Oracle territory. It is case-insensitive.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17065"></a>Usage Notes</p>
<p>If the user specifies an invalid territory name, then the function returns a <code>NULL</code> string.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17066"></a>Examples</p>
<p>Displays the default ISO currency code for China.</p>
<pre>
DECLARE
   retval VARCHAR2(50);
BEGIN
   retval := UTL_I18N.GET_DEFAULT_ISO_CURRENCY('CHINA');
   DBMS_OUTPUT.PUT_LINE(retval);
END;
/
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS71130" class="refsect2"><a id="CACCFEFE"></a>
<hr />
<h3 class="refsect2"><a id="sthref17067"></a>GET_DEFAULT_LINGUISTIC_SORT Function</h3>
<p>This function returns the most commonly used Oracle linguistic sort for the specified language.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17068"></a>Syntax</p>
<pre>
UTL_I18N.GET_DEFAULT_LINGUISTIC_SORT (
   language  IN VARCHAR2 CHARACTER SET ANY_CS)
RETURN VARCHAR2;
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17069"></a>Parameters</p>
<div id="ARPLS71131" class="tblformal">
<p class="titleintable"><a id="sthref17070"></a><a id="sthref17071"></a>Table 226-6 GET_DEFAULT_LINGUISTIC_SORT Function Parameters</p>
<table class="cellalignment1229" title="GET_DEFAULT_LINGUISTIC_SORT Function Parameters" summary="This table describes the Parameters of the UTL_I18N.ESCAPE_REFERENCE subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t9">Parameter</th>
<th class="cellalignment1227" id="r1c2-t9">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t9" headers="r1c1-t9">
<p><code>language</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t9 r1c2-t9">
<p>Specifies a valid Oracle language. It is case-insensitive.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17072"></a>Usage Notes</p>
<p>If the user specifies an invalid language name, then the function returns a <code>NULL</code> string.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17073"></a>Examples</p>
<p>Displays the name of the most appropriate linguistic sort name for the language used in the current SQL session.</p>
<pre>
DECLARE
   retval VARCHAR2(50);
BEGIN
  SELECT value INTO retval FROM nls_session_parameters
   WHERE parameter = 'NLS_LANGUAGE';
   retval := UTL_I18N.GET_DEFAULT_LINGUISTIC_SORT(retval);
   DBMS_OUTPUT.PUT_LINE(retval);
END;
/
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS71132" class="refsect2"><a id="CACEAJFA"></a>
<hr />
<h3 class="refsect2"><a id="sthref17074"></a>GET_LOCAL_LANGUAGES Function</h3>
<p>This function returns the local language names for the specified territory.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17075"></a>Syntax</p>
<pre>
UTL_I18N.GET_LOCAL_LANGUAGES (
   territory    IN VARCHAR2 CHARACTER SET ANY_CS)
RETURN STRING_ARRAY;
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17076"></a>Parameters</p>
<div id="ARPLS71133" class="tblformal">
<p class="titleintable"><a id="sthref17077"></a><a id="sthref17078"></a>Table 226-7 GET_LOCAL_LANGUAGES Function Parameters</p>
<table class="cellalignment1229" title="GET_LOCAL_LANGUAGES Function Parameters" summary="This table describes the Parameters of the UTL_I18N.ESCAPE_REFERENCE subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t10">Parameter</th>
<th class="cellalignment1227" id="r1c2-t10">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t10" headers="r1c1-t10">
<p><code>territory</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t10 r1c2-t10">
<p>Specifies a valid Oracle territory. It is case-insensitive.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17079"></a>Usage Notes</p>
<p>If the user specifies an invalid territory name, then the function returns a <code>NULL</code> string.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17080"></a>Examples</p>
<p>Returns the list of local languages used in Belgium.</p>
<pre>
DECLARE
   retval UTL_I18N.STRING_ARRAY;
   cnt    INTEGER;
BEGIN
   retval   :=  UTL_I18N.GET_LOCAL_LANGUAGES('BELGIUM');
   DBMS_OUTPUT.PUT('Count = ');
   DBMS_OUTPUT.PUT_LINE(retval.LAST);
   cnt := retval.FIRST;
   WHILE cnt IS NOT NULL LOOP
      DBMS_OUTPUT.PUT_LINE(retval(cnt));
      cnt := retval.NEXT(cnt);
   END LOOP;
END;
/
...
Count = 2
DUTCH
FRENCH
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS71134" class="refsect2"><a id="CACDDJBE"></a>
<hr />
<h3 class="refsect2"><a id="sthref17081"></a>GET_LOCAL_LINGUISTIC_SORTS Function</h3>
<p>This function returns a list of the Oracle linguistic sort names that are appropriate for the specified language. A <code>BINARY</code> sort is included for all languages.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17082"></a>Syntax</p>
<pre>
UTL_I18N.GET_LOCAL_LINGUISTIC_SORTS (
   language  IN VARCHAR2 CHARACTER SET ANY_CS)
RETURN STRING_ARRAY;
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17083"></a>Parameters</p>
<div id="ARPLS71135" class="tblformal">
<p class="titleintable"><a id="sthref17084"></a><a id="sthref17085"></a>Table 226-8 GET_LOCAL_LINGUISTIC_SORTS Function Parameters</p>
<table class="cellalignment1229" title="GET_LOCAL_LINGUISTIC_SORTS Function Parameters" summary="This table describes the Parameters of the UTL_I18N.ESCAPE_REFERENCE subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t11">Parameter</th>
<th class="cellalignment1227" id="r1c2-t11">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t11" headers="r1c1-t11">
<p><code>language</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t11 r1c2-t11">
<p>Specifies a valid Oracle language. It is case-insensitive.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17086"></a>Usage Notes</p>
<p>If the user specifies an invalid language name, then the function returns a <code>NULL</code> string.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17087"></a>Examples</p>
<p>Displays the local linguistic sort names for <code>JAPANESE</code>.</p>
<pre>
DECLARE
   retval UTL_I18N.STRING_ARRAY;
   cnt INTEGER;
BEGIN
  retval := UTL_I18N.GET_LOCAL_LINGUISTIC_SORTS('Japanese');
  DBMS_OUTPUT.PUT('Count = ');
  DBMS_OUTPUT.PUT_LINE(retval.COUNT);
  cnt := retval.FIRST;
   WHILE cnt IS NOT NULL LOOP
      DBMS_OUTPUT.PUT_LINE(retval(cnt));
      cnt := retval.NEXT(cnt);
    END LOOP;
END;
/

...
Count = 2
JAPANESE_M
BINARY
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS71136" class="refsect2"><a id="CACHFIBJ"></a>
<hr />
<h3 class="refsect2"><a id="sthref17088"></a>GET_LOCAL_TERRITORIES Function</h3>
<p>This function returns the local territory names for the specified language.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17089"></a>Syntax</p>
<pre>
UTL_I18N.GET_LOCAL_TERRITORIES (
   language  IN VARCHAR2 CHARACTER SET ANY_CS)
 RETURN STRING_ARRAY;
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17090"></a>Parameters</p>
<div id="ARPLS71137" class="tblformal">
<p class="titleintable"><a id="sthref17091"></a><a id="sthref17092"></a>Table 226-9 GET_LOCAL_TERRITORIES Function Parameters</p>
<table class="cellalignment1229" title="GET_LOCAL_TERRITORIES Function Parameters" summary="This table describes the Parameters of the UTL_I18N.ESCAPE_REFERENCE subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t12">Parameter</th>
<th class="cellalignment1227" id="r1c2-t12">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t12" headers="r1c1-t12">
<p><code>language</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t12 r1c2-t12">
<p>Specifies a valid Oracle language. It is case-insensitive.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17093"></a>Usage Notes</p>
<p>If the user specifies an invalid language name, then the function returns a <code>NULL</code> string.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17094"></a>Examples</p>
<p>Returns the list of Oracle territories that use German as one of their local languages.</p>
<pre>
DECLARE
   retval  UTL_I18N.STRING_ARRAY;
   cnt     INTEGER;
BEGIN
   retval  := UTL_I18N.GET_LCOAL_TERRITORIIES('GERMAN');
   DBMS_OUTPUT.PUT('Count = ');
   DBMS_OUTPUT.PUT_LINE(retval.LAST);
  cnt := retval.FIRST;
   WHILE cnt IS NOT NULL LOOP
      DBMS_OUTPUT.PUT_LINE(retval(cnt));
      cnt := retval.NEXT(cnt));
   END LOOP;
END;
/
...
Count = 4
GERMANY
AUSTRIA
LUXEMBOURG
SWITZERLAND
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS71138" class="refsect2"><a id="CACGGGCD"></a>
<hr />
<h3 class="refsect2"><a id="sthref17095"></a>GET_LOCAL_TIME_ZONES Function</h3>
<p>This function returns the local time zone IDs for the specified territory.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17096"></a>Syntax</p>
<pre>
UTL_I18N.GET_LOCAL_TIME_ZONES ( 
   territory      IN VARCHAR2 CHARACTER SET ANY_CS DEFAULT NULL)
RETURN STRING_ARRAY;
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17097"></a>Parameters</p>
<div id="ARPLS71139" class="tblformal">
<p class="titleintable"><a id="sthref17098"></a><a id="sthref17099"></a>Table 226-10 GET_LOCAL_TIME_ZONES Function Parameters</p>
<table class="cellalignment1229" title="GET_LOCAL_TIME_ZONES Function Parameters" summary="This table describes the Parameters of the UTL_I18N.ESCAPE_REFERENCE subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t13">Parameter</th>
<th class="cellalignment1227" id="r1c2-t13">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t13" headers="r1c1-t13">
<p><code>territory</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t13 r1c2-t13">
<p>Specifies a valid Oracle territory. It is case-insensitive.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17100"></a>Usage Notes</p>
<p>If the user specifies an invalid territory name, then the function returns a <code>NULL</code> string.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17101"></a>Examples</p>
<p>Creates a function that returns the list of time zones locally used in the territory <code>AZERBAIJAN</code> followed by the general common time zones. This is useful for when the user's territory is known and the application still allows the user to choose other time zones as a user's preference.</p>
<pre>
CREATE OR REPLACE FUNCTION get_time_zones
(territory IN VARCHAR2 CHARACTER SET ANY_CS)
RETURN utl_i18n.string_array
IS
  retval  utl_i18n.string_array;
  retval2 utl_i18n.string_array;
  stpos   INTEGER;
BEGIN
  retval  := utl_i18n.get_local_time_zones(
    territory);
  retval2 := utl_i18n.get_common_time_zones;
  stpos := retval.LAST + 1;
  retval(stpos) := '-----'; -- a separator
  FOR i IN retval2.FIRST..retval2.LAST LOOP
    stpos := stpos + 1;
    retval(stpos) := retval2(i);
  END LOOP;
  RETURN retval;
END;
/
</pre>
<p>Returns the list of local time zones for <code>AZERBAIJAN</code> followed by the common time zones with a separator string of five dashes (-----).</p>
<pre>
DECLARE
   retval UTL_I18N.STRING_ARRAY;
   cnt INTEGER;
BEGIN
   DBMS_OUTPUT.ENABLE(100000);
   retval UTL_I18N.GET_TIME_ZONES('AZERBAIJAN');
   cnt := retval.FIRST;
  WHILE cnt IS NOT NULL LOOP
    DBMS_OUTPUT.PUT_LINE(retval(cnt));
    cnt := retval.NEXT(cnt);
  END LOOP;
END;
/

Asia/Baku
-----
Pacific/Pago_Pago
Pacific/Honolulu
America/Anchorage
America/Vancouver
America/Los_Angeles
America/Tijuana
America/Edmonton
America/Denver
America/Phoenix
America/Mazatlan
America/Winnipeg
America/Regina
America/Chicago
America/Mexico_City
America/Guatemala
America/El_Salvador
America/Managua
America/Costa_Rica
America/Montreal
...
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS71140" class="refsect2"><a id="CACCBGFC"></a>
<hr />
<h3 class="refsect2"><a id="sthref17102"></a>GET_TRANSLATION Function</h3>
<p>This function returns the translation of the language and territory name in the specified translation language.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17103"></a>Syntax</p>
<pre>
UTL_I18N.GET_TRANSLATION ( 
   parameter        IN VARCHAR2 CHARACTER SET ANY_CS,
   trans_language   IN VARCHAR2 'AMERICAN',
   flag             IN PLS_INTEGER DEFAULT LANGUAGE_TRANS)
RETURN VARCHAR2 CHARACTER SET parameter%CHARSET;
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17104"></a>Parameters</p>
<div id="ARPLS71141" class="tblformal">
<p class="titleintable"><a id="sthref17105"></a><a id="sthref17106"></a>Table 226-11 GET_TRANSLATION Function Parameters</p>
<table class="cellalignment1229" title="GET_TRANSLATION Function Parameters" summary="This table describes the Parameters of the UTL_I18N.ESCAPE_REFERENCE subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t14">Parameter</th>
<th class="cellalignment1227" id="r1c2-t14">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t14" headers="r1c1-t14">
<p><code>parameter</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t14 r1c2-t14">
<p>Specifies a valid language name, territory name, or a combined string in the form of <code><span class="codeinlineitalic">language_territory</span></code>. It is case-insensitive.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t14" headers="r1c1-t14">
<p><code>trans_language</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t14 r1c2-t14">
<p>Specifies a translation language name. For example, <code>ITALIAN</code> is for the Italian language. The default is <code>AMERICAN</code>, which indicates American English.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r4c1-t14" headers="r1c1-t14">
<p><code>flag</code></p>
</td>
<td class="cellalignment1228" headers="r4c1-t14 r1c2-t14">
<p>Specifies the translation type:</p>
<ul>
<li>
<p><code>LANGUAGE_TRANS</code>: The function returns the language translation.</p>
</li>
<li>
<p><code>TERRITORY_TRANS</code>: The function returns the territory translation.</p>
</li>
<li>
<p><code>LANGUAGE_TERRITORY_TRANS</code>: The function returns the language and territory translation.</p>
</li>
</ul>
<p>The default translation type is <code>LANGUAGE_TRANS</code>.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17107"></a>Usage Notes</p>
<p>If <code>VARCHAR2</code> is used as a parameter type, the returned translation text can be corrupted due to the conversion to the database character set. Using <code>NVARCHAR2</code> as the parameter type will preserve the translation text because Unicode can encode all translated languages.</p>
<p>If the specified translation language is not available or an invalid name is provided, the default "American English" translations are returned. For example, Oracle does not provide <code>GUJARATI</code> translations, so the returned translation would be in American English.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17108"></a>Examples</p>
<p>The following returns the names of all the Oracle-supported languages in Italian.</p>
<pre>
DECLARE
   CURSOR c1 IS
     SELECT value FROM V$NLS_VALID_VALUES
     WHERE parameter = 'LANGUAGE'
  ORDER BY value;
  retval NVARCHAR2(100);
BEGIN
   FOR item IN c1 LOOP
     retval := UTL_I18N.GET_TRANSLATION (TO_NCHAR(item.value), 'italian');
   END LOOP;
END;
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS71142" class="refsect2"><a id="i1001102"></a>
<hr />
<h3 class="refsect2"><a id="sthref17109"></a>MAP_CHARSET Function</h3>
<p>This function maps the following:</p>
<ul>
<li>
<p>An Oracle character set name to an IANA character set name.</p>
</li>
<li>
<p>An IANA character set name to an Oracle character set name.</p>
</li>
<li>
<p>An Oracle character set to an e-mail safe character set name.</p>
</li>
</ul>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17110"></a>Syntax</p>
<pre>
UTL_I18N.MAP_CHARSET( 
   charset   IN VARCHAR2,
   context   IN PLS_INTEGER DEFAULT GENERIC_CONTEXT,
   flag      IN PLS_INTEGER DEFAULT ORACLE_TO_IANA)
RETURN VARCHAR2;
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17111"></a>Parameters</p>
<div id="ARPLS71143" class="tblformal">
<p class="titleintable"><a id="sthref17112"></a><a id="sthref17113"></a>Table 226-12 MAP_CHARSET Function Parameters</p>
<table class="cellalignment1229" title="MAP_CHARSET Function Parameters" summary="This table describes the Parameters of the UTL_I18N.MAP_CHARSET subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t15">Parameter</th>
<th class="cellalignment1227" id="r1c2-t15">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t15" headers="r1c1-t15">
<p><code>charset</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t15 r1c2-t15">
<p>Specifies the character set name to be mapped. The mapping is case-insensitive.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t15" headers="r1c1-t15">
<p><code>context</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t15 r1c2-t15">
<p><code>GENERIC_CONTEXT | MAIL_CONTEXT</code></p>
<p><code>GENERIC_CONTEXT</code>: The mapping is between an Oracle character set name and an IANA character set name. This is the default value.</p>
<p><code>MAIL_CONTEXT</code>: The mapping is between an Oracle character set name and an email safe character set name.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r4c1-t15" headers="r1c1-t15">
<p><code>flag</code></p>
</td>
<td class="cellalignment1228" headers="r4c1-t15 r1c2-t15">
<ul>
<li>
<p><code>ORACLE_TO_IANA | IANA_TO_ORACLE</code> if <code>GENERIC_CONTEXT</code> is set</p>
<p><code>ORACLE_TO_IANA</code>: Map from an Oracle character set name to an IANA character set name. This is the default.</p>
<p><code>IANA_TO_ORACLE</code>: Map from an IANA character set name to an Oracle character set name.</p>
</li>
<li>
<p><code>MAIL_GENERIC | MAIL_WINDOWS</code> if <code>MAIL_CONTEXT</code> is set</p>
<p><code>MAIL_GENERIC</code>: Map from an Oracle character set name to an email safe character set name on a non-Windows platform.</p>
<p><code>MAIL_WINDOWS</code>: Map from an Oracle character set name to an email safe character set name on a Windows platform.</p>
</li>
</ul>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17114"></a>Usage Notes</p>
<p>An e-mail safe character set is an Oracle character set that is commonly used by applications when they submit e-mail messages. The character set is usually used to convert contents in the database character set to e-mail safe contents. To specify the character set name in the mail header, you should use the corresponding IANA character set name obtained by calling the <code>MAP_CHARSET</code> function with the <code>ORACLE_TO_IANA</code> option, providing the e-mail safe character set name as input.</p>
<p>For example, no e-mail client recognizes message contents in the <code>WE8DEC</code> character set, whose corresponding IANA name is <code>DEC-MCS</code>. If <code>WE8DEC</code> is passed to the <code>MAP_CHARSET</code> function with the <code>MAIL_CONTEXT</code> option, then the function returns <code>WE8ISO8859P1</code>. Its corresponding IANA name, <code>ISO-8859-1</code>, is recognized by most e-mail clients.</p>
<p>The steps in this example are as follows:</p>
<ol>
<li>
<p>Call the <code>MAP_CHARSET</code> function with the <code>MAIL_CONTEXT | MAIL_GENERIC</code> option with the database character set name, <code>WE8DEC</code>. The result is <code>WE8ISO8859P1</code>.</p>
</li>
<li>
<p>Convert the contents stored in the database to <code>WE8ISO8859P1</code>.</p>
</li>
<li>
<p>Call the <code>MAP_CHARSET</code> function with the <code>ORACLE_TO_IANA | GENERIC_CONTEXT</code> option with the e-mail safe character set, <code>WE8ISO8859P1</code>. The result is <code>ISO-8859-1</code>.</p>
</li>
<li>
<p>Specify <code>ISO-8859-1</code> in the mail header when the e-mail message is submitted.</p>
</li>
</ol>
<p>The function returns a character set name if a match is found. If no match is found or if the flag is invalid, then it returns <code>NULL</code>.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
Many Oracle character sets can map to one e-mail safe character set. There is no function that maps an e-mail safe character set to an Oracle character set name.</div>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17115"></a>Examples</p>
<p class="subhead1"><a id="ARPLS71144"></a>Generic Context</p>
<pre>
UTL_I18N.MAP_CHARSET('iso-8859-1',UTL_I18N.GENERIC_CONTEXT,UTL_I18N.IANA_TO_ORACLE)
</pre>
<p>This returns <code>'WE8ISO8859P1'</code>.</p>
<p class="subhead1"><a id="ARPLS71145"></a>Context</p>
<pre>
UTL_I18N.MAP_CHARSET('WE8DEC', utl_i18n.mail_context,  utl_i18n.mail_generic)
</pre>
<p>This returns <code>'WE8ISO8859P1'</code>.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink NLSPG012" href="../../server.112/e10729/ch12scanner.htm#NLSPG012"><span class="italic">Oracle Database Globalization Support Guide</span></a> for a list of valid Oracle character sets</div>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS71146" class="refsect2"><a id="CACGHHBG"></a>
<hr />
<h3 class="refsect2"><a id="sthref17116"></a>MAP_FROM_SHORT_LANGUAGE Function</h3>
<p>This function maps an Oracle short language name to an Oracle language name.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17117"></a>Syntax</p>
<pre>
UTL_I18N.MAP_FROM_SHORT_LANGUAGE (
   language           IN VARCHAR2 CHARACTER SET ANY_CS)
RETURN VARCHAR2;
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17118"></a>Parameters</p>
<div id="ARPLS71147" class="tblformal">
<p class="titleintable"><a id="sthref17119"></a><a id="sthref17120"></a>Table 226-13 MAP_FROM_SHORT_LANGUAGE Function Parameters</p>
<table class="cellalignment1229" title="MAP_FROM_SHORT_LANGUAGE Function Parameters" summary="This table describes the Parameters of the UTL_I18N.ESCAPE_REFERENCE subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t18">Parameter</th>
<th class="cellalignment1227" id="r1c2-t18">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t18" headers="r1c1-t18">
<p><code>language</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t18 r1c2-t18">
<p>Specifies a valid short language name. It is case-insensitive.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17121"></a>Usage Notes</p>
<p>If the user specifies an invalid language name, then the function returns a <code>NULL</code> string.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17122"></a>Examples</p>
<p>Returns the default linguistic sort name for the customer with the ID of 9000. Note that the table <code>customers</code> is from the <code>oe</code> user in the Common Schema. Because the customer's language preference is stored using a short language name, you need to convert to a full language name by calling the <code>GET_DEFAULT_LINGUISTIC_SORT</code> procedure.</p>
<pre>
DECLARE
   short_n VARCHAR2(10);
   ling_n VARCHAR2(50);
BEGIN
   SELECT nls_language INTO short 
   FROM customers WHERE customer_id = 9000;
   ling_n := UTL_I18N.GET_DEFAULT_LINGUISTIC_SORT (
   UTL_I18N.MAP_FROM_SHORT_LANGUAGE(short_n));
   DBMS_OUTPUT.PUT_LINE(ling_n);
END;
/
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS71148" class="refsect2"><a id="i1001270"></a>
<hr />
<h3 class="refsect2"><a id="sthref17123"></a>MAP_LANGUAGE_FROM_ISO Function</h3>
<p>This function returns an Oracle language name from an ISO locale name.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17124"></a>Syntax</p>
<pre>
UTL_I18N.MAP_LANGUAGE_FROM_ISO( 
  isolocale IN VARCHAR2)
RETURN VARCHAR2;
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17125"></a>Parameters</p>
<div id="ARPLS71149" class="tblformal">
<p class="titleintable"><a id="sthref17126"></a><a id="sthref17127"></a>Table 226-14 MAP_LANGUAGE_FROM_ISO Function Parameters</p>
<table class="cellalignment1229" title="MAP_LANGUAGE_FROM_ISO Function Parameters" summary="This table describes the Parameters of the UTL_I18N.MAP_LANGUAGE subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t19">Parameter</th>
<th class="cellalignment1227" id="r1c2-t19">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t19" headers="r1c1-t19">
<p><code>isolocale</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t19 r1c2-t19">
<p>Specifies the ISO locale. The mapping is case-insensitive.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17128"></a>Usage Notes</p>
<p>If the user specifies an invalid locale string, then the function returns a <code>NULL</code> string.</p>
<p>If the user specifies a locale string that includes only the language (for example, <code>en_</code> instead of <code>en_US</code>), then the function returns the default language name for the specified language (for example, <code>American</code>).</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17129"></a>Examples</p>
<pre>
UTL_I18N.MAP_LANGUAGE_FROM_ISO('en_US')
</pre>
<p>This returns <code>'American'</code>.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink NLSPG012" href="../../server.112/e10729/ch12scanner.htm#NLSPG012"><span class="italic">Oracle Database Globalization Support Guide</span></a> for a list of valid Oracle languages</div>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS71150" class="refsect2"><a id="i1001337"></a>
<hr />
<h3 class="refsect2"><a id="sthref17130"></a>MAP_LOCALE_TO_ISO Function</h3>
<p>This function returns an ISO locale name from an Oracle language name and an Oracle territory name. A valid string must include at least one of the following: a valid Oracle language name or a valid Oracle territory name.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17131"></a>Syntax</p>
<pre>
UTL_I18N.MAP_LOCALE_TO_ISO ( 
   ora_language   IN VARCHAR2,
   ora_territory  IN VARCHAR2)
 RETURN VARCHAR2;
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17132"></a>Parameters</p>
<div id="ARPLS71151" class="tblformal">
<p class="titleintable"><a id="sthref17133"></a><a id="sthref17134"></a>Table 226-15 MAP_LOCALE_TO_ISO Function Parameters</p>
<table class="cellalignment1229" title="MAP_LOCALE_TO_ISO Function Parameters" summary="This table describes the Parameters of the UTL_I18N.MAP_LOCALE_TO_ISO subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t21">Parameter</th>
<th class="cellalignment1227" id="r1c2-t21">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t21" headers="r1c1-t21">
<p><code>ora_language</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t21 r1c2-t21">
<p>Specifies an Oracle language name. It is case-insensitive.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t21" headers="r1c1-t21">
<p>ora_territory</p>
</td>
<td class="cellalignment1228" headers="r3c1-t21 r1c2-t21">
<p>Specifies an Oracle territory name. It is case-insensitive.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17135"></a>Usage Notes</p>
<p>If the user specifies an invalid string, then the function returns a <code>NULL</code> string.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17136"></a>Examples</p>
<pre>
UTL_I18N.MAP_LOCALE_TO_ISO('American','America')
</pre>
<p>This returns <code>'en_US'</code>.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink NLSPG012" href="../../server.112/e10729/ch12scanner.htm#NLSPG012"><span class="italic">Oracle Database Globalization Support Guide</span></a> for a list of valid Oracle languages and territories</div>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS71152" class="refsect2"><a id="i1001400"></a>
<hr />
<h3 class="refsect2"><a id="sthref17137"></a>MAP_TERRITORY_FROM_ISO Function</h3>
<p>This function returns an Oracle territory name from an ISO locale.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17138"></a>Syntax</p>
<pre>
UTL_I18N.MAP_TERRITORY_FROM_ISO (
  isolocale IN VARCHAR2)
 RETURN VARCHAR2;
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17139"></a>Parameters</p>
<div id="ARPLS71153" class="tblformal">
<p class="titleintable"><a id="sthref17140"></a><a id="sthref17141"></a>Table 226-16 MAP_TERRITORY_FROM_ISO Function Parameters</p>
<table class="cellalignment1229" title="MAP_TERRITORY_FROM_ISO Function Parameters" summary="This table describes the Parameters of the UTL_I18N.MAP_TERRITORY_FROM_ISO subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t23">Parameter</th>
<th class="cellalignment1227" id="r1c2-t23">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t23" headers="r1c1-t23">
<p><code>isolocale</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t23 r1c2-t23">
<p>Specifies the ISO locale. The mapping is case-insensitive.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17142"></a>Usage Notes</p>
<p>If the user specifies an invalid locale string, then the function returns a <code>NULL</code> string.</p>
<p>If the user specifies a locale string that includes only the territory (for example, <code>_fr</code> instead of <code>fr_fr</code>), then the function returns the default territory name for the specified territory (for example, <code>France</code>).</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17143"></a>Examples</p>
<pre>
UTL_I18N.MAP_TERRITORY_FROM_ISO('en_US')
</pre>
<p>This returns '<code>America'</code>.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink NLSPG012" href="../../server.112/e10729/ch12scanner.htm#NLSPG012"><span class="italic">Oracle Database Globalization Support Guide</span></a> for a list of valid Oracle territories</div>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS71154" class="refsect2"><a id="CACBHDAC"></a>
<hr />
<h3 class="refsect2"><a id="sthref17144"></a>MAP_TO_SHORT_LANGUAGE Function</h3>
<p>This function maps an Oracle language name to an Oracle short language name.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17145"></a>Syntax</p>
<pre>
UTL_I18N.MAP_TO_SHORT_LANGUAGE (
   language    IN VARCHAR2 CHARACTER SET ANY_CS)
RETURN VARCHAR2;
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17146"></a>Parameters</p>
<div id="ARPLS71155" class="tblformal">
<p class="titleintable"><a id="sthref17147"></a><a id="sthref17148"></a>Table 226-17 MAP_TO_SHORT_LANGUAGE Function Parameters</p>
<table class="cellalignment1229" title="MAP_TO_SHORT_LANGUAGE Function Parameters" summary="This table describes the Parameters of the UTL_I18N.ESCAPE_REFERENCE subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t25">Parameter</th>
<th class="cellalignment1227" id="r1c2-t25">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t25" headers="r1c1-t25">
<p><code>language</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t25 r1c2-t25">
<p>Specifies a valid full language name. It is case-insensitive.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17149"></a>Usage Notes</p>
<p>If the user specifies an invalid language name, then the function returns a <code>NULL</code> string.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17150"></a>Examples</p>
<p>Returns the short language name for the language.</p>
<pre>
DECLARE  retval VARCHAR2(100);BEGIN  retval := UTL_I18N.MAP_TO_SHORT_LANGUAGE('american');  DBMS_OUTPUT.PUT_LINE(retval);END;/US
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS71156" class="refsect2"><a id="i998567"></a>
<hr />
<h3 class="refsect2"><a id="sthref17151"></a>RAW_TO_CHAR Functions</h3>
<p>This function converts <code>RAW</code> data from a valid Oracle character set to a <code>VARCHAR2</code> string in the database character set.</p>
<p>The function is overloaded. The different forms of functionality are described along with the syntax declarations.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17152"></a>Syntax</p>
<p>Buffer Conversion:</p>
<pre>
UTL_I18N.RAW_TO_CHAR(
   data          IN RAW,
   src_charset   IN VARCHAR2 DEFAULT NULL)
 RETURN VARCHAR2;
</pre>
<p>Piecewise conversion converts raw data into character data piece by piece:</p>
<pre>
UTL_I18N.RAW_TO_CHAR (
   data            IN RAW,
   src_charset     IN VARCHAR2 DEFAULT NULL,
   scanned_length  OUT PLS_INTEGER,
   shift_status    IN OUT PLS_INTEGER)
RETURN VARCHAR2;
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17153"></a>Parameters</p>
<div id="ARPLS71157" class="tblformal">
<p class="titleintable"><a id="sthref17154"></a><a id="sthref17155"></a>Table 226-18 RAW_TO_CHAR Function Parameters</p>
<table class="cellalignment1229" title="RAW_TO_CHAR Function Parameters" summary="This table describes the Parameters of the UTL_I18N.RAW_TO_CHAR subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t26">Parameter</th>
<th class="cellalignment1227" id="r1c2-t26">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t26" headers="r1c1-t26">
<p><code>data</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t26 r1c2-t26">
<p>Specifies the <code>RAW</code> data to be converted to a <code>VARCHAR2</code> string</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t26" headers="r1c1-t26">
<p><code>src_charset</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t26 r1c2-t26">
<p>Specifies the character set that the <code>RAW</code> data was derived from. If src_charset is <code>NULL</code>, then the database character set is used.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r4c1-t26" headers="r1c1-t26">
<p><code>scanned_length</code></p>
</td>
<td class="cellalignment1228" headers="r4c1-t26 r1c2-t26">
<p>Specifies the number of bytes of source data scanned</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r5c1-t26" headers="r1c1-t26">
<p><code>shift_status</code></p>
</td>
<td class="cellalignment1228" headers="r5c1-t26 r1c2-t26">
<p>Specifies the shift status at the end of the scan. The user must set it to <code>SHIFT_IN</code> the first time it is called in piecewise conversion.</p>
<p><span class="bold">Note:</span> ISO 2022 character sets use escape sequences instead of shift characters to indicate the encoding method. <code>shift_status</code> cannot hold the encoding method information that is provided by the escape sequences for the next function call. As a result, this function cannot be used to reconstruct ISO 2022 character from raw data in a piecewise way unless each unit of input can be guaranteed to be a closed string. A closed string begins and ends in a 7-bit escape state.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17156"></a>Usage Notes</p>
<p>If the user specifies an invalid character set, <code>NULL</code> data, or data whose length is 0, then the function returns a <code>NULL</code> string.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17157"></a>Examples</p>
<p class="subhead1"><a id="ARPLS71158"></a>Buffer Conversion</p>
<pre>
UTL_I18N.RAW_TO_CHAR(hextoraw('616263646566C2AA'), 'utf8')
</pre>
<p>This returns the following string in the database character set:</p>
<pre>
'abcde'||chr(170)
</pre>
<p class="subhead1"><a id="ARPLS71159"></a>Piecewise Conversion</p>
<pre>
UTL_I18N.RAW_TO_CHAR(hextoraw('616263646566C2AA'),'utf8',shf,slen)
</pre>
<p>This expression returns the following string in the database character set:</p>
<pre>
'abcde'||chr(170)
</pre>
<p>It also sets <code>shf</code> to <code>SHIFT_IN</code> and <code>slen</code> to <code>8</code>.</p>
<p>The following example converts data from the Internet piece by piece to the database character set.</p>
<pre>
rvalue RAW(1050); 
  nvalue VARCHAR2(1024); 
  conversion_state  PLS_INTEGER = 0; 
  converted_len   PLS_INTEGER; 
  rtemp  RAW(10) = ''; 
  conn   utl_tcp.connection; 
  tlen PLS_INTEGER;

  ... 
  conn := utl_tcp.open_connection ( remote_host =&gt; 'localhost', 
                                    remote_port =&gt; 2000); 
  LOOP 
      tlen := utl_tcp.read_raw(conn, rvalue, 1024); 
      rvalue := utl_raw.concat(rtemp, rvalue); 
      nvalue := utl_i18n.raw_to_char(rvalue, 'JA16SJIS', converted_len, conversion_stat); 
      if (converted_len &lt; utl_raw.length(rvalue) ) 
      then 
        rtemp := utl_raw.substr(rvalue, converted_len+1); 
      else 
        rtemp := ''; 
      end if; 
      /* do anything you want with nvalue */ 
      /* e.g htp.prn(nvalue); */ 
    END LOOP; 
    utl_tcp.close_connection(conn); 
  EXCEPTION 
    WHEN utl_tcp.end_of_input THEN 
      utl_tcp.close_connection(conn);
END;
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS71160" class="refsect2"><a id="i998574"></a>
<hr />
<h3 class="refsect2"><a id="sthref17158"></a>RAW_TO_NCHAR Functions</h3>
<p>This function converts <code>RAW</code> data from a valid Oracle character set to an <code>NVARCHAR2</code> string in the national character set.</p>
<p>The function is overloaded. The different forms of functionality are described along with the syntax declarations.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17159"></a>Syntax</p>
<p>Buffer Conversion:</p>
<pre>
UTL_I18N.RAW_TO_NCHAR ( 
   data         IN RAW,
   src_charset  IN VARCHAR2 DEFAULT NULL)
 RETURN NVARCHAR2;
</pre>
<p>Piecewise conversion converts raw data into character data piece by piece:</p>
<pre>
UTL_I18N.RAW_TO_NCHAR ( 
   data            IN RAW,
   src_charset      IN VARCHAR2 DEFAULT NULL,
   scanned_length   OUT PLS_INTEGER,
   shift_status     IN OUT PLS_INTEGER)
 RETURN NVARCHAR2;
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17160"></a>Parameters</p>
<div id="ARPLS71161" class="tblformal">
<p class="titleintable"><a id="sthref17161"></a><a id="sthref17162"></a>Table 226-19 RAW_TO_NCHAR Function Parameters</p>
<table class="cellalignment1229" title="RAW_TO_NCHAR Function Parameters" summary="This table describes the Parameters of the UTL_I18N.RAW_TO_NCHAR subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t27">Parameter</th>
<th class="cellalignment1227" id="r1c2-t27">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t27" headers="r1c1-t27">
<p><code>data</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t27 r1c2-t27">
<p>Specifies the <code>RAW</code> data to be converted to an <code>NVARCHAR2</code> string</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t27" headers="r1c1-t27">
<p><code>src_charset</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t27 r1c2-t27">
<p>Specifies the character set that the <code>RAW</code> data was derived from. If <code>src_charset</code> is <code>NULL</code>, then the database character set is used.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r4c1-t27" headers="r1c1-t27">
<p><code>scanned_length</code></p>
</td>
<td class="cellalignment1228" headers="r4c1-t27 r1c2-t27">
<p>Specifies the number of bytes of source data scanned</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r5c1-t27" headers="r1c1-t27">
<p><code>shift_status</code></p>
</td>
<td class="cellalignment1228" headers="r5c1-t27 r1c2-t27">
<p>Specifies the shift status at the end of the scan. The user must set it to <code>SHIFT_IN</code> the first time it is called in piecewise conversion.</p>
<p><span class="bold">Note:</span> ISO 2022 character sets use escape sequences instead of shift characters to indicate the encoding method. <code>shift_status</code> cannot hold the encoding method information that is provided by the escape sequences for the next function call. As a result, this function cannot be used to reconstruct ISO 2022 character from raw data in a piecewise way unless each unit of input can be guaranteed to be a closed string. A closed string begins and ends in a 7-bit escape state.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17163"></a>Usage Notes</p>
<p>If the user specifies an invalid character set, <code>NULL</code> data, or data whose length is 0, then the function returns a <code>NULL</code> string.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17164"></a>Examples</p>
<p class="subhead1"><a id="ARPLS71162"></a>Buffer Conversion</p>
<pre>
UTL_I18N.RAW_TO_NCHAR(hextoraw('616263646566C2AA'),'utf8')
</pre>
<p>This returns the following string in the national character set:</p>
<pre>
'abcde'||chr(170)
</pre>
<p class="subhead1"><a id="ARPLS71163"></a>Piecewise Conversion</p>
<pre>
UTL_I18N.RAW_TO_NCHAR(hextoraw('616263646566C2AA'),'utf8', shf, slen)
</pre>
<p>This expression returns the following string in the national character set:</p>
<pre>
'abcde'||chr(170)
</pre>
<p>It also sets <code>shf</code> to <code>SHIFT_IN</code> and <code>slen</code> to <code>8</code>.</p>
<p>The following example converts data from the Internet piece by piece to the national character set.</p>
<pre>
rvalue RAW(1050); 
  nvalue NVARCHAR2(1024); 
  converstion_state  PLS_INTEGER = 0; 
  converted_len   PLS_INTEGER; 
  rtemp  RAW(10) = ''; 
  conn   utl_tcp.connection; 
  tlen PLS_INTEGER;

  ... 
  conn := utl_tcp.open_connection ( remote_host =&gt; 'localhost', 
                                    remote_port =&gt; 2000); 
  LOOP 
      tlen := utl_tcp.read_raw(conn, rvalue, 1024); 
      rvalue := utl_raw.concat(rtemp, rvalue); 
      nvalue := utl_i18n.raw_to_nchar(rvalue, 'JA16SJIS', converted_len, conversion_stat); 
      if (converted_len &lt; utl_raw.length(rvalue) ) 
      then 
        rtemp := utl_raw.substr(rvalue, converted_len+1); 
      else 
        rtemp := ''; 
      end if; 
      /* do anything you want with nvalue */ 
      /* e.g htp.prn(nvalue); */ 
    END LOOP; 
    utl_tcp.close_connection(conn); 
  EXCEPTION 
    WHEN utl_tcp.end_of_input THEN 
      utl_tcp.close_connection(conn); 
  END; 
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS71164" class="refsect2"><a id="i1001698"></a>
<hr />
<h3 class="refsect2"><a id="sthref17165"></a>STRING_TO_RAW Function</h3>
<p>This function converts a <code>VARCHAR2</code> or <code>NVARCHAR2</code> string to another valid Oracle character set and returns the result as <code>RAW</code> data.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17166"></a>Syntax</p>
<pre>
UTL_I18N.STRING_TO_RAW( 
   data          IN VARCHAR2 CHARACTER SET ANY_CS,
   dst_charset   IN VARCHAR2 DEFAULT NULL)
RETURN RAW;
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17167"></a>Parameters</p>
<div id="ARPLS71165" class="tblformal">
<p class="titleintable"><a id="sthref17168"></a><a id="sthref17169"></a>Table 226-20 STRING_TO_RAW Function Parameters</p>
<table class="cellalignment1229" title="STRING_TO_RAW Function Parameters" summary="This table describes the Parameters of the UTL_I18N.STRING_TO_RAW subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t28">Parameter</th>
<th class="cellalignment1227" id="r1c2-t28">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t28" headers="r1c1-t28">
<p><code>data</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t28 r1c2-t28">
<p>Specifies the <code>VARCHAR2</code> or <code>NVARCHAR2</code> string to convert.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t28" headers="r1c1-t28">
<p><code>dst_charset</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t28 r1c2-t28">
<p>Specifies the destination character set. If <code>dst_charset</code> is <code>NULL</code>, then the database character set is used for <code>CHAR</code> data and the national character set is used for <code>NCHAR</code> data.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17170"></a>Usage Notes</p>
<p>If the user specifies an invalid character set, a <code>NULL</code> string, or a string whose length is 0, then the function returns a <code>NULL</code> string.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17171"></a>Examples</p>
<pre>
DECLARE 
    r raw(50); 
    s varchar2(20); 
  BEGIN 
    s:='abcdef'||chr(170); 
    r:=utl_i18n.string_to_raw(s,'utf8'); 
    dbms_output.put_line(rawtohex(r)); 
  end; 
/ 
</pre>
<p>This returns a hex value of <code>'616263646566C2AA'</code>.</p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS71166" class="refsect2"><a id="CJHBGCAE"></a>
<hr />
<h3 class="refsect2"><a id="sthref17172"></a>TRANSLITERATE Function</h3>
<p>This function performs script transliteration. In this release, the <code>TRANSLITERATE</code> function only supports Japanese Kana conversion.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17173"></a>Syntax</p>
<pre>
UTL_I18N.TRANSLITERATE (
  data IN VARCHAR2 CHARACTER SET ANY_CS,
  name IN VARCHAR2)
RETURN VARCHAR2 CHARACTER SET data%CHARSET;
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17174"></a>Parameters</p>
<div id="ARPLS71167" class="tblformal">
<p class="titleintable"><a id="sthref17175"></a><a id="sthref17176"></a>Table 226-21 TRANSLITERATE Function Parameters</p>
<table class="cellalignment1229" title="TRANSLITERATE Function Parameters" summary="This table describes the Parameters of the UTL_I18N.STRING_TO_RAW subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t29">Parameter</th>
<th class="cellalignment1227" id="r1c2-t29">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t29" headers="r1c1-t29">
<p><code>data</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t29 r1c2-t29">
<p>Specifies the data to be converted. Either <code>CHAR</code> or <code>NCHAR</code> data type can be specified.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t29" headers="r1c1-t29">
<p><code>name</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t29 r1c2-t29">
<p>Specifies the transliteration name string. For a list of valid names, see <a href="#CACIJHFB">Table 226-22</a>.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17177"></a>Constants</p>
<p>These options specify Japanese Kana conversions.</p>
<div id="ARPLS71168" class="tblformal">
<p class="titleintable"><a id="sthref17178"></a><a id="CACIJHFB"></a>Table 226-22 TRANSLITERATE Function Constants</p>
<table class="cellalignment1229" title="TRANSLITERATE Function Constants" summary="TRANSLITERATE constants" dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t30">Constant Name</th>
<th class="cellalignment1227" id="r1c2-t30">Value</th>
<th class="cellalignment1227" id="r1c3-t30">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t30" headers="r1c1-t30">
<p><code>KANA_FWKATAKANA</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t30 r1c2-t30">
<p><code>'kana_fwkatakana'</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t30 r1c3-t30">
<p>Converts any type of Kana character to a fullwidth Katakana character.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t30" headers="r1c1-t30">
<p><code>KANA_HWKATAKANA</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t30 r1c2-t30">
<p><code>'kana_hwkatakana'</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t30 r1c3-t30">
<p>Converts any type of Kana character to a halfwidth Katakana character.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r4c1-t30" headers="r1c1-t30">
<p><code>KANA_HIRAGANA</code></p>
</td>
<td class="cellalignment1228" headers="r4c1-t30 r1c2-t30">
<p><code>'kana_hiragana'</code></p>
</td>
<td class="cellalignment1228" headers="r4c1-t30 r1c3-t30">
<p>Converts any type of Kana character to a fullwidth Hiragana character.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r5c1-t30" headers="r1c1-t30">
<p><code>FWKATAKANA_HWKATAKANA</code></p>
</td>
<td class="cellalignment1228" headers="r5c1-t30 r1c2-t30">
<p><code>'fwkatakana_hwkatakana'</code></p>
</td>
<td class="cellalignment1228" headers="r5c1-t30 r1c3-t30">
<p>Converts only fullwidth Katakana characters to halfwidth Katakana characters.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r6c1-t30" headers="r1c1-t30">
<p><code>FWKATAKANA_HIRAGANA</code></p>
</td>
<td class="cellalignment1228" headers="r6c1-t30 r1c2-t30">
<p><code>'fwkatakana_hiragana'</code></p>
</td>
<td class="cellalignment1228" headers="r6c1-t30 r1c3-t30">
<p>Converts only fullwidth Katakana characters to fullwidth Hiragana characters.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r7c1-t30" headers="r1c1-t30">
<p><code>HWKATAKANA_FWKATAKANA</code></p>
</td>
<td class="cellalignment1228" headers="r7c1-t30 r1c2-t30">
<p><code>'hwkatakana_fwkatakana'</code></p>
</td>
<td class="cellalignment1228" headers="r7c1-t30 r1c3-t30">
<p>Converts only halfwidth Katakana characters to fullwidth Katakana characters.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r8c1-t30" headers="r1c1-t30">
<p><code>HWKATAKANA_HIRAGANA</code></p>
</td>
<td class="cellalignment1228" headers="r8c1-t30 r1c2-t30">
<p><code>'hwkatakana_hiragana'</code></p>
</td>
<td class="cellalignment1228" headers="r8c1-t30 r1c3-t30">
<p>Converts only halfwidth Katakana characters to fullwidth Hiragana characters.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r9c1-t30" headers="r1c1-t30">
<p><code>HIRAGANA_FWKATAKANA</code></p>
</td>
<td class="cellalignment1228" headers="r9c1-t30 r1c2-t30">
<p><code>'hiragana_fwkatakana'</code></p>
</td>
<td class="cellalignment1228" headers="r9c1-t30 r1c3-t30">
<p>Converts only fullwidth Hiragana characters to fullwidth Katakana characters.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r10c1-t30" headers="r1c1-t30">
<p><code>HIRAGANA_HWKATAKANA</code></p>
</td>
<td class="cellalignment1228" headers="r10c1-t30 r1c2-t30">
<p><code>'hiragana_hwkatakana'</code></p>
</td>
<td class="cellalignment1228" headers="r10c1-t30 r1c3-t30">
<p>Converts only fullwidth Hiragana characters to halfwidth Katakana characters.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17179"></a>Usage Notes</p>
<p>The function returns the converted string.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17180"></a>Examples</p>
<p>Given a table <code>japanese_emp</code>, containing an <code>NVARCHAR2</code> column <code>ename</code>, the following statement can be used to normalize all the kana names in <code>ename</code> to hiragana:</p>
<pre>
UPDATE japanese_emp
   SET ename = UTL_I18N.TRANSLITERATE (ename, 'kana_hiragana');
</pre>
<p>Figure shows how this output might look.</p>
<div id="ARPLS71169" class="figure">
<p class="titleinfigure"><a id="i1005928"></a>Figure 226-1 Loading Locale-Specific Data to the Database</p>
<img width="71" height="128" src="img/kana_small_arrow.gif" alt="Description of Figure 226-1 follows" /><br />
<a id="sthref17181" href="img_text/kana_small_arrow.htm">Description of "Figure 226-1 Loading Locale-Specific Data to the Database"</a><br />
<br /></div>
<!-- class="figure" -->
<p>The following statement normalizes one kana name to hiragana:</p>
<pre>
DECLARE
   Name  japanese_emp.ename%TYPE;
   Eno   CONSTANT  NUMBER(4) := 1;
BEGIN
   SELECT ename INTO name FROM japanese_emp WHERE enumber = eno;
   name := UTL_I18N.TRANSLITERATE(name, UTL_I18N.KANA_HIRAGANA);
   UPDATE japanese_emp SET ename = name WHERE enumber = eno;
EXCEPTION
   WHEN  UTL_I18N.UNSUPPORTED_TRANSLITERATION THEN
   DBMS_OUTPUT.PUT_LINE('transliteration not supported');
END;
/
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS71170" class="refsect2"><a id="i998992"></a>
<hr />
<h3 class="refsect2"><a id="sthref17182"></a>UNESCAPE_REFERENCE Function</h3>
<p>This function returns a string from an input string that contains character references. It decodes each character reference to the corresponding character value.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#i1000938">"ESCAPE_REFERENCE Function"</a> for more information about escape sequences</div>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17183"></a>Syntax</p>
<pre>
UTL_I18N.UNESCAPE_REFERENCE ( 
   str IN VARCHAR2 CHARACTER SET ANY_CS)
 RETURN VARCHAR2 CHARACTER SET str%CHARSET;
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17184"></a>Parameters</p>
<div id="ARPLS71171" class="tblformal">
<p class="titleintable"><a id="sthref17185"></a><a id="sthref17186"></a>Table 226-23 UNESCAPE_REFERENCE Function Parameters</p>
<table class="cellalignment1229" title="UNESCAPE_REFERENCE Function Parameters " summary="This table describes the Parameters of the UTL_I18N.UNESCAPE_REFERENCE subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t32">Parameter</th>
<th class="cellalignment1227" id="r1c2-t32">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t32" headers="r1c1-t32">
<p><code>str</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t32 r1c2-t32">
<p>Specifies the input string</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17187"></a>Usage Notes</p>
<p>If the user specifies a <code>NULL</code> string or a string whose length is 0, then the function returns a <code>NULL</code> string. If the function fails, then it returns the original string.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17188"></a>Examples</p>
<pre>
UTL_I18N.UNESCAPE_REFERENCE('hello &amp;lt; &amp;#xe5;')
</pre>
<p>This returns <code>'hello &lt;'||chr(229)</code>.</p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" --></div>
<!-- class="refsect1" --></div>
<!-- class="refentry" --></div>
<!-- class="chapter" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment1219">
<tr>
<td class="cellalignment1228">
<table class="cellalignment1224">
<tr>
<td class="cellalignment1223"><a href="u_http.htm"><img width="24" height="24" src="../../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment1223"><a href="u_inaddr.htm"><img width="24" height="24" src="../../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;1996, 2013,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment1231">
<table class="cellalignment1222">
<tr>
<td class="cellalignment1223"><a href="../../index.htm"><img width="24" height="24" src="../../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment1223"><a href="../../nav/portal_booklist.htm"><img width="24" height="24" src="../../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment1223"><a href="toc.htm"><img width="24" height="24" src="../../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment1223"><a href="index.htm"><img width="24" height="24" src="../../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment1223"><a href="../../nav/mindx.htm"><img width="24" height="24" src="../../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment1223"><a href="../../dcommon/html/feedback.htm"><img width="24" height="24" src="../../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>
</body>
</html>
