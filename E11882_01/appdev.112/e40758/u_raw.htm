<!DOCTYPE html>
<html lang="en" >
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1">
<meta charset="utf-8">
<title>UTL_RAW</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Version 5.1.2 Build 737" />
<meta name="dcterms.created" content="2013-07-19T18:56:11Z" />
<meta name="robots" content="all" />
<meta name="dcterms.title" content="Database PL/SQL Packages and Types Reference" />
<meta name="dcterms.identifier" content="E40758-03" />
<meta name="dcterms.isVersionOf" content="ARPLS" />
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;1996, 2013,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved." />
<link rel="Start" href="../../index.htm" title="Home" type="text/html" />
<link rel="Copyright" href="../../dcommon/html/cpyr.htm" title="Copyright" type="text/html" />

<script type="application/javascript"  src="../../dcommon/js/headfoot.js"></script>
<script type="application/javascript"  src="../../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html" />
<link rel="Index" href="index.htm" title="Index" type="text/html" />
<link rel="Prev" href="u_nla.htm" title="Previous" type="text/html" />
<link rel="Next" href="u_recomp.htm" title="Next" type="text/html" />
<link rel="alternate" href="../e40758.pdf" title="PDF version" type="application/pdf" />
<link rel="schema.dcterms" href="http://purl.org/dc/terms/" />
<link rel="stylesheet" href="../../dcommon/css/fusiondoc.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/header.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/footer.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/fonts.css">
<link rel="stylesheet" href="../../dcommon/css/foundation.css">
<link rel="stylesheet" href="../../dcommon/css/codemirror.css">
<link rel="stylesheet" type="text/css" title="Default" href="../../nav/css/html5.css">
<link rel="stylesheet" href="../../dcommon/css/respond-480-tablet.css">
<link rel="stylesheet" href="../../dcommon/css/respond-768-laptop.css">
<link rel="stylesheet" href="../../dcommon/css/respond-1140-deskop.css">
<script type="application/javascript" src="../../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">237/265</span> <!-- End Header -->
<div id="ARPLS072" class="chapter"><a id="BABJHEGF"></a>
<h1 class="chapter"><span class="secnum">233</span> UTL_RAW</h1>
<p>The <a id="sthref17568"></a><code>UTL_RAW</code> package provides SQL functions for manipulating <code>RAW</code> datatypes.</p>
<p>This chapter contains the following topics:</p>
<ul>
<li>
<p><a href="#BABFGDDG">Using UTL_RAW</a></p>
<ul>
<li>
<p>Overview</p>
</li>
<li>
<p>Operational Notes</p>
</li>
</ul>
</li>
<li>
<p><a href="#i996746">Summary of UTL_RAW Subprograms</a></p>
</li>
</ul>
<div class="refentry"><a id="BABFGDDG"></a>
<hr />
<div id="ARPLS71350" class="refsect1">
<h2 class="refsect1">Using UTL_RAW</h2>
<ul>
<li>
<p><a href="#i1005946">Overview</a></p>
</li>
<li>
<p><a href="#i1005951">Operational Notes</a></p>
</li>
</ul>
<div id="ARPLS71351" class="refsect2"><a id="i1005946"></a>
<hr />
<h3 class="refsect2">Overview</h3>
<p>This package is necessary because normal SQL functions do not operate on <code>RAWs</code>, and PL/SQL does not allow overloading between a <code>RAW</code> and a <code>CHAR</code> datatype. <code>UTL_RAW</code> also includes subprograms that convert various COBOL number formats to, and from, <code>RAWs</code>.</p>
<p><code>UTL_RAW</code> is not specific to the database environment, and it may actually be used in other environments. For this reason, the prefix UTL has been given to the package, instead of DBMS.</p>
</div>
<!-- class="refsect2" -->
<div id="ARPLS71352" class="refsect2"><a id="i1005951"></a>
<hr />
<h3 class="refsect2">Operational Notes</h3>
<p><code>UTL_RAW</code> allows a <code>RAW</code> "record" to be composed of many elements. By using the <code>RAW</code> datatype, character set conversion will not be performed, keeping the <code>RAW</code> in its original format when being transferred through remote procedure calls.</p>
<p>With the <code>RAW</code> functions, you can manipulate binary data that was previously limited to the <code>hextoraw</code> and <code>rawtohex</code> functions.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
Notes on data types:
<ul>
<li>
<p>The <code>PLS_INTEGER</code> and <code>BINARY_INTEGER</code> data types are identical. This document uses <code>BINARY_INTEGER</code> to indicate data types in reference information (such as for table types, record types, subprogram parameters, or subprogram return values), but may use either in discussion and examples.</p>
</li>
<li>
<p>The <code>INTEGER</code> and <code>NUMBER(38)</code> data types are also identical. This document uses <code>INTEGER</code> throughout.</p>
</li>
</ul>
</div>
</div>
<!-- class="refsect2" --></div>
<!-- class="refsect1" -->
<a id="i996746"></a>
<hr />
<div id="ARPLS71353" class="refsect1">
<h2 class="refsect1">Summary of UTL_RAW Subprograms</h2>
<div id="ARPLS71354" class="tblformal">
<p class="titleintable"><a id="sthref17569"></a><a id="sthref17570"></a>Table 233-1 <span class="bolditalic">UTL_RAW Package Subprograms</span></p>
<table class="cellalignment1229" title="UTL_RAW Package Subprograms" summary="This table lists the UTL_RAW subprograms in alphabetical order and briefly describes them." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t3">Subprogram</th>
<th class="cellalignment1227" id="r1c2-t3">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t3" headers="r1c1-t3">
<p><a href="#i1003896">BIT_AND Function</a></p>
</td>
<td class="cellalignment1228" headers="r2c1-t3 r1c2-t3">
<p>Performs bitwise logical "and" of the values in <code>RAW</code> <code>r1</code> with <code>RAW</code> <code>r2</code> and returns the "anded" result <code>RAW</code></p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t3" headers="r1c1-t3">
<p><a href="#BABGJABI">BIT_COMPLEMENT Function</a></p>
</td>
<td class="cellalignment1228" headers="r3c1-t3 r1c2-t3">
<p>Performs bitwise logical "complement" of the values in <code>RAW</code> <code>r</code> and returns the "complement'ed" result <code>RAW</code></p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r4c1-t3" headers="r1c1-t3">
<p><a href="#i1003945">BIT_OR Function</a></p>
</td>
<td class="cellalignment1228" headers="r4c1-t3 r1c2-t3">
<p>Performs bitwise logical "or" of the values in <code>RAW</code> <code>r1</code> with <code>RAW</code> <code>r2</code> and returns the "or'd" result <code>RAW</code></p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r5c1-t3" headers="r1c1-t3">
<p><a href="#i1003994">BIT_XOR Function</a></p>
</td>
<td class="cellalignment1228" headers="r5c1-t3 r1c2-t3">
<p>Performs bitwise logical "exclusive or" of the values in <code>RAW</code> <code>r1</code> with <code>RAW</code> <code>r2</code> and returns the "xor'd" result <code>RAW</code></p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r6c1-t3" headers="r1c1-t3">
<p><a href="#i1004317">CAST_FROM_BINARY_DOUBLE Function</a></p>
</td>
<td class="cellalignment1228" headers="r6c1-t3 r1c2-t3">
<p>Returns the <code>RAW</code> binary representation of a <code>BINARY_DOUBLE</code> value</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r7c1-t3" headers="r1c1-t3">
<p><a href="#i1004373">CAST_FROM_BINARY_FLOAT Function</a></p>
</td>
<td class="cellalignment1228" headers="r7c1-t3 r1c2-t3">
<p>Returns the <code>RAW</code> binary representation of a <code>BINARY_FLOAT</code> value</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r8c1-t3" headers="r1c1-t3">
<p><a href="#i1004238">CAST_FROM_BINARY_INTEGER Function</a></p>
</td>
<td class="cellalignment1228" headers="r8c1-t3 r1c2-t3">
<p>Returns the <code>RAW</code> binary representation of a <code>BINARY_INTEGER</code> value</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r9c1-t3" headers="r1c1-t3">
<p><a href="#BABBCAEG">CAST_FROM_NUMBER Function</a></p>
</td>
<td class="cellalignment1228" headers="r9c1-t3 r1c2-t3">
<p>Returns the <code>RAW</code> binary representation of a <code>NUMBER</code> value</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r10c1-t3" headers="r1c1-t3">
<p><a href="#i1004636">CAST_TO_BINARY_DOUBLE Function</a></p>
</td>
<td class="cellalignment1228" headers="r10c1-t3 r1c2-t3">
<p>Casts the <code>RAW</code> binary representation of a <code>BINARY_DOUBLE</code> into a <code>BINARY_DOUBLE</code></p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r11c1-t3" headers="r1c1-t3">
<p><a href="#i1004637">CAST_TO_BINARY_FLOAT Function</a></p>
</td>
<td class="cellalignment1228" headers="r11c1-t3 r1c2-t3">
<p>Casts the <code>RAW</code> binary representation of a <code>BINARY_FLOAT</code> into a <code>BINARY_FLOAT</code></p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r12c1-t3" headers="r1c1-t3">
<p><a href="#BABGHJBD">CAST_TO_BINARY_INTEGER Function</a></p>
</td>
<td class="cellalignment1228" headers="r12c1-t3 r1c2-t3">
<p>Casts the <code>RAW</code> binary representation of a <code>BINARY_INTEGER</code> into a <code>BINARY_INTEGER</code></p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r13c1-t3" headers="r1c1-t3">
<p><a href="#BABJJAFB">CAST_TO_NUMBER Function</a></p>
</td>
<td class="cellalignment1228" headers="r13c1-t3 r1c2-t3">
<p>Casts the <code>RAW</code> binary representation of a <code>NUMBER</code> into a <code>NUMBER</code></p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r14c1-t3" headers="r1c1-t3">
<p><a href="#i1007280">CAST_TO_NVARCHAR2 Function</a></p>
</td>
<td class="cellalignment1228" headers="r14c1-t3 r1c2-t3">
<p>Converts a <code>RAW</code> value into a <code>VARCHAR2</code> value</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r15c1-t3" headers="r1c1-t3">
<p><a href="#i997085">CAST_TO_RAW Function</a></p>
</td>
<td class="cellalignment1228" headers="r15c1-t3 r1c2-t3">
<p>Converts a <code>RAW</code> value into an <code>NVARCHAR2</code> value</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r16c1-t3" headers="r1c1-t3">
<p><a href="#BABJFGBH">CAST_TO_VARCHAR2 Function</a></p>
</td>
<td class="cellalignment1228" headers="r16c1-t3 r1c2-t3">
<p>Converts a <code>VARCHAR2</code> value into a <code>RAW</code> value</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r17c1-t3" headers="r1c1-t3">
<p><a href="#BABCIBGE">COMPARE Function</a></p>
</td>
<td class="cellalignment1228" headers="r17c1-t3 r1c2-t3">
<p>Compares <code>RAW</code> <code>r1</code> against <code>RAW</code> <code>r2</code></p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r18c1-t3" headers="r1c1-t3">
<p><a href="#i997176">CONCAT Function</a></p>
</td>
<td class="cellalignment1228" headers="r18c1-t3 r1c2-t3">
<p>Concatenates up to 12 <code>RAWs</code> into a single <code>RAW</code></p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r19c1-t3" headers="r1c1-t3">
<p><a href="#i1003765">CONVERT Function</a></p>
</td>
<td class="cellalignment1228" headers="r19c1-t3 r1c2-t3">
<p>Converts <code>RAW</code> <code>r</code> from character set <code>from_charset</code> to character set <code>to_charset</code> and returns the resulting <code>RAW</code></p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r20c1-t3" headers="r1c1-t3">
<p><a href="#BABCGGCD">COPIES Function</a></p>
</td>
<td class="cellalignment1228" headers="r20c1-t3 r1c2-t3">
<p>Returns <code>n</code> copies of <code>r</code> concatenated together</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r21c1-t3" headers="r1c1-t3">
<p><a href="#BABCFHDJ">LENGTH Function</a></p>
</td>
<td class="cellalignment1228" headers="r21c1-t3 r1c2-t3">
<p>Returns the length in bytes of a <code>RAW</code> <code>r</code></p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r22c1-t3" headers="r1c1-t3">
<p><a href="#i1003455">OVERLAY Function</a></p>
</td>
<td class="cellalignment1228" headers="r22c1-t3 r1c2-t3">
<p>Overlays the specified portion of target <code>RAW</code> with overlay <code>RAW</code>, starting from byte position <code>pos</code> of target and proceeding for <code>len</code> bytes</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r23c1-t3" headers="r1c1-t3">
<p><a href="#i1003598">REVERSE Function</a></p>
</td>
<td class="cellalignment1228" headers="r23c1-t3 r1c2-t3">
<p>Reverses a byte sequence in <code>RAW</code> <code>r</code> from end to end</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r24c1-t3" headers="r1c1-t3">
<p><a href="#BABIFIJB">SUBSTR Function</a></p>
</td>
<td class="cellalignment1228" headers="r24c1-t3 r1c2-t3">
<p>Returns <code>len</code> bytes, starting at <code>pos</code> from <code>RAW</code> <code>r</code></p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r25c1-t3" headers="r1c1-t3">
<p><a href="#i997340">TRANSLATE Function</a></p>
</td>
<td class="cellalignment1228" headers="r25c1-t3 r1c2-t3">
<p>Translates the bytes in the input <code>RAW</code> <code>r</code> according to the bytes in the translation <code>RAWs</code> <code>from_set</code> and <code>to_set</code></p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r26c1-t3" headers="r1c1-t3">
<p><a href="#i997416">TRANSLITERATE Function</a></p>
</td>
<td class="cellalignment1228" headers="r26c1-t3 r1c2-t3">
<p>Converts the bytes in the input <code>RAW</code> <code>r</code> according to the bytes in the transliteration <code>RAWs</code> <code>from_set</code> and <code>to_set</code></p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r27c1-t3" headers="r1c1-t3">
<p><a href="#BABGDIIJ">XRANGE Function</a></p>
</td>
<td class="cellalignment1228" headers="r27c1-t3 r1c2-t3">
<p>Returns a <code>RAW</code> containing all valid 1-byte encodings in succession, beginning with the value <code>start_byte</code> and ending with the value <code>end_byte</code></p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<div id="ARPLS71355" class="refsect2"><a id="i1003896"></a>
<hr />
<h3 class="refsect2"><a id="sthref17571"></a>BIT_AND Function</h3>
<p>This function performs bitwise logical "and" of the values in <code>RAW</code> <code>r1</code> with <code>RAW</code> <code>r2</code> and returns the "anded" result <code>RAW</code>.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17572"></a>Syntax</p>
<pre>
UTL_RAW.BIT_AND (
   r1 IN RAW,
   r2 IN RAW) 
RETURN RAW;
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17573"></a>Pragmas</p>
<pre>
pragma restrict_references(bit_and, WNDS, RNDS, WNPS, RNPS); 
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17574"></a>Parameters</p>
<div id="ARPLS71356" class="tblformal">
<p class="titleintable"><a id="sthref17575"></a><a id="sthref17576"></a>Table 233-2 BIT_AND Function Parameters</p>
<table class="cellalignment1229" title="BIT_AND Function Parameters " summary="This table describes the Parameters of the UTL_RAW.BIT_AND subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t4">Parameter</th>
<th class="cellalignment1227" id="r1c2-t4">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t4" headers="r1c1-t4">
<p><code>r1</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t4 r1c2-t4">
<p><code>RAW</code> to "and" with <code>r2</code></p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t4" headers="r1c1-t4">
<p><code>r2</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t4 r1c2-t4">
<p><code>RAW</code> to "and" with <code>r1</code></p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17577"></a>Return Values</p>
<div id="ARPLS71357" class="tblformal">
<p class="titleintable"><a id="sthref17578"></a><a id="sthref17579"></a>Table 233-3 BIT_AND Function Return Values</p>
<table class="cellalignment1229" title="BIT_AND Function Return Values " summary="This table describes Values Returned by the BIT_AND subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t5">Return</th>
<th class="cellalignment1227" id="r1c2-t5">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t5" headers="r1c1-t5">
<p><code>RAW</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t5 r1c2-t5">
<p>Containing the "and" of <code>r1</code> and <code>r2</code></p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t5" headers="r1c1-t5">
<p><code>NULL</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t5 r1c2-t5">
<p>Either <code>r1</code> or <code>r2</code> input parameter was <code>NULL</code></p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17580"></a>Usage Notes</p>
<p>If <code>r1</code> and r2 differ in length, the and operation is terminated after the last byte of the shorter of the two <code>RAWs</code>, and the unprocessed portion of the longer <code>RAW</code> is appended to the partial result. The result length equals the longer of the two input <code>RAWs</code>.</p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS71358" class="refsect2"><a id="BABGJABI"></a>
<hr />
<h3 class="refsect2"><a id="sthref17581"></a>BIT_COMPLEMENT Function</h3>
<p>This function performs bitwise logical "complement" of the values in <code>RAW</code> <code>r</code> and returns the complement'ed result <code>RAW</code>. The result length equals the input <code>RAW</code> <code>r</code> length.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17582"></a>Syntax</p>
<pre>
UTL_RAW.BIT_COMPLEMENT (
   r IN RAW) 
  RETURN RAW;
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17583"></a>Pragmas</p>
<pre>
pragma restrict_references(bit_complement, WNDS, RNDS, WNPS, RNPS); 
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17584"></a>Parameters</p>
<div id="ARPLS71359" class="tblformal">
<p class="titleintable"><a id="sthref17585"></a><a id="sthref17586"></a>Table 233-4 BIT_COMPLEMENT Function Parameters</p>
<table class="cellalignment1229" title="BIT_COMPLEMENT Function Parameters " summary="This table describes the Parameters of the UTL_RAW.BIT_COMPLEMENT subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t6">Parameter</th>
<th class="cellalignment1227" id="r1c2-t6">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t6" headers="r1c1-t6">
<p><code>r</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t6 r1c2-t6">
<p><code>RAW</code> to perform "complement" operation</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17587"></a>Return Values</p>
<div id="ARPLS71360" class="tblformal">
<p class="titleintable"><a id="sthref17588"></a><a id="sthref17589"></a>Table 233-5 BIT_COMPLEMENT Function Return Values</p>
<table class="cellalignment1229" title="BIT_COMPLEMENT Function Return Values " summary="This table describes Values Returned by the BIT_COMPLEMENT subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t7">Return</th>
<th class="cellalignment1227" id="r1c2-t7">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t7" headers="r1c1-t7">
<p><code>RAW</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t7 r1c2-t7">
<p>The "complement" of <code>r1</code></p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t7" headers="r1c1-t7">
<p><code>NULL</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t7 r1c2-t7">
<p>If <code>r</code> input parameter was <code>NULL</code></p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS71361" class="refsect2"><a id="i1003945"></a>
<hr />
<h3 class="refsect2"><a id="sthref17590"></a>BIT_OR Function</h3>
<p>This function performs bitwise logical "or" of the values in <code>RAW</code> r1 with <code>RAW</code> r2 and returns the or'd result <code>RAW</code>.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17591"></a>Syntax</p>
<pre>
UTL_RAW.BIT_OR (
   r1 IN RAW,
   r2 IN RAW) 
  RETURN RAW;
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17592"></a>Pragmas</p>
<pre>
pragma restrict_references(bit_or, WNDS, RNDS, WNPS, RNPS); 
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17593"></a>Parameters</p>
<div id="ARPLS71362" class="tblformal">
<p class="titleintable"><a id="sthref17594"></a><a id="sthref17595"></a>Table 233-6 BIT_OR Function Parameters</p>
<table class="cellalignment1229" title="BIT_OR Function Parameters " summary="This table describes the Parameters of the UTL_RAW.BIT_OR subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t8">Parameters</th>
<th class="cellalignment1227" id="r1c2-t8">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t8" headers="r1c1-t8">
<p><code>r1</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t8 r1c2-t8">
<p><code>RAW</code> to "or" with <code>r2</code></p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t8" headers="r1c1-t8">
<p><code>r2</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t8 r1c2-t8">
<p><code>RAW</code> to "or" with <code>r1</code></p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17596"></a>Return Values</p>
<div id="ARPLS71363" class="tblformal">
<p class="titleintable"><a id="sthref17597"></a><a id="sthref17598"></a>Table 233-7 BIT_OR Function Return Values</p>
<table class="cellalignment1229" title="BIT_OR Function Return Values " summary="This table describes Values Returned by the BIT_OR subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t9">Return</th>
<th class="cellalignment1227" id="r1c2-t9">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t9" headers="r1c1-t9">
<p><code>RAW</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t9 r1c2-t9">
<p>Containing the "or" of <code>r1</code> and <code>r2</code></p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t9" headers="r1c1-t9">
<p><code>NULL</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t9 r1c2-t9">
<p>Either <code>r1</code> or <code>r2</code> input parameter was <code>NULL</code></p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17599"></a>Usage Notes</p>
<p>If <code>r1</code> and <code>r2</code> differ in length, then the "or" operation is terminated after the last byte of the shorter of the two <code>RAWs</code>, and the unprocessed portion of the longer <code>RAW</code> is appended to the partial result. The result length equals the longer of the two input <code>RAWs</code>.</p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS71364" class="refsect2"><a id="i1003994"></a>
<hr />
<h3 class="refsect2"><a id="sthref17600"></a>BIT_XOR Function</h3>
<p>This function performs bitwise logical "exclusive or" of the values in <code>RAW</code> <code>r1</code> with <code>RAW</code> <code>r2</code> and returns the xor'd result <code>RAW</code>.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17601"></a>Syntax</p>
<pre>
UTL_RAW.BIT_XOR (
   r1 IN RAW,
   r2 IN RAW) 
  RETURN RAW;
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17602"></a>Pragmas</p>
<pre>
pragma restrict_references(bit_xor, WNDS, RNDS, WNPS, RNPS); 
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17603"></a>Parameters</p>
<div id="ARPLS71365" class="tblformal">
<p class="titleintable"><a id="sthref17604"></a><a id="sthref17605"></a>Table 233-8 BIT_XOR Function Parameters</p>
<table class="cellalignment1229" title="BIT_XOR Function Parameters " summary="This table describes the Parameters of the UTL_RAW.BIT_XOR subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t10">Parameter</th>
<th class="cellalignment1227" id="r1c2-t10">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t10" headers="r1c1-t10">
<p><code>r1</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t10 r1c2-t10">
<p><code>RAW</code> to "xor" with <code>r2</code></p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t10" headers="r1c1-t10">
<p><code>r2</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t10 r1c2-t10">
<p><code>RAW</code> to "xor" with <code>r1</code></p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17606"></a>Return Values</p>
<div id="ARPLS71366" class="tblformal">
<p class="titleintable"><a id="sthref17607"></a><a id="sthref17608"></a>Table 233-9 BIT_XOR Function Return Values</p>
<table class="cellalignment1229" title="BIT_XOR Function Return Values " summary="This table describes Values Returned by the BIT_XOR subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t11">Return</th>
<th class="cellalignment1227" id="r1c2-t11">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t11" headers="r1c1-t11">
<p><code>RAW</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t11 r1c2-t11">
<p>Containing the "xor" of <code>r1</code> and <code>r2</code></p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t11" headers="r1c1-t11">
<p><code>NULL</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t11 r1c2-t11">
<p>If either <code>r1</code> or <code>r2</code> input parameter was <code>NULL</code></p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17609"></a>Usage Notes</p>
<p>If <code>r1</code> and <code>r2</code> differ in length, then the "xor" operation is terminated after the last byte of the shorter of the two <code>RAWs</code>, and the unprocessed portion of the longer <code>RAW</code> is appended to the partial result. The result length equals the longer of the two input <code>RAWs</code>.</p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS71367" class="refsect2"><a id="i1004317"></a>
<hr />
<h3 class="refsect2"><a id="sthref17610"></a>CAST_FROM_BINARY_DOUBLE Function</h3>
<p>This function returns the <code>RAW</code> binary representation of a <code>BINARY_DOUBLE</code> value.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17611"></a>Syntax</p>
<pre>
UTL_RAW.CAST_FROM_BINARY_DOUBLE(
   n          IN BINARY_DOUBLE,
   endianess IN PLS_INTEGER DEFAULT 1) 
RETURN RAW;
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17612"></a>Pragmas</p>
<pre>
pragma restrict_references(cast_from_binary_double, WNDS, RNDS, WNPS, RNPS);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17613"></a>Parameters</p>
<div id="ARPLS71368" class="tblformal">
<p class="titleintable"><a id="sthref17614"></a><a id="sthref17615"></a>Table 233-10 CAST_FROM_BINARY_DOUBLE Function Parameters</p>
<table class="cellalignment1229" title="CAST_FROM_BINARY_DOUBLE Function Parameters" summary="This table describes the Parameters of the UTL_RAW.CAST_FROM_BINARARY_DOUBLE subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t12">Parameter</th>
<th class="cellalignment1227" id="r1c2-t12">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t12" headers="r1c1-t12">
<p><code>n</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t12 r1c2-t12">
<p><code>BINARY_DOUBLE</code> value</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t12" headers="r1c1-t12">
<p><code>endianess</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t12 r1c2-t12">
<p>A <code>BINARY_INTEGER</code> value indicating the endianess. The function recognizes the defined constants <code>big_endian</code> (1), <code>little_endian</code> (2), and <code>machine_endian</code> (3). The default is <code>big_endian</code>. A setting of <code>machine_endian</code> has the same effect as <code>big_endian</code> on a big endian machine, or the same effect as <code>little_endian</code> on a little endian machine.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17616"></a>Return Values</p>
<p>The binary representation of the <code>BINARY_DOUBLE</code> value, or <code>NULL</code> if the input is <code>NULL</code>.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17617"></a>Usage Notes</p>
<ul>
<li>
<p>An 8-byte <code>binary_double</code> value maps to the IEEE 754 double-precision format as follows:</p>
<pre>
byte 0: bit 63 ~ bit 56
byte 1: bit 55 ~ bit 48
byte 2: bit 47 ~ bit 40
byte 3: bit 39 ~ bit 32
byte 4: bit 31 ~ bit 24
byte 5: bit 23 ~ bit 16
byte 6: bit 15 ~ bit  8
byte 7: bit  7 ~ bit  0
</pre></li>
<li>
<p>The parameter endianess describes how the bytes of <code>BINARY_DOUBLE</code> are mapped to the bytes of <code>RAW</code>. In the following matrix, rb0 ~ rb7 refer to the bytes in raw and db0 ~ db7 refer to the bytes in <code>BINARY_DOUBLE.</code></p>
<div class="inftblinformalwide">
<table class="cellalignment1226" title="Parameter Endianess" summary="This table describes how the parameter Endianess describes how the bytes of BINARY_DOUBLE are mapped to the bytes of RAW." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t13"><br /></th>
<th class="cellalignment1227" id="r1c2-t13">rb0</th>
<th class="cellalignment1227" id="r1c3-t13">rb1</th>
<th class="cellalignment1227" id="r1c4-t13">rb2</th>
<th class="cellalignment1227" id="r1c5-t13">rb3</th>
<th class="cellalignment1227" id="r1c6-t13">rb4</th>
<th class="cellalignment1227" id="r1c7-t13">rb5</th>
<th class="cellalignment1227" id="r1c8-t13">rb6</th>
<th class="cellalignment1227" id="r1c9-t13">rb7</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t13" headers="r1c1-t13"><span class="bold">big_endian</span></td>
<td class="cellalignment1228" headers="r2c1-t13 r1c2-t13"><code>db0</code></td>
<td class="cellalignment1228" headers="r2c1-t13 r1c3-t13"><code>db1</code></td>
<td class="cellalignment1228" headers="r2c1-t13 r1c4-t13"><code>db2</code></td>
<td class="cellalignment1228" headers="r2c1-t13 r1c5-t13"><code>db3</code></td>
<td class="cellalignment1228" headers="r2c1-t13 r1c6-t13"><code>db4</code></td>
<td class="cellalignment1228" headers="r2c1-t13 r1c7-t13"><code>db5</code></td>
<td class="cellalignment1228" headers="r2c1-t13 r1c8-t13"><code>db6</code></td>
<td class="cellalignment1228" headers="r2c1-t13 r1c9-t13"><code>db7</code></td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t13" headers="r1c1-t13"><span class="bold">little_endian</span></td>
<td class="cellalignment1228" headers="r3c1-t13 r1c2-t13"><code>db7</code></td>
<td class="cellalignment1228" headers="r3c1-t13 r1c3-t13"><code>db6</code></td>
<td class="cellalignment1228" headers="r3c1-t13 r1c4-t13"><code>db5</code></td>
<td class="cellalignment1228" headers="r3c1-t13 r1c5-t13"><code>db4</code></td>
<td class="cellalignment1228" headers="r3c1-t13 r1c6-t13"><code>db3</code></td>
<td class="cellalignment1228" headers="r3c1-t13 r1c7-t13"><code>db2</code></td>
<td class="cellalignment1228" headers="r3c1-t13 r1c8-t13"><code>db1</code></td>
<td class="cellalignment1228" headers="r3c1-t13 r1c9-t13"><code>db0</code></td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformalwide" --></li>
<li>
<p>In case of machine-endian, the 8 bytes of the <code>BINARY_DOUBLE</code> argument are copied straight across into the <code>RAW</code> return value. The effect is the same if the user has passed <code>big_endian</code> on a big-endian machine, or <code>little_endian</code> on a little-endian machine.</p>
</li>
</ul>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS71369" class="refsect2"><a id="i1004373"></a>
<hr />
<h3 class="refsect2"><a id="sthref17618"></a>CAST_FROM_BINARY_FLOAT Function</h3>
<p>This function returns the <code>RAW</code> binary representation of a <code>BINARY_FLOAT</code> value.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17619"></a>Syntax</p>
<pre>
UTL_RAW.CAST_FROM_BINARY_FLOAT(
   n          IN BINARY_FLOAT,
   endianess IN PLS_INTEGER DEFAULT 1) 
RETURN RAW;
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17620"></a>Pragmas</p>
<pre>
pragma restrict_references(cast_from_binary_float, WNDS, RNDS, WNPS, RNPS);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17621"></a>Parameters</p>
<div id="ARPLS71370" class="tblformal">
<p class="titleintable"><a id="sthref17622"></a><a id="sthref17623"></a>Table 233-11 CAST_FROM_BINARY_FLOAT Function Parameters</p>
<table class="cellalignment1229" title="CAST_FROM_BINARY_FLOAT Function Parameters" summary="This table describes the Parameters of the UTL_RAW.CAST_FROM_BINARY_FLOAT subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t14">Parameter</th>
<th class="cellalignment1227" id="r1c2-t14">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t14" headers="r1c1-t14">
<p><code>n</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t14 r1c2-t14">
<p><code>BINARY_FLOAT</code> value</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t14" headers="r1c1-t14">
<p><code>endianess</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t14 r1c2-t14">
<p>A <code>BINARY_INTEGER</code> value indicating the endianess. The function recognizes the defined constants <code>big_endian</code> (1), <code>little_endian</code> (2), and <code>machine_endian</code> (3). The default is <code>big_endian</code>. A setting of <code>machine_endian</code> has the same effect as <code>big_endian</code> on a big endian machine, or the same effect as <code>little_endian</code> on a little endian machine.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17624"></a>Return Values</p>
<p>The binary representation (RAW) of the <code>BINARY_FLOAT</code> value, or <code>NULL</code> if the input is <code>NULL</code>.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17625"></a>Usage Notes</p>
<ul>
<li>
<p>A 4-byte <code>binary_float</code> value maps to the IEEE 754 single-precision format as follows:</p>
<pre>
byte 0: bit 31 ~ bit 24
byte 1: bit 23 ~ bit 16
byte 2: bit 15 ~ bit  8
byte 3: bit 7 ~  bit  0
</pre></li>
<li>
<p>The parameter endianess describes how the bytes of <code>BINARY_FLOAT</code> are mapped to the bytes of <code>RAW</code>. In the following matrix, rb0 ~ rb3 refer to the bytes in <code>RAW</code> and fb0 ~ fb3 refer to the bytes in <code>BINARY_FLOAT</code>.</p>
<div class="inftblinformal">
<table class="cellalignment1226" title="Parameter Endianess" summary="This table describes how the parameter Endianess describes how the bytes of BINARY_FLOAT are mapped to the bytes of RAW." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t15"><br /></th>
<th class="cellalignment1227" id="r1c2-t15">rb0</th>
<th class="cellalignment1227" id="r1c3-t15">rb1</th>
<th class="cellalignment1227" id="r1c4-t15">rb2</th>
<th class="cellalignment1227" id="r1c5-t15">rb3</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t15" headers="r1c1-t15"><span class="bold">big_endian</span></td>
<td class="cellalignment1228" headers="r2c1-t15 r1c2-t15">fb0</td>
<td class="cellalignment1228" headers="r2c1-t15 r1c3-t15">fb1</td>
<td class="cellalignment1228" headers="r2c1-t15 r1c4-t15">fb2</td>
<td class="cellalignment1228" headers="r2c1-t15 r1c5-t15">fb3</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t15" headers="r1c1-t15"><span class="bold">little_endian</span></td>
<td class="cellalignment1228" headers="r3c1-t15 r1c2-t15">fb3</td>
<td class="cellalignment1228" headers="r3c1-t15 r1c3-t15">fb2</td>
<td class="cellalignment1228" headers="r3c1-t15 r1c4-t15">fb1</td>
<td class="cellalignment1228" headers="r3c1-t15 r1c5-t15">fb0</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" --></li>
<li>
<p>In case of machine-endian, the 4 bytes of the <code>BINARY_FLOAT</code> argument are copied straight across into the <code>RAW</code> return value. The effect is the same if the user has passed <code>big_endian</code> on a big-endian machine, or <code>little_endian</code> on a little-endian machine.</p>
</li>
</ul>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS71371" class="refsect2"><a id="i1004238"></a>
<hr />
<h3 class="refsect2"><a id="sthref17626"></a>CAST_FROM_BINARY_INTEGER Function</h3>
<p>This function returns the <code>RAW</code> binary representation of a <code>BINARY_INTEGER</code> value.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17627"></a>Syntax</p>
<pre>
UTL_RAW.CAST_FROM_BINARY_INTEGER (
   n          IN BINARY_INTEGER
   endianess  IN PLS_INTEGER DEFAULT BIG_ENDIAN) 
RETURN RAW;
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17628"></a>Pragmas</p>
<pre>
pragma restrict_references(cast_from_binary_integer, WNDS, RNDS, WNPS, RNPS);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17629"></a>Parameters</p>
<div id="ARPLS71372" class="tblformal">
<p class="titleintable"><a id="sthref17630"></a><a id="sthref17631"></a>Table 233-12 CAST_FROM_BINARY_INTEGER Function Parameters</p>
<table class="cellalignment1229" title="CAST_FROM_BINARY_INTEGER Function Parameters" summary="This table describes the Parameters of the UTL_RAW.CAST_FROM_BINARY_INTEGER subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t16">Parameter</th>
<th class="cellalignment1227" id="r1c2-t16">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t16" headers="r1c1-t16">
<p><code>n</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t16 r1c2-t16">
<p><code>BINARY_INTEGER</code> value.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t16" headers="r1c1-t16">
<p><code>endianess</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t16 r1c2-t16">
<p>A <code>BINARY_INTEGER</code> value indicating the endianess. The function recognizes the defined constants <code>big_endian</code> (1), <code>little_endian</code> (2), and <code>machine_endian</code> (3). The default is <code>big_endian</code>. A setting of <code>machine_endian</code> has the same effect as <code>big_endian</code> on a big endian machine, or the same effect as <code>little_endian</code> on a little endian machine.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17632"></a>Return Values</p>
<p>The binary representation of the <code>BINARY_INTEGER</code> value.</p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS71373" class="refsect2"><a id="BABBCAEG"></a>
<hr />
<h3 class="refsect2"><a id="sthref17633"></a>CAST_FROM_NUMBER Function</h3>
<p>This function returns the <code>RAW</code> binary representation of a <code>NUMBER</code> value.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17634"></a>Syntax</p>
<pre>
UTL_RAW.CAST_FROM_NUMBER (
   n  IN NUMBER)
 RETURN RAW;
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17635"></a>Pragmas</p>
<pre>
pragma restrict_references(cast_from_number, WNDS, RNDS, WNPS, RNPS);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17636"></a>Parameters</p>
<div id="ARPLS71374" class="tblformal">
<p class="titleintable"><a id="sthref17637"></a><a id="sthref17638"></a>Table 233-13 CAST_FROM_NUMBER Function Parameters</p>
<table class="cellalignment1229" title="CAST_FROM_NUMBER Function Parameters" summary="This table describes the Parameters of the UTL_RAW.CAST_FROM_NUMBER subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t17">Parameter</th>
<th class="cellalignment1227" id="r1c2-t17">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t17" headers="r1c1-t17">
<p><code>n</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t17 r1c2-t17">
<p><code>NUMBER</code> value</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17639"></a>Return Values</p>
<p>The binary representation of the <code>NUMBER</code> value.</p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS71375" class="refsect2"><a id="i1004636"></a>
<hr />
<h3 class="refsect2"><a id="sthref17640"></a>CAST_TO_BINARY_DOUBLE Function</h3>
<p>This function casts the RAW binary representation of a <code>BINARY_DOUBLE</code> into a <code>BINARY_DOUBLE</code>.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17641"></a>Syntax</p>
<pre>
UTL_RAW.CAST_TO_BINARY_DOUBLE (
   r          IN RAW
   endianess  IN PLS_INTEGER DEFAULT 1) 
RETURN BINARY_DOUBLE;
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17642"></a>Pragmas</p>
<pre>
pragma restrict_references(cast_to_binary_double, WNDS, RNDS, WNPS, RNPS);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17643"></a>Parameters</p>
<div id="ARPLS71376" class="tblformal">
<p class="titleintable"><a id="sthref17644"></a><a id="sthref17645"></a>Table 233-14 CAST_TO_BINARY_DOUBLE Function Parameters</p>
<table class="cellalignment1229" title="CAST_TO_BINARY_DOUBLE Function Parameters" summary="This table describes the Parameters of the UTL_RAW.CAST_TO_BINARY_DOUBLE subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t18">Parameter</th>
<th class="cellalignment1227" id="r1c2-t18">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t18" headers="r1c1-t18">
<p><code>r</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t18 r1c2-t18">
<p>Binary representation of a <code>BINARY_DOUBLE</code></p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t18" headers="r1c1-t18">
<p><code>endianess</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t18 r1c2-t18">
<p>A <code>PLS_INTEGER</code> representing big-endian or little-endian architecture. The default is big-endian.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17646"></a>Return Values</p>
<p>The <code>BINARY_DOUBLE</code> value.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17647"></a>Usage Notes</p>
<ul>
<li>
<p>If the <code>RAW</code> argument is more than 8 bytes, only the first 8 bytes are used and the rest of the bytes are ignored. If the result is <code>-0</code>, <code>+0</code> is returned. If the result is <code>NaN</code>, the value <code>BINARY_DOUBLE_NAN</code> is returned.</p>
</li>
<li>
<p>If the <code>RAW</code> argument is less than 8 bytes, a <code>VALUE_ERROR</code> exception is raised.</p>
</li>
<li>
<p>An 8-byte binary_double value maps to the IEEE 754 double-precision format as follows:</p>
<pre>
byte 0: bit 63 ~ bit 56
byte 1: bit 55 ~ bit 48
byte 2: bit 47 ~ bit 40
byte 3: bit 39 ~ bit 32
byte 4: bit 31 ~ bit 24
byte 5: bit 23 ~ bit 16
byte 6: bit 15 ~ bit  8
byte 7: bit  7 ~ bit  0
</pre></li>
<li>
<p>The parameter endianess describes how the bytes of <code>BINARY_DOUBLE</code> are mapped to the bytes of <code>RAW</code>. In the following matrix, rb0 ~ rb7 refer to the bytes in raw and db0 ~ db7 refer to the bytes in <code>BINARY_DOUBLE.</code></p>
<div class="inftblinformalwide">
<table class="cellalignment1226" title="Parameter Endianess" summary="This table describes how the parameter Endianess describes how the bytes of BINARY_DOUBLE are mapped to the bytes of RAW." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t19"><br /></th>
<th class="cellalignment1227" id="r1c2-t19">rb0</th>
<th class="cellalignment1227" id="r1c3-t19">rb1</th>
<th class="cellalignment1227" id="r1c4-t19">rb2</th>
<th class="cellalignment1227" id="r1c5-t19">rb3</th>
<th class="cellalignment1227" id="r1c6-t19">rb4</th>
<th class="cellalignment1227" id="r1c7-t19">rb5</th>
<th class="cellalignment1227" id="r1c8-t19">rb6</th>
<th class="cellalignment1227" id="r1c9-t19">rb7</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t19" headers="r1c1-t19"><span class="bold">big_endian</span></td>
<td class="cellalignment1228" headers="r2c1-t19 r1c2-t19"><code>db0</code></td>
<td class="cellalignment1228" headers="r2c1-t19 r1c3-t19"><code>db1</code></td>
<td class="cellalignment1228" headers="r2c1-t19 r1c4-t19"><code>db2</code></td>
<td class="cellalignment1228" headers="r2c1-t19 r1c5-t19"><code>db3</code></td>
<td class="cellalignment1228" headers="r2c1-t19 r1c6-t19"><code>db4</code></td>
<td class="cellalignment1228" headers="r2c1-t19 r1c7-t19"><code>db5</code></td>
<td class="cellalignment1228" headers="r2c1-t19 r1c8-t19"><code>db6</code></td>
<td class="cellalignment1228" headers="r2c1-t19 r1c9-t19"><code>db7</code></td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t19" headers="r1c1-t19"><span class="bold">little_endian</span></td>
<td class="cellalignment1228" headers="r3c1-t19 r1c2-t19"><code>db7</code></td>
<td class="cellalignment1228" headers="r3c1-t19 r1c3-t19"><code>db6</code></td>
<td class="cellalignment1228" headers="r3c1-t19 r1c4-t19"><code>db5</code></td>
<td class="cellalignment1228" headers="r3c1-t19 r1c5-t19"><code>db4</code></td>
<td class="cellalignment1228" headers="r3c1-t19 r1c6-t19"><code>db3</code></td>
<td class="cellalignment1228" headers="r3c1-t19 r1c7-t19"><code>db2</code></td>
<td class="cellalignment1228" headers="r3c1-t19 r1c8-t19"><code>db1</code></td>
<td class="cellalignment1228" headers="r3c1-t19 r1c9-t19"><code>db0</code></td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformalwide" --></li>
<li>
<p>In case of machine-endian, the 8 bytes of the <code>RAW</code> argument are copied straight across into the <code>BINARY_DOUBLE</code> return value. The effect is the same if the user has passed <code>big_endian</code> on a big-endian machine, or <code>little_endian</code> on a little-endian machine.</p>
</li>
</ul>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS71377" class="refsect2"><a id="i1004637"></a>
<hr />
<h3 class="refsect2"><a id="sthref17648"></a>CAST_TO_BINARY_FLOAT Function</h3>
<p>This function casts the RAW binary representation of a <code>BINARY_FLOAT</code> into a <code>BINARY_FLOAT</code>.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17649"></a>Syntax</p>
<pre>
UTL_RAW.CAST_TO_BINARY_FLOAT (
   r          IN RAW
   endianess  IN PLS_INTEGER DEFAULT 1) 
RETURN BINARY_FLOAT;
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17650"></a>Pragmas</p>
<pre>
pragma restrict_references(cast_to_binary_float, WNDS, RNDS, WNPS, RNPS);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17651"></a>Parameters</p>
<div id="ARPLS71378" class="tblformal">
<p class="titleintable"><a id="sthref17652"></a><a id="sthref17653"></a>Table 233-15 CAST_TO_BINARY_FLOAT Function Parameters</p>
<table class="cellalignment1229" title="CAST_TO_BINARY_FLOAT Function Parameters" summary="This table describes the Parameters of the UTL_RAW.CAST_TO_BINARY_FLOAT subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t20">Parameter</th>
<th class="cellalignment1227" id="r1c2-t20">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t20" headers="r1c1-t20">
<p><code>r</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t20 r1c2-t20">
<p>Binary representation of a <code>BINARY_FLOAT</code></p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t20" headers="r1c1-t20">
<p><code>endianess</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t20 r1c2-t20">
<p>A <code>PLS_INTEGER</code> representing big-endian or little-endian architecture. The default is big-endian.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17654"></a>Return Values</p>
<p>The <code>BINARY_FLOAT</code> value.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17655"></a>Usage Notes</p>
<ul>
<li>
<p>If the <code>RAW</code> argument is more than 4 bytes, only the first 4 bytes are used and the rest of the bytes are ignored. If the result is -0, +0 is returned. If the result is NaN, the value <code>BINARY_FLOAT_NAN</code> is returned.</p>
</li>
<li>
<p>If the <code>RAW</code> argument is less than 4 bytes, a <code>VALUE_ERROR</code> exception is raised.</p>
</li>
<li>
<p>A 4-byte <code>binary_float</code> value maps to the IEEE 754 single-precision format as follows:</p>
<pre>
byte 0: bit 31 ~ bit 24
byte 1: bit 23 ~ bit 16
byte 2: bit 15 ~ bit  8
byte 3: bit 7 ~  bit  0
</pre></li>
<li>
<p>The parameter endianess describes how the bytes of <code>BINARY_FLOAT</code> are mapped to the bytes of <code>RAW</code>. In the following matrix, rb0 ~ rb3 refer to the bytes in <code>RAW</code> and fb0 ~ fb3 refer to the bytes in <code>BINARY_FLOAT</code>.</p>
<div class="inftblinformal">
<table class="cellalignment1226" title="Parameter Endianess" summary="This table describes how the parameter Endianess describes how the bytes of BINARY_FLOAT are mapped to the bytes of RAW." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t21"><br /></th>
<th class="cellalignment1227" id="r1c2-t21">rb0</th>
<th class="cellalignment1227" id="r1c3-t21">rb1</th>
<th class="cellalignment1227" id="r1c4-t21">rb2</th>
<th class="cellalignment1227" id="r1c5-t21">rb3</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t21" headers="r1c1-t21"><span class="bold">big_endian</span></td>
<td class="cellalignment1228" headers="r2c1-t21 r1c2-t21"><code>fbo</code></td>
<td class="cellalignment1228" headers="r2c1-t21 r1c3-t21"><code>fb1</code></td>
<td class="cellalignment1228" headers="r2c1-t21 r1c4-t21"><code>fb2</code></td>
<td class="cellalignment1228" headers="r2c1-t21 r1c5-t21"><code>fb3</code></td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t21" headers="r1c1-t21"><span class="bold">little_endian</span></td>
<td class="cellalignment1228" headers="r3c1-t21 r1c2-t21"><code>fb3</code></td>
<td class="cellalignment1228" headers="r3c1-t21 r1c3-t21"><code>fb2</code></td>
<td class="cellalignment1228" headers="r3c1-t21 r1c4-t21"><code>fb1</code></td>
<td class="cellalignment1228" headers="r3c1-t21 r1c5-t21"><code>fb0</code></td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" --></li>
<li>
<p>In case of machine-endian, the 4 bytes of the <code>RAW</code> argument are copied straight across into the <code>BINARY_FLOAT</code> return value. The effect is the same if the user has passed <code>big_endian</code> on a big-endian machine, or <code>little_endian</code> on a little-endian machine.</p>
</li>
</ul>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS71379" class="refsect2"><a id="BABGHJBD"></a>
<hr />
<h3 class="refsect2"><a id="sthref17656"></a>CAST_TO_BINARY_INTEGER Function</h3>
<p>This function casts the RAW binary representation of a <code>BINARY_INTEGER</code> into a <code>BINARY_INTEGER</code>.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17657"></a>Syntax</p>
<pre>
UTL_RAW.CAST_TO_BINARY_INTEGER (
   r          IN RAW
   endianess  IN PLS_INTEGER DEFAULT BIG_ENDIAN) 
RETURN BINARY_INTEGER;
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17658"></a>Pragmas</p>
<pre>
pragma restrict_references(cast_to_binary_integer, WNDS, RNDS, WNPS, RNPS);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17659"></a>Parameters</p>
<div id="ARPLS71380" class="tblformal">
<p class="titleintable"><a id="sthref17660"></a><a id="sthref17661"></a>Table 233-16 CAST_TO_BINARY_INTEGER Function Parameters</p>
<table class="cellalignment1229" title="CAST_TO_BINARY_INTEGER Function Parameters" summary="This table describes the Parameters of the UTL_RAW.CAST_TO_BINARY_INTEGER subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t22">Parameter</th>
<th class="cellalignment1227" id="r1c2-t22">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t22" headers="r1c1-t22">
<p><code>r</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t22 r1c2-t22">
<p>Binary representation of a <code>BINARY_INTEGER</code></p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t22" headers="r1c1-t22">
<p><code>endianess</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t22 r1c2-t22">
<p>A <code>PLS_INTEGER</code> representing big-endian or little-endian architecture. The default is big-endian.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17662"></a>Return Values</p>
<p>The <code>BINARY_INTEGER</code> value</p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS71381" class="refsect2"><a id="BABJJAFB"></a>
<hr />
<h3 class="refsect2"><a id="sthref17663"></a>CAST_TO_NUMBER Function</h3>
<p>This function casts the RAW binary representation of a <code>NUMBER</code> into a <code>NUMBER</code>.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17664"></a>Syntax</p>
<pre>
UTL_RAW.CAST_TO_NUMBER (
   r  IN RAW) 
 RETURN NUMBER;
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17665"></a>Pragmas</p>
<pre>
pragma restrict_references(cast_to_number, WNDS, RNDS, WNPS, RNPS);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17666"></a>Parameters</p>
<div id="ARPLS71382" class="tblformal">
<p class="titleintable"><a id="sthref17667"></a><a id="sthref17668"></a>Table 233-17 CAST_TO_NUMBER function Parameters</p>
<table class="cellalignment1229" title="CAST_TO_NUMBER function Parameters" summary="This table describes the Parameters of the UTL_RAW.CAST_TO_NUMBER subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t23">Parameter</th>
<th class="cellalignment1227" id="r1c2-t23">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t23" headers="r1c1-t23">
<p><code>r</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t23 r1c2-t23">
<p>Binary representation of a <code>NUMBER</code></p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17669"></a>Return Values</p>
<p>The <code>NUMBER</code> value.</p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS71389" class="refsect2"><a id="i1007280"></a>
<hr />
<h3 class="refsect2"><a id="sthref17670"></a>CAST_TO_NVARCHAR2 Function</h3>
<p>This function converts a <code>RAW</code> value represented using some number of data bytes into an <code>NVARCHAR2</code> value with that number of data bytes.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
When casting to a <code>NVARCHAR2</code>, the current Globalization Support character set is used for the characters within that <code>NVARCHAR2</code> value.</div>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17671"></a>Syntax</p>
<pre>
UTL_RAW.CAST_TO_NVARCHAR2 (
   r IN RAW) 
RETURN NVARCHAR2;
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17672"></a>Pragmas</p>
<pre>
pragma restrict_references(cast_to_NVARCHAR2, WNDS, RNDS, WNPS, RNPS); 
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17673"></a>Parameters</p>
<div id="ARPLS71390" class="tblformal">
<p class="titleintable"><a id="sthref17674"></a><a id="sthref17675"></a>Table 233-18 CAST_TO_NVARCHAR2 Function Parameters</p>
<table class="cellalignment1229" title="CAST_TO_NVARCHAR2 Function Parameters " summary="This table describes the Parameters of the UTL_RAW.CAST_TO_NVARCHAR2 subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t25">Parameter</th>
<th class="cellalignment1227" id="r1c2-t25">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t25" headers="r1c1-t25">
<p><code>r</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t25 r1c2-t25">
<p><code>RAW</code> (without leading length field) to be changed to a <code>NVARCHAR2</code>)</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17676"></a>Return Values</p>
<div id="ARPLS71391" class="tblformal">
<p class="titleintable"><a id="sthref17677"></a><a id="sthref17678"></a>Table 233-19 CAST_TO_NVARCHAR2 Function Return Values</p>
<table class="cellalignment1229" title="CAST_TO_NVARCHAR2 Function Return Values " summary="This table describes Values Returned by the CAST_TO_NVARCHAR2 subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t26">Return</th>
<th class="cellalignment1227" id="r1c2-t26">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t26" headers="r1c1-t26">
<p><code>NVARCHAR2</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t26 r1c2-t26">
<p>Containing having the same data as the input <code>RAW</code></p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t26" headers="r1c1-t26">
<p><code>NULL</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t26 r1c2-t26">
<p>If <code>r</code> input parameter was <code>NULL</code></p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS71383" class="refsect2"><a id="i997085"></a>
<hr />
<h3 class="refsect2"><a id="sthref17679"></a>CAST_TO_RAW Function</h3>
<p>This function converts a <code>VARCHAR2</code> value represented using some number of data bytes into a <code>RAW</code> value with that number of data bytes. The data itself is not modified in any way, but its data type is recast to a <code>RAW</code> data type.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17680"></a>Syntax</p>
<pre>
UTL_RAW.CAST_TO_RAW (
   c  IN VARCHAR2) 
RETURN RAW;
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17681"></a>Pragmas</p>
<pre>
pragma restrict_references(cast_to_raw, WNDS, RNDS, WNPS, RNPS); 
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17682"></a>Parameters</p>
<div id="ARPLS71384" class="tblformal">
<p class="titleintable"><a id="sthref17683"></a><a id="sthref17684"></a>Table 233-20 CAST_TO_RAW Function Parameters</p>
<table class="cellalignment1229" title="CAST_TO_RAW Function Parameters " summary="This table describes the Parameters of the UTL_RAW.CAST_TO_RAW subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t27">Parameter</th>
<th class="cellalignment1227" id="r1c2-t27">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t27" headers="r1c1-t27">
<p><code>c</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t27 r1c2-t27">
<p><code>VARCHAR2</code> to be changed to a <code>RAW</code></p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17685"></a>Return Values</p>
<div id="ARPLS71385" class="tblformal">
<p class="titleintable"><a id="sthref17686"></a><a id="sthref17687"></a>Table 233-21 CAST_TO_RAW Function Return Values</p>
<table class="cellalignment1229" title="CAST_TO_RAW Function Return Values " summary="This table describes Values Returned by the CAST_TO_RAW subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t28">Return</th>
<th class="cellalignment1227" id="r1c2-t28">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t28" headers="r1c1-t28">
<p><code>RAW</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t28 r1c2-t28">
<p>Containing the same data as the input <code>VARCHAR2</code> and equal byte length as the input <code>VARCHAR2</code> and without a leading length field</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t28" headers="r1c1-t28">
<p><code>NULL</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t28 r1c2-t28">
<p>If <code>c</code> input parameter was <code>NULL</code></p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS71386" class="refsect2"><a id="BABJFGBH"></a>
<hr />
<h3 class="refsect2"><a id="sthref17688"></a>CAST_TO_VARCHAR2 Function</h3>
<p>This function converts a <code>RAW</code> value represented using some number of data bytes into a <code>VARCHAR2</code> value with that number of data bytes.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
When casting to a <code>VARCHAR2</code>, the current Globalization Support character set is used for the characters within that <code>VARCHAR2</code>.</div>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17689"></a>Syntax</p>
<pre>
UTL_RAW.CAST_TO_VARCHAR2 (
   r IN RAW) 
RETURN VARCHAR2;
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17690"></a>Pragmas</p>
<pre>
pragma restrict_references(cast_to_VARCHAR2, WNDS, RNDS, WNPS, RNPS); 
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17691"></a>Parameters</p>
<div id="ARPLS71387" class="tblformal">
<p class="titleintable"><a id="sthref17692"></a><a id="sthref17693"></a>Table 233-22 CAST_TO_VARCHAR2 Function Parameters</p>
<table class="cellalignment1229" title="CAST_TO_VARCHAR2 Function Parameters " summary="This table describes the Parameters of the UTL_RAW.CAST_TO_VARCHAR2 subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t30">Parameter</th>
<th class="cellalignment1227" id="r1c2-t30">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t30" headers="r1c1-t30">
<p><code>r</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t30 r1c2-t30">
<p><code>RAW</code> (without leading length field) to be changed to a <code>VARCHAR2</code></p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17694"></a>Return Values</p>
<div id="ARPLS71388" class="tblformal">
<p class="titleintable"><a id="sthref17695"></a><a id="sthref17696"></a>Table 233-23 CAST_TO_VARCHAR2 Function Return Values</p>
<table class="cellalignment1229" title="CAST_TO_VARCHAR2 Function Return Values " summary="This table describes Values Returned by the CAST_TO_VARCHAR2 subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t31">Return</th>
<th class="cellalignment1227" id="r1c2-t31">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t31" headers="r1c1-t31">
<p><code>VARCHAR2</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t31 r1c2-t31">
<p>Containing having the same data as the input <code>RAW</code></p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t31" headers="r1c1-t31">
<p><code>NULL</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t31 r1c2-t31">
<p>If <code>r</code> input parameter was <code>NULL</code></p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS71392" class="refsect2"><a id="BABCIBGE"></a>
<hr />
<h3 class="refsect2"><a id="sthref17697"></a>COMPARE Function</h3>
<p>This function compares two <code>RAW</code> values. If they differ in length, then the shorter is extended on the right according to the optional <code>pad</code> parameter.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17698"></a>Syntax</p>
<pre>
UTL_RAW.COMPARE (
   r1  IN RAW,
   r2  IN RAW,
   pad IN RAW DEFAULT NULL) 
  RETURN NUMBER;
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17699"></a>Pragmas</p>
<pre>
pragma restrict_references(compare, WNDS, RNDS, WNPS, RNPS); 
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17700"></a>Parameters</p>
<div id="ARPLS71393" class="tblformal">
<p class="titleintable"><a id="sthref17701"></a><a id="sthref17702"></a>Table 233-24 COMPARE Function Parameters</p>
<table class="cellalignment1229" title="COMPARE Function Parameters " summary="This table describes the Parameters of the UTL_RAW.COMPARE subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t32">Parameter</th>
<th class="cellalignment1227" id="r1c2-t32">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t32" headers="r1c1-t32">
<p><code>r1</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t32 r1c2-t32">
<p>1st <code>RAW</code> to be compared, may be <code>NULL</code> or 0 length</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t32" headers="r1c1-t32">
<p><code>r2</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t32 r1c2-t32">
<p>2nd <code>RAW</code> to be compared, may be <code>NULL</code> or 0 length</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r4c1-t32" headers="r1c1-t32">
<p><code>pad</code></p>
</td>
<td class="cellalignment1228" headers="r4c1-t32 r1c2-t32">
<p>This is an optional parameter. Byte to extend whichever of <code>r1</code> or <code>r2</code> is shorter. The default: x'00'</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17703"></a>Return Values</p>
<div id="ARPLS71394" class="tblformal">
<p class="titleintable"><a id="sthref17704"></a><a id="sthref17705"></a>Table 233-25 COMPARE Function Return Values</p>
<table class="cellalignment1229" title="COMPARE Function Return Values " summary="This table describes Values Returned by the COMPARE subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t33">Return</th>
<th class="cellalignment1227" id="r1c2-t33">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t33" headers="r1c1-t33">
<p><code>NUMBER</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t33 r1c2-t33">
<p>Equals 0 if <code>RAW</code> byte strings are both <code>NULL</code> or identical; or,</p>
<p>Equals position (numbered from 1) of the first mismatched byte</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS71395" class="refsect2"><a id="i997176"></a>
<hr />
<h3 class="refsect2"><a id="sthref17706"></a>CONCAT Function</h3>
<p>This function concatenates up to 12 <code>RAWs</code> into a single <code>RAW</code>. If the concatenated size exceeds 32K, then an error is returned</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17707"></a>Syntax</p>
<pre>
UTL_RAW.CONCAT (  
   r1  IN RAW DEFAULT NULL,
   r2  IN RAW DEFAULT NULL,
   r3  IN RAW DEFAULT NULL,
   r4  IN RAW DEFAULT NULL,
   r5  IN RAW DEFAULT NULL,
   r6  IN RAW DEFAULT NULL,
   r7  IN RAW DEFAULT NULL,
   r8  IN RAW DEFAULT NULL,
   r9  IN RAW DEFAULT NULL,
   r10 IN RAW DEFAULT NULL,
   r11 IN RAW DEFAULT NULL,
   r12 IN RAW DEFAULT NULL) 
  RETURN RAW;
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17708"></a>Pragmas</p>
<pre>
pragma restrict_references(concat, WNDS, RNDS, WNPS, RNPS); 
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17709"></a>Parameters</p>
<p><code>r1</code>....<code>r12</code> are the <code>RAW</code> items to concatenate.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17710"></a>Return Values</p>
<div id="ARPLS71396" class="tblformal">
<p class="titleintable"><a id="sthref17711"></a><a id="sthref17712"></a>Table 233-26 CONCAT Function Return Values</p>
<table class="cellalignment1229" title="CONCAT Function Return Values " summary="This table describes the Parameters of the UTL_RAW.CONCAT subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t34">Return</th>
<th class="cellalignment1227" id="r1c2-t34">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t34" headers="r1c1-t34">
<p><code>RAW</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t34 r1c2-t34">
<p>Containing the items concatenated</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17713"></a>Exceptions</p>
<p>There is an error if the sum of the lengths of the inputs exceeds the maximum allowable length for a <code>RAW</code>, which is 32767 bytes.</p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS71397" class="refsect2"><a id="i1003765"></a>
<hr />
<h3 class="refsect2"><a id="sthref17714"></a>CONVERT Function</h3>
<p>This function converts <code>RAW</code> <code>r</code> from character set <code>from_charset</code> to character set <code>to_charset</code> and returns the resulting <code>RAW</code>.</p>
<p>Both <code>from_charset</code> and <code>to_charset</code> must be supported character sets defined to the Oracle server.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17715"></a>Syntax</p>
<pre>
UTL_RAW.CONVERT (
   r            IN RAW,
   to_charset   IN VARCHAR2,
   from_charset IN VARCHAR2) 
  RETURN RAW;
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17716"></a>Pragmas</p>
<pre>
pragma restrict_references(convert, WNDS, RNDS, WNPS, RNPS);  
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17717"></a>Parameters</p>
<div id="ARPLS71398" class="tblformal">
<p class="titleintable"><a id="sthref17718"></a><a id="sthref17719"></a>Table 233-27 CONVERT Function Parameters</p>
<table class="cellalignment1229" title="CONVERT Function Parameters " summary="This table describes the Parameters of the UTL_RAW.CONVERT subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t35">Parameter</th>
<th class="cellalignment1227" id="r1c2-t35">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t35" headers="r1c1-t35">
<p><code>r</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t35 r1c2-t35">
<p><code>RAW</code> byte-string to be converted</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t35" headers="r1c1-t35">
<p><code>to_charset</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t35 r1c2-t35">
<p>Name of Globalization Support character set to which <code>r</code> is converted</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r4c1-t35" headers="r1c1-t35">
<p><code>from_charset</code></p>
</td>
<td class="cellalignment1228" headers="r4c1-t35 r1c2-t35">
<p>Name of Globalization Support character set in which <code>r</code> is supplied</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17720"></a>Return Values</p>
<div id="ARPLS71399" class="tblformal">
<p class="titleintable"><a id="sthref17721"></a><a id="sthref17722"></a>Table 233-28 CONVERT Function Return Values</p>
<table class="cellalignment1229" title="CONVERT Function Return Values " summary="This table describes Values Returned by the CONVERT subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t36">Return</th>
<th class="cellalignment1227" id="r1c2-t36">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t36" headers="r1c1-t36">
<p><code>RAW</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t36 r1c2-t36">
<p>Byte string <code>r</code> converted according to the specified character sets.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17723"></a>Exceptions</p>
<div id="ARPLS71400" class="tblformal">
<p class="titleintable"><a id="sthref17724"></a><a id="sthref17725"></a>Table 233-29 CONVERT Function Optional Parameter</p>
<table class="cellalignment1229" title="CONVERT Function Optional Parameter " summary="This table describes Exceptions raised by the CONVERT subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t37">Error</th>
<th class="cellalignment1227" id="r1c2-t37">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t37" headers="r1c1-t37">
<p><code>VALUE_ERROR</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t37 r1c2-t37">
<p>Either:</p>
<p>- <code>r</code> missing, <code>NULL</code>, or 0 length</p>
<p>- <code>from_charset</code> or <code>to_charset</code> missing, <code>NULL</code>, or 0 length</p>
<p>- <code>from_charset</code> or <code>to_charset</code> names invalid or unsupported</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS71401" class="refsect2"><a id="BABCGGCD"></a>
<hr />
<h3 class="refsect2"><a id="sthref17726"></a>COPIES Function</h3>
<p>This function returns <code>n</code> copies of <code>r</code> concatenated together.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17727"></a>Syntax</p>
<pre>
UTL_RAW.COPIES (
   r IN RAW,
   n IN NUMBER) 
  RETURN RAW;
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17728"></a>Pragmas</p>
<pre>
pragma restrict_references(copies, WNDS, RNDS, WNPS, RNPS); 
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17729"></a>Parameters</p>
<div id="ARPLS71402" class="tblformal">
<p class="titleintable"><a id="sthref17730"></a><a id="sthref17731"></a>Table 233-30 COPIES Function Parameters</p>
<table class="cellalignment1229" title="COPIES Function Parameters " summary="This table describes the Parameters of the UTL_RAW.COPIES subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t38">Parameters</th>
<th class="cellalignment1227" id="r1c2-t38">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t38" headers="r1c1-t38">
<p><code>r</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t38 r1c2-t38">
<p><code>RAW</code> to be copied</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t38" headers="r1c1-t38">
<p><code>n</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t38 r1c2-t38">
<p>Number of times to copy the <code>RAW</code> (must be positive)</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17732"></a>Return Values</p>
<p>This returns the <code>RAW</code> copied <code>n</code> times.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17733"></a>Exceptions</p>
<div id="ARPLS71403" class="tblformal">
<p class="titleintable"><a id="sthref17734"></a><a id="sthref17735"></a>Table 233-31 COPIES Function Exceptions</p>
<table class="cellalignment1229" title="COPIES Function Exceptions " summary="This table describes Exceptions raised by the COPIES subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t39">Error</th>
<th class="cellalignment1227" id="r1c2-t39">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t39" headers="r1c1-t39">
<p><code>VALUE_ERROR</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t39 r1c2-t39">
<p>Either:</p>
<p>- <code>r</code> is missing, <code>NULL</code> or 0 length</p>
<p>- <code>n</code> &lt; 1</p>
<p>- Length of result exceeds maximum length of a <code>RAW</code></p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS71404" class="refsect2"><a id="BABCFHDJ"></a>
<hr />
<h3 class="refsect2"><a id="sthref17736"></a>LENGTH Function</h3>
<p>This function returns the length in bytes of a <code>RAW</code> <code>r</code>.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17737"></a>Syntax</p>
<pre>
UTL_RAW.LENGTH (
   r  IN RAW) 
RETURN NUMBER;
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17738"></a>Pragmas</p>
<pre>
pragma restrict_references(length, WNDS, RNDS, WNPS, RNPS); 
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17739"></a>Parameters</p>
<div id="ARPLS71405" class="tblformal">
<p class="titleintable"><a id="sthref17740"></a><a id="sthref17741"></a>Table 233-32 LENGTH Function Parameters</p>
<table class="cellalignment1229" title="LENGTH Function Parameters " summary="This table describes the Parameters of the UTL_RAW.LENGTH subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t40">Parameter</th>
<th class="cellalignment1227" id="r1c2-t40">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t40" headers="r1c1-t40">
<p><code>r</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t40 r1c2-t40">
<p><code>RAW</code> byte stream to be measured</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17742"></a>Return Values</p>
<div id="ARPLS71406" class="tblformal">
<p class="titleintable"><a id="sthref17743"></a><a id="sthref17744"></a>Table 233-33 LENGTH Function Return Values</p>
<table class="cellalignment1229" title="LENGTH Function Return Values " summary="This table describes Values Returned by the LENGTH subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t41">Return</th>
<th class="cellalignment1227" id="r1c2-t41">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t41" headers="r1c1-t41">
<p><code>NUMBER</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t41 r1c2-t41">
<p>Current length of the <code>RAW</code></p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS71407" class="refsect2"><a id="i1003455"></a>
<hr />
<h3 class="refsect2"><a id="sthref17745"></a>OVERLAY Function</h3>
<p>This function overlays the specified portion of target <code>RAW</code> with <code>overlay_str</code> <code>RAW</code>, starting from byte position <code>pos</code> of <code>target</code> and proceeding for <code>len</code> bytes.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17746"></a>Syntax</p>
<pre>
UTL_RAW.OVERLAY (
   overlay_str IN RAW,
   target      IN RAW,
   pos         IN BINARY_INTEGER DEFAULT 1,
   len         IN BINARY_INTEGER DEFAULT NULL,
   pad         IN RAW            DEFAULT NULL) 
  RETURN RAW;
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17747"></a>Pragmas</p>
<pre>
pragma restrict_references(overlay, WNDS, RNDS, WNPS, RNPS); 
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17748"></a>Parameters</p>
<div id="ARPLS71408" class="tblformal">
<p class="titleintable"><a id="sthref17749"></a><a id="sthref17750"></a>Table 233-34 OVERLAY Function Parameters</p>
<table class="cellalignment1229" title="OVERLAY Function Parameters " summary="This table describes the Parameters of the UTL_RAW.OVERLAY subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t42">Parameters</th>
<th class="cellalignment1227" id="r1c2-t42">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t42" headers="r1c1-t42">
<p><code>overlay_str</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t42 r1c2-t42">
<p>Byte-string used to overlay target</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t42" headers="r1c1-t42">
<p><code>target</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t42 r1c2-t42">
<p>Byte-string which is to be overlaid</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r4c1-t42" headers="r1c1-t42">
<p><code>pos</code></p>
</td>
<td class="cellalignment1228" headers="r4c1-t42 r1c2-t42">
<p>Position in target (numbered from 1) to start overlay</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r5c1-t42" headers="r1c1-t42">
<p><code>len</code></p>
</td>
<td class="cellalignment1228" headers="r5c1-t42 r1c2-t42">
<p>The number of target bytes to overlay</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r6c1-t42" headers="r1c1-t42">
<p><code>pad</code></p>
</td>
<td class="cellalignment1228" headers="r6c1-t42 r1c2-t42">
<p>Pad byte used when overlay <code>len</code> exceeds <code>overlay_str</code> length or <code>pos</code> exceeds <code>target</code> length</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17751"></a>Defaults and Optional Parameters</p>
<div id="ARPLS71409" class="tblformal">
<p class="titleintable"><a id="sthref17752"></a><a id="sthref17753"></a>Table 233-35 OVERLAY Function Optional Parameters</p>
<table class="cellalignment1229" title="OVERLAY Function Optional Parameters " summary="This table describes Defaults and Optional Parameters used by the OVERLAY subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t43">Optional Parameter</th>
<th class="cellalignment1227" id="r1c2-t43">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t43" headers="r1c1-t43">
<p><code>pos</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t43 r1c2-t43">
<p>1</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t43" headers="r1c1-t43">
<p><code>len</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t43 r1c2-t43">
<p>To the length of <code>overlay_str</code></p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r4c1-t43" headers="r1c1-t43">
<p><code>pad</code></p>
</td>
<td class="cellalignment1228" headers="r4c1-t43 r1c2-t43">
<p>x'00'</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17754"></a>Return Values</p>
<div id="ARPLS71410" class="tblformal">
<p class="titleintable"><a id="sthref17755"></a><a id="sthref17756"></a>Table 233-36 OVERLAY Function Return Values</p>
<table class="cellalignment1229" title="OVERLAY Function Return Values " summary="This table describes Values Returned by the OVERLAY subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t44">Return</th>
<th class="cellalignment1227" id="r1c2-t44">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t44" headers="r1c1-t44">
<p><code>RAW</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t44 r1c2-t44">
<p>The target <code>byte_string</code> overlaid as specified.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17757"></a>Usage Notes</p>
<p>If <code>overlay_str</code> has less than <code>len</code> bytes, then it is extended to <code>len</code> bytes using the <code>pad</code> byte. If <code>overlay_str</code> exceeds <code>len</code> bytes, then the extra bytes in <code>overlay_str</code> are ignored. If <code>len</code> bytes beginning at position <code>pos</code> of <code>target</code> exceeds the length of <code>target</code>, then <code>target</code> is extended to contain the entire length of <code>overlay_str</code>.</p>
<p><code>If</code> <code>len</code> is specified, it must be greater than or equal to <code>0</code>. If <code>pos</code> is specified, it must be greater than or equal to <code>1</code>. If <code>pos</code> exceeds the length of <code>target</code>, then <code>target</code> is padded with <code>pad</code> bytes to position <code>pos</code>, and <code>target</code> is further extended with <code>overlay_str</code> bytes.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17758"></a>Exceptions</p>
<div id="ARPLS71411" class="tblformal">
<p class="titleintable"><a id="sthref17759"></a><a id="sthref17760"></a>Table 233-37 OVERLAY Function Exceptions</p>
<table class="cellalignment1229" title="OVERLAY Function Exceptions " summary="This table describes Exceptions raised by the OVERLAY subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t45">Error</th>
<th class="cellalignment1227" id="r1c2-t45">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t45" headers="r1c1-t45">
<p><code>VALUE_ERROR</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t45 r1c2-t45">
<p>Either:</p>
<p>- <code>Overlay_str</code> is <code>NULL</code> or has 0 length</p>
<p>- Target is missing or undefined</p>
<p>- Length of target exceeds maximum length of a <code>RAW</code></p>
<p>- <code>len</code> &lt; 0</p>
<p>- <code>pos</code> &lt; 1</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS71412" class="refsect2"><a id="i1003598"></a>
<hr />
<h3 class="refsect2"><a id="sthref17761"></a>REVERSE Function</h3>
<p>This function reverses a byte sequence in <code>RAW</code> <code>r</code> from end to end. For example, x'0102F3' would be reversed to x'F30201', and 'xyz' would be reversed to 'zyx'.The result length is the same as the input <code>RAW</code> length.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17762"></a>Syntax</p>
<pre>
UTL_RAW.REVERSE (
   r IN RAW) 
  RETURN RAW;
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17763"></a>Pragmas</p>
<pre>
pragma restrict_references(reverse, WNDS, RNDS, WNPS, RNPS); 
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17764"></a>Parameters</p>
<div id="ARPLS71413" class="tblformal">
<p class="titleintable"><a id="sthref17765"></a><a id="sthref17766"></a>Table 233-38 REVERSE Function Parameters</p>
<table class="cellalignment1229" title="REVERSE Function Parameters " summary="This table describes the Parameters of the UTL_RAW.REVERSE subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t46">Parameter</th>
<th class="cellalignment1227" id="r1c2-t46">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t46" headers="r1c1-t46">
<p><code>r</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t46 r1c2-t46">
<p><code>RAW</code> to reverse</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17767"></a>Return Values</p>
<div id="ARPLS71414" class="tblformal">
<p class="titleintable"><a id="sthref17768"></a><a id="sthref17769"></a>Table 233-39 REVERSE Function Return Values</p>
<table class="cellalignment1229" title="REVERSE Function Return Values " summary="This table describes Values Returned by the REVERSE subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t47">Return</th>
<th class="cellalignment1227" id="r1c2-t47">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t47" headers="r1c1-t47">
<p><code>RAW</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t47 r1c2-t47">
<p>Containing the "reverse" of <code>r</code></p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17770"></a>Exceptions</p>
<div id="ARPLS71415" class="tblformal">
<p class="titleintable"><a id="sthref17771"></a><a id="sthref17772"></a>Table 233-40 REVERSE Function Exceptions</p>
<table class="cellalignment1229" title="REVERSE Function Exceptions " summary="This table describes Exceptions raised by the REVERSE subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t48">Error</th>
<th class="cellalignment1227" id="r1c2-t48">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t48" headers="r1c1-t48">
<p><code>VALUE_ERROR</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t48 r1c2-t48">
<p><code>R</code> is <code>NULL</code> or has 0 length</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS71416" class="refsect2"><a id="BABIFIJB"></a>
<hr />
<h3 class="refsect2"><a id="sthref17773"></a>SUBSTR Function</h3>
<p>This function returns <code>len</code> bytes, starting at <code>pos</code> from <code>RAW</code> <code>r</code>.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17774"></a>Syntax</p>
<pre>
UTL_RAW.SUBSTR (
   r   IN RAW,
   pos IN BINARY_INTEGER,
   len IN BINARY_INTEGER DEFAULT NULL) 
  RETURN RAW;
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17775"></a>Pragmas</p>
<pre>
pragma restrict_references(substr, WNDS, RNDS, WNPS, RNPS); 
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17776"></a>Parameters</p>
<div id="ARPLS71417" class="tblformal">
<p class="titleintable"><a id="sthref17777"></a><a id="sthref17778"></a>Table 233-41 SUBSTR Function Parameters</p>
<table class="cellalignment1229" title="SUBSTR Function Parameters " summary="This table describes the Parameters of the UTL_RAW.SUBSTR subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t49">Parameter</th>
<th class="cellalignment1227" id="r1c2-t49">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t49" headers="r1c1-t49">
<p><code>r</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t49 r1c2-t49">
<p>The <code>RAW</code> byte-string from which a portion is extracted</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t49" headers="r1c1-t49">
<p><code>pos</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t49 r1c2-t49">
<p>The byte position in <code>r</code> at which to begin extraction</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r4c1-t49" headers="r1c1-t49">
<p><code>len</code></p>
</td>
<td class="cellalignment1228" headers="r4c1-t49 r1c2-t49">
<p>The number of bytes from <code>pos</code> to extract from <code>r</code> (optional)</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17779"></a>Defaults and Optional Parameters</p>
<div id="ARPLS71418" class="tblformal">
<p class="titleintable"><a id="sthref17780"></a><a id="sthref17781"></a>Table 233-42 SUBSTR Function Exceptions</p>
<table class="cellalignment1229" title="SUBSTR Function Exceptions " summary="This table describes Default and Optional Parameters used by the SUBSTR subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t50">Optional Parameter</th>
<th class="cellalignment1227" id="r1c2-t50">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t50" headers="r1c1-t50">
<p><code>len</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t50 r1c2-t50">
<p>Position <code>pos</code> through to the end of <code>r</code></p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17782"></a>Return Values</p>
<div id="ARPLS71419" class="tblformal">
<p class="titleintable"><a id="sthref17783"></a><a id="sthref17784"></a>Table 233-43 SUBSTR Function Return Values</p>
<table class="cellalignment1229" title="SUBSTR Function Return Values " summary="This table describes Values Returned by the SUBSTR subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t51">Return</th>
<th class="cellalignment1227" id="r1c2-t51">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t51" headers="r1c1-t51">
<p><code>portion of r</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t51 r1c2-t51">
<p>Beginning at <code>pos</code> for <code>len</code> bytes long</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t51" headers="r1c1-t51">
<p><code>NULL</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t51 r1c2-t51">
<p><code>r</code> input parameter was <code>NULL</code></p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17785"></a>Usage Notes</p>
<p>If <code>pos</code> is positive, then <code>SUBSTR</code> counts from the beginning of <code>r</code> to find the first byte. If <code>pos</code> is negative, then <code>SUBSTR</code> counts backward from the end of the <code>r</code>. The value <code>pos</code> cannot be 0.</p>
<p>If <code>len</code> is omitted, then <code>SUBSTR</code> returns all bytes to the end of <code>r</code>. The value <code>len</code> cannot be less than 1.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17786"></a>Exceptions</p>
<div id="ARPLS71420" class="tblformal">
<p class="titleintable"><a id="sthref17787"></a><a id="sthref17788"></a>Table 233-44 SUBSTR Function Exceptions</p>
<table class="cellalignment1229" title="SUBSTR Function Exceptions " summary="This table describes Exceptions raised by the SUBSTR subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t52">Error</th>
<th class="cellalignment1227" id="r1c2-t52">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t52" headers="r1c1-t52">
<p><code>VALUE_ERROR</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t52 r1c2-t52">
<p><code>VALUE_ERROR</code> is returned if:</p>
<ul>
<li>
<p>pos = 0 or &gt; length of <code>r</code></p>
</li>
<li>
<p>len &lt; 1 or &gt; length of <code>r</code> - (pos-1)</p>
</li>
</ul>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS71421" class="refsect2"><a id="i997340"></a>
<hr />
<h3 class="refsect2"><a id="sthref17789"></a>TRANSLATE Function</h3>
<p>This function translates the bytes in the input <code>RAW</code> <code>r</code> according to the bytes in the translation <code>RAWs</code> <code>from_set</code> and <code>to_set</code>. If a byte in <code>r</code> has a matching byte in <code>from_set</code>, then it is replaced by the byte in the corresponding position in <code>to_set</code>, or deleted.</p>
<p>Bytes in <code>r</code>, but undefined in <code>from_set</code>, are copied to the result. Only the first (leftmost) occurrence of a byte in <code>from_set</code> is used. Subsequent duplicates are not scanned and are ignored.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17790"></a>Syntax</p>
<pre>
UTL_RAW.TRANSLATE (
   r        IN RAW,
   from_set IN RAW,
   to_set   IN RAW) 
  RETURN RAW;
</pre>
<div class="infobox-note">
<p class="notep1">Note:</p>
Be aware that <code><span class="codeinlineitalic">to_set</span></code> and <code><span class="codeinlineitalic">from_set</span></code> are reversed in the calling sequence compared to <code>TRANSLITERATE</code>.</div>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17791"></a>Pragmas</p>
<pre>
pragma restrict_references(translate, WNDS, RNDS, WNPS, RNPS); 
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17792"></a>Parameters</p>
<div id="ARPLS71422" class="tblformal">
<p class="titleintable"><a id="sthref17793"></a><a id="sthref17794"></a>Table 233-45 TRANSLATE Function Parameters</p>
<table class="cellalignment1229" title="TRANSLATE Function Parameters " summary="This table describes the Parameters of the UTL_RAW.TRANSLATE subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t54">Parameter</th>
<th class="cellalignment1227" id="r1c2-t54">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t54" headers="r1c1-t54">
<p><code>r</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t54 r1c2-t54">
<p><code>RAW</code> source byte-string to be translated</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t54" headers="r1c1-t54">
<p><code>from_set</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t54 r1c2-t54">
<p><code>RAW</code> byte-codes to be translated, if present in <code>r</code></p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r4c1-t54" headers="r1c1-t54">
<p><code>to_set</code></p>
</td>
<td class="cellalignment1228" headers="r4c1-t54 r1c2-t54">
<p><code>RAW</code> byte-codes to which corresponding <code>from_str</code> bytes are translated</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17795"></a>Return Values</p>
<div id="ARPLS71423" class="tblformal">
<p class="titleintable"><a id="sthref17796"></a><a id="sthref17797"></a>Table 233-46 TRANSLATE Function Return Values</p>
<table class="cellalignment1229" title="TRANSLATE Function Return Values " summary="This table describes Values Returned by the TRANSLATE subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t55">Return</th>
<th class="cellalignment1227" id="r1c2-t55">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t55" headers="r1c1-t55">
<p><code>RAW</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t55 r1c2-t55">
<p>Translated byte-string</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17798"></a>Usage Notes</p>
<ul>
<li>
<p>If <code>to_set</code> is shorter than <code>from_set</code>, the extra <code>from_set</code> bytes have no corresponding translation bytes. Bytes from the input <code>RAW</code> that match any such <code>from_set</code> bytes are not translated or included in the result. They are effectively translated to <code>NULL</code>.</p>
</li>
<li>
<p>If <code>to_set</code> is longer than <code>from_set</code>, the extra <code>to_set</code> bytes are ignored.</p>
</li>
<li>
<p>If a byte value is repeated in <code>from_set</code>, the repeated occurrence is ignored.</p>
</li>
</ul>
</div>
<!-- class="refsubsect" -->
<div class="infobox-note">
<p class="notep1">Note:</p>
Differences from the <a href="#i997416">TRANSLITERATE Function</a>:
<ul>
<li>
<p>The <code>from_set</code> parameter comes before the <code>to_set</code> parameter in the calling sequence.</p>
</li>
<li>
<p>Bytes from <code>r</code> that appear in <code>from_set</code> but have no corresponding values in <code>to_set</code> are not translated or included in the result.</p>
</li>
<li>
<p>The resulting <code>RAW</code> value may be shorter than the input <code>RAW</code> value.</p>
</li>
</ul>
<p>Note that <code>TRANSLATE</code> and <code>TRANSLITERATE</code> only differ in functionality when <code>to_set</code> has fewer bytes than <code>from_set</code>.</p>
</div>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17799"></a>Exceptions</p>
<div id="ARPLS71424" class="tblformal">
<p class="titleintable"><a id="sthref17800"></a><a id="sthref17801"></a>Table 233-47 TRANSLATE Function Exceptions</p>
<table class="cellalignment1229" title="TRANSLATE Function Exceptions " summary="This table describes Exceptions raised by the TRANSLATE subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t57">Error</th>
<th class="cellalignment1227" id="r1c2-t57">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t57" headers="r1c1-t57">
<p><code>VALUE_ERROR</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t57 r1c2-t57">
<p>Either:</p>
<p>- <code>r</code> is <code>NULL</code> or has 0 length</p>
<p>- <code>from_set</code> is <code>NULL</code> or has 0 length</p>
<p>- <code>to_set</code> is <code>NULL</code> or has 0 length</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS71425" class="refsect2"><a id="i997416"></a>
<hr />
<h3 class="refsect2"><a id="sthref17802"></a>TRANSLITERATE Function</h3>
<p>This function converts the bytes in the input <code>RAW</code> <code>r</code> according to the bytes in the transliteration <code>RAWs</code> <code>from_set</code> and <code>to_set</code>. Successive bytes in <code>r</code> are looked up in the <code>from_set</code>, and, if not found, copied unaltered to the result <code>RAW</code>. If found, then they are replaced in the result <code>RAW</code> by either corresponding bytes in the <code>to_set</code>, or the <code>pad</code> byte when no correspondence exists.</p>
<p>Bytes in <code>r</code>, but undefined in <code>from_set</code>, are copied to the result. Only the first (leftmost) occurrence of a byte in <code>from_set</code> is used. Subsequent duplicates are not scanned and are ignored. The result <code>RAW</code> is always the same length as <code>r</code>.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17803"></a>Syntax</p>
<pre>
UTL_RAW.TRANSLITERATE (
   r        IN RAW,
   to_set   IN RAW DEFAULT NULL,
   from_set IN RAW DEFAULT NULL,
   pad      IN RAW DEFAULT NULL)
  RETURN RAW;
</pre>
<div class="infobox-note">
<p class="notep1">Note:</p>
Be aware that <code><span class="codeinlineitalic">to_set</span></code> and <code><span class="codeinlineitalic">from_set</span></code> are reversed in the calling sequence compared to <code>TRANSLATE</code>.</div>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17804"></a>Pragmas</p>
<pre>
pragma restrict_references(transliterate, WNDS, RNDS, WNPS, RNPS); 
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17805"></a>Parameters</p>
<div id="ARPLS71426" class="tblformal">
<p class="titleintable"><a id="sthref17806"></a><a id="sthref17807"></a>Table 233-48 TRANSLITERATE Function Parameters</p>
<table class="cellalignment1229" title="TRANSLITERATE Function Parameters " summary="This table describes the Parameters of the UTL_RAW.TRANSLITERATE subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t59">Parameter</th>
<th class="cellalignment1227" id="r1c2-t59">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t59" headers="r1c1-t59">
<p><code>r</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t59 r1c2-t59">
<p><code>RAW</code> input byte-string to be converted</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t59" headers="r1c1-t59">
<p><code>to_set</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t59 r1c2-t59">
<p><code>RAW</code> byte-codes to which corresponding <code>from_set</code> bytes are converted (any length)</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r4c1-t59" headers="r1c1-t59">
<p><code>from_set</code></p>
</td>
<td class="cellalignment1228" headers="r4c1-t59 r1c2-t59">
<p><code>RAW</code> byte-codes to be converted, if presenting <code>r</code> (any length)</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r5c1-t59" headers="r1c1-t59">
<p><code>pad</code></p>
</td>
<td class="cellalignment1228" headers="r5c1-t59 r1c2-t59">
<p>1 byte used when to-set is shorter than the <code>from_set</code></p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17808"></a>Defaults and Optional Parameters</p>
<div id="ARPLS71427" class="tblformal">
<p class="titleintable"><a id="sthref17809"></a><a id="sthref17810"></a>Table 233-49 TRANSLITERATE Function Optional Parameters</p>
<table class="cellalignment1229" title="TRANSLITERATE Function Optional Parameters " summary="This table describes Defaults and Optional Parameters used by the TRANSLITERATE subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t60">Optional Parameter</th>
<th class="cellalignment1227" id="r1c2-t60">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t60" headers="r1c1-t60">
<p><code>to_set</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t60 r1c2-t60">
<p>To the <code>NULL</code> string and effectively extended with <code>pad</code> to the length of <code>from_set</code> as necessary</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t60" headers="r1c1-t60">
<p><code>from_set</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t60 r1c2-t60">
<p>x ' 00' through x ' fff'</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r4c1-t60" headers="r1c1-t60">
<p><code>pad</code></p>
</td>
<td class="cellalignment1228" headers="r4c1-t60 r1c2-t60">
<p>x'00'</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17811"></a>Return Values</p>
<div id="ARPLS71428" class="tblformal">
<p class="titleintable"><a id="sthref17812"></a><a id="sthref17813"></a>Table 233-50 TRANSLITERATE Function Return Values</p>
<table class="cellalignment1229" title="TRANSLITERATE Function Return Values " summary="This table describes Values Returned by the TRANSLITERATE subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t61">Return</th>
<th class="cellalignment1227" id="r1c2-t61">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t61" headers="r1c1-t61">
<p><code>RAW</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t61 r1c2-t61">
<p>Converted byte-string.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17814"></a>Usage Notes</p>
<ul>
<li>
<p>If <code>to_set</code> is shorter than <code>from_set</code>, the extra <code>from_set</code> bytes have no corresponding conversion bytes. Bytes from the input <code>RAW</code> that match any such <code>from_set</code> bytes are converted in the result to the pad byte instead.</p>
</li>
<li>
<p>If <code>to_set</code> is longer than <code>from_set</code>, the extra <code>to_set</code> bytes are ignored.</p>
</li>
<li>
<p>If a byte value is repeated in <code>from_set</code>, the repeated occurrence is ignored.</p>
</li>
</ul>
</div>
<!-- class="refsubsect" -->
<div class="infobox-note">
<p class="notep1">Note:</p>
Differences from the <a href="#i997340">TRANSLATE Function</a>:
<ul>
<li>
<p>The <code>to_set</code> parameter comes before the <code>from_set</code> parameter in the calling sequence.</p>
</li>
<li>
<p>Bytes from <code>r</code> that appear in <code>from_set</code> but have no corresponding values in <code>to_set</code> are replaced by pad in the result.</p>
</li>
<li>
<p>The resulting <code>RAW</code> value always has the same length as the input <code>RAW</code> value.</p>
</li>
</ul>
<p>Note that <code>TRANSLATE</code> and <code>TRANSLITERATE</code> only differ in functionality when <code>to_set</code> has fewer bytes than <code>from_set</code>.</p>
</div>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17815"></a>Exceptions</p>
<div id="ARPLS71429" class="tblformal">
<p class="titleintable"><a id="sthref17816"></a><a id="sthref17817"></a>Table 233-51 TRANSLITERATE Function Exceptions</p>
<table class="cellalignment1229" title="TRANSLITERATE Function Exceptions " summary="This table describes Exceptions raised by the TRANSLITERATEsubprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t63">Error</th>
<th class="cellalignment1227" id="r1c2-t63">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t63" headers="r1c1-t63">
<p><code>VALUE_ERROR</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t63 r1c2-t63">
<p><code>R</code> is <code>NULL</code> or has 0 length</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS71430" class="refsect2"><a id="BABGDIIJ"></a>
<hr />
<h3 class="refsect2"><a id="sthref17818"></a>XRANGE Function</h3>
<p>This function returns a RAW <code>value</code> containing the succession of one-byte encodings beginning and ending with the specified byte-codes. The specified byte-codes must be single-byte <code>RAW</code> values. If the <code>start_byte</code> value is greater than the <code>end_byte</code> value, then the succession of resulting bytes begins with <code>start_byte</code>, wraps through <code>x'FF'</code> back to <code>x'00'</code>, then ends at <code>end_byte</code>.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17819"></a>Syntax</p>
<pre>
UTL_RAW.XRANGE (
   start_byte IN RAW DEFAULT NULL,
   end_byte   IN RAW DEFAULT NULL) 
  RETURN RAW;
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17820"></a>Pragmas</p>
<pre>
pragma restrict_references(xrange, WNDS, RNDS, WNPS, RNPS); 
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17821"></a>Parameters</p>
<div id="ARPLS71431" class="tblformal">
<p class="titleintable"><a id="sthref17822"></a><a id="sthref17823"></a>Table 233-52 XRANGE Function Parameters</p>
<table class="cellalignment1229" title="XRANGE Function Parameters " summary="This table describes the Parameters of the UTL_RAW.XCHANGE subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t64">Parameters</th>
<th class="cellalignment1227" id="r1c2-t64">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t64" headers="r1c1-t64">
<p><code>start_byte</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t64 r1c2-t64">
<p>Beginning byte-code value of resulting sequence. The default is <code>x'00'</code>.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t64" headers="r1c1-t64">
<p><code>end_byte</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t64 r1c2-t64">
<p>Ending byte-code value of resulting sequence. The default is <code>x'FF'</code>.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17824"></a>Return Values</p>
<div id="ARPLS71432" class="tblformal">
<p class="titleintable"><a id="sthref17825"></a><a id="sthref17826"></a>Table 233-53 XRANGE Function Return Values</p>
<table class="cellalignment1229" title="XRANGE Function Return Values " summary="This table describes Values Returned by the XCHANGE subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t65">Return</th>
<th class="cellalignment1227" id="r1c2-t65">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t65" headers="r1c1-t65">
<p><code>RAW</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t65 r1c2-t65">
<p>Containing succession of 1-byte hexadecimal encodings</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" --></div>
<!-- class="refsect1" --></div>
<!-- class="refentry" --></div>
<!-- class="chapter" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment1219">
<tr>
<td class="cellalignment1228">
<table class="cellalignment1224">
<tr>
<td class="cellalignment1223"><a href="u_nla.htm"><img width="24" height="24" src="../../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment1223"><a href="u_recomp.htm"><img width="24" height="24" src="../../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;1996, 2013,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment1231">
<table class="cellalignment1222">
<tr>
<td class="cellalignment1223"><a href="../../index.htm"><img width="24" height="24" src="../../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment1223"><a href="../../nav/portal_booklist.htm"><img width="24" height="24" src="../../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment1223"><a href="toc.htm"><img width="24" height="24" src="../../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment1223"><a href="index.htm"><img width="24" height="24" src="../../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment1223"><a href="../../nav/mindx.htm"><img width="24" height="24" src="../../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment1223"><a href="../../dcommon/html/feedback.htm"><img width="24" height="24" src="../../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>
</body>
</html>
