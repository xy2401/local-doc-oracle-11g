<!DOCTYPE html>
<html lang="en" >
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1">
<meta charset="utf-8">
<title>UTL_SMTP</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Version 5.1.2 Build 737" />
<meta name="dcterms.created" content="2013-07-19T18:56:12Z" />
<meta name="robots" content="all" />
<meta name="dcterms.title" content="Database PL/SQL Packages and Types Reference" />
<meta name="dcterms.identifier" content="E40758-03" />
<meta name="dcterms.isVersionOf" content="ARPLS" />
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;1996, 2013,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved." />
<link rel="Start" href="../../index.htm" title="Home" type="text/html" />
<link rel="Copyright" href="../../dcommon/html/cpyr.htm" title="Copyright" type="text/html" />

<script type="application/javascript"  src="../../dcommon/js/headfoot.js"></script>
<script type="application/javascript"  src="../../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html" />
<link rel="Index" href="index.htm" title="Index" type="text/html" />
<link rel="Prev" href="u_ref.htm" title="Previous" type="text/html" />
<link rel="Next" href="u_spadv.htm" title="Next" type="text/html" />
<link rel="alternate" href="../e40758.pdf" title="PDF version" type="application/pdf" />
<link rel="schema.dcterms" href="http://purl.org/dc/terms/" />
<link rel="stylesheet" href="../../dcommon/css/fusiondoc.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/header.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/footer.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/fonts.css">
<link rel="stylesheet" href="../../dcommon/css/foundation.css">
<link rel="stylesheet" href="../../dcommon/css/codemirror.css">
<link rel="stylesheet" type="text/css" title="Default" href="../../nav/css/html5.css">
<link rel="stylesheet" href="../../dcommon/css/respond-480-tablet.css">
<link rel="stylesheet" href="../../dcommon/css/respond-768-laptop.css">
<link rel="stylesheet" href="../../dcommon/css/respond-1140-deskop.css">
<script type="application/javascript" src="../../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">240/265</span> <!-- End Header -->
<div id="ARPLS074" class="chapter"><a id="CHDHHBJD"></a>
<h1 class="chapter"><span class="secnum">236</span> UTL_SMTP</h1>
<p>The <code>UTL_SMTP</code> package is designed for sending electronic mails (e-mails) over Simple Mail Transfer Protocol (SMTP) as specified by RFC821.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink ADFNS1001" href="../../appdev.112/e41502/adfns_web.htm#ADFNS1001"><span class="italic">Oracle Database Advanced Application Developer's Guide</span></a></div>
<p>This chapter contains the following topics:</p>
<ul>
<li>
<p><a href="#CHDCFFDI">Using UTL_SMTP</a></p>
<ul>
<li>
<p>Overview</p>
</li>
<li>
<p>Security Model</p>
</li>
<li>
<p>Constants</p>
</li>
<li>
<p>Types</p>
</li>
<li>
<p>Reply Codes</p>
</li>
<li>
<p>Exceptions</p>
</li>
<li>
<p>Rules and Limits</p>
</li>
<li>
<p>Examples</p>
</li>
</ul>
</li>
<li>
<p><a href="#i1004292">Summary of UTL_SMTP Subprograms</a></p>
</li>
</ul>
<div class="refentry"><a id="CHDCFFDI"></a>
<hr />
<div id="ARPLS71459" class="refsect1">
<h2 class="refsect1">Using UTL_SMTP</h2>
<ul>
<li>
<p><a href="#i1006092">Overview</a></p>
</li>
<li>
<p><a href="#BHAJFFEI">Security Model</a></p>
</li>
<li>
<p><a href="#BABGJGJJ">Constants</a></p>
</li>
<li>
<p><a href="#i1007172">Types</a></p>
</li>
<li>
<p><a href="#i1007173">Reply Codes</a></p>
</li>
<li>
<p><a href="#i1006659">Exceptions</a></p>
</li>
<li>
<p><a href="#i1006660">Rules and Limits</a></p>
</li>
<li>
<p><a href="#i1006675">Examples</a></p>
</li>
</ul>
<div id="ARPLS71460" class="refsect2"><a id="i1006092"></a>
<hr />
<h3 class="refsect2">Overview</h3>
<p>The <code>UTL_SMTP</code> protocol consists of a set of commands for an e-mail client to dispatch e-mails to an SMTP server. The <code>UTL_SMTP</code> package provides interfaces to the SMTP commands. For many of the commands, the package provides both a procedural and a functional interface. The functional form returns the reply from the server for processing by the client. The procedural form checks the reply and raises an exception if the reply indicates a transient (400-range reply code) or permanent error (500-range reply code). Otherwise, it discards the reply.</p>
<p>Note that the original SMTP protocol communicates using 7-bit ASCII. Using <code>UTL_SMTP</code>, all text data (in other words, those in <code>VARCHAR2</code>) are converted to US7ASCII before it is sent to the server. Some implementations of SMTP servers that support SMTP extension 8BITMIME [RFC1652] support full 8-bit communication between client and server. The body of the DATA command can be transferred in full 8 bits, but the rest of the SMTP command and response must be in 7 bits. When the target SMTP server supports 8BITMIME extension, users of multibyte databases may convert their non-US7ASCII, multibyte <code>VARCHAR2</code> data to <code>RAW</code> and use the <code>WRITE_RAW_DATA</code> subprogram to send multibyte data using 8-bit MIME encoding.</p>
<p><code>UTL_SMTP</code> provides for SMTP communication as specified in RFC821, but does not provide an API to format the content of the message according to RFC 822 (for example, setting the subject of an electronic mail). You must format the message appropriately. In addition, <code>UTL_SMTP</code> does not have the functionality to implement an SMTP server for an e-mail clients to send e-mails using SMTP.</p>
</div>
<!-- class="refsect2" -->
<div id="ARPLS71461" class="refsect2"><a id="BHAJFFEI"></a>
<hr />
<h3 class="refsect2">Security Model</h3>
<p>This package is an invoker's rights package. The invoking user must have the <code>connect</code> privilege granted in the access control list assigned to the remote network host to which the user must connect.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
For more information, see <a class="olink DBSEG40012" href="../../network.112/e36292/authorization.htm#DBSEG40012">Managing Fine-Grained Access in PL/SQL Packages and Types</a> in <a class="olink DBSEG" href="../../network.112/e36292/toc.htm"><span class="italic">Oracle Database Security Guide</span></a></div>
</div>
<!-- class="refsect2" -->
<div id="ARPLS73113" class="refsect2"><a id="BABGJGJJ"></a>
<hr />
<h3 class="refsect2">Constants</h3>
<div class="infobox-note">
<p class="notep1">Note:</p>
This functionality is available starting with Oracle Database 11<span class="italic">g</span> Release 2 (11.2.0.2).</div>
<p>The <code>UTL_SMTP</code> package uses the constants shown in <a href="#BABHABGG">Table 236-1, "UTL_SMTP Constants"</a>.</p>
<div id="ARPLS73114" class="tblformal">
<p class="titleintable"><a id="sthref17871"></a><a id="BABHABGG"></a>Table 236-1 UTL_SMTP Constants</p>
<table class="cellalignment1229" title="UTL_SMTP Constants" summary="This table describes constants used by DBMS_AUTO_TASK_ADMIN subprograms." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t5">Name</th>
<th class="cellalignment1227" id="r1c2-t5">Type</th>
<th class="cellalignment1227" id="r1c3-t5">Value</th>
<th class="cellalignment1227" id="r1c4-t5">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t5" headers="r1c1-t5">
<p><code>ALL_SCHEMES</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t5 r1c2-t5">
<p><code>VARCHAR2(256)</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t5 r1c3-t5">
<p><code>'CRAM-MD5 PLAIN LOGIN'</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t5 r1c4-t5">
<p>List of all authentication schemes <code>UTL_SMTP</code> supports, in order of their relative security strength. The subset of the schemes <code>in</code> <code>ALL_SCHEMES</code> (namely, <code>PLAIN</code> and <code>LOGIN</code>) in which cleartext passwords are sent over SMTP must be used only in SMTP connections that are secured by Secure Socket Layer / Transport Layer Security (SSL/TLS).</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t5" headers="r1c1-t5">
<p><code>NON_CLEARTEXT_PASSWORD_SCHEMES</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t5 r1c2-t5">
<p><code>VARCHAR2(256)</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t5 r1c3-t5">
<p><code>'CRAM-MD5'</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t5 r1c4-t5">
<p>List of authentication schemes that <code>UTL_SMTP</code> supports and in which no cleartext passwords are sent over SMTP. They can be used in SMTP connections that are not secured by SSL/TLS. Note that these schemes may still be weak when used in an insecure SMTP connection.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsect2" -->
<div id="ARPLS71462" class="refsect2"><a id="i1007172"></a>
<hr />
<h3 class="refsect2">Types</h3>
<ul>
<li>
<p><a href="#i1008881">CONNECTION Record Type</a></p>
</li>
<li>
<p><a href="#i1007056">REPLY, REPLIES Record Types</a></p>
</li>
</ul>
<div id="ARPLS71463" class="refsect3"><a id="i1008881"></a>
<h4 class="refsect3"><a id="sthref17872"></a>CONNECTION Record Type</h4>
<p>This is a PL/SQL record type used to represent an SMTP connection.</p>
<p class="subhead1"><a id="ARPLS71464"></a>Syntax</p>
<pre>
TYPE connection IS RECORD (
    host              VARCHAR2(255),
    port              PLS_INTEGER,
    tx_timeout        PLS_INTEGER, 
    private_tcp_con   utl_tcp.connection,
    private_state     PLS_INTEGER);
</pre>
<p class="subhead1"><a id="ARPLS71465"></a>Fields</p>
<div id="ARPLS71466" class="tblformal">
<p class="titleintable"><a id="sthref17873"></a><a id="sthref17874"></a>Table 236-2 CONNECTION Record Type Fields</p>
<table class="cellalignment1229" title="CONNECTION Record Type Fields" summary="This table describes Fields of the CONNECTION Record Type." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t6">Field</th>
<th class="cellalignment1227" id="r1c2-t6">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t6" headers="r1c1-t6">
<p><code>host</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t6 r1c2-t6">
<p>Name of the remote host when connection is established. <code>NULL</code> when no connection is established.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t6" headers="r1c1-t6">
<p><code>port</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t6 r1c2-t6">
<p>Port number of the remote SMTP server connected. <code>NULL</code> when no connection is established.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r4c1-t6" headers="r1c1-t6">
<p><code>tx_timeout</code></p>
</td>
<td class="cellalignment1228" headers="r4c1-t6 r1c2-t6">
<p>Time in seconds that the <code>UTL_SMTP</code> package waits before timing out in a read or write operation in this connection. In read operations, this package times out if no data is available for reading immediately. In write operations, this package times out if the output buffer is full and no data is to be sent into the network without being blocked. <code>0</code> indicates not to wait at all. <code>NULL</code> indicates to wait forever.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r5c1-t6" headers="r1c1-t6">
<p><code>private_tcp_con</code></p>
</td>
<td class="cellalignment1228" headers="r5c1-t6 r1c2-t6">
<p>Private, for implementation use only. You should not modify this field.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r6c1-t6" headers="r1c1-t6">
<p><code>private_state</code></p>
</td>
<td class="cellalignment1228" headers="r6c1-t6 r1c2-t6">
<p>Private, for implementation use only. You should not modify this field.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<p class="subhead1"><a id="ARPLS71467"></a>Usage Notes</p>
<p>The read-only fields in a connection record are used to return information about the SMTP connection after the connection is successfully made with the <code><a href="#i1002710">OPEN_CONNECTION Functions</a></code>. Changing the values of these fields has no effect on the connection. The fields <code>private_tcp_con</code> and <code>private_state</code> for implementation use only. You should not modify these fields.</p>
</div>
<!-- class="refsect3" -->
<div id="ARPLS71468" class="refsect3"><a id="i1007056"></a>
<h4 class="refsect3"><a id="sthref17875"></a>REPLY, REPLIES Record Types</h4>
<p>These are PL/SQL record types used to represent an SMTP reply line. Each SMTP reply line consists of a reply code followed by a text message. While a single reply line is expected for most SMTP commands, some SMTP commands expect multiple reply lines. For those situations, a PL/SQL table of reply records is used to represent multiple reply lines.</p>
<p class="subhead1"><a id="ARPLS71469"></a>Syntax</p>
<pre>
TYPE reply IS RECORD (
  code    PLS_INTEGER,
  text    VARCHAR2(508));

TYPE replies IS TABLE OF reply INDEX BY BINARY_INTEGER; 
</pre>
<p class="subhead1"><a id="ARPLS71470"></a>Fields</p>
<div id="ARPLS71471" class="tblformal">
<p class="titleintable"><a id="sthref17876"></a><a id="sthref17877"></a>Table 236-3 REPLY, REPLIES Record Type Fields</p>
<table class="cellalignment1229" title="REPLY, REPLIES Record Type Fields" summary="This table describes Fields of the REPLY and REPLIES Record Types." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t7">Field</th>
<th class="cellalignment1227" id="r1c2-t7">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t7" headers="r1c1-t7">
<p><code>code</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t7 r1c2-t7">
<p>3-digit reply code</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t7" headers="r1c1-t7">
<p><code>text</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t7 r1c2-t7">
<p>Text message of the reply</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsect3" --></div>
<!-- class="refsect2" -->
<div id="ARPLS71472" class="refsect2"><a id="i1007173"></a>
<hr />
<h3 class="refsect2">Reply Codes</h3>
<p>The following is a list of the SMTP reply codes.</p>
<div id="ARPLS71473" class="tblformal">
<p class="titleintable"><a id="sthref17878"></a><a id="sthref17879"></a>Table 236-4 SMTP Reply Codes</p>
<table class="cellalignment1229" title="SMTP Reply Codes" summary="This table describes SMTP Reply Codes used by UTL_SMTP subprograms." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t8">Reply Code</th>
<th class="cellalignment1227" id="r1c2-t8">Meaning</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t8" headers="r1c1-t8">
<p><code>211</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t8 r1c2-t8">
<p>System status, or system help reply</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t8" headers="r1c1-t8">
<p><code>214</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t8 r1c2-t8">
<p>Help message [Information on how to use the receiver or the meaning of a particular non-standard command; this reply is useful only to the human user]</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r4c1-t8" headers="r1c1-t8">
<p><code>220</code></p>
</td>
<td class="cellalignment1228" headers="r4c1-t8 r1c2-t8">
<p><code>&lt;domain&gt;</code> Service ready</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r5c1-t8" headers="r1c1-t8">
<p><code>221</code></p>
</td>
<td class="cellalignment1228" headers="r5c1-t8 r1c2-t8">
<p><code>&lt;domain&gt;</code> Service closing transmission channel</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r6c1-t8" headers="r1c1-t8">
<p><code>250</code></p>
</td>
<td class="cellalignment1228" headers="r6c1-t8 r1c2-t8">
<p>Requested mail action okay, completed</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r7c1-t8" headers="r1c1-t8">
<p><code>251</code></p>
</td>
<td class="cellalignment1228" headers="r7c1-t8 r1c2-t8">
<p>User not local; forwards to <code>&lt;forward-path&gt;</code></p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r8c1-t8" headers="r1c1-t8">
<p><code>252</code></p>
</td>
<td class="cellalignment1228" headers="r8c1-t8 r1c2-t8">
<p>OK, pending messages for node <code>&lt;node&gt;</code> started. Cannot <code>VRFY</code> user (for example, info is not local), but takes message for this user and attempts delivery.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r9c1-t8" headers="r1c1-t8">
<p><code>253</code></p>
</td>
<td class="cellalignment1228" headers="r9c1-t8 r1c2-t8">
<p>OK, <code>&lt;messages&gt;</code> pending messages for node <code>&lt;node&gt;</code> started</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r10c1-t8" headers="r1c1-t8">
<p><code>354</code></p>
</td>
<td class="cellalignment1228" headers="r10c1-t8 r1c2-t8">
<p>Start mail input; end with <code>&lt;CRLF.CRLF&gt;</code></p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r11c1-t8" headers="r1c1-t8">
<p><code>355</code></p>
</td>
<td class="cellalignment1228" headers="r11c1-t8 r1c2-t8">
<p>Octet-offset is the transaction offset</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r12c1-t8" headers="r1c1-t8">
<p><code>421</code></p>
</td>
<td class="cellalignment1228" headers="r12c1-t8 r1c2-t8">
<p><code>&lt;domain&gt;</code> Service not available, closing transmission channel (This can be a reply to any command if the service knows it must shut down.)</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r13c1-t8" headers="r1c1-t8">
<p><code>450</code></p>
</td>
<td class="cellalignment1228" headers="r13c1-t8 r1c2-t8">
<p>Requested mail action not taken: mailbox unavailable [for example, mailbox busy]</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r14c1-t8" headers="r1c1-t8">
<p><code>451</code></p>
</td>
<td class="cellalignment1228" headers="r14c1-t8 r1c2-t8">
<p>Requested action terminated: local error in processing</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r15c1-t8" headers="r1c1-t8">
<p><code>452</code></p>
</td>
<td class="cellalignment1228" headers="r15c1-t8 r1c2-t8">
<p>Requested action not taken: insufficient system storage</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r16c1-t8" headers="r1c1-t8">
<p><code>453</code></p>
</td>
<td class="cellalignment1228" headers="r16c1-t8 r1c2-t8">
<p>You have no mail.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r17c1-t8" headers="r1c1-t8">
<p><code>454</code></p>
</td>
<td class="cellalignment1228" headers="r17c1-t8 r1c2-t8">
<p>TLS not available due to temporary reason. Encryption required for requested authentication mechanism.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r18c1-t8" headers="r1c1-t8">
<p><code>458</code></p>
</td>
<td class="cellalignment1228" headers="r18c1-t8 r1c2-t8">
<p>Unable to queue messages for node <code>&lt;node&gt;</code></p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r19c1-t8" headers="r1c1-t8">
<p><code>459</code></p>
</td>
<td class="cellalignment1228" headers="r19c1-t8 r1c2-t8">
<p>Node <code>&lt;node&gt;</code> not allowed: <code>reason</code></p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r20c1-t8" headers="r1c1-t8">
<p><code>500</code></p>
</td>
<td class="cellalignment1228" headers="r20c1-t8 r1c2-t8">
<p>Syntax error, command unrecognized (This may include errors such as command line too long.)</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r21c1-t8" headers="r1c1-t8">
<p><code>501</code></p>
</td>
<td class="cellalignment1228" headers="r21c1-t8 r1c2-t8">
<p>Syntax error in parameters or arguments</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r22c1-t8" headers="r1c1-t8">
<p><code>502</code></p>
</td>
<td class="cellalignment1228" headers="r22c1-t8 r1c2-t8">
<p>Command not implemented</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r23c1-t8" headers="r1c1-t8">
<p><code>503</code></p>
</td>
<td class="cellalignment1228" headers="r23c1-t8 r1c2-t8">
<p>Bad sequence of commands</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r24c1-t8" headers="r1c1-t8">
<p><code>504</code></p>
</td>
<td class="cellalignment1228" headers="r24c1-t8 r1c2-t8">
<p>Command parameter not implemented</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r25c1-t8" headers="r1c1-t8">
<p><code>521</code></p>
</td>
<td class="cellalignment1228" headers="r25c1-t8 r1c2-t8">
<p><code>&lt;Machine&gt;</code> does not accept mail.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r26c1-t8" headers="r1c1-t8">
<p><code>530</code></p>
</td>
<td class="cellalignment1228" headers="r26c1-t8 r1c2-t8">
<p>Must issue a <code>STARTTLS</code> command first. Encryption required for requested authentication mechanism.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r27c1-t8" headers="r1c1-t8">
<p><code>534</code></p>
</td>
<td class="cellalignment1228" headers="r27c1-t8 r1c2-t8">
<p>Authentication mechanism is too weak.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r28c1-t8" headers="r1c1-t8">
<p><code>538</code></p>
</td>
<td class="cellalignment1228" headers="r28c1-t8 r1c2-t8">
<p>Encryption required for requested authentication mechanism.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r29c1-t8" headers="r1c1-t8">
<p><code>550</code></p>
</td>
<td class="cellalignment1228" headers="r29c1-t8 r1c2-t8">
<p>Requested action not taken: mailbox unavailable [for, mailbox not found, no access]</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r30c1-t8" headers="r1c1-t8">
<p><code>551</code></p>
</td>
<td class="cellalignment1228" headers="r30c1-t8 r1c2-t8">
<p>User not local; please try <code>&lt;forward-path&gt;</code></p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r31c1-t8" headers="r1c1-t8">
<p><code>552</code></p>
</td>
<td class="cellalignment1228" headers="r31c1-t8 r1c2-t8">
<p>Requested mail action terminated: exceeded storage allocation</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r32c1-t8" headers="r1c1-t8">
<p><code>553</code></p>
</td>
<td class="cellalignment1228" headers="r32c1-t8 r1c2-t8">
<p>Requested action not taken: mailbox name not allowed [for example, mailbox syntax incorrect]</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r33c1-t8" headers="r1c1-t8">
<p><code>554</code></p>
</td>
<td class="cellalignment1228" headers="r33c1-t8 r1c2-t8">
<p>Transaction failed</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsect2" -->
<div id="ARPLS71474" class="refsect2"><a id="i1006659"></a>
<hr />
<h3 class="refsect2">Exceptions</h3>
<p>The table lists the exceptions that can be raised by the interface of the <code>UTL_SMTP</code> package. The network error is transferred to a reply code of 421- service not available.</p>
<div id="ARPLS71475" class="tblformal">
<p class="titleintable"><a id="sthref17880"></a><a id="sthref17881"></a>Table 236-5 UTL_SMTP Exceptions</p>
<table class="cellalignment1229" title="UTL_SMTP Exceptions" summary="This table describes Exceptions raised by UTL_SMTP subprograms." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t9"><br /></th>
<th class="cellalignment1227" id="r1c2-t9"><br /></th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t9" headers="r1c1-t9">
<p><code>INVALID_OPERATION</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t9 r1c2-t9">
<p>Raised when an invalid operation is made. In other words, calling API other than the <a href="#i1004100">WRITE_DATA Procedure</a>, the <a href="#CHDEHIEA">WRITE_RAW_DATA Procedure</a> or the <a href="#i1003341">CLOSE_DATA Function and Procedure</a> after the <a href="#i1002852">OPEN_DATA Function and Procedure</a> is called, or calling <code>WRITE_DATA, WRITE_RAW_DATA</code> or <code>CLOSE_DATA</code> without first calling <code>OPEN_DATA.</code></p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t9" headers="r1c1-t9">
<p><code>TRANSIENT_ERROR</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t9 r1c2-t9">
<p>Raised when receiving a reply code in 400 range</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r4c1-t9" headers="r1c1-t9">
<p><code>PERMANENT_ERROR</code></p>
</td>
<td class="cellalignment1228" headers="r4c1-t9 r1c2-t9">
<p>Raised when receiving a reply code in 500 range</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsect2" -->
<div id="ARPLS71476" class="refsect2"><a id="i1006660"></a>
<hr />
<h3 class="refsect2">Rules and Limits</h3>
<p>No limitation or range-checking is imposed by the API. However, you must be aware of the following size limitations on various elements of SMTP. Sending data that exceed these limits may result in errors returned by the server.</p>
<div id="ARPLS71477" class="tblformal">
<p class="titleintable"><a id="sthref17882"></a><a id="sthref17883"></a>Table 236-6 SMTP Size Limitation</p>
<table class="cellalignment1229" title="SMTP Size Limitation" summary="This table describes Size Limitations encountered by UTL_REF subprograms." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t10">Element</th>
<th class="cellalignment1227" id="r1c2-t10">Size Limitation</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t10" headers="r1c1-t10">
<p><code>user</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t10 r1c2-t10">
<p>Maximum total length of a user name is 64 characters</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t10" headers="r1c1-t10">
<p><code>domain</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t10 r1c2-t10">
<p>Maximum total length of a domain name or number is 64 characters</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r4c1-t10" headers="r1c1-t10">
<p><code>path</code></p>
</td>
<td class="cellalignment1228" headers="r4c1-t10 r1c2-t10">
<p>Maximum total length of a reverse-path or forward-path is 256 characters (including the punctuation and element separators)</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r5c1-t10" headers="r1c1-t10">
<p><code>command line</code></p>
</td>
<td class="cellalignment1228" headers="r5c1-t10 r1c2-t10">
<p>Maximum total length of a command line including the command word and the <code>&lt;CRLF&gt;</code> is 512 characters</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r6c1-t10" headers="r1c1-t10">
<p><code>reply line</code></p>
</td>
<td class="cellalignment1228" headers="r6c1-t10 r1c2-t10">
<p>Maximum total length of a reply line including the reply code and the <code>&lt;CRLF&gt;</code> is 512 characters</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r7c1-t10" headers="r1c1-t10">
<p><code>text line</code></p>
</td>
<td class="cellalignment1228" headers="r7c1-t10 r1c2-t10">
<p>Maximum total length of a text line including the <code>&lt;CRLF&gt;</code> is 1000 characters (but not counting the leading dot duplicated for transparency)</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r8c1-t10" headers="r1c1-t10">
<p><code>recipients buffer</code></p>
</td>
<td class="cellalignment1228" headers="r8c1-t10 r1c2-t10">
<p>Maximum total number of recipients that must be buffered is 100 recipients</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsect2" -->
<div id="ARPLS71478" class="refsect2"><a id="i1006675"></a>
<hr />
<h3 class="refsect2">Examples</h3>
<p><a id="i1003065"></a>The following example illustrates how <code>UTL_SMTP</code> is used by an application to send e-mail. The application connects to an SMTP server at port 25 and sends a simple text message.</p>
<pre>
DECLARE
  c UTL_SMTP.CONNECTION;
 
  PROCEDURE send_header(name IN VARCHAR2, header IN VARCHAR2) AS
  BEGIN
    UTL_SMTP.WRITE_DATA(c, name || ': ' || header || UTL_TCP.CRLF);
  END;
 
BEGIN
  c := UTL_SMTP.OPEN_CONNECTION('smtp-server.acme.com');
  UTL_SMTP.HELO(c, 'foo.com');
  UTL_SMTP.MAIL(c, 'sender@foo.com');
  UTL_SMTP.RCPT(c, 'recipient@foo.com');
  UTL_SMTP.OPEN_DATA(c);
  send_header('From',    '"Sender" &lt;sender@foo.com&gt;');
  send_header('To',      '"Recipient" &lt;recipient@foo.com&gt;');
  send_header('Subject', 'Hello');
  UTL_SMTP.WRITE_DATA(c, UTL_TCP.CRLF || 'Hello, world!');
  UTL_SMTP.CLOSE_DATA(c);
  UTL_SMTP.QUIT(c);
EXCEPTION
  WHEN utl_smtp.transient_error OR utl_smtp.permanent_error THEN
    BEGIN
      UTL_SMTP.QUIT(c);
    EXCEPTION
      WHEN UTL_SMTP.TRANSIENT_ERROR OR UTL_SMTP.PERMANENT_ERROR THEN
        NULL; -- When the SMTP server is down or unavailable, we don't have
              -- a connection to the server. The QUIT call raises an
              -- exception that we can ignore.
    END;
    raise_application_error(-20000,
      'Failed to send mail due to the following error: ' || sqlerrm);
END;
</pre></div>
<!-- class="refsect2" --></div>
<!-- class="refsect1" -->
<a id="i1004292"></a>
<hr />
<div id="ARPLS71479" class="refsect1">
<h2 class="refsect1">Summary of UTL_SMTP Subprograms</h2>
<div id="ARPLS71480" class="tblformal">
<p class="titleintable"><a id="sthref17884"></a><a id="sthref17885"></a>Table 236-7 UTL_SMTP Package Subprograms</p>
<table class="cellalignment1229" title="UTL_SMTP Package Subprograms" summary="This table lists the UTL_SMTP subprograms in alphabetical order and briefly describes them." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t11">Subprogram</th>
<th class="cellalignment1227" id="r1c2-t11">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t11" headers="r1c1-t11">
<p><a href="#BHAGEECF">AUTH Function and Procedure</a></p>
</td>
<td class="cellalignment1228" headers="r2c1-t11 r1c2-t11">
<p>Sends the <code>AUTH</code> command to authenticate to the SMTP server</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t11" headers="r1c1-t11">
<p><a href="#BABCEFGD">CLOSE_CONNECTION Procedure</a></p>
</td>
<td class="cellalignment1228" headers="r3c1-t11 r1c2-t11">
<p>Closes the SMTP connection, causing the current SMTP operation to terminate</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r4c1-t11" headers="r1c1-t11">
<p><a href="#i1003341">CLOSE_DATA Function and Procedure</a></p>
</td>
<td class="cellalignment1228" headers="r4c1-t11 r1c2-t11">
<p>Closes the data session</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r5c1-t11" headers="r1c1-t11">
<p><a href="#i1003617">COMMAND Function and Procedure</a></p>
</td>
<td class="cellalignment1228" headers="r5c1-t11 r1c2-t11">
<p>Performs a generic SMTP command</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r6c1-t11" headers="r1c1-t11">
<p><a href="#i997284">COMMAND_REPLIES Function</a></p>
</td>
<td class="cellalignment1228" headers="r6c1-t11 r1c2-t11">
<p>Performs a generic SMTP command and retrieves multiple reply lines</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r7c1-t11" headers="r1c1-t11">
<p><a href="#i1002758">DATA Function and Procedure</a></p>
</td>
<td class="cellalignment1228" headers="r7c1-t11 r1c2-t11">
<p>Sends the e-mail body</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r8c1-t11" headers="r1c1-t11">
<p><a href="#i1003308">EHLO Function and Procedure</a></p>
</td>
<td class="cellalignment1228" headers="r8c1-t11 r1c2-t11">
<p>Performs the initial handshake with SMTP server using the <code>EHLO</code> command</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r9c1-t11" headers="r1c1-t11">
<p><a href="#i1004728">HELO Function and Procedure</a></p>
</td>
<td class="cellalignment1228" headers="r9c1-t11 r1c2-t11">
<p>Performs the initial handshake with SMTP server using the <code>HELO</code> command</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r10c1-t11" headers="r1c1-t11">
<p><a href="#i1004779">HELP Function</a></p>
</td>
<td class="cellalignment1228" headers="r10c1-t11 r1c2-t11">
<p>Sends <code>HELP</code> command</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r11c1-t11" headers="r1c1-t11">
<p><a href="#i1001650">MAIL Function and Procedure</a></p>
</td>
<td class="cellalignment1228" headers="r11c1-t11 r1c2-t11">
<p>Initiates an e-mail transaction with the server, the destination is a mailbox</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r12c1-t11" headers="r1c1-t11">
<p><a href="#i1005000">NOOP Function and Procedure</a></p>
</td>
<td class="cellalignment1228" headers="r12c1-t11 r1c2-t11">
<p><code>NULL</code> command</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r13c1-t11" headers="r1c1-t11">
<p><a href="#i1002710">OPEN_CONNECTION Functions</a></p>
</td>
<td class="cellalignment1228" headers="r13c1-t11 r1c2-t11">
<p>Opens a connection to an SMTP server</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r14c1-t11" headers="r1c1-t11">
<p><a href="#i1002852">OPEN_DATA Function and Procedure</a></p>
</td>
<td class="cellalignment1228" headers="r14c1-t11 r1c2-t11">
<p>Sends the <code>DATA</code> command</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r15c1-t11" headers="r1c1-t11">
<p><a href="#i997611">QUIT Function and Procedure</a></p>
</td>
<td class="cellalignment1228" headers="r15c1-t11 r1c2-t11">
<p>Terminates an SMTP session and disconnects from the server</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r16c1-t11" headers="r1c1-t11">
<p><a href="#i1002798">RCPT Function</a></p>
</td>
<td class="cellalignment1228" headers="r16c1-t11 r1c2-t11">
<p>Specifies the recipient of an e-mail message</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r17c1-t11" headers="r1c1-t11">
<p><a href="#i1004041">RSET Function and Procedure</a></p>
</td>
<td class="cellalignment1228" headers="r17c1-t11 r1c2-t11">
<p>Terminates the current e-mail transaction</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r18c1-t11" headers="r1c1-t11">
<p><a href="#BABJBFGH">STARTTLS Function and Procedure</a></p>
</td>
<td class="cellalignment1228" headers="r18c1-t11 r1c2-t11">
<p>Sends <code>STARTTLS</code> command to secure the SMTP connection using SSL/TLS</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r19c1-t11" headers="r1c1-t11">
<p><a href="#i1002366">VRFY Function</a></p>
</td>
<td class="cellalignment1228" headers="r19c1-t11 r1c2-t11">
<p>Verifies the validity of a destination e-mail address</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r20c1-t11" headers="r1c1-t11">
<p><a href="#i1004100">WRITE_DATA Procedure</a></p>
</td>
<td class="cellalignment1228" headers="r20c1-t11 r1c2-t11">
<p>Writes a portion of the e-mail message</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r21c1-t11" headers="r1c1-t11">
<p><a href="#CHDEHIEA">WRITE_RAW_DATA Procedure</a></p>
</td>
<td class="cellalignment1228" headers="r21c1-t11 r1c2-t11">
<p>Writes a portion of the e-mail message with <code>RAW</code> data</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<div id="ARPLS72085" class="refsect2"><a id="BHAGEECF"></a>
<hr />
<h3 class="refsect2"><a id="sthref17886"></a>AUTH Function and Procedure</h3>
<p>This subprogram sends the <code>AUTH</code> command to authenticate to the SMTP server. The <code>UTL_SMTP</code> package goes through the user's choices of authentication schemes, skips any that is not supported by the SMTP server and uses the first supported. To determine the schemes the SMTP server supports from its <code>EHLO</code> reply, the user must call the <a href="#i1003308">EHLO Function and Procedure</a>. Otherwise, <code>UTL_SMTP</code> uses the first scheme in the list.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
This functionality is available starting with Oracle Database 11<span class="italic">g</span> Release 2 (11.2.0.2).</div>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17887"></a>Syntax</p>
<pre>
UTL_SMTP.AUTH (
   c          IN OUT NOCOPY connection,
   username   IN            VARCHAR2,
   password   IN            VARCHAR2,
   schemes    IN            VARCHAR2 DEFAULT NON_CLEARTEXT_PASSWORD_SCHEMES)
 RETURN reply;

UTL_SMTP.AUTH (
   c          IN OUT NOCOPY connection,
   username   IN            VARCHAR2,
   password   IN            VARCHAR2,
   schemes    IN            VARCHAR2 DEFAULT NON_CLEARTEXT_PASSWORD_SCHEMES);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17888"></a>Parameters</p>
<div id="ARPLS72086" class="tblformal">
<p class="titleintable"><a id="sthref17889"></a><a id="sthref17890"></a>Table 236-8 AUTH Function and Procedure Parameters</p>
<table class="cellalignment1229" title="AUTH Function and Procedure Parameters " summary="This table describes the Parameters of the UTL_SMTP.AUTH subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t13">Parameter</th>
<th class="cellalignment1227" id="r1c2-t13">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t13" headers="r1c1-t13">
<p><code>c</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t13 r1c2-t13">
<p>SMTP connection</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t13" headers="r1c1-t13">
<p><code>username</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t13 r1c2-t13">
<p>Username</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r4c1-t13" headers="r1c1-t13">
<p><code>password</code></p>
</td>
<td class="cellalignment1228" headers="r4c1-t13 r1c2-t13">
<p>Password</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r5c1-t13" headers="r1c1-t13">
<p><code>schemes</code></p>
</td>
<td class="cellalignment1228" headers="r5c1-t13 r1c2-t13">
<p>Space-separated list of authentication schemes <code>UTL_SMTP</code> is allowed to use in the preferred order. See the <code>ALL_SCHEMES</code> and <code>NON_CLEARTEXT_PASSWORD_SCHEMES</code> constants for suggestions.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17891"></a>Return Values</p>
<div id="ARPLS73423" class="tblformal">
<p class="titleintable"><a id="sthref17892"></a><a id="sthref17893"></a>Table 236-9 AUTH Function and Procedure Function Return Values</p>
<table class="cellalignment1229" title="AUTH Function and Procedure Function Return Values " summary="This table describes Values Returned by the AUTH subprograms." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t14">Return Value</th>
<th class="cellalignment1227" id="r1c2-t14">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t14" headers="r1c1-t14">
<p><code>reply</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t14 r1c2-t14">
<p>Reply of the command (see <a href="#i1007056">REPLY, REPLIES Record Types</a>). In cases where there are multiple replies, the last reply is returned.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17894"></a>Usage Notes</p>
<ul>
<li>
<p>Currently only <code>PLAIN</code>, <code>LOGIN</code> and <code>CRAM-MD5</code> authentication schemes are supported by <code>UTL_SMTP</code>.</p>
</li>
<li>
<p>Since the SMTP server may change the authentication schemes it supports after the SMTP connection is secured by SSL/TLS after the <code>STARTTLS</code> command (for example, adding <code>PLAIN</code> and <code>LOGIN</code>), the caller must call the <a href="#i1003308">EHLO Function and Procedure</a> again for <code>UTL_SMTP</code> to update the list after the <a href="#BABJBFGH">STARTTLS Function and Procedure</a> is called.</p>
</li>
</ul>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17895"></a>Examples</p>
<pre>
DECLARE
  c utl_smtp.connection;
BEGIN
  c := utl_smtp.open_connection(
      host =&gt; 'smtp.example.com',
      port =&gt; 25,
      wallet_path =&gt; 'file:/oracle/wallets/smtp_wallet',
      wallet_password =&gt; '<span class="italic">password</span>',
      secure_connection_before_smtp =&gt; FALSE);
  UTL_SMTP.STARTTLS(c);
  UTL_SMTP.AUTH(
      c =&gt; c,
      username =&gt; 'scott',
      password =&gt; 'password'
      schemes  =&gt; utl_smtp.all_schemes);
END;
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS73115" class="refsect2"><a id="BABCEFGD"></a>
<hr />
<h3 class="refsect2"><a id="sthref17896"></a>CLOSE_CONNECTION Procedure</h3>
<p>This procedure closes the SMTP connection, causing the current SMTP operation to terminate. Use this procedure only to cancel an e-mail in the middle of the data session. To end the SMTP connection properly, use the <a href="#i997611">QUIT Function and Procedure</a>.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17897"></a>Syntax</p>
<pre>
UTL_SMTP.CLOSE_CONNECTION (
   c     IN OUT NOCOPY connection);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17898"></a>Parameters</p>
<div id="ARPLS73116" class="tblformal">
<p class="titleintable"><a id="sthref17899"></a><a id="sthref17900"></a>Table 236-10 CLOSE_CONNECTION Procedure Parameters</p>
<table class="cellalignment1229" title="CLOSE_CONNECTION Procedure Parameters " summary="This table describes the Parameters of the UTL_SMTP.CLOSE_CONNECTION subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t15">Parameter</th>
<th class="cellalignment1227" id="r1c2-t15">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t15" headers="r1c1-t15">
<p><code>c</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t15 r1c2-t15">
<p>SMTP connection</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS71481" class="refsect2"><a id="i1003341"></a>
<hr />
<h3 class="refsect2"><a id="sthref17901"></a>CLOSE_DATA Function and Procedure</h3>
<p>This subprogram ends the e-mail message by sending the sequence <code>&lt;CR&gt;&lt;LF&gt;.&lt;CR&gt;&lt;LF&gt;</code> (a single period at the beginning of a line).</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17902"></a>Syntax</p>
<pre>
UTL_SMTP.CLOSE_DATA (
   c     IN OUT NOCOPY connection) 
RETURN reply;

UTL_SMTP.CLOSE_DATA (
   c     IN OUT NOCOPY connection);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17903"></a>Parameters</p>
<div id="ARPLS71482" class="tblformal">
<p class="titleintable"><a id="sthref17904"></a><a id="sthref17905"></a>Table 236-11 CLOSE_DATA Function and Procedure Parameters</p>
<table class="cellalignment1229" title="CLOSE_DATA Function and Procedure Parameters " summary="This table describes the Parameters of the UTL_SMTP.CLOSE_DATA subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t16">Parameter</th>
<th class="cellalignment1227" id="r1c2-t16">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t16" headers="r1c1-t16">
<p><code>c</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t16 r1c2-t16">
<p>SMTP connection</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17906"></a>Return Values</p>
<div id="ARPLS71483" class="tblformal">
<p class="titleintable"><a id="sthref17907"></a><a id="sthref17908"></a>Table 236-12 CLOSE_DATA Function and Procedure Return Values</p>
<table class="cellalignment1229" title="CLOSE_DATA Function and Procedure Return Values " summary="This table describes Values Returned by the CLOSE_DATA subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t17">Return Value</th>
<th class="cellalignment1227" id="r1c2-t17">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t17" headers="r1c1-t17">
<p><code>reply</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t17 r1c2-t17">
<p>Reply of the command (see <a href="#i1007056">REPLY, REPLIES Record Types</a>). In cases where there are multiple replies, the last reply is returned.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17909"></a>Usage Notes</p>
<p>The calls to <code>OPEN_DATA</code>, <code>WRITE_DATA</code>, <code>WRITE_RAW_DATA</code> and <code>CLOSE_DATA</code> must be made in the right order. A program calls <code>OPEN_DATA</code> to send the <code>DATA</code> command to the SMTP server. After that, it can call <code>WRITE_DATA</code> or <code>WRITE_RAW_DATA</code> repeatedly to send the actual data. The data is terminated by calling <code>CLOSE_DATA</code>. After <code>OPEN_DATA</code> is called, the only subprograms that can be called are <code>WRITE_DATA</code>, <code>WRITE_RAW_DATA,</code> or <code>CLOSE_DATA</code>. A call to other subprograms results in an <code>INVALID_OPERATION</code> exception being raised.</p>
<p><code>CLOSE_DATA</code> must be called only after <code>OPEN_CONNECTION</code>, <code>HELO</code> or <code>EHLO</code>, <code>MAIL</code>, and <code>RCPT</code> have been called. The connection to the SMTP server must be open and a mail transaction must be active when this routine is called.</p>
<p>Note that there is no function form of <code>WRITE_DATA</code> because the SMTP server does not respond until the data-terminator is sent during the call to <code>CLOSE_DATA</code>.</p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS71484" class="refsect2"><a id="i1003617"></a>
<hr />
<h3 class="refsect2"><a id="sthref17910"></a>COMMAND Function and Procedure</h3>
<p>This subprogram performs a generic SMTP command.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17911"></a>Syntax</p>
<pre>
UTL_SMTP.COMMAND (
   c     IN OUT NOCOPY    connection,
   cmd   IN               VARCHAR2,
   arg   IN               VARCHAR2 DEFAULT NULL)
RETURN reply;

UTL_SMTP.COMMAND (
   c     IN OUT NOCOPY    connection,
   cmd   IN               VARCHAR2,
   arg   IN               VARCHAR2 DEFAULT NULL);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17912"></a>Parameters</p>
<div id="ARPLS71485" class="tblformal">
<p class="titleintable"><a id="sthref17913"></a><a id="sthref17914"></a>Table 236-13 COMMAND Function and Procedure Parameters</p>
<table class="cellalignment1229" title="COMMAND Function and Procedure Parameters " summary="This table describes the Parameters of the UTL_SMTP.COMMAND subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t18">Parameter</th>
<th class="cellalignment1227" id="r1c2-t18">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t18" headers="r1c1-t18">
<p><code>c</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t18 r1c2-t18">
<p>SMTP connection</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t18" headers="r1c1-t18">
<p><code>cmd</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t18 r1c2-t18">
<p>SMTP command to send to the server</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r4c1-t18" headers="r1c1-t18">
<p><code>arg</code></p>
</td>
<td class="cellalignment1228" headers="r4c1-t18 r1c2-t18">
<p>Optional argument to the SMTP argument. A space is inserted between <code>cmd</code> and <code>arg</code>.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17915"></a>Return Values</p>
<div id="ARPLS71486" class="tblformal">
<p class="titleintable"><a id="sthref17916"></a><a id="sthref17917"></a>Table 236-14 COMMAND Function and Procedure Return Values</p>
<table class="cellalignment1229" title="COMMAND Function and Procedure Return Values " summary="This table describes Values Returned by the COMMAND subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t19">Return Value</th>
<th class="cellalignment1227" id="r1c2-t19">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t19" headers="r1c1-t19">
<p><code>reply</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t19 r1c2-t19">
<p>Reply of the command (see <a href="#i1007056">REPLY, REPLIES Record Types</a>). In cases where there are multiple replies, the last reply is returned.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17918"></a>Usage Notes</p>
<p>This function is used to invoke generic SMTP commands. Use <code>COMMAND</code> if only a single reply line is expected. Use <code>COMMAND_REPLIES</code> if multiple reply lines are expected.</p>
<p>For <code>COMMAND</code>, if multiple reply lines are returned from the SMTP server, it returns the last reply line only.</p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS71487" class="refsect2"><a id="i997284"></a>
<hr />
<h3 class="refsect2"><a id="sthref17919"></a>COMMAND_REPLIES Function</h3>
<p>This function performs a generic SMTP command and retrieves multiple reply lines.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17920"></a>Syntax</p>
<pre>
UTL_SMTP.COMMAND_REPLIES (
   c     IN OUT NOCOPY    connection,
   cmd   IN               VARCHAR2,
   arg   IN               VARCHAR2 DEFAULT NULL)
RETURN replies;
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17921"></a>Parameters</p>
<div id="ARPLS71488" class="tblformal">
<p class="titleintable"><a id="sthref17922"></a><a id="sthref17923"></a>Table 236-15 COMMAND_REPLIES Function Parameters</p>
<table class="cellalignment1229" title="COMMAND_REPLIES Function Parameters " summary="This table describes the Parameters of the UTL_SMTP.COMMAND_REPLIES subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t20">Parameter</th>
<th class="cellalignment1227" id="r1c2-t20">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t20" headers="r1c1-t20">
<p><code>c</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t20 r1c2-t20">
<p>SMTP connection</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t20" headers="r1c1-t20">
<p><code>cmd</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t20 r1c2-t20">
<p>SMTP command to send to the server</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r4c1-t20" headers="r1c1-t20">
<p><code>arg</code></p>
</td>
<td class="cellalignment1228" headers="r4c1-t20 r1c2-t20">
<p>Optional argument to the SMTP argument. A space is inserted between <code>cmd</code> and <code>arg</code>.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17924"></a>Return Values</p>
<div id="ARPLS71489" class="tblformal">
<p class="titleintable"><a id="sthref17925"></a><a id="sthref17926"></a>Table 236-16 COMMAND_REPLIES Function Return Values</p>
<table class="cellalignment1229" title="COMMAND_REPLIES Function Return Values " summary="This table describes Values Returned by the COMMAND_REPLIES subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t21">Return Value</th>
<th class="cellalignment1227" id="r1c2-t21">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t21" headers="r1c1-t21">
<p><code>replies</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t21 r1c2-t21">
<p>Reply of the command (see <a href="#i1007056">REPLY, REPLIES Record Types</a>)</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17927"></a>Usage Notes</p>
<p>This function is used to invoke generic SMTP commands. Use <code>COMMAND</code> if only a single reply line is expected. Use <code>COMMAND_REPLIES</code> if multiple reply lines are expected.</p>
<p>For <code>COMMAND</code>, if multiple reply lines are returned from the SMTP server, it returns the last reply line only.</p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS71490" class="refsect2"><a id="i1002758"></a>
<hr />
<h3 class="refsect2"><a id="sthref17928"></a>DATA Function and Procedure</h3>
<p>This subprogram specifies the body of an e-mail message.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17929"></a>Syntax</p>
<pre>
UTL_SMTP.DATA (
   c     IN OUT NOCOPY connection
   body  IN  VARCHAR2 CHARACTER SET ANY_CS) 
RETURN reply;

UTL_SMTP.DATA (
   c     IN OUT NOCOPY connection
   body  IN VARCHAR2 CHARACTER SET ANY_CS);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17930"></a>Parameters</p>
<div id="ARPLS71491" class="tblformal">
<p class="titleintable"><a id="sthref17931"></a><a id="sthref17932"></a>Table 236-17 DATA Function and Procedure Parameters</p>
<table class="cellalignment1229" title="DATA Function and Procedure Parameters" summary="This table describes the Parameters of the UTL_SMTP.DATA subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t22">Parameter</th>
<th class="cellalignment1227" id="r1c2-t22">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t22" headers="r1c1-t22">
<p><code>c</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t22 r1c2-t22">
<p>SMTP Connection</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t22" headers="r1c1-t22">
<p><code>body</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t22 r1c2-t22">
<p>Text of the message to be sent, including headers, in [RFC822] format</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17933"></a>Return Values</p>
<div id="ARPLS71492" class="tblformal">
<p class="titleintable"><a id="sthref17934"></a><a id="sthref17935"></a>Table 236-18 DATA Function and Procedure Return Values</p>
<table class="cellalignment1229" title="DATA Function and Procedure Return Values " summary="This table describes Values Returned by the DATA subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t23">Return Value</th>
<th class="cellalignment1227" id="r1c2-t23">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t23" headers="r1c1-t23">
<p><code>reply</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t23 r1c2-t23">
<p>Reply of the command (see <a href="#i1007056">REPLY, REPLIES Record Types</a>). In cases where there are multiple replies, the last reply is returned.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17936"></a>Usage Notes</p>
<p>The application must ensure that the contents of the body parameter conform to the MIME(RFC822) specification. The <code>DATA</code> routine terminates the message with a <code>&lt;CR&gt;&lt;LF&gt;.&lt;CR&gt;&lt;LF&gt;</code> sequence (a single period at the beginning of a line), as required by RFC821. It also translates any sequence of <code>&lt;CR&gt;&lt;LF&gt;.&lt;CR&gt;&lt;LF&gt;</code> (single period) in body to <code>&lt;CR&gt;&lt;LF&gt;..&lt;CR&gt;&lt;LF&gt;</code> (double period). This conversion provides the transparency as described in Section 4.5.2 of RFC821.</p>
<p>The <code>DATA</code> subprogram must be called only after <code>OPEN_CONNECTION</code>, <code>HELO</code> or <code>EHLO</code>, <code>MAIL</code> and <code>RCPT</code> have been called. The connection to the SMTP server must be open, and a mail transaction must be active when this routine is called.</p>
<p>The expected response from the server is a message beginning with status code 250. The 354 response received from the initial <code>DATA</code> command is not returned to the caller.</p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS71493" class="refsect2"><a id="i1003308"></a>
<hr />
<h3 class="refsect2"><a id="sthref17937"></a>EHLO Function and Procedure</h3>
<p>This subprogram performs the initial handshake with SMTP server using the <code>EHLO</code> command.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17938"></a>Syntax</p>
<pre>
UTL_SMTP.EHLO (
   c       IN OUT NOCOPY connection, 
   domain  IN) 
RETURN replies;

UTL_SMTP.EHLO (
   c       IN OUT NOCOPY connection, 
   domain  IN);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17939"></a>Parameters</p>
<div id="ARPLS71494" class="tblformal">
<p class="titleintable"><a id="sthref17940"></a><a id="sthref17941"></a>Table 236-19 EHLO Function and Procedure Parameters</p>
<table class="cellalignment1229" title="EHLO Function and Procedure Parameters" summary="This table describes the Parameters of the UTL_SMTP.EHLO subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t24">Parameter</th>
<th class="cellalignment1227" id="r1c2-t24">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t24" headers="r1c1-t24">
<p><code>c</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t24 r1c2-t24">
<p>SMTP connection</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t24" headers="r1c1-t24">
<p><code>domain</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t24 r1c2-t24">
<p>Domain name of the local (sending) host. Used for identification purposes.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17942"></a>Return Values</p>
<div id="ARPLS71495" class="tblformal">
<p class="titleintable"><a id="sthref17943"></a><a id="sthref17944"></a>Table 236-20 EHLO Function and Procedure Return Values</p>
<table class="cellalignment1229" title="EHLO Function and Procedure Return Values " summary="This table describes Values Returned by the EHLO subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t25">Return Value</th>
<th class="cellalignment1227" id="r1c2-t25">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t25" headers="r1c1-t25">
<p><code>replies</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t25 r1c2-t25">
<p>Reply of the command (see <a href="#i1007056">REPLY, REPLIES Record Types</a>).</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17945"></a>Usage Notes</p>
<p>The <code>EHLO</code> interface is identical to <code>HELO</code> except that it allows the server to return more descriptive information about its configuration. [RFC1869] specifies the format of the information returned, which the PL/SQL application can retrieve using the functional form of this call. For compatibility with <code>HELO,</code> each line of text returned by the server begins with status code 250.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17946"></a>Related Functions</p>
<p><a href="#i1004728">HELO Function and Procedure</a></p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS71496" class="refsect2"><a id="i1004728"></a>
<hr />
<h3 class="refsect2"><a id="sthref17947"></a>HELO Function and Procedure</h3>
<p>This subprogram performs the initial handshake with SMTP server using the <code>HELO</code> command.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17948"></a>Syntax</p>
<pre>
UTL_SMTP.HELO (
   c       IN OUT NOCOPY   connection, 
   domain  IN              VARCHAR2) 
RETURN reply;

UTL_SMTP.HELO (
   c       IN OUT NOCOPY   connection, 
   domain  IN              VARCHAR2);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17949"></a>Parameters</p>
<div id="ARPLS71497" class="tblformal">
<p class="titleintable"><a id="sthref17950"></a><a id="sthref17951"></a>Table 236-21 HELO Function and Procedure Parameters</p>
<table class="cellalignment1229" title="HELO Function and Procedure Parameters" summary="This table describes the Parameters of the UTL_SMTP.HELO subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t26">Parameter</th>
<th class="cellalignment1227" id="r1c2-t26">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t26" headers="r1c1-t26">
<p><code>c</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t26 r1c2-t26">
<p>SMTP connection</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t26" headers="r1c1-t26">
<p><code>domain</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t26 r1c2-t26">
<p>Domain name of the local (sending) host. Used for identification purposes.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17952"></a>Return Values</p>
<div id="ARPLS71498" class="tblformal">
<p class="titleintable"><a id="sthref17953"></a><a id="sthref17954"></a>Table 236-22 HELO Function and Procedure Return Values</p>
<table class="cellalignment1229" title="HELO Function and Procedure Return Values " summary="This table describes Values Returned by the HELO subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t27">Return Value</th>
<th class="cellalignment1227" id="r1c2-t27">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t27" headers="r1c1-t27">
<p><code>reply</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t27 r1c2-t27">
<p>Reply of the command (see <a href="#i1007056">REPLY, REPLIES Record Types</a>). In cases where there are multiple replies, the last reply is returned.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17955"></a>Usage Notes</p>
<p>RFC 821 specifies that the client must identify itself to the server after connecting. This routine performs that identification. The connection must have been opened through a call to <a href="#i1002710">OPEN_CONNECTION Functions</a> before calling this routine.</p>
<p>The expected response from the server is a message beginning with status code 250.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17956"></a>Related Functions</p>
<p><a href="#i1003308">EHLO Function and Procedure</a></p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS71499" class="refsect2"><a id="i1004779"></a>
<hr />
<h3 class="refsect2"><a id="sthref17957"></a>HELP Function</h3>
<p>This function sends the <code>HELP</code> command.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17958"></a>Syntax</p>
<pre>
UTL_SMTP.HELP (
   c         IN OUT NOCOPY   connection, 
   command   IN              VARCHAR2 DEFAULT NULL) 
RETURN replies;
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17959"></a>Parameters</p>
<div id="ARPLS71500" class="tblformal">
<p class="titleintable"><a id="sthref17960"></a><a id="sthref17961"></a>Table 236-23 HELP Function Parameters</p>
<table class="cellalignment1229" title="HELP Function Parameters" summary="This table describes the Parameters of the UTL_SMTP.HELP subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t28">Parameter</th>
<th class="cellalignment1227" id="r1c2-t28">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t28" headers="r1c1-t28">
<p><code>c</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t28 r1c2-t28">
<p>SMTP connection</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t28" headers="r1c1-t28">
<p><code>command</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t28 r1c2-t28">
<p>Command to get the help message</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17962"></a>Return Values</p>
<div id="ARPLS71501" class="tblformal">
<p class="titleintable"><a id="sthref17963"></a><a id="sthref17964"></a>Table 236-24 HELP Function Return Values</p>
<table class="cellalignment1229" title="HELP Function Return Values " summary="This table describes Values Returned by the HELP subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t29">Return Value</th>
<th class="cellalignment1227" id="r1c2-t29">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t29" headers="r1c1-t29">
<p><code>replies</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t29 r1c2-t29">
<p>Reply of the command (see <a href="#i1007056">REPLY, REPLIES Record Types</a>)</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS71502" class="refsect2"><a id="i1001650"></a>
<hr />
<h3 class="refsect2"><a id="sthref17965"></a>MAIL Function and Procedure</h3>
<p>This subprogram initiate a mail transaction with the server. The destination is a mailbox.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17966"></a>Syntax</p>
<pre>
UTL_SMTP.MAIL (
   c           IN OUT NOCOPY   connection, 
   sender      IN              VARCHAR2, 
   parameters  IN              VARCHAR2 DEFAULT NULL) 
RETURN reply;

UTL_SMTP.MAIL (
   c           IN OUT NOCOPY   connection, 
   sender      IN              VARCHAR2, 
   parameters  IN              VARCHAR2 DEFAULT NULL);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17967"></a>Parameters</p>
<div id="ARPLS71503" class="tblformal">
<p class="titleintable"><a id="sthref17968"></a><a id="sthref17969"></a>Table 236-25 MAIL Function and Procedure Parameters</p>
<table class="cellalignment1229" title="MAIL Function and Procedure Parameters" summary="This table describes the Parameters of the UTL_SMTP.MAIL subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t30">Parameter</th>
<th class="cellalignment1227" id="r1c2-t30">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t30" headers="r1c1-t30">
<p><code>c</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t30 r1c2-t30">
<p>SMTP connection</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t30" headers="r1c1-t30">
<p><code>sender</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t30 r1c2-t30">
<p>E-mail address of the user sending the message.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r4c1-t30" headers="r1c1-t30">
<p><code>parameters</code></p>
</td>
<td class="cellalignment1228" headers="r4c1-t30 r1c2-t30">
<p>Additional parameters to <code>mail</code> command as defined in Section 6 of [RFC1869]. It must follow the format of "XXX=XXX (XXX=XXX ....)".</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17970"></a>Return Values</p>
<div id="ARPLS71504" class="tblformal">
<p class="titleintable"><a id="sthref17971"></a><a id="sthref17972"></a>Table 236-26 MAIL Function and Procedure Return Values</p>
<table class="cellalignment1229" title="MAIL Function and Procedure Return Values " summary="This table describes Values Returned by the MAIL subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t31">Return Value</th>
<th class="cellalignment1227" id="r1c2-t31">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t31" headers="r1c1-t31">
<p><code>reply</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t31 r1c2-t31">
<p>Reply of the command (see <a href="#i1007056">REPLY, REPLIES Record Types</a>). In cases where there are multiple replies, the last reply is returned.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17973"></a>Usage Notes</p>
<p>This command does not send the message; it simply begins its preparation. It must be followed by calls to <code>RCPT</code> and <code>DATA</code> to complete the transaction. The connection to the SMTP server must be open and a <code>HELO</code> or <code>EHLO</code> command must have already been sent.</p>
<p>The expected response from the server is a message beginning with status code 250.</p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS71505" class="refsect2"><a id="i1005000"></a>
<hr />
<h3 class="refsect2"><a id="sthref17974"></a>NOOP Function and Procedure</h3>
<p>This subprogram issues the <code>NULL</code> command.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17975"></a>Syntax</p>
<pre>
UTL_SMTP.NOOP (
   c  IN OUT NOCOPY connection) 
RETURN reply;

UTL_SMTP.NOOP (
   c  IN OUT NOCOPY connection);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17976"></a>Parameter</p>
<div id="ARPLS71506" class="tblformal">
<p class="titleintable"><a id="sthref17977"></a><a id="sthref17978"></a>Table 236-27 NOOP Function and Procedure Parameters</p>
<table class="cellalignment1229" title="NOOP Function and Procedure Parameters " summary="This table describes the Parameters of the UTL_SMTP.NOOP subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t32">Parameter</th>
<th class="cellalignment1227" id="r1c2-t32">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t32" headers="r1c1-t32">
<p><code>c</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t32 r1c2-t32">
<p>SMTP connection</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17979"></a>Return Values</p>
<div id="ARPLS71507" class="tblformal">
<p class="titleintable"><a id="sthref17980"></a><a id="sthref17981"></a>Table 236-28 NOOP Function and Procedure Return Values</p>
<table class="cellalignment1229" title="NOOP Function and Procedure Return Values " summary="This table describes Values Returned by the NOOP subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t33">Return Value</th>
<th class="cellalignment1227" id="r1c2-t33">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t33" headers="r1c1-t33">
<p><code>reply</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t33 r1c2-t33">
<p>Reply of the command (see <a href="#i1007056">REPLY, REPLIES Record Types</a>). In cases where there are multiple replies, the last reply is returned.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17982"></a>Usage Notes</p>
<ul>
<li>
<p>This command has no effect except to elicit a successful reply from the server. It can be issued at any time after the connection to the server has been established with <code>OPEN_CONNECTION</code>. The <code>NOOP</code> command can be used to verify that the server is still connected and is listening properly.</p>
</li>
<li>
<p>This command replies with a single line beginning with status code 250.</p>
</li>
</ul>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS71508" class="refsect2"><a id="i1002710"></a>
<hr />
<h3 class="refsect2"><a id="sthref17983"></a>OPEN_CONNECTION Functions</h3>
<p>These functions open a connection to an SMTP server.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
This functionality associated with <code>wallet_path</code>, <code>wallet_password</code> and <code>secure_connection_before_smtp</code> is available starting with Oracle Database 11<span class="italic">g</span> Release 2 (11.2.0.2).</div>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17984"></a>Syntax</p>
<pre>
UTL_SMTP.OPEN_CONNECTION (
   host                            IN  VARCHAR2, 
   port                            IN  PLS_INTEGER DEFAULT 25, 
   c                               OUT connection, 
   tx_timeout                      IN  PLS_INTEGER DEFAULT NULL,
   wallet_path                     IN  VARCHAR2 DEFAULT NULL,
   wallet_password                 IN  VARCHAR2 DEFAULT NULL, 
   secure_connection_before_smtp   IN  BOOLEAN DEFAULT FALSE)
 RETURN reply; 

UTL_SMTP.OPEN_CONNECTION (
   host                           IN  VARCHAR2, 
   port                           IN  PLS_INTEGER DEFAULT 25, 
   tx_timeout                     IN  PLS_INTEGER DEFAULT NULL,
   wallet_path                    IN  VARCHAR2 DEFAULT NULL,
   wallet_password                IN  VARCHAR2 DEFAULT NULL, 
   secure_connection_before_smtp  IN  BOOLEAN DEFAULT FALSE) 
RETURN reply; 
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17985"></a>Parameters</p>
<div id="ARPLS71509" class="tblformal">
<p class="titleintable"><a id="sthref17986"></a><a id="sthref17987"></a>Table 236-29 OPEN_CONNECTION Functions Parameters</p>
<table class="cellalignment1229" title="OPEN_CONNECTION Functions Parameters " summary="This table describes the Parameters of the UTL_SMTP.OPEN_CONNECTION subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t35">Parameter</th>
<th class="cellalignment1227" id="r1c2-t35">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t35" headers="r1c1-t35">
<p><code>host</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t35 r1c2-t35">
<p>Name of the SMTP server host</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t35" headers="r1c1-t35">
<p><code>port</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t35 r1c2-t35">
<p>Port number on which SMTP server is listening (usually 25)</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r4c1-t35" headers="r1c1-t35">
<p><code>c</code></p>
</td>
<td class="cellalignment1228" headers="r4c1-t35 r1c2-t35">
<p>SMTP connection</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r5c1-t35" headers="r1c1-t35">
<p><code>tx_timeout</code></p>
</td>
<td class="cellalignment1228" headers="r5c1-t35 r1c2-t35">
<p>Time in seconds that the <code>UTL_SMTP</code> package waits before timing out in a read or write operation for this connection. In read operations, this package times out if no data is available for reading immediately. In write operations, this package times out if the output buffer is full and no data is to be sent into the network without being blocked. <code>0</code> indicates not to wait at all. <code>NULL</code> indicates to wait forever.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r6c1-t35" headers="r1c1-t35">
<p><code>wallet_path</code></p>
</td>
<td class="cellalignment1228" headers="r6c1-t35 r1c2-t35">
<p>Directory path that contains the Oracle wallet for SSL/TLS. The format is <code>file</code>: <code>&lt;directory-path&gt;</code></p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r7c1-t35" headers="r1c1-t35">
<p><code>wallet_password</code></p>
</td>
<td class="cellalignment1228" headers="r7c1-t35 r1c2-t35">
<p>Password to open the wallet. When the wallet is auto-login enabled, the password can be set to <code>NULL</code>.</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r8c1-t35" headers="r1c1-t35">
<p><code>secure_connection_before_smtp</code></p>
</td>
<td class="cellalignment1228" headers="r8c1-t35 r1c2-t35">
<p>If <code>TRUE</code>, a secure connection with SSL/TLS is made before SMTP communication. If <code>FALSE</code>, no connection is made.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17988"></a>Return Values</p>
<div id="ARPLS73424" class="tblformal">
<p class="titleintable"><a id="sthref17989"></a><a id="sthref17990"></a>Table 236-30 OPEN_CONNECTION Functions Return Values</p>
<table class="cellalignment1229" title="OPEN_CONNECTION Functions Return Values " summary="This table describes Values Returned by the OPEN_CONNECTION subprograms." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t36">Return Value</th>
<th class="cellalignment1227" id="r1c2-t36">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t36" headers="r1c1-t36">
<p><code>reply</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t36 r1c2-t36">
<p>Reply of the command (see <a href="#i1007056">REPLY, REPLIES Record Types</a>). In cases where there are multiple replies, the last reply is returned.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17991"></a>Usage Notes</p>
<ul>
<li>
<p>The expected response from the server is a message beginning with status code 220.</p>
</li>
<li>
<p>The version of <code>OPEN_CONNECTION</code> that returns <code>UTL_SMTP</code>.<code>CONNECTION</code> record checks the reply code returned by an SMTP server when the connection is first established. It raises an exception when the reply indicates an error. Otherwise, it discards the reply. If you want to examine the reply, invoke the version of <code>OPEN_CONNECTION</code> that returns <code>REPLY</code>.</p>
</li>
<li>
<p><code>tx_timeout</code> is intended to govern both the read operations and the write operations. However, an implementation restriction prevents <code>tx_timeout</code> from governing write operations in the current release.</p>
</li>
</ul>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17992"></a>Examples</p>
<pre>
DECLARE
  c utl_smtp.connection;
BEGIN
  c := UTL_SMTP.OPEN_CONNECTION(
   host =&gt; 'smtp.example.com',
   port =&gt; 465,
   wallet_path =&gt; 'file:/oracle/wallets/smtp_wallet',
   wallet_password =&gt; '<span class="italic">password</span>',
   secure_connection_before_smtp =&gt; TRUE);
END;
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS71511" class="refsect2"><a id="i1002852"></a>
<hr />
<h3 class="refsect2"><a id="sthref17993"></a>OPEN_DATA Function and Procedure</h3>
<p>This subprogram sends the <code>DATA</code> command after which you can use <code>WRITE_DATA</code> and <code>WRITE_RAW_DATA</code> to write a portion of the e-mail message.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17994"></a>Syntax</p>
<pre>
UTL_SMTP.OPEN_DATA (
   c     IN OUT NOCOPY connection) 
RETURN reply;

UTL_SMTP.OPEN_DATA (
   c     IN OUT NOCOPY connection);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17995"></a>Parameters</p>
<div id="ARPLS71512" class="tblformal">
<p class="titleintable"><a id="sthref17996"></a><a id="sthref17997"></a>Table 236-31 OPEN_DATA Function and Procedure Parameters</p>
<table class="cellalignment1229" title="OPEN_DATA Function and Procedure Parameters " summary="This table describes the Parameters of the UTL_SMTP.OPEN_DATA subprograms." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t37">Parameter</th>
<th class="cellalignment1227" id="r1c2-t37">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t37" headers="r1c1-t37">
<p><code>c</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t37 r1c2-t37">
<p>SMTP connection</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t37" headers="r1c1-t37">
<p><code>data</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t37 r1c2-t37">
<p>Portion of the text of the message to be sent, including headers, in RFC822 format.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref17998"></a>Return Values</p>
<div id="ARPLS71513" class="tblformal">
<p class="titleintable"><a id="sthref17999"></a><a id="sthref18000"></a>Table 236-32 OPEN_DATA Function and Procedure Function Return Values</p>
<table class="cellalignment1229" title="OPEN_DATA Function and Procedure Function Return Values " summary="This table describes Values Returned by the OPEN_DATA subprograms." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t38">Return Value</th>
<th class="cellalignment1227" id="r1c2-t38">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t38" headers="r1c1-t38">
<p><code>reply</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t38 r1c2-t38">
<p>Reply of the command (see <a href="#i1007056">REPLY, REPLIES Record Types</a>). In cases where there are multiple replies, the last reply is returned.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18001"></a>Usage Notes</p>
<ul>
<li>
<p>The calls to <code>OPEN_DATA</code>, <code>WRITE_DATA</code>, <code>WRITE_RAW_DATA</code> and <code>CLOSE_DATA</code> must be made in the right order. A program calls <code>OPEN_DATA</code> to send the <code>DATA</code> command to the SMTP server. After that, it can call <code>WRITE_DATA</code> or <code>WRITE_RAW_DATA</code> repeatedly to send the actual data. The data is terminated by calling <code>CLOSE_DATA</code>. After <code>OPEN_DATA</code> is called, the only subprograms that can be called are <code>WRITE_DATA</code>, <code>WRITE_RAW_DATA,</code> or <code>CLOSE_DATA</code>. A call to other subprograms results in an <code>INVALID_OPERATION</code> exception being raised.</p>
</li>
<li>
<p><code>OPEN_DATA</code> must be called only after <code>OPEN_CONNECTION</code>, <code>HELO</code> or <code>EHLO</code>, <code>MAIL</code>, and <code>RCPT</code> have been called. The connection to the SMTP server must be open and a mail transaction must be active when this routine is called.</p>
</li>
</ul>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS71514" class="refsect2"><a id="i997611"></a>
<hr />
<h3 class="refsect2"><a id="sthref18002"></a>QUIT Function and Procedure</h3>
<p>This subprogram terminates an SMTP session and disconnects from the server.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18003"></a>Syntax</p>
<pre>
UTL_SMTP.QUIT (
   c  IN OUT NOCOPY connection) 
RETURN reply;

UTL_SMTP.QUIT (
   c  IN OUT NOCOPY connection);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18004"></a>Parameter</p>
<div id="ARPLS71515" class="tblformal">
<p class="titleintable"><a id="sthref18005"></a><a id="sthref18006"></a>Table 236-33 QUIT Function and Procedure Parameters</p>
<table class="cellalignment1229" title="QUIT Function and Procedure Parameters " summary="This table describes the Parameters of the UTL_SMTP.QUIT subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t39">Parameter</th>
<th class="cellalignment1227" id="r1c2-t39">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t39" headers="r1c1-t39">
<p><code>c</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t39 r1c2-t39">
<p>SMTP connection</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18007"></a>Return Values</p>
<div id="ARPLS71516" class="tblformal">
<p class="titleintable"><a id="sthref18008"></a><a id="sthref18009"></a>Table 236-34 QUIT Function and Procedure Function Return Values</p>
<table class="cellalignment1229" title="QUIT Function and Procedure Function Return Values " summary="This table describes Values Returned by the QUIT subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t40">Return Value</th>
<th class="cellalignment1227" id="r1c2-t40">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t40" headers="r1c1-t40">
<p><code>reply</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t40 r1c2-t40">
<p>Reply of the command (see <a href="#i1007056">REPLY, REPLIES Record Types</a>). In cases where there are multiple replies, the last reply is returned.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18010"></a>Usage Notes</p>
<p>The <code>QUIT</code> command informs the SMTP server of the client's intent to terminate the session. It then closes the connection established by <code>OPEN_CONNECTION</code> which must have been called before executing this command. If a mail transaction is in progress when <code>QUIT</code> is issued, it is canceled in the same manner as <code>RSET.</code></p>
<p>The function form of this command returns a single line beginning with the status code 221 on successful termination. In all cases, the connection to the SMTP server is closed. The fields <code>REMOTE_HOST</code> and <code>REMOTE_PORT</code> of <code>c</code> are reset.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18011"></a>Related Functions</p>
<p><a id="i997637"></a><a href="#i1004041">RSET Function and Procedure</a></p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS71517" class="refsect2"><a id="i1002798"></a>
<hr />
<h3 class="refsect2"><a id="sthref18012"></a>RCPT Function</h3>
<p>This subprogram specifies the recipient of an e-mail message.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18013"></a>Syntax</p>
<pre>
UTL_SMTP.RCPT (
   c           IN OUT NOCOPY     connection,
   recipient   IN                VARCHAR2,
   parameters  IN                VARCHAR2 DEFAULT NULL)
RETURN reply;

UTL_SMTP.RCPT (
   c           IN OUT NOCOPY     connection,
   recipient   IN                VARCHAR2,
   parameters  IN                VARCHAR2 DEFAULT NULL);
</pre>
<div id="ARPLS71518" class="tblformal">
<p class="titleintable"><a id="sthref18014"></a><a id="sthref18015"></a>Table 236-35 RCPT Function and Procedure Parameters</p>
<table class="cellalignment1229" title="RCPT Function and Procedure Parameters" summary="This table describes the Parameters of the UTL_SMTP.RCPT subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t41">Parameter</th>
<th class="cellalignment1227" id="r1c2-t41">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t41" headers="r1c1-t41">
<p><code>c</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t41 r1c2-t41">
<p>SMTP connection</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t41" headers="r1c1-t41">
<p><code>recipient</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t41 r1c2-t41">
<p>E-mail address of the user to which the message is being sent</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r4c1-t41" headers="r1c1-t41">
<p><code>parameters</code></p>
</td>
<td class="cellalignment1228" headers="r4c1-t41 r1c2-t41">
<p>Additional parameters to RCPT command as defined in Section 6 of [RFC1869]. It must follow the format of "XXX=XXX (XXX=XXX ....)".</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18016"></a>Return Values</p>
<div id="ARPLS71519" class="tblformal">
<p class="titleintable"><a id="sthref18017"></a><a id="sthref18018"></a>Table 236-36 RCPT Function and Procedure Function Return Values</p>
<table class="cellalignment1229" title="RCPT Function and Procedure Function Return Values " summary="This table describes Values Returned by the RCPT subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t42">Return Value</th>
<th class="cellalignment1227" id="r1c2-t42">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t42" headers="r1c1-t42">
<p><code>reply</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t42 r1c2-t42">
<p>Reply of the command (see <a href="#i1007056">REPLY, REPLIES Record Types</a>). In cases where there are multiple replies, the last reply is returned.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18019"></a>Usage Notes</p>
<p>To send a message to multiple recipients, call this routine multiple times. Each invocation schedules delivery to a single e-mail address. The message transaction must have been begun by a prior call to <code>MAIL</code>, and the connection to the mail server must have been opened and initialized by prior calls to <code>OPEN_CONNECTION</code> and <code>HELO</code> or <code>EHLO</code> respectively.</p>
<p>The expected response from the server is a message beginning with status code 250 or 251.</p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS71520" class="refsect2"><a id="i1004041"></a>
<hr />
<h3 class="refsect2">RSET Function and Procedure</h3>
<p>This subprogram terminates the current mail transaction.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18020"></a>Syntax</p>
<pre>
UTL_SMTP.RSET (
   c  IN OUT NOCOPY connection) 
RETURN reply;

UTL_SMTP.RSET (
   c  IN OUT NOCOPY connection);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18021"></a>Parameters</p>
<div id="ARPLS71521" class="tblformal">
<p class="titleintable"><a id="sthref18022"></a><a id="sthref18023"></a>Table 236-37 RSET Function and Procedure Parameters</p>
<table class="cellalignment1229" title="RSET Function and Procedure Parameters" summary="This table describes the Parameters of the UTL_SMTP.RSET subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t43">Parameter</th>
<th class="cellalignment1227" id="r1c2-t43">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t43" headers="r1c1-t43">
<p><code>c</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t43 r1c2-t43">
<p>SMTP connection</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18024"></a>Return Values</p>
<div id="ARPLS71522" class="tblformal">
<p class="titleintable"><a id="sthref18025"></a><a id="sthref18026"></a>Table 236-38 RSET Function and Procedure Return Values</p>
<table class="cellalignment1229" title="RSET Function and Procedure Return Values " summary="This table describes Values Returned by the RSET subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t44">Return Value</th>
<th class="cellalignment1227" id="r1c2-t44">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t44" headers="r1c1-t44">
<p><code>reply</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t44 r1c2-t44">
<p>Reply of the command (see <a href="#i1007056">REPLY, REPLIES Record Types</a>). In cases where there are multiple replies, the last reply is returned.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18027"></a>Usage Notes</p>
<ul>
<li>
<p>This command allows the client to cancel an e-mail message it was in the process of composing. No mail is sent. The client can call <code>RSET</code> at any time after the connection to the SMTP server has been opened by means of <code>OPEN_CONNECTION</code> until <code>DATA</code> or <code>OPEN_DATA</code> is called. Once the e-mail data has been sent, it is too late to prevent the e-mail from being sent.</p>
</li>
<li>
<p>The server responds to <code>RSET</code> with a message beginning with status code 250.</p>
</li>
</ul>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18028"></a>Related Functions</p>
<p><a href="#i997611">QUIT Function and Procedure</a></p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS73117" class="refsect2"><a id="BABJBFGH"></a>
<hr />
<h3 class="refsect2"><a id="sthref18029"></a>STARTTLS Function and Procedure</h3>
<p>This subprogram sends the <code>STARTTLS</code> command to secure the SMTP connection using SSL/TLS. SSL/TLS requires an Oracle wallet which must be specified when the connection was opened by the <a href="#i1002710">OPEN_CONNECTION Functions</a>.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18030"></a>Syntax</p>
<pre>
UTL_SMTP.STARTTLS (
   c  IN OUT NOCOPY connection) 
RETURN reply;

UTL_SMTP.STARTTLS (
   c  IN OUT NOCOPY connection);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18031"></a>Parameters</p>
<div id="ARPLS73118" class="tblformal">
<p class="titleintable"><a id="sthref18032"></a><a id="sthref18033"></a>Table 236-39 STARTTLS Function and Procedure Parameters</p>
<table class="cellalignment1229" title="STARTTLS Function and Procedure Parameters" summary="This table describes the Parameters of the UTL_SMTP.STARTTLS subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t45">Parameter</th>
<th class="cellalignment1227" id="r1c2-t45">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t45" headers="r1c1-t45">
<p><code>c</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t45 r1c2-t45">
<p>SMTP connection</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18034"></a>Return Values</p>
<div id="ARPLS73119" class="tblformal">
<p class="titleintable"><a id="sthref18035"></a><a id="sthref18036"></a>Table 236-40 STARTTLS Function and Procedure Return Values</p>
<table class="cellalignment1229" title="STARTTLS Function and Procedure Return Values " summary="This table describes Values Returned by the STARTTLSsubprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t46">Return Value</th>
<th class="cellalignment1227" id="r1c2-t46">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t46" headers="r1c1-t46">
<p><code>reply</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t46 r1c2-t46">
<p>SMTP reply</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18037"></a>Usage Notes</p>
<p>The <code>STARTTLS</code> command must only be issued on an unencrypted connection and when the SMTP server indicates the support of the command in the reply of the <code>EHLO</code> command. The wallet to be used for encryption must have been specified when the initial SMTP connection was opened by the <code>OPEN_CONNECTION</code> function.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18038"></a>Examples</p>
<pre>
DECLARE
  c utl_smtp.connection;
BEGIN
  c := utl_smtp.open_connection(
     host =&gt; 'smtp.example.com',
     port =&gt; 25,
     wallet_path =&gt; 'file:/oracle/wallets/smtp_wallet',
     wallet_password =&gt; '<span class="italic">password</span>',
     secure_connection_before_smtp =&gt; FALSE);
  utl_smtp.starttls(c);
END
</pre></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS71523" class="refsect2"><a id="i1002366"></a>
<hr />
<h3 class="refsect2"><a id="sthref18039"></a>VRFY Function</h3>
<p>This function verifies the validity of a destination e-mail address.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18040"></a>Syntax</p>
<pre>
UTL_SMTP.VRFY (
   c          IN OUT NOCOPY connection
   recipient  IN VARCHAR2) 
RETURN reply;
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18041"></a>Parameters</p>
<div id="ARPLS71524" class="tblformal">
<p class="titleintable"><a id="sthref18042"></a><a id="sthref18043"></a>Table 236-41 VRFY Function Parameters</p>
<table class="cellalignment1229" title="VRFY Function Parameters" summary="This table describes the Parameters of the UTL_SMTP.VRFY subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t47">Parameter</th>
<th class="cellalignment1227" id="r1c2-t47">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t47" headers="r1c1-t47">
<p><code>c</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t47 r1c2-t47">
<p>SMTP connection</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t47" headers="r1c1-t47">
<p><code>recipient</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t47 r1c2-t47">
<p>E-mail address to be verified</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18044"></a>Return Values</p>
<div id="ARPLS71525" class="tblformal">
<p class="titleintable"><a id="sthref18045"></a><a id="sthref18046"></a>Table 236-42 VRFY Function Return Values</p>
<table class="cellalignment1229" title="VRFY Function Return Values " summary="This table describes Values Returned by the VRFYsubprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t48">Return Value</th>
<th class="cellalignment1227" id="r1c2-t48">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t48" headers="r1c1-t48">
<p><code>reply</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t48 r1c2-t48">
<p>Reply of the command (see <a href="#i1007056">REPLY, REPLIES Record Types</a>). In cases where there are multiple replies, the last reply is returned.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18047"></a>Usage Notes</p>
<p>The server attempts to resolve the destination address <code>recipient.</code> If successful, it returns the recipient's full name and fully qualified mailbox path. The connection to the server must have already been established by means of <code>OPEN_CONNECTION</code> and <code>HELO</code> or <code>EHLO</code> before making this request.</p>
<p>Successful verification returns one or more lines beginning with status code 250 or 251.</p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS71526" class="refsect2"><a id="i1004100"></a>
<hr />
<h3 class="refsect2"><a id="sthref18048"></a>WRITE_DATA Procedure</h3>
<p>This procedure writes a portion of the e-mail message. A repeat call to <code>WRITE_DATA</code> appends data to the e-mail message.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18049"></a>Syntax</p>
<pre>
UTL_SMTP.WRITE_DATA (
   c     IN OUT NOCOPY connection, 
   data  IN VARCHAR2 CHARACTER SET ANY_CS);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18050"></a>Parameters</p>
<div id="ARPLS71527" class="tblformal">
<p class="titleintable"><a id="sthref18051"></a><a id="sthref18052"></a>Table 236-43 WRITE_DATA Procedure Parameters</p>
<table class="cellalignment1229" title="WRITE_DATA Procedure Parameters " summary="This table describes the Parameters of the UTL_SMTP.WRITE_DATA subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t49">Parameter</th>
<th class="cellalignment1227" id="r1c2-t49">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t49" headers="r1c1-t49">
<p><code>c</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t49 r1c2-t49">
<p>SMTP connection</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t49" headers="r1c1-t49">
<p><code>data</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t49 r1c2-t49">
<p>Portion of the text of the message to be sent, including headers, in [RFC822] format</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18053"></a>Usage Notes</p>
<ul>
<li>
<p>The calls to the <a href="#i1002852">OPEN_DATA Function and Procedure</a>, <a href="#i1004100">WRITE_DATA Procedure</a>, <a href="#CHDEHIEA">WRITE_RAW_DATA Procedure</a> and <a href="#i1003341">CLOSE_DATA Function and Procedure</a> must be made in the correct order. A program calls <code>OPEN_DATA</code> to send the <code>DATA</code> command to the SMTP server. After that, it can call <code>WRITE_DATA</code> or <code>WRITE_RAW_DATA</code> repeatedly to send the actual data. The data is terminated by calling <code>CLOSE_DATA</code>. After <code>OPEN_DATA</code> is called, the only subprograms that can be called are <code>WRITE_DATA</code>, <code>WRITE_RAW_DATA,</code> or <code>CLOSE_DATA</code>. A call to other subprograms results in an <code>INVALID_OPERATION</code> exception being raised.</p>
</li>
<li>
<p>The application must ensure that the contents of the body parameter conform to the MIME(RFC822) specification. The <code>DATA</code> routine terminates the message with a <code>&lt;CR&gt;&lt;LF&gt;.&lt;CR&gt;&lt;LF&gt;</code> sequence (a single period at the beginning of a line), as required by RFC821. It also translates any sequence of <code>&lt;CR&gt;&lt;LF&gt;.&lt;CR&gt;&lt;LF&gt;</code> (single period) in the body to <code>&lt;CR&gt;&lt;LF&gt;..&lt;CR&gt;&lt;LF&gt;</code> (double period). This conversion provides the transparency as described in Section 4.5.2 of RFC821.</p>
</li>
<li>
<p>The <a href="#i1002852">OPEN_DATA Function and Procedure</a>, <a href="#i1004100">WRITE_DATA Procedure</a>, <a href="#CHDEHIEA">WRITE_RAW_DATA Procedure</a> and <a href="#i1003341">CLOSE_DATA Function and Procedure</a> must be called only after <a href="#i1002710">OPEN_CONNECTION Functions</a>, <a href="#i1004728">HELO Function and Procedure</a>, or <a href="#i1003308">EHLO Function and Procedure</a>, <a href="#i1001650">MAIL Function and Procedure</a>, and <a href="#i1002798">RCPT Function</a> have been called. The connection to the SMTP server must be open and a mail transaction must be active when this routine is called.</p>
</li>
<li>
<p>Note that there is no function form of the <a href="#i1004100">WRITE_DATA Procedure</a> because the SMTP server does not respond until the data-terminator is sent during the call to <a href="#i1003341">CLOSE_DATA Function and Procedure</a>.</p>
</li>
<li>
<p>Text (<code>VARCHAR2</code>) data sent using <code>WRITE_DATA</code> is converted to US7ASCII before it is sent. If the text contains multibyte characters, each multibyte character in the text that cannot be converted to US7ASCII is replaced by a '?' character. If 8BITMIME extension is negotiated with the SMTP server using the <code>EHLO</code> subprogram, multibyte <code>VARCHAR2</code> data can be sent by first converting the text to <code>RAW</code> using the <code>UTL_RAW</code> package, and then sending the <code>RAW</code> data using <code>WRITE_RAW_DATA</code>.</p>
</li>
</ul>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="ARPLS71528" class="refsect2"><a id="CHDEHIEA"></a>
<hr />
<h3 class="refsect2"><a id="sthref18054"></a>WRITE_RAW_DATA Procedure</h3>
<p>This procedure writes a portion of the e-mail message. A repeat call to <code>WRITE_RAW_DATA</code> appends data to the e-mail message.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18055"></a>Syntax</p>
<pre>
UTL_SMTP.WRITE_RAW_DATA (
   c     IN OUT NOCOPY connection
   data  IN RAW);
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18056"></a>Parameters</p>
<div id="ARPLS71529" class="tblformal">
<p class="titleintable"><a id="sthref18057"></a><a id="sthref18058"></a>Table 236-44 WRITE_RAW_DATA Procedure Parameters</p>
<table class="cellalignment1229" title="WRITE_RAW_DATA Procedure Parameters " summary="This table describes the Parameters of the UTL_SMTP.WRITE_RAW_DATA subprogram." dir="ltr">
<thead>
<tr class="cellalignment1220">
<th class="cellalignment1227" id="r1c1-t50">Parameter</th>
<th class="cellalignment1227" id="r1c2-t50">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r2c1-t50" headers="r1c1-t50">
<p><code>c</code></p>
</td>
<td class="cellalignment1228" headers="r2c1-t50 r1c2-t50">
<p>SMTP connection</p>
</td>
</tr>
<tr class="cellalignment1220">
<td class="cellalignment1228" id="r3c1-t50" headers="r1c1-t50">
<p><code>data</code></p>
</td>
<td class="cellalignment1228" headers="r3c1-t50 r1c2-t50">
<p>Portion of the text of the message to be sent, including headers, in [RFC822] format</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref18059"></a>Usage Notes</p>
<ul>
<li>
<p>The calls to the <a href="#i1002852">OPEN_DATA Function and Procedure</a>, <a href="#i1004100">WRITE_DATA Procedure</a>, <a href="#CHDEHIEA">WRITE_RAW_DATA Procedure</a> and <a href="#i1003341">CLOSE_DATA Function and Procedure</a> must be made in the correct order. A program calls <code>OPEN_DATA</code> to send the <code>DATA</code> command to the SMTP server. After that, it can call <code>WRITE_DATA</code> or <code>WRITE_RAW_DATA</code> repeatedly to send the actual data. The data is terminated by calling <code>CLOSE_DATA</code>. After <code>OPEN_DATA</code> is called, the only subprograms that can be called are <code>WRITE_DATA</code>, <code>WRITE_RAW_DATA,</code> or <code>CLOSE_DATA</code>. A call to other subprograms results in an <code>INVALID_OPERATION</code> exception being raised.</p>
</li>
<li>
<p>The application must ensure that the contents of the body parameter conform to the MIME(RFC822) specification. The <code>DATA</code> routine terminates the message with a <code>&lt;CR&gt;&lt;LF&gt;.&lt;CR&gt;&lt;LF&gt;</code> sequence (a single period at the beginning of a line), as required by RFC821. It also translates any sequence of <code>&lt;CR&gt;&lt;LF&gt;.&lt;CR&gt;&lt;LF&gt;</code> (single period) in the body to <code>&lt;CR&gt;&lt;LF&gt;..&lt;CR&gt;&lt;LF&gt;</code> (double period). This conversion provides the transparency as described in Section 4.5.2 of RFC821.</p>
</li>
<li>
<p>The <a href="#i1002852">OPEN_DATA Function and Procedure</a>, <a href="#i1004100">WRITE_DATA Procedure</a>, <a href="#CHDEHIEA">WRITE_RAW_DATA Procedure</a> and <a href="#i1003341">CLOSE_DATA Function and Procedure</a> must be called only after <a href="#i1002710">OPEN_CONNECTION Functions</a>, <a href="#i1004728">HELO Function and Procedure</a>, or <a href="#i1003308">EHLO Function and Procedure</a>, <a href="#i1001650">MAIL Function and Procedure</a>, and <a href="#i1002798">RCPT Function</a> have been called. The connection to the SMTP server must be open and a mail transaction must be active when this routine is called.</p>
</li>
<li>
<p>Note that there is no function form of the <a href="#i1004100">WRITE_DATA Procedure</a> because the SMTP server does not respond until the data-terminator is sent during the call to <a href="#i1003341">CLOSE_DATA Function and Procedure</a>.</p>
</li>
</ul>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" --></div>
<!-- class="refsect1" --></div>
<!-- class="refentry" --></div>
<!-- class="chapter" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment1219">
<tr>
<td class="cellalignment1228">
<table class="cellalignment1224">
<tr>
<td class="cellalignment1223"><a href="u_ref.htm"><img width="24" height="24" src="../../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment1223"><a href="u_spadv.htm"><img width="24" height="24" src="../../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;1996, 2013,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment1231">
<table class="cellalignment1222">
<tr>
<td class="cellalignment1223"><a href="../../index.htm"><img width="24" height="24" src="../../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment1223"><a href="../../nav/portal_booklist.htm"><img width="24" height="24" src="../../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment1223"><a href="toc.htm"><img width="24" height="24" src="../../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment1223"><a href="index.htm"><img width="24" height="24" src="../../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment1223"><a href="../../nav/mindx.htm"><img width="24" height="24" src="../../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment1223"><a href="../../dcommon/html/feedback.htm"><img width="24" height="24" src="../../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>
</body>
</html>
