<!DOCTYPE html>
<html lang="en" >
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1">
<meta charset="utf-8">
<title>Backing Up the Database</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Merged Version 1054" />
<meta name="description" content="A guide to backup and recovery of Oracle databases, including RMAN backup and recovery, RMAN data transfer, Oracle Flashback Technology, and user-managed backup and recovery" />
<meta name="dcterms.created" content="2015-05-13T14:1:11Z" />
<meta name="robots" content="all" />
<meta name="dcterms.title" content="Database Backup and Recovery User's Guide" />
<meta name="dcterms.identifier" content="E10642-08" />
<meta name="dcterms.isVersionOf" content="BRADV" />
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;2003, 2015,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved." />
<link rel="Start" href="../../index.htm" title="Home" type="text/html" />
<link rel="Copyright" href="../../dcommon/html/cpyr.htm" title="Copyright" type="text/html" />

<script type="application/javascript"  src="../../dcommon/js/headfoot.js"></script>
<script type="application/javascript"  src="../../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html" />
<link rel="Index" href="index.htm" title="Index" type="text/html" />
<link rel="Glossary" href="glossary.htm" title="Glossary" type="text/html" />
<link rel="Prev" href="rcmcncpt.htm" title="Previous" type="text/html" />
<link rel="Next" href="rcmbckad.htm" title="Next" type="text/html" />
<link rel="alternate" href="../e10642.pdf" title="PDF version" type="application/pdf" />
<link rel="schema.dcterms" href="http://purl.org/dc/terms/" />
<link rel="stylesheet" href="../../dcommon/css/fusiondoc.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/header.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/footer.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/fonts.css">
<link rel="stylesheet" href="../../dcommon/css/foundation.css">
<link rel="stylesheet" href="../../dcommon/css/codemirror.css">
<link rel="stylesheet" type="text/css" title="Default" href="../../nav/css/html5.css">
<link rel="stylesheet" href="../../dcommon/css/respond-480-tablet.css">
<link rel="stylesheet" href="../../dcommon/css/respond-768-laptop.css">
<link rel="stylesheet" href="../../dcommon/css/respond-1140-deskop.css">
<script type="application/javascript" src="../../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">19/47</span> <!-- End Header -->
<div id="BRADV8003" class="chapter"><a id="g1050005"></a> <a id="i1005689"></a>
<h1 class="chapter"><span class="secnum">9</span> Backing Up the Database</h1>
<p>This chapter explains how to perform the most basic backup tasks and implement backup strategies using RMAN. This chapter contains the following topics:</p>
<ul>
<li>
<p><a href="#i1004939">Overview of RMAN Backups</a></p>
</li>
<li>
<p><a href="#CEGFHBBB">Specifying Backup Output Options</a></p>
</li>
<li>
<p><a href="#i1020015">Backing Up Database Files with RMAN</a></p>
</li>
<li>
<p><a href="#i1006454">Backing Up Archived Redo Logs with RMAN</a></p>
</li>
<li>
<p><a href="#i1034163">Making and Updating Incremental Backups</a></p>
</li>
<li>
<p><a href="#CHDHAFHJ">Making Database Backups for Long-Term Storage</a></p>
</li>
<li>
<p><a href="#CHDFCCCF">Backing Up RMAN Backups</a></p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="rcmbckad.htm#CEGHFJCF">Chapter 10, "Backing Up the Database: Advanced Topics"</a> to learn about more advanced topics such as backup optimization, duplexing, backup encryption, and restartable backups</p>
</li>
<li>
<p><a class="olink SBYDB04700" href="../../server.112/e41134/rman.htm#SBYDB04700"><span class="italic">Oracle Data Guard Concepts and Administration</span></a> to learn how to perform RMAN backup and recovery in a Data Guard environment</p>
</li>
</ul>
</div>
<a id="i1004939"></a>
<div id="BRADV8131" class="sect1">
<h2 class="sect1">Overview of RMAN Backups</h2>
<p>This section provides an overview of RMAN backups.</p>
<div id="BRADV89506" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref753"></a>
<h3 class="sect2">Purpose of RMAN Backups</h3>
<p>The primary purpose of RMAN backups is to protect your data. If a <a href="glossary.htm#i432912"><span class="xrefglossterm">media failure</span></a> or disaster occurs, then you can restore your backups and recover lost changes.</p>
<p>You can also make backups to preserve data for long-time archival, as explained in <a href="#CHDHAFHJ">"Making Database Backups for Long-Term Storage"</a>, and to transfer data, as explained in the chapters included in <a href="part_tra.htm#BCFECECH">Part III, "Transferring Data with RMAN"</a>.</p>
</div>
<!-- class="sect2" -->
<div id="BRADV89507" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref754"></a>
<h3 class="sect2">Basic Concepts of RMAN Backups</h3>
<p><a id="sthref755"></a><a id="sthref756"></a>As explained in <a href="rcmcncpt.htm#BGBFHAGF">Chapter 8, "RMAN Backup Concepts"</a>, you can back up all or part of your database with <a id="sthref757"></a><a id="sthref758"></a>the <a class="olink RCMRF107" href="../../backup.112/e10643/rcmsynta007.htm#RCMRF107"><code dir="ltr">BACKUP</code></a> command from within the RMAN client. Many of the techniques described in this chapter are also used in the Oracle suggested backup strategy provided by Enterprise Manager and described in <a class="olink ADMQS009" href="../../server.112/e10897/backrest.htm#ADMQS009"><span class="italic">Oracle Database 2 Day DBA</span></a>.</p>
<p>In many cases, after your database has been configured in accordance with your backup strategy, you can back up the database by entering the following command at the RMAN prompt:</p>
<pre dir="ltr">
RMAN&gt; BACKUP DATABASE;
</pre>
<p>RMAN uses the configured settings, the records of previous backups, and the control file record of the database structure to determine an efficient set of steps for the backup. RMAN then performs these steps.</p>
<p><a id="sthref759"></a>As explained in <a href="rcmarchi.htm#CHDHJFAB">"RMAN File Management in a Data Guard Environment"</a>, you can run RMAN backups at any database in a Data Guard environment. Any backup of any database in the environment is usable for recovery of any other database if the backup is accessible. You can offload all backups of database files, including control file backups, to a <a href="glossary.htm#CHDEJBIJ"><span class="xrefglossterm">physical standby database</span></a> and thereby avoid consuming resources on the primary database.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a class="olink RCMRF107" href="../../backup.112/e10643/rcmsynta007.htm#RCMRF107"><span class="italic">Oracle Database Backup and Recovery Reference</span></a> to learn about the <code dir="ltr">BACKUP</code> command</p>
</li>
<li>
<p><a class="olink SBYDB04700" href="../../server.112/e41134/rman.htm#SBYDB04700"><span class="italic">Oracle Data Guard Concepts and Administration</span></a> to learn how to back up a standby database with RMAN</p>
</li>
</ul>
</div>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="CEGFHBBB"></a>
<div id="BRADV89508" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Specifying Backup Output Options</h2>
<p>If you specify only the minimum required options for an RMAN command such as <a class="olink RCMRF107" href="../../backup.112/e10643/rcmsynta007.htm#RCMRF107"><code dir="ltr">BACKUP DATABASE</code></a>, then RMAN determines the destination device, locations for backup output, and a backup tag automatically based on your configured environment and built-in RMAN defaults.</p>
<p>You can also provide arguments to <code dir="ltr">BACKUP</code> to override these defaults. The most typical options are described in the following sections:</p>
<ul>
<li>
<p><a href="#CEGCAAHF">Specifying the Device Type for an RMAN Backup</a></p>
</li>
<li>
<p><a href="#CEGHECDA">Specifying Backup Set or Copy for an RMAN Backup to Disk</a></p>
</li>
<li>
<p><a href="#CEGBCICH">Specifying a Format for RMAN Backups</a></p>
</li>
<li>
<p><a href="#CEGGGDIJ">Specifying Tags for an RMAN Backup</a></p>
</li>
<li>
<p><a href="#i1034440">Making Compressed Backups</a></p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="rcmbckad.htm#CEGHFJCF">Chapter 10, "Backing Up the Database: Advanced Topics"</a> to learn about advanced backup options such as duplexing and restarting backups</div>
<a id="CEGCAAHF"></a>
<div id="BRADV89509" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Specifying the Device Type for an RMAN Backup</h3>
<p><a id="sthref760"></a><a id="sthref761"></a><a id="sthref762"></a>The <code dir="ltr">BACKUP</code> command takes a <code dir="ltr">DEVICE TYPE</code> clause that specifies whether to back up to disk or tape device. <a href="#BGBCIIGJ">Example 9-1</a> illustrates a backup to disk.</p>
<div id="BRADV211" class="example">
<p class="titleinexample"><a id="BGBCIIGJ"></a>Example 9-1 Specifying Device Type DISK</p>
<pre dir="ltr">
BACKUP DATABASE 
  DEVICE TYPE DISK;
</pre></div>
<!-- class="example" -->
<p>When you run <code dir="ltr">BACKUP</code> without a <code dir="ltr">DEVICE TYPE</code> clause, RMAN stores the backup on the configured default device (disk or <a href="glossary.htm#CHDCCBFI"><span class="xrefglossterm">SBT</span></a>). You set the default device with the <a class="olink RCMRF113" href="../../backup.112/e10643/rcmsynta010.htm#RCMRF113"><code dir="ltr">CONFIGURE DEFAULT DEVICE TYPE</code></a> command described in <a href="rcmconfb.htm#i1017851">"Configuring the Default Device for Backups: Disk or SBT"</a>.</p>
</div>
<!-- class="sect2" -->
<a id="CEGHECDA"></a>
<div id="BRADV89510" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Specifying Backup Set or Copy for an RMAN Backup to Disk</h3>
<p>RMAN can create backups on disk as image copies or as backup sets. <a href="rcmconfb.htm#i1019139">"Configuring the Default Type for Backups: Backup Sets or Copies"</a> explains how to configure the default disk device. You can override this default with the <code dir="ltr">AS</code> <code dir="ltr">COPY</code> or <code dir="ltr">AS</code> <code dir="ltr">BACKUPSET</code> clauses. To back up to disk as image copies, use <code dir="ltr">BACKUP</code> <code dir="ltr">AS</code> <code dir="ltr">COPY</code> as shown in <a href="#BGBHDIAG">Example 9-2</a>.</p>
<div id="BRADV212" class="example">
<p class="titleinexample"><a id="BGBHDIAG"></a>Example 9-2 Making Image Copies</p>
<pre dir="ltr">
BACKUP AS COPY
  DEVICE TYPE DISK 
  DATABASE;
</pre></div>
<!-- class="example" -->
<p>To back up your data into backup sets, use the <code dir="ltr">AS BACKUPSET</code> clause. You can allow backup sets to be created on the configured default device, or direct them specifically to disk or tape, as shown<a href="#BGBBHEDE">Example 9-3</a>.</p>
<div id="BRADV213" class="example">
<p class="titleinexample"><a id="BGBBHEDE"></a>Example 9-3 Making Backup Sets</p>
<pre dir="ltr">
BACKUP AS BACKUPSET 
  DATABASE;

BACKUP AS BACKUPSET 
  DEVICE TYPE DISK 
  DATABASE;

BACKUP AS BACKUPSET 
  DEVICE TYPE SBT 
  DATABASE;
</pre></div>
<!-- class="example" --></div>
<!-- class="sect2" -->
<a id="CEGBCICH"></a>
<div id="BRADV89511" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Specifying a Format for RMAN Backups</h3>
<p><a id="sthref763"></a>RMAN provides a range of options to name the files generated by the <code dir="ltr">BACKUP</code> command. RMAN uses the following set of rules to determine the format of the output files, which are listed in order of precedence:</p>
<ol>
<li>
<p><a id="sthref764"></a>If a <a class="olink RCMRF195" href="../../backup.112/e10643/rcmsubcl010.htm#RCMRF195"><code dir="ltr">FORMAT</code></a> parameter is specified on the <code dir="ltr">BACKUP</code> command, then this setting controls the generated file name.</p>
<p>For example, you can direct the output to a specific location, as shown in the following command:</p>
<pre dir="ltr">
BACKUP DATABASE 
  FORMAT "/disk1/backup_%U";  # specifies a location on the file system
</pre>
<p>In this case, backups are stored with generated unique file names with the prefix <code dir="ltr">/disk1/backup_</code>. The <code dir="ltr">%U</code> substitution variable, used to generate a unique string at this point in the file name, is required.</p>
<p><a id="sthref765"></a>You can also use the <code dir="ltr">FORMAT</code> parameter to name an ASM disk group as the backup destination, as shown in the following example:</p>
<pre dir="ltr">
BACKUP DATABASE 
  FORMAT '+dgroup1';  # specifies an ASM disk group
</pre>
<p>No <code dir="ltr">%U</code> is required in this case because <a href="glossary.htm#CHDBDJIJ"><span class="xrefglossterm">Automatic Storage Management (ASM)</span></a> generates unique file names as needed. However, you can specify <code dir="ltr">%U</code> if desired.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
If you specify <code dir="ltr">FORMAT</code> when a fast recovery area is enabled, then RMAN obeys the <code dir="ltr">FORMAT</code> setting. If no location is specified in the <code dir="ltr">FORMAT</code> clause, then RMAN creates the backup in a platform-specific location.</div>
</li>
<li>
<p>If a <code dir="ltr">FORMAT</code> setting is configured for the specific channel used for the backup, then this setting controls the generated file name.</p>
</li>
<li>
<p>If a <code dir="ltr">FORMAT</code> setting is configured for the device type used for the backup, then this setting controls the generated file name.</p>
</li>
<li>
<p>If a <a href="glossary.htm#i999320"><span class="xrefglossterm">fast recovery area</span></a> is enabled during a disk backup, and if <code dir="ltr">FORMAT</code> is not specified, then RMAN creates the backup with an automatically generated name in the fast recovery area.</p>
</li>
<li>
<p>If none of the other conditions in this list apply, then the default location and file name format of the backup are platform-specific.</p>
</li>
</ol>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink RCMRF195" href="../../backup.112/e10643/rcmsubcl010.htm#RCMRF195"><span class="italic">Oracle Database Backup and Recovery Reference</span></a> to learn about the <code dir="ltr">FORMAT</code> clause, and the installation guides in the Oracle Database documentation library to learn about the default file locations for your platform</div>
<a id="i1006582"></a>
<div id="BRADV89512" class="sect3">
<h4 class="sect3">Specifying Multiple Formats for Disk Backups</h4>
<p>Typically, you do not need to specify a format when backing up to tape because the default<a id="sthref766"></a> <code dir="ltr">%U</code> variable generates a unique file name for tape backups. When backing up to disk, however, you can specify a format to spread the backup across several drives for improved performance. In this case, allocate one <code dir="ltr">DISK</code> channel for each disk drive and specify the format string on <a id="sthref767"></a><a id="sthref768"></a>the <a class="olink RCMRF102" href="../../backup.112/e10643/rcmsynta004.htm#RCMRF102"><code dir="ltr">ALLOCATE CHANNEL</code></a> command so that the file names are on different disks. For example, issue the following command:</p>
<pre dir="ltr">
RUN
{ 
  ALLOCATE CHANNEL disk1 DEVICE TYPE DISK FORMAT '/disk1/%d_backups/%U';
  ALLOCATE CHANNEL disk2 DEVICE TYPE DISK FORMAT '/disk2/%d_backups/%U';
  ALLOCATE CHANNEL disk3 DEVICE TYPE DISK FORMAT '/disk3/%d_backups/%U';
  BACKUP AS COPY DATABASE; 
} 
</pre>
<p>You can distribute backups in this manner by default in the future, by configuring channels as follows:</p>
<pre dir="ltr">
CONFIGURE DEVICE TYPE DISK PARALLELISM 3;
CONFIGURE DEFAULT DEVICE TYPE TO DISK;
CONFIGURE CHANNEL 1 DEVICE TYPE DISK FORMAT '/disk1/%d_backups/%U';
CONFIGURE CHANNEL 2 DEVICE TYPE DISK FORMAT '/disk2/%d_backups/%U';
CONFIGURE CHANNEL 3 DEVICE TYPE DISK FORMAT '/disk3/%d_backups/%U';
BACKUP AS COPY DATABASE;
</pre></div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="CEGGGDIJ"></a>
<div id="BRADV89513" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Specifying Tags for an RMAN Backup</h3>
<p><a id="sthref769"></a>RMAN attaches a character string called a <a href="glossary.htm#CHDJHFIH"><span class="xrefglossterm">tag</span></a> to every backup it creates, as a way of identifying the backup. You can either accept the default tag or specify your own with the <code dir="ltr">TAG</code> parameter of the <code dir="ltr">BACKUP</code> command.</p>
<a id="i1007421"></a>
<div id="BRADV89514" class="sect3">
<h4 class="sect3">About Backup Tags</h4>
<p><a id="sthref770"></a><a id="sthref771"></a><a id="sthref772"></a>User-specified tags are a useful way to indicate the purpose or usage of different classes of backups or copies. You can tag backup sets, proxy copies, data file copies, or control file copies. For example, you can tag data file copies that you intend to use in a <a class="olink RCMRF159" href="../../backup.112/e10643/rcmsynta2020.htm#RCMRF159"><code dir="ltr">SWITCH</code></a> command as <code dir="ltr">for_switch_only</code> and file copies that should be used only for a <a class="olink RCMRF149" href="../../backup.112/e10643/rcmsynta2008.htm#RCMRF149"><code dir="ltr">RESTORE</code></a> command as <code dir="ltr">for_restore_only</code>.</p>
<p>Tags do not need to be unique, so multiple backup sets or image copies can have the same tag, for example, <code dir="ltr">weekly_backup</code>. Assume that you specify that a data file should be restored from backups that have a specific tag. If multiple backups of the requested file has the desired tag, then RMAN restores the most recent backup that has the desired tag, within any constraints on the <code dir="ltr">RESTORE</code> command.</p>
<p>In practice, tags are often used to distinguish a series of backups created as part of a single strategy, such as an incremental backup strategy. For example, you might create a weekly incremental backups with a tag like <code dir="ltr">BACKUP TAG weekly_incremental</code>. Many forms of the <code dir="ltr">BACKUP</code> command let you associate a tag with a backup, and many <code dir="ltr">RESTORE</code> and <a class="olink RCMRF140" href="../../backup.112/e10643/rcmsynta2001.htm#RCMRF140"><code dir="ltr">RECOVER</code></a> commands let you specify a tag to restrict which backups to use in the <code dir="ltr">RESTORE</code> or <code dir="ltr">RECOVER</code> operation.</p>
<p>If you do not explicitly specify a tag with the <code dir="ltr">TAG</code> parameter of the <code dir="ltr">BACKUP</code> command, then RMAN implicitly creates a default tag for backups (except for control file autobackups). The format of the tag is <code dir="ltr">TAG</code><code dir="ltr"><span class="codeinlineitalic">YYYYMMDD</span></code><code dir="ltr">T</code><code dir="ltr"><span class="codeinlineitalic">HHMMSS</span></code>, where <code dir="ltr"><span class="codeinlineitalic">YYYY</span></code> is the year, <code dir="ltr"><span class="codeinlineitalic">MM</span></code> is the month, <code dir="ltr"><span class="codeinlineitalic">DD</span></code> is the day, <code dir="ltr"><span class="codeinlineitalic">HH</span></code> is the hour (in 24-hour format), <code dir="ltr"><span class="codeinlineitalic">MM</span></code> is the minutes, and <code dir="ltr"><span class="codeinlineitalic">SS</span></code> is the seconds. For example, a backup of data file <code dir="ltr">1</code> may get the tag <code dir="ltr">TAG20070208T133437</code>. The date and time refer to when RMAN started the backup in the time zone of the instance performing the backup. If multiple backup sets are created by one <code dir="ltr">BACKUP</code> command, then each backup piece has the same default tag.</p>
<p>Tags are stored in uppercase, regardless of the case used when entering them. The maximum length of a backup tag is 30 bytes. Tags cannot use operating system environment variables or use special formats such as <code dir="ltr">%T</code> or <code dir="ltr">%D</code>.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink RCMRF107" href="../../backup.112/e10643/rcmsynta007.htm#RCMRF107"><span class="italic">Oracle Database Backup and Recovery Reference</span></a> for the default format description in <code dir="ltr">BACKUP</code> <code dir="ltr">...</code> <code dir="ltr">TAG</code></div>
</div>
<!-- class="sect3" -->
<div id="BRADV89515" class="sect3"><a id="sthref773"></a>
<h4 class="sect3">Specifying Tags for Backup Sets and Image Copies</h4>
<p>The characters in a tag must be limited to the characters that are legal in file names on the target database file system. For example, <a href="glossary.htm#CHDBDJIJ"><span class="xrefglossterm">Automatic Storage Management (ASM)</span></a> does not support the use of the hyphen (<code dir="ltr">-</code>) in the file names it uses internally, so a tag including a hyphen (such as <code dir="ltr">weekly-incr</code>) is not a legal tag name for backups in ASM disk groups.</p>
<p>When you tag a backup set, the tag is an attribute of each backup piece in a given copy of a backup set. <a id="sthref774"></a><a id="sthref775"></a>If you create a <a href="glossary.htm#CHDECCDH"><span class="xrefglossterm">multiplexed backup set</span></a>, then each copy of the backup set is assigned the same tag. <a href="#CHDEEGGD">Example 9-4</a> creates one backup set with the tag <code dir="ltr">MONDAYBKP</code>.</p>
<div id="BRADV214" class="example">
<p class="titleinexample"><a id="CHDEEGGD"></a>Example 9-4 Applying a Tag to a Backup Set</p>
<pre dir="ltr">
BACKUP AS BACKUPSET
  COPIES 1 
  DATAFILE 7
  TAG mondaybkp; 
</pre></div>
<!-- class="example" -->
<p>When you specify a tag for image copies, the tag applies to each individual copy. <a href="#CHDHAABB">Example 9-5</a> shows that copies of data files in tablespaces <code dir="ltr">users</code> and <code dir="ltr">tools</code> are assigned the tag <code dir="ltr">MONDAYCPY</code>.</p>
<div id="BRADV609" class="example">
<p class="titleinexample"><a id="CHDHAABB"></a>Example 9-5 Applying Tags to Image Copies</p>
<pre dir="ltr">
<a id="i1007433"></a>
BACKUP AS COPY 
  TABLESPACE users, tools
  TAG mondaycpy;
</pre></div>
<!-- class="example" -->
<p>You can use <code dir="ltr">FROM TAG</code> to copy an image copy with a specific tag, and then use <code dir="ltr">TAG</code> to assign the output copy a different tag. <a href="#CHDFIDHD">Example 9-6</a> creates new copies of all image copies of the database that have the tag <code dir="ltr">full_cold_copy</code> and gives the new copies the tag <code dir="ltr">new_full_cold_copy</code>.</p>
<div id="BRADV610" class="example">
<p class="titleinexample"><a id="CHDFIDHD"></a>Example 9-6 Assigning Tags to Output Copies</p>
<pre dir="ltr">
BACKUP AS COPY
  COPY OF DATABASE
    FROM TAG full_cold_copy
  TAG new_full_cold_copy;
</pre></div>
<!-- class="example" --></div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="i1034440"></a>
<div id="BRADV8138" class="sect2">
<h3 class="sect2">Making Compressed Backups</h3>
<p><a id="sthref776"></a><a id="sthref777"></a><a id="sthref778"></a>For any use of the <code dir="ltr">BACKUP</code> command that creates backup sets, you can take advantage of RMAN support for <a href="glossary.htm#CHDEEEDG"><span class="xrefglossterm">binary compression</span></a> of backup sets. <a id="sthref779"></a><a id="sthref780"></a>Specify the <code dir="ltr">AS COMPRESSED BACKUPSET</code> option to <a id="sthref781"></a>the <code dir="ltr">BACKUP</code> command.</p>
<p>RMAN compresses the backup set contents before writing them to disk. The details of which binary compression level is used are automatically recorded in the backup set. There is no need to explicitly mention the type of compression used or how to decompress the backup set in the recovery operation.</p>
<p><a href="#CHDHCDFJ">Example 9-7</a> backs up the entire database and archived logs to the configured default backup destination (disk or tape), producing compressed backup sets.</p>
<div id="BRADV218" class="example">
<p class="titleinexample"><a id="CHDHCDFJ"></a>Example 9-7 Making Compressed Backups</p>
<pre dir="ltr">
BACKUP 
  AS COMPRESSED BACKUPSET 
  DATABASE PLUS ARCHIVELOG;
</pre></div>
<!-- class="example" -->
<p>Binary compression creates some performance overhead during backup and restore operations. Binary compression consumes CPU resources, so compressed backups should not be scheduled when CPU usage is high. However, the following circumstances may warrant paying the performance penalty:</p>
<ul>
<li>
<p>You are using disk-based backups when disk space in your fast recovery area or other disk-based backup destination is limited.</p>
</li>
<li>
<p>You are performing your backups to some device over a network when reduced network bandwidth is more important than CPU usage.</p>
</li>
<li>
<p>You are using some archival backup media such as CD or DVD, where reducing backup sizes saves on media costs and archival storage.</p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
For performance details regarding backup sets, consult the <a href="rcmcncpt.htm#CIHFEBFI">"Binary Compression for Backup Sets"</a> and the <code dir="ltr">AS COMPRESSED BACKUPSET</code> option of the <code dir="ltr">BACKUP</code> command in <a class="olink RCMRF107" href="../../backup.112/e10643/rcmsynta007.htm#RCMRF107"><span class="italic">Oracle Database Backup and Recovery Reference</span></a>.</div>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="i1020015"></a>
<div id="BRADV8132" class="sect1">
<h2 class="sect1">Backing Up Database Files with RMAN</h2>
<p>This section contains the following topics:</p>
<ul>
<li>
<p><a href="#i1006297">Backing Up a Whole Database with RMAN</a></p>
</li>
<li>
<p><a href="#i1006341">Backing Up Tablespaces and Datafiles with RMAN</a></p>
</li>
<li>
<p><a href="#i1009642">Backing Up Control Files with RMAN</a></p>
</li>
<li>
<p><a href="#i1025972">Backing Up Server Parameter Files with RMAN</a></p>
</li>
<li>
<p><a href="#i1006761">Backing Up a Database in NOARCHIVELOG Mode</a></p>
</li>
</ul>
<a id="i1006297"></a>
<div id="BRADV8231" class="sect2">
<h3 class="sect2">Backing Up a Whole Database with RMAN</h3>
<p><a id="sthref782"></a><a id="sthref783"></a><a id="sthref784"></a><a id="sthref785"></a><a id="sthref786"></a><a id="sthref787"></a>You can perform a <a href="glossary.htm#i433710"><span class="xrefglossterm">whole database backup</span></a> with the database mounted or open. To perform a whole database backup, from the RMAN prompt, use <a id="sthref788"></a><a id="sthref789"></a>the <a class="olink RCMRF107" href="../../backup.112/e10643/rcmsynta007.htm#RCMRF107"><code dir="ltr">BACKUP DATABASE</code></a> command.</p>
<p>You may want to exclude specified tablespaces from a whole database backup. As explained in <a href="rcmconfa.htm#i1015029">"Configuring Tablespaces for Exclusion from Whole Database Backups"</a>, you can persistently skip tablespaces across RMAN sessions by executing the <a class="olink RCMRF113" href="../../backup.112/e10643/rcmsynta010.htm#RCMRF113"><code dir="ltr">CONFIGURE EXCLUDE</code></a> command for each tablespace that you always want to skip. You can override the configured setting with <code dir="ltr">BACKUP ... NOEXCLUDE</code>.</p>
<p class="subhead2"><a id="BRADV220"></a>To back up the database:</p>
<ol>
<li>
<p>Start RMAN and connect to a target database and a recovery catalog (if used).</p>
</li>
<li>
<p>Ensure the database is mounted or open.</p>
</li>
<li>
<p>Issue the <a class="olink RCMRF107" href="../../backup.112/e10643/rcmsynta007.htm#RCMRF107"><code dir="ltr">BACKUP DATABASE</code></a> command at the RMAN prompt.</p>
<p>The simplest form of the command requires no options or parameters:</p>
<pre dir="ltr">
BACKUP DATABASE;
</pre>
<p>For a list of what files are backed up (datafiles, control file, server parameter file) see the <code dir="ltr">BACKUP</code> command keyword <code dir="ltr">DATABASE</code> in <span class="italic">Oracle Database Backup and Recovery Reference</span>.</p>
<p>The following example backs up the database, switches the online redo logs, and includes archived logs in the backup:</p>
<pre dir="ltr">
BACKUP DATABASE PLUS ARCHIVELOG;
</pre>
<p>By archiving the logs immediately after the backup, you ensure that you have a full set of archived logs through the time of the backup. In this way, you guarantee that you can perform media recovery after restoring this backup.</p>
</li>
</ol>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a class="olink RCMRF107" href="../../backup.112/e10643/rcmsynta007.htm#RCMRF107"><span class="italic">Oracle Database Backup and Recovery Reference</span></a> to learn about the <code dir="ltr">BACKUP</code> command and <a class="olink RCMRF114" href="../../backup.112/e10643/rcmsynta011.htm#RCMRF114"><span class="italic">Oracle Database Backup and Recovery Reference</span></a> to learn about the <code dir="ltr">CONNECT</code> command</p>
</li>
<li>
<p><a href="rcmbckad.htm#CHDIEIFE">"Skipping Offline, Read-Only, and Inaccessible Files"</a> to learn how to use <code dir="ltr">BACKUP ... SKIP</code> to skip inaccessible data files or data files that are in offline or read-only tablespaces</p>
</li>
</ul>
</div>
</div>
<!-- class="sect2" -->
<a id="i1006341"></a>
<div id="BRADV89516" class="sect2">
<h3 class="sect2">Backing Up Tablespaces and Datafiles with RMAN</h3>
<p><a id="sthref790"></a><a id="sthref791"></a>You can back up one or more tablespaces with <a id="sthref792"></a><a id="sthref793"></a>the <code dir="ltr">BACKUP TABLESPACE</code> command or one or more datafiles with the<a id="sthref794"></a><a id="sthref795"></a> <code dir="ltr">BACKUP DATAFILE</code> command. When you specify tablespaces, RMAN translates the tablespace name internally into a list of datafiles. The database can be mounted or open. Tablespaces can be read/write or read-only.<a id="sthref796"></a><a id="sthref797"></a></p>
<div class="infobox-note">
<p class="notep1">Note:</p>
Transportable tablespaces do not have to be in read/write mode for backup as in previous releases.</div>
<p>RMAN automatically backs up the control file and the server parameter file (if the instance was started with a server parameter file) when data file <code dir="ltr">1</code> is included in the backup. If <a href="glossary.htm#i432379"><span class="xrefglossterm">control file autobackup</span></a> is enabled, then RMAN writes the current control file and server parameter file to a separate autobackup piece. Otherwise, RMAN includes these files in the backup set that contains data file <code dir="ltr">1</code>.</p>
<p class="subhead2"><a id="BRADV222"></a>To back up tablespaces or datafiles:</p>
<ol>
<li>
<p>Start RMAN and connect to a target database and a recovery catalog (if used).</p>
</li>
<li>
<p>If the database instance is not started, then either mount or open the database.</p>
</li>
<li>
<p>Run the <code dir="ltr">BACKUP</code> <code dir="ltr">TABLESPACE</code> command or <code dir="ltr">BACKUP DATAFILE</code> command at the RMAN prompt.</p>
<p>The following example backs up the <code dir="ltr">users</code> and <code dir="ltr">tools</code> tablespaces to tape:</p>
<pre dir="ltr">
BACKUP
  DEVICE TYPE sbt
  TABLESPACE users, tools;
</pre>
<p>The following example uses an SBT channel to back up data files <code dir="ltr">1</code> through <code dir="ltr">4</code> and a data file copy stored at <code dir="ltr">/tmp/system01.dbf</code> to tape:</p>
<pre dir="ltr">
BACKUP 
  DEVICE TYPE sbt 
  DATAFILE 1,2,3,4 
  DATAFILECOPY '/tmp/system01.dbf';
</pre></li>
</ol>
</div>
<!-- class="sect2" -->
<a id="i1009642"></a>
<div id="BRADV89517" class="sect2">
<h3 class="sect2">Backing Up Control Files with RMAN</h3>
<p><a id="sthref798"></a><a id="sthref799"></a>You can back up the control file when the database is mounted or open. RMAN uses a <a href="glossary.htm#i433510"><span class="xrefglossterm">snapshot control file</span></a> to ensure a read-consistent version.<a id="sthref800"></a><a id="sthref801"></a> If the <a class="olink RCMRF113" href="../../backup.112/e10643/rcmsynta010.htm#RCMRF113"><code dir="ltr">CONFIGURE CONTROLFILE AUTOBACKUP</code></a> command is set to <code dir="ltr">ON</code> (by default it is <code dir="ltr">OFF</code>), then RMAN automatically backs up the control file and server parameter file after every backup and after database structural changes. The <a href="glossary.htm#i432379"><span class="xrefglossterm">control file autobackup</span></a> contains metadata about the previous backup, which is crucial for <a href="glossary.htm#CHDDJAJB"><span class="xrefglossterm">disaster recovery</span></a>.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
You can restore a backup of a control file made on one Data Guard database to any other database in the environment. Primary and standby control file backups are <a id="sthref802"></a>interchangeable. See <a class="olink SBYDB04700" href="../../server.112/e41134/rman.htm#SBYDB04700"><span class="italic">Oracle Data Guard Concepts and Administration</span></a> to learn how to use RMAN to restore files on a standby database.</div>
<p>If the autobackup feature is not set, then you must manually back up the control file in one of the following ways:</p>
<ul>
<li>
<p><a id="sthref803"></a><a id="sthref804"></a>Run <code dir="ltr">BACKUP</code> <code dir="ltr">CURRENT</code> <code dir="ltr">CONTROLFILE</code> .</p>
</li>
<li>
<p>Include a backup of the control file within any backup by using the <code dir="ltr">INCLUDE</code> <code dir="ltr">CURRENT</code> <code dir="ltr">CONTROLFILE</code> option of the <code dir="ltr">BACKUP</code> command.</p>
</li>
<li>
<p>Back up data file <code dir="ltr">1</code>, because RMAN automatically includes the control file and server parameter file in backups of data file <code dir="ltr">1</code>.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
If the control file block size is not equal to the block size for data file <code dir="ltr">1</code>, then the control file cannot be written into the same backup set as the data file. RMAN writes the control file into a backup set by itself if the block size is different. <a id="sthref805"></a>The <code dir="ltr">V$CONTROLFILE.BLOCK_SIZE</code> column indicates the control file block size, whereas the <code dir="ltr">DB_BLOCK_SIZE</code> initialization parameter indicates the block size of data file <code dir="ltr">1</code>.</div>
</li>
</ul>
<div id="BRADV89518" class="sect3"><a id="sthref806"></a>
<h4 class="sect3">Making a Manual Backup of the Control File</h4>
<p><a id="sthref807"></a><a id="sthref808"></a>A manual backup of the control file is different from a control file autobackup. RMAN makes a control file autobackup after the files specified in the <code dir="ltr">BACKUP</code> command are backed up. Thus, the autobackup&mdash;unlike a manual control file backup&mdash;contains metadata about the backup that just completed. Also, RMAN can automatically restore autobackups without the use of a recovery catalog.</p>
<p>To make a manual backup, you can either specify <code dir="ltr">INCLUDE</code> <code dir="ltr">CURRENT</code> <code dir="ltr">CONTROLFILE</code> when backing up other files or specify <code dir="ltr">BACKUP CURRENT CONTROLFILE</code>. You can also back up control files copies on disk by specifying the <code dir="ltr">CONTROLFILECOPY</code> parameter.</p>
<p class="subhead2"><a id="BRADV226"></a>To manually back up the control file:</p>
<ol>
<li>
<p>Start RMAN and connect to a target database and a recovery catalog (if used).</p>
</li>
<li>
<p>Ensure the target database is mounted or open.</p>
</li>
<li>
<p><a id="sthref809"></a><a id="sthref810"></a>Execute the <code dir="ltr">BACKUP</code> command with the desired control file clause.</p>
<p>The following example backs up tablespace <code dir="ltr">users</code> to tape and includes the current control file in the backup:</p>
<pre dir="ltr">
BACKUP DEVICE TYPE sbt 
  TABLESPACE users 
  INCLUDE CURRENT CONTROLFILE;
</pre>
<p><a id="sthref811"></a><a id="sthref812"></a>The following example backs up the current control file to the default disk device:</p>
<pre dir="ltr">
BACKUP AS COPY
  CURRENT CONTROLFILE 
  FORMAT '/tmp/control01.ctl';
</pre>
<p>The following example backs up the control file copy created in the previous example to tape:</p>
<pre dir="ltr">
BACKUP AS COPY 
  CURRENT CONTROLFILE 
  FORMAT '/tmp/control01.ctl';
BACKUP DEVICE TYPE sbt 
  CONTROLFILECOPY '/tmp/control01.ctl';
</pre>
<p>If the control file autobackup feature is enabled, then RMAN makes two control file backups in these examples: the explicit backup of the files specified in the <code dir="ltr">BACKUP</code> command and the control file and server parameter file autobackup.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink RCMRF113" href="../../backup.112/e10643/rcmsynta010.htm#RCMRF113"><span class="italic">Oracle Database Backup and Recovery Reference</span></a> to learn about the <code dir="ltr">CONFIGURE CONTROLFILE AUTOBACKUP</code> command</div>
</li>
</ol>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="i1025972"></a>
<div id="BRADV89519" class="sect2">
<h3 class="sect2">Backing Up Server Parameter Files with RMAN</h3>
<p><a id="sthref813"></a><a id="sthref814"></a>As explained in <a href="#i1009642">"Backing Up Control Files with RMAN"</a>, RMAN automatically backs up the current server parameter file in certain cases. <a id="sthref815"></a><a id="sthref816"></a>The <code dir="ltr">BACKUP</code> <code dir="ltr">SPFILE</code> command backs up the parameter file explicitly. The server parameter file that is backed up is the one currently in use by the instance.</p>
<p class="subhead2"><a id="BRADV230"></a>To back up the server parameter file:</p>
<ol>
<li>
<p>Start RMAN and connect to a target database and a recovery catalog (if used).</p>
</li>
<li>
<p>Ensure the target database is mounted or open.</p>
<p>The database must have been started with a server parameter file. If the instance is started with a client-side initialization parameter file, then RMAN issues an error if you execute <code dir="ltr">BACKUP ... SPFILE</code>.</p>
</li>
<li>
<p>Execute the <code dir="ltr">BACKUP ... SPFILE</code> command.</p>
<p>The following example backs up the server parameter file to tape:</p>
<pre dir="ltr">
BACKUP DEVICE TYPE sbt SPFILE;
</pre></li>
</ol>
</div>
<!-- class="sect2" -->
<a id="i1006761"></a>
<div id="BRADV89526" class="sect2">
<h3 class="sect2">Backing Up a Database in NOARCHIVELOG Mode</h3>
<p><a id="sthref817"></a><a id="sthref818"></a><a id="sthref819"></a>You can only backup a database in <code dir="ltr">NOARCHIVELOG</code> mode when the database is closed and in a consistent state. The script shown in <a href="#BGBBDDEA">Example 9-8</a> puts the database into the correct mode for a consistent, whole database backup and then backs up the database. The script assumes that <a href="glossary.htm#i432379"><span class="xrefglossterm">control file autobackup</span></a> is enabled for the database.</p>
<div id="BRADV231" class="example">
<p class="titleinexample"><a id="BGBBDDEA"></a>Example 9-8 Backing Up a Database in NOARCHIVELOG Mode</p>
<pre dir="ltr">
SHUTDOWN IMMEDIATE; 
# Start up the database in case it suffered instance failure or was 
# closed with SHUTDOWN ABORT before starting this script. 
STARTUP FORCE DBA; 
SHUTDOWN IMMEDIATE; 
STARTUP MOUNT;
# this example uses automatic channels to make the backup
BACKUP 
  INCREMENTAL LEVEL 0
  MAXSETSIZE 10M
  DATABASE
  TAG 'BACKUP_1';
# Now that the backup is complete, open the database. 
ALTER DATABASE OPEN; 
</pre></div>
<!-- class="example" -->
<p>You can skip tablespaces, such as read-only tablespaces, but any skipped tablespace that has not been offline or read-only since its last backup is lost if the database has to be restored from a backup.</p>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="i1006454"></a>
<div id="BRADV81399" class="sect1">
<h2 class="sect1">Backing Up Archived Redo Logs with RMAN</h2>
<p><a id="sthref820"></a><a id="sthref821"></a><a id="sthref822"></a><a id="sthref823"></a>Archived redo logs are the key to successful media recovery. You should back them up regularly.</p>
<a id="i1012928"></a>
<div id="BRADV89520" class="sect2">
<h3 class="sect2">About Backups of Archived Redo Logs</h3>
<p>Several features of RMAN backups are specific to archived redo logs. <a id="sthref824"></a><a id="sthref825"></a>For example, you can use <code dir="ltr">BACKUP ... DELETE</code> to <a id="sthref826"></a>delete one or all copies of archived redo logs from disk after backing them up to backup sets.</p>
<a id="CHDHJHBE"></a>
<div id="BRADV89521" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Archived Redo Log Failover</h4>
<p><a id="sthref827"></a>Even if your redo logs are being archived to multiple destinations and you use RMAN to back up archived redo logs, RMAN selects only one copy of the archived redo log file to include in the backup set. Because logs with the same log sequence number are identical, RMAN does not need to include more than one log copy.</p>
<p>The <a href="glossary.htm#CHDICIBG"><span class="xrefglossterm">archived redo log failover</span></a> feature enables RMAN to complete a backup even when some archiving destinations are missing logs or contain logs with corrupt blocks. If at least one log corresponding to a given log sequence and thread is available in the fast recovery area or any of the archiving destinations, then RMAN tries to back it up. If RMAN finds a corrupt block in a log file during backup, it searches other destinations for a copy of that log without corrupt blocks.</p>
<p>For example, assume that you archive logs 121 through 124 to two destinations: <code dir="ltr">/arch1</code> and <code dir="ltr">/arch2</code>. <a href="#CHDHDGAE">Table 9-1</a> shows the archived redo log records in the control file.</p>
<div id="BRADV232" class="tblruleformal">
<p class="titleintable"><a id="sthref828"></a><a id="CHDHDGAE"></a>Table 9-1 Sample Archived Redo Log Records</p>
<table class="cellalignment1945" title="Sample Archived Redo Log Records" summary="Sampled archived redo log records" dir="ltr">
<thead>
<tr class="cellalignment1934">
<th class="cellalignment1941" id="r1c1-t14">Sequence</th>
<th class="cellalignment1941" id="r1c2-t14">Filename in /arch1</th>
<th class="cellalignment1941" id="r1c3-t14">Filename in /arch2</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1934">
<td class="cellalignment1942" id="r2c1-t14" headers="r1c1-t14">
<p>121</p>
</td>
<td class="cellalignment1942" headers="r2c1-t14 r1c2-t14">
<p><code dir="ltr">/arch1/archive1_121.arc</code></p>
</td>
<td class="cellalignment1942" headers="r2c1-t14 r1c3-t14">
<p><code dir="ltr">/arch2/archive1_121.arc</code></p>
</td>
</tr>
<tr class="cellalignment1934">
<td class="cellalignment1942" id="r3c1-t14" headers="r1c1-t14">
<p>122</p>
</td>
<td class="cellalignment1942" headers="r3c1-t14 r1c2-t14">
<p><code dir="ltr">/arch1/archive1_122.arc</code></p>
</td>
<td class="cellalignment1942" headers="r3c1-t14 r1c3-t14">
<p><code dir="ltr">/arch2/archive1_122.arc</code></p>
</td>
</tr>
<tr class="cellalignment1934">
<td class="cellalignment1942" id="r4c1-t14" headers="r1c1-t14">
<p>123</p>
</td>
<td class="cellalignment1942" headers="r4c1-t14 r1c2-t14">
<p><code dir="ltr">/arch1/archive1_123.arc</code></p>
</td>
<td class="cellalignment1942" headers="r4c1-t14 r1c3-t14">
<p><code dir="ltr">/arch2/archive1_123.arc</code></p>
</td>
</tr>
<tr class="cellalignment1934">
<td class="cellalignment1942" id="r5c1-t14" headers="r1c1-t14">
<p>124</p>
</td>
<td class="cellalignment1942" headers="r5c1-t14 r1c2-t14">
<p><code dir="ltr">/arch1/archive1_124.arc</code></p>
</td>
<td class="cellalignment1942" headers="r5c1-t14 r1c3-t14">
<p><code dir="ltr">/arch2/archive1_124.arc</code></p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblruleformal" -->
<p>However, unknown to RMAN, a user deletes logs 122 and 124 from the <code dir="ltr">/arch1</code> directory. Afterward, you run the following backup:</p>
<pre dir="ltr">
BACKUP ARCHIVELOG
  FROM  SEQUENCE 121 
  UNTIL SEQUENCE 125;
</pre>
<p>With failover, RMAN completes the backup, using logs 122 and 124 in <code dir="ltr">/arch2</code>.</p>
</div>
<!-- class="sect3" -->
<div id="BRADV89523" class="sect3"><!-- infolevel="all" infotype="General" --><a id="sthref829"></a>
<h4 class="sect3">Online Redo Log Switching</h4>
<p>Another important RMAN feature is automatic online redo log switching. To make an open database backup of archived redo logs that includes the most recent online redo log, you can execute <a id="sthref830"></a><a id="sthref831"></a>the <code dir="ltr">BACKUP</code> command with any of the following clauses:</p>
<ul>
<li>
<p><code dir="ltr">PLUS ARCHIVELOG</code></p>
</li>
<li>
<p><code dir="ltr">ARCHIVELOG ALL</code></p>
</li>
<li>
<p><code dir="ltr">ARCHIVELOG FROM ...</code></p>
</li>
</ul>
<p>Before beginning the backup, RMAN switches out of the current redo log group, and archives all online redo logs that have not yet been archived, up to and including the redo log group that was current when the command was issued. This feature ensures that the backup contains all redo generated before the start of the command.</p>
<p><a id="sthref832"></a><a id="sthref833"></a>An effective way of backing up archived redo logs is the <code dir="ltr">BACKUP</code> <code dir="ltr">...</code> <code dir="ltr">PLUS</code> <code dir="ltr">ARCHIVELOG</code> command, which causes RMAN to do the following:</p>
<ol>
<li>
<p>Runs the <a class="olink SQLRF00902" href="../../server.112/e41084/statements_2014.htm#SQLRF00902"><code dir="ltr">ALTER SYSTEM</code></a> <code dir="ltr">ARCHIVE</code> <code dir="ltr">LOG</code> <code dir="ltr">CURRENT</code> statement.</p>
</li>
<li>
<p><a id="sthref834"></a><a id="sthref835"></a>Runs <code dir="ltr">BACKUP</code> <code dir="ltr">ARCHIVELOG</code> <code dir="ltr">ALL</code>. If <a href="glossary.htm#CHDBBJCB"><span class="xrefglossterm">backup optimization</span></a> is enabled, then RMAN skips logs that it has already backed up to the specified device.</p>
</li>
<li>
<p>Backs up the rest of the files specified in the <code dir="ltr">BACKUP</code> command.</p>
</li>
<li>
<p>Runs the <code dir="ltr">ALTER</code> <code dir="ltr">SYSTEM</code> <code dir="ltr">ARCHIVE</code> <code dir="ltr">LOG</code> <code dir="ltr">CURRENT</code> statement.</p>
</li>
<li>
<p>Backs up any remaining archived logs generated during the backup. If backup optimization is not enabled, then RMAN backs up the logs generated in Step 1 plus all the logs generated during the backup.</p>
</li>
</ol>
<p>The preceding steps guarantee that data file backups taken during the command are recoverable to a consistent state. Also, unless the online redo log is archived at the end of the backup, <code dir="ltr">DUPLICATE</code> is not possible with the backup.</p>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="CHDDAIID"></a>
<div id="BRADV89525" class="sect2">
<h3 class="sect2">Backing Up Archived Redo Log Files</h3>
<p><a id="sthref836"></a><a id="sthref837"></a>To back up archived logs, use the <code dir="ltr">BACKUP</code> <code dir="ltr">ARCHIVELOG</code> command. If <a href="glossary.htm#CHDBBJCB"><span class="xrefglossterm">backup optimization</span></a> is enabled, then RMAN skips backups of archived logs that have already been backed up to the specified device.</p>
<p class="subhead2"><a id="BRADV611"></a>To back up archived redo log files:</p>
<ol>
<li>
<p>Start RMAN and connect to a target database and a recovery catalog (if used).</p>
</li>
<li>
<p>Ensure that the target database is mounted or open.</p>
</li>
<li>
<p>Execute the <code dir="ltr">BACKUP ARCHIVELOG</code> or <code dir="ltr">BACKUP ... PLUS ARCHIVELOG</code> command.</p>
<p>The following example backs up the database and all archived redo logs:</p>
<pre dir="ltr">
BACKUP DATABASE PLUS ARCHIVELOG;
</pre>
<p>The following example uses a configured disk or SBT channel to back up one copy of each log sequence number for all archived redo logs:</p>
<pre dir="ltr">
BACKUP ARCHIVELOG ALL;
</pre>
<p>You can also specify a range of archived redo logs by time, SCN, or log sequence number, as in the following example:</p>
<pre dir="ltr">
BACKUP ARCHIVELOG 
  FROM TIME  'SYSDATE-30'
  UNTIL TIME 'SYSDATE-7';
</pre></li>
</ol>
</div>
<!-- class="sect2" -->
<div id="BRADV89522" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref838"></a>
<h3 class="sect2">Backing Up Only Archived Redo Logs That Need Backups</h3>
<p><a id="sthref839"></a>You can indicate that RMAN should <span class="italic">automatically</span> skip backups of archived redo logs in the following ways:</p>
<ul>
<li>
<p>Configure <a href="glossary.htm#CHDBBJCB"><span class="xrefglossterm">backup optimization</span></a>.</p>
<p>As explained in <a href="rcmconfb.htm#i1015217">"Backup Optimization and the CONFIGURE command"</a>, <a id="sthref840"></a><a id="sthref841"></a><a id="sthref842"></a>if you enable <a href="glossary.htm#CHDBBJCB"><span class="xrefglossterm">backup optimization</span></a>, then <a id="sthref843"></a><a id="sthref844"></a>the <a class="olink RCMRF107" href="../../backup.112/e10643/rcmsynta007.htm#RCMRF107"><code dir="ltr">BACKUP ARCHIVELOG</code></a> command skips backing up files when an identical archived log has already been backed up to the specified device type. An archived log is considered identical to another when it has the same DBID, thread, sequence number, and <code dir="ltr">RESETLOGS</code> SCN and time.</p>
</li>
<li>
<p><a id="sthref845"></a>Configure an <a href="glossary.htm#CHDGCGHA"><span class="xrefglossterm">archived redo log deletion policy</span></a>.</p>
<p>As explained in <a href="rcmconfb.htm#CHDCFHBG">"Configuring an Archived Redo Log Deletion Policy"</a>, if the deletion policy is configured with the <code dir="ltr">BACKED UP</code> <code dir="ltr"><span class="codeinlineitalic">integer</span></code> <code dir="ltr">TIMES</code> clause, then a <code dir="ltr">BACKUP ARCHIVELOG</code> command copies the logs unless <code dir="ltr"><span class="codeinlineitalic">integer</span></code> backups already exist on the specified device type. If <code dir="ltr"><span class="codeinlineitalic">integer</span></code> backups of the logs exist, then the <code dir="ltr">BACKUP ARCHIVELOG</code> command skips the logs.</p>
</li>
</ul>
<p>The <code dir="ltr">BACKUP ... NOT BACKED UP</code> <code dir="ltr"><span class="codeinlineitalic">integer</span></code> <code dir="ltr">TIMES</code> command specifies that RMAN should back up only those archived log files that have not been backed up at least <code dir="ltr"><span class="codeinlineitalic">integer</span></code> times to the specified device. To determine the number of backups for a file, RMAN only considers backups created on the same device type as the current backup.</p>
<p>The <code dir="ltr">BACKED UP</code> clause is a convenient way to back up archived logs to a specified device type. For example, you can specify that RMAN should keep two copies of each archived redo log on tape and skip additional backups.</p>
<p class="subhead2"><a id="BRADV234"></a>To back up archived redo logs that need backups:</p>
<ol>
<li>
<p>Start RMAN and connect to a target database and a recovery catalog (if used).</p>
</li>
<li>
<p>Ensure that the target database is mounted or open.</p>
</li>
<li>
<p>Ensure that appropriate channels are configured for the backup.</p>
</li>
<li>
<p><a id="sthref846"></a><a id="sthref847"></a>Execute the <code dir="ltr">BACKUP ARCHIVELOG</code> command with the <code dir="ltr">NOT BACKED UP</code> clause.</p>
<pre dir="ltr">
BACKUP ARCHIVELOG ALL NOT BACKED UP 2 TIMES;
</pre></li>
</ol>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="rcmbckad.htm#i1006854">"Using Backup Optimization to Skip Files"</a> for scenarios using <code dir="ltr">NOT BACKED UP</code></div>
</div>
<!-- class="sect2" -->
<a id="CHDGEBEG"></a>
<div id="BRADV89524" class="sect2">
<h3 class="sect2">Deleting Archived Redo Logs After Backups</h3>
<p>The <code dir="ltr">BACKUP ARCHIVELOG</code> <code dir="ltr">... DELETE INPUT</code> command deletes archived log files after they are backed up. This command eliminates the separate step of manually deleting archived redo logs. <a id="sthref848"></a></p>
<p>With <code dir="ltr">DELETE</code> <code dir="ltr">INPUT</code>, RMAN deletes only the specific copy of the archived log chosen for the backup set. With <code dir="ltr">DELETE</code> <code dir="ltr">ALL</code> <code dir="ltr">INPUT</code>, RMAN deletes each backed-up archived redo log file from all log archiving destinations.</p>
<p>As explained in <a href="rcmconfb.htm#CHDCFHBG">"Configuring an Archived Redo Log Deletion Policy"</a>, <a id="sthref849"></a><a id="sthref850"></a>the <code dir="ltr">BACKUP ... DELETE INPUT</code> and <code dir="ltr">DELETE ARCHIVELOG</code> commands obey the <a href="glossary.htm#CHDGCGHA"><span class="xrefglossterm">archived redo log deletion policy</span></a> for logs in all archiving locations. For example, if you specify that logs should only be deleted when backed up at least twice to tape, then <code dir="ltr">BACKUP ... DELETE</code> honors this policy.</p>
<p>For the following procedure, assume that you archive to <code dir="ltr">/arc_dest1</code>, <code dir="ltr">/arc_dest2</code>, and the fast recovery area.</p>
<p class="subhead2"><a id="BRADV235"></a>To delete archived redo logs after a backup:</p>
<ol>
<li>
<p>Start RMAN and connect to a target database and a recovery catalog (if used).</p>
</li>
<li>
<p>Ensure that the target database is mounted or open.</p>
</li>
<li>
<p>Run the <code dir="ltr">BACKUP</code> command with the <code dir="ltr">DELETE INPUT</code> clause.</p>
<p>Assume that you run the following <code dir="ltr">BACKUP</code> command:</p>
<pre dir="ltr">
BACKUP DEVICE TYPE sbt 
  ARCHIVELOG ALL 
    DELETE ALL INPUT;
</pre>
<p>In this case, RMAN backs up only one copy of each log sequence number in these archiving locations. RMAN deletes <span class="italic">all</span> copies of any log that it backed up from both the fast recovery area and the other archiving destinations.</p>
<p>If you had specified <code dir="ltr">DELETE</code> <code dir="ltr">INPUT</code> rather than <code dir="ltr">DELETE</code> <code dir="ltr">ALL</code> <code dir="ltr">INPUT</code>, then RMAN would have only deleted the specific archived redo log files that it backed up. For example, RMAN would delete the logs in <code dir="ltr">/arc_dest1</code> if these files were used as the source of the backup, but leave the contents of the <code dir="ltr">/arc_dest2</code> intact.</p>
</li>
</ol>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a class="olink SBYDB04700" href="../../server.112/e41134/rman.htm#SBYDB04700"><span class="italic">Oracle Data Guard Concepts and Administration</span></a> to learn about archived redo log management with standby databases</p>
</li>
<li>
<p><a class="olink RCMRF113" href="../../backup.112/e10643/rcmsynta010.htm#RCMRF113"><span class="italic">Oracle Database Backup and Recovery Reference</span></a> to learn about the <code dir="ltr">CONFIGURE ARCHIVELOG DELETION POLICY</code> command</p>
</li>
<li>
<p><a class="olink RCMRF121" href="../../backup.112/e10643/rcmsynta016.htm#RCMRF121"><span class="italic">Oracle Database Backup and Recovery Reference</span></a> to learn about the <code dir="ltr">DELETE ARCHIVELOG</code> command</p>
</li>
<li>
<p><a href="rcmmaint.htm#i1006215">"Deleting RMAN Backups and Archived Redo Logs"</a></p>
</li>
</ul>
</div>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="i1034163"></a>
<div id="BRADV8133" class="sect1">
<h2 class="sect1">Making and Updating Incremental Backups</h2>
<p><a id="sthref851"></a><a id="sthref852"></a><a id="sthref853"></a>As <a id="sthref854"></a>explained in <a href="rcmcncpt.htm#i1007616">"Incremental Backups"</a>, an <a href="glossary.htm#i432786"><span class="xrefglossterm">incremental backup</span></a> copies only data file blocks that have changed since a specified previous backup. An incremental backups is either a <a href="glossary.htm#i432455"><span class="xrefglossterm">cumulative incremental backup</span></a> or <a href="glossary.htm#i432588"><span class="xrefglossterm">differential incremental backup</span></a>.</p>
<p>Although the content of the backups is the same,<a id="sthref855"></a><a id="sthref856"></a> <code dir="ltr">BACKUP DATABASE</code> and <code dir="ltr">BACKUP INCREMENTAL LEVEL 0 DATABASE</code> are different. A <a href="glossary.htm#i432658"><span class="xrefglossterm">full backup</span></a> is not usable as part of an incremental strategy, whereas a <a href="glossary.htm#CHDCBDHA"><span class="xrefglossterm">level 0 incremental backup</span></a> is the basis of an incremental strategy. No RMAN command can change a full backup into a level 0 incremental backup.</p>
<p>As with full backups, RMAN can make incremental backups of an <code dir="ltr">ARCHIVELOG</code> mode database that is open. If the database is in <code dir="ltr">NOARCHIVELOG</code> mode, then RMAN can make incremental backups only after a consistent shutdown.</p>
<div id="BRADV89527" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref857"></a>
<h3 class="sect2">Purpose of Incremental Backups</h3>
<p>The primary reasons for making incremental backups part of your strategy are:</p>
<ul>
<li>
<p>Faster daily backups if <a href="glossary.htm#CHDIFJHF"><span class="xrefglossterm">block change tracking</span></a> is enabled (see <a href="#i1032148">"Using Block Change Tracking to Improve Incremental Backup Performance"</a>)</p>
</li>
<li>
<p>Ability to roll forward data file image copies, thereby reducing recovery time and avoiding repeated full backups.</p>
</li>
<li>
<p>Less bandwidth consumption when backing up over a network.</p>
</li>
<li>
<p>Improved performance when the aggregate tape bandwidth for tape write I/Os is much less than the aggregate disk bandwidth for disk read I/Os.</p>
</li>
<li>
<p>Possibility of recovering changes to objects created with the <code dir="ltr">NOLOGGING</code> option.</p>
<p>For example, direct load inserts do not create redo log entries, so their changes cannot be reproduced with media recovery. Direct load inserts do change data blocks, however, and these blocks are captured by incremental backups.</p>
</li>
<li>
<p>Synchronize a physical standby database with the primary database. You can use the RMAN <code dir="ltr">BACKUP INCREMENTAL FROM SCN</code> command to create a backup on the primary database that starts at the current SCN of the standby database, which you can then use to roll forward the standby database. See <a class="olink SBYDB04700" href="../../server.112/e41134/rman.htm#SBYDB04700"><span class="italic">Oracle Data Guard Concepts and Administration</span></a> to learn how to apply incremental backups to a standby database.</p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink ADMIN11374" href="../../server.112/e25494/tspaces.htm#ADMIN11374"><span class="italic">Oracle Database Administrator's Guide</span></a> for more information about <code dir="ltr">NOLOGGING</code> mode</div>
</div>
<!-- class="sect2" -->
<a id="i1011539"></a>
<div id="BRADV89528" class="sect2">
<h3 class="sect2">Planning an Incremental Backup Strategy</h3>
<p>Choose a backup strategy according to an acceptable <a href="glossary.htm#CHDEDCFG"><span class="xrefglossterm">MTTR</span></a> (mean time to recover). For example, you can implement a three-level backup scheme so that a level 0 backup is taken monthly, a cumulative level 1 is taken weekly, and a differential level 1 is taken daily. In this strategy, you never have to apply more than a day of redo for complete recovery.</p>
<p>When deciding how often to take level 0 backups, a general rule is to take a new level 0 backup whenever 20% or more of the data has changed. If the rate of change to your database is predictable, then you can observe the size of your incremental backups to determine when a new level 0 backup is appropriate. The following SQL query determines the number of blocks written to an incremental level 1 backup of each data file with at least 20% of its blocks backed up<a id="sthref858"></a>:</p>
<pre dir="ltr">
SELECT   FILE#, INCREMENTAL_LEVEL, COMPLETION_TIME, 
         BLOCKS, DATAFILE_BLOCKS 
FROM     V$BACKUP_DATAFILE 
WHERE    INCREMENTAL_LEVEL &gt; 0 
AND      BLOCKS / DATAFILE_BLOCKS &gt; .2
ORDER BY COMPLETION_TIME;
</pre>
<p>Compare the number of blocks in level 1 backups to a level 0 backup. For example, if you create only level 1 cumulative backups, then take a new level 0 backup when the most recent level 1 backup is about half of the size of the level 0 backup.</p>
<p>An effective way to conserve disk space is to make incremental backups to disk, and then offload the backups to tape with the <code dir="ltr">BACKUP</code> <code dir="ltr">AS</code> <code dir="ltr">BACKUPSET</code> command. Incremental backups are generally smaller than full backups, which limits the space required to store them until they are moved to tape. When the incremental backups on disk are backed up to tape, the tape is more likely to stream because all blocks of the incremental backup are copied to tape. There is no possibility of delay due to time required for RMAN to locate changed blocks in the datafiles.</p>
<p>Another strategy is to use incrementally updated backups as explained in <a href="#CHDEHBFF">"Incrementally Updating Backups"</a>. In this strategy, you create an image copy of each data file, then periodically roll forward this copy by making and then applying a level 1 incremental backup. In this way you avoid the overhead of making repeated full image copies of your data files, but enjoy all of the advantages.</p>
<p>In a Data Guard environment, you can offload incremental backups to a <a href="glossary.htm#CHDEJBIJ"><span class="xrefglossterm">physical standby database</span></a>. Incremental backups of a standby and primary database are interchangeable. Thus, you can apply an incremental backup of a standby database to a primary database, or apply an incremental backup of a primary database to a standby database.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink SBYDB04700" href="../../server.112/e41134/rman.htm#SBYDB04700"><span class="italic">Oracle Data Guard Concepts and Administration</span></a> to learn how to back up a standby database with RMAN. In particular, consult Chapter 9, "Managing Physical and Snapshot Standby Databases"</div>
</div>
<!-- class="sect2" -->
<div id="BRADV89529" class="sect2"><a id="sthref859"></a>
<h3 class="sect2">Making Incremental Backups</h3>
<p>After starting RMAN, run the<a id="sthref860"></a><a id="sthref861"></a> <code dir="ltr">BACKUP</code> <code dir="ltr">INCREMENTAL</code> command at the RMAN prompt. By default incremental backups are differential.</p>
<p class="subhead2"><a id="BRADV236"></a>To make an incremental backup:</p>
<ol>
<li>
<p>Start RMAN and connect to a target database and a recovery catalog (if used).</p>
</li>
<li>
<p>Ensure that the target database is mounted or open.</p>
</li>
<li>
<p>Execute the <code dir="ltr">BACKUP INCREMENTAL</code> command with the desired options.</p>
<p>Use the <code dir="ltr">LEVEL</code> parameter to indicate the incremental level. The following example makes a level 0 incremental database backup.</p>
<pre dir="ltr">
BACKUP
  INCREMENTAL LEVEL 0
  DATABASE;
</pre>
<p>The following example makes a <a href="glossary.htm#i432588"><span class="xrefglossterm">differential incremental backup</span></a> at level 1 of the <code dir="ltr">SYSTEM</code> and <code dir="ltr">tools</code> tablespaces. It only backs up those data blocks changed since the most recent level 1 or level 0 backup.</p>
<pre dir="ltr">
BACKUP
  INCREMENTAL LEVEL 1
  TABLESPACE SYSTEM, tools;
</pre>
<p>The following example makes a <a href="glossary.htm#i432455"><span class="xrefglossterm">cumulative incremental backup</span></a> at level 1 of the tablespace <code dir="ltr">users</code>, backing up all blocks changed since the most recent level 0 backup.</p>
<pre dir="ltr">
BACKUP
  INCREMENTAL LEVEL 1 CUMULATIVE
  TABLESPACE users;
</pre></li>
</ol>
<div id="BRADV89530" class="sect3"><!-- infolevel="all" infotype="General" --><a id="sthref862"></a>
<h4 class="sect3">Making Incremental Backups of a VSS Snapshot</h4>
<p>You can use the <a id="sthref863"></a><a href="glossary.htm#CHDEJEIH"><span class="xrefglossterm">Volume Shadow Copy Service (VSS)</span></a> with the Oracle VSS writer to make a <a id="sthref864"></a><a href="glossary.htm#CHDEIGEE"><span class="xrefglossterm">shadow copy</span></a> or snapshot of files in a database. You must use a third-party backup program other than RMAN to make VSS snapshots with the Oracle VSS writer. In this case, the <a href="glossary.htm#i999320"><span class="xrefglossterm">fast recovery area</span></a> automates management of files that are backed up in a VSS snapshot and deletes them as needed.</p>
<p>You can use the<a id="sthref865"></a><a id="sthref866"></a> <code dir="ltr">BACKUP INCREMENTAL LEVEL 1 ... FROM SCN</code> command in RMAN to create incremental backups in the fast recovery area. Thus, you can use this command to create an incremental level 1 backup of a VSS shadow copy. RMAN can apply incremental backups during recovery transparently.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink NTQRF" href="../../win.112/e10845/toc.htm"><span class="italic">Oracle Database Platform Guide for Microsoft Windows</span></a> to learn how to make VSS backups with RMAN</div>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="CHDEHBFF"></a>
<div id="BRADV8186" class="sect2">
<h3 class="sect2">Incrementally Updating Backups</h3>
<p><a id="sthref867"></a>By incrementally updating backups, you can avoid the overhead of making full image copy backups of datafiles, while also minimizing time required for media recovery of your database. For example, if you run a daily backup script, then you never have more than 1 day of redo to apply for media recovery.</p>
<p class="subhead2"><a id="BRADV237"></a>To incrementally update data file backups:</p>
<ol>
<li>
<p>Create a full image copy backup of a data file with a specified tag.</p>
</li>
<li>
<p>At regular intervals (such as daily), make a level 1 differential incremental backup of the data file and use the same tag as the base data file copy.</p>
</li>
<li>
<p>Apply the incremental backup to the most recent backup with the same tag.</p>
</li>
</ol>
<p>This technique rolls forward the backup to the time when the level 1 incremental backup was made. RMAN can restore this <a href="glossary.htm#CHDIGHBJ"><span class="xrefglossterm">incrementally updated backup</span></a> and apply changes from the redo log. The result is the same as restoring a data file backup taken at the SCN of the most recently applied incremental level 1 backup.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
If you run<a id="sthref868"></a> <code dir="ltr">RECOVER COPY</code> daily <span class="italic">without</span> specifying an <code dir="ltr">UNTIL TIME</code>, then a continuously updated image copy cannot satisfy a <a href="glossary.htm#i433328"><span class="xrefglossterm">recovery window</span></a> of more than a day. The incrementally updated backup feature is an optimization for fast media recovery.</div>
<div id="BRADV89531" class="sect3"><a id="sthref869"></a>
<h4 class="sect3">Incrementally Updating Backups: Basic Example</h4>
<p>To create incremental backups for use in an incrementally updated backups strategy, use the<a id="sthref870"></a><a id="sthref871"></a> <code dir="ltr">BACKUP ...</code> <code dir="ltr">FOR</code> <code dir="ltr">RECOVER</code> <code dir="ltr">OF</code> <code dir="ltr">COPY</code> <code dir="ltr">WITH</code> <code dir="ltr">TAG</code> form of the <code dir="ltr">BACKUP</code> command. The command is best understood in a sample script that implements the strategy.</p>
<p>The script in <a href="#CHDCHGAE">Example 9-9</a>, run regularly, is all that is required to implement a strategy based on incrementally updated backups.</p>
<div id="BRADV238" class="example">
<p class="titleinexample"><a id="CHDCHGAE"></a>Example 9-9 Basic Incremental Update Script</p>
<pre dir="ltr">
RUN
{
  RECOVER COPY OF DATABASE 
    WITH TAG 'incr_update';
  BACKUP 
    INCREMENTAL LEVEL 1
    FOR RECOVER OF COPY WITH TAG 'incr_update'
    DATABASE;
}
</pre></div>
<!-- class="example" -->
<p>To understand the script and the strategy, you must understand the effects of these two commands when no data file copies or incremental backups exist. Note two important features:</p>
<ul>
<li>
<p>The <code dir="ltr">BACKUP</code> command in <a href="#CHDCHGAE">Example 9-9</a> does not always create a level 1 incremental backup.</p>
</li>
<li>
<p>The <a class="olink RCMRF140" href="../../backup.112/e10643/rcmsynta2001.htm#RCMRF140"><code dir="ltr">RECOVER</code></a> command in <a href="#CHDCHGAE">Example 9-9</a> causes RMAN to apply any available incremental level 1 backups with the specified tag to a set of data file copies with the same tag.</p>
</li>
</ul>
<p><a href="#BGBGCEBG">Table 9-2</a> shows the effect of the script when it is run once per day starting Monday.</p>
<div id="BRADV239" class="tblruleformalwidemax">
<p class="titleintable"><a id="sthref872"></a><a id="BGBGCEBG"></a>Table 9-2 Effect of Basic Script When Run Daily</p>
<table class="cellalignment1945" title="Effect of Basic Script When Run Daily" summary="Incremental update strategy" dir="ltr">
<thead>
<tr class="cellalignment1934">
<th class="cellalignment1941" id="r1c1-t21">Command</th>
<th class="cellalignment1941" id="r1c2-t21">Monday</th>
<th class="cellalignment1941" id="r1c3-t21">Tuesday</th>
<th class="cellalignment1941" id="r1c4-t21">Wednesday</th>
<th class="cellalignment1941" id="r1c5-t21">Thursday Onward</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1934">
<td class="cellalignment1942" id="r2c1-t21" headers="r1c1-t21">
<p><code dir="ltr">RECOVER</code></p>
</td>
<td class="cellalignment1942" headers="r2c1-t21 r1c2-t21">
<p>Because no incremental backup or data file copy exists, the command generates a message (but not an error). That is, the command has no effect.</p>
</td>
<td class="cellalignment1942" headers="r2c1-t21 r1c3-t21">
<p>A database copy now exists, but no incremental level 1 backup exists with which to recover it. Thus, the <code dir="ltr">RECOVER</code> command has no effect.</p>
</td>
<td class="cellalignment1942" headers="r2c1-t21 r1c4-t21">
<p>The level 1 incremental backup made on Tuesday is applied to the database copy, bringing the copy up to the checkpoint SCN of the level 1 incremental backup.</p>
</td>
<td class="cellalignment1942" headers="r2c1-t21 r1c5-t21">
<p>The level 1 incremental backup made yesterday is applied to the database copy, bringing the copy up to the checkpoint SCN of the level 1 incremental backup.</p>
</td>
</tr>
<tr class="cellalignment1934">
<td class="cellalignment1942" id="r3c1-t21" headers="r1c1-t21">
<p><code dir="ltr">BACKUP</code></p>
</td>
<td class="cellalignment1942" headers="r3c1-t21 r1c2-t21">
<p>No level 0 image copy exists, so the command creates an image copy of the database and applies the tag <code dir="ltr">incr_update</code>. This copy is needed to begin the cycle of incremental updates.</p>
<p><span class="bold">Note:</span> If the script sets <code dir="ltr">DEVICE</code> <code dir="ltr">TYPE</code> <code dir="ltr">sbt</code>, then the first run creates the copy on disk, not on tape. Subsequent runs make level 1 backups on tape.</p>
</td>
<td class="cellalignment1942" headers="r3c1-t21 r1c3-t21">
<p>The command makes an incremental level 1 backup and assigns it the tag <code dir="ltr">incr_update</code>. This backup contains blocks that changed between Monday and Tuesday.</p>
</td>
<td class="cellalignment1942" headers="r3c1-t21 r1c4-t21">
<p>The command makes an incremental level 1 backup and assigns it the tag <code dir="ltr">incr_update</code>. This backup contains blocks that changed between Tuesday and Wednesday.</p>
</td>
<td class="cellalignment1942" headers="r3c1-t21 r1c5-t21">
<p>The command makes an incremental level 1 backup and assigns it the tag <code dir="ltr">incr_update</code>. This backup contains blocks that changed between now and the most recent backup with the tag <code dir="ltr">incr_update</code>.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblruleformalwidemax" -->
<p>Note the following additional details about <a href="#CHDCHGAE">Example 9-9</a>:</p>
<ul>
<li>
<p>Each time a data file is added to the database, an image copy of the new data file is created the next time the script runs. The next run makes the first level 1 incremental for the added data file. On all subsequent runs the new data file is processed like any other data file.</p>
</li>
<li>
<p>You must use tags to identify the data file copies and incremental backups in this strategy so that they do not interfere with other backup strategies. If you use multiple incremental backup strategies, then RMAN cannot unambiguously create incremental level 1 backups unless you tag level 0 backups.</p>
<p>The incremental level 1 backups to apply to those image copies are selected based upon the tag of the image copy datafiles and the available incremental level 1 backups. The tag is essential in the selection of the incremental level backups.</p>
</li>
<li>
<p>After the third run of the script, the following files would be available for a point-in-time recovery:</p>
<ul>
<li>
<p>An image copy of the database, as of the checkpoint SCN of the preceding run of the script, 24 hours earlier</p>
</li>
<li>
<p>An incremental backup for the changes after the checkpoint SCN of the preceding run</p>
</li>
<li>
<p>Archived redo logs including all changes between the checkpoint SCN of the image copy and the current time</p>
</li>
</ul>
<p>If you must restore and recover your database during the following 24 hours, then you can restore the data files from the incrementally updated data file copies. You can then apply changes from the most recent incremental level 1 and the redo logs to reach the desired SCN. At most, you have 24 hours of redo to apply, which limits how long point-in-time recovery takes to finish.</p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink ADMQS009" href="../../server.112/e10897/backrest.htm#ADMQS009"><span class="italic">Oracle Database 2 Day DBA</span></a> to see how this technique is used in the Oracle backup strategy with Enterprise Manager</div>
</div>
<!-- class="sect3" -->
<div id="BRADV89532" class="sect3"><a id="sthref873"></a>
<h4 class="sect3">Incrementally Updated Backups: Advanced Example</h4>
<p>You can extend the basic script in <a href="#CHDCHGAE">Example 9-9</a> to provide fast recoverability to a window greater than 24 hours. <a href="#CHDCDFDF">Example 9-10</a> shows how to maintain a window of seven days by specifying the beginning time of your window of recoverability in the <code dir="ltr">RECOVER</code> command.</p>
<div id="BRADV240" class="example">
<p class="titleinexample"><a id="CHDCDFDF"></a>Example 9-10 Advanced Incremental Update Script</p>
<pre dir="ltr">
RUN
{
  RECOVER COPY OF DATABASE 
    WITH TAG 'incr_update' 
    UNTIL TIME 'SYSDATE - 7';
  BACKUP
    INCREMENTAL LEVEL 1 
    FOR RECOVER OF COPY WITH TAG 'incr_update'
    DATABASE;
}
</pre></div>
<!-- class="example" -->
<p><a href="#BGBHAIFA">Table 9-3</a> shows the effect of the script when it is run once per day starting Monday, January 1.</p>
<div id="BRADV243" class="tblruleformalwidemax">
<p class="titleintable"><a id="sthref874"></a><a id="BGBHAIFA"></a>Table 9-3 Effect of Advanced Script When Run Daily</p>
<table class="cellalignment1945" title="Effect of Advanced Script When Run Daily" summary="Incremental update strategy" dir="ltr">
<thead>
<tr class="cellalignment1934">
<th class="cellalignment1941" id="r1c1-t23">Command</th>
<th class="cellalignment1941" id="r1c2-t23">Monday 1/1</th>
<th class="cellalignment1941" id="r1c3-t23">Tuesday 1/2 - Monday 1/8</th>
<th class="cellalignment1941" id="r1c4-t23">Tuesday 1/9</th>
<th class="cellalignment1941" id="r1c5-t23">Wednesday 1/10 Onward</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1934">
<td class="cellalignment1942" id="r2c1-t23" headers="r1c1-t23">
<p><code dir="ltr">RECOVER</code></p>
</td>
<td class="cellalignment1942" headers="r2c1-t23 r1c2-t23">
<p>Because no incremental backup or data file copy exists, the command generates a message (but not an error). That is, the command has no effect.</p>
</td>
<td class="cellalignment1942" headers="r2c1-t23 r1c3-t23">
<p>A database copy exists, but <code dir="ltr">SYSDATE-7</code> specifies a time <span class="italic">before</span> the base copy was created. For example, on Wednesday <code dir="ltr">SYSDATE-7</code> specifies the Wednesday <span class="italic">before</span> Monday 1/1. Thus, the <code dir="ltr">RECOVER</code> command has no effect.</p>
</td>
<td class="cellalignment1942" headers="r2c1-t23 r1c4-t23">
<p><code dir="ltr">SYSDATE-7</code> now specifies a date <span class="italic">after</span> the base copy was created. The database copy made on Monday 1/1 is updated with the incremental backup made on Tuesday 1/2, bringing the copy up to the checkpoint SCN of the level 1 incremental backup.</p>
</td>
<td class="cellalignment1942" headers="r2c1-t23 r1c5-t23">
<p>The database copy is updated with the incremental backup made 7 days ago, bringing the copy up to the checkpoint SCN of the level 1 incremental backup.</p>
</td>
</tr>
<tr class="cellalignment1934">
<td class="cellalignment1942" id="r3c1-t23" headers="r1c1-t23">
<p><code dir="ltr">BACKUP</code></p>
</td>
<td class="cellalignment1942" headers="r3c1-t23 r1c2-t23">
<p>No level 0 image copy exists, so the command creates an image copy of the database and applies the tag <code dir="ltr">incr_update</code>. This copy is needed to begin the cycle of incremental updates.</p>
<p><span class="bold">Note:</span> If the script sets <code dir="ltr">DEVICE</code> <code dir="ltr">TYPE</code> <code dir="ltr">sbt</code>, then the first run creates the copy on disk, not on tape. Subsequent runs make level 1 backups on tape.</p>
</td>
<td class="cellalignment1942" headers="r3c1-t23 r1c3-t23">
<p>The command makes an incremental level 1 backup and assigns it the tag <code dir="ltr">incr_update</code>. This backup contains blocks that changed between yesterday and today.</p>
</td>
<td class="cellalignment1942" headers="r3c1-t23 r1c4-t23">
<p>The command makes an incremental level 1 backup and assigns it the tag <code dir="ltr">incr_update</code>. This backup contains blocks that changed between Monday 1/8 and Tuesday 1/9.</p>
</td>
<td class="cellalignment1942" headers="r3c1-t23 r1c5-t23">
<p>The command makes an incremental level 1 backup and assigns it the tag <code dir="ltr">incr_update</code>. This backup contains blocks that changed between yesterday and today.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblruleformalwidemax" -->
<p>As with the basic script in <a href="#CHDCHGAE">Example 9-9</a>, you have fast recoverability to any point in time between the SCN of the data file copies and the present. RMAN can use both block changes from the incremental backups and individual changes from the redo logs. Because you have the daily level 1 incremental backups, you never need to apply more than 1 day of redo.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink RCMRF140" href="../../backup.112/e10643/rcmsynta2001.htm#RCMRF140"><span class="italic">Oracle Database Backup and Recovery Reference</span></a> to learn about the <code dir="ltr">RECOVER</code> command</div>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="i1032148"></a>
<div id="BRADV8125" class="sect2">
<h3 class="sect2">Using Block Change Tracking to Improve Incremental Backup Performance</h3>
<p><a id="sthref875"></a><a id="sthref876"></a><a id="sthref877"></a>The <a href="glossary.htm#CHDIFJHF"><span class="xrefglossterm">block change tracking</span></a> feature for incremental backups improves backup performance by recording changed blocks for each data file.</p>
<div id="BRADV89533" class="sect3"><!-- infolevel="all" infotype="General" --><a id="sthref878"></a>
<h4 class="sect3">About Block Change Tracking</h4>
<p>If block change tracking is enabled on a primary or standby database, then RMAN uses a <a href="glossary.htm#CHDBFBFB"><span class="xrefglossterm">block change tracking file</span></a> to identify changed blocks for incremental backups. By reading this small bitmap file to determine which blocks changed, RMAN avoids having to scan every block in the data file that it is backing up.</p>
<p>Block change tracking is disabled by default. Nevertheless, the benefits of avoiding full data file scans during backup are considerable, especially if only a small percentage of data blocks are changed between backups. If your backup strategy involves incremental backups, then block change tracking is recommended. Block change tracking does not change the commands used to perform incremental backups. The change tracking file requires no maintenance after initial configuration.</p>
<p>You can only enable block change tracking at a physical standby database if a license for the Oracle Active Data Guard option is enabled.</p>
<div id="BRADV100" class="sect4"><a id="sthref879"></a>
<h5 class="sect4">Space Management in the Block Change Tracking File</h5>
<p>The change tracking file maintains bitmaps that mark changes in the datafiles between backups. The database performs a bitmap switch before each backup. Oracle Database automatically manages space in the change tracking file to retain block change data that covers the eight most recent backups. After the maximum of eight bitmaps is reached, the oldest bitmap is overwritten by the bitmap that tracks the current changes.</p>
<p>The first level 0 incremental backup scans the entire data file. Subsequent incremental backups use the block change tracking file to scan only the blocks that have been marked as changed since the last backup. An incremental backup can be optimized only when it is based on a parent backup that was made after the start of the oldest bitmap in the block change tracking file.</p>
<p>Consider the eight-bitmap limit when developing your incremental backup strategy. For example, if you make a level 0 database backup followed by seven differential incremental backups, then the block change tracking file now includes eight bitmaps. If you then make a cumulative level 1 incremental backup, then RMAN cannot optimize the backup, because the bitmap corresponding to the parent level 0 backup is overwritten with the bitmap that tracks the current changes.</p>
</div>
<!-- class="sect4" -->
<div id="BRADV89534" class="sect4"><!-- infolevel="all" infotype="General" --><a id="sthref880"></a>
<h5 class="sect4">Location of the Block Change Tracking File</h5>
<p>One block change tracking file is created for the whole database. By default, the change tracking file is created as an <a href="glossary.htm#CHDHFIBA"><span class="xrefglossterm">Oracle managed file</span></a> in the destination specified by the <a class="olink REFRN10034" href="../../server.112/e40402/initparams053.htm#REFRN10034"><code dir="ltr">DB_CREATE_FILE_DEST</code></a> initialization parameter. You can also place the change tracking file in any location that you choose, by specifying its name when enabling block change tracking. Oracle recommends against using a raw device (that is, a disk without a file system) as a change tracking file.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
In an Oracle RAC environment, the change tracking file must be located on shared storage accessible from all nodes in the cluster.</div>
<p>RMAN does not support backup and recovery of the change tracking file. The database resets the change tracking file when it determines that the change tracking file is invalid. If you restore and recover the whole database or a subset, then the database resets the block change tracking file and starts tracking changes again. After you make a level 0 incremental backup, the next incremental backup can use change tracking data.</p>
</div>
<!-- class="sect4" -->
<div id="BRADV89535" class="sect4"><a id="sthref881"></a>
<h5 class="sect4">Size of the Block Change Tracking File</h5>
<p><a id="sthref882"></a>The size of the block change tracking file is proportional to the size of the database and the number of enabled threads of redo. The size of the block change tracking file can increase and decrease as the database changes. The size is not related to the frequency of updates to the database.</p>
<p>Typically, the space required for block change tracking for a single instance is approximately 1/30,000 the size of the data blocks to be tracked. For an Oracle RAC environment, it is 1/30,000 of the size of the database, times the number of enabled threads.</p>
<p>The following factors that may cause the file to be larger than this estimate suggests:</p>
<ul>
<li>
<p>To avoid the overhead of allocating space as your database grows, the block change tracking file size starts at 10 megabytes. New space is allocated in 10 MB increments. Thus, for any database up to approximately 300 gigabytes, the file size is no smaller than 10 MB, for up to approximately 600 gigabytes the file size is no smaller than 20 megabytes, and so on.</p>
</li>
<li>
<p>For each data file, a minimum of 320 kilobytes of space is allocated in the block change tracking file, regardless of the size of the data file. Thus, if you have a large number of relatively small data files, the change tracking file is larger than for databases with a smaller number of larger data files containing the same data.</p>
</li>
</ul>
</div>
<!-- class="sect4" --></div>
<!-- class="sect3" -->
<div id="BRADV89536" class="sect3"><a id="sthref883"></a>
<h4 class="sect3">Enabling and Disabling Block Change Tracking</h4>
<p><a id="sthref884"></a><a id="sthref885"></a>You can enable block change tracking when the database is either open or mounted. This section assumes that you intend to create the block change tracking file as an Oracle Managed File in the <a href="glossary.htm#CHDEJGJH"><span class="xrefglossterm">database area</span></a>, which is where the database maintains active database files such as data files, control files, and online redo log files. See <a href="rcmconfb.htm#CHDIBECI">"Overview of the Fast Recovery Area"</a> to learn about the database area and <a href="glossary.htm#i999320"><span class="xrefglossterm">fast recovery area</span></a>.</p>
<p class="subhead2"><a id="BRADV247"></a>To enable block change tracking:</p>
<ol>
<li>
<p>Start SQL*Plus and connect to a target database with administrator privileges.</p>
</li>
<li>
<p>Ensure <a id="sthref886"></a>that the <code dir="ltr">DB_CREATE_FILE_DEST</code> initialization parameter is set.</p>
<pre dir="ltr">
SHOW PARAMETER DB_CREATE_FILE_DEST
</pre>
<p>If the parameter is not set, and if the database is open, then you can set the parameter with the following form of the <a class="olink SQLRF00902" href="../../server.112/e41084/statements_2014.htm#SQLRF00902"><code dir="ltr">ALTER SYSTEM</code></a> statement:</p>
<pre dir="ltr">
ALTER SYSTEM SET 
  DB_CREATE_FILE_DEST = '/disk1/bct/'
  SCOPE=BOTH SID='*';
</pre></li>
<li>
<p>Enable block change tracking.</p>
<p>Execute the following <code dir="ltr">ALTER DATABASE</code> statement:</p>
<pre dir="ltr">
ALTER DATABASE ENABLE BLOCK CHANGE TRACKING;
</pre>
<p>You can also create the change tracking file in a location that you choose yourself by using the following form of SQL statement:</p>
<pre dir="ltr">
ALTER DATABASE ENABLE BLOCK CHANGE TRACKING 
  USING FILE '/mydir/rman_change_track.f' REUSE;
</pre>
<p>The <code dir="ltr">REUSE</code> option tells Oracle Database to overwrite any existing block change tracking file with the specified name.</p>
</li>
</ol>
</div>
<!-- class="sect3" -->
<div id="BRADV89537" class="sect3"><a id="sthref887"></a>
<h4 class="sect3">Disabling Block Change Tracking</h4>
<p><a id="sthref888"></a><a id="sthref889"></a>This section assumes that the block change tracking feature is currently enabled. When you disable block change tracking, the database removes the block change tracking file from the operating system.</p>
<p class="subhead2"><a id="BRADV248"></a>To disable block change tracking:</p>
<ol>
<li>
<p>Start SQL*Plus and connect to a target database with administrator privileges.</p>
</li>
<li>
<p>Ensure that the target database is mounted or open.</p>
</li>
<li>
<p>Disable block change tracking.</p>
<p>Execute the following <code dir="ltr">ALTER DATABASE</code> statement:</p>
<pre dir="ltr">
ALTER DATABASE DISABLE BLOCK CHANGE TRACKING;
</pre></li>
</ol>
</div>
<!-- class="sect3" -->
<div id="BRADV89538" class="sect3"><a id="sthref890"></a>
<h4 class="sect3">Checking Whether Change Tracking is Enabled</h4>
<p>You can query <a id="sthref891"></a>the <a class="olink REFRN30030" href="../../server.112/e40402/dynviews_1070.htm#REFRN30030"><code dir="ltr">V$BLOCK_CHANGE_TRACKING</code></a> view to determine whether change tracking is enabled, and if it is, the file name of the block change tracking file.</p>
<p class="subhead2"><a id="BRADV249"></a>To determine whether change tracking is enabled:</p>
<p>Enter the following query in SQL*Plus (sample output included):</p>
<pre dir="ltr">
COL STATUS   FORMAT A8
COL FILENAME FORMAT A60
 
SELECT STATUS, FILENAME
FROM   V$BLOCK_CHANGE_TRACKING;

STATUS   FILENAME
-------- ------------------------------------------------------------
ENABLED  /disk1/bct/RDBMS/changetracking/o1_mf_2f71np5j_.chg
</pre></div>
<!-- class="sect3" -->
<div id="BRADV89539" class="sect3"><a id="sthref892"></a>
<h4 class="sect3">Changing the Location of the Block Change Tracking File</h4>
<p><a id="sthref893"></a>To move the change tracking file, use the <a class="olink SQLRF00802" href="../../server.112/e41084/statements_1004.htm#SQLRF00802"><code dir="ltr">ALTER DATABASE RENAME FILE</code></a> statement. The database must be mounted. The statement updates the control file to refer to the new location and preserves the contents of the change tracking file. If you cannot shut down the database, then you can disable and enable block change tracking. In this case, you lose the contents of the existing block change tracking file.</p>
<p class="subhead2"><a id="BRADV250"></a>To change the location of the change tracking file:</p>
<ol>
<li>
<p>Start SQL*Plus and connect to a target database.</p>
</li>
<li>
<p>If necessary, determine the current name of the change tracking file:</p>
<pre dir="ltr">
SQL&gt; SELECT FILENAME FROM V$BLOCK_CHANGE_TRACKING;
</pre></li>
<li>
<p>If possible, shut down the database. For example:</p>
<pre dir="ltr">
SQL&gt; SHUTDOWN IMMEDIATE
</pre>
<p>If you shut down the database, then skip to the next step. If you choose not to shut down the database, then execute the following SQL statements and skip all remaining steps:</p>
<pre dir="ltr">
SQL&gt; ALTER DATABASE DISABLE BLOCK CHANGE TRACKING;
SQL&gt; ALTER DATABASE ENABLE BLOCK CHANGE TRACKING USING FILE '<span class="italic">new_location</span>';
</pre>
<p>In this case you lose the contents of the block change tracking file. Until the next time you complete a level 0 incremental backup, RMAN must scan the entire file.</p>
</li>
<li>
<p>Using host operating system commands, move the change tracking file to its new location.</p>
</li>
<li>
<p>Mount the database and move the change tracking file to a location that has more space. For example:</p>
<pre dir="ltr">
ALTER DATABASE RENAME FILE
   '/disk1/bct/RDBMS/changetracking/o1_mf_2f71np5j_.chg' TO 
   '/disk2/bct/RDBMS/changetracking/o1_mf_2f71np5j_.chg';
</pre>
<p>This statement changes the location of the change tracking file while preserving its contents.</p>
</li>
<li>
<p>Open the database:</p>
<pre dir="ltr">
SQL&gt; ALTER DATABASE OPEN;
</pre></li>
</ol>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink SQLRF" href="../../server.112/e41084/toc.htm"><span class="italic">Oracle Database SQL Language Reference</span></a> to learn about the <a class="olink SQLRF00802" href="../../server.112/e41084/statements_1004.htm#SQLRF00802"><code dir="ltr">ALTER DATABASE</code></a> statement and the <a class="olink SQLRF00902" href="../../server.112/e41084/statements_2014.htm#SQLRF00902"><code dir="ltr">ALTER SYSTEM</code></a> statement</div>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="CHDHAFHJ"></a>
<div id="BRADV89551" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Making Database Backups for Long-Term Storage</h2>
<p>This section explains the basic concepts and tasks involved in making backups for long-term storage.</p>
<div id="BRADV89552" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref894"></a>
<h3 class="sect2">Purpose of Archival Backups</h3>
<p><a id="sthref895"></a>You can <a id="sthref896"></a><a id="sthref897"></a>use <a class="olink RCMRF107" href="../../backup.112/e10643/rcmsynta007.htm#RCMRF107"><code dir="ltr">BACKUP</code></a> <code dir="ltr">... KEEP</code> to create a backup that is both all-inclusive and exempt from the <a href="glossary.htm#i432137"><span class="xrefglossterm">backup retention policy</span></a>. The backup is all-inclusive because every file needed to restore and recover the database is backed up to a single disk or tape location. The <code dir="ltr">KEEP</code> option also specifies that the backup should be exempt from the retention policy either forever or for a specified period of time. The general name for a backup created with <code dir="ltr">BACKUP ... KEEP</code> is an <a href="glossary.htm#CHDEAHIB"><span class="xrefglossterm">archival backup</span></a>.</p>
<p><a id="sthref898"></a><a id="sthref899"></a><a id="sthref900"></a>As explained in <a href="rcmintro.htm#CHDDFHGI">"Data Preservation"</a>, one purpose of a backup and recovery strategy is to preserve data. You can use <code dir="ltr">BACKUP ... KEEP</code> to retain a database backup for longer than the time dictated by the retention policy. For example, you can back up the database on the first day of every year to satisfy a regulatory requirement and store the media offsite. Years after you make the archival backup, you could restore and recover it to query the data as it appeared at the time of the backup.</p>
<p>Another purpose of an archival backup is to create a backup to restore for testing purposes and then delete. For example, you can back up the database, restore the database in a test environment, and then discard the archival backup after the test database is operational. A related purpose is to create a self-contained backup that you can delete after transferring it to another user or host. For example, another user might want a copy of the database for reporting or testing.</p>
</div>
<!-- class="sect2" -->
<div id="BRADV89553" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref901"></a>
<h3 class="sect2">Basic Concepts of Archival Backups</h3>
<p>You can exempt a backup from the retention policy by using the <code dir="ltr">KEEP</code> option with the <code dir="ltr">BACKUP</code> command. You can also use the <code dir="ltr">KEEP</code> and <code dir="ltr">NOKEEP</code> options of the <a class="olink RCMRF110" href="../../backup.112/e10643/rcmsynta009.htm#RCMRF110"><code dir="ltr">CHANGE</code></a> command to change the status of an existing backup. Backups with <code dir="ltr">KEEP</code> attributes are valid backups that can be recovered like any other backups.</p>
<p>You can specify an end date for an archival backup with the <a class="olink RCMRF160" href="../../backup.112/e10643/rcmsubcl019.htm#RCMRF160"><code dir="ltr">KEEP UNTIL TIME</code></a> clause, or specify that the backup should be kept <code dir="ltr">FOREVER</code>. If you specify <code dir="ltr">UNTIL</code>, then RMAN marks the backup as obsolete when the <code dir="ltr">UNTIL</code> time has passed, regardless of any configured retention policy. For example, if you specify <code dir="ltr">KEEP UNTIL TIME '01-JAN-08'</code>, then the backup is obsolete one second after midnight on January 1. If you specify an <code dir="ltr">UNTIL TIME</code> of 9:00 p.m, then the backup is obsolete at 9:01 p.m.</p>
<p>When you specify <code dir="ltr">KEEP</code> on the <code dir="ltr">BACKUP</code> command, RMAN generates multiple backup sets. Note the following characteristics of the <code dir="ltr">BACKUP ... KEEP</code> command:</p>
<ul>
<li>
<p><a id="sthref902"></a><a id="sthref903"></a>It automatically backs up the data files, control file (even if the <a href="glossary.htm#i432379"><span class="xrefglossterm">control file autobackup</span></a> is disabled), and the server parameter file.</p>
</li>
<li>
<p>It automatically generates an archived redo log backup to ensure that the database backup can be recovered to a consistent state.</p>
</li>
<li>
<p>If the <code dir="ltr">FORMAT</code>, <code dir="ltr">POOL</code>, or <code dir="ltr">TAG</code> parameters are specified, then they are used for all backups. For this reason, the <code dir="ltr">FORMAT</code> string must allow for the creation of multiple backup pieces. Specifying the <code dir="ltr">%U</code> substitution variable is the easiest way to meet this requirement.</p>
</li>
<li>
<p>It supports an optional <code dir="ltr">RESTORE POINT</code> clause that creates a <a href="glossary.htm#CHDIEBAH"><span class="xrefglossterm">normal restore point</span></a>, which is a label for an SCN to which the backup must be recovered to be made consistent. The SCN is captured just after the data file backups complete. RMAN resynchronizes restore points with the <a href="glossary.htm#i433280"><span class="xrefglossterm">recovery catalog</span></a> and maintains the restore points as long as the backup exists. <a href="flashdb.htm#CFHGBFEI">"Listing Restore Points"</a> explains how to display restore points.</p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink RCMRF110" href="../../backup.112/e10643/rcmsynta009.htm#RCMRF110"><span class="italic">Oracle Database Backup and Recovery Reference</span></a> for <code dir="ltr">CHANGE</code> syntax and <a class="olink RCMRF107" href="../../backup.112/e10643/rcmsynta007.htm#RCMRF107"><span class="italic">Oracle Database Backup and Recovery Reference</span></a> for <code dir="ltr">BACKUP ... KEEP</code> syntax</div>
</div>
<!-- class="sect2" -->
<a id="CHDDGEBF"></a>
<div id="BRADV89554" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Making an Archival Backup for Long-Term Storage</h3>
<p>Typically, you make an archival backup to tape. Because your data protection backups are most likely to be on a set of tapes that remain accessible and are recycled, it is advisable to earmark a set of tapes for the archival backup. You can write the archival backup to this special set of tapes and then place them in offsite storage.</p>
<p><a id="sthref904"></a>You can vary the procedure for creating an archival backup by creating a <a id="sthref905"></a><a href="glossary.htm#i433542"><span class="xrefglossterm">stored script</span></a> or shell script that updates dynamically. When you run the script, you can dynamically set the name of the restore point, backup format, and so on.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="rcmdupdb.htm#BGBFCFGA">"Backup-Based Duplication Without a Target Connection: Example"</a> to learn the recommended technique for restoring an archival backup</p>
</li>
<li>
<p><a href="rcmcnctg.htm#CHDFIGBC">"Using Substitution Variables in Command Files"</a> and <a href="rcmcatdb.htm#CHDBDEAH">"Creating and Executing Dynamic Stored Scripts"</a> to learn how to make archival backups with RMAN command files.</p>
</li>
</ul>
</div>
<div id="BRADV89555" class="sect3"><!-- infolevel="all" infotype="General" --><a id="sthref906"></a>
<h4 class="sect3">Making an Archival Backup</h4>
<p>This scenario makes a long-term archival backup with a backup <a href="glossary.htm#CHDJHFIH"><span class="xrefglossterm">tag</span></a> of <code dir="ltr">QUARTERLY</code> and assigns it to a special family of Oracle Secure Backup tapes reserved for long-term storage. Note the following features of this example:</p>
<ul>
<li>
<p>The <code dir="ltr">FOREVER</code> keyword indicates that this backup is never eligible for deletion by the <a href="glossary.htm#i432137"><span class="xrefglossterm">backup retention policy</span></a>.</p>
</li>
<li>
<p>The <a class="olink RCMRF107" href="../../backup.112/e10643/rcmsynta007.htm#RCMRF107"><code dir="ltr">BACKUP</code></a> command creates the restore point named <code dir="ltr">FY06Q4</code> to match the SCN at which point this backup is consistent.</p>
</li>
</ul>
<p class="subhead2"><a id="BRADV251"></a>To make a long-term archival backup:</p>
<ol>
<li>
<p>Start RMAN and connect to a target database and recovery catalog.</p>
<p>The target database can be open or mounted. A recovery catalog is required for <code dir="ltr">KEEP FOREVER</code>, but is not required for any other <code dir="ltr">KEEP</code> option.</p>
</li>
<li>
<p>Run<a id="sthref907"></a><a id="sthref908"></a><a id="sthref909"></a> <code dir="ltr">BACKUP ... KEEP</code> to make the backup.</p>
<p>The following example generates a data file and archived log backup and creates a <a href="glossary.htm#CHDIEBAH"><span class="xrefglossterm">normal restore point</span></a>. The specified restore point must not already exist.</p>
<p>The log backup contains just those archived logs needed to restore this backup to a consistent state. The database performs a online redo log switch to archive the redo that is in the current online logs and is necessary to make this new backup consistent. The control file autobackup has a copy of the restore point, so it can be referenced as soon as the control file is restored.</p>
<pre dir="ltr">
RUN
{
  ALLOCATE CHANNEL c1 
    DEVICE TYPE sbt
    PARMS 'ENV=(OB_MEDIA_FAMILY=archival_backup)';
  BACKUP DATABASE
    TAG quarterly
    KEEP FOREVER
    RESTORE POINT FY06Q4;
}
</pre>
<p>The following variation keeps the backup for 365 days instead of keeping it forever. After a year has passed, the backup becomes obsolete regardless of the backup retention policy settings.</p>
<pre dir="ltr">
RUN
{
  ALLOCATE CHANNEL c1 DEVICE TYPE sbt
    PARMS 'ENV=(OB_MEDIA_FAMILY=archival_backup)';
  BACKUP DATABASE
    TAG quarterly
    KEEP UNTIL TIME 'SYSDATE+365'
    RESTORE POINT FY06Q4;
}
</pre></li>
</ol>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="flashdb.htm#CFHCEIHB">"Understanding Flashback Database, Restore Points and Guaranteed Restore Points"</a> to learn about restore points</div>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="CHDEFHEJ"></a>
<div id="BRADV89556" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Making a Temporary Archival Backup</h3>
<p>One purpose of an archival backup is for creating a test database. The technique for making a test database is essentially the same as the technique described in <a href="#CHDDGEBF">"Making an Archival Backup for Long-Term Storage"</a>. The difference is that you intend to delete the backup soon after creating it.</p>
<p>You can specify the temporary status of the backup with the<a id="sthref910"></a><a id="sthref911"></a> <code dir="ltr">BACKUP ... KEEP UNTIL</code> parameter. Assume that you want to make a backup and then restore it to a new host the same day. In this case, you can specify <code dir="ltr">KEEP UNTIL</code> <code dir="ltr">TIME SYSDATE+1</code> to indicate that RMAN should override the retention policy for this backup for only one day. After one day, the backup becomes obsolete, regardless of any configured backup retention policy.</p>
<p>The command in <a href="#CHDDJHCG">Example 9-11</a> makes an archival backup on a temporary disk with the tag <code dir="ltr">TESTDB</code>. The example creates a normal restore point, which is a label for the time to which the backup should be recovered. RMAN only backs up the archived redo logs if the database is open during the backup. Archived logs are not needed for offline backups and so are not backed up.</p>
<div id="BRADV252" class="example">
<p class="titleinexample"><a id="CHDDJHCG"></a>Example 9-11 Creating a Temporary Archival Backup</p>
<pre dir="ltr">
BACKUP DATABASE
  FORMAT '/disk1/oraclebck/%U' 
  TAG TESTDB 
  KEEP UNTIL TIME 'SYSDATE+1' 
  RESTORE POINT TESTDB06;
</pre></div>
<!-- class="example" -->
<p>The recommended technique for restoring an archival backup is to use the <a class="olink RCMRF126" href="../../backup.112/e10643/rcmsynta020.htm#RCMRF126"><code dir="ltr">DUPLICATE</code></a> command. Refer to <a href="rcmdupdb.htm#BGBFCFGA">"Backup-Based Duplication Without a Target Connection: Example"</a>.</p>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="CHDFCCCF"></a>
<div id="BRADV89557" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Backing Up RMAN Backups</h2>
<p>This section explains how to back up backup sets and image copies.</p>
<div id="BRADV89558" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref912"></a>
<h3 class="sect2">About Backups of Backups</h3>
<p>You can use <a id="sthref913"></a><a id="sthref914"></a>the <a class="olink RCMRF107" href="../../backup.112/e10643/rcmsynta007.htm#RCMRF107"><code dir="ltr">BACKUP BACKUPSET</code></a> command to back up backup sets produced by other backup jobs. You can also use<a id="sthref915"></a><a id="sthref916"></a> <code dir="ltr">BACKUP RECOVERY AREA</code> to back up recovery files created in the current and all previous <a href="glossary.htm#i999320"><span class="xrefglossterm">fast recovery area</span></a> destinations. Recovery files are full and incremental backup sets, control file autobackups, data file copies, and archived redo logs. SBT and disk backups are supported for <code dir="ltr">BACKUP RECOVERY AREA</code>. For disk backups of the recovery files, you must use the <code dir="ltr">TO DESTINATION</code> option.</p>
<p>The preceding commands are especially useful in the following scenarios:<a id="sthref917"></a><a id="sthref918"></a><a id="sthref919"></a><a id="sthref920"></a></p>
<ul>
<li>
<p>Ensuring that all backups exist both on disk and on tape.</p>
</li>
<li>
<p>Moving backups from disk to tape and then freeing space on disk. This task is especially important when the database uses a fast recovery area so that the space can be reused as needed.</p>
</li>
</ul>
<p>You can also use the<a id="sthref921"></a><a id="sthref922"></a> <code dir="ltr">BACKUP</code> <code dir="ltr">COPY</code> <code dir="ltr">OF</code> command to back up image copies of datafiles, control files, and archived redo logs. The output of this command can be either backup sets or image copies, so you can generate backup sets from image copies. This form of backup is used to back up a database backup created as image copies on disk to tape.</p>
<div id="BRADV89559" class="sect3"><!-- infolevel="all" infotype="General" --><a id="sthref923"></a>
<h4 class="sect3">Multiple Copies of Backup Sets</h4>
<p><code dir="ltr">BACKUP</code> <code dir="ltr">BACKUPSET</code> creates additional copies of backup pieces in a backup set, but does not create a new backup set. Thus, <code dir="ltr">BACKUP</code> <code dir="ltr">BACKUPSET</code> is similar to using the <code dir="ltr">DUPLEX</code> or <code dir="ltr">MAXCOPIES</code> option of <code dir="ltr">BACKUP</code> (see <a href="rcmbckad.htm#i1006180">"Duplexing Backup Sets"</a>). The extra copy of a backup set created by <code dir="ltr">BACKUP</code> <code dir="ltr">BACKUPSET</code> is not a new backup set, just as copies of a backup set produced by other forms of the <code dir="ltr">BACKUP</code> command are not separate backup sets.</p>
</div>
<!-- class="sect3" -->
<div id="BRADV89560" class="sect3"><!-- infolevel="all" infotype="General" --><a id="sthref924"></a>
<h4 class="sect3">Effect of a Backup Retention Policy on Backups of Backups</h4>
<p>For a backup <a href="glossary.htm#i433452"><span class="xrefglossterm">retention policy</span></a> based on <a href="glossary.htm#CHDJDEAE"><span class="xrefglossterm">redundancy</span></a>, a backup set is counted as one instance of a backup. This statement is true even if there are multiple copies of the backup pieces that form the backup set, such as when a backup set has been backed up from disk to tape.</p>
<p>For a recovery window retention policy, either all of the copies of a backup set are obsolete, or none of them are. This point is easiest to grasp when viewing the output of the <a class="olink RCMRF132" href="../../backup.112/e10643/rcmsynta027.htm#RCMRF132"><code dir="ltr">LIST</code></a> and <a class="olink RCMRF147" href="../../backup.112/e10643/rcmsynta2006.htm#RCMRF147"><code dir="ltr">REPORT</code></a> commands.</p>
<p class="subhead2"><a id="BRADV253"></a>To view the effect of a backup retention policy on backups of backups:</p>
<ol>
<li>
<p>Back up a data file.</p>
<p>The following example backs up data file <code dir="ltr">5</code>:</p>
<pre dir="ltr">
BACKUP AS BACKUPSET DATAFILE 5;
</pre></li>
<li>
<p>Run the <code dir="ltr">LIST</code> command for the data file backup from Step 1.</p>
<p>For example, run the following command (sample output included).</p>
<pre dir="ltr">
<a id="CHDJEDHG"></a>
LIST BACKUP OF DATAFILE 5 SUMMARY;
 
List of Backups
===============
Key     TY LV S Device Type Completion Time #Pieces #Copies Compressed Tag
------- -- -- - ----------- --------------- ------- ------- ---------- ---
18      B  F  A DISK        04-AUG-07       1       1       NO         TAG20070804T160 134
</pre></li>
<li>
<p>Use the backup set key from the previous step to back up the backup set.</p>
<p>For example, enter the following command:</p>
<pre dir="ltr">
BACKUP BACKUPSET 18;
</pre></li>
<li>
<p>Run the same <code dir="ltr">LIST</code> command that you ran in Step 2.</p>
<p>For example, run the following command (sample output included).</p>
<pre dir="ltr">
<a id="CHDHIAEJ"></a>
LIST BACKUP OF DATAFILE 5 SUMMARY;
 
List of Backups
===============
Key     TY LV S Device Type Completion Time #Pieces #Copies Compressed Tag
------- -- -- - ----------- --------------- ------- ------- ---------- ---
18      B  F  A DISK        04-AUG-07       1       2       NO         TAG20070804T160 134
</pre>
<p>Only one backup set is shown in this output, but there are now two copies of it.</p>
</li>
<li>
<p>Generate a report to see the effect of these copies under a redundancy-based backup retention policy.</p>
<p>For example, issue the following command:</p>
<pre dir="ltr">
REPORT OBSOLETE REDUNDANCY 1;
 
</pre>
<p>None of the copies is reported as obsolete because both copies of the backup set have the same values for <code dir="ltr">set_stamp</code> and <code dir="ltr">set_count</code>.</p>
</li>
<li>
<p>Generate a report to see the effect of these copies under a recovery window-based backup retention policy.</p>
<p>For example, issue the following command:</p>
<pre dir="ltr">
REPORT OBSOLETE RECOVERY WINDOW 1 DAY;
 
</pre>
<p>None of the copies of the backup set is reported as obsolete or based on the <code dir="ltr">CHECKPOINT_CHANGE#</code> of this backup set, for the current time and the availability of other backups.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="rcmconfb.htm#i1019345">"Configuring a Redundancy-Based Retention Policy"</a></p>
</li>
<li>
<p><a href="rcmreprt.htm#CHDDBJHC">Chapter 11, "Reporting on RMAN Operations"</a> to learn how to use the <code dir="ltr">LIST</code> and <code dir="ltr">REPORT</code> commands</p>
</li>
</ul>
</div>
</li>
</ol>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="i1006269"></a>
<div id="BRADV147" class="sect2">
<h3 class="sect2">Backing Up Backup Sets with RMAN</h3>
<p>This section explains how to use the <code dir="ltr">BACKUP BACKUPSET</code> command to copy backup sets from disk to tape. The procedure assumes that you have configured an <a href="glossary.htm#CHDCCBFI"><span class="xrefglossterm">SBT</span></a> device as your default device.</p>
<p class="subhead2"><a id="BRADV254"></a>To back up backup sets from disk to tape:<a id="sthref925"></a><a id="sthref926"></a><a id="sthref927"></a><a id="sthref928"></a><a id="sthref929"></a><a id="sthref930"></a></p>
<ol>
<li>
<p>If you are backing up a subset of available backup sets, then execute the <code dir="ltr">LIST BACKUPSET</code> command to obtain their primary keys.</p>
<p>The following example lists the backup sets in summary form:</p>
<pre dir="ltr">
RMAN&gt; LIST BACKUPSET SUMMARY;

List of Backups
===============
Key TY LV S Device Type Completion Time #Pieces #Copies Comp Tag
--- -- -- - ----------- --------------- ------- ------- ---- ---
1   B  F  A DISK        28-MAY-07       1       1       NO   TAG20070528T132432
2   B  F  A DISK        29-MAY-07       1       1       NO   TAG20070529T132433
3   B  F  A DISK        30-MAY-07       1       1       NO   TAG20070530T132434
</pre>
<p>The following example lists details about backup set 3:</p>
<pre dir="ltr">
RMAN&gt; LIST BACKUPSET 3;

List of Backup Sets
===================

BS Key  Type LV Size       Device Type Elapsed Time Completion Time
------- ---- -- ---------- ----------- ------------ ---------------
3       Full    8.33M      DISK        00:00:01     30-MAY-07
        BP Key: 3   Status: AVAILABLE  Compressed: NO  Tag: TAG20070530T132434
        Piece Name: /disk1/oracle/dbs/c-35764265-20070530-02
  Control File Included: Ckp SCN: 397221       Ckp time: 30-MAY-07
  SPFILE Included: Modification time: 30-MAY-07
  SPFILE db_unique_name: PROD
</pre></li>
<li>
<p><a id="sthref931"></a><a id="sthref932"></a>Execute the <code dir="ltr">BACKUP</code> <code dir="ltr">BACKUPSET</code> command.</p>
<p>The following example backs up all disk backup sets to tape and then deletes the input disk backups:</p>
<pre dir="ltr">
BACKUP BACKUPSET ALL
  DELETE INPUT;
</pre>
<p>The following example backs up only the backup sets with the primary key 1 and 2 to tape and then deletes the input disk backups:</p>
<pre dir="ltr">
BACKUP BACKUPSET 1,2
  DELETE INPUT;
</pre></li>
<li>
<p>Optionally, execute the <a class="olink RCMRF132" href="../../backup.112/e10643/rcmsynta027.htm#RCMRF132"><code dir="ltr">LIST</code></a> command to see a listing of backup sets and pieces.</p>
<p>The output lists all copies, including backup piece copies created by <code dir="ltr">BACKUP</code> <code dir="ltr">BACKUPSET</code>.</p>
</li>
</ol>
</div>
<!-- class="sect2" -->
<a id="CEGBCHJA"></a>
<div id="BRADV89561" class="sect2">
<h3 class="sect2">Backing Up Image Copy Backups with RMAN</h3>
<p>This section explains how to use the <code dir="ltr">BACKUP</code> command to back up image copies to tape. It is assumed that you have configured an <a href="glossary.htm#CHDCCBFI"><span class="xrefglossterm">SBT</span></a> device as your default device.</p>
<p>When backing up image copies that have multiple copies of the datafiles, specifying tags for the backups makes it easier to identify the input image copy. All image copies of datafiles have tags. The tag of an image copy is inherited by default when the image copy is backed up as a new image copy.</p>
<p class="subhead2"><a id="BRADV255"></a>To back up image copies from disk to tape:<a id="sthref933"></a><a id="sthref934"></a><a id="sthref935"></a><a id="sthref936"></a><a id="sthref937"></a><a id="sthref938"></a></p>
<ol>
<li>
<p><a id="sthref939"></a><a id="sthref940"></a>Issue the <code dir="ltr">BACKUP</code> <code dir="ltr">... COPY OF</code> or <code dir="ltr">BACKUP DATAFILECOPY</code> command.</p>
<p>The following example backs up data file copies that have the tag <code dir="ltr">DBCopy</code>:</p>
<pre dir="ltr">
BACKUP DATAFILE COPY FROM TAG monDBCopy;
</pre>
<p>The following example backs up the latest image copies of a database to tape, assigns the tag <code dir="ltr">QUARTERLY_BACKUP</code>, and deletes the input disk backups:</p>
<pre dir="ltr">
BACKUP DEVICE TYPE sbt
  TAG "quarterly_backup"
  COPY OF DATABASE 
  DELETE INPUT;
</pre></li>
<li>
<p>Optionally, issue the <a class="olink RCMRF132" href="../../backup.112/e10643/rcmsynta027.htm#RCMRF132"><code dir="ltr">LIST</code></a> command to see a listing of backup sets. The output lists all copies, including backup piece copies created by the <code dir="ltr">BACKUP</code> <code dir="ltr">BACKUPSET</code> command.</p>
</li>
</ol>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" --></div>
<!-- class="chapter" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment1933">
<tr>
<td class="cellalignment1942">
<table class="cellalignment1938">
<tr>
<td class="cellalignment1937"><a href="rcmcncpt.htm"><img width="24" height="24" src="../../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment1937"><a href="rcmbckad.htm"><img width="24" height="24" src="../../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;2003, 2015,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment1944">
<table class="cellalignment1936">
<tr>
<td class="cellalignment1937"><a href="../../index.htm"><img width="24" height="24" src="../../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment1937"><a href="../../nav/portal_booklist.htm"><img width="24" height="24" src="../../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment1937"><a href="toc.htm"><img width="24" height="24" src="../../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment1937"><a href="index.htm"><img width="24" height="24" src="../../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment1937"><a href="../../nav/mindx.htm"><img width="24" height="24" src="../../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment1937"><a href="../../dcommon/html/feedback.htm"><img width="24" height="24" src="../../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>
</body>
</html>
