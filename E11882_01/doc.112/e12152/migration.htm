<!DOCTYPE html>
<html lang="en" >
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1">
<meta charset="utf-8">
<title>Migrating Third-Party Databases</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Merged Version 1023" />
<meta name="description" content="Note: This book is for an old release of SQL Developer. You are encouraged to use the latest available release. See http://www.oracle.com/technetwork/developer-tools/sql-developer/ for information about downloads and documentation./" />
<meta name="dcterms.created" content="2014-07-07T11:15:30Z" />
<meta name="robots" content="all" />
<meta name="dcterms.title" content="SQL Developer User's Guide" />
<meta name="dcterms.identifier" content="E12152-08" />
<meta name="dcterms.isVersionOf" content="RPTUG" />
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;2006, 2014,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved." />
<link rel="Start" href="../../index.htm" title="Home" type="text/html" />
<link rel="Copyright" href="../../dcommon/html/cpyr.htm" title="Copyright" type="text/html" />

<script type="application/javascript"  src="../../dcommon/js/headfoot.js"></script>
<script type="application/javascript"  src="../../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html" />
<link rel="Index" href="index.htm" title="Index" type="text/html" />
<link rel="Prev" href="intro.htm" title="Previous" type="text/html" />
<link rel="Next" href="tut_library.htm" title="Next" type="text/html" />
<link rel="alternate" href="../e12152.pdf" title="PDF version" type="application/pdf" />
<link rel="schema.dcterms" href="http://purl.org/dc/terms/" />
<link rel="stylesheet" href="../../dcommon/css/fusiondoc.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/header.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/footer.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/fonts.css">
<link rel="stylesheet" href="../../dcommon/css/foundation.css">
<link rel="stylesheet" href="../../dcommon/css/codemirror.css">
<link rel="stylesheet" type="text/css" title="Default" href="../../nav/css/html5.css">
<link rel="stylesheet" href="../../dcommon/css/respond-480-tablet.css">
<link rel="stylesheet" href="../../dcommon/css/respond-768-laptop.css">
<link rel="stylesheet" href="../../dcommon/css/respond-1140-deskop.css">
<script type="application/javascript" src="../../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">7/10</span> <!-- End Header -->
<div class="chapter"><a id="CHDECEIA"></a>
<h1 class="chapter"><span class="secnum">2</span> <a id="RPTUG40000"></a> <a id="sthref358"></a>Migrating Third-Party Databases</h1>
<div class="infobox-note">
<p class="notep1">Note:</p>
The migration capabilities in SQL Developer represent an evolution of the Oracle Migration Workbench product.</div>
<p><span class="bold">Migration</span> is the process of copying the schema objects and data from a source third-party (non-Oracle) database, such as MySQL, Microsoft SQL Server, Sybase Adaptive Server, or Microsoft Access, to an Oracle database. You can perform the migration in an efficient, largely automated way.</p>
<p>Thus, you have two options for working with third-party databases in SQL Developer:</p>
<ul>
<li>
<p>Creating database connections so that you can view schema objects and data in these databases</p>
</li>
<li>
<p>Migrating these databases to Oracle, to take advantage of the full range of Oracle Database features and capabilities</p>
</li>
</ul>
<p>This chapter contains the following major sections:</p>
<p><a href="#CHDIJEBC">Migration Quick Start</a></p>
<p><a href="#CHDFAEFH">Overview of Migration</a></p>
<p><a href="#CHDCFGII">Preparing a Migration Plan</a></p>
<p><a href="#CHDICICC">Before You Start Migrating: General Information</a></p>
<p><a href="#i1005774">Before You Start Migrating: Source-Specific Information</a></p>
<p><a href="#CHDIIEEF">Capturing the Source Database</a></p>
<p><a href="#CHDHFAGE">Creating and Customizing the Converted Model</a></p>
<p><a href="#CHDFHCJG">Generating the DDL for the Oracle Schema Objects</a></p>
<p><a href="#CHDJCGGI">Migrating the Data</a></p>
<p><a href="#CHDBIAIE">Making Queries Case Insensitive</a></p>
<p><a href="#CHDCFFJF">Testing the Oracle Database</a></p>
<p><a href="#CHDDCHHE">Deploying the Oracle Database</a></p>
<p><a href="#CHDJGAIH">Using Migration Reports</a></p>
<p><a href="#CHDFHCEH">SQL Developer User Interface for Migration</a></p>
<a id="CHDIJEBC"></a>
<div class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1"><a id="RPTUG40100"></a><a id="sthref359"></a>Migration Quick Start</h2>
<p>To migrate a third-party database to Oracle, the basic actions are: prepare for the migration, create or select associate a migration repository, capture the source database, convert the captured database, generate and run DDL for the new Oracle schema objects, and optionally move data from the source database to the new database.</p>
<p>There are two mechanisms for migrating third-party databases to Oracle: standard migration and quick migration.</p>
<a id="CHDDIGIJ"></a>
<div class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Standard Migration</h3>
<p>Standard migration involves capturing, converting, generating the database, and performing the data move in several distinct steps. This is the recommended approach when performing a migration. Any issues during these phases can be manually resolved and all objects can be inspected or modified to suit your needs.</p>
<p class="subhead2"><a id="sthref360"></a>Standard Migration: Prepare for Migration</p>
<ol>
<li>
<p>Prepare for the migration by reading the appropriate related topics in <a href="#CHDECEIA">Chapter 2, "Migrating Third-Party Databases"</a>.</p>
</li>
<li>
<p>Create a migration repository in a new or existing Oracle connection. You may find it simple and convenient to create separate a Oracle database user and connection for migration work. Then, select the connection and create the repository. For example:</p>
<ol>
<li>
<p>Create an Oracle user named MIGRATIONS with default tablespace USER and temporary tablespace TEMP; and grant it at least RESOURCE, CREATE SESSION, and CREATE VIEW privileges. (For multischema migrations, you must grant the RESOURCE role with the ADMIN option; and you must also grant this user the CREATE ROLE, CREATE USER, and ALTER ANY TRIGGER privileges, all with the ADMIN option.)</p>
</li>
<li>
<p>Create a database connection named Migration_Repository that connects to the MIGRATIONS user.</p>
</li>
<li>
<p>Right-click the Migration_Repository connection, and select <span class="bold">Migration Repository</span>, then <span class="bold">Associate Migration Repository</span> to create the repository.</p>
</li>
</ol>
</li>
<li>
<p>Create and open a database connection for the third-party database. (For migrations other than from Microsoft Access, you should set the third party JDBC driver preference before creating the connection.)</p>
<p>For example, create a database connection named Sales_Access to the Microsoft Access database named sales.mdb, and connect to it.</p>
</li>
</ol>
<p class="subhead2"><a id="sthref361"></a>Standard Migration: Capture Source Schema Objects</p>
<p>There are two ways to capture source schema objects: online and offline. Online capture which is suitable in most cases, so it is described here.</p>
<p>To perform online capture, right-click the connection name in the Connections navigator and select <span class="bold">Capture</span> <span class="italic">database-type</span> (for example, Capture MySQL, Capture Microsoft Access, Capture Microsoft SQL Server, or Capture Sybase Adaptive Server).</p>
<p>Selecting <span class="bold">Capture Microsoft Access</span> automatically invokes the Microsoft Access exporter tool to create XML files for migrating the schema and the table data. However, if you want to run the exporter tool manually (for example, to control certain options), click <span class="bold">Migration</span>, then <span class="bold">Microsoft Access Exporter</span>, then the item for your version of Microsoft Access. Follow the steps for the exporter tool, which has its own online help.</p>
<p>After the capture, the Captured Models navigator displays an expandable node for the captured objects (for example, sales (Access) for the captured sales.mdb objects, as shown in the figure in <a href="#CHDFHCEH">SQL Developer User Interface for Migration</a>).</p>
<p class="subhead2"><a id="sthref362"></a>Standard Migration: Convert Captured Objects</p>
<p>To convert the captured objects to Oracle-format objects, right-click the appropriate node in the Captured Objects navigator and select <span class="bold">Convert to Oracle Model</span>, and accept the defaults for data mappings (or specify selected mappings if you need to).</p>
<p>After the conversion, the Converted Models navigator displays an expandable node for the converted objects (for example, Converted sales (Access)).</p>
<p class="subhead2"><a id="sthref363"></a>Standard Migration: Generate Oracle Database Objects</p>
<ol>
<li>
<p>Generate a SQL*Plus script that creates the DDL statements to create the Oracle database objects that correspond to the source database objects: right-click the appropriate node in the Captured Models navigator and select <span class="bold">Generate</span>. A SQL Worksheet window opens containing the SQL*Plus statements.</p>
</li>
<li>
<p>In the SQL Worksheet window that was just opened, select (in the drop-down list on the right) an Oracle database connection in which to run the script (next step).</p>
</li>
<li>
<p>Examine the generated SQL*Plus statements, and optionally make any changes. For example, if the database user to own the generated objects already exists (as it will if you are following these quick-step instructions), delete or modify the CREATE USER and related statements.</p>
</li>
<li>
<p>Click the Run Script button in the SQL Worksheet window to run the script.</p>
</li>
<li>
<p>In the Connections navigator, create a connection to the user that was just created.</p>
</li>
</ol>
<p>In the Connections navigator, you should now see the new database objects corresponding to the objects in the third-party database that you migrated.</p>
<p class="subhead2"><a id="sthref364"></a>Standard Migration: Move Data to Oracle Database</p>
<p>If you want, you can migrate (move) any existing data from the source database to the Oracle database. You have two options for data migration: online or offline.</p>
<ul>
<li>
<p>Online data move: Click <span class="bold">Migration</span>, then <span class="bold">Migrate Data</span>. In the dialog box, specify the Source Connection, the Target Connection, and the Converted Model. This method uses JDBC and therefore is constrained by the third-party implementations. This method is suitable for moving small data sets.</p>
</li>
<li>
<p>Offline data move: Click <span class="bold">Migration</span>, then <span class="bold">Script Generation</span>, then <span class="bold">Generate Data Move Scripts</span>; specify the converted model and a directory into which to generate the files that you will use for unloading the data from the source database and for importing into Oracle using SQL*Loader. This method is designed for moving large volumes of data.</p>
</li>
</ul>
</div>
<!-- class="sect2" -->
<a id="CHDCBCCI"></a>
<div class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Quick Migration</h3>
<p>Quick migration is a simplified approach that uses a wizard. It provides a quick solution when migrating a simple database; however, for more control of the migration process, you should use <a href="#CHDDIGIJ">Standard Migration</a>.</p>
<p class="subhead2"><a id="sthref365"></a>Quick Migration: Prepare for Migration</p>
<ol>
<li>
<p>Prepare for the migration by reading the appropriate related topics in <a href="#CHDECEIA">Chapter 2, "Migrating Third-Party Databases"</a>.</p>
</li>
<li>
<p>Create a migration repository in a new or existing Oracle connection. You may find it simple and convenient to create separate a Oracle database user and connection for migration work. Then, select the connection and create the repository. For example:</p>
<ol>
<li>
<p>Create an Oracle user named MIGRATIONS with default tablespace USER and temporary tablespace TEMP; and grant it at least RESOURCE, CREATE SESSION, and CREATE VIEW privileges. (For multischema migrations, you must grant the RESOURCE role with the ADMIN option; and you must also grant this user the CREATE ROLE, CREATE USER, and ALTER ANY TRIGGER privileges, all with the ADMIN option.)</p>
</li>
<li>
<p>Create a database connection named Migration_Repository that connects to the MIGRATIONS user.</p>
</li>
<li>
<p>Right-click the Migration_Repository connection, and select <span class="bold">Migration Repository</span>, then <span class="bold">Associate Migration Repository</span> to create the repository.</p>
</li>
</ol>
</li>
<li>
<p>Create an Oracle user whose schema is to be used as the destination for the objects to be migrated, or use an existing Oracle user and schema. Grant sufficient privileges to this user.</p>
<p>For example, if you plan to migrate a Microsoft Access database named sales.mdb, you might create an Oracle user named SALES, in whose schema the Oracle database objects will be generated.</p>
</li>
<li>
<p>Create and open an Oracle connection for the schema that you created or selected in the preceding step.</p>
<p>For example, create an Oracle connection named Sales_Oracle to the schema associated with user SALES, and connect to it.</p>
</li>
<li>
<p>Create and open a database connection for the third-party database. (For migrations other than from Microsoft Access, you should set the third party JDBC driver preference before creating the connection.)</p>
<p>For example, create a database connection named Sales_Access to the Microsoft Access database named sales.mdb, and connect to it.</p>
</li>
</ol>
<p class="subhead2"><a id="sthref366"></a>Quick Migration: Migrate Using the Wizard</p>
<ol>
<li>
<p>Click <span class="bold">Migration</span>, then <span class="bold">Quick Migrate</span>.</p>
</li>
<li>
<p>For <span class="bold">Source Connection</span>, select the connection for the third-party database to be migrated. For example: Sales_Access</p>
</li>
<li>
<p>For <span class="bold">Target Connection</span>, select the connection for the Oracle Database schema to which the third-party database is to be migrated. For example: Sales_Oracle</p>
</li>
<li>
<p>For <span class="bold">Repository</span>, use the selected existing repository; or if no repository exists, allow SQL Developer to create a migration repository in the schema of the target connection.</p>
</li>
<li>
<p>Click <span class="bold">Verify</span> to start the pre-migration check.</p>
</li>
<li>
<p>After the pre-migration check completes satisfactorily, specify the <span class="bold">Migration Type</span>: Migrate Tables, Migrate Tables and Data, or Migrate Everything (all objects).</p>
</li>
<li>
<p>Click <span class="bold">Finish</span> in the Summary pane to perform the migration.</p>
<p>The specific operations performed depend on the migration type and the type of third-party database being migrated. For example, for a Microsoft Access database, the Exporter for Microsoft Access tool is automatically invoked. <span class="italic">Do not interrupt any of the migration operations.</span></p>
</li>
</ol>
<p>If any issues arise during the migration, the quick migration will stop. To proceed with migration, follow the <a href="#CHDDIGIJ">Standard Migration</a> approach, which will help identify the issues and allow you to modify the appropriate objects.</p>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="CHDFAEFH"></a>
<div class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1"><a id="sthref367"></a><a id="RPTUG40200"></a>Overview of Migration</h2>
<p>An Oracle database provides you with better scalability, reliability, increased performance, and better security than third-party databases. For this reason, organizations migrate from their current database, such as Microsoft SQL Server, Sybase Adaptive Server, or Microsoft Access, to an Oracle database. Although database migration can be complicated, SQL Developer enables you to simplify the process of migrating a third-party database to an Oracle database.</p>
<p>SQL Developer captures information from the source database and displays it in the <span class="bold">captured model</span>, which is a representation of the structure of the source database. This representation is stored in a <span class="bold">migration repository</span>, which is a collection of schema objects that SQL Developer uses to store migration information.</p>
<p>The information in the repository is used to generate the <span class="bold">converted model</span>, which is a representation of the structure of the destination database as it will be implemented in the Oracle database. You can then use the information in the captured model and the converted model to compare database objects, identify conflicts with Oracle reserved words, and manage the migration progress. When you are ready to migrate, you generate the Oracle schema objects, and then migrate the data.</p>
<p>SQL Developer contains logic to extract data from the data dictionary of the source database, create the captured model, and convert the captured model to the converted model.</p>
<p>Using SQL Developer to migrate a third-party database to an Oracle database provides the following benefits:</p>
<ul>
<li>
<p>Reduces the effort and risks involved in a migration project</p>
</li>
<li>
<p>Enables you to migrate an entire third-party database, including triggers and stored procedures</p>
</li>
<li>
<p>Enables you to see and compare the captured model and converted model and to customize each if you wish, so that you can control how much automation there is in the migration process</p>
</li>
<li>
<p>Provides feedback about the migration through reports</p>
</li>
</ul>
<div class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref368"></a>
<h3 class="sect2"><a id="sthref369"></a>How Migration Works</h3>
<p>The components of SQL Developer work together to migrate a third-party database to an Oracle database. <a href="#i1005726">Figure 2-1, "SQL Developer Migration Architecture"</a> shows how SQL Developer reads the information from the source database and creates the Oracle database schema objects. SQL Developer uses the information stored in the migration repository to migrate to the Oracle schema. You can make changes to the captured model or the converted model, or both, before migrating. The information in the converted model is used to complete the migration, that is, to generate the database objects in the destination Oracle schema.</p>
<div class="figure">
<p class="titleinfigure"><a id="i1005726"></a>Figure 2-1 SQL Developer Migration Architecture</p>
<img width="305" height="283" src="img/migration_arch.gif" alt="Architecture diagram, as explained before the illustration." /><br /></div>
<!-- class="figure" --></div>
<!-- class="sect2" -->
<div class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref370"></a>
<h3 class="sect2">Migration Implemented as SQL Developer Extensions</h3>
<p>Migration support is implemented in SQL Developer as a set of extensions. If you want, you can disable migration support or support for migrating individual third-party databases.</p>
<p>To view the installed extensions, and to enable or disable individual extensions, click <span class="bold">Tools</span>, then <span class="bold">Preferences</span>, then <span class="bold">Extensions</span>. Note that SQL Developer ships which all extensions and third-party database "plugins" available at the time of release, so to begin migrations other than for Microsoft Access, only the third-party drivers need be installed.</p>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="CHDCFGII"></a>
<div class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1"><a id="RPTUG40300"></a><a id="sthref371"></a><a id="sthref372"></a>Preparing a Migration Plan</h2>
<p>This topic describes the process of how to create a migration project plan. It identifies the sections to include in the migration plan, describes how to determine what to include for each section, and explains how to avoid the risks involved in a migration project. This information includes:</p>
<ul>
<li>
<p><a href="#CHDJIGHA">Task 1: Determining the Requirements of the Migration Project</a></p>
</li>
<li>
<p><a href="#CHDJECFF">Task 2: Estimating Workload</a></p>
</li>
<li>
<p><a href="#CHDCGGDG">Task 3: Analyzing Operational Requirements</a></p>
</li>
<li>
<p><a href="#CHDBHIAF">Task 4: Analyzing the Application</a></p>
</li>
<li>
<p><a href="#CHDBICGE">Task 5: Planning the Migration Project</a></p>
</li>
</ul>
<a id="CHDJIGHA"></a>
<div class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Task 1: Determining the Requirements of the Migration Project</h3>
<p>In this task, you identify which databases you want to migrate and applications that access that database. You also evaluate the business requirements and define testing criteria.</p>
<p>To determine the requirements of the migration project:</p>
<ol>
<li>
<p>Define the scope of the project.</p>
<p>There are several choices you must make about the third-party database and applications that access that database in order to define the scope of the migration project. To obtain a list of migration issues and dependencies, you should consider the following</p>
<ul>
<li>
<p>What third-party databases are you migrating?</p>
<ul>
<li>
<p>What is the version of the third-party database?</p>
</li>
<li>
<p>What is the character set of the third-party database?</p>
</li>
</ul>
</li>
<li>
<p>What source applications are affected by migrating the third-party database to an Oracle database?</p>
<ul>
<li>
<p>What is the third-party application language?</p>
</li>
<li>
<p>What version of the application language are you using?</p>
</li>
</ul>
<p>In the scope of the project, you should have identified the applications you must migrate. Ensure that you have included all the necessary applications that are affected by migrating the database</p>
</li>
<li>
<p>What types of connectivity issues are involved in migrating to an Oracle database?</p>
<ul>
<li>
<p>Do you use connectivity software to connect the applications to the third-party database? Do you need to modify the connectivity software to connect the applications to the Oracle database?</p>
</li>
<li>
<p>What version of the connectivity software do you use? Can you use this same version to connect to the Oracle database?</p>
</li>
</ul>
</li>
<li>
<p>Are you planning to rewrite the applications or modify the applications to work with an Oracle database?</p>
</li>
</ul>
</li>
<li>
<p>Use <a href="#CACBAAJI">Table 2-1</a> to determine whether you have a complex or simple source database environment. Identify the requirements based on the specific scenario.</p>
<p>If the migration project is a simple scenario, you may not have to complete all of the tasks listed in this guide. You make decisions based on your specific environment. For example, if you have a complex scenario, you may require extra testing based on the complexity of the application accessing the database.</p>
<div class="tblformal">
<p class="titleintable"><a id="sthref373"></a><a id="CACBAAJI"></a>Table 2-1 Complex and Simple Scenarios</p>
<table class="cellalignment2012" title="Complex and Simple Scenarios" summary="A list of guidelines to help you decide the complexity of the application. The list is separated into a complex and a simple scenario." dir="ltr">
<thead>
<tr class="cellalignment2006">
<th class="cellalignment2013" id="r1c1-t3">Complex Scenario</th>
<th class="cellalignment2013" id="r1c2-t3">Simple Scenario</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2006">
<td class="cellalignment2014" id="r2c1-t3" headers="r1c1-t3">
<p>More than one of the following:</p>
<ul>
<li>
<p>Large database (greater than 25 GB)</p>
</li>
<li>
<p>Data warehouse</p>
</li>
<li>
<p>Large applications (greater than 100 forms, reports, and batch jobs)</p>
</li>
<li>
<p>Database is used by multiple lines of business</p>
</li>
<li>
<p>Distributed deployment</p>
</li>
<li>
<p>Large user base (greater than 100)</p>
</li>
<li>
<p>High availability requirement (such as a 24 X 7 X 365 environment)</p>
</li>
</ul>
</td>
<td class="cellalignment2014" headers="r2c1-t3 r1c2-t3">
<p>Contains the following:</p>
<ul>
<li>
<p>Small database (less than 25 GB)</p>
</li>
<li>
<p>Simple online transaction processing (OLTP)</p>
</li>
<li>
<p>Small application (less than 100 forms, reports, and batch jobs)</p>
</li>
<li>
<p>Database is used by one<br />
department</p>
</li>
<li>
<p>Centralized deployment</p>
</li>
<li>
<p>Small user base (less than 100)</p>
</li>
<li>
<p>Average availability (business hours)</p>
</li>
</ul>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></li>
<li>
<p>Determine whether the destination database requires additional hardware and rewriting of backup schedules.</p>
</li>
<li>
<p>Define testing and acceptance criteria.</p>
<p>Define tests to measure the accuracy of the migration. You then use the acceptance criteria to determine whether the migration was successful. The tests that you develop from the requirements should also measure stability, evaluate performance, and test the applications. You must decide how much testing is necessary before you can deploy the Oracle database and applications into a production environment.</p>
</li>
<li>
<p>Create a requirements document with a list of requirements for the migration project.</p>
<p>The requirements document should have clearly defined tasks and number each specific requirement, breaking these into sub-requirements where necessary.</p>
</li>
</ol>
</div>
<!-- class="sect2" -->
<a id="CHDJECFF"></a>
<div class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Task 2: Estimating Workload</h3>
<p>In this task, you use SQL Developer to make calculated decisions on the amount of work that can be automated and how much is manual.</p>
<p>To estimate the workload:</p>
<ol>
<li>
<p>Capture the captured model, create the converted model, and migrate to the destination database.</p>
<p>You can analyze the source database through the captured model and a preview of the destination database through the converted model. After you have captured the source database, analyze the captured data contained in the captured model and the converted model. Ensure the content and structure of the migration repository is correct and determine how much time the entire process takes.</p>
</li>
<li>
<p>Use the Migration Log pane to evaluate the capture and migration process, categorize the total number of database objects, and identify the number of objects that can be converted and migrated automatically.</p>
<p>The migration log provides information about the actions that have occurred and record any warnings and errors. They identify the changes that have been made to the converted model so that you can evaluate if you should make changes to the applications that access the destination database.</p>
</li>
<li>
<p>Evaluate and categorize the issues that occurred. The migration log can help by providing information about:</p>
<ul>
<li>
<p>Tables that did not load when you captured the source database</p>
</li>
<li>
<p>Stored procedures, views, and triggers that did not parse when you created the converted model</p>
</li>
<li>
<p>Syntax that requires manual intervention</p>
</li>
<li>
<p>Database objects that were not created successfully when you migrated the destination database</p>
</li>
<li>
<p>Data that did not migrate successfully when you migrated the destination database</p>
</li>
</ul>
</li>
<li>
<p>For each error or warning in the migration log, evaluate the following:</p>
<ul>
<li>
<p>Number of times an issue occurred</p>
</li>
<li>
<p>Time required to fix the issues, in person-hours</p>
</li>
<li>
<p>Number of resources required to fix the issue</p>
<p>After you have solved a complex problem, it should be easier and quicker to resolve the next time you have the same problem.</p>
</li>
</ul>
</li>
</ol>
</div>
<!-- class="sect2" -->
<a id="CHDCGGDG"></a>
<div class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Task 3: Analyzing Operational Requirements</h3>
<p>In this task, you analyze the operational requirements, as follows:</p>
<ol>
<li>
<p>Evaluate the operational considerations in migrating the source database to a destination database. Consider the following questions:</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
If the scope of the migration project is a complex scenario as defined in <a href="#CACBAAJI">Table 2-1</a>, Oracle recommends that you answer all of these questions. If you have a simple scenario, determine the answers to the most appropriate questions.</div>
<ul>
<li>
<p>What backup and recovery changes do you require?</p>
</li>
<li>
<p>What downtime is required during the migration?</p>
</li>
<li>
<p>Have you met the performance requirements?</p>
</li>
<li>
<p>Are you changing the operational time window?</p>
</li>
<li>
<p>What effect does the downtime have on the business?</p>
</li>
<li>
<p>What training requirements or additional staff considerations are required?</p>
</li>
<li>
<p>Is it necessary to have the third-party and the Oracle database running simultaneously?</p>
</li>
</ul>
</li>
<li>
<p>For each task, determine the resources and time required to complete.</p>
</li>
<li>
<p>Create an initial project plan.<a id="sthref374"></a></p>
<p>Use the information that you have gathered during the requirements and planning stage to develop an initial project plan.</p>
</li>
</ol>
</div>
<!-- class="sect2" -->
<a id="CHDBHIAF"></a>
<div class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Task 4: Analyzing the Application</h3>
<p>In this task, you identify the users of the applications that run on the source database, what hardware it requires, what the application does, and how it interfaces with the source database. You also analyze the method the application uses to connect to the database and identify necessary modifications.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
If the migration project is a complex scenario as defined in <a href="#CACBAAJI">Table 2-1</a>, Oracle recommends that you answer all of these questions. If you have a simple scenario, determine the answers to the most appropriate questions.</div>
<p>To analyze the application:</p>
<ol>
<li>
<p>Determine whether changes to the application are required to make them run effectively on the destination database.</p>
</li>
<li>
<p>If changes are required to the application, determine whether it is more efficient to rewrite or modify the applications.</p>
<p>If you are rewriting the application to use the Oracle database, consider the following:</p>
<ol>
<li>
<p>Create the necessary project documentation to rewrite the application. For example, you need a design specification and requirements documentation.</p>
</li>
<li>
<p>Rewrite the application according to the specification.</p>
</li>
<li>
<p>Test the application works against the Oracle database.</p>
</li>
</ol>
<p>If you are modifying the application to use the Oracle database, consider the following:</p>
<ol>
<li>
<p>Identify the number of connections to the database that are in the application and modify these connections to use the Oracle database.</p>
<p>You may need to change the connection information to use an ODBC or JDBC connection.</p>
</li>
<li>
<p>Identify the embedded SQL statements that you need to change in the application before you can test it against the Oracle database.</p>
</li>
<li>
<p>Test the application using the Oracle database.</p>
</li>
</ol>
</li>
<li>
<p>Allocate time and resource to address each issue associated with rewriting or modifying the application.</p>
</li>
<li>
<p>Update the general requirements document for the project that you created in Task 1.</p>
</li>
</ol>
</div>
<!-- class="sect2" -->
<a id="CHDBICGE"></a>
<div class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Task 5: Planning the Migration Project</h3>
<p>In this task, you evaluate the unknown variables that the migration project may contain, such as the difference in the technologies of the source database and the destination database. During the planning stage, you:</p>
<ul>
<li>
<p>Estimate the budget constraints of the project</p>
</li>
<li>
<p>Gather information to produce a migration plan</p>
</li>
<li>
<p>Estimate how much time the migration project should take</p>
</li>
<li>
<p>Calculate how many resources are required to complete and test the migration</p>
</li>
</ul>
<p>To plan a migration project:</p>
<ol>
<li>
<p>Define a list of tasks required to successfully complete the migration project requirements of Task 1.</p>
</li>
<li>
<p>Categorize the list of tasks required to complete the migration project.</p>
<p>You should group these tasks according to your business. This allows you to schedule and assign resources more accurately.</p>
</li>
<li>
<p>Update and finalize the migration project plan based on the information that you have obtained from Task 3 and Task 4.</p>
</li>
<li>
<p>Make sure the migration project plan meets the requirements of the migration project.</p>
<p>The migration plan should include a project description, resources allocated, training requirements, migration deliverable, general requirements, environment analysis, risk analysis, application evaluation, and project schedule.</p>
</li>
</ol>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="CHDICICC"></a>
<div class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1"><a id="RPTUG40400"></a><a id="sthref375"></a>Before You Start Migrating: General Information</h2>
<p>You may need to perform certain tasks before you start migrating a third-party database to an Oracle database. See the following for more information:</p>
<ul>
<li>
<p><a href="#i1005739">Creating a Database User for the Migration Repository</a></p>
</li>
<li>
<p><a href="#CHDJJDEB">Requirements for Creating the Destination Oracle Objects</a></p>
</li>
</ul>
<p>See also any information specific to the source database that you will be migrating, as explained in <a href="#i1005774">Before You Start Migrating: Source-Specific Information</a>.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
Oracle recommends that you make a complete backup of the source database before starting the migration. For more information about backing up the source database, see the documentation for that type of database.
<p>If possible, begin the migration using a development or test environment, not a production database.</p>
</div>
<a id="i1005739"></a>
<div class="sect2">
<h3 class="sect2">Creating a Database User for the Migration Repository<a id="sthref376"></a></h3>
<p>SQL Developer requires a migration repository to migrate a third-party database to an Oracle database. To use an Oracle database for the migration repository, you must have access to that database using a database user account. Oracle recommends that you use a specific user account for migrations, For example, you may want to create a user named MIGRATIONS, create a database connection to that user, and use that connection for the migration repository; and if you wish, you can later delete the MIGRATIONS user to remove all traces of the migration from the database.</p>
<p>When you create a user for migrations, specify the tablespace information as in the following example, instead of using the defaults for tablespaces:</p>
<pre>
CREATE USER migrations IDENTIFIED BY <span class="italic">password</span>
  DEFAULT TABLESAPACE users TEMPORARY TABLESPACE temp,
</pre>
<p>Do not use a standard account (for example, SYSTEM) for migration.</p>
<p>When SQL Developer creates a migration repository, it creates many schema objects that are intended only for its own use. For example, it creates tables, views, indexes, packages, and triggers, many with names starting with <code>MD_</code> and <code>MIGR</code>. You should not directly modify these objects or any data stored in them.</p>
</div>
<!-- class="sect2" -->
<a id="CHDJJDEB"></a>
<div class="sect2">
<h3 class="sect2">Requirements for Creating the Destination Oracle Objects</h3>
<p><a id="sthref377"></a><a id="sthref378"></a><a id="sthref379"></a>The user associated with the Oracle database connection used to perform the migration (that is, to run the script containing the generated DDL statements) must have the following roles and privileges:</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
You must grant these privileges directly to a user account. Granting the privileges to a role, which is subsequently granted to a user account, does not suffice. You cannot migrate a database as the user <code>SYS</code>.</div>
<p class="subhead1"><a id="sthref380"></a>Roles</p>
<pre>
CONNECT WITH ADMIN OPTION
RESOURCE WITH ADMIN OPTION
</pre>
<p class="subhead1"><a id="sthref381"></a>Privileges</p>
<pre>
ALTER ANY ROLE
ALTER ANY SEQUENCE
ALTER ANY TABLE
ALTER TABLESPACE
ALTER ANY TRIGGER
COMMENT ANY TABLE
CREATE ANY SEQUENCE
CREATE ANY TABLE
CREATE ANY TRIGGER
CREATE VIEW WITH ADMIN OPTION
CREATE PUBLIC SYNONYM WITH ADMIN OPTION
CREATE ROLE
CREATE USER
DROP ANY SEQUENCE
DROP ANY TABLE
DROP ANY TRIGGER
DROP USER
DROP ANY ROLE
GRANT ANY ROLE
INSERT ANY TABLE
SELECT ANY TABLE
UPDATE ANY TABLE
</pre>
<p>For example, you can create a user called <code>migrations</code> with the minimum required privileges required to migrate a database by using the following commands:</p>
<pre>
CREATE USER migrations IDENTIFIED BY <span class="italic">password</span>
  DEFAULT TABLESAPACE users TEMPORARY TABLESPACE temp;
 
GRANT CONNECT, RESOURCE, CREATE VIEW, CREATE PUBLIC SYNONYM TO 
  migrations WITH ADMIN OPTION;
 
GRANT  ALTER ANY ROLE, ALTER ANY SEQUENCE, ALTER ANY TABLE, ALTER TABLESPACE,
ALTER ANY TRIGGER, COMMENT ANY TABLE, CREATE ANY SEQUENCE, CREATE ANY TABLE,
CREATE ANY TRIGGER, CREATE ROLE, CREATE TABLESPACE, CREATE USER, DROP ANY
SEQUENCE, DROP ANY TABLE, DROP ANY TRIGGER, DROP TABLESPACE, DROP USER, DROP ANY
ROLE, GRANT ANY ROLE, INSERT ANY TABLE, SELECT ANY TABLE, UPDATE ANY TABLE TO 
migrations;
</pre>
<p>After you have created the converted model is created and done first DDL generation done for the new database, it will be clear from the scripts which privileges will be required for your situation.</p>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="i1005774"></a>
<div class="sect1">
<h2 class="sect1"><a id="RPTUG40500"></a>Before You Start Migrating: Source-Specific Information<a id="sthref382"></a><a id="sthref383"></a><a id="sthref384"></a></h2>
<p>Depending on the third-party database that you are migrating to an Oracle database, you may have to configure connection information and install drivers. For more information about specific third-party database requirements, see the following:</p>
<ul>
<li>
<p><a href="#i1005806">Before Migrating From Microsoft SQL Server or Sybase Adaptive Server</a></p>
</li>
<li>
<p><a href="#i1005890">Before Migrating From Microsoft Access</a></p>
</li>
<li>
<p><a href="#i1006073">Before Migrating From MySQL</a></p>
</li>
</ul>
<a id="i1005806"></a>
<div class="sect2">
<h3 class="sect2">Before Migrating From Microsoft SQL Server or Sybase Adaptive Server<a id="sthref385"></a><a id="sthref386"></a><a id="sthref387"></a><a id="sthref388"></a><a id="sthref389"></a></h3>
<p>To configure a Microsoft SQL Server or Sybase Adaptive Server database for migration:</p>
<ol>
<li>
<p>Ensure that the source database is accessible by the Microsoft SQL Server or Sybase Adaptive Server user that is used by SQL Developer for the source connection. This user must be able to see any objects to be captured in the Microsoft SQL Server or Sybase Adaptive Server database; objects that the user cannot see are not captured. For example, if the user can execute a stored procedure but does not have sufficient privileges to see the source code, the stored procedure cannot be captured.</p>
</li>
<li>
<p>Ensure that you can connect to the Microsoft SQL Server or Sybase Adaptive Server database from the system where you have installed SQL Developer.</p>
</li>
<li>
<p>Ensure that you have downloaded the JTDS JDBC driver from <code><a href="http://jtds.sourceforge.net/">http://jtds.sourceforge.net/</a></code>.</p>
</li>
<li>
<p>In SQL Developer, if you have not already installed the JTDS driver using Check for Updates (on the Help menu), do the following:</p>
<ol>
<li>
<p>Click <span class="bold">Tools</span>, then <span class="bold">Preferences</span>, then <span class="bold">Database</span>, then <span class="bold">Third Party JDBC Drivers</span>.</p>
</li>
<li>
<p>Click <span class="bold">Add Entry</span>.</p>
</li>
<li>
<p>Select the jar file for the JTDS driver you downloaded from <code><a href="http://jtds.sourceforge.net/">http://jtds.sourceforge.net/</a></code>.</p>
</li>
<li>
<p>Click <span class="bold">OK</span>.</p>
</li>
</ol>
</li>
<li>
<p>In SQL Developer, click <span class="bold">Tools</span>, then <span class="bold">Preferences</span>, then <a href="intro.htm#CHDCBDAC"><span class="xreftitlebold">Migration: Identifier Options</span></a>, and ensure that the setting is correct for the <span class="bold">Is Quoted Identifier On</span> option (that is, the setting reflects the database to be migrated).</p>
<p>If this option is enabled, quotation marks (double-quotes) can be used to refer to identifiers; if this option is not enabled, quotation marks identify string literals. As an example of the difference in behavior, consider the following T-SQL code:</p>
<pre>
select col1, "col 2" "column_alias"
from tablex "table_alias"
</pre>
<p>If the Is Quoted Identifier On option is enabled (checked), the following PL/SQL code is generated:</p>
<pre>
SELECT col1, <span class="bold">col_2</span> "column_alias"
  FROM tablex "table_alias";
</pre>
<p>If the Is Quoted Identifier On option is disabled (not checked), the following PL/SQL code is generated:</p>
<pre>
SELECT col1, <span class="bold">'col 2'</span> "column_alias"
  FROM tablex "table_alias";
</pre></li>
</ol>
</div>
<!-- class="sect2" -->
<a id="i1005890"></a>
<div class="sect2">
<h3 class="sect2">Before Migrating From Microsoft Access<a id="sthref390"></a></h3>
<p>To configure a Microsoft Access database for migration:</p>
<ol>
<li>
<p>Make backup copies of the database file or files.</p>
</li>
<li>
<p>Ensure that the necessary software (Microsoft Access, perhaps other components) is installed on the same system as SQL Developer.</p>
</li>
<li>
<p>Ensure that the Admin user has at least Read Design and Read Data permissions on the MSysObjects, MSysQueries, and MSysRelationships system tables, as explained in the information about the <a href="dialogs.htm#BACJJDIA">Access tab</a> in the <a href="dialogs.htm#BACICJAF">Create/Edit/Select Database Connection</a> dialog box.</p>
</li>
<li>
<p>If security is enabled, you should turn it off<a id="sthref391"></a> by copying the contents of the secured database into a new database, as follows:</p>
<p>SQL Developer does not support the migration of Microsoft Access databases that have security enabled. By default, SQL Developer uses the name of the Microsoft Access MDB file as the user name for the destination Oracle user. If you create an Oracle user in this way, the password is ORACLE.</p>
<ol>
<li>
<p>From the <span class="bold">File</span> menu in Microsoft Access, select <span class="bold">New Database</span>.</p>
</li>
<li>
<p>Select the <span class="bold">Blank Database</span> icon, then click <span class="bold">OK</span>.</p>
</li>
<li>
<p>In the File New Database option, type a name for the database, then click <span class="bold">Create</span>.</p>
</li>
<li>
<p>From the <span class="bold">File</span> menu within the new database, select <span class="bold">Get External Data</span>, then select <span class="bold">Import</span>.</p>
</li>
<li>
<p>Select the secured Microsoft Access database that you want to import, then click <span class="bold">Import</span>.</p>
</li>
<li>
<p>From the Import Objects dialog, click <span class="bold">Options</span>.</p>
</li>
<li>
<p>Select the Relationships and Definition and Data options.</p>
</li>
<li>
<p>From the Tables tab, choose <span class="bold">Select All</span>.</p>
</li>
<li>
<p>Click <span class="bold">OK</span>.</p>
<p>All Microsoft Access objects are copied over to the new Microsoft Access database, except for the security settings.</p>
</li>
</ol>
</li>
<li>
<p>If the application contains linked tables to other Microsoft Access databases, refresh these links by opening the application in Microsoft Access and performing the following:</p>
<p>From the <span class="bold">Tools</span> menu in Microsoft Access 97, select <span class="bold">Add Ins</span>, then select <span class="bold">Linked Table Manager</span>.</p>
<p>From the Tools menu in Microsoft Access 2000, select <span class="bold">Database Utilities</span>, then select <span class="bold">Linked Table Manager</span>.</p>
</li>
<li>
<p>Ensure that the Microsoft Access database is not a replica database, but a master database.</p>
<p>When you use the Exporter for Microsoft Access to export, an error message is displayed if the database is a replica. SQL Developer does not support the migration of a replica database.</p>
</li>
<li>
<p>From the <span class="bold">Tools</span> menu within Microsoft Access, select <span class="bold">Database</span>, then select <span class="bold">Compact Database</span> to compact the Microsoft Access database files.</p>
</li>
<li>
<p>Ensure that the Microsoft Access MDB file is accessible from the system where you have installed SQL Developer.</p>
</li>
<li>
<p>Use the Oracle Universal Installer to verify that you have the Oracle ODBC driver installed. If you need to install the driver, it is available on the Oracle Database Server or Database Client CD. You can also download the Oracle ODBC driver from the Oracle Technology Network (OTN) Web site:</p>
<pre>
<a href="http://www.oracle.com/technology/software/tech/windows/odbc/">http://www.oracle.com/technology/software/tech/windows/odbc/</a>
</pre>
<p>Install the Oracle ODBC driver into an Oracle home directory that contains the Oracle Net Services. You can obtain the Oracle Net Services from the Oracle Client or Oracle Database CD. You install Oracle Net Services to obtain the Net Configuration Assistant and Net Manager. These allow you to create a net configuration in the <code>tnsnames.ora</code> file.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
For more information about installing the networking products needed to connect to an Oracle database, see the installation guide for your Oracle Database release.</div>
</li>
</ol>
<a id="i1006016"></a>
<div class="sect3">
<h4 class="sect3">Creating <a id="sthref392"></a>Microsoft Access XML Files</h4>
<p>To prepare for capturing a Microsoft Access database, the Exporter for Microsoft Access tool must be run, either automatically or manually, as explained in <a href="#CHDIIEEF">Capturing the Source Database</a>. This tool is packaged as a Microsoft Access MDE file and it allows you to export the Microsoft Access MDB file to an XML file.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
Do not modify any of the files created by the Exporter tool.</div>
<p>Each Microsoft Access database that you selected is exported to an XML file. The exporter tool currently does not support creating XML files from secured or replica databases.</p>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="i1006073"></a>
<div class="sect2">
<h3 class="sect2">Before Migrating From MySQL<a id="sthref393"></a></h3>
<p>To configure a MySQL database for migration, install MySQLConnector/J release 3.1.12 or 5.0.4 on the system where you have installed SQL Developer and set the appropriate SQL Developer preference. Follow these steps:</p>
<ol>
<li>
<p>Ensure that you can connect to the MySQL database from the system where you have installed SQL Developer.</p>
</li>
<li>
<p>Ensure that you have downloaded the MySQLConnector/J API from the MySQL Web site at <code><a href="http://www.mysql.com/">http://www.mysql.com/</a></code>.</p>
</li>
<li>
<p>In SQL Developer, if you have not already installed the MySQL JDBC driver using Check for Updates (on the Help menu), do the following:</p>
<ol>
<li>
<p>Click <span class="bold">Tools</span>, then <span class="bold">Preferences</span>, then <span class="bold">Database</span>, then <span class="bold">Third Party JDBC Drivers</span>.</p>
</li>
<li>
<p>Click <span class="bold">Add Entry</span>.</p>
</li>
<li>
<p>Select the jar file for the MySQL driver you downloaded from <code><a href="http://www.mysql.com/">http://www.mysql.com/</a></code>.</p>
</li>
<li>
<p>Click <span class="bold">OK</span>.</p>
</li>
</ol>
</li>
<li>
<p>Ensure that the source database is accessible by the MySQL user that is used by SQL Developer for the source connection. This user must be able to see any objects to be captured in the MySQL database; objects that the user cannot see are not captured. For example, if the user can execute a stored procedure but does not have sufficient privileges to see the source code, the stored procedure cannot be captured.</p>
</li>
</ol>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="CHDIIEEF"></a>
<div class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1"><a id="RPTUG40600"></a>Capturing the Source Database</h2>
<p><a id="sthref394"></a>Before migrating a third-party database, you must extract information from the database. This information is a representation of the structure of the source database, and it is called the captured model. The process of extracting the information from the database is called capturing the source database.</p>
<p>The capture can be done online or offline:</p>
<ul>
<li>
<p><span class="bold">Online capture</span> is done in a convenient guided sequence within the SQL Developer interface, as explained in <a href="#CHDDCCFE">Online Capture</a>. You can use online capture with all supported third-party databases.</p>
</li>
<li>
<p><span class="bold">Offline capture</span> involves creating a script that you run later, as explained in <a href="#CHDHFDFH">Offline Capture</a>. You can use offline capture with MySQL, Microsoft SQL Server databases, and Sybase Adaptive Server.</p>
</li>
</ul>
<p>After capturing the source database, you can view the source database information in the captured model in SQL Developer. If necessary, you can modify the captured model and change data type mappings.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
Oracle recommends that you do not change the default data type mappings unless you are an experienced Oracle database administrator.</div>
<a id="CHDDCCFE"></a>
<div class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Online Capture</h3>
<p>To perform an online capture of the source database, you can have the capture performed automatically as part of the Quick Migrate option, or you can have it performed as a separate operation by right-clicking the connection name in the Connections navigator and selecting <span class="bold">Capture</span> <span class="bolditalic">product-name</span> (for example, Capture MySQL, Capture Microsoft Access, Capture Microsoft SQL Server, or Capture Sybase Adaptive Server).</p>
<p>For a Microsoft Access database, selecting <span class="bold">Capture</span> <span class="bolditalic">product-name</span> automatically invokes the Microsoft Access exporter tool to create XML files for migrating the schema and the table data. However, if you want to run the exporter tool manually (for example, to control certain options), click <span class="bold">Migration</span>, then <span class="bold">Microsoft Access Exporter</span>, then the item for your version of Microsoft Access. Follow the steps for the exporter tool, which has its own online help.</p>
</div>
<!-- class="sect2" -->
<a id="CHDHFDFH"></a>
<div class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Offline Capture</h3>
<p>To perform an offline capture of a MySQL, Microsoft SQL Server, or Sybase Adaptive Server database, you create a set of offline capture scripts, run these scripts outside SQL Developer to create the script output (a dump of the third party metadata tables), and load the script output (the .ocp file containing the converted model) using SQL Developer.</p>
<ul>
<li>
<p>To create the script file (a Windows .bat file or a Linux or UNIX .sh file) and related files, click <span class="bold">Migration</span>, then <span class="bold">MySQL, SQL Server, and Sybase Offline Capture</span>, then <span class="bold">Create Database Capture Scripts</span>.</p>
<p>When this operation completes, you are notified that several files (.bat, .sql, .ocp) have been created, one of which is the controlling script. You must run the controlling script (outside SQL Developer) to populate the object capture properties (.ocp) file with information about the converted model.</p>
</li>
<li>
<p>To load the converted model from the object capture properties (.ocp) file generated by the offline capture controlling script, click <span class="bold">Migration</span>, then <span class="bold">MySQL, SQL Server, and Sybase Offline Capture</span>, then <span class="bold">Load Database Capture Script Output</span>.</p>
</li>
</ul>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="CHDHFAGE"></a>
<div class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1"><a id="RPTUG40700"></a>Creating and Customizing the Converted Model</h2>
<p><a id="sthref395"></a>After you capture a third-party database, the next step is to convert it, creating the converted model. The converted model is a representation of the structure of the destination database. SQL Developer creates the converted model using the information from the captured model.</p>
<p>By default, all procedures, functions, triggers, and views are copied to the converted model during translation and translated to Oracle PL/SQL. However, if translation fails for any of the objects, those objects appear in the converted model but their original SQL code remains unchanged. Objects that remain in their original SQL code will not be used when the generation scripts are created. Therefore, to have any such objects migrated, you must either fix the problem in the original SQL code before generating the script or edit the generated script to replace the original SQL code with valid PL/SQL code.</p>
<p>To convert a captured model to a converted model, right-click the appropriate node in the Captured Models navigator and select <span class="bold">Convert to Oracle</span>, and specify or accept the defaults for data mappings.</p>
<p>The following topic describes how to modify the converted model, if this becomes necessary:</p>
<ul>
<li>
<p><a href="#CHDJGEHC">Correcting Errors in the Converted Model</a></p>
</li>
</ul>
<a id="CHDJGEHC"></a>
<div class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Correcting Errors in the Converted Model</h3>
<p><a id="sthref396"></a><a id="sthref397"></a><a id="sthref398"></a>If error messages with the prefix <code>Parse Exception</code> are listed in the migration log, manual intervention is required to resolve the issues. To complete the converted model:</p>
<ol>
<li>
<p>Note the converted model schema object that failed.</p>
</li>
<li id="i1005778">
<p>Select that schema object in the converted model.</p>
</li>
<li>
<p>Copy the schema objects DDL and paste it into the translation scratch editor (displayed by clicking Migration, then Translation Scratch Editor).</p>
</li>
<li>
<p>Inspect the properties on the schema object in the translation scratch editor for possible causes of the error.</p>
</li>
<li>
<p>Modify a property of the schema object in the translation scratch editor.</p>
<p>For example, you might comment out one line of a stored procedure.</p>
</li>
<li id="i1005789">
<p>Translate using the appropriate translator.</p>
</li>
<li>
<p>If the error appears again, repeat steps <a href="#i1005778">2</a> to 6.</p>
</li>
<li>
<p>If the error cannot be resolved in this way, it is best to modify the object manually in the converted model.</p>
</li>
</ol>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="CHDFHCJG"></a>
<div class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1"><a id="RPTUG40800"></a>Generating the DDL for the Oracle Schema Objects</h2>
<p>To generate the DDL statements to create the Oracle schema objects, you must already have captured the captured model and created the converted model. After you generate the DDL, you run the DDL statements to cause the objects to be created in the Oracle database. At this point, the database schema is migrated to Oracle.</p>
<p>After you generate and run the DDL statements to migrate the schema objects, you can migrate the data from the original source database, as explained in <a href="#CHDJCGGI">Migrating the Data</a>.</p>
</div>
<!-- class="sect1" -->
<a id="CHDJCGGI"></a>
<div class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1"><a id="RPTUG40900"></a>Migrating the Data</h2>
<p>After you have generated and run DDL statements to create the Oracle schema objects for the migrated database, you can migrate (move) any existing data from the source database to the Oracle database. You have two options for data migration: online or offline.</p>
<ul>
<li>
<p><span class="bold">Online</span> data move: Click <span class="bold">Migration</span>, then <span class="bold">Migrate Data</span>. In the dialog box, specify the Source Connection, the Target Connection, and the Converted Model. This method uses JDBC and therefore is constrained by the third-party implementations. Online data moves are suitable for small data sets.</p>
</li>
<li>
<p><span class="bold">Offline</span> data move: Click <span class="bold">Migration</span>, then <span class="bold">Generate Offline Data Move Scripts</span>; specify the converted model and a directory into which to generate the files that you will use for unloading the data from the source database and for importing into Oracle using SQL*Loader. The offline data move approach is designed for moving large volumes of data.</p>
</li>
</ul>
<a id="CHDJFJBH"></a>
<div class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Transferring the Data Offline</h3>
<p><a id="sthref399"></a><a id="sthref400"></a>To transfer the data offline, you generate and use scripts to copy data from the source database to the destination database. During this process you must:</p>
<ul>
<li>
<p>Use SQL Developer to generate the data unload scripts for the source database and corresponding data load scripts for the destination database.</p>
</li>
<li>
<p>Run the data unload scripts to create data files from the source database using the appropriate procedure for your source database:</p>
<ul>
<li>
<p><a href="#CHDCIHHA">Creating Data Files From Microsoft SQL Server or Sybase Adaptive Server</a></p>
</li>
<li>
<p><a href="#CHDIBDBI">Creating Data Files From Microsoft Access</a></p>
</li>
<li>
<p><a href="#CHDDDCBC">Creating Data Files From MySQL</a></p>
</li>
</ul>
</li>
<li>
<p>Run the data load scripts using SQL*Loader to populate the destination database with the data from these data files as described in <a href="#CHDEAJCE">Populating the Destination Database Using the Data Files</a>.</p>
</li>
</ul>
<a id="CHDCIHHA"></a>
<div class="sect3">
<h4 class="sect3">Creating Data Files From <a id="sthref401"></a><a id="sthref402"></a><a id="sthref403"></a>Microsoft SQL Server or Sybase Adaptive Server</h4>
<p>To create data files from a Microsoft SQL Server or Sybase Adaptive Server database:</p>
<ol>
<li>
<p>Copy the contents of the directory where SQL Developer generated the data unload scripts onto the computer where the source database is installed.</p>
</li>
<li>
<p>Edit the BCP extract script to include the name of the source database server.</p>
<ul>
<li>
<p>On Windows, edit the <code>unload_script.bat</code> script to alter the bcp lines to include the appropriate variables.</p>
</li>
</ul>
<p>The following shows a line from a sample <code>unload_script.bat</code> script:</p>
<pre>
bcp "AdventureWorks.dbo.AWBuildVersion" out "[AdventureWorks].[dbo].[AWBuildVersion].dat" -q -c -t "&lt;EOFD&gt;" -r "&lt;EORD&gt;" -U&lt;Username&gt; -P&lt;Password&gt; -S&lt;ServerName&gt;
</pre></li>
<li>
<p>Run the BCP extract script.</p>
<ul>
<li>
<p>On Windows, enter:</p>
<pre>
prompt&gt; unload_script.bat
</pre></li>
</ul>
<p>This script creates the data files in the current directory.</p>
</li>
<li>
<p>Copy the data files and scripts, if necessary, to the target Oracle database system, or to a system that has access to the target Oracle database and has SQL*Loader (Oracle Client) installed.</p>
</li>
</ol>
</div>
<!-- class="sect3" -->
<a id="CHDIBDBI"></a>
<div class="sect3">
<h4 class="sect3">Creating Data Files From <a id="sthref404"></a>Microsoft Access</h4>
<p>To create data files from a Microsoft Access database, use the Exporter for Microsoft Access tool.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
For information about how to create data files from a Microsoft Access database, see online help for the exporter tool.</div>
</div>
<!-- class="sect3" -->
<a id="CHDDDCBC"></a>
<div class="sect3">
<h4 class="sect3">Creating Data Files From <a id="sthref405"></a>MySQL</h4>
<p>To create data files from a MySQL database:</p>
<ol>
<li>
<p>Copy the contents of the directory where SQL Developer generated the data unload scripts, if necessary, onto the system where the source database is installed or a system that has access to the source database and has the mysqldump tool installed.</p>
</li>
<li>
<p>Edit the <code>unload_script</code> script to include the correct host, user name, password, and destination directory for the data files.</p>
<ul>
<li>
<p>On Windows, edit the <code>unload_script.bat</code> script.</p>
</li>
<li>
<p>On Linux or UNIX, edit the <code>unload_script.sh</code> script.</p>
</li>
</ul>
<p>The following shows a line from a sample <code>unload_script.bat</code> script:</p>
<pre>
mysqldump -h localhost -u &lt;USERNAME&gt; -p&lt;PASSWORD&gt;  -T &lt;DESTINATION_PATH&gt; 
--fields-terminated-by="&lt;EOFD&gt;" --fields-escaped-by="" 
--lines-terminated-by="&lt;EORD&gt;" "CarrierDb" "CarrierPlanTb"
</pre>
<p>Edit this line to include the correct values for <span class="italic">USERNAME, PASSWORD</span>, and <span class="italic">DESTINATION PATH</span>. Do not include the angle brackets in the edited version of this file.</p>
<p>In this command line, <code>localhost</code> indicates a loopback connection, which is required by the -T option. (See the mysqldump documentation for more information.)</p>
</li>
<li>
<p>Run the script.</p>
<ul>
<li>
<p>On Windows, enter:</p>
<pre>
prompt&gt; unload_script.bat
</pre></li>
<li>
<p>On Linux or UNIX, enter:</p>
<pre>
prompt&gt; chmod 755 unload_script.sh
prompt&gt; sh ./unload_script.sh
</pre></li>
</ul>
<p>This script creates the data files in the current directory.</p>
</li>
<li>
<p>Copy the data files and scripts, if necessary, to the target Oracle database system, or to a system that has access to the target Oracle database and has SQL*Loader (Oracle Client) installed.</p>
</li>
</ol>
</div>
<!-- class="sect3" -->
<a id="CHDEAJCE"></a>
<div class="sect3">
<h4 class="sect3">Populating the Destination Database Using the Data Files</h4>
<p>To populate the destination database using the data files, you run the data load scripts using SQL*Loader:</p>
<ol>
<li>
<p>Navigate to the directory where you created the data unload scripts.</p>
</li>
<li>
<p>Edit the <code>oracle_ctl.bat</code> (Windows systems) or <code>oractl_ctl.sh</code> (Linux or UNIX systems) file, to provide the appropriate user name and password strings.</p>
</li>
<li>
<p>Run the SQL Load script.</p>
<ul>
<li>
<p>On Windows, enter:</p>
<pre>
prompt&gt; oracle_ctl.bat
</pre></li>
<li>
<p>On Linux or UNIX, enter:</p>
<pre>
prompt&gt; ./oracle_ctl.sh
</pre></li>
</ul>
</li>
</ol>
<p>For Microsoft SQL Server and Sybase migrations, if you are inserting into BLOB fields with SQL*Loader, you will receive the following error:</p>
<pre>
SQL*Loader-309: No SQL string allowed as part of LARGEOBJECT field specification
</pre>
<p>To handle situations indicated by this error, you can use either one of the following options:</p>
<ul>
<li>
<p>Enable the Generate Stored Procedure for Migrate Blobs Offline SQL Developer preference (see <a href="intro.htm#CHDGAIBA">Migration: Generation Options</a>).</p>
</li>
<li>
<p>Use the following <a href="#CHDBDBGA">Workaround</a>.</p>
</li>
</ul>
<p class="subhead2"><a id="CHDBDBGA"></a>Workaround</p>
<p>The workaround is to load the data (which is in hex format) into an additional CLOB field and then convert the CLOB to a BLOB through a PL/SQL procedure.</p>
<p>The only way to export binary data properly through the Microsoft SQL Server or Sybase Adaptive Server BCP is to export it in a hexadecimal (hex) format; however, to get the hex values into Oracle, save them in a CLOB (holds text) column, and then convert the hex values to binary values and insert them into the BLOB column. The problem here is that the HEXTORAW function in Oracle only converts a maximum of 2000 hex pairs. Consequently, write your own procedure that will convert (piece by piece) your hex data to binary. (In the following steps and examples, modify the START.SQL and FINISH.SQL to reflect your environment.</p>
<p>The following shows the code for two scripts, <code>start.sql</code> and <code>finish.sql</code>, that implement this workaround. Read the comments in the code, and modify any SQL statements as needed to reflect your environment and your needs.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
After you run <code>start.sql</code> and before you run <code>finish.sql</code>, run BCP; and before you run BCP, change the relevant line in the <code>.ctl</code> file from:
<pre>
&lt;blob_column&gt; CHAR(2000000) "HEXTORAW (:&lt;blob_column&gt;)"
</pre>
<p>to:</p>
<pre>
&lt;blob_column&gt;_CLOB CHAR(2000000)
</pre></div>
<pre>
-- START.SQL
-- Modify this for your environment.
 
-- This should be executed in the user schema in Oracle that contains the table.
-- DESCRIPTION:
-- ALTERS THE OFFENDING TABLE SO THAT THE DATA MOVE CAN BE EXECUTED
-- DISABLES TRIGGERS, INDEXES AND SEQUENCES ON THE OFFENDING TABLE
 
-- 1) Add an extra column to hold the hex string;
alter table &lt;tablename&gt; add (&lt;blob_column&gt;_CLOB CLOB);
 
-- 2) Allow the BLOB column to accept NULLS
alter table &lt;tablename&gt; MODIFY &lt;blob_column&gt; NULL;
 
-- 3) Disable triggers and sequences on &lt;tablename&gt;
alter trigger &lt;triggername&gt; disable;
 
alter table &lt;tablename&gt; drop primary key cascade;
 
drop index &lt;indexname&gt;;
 
-- 4) Allow the table to use the tablespace
alter table &lt;tablename&gt; move lob (&lt;blob_column&gt;) store as (tablespace lob_tablespace);
 
alter table &lt;tablename&gt; move lob (&lt;blob_column&gt;_clob) store as (tablespace lob_tablespace);
 
COMMIT;
 
-- END OF FILE
 
 
-- FINISH.SQL
-- Modify this for your enironment.
 
-- This should be executed in the table schema in Oracle.
-- DESCRIPTION:
-- MOVES THE DATA FROM CLOB TO BLOB
-- MODIFIES THE TABLE BACK TO ITS ORIGINAL SPEC (without a clob)
-- THEN ENABLES THE SEQUENCES, TRIGGERS AND INDEXES AGAIN
 
-- Currently we have the hex values saved as 
-- text in the &lt;blob_column&gt;_CLOB column
-- And we have NULL in all rows for the &lt;blob_column&gt; column.
-- We have to get BLOB locators for each row in the BLOB column
 
-- put empty blobs in the blob column
UPDATE &lt;tablename&gt; SET &lt;blob_column&gt;=EMPTY_BLOB();
 
COMMIT;
 
-- create the following procedure in your table schema
CREATE OR REPLACE PROCEDURE CLOBTOBLOB
AS
inputLength NUMBER; -- size of input CLOB
offSet NUMBER := 1;
pieceMaxSize NUMBER := 2000; -- the max size of each peice
piece VARCHAR2(2000); -- these pieces will make up the entire CLOB
currentPlace NUMBER := 1; -- this is where were up to in the CLOB
blobLoc BLOB; -- blob locator in the table
clobLoc CLOB; -- clob locator pointsthis is the value from the dat file
 
-- THIS HAS TO BE CHANGED FOR SPECIFIC CUSTOMER TABLE 
-- AND COLUMN NAMES
CURSOR cur IS SELECT &lt;blob_column&gt;_clob clob_column , &lt;blob_column&gt; blob_column FROM /*table*/&lt;tablename&gt; FOR UPDATE;
 
cur_rec cur%ROWTYPE;
 
BEGIN
 
OPEN cur;
FETCH cur INTO cur_rec;
 
WHILE cur%FOUND
LOOP
--RETRIVE THE clobLoc and blobLoc
clobLoc := cur_rec.clob_column;
blobLoc := cur_rec.blob_column;
 
currentPlace := 1; -- reset evertime
-- find the lenght of the clob
inputLength := DBMS_LOB.getLength(clobLoc);
 
-- loop through each peice
LOOP
-- get the next piece and add it to the clob
piece := DBMS_LOB.subStr(clobLoc,pieceMaxSize,currentPlace);
 
-- append this piece to the BLOB
DBMS_LOB.WRITEAPPEND(blobLoc, LENGTH(piece)/2, HEXTORAW(piece));
 
currentPlace := currentPlace + pieceMaxSize ;
 
EXIT WHEN inputLength &lt; currentplace;
END LOOP;
 
FETCH cur INTO cur_rec;
END LOOP;
 
END CLOBtoBLOB;
/
 
-- now run the procedure
-- It will update the blob column with the correct binary representation
-- of the clob column
EXEC CLOBtoBLOB;
 
-- drop the extra clob cloumn
alter table &lt;tablename&gt; drop column &lt;blob_column&gt;_clob;
 
-- 2) apply the constraint we removed during the data load
alter table &lt;tablename&gt; MODIFY FILEBINARY NOT NULL;
 
-- Now re enable the triggers, indexes and primary keys
alter trigger &lt;triggername&gt; enable;
 
ALTER TABLE &lt;tablename&gt; ADD ( CONSTRAINT &lt;pkname&gt; PRIMARY KEY ( &lt;column&gt;) ) ;
 
CREATE INDEX &lt;index_name&gt; ON &lt;tablename&gt;( &lt;column&gt; );
 
COMMIT;
 
-- END OF FILE
</pre></div>
<!-- class="sect3" --></div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="CHDBIAIE"></a>
<div class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1"><a id="sthref406"></a>Making Queries Case Insensitive</h2>
<p>With several third-party databases, it is common for queries to be case insensitive. For example, in such cases the following queries return the same results:</p>
<pre>
SELECT * FROM orders WHERE sales_rep = 'Oracle';
SELECT * FROM orders WHERE sales_rep = 'oracle';
SELECT * FROM orders WHERE sales_rep = 'OrAcLe';
</pre>
<p>If you want queries to be case insensitive for a user in the Oracle database, you can create an AFTER LOGON ON DATABASE trigger, in which you set, for that database user, the NLS_SORT session parameter to an Oracle sort name with <code>_CI</code> (for "case insensitive") appended.</p>
<p>The following example causes queries for user SMITH to use the German sort order and to be case insensitive:</p>
<pre>
CREATE OR REPLACE TRIGGER set_sort_order AFTER LOGON ON DATABASE
 DECLARE
  username VARCHAR2(30);
 BEGIN
  username:=SYS_CONTEXT('USERENV','SESSION_USER');
  IF username LIKE 'SMITH' then
   execute immediate 'alter session set NLS_COMP=LINGUISTIC';
   execute immediate  'alter session set <span class="bold">NLS_SORT=GERMAN_CI</span>';
  END IF;
 END; 
</pre></div>
<!-- class="sect1" -->
<a id="CHDCFFJF"></a>
<div class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1"><a id="RPTUG41000"></a>Testing the Oracle Database</h2>
<p>During the testing phase, you test the application and Oracle database to make sure that the:</p>
<ul>
<li>
<p>Migrated data is complete and accurate</p>
</li>
<li>
<p>Applications function in the same way as the source database</p>
</li>
<li>
<p>Oracle database producing the same results as the source database</p>
</li>
<li>
<p>Applications and Oracle database meet the operational and performance requirements</p>
</li>
</ul>
<p>You may already have a collection of unit tests and system tests from the original application that you can use to test the Oracle database. You should run these tests in the same way that you ran tests against the source database. However, regardless of added features, you should ensure that the application connects to the Oracle database and that the SQL statements it issues produces the correct results.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
The tests that you run against the application vary depending on the scope of the application. Oracle recommends that you thoroughly test each SQL statement that is changed in the application. You should also test the system to make sure that the application functions the same way as in the third-party database.</div>
<p>See also the following:</p>
<ul>
<li>
<p><a href="#CHDIDABH">Testing Methodology</a></p>
</li>
<li>
<p><a href="#CHDGFHCF">Testing the Oracle Database</a></p>
</li>
</ul>
<a id="CHDIDABH"></a>
<div class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Testing Methodology</h3>
<p>Many constraints shape the style and amount of testing that you perform on a database. Testing can contain one or all of the following:</p>
<ul>
<li>
<p>Simple data validation</p>
</li>
<li>
<p>Full life cycle of testing addressing individual unit tests</p>
</li>
<li>
<p>System and acceptance testing</p>
</li>
</ul>
<p>You should follow a strategy for testing that suits your organization and circumstances. Your strategy should define the process by which you test the migrated application and Oracle database. A typical test method is the V-model, which is a staged approach where each feature of the database creation is mirrored with a testing phase.</p>
<p><a href="#BHAFDAIH">Figure 2-2, "V-model with a Database Migration"</a> shows an example of the V-model with a database migration scenario:</p>
<div class="figure">
<p class="titleinfigure"><a id="BHAFDAIH"></a>Figure 2-2 V-model with a Database Migration</p>
<img width="574" height="170" src="img/vmodel.gif" alt="Description of Figure 2-2 follows" /><br />
<a id="sthref407" href="img_text/vmodel.htm">Description of "Figure 2-2 V-model with a Database Migration"</a><br />
<br /></div>
<!-- class="figure" -->
<p>There are several types of tests that you use during the migration process. During the testing stage, you go through several cycles of testing to enhance the quality of the database. The test cases you use should make sure that any issues encountered in a previous version of the Oracle database are not introduced again.</p>
<p>For example, if you have to make changes to the migrated schema based on test results, you may need to create a new version of the Oracle database schema. In practice, you use SQL Developer to create a base-line Oracle schema at the start of testing, and then edit this schema as you progress with testing.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
Oracle recommends that you track issues that you find during a testing cycle in an issue tracking system. Track these issues against the version of the database or application that you are testing.</div>
</div>
<!-- class="sect2" -->
<a id="CHDGFHCF"></a>
<div class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Testing the Oracle Database</h3>
<p>Use the test cases to verify that the Oracle database provides the same business logic results as the source database.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
Oracle recommends that you define completion criteria so that you can determine the success of the migration.</div>
<p>This procedure explains one way of testing the migrated database. Other methods are available and may be more appropriate to your business requirements.</p>
<p>To test the Oracle database:</p>
<a id="i1005760"></a>
<ol>
<li id="BHAFEJBC">
<p>Create a controlled version of the migrated database.</p>
<p>Oracle recommends that you keep the database migration scripts in a source control system.</p>
</li>
<li>
<p>Design a set of test cases that you can use to test the Oracle database from unit to system level. The test cases should:</p>
<ol>
<li>
<p>Ensure the following:</p>
<ul>
<li>
<p>All the users in the source database have migrated successfully</p>
</li>
<li>
<p>Privileges and grants for users are correct</p>
</li>
<li>
<p>Tables have the correct structure, defaults are functioning correctly, and errors did not occur during mapping or generation</p>
</li>
</ul>
</li>
<li>
<p>Validate that the data migrated successfully by doing the following:</p>
<ul>
<li>
<p>Comparing the number of rows in the Oracle database with those in the source database</p>
</li>
<li>
<p>Calculating the sum of numerical columns in the Oracle database and compare with those in the source database</p>
</li>
</ul>
</li>
<li>
<p>Ensure that the following applies to constraints:</p>
<ul>
<li>
<p>You cannot enter duplicate primary keys</p>
</li>
<li>
<p>Foreign keys prevent you from entering inconsistent data</p>
</li>
<li>
<p>Check constraints prevent you from entering invalid data</p>
</li>
</ul>
</li>
<li>
<p>Check that indexes and sequences are created successfully.</p>
</li>
<li>
<p>Ensure that views migrated successfully by doing the following:</p>
<ul>
<li>
<p>Comparing the number of rows in the Oracle database with those in the source database</p>
</li>
<li>
<p>Calculating the sum of numerical columns in the Oracle database and compare with those in the source database</p>
</li>
</ul>
</li>
<li>
<p>Ensure that triggers, procedures, and functions are migrated successfully. Check that the correct values are returned for triggers and functions.</p>
</li>
</ol>
</li>
<li id="i1005780">
<p>Run the test cases against the migrated database.</p>
</li>
<li id="i1005782">
<p>Create a report that evaluates the test case results.</p>
<p>These reports allow you to evaluate the data to qualify the errors, file problem reports, and provide a customer with a controlled version of the database.</p>
</li>
<li>
<p>If the tests pass, go to step <a href="#i1005807">7</a>.</p>
<p>If all tests in the test cases pass or contain acceptable errors, the test passes. If acceptable errors occur, document them in an error report that you can use for audit purposes.</p>
</li>
<li>
<p>If the test cases fail:</p>
<ol>
<li>
<p>Identify the cause of the error.</p>
</li>
<li>
<p>Identify the test cases needed to check the errors.</p>
</li>
<li>
<p>Log an issue on the controlled version of the migrated database code in the problem report.</p>
</li>
<li>
<p>Add the test case and a description of the problem to the incident tracking system of your organization, which could be a spreadsheet or bug reporting system. Aside from the test case, the incident log should include the following:</p>
<ul>
<li>
<p>Provide a clear, concise description of the incident encountered</p>
</li>
<li>
<p>Provide a complete description of the environment, such as platform and source control version</p>
</li>
<li>
<p>Attach the output of the test, if useful</p>
</li>
<li>
<p>Indicate the frequency and predictability of the incident</p>
</li>
<li>
<p>Provide a sequence of events leading to the incident</p>
</li>
<li>
<p>Describe the effect on the current test, diagnostic steps taken, and results noted</p>
</li>
<li>
<p>Describe the persistent after effect, if any</p>
</li>
</ul>
</li>
<li>
<p>Attempt to fix the errors.</p>
</li>
<li>
<p>Return to step <a href="#BHAFEJBC">1</a>.</p>
</li>
</ol>
</li>
<li id="i1005807">
<p>Identify acceptance tests that you can use to make sure the Oracle database is an acceptable quality level.</p>
</li>
</ol>
<div class="sect3"><a id="sthref408"></a>
<h4 class="sect3">Guidelines for Creating Tests</h4>
<p>You may already have a collection of unit tests and system tests from the original application that you can use to test the Oracle database. However, if you do not have any unit or system tests, you need to create them. When creating test cases, use the following guidelines:</p>
<ul>
<li>
<p>Plan, specify, and execute the test cases, recording the results of the tests.</p>
<p>The amount of testing you perform is proportional to the time and resources that are available for the migration project. Typically, the testing phase in a migration project can take anywhere from 40% to 60% of the effort for the entire project.</p>
</li>
<li>
<p>Identify the components that you are testing, the approach to the test design and the test completion criteria.</p>
</li>
<li>
<p>Define each test case so that it is reproducible.</p>
<p>A test that is not reproducible is not acceptable for issue tracking or for an audit process.</p>
</li>
<li>
<p>Divide the source database into functions and procedures and create a test case for each function or procedure. In the test case, state what you are going to test, define the testing criteria, and describe the expected results.</p>
</li>
<li>
<p>Record the expected result of each test case.</p>
</li>
<li>
<p>Verify that the actual results meet the expected results for each test.</p>
</li>
<li>
<p>Define test cases that produce negative results as well as those that you expect a positive result.</p>
</li>
</ul>
</div>
<!-- class="sect3" -->
<div class="sect3"><a id="sthref409"></a>
<h4 class="sect3">Example of a Unit Test Case</h4>
<p>The following displays a sample unit test plan for Windows:</p>
<p>Name&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Jane Harrison</p>
<p>Module&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Table Test Emp</p>
<p>Date test&nbsp;completed&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;23 May 2007</p>
<p>Coverage log file location&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; mwb\database\TableTestEmp</p>
<p>Description&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This unit test tests that the emp table was migrated successfully.</p>
<p>Reviewed by&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;John Smith</p>
<div class="inftblinformal">
<table class="cellalignment2015" title="Unit Test Case Example" summary="Displays a sample unit test plan that includes the task ID, description of the task, expected result of the test, and whether the test was verified." dir="ltr">
<thead>
<tr class="cellalignment2006">
<th class="cellalignment2013" id="r1c1-t16">Task ID</th>
<th class="cellalignment2013" id="r1c2-t16">Task Description</th>
<th class="cellalignment2013" id="r1c3-t16">Expected Result</th>
<th class="cellalignment2013" id="r1c4-t16">Verified (Yes/No)</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2006">
<td class="cellalignment2014" id="r2c1-t16" headers="r1c1-t16">1</td>
<td class="cellalignment2014" headers="r2c1-t16 r1c2-t16">Run the following on the source database for each table:
<pre>
select count(*) from emp
</pre>
<p>Run the following on the destination database for each table:</p>
<pre>
select count(*) from emp
</pre>
<pre>
</pre></td>
<td class="cellalignment2014" headers="r2c1-t16 r1c3-t16">On the source database, the count(*) produces a number. In this case, the number is the number of rows in each table.
<p>On the destination database, the count(*) number corresponds to the number of rows in the new Oracle table.</p>
</td>
<td class="cellalignment2014" headers="r2c1-t16 r1c4-t16">Yes
<p>The number of rows in each table is the same in the source and destination databases.</p>
</td>
</tr>
<tr class="cellalignment2006">
<td class="cellalignment2014" id="r3c1-t16" headers="r1c1-t16">2</td>
<td class="cellalignment2014" headers="r3c1-t16 r1c2-t16">Run the following on the source database for each table:
<pre>
select sum(salary) from emp
</pre>
<p>Run the following on the destination database for each table:</p>
<pre>
select sum(salary) from emp
</pre></td>
<td class="cellalignment2014" headers="r3c1-t16 r1c3-t16">On the source database, sum(salary) produces a check sum for the sum of the data in each table.
<p>On the destination database, sum(salary) corresponds to the sum of the salary in the emp table.</p>
</td>
<td class="cellalignment2014" headers="r3c1-t16 r1c4-t16">Yes
<p>The sum for each table is the same in the source and destination databases.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" --></div>
<!-- class="sect3" --></div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="CHDDCHHE"></a>
<div class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1"><a id="RPTUG41100"></a><a id="sthref410"></a><a id="sthref411"></a>Deploying the Oracle Database</h2>
<p>Deploying the migrated and tested Oracle database within a business environment can be difficult. Therefore, you may need to consider different rollout strategies depending on your environment. Several rollout strategies are identified for you, but you may use another approach if that is recommended by your organization.</p>
<p>During the deployment phase, you move the destination database from a development to a production environment. A group separate from the migration and testing team, may perform the deployment phase, such as the in-house IT department.</p>
<p>Deployment involves the following:</p>
<ul>
<li>
<p><a href="#CHDBGEEF">Choosing a Rollout Strategy</a></p>
</li>
<li>
<p><a href="#CHDFIAJB">Deploying the Destination Database</a></p>
</li>
</ul>
<a id="CHDBGEEF"></a>
<div class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Choosing a Rollout Strategy</h3>
<p>The strategy that you use for migrating a third-party database to an Oracle database must take into consideration the users and the type of business that may be affected during the transition period. For example, you may use the Big Bang approach because you do not have enough systems to run the source database and Oracle database simultaneously. Otherwise, you may want to use the Phased approach to make sure that the system is operating in the user environment correctly before it is released to the general user population. You can use one of the following approaches.</p>
<div class="sect3"><a id="sthref412"></a>
<h4 class="sect3">Phased Approach</h4>
<p>Using the Phased approach, you migrate groups of users at different times. You may decide to migrate a department or a subset of the complete user-base. The users that you select should represent a cross-section of the complete user-base. This approach allows you to profile users as you introduce them to the Oracle database. You can reconfigure the system so that only selected users are affected by the migration and unscheduled outages only affect a small percentage of the user population. This approach may affect the work of the users you migrated. However, because the number of users is limited, support services are not overloaded with issues.</p>
<p>The Phased approach allows you to debug scalability issues as the number of migrated users increases. However, using this approach may mean that you must migrate data to and from legacy systems during the migration process. The application architecture must support a phased approach.</p>
</div>
<!-- class="sect3" -->
<div class="sect3"><a id="sthref413"></a>
<h4 class="sect3">Big Bang Approach</h4>
<p>Using the Big Bang approach, you migrate all of the users at the same time. This approach may cause schedule outages during the time you are removing the old system, migrating the data, deploying the Oracle system, and testing that the system is operating correctly. This approach relies on you testing the database on the same scale as the original database. It has the advantage of minimal data conversion and synchronization with the original database because that database is switched off. The disadvantage is that this approach can be labor intensive and disruptive to business activities due to the switch over period needed to install the Oracle database and perform the other migration project tasks.</p>
</div>
<!-- class="sect3" -->
<div class="sect3"><a id="sthref414"></a>
<h4 class="sect3">Parallel Approach</h4>
<p>Using the Parallel approach, you maintain both the source database and destination Oracle database simultaneously. To ensure that the application behaves the same way in the production environment for the source database and destination database, you enter data in both databases and analyze the data results. The advantage of this approach is if problems occur in the destination database, users can continue using the source database. The disadvantage of the Parallel approach is that running and maintaining both the source and the destination database may require more resources and hardware than other approaches.</p>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="CHDFIAJB"></a>
<div class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Deploying the Destination Database</h3>
<p>There are several ways to deploy the destination database. The following task is an example that you should use as a guideline for deploying the destination database.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
If you have a complex scenario as defined in <a href="#CACBAAJI">Table 2-1</a>, Oracle recommends that you complete all of the deployment tasks. However, if you have a simple scenario, you should choose the deployment tasks appropriate to your organization.</div>
<ol>
<li>
<p>Configure the hardware, if necessary.</p>
<p>In a large scale or complex environment, you must design the disk layout to correspond with the database design. If you use redundant disks, align them in stripes that you can increase as the destination database evolves. You must install and configure the necessary disks, check the memory, and configure the system.</p>
</li>
<li>
<p>Make sure the operating system meets the parameters of the Oracle configuration.</p>
<p>Before installing any Oracle software, make sure that you have modified all system parameters. For more information about modifying system parameters, see the relevant installation guide for your platform, such as Solaris Operating System.</p>
</li>
<li>
<p>Install the Oracle software.</p>
<p>Aside from the Oracle software that allows you to create an Oracle database, you may need to install ancillary software to support the application, such as Extract Transformation and Load (ETL) Software for data warehousing.</p>
</li>
<li>
<p>Create the destination database from the source database and migrate the data to the Oracle database.</p>
<p>There are several ways of putting the destination database into production after testing it, such as:</p>
<ul>
<li>
<p>Place the successfully tested database into production. The test system is now the production system.</p>
</li>
<li>
<p>Use Oracle Export to extract the destination database from the successfully tested database and use Oracle Import to create that database within the production environment.</p>
</li>
<li>
<p>Use the tested migration scripts to create the Oracle database and populate it with data using SQL*Loader.</p>
</li>
</ul>
</li>
<li>
<p>Perform the final checks on the destination database and applications.</p>
</li>
<li>
<p>Place the destination database into production using one of the rollout strategies.</p>
</li>
<li>
<p>Perform a final audit by doing the following:</p>
<ul>
<li>
<p>Audit the integrity of the data</p>
</li>
<li>
<p>Audit the validity of the processes, such as back-up and recovery</p>
</li>
<li>
<p>Obtain sign-off for the project, if necessary</p>
</li>
</ul>
</li>
</ol>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="CHDJGAIH"></a>
<div class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1"><a id="RPTUG41200"></a>Using Migration Reports</h2>
<p>Several SQL Developer reports provide information about objects that have been captured, converted, and generated during operations designed to migrate third-party databases to Oracle. Each report uses information from a selected migration project. These reports are listed in the Reports navigator: click <span class="bold">Migration Reports</span>.</p>
<p><span class="bold">Automatic Name Changes</span>: Lists name changes that were automatically made when the converted model was generated. Some names are automatically changed during conversion, so that they are Oracle compliant and no collisions exist.</p>
<p><span class="bold">Migration Details</span>: Lists all the objects and their status through each phase of the migration (capture, convert, generate).</p>
<p><span class="bold">Migration Summary</span>: Gives a summary of the migration. Includes the total number of procedures, triggers, and views that where captured, converted. and generated successfully.</p>
</div>
<!-- class="sect1" -->
<a id="CHDFHCEH"></a>
<div class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1"><a id="RPTUG41300"></a><a id="sthref415"></a><a id="sthref416"></a>SQL Developer User Interface for Migration</h2>
<p>If you are performing database migration, you need to use some migration-specific features in addition to those described in <a href="intro.htm#BHAHIFGB">SQL Developer User Interface</a>. The user interface includes some additional navigator tabs and panes (Captured Models and Converted Models) and a Migration menu, and many smaller changes throughout the interface. <a href="#CHDDJCGI">Figure 2-3, "Main Window for a Database Migration"</a> shows the SQL Developer main window with objects reflecting the migration of a Microsoft Access application named sales.mdb.</p>
<div class="figure">
<p class="titleinfigure"><a id="CHDDJCGI"></a>Figure 2-3 Main Window for a Database Migration</p>
<img width="452" height="792" src="img/ui_migration.gif" alt="Migration features in the main window" /><br /></div>
<!-- class="figure" -->
<p>In this figure:</p>
<ul>
<li>
<p>The Connections navigator shows three database connections: <code>migration_repository</code> for a connection (to a user named MIGRATION) used for the migration repository, <code>sales_access</code> connected to a Microsoft Access database named sales.mdb, and <code>sales_oracle</code> connected to an Oracle user named SALES whose schema owns the migrated schema objects.</p>
</li>
<li>
<p>The <span class="bold">Captured Models</span> navigator shows one captured model, which was created using an XML file created by the exporter tool for Access applications. (If the source database is a type other than Microsoft Access, the procedure for creating the captured model is different: you can generate it directly from the source database connection.)</p>
</li>
<li>
<p>The <span class="bold">Converted Models</span> navigator shows one converted model, which is an Oracle representation of the source database. The converted model is created from the captured model, and the converted model is used to generate the schema objects that you can see using an Oracle database connection (sales_oracle in this figure).</p>
</li>
</ul>
<a id="CHDFFEIC"></a>
<div class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Migration Menu</h3>
<p>The Migration menu contains options related to migrating third-party databases to Oracle.</p>
<p><span class="bold">Quick Migrate</span>: Displays a dialog box for performing a quick migration using many default values.</p>
<p><span class="bold">Repository Management</span>: Enables you to create, delete, or truncate (remove all data from) a migration repository; select the current migration repository; and disconnect from the current migration repository (which deactivates the current repository but does not disconnect from the database).</p>
<p><span class="bold">Microsoft Access Exporter</span>: Contains submenu items from which you specify the version of the exporter tool to use to create an XML file to be used for creating the captured model. You can also use the exporter tool to export table data. Specify the exporter tool version for the version of Access that is on your PC and that was used to create the .mdb file.</p>
<p><span class="bold">Migrate Data</span>: Displays a dialog box for performing an online migration of table data from the source database to the Oracle schema.</p>
<p><span class="bold">Script Generation</span>: <span class="bold">Generate Oracle DDL</span> displays DDL (data definition language) statements in a SQL Worksheet window, where you can then run the script to create the Oracle schema and schema objects; <span class="bold">Generate Data Move Scripts</span> displays a dialog box for specifying the location in which to create files for performing an offline migration of table data from the source database to the Oracle schema.</p>
<p><span class="bold">Capture Microsoft Access Exporter XML</span>: Creates a captured model of a Microsoft Access database from the XML file created by the exporter tool.</p>
<p><span class="bold">MySQL, SQL Server, and Sybase Offline Capture</span>: <span class="bold">Create Database Capture Scripts</span> specifies options for creating an offline capture properties (.ocp) file, which you can later load and run; <span class="bold">Load Database Capture Script Output</span> enables you to select a script to be loaded and run.</p>
<p><span class="bold">Script Generation</span>: <span class="bold">Generate Oracle DDL</span> specifies the converted model for which to generate Oracle DDL and produces a SQL*Plus script file that you use for offline generation (that is, you can run the script to create the appropriate objects in the Oracle database); <span class="bold">Generate Data Move Scripts</span> specifies the converted model and the destination directory if you are performing offline data migration.</p>
<p><span class="bold">Translation Scratch Editor</span>: Displays the translation scratch editor, which is explained in <a href="#CHDCJDBJ">Using the Translation Scratch Editor</a>.</p>
</div>
<!-- class="sect2" -->
<div class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref417"></a>
<h3 class="sect2">Other Menus: Migration Items</h3>
<p>The <span class="bold">View</span> menu has the following items related to database migration:</p>
<ul>
<li>
<p><span class="bold">Captured Models</span>: Displays the Captured Models navigator.</p>
</li>
<li>
<p><span class="bold">Converted Models</span>: Displays the Converted Models navigator.</p>
</li>
</ul>
</div>
<!-- class="sect2" -->
<div class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref418"></a>
<h3 class="sect2">Migration Preferences</h3>
<p>The SQL Developer user preferences window (displayed by clicking <span class="bold">Tools</span>, then <span class="bold">Preferences</span>) contains a <span class="bold">Migration</span> pane with several related subpanes, and a <span class="bold">Translation</span> pane with a Translation Preferences subpane.</p>
<p>For information about these preferences, click Help in the pane, or see <a href="intro.htm#CHDJJGBH">Migration</a>.</p>
</div>
<!-- class="sect2" -->
<div class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref419"></a>
<h3 class="sect2">Migration Log Panes</h3>
<p><span class="bold">Migration Log</span>: Contains errors, warnings, and informational messages relating to migration operations.</p>
<p><span class="bold">Logging Page</span>: Contains an entry for each migrated-related operation.</p>
<p><span class="bold">Data Editor Log</span>: Contains entries when data is being manipulated by SQL Developer. For example, the output of a Microsoft Excel import operation will be reported here as a series of INSERT statements.</p>
</div>
<!-- class="sect2" -->
<a id="CHDCJDBJ"></a>
<div class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><a id="sthref420"></a><a id="sthref421"></a><a id="sthref422"></a>Using the Translation Scratch Editor</h3>
<p>You can use the translation scratch editor to enter third-party database SQL statements and have them translated to Oracle PL/SQL statements. You can specify translation from Microsoft SQL Server T-SQL to PL/SQL, from Sybase T-SQL to PL/SQL, or from Microsoft Access SQL to PL/SQL.</p>
<p>You can display the scratch editor by clicking <span class="bold">Migration</span>, then <span class="bold">Translation Scratch Editor</span>. The scratch editor consists of two SQL Worksheet windows side by side, as shown in the following figure:</p>
<img width="608" height="272" src="img/scratch_editor.gif" alt="Translation scratch editor interface" /><br />
<p>To translate a statement to its Oracle equivalent, select the type of translation, enter the third-party SQL statement or statements, then click the <span class="bold">Translate</span> (&gt;&gt;) icon to display the generated PL/SQL statement or statements.</p>
<p>SQL keywords are automatically highlighted.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
For a Microsoft SQL Server or Sybase Adaptive Server connection, <a id="sthref423"></a>the worksheet does not support running T-SQL statements. It only supports SELECT, CREATE, INSERT, UPDATE, DELETE, and DROP statements.</div>
<p>The first time you save the contents of either worksheet window in the translation scratch editor, you are prompted for the file location and name. If you perform any subsequent <span class="bold">Save</span> operations (regardless of whether you have erased or changed the content of the window), the contents are saved to the same file. To save the contents to a different file, click <span class="bold">File</span>, then <span class="bold">Save As</span>.</p>
<p>For detailed information about the worksheet windows, see <a href="intro.htm#CHDDHAAI">Using the SQL Worksheet</a>.</p>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" --></div>
<!-- class="chapter" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment2005">
<tr>
<td class="cellalignment2014">
<table class="cellalignment2010">
<tr>
<td class="cellalignment2009"><a href="intro.htm"><img width="24" height="24" src="../../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment2009"><a href="tut_library.htm"><img width="24" height="24" src="../../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;2006, 2014,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment2017">
<table class="cellalignment2008">
<tr>
<td class="cellalignment2009"><a href="../../index.htm"><img width="24" height="24" src="../../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment2009"><a href="../../nav/portal_booklist.htm"><img width="24" height="24" src="../../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment2009"><a href="toc.htm"><img width="24" height="24" src="../../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment2009"><a href="index.htm"><img width="24" height="24" src="../../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment2009"><a href="../../nav/mindx.htm"><img width="24" height="24" src="../../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment2009"><a href="../../dcommon/html/feedback.htm"><img width="24" height="24" src="../../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>
</body>
</html>
