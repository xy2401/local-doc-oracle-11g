<!DOCTYPE html>
<html lang="en" >
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1">
<meta charset="utf-8">
<title>ETL Implementation and Customization</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Version 5.1.2 Build 040" />
<meta name="dcterms.created" content="2011-12-07T8:30:10Z" />
<meta name="robots" content="all" />
<meta name="dcterms.title" content="Airlines Data Model Implementation and Operations Guide" />
<meta name="dcterms.identifier" content="E26211-02" />
<meta name="dcterms.isVersionOf" content="DMAOG" />
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;2011,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved." />
<link rel="Start" href="../../index.htm" title="Home" type="text/html" />
<link rel="Copyright" href="../../dcommon/html/cpyr.htm" title="Copyright" type="text/html" />

<script type="application/javascript"  src="../../dcommon/js/headfoot.js"></script>
<script type="application/javascript"  src="../../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html" />
<link rel="Index" href="index.htm" title="Index" type="text/html" />
<link rel="Prev" href="adm.htm" title="Previous" type="text/html" />
<link rel="Next" href="rep_quer.htm" title="Next" type="text/html" />
<link rel="alternate" href="../e26211.pdf" title="PDF version" type="application/pdf" />
<link rel="schema.dcterms" href="http://purl.org/dc/terms/" />
<link rel="stylesheet" href="../../dcommon/css/fusiondoc.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/header.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/footer.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/fonts.css">
<link rel="stylesheet" href="../../dcommon/css/foundation.css">
<link rel="stylesheet" href="../../dcommon/css/codemirror.css">
<link rel="stylesheet" type="text/css" title="Default" href="../../nav/css/html5.css">
<link rel="stylesheet" href="../../dcommon/css/respond-480-tablet.css">
<link rel="stylesheet" href="../../dcommon/css/respond-768-laptop.css">
<link rel="stylesheet" href="../../dcommon/css/respond-1140-deskop.css">
<script type="application/javascript" src="../../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">9/12</span> <!-- End Header --><a id="BEHJFAFF"></a><a id="DMAOG227"></a>
<h1 class="chapter"><span class="secnum">4</span> ETL Implementation and Customization</h1>
<p>This chapter discusses the ETL (extraction, transformation and loading) programs you use to populate an Oracle Airlines Data Model warehouse. It includes the following topics:</p>
<ul>
<li>
<p><a href="#BEHCJJIH">The Role of ETL in the Oracle Airlines Data Model</a></p>
</li>
<li>
<p><a href="#BEHFIHBE">ETL for the Foundation Layer of an Oracle Airlines Data Model Warehouse</a></p>
</li>
<li>
<p><a href="#BEHHEIEE">Customizing Intra-ETL for the Oracle Airlines Data Model</a></p>
</li>
<li>
<p><a href="#BEHCBGGJ">Performing an Initial Load of an Oracle Airlines Data Model Warehouse</a></p>
</li>
<li>
<p><a href="#BEHIEGJH">Refreshing the Data in an Oracle Airlines Data Model Warehouse</a></p>
</li>
<li>
<p><a href="#BEHGGCGC">Managing Errors During Oracle Airlines Data Model Intra-ETL Execution</a></p>
</li>
</ul>
<a id="BEHCJJIH"></a><a id="DMAOG228"></a>
<div class="sect1">
<h2 class="sect1">The Role of ETL in the Oracle Airlines Data Model</h2>
<p><a id="sthref125"></a><a id="sthref126"></a><a href="pdm.htm#CHDFJJGA">Figure 2-1, "Layers of an Oracle Airlines Data Model Warehouse"</a> illustrated the three layers in Oracle Airlines Data Model warehouse environment: the optional staging layer, the foundation layer, and the access layer. You use two types of ETL (extraction, transformation and loading) to populate these layers:</p>
<ul>
<li>
<p><a id="sthref127"></a><a id="sthref128"></a><span class="bold">Source-ETL</span>. ETL that populates the staging layer (if any) and the foundation layer (that is, the base, reference, and lookup tables) with data from the OLTP system is known as source ETL.</p>
<p>Oracle Airlines Data Model does <span class="italic">not</span> include source-ETL scripts. You must create source-ETL yourself using your understanding of your OLTP system and your customized Oracle Airlines Data Model. See <a href="#BEHFIHBE">"ETL for the Foundation Layer of an Oracle Airlines Data Model Warehouse"</a> for more information on creating source-ETL.</p>
</li>
<li>
<p><a id="sthref129"></a><a id="sthref130"></a><span class="bold">Intra-ETL</span>. ETL that populates the access layer (that is, the derived tables, aggregate tables, materialized views, OLAP cubes, and data mining models) using the data in the foundation layer is known as intra-ETL.</p>
<p>Oracle Airlines Data Model <span class="italic">does</span> include intra-ETL. You can modify the default intra-ETL to populate a customized access layer from a customized foundation layer. See <a href="#BEHHEIEE">"Customizing Intra-ETL for the Oracle Airlines Data Model"</a> for more information on the intra-ETL.</p>
</li>
</ul>
</div>
<!-- class="sect1" -->
<a id="BEHFIHBE"></a><a id="DMAOG230"></a>
<div class="sect1">
<h2 class="sect1">ETL for the Foundation Layer of an Oracle Airlines Data Model Warehouse</h2>
<p><a id="sthref131"></a><a id="sthref132"></a>ETL that populates the foundation layer of an Oracle Airlines Data Model warehouse (that is, the base, reference, and lookup tables) with data from an OLTP system is known as source-ETL.</p>
<p>You populate the foundation layer of an Oracle Airlines Data Model warehouse by writing your own source-ETL scripts using Oracle Warehouse Builder or another ETL tool and then use those scripts to populate the foundation layer.</p>
<p>The following topics provide general information about writing source-ETL:</p>
<ul>
<li>
<p><a href="#BEHFHCBG">Source-ETL Design Considerations</a></p>
</li>
<li>
<p><a href="#BEHCBAHB">ETL Architecture for Oracle Airlines Data Model Source-ETL</a></p>
</li>
<li>
<p><a href="#BEHEIJAB">Creating a Source to Target Mapping Document for the Source-ETL</a></p>
</li>
<li>
<p><a href="#BEHEIDDG">Designing a Plan for Rectifying Source-ETL Data Quality Problems</a></p>
</li>
<li>
<p><a href="#BEHJBGGI">Designing Source-ETL Workflow and Jobs Control</a></p>
</li>
<li>
<p><a href="#BEHEDEDI">Designing Source-ETL Exception Handling</a></p>
</li>
<li>
<p><a href="#BEHGBCAJ">Writing Source-ETL that Loads Efficiently</a></p>
</li>
</ul>
<a id="BEHFHCBG"></a><a id="DMAOG354"></a>
<div class="sect2">
<h3 class="sect2">Source-ETL Design Considerations</h3>
<p>Keep the following points in mind when designing and writing source-ETL for Oracle Airlines Data Model:</p>
<ul>
<li>
<p>You can populate the calendar data by using the calendar population scripts provided with Oracle Airlines Data Model and described in <a class="olink DMARF" href="../e26208/toc.htm"><span class="italic">Oracle Airlines Data Model Reference</span></a>.</p>
</li>
<li>
<p>Populate the tables in the following order:</p>
<ol>
<li>
<p>Lookup tables</p>
</li>
<li>
<p>Reference tables</p>
</li>
<li>
<p>Base tables</p>
</li>
</ol>
</li>
<li>
<p>Analyze the tables in one category before loading the tables in the next category (for example, analyze the lookup tables before loading the reference tables). Additionally, you must analyze all of the tables loaded by the source-ETL process before executing the intra-ETL processes).</p>
<div class="infoboxnotealso">
<p class="notep1">See:</p>
<a class="olink WBETL" href="../../owb.112/e10935/toc.htm"><span class="italic">T</span></a>he topic about analyzing tables, indexes and clusters in <a class="olink ADMIN11524" href="../../server.112/e25494/general.htm#ADMIN11524"><span class="italic">Oracle Database Administrator's Guide</span></a>.</div>
</li>
</ul>
</div>
<!-- class="sect2" -->
<a id="BEHCBAHB"></a><a id="DMAOG231"></a>
<div class="sect2">
<h3 class="sect2">ETL Architecture for Oracle Airlines Data Model Source-ETL</h3>
<p><a id="sthref133"></a><a id="sthref134"></a>ETL first extracts data from the original sources, assures the quality of the data, cleans the data, and makes the data consistent across the original sources. ETL then populates the physical objects with the "clean" data so that query tools, report writers, dashboards and so on can access the data.</p>
<p>The fundamental services upon which data acquisition is constructed are as follows:</p>
<ul>
<li>
<p>Data sourcing</p>
</li>
<li>
<p>Data movement</p>
</li>
<li>
<p>Data transformation</p>
</li>
<li>
<p>Data loading</p>
</li>
</ul>
<p>From a logical architecture perspective, there are many different ways to configure these building blocks for delivering data acquisition services. The major architectural styles available that cover a range of options to be targeted within a data warehousing architecture include:</p>
<ul>
<li>
<p><span class="bold">Batch Extract, Transform, and Load</span> and <span class="bold">Batch Extract, Load, Transform, Load</span></p>
<p>Batch Extract, Transform and Load (ETL) and Batch Extract, Load, Transform, Load (ELTL) are the traditional architecture sin data warehouse implementation. The difference between them is where the transformation proceed in or out database.</p>
</li>
<li>
<p><span class="bold">Batch Hybrid Extract, Transform, Load, Transform, Load</span></p>
<p>Batch Hybrid Extract, Transform, Load, Transform, Load (ETLTL) is a hybrid strategy. This strategy provides the most flexibility to remove hand coding approaches to transformation design, apply a metadata-driven approach, and still be able to leverage the data processing capabilities of the enterprise warehouse. In this targeted design, the transformation processing is first performed outside the warehouse as a pre-processing step before loading the staging tables, and then further transformation processing is performed within the data warehouse before the final load into the target tables.</p>
</li>
<li>
<p><span class="bold">Real-time Extract, Transform, Load</span></p>
<p>Real-time Extract, Transform, Load (rETL) is appropriate when service levels for data freshness demand more up-to-date information in the data warehousing environment. In this approach, the OLTP system must actively publish events of interest so that the rETL processes can extract them from a message bus (queue) on a timely basis. A message-based paradigm is used with publish and subscribe message bus structures or point-to-point messaging with reliable queues.</p>
</li>
</ul>
<p>When designing source-ETL for Oracle Airlines Data Model, use the architecture that best meets your business needs.</p>
</div>
<!-- class="sect2" -->
<a id="BEHEIJAB"></a><a id="DMAOG232"></a>
<div class="sect2">
<h3 class="sect2">Creating a Source to Target Mapping Document for the Source-ETL</h3>
<p><a id="sthref135"></a><a id="sthref136"></a>Before you begin building your extract systems, create a logical data interface document that maps the relationship between original source fields and target destination fields in the tables. This document ties the very beginning of the ETL system to the very end.</p>
<p>Columns in the data mapping document are sometimes combined. For example, the source database, table name, and column name could be combined into a single target column. The information within the concatenated column would be delimited with a period. Regardless of the format, the content of the logical data mapping document has been proven to be the critical element required to sufficiently plan ETL processes.</p>
</div>
<!-- class="sect2" -->
<a id="BEHEIDDG"></a><a id="DMAOG233"></a>
<div class="sect2">
<h3 class="sect2">Designing a Plan for Rectifying Source-ETL Data Quality Problems</h3>
<p><a id="sthref137"></a><a id="sthref138"></a>Data cleaning consists of all the steps required to clean and validate the data feeding a table and to apply known business rules to make the data consistent. The perspectives of the cleaning and conforming steps are less about the upside potential of the data and more about containment and control.</p>
<p>If there are data quality problems, then build a plan, in agreement with IT and business users, for how to rectify these problems.</p>
<p>Answer the following questions:</p>
<ul>
<li>
<p>Is data missing?</p>
</li>
<li>
<p>Is the data wrong or inconsistent?</p>
</li>
<li>
<p>Should the problem be fixed in the source systems?</p>
</li>
<li>
<p>Set up the data quality reporting and action program and people responsibility.</p>
</li>
</ul>
<p>Then, set up the following processes and programs:</p>
<ul>
<li>
<p>Set up a data quality measurement process.</p>
</li>
<li>
<p>Set up the data quality reporting and action program and people responsibility.</p>
</li>
</ul>
</div>
<!-- class="sect2" -->
<a id="BEHJBGGI"></a><a id="DMAOG234"></a>
<div class="sect2">
<h3 class="sect2">Designing Source-ETL Workflow and Jobs Control</h3>
<p><a id="sthref139"></a><a id="sthref140"></a><a id="sthref141"></a><a id="sthref142"></a>All data movement among ETL processes are composed of jobs. An ETL workflow executes these jobs in the proper sequence and with regard to the necessary dependencies. General ETL tools, such as Oracle Warehouse Builder, support this kind of workflow, job design, and execution control.</p>
<p>Below are some tips when you design ETL jobs and workflow:</p>
<ul>
<li>
<p>Use common structure across all jobs (source system to transformer to target data warehouse).</p>
</li>
<li>
<p>Have a one-to-one mapping from source to target.</p>
</li>
<li>
<p>Define one job per Source table.</p>
</li>
<li>
<p>Apply generic job structure and template jobs to allow for rapid development and consistency.</p>
</li>
<li>
<p>Use an optimized job design to leverage Oracle load performance based on data volumes.</p>
</li>
<li>
<p>Design parameterized job to allow for greater control over job performance and behavior.</p>
</li>
<li>
<p>Maximize Jobs parallelism execution.</p>
</li>
</ul>
</div>
<!-- class="sect2" -->
<a id="BEHEDEDI"></a><a id="DMAOG235"></a>
<div class="sect2">
<h3 class="sect2">Designing Source-ETL Exception Handling</h3>
<p><a id="sthref143"></a>Your ETL tool or your developed mapping scripts generate status and error handling tables.</p>
<p>As a general principle, all ETL logs status and errors into a table. You monitor execution status using an ETL tool or by querying this log table directly.</p>
</div>
<!-- class="sect2" -->
<a id="BEHGBCAJ"></a><a id="DMAOG236"></a>
<div class="sect2">
<h3 class="sect2"><a id="sthref144"></a>Writing Source-ETL that Loads Efficiently</h3>
<p><a id="sthref145"></a>Whether you are developing mapping scripts and loading into a staging layer or directly into the foundation layer the goal is to get the data into the warehouse in the most expedient manner. In order to achieve good performance during the load you must begin by focusing on where the data to be loaded resides and how you load it into the database. For example, you should not use a serial database link or a single JDBC connection to move large volumes of data. The most common and preferred mechanism for loading large volumes of data is loading from flat files.</p>
<p>The following topics discuss best practices for ensuring your source-ETL loads efficiently:</p>
<ul>
<li>
<p><a href="#BEHGIGJI">Using a Staging Area for Flat Files</a></p>
</li>
<li>
<p><a href="#BEHGCGCC">Preparing Raw Data Files for Source-ETL</a></p>
</li>
<li>
<p><a href="#BEHDJCEF">Source-ETL Data Loading Options</a></p>
</li>
<li>
<p><a href="#BEHJEGJC">Parallel Direct Path Load Source-ETL</a></p>
</li>
<li>
<p><a href="#BEHGDBHG">Partition Exchange Load for Oracle Airlines Data Model Source-ETL</a></p>
</li>
</ul>
<a id="BEHGIGJI"></a><a id="DMAOG237"></a>
<div class="sect3">
<h4 class="sect3">Using a Staging Area for Flat Files</h4>
<p>The area where flat files are stored before being loaded into the staging layer of a data warehouse system is commonly known as staging area. The overall speed of your load is determined by:</p>
<ul>
<li>
<p>How quickly the raw data can be read from staging area.</p>
</li>
<li>
<p>How quickly the raw data can be processed and inserted into the database.</p>
</li>
</ul>
<p class="subhead2"><a id="DMAOG238"></a>Recommendations: Using a Staging Area</p>
<p>Stage the raw data across as many physical disks as possible to ensure that reading it is not a bottleneck during the load.</p>
<p>Also, if you are using the Exadata Database Machine, the best place to stage the data is in an Oracle Database File System (DBFS) stored on the Exadata storage cells. DBFS creates a mountable cluster file system which can you can use to access files stored in the database. Create the DBFS in a separate database on the Database Machine. This allows the DBFS to be managed and maintained separately from the data warehouse.</p>
<p>Mount the file system using the <code>DIRECT_IO</code> option to avoid thrashing the system page cache while moving the raw data files in and out of the file system.</p>
<div class="infoboxnotealso">
<p class="notep1">See:</p>
<a class="olink ADLOB" href="../../appdev.112/e18294/toc.htm"><span class="italic">Oracle Database SecureFiles and Large Objects Developer's Guide</span></a> for more information on setting up DBFS.</div>
</div>
<!-- class="sect3" -->
<a id="BEHGCGCC"></a><a id="DMAOG239"></a>
<div class="sect3">
<h4 class="sect3">Preparing Raw Data Files for Source-ETL</h4>
<p>In order to parallelize the data load Oracle Database must be able to logically break up the raw data files into chunks, known as granules. To ensure balanced parallel processing, the number of granules is typically much higher than the number of parallel server processes. At any given point in time, a parallel server process is allocated one granule to work on. After a parallel server process completes working on its granule, another granule is allocated until all of the granules are processed and the data is loaded.</p>
<p class="subhead2"><a id="DMAOG240"></a>Recommendations: Preparing Raw Data Files for Source-ETL</p>
<p>Follow these recommendations:</p>
<ul>
<li>
<p>Deliminate each row using a known character such as a new line or a semicolon. This ensures that Oracle can look inside the raw data file and determine where each row of data begins and ends in order to create multiple granules within a single file.</p>
</li>
<li>
<p>If a file is not position-able and seek-able (for example the file is compressed or zip file), then the files cannot be broken up into granules and the whole file is treated as a single granule. In this case, only one parallel server process can work on the entire file. In order to parallelize the loading of compressed data files, use multiple compressed data files. The number of compressed data files used determines the maximum parallel degree used by the load.</p>
</li>
<li>
<p>When loading multiple data files (compressed or uncompressed):</p>
<ul>
<li>
<p>Use a single external table, if at all possible</p>
</li>
<li>
<p>Make the files similar in size</p>
</li>
<li>
<p>Make the size of the files a multiple of 10 MB</p>
</li>
</ul>
</li>
<li>
<p>If you must have files of different sizes, list the files from largest to smallest. By default, Oracle assumes that the flat file has the same character set as the database. If this is not the case, specify the character set of the flat file in the external table definition to ensure the proper character set conversions can take place.</p>
</li>
</ul>
</div>
<!-- class="sect3" -->
<a id="BEHDJCEF"></a><a id="DMAOG241"></a>
<div class="sect3">
<h4 class="sect3">Source-ETL Data Loading Options</h4>
<p>Oracle offers several data loading options</p>
<ul>
<li>
<p>External table or SQL*Loader</p>
</li>
<li>
<p>Oracle Data Pump (import and export)</p>
</li>
<li>
<p>Change Data Capture and Trickle feed mechanisms (such as Oracle Golden Gate)</p>
</li>
<li>
<p>Oracle Database Gateways to open systems and mainframes</p>
</li>
<li>
<p>Generic Connectivity (ODBC and JDBC)</p>
</li>
</ul>
<p>The approach that you take depends on the source and format of the data you receive.</p>
<p class="subhead2"><a id="DMAOG242"></a>Recommendations: Loading Flat Files</p>
<p>If you are loading from files into Oracle you have two options: SQL*Loader or external tables.</p>
<p>Using external tables offers the following advantages:</p>
<ul>
<li>
<p>Allows transparent parallelization inside the database.You can avoid staging data and apply transformations directly on the file data using arbitrary SQL or PL/SQL constructs when accessing external tables. SQL Loader requires you to load the data as-is into the database first.</p>
</li>
<li>
<p>Parallelizing loads with external tables enables a more efficient space management compared to SQL*Loader, where each individual parallel loader is an independent database sessions with its own transaction. For highly partitioned tables this could potentially lead to a lot of wasted space.</p>
</li>
</ul>
<p>You can create an external table using the standard <code>CREATE TABLE</code> statement. However, to load from flat files the statement must include information about where the flat files reside outside the database. The most common approach when loading data from an external table is to issue a <code>CREATE TABLE AS SELECT (CTAS)</code> statement or an <code>INSERT AS SELECT (IAS)</code> statement into an existing table.</p>
</div>
<!-- class="sect3" -->
<a id="BEHJEGJC"></a><a id="DMAOG243"></a>
<div class="sect3">
<h4 class="sect3">Parallel Direct Path Load Source-ETL</h4>
<p><a id="sthref146"></a>A direct path load parses the input data according to the description given in the external table definition, converts the data for each input field to its corresponding Oracle data type, then builds a column array structure for the data. These column array structures are used to format Oracle data blocks and build index keys. The newly formatted database blocks are then written directly to the database, bypassing the standard SQL processing engine and the database buffer cache.</p>
<p>The key to good load performance is to use direct path loads wherever possible:</p>
<ul>
<li>
<p>A <code>CREATE TABLE AS SELECT (CTAS)</code> statement always uses direct path load.</p>
</li>
<li>
<p>A simple <code>INSERT AS SELECT (IAS)</code> statement does <span class="italic">not</span> use direct path load. In order to achieve direct path load with an IAS statement you must add the <code>APPEND</code> hint to the command.</p>
</li>
</ul>
<p>Direct path loads can also run in parallel. To set the parallel degree for a direct path load, either:</p>
<ul>
<li>
<p>Add the <code>PARALLEL</code> hint to the CTAS statement or an IAS statement.</p>
</li>
<li>
<p>Set the <code>PARALLEL</code> clause on both the external table and the table into which the data is loaded.</p>
<p>After the parallel degree is set:</p>
<ul>
<li>
<p>A <code>CTAS</code> statement automatically performs a direct path load in parallel.</p>
</li>
<li>
<p>An <code>IAS</code> statement does not automatically perform a direct path load in parallel. In order to enable an <code>IAS</code> statement to perform direct path load in parallel, you must alter the session to enable parallel DML by executing the following statement.</p>
<pre>
alter session enable parallel DML;
</pre></li>
</ul>
</li>
</ul>
</div>
<!-- class="sect3" -->
<a id="BEHGDBHG"></a><a id="DMAOG244"></a>
<div class="sect3">
<h4 class="sect3">Partition Exchange Load for Oracle Airlines Data Model Source-ETL</h4>
<p><a id="sthref147"></a><a id="sthref148"></a><a id="sthref149"></a>A benefit of partitioning is the ability to load data quickly and easily with minimal impact on the business users by using the <code>EXCHANGE PARTITION</code> command. The <code>EXCHANGE PARTITION</code> command enables swapping the data in a nonpartitioned table into a particular partition in your partitioned table. The <code>EXCHANGE PARTITION</code> command does not physically move data, instead it updates the data dictionary to exchange a pointer from the partition to the table and vice versa.</p>
<p>Because there is no physical movement of data, an exchange does not generate redo and undo. In other words, an exchange is a sub-second operation and far less likely to impact performance than any traditional data-movement approaches such as <code>INSERT</code>.</p>
<p class="subhead2"><a id="DMAOG245"></a>Recommendations: Partitioning Tables</p>
<p>Partition the larger tables and fact tables in the Oracle Airlines Data Model warehouse.</p>
<div class="example">
<p class="titleinexample"><a id="DMAOG246"></a><a id="sthref150"></a>Example 4-1 Using Exchange Partition Statement with a Partitioned Table</p>
<p>Assume that there is a large table called <code>DWB_PNR_H</code>, which is range partitioned by day. At the end of each business day, data from the online airlines system is loaded into the <code>DWB_PNR_H</code> table in the warehouse.</p>
<p>The following steps ensure the daily data gets loaded into the correct partition with minimal impact to the business users of the data warehouse and optimal speed:</p>
<ol>
<li>
<p>Create external table for the flat file data coming from the online system</p>
</li>
<li>
<p>Using a <code>CTAS</code> statement, create a nonpartitioned table called <code>tmp_pnr</code> that has the same column structure as <code>DWB_PNR_H</code> table</p>
</li>
<li>
<p>Build any indexes that are on the <code>DWB_PNR_H</code> table on the <code>tmp_pnr</code> table</p>
</li>
<li>
<p>Issue the <code>EXCHANGE PARTITION</code> command.</p>
<pre>
Alter table dwb_pnr_h exchange partition SYS_P1926 with    table tmp_pnr including indexes without validation;
</pre></li>
<li>
<p>Gather optimizer statistics on the newly exchanged partition using incremental statistics.</p>
</li>
</ol>
<p>The <code>EXCHANGE PARTITION</code> command in this example, swaps the definitions of the named partition and the <code>tmp_pnr</code> table, so the data instantaneously exists in the right place in the partitioned table. Moreover, with the inclusion of the <code>INCLUDING INDEXES</code> and <code>WITHOUT VALIDATION</code> clauses, Oracle swaps index definitions and does not check whether the data actually belongs in the partition - so the exchange is very quick.</p>
</div>
<!-- class="example" -->
<div class="infobox-note">
<p class="notep1">Note:</p>
The assumption being made in this example is that the data integrity was verified at date extraction time. If you are unsure about the data integrity, omit the <code>WITHOUT VALIDATION</code> clause so that the Database checks the validity of the data.</div>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="BEHHEIEE"></a><a id="DMAOG247"></a>
<div class="sect1">
<h2 class="sect1">Customizing Intra-ETL for the Oracle Airlines Data Model</h2>
<p><a id="sthref151"></a>Intra-ETL is delivered as a component of Oracle Airlines Data Model. This intra-ETL is delivered as a PL/SQL package named <code>PKG_INTRA_ETL_PROCESS</code> which is a complete intra-ETL process that has procedures that populate the access layer.</p>
<p>The <code>PKG_INTRA_ETL_PROCESS</code> package is composed of individual sub-process procedures and functions that respect the dependency of each individual program. The main procedures execute in the following order:</p>
<ol>
<li>
<p><code>Populate_Dimension</code> - Populates the dimension (<code>DWM_</code>) tables based on the content of the reference (<code>DWR_</code>) tables.</p>
</li>
<li>
<p><code>Populate_Derived</code> - Populates the derived (<code>DWD_</code>) tables based on the content of the base (<code>DWB_</code>) tables.</p>
</li>
<li>
<p><code>Populate_Aggregate</code> - Refreshes all of the aggregate (<code>DWA_</code>) tables using data from the dimension (<code>DWM_</code>) and derived &nbsp;(<code>DWD_</code>) tables.</p>
</li>
<li>
<p><code>Populate_Aw</code> - Loads data from Oracle Airlines Data Model aggregate (<code>DWA_</code>) tables into the Oracle Airlines Data Model Analytical Workspace and calculates the forecast data. It reads OLAP ETL parameters from <code>DWC_OLAP_ETL_PARM</code> table.</p>
</li>
<li>
<p><code>Populate_MINING</code> - Triggers the data mining models.</p>
</li>
</ol>
<p>The <code>PKG_INTRA_ETL_PROCESS</code> package is designed to work with the default Oracle Airlines Data Model. If you have customized the model, you also need to customize the intra-ETL. To customize the intra-ETL delivered with Oracle Airlines Data Model, take the following steps:</p>
<ol>
<li>
<p>Familiarize yourself with the <code>PKG_INTRA_ETL_PROCESS</code> package. In particular, understand the procedures, data flows, and maps as described in <a class="olink DMARF" href="../e26208/toc.htm"><span class="italic">Oracle Airlines Data Model Reference</span></a>, and how the procedures use the <code>DWC_ETL_PARAMETER</code> and <code>DWC_OLAP_ETL_PARM</code> control tables, and the <code>DWC_INTRA_ETL_PROCESS</code> and <code>DWC_INTRA_ETL_ACTIVITY</code> control tables. Review the following topics: <a href="#BEHBGBGC">"Performing an Initial Load of the Access Layer"</a>, <a href="#BEHCIBGI">"Refreshing the Access Layer of an Oracle Airlines Data Model Warehouse"</a>, and <a href="#BEHGGCGC">"Managing Errors During Oracle Airlines Data Model Intra-ETL Execution"</a>.</p>
</li>
<li>
<p>Identify the changes that you have made to the Oracle Airlines Data Model and what changes need to be made to the intra-ETL needs to support those model changes.</p>
</li>
<li>
<p>Make a copy of the packages that you need to change. Give the copies a different name.</p>
</li>
<li>
<p>Make the changes you identified in Step 2 to the packages you created in Step 3.</p>
</li>
</ol>
<p>Optionally, you can create new intra-ETL from scratch - either by writing your own PL/SQL code or by using an ETL tool such as Oracle Warehouse Builder.</p>
</div>
<!-- class="sect1" -->
<a id="BEHCBGGJ"></a><a id="DMAOG355"></a>
<div class="sect1">
<h2 class="sect1">Performing an Initial Load of an Oracle Airlines Data Model Warehouse</h2>
<p><a id="sthref152"></a><a id="sthref153"></a>Performing an initial load of an Oracle Airlines Data Model is a multistep process:</p>
<ol>
<li>
<p>Load the foundation layer of the Oracle Airlines Data Model warehouse (that is, the reference, lookup, and base tables) as described in <a href="#BEHHDHDC">"Performing an Initial Load of the Foundation Layer"</a>.</p>
</li>
<li>
<p>Load the access layer of the Oracle Airlines Data Model warehouse (that is, the derived and aggregate tables, the tables that dimension the derived and aggregate tables, materialized views, OLAP cubes, and data mining models) as described in <a href="#BEHBGBGC">"Performing an Initial Load of the Access Layer"</a>.</p>
</li>
</ol>
<a id="BEHHDHDC"></a><a id="DMAOG356"></a>
<div class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Performing an Initial Load of the Foundation Layer</h3>
<p>You perform the initial load of the foundation layer using source-ETL that you create. See <a href="#BEHFIHBE">"ETL for the Foundation Layer of an Oracle Airlines Data Model Warehouse"</a> for more information on creating this ETL.</p>
</div>
<!-- class="sect2" -->
<a id="BEHBGBGC"></a><a id="DMAOG249"></a>
<div class="sect2">
<h3 class="sect2">Performing an Initial Load of the Access Layer</h3>
<p><a id="sthref154"></a><a id="sthref155"></a>To perform an initial load of access layer of the Oracle Airlines Data Model warehouse (that is, the derived and aggregate tables, materialized views, OLAP cubes, and data mining models) take the following steps:</p>
<ol>
<li>
<p>Update the parameters in <code>DWC_ETL_PARAMETER</code> control table in the <code>oadm_sys</code> schema so that the ETL can use this information (that is, the beginning and end date of the ETL period) when loading the data into the access layer.</p>
<p>For an initial load of an Oracle Airlines Data Model warehouse, specify the values shown in the following table.</p>
<div class="inftblinformal">
<table class="cellalignment2042" summary="Parameter values for DWC_ETL_PARAMETER table" dir="ltr">
<thead>
<tr class="cellalignment2036">
<th class="cellalignment2043" id="r1c1-t5">Columns</th>
<th class="cellalignment2043" id="r1c2-t5">Value</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2036">
<td class="cellalignment2044" id="r2c1-t5" headers="r1c1-t5"><code>PROCESS_NAME</code></td>
<td class="cellalignment2044" headers="r2c1-t5 r1c2-t5"><code>'OADM-INTRA-ETL'</code></td>
</tr>
<tr class="cellalignment2036">
<td class="cellalignment2044" id="r3c1-t5" headers="r1c1-t5"><code>FROM_DATE_ETL</code></td>
<td class="cellalignment2044" headers="r3c1-t5 r1c2-t5">The beginning date of the ETL period.</td>
</tr>
<tr class="cellalignment2036">
<td class="cellalignment2044" id="r4c1-t5" headers="r1c1-t5"><code>TO_DATE_ETL</code></td>
<td class="cellalignment2044" headers="r4c1-t5 r1c2-t5">The ending date of the ETL period.</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" -->
<div class="infoboxnotealso">
<p class="notep1">See:</p>
<a class="olink DMARF" href="../e26208/toc.htm"><span class="italic">Oracle Airlines Data Model Reference</span></a> for more information on the <code>DWC_ETL_PARAMETER</code> control table.</div>
</li>
<li>
<p>Update the Oracle Airlines Data Model OLAP ETL parameters in <code>DWC_OLAP_ETL_PARM</code> control table in the <code>oadm_sys</code> schema to specify the build method and other build characteristics so that the ETL can use this information when loading the OLAP cube data.</p>
<p>For an initial load of the analytic workspace, specify values following the guidelines in <a href="#BEHIHFJC">Table 4-1</a>.</p>
<div class="tblformal">
<p class="titleintable"><a id="DMAOG250"></a><a id="sthref156"></a><a id="BEHIHFJC"></a>Table 4-1 Values of Oracle Airlines Data Model OLAP ETL Parameters in the DWC_OLAP_ETL_PARM Table for Initial Load</p>
<table class="cellalignment2047" title="Values of Oracle Airlines Data Model OLAP ETL Parameters in the DWC_OLAP_ETL_PARM Table for Initial Load" summary="OCDM OLAP ETL parameters in DWC_OLAP_ETL_PARAMETER table" dir="ltr">
<thead>
<tr class="cellalignment2036">
<th class="cellalignment2043" id="r1c1-t7">Column Name</th>
<th class="cellalignment2043" id="r1c2-t7">Value</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2036">
<td class="cellalignment2044" id="r2c1-t7" headers="r1c1-t7">
<p><code>PROCESS_NAME</code></p>
</td>
<td class="cellalignment2044" headers="r2c1-t7 r1c2-t7">
<p><code>'OADM-INTRA-ETL'</code></p>
</td>
</tr>
<tr class="cellalignment2036">
<td class="cellalignment2044" id="r3c1-t7" headers="r1c1-t7">
<p><code>BUILD_METHOD</code></p>
</td>
<td class="cellalignment2044" headers="r3c1-t7 r1c2-t7">
<p><code>C</code> which specifies a complete refresh which clears all dimension values before loading.</p>
</td>
</tr>
<tr class="cellalignment2036">
<td class="cellalignment2044" id="r4c1-t7" headers="r1c1-t7">
<p><code>CUBENAME</code></p>
</td>
<td class="cellalignment2044" headers="r4c1-t7 r1c2-t7">
<p>One of the following values that specifies the cubes you want to build:</p>
<ul>
<li>
<p><code>ALL</code> specifies a build of the cubes in the Oracle Airlines Data Model analytic workspace.</p>
</li>
<li>
<p><code><span class="codeinlineitalic">cubename</span></code>[[<code>|</code><code><span class="codeinlineitalic">cubename</span></code>]...] specifies one or more cubes to build.</p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment2036">
<td class="cellalignment2044" id="r5c1-t7" headers="r1c1-t7">
<p><code>MAXJOBQUEUES</code></p>
</td>
<td class="cellalignment2044" headers="r5c1-t7 r1c2-t7">
<p>A decimal value that specifies the number of parallel processes to allocate to this job. (Default value is <code>4</code>.) The value that you specify varies depending on the setting of the <code>JOB_QUEUE_PROCESSES</code> database initialization parameter.</p>
</td>
</tr>
<tr class="cellalignment2036">
<td class="cellalignment2044" id="r6c1-t7" headers="r1c1-t7">
<p><code>CALC_FCST</code></p>
</td>
<td class="cellalignment2044" headers="r6c1-t7 r1c2-t7">
<p>One of the following values depending on whether you want to calculate forecast cubes:</p>
<ul>
<li>
<p><code>Y</code> specifies calculate forecast cubes.</p>
</li>
<li>
<p><code>N</code> specifies do not calculate forecast cubes.</p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment2036">
<td class="cellalignment2044" id="r7c1-t7" headers="r1c1-t7">
<p><code>NO_FCST_YRS</code></p>
</td>
<td class="cellalignment2044" headers="r7c1-t7 r1c2-t7">
<p>If the value for the <code>CALC_FCST</code> column is <code>Y</code>, specify a decimal value that specifies how many years forecast data you want to calculate; otherwise, specify <code>NULL</code>.</p>
</td>
</tr>
<tr class="cellalignment2036">
<td class="cellalignment2044" id="r8c1-t7" headers="r1c1-t7">
<p><code>FCST_MTHD</code></p>
</td>
<td class="cellalignment2044" headers="r8c1-t7 r1c2-t7">
<p>If the value for the <code>CALC_FCST</code> column is <code>Y</code>, then specify <code>AUTO</code>; otherwise, specify <code>NULL</code>.</p>
</td>
</tr>
<tr class="cellalignment2036">
<td class="cellalignment2044" id="r9c1-t7" headers="r1c1-t7">
<p><code>FCST_ST_YR</code></p>
</td>
<td class="cellalignment2044" headers="r9c1-t7 r1c2-t7">
<p>If the value for the <code>CALC_FCST</code> column is <code>Y</code>, then specify value specified as <code><span class="codeinlineitalic">yyyy</span></code> which is the "start business year" of a historical period; otherwise, specify <code>NULL</code>.</p>
</td>
</tr>
<tr class="cellalignment2036">
<td class="cellalignment2044" id="r10c1-t7" headers="r1c1-t7">
<p><code>FCST_END_YR</code></p>
</td>
<td class="cellalignment2044" headers="r10c1-t7 r1c2-t7">
<p>If the value for the <code>CALC_FCST</code> column is <code>Y</code>, then specify value specified as <code><span class="codeinlineitalic">yyyy</span></code> which is the "end business year" of a historical period; otherwise, specify <code>NULL</code>.</p>
</td>
</tr>
<tr class="cellalignment2036">
<td class="cellalignment2044" id="r11c1-t7" headers="r1c1-t7">
<p><code>OTHER1</code></p>
</td>
<td class="cellalignment2044" headers="r11c1-t7 r1c2-t7">
<p>Specify <code>NULL</code>.</p>
</td>
</tr>
<tr class="cellalignment2036">
<td class="cellalignment2044" id="r12c1-t7" headers="r1c1-t7">
<p><code>OTHER2</code></p>
</td>
<td class="cellalignment2044" headers="r12c1-t7 r1c2-t7">
<p>Specify <code>NULL</code>.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></li>
<li>
<p>Execute the intra-ETL in one of the ways described in <a href="#BEHFIJIC">"Executing the Default Oracle Airlines Data Model Intra-ETL "</a>.</p>
</li>
</ol>
<div class="infoboxnotealso">
<p class="notep1">See also:</p>
<a href="#BEHIEGJH">"Refreshing the Data in an Oracle Airlines Data Model Warehouse"</a></div>
<a id="BEHFIJIC"></a><a id="DMAOG251"></a>
<div class="sect3">
<h4 class="sect3">Executing the Default Oracle Airlines Data Model Intra-ETL</h4>
<p>You execute the <code>PKG_INTRA_ETL_PROCESS</code> process flow from an Oracle client tool (for example, ex: SQL Plus) by issuing the following statement.</p>
<pre>
EXEC PKG_INTRA_ETL_PROCESS.RUN( )
</pre>
<p>The PL/SQL code executed by <code>PKG_INTRA_ETL_PROCESS</code>:</p>
<ul>
<li>
<p>Reads the values from the <code>DWC_ETL_PARAMETER</code> and <code>DWC_OLAP_ETL_PARM</code> control tables in the <code>oadm_sys</code> schema before executing the mappings in the correct order.</p>
</li>
<li>
<p>The result of each table loading are tracked in the <code>DWC_INTRA_ETL_PROCESS</code> and <code>DWC_INTRA_ETL_ACTIVITY</code> control tables.</p>
</li>
</ul>
<p>Executing the <code>PKG_INTRA_ETL_PROCESS</code> from within an Oracle client provides the ability to monitor the execution of the process. However, you can simply execute the <code>RUN</code> procedure within the <code>PKG_INTRA_ETL_PROCESS</code> PL/SQL package.</p>
<p>In either case, you can execute the intra-ETL explicitly or invoke its execution in some other program or process (for example, the source-ETL process after its successful execution) or through a predefined schedule (for example, using Oracle Job Scheduling feature and so on).</p>
<div class="infoboxnotealso">
<p class="notep1">See:</p>
<a href="#BEHDFIBB">"Monitoring the Execution of the Intra-ETL Process"</a>, <a href="#BEHJIAJC">"Recovering an Intra ETL Process"</a>, and <a href="#BEHGFFIB">"Troubleshooting Intra-ETL Performance"</a>.</div>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="BEHIEGJH"></a><a id="DMAOG357"></a>
<div class="sect1">
<h2 class="sect1">Refreshing the Data in an Oracle Airlines Data Model Warehouse</h2>
<p><a id="sthref157"></a><a id="sthref158"></a><a href="#BEHBGBGC">"Performing an Initial Load of the Access Layer"</a> describes how to perform an initial load of an Oracle Airlines Data Model data warehouse. After this initial load, you must load new data into your Oracle Airlines Data Model data warehouse regularly so that it can serve its purpose of facilitating business analysis.</p>
<p>To load new data into your Oracle Airlines Data Model warehouse, you extract the data from one or more operational systems and copy that data into the warehouse. The challenge in data warehouse environments is to integrate, rearrange and consolidate large volumes of data over many systems, thereby providing a new unified information base for business intelligence.</p>
<p>The successive loads and transformations must be scheduled and processed in a specific order and are determined by your business needs. Depending on the success or failure of the operation or parts of it, the result must be tracked and subsequent, alternative processes might be started.</p>
<p>You can do a full incremental load of the Oracle Airlines Data Model warehouse, or you can refresh the data sequentially.:</p>
<ol>
<li>
<p><a href="#BEHGAFIC">Refreshing the Foundation Layer of Oracle Airlines Data Model Warehouse</a></p>
</li>
<li>
<p><a href="#BEHCIBGI">Refreshing the Access Layer of an Oracle Airlines Data Model Warehouse</a></p>
</li>
</ol>
<p>In either case, you can manage errors during the execution of the intra-ETL as described in <a href="#BEHGGCGC">"Managing Errors During Oracle Airlines Data Model Intra-ETL Execution"</a>.</p>
<a id="BEHGAFIC"></a><a id="DMAOG358"></a>
<div class="sect2">
<h3 class="sect2">Refreshing the Foundation Layer of Oracle Airlines Data Model Warehouse</h3>
<p>You refresh the foundation layer using source-ETL scripts that you wrote using Oracle Warehouse Builder or another ETL tool. For more information on creating source-ETL, see <a href="#BEHFIHBE">"ETL for the Foundation Layer of an Oracle Airlines Data Model Warehouse"</a>.</p>
</div>
<!-- class="sect2" -->
<a id="BEHCIBGI"></a><a id="DMAOG359"></a>
<div class="sect2">
<h3 class="sect2">Refreshing the Access Layer of an Oracle Airlines Data Model Warehouse</h3>
<p>Refreshing the access layer of an Oracle Airlines Data Model is a multi-step process. You can do a full incremental load of the access layer all at one time by executing the <code>PKG_INTRA_ETL_PROCESS</code> package as described in<a href="#BEHFIJIC">"Executing the Default Oracle Airlines Data Model Intra-ETL "</a>, or you can refresh the data sequentially:</p>
<ol>
<li>
<p><a href="#BEHFEEGG">Refreshing the Access Layer Relational Tables in the Oracle Airlines Data Model</a></p>
</li>
<li>
<p><a href="#BEHFGDFA">Refreshing Oracle Airlines Data Model OLAP Cubes</a></p>
</li>
<li>
<p><a href="#BEHEBIDC">Refreshing Oracle Airlines Data Model Data Mining Models</a></p>
</li>
</ol>
<p>In either case, you can manage errors during the execution of the intra-ETL as described in <a href="#BEHGGCGC">"Managing Errors During Oracle Airlines Data Model Intra-ETL Execution"</a>.</p>
<a id="BEHFEEGG"></a><a id="DMAOG360"></a>
<div class="sect3">
<h4 class="sect3">Refreshing the Access Layer Relational Tables in the Oracle Airlines Data Model</h4>
<p>After you have refreshed the foundation layer of the Oracle Airlines Data Model. You can refresh only the relational tables and views in the access layer of an Oracle Airlines Data Model by taking the following steps:</p>
<ol>
<li>
<p>Update the parameters of the <code>DWC_ETL_PARAMETER</code> control table in the <code>oadm_sys</code> schema. For an incremental load of an Oracle Airlines Data Model warehouse, specify the values shown in the following table (that is, the beginning and end date of the ETL period).</p>
<div class="inftblinformal">
<table class="cellalignment2042" summary="Parameter values for DWC_ETL_PARAMETER table" dir="ltr">
<thead>
<tr class="cellalignment2036">
<th class="cellalignment2043" id="r1c1-t10">Columns</th>
<th class="cellalignment2043" id="r1c2-t10">Value</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2036">
<td class="cellalignment2044" id="r2c1-t10" headers="r1c1-t10"><code>PROCESS_NAME</code></td>
<td class="cellalignment2044" headers="r2c1-t10 r1c2-t10"><code>'OADM-INTRA-ETL'</code></td>
</tr>
<tr class="cellalignment2036">
<td class="cellalignment2044" id="r3c1-t10" headers="r1c1-t10"><code>FROM_DATE_ETL</code></td>
<td class="cellalignment2044" headers="r3c1-t10 r1c2-t10">The beginning date of the ETL period.</td>
</tr>
<tr class="cellalignment2036">
<td class="cellalignment2044" id="r4c1-t10" headers="r1c1-t10"><code>TO_DATE_ETL</code></td>
<td class="cellalignment2044" headers="r4c1-t10 r1c2-t10">The ending date of the ETL period.</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" -->
<div class="infoboxnotealso">
<p class="notep1">See:</p>
<a class="olink DMARF" href="../e26208/toc.htm"><span class="italic">Oracle Airlines Data Model Reference</span></a> for more information on the <code>DWC_ETL_PARAMETER</code> control table.</div>
</li>
<li>
<p>Refresh the tables by executing the following procedures in the <code>PKG_INTRA_ETL_PROCESS</code> PL/SQL package as described in <a href="#BEHFIJIC">"Executing the Default Oracle Airlines Data Model Intra-ETL "</a>. Execute the procedures in the following order:</p>
<ol>
<li>
<p><code>Populate_Dimension</code></p>
</li>
<li>
<p><code>Populate_Derived</code></p>
</li>
<li>
<p><code>Populate_Aggregate</code></p>
</li>
</ol>
</li>
</ol>
</div>
<!-- class="sect3" -->
<a id="BEHFGDFA"></a><a id="DMAOG361"></a>
<div class="sect3">
<h4 class="sect3">Refreshing Oracle Airlines Data Model OLAP Cubes</h4>
<p>On a scheduled basis you must update the OLAP cube data with the relational data that has been added to the Oracle Airlines Data Model data warehouse since the initial load of the OLAP cubes.</p>
<p>Take these steps to refresh <span class="italic">only</span> the OLAP cube data in the Oracle Airlines Data Model warehouse:</p>
<ol>
<li>
<p>Ensure that the underlying aggregate tables are refreshed. See <a href="#BEHFEEGG">"Refreshing the Access Layer Relational Tables in the Oracle Airlines Data Model"</a> for more information.</p>
</li>
<li>
<p>Execute the <code>PKG_INTRA_ETL_PROCESS.Populate_Aw</code> procedure to load the cube data.</p>
</li>
<li>
<p>If necessary, recover from errors that happen during the execution of <code>Populate_Aw</code> by taking the following steps.</p>
<ol>
<li>
<p>Change the value of the <code>BUILD_METHOD</code> column of the <code>DWC_OLAP_ETL_PARM</code> table to <code>"C"</code>.</p>
</li>
<li>
<p>Re-execute <code>PKG_INTRA_ETL_PROCESS.Populate_Aw</code>.</p>
</li>
</ol>
</li>
</ol>
</div>
<!-- class="sect3" -->
<a id="BEHEBIDC"></a><a id="DMAOG362"></a>
<div class="sect3">
<h4 class="sect3">Refreshing Oracle Airlines Data Model Data Mining Models</h4>
<p>The <code>PKG_INTRA_ETL_PROCESS.Populate_Mining</code> procedure triggers the data mining model refreshment as part of the initial load of the warehouse. After the initial load of the warehouse, it is recommended that you refresh the data mining models monthly.</p>
<p>After you have refreshed the OLAP cubes, you can also refresh the data mining models. In this case, the way you refresh a data mining model varies depending on whether you want to refresh all of the data mining models or only one data mining model:</p>
<ul>
<li>
<p>To manually refresh <span class="italic">all</span> data mining models, call the following procedure.</p>
<p><code>oadm_sys.pkg_oadm_mining.refresh_model(p_month_code,p_process_no)</code></p>
<p>This procedure performs the following tasks for each data mining model:</p>
<ol>
<li>
<p>Refreshes the source materialized views for the data mining model based on the latest data from <code>oadm_sys</code> schema.</p>
</li>
<li>
<p>Trains each data mining model on the new training data.</p>
</li>
<li>
<p>Applies each data mining model onto the new apply data set.</p>
</li>
</ol>
</li>
<li>
<p>To manually re-create only <span class="italic">one</span> data mining model, you can call the corresponding <code>oadm_sys.pkg_oadm_mining.create_</code> procedure.</p>
<p>For example, to re-create the Customer Life Time Value regression data mining model, call the following procedure.</p>
<p><code>oadm_sys.pkg_oadm_mining.create_cust_ltv_svm_rgrsn(p_month_cd);</code></p>
<p><a href="adm.htm#CHDIGEEI">"Tutorial: Customizing the Customer Life Time Value Prediction Data Mining Model"</a> provides detailed instructions for refreshing a single data mining model.</p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See also:</p>
<a href="#BEHJAHDE">"Troubleshooting Data Mining Model Creation"</a></div>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="BEHGGCGC"></a><a id="DMAOG363"></a>
<div class="sect1">
<h2 class="sect1">Managing Errors During Oracle Airlines Data Model Intra-ETL Execution</h2>
<p><a id="sthref159"></a><a id="sthref160"></a>This topic discusses how you can identify and manage errors during intra-ETL execution. It contains the following topics:</p>
<ul>
<li>
<p><a href="#BEHDFIBB">Monitoring the Execution of the Intra-ETL Process</a></p>
</li>
<li>
<p><a href="#BEHJIAJC">Recovering an Intra ETL Process</a></p>
</li>
<li>
<p><a href="#BEHGFFIB">Troubleshooting Intra-ETL Performance</a></p>
</li>
</ul>
<a id="BEHDFIBB"></a><a id="DMAOG364"></a>
<div class="sect2">
<h3 class="sect2">Monitoring the Execution of the Intra-ETL Process</h3>
<p><a id="sthref161"></a>Two <code>oadm_sys</code> schema control tables, <code>DWC_INTRA_ETL_PROCESS</code> and <code>DWC_INTRA_ETL_ACTIVITY</code>, monitor the execution of the intra-ETL process. These tables are documented in <a class="olink DMARF" href="../e26208/toc.htm"><span class="italic">Oracle Airlines Data Model Reference</span></a>.</p>
<p>Each normal run of the <code>PKG_INTRA_ETL_PROCESS</code> package (as opposed to an error-recovery run) performs the following steps:</p>
<ol>
<li>
<p>Inserts a record into the <code>DWC_INTRA_ETL_PROCESS</code> table with a monotonically increasing system generated unique process key, <code>SYSDATE</code> as process start time, <code>RUNNING</code> as the process status, input date range in the fields <code>FROM_DATE_ETL</code> and <code>TO_DATE_ETL</code>.</p>
</li>
<li>
<p>Invokes each of the individual <code>PKG_INTRA_ETL_PROCESS</code> procedures in the appropriate order of dependency. Before the invocation of each program, the procedure inserts a record into the Intra-ETL Activity detail table <code>DWC_INTRA_ETL_ACTIVITY</code> with a system generated unique activity key, the process key value corresponding to the Intra-ETL process, individual program name as the <code>Activity Name</code>, a suitable activity description, <code>SYSDATE</code> as activity start time, <code>RUNNING</code> as the activity status.</p>
</li>
<li>
<p>Updates the corresponding record in the <code>DWC_INTRA_ETL_ACTIVITY</code> table for the activity end time and activity status after the completion of each individual ETL program (either successfully or with errors. For successful completion of the activity, the procedure updates the status as <code>'COMPLETED-SUCCESS'</code>. If an error occurs, the procedure updates the activity status as <code>'COMPLETED-ERROR'</code>, and also updates the corresponding error detail in the <code>ERROR_DTL</code> column.</p>
</li>
<li>
<p>Updates the record corresponding to the process in the <code>DWC_INTRA_ETL PROCESS</code> table for the process end time and status, after the completion of all individual intra-ETL programs. If all the individual programs succeed, the procedure updates the status to <code>'COMPLETED-SUCCESS'</code>, otherwise it updates the status to <code>'COMPLETED-ERROR'</code>.</p>
</li>
</ol>
<p>You can monitor the execution state of the intra-ETL, including current process progress, time taken by individual programs, or the complete process, by viewing the contents of the <code>DWC_INTRA_ETL_PROCESS</code> and <code>DWC_INTRA_ETL_ACTIVITY</code> tables corresponding to the maximum process key. Monitoring can be done both during and after the execution of the intra-ETL procedure.</p>
</div>
<!-- class="sect2" -->
<a id="BEHJIAJC"></a><a id="DMAOG365"></a>
<div class="sect2">
<h3 class="sect2">Recovering an Intra ETL Process</h3>
<p><a id="sthref162"></a>To recover run of the <code>PKG_INTRA_ETL_PROCESS</code> package:</p>
<ol>
<li>
<p>Identify the errors by looking at the corresponding error details that are tracked against the individual programs in the <code>DWC_INTRA_ETL_ACTIVITY</code> table.</p>
</li>
<li>
<p>Correct the causes of the errors.</p>
</li>
<li>
<p>Re-execute the <code>PKG_INTRA_ETL_PROCESS</code> package.</p>
</li>
</ol>
<p>The procedures in the <code>PKG_INTRA_ETL_PROCESS</code> package identify whether it is a normal run or recovery run by referring the <code>DWC_INTRA_ETL_ACTIVITY</code> table. During a recovery run, <code>PKG_INTRA_ETL_PROCESS</code> executes only the procedures needed for recovery. For example, in the case of a derived population error as a part of the previous run, this recovery run executes the individual derived population programs which produced errors in the previous run. After their successful completion, the run executes the aggregate population programs and materialized view refresh in the appropriate order.</p>
<p>In this way, the intra-ETL error recovery is almost transparent, without involving the data warehouse or ETL administrator. The administrator must only correct the causes of the errors and re-invoke the <code>PKG_INTRA_ETL_PROCESS</code> package. <code>PKG_INTRA_ETL_PROCESS</code> identifies and executes the programs that generated errors.</p>
</div>
<!-- class="sect2" -->
<a id="BEHGFFIB"></a><a id="DMAOG366"></a>
<div class="sect2">
<h3 class="sect2">Troubleshooting Intra-ETL Performance</h3>
<p><a id="sthref163"></a>To troubleshoot the performance of the intra-ETL:</p>
<ul>
<li>
<p>Check the execution plan as described in <a href="#BEHEEHIC">"Checking the Execution Plan"</a>.</p>
</li>
<li>
<p>Monitor parallel DML executions as described in <a href="#BEHFCFCJ">"Monitoring PARALLEL DML Executions"</a>.</p>
</li>
<li>
<p>Check that data mining models were created correctly as described in <a href="#BEHJAHDE">"Troubleshooting Data Mining Model Creation"</a>.</p>
</li>
</ul>
<a id="BEHEEHIC"></a><a id="DMAOG367"></a>
<div class="sect3">
<h4 class="sect3">Checking the Execution Plan</h4>
<p>Use SQLDeveloper or other tools to view the package body of the code generated by Oracle Warehouse Builder.</p>
<p>For example, take the following steps to examine a map:</p>
<ol>
<li>
<p>Copy out the main query statement from code viewer.</p>
<p>Copy from <code>"CURSOR "AGGREGATOR_c" IS &hellip;."</code> to end of the query, which is right above another <code>"CURSOR "AGGREGATOR_c$1" IS"</code>.</p>
</li>
<li>
<p>In SQLDeveloper worksheet, issue the following statement to turn on the parallel DML:</p>
<pre>
Alter session enable parallel dml;
</pre></li>
<li>
<p>Paste the main query statement into another SQL Developer worksheet and view the execution plan by clicking <code>F6</code>.</p>
<p>Carefully examine the execution plan to make the mapping runs according to a valid plan.</p>
</li>
</ol>
</div>
<!-- class="sect3" -->
<a id="BEHFCFCJ"></a><a id="DMAOG368"></a>
<div class="sect3">
<h4 class="sect3">Monitoring PARALLEL DML Executions</h4>
<p>Check that you are running mapping in parallel mode by executing the following SQL statement to count the executed "Parallel DML/Query" statement</p>
<pre>
column name format a50
column value format 999,999
SELECT NAME, VALUE 
FROM GV$SYSSTAT
WHERE UPPER (NAME) LIKE '%PARALLEL OPERATIONS%'
  OR UPPER (NAME) LIKE '%PARALLELIZED%'
  OR UPPER (NAME) LIKE '%PX%'
;
</pre>
<p>If you run mapping in parallel mode, you should see "DML statements parallelized" increased by 1 (one) every time the mapping was invoked. If not, you do not see this increase, then the mapping was not invoked as "parallel DML".</p>
<p>If you see "queries parallelized" increased by 1 (one) instead, then typically it means that the <code>SELECT</code> statement inside of the <code>INSERT</code> was parallelized, but that <code>INSERT</code> itself was not parallelized.</p>
<div class="infoboxnotealso">
<p class="notep1">See also:</p>
<a href="pdm.htm#CHDEFFJH">"Parallel Execution in the Oracle Airlines Data Model"</a></div>
</div>
<!-- class="sect3" -->
<a id="BEHJAHDE"></a><a id="DMAOG369"></a>
<div class="sect3">
<h4 class="sect3">Troubleshooting Data Mining Model Creation</h4>
<p>After the data mining models are created, check the error log in <code>oadm_sys.dwc_intra_etl_activity</code> table. For example, execute the following code.</p>
<pre>
set line 160
col ACTIVITY_NAME format a30
col ACTIVITY_STATUS format a20
col error_dtl format a80
select activity_name, activity_status,  error_dtl from dwc_intra_etl_activity;
</pre>
<p>If all models are created successfully, the <code>activity_status</code> is all <code>"COMPLETED-SUCCESS"</code>. If the <code>activity_status</code> is <code>"COMPLETED-ERROR"</code> for a certain step, check the ERROR_DTL column, and fix the problem accordingly.</p>
<p>The following examples illustrate how to troubleshoot some common error messages returned in <code>ERROR_DTL</code> and <code>ACTIVITY_NAME</code> when working with Oracle Airlines Data Model:</p>
<ul>
<li>
<p><a href="#BEHGIJEC">Example 4-2, "Troubleshooting the "Message not available ... [Language=ZHS]" Error"</a></p>
</li>
<li>
<p><a href="#BEHHHJBA">Example 4-3, "Troubleshooting ORA-40112: insufficient number of valid data rows,"</a></p>
</li>
<li>
<p><a href="#BEHBIFHB">Example 4-4, "Troubleshooting ORA-40113: insufficient number of distinct target values"</a></p>
</li>
</ul>
<div class="example">
<p class="titleinexample"><a id="BEHGIJEC"></a><a id="DMAOG371"></a>Example 4-2 Troubleshooting the "Message not available ... [Language=ZHS]" Error</p>
<p>Assume that the returned error is <code>Message not available ... [Language=ZHS]</code>.</p>
<p>'ZHS' is a code for a language. The language name it relates to can appear as different name depending on the database environment. This error happens when <code>oadm_sys.DWC_MESSAGE.LANGUAGE</code> does not contain messages for the current language.</p>
<p>Check the values in the <code>DWC_MESSAGE</code> table and, if required, update to the language code specified by the Oracle session variable <code>USERENV('lang')</code>.</p>
</div>
<!-- class="example" -->
<div class="example">
<p class="titleinexample"><a id="BEHHHJBA"></a><a id="DMAOG379"></a>Example 4-3 Troubleshooting ORA-40112: insufficient number of valid data rows,</p>
<p>Assume that the returned error is <code>ORA-40112: insufficient number of valid data rows, for "create_cust_ltv_svm_rgrsn" model</code>.</p>
<p>For this model, the target column is <code>oadm_sys.dmv_cust_ltv_src.tot_cpn_amt</code>.</p>
<p>To troubleshoot this error:</p>
<ol>
<li>
<p>Execute the following SQL statements.</p>
<pre>
SELECT count(tot_cpn_amt) FROM dmv_cust_ltv_src;
SELECT count(frqtflr_card_key) FROM dmv_cust_ltv_src;
</pre></li>
<li>
<p>Check that the values returned by above two queries are same and greater than 0 (zero). If value returned by the first <code>SELECT</code> statement is smaller than value returned by the second <code>SELECT</code> statement, then check the source tables and materialized views of <code>dmv_cust_ltv_src</code>.</p>
</li>
</ol>
</div>
<!-- class="example" -->
<div class="example">
<p class="titleinexample"><a id="BEHBIFHB"></a><a id="DMAOG380"></a>Example 4-4 Troubleshooting ORA-40113: insufficient number of distinct target values</p>
<p>Assume that the returned error is <code>ORA-40113: insufficient number of distinct target values, for "create_ffp_pred_svm" model</code>.For a two-class classification model, the target column should have two distinct values. This error happens when the target column for the training model contains only one value or no value when it is expecting two values.</p>
<p>For example, for frequent fliers prediction among non-frequent fliers svm model, the target column is <code>oadm_sys.dmv_ffp_pred_src.ff_ind</code>.</p>
<p>To troubleshoot this error:</p>
<ol>
<li>
<p>Execute a SQL query to check if there are enough values in this column. Using the frequent flier prediction svm model as an example, issue the following statement.</p>
<pre>
SELECT ff_ind, count(*) FROM dmv_ffp_pred_src GROUP BY ff_ind;
</pre>
<p>The result of the query is shown below.</p>
<pre>
FF_IND       COUNT(*)
------       --------
     1           1296
     0            990
</pre></li>
<li>
<p>Check the following tables to make sure that there are both frequent fliers and non-frequent fliers by issuing the following query.</p>
<pre>
SELECT NVL2(frqtflr_nbr,'FFP','Non_FFP') AS ffp_ind, count(*) 
   FROM oadm_sys.dwd_bkg_fact GROUP BY NVL2(frqtflr_nbr,'FFP','Non_FFP');
</pre>
<p>The result of the query is shown below</p>
<pre>
FFP_IND       COUNT(*)
-------       --------
Non-FFP          77353
FFP              42647
</pre></li>
<li>
<p>Execute the following statement to refresh the mining source materialized views:</p>
<pre>
exec pkg_oadm_mining.refresh_mining_source;
</pre></li>
</ol>
</div>
<!-- class="example" --></div>
<!-- class="sect3" --></div>
<!-- class="sect2" --></div>
<!-- class="sect1" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment2035">
<tr>
<td class="cellalignment2044">
<table class="cellalignment2040">
<tr>
<td class="cellalignment2039"><a href="adm.htm"><img width="24" height="24" src="../../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment2039"><a href="rep_quer.htm"><img width="24" height="24" src="../../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;2011,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment2046">
<table class="cellalignment2038">
<tr>
<td class="cellalignment2039"><a href="../../index.htm"><img width="24" height="24" src="../../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment2039"><a href="../../nav/portal_booklist.htm"><img width="24" height="24" src="../../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment2039"><a href="toc.htm"><img width="24" height="24" src="../../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment2039"><a href="index.htm"><img width="24" height="24" src="../../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment2039"><a href="../../nav/mindx.htm"><img width="24" height="24" src="../../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment2039"><a href="../../dcommon/html/feedback.htm"><img width="24" height="24" src="../../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>
</body>
</html>
