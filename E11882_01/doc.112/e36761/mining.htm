<!DOCTYPE html>
<html lang="en">
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1">
<meta charset="utf-8">
<title>In-Database Predictive Models in Oracle R Enterprise</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Version 5.1.2 Build 730" />
<meta name="dcterms.created" content="2013-04-16T10:39:3Z" />
<meta name="robots" content="all" />
<meta name="dcterms.title" content="R Enterprise User's Guide" />
<meta name="dcterms.identifier" content="E36761-08" />
<meta name="dcterms.isVersionOf" content="OREUG" />
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;2012, 2013,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved." />
<link rel="Start" href="../../index.htm" title="Home" type="text/html" />
<link rel="Copyright" href="../../dcommon/html/cpyr.htm" title="Copyright" type="text/html" />

<script type="application/javascript"  src="../../dcommon/js/headfoot.js"></script>
<script type="application/javascript"  src="../../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html" />
<link rel="Index" href="index.htm" title="Index" type="text/html" />
<link rel="Prev" href="orelm.htm" title="Previous" type="text/html" />
<link rel="Next" href="scripts.htm" title="Next" type="text/html" />
<link rel="alternate" href="../e36761.pdf" title="PDF version" type="application/pdf" />
<link rel="schema.dcterms" href="http://purl.org/dc/terms/" />
<link rel="stylesheet" href="../../dcommon/css/fusiondoc.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/header.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/footer.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/fonts.css">
<link rel="stylesheet" href="../../dcommon/css/foundation.css">
<link rel="stylesheet" href="../../dcommon/css/codemirror.css">
<link rel="stylesheet" type="text/css" title="Default" href="../../nav/css/html5.css">
<link rel="stylesheet" href="../../dcommon/css/respond-480-tablet.css">
<link rel="stylesheet" href="../../dcommon/css/respond-768-laptop.css">
<link rel="stylesheet" href="../../dcommon/css/respond-1140-deskop.css">
<script type="application/javascript" src="../../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">11/14</span> <!-- End Header -->
<div class="chapter"><a id="CEGCHAEJ"></a>
<h1 class="chapter"><span class="secnum">7</span> In-Database Predictive Models in Oracle R Enterprise</h1>
<p>The Oracle Advanced Analytics option consists of both Oracle Data Mining and Oracle R Enterprise. Oracle R Enterprise provides a familiar R interface for predictive analytics and data mining functions available in <a id="sthref83"></a>Oracle Data Mining. This is exposed through the <code>OREdm</code> package within Oracle R Enterprise.</p>
<p>Data mining uses sophisticated mathematical algorithms to segment data and evaluate the probability of future events. Oracle Data Mining can mine tables, views, star schemas, transactional data, and unstructured data.</p>
<p>For more information about Oracle Data Mining and the algorithms that it supports, see <span class="italic">Oracle Data Mining Concepts 11g Release 2 (11.2)</span> <code><a href="http://www.oracle.com/technetwork/database/options/advanced-analytics/odm/index.html">http://www.oracle.com/technetwork/database/options/advanced-analytics/odm/index.html</a></code>.</p>
<p>See <a href="#CEGHCGFE">OREdm Models</a> for a complete list of supported algorithms and brief descriptions of the algorithms.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
The CRAN package <code>RODM</code> also supports many Oracle Data Mining algorithms. <code>RODM</code> is different from <code>OREdm</code>.</div>
<p>The <code>OREdm</code> interface is designed to provide a standard R interface for corresponding predictive analytics and data mining functions.</p>
<p>This section provides an overview of the algorithms supported by <code>OREdm</code>. For detailed information about a specific model, see the R help associated with the specific <code>OREdm</code> function.</p>
<p>In order to build a model, you must have build (training) data that satisfies <a href="#CEGFHAHB">OREdm Requirements</a>.</p>
<p>Oracle Data Mining models are somewhat different from <code>OREdm</code> models; see <a href="#CEGIGGFJ">OREdm Models and Oracle Data Mining Models</a>.</p>
<p>For list of the models available at this release and brief overview information, see <a href="#CEGHCGFE">OREdm Models</a>.</p>
<p>Examples of using <code>OREdm</code> to build models are included in the descriptions of each function. For example, <a href="#CEGHFACG">Attribute Importance Example</a> shows how to build an AI model.</p>
<a id="CEGFHAHB"></a>
<div class="sect1">
<h2 class="sect1">OREdm Requirements</h2>
<p><code>OREdm</code> requires that the data used to train (build) models exists in a single table or view that contains columns of the following types only: VARCHAR2, CHAR, NUMBER, and FLOAT.</p>
<p>All privileges required by Oracle Data Mining are automatically grant during Oracle R Enterprise installation.</p>
<p>Oracle Data Mining must be enabled for the database that you connect to.</p>
</div>
<!-- class="sect1" -->
<a id="CEGIGGFJ"></a>
<div class="sect1">
<h2 class="sect1">OREdm Models and Oracle Data Mining Models</h2>
<p>Within <code>OREdm</code>, Oracle Data Mining models are given generated names. As long as the <code>OREdm</code> R model object exists, these model names can be used to access Oracle Data Mining models through other interfaces, including:</p>
<ul>
<li>
<p>Oracle Data Miner</p>
</li>
<li>
<p>Any SQL interface, such as SQL*Plus or SQL Developer</p>
<p>In particular, the models can be used with the Oracle Data Mining SQL Prediction functions.</p>
</li>
</ul>
<p>Oracle Data Miner can be useful in a number of ways:</p>
<ul>
<li>
<p>Get a list of available models</p>
</li>
<li>
<p>Use Model viewers to inspect model details</p>
</li>
<li>
<p>Score appropriately transformed data</p>
</li>
</ul>
<div class="infobox-note">
<p class="notep1">Note:</p>
Any transformations performed in the R space will not be carried over into Oracle Data Miner or SQL scoring.</div>
<p>Similarly, SQL can be used to get a list of models, inspect model details, and score appropriately transformed data with these models.</p>
<p>Models created using <code>OREdm</code> are transient objects; they usually are not persisted past the R session that created them. Oracle Data Mining models created using Data Miner or SQL, on the other hand, exist until they are explicitly dropped.</p>
<p>Model objects can be saved or persisted, as described in <a href="using.htm#CHDHJJGD">Persist and Manage R Objects in the Database</a>. This allows <code>OREdm</code>-generated model objects to exist across R sessions and keeps the ODM object in place.</p>
<p>While the <code>OREdm</code> model exists, you can export and import it; then you can use it apart from the Oracle R Enterprise R object existence.</p>
</div>
<!-- class="sect1" -->
<a id="CEGHCGFE"></a>
<div class="sect1">
<h2 class="sect1">OREdm Models</h2>
<p><code>OREdm</code> supports these Oracle Data Mining models:</p>
<ul>
<li>
<p><a href="#CEGHJEFB">Attribute Importance</a></p>
</li>
<li>
<p><a href="#CEGBDCJG">Decision Tree</a></p>
</li>
<li>
<p><a href="#CEGGCBHJ">Generalized Linear Models</a></p>
</li>
<li>
<p><a href="#CEGFDGAB">k-Means</a></p>
</li>
<li>
<p><a href="#CEGBAABA">Naive Bayes</a></p>
</li>
<li>
<p><a href="#CEGGGHAE">Support Vector Machine</a></p>
</li>
</ul>
<p>Oracle Data Mining and Open-Source R uses different terminology; see <a href="#CEGJBAJD">Data Mining Terminology</a>.</p>
<p>Note that there are several <a href="#CEGEHFBB">Overloaded Functions</a> that perform common actions such as predict (score), summary, and print summary.</p>
<a id="CEGJBAJD"></a>
<div class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Data Mining Terminology</h3>
<p>Oracle Data Mining and the Oracle R Enterprise <code>OREdm</code> package that creates statistical models use somewhat different terminology. These are the most important differences</p>
<ul>
<li>
<p>Oracle R Enterprise <span class="italic">fits</span> models, whereas Oracle Data Mining <span class="italic">builds</span> or <span class="italic">trains</span> models.</p>
</li>
<li>
<p>Oracle R Enterprise <span class="italic">predicts</span> using new data, whereas Oracle Data Mining <span class="italic">scores</span> new data, or <span class="italic">applies</span> a model to new data.</p>
</li>
<li>
<p>Oracle R Enterprise uses formula, as described in <a href="#CEGEEDJH">Formula</a>, in the API calls; Oracle Data Mining does not support formula.</p>
</li>
</ul>
<a id="CEGEEDJH"></a>
<div class="sect3">
<h4 class="sect3">Formula</h4>
<p>R model definitions require a <span class="bold">formula</span> that expresses relationships between variables. The <code>formula</code> class is included in the R <code>stats</code> package. For more information, see the R help associated with <code>?formula</code>. A <code>formula</code> provides a symbolic description of the model to be fitted.</p>
<p>The <code>[stats]{formula}</code> specification has the form <code>(response ~ terms)</code> where</p>
<ul>
<li>
<p><code>response</code> is the numeric or character response vector.</p>
</li>
<li>
<p><code>term</code>s is a series of terms, that is, the column names to include in the model. Multiple terms are specified using <code>+</code> between column names.</p>
</li>
</ul>
<p>Use {<code>response ~ .}</code> if all columns in data should be used for model building</p>
<p>Functions can be applied to response and terms to realize transformations.</p>
<p>To exclude columns, use <code>-</code> before the name of each column to exclude.</p>
<p>The examples of model builds in this document and in the R help all contain sample formulas. There is no equivalent of <code>formula</code> in the Oracle Data Mining API.</p>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="CEGEHFBB"></a>
<div class="sect2">
<h3 class="sect2">Overloaded Functions</h3>
<p><code>predict()</code>, <code>summary()</code>, and <code>print()</code> are defined across all <code>OREdm</code> algorithms, for example, as illustrated in <a href="#CEGBDIHC">GLM Examples</a>.</p>
<p><code>summary()</code> returns detailed information about the model created, such as details of the generated decision tree.</p>
</div>
<!-- class="sect2" -->
<a id="CEGHJEFB"></a>
<div class="sect2">
<h3 class="sect2">Attribute<a id="sthref84"></a> Importance</h3>
<p>Oracle Data Mining uses the Minimum Descriptor Length algorithm to calculate Attribute Importance. Attribute importance ranks attributes according to their significance in predicting a target.</p>
<p>Minimum Description Length (MDL) is an information theoretic model selection principle. It is an important concept in information theory (the study of the quantification of information) and in learning theory (the study of the capacity for generalization based on empirical data).</p>
<p>MDL assumes that the simplest, most compact representation of the data is the best and most probable explanation of the data. The MDL principle is used to build Oracle Data Mining attribute importance models.</p>
<p>Attribute Importance models built using Oracle Data Mining cannot be applied to new data.</p>
<p><code>ore.odmAI</code> produces a ranking of attributes and their importance values.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
<code>OREdm</code> AI models differ from Oracle Data Mining AI models in these ways: a model object is <span class="italic">not</span> retained, and an R model object is <span class="italic">not</span> returned. Only the importance ranking created by the model is returned.</div>
<p>For details about parameters, see the R help associated with <code>ore.odmAI</code>.</p>
<p>For an example, see <a href="#CEGHFACG">Attribute Importance Example</a>.</p>
<a id="CEGHFACG"></a>
<div class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Attribute Importance Example</h4>
<p>This example creates a table by pushing the data frame <code>iris</code> to the table IRIS and then builds an attribute importance model:</p>
<pre>
  IRIS &lt;- ore.push(iris)
  ore.odmAI(Species ~ ., IRIS) # Analyse the column Species
</pre></div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="CEGBDCJG"></a>
<div class="sect2">
<h3 class="sect2">Dec<a id="sthref85"></a>ision Tree</h3>
<p>The Decision Tree algorithm is based on conditional probabilities. Decision trees generate rules. A rule is a conditional statement that can easily be understood by humans and easily used within a database to identify a set of records.</p>
<p>Decision Tree models are classification models.</p>
<p>A decision tree predicts a target value by asking a sequence of questions. At a given stage in the sequence, the question that is asked depends upon the answers to the previous questions. The goal is to ask questions that, taken together, uniquely identify specific target values. Graphically, this process forms a tree structure.</p>
<p>During the training process, the Decision Tree algorithm must repeatedly find the most efficient way to split a set of cases (records) into two child nodes. <code>ore.odmDT</code> offers two homogeneity metrics, gini and entropy, for calculating the splits. The default metric is gini.</p>
<p><code>OREdm</code> includes these functions for Decision Tree (DT):</p>
<ul>
<li>
<p><code>ore.odmDT</code> creates (builds) a DT model.</p>
</li>
<li>
<p><code>predict</code> predicts classifications on new data using the DT model.</p>
</li>
<li>
<p><code>summary</code> provides a summary of the DT model. The summary includes node details that describe the tree that the model generates, and a symbolic description of the model. Returns an instance of <code>summary.ore.odmDT</code>.</p>
</li>
<li>
<p><code>print.ore.odmDT</code> prints select components of the <code>ore.odmDT</code> model.</p>
</li>
</ul>
<p>For details about parameters, see the R help associated with <code>ore.odmDT</code>.</p>
<p>For an example, see <a href="#CEGCHGFJ">Decision Tree Example</a>.</p>
<a id="CEGCHGFJ"></a>
<div class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Decision Tree Example</h4>
<p>This example creates an input table, builds a model, makes predictions, and generates a confusion matrix.</p>
<pre>
# Create MTCARS, the input data
  m &lt;- mtcars
  m$gear &lt;- as.factor(m$gear)
  m$cyl  &lt;- as.factor(m$cyl)
  m$vs   &lt;- as.factor(m$vs)
  m$ID   &lt;- 1:nrow(m)
  MTCARS &lt;- ore.push(m)
  row.names(MTCARS) &lt;- MTCARS
# Build the model 
  dt.mod  &lt;- ore.odmDT(gear ~ ., MTCARS)
  summary(dt.mod)
 # Make predictions and generate a confusion matrix
  dt.res  &lt;- predict (dt.mod, MTCARS,"gear")
  with(dt.res, table(gear,PREDICTION))  # generate confusion matrix
</pre></div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="CEGGCBHJ"></a>
<div class="sect2">
<h3 class="sect2">Gene<a id="sthref86"></a>ralized Linear Models</h3>
<p>Generalized Linear Models (GLM) include and extend the class of linear models (linear regression). Generalized linear models relax the restrictions on linear models, which are often violated in practice. For example, binary (yes/no or 0/1) responses do not have same variance across classes.</p>
<p>Oracle Data Mining's GLM is a parametric modeling technique. Parametric models make assumptions about the distribution of the data. When the assumptions are met, parametric models can be more efficient than non-parametric models.The challenge in developing models of this type involves assessing the extent to which the assumptions are met. For this reason, quality diagnostics are key to developing quality parametric models.</p>
<p>In addition to the classical weighted least squares estimation for linear regression and iteratively re-weighted least squares estimation for logistic regression, both solved via Cholesky decomposition and matrix inversion, Oracle Data Mining GLM provides a conjugate gradient-based optimization algorithm that does not require matrix inversion and is very well suited to high-dimensional data (This approach is similar to the approach in Komarek's paper of 2004.) The choice of algorithm is handled internally and is transparent to the user.</p>
<p>GLM can be used to create classification or regression models as follows:</p>
<ul>
<li>
<p><span class="bold">Classification</span>: Binary logistic regression is the GLM classification algorithm. The algorithm uses the logit link function and the binomial variance function.</p>
<p>For an example, see <a href="#CEGBDIHC">GLM Examples</a>.</p>
</li>
<li>
<p><span class="bold">Regression:</span> Linear regression is the GLM regression algorithm. The algorithm assumes no target transformation and constant variance over the range of target values.</p>
<p>For an example, see <a href="#CEGBDIHC">GLM Examples</a>.</p>
</li>
</ul>
<p><code>ore.odmGLM</code> allows you to build two different types of models. Some arguments apply to classification models only, and some to regression models only.</p>
<p><code>OREdm</code> provides these functions for Generalized Linear Models (GLM):</p>
<ul>
<li>
<p><code>ore.odmGLM</code> creates (builds) a GLM model; note that some arguments apply to classification models only, and some to regression models only.</p>
</li>
<li>
<p><code>residuals</code> is an <code>ore.frame</code> containing three types of residuals: <code>deviance</code>, <code>pearson</code>, and <code>response</code>.</p>
</li>
<li>
<p><code>fitted</code> is <code>fitted.values</code>: an ore.vector containing the fitted values:</p>
<ul>
<li>
<p><code>rank</code>: The numeric rank of the fitted model</p>
</li>
<li>
<p><code>type</code>: The type of model fit</p>
</li>
</ul>
</li>
<li>
<p><code>predict.ore.odmGLM</code> predicts new data using the GLM model.</p>
</li>
<li>
<p><code>confint</code> is logical indicator for whether to produce confidence intervals for the predicted values.</p>
</li>
<li>
<p><code>devianc</code>e is minus twice the maximized log-likelihood, up to a constant.</p>
</li>
<li>
<p><code>coef.ore.odmGLM</code> retrieves coefficients for GLM models with linear kernel.</p>
</li>
<li>
<p><code>extractAIC.ore.odmGLM</code> extracts Akaike's <span class="italic">An Information Criterion</span> (AIC) from the global details of the GLM model.</p>
</li>
<li>
<p><code>logLik</code> extracts Log-Likelihood for an OREdm GLM model.</p>
</li>
<li>
<p><code>nobs</code> extracts the number of observations from a model fit. <code>nobs</code> is used in computing BIC.</p>
<p>BIC is defined as <code>AIC(object, ..., k = log(nobs(object)))</code>.</p>
</li>
<li>
<p><code>summary</code> creates a summary of the GLM model. The summary includes fit details for the model. Also returns <code>formula</code>, a symbolic description of the model. Returns an object of type <code>summary.ore.odmGLM</code></p>
</li>
<li>
<p><code>print</code> prints selected components of the GLM model.</p>
</li>
</ul>
<p>For details about parameters and methods, see the R help associated with <code>ore.odmGLM</code>.</p>
<a id="CEGBDIHC"></a>
<div class="sect3">
<h4 class="sect3">GLM<a id="sthref87"></a> Examples</h4>
<p>These examples build several models using GLM. The input tables are R data sets pushed to the database.</p>
<ul>
<li>
<p>Linear regression using the <code>longley</code> data set:</p>
<pre>
LONGLEY &lt;- ore.push(longley)
longfit1 &lt;- ore.odmGLM(Employed ~ ., data = LONGLEY)
summary(longfit1)
</pre></li>
<li>
<p>Ridge regression using the <code>longley</code> data set:</p>
<pre>
longfit2 &lt;- ore.odmGLM(Employed ~ ., data = LONGLEY, ridge = TRUE,
                       ridge.vif = TRUE)
summary(longfit2)
</pre></li>
<li>
<p>Logistic regression (classification) using the <code>infert</code> data set:</p>
<pre>
INFERT &lt;- ore.push(infert)
infit1 &lt;- ore.odmGLM(case ~ age+parity+education+spontaneous+induced,
                     data = INFERT, type = "logistic")
infit1
</pre></li>
<li>
<p>Changing the reference value to 1 for <code>infit1</code>:</p>
<pre>
infit2 &lt;- ore.odmGLM(case ~ age+parity+education+spontaneous+induced,
                       data = INFERT, type = "logistic", reference = 1)
infit2
</pre></li>
</ul>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="CEGFDGAB"></a>
<div class="sect2">
<h3 class="sect2">k-Mea<a id="sthref88"></a>ns</h3>
<p>The <span class="italic">k</span>-Means (KM) algorithm, a distance-based clustering algorithm that partitions data into a specified number of clusters, is an enhanced version with these features:</p>
<ul>
<li>
<p>Several distance functions: Euclidean, Cosine, and Fast Cosine distance functions. The default is Euclidean.</p>
</li>
<li>
<p>For each cluster, the algorithm returns the centroid, a histogram for each attribute, and a rule describing the hyperbox that encloses the majority of the data assigned to the cluster. The centroid reports the mode for categorical attributes and the mean and variance for numerical attributes.</p>
</li>
</ul>
<p><code>OREdm</code> includes these functions for <span class="italic">k</span>-Means (KM) models:</p>
<ul>
<li>
<p><code>ore.odmKMeans</code> creates (builds) a KM model.</p>
</li>
<li>
<p><code>predict</code> predicts new data using the KM model.</p>
</li>
<li>
<p><code>rules.ore.odmKMeans</code> extracts rules generated by the KM model.</p>
</li>
<li>
<p><code>clusterhists.ore.odmKMeans</code> generates a <code>data.frame</code> with histogram data for each cluster and variable combination in the model. Numerical variables are binned.</p>
</li>
<li>
<p><code>histograms.ore.odmKMeans</code> produces lattice-based histograms from a clustering model.</p>
</li>
<li>
<p><code>summary</code> returns a summary of the KM model, including rules. Also returns <code>formula</code>, a symbolic description of the model. Returns an object of type <code>summary.ore.KMeans</code>.</p>
</li>
<li>
<p><code>print</code> prints selected components of the KM model.</p>
</li>
</ul>
<p>For details about parameters, see the R help associated with <code>ore.odmKM</code>().</p>
<p>For an example, see <a href="#CEGDGGDF">k-Means Example</a>.</p>
<a id="CEGDGGDF"></a>
<div class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">k-Means Example</h4>
<p>This example creates the table X, builds a cluster model, plots the clusters via <code>histogram</code>(), and makes predictions:</p>
<pre>
# Create input table X
  x &lt;- rbind(matrix(rnorm(100, sd = 0.3), ncol = 2),
           matrix(rnorm(100, mean = 1, sd = 0.3), ncol = 2))
  colnames(x) &lt;- c("x", "y")
  X &lt;- ore.push (data.frame(x))
  km.mod1 &lt;- NULL
  km.mod1 &lt;- ore.odmKMeans(~., X, num.centers=2)
  km.mod1
  summary(km.mod1)
  rules(km.mod1)
  clusterhists(km.mod1)
  histogram(km.mod1)
 # Build clustering mode; plot results
  km.res1 &lt;- predict(km.mod1,X,type="class",supplemental.cols=c("x","y"))
  head(km.res1,3)
  km.res1.local &lt;- ore.pull(km.res1)
  plot(data.frame(x=km.res1.local$x, y=km.res1.local$y),
    col=km.res1.local$CLUSTER_ID)
  points(km.mod1$centers2, col = rownames(km.mod1$centers2), pch = 8, cex=2)
# Make predictions 
  head(predict(km.mod1,X))
  head(predict(km.mod1,X,type=c("class","raw")),3)
  head(predict(km.mod1,X,type=c("class","raw"),supplemental.cols=c("x","y")),3)
  head(predict(km.mod1,X,type="class"),3)
  head(predict(km.mod1,X,type="class",supplemental.cols=c("x","y")),3)
  head(predict(km.mod1,X,type="raw"),3)
  head(predict(km.mod1,X,type="raw",supplemental.cols=c("x","y")),3)
</pre></div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="CEGBAABA"></a>
<div class="sect2">
<h3 class="sect2">Naiv<a id="sthref89"></a>e Bayes</h3>
<p>The Naive Bayes algorithm is based on conditional probabilities. Naive Bayes looks at the historical data and calculates conditional probabilities for the target values by observing the frequency of attribute values and of combinations of attribute values.</p>
<p>Naive Bayes assumes that each predictor is conditionally independent of the others. (Bayes' Theorem requires that the predictors be independent.)</p>
<p><code>OREdm</code> includes these functions for Naive Bayes (NB) models:</p>
<ul>
<li>
<p><code>ore.odmNB</code> creates (builds) an NB model.</p>
</li>
<li>
<p><code>predict</code> scores new data using the NB model.</p>
</li>
<li>
<p><code>summary</code> provides a summary of the NB model. Also returns <code>formula</code>, a symbolic description of the model. Returns an instance of <code>summary.ore.odmNB</code>.</p>
</li>
<li>
<p><code>print</code> prints select components of the <code>NB</code> model.</p>
</li>
</ul>
<p>For details about parameters, see the R help associated with <code>ore.odmNB</code>.</p>
<p>For an example, see <a href="#CEGIEBBB">Naive Bayes Example</a>.</p>
<a id="CEGIEBBB"></a>
<div class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Naive Bayes Example</h4>
<p>This example creates MTCARS, builds a Naive Bayes model, and then uses the model to make predictions:</p>
<pre>
# Create MTCARS
  m &lt;- mtcars
  m$gear &lt;- as.factor(m$gear)
  m$cyl  &lt;- as.factor(m$cyl)
  m$vs   &lt;- as.factor(m$vs)
  m$ID   &lt;- 1:nrow(m)
  MTCARS &lt;- ore.push(m)
  row.names(MTCARS) &lt;- MTCARS
 # Build model
  nb.mod  &lt;- ore.odmNB(gear ~ ., MTCARS)
  summary(nb.mod)
 # Make predictions
  nb.res  &lt;- predict (nb.mod, MTCARS,"gear")
  with(nb.res, table(gear,PREDICTION))  # generate confusion matrix
</pre></div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="CEGGGHAE"></a>
<div class="sect2">
<h3 class="sect2">Support Vect<a id="sthref90"></a>or Machine</h3>
<p>Support Vector Machine (SVM) is a powerful, state-of-the-art algorithm with strong theoretical foundations based on the Vapnik-Chervonenkis theory. SVM has strong regularization properties. Regularization refers to the generalization of the model to new data.</p>
<p>SVM models have similar functional form to neural networks and radial basis functions, both popular data mining techniques.</p>
<p>SVM can be used to solve the following problems:</p>
<ul>
<li>
<p><span class="bold">Classification</span>: SVM classification is based on decision planes that define decision boundaries. A decision plane is one that separates a set of objects having different class memberships. SVM finds the vectors ("support vectors") that define the separators giving the widest separation of classes.</p>
<p>SVM classification supports both binary and multiclass targets.</p>
<p>For an example, see <a href="#CEGBADGI">SVM Classification</a>.</p>
</li>
<li>
<p><span class="bold">Regression</span>: SVM uses an epsilon-insensitive loss function to solve regression problems.</p>
<p>SVM regression tries to find a continuous function such that the maximum number of data points lie within the epsilon-wide insensitivity tube. Predictions falling within epsilon distance of the true target value are not interpreted as errors.</p>
<p>For an example, see <a href="#CEGFJCIA">SVM Regression</a>.</p>
</li>
<li>
<p><span class="bold">Anomaly Detection</span>: Anomaly detection identifies cases that are unusual within data that is seemingly homogeneous. Anomaly detection is an important tool for detecting fraud, network intrusion, and other rare events that may have great significance but are hard to find.</p>
<p>Anomaly detection is implemented as one-class SVM classification. An anomaly detection model predicts whether a data point is typical for a given distribution or not.</p>
<p>For an example, see <a href="#CEGFEHBJ">SVM Anomaly Detection</a>.</p>
</li>
</ul>
<p>The <code>ore.odmSVM</code> function builds each of these three different types of models. Some arguments apply to classification models only, some to regression models only, and some to anomaly detection models only.</p>
<p><code>OREdm</code> provides these functions for SVM models:</p>
<ul>
<li>
<p><code>ore.odmSVM</code> creates (builds) SVM model.</p>
</li>
<li>
<p><code>predict</code> predicts (scores) new data using the SVM model.</p>
</li>
<li>
<p><code>coef</code> retrieves the coefficient of an SVM model.</p>
<p>SVM has two kernels, Linear and Gaussian; the Linear Kernel generates coefficients.</p>
</li>
<li>
<p><code>summary</code> creates a summary of the SVM model.Also returns <code>formula</code>, a symbolic description of the model. Returns an object of type <code>summary.ore.odmSVM</code>.</p>
</li>
<li>
<p><code>print</code> print selected components of the SVM model.</p>
</li>
</ul>
<p>For details about parameters, see the R help associated with <code>ore.odmSVM</code>.</p>
<div class="sect3"><!-- infolevel="all" infotype="General" --><a id="sthref91"></a>
<h4 class="sect3">Support Vector Machine Examples</h4>
<p>These examples build three models:</p>
<ul>
<li>
<p><a href="#CEGBADGI">SVM Classification</a></p>
</li>
<li>
<p><a href="#CEGFJCIA">SVM Regression</a></p>
</li>
<li>
<p><a href="#CEGFEHBJ">SVM Anomaly Detection</a></p>
</li>
</ul>
<a id="CEGBADGI"></a>
<div class="sect4"><!-- infolevel="all" infotype="General" -->
<h5 class="sect4">SVM Classification</h5>
<p>This example creates <code>mtcars</code> in the database from the R <code>mtcars</code> dataset., builds a classification model, makes predictions, and finally generates a confusion matrix.</p>
<pre>
  m &lt;- mtcars
  m$gear &lt;- as.factor(m$gear)
  m$cyl  &lt;- as.factor(m$cyl)
  m$vs   &lt;- as.factor(m$vs)
  m$ID   &lt;- 1:nrow(m)
  MTCARS &lt;- ore.push(m)
 
  svm.mod  &lt;- ore.odmSVM(gear ~ .-ID, MTCARS,"classification")
  summary(svm.mod)
  coef(svm.mod)
  svm.res  &lt;- predict (svm.mod, MTCARS,"gear")
  with(svm.res, table(gear,PREDICTION))  # generate confusion matrix
 
</pre></div>
<!-- class="sect4" -->
<a id="CEGFJCIA"></a>
<div class="sect4"><!-- infolevel="all" infotype="General" -->
<h5 class="sect4">SVM Regression</h5>
<p>This example creates a data frame, pushes it to a table, and then builds a regression model; note that <code>ore.odmSVM</code> specifies a linear kernel:</p>
<pre>
  x &lt;- seq(0.1, 5, by = 0.02)
  y &lt;- log(x) + rnorm(x, sd = 0.2)
  dat &lt;-ore.push(data.frame(x=x, y=y))
 
# Build model with linear kernel
  svm.mod &lt;- ore.odmSVM(y~x,dat,"regression",kernel.function="linear")
  summary(svm.mod)
  coef(svm.mod)
  svm.res &lt;- predict(svm.mod,dat,supplemental.cols="x")
  head(svm.res,6)
</pre></div>
<!-- class="sect4" -->
<a id="CEGFEHBJ"></a>
<div class="sect4"><!-- infolevel="all" infotype="General" -->
<h5 class="sect4">SVM Anomaly Detection</h5>
<p>This example uses MTCARS created in the classification example and builds an anomaly detection model:</p>
<pre>
  svm.mod  &lt;- ore.odmSVM(~ .-ID, MTCARS,"anomaly.detection")
  summary(svm.mod)
  svm.res  &lt;- predict (svm.mod, MTCARS, "ID")
  head(svm.res)
  table(svm.res$PREDICTION)
</pre></div>
<!-- class="sect4" --></div>
<!-- class="sect3" --></div>
<!-- class="sect2" --></div>
<!-- class="sect1" --></div>
<!-- class="chapter" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment2090">
<tr>
<td class="cellalignment2097">
<table class="cellalignment2095">
<tr>
<td class="cellalignment2094"><a href="orelm.htm"><img width="24" height="24" src="../../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment2094"><a href="scripts.htm"><img width="24" height="24" src="../../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;2012, 2013,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment2099">
<table class="cellalignment2093">
<tr>
<td class="cellalignment2094"><a href="../../index.htm"><img width="24" height="24" src="../../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment2094"><a href="../../nav/portal_booklist.htm"><img width="24" height="24" src="../../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment2094"><a href="toc.htm"><img width="24" height="24" src="../../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment2094"><a href="index.htm"><img width="24" height="24" src="../../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment2094"><a href="../../nav/mindx.htm"><img width="24" height="24" src="../../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment2094"><a href="../../dcommon/html/feedback.htm"><img width="24" height="24" src="../../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>
</body>
</html>
