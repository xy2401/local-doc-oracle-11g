<!DOCTYPE html>
<html lang="en">
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1">
<meta charset="utf-8">
<title>Sybase Gateway Features and Restrictions</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Version 5.1.2 Build 042" />
<meta name="dcterms.created" content="2012-01-24T13:45:19Z" />
<meta name="robots" content="all" />
<meta name="dcterms.title" content="Database Gateway for Sybase User's Guide" />
<meta name="dcterms.identifier" content="E12067-03" />
<meta name="dcterms.isVersionOf" content="TGSYU" />
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;2002, 2012,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved." />
<link rel="Start" href="../../index.htm" title="Home" type="text/html" />
<link rel="Copyright" href="../../dcommon/html/cpyr.htm" title="Copyright" type="text/html" />

<script type="application/javascript"  src="../../dcommon/js/headfoot.js"></script>
<script type="application/javascript"  src="../../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html" />
<link rel="Index" href="index.htm" title="Index" type="text/html" />
<link rel="Prev" href="intro.htm" title="Previous" type="text/html" />
<link rel="Next" href="casestudies.htm" title="Next" type="text/html" />
<link rel="alternate" href="../e12067.pdf" title="PDF version" type="application/pdf" />
<link rel="schema.dcterms" href="http://purl.org/dc/terms/" />
<link rel="stylesheet" href="../../dcommon/css/fusiondoc.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/header.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/footer.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/fonts.css">
<link rel="stylesheet" href="../../dcommon/css/foundation.css">
<link rel="stylesheet" href="../../dcommon/css/codemirror.css">
<link rel="stylesheet" type="text/css" title="Default" href="../../nav/css/html5.css">
<link rel="stylesheet" href="../../dcommon/css/respond-480-tablet.css">
<link rel="stylesheet" href="../../dcommon/css/respond-768-laptop.css">
<link rel="stylesheet" href="../../dcommon/css/respond-1140-deskop.css">
<script type="application/javascript" src="../../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">6/12</span> <!-- End Header --><a id="i1005545"></a><a id="TGSYU200"></a>
<h1 class="chapter"><span class="secnum">2</span> Sybase Gateway Features and Restrictions</h1>
<p>After the gateway is installed and configured, you can use the gateway to access Sybase data, pass Sybase commands from applications to the Sybase database, perform distributed queries, and copy data.</p>
<p>This chapter contains the following sections:</p>
<ul>
<li>
<p><a href="#i1005577">Using the Pass-Through Feature</a></p>
</li>
<li>
<p><a href="#i1007281">Executing Stored Procedures and Functions</a></p>
</li>
<li>
<p><a href="#CFHFBJEI">CHAR Semantics</a></p>
</li>
<li>
<p><a href="#CFHHGGFB">Multi-byte Character Sets Ratio Suppression</a></p>
</li>
<li>
<p><a href="#CFHCACGE">IPv6 Support</a></p>
</li>
<li>
<p><a href="#CFHHJFHH">Gateway Session IDLE Timeout</a></p>
</li>
<li>
<p><a href="#i1005620">Database Compatibility Issues for Sybase</a></p>
</li>
<li>
<p><a href="#i1005911">Known Restrictions</a></p>
</li>
<li>
<p><a href="#i1006159">Known Problems</a></p>
</li>
</ul>
<a id="i1005577"></a><a id="TGSYU704"></a>
<div class="sect1">
<h2 class="sect1"><span class="secnum">2.1</span> Using the Pass-Through Feature<a id="sthref4"></a></h2>
<p>The gateway can pass Sybase commands or statements from the application to the Sybase database using the <code>DBMS_HS_PASSTHROUGH</code> package.</p>
<p>Use the <code>DBMS_HS_PASSTHROUGH</code> package in a PL/SQL block to specify the statement to be passed to the Sybase database, as follows:</p>
<pre>
DECLARE
    num_rows INTEGER;
BEGIN
    num_rows := DBMS_HS_PASSTHROUGH.EXECUTE_IMMEDIATE@SYBS('<span class="italic">command</span>');
END;
/
</pre>
<p>Where <span class="italic">command</span> cannot be one of the following:</p>
<ul>
<li>
<p><code>BEGIN TRANSACTION</code></p>
</li>
<li>
<p><code>COMMIT</code></p>
</li>
<li>
<p><code>ROLLBACK</code></p>
</li>
<li>
<p><code>SAVE</code></p>
</li>
<li>
<p><code>SHUTDOWN</code></p>
</li>
<li>
<p>Sybase tool commands</p>
</li>
</ul>
<p>The <code>DBMS_HS_PASSTHROUGH</code> package supports passing bind values and executing <code>SELECT</code> statements.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
<code>TRUNCATE</code> cannot be used in a pass-through statement.</div>
<div class="infoboxnotealso">
<p class="notep1"><span class="bold">See Also</span>:</p>
<a class="olink ARPLS" href="../../appdev.112/e40758/toc.htm"><span class="italic">Oracle Database PL/SQL Packages and Types Reference</span></a> and <a class="olink HETER003" href="../../server.112/e11050/majfeat.htm#HETER003">Chapter 3, Features of Oracle Database Gateways,</a> of <span class="italic">Oracle Database Heterogeneous Connectivity User's Guide</span> for more information about the <code>DBMS_HS_PASSTHROUGH</code> package.</div>
</div>
<!-- class="sect1" -->
<a id="i1007281"></a><a id="TGSYU705"></a>
<div class="sect1">
<h2 class="sect1"><span class="secnum">2.2</span> Executing Stored Procedures and Functions<a id="sthref5"></a><a id="sthref6"></a></h2>
<p>Using the procedural feature, the gateway can execute stored procedures that are defined in the Sybase database. It is not necessary to relink the gateway or define the procedure to the gateway, but the procedure's access privileges must permit access by the gateway.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink HETER" href="../../server.112/e11050/toc.htm"><span class="italic">Oracle Database Heterogeneous Connectivity User's Guide</span></a> for more information about executing stored procedures.</div>
<p>Standard PL/SQL statements are used to execute a stored procedure.</p>
<p>The gateway supports stored procedures in three mutually exclusive modes:</p>
<ul>
<li>
<p>Normal mode: Have access to <code>IN</code>/<code>OUT</code> arguments only</p>
</li>
<li>
<p>Return value mode: Have a return value for all stored procedures</p>
</li>
<li>
<p>Resultset mode: Out values are available as last result set</p>
</li>
</ul>
<a id="TGSYU706"></a>
<div class="sect2"><a id="sthref7"></a>
<h3 class="sect2"><span class="secnum">2.2.1</span> Return Values and Stored Procedures</h3>
<p>By default, all stored procedures and functions do not return a return value to the user. To enable return values, set the <code>HS_FDS_PROC_IS_FUNC</code> parameter in the initialization parameter file.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="apd.htm#g637475">Appendix D, "Initialization Parameters"</a> for information about both editing the initialization parameter file and the <code>HS_FDS_PROC_IS_FUNC</code> parameter.</div>
<div class="infobox-note">
<p class="notep1">Note:</p>
If you set the <code>HS_FDS_PROC_IS_FUNC</code> gateway initialization parameter, you must change the syntax of the procedure execute statement for all existing stored procedures.</div>
<p>In the following example, the employee name <code>JOHN SMYTHE</code> is passed to the Sybase stored procedure <code>REVISE_SALARY</code>. The stored procedure retrieves the salary value from the Sybase database to calculate a new yearly salary for <code>JOHN SMYTHE</code>. The revised salary returned in <code>RESULT</code> is used to update <code>EMP</code> in a table of an Oracle database:</p>
<pre>
DECLARE
  INPUT VARCHAR2(15);
  RESULT NUMBER(8,2);
BEGIN
  INPUT := 'JOHN SMYTHE';
  RESULT := REVISE_SALARY@SYBS(INPUT);
  UPDATE EMP SET SAL = RESULT WHERE ENAME =: INPUT;
END;
/
</pre>
<p>The procedural feature automatically converts non-Oracle data types to and from PL/SQL data types.</p>
</div>
<!-- class="sect2" -->
<a id="TGSYU707"></a>
<div class="sect2"><a id="sthref8"></a>
<h3 class="sect2"><span class="secnum">2.2.2</span> Result Sets and Stored Procedures</h3>
<p>The Oracle Database Gateway for Sybase provides support for stored procedures which return result sets.</p>
<p>By default, all stored procedures and functions do not return a result set to the user. To enable result sets, set the <code>HS_FDS_RESULTSET_SUPPORT</code> parameter in the initialization parameter file.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="apd.htm#g637475">Appendix D, "Initialization Parameters"</a> for information about both editing the initialization parameter file and the <code>HS_FDS_RESULTSET_SUPPORT</code> parameter. For further information about Oracle support for result sets in non-Oracle databases see <a class="olink HETER" href="../../server.112/e11050/toc.htm"><span class="italic">Oracle Database Heterogeneous Connectivity User's Guide</span></a>.</div>
<div class="infobox-note">
<p class="notep1">Note:</p>
If you set the <code>HS_FDS_RESULTSET_SUPPORT</code> gateway initialization parameter, you must change the syntax of the procedure execute statement for all existing stored procedures or errors will occur.</div>
<p>When accessing stored procedures with result sets through the Oracle Database Gateway for Sybase, you will be in the sequential mode of Heterogeneous Services.</p>
<p>The Oracle Database Gateway for Sybase returns the following information to Heterogeneous Services during procedure description:</p>
<ul>
<li>
<p>All the input arguments of the remote stored procedure</p>
</li>
<li>
<p>None of the output arguments</p>
</li>
<li>
<p>One out argument of type ref cursor (corresponding to the first result set returned by the stored procedure)</p>
</li>
</ul>
<p>Client programs have to use the virtual package function <code>dbms_hs_result_set.get_next_result_set</code> to get the ref cursor for subsequent result sets. The last result set returned is the out argument from the procedure.</p>
<p>The limitations of accessing result sets are the following:</p>
<ul>
<li>
<p>Result sets returned by a remote stored procedure have to be retrieved in the order in which they were placed on the wire</p>
</li>
<li>
<p>On execution of a stored procedure, all result sets returned by a previously executed stored procedure will be closed (regardless of whether the data has been completely</p>
</li>
</ul>
<p>In the following example, the Sybase stored procedure is executed to fetch the contents of the <code>emp</code> and <code>dept</code> tables from Sybase:</p>
<pre>
create procedure REFCURPROC (@arg1 varchar(255), @arg2 varchar(255) output)
as
select @arg2 = @arg1
select * from EMP
select * from DEPT
go
</pre>
<p>This stored procedure assigns the input parameter arg1 to the output parameter arg2, opens the query <code>SELECT * FROM EMP</code> in ref cursor rc1, and opens the query <code>SELECT * FROM DEPT</code> in ref cursor <code>rc2</code>.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
Chained mode must be set before creating the stored procedure. Issue the following command in Sybase: <code>set chained on</code></div>
<a id="TGSYU708"></a>
<div class="sect3"><a id="sthref9"></a>
<h4 class="sect3"><span class="secnum">2.2.2.1</span> OCI Program Fetching from Result Sets in Sequential Mode</h4>
<p>The following example shows OCI program fetching from result sets in sequential mode:</p>
<pre>
OCIEnv *ENVH;
OCISvcCtx *SVCH;
OCIStmt *STMH;
OCIError *ERRH;
OCIBind *BNDH[3];
OraText arg1[20];
OraText arg2[255];
OCIResult *rset;
OCIStmt *rstmt;
ub2 rcode[3];
ub2 rlens[3];
sb2 inds[3];
OraText *stmt = (OraText *) "begin refcurproc@SYBS(:1,:2,:3); end;";
OraText *n_rs_stm = (OraText *)
  "begin :ret := DBMS_HS_RESULT_SET.GET_NEXT_RESULT_SET@SYBS; end;";

/* Prepare procedure call statement */

/* Handle Initialization code skipped */
OCIStmtPrepare(STMH, ERRH, stmt, strlen(stmt), OCI_NTV_SYNTAX, OCI_DEFAULT);

/* Bind procedure arguments */
inds[0] = 0;
strcpy((char *) arg1, "Hello World");
rlens[0] = strlen(arg1);
OCIBindByPos(STMH, &amp;BNDH[0], ERRH, 1, (dvoid *) arg1, 20, SQLT_CHR,
             (dvoid *) &amp;(inds[0]), &amp;(rlens[0]), &amp;(rcode[0]), 0, (ub4 *) 0, 
             OCI_DEFAULT);
inds[1] = -1;
OCIBindByPos(STMH, &amp;BNDH[1], ERRH, 1, (dvoid *) arg2, 20, SQLT_CHR,
             (dvoid *) &amp;(inds[1]), &amp;(rlens[1]), &amp;(rcode[1]), 0, (ub4 *) 0, 
             OCI_DEFAULT);

inds[2] = 0;
rlens[2] = 0;
OCIDescriptorAlloc(ENVH, (dvoid **) &amp;rset, OCI_DTYPE_RSET, 0, (dvoid **) 0);
OCIBindByPos(STMH, &amp;BNDH[2], ERRH, 2, (dvoid *) rset, 0, SQLT_RSET,
             (dvoid *) &amp;(inds[2]), &amp;(rlens[2]), &amp;(rcode[2]),
             0, (ub4 *) 0, OCI_DEFAULT);

/* Execute procedure */
OCIStmtExecute(SVCH, STMH, ERRH, 1, 0, (CONST OCISnapshot *) 0,
               (OCISnapshot *) 0, OCI_DEFAULT);

/* Convert result set to statement handle */
OCIResultSetToStmt(rset, ERRH);
rstmt = (OCIStmt *) rset;

/* After this the user can fetch from rstmt */
/* Issue get_next_result_set call to get handle to next_result set */
/* Prepare Get next result set procedure call */

OCIStmtPrepare(STMH, ERRH, n_rs_stm, strlen(n_rs_stm), OCI_NTV_SYNTAX,
               OCI_DEFAULT);

/* Bind return value */
OCIBindByPos(STMH, &amp;BNDH[1], ERRH, 1, (dvoid *) rset, 0, SQLT_RSET,
             (dvoid *) &amp;(inds[1]), &amp;(rlens[1]), &amp;(rcode[1]),
             0, (ub4 *) 0, OCI_DEFAULT);

/* Execute statement to get next result set*/
OCIStmtExecute(SVCH, STMH, ERRH, 1, 0, (CONST OCISnapshot *) 0,
               (OCISnapshot *) 0, OCI_DEFAULT);

/* Convert next result set to statement handle */
OCIResultSetToStmt(rset, ERRH);
rstmt = (OCIStmt *) rset;

/* Now rstmt will point to the second result set returned by the
remote stored procedure */

/* Repeat execution of get_next_result_set to get the output arguments */
</pre></div>
<!-- class="sect3" -->
<a id="TGSYU709"></a>
<div class="sect3"><a id="sthref10"></a>
<h4 class="sect3"><span class="secnum">2.2.2.2</span> PL/SQL Program Fetching from Result Sets in Sequential Mode</h4>
<p>Assume that the table <code>loc_emp</code> is a local table exactly like the Sybase emp table. The same assumption applies for <code>loc_dept</code>. <code>outargs</code> is a table with columns corresponding to the out arguments of the Sybase stored procedure.</p>
<pre>
create or replace package rcpackage is
  type RCTYPE is ref cursor;
end rcpackage;
/
</pre>
<pre>
declare
  rc1 rcpackage.rctype;
  rec1 loc_emp%rowtype;
  rc2 rcpackage.rctype;
  rec2 loc_dept%rowtype;
  rc3 rcpackage.rctype;
  rec3 outargs%rowtype;
  out_arg varchar2(255);

begin

  -- Execute procedure
  out_arg := null;  refcurproc@SYBS('Hello World', out_arg, rc1);

  -- Fetch 20 rows from the remote emp table and insert them into loc_emp
  for i in 1 .. 20 loop
    fetch rc1 into rec1;
    insert into loc_emp (rec1.empno, rec1.ename, rec1.job,
    rec1.mgr, rec1.hiredate, rec1.sal, rec1.comm, rec1.deptno);
  end loop;

  -- Close ref cursor
  close rc1;

  -- Get the next result set returned by the stored procedure
  rc2 := dbms_hs_result_set.get_next_result_set@SYBS;

  -- Fetch 5 rows from the remote dept table and insert them into loc_dept
  for i in 1 .. 5 loop
    fetch rc2 into rec2;
    insert into loc_dept values (rec2.deptno, rec2.dname, rec2.loc);
  end loop;

  --Close ref cursor
  close rc2;

  -- Get the output arguments from the remote stored procedure
  -- Since we are in sequential mode, they will be returned in the
  -- form of a result set
  rc3 := dbms_hs_result_set.get_next_result_set@SYBS;

  -- Fetch them and insert them into the outarguments table
  fetch rc3 into rec3;
  insert into outargs (rec3.outarg, rec3.retval);

  -- Close ref cursor
  close rc3;

end;
/
</pre></div>
<!-- class="sect3" --></div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="CFHFBJEI"></a><a id="TGSYU825"></a>
<div class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1"><span class="secnum">2.3</span> CHAR Semantics</h2>
<p>This feature allows the gateway to optionally run in <code>CHAR</code> Semantics mode. Rather than always describing Sybase <code>CHAR</code> columns as <code>CHAR(n BYTE)</code>, this feature describes them as <code>CHAR(n CHAR)</code> and <code>VARCHAR(n CHAR)</code>. The concept is similar to Oracle database <code>CHAR</code> Semantics. You need to specify <code>HS_NLS_LENGTH_SEMANTICS=CHAR</code> gateway parameter to activate this option. Refer to <a href="apd.htm#g637475">Appendix D</a> for more detail.</p>
</div>
<!-- class="sect1" -->
<a id="CFHHGGFB"></a><a id="TGSYU826"></a>
<div class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1"><span class="secnum">2.4</span> Multi-byte Character Sets Ratio Suppression</h2>
<p>This feature optionally suppresses the ratio expansion from Sybase database to Oracle database involving multi-byte character set. By default, Oracle gateways assume the worst ratio to prevent data being truncated or insufficient buffer size situation. However, if you have specific knowledge of your Sybase database and do not want the expansion to occur, you can specify <code>HS_KEEP_REMOTE_COLUMN_SIZE</code> parameter to suppress the expansion. Refer to <a href="apd.htm#g637475">Appendix D</a> for more detail.</p>
</div>
<!-- class="sect1" -->
<a id="CFHCACGE"></a><a id="TGSYU827"></a>
<div class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1"><span class="secnum">2.5</span> IPv6 Support</h2>
<p>Besides full IPv6 support between Oracle databases and the gateway, IPv6 is also supported between this gateway and Sybase database. Refer to the <code>HS_FDS_CONNECT_INFO</code> parameter in <a href="apd.htm#g637475">Appendix D</a> for more detail.</p>
</div>
<!-- class="sect1" -->
<a id="CFHHJFHH"></a><a id="TGSYU828"></a>
<div class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1"><span class="secnum">2.6</span> Gateway Session IDLE Timeout</h2>
<p>You can optionally choose to terminate long idle gateway sessions automatically with the gateway parameter <code>HS_IDLE_TIMEOUT</code>. Specifically, when a gateway session is idle for more than the specified time limit, the gateway session is terminated with any pending update rolled back.</p>
</div>
<!-- class="sect1" -->
<a id="i1005620"></a><a id="TGSYU710"></a>
<div class="sect1">
<h2 class="sect1"><span class="secnum">2.7</span> Database Compatibility Issues for Sybase</h2>
<p>Sybase and Oracle databases function differently in some areas, causing compatibility problems. The following compatibility issues are described in this section:</p>
<ul>
<li>
<p><a href="#i1007543">Chained Mode</a></p>
</li>
<li>
<p><a href="#i1007554">Column Definitions</a></p>
</li>
<li>
<p><a href="#CIHGGGIJ">Naming Rules</a></p>
</li>
<li>
<p><a href="#i1006680">Data Types</a></p>
</li>
<li>
<p><a href="#i1005849">Queries</a></p>
</li>
<li>
<p><a href="#i1005884">Locking</a></p>
</li>
<li>
<p><a href="#CFHDBIFD">Sybase Identifiers Length Limit</a></p>
</li>
</ul>
<a id="i1007543"></a><a id="TGSYU711"></a>
<div class="sect2">
<h3 class="sect2"><span class="secnum">2.7.1</span> Chained Mode<a id="sthref11"></a></h3>
<p><a id="sthref12"></a><a id="sthref13"></a>The gateway supports the ANSI-standard chained mode. Sybase stored procedures must be written for this mode. Running in chained mode allows the gateway to extend the Oracle two-phase commit protection to transactions updating Oracle and Sybase databases.</p>
</div>
<!-- class="sect2" -->
<a id="i1007554"></a><a id="TGSYU712"></a>
<div class="sect2">
<h3 class="sect2"><span class="secnum">2.7.2</span> Column Definitions</h3>
<p><a id="sthref14"></a>By default, a Sybase table column cannot contain null values unless <code>NULL</code> is specified in the column definition. In compliance with the ANSI standard, the Sybase database option "allow nulls by default" can be set to true to change the default column definition to <code>NULL</code>.</p>
<p>For an Oracle table, null values are allowed in a column unless <code>NOT NULL</code> is specified in the column definition.</p>
</div>
<!-- class="sect2" -->
<a id="CIHGGGIJ"></a><a id="TGSYU713"></a>
<div class="sect2">
<h3 class="sect2"><span class="secnum">2.7.3</span> Naming Rules</h3>
<p>Naming rule issues include the following:</p>
<ul>
<li>
<p><a href="#i1005677">Rules for Naming Objects</a></p>
</li>
<li>
<p><a href="#i1005706">Case Sensitivity</a></p>
</li>
</ul>
<a id="i1005677"></a><a id="TGSYU714"></a>
<div class="sect3">
<h4 class="sect3"><span class="secnum">2.7.3.1</span> <a id="sthref15"></a>Rules for Naming Objects</h4>
<p>Oracle and Sybase use different database object naming rules. For example, the maximum number of characters allowed for each object name can be different. Also, the use of single and double quotation marks, case sensitivity, and the use of alphanumeric characters can all be different.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink REFRN" href="../../server.112/e40402/toc.htm"><span class="italic">Oracle Database Reference</span></a> and Sybase documentation.</div>
</div>
<!-- class="sect3" -->
<a id="i1005706"></a><a id="TGSYU715"></a>
<div class="sect3">
<h4 class="sect3"><span class="secnum">2.7.3.2</span> <a id="sthref16"></a>Case Sensitivity</h4>
<p>The Oracle database defaults to uppercase unless you surround identifiers with double quote characters. For example, to refer to the Sybase table called <code>emp</code>, enter the name with double quote characters, as follows:</p>
<pre>
SQL&gt; SELECT * FROM "emp"@SYBS;
</pre>
<p>However, to refer to the Sybase table called <code>emp</code> owned by <code>SCOTT</code> from an Oracle application, enter the following:</p>
<pre>
SQL&gt; SELECT * FROM "Scott"."emp"@SYBS;
</pre>
<p>If the Sybase table called <code>emp</code> is owned by <code>SCOTT</code>, a table owner name in uppercase letters, you can enter the owner name without double quote characters, as follows:</p>
<pre>
SQL&gt; SELECT * FROM SCOTT."emp"@SYBS;
</pre>
<p>Or</p>
<pre>
SQL&gt; SELECT * FROM scott."emp"@SYBS;
</pre>
<p>Oracle recommends that you surround all Sybase object names with double quote characters and use the exact letter case for the object names as they appear in the Sybase data dictionary. This convention is not required when referring to the supported Oracle data dictionary tables or views listed in <a href="apc.htm#g667637">Appendix C, "Data Dictionary"</a>.</p>
<p>If existing applications cannot be changed according to these conventions, create views in Oracle to associate Sybase names to the correct letter case. For example, to refer to the Sybase table <code>emp</code> from an existing Oracle application by using only uppercase names, define the following view:</p>
<pre>
SQL&gt; CREATE VIEW EMP (EMPNO, ENAME, SAL, HIREDATE)
      AS SELECT "empno", "ename", "sal", "hiredate"
      FROM "emp"@SYBS;
</pre>
<p>With this view, the application can issue statements such as the following:</p>
<pre>
SQL&gt; SELECT EMPNO, ENAME FROM EMP;
</pre>
<p>Using views is a workaround solution that duplicates data dictionary information originating in the Sybase data dictionary. You must be prepared to update the Oracle view definitions whenever the data definitions for the corresponding tables are changed in the Sybase database.</p>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="i1006680"></a><a id="TGSYU716"></a>
<div class="sect2">
<h3 class="sect2"><span class="secnum">2.7.4</span> Data Types</h3>
<p>Data type issues include the following:</p>
<ul>
<li>
<p><a href="#i1007594">Binary Literal Notation</a></p>
</li>
<li>
<p><a href="#i1008049">Data Type Conversion</a></p>
</li>
</ul>
<a id="i1007594"></a><a id="TGSYU717"></a>
<div class="sect3">
<h4 class="sect3"><span class="secnum">2.7.4.1</span> Binary Literal Notation</h4>
<p>Oracle SQL uses hexadecimal digits surrounded by single quotes to express literal values being compared or inserted into columns defined as data type <code>RAW</code>.</p>
<p><a id="sthref17"></a>This notation is not converted to syntax compatible with the Sybase <code>VARBINARY</code> and <code>BINARY</code> data types (a 0x followed by hexadecimal digits, surrounded by single quotes).</p>
<p>For example, the following statement is not supported:</p>
<pre>
SQL&gt; INSERT INTO BINARY_TAB@SYBS VALUES ('0xff')
</pre>
<p>Where <code>BINARY_TAB</code> contains a column of data type <code>VARBINARY</code> or <code>BINARY</code>. Use bind variables when inserting into or updating <code>VARBINARY</code> and <code>BINARY</code> data types.</p>
</div>
<!-- class="sect3" -->
<a id="i1008049"></a><a id="TGSYU718"></a>
<div class="sect3">
<h4 class="sect3"><span class="secnum">2.7.4.2</span> <a id="sthref18"></a>Data Type Conversion</h4>
<p>Sybase does not support implicit date conversions. Such conversions must be explicit.</p>
<p>For example, the gateway issues an error for the following <code>SELECT</code> statement:</p>
<pre>
SELECT DATE_COL FROM TEST@SYBS WHERE DATE_COL = "1-JAN-2001";
</pre>
<p>To avoid problems with implicit conversions, add explicit conversions, as in the following:</p>
<pre>
SELECT DATE_COL FROM TEST@SYBS WHERE DATE_COL = TO_DATE("1-JAN-2001")
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="apa.htm#g635398">Appendix A, "Data Type Conversion"</a> for more information about restrictions on data types.</div>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="i1005849"></a><a id="TGSYU719"></a>
<div class="sect2">
<h3 class="sect2"><span class="secnum">2.7.5</span> Queries</h3>
<p>Query issues include the following:</p>
<ul>
<li>
<p><a href="#i1007676">Row Selection</a></p>
</li>
<li>
<p><a href="#i1005871">Empty Strings</a></p>
</li>
<li>
<p><a href="#i1005878">Empty Bind Variables</a></p>
</li>
</ul>
<a id="i1007676"></a><a id="TGSYU720"></a>
<div class="sect3">
<h4 class="sect3"><span class="secnum">2.7.5.1</span> Row Selection</h4>
<p>Sybase evaluates a query condition for all selected rows before returning any of the rows. If there is an error in the evaluation process for one or more rows, no rows are returned even though the remaining rows satisfy the condition.</p>
<p>Oracle evaluates the query condition row-by-row and returns a row when the evaluation is successful. Rows are returned until a row fails the evaluation.</p>
</div>
<!-- class="sect3" -->
<a id="i1005871"></a><a id="TGSYU721"></a>
<div class="sect3">
<h4 class="sect3"><span class="secnum">2.7.5.2</span> Empty Strings</h4>
<p>Oracle processes an empty string in a SQL statement as a null value. Sybase processes an empty string as an empty string.</p>
<p>When comparing an empty string, the gateway passes literal empty strings to the Sybase database without any conversion. If you intended an empty string to represent a null value, Sybase does not process the statement that way; it uses the empty string.</p>
<p>You can avoid this problem by using <code>NULL</code> or <code>IS NULL</code> in the SQL statement instead of the empty string syntax, as in the following example:</p>
<pre>
SELECT * from "emp"@SYBS where "ename" IS NULL;
</pre>
<p>Selecting an empty string</p>
<p>For <code>VARCHAR</code> columns, the gateway returns an empty string to the Oracle database as <code>NULL</code> value.</p>
<p>For <code>CHAR</code> columns, the gateway returns the full size of the column with each character as empty space (' ').</p>
</div>
<!-- class="sect3" -->
<a id="i1005878"></a><a id="TGSYU722"></a>
<div class="sect3">
<h4 class="sect3"><span class="secnum">2.7.5.3</span> Empty Bind Variables</h4>
<p>For <code>VARCHAR</code> bind variables, the gateway passes empty bind variables to the Sybase database as a <code>NULL</code> value.</p>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="i1005884"></a><a id="TGSYU723"></a>
<div class="sect2">
<h3 class="sect2"><span class="secnum">2.7.6</span> Locking<a id="sthref19"></a></h3>
<p>The locking model for a Sybase database differs significantly from the Oracle model. The gateway depends on the underlying Sybase behavior, so Oracle applications that access Sybase through the gateway can be affected by the following possible scenarios:</p>
<ul>
<li>
<p>Read access might block write access</p>
</li>
<li>
<p>Write access might block read access</p>
</li>
<li>
<p>Statement-level read consistency is not guaranteed</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
Sybase documentation for information about the Sybase locking model.</div>
</li>
</ul>
</div>
<!-- class="sect2" -->
<a id="CFHDBIFD"></a><a id="TGSYU829"></a>
<div class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">2.7.7</span> Sybase Identifiers Length Limit</h3>
<p>By default, the gateway will always quote identifiers. However, certain Sybase releases have a limit of 30 characters for identifiers such as table or column names and quotes are considered part of the names when checking against this limit. Therefore, when quotes are used, you can only specify 28 characters. In order to support the maximum length limit in those Sybase releases, you need to specify <code>HS_FDS_QUOTE_IDENTIFIER=FALSE</code> in your gateway initialization parameter file. Setting this initialization parameter will cause the gateway to send identifiers without quotes. However, it has the side effect of precluding the use of identifiers that contain dots (.) or spaces, and the identifiers will follow the case sensitivity of the Sybase database being used.</p>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="i1005911"></a><a id="TGSYU724"></a>
<div class="sect1">
<h2 class="sect1"><span class="secnum">2.8</span> Known Restrictions<a id="sthref20"></a></h2>
<p>If you encounter incompatibility problems not listed in this section or in <a href="#i1006159">"Known Problems"</a>, contact Oracle Support Services. The following section describes the known restrictions and includes suggestions for dealing with them when possible:</p>
<ul>
<li>
<p><a href="#i1006816">Transactional Integrity</a></p>
</li>
<li>
<p><a href="#i1006829">Transaction Capability</a></p>
</li>
<li>
<p><a href="#i1006844">COMMIT or ROLLBACK in PL/SQL Cursor Loops Closes Open Cursors</a></p>
</li>
<li>
<p><a href="#i1007762">Stored Procedures</a></p>
</li>
<li>
<p><a href="#i1006851">Pass-Through Feature</a></p>
</li>
<li>
<p><a href="#i1007802">Sybase NCHAR and NVARCHAR Data Types</a></p>
</li>
<li>
<p><a href="#i1006889">SQL Syntax</a></p>
</li>
<li>
<p><a href="#i1006961">SQL*Plus COPY Command with Lowercase Table Names</a></p>
</li>
<li>
<p><a href="#i1006964">Database Links</a></p>
</li>
<li>
<p><a href="#CFHFCHBD">CALLBACK links</a></p>
</li>
</ul>
<p>The following restriction also applies:</p>
<ul>
<li>
<p>When negative numbers are used as the second parameter in a <code>SUBSTR</code> function, incorrect results are returned. This is due to incompatibility between the Oracle <code>SUBSTR</code> function and the equivalent in Sybase.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
If you have any questions or concerns about the restrictions, contact Oracle Support Services.</div>
</li>
</ul>
<a id="i1006816"></a><a id="TGSYU725"></a>
<div class="sect2">
<h3 class="sect2"><span class="secnum">2.8.1</span> Transactional Integrity <a id="sthref21"></a></h3>
<p>The gateway cannot guarantee transactional integrity in the following cases:</p>
<ul>
<li>
<p>When a statement that is processed by the gateway causes an implicit commit in the target database</p>
</li>
<li>
<p>When the target database is configured to work in autocommit mode</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
Oracle strongly recommends the following:
<ul>
<li>
<p>If you know that executing a particular statement causes an implicit commit in the target database, then ensure that this statement is executed in its own transaction.</p>
</li>
<li>
<p>Do not configure the target database to work in autocommit mode.</p>
</li>
</ul>
</div>
</li>
</ul>
</div>
<!-- class="sect2" -->
<a id="i1006829"></a><a id="TGSYU726"></a>
<div class="sect2">
<h3 class="sect2"><span class="secnum">2.8.2</span> Transaction Capability <a id="sthref22"></a></h3>
<p><a id="sthref23"></a>The gateway does not support savepoints. If a distributed update transaction is under way involving the gateway and a user attempts to create a savepoint, the following error occurs:</p>
<pre>
<a id="sthref24"></a>ORA-02070: database dblink does not support savepoint in this context<a id="sthref25"></a>
</pre>
<p><a id="sthref26"></a>By default, the gateway is configured as <code>COMMIT_CONFIRM</code> and it is always the <a id="sthref27"></a>commit point site when the Sybase database is updated by the transaction.</p>
</div>
<!-- class="sect2" -->
<a id="i1006844"></a><a id="TGSYU727"></a>
<div class="sect2">
<h3 class="sect2"><span class="secnum">2.8.3</span> COMMIT or ROLLBACK in PL/SQL Cursor Loops Closes Open Cursors <a id="sthref28"></a><a id="sthref29"></a><a id="sthref30"></a></h3>
<p>Any <code>COMMIT</code> or <code>ROLLBACK</code> issued in a PL/SQL cursor loop closes all open cursors, which can result in the following error:</p>
<pre>
ORA-1002:  fetch out of sequence 
</pre>
<p>To prevent this error, move the <code>COMMIT</code> or <code>ROLLBACK</code> statement outside the cursor loop.</p>
</div>
<!-- class="sect2" -->
<a id="i1007762"></a><a id="TGSYU728"></a>
<div class="sect2">
<h3 class="sect2"><span class="secnum">2.8.4</span> Stored Procedures<a id="sthref31"></a></h3>
<p>Changes issued through stored procedures that embed commits or rollbacks cannot be controlled by the Oracle transaction manager or Oracle <code>COMMIT</code> or <code>ROLLBACK</code> commands.</p>
<p>When accessing stored procedures with result sets through the Oracle Database Gateway for Sybase, you must work in the sequential mode of Heterogeneous Services.</p>
<p>When accessing stored procedures with multiple result sets through the Oracle Database Gateway for Sybase, you must read all the result sets before continuing.</p>
<p>Output parameters of stored procedures must be initialized to a <code>NULL</code> value.</p>
<p>Oracle Database Gateway for Sybase does not support output parameters or stored procedures with output parameters, inside a pass through query.</p>
</div>
<!-- class="sect2" -->
<a id="i1006851"></a><a id="TGSYU729"></a>
<div class="sect2">
<h3 class="sect2"><span class="secnum">2.8.5</span> Pass-Through Feature</h3>
<p>DDL statements executed by Sybase using the gateway <a id="sthref32"></a>pass-through feature might fail if they are in a multi-statement transaction. Set the Sybase option "ddl in tran" to allow DDL statements in a transaction.</p>
<p>Oracle recommends that you place a <a id="sthref33"></a>DDL statement in its own transaction when executing such a statement with the pass-through feature. An explicit <code>COMMIT</code> must be issued after the DDL statement.</p>
<p><a id="sthref34"></a>If the SQL statements being passed through the gateway result in an implicit commit at the Sybase database, the Oracle transaction manager is unaware of the commit and an Oracle <code>ROLLBACK</code> command cannot be used to roll back the transaction.</p>
</div>
<!-- class="sect2" -->
<a id="i1007802"></a><a id="TGSYU730"></a>
<div class="sect2">
<h3 class="sect2"><span class="secnum">2.8.6</span> Sybase NCHAR and NVARCHAR Data Types</h3>
<p>The gateway cannot select a column defined with a Sybase <code>NCHAR</code> or <code>NVARCHAR</code> data type.</p>
</div>
<!-- class="sect2" -->
<a id="i1006889"></a><a id="TGSYU731"></a>
<div class="sect2">
<h3 class="sect2"><span class="secnum">2.8.7</span> SQL Syntax</h3>
<p>This section lists restrictions on the following SQL syntax:</p>
<ul>
<li>
<p><a href="#i1007852">WHERE CURRENT OF Clause</a></p>
</li>
<li>
<p><a href="#i1007857">CONNECT BY Clause</a></p>
</li>
<li>
<p><a href="#i1007875">ROWID</a></p>
</li>
<li>
<p><a href="#i1007880">Subqueries in INSERT Statement</a></p>
</li>
<li>
<p><a href="#i1008182">EXPLAIN PLAN Statement</a></p>
</li>
<li>
<p><a href="#CFHBBICA">Callback Support</a></p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="apb.htm#g636841">Appendix B, "Supported SQL Syntax and Functions"</a> for more information about restrictions on SQL syntax.</div>
<a id="i1007852"></a><a id="TGSYU732"></a>
<div class="sect3">
<h4 class="sect3"><span class="secnum">2.8.7.1</span> <a id="sthref35"></a>WHERE CURRENT OF Clause</h4>
<p><code>UPDATE</code> and <code>DELETE</code> statements with the <code>WHERE CURRENT OF</code> clause are not supported by the gateway because they rely on the Oracle <a id="sthref36"></a><code>ROWID</code> implementation. To update or delete a specific row through the gateway, a condition style <code>WHERE</code> clause must be used.</p>
</div>
<!-- class="sect3" -->
<a id="i1007857"></a><a id="TGSYU733"></a>
<div class="sect3">
<h4 class="sect3"><span class="secnum">2.8.7.2</span> <a id="sthref37"></a>CONNECT BY Clause</h4>
<p>The gateway does not support the <code>CONNECT BY</code> clause in a <code>SELECT</code> statement.</p>
</div>
<!-- class="sect3" -->
<a id="i1007875"></a><a id="TGSYU734"></a>
<div class="sect3">
<h4 class="sect3"><span class="secnum">2.8.7.3</span> ROWID<a id="sthref38"></a></h4>
<p>The Oracle <code>ROWID</code> implementation is not supported.</p>
</div>
<!-- class="sect3" -->
<a id="i1007880"></a><a id="TGSYU735"></a>
<div class="sect3">
<h4 class="sect3"><span class="secnum">2.8.7.4</span> <a id="sthref39"></a>Subqueries in INSERT Statement</h4>
<p>Subqueries of <code>INSERT</code> statements cannot use multiple aliases for the same table. For example, the following statement is not supported:</p>
<pre>
SQL&gt; INSERT INTO "emp_target"@SYBS
         SELECT a."empno" FROM "emp_source"@SYBS a,
            "emp_source"@SYBS b WHERE b."empno"=9999
</pre></div>
<!-- class="sect3" -->
<a id="i1008182"></a><a id="TGSYU736"></a>
<div class="sect3">
<h4 class="sect3"><span class="secnum">2.8.7.5</span> EXPLAIN PLAN Statement</h4>
<p>The <code>EXPLAIN PLAN</code> statement is not supported.</p>
</div>
<!-- class="sect3" -->
<a id="CFHBBICA"></a><a id="TGSYU737"></a>
<div class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3"><span class="secnum">2.8.7.6</span> Callback Support</h4>
<p>SQL statements that require the gateway to callback to Oracle database would not be supported.</p>
<p>The following categories of SQL statements will result in a callback:</p>
<ul>
<li>
<p>Any DML with a sub-select, which refers to a table in Oracle database. For example:</p>
<pre>
INSERT INTO emp@non_oracle SELECT * FROM oracle_emp;
</pre></li>
<li>
<p>Any <code>DELETE</code>, <code>INSERT</code>, <code>UPDATE</code> or "<code>SELECT... FOR UPDATE..."</code> SQL statement containing SQL functions or statements that needs to be executed at the originating Oracle database.</p>
<p>These SQL functions include <code>USER</code>, <code>USERENV</code>, and <code>SYSDATE</code>, and the SQL statements are in selects of data from the originating Oracle database. For example:</p>
<pre>
DELETE FROM emp@non_oracle WHERE hiredate &gt; SYSDATE;
</pre>
<pre>
SELECT ename FROM tkhoemp@non_oracle
WHERE hiredate IN (SELECT hiredate FROM tkhoemp)
FOR UPDATE OF empno;
</pre></li>
<li>
<p>Any SQL statement that involves a table in Oracle database, and a <code>LONG</code> or <code>LOB</code> column in a remote table. For example:</p>
<pre>
SELECT a.long1, b.empno FROM scott.table@non_oracle a, emp b
WHERE a.id=b.empno; 
</pre>
<pre>
SELECT a.long1, b.dummy FROM table_non@non_oracle a, dual b;
</pre></li>
</ul>
<p>where <code>a.long1</code> is a <code>LONG</code> column.</p>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="i1006961"></a><a id="TGSYU738"></a>
<div class="sect2">
<h3 class="sect2"><span class="secnum">2.8.8</span> <a id="sthref40"></a>SQL*Plus COPY Command with Lowercase Table Names</h3>
<p>You need to use double quotes to wrap around lowercase table names.</p>
<p>For example:</p>
<pre>
copy from tkhouser/tkhouser@inst1 insert loc_tkhodept using select * from "tkhodept"@holink2;
</pre></div>
<!-- class="sect2" -->
<a id="i1006964"></a><a id="TGSYU739"></a>
<div class="sect2">
<h3 class="sect2"><span class="secnum">2.8.9</span> Database Links</h3>
<p>The gateway is not multithreaded and cannot support shared database links. Each gateway session spawns a separate gateway process and connections cannot be shared.</p>
</div>
<!-- class="sect2" -->
<a id="CFHFCHBD"></a><a id="TGSYU830"></a>
<div class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">2.8.10</span> CALLBACK links</h3>
<p>Oracle Database Gateway for Sybase does not support <code>CALLBACK</code> links. Trying a <code>CALLBACK</code> link with the gateway will return the following error message:</p>
<pre>
ORA-02025: All tables in the SQL statement must be at the remote database
</pre></div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="i1006159"></a><a id="TGSYU740"></a>
<div class="sect1">
<h2 class="sect1"><span class="secnum">2.9</span> Known Problems</h2>
<p>This section describes known problems and includes suggestions for correcting them when possible. If you have any questions or concerns about the problems, contact Oracle Support Services. A current list of problems is available online. Contact your local Oracle office for information about accessing the list.</p>
<p>The following known problems are described in this section:</p>
<ul>
<li>
<p><a href="#i1008246">Encrypted Format Login</a></p>
</li>
<li>
<p><a href="#i1007066">Date Arithmetic</a></p>
</li>
<li>
<p><a href="#i1007078">Sybase IMAGE and TEXT Data Type</a></p>
</li>
<li>
<p><a href="#i1007085">String Functions</a></p>
</li>
<li>
<p><a href="#i1007102">Schema Names and PL/SQL</a></p>
</li>
<li>
<p><a href="#i1008015">Data Dictionary Views and PL/SQL</a></p>
</li>
<li>
<p><a href="#i1008019">Stored Procedures</a></p>
</li>
</ul>
<a id="i1008246"></a><a id="TGSYU741"></a>
<div class="sect2">
<h3 class="sect2"><span class="secnum">2.9.1</span> <a id="sthref41"></a><a id="sthref42"></a>Encrypted Format Login<a id="sthref43"></a></h3>
<p>Oracle database no longer supports the initialization parameter <code>DBLINK_ENCRYPT_LOGIN</code>. Up to version 7.3, this parameter's default TRUE value prevented the password for the login user ID from being sent over the network (in the clear). Later versions automatically encrypt the password.</p>
</div>
<!-- class="sect2" -->
<a id="i1007066"></a><a id="TGSYU742"></a>
<div class="sect2">
<h3 class="sect2"><span class="secnum">2.9.2</span> Date Arithmetic</h3>
<p>The following SQL expressions do not function correctly with the gateway:</p>
<pre>
<span class="italic">date </span>+<span class="italic"> numbernumber </span>+<span class="italic"> datedate - numberdate1 - date2</span>
</pre>
<p>Statements with the preceding expressions are sent to the Sybase database without any translation. Since Sybase does not support these date arithmetic functions, the statements return an error.</p>
</div>
<!-- class="sect2" -->
<a id="i1007078"></a><a id="TGSYU743"></a>
<div class="sect2">
<h3 class="sect2"><span class="secnum">2.9.3</span> Sybase IMAGE and TEXT Data Type</h3>
<p>The following restrictions apply when using <code>IMAGE</code> and <code>TEXT</code> data types:</p>
<ul>
<li>
<p>An unsupported SQL function cannot be used in a SQL statement that accesses a column defined as Sybase data type <code>IMAGE</code> or <code>TEXT</code>.</p>
</li>
<li>
<p>You cannot use SQL*Plus to select data from a column defined as Sybase data type <code>IMAGE</code> or <code>TEXT</code> when the data is greater than 80 characters in length. Oracle recommends using Pro*C or Oracle Call Interface to access such data in a Sybase database.</p>
</li>
<li>
<p><code>IMAGE</code> and <code>TEXT</code> data cannot be read through pass-through queries.</p>
</li>
</ul>
<p>The gateway does not support the PL/SQL function <code>COLUMN_VALUE_LONG</code> of the <code>DBMS_SQL</code> package.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="apb.htm#g636841">Appendix B, "Supported SQL Syntax and Functions"</a> for more information about restrictions on SQL syntax.</div>
</div>
<!-- class="sect2" -->
<a id="i1007085"></a><a id="TGSYU744"></a>
<div class="sect2">
<h3 class="sect2"><span class="secnum">2.9.4</span> String Functions</h3>
<p>If you concatenate numeric literals using the "<code>||</code>" <a id="sthref44"></a>operator when using the gateway to query a Sybase database, the result is an arithmetic addition. For example, the result of the following statement is 18:</p>
<pre>
SQL&gt; SELECT 9 || 9 FROM DUAL@SYBS;
</pre>
<p>The result is <code>99</code> when using Oracle to query an Oracle database.</p>
</div>
<!-- class="sect2" -->
<a id="i1007102"></a><a id="TGSYU745"></a>
<div class="sect2">
<h3 class="sect2"><span class="secnum">2.9.5</span> Schema Names and PL/SQL<a id="sthref45"></a></h3>
<p>If you do not prefix a Sybase database object with its schema name in a SQL statement within a PL/SQL block, the following error message occurs:</p>
<pre>
ORA-6550 PLS-201 Identifier <span class="italic">table_name</span> must be declared.
</pre>
<p>Change the SQL statement to include the schema name of the object.</p>
</div>
<!-- class="sect2" -->
<a id="i1008015"></a><a id="TGSYU746"></a>
<div class="sect2">
<h3 class="sect2"><span class="secnum">2.9.6</span> Data Dictionary Views and PL/SQL<a id="sthref46"></a></h3>
<p>You cannot refer to data dictionary views in SQL statements that are inside a PL/SQL block.</p>
</div>
<!-- class="sect2" -->
<a id="i1008019"></a><a id="TGSYU747"></a>
<div class="sect2">
<h3 class="sect2"><span class="secnum">2.9.7</span> Stored Procedures<a id="sthref47"></a></h3>
<p>Return values of stored procedures that return result sets are incorrect.</p>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment317">
<tr>
<td class="cellalignment324">
<table class="cellalignment322">
<tr>
<td class="cellalignment321"><a href="intro.htm"><img width="24" height="24" src="../../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment321"><a href="casestudies.htm"><img width="24" height="24" src="../../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;2002, 2012,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment326">
<table class="cellalignment320">
<tr>
<td class="cellalignment321"><a href="../../index.htm"><img width="24" height="24" src="../../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment321"><a href="../../nav/portal_booklist.htm"><img width="24" height="24" src="../../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment321"><a href="toc.htm"><img width="24" height="24" src="../../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment321"><a href="index.htm"><img width="24" height="24" src="../../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment321"><a href="../../nav/mindx.htm"><img width="24" height="24" src="../../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment321"><a href="../../dcommon/html/feedback.htm"><img width="24" height="24" src="../../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>
</body>
</html>
