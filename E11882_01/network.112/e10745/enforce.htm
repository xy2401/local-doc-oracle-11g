<!DOCTYPE html>
<html lang="en" >
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1">
<meta charset="utf-8">
<title>Implementing Policy Enforcement Options and Labeling Functions</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Version 5.1.2 Build 737" />
<meta name="dcterms.created" content="2013-08-19T10:59:35Z" />
<meta name="robots" content="all" />
<meta name="dcterms.title" content="Label Security Administrator's Guide" />
<meta name="dcterms.identifier" content="E10745-04" />
<meta name="dcterms.isVersionOf" content="OLSAG" />
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;2000, 2013,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved." />
<link rel="Start" href="../../index.htm" title="Home" type="text/html" />
<link rel="Copyright" href="../../dcommon/html/cpyr.htm" title="Copyright" type="text/html" />

<script type="application/javascript"  src="../../dcommon/js/headfoot.js"></script>
<script type="application/javascript"  src="../../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html" />
<link rel="Index" href="index.htm" title="Index" type="text/html" />
<link rel="Prev" href="admpriv.htm" title="Previous" type="text/html" />
<link rel="Next" href="admpolcy.htm" title="Next" type="text/html" />
<link rel="alternate" href="../e10745.pdf" title="PDF version" type="application/pdf" />
<link rel="schema.dcterms" href="http://purl.org/dc/terms/" />
<link rel="stylesheet" href="../../dcommon/css/fusiondoc.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/header.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/footer.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/fonts.css">
<link rel="stylesheet" href="../../dcommon/css/foundation.css">
<link rel="stylesheet" href="../../dcommon/css/codemirror.css">
<link rel="stylesheet" type="text/css" title="Default" href="../../nav/css/html5.css">
<link rel="stylesheet" href="../../dcommon/css/respond-480-tablet.css">
<link rel="stylesheet" href="../../dcommon/css/respond-768-laptop.css">
<link rel="stylesheet" href="../../dcommon/css/respond-1140-deskop.css">
<script type="application/javascript" src="../../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">17/30</span> <!-- End Header -->
<div id="OLSAG055" class="chapter"><a id="i1017341"></a>
<h1 class="chapter"><span class="secnum">9</span> Implementing Policy Enforcement Options and Labeling Functions</h1>
<p>This chapter explains how to customize the enforcement of Oracle Label Security policies and how to implement labeling functions, in the following sections:</p>
<ul>
<li>
<p><a href="#i1010554">Choosing Policy Options</a></p>
</li>
<li>
<p><a href="#i1010887">Using a Labeling Function</a></p>
</li>
<li>
<p><a href="#i1010992">Inserting Labeled Data Using Policy Options and Labeling Functions</a></p>
</li>
<li>
<p><a href="#i1013777">Updating Labeled Data Using Policy Options and Labeling Functions</a></p>
</li>
<li>
<p><a href="#i1013784">Deleting Labeled Data Using Policy Options and Labeling Functions</a></p>
</li>
<li>
<p><a href="#i1011154">Using a SQL Predicate with an Oracle Label Security Policy</a></p>
</li>
</ul>
<a id="i1010554"></a>
<div id="OLSAG056" class="sect1">
<h2 class="sect1"><span class="secnum">9.1</span> Choosing Policy Options</h2>
<p>This section introduces the policy options, and discusses their use.</p>
<ul>
<li>
<p><a href="#i1010585">Overview of Policy Enforcement Options</a></p>
</li>
<li>
<p><a href="#i1015793">The HIDE Policy Column Option</a></p>
</li>
<li>
<p><a href="#i1010712">The Label Management Enforcement Options</a></p>
</li>
<li>
<p><a href="#i1010735">The Access Control Enforcement Options</a></p>
</li>
<li>
<p><a href="#i1014512">The Overriding Enforcement Options</a></p>
</li>
<li>
<p><a href="#i1010801">Guidelines for Using the Policy Enforcement Options</a></p>
</li>
<li>
<p><a href="#i1010847">Exemptions from Oracle Label Security Policy Enforcement</a></p>
</li>
</ul>
<a id="i1010585"></a>
<div id="OLSAG3299" class="sect2">
<h3 class="sect2"><span class="secnum">9.1.1</span> Overview of Policy Enforcement Options</h3>
<p><a id="sthref524"></a><a id="sthref525"></a>Of all the enforcement controls that Oracle Label Security permits, the administrator must choose those that meet the needs of the given application. This means identifying levels of data sensitivity to exposure, alteration, or misuse, as well as identifying which users have the need or the right to access or alter such data. The policy enforcement options enable administrators to fine-tune users' abilities to read or write data or labels.</p>
<p>These options can operate at three levels:</p>
<div id="OLSAG3300" class="tblformal">
<p class="titleintable"><a id="sthref526"></a><a id="sthref527"></a>Table 9-1 When Policy Enforcement Options Take Effect</p>
<table class="cellalignment2269" title="When Policy Enforcement Options Take Effect" summary="This table lists the three levels at which a policy enforcement option can be set and describes when user operations are affected." dir="ltr">
<thead>
<tr class="cellalignment2260">
<th class="cellalignment2267" id="r1c1-t2">Level at which option set</th>
<th class="cellalignment2267" id="r1c2-t2">Options set at this level affect user operations ...</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2260">
<td class="cellalignment2268" id="r2c1-t2" headers="r1c1-t2">
<p>Policy Level</p>
</td>
<td class="cellalignment2268" headers="r2c1-t2 r1c2-t2">
<p>... only when the policy has been applied to the table or schema</p>
</td>
</tr>
<tr class="cellalignment2260">
<td class="cellalignment2268" id="r3c1-t2" headers="r1c1-t2">
<p>Schema Level</p>
</td>
<td class="cellalignment2268" headers="r3c1-t2 r1c2-t2">
<p>... whenever a user acts in this schema</p>
</td>
</tr>
<tr class="cellalignment2260">
<td class="cellalignment2268" id="r4c1-t2" headers="r1c1-t2">
<p>Table Level</p>
</td>
<td class="cellalignment2268" headers="r4c1-t2 r1c2-t2">
<p>... whenever a user acts in this table</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<p>When you apply a policy to a table or schema, you can specify the enforcement options that are to constrain use of that table or schema. If you do not specify enforcement options at that time, then the default enforcement options you specified when you created that policy are used automatically.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="admpolcy.htm#i1011390">"Applying a Policy with SA_POLICY_ADMIN.APPLY_TABLE_POLICY"</a></p>
</li>
<li>
<p><a href="creatpol.htm#i1009771">"Creating a Policy with SA_SYSDBA.CREATE_POLICY"</a></p>
</li>
</ul>
</div>
<p>These options customize your policy enforcement to meet your security requirements as to READ access, WRITE access, and label changes. You can also specify whether the label column should be displayed or <a id="sthref528"></a>hidden. You can choose to enforce some or all of the policy options for any protected table by specifying only those you want.</p>
<p>Optionally, you can assign each table a labeling function, which determines the label of any row inserted or updated in that table. You can also specify, optionally, a <span class="italic">SQL</span> predicate for a table, to control which rows are accessible to users, based on their labels.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="#i1010887">Using a Labeling Function</a>.</p>
</li>
<li>
<p><a href="#i1011154">Using a SQL Predicate with an Oracle Label Security Policy</a>.</p>
</li>
</ul>
</div>
<p>When <a id="sthref529"></a><a id="sthref530"></a>Oracle Label Security policy enforcement options are applied, they control which rows are accessible to view or to insert, update, or delete.</p>
<p><a href="#g1018017">Table 9-2, "Policy Enforcement Options"</a> lists the options in three categories:</p>
<ul>
<li>
<p>Label management options, ensuring that data labels written for inserted or updated rows do not violate policies set for such labels</p>
</li>
<li>
<p>Access control options, ensuring that only rows whose labels meet established policies are accessible for SELECT, UPDATE, INSERT, or DELETE operations.</p>
</li>
<li>
<p>Overriding options, which can suspend or apply all other enforcement options.</p>
</li>
</ul>
<div id="OLSAG3301" class="tblformalwide">
<p class="titleintable"><a id="sthref531"></a><a id="g1018017"></a>Table 9-2 Policy Enforcement Options</p>
<table class="cellalignment2266" title="Policy Enforcement Options " summary="This table provides links to types of policy enforcement options and then lists and describes the options within each type." dir="ltr">
<thead>
<tr class="cellalignment2260">
<th class="cellalignment2267" id="r1c1-t5">Type of Enforcement</th>
<th class="cellalignment2267" id="r1c2-t5">Option</th>
<th class="cellalignment2267" id="r1c3-t5">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2260">
<td class="cellalignment2268" id="r2c1-t5" headers="r1c1-t5">
<p><a href="#i1010712">The Label Management Enforcement Options</a></p>
</td>
<td class="cellalignment2268" headers="r2c1-t5 r1c2-t5">
<p><a id="sthref532"></a>LABEL_DEFAULT</p>
</td>
<td class="cellalignment2268" headers="r2c1-t5 r1c3-t5">
<p>Uses the session's default row label value unless the user explicitly specifies a label on INSERT.</p>
</td>
</tr>
<tr class="cellalignment2260">
<td class="cellalignment2268" id="r3c1-t5" headers="r1c1-t5">&nbsp;</td>
<td class="cellalignment2268" headers="r3c1-t5 r1c2-t5">
<p><a id="sthref533"></a>LABEL_UPDATE</p>
</td>
<td class="cellalignment2268" headers="r3c1-t5 r1c3-t5">
<p>Applies policy enforcement to UPDATE operations that set or change the value of a label attached to a row. The WRITEUP, <a id="sthref534"></a>WRITEDOWN, and <a id="sthref535"></a>WRITEACROSS privileges are enforced only if the LABEL_UPDATE option is active.</p>
</td>
</tr>
<tr class="cellalignment2260">
<td class="cellalignment2268" id="r4c1-t5" headers="r1c1-t5">&nbsp;</td>
<td class="cellalignment2268" headers="r4c1-t5 r1c2-t5">
<p><a id="sthref536"></a>CHECK_CONTROL</p>
</td>
<td class="cellalignment2268" headers="r4c1-t5 r1c3-t5">
<p>Applies READ_CONTROL policy enforcement to INSERT and UPDATE statements to assure that the new row label is read-accessible.</p>
</td>
</tr>
<tr class="cellalignment2260">
<td class="cellalignment2268" id="r5c1-t5" headers="r1c1-t5">
<p><a href="#i1010735">The Access Control Enforcement Options</a></p>
</td>
<td class="cellalignment2268" headers="r5c1-t5 r1c2-t5">
<p><a id="sthref537"></a>READ_CONTROL</p>
</td>
<td class="cellalignment2268" headers="r5c1-t5 r1c3-t5">
<p>Applies policy enforcement to all queries. Only authorized rows are accessible for SELECT, UPDATE, and DELETE operations.</p>
</td>
</tr>
<tr class="cellalignment2260">
<td class="cellalignment2268" id="r6c1-t5" headers="r1c1-t5">&nbsp;</td>
<td class="cellalignment2268" headers="r6c1-t5 r1c2-t5">
<p><a id="sthref538"></a>WRITE_CONTROL</p>
</td>
<td class="cellalignment2268" headers="r6c1-t5 r1c3-t5">
<p>Determines the ability to INSERT, UPDATE, and DELETE data in a row. If this option is active, it enforces <a href="#i1010783">INSERT_CONTROL, UPDATE_CONTROL, and DELETE_CONTROL</a>.</p>
</td>
</tr>
<tr class="cellalignment2260">
<td class="cellalignment2268" id="r7c1-t5" headers="r1c1-t5">&nbsp;</td>
<td class="cellalignment2268" headers="r7c1-t5 r1c2-t5">
<p><a id="sthref539"></a>INSERT_CONTROL</p>
</td>
<td class="cellalignment2268" headers="r7c1-t5 r1c3-t5">
<p>Applies policy enforcement to INSERT operations, according to the algorithm for write access described in <a href="accpriv.htm#i1007786">Figure 3-8, "Label Evaluation Process for Write Access"</a>.</p>
</td>
</tr>
<tr class="cellalignment2260">
<td class="cellalignment2268" id="r8c1-t5" headers="r1c1-t5">&nbsp;</td>
<td class="cellalignment2268" headers="r8c1-t5 r1c2-t5">
<p><a id="sthref540"></a>DELETE_CONTROL</p>
</td>
<td class="cellalignment2268" headers="r8c1-t5 r1c3-t5">
<p>Applies policy enforcement to DELETE operations, according to the algorithm for write access described in <a href="accpriv.htm#i1007786">Figure 3-8, "Label Evaluation Process for Write Access"</a>.</p>
</td>
</tr>
<tr class="cellalignment2260">
<td class="cellalignment2268" id="r9c1-t5" headers="r1c1-t5">&nbsp;</td>
<td class="cellalignment2268" headers="r9c1-t5 r1c2-t5">
<p><a id="sthref541"></a>UPDATE_CONTROL</p>
</td>
<td class="cellalignment2268" headers="r9c1-t5 r1c3-t5">
<p>Applies policy enforcement to UPDATE operations on the data columns within a row, according to the algorithm for write access described in <a href="accpriv.htm#i1007786">Figure 3-8, "Label Evaluation Process for Write Access"</a>.</p>
</td>
</tr>
<tr class="cellalignment2260">
<td class="cellalignment2268" id="r10c1-t5" headers="r1c1-t5">
<p><a href="#i1014512">The Overriding Enforcement Options</a></p>
</td>
<td class="cellalignment2268" headers="r10c1-t5 r1c2-t5">
<p><a id="sthref542"></a>ALL_CONTROL</p>
</td>
<td class="cellalignment2268" headers="r10c1-t5 r1c3-t5">
<p>Applies all enforcement options.</p>
</td>
</tr>
<tr class="cellalignment2260">
<td class="cellalignment2268" id="r11c1-t5" headers="r1c1-t5">&nbsp;</td>
<td class="cellalignment2268" headers="r11c1-t5 r1c2-t5">
<p><a id="sthref543"></a>NO_CONTROL</p>
</td>
<td class="cellalignment2268" headers="r11c1-t5 r1c3-t5">
<p>Applies no enforcement options. A labeling function or a SQL predicate can nonetheless be applied.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformalwide" -->
<p>Remember that even when Oracle Label Security is applicable to a table, some DML operations may not be covered by the policies being applied. The policy enforcement options set by the administrator determine both the SQL processing behavior and what an authorized user can actually see in response to a query on a protected table. Except where noted, this chapter assumes that <a id="sthref544"></a>ALL_CONTROL is active, meaning that all enforcement options are in effect. If users attempt to perform an operation for which they are not authorized, then an error message is raised and the SQL statement fails.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="releas.htm#i1013577">"Implementing Inverse Groups with the INVERSE_GROUP Enforcement Option"</a></div>
<p>Understanding the relationships among these policy enforcement options, and what SQL statements they control, is essential to their effective use in designing and implementing your Oracle Label Security policies.</p>
<p><a href="#g1018017">Table 9-2, "Policy Enforcement Options"</a> indicates these relationships.</p>
<div id="OLSAG3302" class="tblformalwide">
<p class="titleintable"><a id="sthref545"></a><a id="sthref546"></a>Table 9-3 What Policy Enforcement Options Control</p>
<table class="cellalignment2266" title="What Policy Enforcement Options Control " summary="This table lists each policy enforcement control and describes the SQL operations it controls, the criteria it uses, and the effects it has." dir="ltr">
<thead>
<tr class="cellalignment2260">
<th class="cellalignment2267" id="r1c1-t7">Specifying This Option in a Policy</th>
<th class="cellalignment2267" id="r1c2-t7">Controls These SQL Operations</th>
<th class="cellalignment2267" id="r1c3-t7">Using These Criteria and with These Effects</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2260">
<td class="cellalignment2268" id="r2c1-t7" headers="r1c1-t7">
<p><a id="sthref547"></a>READ_CONTROL</p>
</td>
<td class="cellalignment2268" headers="r2c1-t7 r1c2-t7">
<p>SELECT, UPDATE, and DELETE</p>
</td>
<td class="cellalignment2268" headers="r2c1-t7 r1c3-t7">
<p>Only authorized rows (*) are accessible.</p>
</td>
</tr>
<tr class="cellalignment2260">
<td class="cellalignment2268" id="r3c1-t7" headers="r1c1-t7">
<p>WRITE_CONTROL</p>
</td>
<td class="cellalignment2268" headers="r3c1-t7 r1c2-t7">
<p><a id="sthref548"></a>INSERT, UPDATE, and DELETE</p>
</td>
<td class="cellalignment2268" headers="r3c1-t7 r1c3-t7">
<p>(a) Only authorized rows (**) are accessible</p>
<p>(b) Data labels writable unless LABEL_UPDATE is active.</p>
</td>
</tr>
<tr class="cellalignment2260">
<td class="cellalignment2268" id="r4c1-t7" headers="r1c1-t7">
<p>WRITE_CONTROL is necessary for these three:</p>
</td>
<td class="cellalignment2268" headers="r4c1-t7 r1c2-t7">&nbsp;</td>
<td class="cellalignment2268" headers="r4c1-t7 r1c3-t7">&nbsp;</td>
</tr>
<tr class="cellalignment2260">
<td class="cellalignment2268" id="r5c1-t7" headers="r1c1-t7">
<p>INSERT_CONTROL</p>
</td>
<td class="cellalignment2268" headers="r5c1-t7 r1c2-t7">
<p>INSERT</p>
</td>
<td class="cellalignment2268" headers="r5c1-t7 r1c3-t7">&nbsp;</td>
</tr>
<tr class="cellalignment2260">
<td class="cellalignment2268" id="r6c1-t7" headers="r1c1-t7">
<p>UPDATE_CONTROL</p>
</td>
<td class="cellalignment2268" headers="r6c1-t7 r1c2-t7">
<p>UPDATE</p>
</td>
<td class="cellalignment2268" headers="r6c1-t7 r1c3-t7">&nbsp;</td>
</tr>
<tr class="cellalignment2260">
<td class="cellalignment2268" id="r7c1-t7" headers="r1c1-t7">
<p>DELETE_CONTROL</p>
</td>
<td class="cellalignment2268" headers="r7c1-t7 r1c2-t7">
<p>DELETE</p>
</td>
<td class="cellalignment2268" headers="r7c1-t7 r1c3-t7">&nbsp;</td>
</tr>
<tr class="cellalignment2260">
<td class="cellalignment2268" id="r8c1-t7" headers="r1c1-t7">
<p>CHECK_CONTROL</p>
</td>
<td class="cellalignment2268" headers="r8c1-t7 r1c2-t7">
<p><a id="sthref549"></a></p>
</td>
<td class="cellalignment2268" headers="r8c1-t7 r1c3-t7">
<p>Applies READ_CONTROL policy enforcement to INSERT and UPDATE statements to assure that the new row label is read-accessible.</p>
</td>
</tr>
<tr class="cellalignment2260">
<td class="cellalignment2268" id="r9c1-t7" headers="r1c1-t7">
<p><a href="#i1010735">The Access Control Enforcement Options</a></p>
</td>
<td class="cellalignment2268" headers="r9c1-t7 r1c2-t7">&nbsp;</td>
<td class="cellalignment2268" headers="r9c1-t7 r1c3-t7">
<p>Applies policy enforcement to all queries. Only authorized rows are accessible for operations.</p>
</td>
</tr>
<tr class="cellalignment2260">
<td class="cellalignment2268" id="r10c1-t7" headers="r1c1-t7">&nbsp;</td>
<td class="cellalignment2268" headers="r10c1-t7 r1c2-t7">
<p><a id="sthref550"></a></p>
</td>
<td class="cellalignment2268" headers="r10c1-t7 r1c3-t7">
<p>Determines the ability to data in a row. If this option is active, then it enforces.</p>
</td>
</tr>
<tr class="cellalignment2260">
<td class="cellalignment2268" id="r11c1-t7" headers="r1c1-t7">&nbsp;</td>
<td class="cellalignment2268" headers="r11c1-t7 r1c2-t7">
<p><a id="sthref551"></a>INSERT_CONTROL</p>
</td>
<td class="cellalignment2268" headers="r11c1-t7 r1c3-t7">
<p>Applies policy enforcement to INSERT operations, according to the algorithm for write access described in <a href="accpriv.htm#i1007786">Figure 3-8, "Label Evaluation Process for Write Access"</a>.</p>
</td>
</tr>
<tr class="cellalignment2260">
<td class="cellalignment2268" id="r12c1-t7" headers="r1c1-t7">&nbsp;</td>
<td class="cellalignment2268" headers="r12c1-t7 r1c2-t7">
<p><a id="sthref552"></a>DELETE_CONTROL</p>
</td>
<td class="cellalignment2268" headers="r12c1-t7 r1c3-t7">
<p>Applies policy enforcement to DELETE operations, according to the algorithm for write access described in <a href="accpriv.htm#i1007786">Figure 3-8, "Label Evaluation Process for Write Access"</a>.</p>
</td>
</tr>
<tr class="cellalignment2260">
<td class="cellalignment2268" id="r13c1-t7" headers="r1c1-t7">&nbsp;</td>
<td class="cellalignment2268" headers="r13c1-t7 r1c2-t7">
<p><a id="sthref553"></a>UPDATE_CONTROL</p>
</td>
<td class="cellalignment2268" headers="r13c1-t7 r1c3-t7">
<p>Applies policy enforcement to UPDATE operations on the data columns within a row, according to the algorithm for write access described in <a href="accpriv.htm#i1007786">Figure 3-8, "Label Evaluation Process for Write Access"</a>.</p>
</td>
</tr>
<tr class="cellalignment2260">
<td class="cellalignment2268" id="r14c1-t7" headers="r1c1-t7">
<p><a href="#i1014512">The Overriding Enforcement Options</a></p>
</td>
<td class="cellalignment2268" headers="r14c1-t7 r1c2-t7">
<p><a id="sthref554"></a>ALL_CONTROL</p>
</td>
<td class="cellalignment2268" headers="r14c1-t7 r1c3-t7">
<p>Applies all enforcement options.</p>
</td>
</tr>
<tr class="cellalignment2260">
<td class="cellalignment2268" id="r15c1-t7" headers="r1c1-t7">&nbsp;</td>
<td class="cellalignment2268" headers="r15c1-t7 r1c2-t7">
<p><a id="sthref555"></a>NO_CONTROL</p>
</td>
<td class="cellalignment2268" headers="r15c1-t7 r1c3-t7">
<p>Applies no enforcement options. A labeling function or a SQL predicate can nonetheless be applied.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformalwide" -->
<p>(*) A row is authorized for READ access if the following three criteria are all met:(user-minimum-level) &lt; = (data-row-level) &lt; = (session-level)(any-data-group) is a child of (any-user-group-or-childgroup)(every-data-compartment) is also in (the user's compartments)Refer to <a href="accpriv.htm#i1007707">Figure 3-7, "Label Evaluation Process for Read Access"</a></p>
<p>(**) A row is authorized for READ access if the following three criteria are all met:(user-minimum-level) &lt; = (data-row-level) &lt; = (session-level)(any-data-group) is a child of (any-user-group-or-childgroup)(every-data-compartment) is also in (the user's compartments)Refer to <a href="accpriv.htm#i1007707">Figure 3-7, "Label Evaluation Process for Read Access"</a>.</p>
</div>
<!-- class="sect2" -->
<a id="i1015793"></a>
<div id="OLSAG3303" class="sect2">
<h3 class="sect2"><span class="secnum">9.1.2</span> The HIDE Policy Column Option</h3>
<p>You can specify the <a id="sthref556"></a>HIDE policy configuration option when you initially apply an Oracle Label Security policy to a table, that is, when adding the policy column to the table. This prevents display of the column containing the policy's labels.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="admpolcy.htm#i1011390">"Applying a Policy with SA_POLICY_ADMIN.APPLY_TABLE_POLICY"</a>.</div>
<p>Once the policy has been applied, the hidden (or not hidden) status of the column cannot be changed unless the policy is removed with the DROP_COLUMN parameter set to TRUE. Then, the policy can be reapplied with a new hidden status.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="admpolcy.htm#i1011436">Removing a Policy with SA_POLICY_ADMIN.REMOVE_TABLE_POLICY</a>.</div>
<p>INSERT statements doing all-column inserts do not require the values for hidden label columns.</p>
<p>SELECT statements do not automatically return the values of hidden label columns. Such values must be explicitly retrieved.</p>
<p>A DESCRIBE on a table may or may not display the label column. If the administrator sets the HIDE option, then the label column will not be displayed. If HIDE is not specified for a policy, then the label column is displayed in response to a SELECT.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="worklabel.htm#i1008634">"Retrieving All Columns from a Table When the Policy Label Column Is Hidden"</a></div>
</div>
<!-- class="sect2" -->
<a id="i1010712"></a>
<div id="OLSAG3304" class="sect2">
<h3 class="sect2"><span class="secnum">9.1.3</span> The Label Management Enforcement Options</h3>
<p>The three label enforcement options control the data label written when a row is inserted or updated. When a policy specifies these options and is applied to a table or schema, these options apply to the situations described in this section.</p>
<p>A user inserting a row can specify any data label within the range of the user's label authorizations. If the user does not specify a label for the row being written, LABEL_DEFAULT can do so. Updates can be restricted by LABEL_UPDATE. Inserts or updates that use a labeling function can need CHECK-CONTROL to prevent assigning a data label outside the user's authorizations. Such a label would prevent the user from accessing the row just written, and could enable the user to make data available inappropriately.</p>
<p>Any <a id="sthref557"></a><a id="sthref558"></a>labeling function in force on a table overrides these options. Such a function can be named in the call that applies the policy to the table. If the administrator named such a function when applying a policy, but then disables or removes that policy, then that function is no longer applied.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="admpolcy.htm#BGBGFGHH">Chapter 10, "Applying Policies to Tables and Schemas"</a> regarding applying policies to tables or schemas (or removing them).</p>
</li>
<li>
<p><a href="creatpol.htm#i1009845">"Disabling a Policy with SA_SYSDBA.DISABLE_POLICY"</a></p>
</li>
</ul>
</div>
<a id="i1017225"></a>
<div id="OLSAG3305" class="sect3">
<h4 class="sect3"><span class="secnum">9.1.3.1</span> LABEL_DEFAULT: Using the Session's Default Row Label</h4>
<p>A user can update a row without specifying a label value, because the updated row uses its original label. However, to insert a new row, the user must supply a valid label unless a labeling function is in force or LABEL_DEFAULT applies for the table. LABEL_DEFAULT causes the user's session default row label to be used as the new <a id="sthref559"></a>row label.</p>
<p>If neither LABEL_DEFAULT nor a labeling function is in force and the user attempts to INSERT a row, then an error occurs.</p>
<p>Note that any <a id="sthref560"></a>labeling function in force on a table overrides the <a id="sthref561"></a>LABEL_DEFAULT option.</p>
</div>
<!-- class="sect3" -->
<a id="i1010721"></a>
<div id="OLSAG3306" class="sect3">
<h4 class="sect3"><span class="secnum">9.1.3.2</span> LABEL_UPDATE: Changing Data Labels</h4>
<p>A user updating a row can normally change its label to any label within his authorized label range. However, if <a id="sthref562"></a>LABEL_UPDATE applies, then to modify a label, the user must have one or more of these privileges: WRITEUP, <a id="sthref563"></a>WRITEDOWN, and <a id="sthref564"></a>WRITEACROSS.</p>
<p>The LABEL_UPDATE option uses an Oracle after-row trigger which is called only on an update operation affecting the label. Note that any <a id="sthref565"></a>labeling function in force on a table overrides the <a id="sthref566"></a>LABEL_UPDATE option.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="accpriv.htm#i1007982">"Special Row Label Privileges"</a>.</div>
</div>
<!-- class="sect3" -->
<div id="OLSAG3307" class="sect3"><a id="sthref567"></a>
<h4 class="sect3"><span class="secnum">9.1.3.3</span> CHECK_CONTROL: Checking Data Labels</h4>
<p>If a row being inserted or updated gets its label from a labeling function, then that label could conceivably be outside the user's authorizations, preventing future access by that user.</p>
<p>CHECK_CONTROL causes <a id="sthref568"></a>READ_CONTROL to apply to the new label, ensuring that this user will be authorized to read the inserted or updated row after the operation. If not, then the insert or update operation is canceled and has no effect.</p>
<p>In other words, if CHECK_CONTROL is included as an option in a policy being enforced on a row, then the user modifying that row must still be able to access it after the operation. CHECK_CONTROL prevents a user or a labeling function from modifying a row's label to include a level, group, or compartment that the modifying user would be prevented from accessing.</p>
<p>Note that CHECK_CONTROL overrides any <a id="sthref569"></a>labeling function in force on a table.</p>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="i1010735"></a>
<div id="OLSAG3308" class="sect2">
<h3 class="sect2"><span class="secnum">9.1.4</span> The Access Control Enforcement Options</h3>
<p>Access control options limit the rows accessible for SELECT, UPDATE, INSERT, or DELETE operations to only those rows whose labels meet established policies:</p>
<ul>
<li>
<p><a href="#i1010750">READ_CONTROL: Reading Data</a></p>
</li>
<li>
<p><a href="#i1010761">WRITE_CONTROL: Writing Data</a></p>
</li>
<li>
<p><a href="#i1010783">INSERT_CONTROL, UPDATE_CONTROL, and DELETE_CONTROL</a></p>
</li>
</ul>
<a id="i1010750"></a>
<div id="OLSAG3309" class="sect3">
<h4 class="sect3"><span class="secnum">9.1.4.1</span> READ_CONTROL: Reading Data</h4>
<p>READ_CONTROL uses Oracle virtual private database (VPD) technology to enforce the read access mediation algorithm illustrated in <a href="accpriv.htm#i1007707">Figure 3-7, "Label Evaluation Process for Read Access"</a>.</p>
<p>READ_CONTROL limits the set of records accessible to a session for SELECT, UPDATE and DELETE operations. If READ_CONTROL is not active, then even rows in the table protected by the policy are accessible to all users.</p>
</div>
<!-- class="sect3" -->
<a id="i1010761"></a>
<div id="OLSAG3310" class="sect3">
<h4 class="sect3"><span class="secnum">9.1.4.2</span> WRITE_CONTROL: Writing Data</h4>
<p><a id="sthref570"></a>WRITE_CONTROL uses Oracle after-row triggers to enforce the write access mediation algorithm illustrated in <a href="accpriv.htm#i1007786">Figure 3-8, "Label Evaluation Process for Write Access"</a>. When an Oracle Label Security policy specifying the WRITE_CONTROL option is applied to a table, triggers are generated and the algorithm is enforced.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
The protection implementation for <a id="sthref571"></a>WRITE_CONTROL is the same for all write operations, but you need not apply all write options across the board. You can apply WRITE_CONTROL selectively for INSERT, UPDATE, and DELETE operations by using the corresponding policy enforcement option (INSERT_CONTROL, UPDATE_CONTROL, and DELETE_CONTROL) instead of WRITE_CONTROL.</div>
<p>If <a id="sthref572"></a>WRITE_CONTROL is on but <a id="sthref573"></a>LABEL_UPDATE is not specified, then the user can change both data and labels. If you want to control updating the row labels, then specify the LABEL_UPDATE option in addition to WRITE_CONTROL when creating your policies.</p>
</div>
<!-- class="sect3" -->
<a id="i1010783"></a>
<div id="OLSAG3311" class="sect3">
<h4 class="sect3"><span class="secnum">9.1.4.3</span> INSERT_CONTROL, UPDATE_CONTROL, and DELETE_CONTROL</h4>
<p><a id="i1010785"></a>These options apply policy enforcement during the corresponding operations on the data columns within a row, according to the algorithm for write access described in <a href="accpriv.htm#i1007786">Figure 3-8, "Label Evaluation Process for Write Access"</a>.</p>
<p>Specifying WRITE_CONTROL limits all insert, update, and delete operations. However,</p>
<ul>
<li>
<p>specifying INSERT_CONTROL limits insertions but not updates or deletes;</p>
</li>
<li>
<p>specifying UPDATE_CONTROL limits updates but not insertions or deletes; and</p>
</li>
<li>
<p>specifying DELETE_CONTROL limits deletes but not insertions or updates.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
For inserts, <a href="#i1010992">Inserting Labeled Data Using Policy Options and Labeling Functions</a>;
<p>for updates, <a href="#i1013777">Updating Labeled Data Using Policy Options and Labeling Functions</a>;</p>
<p>and for deletions, <a href="#i1013784">Deleting Labeled Data Using Policy Options and Labeling Functions</a>.</p>
</div>
</li>
</ul>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="i1014512"></a>
<div id="OLSAG3312" class="sect2">
<h3 class="sect2"><span class="secnum">9.1.5</span> The Overriding Enforcement Options</h3>
<p>Whereas <a id="sthref574"></a>ALL_CONTROL applies all of the label management and access control enforcement options, <a id="sthref575"></a>NO_CONTROL applies none of them. In either case, labeling functions and SQL predicates can be applied. Note that the ALL_CONTROL option can be used only on the command line.</p>
<p>If you apply a policy with NO_CONTROL specified, then a policy label column is added to the table, but the label values are NULL. Because no access controls are operating on the table, you can proceed to enter labels as desired. You can then set the policy enforcement options as you wish.</p>
<p>NO_CONTROL can be a useful option if you have a <a id="sthref576"></a>labeling function in force to label the data correctly, but want to let all users access all the data.</p>
</div>
<!-- class="sect2" -->
<a id="i1010801"></a>
<div id="OLSAG3313" class="sect2">
<h3 class="sect2"><span class="secnum">9.1.6</span> Guidelines for Using the Policy Enforcement Options</h3>
<p>You can customize <a id="sthref577"></a><a id="sthref578"></a>policy enforcement for a schema or table through the Oracle Enterprise Manager as described in Chapters 4 &amp; 7, or by using the SA_POLICY_ADMIN package as described in Chapter 8.</p>
<div class="infobox-note">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="accpriv.htm#i1007467">"Authorized Levels"</a></p>
</li>
<li>
<p><a href="creatpol.htm#CIHEDEEB">"Oracle Enterprise Manager"</a></p>
</li>
<li>
<p><a href="admpolcy.htm#BGBGFGHH">Chapter 10, "Applying Policies to Tables and Schemas"</a></p>
</li>
</ul>
</div>
<p>This section documents the supported keywords.</p>
<p>Note that when you create a policy, you can specify a string of default options to be used whenever the policy is applied without <a id="sthref579"></a>schema or table options being specified.</p>
<p>If a policy is first applied to a table, and then also applied to the schema containing that table, then the options on the table are not affected by the schema policy. The options of the policy originally applied to the table remain in force.</p>
<p>In general, administrators use the <a id="sthref580"></a>LABEL_DEFAULT policy option, causing data written by a user to be labeled with that user's row label. Alternatively, a <a id="sthref581"></a>labeling function can be used to label the data. If neither of these two choices is used, then a label must be specified in every INSERT statement. (Updates retain the row's original label.)</p>
<p>The following table suggests that certain combinations of <a id="sthref582"></a><a id="sthref583"></a>policy enforcement options are useful when implementing an Oracle Label Security policy. As the table indicates, you might typically enforce READ_CONTROL and WRITE_CONTROL, choosing from among several possible combinations for setting the data label on writes.</p>
<div id="OLSAG3314" class="tblformal">
<p class="titleintable"><a id="sthref584"></a><a id="sthref585"></a>Table 9-4 Suggested Policy Enforcement Option Combinations</p>
<table class="cellalignment2269" title="Suggested Policy Enforcement Option Combinations " summary="This table lists suggested combinations of policy enforcement options and describes the types of access enforcements that each combination provides." dir="ltr">
<thead>
<tr class="cellalignment2260">
<th class="cellalignment2267" id="r1c1-t16">Options</th>
<th class="cellalignment2267" id="r1c2-t16">Access Enforcement</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2260">
<td class="cellalignment2268" id="r2c1-t16" headers="r1c1-t16">
<p><a id="sthref586"></a>READ_CONTROL, <a id="sthref587"></a>WRITE_CONTROL, <a id="sthref588"></a>LABEL_DEFAULT</p>
</td>
<td class="cellalignment2268" headers="r2c1-t16 r1c2-t16">
<p>Read and write access based on session label. Default label provided; users can insert/update both data and labels.</p>
</td>
</tr>
<tr class="cellalignment2260">
<td class="cellalignment2268" id="r3c1-t16" headers="r1c1-t16">
<p>READ_CONTROL, WRITE_CONTROL, Labeling Function</p>
</td>
<td class="cellalignment2268" headers="r3c1-t16 r1c2-t16">
<p>Read and write access based on session label. Users can set/change only row data; all row labels are set explicitly by the <a id="sthref589"></a>labeling function.</p>
<p>Add <a id="sthref590"></a>CHECK_CONTROL to restrict new labels (on insert or update) to visible range of labels.</p>
</td>
</tr>
<tr class="cellalignment2260">
<td class="cellalignment2268" id="r4c1-t16" headers="r1c1-t16">
<p>READ_CONTROL, WRITE_CONTROL, <a id="sthref591"></a>LABEL_UPDATE</p>
</td>
<td class="cellalignment2268" headers="r4c1-t16 r1c2-t16">
<p>Read and write access based on session label. Changing but users cannot change labels without privileges.</p>
<p>Add CHECK_CONTROL to restrict new labels (on insert or update) to visible range.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="sect2" -->
<a id="i1010847"></a>
<div id="OLSAG3315" class="sect2">
<h3 class="sect2"><span class="secnum">9.1.7</span> Exemptions from Oracle Label Security Policy Enforcement</h3>
<ol>
<li>
<p>Oracle Label Security is not enforced during DIRECT path export.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="utilities.htm#i1012856">"Using the Export Utility with Oracle Label Security"</a></div>
</li>
<li>
<p>By design, Oracle Label Security policies cannot be applied to objects in schema SYS. As a consequence, the SYS user, and users making a DBA-privileged connection to the database (such as <code>CONNECT AS SYSDBA</code>) do not have Oracle Label Security policies applied to their actions. DBAs need to be able to administer the database. It would make no sense, for example, to export part of a table due to an Oracle Label Security policy being applied. The database user SYS is thus always exempt from Oracle Label Security enforcement, regardless of the export mode, application, or utility used to extract data from the database.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
For other DBA-related considerations, see <a href="utilities.htm#CJAHDAFJ">Chapter 14, " Performing DBA Functions Under Oracle Label Security"</a>.</div>
</li>
<li>
<p><a id="sthref592"></a><a id="sthref593"></a><a id="sthref594"></a><a id="sthref595"></a>Similarly, database users granted the EXEMPT ACCESS POLICY privilege, either directly or through a database role, are exempted from some Oracle Label Security policy enforcement controls such as READ_CONTROL and CHECK_CONTROL, regardless of the export mode, application or utility used to access the database or update its data. Refer to <a href="#g1018017">Table 9-2, "Policy Enforcement Options"</a>. The following policy enforcement options remain in effect even when EXEMPT ACCESS POLICY is granted:</p>
<ul>
<li>
<p>INSERT_CONTROL, UPDATE_CONTROL, DELETE_CONTROL, WRITE_CONTROL, LABEL_UPDATE, and LABEL_DEFAULT.</p>
</li>
<li>
<p>If the Oracle Label Security policy specifies the ALL_CONTROL option, then all enforcement controls are applied except READ_CONTROL and CHECK_CONTROL.</p>
</li>
</ul>
<p>EXEMPT ACCESS POLICY is a very powerful privilege and should be carefully managed.</p>
<p>Note that this privilege does not affect the enforcement of standard <span class="italic">Oracle Database</span> object privileges such as SELECT, INSERT, UPDATE, and DELETE. These privileges are enforced even if a user has been granted the <a id="sthref596"></a>EXEMPT ACCESS POLICY privilege.</p>
</li>
</ol>
</div>
<!-- class="sect2" -->
<a id="i1010879"></a>
<div id="OLSAG3316" class="sect2">
<h3 class="sect2"><span class="secnum">9.1.8</span> Viewing Policy Options on Tables and Schemas</h3>
<p>Use the following views to show the <a id="sthref597"></a>policy enforcement options currently applied to tables and schemas:</p>
<ul>
<li>
<p><a id="sthref598"></a><a id="sthref599"></a>DBA_SA_TABLE_POLICIES</p>
</li>
<li>
<p><a id="sthref600"></a><a id="sthref601"></a>DBA_SA_SCHEMA_POLICIES</p>
</li>
</ul>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="i1010887"></a>
<div id="OLSAG057" class="sect1">
<h2 class="sect1"><span class="secnum">9.2</span> Using a Labeling Function</h2>
<p>Application developers can create labeling functions. These programs can compute and return a label using a wide array of resources, including context variables (such as date or username) and data values.</p>
<p>The following sections describe how to use labeling functions.</p>
<ul>
<li>
<p><a href="#i1015456">Labeling Data Rows under Oracle Label Security</a></p>
</li>
<li>
<p><a href="#i1015450">Understanding Labeling Functions in Oracle Label Security Policies</a></p>
</li>
<li>
<p><a href="#i1010947">Creating a Labeling Function for a Policy</a></p>
</li>
<li>
<p><a href="#i1010979">Specifying a Labeling Function in a Policy</a></p>
</li>
</ul>
<a id="i1015456"></a>
<div id="OLSAG3317" class="sect2">
<h3 class="sect2"><span class="secnum">9.2.1</span> Labeling Data Rows under Oracle Label Security</h3>
<p>There are three ways to label data that is being inserted or updated:</p>
<ul>
<li>
<p>Explicitly specify a label in every INSERT or UPDATE to the table.</p>
</li>
<li>
<p>Set the <a id="sthref602"></a>LABEL_DEFAULT option, which causes the session's row label to be used if an explicit row label is not included in the INSERT or UPDATE statement.</p>
</li>
<li>
<p>Create a <a id="sthref603"></a>labeling function, automatically calls on every INSERT or UPDATE statement and independently of any user's authorization.</p>
</li>
</ul>
<p>The recommended approach is to write a labeling function to implement your rules for labeling data. If you specify a labeling function, then Oracle Label Security embeds a call to that function in INSERT and UPDATE triggers to compute a label.</p>
<p>For example, you could create a <a id="sthref604"></a>labeling function named <code>my_label</code> to use the contents of COL1 and COL2 of the new row to compute and return the appropriate label for the row. Then, you could insert, into your INSERT or UPDATE statements, the following reference:</p>
<pre>
my_label(:new.col1,:new.col2) J
</pre>
<pre>
</pre>
<p>If you do not specify a labeling function, then specify the <a id="sthref605"></a>LABEL_DEFAULT option. Otherwise, you must explicitly specify a label on every INSERT or UPDATE statement.</p>
</div>
<!-- class="sect2" -->
<a id="i1015450"></a>
<div id="OLSAG3318" class="sect2">
<h3 class="sect2"><span class="secnum">9.2.2</span> Understanding Labeling Functions in Oracle Label Security Policies</h3>
<p>Labeling functions enable you to consider, in your rules for assigning labels, information drawn from the application context. For example, you can use as a labeling consideration the IP address to which the user is attached. There are many opportunities to use <a id="sthref606"></a>SYS_CONTEXT in this way.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
If the SQL statement is invalid, then an error will occur when you apply the labeling function to the table or policy. You should thoroughly test a <a id="sthref607"></a>labeling function before using it with tables.</div>
<p>Labeling functions override the <a id="sthref608"></a>LABEL_DEFAULT and <a id="sthref609"></a>LABEL_UPDATE options.</p>
<p>A <a id="sthref610"></a>labeling function is called in the context of a before-row <a id="sthref611"></a>trigger. This enables you to pass in the old and new values of the data record, as well as the old and new labels.</p>
<p>You can construct a labeling function to permit an explicit label to be passed in by the user.</p>
<p>All labeling functions must have return types of the LBACSYS.<a id="sthref612"></a>LBAC_LABEL data type. The <a id="sthref613"></a>TO_LBAC_DATA_LABEL function can be used to convert a label in character string format to a data type of LBACSYS.LBAC_LABEL. Note that <a id="sthref614"></a>LBACSYS must have the EXECUTE privilege on your <a id="sthref615"></a>labeling function. The owner of the labeling function must have the EXECUTE privilege on the TO_LBAC_DATA_LABEL function, with the GRANT option.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
LBACSYS is a unique schema providing opaque types for Oracle Label Security. Refer to the discussions in <a href="utilities.htm#CJAHDAFJ">Chapter 14, " Performing DBA Functions Under Oracle Label Security"</a>.</div>
</div>
<!-- class="sect2" -->
<a id="i1010947"></a>
<div id="OLSAG3319" class="sect2">
<h3 class="sect2"><span class="secnum">9.2.3</span> Creating a Labeling Function for a Policy</h3>
<p>The following example shows how to create a <a id="sthref616"></a>labeling function.</p>
<pre>
 SQL&gt; CREATE OR REPLACE FUNCTION sa_demo.gen_emp_label
                      (Job varchar2,
                       Deptno number,
                       Total_sal number)
   <span class="bold">    Return LBACSYS.LBAC_LABEL</span>
     as
       i_label varchar2(80);
     Begin
       /************* Determine Class Level *************/
       if total_sal &gt; 2000 then
          i_label := 'L3:';
       elsif total_sal &gt; 1000 then
          i_label := 'L2:';
       else
          i_label := 'L1:';
       end if;
     
       /************* Determine Compartment *************/
       IF Job in ('MANAGER','PRESIDENT') then
          i_label := i_label||'M:';
       else
          i_label := i_label||'E:';
       end if;
       /************* Determine Groups *************/
       i_label := i_label||'D'||to_char(deptno);
      <span class="bold"> return TO_LBAC_DATA_LABEL('human_resources',i_label);</span>
     End;
     /
</pre>
<div class="infobox-note">
<p class="notep1">Note:</p>
When Oracle Label Security is configured to work directly with Oracle Internet Directory, dynamic label generation is disabled, because labels are managed centrally in Oracle Internet Directory, using olsadmintool commands. Refer to <a href="appxb.htm#CJHBBFFB">Appendix B, "Command-line Tools for Label Security Using Oracle Internet Directory"</a>. So, if the label function generates a data label using a string value that is not already established in Oracle Internet Directory, then an error message results.</div>
</div>
<!-- class="sect2" -->
<a id="i1010979"></a>
<div id="OLSAG3320" class="sect2">
<h3 class="sect2"><span class="secnum">9.2.4</span> Specifying a Labeling Function in a Policy</h3>
<p>The following example uses the sa_demo.gen_emp_label label from the example in the previous section to show how to specify a <a id="sthref617"></a>labeling function.</p>
<pre>
sa_policy_admin.remove_table_policy('human_resources','sa_demo','emp');
sa_policy_admin.apply_table_policy (
</pre>
<pre>
POLICY_NAME =&gt; 'human_resources',
SCHEMA_NAME =&gt; 'sa_demo',
TABLE_NAME  =&gt; 'emp',
TABLE_OPTIONS =&gt; 'READ_CONTROL,WRITE_CONTROL,CHECK_CONTROL',
LABEL_FUNCTION =&gt; 'sa_demo.gen_emp_label(:new.job,:new.deptno,:new.sal)',
PREDICATE =&gt; NULL);
</pre></div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="i1010992"></a>
<div id="OLSAG058" class="sect1">
<h2 class="sect1"><span class="secnum">9.3</span> Inserting Labeled Data Using Policy Options and Labeling Functions</h2>
<p><a id="sthref618"></a>This section explains how enforcement options and labeling functions affect the insertion of labeled data.</p>
<ul>
<li>
<p><a href="#i1011008">Evaluating Enforcement Control Options and INSERT</a></p>
</li>
<li>
<p><a href="#i1011017">Inserting Labels When a Labeling Function Is Specified</a></p>
</li>
<li>
<p><a href="#i1015029">Inserting Child Rows into Tables with Declarative Referential Integrity Enabled</a></p>
</li>
</ul>
<a id="i1011008"></a>
<div id="OLSAG3321" class="sect2">
<h3 class="sect2"><span class="secnum">9.3.1</span> Evaluating Enforcement Control Options and INSERT</h3>
<p>When you attempt to insert or update data based on your authorizations, the outcome depends upon what policy enforcement controls are active.</p>
<ul>
<li>
<p>If <a id="sthref619"></a>INSERT_CONTROL is active, then rows you insert can only have labels within your write authorizations. If you attempt to update data that you can read, but for which you do not have write authorization, an error is raised. For example, if you can read compartments A and B, but you can only write to compartment A, then if you attempt to insert data with compartment B, then the statement will fail.</p>
</li>
<li>
<p>If INSERT_CONTROL is <span class="italic">not</span> active, then you can use any valid label on rows you insert.</p>
</li>
<li>
<p>If the <a id="sthref620"></a>CHECK_CONTROL option is active, then rows you insert can only have labels you are authorized to read, even if the labels are generated by a <a id="sthref621"></a>labeling function.</p>
</li>
</ul>
</div>
<!-- class="sect2" -->
<a id="i1011017"></a>
<div id="OLSAG3322" class="sect2">
<h3 class="sect2"><span class="secnum">9.3.2</span> Inserting Labels When a Labeling Function Is Specified</h3>
<p>A <a id="sthref622"></a>labeling function takes precedence over labels entered by the user. If the administrator has set up an automatic labeling function, then no data label a user enters will have effect (unless the labeling function itself makes use of the user's proposed label). New row labels are always determined by an active labeling function, if present.</p>
<p>Note that a labeling function can set the label of a row being inserted to a value outside the range that the user writing that row can see. If such a function is in use, then the user can potentially insert a row but not be authorized to see that row. You can prevent this situation by specifying the CHECK_CONTROL option in the policy. If this option is active, then the new data label is checked against the user's read authorization, and if the user cannot read it, then the insert operation is not performed.</p>
</div>
<!-- class="sect2" -->
<a id="i1015029"></a>
<div id="OLSAG3323" class="sect2">
<h3 class="sect2"><span class="secnum">9.3.3</span> Inserting Child Rows into Tables with Declarative Referential Integrity Enabled</h3>
<p>If a parent table is protected by d<a id="sthref623"></a>eclarative <a id="sthref624"></a>referential integrity, then inserting a child row is constrained by the requirement that the parent row be visible. The user must be able to see the parent row for the insert operation to succeed, that is, the user must have read access to the parent row.</p>
<p>If <a id="sthref625"></a>READ_CONTROL is active on the parent table, then the user's read authorization must be sufficient to authorize a SELECT operation on the parent row. For example, a user who cannot read department 20 cannot insert child rows for department 20. Note that all records will be visible if the user has FULL or READ privileges on the table or schema.</p>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="i1013777"></a>
<div id="OLSAG059" class="sect1">
<h2 class="sect1"><span class="secnum">9.4</span> Updating Labeled Data Using Policy Options and Labeling Functions</h2>
<p>The rules for <a id="sthref626"></a>updates in Oracle Label Security are almost identical to those for inserts, as long as the user is authorized to change the rows in question. This section contains these topics:</p>
<ul>
<li>
<p><a href="#i1011053">Updating Labels Using CHAR_TO_LABEL</a></p>
</li>
<li>
<p><a href="#i1011059">Evaluating Enforcement Control Options and UPDATE</a></p>
</li>
<li>
<p><a href="#i1011080">Updating Labels When a Labeling Function Is Specified</a></p>
</li>
<li>
<p><a href="#i1011086">Updating Child Rows in Tables with Declarative Referential Integrity Enabled</a></p>
</li>
</ul>
<a id="i1011053"></a>
<div id="OLSAG3324" class="sect2">
<h3 class="sect2"><span class="secnum">9.4.1</span> Updating Labels Using CHAR_TO_LABEL</h3>
<p>If you need to change a row's label from SENSITIVE to CONFIDENTIAL, then you can change the label by using the CHAR_TO_LABEL FUNCTION as follows:</p>
<pre>
UPDATE emp 
SET hr_label = char_to_label ('HR', 'CONFIDENTIAL')
WHERE ename = 'ESTANTON';
</pre></div>
<!-- class="sect2" -->
<a id="i1011059"></a>
<div id="OLSAG3325" class="sect2">
<h3 class="sect2"><span class="secnum">9.4.2</span> Evaluating Enforcement Control Options and UPDATE</h3>
<p><a id="sthref627"></a>When you attempt to update data based on your authorizations, the outcome depends on what enforcement controls are active.</p>
<ul>
<li>
<p>If <a id="sthref628"></a>UPDATE_CONTROL is active, then you can only update rows whose labels fall within your write authorizations. If you attempt to update data that you can read, but for which you do not have write authorization, then an error is raised. Assume, for example, that you can read compartments A and B, but you can only write to compartment A. In this case, if you attempt to update data with compartment B, then&nbsp;the statement will fail.</p>
</li>
<li>
<p>If UPDATE_CONTROL is not active, then you can update all rows to which you have read access.</p>
</li>
<li>
<p>If LABEL_UPDATE is active, then you must have the appropriate privilege (WRITEUP, <a id="sthref629"></a>WRITEDOWN, or <a id="sthref630"></a>WRITEACROSS) to change a label by raising or lowering its sensitivity level, or altering its groups or compartments.</p>
</li>
<li>
<p>If LABEL_UPDATE is <span class="italic">not</span> active but UPDATE_CONTROL <span class="italic">is</span> active, then you can update a label to any new label value within your write authorization.</p>
</li>
<li>
<p>If <a id="sthref631"></a>CHECK_CONTROL is active, then you can only write labels you are authorized to read.</p>
</li>
</ul>
<p>The following figure illustrates the <a id="sthref632"></a>label evaluation process for <a id="sthref633"></a>LABEL_UPDATE.</p>
<div id="OLSAG3326" class="figure">
<p class="titleinfigure"><a id="sthref634"></a>Figure 9-1 Label Evaluation Process for LABEL_UPDATE</p>
<img width="592" height="288" src="img/olsag031.gif" alt="Description of Figure 9-1 follows" /><br />
<a id="sthref635" href="img_text/olsag031.htm">Description of "Figure 9-1 Label Evaluation Process for LABEL_UPDATE"</a><br />
<br /></div>
<!-- class="figure" --></div>
<!-- class="sect2" -->
<a id="i1011080"></a>
<div id="OLSAG3327" class="sect2">
<h3 class="sect2"><span class="secnum">9.4.3</span> Updating Labels When a Labeling Function Is Specified</h3>
<p>A <a id="sthref636"></a>labeling function takes precedence over labels entered by the user. If the administrator has set up an automatic labeling function, then no label a user enters will have effect (unless the labeling function itself makes use of the user's proposed label). New row labels are always determined by an active labeling function, if present.</p>
<p>Note that the security administrator can establish a labeling function that sets the label of a row being updated to a value outside the range that you can see. If this is the case, then you can update a row, but not be authorized to see the row. If the <a id="sthref637"></a>CHECK_CONTROL option is on, then you will not be able to perform such an update. The CHECK_CONTROL option verifies your read authorization on the new label.</p>
</div>
<!-- class="sect2" -->
<a id="i1011086"></a>
<div id="OLSAG3328" class="sect2">
<h3 class="sect2"><span class="secnum">9.4.4</span> Updating Child Rows in Tables with Declarative Referential Integrity Enabled</h3>
<p>If a <a id="sthref638"></a>child row is in a table that has a <a id="sthref639"></a>referential integrity constraint, then the update can succeed only if the parent row is visible that is the user must be able to see the parent row. If the parent table has <a id="sthref640"></a>READ_CONTROL on, then the user's read authorization must be sufficient to authorize a SELECT on the parent row.</p>
<p>For example, a user who cannot read department 20 in a parent table cannot update an employee's department to department 20 in a child table. (If the user has FULL or READ privilege, then all records will be visible.)</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink ADFNS" href="../../appdev.112/e41502/toc.htm"><span class="italic">Oracle Database Advanced Application Developer's Guide</span></a></div>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="i1013784"></a>
<div id="OLSAG060" class="sect1">
<h2 class="sect1"><span class="secnum">9.5</span> Deleting Labeled Data Using Policy Options and Labeling Functions</h2>
<p><a id="sthref641"></a>This section covers the deletion of labeled data.</p>
<ul>
<li>
<p>If <a id="sthref642"></a>DELETE_CONTROL is active, then you can delete only rows within your write authorization.</p>
</li>
<li>
<p>If DELETE_CONTROL is <span class="italic">not</span> active, then you can delete only rows that you can read.</p>
</li>
<li>
<p>With DELETE_CONTROL active, and declarative <a id="sthref643"></a>referential integrity defined with cascading deletes, you must have write authorization on <span class="italic">all</span> the rows to be deleted, or the statement will fail.</p>
</li>
</ul>
<p>You cannot delete a parent row if there are any <a id="sthref644"></a>child rows attached to it, regardless of your write authorization. To delete such a parent row, you must first delete each of the child rows. If DELETE_CONTROL is active on any of the child rows, then you must have write authorization to delete the child rows.</p>
<p>Consider, for example, a situation in which the user is UNCLASSIFIED and there are three rows as follows:</p>
<div class="inftblinformal">
<table class="cellalignment2266" title="Three Row Example" summary="This informal table is an example showing three rows, naming for each row its sensitivity and the table in which it appears." dir="ltr">
<thead>
<tr class="cellalignment2260">
<th class="cellalignment2267" id="r1c1-t23">Row</th>
<th class="cellalignment2267" id="r1c2-t23">Table</th>
<th class="cellalignment2267" id="r1c3-t23">Sensitivity</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2260">
<td class="cellalignment2268" id="r2c1-t23" headers="r1c1-t23">Parent row:</td>
<td class="cellalignment2268" headers="r2c1-t23 r1c2-t23">DEPT</td>
<td class="cellalignment2268" headers="r2c1-t23 r1c3-t23">UNCLASSIFIED</td>
</tr>
<tr class="cellalignment2260">
<td class="cellalignment2268" id="r3c1-t23" headers="r1c1-t23">Child row:</td>
<td class="cellalignment2268" headers="r3c1-t23 r1c2-t23">EMP</td>
<td class="cellalignment2268" headers="r3c1-t23 r1c3-t23">UNCLASSIFIED</td>
</tr>
<tr class="cellalignment2260">
<td class="cellalignment2268" id="r4c1-t23" headers="r1c1-t23">Child row:</td>
<td class="cellalignment2268" headers="r4c1-t23 r1c2-t23">EMP</td>
<td class="cellalignment2268" headers="r4c1-t23 r1c3-t23">UNCLASSIFIED</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" -->
<p>In this case, the UNCLASSIFIED user cannot delete the parent row.</p>
<p>DELETE_CONTROL has no effect when <a id="sthref645"></a>DELETE_RESTRICT is active. DELETE_RESTRICT is always enforced. In some cases (depending on the user's authorizations and the data's labels) it may look as though a row has no child rows, when it actually does have children but the user cannot see them. Even if a user cannot see child rows, he still cannot delete the parent row.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink ADFNS" href="../../appdev.112/e41502/toc.htm"><span class="italic">Oracle Database Advanced Application Developer's Guide</span></a></div>
</div>
<!-- class="sect1" -->
<a id="i1011154"></a>
<div id="OLSAG061" class="sect1">
<h2 class="sect1"><span class="secnum">9.6</span> Using a SQL Predicate with an Oracle Label Security Policy</h2>
<p>You can use a SQL predicate to provide extensibility for selective enforcement of data access rules.</p>
<p>This section contains these topics:</p>
<ul>
<li>
<p><a href="#i1011169">Modifying an Oracle Label Security Policy with a SQL Predicate</a></p>
</li>
<li>
<p><a href="#i1011196">Affecting Oracle Label Security Policies with Multiple SQL Predicates</a></p>
</li>
</ul>
<a id="i1011169"></a>
<div id="OLSAG3329" class="sect2">
<h3 class="sect2"><span class="secnum">9.6.1</span> Modifying an Oracle Label Security Policy with a SQL Predicate</h3>
<p>A SQL <a id="sthref646"></a>predicate is a condition, optionally preceded by AND or OR. It can be appended for <a id="sthref647"></a>READ_CONTROL access mediation. The following predicate, for example, adds an application-specific test based on COL1 to determine if the session has access to the row.</p>
<pre>
AND my_function(col1)=1
</pre>
<p>The combined result of the policy and the user-specified predicate limits the rows that a user can read. So, this combination affects the labels and data that CHECK_CONTROL will permit a user to change. An OR clause, for example, increases the number of rows a user can read.</p>
<p>A SQL predicate can be useful if you want to avoid performing label-based filtering. In certain situations, a SQL predicate can easily implement row-level security on tables. Used instead of READ_CONTROL, a SQL predicate will filter the data for SELECT, UPDATE, and DELETE operations.</p>
<p>Similarly, in a typical, Web-enabled human resources application, a user might have to be a manager to access rows in the employee table. In such cases, the user's user label would have to dominate the label on the employee's row. A SQL predicate like the following could be added, so that an employee could bypass label-based filtering if he wanted to view his own record in the employee table. (An <code>OR</code> is used so that <span class="italic">either</span> the label policy will apply, <span class="italic">or</span> this statement will apply.)</p>
<pre>
OR SYS_CONTEXT ('USERENV', 'SESSION_USER') = employee_name
</pre>
<p>This predicate enables you to have additional access controls so that each employee can access his or her own record.</p>
<p>You can use such a predicate in conjunction with READ_CONTROLs or as a standalone predicate even if READ_CONTROL is not implemented.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
Verify that the <a id="sthref648"></a>predicate accomplishes your security goals before you implement it in an application.
<p>If a syntax error occurs in a predicate under Oracle Label Security, then an error will <span class="italic">not</span> arise when you try to apply the policy to a table. Rather, a predicate error message will arise when you first attempt to reference the table.</p>
</div>
</div>
<!-- class="sect2" -->
<a id="i1011196"></a>
<div id="OLSAG3330" class="sect2">
<h3 class="sect2"><span class="secnum">9.6.2</span> Affecting Oracle Label Security Policies with Multiple SQL Predicates</h3>
<p>A <a id="sthref649"></a>predicate applied to a table by means of an Oracle Label Security policy is appended to any other predicates that may be applied by other Oracle Label Security policies, or by Oracle fine grain access control/VPD policies. The predicates are ANDed together.</p>
<p>Consider the following predicates applied to the EMP table in the SCOTT schema:</p>
<ul>
<li>
<p>A predicate generated by an Oracle VPD policy, such as <code>deptno=10</code></p>
</li>
<li>
<p>A label-based predicate generated by an Oracle Label Security policy, such as <code>label=100</code>, with a user-specified predicate such as</p>
<pre>
OR SYS_CONTEXT ('USERENV', 'SESSION_USER') = ename
</pre></li>
</ul>
<pre>
</pre>
<p><span class="bold">Correct:</span> These predicates would be ANDed together as follows:</p>
<pre>
WHERE deptno=10 AND (label=100 OR SYS_CONTEXT ('USERENV', 'SESSION_USER') = ename)
</pre>
<p><span class="bold">Incorrect:</span> The predicates would <span class="italic">not</span> be combined in the following way:</p>
<pre>
WHERE deptno=10 AND label=100 OR SYS_CONTEXT ('USERENV', 'SESSION_USER') = ename
</pre></div>
<!-- class="sect2" --></div>
<!-- class="sect1" --></div>
<!-- class="chapter" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment2259">
<tr>
<td class="cellalignment2268">
<table class="cellalignment2264">
<tr>
<td class="cellalignment2263"><a href="admpriv.htm"><img width="24" height="24" src="../../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment2263"><a href="admpolcy.htm"><img width="24" height="24" src="../../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;2000, 2013,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment2271">
<table class="cellalignment2262">
<tr>
<td class="cellalignment2263"><a href="../../index.htm"><img width="24" height="24" src="../../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment2263"><a href="../../nav/portal_booklist.htm"><img width="24" height="24" src="../../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment2263"><a href="toc.htm"><img width="24" height="24" src="../../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment2263"><a href="index.htm"><img width="24" height="24" src="../../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment2263"><a href="../../nav/mindx.htm"><img width="24" height="24" src="../../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment2263"><a href="../../dcommon/html/feedback.htm"><img width="24" height="24" src="../../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>
</body>
</html>
