<!DOCTYPE html>
<html lang="en" >
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1">
<meta charset="utf-8">
<title>Administering and Using Trusted Stored Program Units</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Version 5.1.2 Build 737" />
<meta name="dcterms.created" content="2013-08-19T10:59:35Z" />
<meta name="robots" content="all" />
<meta name="dcterms.title" content="Label Security Administrator's Guide" />
<meta name="dcterms.identifier" content="E10745-04" />
<meta name="dcterms.isVersionOf" content="OLSAG" />
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;2000, 2013,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved." />
<link rel="Start" href="../../index.htm" title="Home" type="text/html" />
<link rel="Copyright" href="../../dcommon/html/cpyr.htm" title="Copyright" type="text/html" />

<script type="application/javascript"  src="../../dcommon/js/headfoot.js"></script>
<script type="application/javascript"  src="../../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html" />
<link rel="Index" href="index.htm" title="Index" type="text/html" />
<link rel="Prev" href="admpolcy.htm" title="Previous" type="text/html" />
<link rel="Next" href="audit.htm" title="Next" type="text/html" />
<link rel="alternate" href="../e10745.pdf" title="PDF version" type="application/pdf" />
<link rel="schema.dcterms" href="http://purl.org/dc/terms/" />
<link rel="stylesheet" href="../../dcommon/css/fusiondoc.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/header.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/footer.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/fonts.css">
<link rel="stylesheet" href="../../dcommon/css/foundation.css">
<link rel="stylesheet" href="../../dcommon/css/codemirror.css">
<link rel="stylesheet" type="text/css" title="Default" href="../../nav/css/html5.css">
<link rel="stylesheet" href="../../dcommon/css/respond-480-tablet.css">
<link rel="stylesheet" href="../../dcommon/css/respond-768-laptop.css">
<link rel="stylesheet" href="../../dcommon/css/respond-1140-deskop.css">
<script type="application/javascript" src="../../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">19/30</span> <!-- End Header -->
<div id="OLSAG068" class="chapter"><a id="i1014154"></a>
<h1 class="chapter"><span class="secnum">11</span> Administering and Using Trusted Stored Program Units</h1>
<p>This chapter explains how to use trusted stored program units to enhance system security. It contains these topics:</p>
<ul>
<li>
<p><a href="#i1014173">Introduction to Trusted Stored Program Units</a></p>
</li>
<li>
<p><a href="#i1014235">Managing Program Unit Privileges with SET_PROG_PRIVS</a></p>
</li>
<li>
<p><a href="#i1014297">Creating and Compiling Trusted Stored Program Units</a></p>
</li>
<li>
<p><a href="#i1014407">Using SA_UTL Functions to Set and Return Label Information</a></p>
</li>
</ul>
<a id="i1014173"></a>
<div id="OLSAG069" class="sect1">
<h2 class="sect1"><span class="secnum">11.1</span> Introduction to Trusted Stored Program Units</h2>
<p><a id="sthref698"></a>Oracle Database stored procedures, functions, and packages are sets of <a id="sthref699"></a>PL/SQL statements stored in a database in compiled form. The single difference between functions and procedures is that functions return a value and procedures do not. Trusted stored program units are like any other stored program units in <span class="italic">Oracle Database</span>: the underlying logic is the same.</p>
<p>A <span class="italic">package</span> is a set of procedures and functions, together with the cursors and variables they use, stored as a unit.<a id="sthref700"></a> There are two parts to a package, the package specification and the package body. The package specification declares the external definition of the public procedures, functions, and variables that the package contains. The package body contains the actual text of the procedures and functions, as well as any private procedures and variables.</p>
<p>A <span class="italic">trusted stored program unit</span> is a stored procedure, function, or package that has been granted one or more Oracle Label Security privileges. Trusted stored program units are typically used to let users perform privileged operations in a controlled manner, or update data at several labels. This is the optimal approach to permit users to access data beyond their authorization.</p>
<p>Trusted stored program units provide fine-grained control over the use of privileges. Although you can potentially grant privileges to many users, the granting of privileges should be done with great discretion because it might violate the security policy established for your application. Rather than assigning privileges to users, you can identify any application operations requiring privileges, and implement them as trusted program units. When you grant privileges to these stored program units, you effectively restrict the Oracle Label Security privileges required by users. This approach employs the principle of <span class="italic">least privilege</span>.</p>
<p>For example, if a user with the label CONFIDENTIAL needs to insert data into SENSITIVE rows, then you can grant the WRITEUP privilege to a trusted stored program to which the user has access. In this way, the user can perform the task by means of the trusted stored program, while staying at the CONFIDENTIAL level.</p>
<p>The trusted program unit performs all the actions on behalf of the user. You can thus effectively encapsulate the security policy into a module that can be verified to make sure that it is valid.</p>
<div id="OLSAG3361" class="sect2"><a id="sthref701"></a>
<h3 class="sect2"><span class="secnum">11.1.1</span> How a Trusted Stored Program Unit Runs</h3>
<p>A trusted stored program unit runs using its own privileges, and the caller's labels. In this way, it can perform privileged operations on the set of rows constrained by the user's labels.</p>
<p><span class="italic">Oracle Database</span> system and <a id="sthref702"></a>object privileges are intended to be bundled into roles. Users are then granted roles as necessary. By contrast, Oracle Label Security privileges can only be assigned to users or to stored program units. These trusted stored program units provide a more manageable mechanism than roles to control the use of Oracle Label Security privileges.</p>
</div>
<!-- class="sect2" -->
<a id="i1014209"></a>
<div id="OLSAG3362" class="sect2">
<h3 class="sect2"><span class="secnum">11.1.2</span> Trusted Stored Program Unit Example</h3>
<p>A <a id="sthref703"></a>trusted stored program unit with the READ privilege can read all unprotected data and all data protected by this policy in the database. Consider, for example, a user who is responsible for creating purchasing forecast reports. The user must perform a summation operation on the amount of all purchases. Regardless of whether or not user's own labels authorize access to the individual purchase orders. The syntax for creating the summation procedure in this example is as follows:</p>
<pre>
CREATE FUNCTION sum_purchases RETURN NUMBER IS
  psum NUMBER;
BEGIN
  SELECT SUM(amount) INTO psum
  FROM purchase_orders;
RETURN psum;
END sum_purchases;
</pre>
<p>In this way, the program unit can gather information the end user is not able to gather, and can make it available by means of a summation.</p>
<p>Note that to run SUM_PURCHASES, the user would need to be granted the standard <span class="italic">Oracle Database</span> EXECUTE object privilege upon this procedure.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="accpriv.htm#i1007327">Chapter 3, "Understanding Access Controls and Privileges"</a></div>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="i1014235"></a>
<div id="OLSAG070" class="sect1">
<h2 class="sect1"><span class="secnum">11.2</span> Managing Program Unit Privileges with SET_PROG_PRIVS</h2>
<p>To grant privileges to a stored program unit, you must have the <span class="italic">policy</span>_DBA role, and the EXECUTE permission on the <a id="sthref704"></a>SA_USER_ADMIN package. You can use either the SA_USER_ADMIN package or Oracle Enterprise Manager to manage Oracle Label Security privileges.</p>
<p>Use the SA_USER_ADMIN.<a id="sthref705"></a>SET_PROG_PRIVS procedure to set policy-specific privileges for program units. If the <span class="italic">privileges</span> parameter is NULL, then the program unit's privileges for the policy are removed.</p>
<p>Syntax:</p>
<pre>
PROCEDURE <a id="sthref706"></a>SET_PROG_PRIVS (
  policy_name           IN VARCHAR2,
  schema_name           IN VARCHAR2,
  program_unit_name     IN VARCHAR2,
  privileges            IN VARCHAR2);
</pre>
<div class="inftblinformal">
<table class="cellalignment2266" title="Parameters used by the SET_PROG_PRIVS procedure" summary="This informal table lists the names of each parameter used in this procedure and describes what that parameter specifies." dir="ltr">
<thead>
<tr class="cellalignment2260">
<th class="cellalignment2267" id="r1c1-t3">Parameter</th>
<th class="cellalignment2267" id="r1c2-t3">Specifies</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2260">
<td class="cellalignment2268" id="r2c1-t3" headers="r1c1-t3"><span class="italic">policy_name</span></td>
<td class="cellalignment2268" headers="r2c1-t3 r1c2-t3">The policy name of an existing policy</td>
</tr>
<tr class="cellalignment2260">
<td class="cellalignment2268" id="r3c1-t3" headers="r1c1-t3"><span class="italic">program_unit_name</span></td>
<td class="cellalignment2268" headers="r3c1-t3 r1c2-t3">Specifies the program unit to be granted privileges</td>
</tr>
<tr class="cellalignment2260">
<td class="cellalignment2268" id="r4c1-t3" headers="r1c1-t3"><span class="italic">privileges</span></td>
<td class="cellalignment2268" headers="r4c1-t3 r1c2-t3">A comma-delimited character string of policy-specific privileges</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" -->
<p>For example, to give the READ privilege to the SUM_PURCHASES function (described in <a href="#i1014209">"Trusted Stored Program Unit Example"</a>), you could enter:</p>
<pre>
EXECUTE sa_user_admin.<a id="sthref707"></a>set_prog_privs (
'HR','myschema','sum_purchases','READ');
</pre>
<p>When the SUM_PURCHASES procedure is then called, it runs with the READ privilege as well as the current user's Oracle Label Security privileges. Using this technique, the user can be allowed to find the value of the total corporate payroll, without learning what salary any individual employee receives.</p>
<div class="infobox-note">
<p class="notep1">Warning:</p>
When you create a trusted stored program unit, have the Oracle Label Security administrator review it carefully and evaluate the privileges you are granting to it. Ensure, for example, that procedures in trusted packages do not perform privileged database operations and then write result or status information into a public variable of the package. In this way, you can make sure that no violations of your site's Oracle Label Security policy can occur.</div>
</div>
<!-- class="sect1" -->
<a id="i1014297"></a>
<div id="OLSAG071" class="sect1">
<h2 class="sect1"><span class="secnum">11.3</span> Creating and Compiling Trusted Stored Program Units</h2>
<p>This section contains these topics:</p>
<ul>
<li>
<p><a href="#i1014320">Creating Trusted Stored Program Units</a></p>
</li>
<li>
<p><a href="#i1014340">Setting Privileges for Trusted Stored Program Units</a></p>
</li>
<li>
<p><a href="#i1014350">Recompiling Trusted Stored Program Units</a></p>
</li>
<li>
<p><a href="#i1014357">Re-creating Trusted Stored Program Units</a></p>
</li>
<li>
<p><a href="#i1014378">Running Trusted Stored Program Units</a></p>
</li>
</ul>
<a id="i1014320"></a>
<div id="OLSAG3363" class="sect2">
<h3 class="sect2"><span class="secnum">11.3.1</span> Creating Trusted Stored Program Units</h3>
<p>You create a <a id="sthref708"></a>trusted stored program unit in the same way that you create a standard procedure, function, or package, that is by using the <a id="sthref709"></a>CREATE PROCEDURE, <a id="sthref710"></a>CREATE FUNCTION, or <a id="sthref711"></a>CREATE PACKAGE and <a id="sthref712"></a>CREATE PACKAGE BODY statements. The program unit becomes trusted when you grant it Oracle Label Security privileges.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink SQLRF" href="../../server.112/e41084/toc.htm"><span class="italic">Oracle Database SQL Language Quick Reference</span></a></div>
</div>
<!-- class="sect2" -->
<a id="i1014340"></a>
<div id="OLSAG3364" class="sect2">
<h3 class="sect2"><span class="secnum">11.3.2</span> Setting Privileges for Trusted Stored Program Units</h3>
<p>When a developer creates a stored program unit, the Oracle Label Security administrator can verify the correctness of the code before granting the necessary privileges to the stored program unit. Whenever the trusted stored program unit is re-created or replaced, its privileges are removed. The Oracle Label Security administrator must then verify the code again and grant the privileges once again.</p>
</div>
<!-- class="sect2" -->
<a id="i1014350"></a>
<div id="OLSAG3365" class="sect2">
<h3 class="sect2"><span class="secnum">11.3.3</span> Recompiling Trusted Stored Program Units</h3>
<p>Recompiling a trusted stored program unit, either automatically or manually (using ALTER PROCEDURE), does not affect its Oracle Label Security privileges. You must, however, grant the EXECUTE privilege on the program unit again after recompiling.<a id="sthref713"></a></p>
</div>
<!-- class="sect2" -->
<a id="i1014357"></a>
<div id="OLSAG3366" class="sect2">
<h3 class="sect2"><span class="secnum">11.3.4</span> Re-creating Trusted Stored Program Units</h3>
<p>Oracle Label Security privileges are revoked if you perform a CREATE OR REPLACE operation on a trusted stored program unit. This limits the potential for misuse of a procedure's Oracle Label Security privileges. Note that t<a id="sthref714"></a>he procedure, function, or package can still run even if the Oracle Label Security privileges have been removed.</p>
<p>If you re-create a procedure, function, or package, then you should carefully review its text. When you are certain that the re-created program unit does not violate your site's Oracle Label Security policy, you can then grant it the required privileges again.</p>
<p>In a development environment where trusted stored program units must frequently be replaced (for example, during the first few months of a live system), it is advisable to create a script that can grant the proper Oracle Label Security privileges, as required.</p>
</div>
<!-- class="sect2" -->
<a id="i1014378"></a>
<div id="OLSAG3367" class="sect2">
<h3 class="sect2"><span class="secnum">11.3.5</span> Running Trusted Stored Program Units</h3>
<p>Under Oracle Label Security all the standard <span class="italic">Oracle Database</span> controls on procedure call (regarding access to tables and schemas) are still in force. Oracle Label Security complements these security mechanisms by controlling access to rows. When a <a id="sthref715"></a>trusted stored program unit is carried out, the policy privileges in force are a union of the invoking user's privileges and the program unit's privileges. Whether a trusted stored program unit calls another trusted program unit or a non-trusted program unit, the program unit called runs with the same privileges as the original program unit.</p>
<p><a id="sthref716"></a><a id="sthref717"></a>If a sequence of non-trusted and trusted stored program units is carried out, the first trusted program unit will determine the privileges of the entire calling sequence from that point on. Consider the following sequence:</p>
<br />
Procedure A (non-trusted)<br />
Procedure B with WRITEUP<br />
Procedure C with WRITEDOWN<br />
Procedure D (non-trusted)
<p>Here, Procedures B, C, and D all runs with the WRITEUP privilege, because B was the first trusted procedure in the sequence. When the sequence ends, the privilege pertaining to Procedure B is no longer in force for subsequent procedures.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
Unhandled exceptions raised in <a id="sthref718"></a>trusted program units are caught by Oracle Label Security. This means that error messages may not be displayed to the user. For this reason, you should always thoroughly test and debug any program units before granting them privileges.</div>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="i1014407"></a>
<div id="OLSAG072" class="sect1">
<h2 class="sect1"><span class="secnum">11.4</span> Using SA_UTL Functions to Set and Return Label Information</h2>
<p>The <a id="sthref719"></a>SA_UTL package provides several functions for use within <a id="sthref720"></a>PL/SQL programs. These functions return information about the current values of the session security attributes, in the form of numeric label values. Although they can be used in program units that are not trusted, these functions are primarily for use in trusted stored program units.</p>
<p>Note that these are public functions; you do not need the <span class="italic">policy</span>_DBA role to use them. In addition, each of the functions has a parallel SA_SESSION function that returns the same labels in character string format.</p>
<ul>
<li>
<p><a href="#i1014435">Viewing Session Label and Row Label Using SA_UTL</a></p>
</li>
<li>
<p><a href="#CHDEDIBJ">Checking Rights to Read and Update Table Row Data</a></p>
</li>
<li>
<p><a href="#i1014455">Setting the Session Label and Row Label Using SA_UTL</a></p>
</li>
<li>
<p><a href="#i1014503">Returning Greatest Lower Bound and Least Upper Bound</a></p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="worklabel.htm#i1009186">"Viewing Session Attributes with SA_SESSION Functions"</a></div>
</li>
</ul>
<a id="i1014435"></a>
<div id="OLSAG3368" class="sect2">
<h3 class="sect2"><span class="secnum">11.4.1</span> Viewing Session Label and Row Label Using SA_UTL</h3>
<p>SA_UTL provides the following procedures for viewing session label and row label.</p>
<div id="OLSAG3369" class="sect3"><a id="sthref721"></a>
<h4 class="sect3"><span class="secnum">11.4.1.1</span> SA_UTL.NUMERIC_LABEL</h4>
<p>This procedure returns the current <a id="sthref722"></a>session label. It takes a policy name as the input parameter and returns a NUMBER value.</p>
<pre>
SA_UTL.<a id="sthref723"></a>NUMERIC_LABEL (policy_name) RETURN NUMBER;
</pre></div>
<!-- class="sect3" -->
<div id="OLSAG3370" class="sect3"><a id="sthref724"></a>
<h4 class="sect3"><span class="secnum">11.4.1.2</span> SA_UTL.NUMERIC_ROW_LABEL</h4>
<p>This procedure returns the current <a id="sthref725"></a>row label. It takes a policy name as the input parameter and returns a NUMBER value.</p>
<pre>
SA_UTL.<a id="sthref726"></a>NUMERIC_ROW_LABEL (policy_name) RETURN NUMBER;
</pre></div>
<!-- class="sect3" -->
<div id="OLSAG3371" class="sect3"><a id="sthref727"></a>
<h4 class="sect3"><span class="secnum">11.4.1.3</span> SA_UTL.DATA_LABEL</h4>
<p>This function returns TRUE if the label is a <span class="italic">data</span> label.</p>
<pre>
FUNCTION <a id="sthref728"></a>DATA_LABEL(label IN NUMBER) 
RETURN BOOLEAN;
</pre></div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="CHDEDIBJ"></a>
<div id="OLSAG3372" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">11.4.2</span> Checking Rights to Read and Update Table Row Data</h3>
<p><code>SA_UTL</code> provides the following functions for checking the current session user rights to policy labeled data.</p>
<div id="OLSAG3373" class="sect3"><!-- infolevel="all" infotype="General" --><a id="sthref729"></a>
<h4 class="sect3"><span class="secnum">11.4.2.1</span> SA_UTL.CHECK_READ</h4>
<p>Use this function to check if the user can read a policy protected table row. This function returns 1 if the user can read the table row. It returns 0 if the user cannot read the table row. The input values are the policy name and the row data label.</p>
<pre>
FUNCTION <a id="sthref730"></a>CHECK_READ (
  policy_name     IN VARCHAR2,
  label       IN NUMBER) 
RETURN NUMBER; 
</pre>
<div class="infobox-note">
<p class="notep1">Note:</p>
The user should already have read privileges on the table to read any data from the table.</div>
</div>
<!-- class="sect3" -->
<div id="OLSAG3374" class="sect3"><!-- infolevel="all" infotype="General" --><a id="sthref731"></a>
<h4 class="sect3"><span class="secnum">11.4.2.2</span> SA_UTL.CHECK_WRITE</h4>
<p>Use this function to check if the user can insert, update, or delete data in a policy protected table row. This function returns 1 if the user can write to the table row. It returns 0 if the user cannot write to the table row. The input values are the policy name and the row data label.</p>
<pre>
FUNCTION <a id="sthref732"></a>CHECK_WRITE (
  policy_name     IN VARCHAR2,
  label       IN NUMBER) 
RETURN NUMBER; 
</pre>
<div class="infobox-note">
<p class="notep1">Note:</p>
The user should already have update privileges on the table to write any data into the table.</div>
</div>
<!-- class="sect3" -->
<div id="OLSAG3375" class="sect3"><!-- infolevel="all" infotype="General" --><a id="sthref733"></a>
<h4 class="sect3"><span class="secnum">11.4.2.3</span> SA_UTL.CHECK_LABEL_CHANGE</h4>
<p>Use this function to check if the user can change the data label for a policy protected table row. This function returns 1 if the user can change the data label. It returns 0 if the user cannot change the data label. The input values are the policy name, the current data label, and the new data label.</p>
<pre>
FUNCTION <a id="sthref734"></a>CHECK_LABEL_CHANGE (
  policy_name     IN VARCHAR2,
  current_label   IN NUMBER,
  new_label       IN NUMBER) 
RETURN NUMBER; 
</pre>
<div class="infobox-note">
<p class="notep1">Note:</p>
The user should already have update privileges on the table to write any data into the table.</div>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="i1014455"></a>
<div id="OLSAG3376" class="sect2">
<h3 class="sect2"><span class="secnum">11.4.3</span> Setting the Session Label and Row Label Using SA_UTL</h3>
<p>These procedures use numeric labels instead of character strings as input values. Available SA_SESSION procedures perform the same functions as these, but in character string format.</p>
<a id="i1014458"></a>
<div id="OLSAG3377" class="sect3">
<h4 class="sect3"><span class="secnum">11.4.3.1</span> SA_UTL.SET_LABEL</h4>
<p><a id="sthref735"></a>Use this procedure to set the label of the current database session. The session's write label and row label are set to the subset of the label's compartments and groups that are authorized for write access.</p>
<pre>
PROCEDURE <a id="sthref736"></a>SET_LABEL (policy_name IN VARCHAR2,
                     label IN NUMBER); 
</pre>
<div class="inftblinformal">
<table class="cellalignment2266" title="Parameters used by the SET_LABEL procedure" summary="This informal table lists the names of each parameter used in this procedure and describes what that parameter specifies." dir="ltr">
<thead>
<tr class="cellalignment2260">
<th class="cellalignment2267" id="r1c1-t11">Parameter</th>
<th class="cellalignment2267" id="r1c2-t11">Specifies</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2260">
<td class="cellalignment2268" id="r2c1-t11" headers="r1c1-t11"><span class="italic">policy_name</span></td>
<td class="cellalignment2268" headers="r2c1-t11 r1c2-t11">The name of an existing policy</td>
</tr>
<tr class="cellalignment2260">
<td class="cellalignment2268" id="r3c1-t11" headers="r1c1-t11"><span class="italic">label</span></td>
<td class="cellalignment2268" headers="r3c1-t11 r1c2-t11">The label to set as the session label</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" --></div>
<!-- class="sect3" -->
<div id="OLSAG3378" class="sect3"><a id="sthref737"></a>
<h4 class="sect3"><span class="secnum">11.4.3.2</span> SA_UTL.SET_ROW_LABEL</h4>
<p><a id="sthref738"></a>Use this procedure to set the row label of the current database session. The compartments and groups in the label must be a subset of compartments and groups in the session label that are authorized for write access.</p>
<pre>
PROCEDURE <a id="sthref739"></a>SET_ROW_LABEL (policy_name IN VARCHAR2,
                         row_label IN NUMBER); 
</pre>
<div class="inftblinformal">
<table class="cellalignment2266" title="Parameters used by the SET_ROW_LABEL procedure" summary="This informal table lists the names of each parameter used in this procedure and describes what that parameter specifies." dir="ltr">
<thead>
<tr class="cellalignment2260">
<th class="cellalignment2267" id="r1c1-t12">Parameter</th>
<th class="cellalignment2267" id="r1c2-t12">Specifies</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2260">
<td class="cellalignment2268" id="r2c1-t12" headers="r1c1-t12"><span class="italic">policy_name</span></td>
<td class="cellalignment2268" headers="r2c1-t12 r1c2-t12">The name of an existing policy</td>
</tr>
<tr class="cellalignment2260">
<td class="cellalignment2268" id="r3c1-t12" headers="r1c1-t12"><span class="italic">row_label</span></td>
<td class="cellalignment2268" headers="r3c1-t12 r1c2-t12">The label to set as the session <a id="sthref740"></a>default row label</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" -->
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="worklabel.htm#i1013397">"Changing Your Session and Row Labels with SA_SESSION"</a></div>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="i1014503"></a>
<div id="OLSAG3379" class="sect2">
<h3 class="sect2"><span class="secnum">11.4.4</span> Returning Greatest Lower Bound and Least Upper Bound</h3>
<p>Functions for greatest lower bound and least upper bound are available.</p>
<div id="OLSAG3380" class="sect3"><a id="sthref741"></a>
<h4 class="sect3"><span class="secnum">11.4.4.1</span> GREATEST_LBOUND</h4>
<p>This function returns a label that is the greatest lower bound of the two label arguments.</p>
<p>Syntax:</p>
<pre>
FUNCTION <a id="sthref742"></a>GREATEST_LBOUND (label1 IN NUMBER,
                          label2 IN NUMBER)
RETURN NUMBER; 
</pre></div>
<!-- class="sect3" -->
<div id="OLSAG3381" class="sect3"><a id="sthref743"></a>
<h4 class="sect3"><span class="secnum">11.4.4.2</span> LEAST_UBOUND</h4>
<p>This function returns an Oracle Label Security label that is the least upper bound of the label arguments.</p>
<p>Syntax:</p>
<pre>
FUNCTION <a id="sthref744"></a>LEAST_UBOUND (label1 IN NUMBER,
                       label2 IN NUMBER)
RETURN NUMBER; 
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="worklabel.htm#i1008754">"Determining Upper and Lower Bounds of Labels"</a>. The functions described here are the same as those described in Chapter 4, except that these return a number instead of a character string.</div>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" --></div>
<!-- class="sect1" --></div>
<!-- class="chapter" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment2259">
<tr>
<td class="cellalignment2268">
<table class="cellalignment2264">
<tr>
<td class="cellalignment2263"><a href="admpolcy.htm"><img width="24" height="24" src="../../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment2263"><a href="audit.htm"><img width="24" height="24" src="../../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;2000, 2013,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment2271">
<table class="cellalignment2262">
<tr>
<td class="cellalignment2263"><a href="../../index.htm"><img width="24" height="24" src="../../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment2263"><a href="../../nav/portal_booklist.htm"><img width="24" height="24" src="../../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment2263"><a href="toc.htm"><img width="24" height="24" src="../../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment2263"><a href="index.htm"><img width="24" height="24" src="../../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment2263"><a href="../../nav/mindx.htm"><img width="24" height="24" src="../../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment2263"><a href="../../dcommon/html/feedback.htm"><img width="24" height="24" src="../../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>
</body>
</html>
