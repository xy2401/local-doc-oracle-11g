<!DOCTYPE html>
<html lang="en" >
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1">
<meta charset="utf-8">
<title>Performing DBA Functions Under Oracle Label Security</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Version 5.1.2 Build 737" />
<meta name="dcterms.created" content="2013-08-19T10:59:36Z" />
<meta name="robots" content="all" />
<meta name="dcterms.title" content="Label Security Administrator's Guide" />
<meta name="dcterms.identifier" content="E10745-04" />
<meta name="dcterms.isVersionOf" content="OLSAG" />
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;2000, 2013,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved." />
<link rel="Start" href="../../index.htm" title="Home" type="text/html" />
<link rel="Copyright" href="../../dcommon/html/cpyr.htm" title="Copyright" type="text/html" />

<script type="application/javascript"  src="../../dcommon/js/headfoot.js"></script>
<script type="application/javascript"  src="../../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html" />
<link rel="Index" href="index.htm" title="Index" type="text/html" />
<link rel="Prev" href="multiple.htm" title="Previous" type="text/html" />
<link rel="Next" href="releas.htm" title="Next" type="text/html" />
<link rel="alternate" href="../e10745.pdf" title="PDF version" type="application/pdf" />
<link rel="schema.dcterms" href="http://purl.org/dc/terms/" />
<link rel="stylesheet" href="../../dcommon/css/fusiondoc.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/header.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/footer.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/fonts.css">
<link rel="stylesheet" href="../../dcommon/css/foundation.css">
<link rel="stylesheet" href="../../dcommon/css/codemirror.css">
<link rel="stylesheet" type="text/css" title="Default" href="../../nav/css/html5.css">
<link rel="stylesheet" href="../../dcommon/css/respond-480-tablet.css">
<link rel="stylesheet" href="../../dcommon/css/respond-768-laptop.css">
<link rel="stylesheet" href="../../dcommon/css/respond-1140-deskop.css">
<script type="application/javascript" src="../../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">22/30</span> <!-- End Header -->
<div id="OLSAG3416" class="chapter"><a id="CJAHDAFJ"></a><a id="i1012823"></a>
<h1 class="chapter"><span class="secnum">14</span> Performing DBA Functions Under Oracle Label Security</h1>
<p>The standard Oracle Database utilities can be used under Oracle Label Security, but certain restrictions apply, and extra steps may be required to get the expected results. This chapter describes these special considerations. It assumes that you are using policy label columns of the NUMBER data type.</p>
<p>The chapter contains these sections:</p>
<ul>
<li>
<p><a href="#i1012856">Using the Export Utility with Oracle Label Security</a></p>
</li>
<li>
<p><a href="#i1012892">Using the Import Utility with Oracle Label Security</a></p>
</li>
<li>
<p><a href="#i1013027">Using SQL*Loader with Oracle Label Security</a></p>
</li>
<li>
<p><a href="#i1013106">Performance Tips for Oracle Label Security</a></p>
</li>
<li>
<p><a href="#i1013305">Creating Additional Databases After Installation</a></p>
</li>
</ul>
<a id="i1012856"></a>
<div id="OLSAG3417" class="sect1">
<h2 class="sect1"><span class="secnum">14.1</span> Using the Export Utility with Oracle Label Security</h2>
<p>The <a id="sthref803"></a>Export utility functions in the standard way under Oracle Label Security. There are, however, a few differences resulting from the enforcement of Oracle Label Security policies.</p>
<ul>
<li>
<p>For any tables protected by an Oracle Label Security policy, only rows with labels authorized for read access will be exported. Unauthorized rows will not be included in the export file. Consequently, to export <span class="italic">all</span> the data in protected tables, you must have a privilege (such as FULL or READ) that gives you complete access.</p>
</li>
<li>
<p>SQL statements to reapply policies are exported along with tables and schemas that are exported. These statements are carried out during <a id="sthref804"></a>import to reapply policies with the same enforcement options as in the original database.</p>
</li>
<li>
<p>The <a id="sthref805"></a>HIDE property is not exported. When protected tables are exported, the label columns in those tables are also exported (as numeric values). However, if a label column is hidden, then it is exported as a normal, unhidden column.</p>
</li>
<li>
<p>The <a id="sthref806"></a>LBACSYS schema cannot be exported due to the use of opaque types in Oracle Label Security. An export of the entire database (parameter FULL=Y) with Oracle Label Security installed can be done, except that the LBACSYS schema would not be exported.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink SUTIL" href="../../server.112/e22490/toc.htm"><span class="italic">Oracle Database Utilities</span></a></div>
</li>
</ul>
<div id="OLSAG3418" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref807"></a>
<h3 class="sect2"><span class="secnum">14.1.1</span> Using Datapump Export Utility with Oracle Label Security</h3>
<p>The user must have EXEMPT ACCESS POLICY in order to export all rows in the table, or else no rows are exported. This restriction is in addition to the export restrictions discussed earlier.</p>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="i1012892"></a>
<div id="OLSAG3419" class="sect1">
<h2 class="sect1"><span class="secnum">14.2</span> Using the Import Utility with Oracle Label Security</h2>
<p>This section explains how the <a id="sthref808"></a>Import utility functions under Oracle Label Security:</p>
<ul>
<li>
<p><a href="#i1012932">Requirements for Import Under Oracle Label Security</a></p>
</li>
<li>
<p><a href="#i1012966">Defining Data Labels for Import</a></p>
</li>
<li>
<p><a href="#i1012995">Importing Labeled Data Without Installing Oracle Label Security</a></p>
</li>
<li>
<p><a href="#i1013011">Importing Unlabeled Data</a></p>
</li>
<li>
<p><a href="#i1013020">Importing Tables with Hidden Columns</a></p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink SUTIL" href="../../server.112/e22490/toc.htm"><span class="italic">Oracle Database Utilities</span></a></div>
</li>
</ul>
<a id="i1012932"></a>
<div id="OLSAG3420" class="sect2">
<h3 class="sect2"><span class="secnum">14.2.1</span> Requirements for Import Under Oracle Label Security</h3>
<p>To use the Import utility under Oracle Label Security, you must prepare the import database and ensure that the import user has the proper authorizations.</p>
<div id="OLSAG3421" class="sect3"><a id="sthref809"></a>
<h4 class="sect3"><span class="secnum">14.2.1.1</span> Preparing the Import Database</h4>
<p>Before you can use the Import utility with Oracle Label Security, you must prepare the import database, as follows:</p>
<ol>
<li>
<p>Install Oracle Label Security.</p>
</li>
<li>
<p>Create any Oracle Label Security policies that protect the data to be imported. The policies must use the same column names as in the export database.</p>
</li>
<li>
<p>Define in the import database all of the label components and individual labels used in tables being imported. Tag values assigned to the policy labels in each database must be the same. (Note that if you are importing into a database from which you exported, then the components are most likely already defined.)</p>
</li>
</ol>
</div>
<!-- class="sect3" -->
<div id="OLSAG3422" class="sect3"><a id="sthref810"></a>
<h4 class="sect3"><span class="secnum">14.2.1.2</span> Verifying Import User Authorizations</h4>
<p><a id="sthref811"></a>To successfully import data under Oracle Label Security, the user running the import operation must be authorized for all of the labels required to insert the data and labels contained in the export file. Errors will be raised upon import if the following requirements are not met:</p>
<p><span class="bold">Requirement 1:</span> To assure that all rows can be imported, the user must have the <span class="italic">policy</span>_DBA role for all policies with data being imported. After each schema or table is imported, any policies from the export database are reapplied to the imported objects.</p>
<p><span class="bold">Requirement 2:</span> The user must also have the ability to write all rows that have been exported. This can be accomplished by one of the following methods:</p>
<ul>
<li>
<p>The user can be granted the FULL privilege.</p>
</li>
<li>
<p>A user-defined labeling function can be applied to the table.</p>
</li>
<li>
<p>The user can be given sufficient authorization to write all labels contained in the import file.</p>
</li>
</ul>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="i1012966"></a>
<div id="OLSAG3423" class="sect2">
<h3 class="sect2"><span class="secnum">14.2.2</span> Defining Data Labels for Import</h3>
<p>The label definitions at the time of <a id="sthref812"></a>import must include all the policy labels used in the <a id="sthref813"></a>export file. You can use the views <a id="sthref814"></a>DBA_SA_LEVELS, <a id="sthref815"></a>DBA_SA_COMPARTMENTS, <a id="sthref816"></a>DBA_SA_GROUPS, and <a id="sthref817"></a>DBA_SA_LABELS in the export database to design SQL scripts that re-create the label components and labels for each policy in the import database. The following example shows how to generate a <a id="sthref818"></a>PL/SQL block that re-creates the individual labels for the HR policy:</p>
<pre>
set serveroutput on
BEGIN
   dbms_output.put_line('BEGIN');
   FOR l IN (SELECT label_tag, label 
                FROM dba_sa_labels
                WHERE policy_name='HR'
                ORDER BY label_tag) LOOP
       dbms_output.put_line
           ('  SA_LABEL_ADMIN.CREATE_LABEL(''HR'', ' ||
            l.label_tag || ', ''' || l.label || ''');');
   END LOOP;
   dbms_output.put_line ('END;');
   dbms_output.put_line ('/');
END;
/
</pre>
<p>If the individual labels do not exist in the import database with the same numeric values and the same character string representations as in the export database, then the label values in the imported tables will be meaningless. The numeric label value in the table may refer to a different character string representation, or it may be a label value that has not been defined at all in the import database.</p>
<p>If a user attempts to access rows containing invalid numeric labels, then the operation will fail.</p>
</div>
<!-- class="sect2" -->
<a id="i1012995"></a>
<div id="OLSAG3424" class="sect2">
<h3 class="sect2"><span class="secnum">14.2.3</span> Importing Labeled Data Without Installing Oracle Label Security</h3>
<p>When policy label columns are defined as a NUMBER data type, they can be imported into databases that do not have Oracle Label Security installed. In this case, the values in the policy label column are imported as numbers. Without the corresponding Oracle Label Security label definitions, the numbers will not reference any specific label.</p>
<p>Note that errors will be raised during the import if Oracle Label Security is not installed, because the SQL statements to reapply the policy to the imported tables and schemas will fail.</p>
</div>
<!-- class="sect2" -->
<a id="i1013011"></a>
<div id="OLSAG3425" class="sect2">
<h3 class="sect2"><span class="secnum">14.2.4</span> Importing Unlabeled Data</h3>
<p><a id="sthref819"></a>You can import unlabeled data into an existing table protected by an Oracle Label Security policy. Either the <a id="sthref820"></a>LABEL_DEFAULT option or a <a id="sthref821"></a>labeling function must be specified for each table being imported, so that the labels for the rows can be automatically initialized as they are inserted into the table.</p>
</div>
<!-- class="sect2" -->
<a id="i1013020"></a>
<div id="OLSAG3426" class="sect2">
<h3 class="sect2"><span class="secnum">14.2.5</span> Importing Tables with Hidden Columns</h3>
<p>A <a id="sthref822"></a>hidden column is exported as a normal column, but the fact that it was hidden is lost. If you want to preserve the hidden property of the label column, you must precreate the table in the import database.</p>
<ol>
<li>
<p>Before you perform the import, create the table and apply the policy with the HIDE option. This causes the policy label column to be added to the table as a hidden column.</p>
</li>
<li>
<p>Then remove the policy from the table, so that the enforcement options specified in the export file can be reapplied to the table during the import operation.</p>
</li>
<li>
<p>Perform the import with <code>IGNORE=Y</code>. Setting the <code>IGNORE</code> parameter to <code>Y</code> ignores errors during import.</p>
</li>
<li>
<p>Manually apply the policy to the table with the HIDE option.</p>
</li>
</ol>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="i1013027"></a>
<div id="OLSAG3427" class="sect1">
<h2 class="sect1"><span class="secnum">14.3</span> Using SQL*Loader with Oracle Label Security</h2>
<p><a id="sthref823"></a>SQL*Loader moves data from external files into tables in Oracle Database. This section contains these topics:</p>
<ul>
<li>
<p><a href="#i1013054">Requirements for Using SQL*Loader Under Oracle Label Security</a></p>
</li>
<li>
<p><a href="#i1013066">Oracle Label Security Input to SQL*Loader</a></p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
For information about SQL*Loader, including log files, discard files, and bad files, see <a class="olink SUTIL" href="../../server.112/e22490/toc.htm"><span class="italic">Oracle Database Utilities</span></a></div>
</li>
</ul>
<a id="i1013054"></a>
<div id="OLSAG3428" class="sect2">
<h3 class="sect2"><span class="secnum">14.3.1</span> Requirements for Using SQL*Loader Under Oracle Label Security</h3>
<p>You can use SQL*Loader with the conventional path to load data into a database protected by Oracle Label Security. Because SQL*Loader performs INSERT operations, all of the standard requirements apply when using SQL*Loader on tables protected by Oracle Label Security policies.</p>
</div>
<!-- class="sect2" -->
<a id="i1013066"></a>
<div id="OLSAG3429" class="sect2">
<h3 class="sect2"><span class="secnum">14.3.2</span> Oracle Label Security Input to SQL*Loader</h3>
<p>If the policy column for a table is hidden, then you must use the HIDDEN keyword to convey this information to SQL*Loader.</p>
<p>To specify row labels in the input file, include the policy label column in the <a id="sthref824"></a>INTO TABLE clause in the control file.</p>
<p>To load policy labels along with the data for each row, you can specify the CHAR_TO_LABEL function or the TO_DATA_LABEL function in the SQL*Loader control file.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
When Oracle Label Security is installed to work with Oracle Internet Directory, dynamic label generation is not allowed, because labels are managed centrally in Oracle Internet Directory, using olsadmintool commands. Refer to <a href="appxb.htm#CJHBBFFB">Appendix B, "Command-line Tools for Label Security Using Oracle Internet Directory"</a>.
<p>So, when Oracle Label Security is directory-enabled, this function, TO_DATA_LABEL, is not available and will generate an error message if used.</p>
</div>
<p>You can use the following variations when loading Oracle Label Security data with SQL*Loader:</p>
<div id="OLSAG3430" class="tblformalwide">
<p class="titleintable"><a id="sthref825"></a><a id="sthref826"></a>Table 14-1 Input Choices for Oracle Label Security Input to SQL*Loader</p>
<table class="cellalignment2266" title="Input Choices for Oracle Label Security Input to SQL*Loader" summary="This table shows several variable choices for the form of data submitted to SQL*Loader and explains the results for each." dir="ltr">
<thead>
<tr class="cellalignment2260">
<th class="cellalignment2267" id="r1c1-t6">Form of Data</th>
<th class="cellalignment2267" id="r1c2-t6">Explanation of Results</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2260">
<td class="cellalignment2268" id="r2c1-t6" headers="r1c1-t6">
<p><code>col1 hidden integer external</code></p>
</td>
<td class="cellalignment2268" headers="r2c1-t6 r1c2-t6">
<p>Hidden column loaded with tag value of data directly from data file</p>
</td>
</tr>
<tr class="cellalignment2260">
<td class="cellalignment2268" id="r3c1-t6" headers="r1c1-t6">
<p><code>col2 hidden char(5) "func(:col2)"</code></p>
</td>
<td class="cellalignment2268" headers="r3c1-t6 r1c2-t6">
<p>Hidden column loaded with character value of data from data file. func() used to translate between the character label and its tag value. Note: func() might be char_to_label().</p>
</td>
</tr>
<tr class="cellalignment2260">
<td class="cellalignment2268" id="r4c1-t6" headers="r1c1-t6">
<p><code>col3 hidden "func(:col3)"</code></p>
</td>
<td class="cellalignment2268" headers="r4c1-t6 r1c2-t6">
<p>Same as in col2 specified earlier, field type defaults to char</p>
</td>
</tr>
<tr class="cellalignment2260">
<td class="cellalignment2268" id="r5c1-t6" headers="r1c1-t6">
<p><code>col4 hidden expression "func(:col4)"</code></p>
</td>
<td class="cellalignment2268" headers="r5c1-t6 r1c2-t6">
<p>Hidden column not mapped to input data. func() will be called to provide the label value. This could be a user function.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformalwide" -->
<p>For example, the following is a valid INTO TABLE clause in a control file that is loading data into the DEPT table:</p>
<pre>
INTO TABLE dept
(hr_label HIDDEN POSITION (1:22) CHAR "CHAR_TO_LABEL('HR',:hr_label)",
deptno    POSITION (23:26) INTEGER EXTERNAL,
dname     POSITION (27:40) CHAR,
loc       POSITION(41,54)  CHAR)
</pre>
<p>The following could be an entry in the data file specified by this control file:</p>
<pre>
HS:FN                  231 ACCOUNTING  REDWOOD SHORES 
</pre></div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="i1013106"></a>
<div id="OLSAG3431" class="sect1">
<h2 class="sect1"><span class="secnum">14.4</span> Performance Tips for Oracle Label Security</h2>
<p>This section explains how to achieve optimal <a id="sthref827"></a>performance with Oracle Label Security.</p>
<ul>
<li>
<p><a href="#i1013132">Using ANALYZE to Improve Oracle Label Security Performance</a></p>
</li>
<li>
<p><a href="#i1013148">Creating Indexes on the Policy Label Column</a></p>
</li>
<li>
<p><a href="#i1013201">Planning a Label Tag Strategy to Enhance Performance</a></p>
</li>
<li>
<p><a href="#i1013275">Partitioning Data Based on Numeric Label Tags</a></p>
</li>
</ul>
<a id="i1013132"></a>
<div id="OLSAG3432" class="sect2">
<h3 class="sect2"><span class="secnum">14.4.1</span> Using ANALYZE to Improve Oracle Label Security Performance</h3>
<p>Run the <a id="sthref828"></a>ANALYZE command on the Oracle Label Security <a id="sthref829"></a>data dictionary tables in the <a id="sthref830"></a>LBACSYS schema, so that the cost-based optimizer can improve execution plans on queries. This will improve Oracle Label Security performance.</p>
<p>Running ANALYZE on application tables improves the application SQL performance.</p>
</div>
<!-- class="sect2" -->
<a id="i1013148"></a>
<div id="OLSAG3433" class="sect2">
<h3 class="sect2"><span class="secnum">14.4.2</span> <a id="sthref831"></a>Creating Indexes on the Policy Label Column</h3>
<p><a id="sthref832"></a><a id="sthref833"></a><a id="sthref834"></a>By creating the appropriate type of index on the policy label column, you can improve the performance of user-raised queries on protected tables.</p>
<p>If you have applied an Oracle Label Security policy on a database table in a particular schema, then you should compare the number of different labels to the amount of data. Based on this information, you can decide which type of index to create on the policy label column.</p>
<ul>
<li>
<p>If the cardinality of data in the policy label column (that is, the number of labels compared to the number of rows) is low, then consider creating a bitmapped index.</p>
</li>
<li>
<p>If the cardinality of data in the policy label column is high, then consider creating a <a id="sthref835"></a>B-tree index.</p>
</li>
</ul>
<p><span class="bold">Example 1:</span></p>
<p>Consider the following case, in which the EMP table is protected by an Oracle Label Security policy with the READ_CONTROL enforcement option set, and HR_LABEL is the name of the policy label column. A user raises the following query:</p>
<pre>
SELECT COUNT (*) FROM scott.emp;
</pre>
<p>In this situation, Oracle Label Security adds a predicate based on the label column. For example:</p>
<pre>
SELECT COUNT (*) FROM scott.emp
  WHERE hr_label=100;
</pre>
<p>In this way, Oracle Label Security uses the security label to restrict the rows that are processed, based on the user's authorizations. To improve performance of this query, you could create an index on the HR_LABEL column.</p>
<p><span class="bold">Example 2:</span></p>
<p>Consider a more complex query (once again, with READ_CONTROL applied to the EMP table):</p>
<pre>
SELECT COUNT (*) FROM scott.emp
  WHERE deptno=10
</pre>
<p>Again, Oracle Label Security adds a predicate based on the label column:</p>
<pre>
SELECT COUNT (*) FROM scott.emp
  WHERE deptno=10
  AND hr_label=100;
</pre>
<p>In this case, you might want to create a composite index based on the DEPTNO and HR_LABEL columns, to improve application performance.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink PFGRF" href="../../server.112/e41573/toc.htm"><span class="italic">Oracle Database Performance Tuning Guide</span></a></div>
</div>
<!-- class="sect2" -->
<a id="i1013201"></a>
<div id="OLSAG3434" class="sect2">
<h3 class="sect2"><span class="secnum">14.4.3</span> Planning a Label Tag Strategy to Enhance Performance</h3>
<p><a id="sthref836"></a>For optimal performance, you can plan a strategy for assigning values to label tags. In general, it is best to assign higher numeric values to labels with higher sensitivity levels. This is because, typically, many more users can see data at comparatively low levels and fewer users at higher levels can see many levels of data.</p>
<p>In addition, with READ_CONTROL set, Oracle Label Security generates a predicate that uses a BETWEEN clause to restrict the rows to be processed by the query. As illustrated in the following example, if the higher-sensitivity labels do not have a higher label tag than the lower-sensitivity labels, then the query will potentially examine a larger set of rows. This will affect <a id="sthref837"></a>performance.</p>
<p>Consider, for example, label tags assigned as follows:</p>
<div id="OLSAG3435" class="tblformal">
<p class="titleintable"><a id="sthref838"></a><a id="sthref839"></a>Table 14-2 Label Tag Performance Example: Correct Values</p>
<table class="cellalignment2269" title="Label Tag Performance Example: Correct Values" summary="This table shows an example of correct values for label tags, explained in the subsequent discussion in text." dir="ltr">
<thead>
<tr class="cellalignment2260">
<th class="cellalignment2267" id="r1c1-t8">Label</th>
<th class="cellalignment2267" id="r1c2-t8">Label Tag</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2260">
<td class="cellalignment2268" id="r2c1-t8" headers="r1c1-t8">
<p>TS:A,B</p>
</td>
<td class="cellalignment2268" headers="r2c1-t8 r1c2-t8">
<p>100</p>
</td>
</tr>
<tr class="cellalignment2260">
<td class="cellalignment2268" id="r3c1-t8" headers="r1c1-t8">
<p>S:A</p>
</td>
<td class="cellalignment2268" headers="r3c1-t8 r1c2-t8">
<p>50</p>
</td>
</tr>
<tr class="cellalignment2260">
<td class="cellalignment2268" id="r4c1-t8" headers="r1c1-t8">
<p>S</p>
</td>
<td class="cellalignment2268" headers="r4c1-t8 r1c2-t8">
<p>20</p>
</td>
</tr>
<tr class="cellalignment2260">
<td class="cellalignment2268" id="r5c1-t8" headers="r1c1-t8">
<p>U:A</p>
</td>
<td class="cellalignment2268" headers="r5c1-t8 r1c2-t8">
<p>10</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<p>Here, a user whose maximum authorization is S:A can potentially access data at labels S:A, S, and U:A. Consider what happens when this user raises the following query:</p>
<pre>
SELECT COUNT (*) FROM scott.emp;
</pre>
<p>Oracle Label Security adds a <a id="sthref840"></a>predicate that includes a BETWEEN clause (based on the user's maximum and minimum authorizations) to restrict the set of rows this user can see:</p>
<pre>
SELECT COUNT (*) FROM scott.emp
  WHERE hr_label BETWEEN 10 AND 50;
</pre>
<p>Performance improves, because the query examines only a subset of data based on the user's authorizations. It does not fruitlessly process rows that the user is not authorized to access.</p>
<p>By contrast, unnecessary work would be performed if tag values were assigned as follows:</p>
<div id="OLSAG3436" class="tblformal">
<p class="titleintable"><a id="sthref841"></a><a id="sthref842"></a>Table 14-3 Label Tag Performance Example: Incorrect Values</p>
<table class="cellalignment2269" title="Label Tag Performance Example: Incorrect Values" summary="This table shows incorrect values for label tags, as explained in the subsequent text." dir="ltr">
<thead>
<tr class="cellalignment2260">
<th class="cellalignment2267" id="r1c1-t9">Label</th>
<th class="cellalignment2267" id="r1c2-t9">Label Tag</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2260">
<td class="cellalignment2268" id="r2c1-t9" headers="r1c1-t9">
<p>TS:A,B</p>
</td>
<td class="cellalignment2268" headers="r2c1-t9 r1c2-t9">
<p>50</p>
</td>
</tr>
<tr class="cellalignment2260">
<td class="cellalignment2268" id="r3c1-t9" headers="r1c1-t9">
<p>S:A</p>
</td>
<td class="cellalignment2268" headers="r3c1-t9 r1c2-t9">
<p>100</p>
</td>
</tr>
<tr class="cellalignment2260">
<td class="cellalignment2268" id="r4c1-t9" headers="r1c1-t9">
<p>S</p>
</td>
<td class="cellalignment2268" headers="r4c1-t9 r1c2-t9">
<p>20</p>
</td>
</tr>
<tr class="cellalignment2260">
<td class="cellalignment2268" id="r5c1-t9" headers="r1c1-t9">
<p>U:A</p>
</td>
<td class="cellalignment2268" headers="r5c1-t9 r1c2-t9">
<p>10</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<p>In this case, the user with S:A authorization can see only some of the labels between 100 and 10. Although the user cannot see TS:A,B labels (that is, rows with a label tag of 50). A query would nonetheless pick up and process these rows, even though the user ultimately will not have access to them.</p>
</div>
<!-- class="sect2" -->
<a id="i1013275"></a>
<div id="OLSAG3437" class="sect2">
<h3 class="sect2"><span class="secnum">14.4.4</span> Partitioning Data Based on Numeric Label Tags</h3>
<p>If you are using a numeric ordering strategy with the numeric label tags that you have applied to the labels, then you can use this as a basis for <span class="italic">Oracle Database</span> data <a id="sthref843"></a>partitioning. Depending on the application, partitioning data based on label values may or may not be useful.</p>
<p>Consider, for example, a business-hosting CRM application to which many companies subscribe. In the same EMP table, there might be rows (and labels) for Subscriber 1 and Subscriber 2. That is, information for both companies can be stored in the same table, as long as it is labeled differently. In this case, employees of Subscriber 1 will never need to access data for Subscriber 2, so it might make sense to partition based on label. You could put rows for Subscriber 1 in one partition, and rows for Subscriber2 in a different partition. When a query is raised, it will access only one or the other partition, depending on the label. <a id="sthref844"></a>Performance improves because partitions that are not relevant are not examined by the query.</p>
<p><a id="i1013284"></a>The following example shows this is done. It places labels in the 2000 series on one partition, labels in the 3000 series on another partition, and labels in the 4000 series on a third partition.</p>
<pre>
CREATE TABLE EMPLOYEE
       (EMPNO NUMBER(10) CONSTRAINT PK_EMPLOYEE PRIMARY KEY,
    ENAME VARCHAR2(10),
    JOB VARCHAR2(9),
    MGR NUMBER(4),
    HIREDATE DATE,
    SAL NUMBER(7,2),
    COMM NUMBER(7,2),
    DEPTNO NUMBER(4),
    HR_LABEL NUMBER(10))
    TABLESPACE PERF_DATA
    STORAGE (initial 2M
    NEXT 1M
    MINEXTENTS 1
    MAXEXTENTS unlimited)
    PARTITION BY RANGE (hr_label)
    (partition sx1 VALUES LESS THAN (2000) NOLOGGING,
     partition sx2 VALUES LESS THAN (3000),
     partition sx3 VALUES LESS THAN (4000) );
</pre></div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="i1013305"></a>
<div id="OLSAG3438" class="sect1">
<h2 class="sect1"><span class="secnum">14.5</span> Creating Additional Databases After Installation</h2>
<p><a id="sthref845"></a><a id="sthref846"></a>When you install the Oracle Database Enterprise Edition and Oracle Label Security, an initial Oracle Database is created. You can then install Oracle Label Security, as described in the <span class="italic">Oracle Label Security Installation Notes</span> for your platform.</p>
<p>If you wish to create additional databases, then Oracle recommends that you do this using the Database Configuration Assistant. Alternatively, you can create additional databases by following the steps listed in Chapter 2 of the <a class="olink ADMIN" href="../../server.112/e25494/toc.htm"><span class="italic">Oracle Database Administrator's Guide</span></a></p>
<p>Each time you create a new database, you must install into it the Oracle Label Security <a id="sthref847"></a>data dictionary tables, views, and packages, and create the <a id="sthref848"></a>LBACSYS account. For the first database, this is done automatically when you install Oracle Label Security. For additional databases, you must perform the following tasks manually.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
If you have not installed Oracle Label Security at least once in your target Oracle environment, then you must first do so using the Oracle Universal Installer.</div>
<ol>
<li>
<p>In your init<span class="italic">sid</span>.ora file, set the <a id="sthref849"></a>COMPATIBLE <a id="sthref850"></a>parameter to the current <span class="italic">Oracle Database</span> release that you are running. (This must be no lower than 8.1.7.)</p>
<p>Shut down and restart your database so that this change will take effect.</p>
</li>
<li>
<p>Connect to the <span class="italic">Oracle Database</span> instance as user SYS, using the <a id="sthref851"></a><code>AS SYSDBA</code> syntax.</p>
</li>
<li>
<p>Run the script <code>$ORACLE_HOME/rdbms/admin/catols.sql</code>.</p>
<p>This script installs the label-based framework, data dictionary, data types, and packages. After the script is run, the LBACSYS account exists, with the password LBACSYS. All the Oracle Label Security packages exist under this account.</p>
</li>
<li>
<p>Change the default password of the LBACSYS user.</p>
</li>
</ol>
<p>Now, you can proceed to create an Oracle Label Security policy.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
For a complete discussion of Oracle database creation, see <a class="olink ADMIN" href="../../server.112/e25494/toc.htm"><span class="italic">Oracle Database Administrator's Guide</span></a></div>
</div>
<!-- class="sect1" --></div>
<!-- class="chapter" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment2259">
<tr>
<td class="cellalignment2268">
<table class="cellalignment2264">
<tr>
<td class="cellalignment2263"><a href="multiple.htm"><img width="24" height="24" src="../../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment2263"><a href="releas.htm"><img width="24" height="24" src="../../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;2000, 2013,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment2271">
<table class="cellalignment2262">
<tr>
<td class="cellalignment2263"><a href="../../index.htm"><img width="24" height="24" src="../../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment2263"><a href="../../nav/portal_booklist.htm"><img width="24" height="24" src="../../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment2263"><a href="toc.htm"><img width="24" height="24" src="../../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment2263"><a href="index.htm"><img width="24" height="24" src="../../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment2263"><a href="../../nav/mindx.htm"><img width="24" height="24" src="../../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment2263"><a href="../../dcommon/html/feedback.htm"><img width="24" height="24" src="../../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>
</body>
</html>
