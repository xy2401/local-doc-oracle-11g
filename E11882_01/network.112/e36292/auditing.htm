<!DOCTYPE html>
<html lang="en" >
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1">
<meta charset="utf-8">
<title>Verifying Security Access with Auditing</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Merged Version 1090" />
<meta name="dcterms.created" content="2017-01-17T12:37:48Z" />
<meta name="robots" content="all" />
<meta name="dcterms.title" content="Database Security Guide" />
<meta name="dcterms.identifier" content="E36292-09" />
<meta name="dcterms.isVersionOf" content="DBSEG" />
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;2006, 2017,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved." />
<link rel="Start" href="../../index.htm" title="Home" type="text/html" />
<link rel="Copyright" href="../../dcommon/html/cpyr.htm" title="Copyright" type="text/html" />

<script type="application/javascript"  src="../../dcommon/js/headfoot.js"></script>
<script type="application/javascript"  src="../../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html" />
<link rel="Index" href="index.htm" title="Index" type="text/html" />
<link rel="Glossary" href="glossary.htm" title="Glossary" type="text/html" />
<link rel="Prev" href="data_encryption.htm" title="Previous" type="text/html" />
<link rel="Next" href="guidelines.htm" title="Next" type="text/html" />
<link rel="alternate" href="../e36292.pdf" title="PDF version" type="application/pdf" />
<link rel="schema.dcterms" href="http://purl.org/dc/terms/" />
<link rel="stylesheet" href="../../dcommon/css/fusiondoc.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/header.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/footer.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/fonts.css">
<link rel="stylesheet" href="../../dcommon/css/foundation.css">
<link rel="stylesheet" href="../../dcommon/css/codemirror.css">
<link rel="stylesheet" type="text/css" title="Default" href="../../nav/css/html5.css">
<link rel="stylesheet" href="../../dcommon/css/respond-480-tablet.css">
<link rel="stylesheet" href="../../dcommon/css/respond-768-laptop.css">
<link rel="stylesheet" href="../../dcommon/css/respond-1140-deskop.css">
<script type="application/javascript" src="../../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">16/19</span> <!-- End Header -->
<script  >
<!-- // <![CDATA[
window.name='auditing'
// ]]> -->
</script> <script  >
// <![CDATA[
function footdisplay(footnum,footnote) {
    var msg = window.open('', 'NewWindow' + footnum,
        'directories=no,height=100,location=no,menubar=no,resizable=yes,' +
        'scrollbars=yes,status=no,toolbar=no,width=598');
    msg.document.open('text/html');
    msg.document.write('<!DOCTYPE html ');
    msg.document.write('PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" ');

    msg.document.write('"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">');
    msg.document.write('<html xmlns="http://www.w3.org/1999/xhtml" lang="en"><head><title>');
    msg.document.write('Footnote&nbsp; ' + footnum);
    msg.document.write('<\/title><meta http-equiv="Content-Type" ');
    msg.document.write('content="text/html; charset=utf-8" />');
    msg.document.write('');
    msg.document.write('<style> <![CDATA[ ');
    msg.document.write('h1 {text-align: center; font-size: 14pt;}');
    msg.document.write('fieldset {border: none;}');
    msg.document.write('form {text-align: center;}');
    msg.document.write(' ]]\u003e <\/style>');
    msg.document.write('<\/head><body><div id="footnote"><h1>Footnote&nbsp; ' + footnum + '<\/h1><p>');
    msg.document.write(footnote);
    msg.document.write('<\/p><form action="" method="post"><fieldset>');
    msg.document.write('<input type="button" value="OK" ');
    msg.document.write('onclick="window.close();" />');
    msg.document.write('<\/fieldset><\/form><\/div><\/body><\/html>');
    msg.document.close();
    setTimeout(function() { var height = msg.document.getElementById('footnote').offsetHeight; msg.resizeTo(598, height + 100); }, 100);
    msg.focus();
}
// ]]>
</script> <noscript>
<p>The script content on this page is for navigation purposes only and does not alter the content in any way.</p>
</noscript>
<div id="DBSEG006" class="chapter"><a id="BCGIDBFI"></a>
<h1 class="chapter"><span class="secnum">9</span> Verifying Security Access with Auditing</h1>
<p>This chapter contains:</p>
<ul>
<li>
<p><a href="#BCGHGJJH">About Auditing</a></p>
</li>
<li>
<p><a href="#BCGEGAGF">Selecting an Auditing Type</a></p>
</li>
<li>
<p><a href="#BCGCJFEG">Auditing General Activities with Standard Auditing</a></p>
</li>
<li>
<p><a href="#CEGGCIAE">Using Default Auditing for Security-Relevant SQL Statements and Privileges</a></p>
</li>
<li>
<p><a href="#CEGBAFIA">Auditing Specific Activities with Fine-Grained Auditing</a></p>
</li>
<li>
<p><a href="#BCGEHHCA">Auditing SYS Administrative Users</a></p>
</li>
<li>
<p><a href="#BCGEADJF">Using Triggers to Write Audit Data to a Separate Table</a></p>
</li>
<li>
<p><a href="#BCGHDJHC">Managing Audit Trail Records</a></p>
</li>
<li>
<p><a href="#BCGJFEEE">Purging Audit Trail Records</a></p>
</li>
<li>
<p><a href="#BCGIICFE">Finding Information About Audited Activities</a></p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="guidelines.htm#BCGJJBAA">"Guidelines for Auditing"</a> for general guidelines to follow for auditing your system</div>
<a id="BCGHGJJH"></a>
<div id="DBSEG60061" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">About Auditing</h2>
<p>This section contains:</p>
<ul>
<li>
<p><a href="#BCGEFHGD">What Is Auditing?</a></p>
</li>
<li>
<p><a href="#CEGHDBIC">Why Is Auditing Used?</a></p>
</li>
<li>
<p><a href="#BCGEFJDC">Protecting the Database Audit Trail</a></p>
</li>
<li>
<p><a href="#BCGGJBHA">Activities That Are Always Written to the Standard and Fine-Grained Audit Records</a></p>
</li>
<li>
<p><a href="#CEGJADDC">Activities That Are Always Audited for All Platforms</a></p>
</li>
<li>
<p><a href="#CDDDDJAA">Auditing in a Distributed Database</a></p>
</li>
<li>
<p><a href="#BCGIJAJF">Best Practices for Auditing</a></p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink SIGAD" href="http://www.oracle.com/pls/topic/lookup?ctx=db112&amp;id=SIGAD"><span class="italic">Oracle Audit Vault and Database Firewall Administrator's Guide</span></a> for more information about Oracle Audit Vault and Database Firewall, which provides advanced auditing features</div>
<a id="BCGEFHGD"></a>
<div id="DBSEG60612" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">What Is Auditing?</h3>
<p><span class="bold">Auditing</span> is the monitoring and recording of selected user database actions, from both database users and nondatabase users<a id="sthref1516" href="#sthref1516" onclick='footdisplay(1,"\"Nondatabase users\" refers to application users who are recognized in the database using the \u003ccode dir=\"ltr\"\u003eCLIENT_IDENTIFIER\u003c/code\u003e attribute. To audit this type of user, you can use a fine-grained audit policy. See \u003ca target=\"auditing\" href=\"#CEGBAFIA\"\u003e\"Auditing Specific Activities with Fine-Grained Auditing\"\u003c/a\u003e for more information.")'><sup class="tablefootnote">Foot&nbsp;1&nbsp;</sup></a>. You can base auditing on individual actions, such as the type of SQL statement executed, or on combinations of data that can include the user name, application, time, and so on. You can audit both successful and failed activities. To use auditing, you enable it, and then configure what must be audited. The actions that you audit are recorded in either data dictionary tables or in operating system files.</p>
<p>Oracle recommends that you enable and configure auditing. Auditing is an effective method of enforcing strong internal controls so that your site can meet its regulatory compliance requirements, as defined in the <a id="sthref1517"></a><a id="sthref1518"></a>Sarbanes-Oxley Act. This enables you to monitor business operations, and find any activities that may deviate from company policy. Doing so translates into tightly controlled access to your database and the application software, ensuring that patches are applied on schedule and preventing ad hoc changes. By enabling auditing by default, you can generate an audit record for audit and compliance personnel. Be selective with auditing and ensure that it meets your business compliance needs.</p>
</div>
<!-- class="sect2" -->
<a id="CEGHDBIC"></a>
<div id="DBSEG340" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Why Is Auditing Used?</h3>
<p>You typically use auditing to perform the following activities:</p>
<ul>
<li>
<p><span class="bold">Enable accountability for actions.</span> These include actions taken in a particular schema, table, or row, or affecting specific content.</p>
</li>
<li>
<p><span class="bold">Deter users (or others, such as intruders) from inappropriate actions based on their accountability.</span></p>
</li>
<li>
<p><span class="bold">Investigate suspicious activity.</span> For example, if a user is deleting data from tables, then a security administrator might decide to audit all connections to the database and all successful and unsuccessful deletions of rows from all tables in the database.</p>
</li>
<li>
<p><span class="bold">Notify an auditor of the actions of an unauthorized user.</span> For example, an unauthorized user could be changing or deleting data, or the user has more privileges than expected, which can lead to reassessing user authorizations.</p>
</li>
<li>
<p><span class="bold">Monitor and gather data about specific database activities.</span> For example, the database administrator can gather statistics about which tables are being updated, how many logical I/Os are performed, or how many concurrent users connect at peak times.</p>
</li>
<li>
<p><span class="bold">Detect problems with an authorization or access control implementation.</span> For example, you can create audit policies that you expect will never generate an audit record because the data is protected in other ways. However, if these policies generate audit records, then you will know the other security controls are not properly implemented.</p>
</li>
<li>
<p><span class="bold">Address auditing requirements for compliance.</span> Regulations such as the following have common auditing-related requirements:</p>
<ul>
<li>
<p>Sarbanes-Oxley Act</p>
</li>
<li>
<p>Health Insurance Portability and Accountability Act (HIPAA)</p>
</li>
<li>
<p>International Convergence of Capital Measurement and Capital Standards: a Revised Framework (Basel II)</p>
</li>
<li>
<p>Japan Privacy Law</p>
</li>
<li>
<p>European Union Directive on Privacy and Electronic Communications</p>
</li>
</ul>
</li>
</ul>
</div>
<!-- class="sect2" -->
<a id="BCGEFJDC"></a>
<div id="DBSEG341" class="sect2">
<h3 class="sect2">Protecting the Database Audit Trail</h3>
<p>When <a id="sthref1519"></a>auditing <a id="sthref1520"></a>for suspicious database activity, you should protect the integrity of the audit trail records to guarantee the accuracy and completeness of the auditing information.</p>
<p>Oracle Database writes the database audit trail to the <code >SYS.AUD</code>$ and <code dir="ltr">SYS.FGA_LOG$</code> tables. Audit records generated as a result of object audit options set for the <code dir="ltr">SYS.AUD</code>$ and <code dir="ltr">SYS.FGA_LOG$</code> tables can only be deleted from the audit trail by someone who has connected with administrator privileges. Remember that administrators are also audited for unauthorized use. See <a href="#BCGEHHCA">"Auditing SYS Administrative Users"</a> for more information.</p>
<p>Other ways to protect the database audit trail are as follows:</p>
<ul>
<li>
<p><span class="bold">Set the <a id="sthref1521"></a>O7_DICTIONARY_ACCESSIBILITY initialization parameter to FALSE (the default).</span> This way, only users who have the <code dir="ltr">SYSDBA</code> privilege can perform DML actions on the audit data in the <code dir="ltr">SYS.AUD$</code> and <code dir="ltr">SYS.FGA_LOG$</code> tables. In a default installation, <code dir="ltr">O7_DICTIONARY_ACCESSIBILITY</code> is set to <code dir="ltr">FALSE</code>.</p>
</li>
<li>
<p><span class="bold">If you have Oracle Database Vault installed, create a realm around the SYSTEM.AUD$ table.</span> By <a id="sthref1522"></a>default, the <code dir="ltr">AUD$</code> table is in the <code dir="ltr">SYSTEM</code> schema. (The synonym <code dir="ltr">SYS.AUD$</code> refers to the <code dir="ltr">SYSTEM.AUD$</code> table.) See <a class="olink DVADM003" href="../../server.112/e23090/cfrealms.htm#DVADM003"><span class="italic">Oracle Database Vault Administrator's Guide</span></a> for more information about realms in Oracle Database Vault.</p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="#BCGCJFEG">"Auditing General Activities with Standard Auditing"</a></p>
</li>
<li>
<p><a href="#CEGBAFIA">"Auditing Specific Activities with Fine-Grained Auditing"</a></p>
</li>
</ul>
</div>
</div>
<!-- class="sect2" -->
<a id="BCGGJBHA"></a>
<div id="DBSEG342" class="sect2">
<h3 class="sect2">Activities That Are Always Written to the Standard and Fine-Grained Audit Records</h3>
<p>When <a id="sthref1523"></a><a id="sthref1524"></a>standard <a id="sthref1525"></a>auditing is enabled (that is, you set <code dir="ltr">AUDIT_TRAIL</code> to <code dir="ltr">DB</code> or <code dir="ltr">DB,EXTENDED</code>), Oracle Database audits all data manipulation language (DML) operations, such as <code dir="ltr">INSERT</code>, <code dir="ltr">UPDATE</code>, <code dir="ltr">MERGE</code>, and <code dir="ltr">DELETE</code> on the <a id="sthref1526"></a><code dir="ltr">SYS.AUD$</code> and<a id="sthref1527"></a> <code dir="ltr">SYS.FGA_LOG$</code> tables by non-<code dir="ltr">SYS</code> users. (It performs this audit even if you have not set audit options for the <code dir="ltr">AUD$</code> and <code dir="ltr">FGA_LOGS$</code> tables.) Typically, non-<code dir="ltr">SYS</code> users do not have access to these tables, except if they have been explicitly granted access. If a non-<code dir="ltr">SYS</code> user tampers with the data in the <code dir="ltr">SYS.FGA_LOG$</code> and <code dir="ltr">SYS.AUD$</code> tables, then Oracle Database writes an audit record for each action.</p>
<p>Oracle Database audits <code dir="ltr">SYS</code> user's <code dir="ltr">DELETE</code>, <code dir="ltr">INSERT</code>, <code dir="ltr">UPDATE</code>, and <code dir="ltr">MERGE</code> operations on the <code dir="ltr">SYS.FGA_LOG$</code> and <code dir="ltr">SYS.AUD$</code> tables if you have set the <code dir="ltr">AUDIT_SYS_OPERATIONS</code> initialization parameter to <code dir="ltr">TRUE</code>. In this case the audit records of all <code dir="ltr">SYS</code> operations are written to whatever directory the <code dir="ltr">AUDIT_FILE_DEST</code> initialization parameter points to. If <code dir="ltr">AUDIT_FILE_DEST</code> is not set, then it writes the records to an operating system-dependent location.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="#BCGCJFEG">"Auditing General Activities with Standard Auditing"</a></p>
</li>
<li>
<p><a href="#CEGBAFIA">"Auditing Specific Activities with Fine-Grained Auditing"</a></p>
</li>
</ul>
</div>
</div>
<!-- class="sect2" -->
<a id="CEGJADDC"></a>
<div id="DBSEG0622" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Activities That Are Always Audited for All Platforms</h3>
<p>Oracle Database always audits <a id="sthref1528"></a>certain database-related operations and writes them to the operating system audit files. It includes the actions of any user who is logged in with the <code dir="ltr">SYSDBA</code> or <code dir="ltr">SYSOPER</code> privilege. This is called<a id="sthref1529"></a><a id="sthref1530"></a> <a href="glossary.htm#CBACEGED"><span class="xrefglossterm">mandatory auditing</span></a>. Even if you have enabled the database audit trail (that is, setting the <code dir="ltr">AUDIT_TRAIL</code> parameter to <code dir="ltr">DB</code>), Oracle Database still writes mandatory records to operating system files.</p>
<p>By default, the operating system files are in the <code dir="ltr">$ORACLE_BASE</code><code dir="ltr">/admin/$ORACLE_SID/adump</code> directory for both UNIX and Windows systems. On Windows systems, Oracle Database also writes this information to the Windows Event Viewer. You can change the location of this directory by setting the <code dir="ltr"><a id="sthref1531"></a>AUDIT_FILE_DEST</code> initialization parameter, which is described in <a href="#BCGHBDJA">"Specifying a Directory for the Operating System Audit Trail"</a>.</p>
<p>Mandatory auditing includes the following operations:</p>
<ul>
<li>
<p><span class="bold">Database startup.</span> An audit record is generated that lists the operating system user starting the instance, the user terminal identifier, and the date and time stamp. This data is stored in the operating system audit trail because the database audit trail is not available until after the startup has successfully completed.</p>
</li>
<li>
<p><a id="sthref1532"></a><span class="bold">SYSDBA and SYSOPER logins.</span> Oracle Database records all <code dir="ltr">SYSDBA</code> and <code dir="ltr">SYSOPER</code> connections.</p>
</li>
<li>
<p><span class="bold">Database shutdown.</span> An audit record is generated that lists the operating system user shutting down the instance, the user terminal identifier, and the date and time stamp.</p>
</li>
</ul>
<div class="infobox-note">
<p class="notep1">Note:</p>
If you set the <code dir="ltr">AUDIT_SYSLOG_LEVEL</code> initialization parameter, mandatory <a id="sthref1533"></a><a id="sthref1534"></a>actions<a id="sthref1535"></a> are <a id="sthref1536"></a><a id="sthref1537"></a>written the to the UNIX syslog. See <a href="#CEGBIIJD">"Using the Syslog Audit Trail on UNIX Systems"</a> for more information about the syslog audit trail. See also your operating system-specific Oracle Database documentation for more information about the operating system and syslog audit trail.</div>
</div>
<!-- class="sect2" -->
<a id="CDDDDJAA"></a>
<div id="DBSEG60613" class="sect2">
<h3 class="sect2">Auditing in a Distributed Database</h3>
<p>Auditing is site autonomous. <a id="sthref1538"></a><a id="sthref1539"></a>An instance audits only the statements issued by directly connected users. A local Oracle Database node cannot audit actions that take place in a remote database.</p>
</div>
<!-- class="sect2" -->
<a id="BCGIJAJF"></a>
<div id="DBSEG343" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Best Practices for Auditing</h3>
<p>Follow <a id="sthref1540"></a><a id="sthref1541"></a>these best practices guidelines:</p>
<ul>
<li>
<p>As a general rule, design your auditing strategy to collect the amount of information that you need to meet compliance requirements, but being sure to focus on activities that cause the greatest security concerns. For example, auditing every table in the database is not practical, but auditing table columns that contain sensitive data, such as salaries, is. With both standard and fine-grained auditing, there are mechanisms you can use to design audit policies that focus on specific activities to audit.</p>
</li>
<li>
<p>Periodically archive and purge the audit trail data. See <a href="#BCGJFEEE">"Purging Audit Trail Records"</a> for more information.</p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="guidelines.htm#BCGJJBAA">"Guidelines for Auditing"</a> for general guidelines to follow for auditing your system</div>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="BCGEGAGF"></a>
<div id="DBSEG90002" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Selecting an Auditing Type</h2>
<p>You must perform a specific set of steps depending on the type of auditing that you want to perform: general activities (such as SQL statement actions), commonly used auditing activities, or fine-grained auditing.</p>
<p><a id="sthref1542"></a>In <a id="sthref1543"></a><a id="sthref1544"></a>addition to these types of auditing, remember that Oracle Database mandatorily audits some activities. See Activities That Are Mandatorily Audited for more information.</p>
<div class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref1545"></a>
<h3 class="sect2">Auditing SQL Statements, Privileges, and Other General Activities</h3>
<p>Oracle Database provides a set of default audit settings that you can enable for commonly used security-relevant SQL statements and privileges.</p>
<p><span class="bold">Location of audit records:</span> Oracle Database writes these audit records to the location based on the <code dir="ltr">AUDIT_TRAIL</code> initialization parameter. See also <a href="#CEGCBJIE">"About Audit Records"</a>.</p>
<p>General steps:</p>
<ol>
<li>
<p>Follow the instructions in <a href="#CEGGCIAE">"Using Default Auditing for Security-Relevant SQL Statements and Privileges"</a> to enable default auditing.</p>
<p>To understand more about the database audit trail, see <a href="#BCGHDJHC">"Managing Audit Trail Records"</a>.</p>
</li>
<li>
<p>To monitor audit activities, periodically query the database audit trail data dictionary views. See <a href="#BCGIICFE">"Finding Information About Audited Activities"</a>.</p>
</li>
<li>
<p>Perform maintenance on the database audit trail. See <a href="#CEGDGIAF">"Managing the Database Audit Trail"</a>.</p>
</li>
<li>
<p>Periodically archive and purge the contents of the audit trail. See <a href="#BCGJFEEE">"Purging Audit Trail Records"</a>.</p>
</li>
</ol>
</div>
<!-- class="sect2" -->
<div class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref1546"></a>
<h3 class="sect2">Auditing Commonly Used Security-Relevant Activities</h3>
<p>You can audit at the most granular level, data access, and actions based on content, using Boolean measures, such as <code dir="ltr">value &gt; 7800</code> or the IP address from which an action occurred.</p>
<p><span class="bold">Location of audit records:</span> You can write the audit records to either the database audit trail or an operating system audit trail in XML format. See also <a href="#CEGCBJIE">"About Audit Records"</a>.</p>
<p>General steps:</p>
<ol>
<li>
<p>See <a href="#CEGBAFIA">"Auditing Specific Activities with Fine-Grained Auditing"</a> to understand more about auditing specific activities.</p>
</li>
<li>
<p>Decide whether you want to write audit records to the database audit trail or to an operating system file. See <a href="#CEGDGIAF">"Managing the Database Audit Trail"</a>.</p>
</li>
<li>
<p>Use the <code dir="ltr">DBMS_FGA</code> PL/SQL package to configure fine-grained auditing policies. The <code dir="ltr">DBMS_FGA.ADD_POLICY</code> procedure provides the <code dir="ltr">audit_trail</code> parameter, which you use to select the audit trail type. You can choose between a database audit trail or an operating system audit trail using XML files. See the following sections:</p>
<p><a href="#CEGFHJAC">"Creating an Audit Trail for Fine-Grained Audit Records"</a></p>
<p><a href="#CEGHFFGE">"Using the DBMS_FGA Package to Manage Fine-Grained Audit Policies"</a></p>
</li>
<li>
<p>To monitor audit activities, periodically check the operating system records you configured, or query the audit trail data dictionary views. See <a href="#BCGIICFE">"Finding Information About Audited Activities"</a>.</p>
</li>
<li>
<p>Perform maintenance on the audit trail. See <a href="#BCGHDJHC">"Managing Audit Trail Records"</a>.</p>
</li>
<li>
<p>Periodically archive and purge the contents of the audit trail. See <a href="#BCGJFEEE">"Purging Audit Trail Records"</a>.</p>
</li>
</ol>
</div>
<!-- class="sect2" -->
<div class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref1547"></a>
<h3 class="sect2">Auditing Specific, Fine-Grained Activities</h3>
<p>You can audit the top-level SQL statements issued by users who have connected using the <code dir="ltr">SYSDBA</code> or <code dir="ltr">SYSOPER</code> privilege. (<a id="sthref1548"></a>Top-level refers to statements directly issued by a user. Statements run from a PL/SQL procedure or function are not considered top-level.)</p>
<p><span class="bold">Location of audit records:</span> Oracle Database writes these audit records to an operating system audit trail only. On Windows, Oracle Database writes the <code dir="ltr">SYS</code> audit records to the Windows Event log by default. For UNIX systems, you can write records to a syslog file. See also <a href="#CEGCBJIE">"About Audit Records"</a>.</p>
<p>General steps:</p>
<ol>
<li>
<p>See <a href="#BCGEHHCA">"Auditing SYS Administrative Users"</a> to configure administrative auditing.</p>
</li>
<li>
<p>To understand more about the operating system audit trail, see <a href="#CEGBDFCF">Managing the Operating System Audit Trail</a>.</p>
</li>
<li>
<p>To monitor audit activities, periodically check the operating system or syslog records you configured. If you are writing to an XML file, you can query the <code dir="ltr">V$XML_AUDIT_TRAIL</code> and <code dir="ltr">DBA_COMMON_AUDIT_TRAIL</code> views. See <a href="#BCGIICFE">"Finding Information About Audited Activities"</a>.</p>
</li>
<li>
<p>Perform maintenance on the audit trail. See <a href="#BCGHDJHC">"Managing Audit Trail Records"</a></p>
</li>
<li>
<p>Periodically archive and purge the contents of the audit trail. See <a href="#BCGJFEEE">"Purging Audit Trail Records"</a>.</p>
</li>
</ol>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="BCGCJFEG"></a>
<div id="DBSEG345" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Auditing General Activities with Standard Auditing</h2>
<p>This section contains:</p>
<ul>
<li>
<p><a href="#BCGEHDAG">About Standard Auditing</a></p>
</li>
<li>
<p><a href="#BCGFBDFI">Configuring Standard Auditing with the AUDIT_TRAIL Initialization Parameter</a></p>
</li>
<li>
<p><a href="#BCGFJEED">What Do the Operating System and Database Audit Trails Have in Common?</a></p>
</li>
<li>
<p><a href="#BCGJEBEG">Using the Operating System Audit Trail</a></p>
</li>
<li>
<p><a href="#CEGBIIJD">Using the Syslog Audit Trail on UNIX Systems</a></p>
</li>
<li>
<p><a href="#BCGIHHBJ">How the AUDIT and NOAUDIT SQL Statements Work</a></p>
</li>
<li>
<p><a href="#CEGEEBGE">Auditing SQL Statements</a></p>
</li>
<li>
<p><a href="#CEGDDHDB">Auditing Privileges</a></p>
</li>
<li>
<p><a href="#CEGDFFFE">Auditing SQL Statements and Privileges in a Multitier Environment</a></p>
</li>
<li>
<p><a href="#CEGEGJJB">Auditing Schema Objects</a></p>
</li>
<li>
<p><a href="#BCGFBDDE">Auditing Directory Objects</a></p>
</li>
<li>
<p><a href="#BCGBEAGC">Auditing Functions, Procedures, Packages, and Triggers</a></p>
</li>
<li>
<p><a href="#CEGDHGJI">Auditing Network Activity</a></p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="#BCGEHHCA">"Auditing SYS Administrative Users"</a> to learn how to use standard auditing to audit <code dir="ltr">SYS</code> users</p>
</li>
<li>
<p><a class="olink TDPSG50528" href="../../server.112/e10575/tdpsg_auditing.htm#TDPSG50528"><span class="italic">Oracle Database 2 Day + Security Guide</span></a> for a tutorial on creating a standard audit trail</p>
</li>
</ul>
</div>
<a id="BCGEHDAG"></a>
<div id="DBSEG346" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">About Standard Auditing</h3>
<p>This section contains:</p>
<ul>
<li>
<p><a href="#BCGHBBJB">What Is Standard Auditing?</a></p>
</li>
<li>
<p><a href="#BCGCBFEC">Who Can Perform Standard Auditing?</a></p>
</li>
<li>
<p><a href="#BCGGCJGI">When Are Standard Audit Records Created?</a></p>
</li>
</ul>
<a id="BCGHBBJB"></a>
<div id="DBSEG347" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">What Is Standard Auditing?</h4>
<p>In standard <a id="sthref1549"></a>auditing, you audit SQL statements, privileges, schema objects, and network activity. <a id="sthref1550"></a>You configure standard auditing by using the <code dir="ltr">AUDIT</code> SQL statement and <code dir="ltr">NOAUDIT</code> to remove this configuration. You can write the audit records to either the database audit trail or to operating system audit files.</p>
</div>
<!-- class="sect3" -->
<a id="BCGCBFEC"></a>
<div id="DBSEG348" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Who Can Perform Standard Auditing?</h4>
<p>Any user can <a id="sthref1551"></a>configure auditing for the objects in his or her own schema, by using the <code dir="ltr">AUDIT</code> statement. To undo the audit configuration for this object, the user can use the <code dir="ltr">NOAUDIT</code> statement. No additional privileges are needed to perform this task. Users can run <code dir="ltr">AUDIT</code> statements to set auditing options regardless of the <code dir="ltr">AUDIT_TRAIL</code> parameter setting. If auditing has been disabled, the next time it is enabled, Oracle Database will record the auditing activities set by the <code dir="ltr">AUDIT</code> statements. <a href="#CEGHGFBH">"Enabling or Disabling the Standard Audit Trail"</a> explains how to enable standard auditing.</p>
<p>Note the following:</p>
<ul>
<li>
<p>To audit objects in another schema, the user must have the <code dir="ltr">AUDIT ANY</code> system privilege.</p>
</li>
<li>
<p>To audit system privileges, the user must have the <code dir="ltr">AUDIT SYSTEM</code> privilege.</p>
</li>
<li>
<p>If the <code dir="ltr"><a id="sthref1552"></a>O7_DICTIONARY_ACCESSIBILITY</code> initialization parameter has been set to <code dir="ltr">FALSE</code> (the default), then only users who have the <code dir="ltr">SYSDBA</code> privilege can perform DML actions on the audit data in the <code dir="ltr">SYS.AUD$</code> and <code dir="ltr">SYS.FGA_LOG$</code> tables. For greater security, set the <code dir="ltr">O7_DICTIONARY_ACCESSIBILITY</code> parameter to <code dir="ltr">FALSE</code> so that non-<code dir="ltr">SYSDBA</code> users cannot audit <code dir="ltr">SYS</code> objects.</p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a class="olink SQLRF30002" href="http://www.oracle.com/pls/topic/lookup?ctx=db112&amp;id=SQLRF30002"><code dir="ltr">GRANT</code></a> in <span class="italic">Oracle Database SQL Language Reference</span> for a listing of available system and object privileges</p>
</li>
<li>
<p><a class="olink SQLRF01107" href="../../server.112/e41084/statements_4007.htm#SQLRF01107"><code dir="ltr">AUDIT</code></a> in <span class="italic">Oracle Database SQL Language Reference</span> for a full listing of audit options</p>
</li>
</ul>
</div>
</div>
<!-- class="sect3" -->
<a id="BCGGCJGI"></a>
<div id="DBSEG349" class="sect3">
<h4 class="sect3">When Are Standard Audit Records Created?</h4>
<p>You, <a id="sthref1553"></a>as the security administrator, enable or disable standard auditing for the entire database. If it is disabled, then no audit records are created. <a id="sthref1554"></a>Configuring audit options is described in the previous section, <a href="#BCGCBFEC">"Who Can Perform Standard Auditing?"</a></p>
<p>When auditing is enabled in the database and an action configured to be audited occurs, Oracle Database generates an audit record during or after the execution phase of the SQL statement. <a id="sthref1555"></a>Oracle Database individually audits SQL statements inside PL/SQL program units, as necessary, when the program unit is run.</p>
<p><a id="sthref1556"></a>The generation and insertion of an audit trail record is independent of a user transaction being committed. That is, even if a user transaction is rolled back, the audit trail record remains committed.</p>
<p><a id="sthref1557"></a><a id="sthref1558"></a>Statement and privilege audit options in effect at the time a database user connects to the database remain in effect for the duration of the session. When the session is already active, setting or changing statement or privilege audit options does not take effect in that session. The modified statement or privilege audit options take effect only when the current session ends and a new session is created.</p>
<p>In contrast, changes to schema object audit options become immediately effective for current sessions.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink CNCPT015" href="../../server.112/e40540/sqllangu.htm#CNCPT015"><span class="italic">Oracle Database Concepts</span></a> for information about the different phases of SQL statement processing and shared SQL</div>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="BCGFBDFI"></a>
<div id="DBSEG30002" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Configuring Standard Auditing with the AUDIT_TRAIL Initialization Parameter</h3>
<p>This section contains:</p>
<ul>
<li>
<p><a href="#CEGHGFBH">Enabling or Disabling the Standard Audit Trail</a></p>
</li>
<li>
<p><a href="#BCGEJACG">Settings for the AUDIT_TRAIL Initialization Parameter</a></p>
</li>
</ul>
<a id="CEGHGFBH"></a>
<div id="DBSEG66232" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Enabling or Disabling the Standard Audit Trail</h4>
<p>You enable<a id="sthref1559"></a> the <a id="sthref1560"></a>standard <a id="sthref1561"></a>audit trail by setting the <code dir="ltr"><a id="sthref1562"></a>AUDIT_TRAIL</code> initialization parameter. This setting determines whether to create the audit trail in the database audit trail, write the audit activities to an operating system file, or to disable auditing.</p>
<p><a id="sthref1563"></a>To enable or disable the standard audit trail, log in to SQL*Plus with administrative privileges, and use the <code dir="ltr">ALTER SYSTEM</code> statement. Afterwards, you need to restart the database instance.</p>
<p>To check the current value of the <code dir="ltr">AUDIT_TRAIL</code> parameter, use the <code dir="ltr">SHOW PARAMETER</code> command in SQL*Plus.</p>
<p><a href="#BCGHDIGI">Example 9-1</a> shows how to check the <code dir="ltr">AUDIT_TRAIL</code> parameter setting.<a id="sthref1564"></a><a id="sthref1565"></a></p>
<div id="DBSEG350" class="example">
<p class="titleinexample"><a id="BCGHDIGI"></a>Example 9-1 Checking the Current Value of the AUDIT_TRAIL Initialization Parameter</p>
<pre dir="ltr">
SHOW PARAMETER AUDIT_TRAIL

NAME                                 TYPE        VALUE
------------------------------------ ----------- -------
audit_trail                          string      DB
</pre></div>
<!-- class="example" -->
<p><a href="#BCGBCEJB">Example 9-2</a> shows how to log onto SQL*Plus, enable the standard audit trail, and then restart the database instance.</p>
<div id="DBSEG351" class="example">
<p class="titleinexample"><a id="BCGBCEJB"></a>Example 9-2 Enabling the Standard Audit Trail</p>
<pre dir="ltr">
CONNECT SYSTEM
Enter password: <span class="italic">password</span>

ALTER SYSTEM SET AUDIT_TRAIL=DB SCOPE=SPFILE;
System altered.

CONNECT SYS/AS SYSOPER
Enter password: <span class="italic">password</span>

SHUTDOWN
Database closed.
Database dismounted.
ORACLE instance shut down.

STARTUP
ORACLE instance started.
</pre></div>
<!-- class="example" -->
<p>This example uses the <code dir="ltr">SCOPE</code> clause because the database instance had been started using a server parameter file (<code dir="ltr">SPFILE</code>). Starting the database with a server parameter file is the preferred way of starting a database instance. See <a class="olink ADMIN00202" href="../../server.112/e25494/create.htm#ADMIN00202"><span class="italic">Oracle Database Administrator's Guide</span></a> for information about creating configuring server parameter files.</p>
</div>
<!-- class="sect3" -->
<a id="BCGEJACG"></a>
<div id="DBSEG90022" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Settings for the AUDIT_TRAIL Initialization Parameter</h4>
<p><a href="#CEGHHFBF">Table 9-1</a> <a id="sthref1566"></a>lists <a id="sthref1567"></a>the settings you can use for the <code dir="ltr">AUDIT_TRAIL</code> initialization parameter.</p>
<div id="DBSEG352" class="tblhruleformalwide">
<p class="titleintable"><a id="sthref1568"></a><a id="CEGHHFBF"></a>Table 9-1 AUDIT_TRAIL Initialization Parameter Settings</p>
<table class="cellalignment2250" title="AUDIT_TRAIL Initialization Parameter Settings" summary="This table lists and describes the legal values that can be used with the AUDIT_TRAIL initialization parameter." dir="ltr">
<thead>
<tr class="cellalignment2244">
<th class="cellalignment2251" id="r1c1-t11">AUDIT_TRAIL Value</th>
<th class="cellalignment2251" id="r1c2-t11">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r2c1-t11" headers="r1c1-t11">
<p><code dir="ltr">DB</code></p>
</td>
<td class="cellalignment2252" headers="r2c1-t11 r1c2-t11">
<p>Directs audit records to the database audit trail (the <a id="sthref1569"></a><a id="sthref1570"></a><code dir="ltr">SYS.AUD$</code> table), except for mandatory and <code dir="ltr">SYS</code> audit records, which are always written to the operating system audit trail. (<a href="#BCGEGAGF">"Selecting an Auditing Type"</a> describes the location of the audit records for each type of auditing.) Use this setting for a general database for manageability. <code dir="ltr">DB</code> is the default setting for the <code dir="ltr">AUDIT_TRAIL</code> parameter.</p>
<p>If the database was started in read-only mode with <code dir="ltr">AUDIT_TRAIL</code> set to <code dir="ltr">DB</code>, then Oracle Database internally sets <code dir="ltr">AUDIT_TRAIL</code> to <code dir="ltr">OS</code>. Check the alert log for <a id="sthref1571"></a>details. <a id="sthref1572"></a><a id="sthref1573"></a></p>
<p>See also <a href="#CEGDGIAF">"Managing the Database Audit Trail"</a>.</p>
</td>
</tr>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r3c1-t11" headers="r1c1-t11">
<p><code dir="ltr"><a id="sthref1574"></a>DB,EXTENDED</code></p>
</td>
<td class="cellalignment2252" headers="r3c1-t11 r1c2-t11">
<p>Behaves the same as <a id="sthref1575"></a><code dir="ltr">AUDIT_TRAIL=DB</code>, but also populates the SQL bind and SQL text CLOB-type columns of the <code dir="ltr">SYS.AUD$</code> table, when available.</p>
<p><code dir="ltr">DB,EXTENDED</code> enables you to capture the SQL statement used in the action that was audited. You can capture both the SQL statement that caused the audit, and any associated <a id="sthref1576"></a>bind variables. However, be aware that you only can capture data from the following column datatypes: <code dir="ltr">CHAR</code>, <code dir="ltr">NCHAR</code>, <code dir="ltr">VARCHAR</code>, <code dir="ltr">VARCHAR2</code>, <code dir="ltr">NVARCHAR2</code>, <code dir="ltr">NUMBER</code>, <code dir="ltr">FLOAT</code>, <code dir="ltr">BINARY_FLOAT</code>, <code dir="ltr">BINARY_DOUBLE</code>, <code dir="ltr">LONG</code>, <code dir="ltr">ROWID</code>, <code dir="ltr">DATE</code>, <code dir="ltr">TIMESTAMP</code>, and <code dir="ltr">TIMESTAMP WITH TIMEZONE</code>. Also be aware that <code dir="ltr">DB, EXTENDED</code> can capture sensitive data, such as credit card information. See also <a href="guidelines.htm#CHDCGBFF">"Auditing Sensitive Information"</a>.</p>
<p>If the database was started in read-only mode with <code dir="ltr">AUDIT_TRAIL</code> set to <code dir="ltr">DB, EXTENDED</code>, then Oracle Database internally sets <code dir="ltr">AUDIT_TRAIL</code> to <code dir="ltr">OS</code>. Check the alert log for details.</p>
<p>You can specify <code dir="ltr">DB,EXTENDED</code> in any of the following ways:</p>
<pre dir="ltr">
ALTER SYSTEM SET AUDIT_TRAIL=DB,EXTENDED SCOPE=SPFILE;
ALTER SYSTEM SET AUDIT_TRAIL=DB, EXTENDED SCOPE=SPFILE;
ALTER SYSTEM SET AUDIT_TRAIL='DB','EXTENDED' SCOPE=SPFILE;
ALTER SYSTEM SET AUDIT_TRAIL=EXTENDED,DB SCOPE=SPFILE;
ALTER SYSTEM SET AUDIT_TRAIL=EXTENDED, DB SCOPE=SPFILE;
</pre>
<p>However, do not enclose <code dir="ltr">DB, EXTENDED</code> in quotes, for example:</p>
<pre dir="ltr">
ALTER SYSTEM SET AUDIT_TRAIL='DB, EXTENDED' SCOPE=SPFILE;
</pre>
<p>In previous releases, the setting was <code dir="ltr">DB_EXTENDED</code>. This setting has been retained for backward compatibility but may not be available in future releases.</p>
</td>
</tr>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r4c1-t11" headers="r1c1-t11">
<p><code dir="ltr">OS</code></p>
</td>
<td class="cellalignment2252" headers="r4c1-t11 r1c2-t11">
<p>Directs all <a id="sthref1577"></a>audit records to an operating system <a id="sthref1578"></a>file.</p>
<p>Oracle recommends that you use the <code dir="ltr">OS</code> setting, particularly if you are using an ultra-secure database configuration. See <a href="#BCGBCFAD">"Advantages of the Operating System Audit Trail"</a> for more information. See also <a href="#BCGIGCAD">Example 9-3, "Text File Operating System Audit Trail"</a>.</p>
<p>If you set <code dir="ltr">AUDIT_TRAIL</code> to <code dir="ltr">OS</code>, then set the following additional initialization parameters:</p>
<ul>
<li>
<p><code dir="ltr">AUDIT_FILE_DEST</code>, which specifies the location of the operating system audit record file. On UNIX systems, the default location is <code dir="ltr">$ORACLE_BASE/admin/$ORACLE_SID/adump</code>. For better performance on UNIX systems, set the <code dir="ltr">AUDIT_FILE_DEST</code> parameter to a directory on a disk that is locally attached to the host running the Oracle Database instance. On Windows, the <code dir="ltr">OS</code> setting writes the audit trail to the Application area of the Windows Event Viewer.</p>
</li>
<li>
<p><code dir="ltr">AUDIT_SYS_OPERATIONS</code>, if you want to audit the top-level SQL statements directly issued by users who have connected with the <code dir="ltr">SYSDBA</code> or <code dir="ltr">SYSOPER</code> privilege. To enable this auditing, set <code dir="ltr">AUDIT_SYS_OPERATIONS</code> to <code dir="ltr">TRUE</code>.</p>
<p>If you set <code dir="ltr">AUDIT_SYS_OPERATIONS</code> to <code dir="ltr">TRUE</code> and <code dir="ltr">AUDIT_TRAIL</code> to <code dir="ltr">XML</code> or <code dir="ltr">XML,EXTENDED</code>, then Oracle Database writes <code dir="ltr">SYS</code> audit records operating system files in XML format.</p>
</li>
<li>
<p><code dir="ltr">AUDIT_SYSLOG_LEVEL</code>, which writes <code dir="ltr">SYS</code> and standard <code dir="ltr">OS</code> audit records to the system audit log using the <code dir="ltr">SYSLOG</code> utility. This option only applies to UNIX environments. See <a href="#CEGCFCJI">"Configuring Syslog Auditing"</a> for more information.</p>
</li>
</ul>
<p>See also <a href="#CEGBDFCF">"Managing the Operating System Audit Trail"</a>.</p>
</td>
</tr>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r5c1-t11" headers="r1c1-t11">
<p><code dir="ltr"><a id="sthref1579"></a>XML</code></p>
</td>
<td class="cellalignment2252" headers="r5c1-t11 r1c2-t11">
<p>Writes <a id="sthref1580"></a>to the operating system audit record file in XML format. Records all elements of the <code dir="ltr">AuditRecord</code> node given by the XML schema in <code dir="ltr"><a href="http://xmlns.oracle.com/oracleas/schema/dbserver_audittrail-11_2.xsd">http://xmlns.oracle.com/oracleas/schema/dbserver_audittrail-11_2.xsd</a></code> except <code dir="ltr">Sql_Text</code> and <code dir="ltr">Sql_Bind</code> to operating system XML audit files. (This <code dir="ltr">.xsd</code> file represents the schema definition of the XML audit file. An XML schema is a document written in the XML Schema language.)</p>
<p>See also <a href="#BCGBCFAD">"Advantages of the Operating System Audit Trail"</a> and <a href="#BCGEGEBB">Example 9-4, "XML File Operating System Audit Trail"</a>.</p>
<p>If you set the <code dir="ltr">XML</code> value, then also set the <code dir="ltr">AUDIT_FILE_DEST</code> parameter. For all platforms, including Windows, the default location for XML audit trail records is <code dir="ltr">$ORACLE_BASE/admin/$ORACLE_SID/adump</code>.</p>
<p>The <code dir="ltr">XML AUDIT_TRAIL</code> value does not affect syslog <a id="sthref1581"></a>audit file. In other words, if you have set the <code dir="ltr">AUDIT_TRAIL</code> parameter to XML, then the syslog audit records will still be in text format, not XML file format.</p>
<p>You can control the output for <code dir="ltr">SYS</code> and mandatory audit records as follows:</p>
<ul>
<li>
<p><span class="bold">To write SYS and mandatory audit files to operating system files in XML format:</span> Set <code dir="ltr">AUDIT_TRAIL</code> to <code dir="ltr">XML</code> or <code dir="ltr">XML,EXTENDED</code>, set <code dir="ltr">AUDIT_SYS_OPERATIONS</code> to <code dir="ltr">TRUE</code>, but do not set the <code dir="ltr">AUDIT_SYSLOG_LEVEL</code> parameter.</p>
</li>
<li>
<p><span class="bold">To write SYS and mandatory audit records to syslog audit files and standard audit records to XML audit files:</span> Set <code dir="ltr">AUDIT_TRAIL</code> to <code dir="ltr">XML</code> or <code dir="ltr">XML,EXTENDED</code>, set <code dir="ltr">AUDIT_SYS_OPERATIONS</code> to <code dir="ltr">TRUE</code>, and set the <code dir="ltr">AUDIT_SYSLOG_LEVEL</code> parameter.</p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r6c1-t11" headers="r1c1-t11">
<p><code dir="ltr">XML, <a id="sthref1582"></a><a id="sthref1583"></a>EXTENDED</code></p>
</td>
<td class="cellalignment2252" headers="r6c1-t11 r1c2-t11">
<p>Behaves the same <a id="sthref1584"></a>as <a id="sthref1585"></a><code dir="ltr">AUDIT_TRAIL=XML</code>, but also includes SQL text and SQL bind information in the operating system XML audit files.</p>
<p>You can specify <code dir="ltr">XML,EXTENDED</code> in either of the following ways:</p>
<pre dir="ltr">
ALTER SYSTEM SET AUDIT_TRAIL=XML, EXTENDED SCOPE=SPFILE;
ALTER SYSTEM SET AUDIT_TRAIL='XML','EXTENDED' SCOPE=SPFILE;
</pre>
<p>However, do not enclose <code dir="ltr">XML, EXTENDED</code> in quotes, for example:</p>
<pre dir="ltr">
ALTER SYSTEM SET AUDIT_TRAIL='XML, EXTENDED' SCOPE=SPFILE;
</pre>
<p>See also the following sections:</p>
<ul>
<li>
<p><a href="#BCGBCFAD">"Advantages of the Operating System Audit Trail"</a></p>
</li>
<li>
<p><a href="guidelines.htm#CHDCGBFF">"Auditing Sensitive Information"</a></p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r7c1-t11" headers="r1c1-t11">
<p><code dir="ltr">NONE</code></p>
</td>
<td class="cellalignment2252" headers="r7c1-t11 r1c2-t11">
<p>Disables standard auditing. <a id="sthref1586"></a></p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblhruleformalwide" -->
<p>Note the following:</p>
<ul>
<li>
<p><span class="bold">You do not need to restart the database after you run the AUDIT or NOAUDIT statements.</span> You only need to restart the database if you made a universal change, such as changing the <code dir="ltr">AUDIT_TRAIL</code> initialization parameter.</p>
</li>
<li>
<p><span class="bold">You do not need to set AUDIT_TRAIL to enable either fine-grained auditing or SYS auditing.</span> For fine-grained auditing, you add and remove fine-grained audit policies as necessary, applying them to the specific operations or objects you want to monitor. To enable <code dir="ltr">SYS</code> auditing, set the <code dir="ltr">AUDIT_SYS_OPERATIONS</code> parameter to <code dir="ltr">TRUE</code>.</p>
</li>
</ul>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="BCGFJEED"></a>
<div id="DBSEG353" class="sect2">
<h3 class="sect2">What Do the Operating System and Database Audit Trails Have in Common?</h3>
<p>The <a id="sthref1587"></a>operating<a id="sthref1588"></a> system and <a id="sthref1589"></a>database <a id="sthref1590"></a>audit trails both capture many of the same types of actions. <a href="#BCGFHGCC">Table 9-2</a> lists the operating system audit trail records. Most map to equivalent columns in the <code dir="ltr">DBA_AUDIT_TRAIL</code> view. For a description of these columns, see <a class="olink REFRN23023" href="../../server.112/e40402/statviews_3081.htm#REFRN23023"><span class="italic">Oracle Database Reference</span></a>.</p>
<div id="DBSEG354" class="tblhruleformal">
<p class="titleintable"><a id="sthref1591"></a><a id="BCGFHGCC"></a>Table 9-2 Common Audited Actions in the Operating System and Database Audit Trails</p>
<table class="cellalignment2250" title="Common Audited Actions in the Operating System and Database Audit Trails" summary="OS Audit Trail Record Descriptions" dir="ltr">
<thead>
<tr class="cellalignment2244">
<th class="cellalignment2251" id="r1c1-t12">Operating System Audit Record</th>
<th class="cellalignment2251" id="r1c2-t12">Equivalent DBA_AUDIT_TRAIL View Column</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r2c1-t12" headers="r1c1-t12">
<p><code dir="ltr">SESSIONID</code></p>
</td>
<td class="cellalignment2252" headers="r2c1-t12 r1c2-t12">
<p><code dir="ltr">SESSIONID</code></p>
</td>
</tr>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r3c1-t12" headers="r1c1-t12">
<p><code dir="ltr">ENTRYID</code></p>
</td>
<td class="cellalignment2252" headers="r3c1-t12 r1c2-t12">
<p><code dir="ltr">ENTRYID</code></p>
</td>
</tr>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r4c1-t12" headers="r1c1-t12">
<p><code dir="ltr">STATEMENT</code></p>
</td>
<td class="cellalignment2252" headers="r4c1-t12 r1c2-t12">
<p><code dir="ltr">STATEMENTID</code></p>
</td>
</tr>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r5c1-t12" headers="r1c1-t12">
<p><code dir="ltr">USERID</code></p>
</td>
<td class="cellalignment2252" headers="r5c1-t12 r1c2-t12">
<p><code dir="ltr">USERNAME</code></p>
</td>
</tr>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r6c1-t12" headers="r1c1-t12">
<p><code dir="ltr">USERHOST</code></p>
</td>
<td class="cellalignment2252" headers="r6c1-t12 r1c2-t12">
<p><code dir="ltr">USERHOST</code></p>
</td>
</tr>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r7c1-t12" headers="r1c1-t12">
<p><code dir="ltr">TERMINAL</code></p>
</td>
<td class="cellalignment2252" headers="r7c1-t12 r1c2-t12">
<p><code dir="ltr">TERMINAL</code></p>
</td>
</tr>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r8c1-t12" headers="r1c1-t12">
<p><code dir="ltr">ACTION</code></p>
</td>
<td class="cellalignment2252" headers="r8c1-t12 r1c2-t12">
<p><code dir="ltr">ACTION</code></p>
</td>
</tr>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r9c1-t12" headers="r1c1-t12">
<p><code dir="ltr">SYS$OPTIONS</code></p>
</td>
<td class="cellalignment2252" headers="r9c1-t12 r1c2-t12">
<p>Indicates what audit option was set with<a id="sthref1592"></a><a id="sthref1593"></a> <code dir="ltr">AUDIT</code> or <code dir="ltr">NOAUDIT</code>, or what<a id="sthref1594"></a><a id="sthref1595"></a> privilege was granted or revoked.<a id="sthref1596" href="#sthref1596" onclick='footdisplay(1,"For example, if the \u003ccode dir=\"ltr\"\u003eACTION\u003c/code\u003e value is \u003ccode dir=\"ltr\"\u003e104\u003c/code\u003e (for \u003ccode dir=\"ltr\"\u003eAUDIT\u003c/code\u003e) or \u003ccode dir=\"ltr\"\u003e105\u003c/code\u003e (for \u003ccode dir=\"ltr\"\u003eNOAUDIT\u003c/code\u003e), then the \u003ccode dir=\"ltr\"\u003eSYS$OPTIONS\u003c/code\u003e number represents an audit option listed in the \u003ccode dir=\"ltr\"\u003eSTMT_AUDIT_OPTION_MAP\u003c/code\u003e table. If the \u003ccode dir=\"ltr\"\u003eACTION\u003c/code\u003e value is \u003ccode dir=\"ltr\"\u003e108\u003c/code\u003e (for \u003ccode dir=\"ltr\"\u003eGRANT\u003c/code\u003e) or \u003ccode dir=\"ltr\"\u003e109\u003c/code\u003e (for \u003ccode dir=\"ltr\"\u003eREVOKE\u003c/code\u003e), then the number represents a privilege listed in the \u003ccode dir=\"ltr\"\u003eSYSTEM_PRIVILEGE_MAP\u003c/code\u003e table.")'><sup class="tablefootnote">Foot&nbsp;1&nbsp;</sup></a></p>
</td>
</tr>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r10c1-t12" headers="r1c1-t12">
<p><code dir="ltr">RETURNCODE</code></p>
</td>
<td class="cellalignment2252" headers="r10c1-t12 r1c2-t12">
<p><code dir="ltr">RETURNCODE</code></p>
</td>
</tr>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r11c1-t12" headers="r1c1-t12">
<p><code dir="ltr">OBJ$CREATOR</code></p>
</td>
<td class="cellalignment2252" headers="r11c1-t12 r1c2-t12">
<p><code dir="ltr">OWNER</code></p>
</td>
</tr>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r12c1-t12" headers="r1c1-t12">
<p><code dir="ltr">OBJ$NAME</code></p>
</td>
<td class="cellalignment2252" headers="r12c1-t12 r1c2-t12">
<p><code dir="ltr">OBJ_NAME</code></p>
</td>
</tr>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r13c1-t12" headers="r1c1-t12">
<p><code dir="ltr">OBJ$PRIVILEGES</code></p>
</td>
<td class="cellalignment2252" headers="r13c1-t12 r1c2-t12">
<p><code dir="ltr">OBJ_PRIVILEGE</code></p>
</td>
</tr>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r14c1-t12" headers="r1c1-t12">
<p><code dir="ltr">AUTH$GRANTEE</code></p>
</td>
<td class="cellalignment2252" headers="r14c1-t12 r1c2-t12">
<p><code dir="ltr">GRANTEE</code></p>
</td>
</tr>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r15c1-t12" headers="r1c1-t12">
<p><code dir="ltr">NEW$OWNER</code></p>
</td>
<td class="cellalignment2252" headers="r15c1-t12 r1c2-t12">
<p><code dir="ltr">NEW_OWNER</code></p>
</td>
</tr>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r16c1-t12" headers="r1c1-t12">
<p><code dir="ltr">NEW$NAME</code></p>
</td>
<td class="cellalignment2252" headers="r16c1-t12 r1c2-t12">
<p><code dir="ltr">NEW_NAME</code></p>
</td>
</tr>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r17c1-t12" headers="r1c1-t12">
<p><code dir="ltr">SES$ACTIONS</code></p>
</td>
<td class="cellalignment2252" headers="r17c1-t12 r1c2-t12">
<p><code dir="ltr">SES_ACTIONS</code></p>
</td>
</tr>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r18c1-t12" headers="r1c1-t12">
<p><code dir="ltr">LOGOFF$PREAD</code></p>
</td>
<td class="cellalignment2252" headers="r18c1-t12 r1c2-t12">
<p><code dir="ltr">LOGOFF_PREAD</code></p>
</td>
</tr>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r19c1-t12" headers="r1c1-t12">
<p><code dir="ltr">LOGOFF$LWRITE</code></p>
</td>
<td class="cellalignment2252" headers="r19c1-t12 r1c2-t12">
<p><code dir="ltr">LOGOFF_LWRITE</code></p>
</td>
</tr>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r20c1-t12" headers="r1c1-t12">
<p><code dir="ltr">COMMENT$TEXT</code></p>
</td>
<td class="cellalignment2252" headers="r20c1-t12 r1c2-t12">
<p><code dir="ltr">COMMENT_TEXT</code></p>
</td>
</tr>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r21c1-t12" headers="r1c1-t12">
<p><code dir="ltr">OS$USERID</code></p>
</td>
<td class="cellalignment2252" headers="r21c1-t12 r1c2-t12">
<p><code dir="ltr">OS_USERNAME</code></p>
</td>
</tr>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r22c1-t12" headers="r1c1-t12">
<p><code dir="ltr">PRIV$USED</code></p>
</td>
<td class="cellalignment2252" headers="r22c1-t12 r1c2-t12">
<p><code dir="ltr">PRIV_USED</code></p>
</td>
</tr>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r23c1-t12" headers="r1c1-t12">
<p><code dir="ltr">SES$LABEL</code></p>
</td>
<td class="cellalignment2252" headers="r23c1-t12 r1c2-t12">
<p><code dir="ltr">CLIENT_ID</code></p>
</td>
</tr>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r24c1-t12" headers="r1c1-t12">
<p><code dir="ltr">SES$TID</code></p>
</td>
<td class="cellalignment2252" headers="r24c1-t12 r1c2-t12">
<p>Does not have an equivalent in the <code dir="ltr">DBA_AUDIT_TRAIL</code> view, but it does appear in the <code dir="ltr">SYS.AUD$</code> table</p>
</td>
</tr>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r25c1-t12" headers="r1c1-t12">
<p><code dir="ltr">SPARE2</code></p>
</td>
<td class="cellalignment2252" headers="r25c1-t12 r1c2-t12">
<p>Does not have an equivalent in the <code dir="ltr">DBA_AUDIT_TRAIL</code> view, but it does appear in the <code dir="ltr">SYS.AUD$</code> table</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblhruleformal" -->
<p class="tablefootnote"><sup class="tablefootnote">Footnote&nbsp;1&nbsp;</sup>For example, if the <code dir="ltr">ACTION</code> value is <code dir="ltr">104</code> (for <code dir="ltr">AUDIT</code>) or <code dir="ltr">105</code> (for <code dir="ltr">NOAUDIT</code>), then the <code dir="ltr">SYS$OPTIONS</code> number represents an audit option listed in the <code dir="ltr">STMT_AUDIT_OPTION_MAP</code> table. If the <code dir="ltr">ACTION</code> value is <code dir="ltr">108</code> (for <code dir="ltr">GRANT</code>) or <code dir="ltr">109</code> (for <code dir="ltr">REVOKE</code>), then the number represents a privilege listed in the <code dir="ltr">SYSTEM_PRIVILEGE_MAP</code> table.</p>
</div>
<!-- class="sect2" -->
<a id="BCGJEBEG"></a>
<div id="DBSEG355" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Using the Operating System Audit Trail</h3>
<p>This section contains:</p>
<ul>
<li>
<p><a href="#BCGBCJIA">About the Operating System Trail</a></p>
</li>
<li>
<p><a href="#BCGHBHJC">What Do Operating System Audit Trail Records Look Like?</a></p>
</li>
<li>
<p><a href="#BCGBCFAD">Advantages of the Operating System Audit Trail</a></p>
</li>
<li>
<p><a href="#BCGJHGGC">How the Operating System Audit Trail Works</a></p>
</li>
<li>
<p><a href="#BCGHBDJA">Specifying a Directory for the Operating System Audit Trail</a></p>
</li>
</ul>
<a id="BCGBCJIA"></a>
<div id="DBSEG356" class="sect3">
<h4 class="sect3">About the Operating System Trail</h4>
<p>As <a id="sthref1597"></a>an alternative to creating standard audit records in the <code dir="ltr">DBA_AUDIT_TRAIL</code> (<code dir="ltr">SYS.AUD$</code> table), you can create standard audit records in operating system files. The operating system <a id="sthref1598"></a>file that <a id="sthref1599"></a>contains the audit trail can include any of the following data:</p>
<ul>
<li>
<p>Database audit trail records</p>
</li>
<li>
<p>Mandatory audit records (that is, database actions that are always audited)</p>
</li>
<li>
<p>Audit records for administrative users (<code dir="ltr">SYS</code>)</p>
</li>
</ul>
<p>You can write the operating system audit records to either a text file or an XML file.</p>
</div>
<!-- class="sect3" -->
<a id="BCGHBHJC"></a>
<div id="DBSEG66544" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">What Do Operating System Audit Trail Records Look Like?</h4>
<p>The operating system audit trail files are in either text or XML file format. Be aware that the contents of the text and XML operating system files have some differences, and that the formats may change across different releases. With each release of Oracle Database, new enhancements, such as the audit type, have been made to the XML file, but not the text file. The text operating system file has a different presentation for the timestamp, for example:</p>
<pre dir="ltr">
Wed May  6 00:57:36 2009 -07:00
</pre>
<p>However, this timestamp does not appear in the event log or syslog, which have their own format for timestamps. The timestamp string only appears in the text operating system audit files.</p>
<p><a href="#BCGIGCAD">Example 9-3</a> shows a <a id="sthref1600"></a>typical text <a id="sthref1601"></a>operating system audit trail for a logon operation on an Oracle database that is installed on Microsoft Windows. (The text in the actual record wraps around, but for this manual, each item is separated onto its own line for easier readability.)</p>
<div id="DBSEG357" class="example">
<p class="titleinexample"><a id="BCGIGCAD"></a>Example 9-3 Text File Operating System Audit Trail</p>
<pre dir="ltr">
Audit trail: 
LENGTH: "349" 
SESSIONID:[5] "43464" 
ENTRYID:[1] "1" 
STATEMENT:[1] "1" 
USERID:[6] "DBSNMP" 
USERHOST:[7] "SHOBEEN" 
TERMINAL:[3] "MAU" 
ACTION:[3] "100" 
RETURNCODE:[1] "0" 
COMMENT$TEXT:[97] "Authenticated by: DATABASE; Client address: (ADDRESS=(PROTOCOL=tcp)(HOST=192.0.2.4)(PORT=2955))" 
OS$USERID:[19] "NT AUTHORITY\SYSTEM" 
DBID:[10] "1212547373" 
PRIV$USED:[1] "5"
</pre></div>
<!-- class="example" -->
<p>In this example:</p>
<ul>
<li>
<p><code dir="ltr">LENGTH</code> refers to the total number of bytes used in this audit record. This number includes the trailing newline bytes (<code dir="ltr">\n</code>), if any, at the end of the audit record.</p>
</li>
<li>
<p><code dir="ltr">[]</code> brackets indicate the length of each value for each audit entry. For example, the <code dir="ltr">USERID</code> entry, <code dir="ltr">DBSNMP</code>, is 6 bytes long.</p>
</li>
<li>
<p><code dir="ltr">SESSIONID</code> indicates the audit session ID number. You can also find the session ID by querying the <code dir="ltr">AUDSID</code> column in the <code dir="ltr">V$SESSION</code> data dictionary view.</p>
</li>
<li>
<p><code dir="ltr">ENTRYID</code> indicates the current audit entry number, assigned to each audit trail record. The audit <code dir="ltr">ENTRYID</code> sequence number is shared between fine-grained audit records and regular audit records.</p>
</li>
<li>
<p><code dir="ltr">STATEMENT</code> is a numeric ID assigned to the statement the user runs. It appears for each statement issued during the user session, because a statement can result in multiple audit records.</p>
</li>
<li>
<p><code dir="ltr">ACTION</code> is a numeric value representing the action the user performed. The corresponding name of the action type is in the <code dir="ltr">AUDIT_ACTIONS</code> table. For example, action <code dir="ltr">100</code> refers to <code dir="ltr">LOGON</code>.</p>
</li>
<li>
<p><code dir="ltr">RETURNCODE</code> indicates if the audited action was successful. 0 indicates success. If the action fails, the return code lists the Oracle Database error number. For example, if you try to drop a non-existent table, the error number is <code dir="ltr">ORA-00903 invalid table name</code>, which in turn translates to <code dir="ltr">903</code> in the <code dir="ltr">RETURNCODE</code> setting.</p>
</li>
<li>
<p><code dir="ltr">COMMENT$TEXT</code> indicates additional comments about the audit record. For example, for <code dir="ltr">LOGON</code> audit records, it can indicate the authentication method.It corresponds to the <code dir="ltr">COMENT_TEXT</code> column of the <code dir="ltr">DBA_COMMON_AUDIT_TRAIL</code> data dictionary view.</p>
</li>
<li>
<p><code dir="ltr">DBID</code> is a database identifier calculated when the database is created. It corresponds to the <code dir="ltr">DBID</code> column of the <code dir="ltr">V$DATABASE</code> data dictionary view.</p>
</li>
<li>
<p><code dir="ltr">ECONTEXT_ID</code> indicates the application execution context identifier.</p>
</li>
<li>
<p><code dir="ltr">PRIVS$USED</code> refers to the privilege that was used to perform an action. To find the privilege, query the <code dir="ltr">SYSTEM_PRIVILEGE_MAP</code> table. For example, privilege <code dir="ltr">5</code> refers to <code dir="ltr">-5</code> in this table, which means <code dir="ltr">CREATE SESSION</code>. <code dir="ltr">PRIVS$USED</code> corresponds to the <code dir="ltr">PRIV_USED</code> column in the <code dir="ltr">DBA_COMMON_AUDIT_TRAIL</code>, which lists the privilege by name.</p>
</li>
</ul>
<p>Other possible values are as follows:</p>
<ul>
<li>
<p><code dir="ltr">SCN</code> (for example, <code dir="ltr">SCN:8934328925</code>) indicates the System Change Number (SCN). Use this value if you want to perform a flashback query to find the value of a setting (for example, a column) at a time in the past. For example, to find the value of the <code dir="ltr">ORDER_TOTAL</code> column of the <code dir="ltr">OE.ORDERS</code> table based on the SCN number, use the following <code dir="ltr">SELECT</code> statement:</p>
<pre dir="ltr">
SELECT ORDER_TOTAL 
FROM OE.ORDERS
AS OF SCN = 8934328925
WHERE ORDER_TOTAL = 86;
</pre></li>
<li>
<p><code dir="ltr">SES_ACTIONS</code> indicates the actions that took place during the session. This field is present only if the event was audited with the <code dir="ltr">BY SESSION</code> clause. Because this field does not explain in detail the actions that occurred during the session, you should configure the audit event with the <code dir="ltr">BY ACCESS</code> clause.</p>
<p>The <code dir="ltr">SES_ACTIONS</code> field contains 16 characters. Positions 14, 15, and 16 are reserved for future use. In the first 12 characters, each position indicates the result of an action. They are: <code dir="ltr">ALTER</code>, <code dir="ltr">AUDIT</code>, <code dir="ltr">COMMENT</code>, <code dir="ltr">DELETE</code>, <code dir="ltr">GRANT</code>, <code dir="ltr">INDEX</code>, <code dir="ltr">INSERT</code>, <code dir="ltr">LOCK</code>, <code dir="ltr">RENAME</code>, <code dir="ltr">SELECT</code>, <code dir="ltr">UPDATE</code>, and <code dir="ltr">FLASHBACK</code>. For example, if the user had successfully run the <code dir="ltr">ALTER</code> statement, the <code dir="ltr">SES_ACTIONS</code> setting is as follows:</p>
<pre dir="ltr">
S---------------
</pre>
<p>The <code dir="ltr">S</code>, in the first position (for <code dir="ltr">ALTER</code>), indicates success. Had the <code dir="ltr">ALTER</code> statement failed, the letter <code dir="ltr">F</code> would have appeared in its place. If the action resulted in both a success and failure, then the letter is <code dir="ltr">B</code>.</p>
</li>
<li>
<p><code dir="ltr">SES$TID</code> indicates the ID of the object affected by the audited action.</p>
</li>
<li>
<p><code dir="ltr">SPARE2</code> indicates whether the user modified <code dir="ltr">SYS.AUD$</code> table. <code dir="ltr">0</code> means the user modified <code dir="ltr">SYS.AUD$</code>; otherwise, the value is <code dir="ltr">NULL</code>.</p>
</li>
</ul>
<p>Similarly, <a href="#BCGEGEBB">Example 9-4</a> <a id="sthref1602"></a>shows how <a id="sthref1603"></a>an XML audit trail record appears. The text wraps around in the actual record, but for this manual, each element appears on its own line for easier readability. To find all the tags that appear in the XML audit file, you can view its schema in a Web browser at</p>
<p><code dir="ltr"><a href="http://www.oracle.com/technology/oracleas/schema/dbserver_audittrail-11_2.xsd">http://www.oracle.com/technology/oracleas/schema/dbserver_audittrail-11_2.xsd</a></code></p>
<div id="DBSEG358" class="example">
<p class="titleinexample"><a id="BCGEGEBB"></a>Example 9-4 XML File Operating System Audit Trail</p>
<pre dir="ltr">
&lt;?xml version="1.0" encoding="UTF-8"?&gt;
  &lt;Audit xmlns="http://xmlns.oracle.com/oracleas/schema/dbserver_audittrail-11_2.xsd"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xsi:schemaLocation="http://xmlns.oracle.com/oracleas/schema/dbserver_audittrail-11_2.xsd"&gt;
   &lt;Version&gt;11.2&lt;/Version&gt;
   &lt;AuditRecord&gt;
     &lt;Audit_Type&gt;1&lt;/Audit_Type&gt;
       &lt;Session_Id&gt;43535&lt;/Session_Id&gt;
       &lt;StatementId&gt;1&lt;/StatementId&gt;
       &lt;EntryId&gt;1&lt;/EntryId&gt;
       &lt;Extended_Timestamp&gt;2009-04-29T18:32:26.062000Z&lt;/Extended_Timestamp&gt;
       &lt;DB_User&gt;SYSMAN&lt;/DB_User&gt;
       &lt;OS_User&gt;SYSTEM&lt;/OS_User&gt;
       &lt;Userhost&gt;shobeen&lt;/Userhost&gt;
       &lt;OS_Process&gt;3164:3648&lt;/OS_Process&gt;
       &lt;Terminal&gt;mau&lt;/Terminal&gt;
       &lt;Instance_Number&gt;0&lt;/Instance_Number&gt;
       &lt;Action&gt;100&lt;/Action&gt;
       &lt;TransactionId&gt;0000000000000000&lt;/TransactionId&gt; 
       &lt;Returncode&gt;0&lt;/Returncode&gt;
       &lt;Comment_Text&gt;Authenticated by: DATABASE; Client address: (ADDRESS=(PROTOCOL=tcp)(HOST=192.0.2.4)(PORT=3536))&lt;/Comment_Text&gt;
       &lt;Priv_Used&gt;5&lt;/Priv_Used&gt;
&lt;/AuditRecord&gt;
&lt;/Audit&gt;
</pre></div>
<!-- class="example" -->
<p>In this example:</p>
<ul>
<li>
<p><code dir="ltr">AuditRecord</code> element contains the entire audit record. (See <a href="#BCGIGCAD">Example 9-3</a> for more information about the elements within the <code dir="ltr">Audit_Record</code> element.)</p>
</li>
<li>
<p><code dir="ltr">Audit_Type</code> indicates the type of audit trail. Possible values are as follows:</p>
<ul>
<li>
<p>1: Standard audit record</p>
</li>
<li>
<p>2: Fine-grained audit record</p>
</li>
<li>
<p>4: <code dir="ltr">SYS</code> audit record</p>
</li>
<li>
<p>8: Mandatory audit record</p>
</li>
</ul>
<p>This field only appears in the XML audit files, not the OS text audit files.</p>
</li>
<li>
<p><code dir="ltr">Extended_Timestamp</code> indicates the time of the audited operation (timestamp of user login for entries created by <code dir="ltr">AUDIT SESSION</code>), in Coordinated Universal Time (UTC) or Greenwich Mean Time (GMT). This field only appears in the XML audit files, not the OS text audit files.</p>
</li>
<li>
<p><code dir="ltr">Instance_Number</code> indicates the instance number to which the user is connected, for an Oracle Real Application Clusters environment. In this example, the number is <code dir="ltr">0</code>, which is used for single-instance database installations. The <code dir="ltr">INSTANCE_NUMBER</code> initialization parameter specifies this number.</p>
</li>
</ul>
<p>The following values can appear if you set the <code dir="ltr">AUDIT_TRAIL</code> parameter to <code dir="ltr">XML, EXTENDED</code>. Both are listed in the <code dir="ltr">DBA_COMMON_AUDIT_TRAIL</code> data dictionary view.</p>
<ul>
<li>
<p><code dir="ltr">Sql_Bind</code> (for example, <code dir="ltr">&lt;Sql_Bind&gt;#1(5):89&lt;/Sql_Bind&gt;</code>) shows the value of the bind variable. The syntax is as follows:</p>
<pre dir="ltr">
<span class="italic">VariablePosition</span>(<span class="italic">LengthOfVariableValue</span>):<span class="italic">ValueofBindVariable</span>
</pre>
<p>The example <code dir="ltr">#1(5):89</code> indicates that there is 1 bind variable; its value is 5 characters long; and the value of the bind variable is <code dir="ltr">89</code>.</p>
</li>
<li>
<p><code dir="ltr">Sql_Text</code> (for example, <code dir="ltr">&lt;Sql_Text&gt;begin procedure_one(:num); end; &lt;/Sql_Text&gt;</code>) appears if you have set the <code dir="ltr">AUDIT_TRAIL</code> parameter to <code dir="ltr">XML, EXTENDED</code>. It shows the SQL text that the user entered.</p>
</li>
</ul>
</div>
<!-- class="sect3" -->
<a id="BCGBCFAD"></a>
<div id="DBSEG359" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Advantages of the Operating System Audit Trail</h4>
<p>Using<a id="sthref1604"></a> the <a id="sthref1605"></a>operating system audit trail offers these advantages:</p>
<ul>
<li>
<p>It reduces the likelihood of a denial-of-service<a id="sthref1606"></a> (DoS) attack.</p>
</li>
<li>
<p>It makes it easier to secure the audit trail. If the auditor is distinct from the database administrator, then you <span class="italic">must</span> use the <code dir="ltr">OS</code>, <code dir="ltr">XML</code>, or <code dir="ltr">XML, EXTENDED</code> setting. Otherwise, a database administrator can view and modify any auditing information that is stored in the database.</p>
</li>
<li>
<p>Because you are writing the audit trail to a specific location that you can restrict to specific users, the operating system audit trail enforces separation of duty concepts.</p>
</li>
<li>
<p>Writing the audit trail to an operating system file results in the least amount of overhead on the database. For this reason, it is excellent for very large databases.</p>
</li>
<li>
<p>Audit records stored in operating system files can be more secure than database-stored audit records because access can require file permissions that database administrators do not have. Greater availability is another advantage to operating system storage for audit records, because they remain available even if the database is temporarily inaccessible.</p>
</li>
<li>
<p>If the <code dir="ltr">AUDIT_TRAIL</code> initialization parameter is set to <code dir="ltr">XML</code> (or <code dir="ltr">XML, EXTENDED</code>), then Oracle Database writes audit records to the operating system as XML files. You can use the <code dir="ltr">V$XML_AUDIT_TRAIL</code> view to make XML audit records available to database administrators through a SQL query, providing enhanced usability.</p>
</li>
<li>
<p>The <code dir="ltr">DBA_COMMON_AUDIT_TRAIL</code> view includes the standard and fine grained audit trails written to database tables, XML-format audit trail records, and the contents of the <code dir="ltr">V$XML_AUDIT_TRAIL</code> dynamic view (standard, fine grained, <code dir="ltr">SYS</code> and mandatory).</p>
</li>
<li>
<p>Using your operating system audit trail can enable you to consolidate audit records from multiple sources, including Oracle Database and other applications. Examining system activity can be more efficient with all audit records in one place. If you use XML audit records, then you can use of any standard XML editing tool to review or extract information from those records.</p>
</li>
</ul>
</div>
<!-- class="sect3" -->
<a id="BCGJHGGC"></a>
<div id="DBSEG360" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">How the Operating System Audit Trail Works</h4>
<p>The <a id="sthref1607"></a>operating system audit trail writes the audit data to an operating system file. You can enable this feature by setting the <code dir="ltr">AUDIT_TRAIL</code> initialization parameter to one of the following values:</p>
<ul>
<li>
<p><code dir="ltr">OS</code>: Writes the audit trail records to a text operating system file on UNIX systems and to the applications Event Viewer on Microsoft Windows.</p>
</li>
<li>
<p><code dir="ltr">XML</code>: Writes the audit trail records to an XML file.</p>
</li>
<li>
<p><code dir="ltr">XML, EXTENDED</code>: Writes the audit trail records to an XML file and includes SQL text and SQL bind information in the operating system XML audit files.</p>
</li>
</ul>
<p>The <code dir="ltr">AUDIT_FILE_DEST</code> initialization parameter sets the location of the operating system audit file. If you want to audit top-level statements issued by users who log in to the database with the <code dir="ltr">SYSDBA</code> or <code dir="ltr">SYSOPER</code> privilege, then set the <code dir="ltr">AUDIT_SYS_OPERATIONS</code> parameter to <code dir="ltr">TRUE</code>. See <a href="#CEGHHFBF">Table 9-1, "AUDIT_TRAIL Initialization Parameter Settings"</a> for more information about these settings.</p>
<p>The records that are written to an operating system file are not recorded to the <code dir="ltr">SYS.AUD$</code> and <code dir="ltr">SYS.FGA_LOG$</code> tables. You can still view the contents of the XML operating system audit files by querying the <code dir="ltr">DBA_COMMON_AUDIT_TRAIL</code> data dictionary views. Querying this view parses all XML files (all files with an <code dir="ltr">.xml</code> extension) in the <code dir="ltr">AUDIT_FILE_DEST</code> directory, and then presents them in relational table format. Because XML is a standard document format, many utilities are available to parse and analyze XML data. Consult the operating system-specific Oracle Database documentation to find if this feature has been implemented on your operating system.</p>
</div>
<!-- class="sect3" -->
<a id="BCGHBDJA"></a>
<div id="DBSEG361" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Specifying a Directory for the Operating System Audit Trail</h4>
<p>Use the <code dir="ltr"><a id="sthref1608"></a>AUDIT_FILE_DEST</code> initialization <a id="sthref1609"></a>parameter to specify an operating system directory into which the audit trail<a id="sthref1610"></a> is written, when the <code dir="ltr">AUDIT_TRAIL</code> initialization parameter is set to <code dir="ltr">OS</code>, <code dir="ltr">XML</code>, or <code dir="ltr">XML, EXTENDED</code>. You must set <code dir="ltr">AUDIT_FILE_DEST</code> to a valid directory with permissions restricted to the owner of the Oracle software and the <code dir="ltr">DBA</code> group. Mandatory auditing information also goes into that directory, as do audit records for user <code dir="ltr">SYS</code> if the <code dir="ltr">AUDIT_SYS_OPERATIONS</code> initialization parameter is specified. You can change the <code dir="ltr"><a id="sthref1611"></a>AUDIT_FILE_DEST</code> parameter by using the following <code dir="ltr">ALTER SYSTEM</code> statement, which enables the new destination to be effective for all subsequent sessions.</p>
<pre dir="ltr">
ALTER SYSTEM SET AUDIT_FILE_DEST = <span class="italic">directory_path</span> DEFERRED;
</pre>
<p>To find the current setting of the <code dir="ltr">AUDIT_FILE_DEST</code> parameter, issue the following command:</p>
<pre dir="ltr">
SHOW PARAMETER AUDIT_FILE_DEST
</pre>
<p>The <a id="sthref1612"></a><a id="sthref1613"></a>location of the operating system files depends on the following:</p>
<ul>
<li>
<p>If the database is not running and you have not set the <code dir="ltr">AUDIT_FILE_DEST</code> parameter, then the operating system files are placed in the first default location <code dir="ltr">$ORACLE_BASE/admin/$ORACLE_SID/adump</code> directory.</p>
</li>
<li>
<p>If the database is not running and the first default location, the <code dir="ltr">$ORACLE_BASE/admin/$ORACLE_SID/adump</code> directory, is inaccessible or cannot be written to, or the Oracle process cannot identify the environment variables, then the second default location, <code dir="ltr">$ORACLE_HOME/rdbms/audit</code> is used.</p>
</li>
<li>
<p>When the database is open and Oracle Database reads the initialization file (<code dir="ltr">init</code><code dir="ltr"><span class="codeinlineitalic">SID</span></code><code dir="ltr">.ora</code>) for the database instance, the value of <code dir="ltr">AUDIT_FILE_DEST</code> parameter is used as the operating system audit file directory.</p>
</li>
<li>
<p>For UNIX and Solaris systems, all operating system files are written to a directory in the operating system. For Windows, the operating system text records are available from the Windows Event Viewer, but operating system XML files are available from an operating system directory, as explained in the preceding bulleted items.</p>
</li>
</ul>
<div class="infobox-note">
<p class="notep1">Notes:</p>
For platforms other than UNIX, Solaris, and Windows, check the platform documentation to learn the correct target directory for operating system files.</div>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="CEGBIIJD"></a>
<div id="DBSEG66112" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Using the Syslog Audit Trail on UNIX Systems</h3>
<p><a id="sthref1614"></a><a id="sthref1615"></a>On UNIX systems, you can audit the activities of users, including privileged users, and record these activities in a syslog file by creating a syslog audit trail.</p>
<p>This section contains:</p>
<ul>
<li>
<p><a href="#CEGDBCDG">About the Syslog Audit Trail</a></p>
</li>
<li>
<p><a href="#CEGCAEDA">Format of the Information Stored in the Syslog Audit Trail</a></p>
</li>
<li>
<p><a href="#BCGCBEFI">What Does the Syslog Audit Trail Look Like?</a></p>
</li>
<li>
<p><a href="#CEGCFCJI">Configuring Syslog Auditing</a></p>
</li>
</ul>
<a id="CEGDBCDG"></a>
<div id="DBSEG362" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">About the Syslog Audit Trail</h4>
<p>You can use a syslog audit trail to configure centralized audit facility provided by the operating system <a id="sthref1616"></a>Syslog facility. <a id="sthref1617"></a>Syslog is a standard protocol on UNIX-based systems for logging information from different components of a network. Applications call the <code dir="ltr">syslog()</code> function to log information to the syslog daemon, which then determines where to log the information. Be aware that when you configure the use of syslog files, the messages are sent to the syslog daemon process. The syslog daemon process does not return an acknowledgement to Oracle Database indicating a committed write to the syslog files.</p>
<p>Because applications, such as an Oracle process, use the <code dir="ltr">syslog()</code> function to log information to the syslog daemon, a privileged user would not have permissions to the file system where syslog messages are logged. For this reason, audit records stored using a syslog audit trail can be more secure than audit records stored using an operating system audit trail. In addition to restricting permissions to a file system for a privileged user, for a syslog audit trail to be secure, neither privileged users nor the Oracle process should have <code dir="ltr">root</code> access to the system where the audit records are written.</p>
<div class="infobox-note">
<p class="notep1">Caution:</p>
You should have a strong understanding of how to work with <code dir="ltr">syslog</code> before enabling <code dir="ltr">syslog</code> auditing. See the following references for more information about syslog:
<ul>
<li>
<p><a class="olink REFRN10263" href="../../server.112/e40402/initparams016.htm#REFRN10263"><span class="italic">Oracle Database Reference</span></a> for information about the <code dir="ltr">AUDIT_SYSLOG_LEVEL</code> initialization parameter</p>
</li>
<li>
<p>The UNIX man page for the <code dir="ltr">syslogd</code> utility for more information about the <code dir="ltr"><span class="codeinlineitalic">facility.priority</span></code> settings and their directory paths</p>
</li>
</ul>
</div>
</div>
<!-- class="sect3" -->
<a id="CEGCAEDA"></a>
<div id="DBSEG363" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Format of the Information Stored in the Syslog Audit Trail</h4>
<p>Similar<a id="sthref1618"></a> to the operating system audit trail records, Oracle Database encodes the syslog records to ensure greater security. If you have Oracle Audit Vault installed, you can use its Syslog Collector to extract and transfer syslog audit records to centralized Oracle Audit Vault server.</p>
</div>
<!-- class="sect3" -->
<a id="BCGCBEFI"></a>
<div id="DBSEG364" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">What Does the Syslog Audit Trail Look Like?</h4>
<p><a href="#BCGFHDJD">Example 9-5</a> shows <a id="sthref1619"></a>how the syslog audit trail can appear. (For this example, the text has been reformatted for easier readability. In reality, the text is all on one line.) As with other Oracle Database audit trails, the brackets indicate the length of the value that was audited. For syslog audit trails, the text from (and including) <code dir="ltr">LENGTH:</code> is Oracle Database audit record. The prepended text (the date and <code dir="ltr">Oracle Audit [10085]</code> line) is added by the syslog utility.</p>
<div id="DBSEG365" class="example">
<p class="titleinexample"><a id="BCGFHDJD"></a>Example 9-5 Syslog Audit Trail for SYS User</p>
<pre dir="ltr">
May 14 23:40:15 shobeen 
Oracle Audit[10085]: 
LENGTH : '171' 
ACTION :[18] 'select * from aud$' 
DATABASE USER:[1] '/' 
PRIVILEGE :[6] 'SYSDBA' 
CLIENT USER:[7] 'laurelh' 
CLIENT TERMINAL:[6] 'pts/12' 
STATUS:[1] '0' 
DBID:[9] '562317007' 
</pre></div>
<!-- class="example" --></div>
<!-- class="sect3" -->
<a id="CEGCFCJI"></a>
<div id="DBSEG366" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Configuring Syslog Auditing</h4>
<p>To <a id="sthref1620"></a>enable syslog auditing, follow these steps:</p>
<ol>
<li>
<p>Assign the value of <code dir="ltr">OS</code> to the <code dir="ltr">AUDIT_TRAIL</code> initialization parameter, as described in <a href="#CEGHGFBH">"Enabling or Disabling the Standard Audit Trail"</a>.</p>
<p>For example:</p>
<pre dir="ltr">
ALTER SYSTEM SET AUDIT_TRAIL=OS SCOPE=SPFILE;
</pre></li>
<li>
<p>Manually set the <a id="sthref1621"></a><code dir="ltr">AUDIT_SYSLOG_LEVEL</code> parameter to the initialization parameter file, <code dir="ltr">init</code><code dir="ltr"><span class="codeinlineitalic">sid</span></code><code dir="ltr">.ora</code>.</p>
<p>Set the <code dir="ltr">AUDIT_SYSLOG_LEVEL</code> parameter to specify a facility and priority in the format <code dir="ltr">AUDIT_SYSLOG_LEVEL</code>=<code dir="ltr"><span class="codeinlineitalic">facility.priority</span></code>.</p>
<ul>
<li>
<p><code dir="ltr"><span class="codeinlineitalic">facility</span></code>: Describes the part of the operating system that is logging the message. Accepted values are <code dir="ltr">user</code>, <code dir="ltr">local0</code>&ndash;<code dir="ltr">local7</code>, <code dir="ltr">syslog</code>, <code dir="ltr">daemon</code>, <code dir="ltr">kern</code>, <code dir="ltr">mail</code>, <code dir="ltr">auth</code>, <code dir="ltr">lpr</code>, <code dir="ltr">news</code>, <code dir="ltr">uucp</code>, and <code dir="ltr">cron</code>.</p>
<p>The <code dir="ltr">local0</code>&ndash;<code dir="ltr">local7</code> values are predefined tags that enable you to sort the syslog message into categories. These categories can be log files or other destinations that the syslog utility can access. To find more information about these types of tags, refer to the <code dir="ltr">syslog</code> utility <code dir="ltr">MAN</code> page.</p>
</li>
<li>
<p><code dir="ltr"><span class="codeinlineitalic">priority</span></code>: Defines the severity of the message. Accepted values are <code dir="ltr">notice</code>, <code dir="ltr">info</code>, <code dir="ltr">debug</code>, <code dir="ltr">warning</code>, <code dir="ltr">err</code>, <code dir="ltr">crit</code>, <code dir="ltr">alert</code>, and <code dir="ltr">emerg</code>.</p>
</li>
</ul>
<p>The syslog daemon compares the value assigned to the facility argument of the <code dir="ltr">AUDIT_SYSLOG_LEVEL</code> parameter with the <code dir="ltr">syslog.conf</code> file to determine where to log information.</p>
<p>For example, the following statement identifies the facility as <code dir="ltr">local1</code> with a priority level of <code dir="ltr">warning</code>:</p>
<pre dir="ltr">
AUDIT_SYSLOG_LEVEL=local1.warning
</pre>
<p>See <a class="olink REFRN10263" href="../../server.112/e40402/initparams016.htm#REFRN10263"><span class="italic">Oracle Database Reference</span></a> for more information about <code dir="ltr">AUDIT_SYSLOG_LEVEL</code>.</p>
</li>
<li>
<p>Log in to the computer that contains the syslog configuration file, <code dir="ltr">/etc/syslog.conf</code>, with the superuser (root) privilege.</p>
</li>
<li>
<p>Add the audit file destination to the <code dir="ltr">syslog</code> configuration file <code dir="ltr">syslog.conf</code>.</p>
<p>For example, assuming you had set the <code dir="ltr">AUDIT_SYSLOG_LEVEL</code> to <code dir="ltr">local1.warning</code>, enter the following:</p>
<pre dir="ltr">
local1.warning /var/log/audit.log
</pre>
<p>This setting logs all warning messages to the <code dir="ltr">/var/log/audit.log</code> file.</p>
</li>
<li>
<p>Restart the syslog logger:</p>
<pre dir="ltr">
$/etc/rc.d/init.d/syslog restart
</pre>
<p>Now, all audit records will be captured in the file <code dir="ltr">/var/log/audit.log</code> through the syslog daemon.</p>
</li>
<li>
<p>Restart the database instance:</p>
<pre dir="ltr">
CONNECT SYS / AS SYSOPER
Enter password: <span class="italic">password</span>

SHUTDOWN IMMEDIATE
STARTUP
</pre></li>
</ol>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="BCGIHHBJ"></a>
<div id="DBSEG625" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">How the AUDIT and NOAUDIT SQL Statements Work</h3>
<p>This section contains:<a id="sthref1622"></a></p>
<ul>
<li>
<p><a href="#i1007245">Enabling Standard Auditing with the AUDIT SQL Statement</a></p>
</li>
<li>
<p><a href="#CEGGIIHH">Auditing Statement Executions: Successful, Unsuccessful, or Both</a></p>
</li>
<li>
<p><a href="#CEGFCCHE">How Standard Audit Records Are Generated</a></p>
</li>
<li>
<p><a href="#BCGBHHGI">How Do Cursors Affect Standard Auditing?</a></p>
</li>
<li>
<p><a href="#BCGHCAED">Benefits of Using the BY ACCESS Clause in the AUDIT Statement</a></p>
</li>
<li>
<p><a href="#CEGFBHAI">Auditing Actions Performed by Specific Users</a></p>
</li>
<li>
<p><a href="#i1006737">Removing the Audit Option with the NOAUDIT SQL Statement</a></p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink SQLRF01107" href="../../server.112/e41084/statements_4007.htm#SQLRF01107"><span class="italic">Oracle Database SQL Language Reference</span></a> for a description of the <code dir="ltr">AUDIT</code> statement syntax</div>
<a id="i1007245"></a>
<div id="DBSEG11011" class="sect3">
<h4 class="sect3">Enabling Standard Auditing with the AUDIT SQL Statement</h4>
<p><a id="sthref1623"></a>To configure the standard auditing option, use the <code dir="ltr">AUDIT</code> SQL statement.</p>
<p><a href="#BCGFGFCI">Table 9-3</a> lists the categories in which you can use the <code dir="ltr">AUDIT</code> statement.<a id="sthref1624"></a></p>
<div id="DBSEG367" class="tblhruleformal">
<p class="titleintable"><a id="sthref1625"></a><a id="BCGFGFCI"></a>Table 9-3 Standard Auditing Levels and Their Effects</p>
<table class="cellalignment2250" title="Standard Auditing Levels and Their Effects " summary="his table lists the three standard levels of auditing you can set with the AUDIT statement. It also describes the effect of each setting." dir="ltr">
<thead>
<tr class="cellalignment2244">
<th class="cellalignment2251" id="r1c1-t16">Level</th>
<th class="cellalignment2251" id="r1c2-t16">Effect</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r2c1-t16" headers="r1c1-t16">
<p>Statement</p>
</td>
<td class="cellalignment2252" headers="r2c1-t16 r1c2-t16">
<p>Audits specific SQL statements or groups of statements that affect a particular type of database object. For example, <code dir="ltr">AUDIT TABLE</code> audits the <code dir="ltr">CREATE TABLE</code>, <code dir="ltr">TRUNCATE TABLE</code>, <code dir="ltr">COMMENT ON TABLE</code>, and <code dir="ltr">DELETE [FROM] TABLE</code> statements.</p>
</td>
</tr>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r3c1-t16" headers="r1c1-t16">
<p>Privilege</p>
</td>
<td class="cellalignment2252" headers="r3c1-t16 r1c2-t16">
<p>Audits SQL statements that are authorized by the specified system privilege. For example, <code dir="ltr">AUDIT CREATE ANY TRIGGER</code> audits statements issued using the <code dir="ltr">CREATE ANY TRIGGER</code> system privilege.</p>
</td>
</tr>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r4c1-t16" headers="r1c1-t16">
<p>Object</p>
</td>
<td class="cellalignment2252" headers="r4c1-t16 r1c2-t16">
<p>Audits specific statements on specific objects, such as <code dir="ltr">ALTER TABLE</code> on the <code dir="ltr">HR.EMPLOYEES</code> table.</p>
</td>
</tr>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r5c1-t16" headers="r1c1-t16">
<p>Network</p>
</td>
<td class="cellalignment2252" headers="r5c1-t16 r1c2-t16">
<p>Audits unexpected errors in network protocol or internal errors in the network layer.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblhruleformal" --></div>
<!-- class="sect3" -->
<a id="CEGGIIHH"></a>
<div id="DBSEG368" class="sect3">
<h4 class="sect3">Auditing Statement Executions: Successful, Unsuccessful, or Both</h4>
<p><a id="sthref1626"></a><a id="sthref1627"></a>For statement, privilege, and schema object auditing, Oracle Database permits the selective auditing of successful executions of statements, unsuccessful attempts to execute statements, or both. This enables you to monitor actions even if the audited statements do not complete successfully. Monitoring unsuccessful SQL statement can expose users who are snooping or acting maliciously, though most unsuccessful SQL statements are neither.</p>
<p>This method of auditing is also useful in that it reduces the audit trail, helping you to focus on specific actions. This can aid in maintaining good database performance.</p>
<p>The options are as follows:</p>
<ul>
<li>
<p><span class="bold">WHENEVER SUCCESSFUL clause:</span> <a id="sthref1628"></a><a id="sthref1629"></a>This clause audits only successful executions of the audited statement.</p>
</li>
<li>
<p><span class="bold">WHENEVER NOT SUCCESSFUL clause:</span> This clause audits only unsuccessful executions of the audited statement.</p>
<p>Auditing an unsuccessful statement execution generates an audit report only if a valid SQL statement is issued but fails, because it lacks proper authorization or references a nonexistent schema object. Statements that fail to execute because they were not valid cannot be audited.</p>
<p>For example, an enabled privilege auditing option set to audit unsuccessful statement executions audits statements that use the target system privilege but failed for other reasons. One example is when a <code dir="ltr">CREATE TABLE</code> auditing condition is set, but some <code dir="ltr">CREATE</code> <code dir="ltr">TABLE</code> statements fail due to insufficient quota for the specified tablespace.</p>
</li>
<li>
<p><span class="bold">Omitting WHENEVER SUCCESSFUL or WHENEVER NOT SUCCESSFUL:</span> If you omit these clauses, then Oracle Database audits both successful and unsuccessful executions of the audited statement.</p>
</li>
</ul>
<p>For example:</p>
<pre dir="ltr">
AUDIT CREATE TABLE BY ACCESS WHENEVER NOT SUCCESSFUL;
</pre></div>
<!-- class="sect3" -->
<a id="CEGFCCHE"></a>
<div id="DBSEG369" class="sect3">
<h4 class="sect3">How Standard Audit Records Are Generated</h4>
<p>Oracle Database generates <a id="sthref1630"></a>an audit record for each execution of an audited statement or operation, as follows:</p>
<ul>
<li>
<p>Each time the SQL statement for which auditing was configured is executed. This also includes the execution of the statements within PL/SQL procedures.</p>
</li>
<li>
<p>Each time the privilege for which auditing was configured is used</p>
</li>
<li>
<p>Each time the object for which auditing was configured is operated upon</p>
</li>
</ul>
</div>
<!-- class="sect3" -->
<a id="BCGBHHGI"></a>
<div id="DBSEG370" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">How Do Cursors Affect Standard Auditing?</h4>
<p>For <a id="sthref1631"></a>each execution of an auditable operation within a cursor, Oracle Database inserts one audit record into the audit trail. Events that cause cursors to be reused include the following:</p>
<ul>
<li>
<p>An application, such as Oracle Forms, holding a cursor open for reuse</p>
</li>
<li>
<p>Subsequent execution of a cursor using new bind variables</p>
</li>
<li>
<p>Statements executed within PL/SQL loops where the PL/SQL engine optimizes the statements to reuse a single cursor</p>
</li>
</ul>
<p>Auditing is <span class="italic">not</span> affected by whether or not a cursor is shared. Each user creates her or his own audit trail records on first execution of the cursor.</p>
</div>
<!-- class="sect3" -->
<a id="BCGHCAED"></a>
<div id="DBSEG371" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Benefits of Using the BY ACCESS Clause in the AUDIT Statement</h4>
<p>By <a id="sthref1632"></a><a id="sthref1633"></a><a id="sthref1634"></a>default, Oracle Database writes a new audit record for every audited event, using the <code dir="ltr">BY ACCESS</code> clause functionality. To use this functionality, either include <code dir="ltr">BY ACCESS</code> in the <code dir="ltr">AUDIT</code> statement, or if you want, you can omit it because it is the default. (As of Oracle Database 11<span class="italic">g</span> Release 2 (11.2.0.2), the <code dir="ltr">BY ACCESS</code> clause is the default setting.)</p>
<p>Oracle recommends that you audit <code dir="ltr">BY ACCESS</code> and not <code dir="ltr">BY SESSION</code> in your <code dir="ltr">AUDIT</code> statements. The benefits of using the <code dir="ltr">BY ACCESS</code> clause in the <code dir="ltr">AUDIT</code> statement are as follows:</p>
<ul>
<li>
<p>The audit records generated through the <code dir="ltr">BY ACCESS</code> audit option have more information, such as execution status (return code), date and time of execution, the privileges used, the objects accessed, the SQL text itself and its bind values. In addition, the <code dir="ltr">BY ACCESS</code> audit option captures the SCN for each execution and this can help flashback queries.</p>
</li>
<li>
<p>Oracle Database records separately each execution of a SQL statement, the use of a privilege, and access to the audited object. Given that the values for the return code, timestamp, SQL text recorded are accurate for each execution, this can help you find how many times the action was performed.</p>
</li>
<li>
<p>The <code dir="ltr">BY ACCESS</code> audit records have separate <code dir="ltr">LOGON</code> and <code dir="ltr">LOGOFF</code> entries, each with fine-grained timestamps.</p>
</li>
</ul>
<p>For example:</p>
<pre dir="ltr">
AUDIT SELECT TABLE BY ACCESS;
</pre>
<p>In this scenario:</p>
<ul>
<li>
<p>The user <code dir="ltr">jward</code> connects to the database and issues five <code dir="ltr">SELECT</code> statements against the table named <code dir="ltr">departments</code> and then disconnects from the database.</p>
</li>
<li>
<p>The user <code dir="ltr">swilliams</code> connects to the database and issues three <code dir="ltr">SELECT</code> statements against the <code dir="ltr">departments</code> table and then disconnects from the database.</p>
</li>
</ul>
<p>The audit trail contains eight records, one recorded for each <code dir="ltr">SELECT</code> statement.</p>
</div>
<!-- class="sect3" -->
<a id="CEGFBHAI"></a>
<div id="DBSEG372" class="sect3">
<h4 class="sect3">Auditing Actions Performed by Specific Users</h4>
<p>Statement <a id="sthref1635"></a><a id="sthref1636"></a>and privilege audit options can audit statements issued by any user or statements issued by a specific list of users. By focusing on specific users, you can minimize the number of audit records generated.</p>
<p><a href="#CEGBHBID">Example 9-6</a> shows how to audit statements by users <code dir="ltr">scott</code> and <code dir="ltr">blake</code> when they query or update a table or view.</p>
<div id="DBSEG373" class="example">
<p class="titleinexample"><a id="CEGBHBID"></a>Example 9-6 Using AUDIT to Audit User Actions</p>
<pre dir="ltr">
AUDIT SELECT TABLE, UPDATE TABLE BY scott, blake BY ACCESS;
</pre></div>
<!-- class="example" -->
<p>See <a class="olink SQLRF01107" href="../../server.112/e41084/statements_4007.htm#SQLRF01107"><span class="italic">Oracle Database SQL Language Reference</span></a> for additional information about auditing by user.</p>
</div>
<!-- class="sect3" -->
<a id="i1006737"></a>
<div id="DBSEG374" class="sect3">
<h4 class="sect3">Removing the Audit Option with the NOAUDIT SQL Statement</h4>
<p>The<a id="sthref1637"></a> <code dir="ltr">NOAUDIT</code> statement <a id="sthref1638"></a><a id="sthref1639"></a>removes the audit option. Use it to reset statement and privilege audit options, and object audit options. A <code dir="ltr">NOAUDIT</code> statement that sets statement and privilege audit options can include the <code dir="ltr">BY</code> <code dir="ltr"><span class="codeinlineitalic">user</span></code> clause to specify a list of users to limit the scope of the statement and privilege audit options.</p>
<p>You can use the <code dir="ltr">NOAUDIT</code> statement to disable an audit option selectively using the <code dir="ltr">WHENEVER</code> clause. If the clause is not specified, then the auditing option is disabled entirely, for both successful and unsuccessful cases.</p>
<p><a id="sthref1640"></a>The <code dir="ltr">NOAUDIT</code> statement does not support the<a id="sthref1641"></a> <code dir="ltr">BY ACCESS</code> clause. You can remove audit options, no matter how they were turned on, by using an appropriate <code dir="ltr">NOAUDIT</code> statement.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink SQLRF01607" href="../../server.112/e41084/statements_9017.htm#SQLRF01607"><span class="italic">Oracle Database SQL Language Reference</span></a> for a description of the <code dir="ltr">NOAUDIT</code> statement syntax</div>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="CEGEEBGE"></a>
<div id="DBSEG225" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Auditing SQL Statements</h3>
<p>This section contains:</p>
<ul>
<li>
<p><a href="#BCGDDEHB">About SQL Statement Auditing</a></p>
</li>
<li>
<p><a href="#CEGHFDED">Types of SQL Statements That Are Audited</a></p>
</li>
<li>
<p><a href="#CEGEDICG">Configuring SQL Statement Auditing</a></p>
</li>
<li>
<p><a href="#CEGEGCAE">Removing SQL Statement Auditing</a></p>
</li>
</ul>
<a id="BCGDDEHB"></a>
<div id="DBSEG375" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">About SQL Statement Auditing</h4>
<p>SQL statement auditing<a id="sthref1642"></a><a id="sthref1643"></a> is the selective auditing of related groups of SQL statements regarding a particular type of database structure or schema object, but not a specifically named structure or schema object.</p>
</div>
<!-- class="sect3" -->
<a id="CEGHFDED"></a>
<div id="DBSEG376" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Types of SQL Statements That Are Audited</h4>
<p>The statements that you can audit are in the following categories:</p>
<ul>
<li>
<p><span class="bold"><a id="sthref1644"></a><a id="sthref1645"></a><a id="sthref1646"></a>DDL statements.</span> For example, <code dir="ltr">AUDIT</code> <code dir="ltr">TABLE</code> audits all <code dir="ltr">CREATE</code> and <code dir="ltr">DROP</code> <code dir="ltr">TABLE</code> statements</p>
</li>
<li>
<p><span class="bold"><a id="sthref1647"></a><a id="sthref1648"></a>DML statements.</span> For example, <code dir="ltr">AUDIT</code> <code dir="ltr">SELECT</code> <code dir="ltr">TABLE</code> audits all <code dir="ltr">SELECT</code> ... <code dir="ltr">FROM</code> <code dir="ltr">TABLE/VIEW</code> statements, regardless of the table or view</p>
</li>
</ul>
<p>Statement auditing can be broad or focused, for example, by auditing the activities of all database users or of only a select list of activities.</p>
</div>
<!-- class="sect3" -->
<a id="CEGEDICG"></a>
<div id="DBSEG377" class="sect3">
<h4 class="sect3">Configuring SQL Statement Auditing</h4>
<p>Use <a id="sthref1649"></a>the <code dir="ltr">AUDIT</code> <a id="sthref1650"></a><a id="sthref1651"></a>statement to configure SQL statement auditing. You must have the <code dir="ltr">AUDIT SYSTEM</code> system privilege before you can enable auditing. Typically, only the security administrator is granted this system privilege.</p>
<p><a href="#BCGBDAJF">Example 9-7</a> shows how to audit the <code dir="ltr">SELECT TABLE</code> SQL statement.</p>
<div id="DBSEG378" class="example">
<p class="titleinexample"><a id="BCGBDAJF"></a>Example 9-7 Using AUDIT to Enable SQL Statement Auditing</p>
<pre dir="ltr">
AUDIT SELECT TABLE BY ACCESS;
</pre></div>
<!-- class="example" -->
<p><a href="#BCGJBDCA">Example 9-8</a> shows how to audit all unsuccessful <code dir="ltr">SELECT</code>, <code dir="ltr">INSERT</code>, and <code dir="ltr">DELETE</code> statements on all tables by all database users, and by individual audited statement.</p>
<div id="DBSEG386" class="example">
<p class="titleinexample"><a id="BCGJBDCA"></a>Example 9-8 Auditing Unsuccessful Statements</p>
<pre dir="ltr">
AUDIT SELECT TABLE, INSERT TABLE, DELETE TABLE
      BY ACCESS
      WHENEVER NOT SUCCESSFUL;
</pre></div>
<!-- class="example" -->
<p>If you plan to audit all SQL statements, individual user connections, or references to non-existent objects, follow these guidelines:</p>
<ul>
<li>
<p><span class="bold">Auditing all SQL statements for individual users.</span> You can<a id="sthref1652"></a> use the <code dir="ltr">ALL STATEMENTS</code> clause to audit <span class="italic">only</span> the top-level SQL statements. The behavior of this audit option is different from other statement audit options. If the SQL statement is issued from inside a PL/SQL procedure, then the <code dir="ltr">ALL STATEMENTS</code> audit option does not audit it. This audit option does not affect any other <code dir="ltr">AUDIT</code> options that you may have already set.</p>
<p>For example, to audit all successful statements issued by users <code dir="ltr">jward</code> and <code dir="ltr">jsmith</code>, enter the following:</p>
<pre dir="ltr">
AUDIT ALL STATEMENTS BY jward, jsmith BY ACCESS WHENEVER SUCCESSFUL;
</pre></li>
<li>
<p><span class="bold">Auditing all the SQL statement shortcut activities performed by individual users.</span> <a id="sthref1653"></a>You can use the <code dir="ltr">ALL</code> clause to audit all the SQL statement shortcuts listed in <a class="olink SQLRF53735" href="../../server.112/e41084/statements_4007.htm#SQLRF53735">Table 13-1</a> and <a class="olink SQLRF53736" href="../../server.112/e41084/statements_4007.htm#SQLRF53736">Table 13-2</a> in <a class="olink SQLRF01107" href="../../server.112/e41084/statements_4007.htm#SQLRF01107"><span class="italic">Oracle Database SQL Language Reference</span></a>.</p>
<p>For example:</p>
<pre dir="ltr">
AUDIT ALL BY jward BY ACCESS;
</pre></li>
<li>
<p><span class="bold">Auditing all SQL statements for the current session, regardless of user.</span> <a id="sthref1654"></a>You can use the <code dir="ltr">IN SESSION CURRENT</code> clause for <code dir="ltr">ALL STATEMENTS</code> audit option to audit top-level SQL statements in the lifetime of the user session. You cannot use the <code dir="ltr">IN SESSION CURRENT</code> clause for a specific user. You cannot use the <code dir="ltr">NOAUDIT</code> statement to cancel it, but the auditing lasts only as long as the user session lasts. When the user ends the session, the auditing ends.</p>
<p>For example, to audit all unsuccessful statements in any current user session:</p>
<pre dir="ltr">
AUDIT ALL STATEMENTS IN SESSION CURRENT BY ACCESS WHENEVER NOT SUCCESSFUL;
</pre>
<p>You can use the <code dir="ltr">AUDIT ALL STATEMENTS</code> audit option with the <code dir="ltr">IN SESSION CURRENT</code> clause in a database logon trigger. The database logon trigger can use <code dir="ltr">SYS_CONTEXT</code> function to configure this auditing only under certain conditions, such as the time a user logs in between 6:30 p.m. to 9:00 a.m. This would enable you to capture SQL statements performed by users who log in to the database during non-work hours.</p>
<p>This <a id="sthref1655"></a>type of auditing is useful to increase the collection of audit activity when you suspect this connection may not be secure or could pose an internal threat. For example, by using a database logon trigger, you can query contents of the connection context using the <code dir="ltr"><a id="sthref1656"></a>SYS_CONTEXT</code> function.</p>
<p>The logon trigger functionality can establish that this connection should be audited more fully. Issue the following SQL command:</p>
<pre dir="ltr">
AUDIT ALL STATEMENTS IN SESSION CURRENT;
</pre>
<p>This type of auditing remains in effect until this session is terminated.</p>
</li>
<li>
<p><span class="bold">Auditing login and logoff connections and disconnections.</span> The <code dir="ltr">AUDIT SESSION</code> statement generates an independent audit record for every login and logoff event. This enables you to <a id="sthref1657"></a>audit all successful and unsuccessful connections to and disconnections from the database, regardless of user.</p>
<p>For example:</p>
<pre dir="ltr">
AUDIT SESSION BY ACCESS;
</pre>
<p>You can set this option selectively for individual users also, as in the following example:</p>
<pre dir="ltr">
AUDIT SESSION BY jward, jsmith BY ACCESS;
</pre></li>
<li>
<p><span class="bold">Auditing statements that fail because an object does not exist.</span> The <code dir="ltr">NOT EXISTS</code> option of the <code dir="ltr">AUDIT</code> statement specifies auditing of all SQL statements that fail because the target object does not exist.</p>
<p>For example:</p>
<pre dir="ltr">
AUDIT NOT EXISTS;
</pre></li>
</ul>
<p>See <a class="olink SQLRF01107" href="../../server.112/e41084/statements_4007.htm#SQLRF01107"><span class="italic">Oracle Database SQL Language Reference</span></a> for detailed information about the <code dir="ltr">AUDIT</code> SQL statement.</p>
</div>
<!-- class="sect3" -->
<a id="CEGEGCAE"></a>
<div id="DBSEG379" class="sect3">
<h4 class="sect3">Removing SQL Statement Auditing</h4>
<p>To <a id="sthref1658"></a>remove <a id="sthref1659"></a><a id="sthref1660"></a>SQL statement auditing, <a id="sthref1661"></a>use the use the <code dir="ltr">NOAUDIT</code> SQL statement. (Privilege auditing will still be enabled.) You must have the <code dir="ltr">AUDIT SYSTEM</code> system privilege before you can remove SQL statement auditing. If you have configured the <code dir="ltr">AUDIT ALL STATEMENTS</code> option, then issuing the <code dir="ltr">NOAUDIT AUDIT STATEMENTS</code> statement does not affect other audit options you may have set. If you included the <code dir="ltr">IN SESSION CURRENT</code> clause in the <code dir="ltr">AUDIT</code> statement, you cannot remove this <code dir="ltr">AUDIT</code> statement using the <code dir="ltr">NOAUDIT</code> statement. (The audit setting discontinues when the user's session ends.)</p>
<p><a href="#BCGJGFHD">Example 9-9</a> shows examples of using the <code dir="ltr">NOAUDIT</code> statement to remove auditing.</p>
<div id="DBSEG380" class="example">
<p class="titleinexample"><a id="BCGJGFHD"></a>Example 9-9 Using NOAUDIT to Remove Session and SQL Statement Auditing</p>
<pre dir="ltr">
NOAUDIT session;
NOAUDIT session BY preston, sebastian;
NOAUDIT SELECT TABLE, INSERT TABLE, DELETE TABLE, EXECUTE PROCEDURE;
</pre></div>
<!-- class="example" -->
<p><a href="#BCGCAJEA">Example 9-10</a> shows how to remove all statement auditing by using the <code dir="ltr">NOAUDIT</code> statement.</p>
<div id="DBSEG381" class="example">
<p class="titleinexample"><a id="BCGCAJEA"></a>Example 9-10 Using NOAUDIT to Remove ALL STATEMENTS Auditing</p>
<pre dir="ltr">
NOAUDIT ALL STATEMENTS;
</pre></div>
<!-- class="example" -->
<p>See <a class="olink SQLRF01607" href="../../server.112/e41084/statements_9017.htm#SQLRF01607"><span class="italic">Oracle Database SQL Language Reference</span></a> for detailed information about the <code dir="ltr">NOAUDIT</code> statement.</p>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="CEGDDHDB"></a>
<div id="DBSEG325" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Auditing Privileges</h3>
<p>This section contains:</p>
<ul>
<li>
<p><a href="#BCGGBABA">About Privilege Auditing</a></p>
</li>
<li>
<p><a href="#CEGJGHGC">Types of Privileges That Can Be Audited</a></p>
</li>
<li>
<p><a href="#CEGDBDCA">Configuring Privilege Auditing</a></p>
</li>
<li>
<p><a href="#CEGJBCJA">Removing Privilege Auditing</a></p>
</li>
</ul>
<a id="BCGGBABA"></a>
<div id="DBSEG382" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">About Privilege Auditing</h4>
<p><a id="sthref1662"></a><a id="sthref1663"></a>Privilege auditing audits statements that use a system privilege, such as <code dir="ltr">SELECT</code> <code dir="ltr">ANY</code> <code dir="ltr">TABLE.</code> In this kind of auditing, SQL statements that require the audited privilege to succeed are recorded.</p>
</div>
<!-- class="sect3" -->
<a id="CEGJGHGC"></a>
<div id="DBSEG383" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Types of Privileges That Can Be Audited</h4>
<p>You<a id="sthref1664"></a> can audit the use of any system privilege. Similar to statement auditing, privilege auditing audits the activities of all database users or only a specified list.</p>
<p>If you set similar audit options for both statement and privilege auditing, then only a single audit record is generated. For example, if the statement clause <code dir="ltr">TABLE</code> and the system privilege <code dir="ltr">CREATE</code> <code dir="ltr">TABLE</code> are both audited, then only a single audit record is generated each time a table is created.</p>
<p>Privilege auditing does not occur if the action is already permitted by the existing owner and object privileges. Privilege auditing is triggered only if the privileges are insufficient, that is, only if what makes the action possible is a system privilege. For example, suppose that user <code dir="ltr">SCOTT</code> has been granted the <code dir="ltr">SELECT ANY TABLE</code> privilege and the <code dir="ltr">SELECT ANY TABLE</code> is being audited. If <code dir="ltr">SCOTT</code> selects his own table (for example, <code dir="ltr">SCOTT.EMP</code>), then the <code dir="ltr">SELECT ANY TABLE</code> privilege is not used. Because he performed the <code dir="ltr">SELECT</code> statement within his own schema, no audit record is generated. On the other hand, if <code dir="ltr">SCOTT</code> selects from another schema (for example, the <code dir="ltr">HR.EMPLOYEES</code> table), then an audit record <span class="italic">is</span> generated. Because <code dir="ltr">SCOTT</code> selected a table outside his own schema, he needed to use the <code dir="ltr">SELECT ANY TABLE</code> privilege.</p>
<p>Privilege auditing is more focused than statement auditing, because each privilege auditing option audits only specific types of statements, not a related list of statements. For example, the statement auditing clause, <code dir="ltr">TABLE</code>, audits <code dir="ltr">CREATE</code> <code dir="ltr">TABLE</code>, <code dir="ltr">ALTER</code> <code dir="ltr">TABLE</code>, and <code dir="ltr">DROP</code> <code dir="ltr">TABLE</code> statements. However, the privilege auditing option, <code dir="ltr">CREATE TABLE</code>, audits only <code dir="ltr">CREATE TABLE</code> statements, because only the <code dir="ltr">CREATE TABLE</code> statement requires the <code dir="ltr">CREATE</code> <code dir="ltr">TABLE</code> privilege.</p>
<p>See the listing of system privileges in the <code dir="ltr">GRANT</code> SQL statement section of <a class="olink SQLRF01603" href="../../server.112/e41084/statements_9013.htm#SQLRF01603"><span class="italic">Oracle Database SQL Language Reference</span></a>.</p>
</div>
<!-- class="sect3" -->
<a id="CEGDBDCA"></a>
<div id="DBSEG384" class="sect3">
<h4 class="sect3">Configuring Privilege Auditing</h4>
<p>Privilege <a id="sthref1665"></a><a id="sthref1666"></a>audit <a id="sthref1667"></a>options are the same as their corresponding system privileges. For example, the option to audit use of the <code dir="ltr">DELETE ANY TABLE</code> privilege is <code dir="ltr">DELETE ANY TABLE</code>.</p>
<p><a href="#BCGJCIBC">Example 9-11</a> shows how to audit the <code dir="ltr">DELETE ANY TABLE</code> privilege.</p>
<div id="DBSEG385" class="example">
<p class="titleinexample"><a id="BCGJCIBC"></a>Example 9-11 Using AUDIT to Configure Privilege Auditing</p>
<pre dir="ltr">
AUDIT DELETE ANY TABLE BY ACCESS;
</pre></div>
<!-- class="example" -->
<p>To audit all successful and unsuccessful uses of the <code dir="ltr">DELETE ANY TABLE</code> system privilege, enter the following statement:</p>
<pre dir="ltr">
AUDIT DELETE ANY TABLE BY ACCESS;
</pre></div>
<!-- class="sect3" -->
<a id="CEGJBCJA"></a>
<div id="DBSEG387" class="sect3">
<h4 class="sect3">Removing Privilege Auditing</h4>
<p>The <a id="sthref1668"></a>following<a id="sthref1669"></a><a id="sthref1670"></a> statement removes all privilege audit options:</p>
<pre dir="ltr">
NOAUDIT ALL PRIVILEGES;
</pre>
<p>This example disables the audit settings from <a href="#BCGJCIBC">Example 9-11</a>:</p>
<pre dir="ltr">
NOAUDIT DELETE ANY TABLE;
</pre>
<p>To disable privilege auditing options, you must have the <code dir="ltr">AUDIT SYSTEM</code> system privilege. Usually, only the security administrator is granted this system privilege.</p>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="CEGDFFFE"></a>
<div id="DBSEG725" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Auditing SQL Statements and Privileges in a Multitier Environment</h3>
<p>You<a id="sthref1671"></a><a id="sthref1672"></a> can use the <code dir="ltr">AUDIT</code> statement to audit the activities of a client in a multitier environment. In a multitier environment, Oracle Database preserves the identity of a client through all tiers. Thus, you can audit actions taken on behalf of the client by a middle-tier application, by using the <code dir="ltr">BY</code> <code dir="ltr"><span class="codeinlineitalic">user</span></code> clause in your <code dir="ltr">AUDIT</code> statement. The audit applies to all user sessions, including proxy sessions.</p>
<p>The middle tier can also set the user client identity in a database session, enabling the auditing of end-user actions through the middle-tier application. The end-user client identity then shows up in the audit trail.</p>
<p><a href="#BCGFCDII">Example 9-12</a> shows how to audit <code dir="ltr">SELECT TABLE</code> statements issued by the user <code dir="ltr">jackson</code>.</p>
<div id="DBSEG388" class="example">
<p class="titleinexample"><a id="BCGFCDII"></a>Example 9-12 Using AUDIT to Audit a SQL Statement for a User</p>
<pre dir="ltr">
AUDIT SELECT TABLE BY jackson;
</pre></div>
<!-- class="example" -->
<p>You can audit user activity in a multitier environment. Once audited, you can verify these activities by querying the <code dir="ltr">DBA_AUDIT_TRAIL</code> data dictionary view.</p>
<p><a href="#BCGDEJEC">Figure 9-1</a> illustrates <a id="sthref1673"></a>how you can audit proxy users by querying the <code dir="ltr">COMMENT_TEXT</code>, <code dir="ltr">PROXY_SESSIONID</code>, <code dir="ltr">ACTION_NAME</code>, and <code dir="ltr">SESSION_ID</code> columns of the <code dir="ltr">DBA_AUDIT_TRAIL</code> view. In this scenario, both the database user and proxy user accounts are known to the database. Session pooling can be used.</p>
<div id="DBSEG389" class="figure">
<p class="titleinfigure"><a id="BCGDEJEC"></a>Figure 9-1 Auditing Proxy Users</p>
<img width="531" height="454" src="img/audit_proxy_user.gif" alt="Description of Figure 9-1 follows" /><br />
<a id="sthref1674" href="img_text/audit_proxy_user.htm">Description of ''Figure 9-1 Auditing Proxy Users''</a><br />
<br /></div>
<!-- class="figure" -->
<p><a href="#BCGIIFCG">Figure 9-2</a> illustrates how you can audit <a id="sthref1675"></a>client identifier information across multiple database sessions by querying the <code dir="ltr">CLIENT_ID</code> column of the <code dir="ltr">DBA_AUDIT_TRAIL</code> data dictionary view. In this scenario, the client identifier has been set to <code dir="ltr">CLIENT_A</code>. As with the proxy user-database user scenario described in <a href="#BCGDEJEC">Figure 9-1</a>, session pooling can be used.</p>
<div id="DBSEG390" class="figure">
<p class="titleinfigure"><a id="BCGIIFCG"></a>Figure 9-2 Auditing Client Identifier Information Across Sessions</p>
<img width="690" height="464" src="img/client_identifier.gif" alt="Description of Figure 9-2 follows" /><br />
<a id="sthref1676" href="img_text/client_identifier.htm">Description of ''Figure 9-2 Auditing Client Identifier Information Across Sessions''</a><br />
<br /></div>
<!-- class="figure" -->
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="authentication.htm#CHDBAHIB">"Preserving User Identity in Multitiered Environments"</a> for more information about user authentication in a multitiered environment</div>
</div>
<!-- class="sect2" -->
<a id="CEGEGJJB"></a>
<div id="DBSEG425" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Auditing Schema Objects</h3>
<p>This section contains:</p>
<ul>
<li>
<p><a href="#BCGEJAEF">About Schema Object Auditing</a></p>
</li>
<li>
<p><a href="#CEGEIFIJ">Types of Schema Objects That Can Be Audited</a></p>
</li>
<li>
<p><a href="#BCGCIFCB">Using Standard Auditing with Editioned Objects</a></p>
</li>
<li>
<p><a href="#CEGBIGIF">Schema Object Audit Options for Views, Procedures, and Other Elements</a></p>
</li>
<li>
<p><a href="#CEGIIJAB">Configuring Schema Object Auditing</a></p>
</li>
<li>
<p><a href="#CEGGBGEI">Removing Object Auditing</a></p>
</li>
<li>
<p><a href="#CJADBFBF">Setting Audit Options for Objects That May Be Created in the Future</a></p>
</li>
</ul>
<a id="BCGEJAEF"></a>
<div id="DBSEG391" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">About Schema Object Auditing</h4>
<p><a id="sthref1677"></a><a id="sthref1678"></a>Schema object auditing monitors actions performed on the audited schema objects, such as tables or views. Object auditing applies to all users but is limited to the audited object only. Users can use the <code dir="ltr">AUDIT</code> and <code dir="ltr">NOAUDIT</code> statements on objects in their own schemas.</p>
</div>
<!-- class="sect3" -->
<a id="CEGEIFIJ"></a>
<div id="DBSEG392" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Types of Schema Objects That Can Be Audited</h4>
<p>You <a id="sthref1679"></a>can <a id="sthref1680"></a><a id="sthref1681"></a><a id="sthref1682"></a>audit <a id="sthref1683"></a>statements that refer to tables, views, sequences, standalone stored procedures or functions, and packages, but not individual procedures within packages. (See <a href="#BCGBEAGC">"Auditing Functions, Procedures, Packages, and Triggers"</a> for more information about auditing these types of objects.)</p>
<p>You cannot directly audit statements that reference clusters, <a id="sthref1684"></a>database links, indexes, or synonyms. However, you can indirectly audit access to these schema objects, by auditing the operations that affect the base table.</p>
<p>When you audit a schema object, the auditing applies to all users of the database. You cannot set these options for a specific list of users. You can set default schema object audit options for all auditable schema objects.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink SQLRF" href="../../server.112/e41084/toc.htm"><span class="italic">Oracle Database SQL Language Reference</span></a> for information about auditable schema objects</div>
</div>
<!-- class="sect3" -->
<a id="BCGCIFCB"></a>
<div id="DBSEG393" class="sect3">
<h4 class="sect3">Using Standard Auditing with Editioned Objects</h4>
<p>When <a id="sthref1685"></a>an editioned object has an audit policy, then it applies in all editions in which the object is visible. When an editioned object is actualized, any audit policies that are attached to it are newly attached to the new actual occurrence. When you newly apply an audit policy to an inherited editioned object, this action will actualize it.</p>
<p>You can find the editions in which audited objects appear by querying the <code dir="ltr">OBJECT_NAME</code> and <code dir="ltr">OBJ_EDITION_NAME</code> columns in the <code dir="ltr">DBA_COMMON_AUDIT_TRAIL</code> and <code dir="ltr">V$XML_AUDIT_TRAIL</code> data dictionary views.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink ADFNS020" href="../../appdev.112/e41502/adfns_editions.htm#ADFNS020"><span class="italic">Oracle Database Advanced Application Developer's Guide</span></a> for detailed information about editions</div>
</div>
<!-- class="sect3" -->
<a id="CEGBIGIF"></a>
<div id="DBSEG394" class="sect3">
<h4 class="sect3">Schema Object Audit Options for Views, Procedures, and Other Elements</h4>
<p>The definitions for <a id="sthref1686"></a><a id="sthref1687"></a><a id="sthref1688"></a><a id="sthref1689"></a>views and procedures (including stored functions, packages, and triggers) reference underlying schema objects. Because of this dependency, some unique characteristics apply to auditing views and procedures, such as the likelihood of generating multiple audit records.</p>
<p>Views and procedures are subject to the enabled audit options on the base schema objects, including the default audit options. These options also apply to the resulting SQL statements.</p>
<p>Consider the following series of SQL statements:</p>
<pre dir="ltr">
AUDIT SELECT ON HR.EMPLOYEES BY ACCESS; 
 
CREATE VIEW employees_departments AS 
  SELECT employee_id, last_name, department_id
    FROM employees, departments
    WHERE employees.department_id = departments.department_id;
 
AUDIT SELECT ON employees_departments BY ACCESS; 

SELECT * FROM employees_departments; 
</pre>
<p>As a result of the query on the <code dir="ltr">employees_departments</code> view, two audit records are generated: one for the query on the <code dir="ltr">employees_departments</code> view and one for the query on the base table <code dir="ltr">employees</code> (indirectly through the <code dir="ltr">employees_departments</code> view). The query on the base table <code dir="ltr">departments</code> does not generate an audit record because the <code dir="ltr">SELECT</code> audit option for this table is not enabled. All audit records pertain to the user that queried the <code dir="ltr">employees_departments</code> view.</p>
<p>In the given example, if the <code dir="ltr">AUDIT SELECT ON HR.EMPLOYEES;</code> statement is omitted, then using the <code dir="ltr">employees_departments</code> view does not generate an audit record for the <code dir="ltr">EMPLOYEES</code> table.</p>
</div>
<!-- class="sect3" -->
<a id="CEGIIJAB"></a>
<div id="DBSEG395" class="sect3">
<h4 class="sect3">Configuring Schema Object Auditing</h4>
<p><a id="sthref1690"></a><a id="sthref1691"></a>You can use the <code dir="ltr">AUDIT</code> statement to configure object auditing in the current edition. <a class="olink SQLRF01107" href="../../server.112/e41084/statements_4007.htm#SQLRF01107"><span class="italic">Oracle Database SQL Language Reference</span></a> lists valid object audit options for <code dir="ltr">AUDIT</code> and the schema object types for which each option is available.</p>
<p>A user can set any object audit option for the objects contained in his or her schema. The <code dir="ltr">AUDIT ANY</code> system privilege is required to set an object audit option for an object contained in another user schema or to set the default object auditing option. Usually, only the security administrator is granted the <code dir="ltr">AUDIT ANY</code> privilege.</p>
<p><a href="#BCGDDGFC">Figure 9-2</a> shows how to audit all <a id="sthref1692"></a><a id="sthref1693"></a><a id="sthref1694"></a>successful and unsuccessful <code dir="ltr">DELETE</code> statements on the <code dir="ltr">laurel.emp</code> table.</p>
<div id="DBSEG396" class="example">
<p class="titleinexample"><a id="BCGDDGFC"></a>Example 9-13 Configuring Auditing for a Schema Table</p>
<pre dir="ltr">
AUDIT DELETE ON laurel.emp BY ACCESS;
</pre></div>
<!-- class="example" -->
<p><a href="#BCGECIFI">Example 9-14</a> shows how to audit all successful <code dir="ltr">SELECT</code>, <code dir="ltr">INSERT</code>, and <code dir="ltr">DELETE</code> statements on the <code dir="ltr">dept</code> table owned by user <code dir="ltr">jward</code>.</p>
<div id="DBSEG397" class="example">
<p class="titleinexample"><a id="BCGECIFI"></a>Example 9-14 Auditing Successful Statements on a Schema Table</p>
<pre dir="ltr">
AUDIT SELECT, INSERT, DELETE
     ON jward.dept
     BY ACCESS
     WHENEVER SUCCESSFUL;
</pre></div>
<!-- class="example" -->
<p><a href="#BCGBADIE">Example 9-15</a> shows how you <a id="sthref1695"></a>can use <a id="sthref1696"></a><a id="sthref1697"></a>the <code dir="ltr">ON DEFAULT</code> clause to apply to any new objects (tables, views, and sequences) that are created after you set the <code dir="ltr">AUDIT</code> statement. In this example, new objects that are created in the future will be audited for all unsuccessful <code dir="ltr">SELECT</code> statements:</p>
<div id="DBSEG398" class="example">
<p class="titleinexample"><a id="BCGBADIE"></a>Example 9-15 Configuring Auditing for Any New Objects Using the DEFAULT Clause</p>
<pre dir="ltr">
AUDIT SELECT
     ON DEFAULT
     BY ACCESS
     WHENEVER NOT SUCCESSFUL;
</pre></div>
<!-- class="example" -->
<p><a href="#BCGGGFGD">Example 9-16</a> shows how <a id="sthref1698"></a><a id="sthref1699"></a>to audit the execution of PL/SQL procedure or function.</p>
<div id="DBSEG399" class="example">
<p class="titleinexample"><a id="BCGGGFGD"></a>Example 9-16 Auditing the Execution of a Procedure or Function</p>
<pre dir="ltr">
AUDIT EXECUTE ON sec_mgr.auth_orders BY ACCESS;
</pre></div>
<!-- class="example" --></div>
<!-- class="sect3" -->
<a id="CEGGBGEI"></a>
<div id="DBSEG400" class="sect3">
<h4 class="sect3">Removing Object Auditing</h4>
<p>Use<a id="sthref1700"></a> the <code dir="ltr">NOAUDIT</code> statement to <a id="sthref1701"></a><a id="sthref1702"></a><a id="sthref1703"></a>remove object auditing. The following statements turn off the corresponding auditing options:</p>
<pre dir="ltr">
NOAUDIT DELETE
   ON emp;
NOAUDIT SELECT, INSERT, DELETE
   ON jward.dept;
</pre>
<p>To remove all object audit options on the <code dir="ltr">emp</code> table, enter the following statement:</p>
<pre dir="ltr">
NOAUDIT ALL ON emp;
</pre>
<p>To <span class="bold"><a id="sthref1704"></a><a id="sthref1705"></a></span>remove all default object audit options, enter the following statement:</p>
<pre dir="ltr">
NOAUDIT ALL ON DEFAULT;
</pre>
<p>All schema objects that are created before this <code dir="ltr">NOAUDIT</code> statement is issued continue to use the default object audit options in effect at the time of their creation, unless overridden by an explicit <code dir="ltr">NOAUDIT</code> statement after their creation.</p>
<p>To remove object audit options for a specific object, you must be the owner of the schema object. To remove the object audit options of an object in the schema of another user or to remove default object audit options, you must have the <code dir="ltr">AUDIT ANY</code> system privilege. A user with privileges to remove object audit options of an object can override the options set by any user.</p>
</div>
<!-- class="sect3" -->
<a id="CJADBFBF"></a>
<div id="DBSEG401" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Setting Audit Options for Objects That May Be Created in the Future</h4>
<p>You can <a id="sthref1706"></a>create audit settings for objects that do not exist yet, such as the insertion and deletion of tables to be created. There are two approaches that you can take. One approach is to use the statement audit options in the <code dir="ltr">AUDIT</code> statement. For example, to audit all inserts on future tables, enter the following SQL statement:</p>
<pre dir="ltr">
AUDIT INSERT TABLE BY ACCESS;
</pre>
<p>The second approach is to invoke the <code dir="ltr">AUDIT</code> statement using the <code dir="ltr">ON DEFAULT</code> clause. For example:</p>
<pre dir="ltr">
AUDIT ALL ON DEFAULT BY ACCESS;
</pre>
<p>This statement audits by default all subsequent object creation statements. The <code dir="ltr">ON</code> keyword specifies object auditing. The <code dir="ltr">ON DEFAULT</code> clause configures auditing for subsequently created objects that are affected by the following statements:</p>
<div class="inftblinformal">
<table class="cellalignment2250" title="AUDIT ALL ON DEFAULT statements" summary="AUDIT ALL ON DEFAULT statements" dir="ltr">
<thead>
<tr class="cellalignment2244">
<th class="cellalignment2251" id="r1c1-t21">Statements A-D</th>
<th class="cellalignment2251" id="r1c2-t21">Statements E-I</th>
<th class="cellalignment2251" id="r1c3-t21">Statements I-R</th>
<th class="cellalignment2251" id="r1c4-t21">Statements S-Y</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r2c1-t21" headers="r1c1-t21"><code dir="ltr">ALTER</code></td>
<td class="cellalignment2252" headers="r2c1-t21 r1c2-t21"><code dir="ltr">EXECUTE</code></td>
<td class="cellalignment2252" headers="r2c1-t21 r1c3-t21"><code dir="ltr">INSERT</code></td>
<td class="cellalignment2252" headers="r2c1-t21 r1c4-t21"><code dir="ltr">SELECT</code></td>
</tr>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r3c1-t21" headers="r1c1-t21"><code dir="ltr">AUDIT</code></td>
<td class="cellalignment2252" headers="r3c1-t21 r1c2-t21"><code dir="ltr">GRANT</code></td>
<td class="cellalignment2252" headers="r3c1-t21 r1c3-t21"><code dir="ltr">LOCK</code></td>
<td class="cellalignment2252" headers="r3c1-t21 r1c4-t21"><code dir="ltr">UPDATE</code></td>
</tr>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r4c1-t21" headers="r1c1-t21"><code dir="ltr">COMMENT</code></td>
<td class="cellalignment2252" headers="r4c1-t21 r1c2-t21"><code dir="ltr">FLASHBACK</code></td>
<td class="cellalignment2252" headers="r4c1-t21 r1c3-t21"><code dir="ltr">READ</code></td>
<td class="cellalignment2252" headers="r4c1-t21 r1c4-t21">-</td>
</tr>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r5c1-t21" headers="r1c1-t21"><code dir="ltr">DELETE</code></td>
<td class="cellalignment2252" headers="r5c1-t21 r1c2-t21"><code dir="ltr">INDEX</code></td>
<td class="cellalignment2252" headers="r5c1-t21 r1c3-t21"><code dir="ltr">RENAME</code></td>
<td class="cellalignment2252" headers="r5c1-t21 r1c4-t21">-</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" -->
<p>To restrict <code dir="ltr">ON DEFAULT</code> to a specific action, enter a statement similar to the following:</p>
<pre dir="ltr">
AUDIT ALTER, DELETE ON DEFAULT BY ACCESS;
</pre>
<p>For more information about the audit options and the <code dir="ltr">ON DEFAULT</code> clause of the <code dir="ltr">AUDIT</code> SQL statement, see <a class="olink SQLRF01107" href="../../server.112/e41084/statements_4007.htm#SQLRF01107"><span class="italic">Oracle Database SQL Language Reference</span></a>. To find objects audited by default, query the <code dir="ltr">ALL_DEF_AUDIT_OPTS</code> data dictionary view.</p>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="BCGFBDDE"></a>
<div id="DBSEG402" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Auditing Directory Objects</h3>
<p>This section contains:</p>
<ul>
<li>
<p><a href="#BCGEJIAJ">About Directory Object Auditing</a></p>
</li>
<li>
<p><a href="#BCGJGGIB">Configuring Directory Object Auditing</a></p>
</li>
<li>
<p><a href="#BCGGIGDB">Removing Directory Object Auditing</a></p>
</li>
</ul>
<a id="BCGEJIAJ"></a>
<div id="DBSEG403" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">About Directory Object Auditing</h4>
<p><a id="sthref1707"></a><a id="sthref1708"></a>You can audit directory objects. For example, suppose you create a directory object that contains a preprocessor program that the <code dir="ltr">ORACLE_LOADER</code> access driver will use. You can audit anyone who runs this program within this directory object.</p>
</div>
<!-- class="sect3" -->
<a id="BCGJGGIB"></a>
<div id="DBSEG404" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Configuring Directory Object Auditing</h4>
<p>Use <a id="sthref1709"></a><a id="sthref1710"></a>the <code dir="ltr">AUDIT</code> statement to enable object auditing. <a href="#BCGIBEGD">Example 9-17</a> shows how to audit the <code dir="ltr">EXECUTE</code> privilege on the directory object <code dir="ltr">my_exec</code>.</p>
<div id="DBSEG405" class="example">
<p class="titleinexample"><a id="BCGIBEGD"></a>Example 9-17 Auditing a Directory Object</p>
<pre dir="ltr">
AUDIT EXECUTE ON DIRECTORY my_exec BY ACCESS;
</pre></div>
<!-- class="example" --></div>
<!-- class="sect3" -->
<a id="BCGGIGDB"></a>
<div id="DBSEG406" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Removing Directory Object Auditing</h4>
<p>Use the <code dir="ltr">NOAUDIT</code> <a id="sthref1711"></a><a id="sthref1712"></a>statement to disable directory object auditing. For example:</p>
<pre dir="ltr">
NOAUDIT EXECUTE ON DIRECTORY my_exec;
</pre></div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="BCGBEAGC"></a>
<div id="DBSEG407" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Auditing Functions, Procedures, Packages, and Triggers</h3>
<p>This section contains:</p>
<ul>
<li>
<p><a href="#BCGEFJCD">About Auditing Functions, Procedures, Packages, and Triggers</a></p>
</li>
<li>
<p><a href="#BCGGIAJH">Configuring the Auditing of Functions, Procedures, Packages, and Triggers</a></p>
</li>
<li>
<p><a href="#BCGDGGFB">Removing the Auditing of Functions, Procedures, Packages, and Triggers</a></p>
</li>
</ul>
<a id="BCGEFJCD"></a>
<div id="DBSEG408" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">About Auditing Functions, Procedures, Packages, and Triggers</h4>
<p>You can audit functions, procedures, PL/SQL packages, and triggers. The areas that you can audit are as follows:</p>
<ul>
<li>
<p>You can individually audit standalone <a id="sthref1713"></a><a id="sthref1714"></a>functions, standalone <a id="sthref1715"></a><a id="sthref1716"></a>procedures, and <a id="sthref1717"></a><a id="sthref1718"></a>PL/SQL <a id="sthref1719"></a><a id="sthref1720"></a>packages.</p>
</li>
<li>
<p><a id="sthref1721"></a><a id="sthref1722"></a>If you audit a PL/SQL package, Oracle Database audits all functions and procedures within the package.</p>
</li>
<li>
<p>If you enable auditing for all executions, Oracle Database audits all triggers in the database, as well as all the functions and procedures within PL/SQL packages.</p>
</li>
<li>
<p>You cannot audit individual functions or procedures within a PL/SQL package.</p>
</li>
</ul>
<p>If you want to audit functions that are associated with Oracle Virtual Private database policies, note the following:</p>
<ul>
<li>
<p><span class="bold">Dynamic policies:</span> <a id="sthref1723"></a>Oracle <a id="sthref1724"></a><a id="sthref1725"></a>Database evaluates the policy function twice, once during SQL statement parsing and again during execution. As a result, two audit records are generated for each evaluation.</p>
</li>
<li>
<p><span class="bold">Static policies:</span> <a id="sthref1726"></a>Oracle Database evaluates the policy function once and then caches it in the SGA. As a result, only one audit record is generated.</p>
</li>
<li>
<p><span class="bold">Context-sensitive policies:</span> <a id="sthref1727"></a>Oracle Database executes the policy function once, during statement parsing. As a result, only one audit record is generated.</p>
</li>
</ul>
</div>
<!-- class="sect3" -->
<a id="BCGGIAJH"></a>
<div id="DBSEG409" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Configuring the Auditing of Functions, Procedures, Packages, and Triggers</h4>
<p><a href="#BCGCABIJ">Example 9-18</a> shows how to <a id="sthref1728"></a><a id="sthref1729"></a><a id="sthref1730"></a><a id="sthref1731"></a>audit the execution <a id="sthref1732"></a>of any function, procedure, package, or trigger, by any user in the database.</p>
<div id="DBSEG410" class="example">
<p class="titleinexample"><a id="BCGCABIJ"></a>Example 9-18 Auditing All Functions, Procedures, Packages, and Triggers</p>
<pre dir="ltr">
AUDIT EXECUTE PROCEDURE BY ACCESS;
</pre></div>
<!-- class="example" -->
<p><a href="#BCGBFEAA">Example 9-19</a> shows how to audit user <code dir="ltr">psmith</code>'s successful and unsuccessful executions of functions, procedures, packages, and triggers.</p>
<div id="DBSEG411" class="example">
<p class="titleinexample"><a id="BCGBFEAA"></a>Example 9-19 Auditing a User's Execution of Functions, Procedures, Packages, and Triggers</p>
<pre dir="ltr">
AUDIT EXECUTE PROCEDURE BY psmith BY ACCESS;
</pre></div>
<!-- class="example" -->
<p><a href="#BCGCEAAD">Example 9-20</a> shows how to audit a standalone procedure entitled <code dir="ltr">check_work</code> that is in the <code dir="ltr">sales_data</code> schema. This idea applies to standalone functions as well.</p>
<div id="DBSEG412" class="example">
<p class="titleinexample"><a id="BCGCEAAD"></a>Example 9-20 Auditing the Execution of a Procedure or Function within a Schema</p>
<pre dir="ltr">
AUDIT EXECUTE ON sales_data.check_work BY ACCESS WHENEVER SUCCESSFUL;
</pre></div>
<!-- class="example" --></div>
<!-- class="sect3" -->
<a id="BCGDGGFB"></a>
<div id="DBSEG413" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Removing the Auditing of Functions, Procedures, Packages, and Triggers</h4>
<p>Use the <code dir="ltr">NOAUDIT</code> statement to remove the auditing of functions, procedures, and triggers. For example:</p>
<pre dir="ltr">
NOAUDIT EXECUTE PROCEDURE;

NOAUDIT EXECUTE PROCEDURE BY psmith;

NOAUDIT EXECUTE ON sales_data.checkwork;
</pre></div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="CEGDHGJI"></a>
<div id="DBSEG414" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Auditing Network Activity</h3>
<p>This section contains:</p>
<ul>
<li>
<p><a href="#BCGIICDC">About Network Auditing</a></p>
</li>
<li>
<p><a href="#CEGHCHGJ">Configuring Network Auditing</a></p>
</li>
<li>
<p><a href="#CEGDCEIE">Removing Network Auditing</a></p>
</li>
</ul>
<a id="BCGIICDC"></a>
<div id="DBSEG415" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">About Network Auditing</h4>
<p>You can use <a id="sthref1733"></a><a id="sthref1734"></a>the <code dir="ltr">AUDIT</code> statement to audit unexpected errors in network protocol or internal errors in the network layer. Network auditing captures errors that occur during communication with the client on the network. These are errors thrown by the SQL*Net driver. There can be several causes of network errors. For example, an internal event set by a database engineer for testing purposes can cause a network error. Other causes include conflicting configuration settings for encryption, such as the network not finding the information required to create or process expected encryption. <a id="sthref1735"></a>The errors that network auditing uncovers (such as <code dir="ltr">ACTION 122 Network Error</code>) are not connection failures: network auditing is only concerned with data as it travels across the network.</p>
<p>The audit record for network auditing lists the authentication type and SQL*Net address of the client (if available) in the <code dir="ltr">COMMENT_TEXT</code> field of the audit record, using the following format:</p>
<pre dir="ltr">
Authenticated by: <span class="italic">authentication_type</span>; Client Address: <span class="italic">SQLNetAddress_of_client</span>
</pre>
<p>The <code dir="ltr">Client Address:</code> <code dir="ltr"><span class="codeinlineitalic">SQLNetAddress_of_client</span></code> portion only appears if this information is available.</p>
<p><a href="#CEGFEEFB">Table 9-4</a> shows how to remedy four common error conditions.</p>
<div id="DBSEG416" class="tblhruleformal">
<p class="titleintable"><a id="sthref1736"></a><a id="CEGFEEFB"></a>Table 9-4 Auditable Network Error Conditions</p>
<table class="cellalignment2250" title="Auditable Network Error Conditions" summary="This table describes four auditable network error conditions." dir="ltr">
<thead>
<tr class="cellalignment2244">
<th class="cellalignment2251" id="r1c1-t22">Error</th>
<th class="cellalignment2251" id="r1c2-t22">Cause</th>
<th class="cellalignment2251" id="r1c3-t22">Action</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r2c1-t22" headers="r1c1-t22">
<p><code dir="ltr">TNS-02507</code></p>
<p><code dir="ltr">Encryption algorithm not installed</code></p>
</td>
<td class="cellalignment2252" headers="r2c1-t22 r1c2-t22">
<p>After picking an algorithm, the server was unable to find an index for it in its table of algorithms. This should be impossible because the algorithm was chosen (indirectly) from that list.</p>
</td>
<td class="cellalignment2252" headers="r2c1-t22 r1c3-t22">
<p>Turn on tracing for further details, and then rerun the operation. (Note that this error is not normally visible to the user.) If the error persists, then contact Oracle Support Services.</p>
</td>
</tr>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r3c1-t22" headers="r1c1-t22">
<p><code dir="ltr">TNS-12648</code></p>
<p><code dir="ltr">Encryption or data integrity algorithm list empty</code></p>
</td>
<td class="cellalignment2252" headers="r3c1-t22 r1c2-t22">
<p>An Oracle Advanced Security list-of-algorithms parameter was empty.</p>
</td>
<td class="cellalignment2252" headers="r3c1-t22 r1c3-t22">
<p>Change the list to contain the name of at least one installed algorithm, or remove the list entirely if every installed algorithm is not acceptable.</p>
</td>
</tr>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r4c1-t22" headers="r1c1-t22">
<p><code dir="ltr">TNS-12649</code></p>
<p><code dir="ltr">Unknown encryption or data integrity algorithm</code></p>
</td>
<td class="cellalignment2252" headers="r4c1-t22 r1c2-t22">
<p>An Oracle Advanced Security list-of-algorithms parameter included an algorithm name that was not recognized.</p>
</td>
<td class="cellalignment2252" headers="r4c1-t22 r1c3-t22">
<p>Remove that algorithm name, correct it if it was misspelled, or install the driver for the missing algorithm.</p>
</td>
</tr>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r5c1-t22" headers="r1c1-t22">
<p><code dir="ltr">TNS-12650</code></p>
<p><code dir="ltr">No common encryption or data integrity algorithm</code></p>
</td>
<td class="cellalignment2252" headers="r5c1-t22 r1c2-t22">
<p>The client and server have no algorithm in common for either encryption or data integrity or both.</p>
</td>
<td class="cellalignment2252" headers="r5c1-t22 r1c3-t22">
<p>Choose sets of algorithms that overlap. In other words, add one of the client algorithm choices to the server list, or add one of the server list choices to the client algorithm.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblhruleformal" --></div>
<!-- class="sect3" -->
<a id="CEGHCHGJ"></a>
<div id="DBSEG11013" class="sect3">
<h4 class="sect3">Configuring Network Auditing</h4>
<p>To <a id="sthref1737"></a>configure network auditing, use the <code dir="ltr">AUDIT</code> statement. For example:</p>
<pre dir="ltr">
AUDIT NETWORK BY ACCESS;
</pre></div>
<!-- class="sect3" -->
<a id="CEGDCEIE"></a>
<div id="DBSEG417" class="sect3">
<h4 class="sect3">Removing Network Auditing</h4>
<p>To remove <a id="sthref1738"></a>network <a id="sthref1739"></a>auditing<a id="sthref1740"></a>:</p>
<pre dir="ltr">
NOAUDIT NETWORK;
</pre></div>
<!-- class="sect3" --></div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="CEGGCIAE"></a>
<div id="DBSEG60064" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Using Default Auditing for Security-Relevant SQL Statements and Privileges</h2>
<p>This section contains:</p>
<ul>
<li>
<p><a href="#CHDEAEHA">About the Default Auditing Settings</a></p>
</li>
<li>
<p><a href="#CHDEEADC">Privileges That Oracle Database Audits by Default</a></p>
</li>
<li>
<p><a href="#CHDFDBED">Disabling and Enabling Default Audit Settings</a></p>
</li>
</ul>
<a id="CHDEAEHA"></a>
<div id="DBSEG418" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">About the Default Auditing Settings</h3>
<p>When <a id="sthref1741"></a><a id="sthref1742"></a>you use <a id="sthref1743"></a>Database <a id="sthref1744"></a>Configuration Assistant (DBCA) to create a new database, Oracle Database configures the database to audit the most commonly used security-relevant SQL statements and privileges. It also sets the <code dir="ltr">AUDIT_TRAIL</code> initialization parameter to <code dir="ltr">DB</code>. If you decide to use a different audit trail type (for example, <code dir="ltr">OS</code> if you want to write the audit trail records to operating system files), then you can do that: Oracle Database continues to audit the privileges that are audited by default. If you disable auditing by setting the <code dir="ltr">AUDIT_TRAIL</code> parameter to <code dir="ltr">NONE</code>, then no auditing takes place.</p>
<p>If <a id="sthref1745"></a>you manually create a database, then you should run the <code dir="ltr">secconf.sql</code> script to apply the default audit settings to your database. See <a href="#CHDFDBED">"Disabling and Enabling Default Audit Settings"</a> for more information.</p>
<p>To individually control the auditing of SQL statements and privileges, use the <code dir="ltr">AUDIT</code> and <code dir="ltr">NOAUDIT</code> statements. For more information, see <a href="#CEGEEBGE">"Auditing SQL Statements"</a> and <a href="#CEGDDHDB">"Auditing Privileges"</a>.</p>
</div>
<!-- class="sect2" -->
<a id="CHDEEADC"></a>
<div id="DBSEG419" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Privileges That Oracle Database Audits by Default</h3>
<p>Oracle Database<a id="sthref1746"></a> audits the following privileges by default:</p>
<div class="inftblinformalwidemax">
<table class="cellalignment2250" title="Privileges Audited by Default" summary="Listing of commands that are audited by default, top to bottom, left to right" dir="ltr">
<thead>
<tr class="cellalignment2244">
<th class="cellalignment2251" id="r1c1-t23">Privileges A-C</th>
<th class="cellalignment2251" id="r1c2-t23">Privileges C-D</th>
<th class="cellalignment2251" id="r1c3-t23">Privileges D-G</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r2c1-t23" headers="r1c1-t23"><code dir="ltr">ALTER ANY PROCEDURE</code></td>
<td class="cellalignment2252" headers="r2c1-t23 r1c2-t23"><code dir="ltr">CREATE ANY LIBRARY</code></td>
<td class="cellalignment2252" headers="r2c1-t23 r1c3-t23"><code dir="ltr">DROP ANY TABLE</code></td>
</tr>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r3c1-t23" headers="r1c1-t23"><code dir="ltr">ALTER ANY TABLE</code></td>
<td class="cellalignment2252" headers="r3c1-t23 r1c2-t23"><code dir="ltr">CREATE ANY PROCEDURE</code></td>
<td class="cellalignment2252" headers="r3c1-t23 r1c3-t23"><code dir="ltr">DROP PROFILE</code></td>
</tr>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r4c1-t23" headers="r1c1-t23"><code dir="ltr">ALTER DATABASE</code></td>
<td class="cellalignment2252" headers="r4c1-t23 r1c2-t23"><code dir="ltr">CREATE ANY TABLE</code></td>
<td class="cellalignment2252" headers="r4c1-t23 r1c3-t23"><code dir="ltr">DROP USER</code></td>
</tr>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r5c1-t23" headers="r1c1-t23"><code dir="ltr">ALTER PROFILE</code></td>
<td class="cellalignment2252" headers="r5c1-t23 r1c2-t23"><code dir="ltr">CREATE EXTERNAL JOB</code></td>
<td class="cellalignment2252" headers="r5c1-t23 r1c3-t23"><code dir="ltr">EXEMPT ACCESS POLICY</code></td>
</tr>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r6c1-t23" headers="r1c1-t23"><code dir="ltr">ALTER SYSTEM</code></td>
<td class="cellalignment2252" headers="r6c1-t23 r1c2-t23"><code dir="ltr">CREATE PUBLIC DATABASE LINK</code></td>
<td class="cellalignment2252" headers="r6c1-t23 r1c3-t23"><code dir="ltr">GRANT ANY OBJECT PRIVILEGE</code></td>
</tr>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r7c1-t23" headers="r1c1-t23"><code dir="ltr">ALTER USER</code></td>
<td class="cellalignment2252" headers="r7c1-t23 r1c2-t23"><code dir="ltr">CREATE SESSION</code></td>
<td class="cellalignment2252" headers="r7c1-t23 r1c3-t23"><code dir="ltr">GRANT ANY PRIVILEGE</code></td>
</tr>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r8c1-t23" headers="r1c1-t23"><code dir="ltr">AUDIT SYSTEM</code></td>
<td class="cellalignment2252" headers="r8c1-t23 r1c2-t23"><code dir="ltr">CREATE USER</code></td>
<td class="cellalignment2252" headers="r8c1-t23 r1c3-t23"><code dir="ltr">GRANT ANY ROLE</code></td>
</tr>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r9c1-t23" headers="r1c1-t23"><code dir="ltr">CREATE ANY JOB</code></td>
<td class="cellalignment2252" headers="r9c1-t23 r1c2-t23"><code dir="ltr">DROP ANY PROCEDURE</code></td>
<td class="cellalignment2252" headers="r9c1-t23 r1c3-t23">-</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformalwidemax" -->
<p>Oracle Database <a id="sthref1747"></a>audits the following SQL shortcuts by default:</p>
<div class="inftblinformal">
<table class="cellalignment2250" title="Audited Shortcuts" summary="SQL statements audited by default" dir="ltr">
<thead>
<tr class="cellalignment2244">
<th class="cellalignment2251" id="r1c1-t24">Shortcuts D-P</th>
<th class="cellalignment2251" id="r1c2-t24">Shortcuts P-R</th>
<th class="cellalignment2251" id="r1c3-t24">Shortcuts S</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r2c1-t24" headers="r1c1-t24"><code dir="ltr">DATABASE LINK</code></td>
<td class="cellalignment2252" headers="r2c1-t24 r1c2-t24"><code dir="ltr">PUBLIC SYNONYM</code></td>
<td class="cellalignment2252" headers="r2c1-t24 r1c3-t24"><code dir="ltr">SYSTEM AUDIT</code></td>
</tr>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r3c1-t24" headers="r1c1-t24"><code dir="ltr">PROFILE</code></td>
<td class="cellalignment2252" headers="r3c1-t24 r1c2-t24"><code dir="ltr">ROLE</code></td>
<td class="cellalignment2252" headers="r3c1-t24 r1c3-t24"><code dir="ltr">SYSTEM GRANT</code></td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" -->
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a class="olink SQLRF" href="../../server.112/e41084/toc.htm"><span class="italic">Oracle Database SQL Language Reference</span></a> for detailed information about the SQL statements described in this section</p>
<p><a class="olink SQLRF53714" href="../../server.112/e41084/statements_4007.htm#SQLRF53714">sql_statement_shortcut</a> in <span class="italic">Oracle Database SQL Language Reference</span> for a list of accepted SQL shortcuts you can use with the <code dir="ltr">AUDIT</code> statement</p>
</li>
</ul>
</div>
</div>
<!-- class="sect2" -->
<a id="CHDFDBED"></a>
<div id="DBSEG33234" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Disabling and Enabling Default Audit Settings</h3>
<p>If your applications use the default audit settings from Oracle Database 10<span class="italic">g</span> Release 2 (10.2), then you can revert to these audit settings until you modify the applications to use the Release 11<span class="italic">g</span> audit settings. To do so, run the<a id="sthref1748"></a><a id="sthref1749"></a> <code dir="ltr">undoaud.sql</code> script.</p>
<p>After you have modified your applications to conform to the Release 11<span class="italic">g</span> audit settings, then you can manually update your database to use the audit configuration that suits your business needs, or you can run the <a id="sthref1750"></a><a id="sthref1751"></a><code dir="ltr">secconf.sql</code> script to apply the Release 11<span class="italic">g</span> default audit settings. You can customize this script to have different security settings if you like, but remember that the settings listed in the original script are Oracle-recommended settings.</p>
<p>If you created your database manually, then you should run the <code dir="ltr">secconf.sql</code> script to apply the Release 11<span class="italic">g</span> default audit settings to the database. Databases that have been created with Database Configuration Assistant will have these settings, but manually created databases do not.</p>
<p>The <code dir="ltr">undoaud.sql</code> and <code dir="ltr">secconf.sql</code> scripts are in the <code dir="ltr">$ORACLE_HOME/rdbms/admin</code> directory. The <code dir="ltr">undoaud.sql</code> script affects audit settings only, and the <code dir="ltr">secconf.sql</code> script affects both audit and password settings. They have no effect on other security settings.</p>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="CEGBAFIA"></a>
<div id="DBSEG525" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Auditing Specific Activities with Fine-Grained Auditing</h2>
<p>This section contains:</p>
<ul>
<li>
<p><a href="#CEGBICJA">About Fine-Grained Auditing</a></p>
</li>
<li>
<p><a href="#CHDFJBDA">Where Are Fine-Grained Audit Records Stored?</a></p>
</li>
<li>
<p><a href="#CHDFGFHD">Advantages of Fine-Grained Auditing</a></p>
</li>
<li>
<p><a href="#BCGBHBDC">What Permissions Are Needed to Create a Fine-Grained Audit Policy?</a></p>
</li>
<li>
<p><a href="#BCGDFIBF">Activities That Are Always Audited in Fine-Grained Auditing</a></p>
</li>
<li>
<p><a href="#BCGDJHCE">Using Fine-Grained Audit Policies with Editions</a></p>
</li>
<li>
<p><a href="#CEGFHJAC">Creating an Audit Trail for Fine-Grained Audit Records</a></p>
</li>
<li>
<p><a href="#BCGFFCDF">How the Fine-Grained Audit Trail Generates Records</a></p>
</li>
<li>
<p><a href="#CEGHFFGE">Using the DBMS_FGA Package to Manage Fine-Grained Audit Policies</a></p>
</li>
<li>
<p><a href="#BCGBDIBD">Tutorial: Adding an Email Alert to a Fine-Grained Audit Policy</a></p>
</li>
<li>
<p><a href="#BCGGHBFD">Tutorial: Auditing Nondatabase Users</a></p>
</li>
</ul>
<a id="CEGBICJA"></a>
<div id="DBSEG60681" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">About Fine-Grained Auditing</h3>
<p>Fine-grained auditing<a id="sthref1752"></a> enables you to create policies that define specific conditions that must take place for the audit to occur. <a id="sthref1753"></a>This enables you to monitor data access based on content. It provides granular auditing of queries, and <code dir="ltr">INSERT</code>, <code dir="ltr">UPDATE</code>, and <code dir="ltr">DELETE</code> operations. For example, a central tax authority must track access to tax returns to guard against employee snooping, with enough detail to determine what data was accessed. It is not enough to know that <code dir="ltr">SELECT</code> privilege was used by a specific user on a particular table. Fine-grained auditing provides this deeper functionality.</p>
<p>In general, fine-grained audit policies are based on simple, user-defined SQL predicates on table objects as conditions for selective auditing. During fetching, whenever policy conditions are met for a row, the query is audited.</p>
<p>You can use fine-grained auditing to audit the following types of actions:</p>
<ul>
<li>
<p>Accessing a table between 9 p.m. and 6 a.m. or on Saturday and Sunday</p>
</li>
<li>
<p>Using an IP address from outside the corporate network</p>
</li>
<li>
<p>Selecting or updating a table column</p>
</li>
<li>
<p>Modifying a value in a table column</p>
</li>
</ul>
<div class="infobox-note">
<p class="notep1">Note:</p>
<ul>
<li>
<p>Fine-grained auditing is supported only with cost-based optimization. For queries using rule-based optimization, fine-grained auditing checks before applying row filtering, which could result in an unnecessary audit event trigger.</p>
</li>
<li>
<p>Policies currently in force on an object involved in a flashback query are applied to the data returned from the specified flashback snapshot (based on time or system change number (SCN).</p>
</li>
<li>
<p>If you <a id="sthref1754"></a>want <a id="sthref1755"></a><a id="sthref1756"></a>to use fine-grained auditing to audit data that is being directly loaded (for example, using Oracle Warehouse Builder to execute DML statements), then Oracle Database transparently makes all direct loads that are performed in the database instance into conventional loads. If you want to preserve the direct loading of data, consider using standard auditing instead.</p>
</li>
</ul>
</div>
</div>
<!-- class="sect2" -->
<a id="CHDFJBDA"></a>
<div id="DBSEG582" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Where Are Fine-Grained Audit Records Stored?</h3>
<p>Fine-grained<a id="sthref1757"></a> audit records are stored in the <code dir="ltr">SYS.FGA_LOG$</code> table. To find the records have been generated for the audit policies that are in effect, you can query the <code dir="ltr">DBA_FGA_AUDIT_TRAIL</code> data dictionary view. The <code dir="ltr">DBA_COMMON_AUDIT_TRAIL</code> data dictionary view combines both standard and fine-grained audit log records. In addition, you can query the <code dir="ltr">V$XML_AUDIT_TRAIL</code> view to find fine-grained audit records that were written in XML formatted files. For detailed information about these views, see <a class="olink REFRN" href="../../server.112/e40402/toc.htm"><span class="italic">Oracle Database Reference</span></a>.</p>
<p>Oracle Database always audits <code dir="ltr">DELETE</code>, <code dir="ltr">INSERT</code>, <code dir="ltr">UPDATE</code>, and <code dir="ltr">MERGE</code> operations on the <code dir="ltr">SYS.FGA_LOG$</code> (and <code dir="ltr">SYS.AUD$</code>) tables to the <code dir="ltr">SYS.AUD$</code> table. It does not allow the audit records to be deleted, unless user <code dir="ltr">SYS</code> performs these operations. If you have set the <code dir="ltr">AUDIT_SYS_OPERATIONS</code> initialization parameter to <code dir="ltr">TRUE</code>, then user <code dir="ltr">SYS</code>'s operations are audited. In this case the audit records of all <code dir="ltr">SYS</code> operations are written to whatever directory the <code dir="ltr">AUDIT_FILE_DEST</code> initialization parameter points to. If <code dir="ltr">AUDIT_FILE_DEST</code> is not set, then it writes the records to an operating system-dependent location.</p>
</div>
<!-- class="sect2" -->
<a id="CHDFGFHD"></a>
<div id="DBSEG420" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Advantages of Fine-Grained Auditing</h3>
<p>Fine-grained <a id="sthref1758"></a>auditing creates a more meaningful audit trail, one that includes only very specific actions that you want to audit. It excludes unnecessary information that occurs if each table access was recorded. <a id="sthref1759"></a>Fine-grained auditing has the following advantages over standard auditing:</p>
<ul>
<li>
<p><span class="bold">It performs a Boolean condition check.</span> If the Boolean condition you specify is met, for example, a table being accessed on a Saturday, then the audit takes place.</p>
</li>
<li>
<p><span class="bold">It captures the SQL that triggered the audit.</span> You can capture both the SQL statement that caused the audit, and any associated bind variables. <a id="sthref1760"></a><a id="sthref1761"></a><a id="sthref1762"></a><a id="sthref1763"></a><a id="sthref1764"></a>Be aware that you can only capture data from scalar column types. You cannot capture data from object columns, LOBs, or user-defined column types. For example, suppose you have the following query:</p>
<pre dir="ltr">
SELECT NAME FROM EMPLOYEE WHERE SSN = :1
</pre>
<p>If <code dir="ltr">:1</code> is of integer type and the value for <code dir="ltr">SSN</code> is 987654321, then the audit trail can capture this information. However, the audit trail cannot capture this information if <code dir="ltr">:1</code> is a BLOB, CLOB, object, or user-defined type.</p>
<p>This feature is available if you create the fine grained audit policy with the <code dir="ltr">audit_trail</code> parameter of the <code dir="ltr">DBMS_FGA.ADD_POLICY</code> PL/SQL procedure to <code dir="ltr">DB+EXTENDED</code> or <code dir="ltr">XML+EXTENDED</code>.</p>
</li>
<li>
<p><span class="bold">It adds extra protection to sensitive columns.</span> You can audit specific relevant columns that may hold sensitive information, such as salaries or Social Security numbers.</p>
</li>
<li>
<p><span class="bold">It provides an event handler feature.</span> For example, you can write a function that sends an email alert to a security administrator when an audited column that should not be changed at midnight is updated.</p>
</li>
<li>
<p><span class="bold">You do not need to set initialization parameters to enable fine-grained auditing.</span> Instead of setting initialization parameters such as <code dir="ltr">AUDIT_TRAIL</code>, you use the <code dir="ltr">DBMS_FGA PL/SQL</code> package to add and remove fine-grained auditing policies as necessary applying them to the specific operations or objects you want to monitor.</p>
</li>
</ul>
</div>
<!-- class="sect2" -->
<a id="BCGBHBDC"></a>
<div id="DBSEG421" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">What Permissions Are Needed to Create a Fine-Grained Audit Policy?</h3>
<p>To create a<a id="sthref1765"></a> fine-grained audit policy, you must have <code dir="ltr">EXECUTE</code> privileges on the <code dir="ltr">DBMS_FGA</code> PL/SQL package. The package is owned by the <code dir="ltr">SYS</code> user.</p>
</div>
<!-- class="sect2" -->
<a id="BCGDFIBF"></a>
<div id="DBSEG422" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Activities That Are Always Audited in Fine-Grained Auditing</h3>
<p>The <code dir="ltr">SYS.AUD$</code> table records <a id="sthref1766"></a>all data manipulation language (DML) statements, such as <code dir="ltr">INSERT</code>, <code dir="ltr">UPDATE</code>, <code dir="ltr">MERGE</code>, and <code dir="ltr">DELETE</code>, that are performed on the <code dir="ltr">SYS.FGA_LOG$</code> table by non-<code dir="ltr">SYS</code> users. Oracle Database performs the audit even if auditing has not been configured for the<a id="sthref1767"></a><a id="sthref1768"></a> <code dir="ltr">SYS.FGA_LOG$</code> table, which is the table in which these activities occur. You can check these activities by querying the <code dir="ltr">DBA_FGA_AUDIT_TRAIL</code> and <code dir="ltr">DBA_COMMON_AUDIT_TRAIL</code> views. See also <a href="#BCGGJBHA">"Activities That Are Always Written to the Standard and Fine-Grained Audit Records"</a>.</p>
</div>
<!-- class="sect2" -->
<a id="BCGDJHCE"></a>
<div id="DBSEG423" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Using Fine-Grained Audit Policies with Editions</h3>
<p>If you are <a id="sthref1769"></a>preparing an application for edition-based redefinition, and you cover each table that the application uses with an editioning view, then you must move the fine-grained audit polices that protect these tables to the editioning view.</p>
</div>
<!-- class="sect2" -->
<a id="CEGFHJAC"></a>
<div id="DBSEG424" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Creating an Audit Trail for Fine-Grained Audit Records</h3>
<p>You <a id="sthref1770"></a>designate the audit trail format for fine-grained auditing by setting the audit_trail parameter for the <code dir="ltr">DBMS_FGA.ADD_POLICY</code> policy (not to be confused with the <code dir="ltr">AUDIT_TRAIL</code> initialization parameter) when you create the audit policy. Setting this parameter to <code dir="ltr">XML</code> or <code dir="ltr">XML+EXTENDED</code> writes the records to the operating system files in XML format. If you prefer to write the fine-grained audit records to the <code dir="ltr">SYS.FGA_LOG$</code> table, then set the <code dir="ltr">audit_trail</code> parameter for the <code dir="ltr">DBMS_FGA.ADD_POLICY</code> parameter to <code dir="ltr">DB</code> or <code dir="ltr">DB+EXTENDED</code>. For a list of reasons why writing audit records to operating system files is beneficial, see <a href="#BCGBCFAD">"Advantages of the Operating System Audit Trail"</a>.</p>
<p>You can use the <code dir="ltr">V$XML_AUDIT_TRAIL</code> data dictionary view to make audit records from XML files available to DBAs through a SQL query, providing enhanced usability. Querying this view causes all XML files (all files with an <code dir="ltr">.xml</code> extension) in the <code dir="ltr">AUDIT_FILE_DEST</code> directory to be parsed and presented in relational table format.</p>
<p>The <code dir="ltr">DBA_COMMON_AUDIT_TRAIL</code> view includes the contents of the <code dir="ltr">V$XML_AUDIT_TRAIL</code> dynamic view for standard and fine-grained audit records.</p>
<p>Because the audit XML files are stored in files with the <code dir="ltr">.xml</code> extension on all platforms, the dynamic view presents audit information similarly on all platforms. See <a class="olink REFRN30405" href="../../server.112/e40402/dynviews_3128.htm#REFRN30405"><span class="italic">Oracle Database Reference</span></a> for detailed information about the <code dir="ltr">V$XML_AUDIT_TRAIL</code> view contents.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
If you audit tables that have sensitive data, remember that <code dir="ltr">DB+EXTENDED</code> and <code dir="ltr">XML+EXTENDED</code> settings for the <code dir="ltr">DBMS_FGA.ADD_POLICY</code> <code dir="ltr">audit_trail</code> parameter will capture this data. See <a href="guidelines.htm#CHDCGBFF">"Auditing Sensitive Information"</a> for ways to handle this scenario.</div>
</div>
<!-- class="sect2" -->
<a id="BCGFFCDF"></a>
<div id="DBSEG570" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">How the Fine-Grained Audit Trail Generates Records</h3>
<p>The <a id="sthref1771"></a>fine-grained audit trail captures an audit record for each reference of a table or a view within a SQL statement. For example, if you run a <code dir="ltr">UNION</code> statement that references the <code dir="ltr">HR.EMPLOYEES</code> table twice, then an audit policy for statement generates two audit records, one for each access of the <code dir="ltr">HR.EMPLOYEES</code> table.</p>
</div>
<!-- class="sect2" -->
<a id="CEGHFFGE"></a>
<div id="DBSEG426" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Using the DBMS_FGA Package to Manage Fine-Grained Audit Policies</h3>
<p>This section contains:</p>
<ul>
<li>
<p><a href="#BCGBECII">About the DBMS_FGA PL/SQL Package</a></p>
</li>
<li>
<p><a href="#CEGEACAJ">Creating a Fine-Grained Audit Policy</a></p>
</li>
<li>
<p><a href="#CEGCJEAE">Disabling and Enabling a Fine-Grained Audit Policy</a></p>
</li>
<li>
<p><a href="#CEGHFDEJ">Dropping a Fine-Grained Audit Policy</a></p>
</li>
</ul>
<a id="BCGBECII"></a>
<div id="DBSEG427" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">About the DBMS_FGA PL/SQL Package</h4>
<p>To <a id="sthref1772"></a><a id="sthref1773"></a>manage a fine-grained audit policy, you use the <code dir="ltr">DBMS_FGA</code> PL/SQL package. This package enables you to add all combinations of <code dir="ltr">SELECT</code>, <code dir="ltr">INSERT</code>, <code dir="ltr">UPDATE</code>, and <code dir="ltr">DELETE</code> statements to one policy. You also can audit <code dir="ltr">MERGE</code> statements, by auditing the underlying actions of <code dir="ltr">INSERT</code> and <code dir="ltr">UPDATE</code>. To audit <code dir="ltr">MERGE</code> statements, configure fine-grained access on the <code dir="ltr">INSERT</code> and <code dir="ltr">UPDATE</code> statements. Only one record is generated for each policy for successful <code dir="ltr">MERGE</code> operations. To administer fine-grained audit policies, you must have the <code dir="ltr">EXECUTE</code> privilege on the <code dir="ltr">DBMS_FGA</code> package.</p>
<p>The audit policy is bound to the table for which you created it. This simplifies the management of audit policies because the policy only must be changed once in the database, not in each application. In addition, no matter how a user connects to the database&mdash;from an application, a Web interface, or through SQL*Plus or Oracle SQL Developer&mdash;Oracle Database records any actions that affect the policy.</p>
<p>If any rows returned from a query match the audit condition that you define, then Oracle Database inserts an audit entry into the fine-grained audit trail. This entry excludes all the information that is reported in the regular audit trail. In other words, only one row of audit information is inserted into the audit trail for every fine-grained audit policy that evaluates to true.</p>
<p>For detailed information about the syntax of the <code dir="ltr">DBMS_FGA</code> package, see <a class="olink ARPLS015" href="../../appdev.112/e40758/d_fga.htm#ARPLS015"><span class="italic">Oracle Database PL/SQL Packages and Types Reference</span></a>. See also <a class="olink ADFNS" href="../../appdev.112/e41502/toc.htm"><span class="italic">Oracle Database Advanced Application Developer's Guide</span></a>.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
If you plan to use the <code dir="ltr">DBMS_FGA</code> package policy across different editions, then you can control the results of the policy: whether the results are uniform across all editions, or specific to the edition in which the policy is used. See <a href="app_context.htm#CHDDFGJB">"How Editions Affects the Results of a Global Application Context PL/SQL Package"</a> for more information.</div>
</div>
<!-- class="sect3" -->
<a id="CEGEACAJ"></a>
<div id="DBSEG428" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Creating a Fine-Grained Audit Policy</h4>
<p>To<a id="sthref1774"></a><a id="sthref1775"></a><a id="sthref1776"></a> create a fine-grained audit policy, use the <code dir="ltr">DBMS_FGA.ADD_POLICY</code> procedure. This procedure creates an audit policy using the supplied predicate as the audit condition. Oracle Database executes the policy predicate with the privileges of the user who created the policy. The maximum number of fine-grained policies on any table or view object is 256. Oracle Database stores the policy in the data dictionary table, but you can create the policy on any table or view that is not in the <code dir="ltr">SYS</code> schema.</p>
<p>After <a id="sthref1777"></a>you create the fine-grained audit policy, it does not reside in any specific schema, although the definition for the policy is stored in the <code dir="ltr">SYS.FGA$</code> data dictionary table.</p>
<p>You cannot modify a fine-grained audit policy after you have created it. If you need to modify the policy, drop it and then recreate it.</p>
<p>Be aware that if a table <a id="sthref1778"></a>column <a id="sthref1779"></a>has a fine-grained audit policy, you cannot encrypt or decrypt this column (by using the <code dir="ltr">UPDATE</code> statement). To do so raises an <a id="sthref1780"></a><code dir="ltr">ORA-28133: full table access is restricted by fine-grained security</code> error. If you want to update the column, first temporarily disable the fine-grained audit policy and then encrypt or decrypt the column. Afterwards, re-enable the fine-grained audit policy. See <a href="#CEGCJEAE">"Disabling and Enabling a Fine-Grained Audit Policy"</a> for more information.</p>
<p>The syntax for the <code dir="ltr">ADD_POLICY</code> procedure is:</p>
<pre dir="ltr">
DBMS_FGA.ADD_POLICY(
<span class="italic">   </span>object_schema      VARCHAR2, 
   object_name        VARCHAR2,<span class="italic"> </span>
   policy_name        VARCHAR2, 
   audit_condition    VARCHAR2, 
   audit_column       VARCHAR2, 
   handler_schema     VARCHAR2, 
<span class="italic">   </span>handler_module     VARCHAR2, 
   enable             BOOLEAN, 
   statement_types    VARCHAR2,
   audit_trail        BINARY_INTEGER IN DEFAULT,
   audit_column_opts  BINARY_INTEGER IN DEFAULT);
</pre>
<p>In this specification:</p>
<ul>
<li>
<p><code dir="ltr">object_schema</code>: Specifies the schema of the object to be audited. (If NULL, the current log-on user schema is assumed.)</p>
</li>
<li>
<p><code dir="ltr">object_name</code>: Specifies the name of the object to be audited.</p>
</li>
<li>
<p><code dir="ltr">policy_name</code>: Specifies the name of the policy to be created. Ensure that this name is unique.</p>
</li>
<li>
<p><code dir="ltr">audit_condition</code>: Specifies a Boolean condition in a row. <code dir="ltr">NULL</code> is allowed and acts as <code dir="ltr">TRUE</code>. See <a href="#BCGFDAIA">"Auditing Specific Columns and Rows"</a> for more information. If you specify <code dir="ltr">NULL</code> or no audit condition, then any action on a table with that policy creates an audit record, whether or not rows are returned.</p>
<p>Follow these guidelines:</p>
<ul>
<li>
<p>Do not include functions, which execute the auditable statement on the same base table, in the <code dir="ltr">audit_condition</code> setting. For example, suppose you create a function that executes an <code dir="ltr">INSERT</code> statement on the <code dir="ltr">HR.EMPLOYEES</code> table. The policy's <code dir="ltr">audit_condition</code> contains this function and it is for <code dir="ltr">INSERT</code> statements (as set by <code dir="ltr">statement_types</code>). When the policy is used, the function executes recursively until the system has run out of memory. This can raise the error<a id="sthref1781"></a> <code dir="ltr">ORA-1000: maximum open cursors exceeded</code> or<a id="sthref1782"></a> <code dir="ltr">ORA-00036: maximum number of recursive SQL levels (50) exceeded</code>.</p>
</li>
<li>
<p>Do not issue the <code dir="ltr">DBMS_FGA.ENABLE_POLICY</code> or <code dir="ltr">DBMS_FGA.DISABLE_POLICY</code> statement from a function in a policy's condition.</p>
</li>
</ul>
</li>
<li>
<p><code dir="ltr">audit_column</code>: Specifies one or more columns to audit, including hidden columns. If set to <code dir="ltr">NULL</code> or omitted, all columns are audited. These can include Oracle Label Security hidden columns or object type columns. The default, NULL, causes audit if any column is accessed or affected.</p>
</li>
<li>
<p><code dir="ltr">handler_schema</code>: If an alert is used to trigger a response when the policy is violated, specifies the name of the schema that contains the event handler. The default, <code dir="ltr">NULL</code>, uses the current schema. See also <a href="#BCGBDIBD">"Tutorial: Adding an Email Alert to a Fine-Grained Audit Policy"</a>.</p>
</li>
<li>
<p><code dir="ltr">handler_module</code>: Specifies the name of the event handler. Include the package the event handler is in. This function is invoked only after the first row that matches the audit condition in the query is processed.</p>
<p>Follow these guidelines:</p>
<ul>
<li>
<p>Do not create recursive fine-grained audit handlers. For example, suppose you create a handler that executes an <code dir="ltr">INSERT</code> statement on the <code dir="ltr">HR.EMPLOYEES</code> table. The policy that is associated with this handler is for <code dir="ltr">INSERT</code> statements (as set by the <code dir="ltr">statement_types</code> parameter). When the policy is used, the handler executes recursively until the system has run out of memory. This can raise the error<a id="sthref1783"></a> <code dir="ltr">ORA-1000: maximum open cursors exceeded</code> or<a id="sthref1784"></a> <code dir="ltr">ORA-00036: maximum number of recursive SQL levels (50) exceeded</code>.</p>
</li>
<li>
<p>Do not issue the <code dir="ltr">DBMS_FGA.ENABLE_POLICY</code> or <code dir="ltr">DBMS_FGA.DISABLE_POLICY</code> statement from a policy handler. Doing so can raise the<a id="sthref1785"></a> <code dir="ltr">ORA-28144: Failed to execute fine-grained audit handler</code> error.</p>
</li>
</ul>
</li>
<li>
<p><code dir="ltr">enable</code>: Enables or disables the policy using true or false. If omitted, the policy is enabled. The default is <code dir="ltr">TRUE</code>.</p>
</li>
<li>
<p><code dir="ltr">statement_types</code>: Specifies the SQL statements to be audited: <code dir="ltr">INSERT</code>, <code dir="ltr">UPDATE</code>, <code dir="ltr">DELETE</code>, or <code dir="ltr">SELECT</code> only. The default is <code dir="ltr">SELECT</code>.</p>
</li>
<li>
<p><code dir="ltr">audit_trail</code>: Specifies the destination (<code dir="ltr">DB</code> or <code dir="ltr">XML</code>) of fine-grained audit records. Also specifies whether to populate <code dir="ltr">LSQLTEXT</code> and <code dir="ltr">LSQLBIND</code> in <code dir="ltr">FGA_LOG$</code>. However, be aware that sensitive data, such as credit card information, can be recorded in clear text. See <a href="guidelines.htm#CHDCGBFF">"Auditing Sensitive Information"</a> for how you can handle this scenario.</p>
<p>If you set the <code dir="ltr">audit_trail</code> parameter to <code dir="ltr">XML</code>, then the XML files are written to the directory specified by the <code dir="ltr">AUDIT_FILE_DEST</code> initialization parameter.</p>
<p>For read-only databases, Oracle Database writes the fine-grained audit trail to XML files, regardless of the <code dir="ltr">audit_trail</code> setting.</p>
</li>
<li>
<p><code dir="ltr">audit_column_opts</code>: If you specify more than one column in the <code dir="ltr">audit_column</code> parameter, then this parameter determines whether to audit all or specific columns. See <a href="#BCGFDAIA">"Auditing Specific Columns and Rows"</a> for more information.</p>
</li>
</ul>
<p>See <a class="olink ARPLS225" href="../../appdev.112/e40758/d_fga.htm#ARPLS225"><span class="italic">Oracle Database PL/SQL Packages and Types Reference</span></a> for additional details about the <code dir="ltr">ADD_POLICY</code> syntax.</p>
<p><a href="#CEGBDHHI">Example 9-21</a> shows how to audit statements <code dir="ltr">INSERT</code>, <code dir="ltr">UPDATE</code>, <code dir="ltr">DELETE</code>, and <code dir="ltr">SELECT</code> on table <code dir="ltr">HR.EMPLOYEES</code>. Note that this example omits the <code dir="ltr">audit_column_opts</code> parameter, because it is not a mandatory parameter.</p>
<div id="DBSEG429" class="example">
<p class="titleinexample"><a id="CEGBDHHI"></a>Example 9-21 Using DBMS_FGA.ADD_POLICY to Create a Fine-Grained Audit Policy</p>
<pre dir="ltr">
BEGIN
  DBMS_FGA.ADD_POLICY(
   object_schema      =&gt; 'HR',
   object_name        =&gt; 'EMPLOYEES',
   policy_name        =&gt; 'chk_hr_employees',
   enable             =&gt;  TRUE,
   statement_types    =&gt; 'INSERT, UPDATE, SELECT, DELETE',
   audit_trail        =&gt;  DBMS_FGA.DB);
END;
/
</pre></div>
<!-- class="example" -->
<p>At this point, if you query the <code dir="ltr">DBA_AUDIT_POLICIES</code> view, you will find the new policy listed:</p>
<pre dir="ltr">
SELECT POLICY_NAME FROM DBA_AUDIT_POLICIES;

POLICY_NAME
-------------------------------
CHK_HR_EMPLOYEES
</pre>
<p>Afterwards, any of the following SQL statements log an audit event record.</p>
<pre dir="ltr">
SELECT COUNT(*) FROM HR.EMPLOYEES WHERE COMMISSION_PCT = 20 AND SALARY &gt; 4500;

SELECT SALARY FROM HR.EMPLOYEES WHERE DEPARTMENT_ID = 50;

DELETE FROM HR.EMPLOYEES WHERE SALARY &gt; 1000000;
</pre>
<p class="subhead2"><a id="BCGFDAIA"></a><a id="DBSEG430"></a>Auditing Specific Columns and Rows</p>
<p>You<a id="sthref1786"></a> can fine-tune the audit behavior by targeting a specific column, referred to as a <span class="italic">relevant column</span>, to be audited if a condition is met. To accomplish this, you use the <code dir="ltr">audit_column</code> parameter to specify one or more sensitive columns. In addition, you can audit data in specific rows by using the <code dir="ltr">audit_condition</code> parameter to define a Boolean condition.</p>
<p><a href="#CEGBDHHI">Example 9-21</a> performs an audit if anyone in Department 50 tries to access the <code dir="ltr">salary</code> and <code dir="ltr">commission_pct</code> columns.</p>
<pre dir="ltr">
audit_condition    =&gt; 'DEPARTMENT_ID = 50', 
audit_column       =&gt; 'SALARY,COMMISSION_PCT,'
</pre>
<p>As you can see, this feature is enormously beneficial. It not only enables you to pinpoint particularly important types of data to audit, but it provides increased protection for columns that contain sensitive data, such as Social Security numbers, salaries, patient diagnoses, and so on.</p>
<p>If the <code dir="ltr">audit_column</code> lists more than one column, you can use the <code dir="ltr">audit_column_opts</code> parameter to specify whether a statement is audited when the query references <span class="italic">any</span> column specified in the <code dir="ltr">audit_column</code> parameter or only when <span class="italic">all</span> columns are referenced. For example:</p>
<pre dir="ltr">
audit_column_opts   =&gt; DBMS_FGA.ANY_COLUMNS,

audit_column_opts   =&gt; DBMS_FGA.ALL_COLUMNS,
</pre>
<p>If you do not specify a relevant column, then auditing applies to all columns.</p>
<p>For more information about the <code dir="ltr">audit_condition</code>, <code dir="ltr">audit_column</code>, and <code dir="ltr">audit_column_opts</code> parameters in the <code dir="ltr">DBMS_FGA.ADD_POLICY</code> procedure, see <a class="olink ARPLS66353" href="../../appdev.112/e40758/d_fga.htm#ARPLS66353"><span class="italic">Oracle Database PL/SQL Packages and Types Reference</span></a>. See also the usage notes for the <code dir="ltr">ADD_POLICY</code> procedure in that section.</p>
</div>
<!-- class="sect3" -->
<a id="CEGCJEAE"></a>
<div id="DBSEG431" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Disabling and Enabling a Fine-Grained Audit Policy</h4>
<p><a id="sthref1787"></a><a id="sthref1788"></a>You can disable a fine-grained audit policy by using the <code dir="ltr">DBMS_FGA.DISABLE_POLICY</code> procedure. The syntax for <code dir="ltr">DISABLE_POLICY</code> is:</p>
<pre dir="ltr">
DBMS_FGA.DISABLE_POLICY(
<span class="italic">   </span>object_schema  VARCHAR2, 
   object_name    VARCHAR2,<span class="italic"> </span>
   policy_name    VARCHAR2 ); 
</pre>
<p><a href="#CEGIAABI">Example 9-22</a> shows how to disable the fine-grained audit policy created in <a href="#CEGBDHHI">Example 9-21</a>.</p>
<div id="DBSEG432" class="example">
<p class="titleinexample"><a id="CEGIAABI"></a>Example 9-22 Disabling a Fine-Grained Audit Policy</p>
<pre dir="ltr">
DBMS_FGA.DISABLE_POLICY(
  object_schema        =&gt; 'HR',
  object_name          =&gt; 'EMPLOYEES',
  policy_name          =&gt; 'chk_hr_employees');
/
</pre></div>
<!-- class="example" -->
<p>For detailed information about the <code dir="ltr">DISABLE_POLICY</code> syntax, see <a class="olink ARPLS226" href="../../appdev.112/e40758/d_fga.htm#ARPLS226"><span class="italic">Oracle Database PL/SQL Packages and Types Reference</span></a>.</p>
<p><a id="sthref1789"></a><a id="sthref1790"></a><a href="#BCGJAFFD">Example 9-23</a> show how to reenable the <code dir="ltr">chk_hr_emp</code> policy by using the <code dir="ltr">DBMS_FGA.ENABLE_POLICY</code> procedure:</p>
<div id="DBSEG433" class="example">
<p class="titleinexample"><a id="BCGJAFFD"></a>Example 9-23 Enabling a Fine-Grained Audit Policy</p>
<pre dir="ltr">
DBMS_FGA.ENABLE_POLICY(
  object_schema        =&gt; 'HR',
  object_name          =&gt; 'EMPLOYEES',
  policy_name          =&gt; 'chk_hr_employees',
  enable               =&gt; TRUE);
/
</pre></div>
<!-- class="example" -->
<p>For detailed information about the <code dir="ltr">ENABLE_POLICY</code> syntax, see <a class="olink ARPLS228" href="../../appdev.112/e40758/d_fga.htm#ARPLS228"><span class="italic">Oracle Database PL/SQL Packages and Types Reference</span></a>.</p>
</div>
<!-- class="sect3" -->
<a id="CEGHFDEJ"></a>
<div id="DBSEG434" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Dropping a Fine-Grained Audit Policy</h4>
<p>Oracle Database automatically drops the audit policy if you remove the object specified in the <code dir="ltr">object_name</code> parameter of the <code dir="ltr">DBMS_FGA.ADD_POLICY</code> procedure, or if you drop the user who created the audit policy.</p>
<p><a id="sthref1791"></a><a id="sthref1792"></a><a href="#CEGIJACJ">Example 9-24</a> shows how to drop a fine-grained audit policy manually by using the <code dir="ltr">DBMS_FGA.DROP_POLICY</code> procedure.</p>
<div id="DBSEG435" class="example">
<p class="titleinexample"><a id="CEGIJACJ"></a>Example 9-24 Dropping a Fine-Grained Audit Policy</p>
<pre dir="ltr">
DBMS_FGA.DROP_POLICY(
  object_schema      =&gt; 'HR',
  object_name        =&gt; 'EMPLOYEES',
  policy_name        =&gt; 'chk_hr_employees');
</pre></div>
<!-- class="example" -->
<p>See <a class="olink ARPLS227" href="../../appdev.112/e40758/d_fga.htm#ARPLS227"><span class="italic">Oracle Database PL/SQL Packages and Types Reference</span></a> for detailed information about the <code dir="ltr">DROP_POLICY</code> syntax.</p>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="BCGBDIBD"></a>
<div id="DBSEG90057" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Tutorial: Adding an Email Alert to a Fine-Grained Audit Policy</h3>
<p>This section contains:</p>
<ul>
<li>
<p><a href="#CHDDHGDC">About This Tutorial</a></p>
</li>
<li>
<p><a href="#BCGEHIJE">Step 1: Install and Configure the UTL_MAIL PL/SQL Package</a></p>
</li>
<li>
<p><a href="#BCGHCGII">Step 2: Create User Accounts</a></p>
</li>
<li>
<p><a href="#BCGHDGHC">Step 3: Configure an Access Control List File for Network Services</a></p>
</li>
<li>
<p><a href="#BCGFFBEJ">Step 4: Create the Email Security Alert PL/SQL Procedure</a></p>
</li>
<li>
<p><a href="#BCGBCABG">Step 5: Create and Test the Fine-Grained Audit Policy Settings</a></p>
</li>
<li>
<p><a href="#BCGHFGEB">Step 6: Test the Alert</a></p>
</li>
<li>
<p><a href="#BCGCCDIA">Step 7: Remove the Components for This Tutorial</a></p>
</li>
</ul>
<a id="CHDDHGDC"></a>
<div id="DBSEG565" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">About This Tutorial</h4>
<p>You <a id="sthref1793"></a><a id="sthref1794"></a>can <a id="sthref1795"></a>add an<a id="sthref1796"></a><a id="sthref1797"></a> email alert <a id="sthref1798"></a>to a fine-grained <a id="sthref1799"></a>audit policy that goes into effect when a user (or an intruder) violates the policy. To accomplish this, you first must create a procedure that generates the alert, and then use the following <code dir="ltr">DBMS_FGA.ADD_POLICY</code> parameters to call this function when someone violates this policy:</p>
<ul>
<li>
<p><code dir="ltr">handler_schema</code>: The schema in which the handler event is stored</p>
</li>
<li>
<p><code dir="ltr">handler_module</code>: The name of the event handler</p>
</li>
</ul>
<p>The alert can come in any form that best suits your environment: an email or pager notification, updates to a particular file or table, and so on. Creating alerts also helps to meet certain compliance regulations, such as California Senate Bill 1386. In this tutorial, you will create an email alert.</p>
<p>In this tutorial, you create an email alert that notifies a security administrator that a Human Resources representative is trying to select or modify salary information in the <code dir="ltr">HR.EMPLOYEES</code> table. The representative is permitted to make changes to this table, but to meet compliance regulations, we want to create a record of all salary selections and modifications to the table.</p>
</div>
<!-- class="sect3" -->
<a id="BCGEHIJE"></a>
<div id="DBSEG436" class="sect3">
<h4 class="sect3">Step 1: Install and Configure the UTL_MAIL PL/SQL Package</h4>
<ol>
<li>
<p>Log on as user <code dir="ltr">SYS</code> with the <code dir="ltr">SYSDBA</code> privilege.</p>
<pre dir="ltr">
sqlplus sys as sysdba
Enter password: <span class="italic">password</span>
</pre></li>
<li>
<p>Install the <code dir="ltr">UTL_MAIL</code> package.</p>
<pre dir="ltr">
@$ORACLE_HOME/rdbms/admin/utlmail.sql
@$ORACLE_HOME/rdbms/admin/prvtmail.plb
</pre>
<p>The <code dir="ltr">UTL_MAIL</code> package enables you to manage email. See <a class="olink ARPLS384" href="../../appdev.112/e40758/u_mail.htm#ARPLS384"><span class="italic">Oracle Database PL/SQL Packages and Types Reference</span></a> for more information about <code dir="ltr">UTL_MAIL</code>.</p>
<p>Be aware that currently, the <code dir="ltr">UTL_MAIL</code> PL/SQL package does not support SSL servers.</p>
</li>
<li id="BCGDFBIG">
<p>Check the current value of the <code dir="ltr">SMTP_OUT_SERVER</code> initialization parameter, and make a note of this value so that you can restore it when you complete this tutorial.</p>
<p>For example:</p>
<pre dir="ltr">
SHOW PARAMETER SMTP_OUT_SERVER
</pre>
<p>If the <code dir="ltr">SMTP_OUT_SERVER</code> parameter has already been set, then output similar to the following appears:</p>
<pre dir="ltr">
NAME                    TYPE              VALUE
----------------------- ----------------- ----------------------------------
SMTP_OUT_SERVER         string            some_imap_server.example.com
</pre></li>
<li id="BCGDIDAI">
<p>Issue the following <code dir="ltr">ALTER SYSTEM</code> statement:</p>
<pre dir="ltr">
ALTER SYSTEM SET SMTP_OUT_SERVER="<span class="italic">imap_mail_server.example.com</span>";
</pre>
<p>Replace <code dir="ltr"><span class="codeinlineitalic">imap_mail_server</span></code> with the name of your SMTP server, which you can find in the account settings in your email tool. Enclose these settings in quotation marks. For example:</p>
<pre dir="ltr">
ALTER SYSTEM SET SMTP_OUT_SERVER="my_imap_server.example.com"
</pre></li>
<li>
<p>Connect as <code dir="ltr">SYS</code> using the <code dir="ltr">SYSOPER</code> privilege and then restart the database.</p>
<pre dir="ltr">
CONNECT SYS/AS SYSOPER
Enter password: <span class="italic">password</span>

SHUTDOWN IMMEDIATE
STARTUP
</pre></li>
<li>
<p>Ensure that the <code dir="ltr">SMTP_OUT_SERVER</code> parameter setting is correct.</p>
<pre dir="ltr">
CONNECT SYS/AS SYSDBA
Enter password: <span class="italic">password</span>

SHOW PARAMETER SMTP_OUT_SERVER
</pre>
<p>Output similar to the following appears:</p>
<pre dir="ltr">
NAME                    TYPE              VALUE
----------------------- ----------------- ----------------------------------
SMTP_OUT_SERVER         string            my_imap_server.example.com
</pre></li>
</ol>
</div>
<!-- class="sect3" -->
<a id="BCGHCGII"></a>
<div id="DBSEG437" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Step 2: Create User Accounts</h4>
<ol>
<li>
<p>Ensure that you are connected as <code dir="ltr">SYS</code> using the <code dir="ltr">SYSDBA</code> privilege, and then create the <code dir="ltr">sysadmin_fga</code> account, who will create the fine-grained audit policy.</p>
<p>For example:</p>
<pre dir="ltr">
CONNECT SYS/AS SYSDBA
Enter password: <span class="italic">password</span>

GRANT CREATE SESSION, DBA TO sysadmin_fga IDENTIFIED BY <span class="italic">password</span>;
GRANT EXECUTE ON DBMS_FGA TO sysadmin_fga;
GRANT CREATE PROCEDURE, DROP ANY PROCEDURE TO sysadmin_fga;
GRANT EXECUTE ON UTL_TCP TO sysadmin_fga;
GRANT EXECUTE ON UTL_SMTP TO sysadmin_fga;
GRANT EXECUTE ON UTL_MAIL TO sysadmin_fga;
GRANT EXECUTE ON DBMS_NETWORK_ACL_ADMIN TO sysadmin_fga;
</pre>
<p>Replace <code dir="ltr"><span class="codeinlineitalic">password</span></code> with a password that is secure. See <a href="authentication.htm#CHDFDHAJ">"Minimum Requirements for Passwords"</a> for more information.</p>
<p>The <code dir="ltr">UTL_TCP</code>, <code dir="ltr">UTL_SMTP</code>, <code dir="ltr">UTL_MAIL</code>, and <code dir="ltr">DBMS_NETWORK_ACL_ADMIN</code> PL/SQL packages are used by the email security alert that you create.</p>
</li>
<li>
<p>Connect as user <code dir="ltr">SYSTEM</code>.</p>
<pre dir="ltr">
CONNECT SYSTEM
Enter password: <span class="italic">password</span>
</pre></li>
<li>
<p>Ensure that the <code dir="ltr">HR</code> schema account is unlocked and has a password. If necessary, unlock <code dir="ltr">HR</code> and grant this user a password.</p>
<pre dir="ltr">
SELECT USERNAME, ACCOUNT_STATUS FROM DBA_USERS WHERE USERNAME = 'HR';
</pre>
<p>If the <code dir="ltr">DBA_USERS</code> view lists user <code dir="ltr">HR</code> as locked and expired, then enter the following statement to unlock the <code dir="ltr">HR</code> account and create a new password:</p>
<pre dir="ltr">
ALTER USER HR ACCOUNT UNLOCK IDENTIFIED BY <span class="italic">password</span>;
</pre>
<p>Enter a password that is secure. For greater security, do <span class="bold">not</span> give the <code dir="ltr">HR</code> account the same password from previous releases of Oracle Database. <a href="authentication.htm#CHDFDHAJ">"Minimum Requirements for Passwords"</a> for the minimum requirements for creating passwords.</p>
</li>
<li>
<p>Create a user account for Susan Mavris, who is an HR representative, and then grant this user access to the <code dir="ltr">HR.EMPLOYEES</code> table.</p>
<pre dir="ltr">
GRANT CREATE SESSION TO smavris IDENTIFIED BY <span class="italic">password</span>;
GRANT SELECT, INSERT, UPDATE, DELETE ON HR.EMPLOYEES TO SMAVRIS; 
</pre></li>
</ol>
</div>
<!-- class="sect3" -->
<a id="BCGHDGHC"></a>
<div id="DBSEG438" class="sect3">
<h4 class="sect3">Step 3: Configure an Access Control List File for Network Services</h4>
<p>Before you can use PL/SQL network utility packages such as <code dir="ltr">UTL_MAIL</code>, you must configure an access control list (ACL) file that enables fine-grained access to external network services. For detailed information about this topic, see <a href="authorization.htm#CIHDAJDJ">"Managing Fine-Grained Access in PL/SQL Packages and Types"</a>.</p>
<p>To configure an access control list for the email alert:</p>
<ol>
<li>
<p>Connect to SQL*Plus as user <code dir="ltr">sysadmin_fga</code>.</p>
<pre dir="ltr">
CONNECT sysadmin_fga
Enter password: <span class="italic">password</span>
</pre></li>
<li>
<p>Create the following access control list and its privilege definitions.</p>
<pre dir="ltr">
BEGIN
 DBMS_NETWORK_ACL_ADMIN.CREATE_ACL (
  acl          =&gt; 'email_server_permissions.xml', 
  description  =&gt; 'Enables network permissions for the email server',
  principal    =&gt; 'SYSADMIN_FGA',
  is_grant     =&gt; TRUE, 
  privilege    =&gt; 'connect');
END;
/
</pre>
<p>Ensure that you enter your exact user name for the principal setting, in upper-case letters. For this tutorial, enter <code dir="ltr">SYSADMIN_FGA</code> for the name of the principal.</p>
</li>
<li>
<p>Assign the access control list to the outgoing SMTP network host for your email server.</p>
<pre dir="ltr">
BEGIN
 DBMS_NETWORK_ACL_ADMIN.ASSIGN_ACL (
  acl         =&gt; 'email_server_permissions.xml',
  host        =&gt; '<span class="italic">SMTP_OUT_SERVER_setting</span>', 
  lower_port  =&gt; <span class="italic">port</span>); 
END;
/
</pre>
<p>In this example:</p>
<ul>
<li>
<p><code dir="ltr"><span class="codeinlineitalic">SMTP_OUT_SERVER_setting</span></code>: Enter the <code dir="ltr">SMTP_OUT_SERVER</code> setting that you set for the <code dir="ltr">SMTP_OUT_SERVER</code> parameter in <a href="#BCGEHIJE">"Step 1: Install and Configure the UTL_MAIL PL/SQL Package"</a>. This setting should match exactly the setting that your email tool specifies for its outgoing server.</p>
</li>
<li>
<p><code dir="ltr"><span class="codeinlineitalic">port</span></code>: Enter the port number that your email tool specifies for its outgoing server. Typically, this setting is 25. Enter this value for the <code dir="ltr">lower_port</code> setting. (Currently, the <code dir="ltr">UTL_MAIL</code> package does not support SSL. If your email server is an SSL server, then enter 25 for the port number, even if the email server uses a different port number.)</p>
</li>
</ul>
</li>
</ol>
</div>
<!-- class="sect3" -->
<a id="BCGFFBEJ"></a>
<div id="DBSEG439" class="sect3">
<h4 class="sect3">Step 4: Create the Email Security Alert PL/SQL Procedure</h4>
<p>As user <code dir="ltr">sysadmin_fga</code>, create the following procedure. (You can copy and paste this text by positioning the cursor at the start of <code dir="ltr">CREATE OR REPLACE</code> in the first line.)</p>
<pre dir="ltr">
CREATE OR REPLACE PROCEDURE email_alert (sch varchar2, tab varchar2, pol varchar2)
AS
msg varchar2(20000) := 'HR.EMPLOYEES table violation. The time is: ';
BEGIN
  msg := msg||TO_CHAR(SYSDATE, 'Day DD MON, YYYY HH24:MI:SS'); 
UTL_MAIL.SEND (
    sender      =&gt; '<span class="italic">youremail@example.com</span>',
    recipients  =&gt; '<span class="italic">recipientemail@example.com</span>',
    subject     =&gt; 'Table modification on HR.EMPLOYEES',
    message     =&gt; msg); 
END email_alert;
/
</pre>
<p>In this example:</p>
<ul>
<li>
<p><code dir="ltr">CREATE OR REPLACE PROCEDURE ...AS</code>: You must include a signature that describes the schema name (sch), table name (tab), and the name of the audit procedure (pol) that you will define in audit policy in the next step.</p>
</li>
<li>
<p><code dir="ltr">sender and recipients</code>: Replace <code dir="ltr"><span class="codeinlineitalic">youremail@example.com</span></code> with your email address, and <code dir="ltr"><span class="codeinlineitalic">recipientemail@example.com</span></code> with the email address of the person you want to receive the notification.</p>
</li>
</ul>
</div>
<!-- class="sect3" -->
<a id="BCGBCABG"></a>
<div id="DBSEG440" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Step 5: Create and Test the Fine-Grained Audit Policy Settings</h4>
<ol>
<li>
<p>As user <code dir="ltr">sysadmin_fga</code>, create the <code dir="ltr">chk_hr_emp</code> policy fine-grained audit policy as follows.</p>
<pre dir="ltr">
BEGIN
 DBMS_FGA.ADD_POLICY (
  object_schema      =&gt;  'HR',
  object_name        =&gt;  'EMPLOYEES',
  policy_name        =&gt;  'CHK_HR_EMP',
  audit_column       =&gt;  'SALARY', 
  handler_schema     =&gt;  'SYSADMIN_FGA',
  handler_module     =&gt;  'EMAIL_ALERT',
  enable             =&gt;   TRUE,
  statement_types    =&gt;  'SELECT, UPDATE',
  audit_trail        =&gt;   DBMS_FGA.DB + DBMS_FGA.EXTENDED); 
END;
/
</pre></li>
<li>
<p>Commit the changes you have made to the database.</p>
<pre dir="ltr">
COMMIT;
</pre></li>
<li>
<p>Test the settings that you have created so far.</p>
<pre dir="ltr">
EXEC email_alert ('hr', 'employees', 'chk_hr_emp');
</pre>
<p>SQL*Plus should display a <code dir="ltr">PL/SQL procedure successfully completed</code> message, and in a moment, depending on the speed of your email server, you should receive the email alert.</p>
<p>If you receive an <a id="sthref1800"></a><a id="sthref1801"></a><code dir="ltr">ORA-24247: network access denied by access control list (ACL)</code> error followed by<a id="sthref1802"></a><a id="sthref1803"></a> <code dir="ltr">ORA-06512: at</code> <code dir="ltr"><span class="codeinlineitalic">string</span></code><code dir="ltr">line</code> <code dir="ltr"><span class="codeinlineitalic">string</span></code> errors, then check the settings in the access control list file.</p>
</li>
</ol>
</div>
<!-- class="sect3" -->
<a id="BCGHFGEB"></a>
<div id="DBSEG441" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Step 6: Test the Alert</h4>
<ol>
<li>
<p>Connect to SQL*Plus as user <code dir="ltr">smavris</code>, check your salary, and give yourself a nice raise.</p>
<pre dir="ltr">
CONNECT smavris
Enter password: <span class="italic">password</span>

SELECT SALARY FROM HR.EMPLOYEES WHERE LAST_NAME = 'Mavris';

SALARY
-----------
6500

UPDATE HR.EMPLOYEES SET SALARY = 13000 WHERE LAST_NAME = 'Mavris';
</pre></li>
<li>
<p>Now select from a column other than <code dir="ltr">SALARY</code> in the <code dir="ltr">HR.EMPLOYEES</code> table.</p>
<pre dir="ltr">
SELECT FIRST_NAME, LAST_NAME FROM HR.EMPLOYEES WHERE LAST_NAME = 'Raphaely';
</pre>
<p>The following output should appear:</p>
<pre dir="ltr">
FIRST_NAME           LAST_NAME
-------------------- --------------------
Den                  Raphaely
</pre>
<p>By now, depending on the speed of you email server, you (or your recipient) should have received an email with the subject header <code dir="ltr">Table modification on HR.EMPLOYEES</code> notifying you of the tampering of the <code dir="ltr">HR.EMPLOYEES</code> table.</p>
</li>
<li>
<p>As user <code dir="ltr">sysadmin_fga</code>, query the <code dir="ltr">DBA_FGA_AUDIT_TRAIL</code> data dictionary view, which contains the Susan Mavris's audited activities.</p>
<pre dir="ltr">
CONNECT sysadmin_fga
Enter password: <span class="italic">password</span>

col dbuid format a10
col lsqltext format a66
col ntimestamp# format a15

SELECT DBUID, LSQLTEXT, NTIMESTAMP# FROM SYS.FGA_LOG$ WHERE POLICYNAME='CHK_HR_EMP';
</pre>
<p>Output similar to the following appears:</p>
<pre dir="ltr">
DBUID      LSQLTEXT
---------- ------------------------------------------------------------------
NTIMESTAMP#
--------------------------------------------------------------------------
SMAVRIS    SELECT SALARY FROM HR.EMPLOYEES WHERE LAST_NAME = 'Mavris'
23-JUN-09 03.48.59.111000 PM

SMAVRIS    UPDATE HR.EMPLOYEES SET SALARY = 13000 WHERE LAST_NAME = 'Mavris'
23-JUN-09 03.49.07.330000 PM
</pre>
<p>The audit trail captures the two SQL statements that Susan Mavris ran that affected the <code dir="ltr">SALARY</code> column in the <code dir="ltr">HR.EMPLOYEES</code> table. The third statement she ran, in which she asked about Den Raphaely, was not recorded because it was not affected by the audit policy. This is because Oracle Database executes the audit function as an autonomous transaction, committing only the actions of the <code dir="ltr">handler_module</code> setting and not any user transaction. The function has no effect on any user SQL transaction.</p>
</li>
</ol>
</div>
<!-- class="sect3" -->
<a id="BCGCCDIA"></a>
<div id="DBSEG442" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Step 7: Remove the Components for This Tutorial</h4>
<ol>
<li>
<p>Connect to SQL*Plus as user <code dir="ltr">SYSTEM</code> privilege, and then drop users <code dir="ltr">sysadmin_fga</code> (including the objects in the <code dir="ltr">sysadmin_fga</code> schema) and <code dir="ltr">smavris</code>.</p>
<pre dir="ltr">
CONNECT SYSTEM
Enter password: <span class="italic">password</span>

DROP USER sysadmin_fga CASCADE;
DROP USER smavris;
</pre></li>
<li>
<p>Connect as user <code dir="ltr">HR</code> and remove the loftiness of Susan Mavris's salary.</p>
<pre dir="ltr">
CONNECT HR
Enter password: <span class="italic">password</span>

UPDATE HR.EMPLOYEES SET SALARY = 6500 WHERE LAST_NAME = 'Mavris';
</pre></li>
<li>
<p>If you want, lock and expire <code dir="ltr">HR</code>, unless other users want to use this account:</p>
<pre dir="ltr">
ALTER USER HR PASSWORD EXPIRE ACCOUNT LOCK;
</pre></li>
<li>
<p>Connect as user <code dir="ltr">SYS</code> with the <code dir="ltr">SYSDBA</code> privilege, and drop the <code dir="ltr">email_server_permissions.xml</code> access control list.</p>
<pre dir="ltr">
BEGIN
   DBMS_NETWORK_ACL_ADMIN.DROP_ACL(
     acl =&gt; 'email_server_permissions.xml');
END;
/
</pre>
<p>Access control lists reside in the <code dir="ltr">SYS</code> schema, not the schema of the user who created them.</p>
</li>
<li>
<p>Issue the following <code dir="ltr">ALTER SYSTEM</code> statement to restore the <code dir="ltr">SMTP_OUT_SERVER</code> parameter to the previous value, from Step <a href="#BCGDIDAI">4</a> under <a href="#BCGEHIJE">"Step 1: Install and Configure the UTL_MAIL PL/SQL Package"</a>:</p>
<pre dir="ltr">
ALTER SYSTEM SET SMTP_OUT_SERVER="<span class="italic">previous_value</span>";
</pre>
<p>Enclose this setting in quotation marks. For example:</p>
<pre dir="ltr">
ALTER SYSTEM SET SMTP_OUT_SERVER="some_imap_server.example.com"
</pre></li>
<li>
<p>Restart the database instance.</p>
<pre dir="ltr">
SHUTDOWN

STARTUP
</pre></li>
</ol>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="BCGGHBFD"></a>
<div id="DBSEG443" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Tutorial: Auditing Nondatabase Users</h3>
<p>This section contains:</p>
<ul>
<li>
<p><a href="#CHDFACBF">About This Tutorial</a></p>
</li>
<li>
<p><a href="#BCGDCCJE">Step 1: Create the User Account and Ensure the User HR Is Active</a></p>
</li>
<li>
<p><a href="#BCGBIJEC">Step 2: Create the Fine-Grained Audit Policy</a></p>
</li>
<li>
<p><a href="#BCGDJIJF">Step 3: Test the Policy</a></p>
</li>
<li>
<p><a href="#BCGHFJDB">Step 4: Remove the Components for This Tutorial</a></p>
</li>
</ul>
<a id="CHDFACBF"></a>
<div id="DBSEG566" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">About This Tutorial</h4>
<p>This tutorial <a id="sthref1804"></a><a id="sthref1805"></a>shows how to create a fine-grained audit policy that audits a nondatabase user's actions, based on the identity set in the client identifier.</p>
</div>
<!-- class="sect3" -->
<a id="BCGDCCJE"></a>
<div id="DBSEG444" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Step 1: Create the User Account and Ensure the User HR Is Active</h4>
<ol>
<li>
<p>Log on as user <code dir="ltr">SYS</code> with the <code dir="ltr">SYSDBA</code> privilege.</p>
<pre dir="ltr">
sqlplus SYS AS SYSDBA
Enter password: <span class="italic">password</span>
</pre></li>
<li>
<p>Create the <code dir="ltr">sysadmin_fga</code> account, who will create the fine-grained audit policy.</p>
<pre dir="ltr">
GRANT CREATE SESSION, DBA TO sysadmin_fga IDENTIFIED BY <span class="italic">password</span>;
GRANT SELECT ON OE.ORDERS TO sysadmin_fga;
GRANT EXECUTE ON DBMS_FGA TO sysadmin_fga;
GRANT SELECT ON SYS.FGA_LOG$ TO sysadmin_fga;
</pre>
<p>Replace <code dir="ltr"><span class="codeinlineitalic">password</span></code> with a password that is secure. See <a href="authentication.htm#CHDFDHAJ">"Minimum Requirements for Passwords"</a> for more information.</p>
</li>
<li>
<p>The sample user <code dir="ltr">OE</code> will also be used in this tutorial, so query the <code dir="ltr">DBA_USERS</code> data dictionary view to ensure that <code dir="ltr">OE</code> is not locked or expired.</p>
<pre dir="ltr">
SELECT USERNAME, ACCOUNT_STATUS FROM DBA_USERS WHERE USERNAME = 'OE';
</pre>
<p>If the <code dir="ltr">DBA_USERS</code> view lists user <code dir="ltr">OE</code> as locked and expired, log in as user <code dir="ltr">SYSTEM</code> and then enter the following statement to unlock the <code dir="ltr">OE</code> account and create a new password:</p>
<pre dir="ltr">
ALTER USER OE ACCOUNT UNLOCK IDENTIFIED BY <span class="italic">password</span>;
</pre>
<p>Enter a password that is secure. For greater security, do <span class="bold">not</span> give the <code dir="ltr">OE</code> account the same password from previous releases of Oracle Database. <a href="authentication.htm#CHDFDHAJ">"Minimum Requirements for Passwords"</a> for the minimum requirements for creating passwords.</p>
</li>
</ol>
</div>
<!-- class="sect3" -->
<a id="BCGBIJEC"></a>
<div id="DBSEG445" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Step 2: Create the Fine-Grained Audit Policy</h4>
<ol>
<li>
<p>Connect to SQL*Plus as user <code dir="ltr">sysadmin_fga</code>.</p>
<pre dir="ltr">
CONNECT sysadmin_fga
Enter password: <span class="italic">password</span>
</pre></li>
<li>
<p>Create the following policy:<a id="sthref1806"></a></p>
<pre dir="ltr">
BEGIN
 DBMS_FGA.ADD_POLICY(OBJECT_SCHEMA =&gt; 'OE',
   OBJECT_NAME                     =&gt; 'ORDERS',
   POLICY_NAME                     =&gt; 'ORDERS_FGA_POL',
   AUDIT_CONDITION                 =&gt; 'SYS_CONTEXT(''USERENV'', ''CLIENT_IDENTIFIER'') = ''Robert''',
   HANDLER_SCHEMA                  =&gt; NULL,
   HANDLER_MODULE                  =&gt; NULL,
   ENABLE                          =&gt; True,
   STATEMENT_TYPES                 =&gt; 'INSERT,UPDATE,DELETE,SELECT',
   AUDIT_TRAIL                     =&gt; DBMS_FGA.DB + DBMS_FGA.EXTENDED,
   AUDIT_COLUMN_OPTS               =&gt; DBMS_FGA.ANY_COLUMNS);
END;
/
</pre>
<p>In this example, the <code dir="ltr">AUDIT_CONDITION</code> parameter assumes the nondatabase user is named Robert. The policy will monitor any <code dir="ltr">INSERT</code>, <code dir="ltr">UPDATE</code>, <code dir="ltr">DELETE</code>, and <code dir="ltr">SELECT</code> statements Robert will attempt.</p>
</li>
</ol>
</div>
<!-- class="sect3" -->
<a id="BCGDJIJF"></a>
<div id="DBSEG446" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Step 3: Test the Policy</h4>
<ol>
<li>
<p>Connect as user <code dir="ltr">OE</code> and select from the <code dir="ltr">OE.ORDERS</code> table.</p>
<pre dir="ltr">
CONNECT OE
Enter password: <span class="italic">password</span>

SELECT COUNT(*) FROM ORDERS;
</pre>
<p>The following output appears:</p>
<pre dir="ltr">
  COUNT(*)
----------
       105
</pre></li>
<li>
<p>Connect as user <code dir="ltr">sysadmin_fga</code> and then check if any audit records were generated.</p>
<pre dir="ltr">
CONNECT sysadmin_fga
Enter password: <span class="italic">password</span>

SELECT DBUID, LSQLTEXT FROM SYS.FGA_LOG$ WHERE POLICYNAME='ORDERS_FGA_POL';
</pre>
<p>The following output appears:</p>
<pre dir="ltr">
no rows selected
</pre>
<p>Because no nondatabase users were logged in to query the <code dir="ltr">OE.ORDERS</code> table, the audit trail is empty.</p>
</li>
<li>
<p>Reconnect as user <code dir="ltr">OE</code>, set the client identifier to <code dir="ltr">Robert</code>, and then reselect from the <code dir="ltr">OE.ORDERS</code> table.</p>
<pre dir="ltr">
CONNECT OE
Enter password: <span class="italic">password</span>

EXEC DBMS_SESSION.SET_IDENTIFIER('Robert');

SELECT COUNT(*) FROM ORDERS;
</pre>
<p>The following output should appear:</p>
<pre dir="ltr">
  COUNT(*)
----------
       105
</pre></li>
<li>
<p>Reconnect as user <code dir="ltr">sysadmin_fga</code> and then check the audit trail again.</p>
<pre dir="ltr">
CONNECT sysadmin_fga
Enter password: <span class="italic">password</span>

SELECT DBUID, LSQLTEXT FROM SYS.FGA_LOG$ WHERE POLICYNAME='ORDERS_FGA_POL';
</pre>
<p>This time, because <code dir="ltr">Robert</code> has made his appearance and queried the <code dir="ltr">OE.ORDERS</code> table, the audit trail captures his actions:</p>
<pre dir="ltr">
DBUID            LSQLTEXT
---------------- ----------------------------
OE               SELECT COUNT(*) FROM ORDERS;
</pre></li>
</ol>
</div>
<!-- class="sect3" -->
<a id="BCGHFJDB"></a>
<div id="DBSEG447" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Step 4: Remove the Components for This Tutorial</h4>
<ol>
<li>
<p>Connect to SQL*Plus as user <code dir="ltr">SYSTEM</code>, and then drop user <code dir="ltr">sysadmin_fga</code> (including the objects in the <code dir="ltr">sysadmin_fga</code> schema).</p>
<pre dir="ltr">
CONNECT SYSTEM
Enter password: <span class="italic">password</span>

DROP USER sysadmin_fga CASCADE;
</pre></li>
<li>
<p>If you want, lock and expire <code dir="ltr">OE</code>, unless other users want to use this account:</p>
<pre dir="ltr">
ALTER USER OE PASSWORD EXPIRE ACCOUNT LOCK;
</pre></li>
</ol>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="BCGEHHCA"></a>
<div id="DBSEG0611" class="sect1">
<h2 class="sect1">Auditing SYS Administrative Users</h2>
<p>This section contains:</p>
<ul>
<li>
<p><a href="#CHDIHACC">Auditing User SYSTEM</a></p>
</li>
<li>
<p><a href="#CHDJFBHB">Auditing User SYS and Users Who Connect as SYSDBA and SYSOPER</a></p>
</li>
</ul>
<a id="CHDIHACC"></a>
<div id="DBSEG448" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Auditing User SYSTEM</h3>
<p>You can <a id="sthref1807"></a>audit the <code dir="ltr">SYSTEM</code> user by using all the standard and fine-grained audit features. Insofar as auditing is concerned, user <code dir="ltr">SYSTEM</code> is a typical database user (such as <code dir="ltr">HR</code> or <code dir="ltr">OE</code>) and requires no special configuration to be audited.</p>
<p><a href="#CHDJGIFA">Example 9-25</a> shows how to audit any table insert operations issued by user <code dir="ltr">SYSTEM</code>.</p>
<div id="DBSEG449" class="example">
<p class="titleinexample"><a id="CHDJGIFA"></a>Example 9-25 Auditing Table Insert Operations by User SYSTEM</p>
<pre dir="ltr">
AUDIT INSERT ANY TABLE BY SYSTEM BY ACCESS;
</pre></div>
<!-- class="example" --></div>
<!-- class="sect2" -->
<a id="CHDJFBHB"></a>
<div id="DBSEG450" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Auditing User SYS and Users Who Connect as SYSDBA and SYSOPER</h3>
<p>You can<a id="sthref1808"></a><a id="sthref1809"></a> fully<a id="sthref1810"></a> audit sessions for users who connect as <code dir="ltr">SYS</code>, including all users connecting using the <code dir="ltr">SYSDBA</code> or <code dir="ltr">SYSOPER</code> privileges. This enables you to write the actions of administrative users to an operating system file, even if the <code dir="ltr">AUDIT_TRAIL</code> parameter is set to <code dir="ltr">NONE</code>, <code dir="ltr">DB</code>, or <code dir="ltr">DB, EXTENDED</code>. Writing the actions of administrator users to an operating system audit file is safer than writing to the <code dir="ltr">SYS.AUD$</code> table, because administrative users can remove rows from this table that indicate their bad behavior.</p>
<p>To configure audit settings for <code dir="ltr">SYSDBA</code> and <code dir="ltr">SYSOPER</code> users:</p>
<ol>
<li>
<p>Set <a id="sthref1811"></a>the <code dir="ltr"><a id="sthref1812"></a><a id="sthref1813"></a>AUDIT_SYS_OPERATIONS</code> initialization parameter to <code dir="ltr">TRUE</code>.</p>
<pre dir="ltr">
ALTER SYSTEM SET AUDIT_SYS_OPERATIONS=TRUE SCOPE=SPFILE;
</pre>
<p>This setting records the top-level operations directly issued by users who have connected to the database using the <code dir="ltr">SYSDBA</code> or <code dir="ltr">SYSOPER</code> privilege. It writes the audit records to the operation system audit trail. The SQL text of every statement is written to the <code dir="ltr">ACTION</code> field in the operating system audit trail record.</p>
</li>
<li>
<p>If you want to write system administrator activities to XML files, then set the <code dir="ltr">AUDIT_TRAIL</code> initialization parameter to either <code dir="ltr">XML</code> or <code dir="ltr">XML, EXTENDED</code>.</p>
<p>For example:</p>
<pre dir="ltr">
ALTER SYSTEM SET AUDIT_TRAIL=XML, EXTENDED SCOPE=SPFILE;
</pre>
<p>In all operating systems, if you set <code dir="ltr">AUDIT_TRAIL</code> to either <code dir="ltr">XML</code> or <code dir="ltr">XML,EXTENDED</code>, then audit records are written as XML files in the directory specified by the <code dir="ltr">AUDIT_FILE_DEST</code> initialization parameter. By default, Oracle Database writes the audit records to operating system files.</p>
<p>See <a href="#CEGHHFBF">Table 9-1, "AUDIT_TRAIL Initialization Parameter Settings"</a> for more information about these settings. See also <a href="#CEGHGFBH">"Enabling or Disabling the Standard Audit Trail"</a>.</p>
</li>
<li>
<p>Restart the database.</p>
</li>
</ol>
<p>After you restart the database, Oracle Database audits all successful actions performed by <code dir="ltr">SYSDBA</code> and <code dir="ltr">SYSOPER</code> users, and writes these audit records<a id="sthref1814"></a> to the operating system audit trail, and not to the <code dir="ltr">SYS.AUD$</code> table.</p>
<p>In Windows, if you have set the <code dir="ltr">AUDIT_TRAIL</code> initialization parameter <code dir="ltr">OS</code>, then Oracle Database writes audit records as events to the Event Viewer log<a id="sthref1815"></a><a id="sthref1816"></a> file.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
The<a id="sthref1817"></a> <code dir="ltr">$ORACLE_BASE/admin/$ORACLE_SID/adump</code> directory is the first default location used if the <code dir="ltr"><a id="sthref1818"></a>AUDIT_FILE_DEST</code> initialization parameter is not set or does not point to a valid directory. If writing to that first default location fails or the database is closed, then Oracle Database uses the <code dir="ltr"><span class="codeinlineitalic">$ORACLE_HOME/rdbms/<a id="sthref1819"></a>audit</span></code> directory as the backup default location. If that attempt fails, then the audited operation fails and a message is written to the alert log.
<p>When <code dir="ltr">AUDIT_TRAIL</code> <a id="sthref1820"></a>is set to <code dir="ltr">OS</code>, audit file names continue to be in the following form:</p>
<pre dir="ltr">
<span class="italic">$ORACLE_SID_short_form_process_name_processid_sequence_number</span>.aud
</pre>
<p>The sequence number starts from number 1.</p>
<p>For example, the short process name <code dir="ltr">ora</code> is used for dedicated server processes, and the names <code dir="ltr">s001</code>, <code dir="ltr">s002</code>, and so on are used for shared server processes.</p>
<p>When <code dir="ltr">AUDIT_TRAIL</code> is set to <code dir="ltr">XML</code> or <code dir="ltr">XML, EXTENDED</code>, the same audit file names have the extension <code dir="ltr">xml</code> instead of <code dir="ltr">aud</code>.</p>
</div>
<p>If you do not specify the <code dir="ltr">AUDIT_FILE_DEST</code> initialization parameter, then the default location is <code dir="ltr">$ORACLE_BASE/admin/$ORACLE_SID/adump</code> in Linux and Solaris, and <code dir="ltr">%ORACLE_BASE%\admin\%ORACLE_SID%\adump</code> for Microsoft Windows. For other operating systems, refer to their audit trail documentation.</p>
<p>Oracle Database audits all <code dir="ltr">SYS</code>-issued SQL statements indiscriminately and regardless of the setting of the <code dir="ltr"><a id="sthref1821"></a>AUDIT_TRAIL</code> initialization parameter.</p>
<p>Consider the following <code dir="ltr">SYS</code> session:</p>
<pre dir="ltr">
CONNECT SYS AS SYSDBA;
Enter password: <span class="italic">password</span>

ALTER SYSTEM FLUSH SHARED_POOL;
UPDATE salary SET base=1000 WHERE name='laurel';
</pre>
<p>When <code dir="ltr">SYS</code> auditing is enabled, both the <code dir="ltr">ALTER SYSTEM</code> and <code dir="ltr">UPDATE</code> statements are displayed in the operating system audit file, similar to the following output. (Be aware that this format may change in different Oracle Database releases.)</p>
<pre dir="ltr">
Tue May  5 04:53:37 2009 -07:00
LENGTH : '159'
ACTION :[7] 'CONNECT'
DATABASE USER:[1] '/'
PRIVILEGE :[6] 'SYSDBA'
CLIENT USER:[7] 'laurelh'
CLIENT TERMINAL:[5] 'pts/0'
STATUS:[1] '0'
DBID:[9] '561542328'
 
Tue May  5 04:53:40 2009 -07:00
LENGTH : '183'
ACTION :[30] 'ALTER SYSTEM FLUSH SHARED_POOL'
DATABASE USER:[1] '/'
PRIVILEGE :[6] 'SYSDBA'
CLIENT USER:[7] 'laurelh'
CLIENT TERMINAL:[5] 'pts/0'
STATUS:[1] '0'
DBID:[9] '561542328'
 
Tue May  5 04:53:49 2009 -07:00
LENGTH : '200'
ACTION :[47] 'UPDATE salary SET base=1000 WHERE name='laurel''
DATABASE USER:[1] '/'
PRIVILEGE :[6] 'SYSDBA'
CLIENT USER:[7] 'laurelh'
CLIENT TERMINAL:[5] 'pts/0'
STATUS:[1] '0'
DBID:[9] '561542328'
</pre>
<p>The brackets indicate the length of the value. For example, <code dir="ltr">PRIVILEGE</code> is set to <code dir="ltr">SYSDBA</code>, which uses 6 characters. In addition, the values are in single quotes for <code dir="ltr">SYS</code> and mandatory audit records.</p>
<p>Because of the superuser privileges available to users who connect as <code dir="ltr">SYSDBA</code>, Oracle recommends that database administrators rarely use this connection and only when necessary. Database administrators can usually perform normal day-to-day maintenance activity. These database administrators are typical database users with the <code dir="ltr">DBA</code> role, or have been granted privileges that are the equivalent of a <code dir="ltr">DBA</code> role (for example, <code dir="ltr">mydba</code> or <code dir="ltr">jr_dba</code>) that your organization customizes.</p>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="BCGEADJF"></a>
<div id="DBSEG451" class="sect1">
<h2 class="sect1">Using Triggers to Write Audit Data to a Separate Table</h2>
<p>You can use <a id="sthref1822"></a>triggers <a id="sthref1823"></a>to supplement<a id="sthref1824"></a> the built-in auditing features of Oracle Database. The trigger that you create records user actions to a separate database table. When an activity fires the trigger, the trigger records the action in this table. <a id="sthref1825"></a>Triggers are useful when you want to record customized information such as before-and-after changes to a table. For detailed information about creating triggers, see <a class="olink LNPLS020" href="../../appdev.112/e25519/triggers.htm#LNPLS020"><span class="italic">Oracle Database PL/SQL Language Reference</span></a>.</p>
<p>You do not need to have auditing enabled for the trigger to work, nor does it matter what type of auditing you do have enabled. The trigger works outside of the database audit functionality.</p>
<p>Follow these guidelines if you want to create audit triggers:</p>
<ul>
<li>
<p><span class="bold">Never write the trigger so that it writes data to the SYS.AUD$ table.</span> In fact, you should never modify the <code dir="ltr">SYS.AUD$</code> table contents. If you try to write values to <code dir="ltr">SYS.AUD$</code> and the trigger does not work as expected, then it could adversely affect standard auditing. The<a id="sthref1826"></a> <code dir="ltr">SYS.AUD$</code> table is an Oracle Database-owned table, and only Oracle Database should write to it.</p>
</li>
<li>
<p><span class="bold">If possible, create the trigger as an AFTER trigger.</span> The triggering statement is subjected to any applicable constraints. If no records are found, then the <code dir="ltr">AFTER</code> trigger does not fire, and audit processing is not carried out unnecessarily.</p>
</li>
<li>
<p><span class="bold">Create the trigger as either an AFTER row or AFTER statement trigger</span>. Choosing between <code dir="ltr">AFTER</code> row and <code dir="ltr">AFTER</code> statement triggers depends on the information being audited. For example, row triggers provide value-based auditing for each table row. Triggers can also require you to supply a reason code for issuing the audited SQL statement, which can be useful in both row and statement-level auditing situations.</p>
</li>
</ul>
<p><a href="#BCGIEAID">Table 9-5</a> provides a comparison of trigger-based auditing and the built-in database auditing features.</p>
<div id="DBSEG452" class="tblhruleformal">
<p class="titleintable"><a id="sthref1827"></a><a id="BCGIEAID"></a>Table 9-5 Comparison of Built-in Auditing and Trigger-Based Auditing</p>
<table class="cellalignment2250" title="Comparison of Built-in Auditing and Trigger-Based Auditing" summary="This tables compares built-In auditing and trigger-based auditing." dir="ltr">
<thead>
<tr class="cellalignment2244">
<th class="cellalignment2251" id="r1c1-t30">Audit Feature</th>
<th class="cellalignment2251" id="r1c2-t30">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r2c1-t30" headers="r1c1-t30">
<p>DML and DDL auditing</p>
</td>
<td class="cellalignment2252" headers="r2c1-t30 r1c2-t30">
<p>Standard auditing options permit auditing of DML and DDL statements regarding all types of schema objects and structures. Comparatively, triggers permit auditing of DML statements entered against tables, and DDL auditing at <code dir="ltr">SCHEMA</code> or <code dir="ltr">DATABASE</code> level.</p>
</td>
</tr>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r3c1-t30" headers="r1c1-t30">
<p>Centralized audit trail</p>
</td>
<td class="cellalignment2252" headers="r3c1-t30 r1c2-t30">
<p>All database audit information is recorded centrally and automatically using the auditing features of the database.</p>
</td>
</tr>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r4c1-t30" headers="r1c1-t30">
<p>Declarative method</p>
</td>
<td class="cellalignment2252" headers="r4c1-t30 r1c2-t30">
<p>Auditing features enabled using the standard database features are easier to declare and maintain, and less prone to errors, when compared to auditing functions defined by triggers.</p>
</td>
</tr>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r5c1-t30" headers="r1c1-t30">
<p>Auditing options can be audited</p>
</td>
<td class="cellalignment2252" headers="r5c1-t30 r1c2-t30">
<p>Any changes to existing auditing options can also be audited to guard against malicious database activity.</p>
</td>
</tr>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r6c1-t30" headers="r1c1-t30">
<p>Session and execution time auditing</p>
</td>
<td class="cellalignment2252" headers="r6c1-t30 r1c2-t30">
<p>Using the database auditing features, records are generated once every time an audited statement is entered. With triggers, an audit record is generated each time a trigger-audited table is referenced.</p>
</td>
</tr>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r7c1-t30" headers="r1c1-t30">
<p>Auditing of unsuccessful data access</p>
</td>
<td class="cellalignment2252" headers="r7c1-t30 r1c2-t30">
<p>Database auditing can be set to audit when unsuccessful data access occurs. However, unless autonomous transactions are used, any audit information generated by a trigger is rolled back if the triggering statement is rolled back. For more information about autonomous transactions, see <a class="olink CNCPT417" href="../../server.112/e40540/transact.htm#CNCPT417"><span class="italic">Oracle Database Concepts</span></a>.</p>
</td>
</tr>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r8c1-t30" headers="r1c1-t30">
<p>Sessions can be audited</p>
</td>
<td class="cellalignment2252" headers="r8c1-t30 r1c2-t30">
<p>Connections, disconnections, and session activity (physical I/Os, logical I/Os, deadlocks, and so on) can be recorded using standard database auditing.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblhruleformal" -->
<p>In <a href="#BCGCGDCI">Example 9-26</a>, a trigger audits modifications to the <code dir="ltr">emp_tab</code> table for specific rows. The trigger writes the old and new values to the <code dir="ltr">emp_audit_tab</code> table, including the user who performed the update and the time the update took place.</p>
<div id="DBSEG453" class="example">
<p class="titleinexample"><a id="BCGCGDCI"></a>Example 9-26 Audit Trigger to Record Before and After Changes to a Table</p>
<pre dir="ltr">
<span class="bold">/* 1. Create the following table: */ </span>
CREATE TABLE emp_tab (
   empno               NUMBER(4),
   ename               VARCHAR2(10),
   job                 VARCHAR2(9),
   mgr                 NUMBER(4),
   hiredate            DATE,
   sal                 NUMBER(8,2),
   deptno              NUMBER(2));

<span class="bold">/* 2. Create a table to capture the audit data. */</span> 
CREATE TABLE emp_audit_tab (
   oldname             VARCHAR2(10),
   oldjob              VARCHAR2(9),
   oldsal              NUMBER (8,2),
   newname             VARCHAR2(10),
   newjob              VARCHAR2(9),
   newsal              NUMBER(8,2),
   user1               varchar2(10),
   systemdate          TIMESTAMP);

<span class="bold">/* 3. Create a trigger to record the old and new values, the author of the change, </span>
<span class="bold">      and when the change took place. */ </span>
CREATE OR REPLACE TRIGGER emp_audit_trig
  AFTER INSERT OR DELETE OR UPDATE ON emp_tab
  FOR EACH ROW
BEGIN
   INSERT INTO emp_audit_tab (
   oldname, oldjob, oldsal,
   newname, newjob, newsal,
   user1, systemdate
  )
  VALUES (
    :OLD.ename, :OLD.job, :OLD.sal,
    :NEW.ename, :NEW.job, :NEW.sal,
    user, sysdate
  );
END;
/
</pre></div>
<!-- class="example" -->
<p>To test this trigger, add a row to the <code dir="ltr">emp_tab</code> table, and then change the value the <code dir="ltr">ename</code>, <code dir="ltr">job</code>, or <code dir="ltr">sal</code> column in the <code dir="ltr">emp_tab</code> table. Then query the <code dir="ltr">emp_audit_tab</code> table to find the audit data.</p>
</div>
<!-- class="sect1" -->
<a id="BCGHDJHC"></a>
<div id="DBSEG0063" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Managing Audit Trail Records</h2>
<p>This section contains:</p>
<ul>
<li>
<p><a href="#CEGCBJIE">About Audit Records</a></p>
</li>
<li>
<p><a href="#CEGDGIAF">Managing the Database Audit Trail</a></p>
</li>
<li>
<p><a href="#CEGBDFCF">Managing the Operating System Audit Trail</a></p>
</li>
</ul>
<a id="CEGCBJIE"></a>
<div id="DBSEG60621" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">About Audit Records</h3>
<p>Audit<a id="sthref1828"></a><a id="sthref1829"></a><a id="sthref1830"></a><a id="sthref1831"></a> records include information about the operation that was audited, the user who performed the operation<a id="sthref1832" href="#sthref1832" onclick='footdisplay(2,"Oracle Database records the actions of both database and nondatabase users in the \u003ccode dir=\"ltr\"\u003eSYS.AUD$\u003c/code\u003e and \u003ccode dir=\"ltr\"\u003eSYS.FGA_LOG$\u003c/code\u003e tables. The \u003ccode dir=\"ltr\"\u003eCLIENTID\u003ca target=\"auditing\" id=\"sthref1833\" name=\"sthref1833\"\u003e\u003c/a\u003e\u003c/code\u003e column in these tables records the name of the nondatabase user. The \u003ccode dir=\"ltr\"\u003eUSERID\u003c/code\u003e column in the \u003ccode dir=\"ltr\"\u003eSYS.AUD$\u003c/code\u003e table and the \u003ccode dir=\"ltr\"\u003eDBUID\u003c/code\u003e column of the \u003ccode dir=\"ltr\"\u003eSYS.FGA_LOG$\u003c/code\u003e store the database user account. For nondatabase users, the \u003ccode dir=\"ltr\"\u003eUSERID\u003c/code\u003e and \u003ccode dir=\"ltr\"\u003eDBUID\u003c/code\u003e columns store the database user account that was created to enable the nondatabase user access to the database. The \u003ccode dir=\"ltr\"\u003eDBA_AUDIT_TRAIL\u003c/code\u003e, \u003ccode dir=\"ltr\"\u003eDBA_FGA_AUDIT_TRAIL\u003c/code\u003e, and \u003ccode dir=\"ltr\"\u003eDBA_COMMON_AUDIT_TRAIL\u003c/code\u003e views store this information in the \u003ccode dir=\"ltr\"\u003eCLIENT_ID\u003c/code\u003e, \u003ccode dir=\"ltr\"\u003eUSERNAME\u003c/code\u003e, and \u003ccode dir=\"ltr\"\u003eDB_USER\u003c/code\u003e columns.")'><sup class="tablefootnote">Foot&nbsp;2&nbsp;</sup></a>, and the date and time of the operation. Depending on the type of auditing you choose, you can write audit records to data dictionary tables, called the <span class="bold">database audit trail</span>, or in operating system files, called the <span class="bold">operating system audit trail</span>.</p>
<p>If you choose to write audit records to the database audit trail, Oracle Database writes the audit records to the <code dir="ltr">SYS.AUD$</code> table for default and standard auditing, and to the <code dir="ltr">SYS.FGA_LOG$</code> table for fine-grained auditing. Both of these tables reside in the <code dir="ltr">SYSTEM</code> tablespace and are owned by the <code dir="ltr">SYS</code> schema. You can check the contents of these tables by querying the following data dictionary views:</p>
<ul>
<li>
<p><code dir="ltr">DBA_AUDIT_TRAIL</code> for the <code dir="ltr">SYS.AUD$</code> contents</p>
</li>
<li>
<p><code dir="ltr">DBA_FGA_AUDIT_TRAIL</code> for the <code dir="ltr">SYS.FGA_LOG$</code> contents</p>
</li>
<li>
<p><code dir="ltr">DBA_COMMON_AUDIT_TRAIL</code> for both <code dir="ltr">SYS.AUD$</code> and <code dir="ltr">SYS.FGA_LOG$</code> contents</p>
</li>
</ul>
<p><a href="#BCGIICFE">"Finding Information About Audited Activities"</a> describes more data dictionary views that you can use to view to contents of the <code dir="ltr">SYS.AUD$</code> and <code dir="ltr">SYS.FGA_LOG$</code> tables.</p>
<p>If you choose to write audit records to an operating system file, you can write them to either a text file or to an XML file. You can check the contents of the audit XML files by querying the <code dir="ltr">V$XML_AUDIT_TRAIL</code> data dictionary view.</p>
</div>
<!-- class="sect2" -->
<a id="CEGDGIAF"></a>
<div id="DBSEG0623" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Managing the Database Audit Trail</h3>
<p>This section contains:</p>
<ul>
<li>
<p><a href="#BCGJCJHG">Database Audit Trail Contents</a></p>
</li>
<li>
<p><a href="#BCGFCJGJ">Controlling the Size of the Database Audit Trail</a></p>
</li>
<li>
<p><a href="#BCGFADGF">Moving the Database Audit Trail to a Different Tablespace</a></p>
</li>
<li>
<p><a href="#BCGEFJDC">Protecting the Database Audit Trail</a></p>
</li>
<li>
<p><a href="#BCGHECHE">Auditing the Database Audit Trail</a></p>
</li>
<li>
<p><a href="#BCGBEBDJ">Archiving the Database Audit Trail</a></p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#BCGJFEEE">"Purging Audit Trail Records"</a></div>
<a id="BCGJCJHG"></a>
<div id="DBSEG454" class="sect3">
<h4 class="sect3">Database Audit Trail Contents</h4>
<p>The <a id="sthref1834"></a><a id="sthref1835"></a>database audit trail is a <a id="sthref1836"></a><a id="sthref1837"></a>pair of tables, <code dir="ltr">AUD$</code> (for standard auditing) and <code dir="ltr">FGA_LOG$</code> (for fine-grained auditing), in the <code dir="ltr">SYS</code> schema of each Oracle Database data dictionary. It records both standard and fine-grained audit activities. Several data dictionary views can help you use the information in this table. <a href="#BCGIICFE">"Finding Information About Audited Activities"</a> lists all the auditing-related views.</p>
<p>The database audit trail <a id="sthref1838"></a><a id="sthref1839"></a>record contains different types of information, depending on the events audited and the auditing options set. For example, if you have set the <code dir="ltr">AUDIT_TRAIL</code> initialization parameter to <code dir="ltr">DB,</code> <code dir="ltr">EXTENDED</code> or <code dir="ltr">XML, EXTENDED</code>, then the <code dir="ltr">SQL_BIND</code> and <code dir="ltr">SQL_TEXT</code> columns show any SQL bind variables used for a SQL statement and SQL text that triggered the audit, respectively. For full details about the contents of these views, refer to <a class="olink REFRN" href="../../server.112/e40402/toc.htm"><span class="italic">Oracle Database Reference</span></a>. However, be aware that the format and columns of the <code dir="ltr">DBA_AUDIT_TRAIL</code> view may change across Oracle Database releases.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
If the <code dir="ltr">AUDIT_TRAIL</code> initialization parameter is set to <code dir="ltr">XML</code> or <code dir="ltr">XML, EXTENDED</code>, then Oracle Database sends standard audit records to operating system files in XML format. Because XML is a standard document format, many utilities are available to parse and analyze XML data.</div>
<p>If the database <a id="sthref1840"></a><a id="sthref1841"></a>destination for audit records becomes full or unavailable, and, therefore, unable to accept new records, then an audited action cannot complete. Instead, Oracle Database generates an error message and does not audit the action. You can control the size of the audit trail to make it more manageable. (In fact, Oracle strongly recommends that you do so.) See <a href="#BCGFCJGJ">"Controlling the Size of the Database Audit Trail"</a> for more information. See also <a href="guidelines.htm#i1010870">"Keeping Audited Information Manageable"</a>.</p>
<p>The audit trail <a id="sthref1842"></a><a id="sthref1843"></a>does not store information about any data values that might be involved in the audited statement. For example, old and new data values of updated rows are not stored when an <code dir="ltr">UPDATE</code> statement is audited. However, you can perform this specialized type of auditing by using fine-grained auditing methods.</p>
<p>You can use the <a id="sthref1844"></a>Flashback Query feature to show the old and new values of the updated rows, subject to any auditing policy presently in force. The current policies are enforced even if the flashback is to an old query that was originally subject to a different policy. Current business access rules always apply.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="#CEGBAFIA">"Auditing Specific Activities with Fine-Grained Auditing"</a> for more information about methods of fine-grained auditing</p>
</li>
<li>
<p><a class="olink ADMIN01513" href="../../server.112/e25494/tables.htm#ADMIN01513"><span class="italic">Oracle Database Administrator's Guide</span></a> for information about auditing table changes by using Flashback Transaction Query</p>
</li>
<li>
<p>Flashback entries in the table of system privileges listed in the <code dir="ltr">GRANT</code> SQL statement section of <a class="olink SQLRF01603" href="../../server.112/e41084/statements_9013.htm#SQLRF01603"><span class="italic">Oracle Database SQL Language Reference</span></a></p>
</li>
</ul>
</div>
<div class="infobox-note">
<p class="notep1">Note:</p>
You can find information about the log history by querying the<a id="sthref1845"></a> <code dir="ltr">V$LOGMNR_CONTENTS</code> data dictionary view. The <code dir="ltr">CLIENT_ID</code> column of this view records changes to the session client identifier. To query this view, you must have the <code dir="ltr">SELECT ANY TRANSACTION</code> system privilege.</div>
</div>
<!-- class="sect3" -->
<a id="BCGFCJGJ"></a>
<div id="DBSEG455" class="sect3">
<h4 class="sect3">Controlling the Size of the Database Audit Trail</h4>
<p><a id="sthref1846"></a>If the database audit trail is full and no more audit records can be inserted, then underlying statement cannot complete successfully until you purge the audit trail. Oracle Database issues errors to all users who issue statements that cause the audit. Therefore, you must control the growth and size of the audit trail.</p>
<p>When auditing is enabled and audit records are being generated, the audit trail increases according to two factors:</p>
<ul>
<li>
<p>The number of audit options turned on</p>
</li>
<li>
<p>The frequency of execution of audited statements</p>
</li>
</ul>
<p>To control the growth of the audit trail, you can use the following methods:</p>
<ul>
<li>
<p><span class="bold">Enable and disable database auditing.</span> If it is enabled, then audit records are generated and stored in the audit trail. If it is disabled, then audit records are not generated. (Remember that some activities are always audited.)</p>
</li>
<li>
<p><span class="bold">Be selective about the audit options that are turned on.</span> If more selective auditing is performed, then useless or unnecessary audit information is not generated and stored in the audit trail. You can use fine-grained auditing to selectively audit only certain conditions.</p>
</li>
<li>
<p><span class="bold">Tightly control the ability to perform object auditing.</span> You can accomplish this in the following ways:</p>
<ul>
<li>
<p>A security administrator owns all objects and never grants the <code dir="ltr">AUDIT ANY</code> system privilege to any other user. Alternatively, all schema objects can belong to a schema for which the corresponding user does not have <code dir="ltr">CREATE SESSION</code> privilege.</p>
</li>
<li>
<p>All objects are contained in schemas that do not correspond to real database users (that is, the <code dir="ltr">CREATE SESSION</code> privilege is not granted to the corresponding user). The security administrator is the only user granted the <code dir="ltr">AUDIT ANY</code> system privilege.</p>
</li>
</ul>
<p>In both scenarios, a security administrator controls entirely object auditing.</p>
</li>
</ul>
<p>The<a id="sthref1847"></a> maximum size of the database audit trail tables (<code dir="ltr">AUD$</code> and <code dir="ltr">FGA_LOG$</code>) is determined by the default storage parameters of the <code dir="ltr">SYSTEM</code> tablespace, in which it is stored by default. If you are concerned that a too-large database audit trail will affect the <code dir="ltr">SYSTEM</code> table performance, then consider moving the database audit trail tables to a different tablespace.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
Operating system-specific Oracle Database documentation for more information about managing the operating system audit trail when directing audit records to that location</div>
</div>
<!-- class="sect3" -->
<a id="BCGFADGF"></a>
<div id="DBSEG99725" class="sect3">
<h4 class="sect3">Moving the Database Audit Trail to a Different Tablespace</h4>
<p>By default<a id="sthref1848"></a><a id="sthref1849"></a><a id="sthref1850"></a>, the <code dir="ltr">SYSTEM</code> tablespace stores the database audit trail <code dir="ltr">SYS.AUD$</code> and <code dir="ltr">SYS.FGA_LOG$</code> tables. You can change this default location to another tablespace, such as the <code dir="ltr">SYSAUX</code> tablespace or a user-created tablespace. You may want to move the database audit trail tables to a different tablespace if the <code dir="ltr">SYSTEM</code> tablespace is too busy. Another reason for moving these audit trail tables to a different tablespace is if you plan to purge them by using the <code dir="ltr">DBMS_AUDIT_MGMT</code> PL/SQL package procedures.</p>
<p>Be aware that moving the database audit trail tables to a different tablespace can take a long time, depending on the amount of audit data in the audit tables, so you may want to do this during a time when database activity is slow.</p>
<p>To move the database audit trail from <code dir="ltr">SYSTEM</code> to a different tablespace:</p>
<ol>
<li>
<p>Log in to SQL*Plus as an administrator who has the <code dir="ltr">EXECUTE</code> privilege on the <code dir="ltr">DBMS_AUDIT_MGMT</code> PL/SQL package.</p>
<p>For more information about the <code dir="ltr">DBMS_AUDIT_MGMT</code> PL/SQL package, see <a class="olink ARPLS241" href="../../appdev.112/e40758/d_audit_mgmt.htm#ARPLS241"><span class="italic">Oracle Database PL/SQL Packages and Types Reference</span></a>.</p>
</li>
<li>
<p>Check the tablespace to which you want to move the database audit trail tables.</p>
<p>You may need to optimize and allocate more space to this tablespace, including the <code dir="ltr">SYSAUX</code> auxiliary tablespace. For more information, see <a class="olink PFGRF" href="../../server.112/e41573/toc.htm"><span class="italic">Oracle Database Performance Tuning Guide</span></a>.</p>
</li>
<li>
<p>Run the <code dir="ltr">DBMS_AUDIT_MGMT.SET_AUDIT_TRAIL_LOCATION</code> PL/SQL procedure to specify the name of the destination tablespace.</p>
<p>For example:</p>
<pre dir="ltr">
BEGIN
 DBMS_AUDIT_MGMT.SET_AUDIT_TRAIL_LOCATION(
  AUDIT_TRAIL_TYPE            =&gt; DBMS_AUDIT_MGMT.AUDIT_TRAIL_AUD_STD, 
  AUDIT_TRAIL_LOCATION_VALUE  =&gt; 'AUD_AUX');
END;
</pre>
<p>In this example:</p>
<ul>
<li>
<p><code dir="ltr">AUDIT_TRAIL_TYPE</code>: Refers to the database audit trail type. Enter one of the following values:</p>
<ul>
<li>
<p><code dir="ltr">DBMS_AUDIT_MGMT.AUDIT_TRAIL_AUD_STD</code>: Standard audit trail table, <code dir="ltr">AUD$</code>.</p>
</li>
<li>
<p><code dir="ltr">DBMS_AUDIT_MGMT.AUDIT_TRAIL_FGA_STD</code>: Fine-grained audit trail table, <code dir="ltr">FGA_LOG$</code>.</p>
</li>
<li>
<p><code dir="ltr">DBMS_AUDIT_MGMT.AUDIT_TRAIL_DB_STD</code>: Both standard and fine-grained audit trail tables.</p>
</li>
</ul>
</li>
<li>
<p><code dir="ltr">AUDIT_TRAIL_LOCATION_VALUE</code>: Specifies the destination tablespace. This example specifies a tablespace named <code dir="ltr">AUD_AUX</code>.</p>
</li>
</ul>
</li>
</ol>
</div>
<!-- class="sect3" -->
<a id="BCGHECHE"></a>
<div id="DBSEG456" class="sect3">
<h4 class="sect3">Auditing the Database Audit Trail</h4>
<p>At<a id="sthref1851"></a> times an application must give the <code dir="ltr">SYS.AUD$</code> system table access to regular users (non-<code dir="ltr">SYSDBA</code> users). For example, an audit report generator needs access to <code dir="ltr">AUD$</code> table to generate daily reports on possible violations. Also, many installations have a distinct auditor role to achieve separation of duty.</p>
<p>In this case, be aware that DML statements such as <code dir="ltr">INSERT</code>, <code dir="ltr">UPDATE</code>, <code dir="ltr">MERGE</code>, and <code dir="ltr">DELETE</code> are always audited and recorded in the <code dir="ltr">SYS.AUD$</code> table. You can check these activities by querying the <code dir="ltr">DBA_AUDIT_TRAIL</code> and <code dir="ltr">DBA_COMMON_AUDIT_TRAIL</code> views.</p>
<p>If a user has <code dir="ltr">SELECT</code>, <code dir="ltr">UPDATE</code>, <code dir="ltr">INSERT</code>, and <code dir="ltr">DELETE</code> privileges on <code dir="ltr">SYS.AUD$</code> and executes a <code dir="ltr">SELECT</code> operation, then the audit trail will have a record of that operation. That is, <code dir="ltr">SYS.AUD$</code> will have a row identifying the <code dir="ltr">SELECT</code> action on itself, as for example row 1.</p>
<p>If a user later tries to delete this row from <code dir="ltr">SYS.AUD$</code>, then the <code dir="ltr">DELETE</code> operation succeeds, because the user has the privilege to perform this action. However, this <code dir="ltr">DELETE</code> action on <code dir="ltr">SYS.AUD$</code> is also recorded in the audit trail. Setting up this type of auditing acts as a safety feature, potentially revealing unusual or unauthorized actions.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
<code dir="ltr">DELETE</code>, <code dir="ltr">INSERT</code>, <code dir="ltr">UPDATE</code>, and <code dir="ltr">MERGE</code> operations on the <code dir="ltr">SYS.AUD$</code> and <code dir="ltr">SYS.FGA_LOG$</code> tables are always audited. These audit records are not allowed to be deleted.</div>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="guidelines.htm#CHDCGBFF">"Auditing Sensitive Information"</a></div>
</div>
<!-- class="sect3" -->
<a id="BCGBEBDJ"></a>
<div id="DBSEG457" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Archiving the Database Audit Trail</h4>
<p>You should periodically <a id="sthref1852"></a><a id="sthref1853"></a>archive and then purge the audit trail to prevent it from growing too large. Archiving and purging both frees audit trail space and facilitates the purging of the database audit trail. See <a href="#BCGJFEEE">"Purging Audit Trail Records"</a> for different ways of purging the audit trail records.</p>
<p>You can <a id="sthref1854"></a>create <a id="sthref1855"></a>an archive <a id="sthref1856"></a>of the database audit trail by using one of the following methods:</p>
<ul>
<li>
<p><span class="bold">Oracle Audit Vault.</span> You install Oracle Audit Vault separately from Oracle Database. For more information, see <a class="olink AVADM460" href="http://www.oracle.com/pls/topic/lookup?ctx=db112&amp;id=AVADM460"><span class="italic">Oracle Audit Vault Administrator's Guide</span></a>.</p>
</li>
<li>
<p><span class="bold">Oracle Data Warehouse.</span> Oracle Data Warehouse is automatically installed with Oracle Database. For more information, see <a class="olink WBINS" href="../../owb.112/e17130/toc.htm"><span class="italic">Oracle Warehouse Builder Installation and Administration Guide</span></a>.</p>
</li>
</ul>
<p>After you complete the archive, you can purge the database audit trail contents. See <a href="#BCGJFEEE">"Purging Audit Trail Records"</a> for more information.</p>
<p>To <a id="sthref1857"></a><a id="sthref1858"></a>archive <a id="sthref1859"></a><a id="sthref1860"></a><a id="sthref1861"></a><a id="sthref1862"></a>standard and fine-grained audit records, you can copy the relevant records to a normal database table. For example:</p>
<pre dir="ltr">
INSERT INTO <span class="italic">table</span> SELECT ... FROM SYS.AUD$ ...;
INSERT INTO <span class="italic">table</span> SELECT ... FROM SYS.FGA_LOG$ ...; 
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
The following sections for information about different ways of purging the database audit trail
<ul>
<li>
<p><a href="#BCGGIAGD">"Scheduling an Automatic Purge Job for the Audit Trail"</a></p>
</li>
<li>
<p><a href="#BCGBJEIE">"Manually Purging the Audit Trail"</a></p>
</li>
<li>
<p><a href="#BCGEACGE">"Purging a Subset of Records from the Database Audit Trail"</a></p>
</li>
</ul>
</div>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="CEGBDFCF"></a>
<div id="DBSEG0624" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Managing the Operating System Audit Trail</h3>
<p>This section contains: <a id="ABC47933719"></a></p>
<ul>
<li>
<p><a href="#BCGEJBBH">If the Operating System Audit Trail Becomes Full</a></p>
</li>
<li>
<p><a href="#BCGDHJFA">Setting the Size of the Operating System Audit Trail</a></p>
</li>
<li>
<p><a href="#BCGGIGDG">Setting the Age of the Operating System Audit Trail</a></p>
</li>
<li>
<p><a href="#BCGJAADD">Archiving the Operating System Audit Trail</a></p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="#BCGJFEEE">"Purging Audit Trail Records"</a></p>
</li>
<li>
<p><a href="#CEGBIIJD">"Using the Syslog Audit Trail on UNIX Systems"</a></p>
</li>
<li>
<p><a href="#CEGJADDC">"Activities That Are Always Audited for All Platforms"</a></p>
</li>
</ul>
</div>
<a id="BCGEJBBH"></a>
<div id="DBSEG458" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">If the Operating System Audit Trail Becomes Full</h4>
<p>Be <a id="sthref1863"></a>aware that an operating system audit trail or file system, including the Windows Event Log, can become full, and therefore, unable to accept new records, including audit records from Oracle Database. In this case, Oracle Database cancels and rolls back the operation being performed, including operations that normally are always audited. (See <a href="#CEGJADDC">"Activities That Are Always Audited for All Platforms"</a>.) If the operating system audit trail becomes full, then set the <code dir="ltr">AUDIT_TRAIL</code> parameter to use database audit trail (such as <code dir="ltr">DB</code> or <code dir="ltr">DB, EXTENDED</code>). This prevents the audited actions from completing if their audit records cannot be stored. You should periodically archive and purge the operating system audit file to prevent these types of failures.</p>
<p>If you plan to use operating system auditing, then ensure that the operating system audit trail or the file system does not fill completely. Most operating systems provide administrators with sufficient information and warning to ensure this does not occur. If you configure auditing to use the database audit trail, you can prevent this potential loss of audit information. Oracle Database prevents audited events from occurring if the audit trail is unable to accept the database audit record for the statement.</p>
<p>Periodically archive and then purge the operating system audit trail. See <a href="#BCGJAADD">"Archiving the Operating System Audit Trail"</a> and <a href="#BCGJFEEE">"Purging Audit Trail Records"</a>for more information. <a id="sthref1864"></a></p>
</div>
<!-- class="sect3" -->
<a id="BCGDHJFA"></a>
<div id="DBSEG99736" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Setting the Size of the Operating System Audit Trail</h4>
<p>To control the<a id="sthref1865"></a> size of the operating system audit trail, set the <code dir="ltr">DBMS_AUDIT_MGMT.OS_FILE_MAX_SIZE</code> property by using the <code dir="ltr">DBMS_AUDIT_MGMT.SET_AUDIT_TRAIL_PROPERTY</code> PL/SQL procedure. Remember that you must have the <code dir="ltr">EXECUTE</code> privilege for the <code dir="ltr">DBMS_AUDIT_MGMT</code> PL/SQL package before you can use it. When the operating system file meets the size limitation you set, Oracle Database stops adding records to the current file and then creates a new operating system file for the subsequent records. For more information about the <code dir="ltr">DBMS_AUDIT_MGMT</code> PL/SQL package, see <a class="olink ARPLS241" href="../../appdev.112/e40758/d_audit_mgmt.htm#ARPLS241"><span class="italic">Oracle Database PL/SQL Packages and Types Reference</span></a>.</p>
<p>If you set both the <code dir="ltr">DBMS_AUDIT_MGMT.OS_FILE_MAX_SIZE</code> and the <code dir="ltr">DBMS_AUDIT_MGMT.OS_FILE_MAX_AGE</code> (described in <a href="#BCGGIGDG">"Setting the Age of the Operating System Audit Trail"</a>) properties, then Oracle Database performs the action based the property value limit that is met first.</p>
<p>For example:</p>
<pre dir="ltr">
BEGIN
  DBMS_AUDIT_MGMT.SET_AUDIT_TRAIL_PROPERTY(
   AUDIT_TRAIL_TYPE            =&gt;  DBMS_AUDIT_MGMT.AUDIT_TRAIL_OS,
   AUDIT_TRAIL_PROPERTY        =&gt;  DBMS_AUDIT_MGMT.OS_FILE_MAX_SIZE,
   AUDIT_TRAIL_PROPERTY_VALUE  =&gt;  10240);
END;
/
</pre>
<p>In this example:</p>
<ul>
<li>
<p><code dir="ltr">AUDIT_TRAIL_TYPE</code>: Specifies the operating system audit trail. Enter one of the following values:</p>
<ul>
<li>
<p><code dir="ltr">DBMS_AUDIT_MGMT.AUDIT_TRAIL_OS</code>: Operating system audit trail files with the <code dir="ltr">.aud</code> extension. (This setting does not apply to Windows Event Log entries. Nor does it apply to syslog audit records, when the <code dir="ltr">AUDIT_SYSLOG_LEVEL</code> initialization parameter is set.)</p>
</li>
<li>
<p><code dir="ltr">DBMS_AUDIT_MGMT.AUDIT_TRAIL_XML</code>: XML audit trail files.</p>
</li>
<li>
<p><code dir="ltr">DBMS_AUDIT_MGMT.AUDIT_TRAIL_FILES</code>: Both operating system and XML audit trail files.</p>
</li>
</ul>
</li>
<li>
<p><code dir="ltr">AUDIT_TRAIL_PROPERTY</code>: Specifies the <code dir="ltr">DBMS_AUDIT_MGMT.OS_FILE_MAX_SIZE</code> property, which sets the maximum size. To find the status of the current property settings, query the <code dir="ltr">PARAMETER_NAME</code> and <code dir="ltr">PARAMETER_VALUE</code> columns of the <code dir="ltr">DBA_AUDIT_MGMT_CONFIG_PARAMS</code> data dictionary view.</p>
</li>
<li>
<p><code dir="ltr">AUDIT_TRAIL_PROPERTY_VALUE</code>: Sets the maximum size to 10240 kilobytes, that is, 10 megabytes. The default setting is 10,000 kilobytes (approximately 10 megabytes). Do not exceed 2 gigabytes.</p>
</li>
</ul>
<p class="subhead2"><a id="DBSEG459"></a>Clearing the DBMS_AUDIT_MGMT.OS_FILE_MAX_SIZE Setting</p>
<p>To clear the maximum file size setting, use the <code dir="ltr">DBMS_AUDIT_MGMT.CLEAR_AUDIT_TRAIL_PROPERTY</code> procedure.</p>
<p>For example:</p>
<pre dir="ltr">
BEGIN
  DBMS_AUDIT_MGMT.CLEAR_AUDIT_TRAIL_PROPERTY(
   AUDIT_TRAIL_TYPE        =&gt;  DBMS_AUDIT_MGMT.AUDIT_TRAIL_OS,
   AUDIT_TRAIL_PROPERTY    =&gt;  DBMS_AUDIT_MGMT.OS_FILE_MAX_SIZE,
   USE_DEFAULT_VALUES      =&gt;  TRUE );
END;
/
</pre>
<p>In this example:</p>
<ul>
<li>
<p><code dir="ltr">AUDIT_TRAIL_TYPE</code>: Specifies the operating system audit trail. Enter one of the <code dir="ltr">AUDIT_TRAIL_TYPE</code> values described in <a href="#BCGDHJFA">"Setting the Size of the Operating System Audit Trail"</a>.</p>
</li>
<li>
<p><code dir="ltr">AUDIT_TRAIL_PROPERTY</code>: Specifies the <code dir="ltr">DBMS_AUDIT_MGMT.OS_FILE_MAX_SIZE</code> property. You can query the <code dir="ltr">DBA_AUDIT_MGMT_CONFIG_PARAMS</code> data dictionary view to find the current status of this property.</p>
</li>
<li>
<p><code dir="ltr">USE_DEFAULT_VALUES</code>: Enter one of the following values:</p>
<ul>
<li>
<p><code dir="ltr">TRUE</code>: Clears the current value and uses the default value, 10,000 kilobytes, instead.</p>
</li>
<li>
<p><code dir="ltr">FALSE</code>: Oracle Database does not use a default maximum size for the operating system or XML file growth. The files will continue to grow without limitation unless you configure the <code dir="ltr">DBMS_AUDIT_MGMT.OS_FILE_MAX_AGE</code> property. The default setting is <code dir="ltr">FALSE</code>.</p>
</li>
</ul>
</li>
</ul>
</div>
<!-- class="sect3" -->
<a id="BCGGIGDG"></a>
<div id="DBSEG99737" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Setting the Age of the Operating System Audit Trail</h4>
<p>To control the age of the <a id="sthref1866"></a>operating system audit trail, use the <code dir="ltr">DBMS_AUDIT_MGMT.SET_AUDIT_TRAIL_PROPERTY</code> PL/SQL procedure. Remember that you must have the <code dir="ltr">EXECUTE</code> privilege for the <code dir="ltr">DBMS_AUDIT_MGMT</code> PL/SQL package before you can use it. When the operating system file meets the age limitation you set, Oracle Database stops adding records to the current file and then creates a new operating system file for the subsequent records. For more information about the <code dir="ltr">DBMS_AUDIT_MGMT</code> PL/SQL package, see <a class="olink ARPLS241" href="../../appdev.112/e40758/d_audit_mgmt.htm#ARPLS241"><span class="italic">Oracle Database PL/SQL Packages and Types Reference</span></a>.</p>
<p>If you set both the <code dir="ltr">DBMS_AUDIT_MGMT.OS_FILE_MAX_AGE</code> and the <code dir="ltr">DBMS_AUDIT_MGMT.OS_FILE_MAX_SIZE</code> (described in <a href="#BCGDHJFA">"Setting the Size of the Operating System Audit Trail"</a>) properties, then Oracle Database controls the growth of the Audit file based on the property value limit that is met first.</p>
<p>For example:</p>
<pre dir="ltr">
BEGIN
  DBMS_AUDIT_MGMT.SET_AUDIT_TRAIL_PROPERTY(
   AUDIT_TRAIL_TYPE            =&gt;  DBMS_AUDIT_MGMT.AUDIT_TRAIL_OS,
   AUDIT_TRAIL_PROPERTY        =&gt;  DBMS_AUDIT_MGMT.OS_FILE_MAX_AGE,
   AUDIT_TRAIL_PROPERTY_VALUE  =&gt;  10 );
END;
/
</pre>
<p>In this example:</p>
<ul>
<li>
<p><code dir="ltr">AUDIT_TRAIL_TYPE</code>: Specifies the operating system audit trail. Enter one of the following values:</p>
<ul>
<li>
<p><code dir="ltr">DBMS_AUDIT_MGMT.AUDIT_TRAIL_OS</code>: Operating system audit trail files with the <code dir="ltr">.aud</code> extension. (This setting does not apply to Windows Event Log entries. Nor does it apply to syslog audit records, when the <code dir="ltr">AUDIT_SYSLOG_LEVEL</code> initialization parameter is set.)</p>
</li>
<li>
<p><code dir="ltr">DBMS_AUDIT_MGMT.AUDIT_TRAIL_XML</code>: XML audit trail files.</p>
</li>
<li>
<p><code dir="ltr">DBMS_AUDIT_MGMT.AUDIT_TRAIL_FILES</code>: Both operating system and XML audit trail files.</p>
</li>
</ul>
</li>
<li>
<p><code dir="ltr">AUDIT_TRAIL_PROPERTY</code>: Specifies the <code dir="ltr">DBMS_AUDIT_MGMT.OS_FILE_MAX_AGE</code> property to set the maximum age. To find the status of the current property setting, query the <code dir="ltr">DBA_AUDIT_MGMT_CONFIG_PARAMS</code> data dictionary view.</p>
</li>
<li>
<p><code dir="ltr">AUDIT_TRAIL_PROPERTY_VALUE</code>: Sets the maximum age to 10 days. Enter a value between 1 and 495. The default age is 5 days.</p>
</li>
</ul>
<p class="subhead2"><a id="DBSEG460"></a>Clearing the DBMS_AUDIT_MGMT.OS_FILE_MAX_AGE Setting</p>
<p>To clear the maximum file age setting, use the <code dir="ltr">DBMS_AUDIT_MGMT.CLEAR_AUDIT_TRAIL_PROPERTY</code> procedure.</p>
<p>For example:</p>
<pre dir="ltr">
BEGIN
  DBMS_AUDIT_MGMT.CLEAR_AUDIT_TRAIL_PROPERTY(
   AUDIT_TRAIL_TYPE        =&gt;  DBMS_AUDIT_MGMT.AUDIT_TRAIL_OS,
   AUDIT_TRAIL_PROPERTY    =&gt;  DBMS_AUDIT_MGMT.OS_FILE_MAX_AGE,
   USE_DEFAULT_VALUES      =&gt;  TRUE );
END;
/
</pre>
<p>In this example:</p>
<ul>
<li>
<p><code dir="ltr">AUDIT_TRAIL_TYPE</code>: Specifies operating system audit trail. Enter one of the <code dir="ltr">AUDIT_TRAIL_TYPE</code> values listed in <a href="#BCGGIGDG">"Setting the Age of the Operating System Audit Trail"</a>.</p>
</li>
<li>
<p><code dir="ltr">AUDIT_TRAIL_PROPERTY</code>: Specifies the <code dir="ltr">DBMS_AUDIT_MGMT.OS_FILE_MAX_AGE</code> property. Query the <code dir="ltr">PARAMETER_NAME</code> and <code dir="ltr">PARAMETER_VALUE</code> columns of the <code dir="ltr">DBA_AUDIT_MGMT_CONFIG_PARAMS</code> data dictionary view to find the current status of this property.</p>
</li>
<li>
<p><code dir="ltr">USE_DEFAULT_VALUES</code>: Specify one of the following values:</p>
<ul>
<li>
<p><code dir="ltr">TRUE</code>: Clears the current value and uses the default value, 5 days, instead.</p>
</li>
<li>
<p><code dir="ltr">FALSE</code>: Oracle Database does not use a default maximum age for the operating system or XML file growth. In this case, the files will continue to age without limitation unless you configure the <code dir="ltr">DBMS_AUDIT_MGMT.OS_FILE_MAX_SIZE</code> property. The default setting is <code dir="ltr">FALSE</code>.</p>
</li>
</ul>
</li>
</ul>
</div>
<!-- class="sect3" -->
<a id="BCGJAADD"></a>
<div id="DBSEG461" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Archiving the Operating System Audit Trail</h4>
<p>You should periodically archive the <a id="sthref1867"></a><a id="sthref1868"></a>operating system audit trail. Use your platform-specific operating system tools to create an archive of the operating system audit files.</p>
<p>Use the following methods to archive the operating system audit files:</p>
<ul>
<li>
<p><span class="bold">Use Oracle Audit Vault.</span> You install Oracle Audit Vault separately from Oracle Database. For more information, see <a class="olink AVADM460" href="http://www.oracle.com/pls/topic/lookup?ctx=db112&amp;id=AVADM460"><span class="italic">Oracle Audit Vault Administrator's Guide</span></a>.</p>
</li>
<li>
<p><span class="bold">Create tape or disc backups.</span> You can create a compressed file of the audit files, and then store it on tapes or discs. Consult your operating system documentation for more information.</p>
</li>
</ul>
<p>Afterwards, you should purge <a id="sthref1869"></a>(delete) the operating system audit records both to free audit trail space and to facilitate audit trail management. See <a href="#BCGJFEEE">"Purging Audit Trail Records"</a> for different ways that you can use to purge the operating system audit trail records.</p>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="BCGJFEEE"></a>
<div id="DBSEG90934" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Purging Audit Trail Records</h2>
<p>This section contains:</p>
<ul>
<li>
<p><a href="#BCGJJGII">About Purging Audit Trail Records</a></p>
</li>
<li>
<p><a href="#BCGFHGGI">Selecting an Audit Trail Purge Method</a></p>
</li>
<li>
<p><a href="#BCGGIAGD">Scheduling an Automatic Purge Job for the Audit Trail</a></p>
</li>
<li>
<p><a href="#BCGBJEIE">Manually Purging the Audit Trail</a></p>
</li>
<li>
<p><a href="#BCGEACGE">Purging a Subset of Records from the Database Audit Trail</a></p>
</li>
<li>
<p><a href="#BCGCDDBJ">Other Audit Trail Purge Operations</a></p>
</li>
<li>
<p><a href="#BCGDAGAG">Example: Directly Calling a Database Audit Trail Purge Operation</a></p>
</li>
</ul>
<a id="BCGJJGII"></a>
<div id="DBSEG462" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">About Purging Audit Trail Records</h3>
<p>You <a id="sthref1870"></a>should periodically archive and then delete (purge) audit trail records, because the audit trail cannot accept new records if it grows too large. This section describes a variety of ways that you can use to purge both the database and operating system audit trail records. You can purge a subset of database audit trail records. For both database and operating system audit trail types, you can manually purge the records or create a purge job that performs at a specified time interval. In that case, the purge operation either purges the audit trail records that were created before the archive timestamp, or it purges all audit trail records.</p>
<p>To perform the audit trail purge tasks, in most cases, you use the <code dir="ltr">DBMS_AUDIT_MGMT</code> PL/SQL package. You must have the <code dir="ltr">EXECUTE</code> privilege for <code dir="ltr">DBMS_AUDIT_MGMT</code> before you can use it.</p>
<p>If you have Oracle Audit Vault installed, the audit trail purge process differs from the procedures described in this manual. For example, Oracle Audit Vault archives the audit trail for you. See <a class="olink AVADM" href="http://www.oracle.com/pls/topic/lookup?ctx=db112&amp;id=AVADM"><span class="italic">Oracle Audit Vault Administrator's Guide</span></a>.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
Oracle Database audits all deletions from the audit trail, without exception. See <a href="#BCGHECHE">"Auditing the Database Audit Trail"</a> and <a href="#BCGEHHCA">"Auditing SYS Administrative Users"</a>.</div>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a class="olink ARPLS241" href="../../appdev.112/e40758/d_audit_mgmt.htm#ARPLS241"><span class="italic">Oracle Database PL/SQL Packages and Types Reference</span></a> for more information about the <code dir="ltr">DBMS_AUDIT_MGMT</code> PL/SQL package</p>
</li>
<li>
<p><a class="olink REFRN" href="../../server.112/e40402/toc.htm"><span class="italic">Oracle Database Reference</span></a> for detailed information about the <code dir="ltr">DBA_AUDIT_MGMT</code>-related views</p>
</li>
</ul>
</div>
</div>
<!-- class="sect2" -->
<a id="BCGFHGGI"></a>
<div id="DBSEG463" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Selecting an Audit Trail Purge Method</h3>
<p><a href="#BCGIGJEC">Table 9-6</a> provides<a id="sthref1871"></a><a id="sthref1872"></a> a roadmap for selecting an audit trail purge method.</p>
<div id="DBSEG464" class="tblhruleformalwide">
<p class="titleintable"><a id="sthref1873"></a><a id="BCGIGJEC"></a>Table 9-6 Selecting an Audit Trail Purge Method</p>
<table class="cellalignment2250" title="Selecting an Audit Trail Purge Method" summary="Selecting a Purge Operation" dir="ltr">
<thead>
<tr class="cellalignment2244">
<th class="cellalignment2251" id="r1c1-t42">What Do You Want to Purge?</th>
<th class="cellalignment2251" id="r1c2-t42">About This Type of Purge Method</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r2c1-t42" headers="r1c1-t42">
<p>All audit records, or audit records created before a specified timestamp, on a regularly scheduled basis</p>
</td>
<td class="cellalignment2252" headers="r2c1-t42 r1c2-t42">
<p>You can schedule a purge operation to occur an specific times. For example, you can schedule it for every Saturday at 2 a.m.</p>
<p><span class="bold">General steps:</span></p>
<ol>
<li>
<p>If necessary, tune online and archive redo log sizes to accommodate the additional records generated during the audit table purge process.</p>
</li>
<li>
<p>Plan a timestamp and archive strategy.</p>
</li>
<li>
<p>Initialize the audit trail cleanup operation.</p>
</li>
<li>
<p>Set an archive timestamp for the audit records.</p>
</li>
<li>
<p>Create and schedule the purge job.</p>
</li>
<li>
<p>Optionally, configure the audit trail to be deleted in batches.</p>
</li>
</ol>
<p>See <a href="#BCGGIAGD">"Scheduling an Automatic Purge Job for the Audit Trail"</a> for more information.</p>
</td>
</tr>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r3c1-t42" headers="r1c1-t42">
<p>All audit records, or records that were created before a specified timestamp, when you want</p>
</td>
<td class="cellalignment2252" headers="r3c1-t42 r1c2-t42">
<p>You can manually purge the audit records right away in a one-time operation, rather than creating a purge schedule.</p>
<p><span class="bold">General steps:</span></p>
<ol>
<li>
<p>If necessary, tune online and archive redo log sizes to accommodate the additional records generated during the audit table purge process.</p>
</li>
<li>
<p>Plan a timestamp and archive strategy.</p>
</li>
<li>
<p>Initialize the audit trail cleanup operation.</p>
</li>
<li>
<p>Set an archive timestamp for the audit records.</p>
</li>
<li>
<p>Optionally, configure the audit trail to be deleted in batches.</p>
</li>
<li>
<p>Run the purge operation.</p>
</li>
</ol>
<p>See <a href="#BCGBJEIE">"Manually Purging the Audit Trail"</a> for more information.</p>
</td>
</tr>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r4c1-t42" headers="r1c1-t42">
<p>Just a subset of the audit records from the database audit trail</p>
</td>
<td class="cellalignment2252" headers="r4c1-t42 r1c2-t42">
<p>You can manually purge just a subset of the audit records. For example, you can delete all audit records that were created between May 14, 2010 and June 14, 2010.</p>
<p><span class="bold">General steps:</span></p>
<ol>
<li>
<p>If necessary, tune online and archive redo log sizes to accommodate the additional records generated during the audit table purge process.</p>
</li>
<li>
<p>Archive the audit records you want to purge.</p>
</li>
<li>
<p>As a user with administrative privileges, delete from the <code dir="ltr">SYS.AUD$</code> table.</p>
</li>
</ol>
<p>See <a href="#BCGEACGE">"Purging a Subset of Records from the Database Audit Trail"</a> for more information.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblhruleformalwide" --></div>
<!-- class="sect2" -->
<a id="BCGGIAGD"></a>
<div id="DBSEG465" class="sect2">
<h3 class="sect2">Scheduling an Automatic Purge Job for the Audit Trail</h3>
<p>You <a id="sthref1874"></a>can purge the entire audit trail, or only a portion of the audit trail that was created before a timestamp. For the database audit trail, the individual audit records created before the timestamp can be purged. For the operating system audit trail, you purge audit files that were created before the timestamp.</p>
<p>Be aware that purging the audit trail, particularly a large one, can take a while to complete. Consider scheduling the purge job so that it runs during a time when the database is not busy.</p>
<p>You can create multiple purge jobs for different audit trail types, so long as they do not conflict. For example, you can create a purge job for the standard audit trail table and then the fine-grained audit trail table. However, you cannot then create a purge job for both or all types, that is, by using the <code dir="ltr">DBMS_AUDIT_MGMT.AUDIT_TRAIL_DB_STD</code> or <code dir="ltr">DBMS_AUDIT_MGMT.AUDIT_TRAIL_ALL</code> property.</p>
<p>To create and schedule an automatic purge job:</p>
<ul>
<li>
<p><a href="#BCGBCIHA">Step 1: If Necessary, Tune Online and Archive Redo Log Sizes</a></p>
</li>
<li>
<p><a href="#CEGFIHGB">Step 2: Plan a Timestamp and Archive Strategy</a></p>
</li>
<li>
<p><a href="#CEGDIDHD">Step 3: Initialize the Audit Trail Cleanup Operation</a></p>
</li>
<li>
<p><a href="#BCGEJCFG">Step 4: Optionally, Set an Archive Timestamp for Audit Records</a></p>
</li>
<li>
<p><a href="#CEGDIJDA">Step 5: Create and Schedule the Purge Job</a></p>
</li>
<li>
<p><a href="#BCGHDFAF">Step 6: Optionally, Configure the Audit Trail Records to be Deleted in Batches</a></p>
</li>
</ul>
<a id="BCGBCIHA"></a>
<div id="DBSEG466" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Step 1: If Necessary, Tune Online and Archive Redo Log Sizes</h4>
<p>The purge process may generate additional redo logs. Before you run this process, you may need to tune online and archive redo log sizes to accommodate the additional records generated during the audit table purge process. For more information about tuning log files, see <a class="olink PFGRF" href="../../server.112/e41573/toc.htm"><span class="italic">Oracle Database Performance Tuning Guide</span></a> and <a class="olink ADMIN" href="../../server.112/e25494/toc.htm"><span class="italic">Oracle Database Administrator's Guide</span></a>.</p>
</div>
<!-- class="sect3" -->
<a id="CEGFIHGB"></a>
<div id="DBSEG467" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Step 2: Plan a Timestamp and Archive Strategy</h4>
<p>You must record the timestamp of the database and operating system audit records before you can archive them. You can check the timestamp date by querying the <code dir="ltr">DBA_AUDIT_MGMT_LAST_ARCH_TS</code> data dictionary view. Later on, when the purge takes place, Oracle Database purges only the audit trail records that were created before the date of this timestamp. See <a href="#BCGEJCFG">"Step 4: Optionally, Set an Archive Timestamp for Audit Records"</a> for more information.</p>
<p>After you have timestamped the records, you are ready to archive them. See the following sections for more information:</p>
<ul>
<li>
<p><a href="#BCGBEBDJ">"Archiving the Database Audit Trail"</a></p>
</li>
<li>
<p><a href="#BCGJAADD">"Archiving the Operating System Audit Trail"</a></p>
</li>
</ul>
</div>
<!-- class="sect3" -->
<a id="CEGDIDHD"></a>
<div id="DBSEG468" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Step 3: Initialize the Audit Trail Cleanup Operation</h4>
<p>Before you can <a id="sthref1875"></a>purge the audit trail by using the <code dir="ltr">DBMS_AUDIT_MGMT.CLEAN_AUDIT_TRAIL</code> PL/SQL procedure, you must initialize the audit trail for the cleanup operation. For the database audit trail, if you have not moved the database audit trail tables (<code dir="ltr">SYS.AUD$</code> and <code dir="ltr">SYS.FGA_LOG$</code>) from the <code dir="ltr">SYSTEM</code> tablespace to another tablespace, this process moves these tables to the <code dir="ltr">SYSAUX</code> tablespace or to the tablespace that you specified in <a href="#BCGFADGF">"Moving the Database Audit Trail to a Different Tablespace"</a>. Be aware that moving these tables takes a while, so you may want to schedule the initialization process during time when the database is not busy.</p>
<p>To initialize the audit trail cleanup operation:</p>
<ol>
<li>
<p>Log in to SQL*Plus as an administrative user who has the <code dir="ltr">EXECUTE</code> privilege on the <code dir="ltr">DBMS_AUDIT_MGMT</code> PL/SQL package.</p>
</li>
<li>
<p>If you have not done so already, initialize the audit trail cleanup operation by running the <code dir="ltr">DBMS_AUDIT_MGMT.INIT_CLEANUP</code> procedure. (You only need to perform this step once.</p>
<p>You can check if the audit trail has been initialized for cleanup by running the <code dir="ltr">DBMS_AUDIT_MGMT.IS_CLEANUP_INITIALIZED</code> function. See <a href="#BCGEAHGA">"Verifying That the Audit Trail Is Initialized for Cleanup"</a>.)</p>
<p>For example:</p>
<pre dir="ltr">
BEGIN
 DBMS_AUDIT_MGMT.INIT_CLEANUP(
  AUDIT_TRAIL_TYPE            =&gt; DBMS_AUDIT_MGMT.AUDIT_TRAIL_AUD_STD,
  DEFAULT_CLEANUP_INTERVAL    =&gt; 12 );
END;
/
</pre>
<p>In this specification:</p>
<ul>
<li>
<p><code dir="ltr">AUDIT_TRAIL_TYPE</code>: Enter one of the following values:</p>
<ul>
<li>
<p><code dir="ltr">DBMS_AUDIT_MGMT.AUDIT_TRAIL_AUD_STD</code>: Standard audit trail table, <code dir="ltr">AUD$</code>.</p>
</li>
<li>
<p><code dir="ltr">DBMS_AUDIT_MGMT.AUDIT_TRAIL_FGA_STD</code>: Fine-grained audit trail table, <code dir="ltr">FGA_LOG$</code>.</p>
</li>
<li>
<p><code dir="ltr">DBMS_AUDIT_MGMT.AUDIT_TRAIL_DB_STD</code>: Both standard and fine-grained audit trail tables.</p>
</li>
<li>
<p><code dir="ltr">DBMS_AUDIT_MGMT.AUDIT_TRAIL_OS</code>: Operating system audit trail files with the <code dir="ltr">.aud</code> extension. (This setting does not apply to Windows Event Log entries.)</p>
</li>
<li>
<p><code dir="ltr">DBMS_AUDIT_MGMT.AUDIT_TRAIL_XML</code>: XML Operating system audit trail files.</p>
</li>
<li>
<p><code dir="ltr">DBMS_AUDIT_MGMT.AUDIT_TRAIL_FILES</code>: Both operating system and XML audit trail files.</p>
</li>
<li>
<p><code dir="ltr">DBMS_AUDIT_MGMT.AUDIT_TRAIL_ALL</code>: All audit trail records, that is, both database audit trail and operating system audit trail types.</p>
</li>
</ul>
</li>
<li>
<p><code dir="ltr">DEFAULT_CLEANUP_INTERVAL</code>: Specify the desired default hourly purge interval (for example, <code dir="ltr">12</code> for every 12 hours). The <code dir="ltr">DBMS_AUDIT_MGMT</code> procedures use this value to determine how to purge audit records. The timing begins when you run the <code dir="ltr">DBMS_AUDIT_MGMT.INIT_CLEANUP</code> procedure. To update this value later, set the <code dir="ltr">DBMS_AUDIT_MGMT.CLEAN_UP_INTERVAL</code> property of the <code dir="ltr">DBMS_AUDIT_MGMT.SET_AUDIT_TRAIL_PROPERTY</code> procedure.</p>
<p>The <code dir="ltr">DEFAULT_CLEANUP_INTERVAL</code> setting must indicate the frequency in which <code dir="ltr">DBMS_AUDIT_MGMT.CLEAN_AUDIT_TRAIL</code> is called. If you are uncertain about the frequency, set it to an approximate value. You can change this value later on by using the <code dir="ltr">DBMS_AUDIT_MGMT.SET_AUDIT_TRAIL_PROPERTY</code> procedure.</p>
</li>
</ul>
</li>
</ol>
</div>
<!-- class="sect3" -->
<a id="BCGEJCFG"></a>
<div id="DBSEG469" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Step 4: Optionally, Set an Archive Timestamp for Audit Records</h4>
<p>If you want to delete all of the audit trail, you can bypass this step.</p>
<p>You can set a timestamp <a id="sthref1876"></a><a id="sthref1877"></a>when <a id="sthref1878"></a><a id="sthref1879"></a>the last audit record was archived. Setting an archive timestamp provides a hint to the cleanup infrastructure that the cleanup operation will be invoked every 6 hours.</p>
<p>For the database audit trail, you must set the timestamp after you have initialized the audit trail cleanup operation. To find the last archive timestamps for the audit trail, you can query the <code dir="ltr">DBA_AUDIT_MGMT_LAST_ARCH_TS</code> data dictionary view. After you set the timestamp, all audit records in the audit trail that indicate a time earlier than that timestamp are purged when you run the <code dir="ltr">DBMS_AUDIT_MGMT.CLEAN_AUDIT_TRAIL</code> PL/SQL procedure. If you want to clear the archive timestamp setting, see <a href="#BCGBAJAH">"Clearing the Archive Timestamp Setting"</a>.</p>
<p>For the operating system audit trail, remember that you cannot delete individual audit records in the operating system (including XML) audit files. Instead, Oracle Database removes the entire file that contains the timestamped records.</p>
<p>If you are using <a id="sthref1880"></a>Oracle Real Application Clusters (Oracle RAC), then use Network Time Protocol (NTP) to synchronize the time on each computer where you have installed an Oracle Database instance. For example, suppose you set the time for one Oracle RAC instance node at 11:00:00 a.m. and then set the next Oracle RAC instance node at 11:00:05. As a result, the two nodes have inconsistent times. You can use Network Time Protocol (NTP) to synchronize the times for these Oracle RAC instance nodes.</p>
<p>To set the timestamp, use the <code dir="ltr">DBMS_AUDIT_MGMT.SET_LAST_ARCHIVE_TIMESTAMP</code> PL/SQL procedure.</p>
<p>For example:</p>
<pre dir="ltr">
BEGIN
  DBMS_AUDIT_MGMT.SET_LAST_ARCHIVE_TIMESTAMP(
   AUDIT_TRAIL_TYPE     =&gt;  DBMS_AUDIT_MGMT.AUDIT_TRAIL_AUD_STD,
   LAST_ARCHIVE_TIME    =&gt;  '2009-05-28 06:30:00.00'   
   RAC_INSTANCE_NUMBER  =&gt;  0 );
END;
/
</pre>
<p>In this example:</p>
<ul>
<li>
<p><code dir="ltr">AUDIT_TRAIL_TYPE</code>: Enter one of the following settings:</p>
<ul>
<li>
<p><code dir="ltr">DBMS_AUDIT_MGMT.AUDIT_TRAIL_AUD_STD</code>: Specified the standard audit trail table, <code dir="ltr">AUD$</code>.</p>
</li>
<li>
<p><code dir="ltr">DBMS_AUDIT_MGMT.AUDIT_TRAIL_FGA_STD</code>: Specifies the fine-grained audit trail table, <code dir="ltr">FGA_LOG$</code>.</p>
</li>
<li>
<p><code dir="ltr">DBMS_AUDIT_MGMT.AUDIT_TRAIL_OS</code>: Operating system audit trail files with the <code dir="ltr">.aud</code> extension. (This setting does not apply to Windows Event Log entries.)</p>
</li>
<li>
<p><code dir="ltr">DBMS_AUDIT_MGMT.AUDIT_TRAIL_XML</code>: Specifies XML audit trail files.</p>
</li>
</ul>
</li>
<li>
<p><code dir="ltr">LAST_ARCHIVE_TIME</code>: Enter the timestamp in <code dir="ltr">YYYY-MM-DD HH:MI:SS.FF</code> UTC (Coordinated Universal Time) format for <code dir="ltr">AUDIT_TRAIL_DB_AUD</code> and <code dir="ltr">AUDIT_TRAIL_FGA_STD</code> (standard and fine-grained audit trails), and in the Local Time Zone for <code dir="ltr">AUDIT_TRAIL_OS</code> and <code dir="ltr">AUDIT_TRAIL_XML</code> (operating system and XML audit trails).</p>
</li>
<li>
<p><code dir="ltr">RAC_INSTANCE_NUMBER</code>: Specifies the instance number for an Oracle RAC installation. If you specified the <code dir="ltr">DBMS_AUDIT_MGMT.AUDIT_TRAIL_AUD_STD</code> or <code dir="ltr">DBMS_AUDIT_MGMT.AUDIT_TRAIL_FGA_STD</code> audit trail types, you can omit the <code dir="ltr">RAC_INSTANCE_NUMBER</code> argument. This is because there is only one <code dir="ltr">AUD$</code> and <code dir="ltr">FGA_LOG$</code> table, even for an Oracle RAC installation. The default is <code dir="ltr">0</code>, which is used for single-instance database installations.</p>
</li>
</ul>
<p>Typically, after you set the timestamp, you can use the <code dir="ltr">DBMS_AUDIT_MGMT.CLEAN_AUDIT_TRAIL</code> PL/SQL procedure to remove the audit records that were created before the timestamp date.</p>
</div>
<!-- class="sect3" -->
<a id="CEGDIJDA"></a>
<div id="DBSEG470" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Step 5: Create and Schedule the Purge Job</h4>
<p>Create and schedule the <a id="sthref1881"></a><a id="sthref1882"></a>purge job by running the <code dir="ltr">DBMS_AUDIT_MGMT.CREATE_PURGE_JOB</code> PL/SQL procedure.</p>
<p>For example:</p>
<pre dir="ltr">
BEGIN
  DBMS_AUDIT_MGMT.CREATE_PURGE_JOB (
   AUDIT_TRAIL_TYPE            =&gt; DBMS_AUDIT_MGMT.AUDIT_TRAIL_AUD_STD, 
   AUDIT_TRAIL_PURGE_INTERVAL  =&gt; 12,
   AUDIT_TRAIL_PURGE_NAME      =&gt; 'Standard_Audit_Trail_PJ',
   USE_LAST_ARCH_TIMESTAMP     =&gt; TRUE );
END;
/
</pre>
<p>In this example:</p>
<ul>
<li>
<p><code dir="ltr">AUDIT_TRAIL_TYPE</code>: Enter one of the following values:</p>
<ul>
<li>
<p><code dir="ltr">DBMS_AUDIT_MGMT.AUDIT_TRAIL_AUD_STD</code>: Standard audit trail table, <code dir="ltr">AUD$</code></p>
</li>
<li>
<p><code dir="ltr">DBMS_AUDIT_MGMT.AUDIT_TRAIL_FGA_STD</code>: Fine-grained audit trail table, <code dir="ltr">FGA_LOG$</code></p>
</li>
<li>
<p><code dir="ltr">DBMS_AUDIT_MGMT.AUDIT_TRAIL_DB_STD</code>: Both standard and fine-grained audit trail tables</p>
</li>
<li>
<p><code dir="ltr">DBMS_AUDIT_MGMT.AUDIT_TRAIL_OS</code>: Operating system audit trail files with the <code dir="ltr">.aud</code> extension. (This setting does not apply to Windows Event Log entries.)</p>
</li>
<li>
<p><code dir="ltr">DBMS_AUDIT_MGMT.AUDIT_TRAIL_XML</code>: XML audit trail files</p>
</li>
<li>
<p><code dir="ltr">DBMS_AUDIT_MGMT.AUDIT_TRAIL_FILES</code>: Both operating system and XML audit trail files</p>
</li>
<li>
<p><code dir="ltr">DBMS_AUDIT_MGMT.AUDIT_TRAIL_ALL</code>: All audit trail records, that is, both database audit trail and operating system audit trail types</p>
</li>
</ul>
</li>
<li>
<p><code dir="ltr">AUDIT_TRAIL_PURGE_INTERVAL</code>: Specify the hourly interval for this purge job to run. The timing begins when you run the <code dir="ltr">DBMS_AUDIT_MGMT.CREATE_PURGE_JOB</code> procedure, in this case, 12 hours after you run this procedure. Later on, if you want to update this value, run the <code dir="ltr">DBMS_AUDIT_MGMT.SET_PURGE_JOB_INTERVAL</code> procedure.</p>
</li>
<li>
<p><code dir="ltr">USE_LAST_ARCH_TIMESTAMP</code>: Enter either of the following settings:</p>
<ul>
<li>
<p><code dir="ltr">TRUE</code>: Deletes audit records created before the last archive timestamp. To check the last recorded timestamp, query the <code dir="ltr">LAST_ARCHIVE_TS</code> column of the <code dir="ltr">DBA_AUDIT_MGMT_LAST_ARCH_TS</code> data dictionary view. The default value is <code dir="ltr">TRUE</code>. Oracle recommends that you set <code dir="ltr">USE_LAST_ARCH_TIMESTAMP</code> to <code dir="ltr">TRUE</code>.</p>
</li>
<li>
<p><code dir="ltr">FALSE</code>: Deletes all audit records without considering last archive timestamp. Be careful about using this setting, in case you inadvertently delete audit records that should not have been deleted.</p>
</li>
</ul>
</li>
</ul>
</div>
<!-- class="sect3" -->
<a id="BCGHDFAF"></a>
<div id="DBSEG471" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Step 6: Optionally, Configure the Audit Trail Records to be Deleted in Batches</h4>
<p>By <a id="sthref1883"></a>default, <a id="sthref1884"></a>the <code dir="ltr">DBMS_AUDIT_MGMT</code> package procedures delete the database and operating system audit trail records in batches of 10000 database audit records, or 1000 operating system audit files. You can set this batch size to a different value if you want. Later on, when Oracle Database runs the purge job, it deletes each batch, rather than all records together. If the audit trail is very large (and they can grow quite large), deleting the records in batches facilitates the purge operation.</p>
<p>To find the current batch setting, you can query the <code dir="ltr">PARAMETER_NAME</code> and <code dir="ltr">PARAMETER_VALUE</code> columns of the <code dir="ltr">DBA_AUDIT_MGMT_CONFIG_PARAMS</code> data dictionary view. To set the batch size, use the <code dir="ltr">DBMS_AUDIT_MGMT.SET_AUDIT_TRAIL_PROPERTY</code> procedure. If you later want to clear this setting, see <a href="#BCGJGHGH">"Clearing the Database Audit Trail Batch Size"</a>.</p>
<p>For example:</p>
<pre dir="ltr">
BEGIN
 DBMS_AUDIT_MGMT.SET_AUDIT_TRAIL_PROPERTY(
  AUDIT_TRAIL_TYPE            =&gt; DBMS_AUDIT_MGMT.AUDIT_TRAIL_AUD_STD,
  AUDIT_TRAIL_PROPERTY        =&gt; DBMS_AUDIT_MGMT.DB_DELETE_BATCH_SIZE,
  AUDIT_TRAIL_PROPERTY_VALUE  =&gt; 100000);
END;
/
</pre>
<p>In this example:</p>
<ul>
<li>
<p><code dir="ltr">AUDIT_TRAIL_TYPE</code>: Specifies the audit trail type, which in this case is the database system audit trail. Enter one of the following values:</p>
<ul>
<li>
<p><code dir="ltr">DBMS_AUDIT_MGMT.AUDIT_TRAIL_AUD_STD</code>: Standard audit trail table, <code dir="ltr">AUD$</code>.</p>
</li>
<li>
<p><code dir="ltr">DBMS_AUDIT_MGMT.AUDIT_TRAIL_FGA_STD</code>: Fine-grained audit trail table, <code dir="ltr">FGA_LOG$</code>.</p>
</li>
<li>
<p><code dir="ltr">DBMS_AUDIT_MGMT.AUDIT_TRAIL_OS</code>: Operating system audit files.</p>
</li>
<li>
<p><code dir="ltr">DBMS_AUDIT_MGMT.AUDIT_TRAIL_XML</code>: XML audit files.</p>
</li>
</ul>
</li>
<li>
<p><code dir="ltr">AUDIT_TRAIL_PROPERTY</code>: Uses the <code dir="ltr">DBMS_AUDIT_MGMT.DB_DELETE_BATCH_SIZE</code> property to indicate the database audit trail batch size setting. If you want to batch the operating system audit trail, then use the <code dir="ltr">FILE_DELETE_BATCH_SIZE</code> property.</p>
</li>
<li>
<p><code dir="ltr">AUDIT_TRAIL_PROPERTY_VALUE</code>: Sets the number of audit record files to be 100,000 for each batch. Enter a value between <code dir="ltr">100</code> and <code dir="ltr">1000000</code>. To determine this number, consider the total number of records being purged, and the time interval in which the purge operation is performed. The default is <code dir="ltr">10000</code> for the database audit trail and 1000 for the operating system audit trail records.</p>
</li>
</ul>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="BCGBJEIE"></a>
<div id="DBSEG472" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Manually Purging the Audit Trail</h3>
<p>You can manually purge the audit trail right away, without scheduling a purge job. Similar to a purge job, you can purge <a id="sthref1885"></a>audit trail records that were created before an archive timestamp date or all the records in the audit trail.</p>
<p>Note the following about the <code dir="ltr">DBMS_AUDIT_MGMT.CLEAN_AUDIT_TRAIL</code> PL/SQL procedure:</p>
<ul>
<li>
<p>Only the current audit directory is cleaned up when you run this procedure.</p>
</li>
<li>
<p>On Microsoft Windows, because the <code dir="ltr">DBMS_AUDIT_MGMT</code> package does not support cleanup of Windows Event Viewer, setting the <code dir="ltr">AUDIT_TRAIL_TYPE</code> property to <code dir="ltr">DBMS_AUDIT_MGMT.AUDIT_TRAIL_OS</code> has no effect. This is because operating system audit records on Windows are written to Windows Event Viewer. The <code dir="ltr">DBMS_AUDIT_MGMT</code> package does not support this type of cleanup operation.</p>
</li>
<li>
<p>On UNIX platforms, if you set the <code dir="ltr">AUDIT_SYSLOG_LEVEL</code> initialization parameter to a valid value as listed in <a class="olink REFRN10263" href="../../server.112/e40402/initparams016.htm#REFRN10263"><span class="italic">Oracle Database Reference</span></a>, then Oracle Database writes the operating system log files to syslog files. If you set the <code dir="ltr">AUDIT_TRAIL_TYPE</code> property to <code dir="ltr">DBMS_AUDIT_MGMT.AUDIT_TRAIL_OS</code>, then the procedure only removes <code dir="ltr">.aud</code> files under audit directory (This directory is specified by the <code dir="ltr">AUDIT_FILE_DEST</code> initialization parameter).</p>
</li>
<li>
<p>When the <code dir="ltr">AUDIT_TRAIL_TYPE</code> parameter is set to <code dir="ltr">DBMS_AUDIT_MGMT.AUDIT_TRAIL_XML</code>, this procedure only cleans up XML audit files (<code dir="ltr">.xml</code>) in the current audit directory. Oracle Database maintains an index file, called <code dir="ltr">adx_</code><code dir="ltr"><span class="codeinlineitalic">$ORACLE_SID</span></code><code dir="ltr">.txt</code>, which lists the XML files that were generated by the XML auditing. The cleanup procedure does not remove this file.</p>
</li>
</ul>
<p>For database audit trails, you must initialize the cleanup infrastructure by running the <code dir="ltr">DBMS_AUDIT_MGMT.INIT_CLEANUP</code> procedure, and then purging the database audit trail by using the method described in <a href="#BCGEACGE">"Purging a Subset of Records from the Database Audit Trail"</a>.</p>
<p>To manually purge the audit trail:</p>
<ol>
<li>
<p>Follow these steps under <a href="#BCGGIAGD">"Scheduling an Automatic Purge Job for the Audit Trail"</a>:</p>
<ul>
<li>
<p><a href="#BCGBCIHA">Step 1: If Necessary, Tune Online and Archive Redo Log Sizes</a></p>
</li>
<li>
<p><a href="#CEGFIHGB">Step 2: Plan a Timestamp and Archive Strategy</a></p>
</li>
<li>
<p><a href="#CEGDIDHD">Step 3: Initialize the Audit Trail Cleanup Operation</a></p>
</li>
<li>
<p><a href="#BCGEJCFG">Step 4: Optionally, Set an Archive Timestamp for Audit Records</a></p>
</li>
<li>
<p><a href="#CEGDIJDA">Step 5: Create and Schedule the Purge Job</a></p>
</li>
<li>
<p><a href="#BCGHDFAF">Step 6: Optionally, Configure the Audit Trail Records to be Deleted in Batches</a></p>
</li>
</ul>
</li>
<li>
<p>Purge the audit trail records by running the <code dir="ltr">DBMS_AUDIT_MGMT.CLEAN_AUDIT_TRAIL</code> PL/SQL procedure.</p>
<p>For example:</p>
<pre dir="ltr">
BEGIN
  DBMS_AUDIT_MGMT.CLEAN_AUDIT_TRAIL(
   AUDIT_TRAIL_TYPE           =&gt;  DBMS_AUDIT_MGMT.AUDIT_TRAIL_AUD_STD,
   USE_LAST_ARCH_TIMESTAMP    =&gt;  TRUE );
END;
/
</pre>
<p>In this example:</p>
<ul>
<li>
<p><code dir="ltr">AUDIT_TRAIL_TYPE</code>: Enter one of the following values:</p>
<ul>
<li>
<p><code dir="ltr">DBMS_AUDIT_MGMT.AUDIT_TRAIL_AUD_STD</code>: Standard audit trail table, <code dir="ltr">AUD$</code></p>
</li>
<li>
<p><code dir="ltr">DBMS_AUDIT_MGMT.AUDIT_TRAIL_FGA_STD</code>: Fine-grained audit trail table, <code dir="ltr">FGA_LOG$</code></p>
</li>
<li>
<p><code dir="ltr">DBMS_AUDIT_MGMT.AUDIT_TRAIL_DB_STD</code>: Both standard and fine-grained audit trail tables</p>
</li>
<li>
<p><code dir="ltr">DBMS_AUDIT_MGMT.AUDIT_TRAIL_OS</code>: Operating system audit trail files with the <code dir="ltr">.aud</code> extension. (This setting does not apply to Windows Event Log entries.)</p>
</li>
<li>
<p><code dir="ltr">DBMS_AUDIT_MGMT.AUDIT_TRAIL_XML</code>: XML audit trail files</p>
</li>
<li>
<p><code dir="ltr">DBMS_AUDIT_MGMT.AUDIT_TRAIL_FILES</code>: Both operating system and XML audit trail files</p>
</li>
<li>
<p><code dir="ltr">DBMS_AUDIT_MGMT.AUDIT_TRAIL_ALL</code>: All audit trail records, that is, both database audit trail and operating system audit trail types</p>
</li>
</ul>
</li>
<li>
<p><code dir="ltr">USE_LAST_ARCH_TIMESTAMP</code>: Enter either of the following settings:</p>
<ul>
<li>
<p><code dir="ltr">TRUE</code>: Deletes audit records created before the last archive timestamp. To set the archive timestamp, see <a href="#BCGEJCFG">"Step 4: Optionally, Set an Archive Timestamp for Audit Records"</a>. The default (and recommended) value is <code dir="ltr">TRUE</code>. Oracle recommends that you set <code dir="ltr">USE_LAST_ARCH_TIMESTAMP</code> to <code dir="ltr">TRUE</code>.</p>
</li>
<li>
<p><code dir="ltr">FALSE</code>: Deletes all audit records without considering last archive timestamp. Be careful about using this setting, in case you inadvertently delete audit records that should have been deleted.</p>
</li>
</ul>
</li>
</ul>
</li>
</ol>
</div>
<!-- class="sect2" -->
<a id="BCGEACGE"></a>
<div id="DBSEG473" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Purging a Subset of Records from the Database Audit Trail</h3>
<p>You can <a id="sthref1886"></a>manually <a id="sthref1887"></a>remove records from the database audit trail tables. This method can be useful if you want to remove a specific subset of records. You can use this method if the database audit trail table is in any tablespace, including the <code dir="ltr">SYSTEM</code> tablespace.</p>
<p>For example, to delete audit records that were created later than the evening of February 28, 2009 but before March 28, 2009, enter the following statement:</p>
<pre dir="ltr">
DELETE FROM SYS.AUD$
   WHERE NTIMESTAMP# &gt; TO_TIMESTAMP ('28-FEB-09 09.07.59.907000 PM') AND
   NTIMESTAMP# &lt; TO_TIMESTAMP ('28-MAR-09 09.07.59.907000 PM');
</pre>
<p>Alternatively, to delete <span class="italic">all</span> audit records from the audit trail, enter the following statement:</p>
<pre dir="ltr">
DELETE FROM SYS.AUD$;
</pre>
<p>Only the user <code dir="ltr">SYS</code> or a user to whom <code dir="ltr">SYS</code> granted the <code dir="ltr">DELETE</code> privilege on <code dir="ltr">SYS.AUD$</code> can delete records from the database audit trail.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
If the audit trail is full and connections are being audited (that is, if the <code dir="ltr">AUDIT SESSION</code> statement is set), then typical users cannot connect to the database because the associated audit record for the connection cannot be inserted into the audit trail. In this case, connect as <code dir="ltr">SYS</code> with the <code dir="ltr">SYSDBA</code> privilege, and make space available in the audit trail. Remember that operations by <code dir="ltr">SYS</code> are not recorded in the standard audit trail, but they are audited if you set the <code dir="ltr">AUDIT_SYS_OPERATIONS</code> parameter to <code dir="ltr">TRUE</code>.</div>
<p>After you delete the rows from the database audit trail table, the freed space is available for reuse by that table. (The <code dir="ltr">SYS.AUD$</code> table is allocated only as many extents as are necessary to maintain current audit trail records.) You do not need to do anything to make this space available to the table for reuse. If you want to use this space for another table, then follow these steps:</p>
<ol>
<li>
<p>Move the <code dir="ltr">AUD$</code> table to an auto segment space managed tablespace.</p>
<p>For example:</p>
<pre dir="ltr">
BEGIN
  DBMS_AUDIT_MGMT.SET_AUDIT_TRAIL_LOCATION
   (audit_trail_type =&gt; DBMS_AUDIT_MGMT.AUDIT_TRAIL_DB_STD,
   audit_trail_location_value =&gt; 'USERS');
END;
/
</pre></li>
<li>
<p>Run the following statements:</p>
<pre dir="ltr">
ALTER TABLE SYSTEM.AUD$ ENABLE ROW MOVEMENT;
ALTER TABLE SYSTEM.AUD$ SHRINK SPACE CASCADE;
</pre></li>
<li>
<p>If you must move the <code dir="ltr">AUD$</code> table back to the <code dir="ltr">SYSTEM</code> tablespace, then run the following statement:</p>
<pre dir="ltr">
BEGIN
 DBMS_AUDIT_MGMT.SET_AUDIT_TRAIL_LOCATION
  (audit_trail_type =&gt; DBMS_AUDIT_MGMT.AUDIT_TRAIL_DB_STD,
  audit_trail_location_value =&gt; 'SYSTEM');
END;
/
</pre></li>
</ol>
<p>If you want to both delete all the rows from the database audit trail table and free the used space for other tablespace objects, use the <code dir="ltr">TRUNCATE TABLE</code> statement. For example:</p>
<pre dir="ltr">
TRUNCATE TABLE SYS.AUD$;
</pre>
<div class="infobox-note">
<p class="notep1">Note:</p>
<code dir="ltr">SYS.AUD$</code> and <code dir="ltr">SYS.FGA_LOG$</code> are the only <code dir="ltr">SYS</code> objects that can ever be directly modified.</div>
</div>
<!-- class="sect2" -->
<a id="BCGCDDBJ"></a>
<div id="DBSEG474" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Other Audit Trail Purge Operations</h3>
<p>This section contains:</p>
<ul>
<li>
<p><a href="#BCGEAHGA">Verifying That the Audit Trail Is Initialized for Cleanup</a></p>
</li>
<li>
<p><a href="#BCGIIEGB">Setting the Default Audit Trail Purge Interval for Any Audit Trail Type</a></p>
</li>
<li>
<p><a href="#BCGEGBEF">Cancelling the Initialization Cleanup Settings</a></p>
</li>
<li>
<p><a href="#BCGFIFJI">Enabling or Disabling an Audit Trail Purge Job</a></p>
</li>
<li>
<p><a href="#BCGBAJHH">Setting the Default Audit Trail Purge Job Interval for a Specified Purge Job</a></p>
</li>
<li>
<p><a href="#BCGBGHFA">Deleting an Audit Trail Purge Job</a></p>
</li>
<li>
<p><a href="#BCGBAJAH">Clearing the Archive Timestamp Setting</a></p>
</li>
<li>
<p><a href="#BCGJGHGH">Clearing the Database Audit Trail Batch Size</a></p>
</li>
</ul>
<a id="BCGEAHGA"></a>
<div id="DBSEG475" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Verifying That the Audit Trail Is Initialized for Cleanup</h4>
<p>You can <a id="sthref1888"></a>check if the audit trail has been initialized for cleanup by running the <code dir="ltr">DBMS_AUDIT_MGMT.IS_CLEANUP_INITIALIZED</code> function. If the audit trail has been initialized, then this function returns <code dir="ltr">TRUE</code>. If it is not, it returns <code dir="ltr">FALSE</code>.</p>
<p>For example:</p>
<pre dir="ltr">
SET SERVEROUTPUT ON
BEGIN
 IF 
   DBMS_AUDIT_MGMT.IS_CLEANUP_INITIALIZED(DBMS_AUDIT_MGMT.AUDIT_TRAIL_AUD_STD)
 THEN
   DBMS_OUTPUT.PUT_LINE('AUD$ is initialized for cleanup');
 ELSE
   DBMS_OUTPUT.PUT_LINE('AUD$ is not initialized for cleanup.');
 END IF;
END;
/
</pre>
<p>This example verifies that the database standard audit trail has been initialized and returns a message indicating its status. To select a setting for a different audit trail, choose from the <code dir="ltr">AUDIT_TRAIL_TYPE</code> settings described in <a href="#CEGDIDHD">"Step 3: Initialize the Audit Trail Cleanup Operation"</a>.</p>
</div>
<!-- class="sect3" -->
<a id="BCGIIEGB"></a>
<div id="DBSEG476" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Setting the Default Audit Trail Purge Interval for Any Audit Trail Type</h4>
<p>You can set a <a id="sthref1889"></a>default purge operation interval, in hours, that must pass before the next purge operation takes place for a specified audit trail type.</p>
<p>For example:</p>
<pre dir="ltr">
BEGIN
 DBMS_AUDIT_MGMT.SET_AUDIT_TRAIL_PROPERTY(
  AUDIT_TRAIL_TYPE            =&gt; DBMS_AUDIT_MGMT.AUDIT_TRAIL_AUD_STD,
  AUDIT_TRAIL_PROPERTY        =&gt; DBMS_AUDIT_MGMT.CLEAN_UP_INTERVAL,
  AUDIT_TRAIL_PROPERTY_VALUE  =&gt; 24 );
END;
/
</pre>
<p>In this example:</p>
<ul>
<li>
<p><code dir="ltr">AUDIT_TRAIL_TYPE</code>: Specifies the audit trail type, which in this case is the database standard audit trail. Choose from the following settings:</p>
<ul>
<li>
<p><code dir="ltr">DBMS_AUDIT_MGMT.AUDIT_TRAIL_AUD_STD</code>: Standard audit trail table, <code dir="ltr">AUD$</code></p>
</li>
<li>
<p><code dir="ltr">DBMS_AUDIT_MGMT.AUDIT_TRAIL_FGA_STD</code>: Fine-grained audit trail table, <code dir="ltr">FGA_LOG$</code></p>
</li>
<li>
<p><code dir="ltr">DBMS_AUDIT_MGMT.AUDIT_TRAIL_DB_STD</code>: Both standard and fine-grained audit trail tables</p>
</li>
<li>
<p><code dir="ltr">DBMS_AUDIT_MGMT.AUDIT_TRAIL_OS</code>: Operating system audit trail files with the <code dir="ltr">.aud</code> extension. (This setting does not apply to Windows Event Log entries.)</p>
</li>
<li>
<p><code dir="ltr">DBMS_AUDIT_MGMT.AUDIT_TRAIL_XML</code>: XML Operating system audit trail files</p>
</li>
<li>
<p><code dir="ltr">DBMS_AUDIT_MGMT.AUDIT_TRAIL_FILES</code>: Both operating system and XML audit trail files</p>
</li>
<li>
<p><code dir="ltr">DBMS_AUDIT_MGMT.AUDIT_TRAIL_ALL</code>: All audit trail records, that is, both database audit trail and operating system audit trail types</p>
</li>
</ul>
<p>You can set a default interval for multiple audit trail types, so long as they do not conflict. For example, you can set individual intervals for the <code dir="ltr">DBMS_AUDIT_MGMT.AUDIT_TRAIL_AUD_STD</code> and <code dir="ltr">DBMS_AUDIT_MGMT.AUDIT_TRAIL_FGA_STD</code> properties, but not for the <code dir="ltr">DBMS_AUDIT_MGMT.AUDIT_TRAIL_DB_STD</code> property.</p>
</li>
<li>
<p><code dir="ltr">AUDIT_TRAIL_PROPERTY</code>: Sets the <code dir="ltr">DBMS_AUDIT_MGMT.CLEAN_UP_INTERVAL</code> property to indicate the purge operation interval setting. To find the current property settings, query the <code dir="ltr">PARAMETER_NAME</code> and <code dir="ltr">PARAMETER_VALUE</code> columns of the <code dir="ltr">DBA_AUDIT_MGMT_CONFIG_PARAMS</code> data dictionary view. The timing begins when you set the <code dir="ltr">DBMS_AUDIT_MGMT.CLEAN_UP_INTERVAL</code> property.</p>
</li>
<li>
<p><code dir="ltr">AUDIT_TRAIL_PROPERTY_VALUE</code>: Updates the default hourly interval set by the <code dir="ltr">DBMS_AUDIT_MGMT.INIT_CLEANUP</code> procedure. Enter a value between 1 and 999.</p>
</li>
</ul>
</div>
<!-- class="sect3" -->
<a id="BCGEGBEF"></a>
<div id="DBSEG477" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Cancelling the Initialization Cleanup Settings</h4>
<p>You can <a id="sthref1890"></a>cancel the <code dir="ltr">DBMS_AUDIT_MGMT.INIT_CLEANUP</code> settings, that is, the default cleanup interval, by invoking the <code dir="ltr">DBMS_AUDIT_MGMT.DEINIT_CLEANUP</code> procedure.</p>
<p>For example, to cancel all purge settings for the standard audit trail:</p>
<pre dir="ltr">
BEGIN
 DBMS_AUDIT_MGMT.DEINIT_CLEANUP(
  AUDIT_TRAIL_TYPE  =&gt; DBMS_AUDIT_MGMT.AUDIT_TRAIL_AUD_STD);
END;
/
</pre>
<p>In this example:</p>
<ul>
<li>
<p><code dir="ltr">AUDIT_TRAIL_TYPE</code>: Enter one of the <code dir="ltr">AUDIT_TRAIL_TYPE</code> settings listed in <a href="#CEGDIDHD">"Step 3: Initialize the Audit Trail Cleanup Operation"</a>.</p>
</li>
</ul>
</div>
<!-- class="sect3" -->
<a id="BCGFIFJI"></a>
<div id="DBSEG478" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Enabling or Disabling an Audit Trail Purge Job</h4>
<p>To enable or disable an audit trail <a id="sthref1891"></a><a id="sthref1892"></a>purge job, use the <code dir="ltr">DBMS_AUDIT_MGMT.SET_PURGE_JOB_STATUS</code> PL/SQL procedure.</p>
<p>For example:</p>
<pre dir="ltr">
BEGIN
 DBMS_AUDIT_MGMT.SET_PURGE_JOB_STATUS(
  AUDIT_TRAIL_PURGE_NAME      =&gt; 'OS_Audit_Trail_PJ',
  AUDIT_TRAIL_STATUS_VALUE    =&gt; DBMS_AUDIT_MGMT.PURGE_JOB_ENABLE);
END;
/
</pre>
<p>In this example:</p>
<ul>
<li>
<p><code dir="ltr">AUDIT_TRAIL_PURGE_NAME</code>: Specifies a purge job called <code dir="ltr">OS_Audit_Trail_PJ</code>. To find existing purge jobs, query the <code dir="ltr">JOB_NAME</code> and <code dir="ltr">JOB_STATUS</code> columns of the <code dir="ltr">DBA_AUDIT_MGMT_CLEANUP_JOBS</code> data dictionary view.</p>
</li>
<li>
<p><code dir="ltr">AUDIT_TRAIL_STATUS_VALUE</code>: Enter one of the following properties:</p>
<ul>
<li>
<p><code dir="ltr">DBMS_AUDIT_MGMT.PURGE_JOB_ENABLE</code>: Enables the specified purge job.</p>
</li>
<li>
<p><code dir="ltr">DBMS_AUDIT_MGMT.PURGE_JOB_DISABLE</code>: Disables the specified purge job.</p>
</li>
</ul>
</li>
</ul>
</div>
<!-- class="sect3" -->
<a id="BCGBAJHH"></a>
<div id="DBSEG479" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Setting the Default Audit Trail Purge Job Interval for a Specified Purge Job</h4>
<p>You can <a id="sthref1893"></a>set a default purge operation interval, in hours, that must pass before the next purge job operation takes place. The interval setting that is used in the <code dir="ltr">DBMS_AUDIT_MGMT.CREATE_PURGE_JOB</code> procedure takes precedence over this setting.</p>
<p>For example:</p>
<pre dir="ltr">
BEGIN
 DBMS_AUDIT_MGMT.SET_PURGE_JOB_INTERVAL(
  AUDIT_TRAIL_PURGE_NAME       =&gt; 'OS_Audit_Trail_PJ',
  AUDIT_TRAIL_INTERVAL_VALUE   =&gt; 24 );
END;
/
</pre>
<p>In this example:</p>
<ul>
<li>
<p><code dir="ltr">AUDIT_TRAIL_PURGE_NAME</code>: Specifies the name of the audit trail purge job. To find a list of existing purge jobs, query the <code dir="ltr">JOB_NAME</code> and <code dir="ltr">JOB_STATUS</code> columns of the <code dir="ltr">DBA_AUDIT_MGMT_CLEANUP_JOBS</code> data dictionary view.</p>
</li>
<li>
<p><code dir="ltr">AUDIT_TRAIL_INTERVAL_VALUE</code>: Updates the default hourly interval set by the <code dir="ltr">DBMS_AUDIT_MGMT.CREATE_PURGE_JOB</code> procedure. Enter a value between <code dir="ltr">1</code> and <code dir="ltr">999</code>. The timing begins when you run the purge job.</p>
</li>
</ul>
</div>
<!-- class="sect3" -->
<a id="BCGBGHFA"></a>
<div id="DBSEG480" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Deleting an Audit Trail Purge Job</h4>
<p>To delete an audit <a id="sthref1894"></a>trail purge job, use the <code dir="ltr">DBMS_AUDIT_MGMT.DROP_PURGE_JOB</code> PL/SQL procedure. To find existing purge jobs, query the <code dir="ltr">JOB_NAME</code> and <code dir="ltr">JOB_STATUS</code> columns of the <code dir="ltr">DBA_AUDIT_MGMT_CLEANUP_JOBS</code> data dictionary view.</p>
<p>For example:</p>
<pre dir="ltr">
BEGIN
 DBMS_AUDIT_MGMT.DROP_PURGE_JOB(
  AUDIT_TRAIL_PURGE_NAME  =&gt; 'FGA_Audit_Trail_PJ');
END;
/
</pre>
<p>In this example:</p>
<ul>
<li>
<p><code dir="ltr">AUDIT_TRAIL_PURGE_NAME</code>: Specifies a purge job called <code dir="ltr">FGA_Audit_Trail_PJ</code>.</p>
</li>
</ul>
</div>
<!-- class="sect3" -->
<a id="BCGBAJAH"></a>
<div id="DBSEG481" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Clearing the Archive Timestamp Setting</h4>
<p>To clear the archive <a id="sthref1895"></a>timestamp setting, use the <code dir="ltr">DBMS_AUDIT_MGMT.CLEAR_LAST_ARCHIVE_TIMESTAMP</code> PL/SQL procedure.</p>
<p>For example:</p>
<pre dir="ltr">
BEGIN
  DBMS_AUDIT_MGMT.CLEAR_LAST_ARCHIVE_TIMESTAMP(
   AUDIT_TRAIL_TYPE     =&gt;  DBMS_AUDIT_MGMT.AUDIT_TRAIL_XML',
   RAC_INSTANCE_NUMBER  =&gt;  1 );
END;
/
</pre>
<p>In this example:</p>
<ul>
<li>
<p><code dir="ltr">RAC_INSTANCE_NUMBER</code>: If the <code dir="ltr">AUDIT_TRAIL_TYPE</code> property is set to <code dir="ltr">DBMS_AUDIT_MGMT.AUDIT_TRAIL_OS</code> or <code dir="ltr">DBMS_AUDIT_MGMT.AUDIT_TRAIL_XML</code>, then you cannot set <code dir="ltr">RAC_INSTANCE_NUMBER</code> to <code dir="ltr">0</code>. You can omit this setting or specify <code dir="ltr">1</code> to indicate an instance number.</p>
<p>You can omit the <code dir="ltr">RAC_INSTANCE_NUMBER</code> setting when <code dir="ltr">AUDIT_TRAIL_TYPE</code> is <code dir="ltr">DBMS_AUDIT_MGMT.AUDIT_TRAIL_AUD_STD</code> or <code dir="ltr">DBMS_AUDIT_MGMT.AUDIT_TRAIL_FGA_STD</code>, or if the database is not an Oracle RAC database. Otherwise, specify the correct instance number. You can find the instance number by issuing the <code dir="ltr">SHOW PARAMETER INSTANCE_NUMBER</code> command in SQL*Plus.</p>
</li>
</ul>
</div>
<!-- class="sect3" -->
<a id="BCGJGHGH"></a>
<div id="DBSEG482" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Clearing the Database Audit Trail Batch Size</h4>
<p>To clear the batch size <a id="sthref1896"></a>setting, use the <code dir="ltr">DBMS_AUDIT_MGMT.CLEAR_AUDIT_TRAIL_PROPERTY</code> procedure.</p>
<p>For example:</p>
<pre dir="ltr">
BEGIN
  DBMS_AUDIT_MGMT.CLEAR_AUDIT_TRAIL_PROPERTY(
   AUDIT_TRAIL_TYPE        =&gt;  DBMS_AUDIT_MGMT.AUDIT_TRAIL_AUD_STD,
   AUDIT_TRAIL_PROPERTY    =&gt;  DBMS_AUDIT_MGMT.DB_DELETE_BATCH_SIZE,
   USE_DEFAULT_VALUES      =&gt;  TRUE );
END;
/
</pre>
<p>In this example:</p>
<ul>
<li>
<p><code dir="ltr">AUDIT_TRAIL_TYPE</code>: Specifies the audit trail type, which in this case is the database system audit trail. Enter one of the <code dir="ltr">AUDIT_TRAIL_TYPE</code> values listed in <a href="#BCGHDFAF">"Step 6: Optionally, Configure the Audit Trail Records to be Deleted in Batches"</a>.</p>
</li>
<li>
<p><code dir="ltr">AUDIT_TRAIL_PROPERTY</code>: Specifies the <code dir="ltr">DB_DELETE_BATCH_SIZE</code> property. Query the <code dir="ltr">DBA_AUDIT_MGMT_CONFIG_PARAMS</code> data dictionary view to find the current status of this property.</p>
</li>
<li>
<p><code dir="ltr">USE_DEFAULT_VALUES</code>: Is set to <code dir="ltr">TRUE</code>, which clears the current audit record batch size and uses the default value, <code dir="ltr">10000</code>, instead.</p>
</li>
</ul>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="BCGDAGAG"></a>
<div id="DBSEG483" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Example: Directly Calling a Database Audit Trail Purge Operation</h3>
<p>The pseudo code in <a href="#BCGJGCHA">Example 9-27</a> creates <a id="sthref1897"></a><a id="sthref1898"></a>a database audit trail purge operation that the user calls by invoking the <code dir="ltr">DBMS_ADUIT.CLEAN_AUDIT_TRAIL</code> procedure. The purge operation deletes records that were created before the last archived timestamp by using a loop. The loop archives the audit records, calculates which audit records were archived and uses the <code dir="ltr">SetCleanUpAuditTrail</code> call to set the last archive timestamp, and then calls the <code dir="ltr">CLEAN_AUDIT_TRAIL</code> procedure. It deletes the database audit trail records in batches of 100,000 records each. In this example, major steps are in <span class="bold">bold</span> typeface.</p>
<div id="DBSEG484" class="example">
<p class="titleinexample"><a id="BCGJGCHA"></a>Example 9-27 Directly Calling a Database Audit Trail Purge Operation</p>
<pre dir="ltr">
<span class="bold">-- 1. Initialize the AUD$ table for cleanup:</span>
PROCEDURE CleanUpAuditTrailMain()
BEGIN
  -- Connect to the database using appropriate login.
  CALL ConnectToDatabase();
  -- The login used must have privileges to modify Audit settings. 
  -- Currently, the DBA will be the authorized user

  DBMS_AUDIT_MGMT.INIT_CLEANUP(
   AUDIT_TRAIL_TYPE           =&gt; DBMS_AUDIT_MGMT.AUDIT_TRAIL_AUD_STD,
   DEFAULT_CLEANUP_INTERVAL   =&gt; 12 );
END; /*PROCEDURE */
/
<span class="bold">-- 2. Optionally, set the batch size:</span>
BEGIN
  DBMS_AUDIT_MGMT.SET_AUDIT_TRAIL_PROPERTY(
   AUDIT_TRAIL_TYPE           =&gt; DBMS_AUDIT_MGMT.AUDIT_TRAIL_AUD_STD,
   AUDIT_TRAIL_PROPERTY       =&gt; DBMS_AUDIT_MGMT.DB_DELETE_BATCH_SIZE,
   AUDIT_TRAIL_PROPERTY_VALUE =&gt; 100000 /* delete batch size */);
END; /*PROCEDURE */
/
<span class="bold">-- 3. Set the last archive timestamp:</span>
PROCEDURE SetCleanUpAuditTrail()
BEGIN
  CALL FindLastArchivedTimestamp(AUD$);
  DBMS_AUDIT_MGMT.SET_LAST_ARCHIVE_TIMESTAMP(
   AUDIT_TRAIL_TYPE          =&gt; DBMS_AUDIT_MGMT.AUDIT_TRAIL_AUD_STD,
   LAST_ARCHIVE_TIME         =&gt; '20-AUG-2009 00:00:00');
END /* PROCEDURE */
/
<span class="bold">-- 4. Run a customized archive procedure to purge the audit trail records:</span>
BEGIN
  CALL MakeAuditSettings();
  LOOP (/* How long to loop*/)
    -- Invoke function for audit record archival
    CALL DoAuditRecordArchival(AUD$);
 
    CALL SetCleanUpAuditTrail(); 
    IF(/* Clean up is needed immediately */)
      DBMS_AUDIT_MGMT.CLEAN_AUDIT_TRAIL(
       AUDIT_TRAIL_TYPE        =&gt; DBMS_AUDIT_MGMT.AUDIT_TRAIL_AUD_STD,
       USE_LAST_ARCH_TIMESTAMP =&gt; TRUE);
    END IF
  END LOOP /*LOOP*/
END; /* PROCEDURE */ 
/
</pre></div>
<!-- class="example" --></div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="BCGIICFE"></a>
<div id="DBSEG0635" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Finding Information About Audited Activities</h2>
<p>This section contains:</p>
<ul>
<li>
<p><a href="#CEGEJEBF">Using Data Dictionary Views to Find Information About the Audit Trail</a></p>
</li>
<li>
<p><a href="#i1007917">Using Audit Trail Views to Investigate Suspicious Activities</a></p>
</li>
<li>
<p><a href="#i1007930">Deleting the Audit Trail Views</a></p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">Tip:</p>
To find <a id="sthref1899"></a>error information about audit policies, check the trace files. The <code dir="ltr">USER_DUMP_DEST</code> initialization parameter sets the location of the trace files.</div>
<a id="CEGEJEBF"></a>
<div id="DBSEG485" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Using Data Dictionary Views to Find Information About the Audit Trail</h3>
<p><a href="#BCGJJAFI">Table 9-7</a> lists <a id="sthref1900"></a>data dictionary <a id="sthref1901"></a><a id="sthref1902"></a><a id="sthref1903"></a>views that provide auditing information. For detailed information about these views, see <a class="olink REFRN" href="../../server.112/e40402/toc.htm"><span class="italic">Oracle Database Reference.</span></a></p>
<div id="DBSEG486" class="tblhruleformalwide">
<p class="titleintable"><a id="sthref1904"></a><a id="BCGJJAFI"></a>Table 9-7 Data Dictionary Views That Display Information about the Database Audit Trail</p>
<table class="cellalignment2250" title="Data Dictionary Views That Display Information about the Database Audit Trail" summary="This table lists and describes the audit trail views that are created when you install the database." dir="ltr">
<thead>
<tr class="cellalignment2244">
<th class="cellalignment2251" id="r1c1-t46">View</th>
<th class="cellalignment2251" id="r1c2-t46">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r2c1-t46" headers="r1c1-t46">
<p><code dir="ltr">ALL_AUDIT_POLICIES</code></p>
</td>
<td class="cellalignment2252" headers="r2c1-t46 r1c2-t46">
<p>Describes the fine-grained auditing policies on the tables and views accessible to the current user</p>
</td>
</tr>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r3c1-t46" headers="r1c1-t46">
<p><code dir="ltr">ALL_AUDIT_POLICY_COLUMNS</code></p>
</td>
<td class="cellalignment2252" headers="r3c1-t46 r1c2-t46">
<p>Describes the fine-grained auditing policy columns on the tables and views accessible to the current user.</p>
</td>
</tr>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r4c1-t46" headers="r1c1-t46">
<pre dir="ltr">
ALL_DEF_AUDIT_OPTS
</pre></td>
<td class="cellalignment2252" headers="r4c1-t46 r1c2-t46">
<p>Lists default object-auditing options that are to be applied when objects are created</p>
</td>
</tr>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r5c1-t46" headers="r1c1-t46">
<pre dir="ltr">
AUDIT_ACTIONS
</pre></td>
<td class="cellalignment2252" headers="r5c1-t46 r1c2-t46">
<p>Describes audit trail action type codes</p>
</td>
</tr>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r6c1-t46" headers="r1c1-t46">
<pre dir="ltr">
DBA_AUDIT_EXISTS
</pre></td>
<td class="cellalignment2252" headers="r6c1-t46 r1c2-t46">
<p>Lists audit trail entries produced <code dir="ltr">BY AUDIT NOT EXISTS</code></p>
</td>
</tr>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r7c1-t46" headers="r1c1-t46">
<p><code dir="ltr">DBA_AUDIT_MGMT_CLEAN_EVENTS</code></p>
</td>
<td class="cellalignment2252" headers="r7c1-t46 r1c2-t46">
<p>Displays the history of purge events. Periodically, as user <code dir="ltr">SYS</code> connected with the <code dir="ltr">SYSDBA</code> privilege, you should delete the contents of this view so that it does not grow too large. For example:</p>
<pre dir="ltr">
DELETE FROM DBA_AUDIT_MGMT_CLEAN_EVENTS;
</pre></td>
</tr>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r8c1-t46" headers="r1c1-t46">
<p><code dir="ltr">DBA_AUDIT_MGMT_CLEANUP_JOBS</code></p>
</td>
<td class="cellalignment2252" headers="r8c1-t46 r1c2-t46">
<p>Displays the currently configured audit trail purge jobs</p>
</td>
</tr>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r9c1-t46" headers="r1c1-t46">
<p><code dir="ltr">DBA_AUDIT_MGMT_CONFIG_PARAMS</code></p>
</td>
<td class="cellalignment2252" headers="r9c1-t46 r1c2-t46">
<p>Displays the currently configured audit trail properties that are used by the <code dir="ltr">DBMS_AUDIT_MGMT</code> PL/SQL package</p>
</td>
</tr>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r10c1-t46" headers="r1c1-t46">
<p><code dir="ltr">DBA_AUDIT_MGMT_LAST_ARCH_TS</code></p>
</td>
<td class="cellalignment2252" headers="r10c1-t46 r1c2-t46">
<p>Displays the last archive timestamps that have set for audit trail purges.</p>
</td>
</tr>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r11c1-t46" headers="r1c1-t46">
<pre dir="ltr">
DBA_AUDIT_OBJECT
</pre></td>
<td class="cellalignment2252" headers="r11c1-t46 r1c2-t46">
<p>Lists audit trail records for all objects in the system</p>
</td>
</tr>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r12c1-t46" headers="r1c1-t46">
<p><code dir="ltr">DBA_AUDIT_POLICIES</code></p>
</td>
<td class="cellalignment2252" headers="r12c1-t46 r1c2-t46">
<p>Lists all the fine-grained auditing policies on the system</p>
</td>
</tr>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r13c1-t46" headers="r1c1-t46">
<pre dir="ltr">
DBA_AUDIT_SESSION
</pre></td>
<td class="cellalignment2252" headers="r13c1-t46 r1c2-t46">
<p>Lists all audit trail records concerning <code dir="ltr">CONNECT</code> and <code dir="ltr">DISCONNECT</code></p>
</td>
</tr>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r14c1-t46" headers="r1c1-t46">
<p><code dir="ltr">DBA_AUDIT_POLICY_COLUMNS</code></p>
</td>
<td class="cellalignment2252" headers="r14c1-t46 r1c2-t46">
<p>Describes the fine-grained auditing policy columns on the tables and views throughout the database.</p>
</td>
</tr>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r15c1-t46" headers="r1c1-t46">
<p><code dir="ltr">DBA_AUDIT_STATEMENT</code></p>
</td>
<td class="cellalignment2252" headers="r15c1-t46 r1c2-t46">
<p>Lists audit trail records concerning <code dir="ltr">GRANT</code>, <code dir="ltr">REVOKE</code>, <code dir="ltr">AUDIT</code>, <code dir="ltr">NOAUDIT</code>, and <code dir="ltr">ALTER SYSTEM</code> statements throughout the database</p>
</td>
</tr>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r16c1-t46" headers="r1c1-t46">
<p><code dir="ltr">DBA_AUDIT_TRAIL</code></p>
</td>
<td class="cellalignment2252" headers="r16c1-t46 r1c2-t46">
<p>Lists all standard audit trail entries in the <code dir="ltr">AUD$</code> table</p>
</td>
</tr>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r17c1-t46" headers="r1c1-t46">
<p><code dir="ltr">DBA_COMMON_AUDIT_TRAIL</code></p>
</td>
<td class="cellalignment2252" headers="r17c1-t46 r1c2-t46">
<p>Combines standard and fine-grained audit log records, and includes <code dir="ltr">SYS</code> and mandatory audit records written in XML format</p>
</td>
</tr>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r18c1-t46" headers="r1c1-t46">
<p><code dir="ltr">DBA_FGA_AUDIT_TRAIL</code></p>
</td>
<td class="cellalignment2252" headers="r18c1-t46 r1c2-t46">
<p>Lists audit trail records for fine-grained auditing.</p>
</td>
</tr>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r19c1-t46" headers="r1c1-t46">
<p><code dir="ltr">DBA_OBJ_AUDIT_OPTS</code></p>
</td>
<td class="cellalignment2252" headers="r19c1-t46 r1c2-t46">
<p>Displays the objects on which auditing options have been enabled</p>
</td>
</tr>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r20c1-t46" headers="r1c1-t46">
<pre dir="ltr">
DBA_PRIV_AUDIT_OPTS
</pre></td>
<td class="cellalignment2252" headers="r20c1-t46 r1c2-t46">
<p>Describes current system privileges being audited across the system and by user</p>
</td>
</tr>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r21c1-t46" headers="r1c1-t46">
<pre dir="ltr">
DBA_STMT_AUDIT_OPTS
</pre></td>
<td class="cellalignment2252" headers="r21c1-t46 r1c2-t46">
<p>Describes current statement auditing options across the system and by user</p>
</td>
</tr>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r22c1-t46" headers="r1c1-t46">
<p><code dir="ltr">USER_AUDIT_OBJECT</code></p>
</td>
<td class="cellalignment2252" headers="r22c1-t46 r1c2-t46">
<p>Lists audit trail records for statements concerning objects that are accessible to the current user</p>
</td>
</tr>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r23c1-t46" headers="r1c1-t46">
<p><code dir="ltr">USER_AUDIT_POLICIES</code></p>
</td>
<td class="cellalignment2252" headers="r23c1-t46 r1c2-t46">
<p>Describes the fine-grained auditing policy columns on the tables and views accessible to the current user.</p>
</td>
</tr>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r24c1-t46" headers="r1c1-t46">
<p><code dir="ltr">USER_AUDIT_SESSION</code></p>
</td>
<td class="cellalignment2252" headers="r24c1-t46 r1c2-t46">
<p>Lists all audit trail records concerning connections and disconnections for the current user</p>
</td>
</tr>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r25c1-t46" headers="r1c1-t46">
<pre dir="ltr">
USER_AUDIT_STATEMENT
</pre></td>
<td class="cellalignment2252" headers="r25c1-t46 r1c2-t46">
<p>Lists audit trail records concerning <code dir="ltr">GRANT</code>, <code dir="ltr">REVOKE</code>, <code dir="ltr">AUDIT</code>, <code dir="ltr">NOAUDIT</code>, and <code dir="ltr">ALTER SYSTEM</code> statements issued by the user</p>
</td>
</tr>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r26c1-t46" headers="r1c1-t46">
<pre dir="ltr">
USER_AUDIT_TRAIL
</pre></td>
<td class="cellalignment2252" headers="r26c1-t46 r1c2-t46">
<p>Lists all standard audit trail entries in the <code dir="ltr">AUD$</code> table relating to the current user</p>
</td>
</tr>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r27c1-t46" headers="r1c1-t46">
<pre dir="ltr">
USER_OBJ_AUDIT_OPTS
</pre></td>
<td class="cellalignment2252" headers="r27c1-t46 r1c2-t46">
<p>Describes auditing options on all objects owned by the current user</p>
</td>
</tr>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r28c1-t46" headers="r1c1-t46">
<p><code dir="ltr">V$LOGMNR_CONTENTS</code></p>
</td>
<td class="cellalignment2252" headers="r28c1-t46 r1c2-t46">
<p>Contains log history information. To query this view, you must have the <code dir="ltr">SELECT ANY TRANSACTION</code> privilege.</p>
</td>
</tr>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r29c1-t46" headers="r1c1-t46">
<p><code dir="ltr">V$XML_AUDIT_TRAIL</code></p>
</td>
<td class="cellalignment2252" headers="r29c1-t46 r1c2-t46">
<p>Shows standard, fine-grained, <code dir="ltr">SYS</code>, and mandatory audit records written in XML format files.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblhruleformalwide" --></div>
<!-- class="sect2" -->
<a id="i1007917"></a>
<div id="DBSEG487" class="sect2">
<h3 class="sect2">Using Audit Trail Views to Investigate Suspicious Activities</h3>
<p><a id="sthref1905"></a>This section provides examples that demonstrate how to examine and interpret the information in the audit trail. Suppose you want to audit the database for the following suspicious activities:</p>
<ul>
<li>
<p>Passwords, tablespace settings, and quotas for some database users are altered without authorization.</p>
</li>
<li>
<p>A high number of deadlocks occur, most likely because of users acquiring exclusive table locks.</p>
</li>
<li>
<p>Rows are arbitrarily deleted from the <code dir="ltr">emp</code> table in <code dir="ltr">laurel</code>'s schema.</p>
</li>
</ul>
<p>You suspect the users <code dir="ltr">jward</code> and <code dir="ltr">swilliams</code> of several of these detrimental actions.</p>
<p>To investigate, you issue the following statements (in the order specified):</p>
<pre dir="ltr">
AUDIT ALTER, INDEX, RENAME ON DEFAULT;
CREATE VIEW laurel.employee AS SELECT * FROM laurel.emp;
AUDIT SESSION BY jward, swilliams;
AUDIT ALTER USER;
AUDIT LOCK TABLE
    BY ACCESS
    WHENEVER SUCCESSFUL;
AUDIT DELETE ON laurel.emp
    BY ACCESS
    WHENEVER SUCCESSFUL;
</pre>
<p>The following statements are subsequently issued by the user <code dir="ltr">jward</code>:</p>
<pre dir="ltr">
ALTER USER tsmith QUOTA 0 ON users;
DROP USER djones;
</pre>
<p>The following statements are subsequently issued by the user <code dir="ltr">swilliams</code>:</p>
<pre dir="ltr">
LOCK TABLE laurel.emp IN EXCLUSIVE MODE;
DELETE FROM laurel.emp WHERE mgr = 7698;
ALTER TABLE laurel.emp ALLOCATE EXTENT (SIZE 100K);
CREATE INDEX laurel.ename_index ON laurel.emp (ename);
CREATE PROCEDURE laurel.fire_employee (empid NUMBER) AS
  BEGIN
    DELETE FROM laurel.emp WHERE empno = empid;
  END;
/

EXECUTE laurel.fire_employee(7902);
</pre>
<p>The following sections display the information relevant to your investigation that can be viewed using the audit trail views in the data dictionary:</p>
<ul>
<li>
<p><a href="#i1007158">Listing Active Statement Audit Options</a></p>
</li>
<li>
<p><a href="#i1007171">Listing Active Privilege Audit Options</a></p>
</li>
<li>
<p><a href="#i1007180">Listing Active Object Audit Options for Specific Objects</a></p>
</li>
<li>
<p><a href="#i1007197">Listing Default Object Audit Options</a></p>
</li>
<li>
<p><a href="#i1007208">Listing Audit Records</a></p>
</li>
<li>
<p><a href="#i1007212">Listing Audit Records for the AUDIT SESSION Option</a></p>
</li>
</ul>
<a id="i1007158"></a>
<div id="DBSEG488" class="sect3">
<h4 class="sect3">Listing Active Statement Audit Options</h4>
<p><a id="sthref1906"></a>The <a id="sthref1907"></a>following query returns all the statement audit options that are set:</p>
<pre dir="ltr">
SELECT * FROM DBA_STMT_AUDIT_OPTS;
</pre>
<p>Output similar to the following appears:</p>
<pre dir="ltr">
USER_NAME               AUDIT_OPTION         SUCCESS         FAILURE
--------------------    -------------------  ----------      ---------
JWARD                   DROP ANY CLUSTER     BY ACCESS       BY ACCESS
SWILLIAMS               DEBUG PROCEDURE      BY ACCESS       BY ACCESS
MSEDLAK                 ALTER RESOURCE COST  BY ACCESS       BY ACCESS
</pre></div>
<!-- class="sect3" -->
<a id="i1007171"></a>
<div id="DBSEG489" class="sect3">
<h4 class="sect3">Listing Active Privilege Audit Options</h4>
<p><a id="sthref1908"></a>The following query returns all the privilege audit options that are set:</p>
<pre dir="ltr">
SELECT * FROM DBA_PRIV_AUDIT_OPTS;
</pre>
<p>Output similar to the following appears:</p>
<pre dir="ltr">
USER_NAME           PRIVILEGE            SUCCESS      FAILURE
------------------- -------------------- ---------    ----------
PSMITH              BY ACCESS            BY ACCESS
</pre></div>
<!-- class="sect3" -->
<a id="i1007180"></a>
<div id="DBSEG490" class="sect3">
<h4 class="sect3">Listing Active Object Audit Options for Specific Objects</h4>
<p><a id="sthref1909"></a>The following query returns all audit options set for any objects with names that start with the characters <code dir="ltr">emp</code> and that are contained in the schema of <code dir="ltr">laurel</code>:</p>
<pre dir="ltr">
SELECT * FROM DBA_OBJ_AUDIT_OPTS
    WHERE OWNER = 'LAUREL' AND OBJECT_NAME LIKE 'EMP%';
</pre>
<p>Output similar to the following appears:</p>
<pre dir="ltr">
OWNER   OBJECT_NAME OBJECT_TY ALT AUD COM DEL GRA IND INS LOC ...
-----   ----------- --------- --- --- --- --- --- --- --- --- ...
LAUREL EMP         TABLE     S/S -/- -/- A/- -/- S/S -/- -/- ...
LAUREL EMPLOYEE    VIEW      -/- -/- -/- A/- -/- S/S -/- -/- ...
</pre>
<p>The view returns information about all the audit options for the specified object. The information in the view is interpreted as follows:</p>
<ul>
<li>
<p>A dash (<code dir="ltr">-</code>) indicates that the audit option is not set.</p>
</li>
<li>
<p>The <code dir="ltr">S</code> character indicates that the audit option is set <code dir="ltr">BY SESSION</code>.</p>
</li>
<li>
<p>The <code dir="ltr">A</code> character indicates that the audit option is set <code dir="ltr">BY ACCESS</code>.</p>
</li>
<li>
<p>Each audit option has two possible settings, <code dir="ltr">WHENEVER SUCCESSFUL</code> and <code dir="ltr">WHENEVER NOT SUCCESSFUL</code>, separated by a slash (<code dir="ltr">/</code>). For example, the <code dir="ltr">DELETE</code> audit option for <code dir="ltr">laurel.emp</code> is set <code dir="ltr">BY ACCESS</code> for successful <code dir="ltr">DELETE</code> statements and not set at all for unsuccessful <code dir="ltr">DELETE</code> statements.</p>
</li>
</ul>
</div>
<!-- class="sect3" -->
<a id="i1007197"></a>
<div id="DBSEG491" class="sect3">
<h4 class="sect3">Listing Default Object Audit Options</h4>
<p><a id="sthref1910"></a>The following query returns all default object audit options:</p>
<pre dir="ltr">
SELECT * FROM ALL_DEF_AUDIT_OPTS;
</pre>
<p>Output similar to the following appears:</p>
<pre dir="ltr">
ALT AUD COM DEL GRA IND INS LOC REN SEL UPD REF EXE FBK REA
--- --- --- --- --- --- --- --- --- --- --- --- --- --- ---
S/S -/- -/- -/- -/- S/S -/- -/- S/S -/- -/- -/- -/- /-  -/-
</pre>
<p>Notice that the view returns information similar to the <code dir="ltr">USER_OBJ_AUDIT_OPTS</code> and <code dir="ltr">DBA_OBJ_AUDIT_OPTS</code> views (refer to previous example).</p>
</div>
<!-- class="sect3" -->
<a id="i1007208"></a>
<div id="DBSEG492" class="sect3">
<h4 class="sect3">Listing Audit Records</h4>
<p>The following query lists audit records generated for all objects in the database:</p>
<pre dir="ltr">
SELECT * FROM DBA_AUDIT_OBJECT;
</pre></div>
<!-- class="sect3" -->
<a id="i1007212"></a>
<div id="DBSEG493" class="sect3">
<h4 class="sect3">Listing Audit Records for the AUDIT SESSION Option</h4>
<p>The following query lists audit information corresponding to the <code dir="ltr">AUDIT SESSION</code> statement audit option:</p>
<pre dir="ltr">
SELECT USERNAME, LOGOFF_TIME, LOGOFF_LREAD, LOGOFF_PREAD,
    LOGOFF_LWRITE, LOGOFF_DLOCK
    FROM DBA_AUDIT_SESSION;
</pre>
<p>Output similar to the following appears:</p>
<pre dir="ltr">
USERNAME   LOGOFF_TI LOGOFF_LRE LOGOFF_PRE LOGOFF_LWR LOGOFF_DLO
---------- --------- ---------- ---------- ---------- ----------
JWARD      02-AUG-91         53          2         24          0 
SWILLIAMS  02-AUG-91       3337        256        630          0 
</pre></div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="i1007930"></a>
<div id="DBSEG494" class="sect2">
<h3 class="sect2">Deleting the Audit Trail Views</h3>
<p><a id="sthref1911"></a><a id="sthref1912"></a>If you disable auditing and no longer need the audit trail views, then delete them by connecting to the database as <code dir="ltr">SYS</code> and run the script<a id="sthref1913"></a><a id="sthref1914"></a><a id="sthref1915"></a> file <code dir="ltr">CATNOAUD.SQL</code>. The location of the <code dir="ltr">CATNOAUD.SQL</code> script is operating system-dependent.</p>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" --></div>
<!-- class="chapter" -->
<hr />
<br />
<p style="text-decoration:underline">Footnote Legend</p>
Footnote&nbsp;1:&nbsp;"Nondatabase users" refers to application users who are recognized in the database using the <code dir="ltr">CLIENT_IDENTIFIER</code> attribute. To audit this type of user, you can use a fine-grained audit policy. See <a href="#CEGBAFIA">"Auditing Specific Activities with Fine-Grained Auditing"</a> for more information.<br />
Footnote&nbsp;2:&nbsp;Oracle Database records the actions of both database and nondatabase users in the <code dir="ltr">SYS.AUD$</code> and <code dir="ltr">SYS.FGA_LOG$</code> tables. The <code dir="ltr">CLIENTID<a id="sthref1833"></a></code> column in these tables records the name of the nondatabase user. The <code dir="ltr">USERID</code> column in the <code dir="ltr">SYS.AUD$</code> table and the <code dir="ltr">DBUID</code> column of the <code dir="ltr">SYS.FGA_LOG$</code> store the database user account. For nondatabase users, the <code dir="ltr">USERID</code> and <code dir="ltr">DBUID</code> columns store the database user account that was created to enable the nondatabase user access to the database. The <code dir="ltr">DBA_AUDIT_TRAIL</code>, <code dir="ltr">DBA_FGA_AUDIT_TRAIL</code>, and <code dir="ltr">DBA_COMMON_AUDIT_TRAIL</code> views store this information in the <code dir="ltr">CLIENT_ID</code>, <code dir="ltr">USERNAME</code>, and <code dir="ltr">DB_USER</code> columns.<br /></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment2243">
<tr>
<td class="cellalignment2252">
<table class="cellalignment2248">
<tr>
<td class="cellalignment2247"><a href="data_encryption.htm"><img width="24" height="24" src="../../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment2247"><a href="guidelines.htm"><img width="24" height="24" src="../../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;2006, 2017,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment2254">
<table class="cellalignment2246">
<tr>
<td class="cellalignment2247"><a href="../../index.htm"><img width="24" height="24" src="../../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment2247"><a href="../../nav/portal_booklist.htm"><img width="24" height="24" src="../../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment2247"><a href="toc.htm"><img width="24" height="24" src="../../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment2247"><a href="index.htm"><img width="24" height="24" src="../../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment2247"><a href="../../nav/mindx.htm"><img width="24" height="24" src="../../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment2247"><a href="../../dcommon/html/feedback.htm"><img width="24" height="24" src="../../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
</body>
</html>
