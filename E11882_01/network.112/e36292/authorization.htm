<!DOCTYPE html>
<html lang="en" >
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1">
<meta charset="utf-8">
<title>Configuring Privilege and Role Authorization</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Merged Version 1090" />
<meta name="dcterms.created" content="2017-01-17T12:37:47Z" />
<meta name="robots" content="all" />
<meta name="dcterms.title" content="Database Security Guide" />
<meta name="dcterms.identifier" content="E36292-09" />
<meta name="dcterms.isVersionOf" content="DBSEG" />
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;2006, 2017,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved." />
<link rel="Start" href="../../index.htm" title="Home" type="text/html" />
<link rel="Copyright" href="../../dcommon/html/cpyr.htm" title="Copyright" type="text/html" />

<script type="application/javascript"  src="../../dcommon/js/headfoot.js"></script>
<script type="application/javascript"  src="../../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html" />
<link rel="Index" href="index.htm" title="Index" type="text/html" />
<link rel="Glossary" href="glossary.htm" title="Glossary" type="text/html" />
<link rel="Prev" href="authentication.htm" title="Previous" type="text/html" />
<link rel="Next" href="app_devs.htm" title="Next" type="text/html" />
<link rel="alternate" href="../e36292.pdf" title="PDF version" type="application/pdf" />
<link rel="schema.dcterms" href="http://purl.org/dc/terms/" />
<link rel="stylesheet" href="../../dcommon/css/fusiondoc.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/header.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/footer.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/fonts.css">
<link rel="stylesheet" href="../../dcommon/css/foundation.css">
<link rel="stylesheet" href="../../dcommon/css/codemirror.css">
<link rel="stylesheet" type="text/css" title="Default" href="../../nav/css/html5.css">
<link rel="stylesheet" href="../../dcommon/css/respond-480-tablet.css">
<link rel="stylesheet" href="../../dcommon/css/respond-768-laptop.css">
<link rel="stylesheet" href="../../dcommon/css/respond-1140-deskop.css">
<script type="application/javascript" src="../../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">11/19</span> <!-- End Header -->
<div id="DBSEG004" class="chapter"><a id="BABHFJFJ"></a>
<h1 class="chapter"><span class="secnum">4</span> Configuring Privilege and Role Authorization</h1>
<p><a id="sthref469"></a>This chapter contains:</p>
<ul>
<li>
<p><a href="#BABCHEJB">About Privileges and Roles</a></p>
</li>
<li>
<p><a href="#BABGFGHC">Who Should Be Granted Privileges?</a></p>
</li>
<li>
<p><a href="#CACEIIDF">Granting the SYSDBA and SYSOPER Administrative Privileges to Users</a></p>
</li>
<li>
<p><a href="#BABGGBDG">Managing System Privileges</a></p>
</li>
<li>
<p><a href="#BABCADIB">Managing User Roles</a></p>
</li>
<li>
<p><a href="#BABCIHGB">Managing Object Privileges</a></p>
</li>
<li>
<p><a href="#BABGDGJH">Granting a User Privileges and Roles</a></p>
</li>
<li>
<p><a href="#BABGFIAI">Revoking Privileges and Roles from a User</a></p>
</li>
<li>
<p><a href="#BABHJFCF">Granting to and Revoking from the PUBLIC Role</a></p>
</li>
<li>
<p><a href="#BABIEADD">Granting Roles Using the Operating System or Network</a></p>
</li>
<li>
<p><a href="#BABJEHFA">When Do Grants and Revokes Take Effect?</a></p>
</li>
<li>
<p><a href="#CIHDAJDJ">Managing Fine-Grained Access in PL/SQL Packages and Types</a></p>
</li>
<li>
<p><a href="#BABFHBFH">Finding Information About User Privileges and Roles</a></p>
</li>
</ul>
<a id="BABCHEJB"></a>
<div id="DBSEG124" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">About Privileges and Roles</h2>
<p>Authorization includes primarily two processes:</p>
<ul>
<li>
<p>Permitting only certain users to access, process, or alter data.</p>
</li>
<li>
<p>Applying varying limitations on user access or actions. The limitations placed on (or removed from) users can apply to objects such as schemas, tables, or rows or to resources such as time (CPU, connect, or idle times).</p>
</li>
</ul>
<p><a id="sthref470"></a>A user <span class="bold">privilege</span> is the right to run a particular type of SQL statement, or the right to access an object that belongs to another user, run a PL/SQL package, and so on. The types of privileges are defined by Oracle Database.</p>
<p><a id="sthref471"></a><span class="bold">Roles</span> are created by users (usually administrators) to group together privileges or other roles. They are a way to facilitate the granting of multiple privileges or roles to users.</p>
<p>This section describes the following general categories:</p>
<ul>
<li>
<p><span class="bold">System privileges.</span> These privileges allow the grantee to perform standard administrator tasks in the database. Restrict them only to trusted users. <a href="#BABGGBDG">"Managing System Privileges"</a> describes system privileges in detail.</p>
</li>
<li>
<p><span class="bold">User roles.</span> A <span class="bold">role</span> groups several privileges and roles, so that they can be granted to and revoked from users simultaneously. You must enable the role for a user before the user can use it. See <a href="#BABCADIB">"Managing User Roles"</a> for more information.</p>
</li>
<li>
<p><span class="bold">Object privileges.</span> Each type of object has privileges associated with it. <a href="#BABCIHGB">"Managing Object Privileges"</a> describes how to manage privileges for different types of objects.</p>
</li>
</ul>
</div>
<!-- class="sect1" -->
<a id="BABGFGHC"></a>
<div id="DBSEG99868" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Who Should Be Granted Privileges?</h2>
<p><a id="sthref472"></a>You grant privileges to users so they can accomplish tasks required for their jobs. You should grant a privilege only to a user who requires that privilege to accomplish the necessary work. Excessive granting of unnecessary privileges can compromise security. For example, you never should grant <code dir="ltr">SYSDBA</code> or <code dir="ltr">SYSOPER</code> administrative privilege to users who do not perform administrative tasks.</p>
<p>A user can receive a privilege in two ways:</p>
<ul>
<li>
<p><span class="bold">You can grant privileges to users explicitly.</span> For example, you can explicitly grant to user <code dir="ltr">psmith</code> the privilege to insert records into the <code dir="ltr">employees</code> table.</p>
</li>
<li>
<p><span class="bold"><a id="sthref473"></a>You can grant privileges to a role (a named group of privileges), and then grant the role to one or more users.</span> For example, you can grant the privileges to select, insert, update, and delete records from the <code dir="ltr">employees</code> table to the role named <code dir="ltr">clerk</code>, which in turn you can grant to users <code dir="ltr">psmith</code> and <code dir="ltr">robert</code>.</p>
</li>
</ul>
<p><a id="sthref474"></a>Because roles allow for easier and better management of privileges, you should usually grant privileges to roles and not to specific users.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="guidelines.htm#CHDHFIFG">"Guidelines for Securing User Accounts and Privileges"</a> for best practices to follow when granting privileges</p>
</li>
<li>
<p><a class="olink SQLRF" href="../../server.112/e41084/toc.htm"><span class="italic">Oracle Database SQL Language Reference</span></a> for the complete list of system privileges and their descriptions</p>
</li>
</ul>
</div>
</div>
<!-- class="sect1" -->
<a id="CACEIIDF"></a>
<div id="DBSEG331" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Granting the SYSDBA and SYSOPER Administrative Privileges to Users</h2>
<p>As <a id="sthref475"></a>with all powerful privileges, only grant the <code dir="ltr">SYSDBA</code> and <code dir="ltr">SYSOPER</code> administrative privileges to trusted users. However, be aware that there is a restriction for users whose names have non-ASCII characters (for example, the umlaut in the name <code dir="ltr">H&Uuml;BER</code>). You can grant administrative privileges to these users, but if the Oracle database instance is down, the authentication using the granted privilege is not supported if the user name has non-ASCII characters. If the database instance is up, then the authentication is supported.</p>
</div>
<!-- class="sect1" -->
<a id="BABGGBDG"></a>
<div id="DBSEG99869" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Managing System Privileges</h2>
<p>This section contains:</p>
<ul>
<li>
<p><a href="#BABJECHH">About System Privileges</a></p>
</li>
<li>
<p><a href="#BABJCGBB">Why Is It Important to Restrict System Privileges?</a></p>
</li>
<li>
<p><a href="#i1009082">Granting and Revoking System Privileges</a></p>
</li>
<li>
<p><a href="#i1009087">Who Can Grant or Revoke System Privileges?</a></p>
</li>
<li>
<p><a href="#BABGGBBH">About ANY Privileges and the PUBLIC Role</a></p>
</li>
</ul>
<a id="BABJECHH"></a>
<div id="DBSEG40431" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">About System Privileges</h3>
<p><a id="sthref476"></a><a id="sthref477"></a>A <span class="bold">system privilege</span> is the right to perform a particular action or to perform an action on any schema objects of a particular type. For example, the privileges to create tablespaces and to delete the rows of any table in a database are system privileges.</p>
<p>There are over 100 distinct system privileges. Each system privilege allows a user to perform a particular database operation or class of database operations. <span class="italic">Remember that <a id="sthref478"></a>system privileges are very powerful.</span> Only grant them when necessary to roles and trusted users of the database. You can find a complete list of system privileges and their descriptions in <a class="olink SQLRF01603" href="../../server.112/e41084/statements_9013.htm#SQLRF01603"><span class="italic">Oracle Database SQL Language Reference.</span></a> To find the system privileges that have been granted to a user, you can query the <code dir="ltr">DBA_SYS_PRIVS</code> data dictionary view.</p>
</div>
<!-- class="sect2" -->
<a id="BABJCGBB"></a>
<div id="DBSEG99870" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Why Is It Important to Restrict System Privileges?</h3>
<p>Because <a id="sthref479"></a>system privileges are so powerful, by default the database is configured to prevent typical (non-administrative) users from exercising the <code dir="ltr"><a id="sthref480"></a>ANY</code> system privileges (such as <code dir="ltr">UPDATE ANY TABLE</code>) on the data dictionary. See <a href="guidelines.htm#CHDHFIFG">"Guidelines for Securing User Accounts and Privileges"</a> for additional guidelines about restricting system privileges.</p>
<ul>
<li>
<p><a href="#BABHIFHF">Restricting System Privileges by Securing the Data Dictionary</a></p>
</li>
<li>
<p><a href="#BABFCAFH">Allowing Access to Objects in the SYS Schema</a></p>
</li>
</ul>
<a id="BABHIFHF"></a>
<div id="DBSEG99871" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Restricting System Privileges by Securing the Data Dictionary</h4>
<p>To secure the data dictionary, set<a id="sthref481"></a> the <code dir="ltr"><a id="sthref482"></a><a id="sthref483"></a><a id="sthref484"></a>O7_DICTIONARY_ACCESSIBILITY</code> initialization parameter to <code dir="ltr">FALSE</code>, which is the default value. This feature is called the <a id="sthref485"></a>dictionary protection mechanism.</p>
<p>The <code dir="ltr">O7_DICTIONARY_ACCESSIBILITY</code> initialization parameter controls restrictions on system privileges when you upgrade from Oracle Database release 7 to Oracle8<span class="italic">i</span> and later releases. If the parameter is set to <code dir="ltr">TRUE</code>, then access to objects in the <code dir="ltr">SYS</code> schema is allowed (Oracle Database release 7 behavior). Because the <code dir="ltr">ANY</code> privilege applies to the data dictionary, a malicious user with <code dir="ltr">ANY</code> privilege could access or alter data dictionary tables.</p>
<p>To set the <code dir="ltr">O7_DICTIONARY_ACCESSIBILTY</code> initialization parameter, modify it in the <code dir="ltr">init</code><code dir="ltr"><span class="codeinlineitalic">SID</span></code><code dir="ltr">.ora</code> file. Alternatively, you can log on to SQL*Plus as user <code dir="ltr">SYS</code> with the <code dir="ltr">SYSDBA</code> privilege and then enter an <code dir="ltr">ALTER SYSTEM</code> statement, assuming you have started the database using a server parameter file (SPFILE).</p>
<p><a href="#BABJJIEH">Example 4-1</a> <a id="sthref486"></a>shows how to set the <code dir="ltr">O7_DICTIONARY_ACCESSIBILTY</code> initialization parameter to <code dir="ltr">FALSE</code> by issuing an <code dir="ltr">ALTER SYSTEM</code> statement in SQL*Plus.</p>
<div id="DBSEG99872" class="example">
<p class="titleinexample"><a id="BABJJIEH"></a>Example 4-1 Setting O7_DICTIONARY_ACCESSIBILITY to FALSE</p>
<pre dir="ltr">
ALTER SYSTEM SET O7_DICTIONARY_ACCESSIBILITY=FALSE SCOPE=SPFILE;
</pre></div>
<!-- class="example" -->
<p>When you set <code dir="ltr">O7_DICTIONARY_ACCESSIBILITY</code> to <code dir="ltr">FALSE</code>, system privileges that enable access to objects in any schema (for example, users who have <code dir="ltr">ANY</code> privileges, such as <code dir="ltr">CREATE ANY PROCEDURE</code>) do not allow access to objects in the <code dir="ltr">SYS</code> schema. This means that access to the objects in the <code dir="ltr">SYS</code> schema (data dictionary objects) is restricted to users who connect using the <code dir="ltr">SYSDBA</code> privilege. Remember that the <code dir="ltr">SYS</code> user must log in with either the <code dir="ltr">SYSDBA</code> or <code dir="ltr">SYSOPER</code> privilege; otherwise, an<a id="sthref487"></a><a id="sthref488"></a> <code dir="ltr">ORA-28009: connection as SYS should be as SYSDBA or SYSOPER</code> error is raised. If you set <code dir="ltr">O7_DICTIONARY_ACCESSIBILITY</code> to <code dir="ltr">TRUE</code>, then you would be able to log in to the database as user <code dir="ltr">SYS</code> without having to specify the <code dir="ltr">SYSDBA</code> or <code dir="ltr">SYSOPER</code> privilege.</p>
<p>System privileges that provide access to objects in other schemas do <span class="italic">not</span> give other users access to objects in the <code dir="ltr">SYS</code> schema. For example, the <code dir="ltr">SELECT ANY TABLE</code> privilege allows users to access views and tables in other schemas, but does not enable them to select dictionary objects (base tables of dynamic performance views, regular views, packages, and synonyms). You can, however, grant these users explicit object privileges to access objects in the <code dir="ltr">SYS</code> schema.</p>
<p>See <a class="olink REFRN10133" href="../../server.112/e40402/initparams159.htm#REFRN10133"><span class="italic">Oracle Database Reference</span></a> for more information about the <code dir="ltr">O7_DICTIONARY_ACCESSIBILITY</code> initialization parameter.</p>
</div>
<!-- class="sect3" -->
<a id="BABFCAFH"></a>
<div id="DBSEG99873" class="sect3">
<h4 class="sect3">Allowing Access to Objects in the SYS Schema</h4>
<p><a id="sthref489"></a><a id="sthref490"></a>Users with explicit object privileges or those who connect with administrative privileges (<code dir="ltr">SYSDBA</code>) can access objects in the <code dir="ltr">SYS</code> schema.</p>
<p><a href="#BABHAJCJ">Table 4-1</a> lists roles that you can grant to users who need access to objects in the <code dir="ltr">SYS</code> schema.</p>
<div id="DBSEG99874" class="tblhruleformal">
<p class="titleintable"><a id="sthref491"></a><a id="BABHAJCJ"></a>Table 4-1 Roles to Allow Access to SYS Schema Objects</p>
<table class="cellalignment2250" title="Roles to Allow Access to SYS Schema Objects" summary="Roles to allow access to SYS schema objects" dir="ltr">
<thead>
<tr class="cellalignment2244">
<th class="cellalignment2251" id="r1c1-t3">Role</th>
<th class="cellalignment2251" id="r1c2-t3">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r2c1-t3" headers="r1c1-t3">
<p><code dir="ltr">SELECT_CATALOG_ROLE</code><a id="sthref492"></a></p>
</td>
<td class="cellalignment2252" headers="r2c1-t3 r1c2-t3">
<p>Grant this role to allow users <code dir="ltr">SELECT</code> privileges on data dictionary views.</p>
</td>
</tr>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r3c1-t3" headers="r1c1-t3">
<p><code dir="ltr">EXECUTE_CATALOG_ROLE</code><a id="sthref493"></a></p>
</td>
<td class="cellalignment2252" headers="r3c1-t3 r1c2-t3">
<p>Grant this role to allow users <code dir="ltr">EXECUTE</code> privileges for packages and procedures in the data dictionary.</p>
</td>
</tr>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r4c1-t3" headers="r1c1-t3">
<p><code dir="ltr">DELETE_CATALOG_ROLE</code><a id="sthref494"></a></p>
</td>
<td class="cellalignment2252" headers="r4c1-t3 r1c2-t3">
<p>Grant this role to allow users to delete records from the system audit tables <code dir="ltr">SYS.AUD$</code> and <code dir="ltr">SYS.FGA_LOG$</code>.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblhruleformal" -->
<p>Additionally, you can grant the <code dir="ltr">SELECT ANY DICTIONARY</code> system privilege to users who require access to tables created in the <code dir="ltr">SYS</code> schema. This system privilege allows query access to any object in the <code dir="ltr">SYS</code> schema, including tables created in that schema. It must be granted individually to each user requiring the privilege. It is not included in <code dir="ltr">GRANT ALL PRIVILEGES</code>, but it can be granted through a role.</p>
<div class="infobox-note">
<p class="notep1">Caution:</p>
You should grant these roles and the <code dir="ltr">SELECT ANY DICTIONARY</code> system privilege with extreme care, because the integrity of your system can be compromised by their misuse.</div>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="i1009082"></a>
<div id="DBSEG99875" class="sect2">
<h3 class="sect2">Granting and Revoking System Privileges</h3>
<p><a id="sthref495"></a><a id="sthref496"></a><a id="sthref497"></a>You can <a id="sthref498"></a><a id="sthref499"></a><a id="sthref500"></a>grant or revoke system privileges to users and roles. If you grant system privileges to roles, then you can use the roles to exercise system privileges. For example, roles permit privileges to be made selectively available. Ensure that you follow the separation of duty guidelines described in <a href="guidelines.htm#CHDGIEJE">"Guidelines for Securing Roles"</a>.</p>
<p>Use either of the following methods to grant or revoke system privileges to or from users and roles:</p>
<ul>
<li>
<p><code dir="ltr">GRANT</code> and <code dir="ltr">REVOKE</code> SQL statements</p>
</li>
<li>
<p>Oracle Enterprise Manager Database Control</p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="#BABGDGJH">"Granting a User Privileges and Roles"</a></p>
</li>
<li>
<p><a href="#BABGFIAI">"Revoking Privileges and Roles from a User"</a></p>
</li>
<li>
<p><a href="#BABJEHFA">"When Do Grants and Revokes Take Effect?"</a></p>
</li>
<li>
<p><a href="#BABFHBFH">"Finding Information About User Privileges and Roles"</a></p>
</li>
<li>
<p><a class="olink ADMQS003" href="../../server.112/e10897/em_manage.htm#ADMQS003"><span class="italic">Oracle Database 2 Day DBA</span></a> for more information about Database Control</p>
</li>
</ul>
</div>
</div>
<!-- class="sect2" -->
<a id="i1009087"></a>
<div id="DBSEG99876" class="sect2">
<h3 class="sect2">Who Can Grant or Revoke System Privileges?</h3>
<p><a id="sthref501"></a><a id="sthref502"></a><a id="sthref503"></a><a id="sthref504"></a>Only two types of users can grant system privileges to other users or revoke those privileges from them:</p>
<ul>
<li>
<p>Users who were granted a specific system privilege with the <code dir="ltr">ADMIN</code> <code dir="ltr">OPTION</code></p>
</li>
<li>
<p>Users with the system privilege <code dir="ltr">GRANT</code> <code dir="ltr">ANY</code> <code dir="ltr">PRIVILEGE</code></p>
</li>
</ul>
<p>For this reason, only grant these privileges to trusted users.</p>
</div>
<!-- class="sect2" -->
<a id="BABGGBBH"></a>
<div id="DBSEG99877" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">About ANY Privileges and the PUBLIC Role</h3>
<p>System privileges that use the <code dir="ltr">ANY</code> keyword enable you to set privileges for an entire category of objects in the database. For example, the <code dir="ltr">CREATE ANY PROCEDURE</code> system privilege permits a user to create a procedure anywhere in the database. The behavior of an object created by users with the <code dir="ltr">ANY</code> privilege is not restricted to the schema in which it was created. For example, if user <code dir="ltr">JSMITH</code> has the <code dir="ltr">CREATE ANY PROCEDURE</code> privilege and creates a procedure in the schema <code dir="ltr">JONES</code>, then the procedure will run as <code dir="ltr">JONES</code>. However, <code dir="ltr">JONES</code> may not be aware that the procedure <code dir="ltr">JSMITH</code> created is running as him (<code dir="ltr">JONES</code>). If <code dir="ltr">JONES</code> has <code dir="ltr">DBA</code> privileges, letting <code dir="ltr">JSMITH</code> run a procedure as <code dir="ltr">JONES</code> could pose a security violation.</p>
<p>The <code dir="ltr">PUBLIC</code> role <a id="sthref505"></a>is a special role that every database user account automatically has when the account is created. By default, it has no privileges granted to it, but it does have numerous grants, mostly to Java objects. You cannot drop the <code dir="ltr">PUBLIC</code> role, and a manual grant or revoke of this role has no meaning, because the user account will always assume this role. Because all database user accounts assume the <code dir="ltr">PUBLIC</code> role, it does not appear in the <a id="sthref506"></a><code dir="ltr">DBA_ROLES</code> and <a id="sthref507"></a><code dir="ltr">SESSION_ROLES</code> data dictionary views.</p>
<p>You can grant privileges to the <code dir="ltr"><a id="sthref508"></a><a id="sthref509"></a>PUBLIC</code> role, but remember that this makes the privileges available to every user in the Oracle database. For this reason, be careful about granting privileges to the <code dir="ltr">PUBLIC</code> role, particularly powerful privileges such as the <code dir="ltr">ANY</code> privileges and system privileges. For example, if <code dir="ltr">JSMITH</code> has the <code dir="ltr">CREATE PUBLIC SYNONYM</code> system privilege, he could redefine an interface that he knows everyone else uses, and then point to it with the <code dir="ltr">PUBLIC SYNONYM</code> that he created. Instead of accessing the correct interface, users would access the interface of <code dir="ltr">JSMITH</code>, which could possibly perform illegal activities such as stealing the login credentials of users.</p>
<p>These types of privileges are very powerful and could pose a <a id="sthref510"></a>security risk if given to the wrong person. Be careful about granting privileges using <code dir="ltr">ANY</code> or <code dir="ltr">PUBLIC</code>. As with all privileges, you should follow the principles of "least privilege" when granting these privileges to users.</p>
<p>To protect the data dictionary (the contents of the <code dir="ltr">SYS</code> schema) against users who have one or more of the powerful <code dir="ltr">ANY</code> system privileges, set the <code dir="ltr">O7_DICTIONARY_ACCESSIBILITY</code> initialization parameter to <code dir="ltr">FALSE</code>. You can set this parameter by using an <code dir="ltr">ALTER SYSTEM</code> statement (see <a href="#BABJJIEH">Example 4-1, "Setting O7_DICTIONARY_ACCESSIBILITY to FALSE"</a>) or by modifying the <code dir="ltr">init</code><code dir="ltr"><span class="codeinlineitalic">SID</span></code><code dir="ltr">.ora</code> file. See <a href="guidelines.htm#i1007892">"Guidelines for Securing a Database Installation and Configuration"</a> for additional guidelines.</p>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="BABCADIB"></a>
<div id="DBSEG99878" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Managing User Roles</h2>
<p><a id="sthref511"></a><a id="sthref512"></a>This section contains:</p>
<ul>
<li>
<p><a href="#i1007091">About User Roles</a></p>
</li>
<li>
<p><a href="#i1007401">Predefined Roles in an Oracle Database Installation</a></p>
</li>
<li>
<p><a href="#i1007493">Creating a Role</a></p>
</li>
<li>
<p><a href="#i1008785">Specifying the Type of Role Authorization</a></p>
</li>
<li>
<p><a href="#CHDHCEJH">Dropping Roles</a></p>
</li>
<li>
<p><a href="#CIHEJEEC">Restricting SQL*Plus Users from Using Database Roles</a></p>
</li>
<li>
<p><a href="#i1008520">Securing Role Privileges by Using Secure Application Roles</a></p>
</li>
</ul>
<a id="i1007091"></a>
<div id="DBSEG224" class="sect2"><a id="g1017669"></a>
<h3 class="sect2">About User Roles</h3>
<p>Managing and controlling privileges is easier when you use <span class="bold">roles</span><span class="bold"><a id="sthref513"></a></span>, which are named groups of related privileges that you grant as a group to users or other roles. <a id="sthref514"></a><a id="sthref515"></a>Within a database, each role name must be unique, different from all user names and all other role names. Unlike schema objects, roles are not contained in any schema. Therefore, a user who creates a role can be dropped with no effect on the role.</p>
<p>This section contains:</p>
<ul>
<li>
<p><a href="#i14551">The Functionality of Roles</a></p>
</li>
<li>
<p><a href="#i1009383">Properties of Roles and Why They Are Advantageous</a></p>
</li>
<li>
<p><a href="#i1008309">Common Uses of Roles</a></p>
</li>
<li>
<p><a href="#i1008334">How Roles Affect the Scope of a User's Privileges</a></p>
</li>
<li>
<p><a href="#i1007304">How Roles Work in PL/SQL Blocks</a></p>
</li>
<li>
<p><a href="#i1007654">How Roles Aid or Restrict DDL Usage</a></p>
</li>
<li>
<p><a href="#i1010805">How Operating Systems Can Aid Roles</a></p>
</li>
<li>
<p><a href="#i1007449">How Roles Work in a Distributed Environment</a></p>
</li>
</ul>
<a id="i14551"></a>
<div id="DBSEG44411" class="sect3">
<h4 class="sect3">The Functionality of Roles</h4>
<p>Roles are useful for quickly and easily granting permissions to users. Although you can use Oracle Database-defined roles, you have more control and continuity if you <a id="sthref516"></a><a id="sthref517"></a>create your own roles that contain only the privileges pertaining to your requirements. Oracle may change or remove the privileges in an Oracle Database-defined role, as it has with the <a id="sthref518"></a><a id="sthref519"></a><code dir="ltr">CONNECT</code> role, which now has only the <a id="sthref520"></a><code dir="ltr">CREATE SESSION</code> privilege. Formerly, the <code dir="ltr">CONNECT</code> role had eight other privileges.</p>
<p>Roles <a id="sthref521"></a>have the following functionality:</p>
<ul>
<li>
<p>A role can be granted system or object privileges.</p>
</li>
<li>
<p>Any role can be granted to any database user.</p>
</li>
<li>
<p>Each <a id="sthref522"></a><a id="sthref523"></a>role granted to a user is, at a given time, either enabled or disabled. A user's security domain includes the privileges of all roles currently enabled for the user and excludes the privileges of any roles currently disabled for the user. Oracle Database allows database applications and users to enable and disable roles to provide selective availability of privileges.</p>
</li>
<li>
<p>A <a id="sthref524"></a>role can be granted to other roles. However, a role cannot be granted to itself and cannot be granted circularly. For example, role <code dir="ltr">role1</code> cannot be granted to role <code dir="ltr">role2</code> if role <code dir="ltr">role2</code> has previously been granted to role <code dir="ltr">role1</code>.</p>
</li>
<li>
<p>If <a id="sthref525"></a><a id="sthref526"></a>a role is not password authenticated or a secure application role, then you can grant the role indirectly to the user. An indirectly granted role is a role granted to the user through another role that has already been granted to this user. For example, suppose you grant user <code dir="ltr">psmith</code> the <code dir="ltr">role1</code> role. Then you grant the <code dir="ltr">role2</code> and <code dir="ltr">role3</code> roles to the <code dir="ltr">role1</code> role. Roles <code dir="ltr">role2</code> and <code dir="ltr">role3</code> are now under <code dir="ltr">role1</code>. This means <code dir="ltr">psmith</code> has been indirectly granted the roles <code dir="ltr">role2</code> and <code dir="ltr">role3</code>, in addition to the direct grant of <code dir="ltr">role1</code>. Enabling the direct <code dir="ltr">role1</code> for <code dir="ltr">psmith</code> enables the indirect roles <code dir="ltr">role2</code> and <code dir="ltr">role3</code> for this user as well.</p>
</li>
<li>
<p>Optionally, you can make a directly granted role a default role. You enable or disable the default role status of a directly granted role by using the <code dir="ltr">DEFAULT ROLE</code> clause of the <code dir="ltr">ALTER USER</code> statement. Ensure that the <code dir="ltr">DEFAULT ROLE</code> clause refers only to roles that have been directly granted to the user. To find the directly granted roles for a user, query the <code dir="ltr">DBA_ROLE_PRIVS</code> data dictionary view. This view does not include the user's indirectly granted roles. To find roles that are granted to other roles, query the <code dir="ltr">ROLE_ROLE_PRIVS</code> view.</p>
</li>
<li>
<p>If the role is password authenticated or a secure application role, then you cannot grant it indirectly to the user, nor can you make it a default role. You only can grant this type of role directly to the user. Typically, you enable password authenticated or secure application roles by using the <code dir="ltr">SET ROLE</code> statement.</p>
</li>
</ul>
</div>
<!-- class="sect3" -->
<a id="i1009383"></a>
<div id="DBSEG99879" class="sect3">
<h4 class="sect3">Properties of Roles and Why They Are Advantageous</h4>
<p><a id="sthref527"></a><a href="#CHDCGHAG">Table 4-2</a> describes the properties of roles that enable easier privilege management within a database.</p>
<div id="DBSEG99880" class="tblhruleformal">
<p class="titleintable"><a id="sthref528"></a><a id="CHDCGHAG"></a>Table 4-2 Properties of Roles and Their Description</p>
<table class="cellalignment2250" title="Properties of Roles and Their Description" summary="This table lists and describes role properties." dir="ltr">
<thead>
<tr class="cellalignment2244">
<th class="cellalignment2251" id="r1c1-t6">Property</th>
<th class="cellalignment2251" id="r1c2-t6">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r2c1-t6" headers="r1c1-t6">
<p>Reduced privilege administration</p>
</td>
<td class="cellalignment2252" headers="r2c1-t6 r1c2-t6">
<p>Rather than granting the same set of privileges explicitly to several users, you can grant the privileges for a group of related users to a role, and then only the role must be granted to each member of the group.</p>
</td>
</tr>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r3c1-t6" headers="r1c1-t6">
<p>Dynamic privilege management</p>
</td>
<td class="cellalignment2252" headers="r3c1-t6 r1c2-t6">
<p>If the privileges of a group must change, then only the privileges of the role need to be modified. The security domains of all users granted the group's role automatically reflect the changes made to the role.</p>
</td>
</tr>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r4c1-t6" headers="r1c1-t6">
<p>Selective availability of privileges</p>
</td>
<td class="cellalignment2252" headers="r4c1-t6 r1c2-t6">
<p>You can selectively enable or disable the roles granted to a user. This allows specific control of a user's privileges in any given situation.</p>
</td>
</tr>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r5c1-t6" headers="r1c1-t6">
<p>Application awareness</p>
</td>
<td class="cellalignment2252" headers="r5c1-t6 r1c2-t6">
<p>The data dictionary records which roles exist, so you can design applications to query the dictionary and automatically enable (or disable) selective roles when a user attempts to execute the application by way of a given user name.</p>
</td>
</tr>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r6c1-t6" headers="r1c1-t6">
<p>Application-specific security</p>
</td>
<td class="cellalignment2252" headers="r6c1-t6 r1c2-t6">
<p>You can protect role use with a password. Applications can be created specifically to enable a role when supplied the correct password. Users cannot enable the role if they do not know the password.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblhruleformal" -->
<p><a id="sthref529"></a><a id="sthref530"></a><a id="sthref531"></a>Database administrators often create roles for a database application. You should grant a secure application role all privileges necessary to run the application. You then can grant the secure application role to other roles or users. An application can have several different roles, each granted a different set of privileges that allow for more or less data access while using the application.</p>
<p><a id="sthref532"></a><a id="sthref533"></a>The DBA can create a role with a password to prevent unauthorized use of the privileges granted to the role. Typically, an application is designed so that when it starts, it enables the proper role. As a result, an application user does not need to know the password for an application role.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#i1007654">"How Roles Aid or Restrict DDL Usage"</a> for information about restrictions for procedures</div>
</div>
<!-- class="sect3" -->
<a id="i1008309"></a>
<div id="DBSEG44412" class="sect3">
<h4 class="sect3">Common Uses of Roles</h4>
<p><a id="sthref534"></a>In general, you create a role to serve one of two purposes:</p>
<ul>
<li>
<p>To manage the privileges for a database application (see <a href="#i1011902">"Common Uses of Application Roles"</a>)</p>
</li>
<li>
<p>To manage the privileges for a user group (see <a href="#i1009435">"Common Uses of User Roles"</a>)</p>
</li>
</ul>
<p><a href="#i1011899">Figure 4-1</a> and the sections that follow describe the two uses of roles.</p>
<div id="DBSEG99881" class="figure">
<p class="titleinfigure"><a id="i1011899"></a>Figure 4-1 Common Uses for Roles</p>
<img width="403" height="231" src="img/cncpt082.gif" alt="Description of Figure 4-1 follows" /><br />
<a id="sthref535" href="img_text/cncpt082.htm">Description of ''Figure 4-1 Common Uses for Roles''</a><br />
<br /></div>
<!-- class="figure" -->
<a id="i1011902"></a>
<div id="DBSEG44218" class="sect4">
<h5 class="sect4">Common Uses of Application Roles</h5>
<p><a id="sthref536"></a><a id="sthref537"></a>Grant an application role all privileges necessary to run a given database application. Then, grant the secure application role to other roles or to specific users. An application can have several different roles, with each role assigned a different set of privileges that allow for more or less data access while using the application.</p>
</div>
<!-- class="sect4" -->
<a id="i1009435"></a>
<div id="DBSEG44219" class="sect4">
<h5 class="sect4">Common Uses of User Roles</h5>
<p><a id="sthref538"></a><a id="sthref539"></a>Create a user role for a group of database users with common privilege requirements. You can manage user privileges by granting secure application roles and privileges to the user role and then granting the user role to appropriate users.</p>
</div>
<!-- class="sect4" --></div>
<!-- class="sect3" -->
<a id="i1008334"></a>
<div id="DBSEG99882" class="sect3">
<h4 class="sect3">How Roles Affect the Scope of a User's Privileges</h4>
<p><a id="sthref540"></a><a id="sthref541"></a>Each role and user has its own unique security domain. The security domain of a role includes the privileges granted to the role plus those privileges granted to any roles that are granted to the role.</p>
<p>The security domain of a user includes privileges on all schema objects in the corresponding schema, the privileges granted to the user, and the privileges of roles granted to the user that are <span class="bold">currently enabled</span>. (A role can be simultaneously enabled for one user and disabled for another.) <a id="sthref542"></a><a id="sthref543"></a>This domain also includes the privileges and roles granted to the role <code dir="ltr">PUBLIC</code>. The <code dir="ltr">PUBLIC</code> role represents all users in the database.</p>
</div>
<!-- class="sect3" -->
<a id="i1007304"></a>
<div id="DBSEG50010" class="sect3">
<h4 class="sect3">How Roles Work in PL/SQL Blocks</h4>
<p>The <a id="sthref544"></a><a id="sthref545"></a><a id="sthref546"></a>use of roles in a PL/SQL block depends on whether it is an anonymous block or a named block (stored procedure, function, or trigger), and whether it executes with definer's rights or invoker's rights.</p>
<div id="DBSEG99883" class="sect4"><a id="sthref547"></a>
<h5 class="sect4">Roles Used in Named Blocks with Definer's Rights</h5>
<p><a id="sthref548"></a><a id="sthref549"></a>All roles are disabled in any named PL/SQL block (stored procedure, function, or trigger) that executes with definer's rights. Roles are not used for privilege checking and you cannot set roles within a definer's rights procedure.</p>
<p><a id="sthref550"></a>The <code dir="ltr">SESSION_ROLES</code> view shows all roles that are currently enabled. If a named PL/SQL block that executes with definer's rights queries <code dir="ltr">SESSION_ROLES</code>, then the query does not return any rows.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink REFRN" href="../../server.112/e40402/toc.htm"><span class="italic">Oracle Database Reference</span></a></div>
</div>
<!-- class="sect4" -->
<div id="DBSEG99884" class="sect4"><a id="sthref551"></a>
<h5 class="sect4">Roles Used in Named Blocks with Invoker's Rights and Anonymous PL/SQL Blocks</h5>
<p><a id="sthref552"></a><a id="sthref553"></a><a id="sthref554"></a>Named PL/SQL blocks that execute with invoker's rights and anonymous PL/SQL blocks are executed based on privileges granted through enabled roles. Current roles are used for privilege checking within an invoker's rights PL/SQL block. You can use dynamic SQL to set a role in the session.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a class="olink LNPLS00809" href="../../appdev.112/e25519/subprograms.htm#LNPLS00809"><span class="italic">Oracle Database PL/SQL Language Reference</span></a> for an explanation of how invoker's and definer's rights can be used for name resolution and privilege checking</p>
</li>
<li>
<p><a class="olink LNPLS011" href="../../appdev.112/e25519/dynamic.htm#LNPLS011"><span class="italic">Oracle Database PL/SQL Language Reference</span></a> for information about dynamic SQL in PL/SQL</p>
</li>
</ul>
</div>
</div>
<!-- class="sect4" --></div>
<!-- class="sect3" -->
<a id="i1007654"></a>
<div id="DBSEG99885" class="sect3">
<h4 class="sect3">How Roles Aid or Restrict DDL Usage</h4>
<p><a id="sthref555"></a><a id="sthref556"></a>A user requires one or more privileges to successfully execute a DDL statement, depending on the statement. For example, to create a table, the user must have the <code dir="ltr">CREATE</code> <code dir="ltr">TABLE</code> or <code dir="ltr">CREATE</code> <code dir="ltr">ANY</code> <code dir="ltr">TABLE</code> system privilege. To create a view of a table that belongs to another user, the creator requires the <code dir="ltr">CREATE VIEW</code> or <code dir="ltr">CREATE</code> <code dir="ltr">ANY</code> <code dir="ltr">VIEW</code> system privilege and either the <code dir="ltr">SELECT</code> <code dir="ltr"><span class="codeinlineitalic">object</span></code> privilege for the table or the <code dir="ltr">SELECT</code> <code dir="ltr">ANY</code> <code dir="ltr">TABLE</code> system privilege.</p>
<p><a id="sthref557"></a><a id="sthref558"></a><a id="sthref559"></a>Oracle Database avoids the dependencies on privileges received by way of roles by restricting the use of specific privileges in certain DDL statements. The following rules describe these privilege restrictions concerning DDL statements:</p>
<ul>
<li>
<p>All system privileges and object privileges that permit a user to perform a DDL operation are usable when received through a role. For example:</p>
<ul>
<li>
<p><span class="bold">System privileges:</span> <code dir="ltr">CREATE</code> <code dir="ltr">TABLE</code>, <code dir="ltr">CREATE</code> <code dir="ltr">VIEW,</code> and <code dir="ltr">CREATE</code> <code dir="ltr">PROCEDURE</code> privileges</p>
</li>
<li>
<p><span class="bold">Object privileges:</span> <code dir="ltr">ALTER</code> and <code dir="ltr">INDEX</code> privileges for a table</p>
<p>You cannot use the <code dir="ltr">REFERENCES</code> object privilege for a table to define the foreign key of a table if the privilege is received through a role.</p>
</li>
</ul>
</li>
<li>
<p>All system privileges and object privileges that allow a user to perform a DML operation that is required to issue a DDL statement are <span class="italic">not</span> usable when received through a role. The security domain does not contain roles when a <code dir="ltr">CREATE VIEW</code> statement is used. For example, a user who is granted the <code dir="ltr">SELECT</code> <code dir="ltr">ANY</code> <code dir="ltr">TABLE</code> system privilege or the <code dir="ltr">SELECT</code> <code dir="ltr"><span class="codeinlineitalic">object</span></code> privilege for a table through a role cannot use either of these privileges to create a view on a table that belongs to another user. This is because views are definer's rights objects, so when creating them you cannot use any privileges (neither system privileges or object privileges) granted to you through a role. If the privilege is granted directly to you, then you can use the privilege. However, if the privilege is revoked at a later time, then the view definition becomes invalid ("contains errors") and must recompiled before it can be used again.</p>
</li>
</ul>
<p>The following example further clarifies the permitted and restricted uses of privileges received through roles.</p>
<p>Assume that a user is:</p>
<ul>
<li>
<p>Granted a role that has the <code dir="ltr">CREATE</code> <code dir="ltr">VIEW</code> system privilege</p>
</li>
<li>
<p>Directly granted a role that has the <code dir="ltr">SELECT</code> <code dir="ltr"><span class="codeinlineitalic">object</span></code> privilege for the <code dir="ltr">employees</code> table</p>
</li>
<li>
<p>Directly granted the <code dir="ltr">SELECT</code> <code dir="ltr"><span class="codeinlineitalic">object</span></code> privilege for the <code dir="ltr">departments</code> table</p>
</li>
</ul>
<p>Given these directly and indirectly granted privileges:</p>
<ul>
<li>
<p>The user can issue <code dir="ltr">SELECT</code> statements on both the <code dir="ltr">employees</code> and <code dir="ltr">departments</code> tables.</p>
</li>
<li>
<p>Although the user has both the <code dir="ltr">CREATE</code> <code dir="ltr">VIEW</code> and <code dir="ltr">SELECT</code> privilege for the <code dir="ltr">employees</code> table through a role, the user cannot create a view on the <code dir="ltr">employees</code> table, because the <code dir="ltr">SELECT</code> <code dir="ltr"><span class="codeinlineitalic">object</span></code> privilege for the <code dir="ltr">employees</code> table was granted through a role.</p>
</li>
<li>
<p>The user can create a view on the <code dir="ltr">departments</code> table, because the user has the <code dir="ltr">CREATE</code>&nbsp;<code dir="ltr">VIEW</code> privilege through a role and the <code dir="ltr">SELECT</code> privilege for the <code dir="ltr">departments</code> table directly.</p>
</li>
</ul>
</div>
<!-- class="sect3" -->
<a id="i1010805"></a>
<div id="DBSEG44417" class="sect3">
<h4 class="sect3">How Operating Systems Can Aid Roles</h4>
<p><a id="sthref560"></a><a id="sthref561"></a>In some environments, you can administer database security using the operating system. The operating system can be used to grant and revoke database roles and to manage their password authentication. This capability is not available on all operating systems.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
Your operating system-specific Oracle Database documentation for details about managing roles through the operating system</div>
</div>
<!-- class="sect3" -->
<a id="i1007449"></a>
<div id="DBSEG99886" class="sect3">
<h4 class="sect3">How Roles Work in a Distributed Environment</h4>
<p>When you use roles in a distributed database environment, ensure that all needed roles are set as the default roles for a distributed (remote) session. These roles cannot be enabled when the user connects to a remote database from within a local database session. For example, the user cannot execute a remote procedure that attempts to enable a role at the remote site.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink HETER" href="../../server.112/e11050/toc.htm"><span class="italic">Oracle Database Heterogeneous Connectivity User's Guide</span></a></div>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="i1007401"></a>
<div id="DBSEG4414" class="sect2">
<h3 class="sect2">Predefined Roles in an Oracle Database Installation</h3>
<p>Oracle Database provides a set of predefined roles to help in database administration. <a id="sthref562"></a>These roles, listed in <a href="#g2199949">Table 4-3</a>, are automatically defined for Oracle databases when you run the standard scripts that are part of database creation. If you install other options or products, then other predefined roles may be created.</p>
<div id="DBSEG99887" class="tblhruleformalwide">
<p class="titleintable"><a id="sthref563"></a><a id="g2199949"></a>Table 4-3 Oracle Database Predefined Roles</p>
<table class="cellalignment2250" title="Oracle Database Predefined Roles" summary="Column 1 contains the predefined roles. Column 2 describes the purpose of the role and contains cross-references to additional information." dir="ltr">
<thead>
<tr class="cellalignment2244">
<th class="cellalignment2251" id="r1c1-t12">Predefined Role</th>
<th class="cellalignment2251" id="r1c2-t12">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r2c1-t12" headers="r1c1-t12">
<p><code dir="ltr">ADM_PARALLEL_EXECUTE_TASK</code> <a id="sthref564"></a><a id="sthref565"></a></p>
</td>
<td class="cellalignment2252" headers="r2c1-t12 r1c2-t12">
<p>Provides privileges to update table data in parallel by using the <code dir="ltr">DBMS_PARALLEL_EXECUTE</code> PL/SQL package.</p>
<p><span class="bold">See Also:</span> <a class="olink ARPLS233" href="../../appdev.112/e40758/d_parallel_ex.htm#ARPLS233"><span class="italic">Oracle Database PL/SQL Packages and Types Reference</span></a> for more information about the <code dir="ltr">DBMS_PARALLEL_EXECUTE</code> PL/SQL package.</p>
</td>
</tr>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r3c1-t12" headers="r1c1-t12">
<p><code dir="ltr">AQ_ADMINISTRATOR_ROLE<a id="sthref566"></a><a id="sthref567"></a></code></p>
</td>
<td class="cellalignment2252" headers="r3c1-t12 r1c2-t12">
<p>Provides privileges to administer Advanced Queuing. Includes <code dir="ltr">ENQUEUE ANY QUEUE</code>, <code dir="ltr">DEQUEUE ANY QUEUE</code>, and <code dir="ltr">MANAGE ANY QUEUE</code>, <code dir="ltr">SELECT</code> privileges on Advanced Queuing tables and <code dir="ltr">EXECUTE</code> privileges on Advanced Queuing packages.</p>
</td>
</tr>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r4c1-t12" headers="r1c1-t12">
<p><code dir="ltr">AQ_USER_ROLE<a id="sthref568"></a><a id="sthref569"></a></code></p>
</td>
<td class="cellalignment2252" headers="r4c1-t12 r1c2-t12">
<p>Obsolete, but kept mainly for release 8.0 compatibility. Provides <code dir="ltr">EXECUTE</code> privileges on the <code dir="ltr">DBMS_AQ</code> and <code dir="ltr">DBMS_AQIN</code> packages.</p>
</td>
</tr>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r5c1-t12" headers="r1c1-t12">
<p><code dir="ltr">AUTHENTICATEDUSER</code><a id="sthref570"></a><a id="sthref571"></a></p>
</td>
<td class="cellalignment2252" headers="r5c1-t12 r1c2-t12">
<p>Used by the XDB protocols to define any user who has logged in to the system.</p>
</td>
</tr>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r6c1-t12" headers="r1c1-t12">
<p><code dir="ltr">CAPI_USER_ROLE</code> <a id="sthref572"></a><a id="sthref573"></a></p>
</td>
<td class="cellalignment2252" headers="r6c1-t12 r1c2-t12">
<p>Provides access to packages used for implementing Information Lifecycle Management (ILM) and hierarchical storage and other applications.</p>
<p><span class="bold">See Also:</span> <a class="olink ADLOB" href="../../appdev.112/e18294/toc.htm"><span class="italic">Oracle Database SecureFiles and Large Objects Developer's Guide</span></a></p>
</td>
</tr>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r7c1-t12" headers="r1c1-t12">
<p><code dir="ltr">CONNECT</code> <a id="sthref574"></a><a id="sthref575"></a></p>
</td>
<td class="cellalignment2252" headers="r7c1-t12 r1c2-t12">
<p>Provides the <code dir="ltr">CREATE SESSION</code> system privilege.</p>
<p>This role is provided for compatibility with previous releases of Oracle Database. You can determine the privileges encompassed by this role by querying the <code dir="ltr">DBA_SYS_PRIVS</code> data dictionary view.</p>
<p><span class="bold">Note:</span> Oracle recommends that you design your own roles for database security rather than relying on this role. This role may not be created automatically by future releases of Oracle Database.</p>
<p><span class="bold">See Also:</span> <a class="olink REFRN23274" href="../../server.112/e40402/statviews_5041.htm#REFRN23274"><span class="italic">Oracle Database Reference</span></a> for a description of the <code dir="ltr">DBA_SYS_PRIVS</code> view</p>
</td>
</tr>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r8c1-t12" headers="r1c1-t12">
<p><code dir="ltr">CSW_USR_ROLE</code><a id="sthref576"></a><a id="sthref577"></a></p>
</td>
<td class="cellalignment2252" headers="r8c1-t12 r1c2-t12">
<p>Provides user privileges to manage the Catalog Services for the Web (CSW) component of Oracle Spatial.</p>
<p><span class="bold">See Also:</span> <a class="olink SPATL425" href="../../appdev.112/e11830/sdo_csw.htm#SPATL425"><span class="italic">Oracle Spatial Developer's Guide</span></a> for more information</p>
</td>
</tr>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r9c1-t12" headers="r1c1-t12">
<p><code dir="ltr">CTXAPP</code><a id="sthref578"></a><a id="sthref579"></a></p>
</td>
<td class="cellalignment2252" headers="r9c1-t12 r1c2-t12">
<p>Provides privileges to create Oracle Text indexes and index preferences, and to use PL/SQL packages. This role should be granted to Oracle Text users.</p>
<p><span class="bold">See Also:</span> <a class="olink CCAPP" href="../../text.112/e24435/toc.htm"><span class="italic">Oracle Text Application Developer's Guide</span></a> for more information</p>
</td>
</tr>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r10c1-t12" headers="r1c1-t12">
<p><code dir="ltr">CWM_USER</code><a id="sthref580"></a><a id="sthref581"></a></p>
</td>
<td class="cellalignment2252" headers="r10c1-t12 r1c2-t12">
<p>Provides privileges to manage Common Warehouse Metadata (CWM), which is a repository standard used by Oracle data warehousing and decision support.</p>
<p><span class="bold">See Also:</span> <a class="olink DWHSG" href="../../server.112/e25554/toc.htm"><span class="italic">Oracle Database Data Warehousing Guide</span></a> for more information</p>
</td>
</tr>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r11c1-t12" headers="r1c1-t12">
<p><code dir="ltr">DATAPUMP_EXP_FULL_DATABASE</code><a id="sthref582"></a><a id="sthref583"></a></p>
</td>
<td class="cellalignment2252" headers="r11c1-t12 r1c2-t12">
<p>Provides privileges to export data from an Oracle database using Oracle Data Pump.</p>
<p><span class="bold">Caution:</span> This is a very powerful role because it provides a user access to any data in any schema in the database. Use caution when granting this role to users.</p>
<p><span class="bold">See Also:</span> <a class="olink SUTIL200" href="../../server.112/e22490/dp_export.htm#SUTIL200"><span class="italic">Oracle Database Utilities</span></a> for more information</p>
</td>
</tr>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r12c1-t12" headers="r1c1-t12">
<p><code dir="ltr">DATAPUMP_IMP_FULL_DATABASE</code><a id="sthref584"></a><a id="sthref585"></a></p>
</td>
<td class="cellalignment2252" headers="r12c1-t12 r1c2-t12">
<p>Provides privileges to import data into an Oracle database using Oracle Data Pump.</p>
<p><span class="bold">Caution:</span> This is a very powerful role because it provides a user access to any data in any schema in the database. Use caution when granting this role to users.</p>
<p><span class="bold">See Also:</span> <a class="olink SUTIL300" href="../../server.112/e22490/dp_import.htm#SUTIL300"><span class="italic">Oracle Database Utilities</span></a> for more information</p>
</td>
</tr>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r13c1-t12" headers="r1c1-t12">
<p><code dir="ltr">DBA</code><a id="sthref586"></a><a id="sthref587"></a></p>
</td>
<td class="cellalignment2252" headers="r13c1-t12 r1c2-t12">
<p>Provides all system privileges that were created with the <code dir="ltr">ADMIN</code> option.</p>
<p>This role is provided for compatibility with previous releases of Oracle Database. You can determine the privileges encompassed by this role by querying the <code dir="ltr">DBA_SYS_PRIVS</code> data dictionary view.</p>
<p><span class="bold">Note:</span> Oracle recommends that you design your own roles for database security rather than relying on this role. This role may not be created automatically by future releases of Oracle Database.</p>
<p><span class="bold">See Also:</span> <a class="olink REFRN23274" href="../../server.112/e40402/statviews_5041.htm#REFRN23274"><span class="italic">Oracle Database Reference</span></a> for a description of the <code dir="ltr">DBA_SYS_PRIVS</code> view</p>
</td>
</tr>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r14c1-t12" headers="r1c1-t12">
<p><code dir="ltr">DBFS_ROLE</code> <a id="sthref588"></a><a id="sthref589"></a></p>
</td>
<td class="cellalignment2252" headers="r14c1-t12 r1c2-t12">
<p>Provides access to the DBFS (the Database Filesystem) packages and objects.</p>
<p><span class="bold">See Also:</span> <a class="olink ADLOB46020" href="../../appdev.112/e18294/adlob_cont.htm#ADLOB46020"><span class="italic">Oracle Database SecureFiles and Large Objects Developer's Guide</span></a></p>
</td>
</tr>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r15c1-t12" headers="r1c1-t12">
<p><code dir="ltr">DELETE_CATALOG_ROLE<a id="sthref590"></a><a id="sthref591"></a></code><a id="sthref592"></a></p>
</td>
<td class="cellalignment2252" headers="r15c1-t12 r1c2-t12">
<p>Provides the <code dir="ltr">DELETE</code> privilege on the system audit table (<code dir="ltr">AUD$</code>).</p>
</td>
</tr>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r16c1-t12" headers="r1c1-t12">
<p><code dir="ltr">EJBCLIENT</code><a id="sthref593"></a><a id="sthref594"></a></p>
</td>
<td class="cellalignment2252" headers="r16c1-t12 r1c2-t12">
<p>Provides privileges to connect to EJBs from a Java stored procedure.</p>
</td>
</tr>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r17c1-t12" headers="r1c1-t12">
<p><code dir="ltr">EXECUTE_CATALOG_ROLE<a id="sthref595"></a><a id="sthref596"></a></code></p>
</td>
<td class="cellalignment2252" headers="r17c1-t12 r1c2-t12">
<p>Provides <code dir="ltr">EXECUTE</code> privileges on objects in the data dictionary.</p>
</td>
</tr>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r18c1-t12" headers="r1c1-t12">
<p><code dir="ltr">EXP_FULL_DATABASE</code><a id="sthref597"></a><a id="sthref598"></a></p>
</td>
<td class="cellalignment2252" headers="r18c1-t12 r1c2-t12">
<p>Provides the privileges required to perform full and incremental database exports using the Export utility (later replaced with Oracle Data Pump). It includes these privileges: <code dir="ltr">SELECT ANY TABLE</code>, <code dir="ltr">BACKUP ANY TABLE</code>, <code dir="ltr">EXECUTE ANY PROCEDURE</code>, <code dir="ltr">EXECUTE ANY TYPE</code>, <code dir="ltr">ADMINISTER RESOURCE MANAGER</code>, and <code dir="ltr">INSERT</code>, <code dir="ltr">DELETE</code>, and <code dir="ltr">UPDATE</code> on the tables <code dir="ltr">SYS.INCVID</code>, <code dir="ltr">SYS.INCFIL</code>, and <code dir="ltr">SYS.INCEXP</code>. Also the following roles: <code dir="ltr">EXECUTE_CATALOG_ROLE</code> and <code dir="ltr">SELECT_CATALOG_ROLE</code>.</p>
<p>This role is provided for convenience in using the export and import utilities.</p>
<p><span class="bold">Caution:</span> This is a very powerful role because it provides a user access to any data in any schema in the database. Use caution when granting this role to users.</p>
<p><span class="bold">See Also:</span> <a class="olink SUTIL" href="../../server.112/e22490/toc.htm"><span class="italic">Oracle Database Utilities</span></a> for more information</p>
</td>
</tr>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r19c1-t12" headers="r1c1-t12">
<p><code dir="ltr">GATHER_SYSTEM_STATISTICS</code><a id="sthref599"></a><a id="sthref600"></a></p>
</td>
<td class="cellalignment2252" headers="r19c1-t12 r1c2-t12">
<p>Provides privileges to update system statistics, which are collected using the <code dir="ltr">DBMS_STATS.GATHER_SYSTEM_STATISTICS</code> procedure</p>
<p><span class="bold">See Also:</span> <a class="olink PFGRF003" href="../../server.112/e41573/stats.htm#PFGRF003"><span class="italic">Oracle Database Performance Tuning Guide</span></a> for more information about managing optimizer statistics</p>
</td>
</tr>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r20c1-t12" headers="r1c1-t12">
<p><code dir="ltr">GLOBAL_AQ_USER_ROLE</code><a id="sthref601"></a><a id="sthref602"></a></p>
</td>
<td class="cellalignment2252" headers="r20c1-t12 r1c2-t12">
<p>Provides privileges to establish a connection to an LDAP server, for use with Oracle Streams AQ.</p>
<p><span class="bold">See Also:</span> <a class="olink ADQUE" href="../../server.112/e11013/toc.htm"><span class="italic">Oracle Streams Advanced Queuing User's Guide</span></a> for more information</p>
</td>
</tr>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r21c1-t12" headers="r1c1-t12">
<p><code dir="ltr">HS_ADMIN_EXECUTE_ROLE</code> <a id="sthref603"></a><a id="sthref604"></a></p>
</td>
<td class="cellalignment2252" headers="r21c1-t12 r1c2-t12">
<p>Provides the <code dir="ltr">EXECUTE</code> privilege for users who want to use the Heterogeneous Services (HS) PL/SQL packages.</p>
<p><span class="bold">See Also:</span> <a class="olink HETER" href="../../server.112/e11050/toc.htm"><span class="italic">Oracle Database Heterogeneous Connectivity User's Guide</span></a> for more information</p>
</td>
</tr>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r22c1-t12" headers="r1c1-t12">
<p><code dir="ltr">HS_ADMIN_ROLE</code><a id="sthref605"></a><a id="sthref606"></a></p>
</td>
<td class="cellalignment2252" headers="r22c1-t12 r1c2-t12">
<p>Provides privileges to both use the Heterogeneous Services (HS) PL/SQL packages and query the HS-related data dictionary views.</p>
<p><span class="bold">See Also:</span> <a class="olink HETER" href="../../server.112/e11050/toc.htm"><span class="italic">Oracle Database Heterogeneous Connectivity User's Guide</span></a> for more information</p>
</td>
</tr>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r23c1-t12" headers="r1c1-t12">
<p><code dir="ltr">HS_ADMIN_SELECT_ROLE</code> <a id="sthref607"></a><a id="sthref608"></a></p>
</td>
<td class="cellalignment2252" headers="r23c1-t12 r1c2-t12">
<p>Provides privileges to query the Heterogeneous Services data dictionary views.</p>
<p><span class="bold">See Also:</span> <a class="olink HETER" href="../../server.112/e11050/toc.htm"><span class="italic">Oracle Database Heterogeneous Connectivity User's Guide</span></a> for more information</p>
</td>
</tr>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r24c1-t12" headers="r1c1-t12">
<p><code dir="ltr">IMP_FULL_DATABASE</code> <a id="sthref609"></a><a id="sthref610"></a></p>
</td>
<td class="cellalignment2252" headers="r24c1-t12 r1c2-t12">
<p>Provides the privileges required to perform full database imports using the Import utility (later replaced with Oracle Data Pump). Includes an extensive list of system privileges (use view <code dir="ltr">DBA_SYS_PRIVS</code> to view privileges) and the following roles: <code dir="ltr">EXECUTE_CATALOG_ROLE</code> and <code dir="ltr">SELECT_CATALOG_ROLE</code>.</p>
<p>This role is provided for convenience in using the export and import utilities.</p>
<p><span class="bold">Caution:</span> This is a very powerful role because it provides a user access to any data in any schema in the database. Use caution when granting this role to users.s.</p>
<p><span class="bold">See Also:</span> <a class="olink SUTIL" href="../../server.112/e22490/toc.htm"><span class="italic">Oracle Database Utilities</span></a> for more information</p>
</td>
</tr>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r25c1-t12" headers="r1c1-t12">
<p><code dir="ltr">JAVADEBUGPRIV</code><a id="sthref611"></a><a id="sthref612"></a></p>
</td>
<td class="cellalignment2252" headers="r25c1-t12 r1c2-t12">
<p>Provides privileges to run the Oracle Database Java applications debugger.</p>
<p><span class="bold">See Also:</span> <a class="olink JJDEV" href="../../java.112/e10588/toc.htm"><span class="italic">Oracle Database Java Developer's Guide</span></a> for more information about managing security for Oracle Java applications</p>
</td>
</tr>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r26c1-t12" headers="r1c1-t12">
<p><code dir="ltr">JAVAIDPRIV</code><a id="sthref613"></a><a id="sthref614"></a></p>
</td>
<td class="cellalignment2252" headers="r26c1-t12 r1c2-t12">
<p>Deprecated for this release.</p>
</td>
</tr>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r27c1-t12" headers="r1c1-t12">
<p><code dir="ltr">JAVASYSPRIV</code><a id="sthref615"></a><a id="sthref616"></a></p>
</td>
<td class="cellalignment2252" headers="r27c1-t12 r1c2-t12">
<p>Provides major permissions to use Java2, including updating Oracle JVM-protected packages.</p>
<p><span class="bold">See Also:</span> <a class="olink JJDEV" href="../../java.112/e10588/toc.htm"><span class="italic">Oracle Database Java Developer's Guide</span></a> for more information about managing security for Oracle Java applications</p>
</td>
</tr>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r28c1-t12" headers="r1c1-t12">
<p><code dir="ltr">JAVAUSERPRIV</code><a id="sthref617"></a><a id="sthref618"></a></p>
</td>
<td class="cellalignment2252" headers="r28c1-t12 r1c2-t12">
<p>Provides limited permissions to use Java2.</p>
<p><span class="bold">See Also:</span> <a class="olink JJDEV" href="../../java.112/e10588/toc.htm"><span class="italic">Oracle Database Java Developer's Guide</span></a> for more information about managing security for Oracle Java applications</p>
</td>
</tr>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r29c1-t12" headers="r1c1-t12">
<p><code dir="ltr">JAVA_ADMIN</code><a id="sthref619"></a><a id="sthref620"></a></p>
</td>
<td class="cellalignment2252" headers="r29c1-t12 r1c2-t12">
<p>Provides administrative permissions to update policy tables for Oracle Database Java applications.</p>
<p><span class="bold">See Also:</span> <a class="olink JJDEV" href="../../java.112/e10588/toc.htm"><span class="italic">Oracle Database Java Developer's Guide</span></a> for more information about managing security for Oracle Java applications</p>
</td>
</tr>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r30c1-t12" headers="r1c1-t12">
<p><code dir="ltr">JAVA_DEPLOY</code><a id="sthref621"></a><a id="sthref622"></a></p>
</td>
<td class="cellalignment2252" headers="r30c1-t12 r1c2-t12">
<p>Provides privileges to deploy <code dir="ltr">ncomp</code> DLLs into the <code dir="ltr">javavm/admin</code> directory using the <code dir="ltr">ncomp</code> and <code dir="ltr">deployns</code> utilities. Without this role, the <code dir="ltr">javavm/deploy</code> and <code dir="ltr">javavm/admin</code> directories can be accessible.</p>
<p><span class="bold">See Also:</span> <a class="olink ADFNS" href="../../appdev.112/e41502/toc.htm"><span class="italic">Oracle Database Advanced Application Developer's Guide</span></a> for more information</p>
</td>
</tr>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r31c1-t12" headers="r1c1-t12">
<p><code dir="ltr">JMXSERVER</code><a id="sthref623"></a><a id="sthref624"></a></p>
</td>
<td class="cellalignment2252" headers="r31c1-t12 r1c2-t12">
<p>Provides privileges to start and maintain a JMX agent in a database session.</p>
<p><span class="bold">See Also:</span> <a class="olink JJDEV02000" href="../../java.112/e10588/chtwo.htm#JJDEV02000"><span class="italic">Oracle Database Java Developer's Guide</span></a> for more information about managing Oracle Java applications</p>
</td>
</tr>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r32c1-t12" headers="r1c1-t12">
<p><code dir="ltr">LBAC_DBA</code><a id="sthref625"></a><a id="sthref626"></a></p>
</td>
<td class="cellalignment2252" headers="r32c1-t12 r1c2-t12">
<p>Provides permissions to use the <code dir="ltr">SA_SYSDBA</code> PL/SQL package.</p>
<p><span class="bold">See Also:</span> <a class="olink OLSAG044" href="../../network.112/e10745/creatpol.htm#OLSAG044"><span class="italic">Oracle Label Security Administrator's Guide</span></a> for more information</p>
</td>
</tr>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r33c1-t12" headers="r1c1-t12">
<p><code dir="ltr">LOGSTDBY_ADMINISTRATOR</code><a id="sthref627"></a><a id="sthref628"></a></p>
</td>
<td class="cellalignment2252" headers="r33c1-t12 r1c2-t12">
<p>Provides administrative privileges to manage the SQL Apply (logical standby database) environment.</p>
<p><span class="bold">See Also:</span> <a class="olink SBYDB00800" href="../../server.112/e41134/manage_ls.htm#SBYDB00800"><span class="italic">Oracle Data Guard Concepts and Administration</span></a> for more information</p>
</td>
</tr>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r34c1-t12" headers="r1c1-t12">
<p><code dir="ltr">MGMT_USER</code><a id="sthref629"></a><a id="sthref630"></a></p>
</td>
<td class="cellalignment2252" headers="r34c1-t12 r1c2-t12">
<p>Grants the <code dir="ltr">SELECT</code> privilege on the different views used for the <code dir="ltr">SYSMAN</code> schema.</p>
</td>
</tr>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r35c1-t12" headers="r1c1-t12">
<p><code dir="ltr">OEM_ADVISOR</code><a id="sthref631"></a><a id="sthref632"></a></p>
</td>
<td class="cellalignment2252" headers="r35c1-t12 r1c2-t12">
<p>Provides privileges to create, drop, select (read), load (write), and delete a SQL tuning set through the <code dir="ltr">DBMS_SQLTUNE</code> PL/SQL package, and to access to the Advisor framework using the <code dir="ltr">ADVISOR</code> PL/SQL package.</p>
<p><span class="bold">See Also:</span> <a class="olink PFGRF02801" href="../../server.112/e41573/sql_tune.htm#PFGRF02801"><span class="italic">Oracle Database Performance Tuning Guide</span></a> for more information</p>
</td>
</tr>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r36c1-t12" headers="r1c1-t12">
<p><code dir="ltr">OEM_MONITOR</code><a id="sthref633"></a><a id="sthref634"></a></p>
</td>
<td class="cellalignment2252" headers="r36c1-t12 r1c2-t12">
<p>Provides privileges needed by the Management Agent component of Oracle Enterprise Manager to monitor and manage the database.</p>
<p><span class="bold">See Also:</span> <a class="olink PFGRF02801" href="../../server.112/e41573/sql_tune.htm#PFGRF02801"><span class="italic">Oracle Database Performance Tuning Guide</span></a> for more information</p>
</td>
</tr>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r37c1-t12" headers="r1c1-t12">
<p><code dir="ltr">OLAP_DBA</code><a id="sthref635"></a><a id="sthref636"></a></p>
</td>
<td class="cellalignment2252" headers="r37c1-t12 r1c2-t12">
<p>Provides administrative privileges to create dimensional objects in different schemas for Oracle OLAP.</p>
<p><span class="bold">See Also:</span> <a class="olink OLAUG" href="../../olap.112/e17123/toc.htm"><span class="italic">Oracle OLAP User's Guide</span></a> for more information</p>
</td>
</tr>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r38c1-t12" headers="r1c1-t12">
<p><code dir="ltr">OLAP_USER</code><a id="sthref637"></a><a id="sthref638"></a></p>
</td>
<td class="cellalignment2252" headers="r38c1-t12 r1c2-t12">
<p>Provides application developers privileges to create dimensional objects in their own schemas for Oracle OLAP.</p>
<p><span class="bold">See Also:</span> <a class="olink OLAUG" href="../../olap.112/e17123/toc.htm"><span class="italic">Oracle OLAP User's Guide</span></a> for more information</p>
</td>
</tr>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r39c1-t12" headers="r1c1-t12">
<p><code dir="ltr">OLAP_XS_ADMIN</code><a id="sthref639"></a><a id="sthref640"></a></p>
</td>
<td class="cellalignment2252" headers="r39c1-t12 r1c2-t12">
<p>Provides privileges to administer security for Oracle OLAP.</p>
<p><span class="bold">See Also:</span> <a class="olink OLAUG" href="../../olap.112/e17123/toc.htm"><span class="italic">Oracle OLAP User's Guide</span></a> for more information</p>
</td>
</tr>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r40c1-t12" headers="r1c1-t12">
<p><code dir="ltr">ORDADMIN</code><a id="sthref641"></a><a id="sthref642"></a></p>
</td>
<td class="cellalignment2252" headers="r40c1-t12 r1c2-t12">
<p>Provides privileges to administer Oracle Multimedia DICOM.</p>
<p><span class="bold">See Also:</span> <a class="olink IMDCM7000" href="../../appdev.112/e10778/ch_adm_over.htm#IMDCM7000"><span class="italic">Oracle Multimedia DICOM Developer's Guide</span></a></p>
</td>
</tr>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r41c1-t12" headers="r1c1-t12">
<p><code dir="ltr">OWB$CLIENT</code><a id="sthref643"></a><a id="sthref644"></a><a id="sthref645"></a></p>
</td>
<td class="cellalignment2252" headers="r41c1-t12 r1c2-t12">
<p>Provides privileges to perform standard client-related tasks for Oracle Warehouse Builder, such as creating projects, modules, tables, views, maps, and so on. Warehouse Builder automatically grants this role to all workspace owners and users. (That is, you do not need to explicitly grant it to anyone who must use Warehouse Builder.) For security reasons, the <code dir="ltr">OWB$CLIENT</code> role is not a default role for Warehouse Builder users: Oracle Warehouse Builder enables this role only when it is needed.</p>
<p><span class="bold">See Also:</span> <a class="olink WBDOD" href="../../owb.112/e10582/toc.htm"><span class="italic">Oracle Warehouse Builder Installation and Administration Guide</span></a> for more information</p>
</td>
</tr>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r42c1-t12" headers="r1c1-t12">
<p><code dir="ltr">OWB_DESIGNCENTER_VIEW</code><a id="sthref646"></a><a id="sthref647"></a></p>
</td>
<td class="cellalignment2252" headers="r42c1-t12 r1c2-t12">
<p>Provides privileges from the database level for any registered Oracle Warehouse Builder user to query the Warehouse Builder public views, such as <code dir="ltr">ALL_IV_PROJECTS</code>. A Warehouse Builder administrator can use the <code dir="ltr">ACCESS_PUBLICVIEW_BROWSER</code> system privilege from the Warehouse Builder security level to control an Warehouse Builder user's access to those public views.</p>
<p><span class="bold">See Also:</span> <a class="olink WBDOD" href="../../owb.112/e10582/toc.htm"><span class="italic">Oracle Warehouse Builder Installation and Administration Guide</span></a> for more information</p>
</td>
</tr>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r43c1-t12" headers="r1c1-t12">
<p><code dir="ltr">OWB_USER</code><a id="sthref648"></a><a id="sthref649"></a></p>
</td>
<td class="cellalignment2252" headers="r43c1-t12 r1c2-t12">
<p>Provides privileges to create and own an Oracle Warehouse Builder workspace. When a workspace owner registers other database users to this workspace, Oracle Database grants this role to these users. Users with this role also have access to Warehouse Builder Control Center public views and other Control Center utilities. Oracle Warehouse Builder grants this role to all Warehouse Builder users.</p>
<p><span class="bold">See Also:</span> <a class="olink WBDOD" href="../../owb.112/e10582/toc.htm"><span class="italic">Oracle Warehouse Builder Installation and Administration Guide</span></a> for more information</p>
</td>
</tr>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r44c1-t12" headers="r1c1-t12">
<p><code dir="ltr">RECOVERY_CATALOG_OWNER<a id="sthref650"></a><a id="sthref651"></a></code></p>
</td>
<td class="cellalignment2252" headers="r44c1-t12 r1c2-t12">
<p>Provides privileges for owner of the recovery catalog. Includes: <code dir="ltr">CREATE SESSION</code>, <code dir="ltr">ALTER SESSION</code>, <code dir="ltr">CREATE SYNONYM</code>, <code dir="ltr">CREATE VIEW</code>, <code dir="ltr">CREATE DATABASE LINK</code>, <code dir="ltr">CREATE TABLE</code>, <code dir="ltr">CREATE CLUSTER</code>, <code dir="ltr">CREATE SEQUENCE</code>, <code dir="ltr">CREATE TRIGGER</code>, and <code dir="ltr">CREATE PROCEDURE</code></p>
</td>
</tr>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r45c1-t12" headers="r1c1-t12">
<p><code dir="ltr">RESOURCE</code><a id="sthref652"></a><a id="sthref653"></a></p>
</td>
<td class="cellalignment2252" headers="r45c1-t12 r1c2-t12">
<p>Provides the following system privileges: <code dir="ltr">CREATE CLUSTER</code>, <code dir="ltr">CREATE INDEXTYPE</code>, <code dir="ltr">CREATE OPERATOR</code>, <code dir="ltr">CREATE PROCEDURE</code>, <code dir="ltr">CREATE SEQUENCE</code>, <code dir="ltr">CREATE TABLE</code>, <code dir="ltr">CREATE TRIGGER</code>, <code dir="ltr">CREATE TYPE</code>.</p>
<p>This role is provided for compatibility with previous releases of Oracle Database. You can determine the privileges encompassed by this role by querying the <code dir="ltr">DBA_SYS_PRIVS</code> data dictionary view.</p>
<p><span class="bold">Note:</span> Oracle recommends that you design your own roles for database security rather than relying on this role. This role may not be created automatically by future releases of Oracle Database.</p>
<p><span class="bold">See Also:</span> <a class="olink REFRN" href="../../server.112/e40402/toc.htm"><span class="italic">Oracle Database Reference</span></a> for a description of the <code dir="ltr">DBA_SYS_PRIVS</code> view</p>
</td>
</tr>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r46c1-t12" headers="r1c1-t12">
<p><code dir="ltr">SCHEDULER_ADMIN</code><a id="sthref654"></a><a id="sthref655"></a></p>
</td>
<td class="cellalignment2252" headers="r46c1-t12 r1c2-t12">
<p>Allows the grantee to execute the procedures of the <code dir="ltr">DBMS_SCHEDULER</code> package. It includes all of the job scheduler system privileges and is included in the <code dir="ltr">DBA</code> role.</p>
<p><span class="bold">See Also:</span> <a class="olink ADMIN033" href="../../server.112/e25494/schedover.htm#ADMIN033"><span class="italic">Oracle Database Administrator's Guide</span></a> for more information about the <code dir="ltr">DBMS_SCHEDULER</code> package</p>
</td>
</tr>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r47c1-t12" headers="r1c1-t12">
<p><code dir="ltr">SELECT_CATALOG_ROLE<a id="sthref656"></a><a id="sthref657"></a></code></p>
</td>
<td class="cellalignment2252" headers="r47c1-t12 r1c2-t12">
<p>Provides <code dir="ltr">SELECT</code> privilege on objects in the data dictionary.</p>
</td>
</tr>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r48c1-t12" headers="r1c1-t12">
<p><code dir="ltr">SNMPAGENT</code> <a id="sthref658"></a><a id="sthref659"></a></p>
</td>
<td class="cellalignment2252" headers="r48c1-t12 r1c2-t12">
<p>Used by the Enterprise Manager Management Agent.</p>
</td>
</tr>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r49c1-t12" headers="r1c1-t12">
<p><code dir="ltr">SPATIAL_CSW_ADMIN</code><a id="sthref660"></a><a id="sthref661"></a></p>
</td>
<td class="cellalignment2252" headers="r49c1-t12 r1c2-t12">
<p>Provides administrative privileges to manage the Catalog Services for the Web (CSW) component of Oracle Spatial.</p>
<p><span class="bold">See Also:</span> <a class="olink SPATL425" href="../../appdev.112/e11830/sdo_csw.htm#SPATL425"><span class="italic">Oracle Spatial Developer's Guide</span></a> for more information</p>
</td>
</tr>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r50c1-t12" headers="r1c1-t12">
<p><code dir="ltr">SPATIAL_WFS_ADMIN</code><a id="sthref662"></a><a id="sthref663"></a></p>
</td>
<td class="cellalignment2252" headers="r50c1-t12 r1c2-t12">
<p>Provides administrative privileges to manage the Web Feature Service (WFS) component of Oracle Spatial.</p>
<p><span class="bold">See Also:</span> <a class="olink SPATL420" href="../../appdev.112/e11830/sdo_wfs.htm#SPATL420"><span class="italic">Oracle Spatial Developer's Guide</span></a> for more information</p>
</td>
</tr>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r51c1-t12" headers="r1c1-t12">
<p><code dir="ltr">WFS_USR_ROLE</code><a id="sthref664"></a><a id="sthref665"></a></p>
</td>
<td class="cellalignment2252" headers="r51c1-t12 r1c2-t12">
<p>Provides user privileges for the Web Feature Service (WFS) component of Oracle Spatial.</p>
<p><span class="bold">See Also:</span> <a class="olink SPATL420" href="../../appdev.112/e11830/sdo_wfs.htm#SPATL420"><span class="italic">Oracle Spatial Developer's Guide</span></a> for more information</p>
</td>
</tr>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r52c1-t12" headers="r1c1-t12">
<p><code dir="ltr">WM_ADMIN_ROLE</code><a id="sthref666"></a><a id="sthref667"></a></p>
</td>
<td class="cellalignment2252" headers="r52c1-t12 r1c2-t12">
<p>Provides administrative privileges for Oracle Workspace Manage. This enables users to run any <code dir="ltr">DBMS_WM</code> procedures on all version enabled tables, workspaces, and savepoints regardless of their owner. It also enables the user to modify the system parameters specific to Workspace Manager.</p>
<p><span class="bold">See Also:</span> <a class="olink ADWSM" href="../../appdev.112/e11826/toc.htm"><span class="italic">Oracle Database Workspace Manager Developer's Guide</span></a> for more information</p>
</td>
</tr>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r53c1-t12" headers="r1c1-t12">
<p><code dir="ltr">XDBADMIN</code><a id="sthref668"></a><a id="sthref669"></a></p>
</td>
<td class="cellalignment2252" headers="r53c1-t12 r1c2-t12">
<p>Allows the grantee to register an XML schema globally, as opposed to registering it for use or access only by its owner. It also lets the grantee bypass access control list (ACL) checks when accessing Oracle XML DB Repository.</p>
<p><span class="bold">See Also:</span> <a class="olink ADXDB2400" href="../../appdev.112/e23094/xdb21sec.htm#ADXDB2400"><span class="italic">Oracle XML DB Developer's Guide</span></a> for information about XML schemas and the XML DB Repository</p>
</td>
</tr>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r54c1-t12" headers="r1c1-t12">
<p><code dir="ltr">XDB_SET_INVOKER</code><a id="sthref670"></a><a id="sthref671"></a></p>
</td>
<td class="cellalignment2252" headers="r54c1-t12 r1c2-t12">
<p>Allows the grantee to define invoker's rights handlers and to create or update the resource configuration for XML repository triggers. By default, Oracle Database grants this role to the <code dir="ltr">DBA</code> role but not to the <code dir="ltr">XDBADMIN</code> role.</p>
<p><span class="bold">See Also:</span> <a class="olink ADXDB2400" href="../../appdev.112/e23094/xdb21sec.htm#ADXDB2400"><span class="italic">Oracle XML DB Developer's Guide</span></a> for information about Oracle Database XML repository triggers</p>
</td>
</tr>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r55c1-t12" headers="r1c1-t12">
<p><code dir="ltr">XDB_WEBSERVICES</code><a id="sthref672"></a><a id="sthref673"></a></p>
</td>
<td class="cellalignment2252" headers="r55c1-t12 r1c2-t12">
<p>Allows the grantee to access Oracle Database Web services over HTTPS. However, it does not provide the user access to objects in the database that are public. To allow public access, you need to grant the user the <code dir="ltr">XDB_WEBSERVICES_WITH_PUBLIC</code> role. For a user to use these Web services, <code dir="ltr">SYS</code> must enable the Web service servlets.</p>
<p><span class="bold">See Also:</span> <a class="olink ADXDB2400" href="../../appdev.112/e23094/xdb21sec.htm#ADXDB2400"><span class="italic">Oracle XML DB Developer's Guide</span></a> for information about Oracle Database Web services</p>
</td>
</tr>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r56c1-t12" headers="r1c1-t12">
<p><code dir="ltr">XDB_WEBSERVICES_OVER_HTTP</code><a id="sthref674"></a><a id="sthref675"></a></p>
</td>
<td class="cellalignment2252" headers="r56c1-t12 r1c2-t12">
<p>Allows the grantee to access Oracle Database Web services over HTTP. However, it does not provide the user access to objects in the database that are public. To allow public access, you need to grant the user the <code dir="ltr">XDB_WEBSERVICES_WITH_PUBLIC</code> role.</p>
<p><span class="bold">See Also:</span> <a class="olink ADXDB2400" href="../../appdev.112/e23094/xdb21sec.htm#ADXDB2400"><span class="italic">Oracle XML DB Developer's Guide</span></a> for information about Oracle Database Web services</p>
</td>
</tr>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r57c1-t12" headers="r1c1-t12">
<p><code dir="ltr">XDB_WEBSERVICES_WITH_PUBLIC</code><a id="sthref676"></a><a id="sthref677"></a></p>
</td>
<td class="cellalignment2252" headers="r57c1-t12 r1c2-t12">
<p>Allows the grantee access to public objects through Oracle Database Web services.</p>
<p><span class="bold">See Also:</span> <a class="olink ADXDB2400" href="../../appdev.112/e23094/xdb21sec.htm#ADXDB2400"><span class="italic">Oracle XML DB Developer's Guide</span></a> for information about Oracle Database Web services</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblhruleformalwide" -->
<div class="infobox-note">
<p class="notep1">Note:</p>
Each installation should create its own roles and assign only those privileges that are needed, thus retaining detailed control of the privileges in use. This process also removes any need to adjust existing roles, privileges, or procedures whenever Oracle Database changes or removes roles that Oracle Database defines.</div>
</div>
<!-- class="sect2" -->
<a id="i1007493"></a>
<div id="DBSEG99888" class="sect2">
<h3 class="sect2">Creating a Role</h3>
<p>You can create a role using the <code dir="ltr">CREATE ROLE</code> statement, <a id="sthref678"></a><a id="sthref679"></a>but you must have the <code dir="ltr">CREATE ROLE</code> system privilege to do so. Typically, only security administrators have this system privilege.</p>
<p>After you create a role, the role has no privileges associated with it. Your next step is to grant either privileges or other roles to the new role.</p>
<p><a id="sthref680"></a>You must give each role you create a unique name among existing user names and role names of the database. Roles are not contained in the schema of any user. <a id="sthref681"></a><a id="sthref682"></a><a id="sthref683"></a>In a database that uses a multibyte character set, Oracle recommends that each role name contain at least one single-byte character. If a role name contains only multibyte characters, then the encrypted role name and password combination is considerably less secure. See Guideline <a href="guidelines.htm#CHDDCHAH">1</a> in <a href="guidelines.htm#CHDEGEIF">"Guidelines for Securing Passwords"</a> for password guidelines.<a id="sthref684"></a></p>
<p><a href="#BABIDDFI">Example 4-2</a> <a id="sthref685"></a>creates the <code dir="ltr">clerk</code> role.</p>
<div id="DBSEG99889" class="example">
<p class="titleinexample"><a id="BABIDDFI"></a>Example 4-2 Creating a User Role Authorized by a Password</p>
<pre dir="ltr">
CREATE ROLE clerk IDENTIFIED BY <span class="italic">password</span>;
</pre></div>
<!-- class="example" -->
<p>You can use the <code dir="ltr">IDENTIFIED BY</code> clause to authorize the role with a password. The <code dir="ltr">IDENTIFIED BY</code> clause of the <code dir="ltr">CREATE ROLE</code> statement specifies how the user must be authorized before the role can be enabled for use by a specific user to which it has been granted. If you do not specify this clause<a id="sthref686"></a><a id="sthref687"></a>, or if you specify <code dir="ltr">NOT IDENTIFIED</code>, then no authorization is required when the role is enabled. Roles can be specified to be authorized by the following:</p>
<ul>
<li>
<p>The database using a password</p>
</li>
<li>
<p>An application using a specified package</p>
</li>
<li>
<p>Externally by the operating system, network, or other external source</p>
</li>
<li>
<p>Globally by an enterprise directory service</p>
</li>
</ul>
<p>These authorizations are discussed in the following sections.</p>
<p>As an alternative to creating password-protected roles, Oracle recommends that you use secure application roles instead. See <a href="#i1008520">"Securing Role Privileges by Using Secure Application Roles"</a> for more information.</p>
<p>You <a id="sthref688"></a><a id="sthref689"></a>can set or change the authorization method for a role using the <code dir="ltr">ALTER ROLE</code> statement.<a id="sthref690"></a><a id="sthref691"></a><a id="sthref692"></a> Remember that you can only directly grant secure application roles or password-authenticated roles to a user.</p>
<p><a href="#BABCEHFA">Example 4-3</a> <a id="sthref693"></a>shows how to alter the <code dir="ltr">clerk</code> role to specify that the user must have been authorized by an external source before enabling the role.</p>
<div id="DBSEG99890" class="example">
<p class="titleinexample"><a id="BABCEHFA"></a>Example 4-3 Altering a Role to be Authorized by an External Source</p>
<pre dir="ltr">
ALTER ROLE clerk IDENTIFIED EXTERNALLY;
</pre></div>
<!-- class="example" -->
<p><a id="sthref694"></a><a id="sthref695"></a><a id="sthref696"></a><a id="sthref697"></a>To alter the authorization method for a role, you must have the <code dir="ltr">ALTER ANY ROLE</code> system privilege or have been granted the role with <code dir="ltr">ADMIN</code> option.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink SQLRF" href="../../server.112/e41084/toc.htm"><span class="italic">Oracle Database SQL Language Reference</span></a> for syntax, restrictions, and authorization information about the SQL statements used to manage roles and privileges</div>
</div>
<!-- class="sect2" -->
<a id="i1008785"></a>
<div id="DBSEG99891" class="sect2">
<h3 class="sect2">Specifying the Type of Role Authorization</h3>
<p><a id="sthref698"></a><a id="sthref699"></a>The methods of authorizing roles are presented in this section. A role must be enabled for you to use it.</p>
<p>This section contains:</p>
<ul>
<li>
<p><a href="#BABCGBAA">Authorizing a Role by Using the Database</a></p>
</li>
<li>
<p><a href="#i1007597">Authorizing a Role by Using an Application</a></p>
</li>
<li>
<p><a href="#BABHJIBF">Authorizing a Role by Using an External Source</a></p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#BABJEHFA">"When Do Grants and Revokes Take Effect?"</a> for a discussion about enabling roles</div>
<a id="BABCGBAA"></a>
<div id="DBSEG99892" class="sect3">
<h4 class="sect3">Authorizing a Role by Using the Database</h4>
<p>You can protect a <a id="sthref700"></a>role authorized by the database by assigning the role a password. If a user is granted a role protected by a password, then you can enable or disable the role by supplying the proper password for the role in the <code dir="ltr">SET ROLE</code> statement. You cannot authenticate a password-authenticated role on logon, even if you add it to the list of default roles. You must explicitly enable it with the <code dir="ltr">SET ROLE</code> statement using the required password.</p>
<p><a href="#BABHICEH">Example 4-4</a> <a id="sthref701"></a>shows how to set a password-authenticated role by using the <code dir="ltr">SET ROLE</code> statement.</p>
<div id="DBSEG99893" class="example">
<p class="titleinexample"><a id="BABHICEH"></a>Example 4-4 Using SET ROLE for a Password-Authenticated Role</p>
<pre dir="ltr">
SET ROLE clerk IDENTIFIED BY <span class="italic">password</span>;
</pre></div>
<!-- class="example" -->
<p><a href="#BABIDDFI">Example 4-2, "Creating a User Role Authorized by a Password"</a> shows a <code dir="ltr">CREATE ROLE</code> statement that creates a role called <code dir="ltr">clerk</code>. When it is enabled, the password must be supplied.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
<a id="sthref702"></a><a id="sthref703"></a><a id="sthref704"></a>In a database that uses a multibyte character set, passwords for roles must include only single-byte characters. Multibyte characters are not accepted in passwords. See Guideline <a href="guidelines.htm#CHDDCHAH">1</a> in <a href="guidelines.htm#CHDEGEIF">"Guidelines for Securing Passwords"</a> for password guidelines.</div>
</div>
<!-- class="sect3" -->
<a id="i1007597"></a>
<div id="DBSEG99894" class="sect3">
<h4 class="sect3">Authorizing a Role by Using an Application</h4>
<p><a id="i1007599"></a>An application role (secure application role) can be enabled only by applications using an authorized PL/SQL package. Application developers do not need to secure a role by embedding passwords inside applications. Instead, they can create an application role and specify which PL/SQL package is authorized to enable the role.</p>
<p>To create a role enabled by an authorized PL/SQL package, use the <code dir="ltr">IDENTIFIED USING</code> <code dir="ltr"><span class="codeinlineitalic">package_name</span></code> clause in the <code dir="ltr">CREATE ROLE</code> SQL statement.</p>
<p><a href="#BABICIGC">Example 4-5</a> <a id="sthref705"></a>indicates that the role <code dir="ltr">admin_role</code> is an application role and the role can only be enabled by any module defined inside the PL/SQL package <code dir="ltr">hr.admin</code>.</p>
<div id="DBSEG99895" class="example">
<p class="titleinexample"><a id="BABICIGC"></a>Example 4-5 Creating a Role Authorized by a PL/SQL Package for an Application</p>
<pre dir="ltr">
CREATE ROLE admin_role IDENTIFIED USING hr.admin;
</pre></div>
<!-- class="example" -->
<p>See the following for more information about secure application roles:</p>
<ul>
<li>
<p><a href="#i1008520">"Securing Role Privileges by Using Secure Application Roles"</a></p>
</li>
<li>
<p><a href="app_devs.htm#i1006262">"Creating Secure Application Roles to Control Access to Applications"</a></p>
</li>
<li>
<p><a class="olink TDPSG30032" href="../../server.112/e10575/tdpsg_privileges.htm#TDPSG30032"><span class="italic">Oracle Database 2 Day + Security Guide</span></a></p>
</li>
</ul>
</div>
<!-- class="sect3" -->
<a id="BABHJIBF"></a>
<div id="DBSEG99896" class="sect3">
<h4 class="sect3">Authorizing a Role by Using an External Source</h4>
<p>You can define the external role locally in the database, but you cannot grant the external role to global users, to global roles, or to any other roles in the database. You <a id="sthref706"></a><a id="sthref707"></a>can <a id="sthref708"></a>create roles that are authorized by the operating system or network clients.</p>
<p><a href="#BABJDFDC">Example 4-6</a> <a id="sthref709"></a>creates a role named <code dir="ltr">accts_rec</code> and requires that the user is authorized by an external source before it can be enabled:</p>
<div id="DBSEG99897" class="example">
<p class="titleinexample"><a id="BABJDFDC"></a>Example 4-6 Creating a Role Authorized by an External Source</p>
<pre dir="ltr">
CREATE ROLE accts_rec IDENTIFIED EXTERNALLY;
</pre></div>
<!-- class="example" -->
<div id="DBSEG99898" class="sect4"><a id="sthref710"></a>
<h5 class="sect4">Authorizing a Role by Using the Operating System</h5>
<p>Role authentication through the operating system is useful only when the operating system is able to dynamically link operating system privileges with applications. When a user starts an application, the operating system grants an operating system privilege to the user. The granted operating system privilege corresponds to the role associated with the application. At this point, the application can enable the application role. When the application is terminated, the previously granted operating system privilege is revoked from the operating system account of the user.</p>
<p>If a role is authorized by the operating system, then you must configure information for each user at the operating system level. This operation is operating system dependent.</p>
<p><a id="sthref711"></a><a id="sthref712"></a><a id="sthref713"></a>If roles are <a id="sthref714"></a>granted by the operating system, then you do not need to have the operating system authorize them also.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#BABIEADD">"Granting Roles Using the Operating System or Network"</a> for more information about roles granted by the operating system</div>
</div>
<!-- class="sect4" -->
<div id="DBSEG99899" class="sect4"><a id="sthref715"></a>
<h5 class="sect4">Authorizing a Role by Using a Network Client<a id="sthref716"></a></h5>
<p><a id="sthref717"></a>If users connect to the database over Oracle Net, then by default, the operating system cannot authenticate their roles. This includes connections through a shared server configuration, as this connection requires Oracle Net. This restriction is the default because a remote user could impersonate another operating system user over a network connection. Oracle recommends that you set <code dir="ltr">REMOTE_OS_ROLES</code> to <code dir="ltr">FALSE</code>, which is the default.</p>
<p><a id="sthref718"></a>If you are not concerned with this <a id="sthref719"></a>security risk and want to use operating system role authentication for network clients, then set the initialization parameter <code dir="ltr">REMOTE_OS_ROLES</code> in the database initialization parameter file to <code dir="ltr">TRUE</code>. The change will take effect the next time you start the instance and mount the database.</p>
</div>
<!-- class="sect4" --></div>
<!-- class="sect3" -->
<a id="BABFAABG"></a>
<div id="DBSEG99900" class="sect3">
<h4 class="sect3">Global Role Authorization by an Enterprise Directory Service<a id="sthref720"></a><a id="sthref721"></a><a id="sthref722"></a></h4>
<p>A role can be defined as a <a id="sthref723"></a><a id="sthref724"></a>global role, where a (global) user can only be authorized to use the role by an enterprise directory service. You define the global role locally in the database by granting privileges and roles to it, but you cannot grant the global role itself to any user or other role in the database. When a global user attempts to connect to the database, the enterprise directory is queried to obtain any global roles associated with the user.</p>
<p><a href="#BABFHAED">Example 4-7</a> <a id="sthref725"></a><a id="sthref726"></a>creates a global role.</p>
<div id="DBSEG99901" class="example">
<p class="titleinexample"><a id="BABFHAED"></a>Example 4-7 Creating a Global Role</p>
<pre dir="ltr">
CREATE ROLE supervisor IDENTIFIED GLOBALLY;
</pre></div>
<!-- class="example" -->
<p>Global roles are one component of enterprise user security. A global role only applies to one database, but you can grant it to an enterprise role defined in the enterprise directory. An <a id="sthref727"></a><a id="sthref728"></a>enterprise role is a directory structure that contains global roles on multiple databases and can be granted to <a id="sthref729"></a><a id="sthref730"></a>enterprise users.</p>
<p>See <a href="authentication.htm#i1006269">"Configuring Global User Authentication and Authorization"</a> for a general discussion of global authentication and authorization of users, and its role in enterprise user management.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink DBIMI" href="../e10744/toc.htm"><span class="italic">Oracle Database Enterprise User Security Administrator's Guide</span></a> for information about implementing enterprise user management</div>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="i1009504"></a>
<div id="DBSEG99902" class="sect2">
<h3 class="sect2">Granting and Revoking Roles</h3>
<p>This section contains:</p>
<ul>
<li>
<p><a href="#CACJGAHI">About Granting and Revoking Roles</a></p>
</li>
<li>
<p><a href="#i1008324">Who Can Grant or Revoke Roles?</a></p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="#BABGDGJH">"Granting a User Privileges and Roles"</a></p>
</li>
<li>
<p><a href="#BABGFIAI">"Revoking Privileges and Roles from a User"</a></p>
</li>
<li>
<p><a href="#BABJEHFA">"When Do Grants and Revokes Take Effect?"</a></p>
</li>
<li>
<p><a href="#BABFHBFH">"Finding Information About User Privileges and Roles"</a></p>
</li>
<li>
<p><a class="olink ADMQS003" href="../../server.112/e10897/em_manage.htm#ADMQS003"><span class="italic">Oracle Database 2 Day DBA</span></a> for more information about Database Control</p>
</li>
</ul>
</div>
<a id="CACJGAHI"></a>
<div id="DBSEG583" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">About Granting and Revoking Roles</h4>
<p>You can grant system or object privileges to a role, and any role can be granted to any database user or to another role (but not to itself). However, a role cannot be granted circularly, that is, role <code dir="ltr">X</code> cannot be granted to role <code dir="ltr">Y</code> if role <code dir="ltr">Y</code> has previously been granted to role <code dir="ltr">X</code>.</p>
<p>To provide selective availability of privileges, Oracle Database permits applications and users to enable and disable roles. <a id="sthref731"></a><a id="sthref732"></a>Each role granted to a user is, at any given time, either enabled or disabled. The security domain of a user includes the privileges of all roles currently enabled for the user and excludes the privileges of any roles currently disabled for the user.</p>
<p>A role granted to a role is called an indirectly granted role. You can explicitly enable or disable it for a user. However, whenever you enable a role that contains other roles, you implicitly enable all indirectly granted roles of the directly granted role.</p>
<p><a id="sthref733"></a><a id="sthref734"></a>You grant roles to (or revoke roles from) users or other roles by using either of the following methods:</p>
<ul>
<li>
<p><a id="sthref735"></a>Oracle Enterprise Manager Database Control</p>
</li>
<li>
<p>The <code dir="ltr">GRANT</code> and <code dir="ltr">REVOKE</code> SQL statements</p>
</li>
</ul>
<p>Privileges are granted to and revoked from roles using the same options.</p>
<p>You cannot grant a secure role (that is, an <code dir="ltr">IDENTIFIED BY</code> role, <code dir="ltr">IDENTIFIED USING</code> role, or <code dir="ltr">IDENTIFIED EXTERNALLY</code> role) to a non-secure role. You can use the <code dir="ltr">SET ROLE</code> statement to enable the secure role for the session.</p>
</div>
<!-- class="sect3" -->
<a id="i1008324"></a>
<div id="DBSEG99903" class="sect3">
<h4 class="sect3">Who Can Grant or Revoke Roles?</h4>
<p><a id="sthref736"></a>Any user with the <code dir="ltr">GRANT</code> <code dir="ltr">ANY</code> <code dir="ltr">ROLE</code> system privilege can grant or revoke any role except a global role to or from other users or roles of the database. (A global role is managed in a directory, such as Oracle Internet Directory, but its privileges are contained within a single database.) By default, the <code dir="ltr">SYS</code> or <code dir="ltr">SYSTEM</code> user has this privilege. You should grant this system privilege conservatively because it is very powerful.</p>
<p><a id="sthref737"></a>Any user granted a role with the <code dir="ltr">ADMIN</code> <code dir="ltr">OPTION</code> can grant or revoke that role to or from other users or roles of the database. This option allows administrative powers for roles to be granted on a selective basis.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink DBIMI" href="../e10744/toc.htm"><span class="italic">Oracle Database Enterprise User Security Administrator's Guide</span></a> for information about global roles</div>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="CHDHCEJH"></a>
<div id="DBSEG99904" class="sect2">
<h3 class="sect2">Dropping Roles</h3>
<p><a id="sthref738"></a><a id="sthref739"></a><a id="sthref740"></a>In some cases, it may be appropriate to drop a role from the database. The security domains of all users and roles granted a dropped role are immediately changed to reflect the absence of the dropped role privileges. All indirectly granted roles of the dropped role are also removed from affected security domains. Dropping a role automatically removes the role from all user default role lists.</p>
<p>Because the existence of objects is not dependent on the privileges received through a role, tables and other objects are not dropped when a role is dropped.</p>
<p>You can drop a role using the SQL statement <code dir="ltr">DROP ROLE</code>. <a id="sthref741"></a><a id="sthref742"></a>To drop a role, you must have the <code dir="ltr">DROP ANY ROLE</code> system privilege or have been granted the role with the <code dir="ltr">ADMIN</code> option.</p>
<p><a id="sthref743"></a>The following statement drops the role <code dir="ltr">CLERK</code>:</p>
<pre dir="ltr">
DROP ROLE clerk;
</pre></div>
<!-- class="sect2" -->
<a id="CIHEJEEC"></a>
<div id="DBSEG99905" class="sect2">
<h3 class="sect2">Restricting SQL*Plus Users from Using Database Roles<a id="sthref744"></a><a id="sthref745"></a><a id="sthref746"></a><a id="sthref747"></a><a id="sthref748"></a></h3>
<p>This section describes features that you can use to restrict SQL*Plus users from using database roles and thus, prevent serious security problems.</p>
<ul>
<li>
<p><a href="#CIHGGHAJ">Potential Security Problems of Using Ad Hoc Tools</a></p>
</li>
<li>
<p><a href="#CIHCAIAH">Limiting Roles Through the PRODUCT_USER_PROFILE Table</a></p>
</li>
<li>
<p><a href="#CIHGCAJB">Using Stored Procedures to Encapsulate Business Logic</a></p>
</li>
</ul>
<a id="CIHGGHAJ"></a>
<div id="DBSEG99906" class="sect3">
<h4 class="sect3">Potential Security Problems of Using Ad Hoc Tools</h4>
<p>Prebuilt database applications explicitly control<a id="sthref749"></a><a id="sthref750"></a> the potential actions of a user, including the enabling and disabling of user roles while using the application. By contrast, ad hoc query tools such as SQL*Plus, permit a user to submit any <a id="sthref751"></a><a id="sthref752"></a><a id="sthref753"></a>SQL statement (which may or may not succeed), including enabling and disabling a granted role.</p>
<p>Potentially, an application user can exercise the privileges attached to that application to issue destructive <a id="sthref754"></a><a id="sthref755"></a>SQL statements against database tables by using an ad hoc tool.</p>
<p>For example, consider the following scenario:</p>
<ul>
<li>
<p>The Vacation application has a corresponding <code dir="ltr">vacation</code> role.</p>
</li>
<li>
<p>The <code dir="ltr">vacation</code> role includes the privileges to issue <code dir="ltr">SELECT</code>, <code dir="ltr">INSERT</code>, <code dir="ltr">UPDATE</code>, and <code dir="ltr">DELETE</code> statements against the <code dir="ltr">emp_tab</code> table.</p>
</li>
<li>
<p>The Vacation application controls the use of privileges obtained through the <code dir="ltr">vacation</code> role.</p>
</li>
</ul>
<p>Now, consider a user who has been granted the <code dir="ltr">vacation</code> role. Suppose that, instead of using the Vacation application, the user executes SQL*Plus. At this point, the user is restricted only by the privileges granted to him explicitly or through roles, including the <code dir="ltr">vacation</code> role. Because SQL*Plus is an ad hoc query tool, the user is not restricted to a set of predefined actions, as with designed database applications. The user can query or modify data in the <code dir="ltr">emp_tab</code> table as he or she chooses.</p>
</div>
<!-- class="sect3" -->
<a id="CIHCAIAH"></a>
<div id="DBSEG99907" class="sect3">
<h4 class="sect3">Limiting Roles Through the PRODUCT_USER_PROFILE Table</h4>
<p>You can use the <a id="sthref756"></a><code dir="ltr">PRODUCT_USER_PROFILE</code> table, which is in the <code dir="ltr">SYSTEM</code> schema, to disable certain SQL and SQL*Plus commands in the SQL*Plus environment for each user. SQL*Plus, not the Oracle Database, enforces this security. You can even restrict access to the <code dir="ltr">GRANT</code>, <code dir="ltr">REVOKE</code>, and <code dir="ltr">SET ROLE</code> commands to control user ability to change their database privileges.</p>
<p>The <code dir="ltr">PRODUCT_USER_PROFILE</code> table enables you to list roles that you do not want users to activate with an application. You can also explicitly disable the use of various commands, such as <code dir="ltr">SET ROLE</code>.</p>
<p>For example, you could create an entry in the <code dir="ltr">PRODUCT_USER_PROFILE</code> table to:</p>
<ul>
<li>
<p>Disallow the use of the <code dir="ltr">clerk</code> and <code dir="ltr">manager</code> roles with SQL*Plus</p>
</li>
<li>
<p>Disallow the use of <code dir="ltr">SET ROLE</code> with SQL*Plus</p>
</li>
</ul>
<p>Suppose user Marla connects to the database using SQL*Plus. Marla has the <code dir="ltr">clerk</code>, <code dir="ltr">manager</code>, and <code dir="ltr">analyst</code> roles. As a result of the preceding entry in <code dir="ltr">PRODUCT_USER_PROFILE</code>, Marla is only able to exercise her <code dir="ltr">analyst</code> role with SQL*Plus. Also, when Ginny attempts to issue a <code dir="ltr">SET ROLE</code> statement, she is explicitly prevented from doing so because of the entry in the <code dir="ltr">PRODUCT_USER_PROFILE</code> table prohibiting use of <code dir="ltr">SET ROLE</code>.</p>
<p>Be aware that the <code dir="ltr"><a id="sthref757"></a>PRODUCT_USER_PROFILE</code> table does not completely guarantee security, for multiple reasons. In the preceding example, while <code dir="ltr">SET ROLE</code> is disallowed with SQL*Plus, if Marla had other privileges granted to her directly, then she could exercise these using SQL*Plus.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink SQPUG019" href="../../server.112/e16604/ch_nine.htm#SQPUG019"><span class="italic">SQL*Plus User's Guide and Reference</span></a> for more information about the <code dir="ltr">PRODUCT_USER_PROFILE</code> table</div>
</div>
<!-- class="sect3" -->
<a id="CIHGCAJB"></a>
<div id="DBSEG99908" class="sect3">
<h4 class="sect3">Using Stored Procedures to Encapsulate Business Logic</h4>
<p>Stored procedures encapsulate the use of privileges with business logic so that privileges are only exercised in the context of a well-formed business transaction. For example, an application developer can create a procedure to update the employee name and address in the <code dir="ltr">employees</code> table, which enforces that the data can only be updated in normal business hours. Also, rather than grant a human resources clerk the <code dir="ltr">UPDATE</code> privilege on the <code dir="ltr">employees</code> table, a security administrator may grant the privilege on the procedure only. Then, the human resources clerk can exercise the privilege only in the context of the procedures, and cannot update the <code dir="ltr">employees</code> table directly.</p>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="i1008520"></a>
<div id="DBSEG524" class="sect2">
<h3 class="sect2">Securing Role Privileges by Using Secure Application Roles</h3>
<p>A <a id="sthref758"></a>secure application role is a role that can be enabled only by an authorized PL/SQL package (or procedure). The PL/SQL package itself reflects the security policies needed to control access to the application.</p>
<p>This method of role creation restricts the enabling of this type of role to the invoking application. For example, the application can perform authentication and customized authorization, such as checking whether the user has connected through a proxy.</p>
<p>This type of role strengthens security because passwords are not embedded in application source code or stored in a table. This way, the actions the database performs are based on the implementation of your security policies, and these definitions are stored in one place, the database, rather than in your applications. If you need to modify the policy, you do so in one place without having to modify your applications. No matter how users connect to the database, the result is always the same, because the policy is bound to the role.</p>
<p>To enable the secure application role, you must execute its underlying package by invoking it directly from the application when the user logs in, before the user exercises the privileges granted by the secure application role. You cannot use a<a id="sthref759"></a> logon trigger to enable a secure application role, nor can you have this type of role be a default role.</p>
<p>When you enable the secure application role, Oracle Database verifies that the authorized PL/SQL package is on the calling stack, that is, it verifies that the authorized PL/SQL package is issuing the command to enable the role.</p>
<p>You <a id="sthref760"></a>can use secure application roles to ensure the existence of a database connection. Because a secure application role is a role implemented by a package, the package can validate that users can connect to the database through a middle tier or from a specific IP address. In this way, the secure application role prevents users from accessing data outside an application. They are forced to work within the framework of the application privileges that they have been granted.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="app_devs.htm#i1006262">"Creating Secure Application Roles to Control Access to Applications"</a></p>
</li>
<li>
<p><a class="olink TDPSG30032" href="../../server.112/e10575/tdpsg_privileges.htm#TDPSG30032"><span class="italic">Oracle Database 2 Day + Security Guide</span></a></p>
</li>
</ul>
</div>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="BABCIHGB"></a>
<div id="DBSEG99909" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Managing Object Privileges</h2>
<p>This section contains:</p>
<ul>
<li>
<p><a href="#BABBGHDH">About Object Privileges</a></p>
</li>
<li>
<p><a href="#BABFJDHD">Granting or Revoking Object Privileges</a></p>
</li>
<li>
<p><a href="#i1010134">Managing Object Privileges</a></p>
</li>
<li>
<p><a href="#CHDCIBCI">Managing Table Privileges</a></p>
</li>
<li>
<p><a href="#i1008214">Managing View Privileges</a></p>
</li>
<li>
<p><a href="#i1007675">Managing Procedure Privileges</a></p>
</li>
<li>
<p><a href="#i1008223">Managing Type Privileges</a></p>
</li>
</ul>
<a id="BABBGHDH"></a>
<div id="DBSEG99910" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">About Object Privileges</h3>
<p><a id="sthref761"></a><a id="sthref762"></a>An <span class="bold">object privilege</span> is a right that you grant to a user on a database object. Some examples of object privileges include the right to:</p>
<ul>
<li>
<p>Use an edition</p>
</li>
<li>
<p>Update a table</p>
</li>
<li>
<p>Select rows from another user's table</p>
</li>
<li>
<p>Execute a stored procedure of another user</p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink SQLRF55038" href="../../server.112/e41084/statements_9013.htm#SQLRF55038"><span class="italic">Oracle Database SQL Language Reference</span></a> for a list of object privileges and the operations they authorize</div>
</div>
<!-- class="sect2" -->
<a id="BABFJDHD"></a>
<div id="DBSEG99911" class="sect2">
<h3 class="sect2">Granting or Revoking Object Privileges</h3>
<p><a id="sthref763"></a><a id="sthref764"></a><a id="sthref765"></a>Each type of object has different privileges associated with it.</p>
<p><a id="sthref766"></a><a id="sthref767"></a>You can specify <code dir="ltr">ALL</code> [<code dir="ltr">PRIVILEGES</code>] to grant or revoke all available object privileges for an object. <code dir="ltr">ALL</code> is not a privilege; rather, it is a shortcut, or a way of granting or revoking all object privileges with one <code dir="ltr">GRANT</code> and <code dir="ltr">REVOKE</code> statement. If all object privileges are granted using the <code dir="ltr">ALL</code> shortcut, then individual privileges can still be revoked.</p>
<p>Similarly, you can revoke all individually granted privileges by specifying <code dir="ltr">ALL</code>. However, if you <code dir="ltr">REVOKE ALL</code>, and revoking causes integrity constraints to be deleted (because they depend on a <code dir="ltr">REFERENCES</code> privilege that you are revoking), then you must include the <code dir="ltr">CASCADE CONSTRAINTS</code> option in the <code dir="ltr">REVOKE</code> statement.</p>
<p><a href="#BABFIGFC">Example 4-8</a> revokes all privileges on the orders table in the <code dir="ltr">HR</code> schema using <code dir="ltr">CASCADE CONSTRAINTS</code>.</p>
<div id="DBSEG99912" class="example">
<p class="titleinexample"><a id="BABFIGFC"></a>Example 4-8 Revoking All Object Privileges Using CASCADE CONSTRAINTS</p>
<pre dir="ltr">
REVOKE ALL 
 ON orders FROM hr
 CASCADE CONSTRAINTS;
</pre></div>
<!-- class="example" --></div>
<!-- class="sect2" -->
<a id="i1010134"></a>
<div id="DBSEG40453" class="sect2">
<h3 class="sect2">Managing Object Privileges</h3>
<p>An<a id="sthref768"></a><a id="sthref769"></a><a id="sthref770"></a><a id="sthref771"></a><a id="sthref772"></a> <span class="bold">object privilege</span> grants permission to perform a particular action on a specific schema object.</p>
<p>Different object privileges are available for different types of schema objects. The privilege to delete rows from the <code dir="ltr">departments</code> table is an example of an object privilege.</p>
<p>Some<a id="sthref773"></a> schema objects, such as clusters, indexes, triggers, and <a id="sthref774"></a>database links, do not have associated object privileges. Their use is controlled with system privileges. For example, to alter a cluster, a user must own the cluster or have the <code dir="ltr">ALTER</code> <code dir="ltr">ANY</code> <code dir="ltr">CLUSTER</code> system privilege.</p>
<p>The following sections discuss granting and revoking such privileges:</p>
<ul>
<li>
<p><a href="#i1009173">"Granting and Revoking Object Privileges"</a></p>
</li>
<li>
<p><a href="#i1009174">"Who Can Grant Object Privileges?"</a></p>
</li>
<li>
<p><a href="#i1009141">"Using Object Privileges with Synonyms"</a></p>
</li>
</ul>
<p>The following sections discuss object privileges that apply to specific schema objects:</p>
<ul>
<li>
<p><a href="#CHDCIBCI">"Managing Table Privileges"</a></p>
</li>
<li>
<p><a href="#i1008214">"Managing View Privileges"</a></p>
</li>
<li>
<p>Sequences (see <a class="olink ADMIN" href="../../server.112/e25494/toc.htm"><span class="italic">Oracle Database Administrator's Guide</span></a> for information about managing sequences)</p>
</li>
<li>
<p><a href="#i1007675">"Managing Procedure Privileges"</a></p>
</li>
<li>
<p>Functions and Packages(<a class="olink ADMIN" href="../../server.112/e25494/toc.htm"><span class="italic">Oracle Database Administrator's Guide</span></a> for information about managing object dependencies)</p>
</li>
<li>
<p><a href="#i1008223">"Managing Type Privileges"</a></p>
</li>
</ul>
<a id="i1009173"></a>
<div id="DBSEG99913" class="sect3">
<h4 class="sect3">Granting and Revoking Object Privileges</h4>
<p>Object<a id="sthref775"></a><a id="sthref776"></a><a id="sthref777"></a><a id="sthref778"></a> privileges can be granted to and revoked from users and roles. If you grant object privileges to roles, then you can make the privileges selectively available.</p>
<p>You can grant or revoke object privileges to or from users and roles using the following methods:</p>
<ul>
<li>
<p>The <code dir="ltr">GRANT</code> and <code dir="ltr">REVOKE</code> SQL statements</p>
</li>
<li>
<p>Oracle Enterprise Manager Database Control</p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink ADMQS003" href="../../server.112/e10897/em_manage.htm#ADMQS003"><span class="italic">Oracle Database 2 Day DBA</span></a> for more information about Database Control</div>
</div>
<!-- class="sect3" -->
<a id="i1009174"></a>
<div id="DBSEG99914" class="sect3">
<h4 class="sect3">Who Can Grant Object Privileges?</h4>
<p>A user automatically has all object privileges for schema objects contained in his or her schema. A user with the <code dir="ltr">GRANT ANY OBJECT PRIVILEGE</code> can grant any specified object privilege to another user with or without the <code dir="ltr">WITH GRANT OPTION</code> clause of the <code dir="ltr">GRANT</code> statement. A user with the <code dir="ltr">GRANT ANY OBJECT PRIVILEGE</code> can also use that privilege to revoke any object privilege that was granted either by the object owner or by some other user with the <code dir="ltr">GRANT ANY OBJECT PRIVILEGE</code> privilege. Otherwise, the grantee can use the privilege, but cannot grant it to other users.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink SQLRF" href="../../server.112/e41084/toc.htm"><span class="italic">Oracle Database SQL Language Reference</span></a> for information about <code dir="ltr">GRANT</code> and <code dir="ltr">GRANT ANY OBJECT PRIVILEGE</code></div>
</div>
<!-- class="sect3" -->
<a id="i1009141"></a>
<div id="DBSEG99915" class="sect3">
<h4 class="sect3">Using Object Privileges with Synonyms</h4>
<p>You <a id="sthref779"></a><a id="sthref780"></a><a id="sthref781"></a>can use the <code dir="ltr">CREATE SYNONYM</code> statement to create synonyms for tables, views, sequences, operators, procedures, stored functions, packages, materialized views, Java class schema objects, user-defined object types, or other synonyms. If you grant users the privilege to use the synonym, then the object privileges granted on the underlying objects apply whether the user references the base object by name or by using the synonym.</p>
<p>For example, suppose user <code dir="ltr">OE</code> creates the following synonym for the <code dir="ltr">CUSTOMERS</code> table:</p>
<pre dir="ltr">
CREATE SYNONYM customer_syn FOR CUSTOMERS;
</pre>
<p>Then <code dir="ltr">OE</code> grants the <code dir="ltr">SELECT</code> privilege on the <code dir="ltr">customer_syn</code> synonym to user <code dir="ltr">HR</code>.</p>
<pre dir="ltr">
GRANT SELECT ON customer_syn TO HR;
</pre>
<p>User <code dir="ltr">HR</code> then tries either of the following queries:</p>
<pre dir="ltr">
SELECT COUNT(*) FROM OE.customer_syn;

SELECT COUNT(*) FROM OE.CUSTOMERS;
</pre>
<p>Both queries will yield the same result:</p>
<pre dir="ltr">
  COUNT(*)
----------
       319
</pre>
<p>Be aware that when you grant the synonym to another user, the grant applies to the underlying object that the synonym represents, not to the synonym itself. For example, if user <code dir="ltr">HR</code> queries the <code dir="ltr">ALL_TAB_PRIVS</code> data dictionary view for his privileges, he will learn the following:</p>
<pre dir="ltr">
SELECT TABLE_SCHEMA, TABLE_NAME, PRIVILEGE 
FROM ALL_TAB_PRIVS 
WHERE TABLE_SCHEMA = 'OE';

TABLE_SCHEMA  TABLE_NAME  PRIVILEGE
------------  ----------  ----------
<span class="bold">OE            CUSTOMER    SELECT</span>
OE            ORDERS      UPDATE
</pre>
<p>The results show that in addition to other privileges, he has the <code dir="ltr">SELECT</code> privilege for the underlying object of the <code dir="ltr">customer_syn</code> synonym, which is the <code dir="ltr">OE.CUSTOMER</code> table.</p>
<p>At this point, if user <code dir="ltr">OE</code> then revokes the <code dir="ltr">SELECT</code> privilege on the <code dir="ltr">customer_syn</code> synonym from <code dir="ltr">HR</code>, here are the results if <code dir="ltr">HR</code> checks his privileges again:</p>
<pre dir="ltr">
TABLE_SCHEMA  TABLE_NAME  PRIVILEGE
------------  ----------  ---------
OE            ORDERS      UPDATE
</pre>
<p>User <code dir="ltr">HR</code> no longer has the <code dir="ltr">SELECT</code> privilege for the <code dir="ltr">OE.CUSTOMER</code> table. If he tries to query the <code dir="ltr">OE.CUSTOMERS</code> table, then the following error appears:</p>
<pre dir="ltr">
SELECT COUNT(*) FROM OE.CUSTOMERS;

ERROR at line 1:
ORA-00942: table or view does not exist
</pre></div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="CHDCIBCI"></a>
<div id="DBSEG99916" class="sect2">
<h3 class="sect2">Managing Table Privileges</h3>
<p>Object<a id="sthref782"></a><span class="bold"><a id="sthref783"></a><a id="sthref784"></a></span> privileges for tables enable table security at the DML (data manipulation language) or DDL (data definition language) level of operation.</p>
<p>The following sections discuss table privileges and DML and DDL operations:</p>
<ul>
<li>
<p><a href="#i1009187">How Table Privileges Affect Data Manipulation Language Operations</a></p>
</li>
<li>
<p><a href="#i1009202">How Table Privileges Affect Data Definition Language Operations</a></p>
</li>
</ul>
<a id="i1009187"></a>
<div id="DBSEG99917" class="sect3">
<h4 class="sect3">How Table Privileges Affect Data Manipulation Language Operations</h4>
<p><a id="sthref785"></a>You can grant privileges to use the <code dir="ltr">DELETE</code>, <code dir="ltr">INSERT</code>, <code dir="ltr">SELECT</code>, and <code dir="ltr">UPDATE</code> DML operations on a table or view. Grant these privileges only to users and roles that need to query or manipulate data in a table.</p>
<p>You can restrict <code dir="ltr">INSERT</code> and <code dir="ltr">UPDATE</code> privileges for a table to specific columns of the table. With a selective <code dir="ltr">INSERT</code> privilege, a privileged user can insert a row with values for the selected columns. All other columns receive <code dir="ltr">NULL</code> or the default value of the column. With a selective <code dir="ltr">UPDATE</code> privilege, a user can update only specific column values of a row. You can use selective <code dir="ltr">INSERT</code> and <code dir="ltr">UPDATE</code> privileges to restrict user access to sensitive data.</p>
<p>For example, if you do not want data entry users to alter the <code dir="ltr">salary</code> column of the <code dir="ltr">employees</code> table, then selective <code dir="ltr">INSERT</code> or <code dir="ltr">UPDATE</code> privileges can be granted that exclude the <code dir="ltr">salary</code> column. Alternatively, a view that excludes the <code dir="ltr">salary</code> column could satisfy this need for additional security.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink SQLRF" href="../../server.112/e41084/toc.htm"><span class="italic">Oracle Database SQL Language Reference</span></a> for more information about DML operations</div>
</div>
<!-- class="sect3" -->
<a id="i1009202"></a>
<div id="DBSEG99918" class="sect3">
<h4 class="sect3">How Table Privileges Affect Data Definition Language Operations</h4>
<p>The <code dir="ltr">ALTER</code>, <code dir="ltr">INDEX</code>, and <code dir="ltr">REFERENCES</code> privileges allow DDL operations to be performed on a table. Because these privileges allow other users to alter or create dependencies on a table, you should grant these privileges conservatively.</p>
<p>A user attempting to perform a DDL operation on a table may need additional system or object privileges. For example, to create a trigger on a table, the user requires both the <code dir="ltr">ALTER</code> <code dir="ltr">TABLE</code> object privilege for the table and the <code dir="ltr">CREATE</code> <code dir="ltr">TRIGGER</code> system privilege.</p>
<p><a id="sthref786"></a>As with the <code dir="ltr">INSERT</code> and <code dir="ltr">UPDATE</code> privileges, you can grant the <code dir="ltr">REFERENCES</code> privilege on specific columns of a table. The <code dir="ltr">REFERENCES</code> privilege enables the grantee to use the table on which the grant is made as a parent key to any foreign keys that the grantee wishes to create in his or her own tables. This action is controlled with a special privilege because the presence of foreign keys restricts the data manipulation and table alterations that can be done to the parent key. A&nbsp;column-specific <code dir="ltr">REFERENCES</code> privilege restricts the grantee to using the named columns (which, of course, must include at least one primary or unique key of the parent table).</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
"Data Integrity" in <a class="olink CNCPT" href="../../server.112/e40540/toc.htm"><span class="italic">Oracle Database Concepts</span></a> for more information about primary keys, unique keys, and integrity constraints</div>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="i1008214"></a>
<div id="DBSEG99919" class="sect2">
<h3 class="sect2">Managing View Privileges</h3>
<p>This section contains:</p>
<ul>
<li>
<p><a href="#BABHDBFG">About View Privileges</a></p>
</li>
<li>
<p><a href="#i1009219">Privileges Required to Create Views</a></p>
</li>
<li>
<p><a href="#i1009995">Increasing Table Security with Views</a></p>
</li>
</ul>
<a id="BABHDBFG"></a>
<div id="DBSEG99920" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">About View Privileges</h4>
<p><a id="sthref787"></a><a id="sthref788"></a>A <span class="bold">view</span> is a presentation of data selected from one or more tables, possibly including other views. A view shows the structure of the underlying tables. Its selected data can be thought of as the result of a stored query. A view contains no actual data but rather derives what it shows from the tables and views on which it is based. You can query a view, and change the data it represents. Data in a view can be updated or deleted, and new data inserted. These operations directly alter the tables on which the view is based, and are subject to the integrity constraints and triggers of the base tables.</p>
<p>You can apply DML object privileges to views, similar to tables. <a id="sthref789"></a><a id="sthref790"></a>Object privileges for a view allow various DML operations, which as noted affect the base tables from which the view is derived.</p>
</div>
<!-- class="sect3" -->
<a id="i1009219"></a>
<div id="DBSEG99921" class="sect3">
<h4 class="sect3">Privileges Required to Create Views</h4>
<p>To <a id="sthref791"></a>create a view, you must meet the following requirements:</p>
<ul>
<li>
<p>You must have been granted one of the following system privileges, either explicitly or through a role:</p>
<ul>
<li>
<p>The <code dir="ltr">CREATE</code> <code dir="ltr">VIEW</code> system privilege (to create a view in your schema)</p>
</li>
<li>
<p>The <code dir="ltr">CREATE</code> <code dir="ltr">ANY</code> <code dir="ltr">VIEW</code> system privilege (to create a view in the schema of another user)</p>
</li>
</ul>
</li>
<li>
<p>You must have been explicitly granted one of the following privileges:</p>
<ul>
<li>
<p>The <code dir="ltr">SELECT</code>, <code dir="ltr">INSERT</code>, <code dir="ltr">UPDATE</code>, or <code dir="ltr">DELETE</code> object privileges on all base objects underlying the view</p>
</li>
<li>
<p>Th<code dir="ltr">e</code> <code dir="ltr">SELECT</code> <code dir="ltr">ANY</code> <code dir="ltr">TABLE</code>, <code dir="ltr">INSERT</code> <code dir="ltr">ANY</code> <code dir="ltr">TABLE</code>, <code dir="ltr">UPDATE</code> <code dir="ltr">ANY</code> <code dir="ltr">TABLE</code>, or <code dir="ltr">DELETE</code> <code dir="ltr">ANY</code> <code dir="ltr">TABLE</code> system privileges</p>
</li>
</ul>
</li>
<li>
<p>In addition, before you can grant other users access to you view, you must have object privileges to the base objects with the <code dir="ltr">GRANT</code> <code dir="ltr">OPTION</code> clause or appropriate system privileges with the <code dir="ltr">ADMIN</code> <code dir="ltr">OPTION</code> clause. If you do not have these privileges, then you cannot to grant other users access to your view. If you try, an<a id="sthref792"></a><a id="sthref793"></a> <code dir="ltr">ORA-01720: grant option does not exist for</code> <code dir="ltr"><span class="codeinlineitalic">object_name</span></code> error is raised, with <code dir="ltr"><span class="codeinlineitalic">object_name</span></code> referring to the view's underlying object for which you do not have the sufficient privilege.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink SQLRF" href="../../server.112/e41084/toc.htm"><span class="italic">Oracle Database SQL Language Reference</span></a></div>
</li>
</ul>
</div>
<!-- class="sect3" -->
<a id="i1009995"></a>
<div id="DBSEG99922" class="sect3">
<h4 class="sect3">Increasing Table Security with Views<a id="sthref794"></a><a id="sthref795"></a></h4>
<p>To use a view, the user must have the appropriate privileges but only for the view itself, not its underlying objects. However, if access privileges for the underlying objects of the view are removed, then the user no longer has access. This behavior occurs because the security domain that is used when a user queries the view is that of the definer of the view. If the privileges on the underlying objects are revoked from the view's definer, then the view becomes invalid, and no one can use the view. Therefore, even if a user has been granted access to the view, the user may not be able to use the view if the definer's rights have been revoked from the view's underlying objects.</p>
<p>For example, suppose User A creates a view. User A has definer's rights on the underlying objects of the view. User A then grants the <code dir="ltr">SELECT</code> privilege on that view to User B so that User B can query the view. But if User A no longer has access to the underlying objects of that view, then User B no longer has access either.</p>
<p>Views add two more levels of security for tables, column-level security and value-based security, as follows:</p>
<ul>
<li>
<p><span class="bold">A view can provide access to selected columns of base tables.</span> For example, you can define a view on the <code dir="ltr">employees</code> table to show only the <code dir="ltr">employee_id</code>, <code dir="ltr">last_name</code>, and <code dir="ltr">manager_id</code> columns:</p>
<pre dir="ltr">
CREATE VIEW employees_manager AS 
    SELECT last_name, employee_id, manager_id FROM employees; 
</pre></li>
<li>
<p><span class="bold">A view can provide value-based security for the information in a table.</span> A <code dir="ltr">WHERE</code> clause in the definition of a view displays only selected rows of base tables. Consider the following two examples:</p>
<pre dir="ltr">
CREATE VIEW lowsal AS 
    SELECT * FROM employees 
    WHERE salary &lt; 10000; 
</pre>
<p>The <code dir="ltr">lowsal</code> view allows access to all rows of the <code dir="ltr">employees</code> table that have a salary value less than 10000. Notice that all columns of the <code dir="ltr">employees</code> table are accessible in the <code dir="ltr">lowsal</code> view.</p>
<pre dir="ltr">
CREATE VIEW own_salary AS 
    SELECT last_name, salary 
    FROM employees 
    WHERE last_name = USER; 
</pre>
<p><a id="sthref796"></a><a id="sthref797"></a><a id="sthref798"></a>In the <code dir="ltr">own_salary</code> view, only the rows with an <code dir="ltr">last_name</code> that matches the current user of the view are accessible. The <code dir="ltr">own_salary</code> view uses the <code dir="ltr">user</code> pseudo column, whose values always refer to the current user. This view combines both column-level security and value-based security.</p>
</li>
</ul>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="i1007675"></a>
<div id="DBSEG50000" class="sect2">
<h3 class="sect2">Managing Procedure Privileges</h3>
<p>This section contains:</p>
<ul>
<li>
<p><a href="#BABDFCEB">Using the EXECUTE Privilege for Procedure Privileges</a></p>
</li>
<li>
<p><a href="#i1009236">Procedure Execution and Security Domains</a></p>
</li>
<li>
<p><a href="#BABFJEGJ">How Procedure Privileges Affect Definer's Rights</a></p>
</li>
<li>
<p><a href="#BABJFHIG">How Procedure Privileges Affect Invoker's Rights</a></p>
</li>
<li>
<p><a href="#i1009241">System Privileges Required to Create or Replace a Procedure</a></p>
</li>
<li>
<p><a href="#CACEIJHJ">System Privileges Required to Compile a Procedure</a></p>
</li>
<li>
<p><a href="#i1009246">How Procedure Privileges Affect Packages and Package Objects</a></p>
</li>
</ul>
<a id="BABDFCEB"></a>
<div id="DBSEG99923" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Using the EXECUTE Privilege for Procedure Privileges</h4>
<p>The <code dir="ltr">EXECUTE</code><span class="bold"><a id="sthref799"></a></span> privilege is<a id="sthref800"></a> the<a id="sthref801"></a> <a id="sthref802"></a>only <a id="sthref803"></a><a id="sthref804"></a><span class="bold">object privilege</span> for procedures, including standalone procedures and functions, and for those within packages. Grant this privilege only to users who need to run a procedure or to compile another procedure that calls a desired procedure.</p>
</div>
<!-- class="sect3" -->
<a id="i1009236"></a>
<div id="DBSEG99924" class="sect3">
<h4 class="sect3">Procedure Execution and Security Domains</h4>
<p>A user with the <code dir="ltr">EXECUTE</code> object privilege for a specific procedure can execute the procedure or compile a program unit that references the procedure. Oracle Database performs a run-time privilege check when any PL/SQL unit is called. A user with the <code dir="ltr">EXECUTE</code> <code dir="ltr">ANY</code> <code dir="ltr">PROCEDURE</code> system privilege can execute any procedure in the database. Privileges to run procedures can be granted to a user through roles.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink LNPLS00809" href="../../appdev.112/e25519/subprograms.htm#LNPLS00809"><span class="italic">Oracle Database PL/SQL Language Reference</span></a> for more information about how Oracle Database checks privileges at run-time</div>
</div>
<!-- class="sect3" -->
<a id="BABFJEGJ"></a>
<div id="DBSEG99925" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">How Procedure Privileges Affect Definer's Rights</h4>
<p>The <a id="sthref805"></a>owner <a id="sthref806"></a>of a procedure, called the <span class="italic">definer</span>, must have all the necessary object privileges for referenced objects. If the procedure owner grants to another user the right to use that procedure, then the privileges of the procedure owner (on the objects referenced by the procedure) apply to the grantee user's exercise of the procedure. The privileges of the procedure's definer must be granted directly to the user, not granted through roles. These are termed definer's rights.</p>
<p><a id="sthref807"></a>The user of a procedure who is not its owner is called the <span class="italic">invoker</span>. Additional privileges on referenced objects are required for invoker's rights procedures, but not for definer's rights procedures.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#i1007304">"How Roles Work in PL/SQL Blocks"</a></div>
<p><a id="sthref808"></a><a id="sthref809"></a>A user of a definer's rights procedure requires only the privilege to execute the procedure and no privileges on the underlying objects that the procedure accesses. This is because a definer's rights procedure operates under the security domain of the user who owns the procedure, regardless of who is executing it. The owner of the procedure must have all the necessary object privileges for referenced objects. Fewer privileges have to be granted to users of a definer's rights procedure. This results in stronger control of database access.</p>
<p><a id="sthref810"></a><a id="sthref811"></a>You can use definer's rights procedures to control access to private database objects and add a level of database security. By writing a definer's rights procedure and granting only <code dir="ltr">EXECUTE</code> privilege to a user, the user can be forced to access the referenced objects only through the procedure.</p>
<p>At run time, Oracle Database checks whether the privileges of the owner of a definer's rights stored procedure allow access to that procedure's referenced objects, before the procedure is executed. If a necessary privilege on a referenced object was revoked from the owner of a definer's rights procedure, then the procedure cannot be run by the owner or any other user.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
<a id="sthref812"></a><a id="sthref813"></a>Trigger processing follows the same patterns as definer's rights procedures. The user runs a SQL statement, which that user is privileged to run. As a result of the SQL statement, a trigger is fired. The statements within the triggered action temporarily execute under the security domain of the user that owns the trigger. For more information, see "Overview of Triggers" in <a class="olink CNCPT118" href="../../server.112/e40540/srvrside.htm#CNCPT118"><span class="italic">Oracle Database Concepts</span></a>.</div>
</div>
<!-- class="sect3" -->
<a id="BABJFHIG"></a>
<div id="DBSEG99926" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">How Procedure Privileges Affect Invoker's Rights</h4>
<p><a id="sthref814"></a><a id="sthref815"></a>An <a id="sthref816"></a>invoker's rights procedure executes with all of the invoker's privileges. Oracle Database enables the privileges that were granted to the invoker through any of the invoker's enabled roles to take effect, unless a definer's rights procedure calls the invoker's rights procedure directly or indirectly. A user of an invoker's rights procedure needs privileges (granted to the user either directly or through a role) on objects that the procedure accesses through external references that are resolved in the schema of the invoker.</p>
<p>The invoker needs privileges at run time to access program references embedded in DML statements or dynamic SQL statements, because they are effectively recompiled at run time.</p>
<p>For all other external references, such as direct PL/SQL function calls, Oracle Database checks the privileges of the owner at compile time, but does not perform a run-time check. Therefore, the user of an invoker's rights procedure does not need privileges on external references outside DML or dynamic SQL statements. Alternatively, the developer of an invoker's rights procedure must only grant privileges on the procedure itself, not on all objects directly referenced by the invoker's rights procedure.</p>
<p>You can create a software bundle that consists of multiple program units, some with definer's rights and others with invoker's rights, and restrict the program entry points <span class="italic">(controlled step-in)</span>. A user who has the privilege to run an entry-point procedure can also execute internal program units indirectly, but cannot directly call the internal programs. For very precise control over query processing, you can create a PL/SQL package specification with explicit cursors.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="vpd.htm#CIHHGFAD">"Configuring an Oracle Virtual Private Database Policy"</a></p>
</li>
<li>
<p><a class="olink LNPLS00809" href="../../appdev.112/e25519/subprograms.htm#LNPLS00809"><span class="italic">Oracle Database PL/SQL Language Reference</span></a> for information about how Oracle Database handles name resolution and privilege checking at runtime using invoker's and definer's rights</p>
</li>
<li>
<p><a class="olink LNPLS01371" href="../../appdev.112/e25519/create_package.htm#LNPLS01371"><span class="italic">Oracle Database PL/SQL Language Reference</span></a> for information about defining explicit cursors in the <code dir="ltr">CREATE PACKAGE</code> statement</p>
</li>
</ul>
</div>
</div>
<!-- class="sect3" -->
<a id="i1009241"></a>
<div id="DBSEG99927" class="sect3">
<h4 class="sect3">System Privileges Required to Create or Replace a Procedure</h4>
<p>To <a id="sthref817"></a><a id="sthref818"></a><a id="sthref819"></a><a id="sthref820"></a>create or replace a<a id="sthref821"></a><a id="sthref822"></a> procedure in your own schema, you must have the <code dir="ltr">CREATE PROCEDURE</code> system privilege. To create or replace a procedure in another user's schema, you must have the <code dir="ltr">CREATE ANY PROCEDURE</code> system privilege.</p>
<p>The user who owns the procedure also must have privileges for schema objects referenced in the procedure body. To create a procedure, you need to have been explicitly granted the necessary privileges (system or object) on all objects referenced by the procedure. You cannot obtain the required privileges through roles. This includes the <code dir="ltr">EXECUTE</code> privilege for any procedures that are called inside the procedure being created.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
Triggers require that privileges on referenced objects be granted directly to the owner of the trigger. Anonymous PL/SQL blocks can use any privilege, whether the privilege is granted explicitly or through a role.</div>
</div>
<!-- class="sect3" -->
<a id="CACEIJHJ"></a>
<div id="DBSEG99928" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">System Privileges Required to Compile a Procedure</h4>
<p>To<a id="sthref823"></a><a id="sthref824"></a> compile a standalone procedure, run the <code dir="ltr">ALTER PROCEDURE</code> statement with the <code dir="ltr">COMPILE</code> clause. To compile a procedure that is part of a package, run the<a id="sthref825"></a> <code dir="ltr">ALTER PACKAGE</code> statement.</p>
<p><a href="#CACBHGAJ">Example 4-9</a> shows how to compile a standalone procedure.</p>
<div id="DBSEG99929" class="example">
<p class="titleinexample"><a id="CACBHGAJ"></a>Example 4-9 Compiling a Procedure</p>
<pre dir="ltr">
ALTER PROCEDURE psmith.remove_emp COMPILE;
</pre></div>
<!-- class="example" -->
<p>If the standalone or packaged procedure is in another user's schema, you must have the <code dir="ltr">ALTER ANY PROCEDURE</code> privilege to recompile it. You can recompile procedures in your own schema without any privileges.</p>
</div>
<!-- class="sect3" -->
<a id="i1009246"></a>
<div id="DBSEG99930" class="sect3">
<h4 class="sect3">How Procedure Privileges Affect Packages and Package Objects</h4>
<p><a id="sthref826"></a><a id="sthref827"></a><a id="sthref828"></a><a id="sthref829"></a><span class="bold"><a id="sthref830"></a></span>A user with the <code dir="ltr">EXECUTE</code> object privilege for a package can execute any public procedure or function in the package, and can access or modify the value of any public package variable. You cannot grant specific <code dir="ltr">EXECUTE</code> privileges for individual constructs in a package. Therefore, you may find it useful to consider two alternatives for establishing security when developing procedures, functions, and packages for a database application. The following examples describe these alternatives.</p>
<p class="subhead2"><a id="DBSEG99931"></a>Procedure Privileges and Packages and Package Objects: Example 1</p>
<p><a id="sthref831"></a><a id="sthref832"></a><a id="sthref833"></a><a id="sthref834"></a><a href="#BABGBCHI">Example 4-10</a> shows four procedures created in the bodies of two packages.</p>
<div id="DBSEG99932" class="example">
<p class="titleinexample"><a id="BABGBCHI"></a>Example 4-10 Package Objects Affected by Procedure Privileges</p>
<pre dir="ltr">
CREATE PACKAGE BODY hire_fire AS 
  PROCEDURE hire(...) IS 
    BEGIN 
      INSERT INTO employees . . . 
    END hire; 
  PROCEDURE fire(...) IS 
    BEGIN 
      DELETE FROM employees . . . 
    END fire; 
END hire_fire; 

CREATE PACKAGE BODY raise_bonus AS 
  PROCEDURE give_raise(...) IS 
    BEGIN 
      UPDATE employees SET salary = . . . 
    END give_raise; 
  PROCEDURE give_bonus(...) IS 
    BEGIN 
      UPDATE employees SET bonus = . . . 
    END give_bonus; 
END raise_bonus; 
</pre></div>
<!-- class="example" -->
<p>The following <code dir="ltr">GRANT EXECUTE</code> statements enable the <code dir="ltr">big_bosses</code> and <code dir="ltr">little_bosses</code> roles to run the appropriate procedures:</p>
<pre dir="ltr">
GRANT EXECUTE ON hire_fire TO big_bosses; 
GRANT EXECUTE ON raise_bonus TO little_bosses; 
</pre>
<div class="infobox-note">
<p class="notep1">Note:</p>
Granting <code dir="ltr">EXECUTE</code> privilege for a package provides uniform access to all package objects.</div>
<p class="subhead2"><a id="DBSEG99933"></a>Procedure Privileges and Packages and Package Objects: Example 2</p>
<p><a id="sthref835"></a><a id="sthref836"></a><a id="sthref837"></a><a id="sthref838"></a>This example shows four procedure definitions within the body of a single package. Two additional standalone procedures and a package are created specifically to provide access to the procedures defined in the main package.</p>
<pre dir="ltr">
CREATE PACKAGE BODY employee_changes AS 
  PROCEDURE change_salary(...) IS BEGIN ... END; 
  PROCEDURE change_bonus(...) IS BEGIN ... END; 
  PROCEDURE insert_employee(...) IS BEGIN ... END; 
  PROCEDURE delete_employee(...) IS BEGIN ... END; 
END employee_changes; 
 
CREATE PROCEDURE hire 
  BEGIN 
    employee_changes.insert_employee(...) 
  END hire; 
 
CREATE PROCEDURE fire 
  BEGIN 
    employee_changes.delete_employee(...) 
  END fire; 
 
PACKAGE raise_bonus IS 
  PROCEDURE give_raise(...) AS 
    BEGIN 
      employee_changes.change_salary(...) 
    END give_raise; 
 
  PROCEDURE give_bonus(...) 
    BEGIN 
      employee_changes.change_bonus(...) 
    END give_bonus; 
</pre>
<p>Using this method, the procedures that actually do the work (the procedures in the <code dir="ltr">employee_changes</code> package) are defined in a single package and can share declared global variables, cursors, on so on. By declaring top-level procedures, <code dir="ltr">hire</code> and <code dir="ltr">fire</code>, and an additional package, <code dir="ltr">raise_bonus</code>, you can grant selective <code dir="ltr">EXECUTE</code> privileges on procedures in the main package:</p>
<pre dir="ltr">
GRANT EXECUTE ON hire, fire TO big_bosses; 
GRANT EXECUTE ON raise_bonus TO little_bosses; 
</pre></div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="i1008223"></a>
<div id="DBSEG99934" class="sect2">
<h3 class="sect2">Managing Type Privileges</h3>
<p><a id="sthref839"></a><a id="sthref840"></a><a id="sthref841"></a>The following sections describe the use of privileges for types, methods, and objects:</p>
<ul>
<li>
<p><a href="#i1009251">System Privileges for Named Types</a></p>
</li>
<li>
<p><a href="#i1009323">Object Privileges</a></p>
</li>
<li>
<p><a href="#i1009331">Method Execution Model</a></p>
</li>
<li>
<p><a href="#i1009336">Privileges Required to Create Types and Tables Using Types</a></p>
</li>
<li>
<p><a href="#i1009341">Example of Privileges for Creating Types and Tables Using Types</a></p>
</li>
<li>
<p><a href="#i1009346">Privileges on Type Access and Object Access</a></p>
</li>
<li>
<p><a href="#i1009351">Type Dependencies</a></p>
</li>
</ul>
<a id="i1009251"></a>
<div id="DBSEG99935" class="sect3">
<h4 class="sect3">System Privileges for Named Types</h4>
<p><a href="#g1012174">Table 4-4</a> lists system privileges for named types (object types, <code dir="ltr">VARRAY</code>s, and nested tables).</p>
<div id="DBSEG99936" class="tblhruleformal">
<p class="titleintable"><a id="sthref842"></a><a id="g1012174"></a>Table 4-4 System Privileges for Named Types</p>
<table class="cellalignment2250" title="System Privileges for Named Types" summary="This table lists system privileges for named types and explains what each privilege allows you to do." dir="ltr">
<thead>
<tr class="cellalignment2244">
<th class="cellalignment2251" id="r1c1-t35">Privilege</th>
<th class="cellalignment2251" id="r1c2-t35">Enables you to ...</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r2c1-t35" headers="r1c1-t35">
<p><code dir="ltr">CREATE TYPE</code></p>
</td>
<td class="cellalignment2252" headers="r2c1-t35 r1c2-t35">
<p>Create named types in your own schemas</p>
</td>
</tr>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r3c1-t35" headers="r1c1-t35">
<p><code dir="ltr">CREATE ANY TYPE</code></p>
</td>
<td class="cellalignment2252" headers="r3c1-t35 r1c2-t35">
<p>Create a named type in any schema</p>
</td>
</tr>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r4c1-t35" headers="r1c1-t35">
<p><code dir="ltr">ALTER ANY TYPE</code></p>
</td>
<td class="cellalignment2252" headers="r4c1-t35 r1c2-t35">
<p>Alter a named type in any schema</p>
</td>
</tr>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r5c1-t35" headers="r1c1-t35">
<p><code dir="ltr">DROP ANY TYPE</code></p>
</td>
<td class="cellalignment2252" headers="r5c1-t35 r1c2-t35">
<p>Drop a named type in any schema</p>
</td>
</tr>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r6c1-t35" headers="r1c1-t35">
<p><code dir="ltr">EXECUTE ANY TYPE</code></p>
</td>
<td class="cellalignment2252" headers="r6c1-t35 r1c2-t35">
<p>Use and reference a named type in any schema</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblhruleformal" -->
<p>The <a id="sthref843"></a><code dir="ltr">RESOURCE</code> role includes the <code dir="ltr">CREATE</code> <code dir="ltr">TYPE</code> system privilege. The <code dir="ltr">DBA</code> role includes all of these privileges.</p>
</div>
<!-- class="sect3" -->
<a id="i1009323"></a>
<div id="DBSEG99937" class="sect3">
<h4 class="sect3">Object Privileges</h4>
<p>The only object privilege that applies to named types is <code dir="ltr">EXECUTE</code>. If the <code dir="ltr">EXECUTE</code> privilege exists on a named type, then a user can use the named type to:</p>
<ul>
<li>
<p>Define a table</p>
</li>
<li>
<p>Define a column in a relational table</p>
</li>
<li>
<p>Declare a variable or parameter of the named type</p>
</li>
</ul>
<p>The <code dir="ltr">EXECUTE</code> privilege permits a user to invoke the methods in the type, including the type constructor. This is similar to the <code dir="ltr">EXECUTE</code> privilege on a stored PL/SQL procedure.</p>
</div>
<!-- class="sect3" -->
<a id="i1009331"></a>
<div id="DBSEG99938" class="sect3">
<h4 class="sect3">Method Execution Model</h4>
<p>Method execution is the same as any other stored PL/SQL procedure.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#i1007675">"Managing Procedure Privileges"</a></div>
</div>
<!-- class="sect3" -->
<a id="i1009336"></a>
<div id="DBSEG99939" class="sect3">
<h4 class="sect3">Privileges Required to Create Types and Tables Using Types</h4>
<p><a id="sthref844"></a>To create a type, you must meet the following requirements:</p>
<ul>
<li>
<p>You must have the <code dir="ltr">CREATE</code> <code dir="ltr">TYPE</code> system privilege to create a type in your schema or the <code dir="ltr">CREATE</code> <code dir="ltr">ANY</code> <code dir="ltr">TYPE</code> system privilege to create a type in the schema of another user. These privileges can be acquired explicitly or through a role.</p>
</li>
<li>
<p>The owner of the type must be explicitly granted the <code dir="ltr">EXECUTE</code> object privileges to access all other types referenced within the definition of the type, or have been granted the <code dir="ltr">EXECUTE</code> <code dir="ltr">ANY</code> <code dir="ltr">TYPE</code> system privilege. The owner cannot obtain the required privileges through roles.</p>
</li>
<li>
<p>If the type owner intends to grant access to the type to other users, then the owner must receive the <code dir="ltr">EXECUTE</code> privileges to the referenced types with the <code dir="ltr">GRANT</code> <code dir="ltr">OPTION</code> or the <code dir="ltr">EXECUTE</code> <code dir="ltr">ANY</code> <code dir="ltr">TYPE</code> system privilege with the <code dir="ltr">ADMIN</code> <code dir="ltr">OPTION</code>. If not, then the type owner has insufficient privileges to grant access on the type to other users.</p>
</li>
</ul>
<p>To create a table using types, you must meet the requirements for creating a table and the following additional requirements:</p>
<ul>
<li>
<p>The owner of the table must have been directly granted the <code dir="ltr">EXECUTE</code> object privilege to access all types referenced by the table, or has been granted the <code dir="ltr">EXECUTE</code> <code dir="ltr">ANY</code> <code dir="ltr">TYPE</code> system privilege. The owner cannot exercise the required privileges if these privileges were granted through roles.</p>
</li>
<li>
<p>If the table owner intends to grant access to the table to other users, then the owner must have the <code dir="ltr">EXECUTE</code> privilege to the referenced types with the <code dir="ltr">GRANT</code> <code dir="ltr">OPTION</code> or the <code dir="ltr">EXECUTE</code> <code dir="ltr">ANY</code> <code dir="ltr">TYPE</code> system privilege with the <code dir="ltr">ADMIN</code> <code dir="ltr">OPTION</code>. If not, then the table owner has insufficient privileges to grant access on the table.</p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#CHDCIBCI">"Managing Table Privileges"</a> for the requirements for creating a table</div>
</div>
<!-- class="sect3" -->
<a id="i1009341"></a>
<div id="DBSEG99940" class="sect3">
<h4 class="sect3">Example of Privileges for Creating Types and Tables Using Types</h4>
<p><a id="sthref845"></a><a id="sthref846"></a>Assume that three users exist with the <code dir="ltr">CONNECT</code> and <code dir="ltr">RESOURCE</code> roles:</p>
<ul>
<li>
<p><code dir="ltr">user1</code></p>
</li>
<li>
<p><code dir="ltr">user2</code></p>
</li>
<li>
<p><code dir="ltr">user3</code></p>
</li>
</ul>
<p>The following DDL is run in the schema of <code dir="ltr">user1</code>:</p>
<pre dir="ltr">
CREATE TYPE type1 AS OBJECT (
  attr1 NUMBER);

CREATE TYPE type2 AS OBJECT (
  attr2 NUMBER);

GRANT EXECUTE ON type1 TO user2;
GRANT EXECUTE ON type2 TO user2 WITH GRANT OPTION;
</pre>
<p>The following DDL is performed in the schema of <code dir="ltr">user2</code>:</p>
<pre dir="ltr">
CREATE TABLE tab1 OF user1.type1;
CREATE TYPE type3 AS OBJECT (
  attr3 user1.type2);
CREATE TABLE tab2 (
  col1 user1.type2);
</pre>
<p>The following statements succeed because <code dir="ltr">user2</code> has <code dir="ltr">EXECUTE</code> privilege on <code dir="ltr">user1.type2</code> with the <code dir="ltr">GRANT</code> <code dir="ltr">OPTION:</code></p>
<pre dir="ltr">
GRANT EXECUTE ON type3 TO user3;
GRANT SELECT on tab2 TO user3;
</pre>
<p>However, the following grant fails because <code dir="ltr">user2</code> does not have <code dir="ltr">EXECUTE</code> privilege on <code dir="ltr">user1.type1</code> with the <code dir="ltr">GRANT</code> <code dir="ltr">OPTION:</code></p>
<pre dir="ltr">
GRANT SELECT ON tab1 TO user3;
</pre>
<p>The following statements can be successfully run by <code dir="ltr">user3</code>:</p>
<pre dir="ltr">
CREATE TYPE type4 AS OBJECT (
  attr4 user2.type3);
CREATE TABLE tab3 OF type4;
</pre>
<div class="infobox-note">
<p class="notep1">Note:</p>
Customers should discontinue using the <code dir="ltr">CONNECT</code> and <code dir="ltr">RESOURCE</code> roles. The <code dir="ltr">CONNECT</code> role presently retains only the <code dir="ltr">CREATE SESSION</code> privilege.</div>
</div>
<!-- class="sect3" -->
<a id="i1009346"></a>
<div id="DBSEG99941" class="sect3">
<h4 class="sect3">Privileges on Type Access and Object Access</h4>
<p>Existing column-level and table-level privileges for DML statements apply to both column objects and row objects.</p>
<p><a href="#g1012204">Table 4-5</a> lists the privileges for object tables.</p>
<div id="DBSEG99942" class="tblhruleformal">
<p class="titleintable"><a id="sthref847"></a><a id="g1012204"></a>Table 4-5 Privileges for Object Tables</p>
<table class="cellalignment2250" title="Privileges for Object Tables " summary="This table lists the privileges available for object tables and explains what each privilege allows you to do." dir="ltr">
<thead>
<tr class="cellalignment2244">
<th class="cellalignment2255" id="r1c1-t39">Privilege</th>
<th class="cellalignment2255" id="r1c2-t39">Enables you to...</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r2c1-t39" headers="r1c1-t39">
<p><code dir="ltr">SELECT</code></p>
</td>
<td class="cellalignment2252" headers="r2c1-t39 r1c2-t39">
<p>Access an object and its attributes from the table</p>
</td>
</tr>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r3c1-t39" headers="r1c1-t39">
<p><code dir="ltr">UPDATE</code></p>
</td>
<td class="cellalignment2252" headers="r3c1-t39 r1c2-t39">
<p>Modify the attributes of the objects that make up the rows in the table</p>
</td>
</tr>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r4c1-t39" headers="r1c1-t39">
<p><code dir="ltr">INSERT</code></p>
</td>
<td class="cellalignment2252" headers="r4c1-t39 r1c2-t39">
<p>Create new objects in the table</p>
</td>
</tr>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r5c1-t39" headers="r1c1-t39">
<p><code dir="ltr">DELETE</code></p>
</td>
<td class="cellalignment2252" headers="r5c1-t39 r1c2-t39">
<p>Delete rows</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblhruleformal" -->
<p>Similar table privileges and column privileges apply to column objects. Retrieving instances does not in itself reveal type information. However, clients must access named type information to interpret the type instance images. When a client requests type information, Oracle Database checks for the <code dir="ltr">EXECUTE</code> privilege on the type.</p>
<p>Consider the following schema:</p>
<pre dir="ltr">
CREATE TYPE emp_type (
    eno NUMBER, ename CHAR(31), eaddr addr_t);
CREATE TABLE emp OF emp_t;
</pre>
<p>In addition, consider the following two queries:</p>
<pre dir="ltr">
SELECT VALUE(emp) FROM emp;
SELECT eno, ename FROM emp;
</pre>
<p>For either query, Oracle Database checks the <code dir="ltr">SELECT</code> privilege of the user for the <code dir="ltr">emp</code> table. For the first query, the user must obtain the <code dir="ltr">emp_type</code> type information to interpret the data. When the query accesses the <code dir="ltr">emp_type</code> type, Oracle Database checks the <code dir="ltr">EXECUTE</code> privilege of the user.</p>
<p>The second query, however, does not involve named types, so Oracle Database does not check type privileges.</p>
<p>In addition, by using the schema from the previous section, <code dir="ltr">user3</code> can perform the following queries:</p>
<pre dir="ltr">
SELECT tab1.col1.attr2 FROM user2.tab1 tab1;
SELECT attr4.attr3.attr2 FROM tab3;
</pre>
<p>Note that in both <code dir="ltr">SELECT</code> statements, <code dir="ltr">user3</code> does not have explicit privileges on the underlying types, but the statement succeeds because the type and table owners have the necessary privileges with the <code dir="ltr">GRANT</code> <code dir="ltr">OPTION.</code></p>
<p>Oracle Database checks privileges on the following events, and returns an error if the client does not have the privilege for the action:</p>
<ul>
<li>
<p>Pinning an object in the object cache using its <code dir="ltr">REF</code> value causes Oracle Database to check for the <code dir="ltr">SELECT</code> privilege on the containing object table.</p>
</li>
<li>
<p>Modifying an existing object or flushing an object from the object cache causes Oracle Database to check for the <code dir="ltr">UPDATE</code> privilege on the destination object table.</p>
</li>
<li>
<p>Flushing a new object causes Oracle Database to check for the <code dir="ltr">INSERT</code> privilege on the destination object table.</p>
</li>
<li>
<p>Deleting an object causes Oracle Database to check for the <code dir="ltr">DELETE</code> privilege on the destination table.</p>
</li>
<li>
<p>Pinning an object of a named type causes Oracle Database to check <code dir="ltr">EXECUTE</code> privilege on the object.</p>
</li>
</ul>
<p>Modifying the attributes of an object in a client third-generation language application causes Oracle Database to update the entire object. Therefore, the user needs the <code dir="ltr">UPDATE</code> privilege on the object table. Having the <code dir="ltr">UPDATE</code> privilege on only certain columns of the object table is not sufficient, even if the application only modifies attributes corresponding to those columns. Therefore, Oracle Database does not support column-level privileges for object tables.</p>
</div>
<!-- class="sect3" -->
<a id="i1009351"></a>
<div id="DBSEG99943" class="sect3">
<h4 class="sect3">Type Dependencies</h4>
<p>As with stored objects, such as procedures and tables, types being referenced by other objects are called dependencies. There are some special issues for types on which tables depend. Because a table contains data that relies on the type definition for access, any change to the type causes all stored data to become inaccessible. Changes that can cause this are when necessary privileges required to use the type are revoked, or the type or dependent types are dropped. If these actions occur, then the table becomes invalid and cannot be accessed.</p>
<p>A table that is invalid because of missing privileges can automatically become valid and accessible if the required privileges are granted again. A table that is invalid because a dependent type was dropped can never be accessed again, and the only permissible action is to drop the table.</p>
<p>Because of the severe effects that revoking a privilege on a type or dropping a type can cause, the SQL statements <code dir="ltr">REVOKE</code> and <code dir="ltr">DROP</code> <code dir="ltr">TYPE</code>, by default, implement restricted semantics. This means that if the named type in either statement has table or type dependents, then an error is received and the statement cancels. However, if the <code dir="ltr">FORCE</code> clause for either statement is used, then the statement always succeeds. If there are depended-upon tables, then they are invalidated.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink REFRN" href="../../server.112/e40402/toc.htm"><span class="italic">Oracle Database Reference</span></a> for details about using the <code dir="ltr">REVOKE</code>, <code dir="ltr">DROP</code> <code dir="ltr">TYPE</code>, and <code dir="ltr">FORCE</code> clauses</div>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="BABGDGJH"></a>
<div id="DBSEG99944" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Granting a User Privileges and Roles<a id="sthref848"></a><a id="sthref849"></a><a id="sthref850"></a><a id="sthref851"></a><a id="sthref852"></a><a id="sthref853"></a></h2>
<p>This section contains:</p>
<ul>
<li>
<p><a href="#i1008788">Granting System Privileges and Roles</a></p>
</li>
<li>
<p><a href="#i1007808">Granting Object Privileges</a></p>
</li>
<li>
<p><a href="#i1007882">Granting Privileges on Columns</a></p>
</li>
</ul>
<p>It is also possible to grant roles to a user connected through a middle tier or proxy. This is discussed in <a href="authentication.htm#i1010326">"Using a Middle Tier Server for Proxy Authentication"</a>.</p>
<a id="i1008788"></a>
<div id="DBSEG99945" class="sect2">
<h3 class="sect2">Granting System Privileges and Roles</h3>
<p>You can use the <code dir="ltr">GRANT</code> SQL statement to grant system privileges and roles to users and roles. <a id="sthref854"></a><a id="sthref855"></a><a id="sthref856"></a><a id="sthref857"></a>The following privileges are required:</p>
<ul>
<li>
<p>To grant a system privilege, a user must be granted the system privilege with the <code dir="ltr">ADMIN</code> option or must be granted the <code dir="ltr">GRANT ANY PRIVILEGE</code> system privilege.</p>
</li>
<li>
<p>To grant a role, a user must be granted the role with the <code dir="ltr">ADMIN</code> option or was granted the <code dir="ltr">GRANT ANY ROLE</code> system privilege.</p>
</li>
</ul>
<p><a href="#BABGFCHC">Example 4-11</a> <a id="sthref858"></a>grants the system privilege <code dir="ltr">CREATE SESSION</code> and the <code dir="ltr">accts_pay</code> role to the user <code dir="ltr">jward</code>.</p>
<div id="DBSEG99946" class="example">
<p class="titleinexample"><a id="BABGFCHC"></a>Example 4-11 Granting a System Privilege and a Role to a User</p>
<pre dir="ltr">
GRANT CREATE SESSION, accts_pay TO jward;
</pre></div>
<!-- class="example" -->
<p><a href="#BABGFCHC">Example 4-11</a> <a id="sthref859"></a><a id="sthref860"></a>grants the <code dir="ltr">EXECUTE</code> privilege on the <code dir="ltr">exec_dir</code> directory object to the user <code dir="ltr">jward</code>.</p>
<div id="DBSEG99947" class="example">
<p class="titleinexample"><a id="sthref861"></a>Example 4-12 Granting the EXECUTE Privilege on a Directory Object</p>
<pre dir="ltr">
GRANT EXECUTE ON DIRECTORY exec_dir TO jward;
</pre></div>
<!-- class="example" -->
<div class="infobox-note">
<p class="notep1">Note:</p>
Object privileges cannot be granted along with system privileges and roles in the same <code dir="ltr">GRANT</code> statement.</div>
<div id="DBSEG99948" class="sect3"><a id="sthref862"></a>
<h4 class="sect3">Granting the ADMIN Option</h4>
<p>If <a id="sthref863"></a><a id="sthref864"></a><a id="sthref865"></a>you <a id="sthref866"></a>specify the <code dir="ltr">WITH ADMIN OPTION</code> clause when you grant a privilege or role to a user or role, then the privilege grant has the following expanded capabilities:</p>
<ul>
<li>
<p>The grantee can grant or revoke the system privilege or role to or from any other user or role in the database. Users cannot revoke a role from themselves.</p>
</li>
<li>
<p>The grantee can grant the system privilege or role with the <code dir="ltr">ADMIN</code> option.</p>
</li>
<li>
<p>The grantee of a role can alter or drop the role.</p>
</li>
</ul>
<p><a href="#BABEGHCH">Example 4-13</a> <a id="sthref867"></a>grants the <code dir="ltr">new_dba</code> role with the <code dir="ltr">WITH ADMIN OPTION</code> clause to user <code dir="ltr">michael</code>.</p>
<div id="DBSEG99949" class="example">
<p class="titleinexample"><a id="BABEGHCH"></a>Example 4-13 Granting the ADMIN Option</p>
<pre dir="ltr">
GRANT new_dba TO michael WITH ADMIN OPTION;
</pre></div>
<!-- class="example" -->
<p>User <code dir="ltr">michael</code> is able to not only use all of the privileges implicit in the <code dir="ltr">new_dba</code> role, but he can also grant, revoke, and drop the <code dir="ltr">new_dba</code> role as deemed necessary. Because of these powerful capabilities, use caution when granting system privileges or roles with the <code dir="ltr">ADMIN</code> option. These privileges are usually reserved for a security administrator, and are rarely granted to other administrators or users of the system.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
When a user creates a role, the role is automatically granted to the creator with the <code dir="ltr">ADMIN</code> option.</div>
</div>
<!-- class="sect3" -->
<div id="DBSEG99950" class="sect3"><a id="sthref868"></a>
<h4 class="sect3">Creating a New User with the GRANT Statement</h4>
<p>Oracle Database enables you to create a new user with the <code dir="ltr"><a id="sthref869"></a>GRANT</code> statement. If you specify a password using the <code dir="ltr">IDENTIFIED BY</code> clause, and the user name does not exist in the database, then a new user with that user name and password is created.</p>
<p><a href="#BABCAAAG">Example 4-14</a> <a id="sthref870"></a>creates <code dir="ltr">psmith</code> as a new user while granting <code dir="ltr">psmith</code> the <code dir="ltr">CREATE SESSION</code> system privilege.</p>
<div id="DBSEG99951" class="example">
<p class="titleinexample"><a id="BABCAAAG"></a>Example 4-14 Creating a New User with the GRANT Statement</p>
<pre dir="ltr">
GRANT CREATE SESSION TO psmith IDENTIFIED BY <span class="italic">password</span>;
</pre></div>
<!-- class="example" -->
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="users.htm#BABGIFFE">"Creating User Accounts"</a></p>
</li>
<li>
<p><a href="authentication.htm#CHDFDHAJ">"Minimum Requirements for Passwords"</a></p>
</li>
</ul>
</div>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="i1007808"></a>
<div id="DBSEG99952" class="sect2">
<h3 class="sect2">Granting Object Privileges</h3>
<p><a id="sthref871"></a><a id="sthref872"></a><a id="sthref873"></a>You can use the <code dir="ltr">GRANT</code> statement to grant object privileges to roles and users. To grant an object privilege, you must fulfill one of the following conditions:</p>
<ul>
<li>
<p>You own the object specified.</p>
</li>
<li>
<p>You have been granted the <code dir="ltr">GRANT ANY OBJECT PRIVILEGE</code> system privilege. This privilege enables you to grant and revoke privileges on behalf of the object owner.</p>
</li>
<li>
<p>The <code dir="ltr">WITH GRANT OPTION</code> clause was specified when you were granted the object privilege.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
System privileges and roles cannot be granted along with object privileges in the same <code dir="ltr">GRANT</code> statement.</div>
</li>
</ul>
<p><a href="#BABEHJDC">Example 4-15</a> <a id="sthref874"></a>grants the <code dir="ltr">SELECT</code>, <code dir="ltr">INSERT</code>, and <code dir="ltr">DELETE</code> object privileges for all columns of the <code dir="ltr">emp</code> table to the users <code dir="ltr">jfee</code> and <code dir="ltr">tsmith</code>.</p>
<div id="DBSEG99953" class="example">
<p class="titleinexample"><a id="BABEHJDC"></a>Example 4-15 Granting Object Privileges to Users</p>
<pre dir="ltr">
GRANT SELECT, INSERT, DELETE ON emp TO jfee, tsmith;
</pre></div>
<!-- class="example" -->
<p>To grant all object privileges on the <code dir="ltr">salary</code> view to user <code dir="ltr">jfee</code>, use the <code dir="ltr">ALL</code> keyword as shown in the following example:</p>
<pre dir="ltr">
GRANT ALL ON salary TO jfee;
</pre>
<div class="infobox-note">
<p class="notep1">Note:</p>
A grantee cannot regrant access to objects unless the original grant included the <code dir="ltr">GRANT OPTION</code>. Thus in the example just given, <code dir="ltr">jfee</code> cannot use the <code dir="ltr">GRANT</code> statement to grant object privileges to anyone else.</div>
<div id="DBSEG99954" class="sect3"><a id="sthref875"></a>
<h4 class="sect3">Specifying the GRANT OPTION Clause</h4>
<p>Specify the <code dir="ltr">WITH GRANT OPTION</code><a id="sthref876"></a> clause with the <code dir="ltr">GRANT</code> statement to enable the grantee to grant the object privileges to other users. The user whose schema contains an object is automatically granted all associated object privileges with the <code dir="ltr">GRANT OPTION</code>. This special privilege allows the grantee several expanded privileges:</p>
<ul>
<li>
<p>The grantee can grant the object privilege to any user in the database, with or without the <code dir="ltr">GRANT OPTION</code>, and to any role in the database.</p>
</li>
<li>
<p>If both of the following conditions are true, then the grantee can create views on the table, and grant the corresponding privileges on the views to any user or role in the database:</p>
<ul>
<li>
<p>The grantee receives object privileges for the table with the <code dir="ltr">GRANT OPTION</code>.</p>
</li>
<li>
<p>The grantee has the <code dir="ltr">CREATE VIEW</code> or <code dir="ltr">CREATE ANY VIEW</code> system privilege.</p>
</li>
</ul>
</li>
</ul>
<div class="infobox-note">
<p class="notep1">Note:</p>
<a id="sthref877"></a>The <code dir="ltr">GRANT OPTION</code> is not valid when granting an object privilege to a role. Oracle Database prevents the propagation of object privileges through roles so that grantees of a role cannot propagate object privileges received by means of roles.</div>
</div>
<!-- class="sect3" -->
<a id="i1007837"></a>
<div id="DBSEG99955" class="sect3">
<h4 class="sect3">Granting Object Privileges on Behalf of the Object Owner<a id="sthref878"></a></h4>
<p>The <code dir="ltr"><a id="sthref879"></a><a id="sthref880"></a>GRANT ANY OBJECT PRIVILEGE</code> system privilege enables users to grant and revoke any object privilege on behalf of the object owner. This privilege provides a convenient means for database and application administrators to grant access to objects in any schema without requiring that they connect to the schema. Login credentials do not need to be maintained for schema owners who have this privilege, which reduces the number of connections required during configuration.</p>
<p>This system privilege is part of the Oracle Database supplied <code dir="ltr">DBA</code> role and is thus granted (with the <code dir="ltr">ADMIN option</code>) to any user connecting <code dir="ltr">AS SYSDBA</code> (user <code dir="ltr">SYS</code>). As with other system privileges, the <code dir="ltr">GRANT ANY OBJECT PRIVILEGE</code> system privilege can only be granted by a user who possesses the <code dir="ltr">ADMIN option</code>.</p>
<p>The <span class="italic">recorded</span> grantor of access rights to an object is either the object owner or the person exercising the <code dir="ltr">GRANT ANY OBJECT PRIVILEGE</code> system privilege. If the grantor with <code dir="ltr">GRANT ANY OBJECT PRIVILEGE</code> does <span class="italic">not</span> have the object privilege with the <code dir="ltr">GRANT OPTION</code>, then the object owner is shown as the grantor. Otherwise, when that grantor has the object privilege with the <code dir="ltr">GRANT OPTION</code>, then that grantor is recorded as the grantor of the grant.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
The audit record generated by the <code dir="ltr">GRANT</code> statement always shows the actual user who performed the grant.</div>
<p>For example, consider the following scenario. User <code dir="ltr">adams</code> possesses the <code dir="ltr">GRANT ANY OBJECT PRIVILEGE</code> system privilege. He does not possess any other grant privileges. He issues the following statement:</p>
<pre dir="ltr">
GRANT SELECT ON HR.EMPLOYEES TO blake WITH GRANT OPTION;
</pre>
<p>If you examine the <code dir="ltr">DBA_TAB_PRIVS</code> view, then you will see that <code dir="ltr">hr</code> is shown as the grantor of the privilege:</p>
<pre dir="ltr">
SELECT GRANTEE, GRANTOR, PRIVILEGE, GRANTABLE
  FROM DBA_TAB_PRIVS 
  WHERE TABLE_NAME = 'EMPLOYEES' and OWNER = 'HR';

GRANTEE  GRANTOR PRIVILEGE    GRANTABLE
-------- ------- -----------  ----------
BLAKE    HR       SELECT      YES       
</pre>
<p>Now assume that user <code dir="ltr">blake</code> also has the <code dir="ltr">GRANT ANY OBJECT PRIVILEGE</code> system. He issues the following statement:</p>
<pre dir="ltr">
GRANT SELECT ON HR.EMPLOYEES TO clark;
</pre>
<p>In this case, when you query the <code dir="ltr">DBA_TAB_PRIVS</code> view again, you see that <code dir="ltr">blake</code> is shown as being the grantor of the privilege:</p>
<pre dir="ltr">
GRANTEE  GRANTOR  PRIVILEGE  GRANTABLE
-------- -------- ---------  ----------
BLAKE    HR       SELECT     YES       
CLARK    BLAKE    SELECT     NO        
</pre>
<p>This occurs because <code dir="ltr">blake</code> already possesses the <code dir="ltr">SELECT</code> privilege on <code dir="ltr">HR.EMPLOYEES</code> with the <code dir="ltr">GRANT OPTION</code>.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#i1008009">"Revoking Object Privileges on Behalf of the Object Owner"</a></div>
</div>
<!-- class="sect3" -->
<a id="i1007882"></a>
<div id="DBSEG99956" class="sect3">
<h4 class="sect3">Granting Privileges on Columns</h4>
<p><a id="sthref881"></a><a id="sthref882"></a><a id="sthref883"></a><a id="sthref884"></a><a id="sthref885"></a><a id="sthref886"></a>You can grant <code dir="ltr">INSERT</code>, <code dir="ltr">UPDATE</code>, or <code dir="ltr">REFERENCES</code> privileges on individual columns in a table.</p>
<div class="infobox-note">
<p class="notep1">Caution:</p>
Before granting a column-specific <code dir="ltr">INSERT</code> privilege, determine if the table contains any columns on which <code dir="ltr">NOT NULL</code> constraints are defined. Granting selective insert capability without including the <code dir="ltr">NOT NULL</code> columns prevents the user from inserting any rows into the table. To avoid this situation, ensure that each <code dir="ltr">NOT NULL</code> column can either be inserted into or has a non-<code dir="ltr">NULL</code> default value. Otherwise, the grantee will not be able to insert rows into the table and will receive an error.</div>
<p>The following statement grants the <code dir="ltr">INSERT</code> privilege on the <code dir="ltr">acct_no</code> column of the <code dir="ltr">accounts</code> table to user <code dir="ltr">psmith</code>:</p>
<pre dir="ltr">
GRANT INSERT (acct_no) ON accounts TO psmith;
</pre>
<p>In the following example, object privilege for the <code dir="ltr">ename</code> and <code dir="ltr">job</code> columns of the <code dir="ltr">emp</code> table are granted to the users <code dir="ltr">jfee</code> and <code dir="ltr">tsmith</code>:</p>
<pre dir="ltr">
GRANT INSERT(ename, job) ON emp TO jfee, tsmith;
</pre></div>
<!-- class="sect3" -->
<div id="DBSEG99957" class="sect3"><a id="sthref887"></a>
<h4 class="sect3">Row-Level Access Control</h4>
<p>You can also provide access control at the row level, that is, within objects, using Virtual Private Database (VPD) or Oracle Label Security (OLS).</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="vpd.htm#CIHBAJGI">Chapter 7, "Using Oracle Virtual Private Database to&nbsp;Control&nbsp;Data Access"</a></p>
</li>
<li>
<p><a href="vpd.htm#i1009519">"Adding Policies for Column-Level Oracle Virtual Private Database"</a></p>
</li>
<li>
<p><a class="olink OLSAG" href="../e10745/toc.htm"><span class="italic">Oracle Label Security Administrator's Guide</span></a></p>
</li>
</ul>
</div>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="BABGFIAI"></a>
<div id="DBSEG99958" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Revoking Privileges and Roles from a User</h2>
<p>This section contains:</p>
<ul>
<li>
<p><a href="#i1008789">Revoking System Privileges and Roles</a></p>
</li>
<li>
<p><a href="#i1008790">Revoking Object Privileges</a></p>
</li>
<li>
<p><a href="#i1008791">Cascading Effects of Revoking Privileges</a></p>
</li>
</ul>
<a id="i1008789"></a>
<div id="DBSEG99959" class="sect2">
<h3 class="sect2">Revoking System Privileges and Roles</h3>
<p>You can revoke system privileges and roles using the SQL statement <code dir="ltr">REVOKE</code>.<a id="sthref888"></a><a id="sthref889"></a><a id="sthref890"></a><a id="sthref891"></a> <a id="sthref892"></a><a id="sthref893"></a>Any user with the <code dir="ltr">ADMIN</code> option for a system privilege or role can revoke the privilege or role from any other database user or role. The revoker does not have to be the user that originally granted the privilege or role. Users with <code dir="ltr">GRANT ANY ROLE</code> can revoke <span class="italic">any</span> role.</p>
<p>The following statement revokes the <code dir="ltr">CREATE TABLE</code> system privilege and the <code dir="ltr">accts_rec</code> role from user <code dir="ltr">psmith</code>:</p>
<pre dir="ltr">
REVOKE CREATE TABLE, accts_rec FROM psmith;
</pre>
<div class="infobox-note">
<p class="notep1">Note:</p>
The <code dir="ltr">ADMIN</code> option<code dir="ltr"><a id="sthref894"></a></code> for a system privilege or role cannot be selectively revoked. Instead, revoke the privilege or role, and then grant the privilege or role again but without the <code dir="ltr">ADMIN</code> option.</div>
</div>
<!-- class="sect2" -->
<a id="i1008790"></a>
<div id="DBSEG99960" class="sect2">
<h3 class="sect2">Revoking Object Privileges</h3>
<p>To<a id="sthref895"></a><a id="sthref896"></a><a id="sthref897"></a> revoke <a id="sthref898"></a>an object privilege, you must fulfill one of the following conditions:</p>
<ul>
<li>
<p>You previously granted the object privilege to the user or role.</p>
</li>
<li>
<p>You possess the <code dir="ltr">GRANT ANY OBJECT PRIVILEGE</code> system privilege that enables you to grant and revoke privileges on behalf of the object owner.</p>
</li>
</ul>
<p>You can only revoke the privileges that you, the person who granted the privilege, directly authorized. You cannot revoke grants that were made by other users to whom you granted the <code dir="ltr">GRANT OPTION</code>. However, there is a cascading effect. If the object privileges of the user who granted the privilege are revoked, then the object privilege grants that were propagated using the <code dir="ltr">GRANT OPTION</code> are revoked as well.</p>
<p>Assuming you are the original grantor of the privilege, the following statement revokes the <code dir="ltr">SELECT</code> and <code dir="ltr">INSERT</code> privileges on the <code dir="ltr">emp</code> table from users <code dir="ltr">jfee</code> and <code dir="ltr">psmith</code>:</p>
<pre dir="ltr">
REVOKE SELECT, INSERT ON emp FROM jfee, psmith;
</pre>
<p>The following statement revokes all object privileges for the <code dir="ltr">dept</code> table that you originally granted to the <code dir="ltr">human_resource</code> role:</p>
<pre dir="ltr">
REVOKE ALL ON dept FROM human_resources;
</pre>
<div class="infobox-note">
<p class="notep1">Note:</p>
The <code dir="ltr">GRANT OPTION</code> for an object privilege cannot be selectively revoked. Instead, revoke the object privilege and then grant it again but without the <code dir="ltr">GRANT OPTION</code>. Users cannot revoke object privileges from themselves.</div>
<a id="i1008009"></a>
<div id="DBSEG99961" class="sect3">
<h4 class="sect3">Revoking Object Privileges on Behalf of the Object Owner<a id="sthref899"></a></h4>
<p>The <code dir="ltr"><a id="sthref900"></a><a id="sthref901"></a>GRANT ANY OBJECT PRIVILEGE</code> system privilege enables you to revoke any specified object privilege where the object owner is the grantor. This occurs when the object privilege is granted by the object owner, or on behalf of the owner by any user holding the <code dir="ltr">GRANT ANY OBJECT PRIVILEGE</code> system privilege.</p>
<p>In a situation where the object privilege was granted by both the owner of the object and the user executing the <code dir="ltr">REVOKE</code> statement (who has both the specific object privilege and the <code dir="ltr">GRANT ANY OBJECT PRIVILEGE</code> system privilege), Oracle Database only revokes the object privilege granted by the user issuing the <code dir="ltr">REVOKE</code> statement. This can be illustrated by continuing the example started in <a href="#i1007837">"Granting Object Privileges on Behalf of the Object Owner"</a>.</p>
<p>At this point, user <code dir="ltr">blake</code> granted the <code dir="ltr">SELECT</code> privilege on <code dir="ltr">HR.EMPLOYEES</code> to <code dir="ltr">clark</code>. Even though <code dir="ltr">blake</code> possesses the <code dir="ltr">GRANT ANY OBJECT PRIVILEGE</code> system privilege, he also holds the specific object privilege, thus this grant is attributed to him. Assume that user <code dir="ltr">HR</code> also grants the <code dir="ltr">SELECT</code> privilege on <code dir="ltr">HR.EMPLOYEES</code> to user <code dir="ltr">clark</code>. A query of the <code dir="ltr">DBA_TAB_PRIVS</code> view shows that the following grants are in effect for the <code dir="ltr">HR.EMPLOYEES</code> table:</p>
<pre dir="ltr">
GRANTEE  GRANTOR PRIVILEGE    GRANTABLE
-------- ------- -----------  ----------
BLAKE    HR       SELECT       YES       
CLARK    BLAKE    SELECT       NO        
CLARK    HR       SELECT       NO        
</pre>
<p>User <code dir="ltr">blake</code> now issues the following <code dir="ltr">REVOKE</code> statement:</p>
<pre dir="ltr">
REVOKE  SELECT ON HR.EMPLOYEES FROM clark;
</pre>
<p>Only the object privilege for user <code dir="ltr">clark</code> granted by user <code dir="ltr">blake</code> is removed. The grant by the object owner, <code dir="ltr">HR</code>, remains.</p>
<pre dir="ltr">
GRANTEE  GRANTOR PRIVILEGE    GRANTABLE
-------- ------- -----------  ----------
BLAKE    HR       SELECT      YES       
CLARK    HR       SELECT      NO        
</pre>
<p>If <code dir="ltr">blake</code> issues the <code dir="ltr">REVOKE</code> statement again, then this time the effect is to remove the object privilege granted by <code dir="ltr">adams</code> (on behalf of <code dir="ltr">HR</code>), using the <code dir="ltr">GRANT ANY OBEJCT PRIVILEGE</code> system privilege.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#i1007837">"Granting Object Privileges on Behalf of the Object Owner"</a></div>
</div>
<!-- class="sect3" -->
<div id="DBSEG99962" class="sect3"><a id="sthref902"></a>
<h4 class="sect3">Revoking Column-Selective Object Privileges</h4>
<p>Although<a id="sthref903"></a><a id="sthref904"></a><a id="sthref905"></a><a id="sthref906"></a><a id="sthref907"></a><a id="sthref908"></a> users can grant column-specific <code dir="ltr">INSERT</code>, <code dir="ltr">UPDATE</code>, and <code dir="ltr">REFERENCES</code> privileges for tables and views, they cannot selectively revoke column-specific privileges with a similar <code dir="ltr">REVOKE</code> statement. Instead, the grantor must first revoke the object privilege for all columns of a table or view, and then selectively repeat the grant of the column-specific privileges that the grantor intends to keep in effect.</p>
<p>For example, assume that role <code dir="ltr">human_resources</code> was granted the <code dir="ltr">UPDATE</code> privilege on the <code dir="ltr">deptno</code> and <code dir="ltr">dname</code> columns of the table <code dir="ltr">dept</code>. To revoke the <code dir="ltr">UPDATE</code> privilege on just the <code dir="ltr">deptno</code> column, issue the following two statements:</p>
<pre dir="ltr">
REVOKE UPDATE ON dept FROM human_resources;
GRANT UPDATE (dname) ON dept TO human_resources;
</pre>
<p>The <code dir="ltr">REVOKE</code> statement revokes the <code dir="ltr">UPDATE</code> privilege on all columns of the <code dir="ltr">dept</code> table from the role <code dir="ltr">human_resources</code>. The <code dir="ltr">GRANT</code> statement then repeats, restores, or reissues the grant of the <code dir="ltr">UPDATE</code> privilege on the <code dir="ltr">dname</code> column to the role <code dir="ltr">human_resources</code>.</p>
</div>
<!-- class="sect3" -->
<div id="DBSEG99963" class="sect3"><a id="sthref909"></a>
<h4 class="sect3">Revoking the REFERENCES Object Privilege</h4>
<p><a id="sthref910"></a><a id="sthref911"></a>If the grantee of the <code dir="ltr">REFERENCES</code> object privilege has used the privilege to create a foreign key constraint (that currently exists), then the grantor can revoke the privilege only by specifying the <code dir="ltr">CASCADE CONSTRAINTS</code> option in the <code dir="ltr">REVOKE</code> statement:</p>
<pre dir="ltr">
REVOKE REFERENCES ON dept FROM jward CASCADE CONSTRAINTS;
</pre>
<p>Any foreign key constraints currently defined that use the revoked <code dir="ltr">REFERENCES</code> privilege are dropped when the <code dir="ltr">CASCADE CONSTRAINTS</code> clause is specified.</p>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="i1008791"></a>
<div id="DBSEG99964" class="sect2">
<h3 class="sect2">Cascading Effects of Revoking Privileges</h3>
<p><a id="sthref912"></a><a id="sthref913"></a><a id="sthref914"></a>Depending on the type of privilege, there may be cascading effects when a privilege is revoked. This is discussed in the following sections:</p>
<ul>
<li>
<p><a href="#CHDIHCBC">Cascading Effects When Revoking System Privileges</a></p>
</li>
<li>
<p><a href="#CHDEDHFF">Cascading Effects When Revoking Object Privileges</a></p>
</li>
</ul>
<a id="CHDIHCBC"></a>
<div id="DBSEG99965" class="sect3">
<h4 class="sect3">Cascading Effects When Revoking System Privileges</h4>
<p>There <a id="sthref915"></a>are no cascading effects when revoking a system privilege related to DDL operations, regardless of whether the privilege was granted with or without the <code dir="ltr">ADMIN</code> option. For example, assume the following:</p>
<ol>
<li>
<p>The security administrator grants the <code dir="ltr">CREATE TABLE</code> system privilege to user <code dir="ltr">jfee</code> with the <code dir="ltr">ADMIN option</code>.</p>
</li>
<li>
<p>User <code dir="ltr">jfee</code> creates a table.</p>
</li>
<li>
<p>User <code dir="ltr">jfee</code> grants the <code dir="ltr">CREATE TABLE</code> system privilege to user <code dir="ltr">tsmith</code>.</p>
</li>
<li>
<p>User <code dir="ltr">tsmith</code> creates a table.</p>
</li>
<li>
<p>The security administrator revokes the <code dir="ltr">CREATE TABLE</code> system privilege from user <code dir="ltr">jfee</code>.</p>
</li>
<li>
<p>The table created by user <code dir="ltr">jfee</code> continues to exist. User <code dir="ltr">tsmith</code> still has the table and the <code dir="ltr">CREATE TABLE</code> system privilege.</p>
</li>
</ol>
<p>You can observe cascading effects when you revoke a system privilege related to a DML operation. If the <code dir="ltr">SELECT ANY TABLE</code> privilege is revoked from a user, then all procedures contained in the user's schema relying on this privilege can no longer be executed successfully until the privilege is reauthorized.</p>
</div>
<!-- class="sect3" -->
<a id="CHDEDHFF"></a>
<div id="DBSEG99966" class="sect3">
<h4 class="sect3">Cascading Effects When Revoking Object Privileges</h4>
<p><a id="sthref916"></a><a id="sthref917"></a>Revoking an object privilege can have cascading effects. Remember the following:</p>
<ul>
<li>
<p><span class="bold">Object definitions that depend on a DML object privilege can be affected if the DML object privilege is revoked.</span> For example, assume that the body of the <code dir="ltr">test</code> procedure includes a SQL statement that queries data from the <code dir="ltr">emp</code> table. If the <code dir="ltr">SELECT</code> privilege on the <code dir="ltr">emp</code> table is revoked from the owner of the <code dir="ltr">test</code> procedure, then the procedure can no longer be executed successfully.</p>
</li>
<li>
<p><span class="bold">When a REFERENCES privilege for a table is revoked from a user, any foreign key integrity constraints that are defined by the user and require the dropped REFERENCES privilege are automatically dropped.</span> For example, assume that user <code dir="ltr">jward</code> is granted the <code dir="ltr">REFERENCES</code> privilege for the <code dir="ltr">deptno</code> column of the <code dir="ltr">dept</code> table. This user now creates a foreign key on the <code dir="ltr">deptno</code> column in the <code dir="ltr">emp</code> table that references the <code dir="ltr">deptno</code> column of the <code dir="ltr">dept</code> table. If the <code dir="ltr">REFERENCES</code> privilege on the <code dir="ltr">deptno</code> column of the <code dir="ltr">dept</code> table is revoked, then the foreign key constraint on the <code dir="ltr">deptno</code> column of the <code dir="ltr">emp</code> table is dropped in the same operation.</p>
</li>
<li>
<p><span class="bold">The object privilege grants propagated using the GRANT OPTION are revoked if the object privilege of a grantor is revoked.</span> For example, assume that <code dir="ltr">user1</code> is granted the <code dir="ltr">SELECT</code> object privilege on the <code dir="ltr">emp</code> table with the <code dir="ltr">GRANT OPTION</code>, and grants the <code dir="ltr">SELECT</code> privilege on <code dir="ltr">emp</code> to <code dir="ltr">user2</code>. Subsequently, the <code dir="ltr">SELECT</code> privilege is revoked from <code dir="ltr">user1</code>. This <code dir="ltr">REVOKE</code> statement is also cascaded to <code dir="ltr">user2</code>. Any objects that depend on the revoked <code dir="ltr">SELECT</code> privilege of <code dir="ltr">user1</code> and <code dir="ltr">user2</code> can also be affected, as described earlier.</p>
</li>
</ul>
<p>Object definitions that require the <code dir="ltr">ALTER</code> and <code dir="ltr">INDEX DDL</code> object privileges are not affected if the <code dir="ltr">ALTER</code> or <code dir="ltr">INDEX</code> object privilege is revoked. For example, if the <code dir="ltr">INDEX</code> privilege is revoked from a user that created an index on a table that belongs to another user, then the index continues to exist after the privilege is revoked.</p>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="BABHJFCF"></a>
<div id="DBSEG40048" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Granting to and Revoking from the PUBLIC Role</h2>
<p><a id="sthref918"></a><a id="sthref919"></a>You can grant and revoke privileges and roles from the role <code dir="ltr">PUBLIC</code>. Because <code dir="ltr">PUBLIC</code> is accessible to every database user, all privileges and roles granted to <code dir="ltr">PUBLIC</code> are accessible to every database user.</p>
<p>Security administrators and database users should grant a privilege or role to <code dir="ltr">PUBLIC</code> only if every database user requires the privilege or role. This recommendation reinforces the general rule that, at any given time, each database user should have only the privileges required to accomplish the current group tasks successfully.</p>
<p><a id="sthref920"></a><a id="sthref921"></a><a id="sthref922"></a>Revoking a privilege from <code dir="ltr">PUBLIC</code> can cause significant cascading effects. If any privilege related to a DML operation is revoked from <code dir="ltr">PUBLIC</code> (for example, SELECT <code dir="ltr">ANY TABLE</code> or <code dir="ltr">UPDATE ON</code> <code dir="ltr">emp</code>), then all procedures in the database, including functions and packages, must be <span class="italic">reauthorized</span> before they can be used again. Therefore, be careful when you grant and revoke DML-related privileges to or from <code dir="ltr">PUBLIC</code>.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p>Managing Object Dependencies in <a class="olink ADMIN" href="../../server.112/e25494/toc.htm"><span class="italic">Oracle Database Administrator's Guide</span></a> for more information about object dependencies</p>
</li>
<li>
<p><a href="guidelines.htm#i1007433">"Guidelines for Securing Data"</a></p>
</li>
</ul>
</div>
</div>
<!-- class="sect1" -->
<a id="BABIEADD"></a>
<div id="DBSEG99967" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Granting Roles Using the Operating System or Network<a id="sthref923"></a><a id="sthref924"></a><a id="sthref925"></a><a id="sthref926"></a></h2>
<p>This section contains:</p>
<ul>
<li>
<p><a href="#BABGBJFJ">About Granting Roles Using the Operating System or Network</a></p>
</li>
<li>
<p><a href="#i1008307">Using Operating System Role Identification</a></p>
</li>
<li>
<p><a href="#i1008799">Using Operating System Role Management</a></p>
</li>
<li>
<p><a href="#i1008800">Granting and Revoking Roles When OS_ROLES Is Set to TRUE</a></p>
</li>
<li>
<p><a href="#i1008801">Enabling and Disabling Roles When OS_ROLES Is Set to TRUE</a></p>
</li>
<li>
<p><a href="#i1008802">Using Network Connections with Operating System Role Management</a></p>
</li>
</ul>
<a id="BABGBJFJ"></a>
<div id="DBSEG99968" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">About Granting Roles Using the Operating System or Network</h3>
<p>Instead of a security administrator explicitly granting and revoking database roles to and from users using <code dir="ltr">GRANT</code> and <code dir="ltr">REVOKE</code> statements, the operating system on which Oracle Database runs can grant roles to users at connect time. Roles can be administered using the operating system and passed to Oracle Database when a user creates a session. As part of this mechanism, the default roles of a user and the roles granted to a user with the <code dir="ltr">ADMIN</code> option can be identified. If the operating system is used to authorize users for roles, then all roles must be created in the database and privileges assigned to the role with <code dir="ltr">GRANT</code> statements.</p>
<p>Roles can also be granted through a network service.</p>
<p>The advantage of using the operating system to identify the database roles of a user is that privilege management for an Oracle database can be externalized. The security facilities offered by the operating system control user privileges. This option may offer advantages of centralizing security for several system activities, such as the following situation:</p>
<ul>
<li>
<p>MVS Oracle administrators want RACF groups to identify database user roles.</p>
</li>
<li>
<p>UNIX Oracle administrators want UNIX groups to identify database user roles.</p>
</li>
<li>
<p>VMS Oracle administrators want to use rights identifiers to identify database user roles.</p>
</li>
</ul>
<p>The main disadvantage of using the operating system to identify the database roles of a user is that privilege management can only be performed at the role level. Individual privileges cannot be granted using the operating system, but they can still be granted inside the database using <code dir="ltr">GRANT</code> statements.</p>
<p>A second disadvantage of using this feature is that, by default, users cannot connect to the database through the shared server or any other network connection if the operating system is managing roles. However, you can change this default as described in <a href="#i1008802">"Using Network Connections with Operating System Role Management"</a>.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
The features described in this section are available only on some operating systems. See your operating system-specific Oracle Database documentation to determine if you can use these features.</div>
</div>
<!-- class="sect2" -->
<a id="i1008307"></a>
<div id="DBSEG99969" class="sect2">
<h3 class="sect2">Using Operating System Role Identification</h3>
<p><a id="sthref927"></a><a id="sthref928"></a><a id="sthref929"></a>To cause a database to use the operating system to identify the database roles of each user when a session is created, set the initialization parameter <code dir="ltr">OS_ROLES</code> to <code dir="ltr">TRUE</code> (and restart the instance, if it is currently running). When a user tries to create a session with the database, Oracle Database initializes the user security domain using the database roles identified by the operating system.</p>
<p><a id="sthref930"></a><a id="sthref931"></a><a id="sthref932"></a>To identify database roles for a user, the operating system account for each Oracle Database user must have operating system identifiers (these may be called groups, rights identifiers, or other similar names) that indicate which database roles are to be available for the user. Role specification can also indicate which roles are the default roles of a user and which roles are available with the <code dir="ltr">ADMIN</code> option. No matter which operating system is used, the role specification at the operating system level follows the format:</p>
<pre dir="ltr">
ora_<span class="italic">ID</span>_<span class="italic">ROLE</span>[[_d][_a][_da]]
</pre>
<p>In this specification:</p>
<ul>
<li>
<p><code dir="ltr">ID</code> has a definition that varies on different operating systems. For example, on VMS, <code dir="ltr">ID</code> is the instance identifier of the database; on VMS, it is the computer type; and on UNIX, it is the system <code dir="ltr">ID</code>.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
<code dir="ltr">ID</code> is case-sensitive to match your <code dir="ltr">ORACLE_SID</code>. <code dir="ltr">ROLE</code> is not case-sensitive.</div>
</li>
<li>
<p><code dir="ltr">ROLE</code> is the name of the database role.</p>
</li>
<li>
<p><code dir="ltr">d</code> is an optional character that indicates this role is to be a default role of the database user.</p>
</li>
<li>
<p><code dir="ltr">a</code> is an optional character that indicates this role is to be granted to the user with the <code dir="ltr">ADMIN</code> option. This allows the user to grant the role to other roles only. Roles cannot be granted to users if the operating system is used to manage roles.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
If either the <code dir="ltr">d</code> or <code dir="ltr">a</code> character is specified, then precede that character by an underscore (_).</div>
</li>
</ul>
<p>For example, an operating system account might have the following roles identified in its profile:</p>
<pre dir="ltr">
ora_PAYROLL_ROLE1
ora_PAYROLL_ROLE2_a
ora_PAYROLL_ROLE3_d
ora_PAYROLL_ROLE4_da
</pre>
<p>When the corresponding user connects to the <code dir="ltr">payroll</code> instance of Oracle Database, <code dir="ltr">role3</code> and <code dir="ltr">role4</code> are defaults, while <code dir="ltr">role2</code> and <code dir="ltr">role4</code> are available with the <code dir="ltr">ADMIN</code> option.</p>
</div>
<!-- class="sect2" -->
<a id="i1008799"></a>
<div id="DBSEG99970" class="sect2">
<h3 class="sect2">Using Operating System Role Management</h3>
<p><a id="sthref933"></a>When you use operating system-managed roles, remember that database roles are being granted to an operating system user. Any database user to which the operating system user is able to connect will have the authorized database roles enabled. For this reason, you should consider defining all Oracle Database users as <code dir="ltr">IDENTIFIED EXTERNALLY</code> if you are using <code dir="ltr">OS_ROLES = TRUE</code>, so that the database accounts are tied to the operating system account that was granted privileges.</p>
</div>
<!-- class="sect2" -->
<a id="i1008800"></a>
<div id="DBSEG99971" class="sect2">
<h3 class="sect2">Granting and Revoking Roles When OS_ROLES Is Set to TRUE</h3>
<p><a id="sthref934"></a><a id="sthref935"></a>If the <code dir="ltr">OS_ROLES</code> parameter is set to <code dir="ltr">TRUE</code>, then the operating system completely manages the granting and revoking of roles to users. Any previous granting of roles to users using <code dir="ltr">GRANT</code> statements do not apply. However, they are still listed in the data dictionary. Only the role grants to users made at the operating system level apply. Users can still grant privileges to roles and users.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
If the operating system grants a role to a user with the <code dir="ltr">ADMIN</code> option, then the user can grant the role only to other roles.</div>
</div>
<!-- class="sect2" -->
<a id="i1008801"></a>
<div id="DBSEG99972" class="sect2">
<h3 class="sect2">Enabling and Disabling Roles When OS_ROLES Is Set to TRUE</h3>
<p>If <a id="sthref936"></a><a id="sthref937"></a><a id="sthref938"></a>the <code dir="ltr">OS_ROLES</code> initialization parameter is <a id="sthref939"></a><a id="sthref940"></a><a id="sthref941"></a><a id="sthref942"></a>set to <code dir="ltr">TRUE</code>, then any role granted by the operating system can be dynamically enabled using the <code dir="ltr">SET ROLE</code> statement. This still applies, even if the role was defined to require a password or operating system authorization. However, any role not identified in the operating system account of a user cannot be specified in a <code dir="ltr">SET ROLE</code> statement, even if a role was granted using a <code dir="ltr">GRANT</code> statement when <code dir="ltr">OS_ROLES = FALSE</code>. (If you specify such a role, then Oracle Database ignores it.)</p>
<p>When <code dir="ltr">OS_ROLES</code> is set to <code dir="ltr">TRUE</code>, then the user can enable up to 148 roles. Remember that this number includes other roles that may have been granted to the role.</p>
</div>
<!-- class="sect2" -->
<a id="i1008802"></a>
<div id="DBSEG99973" class="sect2">
<h3 class="sect2">Using Network Connections with Operating System Role Management</h3>
<p><a id="sthref943"></a><a id="sthref944"></a><a id="sthref945"></a>If you have the operating system manage roles, then, by default, users cannot connect to the database through the shared server. This restriction is the default because a remote user could impersonate another operating system user over an unsecure connection.</p>
<p><a id="sthref946"></a>If you are not concerned with this security risk and want to use operating system role management with the shared server, or any other network connection, then set the initialization parameter <code dir="ltr">REMOTE_OS_ROLES</code> to <code dir="ltr">TRUE</code>. The change takes effect the next time you start the instance and mount the database. The default setting of this parameter is <code dir="ltr">FALSE</code>.</p>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="BABJEHFA"></a>
<div id="DBSEG99974" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">When Do Grants and Revokes Take Effect?</h2>
<p><a id="sthref947"></a><a id="sthref948"></a>Depending on what is granted or revoked, a grant or revoke takes effect at different times:</p>
<ul>
<li>
<p>All grants and revokes of system and object privileges to anything (users, roles, and <code dir="ltr">PUBLIC</code>) take immediate effect.</p>
</li>
<li>
<p>All grants and revokes of roles to anything (users, other roles, <code dir="ltr">PUBLIC</code>) take effect only when a current user session issues a <code dir="ltr">SET ROLE</code> statement to reenable the role after the grant and revoke, or when a new user session is created after the grant or revoke.</p>
</li>
</ul>
<p>You can see which roles are currently enabled by examining the <code dir="ltr">SESSION_ROLES</code> data dictionary view.</p>
<a id="i1008180"></a>
<div id="DBSEG99975" class="sect2">
<h3 class="sect2">How the SET ROLE Statement Affects Grants and Revokes</h3>
<p>During<a id="sthref949"></a><a id="sthref950"></a><a id="sthref951"></a><a id="sthref952"></a> the user session, the user or an application can use the <code dir="ltr">SET ROLE</code> statement any number of times to change the roles currently enabled for the session. The user must already be granted the roles that are named in the <code dir="ltr">SET ROLE</code> statement.</p>
<p><a href="#BABJCHGD">Example 4-16</a> enables the role <code dir="ltr">clerk</code>, which you have already been granted, and specifies the password.</p>
<div id="DBSEG99976" class="example">
<p class="titleinexample"><a id="BABJCHGD"></a>Example 4-16 Using SET ROLE to Grant a Role and Specify a Password</p>
<pre dir="ltr">
SET ROLE clerk IDENTIFIED BY <span class="italic">password</span>;
</pre></div>
<!-- class="example" -->
<p>Replace <code dir="ltr"><span class="codeinlineitalic">password</span></code> with a password that is secure. <a href="authentication.htm#CHDFDHAJ">"Minimum Requirements for Passwords"</a> describes the minimum requirements for passwords.</p>
<p><a href="#BABBJEHJ">Example 4-17</a> shows how to use <code dir="ltr">SET ROLE</code> to disable all roles.</p>
<div id="DBSEG99977" class="example">
<p class="titleinexample"><a id="BABBJEHJ"></a>Example 4-17 Using SET ROLE to Disable All Roles</p>
<pre dir="ltr">
SET ROLE NONE;
</pre></div>
<!-- class="example" --></div>
<!-- class="sect2" -->
<a id="BABHJBGD"></a>
<div id="DBSEG99978" class="sect2">
<h3 class="sect2">Specifying a Default Role<a id="sthref953"></a><a id="sthref954"></a></h3>
<p>When a user logs on, Oracle Database enables all privileges granted explicitly to the user and all privileges in the default roles of the user.</p>
<p>You can set and alter a list of default roles for a user by using the <code dir="ltr">ALTER USER</code> SQL statement. The <code dir="ltr">ALTER USER</code> statement specifies roles that are to be enabled when a user connects to the database. The user must have been directly granted the roles with a <code dir="ltr">GRANT</code> statement, or the roles must have been created by the user with the <code dir="ltr">CREATE ROLE</code> privilege. For information about the restrictions of the <code dir="ltr">DEFAULT ROLE</code> clause of the <code dir="ltr">ALTER USER</code> statement, see <a class="olink SQLRF30055" href="../../server.112/e41084/statements_4003.htm#SQLRF30055"><span class="italic">Oracle Database SQL Language Reference</span></a>.</p>
<p><a href="#BABECGBA">Example 4-18</a> <a id="sthref955"></a><a id="sthref956"></a>sets the default roles <code dir="ltr">payclerk</code> and <code dir="ltr">pettycash</code> for user <code dir="ltr">jane</code>:</p>
<div id="DBSEG99979" class="example">
<p class="titleinexample"><a id="BABECGBA"></a>Example 4-18 Using ALTER USER to Set Default Roles</p>
<pre dir="ltr">
ALTER USER jane DEFAULT ROLE payclerk, pettycash;
</pre></div>
<!-- class="example" -->
<p>You cannot set default roles for a user in the <code dir="ltr">CREATE USER</code> statement. When you first create a user, the default user role setting is <code dir="ltr">ALL</code>, which causes all roles subsequently granted to the user to be default roles. Use the <code dir="ltr">ALTER USER</code> statement to limit the default user roles.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
When you create a role (other than a global role or an application role), it is granted implicitly to you, and your set of default roles is updated to include the new role. Be aware that only 148 roles can be enabled for a user session. When aggregate roles, such as the <code dir="ltr">DBA</code> role, are granted to a user, the roles granted to the role are included in the number of roles the user has. For example, if a role has 20 roles granted to it and you grant that role to the user, then the user now has 21 additional roles. Therefore, when you grant new roles to a user, use the <code dir="ltr">DEFAULT ROLE</code> clause of the <code dir="ltr">ALTER USER</code> statement to ensure that not too many roles are specified as that user's default roles.</div>
</div>
<!-- class="sect2" -->
<div id="DBSEG99980" class="sect2"><a id="sthref957"></a>
<h3 class="sect2">The Maximum Number of Roles That a User Can Enable</h3>
<p>A <a id="sthref958"></a>user <a id="sthref959"></a>can enable no more than 148 roles.You can grant a user as many roles as you want, but you should restrict the number of roles granted to a user to the minimum roles the user needs. See <a href="guidelines.htm#CHDGIEJE">"Guidelines for Securing Roles"</a> for additional guidelines on granting roles to users.</p>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="CIHDAJDJ"></a>
<div id="DBSEG40012" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Managing Fine-Grained Access in PL/SQL Packages and Types</h2>
<p>You <a id="sthref960"></a>can configure user access control to external network services and wallets through the <code dir="ltr">UTL_TCP</code>, <code dir="ltr">UTL_SMTP</code>, <code dir="ltr">UTL_MAIL</code>, <code dir="ltr">UTL_HTTP</code>, and <code dir="ltr">UTL_INADDR</code> PL/SQL packages, the <code dir="ltr">DBMS_LDAP</code> PL/SQL package, and the <code dir="ltr">HttpUriType</code> type.</p>
<ul>
<li>
<p><span class="bold">Configuring fine-grained access control for users and roles that need to access external network services from the database.</span> This way, specific groups of users can connect to one or more host computers, based on privileges that you grant them. Typically, you use this feature to control access to applications that run on specific host addresses.</p>
</li>
<li>
<p><span class="bold">Configuring fine-grained access control to Oracle wallets to make HTTP requests that require password or client-certificate authentication.</span> This feature enables you to grant privileges to users who are using passwords and client certificates stored in Oracle wallets to access external protected HTTP resources through the <code dir="ltr">UTL_HTTP</code> package. For example, you can configure applications to use the credentials stored in the wallets instead of hard-coding the credentials in the applications. For more information about how you can use wallets to store passwords and credentials, see <a class="olink ASOAG160" href="../../network.112/e40393/asowalet.htm#ASOAG160"><span class="italic">Oracle Database Advanced Security Administrator's Guide</span></a>.</p>
</li>
</ul>
<p>This section contains:</p>
<ul>
<li>
<p><a href="#BABCBFHD">About Fine-Grained Access Control to External Network Services</a></p>
</li>
<li>
<p><a href="#BABBIDFH">About Access Control to Wallets</a></p>
</li>
<li>
<p><a href="#BABICBEI">Upgrading Applications That Depend on Packages That Use External Network Services</a></p>
</li>
<li>
<p><a href="#CIHIIBGH">Creating an Access Control List for External Network Services</a></p>
</li>
<li>
<p><a href="#BABJAJJI">Configuring Access Control to a Wallet</a></p>
</li>
<li>
<p><a href="#CIHHEGHJ">Examples of Creating Access Control Lists</a></p>
</li>
<li>
<p><a href="#CIHJBFCJ">Specifying a Group of Network Host Computers</a></p>
</li>
<li>
<p><a href="#CIHGCIGH">Precedence Order for a Host Computer in Multiple Access Control List Assignments</a></p>
</li>
<li>
<p><a href="#BABIAAFD">Precedence Order for a Host in Access Control List Assignments with Port Ranges</a></p>
</li>
<li>
<p><a href="#BABGIHGH">Checking Privilege Assignments That Affect User Access to a Network Host</a></p>
</li>
<li>
<p><a href="#BABHGBGE">Setting the Precedence of Multiple Users and Roles in One Access Control List</a></p>
</li>
<li>
<p><a href="#CIHGEHAG">Finding Information About Access Control Lists Configured for User Access</a></p>
</li>
</ul>
<a id="BABCBFHD"></a>
<div id="DBSEG99981" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">About Fine-Grained Access Control to External Network Services</h3>
<p><a id="sthref961"></a>To configure fine-grained access control to external network services, you create an access control list (ACL), which is stored in Oracle XML DB. You can create the access control list by using Oracle XML DB itself, or by using the <code dir="ltr">DBMS_NETWORK_ACL_ADMIN</code> and <code dir="ltr">DBMS_NETWORK_ACL_UTILITY</code> PL/SQL packages. This guide explains how to use these packages to create and manage the access control list. To create an access control list by using Oracle XML DB and for general conceptual information about access control lists, see <a class="olink ADXDB2400" href="../../appdev.112/e23094/xdb21sec.htm#ADXDB2400"><span class="italic">Oracle XML DB Developer's Guide</span></a>.</p>
<p>This feature enhances security for network connections because it restricts the external network hosts that a database user can connect to using the PL/SQL network utility packages <code dir="ltr">UTL_TCP</code>, <code dir="ltr">UTL_SMTP</code>, <code dir="ltr">UTL_MAIL</code>, <code dir="ltr">UTL_HTTP</code>, and <code dir="ltr">UTL_INADDR</code>, the <code dir="ltr">DBMS_LDAP</code> PL/SQL package, and the <code dir="ltr">HttpUriType</code> type. Otherwise, an intruder who gained access to the database could maliciously attack the network, because, by default, the PL/SQL utility packages are created with the <code dir="ltr">EXECUTE</code> privilege granted to <code dir="ltr">PUBLIC</code> users. These PL/SQL network utility packages, and the <code dir="ltr">DBMS_NETWORK_ACL_ADMIN</code> and <code dir="ltr">DBMS_NETWORK_ACL_UTILITY</code> packages, support both IP Version 4 (IPv4) and IP Version 6 (IPv6) addresses. This guide explains how to manage access control to both versions. For detailed information about how the IPv4 and IPv6 notation works with Oracle Database, see <a class="olink NETAG999" href="../../network.112/e41945/layers.htm#NETAG999"><span class="italic">Oracle Database Net Services Administrator's Guide</span></a>.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="auditing.htm#BCGBDIBD">"Tutorial: Adding an Email Alert to a Fine-Grained Audit Policy"</a> for an example of configuring access control to external network services for email alerts</div>
</div>
<!-- class="sect2" -->
<a id="BABBIDFH"></a>
<div id="DBSEG99982" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">About Access Control to Wallets</h3>
<p><a id="sthref962"></a>When a user accesses Web pages that are protected by a remote Web server, the user can authenticate himself or herself by supplying the passwords and client certificates that are stored in an Oracle wallet. The Oracle wallet provides secure storage of user passwords and client certificates.</p>
<p>To configure access control to a wallet, you need the following components:</p>
<ul>
<li>
<p><span class="bold">An Oracle wallet.</span> You can create the wallet using the Oracle Database <code dir="ltr">mkstore</code> utility or Oracle Wallet Manager. The HTTP request will use the external password store or the client certificate in the wallet to authenticate the user</p>
</li>
<li>
<p><span class="bold">An access control list to grant privileges to the user to use the wallet.</span> To create the access control list, you use the <code dir="ltr">DBMS_NETWORK_ACL_ADMIN</code> PL/SQL package.</p>
</li>
<li>
<p><span class="bold">A way to associate the wallet with the access control list.</span> To do so, use the <code dir="ltr">DBMS_NETWORK_ACL_ADMIN</code> PL/SQL package.</p>
</li>
</ul>
<p><a id="sthref963"></a>The use of wallets is beneficial because it provides secure storage of passwords and client certificates necessary to access protected Web pages.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#BABJAJJI">"Configuring Access Control to a Wallet"</a></div>
</div>
<!-- class="sect2" -->
<a id="BABICBEI"></a>
<div id="DBSEG99983" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Upgrading Applications That Depend on Packages That Use External Network Services</h3>
<p><a id="sthref964"></a><a id="sthref965"></a>If you have upgraded from a release before Oracle Database 11<span class="italic">g</span> Release 1 (11.1), and your applications depend on PL/SQL network utility packages <code dir="ltr">UTL_TCP</code>, <code dir="ltr">UTL_SMTP</code>, <code dir="ltr">UTL_MAIL</code>, <code dir="ltr">UTL_HTTP</code>, and <code dir="ltr">UTL_INADDR</code>, the <code dir="ltr">DBMS_LDAP</code> PL/SQL package, or the <code dir="ltr">HttpUriType</code> type, then the following error may occur when you try to run the application:<a id="sthref966"></a><a id="sthref967"></a></p>
<pre dir="ltr">
ORA-24247: network access denied by access control list (ACL)
</pre>
<p>Use the procedures in this section to reconfigure the network access for the application. See also <a class="olink UPGRD005" href="../../server.112/e23633/intro.htm#UPGRD005"><span class="italic">Oracle Database Upgrade Guide</span></a> for compatibility issues for applications that depend on the PL/SQL network utility packages. For detailed information about the network utility packages, see <a class="olink ARPLS" href="../../appdev.112/e40758/toc.htm"><span class="italic">Oracle Database PL/SQL Packages and Types Reference</span></a>.</p>
</div>
<!-- class="sect2" -->
<a id="CIHIIBGH"></a>
<div id="DBSEG99984" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Creating an Access Control List for External Network Services</h3>
<p><a id="sthref968"></a>When you create access control lists for network connections, you should create one access control list dedicated to a group of common users, for example, users who need access to a particular application that resides on a specific host computer. For ease of administration and for good system performance, do not create too many access control lists. Network hosts accessible to the same group of users should share the same access control list.</p>
<p>To create the access control list by using the <code dir="ltr"><a id="sthref969"></a>DBMS_NETWORK_ACL_ADMIN</code> package, follow these steps:</p>
<ul>
<li>
<p><a href="#BABFGFHJ">Step 1: Create the Access Control List and Its Privilege Definitions</a></p>
</li>
<li>
<p><a href="#BABHFIAH">Step 2: Assign the Access Control List to One or More Network Hosts</a></p>
</li>
</ul>
<a id="BABFGFHJ"></a>
<div id="DBSEG99985" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Step 1: Create the Access Control List and Its Privilege Definitions</h4>
<p>Use the <code dir="ltr">DBMS_NETWORK_ACL_ADMIN.CREATE_ACL</code> procedure to create the content of the access control list. It contains a name of the access control list, a brief description, and privilege settings for one user or role that you want to associate with the access control list. In an access control list, privileges for each user or role are grouped together as an access control entry (ACE). An access control list must have the privilege settings for at least one user or role.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
You cannot import or export the access control list settings by using the Oracle Database import or export utilities such as Oracle Data Pump.</div>
<p><a id="sthref970"></a>for example:</p>
<pre dir="ltr">
BEGIN
 DBMS_NETWORK_ACL_ADMIN.CREATE_ACL (
  acl          =&gt; '<span class="italic">file_name</span>.xml', 
  description  =&gt; '<span class="italic">file description</span>',
  principal    =&gt; '<span class="italic">user_or_role</span>',
  is_grant     =&gt; TRUE|FALSE, 
  privilege    =&gt; 'connect|resolve',
  start_date   =&gt; null|<span class="italic">timestamp_with_time_zone</span>,
  end_date     =&gt; null|<span class="italic">timestamp_with_time_zone</span>); 
END;
</pre>
<p>In this specification:</p>
<ul>
<li>
<p><code dir="ltr">acl</code>: Enter a name for the access control list XML file. Oracle Database creates this file relative to the <code dir="ltr">/sys/acls</code> directory in the XML DB Repository in the database. Include the <code dir="ltr">.xml</code> extension. For example:</p>
<pre dir="ltr">
acl =&gt; 'us-example-com-permissions.xml',
</pre></li>
<li>
<p><code dir="ltr">description</code>: Enter a brief description of the purpose of this file. For example:</p>
<pre dir="ltr">
description =&gt; 'Network connection permission for ACCT_MGR role',
</pre></li>
<li>
<p><code dir="ltr">principal</code>: Enter the first user account or role being granted or denied permissions. For example:</p>
<pre dir="ltr">
principal =&gt; 'ACCT_MGR',
</pre>
<p>Enter the name of the user account or role in case sensitive characters. For example, if the database stores the role name <code dir="ltr">ACCT_MGR</code> in all capital letters, entering it in mixed or lower case will not work. You can find the user accounts and roles in the current database instance by querying the <code dir="ltr">DBA_USERS</code> and <code dir="ltr">DBA_ROLES</code> data dictionary views. Typically, user names and roles are stored in upper-case letters.</p>
<p>If you want to enter multiple users or grant additional privileges to this user or role, use the <code dir="ltr">DBMS_NETWORK_ACL.ADD_PRIVILEGE</code> procedure (described next) after you have created this access control list XML file.</p>
</li>
<li>
<p><code dir="ltr">is_grant</code>: Enter either <code dir="ltr">TRUE</code> or <code dir="ltr">FALSE</code>, to indicate whether the privilege is to be granted or denied. For example:</p>
<pre dir="ltr">
is_grant =&gt; TRUE,
</pre></li>
<li>
<p><code dir="ltr">privilege</code>: Enter either <code dir="ltr">connect</code> or <code dir="ltr">resolve</code>. This setting is case sensitive, so always enter it in lowercase. For example:</p>
<pre dir="ltr">
privilege =&gt; 'connect',
</pre>
<p>The <code dir="ltr">connect</code> privilege grants the user permission to connect to a network service at an external host. The <code dir="ltr">resolve</code> privilege grants the user permission to resolve a network host name or an IP address.</p>
<p>A database user needs the <code dir="ltr">connect</code> privilege to an external network host computer if he or she is connecting using the <code dir="ltr">UTL_TCP</code>, <code dir="ltr">UTL_SMTP</code>, <code dir="ltr">UTL_MAIL</code>, <code dir="ltr">UTL_HTTP</code>, the <code dir="ltr">DBMS_LDAP</code> package, and the <code dir="ltr">HttpUriType</code> type. To resolve the host name that was given a host IP address, or the IP address that was given a host name, with the <code dir="ltr">UTL_INADDR</code> package, grant the database user the <code dir="ltr">resolve</code> privilege instead.</p>
<p>You can use the data dictionary views described in <a href="#CIHGEHAG">"Finding Information About Access Control Lists Configured for User Access"</a> to find more information about existing privileges and network connections.</p>
</li>
<li>
<p><code dir="ltr">start_date</code>: (Optional) Enter the start date for the access control entry (ACE), in <code dir="ltr">TIMESTAMP WITH TIME ZONE</code> format (YYYY-MM-DD HH:MI:SS.FF TZR). When specified, the access control entry will be valid only on or after the specified date. The default is <code dir="ltr">null</code>. For example, to set a start date of February 28, 2008, at 6:30 a.m. in San Francisco, California, U.S., which is in the Pacific time zone:</p>
<pre dir="ltr">
start_date =&gt; '2008-02-28 06:30:00.00 US/Pacific',
</pre>
<p>The <code dir="ltr">NLS_TIMESTAMP_FORMAT</code> initialization parameter sets the default timestamp format. See <a class="olink REFRN10131" href="../../server.112/e40402/initparams157.htm#REFRN10131"><span class="italic">Oracle Database Reference</span></a> for more information.</p>
</li>
<li>
<p><code dir="ltr">end_date</code>: (Optional) Enter the end date for the access control entry (ACE), in <code dir="ltr">TIMESTAMP WITH TIME ZONE</code> format (YYYY-MM-DD HH:MI:SS.FF TZR). When specified, the access control entry expires after the specified date. The <code dir="ltr">end_date</code> setting must be greater than or equal to the <code dir="ltr">start_date</code> setting. The default is <code dir="ltr">null</code>.</p>
<p>For example, to set an end date of December 10, 2008, at 11:59 p.m. in San Francisco, California, U.S., which is in the Pacific time zone:</p>
<pre dir="ltr">
end_date =&gt; '2008-12-10 23:59:00.00 US/Pacific');
</pre></li>
</ul>
<p>To<a id="sthref971"></a> add more users or roles to the access control list, or grant additional privileges to one user or role, use the <code dir="ltr">DBMS_NETWORK_ACL.ADD_PRIVILEGE</code> procedure. The syntax is as follows:</p>
<pre dir="ltr">
BEGIN
 DBMS_NETWORK_ACL_ADMIN.ADD_PRIVILEGE ( 
  acl         =&gt; '<span class="italic">file_name</span>.xml', 
  principal   =&gt; '<span class="italic">user_or_role</span>',
  is_grant    =&gt; TRUE|FALSE, 
  privilege   =&gt; 'connect|resolve', 
  position    =&gt; null|<span class="italic">value</span>, 
  start_date  =&gt; null|<span class="italic">timestamp_with_time_zone</span>,
  end_date    =&gt; null|<span class="italic">timestamp_with_time_zone</span>);
END;
</pre>
<p>As you can see, the parameters to add the privilege are the similar to those in the <code dir="ltr">CREATE_ACL</code> procedure, except that <code dir="ltr">description</code> is not included and the <code dir="ltr">position</code> parameter, which sets the order of precedence for multiple users or roles, was added. Because you now are adding more than one user or role, you may want to consider setting their precedence. <a href="#BABHGBGE">"Setting the Precedence of Multiple Users and Roles in One Access Control List"</a> provides more information.</p>
<p>Other <code dir="ltr">DBMS_NETWORK_ACL_ADMIN</code> procedures that are available for this step are <code dir="ltr">DELETE_PRIVILEGE</code> and <code dir="ltr">DROP_ACL</code>.</p>
<p>At this stage, you have created an access control list that defines the privileges needed to connect to a network host. However, the access control list has no effect until you complete <a href="#BABHFIAH">Step 2: Assign the Access Control List to One or More Network Hosts</a>.</p>
</div>
<!-- class="sect3" -->
<a id="BABHFIAH"></a>
<div id="DBSEG99986" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Step 2: Assign the Access Control List to One or More Network Hosts</h4>
<p>After<a id="sthref972"></a> you create the access control list, then you are ready to assign it to one or more network host computers. You can use the <code dir="ltr">DBMS_NETWORK_ACL_ADMIN.ASSIGN_ACL</code> procedure to do so.</p>
<p>For example:</p>
<pre dir="ltr">
BEGIN
 DBMS_NETWORK_ACL_ADMIN.ASSIGN_ACL (
  acl         =&gt; '<span class="italic">file_name</span>.xml',
  host        =&gt; '<span class="italic">network_host</span>', 
  lower_port  =&gt; null|<span class="italic">port_number</span>,
  upper_port  =&gt; null|<span class="italic">port_number</span>); 
END;
</pre>
<p>In this specification:</p>
<ul>
<li>
<p><code dir="ltr">acl</code>: Enter the name of the access control list XML file (from <a href="#BABFGFHJ">Step 1: Create the Access Control List and Its Privilege Definitions</a>) to assign to the network host. Oracle Database creates this file relative to the <code dir="ltr">/sys/acls</code> directory in the XML DB Repository in the database. Include the <code dir="ltr">.xml</code> extension. For example:</p>
<pre dir="ltr">
acl =&gt; 'us-example-com-permissions.xml',
</pre></li>
<li>
<p><code dir="ltr">host</code>: Enter the network host to which this access control list will be assigned. This setting can be a name or IP address of the network host. Host names are case insensitive. For example:</p>
<pre dir="ltr">
host =&gt; 'us.example.com',
</pre>
<p>If you specify<a id="sthref973"></a><a id="sthref974"></a> <code dir="ltr">localhost</code>, and if the host name has not been specified with the <code dir="ltr">UTL_INADDR</code> and <code dir="ltr">UTL_HTTP</code> PL/SQL packages in situations in which the local host is assumed, then these packages will search for and use the ACL that has been assigned <code dir="ltr">localhost</code> for the <code dir="ltr">host</code> setting.</p>
<p>See the following sections for more information about how network host computers in access control list assignments work:</p>
<ul>
<li>
<p><a href="#CIHJBFCJ">"Specifying a Group of Network Host Computers"</a></p>
</li>
<li>
<p><a href="#BABGIHGH">"Checking Privilege Assignments That Affect User Access to a Network Host"</a></p>
</li>
<li>
<p><a href="#CIHGCIGH">"Precedence Order for a Host Computer in Multiple Access Control List Assignments"</a></p>
</li>
<li>
<p><a href="#BABIAAFD">"Precedence Order for a Host in Access Control List Assignments with Port Ranges"</a></p>
</li>
</ul>
</li>
<li>
<p><code dir="ltr">lower_port</code>: (Optional) For TCP connections, enter the lower boundary of the port range. Use this setting for the <code dir="ltr">connect</code> privilege only; omit it for the <code dir="ltr">resolve</code> privilege. The default is <code dir="ltr">null</code>, which means that there is no port restriction (that is, the ACL applies to all ports). The range of port numbers is between 1 and 65535.</p>
<p>For example:</p>
<pre dir="ltr">
lower_port =&gt; 80,
</pre></li>
<li>
<p><code dir="ltr">upper_port</code>: (Optional) For TCP connections, enter the upper boundary of the port range. Use this setting for <code dir="ltr">connect</code> privileges only; omit it for <code dir="ltr">resolve</code> privileges. The default is <code dir="ltr">null</code>, which means that there is no port restriction (that is, the ACL applies to all ports). The range of port numbers is between 1 and 65535</p>
<p>For example:</p>
<pre dir="ltr">
upper_port =&gt; 3999);
</pre>
<p>If you enter a value for the <code dir="ltr">lower_port</code> and leave the <code dir="ltr">upper_port</code> at <code dir="ltr">null</code> (or just omit it), Oracle Database assumes the <code dir="ltr">upper_port</code> setting is the same as the <code dir="ltr">lower_port</code>. For example, if you set <code dir="ltr">lower_port</code> to <code dir="ltr">80</code> and omit <code dir="ltr">upper_port</code>, the <code dir="ltr">upper_port</code> setting is assumed to be <code dir="ltr">80</code>.</p>
<p>The <code dir="ltr">resolve</code> privilege in the access control list takes no effect when a port range is specified in the access control list assignment.</p>
</li>
</ul>
<p>Only one access control list can be assigned to any host computer, domain, or IP subnet, and if specified, the TCP port range. When you assign a new access control list to a network target, Oracle Database unassigns the previous access control list that was assigned to the same target. However, Oracle Database does not drop the access control list. You can drop the access control list by using the <code dir="ltr">DROP_ACL</code> procedure. To remove an access control list assignment, use the <code dir="ltr">UNASSIGN_ACL</code> procedure.</p>
<p>Depending on how you create and maintain the access control list, the two steps may overlap. For example, you can create an access control list that has privileges for five users in it, and then apply it to two host computers. Later on, you can modify this access control list to have different or additional users and privileges, and assign it to different or additional host computers.</p>
<p>All access control list changes, including the assignment to network hosts, are transactional. They do not take effect until the transaction is committed.</p>
<p>You can find information about existing privileges and network connections by using the data dictionary views described in <a href="#CIHHCGHF">Table 4-6, "Data Dictionary Views That Display Information about Access Control Lists"</a>.</p>
<p>For information about using the <code dir="ltr">DBMS_NETWORK_ACL_ADMIN</code> package, see <a class="olink ARPLS148" href="../../appdev.112/e40758/d_networkacl_adm.htm#ARPLS148"><span class="italic">Oracle Database PL/SQL Packages and Types Reference</span></a>.</p>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="BABJAJJI"></a>
<div id="DBSEG99987" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Configuring Access Control to a Wallet</h3>
<p>This <a id="sthref975"></a><a id="sthref976"></a>method <a id="sthref977"></a>lets <a id="sthref978"></a>you <a id="sthref979"></a>grant access <a id="sthref980"></a>to the passwords <a id="sthref981"></a>and <a id="sthref982"></a>client <a id="sthref983"></a>certificates that are stored in an Oracle wallet to users to authenticate themselves to an external Web server. This enables the user to retrieve protected Web pages from the Web server.</p>
<p>This section contains:</p>
<ul>
<li>
<p><a href="#BABBBIDA">Step 1: Create an Oracle Wallet</a></p>
</li>
<li>
<p><a href="#BABGGCBA">Step 2: Create an Access Control List that Grants the Wallet Privileges</a></p>
</li>
<li>
<p><a href="#BABCDEFI">Step 3: Assign the Access Control List to the Wallet</a></p>
</li>
<li>
<p><a href="#BABCJGAI">Step 4: Make the HTTP Request with the Passwords and Client Certificates</a></p>
</li>
</ul>
<a id="BABBBIDA"></a>
<div id="DBSEG99988" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Step 1: Create an Oracle Wallet</h4>
<p>To create the wallet, you can use either the <code dir="ltr">mkstore</code> command-line utility or the Oracle Wallet Manager user interface. To store passwords in the wallet, you must use <code dir="ltr">mkstore</code>. You can use both standard and PKCS11 wallet types, and the wallet can be an auto-login wallet if you want. For detailed information about creating wallets, see <a class="olink ASOAG9503" href="../../network.112/e40393/asotools.htm#ASOAG9503"><span class="italic">Oracle Database Advanced Security Administrator's Guide</span></a>.</p>
<p>When you create the wallet, do the following:</p>
<ul>
<li>
<p>Ensure that you have exported the wallet to a file.</p>
</li>
<li>
<p>Make a note of the directory in which you created the wallet. You will need this directory path when you complete the procedures in this section.</p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="#BABGIGFD">"Example of an Access Control List for Using Passwords in a Non-Shared Wallet"</a></p>
</li>
<li>
<p><a href="#BABHICHE">"Example of an Access Control List for Wallets in a Shared Database Session"</a></p>
</li>
</ul>
</div>
</div>
<!-- class="sect3" -->
<a id="BABGGCBA"></a>
<div id="DBSEG99989" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Step 2: Create an Access Control List that Grants the Wallet Privileges</h4>
<p>After you have created the wallet, you are ready to create the access control list that will assign the password or client certificate privilege the user needs to use password credentials in the wallet for HTTP authentication.</p>
<p>For example:</p>
<pre dir="ltr">
BEGIN
 DBMS_NETWORK_ACL_ADMIN.CREATE_ACL (
  acl         =&gt; '<span class="italic">file_name</span>.xml',
  description =&gt; '<span class="italic">description</span>',
  principal   =&gt; '<span class="italic">user_or_role</span>',
  is_grant    =&gt; TRUE|FALSE,
  privilege   =&gt; '<span class="italic">privilege</span>';
...
END;
</pre>
<p>In this specification:</p>
<ul>
<li>
<p><code dir="ltr">acl</code>: Enter a name for the ACL, and make a note of this name. You will need this name in <a href="#BABCDEFI">Step 3: Assign the Access Control List to the Wallet</a>, next. Oracle Database creates this file relative to the <code dir="ltr">/sys/acls</code> directory in the XML DB Repository in the database. Include the <code dir="ltr">.xml</code> extension. For example:</p>
<pre dir="ltr">
acl         =&gt; 'hr_access_wallet_acl.xml',
</pre></li>
<li>
<p><code dir="ltr">description</code>: Enter a brief description of the purpose of this file. For example:</p>
<pre dir="ltr">
description =&gt; 'Wallet ACL for the hr_access application',
</pre></li>
<li>
<p><code dir="ltr">principal</code>: Enter the user account or role being granted or denied privileges. For example:</p>
<pre dir="ltr">
principal   =&gt; 'HR_CLERK',
</pre>
<p>Enter this name using case sensitive characters. For example, if the database stores the role name <code dir="ltr">HR_CLERK</code> in all capital letters, entering it in mixed or lower-case letters will not work. You can find the user accounts and roles in the current database instance by querying the <code dir="ltr">DBA_USERS</code> and <code dir="ltr">DBA_ROLES</code> data dictionary views. Typically, user names and roles are stored in upper-case letters.</p>
<p>If you want to add multiple users, or if you want to grant this user an additional privilege, you can use the <code dir="ltr">DBMS_NETWORK_ACL.ADD_PRIVILEGE</code> procedure after you have created this access control list XML file.</p>
</li>
<li>
<p><code dir="ltr">is_grant</code>: Enter either <code dir="ltr">TRUE</code> or <code dir="ltr">FALSE</code>, to indicate whether the privilege is to be granted or denied. For example:</p>
<pre dir="ltr">
is_grant    =&gt; TRUE,
</pre></li>
<li>
<p><code dir="ltr">privilege</code>: Enter one of the following settings using lowercase letters and hyphens. Remember that the privilege name is case-sensitive.</p>
<ul>
<li>
<p><code dir="ltr">use-passwords</code> to give the user permission to use passwords in the wallet</p>
</li>
<li>
<p><code dir="ltr">use-client-certificates</code> to authenticate the user with a client certificate in the wallet</p>
</li>
</ul>
<p>For example:</p>
<pre dir="ltr">
privilege    =&gt; 'use-client-certificates');
</pre></li>
</ul>
</div>
<!-- class="sect3" -->
<a id="BABCDEFI"></a>
<div id="DBSEG99990" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Step 3: Assign the Access Control List to the Wallet</h4>
<p>In this step, you assign this access control list to the wallet you created earlier. Afterward, you can check your settings by querying the <code dir="ltr">DBA_WALLET_ACLS</code> data dictionary view.</p>
<p>For example:</p>
<pre dir="ltr">
BEGIN
...
 DBMS_NETWORK_ACL_ADMIN.ASSIGN_WALLET_ACL (
  acl         =&gt; '<span class="italic">file_name</span>.xml',
  wallet_path =&gt; 'file:<span class="italic">path_to_directory_containing_wallet</span>');
END;
</pre>
<p>In this specification:</p>
<ul>
<li>
<p><code dir="ltr">acl</code>: Enter the name that you created for this wallet in <a href="#BABGGCBA">Step 2: Create an Access Control List that Grants the Wallet Privileges</a>, in the previous section. For example:</p>
<pre dir="ltr">
acl         =&gt; 'hr_access_wallet_acl.xml',
</pre></li>
<li>
<p><code dir="ltr">wallet_path</code>: Enter the path to the directory that contains the wallet. When you specify the wallet path, you must use an absolute path and include <code dir="ltr">file:</code> before this directory path. Do not use environment variables, such as <code dir="ltr">$ORACLE_HOME</code>, nor insert a space after <code dir="ltr">file:</code> and before the path name. For example:</p>
<pre dir="ltr">
wallet_path =&gt; 'file:/oracle/wallets/hr_access_access'
</pre></li>
</ul>
</div>
<!-- class="sect3" -->
<a id="BABCJGAI"></a>
<div id="DBSEG99991" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Step 4: Make the HTTP Request with the Passwords and Client Certificates</h4>
<p>In this step, you use the <code dir="ltr">UTL_HTTP</code> PL/SQL package to create a request context object that is used privately with the HTTP request and its response. For detailed information about the <code dir="ltr">UTL_HTTP</code> package, see <a class="olink ARPLS070" href="../../appdev.112/e40758/u_http.htm#ARPLS070"><span class="italic">Oracle Database PL/SQL Packages and Types Reference</span></a>.</p>
<p>For example:</p>
<pre dir="ltr">
DECLARE
 req_context UTL_HTTP.REQUEST_CONTEXT_KEY;
 req         UTL_HTTP.REQ;
BEGIN
 req_context := UTL_HTTP.CREATE_REQUEST_CONTEXT (
              wallet_path          =&gt; 'file:<span class="italic">path_to_directory_containing_wallet</span>',
              wallet_password      =&gt; '<span class="italic">wallet_password</span>'|NULL);
 req := UTL_HTTP.BEGIN_REQUEST( 
              url                  =&gt; '<span class="italic">URL_to_application</span>',
              request_context      =&gt; '<span class="italic">request_context</span>'|NULL);
 ...
END;
</pre>
<p>In this specification:</p>
<ul>
<li>
<p><code dir="ltr">req_context</code>: Use the <code dir="ltr">UTL_HTTP.CREATE_REQUEST_CONTEXT_KEY</code> datatype to create the request context object. This object stores a randomly-generated numeric key that Oracle Database uses to identify the request context. The <code dir="ltr">UTL_HTTP.CREATE_REQUEST_CONTEXT</code> function creates the request context itself.</p>
</li>
<li>
<p><code dir="ltr">req</code>: Use the <code dir="ltr">UTL_HTTP.REQ</code> datatype to create the object that will be used to begin the HTTP request. You will refer to this object later on, when you set the user name and password from the wallet to access a password-protected Web page.</p>
</li>
<li>
<p><code dir="ltr">wallet_path</code>: Enter the path to the directory that contains the wallet. Ensure that this path is the same path you specified when you created access control list in <a href="#BABCDEFI">Step 3: Assign the Access Control List to the Wallet</a> in the previous section.You must include <code dir="ltr">file:</code> before the directory path. Do not use environment variables, such as <code dir="ltr">$ORACLE_HOME</code>.</p>
<p>For example:</p>
<pre dir="ltr">
wallet_path     =&gt; 'file:/oracle/wallets/hr_access_access',
</pre></li>
<li>
<p><code dir="ltr">wallet_password</code>: Enter the password used to open the wallet. The default is <code dir="ltr">NULL</code>, which is used for auto-login wallets. For example:</p>
<pre dir="ltr">
wallet_password      =&gt; NULL);
</pre></li>
<li>
<p><code dir="ltr">url</code>: Enter the URL to the application that uses the wallet.</p>
<p>For example:</p>
<pre dir="ltr">
url                  =&gt; 'www.hr_access.example.com',
</pre></li>
<li>
<p><code dir="ltr">request_context</code>: Enter the name of the request context object that you created earlier in this section. This object prevents the wallet from being shared with other applications in the same database session.</p>
<p>For example:</p>
<pre dir="ltr">
request_context      =&gt; req_context);
</pre></li>
</ul>
<p class="subhead2"><a id="DBSEG99992"></a>Using a Request Context to Hold the Wallet When Sharing the Session with Other Applications</p>
<p>You should use a request context to hold the wallet when the database session is shared with other applications. If your application has exclusive use of the database session, you can hold the wallet in the database session by using the <code dir="ltr">SET_WALLET</code> procedure instead.</p>
<p>For example:</p>
<pre dir="ltr">
DECLARE
 req         UTL_HTTP.REQ;
BEGIN
 UTL_HTTP.SET_WALLET(
              path          =&gt; 'file:<span class="italic">path_to_directory_containing_wallet</span>',
              password      =&gt; '<span class="italic">wallet_password</span>'|NULL);
 req := UTL_HTTP.BEGIN_REQUEST( 
              url           =&gt; '<span class="italic">URL_to_application</span>');
 ...
END;
</pre>
<p>If the protected URL being requested requires the user name and password to authenticate, then use the <code dir="ltr">SET_AUTHENTICATION_FROM_WALLET</code> procedure to set the user name and password from the wallet to authenticate.</p>
<p class="subhead2"><a id="DBSEG99993"></a>Using Only a Client Certificate to Authenticate</p>
<p>If the protected URL being requested requires only the client certificate to authenticate, the <code dir="ltr">BEGIN_REQUEST</code> function sends the necessary client certificate from the wallet. assuming the user has been granted the <code dir="ltr">use-client-certificates</code> privilege in the ACL assigned to the wallet. The authentication should succeed at the remote Web server and the user can proceed to retrieve the HTTP response by using the <code dir="ltr">GET_RESPONSE</code> function.</p>
<p class="subhead2"><a id="DBSEG99994"></a>Using the Password to Authenticate</p>
<p>If the protected URL being requested requires the username and password to authenticate, you should use the <code dir="ltr">SET_AUTHENTICATION_FROM_WALLET</code> procedure to set the username and password from the wallet to authenticate.</p>
<p>For example:</p>
<pre dir="ltr">
DECLARE
 req_context UTL_HTTP.REQUEST_CONTEXT_KEY;
 req         UTL_HTTP.REQ;
BEGIN
...
 UTL_HTTP.SET_AUTHENTICATION_FROM_WALLET(
  r               =&gt; <span class="italic">HTTP_REQUEST</span>,
  alias           =&gt; '<span class="italic">alias_to_retrieve_credentials_stored_in_wallet</span>',
  scheme          =&gt; 'AWS|Basic', 
  for_proxy       =&gt; TRUE|FALSE);
END;
</pre>
<p>In this specification:</p>
<ul>
<li>
<p><code dir="ltr">r</code>: Enter the HTTP request defined in the <code dir="ltr">UTL_HTTP.BEGIN_REQUEST</code> procedure that you created above, in the previous section. For example:</p>
<pre dir="ltr">
r               =&gt; req,
</pre></li>
<li>
<p><code dir="ltr">alias</code>: Enter the alias used to identify and retrieve the user name and password credential stored in the Oracle wallet. For example, assuming the alias used to identify this user name and password credential is <code dir="ltr">hr_access</code>.</p>
<pre dir="ltr">
alias           =&gt; 'hr_access',
</pre></li>
<li>
<p><code dir="ltr">scheme</code>: Enter one of the following:</p>
<ul>
<li>
<p><code dir="ltr">AWS</code>: Specifies the Amazon Simple Storage Service (S3) scheme. Use this scheme only if you are configuring access to the Amazon.com Web site. (Contact Amazon for more information about this setting.)</p>
</li>
<li>
<p><code dir="ltr">Basic</code>: Specifies HTTP basic authentication. The default is <code dir="ltr">Basic</code>.</p>
</li>
</ul>
<p>For example:</p>
<pre dir="ltr">
scheme          =&gt; 'Basic',
</pre></li>
<li>
<p><code dir="ltr">for_proxy</code>: Specify whether the HTTP authentication information is for access to the HTTP proxy server instead of the Web server. The default is <code dir="ltr">FALSE</code>.</p>
<p>For example:</p>
<pre dir="ltr">
for_proxy       =&gt; TRUE);
</pre></li>
</ul>
<p>The use of the user name and password in the wallet requires the <code dir="ltr">use-passwords</code> privilege to be granted to the user in the ACL assigned to the wallet.</p>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="CIHHEGHJ"></a>
<div id="DBSEG99995" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Examples of Creating Access Control Lists</h3>
<p><a id="sthref984"></a><a id="sthref985"></a>The following <a id="sthref986"></a><a id="sthref987"></a>examples demonstrate how to create access control lists.</p>
<ul>
<li>
<p><a href="#BABCCJDI">Example of an Access Control List for a Single Role and Network Connection</a></p>
</li>
<li>
<p><a href="#BABHBIHF">Example of an Access Control List with Multiple Roles Assigned to Multiple Hosts</a></p>
</li>
<li>
<p><a href="#BABGIGFD">Example of an Access Control List for Using Passwords in a Non-Shared Wallet</a></p>
</li>
<li>
<p><a href="#BABHICHE">Example of an Access Control List for Wallets in a Shared Database Session</a></p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink DVADM50058" href="../../server.112/e23090/cfrulset.htm#DVADM50058"><span class="italic">Oracle Database Vault Administrator's Guide</span></a> for a tutorial that demonstrates how to use an access control list when an administrator must use the <code dir="ltr">UTL_MAIL</code> PL/SQL package to configure an email alert</div>
<a id="BABCCJDI"></a>
<div id="DBSEG99996" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Example of an Access Control List for a Single Role and Network Connection</h4>
<p><a href="#CIHIGIBE">Example 4-19</a> shows how you would create an access control list called <code dir="ltr">us-example-com-permissions.xml</code> to grant users who have the <code dir="ltr">ACCT_MGR</code> role access to network services that run on the host <code dir="ltr">us.example.com</code>.</p>
<div id="DBSEG99997" class="example">
<p class="titleinexample"><a id="CIHIGIBE"></a>Example 4-19 Creating an Access Control List for a Single Role and Network Connection</p>
<pre dir="ltr">
<span class="bold">-- 1. Create the access control list, which includes one role:</span>
BEGIN
 DBMS_NETWORK_ACL_ADMIN.CREATE_ACL (
  acl          =&gt; 'us-example-com-permissions.xml', 
  description  =&gt; 'Network connection permission for ACCT_MGR', 
  principal    =&gt; 'ACCT_MGR', <span class="italic">-- Must be in upper case</span>
  is_grant     =&gt; TRUE, 
  privilege    =&gt; 'connect'); 
END;
/

<span class="bold">-- 2. Assign the access control list a network host:</span>
BEGIN
 DBMS_NETWORK_ACL_ADMIN.ASSIGN_ACL (
  acl         =&gt; 'us-example-com-permissions.xml',
  host        =&gt; 'www.us.example.com', 
  lower_port  =&gt; 80,
  upper_port  =&gt; 80); 
END;
/
</pre></div>
<!-- class="example" -->
<p>This example creates the <code dir="ltr">us-example-com-permissions.xml</code> file in the <code dir="ltr">/sys/acls</code> directory, which is the default location. The XML file appears as follows:</p>
<pre dir="ltr">
&lt;acl description="Network connection permission for ACCT_MGR" 
  xmlns="http://xmlns.oracle.com/xdb/acl.xsd"
  xmlns:plsql="http://xmlns.oracle.com/plsql" 
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"   
  xsi:schemaLocation="http://xmlns.oracle.com/xdb/acl.xsd    http://xmlns.oracle.com/xdb/acl.xsd"&gt;
  &lt;security-class&gt;plsql:network&lt;/security-class&gt;
  &lt;ace&gt;
    &lt;grant&gt;true&lt;/grant&gt;
    &lt;principal&gt;ACCT_MGR&lt;/principal&gt;
    &lt;privilege&gt;&lt;plsql:connect/&gt;&lt;/privilege&gt;
 &lt;/ace&gt;
&lt;/acl&gt;
</pre>
<p>The <code dir="ltr">xmlns</code> and <code dir="ltr">xsi</code> elements are fixed and should not be modified, for example, in a text editor.</p>
<p>You can check the contents of the access control list in SQL*Plus. See <a class="olink ADXDB2425" href="../../appdev.112/e23094/xdb21sec.htm#ADXDB2425"><span class="italic">Oracle XML DB Developer's Guide</span></a> for examples.</p>
</div>
<!-- class="sect3" -->
<a id="BABHBIHF"></a>
<div id="DBSEG99998" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Example of an Access Control List with Multiple Roles Assigned to Multiple Hosts</h4>
<p><a href="#CIHFGHGJ">Example 4-20</a> shows how to create a slightly more complex version of the <code dir="ltr">us-example-com-permissions.xml</code> access control list. In this example, you specify multiple role privileges and their precedence position, and assigned to multiple host computers.</p>
<p>See<a href="#CIHJBFCJ">"Specifying a Group of Network Host Computers"</a> and <a href="#CIHGCIGH">"Precedence Order for a Host Computer in Multiple Access Control List Assignments"</a> for more information about host names. See also <a href="#BABHGBGE">"Setting the Precedence of Multiple Users and Roles in One Access Control List"</a> to determine the order of multiple <code dir="ltr">ACE</code> elements in the access control list XML file.</p>
<div id="DBSEG99999" class="example">
<p class="titleinexample"><a id="CIHFGHGJ"></a>Example 4-20 Creating an Access Control List for Multiple Roles and Network Connections</p>
<pre dir="ltr">
<span class="bold">-- 1. Create the access control list:</span>
BEGIN
 DBMS_NETWORK_ACL_ADMIN.CREATE_ACL (
  acl          =&gt; 'us-example-com-permissions.xml', 
  description  =&gt; 'Network connection permission for ACCT_MGR and ACCT_CLERK', 
  principal    =&gt; 'ACCT_MGR', <span class="italic">-- Must be in upper case</span>
  is_grant     =&gt; TRUE,
  privilege    =&gt; 'resolve');
 DBMS_NETWORK_ACL_ADMIN.ADD_PRIVILEGE ( <span class="italic">-- Creates the second role privilege</span>
  acl          =&gt; 'us-example-com-permissions.xml',
  principal    =&gt; 'ACCT_CLERK', 
  is_grant     =&gt; TRUE, 
  privilege    =&gt; 'connect',
  position     =&gt; null);
END;
/

<span class="bold">-- 2. Assign the access control list to hosts:</span>
BEGIN
 DBMS_NETWORK_ACL_ADMIN.ASSIGN_ACL ( <span class="italic">-- Creates the first target host</span>
  acl          =&gt; 'us-example-com-permissions.xml',
  host         =&gt; '*.us.example.com'); 
 DBMS_NETWORK_ACL_ADMIN.ASSIGN_ACL ( <span class="italic">-- Creates the second target host </span>
  acl          =&gt; 'us-example-com-permissions.xml',
  host         =&gt; '*.uk.example.com',
  lower_port   =&gt; 80,
  upper_port   =&gt; 99); 
END;
/
</pre></div>
<!-- class="example" -->
<p>The <code dir="ltr">us-example-com-permissions.xml</code> appears as follows:</p>
<pre dir="ltr">
&lt;acl description="Network connection permission for ACCT_MGR and ACCT_CLERK" 
  xmlns="http://xmlns.oracle.com/xdb/acl.xsd"
  xmlns:plsql="http://xmlns.oracle.com/plsql" 
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"   
  xsi:schemaLocation="http://xmlns.oracle.com/xdb/acl.xsd    http://xmlns.oracle.com/xdb/acl.xsd"&gt;
  &lt;security-class&gt;plsql:network&lt;/security-class&gt;
  &lt;ace&gt;
    &lt;grant&gt;true&lt;/grant&gt;
    &lt;principal&gt;ACCT_MGR&lt;/principal&gt;
    &lt;privilege&gt;&lt;plsql:resolve/&gt;&lt;/privilege&gt;
  &lt;/ace&gt;
  &lt;ace&gt;
    &lt;grant&gt;true&lt;/grant&gt;
    &lt;principal&gt;ACCT_CLERK&lt;/principal&gt;
    &lt;privilege&gt;&lt;plsql:connect/&gt;&lt;/privilege&gt;
  &lt;/ace&gt;
&lt;/acl&gt;
</pre>
<p><a href="#BABDEDIF">Example 4-21</a> shows how the <code dir="ltr">DBA_NETWORK_ACL_PRIVILEGES</code> data dictionary view displays the privilege granted in the previous access control list.</p>
<div id="DBSEG100" class="example">
<p class="titleinexample"><a id="BABDEDIF"></a>Example 4-21 Using the DBA_NETWORK_ACL_PRIVILEGES View to Show Granted Privileges</p>
<pre dir="ltr">
ACL  
ACLID                                  PRINCIPAL  PRIVILEGE IS_GRANT INVERT
START_DATE END_DATE
------------------------------------------
-------------------------------- ---------- -------   -------- -------
---------- ----------
/sys/acls/us-example-com-permissions.xml 2EF86135D0E29B2AE040578CE4043250 ACCT_
MGR   resolve   true       false
/sys/acls/us-example-com-permissions.xml 2EF86135D0E29B2AE040578CE4043250 ACCT_
CLERK connect   true       false
</pre></div>
<!-- class="example" -->
<pre dir="ltr">
</pre>
<p><a href="#BABIHDJC">Example 4-22</a> shows how the <code dir="ltr">DBA_NETWORK_ACLS</code> data dictionary view displays the host assignment of the access control list.</p>
<div id="DBSEG101" class="example">
<p class="titleinexample"><a id="BABIHDJC"></a>Example 4-22 Using the DBA_NETWORK_ACLS View to Show Host Assignments</p>
<pre dir="ltr">
HOST                     LOWER_PORT UPPER_PORT
ACL
ACLID
-------------------- ---------- ----------
------------------------------------------
--------------------------------
*.us.example.com                   
/sys/acls/us-example-com-permissions.xml 2EF86135D0E29B2AE040578CE4043250
*.uk.example.com      80             99
/sys/acls/us-example-com-permissions.xml 2EF86135D0E29B2AE040578CE4043250
</pre></div>
<!-- class="example" -->
<p>In these examples, the <code dir="ltr">ACCT_MGR</code> role has the <code dir="ltr">resolve</code> privilege to the first host, and the <code dir="ltr">ACCT_CLERK</code> role has the connect privilege to the first and second target hosts. The <code dir="ltr">ACCT_MGR</code> role does not have the <code dir="ltr">resolve</code> privilege to the second host because a port range is specified in the assignment to the second host.</p>
<p>To check the contents of the access control list in SQL*Plus, see <a class="olink ADXDB2425" href="../../appdev.112/e23094/xdb21sec.htm#ADXDB2425"><span class="italic">Oracle XML DB Developer's Guide</span></a> for examples.</p>
</div>
<!-- class="sect3" -->
<a id="BABGIGFD"></a>
<div id="DBSEG102" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Example of an Access Control List for Using Passwords in a Non-Shared Wallet</h4>
<p><a href="#BABHFGGA">Example 4-23</a> configures wallet access for two Human Resources department roles, <code dir="ltr">hr_clerk</code> and <code dir="ltr">hr_manager</code>. These roles use the <code dir="ltr">use-passwords</code> privilege to access passwords stored in the wallet. In this example, the wallet will not be shared with other applications within the same database session.</p>
<div id="DBSEG103" class="example">
<p class="titleinexample"><a id="BABHFGGA"></a>Example 4-23 Configuring ACL Access Using Passwords in a Non-Shared Wallet</p>
<pre dir="ltr">
<span class="bold">/* 1. At a command prompt, create the wallet. The following example uses the </span>
<span class="bold">      user name hr_access as the alias to identify the user name and password </span>
<span class="bold">      stored in the wallet. You must use this alias name when you call the</span>
<span class="bold">      SET_AUTHENTICATION_FROM_WALLET procedure later on. */ </span>
$ mkstore -wrl $ORACLE_HOME/wallets/hr_access_access -create
Enter password: <span class="italic">password</span>
Enter password again: <span class="italic">password</span>
$ mkstore -wrl $ORACLE_HOME/wallets/hr_access_access -createCredential hr_access hr_usr 
Your secret/Password is missing in the command line
Enter your secret/Password: <span class="italic">password</span>
Re-enter your secret/Password: <span class="italic">password</span>
Enter wallet password: <span class="italic">password</span>

<span class="bold">/* 2. In SQL*Plus, create an access control list to grant privileges for the </span>
<span class="bold">      wallet. The following example grants the use-passwords privilege to the</span>
<span class="bold">      hr_clerk and hr_manager roles, and then it assigns this ACL to the wallet.*/</span> 
BEGIN
  DBMS_NETWORK_ACL_ADMIN.CREATE_ACL(
    acl         =&gt; 'hr_access_wallet_acl.xml', 
    description =&gt; 'Wallet ACL for hr_access application',
    principal   =&gt; 'HR_CLERK', <span class="italic">-- Must be in upper case</span>
    is_grant    =&gt; TRUE,
    privilege   =&gt; 'use-passwords');
 
  DBMS_NETWORK_ACL_ADMIN.ADD_PRIVILEGE(
    acl         =&gt; 'hr_access_wallet_acl.xml', 
    principal   =&gt; 'HR_MANAGER',
    is_grant    =&gt; TRUE,
    privilege   =&gt; 'use-passwords');
 
  DBMS_NETWORK_ACL_ADMIN.ASSIGN_WALLET_ACL(
    acl         =&gt; 'hr_access_wallet_acl.xml', 
    wallet_path =&gt; 'file:/oracle/wallets/hr_access_access');
END;
/
COMMIT;

<span class="bold">/* 3. Create a request context and request object, and then set the </span>
<span class="bold">      authentication for the wallet. */</span>
DECLARE
  req_context  UTL_HTTP.REQUEST_CONTEXT_KEY;
  req          UTL_HTTP.REQ;

BEGIN
 req_context := UTL_HTTP.CREATE_REQUEST_CONTEXT(
     wallet_path          =&gt; 'file:/oracle/wallets/hr_access_access',
     wallet_password      =&gt; NULL,
     enable_cookies       =&gt; TRUE,
     max_cookies          =&gt; 300,
     max_cookies_per_site =&gt; 20);
  req := UTL_HTTP.BEGIN_REQUEST(
     url                  =&gt; 'www.hr_access.example.com',
     request_context      =&gt; req_context);
  UTL_HTTP.SET_AUTHENTICATION_FROM_WALLET(
     r                    =&gt; req,
     alias                =&gt; 'hr_access'),
     scheme               =&gt; 'Basic', 
     for_proxy            =&gt; FALSE);
END;
/
</pre></div>
<!-- class="example" --></div>
<!-- class="sect3" -->
<a id="BABHICHE"></a>
<div id="DBSEG104" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Example of an Access Control List for Wallets in a Shared Database Session</h4>
<p><a href="#BABIDGBG">Example 4-24</a> is almost the same as <a href="#BABHFGGA">Example 4-23</a>, except that it configures the wallet to be used for a shared database session; that is, all applications within the current database session will have access to this wallet.</p>
<div id="DBSEG105" class="example">
<p class="titleinexample"><a id="BABIDGBG"></a>Example 4-24 Configuring ACL Access for a Wallet in a Shared Database Session</p>
<pre dir="ltr">
<span class="bold">/* Follow these steps:</span>
<span class="bold">   1. Use Oracle Wallet Manager to create the wallet and add the client</span>
<span class="bold">      certificate. See </span><a class="olink ASOAG160" href="../../network.112/e40393/asowalet.htm#ASOAG160"><span class="bolditalic">Oracle Database Advanced Security Administrator's Guide</span></a> 
<span class="bold">      for detailed information about using Oracle Wallet Manager. </span>

<span class="bold">   2. In SQL*Plus, create an access control list to grant privileges for the </span>
<span class="bold">      wallet. The following example grants the use-client-certificates privilege </span>
<span class="bold">      to the hr_clerk and hr_manager roles, then it assigns this ACL to the </span>
<span class="bold">      wallet. */</span>
BEGIN
  DBMS_NETWORK_ACL_ADMIN.CREATE_ACL(
    acl         =&gt; 'hr_access_wallet_acl.xml', 
    description =&gt; 'Wallet ACL for hr_access application',
    principal   =&gt; 'HR_CLERK', <span class="italic">-- Must be in upper case</span>
    is_grant    =&gt; TRUE,
    privilege   =&gt; 'use-client-certificates');
 
  DBMS_NETWORK_ACL_ADMIN.ADD_PRIVILEGE(
    acl         =&gt; 'hr_access_wallet_acl.xml', 
    principal   =&gt; 'HR_MANAGER',
    is_grant    =&gt; TRUE,
    privilege   =&gt; 'use-client-certificates');
 
  DBMS_NETWORK_ACL_ADMIN.ASSIGN_WALLET_ACL(
    acl         =&gt; 'hr_access_wallet_acl.xml', 
    wallet_path =&gt; 'file:/oracle/wallets/hr_access_access');
END;
/
COMMIT;

<span class="bold">/* 3. Create a request object to handle the HTTP authentication for the wallet.*/</span>
DECLARE
  req  UTL_HTTP.req;
BEGIN
  UTL_HTTP.SET_WALLET(
   path            =&gt; 'file: $ORACLE_HOME/wallets/hr_access_access',
   password        =&gt; NULL);
 req := UTL_HTTP.BEGIN_REQUEST(
   url             =&gt; 'www.hr_access.example.com',
   method          =&gt; 'POST',
   http_version    =&gt; NULL,
   request_context =&gt; NULL);
END;
/
</pre></div>
<!-- class="example" --></div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="CIHJBFCJ"></a>
<div id="DBSEG106" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Specifying a Group of Network Host Computers</h3>
<p><a id="sthref988"></a>If you want to assign an access control list to a group of network host computers, you can use the asterisk (*) wildcard character. For example, enter <code dir="ltr">*.example.com</code> for host computers that belong to a domain or <code dir="ltr">192.0.2.*</code> for IPv4 addresses that belong to an IP subnet. The asterisk wildcard must be at the beginning, before a period (.) in a domain, or at the end, after a period (.), in an IP subnet. For example, <code dir="ltr">*.example.com</code> is valid, but <code dir="ltr">*example.com</code> and <code dir="ltr">*.example.*</code> are not. Be aware that the use of wildcard characters affects the order of precedence for multiple access control lists that are assigned to the same host computer. You cannot use wildcard characters for IPv6 addresses.</p>
<p>The Classless Inter-Domain Routing (<a href="glossary.htm#CBAEEBJD"><span class="xrefglossterm">CIDR</span></a> ) notation defines how IPv4 and IPv6 addresses are categorized for routing IP packets on the internet. The <code dir="ltr">DBMS_NETWORK_ACL_ADMIN</code> package supports CIDR notation for both IPv4 and IPv6 addresses. This package considers an IPv4-mapped IPv6 address or subnet equivalent to the IPv4-native address or subnet it represents. For example, <code dir="ltr">::ffff:192.0.2.1</code> is equivalent to <code dir="ltr">192.0.2.1</code>, and <code dir="ltr">::ffff:192.0.2.1/120</code> is equivalent to <code dir="ltr">192.0.2.*</code>.</p>
</div>
<!-- class="sect2" -->
<a id="CIHGCIGH"></a>
<div id="DBSEG107" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Precedence Order for a Host Computer in Multiple Access Control List Assignments</h3>
<p><a id="sthref989"></a>For multiple access control lists that are assigned to the host computer and its domains, the access control list that is assigned to the host computer takes precedence over those assigned to the domains. The access control list assigned to a domain has a lower precedence than those assigned to the subdomains.</p>
<p>For example, Oracle Database first selects the access control list assigned to the host <code dir="ltr">server.us.example.com</code>, ahead of other access control lists assigned to its domains. If additional access control lists were assigned to the sub domains, their order of precedence is as follows:</p>
<ol>
<li>
<p><code dir="ltr">server.us.example.com</code></p>
</li>
<li>
<p><code dir="ltr">*.us.example.com</code></p>
</li>
<li>
<p><code dir="ltr">*.example.com</code></p>
</li>
<li>
<p><code dir="ltr">*.com</code></p>
</li>
<li>
<p><code dir="ltr">*</code></p>
</li>
</ol>
<p>Similarly, for multiple access control lists that are assigned to the IP address (both IPv4 and IPv6) and the subnets it belongs to, the access control list that is assigned to the IP address takes precedence over those assigned to the subnets. The access control list assigned to a subnet has a lower precedence than those assigned to the smaller subnets it contains.</p>
<p>For example, Oracle Database first selects the access control list assigned to the IP address <code dir="ltr">192.0.2.3</code>, ahead of other access control lists assigned to the subnets it belongs to. If additional access control lists were assigned to the subnets, their order of precedence is as follows:</p>
<ol>
<li>
<p><code dir="ltr">192.0.2.3</code> (or <code dir="ltr">::ffff:192.0.2.3</code>)</p>
</li>
<li>
<p><code dir="ltr">192.0.2.3/31</code> (or <code dir="ltr">::ffff:192.0.2.3/127</code>)</p>
</li>
<li>
<p><code dir="ltr">192.0.2.3/30</code> (or <code dir="ltr">::ffff:192.0.2.3/126</code>)</p>
</li>
<li>
<p><code dir="ltr">192.0.2.3/29</code> (or <code dir="ltr">::ffff:192.0.2.3/125</code>)</p>
</li>
<li>
<p>...</p>
</li>
<li>
<p><code dir="ltr">192.0.2.3/24</code> (or <code dir="ltr">::ffff:192.0.2.3/120</code> or <code dir="ltr">192.0.2.*</code>)</p>
</li>
<li>
<p><code dir="ltr">...</code></p>
</li>
<li>
<p><code dir="ltr">192.0.2.3/16</code> (or <code dir="ltr">::ffff:192.0.2.3/112</code> or <code dir="ltr">192.0.*</code>)</p>
</li>
<li>
<p>...</p>
</li>
<li>
<p><code dir="ltr">192.0.2.3/8</code> (or <code dir="ltr">::ffff:192.0.2.3/104</code> or <code dir="ltr">192.*</code>)</p>
</li>
<li>
<p>...</p>
</li>
<li>
<p><code dir="ltr">::ffff:192.0.2.3/95</code></p>
</li>
<li>
<p><code dir="ltr">::ffff:192.0.2.3/94</code></p>
</li>
<li>
<p>...</p>
</li>
<li>
<p><code dir="ltr">*</code></p>
</li>
</ol>
</div>
<!-- class="sect2" -->
<a id="BABIAAFD"></a>
<div id="DBSEG108" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Precedence Order for a Host in Access Control List Assignments with Port Ranges</h3>
<p>When<a id="sthref990"></a> an access control list is assigned to a host computer, a domain, or an IP subnet with a port range, it takes precedence over the access control list assigned to the same host, domain, or IP subnet without a port range.</p>
<p>For example, for TCP connections to any port between port 80 and 99 at <code dir="ltr">server.us.example.com</code>, Oracle Database first selects the access control list assigned to port 80 through 99 at <code dir="ltr">server.us.example.com</code>, ahead of the other access control list assigned to <code dir="ltr">server.us.example.com</code> that is without a port range.</p>
</div>
<!-- class="sect2" -->
<a id="BABGIHGH"></a>
<div id="DBSEG109" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Checking Privilege Assignments That Affect User Access to a Network Host</h3>
<p><a id="sthref991"></a><a id="sthref992"></a>Database administrators can use the <code dir="ltr"><a id="sthref993"></a><a id="sthref994"></a>DBA_NETWORK_ACL_PRIVILEGES</code> data dictionary view to query network privileges that have been granted to or denied from database users and roles in the access control lists, and whether those privileges take effect during certain times only. Using the information provided by the view, you may need to combine the data to determine if a user is granted the privilege at the current time, the roles the user has, the order of the access control entries, and so on. To simplify this privilege evaluation, you can use the following <code dir="ltr">DBMS_NETWORK_ACL_ADMIN</code> functions to check the privilege granted to a user in an access control list:</p>
<ul>
<li>
<p><code dir="ltr">CHECK_PRIVILEGE</code>: Checks if the specified privilege is granted to or denied from the specified user in an access control list. This procedure identifies the access control list by its path in the XML DB Repository. Use <code dir="ltr">CHECK_PRIVILEGE</code> if you want to evaluate a single access control list with a known path.</p>
</li>
<li>
<p><code dir="ltr">CHECK_PRIVILEGE_ACLID</code>: Similar to the <code dir="ltr">CHECK_PRIVILEGE</code> procedure, except that it enables you to specify the object ID of the access control list. Use <code dir="ltr">CHECK_PRIVILEGE_ACLID</code> if you need to evaluate multiple access control lists, when you query the <code dir="ltr">DBA_NETWORK_ACLS</code> data dictionary view. For better performance, call <code dir="ltr">CHECK_PRIVILEGE_ACLID</code> on multiple access control lists rather than using <code dir="ltr">CHECK_PRIVILEGE</code> on each one individually.</p>
</li>
</ul>
<p>Users without database administrator privileges do not have the privilege to access the access control lists or to invoke those <code dir="ltr">DBMS_NETWORK_ACL_ADMIN</code> functions. However, they can query the <code dir="ltr">USER_NETWORK_ACL_PRIVILEGES</code> data dictionary view to check their privileges instead.</p>
<p>Database administrators and users can use the following <code dir="ltr">DBMS_NETWORK_ACL_UTILITY</code> functions to determine if two hosts, domains, or subnets are equivalent, or if a host, domain, or subnet is equal to or contained in another host, domain, or subnet:</p>
<ul>
<li>
<p><code dir="ltr">EQUALS_HOST</code>: Returns a value to indicate if two hosts, domains, or subnets are equivalent</p>
</li>
<li>
<p><code dir="ltr">CONTAINS_HOST</code>: Returns a value to indicate if a host, domain, or subnet is equal to or contained in another host, domain, or subnet, and the relative order of precedence of the containing domain or subnet for its ACL assignments</p>
</li>
</ul>
<p>If you do not use IPv6 addresses, database administrators and users can use the following <code dir="ltr">DBMS_NETWORK_ACL_UTILITY</code> functions to generate the list of domains or IPv4 subnet a host belongs to and to sort the access control lists by their order of precedence according to their host assignments:</p>
<ul>
<li>
<p><code dir="ltr">DOMAINS</code>: Returns a list of the domains or IP subnets whose access control lists may affect permissions to a specified network host, subdomain, or IP subnet</p>
</li>
<li>
<p><code dir="ltr">DOMAIN_LEVEL</code>: Returns the domain level of a given host</p>
</li>
</ul>
<p>The following sections explain how database administrators and users can check permissions for the user to connect to a network host or to perform domain name resolutions:</p>
<ul>
<li>
<p><a href="#BABJJBJI">How a DBA Can Check User Network Connection and Domain Privileges</a></p>
</li>
<li>
<p><a href="#BABCEJJB">How Users Can Check Their Network Connection and Domain Privileges</a></p>
</li>
</ul>
<a id="BABJJBJI"></a>
<div id="DBSEG110" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">How a DBA Can Check User Network Connection and Domain Privileges</h4>
<p><a id="sthref995"></a>A database administrator can query the <code dir="ltr">DBA_NETWORK_ACLS</code> view to determine which access control lists are present for a specified host computer. This view shows the access control lists that determine the access to the network connection or domain, and then determines if each access control list grants (<code dir="ltr">GRANTED</code>), denies (<code dir="ltr">DENIED</code>), or does not apply (<code dir="ltr">NULL</code>) to the access privilege of the user. Only the database administrator can query this view.</p>
<p>The following sections provide examples that demonstrate how the database administrator can check user privileges for network connections and domain name resolution.</p>
<ul>
<li>
<p><a href="#BABEDIHE">Database Administrator Checking User Connection Privileges</a></p>
</li>
<li>
<p><a href="#BABJECID">Database Administrator Checking User Privileges for Domain Name Resolution</a></p>
</li>
</ul>
<p class="subhead2"><a id="BABEDIHE"></a><a id="DBSEG111"></a>Database Administrator Checking User Connection Privileges</p>
<p><a href="#BABDCBDD">Example 4-25</a> shows how a database administrator can check the privileges for user <code dir="ltr">preston</code> to connect to <code dir="ltr">www.us.example.com</code>. Remember that the user name you enter for the <code dir="ltr">user</code> parameter in the <code dir="ltr">CHECK_PRIVILEGE_ACLID</code> procedure is case sensitive. In this example, entering the user name <code dir="ltr">preston</code> is correct, but entering <code dir="ltr">Preston</code> or <code dir="ltr">preston</code> is incorrect.</p>
<p>You can find the users in the current database instance by querying the <code dir="ltr">DBA_USERS</code> data dictionary view, for example:</p>
<pre dir="ltr">
SELECT USERNAME FROM DBA_USERS;
</pre>
<div id="DBSEG112" class="example">
<p class="titleinexample"><a id="BABDCBDD"></a>Example 4-25 Administrator Checking User Permissions for Network Host Connections</p>
<pre dir="ltr">
SELECT HOST, LOWER_PORT, UPPER_PORT, ACL,
       DECODE(
         DBMS_NETWORK_ACL_ADMIN.CHECK_PRIVILEGE_ACLID(ACLID, 'PRESTON',
                                                      'connect'),
         1, 'GRANTED', 0, 'DENIED', NULL) PRIVILEGE
  FROM (SELECT HOST, LOWER_PORT, UPPER_PORT, ACL, ACLID,
               DBMS_NETWORK_ACL_UTILITY.CONTAINS_HOST('www.us.example.com',
                                                      HOST) PRECEDENCE
          FROM DBA_NETWORK_ACLS)
 WHERE PRECEDENCE IS NOT NULL
 ORDER BY PRECEDENCE DESC,
          LOWER_PORT NULLS LAST,
          UPPER_PORT NULLS LAST;

 HOST                 LOWER_PORT UPPER_PORT ACL                  PRIVILEGE
 -------------------- ---------- ---------- -------------------- ---------
 www.us.example.com           80         80 /sys/acls/www.xml    GRANTED
 www.us.example.com         3000       3999 /sys/acls/www.xml    GRANTED
 www.us.example.com                         /sys/acls/www.xml    GRANTED
 *.example.com                              /sys/acls/all.xml
 *                                          /sys/acls/all.xml
</pre></div>
<!-- class="example" -->
<p>In this example, user <code dir="ltr">preston</code> was granted privileges for all the network host connections found for <code dir="ltr">www.us.example.com</code>. However, suppose <code dir="ltr">preston</code> had been granted access to a host connection on port 80, but then denied access to the host connections on ports 3000&ndash;3999. In this case, you need to create one access control list for the host connection on port 80, and a separate access control list for the host connection on ports 3000&ndash;3999.</p>
<p class="subhead2"><a id="BABJECID"></a><a id="DBSEG113"></a>Database Administrator Checking User Privileges for Domain Name Resolution</p>
<p><a href="#BABDAJBF">Example 4-26</a> shows how a database administrator can check the privileges of user <code dir="ltr">preston</code> to perform domain name resolution for the host <code dir="ltr">www.us.example.com</code>. In this example, only the access control lists assigned to hosts without a port range because the <code dir="ltr">resolve</code> privilege has no effect to those with a port range. (Remember that the user name you enter for the <code dir="ltr">user</code> parameter in <code dir="ltr">CHECK_PRIVILEGE_ACLID</code> is case sensitive.)</p>
<div id="DBSEG114" class="example">
<p class="titleinexample"><a id="BABDAJBF"></a>Example 4-26 Administrator Checking Permissions for Domain Name Resolution</p>
<pre dir="ltr">
SELECT HOST, ACL,
       DECODE(
         DBMS_NETWORK_ACL_ADMIN.CHECK_PRIVILEGE_ACLID(ACLID, 'PRESTON',
                                                      'resolve'),
         1, 'GRANTED', 0, 'DENIED', NULL) PRIVILEGE
  FROM (SELECT HOST, LOWER_PORT, UPPER_PORT, ACL, ACLID,
               DBMS_NETWORK_ACL_UTILITY.CONTAINS_HOST('www.us.example.com',
                                                      HOST) PRECEDENCE
         FROM DBA_NETWORK_ACLS
         WHERE LOWER_PORT IS NULL AND UPPER_PORT IS NULL)
 WHERE PRECEDENCE IS NOT NULL
 ORDER BY PRECEDENCE DESC;

 HOST                 ACL                  PRIVILEGE
 -------------------- -------------------- ---------

 www.us.example.com   /sys/acls/www.xml    GRANTED
 *.example.com        /sys/acls/all.xml
 *                    /sys/acls/all.xml
</pre></div>
<!-- class="example" --></div>
<!-- class="sect3" -->
<a id="BABCEJJB"></a>
<div id="DBSEG115" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">How Users Can Check Their Network Connection and Domain Privileges</h4>
<p><a id="sthref996"></a>Users can query the <code dir="ltr">USER_NETWORK_ACL_PRIVILEGES</code> view to check their network and domain permissions. The <code dir="ltr">USER_NETWORK_ACL_PRIVILEGES</code> view is <code dir="ltr">PUBLIC</code>, so all users can select from it.</p>
<p>This view hides the access control lists from the user. It evaluates the permission status for the user (<code dir="ltr">GRANTED</code> or <code dir="ltr">DENIED</code>) and filters out the <code dir="ltr">NULL</code> case because the user does not need to know when the access control lists do not apply to him or her. In other words, Oracle Database only shows the user on the network hosts that explicitly grant or deny access to him or her. Therefore, the output does not display the <code dir="ltr">*.example.com</code> and <code dir="ltr">*</code> that appear in the output from the database administrator-specific <code dir="ltr">DBA_NETWORK_ACLS</code> view.</p>
<p>The following sections provide examples that demonstrate how a database administrator can check user permissions for network connections and domain name resolution.</p>
<ul>
<li>
<p><a href="#BABCJJAC">User Checking His or Her Network Connection Privileges</a></p>
</li>
<li>
<p><a href="#BABHHFEA">User Checking Own Privileges for Domain Name Resolution</a></p>
</li>
</ul>
<p class="subhead2"><a id="BABCJJAC"></a><a id="DBSEG116"></a>User Checking His or Her Network Connection Privileges</p>
<p><a href="#BABBEECF">Example 4-27</a> shows how user <code dir="ltr">preston</code> can check her privileges to connect to <code dir="ltr">www.us.example.com</code>.</p>
<div id="DBSEG117" class="example">
<p class="titleinexample"><a id="BABBEECF"></a>Example 4-27 User Checking Permissions for Network Host Connections</p>
<pre dir="ltr">
SELECT HOST, LOWER_PORT, UPPER_PORT, STATUS PRIVILEGE
  FROM (SELECT HOST, LOWER_PORT, UPPER_PORT, STATUS,
               DBMS_NETWORK_ACL_UTILITY.CONTAINS_HOST('www.us.example.com',
                                                      HOST) PRECEDENCE
          FROM USER_NETWORK_ACL_PRIVILEGES
         WHERE PRIVILEGE = 'connect')
 WHERE PRECEDENCE IS NOT NULL
 ORDER BY PRECEDENCE DESC,
          LOWER_PORT NULLS LAST,
          UPPER_PORT NULLS LAST;

 HOST                 LOWER_PORT UPPER_PORT ACL                  PRIVILEGE
 -------------------- ---------- ---------- -------------------- ---------
 www.us.example.com           80         80 /sys/acls/www.xml    GRANTED
 www.us.example.com         3000       3999 /sys/acls/www.xml    GRANTED
 www.us.example.com                         /sys/acls/www.xml    GRANTED
</pre></div>
<!-- class="example" -->
<p class="subhead2"><a id="BABHHFEA"></a><a id="DBSEG118"></a>User Checking Own Privileges for Domain Name Resolution</p>
<p><a href="#BABDAJBF">Example 4-26</a> shows how the user <code dir="ltr">preston</code> can check her privileges to perform domain name resolution for <code dir="ltr">www.us.example.com</code>:</p>
<div id="DBSEG119" class="example">
<p class="titleinexample"><a id="sthref997"></a>Example 4-28 User Checking Privileges for Domain Name Resolution</p>
<pre dir="ltr">
SELECT HOST, STATUS PRIVILEGE
  from (SELECT HOST, STATUS,
               DBMS_NETWORK_ACL_UTILITY.CONTAINS_HOST('www.us.example.com',
                                                      HOST) PRECEDENCE
          FROM USER_NETWORK_ACL_PRIVILEGES
         WHERE PRIVILEGE = 'resolve' AND
               LOWER_PORT IS NULL AND UPPER_PORT IS NULL)
 WHERE PRECEDENCE IS NOT NULL
 ORDER BY PRECEDENCE DESC;

 HOST                 PRIVILEGE
 -------------------- ---------
 www.us.example.com   GRANTED
</pre></div>
<!-- class="example" --></div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="BABHGBGE"></a>
<div id="DBSEG120" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Setting the Precedence of Multiple Users and Roles in One Access Control List</h3>
<p>By <a id="sthref998"></a>default, <a id="sthref999"></a>Oracle Database grants or denies privileges to users and roles based on their physical position in the access control list. The first user or role listed is granted or denied privileges first, followed the second user or role, and so on. For instance, suppose the code in <a href="#CIHFGHGJ">Example 4-20</a> defined one role, <code dir="ltr">ACCT_MGR</code>, and two users, <code dir="ltr">sebastian</code> and <code dir="ltr">preston</code>, and the access control list XML file ordered these three as follows:</p>
<pre dir="ltr">
&lt;acl ...&gt;
  ...
  &lt;ace&gt;
    &lt;principal&gt;ACCT_MGR&lt;/principal&gt;
    &lt;grant&gt;true&lt;/grant&gt;
    &lt;privilege&gt;&lt;plsql:connect/&gt;&lt;/privilege&gt;
   &lt;/ace&gt;
  &lt;ace&gt;
    &lt;principal&gt;SEBASTIAN&lt;/principal&gt;
    &lt;grant&gt;false&lt;/grant&gt;
    &lt;privilege&gt;&lt;plsql:connect/&gt;&lt;/privilege&gt;
  &lt;/ace&gt;
  &lt;ace&gt;
    &lt;principal&gt;PRESTON&lt;/principal&gt;
    &lt;grant&gt;false&lt;/grant&gt;
    &lt;privilege&gt;&lt;plsql:connect/&gt;&lt;/privilege&gt;
  &lt;/ace&gt;
&lt;/acl&gt;
</pre>
<p><code dir="ltr">ACCT_MGR</code> is granted permissions first, followed by permission denials for <code dir="ltr">sebastian</code> and then <code dir="ltr">preston</code>. However, if <code dir="ltr">sebastian</code> and <code dir="ltr">preston</code> have been granted the <code dir="ltr">ACCT_MGR</code> role, they still could log in, because the <code dir="ltr">ACCT_MGR</code> role appears first in the list.</p>
<p>Even though these two users were granted the <code dir="ltr">acct_mgr</code> role, their specific jobs do not require them to have access to the <code dir="ltr">www.example.com</code> host. If the positions were reversed&mdash;the <code dir="ltr">acct_mgr</code> role listed after <code dir="ltr">sebastian</code> and <code dir="ltr">preston</code>&mdash;they would be denied the privilege of connecting to the network. To set the order of precedence of the <code dir="ltr">ACE</code> elements irrespective of their physical location in the <code dir="ltr">CREATE_ACL</code> and <code dir="ltr">ADD_PRIVILEGE</code> statements, you can use the <code dir="ltr">position</code> attribute.</p>
<p>For example, the following statements set the <code dir="ltr">ACE</code> elements in the resultant XML file in this order:</p>
<ol>
<li>
<p>The <code dir="ltr">ACE</code> element for <code dir="ltr">sebastian</code> appears first.</p>
</li>
<li>
<p>The <code dir="ltr">ACE</code> element for <code dir="ltr">preston</code> appears second.</p>
</li>
<li>
<p>The <code dir="ltr">acct_mgr</code> role appears last.</p>
</li>
</ol>
<p>In this case, neither of these users will be able to connect, because their grant privileges, which are set to <code dir="ltr">FALSE</code>, are evaluated before the <code dir="ltr">acct_mgr</code> role.</p>
<pre dir="ltr">
BEGIN
 DBMS_NETWORK_ACL_ADMIN.CREATE_ACL (
  acl          =&gt; 'us-example-com-permissions.xml', 
  description  =&gt; 'Network connection permission for ACCT_MGR and users', 
  principal    =&gt; 'ACCT_MGR',
  is_grant     =&gt; TRUE,
  privilege    =&gt; 'connect');
 DBMS_NETWORK_ACL_ADMIN.ADD_PRIVILEGE ( 
  acl          =&gt; 'us-example-com-permissions.xml', 
  principal    =&gt; 'SEBASTIAN', 
  is_grant     =&gt; FALSE, 
  privilege    =&gt; 'connect',
  position     =&gt; 1); 
 DBMS_NETWORK_ACL_ADMIN.ADD_PRIVILEGE ( 
  acl          =&gt; 'us-example-com-permissions.xml', 
  principal    =&gt; 'PRESTON', 
  is_grant     =&gt; FALSE, 
  privilege    =&gt; 'connect',
  position     =&gt; 2); 
END;
/
</pre></div>
<!-- class="sect2" -->
<a id="CIHGEHAG"></a>
<div id="DBSEG121" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Finding Information About Access Control Lists Configured for User Access</h3>
<p><a href="#CIHHCGHF">Table 4-6</a> <a id="sthref1000"></a><a id="sthref1001"></a>lists data <a id="sthref1002"></a><a id="sthref1003"></a>dictionary views that you can use to find information about existing access control lists. See <a class="olink REFRN" href="../../server.112/e40402/toc.htm"><span class="italic">Oracle Database Reference</span></a> for more information about these views.</p>
<div id="DBSEG122" class="tblhruleformalwide">
<p class="titleintable"><a id="sthref1004"></a><a id="CIHHCGHF"></a>Table 4-6 Data Dictionary Views That Display Information about Access Control Lists</p>
<table class="cellalignment2250" title="Data Dictionary Views That Display Information about Access Control Lists" summary="ACL views" dir="ltr">
<thead>
<tr class="cellalignment2244">
<th class="cellalignment2251" id="r1c1-t65">View</th>
<th class="cellalignment2251" id="r1c2-t65">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r2c1-t65" headers="r1c1-t65">
<p><code dir="ltr">DBA_NETWORK_ACLS</code><a id="sthref1005"></a></p>
</td>
<td class="cellalignment2252" headers="r2c1-t65 r1c2-t65">
<p>Shows the access control list assignments to the network hosts. The <code dir="ltr">SELECT</code> privilege on this view is granted to the <code dir="ltr">SELECT_CATALOG_ROLE</code> role only.</p>
</td>
</tr>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r3c1-t65" headers="r1c1-t65">
<p><code dir="ltr">DBA_NETWORK_ACL_PRIVILEGES</code><a id="sthref1006"></a></p>
</td>
<td class="cellalignment2252" headers="r3c1-t65 r1c2-t65">
<p>Shows the network privileges defined in all access control lists that are currently assigned to network hosts. The <code dir="ltr">SELECT</code> privilege on this view is granted to the <code dir="ltr">SELECT_CATALOG_ROLE</code> role only.</p>
</td>
</tr>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r4c1-t65" headers="r1c1-t65">
<p><code dir="ltr">DBA_WALLET_ACLS</code><a id="sthref1007"></a></p>
</td>
<td class="cellalignment2252" headers="r4c1-t65 r1c2-t65">
<p>Lists wallets that have been assigned access control lists.</p>
</td>
</tr>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r5c1-t65" headers="r1c1-t65">
<p><code dir="ltr">USER_NETWORK_ACL_PRIVILEGES</code><a id="sthref1008"></a></p>
</td>
<td class="cellalignment2252" headers="r5c1-t65 r1c2-t65">
<p>Shows the status of the network privileges for the current user to access network hosts. The <code dir="ltr">SELECT</code> privilege on the view is granted to <code dir="ltr">PUBLIC</code>.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblhruleformalwide" --></div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="BABFHBFH"></a>
<div id="DBSEG123" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Finding Information About User Privileges and Roles</h2>
<p><a href="#BABJHDIC">Table 4-7</a> <a id="sthref1009"></a><a id="sthref1010"></a><a id="sthref1011"></a><a id="sthref1012"></a><a id="sthref1013"></a>lists data dictionary views that you can query to access information about grants of privileges and roles. See <a class="olink REFRN" href="../../server.112/e40402/toc.htm"><span class="italic">Oracle Database Reference</span></a> for detailed information about these views.</p>
<div id="DBSEG569" class="tblhruleformal">
<p class="titleintable"><a id="sthref1014"></a><a id="BABJHDIC"></a>Table 4-7 Data Dictionary Views That Display Information about Privileges and Roles</p>
<table class="cellalignment2250" title="Data Dictionary Views That Display Information about Privileges and Roles" summary="Data dictionary views" dir="ltr">
<thead>
<tr class="cellalignment2244">
<th class="cellalignment2251" id="r1c1-t66">View</th>
<th class="cellalignment2251" id="r1c2-t66">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r2c1-t66" headers="r1c1-t66">
<p><code dir="ltr">ALL_COL_PRIVS</code></p>
</td>
<td class="cellalignment2252" headers="r2c1-t66 r1c2-t66">
<p>Describes all column object grants for which the current user or <code dir="ltr">PUBLIC</code> is the object owner, grantor, or grantee</p>
</td>
</tr>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r3c1-t66" headers="r1c1-t66">
<p><code dir="ltr">ALL_COL_PRIVS_MADE</code></p>
</td>
<td class="cellalignment2252" headers="r3c1-t66 r1c2-t66">
<p>Lists column object grants for which the current user is object owner or grantor.</p>
</td>
</tr>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r4c1-t66" headers="r1c1-t66">
<p><code dir="ltr">ALL_COL_PRIVS_RECD</code></p>
</td>
<td class="cellalignment2252" headers="r4c1-t66 r1c2-t66">
<p>Describes column object grants for which the current user or <code dir="ltr">PUBLIC</code> is the grantee</p>
</td>
</tr>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r5c1-t66" headers="r1c1-t66">
<p><code dir="ltr">ALL_TAB_PRIVS</code></p>
</td>
<td class="cellalignment2252" headers="r5c1-t66 r1c2-t66">
<p>Lists the grants on objects where the user or <code dir="ltr">PUBLIC</code> is the grantee</p>
</td>
</tr>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r6c1-t66" headers="r1c1-t66">
<p><code dir="ltr">ALL_TAB_PRIVS_MADE</code></p>
</td>
<td class="cellalignment2252" headers="r6c1-t66 r1c2-t66">
<p>Lists the all object grants made by the current user or made on the objects owned by the current user.</p>
</td>
</tr>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r7c1-t66" headers="r1c1-t66">
<p><code dir="ltr">ALL_TAB_PRIVS_RECD</code></p>
</td>
<td class="cellalignment2252" headers="r7c1-t66 r1c2-t66">
<p>Lists object grants for which the user or <code dir="ltr">PUBLIC</code> is the grantee</p>
</td>
</tr>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r8c1-t66" headers="r1c1-t66">
<p><code dir="ltr">DBA_COL_PRIVS</code></p>
</td>
<td class="cellalignment2252" headers="r8c1-t66 r1c2-t66">
<p>Describes all column object grants in the database</p>
</td>
</tr>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r9c1-t66" headers="r1c1-t66">
<p><code dir="ltr">DBA_EPG_DAD_AUTHORIZATION</code></p>
</td>
<td class="cellalignment2252" headers="r9c1-t66 r1c2-t66">
<p>Describes the database access descriptors (DAD) that are authorized to use a different user's privileges.</p>
</td>
</tr>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r10c1-t66" headers="r1c1-t66">
<p><code dir="ltr">DBA_TAB_PRIVS</code></p>
</td>
<td class="cellalignment2252" headers="r10c1-t66 r1c2-t66">
<p>Lists all grants on all objects in the database</p>
</td>
</tr>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r11c1-t66" headers="r1c1-t66">
<p><code dir="ltr">DBA_ROLES</code></p>
</td>
<td class="cellalignment2252" headers="r11c1-t66 r1c2-t66">
<p>Lists all roles that exist in the database, including secure application roles<a id="sthref1015"></a></p>
</td>
</tr>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r12c1-t66" headers="r1c1-t66">
<p><code dir="ltr">DBA_ROLE_PRIVS</code></p>
</td>
<td class="cellalignment2252" headers="r12c1-t66 r1c2-t66">
<p>Lists roles directly granted to users and roles. Note that it does not list the <code dir="ltr">PUBLIC</code> role.</p>
</td>
</tr>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r13c1-t66" headers="r1c1-t66">
<p><code dir="ltr">DBA_SYS_PRIVS</code></p>
</td>
<td class="cellalignment2252" headers="r13c1-t66 r1c2-t66">
<p>Lists system privileges granted to users and roles</p>
</td>
</tr>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r14c1-t66" headers="r1c1-t66">
<p><code dir="ltr">ROLE_ROLE_PRIVS</code></p>
</td>
<td class="cellalignment2252" headers="r14c1-t66 r1c2-t66">
<p>Lists roles granted to other roles. Information is provided only about roles to which the user has access.</p>
</td>
</tr>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r15c1-t66" headers="r1c1-t66">
<p><code dir="ltr">ROLE_SYS_PRIVS</code></p>
</td>
<td class="cellalignment2252" headers="r15c1-t66 r1c2-t66">
<p>Lists system privileges granted to roles. Information is provided only about roles to which the user has access.</p>
</td>
</tr>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r16c1-t66" headers="r1c1-t66">
<p><code dir="ltr">ROLE_TAB_PRIVS</code></p>
</td>
<td class="cellalignment2252" headers="r16c1-t66 r1c2-t66">
<p>Lists object privileges granted to roles. Information is provided only about roles to which the user has access.</p>
</td>
</tr>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r17c1-t66" headers="r1c1-t66">
<p><code dir="ltr">SESSION_PRIVS</code></p>
</td>
<td class="cellalignment2252" headers="r17c1-t66 r1c2-t66">
<p>Lists the privileges that are currently enabled for the user</p>
</td>
</tr>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r18c1-t66" headers="r1c1-t66">
<p><code dir="ltr">SESSION_ROLES</code></p>
</td>
<td class="cellalignment2252" headers="r18c1-t66 r1c2-t66">
<p>Lists all roles that are enabled for the current user. Note that it does not list the <code dir="ltr">PUBLIC</code> role.</p>
</td>
</tr>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r19c1-t66" headers="r1c1-t66">
<p><code dir="ltr">USER_COL_PRIVS</code></p>
</td>
<td class="cellalignment2252" headers="r19c1-t66 r1c2-t66">
<p>Describes column object grants for which the current user is the object owner, grantor, or grantee</p>
</td>
</tr>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r20c1-t66" headers="r1c1-t66">
<p><code dir="ltr">USER_COL_PRIVS_MADE</code></p>
</td>
<td class="cellalignment2252" headers="r20c1-t66 r1c2-t66">
<p>Describes column object grants for which the current user is the object owner</p>
</td>
</tr>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r21c1-t66" headers="r1c1-t66">
<p><code dir="ltr">USER_COL_PRIVS_RECD</code></p>
</td>
<td class="cellalignment2252" headers="r21c1-t66 r1c2-t66">
<p>Describes column object grants for which the current user is the grantee</p>
</td>
</tr>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r22c1-t66" headers="r1c1-t66">
<p><code dir="ltr">USER_EPG_DAD_AUTHORIZATION</code></p>
</td>
<td class="cellalignment2252" headers="r22c1-t66 r1c2-t66">
<p>Describes the database access descriptors (DAD) that are authorized to use a different user's privileges.</p>
</td>
</tr>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r23c1-t66" headers="r1c1-t66">
<p><code dir="ltr">USER_ROLE_PRIVS</code></p>
</td>
<td class="cellalignment2252" headers="r23c1-t66 r1c2-t66">
<p>Lists roles directly granted to the current user</p>
</td>
</tr>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r24c1-t66" headers="r1c1-t66">
<p><code dir="ltr">USER_TAB_PRIVS</code></p>
</td>
<td class="cellalignment2252" headers="r24c1-t66 r1c2-t66">
<p>Lists grants on all objects where the current user is the grantee</p>
</td>
</tr>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r25c1-t66" headers="r1c1-t66">
<p><code dir="ltr">USER_SYS_PRIVS</code></p>
</td>
<td class="cellalignment2252" headers="r25c1-t66 r1c2-t66">
<p>Lists system privileges granted to the current user</p>
</td>
</tr>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r26c1-t66" headers="r1c1-t66">
<p><code dir="ltr">USER_TAB_PRIVS_MADE</code></p>
</td>
<td class="cellalignment2252" headers="r26c1-t66 r1c2-t66">
<p>Lists grants on all objects owned by the current user</p>
</td>
</tr>
<tr class="cellalignment2244">
<td class="cellalignment2252" id="r27c1-t66" headers="r1c1-t66">
<p><code dir="ltr">USER_TAB_PRIVS_RECD</code></p>
</td>
<td class="cellalignment2252" headers="r27c1-t66 r1c2-t66">
<p>Lists object grants for which the current user is the grantee</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblhruleformal" -->
<p><a id="sthref1016"></a><a id="sthref1017"></a>This section provides some examples of using these views. For these examples, assume the following statements were issued:</p>
<pre dir="ltr">
CREATE ROLE security_admin IDENTIFIED BY <span class="italic">password</span>;

GRANT CREATE PROFILE, ALTER PROFILE, DROP PROFILE,
    CREATE ROLE, DROP ANY ROLE, GRANT ANY ROLE, AUDIT ANY,
    AUDIT SYSTEM, CREATE USER, BECOME USER, ALTER USER, DROP USER
    TO security_admin WITH ADMIN OPTION;

GRANT SELECT, DELETE ON SYS.AUD$ TO security_admin;

GRANT security_admin, CREATE SESSION TO swilliams;

GRANT security_admin TO system_administrator;

GRANT CREATE SESSION TO jward;

GRANT SELECT, DELETE ON emp TO jward;

GRANT INSERT (ename, job) ON emp TO swilliams, jward;
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink REFRN" href="../../server.112/e40402/toc.htm"><span class="italic">Oracle Database Reference</span></a> for a detailed description of these data dictionary views</div>
<div id="DBSEG125" class="sect2"><a id="sthref1018"></a>
<h3 class="sect2">Listing All System Privilege Grants</h3>
<p><a id="sthref1019"></a><a id="sthref1020"></a>The<a id="sthref1021"></a> following query returns all system privilege grants made to roles and users:</p>
<pre dir="ltr">
SELECT * FROM DBA_SYS_PRIVS;

GRANTEE            PRIVILEGE                         ADM
--------------     --------------------------------- ---
SECURITY_ADMIN     ALTER PROFILE                     YES
SECURITY_ADMIN     ALTER USER                        YES
SECURITY_ADMIN     AUDIT ANY                         YES
SECURITY_ADMIN     AUDIT SYSTEM                      YES
SECURITY_ADMIN     BECOME USER                       YES
SECURITY_ADMIN     CREATE PROFILE                    YES
SECURITY_ADMIN     CREATE ROLE                       YES
SECURITY_ADMIN     CREATE USER                       YES
SECURITY_ADMIN     DROP ANY ROLE                     YES
SECURITY_ADMIN     DROP PROFILE                      YES
SECURITY_ADMIN     DROP USER                         YES
SECURITY_ADMIN     GRANT ANY ROLE                    YES
SWILLIAMS          CREATE SESSION                    NO
JWARD              CREATE SESSION                    NO
</pre>
<p>See <a class="olink REFRN23274" href="../../server.112/e40402/statviews_5041.htm#REFRN23274"><span class="italic">Oracle Database Reference</span></a> for detailed information about the <code dir="ltr">DBA_SYS_PRIVS</code> view.</p>
</div>
<!-- class="sect2" -->
<div id="DBSEG126" class="sect2"><a id="sthref1022"></a>
<h3 class="sect2">Listing All Role Grants</h3>
<p><a id="sthref1023"></a><a id="sthref1024"></a>The following <a id="sthref1025"></a>query returns all the roles granted to users and other roles:</p>
<pre dir="ltr">
SELECT * FROM DBA_ROLE_PRIVS;

GRANTEE            GRANTED_ROLE                         ADM
------------------ ------------------------------------ ---
SWILLIAMS          SECURITY_ADMIN                       NO
</pre>
<p>See <a class="olink REFRN23230" href="../../server.112/e40402/statviews_4219.htm#REFRN23230"><span class="italic">Oracle Database Reference</span></a> for detailed information about the <code dir="ltr">DBA_ROLE_PRIVS</code> view.</p>
</div>
<!-- class="sect2" -->
<div id="DBSEG127" class="sect2"><a id="sthref1026"></a>
<h3 class="sect2">Listing Object Privileges Granted to a User</h3>
<p><a id="sthref1027"></a>The following query returns all object privileges (not including column-specific privileges) granted to the specified user:</p>
<pre dir="ltr">
SELECT TABLE_NAME, PRIVILEGE, GRANTABLE FROM DBA_TAB_PRIVS
    WHERE GRANTEE = 'jward';

TABLE_NAME   PRIVILEGE    GRANTABLE
-----------  ------------ ----------
EMP          SELECT       NO
EMP          DELETE       NO
</pre>
<p><a id="sthref1028"></a>To list all the column-specific privileges that have been granted, use the following query<a id="sthref1029"></a>:</p>
<pre dir="ltr">
SELECT GRANTEE, TABLE_NAME, COLUMN_NAME, PRIVILEGE
    FROM DBA_COL_PRIVS;

GRANTEE      TABLE_NAME     COLUMN_NAME      PRIVILEGE
-----------  ------------   -------------    --------------
SWILLIAMS    EMP            ENAME            INSERT
SWILLIAMS    EMP            JOB              INSERT
JWARD        EMP            NAME             INSERT
JWARD        EMP            JOB              INSERT
</pre>
<p>See <a class="olink REFRN23282" href="../../server.112/e40402/statviews_5051.htm#REFRN23282"><span class="italic">Oracle Database Reference</span></a> for detailed information about the <code dir="ltr">DBA_TAB_PRIVS</code> view.</p>
</div>
<!-- class="sect2" -->
<div id="DBSEG128" class="sect2"><a id="sthref1030"></a>
<h3 class="sect2">Listing the Current Privilege Domain of Your Session</h3>
<p><a id="sthref1031"></a>The <a id="sthref1032"></a>following query lists all roles currently enabled for the issuer:</p>
<pre dir="ltr">
SELECT * FROM SESSION_ROLES;
</pre>
<p>If user <code dir="ltr">swilliams</code> has the <code dir="ltr">security_admin</code> role enabled and issues the previous query, then Oracle Database returns the following information:</p>
<pre dir="ltr">
ROLE
------------------------------
SECURITY_ADMIN
</pre>
<p><a id="sthref1033"></a>The following query lists all system privileges currently available in the security domain of the issuer, both from explicit privilege grants and from enabled roles:</p>
<pre dir="ltr">
SELECT * FROM SESSION_PRIVS;
</pre>
<p>If user <code dir="ltr">swilliams</code> has the <code dir="ltr">security_admin</code> role enabled and issues the previous query, then Oracle Database returns the following results:</p>
<pre dir="ltr">
PRIVILEGE
----------------------------------------
AUDIT SYSTEM
CREATE SESSION
CREATE USER
BECOME USER
ALTER USER
DROP USER
CREATE ROLE
DROP ANY ROLE
GRANT ANY ROLE
AUDIT ANY
CREATE PROFILE
ALTER PROFILE
DROP PROFILE
</pre>
<p>If the <code dir="ltr">security_admin</code> role is disabled for user <code dir="ltr">swilliams</code>, then the first query would return no rows, while the second query would only return a row for the <code dir="ltr">CREATE SESSION</code> privilege grant.</p>
<p>See <a class="olink REFRN29028" href="../../server.112/e40402/statviews_5177.htm#REFRN29028"><span class="italic">Oracle Database Reference</span></a> for detailed information about the <code dir="ltr">SESSION_ROLES</code> view.</p>
</div>
<!-- class="sect2" -->
<div id="DBSEG129" class="sect2"><a id="sthref1034"></a>
<h3 class="sect2">Listing Roles of the Database</h3>
<p><a id="sthref1035"></a>You can use the <code dir="ltr">DBA_ROLES</code> <a id="sthref1036"></a>data dictionary view to list all roles of a database and the authentication used for each role. For example, the following query lists all the roles in the database:</p>
<pre dir="ltr">
SELECT * FROM DBA_ROLES;

ROLE                  PASSWORD
----------------      --------
CONNECT               NO
RESOURCE              NO
DBA                   NO
SECURITY_ADMIN        YES
</pre>
<p>See <a class="olink REFRN23231" href="../../server.112/e40402/statviews_4220.htm#REFRN23231"><span class="italic">Oracle Database Reference</span></a> for detailed information about the <code dir="ltr">DBA_ROLES</code> view.</p>
</div>
<!-- class="sect2" -->
<div id="DBSEG130" class="sect2"><a id="sthref1037"></a>
<h3 class="sect2">Listing Information About the Privilege Domains of Roles</h3>
<p><a id="sthref1038"></a>The <code dir="ltr">ROLE_ROLE_PRIVS<a id="sthref1039"></a></code>, <code dir="ltr">ROLE_SYS_PRIVS</code><a id="sthref1040"></a>, and <code dir="ltr">ROLE_TAB_PRIVS</code><a id="sthref1041"></a> data dictionary views contain information about the privilege domains of roles. For example, the following query lists all the roles granted to the <code dir="ltr">system_admin</code> role:</p>
<pre dir="ltr">
SELECT GRANTED_ROLE, ADMIN_OPTION
   FROM ROLE_ROLE_PRIVS
   WHERE ROLE = 'SYSTEM_ADMIN';

GRANTED_ROLE              ADM
----------------          ----
SECURITY_ADMIN            NO
</pre>
<p>The following query lists all the system privileges granted to the <code dir="ltr">security_admin</code> role:</p>
<pre dir="ltr">
SELECT * FROM ROLE_SYS_PRIVS WHERE ROLE = 'SECURITY_ADMIN';

ROLE                    PRIVILEGE                      ADM
----------------------- -----------------------------  ---
SECURITY_ADMIN           ALTER PROFILE                 YES
SECURITY_ADMIN           ALTER USER                    YES
SECURITY_ADMIN           AUDIT ANY                     YES
SECURITY_ADMIN           AUDIT SYSTEM                  YES
SECURITY_ADMIN           BECOME USER                   YES
SECURITY_ADMIN           CREATE PROFILE                YES
SECURITY_ADMIN           CREATE ROLE                   YES
SECURITY_ADMIN           CREATE USER                   YES
SECURITY_ADMIN           DROP ANY ROLE                 YES
SECURITY_ADMIN           DROP PROFILE                  YES
SECURITY_ADMIN           DROP USER                     YES
SECURITY_ADMIN           GRANT ANY ROLE                YES
</pre>
<p>The following query lists all the object privileges granted to the <code dir="ltr">security_admin</code> role:</p>
<pre dir="ltr">
SELECT TABLE_NAME, PRIVILEGE FROM ROLE_TAB_PRIVS
    WHERE ROLE = 'SECURITY_ADMIN';

TABLE_NAME                     PRIVILEGE
---------------------------    ----------------
AUD$                           DELETE
AUD$                           SELECT
</pre>
<p>See <a class="olink REFRN" href="../../server.112/e40402/toc.htm"><span class="italic">Oracle Database Reference</span></a> for detailed information about the <a class="olink REFRN29059" href="../../server.112/e40402/statviews_5170.htm#REFRN29059"><code dir="ltr">ROLE_ROLE_PRIVS</code></a>, <a class="olink REFRN29060" href="../../server.112/e40402/statviews_5171.htm#REFRN29060"><code dir="ltr">ROLE_SYS_PRIVS</code></a>, and <a class="olink REFRN29061" href="../../server.112/e40402/statviews_5172.htm#REFRN29061"><code dir="ltr">ROLE_TAB_PRIVS</code></a> views.</p>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" --></div>
<!-- class="chapter" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment2243">
<tr>
<td class="cellalignment2252">
<table class="cellalignment2248">
<tr>
<td class="cellalignment2247"><a href="authentication.htm"><img width="24" height="24" src="../../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment2247"><a href="app_devs.htm"><img width="24" height="24" src="../../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;2006, 2017,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment2254">
<table class="cellalignment2246">
<tr>
<td class="cellalignment2247"><a href="../../index.htm"><img width="24" height="24" src="../../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment2247"><a href="../../nav/portal_booklist.htm"><img width="24" height="24" src="../../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment2247"><a href="toc.htm"><img width="24" height="24" src="../../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment2247"><a href="index.htm"><img width="24" height="24" src="../../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment2247"><a href="../../nav/mindx.htm"><img width="24" height="24" src="../../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment2247"><a href="../../dcommon/html/feedback.htm"><img width="24" height="24" src="../../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>
</body>
</html>
