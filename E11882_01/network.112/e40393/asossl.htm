<!DOCTYPE html>
<html lang="en" >
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1">
<meta charset="utf-8">
<title>Configuring Secure Sockets Layer Authentication</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Merged Version 1079" />
<meta name="dcterms.created" content="2016-03-03T15:46:22Z" />
<meta name="robots" content="all" />
<meta name="dcterms.title" content="Database Advanced Security Administrator's Guide" />
<meta name="dcterms.identifier" content="E40393-10" />
<meta name="dcterms.isVersionOf" content="ASOAG" />
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;1996, 2016,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved." />
<link rel="Start" href="../../index.htm" title="Home" type="text/html" />
<link rel="Copyright" href="../../dcommon/html/cpyr.htm" title="Copyright" type="text/html" />

<script type="application/javascript"  src="../../dcommon/js/headfoot.js"></script>
<script type="application/javascript"  src="../../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html" />
<link rel="Index" href="index.htm" title="Index" type="text/html" />
<link rel="Glossary" href="asogls.htm" title="Glossary" type="text/html" />
<link rel="Prev" href="asokerb.htm" title="Previous" type="text/html" />
<link rel="Next" href="asowalet.htm" title="Next" type="text/html" />
<link rel="alternate" href="../e40393.pdf" title="PDF version" type="application/pdf" />
<link rel="schema.dcterms" href="http://purl.org/dc/terms/" />
<link rel="stylesheet" href="../../dcommon/css/fusiondoc.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/header.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/footer.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/fonts.css">
<link rel="stylesheet" href="../../dcommon/css/foundation.css">
<link rel="stylesheet" href="../../dcommon/css/codemirror.css">
<link rel="stylesheet" type="text/css" title="Default" href="../../nav/css/html5.css">
<link rel="stylesheet" href="../../dcommon/css/respond-480-tablet.css">
<link rel="stylesheet" href="../../dcommon/css/respond-768-laptop.css">
<link rel="stylesheet" href="../../dcommon/css/respond-1140-deskop.css">
<script type="application/javascript" src="../../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">24/35</span> <!-- End Header -->
<script  >
<!-- // <![CDATA[
window.name='asossl'
// ]]> -->
</script> <script  >
// <![CDATA[
function footdisplay(footnum,footnote) {
    var msg = window.open('', 'NewWindow' + footnum,
        'directories=no,height=120,location=no,menubar=no,resizable=yes,' +
        'scrollbars=yes,status=no,toolbar=no,width=598');
    msg.document.open('text/html');
    msg.document.write('<!DOCTYPE html ');
    msg.document.write('PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" ');

    msg.document.write('"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">');
    msg.document.write('<html xmlns="http://www.w3.org/1999/xhtml" lang="en"><head><title>');
    msg.document.write('Footnote&nbsp; ' + footnum);
    msg.document.write('<\/title><meta http-equiv="Content-Type" ');
    msg.document.write('content="text/html; charset=utf-8" />');
    msg.document.write('');
    msg.document.write('<style> <![CDATA[ ');
    msg.document.write('h1 {text-align: center; font-size: 14pt;}');
    msg.document.write('fieldset {border: none;}');
    msg.document.write('form {text-align: center;}');
    msg.document.write(' ]]\u003e <\/style>');
    msg.document.write('<\/head><body><h1>Footnote&nbsp; ' + footnum + '<\/h1><p>');
    msg.document.write(footnote);
    msg.document.write('<\/p><form action="" method="post"><fieldset>');
    msg.document.write('<input type="button" value="OK" ');
    msg.document.write('onclick="window.close();" />');
    msg.document.write('<\/fieldset><\/form><\/body><\/html>');
    msg.document.close();
    msg.focus();
}
// ]]>
</script> <noscript>
<p>The script content on this page is for navigation purposes only and does not alter the content in any way.</p>
</noscript>
<div id="ASOAG070" class="chapter"><a id="i1013323"></a>
<h1 class="chapter"><span class="secnum">13</span> Configuring Secure Sockets Layer Authentication</h1>
<p>This chapter describes how to configure and use the Secure Sockets Layer (SSL) and Transport Layer Security (TLS) protocols which are supported by Oracle Advanced Security. It contains the following topics:</p>
<ul>
<li>
<p><a href="#CBHJBDGD">Secure Sockets Layer and Transport Layer Security</a></p>
</li>
<li>
<p><a href="#i1009717">Public Key Infrastructure in an Oracle Environment</a></p>
</li>
<li>
<p><a href="#i1021093">Secure Sockets Layer Combined with Other Authentication Methods</a></p>
</li>
<li>
<p><a href="#i1020739">Secure Sockets Layer and Firewalls</a></p>
</li>
<li>
<p><a href="#i1006461">Secure Sockets Layer Usage Issues</a></p>
</li>
<li>
<p><a href="#i1006505">Enabling Secure Sockets Layer</a></p>
</li>
<li>
<p><a href="#i1022857">Troubleshooting Secure Sockets Layer</a></p>
</li>
<li>
<p><a href="#i1022705">Certificate Validation with Certificate Revocation Lists</a></p>
</li>
<li>
<p><a href="#i1007316">Configuring Your System to Use Hardware Security Modules</a></p>
</li>
<li>
<p><a href="#BABIBCAE">Configuring SSL in an Oracle Real Application Clusters Environment</a></p>
</li>
</ul>
<a id="i1006119"></a>
<div id="ASOAG9665" class="sect1"><a id="CBHJBDGD"></a>
<h2 class="sect1"><span class="secnum">13.1</span> Secure Sockets Layer and Transport Layer Security</h2>
<p><a href="asogls.htm#i997335"><span class="xrefglossterm">Secure Sockets Layer (SSL)</span></a> is <a id="sthref530"></a>an industry standard protocol originally designed by <a id="sthref531"></a>Netscape Communications Corporation for securing network connections. SSL uses RSA public key cryptography in conjunction with symmetric key cryptography to provide authentication, encryption, and data integrity.</p>
<p>This section contains:</p>
<ul>
<li>
<p><a href="#i1009539">The Difference Between Secure Sockets Layer and Transport Layer Security</a></p>
</li>
<li>
<p><a href="#CIHJADBB">How Oracle Database Uses Secure Sockets Layer for Authentication</a></p>
</li>
<li>
<p><a href="#i1009600">How Secure Sockets Layer Works in an Oracle Environment: The SSL Handshake</a></p>
</li>
</ul>
<a id="i1009539"></a>
<div id="ASOAG9666" class="sect2">
<h3 class="sect2"><span class="secnum">13.1.1</span> The Difference Between Secure Sockets Layer and Transport Layer Security</h3>
<p>Although SSL was primarily developed by Netscape Communications Corporation, the Internet Engineering Task Force (IETF) took over development of it, and renamed it Transport Layer Security (TLS). Essentially, TLS is an incremental improvement to SSL version 3.0.</p>
<p>If you want to use TLS Version 1.1 or 1.2, then you can download one of the following patches from My Oracle Support:</p>
<ul>
<li>
<p><span class="bold">Linux systems:</span> Patch 19207156: MES BUNDLE ON TOP OF RDBMS 11.2.0.4.2 DBPSU (requires April 2014 PSU</p>
</li>
<li>
<p><span class="bold">Microsoft Windows systems:</span> Patch 19651773: WINDOWS DB BUNDLE PATCH 11.2.0.4.10</p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><code ><a href="https://support.oracle.com">https://support.oracle.com</a></code></p>
</li>
<li>
<p><span class="italic">The TLS Protocol Version 1.0</span> [RFC 2246] at the IETF Web site, which can be found at:</p>
<pre dir="ltr">
<a href="http://www.ietf.org">http://www.ietf.org</a>
</pre></li>
</ul>
</div>
<div class="infobox-note">
<p class="notep1">Note:</p>
<a id="sthref532"></a>To simplify discussion, this chapter uses the term SSL where either SSL or TLS may be appropriate because SSL is the most widely recognized term. However, where distinctions occur between how you use or configure these protocols, this chapter specifies what is appropriate for either SSL or TLS.</div>
</div>
<!-- class="sect2" -->
<a id="CIHJADBB"></a>
<div id="ASOAG9667" class="sect2">
<h3 class="sect2"><span class="secnum">13.1.2</span> How Oracle Database Uses Secure Sockets Layer for Authentication</h3>
<p>Oracle Advanced Security supports authentication by using digital certificates over SSL in addition to the native encryption and data integrity capabilities of these protocols.</p>
<p>By using <a id="sthref533"></a>Oracle Advanced Security SSL functionality to secure communications between clients and servers, you can</p>
<ul>
<li>
<p>Use SSL to encrypt the connection between clients and servers</p>
</li>
<li>
<p>Authenticate any client or server, such as Oracle Application Server 10g, to any Oracle database server that is configured to communicate over SSL</p>
</li>
</ul>
<p>You can use SSL features by themselves or in combination with other authentication methods supported by Oracle Advanced Security. For example, you can use the encryption provided by SSL in combination with the authentication provided by Kerberos. SSL supports any of the following authentication modes:</p>
<ul>
<li>
<p>Only the server authenticates itself to the client</p>
</li>
<li>
<p>Both client and server authenticate themselves to each other</p>
</li>
<li>
<p>Neither the client nor the server authenticates itself to the other, thus using the SSL encryption feature by itself</p>
<div class="infoboxnotealso">
<p class="notep1"><span class="bold">See Also</span>:</p>
<ul>
<li>
<p><span class="italic">The SSL Protocol</span>, version 3.0, published by the Internet Engineering Task Force, for a more detailed discussion of SSL</p>
</li>
<li>
<p><a href="asointro.htm#g1011524">Chapter 1, "Introduction to Oracle Advanced Security"</a>, for more information about authentication methods</p>
</li>
</ul>
</div>
</li>
</ul>
</div>
<!-- class="sect2" -->
<a id="i1009600"></a>
<div id="ASOAG9668" class="sect2">
<h3 class="sect2"><span class="secnum">13.1.3</span> How Secure Sockets Layer Works in an Oracle Environment: The SSL Handshake</h3>
<p>When <a id="sthref534"></a><a id="sthref535"></a>a network connection over SSL is initiated, the client and server perform an SSL handshake that includes the following steps:</p>
<ul>
<li>
<p>The client and server establish which <a href="asogls.htm#i996799"><span class="xrefglossterm">cipher suite</span></a>s to use. This includes which encryption algorithms are used for data transfers.</p>
</li>
<li>
<p>The server sends its certificate to the client, and the client verifies that the server's certificate was signed by a trusted CA. This step verifies the identity of the server.</p>
</li>
<li>
<p>Similarly, if client authentication is required, the client sends its own certificate to the server, and the server verifies that the client's certificate was signed by a trusted CA.</p>
</li>
<li>
<p>The client and server exchange key information using public key cryptography. Based on this information, each generates a <a href="asogls.htm#i997366"><span class="xrefglossterm">session key</span></a>. All subsequent communications between the client and the server is encrypted and decrypted by using this session key and the negotiated cipher suite.</p>
</li>
</ul>
<p>The <a id="sthref536"></a>authentication process consists of the following steps:</p>
<ol>
<li>
<p>On a client, the user initiates an Oracle Net connection to the server by using SSL.</p>
</li>
<li>
<p>SSL performs the handshake between the client and the server.</p>
</li>
<li>
<p>If the handshake is successful, the server verifies that the user has the appropriate <a href="asogls.htm#i996757"><span class="xrefglossterm">authorization</span></a> to access the database.</p>
</li>
</ol>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="i1009717"></a>
<div id="ASOAG9669" class="sect1">
<h2 class="sect1"><span class="secnum">13.2</span> Public Key Infrastructure in an Oracle Environment</h2>
<p>This section contains:</p>
<ul>
<li>
<p><a href="#BABJIJJJ">About Public Key Infrastructure in an Oracle Environment</a></p>
</li>
<li>
<p><a href="#BABJFCFH">About Public Key Cryptography</a></p>
</li>
<li>
<p><a href="#BABIGGGA">Public Key Infrastructure Components in an Oracle Environment</a></p>
</li>
</ul>
<a id="BABJIJJJ"></a>
<div id="ASOAG10564" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">13.2.1</span> About Public Key Infrastructure in an Oracle Environment</h3>
<p>A public key infrastructure (PKI) is a substrate of network components that provide a security underpinning, based on trust assertions, for an entire organization. A PKI exists so that disparate network entities can access its security services, which use public-key cryptography on an as-needed basis. Oracle provides a complete PKI that is based on RSA Security, Inc., Public-Key Cryptography Standards, and which interoperates with Oracle servers and clients.</p>
</div>
<!-- class="sect2" -->
<a id="BABJFCFH"></a>
<div id="ASOAG9670" class="sect2">
<h3 class="sect2"><span class="secnum">13.2.2</span> About Public Key Cryptography</h3>
<p>Traditional private-key or symmetric-key cryptography requires a single, secret key that is shared by two or more parties to a secure communication. This key is used to both encrypt and decrypt secure messages sent between the parties, requiring prior, secure distribution of the key to each party. The problem with this method is that it is difficult to securely transmit and store the key.</p>
<p>Public-key cryptography provides a solution to this problem, by employing <a href="asogls.htm#i997278"><span class="xrefglossterm">public and private key pair</span></a>s and a secure method for key distribution. The freely available <a href="asogls.htm#i997266"><span class="xrefglossterm">public key</span></a> is used to encrypt messages that can <span class="italic">only</span> be decrypted by the holder of the associated <a href="asogls.htm#i997257"><span class="xrefglossterm">private key</span></a>. The private key is securely stored, together with other security credentials, in an encrypted container called a <a href="asogls.htm#i997514"><span class="xrefglossterm">wallet</span></a>.</p>
<p>Public-key algorithms can guarantee the secrecy of a message, but they do not necessarily guarantee secure communications because they do not verify the identities of the communicating parties. To establish secure communications, it is important to verify that the public key used to encrypt a message does in fact belong to the target recipient. Otherwise, a third party can potentially eavesdrop on the communication and intercept public key requests, substituting its own public key for a legitimate key (the <a href="asogls.htm#i997136"><span class="xrefglossterm">man-in-the-middle</span></a> attack).</p>
<p>In order to avoid such an attack, it is necessary to verify the owner of the public key, a process called <a href="asogls.htm#i996754"><span class="xrefglossterm">authentication</span></a>. Authentication can be accomplished through a <a href="asogls.htm#i996783"><span class="xrefglossterm">certificate authority</span></a> (CA), which is a third party that is trusted by both of the communicating parties.</p>
<p>The CA issues public key certificates that contain an entity's name, public key, and certain other security credentials. Such credentials typically include the CA name, the CA signature, and the certificate effective dates (From Date, To Date).</p>
<p>The CA uses its private key to encrypt a message, while the public key is used to decrypt it, thus verifying that the message was encrypted by the CA. The CA public key is well known and does not have to be authenticated each time it is accessed. Such CA public keys are stored in wallets.</p>
</div>
<!-- class="sect2" -->
<a id="BABIGGGA"></a>
<div id="ASOAG9671" class="sect2">
<h3 class="sect2"><span class="secnum">13.2.3</span> Public Key Infrastructure Components in an Oracle Environment</h3>
<p>Public key infrastructure (PKI) components in an Oracle environment include the following:</p>
<ul>
<li>
<p><a href="#i1006195">Certificate Authority</a></p>
</li>
<li>
<p><a href="#i1006216">Certificates</a></p>
</li>
<li>
<p><a href="#i1009730">Certificate Revocation Lists</a></p>
</li>
<li>
<p><a href="#i1006231">Wallets</a></p>
</li>
<li>
<p><a href="#i1009712">Hardware Security Modules</a></p>
</li>
</ul>
<a id="i1006195"></a>
<div id="ASOAG9672" class="sect3">
<h4 class="sect3"><span class="secnum">13.2.3.1</span> <a id="sthref537"></a><a id="sthref538"></a>Certificate Authority</h4>
<p>A certificate authority (CA) is a trusted third party that certifies the identity of entities, such as users, databases, administrators, clients, and servers. When an entity requests certification, the CA verifies its identity and grants a certificate, which is signed with the CA's private key.</p>
<p>Different CAs may have different identification requirements when issuing certificates. Some CAs may verify a requester's identity with a driver's license, some may verify identity with the requester's fingerprints, while others may require that requesters have their certificate request form notarized.</p>
<p>The CA publishes its own certificate, which includes its public key. Each network entity has a list of trusted CA certificates. Before communicating, network entities exchange certificates and check that each other's certificate is signed by one of the CAs on their respective trusted CA certificate lists.</p>
<p>Network entities can obtain their certificates from the same or different CAs. By default, Oracle Advanced Security automatically installs trusted certificates from VeriSign, RSA, Entrust, and GTE CyberTrust when you create a new wallet.</p>
<p>Oracle Application Server Certificate Authority, part of Oracle Identity Management Infrastructure, is a new Oracle PKI component available in Oracle Application Server 10g (9.0.4).</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#i1006231">"Wallets"</a></div>
</div>
<!-- class="sect3" -->
<a id="i1006216"></a>
<div id="ASOAG9673" class="sect3">
<h4 class="sect3"><span class="secnum">13.2.3.2</span> <a id="sthref539"></a><a id="sthref540"></a>Certificates</h4>
<p>A certificate is created when an entity's public key is signed by a trusted certificate authority (CA). A certificate ensures that an entity's identification information is correct and that the public key actually belongs to that entity.</p>
<p>A certificate contains the entity's name, public key, and an expiration date, as well as a serial number and <a href="asogls.htm#i996786"><span class="xrefglossterm">certificate chain</span></a> information. It can also contain information about the privileges associated with the certificate.</p>
<p>When a network entity receives a certificate, it verifies that it is a <a href="asogls.htm#i997487"><span class="xrefglossterm">trusted certificate</span></a>, that is, one that has been issued and signed by a <a href="asogls.htm#i997490"><span class="xrefglossterm">trusted certificate authority</span></a>. A certificate remains valid until it expires or until it is revoked.</p>
</div>
<!-- class="sect3" -->
<a id="i1009730"></a>
<div id="ASOAG072" class="sect3">
<h4 class="sect3"><span class="secnum">13.2.3.3</span> <a id="sthref541"></a><a id="sthref542"></a><a id="sthref543"></a>Certificate Revocation Lists</h4>
<p>Typically, when a CA signs a certificate binding a public key pair to a user identity, the certificate is valid for a specified period of time. However, certain events, such as user name changes or compromised private keys, can render a certificate invalid before the validity period expires. When this happens, the CA revokes the certificate and adds its serial number to a Certificate Revocation List (CRL). The CA periodically publishes CRLs to alert the user population when it is no longer acceptable to use a particular public key to verify its associated user identity.</p>
<p>When servers or clients receive user certificates in an Oracle environment, they can validate the certificate by checking its expiration date, signature, and revocation status. Certificate revocation status is checked by validating it against published CRLs. If certificate revocation status checking is turned on, then the server searches for the appropriate CRL depending on how this feature has been configured. The server searches for CRLs in the following locations:</p>
<ol>
<li>
<p>Oracle Internet Directory</p>
</li>
<li>
<p><a href="asogls.htm#i997810"><span class="xrefglossterm">CRL Distribution Point</span></a>, a location specified in the CRL Distribution Point (CRL DP) X.509, version 3, certificate extension when the certificate is issued.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#i1022705">"Certificate Validation with Certificate Revocation Lists"</a> for information about configuring and managing this PKI component</div>
</li>
</ol>
<div class="infobox-note">
<p class="notep1">Note:</p>
To use CRLs with other Oracle products, refer to the specific product documentation. This implementation of certificate validation with CRLs is only available in the Oracle Database 11<span class="italic">g</span> Release 2 (11.2) SSL adapter.</div>
</div>
<!-- class="sect3" -->
<a id="i1006231"></a>
<div id="ASOAG9674" class="sect3">
<h4 class="sect3"><span class="secnum">13.2.3.4</span> <a id="sthref544"></a><a id="sthref545"></a>Wallets</h4>
<p>A wallet is a container that is used to store authentication and signing credentials, including private keys, certificates, and trusted certificates needed by SSL. In an Oracle environment, every entity that communicates over SSL must have a wallet containing an X.509 version 3 certificate, private key, and list of trusted certificates, with the exception of Diffie-Hellman.</p>
<p>Security administrators use Oracle Wallet Manager to manage security credentials on the server. Wallet owners use it to manage security credentials on clients. Specifically, you use Oracle Wallet Manager to do the following:</p>
<ul>
<li>
<p>Generate a public-private key pair and create a certificate request</p>
</li>
<li>
<p>Store a user certificate that matches with the private key</p>
</li>
<li>
<p>Configure trusted certificates</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
Installation of Oracle Advanced Security 11<span class="italic">g</span> Release 2 (11.2) also installs Oracle Wallet Manager release 10.1.</div>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="asowalet.htm#i1009041">Chapter 14, "Using Oracle Wallet Manager"</a></p>
</li>
<li>
<p><a href="asowalet.htm#BABGGBIG">"Creating a New Wallet"</a></p>
</li>
<li>
<p><a href="asowalet.htm#i1007110">"Managing Trusted Certificates"</a></p>
</li>
</ul>
</div>
</li>
</ul>
</div>
<!-- class="sect3" -->
<a id="i1009712"></a>
<div id="ASOAG9675" class="sect3">
<h4 class="sect3"><span class="secnum">13.2.3.5</span> <a id="sthref546"></a><a id="sthref547"></a><a id="sthref548"></a>Hardware Security Modules</h4>
<p>Oracle Advanced Security uses these devices for the following functions:</p>
<ul>
<li>
<p>Store cryptographic information, such as private keys</p>
</li>
<li>
<p>Perform cryptographic operations to off load RSA operations from the server, freeing the CPU to respond to other transactions</p>
</li>
</ul>
<p>Cryptographic information can be stored on two types of hardware devices:</p>
<ul>
<li>
<p>(Server-side) Hardware boxes where keys are stored in the box, but managed by using tokens.</p>
</li>
<li>
<p>(Client-side) Smart card readers, which support storing private keys on tokens.</p>
</li>
</ul>
<p>An Oracle environment supports hardware devices using APIs that conform to the RSA Security, Inc., Public-Key Cryptography Standards (PKCS) #11 specification.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
Currently, SafeNET and nCipher devices are certified with Oracle Advanced Security</div>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#i1007316">"Configuring Your System to Use Hardware Security Modules"</a> for details configuration details.</div>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="i1021093"></a>
<div id="ASOAG9676" class="sect1">
<h2 class="sect1"><span class="secnum">13.3</span> Secure Sockets Layer Combined with Other Authentication Methods</h2>
<p>You can configure Oracle Advanced Security to use <a id="sthref549"></a>SSL concurrently with database user names and passwords, RADIUS, and Kerberos, which are discussed in the following sections:</p>
<ul>
<li>
<p><a href="#i1006356">Architecture: Oracle Advanced Security and Secure Sockets Layer</a></p>
</li>
<li>
<p><a href="#i1006397">How Secure Sockets Layer Works with Other Authentication Methods</a></p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="asoappa.htm#g638255">Appendix A, "Data Encryption and Integrity Parameters"</a> for information about how to configure SSL with other supported authentication methods, including an example of a <code dir="ltr">sqlnet.ora</code> file with multiple authentication methods specified.</div>
</li>
</ul>
<a id="i1006356"></a>
<div id="ASOAG9677" class="sect2">
<h3 class="sect2"><span class="secnum">13.3.1</span> <a id="sthref550"></a>Architecture: Oracle Advanced Security and Secure Sockets Layer</h3>
<p><a href="asointro.htm#CEGJEGIH">Figure 1-4</a>, which displays the Oracle Advanced Security implementation architecture, shows that Oracle Advanced Security operates at the <a href="asogls.htm#i997369"><span class="xrefglossterm">session layer</span></a> on top of SSL and uses TCP/IP at the <a href="asogls.htm#i997481"><span class="xrefglossterm">transport layer</span></a>. This separation of functionality lets you employ SSL concurrently with other supported protocols.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink NETAG" href="../e41945/toc.htm"><span class="italic">Oracle Database Net Services Administrator's Guide</span></a> for information about stack communications in an Oracle networking environment</div>
</div>
<!-- class="sect2" -->
<a id="i1006397"></a>
<div id="ASOAG9678" class="sect2">
<h3 class="sect2"><span class="secnum">13.3.2</span> How Secure Sockets Layer Works with Other Authentication Methods</h3>
<p><a href="#CIHHEJJB">Figure 13-1</a> illustrates a configuration in which SSL is used in combination with another authentication method supported by Oracle Advanced Security.</p>
<div id="ASOAG10207" class="figure">
<p class="titleinfigure"><a id="CIHHEJJB"></a>Figure 13-1 SSL in Relation to Other Authentication Methods</p>
<img width="687" height="255" src="img/asoag018.gif" alt="Description of Figure 13-1 follows" /><br />
<a id="sthref551" href="img_text/asoag018.htm">Description of ''Figure 13-1 SSL in Relation to Other Authentication Methods''</a><br />
<br /></div>
<!-- class="figure" -->
<p>In this example, SSL is used to establish the initial handshake (server authentication), and an alternative authentication method is used to authenticate the client</p>
<ol>
<li>
<p>The client seeks to connect to the Oracle database server.</p>
</li>
<li>
<p>SSL performs a handshake during which the server authenticates itself to the client and both the client and server establish which cipher suite to use.</p>
</li>
<li>
<p>Once the SSL handshake is successfully completed, the user seeks access to the database.</p>
</li>
<li>
<p>The Oracle database server authenticates the user with the authentication server using a non-SSL authentication method such as Kerberos or RADIUS.</p>
</li>
<li>
<p>Upon validation by the authentication server, the Oracle database server grants access and authorization to the user, and then the user can access the database securely by using SSL.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#i1009600">"How Secure Sockets Layer Works in an Oracle Environment: The SSL Handshake"</a></div>
</li>
</ol>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="i1020739"></a>
<div id="ASOAG9679" class="sect1">
<h2 class="sect1"><span class="secnum">13.4</span> Secure Sockets Layer and Firewalls</h2>
<p>Oracle Advanced Security supports two types of firewalls:</p>
<ul>
<li>
<p>Application proxy-based firewalls, such as Network Associates Gauntlet, or Axent Raptor.</p>
</li>
<li>
<p>Stateful packet inspection firewalls, such as Check Point Firewall-1, or Cisco PIX Firewall.</p>
</li>
</ul>
<p>When you enable SSL, stateful inspection firewalls behave like application proxy firewalls because they do not decrypt encrypted packets.</p>
<p>Firewalls do not inspect encrypted traffic. When a firewall encounters data addressed to an SSL port on an intranet server, it checks the target IP address against its access rules and lets the SSL packet pass through to permitted SSL ports, rejecting all others.</p>
<p>With the Oracle Net Firewall Proxy kit, a product offered by some firewall vendors, firewall applications can provide specific support for database network traffic. If the proxy kit is implemented in the firewall, then the following processing takes place:</p>
<ul>
<li>
<p>The Net Proxy (a component of the Oracle Net Firewall Proxy kit) determines where to route its traffic.</p>
</li>
<li>
<p>The database listener requires access to a <a href="asogls.htm#i996778"><span class="xrefglossterm">certificate</span></a> in order to participate in the SSL handshake. The listener inspects the SSL packet and identifies the target database, returning the port on which the target database listens to the client. This port must be designated as an SSL port.</p>
</li>
<li>
<p>The client communicates on this server-designated port in all subsequent connections.</p>
</li>
</ul>
</div>
<!-- class="sect1" -->
<a id="i1006461"></a>
<div id="ASOAG9680" class="sect1">
<h2 class="sect1"><span class="secnum">13.5</span> Secure Sockets Layer Usage Issues</h2>
<p>Consider the following issues when using SSL:</p>
<ul>
<li>
<p>SSL use enables secure communication with other Oracle products, such as Oracle Internet Directory.</p>
</li>
<li>
<p>Because SSL supports both authentication and encryption, the client/server connection is somewhat slower than the standard Oracle Net TCP/IP transport (using native encryption).</p>
</li>
<li>
<p>Each SSL authentication mode requires configuration settings.</p>
</li>
<li>
<p>Multi-threaded clients currently cannot use SSL.</p>
</li>
</ul>
<div class="infobox-note">
<p class="notep1">Note:</p>
If you configure SSL encryption, you must disable non-SSL encryption. To disable such encryption, refer to <a href="asoauth.htm#i1006130">"Disabling Oracle Advanced Security Authentication"</a>.</div>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="#i1007316">"Configuring Your System to Use Hardware Security Modules"</a> for information about improving SSL performance with hardware accelerators</p>
</li>
<li>
<p><a href="#i1006505">"Enabling Secure Sockets Layer"</a></p>
</li>
</ul>
</div>
</div>
<!-- class="sect1" -->
<a id="i1006505"></a>
<div id="ASOAG074" class="sect1">
<h2 class="sect1"><span class="secnum">13.6</span> Enabling Secure Sockets Layer</h2>
<p><a id="sthref552"></a><a id="sthref553"></a>This section <a id="sthref554"></a>contains:</p>
<ul>
<li>
<p><a href="#i1006526">Step 1: Install Oracle Advanced Security and Related Products</a></p>
</li>
<li>
<p><a href="#i1023222">Step 2: Configure Secure Sockets Layer on the Server</a></p>
</li>
<li>
<p><a href="#CIHCBIEG">Step 3: Configure Secure Sockets Layer on the Client</a></p>
</li>
<li>
<p><a href="#i1007310">Step 4: Log on to the Database Instance</a></p>
</li>
</ul>
<a id="i1006526"></a>
<div id="ASOAG09461" class="sect2">
<h3 class="sect2"><span class="secnum">13.6.1</span> Step 1: Install Oracle Advanced Security and Related Products</h3>
<p>Install Oracle Advanced Security on both the client and server. When you do this, the Oracle Universal Installer automatically installs SSL libraries and Oracle Wallet Manager on your computer.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
Oracle Database platform-specific installation documentation</div>
</div>
<!-- class="sect2" -->
<a id="i1023222"></a>
<div id="ASOAG09361" class="sect2">
<h3 class="sect2"><span class="secnum">13.6.2</span> Step 2: Configure Secure Sockets Layer on the Server</h3>
<p>During installation, Oracle sets defaults on both the Oracle database server and on the Oracle client for all SSL parameters except the location of the Oracle wallet. To configure <a id="sthref555"></a><a id="sthref556"></a>SSL on the server, perform these steps:</p>
<ul>
<li>
<p><a href="#i1023265">Step 2A: Confirm Wallet Creation on the Server</a></p>
</li>
<li>
<p><a href="#i1023297">Step 2B: Specify the Database Wallet Location on the Server</a></p>
</li>
<li>
<p><a href="#i1023369">Step 2C: Set the Secure Sockets Layer Cipher Suites on the Server (Optional)</a></p>
</li>
<li>
<p><a href="#i1023429">Step 2D: Set the Required SSL Version on the Server (Optional)</a></p>
</li>
<li>
<p><a href="#i1023451">Step 2E: Set SSL Client Authentication on the Server (Optional)</a></p>
</li>
<li>
<p><a href="#i1023482">Step 2F: Set SSL as an Authentication Service on the Server (Optional)</a></p>
</li>
<li>
<p><a href="#i1023496">Step 2G: Create a Listening Endpoint that Uses TCP/IP with SSL on the Server</a></p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="asoappb.htm#g639141">Appendix B, "Authentication Parameters"</a> for the dynamic parameter names</div>
</li>
</ul>
<a id="i1023265"></a>
<div id="ASOAG9682" class="sect3">
<h4 class="sect3"><span class="secnum">13.6.2.1</span> Step 2A: Confirm Wallet Creation on the Server</h4>
<p>Before proceeding to the next step, you must confirm that a wallet has been created. To confirm that your wallet is ready, open it by using Oracle Wallet Manager. The wallet should contain a certificate with a status of <code dir="ltr">Ready</code> and auto login turned on. If auto login is not on, then select it from the Wallet menu and save the wallet again. This turns auto login on.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="asowalet.htm#i1006711">"Opening an Existing Wallet"</a></p>
</li>
<li>
<p><a href="asowalet.htm#BABGGBIG">"Creating a New Wallet"</a></p>
</li>
<li>
<p><a href="asowalet.htm#i1006873">"Using Auto Login"</a></p>
</li>
</ul>
</div>
</div>
<!-- class="sect3" -->
<a id="i1023297"></a>
<div id="ASOAG9683" class="sect3">
<h4 class="sect3"><span class="secnum">13.6.2.2</span> Step 2B: Specify the Database Wallet Location on the Server</h4>
<ol>
<li>
<p>Start Oracle Net Manager.</p>
<ul>
<li>
<p>(UNIX) From <code dir="ltr"><span class="codeinlineitalic">$ORACLE_HOME</span></code><code dir="ltr">/bin</code>, enter the following command at the command line:</p>
<pre dir="ltr">
netmgr
</pre></li>
<li>
<p>(Windows) Select <span class="bold">Start</span>, <span class="bold">Programs</span>, <span class="bold">Oracle - HOME_NAME</span>, <span class="bold">Configuration and Migration Tools</span>, then <span class="bold">Net Manager</span>.</p>
</li>
</ul>
</li>
<li>
<p>Expand <span class="bold">Oracle Net Configuration</span>, and from <span class="bold">Local</span>, select <span class="bold">Profile</span>.</p>
</li>
<li>
<p>From the <span class="bold">Naming</span> list, select <span class="bold">Network Security</span>.</p>
<p>The Network Security tabbed window appears.</p>
</li>
<li>
<p>Click the <span class="bold">SSL</span> tab and select <span class="bold">Configure SSL for: Server</span>.</p>
</li>
<li>
<p>In the <span class="bold">Wallet Directory</span> box, enter the directory in which the Oracle wallet is located or click <span class="bold">Browse</span> to find it by searching the file system.</p>
<p>Note that if you are configuring the database-to-directory SSL connection for Enterprise User Security, then Database Configuration Assistant automatically creates a database wallet while registering the database with the directory. You must use that wallet to store the database PKI credentials for SSL-authenticated Enterprise User Security.</p>
<p><span class="bold">Important:</span></p>
<ul>
<li>
<p>Use Oracle Wallet Manager to create the wallet. Refer to <a href="asowalet.htm#BABGGBIG">"Creating a New Wallet"</a>.</p>
</li>
<li>
<p>Use Oracle Net Manager to set the wallet location in the <code dir="ltr">sqlnet.ora</code> file.</p>
</li>
</ul>
<p>Ensure that you enter the same <a id="sthref557"></a>wallet location when you create it and when you set the location in the <code dir="ltr">sqlnet.ora</code> file.</p>
</li>
<li>
<p>From the <span class="bold">File</span> menu, select <span class="bold">Save Network Configuration</span>.</p>
<p>The <code dir="ltr">sqlnet.ora</code> and <code dir="ltr">listener.ora</code> files are updated with the following entries:</p>
<pre dir="ltr">
<a id="sthref558"></a><a id="sthref559"></a>wallet_location = 
 (SOURCE=
  (METHOD=File)
  (METHOD_DATA=
   (DIRECTORY=wallet_location)))
</pre></li>
</ol>
<div class="infobox-note">
<p class="notep1">Note:</p>
The listener uses the wallet defined in the <code dir="ltr">listener.ora</code> file. It can use any database wallet. When SSL is configured for a server using Net Manager, the wallet location is entered into the <code dir="ltr">listener.ora</code> and the <code dir="ltr">sqlnet.ora</code> files. The <code dir="ltr">listener.ora</code> file is not relevant to the Oracle client.
<p>To change the listener wallet location so that the listener has its own wallet, you can edit <code dir="ltr">listener.ora</code> to enter the new location.</p>
</div>
</div>
<!-- class="sect3" -->
<a id="i1023369"></a>
<div id="ASOAG9684" class="sect3">
<h4 class="sect3"><span class="secnum">13.6.2.3</span> Step 2C: Set the Secure Sockets Layer Cipher Suites on the Server (Optional)</h4>
<p>This section contains:</p>
<ul>
<li>
<p><a href="#BABIHDCD">About the Secure Sockets Layer Cipher Suites</a></p>
</li>
<li>
<p><a href="#BABDJHIF">Supported Secure Sockets Layer Cipher Suites</a></p>
</li>
<li>
<p><a href="#BABIGJAD">Specifying Secure Sockets Cipher Suites for the Database Server</a></p>
</li>
</ul>
<p class="subhead2"><a id="BABIHDCD"></a><a id="ASOAG10565"></a>About the Secure Sockets Layer Cipher Suites</p>
<p>A cipher suite is a set of authentication, encryption, and data integrity algorithms used for exchanging messages between network entities. During an SSL handshake, two entities negotiate to see which cipher suite they will use when transmitting messages back and forth.</p>
<p>When you install Oracle Advanced Security, the SSL cipher suites listed in <a href="#CIHFADDD">Table 13-1</a> are set for you by default and negotiated in the order they are listed. You can override the default order by setting the <code dir="ltr">SSL_CIPHER_SUITES</code> parameter. For example, if you use Oracle Net Manager to add the cipher suite <code dir="ltr">SSL_RSA_WITH_3DES_EDE_CBC_SHA</code>, all other cipher suites in the default setting are ignored.</p>
<p>You can prioritize the cipher suites. When the client negotiates with servers regarding which cipher suite to use, it follows the prioritization you set. When you prioritize the cipher suites, consider the following:</p>
<ul>
<li>
<p><span class="bold">Compatibility.</span> Server and client must be configured to use compatible cipher suites for a successful connection.</p>
</li>
<li>
<p><span class="bold">Cipher priority and strength.</span> Prioritize cipher suites starting with the strongest and moving to the weakest to ensure the highest level of security possible.</p>
</li>
<li>
<p><span class="bold">The level of security you want to use.</span> For example, triple-DES encryption is stronger than DES</p>
</li>
<li>
<p>The impact on performance. For example, triple-DES encryption is slower than DES.</p>
<div class="infobox-note">
<p class="notep1">Notes:</p>
Regarding <a id="sthref560"></a>Diffie-Hellman <a id="sthref561"></a>anonymous authentication:
<ol>
<li>
<p>If you set the server to employ this cipher suite, then you must also set the same cipher suite on the client. Otherwise, the connection fails.</p>
</li>
<li>
<p>If you use a cipher suite employing Diffie-Hellman anonymous, then you must set the <code dir="ltr">SSL_CLIENT_AUTHENTICATION</code> parameter to <code dir="ltr">FALSE</code>. For more information, refer to <a href="#i1023451">"Step 2E: Set SSL Client Authentication on the Server (Optional)"</a>.</p>
</li>
</ol>
</div>
</li>
</ul>
<p class="subhead2"><a id="BABDJHIF"></a><a id="ASOAG10566"></a>Supported Secure Sockets Layer Cipher Suites</p>
<p><a href="#CIHFADDD">Table 13-1</a> lists the SSL cipher suites supported in the current release of Oracle Advanced Security. These cipher suites are set by default when you install Oracle Advanced Security. The following table also lists the authentication, encryption, and data integrity types each cipher suite uses.</p>
<div id="ASOAG10208" class="tblformalwide">
<p class="titleintable"><a id="sthref562"></a><a id="CIHFADDD"></a>Table 13-1 SSL Cipher Suites</p>
<table class="cellalignment2234" title="SSL Cipher Suites" summary="a list of the available cipher suites and their respective authentication, encryption, and integrity algorithms" dir="ltr">
<thead>
<tr class="cellalignment2228">
<th class="cellalignment2235" id="r1c1-t22">Cipher Suites</th>
<th class="cellalignment2235" id="r1c2-t22">Authentication</th>
<th class="cellalignment2235" id="r1c3-t22">Encryption</th>
<th class="cellalignment2235" id="r1c4-t22">Data Integrity</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2228">
<td class="cellalignment2236" id="r2c1-t22" headers="r1c1-t22">
<p>SSL_RSA_WITH_3DES_EDE_CBC_SHA</p>
</td>
<td class="cellalignment2236" headers="r2c1-t22 r1c2-t22">
<p>RSA</p>
</td>
<td class="cellalignment2236" headers="r2c1-t22 r1c3-t22">
<p>3DES EDE CBC</p>
</td>
<td class="cellalignment2236" headers="r2c1-t22 r1c4-t22">
<p>SHA-1</p>
</td>
</tr>
<tr class="cellalignment2228">
<td class="cellalignment2236" id="r3c1-t22" headers="r1c1-t22">
<p>SSL_RSA_WITH_AES_128_CBC_SHA<a id="CIHBBGFH" href="#CIHBBGFH" onclick='footdisplay(1,"AES ciphers work with Transport Layer Security (TLS 1.0) only")'><sup class="tablefootnote">Foot&nbsp;1&nbsp;</sup></a></p>
</td>
<td class="cellalignment2236" headers="r3c1-t22 r1c2-t22">
<p>RSA</p>
</td>
<td class="cellalignment2236" headers="r3c1-t22 r1c3-t22">
<p>AES 128 CBC</p>
</td>
<td class="cellalignment2236" headers="r3c1-t22 r1c4-t22">
<p>SHA-1</p>
</td>
</tr>
<tr class="cellalignment2228">
<td class="cellalignment2236" id="r4c1-t22" headers="r1c1-t22">
<p>SSL_RSA_WITH_AES_256_CBC_SHA<a id="sthref563" href="#sthref563" onclick='footdisplay(1,"AES ciphers work with Transport Layer Security (TLS 1.0) only")'><sup class="footnotenumber">Footref&nbsp;1</sup></a></p>
</td>
<td class="cellalignment2236" headers="r4c1-t22 r1c2-t22">
<p>RSA</p>
</td>
<td class="cellalignment2236" headers="r4c1-t22 r1c3-t22">
<p>AES 256 CBC</p>
</td>
<td class="cellalignment2236" headers="r4c1-t22 r1c4-t22">
<p>SHA-1</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformalwide" -->
<p class="tablefootnote"><sup class="tablefootnote">Footnote&nbsp;1&nbsp;</sup>AES ciphers work with Transport Layer Security (TLS 1.0) only</p>
<p class="subhead2"><a id="BABIGJAD"></a><a id="ASOAG10567"></a>Specifying Secure Sockets Cipher Suites for the Database Server</p>
<ol>
<li>
<p>Start Oracle Net Manager.<a id="sthref564"></a></p>
<ul>
<li>
<p>(UNIX) From <code dir="ltr"><span class="codeinlineitalic">$ORACLE_HOME</span></code><code dir="ltr">/bin</code>, enter the following command at the command line:</p>
<pre dir="ltr">
netmgr
</pre></li>
<li>
<p>(Windows) Select <span class="bold">Start</span>, <span class="bold">Programs</span>, <span class="bold">Oracle - HOME_NAME</span>, <span class="bold">Configuration and Migration Tools</span>, then <span class="bold">Net Manager</span>.</p>
</li>
</ul>
</li>
<li>
<p>Expand <span class="bold">Oracle Net Configuration</span>, and from <span class="bold">Local</span>, select <span class="bold">Profile</span>.</p>
</li>
<li>
<p>From the <span class="bold">Naming</span> list, select <span class="bold">Network Security</span>.</p>
<p>The Network Security tabbed window appears.</p>
</li>
<li>
<p>Select the <span class="bold">SSL</span> tab and then select <span class="bold">Configure SSL for: Server</span>.</p>
</li>
<li>
<p>In the Cipher Suite Configuration area, click <span class="bold">Add</span>.</p>
<p>A dialog box displays available cipher suites. To see the US domestic cipher suites, click the <span class="bold">Show US Domestic Cipher Suits</span> check box.</p>
</li>
<li>
<p>Select a suite and click <span class="bold">OK</span>.</p>
<p>The <span class="bold">Cipher Suite Configuration</span> list is updated:</p>
<img width="386" height="530" src="img/ssl0004.gif" alt="Description of ssl0004.gif follows" /><br />
<a id="sthref565" href="img_text/ssl0004.htm">Description of the illustration ''ssl0004.gif''</a><br />
<br /></li>
<li>
<p>Use the up and down arrows to prioritize the cipher suites.</p>
</li>
<li>
<p>From the <span class="bold">File</span> menu, select <span class="bold">Save Network Configuration</span>.</p>
<p>The <code dir="ltr">sqlnet.ora</code> file is updated with the following entry:</p>
<pre dir="ltr">
SSL_CIPHER_SUITES= <span class="italic">(SSL_cipher_suite1 [,SSL_cipher_suite2])</span>
</pre></li>
</ol>
</div>
<!-- class="sect3" -->
<a id="i1023429"></a>
<div id="ASOAG9685" class="sect3">
<h4 class="sect3"><span class="secnum">13.6.2.4</span> Step 2D: Set the Required SSL Version on the Server (Optional)</h4>
<p>You can set the <code dir="ltr">SSL_VERSION</code> parameter in the <code dir="ltr">sqlnet.ora</code> or the <code dir="ltr">listener.ora</code> file. This parameter defines the version of SSL that must run on the systems with which the server communicates. You can require these systems to use any valid version. The default setting for this parameter in <code dir="ltr">sqlnet.ora</code> is <code dir="ltr">undetermined</code>, which is set by selecting <span class="bold">Any</span> from the list in the SSL tab of the Oracle Advanced Security window.</p>
<p>To set the SSL version for the server:</p>
<ol>
<li>
<p>In the Require SSL Version list, the default is <span class="bold">Any</span>. Accept this default or select the SSL version you want to use.</p>
</li>
<li>
<p>Select <span class="bold">File</span>, <span class="bold">Save Network Configuration</span>.</p>
<p>If you chose <span class="bold">Any</span>, then the <code dir="ltr">sqlnet.ora</code> file is updated with the following entry:</p>
<pre dir="ltr">
<a id="sthref566"></a><a id="sthref567"></a>SSL_VERSION=UNDETERMINED
</pre>
<div class="infobox-note">
<p class="notep1">Note:</p>
SSL 2.0 is not supported on the server side.</div>
</li>
</ol>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink NETRF235" href="../../network.112/e10835/sqlnet.htm#NETRF235"><span class="italic">Oracle Database Net Services Reference</span></a> for a full list of <code dir="ltr">SSL_VERSION</code> values</div>
</div>
<!-- class="sect3" -->
<a id="i1023451"></a>
<div id="ASOAG9686" class="sect3">
<h4 class="sect3"><span class="secnum">13.6.2.5</span> Step 2E: Set SSL <a id="sthref568"></a><a id="sthref569"></a>Client Authentication on the Server (Optional)</h4>
<p>The <code dir="ltr">SSL_CLIENT_AUTHENTICATION</code> parameter in the <code dir="ltr">sqlnet.ora</code> file controls whether the client is authenticated using SSL. The default value is <code dir="ltr">TRUE</code>.</p>
<p>You must set this parameter to <code dir="ltr">FALSE</code> if you are using a cipher suite that contains Diffie-Hellman anonymous authentication (<code dir="ltr">DH_anon</code>). Also, you can set this parameter to <code dir="ltr">FALSE</code> for the client to authenticate itself to the server by using any of the non-SSL authentication methods supported by Oracle Advanced Security, such as Kerberos or RADIUS.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
There is a known bug in which an OCI client requires a wallet even when using a cipher suite with DH_ANON, which does not authenticate the client.</div>
<p>To set <code dir="ltr">SSL_CLIENT_AUTHENTICATION</code> to <code dir="ltr">FALSE</code> on the server:</p>
<ol>
<li>
<p>In the SSL page Oracle Net Manager, deselect <span class="bold">Require Client Authentication</span>.</p>
<img width="388" height="529" src="img/ssl0005.gif" alt="Description of ssl0005.gif follows" /><br />
<a id="sthref570" href="img_text/ssl0005.htm">Description of the illustration ''ssl0005.gif''</a><br />
<br /></li>
<li>
<p>From the <span class="bold">File</span> menu, select <span class="bold">Save Network Configuration</span>.</p>
<p>The <code dir="ltr">sqlnet.ora</code> file is updated with the following entry:</p>
<pre dir="ltr">
<a id="sthref571"></a><a id="sthref572"></a>SSL_CLIENT_AUTHENTICATION=FALSE
</pre></li>
</ol>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink NETRF233" href="../../network.112/e10835/sqlnet.htm#NETRF233"><span class="italic">Oracle Database Net Services Reference</span></a> for a full list of <code dir="ltr">SSL_CLIENT_AUTHENTICATION</code> values</div>
</div>
<!-- class="sect3" -->
<a id="i1023482"></a>
<div id="ASOAG9687" class="sect3">
<h4 class="sect3"><span class="secnum">13.6.2.6</span> Step 2F: Set SSL as an Authentication Service on the Server (Optional)</h4>
<p>The <a id="sthref573"></a><a id="sthref574"></a><code dir="ltr">SQLNET.AUTHENTICATION_SERVICES</code> parameter in the <code dir="ltr">sqlnet.ora</code> file sets the SSL authentication service.</p>
<p>Set this parameter if you want to use SSL authentication in conjunction with another authentication method supported by Oracle Advanced Security. For example, use this parameter if you want the server to authenticate itself to the client by using SSL and the client to authenticate itself to the server by using Kerberos.</p>
<p>To set the <code dir="ltr">SQLNET.AUTHENTICATION_SERVICES</code> parameter on the server, add TCP/IP with SSL (TCPS) to this parameter in the <code dir="ltr">sqlnet.ora</code> file by using a text editor. For example, if you want to use SSL authentication in conjunction with RADIUS authentication, set this parameter as follows:</p>
<pre dir="ltr">
 <a id="sthref575"></a><a id="sthref576"></a>SQLNET.AUTHENTICATION_SERVICES = (TCPS<span class="italic">, radius</span>)
</pre>
<p>If you do not want to use SSL authentication in conjunction with another authentication method, then do not set this parameter.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink NETRF198" href="http://www.oracle.com/pls/topic/lookup?ctx=db112&amp;id=NETRF198"><span class="italic">Oracle Database Net Services Reference</span></a> for a full list of AUTHENTICATION_SERVICES values</div>
</div>
<!-- class="sect3" -->
<a id="i1023496"></a>
<div id="ASOAG9688" class="sect3">
<h4 class="sect3"><span class="secnum">13.6.2.7</span> Step 2G: Create a Listening Endpoint that Uses TCP/IP with SSL on the Server</h4>
<p>Configure<a id="sthref577"></a> the listener with a TCP/IP with SSL listening endpoint in the <code dir="ltr">listener.ora</code> file. Oracle recommends using port number 2484 for typical Oracle Net clients.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a class="olink NETAG" href="../e41945/toc.htm"><span class="italic">Oracle Database Net Services Administrator's Guide</span></a> for detailed information about configuring the <code dir="ltr">listener.ora</code> file</p>
</li>
<li>
<p><a href="#i1022705">"Certificate Validation with Certificate Revocation Lists"</a> for information about configuring your system to validate certificates with certificate revocation lists</p>
</li>
</ul>
</div>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="CIHCBIEG"></a>
<div id="ASOAG9689" class="sect2">
<h3 class="sect2"><span class="secnum">13.6.3</span> Step 3: Configure Secure Sockets Layer on the Client</h3>
<p>To configure <a id="sthref578"></a><a id="sthref579"></a>SSL on the client:</p>
<ul>
<li>
<p><a href="#CIHBIGHH">Step 3A: Confirm Client Wallet Creation</a></p>
</li>
<li>
<p><a href="#i1006611">Step 3B: Configure the Server DNs and Use TCP/IP with SSL on the Client</a></p>
</li>
<li>
<p><a href="#i1006723">Step 3C: Specify Required Client SSL Configuration (Wallet Location)</a></p>
</li>
<li>
<p><a href="#i1006798">Step 3D: Set the Client Secure Sockets Layer Cipher Suites (Optional)</a></p>
</li>
<li>
<p><a href="#i1006974">Step 3E: Set the Required SSL Version on the Client (Optional)</a></p>
</li>
<li>
<p><a href="#i1007000">Step 3F: Set SSL as an Authentication Service on the Client (Optional)</a></p>
<p><a href="#BABGEDGD">Step 3G: Specify the Certificate to Use for Authentication on the Client (Optional)</a></p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="asoappb.htm#g639141">Appendix B, "Authentication Parameters"</a> for the dynamic parameter names</div>
</li>
</ul>
<a id="CIHBIGHH"></a>
<div id="ASOAG9690" class="sect3">
<h4 class="sect3"><span class="secnum">13.6.3.1</span> Step 3A: Confirm Client Wallet Creation</h4>
<p>Before proceeding to the next step, you must confirm that a wallet has been created on the client and that the client has a valid certificate.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
Oracle recommends that you use Oracle Wallet Manager to remove the <a href="asogls.htm#i997487"><span class="xrefglossterm">trusted certificate</span></a> in your Oracle wallet associated with each <a href="asogls.htm#i996783"><span class="xrefglossterm">certificate authority</span></a> that you do not use.</div>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="asowalet.htm#i1009041">Chapter 14, "Using Oracle Wallet Manager"</a>, for general information about wallets</p>
</li>
<li>
<p><a href="asowalet.htm#i1006711">"Opening an Existing Wallet"</a>, for information about opening an existing wallet</p>
</li>
<li>
<p><a href="asowalet.htm#BABGGBIG">"Creating a New Wallet"</a>, for information about creating a new wallet</p>
</li>
</ul>
</div>
</div>
<!-- class="sect3" -->
<a id="i1006611"></a>
<div id="ASOAG9691" class="sect3">
<h4 class="sect3"><span class="secnum">13.6.3.2</span> Step 3B: Configure the Server DNs and Use TCP/IP with SSL on the Client</h4>
<p>This section contains:</p>
<ul>
<li>
<p><a href="#BABFCBAJ">About Configuring the Server DNS and Using TCP/IP with SSL on the Client</a></p>
</li>
<li>
<p><a href="#BABBDIBC">Configuring the Server DNS and Using TCP/IP with SSL on the Client</a></p>
</li>
</ul>
<p class="subhead2"><a id="BABFCBAJ"></a><a id="ASOAG10568"></a>About Configuring the Server DNS and Using TCP/IP with SSL on the Client</p>
<p>Next, you are ready to configure the Oracle Net Service name to include the server DNs and to use TCP/IP with SSL on the client. You must specify the server's <a href="asogls.htm#i996929"><span class="xrefglossterm">distinguished name (DN)</span></a> and <code dir="ltr">TCPS</code> as the protocol in the client network configuration files to enable server DN matching and TCP/IP with SSL connections. Server DN matching prevents the database server from faking its identity to the client during connections by matching the server's global database name against the DN from the server certificate.</p>
<p>You must manually edit the client network configuration files, <code dir="ltr">tnsnames.ora</code> and <code dir="ltr">listener.ora</code>, to specify the server's DN and the TCP/IP with SSL protocol. The <code dir="ltr">tnsnames.ora</code> file can be located on the client or in the LDAP directory. If it is located on the client, then it typically resides in the same directory as the <code dir="ltr">listener.ora</code> file. Depending on the operating system, these files reside in the following directory locations:</p>
<ul>
<li>
<p>(UNIX) <code dir="ltr"><span class="codeinlineitalic">$ORACLE_HOME</span></code><code dir="ltr">/network/admin/</code></p>
</li>
<li>
<p>(Windows) <code dir="ltr"><span class="codeinlineitalic">ORACLE_BASE</span></code><code dir="ltr">\</code><code dir="ltr"><span class="codeinlineitalic">ORACLE_HOME</span></code><code dir="ltr">\network\admin\</code></p>
</li>
</ul>
<p class="subhead2"><a id="BABBDIBC"></a><a id="ASOAG10569"></a>Configuring the Server DNS and Using TCP/IP with SSL on the Client</p>
<ol>
<li>
<p>In the client <code dir="ltr">tnsnames.ora</code> file, add the <code dir="ltr">SSL_SERVER_CERT_DN</code> parameter and specify the database server's DN as follows:</p>
<pre dir="ltr">
(SECURITY=
(SSL_SERVER_CERT_DN="cn=finance,cn=OracleContext,c=us,o=acme"))
</pre>
<p>The client uses this information to obtain the list of DNs it expects for each of the servers, enforcing the server's DN to match its service name. <a href="#CIHGCGBI">Example 13-1</a> shows an entry for the <code dir="ltr">Finance</code> database in the <code dir="ltr">tnsnames.ora</code> file.</p>
<p>Alternatively, the administrator can ensure that the common name (CN) portion of the server's DN matches the service name.</p>
</li>
<li>
<p>In the client <code dir="ltr">tnsnames.ora</code> file, enter <code dir="ltr">tcps</code> as the PROTOCOL in the <code dir="ltr">ADDRESS</code> parameter. This specifies that the client will use TCP/IP with SSL to connect to the database that is identified in the <code dir="ltr">SERVICE_NAME</code> parameter. <a href="#CIHGCGBI">Example 13-1</a> also shows an entry that specifies TCP/IP with SSL as the connecting protocol in the <code dir="ltr">tnsnames.ora</code> file.</p>
</li>
<li>
<p>In the <code dir="ltr">listener.ora</code> file, enter <code dir="ltr">tcps</code> as the <code dir="ltr">PROTOCOL</code> in the <code dir="ltr">ADDRESS</code> parameter. <a href="#i1009320">Example 13-2</a> shows an entry that specifies TCP/IP with SSL as the protocol.</p>
</li>
</ol>
<div id="ASOAG10212" class="example">
<p class="titleinexample"><a id="CIHGCGBI"></a>Example 13-1 Sample tnsnames.ora File with Server Certificate DN and TCP/IP with SSL Specified</p>
<pre dir="ltr">
finance=
(DESCRIPTION=
</pre>
<pre dir="ltr">
(ADDRESS_LIST=
</pre>
<pre dir="ltr">
(ADDRESS= (<span class="bold">PROTOCOL = tcps</span>) (HOST = finance_server) (PORT = <span class="variable">1575</span>)))
</pre>
<pre dir="ltr">
(CONNECT_DATA=
</pre>
<pre dir="ltr">
(SERVICE_NAME= Finance.us.example.com))
</pre>
<pre dir="ltr">
(SECURITY=
</pre>
<pre dir="ltr">
(<span class="bold">SSL_SERVER_CERT_DN="cn=</span><span class="variable">finance,cn=OracleContext,c=us,o=acme</span><span class="bold">"</span>))
</pre>
<pre dir="ltr">
</pre></div>
<!-- class="example" -->
<div id="ASOAG10213" class="example">
<p class="titleinexample"><a id="i1009320"></a>Example 13-2 Sample listener.ora File with TCP/IP with SSL Specified as the Protocol</p>
<pre dir="ltr">
LISTENER=
</pre>
<pre dir="ltr">
(DESCRIPTION_LIST=
</pre>
<pre dir="ltr">
(DESCRIPTION=
</pre>
<pre dir="ltr">
(ADDRESS= (<span class="bold">PROTOCOL = tcps</span>) (HOST = finance_server) (PORT = <span class="variable">1575</span>))))
</pre>
<pre dir="ltr">
</pre></div>
<!-- class="example" --></div>
<!-- class="sect3" -->
<a id="i1006723"></a>
<div id="ASOAG9692" class="sect3"><a id="CBHCEDEG"></a>
<h4 class="sect3"><span class="secnum">13.6.3.3</span> Step 3C: Specify Required Client SSL Configuration (Wallet Location)</h4>
<ol>
<li>
<p>Start Oracle Net Manager.</p>
<ul>
<li>
<p>(UNIX) From <code dir="ltr"><span class="codeinlineitalic">$ORACLE_HOME</span></code><code dir="ltr">/bin</code>, enter the following command at the command line:</p>
<pre dir="ltr">
netmgr
</pre></li>
<li>
<p>(Windows) Select <span class="bold">Start</span>, <span class="bold">Programs</span>, <span class="bold">Oracle - HOME_NAME</span>, <span class="bold">Configuration and Migration Tools</span>, then <span class="bold">Net Manager</span>.</p>
</li>
</ul>
</li>
<li>
<p>Expand <span class="bold">Oracle Net Configuration</span>, and from <span class="bold">Local</span>, select <span class="bold">Profile</span>.</p>
</li>
<li>
<p>From the <span class="bold">Naming</span> list, select <span class="bold">Network Security</span>.</p>
<p>The Network Security tabbed window appears.</p>
</li>
<li>
<p>Select the <span class="bold">SSL</span> tab.</p>
</li>
<li>
<p>Select <span class="bold">Configure SSL for: Client</span>.</p>
<img width="360" height="484" src="img/ssl0001.gif" alt="Description of ssl0001.gif follows" /><br />
<a id="sthref580" href="img_text/ssl0001.htm">Description of the illustration ''ssl0001.gif''</a><br />
<br /></li>
<li id="i1006745">
<p>In the Wallet Directory box, enter the directory in which the Oracle wallet is located, or click <span class="bold">Browse</span> to find it by searching the file system.</p>
</li>
<li>
<p>From the Match server X.509 name list, select one of the following options:</p>
<ul>
<li>
<p><span class="bold">Yes:</span> Requires that the server's <a href="asogls.htm#i996929"><span class="xrefglossterm">distinguished name (DN)</span></a> match its service name. SSL ensures that the certificate is from the server and connections succeed only if there is a match.</p>
<p>This check can be made only when RSA ciphers are selected, which is the default setting.</p>
</li>
<li>
<p><span class="bold">No (default):</span> SSL checks for a match between the DN and the service name, but does not enforce it. Connections succeed regardless of the outcome but an error is logged if the match fails.</p>
</li>
<li>
<p><span class="bold">Let Client Decide:</span> Enables the default.</p>
<p>The following alert is displayed when you select <span class="bold">No</span>:</p>
<pre dir="ltr">
Security Alert
Not enforcing the server X.509 name match allows a server to potentially fake its identity. Oracle recommends selecting YES for this option so that connections are refused when there is a mismatch.
</pre></li>
</ul>
</li>
<li>
<p>From the <span class="bold">File</span> menu, select <span class="bold">Save Network Configuration</span>.</p>
<p>The <code dir="ltr">sqlnet.ora</code> file on the client is updated with the following entries:</p>
<pre dir="ltr">
<a id="sthref581"></a><a id="sthref582"></a>SSL_CLIENT_AUTHENTICATION =TRUE
<a id="sthref583"></a><a id="sthref584"></a>wallet_location = 
 (SOURCE=
  (METHOD=File)
  (METHOD_DATA=
   (DIRECTORY=wallet_location)))

SSL_SERVER_DN_MATCH=(ON/OFF)
</pre></li>
</ol>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<p>For information about the server match parameters:</p>
<ul>
<li>
<p><a href="asoappb.htm#i635129">"SSL X.509 Server Match Parameters"</a></p>
</li>
</ul>
<p>For information about using Oracle Net Manager to configure TCP/IP with SSL:</p>
<ul>
<li>
<p><a class="olink NETAG" href="../e41945/toc.htm"><span class="italic">Oracle Database Net Services Administrator's Guide</span></a></p>
</li>
<li>
<p><a class="olink NETRF004" href="../../network.112/e10835/protocoladd.htm#NETRF004"><span class="italic">Oracle Database Net Services Reference</span></a></p>
</li>
</ul>
</div>
</div>
<!-- class="sect3" -->
<a id="i1006798"></a>
<div id="ASOAG9693" class="sect3">
<h4 class="sect3"><span class="secnum">13.6.3.4</span> Step 3D: Set the Client Secure Sockets Layer Cipher Suites (Optional)</h4>
<p>This section contains:</p>
<ul>
<li>
<p><a href="#BABEJAGE">About Setting the Client Secure Sockets Layer Cipher Suites</a></p>
</li>
<li>
<p><a href="#BABCBHJE">Setting the Client Secure Sockets Layer Cipher Suites</a></p>
</li>
</ul>
<p class="subhead2"><a id="BABEJAGE"></a><a id="ASOAG10570"></a>About Setting the Client Secure Sockets Layer Cipher Suites</p>
<p>A cipher suite is a set of authentication, encryption, and data integrity algorithms used for exchanging messages between network entities. During an SSL handshake, two entities negotiate to see which cipher suite they will use when transmitting messages back and forth.</p>
<p>When you install Oracle Advanced Security, the SSL cipher suites listed in <a href="#CIHFADDD">Table 13-1</a> are set for you by default. This table lists them in the order they are tried when two entities are negotiating a connection. You can override the default by setting the <code dir="ltr">SSL_CIPHER_SUITES</code> parameter. For example, if you use Oracle Net Manager to add the cipher suite <code dir="ltr">SSL_RSA_WITH_3DES_EDE_CBC_SHA</code>, all other cipher suites in the default setting are ignored.</p>
<p>You can prioritize the cipher suites. When the client negotiates with servers regarding which cipher suite to use, it follows the prioritization you set. When you prioritize the cipher suites, consider the following:</p>
<ul>
<li>
<p>The level of security you want to use. For example, triple-DES encryption is stronger than DES.</p>
</li>
<li>
<p>The impact on performance. For example, triple-DES encryption is slower than DES. Refer to <a href="#i1007316">"Configuring Your System to Use Hardware Security Modules"</a> for information about using SSL hardware accelerators with Oracle Advanced Security.</p>
</li>
<li>
<p>Administrative requirements. The cipher suites selected for a client must be compatible with those required by the server. For example, in the case of an Oracle Call Interface (OCI) user, the server requires the client to authenticate itself. You cannot, in this case, use a cipher suite employing Diffie-Hellman anonymous authentication, which disallows the exchange of certificates.</p>
</li>
</ul>
<p>You typically prioritize cipher suites starting with the strongest and moving to the weakest.</p>
<p><a href="#CIHFADDD">Table 13-1</a> lists the SSL cipher suites that are supported in the current release of Oracle Advanced Security. These cipher suites are set by default when you install Oracle Advanced Security. The table also lists the authentication, encryption, and data integrity types each cipher suite uses.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
If the <code dir="ltr">SSL_CLIENT_AUTHENTICATION</code> parameter is set to <code dir="ltr">true</code> in the <code dir="ltr">sqlnet.ora</code> file, then disable all cipher suites that use Diffie-Hellman anonymous authentication. Otherwise, the connection fails.</div>
<p class="subhead2"><a id="BABCBHJE"></a><a id="ASOAG10571"></a>Setting the Client Secure Sockets Layer Cipher Suites</p>
<ol>
<li>
<p>Start Oracle Net Manager.</p>
<ul>
<li>
<p>(UNIX) From <code dir="ltr"><span class="codeinlineitalic">$ORACLE_HOME</span></code><code dir="ltr">/bin</code>, enter the following command at the command line:</p>
<pre dir="ltr">
netmgr
</pre></li>
<li>
<p>(Windows) Select <span class="bold">Start</span>, <span class="bold">Programs</span>, <span class="bold">Oracle - HOME_NAME</span>, <span class="bold">Configuration and Migration Tools</span>, then <span class="bold">Net Manager</span>.</p>
</li>
</ul>
</li>
<li>
<p>Expand <span class="bold">Oracle Net Configuration</span>, and from <span class="bold">Local</span>, select <span class="bold">Profile</span>.</p>
</li>
<li>
<p>From the <span class="bold">Naming</span> list, select <span class="bold">Network Security</span>.</p>
<p>The Network Security tabbed window appears.</p>
</li>
<li>
<p>Select the <span class="bold">SSL</span> tab.</p>
</li>
<li>
<p>In the Cipher Suite Configuration region, click <span class="bold">Add</span>.</p>
<p>A dialog box displays available cipher suites.</p>
</li>
<li>
<p>Select a suite and click <span class="bold">OK</span>.</p>
<p>The <span class="bold">Cipher Suite Configuration</span> list is updated as follows:</p>
<img width="388" height="531" src="img/ssl0003.gif" alt="Description of ssl0003.gif follows" /><br />
<a id="sthref585" href="img_text/ssl0003.htm">Description of the illustration ''ssl0003.gif''</a><br />
<br /></li>
<li>
<p>Use the up and down arrows to prioritize the cipher suites.</p>
</li>
<li>
<p>Select <span class="bold">File</span>, <span class="bold">Save Network Configuration</span>.</p>
<p>The <code dir="ltr">sqlnet.ora</code> file is updated with the following entry:</p>
<pre dir="ltr">
SSL_CIPHER_SUITES= <span class="italic">(SSL_cipher_suite1 [,SSL_cipher_suite2])</span>
</pre></li>
</ol>
</div>
<!-- class="sect3" -->
<a id="i1006974"></a>
<div id="ASOAG9694" class="sect3"><a id="CBHIFDEF"></a>
<h4 class="sect3"><span class="secnum">13.6.3.5</span> Step 3E: Set the Required SSL Version on the Client (Optional)</h4>
<p>You can set the <code dir="ltr">SSL_VERSION</code> parameter in the <code dir="ltr">sqlnet.ora</code> file. This parameter defines the version of SSL that must run on the systems with which the client communicates. You can require these systems to use any valid version. The default setting for this parameter in <code dir="ltr">sqlnet.ora</code> is <code dir="ltr">undetermined</code>, which is set by selecting <span class="bold">Any</span> from the list in the <span class="bold">SSL</span> tab of the Oracle Advanced Security window. When <span class="bold">Any</span> is selected, TLS 1.0 is tried first, then SSL 3.0, and SSL 2.0 are tried in that order. Ensure that the client SSL version is compatible with the version the server uses.</p>
<p>To set the required SSL version for the client:</p>
<ol>
<li>
<p>In the <span class="bold">Require SSL Version</span> list, the default setting is Any. Accept this default or select the SSL version you want to configure.</p>
</li>
<li>
<p>Select <span class="bold">File</span>, <span class="bold">Save Network Configuration</span>.</p>
<p>The <code dir="ltr">sqlnet.ora</code> file is updated. If you selected <span class="bold">Any</span>, then it is updated with the following entry:</p>
<pre dir="ltr">
<a id="sthref586"></a><a id="sthref587"></a>SSL_VERSION=UNDETERMINED
</pre></li>
</ol>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink NETRF235" href="../../network.112/e10835/sqlnet.htm#NETRF235"><span class="italic">Oracle Database Net Services Reference</span></a> for a full list of <code dir="ltr">SSL_VERSION</code> values</div>
</div>
<!-- class="sect3" -->
<a id="i1007000"></a>
<div id="ASOAG9695" class="sect3">
<h4 class="sect3"><span class="secnum">13.6.3.6</span> Step 3F: Set SSL as an Authentication Service on the Client (Optional)</h4>
<p>The <a id="sthref588"></a><a id="sthref589"></a><code dir="ltr">SQLNET.AUTHENTICATION_SERVICES</code> parameter in the <code dir="ltr">sqlnet.ora</code> file sets the SSL authentication service. Typically, the <code dir="ltr">sqlnet.ora</code> file is located in the same directory as the other network configuration files. Depending on the platform, the <code dir="ltr">sqlnet.ora</code> file is in the following directory location:</p>
<ul>
<li>
<p>(UNIX) <code dir="ltr"><span class="codeinlineitalic">$ORACLE_HOME</span></code><code dir="ltr">/network/admin</code></p>
</li>
<li>
<p>(Windows) <code dir="ltr"><span class="codeinlineitalic">ORACLE_BASE</span></code><code dir="ltr">\</code><code dir="ltr"><span class="codeinlineitalic">ORACLE_HOME</span></code><code dir="ltr">\network\admin\</code></p>
</li>
</ul>
<p>Set the <code dir="ltr">SQLNET.AUTHENTICATION_SERVICES</code> parameter if you want to use SSL authentication in conjunction with another authentication method supported by Oracle Database. For example, use this parameter if you want the server to authenticate itself to the client by using SSL and the client to authenticate itself to the server by using RADIUS.</p>
<p>To set the client <code dir="ltr">SQLNET.AUTHENTICATION_SERVICES</code> parameter, add TCP/IP with SSL (<code dir="ltr">TCPS</code>) to this parameter in the <code dir="ltr">sqlnet.ora</code> file by using a text editor. For example, if you want to use SSL authentication in conjunction with RADIUS authentication, then set this parameter as follows:</p>
<pre dir="ltr">
 <a id="sthref590"></a><a id="sthref591"></a>SQLNET.AUTHENTICATION_SERVICES = (TCPS<span class="italic">, radius</span>)
</pre>
<p>If you do not want to use SSL authentication in conjunction with another authentication method, then do not set this parameter.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink NETRF198" href="http://www.oracle.com/pls/topic/lookup?ctx=db112&amp;id=NETRF198"><span class="italic">Oracle Database Net Services Reference</span></a> for a full list of <code dir="ltr">AUTHENTICATION_SERVICES</code> values</div>
</div>
<!-- class="sect3" -->
<a id="BABGEDGD"></a>
<div id="ASOAG10541" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3"><span class="secnum">13.6.3.7</span> Step 3G: Specify the Certificate to Use for Authentication on the Client (Optional)</h4>
<p>The<a id="sthref592"></a> <code dir="ltr">SQLNET.SSL_EXTENDED_KEY_USAGE</code> <a id="sthref593"></a>parameter <a id="sthref594"></a><a id="sthref595"></a>in the <code dir="ltr">sqlnet.ora</code> file specifies which certificate to use in authenticating to the database server. Typically, the <code dir="ltr">sqlnet.ora</code> file is located in the same directory as the other network configuration files. Depending on the platform, the <code dir="ltr">sqlnet.ora</code> file is in one of the following directory locations:</p>
<ul>
<li>
<p>(UNIX) <code dir="ltr"><span class="codeinlineitalic">$ORACLE_HOME</span></code><code dir="ltr">/network/admin</code></p>
</li>
<li>
<p>(Windows) <code dir="ltr"><span class="codeinlineitalic">ORACLE_BASE</span></code><code dir="ltr">\</code><code dir="ltr"><span class="codeinlineitalic">ORACLE_HOME</span></code><code dir="ltr">\network\admin\</code></p>
</li>
</ul>
<p>Set the <code dir="ltr">SQLNET.SSL_EXTENDED_KEY_USAGE</code> parameter if you have multiple certificates in the security module, but there is only one certificate with extended key usage field of <code dir="ltr">client authentication</code>, and this certificate is exactly the one you want to use to authenticate to the database. For example, use this parameter if you have multiple certificates in a smart card, only one of which has an extended key usage field of <code dir="ltr">client authentication</code>, and you want to use this certificate <code dir="ltr">C</code> to authenticate to the database. By setting this parameter on a Windows client to <code dir="ltr">client authentication</code>, the MSCAPI certificate selection box will not appear, and the certificate <code dir="ltr">C</code> is automatically used for the SSL authentication of the client to the server.</p>
<p>To set the client <code dir="ltr">SQLNET.SSL_EXTENDED_KEY_USAGE</code> parameter, edit the <code dir="ltr">sqlnet.ora</code> file to have the following line:</p>
<pre dir="ltr">
SQLNET.SSL_EXTENDED_KEY_USAGE = "client authentication"
</pre>
<p>If you do not want to use the certificate filtering, then remove the <code dir="ltr">SQLNET.SSL_EXTENDED_KEY_USAGE</code> parameter setting from the <code dir="ltr">sqlnet.ora</code> file.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink NETRF2009" href="../../network.112/e10835/sqlnet.htm#NETRF2009"><span class="italic">Oracle Database Net Services Reference</span></a> for a full list of <code dir="ltr">SSL_EXTENDED_KEY_USAGE</code> values</div>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="i1007310"></a>
<div id="ASOAG9696" class="sect2"><a id="CBHECAHI"></a>
<h3 class="sect2"><span class="secnum">13.6.4</span> Step 4: Log on to the Database Instance</h3>
<p>If you are using SSL authentication for the client (<code dir="ltr">SSL_CLIENT_AUTHENTICATION=true</code> in the <code dir="ltr">sqlnet.ora</code> file), then launch SQL*Plus and enter the following:</p>
<pre dir="ltr">
CONNECT/@<span class="italic">net_service_name </span>
</pre>
<p>If you are not using SSL authentication (<code dir="ltr">SSL_CLIENT_AUTHENTICATION=false</code> in the <code dir="ltr">sqlnet.ora</code> file), then launch SQL*Plus and enter the following:</p>
<pre dir="ltr">
CONNECT <span class="italic">username</span>@<span class="italic">net_service_name</span>
Enter password: <span class="italic">password</span>
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#i1022705">"Certificate Validation with Certificate Revocation Lists"</a> for information about configuring the client for certificate validation with certificate revocation lists</div>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="i1022857"></a>
<div id="ASOAG9697" class="sect1">
<h2 class="sect1"><span class="secnum">13.7</span> Troubleshooting Secure Sockets Layer</h2>
<p>The following section lists the most common errors you may receive while using the Oracle Advanced Security SSL adapter.</p>
<p>It may be necessary to enable Oracle Net tracing to determine the cause of an error. For information about setting tracing parameters to enable Oracle Net tracing, refer to <a class="olink NETAG" href="../e41945/toc.htm"><span class="italic">Oracle Database Net Services Administrator's Guide</span></a>.</p>
<div class="msgset">
<div class="msgentry">
<dl>
<dt><span class="msg"><a id="sthref596"></a>ORA-28759: Failure to Open File</span> <!-- class="msg" --></dt>
<dd>
<div class="msgexplan"><span class="msgexplankw">Cause:</span> The system could not open the specified file. Typically, this error occurs because the wallet cannot be found.</div>
<!-- class="msgexplan" --></dd>
<dd>
<div class="msgaction"><span class="msgactionkw">Action:</span> Check the following:
<ul>
<li>
<p>Ensure that the correct wallet location is specified in the <code dir="ltr">sqlnet.ora</code> file. This should be the same directory location where you saved the wallet.</p>
</li>
<li>
<p>Enable Oracle Net tracing to determine the name of the file that cannot be opened and the reason.</p>
</li>
<li>
<p>Ensure that auto login was enabled when you saved the wallet. Refer to <a href="asowalet.htm#i1006873">"Using Auto Login"</a></p>
</li>
</ul>
</div>
<!-- class="msgaction" --></dd>
</dl>
</div>
<!-- class="msgentry" -->
<div class="msgentry">
<dl>
<dt><span class="msg"><a id="sthref597"></a>ORA-28786: Decryption of Encrypted Private Key Failure</span> <!-- class="msg" --></dt>
<dd>
<div class="msgexplan"><span class="msgexplankw">Cause:</span> An incorrect password was used to decrypt an encrypted private key. Frequently, this happens because an <a href="asogls.htm#i998094"><span class="xrefglossterm">auto login wallet</span></a> is not being used.</div>
<!-- class="msgexplan" --></dd>
<dd>
<div class="msgaction"><span class="msgactionkw">Action:</span> Use Oracle Wallet Manager to turn the auto login feature on for the wallet. Then save the wallet again. Refer to, <a href="asowalet.htm#i1006873">"Using Auto Login"</a>.
<p>If the auto login feature is not being used, then enter the correct password.</p>
</div>
<!-- class="msgaction" --></dd>
</dl>
</div>
<!-- class="msgentry" -->
<div class="msgentry">
<dl>
<dt><span class="msg"><a id="sthref598"></a>ORA-28858: SSL Protocol Error</span> <!-- class="msg" --></dt>
<dd>
<div class="msgexplan"><span class="msgexplankw">Cause:</span> This is a generic error that can occur during SSL handshake negotiation between two processes.</div>
<!-- class="msgexplan" --></dd>
<dd>
<div class="msgaction"><span class="msgactionkw">Action:</span> Enable Oracle Net tracing and attempt the connection again to produce trace output. Then contact Oracle customer support with the trace output.</div>
<!-- class="msgaction" --></dd>
</dl>
</div>
<!-- class="msgentry" -->
<div class="msgentry">
<dl>
<dt><span class="msg"><a id="sthref599"></a>ORA-28859 SSL Negotiation Failure</span> <!-- class="msg" --></dt>
<dd>
<div class="msgexplan"><span class="msgexplankw">Cause:</span> An error occurred during the negotiation between two processes as part of the SSL protocol. This error can occur when two sides of the connection do not support a common cipher suite.</div>
<!-- class="msgexplan" --></dd>
<dd>
<div class="msgaction"><span class="msgactionkw">Action:</span> Check the following:
<ul>
<li>
<p>Use Oracle Net Manager to ensure that the SSL versions on both the client and the server match, or are compatible. For example, if the server accepts only SSL 3.0 and the client accepts only TLS 1.0, then the SSL connection will fail.</p>
</li>
<li>
<p>Use Oracle Net Manager to check what cipher suites are configured on the client and the server, and ensure that compatible cipher suites are set on both.</p>
<p>If the error still persists, then enable Oracle Net tracing and attempt the connection again. Contact Oracle customer support with the trace output.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#i1006798">"Step 3D: Set the Client Secure Sockets Layer Cipher Suites (Optional)"</a> for details about setting compatible cipher suites on the client and the server</div>
<div class="infobox-note">
<p class="notep1">Note:</p>
If you do not configure any cipher suites, then all available cipher suites are enabled.</div>
</li>
</ul>
</div>
<!-- class="msgaction" --></dd>
</dl>
</div>
<!-- class="msgentry" -->
<a id="i1023897"></a>
<div class="msgentry">
<dl>
<dt><span class="msg"><a id="sthref600"></a>ORA-28862: SSL Connection Failed</span> <!-- class="msg" --></dt>
<dd>
<div class="msgexplan"><span class="msgexplankw">Cause:</span> This error occurred because the peer closed the connection.</div>
<!-- class="msgexplan" --></dd>
<dd>
<div class="msgaction"><span class="msgactionkw">Action:</span> Check the following:
<ul>
<li>
<p>Ensure that the correct wallet location is specified in the <code dir="ltr">sqlnet.ora</code> file so the system can find the wallet.</p>
</li>
<li>
<p>Use Oracle Net Manager to ensure that cipher suites are set correctly in the <code dir="ltr">sqlnet.ora</code> file. Sometimes this error occurs because the <code dir="ltr">sqlnet.ora</code> has been manually edited and the cipher suite names are misspelled. Ensure that case sensitive string matching is used with cipher suite names.</p>
</li>
<li>
<p>Use Oracle Net Manager to ensure that the SSL versions on both the client and the server match or are compatible. Sometimes this error occurs because the SSL version specified on the server and client do not match. For example, if the server accepts only SSL 3.0 and the client accepts only TLS 1.0, then the SSL connection will fail.</p>
</li>
<li>
<p>For more diagnostic information, enable Oracle Net tracing on the peer.</p>
</li>
</ul>
</div>
<!-- class="msgaction" --></dd>
</dl>
</div>
<!-- class="msgentry" -->
<div class="msgentry">
<dl>
<dt><span class="msg"><a id="sthref601"></a>ORA-28865: SSL Connection Closed</span> <!-- class="msg" --></dt>
<dd>
<div class="msgexplan"><span class="msgexplankw">Cause:</span> The SSL connection closed because of an error in the underlying transport layer, or because the peer process quit unexpectedly.</div>
<!-- class="msgexplan" --></dd>
<dd>
<div class="msgaction"><span class="msgactionkw">Action:</span> Check the following:
<ul>
<li>
<p>Use Oracle Net Manager to ensure that the SSL versions on both the client and the server match, or are compatible. Sometimes this error occurs because the SSL version specified on the server and client do not match. For example, if the server accepts only SSL 3.0 and the client accepts only TLS 1.0, then the SSL connection will fail.</p>
</li>
<li>
<p>If you are using a Diffie-Hellman anonymous cipher suite and the <code dir="ltr">SSL_CLIENT_AUTHENTICATION</code> parameter is set to <code dir="ltr">true</code> in the server's <code dir="ltr">listener.ora</code> file, then the client does not pass its certificate to the server. When the server does not receive the client's certificate, it (the server) cannot authenticate the client so the connection is closed. To resolve this use another cipher suite, or set this <code dir="ltr">listener.ora</code> parameter to false.</p>
</li>
<li>
<p>Enable Oracle Net tracing and check the trace output for network errors.</p>
</li>
<li>
<p>For details, refer to Actions listed for <a href="#i1023897">"ORA-28862: SSL Connection Failed"</a></p>
</li>
</ul>
</div>
<!-- class="msgaction" --></dd>
</dl>
</div>
<!-- class="msgentry" -->
<div class="msgentry">
<dl>
<dt><span class="msg"><a id="sthref602"></a>ORA-28868: Peer Certificate Chain Check Failed</span> <!-- class="msg" --></dt>
<dd>
<div class="msgexplan"><span class="msgexplankw">Cause:</span> When the peer presented the <a href="asogls.htm#i996786"><span class="xrefglossterm">certificate chain</span></a>, it was checked and that check failed. This failure can be caused by a number of problems, including:
<ul>
<li>
<p>One of the certificates in the chain has expired.</p>
</li>
<li>
<p>A certificate authority for one of the certificates in the chain is not recognized as a <a href="asogls.htm#i997496"><span class="xrefglossterm">trust point</span></a>.</p>
</li>
<li>
<p>The signature in one of the certificates cannot be verified.</p>
</li>
</ul>
</div>
<!-- class="msgexplan" --></dd>
<dd>
<div class="msgaction"><span class="msgactionkw">Action:</span> Refer to, <a href="asowalet.htm#i1006711">"Opening an Existing Wallet"</a> to use Oracle Wallet Manager to open your wallet and check the following:
<ul>
<li>
<p>Ensure that all of the certificates installed in your wallet are current (not expired).</p>
</li>
<li>
<p>Ensure that a certificate authority's certificate from your peer's certificate chain is added as a <a href="asogls.htm#i997487"><span class="xrefglossterm">trusted certificate</span></a> in your wallet. Refer to, <a href="asowalet.htm#i1007134">"Importing a Trusted Certificate"</a> to use Oracle Wallet Manager to import a trusted certificate.</p>
</li>
</ul>
</div>
<!-- class="msgaction" --></dd>
</dl>
</div>
<!-- class="msgentry" -->
<div class="msgentry">
<dl>
<dt><span class="msg"><a id="sthref603"></a>ORA-28885: No certificate with the required key usage found.</span> <!-- class="msg" --></dt>
<dd>
<div class="msgexplan"><span class="msgexplankw">Cause:</span> Your certificate was not created with the appropriate X.509 version 3 key usage extension.</div>
<!-- class="msgexplan" --></dd>
<dd>
<div class="msgaction"><span class="msgactionkw">Action:</span> Use Oracle Wallet Manager to check the certificate's key usage. Refer to, <a href="asowalet.htm#BABHJJJH">Table 14-1, "KeyUsage Values"</a>.</div>
<!-- class="msgaction" --></dd>
</dl>
</div>
<!-- class="msgentry" -->
<a id="i1024309"></a>
<div class="msgentry">
<dl>
<dt><span class="msg"><a id="sthref604"></a>ORA-29024: Certificate Validation Failure</span> <!-- class="msg" --></dt>
<dd>
<div class="msgexplan"><span class="msgexplankw">Cause:</span> The certificate sent by the other side could not be validated. This may occur if the certificate has expired, has been revoked, or is invalid for any other reason.</div>
<!-- class="msgexplan" --></dd>
<dd>
<div class="msgaction"><span class="msgactionkw">Action:</span> Check the following:
<ul>
<li>
<p>Check the certificate to determine whether it is valid. If necessary, get a new certificate, inform the sender that her certificate has failed, or resend.</p>
</li>
<li>
<p>Check to ensure that the server's wallet has the appropriate <a href="asogls.htm#i997496"><span class="xrefglossterm">trust point</span></a>s to validate the client's certificate. If it does not, then use Oracle Wallet Manager to import the appropriate trust point into the wallet. Refer to, <a href="asowalet.htm#i1007134">"Importing a Trusted Certificate"</a> for details.</p>
</li>
<li>
<p>Ensure that the certificate has not been revoked and that certificate revocation list (CRL) checking is turned on. For details, refer to <a href="#i1022645">"Configuring Certificate Validation with Certificate Revocation Lists"</a></p>
</li>
</ul>
</div>
<!-- class="msgaction" --></dd>
</dl>
</div>
<!-- class="msgentry" -->
<div class="msgentry">
<dl>
<dt><span class="msg"><a id="sthref605"></a>ORA-29223: Cannot Create Certificate Chain</span> <!-- class="msg" --></dt>
<dd>
<div class="msgexplan"><span class="msgexplankw">Cause:</span> A <a href="asogls.htm#i996786"><span class="xrefglossterm">certificate chain</span></a> cannot be created with the existing <a href="asogls.htm#i997496"><span class="xrefglossterm">trust point</span></a>s for the certificate being installed. Typically, this error is returned when the peer does not give the complete chain and you do not have the appropriate trust points to complete it.</div>
<!-- class="msgexplan" --></dd>
<dd>
<div class="msgaction"><span class="msgactionkw">Action:</span> Use Oracle Wallet Manager to install the trust points that are required to complete the chain. Refer to,<a href="asowalet.htm#i1007134">"Importing a Trusted Certificate"</a></div>
<!-- class="msgaction" --></dd>
</dl>
</div>
<!-- class="msgentry" --></div>
<!-- class="msgset" --></div>
<!-- class="sect1" -->
<a id="i1022705"></a>
<div id="ASOAG9698" class="sect1">
<h2 class="sect1"><span class="secnum">13.8</span> Certificate Validation with Certificate Revocation Lists</h2>
<p>This section contains:</p>
<ul>
<li>
<p><a href="#BABBEFIG">About Certificate Validation with Certificate Revocation Lists</a></p>
</li>
<li>
<p><a href="#i1024048">What CRLs Should You Use?</a></p>
</li>
<li>
<p><a href="#i1024053">How CRL Checking Works</a></p>
</li>
<li>
<p><a href="#i1022645">Configuring Certificate Validation with Certificate Revocation Lists</a></p>
</li>
<li>
<p><a href="#i1011050">Certificate Revocation List Management</a></p>
</li>
<li>
<p><a href="#i1018027">Troubleshooting Certificate Validation</a></p>
</li>
</ul>
<a id="BABBEFIG"></a>
<div id="ASOAG10572" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">13.8.1</span> About Certificate Validation with Certificate Revocation Lists</h3>
<p>The process of determining whether a given certificate can be used in a given context is referred to as certificate validation. Certificate validation includes determining that</p>
<ul>
<li>
<p>A trusted <a href="asogls.htm#i996783"><span class="xrefglossterm">certificate authority</span></a> (CA) has digitally signed the certificate</p>
</li>
<li>
<p>The certificate's digital signature corresponds to the independently-calculated hash value of the certificate itself and the certificate signer's (CA's) public key</p>
</li>
<li>
<p>The certificate has not expired</p>
</li>
<li>
<p>The certificate has not been revoked</p>
</li>
</ul>
<p>The SSL network layer automatically performs the first three validation checks, but you must configure certificate revocation list (CRL) checking to ensure that certificates have not been revoked. CRLs are signed data structures that contain a list of revoked certificates. They are usually issued and signed by the same entity who issued the original certificate. (See <a href="asogls.htm#i998293"><span class="xrefglossterm">certificate revocation lists</span></a>.)</p>
</div>
<!-- class="sect2" -->
<a id="i1024048"></a>
<div id="ASOAG9699" class="sect2">
<h3 class="sect2"><span class="secnum">13.8.2</span> What CRLs Should You Use?</h3>
<p>You should have CRLs for all of the trust points that you honor. The trust points are the trusted certificates from a third party identity that is qualified with a level of trust. Typically, the certificate authorities you trust are called trust points.</p>
</div>
<!-- class="sect2" -->
<a id="i1024053"></a>
<div id="ASOAG9700" class="sect2">
<h3 class="sect2"><span class="secnum">13.8.3</span> How CRL Checking Works</h3>
<p>Certificate revocation status is checked against CRLs, which are located in file system directories, Oracle Internet Directory, or downloaded from the location specified in the <a href="asogls.htm#i997810"><span class="xrefglossterm">CRL Distribution Point</span></a> (CRL DP) extension on the certificate. Typically, CRL definitions are valid for a few days. If you store your CRLs on the local file system or in the directory, then you must update them regularly. If you use CRL DPs then CRLs are downloaded each time a certificate is used, so there is no need to regularly refresh the CRLs.</p>
<p>The server searches for CRLs in the following locations in the order listed. When the system finds a CRL that matches the certificate CA's DN, it stops searching.</p>
<ol>
<li>
<p>Local file system</p>
<p>The system checks the <code dir="ltr">sqlnet.ora</code> file for the <code dir="ltr">SSL_CRL_FILE</code> parameter first, followed by the <code dir="ltr">SSL_CRL_PATH</code> parameter. If these two parameters are not specified, then the system checks the wallet location for any CRLs.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
Note: if you store CRLs on your local file system, then you must use the <code dir="ltr">orapki</code> utility to periodically update them. Fro more information, refer to <a href="#i1021701">"Renaming CRLs with a Hash Value for Certificate Validation"</a></div>
</li>
<li>
<p>Oracle Internet Directory</p>
<p>If the server cannot locate the CRL on the local file system and directory connection information has been configured in an <code dir="ltr">ldap.ora</code> file, then the server searches in the directory. It searches the CRL subtree by using the CA's <a href="asogls.htm#i996929"><span class="xrefglossterm">distinguished name (DN)</span></a> and the DN of the CRL subtree.</p>
<p>The server must have a properly configured <code dir="ltr">ldap.ora</code> file to search for CRLs in the directory. It cannot use the Domain Name System (DNS) discovery feature of Oracle Internet Directory. Also note that if you store CRLs in the directory, then you must use the <code dir="ltr">orapki</code> utility to periodically update them. For details, refer to <a href="#i1021613">"Uploading CRLs to Oracle Internet Directory"</a></p>
</li>
<li>
<p>CRL DP</p>
<p>If the CA specifies a location in the CRL DP X.509, version 3, certificate extension when the certificate is issued, then the appropriate CRL that contains revocation information for that certificate is downloaded. Currently, Oracle Advanced Security supports downloading CRLs over HTTP and LDAP.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
<ul>
<li>
<p>For performance reasons, only user certificates are checked.</p>
</li>
<li>
<p><a id="sthref606"></a><a id="sthref607"></a>Oracle recommends that you store CRLs in the directory rather than the local file system.</p>
</li>
</ul>
</div>
</li>
</ol>
</div>
<!-- class="sect2" -->
<a id="i1022645"></a>
<div id="ASOAG9701" class="sect2">
<h3 class="sect2"><span class="secnum">13.8.4</span> Configuring Certificate Validation with Certificate Revocation Lists</h3>
<p>This section contains:</p>
<ul>
<li>
<p><a href="#BABDIABH">About Configuring Certificate Validation with Certificate Revocation Lists</a></p>
</li>
<li>
<p><a href="#BABJEHEB">Enabling Certificate Revocation Status Checking for the Client or Server</a></p>
</li>
<li>
<p><a href="#BABCCJDG">Disabling Certificate Revocation Status Checking</a></p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#i1018027">"Troubleshooting Certificate Validation"</a> for information about resolving certificate validation errors.</div>
<a id="BABDIABH"></a>
<div id="ASOAG10573" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3"><span class="secnum">13.8.4.1</span> About Configuring Certificate Validation with Certificate Revocation Lists</h4>
<p>The <code dir="ltr">SSL_CERT_REVOCATION</code> parameter must be set to <code dir="ltr">REQUIRED</code> or <code dir="ltr">REQUESTED</code> in the <code dir="ltr">sqlnet.ora</code> file to enable certificate revocation status checking. By default this parameter is set to <code dir="ltr">NONE</code> indicating that certificate revocation status checking is turned off.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
If you want to store CRLs on your local file system or in Oracle Internet Directory, then you must use the command line utility, <code dir="ltr">orapki</code>, to rename CRLs in your file system or upload them to the directory. Refer to, <a href="#i1011050">"Certificate Revocation List Management"</a> for information about using <code dir="ltr">orapki</code>.</div>
</div>
<!-- class="sect3" -->
<a id="BABJEHEB"></a>
<div id="ASOAG10574" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3"><span class="secnum">13.8.4.2</span> Enabling Certificate Revocation Status Checking for the Client or Server</h4>
<ol>
<li>
<p>Start <a id="sthref608"></a><a id="sthref609"></a>Oracle Net Manager.</p>
<ul>
<li>
<p>(UNIX) From <code dir="ltr"><span class="codeinlineitalic">$ORACLE_HOME</span></code><code dir="ltr">/bin</code>, enter the following command at the command line:</p>
<pre dir="ltr">
netmgr
</pre></li>
<li>
<p>(Windows) Select <span class="bold">Start</span>, <span class="bold">Programs</span>, <span class="bold">Oracle - HOME_NAME</span>, <span class="bold">Configuration and Migration Tools</span>, then <span class="bold">Net Manager</span>.</p>
</li>
</ul>
</li>
<li>
<p>Expand <span class="bold">Oracle Net Configuration</span>, and from <span class="bold">Local</span>, select <span class="bold">Profile</span>.</p>
</li>
<li>
<p>From the <span class="bold">Naming</span> list, select <span class="bold">Network Security</span>.</p>
<p>The Network Security tabbed window appears.</p>
</li>
<li>
<p>Select the <span class="bold">SSL</span> tab.</p>
</li>
<li>
<p>Select one of the following options from the <span class="bold">Revocation Check</span> list:</p>
<img width="388" height="531" src="img/ssl0006.gif" alt="Description of ssl0006.gif follows" /><br />
<a id="sthref610" href="img_text/ssl0006.htm">Description of the illustration ''ssl0006.gif''</a><br />
<br />
<ul>
<li>
<p><span class="bold">REQUIRED</span></p>
<p>Requires certificate revocation status checking. The SSL connection is rejected if a certificate is revoked or no CRL is found. SSL connections are accepted only if it can be verified that the certificate has not been revoked.</p>
</li>
<li>
<p><span class="bold">REQUESTED</span></p>
<p>Performs certificate revocation status checking if a CRL is available. The SSL connection is rejected if a certificate is revoked. SSL connections are accepted if no CRL is found or if the certificate has not been revoked.</p>
<p>For performance reasons, only user certificates are checked for revocation.</p>
</li>
</ul>
</li>
<li>
<p>(Optional) If CRLs are stored on your local file system, then set one or both of the following fields that specify where they are stored. These fields are available only when <span class="bold">Revocation Check</span> is set to <span class="bold">REQUIRED</span> or <span class="bold">REQUESTED</span>.</p>
<ul>
<li>
<p><span class="bold">Certificate Revocation Lists Path:</span></p>
<p>Enter the path to the directory where CRLs are stored or click <span class="bold">Browse</span> to find it by searching the file system. Specifying this path sets the <code dir="ltr">SSL_CRL_PATH</code> parameter in the <code dir="ltr">sqlnet.ora</code> file. If a path is not specified for this parameter, then the default is the wallet directory. Both DER-encoded (binary format) and <a href="asogls.htm#i997823"><span class="xrefglossterm">PEM</span></a>-encoded (BASE64) CRLs are supported.</p>
</li>
<li>
<p><span class="bold">Certificate Revocation Lists File:</span></p>
<p>Enter the path to a comprehensive CRL file (where PEM-encoded (BASE64) CRLs are concatenated in order of preference in one file) or click <span class="bold">Browse</span> to find it by searching the file system. Specifying this file sets the <code dir="ltr">SSL_CRL_FILE</code> parameter in the <code dir="ltr">sqlnet.ora</code> file. If this parameter is set, then the file must be present in the specified location, or else the application will error out during startup.</p>
<p>If you want to store CRLs in a local file system directory by setting the <span class="bold">Certificate Revocation Lists Path</span>, then you must use the <code dir="ltr">orapki</code> utility to rename them so the system can locate them. See <a href="#i1021701">"Renaming CRLs with a Hash Value for Certificate Validation"</a> for more information.</p>
</li>
</ul>
</li>
<li>
<p>(Optional) If CRLs are fetched from Oracle Internet Directory, then directory server and port information must be specified in an <code dir="ltr">ldap.ora</code> file.</p>
<p>When configuring your <code dir="ltr">ldap.ora</code> file, you should specify only a non-SSL port for the directory. CRL download is done as part of the SSL protocol, and making an SSL connection within an SSL connection is not supported.</p>
<p>Oracle Advanced Security CRL functionality will not work if the Oracle Internet Directory non-SSL port is disabled.</p>
</li>
<li>
<p>From the <span class="bold">File</span> menu, select <span class="bold">Save Network Configuration</span>.</p>
<p>The <code dir="ltr">sqlnet.ora</code> file is updated.</p>
</li>
</ol>
</div>
<!-- class="sect3" -->
<a id="BABCCJDG"></a>
<div id="ASOAG10575" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3"><span class="secnum">13.8.4.3</span> Disabling Certificate Revocation Status Checking</h4>
<ol>
<li>
<p>Start <a id="sthref611"></a><a id="sthref612"></a>Oracle Net Manager.</p>
<ul>
<li>
<p>(UNIX) From <code dir="ltr"><span class="codeinlineitalic">$ORACLE_HOME</span></code><code dir="ltr">/bin</code>, enter the following command at the command line:</p>
<pre dir="ltr">
netmgr
</pre></li>
<li>
<p>(Windows) Select <span class="bold">Start</span>, <span class="bold">Programs</span>, <span class="bold">Oracle - HOME_NAME</span>, <span class="bold">Configuration and Migration Tools</span>, then <span class="bold">Net Manager</span>.</p>
</li>
</ul>
</li>
<li>
<p>Expand <span class="bold">Oracle Net Configuration</span>, and from <span class="bold">Local</span>, select <span class="bold">Profile</span>.</p>
</li>
<li>
<p>From the <span class="bold">Naming</span> list, select <span class="bold">Network Security</span>.</p>
<p>The Network Security tabbed window appears.</p>
</li>
<li>
<p>Select the <span class="bold">SSL</span> tab.</p>
</li>
<li>
<p>Select <span class="bold">NONE</span> from the <span class="bold">Revocation Check</span> list.</p>
</li>
<li>
<p>From the <span class="bold">File</span> menu, select <span class="bold">Save Network Configuration</span>.</p>
<p>The <code dir="ltr">sqlnet.ora</code> file is updated with the following entry:</p>
<pre dir="ltr">
SSL_CERT_REVOCATION=NONE
</pre></li>
</ol>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="i1011050"></a>
<div id="ASOAG9702" class="sect2">
<h3 class="sect2"><span class="secnum">13.8.5</span> Certificate Revocation List Management</h3>
<p>This section contains:</p>
<ul>
<li>
<p><a href="#BABBGGHH">About Certificate Revocation Management</a></p>
</li>
<li>
<p><a href="#i1021587">Displaying orapki Help for Commands That Manage CRLs</a></p>
</li>
<li>
<p><a href="#i1021701">Renaming CRLs with a Hash Value for Certificate Validation</a></p>
</li>
<li>
<p><a href="#i1021613">Uploading CRLs to Oracle Internet Directory</a></p>
</li>
<li>
<p><a href="#i1015440">Listing CRLs Stored in Oracle Internet Directory</a></p>
</li>
<li>
<p><a href="#i1015447">Viewing CRLs in Oracle Internet Directory</a></p>
</li>
<li>
<p><a href="#i1015527">Deleting CRLs from Oracle Internet Directory</a></p>
</li>
</ul>
<a id="BABBGGHH"></a>
<div id="ASOAG10576" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3"><span class="secnum">13.8.5.1</span> About Certificate Revocation Management</h4>
<p>Before you can enable certificate revocation status checking, you must ensure that the CRLs you receive from the CAs you use are in a form (renamed with a hash value) or in a location (uploaded to the directory) where your computer can use them. Oracle Advanced Security provides a command-line utility, <a id="sthref613"></a><a id="sthref614"></a><a id="sthref615"></a><code dir="ltr">orapki</code>, that you can use to perform the tasks described in this section.</p>
<p>You can also use LDAP command-line tools to manage CRLs in Oracle Internet Directory.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
CRLs must be updated at regular intervals (before they expire) for successful validation. You can automate this task by using <code dir="ltr">orapki</code> commands in a script.</div>
</div>
<!-- class="sect3" -->
<a id="i1021587"></a>
<div id="ASOAG9703" class="sect3">
<h4 class="sect3"><span class="secnum">13.8.5.2</span> Displaying orapki Help for Commands That Manage CRLs</h4>
<p>You can display all the <code dir="ltr">orapki</code> commands that are available for managing CRLs by entering the following at the command line:</p>
<pre dir="ltr">
orapki crl help
</pre>
<p>This command displays all available CRL management commands and their options.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
Using the <code dir="ltr">-summary</code>, <code dir="ltr">-complete</code>, or <code dir="ltr">-wallet</code> command options is always optional. A command will still run if these command options are not specified.</div>
</div>
<!-- class="sect3" -->
<a id="i1021701"></a>
<div id="ASOAG9704" class="sect3">
<h4 class="sect3"><span class="secnum">13.8.5.3</span> Renaming CRLs with a Hash Value for Certificate Validation</h4>
<p>When the system validates a certificate, it must locate the CRL issued by the CA who created the certificate. The system locates the appropriate CRL by matching the issuer name in the certificate with the issuer name in the CRL.</p>
<p>When you specify a CRL storage location for the <span class="bold">Certificate Revocation Lists Path</span> field in Oracle Net Manager, which sets the <code dir="ltr">SSL_CRL_PATH</code> parameter in the <code dir="ltr">sqlnet.ora</code> file, use the <code dir="ltr">orapki</code> utility to rename CRLs with a hash value that represents the issuer's name. Creating the hash value enables the server to load the CRLs.</p>
<p>On UNIX operating systems, <code dir="ltr">orapki</code> creates a symbolic link to the CRL. On Windows operating systems, it creates a copy of the CRL file. In either case, the symbolic link or the copy created by <code dir="ltr">orapki</code> are named with a hash value of the issuer's name. Then when the system validates a certificate, the same hash function is used to calculate the link (or copy) name so the appropriate CRL can be loaded.</p>
<p>Depending on the operating system, enter one of the following commands to rename CRLs stored in the file system.</p>
<p>To rename CRLs stored in UNIX file systems:</p>
<pre dir="ltr">
orapki crl hash -crl <span class="variable">crl_filename</span> [-wallet <span class="variable">wallet_location]</span> -symlink <span class="variable">crl_directory</span> [-summary]
</pre>
<p>To rename CRLs stored in Windows file systems:</p>
<pre dir="ltr">
orapki crl hash -crl <span class="variable">crl_filename</span> [-wallet <span class="variable">wallet_location]</span> -copy <span class="variable">crl_directory</span> [-summary]
</pre>
<pre dir="ltr">
</pre>
<p>In this specification, <code dir="ltr"><span class="codeinlineitalic">crl_filename</span></code> is the name of the CRL file, <code dir="ltr">wallet_location</code> is the location of a wallet that contains the certificate of the CA that issued the CRL, and <code dir="ltr">crl_directory</code> is the directory where the CRL is located.</p>
<p>Using <code dir="ltr">-wallet</code> and <code dir="ltr">-summary</code> are optional. Specifying <code dir="ltr">-wallet</code> causes the tool to verify the validity of the CRL against the CA's certificate prior to renaming the CRL. Specifying the <code dir="ltr">-summary</code> option causes the tool to display the CRL issuer's name.</p>
</div>
<!-- class="sect3" -->
<a id="i1021613"></a>
<div id="ASOAG073" class="sect3">
<h4 class="sect3"><span class="secnum">13.8.5.4</span> Uploading CRLs to Oracle Internet Directory</h4>
<p>Publishing CRLs in the directory enables CRL validation throughout your enterprise, eliminating the need for individual applications to configure their own CRLs. All applications can use the CRLs stored in the directory where they can be centrally managed, greatly reducing the administrative overhead of CRL management and use.</p>
<p>The user who uploads CRLs to the directory by using <code dir="ltr">orapki</code> must be a member of the directory group <code dir="ltr">CRLAdmins</code> (<code dir="ltr">cn=CRLAdmins,cn=groups,%s_OracleContextDN%</code>). This is a privileged operation because these CRLs are accessible to the entire enterprise. Contact your directory administrator to get added to this administrative directory group.</p>
<p>To upload CRLs to the directory, enter the following at the command line:</p>
<pre dir="ltr">
orapki crl upload -crl <span class="italic">crl_location</span> -ldap <span class="italic">hostname:ssl_port</span> -user <span class="italic">username</span> [-wallet <span class="italic">wallet_location</span>] [-summary]
</pre>
<p>In this specification, <code dir="ltr"><span class="codeinlineitalic">crl_location</span></code> is the file name or URL where the CRL is located, <code dir="ltr"><span class="codeinlineitalic">hostname</span></code> and <code dir="ltr"><span class="codeinlineitalic">ssl_port</span></code> (SSL port with no authentication) are for the system on which your directory is installed, <code dir="ltr"><span class="codeinlineitalic">username</span></code> is the directory user who has permission to add CRLs to the CRL subtree, and <code dir="ltr">wallet_location</code> is the location of a wallet that contains the certificate of the CA that issued the CRL.</p>
<p>Using <code dir="ltr">-wallet</code> and <code dir="ltr">-summary</code> are optional. Specifying <code dir="ltr">-wallet</code> causes the tool to verify the validity of the CRL against the CA's certificate prior to uploading it to the directory. Specifying the <code dir="ltr">-summary</code> option causes the tool to print the CRL issuer's name and the LDAP entry where the CRL is stored in the directory.</p>
<p>The following example illustrates uploading a CRL with the <code dir="ltr">orapki</code> utility:</p>
<pre dir="ltr">
orapki crl upload -crl /home/user1/wallet/crldir/crl.txt -ldap host1.example.com:3533 -user cn=orcladmin
</pre>
<div class="infobox-note">
<p class="notep1">Note:</p>
<ul>
<li>
<p>The <code dir="ltr">orapki</code> utility will prompt you for the directory password when you perform this operation.</p>
</li>
<li>
<p><a id="sthref616"></a><a id="sthref617"></a>Ensure that you specify the directory SSL port on which the Diffie-Hellman-based SSL server is running. This is the SSL port that does not perform authentication. Neither the server authentication nor the mutual authentication SSL ports are supported by the <code dir="ltr">orapki</code> utility.</p>
</li>
</ul>
</div>
</div>
<!-- class="sect3" -->
<a id="i1015440"></a>
<div id="ASOAG9705" class="sect3">
<h4 class="sect3"><span class="secnum">13.8.5.5</span> Listing CRLs Stored in Oracle Internet Directory</h4>
<p>You can display a list of all CRLs stored in the directory with <code dir="ltr">orapki</code>, which is useful for browsing to locate a particular CRL to view or download to your local computer. This command displays the CA who issued the CRL (Issuer) and its location (DN) in the CRL subtree of your directory.</p>
<p>To list CRLs in Oracle Internet Directory, enter the following at the command line:</p>
<pre dir="ltr">
orapki crl list -ldap <span class="variable">hostname</span>:<span class="variable">ssl_port</span>
</pre>
<pre dir="ltr">
</pre>
<p>where the <code dir="ltr"><span class="codeinlineitalic">hostname</span></code> and <code dir="ltr"><span class="codeinlineitalic">ssl_port</span></code> are for the system on which your directory is installed. Note that this is the directory SSL port with no authentication as described in the preceding section.</p>
</div>
<!-- class="sect3" -->
<a id="i1015447"></a>
<div id="ASOAG9706" class="sect3">
<h4 class="sect3"><span class="secnum">13.8.5.6</span> Viewing CRLs in Oracle Internet Directory</h4>
<p>You can view specific CRLs that are stored in Oracle Internet Directory in a summarized format or you can request a complete listing of revoked certificates for the specified CRL. A summary listing provides the CRL issuer's name and its validity period. A complete listing provides a list of all revoked certificates contained in the CRL.</p>
<p>To view a summary listing of a CRL in Oracle Internet Directory, enter the following at the command line:</p>
<pre dir="ltr">
orapki crl display -crl <span class="italic">crl_location</span> [-wallet <span class="variable">wallet_location</span>] -summary
</pre>
<p>where <code dir="ltr"><span class="codeinlineitalic">crl_location</span></code> is the location of the CRL in the directory. It is convenient to paste the CRL location from the list that displays when you use the <code dir="ltr">orapki crl list</code> command. Refer to, <a href="#i1015440">"Listing CRLs Stored in Oracle Internet Directory"</a>.</p>
<p>To view a list of all revoked certificates contained in a specified CRL, which is stored in Oracle Internet Directory, enter the following at the command line:</p>
<pre dir="ltr">
orapki crl display -crl <span class="italic">crl_location</span> [-wallet <span class="variable">wallet_location</span>] -complete
</pre>
<pre dir="ltr">
</pre>
<p>For example, the following <code dir="ltr">orapki</code> command:</p>
<pre dir="ltr">
orapki crl display -crl $T_WORK/pki/wlt_crl/nzcrl.txt -wallet $T_WORK/pki/wlt_crl -complete
</pre>
<p>produces the following output, which lists the CRL issuer's DN, its publication date, date of its next update, and the revoked certificates it contains:</p>
<pre dir="ltr">
issuer = CN=root,C=us, thisUpdate = Sun Nov 16 10:56:58 PST 2003, nextUpdate = Mon Sep 30 11:56:58 PDT 2013, revokedCertificates = {(serialNo = 153328337133459399575438325845117876415, revocationDate - Sun Nov 16 10:56:58 PST 2003)}
CRL is valid
</pre>
<p>Using the <code dir="ltr">-wallet</code> option causes the <code dir="ltr">orapki crl display</code> command to validate the CRL against the CA's certificate.</p>
<p>Depending on the size of your CRL, choosing the <code dir="ltr">-complete</code> option may take a long time to display.</p>
<p>You can also use Oracle Directory Manager, a graphical user interface tool that is provided with Oracle Internet Directory, to view CRLs in the directory. CRLs are stored in the following directory location:</p>
<pre dir="ltr">
cn=CRLValidation,cn=Validation,cn=PKI,cn=Products,cn=OracleContext
</pre></div>
<!-- class="sect3" -->
<a id="i1015527"></a>
<div id="ASOAG9707" class="sect3">
<h4 class="sect3"><span class="secnum">13.8.5.7</span> Deleting CRLs from Oracle Internet Directory</h4>
<p>The user who deletes CRLs from the directory by using <code dir="ltr">orapki</code> must be a member of the directory group <code dir="ltr">CRLAdmins</code>. Refer to <a href="#i1021613">"Uploading CRLs to Oracle Internet Directory"</a> for information about this directory administrative group.</p>
<p>To delete CRLs from the directory, enter the following at the command line:</p>
<pre dir="ltr">
orapki crl delete -issuer <span class="italic">issuer_name</span> -ldap <span class="variable">host:ssl_port</span> -user <span class="variable">username</span> [-summary]
</pre>
<pre dir="ltr">
</pre>
<p>where <code dir="ltr"><span class="codeinlineitalic">issuer_name</span></code> is the name of the CA who issued the CRL, the <code dir="ltr">hostname</code> and <code dir="ltr"><span class="codeinlineitalic">ssl_port</span></code> are for the system on which your directory is installed, and <code dir="ltr">username</code> is the directory user who has permission to delete CRLs from the CRL subtree. Ensure that this must be a directory SSL port with no authentication. Refer to, <a href="#i1021613">"Uploading CRLs to Oracle Internet Directory"</a> for more information about this port.</p>
<p>Using the <code dir="ltr">-summary</code> option causes the tool to print the CRL LDAP entry that was deleted.</p>
<p>For example, the following <code dir="ltr">orapki</code> command:</p>
<pre dir="ltr">
orapki crl delete -issuer "CN=root,C=us" -ldap machine1:3500 -user cn=orcladmin -summary
</pre>
<p>produces the following output, which lists the location of the deleted CRL in the directory:</p>
<pre dir="ltr">
Deleted CRL at cn=root cd45860c.rN,cn=CRLValidation,cn=Validation,cn=PKI,cn=Products,cn=OracleContext
</pre></div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="i1018027"></a>
<div id="ASOAG9708" class="sect2">
<h3 class="sect2"><span class="secnum">13.8.6</span> Troubleshooting Certificate Validation</h3>
<p>To determine whether certificates are being validated against CRLs, you can enable Oracle Net tracing. When a revoked certificate is validated by using CRLs, then you will see the following entries in the Oracle Net tracing file without error messages logged between <code dir="ltr">entry</code> and <code dir="ltr">exit</code>:</p>
<pre dir="ltr">
nzcrlVCS_VerifyCRLSignature: entry
nzcrlVCS_VerifyCRLSignature: exit

nzcrlVCD_VerifyCRLDate: entry
nzcrlVCD_VerifyCRLDate: exit

nzcrlCCS_CheckCertStatus: entry
nzcrlCCS_CheckCertStatus: Certificate is listed in CRL
nzcrlCCS_CheckCertStatus: exit
</pre>
<div class="infobox-note">
<p class="notep1">Note:</p>
Note that when certificate validation fails, the peer in the SSL handshake sees an <code dir="ltr">ORA-29024: Certificate Validation Failure</code>. If this message displays, refer to <a href="#i1024309">"ORA-29024: Certificate Validation Failure"</a> for information about how to resolve the error.</div>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink NETAG016" href="../../network.112/e41945/trouble.htm#NETAG016"><span class="italic">Oracle Database Net Services Administrator's Guide</span></a> for information about setting tracing parameters to enable Oracle Net tracing</div>
<div id="ASOAG9709" class="sect3"><a id="sthref618"></a>
<h4 class="sect3"><span class="secnum">13.8.6.1</span> Oracle Net Tracing File Error Messages Associated with Certificate Validation</h4>
<p>The following trace messages, relevant to certificate validation, may be logged between the <code dir="ltr">entry</code> and <code dir="ltr">exit</code> entries in the Oracle Net tracing file. Oracle SSL looks for CRLs in multiple locations, so there may be multiple errors in the trace.</p>
<p>Check the following list of possible error messages for information about how to resolve them.</p>
<div class="msgset">
<div class="msgentry">
<dl>
<dt><span class="msg"><a id="sthref619"></a><a id="sthref620"></a>CRL signature verification failed with RSA status</span> <!-- class="msg" --></dt>
<dd>
<div class="msgexplan"><span class="msgexplankw">Cause:</span> The CRL signature cannot be verified.</div>
<!-- class="msgexplan" --></dd>
<dd>
<div class="msgaction"><span class="msgactionkw">Action:</span> Ensure that the downloaded CRL is issued by the peer's CA and that the CRL was not corrupted when it was downloaded. Note that the <code dir="ltr">orapki</code> utility verifies the CRL before renaming it with a hash value or before uploading it to the directory.
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#i1011050">"Certificate Revocation List Management"</a> for information about using <code dir="ltr">orapki</code> for CRL management</div>
</div>
<!-- class="msgaction" --></dd>
</dl>
</div>
<!-- class="msgentry" -->
<div class="msgentry">
<dl>
<dt><span class="msg"><a id="sthref621"></a><a id="sthref622"></a>CRL date verification failed with RSA status</span> <!-- class="msg" --></dt>
<dd>
<div class="msgexplan"><span class="msgexplankw">Cause:</span> The current time is later than the time listed in the next update field. You should not see this error if CRL DP is used. The systems searches for the CRL in the following order:
<ol>
<li>
<p>File system</p>
</li>
<li>
<p>Oracle Internet Directory</p>
</li>
<li>
<p>CRL DP</p>
</li>
</ol>
<p>The first CRL found in this search may not be the latest.</p>
</div>
<!-- class="msgexplan" --></dd>
<dd>
<div class="msgaction"><span class="msgactionkw">Action:</span> Update the CRL with the most recent copy.</div>
<!-- class="msgaction" --></dd>
</dl>
</div>
<!-- class="msgentry" -->
<div class="msgentry">
<dl>
<dt><span class="msg"><a id="sthref623"></a><a id="sthref624"></a>CRL could not be found</span> <!-- class="msg" --></dt>
<dd>
<div class="msgexplan"><span class="msgexplankw">Cause:</span> The CRL could not be found at the configured locations. This will return error ORA-29024 if the configuration specifies that certificate validation is require.</div>
<!-- class="msgexplan" --></dd>
<dd>
<div class="msgaction"><span class="msgactionkw">Action:</span> Ensure that the CRL locations specified in the configuration are correct by performing the following steps:
<ol>
<li>
<p>Use Oracle Net Manager to check if the correct CRL location is configured. Refer to <a href="#i1022645">"Configuring Certificate Validation with Certificate Revocation Lists"</a></p>
</li>
<li>
<p>If necessary, use the <code dir="ltr">orapki</code> utility to configure CRLs for system use as follows:</p>
<ul>
<li>
<p>For CRLs stored on your local file system, refer to <a href="#i1021701">"Renaming CRLs with a Hash Value for Certificate Validation"</a></p>
</li>
<li>
<p>CRLs stored in the directory, refer to <a href="#i1021613">"Uploading CRLs to Oracle Internet Directory"</a></p>
</li>
</ul>
</li>
</ol>
</div>
<!-- class="msgaction" --></dd>
</dl>
</div>
<!-- class="msgentry" -->
<div class="msgentry">
<dl>
<dt><span class="msg"><a id="sthref625"></a><a id="sthref626"></a>Oracle Internet Directory host name or port number not set</span> <!-- class="msg" --></dt>
<dd>
<div class="msgexplan"><span class="msgexplankw">Cause:</span> Oracle Internet Directory connection information is not set. Note that this is not a fatal error. The search continues with CRL DP.</div>
<!-- class="msgexplan" --></dd>
<dd>
<div class="msgaction"><span class="msgactionkw">Action:</span> If you want to store the CRLs in Oracle Internet Directory, then use Oracle Net Configuration Assistant to create and configure an <code dir="ltr">ldap.ora</code> file for your Oracle home.</div>
<!-- class="msgaction" --></dd>
</dl>
</div>
<!-- class="msgentry" -->
<div class="msgentry">
<dl>
<dt><span class="msg"><a id="sthref627"></a><a id="sthref628"></a>Fetch CRL from CRL DP: No CRLs found</span> <!-- class="msg" --></dt>
<dd>
<div class="msgexplan"><span class="msgexplankw">Cause:</span> The CRL could not be fetched by using the CRL Distribution Point (CRL DP). This happens if the certificate does not have a location specified in its CRL DP extension, or if the URL specified in the CRL DP extension is incorrect.</div>
<!-- class="msgexplan" --></dd>
<dd>
<div class="msgaction"><span class="msgactionkw">Action:</span> Ensure that your certificate authority publishes the CRL to the URL that is specified in the certificate's CRL DP extension.
<p>Manually download the CRL. Then depending on whether you want to store it on your local file system or in Oracle Internet Directory, perform the following steps:</p>
<p>If you want to store the CRL on your local file system:</p>
<ol>
<li>
<p>Use Oracle Net Manager to specify the path to the CRL directory or file. Refer to <a href="#i1022645">"Configuring Certificate Validation with Certificate Revocation Lists"</a></p>
</li>
<li>
<p>Use the <code dir="ltr">orapki</code> utility to configure the CRL for system use. Refer to <a href="#i1021701">"Renaming CRLs with a Hash Value for Certificate Validation"</a></p>
</li>
</ol>
<p>If you want to store the CRL in Oracle Internet Directory:</p>
<ol>
<li>
<p>Use Oracle Net Configuration Assistant to create and configure an <code dir="ltr">ldap.ora</code> file with directory connection information.</p>
</li>
<li>
<p>Use the <code dir="ltr">orapki</code> utility to upload the CRL to the directory. Refer to <a href="#i1021613">"Uploading CRLs to Oracle Internet Directory"</a></p>
</li>
</ol>
</div>
<!-- class="msgaction" --></dd>
</dl>
</div>
<!-- class="msgentry" --></div>
<!-- class="msgset" --></div>
<!-- class="sect3" --></div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="i1007316"></a>
<div id="ASOAG071" class="sect1">
<h2 class="sect1"><span class="secnum">13.9</span> Configuring Your System to Use Hardware Security Modules</h2>
<p>This section contains:</p>
<ul>
<li>
<p><a href="#BABJIHFJ">About Configuring Your System to Use Hardware Security Modules</a></p>
</li>
<li>
<p><a href="#i1017215">Guidelines for Using Hardware Security Modules with Oracle Advanced Security</a></p>
</li>
<li>
<p><a href="#i1013185">Configuring Your System to Use nCipher Hardware Security Modules</a></p>
</li>
<li>
<p><a href="#CHDEAEBA">Configuring Your System to Use SafeNET Hardware Security Modules</a></p>
</li>
<li>
<p><a href="#i1017224">Troubleshooting Using Hardware Security Modules</a></p>
</li>
</ul>
<a id="BABJIHFJ"></a>
<div id="ASOAG10577" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">13.9.1</span> About Configuring Your System to Use Hardware Security Modules</h3>
<p>Oracle Advanced Security supports hardware security modules that use APIs which conform to the RSA Security, Inc., PKCS #11 specification. Typically, these hardware devices are used to securely store and manage private keys in tokens or smart cards, or to accelerate cryptographic processing.</p>
</div>
<!-- class="sect2" -->
<a id="i1017215"></a>
<div id="ASOAG9710" class="sect2">
<h3 class="sect2"><span class="secnum">13.9.2</span> Guidelines for Using Hardware Security Modules with Oracle Advanced Security</h3>
<p>The following general guidelines apply if you are using a hardware security module with Oracle Advanced Security:</p>
<ol>
<li>
<p>Contact your hardware device vendor to obtain the necessary hardware, software, and PKCS #11 libraries.</p>
</li>
<li>
<p>Install the hardware, software, and libraries where appropriate for the hardware security module you are using.</p>
</li>
<li>
<p>Test your hardware security module installation to ensure that it is operating correctly. Refer to your device documentation for instructions.</p>
</li>
<li>
<p>Create a wallet of the type <code dir="ltr">PKCS11</code> by using Oracle Wallet Manager and specify the absolute path to the PKCS #11 library (including the library name) if you wish to store the private key in the token. Oracle <code dir="ltr">PKCS11</code> wallets contain information that points to the token for private key access.</p>
</li>
</ol>
<p>You can use the wallet containing PKCS #11 information just as you would use any Oracle wallet, except the private keys are stored on the hardware device and the cryptographic operations are performed on the device as well.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="asowalet.htm#i1009503">"Creating a Wallet to Store Hardware Security Module Credentials"</a></div>
</div>
<!-- class="sect2" -->
<a id="i1013185"></a>
<div id="ASOAG9711" class="sect2">
<h3 class="sect2"><span class="secnum">13.9.3</span> Configuring Your System to Use nCipher Hardware Security Modules</h3>
<p>This section contains:</p>
<ul>
<li>
<p><a href="#BABDDFGG">About Configuring Your System to Use nCipher Hardware Security Modules</a></p>
</li>
<li>
<p><a href="#BABDAHDH">Oracle Components Required To Use an nCipher Hardware Security Module</a></p>
</li>
<li>
<p><a href="#BABHFFEG">About Installing an nCipher Hardware Security Module</a></p>
</li>
</ul>
<a id="BABDDFGG"></a>
<div id="ASOAG10578" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3"><span class="secnum">13.9.3.1</span> About Configuring Your System to Use nCipher Hardware Security Modules</h4>
<p>Hardware security modules made by nCipher Corporation are certified to operate with Oracle Advanced Security. These modules provide a secure way to store keys and off-load cryptographic processing. Primarily, these devices provide the following benefits:</p>
<ul>
<li>
<p>Off-load cryptographic processing that frees your server to respond to other requests</p>
</li>
<li>
<p>Secure private key storage on the device</p>
</li>
<li>
<p>Allow key administration through the use of smart cards</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
You must contact your nCipher representative to obtain certified hardware and software to use with Oracle Advanced Security.</div>
</li>
</ul>
</div>
<!-- class="sect3" -->
<a id="BABDAHDH"></a>
<div id="ASOAG9712" class="sect3">
<h4 class="sect3"><span class="secnum">13.9.3.2</span> Oracle Components Required To Use an nCipher Hardware Security Module</h4>
<p>To use an nCipher hardware security module, you need the following components:</p>
<ul>
<li>
<p>nCipher Hardware Security Module</p>
</li>
<li>
<p>Supporting nCipher PKCS #11 library</p>
<p>The following platform-specific PKCS#11 library is required:</p>
<ul>
<li>
<p><code dir="ltr">libcknfast.so</code> library for UNIX 32-Bit</p>
</li>
<li>
<p><code dir="ltr">libcknfast-64.so</code> library for UNIX 64-Bit</p>
</li>
<li>
<p><code dir="ltr">cknfast.dll</code> library for Windows</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
You must contact your nCipher representative to have the hardware security module or the secure accelerator installed, and to acquire the necessary library.
<p>These tasks must be performed before you can use an nCipher hardware security module with Oracle Advanced Security.</p>
</div>
</li>
</ul>
</li>
</ul>
</div>
<!-- class="sect3" -->
<a id="BABHFFEG"></a>
<div id="ASOAG9713" class="sect3">
<h4 class="sect3"><span class="secnum">13.9.3.3</span> About Installing an nCipher Hardware Security Module</h4>
<p>To use the secure accelerator, you must provide the absolute path to the directory that contains the nCipher PKCS #11 library (including the library name) when you create the wallet by using Oracle Wallet Manager. This enables the library to be loaded at runtime. Typically, the nCipher card is installed at the following locations:</p>
<ul>
<li>
<p><code dir="ltr">/opt/nfast</code> for UNIX</p>
</li>
<li>
<p><code dir="ltr">C:\nfast</code> for Windows</p>
</li>
</ul>
<p>The nCipher PKCS #11 library is located at the following location for typical installations:</p>
<ul>
<li>
<p><code dir="ltr">/opt/nfast/toolkits/pkcs11/libcknfast.so</code> for UNIX 32-Bit</p>
</li>
<li>
<p><code dir="ltr">/opt/nfast/toolkits/pkcs11/libcknfast-64.so</code> for UNIX 64-Bit</p>
</li>
<li>
<p><code dir="ltr">C:\nfast\toolkits\pkcs11\cknfast.dll</code> for Windows</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
Use the 32-bit library version when using the 32-bit release of Oracle Database and use the 64-bit library version when using the 64-bit release of Oracle Database. For example, use the 64-bit nCipher PKCS #11 library for the Oracle Database for Solaris Operating System (SPARC 64-bit).</div>
</li>
</ul>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="CHDEAEBA"></a>
<div id="ASOAG9714" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">13.9.4</span> Configuring Your System to Use SafeNET Hardware Security Modules</h3>
<p>This section contains:</p>
<ul>
<li>
<p><a href="#BABFCGEG">About Configuring Your System to Use SafeNet Hardware Security Modules</a></p>
</li>
<li>
<p><a href="#BABDDAFG">Oracle Components for the SafeNET Luna SA Hardware Security Module</a></p>
</li>
<li>
<p><a href="#BABHAGCG">About Installing a SafeNET Hardware Security Module</a></p>
</li>
</ul>
<a id="BABFCGEG"></a>
<div id="ASOAG10579" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3"><span class="secnum">13.9.4.1</span> About Configuring Your System to Use SafeNet Hardware Security Modules</h4>
<p>Hardware security modules made by SafeNET Incorporated are certified to operate with Oracle Advanced Security. These modules provide a secure way to store keys and off-load cryptographic processing. Primarily, these devices provide the following benefits:</p>
<ul>
<li>
<p>Off-load of cryptographic processing to free your server to respond to more requests</p>
</li>
<li>
<p>Secure private key storage on the device</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
You must contact your SafeNET representative to obtain certified hardware and software to use with Oracle Advanced Security.</div>
</li>
</ul>
</div>
<!-- class="sect3" -->
<a id="BABDDAFG"></a>
<div id="ASOAG9715" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3"><span class="secnum">13.9.4.2</span> Oracle Components for the SafeNET Luna SA Hardware Security Module</h4>
<p>To use a SafeNET Luna SA hardware security module, you must have the following components</p>
<ul>
<li>
<p>SafeNET Luna SA Hardware Security Module</p>
</li>
<li>
<p>Supporting SafeNET Luna SA PKCS #11 library</p>
<p>The following platform-specific PKCS#11 library is required:</p>
<ul>
<li>
<p><code dir="ltr">libCryptoki2.so</code> library for UNIX</p>
</li>
<li>
<p><code dir="ltr">cryptoki.dll</code> library for Windows</p>
</li>
</ul>
</li>
</ul>
<div class="infobox-note">
<p class="notep1">Note:</p>
You must contact your SafeNET representative to have the hardware security module or the secure accelerator installed, and to acquire the necessary library.
<p>These tasks must be performed before you can use a SafeNET hardware security module with Oracle Advanced Security.</p>
</div>
</div>
<!-- class="sect3" -->
<a id="BABHAGCG"></a>
<div id="ASOAG9716" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3"><span class="secnum">13.9.4.3</span> About Installing a SafeNET Hardware Security Module</h4>
<p>To use the secure accelerator, you must provide the absolute path to the directory that contains the SafeNET PKCS #11 library (including the library name) when you create the wallet using Oracle Wallet Manager. This enables the library to be loaded at runtime. Typically, the SafeNET Luna SA client is installed at the following location:</p>
<ul>
<li>
<p><code dir="ltr">/usr/lunasa</code> for UNIX</p>
</li>
<li>
<p><code dir="ltr">C:\Program Files\LunaSA</code> for Windows</p>
</li>
</ul>
<p>The SafeNET Luna SA PKCS #11 library is located at the following location for typical installations:</p>
<ul>
<li>
<p><code dir="ltr">/usr/lunasa/lib/libCryptoki2.so</code> for UNIX</p>
</li>
<li>
<p><code dir="ltr">C:\Program Files\LunaSA\cryptoki2.dll</code> for Windows</p>
</li>
</ul>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="i1017224"></a>
<div id="ASOAG9717" class="sect2">
<h3 class="sect2"><span class="secnum">13.9.5</span> Troubleshooting Using Hardware Security Modules</h3>
<p>This section contains:</p>
<ul>
<li>
<p><a href="#BABJCJBI">Errors in the Oracle Net Trace Files</a></p>
</li>
<li>
<p><a href="#BABGJABG">Error Messages Associated with Using Hardware Security Modules</a></p>
</li>
</ul>
<a id="BABJCJBI"></a>
<div id="ASOAG10580" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3"><span class="secnum">13.9.5.1</span> Errors in the Oracle Net Trace Files</h4>
<p>To <a id="sthref629"></a>detect whether the module is being used, you can turn on Oracle Net tracing. If the wallet contains PKCS #11 information and the private key on the module is being used, then you will see the following entries in the Oracle Net tracing file without error messages logged between <code dir="ltr">entry</code> and <code dir="ltr">exit</code>:</p>
<pre dir="ltr">
nzpkcs11_Init: entry
nzpkcs11CP_ChangeProviders: entry
nzpkcs11CP_ChangeProviders: exit
nzpkcs11GPK_GetPrivateKey: entry
nzpkcs11GPK_GetPrivateKey: exit
nzpkcs11_Init: exit
...
nzpkcs11_Decrypt: entry
nzpkcs11_Decrypt: exit

nzpkcs11_Sign: entry
nzpkcs11_Sign: exit
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink NETAG016" href="../../network.112/e41945/trouble.htm#NETAG016"><span class="italic">Oracle Database Net Services Administrator's Guide</span></a> for information about setting tracing parameters to enable Oracle Net tracing</div>
</div>
<!-- class="sect3" -->
<a id="BABGJABG"></a>
<div id="ASOAG9718" class="sect3">
<h4 class="sect3"><span class="secnum">13.9.5.2</span> Error Messages Associated with Using Hardware Security Modules</h4>
<p>The following errors are associated with using PKCS #11 hardware security modules:</p>
<div class="msgset">
<div class="msgentry">
<dl>
<dt><span class="msg"><a id="sthref630"></a><a id="sthref631"></a><a id="sthref632"></a>ORA-43000: PKCS11: library not found</span> <!-- class="msg" --></dt>
<dd>
<div class="msgexplan"><span class="msgexplankw">Cause:</span> The system cannot locate the PKCS #11 library at the location specified when the wallet was created. This happens only when the library is moved after the wallet is created.</div>
<!-- class="msgexplan" --></dd>
<dd>
<div class="msgaction"><span class="msgactionkw">Action:</span> Copy the PKCS #11 library back to its original location where it was when the wallet was created.</div>
<!-- class="msgaction" --></dd>
</dl>
</div>
<!-- class="msgentry" -->
<div class="msgentry">
<dl>
<dt><span class="msg"><a id="sthref633"></a><a id="sthref634"></a><a id="sthref635"></a>ORA-43001: PKCS11: token not found</span> <!-- class="msg" --></dt>
<dd>
<div class="msgexplan"><span class="msgexplankw">Cause:</span> The smart card that was used to create the wallet is not present in the hardware security module slot.</div>
<!-- class="msgexplan" --></dd>
<dd>
<div class="msgaction"><span class="msgactionkw">Action:</span> Ensure that the smart card that was used when the wallet was created is present in the hardware security module slot.</div>
<!-- class="msgaction" --></dd>
</dl>
</div>
<!-- class="msgentry" -->
<div class="msgentry">
<dl>
<dt><span class="msg"><a id="sthref636"></a><a id="sthref637"></a><a id="sthref638"></a>ORA-43002: PKCS11: passphrase is wrong</span> <!-- class="msg" --></dt>
<dd>
<div class="msgexplan"><span class="msgexplankw">Cause:</span> This can occur when an incorrect password is specified at wallet creation, or the PKCS #11 device password is changed after the wallet is created and not updated in the wallet by using Oracle Wallet Manager.</div>
<!-- class="msgexplan" --></dd>
<dd>
<div class="msgaction"><span class="msgactionkw">Action:</span> Depending on the cause, take one of the following actions:
<p>If you see this error during wallet creation, then check to ensure that you have the correct password and reenter it.</p>
<p>If the password changed after wallet creation, then use Oracle Wallet Manager to open the wallet and enter a new password.</p>
</div>
<!-- class="msgaction" --></dd>
</dl>
</div>
<!-- class="msgentry" --></div>
<!-- class="msgset" -->
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="asowalet.htm#i1009503">"Creating a Wallet to Store Hardware Security Module Credentials"</a></div>
<div class="infobox-note">
<p class="notep1">Note:</p>
The nCipher log file is in the directory where the module is installed at the following location:
<p><code dir="ltr">/log/logfile</code></p>
</div>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
nCipher and SafeNET documentation for more information about troubleshooting nCipher and SafeNET devices</div>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="BABIBCAE"></a>
<div id="ASOAG10619" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1"><span class="secnum">13.10</span> Configuring SSL in an Oracle Real Application Clusters Environment</h2>
<p>You can configure Secure Sockets Layer for use with an Oracle Real Application Clusters (Oracle RAC) environment.</p>
<p>This section contains:</p>
<ul>
<li>
<p><a href="#BABBDBEJ">Step 1: Configure the TCPS Protocol Endpoints</a></p>
</li>
<li>
<p><a href="#BABIFAEB">Step 2: Update the Local Listener Parameter on Each Oracle RAC Node</a></p>
</li>
<li>
<p><a href="#BABIEIII">Step 3: Create SSL Certificates and Wallets for the Cluster and for the Clients</a></p>
</li>
<li>
<p><a href="#BABBIIDC">Step 4: Copy the Wallet to Each Cluster Node and Create an Obfuscated Wallet</a></p>
</li>
<li>
<p><a href="#BABJAGDJ">Step 5: Define Wallet Locations in the listener.ora and sqlnet.ora Files</a></p>
</li>
<li>
<p><a href="#BABDFBEB">Step 6: Restart the Database Instances and Listeners</a></p>
</li>
<li>
<p><a href="#BABEHFHD">Step 7: Test the Configuration from a Cluster Node</a></p>
</li>
<li>
<p><a href="#BABICEDA">Step 8: Test the Configuration from a Remote Client</a></p>
</li>
</ul>
<a id="BABBDBEJ"></a>
<div id="ASOAG10620" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">13.10.1</span> Step 1: Configure the TCPS Protocol Endpoints</h3>
<p>In an Oracle RAC environment, clients access one of three scan listeners and are then routed to database listeners. To support Secure Sockets Layer, all the listeners must have TCPS protocol endpoints. The following procedure adds the TCPS endpoints to the database node listeners and scan listeners.</p>
<ol>
<li>
<p>Check the listener resources to ensure that there is support for the TCP endpoints.</p>
<p>For example:</p>
<pre dir="ltr">
crsctl stat res -p |grep ENDPOINTS
</pre>
<p>Output similar to the following appears:</p>
<pre dir="ltr">
ENDPOINTS=TCP:1521 &lt;= database listener
ENDPOINTS=TCP:1521 &lt;= listener_scan1
ENDPOINTS=TCP:1521 &lt;= listener_scan2
ENDPOINTS=TCP:1521 &lt;= listener_scan3 
</pre></li>
<li>
<p>Add the TCPS endpoints to the database listeners.</p>
<p>Specify a port number that is different from the TCP port number, and is not currently used, for the TCPS value. For example:</p>
<pre dir="ltr">
srvctl modify listener -p "TCP:1521/TCPS:1523"; 
</pre></li>
<li>
<p>Restart the listener.</p>
<pre dir="ltr">
srvctl stop listener
srvctl start listener 
</pre></li>
<li>
<p>Check the listener configuration.</p>
<pre dir="ltr">
srvctl config listener
</pre>
<p>Output similar to the following appears:</p>
<pre dir="ltr">
Name: LISTENER
Network: 1, Owner: oracle
Home: <span class="italic">CRS_home</span>
End points: TCP:1521/TCPS:1523
</pre></li>
<li>
<p>Check the listener status.</p>
<pre dir="ltr">
lsnrctl status

Listening Endpoints Summary...
(DESCRIPTION=(ADDRESS=(PROTOCOL=ipc)(KEY=LISTENER)))
(DESCRIPTION=(ADDRESS=(PROTOCOL=tcps)(HOST=10.141.155.188)(PORT=1523)))
(DESCRIPTION=(ADDRESS=(PROTOCOL=tcp)(HOST=10.141.155.183)(PORT=1521)))
(DESCRIPTION=(ADDRESS=(PROTOCOL=tcp)(HOST=10.141.155.188)(PORT=1521)))
</pre></li>
<li>
<p>Check the listener resources again.</p>
<pre dir="ltr">
 crsctl stat res -p |grep ENDPOINTS

ENDPOINTS=TCP:1521 TCPS:1523 &lt;= database listener
ENDPOINTS=TCP:1521 &lt;= listener_scan1
ENDPOINTS=TCP:1521 &lt;= listener_scan2
ENDPOINTS=TCP:1521 &lt;= listener_scan3 
</pre>
<p>The first <code dir="ltr">ENDPOINTS</code> line, which contains the <code dir="ltr">TCPS</code> flag, shows that the configuration has been successful. In the next step, you add this TCPS to the scan listener.</p>
</li>
<li>
<p>Add the TCPS endpoints for the scan listeners.</p>
<pre dir="ltr">
srvctl stop scan_listener
srvctl stop scan

srvctl modify scan_listener -p TCP:1521/TCPS:1523
</pre>
<p>Alternatively, you can use commands similar to the following:</p>
<pre dir="ltr">
srvctl remove scan_listener -f
srvctl add scan_listener -l LISTENER -p TCP:1521/TCPS:1523
srvctl start scan
srvctl start scan_listener
</pre></li>
<li>
<p>Check the scan listener configuration.</p>
<p>First, find all the listeners that have been configured so far.</p>
<pre dir="ltr">
srvctl config scan_listener

SCAN Listener LISTENER_SCAN1 exists. Port: TCP:1521/TCPS:1523
SCAN Listener LISTENER_SCAN2 exists. Port: TCP:1521/TCPS:1523
SCAN Listener LISTENER_SCAN3 exists. Port: TCP:1521/TCPS:1523
</pre>
<p>Then check each individual listener. The following command checks scan listener 3.</p>
<pre dir="ltr">
lsnrctl status listener_scan3

Listening Endpoints Summary...
(DESCRIPTION=(ADDRESS=(PROTOCOL=ipc)(KEY=LISTENER_SCAN3)))
(DESCRIPTION=(ADDRESS=(PROTOCOL=tcp)(HOST=10.141.155.186)(PORT=1521))) 
(DESCRIPTION=(ADDRESS=(PROTOCOL=tcps)(HOST=10.141.155.186)(PORT=1523))) 
</pre></li>
<li>
<p>Check the listener resources to ensure that you have configured them all.</p>
<pre dir="ltr">
crsctl stat res -p |grep ENDPOINTS
</pre>
<p>The following output shows that they have all been configured, because each line has the <code dir="ltr">TCPS</code> flag.</p>
<pre dir="ltr">
ENDPOINTS=TCP:1521 TCPS:1523 &lt;= database listener
ENDPOINTS=TCP:1521 TCPS:1523 &lt;= listener_scan1
ENDPOINTS=TCP:1521 TCPS:1523 &lt;= listener_scan2
ENDPOINTS=TCP:1521 TCPS:1523 &lt;= listener_scan3 
</pre></li>
</ol>
</div>
<!-- class="sect2" -->
<a id="BABIFAEB"></a>
<div id="ASOAG10621" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">13.10.2</span> Step 2: Update the Local Listener Parameter on Each Oracle RAC Node</h3>
<p>PMON must send the endpoint values that are stored in the local listener to the scan listeners so that they can create the approprirate service handlers. In this next procedure, you will add the TCPS endpoints for the database node listeners that you had created in <a href="#BABBDBEJ">Step 1: Configure the TCPS Protocol Endpoints</a> to the local listener startup parameter on each Oracle RAC node. The local listener IP address is unique to each node. When you issue the <code dir="ltr">ALTER SYSTEM</code> statement, you must state the local instance SID value (for example, <code dir="ltr">sid = 'instance'</code>).</p>
<ol>
<li id="BABEAHBF">
<p>Select a node and identify the local listener endpoints.</p>
<pre dir="ltr">
lsnrctl status |grep PORT
</pre>
<p>Output similar to the following appears. You can identify the TCPS protocol endpoint by the <code dir="ltr">PROTOCOL</code> value.</p>
<pre dir="ltr">
Connecting to (ADDRESS=(PROTOCOL=tcp)(HOST=)(PORT=1521))
(DESCRIPTION=(ADDRESS=(PROTOCOL=tcps)(HOST=10.141.155.188)(PORT=1523))) &lt;= new TCPS endpoint
(DESCRIPTION=(ADDRESS=(PROTOCOL=tcp)(HOST=10.141.155.183)(PORT=1521)))
(DESCRIPTION=(ADDRESS=(PROTOCOL=tcp)(HOST=10.141.155.188)(PORT=1521))) 
</pre></li>
<li>
<p>Log into the database instance with the <code dir="ltr">SYSDBA</code> administrative privilege.</p>
<pre dir="ltr">
sqlplus / as sysdba
</pre></li>
<li>
<p>Check the value of the local listener.</p>
<pre dir="ltr">
SHOW PARAMETER LOCAL_LISTENER
</pre>
<p>Output similar to the following appears:</p>
<pre dir="ltr">
NAME TYPE VALUE
------------------------------------ ----------- ------------------------------
local_listener string (DESCRIPTION=(ADDRESS_LIST=(ADDRESS=(PROTOCOL=TCP)(HOST=10.141.155.188)(PORT=1521)))) 
</pre></li>
<li>
<p>Add the TCPS endpoint that you identified in Step <a href="#BABEAHBF">1</a> to the <code dir="ltr">local_listener</code> value. Ensure that you also set the SID to the local nodes instance name. Set the scope to memory so that changes can be verified before updating the spfile.</p>
<p>For example:</p>
<pre dir="ltr">
ALTER SYSTEM SET local_listener='(DESCRIPTION=(ADDRESS_LIST=(ADDRESS=(PROTOCOL=TCP)(HOST=10.141.155.188)(PORT=1521))(ADDRESS=(PROTOCOL=TCPS)(HOST=10.141.155.188)(PORT=1523))))' scope=memory sid='NETRAC1'; 
</pre></li>
<li>
<p>Check the value of the local listener again.</p>
<pre dir="ltr">
SHOW PARAMETER LOCAL_LISTENER
</pre>
<p>Output similar to the following should appear:</p>
<pre dir="ltr">
NAME TYPE VALUE
------------------------------------ ----------- ------------------------------
local_listener string (DESCRIPTION=(ADDRESS_LIST=(ADDRESS=(PROTOCOL=TCP)(HOST=10.141.155.188)(PORT=1521))(ADDRESS=(PROTOCOL=TCPS)(HOST=10.141.155.188)(PORT=1523)))) 
</pre>
<p>If the Oracle RAC cluster uses COST to restrict instance registration, then all local and node listener COST value lists must include TCPS. Without a TCPS rule, the scan listener TCPS handlers go into a blocked state. For more information, see Doc ID: 1537743.1 "Scan Listener TCPS Service Handlers are Blocked after Implementing COST on an SSL Cluster" on My Oracle Support (formerly Oracle<span class="italic">MetaLink</span>) at</p>
<p><code dir="ltr"><a href="https://support.oracle.com">https://support.oracle.com</a></code></p>
</li>
<li>
<p>Write the changes to the spfile by running an ALTER SYSTEM statement similar to the following:</p>
<pre dir="ltr">
ALTER SYSTEM SET LOCAL_LISTENER='(DESCRIPTION=(ADDRESS_LIST=(ADDRESS=(PROTOCOL=TCP)(HOST=10.141.155.188)(PORT=1521))(ADDRESS=(PROTOCOL=TCPS)(HOST=10.141.155.188)(PORT=1523))))' scope=both sid='NETRAC1'; 
</pre></li>
<li>
<p>Repeat these steps to update the remaining nodes until all nodes are properly registering their TCPS endpoints with the scan listeners.</p>
</li>
</ol>
</div>
<!-- class="sect2" -->
<a id="BABIEIII"></a>
<div id="ASOAG10622" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">13.10.3</span> Step 3: Create SSL Certificates and Wallets for the Cluster and for the Clients</h3>
<p>The choice and usage of a Certificate Authority (CA) for certificate signing depends on your site's policies. To make a successful SSL connection, the server and connecting clients must have unique SSL certifcates that are signed by the same trusted Certificate Authority. You should create the certificate requests for the cluster and for a test client that will connect to the database over SSL. Have these requests signed by the CA, and then build wallets using the signed user certificates and trusted root certificate. Note that the cluster and client wallets have unique identities but share the same trusted certificate. This is the proper wallet setup for an SSL connection.</p>
<p>This section contains:</p>
<ul>
<li>
<p><a href="#BABGIDID">Creating the SSL Certificate for Each Cluster and for the Test Client</a></p>
</li>
<li>
<p><a href="#BABJJHDF">Signing Each User Certificate</a></p>
</li>
</ul>
<a id="BABGIDID"></a>
<div id="ASOAG10623" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3"><span class="secnum">13.10.3.1</span> Creating the SSL Certificate for Each Cluster and for the Test Client</h4>
<ol>
<li>
<p>Create a directory to be used as the CA home. Restrict access of the CA home to the user or group of users that can authorize and sign digital certificates.</p>
<p>For example:</p>
<pre dir="ltr">
cd $ORACLE_BASE
mkdir CA; chmod 700 CA; cd CA;
pwd
/home/app/oracle/CA

export CA_HOME=/home/app/oracle/CA
</pre></li>
<li>
<p>In the CA home, use <code dir="ltr">orapki</code> to create the Certificate Authority wallet.</p>
<pre dir="ltr">
orapki wallet create -wallet $CA_HOME

Enter password: <span class="italic">CA_password</span>
Enter password again: <span class="italic">CA_password</span>
</pre>
<p>The <code dir="ltr">orapki</code> utility creates a default wallet that is populated with several well known trusted certificates. You do not need these certificates for this procedure, so you can remove them as follows:</p>
<pre dir="ltr">
orapki wallet remove -trusted_cert_all -wallet $CA_HOME -pwd [<span class="italic">CA_password</span>]
</pre></li>
<li>
<p>Create a self signed (root) certificate for the CA wallet.</p>
<p>For example:</p>
<pre dir="ltr">
orapki wallet add -wallet $CA_HOME -self_signed -dn "CN=Oracle test CA,O=Oracle,C=US" -keysize 1024 -validity 3650 -pwd [<span class="italic">CA_password</span>]
</pre>
<p>In this specification:</p>
<ul>
<li>
<p><code dir="ltr">dn</code> refers to the distinguished name, which can be any valid x509 formated name (for example, <code dir="ltr">-dn CN=Widget Corp.,C=US</code>).</p>
</li>
<li>
<p><code dir="ltr">keysize</code> sets the bit size of the key. The following values are valid: <code dir="ltr">512</code>, <code dir="ltr">1024</code>, or <code dir="ltr">2048</code>.</p>
</li>
<li>
<p><code dir="ltr">validity</code>, which is mandatory, specifies the number of days, starting from the current date, that this certificate will be valid.</p>
</li>
</ul>
</li>
<li>
<p>Extract the root CA certificate from the wallet.</p>
<p>This root certificate will be used as the trusted CA certificate in user or application wallets and can be distributed or published for users that are building PKCS12 wallets.</p>
<p>For example:</p>
<pre dir="ltr">
orapki wallet export -wallet $CA_HOME -dn "CN=Oracle test CA,O=Oracle,C=US" -cert testCAroot.cer -pwd [<span class="italic">CA_password</span>]
</pre>
<p>At this stage, the <code dir="ltr">$CA_HOME</code> now contains an <code dir="ltr">ewallet.p12</code> (the PKCS12 wallet) and a <code dir="ltr">testCAroot.cer base64</code> certificate.</p>
<pre dir="ltr">
ls -al

total 16
drwx------  2 psmith psmith 4096 Aug 23 15:15 .
drwxrwxr-x 11 psmith psmith 4096 Aug 23 13:54 ..
-rw-------  1 psmith psmith 2560 Aug 23 15:13 ewallet.p12
-rw-------  1 psmith psmith  706 Aug 23 15:15 testCAroot.cer
</pre></li>
<li>
<p>Ensure that the wallet was successfully created.</p>
<p>For example:</p>
<pre dir="ltr">
orapki wallet display -wallet $CA_HOME -summary
Enter wallet password: <span class="italic">CA_password</span>
 
Requested Certificates:
User Certificates:
Subject:        CN=Oracle test CA,O=Oracle,C=US
Trusted Certificates:
Subject:        CN=Oracle test CA,O=Oracle,C=US
</pre></li>
<li>
<p>Back up the wallet and password.</p>
</li>
</ol>
</div>
<!-- class="sect3" -->
<a id="BABJJHDF"></a>
<div id="ASOAG10624" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3"><span class="secnum">13.10.3.2</span> Signing Each User Certificate</h4>
<p>Using the CA wallet, the <code dir="ltr">orapki</code> utility can be used to sign digital certificate requests and provide authorized digital user certificates for different entities and processes in test environments. Repeat this process for each entity in the test environment that participates in PKI functionality. A valid wallet consists of a root CA certificate and the signed user certificate.</p>
<ol>
<li>
<p>Create a user wallet in a directory or location outside of the CA home.</p>
<p>For example:</p>
<pre dir="ltr">
cd ~
mkdir user_wallet; cd user_wallet
pwd

/home/user_wallet

export MY_WALLET=/home/user_wallet
orapki wallet create -wallet $MY_WALLET

Enter password: <span class="italic">user_password</span>
Enter password again: <span class="italic">user_password</span>
</pre>
<p>The <code dir="ltr">orapki</code> utility creates a wallet with several well known trusted certificates already installed. You do not need these certificates for this procedure, so you can remove them as follows:</p>
<pre dir="ltr">
orapki wallet remove -trusted_cert_all -wallet $MY_WALLET -pwd [<span class="italic">user_password</span>]
</pre></li>
<li>
<p>Create a user identity (user DN) and then a certificate request.</p>
<p>For example:</p>
<pre dir="ltr">
orapki wallet add -wallet $USER_WALLET -dn "CN=testuser" -keysize 1024 -pwd [<span class="italic">user_password</span>]
orapki wallet export -wallet $USER_WALLET -dn "CN=testuser" -request $USER_WALLET/testuser.req -pwd [<span class="italic">user_password</span>]
ls
ewallet.p12 testuser.req
</pre>
<p>At this stage, the <code dir="ltr">testuser</code> request can now be signed by the CA. Access to the CA home wallet and CA wallet password are needed for this step. After <code dir="ltr">testuser.req</code> is signed, then the output file <code dir="ltr">testuser.cer</code> is created.</p>
</li>
<li>
<p>Create the signed certificate.</p>
<p>For example:</p>
<pre dir="ltr">
orapki cert create -wallet $CA_HOME -request $MY_WALLET/testuser.req -cert $USER_WALLET/testuser.cer -validity 3650 -pwd [<span class="italic">CA_password</span>]

ls
ewallet.p12  testuser.cer  testuser.req
</pre></li>
<li>
<p>Import the root certificate (<code dir="ltr">testCAroot.cer</code>) and the signed user certificate (<code dir="ltr">testuser.cer</code>) into the user wallet.</p>
<p>The following example retrieves the root certificate from the <code dir="ltr">$CA_HOME</code>. Alternative, you can copy the certificate to the user's wallet directory and then import it locally.</p>
<pre dir="ltr">
orapki wallet add -wallet $USER_WALLET -trusted_cert -cert $CA_HOME/testCAroot.cer -pwd [<span class="italic">user_password</span>]
 
orapki wallet add -wallet $USER_WALLET -user_cert -cert $USER_WALLET/testuser.cer -pwd [<span class="italic">user_password</span>]
</pre></li>
<li>
<p>Check the completed wallet.</p>
<p>For example:</p>
<pre dir="ltr">
orapki wallet display -wallet $MY_WALLET -summary -pwd [<span class="italic">user_password</span>]
 
Requested Certificates:
User Certificates:
Subject:        CN=testuser
Trusted Certificates:
Subject:        CN=Oracle test CA,O=Oracle,C=US
</pre></li>
</ol>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="BABBIIDC"></a>
<div id="ASOAG10625" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">13.10.4</span> Step 4: Copy the Wallet to Each Cluster Node and Create an Obfuscated Wallet</h3>
<ol>
<li>
<p>After you create the cluster wallet in <a href="#BABIEIII">Step 3: Create SSL Certificates and Wallets for the Cluster and for the Clients</a>, copy the wallet to each node of the cluster.</p>
<p>There is no specific rule to wallet placement except that the wallet location should be accessable by both the database (PMON) and by the scan and local listeners which are normally running out of the Grid Infrastructure home.</p>
<p>This procedure assumes that you have copied the wallet to the following directory:</p>
<pre dir="ltr">
/u01/app/oracle/product/11.2.0.4/db_1/network/admin/wallet
</pre></li>
<li>
<p>Create the <code dir="ltr">cwallet.sso</code> file.</p>
<p>For example:</p>
<pre dir="ltr">
orapki wallet create -wallet /u01/app/oracle/product/11.2.0.4/db_1/network/admin/wallet -auto_login

Enter password: <span class="italic">password</span>
</pre>
<p>The <code dir="ltr">cwallet.sso</code> is an obfuscated mirror copy of the <code dir="ltr">ewallet.p12</code> and is the file that is accessed by PMON and listeners. If you create the <code dir="ltr">cwallet.sso</code> on the cluster, then you can copy it along with the <code dir="ltr">ewallet.p12</code> file to the wallet directory on each node. You can also create the <code dir="ltr">cwallet.sso</code> wallet in each node separately if <code dir="ltr">ewallet.p12</code> is already in place.</p>
</li>
<li>
<p>Ensure that the two wallets are in place.</p>
<p>For example:</p>
<pre dir="ltr">
ls -al
 
drwxr-xr-x. 2 oracle oracle 4096 Feb 7 11:12 .
drwxr-xr-x. 5 oracle oracle 4096 Feb 15 11:00 ..
-rw-------. 1 oracle oracle 2549 Feb 15 16:13 cwallet.sso
-rw-------. 1 oracle oracle 2472 Feb 7 11:11 ewallet.p12 
</pre></li>
</ol>
</div>
<!-- class="sect2" -->
<a id="BABJAGDJ"></a>
<div id="ASOAG10626" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">13.10.5</span> Step 5: Define Wallet Locations in the listener.ora and sqlnet.ora Files</h3>
<p>Both PMON and the listener processes of each node must be able to access the wallets. Each node's <code dir="ltr">sqlnet.ora</code> and <code dir="ltr">listener.ora</code> files must have the wallet locations defined.</p>
<ol>
<li>
<p>Edit the <code dir="ltr">$GRID_HOME/network/admin/listener.ora</code> file and add the following settings:</p>
<pre dir="ltr">
SSL_CLIENT_AUTHENTICATION = FALSE
 
WALLET_LOCATION =
(SOURCE =
(METHOD = FILE)
(METHOD_DATA =
(DIRECTORY = /u01/app/oracle/product/11.2.0.4/db_1/network/admin/wallet)
)
) 
</pre>
<p>This example uses the wallet directory described in <a href="#BABBIIDC">"Step 4: Copy the Wallet to Each Cluster Node and Create an Obfuscated Wallet"</a>. Listeners in a cluster normally run out of the Grid Infrastructure home directory.</p>
</li>
<li>
<p>Edit the database <code dir="ltr">$ORACLE_HOME/network/admin/sqlnet.ora</code> file and add the following settings:</p>
<pre dir="ltr">
SQLNET.AUTHENTICATION_SERVICES= (BEQ, TCPS)
 
SSL_VERSION = 0
 
SSL_CLIENT_AUTHENTICATION = FALSE
 
WALLET_LOCATION =
(SOURCE =
(METHOD = FILE)
(METHOD_DATA =
(DIRECTORY = /u01/app/oracle/product/11.2.0.4/db_1/network/admin/wallet)
)
) 
</pre>
<p>This example uses the wallet directory described in <a href="#BABBIIDC">"Step 4: Copy the Wallet to Each Cluster Node and Create an Obfuscated Wallet"</a>. Instances in a cluster normally run out of the database home directory.</p>
</li>
<li>
<p>Repeat this procedure for each node.</p>
</li>
</ol>
</div>
<!-- class="sect2" -->
<a id="BABDFBEB"></a>
<div id="ASOAG10627" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">13.10.6</span> Step 6: Restart the Database Instances and Listeners</h3>
<p>With the wallets in place and <code dir="ltr">.ora</code> files edited, you must restart the PMON and listener processes so that they can recognize the new wallet settings. With the restart the instances will also use the local_listener values that you added in <a href="#BABIFAEB">"Step 2: Update the Local Listener Parameter on Each Oracle RAC Node"</a>. Ensure that the scan listeners have the proper TCPS handlers, and if necessary, correct any discrepancies.</p>
<p>Restart commands are as follows:</p>
<pre dir="ltr">
srvctl stop listener
srvctl start listener
 
srvctl stop scan_listener
srvctl start scan_listener
 
srvctl stop database -d netrac
srvctl start database -d netrac
</pre></div>
<!-- class="sect2" -->
<a id="BABEHFHD"></a>
<div id="ASOAG10628" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">13.10.7</span> Step 7: Test the Configuration from a Cluster Node</h3>
<p>With the cluster environment configured for SSL the simplest way to quickly test it is to make an SSL connection on one of the cluster nodes.</p>
<ol>
<li>
<p>Log in to the computer that has one of the cluster nodes.</p>
</li>
<li>
<p>In the <code dir="ltr">tnsnames.ora</code> file for this node, create a connect descriptor that uses the scan listener TCPS endpoint.</p>
<p>For example:</p>
<pre dir="ltr">
NETRACSSL =
(DESCRIPTION =
(ADDRESS = (PROTOCOL = TCPS)(HOST = net-scan)(PORT = 1523))
(CONNECT_DATA =
(SERVER = DEDICATED)
(SERVICE_NAME = NETRAC.us.example.com)
)
) 
</pre></li>
<li>
<p>Use SQL*Plus to connect to this database instance using the TCPS connect descriptor.</p>
<p>For example:</p>
<pre dir="ltr">
sqlplus psmith@netracssl
Enter password: <span class="italic">password</span>
</pre></li>
</ol>
</div>
<!-- class="sect2" -->
<a id="BABICEDA"></a>
<div id="ASOAG10629" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">13.10.8</span> Step 8: Test the Configuration from a Remote Client</h3>
<ol>
<li>
<p>On the computer that is used for the remote client, create a wallet directory location.</p>
</li>
<li>
<p>Add this location information to the sqlnet.ora file for the remote client.</p>
<p>For example:</p>
<pre dir="ltr">
WALLET_LOCATION =
(SOURCE =
(METHOD = FILE)
(METHOD_DATA =
(DIRECTORY = C:\app\oracle\product\11.2.0.4\dbhome_1\NETWORK\ADMIN\wallet)
)
) 
</pre></li>
<li>
<p>Move the wallet that you created in <a href="#BABIEIII">"Step 3: Create SSL Certificates and Wallets for the Cluster and for the Clients"</a> to the remote client wallet directory.</p>
</li>
<li>
<p>On the remote client, create the <code dir="ltr">cwallet.sso</code>.</p>
<p>For example:</p>
<pre dir="ltr">
orapki wallet create -wallet . -auto_login
Enter wallet password: <span class="italic">password</span>
</pre></li>
<li>
<p>Check the wallet directory to ensure that the two files are there.</p>
<p>For example:</p>
<pre dir="ltr">
cd $ORACLE_HOME/network/admin/wallet
ls

cwallet.sso
ewallet.p12
</pre></li>
<li>
<p>In the <code dir="ltr">listener.ora</code> file, create a connect descriptor that uses the scan listener TCPS endpoint.</p>
<p>For example:</p>
<pre dir="ltr">
NETRACSSL =
(DESCRIPTION =
(ADDRESS = (PROTOCOL = TCPS)(HOST = net-scan)(PORT = 1523))
(CONNECT_DATA =
(SERVER = DEDICATED)
(SERVICE_NAME = NETRAC.us.example.com)
)
) 
</pre></li>
<li>
<p>Use SQL*Plus to connect to this database instance using the TCPS connect descriptor.</p>
<p>For example:</p>
<pre dir="ltr">
sqlplus psmith@netracssl
Enter password: <span class="italic">password</span>
</pre></li>
</ol>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" --></div>
<!-- class="chapter" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment2227">
<tr>
<td class="cellalignment2236">
<table class="cellalignment2232">
<tr>
<td class="cellalignment2231"><a href="asokerb.htm"><img width="24" height="24" src="../../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment2231"><a href="asowalet.htm"><img width="24" height="24" src="../../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;1996, 2016,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment2238">
<table class="cellalignment2230">
<tr>
<td class="cellalignment2231"><a href="../../index.htm"><img width="24" height="24" src="../../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment2231"><a href="../../nav/portal_booklist.htm"><img width="24" height="24" src="../../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment2231"><a href="toc.htm"><img width="24" height="24" src="../../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment2231"><a href="index.htm"><img width="24" height="24" src="../../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment2231"><a href="../../nav/mindx.htm"><img width="24" height="24" src="../../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment2231"><a href="../../dcommon/html/feedback.htm"><img width="24" height="24" src="../../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
</body>
</html>
