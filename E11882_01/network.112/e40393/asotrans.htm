<!DOCTYPE html>
<html lang="en" >
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1">
<meta charset="utf-8">
<title>Securing Stored Data Using Transparent&nbsp;Data&nbsp;Encryption</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Merged Version 1079" />
<meta name="dcterms.created" content="2016-03-03T15:46:21Z" />
<meta name="robots" content="all" />
<meta name="dcterms.title" content="Database Advanced Security Administrator's Guide" />
<meta name="dcterms.identifier" content="E40393-10" />
<meta name="dcterms.isVersionOf" content="ASOAG" />
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;1996, 2016,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved." />
<link rel="Start" href="../../index.htm" title="Home" type="text/html" />
<link rel="Copyright" href="../../dcommon/html/cpyr.htm" title="Copyright" type="text/html" />

<script type="application/javascript"  src="../../dcommon/js/headfoot.js"></script>
<script type="application/javascript"  src="../../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html" />
<link rel="Index" href="index.htm" title="Index" type="text/html" />
<link rel="Glossary" href="asogls.htm" title="Glossary" type="text/html" />
<link rel="Prev" href="asopart2.htm" title="Previous" type="text/html" />
<link rel="Next" href="asoconfg.htm" title="Next" type="text/html" />
<link rel="alternate" href="../e40393.pdf" title="PDF version" type="application/pdf" />
<link rel="schema.dcterms" href="http://purl.org/dc/terms/" />
<link rel="stylesheet" href="../../dcommon/css/fusiondoc.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/header.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/footer.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/fonts.css">
<link rel="stylesheet" href="../../dcommon/css/foundation.css">
<link rel="stylesheet" href="../../dcommon/css/codemirror.css">
<link rel="stylesheet" type="text/css" title="Default" href="../../nav/css/html5.css">
<link rel="stylesheet" href="../../dcommon/css/respond-480-tablet.css">
<link rel="stylesheet" href="../../dcommon/css/respond-768-laptop.css">
<link rel="stylesheet" href="../../dcommon/css/respond-1140-deskop.css">
<script type="application/javascript" src="../../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">18/35</span> <!-- End Header -->
<div id="ASOAG600" class="chapter"><a id="g1011122"></a>
<h1 class="chapter"><span class="secnum">8</span> Securing Stored Data Using Transparent&nbsp;Data&nbsp;Encryption</h1>
<p>Transparent Data Encryption(TDE) enables you to encrypt sensitive data, such as credit card numbers, stored in tables and tablespaces. Encrypted data is transparently decrypted for a database user or application that has access to data. TDE helps protect data stored on media in the event that the storage media or data file gets stolen.</p>
<p>This chapter is divided into the following topics:</p>
<ul>
<li>
<p><a href="#BABGDBEF">About Transparent Data Encryption</a></p>
</li>
<li>
<p><a href="#BABGHIDE">Using Transparent Data Encryption</a></p>
</li>
<li>
<p><a href="#BABIBBFH">Managing Transparent Data Encryption</a></p>
</li>
<li>
<p><a href="#CJAHCCHC">Example: Getting Started with TDE Column Encryption and TDE Tablespace Encryption</a></p>
</li>
<li>
<p><a href="#CHDJJAJB">Troubleshooting Transparent Data Encryption</a></p>
</li>
<li>
<p><a href="#CJAFGBBH">Transparent Data Encryption Reference Information</a></p>
</li>
</ul>
<a id="BABGDBEF"></a>
<div id="ASOAG9515" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1"><span class="secnum">8.1</span> About Transparent Data Encryption</h2>
<p>Oracle Database uses <a id="sthref210"></a>authentication, authorization, and auditing mechanisms to secure data in the database, but not in the operating system data files where data is stored. To protect these data files, Oracle Database provides Transparent Data Encryption (TDE). TDE encrypts sensitive data stored in data files. To prevent unauthorized decryption, TDE stores the encryption keys in a security module external to the database.</p>
<p>Database users and applications do not need to manage key storage or create auxiliary tables, views, and triggers. An application that processes sensitive data can use TDE to provide strong data encryption with little or no change to the application.</p>
<p>Use TDE to protect confidential data, such as credit card and social security numbers, stored in table columns. You can also use TDE to encrypt entire tablespaces.</p>
<p>This section contains the following topics:</p>
<ul>
<li>
<p><a href="#BABFGJAG">Benefits of Using Transparent Data Encryption</a></p>
</li>
<li>
<p><a href="#CHDHDFBD">Types of Transparent Data Encryption</a></p>
</li>
</ul>
<a id="BABFGJAG"></a>
<div id="ASOAG9516" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">8.1.1</span> Benefits of Using Transparent Data Encryption</h3>
<p>Transparent Data Encryption (TDE) has the following advantages:</p>
<ul>
<li>
<p>As a security administrator, you can be sure that sensitive data is safe in case the storage media or data file gets stolen.</p>
</li>
<li>
<p>Implementing TDE helps you address security-related regulatory compliance issues.</p>
</li>
<li>
<p>You do not need to create triggers or views to decrypt data for the authorized user or application. Data from tables is transparently decrypted for the database user and application.</p>
</li>
<li>
<p>Database users and applications need not be aware of the fact that the data they are accessing is stored in encrypted form. Data is transparently decrypted for the database users and applications.</p>
</li>
<li>
<p>Applications need not be modified to handle encrypted data. Data encryption and decryption is managed by the database.</p>
</li>
<li>
<p>Key management operations are automated. The user or application does not need to manage encryption keys.</p>
</li>
</ul>
</div>
<!-- class="sect2" -->
<a id="CHDHDFBD"></a>
<div id="ASOAG10136" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">8.1.2</span> Types of Transparent Data Encryption</h3>
<p>Transparent Data Encryption (TDE) column encryption enables you to encrypt sensitive data stored in select table columns. TDE tablespace encryption enables you to encrypt all data stored in a tablespace.</p>
<p>Both TDE column encryption and TDE tablespace encryption use a two-tiered, key-based architecture. Even if the encrypted data is retrieved, it cannot be understood until authorized decryption occurs, which is automatic for users authorized to access the table.</p>
<p>The following sections discuss TDE column encryption and TDE tablespace encryption:</p>
<ul>
<li>
<p><a href="#CHDDIADD">TDE Column Encryption</a></p>
</li>
<li>
<p><a href="#CHDHDJGD">TDE Tablespace Encryption</a></p>
</li>
</ul>
<a id="CHDDIADD"></a>
<div id="ASOAG10137" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3"><span class="secnum">8.1.2.1</span> TDE Column Encryption</h4>
<p>TDE column encryption is used to protect confidential data, such as credit card and social security numbers, stored in table columns. TDE column encryption uses the two-tiered, key-based architecture to transparently encrypt and decrypt sensitive table columns. The TDE master encryption key is stored in an external security module, which can be an Oracle wallet or Hardware Security Module (HSM). This master encryption key is used to encrypt the table key, which in turn is used to encrypt and decrypt data in the table column.</p>
<p><a href="#CIHJECGF">Figure 8-1</a>shows an overview of the TDE column encryption process.</p>
<div id="ASOAG10138" class="figure">
<p class="titleinfigure"><a id="CIHJECGF"></a>Figure 8-1 TDE Column Encryption Overview</p>
<img width="654" height="484" src="img/transdata.gif" alt="Description of Figure 8-1 follows" /><br />
<a id="sthref211" href="img_text/transdata.htm">Description of ''Figure 8-1 TDE Column Encryption Overview''</a><br />
<br /></div>
<!-- class="figure" -->
<p>As shown in <a href="#CIHJECGF">Figure 8-1</a>, the master encryption key is stored in an external security module that is outside the database and accessible only to the security administrator. For this external security module, Oracle uses an Oracle wallet or Hardware Security Module (HSM), as described in this chapter. Storing the master encryption key in this way prevents its unauthorized use.</p>
<p>Using an external security module (wallet/HSM) separates ordinary program functions from encryption operations, making it possible to divide duties between database administrators and security administrators. Security is enhanced because the wallet password can be unknown to the database administrator, requiring the security administrator to provide the password.</p>
<p>When a table contains encrypted columns, a single table key is used regardless of the number of encrypted columns. The table keys for all tables are encrypted with the database server master encryption key and stored in a dictionary table in the database. No keys are stored in the clear.</p>
</div>
<!-- class="sect3" -->
<a id="CHDHDJGD"></a>
<div id="ASOAG10139" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3"><span class="secnum">8.1.2.2</span> TDE Tablespace Encryption</h4>
<p>TDE tablespace encryption enables you to encrypt an entire tablespace. All objects created in the encrypted tablespace are automatically encrypted. TDE tablespace encryption is useful if you want to secure sensitive data in tables. You do not need to perform a granular analysis of each table column to determine the columns that need encryption.</p>
<p>In addition, TDE tablespace encryption takes advantage of bulk encryption and caching to provide enhanced performance. While the actual performance impact on applications can vary, the performance overhead is roughly estimated to be in between 5% and 8%.</p>
<p>TDE tablespace encryption is a good alternative to TDE column encryption if your tables contain sensitive data in multiple columns, or if you want to protect the entire table and not just individual columns.</p>
<p>TDE tablespace encryption encrypts all data that is stored in an encrypted tablespace and its corresponding redo data. This includes internal large objects (<code dir="ltr">LOB</code>s) such as <code dir="ltr">BLOB</code>s and <code dir="ltr">CLOB</code>s. TDE tablespace encryption does not encrypt data that is stored outside the tablespace. For example, <code dir="ltr">BFILE</code> data is not encrypted as it is stored outside the database. If you create a table with a <code dir="ltr">BFILE</code> column in an encrypted tablespace, then this particular column will not be encrypted. However, SecureFile LOBs are supported from Oracle Database 11<span class="italic">g</span> Release 1 (11.1).</p>
<p>All data in an encrypted tablespace is stored in encrypted format on the disk. Data is transparently decrypted for an authorized user having the necessary privileges to view or modify the data. A database user or application does not need to know if the data in a particular table is encrypted on the disk. In the event that the data files on a disk or backup media gets stolen, the data is not compromised.</p>
<p>TDE tablespace encryption uses the two-tiered, key-based architecture to transparently encrypt (and decrypt) tablespaces. The TDE master key is stored in an external security module (Oracle Wallet or HSM). This TDE master key is used to encrypt the TDE tablespace encryption key, which in turn is used to encrypt and decrypt data in the tablespace.</p>
<p><a href="#CHDGCJAE">Figure 8-2</a> shows an overview of the TDE tablespace encryption process.</p>
<div id="ASOAG10140" class="figure">
<p class="titleinfigure"><a id="CHDGCJAE"></a>Figure 8-2 TDE Tablespace Encryp<a id="sthref212"></a>tion</p>
<img width="647" height="460" src="img/transdata_1.gif" alt="This illustration is described in the text." /><br /></div>
<!-- class="figure" -->
<div class="infobox-note">
<p class="notep1">Note:</p>
The encrypted data is protected during operations like <code dir="ltr">JOIN</code> and <code dir="ltr">SORT</code>. This means that the data is safe when it is moved to temporary tablespaces. Data in undo and redo logs is also protected.</div>
<p>TDE tablespace encryption also allows <a id="sthref213"></a>index range scans on data in encrypted tablespaces. This is not possible with TDE column encryption.</p>
<p>Oracle Database 11<span class="italic">g</span> Release 2 (11.2) implements the following enhancements to TDE tablespace encryption:</p>
<ul>
<li>
<p>A unified master encryption key is used for both TDE column encryption and TDE tablespace encryption.</p>
</li>
<li>
<p>You can reset the unified master encryption key. This provides enhanced security and helps meet security and compliance requirements.</p>
</li>
</ul>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="BABGHIDE"></a>
<div id="ASOAG9521" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1"><span class="secnum">8.2</span> Using Transparent Data Encryption</h2>
<p>The <a id="ABC1249163"></a>following sections discuss using Transparent Data Encryption (TDE):</p>
<ul>
<li>
<p><a href="#CHDCCICE">Enabling Transparent Data Encryption</a></p>
</li>
<li>
<p><a href="#BABDFHHH">Setting and Resetting the Master Encryption Key</a></p>
</li>
<li>
<p><a href="#BABEBFBA">Opening and Closing the Encrypted Wallet</a></p>
</li>
<li>
<p><a href="#CHDCJFEJ">Encrypting Columns in Tables</a></p>
</li>
<li>
<p><a href="#CJAFEAII">Encrypting Entire Tablespaces</a></p>
</li>
<li>
<p><a href="#CJAGFAFB">Using Hardware Security Modules with TDE</a></p>
</li>
<li>
<p><a href="#CHDFFJCJ">Using Transparent Data Encryption with Oracle RAC</a></p>
</li>
</ul>
<a id="CHDCCICE"></a>
<div id="ASOAG9522" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">8.2.1</span> Enabling Transparent Data Encryption</h3>
<p>TDE column encryption was first introduced in Oracle Database 10<span class="italic">g</span> release 2 (10.2). To use this feature, you must be running Oracle Database 10<span class="italic">g</span> release 2 (10.2) or higher.</p>
<p>TDE tablespace encryption was introduced in Oracle Database 11g release 1 (11.1). To use this feature, you must be running Oracle Database 11<span class="italic">g</span> release 1 (11.1) or higher.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
Oracle Database 11<span class="italic">g</span> Release 1 (11.1) and higher versions ensure greater security by protecting data in temporary tablespaces during operations such as <code dir="ltr">JOIN</code> and <code dir="ltr">SORT</code>. The data in temporary tablespaces stays encrypted during these operations.</div>
<p>To start using TDE, the security administrator must create a wallet and set a master key. The wallet can be the default database wallet shared with other Oracle Database components, or a separate wallet specifically used by TDE. Oracle strongly recommends that you use a separate wallet to store the master encryption key.</p>
<a id="BABHFDHA"></a>
<div id="ASOAG9523" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3"><span class="secnum">8.2.1.1</span> Specifying a Wallet Location for Transparent Data Encryption</h4>
<p>If you wish to use a wallet specifically for TDE, then you must specify a wallet location in the <code dir="ltr">sqlnet.ora</code> file by using the <code dir="ltr"><a id="sthref214"></a>ENCRYPTION_WALLET_LOCATION</code> parameter. Oracle recommends that you use the <code dir="ltr">ENCRYPTION_WALLET_LOCATION</code> parameter to specify a wallet location for TDE.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="asoappa.htm#i634447">"Sample sqlnet.ora File"</a>for an example of the syntax used to set this parameter</div>
</div>
<!-- class="sect3" -->
<div id="ASOAG9524" class="sect3"><!-- infolevel="all" infotype="General" --><a id="sthref215"></a>
<h4 class="sect3"><span class="secnum">8.2.1.2</span> Using Wallets with Au<a id="sthref216"></a><a id="sthref217"></a>tomatic Login Enabled</h4>
<p>The external security module can use wallets with the automatic login feature enabled. These wallets remain open all of the time. The security administrator does not have to reopen the wallet after a database instance has been restarted. If your environment does not require the extra security provided by a wallet that must be explicitly opened for use, then you may use an auto login wallet.</p>
<p>You can also choose to create a local auto login wallet. Local auto login wallets cannot be moved to another computer. They must be used on the host on which they are created.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<p><a href="#CHDCCHBH">"Using an Auto Login Wallet"</a> for more information on auto login wallets.</p>
</div>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="BABDFHHH"></a>
<div id="ASOAG9525" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">8.2.2</span> Setting and Resetting the<a id="sthref218"></a> Master Encryption Key</h3>
<p>The master encryption key is stored in an external security module, and it is used to protect the table keys and tablespace encryption keys. By default, the master encryption key is a random key generated by Transparent Data Encryption (TDE). It can also be an existing key pair from a PKI certificate designated for encryption. To use TDE with PKI key pairs, the issuing certificate authority must be able to issue X.509v3 certificates with the key usage field marked for encryption.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
PKI-based encryption does not work with TDE tablespace encryption or hardware security modules. To know more about hardware security modules, refer to <a href="#CJAGFAFB">"Using Hardware Security Modules with TDE"</a>.</div>
<p>Neither key type is more secure, but if you have already deployed PKI within your organization, then you can leverage such PKI services as key escrow and recovery. However, encryption using current PKI algorithms requires significantly more system resources than symmetric key encryption. Using a PKI key pair as a master encryption key may result in greater performance degradation when accessing encrypted columns in the database.</p>
<p>Use the <code dir="ltr">ALTER SYSTEM</code> command to set or reset (<code dir="ltr">rekey</code>) the master encryption key. The following sections discuss setting and resetting the master encryption key.</p>
<a id="BABCCDHA"></a>
<div id="ASOAG9526" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3"><span class="secnum">8.2.2.1</span> Setting the Master Encryption Key</h4>
<p>Before you can encrypt or decrypt database columns or tablespaces, you must generate a master encryption key. Oracle Database 11<span class="italic">g</span> Release 2 (11.2) uses the same master encryption key for both TDE column encryption and TDE tablespace encryption.</p>
<p><a id="BABIJJHH"></a>To set the master encryption key, use the following command:</p>
<pre dir="ltr">
SQL&gt; ALTER SYSTEM SET<a id="sthref219"></a> ENCRYPTION KEY ["<span class="italic">certificate_ID</span>"] IDENTIFIED BY <span class="italic">"password"</span>
</pre>
<p>where</p>
<ul>
<li>
<p><code dir="ltr"><span class="codeinlineitalic">certificate_ID</span></code> is an optional string containing the unique identifier of a certificate stored in the Oracle wallet. Use this parameter if you intend to use your PKI private key as your master encryption key. This parameter has no default setting. Enclose the certificate_ID in double quotation marks (" ").</p>
<p>You can search for a <code dir="ltr"><span class="codeinlineitalic">certificate_ID</span></code> by querying the <code dir="ltr">V$WALLET</code> fixed view when the wallet is open. Only certificates that can be used as master encryption keys by TDE are shown.</p>
</li>
<li>
<p><code dir="ltr"><span class="codeinlineitalic">password</span></code> is the mandatory wallet password for the security module, with no default setting. It is case sensitive. Enclose the password string in double quotation marks (" ").</p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink SQLRF" href="../../server.112/e41084/toc.htm"><span class="italic">Oracle Database SQL Reference</span></a> for the rules related to supplying passwords</div>
<p>The wallet location specified by the <code dir="ltr">ENCRYPTION_WALLET_LOCATION</code> parameter, in the <code dir="ltr"><a id="sthref220"></a>sqlnet.ora</code> parameter file, is used to create the master encryption key. If the <code dir="ltr">ENCRYPTION_WALLET_LOCATION</code> parameter is not present in the <code dir="ltr">sqlnet.ora</code> file, then the <code dir="ltr">WALLET_LOCATION</code> value is used. A new wallet is created if one does not exist already.</p>
<p>If no wallet location is specified in the <code dir="ltr">sqlnet.ora</code> file, then the default database wallet location is used. The default database wallet location is <code dir="ltr"><span class="codeinlineitalic">ORACLE_BASE</span></code><code dir="ltr">/admin/</code><code dir="ltr"><span class="codeinlineitalic">DB_UNIQUE_NAME</span></code><code dir="ltr">/wallet</code> or <code dir="ltr"><span class="codeinlineitalic">ORACLE_HOME</span></code><code dir="ltr">/admin/</code><code dir="ltr"><span class="codeinlineitalic">DB_UNIQUE_NAME</span></code><code dir="ltr">/wallet.</code> Here, <code dir="ltr"><span class="codeinlineitalic">DB_UNIQUE_NAME</span></code> is the unique name of the database specified in the initialization parameter file.</p>
<p>If an existing auto login wallet is present at the expected wallet location, then a new wallet is not created.</p>
</div>
<!-- class="sect3" -->
<a id="BABJCHBG"></a>
<div id="ASOAG9527" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3"><span class="secnum">8.2.2.2</span> Resetting the Master Encryption Key</h4>
<p>Reset/Regenerate the master encryption key only if it has been compromised or as per the security policies of the organization. You should back up the wallet before resetting the master encryption key.</p>
<p>Frequent master encryption key regeneration does not necessarily enhance system security. Security modules can store a large number of keys. However, this number is not unlimited. Frequent master encryption key regeneration can exhaust all available storage space.</p>
<p>To reset the master encryption key, use the SQL syntax as shown in <a href="#BABCCDHA">"Setting the Master Encryption Key"</a>.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
If you are resetting the master encryption key for a wallet that has a<a id="sthref221"></a><a id="sthref222"></a>uto login enabled, then you must ensure that both the auto login wallet, identified by the <code dir="ltr">.sso</code> file, and the encryption wallet, identified by the <code dir="ltr">.p12</code> file, are present before issuing the command to reset the master encryption key.</div>
<p>The <code dir="ltr">ALTER SYSTEM SET ENCRYPTION KEY</code> command is a data definition language (DDL) command requiring the <code dir="ltr">ALTER SYSTEM</code> privilege, and it automatically commits any pending transactions. <a href="#BABHFBIC">Example 8-1</a> shows a sample usage of this command.</p>
<div id="ASOAG10141" class="example">
<p class="titleinexample"><a id="BABHFBIC"></a>Example 8-1 Setting or Resetting the Master Encryption Key To Use a PKI-Based Private Key</p>
<pre dir="ltr">
SQL&gt; ALTER SYSTEM SET ENCRYPTION KEY "j23lm781098dhb345sm" IDENTIFIED BY "<span class="italic">password</span>";
</pre></div>
<!-- class="example" -->
<p>Here, <code dir="ltr">j23lm781098dhb345sm</code> is the certificate ID and <code dir="ltr"><span class="codeinlineitalic">password</span></code> is the wallet password.</p>
<p>For PKI-based keys, <a href="asogls.htm#BEIDDABD"><span class="xrefglossterm">certificate revocation lists</span></a> are not enforced as enforcing certificate revocation may lead to losing access to all encrypted information in the database. However, you cannot use the same certificate to create the master key again.</p>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="BABEBFBA"></a>
<div id="ASOAG9528" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">8.2.3</span> Opening and Closing the Encrypted Wallet</h3>
<p>The<a id="sthref223"></a> database must load the master encryption key into memory before it can encrypt or decrypt columns/tablespaces. Opening the wallet allows the database to access the master encryption key. Use the following <code dir="ltr">ALTER SYSTEM</code> command to explicitly open the wallet:</p>
<pre dir="ltr">
<a id="sthref224"></a>SQL&gt; ALTER SYSTEM SET ENCRYPTION <a id="sthref225"></a>WALLET OPEN IDENTIFIED BY <span class="italic">"password</span>"
</pre>
<p>where <code dir="ltr"><span class="codeinlineitalic">password</span></code> is the password to open the wallet. Enclose the password string in double quotation marks (" ").</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
The password to open the wallet is the password that you specify for creating the master encryption key. This is discussed under <a href="#BABCCDHA">"Setting the Master Encryption Key"</a> .</div>
<p>Once the wallet has been opened, it remains open until you shut down the database instance, or close it explicitly by issuing the following command:</p>
<pre dir="ltr">
SQL&gt; ALTER SYSTEM SET ENCRYPTION WALLET CLOSE IDENTIFIED BY "password"
</pre>
<p>Closing the wallet disables all encryption and decryption operations. Any attempt to encrypt/decrypt data or access encrypted data results in the following error:</p>
<pre dir="ltr">
ORA-28365: wallet is not open
</pre>
<p>Each time you restart a database instance, you must issue the <code dir="ltr">ALTER SYSTEM SET ENCRYPTION WALLET OPEN IDENTIFIED BY</code> <code dir="ltr"><span class="codeinlineitalic">"password"</span></code> command to reenable encryption and decryption operations.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
Auto login wallets are opened automatically and do not need to be opened explicitly.
<p>In case an auto login wallet needs to be closed, it can be closed with the following command:</p>
<pre dir="ltr">
SQL&gt; ALTER SYSTEM SET ENCRYPTION WALLET CLOSE
</pre>
<p>No password is required to close an auto login wallet.</p>
</div>
<p>If the user does not have the <code dir="ltr">ALTER SYSTEM</code> privilege, or the wallet is unavailable, or an incorrect password is given, then the command returns an error and exits. If the wallet is already open, the command returns an error and takes no action. <a href="#BABFIIHJ">Example 8-2</a> shows an example of each usage case.</p>
<div id="ASOAG10142" class="example">
<p class="titleinexample"><a id="BABFIIHJ"></a>Example 8-2 Opening the External Security Module Wallet with ALTER SYSTEM</p>
<pre dir="ltr">
SQL&gt; --Successfully opening the wallet
SQL&gt; ALTER SYSTEM SET ENCRYPTION WALLET OPEN IDENTIFIED BY "U83j10LLt8v";
Wallet opened.

SQL&gt; --Trying to open a wallet that is already open 
SQL&gt; ALTER SYSTEM SET ENCRYPTION WALLET OPEN IDENTIFIED BY "U83j10LLt8v";
ERROR at line 1:
ORA-28354: wallet already open 

SQL&gt; --Trying to open the wallet with an incorrect password
SQL&gt; ALTER SYSTEM SET ENCRYPTION WALLET OPEN IDENTIFIED BY "U93j10LLt8v";
ERROR at line 1:
ORA-28353: failed to open wallet
</pre></div>
<!-- class="example" --></div>
<!-- class="sect2" -->
<a id="CHDCJFEJ"></a>
<div id="ASOAG10143" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">8.2.4</span> Encrypting Columns in Tables</h3>
<p>The following sections discuss using TDE column encryption:</p>
<ul>
<li>
<p><a href="#BABDACEG">Creating Tables with Encrypted Columns</a></p>
</li>
<li>
<p><a href="#BABBDHED">Encrypting Columns in Existing Tables</a></p>
</li>
<li>
<p><a href="#CHDCGBEA">Creating an Index on an Encrypted Column</a></p>
</li>
<li>
<p><a href="#BABDJEJJ">Adding or Removing Salt from an Encrypted Column</a></p>
</li>
<li>
<p><a href="#BABJEIIC">Changing the Encryption Key or Algorithm for Tables with Encrypted Columns</a></p>
</li>
<li>
<p><a href="#BABGJEBA">Data Types That Can Be Encrypted with TDE Column Encryption</a></p>
</li>
<li>
<p><a href="#CHDHAHAB">Restrictions on Using TDE Column Encryption</a></p>
</li>
</ul>
<a id="BABDACEG"></a>
<div id="ASOAG9529" class="sect3">
<h4 class="sect3"><span class="secnum">8.2.4.1</span> Creating Tables with Encrypted <a id="sthref226"></a>Columns</h4>
<p>To create relational tables with encrypted columns, specify the SQL <code dir="ltr">ENCRYPT</code> clause when you define database columns with the <code dir="ltr">CREATE TABLE</code> statement.</p>
<p>This section contains the following topics:</p>
<ul>
<li>
<p><a href="#BABGGGJA">Creating a Table with an Encrypted Column</a></p>
</li>
<li>
<p><a href="#CHDGEFEC">Creating a Table with an Encrypted Column Using a Nondefault Algorithm and No Salt</a></p>
</li>
<li>
<p><a href="#CHDDAEIG">Using the NOMAC Parameter to Save Disk Space and Improve Performance</a></p>
</li>
<li>
<p><a href="#BABGEFEJ">Creating an Encrypted Column in an External Table</a></p>
</li>
</ul>
<a id="BABGGGJA"></a>
<div id="ASOAG9530" class="sect4">
<h5 class="sect4"><span class="secnum">8.2.4.1.1</span> Creating a Table with an Encrypted Column</h5>
<p>By default, TDE uses the <code dir="ltr">AES</code> encryption algorithm with a 192-bit key length (<code dir="ltr">AES192</code>). If you encrypt a table column without specifying an algorithm, the column is encrypted using the <code dir="ltr">AES192</code> algorithm.</p>
<p>TDE adds <a href="asogls.htm#BEICGDDD"><span class="xrefglossterm">salt</span></a> to cleartext before encrypting it. This makes it harder for attackers to steal data through a brute force attack. TDE also adds a Message Authentication Code (MAC) to the data for integrity checking. The <code dir="ltr">SHA-1</code> integrity algorithm is used by default.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
If there are multiple encrypted columns in a table, then all of these columns must use the same pair of encryption and integrity algorithms.
<p>Salt is specified at the column level. This means that an encrypted column in a table can choose not to use salt irrespective of whether other encrypted columns in the table use salt or not.</p>
</div>
<p><a href="#BABBJGIG">Example 8-3</a> creates a new table with an encrypted column. The column is encrypted using the default encryption algorithm (<code dir="ltr">AES192</code>). Salt and MAC are added by default.</p>
<div id="ASOAG10144" class="example">
<p class="titleinexample"><a id="BABBJGIG"></a>Example 8-3 Creating a New Table with an Encrypted Column Using the Default Algorithm (AES192)</p>
<pre dir="ltr">
CREATE TABLE employee (
     first_name VARCHAR2(128),
     last_name VARCHAR2(128),
     empID NUMBER,
     salary NUMBER(6) <span class="bold">ENCRYPT</span>
);
</pre></div>
<!-- class="example" --></div>
<!-- class="sect4" -->
<a id="CHDGEFEC"></a>
<div id="ASOAG9531" class="sect4">
<h5 class="sect4"><span class="secnum">8.2.4.1.2</span> Creating a Table with an Encrypted Column Using a Nondefault Algorithm and No Salt</h5>
<p>By default, TDE adds <a href="asogls.htm#BEICGDDD"><span class="xrefglossterm">salt</span></a> to cleartext before encrypting it. This makes it harder for attackers to steal data through a brute force attack. However, if you plan to index the encrypted column, you must use <code dir="ltr">NO SALT</code>.</p>
<p>TDE also enables you to specify a nondefault encryption algorithm. You can choose from one of the following algorithms:</p>
<ul>
<li>
<p><code dir="ltr">3DES168</code></p>
</li>
<li>
<p><code dir="ltr">AES128</code></p>
</li>
<li>
<p><code dir="ltr">AES192</code> (default)</p>
</li>
<li>
<p><code dir="ltr">AES256</code></p>
</li>
</ul>
<p><a href="#CHDGEADJ">Example 8-4</a> shows how to specify the <code dir="ltr">NO SALT</code> parameter with the SQL <code dir="ltr">ENCRYPT</code> clause (<code dir="ltr">empID NUMBER ENCRYPT NO SALT</code>). It also shows the syntax for specifying a different encryption algorithm (<code dir="ltr">salary NUMBER(6) ENCRYPT USING '3DES168'</code>). Note that the string which specifies the algorithm must be enclosed in single quotation marks (' ').</p>
<p>The <code dir="ltr">empID</code> and <code dir="ltr">salary</code> columns will both use the <code dir="ltr">3DES168</code> encryption algorithm. This is because all encrypted columns in a table must use the same encryption algorithm. The <code dir="ltr">salary</code> column will use salt by default. The <code dir="ltr">empID</code> column will not use salt as the <code dir="ltr">NO SALT</code> option has been specified for it.</p>
<div id="ASOAG10145" class="example">
<p class="titleinexample"><a id="CHDGEADJ"></a>Example 8-4 Creating a New Table with an Encrypted Column Using 3DES168 and NO SALT</p>
<pre dir="ltr">
CREATE TABLE employee (
     first_name VARCHAR2(128),
     last_name VARCHAR2(128),
     empID NUMBER <span class="bold">ENCRYPT NO SALT</span>,
     salary NUMBER(6) <span class="bold">ENCRYPT USING '3DES168'</span>
);
</pre></div>
<!-- class="example" --></div>
<!-- class="sect4" -->
<a id="CHDDAEIG"></a>
<div id="ASOAG10146" class="sect4">
<h5 class="sect4"><span class="secnum">8.2.4.1.3</span> Using t<a id="sthref227"></a>he NOMAC Parameter to Save Disk Space and Improve Performance</h5>
<p>The <code dir="ltr">NOMAC</code> parameter enables you to skip the integrity check performed by TDE. This saves 20 bytes of disk space per encrypted value. If the number of rows and encrypted columns in the table is large, then this adds up to a significant amount of disk space.</p>
<p>The <code dir="ltr">NOMAC</code> parameter also reduces the performance overheads associated with TDE. Using the <code dir="ltr">NOMAC</code> parameter causes the integrity check to be skipped during encryption and decryption operations. This saves processing cycles and leads to faster performance.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
TDE uses the <code dir="ltr">SHA-1</code> integrity algorithm by default. All encrypted columns in a table must use the same integrity algorithm. If you already have a table column using the <code dir="ltr">SHA-1</code> algorithm, then you cannot use the <code dir="ltr">NOMAC</code> parameter to encrypt another column in the same table.
<p>You can change the integrity algorithm used by all encrypted columns in a table using the <code dir="ltr">ALTER TABLE....REKEY...</code> command. See <a href="#CHDDAFEG">Example 8-6</a> for an example.</p>
</div>
<p><a href="#CHDGCAIG">Example 8-5</a> creates a table with an encrypted column. The <code dir="ltr">empID</code> column is encrypted using the <code dir="ltr">NOMAC</code> parameter.</p>
<div id="ASOAG10147" class="example">
<p class="titleinexample"><a id="CHDGCAIG"></a>Example 8-5 Using the NOMAC parameter in a CREATE TABLE statement</p>
<pre dir="ltr">
CREATE TABLE employee (
     first_name VARCHAR2(128),
     last_name VARCHAR2(128),
     empID NUMBER <span class="bold">ENCRYPT 'NOMAC' NO SALT</span> ,
     salary NUMBER(6)
);
</pre></div>
<!-- class="example" -->
<p><a href="#CHDDAFEG">Example 8-6</a> shows how to change the integrity algorithm for encrypted columns in a table. The encryption algorithm is set to <code dir="ltr">3DES168</code> and the integrity algorithm is set to <code dir="ltr">SHA-1</code>. The second <code dir="ltr">ALTER TABLE</code> statement sets the integrity algorithm to <code dir="ltr">NOMAC</code>.</p>
<div id="ASOAG10536" class="example">
<p class="titleinexample"><a id="CHDDAFEG"></a>Example 8-6 Changing the Integrity Algorithm for a Table</p>
<pre dir="ltr">
SQL&gt; ALTER TABLE EMPLOYEE REKEY USING '3DES168' '<span class="bold">SHA-1</span>';

Table altered.
SQL&gt; ALTER TABLE EMPLOYEE REKEY USING '3DES168' '<span class="bold">NOMAC</span>';

Table altered.
</pre></div>
<!-- class="example" --></div>
<!-- class="sect4" -->
<a id="BABGEFEJ"></a>
<div id="ASOAG9532" class="sect4">
<h5 class="sect4"><span class="secnum">8.2.4.1.4</span> Creating an Encrypted Column in an External Table</h5>
<p>The external table feature enables you to access data in external sources as if the data were in a database table. External tables can be updated using the <code dir="ltr">ORACLE_DATAPUMP</code> access driver.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink CNCPT" href="../../server.112/e40540/toc.htm"><span class="italic">Oracle Database Concepts</span></a> for discussions on Schema Objects and Tables.</div>
<p>To encrypt specific columns in an external table, use the <code dir="ltr">ENCRYPT</code> clause when defining those columns. A system generated key is used to encrypt the columns. For example, the following definition encrypts the <code dir="ltr">ssn</code> column using the <code dir="ltr">3DES168</code> algorithm:</p>
<pre dir="ltr">
CREATE TABLE emp_ext (
    first_name,
    ....
    <span class="bold">ssn ENCRYPT USING '3DES168'</span>,
    ....
...
...
</pre>
<p>If you plan to move your external table to a new location, then you cannot use a randomly generated key to encrypt the columns. This is because the randomly generated key will not be available at the new location.</p>
<p>For such scenarios, you should specify a password while encrypting the columns. After you move the data, you can use the same password to regenerate the key required to access encrypted column data at the new location.</p>
<p>Table partition exchange also requires a password-based table key.</p>
<p><a href="#BABHGEAC">Example 8-7</a> creates an external table using a password to create the table key.</p>
<div id="ASOAG10148" class="example">
<p class="titleinexample"><a id="BABHGEAC"></a>Example 8-7 Creating a New External Table with a Password-Generated Table Key</p>
<pre dir="ltr">
CREATE TABLE emp_ext (
     first_name,
     last_name,
     empID,
     salary,
     ssn <span class="bold">ENCRYPT IDENTIFIED BY "xIcf3T9u"</span>
)  ORGANIZATION EXTERNAL
   (
    TYPE ORACLE_DATAPUMP
    DEFAULT DIRECTORY "D_DIR"
    LOCATION('emp_ext.dat')
    )
    REJECT LIMIT UNLIMITED
AS SELECT * FROM EMPLOYEE;
</pre></div>
<!-- class="example" -->
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink SQLRF" href="../../server.112/e41084/toc.htm"><span class="italic">Oracle Database SQL Language Reference</span></a> about <code dir="ltr">CREATE TABLE</code>, <code dir="ltr">ENCRYPT</code>, and the rules for passwords.</div>
</div>
<!-- class="sect4" --></div>
<!-- class="sect3" -->
<a id="BABBDHED"></a>
<div id="ASOAG9533" class="sect3">
<h4 class="sect3"><span class="secnum">8.2.4.2</span> Encrypting Columns <a id="sthref228"></a>in Existing Tables</h4>
<p>To add an encrypted column to an existing table, or to encrypt or decrypt an existing column, you use the <code dir="ltr">ALTER TABLE</code> SQL command with the <code dir="ltr">ADD</code> or <code dir="ltr">MODIFY</code> clause.</p>
<p>This section contains the following topics:</p>
<ul>
<li>
<p><a href="#BABIJJJJ">Adding an Encrypted Column to an Existing Table</a></p>
</li>
<li>
<p><a href="#BABBFBFF">Encrypting an Unencrypted Column</a></p>
</li>
<li>
<p><a href="#BABJAIHB">Disabling Encryption on a Column</a></p>
</li>
</ul>
<a id="BABIJJJJ"></a>
<div id="ASOAG9534" class="sect4">
<h5 class="sect4"><span class="secnum">8.2.4.2.1</span> Adding an Encrypted Column to an Existing Table</h5>
<p>To add an encrypted column to an existing table, you use the <code dir="ltr">ALTER TABLE ADD</code> command, specifying the new column with the <code dir="ltr">ENCRYPT</code> clause. <a href="#BABEDGDA">Example 8-8</a> adds an encrypted column, <code dir="ltr">ssn</code>, to an existing table, called <code dir="ltr">employee</code>.</p>
<div id="ASOAG10149" class="example">
<p class="titleinexample"><a id="BABEDGDA"></a>Example 8-8 Adding an Encrypted Column to an Existing Table</p>
<pre dir="ltr">
SQL&gt; ALTER TABLE employee ADD (ssn VARCHAR2(11) ENCRYPT);
</pre></div>
<!-- class="example" -->
<p>The ssn column is encrypted with the default <code dir="ltr">AES192</code> algorithm. Salt and MAC are added by default.</p>
<p>You can choose to encrypt the column using a different algorithm. You can also specify <code dir="ltr">NO SALT</code>, if you wish to index the column.</p>
</div>
<!-- class="sect4" -->
<a id="BABBFBFF"></a>
<div id="ASOAG9535" class="sect4">
<h5 class="sect4"><span class="secnum">8.2.4.2.2</span> Encrypting an Unencrypted Column</h5>
<p>To encrypt an unencrypted column, use the <code dir="ltr">ALTER TABLE MODIFY</code> command, specifying the unencrypted column with the <code dir="ltr">ENCRYPT</code> clause. <a href="#BABJAHDB">Example 8-9</a> encrypts the <code dir="ltr">first_name</code> column in the <code dir="ltr">employee</code> table.</p>
<div id="ASOAG10150" class="example">
<p class="titleinexample"><a id="BABJAHDB"></a>Example 8-9 Encrypting an Unencrypted Column</p>
<pre dir="ltr">
SQL&gt; ALTER TABLE employee MODIFY (first_name ENCRYPT);
</pre></div>
<!-- class="example" -->
<p>The <code dir="ltr">first_name</code> column is encrypted with the default <code dir="ltr">AES192</code> algorithm. Salt is added to the data, by default.</p>
<p>You can choose to encrypt the column using a different algorithm. You can also specify <code dir="ltr">NO SALT</code>, if you wish to index the column. You can also choose to skip integrity checks by using the <code dir="ltr">NOMAC</code> parameter. <a href="#CHDHFCGB">Example 8-10</a> encrypts the <code dir="ltr">first_name</code> column in the employee table using the <code dir="ltr">NOMAC</code> parameter.</p>
<div id="ASOAG10151" class="example">
<p class="titleinexample"><a id="CHDHFCGB"></a>Example 8-10 Using the NOMAC parameter in an ALTER TABLE statement</p>
<pre dir="ltr">
SQL&gt; ALTER TABLE employee MODIFY (first_name ENCRYPT 'NOMAC');
</pre></div>
<!-- class="example" --></div>
<!-- class="sect4" -->
<a id="BABJAIHB"></a>
<div id="ASOAG9536" class="sect4">
<h5 class="sect4"><span class="secnum">8.2.4.2.3</span> Disabling Encryption on a Column</h5>
<p>You may want to disable encryption for reasons of compatibility or performance. To disable column encryption, use the <code dir="ltr">ALTER TABLE MODIFY</code> command with the <code dir="ltr">DECRYPT</code> clause. <a href="#BABHAIFI">Example 8-11</a> decrypts the <code dir="ltr">first_name</code> column in the <code dir="ltr">employee</code> table.</p>
<div id="ASOAG10152" class="example">
<p class="titleinexample"><a id="BABHAIFI"></a>Example 8-11 Turning Off Column Encryption</p>
<pre dir="ltr">
SQL&gt; ALTER TABLE employee MODIFY (first_name DECRYPT);
</pre></div>
<!-- class="example" --></div>
<!-- class="sect4" --></div>
<!-- class="sect3" -->
<a id="CHDCGBEA"></a>
<div id="ASOAG9537" class="sect3">
<h4 class="sect3"><span class="secnum">8.2.4.3</span> Creating an Index on an Encrypted Column</h4>
<p>To create an index on an encrypted column, you use the standard <code dir="ltr">CREATE INDEX</code> command. The column being indexed must have been encrypted without salt. <a href="#CHDFIGCF">Example 8-12</a> shows how to create an index on a column that has been encrypted without salt.</p>
<div id="ASOAG10153" class="example">
<p class="titleinexample"><a id="CHDFIGCF"></a>Example 8-12 Creating Index on a Column Encrypted Without Salt</p>
<pre dir="ltr">
CREATE TABLE employee (
   first_name VARCHAR2(128),
   last_name VARCHAR2(128),
   empID NUMBER ENCRYPT NO SALT,
   salary NUMBER(6) ENCRYPT USING '3DES168'
);
CREATE INDEX employee_idx on employee (empID);
</pre></div>
<!-- class="example" -->
<div class="infobox-note">
<p class="notep1">Note:</p>
You cannot create an index on a column that has been encrypted with salt. If you try to do this, an error (<code dir="ltr">ORA-28338</code>) is raised.</div>
</div>
<!-- class="sect3" -->
<a id="BABDJEJJ"></a>
<div id="ASOAG9538" class="sect3">
<h4 class="sect3"><span class="secnum">8.2.4.4</span> Addi<a id="sthref229"></a>ng or Remov<a id="sthref230"></a>ing Salt from an Encrypted Column</h4>
<p>Salt is a way to strengthen the security of encrypted data. It is a random string added to the data before it is encrypted. This ensures that the same plaintext data does not always translate to the same encrypted text. Salt removes the one common method attackers use to steal data, namely, matching patterns of encrypted text. Adding salt requires an additional 16 bytes of storage, per encrypted data value.</p>
<p>To add or remove salt from encrypted columns, use the <code dir="ltr">ALTER TABLE MODIFY</code> command. <a href="#BABDEIFA">Example 8-13</a> encrypts the <code dir="ltr">first_name</code> column using salt. If the <code dir="ltr">first_name</code> column was encrypted without salt earlier, then this command reencrypts it using salt.</p>
<div id="ASOAG10154" class="example">
<p class="titleinexample"><a id="BABDEIFA"></a>Example 8-13 Adding Salt to an Encrypted Column</p>
<pre dir="ltr">
SQL&gt; ALTER TABLE employee MODIFY (first_name ENCRYPT SALT);
</pre></div>
<!-- class="example" -->
<p><a href="#BABJCCAD">Example 8-14</a> removes salt from the <code dir="ltr">first_name</code> column. If you need to index a column that was encrypted using salt, then you can use this command to remove the salt before indexing.</p>
<div id="ASOAG10155" class="example">
<p class="titleinexample"><a id="BABJCCAD"></a>Example 8-14 Removing Salt from an Encrypted Column</p>
<pre dir="ltr">
SQL&gt; ALTER TABLE employee MODIFY (first_name ENCRYPT NO SALT);
</pre></div>
<!-- class="example" --></div>
<!-- class="sect3" -->
<a id="BABJEIIC"></a>
<div id="ASOAG9539" class="sect3">
<h4 class="sect3"><span class="secnum">8.2.4.5</span> Changing the Encryption Key or Algorithm for Tables with Encrypted Columns</h4>
<p>Each table can have only one table key for its columns. You can regenerate the table key with the <code dir="ltr">ALTER TABLE</code> command. You can also choose to use a different encryption algorithm for the new table key.</p>
<p><a href="#CJACACBD">Example 8-15</a> regenerates the table key for the <code dir="ltr">employee</code> table.</p>
<div id="ASOAG10156" class="example">
<p class="titleinexample"><a id="CJACACBD"></a>Example 8-15 Changing the Encryption Key on Tables Containing Encrypted Columns</p>
<pre dir="ltr">
SQL&gt; ALTER TABLE employee REKEY;
</pre></div>
<!-- class="example" -->
<p><a href="#CJAIHGJC">Example 8-16</a> regenerates the table key for the <code dir="ltr">employee</code> table using the <code dir="ltr">3DES168</code> algorithm.</p>
<div id="ASOAG10157" class="example">
<p class="titleinexample"><a id="CJAIHGJC"></a>Example 8-16 Changing the Encryption K<a id="sthref231"></a>ey and Algorithm on Tables Containing Encrypted Columns</p>
<pre dir="ltr">
SQL&gt; ALTER TABLE employee REKEY USING '3DES168';
</pre></div>
<!-- class="example" --></div>
<!-- class="sect3" -->
<a id="BABGJEBA"></a>
<div id="ASOAG9579" class="sect3">
<h4 class="sect3"><span class="secnum">8.2.4.6</span> Data Types That Can Be Encrypted with TDE Column Encryption</h4>
<p>The following data types can be encrypted using this feature:</p>
<ul>
<li>
<p><code dir="ltr">BINARY_DOUBLE</code></p>
</li>
<li>
<p><code dir="ltr">BINARY_FLOAT</code></p>
</li>
<li>
<p><code dir="ltr">CHAR</code></p>
</li>
<li>
<p><code dir="ltr">DATE</code></p>
</li>
<li>
<p><code dir="ltr">INTERVAL DAY TO SECOND</code></p>
</li>
<li>
<p><code dir="ltr">INTERVAL YEAR TO MONTH</code></p>
</li>
<li>
<p><code dir="ltr">LOB</code>s (Internal <code dir="ltr">LOB</code>s and <code dir="ltr">SECUREFILE LOB</code>s Only)</p>
</li>
<li>
<p><code dir="ltr">NCHAR</code></p>
</li>
<li>
<p><code dir="ltr">NUMBER</code></p>
</li>
<li>
<p><code dir="ltr">NVARCHAR2</code></p>
</li>
<li>
<p><code dir="ltr">RAW</code></p>
</li>
<li>
<p><code dir="ltr">TIMESTAMP</code> (includes <code dir="ltr">TIMESTAMP WITH TIME ZONE</code> and <code dir="ltr">TIMESTAMP WITH LOCAL TIME ZONE</code>)</p>
</li>
<li>
<p><code dir="ltr">VARCHAR2</code></p>
</li>
</ul>
<p>You cannot encrypt a column if the encrypted column size becomes greater than the size allowed by the data type of the column. <a href="#CJAIDCFJ">Table 8-1</a> shows the maximum allowable sizes for various data types.</p>
<div id="ASOAG10158" class="tblformal">
<p class="titleintable"><a id="sthref232"></a><a id="CJAIDCFJ"></a>Table 8-1 Maximum Allowable Size for Data Types</p>
<table class="cellalignment2240" title="Maximum Allowable Size for Data Types" summary="Data types and sizes" dir="ltr">
<thead>
<tr class="cellalignment2228">
<th class="cellalignment2235" id="r1c1-t16">Data Type</th>
<th class="cellalignment2235" id="r1c2-t16">Maximum Size</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2228">
<td class="cellalignment2236" id="r2c1-t16" headers="r1c1-t16">
<p><code dir="ltr">CHAR</code></p>
</td>
<td class="cellalignment2236" headers="r2c1-t16 r1c2-t16">
<p>1932 bytes</p>
</td>
</tr>
<tr class="cellalignment2228">
<td class="cellalignment2236" id="r3c1-t16" headers="r1c1-t16">
<p><code dir="ltr">VARCHAR2</code></p>
</td>
<td class="cellalignment2236" headers="r3c1-t16 r1c2-t16">
<p>3932 bytes</p>
</td>
</tr>
<tr class="cellalignment2228">
<td class="cellalignment2236" id="r4c1-t16" headers="r1c1-t16">
<p><code dir="ltr">NVARCHAR2</code></p>
</td>
<td class="cellalignment2236" headers="r4c1-t16 r1c2-t16">
<p>1966 bytes</p>
</td>
</tr>
<tr class="cellalignment2228">
<td class="cellalignment2236" id="r5c1-t16" headers="r1c1-t16">
<p><code dir="ltr">NCHAR</code></p>
</td>
<td class="cellalignment2236" headers="r5c1-t16 r1c2-t16">
<p>966 bytes</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<div class="infobox-note">
<p class="notep1">Note:</p>
TDE tablespace encryption does not have these data type restrictions.</div>
</div>
<!-- class="sect3" -->
<a id="CHDHAHAB"></a>
<div id="ASOAG9518" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3"><span class="secnum">8.2.4.7</span> Restric<a id="sthref233"></a>tions on Using TDE Column Encryption</h4>
<p>TDE column encryption encrypts and decrypts data at the SQL layer. Oracle Database utilities and features that bypass the SQL layer cannot leverage the services provided by TDE column encryption. Do not use TDE column encryption with the following database features:</p>
<ul>
<li>
<p>Index types other than B-tree</p>
</li>
<li>
<p>Range scan search through an index</p>
</li>
<li>
<p>External <a id="sthref234"></a><a id="sthref235"></a><a id="sthref236"></a>large objects (<code dir="ltr">BFILE</code>)</p>
</li>
<li>
<p><a id="sthref237"></a><a id="sthref238"></a>Synchronous Change Data Capture</p>
</li>
<li>
<p><a id="sthref239"></a><a id="sthref240"></a><a id="sthref241"></a><a id="sthref242"></a>Transportable Tablespaces</p>
</li>
<li>
<p><a id="sthref243"></a><a id="sthref244"></a>Original import/export utilities</p>
</li>
</ul>
<p>In addition, you cannot use TDE column encryption to encrypt columns used in foreign key constraints.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="#BABCFDAC">"Export and Import of Tables with Encrypted Columns"</a></p>
</li>
<li>
<p><a href="#BABGJEBA">"Data Types That Can Be Encrypted with TDE Column Encryption"</a></p>
</li>
</ul>
</div>
<div class="infobox-note">
<p class="notep1">Note:</p>
Oracle Database 10<span class="italic">g</span> release 2 (10.2) TDE did not support large object (<a id="sthref245"></a><code dir="ltr">LOB</code>) data types such as <code dir="ltr"><a id="sthref246"></a>BLOB</code> and <code dir="ltr"><a id="sthref247"></a>CLOB</code>. Oracle Database 11<span class="italic">g</span> TDE supports internal large object data types such as <code dir="ltr">BLOB</code> and <code dir="ltr">CLOB</code>. However, you cannot encrypt external <code dir="ltr">LOB</code>s (<a id="sthref248"></a><code dir="ltr">BFILE</code>).</div>
<p>Applications that need to use these unsupported features can use the <code dir="ltr">DBMS_CRYPTO</code> package for their encryption needs.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink ARPLS664" href="../../appdev.112/e40758/d_crypto.htm#ARPLS664">"DBMS_CRYPTO"</a> in <span class="italic">Oracle Database PL/SQL Packages and Types Reference</span></div>
<p>TDE protects data stored on disk/media. It does not protect data in transit. Use Oracle Advanced Security network encryption solutions discussed in <a href="asotools.htm#g1021563">Chapter 2, "Configuration and Administration Tools Overview"</a>to encrypt data over the network.</p>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="CJAFEAII"></a>
<div id="ASOAG620" class="sect2">
<h3 class="sect2"><span class="secnum">8.2.5</span> Encrypting Entire Tablespaces</h3>
<p>In order to use TDE tablespace encryption, you must be running Oracle Database 11<span class="italic">g</span> release 1 (11.1) or higher. If you have upgraded from an earlier release, the compatibility for the database must have been set to 11.0.0 or higher.</p>
<p>To use the enhanced tablespace encryption features in Oracle Database 11<span class="italic">g</span> Release 2 (11.2), the compatibility for the database must be set to 11.2 or higher.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
Advancing the database compatibility, using the <code dir="ltr">COMPATIBLE</code> initialization parameter, is an irreversible change.</div>
<p>The following steps discuss using TDE tablespace encryption:</p>
<ul>
<li>
<p><a href="#CJAIJGGG">Setting the Tablespace Master Encryption Key</a></p>
</li>
<li>
<p><a href="#CJADGDFE">Opening the Oracle Wallet</a></p>
</li>
<li>
<p><a href="#CJAGCCJH">Creating an Encrypted Tablespace</a></p>
</li>
<li>
<p><a href="#CHDFFEDD">Restrictions on Using TDE Tablespace Encryption</a></p>
</li>
</ul>
<a id="CJAIJGGG"></a>
<div id="ASOAG9556" class="sect3">
<h4 class="sect3"><span class="secnum">8.2.5.1</span> Setting the Tablesp<a id="sthref249"></a>ace Ma<a id="sthref250"></a>ster Encry<a id="sthref251"></a>ption Key</h4>
<p>Before you can encrypt or decrypt tablespaces, you must generate or set a master encryption key. The tablespace master encryption key is stored in an external security module and is used to encrypt the TDE tablespace encryption keys.</p>
<p>Check to ensure that the <code dir="ltr"><a id="sthref252"></a>ENCRYPTION_WALLET_LOCATION</code> (or <code dir="ltr">WALLET_LOCATION</code>) parameter in the <code dir="ltr"><a id="sthref253"></a>sqlnet.o<a id="sthref254"></a>ra</code> file points to the correct software wallet location. For example:</p>
<pre dir="ltr">
ENCRYPTION_WALLET_LOCATION=
  (SOURCE=(METHOD=FILE)(METHOD_DATA=
   (DIRECTORY=/app/wallet)))
</pre>
<p>Oracle Database 11<span class="italic">g</span> Release 2 (11.2) uses the same master encryption key for both TDE column encryption and TDE tablespace encryption. When you issue the <code dir="ltr">ALTER SYSTEM SET ENCRYPTION KEY</code> command, a unified master encryption key is created for both TDE column encryption and TDE tablespace encryption. Creating a master encryption key is discussed under <a href="#BABCCDHA">"Setting the Master Encryption Key"</a> .</p>
<p>If you were already using TDE in Oracle Database 10<span class="italic">g</span> release 2 (10.2), and have upgraded the database to 11<span class="italic">g</span> Release 2 (11.2), then you must reissue the <code dir="ltr">ALTER SYSTEM SET ENCRYPTION KEY</code> command to create a unified master encryption key.</p>
<p>If you were already using TDE tablespace encryption in Oracle Database 11<span class="italic">g</span> release 1 (11.1), and have upgraded the database to 11<span class="italic">g</span> release 2 (11.2), then you have separate master encryption keys for TDE column encryption and TDE tablespace encryption. You must create a unified master encryption key by reissuing the <code dir="ltr">ALTER SYSTEM SET ENCRYPTION KEY</code> command.</p>
<div id="ASOAG10159" class="sect4"><a id="sthref255"></a>
<h5 class="sect4"><span class="secnum">8.2.5.1.1</span> Resetting the Tablespace Master Encryption Key</h5>
<p>Oracle Database 11<span class="italic">g</span> Release 2 (11.2) uses a unified master encryption key for both TDE column encryption and TDE tablespace encryption. When you reset (<code dir="ltr">rekey</code>) the master encryption key for TDE column encryption, the master encryption key for TDE tablespace encryption also gets reset.</p>
<p>The <code dir="ltr">ALTER SYSTEM SET ENCRYPTION KEY</code> command resets the tablespace master encryption key. Resetting the master encryption key is discussed under <a href="#BABDFHHH">"Setting and Resetting the Master Encryption Key"</a>.</p>
</div>
<!-- class="sect4" --></div>
<!-- class="sect3" -->
<a id="CJADGDFE"></a>
<div id="ASOAG9557" class="sect3">
<h4 class="sect3"><span class="secnum">8.2.5.2</span> Opening the O<a id="sthref256"></a>racle Wallet</h4>
<p>Befo<a id="sthref257"></a>re you can create an encrypted tablespace, the Oracle wallet containing the <a id="sthref258"></a>tablespace master encryption key must be open. The wallet must also be open before you can access data in an encrypted tablespace. Opening the Oracle wallet has been discussed under <a href="#BABEBFBA">"Opening and Closing the Encrypted Wallet"</a> .</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
The security administrator needs to open the Oracle wallet after starting the Oracle instance. A restart of the Oracle instance requires the security administrator to open the wallet again.</div>
<p>The security administrator also needs to open the wallet before performing database recovery operations. This is because background processes may require access to encrypted redo and undo logs. When performing database recovery, the wallet must be opened before opening the database. This is illustrated in the following statements:</p>
<pre dir="ltr">
SQL&gt; STARTUP MOUNT;
SQL&gt; ALTER SYSTEM SET ENCRYPTION WALLET OPEN IDENTIFIED BY "<span class="italic">password</span>";
SQL&gt; ALTER DATABASE OPEN;
</pre>
<p>You can also choose to use auto login wallets, if your environment does not require the extra security provided by a wallet that needs to be explicitly opened.</p>
</div>
<!-- class="sect3" -->
<a id="CJAGCCJH"></a>
<div id="ASOAG9558" class="sect3">
<h4 class="sect3"><span class="secnum">8.2.5.3</span> Creating an Encrypt<a id="sthref259"></a>ed Table<a id="sthref260"></a>space</h4>
<p>The <code dir="ltr">CREATE TABLESPACE</code> command enables you to create an encrypted tablespace. The <code dir="ltr">permanent_tablespace_clause</code> enables you to choose the encryption algorithm and the key length for encryption. The <code dir="ltr">ENCRYPT</code> keyword in the storage_clause encrypts the tablespace. The following syntax illustrates this:</p>
<pre dir="ltr">
CREATE
   [ BIGFILE | SMALLFILE ]
   { <span class="italic">permanent_tablespace_clause</span>
   | <span class="italic">temporary_tablespace_clause</span>
   | undo_tablespace_clause
   } ;
</pre>
<p>Where,</p>
<pre dir="ltr">
<span class="italic">permanent_tablespace_clause</span>=
TABLESPACE <span class="italic">tablespace</span>
.........
<span class="bold">ENCRYPTION [USING</span> <span class="bolditalic">algorithm</span><span class="bold">]</span>
.........
<span class="italic">storage_clause</span>
.........
</pre>
<p>Where,</p>
<pre dir="ltr">
<span class="italic">storage_clause</span>=
.........
<span class="bold">[ENCRYPT]</span>
.........
</pre>
<p>Here:</p>
<p><code dir="ltr"><span class="codeinlineitalic">algorithm</span></code> can have one of the following values:</p>
<ul>
<li>
<p><code dir="ltr">3DES168</code></p>
</li>
<li>
<p><code dir="ltr">AES128</code></p>
</li>
<li>
<p><code dir="ltr">AES192</code></p>
</li>
<li>
<p><code dir="ltr">AES256</code></p>
</li>
</ul>
<p>The key lengths are included in the names of the algorithms themselves. If no encryption algorithm is specified, the default encryption algorithm is used. The default encryption algorithm is <code dir="ltr">AES128</code>.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
<ul>
<li>
<p>The <code dir="ltr">ENCRYPTION</code> keyword in the <code dir="ltr">permanent_tablespace_clause</code> is used to specify the encryption algorithm. The <code dir="ltr">ENCRYPT</code> keyword in the <code dir="ltr">storage_clause</code> actually encrypts the tablespace.</p>
</li>
<li>
<p>For security reasons, a tablespace cannot be encrypted with the <code dir="ltr">NO SALT</code> option.</p>
</li>
</ul>
</div>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink SQLRF" href="../../server.112/e41084/toc.htm"><span class="italic">Oracle Database SQL Reference Guide</span></a> for the <code dir="ltr">CREATE TABLESPACE</code> command syntax.</div>
<p><a href="#CJABGBEJ">Example 8-17</a> creates a tablespace called <code dir="ltr">securespace</code>. The tablespace is encrypted using the <code dir="ltr">3DES</code> algorithm. The key length is 168 bits.</p>
<div id="ASOAG10160" class="example">
<p class="titleinexample"><a id="CJABGBEJ"></a>Example 8-17 Creating an Encrypted Tablespace</p>
<pre dir="ltr">
CREATE TABLESPACE securespace
DATAFILE '/home/user/oradata/secure01.dbf'
SIZE 150M
ENCRYPTION USING '3DES168'
DEFAULT STORAGE(ENCRYPT);
</pre></div>
<!-- class="example" -->
<p><a href="#CJADCCEH">Example 8-18</a> creates a tablespace called <code dir="ltr">securespace2</code>. As no encryption algorithm is specified, the default encryption algorithm (<code dir="ltr">AES128</code>) is used. The key length is 128 bits.</p>
<div id="ASOAG10161" class="example">
<p class="titleinexample"><a id="CJADCCEH"></a>Example 8-18 Creating an Encrypted Tablespace</p>
<pre dir="ltr">
CREATE TABLESPACE securespace2
DATAFILE '/home/user/oradata/secure01.dbf'
SIZE 150M
ENCRYPTION
DEFAULT STORAGE(ENCRYPT);
</pre></div>
<!-- class="example" -->
<p>The following data dictionary views maintain information about the encryption status of a tablespace. You can query these views to verify that a tablespace has been encrypted:</p>
<ul>
<li>
<p><code dir="ltr">DBA_TABLESPACES</code>: The <code dir="ltr">ENCRYPTED</code> column indicates whether a tablespace is encrypted</p>
</li>
<li>
<p><code dir="ltr">USER_TABLESPACES</code>: The <code dir="ltr">ENCRYPTED</code> column indicates whether a tablespace is encrypted</p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink REFRN" href="../../server.112/e40402/toc.htm"><span class="italic">Oracle Database Reference</span></a> for a full description of these data dictionary views.</div>
<p>You cannot encrypt an existing tablespace. However, you can import data into an encrypted tablespace using the Oracle Data Pump utility. You can also use SQL commands like <code dir="ltr">CREATE TABLE...AS SELECT...</code>or <code dir="ltr">ALTER TABLE...MOVE...</code> to move data into an encrypted tablespace. The <code dir="ltr">CREATE TABLE...AS SELECT...</code> command enables you to create a table from an existing table. The <code dir="ltr">ALTER TABLE...MOVE...</code> command enables you to move a table into the encrypted tablespace.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink SQLRF" href="../../server.112/e41084/toc.htm"><span class="italic">Oracle Database SQL Language Reference</span></a> for more details on the <code dir="ltr">CREATE TABLE</code> and <code dir="ltr">ALTER TABLE</code> commands.</div>
</div>
<!-- class="sect3" -->
<a id="CHDFFEDD"></a>
<div id="ASOAG10162" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3"><span class="secnum">8.2.5.4</span> Restrictions on Using TDE Tablespace Encryption</h4>
<p>TDE tablespace encryption encrypts/decrypts data during read/write operations, as opposed to TDE column encryption, which encrypts/decrypts data at the SQL layer. This means that most restrictions that apply to TDE column encryption, such as data type restrictions and index type restrictions, are not applicable to TDE tablespace encryption.</p>
<p>The following list includes the restrictions that apply to TDE tablespace encryption:</p>
<ul>
<li>
<p>External Large Objects (<code dir="ltr">BFILE</code>s) cannot be encrypted using TDE tablespace encryption. This is because these files reside outside the database.</p>
</li>
<li>
<p>To perform import and export operations, use Oracle Data Pump.</p>
</li>
</ul>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="CJAGFAFB"></a>
<div id="ASOAG640" class="sect2">
<h3 class="sect2"><span class="secnum">8.2.6</span> Using Hardware Security Modules with TDE</h3>
<p>A hardware security module (HSM) is a physical device that provides secure storage for encryption keys. It also provides secure computational space (memory) to perform encryption and decryption operations. HSM is a more secure alternative to the Oracle wallet.</p>
<p>TDE can use HSM to provide enhanced security for sensitive data. An HSM is used to store the master encryption key used for TDE. The key is secure from unauthorized access attempts as the HSM is a physical device and not an operating system file. All encryption and decryption operations that use the master encryption key are performed inside the HSM. This means that the master encryption key is never exposed in insecure memory.</p>
<p>Using HSM involves an initial setup of the HSM device. You also need to configure TDE to use HSM. Once the initial setup is done, HSM can be used just like an Oracle software wallet. The following steps discuss configuring and using hardware security modules:</p>
<ol>
<li>
<p><a href="#CJADFGIA">Set the ENCRYPTION_WALLET_LOCATION Parameter in the sqlnet.ora File</a></p>
</li>
<li>
<p><a href="#CJAGBACG">Copy the PKCS#11 Library to Its Correct Path</a></p>
</li>
<li>
<p><a href="#CJAJBFFC">Set Up the HSM</a></p>
</li>
<li>
<p><a href="#CJABCAJD">Generate a Master Encryption Key for HSM-Based Encryption</a></p>
</li>
<li>
<p><a href="#CHDCHJAD">Reconfigure the Software Wallet (Optional)</a></p>
</li>
<li>
<p><a href="#CJAFFEHD">Ensure that the HSM Is Accessible</a></p>
</li>
<li>
<p><a href="#CJAGIJGD">Encrypt and Decrypt Data</a></p>
</li>
</ol>
<a id="CJADFGIA"></a>
<div id="ASOAG9559" class="sect3">
<h4 class="sect3"><span class="secnum">8.2.6.1</span> Set the <a id="sthref261"></a>ENCRYPTION_WALLET_LOCATION Parameter in the <a id="sthref262"></a>sqlne<a id="sthref263"></a>t.ora File</h4>
<p>The <code dir="ltr">ENCRYPTION_WALLET_LOCATION</code> parameter specifies the location of the Oracle wallet. You need to change this parameter to reflect the fact that an HSM is to be used in place of the software wallet.</p>
<p>Use the following steps to set the <code dir="ltr">ENCRYPTION_WALLET_LOCATION</code> parameter:</p>
<ol>
<li>
<p>Open the <code dir="ltr">sqlnet.ora</code> file. This file is located in the <code dir="ltr">$ORACLE_HOME/network/admin</code> directory.</p>
</li>
<li>
<p>Add the <code dir="ltr">ENCRYPTION_WALLET_LOCATION</code> parameter to the <code dir="ltr">sqlnet.ora</code> file, as follows:</p>
<pre dir="ltr">
ENCRYPTION_WALLET_LOCATION=(SOURCE=(<span class="bold">METHOD=HSM</span>))
</pre>
<p>If the <code dir="ltr">ENCRYPTION_WALLET_LOCATION</code> parameter is already present in the <code dir="ltr">sqlnet.ora</code> file, then change the <code dir="ltr">METHOD</code> value to <code dir="ltr">HSM</code>:</p>
<pre dir="ltr">
ENCRYPTION_WALLET_LOCATION=
  (SOURCE=(<span class="bold">METHOD=HSM</span>)(METHOD_DATA=
    (DIRECTORY=/app/wallet)))
</pre>
<div class="infobox-note">
<p class="notep1">Note:</p>
If a <code dir="ltr">DIRECTORY</code> value is present in the <code dir="ltr">ENCRYPTION_WALLET_LOCATION</code> parameter, then make sure that you do not delete it. Although HSM does not require a <code dir="ltr">DIRECTORY</code> value, the value is used to locate your old software wallet when migrating to HSM-based transparent data encryption. Also, the <code dir="ltr">DIRECTORY</code> value might be required by tools, such as Recovery Manager (RMAN), to locate the software wallet.</div>
</li>
<li>
<p>Save and close the file.</p>
</li>
</ol>
</div>
<!-- class="sect3" -->
<a id="CJAGBACG"></a>
<div id="ASOAG9560" class="sect3">
<h4 class="sect3"><span class="secnum">8.2.6.2</span> Copy the <a id="sthref264"></a>PKCS#11 Library to Its Co<a id="sthref265"></a>rrect Path</h4>
<p>Your HSM vendor supplies you with an associated PKCS#11 library. You should copy this library to the specified directory structure to ensure that the database is able to find this library. Use the following directory structures for UNIX and Windows respectively:</p>
<pre dir="ltr">
/opt/oracle/extapi/[32,64]/hsm/{<span class="italic">VENDOR</span>}/{<span class="italic">VERSION</span>}/lib<span class="italic">apiname.ext</span> 

<span class="italic">%SYSTEM_DRIVE%</span>\oracle\extapi\[32,64]\hsm\{<span class="italic">VENDOR</span>}\{<span class="italic">VERSION</span>}\lib<span class="italic">apiname.ext</span>
</pre>
<p>Here:</p>
<p><code dir="ltr">[32,64]</code> specifies whether the supplied binary is 32-bits or 64-bits</p>
<p><code dir="ltr"><span class="codeinlineitalic">VENDOR</span></code> stands for the name of the vendor supplying the library</p>
<p><code dir="ltr"><span class="codeinlineitalic">VERSION</span></code> refers to the version of the library. This should preferably be in a format, <code dir="ltr"><span class="codeinlineitalic">number.number.number</span></code></p>
<p><code dir="ltr"><span class="codeinlineitalic">apiname</span></code> requires no special format. However, the <code dir="ltr"><span class="codeinlineitalic">apiname</span></code> must be prefixed with the word <code dir="ltr">lib</code>, as illustrated in the syntax.</p>
<p><code dir="ltr"><span class="codeinlineitalic">.ext</span></code> needs to be replaced by the extension of the library file. This extension is <code dir="ltr">.so</code> on Unix.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
Only one PKCS#11 library is supported at a time. If you wish to use an HSM from a new vendor, then you should replace the PKCS#11 library from the earlier vendor with the library from the new vendor.</div>
</div>
<!-- class="sect3" -->
<a id="CJAJBFFC"></a>
<div id="ASOAG9561" class="sect3">
<h4 class="sect3"><span class="secnum">8.2.6.3</span> Set Up the HSM</h4>
<p>Your HSM vendor should have provided you the instructions to set up the HSM interface. Use your HSM management interface and the instructions provided by your vendor to set up the HSM. Create the user account and password that would be used by the database to interact with the HSM.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
The HSM is set up by the HSM administrator or the security administrator responsible for managing TDE.</div>
</div>
<!-- class="sect3" -->
<a id="CJABCAJD"></a>
<div id="ASOAG9562" class="sect3">
<h4 class="sect3"><span class="secnum">8.2.6.4</span> Generate a Master Encryption Key for HSM-Based Encryption</h4>
<p>To start using HSM-based encryption, you need to create a master encryption key that will be stored inside the HSM. The master encryption key is used to encrypt or decrypt table keys inside the HSM.</p>
<p>Use the following command to create the master encryption key:</p>
<pre dir="ltr">
<a id="sthref266"></a>SQL&gt; ALTER SYSTEM SET ENCRYPTION KEY IDENTIFIED BY <span class="italic"><a id="sthref267"></a>"user_Id</span>:<span class="italic">passw<a id="sthref268"></a>ord</span>" [MIGRATE USING <span class="italic">"wallet_password"</span>]
</pre>
<p>Here:</p>
<p><code dir="ltr"><span class="codeinlineitalic">user_Id</span></code> is the user Id created for the database using the HSM management interface</p>
<p><code dir="ltr"><span class="codeinlineitalic">password</span></code> is the password created for the user Id using the HSM management interface. Enclose the <code dir="ltr"><span class="codeinlineitalic">user_Id:password</span></code> string in double quotation marks (" ").</p>
<p><code dir="ltr"><span class="codeinlineitalic">wallet_password</span></code> is the password required to open an existing Oracle wallet on the file system. Enclose the <code dir="ltr"><span class="codeinlineitalic">wallet_password</span></code> string in double quotation marks (" ").</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
The <code dir="ltr">user_Id</code> and <code dir="ltr">password</code> are not created automatically. You must set these up using the HSM management interface before issuing the <code dir="ltr">ALTER SYSTEM SET ENCRYPTION KEY</code> command. This is different from the procedure used for an Oracle wallet. An Oracle wallet requires no prior setup before issuing the <code dir="ltr">ALTER SYSTEM SET ENCRYPTION KEY</code> command.</div>
<p>If you are already using transparent data encryption and not using HSM, then you need to use the <code dir="ltr">MIGRATE USING</code> <code dir="ltr"><span class="codeinlineitalic">wallet_password</span></code> clause in the preceding command. This decrypts the existing table keys and reencrypts them with the newly created, HSM-based, master encryption key.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
If the database contains columns encrypted with a public key, then the columns are decrypted and reencrypted with an AES symmetric key generated by HSM-based transparent data encryption.</div>
</div>
<!-- class="sect3" -->
<a id="CHDCHJAD"></a>
<div id="ASOAG9563" class="sect3">
<h4 class="sect3"><span class="secnum">8.2.6.5</span> Reconfigure the Software Wallet (Optional)</h4>
<p>This step is applicable if you have exported encrypted data or created encrypted backups using the software wallet. Tools like Oracle Data Pump and Recovery Manager require access to the old software wallet to perform decryption and encryption operations on data exported or backed up using the software wallet.</p>
<p>You can use either of the following approaches to reconfigure the software wallet:</p>
<ul>
<li>
<p>Change the wallet password to the HSM <code dir="ltr"><span class="codeinlineitalic">userId:password</span></code> string. Here:</p>
<p><code dir="ltr"><span class="codeinlineitalic">user_Id</span></code> is the user Id created for the database using the HSM management interface</p>
<p><code dir="ltr"><span class="codeinlineitalic">password</span></code> is the password created for the user Id using the HSM management interface. Enclose the <code dir="ltr"><span class="codeinlineitalic">user_Id:password</span></code> string in double quotation marks (" ").</p>
<p>Use Oracle Wallet Manager or the <code dir="ltr">orapki</code> command-line utility to change the password for the software wallet. SQL*Plus cannot be used to change the wallet password.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="asowalet.htm#i1006852">"Changing the Password"</a> for more details on changing the wallet password</div>
</li>
<li>
<p>You can alternatively choose to use an auto login wallet. The auto login wallet is identified by a file with the <code dir="ltr">.sso</code> extension. Use an auto login wallet only if your environment does not require the extra security provided by a wallet that needs to be explicitly opened.</p>
<p>You can also choose to create a local auto login wallet. Local auto login wallets cannot be moved to another computer. They must be used on the host on which they are created.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="asowalet.htm#i1006873">"Using Auto Login"</a> for information about enabling auto login using Oracle Wallet Manager</p>
</li>
<li>
<p><a href="asoappf.htm#CDEFHBGA">"Creating, Viewing, and Modifying Wallets with orapki"</a> for information about enabling auto login and local auto login using the orapki command-line utility</p>
</li>
</ul>
</div>
</li>
</ul>
</div>
<!-- class="sect3" -->
<a id="CJAFFEHD"></a>
<div id="ASOAG9564" class="sect3">
<h4 class="sect3"><span class="secnum">8.2.6.6</span> Ensure that the HSM Is Accessible</h4>
<p>The security administrator must make sure that the HSM is accessible to the database before any encryption or decryption can be performed. This is analogous to opening the Oracle wallet. Use the following command to make the HSM accessible:</p>
<pre dir="ltr">
SQL&gt; ALTER SYSTEM <a id="sthref269"></a><a id="sthref270"></a>SET ENCRYPTION WALLET OPEN IDENTIFIED BY <span class="italic">"user_Id</span>:<span class="italic">password"</span>
</pre>
<p>Here:</p>
<p><code dir="ltr">user_Id</code> is the user Id created for the database using the HSM management interface</p>
<p><code dir="ltr">password</code> is the password created for the user Id using the HSM management interface</p>
<p>Enclose the <code dir="ltr"><span class="codeinlineitalic">user_Id:password</span></code> string in double quotation marks (" ")</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
Access to the HSM needs to reenabled every time the database instance is restarted.</div>
<p>The security administrator can disable access to the HSM using the <code dir="ltr">ALTER SYSTEM <a id="sthref271"></a>SET ENCRYPTION WALLET CLOSE</code> <code dir="ltr">IDENTIFIED BY "</code><code dir="ltr"><span class="codeinlineitalic">user_Id</span></code><code dir="ltr">:</code><code dir="ltr"><span class="codeinlineitalic">password</span></code><code dir="ltr">"</code> command. This disables all encryption and decryption operations in the HSM. A database user or application cannot perform any operation involving encrypted data until the wallet has been reopened. For example, the following operations will fail if the HSM is not accessible:</p>
<ul>
<li>
<p><code dir="ltr">SELECT</code> data from an encrypted column</p>
</li>
<li>
<p><code dir="ltr">INSERT</code> data into on an encrypted column</p>
</li>
<li>
<p><code dir="ltr">CREATE</code> a table with encrypted column(s)</p>
</li>
<li>
<p><code dir="ltr">ALTER</code> the encryption properties of a column</p>
</li>
<li>
<p><code dir="ltr">CREATE</code> an encrypted tablespace</p>
</li>
</ul>
</div>
<!-- class="sect3" -->
<a id="CJAGIJGD"></a>
<div id="ASOAG9565" class="sect3">
<h4 class="sect3"><span class="secnum">8.2.6.7</span> Encrypt and Decrypt Data</h4>
<p>HSM use is transparent to the end user. The commands to create a table with encrypted columns, access encrypted data, or decrypt data are the same regardless of whether the master encryption key resides in an Oracle wallet or HSM.</p>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="CHDFFJCJ"></a>
<div id="ASOAG10163" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">8.2.7</span> Using T<a id="sthref272"></a><a id="sthref273"></a>ransparent Data Encryption with Oracle RAC</h3>
<p>Oracle Database 11<span class="italic">g</span> Release 2 (11.2) enables Oracle Real Application Clusters (Oracle RAC) nodes to share the wallet. This eliminates the need to manually copy and synchronize the wallet across all nodes. Oracle recommends that you create the wallet on a shared file system. This allows all instances to access the same shared wallet.</p>
<p>Any wallet operation, like opening or closing the wallet, performed on any one Oracle RAC instance is applicable for all other Oracle RAC instances. This means that when you open and close the wallet for one instance, then it opens and closes for all Oracle RAC instances.</p>
<p>When using a shared file system, you need to ensure that the <code dir="ltr">ENCRYPTION_WALLET_LOCATION</code> or <code dir="ltr">WALLET_LOCATION</code> parameter for all Oracle RAC instances point to the same shared wallet location. The security administrator also needs to ensure security of the shared wallet by assigning appropriate directory permissions.</p>
<p>A master key rekey performed on one instance is applicable for all instances. When a new Oracle RAC node comes up, it is aware of the current wallet open or close status.</p>
<div id="ASOAG10537" class="sect3"><!-- infolevel="all" infotype="General" --><a id="sthref274"></a>
<h4 class="sect3"><span class="secnum">8.2.7.1</span> Using a Non-Shared File System to Store the Wallet</h4>
<p>If you are not using a shared file system to store the wallet, then you need to copy the wallet to all nodes after a master key rekey. If you need to reset the master encryption key for the database, then use the following steps:</p>
<ol>
<li>
<p>Reset the master encryption key on the first Oracle RAC node. Use the following command: See <a href="#BABDFHHH">"Setting and Resetting the Master Encryption Key"</a> for more information.</p>
</li>
<li>
<p>Copy the wallet with the new master encryption key from the first node to all other nodes.</p>
</li>
<li>
<p>Close and reopen the wallet on any one node. Use the following commands:</p>
<pre dir="ltr">
SQL&gt; ALTER <a id="sthref275"></a>SYSTEM SET ENCRYPTION <a id="sthref276"></a>WALLET CLOSE IDENTIFIED BY "password";
<a id="sthref277"></a>SQL&gt; ALTER SYSTEM SET ENCRYPTION <a id="sthref278"></a>WALLET OPEN IDENTIFIED BY "<span class="italic">password"</span>;
</pre>
<div class="infobox-note">
<p class="notep1">Note:</p>
Any wallet operation, like opening or closing the wallet, performed on any one Oracle RAC instance is applicable for all other Oracle RAC instances. This is true even if you are not using a shared file system.</div>
<p>All Oracle RAC nodes are now configured to use the new master encryption key.</p>
</li>
</ol>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="BABIBBFH"></a>
<div id="ASOAG9540" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1"><span class="secnum">8.3</span> Managing Tra<a id="ABC1249177"></a>nsparent Data Encryption</h2>
<p>This section contains these topics:</p>
<ul>
<li>
<p><a href="#CHDJJIFD">Oracle Wallet Management</a></p>
</li>
<li>
<p><a href="#CHDIACBE">Backup and Recovery of Master Encryption Keys</a></p>
</li>
<li>
<p><a href="#BABCFDAC">Export and Import of Tables with Encrypted Columns</a></p>
</li>
<li>
<p><a href="#CJAGBFDF">Performance and Storage Overheads</a></p>
</li>
<li>
<p><a href="#BABFEHEB">Security Considerations</a></p>
</li>
<li>
<p><a href="#CIHFCGFJ">Using Transparent Data Encryption in a Multi-Database Environment</a></p>
</li>
<li>
<p><a href="#BABEEEIH">Replication in Distributed Environments</a></p>
</li>
<li>
<p><a href="#CIHBAJEE">Compression and Data Deduplication of Encrypted Data</a></p>
</li>
<li>
<p><a href="#BABFEEAE">Transparent Data Encryption with OCI</a></p>
</li>
<li>
<p><a href="#CIHIDCHC">Transparent Data Encryption in a Multi-Database Environment</a></p>
</li>
<li>
<p><a href="#BABHABCA">Transparent Data Encryption Data Dictionary Views</a></p>
</li>
</ul>
<a id="CHDJJIFD"></a>
<div id="ASOAG9541" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">8.3.1</span> Oracle Wallet Man<a id="sthref279"></a>agement</h3>
<p>Transparent Data Encryption (TDE) stores the master encryption key in an Oracle wallet. The wallet can also be an auto login wallet that allows access to encrypted data without requiring a security administrator to explicitly open the wallet.</p>
<div id="ASOAG9542" class="sect3"><!-- infolevel="all" infotype="General" --><a id="sthref280"></a>
<h4 class="sect3"><span class="secnum">8.3.1.1</span> Specifying a Separate Wallet for Transparent Data Encryption</h4>
<p>When determining which wallet to use, TDE first attempts to use the wallet specified by the parameter <code dir="ltr"><a id="sthref281"></a>ENCRYPTION_WALLET_LOCATION</code>. If the parameter is not set, then it attempts to use the wallet specified by the parameter <code dir="ltr">WALLET_LOCATION</code>. If this fails as well, then TDE looks for a wallet at the default database location.</p>
<p>Oracle strongly recommends that you use a separate wallet for storing master encryption keys used by TDE. To designate a separate wallet, set the <code dir="ltr">ENCRYPTION_WALLET_LOCATION</code> parameter in the <code dir="ltr">sqlnet.ora</code> file to point to the wallet used exclusively by TDE.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="asoappa.htm#i634447">"Sample sqlnet.ora File"</a>for an example of the syntax used to set this parameter</div>
</div>
<!-- class="sect3" -->
<a id="CHDCCHBH"></a>
<div id="ASOAG9543" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3"><span class="secnum">8.3.1.2</span> Using an Auto Login Wallet</h4>
<p>You can create an auto login wallet with Oracle Wallet Manager or the <code dir="ltr">orapki</code> command-line utility. The auto login wallet allows convenient access to encrypted data across database instance restarts.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
You should not remove the <code dir="ltr">PKCS#12</code> wallet (<code dir="ltr">ewallet.p12</code> file) after the auto login wallet (<code dir="ltr">.sso</code> file) has been created. You need the P<code dir="ltr">KCS#12</code> wallet to regenerate/rekey the master encryption key in future.</div>
<p>TDE uses an auto login wallet only if it is available at the correct location (<code dir="ltr">ENCRYPTION_WALLET_LOCATION</code><code dir="ltr">,</code> <code dir="ltr">WALLET_LOCATION</code><code dir="ltr">,</code> or default wallet location), and the SQL command to open an encrypted wallet has not already been executed. If an auto login wallet is being used, you must not use the <code dir="ltr">ALTER SYSTEM SET ENCRYPTION WALLET OPEN IDENTIFIED BY</code> "<code dir="ltr"><span class="codeinlineitalic">password</span></code>" command.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="asowalet.htm#i1006873">"Using Auto Login"</a> for information about enabling auto login using Oracle Wallet Manager</p>
</li>
<li>
<p><a href="asoappf.htm#CDEFHBGA">"Creating, Viewing, and Modifying Wallets with orapki"</a> for information about enabling auto login and local auto login using the orapki command-line utility</p>
</li>
</ul>
</div>
</div>
<!-- class="sect3" -->
<div id="ASOAG9544" class="sect3"><!-- infolevel="all" infotype="General" --><a id="sthref282"></a>
<h4 class="sect3"><span class="secnum">8.3.1.3</span> Creating Wallets</h4>
<p>When you create the master encryption key using the <code dir="ltr">ALTER SYSTEM SET ENCRYPTION KEY IDENTIFIED BY</code> "<code dir="ltr"><span class="codeinlineitalic">password</span></code>" command, TDE checks to see if a wallet exists in the default or specified location. If no wallet exists, then a wallet is created automatically.</p>
<p>In addition to the SQL command, you can also use Oracle Wallet Manager to create wallets. Oracle Wallet Manager is a full-featured tool that allows you to create wallets and to view and modify their content.</p>
<p>You can also use the <code dir="ltr">orapki</code> command like utility to create wallets.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="asowalet.htm#i1009041">Chapter 14, "Using Oracle Wallet Manager"</a> for more information about Oracle Wallet Manager</p>
</li>
<li>
<p><a href="asoappf.htm#CDEFHBGA">"Creating, Viewing, and Modifying Wallets with orapki"</a></p>
</li>
</ul>
</div>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="CHDIACBE"></a>
<div id="ASOAG9545" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">8.3.2</span> Backup and Reco<a id="sthref283"></a>very of Master Encryption Keys</h3>
<p>This section contains the following topics:</p>
<ul>
<li>
<p><a href="#CHDFJEEH">Backup and Recovery of Oracle Wallet</a></p>
</li>
<li>
<p><a href="#CHDGEBFH">Backup and Recovery of PKI Key Pair</a></p>
</li>
</ul>
<a id="CHDFJEEH"></a>
<div id="ASOAG9546" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3"><span class="secnum">8.3.2.1</span> Backup and Recovery of Oracle Wallet</h4>
<p>You cannot access any encrypted data without the master encryption key. As the master encryption key is stored in the Oracle wallet, the wallet should be periodically backed up in a secure location. You must back up a copy of the wallet whenever a new master encryption key is set.</p>
<p>The Oracle wallet should not be backed up with the encrypted data. The wallet should be backed up separately. This is especially true when using the auto login wallet, which does not require a password to open. In case the backup tape gets lost, a malicious user should not be able to get both the encrypted data and the wallet.</p>
<p>Recovery Manager (RMAN) does not back up the wallet as part of the database backup. When using a media manager like Oracle Secure Backup (OSB) with RMAN, OSB automatically excludes auto-open wallets (the <code dir="ltr">cwallet.sso</code> files). However, encryption wallets (the <code dir="ltr">ewallet.p12</code> files) are not excluded automatically. It is a good practice to add the following exclude dataset statement to your OSB configuration:</p>
<pre dir="ltr">
exclude name *.p12
</pre>
<p>This instructs OSB to exclude the encryption wallet from the backup set.</p>
<p>If you lose the wallet that stores the master encryption key, you can restore access to encrypted data by copying the backed-up version of the wallet to the appropriate location. If the restored wallet was archived after the last time that the master encryption key was reset, then no additional action needs to be taken.</p>
<p>If the restored wallet does not contain the most recent master encryption key, then you can recover old data up to the point when the master encryption key was reset by rolling back the state of the database to that point in time. All modifications to encrypted columns after the master encryption key was reset are lost.</p>
</div>
<!-- class="sect3" -->
<a id="CHDGEBFH"></a>
<div id="ASOAG9547" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3"><span class="secnum">8.3.2.2</span> Backup and Recovery of PKI Key Pair</h4>
<p>TDE column encryption supports the use of PKI asymmetric key pairs as master encryption keys. This enables it to leverage existing key backup, escrow, and recovery facilities from leading certificate authority vendors.</p>
<p>In current key escrow or recovery systems, the certificate authority with key recovery capabilities typically stores a version of the private key, or a piece of information that helps recover the private key. If the private key is lost, the user can recover the original key and certificate by contacting the certificate authority and initiating a key recovery process.</p>
<p>Typically, the key recovery process is automated and requires the user to present certain authenticating credentials to the certificate authority. TDE puts no restrictions on the key recovery process other than that the recovered key and its associated certificate be a PKCS#12 file that can be imported into an Oracle wallet. This requirement is consistent with the key recovery mechanisms of leading certificate authorities.</p>
<p>After obtaining the PKCS#12 file with the original certificate and private key, you need to create a new empty wallet in the same location as the previous wallet. To do this, you can use Oracle Wallet Manager. You can then import the PKCS#12 file into the wallet by using the same utility. You should choose a strong password to protect the wallet.</p>
<p>After the wallet has been created and the correct certificates imported, log onto the database and execute the following command at the SQL prompt to complete the recovery process:</p>
<pre dir="ltr">
SQL&gt; ALTER SYSTEM SET ENCRYPTION KEY "<span class="italic">certificate_id</span>" IDENTIFIED BY "<span class="italic">wallet_password</span>"
</pre>
<p>To retrieve the <code dir="ltr"><span class="codeinlineitalic">certificate_id</span></code> of the certificate in the wallet, query the <code dir="ltr">V$WALLET</code> fixed view after the wallet has been opened.</p>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="BABCFDAC"></a>
<div id="ASOAG9548" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">8.3.3</span> Export and Import of Tables with Encrypted Columns</h3>
<p>The following points are important when exporting tables containing encrypted columns:</p>
<ul>
<li>
<p>Sensitive data should remain unintelligible during transport</p>
</li>
<li>
<p>Authorized users should be able to decrypt the data after it is imported at the destination</p>
</li>
</ul>
<p>You can use the Oracle Data Pump utility to export and import tables containing encrypted columns. Oracle Data Pump makes use of the <code dir="ltr">ENCRYPTION</code> parameter to enable encryption of data in dump file sets. The <code dir="ltr">ENCRYPTION</code> parameter allows the following values:</p>
<ul>
<li>
<p><code dir="ltr">ENCRYPTED_COLUMNS_ONLY</code>: Encrypted columns are written to the dump file set in encrypted format</p>
</li>
<li>
<p><code dir="ltr">DATA_ONLY</code>: All data is written to the dump file set in encrypted format</p>
</li>
<li>
<p><code dir="ltr">METADATA_ONLY</code>: All metadata is written to the dump file set in encrypted format</p>
</li>
<li>
<p><code dir="ltr">ALL</code>: All data and metadata is written to the dump file set in encrypted format</p>
</li>
<li>
<p><code dir="ltr">NONE</code>: Encryption is not used for dump file sets</p>
</li>
</ul>
<p>The following steps discuss exporting and importing tables with encrypted columns using <code dir="ltr">ENCRYPTION=ENCRYPTED_COLUMNS_ONLY</code>:</p>
<ol>
<li>
<p>You should ensure that the encryption wallet is open, before attempting to export tables containing encrypted columns. This is because the encrypted columns need to be decrypted using the table keys, which in turn requires access to the master encryption key. The columns are reencrypted using a password, before they are exported.</p>
</li>
<li id="CJAEJHAA">
<p>Use the <code dir="ltr">ENCRYPTION_PASSWORD</code> parameter to specify a password that is used to encrypt column data in the export dump file set. The following example exports the <code dir="ltr">employee_data</code> table:</p>
<pre dir="ltr">
expdp hr TABLES=employee_data DIRECTORY=dpump_dir
DUMPFILE=dpcd2be1.dmp ENCRYPTION=ENCRYPTED_COLUMNS_ONLY
ENCRYPTION_PASSWORD=PWD2encrypt

Password: <span class="italic">password_for_hr</span>
</pre></li>
<li id="CJABAEIC">
<p>When importing data into the target database, you need to specify the same password. The password is used to decrypt the data. Data is reencrypted with the new table keys generated in the target database. The target database must have the wallet open to access the master encryption key. The following example imports the employee_data table:</p>
<pre dir="ltr">
impdp hr TABLES=employee_data DIRECTORY=dpump_dir DUMPFILE=dpcd2be1.dmp ENCRYPTION_PASSWORD=PWD2encrypt

Password: <span class="italic">password_for_hr</span>
</pre></li>
</ol>
<p>Oracle Data Pump functionality has been enhanced in Oracle Database 11<span class="italic">g</span> Release 2 (11.2). You can encrypt entire dump sets, as opposed to encrypting just transparent data encryption columns. The <code dir="ltr">ENCRYPTION_MODE</code> parameter enables you to specify the encryption mode.</p>
<p><code dir="ltr">ENCRYPTION_MODE=DUAL</code> encrypts the dump set using the master key stored in the wallet and the password provided. The following example uses dual encryption mode:</p>
<pre dir="ltr">
expdp hr DIRECTORY=dpump_dir1 DUMPFILE=hr_enc.dmp
ENCRYPTION=all ENCRYPTION_PASSWORD=PWD2encrypt
ENCRYPTION_ALGORITHM=AES256 ENCRYPTION_MODE=dual

Password: <span class="italic">password_for_hr</span>
</pre>
<p>While importing, you can use either the password or the wallet master key to decrypt the data. If the password is not supplied, then the master key in the wallet is used to decrypt the data. The wallet must be present, and open, at the target database. The open wallet is also required to reencrypt column encryption data at the target database.</p>
<p>You can use <code dir="ltr">ENCRYPTION_MODE=TRANSPARENT</code> to transparently encrypt the dump file set with the master encryption key stored in the wallet. A password is not required in this case. The wallet must be present, and open, at the target database, for successful decryption during import. The open wallet is also required to reencrypt column encryption data at the target database.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a class="olink SUTIL100" href="../../server.112/e22490/dp_overview.htm#SUTIL100">"Overview of Data Pump"</a>, <a class="olink SUTIL200" href="../../server.112/e22490/dp_export.htm#SUTIL200">"Data Pump Export",</a> and <a class="olink SUTIL300" href="../../server.112/e22490/dp_import.htm#SUTIL300">"Data Pump Import"</a> in the <a class="olink SUTIL" href="../../server.112/e22490/toc.htm"><span class="italic">Oracle Database Utilities Guide</span></a> for details on using Oracle Data Pump and the associated encryption parameters.</p>
</li>
<li>
<p><a href="#BABGEFEJ">"Creating an Encrypted Column in an External Table"</a></p>
</li>
</ul>
</div>
</div>
<!-- class="sect2" -->
<a id="CJAGBFDF"></a>
<div id="ASOAG9549" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">8.3.4</span> Performance and Storage Overheads</h3>
<p>The overhead associated with Transparent Data Encryption (TDE) can be categorized into the following:</p>
<ul>
<li>
<p><a href="#CJAEGJBE">Performance Overheads</a></p>
</li>
<li>
<p><a href="#CJAIAHIE">Storage Overheads</a></p>
</li>
</ul>
<a id="CJAEGJBE"></a>
<div id="ASOAG9550" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3"><span class="secnum">8.3.4.1</span> Performance Overheads</h4>
<p>TDE tablespace encryption has small associated overheads. While the actual performance impact on applications can vary, it is roughly estimated to be in between 5% and 8%.</p>
<p>TDE column encryption affects performance only when data is retrieved from or inserted into an encrypted column. No reduction in performance occurs for operations involving unencrypted columns, even if these columns are in a table containing encrypted columns.</p>
<p>Accessing data in encrypted columns involves small overheads. The overhead associated with encrypting or decrypting a common attribute, such as credit card number, is estimated to be around 5%. This means that a <code dir="ltr">SELECT</code> operation (involves decryption) or an <code dir="ltr">INSERT</code> operation (involves encryption) would take roughly 5% more time than what it takes with clear text data.</p>
<p>The total performance overhead depends on the number of encrypted columns and their frequency of access. The columns most appropriate for encryption are those containing the most sensitive data.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#CHDDAEIG">"Using the NOMAC Parameter to Save Disk Space and Improve Performance"</a></div>
<p>Enabling encryption on an existing table results in a full table update like any other <code dir="ltr">ALTER TABLE</code> operation that modifies table characteristics. Administrators should keep in mind the potential performance and redo log impact on the database server before enabling encryption on a large existing table.</p>
<p>A table can temporarily become inaccessible for write operations while encryption is being enabled, table keys are being rekeyed, or the encryption algorithm is being changed. You can use online table redefinition to ensure that the table is available for write operations during such procedures.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink ADMIN01514" href="../../server.112/e25494/tables.htm#ADMIN01514">"Redefining Tables Online"</a> in <span class="italic">Oracle Database Administrator's Guide</span></div>
<p>If TDE column encryption is being enabled on a very large table, then the redo log size might need to be increased to accommodate the operation.</p>
<p>It has also been observed that encrypting an indexed column takes more time than encrypting a column without indexes. If you need to encrypt a column that has an index built on it, you can try dropping the index, encrypting the column with <code dir="ltr">NO SALT</code>, and then re-creating the index.</p>
<p>If you index an encrypted column, then the index is created on the encrypted values. When you query for a value in the encrypted column, Oracle transparently encrypts the value used in the SQL query. It then performs an index lookup using the encrypted value.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
If you need to perform range scans over indexed, encrypted, columns, then you should use TDE tablespace encryption in place of TDE column encryption.</div>
</div>
<!-- class="sect3" -->
<a id="CJAIAHIE"></a>
<div id="ASOAG9551" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3"><span class="secnum">8.3.4.2</span> Storage Overheads</h4>
<p>TDE tablespace encryption has no storage overheads. However, TDE column encryption has some associated storage overheads. Encrypted column data needs more storage space than clear text data. In addition, TDE pads out encrypted values to multiples of 16 bytes. This means that if a credit card number requires 9 bytes for storage, then an encrypted credit card value will require an additional 7 bytes.</p>
<p>Each encrypted value is also associated with a 20-byte integrity check. This is not applicable if you have encrypted columns using the <code dir="ltr">NOMAC</code> parameter. Also, if data has been encrypted with salt, then each encrypted value requires an additional 16 bytes of storage.</p>
<p>The maximum storage overhead for each encrypted value is 52 bytes.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#CHDDAEIG">"Using the NOMAC Parameter to Save Disk Space and Improve Performance"</a></div>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="BABFEHEB"></a>
<div id="ASOAG9552" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">8.3.5</span> Security Considerations</h3>
<p>Security considerations for Transparent Data Encryption (TDE) operate within the broader arena of total system security. As a security administrator, you must identify the levels of risk to be addressed and the degrees of sensitivity of data maintained by the site. Costs and benefits must be evaluated for the alternative methods of achieving acceptable protections. In many cases, it makes sense to have separate security administrators, a separate wallet for TDE, and protected backup procedures for encrypted data. Having a separate wallet for TDE permits auto-login for other Oracle components but preserves password protection for the TDE wallet.</p>
<p>Additional security considerations apply to normal database and network operations when using TDE. Encrypted column data stays encrypted in the data files, undo logs, redo logs, and the buffer cache of the system global area (SGA). However, data is decrypted during expression evaluation, making it possible for decrypted data to appear in the swap file on the disk. Privileged operating system users can potentially view this data.</p>
<p>Column values encrypted using TDE are stored in the data files in encrypted form. However, these data files may still contain some clear-text fragments, called ghost copies, left over by past data operations on the table. This is similar to finding data on the disk after a file has been deleted by the operating system.</p>
<p>Old clear-text fragments may be present for some time until the database overwrites the blocks containing such values. If privileged operating system users bypass the access controls of the database, they might be able to directly access these values in the data file holding the tablespace. You can use the following procedure to minimize this risk:</p>
<ol>
<li>
<p>Create a new tablespace in a new data file. You can use the <code dir="ltr">CREATE TABLESPACE</code> statement.</p>
</li>
<li>
<p>Move the table containing encrypted columns to the new tablespace. You can use the <code dir="ltr">ALTER TABLE.....MOVE</code> statement. Repeat this step for all objects in the original tablespace.</p>
</li>
<li>
<p>Drop the original tablespace. You can use the <code dir="ltr">DROP TABLESPACE</code> <code dir="ltr"><span class="codeinlineitalic">tablespace</span></code> <code dir="ltr">INCLUDING CONTENTS KEEP DATAFILES</code> statement. Oracle recommends that you securely delete data files using platform specific utilities.</p>
</li>
<li>
<p>Use platform and file system specific utilities to securely delete the old data file. Examples of such utilities include <code dir="ltr">shred</code> (on Linux) and <code dir="ltr">sdelete</code> (on Windows).</p>
</li>
</ol>
</div>
<!-- class="sect2" -->
<a id="CIHFCGFJ"></a>
<div id="ASOAG10538" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">8.3.6</span> Using Transparent Data Encryption in a Multi-Database Environment</h3>
<p>If <a id="sthref284"></a>there are multiple Oracle databases installed on the same server (for example, databases sharing the same Oracle binary but using different data files), then each database must access its own Transparent Data Encryption wallet. Wallets are not designed to be shared between databases. By design, there must be one wallet per database. You cannot use the same wallet for more than one database.</p>
<p>To configure the <code dir="ltr">sqlnet.ora</code> file for a multi-database environment, use one of the following options:</p>
<ol>
<li>
<p>If the databases share the same Oracle home, then keep the <code dir="ltr">sqlnet.ora</code> file in the default location, which is in the <code dir="ltr"><span class="codeinlineitalic">ORACLE_HOME</span></code><code dir="ltr">/network/admin</code> directory.</p>
<p>In this case, it is ideal to use the default location. Ensure that the <code dir="ltr">sqlnet.ora</code> file has no <code dir="ltr">WALLET_LOCATION</code> or <code dir="ltr">ENCRYPTION_WALLET_LOCATION</code> entries. Transparent Data Encryption accesses the wallet from the default <code dir="ltr">sqlnet.ora</code> location if these two entries are not in the <code dir="ltr">sqlnet.ora</code> file.</p>
</li>
<li>
<p>If Option 1 is not feasible for your site, then you can specify the wallet location based on an environment variable setting, such as <code dir="ltr">ORACLE_SID</code>. For example:</p>
<pre dir="ltr">
ENCRYPTION_WALLET_LOCATION =
 (SOURCE =
  (METHOD = FILE)
   (METHOD_DATA =
    (DIRECTORY = /home/oracle/wallet/$ORACLE_SID)
</pre></li>
<li>
<p>If Options 1 and 2 are not feasible, then use separate <code dir="ltr">sqlnet.ora</code> files, one for each database. Ensure that you have correctly set the <code dir="ltr">TNS_ADMIN</code> environment variable to point to the correct database configuration. See SQL*Plus User's Guide and Reference for more information and examples of setting the <code dir="ltr">TNS_ADMIN</code> variable.</p>
</li>
</ol>
<div class="infobox-note">
<p class="notep1">Caution:</p>
Using a wallet from another database can cause partial or complete data loss.</div>
</div>
<!-- class="sect2" -->
<a id="BABEEEIH"></a>
<div id="ASOAG9553" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">8.3.7</span> Replication in Distributed Environments</h3>
<p>Oracle Data Guard supports Transparent Data Encryption (TDE). If the primary database uses TDE, then each standby database in a Data Guard configuration must have a copy of the encryption wallet from the primary database. If you reset the master encryption key in the primary database, then the wallet containing the master encryption key needs to be copied to each standby database.</p>
<p>Encrypted data in log files remains encrypted when data is transferred to the standby database. Encrypted data also stays encrypted during transit.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink SBYDB00305" href="../../server.112/e41134/data_support.htm#SBYDB00305">Appendix C</a> in the <a class="olink SBYDB" href="../../server.112/e41134/toc.htm"><span class="italic">Oracle Data Guard Concepts and Administration Guide</span></a> for more information about the use of TDE with logical standby databases</div>
<p>TDE works with SQL*Loader direct path loads. The data loaded into encrypted columns is transparently encrypted during the direct path load.</p>
<p>Materialized views work with TDE tablespace encryption. You can create both materialized views and materialized view logs in encrypted tablespaces.</p>
<p>Materialized views also work with TDE column encryption. However, materialized view logs cannot contain encrypted columns.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink REPLN003" href="../../server.112/e10706/repmview.htm#REPLN003">"Materialized View Concepts and Architecture"</a> in the <a class="olink REPLN" href="../../server.112/e10706/toc.htm"><span class="italic">Oracle Database Advanced Replication Guide</span></a> for more information on materialized views</div>
</div>
<!-- class="sect2" -->
<a id="CIHBAJEE"></a>
<div id="ASOAG10539" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">8.3.8</span> Compression and Data Deduplication of Encrypted Data</h3>
<p>With <a id="sthref285"></a>tablespace <a id="sthref286"></a>encryption, <a id="sthref287"></a>Oracle Database <a id="sthref288"></a>compresses tables and indexes before encrypting the tablespace. This ensures that you receive the maximum space and performance benefits from compression, while also receiving the security of encryption at rest. In the <code dir="ltr">CREATE TABLESPACE</code> SQL statement, include both the <code dir="ltr">COMPRESS</code> and <code dir="ltr">ENCRYPT</code> clauses.</p>
<p>With column encryption, Oracle Database compresses the data after it encrypts the column. This means that compression will have minimal effectiveness on encrypted columns. There is one notable exception: if the column is a SecureFiles LOB, and the encryption is implemented with SecureFiles LOB Encryption, and the compression (and possibly deduplication) are implemented with SecureFiles LOB Compression &amp; Deduplication, then compression is performed before encryption. Similar to the <code dir="ltr">CREATE TABLESPACE</code> statement for tablespace encryption, include both the <code dir="ltr">COMPRESS</code> and <code dir="ltr">ENCRYPT</code> clauses.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a class="olink BRADV187" href="../../backup.112/e10642/rcmconfa.htm#BRADV187"><span class="italic">Oracle Database Backup and Recovery User's Guide</span></a> for more information about the Advanced Compression Option</p>
</li>
<li>
<p><a class="olink ADLOB45162" href="../../appdev.112/e18294/adlob_smart.htm#ADLOB45162"><span class="italic">Oracle Database SecureFiles and Large Objects Developer's Guide</span></a> for information about SecureFiles LOB storage</p>
</li>
</ul>
</div>
</div>
<!-- class="sect2" -->
<a id="BABFEEAE"></a>
<div id="ASOAG9554" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">8.3.9</span> Transparent Data Encryption with OCI</h3>
<p>Row shipping cannot be used, because the key to make the row usable is not available at the receipt-point.</p>
</div>
<!-- class="sect2" -->
<a id="CIHIDCHC"></a>
<div id="ASOAG10540" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">8.3.10</span> Transparent Data Encryption in a Multi-Database Environment</h3>
<p>If <a id="sthref289"></a>there are multiple Oracle databases installed on the same server (for example, databases sharing the same Oracle binary but using different data files), then each database must access its own Transparent Data Encryption keystore. Wallets are not designed to be shared between databases. By design, there must be one wallet per database. You cannot use the same wallet for more than one database.</p>
<p>To configure the <code dir="ltr">sqlnet.ora</code> file for a multi-database environment, use one of the following options:</p>
<ol>
<li>
<p>If the databases share the same Oracle home, then keep the <code dir="ltr">sqlnet.ora</code> file in the default location, which is in the <code dir="ltr"><span class="codeinlineitalic">ORACLE_HOME</span></code><code dir="ltr">/network/admin</code> directory.</p>
<p>In this case, it is ideal to use the default location. Ensure that the <code dir="ltr">sqlnet.ora</code> file has no <code dir="ltr">WALLET_LOCATION</code> or <code dir="ltr">ENCRYPTION_WALLET_LOCATION</code> entries. Transparent Data Encryption accesses the wallet from the default <code dir="ltr">sqlnet.ora</code> location if these two entries are not in the <code dir="ltr">sqlnet.ora</code> file.</p>
<pre dir="ltr">
</pre></li>
<li>
<p>If Option 1 is not feasible for your site, then you can specify the wallet location based on an environment variable setting, such as <code dir="ltr">ORACLE_SID</code>. For example:</p>
<pre dir="ltr">
ENCRYPTION_WALLET_LOCATION =
 (SOURCE =
  (METHOD = FILE)
   (METHOD_DATA =
    (DIRECTORY = /home/oracle/wallet/$ORACLE_SID)
</pre></li>
<li>
<p>If Options 1 and 2 are not feasible, then use separate <code dir="ltr">sqlnet.ora</code> files, one for each database. Ensure that the <code dir="ltr">TNS_ADMIN</code> environment variable is correctly set to point to the correct database configuration. See <a class="olink SQPUG004" href="../../server.112/e16604/qstart.htm#SQPUG004"><span class="italic">SQL*Plus User's Guide and Reference</span></a> for more information and examples of setting the <code dir="ltr">TNS_ADMIN</code> variable.</p>
</li>
</ol>
<div class="infobox-note">
<p class="notep1">Caution:</p>
Using a keystore from another database can cause partial or complete data loss.</div>
</div>
<!-- class="sect2" -->
<a id="BABHABCA"></a>
<div id="ASOAG9555" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">8.3.11</span> Transparent Data Encryption Data Dictionary Views</h3>
<p>The following data dictionary views maintain information about encryption details, tablespaces, and wallet details:</p>
<ul>
<li>
<p><code dir="ltr">ALL_ENCRYPTED_COLUMNS</code></p>
<p>The <code dir="ltr">ALL_ENCRYPTED_COLUMNS</code> view displays encryption information about encrypted columns in the tables accessible to the current user. <a href="#CHDCGJJJ">Table 8-2</a> lists the information included in this view:</p>
<div id="ASOAG10164" class="tblformal">
<p class="titleintable"><a id="sthref290"></a><a id="CHDCGJJJ"></a>Table 8-2 Description of the ALL_ENCRYPTED_COLUMNS Data Dictionary View</p>
<table class="cellalignment2240" title="Description of the ALL_ENCRYPTED_COLUMNS Data Dictionary View" summary="Description of the ALL_ENCRYPTED_COLUMNS Data Dictionary View" dir="ltr">
<thead>
<tr class="cellalignment2228">
<th class="cellalignment2235" id="r1c1-t50">Column</th>
<th class="cellalignment2235" id="r1c2-t50">Datatype</th>
<th class="cellalignment2235" id="r1c3-t50">NULL</th>
<th class="cellalignment2235" id="r1c4-t50">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2228">
<td class="cellalignment2236" id="r2c1-t50" headers="r1c1-t50">
<p><code dir="ltr">OWNER</code></p>
</td>
<td class="cellalignment2236" headers="r2c1-t50 r1c2-t50">
<p><code dir="ltr">VARCHAR2(30)</code></p>
</td>
<td class="cellalignment2236" headers="r2c1-t50 r1c3-t50">
<p><code dir="ltr">NOT NULL</code></p>
</td>
<td class="cellalignment2236" headers="r2c1-t50 r1c4-t50">
<p>Owner of the table</p>
</td>
</tr>
<tr class="cellalignment2228">
<td class="cellalignment2236" id="r3c1-t50" headers="r1c1-t50">
<p><code dir="ltr">TABLE_NAME</code></p>
</td>
<td class="cellalignment2236" headers="r3c1-t50 r1c2-t50">
<p><code dir="ltr">VARCHAR2(30)</code></p>
</td>
<td class="cellalignment2236" headers="r3c1-t50 r1c3-t50">
<p><code dir="ltr">NOT NULL</code></p>
</td>
<td class="cellalignment2236" headers="r3c1-t50 r1c4-t50">
<p>Name of the table</p>
</td>
</tr>
<tr class="cellalignment2228">
<td class="cellalignment2236" id="r4c1-t50" headers="r1c1-t50">
<p><code dir="ltr">COLUMN_NAME</code></p>
</td>
<td class="cellalignment2236" headers="r4c1-t50 r1c2-t50">
<p><code dir="ltr">VARCHAR2(30)</code></p>
</td>
<td class="cellalignment2236" headers="r4c1-t50 r1c3-t50">
<p><code dir="ltr">NOT NULL</code></p>
</td>
<td class="cellalignment2236" headers="r4c1-t50 r1c4-t50">
<p>Name of the column</p>
</td>
</tr>
<tr class="cellalignment2228">
<td class="cellalignment2236" id="r5c1-t50" headers="r1c1-t50">
<p><code dir="ltr">ENCRYPTION_ALG</code></p>
</td>
<td class="cellalignment2236" headers="r5c1-t50 r1c2-t50">
<p><code dir="ltr">VARCHAR2(29)</code></p>
</td>
<td class="cellalignment2236" headers="r5c1-t50 r1c3-t50">&nbsp;</td>
<td class="cellalignment2236" headers="r5c1-t50 r1c4-t50">
<p>Encryption algorithm used to protect secrecy of data in this table:</p>
<ul>
<li>
<p><code dir="ltr">3 Key Triple DES 168 bits key</code></p>
</li>
<li>
<p><code dir="ltr">AES 128 bits key</code></p>
</li>
<li>
<p><code dir="ltr">AES 192 bits key</code></p>
</li>
<li>
<p><code dir="ltr">AES 256 bits key</code></p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment2228">
<td class="cellalignment2236" id="r6c1-t50" headers="r1c1-t50">
<p><code dir="ltr">SALT</code></p>
</td>
<td class="cellalignment2236" headers="r6c1-t50 r1c2-t50">
<p><code dir="ltr">VARCHAR2(3)</code></p>
</td>
<td class="cellalignment2236" headers="r6c1-t50 r1c3-t50">&nbsp;</td>
<td class="cellalignment2236" headers="r6c1-t50 r1c4-t50">
<p>Indicates whether the column is encrypted with SALT (<code dir="ltr">YES</code>) or not (<code dir="ltr">NO</code>)</p>
</td>
</tr>
<tr class="cellalignment2228">
<td class="cellalignment2236" id="r7c1-t50" headers="r1c1-t50">
<p><code dir="ltr">INTEGRITY_ALG</code></p>
</td>
<td class="cellalignment2236" headers="r7c1-t50 r1c2-t50">
<p><code dir="ltr">VARCHAR2(12)</code></p>
</td>
<td class="cellalignment2236" headers="r7c1-t50 r1c3-t50">&nbsp;</td>
<td class="cellalignment2236" headers="r7c1-t50 r1c4-t50">
<p>Integrity algorithm used for the table:</p>
<ul>
<li>
<p><code dir="ltr">SHA-1</code></p>
</li>
<li>
<p><code dir="ltr">NOMAC</code></p>
</li>
</ul>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></li>
<li>
<p><code dir="ltr">DBA_ENCRYPTED_COLUMNS</code></p>
<p>The <code dir="ltr">DBA_ENCRYPTED_COLUMNS</code> view displays encryption information for all encrypted columns in the database. The view details are the same as the <code dir="ltr">ALL_ENCRYPTED_COLUMNS</code> view.</p>
</li>
<li>
<p><code dir="ltr">USER_ENCRYPTED_COLUMNS</code></p>
<p>The <code dir="ltr">USER_ENCRYPTED_COLUMNS</code> view displays encryption information for encrypted table columns in the user's schema.<a id="sthref291"></a> The view details are the same as the <code dir="ltr">ALL_ENCRYPTED_COLUMNS</code> view, except for the <code dir="ltr">OWNER</code> column. The <code dir="ltr">OWNER</code> column is not included, as data from only tables owned by the user are displayed.</p>
</li>
<li>
<p><code dir="ltr">V$ENCRYPTED_TABLESPACES</code></p>
<p>The <code dir="ltr">V$ENCRYPTED_TABLESPACES</code> view displays information about the tablespaces that are encrypted. <a href="#CHDGGAHH">Table 8-3</a> lists the information included in this view:</p>
<div id="ASOAG10165" class="tblformal">
<p class="titleintable"><a id="sthref292"></a><a id="CHDGGAHH"></a>Table 8-3 Description of the V$ENCRYPTED_TABLESPACES View</p>
<table class="cellalignment2240" title="Description of the V$ENCRYPTED_TABLESPACES View" summary="Description of the V$ENCRYPTED_TABLESPACES View" dir="ltr">
<thead>
<tr class="cellalignment2228">
<th class="cellalignment2235" id="r1c1-t51">Column</th>
<th class="cellalignment2235" id="r1c2-t51">Datatype</th>
<th class="cellalignment2235" id="r1c3-t51">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2228">
<td class="cellalignment2236" id="r2c1-t51" headers="r1c1-t51">
<p><code dir="ltr">TS#</code></p>
</td>
<td class="cellalignment2236" headers="r2c1-t51 r1c2-t51">
<p><code dir="ltr">NUMBER</code></p>
</td>
<td class="cellalignment2236" headers="r2c1-t51 r1c3-t51">
<p>Tablespace number</p>
</td>
</tr>
<tr class="cellalignment2228">
<td class="cellalignment2236" id="r3c1-t51" headers="r1c1-t51">
<p><code dir="ltr">ENCRYPTIONALG</code></p>
</td>
<td class="cellalignment2236" headers="r3c1-t51 r1c2-t51">
<p><code dir="ltr">VARCHAR2(7)</code></p>
</td>
<td class="cellalignment2236" headers="r3c1-t51 r1c3-t51">
<p>Encryption algorithm:</p>
<ul>
<li>
<p><code dir="ltr">NONE</code></p>
</li>
<li>
<p><code dir="ltr">3DES168</code></p>
</li>
<li>
<p><code dir="ltr">AES128</code></p>
</li>
<li>
<p><code dir="ltr">AES192</code></p>
</li>
<li>
<p><code dir="ltr">AES256</code></p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment2228">
<td class="cellalignment2236" id="r4c1-t51" headers="r1c1-t51">
<p><code dir="ltr">ENCRYPTEDTS</code></p>
</td>
<td class="cellalignment2236" headers="r4c1-t51 r1c2-t51">
<p><code dir="ltr">VARCHAR2(3)</code></p>
</td>
<td class="cellalignment2236" headers="r4c1-t51 r1c3-t51">
<p>Indicates whether the tablespace is encrypted (<code dir="ltr">YES</code>) or not (<code dir="ltr">NO</code>)</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></li>
<li>
<p><code dir="ltr">V$WALLET</code></p>
<p>The <code dir="ltr">V$WALLET</code> view displays metadata information for a PKI certificate, which may be used as a master key for TDE. <a href="#CHDIGFHH">Table 8-4</a> summarizes the information included in this view.</p>
<div id="ASOAG10166" class="tblformal">
<p class="titleintable"><a id="sthref293"></a><a id="CHDIGFHH"></a>Table 8-4 Description of the V$WALLET View</p>
<table class="cellalignment2240" title="Description of the V$WALLET View" summary="Description of the V$WALLET View" dir="ltr">
<thead>
<tr class="cellalignment2228">
<th class="cellalignment2235" id="r1c1-t52">Column</th>
<th class="cellalignment2235" id="r1c2-t52">Datatype</th>
<th class="cellalignment2235" id="r1c3-t52">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2228">
<td class="cellalignment2236" id="r2c1-t52" headers="r1c1-t52">
<p><code dir="ltr">CERT_ID</code></p>
</td>
<td class="cellalignment2236" headers="r2c1-t52 r1c2-t52">
<p><code dir="ltr">VARCHAR2(52)</code></p>
</td>
<td class="cellalignment2236" headers="r2c1-t52 r1c3-t52">
<p>A unique certificate identifier value used to specify a particular PKI certificate for use as the master key</p>
</td>
</tr>
<tr class="cellalignment2228">
<td class="cellalignment2236" id="r3c1-t52" headers="r1c1-t52">
<p><code dir="ltr">DN</code></p>
</td>
<td class="cellalignment2236" headers="r3c1-t52 r1c2-t52">
<p><code dir="ltr">VARCHAR2(255)</code></p>
</td>
<td class="cellalignment2236" headers="r3c1-t52 r1c3-t52">
<p>Distinguished name of a particular PKI certificate</p>
</td>
</tr>
<tr class="cellalignment2228">
<td class="cellalignment2236" id="r4c1-t52" headers="r1c1-t52">
<p><code dir="ltr">SERIAL_NUM</code></p>
</td>
<td class="cellalignment2236" headers="r4c1-t52 r1c2-t52">
<p><code dir="ltr">VARCHAR2(40)</code></p>
</td>
<td class="cellalignment2236" headers="r4c1-t52 r1c3-t52">
<p>Unique serial number assigned to a certificate by the issuer or signer</p>
</td>
</tr>
<tr class="cellalignment2228">
<td class="cellalignment2236" id="r5c1-t52" headers="r1c1-t52">
<p><code dir="ltr">ISSUER</code></p>
</td>
<td class="cellalignment2236" headers="r5c1-t52 r1c2-t52">
<p><code dir="ltr">VARCHAR2(255)</code></p>
</td>
<td class="cellalignment2236" headers="r5c1-t52 r1c3-t52">
<p>Distinguished name of the Certificate Authority or issuer that issued and signed the certificate</p>
</td>
</tr>
<tr class="cellalignment2228">
<td class="cellalignment2236" id="r6c1-t52" headers="r1c1-t52">
<p><code dir="ltr">KEYSIZE</code></p>
</td>
<td class="cellalignment2236" headers="r6c1-t52 r1c2-t52">
<p><code dir="ltr">NUMBER</code></p>
</td>
<td class="cellalignment2236" headers="r6c1-t52 r1c3-t52">
<p>Size of the PKI key associated with the certificate</p>
</td>
</tr>
<tr class="cellalignment2228">
<td class="cellalignment2236" id="r7c1-t52" headers="r1c1-t52">
<p><code dir="ltr">STATUS</code></p>
</td>
<td class="cellalignment2236" headers="r7c1-t52 r1c2-t52">
<p><code dir="ltr">VARCHAR2(16)</code></p>
</td>
<td class="cellalignment2236" headers="r7c1-t52 r1c3-t52">
<p>Current status of the certificate:</p>
<ul>
<li>
<p><code dir="ltr">UNUSED</code></p>
</li>
<li>
<p><code dir="ltr">IN USE</code></p>
</li>
<li>
<p><code dir="ltr">USED</code></p>
</li>
</ul>
<p>This column allows the user to identify whether a certificate is currently in use or has already been used for transparent database encryption.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></li>
<li>
<p><code dir="ltr">V$ENCRYPTION_WALLET</code></p>
<p><code dir="ltr">V$ENCRYPTION_WALLET</code> displays information on the status of the wallet and the wallet location for TDE. <a href="#CHDHGCFB">Table 8-5</a> summarizes the information included in this view.</p>
<div id="ASOAG10167" class="tblformal">
<p class="titleintable"><a id="sthref294"></a><a id="CHDHGCFB"></a>Table 8-5 Description of the V$ENCRYPTION_WALLET View</p>
<table class="cellalignment2240" title="Description of the V$ENCRYPTION_WALLET View" summary="Description of the V$ENCRYPTION_WALLET View" dir="ltr">
<thead>
<tr class="cellalignment2228">
<th class="cellalignment2235" id="r1c1-t53">Column</th>
<th class="cellalignment2235" id="r1c2-t53">Datatype</th>
<th class="cellalignment2235" id="r1c3-t53">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2228">
<td class="cellalignment2236" id="r2c1-t53" headers="r1c1-t53">
<p><code dir="ltr">WRL_TYPE</code></p>
</td>
<td class="cellalignment2236" headers="r2c1-t53 r1c2-t53">
<p><code dir="ltr">VARCHAR2(20)</code></p>
</td>
<td class="cellalignment2236" headers="r2c1-t53 r1c3-t53">
<p>Type of the wallet resource locator (for example, <code dir="ltr">FILE</code>)</p>
</td>
</tr>
<tr class="cellalignment2228">
<td class="cellalignment2236" id="r3c1-t53" headers="r1c1-t53">
<p><code dir="ltr">WRL_PARAMETER</code></p>
</td>
<td class="cellalignment2236" headers="r3c1-t53 r1c2-t53">
<p><code dir="ltr">VARCHAR2(4000)</code></p>
</td>
<td class="cellalignment2236" headers="r3c1-t53 r1c3-t53">
<p>Parameter of the wallet resource locator (for example, absolute filename if <code dir="ltr">WRL_TYPE</code> = <code dir="ltr">FILE</code>)</p>
</td>
</tr>
<tr class="cellalignment2228">
<td class="cellalignment2236" id="r4c1-t53" headers="r1c1-t53">
<p><code dir="ltr">STATUS</code></p>
</td>
<td class="cellalignment2236" headers="r4c1-t53 r1c2-t53">
<p><code dir="ltr">VARCHAR2(9)</code></p>
</td>
<td class="cellalignment2236" headers="r4c1-t53 r1c3-t53">
<p>Status of the wallet:</p>
<ul>
<li>
<p><code dir="ltr">OPEN</code></p>
</li>
<li>
<p><code dir="ltr">CLOSED</code></p>
</li>
<li>
<p><code dir="ltr">UNDEFINED</code></p>
</li>
<li>
<p><code dir="ltr">OPEN_NO_MASTER_KEY</code></p>
</li>
</ul>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink REFRN" href="../../server.112/e40402/toc.htm"><span class="italic">Oracle Database Reference</span></a> for a full description of these data dictionary views.</div>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="CJAHCCHC"></a>
<div id="ASOAG9566" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1"><span class="secnum">8.4</span> Example: Getting Started with TDE Column Encryption and TDE Tablespace Encryption</h2>
<p>This section uses a tutorial approach to help you get started with TDE column encryption and TDE tablespace encryption. We illustrate the following tasks using sample scenarios:</p>
<ul>
<li>
<p><a href="#CJACJFCG">Prepare the Database for Transparent Data Encryption</a></p>
</li>
<li>
<p><a href="#CJACFCDG">Create a Table with an Encrypted Column</a></p>
</li>
<li>
<p><a href="#CJAIJBGE">Create an Index on an Encrypted Column</a></p>
</li>
<li>
<p><a href="#CJAJIGJJ">Alter a Table to Encrypt an Existing Column</a></p>
</li>
<li>
<p><a href="#CJAICDJE">Create an Encrypted Tablespace</a></p>
</li>
<li>
<p><a href="#CJAFJEDJ">Create a Table in an Encrypted Tablespace</a></p>
</li>
</ul>
<a id="CJACJFCG"></a>
<div id="ASOAG9567" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">8.4.1</span> Prepare the Database for Transparent Data Encryption</h3>
<p>In order to start using Transparent Data Encryption (TDE), let us first prepare the database by specifying an Oracle wallet location and setting the master encryption key. The following steps prepare the database to use TDE:</p>
<ol>
<li>
<p><a href="#CJAHIAAI">Specify an Oracle Wallet Location in the sqlnet.ora File</a></p>
</li>
<li>
<p><a href="#CJAGCFDG">Create the Master Encryption Key</a></p>
</li>
<li>
<p><a href="#CJABEIBH">Open the Oracle Wallet</a></p>
</li>
</ol>
<a id="CJAHIAAI"></a>
<div id="ASOAG9568" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3"><span class="secnum">8.4.1.1</span> Specify an Oracle Wallet Location in the <a id="sthref295"></a>sqln<a id="sthref296"></a>et.ora File</h4>
<p>Open the <code dir="ltr">sqlnet.ora</code> file located in <code dir="ltr">$ORACLE_HOME/network/admin</code>. Enter the following line at the end of the file:</p>
<pre dir="ltr">
<a id="sthref297"></a>ENCRYPTION_WALLET_LOCATION=
  (SOURCE=(METHOD=FILE)(METHOD_DATA=
   (DIRECTORY=/app/wallet)))
</pre>
<p>Save the changes and close the file.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
You can choose any directory for the encrypted wallet, but the path should not point to the standard obfuscated wallet (<code dir="ltr">cwallet.sso</code>) created during the database installation.</div>
</div>
<!-- class="sect3" -->
<a id="CJAGCFDG"></a>
<div id="ASOAG9569" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3"><span class="secnum">8.4.1.2</span> Create the Master Encryption Key</h4>
<p>Next, we need to create the master encryption key, which is used to encrypt the table keys. Enter the following commands to create the master encryption key:</p>
<pre dir="ltr">
SQL&gt; <a id="sthref298"></a>ALTER SYSTEM SET ENCRYPTION KEY IDENTIFIED BY "Easy2rem";
</pre>
<p>The preceding command achieves the following:</p>
<ul>
<li>
<p>If no encrypted wallet is present in the directory specified, an encrypted wallet is created (<code dir="ltr">ewallet.p12</code>), the wallet is opened, and the master encryption key for TDE is created/re-created.</p>
</li>
<li>
<p>If an encrypted wallet is present in the directory specified, the wallet is opened, and the master encryption key for TDE is created/re-created.</p>
</li>
</ul>
<div class="infobox-note">
<p class="notep1">Note:</p>
<ul>
<li>
<p>The master encryption key should only be created once, unless you want to reencrypt your data with a new encryption key.</p>
</li>
<li>
<p>Only users with the <code dir="ltr">ALTER SYSTEM</code> privilege can create a master encryption key or open the wallet.</p>
</li>
</ul>
</div>
</div>
<!-- class="sect3" -->
<a id="CJABEIBH"></a>
<div id="ASOAG9570" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3"><span class="secnum">8.4.1.3</span> Open the Oracle Wallet</h4>
<p>Every time the database is shut down, the Oracle wallet is closed. You can also explicitly close the wallet.</p>
<p>You need to make sure that the Oracle wallet is open before you can perform any encryption or decryption operation. Use the following command to open the wallet containing the master encryption key:</p>
<pre dir="ltr">
SQL&gt; ALTER SYSTEM <a id="sthref299"></a><a id="sthref300"></a>SET ENCRYPTION WALLET OPEN IDENTIFIED BY "Easy2rem";
</pre>
<div class="infobox-note">
<p class="notep1">Note:</p>
The password used with the preceding command is the same that you used to create the master encryption key. This becomes the password to open the wallet and make the master encryption key accessible.</div>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="CJACFCDG"></a>
<div id="ASOAG9571" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">8.4.2</span> Create a Table with an Encrypted Column</h3>
<p>We can now create tables with encrypted columns. Let us create a table called <code dir="ltr">cust_payment_info</code>. This table contains a column called <code dir="ltr">credit_card_number</code>. The <code dir="ltr">credit_card_number</code> column contains sensitive data, which we would like to encrypt. Use the following command to create the table:</p>
<pre dir="ltr">
CREATE TABLE cust_payment_info 
  (first_name VARCHAR2(11), 
  last_name VARCHAR2(10), 
  order_number NUMBER(5), 
  credit_card_number VARCHAR2(16) ENCRYPT NO SALT,
  active_card VARCHAR2(3));
</pre>
<p>The table is created in the default tablespace of the user that issues this command. The <code dir="ltr">credit_card_number</code> column is encrypted without SALT. All data entered for the <code dir="ltr">credit_card_number</code> column would be encrypted on disk. Any user with access to the <code dir="ltr">credit_card_number</code> data can view the decrypted data. A database user or application need not be aware if the contents of a particular column are encrypted on the disk.</p>
<p>You can now enter data into the table. The following example adds some sample data to the <code dir="ltr">cust_payment_info</code> table:</p>
<pre dir="ltr">
INSERT INTO cust_payment_info VALUES
  ('Jon', 'Oldfield', 10001, '5446959708812985','YES');
INSERT INTO cust_payment_info VALUES
  ('Chris', 'White', 10002, '5122358046082560','YES'); 
INSERT INTO cust_payment_info VALUES
  ('Alan', 'Squire', 10003, '5595968943757920','YES');
INSERT INTO cust_payment_info VALUES
  ('Mike', 'Anderson', 10004, '4929889576357400','YES');
INSERT INTO cust_payment_info VALUES
  ('Annie', 'Schmidt', 10005, '4556988708236902','YES');
INSERT INTO cust_payment_info VALUES
  ('Elliott', 'Meyer', 10006, '374366599711820','YES');
INSERT INTO cust_payment_info VALUES
  ('Celine', 'Smith', 10007, '4716898533036','YES');
INSERT INTO cust_payment_info VALUES
  ('Steve', 'Haslam', 10008, '340975900376858','YES');
INSERT INTO cust_payment_info VALUES
  ('Albert', 'Einstein', 10009, '310654305412389','YES');
</pre>
<p>All data entered into the <code dir="ltr">credit_card_number</code> column is stored on the disk in encrypted form.</p>
</div>
<!-- class="sect2" -->
<a id="CJAIJBGE"></a>
<div id="ASOAG9572" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">8.4.3</span> Create an Index on an Encrypted Column</h3>
<p>You can create an index on an encrypted column if it has been encrypted without salt. Let us create an index on the <code dir="ltr">credit_card_number</code> column. The following command creates an index on the <code dir="ltr">credit_card_number</code> column:</p>
<pre dir="ltr">
CREATE INDEX cust_payment_info_idx ON cust_payment_info (credit_card_number);
</pre></div>
<!-- class="sect2" -->
<a id="CJAJIGJJ"></a>
<div id="ASOAG9573" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">8.4.4</span> Alter a Table to Encrypt an Existing Column</h3>
<p>You can use the <code dir="ltr">ALTER TABLE</code> command to alter an existing table. Let us alter a table called <code dir="ltr">employees</code> with no encrypted columns. The following command describes the employees table:</p>
<pre dir="ltr">
SQL&gt; DESC employees
 Name                                      Null?    Type
 ----------------------------------------- -------- ----------------------------
 FIRSTNAME                                          VARCHAR2(11)
 LASTNAME                                           VARCHAR2(10)
 EMP_SSN                                            VARCHAR2(9)
 DEPT                                               VARCHAR2(20)
</pre>
<p>The following command encrypts the <code dir="ltr">emp_ssn</code> column in the employees table:</p>
<pre dir="ltr">
SQL&gt; ALTER TABLE employees MODIFY (emp_ssn ENCRYPT);
</pre>
<p>The following command describes the altered <code dir="ltr">employees</code> table:</p>
<pre dir="ltr">
SQL&gt; DESC employees
 Name                                      Null?    Type
 ----------------------------------------- -------- ----------------------------
 FIRSTNAME                                          VARCHAR2(11)
 LASTNAME                                           VARCHAR2(10)
 EMP_SSN                                            VARCHAR2(9) ENCRYPT
 DEPT                                               VARCHAR2(20)
</pre>
<p>All existing data in the <code dir="ltr">emp_ssn</code> column will now be encrypted on the disk. Data would be transparently decrypted for users, who otherwise have access to the data.</p>
</div>
<!-- class="sect2" -->
<a id="CJAICDJE"></a>
<div id="ASOAG9574" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">8.4.5</span> Create an Encrypted Tablespace</h3>
<p>TDE tablespace encryption enables you to encrypt an entire tablespace. All data stored in the tablespace is encrypted by default. Thus, if you create any table in an encrypted tablespace, it is encrypted by default. You do not need to perform a granular analysis of each table column to determine the columns that need encryption.</p>
<p>Let us create an encrypted tablespace to store encrypted tables. The following command creates an encrypted tablespace called <code dir="ltr">securespace</code>:</p>
<pre dir="ltr">
SQL&gt; CREATE TABLESPACE securespace
  2  DATAFILE '/home/oracle/oracle3/product/11.1.0/db_1/secure01.dbf'
  3  SIZE 150M
  4  ENCRYPTION
  5  DEFAULT STORAGE(ENCRYPT);
Tablespace created.
</pre></div>
<!-- class="sect2" -->
<a id="CJAFJEDJ"></a>
<div id="ASOAG9575" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">8.4.6</span> Create a Table in an Encrypted Tablespace</h3>
<p>If we create a table in an encrypted tablespace, then all data in the table is stored in encrypted form on the disk. The following command creates a table called, <code dir="ltr">customer_info_payment</code> in an encrypted tablespace called, <code dir="ltr">securespace</code>.</p>
<pre dir="ltr">
SQL&gt; CREATE TABLE customer_payment_info
  2  (first_name VARCHAR2(11),
  3  last_name VARCHAR2(10),
  4  order_number NUMBER(5),
  5  credit_card_number VARCHAR2(16),
  6  active_card VARCHAR2(3))TABLESPACE securespace;
Table created.
</pre></div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="CHDJJAJB"></a>
<div id="ASOAG9576" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1"><span class="secnum">8.5</span> Troubleshooting Transparen<a id="ABC1252068"></a>t Data Encryption</h2>
<p>This section lists common error messages that you may encounter while configuring and using Transparent Data Encryption (TDE). It also lists the common causes of these error messages and possible solutions for them.</p>
<div class="msgset">
<div class="msgentry">
<dl>
<dt><span class="msg"><a id="sthref301"></a><a id="sthref302"></a>ORA-28330: encryption is not allowed for this data type</span> <!-- class="msg" --></dt>
<dd>
<div class="msgexplan"><span class="msgexplankw">Cause:</span> Data type was not supported for column encryption.</div>
<!-- class="msgexplan" --></dd>
<dd>
<div class="msgaction"><span class="msgactionkw">Action:</span> None</div>
<!-- class="msgaction" --></dd>
</dl>
</div>
<!-- class="msgentry" -->
<div class="msgentry">
<dl>
<dt><span class="msg"><a id="sthref303"></a><a id="sthref304"></a>ORA-28331: encrypted column size too long for its data type</span> <!-- class="msg" --></dt>
<dd>
<div class="msgexplan"><span class="msgexplankw">Cause:</span> column was encrypted and for VARCHAR2, the length specified was &gt; 3932; for CHAR, the length specified was &gt; 1932; for NVARCHAR2, the length specified was &gt; 1966; for NCHAR, the length specified was &gt; 966;</div>
<!-- class="msgexplan" --></dd>
<dd>
<div class="msgaction"><span class="msgactionkw">Action:</span> Reduce the column size.</div>
<!-- class="msgaction" --></dd>
</dl>
</div>
<!-- class="msgentry" -->
<div class="msgentry">
<dl>
<dt><span class="msg"><a id="sthref305"></a><a id="sthref306"></a>ORA-28332: cannot have more than one password for the encryption key</span> <!-- class="msg" --></dt>
<dd>
<div class="msgexplan"><span class="msgexplankw">Cause:</span> More than one password was specified in the user command.</div>
<!-- class="msgexplan" --></dd>
<dd>
<div class="msgaction"><span class="msgactionkw">Action:</span> None</div>
<!-- class="msgaction" --></dd>
</dl>
</div>
<!-- class="msgentry" -->
<div class="msgentry">
<dl>
<dt><span class="msg"><a id="sthref307"></a><a id="sthref308"></a>ORA-28333: column is not encrypted</span> <!-- class="msg" --></dt>
<dd>
<div class="msgexplan"><span class="msgexplankw">Cause:</span> An attempt was made to rekey or decrypt an unencrypted column.</div>
<!-- class="msgexplan" --></dd>
<dd>
<div class="msgaction"><span class="msgactionkw">Action:</span> None</div>
<!-- class="msgaction" --></dd>
</dl>
</div>
<!-- class="msgentry" -->
<div class="msgentry">
<dl>
<dt><span class="msg"><a id="sthref309"></a><a id="sthref310"></a>ORA-28334: column is already encrypted</span> <!-- class="msg" --></dt>
<dd>
<div class="msgexplan"><span class="msgexplankw">Cause:</span> An attempt was made to encrypt an encrypted column.</div>
<!-- class="msgexplan" --></dd>
<dd>
<div class="msgaction"><span class="msgactionkw">Action:</span> None</div>
<!-- class="msgaction" --></dd>
</dl>
</div>
<!-- class="msgentry" -->
<div class="msgentry">
<dl>
<dt><span class="msg"><a id="sthref311"></a><a id="sthref312"></a>ORA-28335: referenced or referencing FK constraint column cannot be encrypted</span> <!-- class="msg" --></dt>
<dd>
<div class="msgexplan"><span class="msgexplankw">Cause:</span> encrypted columns were involved in the referential constraint</div>
<!-- class="msgexplan" --></dd>
<dd>
<div class="msgaction"><span class="msgactionkw">Action:</span> None</div>
<!-- class="msgaction" --></dd>
</dl>
</div>
<!-- class="msgentry" -->
<div class="msgentry">
<dl>
<dt><span class="msg"><a id="sthref313"></a><a id="sthref314"></a>ORA-28336: cannot encrypt SYS owned objects</span> <!-- class="msg" --></dt>
<dd>
<div class="msgexplan"><span class="msgexplankw">Cause:</span> An attempt was made to encrypt columns in a table owned by SYS.</div>
<!-- class="msgexplan" --></dd>
<dd>
<div class="msgaction"><span class="msgactionkw">Action:</span> None</div>
<!-- class="msgaction" --></dd>
</dl>
</div>
<!-- class="msgentry" -->
<div class="msgentry">
<dl>
<dt><span class="msg"><a id="sthref315"></a><a id="sthref316"></a>ORA-28337: the specified index may not be defined on an encrypted column</span> <!-- class="msg" --></dt>
<dd>
<div class="msgexplan"><span class="msgexplankw">Cause:</span> Index column was either a functional, domain, or join index.</div>
<!-- class="msgexplan" --></dd>
<dd>
<div class="msgaction"><span class="msgactionkw">Action:</span> None</div>
<!-- class="msgaction" --></dd>
</dl>
</div>
<!-- class="msgentry" -->
<div class="msgentry">
<dl>
<dt><span class="msg"><a id="sthref317"></a><a id="sthref318"></a>ORA-28338: cannot encrypt indexed column(s) with salt</span> <!-- class="msg" --></dt>
<dd>
<div class="msgexplan"><span class="msgexplankw">Cause:</span> An attempt was made to encrypt index column with salt.</div>
<!-- class="msgexplan" --></dd>
<dd>
<div class="msgaction"><span class="msgactionkw">Action:</span> Alter the table and specify column encrypting without salt.</div>
<!-- class="msgaction" --></dd>
</dl>
</div>
<!-- class="msgentry" -->
<div class="msgentry">
<dl>
<dt><span class="msg"><a id="sthref319"></a><a id="sthref320"></a>ORA-28339: missing or invalid encryption algorithm</span> <!-- class="msg" --></dt>
<dd>
<div class="msgexplan"><span class="msgexplankw">Cause:</span> Encryption algorithm was missing or invalid in the user command.</div>
<!-- class="msgexplan" --></dd>
<dd>
<div class="msgaction"><span class="msgactionkw">Action:</span> Must specify a valid algorithm.</div>
<!-- class="msgaction" --></dd>
</dl>
</div>
<!-- class="msgentry" -->
<div class="msgentry">
<dl>
<dt><span class="msg"><a id="sthref321"></a><a id="sthref322"></a>ORA-28340: a different encryption algorithm has been chosen for the table</span> <!-- class="msg" --></dt>
<dd>
<div class="msgexplan"><span class="msgexplankw">Cause:</span> Existing encrypted columns were associated with a different algorithm.</div>
<!-- class="msgexplan" --></dd>
<dd>
<div class="msgaction"><span class="msgactionkw">Action:</span> No need to specify an algorithm, or specify the same one for the existing encrypted columns.</div>
<!-- class="msgaction" --></dd>
</dl>
</div>
<!-- class="msgentry" -->
<div class="msgentry">
<dl>
<dt><span class="msg"><a id="sthref323"></a><a id="sthref324"></a>ORA-28341: cannot encrypt constraint column(s) with salt</span> <!-- class="msg" --></dt>
<dd>
<div class="msgexplan"><span class="msgexplankw">Cause:</span> An attempt was made to encrypt constraint columns with salt.</div>
<!-- class="msgexplan" --></dd>
<dd>
<div class="msgaction"><span class="msgactionkw">Action:</span> Encrypt the constraint columns without salt.</div>
<!-- class="msgaction" --></dd>
</dl>
</div>
<!-- class="msgentry" -->
<div class="msgentry">
<dl>
<dt><span class="msg"><a id="sthref325"></a><a id="sthref326"></a>ORA-28342: integrity check fails on column key</span> <!-- class="msg" --></dt>
<dd>
<div class="msgexplan"><span class="msgexplankw">Cause:</span> Encryption metadata may have been improperly altered.</div>
<!-- class="msgexplan" --></dd>
<dd>
<div class="msgaction"><span class="msgactionkw">Action:</span> None</div>
<!-- class="msgaction" --></dd>
</dl>
</div>
<!-- class="msgentry" -->
<div class="msgentry">
<dl>
<dt><span class="msg"><a id="sthref327"></a><a id="sthref328"></a>ORA-28343: fails to encrypt data</span> <!-- class="msg" --></dt>
<dd>
<div class="msgexplan"><span class="msgexplankw">Cause:</span> data or encryption metadata may have been improperly altered or the security module may not have been properly setup</div>
<!-- class="msgexplan" --></dd>
<dd>
<div class="msgaction"><span class="msgactionkw">Action:</span> None</div>
<!-- class="msgaction" --></dd>
</dl>
</div>
<!-- class="msgentry" -->
<div class="msgentry">
<dl>
<dt><span class="msg"><a id="sthref329"></a><a id="sthref330"></a>ORA-28344: fails to decrypt data</span> <!-- class="msg" --></dt>
<dd>
<div class="msgexplan"><span class="msgexplankw">Cause:</span> data or encryption metadata may have been improperly altered or the security module may not have been properly setup</div>
<!-- class="msgexplan" --></dd>
<dd>
<div class="msgaction"><span class="msgactionkw">Action:</span> None</div>
<!-- class="msgaction" --></dd>
</dl>
</div>
<!-- class="msgentry" -->
<div class="msgentry">
<dl>
<dt><span class="msg"><a id="sthref331"></a><a id="sthref332"></a>ORA-28345: cannot downgrade because there exists encrypted column</span> <!-- class="msg" --></dt>
<dd>
<div class="msgexplan"><span class="msgexplankw">Cause:</span> An attempt was made to downgrade when there was an encrypted column in the system.</div>
<!-- class="msgexplan" --></dd>
<dd>
<div class="msgaction"><span class="msgactionkw">Action:</span> Decrypt these columns before attempting to downgrade.</div>
<!-- class="msgaction" --></dd>
</dl>
</div>
<!-- class="msgentry" -->
<div class="msgentry">
<dl>
<dt><span class="msg"><a id="sthref333"></a><a id="sthref334"></a>ORA-28346: an encrypted column cannot serve as a partitioning column</span> <!-- class="msg" --></dt>
<dd>
<div class="msgexplan"><span class="msgexplankw">Cause:</span> An attempt was made to encrypt a partitioning key column or create partitioning index with encrypted columns.</div>
<!-- class="msgexplan" --></dd>
<dd>
<div class="msgaction"><span class="msgactionkw">Action:</span> The column must be decrypted.</div>
<!-- class="msgaction" --></dd>
</dl>
</div>
<!-- class="msgentry" -->
<div class="msgentry">
<dl>
<dt><span class="msg"><a id="sthref335"></a><a id="sthref336"></a>ORA-28347: encryption properties mismatch</span> <!-- class="msg" --></dt>
<dd>
<div class="msgexplan"><span class="msgexplankw">Cause:</span> An attempt was made to issue an ALTER TABLE EXCHANGE PARTITION | SUBPARTITION command, but encryption properties were mismatched.</div>
<!-- class="msgexplan" --></dd>
<dd>
<div class="msgaction"><span class="msgactionkw">Action:</span> Make sure encryption algorithms and columns keys are identical. The corresponding columns must be encrypted on both tables with the same salt and non-salt flavor.</div>
<!-- class="msgaction" --></dd>
</dl>
</div>
<!-- class="msgentry" -->
<div class="msgentry">
<dl>
<dt><span class="msg"><a id="sthref337"></a><a id="sthref338"></a>ORA-28348: index defined on the specified column cannot be encrypted</span> <!-- class="msg" --></dt>
<dd>
<div class="msgexplan"><span class="msgexplankw">Cause:</span> An attempt was made to encrypt a column which is in a functional index, domain index, or join index.</div>
<!-- class="msgexplan" --></dd>
<dd>
<div class="msgaction"><span class="msgactionkw">Action:</span> drop the index</div>
<!-- class="msgaction" --></dd>
</dl>
</div>
<!-- class="msgentry" -->
<div class="msgentry">
<dl>
<dt><span class="msg"><a id="sthref339"></a><a id="sthref340"></a>ORA-28349: cannot encrypt the specified column recorded in the materialized view log</span> <!-- class="msg" --></dt>
<dd>
<div class="msgexplan"><span class="msgexplankw">Cause:</span> An attempt was made to encrypt a column which is already recorded in the materialized view log.</div>
<!-- class="msgexplan" --></dd>
<dd>
<div class="msgaction"><span class="msgactionkw">Action:</span> drop the materialized view log</div>
<!-- class="msgaction" --></dd>
</dl>
</div>
<!-- class="msgentry" -->
<div class="msgentry">
<dl>
<dt><span class="msg"><a id="sthref341"></a><a id="sthref342"></a>ORA-28350: cannot encrypt the specified column recorded in CDC synchronized change table</span> <!-- class="msg" --></dt>
<dd>
<div class="msgexplan"><span class="msgexplankw">Cause:</span> An attempt was made to encrypt a column which is already recorded in CDC synchronized change table.</div>
<!-- class="msgexplan" --></dd>
<dd>
<div class="msgaction"><span class="msgactionkw">Action:</span> drop the synchronized change table</div>
<!-- class="msgaction" --></dd>
</dl>
</div>
<!-- class="msgentry" -->
<div class="msgentry">
<dl>
<dt><span class="msg"><a id="sthref343"></a><a id="sthref344"></a>ORA-28351: cannot encrypt the column of a cluster key</span> <!-- class="msg" --></dt>
<dd>
<div class="msgexplan"><span class="msgexplankw">Cause:</span> An attempt was made to encrypt a column of the cluster key. A column of the cluster key in a clustered table cannot be encrypted.</div>
<!-- class="msgexplan" --></dd>
<dd>
<div class="msgaction"><span class="msgactionkw">Action:</span> None</div>
<!-- class="msgaction" --></dd>
</dl>
</div>
<!-- class="msgentry" -->
<div class="msgentry">
<dl>
<dt><span class="msg"><a id="sthref345"></a><a id="sthref346"></a>ORA-28353: failed to open wallet</span> <!-- class="msg" --></dt>
<dd>
<div class="msgexplan"><span class="msgexplankw">Cause:</span> The database was unable to open the security module wallet due to an incorrect wallet path or password It is also possible that a wallet has not been created.</div>
<!-- class="msgexplan" --></dd>
<dd>
<div class="msgaction"><span class="msgactionkw">Action:</span> Execute the command again using the correct wallet password or verifying a wallet exists in the specified directory. If necessary, create a new wallet and initialize it.</div>
<!-- class="msgaction" --></dd>
</dl>
</div>
<!-- class="msgentry" -->
<div class="msgentry">
<dl>
<dt><span class="msg"><a id="sthref347"></a><a id="sthref348"></a>ORA-28354: wallet already open</span> <!-- class="msg" --></dt>
<dd>
<div class="msgexplan"><span class="msgexplankw">Cause:</span> The security module wallet has already been opened.</div>
<!-- class="msgexplan" --></dd>
<dd>
<div class="msgaction"><span class="msgactionkw">Action:</span> None</div>
<!-- class="msgaction" --></dd>
</dl>
</div>
<!-- class="msgentry" -->
<div class="msgentry">
<dl>
<dt><span class="msg"><a id="sthref349"></a><a id="sthref350"></a>ORA-28356: invalid open wallet syntax</span> <!-- class="msg" --></dt>
<dd>
<div class="msgexplan"><span class="msgexplankw">Cause:</span> The command to open the wallet contained improper spelling or syntax.</div>
<!-- class="msgexplan" --></dd>
<dd>
<div class="msgaction"><span class="msgactionkw">Action:</span> If attempting to open the wallet, verify the spelling and syntax and execute the command again.</div>
<!-- class="msgaction" --></dd>
</dl>
</div>
<!-- class="msgentry" -->
<div class="msgentry">
<dl>
<dt><span class="msg"><a id="sthref351"></a><a id="sthref352"></a>ORA-28357: password required to open the wallet</span> <!-- class="msg" --></dt>
<dd>
<div class="msgexplan"><span class="msgexplankw">Cause:</span> A password was not provided when executing the open wallet command.</div>
<!-- class="msgexplan" --></dd>
<dd>
<div class="msgaction"><span class="msgactionkw">Action:</span> Retry the command with a valid password.</div>
<!-- class="msgaction" --></dd>
</dl>
</div>
<!-- class="msgentry" -->
<div class="msgentry">
<dl>
<dt><span class="msg"><a id="sthref353"></a><a id="sthref354"></a>ORA-28358: improper set key syntax</span> <!-- class="msg" --></dt>
<dd>
<div class="msgexplan"><span class="msgexplankw">Cause:</span> The command to set the master key contained improper spelling or syntax.</div>
<!-- class="msgexplan" --></dd>
<dd>
<div class="msgaction"><span class="msgactionkw">Action:</span> If attempting to set the master key for Transparent Database Encryption, verify the spelling and syntax and execute the command again.</div>
<!-- class="msgaction" --></dd>
</dl>
</div>
<!-- class="msgentry" -->
<div class="msgentry">
<dl>
<dt><span class="msg"><a id="sthref355"></a><a id="sthref356"></a>ORA-28359: invalid certificate identifier</span> <!-- class="msg" --></dt>
<dd>
<div class="msgexplan"><span class="msgexplankw">Cause:</span> The certificate specified did not exist in the wallet.</div>
<!-- class="msgexplan" --></dd>
<dd>
<div class="msgaction"><span class="msgactionkw">Action:</span> Query the V$WALLET fixed view to find the proper certificate identifier for certificate to be used.</div>
<!-- class="msgaction" --></dd>
</dl>
</div>
<!-- class="msgentry" -->
<div class="msgentry">
<dl>
<dt><span class="msg"><a id="sthref357"></a><a id="sthref358"></a>ORA-28361: master key not yet set</span> <!-- class="msg" --></dt>
<dd>
<div class="msgexplan"><span class="msgexplankw">Cause:</span> The master key for the instance was not set.</div>
<!-- class="msgexplan" --></dd>
<dd>
<div class="msgaction"><span class="msgactionkw">Action:</span> Execute the ALTER SYSTEM SET KEY command to set a master key for the database instance.</div>
<!-- class="msgaction" --></dd>
</dl>
</div>
<!-- class="msgentry" -->
<div class="msgentry">
<dl>
<dt><span class="msg"><a id="sthref359"></a><a id="sthref360"></a>ORA-28362: master key not found</span> <!-- class="msg" --></dt>
<dd>
<div class="msgexplan"><span class="msgexplankw">Cause:</span> The required master key required could not be located. This may be caused by the use of an invalid or incorrect wallet.</div>
<!-- class="msgexplan" --></dd>
<dd>
<div class="msgaction"><span class="msgactionkw">Action:</span> Check wallet location parameters to see if they specify the correct wallet. Also, verify that an SSO wallet is not being used when an encrypted wallet is intended.</div>
<!-- class="msgaction" --></dd>
</dl>
</div>
<!-- class="msgentry" -->
<div class="msgentry">
<dl>
<dt><span class="msg"><a id="sthref361"></a><a id="sthref362"></a>ORA-28363: buffer provided not large enough for output</span> <!-- class="msg" --></dt>
<dd>
<div class="msgexplan"><span class="msgexplankw">Cause:</span> A provided output buffer is too small to contain the output.</div>
<!-- class="msgexplan" --></dd>
<dd>
<div class="msgaction"><span class="msgactionkw">Action:</span> Check the size of the output buffer to make sure it is initialized to the proper size.</div>
<!-- class="msgaction" --></dd>
</dl>
</div>
<!-- class="msgentry" -->
<div class="msgentry">
<dl>
<dt><span class="msg"><a id="sthref363"></a><a id="sthref364"></a>ORA-28364: invalid wallet operation</span> <!-- class="msg" --></dt>
<dd>
<div class="msgexplan"><span class="msgexplankw">Cause:</span> The command to operate the wallet contained improper spelling or syntax.</div>
<!-- class="msgexplan" --></dd>
<dd>
<div class="msgaction"><span class="msgactionkw">Action:</span> Verify the spelling and syntax and execute the command again.</div>
<!-- class="msgaction" --></dd>
</dl>
</div>
<!-- class="msgentry" -->
<div class="msgentry">
<dl>
<dt><span class="msg"><a id="sthref365"></a><a id="sthref366"></a>ORA-28365: wallet is not open</span> <!-- class="msg" --></dt>
<dd>
<div class="msgexplan"><span class="msgexplankw">Cause:</span> The security module wallet has not been opened.</div>
<!-- class="msgexplan" --></dd>
<dd>
<div class="msgaction"><span class="msgactionkw">Action:</span> Open the wallet.</div>
<!-- class="msgaction" --></dd>
</dl>
</div>
<!-- class="msgentry" -->
<div class="msgentry">
<dl>
<dt><span class="msg"><a id="sthref367"></a><a id="sthref368"></a>ORA-28366: invalid database encryption operation</span> <!-- class="msg" --></dt>
<dd>
<div class="msgexplan"><span class="msgexplankw">Cause:</span> The command for database encryption contained improper spelling or syntax.</div>
<!-- class="msgexplan" --></dd>
<dd>
<div class="msgaction"><span class="msgactionkw">Action:</span> Verify the spelling and syntax and execute the command again.</div>
<!-- class="msgaction" --></dd>
</dl>
</div>
<!-- class="msgentry" -->
<div class="msgentry">
<dl>
<dt><span class="msg"><a id="sthref369"></a><a id="sthref370"></a>ORA-28367: wallet does not exist</span> <!-- class="msg" --></dt>
<dd>
<div class="msgexplan"><span class="msgexplankw">Cause:</span> The Oracle wallet has not been created or the wallet location parameters in <a id="sthref371"></a>sqlnet.ora specifies an invalid wallet path.</div>
<!-- class="msgexplan" --></dd>
<dd>
<div class="msgaction"><span class="msgactionkw">Action:</span> Verify that the WALLET_LOCATION or the ENCRYPTION_WALLET_LOCATION parameter is correct and that a valid wallet exists in the path specified.</div>
<!-- class="msgaction" --></dd>
</dl>
</div>
<!-- class="msgentry" -->
<div class="msgentry">
<dl>
<dt><span class="msg"><a id="sthref372"></a><a id="sthref373"></a>ORA-28368: cannot auto-create wallet</span> <!-- class="msg" --></dt>
<dd>
<div class="msgexplan"><span class="msgexplankw">Cause:</span> The database failed to auto create an Oracle wallet. The Oracle process may not have proper file permissions or a wallet may already exist.</div>
<!-- class="msgexplan" --></dd>
<dd>
<div class="msgaction"><span class="msgactionkw">Action:</span> Confirm that proper directory permissions are granted to the Oracle user and that neither an encrypted or obfuscated wallet exists in the specified wallet location and try again.</div>
<!-- class="msgaction" --></dd>
</dl>
</div>
<!-- class="msgentry" -->
<div class="msgentry">
<dl>
<dt><span class="msg"><a id="sthref374"></a><a id="sthref375"></a>ORA-28369: cannot add files to encryption-ready tablespace when offline</span> <!-- class="msg" --></dt>
<dd>
<div class="msgexplan"><span class="msgexplankw">Cause:</span> You attempted to add files to an encryption-ready tablespace when all the files in the tablespace were offline.</div>
<!-- class="msgexplan" --></dd>
<dd>
<div class="msgaction"><span class="msgactionkw">Action:</span> Bring the tablespace online and try again</div>
<!-- class="msgaction" --></dd>
</dl>
</div>
<!-- class="msgentry" -->
<div class="msgentry">
<dl>
<dt><span class="msg"><a id="sthref376"></a><a id="sthref377"></a>ORA-28370: ENCRYPT storage option not allowed</span> <!-- class="msg" --></dt>
<dd>
<div class="msgexplan"><span class="msgexplankw">Cause:</span> You attempted to specify the ENCRYPT storage option. This option may only be specified during CREATE TABLESPACE.</div>
<!-- class="msgexplan" --></dd>
<dd>
<div class="msgaction"><span class="msgactionkw">Action:</span> Remove this option and retry the statement.</div>
<!-- class="msgaction" --></dd>
</dl>
</div>
<!-- class="msgentry" -->
<div class="msgentry">
<dl>
<dt><span class="msg"><a id="sthref378"></a><a id="sthref379"></a>ORA-28371: ENCRYPTION clause and/or ENCRYPT storage option not allowed</span> <!-- class="msg" --></dt>
<dd>
<div class="msgexplan"><span class="msgexplankw">Cause:</span> You attempted to specify the ENCRYPTION clause or ENCRYPT storage option for creating TEMP or UNDO tablespaces.</div>
<!-- class="msgexplan" --></dd>
<dd>
<div class="msgaction"><span class="msgactionkw">Action:</span> Remove these options and retry the statement.</div>
<!-- class="msgaction" --></dd>
</dl>
</div>
<!-- class="msgentry" -->
<div class="msgentry">
<dl>
<dt><span class="msg"><a id="sthref380"></a><a id="sthref381"></a>ORA-28372: missing ENCRYPT storage option for encrypted tablespace</span> <!-- class="msg" --></dt>
<dd>
<div class="msgexplan"><span class="msgexplankw">Cause:</span> You attempted to specify ENCRYPTION property for CREATE TABLESPACE without specifying ENCRYPT storage option to encrypt the tablespace.</div>
<!-- class="msgexplan" --></dd>
<dd>
<div class="msgaction"><span class="msgactionkw">Action:</span> Add ENCRYPT storage option and retry the statement.</div>
<!-- class="msgaction" --></dd>
</dl>
</div>
<!-- class="msgentry" -->
<div class="msgentry">
<dl>
<dt><span class="msg"><a id="sthref382"></a><a id="sthref383"></a>ORA-28373: missing ENCRYPTION clause for encrypted tablespace</span> <!-- class="msg" --></dt>
<dd>
<div class="msgexplan"><span class="msgexplankw">Cause:</span> You attempted to specify storage option ENCRYPT in CREATE TABLESPACE without specifying ENCRYPTION property to encrypt the tablespace.</div>
<!-- class="msgexplan" --></dd>
<dd>
<div class="msgaction"><span class="msgactionkw">Action:</span> Add ENCRYPTION clause and retry the statement.</div>
<!-- class="msgaction" --></dd>
</dl>
</div>
<!-- class="msgentry" -->
<div class="msgentry">
<dl>
<dt><span class="msg"><a id="sthref384"></a><a id="sthref385"></a>ORA-28374: typed master key not found in wallet</span> <!-- class="msg" --></dt>
<dd>
<div class="msgexplan"><span class="msgexplankw">Cause:</span> You attempted to access encrypted tablespace or redo logs with a typed master key not existing in the wallet.</div>
<!-- class="msgexplan" --></dd>
<dd>
<div class="msgaction"><span class="msgactionkw">Action:</span> Copy the correct Oracle Wallet from the instance where the tablespace was created.</div>
<!-- class="msgaction" --></dd>
</dl>
</div>
<!-- class="msgentry" -->
<div class="msgentry">
<dl>
<dt><span class="msg"><a id="sthref386"></a><a id="sthref387"></a>ORA-28375: cannot perform cross-endianism conversion on encrypted tablespace</span> <!-- class="msg" --></dt>
<dd>
<div class="msgexplan"><span class="msgexplankw">Cause:</span> You attempted to perform cross-endianism conversion on encrypted tablespace.</div>
<!-- class="msgexplan" --></dd>
<dd>
<div class="msgaction"><span class="msgactionkw">Action:</span> Cross-endianism conversion on encrypted tablespace is not supported.</div>
<!-- class="msgaction" --></dd>
</dl>
</div>
<!-- class="msgentry" -->
<div class="msgentry">
<dl>
<dt><span class="msg"><a id="sthref388"></a><a id="sthref389"></a>ORA-28376: cannot find PKCS11 library</span> <!-- class="msg" --></dt>
<dd>
<div class="msgexplan"><span class="msgexplankw">Cause:</span> The HSM vendor's library cannot be found.</div>
<!-- class="msgexplan" --></dd>
<dd>
<div class="msgaction"><span class="msgactionkw">Action:</span> Place the HSM vendor's library in the following directory structure: For Unix like system: /opt/oracle/extapi/[32,64]/hsm/{VENDOR}/{VERSION}/lib&lt;apiname&gt;.&lt;ext&gt; For Windows systems: %SYSTEM_DRIVE%\oracle\extapi\[32,64]\hsm\{VENDOR}\{VERSION}\lib&lt;apin// ame&gt;.&lt;ext&gt; [32, 64] - refers to 32bit or 64bit binary. {VENDOR} - The name of the vendor supplying the library. {VERSION} - Version of the library, preferably in num#.num#.num# for// mat.</div>
<!-- class="msgaction" --></dd>
</dl>
</div>
<!-- class="msgentry" -->
<div class="msgentry">
<dl>
<dt><span class="msg"><a id="sthref390"></a><a id="sthref391"></a>ORA-28377: No need to migrate from wallet to HSM</span> <!-- class="msg" --></dt>
<dd>
<div class="msgexplan"><span class="msgexplankw">Cause:</span> There are either no encrypted columns or all column keys are already encrypted with the HSM master key.</div>
<!-- class="msgexplan" --></dd>
<dd>
<div class="msgaction"><span class="msgactionkw">Action:</span> No action required.</div>
<!-- class="msgaction" --></dd>
</dl>
</div>
<!-- class="msgentry" -->
<div class="msgentry">
<dl>
<dt><span class="msg"><a id="sthref392"></a><a id="sthref393"></a>ORA-28378: Wallet not open after setting the Master Key</span> <!-- class="msg" --></dt>
<dd>
<div class="msgexplan"><span class="msgexplankw">Cause:</span> The Master Key has been set or reset. However, wallet could not be reopened successfully.</div>
<!-- class="msgexplan" --></dd>
<dd>
<div class="msgaction"><span class="msgactionkw">Action:</span> Reopen the wallet.<a id="sthref394"></a></div>
<!-- class="msgaction" --></dd>
</dl>
</div>
<!-- class="msgentry" --></div>
<!-- class="msgset" --></div>
<!-- class="sect1" -->
<a id="CJAFGBBH"></a>
<div id="ASOAG9577" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1"><span class="secnum">8.6</span> Transparent Data Encr<a id="ABC1252081"></a>yption Reference Information</h2>
<p>This section includes the following topics:</p>
<ul>
<li>
<p><a href="#BABHJCHD">Supported Encryption and Integrity Algorithms</a></p>
</li>
<li>
<p><a href="#BABJGBBG">Quick Reference: Transparent Data Encryption SQL Commands</a></p>
</li>
</ul>
<a id="BABHJCHD"></a>
<div id="ASOAG9578" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">8.6.1</span> Supported Encryption and Integrity Algorithms</h3>
<p>By default, Transparent Data Encryption (TDE) uses the Advanced Encryption Standard with a 192-bit length cipher key (AES192). In addition, <a href="asogls.htm#BEICGDDD"><span class="xrefglossterm">salt</span></a> is added by default to cleartext before encryption unless specified otherwise. Note that salt cannot be added to indexed columns that you want to encrypt. For indexed columns, choose the <code dir="ltr">NO SALT</code> parameter for the SQL <code dir="ltr">ENCRYPT</code> clause.</p>
<p>You can change encryption algorithms and encryption keys on existing encrypted columns by setting a different algorithm with the SQL <code dir="ltr">ENCRYPT</code> clause.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="#CHDGEADJ">Example 8-4</a> for the correct syntax when choosing the <code dir="ltr">NO SALT</code> parameter for the SQL <code dir="ltr">ENCRYPT</code> clause</p>
</li>
<li>
<p><a href="#BABJEIIC">"Changing the Encryption Key or Algorithm for Tables with Encrypted Columns"</a> for syntax examples when setting a different algorithm with the SQL <code dir="ltr">ENCRYPT</code> clause</p>
</li>
</ul>
</div>
<p><a href="#BABGIIBG">Table 8-6</a> lists the supported encryption algorithms.</p>
<div id="ASOAG10168" class="tblruleformal">
<p class="titleintable"><a id="sthref395"></a><a id="BABGIIBG"></a>Table 8-6 Supported Encryption Algorithms for Transparent Data Encryption</p>
<table class="cellalignment2234" title="Supported Encryption Algorithms for Transparent Data Encryption" summary="This tables lists the supported encryption algorithms for transparent data encryption." dir="ltr">
<thead>
<tr class="cellalignment2228">
<th class="cellalignment2235" id="r1c1-t59">Algorithm</th>
<th class="cellalignment2235" id="r1c2-t59">Key Size</th>
<th class="cellalignment2235" id="r1c3-t59">Parameter Name</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2228">
<td class="cellalignment2236" id="r2c1-t59" headers="r1c1-t59">
<p>Triple DES (Data Encryption Standard)</p>
</td>
<td class="cellalignment2236" headers="r2c1-t59 r1c2-t59">
<p>168 bits</p>
</td>
<td class="cellalignment2236" headers="r2c1-t59 r1c3-t59">
<p><code dir="ltr">3DES168</code></p>
</td>
</tr>
<tr class="cellalignment2228">
<td class="cellalignment2236" id="r3c1-t59" headers="r1c1-t59">
<p>AES (Advanced Encryption Standard)</p>
</td>
<td class="cellalignment2236" headers="r3c1-t59 r1c2-t59">
<p>128 bits</p>
</td>
<td class="cellalignment2236" headers="r3c1-t59 r1c3-t59">
<p><code dir="ltr">AES128</code></p>
</td>
</tr>
<tr class="cellalignment2228">
<td class="cellalignment2236" id="r4c1-t59" headers="r1c1-t59">
<p>AES</p>
</td>
<td class="cellalignment2236" headers="r4c1-t59 r1c2-t59">
<p>192 bits (default)</p>
</td>
<td class="cellalignment2236" headers="r4c1-t59 r1c3-t59">
<p><code dir="ltr">AES192</code></p>
</td>
</tr>
<tr class="cellalignment2228">
<td class="cellalignment2236" id="r5c1-t59" headers="r1c1-t59">
<p>AES</p>
</td>
<td class="cellalignment2236" headers="r5c1-t59 r1c2-t59">
<p>256 bits</p>
</td>
<td class="cellalignment2236" headers="r5c1-t59 r1c3-t59">
<p><code dir="ltr">AES256</code></p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblruleformal" -->
<p>For integrity protection, the <code dir="ltr">SHA-1</code> hashing algorithm is used.</p>
</div>
<!-- class="sect2" -->
<a id="BABJGBBG"></a>
<div id="ASOAG9580" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">8.6.2</span> Quick Reference: Transparent Data Encryption SQL Commands</h3>
<p><a href="#BABCAHHG">Table 8-7</a> provides a summary of the SQL commands you can use to implement and manage transparent data encryption.<a id="sthref396"></a></p>
<div id="ASOAG10169" class="tblruleformalwidemax">
<p class="titleintable"><a id="sthref397"></a><a id="BABCAHHG"></a>Table 8-7 Transparent Data Encryption SQL Commands Quick Reference</p>
<table class="cellalignment2234" title="Transparent Data Encryption SQL Commands Quick Reference" summary="This table provides a quick reference to the SQL commands that are used to implement and manage the transparent data encryption feature." dir="ltr">
<thead>
<tr class="cellalignment2228">
<th class="cellalignment2235" id="r1c1-t60">Task</th>
<th class="cellalignment2235" id="r1c2-t60">SQL Command</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2228">
<td class="cellalignment2236" id="r2c1-t60" headers="r1c1-t60">
<p>Add encrypted column to existing table</p>
</td>
<td class="cellalignment2236" headers="r2c1-t60 r1c2-t60">
<p><code dir="ltr">ALTER TABLE</code> <code dir="ltr"><span class="codeinlineitalic">table_name</span></code> <code dir="ltr">ADD (</code><code dir="ltr"><span class="codeinlineitalic">column_name</span></code> <code dir="ltr"><span class="codeinlineitalic">datatype</span></code> <code dir="ltr">ENCRYPT);</code></p>
</td>
</tr>
<tr class="cellalignment2228">
<td class="cellalignment2236" id="r3c1-t60" headers="r1c1-t60">
<p>Create table and encrypt column</p>
</td>
<td class="cellalignment2236" headers="r3c1-t60 r1c2-t60">
<p><code dir="ltr">CREATE TABLE</code> <code dir="ltr"><span class="codeinlineitalic">table_name</span></code> <code dir="ltr">(</code><code dir="ltr"><span class="codeinlineitalic">column_name datatype</span></code> <code dir="ltr">ENCRYPT);</code></p>
</td>
</tr>
<tr class="cellalignment2228">
<td class="cellalignment2236" id="r4c1-t60" headers="r1c1-t60">
<p>Encrypt unencrypted existing column</p>
</td>
<td class="cellalignment2236" headers="r4c1-t60 r1c2-t60">
<p><code dir="ltr">ALTER TABLE</code> <code dir="ltr"><span class="codeinlineitalic">table_name</span></code> <code dir="ltr">MODIFY (</code><code dir="ltr"><span class="codeinlineitalic">column_name</span></code> <code dir="ltr">ENCRYPT);</code></p>
</td>
</tr>
<tr class="cellalignment2228">
<td class="cellalignment2236" id="r5c1-t60" headers="r1c1-t60">
<p>Master encryption key: set or reset</p>
</td>
<td class="cellalignment2236" headers="r5c1-t60 r1c2-t60">
<p><code dir="ltr">ALTER SYSTEM SET ENCRYPTION KEY IDENTIFIED BY "</code><code dir="ltr"><span class="codeinlineitalic">password"</span></code><code dir="ltr">;</code></p>
</td>
</tr>
<tr class="cellalignment2228">
<td class="cellalignment2236" id="r6c1-t60" headers="r1c1-t60">
<p>Master encryption key: set or reset to use PKI certificate</p>
</td>
<td class="cellalignment2236" headers="r6c1-t60 r1c2-t60">
<p><code dir="ltr">ALTER SYSTEM SET ENCRYPTION KEY "</code><code dir="ltr"><span class="codeinlineitalic">certificate_ID</span></code><code dir="ltr">" IDENTIFIED BY</code> "<code dir="ltr"><span class="codeinlineitalic">password"</span></code><code dir="ltr">;</code></p>
</td>
</tr>
<tr class="cellalignment2228">
<td class="cellalignment2236" id="r7c1-t60" headers="r1c1-t60">
<p>Wallet: open to access master encryption key</p>
</td>
<td class="cellalignment2236" headers="r7c1-t60 r1c2-t60">
<p><code dir="ltr">ALTER SYSTEM SET ENCRYPTION <a id="sthref398"></a>WALLET OPEN IDENTIFIED BY "</code><code dir="ltr"><span class="codeinlineitalic">password"</span></code><code dir="ltr">;</code></p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblruleformalwidemax" --></div>
<!-- class="sect2" --></div>
<!-- class="sect1" --></div>
<!-- class="chapter" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment2227">
<tr>
<td class="cellalignment2236">
<table class="cellalignment2232">
<tr>
<td class="cellalignment2231"><a href="asopart2.htm"><img width="24" height="24" src="../../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment2231"><a href="asoconfg.htm"><img width="24" height="24" src="../../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;1996, 2016,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment2238">
<table class="cellalignment2230">
<tr>
<td class="cellalignment2231"><a href="../../index.htm"><img width="24" height="24" src="../../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment2231"><a href="../../nav/portal_booklist.htm"><img width="24" height="24" src="../../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment2231"><a href="toc.htm"><img width="24" height="24" src="../../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment2231"><a href="index.htm"><img width="24" height="24" src="../../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment2231"><a href="../../nav/mindx.htm"><img width="24" height="24" src="../../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment2231"><a href="../../dcommon/html/feedback.htm"><img width="24" height="24" src="../../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>
</body>
</html>
