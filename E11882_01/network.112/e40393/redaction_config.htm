<!DOCTYPE html>
<html lang="en" >
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1">
<meta charset="utf-8">
<title>Configuring Oracle Data Redaction Policies</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Merged Version 1079" />
<meta name="dcterms.created" content="2016-03-03T15:46:21Z" />
<meta name="robots" content="all" />
<meta name="dcterms.title" content="Database Advanced Security Administrator's Guide" />
<meta name="dcterms.identifier" content="E40393-10" />
<meta name="dcterms.isVersionOf" content="ASOAG" />
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;1996, 2016,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved." />
<link rel="Start" href="../../index.htm" title="Home" type="text/html" />
<link rel="Copyright" href="../../dcommon/html/cpyr.htm" title="Copyright" type="text/html" />

<script type="application/javascript"  src="../../dcommon/js/headfoot.js"></script>
<script type="application/javascript"  src="../../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html" />
<link rel="Index" href="index.htm" title="Index" type="text/html" />
<link rel="Glossary" href="asogls.htm" title="Glossary" type="text/html" />
<link rel="Prev" href="redaction_features.htm" title="Previous" type="text/html" />
<link rel="Next" href="redaction_other.htm" title="Next" type="text/html" />
<link rel="alternate" href="../e40393.pdf" title="PDF version" type="application/pdf" />
<link rel="schema.dcterms" href="http://purl.org/dc/terms/" />
<link rel="stylesheet" href="../../dcommon/css/fusiondoc.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/header.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/footer.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/fonts.css">
<link rel="stylesheet" href="../../dcommon/css/foundation.css">
<link rel="stylesheet" href="../../dcommon/css/codemirror.css">
<link rel="stylesheet" type="text/css" title="Default" href="../../nav/css/html5.css">
<link rel="stylesheet" href="../../dcommon/css/respond-480-tablet.css">
<link rel="stylesheet" href="../../dcommon/css/respond-768-laptop.css">
<link rel="stylesheet" href="../../dcommon/css/respond-1140-deskop.css">
<script type="application/javascript" src="../../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">14/35</span> <!-- End Header -->
<div id="ASOAG10490" class="chapter"><a id="CEGDAIAB"></a>
<h1 class="chapter"><span class="secnum">5</span> Configuring Oracle Data Redaction Policies</h1>
<p>An Oracle Data Redaction policy defines how to redact data in a column based on the table column type and the type of redaction you want to use. You can enable and disable policies as necessary.</p>
<p>This section contains the following topics:</p>
<ul>
<li>
<p><a href="#CACBHGED">About Oracle Data Redaction Policies</a></p>
</li>
<li>
<p><a href="#CACJBEAB">Who Can Create Oracle Data Redaction Policies?</a></p>
</li>
<li>
<p><a href="#CACCHFHF">Planning the Creation of an Oracle Data Redaction Policy</a></p>
</li>
<li>
<p><a href="#CACCFCEB">General Syntax of the DBMS_REDACT.ADD_POLICY Procedure</a></p>
</li>
<li>
<p><a href="#CEGCDBFD">Using Expressions to Define Conditions for Data Redaction Policies</a></p>
</li>
<li>
<p><a href="#CEGJIIFD">Creating a Full Redaction Policy and Altering the Default Full Redaction Value</a></p>
</li>
<li>
<p><a href="#CEGCICFA">Creating a Partial Redaction Policy</a></p>
</li>
<li>
<p><a href="#CEGEHAIF">Creating a Regular Expression-Based Redaction Policy</a></p>
</li>
<li>
<p><a href="#CEGIDIIE">Creating a Random Redaction Policy</a></p>
</li>
<li>
<p><a href="#CEGFFDAG">Creating a Policy That Uses No Redaction</a></p>
</li>
<li>
<p><a href="#CACBEJAE">Exempting Users from Oracle Data Redaction Policies</a></p>
</li>
<li>
<p><a href="#CACJDBBA">Altering an Oracle Data Redaction Policy</a></p>
</li>
<li>
<p><a href="#CACHIIAE">Redacting Multiple Columns</a></p>
</li>
<li>
<p><a href="#CEGCEGJC">Disabling and Enabling an Oracle Data Redaction Policy</a></p>
</li>
<li>
<p><a href="#CACJCFEI">Dropping an Oracle Data Redaction Policy</a></p>
</li>
<li>
<p><a href="#CACHHBAB">Example: How Oracle Data Redaction Affects Tables and Views</a></p>
</li>
<li>
<p><a href="#CACCBCCD">Example: Using SQL Expressions to Build Reports with Redacted Values</a></p>
</li>
<li>
<p><a href="#CACFJCBG">Finding Information About Oracle Data Redaction Policies</a></p>
</li>
</ul>
<a id="CACBHGED"></a>
<div id="ASOAG607" class="sect1">
<h2 class="sect1"><span class="secnum">5.1</span> About Oracle Data Redaction Policies</h2>
<p>An Oracle Data Redaction policy defines the conditions in which redaction must occur for a table or view.</p>
<p>A <a id="sthref88"></a>Data Redaction policy has the following characteristics:</p>
<ul>
<li>
<p>The Data Redaction policy defines the following: What kind of redaction to perform, how the redaction should occur, and when the redaction takes place. Oracle Database performs the redaction at execution time, just before the data is returned to the application.</p>
</li>
<li>
<p>A Data Redaction policy can fully redact values, partially redact values, or randomly redact values. In addition, you can define a Data Redaction policy to not redact any data at all, for when you want to test your policies in a test environment.</p>
</li>
<li>
<p>A Data Redaction policy can be defined with a policy expression which allows for different application users to be presented with either redacted data or actual data, based on whether the policy expression returns <code dir="ltr">TRUE</code> or <code dir="ltr">FALSE</code>. Redaction takes place when the boolean result of evaluating the policy expression is <code dir="ltr">TRUE</code>. For security reasons, the functions and operators that can be used in the policy expression are limited to <code dir="ltr">SYS_CONTEXT</code> and a few others. User-created functions are not allowed. Policy expressions can make use of the <code dir="ltr">SYS_SESSION_ROLES</code> namespace with the <code dir="ltr">SYS_CONTEXT</code> function to check for enabled roles.</p>
</li>
</ul>
<p><a href="#CACJHJFJ">Table 5-1</a> lists the procedures in the <code dir="ltr">DBMS_REDACT</code> package.</p>
<div id="ASOAG420" class="tblhruleformal">
<p class="titleintable"><a id="sthref89"></a><a id="CACJHJFJ"></a>Table 5-1 DBMS_REDACT Procedures</p>
<table class="cellalignment2234" title="DBMS_REDACT Procedures" summary="DBMS_REDACT PL/SQL Package Procedures" dir="ltr">
<thead>
<tr class="cellalignment2228">
<th class="cellalignment2235" id="r1c1-t2">Procedure</th>
<th class="cellalignment2235" id="r1c2-t2">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2228">
<td class="cellalignment2236" id="r2c1-t2" headers="r1c1-t2">
<p><code dir="ltr">DBMS_REDACT.ADD_POLICY</code></p>
</td>
<td class="cellalignment2236" headers="r2c1-t2 r1c2-t2">
<p>Adds a Data Redaction policy to a table or view</p>
</td>
</tr>
<tr class="cellalignment2228">
<td class="cellalignment2236" id="r3c1-t2" headers="r1c1-t2">
<p><code dir="ltr">DBMS_REDACT.ALTER_POLICY</code></p>
</td>
<td class="cellalignment2236" headers="r3c1-t2 r1c2-t2">
<p>Modifies a Data Redaction policy</p>
</td>
</tr>
<tr class="cellalignment2228">
<td class="cellalignment2236" id="r4c1-t2" headers="r1c1-t2">
<p><code dir="ltr">DBMS_REDACT.UPDATE_FULL_REDACTION_VALUES</code></p>
</td>
<td class="cellalignment2236" headers="r4c1-t2 r1c2-t2">
<p>Globally updates the full redaction value for a given data type. You must restart the database instance before the updated values can be used.</p>
</td>
</tr>
<tr class="cellalignment2228">
<td class="cellalignment2236" id="r5c1-t2" headers="r1c1-t2">
<p><code dir="ltr">DBMS_REDACT.ENABLE_POLICY</code></p>
</td>
<td class="cellalignment2236" headers="r5c1-t2 r1c2-t2">
<p>Enables a Data Redaction policy</p>
</td>
</tr>
<tr class="cellalignment2228">
<td class="cellalignment2236" id="r6c1-t2" headers="r1c1-t2">
<p><code dir="ltr">DBMS_REDACT.DISABLE_POLICY</code></p>
</td>
<td class="cellalignment2236" headers="r6c1-t2 r1c2-t2">
<p>Disables a Data Redaction policy</p>
</td>
</tr>
<tr class="cellalignment2228">
<td class="cellalignment2236" id="r7c1-t2" headers="r1c1-t2">
<p><code dir="ltr">DBMS_REDACT.DROP_POLICY</code></p>
</td>
<td class="cellalignment2236" headers="r7c1-t2 r1c2-t2">
<p>Drops a Data Redaction policy</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblhruleformal" -->
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink ARPLS73800" href="../../appdev.112/e40758/d_redact.htm#ARPLS73800"><span class="italic">Oracle Database PL/SQL Packages and Types Reference</span></a> for detailed information about the <code dir="ltr">DBMS_REDACT</code> PL/SQL package</div>
</div>
<!-- class="sect1" -->
<a id="CACJBEAB"></a>
<div id="ASOAG490" class="sect1">
<h2 class="sect1"><span class="secnum">5.2</span> Who Can Create Oracle Data Redaction Policies?</h2>
<p>To<a id="sthref90"></a> create redaction policies, you must have the <code dir="ltr">EXECUTE</code> privilege on the <code dir="ltr">DBMS_REDACT</code> PL/SQL package. You do not need any privileges to access the underlying tables or views that will be protected by the policy.</p>
</div>
<!-- class="sect1" -->
<a id="CACCHFHF"></a>
<div id="ASOAG421" class="sect1">
<h2 class="sect1"><span class="secnum">5.3</span> Planning the Creation of an Oracle Data Redaction Policy</h2>
<p>Before you create an Oracle Data Redaction policy, it is important to plan the data redaction process that best suits your data.</p>
<ol>
<li>
<p>Ensure <a id="sthref91"></a>that you <a id="sthref92"></a>have been granted the <code dir="ltr">EXECUTE</code> privilege on the <code dir="ltr">DBMS_REDACT</code> PL/SQL package.</p>
</li>
<li>
<p>Determine the data type of the table or view column that you want to redact.</p>
</li>
<li>
<p>Ensure that this column is not used in an Oracle Virtual Private Database (VPD) row filtering condition. That is, it must not be part of the VPD predicate generated by the VPD policy function.</p>
</li>
<li>
<p>Decide on the type of redaction that you want to perform: full, random, partial, regular expressions, or none.</p>
</li>
<li>
<p>Decide which users to apply the Data Redaction policy to.</p>
</li>
<li>
<p>Based on this information, create the Data Redaction policy by using the <code dir="ltr">DBMS_REDACT.ADD_POLICY</code> procedure.</p>
</li>
<li>
<p>Configure the policy to have additional columns to be redacted, as described in <a href="#CACHIIAE">"Redacting Multiple Columns"</a>.</p>
</li>
</ol>
<p>After you create the Data Redaction policy, it is automatically enabled and ready to redact data.</p>
</div>
<!-- class="sect1" -->
<a id="CACCFCEB"></a>
<div id="ASOAG352" class="sect1">
<h2 class="sect1"><span class="secnum">5.4</span> General Syntax of the DBMS_REDACT.ADD_POLICY Procedure</h2>
<p>To create<a id="sthref93"></a> a Data Redaction policy, use the <code dir="ltr">DBMS_REDACT.ADD_POLICY</code> procedure. The complete syntax is as follows:</p>
<pre dir="ltr">
DBMS_REDACT.ADD_POLICY (
DBMS_REDACT.ADD_POLICY (
 object_schema               IN VARCHAR2 := NULL,
 object_name                 IN VARCHAR2 := NULL,
 policy_name                 IN VARCHAR2, 
 policy_description          IN VARCHAR2 := NULL,
 column_name                 IN VARCHAR2 := NULL,
 column_description          IN VARCHAR2 := NULL,
 function_type               IN BINARY_INTEGER := DBMS_REDACT.FULL,
 function_parameters         IN VARCHAR2 := NULL,
 expression                  IN VARCHAR2,
 enable                      IN BOOLEAN := TRUE,
 regexp_pattern              IN VARCHAR2 := NULL,
 regexp_replace_string       IN VARCHAR2 := NULL,
 regexp_position             IN BINARY_INTEGER :=1,
 regexp_occurrence           IN BINARY_INTEGER :=0,
 regexp_match_parameter      IN VARCHAR2 := NULL);
</pre>
<p>In this specification:</p>
<ul>
<li>
<p><code dir="ltr">object_schema</code>: Specifies the schema of the object on which the Data Redaction policy will be applied. If you omit this setting (or enter <code dir="ltr">NULL</code>), then Oracle Database uses the current user's name. Be aware that the meaning of "current user" here can change, depending on where you invoke the <code dir="ltr">DBMS_REDACT.ADD_POLICY</code> procedure.</p>
<p>For example, suppose user <code dir="ltr">mpike</code> grants user <code dir="ltr">fbrown</code> the <code dir="ltr">EXECUTE</code> privilege on a definer's rights PL/SQL package called <code dir="ltr">mpike.protect_data</code> in <code dir="ltr">mpike</code>'s schema. From within this package, <code dir="ltr">mpike</code> has coded a procedure called <code dir="ltr">protect_cust_data</code>, which invokes the <code dir="ltr">DBMS_REDACT.ADD_POLICY</code> procedure. User <code dir="ltr">mpike</code> has set the <code dir="ltr">object_schema</code> parameter to <code dir="ltr">NULL</code>.</p>
<p>When <code dir="ltr">fbrown</code> invokes the <code dir="ltr">protect_cust_data</code> procedure in the <code dir="ltr">mpike.protect_data</code> package, Oracle Database attempts to define the Data Redaction policy around the object <code dir="ltr">cust_data</code> in the <code dir="ltr">mpike</code> schema, not the <code dir="ltr">cust_data</code> object in the schema that belongs to <code dir="ltr">fbrown</code>.</p>
</li>
<li>
<p><code dir="ltr">object_name</code>: Specifies the name of the table or view to which the Data Redaction policy applies.</p>
</li>
<li>
<p><code dir="ltr">policy_name</code>: Specifies the name of the policy to be created. Ensure that this name is unique in the database instance. You can find a list of existing Data Redaction policies by querying the <code dir="ltr">POLICY_NAME</code> column of the <code dir="ltr">REDACTION_POLICIES</code> data dictionary view.</p>
</li>
<li>
<p><code dir="ltr">policy_description</code>: Specifies a brief description of the purpose of the policy.</p>
</li>
<li>
<p><code dir="ltr">column_name</code>: Specifies the column whose data you want to redact. Note the following:</p>
<ul>
<li>
<p><span class="bold">You can apply the Data Redaction policy to multiple columns.</span> If you want to apply the Data Redaction policy to multiple columns, then after you use <code dir="ltr">DBMS_REDACT.ADD_POLICY</code> to create the policy, run the <code dir="ltr">DBMS_REDACT.ALTER_POLICY</code> procedure as many times as necessary to add each of the remaining required columns to the policy. See <a href="#CACJDBBA">"Altering an Oracle Data Redaction Policy"</a>.</p>
</li>
<li>
<p><span class="bold">Only one policy can be defined on a table or view.</span> You can, however, create a new view on the table, and by defining a second redaction policy on this new view, you can choose to redact the columns in a different way when a query is issued against this new view. When deciding how to redact a given column, Oracle Database uses the policy of the earliest view in a view chain. See <a href="#CACHHBAB">"Example: How Oracle Data Redaction Affects Tables and Views"</a> for more information about using Data Redaction policies with views.</p>
</li>
<li>
<p><span class="bold">If you do not specify a column (for example, by entering NULL), then no columns are redacted by the policy.</span> This enables you to create your policies so that they are in place, and then later on, you can add the column specification when you are ready.</p>
</li>
<li>
<p><span class="bold">Do not use a column that is currently used in an Oracle Virtual Private Database (VPD) row filtering condition.</span> In other words, the column should not be part of the VPD predicate generated by the VPD policy function. See <a href="redaction_other.htm#CACEEJIC">"Oracle Data Redaction and Oracle Virtual Private Database"</a> for more information about using Data Redaction with VPD.s</p>
</li>
<li>
<p><span class="bold">You cannot define a Data Redaction policy on a virtual column.</span> In addition, you cannot define a Data Redaction policy on a column that is involved in the SQL expression of any virtual column.</p>
</li>
</ul>
</li>
<li>
<p><code dir="ltr">column_description</code>: Specifies a brief description of the column that you are redacting.</p>
</li>
<li>
<p><code dir="ltr">function_type</code>: Specifies a function that sets the type of redaction. See the following sections for more information:</p>
<ul>
<li>
<p><a href="#CEGIFABB">"Syntax for Creating a Full Redaction Policy"</a></p>
</li>
<li>
<p><a href="#CEGGFHFE">"Syntax for Creating a Partial Redaction Policy"</a></p>
</li>
<li>
<p><a href="#CEGJEGCB">"Syntax for Creating a Regular Expression-Based Redaction Policy"</a></p>
</li>
<li>
<p><a href="#CEGEDCHJ">"Syntax for Creating a Random Redaction Policy"</a></p>
</li>
<li>
<p><a href="#CEGEEJDF">"Syntax for Creating a Policy with No Redaction"</a></p>
</li>
</ul>
<p>If you omit the <code dir="ltr">function_type</code> parameter, then the default redaction <code dir="ltr">function_type</code> setting is <code dir="ltr">DBMS_REDACT.FULL</code>.</p>
</li>
<li>
<p><code dir="ltr">function_parameters</code>: Specifies how the column redaction should appear for partial redaction. See <a href="#CEGGFHFE">"Syntax for Creating a Partial Redaction Policy"</a>.</p>
</li>
<li>
<p><code dir="ltr">expression</code>: Specifies a Boolean SQL expression to determine how the policy is applied. Redaction takes place only if this policy expression evaluates to <code dir="ltr">TRUE</code>. See <a href="#CEGCDBFD">"Using Expressions to Define Conditions for Data Redaction Policies"</a>.</p>
</li>
<li>
<p><code dir="ltr">enable</code>: When set to <code dir="ltr">TRUE</code>, enables the policy upon creation. When set to <code dir="ltr">FALSE</code>, it creates the policy as a disabled policy. The default is <code dir="ltr">TRUE</code>. After you create the policy, you can disable or enable it. See the following sections:</p>
<ul>
<li>
<p><a href="#CACIFJBE">"Disabling an Oracle Data Redaction Policy"</a></p>
</li>
<li>
<p><a href="#CACBCFID">"Enabling an Oracle Data Redaction Policy"</a></p>
</li>
</ul>
</li>
<li>
<p><code dir="ltr">regexp_pattern</code>, <code dir="ltr">regexp_replace_string</code>, <code dir="ltr">regexp_position</code>, <code dir="ltr">regexp_position</code>, <code dir="ltr">regexp_occurrence</code>, <code dir="ltr">regexp_match_parameter</code>: Enable you to use regular expressions to redact data, either fully or partially. If the <code dir="ltr">regexp_pattern</code> does not match anything in the <a href="asogls.htm#BABIDFHF"><span class="xrefglossterm">actual data</span></a>, then full redaction will take place, so be careful when specifying the <code dir="ltr">regexp_pattern</code>. Ensure that all of the values in the column conform to the semantics of the regular expression you are using. See <a href="#CEGJEGCB">"Syntax for Creating a Regular Expression-Based Redaction Policy"</a> for more information.</p>
</li>
</ul>
</div>
<!-- class="sect1" -->
<a id="CEGCDBFD"></a>
<div id="ASOAG10631" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1"><span class="secnum">5.5</span> Using Expressions to Define Conditions for Data Redaction Policies</h2>
<p>When you create any Oracle Data Redaction policy, you must use the <code dir="ltr">expression</code> parameter in the <code dir="ltr">DBMS_REDACT.ADD_POLICY</code> procedure to specify the conditions in which the policy applies.</p>
<p>This section contains:</p>
<ul>
<li>
<p><a href="#CEGIAHBG">About Using Expressions in Data Redaction Policies</a></p>
</li>
<li>
<p><a href="#CEGJJEHJ">Applying the Redaction Policy Based on User Environment</a></p>
</li>
<li>
<p><a href="#CEGEJGGH">Applying the Redaction Policy Based on Database Role</a></p>
</li>
<li>
<p><a href="#CEGGAAID">Applying the Redaction Policy Based on Oracle Application Express Session States</a></p>
</li>
<li>
<p><a href="#CEGBJEIC">Applying the Redaction Policy with No Filtering</a></p>
</li>
</ul>
<a id="CEGIAHBG"></a>
<div id="ASOAG10632" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">5.5.1</span> About Using Expressions in Data Redaction Policies</h3>
<p>The <a id="sthref94"></a><code dir="ltr">expression</code> parameter of the <code dir="ltr">DBMS_REDACT.ADD_POLICY</code> procedure defines a Boolean expression that must evaluate to <code dir="ltr">TRUE</code> before the redaction can table place.</p>
<p>This expression must be based on one of the following functions:</p>
<ul>
<li>
<p><code dir="ltr">SYS_CONTEXT</code>, using a specified namespace. The default namespace for <code dir="ltr">SYS_CONTEXT</code> is <code dir="ltr">USERENV</code>, which includes values such as <code dir="ltr">SESSION_USER</code> and <code dir="ltr">CLIENT_IDENTIFIER</code>. (See <a class="olink SQLRF06117" href="../../server.112/e41084/functions184.htm#SQLRF06117"><span class="italic">Oracle Database SQL Language Reference</span></a> for detailed information about this function.) Another namespace that you can use is the <code dir="ltr">SYS_SESSION_ROLES</code> namespace, which contains attributes for each role.</p>
</li>
<li>
<p>The following Oracle Application Express functions:</p>
<ul>
<li>
<p><code dir="ltr">V</code>, which is a wrapper for the <code dir="ltr">APEX_UTIL.GET_SESSION_STATE</code> function</p>
</li>
<li>
<p><code dir="ltr">NV</code>, which is a wrapper for the <code dir="ltr">APEX_UTIL.GET_NUMERIC_SESSION_STATE</code> function</p>
</li>
</ul>
<p>See <a class="olink AEAPI101" href="../../appdev.112/e12510/apex_util.htm#AEAPI101"><span class="italic">Oracle Application Express API Reference</span></a> for more information about these <code dir="ltr">APEX_UTIL</code> package functions.</p>
</li>
<li>
<p>The <code dir="ltr">OLS_LABEL_DOMINATES</code> function, described in <a class="olink OLSAG4147" href="http://www.oracle.com/pls/topic/lookup?ctx=db112&amp;id=OLSAG4147"><span class="italic">Oracle Label Security Administrator's Guide</span></a>, which is a wrapper for the <code dir="ltr">LBACSYS.OLS_LABEL_DOMINATES</code> function.</p>
</li>
</ul>
<p>Follow these guidelines when you write the expression:</p>
<ul>
<li>
<p>Use only the following operators: <code dir="ltr">=</code>, <code dir="ltr">!=</code>, <code dir="ltr">&gt;</code>, <code dir="ltr">&lt;</code>, <code dir="ltr">&gt;=</code>, <code dir="ltr">&lt;=</code></p>
</li>
<li>
<p>Because the expression must evaluate to <code dir="ltr">TRUE</code> for redaction, be careful when making comparisons with <code dir="ltr">NULL</code>. Remember that in SQL the value <code dir="ltr">NULL</code> is undefined, so comparisons with <code dir="ltr">NULL</code> tend to return <code dir="ltr">FALSE</code>.</p>
</li>
<li>
<p>Do not use user-created functions in the <code dir="ltr">expression</code> parameter; this is not permitted.</p>
</li>
</ul>
<p>Remember that for user <code dir="ltr">SYS</code> and users who have the <code dir="ltr">EXEMPT REDACTION POLICY</code> privilege, all of the Data Redaction policies are bypassed, so the results of their queries are not redacted. See for more information about users who are exempted from Data Redaction policies.</p>
<p>Remember that for user <code dir="ltr">SYS</code> and users who have the <code dir="ltr">EXEMPT REDACTION POLICY</code> privilege, all of the Data Redaction policies are bypassed, so the results of their queries are not redacted. See <a href="#CACBEJAE">"Exempting Users from Oracle Data Redaction Policies"</a> for more information about users who are exempted from Data Redaction policies.</p>
</div>
<!-- class="sect2" -->
<a id="CEGJJEHJ"></a>
<div id="ASOAG10633" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">5.5.2</span> Applying the Redaction Policy Based on User Environment</h3>
<p>To apply a Data Redaction policy based on<a id="sthref95"></a><a id="sthref96"></a> the user's environment (such as the session user name or client identifier), you can use the <code dir="ltr">USERENV</code> namespace of the <code dir="ltr">SYS_CONTEXT</code> function in the <code dir="ltr">DBMS_REDACT.ADD_POLICY</code> <code dir="ltr">expression</code> parameter.</p>
<p><a href="#CEGBBBBC">Example 5-1</a> shows how to apply the policy only to the session user name <code dir="ltr">psmith</code>.</p>
<div id="ASOAG10634" class="example">
<p class="titleinexample"><a id="CEGBBBBC"></a>Example 5-1 Filtering Users by Session User Name</p>
<pre dir="ltr">
expression  =&gt; 'SYS_CONTEXT(''USERENV'',''SESSION_USER'') = ''PSMITH'''
</pre></div>
<!-- class="example" -->
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink SQLRF06117" href="../../server.112/e41084/functions184.htm#SQLRF06117"><span class="italic">Oracle Database SQL Language Reference</span></a> for information about more namespaces that you can use with the <code dir="ltr">SYS_CONTEXT</code> function</div>
</div>
<!-- class="sect2" -->
<a id="CEGEJGGH"></a>
<div id="ASOAG10635" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">5.5.3</span> Applying the Redaction Policy Based on Database Role</h3>
<p>To apply a <a id="sthref97"></a>Data Redaction policy based on <a id="sthref98"></a>database roles, you can use the <code dir="ltr">SYS_SESSION_ROLES</code> namespace in the <code dir="ltr">SYS_CONTEXT</code> function<a id="sthref99"></a><a id="sthref100"></a>, which contains attributes for each role. The value of the attribute is <code dir="ltr">TRUE</code> if the specified role is enabled for the querying application user; the value is <code dir="ltr">FALSE</code> if the role is not enabled.</p>
<p>For example, suppose you wanted only supervisors to be allowed to see the <a href="asogls.htm#BABGAFIB"><span class="xrefglossterm">actual data</span></a>. <a href="#CEGECGAA">Example 5-2</a> shows how to use the <code dir="ltr">DBMS_REDACT.ADD_POLICY</code> <code dir="ltr">expression</code> parameter to set the policy to show the actual data to any application user who has the <code dir="ltr">supervisor</code> role enabled, but redact the data for all of the other application users.</p>
<div id="ASOAG10636" class="example">
<p class="titleinexample"><a id="CEGECGAA"></a>Example 5-2 Applying a Data Redaction Policy by Database Role</p>
<pre dir="ltr">
expression  =&gt; 'SYS_CONTEXT(''SYS_SESSION_ROLES'',''SUPERVISOR'') = ''FALSE'''
</pre></div>
<!-- class="example" --></div>
<!-- class="sect2" -->
<a id="CEGGAAID"></a>
<div id="ASOAG10637" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">5.5.4</span> Applying the Redaction Policy Based on Oracle Application Express Session States</h3>
<p>To apply a Data Redaction policy based on <a id="sthref101"></a>an <a id="sthref102"></a>Oracle Application Express (APEX) session state, you can use either of the following public Application Express APIs in the <code dir="ltr">DBMS_REDACT.ADD_POLICY</code> <code dir="ltr">expression</code> parameter:</p>
<ul>
<li>
<p><code dir="ltr">V</code>, which is a synonym for the<a id="sthref103"></a> <code dir="ltr">APEX_UTIL.GET_SESSION_STATE</code> function<a id="sthref104"></a></p>
</li>
<li>
<p><code dir="ltr">NV</code>, <a id="sthref105"></a>which is a synonym for the<a id="sthref106"></a> <code dir="ltr">APEX_UTIL.GET_NUMERIC_SESSION_STATE</code> function</p>
</li>
</ul>
<p>You can, for example, use these functions to redact data based on a job or a privilege role that is stored in a session state in an APEX application.</p>
<p><a href="#CEGDEEED">Example 5-3</a> shows how to set the <code dir="ltr">DBMS_REDACT.ADD_POLICY</code> <code dir="ltr">expression</code> parameter if you wanted redaction to take place when the application item called <code dir="ltr">G_JOB</code> has the value <code dir="ltr">CLERK</code>.</p>
<div id="ASOAG10638" class="example">
<p class="titleinexample"><a id="CEGDEEED"></a>Example 5-3 Filtering Users by Oracle Application Express Session State</p>
<pre dir="ltr">
expression =&gt; 'V'(''G_JOB'') = ''CLERK'''
</pre></div>
<!-- class="example" -->
<p>If you want redaction to take place when the querying user is <span class="italic">not</span> within the context of an APEX application (when the query is issued from outside the APEX framework, for example directly through SQL*Plus), then use an <code dir="ltr">IS NULL</code> clause as follows. This policy expression causes actual data to be shown to user <code dir="ltr">mavis</code> only when her query comes from within an APEX application. Otherwise, the query result is redacted.</p>
<pre dir="ltr">
expression =&gt; 'V(''APP_USER'') != ''mavis@example.com'' or V(''APP_USER'') is null'
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink AEAPI101" href="../../appdev.112/e12510/apex_util.htm#AEAPI101"><span class="italic">Oracle Application Express API Reference</span></a></div>
</div>
<!-- class="sect2" -->
<a id="CEGBJEIC"></a>
<div id="ASOAG10642" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">5.5.5</span> Applying the Redaction Policy with No Filtering</h3>
<p>You <a id="sthref107"></a>can apply the policy irrespective of the context to any user, with no filtering. However, be aware that user <code dir="ltr">SYS</code> and users who have the <code dir="ltr">EXEMPT REDACTION POLICY</code> privilege are always except from Oracle Data Redaction policies. To apply the policy to users who are not <code dir="ltr">SYS</code> or have been granted the <code dir="ltr">EXEMPT REDACTION POLICY</code> privilege, write the <code dir="ltr">DBMS_REDACT.ADD_POLICY</code> <code dir="ltr">expression</code> parameter to evaluate to <code dir="ltr">TRUE</code>, as shown <a href="#CEGJGACG">Example 5-4</a>.</p>
<div id="ASOAG10639" class="example">
<p class="titleinexample"><a id="CEGJGACG"></a>Example 5-4 Applying the Redaction Policy with No Filtering</p>
<pre dir="ltr">
expression  =&gt; '1=1'
</pre></div>
<!-- class="example" -->
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#CACBEJAE">"Exempting Users from Oracle Data Redaction Policies"</a></div>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="CEGJIIFD"></a>
<div id="ASOAG10650" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1"><span class="secnum">5.6</span> Creating a Full Redaction Policy and Altering the Default Full Redaction Value</h2>
<p>This section contains:</p>
<ul>
<li>
<p><a href="#CEGJAHDE">Creating a Full Redaction Policy</a></p>
</li>
<li>
<p><a href="#CACJIGHJ">Altering the Default Full Data Redaction Value</a></p>
</li>
</ul>
<a id="CEGJAHDE"></a>
<div id="ASOAG10582" class="sect2">
<h3 class="sect2"><span class="secnum">5.6.1</span> Creating a Full Redaction Policy</h3>
<p>This section contains:</p>
<ul>
<li>
<p><a href="#CEGFDDJF">About Creating Full Data Redaction Policies</a></p>
</li>
<li>
<p><a href="#CEGIFABB">Syntax for Creating a Full Redaction Policy</a></p>
</li>
<li>
<p><a href="#CEGJCHEG">Examples of Full Data Redaction Policies</a></p>
</li>
</ul>
<a id="CEGFDDJF"></a>
<div id="ASOAG10583" class="sect3">
<h4 class="sect3"><span class="secnum">5.6.1.1</span> About Creating Full Data Redaction Policies</h4>
<p>A <a id="sthref108"></a>full data redaction policy redacts all the contents of a data column. To set the redaction policy to be full, you must set the function_type parameter to <code dir="ltr">DBMS_REDACT.FULL</code>. By default, <code dir="ltr">NUMBER</code> data type columns are replaced with zero (<code dir="ltr">0</code>) and character data type columns are replaced with a single space ( ). You can modify this default by using the <code dir="ltr">DBMS_REDACT.UPDATE_FULL_REDACTION_VALUES</code> procedure.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#CACJIGHJ">"Altering the Default Full Data Redaction Value"</a> if you want to modify the default full redaction value</div>
</div>
<!-- class="sect3" -->
<a id="CEGIFABB"></a>
<div id="ASOAG10584" class="sect3">
<h4 class="sect3"><span class="secnum">5.6.1.2</span> Syntax for Creating a Full Redaction Policy</h4>
<p>The <a id="sthref109"></a>fields used for creating a full data redaction policy are as follows:</p>
<pre dir="ltr">
DBMS_REDACT.ADD_POLICY (
<span class="italic">   </span>object_schema           IN VARCHAR2 := NULL, 
   object_name             IN VARCHAR2,
   column_name             IN VARCHAR2 := NULL,
   policy_name             IN VARCHAR2,
   function_type           IN BINARY_INTEGER := NULL,
   expression              IN VARCHAR2,
   enable                  IN BOOLEAN := TRUE);
</pre>
<p>In this specification:</p>
<ul>
<li>
<p><code dir="ltr">object_schema</code>, <code dir="ltr">object_name</code>, <code dir="ltr">column_name</code>, <code dir="ltr">policy_name</code>, <code dir="ltr">expression</code>, <code dir="ltr">enable</code>: See <a href="#CACCFCEB">"General Syntax of the DBMS_REDACT.ADD_POLICY Procedure"</a>.</p>
</li>
<li>
<p><code dir="ltr">function_type</code>: Specifies the function used to set the type of redaction. Enter <code dir="ltr">DBMS_REDACT.FULL</code>.</p>
<p>If you omit the <code dir="ltr">function_type</code> parameter, then the default redaction <code dir="ltr">function_type</code> setting is <code dir="ltr">DBMS_REDACT.FULL</code>.</p>
<p>Remember that the data type of the column determines which <code dir="ltr">function_type</code> settings that you are permitted to use. See <a href="redaction_features.htm#CACCADBG">"Comparison of Full, Partial, and Random Redaction Based on Data Types"</a>.</p>
</li>
</ul>
</div>
<!-- class="sect3" -->
<a id="CEGJCHEG"></a>
<div id="ASOAG10585" class="sect3">
<h4 class="sect3"><span class="secnum">5.6.1.3</span> Examples of Full Data Redaction Policies</h4>
<p><a href="#CEGBBIAC">Example 5-5</a> shows <a id="sthref110"></a>how to use full redaction for all the values in the <code dir="ltr">HR.EMPLOYEES</code> table <code dir="ltr">COMMISSION_PCT</code> column. The expression parameter applies the policy to any user querying the table, except for users who have been granted the <code dir="ltr">EXEMPT REDACTION POLICY</code> system privilege. (See <a href="#CACBEJAE">"Exempting Users from Oracle Data Redaction Policies"</a> for more information about the <code dir="ltr">EXEMPT REDACTION POLICY</code> system privilege.)</p>
<div id="ASOAG10586" class="example">
<p class="titleinexample"><a id="CEGBBIAC"></a>Example 5-5 Full Data Redaction Policy</p>
<pre dir="ltr">
BEGIN
 DBMS_REDACT.ADD_POLICY(
   object_schema    =&gt; 'hr', 
   object_name      =&gt; 'employees', 
   column_name      =&gt; 'commission_pct',
   policy_name      =&gt; 'redact_com_pct', 
   function_type    =&gt; DBMS_REDACT.FULL,
   expression       =&gt; '1=1');
END;
/
</pre></div>
<!-- class="example" -->
<p>Query and redacted result:</p>
<pre dir="ltr">
SELECT COMMISSION_PCT FROM HR.EMPLOYEES;

COMMISSION_PCT
--------------
0
0
0
</pre>
<p><a href="#CACGBAAG">Example 5-6</a> shows <a id="sthref111"></a>how to redact fully the user IDs of the <code dir="ltr">user_id</code> column in the <code dir="ltr">mavis.cust_info</code> table. The <code dir="ltr">user_id</code> column is of the <code dir="ltr">VARCHAR2</code> data type. The output is a blank string. The <code dir="ltr">expression</code> setting enables users who have the <code dir="ltr">MGR</code> role to view the user IDs.</p>
<div id="ASOAG452" class="example">
<p class="titleinexample"><a id="CACGBAAG"></a>Example 5-6 Fully Redacted Data Redaction Character Values</p>
<pre dir="ltr">
BEGIN
 DBMS_REDACT.ADD_POLICY(
   object_schema   =&gt; 'mavis', 
   object_name     =&gt; 'cust_info', 
   column_name     =&gt; 'user_id',
   policy_name     =&gt; 'redact_cust_user_ids', 
   function_type   =&gt; DBMS_REDACT.FULL,
   expression      =&gt; 'SYS_CONTEXT(''SYS_SESSION_ROLES'',''MGR'') = ''FALSE''');
END;
/
</pre></div>
<!-- class="example" -->
<p>Query and redacted result:</p>
<pre dir="ltr">
SELECT user_id FROM mavis.cust_info;

USER_ID
------------
0
0
0
</pre></div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="CACJIGHJ"></a>
<div id="ASOAG945" class="sect2">
<h3 class="sect2"><span class="secnum">5.6.2</span> Altering the Default Full Data Redaction Value</h3>
<p>To alter the default full data redaction value, you use the <code dir="ltr">DBMS_REDACT.UPDATE_FULL_REDACTION_VALUES</code> procedure to modify this value.</p>
<p>This section contains:</p>
<ul>
<li>
<p><a href="#CACBAJDH">About Altering the Default Full Data Redaction Value</a></p>
</li>
<li>
<p><a href="#CEGHEGBB">Altering the Default Full Data Redaction Value for Non-LOB Data Type Columns</a></p>
</li>
<li>
<p><a href="#CEGJDAAJ">Altering the Default Full Data Redaction Value for LOB Data Type Columns</a></p>
</li>
</ul>
<a id="CACBAJDH"></a>
<div id="ASOAG946" class="sect3">
<h4 class="sect3"><span class="secnum">5.6.2.1</span> About Altering the Default Full Data Redaction Value</h4>
<p>You <a id="sthref112"></a>can <a id="sthref113"></a>alter the default displayed values for Data Redaction policies that use full data redaction. If you want to change any of the default full redaction values for any of the data types to another value, then you can use the method that applies to that data type, as shown in the following list:</p>
<ul>
<li>
<p>If the data type of the column is a non-LOB data type (<code dir="ltr">BINARY_FLOAT</code>, <code dir="ltr">BINARY_DOUBLE</code>, <code dir="ltr">CHAR</code>, <code dir="ltr">VARCHAR2</code>, <code dir="ltr">NCHAR</code>, <code dir="ltr">NVARCHAR2</code>, <code dir="ltr">DATE</code>, <code dir="ltr">TIMESTAMP</code>, or <code dir="ltr">TIMESTAMP WITH TIME ZONE</code>), then you must use the <code dir="ltr">DBMS_REDACT.UPDATE_FULL_REDACTION_VALUES</code> procedure, as described in <a href="#CEGHEGBB">"Altering the Default Full Data Redaction Value for Non-LOB Data Type Columns"</a>.</p>
</li>
<li>
<p>If the data type of the column is a LOB data type (<code dir="ltr">BLOB</code>, CLOB, or <code dir="ltr">NCLOB</code>), then you must run the <code dir="ltr">UPDATE</code> statement, as described in <a href="#CEGJDAAJ">"Altering the Default Full Data Redaction Value for LOB Data Type Columns"</a>.</p>
</li>
</ul>
<p>After you modify a value, you must restart the database for it to take effect. You can find the current values by querying the <code dir="ltr">REDACTION_VALUES_FOR_TYPE_FULL</code> data dictionary view.</p>
<p>Be aware that this change affects all Data Redaction policies in the database that use full data redaction. Before you alter the default full data redaction value, examine the affect that this change would have on existing full Data Redaction policies.</p>
</div>
<!-- class="sect3" -->
<a id="CEGHEGBB"></a>
<div id="ASOAG10519" class="sect3">
<h4 class="sect3"><span class="secnum">5.6.2.2</span> Altering the Default Full Data Redaction Value for Non-LOB Data Type Columns</h4>
<p>To <a id="sthref114"></a>alter the default full data redaction value for non-LOB data type columns, use the <code dir="ltr">DBMS_REDACT.UPDATE_FULL_REDACTION_VALUES</code> procedure.</p>
<ol>
<li>
<p>Log in to the database instance as a user who has been granted the <code dir="ltr">EXECUTE</code> privilege on the <code dir="ltr">DBMS_REDACT</code> PL/SQL package.</p>
</li>
<li>
<p>(Optional) Check the value that you want to change.</p>
<p>For example, to check the current value for columns that use the <code dir="ltr">NUMBER</code> data type:</p>
<pre dir="ltr">
SELECT NUMBER_VALUE FROM REDACTION_VALUES_FOR_TYPE_FULL;

NUMBER_VALUE
------------
           0
</pre></li>
<li>
<p>Run the <code dir="ltr">DBMS_REDACT.UPDATE_FULL_REDACTION_VALUES</code> procedure to modify the value.</p>
<p>Use the following syntax:</p>
<pre dir="ltr">
EXEC DBMS_REDACT.UPDATE_FULL_REDACTION_VALUES (<span class="italic">datatype_value</span> =&gt; <span class="italic">new_value</span>);
</pre>
<p>For example, to modify a <code dir="ltr">NUMBER</code> column to use <code dir="ltr">7</code> as the default:</p>
<pre dir="ltr">
EXEC DBMS_REDACT.UPDATE_FULL_REDACTION_VALUES (number_val =&gt; 7);
</pre>
<p>For other data types, replace <code dir="ltr"><span class="codeinlineitalic">datatype_value</span></code> with the following settings, and <code dir="ltr"><span class="codeinlineitalic">new_value</span></code> with the value that you want to use:</p>
<div class="inftblsimple">
<table class="cellalignment2239" title="datatype_value settings" summary="List of values, left to right, top to bottom, of settings for datatype_value" dir="ltr">
<thead>
<tr class="cellalignment2228">
<th class="cellalignment2235"><br /></th>
<th class="cellalignment2235">Data Type</th>
<th class="cellalignment2235">new_value Setting</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2228">
<td class="cellalignment2236">&nbsp;</td>
<td class="cellalignment2236"><code dir="ltr">BINARY_FLOAT</code></td>
<td class="cellalignment2236"><code dir="ltr">binfloat_val</code></td>
</tr>
<tr class="cellalignment2228">
<td class="cellalignment2236">&nbsp;</td>
<td class="cellalignment2236"><code dir="ltr">BINARY_DOUBLE</code></td>
<td class="cellalignment2236"><code dir="ltr">bindouble_val</code></td>
</tr>
<tr class="cellalignment2228">
<td class="cellalignment2236">&nbsp;</td>
<td class="cellalignment2236"><code dir="ltr">CHAR</code></td>
<td class="cellalignment2236"><code dir="ltr">char_val</code></td>
</tr>
<tr class="cellalignment2228">
<td class="cellalignment2236">&nbsp;</td>
<td class="cellalignment2236"><code dir="ltr">VARCHAR2</code></td>
<td class="cellalignment2236"><code dir="ltr">varchar_val</code></td>
</tr>
<tr class="cellalignment2228">
<td class="cellalignment2236">&nbsp;</td>
<td class="cellalignment2236"><code dir="ltr">NCHAR</code></td>
<td class="cellalignment2236"><code dir="ltr">nchar_val</code></td>
</tr>
<tr class="cellalignment2228">
<td class="cellalignment2236">&nbsp;</td>
<td class="cellalignment2236"><code dir="ltr">NVARCHAR2</code></td>
<td class="cellalignment2236"><code dir="ltr">nvarchar_val</code></td>
</tr>
<tr class="cellalignment2228">
<td class="cellalignment2236">&nbsp;</td>
<td class="cellalignment2236"><code dir="ltr">DATE</code></td>
<td class="cellalignment2236"><code dir="ltr">date_val</code></td>
</tr>
<tr class="cellalignment2228">
<td class="cellalignment2236">&nbsp;</td>
<td class="cellalignment2236"><code dir="ltr">TIMESTAMP</code></td>
<td class="cellalignment2236"><code dir="ltr">ts_val</code></td>
</tr>
<tr class="cellalignment2228">
<td class="cellalignment2236">&nbsp;</td>
<td class="cellalignment2236"><code dir="ltr">TIMESTAMP WITH TIME ZONE</code></td>
<td class="cellalignment2236"><code dir="ltr">tswtz_val</code></td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblsimple" --></li>
<li>
<p>Restart the database instance.</p>
<p>For example:</p>
<pre dir="ltr">
SHUTDOWN IMMEDIATE

STARTUP
</pre></li>
</ol>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a class="olink ARPLS74761" href="../../appdev.112/e40758/d_redact.htm#ARPLS74761"><span class="italic">Oracle Database PL/SQL Packages and Types Reference</span></a> for more information about the <code dir="ltr">DBMS_REDACT.UPDATE_FULL_REDACTION_VALUES</code> procedure</p>
</li>
<li>
<p><a class="olink REFRN29164" href="../../server.112/e40402/statviews_5163.htm#REFRN29164"><span class="italic">Oracle Database Reference</span></a> for more information about the <code dir="ltr">REDACTION_VALUES_FOR_TYPE_FULL</code> view</p>
</li>
</ul>
</div>
</div>
<!-- class="sect3" -->
<a id="CEGJDAAJ"></a>
<div id="ASOAG10520" class="sect3">
<h4 class="sect3"><span class="secnum">5.6.2.3</span> Altering the Default Full Data Redaction Value for LOB Data Type Columns</h4>
<p>To <a id="sthref115"></a>alter the default full data redaction value for LOB data type columns:</p>
<ol>
<li>
<p>Log in to the database instance as a user who has privileges to update the <code dir="ltr">RADM_FPTM_LOB$</code> data dictionary table.</p>
</li>
<li>
<p>(Optional) Check the value that you want to change by querying the <code dir="ltr">REDACTION_VALUES_FOR_TYPE_FULL</code> data dictionary view.</p>
</li>
<li>
<p>Update the LOB value.</p>
<ul>
<li>
<p>For the <code dir="ltr">BLOB</code> data type, initialize a variable (for example, <code dir="ltr">blob_val</code>) with the new full Data Redaction value for the <code dir="ltr">BLOB</code> data type. Then run an <code dir="ltr">UPDATE</code> statement on the <code dir="ltr">BLOBVAL</code> column of the <code dir="ltr">RADM_FPTM_LOB$</code> table to set the new default value for full redaction of columns of the <code dir="ltr">BLOB</code> data type.</p>
<pre dir="ltr">
DECLARE
  blob_val BLOB;
BEGIN
  DBMS_LOB.CREATETEMPORARY(blob_val, TRUE);
 
  DBMS_LOB.WRITE(blob_val, 8, 1,  UTL_RAW.CAST_TO_RAW('newvalue'));
 
  UPDATE RADM_FPTM_LOB$ SET BLOBCOL = BLOB_VAL WHERE FPVER = 1;
 
  DBMS_LOB.FREETEMPORARY(blob_val);
END;
/
</pre></li>
<li>
<p>For the <code dir="ltr">CLOB</code> data type, initialize a variable (for example, <code dir="ltr">clob_val</code>) with the new full Data Redaction value for the <code dir="ltr">CLOB</code> data type. Then run an <code dir="ltr">UPDATE</code> statement on the <code dir="ltr">CLOBVAL</code> column of the <code dir="ltr">RADM_FPTM_LOB$</code> table to set the new default value for full redaction of columns of the <code dir="ltr">CLOB</code> data type.</p>
<pre dir="ltr">
DECLARE
  clob_val CLOB;
BEGIN
  DBMS_LOB.CREATETEMPORARY(clob_val, TRUE);
 
  DBMS_LOB.WRITE(clob_val, 8, 1, 'newvalue');
 
  UPDATE RADM_FPTM_LOB$ SET CLOBCOL = CLOB_VAL WHERE FPVER = 1;
 
  DBMS_LOB.FREETEMPORARY(clob_val);
END;
/
</pre></li>
<li>
<p>For the <code dir="ltr">NCLOB</code> data type, initialize a variable (for example, <code dir="ltr">nclob_val</code>) with the new full Data Redaction value for the <code dir="ltr">NCLOB</code> data type. Then run an <code dir="ltr">UPDATE</code> statement on the <code dir="ltr">NCLOBVAL</code> column of the <code dir="ltr">RADM_FPTM_LOB$</code> table to set the new default value for full redaction of columns of the <code dir="ltr">NCLOB</code> data type.</p>
<pre dir="ltr">
DECLARE
  nclob_val NCLOB;
BEGIN
  DBMS_LOB.CREATETEMPORARY(nclob_val, TRUE);
 
  DBMS_LOB.WRITE(nclob_val, 8, 1, N'newvalue');
 
  UPDATE RADM_FPTM_LOB$ SET NCLOBCOL = NCLOB_VAL WHERE FPVER = 1;
 
  DBMS_LOB.FREETEMPORARY(nclob_val);
END;
/
</pre></li>
</ul>
</li>
<li>
<p>Restart the database instance.</p>
<p>For example:</p>
<pre dir="ltr">
SHUTDOWN IMMEDIATE

STARTUP
</pre></li>
</ol>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink REFRN29164" href="../../server.112/e40402/statviews_5163.htm#REFRN29164"><span class="italic">Oracle Database Reference</span></a> for more information about the <code dir="ltr">REDACTION_VALUES_FOR_TYPE_FULL</code> view</div>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="CEGCICFA"></a>
<div id="ASOAG10587" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1"><span class="secnum">5.7</span> Creating a Partial Redaction Policy</h2>
<p>This section contains:</p>
<ul>
<li>
<p><a href="#CEGCIGFF">About Creating Partial Redaction Policies</a></p>
</li>
<li>
<p><a href="#CEGGFHFE">Syntax for Creating a Partial Redaction Policy</a></p>
</li>
<li>
<p><a href="#CEGIGGDG">Creating Partial Redaction Policies Using Fixed Character Shortcuts</a></p>
</li>
<li>
<p><a href="#CEGEFEGJ">Creating Partial Redaction Policies Using Character Data Types</a></p>
</li>
<li>
<p><a href="#CEGCABIC">Creating Partial Redaction Policies Using Number Data Types</a></p>
</li>
<li>
<p><a href="#CEGJIFHD">Creating Partial Redaction Policies Using Date-Time Data Types</a></p>
</li>
</ul>
<a id="CEGCIGFF"></a>
<div id="ASOAG10588" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">5.7.1</span> About Creating Partial Redaction Policies</h3>
<p>In <a id="sthref116"></a>partial data redaction, only a portion of the data, such as the first five digits of an identification number, are redacted. For example, you can redact most of a credit card number with asterisks (*), except for the last 4 digits. You can create policies for columns that use character, number, or date-time data types. For policies that redact character data types, you can use fixed character redaction shortcuts.</p>
</div>
<!-- class="sect2" -->
<a id="CEGGFHFE"></a>
<div id="ASOAG10589" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">5.7.2</span> Syntax for Creating a Partial Redaction Policy</h3>
<p>The<a id="sthref117"></a> <code dir="ltr">DBMS_REDACT.ADD_POLICY</code> fields for creating a partial redaction policy are as follows:</p>
<pre dir="ltr">
DBMS_REDACT.ADD_POLICY (
<span class="italic">   </span>object_schema           IN VARCHAR2 := NULL, 
   object_name             IN VARCHAR2,
   column_name             IN VARCHAR2 := NULL,
   policy_name             IN VARCHAR2,
   function_type           IN BINARY_INTEGER := NULL,
   function_parameters     IN VARCHAR2 := NULL,
   expression              IN VARCHAR2,
   enable                  IN BOOLEAN := TRUE);
</pre>
<p>In this specification:</p>
<ul>
<li>
<p><code dir="ltr">object_schema</code>, <code dir="ltr">object_name</code>, <code dir="ltr">column_name</code>, <code dir="ltr">policy_name</code>, <code dir="ltr">expression</code>, <code dir="ltr">enable</code>: See <a href="#CACCFCEB">"General Syntax of the DBMS_REDACT.ADD_POLICY Procedure"</a></p>
</li>
<li>
<p><code dir="ltr">function_type</code>: Specifies the function used to set the type of redaction. Enter <code dir="ltr">DBMS_REDACT.PARTIAL</code>.</p>
</li>
<li>
<p><code dir="ltr">function_parameters</code>: The parameters that you set here depend on the data type of the column specified for the <code dir="ltr">column_name</code> parameter. See the following sections for details:</p>
<ul>
<li>
<p><a href="#CEGIGGDG">"Creating Partial Redaction Policies Using Fixed Character Shortcuts"</a></p>
</li>
<li>
<p><a href="#CEGEFEGJ">"Creating Partial Redaction Policies Using Character Data Types"</a></p>
</li>
<li>
<p><a href="#CEGCABIC">"Creating Partial Redaction Policies Using Number Data Types"</a></p>
</li>
<li>
<p><a href="#CEGJIFHD">"Creating Partial Redaction Policies Using Date-Time Data Types"</a></p>
</li>
</ul>
</li>
</ul>
</div>
<!-- class="sect2" -->
<a id="CEGIGGDG"></a>
<div id="ASOAG608" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">5.7.3</span> Creating Partial Redaction Policies Using Fixed Character Shortcuts</h3>
<p>The <code dir="ltr">DBMS_REDACT.ADD_POLICY</code> <code dir="ltr">function_parameters</code> parameter enables you to use fixed character shortcuts.</p>
<p>This section contains:</p>
<ul>
<li>
<p><a href="#CEGDIGJD">Settings for Fixed Character Shortcuts</a></p>
</li>
<li>
<p><a href="#CEGDCEJI">Example of a Partial Redaction Policy Using a Fixed Character Shortcut</a></p>
</li>
</ul>
<a id="CEGDIGJD"></a>
<div id="ASOAG10590" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3"><span class="secnum">5.7.3.1</span> Settings for Fixed Character Shortcuts</h4>
<p><a href="#CACDEJFH">Table 5-2</a> describes<a id="sthref118"></a> <code dir="ltr">DBMS_REDACT.ADD_POLICY</code> <code dir="ltr">function_parameters</code> parameter shortcuts that you can use for commonly redacted Social Security numbers, postal codes, and credit cards that use either the <code dir="ltr">VARCHAR2</code> or <code dir="ltr">NUMBER</code> data types for their columns.</p>
<div id="ASOAG892" class="tblhruleformal">
<p class="titleintable"><a id="sthref119"></a><a id="CACDEJFH"></a>Table 5-2 Partial Fixed Character Redaction Shortcuts</p>
<table class="cellalignment2234" title="Partial Fixed Character Redaction Shortcuts" summary="Partial Fixed Data Redaction Aliases" dir="ltr">
<thead>
<tr class="cellalignment2228">
<th class="cellalignment2235" id="r1c1-t11">Shortcut</th>
<th class="cellalignment2235" id="r1c2-t11">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2228">
<td class="cellalignment2236" id="r2c1-t11" headers="r1c1-t11">
<p><code dir="ltr">DBMS_REDACT.REDACT_US_SSN_F5</code></p>
</td>
<td class="cellalignment2236" headers="r2c1-t11 r1c2-t11">
<p>Redacts the first 5 numbers of Social Security numbers when the column is a <code dir="ltr">VARCHAR2</code> data type. For example, the number <code dir="ltr">987-65-4320</code> becomes <code dir="ltr">XXX-XX-4320</code>.</p>
</td>
</tr>
<tr class="cellalignment2228">
<td class="cellalignment2236" id="r3c1-t11" headers="r1c1-t11">
<p><code dir="ltr">DBMS_REDACT.REDACT_US_SSN_L4</code></p>
</td>
<td class="cellalignment2236" headers="r3c1-t11 r1c2-t11">
<p>Redacts the last 4 numbers of Social Security numbers when the column is a <code dir="ltr">VARCHAR2</code> data type. For example, the number <code dir="ltr">987-65-4320</code> becomes <code dir="ltr">987-65-XXXX</code>.</p>
</td>
</tr>
<tr class="cellalignment2228">
<td class="cellalignment2236" id="r4c1-t11" headers="r1c1-t11">
<p><code dir="ltr">DBMS_REDACT.REDACT_US_SSN_ENTIRE</code></p>
</td>
<td class="cellalignment2236" headers="r4c1-t11 r1c2-t11">
<p>Redacts the entire Social Security number when the column is a <code dir="ltr">VARCHAR2</code> data type. For example, the number <code dir="ltr">987-65-4320</code> becomes <code dir="ltr">XXX-XX-XXXX</code>.</p>
</td>
</tr>
<tr class="cellalignment2228">
<td class="cellalignment2236" id="r5c1-t11" headers="r1c1-t11">
<p><code dir="ltr">DBMS_REDACT.REDACT_NUM_US_SSN_F5</code></p>
</td>
<td class="cellalignment2236" headers="r5c1-t11 r1c2-t11">
<p>Redacts the first 5 numbers of Social Security numbers when the column is a <code dir="ltr">NUMBER</code> data type. For example, the number <code dir="ltr">987654320</code> becomes <code dir="ltr">XXXXX4320</code>.</p>
</td>
</tr>
<tr class="cellalignment2228">
<td class="cellalignment2236" id="r6c1-t11" headers="r1c1-t11">
<p><code dir="ltr">DBMS_REDACT.REDACT_NUM_US_SSN_L4</code></p>
</td>
<td class="cellalignment2236" headers="r6c1-t11 r1c2-t11">
<p>Redacts the last 4 numbers of Social Security numbers when the column is a <code dir="ltr">NUMBER</code> data type. For example, the number <code dir="ltr">987654320</code> becomes <code dir="ltr">98765XXXX</code>.</p>
</td>
</tr>
<tr class="cellalignment2228">
<td class="cellalignment2236" id="r7c1-t11" headers="r1c1-t11">
<p><code dir="ltr">DBMS_REDACT.REDACT_NUM_US_SSN_ENTIRE</code></p>
</td>
<td class="cellalignment2236" headers="r7c1-t11 r1c2-t11">
<p>Redacts the entire Social Security number when the column is a <code dir="ltr">NUMBER</code> data type. For example, the number <code dir="ltr">987654320</code> becomes <code dir="ltr">XXXXXXXXX</code>.</p>
</td>
</tr>
<tr class="cellalignment2228">
<td class="cellalignment2236" id="r8c1-t11" headers="r1c1-t11">
<p><code dir="ltr">DBMS_REDACT.REDACT_ZIP_CODE</code></p>
</td>
<td class="cellalignment2236" headers="r8c1-t11 r1c2-t11">
<p>Redacts a 5-digit postal code when the column is a <code dir="ltr">VARCHAR2</code> data type. For example, <code dir="ltr">95476</code> becomes <code dir="ltr">XXXXX</code>.</p>
</td>
</tr>
<tr class="cellalignment2228">
<td class="cellalignment2236" id="r9c1-t11" headers="r1c1-t11">
<p><code dir="ltr">DBMS_REDACT.REDACT_NUM_ZIP_CODE</code></p>
</td>
<td class="cellalignment2236" headers="r9c1-t11 r1c2-t11">
<p>Redacts a 5-digit postal code when the column is a <code dir="ltr">NUMBER</code> data type. For example, <code dir="ltr">95476</code> becomes <code dir="ltr">XXXXX</code>.</p>
</td>
</tr>
<tr class="cellalignment2228">
<td class="cellalignment2236" id="r10c1-t11" headers="r1c1-t11">
<p><code dir="ltr">DBMS_REDACT.REDACT_DATE_MILLENNIUM</code></p>
</td>
<td class="cellalignment2236" headers="r10c1-t11 r1c2-t11">
<p>Redacts dates that are in the <code dir="ltr">DD-MON-YY</code> format to <code dir="ltr">01-JAN-00</code> (January 1, 2000).</p>
</td>
</tr>
<tr class="cellalignment2228">
<td class="cellalignment2236" id="r11c1-t11" headers="r1c1-t11">
<p><code dir="ltr">DBMS_REDACT.REDACT_DATE_EPOCH</code></p>
</td>
<td class="cellalignment2236" headers="r11c1-t11 r1c2-t11">
<p>Redacts all dates to <code dir="ltr">01-JAN-70</code>.</p>
</td>
</tr>
<tr class="cellalignment2228">
<td class="cellalignment2236" id="r12c1-t11" headers="r1c1-t11">
<p><code dir="ltr">DBMS_REDACT.REDACT_CCN16_F12</code></p>
</td>
<td class="cellalignment2236" headers="r12c1-t11 r1c2-t11">
<p>Redacts a 16-digit credit card number, leaving the last 4 digits displayed. For example, <code dir="ltr">5105 1051 0510 5100</code> becomes <code dir="ltr">****-****-****-5100</code>.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblhruleformal" -->
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#CACCFCEB">"General Syntax of the DBMS_REDACT.ADD_POLICY Procedure"</a> for information about other <code dir="ltr">DBMS_REDACT.ADD_POLICY</code> parameters</div>
</div>
<!-- class="sect3" -->
<a id="CEGDCEJI"></a>
<div id="ASOAG10640" class="sect3">
<h4 class="sect3"><span class="secnum">5.7.3.2</span> Example of a Partial Redaction Policy Using a Fixed Character Shortcut</h4>
<p><a href="#CACJICBG">Example 5-7</a> <a id="sthref120"></a>shows how Social Security numbers in a <code dir="ltr">VARCHAR2</code> data type column and can be redacted using the <code dir="ltr">REDACT_US_SSN_F5</code> shortcut.</p>
<div id="ASOAG893" class="example">
<p class="titleinexample"><a id="CACJICBG"></a>Example 5-7 Partially Redacted Character Values</p>
<pre dir="ltr">
BEGIN
 DBMS_REDACT.ADD_POLICY(
   object_schema       =&gt; 'mavis', 
   object_name         =&gt; 'cust_info', 
   column_name         =&gt; 'ssn',
   policy_name         =&gt; 'redact_cust_ssns3', 
   function_type       =&gt; DBMS_REDACT.PARTIAL,
   function_parameters =&gt; DBMS_REDACT.REDACT_US_SSN_F5,
   expression          =&gt; '1=1',
   policy_description  =&gt; 'Partially redacts 1st 5 digits in SS numbers',
   column_description  =&gt; 'ssn contains Social Security numbers');
END;
/
</pre>
<p>Query and redacted result:</p>
<pre dir="ltr">
SELECT ssn FROM mavis.cust_info;

SSN
-------
XXX-XX-4320
XXX-XX-4323
XXX-XX-4325
XXX-XX-4329
</pre></div>
<!-- class="example" --></div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="CEGEFEGJ"></a>
<div id="ASOAG816" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">5.7.4</span> Creating Partial Redaction Policies Using Character Data Types</h3>
<p>The <code dir="ltr">DBMS_REDACT.ADD_POLICY</code> <code dir="ltr">function_parameters</code> parameter enables you to redact character data types.</p>
<p>This section contains:</p>
<ul>
<li>
<p><a href="#CEGHDJEC">Settings for Character Data Types</a></p>
</li>
<li>
<p><a href="#CEGGJFJI">Example of a Partial Redaction Policy Using Character a Data Type</a></p>
</li>
</ul>
<a id="CEGHDJEC"></a>
<div id="ASOAG10641" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3"><span class="secnum">5.7.4.1</span> Settings for Character Data Types</h4>
<p>When you set the <code dir="ltr">DBMS_REDACT.ADD_POLICY</code> <code dir="ltr">function_parameters</code> parameter to define <a id="sthref121"></a>partial redaction of character data types, enter values for the following settings in the order shown. Separate each value with a comma.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
Be aware that you must use a fixed width character set for the partial redaction. In other words, each character redacted must be replaced by another of equal byte length. If you want to use a variable-length character set (for example, UTF-8), then you must use a regular expression-based redaction. See <a href="#CEGJEGCB">"Syntax for Creating a Regular Expression-Based Redaction Policy"</a> for more information.</div>
<p>The settings are as follows:</p>
<ol>
<li>
<p><span class="bold">Input format:</span> Defines how the data is currently formatted. Enter <code dir="ltr">V</code> for each character that potentially can be redacted, such as all of the digits in a credit card number. Enter <code dir="ltr">F</code> for each character that you want to format using a formatting character, such as hyphens or blank spaces in the credit card number. Ensure that each character has a corresponding <code dir="ltr">V</code> or <code dir="ltr">F</code> value. (The input format values are not case-sensitive.)</p>
</li>
<li>
<p><span class="bold">Output format:</span> Defines how the displayed data should be formatted. Enter <code dir="ltr">V</code> for each character to be potentially redacted. Replace each <code dir="ltr">F</code> character in the input format with the character that you want to use for the displayed output, such as a hyphen. (The output format values are not case-sensitive.)</p>
</li>
<li>
<p><span class="bold">Mask character:</span> Specifies the character to be used for the redaction. Enter a single character to use for the redaction, such as an asterisk (*).</p>
</li>
<li>
<p><span class="bold">Starting digit position:</span> Specifies the starting <code dir="ltr">V</code> digit position for the redaction.</p>
</li>
<li>
<p><span class="bold">Ending digit position:</span> Specifies the ending <code dir="ltr">V</code> digit position for the redaction. Do not include the <code dir="ltr">F</code> positions when you decide on the ending position value.</p>
</li>
</ol>
<p>For example, the following setting redacts the first 12 <code dir="ltr">V</code> digits of the credit card number <code dir="ltr">5105 1051 0510 5100</code>, and replaces the <code dir="ltr">F</code> positions (which are blank spaces) with hyphens to format it in a style normally used for credit card numbers, resulting in <code dir="ltr">****-****-****-4320</code>.</p>
<pre dir="ltr">
function_parameters  =&gt; 'VVVVFVVVVFVVVVFVVVV,VVVV-VVVV-VVVV-VVVV,*,1,12',
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#CACCFCEB">"General Syntax of the DBMS_REDACT.ADD_POLICY Procedure"</a> for information about other <code dir="ltr">DBMS_REDACT.ADD_POLICY</code> parameters</div>
</div>
<!-- class="sect3" -->
<a id="CEGGJFJI"></a>
<div id="ASOAG10593" class="sect3">
<h4 class="sect3"><span class="secnum">5.7.4.2</span> Example of a Partial Redaction Policy Using Character a Data Type</h4>
<p><a href="#CACIIDEC">Example 5-8</a> shows <a id="sthref122"></a>how to redact Social Security numbers that are in a <code dir="ltr">VARCHAR2</code> data type column and to preserve the character hyphens in the Social Security number.</p>
<div id="ASOAG599" class="example">
<p class="titleinexample"><a id="CACIIDEC"></a>Example 5-8 Partially Redacted Data Redaction Character Values</p>
<pre dir="ltr">
BEGIN
 DBMS_REDACT.ADD_POLICY(
   object_schema       =&gt; 'mavis', 
   object_name         =&gt; 'cust_info', 
   column_name         =&gt; 'ssn',
   policy_name         =&gt; 'redact_cust_ssns2', 
   function_type       =&gt; DBMS_REDACT.PARTIAL,
   function_parameters =&gt; 'VVVFVVFVVVV,VVV-VV-VVVV,*,1,5',
   expression          =&gt; '1=1',
   policy_description  =&gt; 'Partially redacts Social Security numbers',
   column_description  =&gt; 'ssn contains character Social Security numbers');
END;
/
</pre>
<p>Query and redacted result:</p>
<pre dir="ltr">
SELECT ssn FROM mavis.cust_info;

SSN
-----------
***-**-4320
***-**-4323
***-**-4325
***-**-4329
</pre></div>
<!-- class="example" --></div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="CEGCABIC"></a>
<div id="ASOAG817" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">5.7.5</span> Creating Partial Redaction Policies Using Number Data Types</h3>
<p>The <code dir="ltr">DBMS_REDACT.ADD_POLICY</code> <code dir="ltr">function_parameters</code> parameter enables you to redact number data types.</p>
<p>This section contains:</p>
<ul>
<li>
<p><a href="#CEGHIIHC">Settings for Number Data Types</a></p>
</li>
<li>
<p><a href="#CEGJCIDG">Example of a Partial Redaction Policy Using a Number Data Type</a></p>
</li>
</ul>
<a id="CEGHIIHC"></a>
<div id="ASOAG10594" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3"><span class="secnum">5.7.5.1</span> Settings for Number Data Types</h4>
<p>For <a id="sthref123"></a>partial redaction of number data types, enter values for the following settings for the <code dir="ltr">function_parameters</code> parameter of the <code dir="ltr">DBMS_REDACT.ADD_POLICY</code> procedure, in the order shown.</p>
<ol>
<li>
<p><span class="bold">Mask character:</span> Specifies the character to display. Enter a number from 0 to 9.</p>
</li>
<li>
<p><span class="bold">Starting digit position:</span> Specifies the starting digit position for the redaction, such as <code dir="ltr">1</code> for the first digit.</p>
</li>
<li>
<p><span class="bold">Ending digit position:</span> Specifies the ending digit position for the redaction.</p>
</li>
</ol>
<p>For example, the following setting redacts the first five digits of the Social Security number <code dir="ltr">987654321</code>, resulting in <code dir="ltr">999994321</code>.</p>
<pre dir="ltr">
function_parameters  =&gt; '9,1,5',
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#CACCFCEB">"General Syntax of the DBMS_REDACT.ADD_POLICY Procedure"</a> for information about other <code dir="ltr">DBMS_REDACT.ADD_POLICY</code> parameters</div>
</div>
<!-- class="sect3" -->
<a id="CEGJCIDG"></a>
<div id="ASOAG10595" class="sect3">
<h4 class="sect3"><span class="secnum">5.7.5.2</span> Example of a Partial Redaction Policy Using a Number Data Type</h4>
<p><a href="#CACCHAIF">Example 5-9</a> shows <a id="sthref124"></a>how to partially redact a set of Social Security numbers in the <code dir="ltr">mavis.cust_info</code> table, for any application user who logs in. (Hence, the <code dir="ltr">expression</code> parameter evaluates to <code dir="ltr">TRUE</code>.) In this scenario, the Social Security numbers are in a column of the data type <code dir="ltr">NUMBER</code>. In other words, the <code dir="ltr">ssn</code> column contains numbers only, not other characters such as hyphens or blank spaces.</p>
<div id="ASOAG494" class="example">
<p class="titleinexample"><a id="CACCHAIF"></a>Example 5-9 Partially Redacted Data Redaction Numeric Values</p>
<pre dir="ltr">
BEGIN
 DBMS_REDACT.ADD_POLICY(
   object_schema       =&gt; 'mavis', 
   object_name         =&gt; 'cust_info', 
   column_name         =&gt; 'ssn',
   policy_name         =&gt; 'redact_cust_ssns1', 
   function_type       =&gt; DBMS_REDACT.PARTIAL,
   function_parameters =&gt; '7,1,5',
   expression          =&gt; '1=1',
   policy_description  =&gt; 'Partially redacts Social Security numbers',
   column_description  =&gt; 'ssn contains numeric Social Security numbers');
END;
/
</pre>
<p>Query and redacted result:</p>
<pre dir="ltr">
SELECT ssn FROM mavis.cust_info;

SSN
---------
777774320
777774323
777774325
777774329
</pre></div>
<!-- class="example" --></div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="CEGJIFHD"></a>
<div id="ASOAG818" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">5.7.6</span> Creating Partial Redaction Policies Using Date-Time Data Types</h3>
<p>The <code dir="ltr">DBMS_REDACT.ADD_POLICY</code> <code dir="ltr">function_parameters</code> parameter enables you to redact date-time data types.</p>
<p>This section contains:</p>
<ul>
<li>
<p><a href="#CEGIEBGA">Settings for Date-Time Data Types</a></p>
</li>
<li>
<p><a href="#CEGJHGGJ">Example of a Partial Redaction Policy Using Date-Time Data Type</a></p>
</li>
</ul>
<a id="CEGIEBGA"></a>
<div id="ASOAG10596" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3"><span class="secnum">5.7.6.1</span> Settings for Date-Time Data Types</h4>
<p>For <a id="sthref125"></a>partial redaction of date-time data types, enter values for the following <code dir="ltr">DBMS_REDACT.ADD_POLICY</code> <code dir="ltr">function_parameters</code> parameter settings, in the order shown:</p>
<ol>
<li>
<p>m: Redacts the month. To redact with a month name, append <code dir="ltr">1</code>&ndash;<code dir="ltr">12</code> to lowercase <code dir="ltr">m</code>. For example, <code dir="ltr">m5</code> displays as <code dir="ltr">MAY</code>. To omit redaction, enter an uppercase <code dir="ltr">M</code>.</p>
</li>
<li>
<p>d: Redacts the day of the month. To redact with a day of the month, append <code dir="ltr">1</code>&ndash;<code dir="ltr">31</code> to a lowercase <code dir="ltr">d</code>. For example, <code dir="ltr">d7</code> displays as <code dir="ltr">07</code>. If you enter a higher number than the days of the month (for example, <code dir="ltr">31</code> for the month of February), then the last day of the month is displayed (for example, <code dir="ltr">28</code>). To omit redaction, enter an uppercase <code dir="ltr">D</code>.</p>
</li>
<li>
<p>y: Redacts the year. To redact with a year, append <code dir="ltr">1</code>&ndash;<code dir="ltr">9999</code> to a lowercase <code dir="ltr">y</code>. For example, <code dir="ltr">y1984</code> displays as <code dir="ltr">84</code>. To omit redaction, enter an uppercase <code dir="ltr">Y</code>.</p>
</li>
<li>
<p>h: Redacts the hour. To redact with an hour, append <code dir="ltr">0</code>&ndash;<code dir="ltr">23</code> to a lowercase <code dir="ltr">h</code>. For example, <code dir="ltr">h20</code> displays as <code dir="ltr">20</code>. To omit redaction, enter an uppercase <code dir="ltr">H</code>.</p>
</li>
<li>
<p>m: Redacts the minute. To redact with a minute, append <code dir="ltr">0</code>&ndash;<code dir="ltr">59</code> to a lowercase <code dir="ltr">m</code>. For example, <code dir="ltr">m30</code> displays as <code dir="ltr">30</code>. To omit redaction, enter an uppercase <code dir="ltr">M</code>.</p>
</li>
<li>
<p>s: Redacts the second. To redact with a second, append <code dir="ltr">0</code>&ndash;<code dir="ltr">59</code> to a lowercase <code dir="ltr">s</code>. For example, <code dir="ltr">s45</code> displays as <code dir="ltr">45</code>. To omit redaction, enter an uppercase <code dir="ltr">S</code>.</p>
</li>
</ol>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#CACCFCEB">"General Syntax of the DBMS_REDACT.ADD_POLICY Procedure"</a> for information about other <code dir="ltr">DBMS_REDACT.ADD_POLICY</code> parameters</div>
</div>
<!-- class="sect3" -->
<a id="CEGJHGGJ"></a>
<div id="ASOAG10597" class="sect3">
<h4 class="sect3"><span class="secnum">5.7.6.2</span> Example of a Partial Redaction Policy Using Date-Time Data Type</h4>
<p><a href="#CEGIIHJE">Example 5-10</a> <a id="sthref126"></a>shows how to partially redact a date. This example redacts the birth year of customers; replacing it with <code dir="ltr">13</code>, but retaining the remaining values.</p>
<div id="ASOAG10598" class="example">
<p class="titleinexample"><a id="CEGIIHJE"></a>Example 5-10 Partially Redacted Data Redaction Using Date-Time Values</p>
<pre dir="ltr">
BEGIN
 DBMS_REDACT.ADD_POLICY(
   object_schema       =&gt; 'mavis', 
   object_name         =&gt; 'cust_info', 
   column_name         =&gt; 'birth_date',
   policy_name         =&gt; 'redact_cust_bdate', 
   function_type       =&gt; DBMS_REDACT.PARTIAL,
   function_parameters =&gt; 'mdy2013HMS',
   expression          =&gt; '1=1',
   policy_description  =&gt; 'Replaces birth year with 2013',
   column_description  =&gt; 'birth_date contains customer's birthdate');
END;
/
</pre></div>
<!-- class="example" -->
<p>Query and redacted result:</p>
<pre dir="ltr">
SELECT birth_date FROM mavis.cust_info;

BIRTH_DATE
07-DEC-13 09.45.40.000000 AM
12-OCT-13 04.23.29.000000 AM
</pre></div>
<!-- class="sect3" --></div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="CEGEHAIF"></a>
<div id="ASOAG10599" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1"><span class="secnum">5.8</span> Creating a Regular Expression-Based Redaction Policy</h2>
<p>This section contains:</p>
<ul>
<li>
<p><a href="#CEGGDHHI">About Creating Regular Expression-Based Redaction Policies</a></p>
</li>
<li>
<p><a href="#CEGJEGCB">Syntax for Creating a Regular Expression-Based Redaction Policy</a></p>
</li>
<li>
<p><a href="#CEGCCDAA">Creating Regular Expression-Based Redaction Policies Using Shortcuts</a></p>
</li>
<li>
<p><a href="#CEGHIEBI">Creating Custom Regular Expression Redaction Policies</a></p>
</li>
</ul>
<a id="CEGGDHHI"></a>
<div id="ASOAG10600" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">5.8.1</span> About Creating Regular Expression-Based Redaction Policies</h3>
<p>Regular expression<a id="sthref127"></a>-based redaction enables you to search for patterns of data to redact. For example, you can use regular expressions to redact email addresses, which can have varying character lengths. It is designed for use with character data only. You can use shortcuts for the search and replace operation, or you can create custom patterns.</p>
<p>You cannot use regular expressions to redact a subset of the values in a column. The <code dir="ltr">REGEXP_PATTERN</code> (regular expression pattern) must match <span class="italic">all</span> of the values in order for the <code dir="ltr">REGEXP_REPLACE_STRING</code> setting to take effect, and the <code dir="ltr">REGEXP_REPLACE_STRING</code> must change the value.</p>
<p>For rows where the <code dir="ltr">REGEXP_PATTERN</code> fails to match, Data Redaction performs <code dir="ltr">DBMS_REDACT.FULL</code> redaction. This mitigates the risk of a mistake in the <code dir="ltr">REGEXP_PATTERN</code> which causes the regular expression to fail to match all of the values in the column, from showing the actual data for those rows which it failed to match.</p>
<p>In addition, if no change to the value occurs as a result of the <code dir="ltr">REGEXP_REPLACE_STRING</code> setting during regular expression replacement operation, Data Redaction performs <code dir="ltr">DBMS_REDACT.FULL</code> redaction.</p>
</div>
<!-- class="sect2" -->
<a id="CEGJEGCB"></a>
<div id="ASOAG10601" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">5.8.2</span> Syntax for Creating a Regular Expression-Based Redaction Policy</h3>
<p>The <a id="sthref128"></a><code dir="ltr">DBMS_REDACT.ADD_POLICY</code> fields for creating a regular expression-based data redaction policy are as follows:</p>
<pre dir="ltr">
DBMS_REDACT.ADD_POLICY (
<span class="italic">   </span>object_schema           IN VARCHAR2 := NULL, 
   object_name             IN VARCHAR2,
   column_name             IN VARCHAR2 := NULL,
   policy_name             IN VARCHAR2,
   function_type           IN BINARY_INTEGER := NULL,
   expression              IN VARCHAR2,
   enable                  IN BOOLEAN := TRUE,
   regexp_pattern          IN VARCHAR2 := NULL,
   regexp_replace_string   IN VARCHAR2 := NULL,
   regexp_position         IN BINARY_INTEGER := 1,
   regexp_occurrence       IN BINARY_INTEGER := 0,
   regexp_match_parameter  IN VARCHAR2 := NULL);
</pre>
<p>In this specification:</p>
<ul>
<li>
<p><code dir="ltr">object_schema</code>, <code dir="ltr">object_name</code>, <code dir="ltr">column_name</code>, <code dir="ltr">policy_name</code>, <code dir="ltr">expression</code>, <code dir="ltr">enable</code>: See <a href="#CACCFCEB">"General Syntax of the DBMS_REDACT.ADD_POLICY Procedure"</a>.</p>
</li>
<li>
<p><code dir="ltr">function_type</code>: Specifies the function used to set the type of redaction. Enter <code dir="ltr">DBMS_REDACT.REGEXP</code>.</p>
<p>Note the following:</p>
<ul>
<li>
<p>When you set the <code dir="ltr">function_type</code> parameter to <code dir="ltr">DBMS_REDACT.REGEXP</code>, omit the <code dir="ltr">function_parameters</code> parameter.</p>
</li>
<li>
<p>Specify the regular expressions&mdash;<code dir="ltr">regexp_pattern</code>, <code dir="ltr">regexp_replace</code>, <code dir="ltr">regexp_position</code>, <code dir="ltr">regexp_occurrence</code>, and <code dir="ltr">regexp_match_parameter</code>&mdash;in much the same way that you specify the <code dir="ltr">pattern</code>, <code dir="ltr">replace</code>, <code dir="ltr">position</code>, <code dir="ltr">occurrence</code>, and <code dir="ltr">match_parameter</code> arguments to the <code dir="ltr">REGEXP_REPLACE</code> SQL function. See <a class="olink SQLRF06302" href="../../server.112/e41084/functions149.htm#SQLRF06302"><span class="italic">Oracle Database SQL Language Reference</span></a> for information about the <code dir="ltr">REGEXP_REPLACE</code> SQL function.</p>
</li>
</ul>
</li>
<li>
<p><code dir="ltr">regexp_pattern</code>: Describes the search pattern for data that must be matched. If it finds a match, then Oracle Database replaces the data as specified by the <code dir="ltr">regexp_replace_string</code> setting. See the following sections for more information:</p>
<ul>
<li>
<p><a href="#CEGCCDAA">"Creating Regular Expression-Based Redaction Policies Using Shortcuts"</a></p>
</li>
<li>
<p><a href="#CEGHIEBI">"Creating Custom Regular Expression Redaction Policies"</a></p>
</li>
</ul>
</li>
<li>
<p><code dir="ltr">regexp_replace_string</code>: Specifies how you want to replace the data to be redacted. See the following sections for more information:</p>
<ul>
<li>
<p><a href="#CEGCCDAA">"Creating Regular Expression-Based Redaction Policies Using Shortcuts"</a></p>
</li>
<li>
<p><a href="#CEGHIEBI">"Creating Custom Regular Expression Redaction Policies"</a></p>
</li>
</ul>
</li>
<li>
<p><code dir="ltr">regexp_position</code>: Specifies the starting position for the string search. The value that you enter must be a positive integer indicating the character of the <code dir="ltr">column_name</code> data where Oracle Database should begin the search. The default is <code dir="ltr">1</code> or the <code dir="ltr">RE_BEGINNING</code> shortcut, meaning that Oracle Database begins the search at the first character of the <code dir="ltr">column_name</code> data.</p>
</li>
<li>
<p><code dir="ltr">regexp_occurrence</code>: Specifies how to perform the search and replace operation. The value that you enter must be a nonnegative integer indicating the occurrence of the replace operation:</p>
<ul>
<li>
<p>If you specify <code dir="ltr">0</code> or the <code dir="ltr">RE_ALL</code> shortcut, then Oracle Database replaces all of the occurrences of the match.</p>
</li>
<li>
<p>If you specify the <code dir="ltr">RE_FIRST</code> shortcut, then Oracle Database replaces the first occurrence of the match.</p>
</li>
<li>
<p>If you specify a positive integer <code dir="ltr"><span class="codeinlineitalic">n</span></code>, then Oracle Database replaces the <code dir="ltr"><span class="codeinlineitalic">n</span></code>th occurrence of the first match.</p>
</li>
</ul>
<p>If the occurrence is greater than 1, then the database searches for the second occurrence beginning with the first character following the first occurrence of pattern, and so forth.</p>
</li>
<li>
<p><code dir="ltr">regexp_match_parameter</code>: Specifies a text literal that lets you change the default matching behavior of the function. The behavior of this parameter is the same for this function as for the <code dir="ltr">REGEXP_REPLACE</code> SQL function. See <a class="olink SQLRF06302" href="../../server.112/e41084/functions149.htm#SQLRF06302"><span class="italic">Oracle Database SQL Language Reference</span></a> for detailed information.</p>
<p>To filter the search so that it is not case sensitive, specify the <code dir="ltr">RE_MATCH_CASE_INSENSITIVE</code> shortcut.</p>
</li>
</ul>
</div>
<!-- class="sect2" -->
<a id="CEGCCDAA"></a>
<div id="ASOAG10602" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">5.8.3</span> Creating Regular Expression-Based Redaction Policies Using Shortcuts</h3>
<p>You can <a id="sthref129"></a>use shortcuts for both the <code dir="ltr">regexp_pattern</code> and <code dir="ltr">regexp_replace_string</code> parameters in the <code dir="ltr">DBMS_REDACT.ADD_POLICY</code> procedure.</p>
<p>This section contains:</p>
<ul>
<li>
<p><a href="#CEGHJBGA">Regular Expression Shortcuts</a></p>
</li>
<li>
<p><a href="#CEGCICBF">Example of a Regular Expression Redaction Policy Using Shortcuts</a></p>
</li>
</ul>
<a id="CEGHJBGA"></a>
<div id="ASOAG10603" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3"><span class="secnum">5.8.3.1</span> Regular Expression Shortcuts</h4>
<p><a href="#CEGIICIG">Table 5-3</a> describes <a id="sthref130"></a>the shortcuts that you can use with the <code dir="ltr">regexp_pattern</code> parameter in the <code dir="ltr">DBMS_REDACT.ADD_POLICY</code> procedure.</p>
<div id="ASOAG10604" class="tblhruleformal">
<p class="titleintable"><a id="sthref131"></a><a id="CEGIICIG"></a>Table 5-3 Shortcuts for the regexp_pattern Parameter</p>
<table class="cellalignment2234" title="Shortcuts for the regexp_pattern Parameter" summary="Regular Expression regexp_pattern Shortcuts" dir="ltr">
<thead>
<tr class="cellalignment2228">
<th class="cellalignment2235" id="r1c1-t17">Shortcut</th>
<th class="cellalignment2235" id="r1c2-t17">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2228">
<td class="cellalignment2236" id="r2c1-t17" headers="r1c1-t17">
<p><code dir="ltr">DBMS_REDACT.RE_PATTERN_ANY_DIGIT</code></p>
</td>
<td class="cellalignment2236" headers="r2c1-t17 r1c2-t17">
<p>Matches any digit. The <code dir="ltr">DBMS_REDACT.RE_PATTERN_ANY_DIGIT</code> is commonly used with the following values of the <code dir="ltr">regexp_replace_string</code> parameter:</p>
<pre dir="ltr">
regexp_replace_string =&gt; DBMS_REDACT.RE_REDACT_WITH_SINGLE_X, 
</pre>
<p>This setting replaces any matched digit with the <code dir="ltr">X</code> character.</p>
<p>The following setting replaces any matched digit with the <code dir="ltr">1</code> character.</p>
<pre dir="ltr">
regexp_replace_string =&gt; DBMS_REDACT.RE_REDACT_WITH_SINGLE_1, 
</pre></td>
</tr>
<tr class="cellalignment2228">
<td class="cellalignment2236" id="r3c1-t17" headers="r1c1-t17">
<p><code dir="ltr">DBMS_REDACT.RE_PATTERN_CC_L6_T4</code></p>
</td>
<td class="cellalignment2236" headers="r3c1-t17 r1c2-t17">
<p>Searches for the middle digits of any credit card that has 6 leading digits and 4 trailing digits with the characters specified by the <code dir="ltr">regexp_replace_string</code> parameter.</p>
<p>The appropriate <code dir="ltr">regexp_replace_string</code> setting to use with this shortcut is <code dir="ltr">DBMS_REDACT.RE_REDACT_CC_MIDDLE_DIGITS</code>, which finds any credit card that could have 6 leading and 4 trailing digits left as<a href="asogls.htm#BABGAFIB"><span class="xrefglossterm">actual data</span></a>. It then redacts the middle digits.</p>
</td>
</tr>
<tr class="cellalignment2228">
<td class="cellalignment2236" id="r4c1-t17" headers="r1c1-t17">
<p><code dir="ltr">DBMS_REDACT.RE_PATTERN_US_PHONE</code></p>
</td>
<td class="cellalignment2236" headers="r4c1-t17 r1c2-t17">
<p>Searches for any U.S. telephone number with the characters specified by the <code dir="ltr">regexp_replace_string</code> parameter.</p>
<p>The appropriate <code dir="ltr">regexp_replace_string</code> setting to use with this shortcut is <code dir="ltr">DBMS_REDACT.RE_REDACT_US_PHONE_L7</code>, which finds United States phone numbers and then redacts the last 7 digits.</p>
</td>
</tr>
<tr class="cellalignment2228">
<td class="cellalignment2236" id="r5c1-t17" headers="r1c1-t17">
<p><code dir="ltr">DBMS_REDACT.RE_PATTERN_EMAIL_ADDRESS</code></p>
</td>
<td class="cellalignment2236" headers="r5c1-t17 r1c2-t17">
<p>Searches for any email address with the characters specified by the <code dir="ltr">regexp_replace_string</code> parameter.</p>
<p>The appropriate <code dir="ltr">regexp_replace_string</code> settings that you can use with this shortcut are as follows:</p>
<p><code dir="ltr">RE_REDACT_EMAIL_NAME</code>, which finds any email address and redacts the email user name</p>
<p><code dir="ltr">RE_REDACT_EMAIL_DOMAIN</code>, which finds any email address and redacts the email domain</p>
<p><code dir="ltr">RE_REDACT_EMAIL_ENTIRE</code>, which finds any email address and redacts the entire email address</p>
</td>
</tr>
<tr class="cellalignment2228">
<td class="cellalignment2236" id="r6c1-t17" headers="r1c1-t17">
<p><code dir="ltr">DBMS_REDACT.RE_PATTERN_IP_ADDRESS</code></p>
</td>
<td class="cellalignment2236" headers="r6c1-t17 r1c2-t17">
<p>Searches for an IP address with the characters specified by the <code dir="ltr">regexp_replace_string</code> parameter.</p>
<p>The appropriate <code dir="ltr">regexp_replace_string</code> setting to use with this shortcut is <code dir="ltr">DBMS_REDACT.RE_REDACT_IP_L3</code>, which replaces the last section of the dotted decimal string representation of an IP address with the characters <code dir="ltr">999</code> to indicate that it was redacted.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblhruleformal" -->
<p><a href="#CEGCIBHA">Table 5-4</a> describes shortcuts that you can use with the <code dir="ltr">regexp_replace_string</code> parameter in the <code dir="ltr">DBMS_REDACT.ADD_POLICY</code> procedure.</p>
<div id="ASOAG10605" class="tblhruleformal">
<p class="titleintable"><a id="sthref132"></a><a id="CEGCIBHA"></a>Table 5-4 Shortcuts for the regexp_replace_string Parameter</p>
<table class="cellalignment2234" title="Shortcuts for the regexp_replace_string Parameter " summary="Regular Expression Shortcuts" dir="ltr">
<thead>
<tr class="cellalignment2228">
<th class="cellalignment2235" id="r1c1-t18">Shortcut</th>
<th class="cellalignment2235" id="r1c2-t18">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2228">
<td class="cellalignment2236" id="r2c1-t18" headers="r1c1-t18">
<p><code dir="ltr">DBMS_REDACT.RE_REDACT_WITH_SINGLE_X</code></p>
</td>
<td class="cellalignment2236" headers="r2c1-t18 r1c2-t18">
<p>Replaces the data with a single <code dir="ltr">X</code> character for each of the <a href="asogls.htm#BABGAFIB"><span class="xrefglossterm">actual data</span></a> characters. For example, the credit card number <code dir="ltr">5105 1051 0510 5100</code> could be replaced with <code dir="ltr">XXXX XXXX XXXX XXXX</code>.</p>
</td>
</tr>
<tr class="cellalignment2228">
<td class="cellalignment2236" id="r3c1-t18" headers="r1c1-t18">
<p><code dir="ltr">DBMS_REDACT.RE_REDACT_WITH_SINGLE_1</code></p>
</td>
<td class="cellalignment2236" headers="r3c1-t18 r1c2-t18">
<p>Replaces the data with a single <code dir="ltr">1</code> digit for each of the <a href="asogls.htm#BABGAFIB"><span class="xrefglossterm">actual data</span></a> digits. For example, the credit card number <code dir="ltr">5105 1051 0510 5100</code> could be replaced with <code dir="ltr">1111 1111 1111 1111</code>.</p>
</td>
</tr>
<tr class="cellalignment2228">
<td class="cellalignment2236" id="r4c1-t18" headers="r1c1-t18">
<p><code dir="ltr">DBMS_REDACT.RE_REDACT_CC_MIDDLE_DIGITS</code></p>
</td>
<td class="cellalignment2236" headers="r4c1-t18 r1c2-t18">
<p>Redacts the middle digits in credit card numbers, as specified by setting the <code dir="ltr">regexp_pattern</code> parameter with the <code dir="ltr">RE_PATTERN_CC_L6_T4</code> shortcut. The redaction replaces each redacted character with an <code dir="ltr">X</code>. For example, the credit card number <code dir="ltr">5105 1051 0510 5100</code> could be replaced with <code dir="ltr">5105 10XX XXXX 5100</code>.</p>
</td>
</tr>
<tr class="cellalignment2228">
<td class="cellalignment2236" id="r5c1-t18" headers="r1c1-t18">
<p><code dir="ltr">DBMS_REDACT.RE_REDACT_PHONE_L7</code></p>
</td>
<td class="cellalignment2236" headers="r5c1-t18 r1c2-t18">
<p>Redacts the last 7 digits of U.S. telephone numbers, as specified by setting the <code dir="ltr">regexp_pattern</code> parameter with the <code dir="ltr">RE_PATTERN_US_PHONE</code> shortcut. The redaction replaces each redacted character with an <code dir="ltr">X</code>. This setting only applies to hyphenated phone numbers, not phone numbers with spaces. For example, the telephone number <code dir="ltr">415-555-0100</code> could be replaced with <code dir="ltr">415-XXX-XXXX</code>.</p>
</td>
</tr>
<tr class="cellalignment2228">
<td class="cellalignment2236" id="r6c1-t18" headers="r1c1-t18">
<p><code dir="ltr">DBMS_REDACT.RE_REDACT_EMAIL_NAME</code></p>
</td>
<td class="cellalignment2236" headers="r6c1-t18 r1c2-t18">
<p>Redacts the email name as specified by setting the <code dir="ltr">regexp_pattern</code> parameter with the <code dir="ltr">RE_PATTERN_EMAIL_ADDRESS</code> shortcut. The redaction replaces the email user name with four <code dir="ltr">x</code> characters. For example, the email address <code dir="ltr">psmith@example.com</code> could be replaced with <code dir="ltr">xxxx@example.com</code>.</p>
</td>
</tr>
<tr class="cellalignment2228">
<td class="cellalignment2236" id="r7c1-t18" headers="r1c1-t18">
<p><code dir="ltr">DBMS_REDACT.RE_REDACT_EMAIL_DOMAIN</code></p>
</td>
<td class="cellalignment2236" headers="r7c1-t18 r1c2-t18">
<p>Redacts the email domain name as specified by setting the <code dir="ltr">regexp_pattern</code> parameter with the <code dir="ltr">RE_PATTERN_EMAIL_ADDRESS</code> shortcut. The redaction replaces the domain with five <code dir="ltr">x</code> characters. For example, the email address <code dir="ltr">psmith@example.com</code> could be replaced with <code dir="ltr">psmith@xxxxx.com</code>.</p>
</td>
</tr>
<tr class="cellalignment2228">
<td class="cellalignment2236" id="r8c1-t18" headers="r1c1-t18">
<p><code dir="ltr">DBMS_REDACT.RE_REDACT_IP_L3</code></p>
</td>
<td class="cellalignment2236" headers="r8c1-t18 r1c2-t18">
<p>Redacts the last three digits of the IP address as specified by setting the <code dir="ltr">regexp_pattern</code> parameter with the <code dir="ltr">RE_PATTERN_IP_ADDRESS</code> shortcut. For example, the IP address <code dir="ltr">192.0.2.254</code> could be replaced with <code dir="ltr">192.0.2.999</code>, which is an invalid IP address.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblhruleformal" --></div>
<!-- class="sect3" -->
<a id="CEGCICBF"></a>
<div id="ASOAG10606" class="sect3">
<h4 class="sect3"><span class="secnum">5.8.3.2</span> Example of a Regular Expression Redaction Policy Using Shortcuts</h4>
<p><a href="#CACFBCEF">Example 5-11</a> shows<a id="sthref133"></a> how to use regular expression shortcuts to redact credit card numbers.</p>
<div id="ASOAG894" class="example">
<p class="titleinexample"><a id="CACFBCEF"></a>Example 5-11 Regular Expression Data Redaction Character Values</p>
<pre dir="ltr">
BEGIN
 DBMS_REDACT.ADD_POLICY(
   object_schema          =&gt; 'mavis', 
   object_name            =&gt; 'cust_info', 
   column_name            =&gt; 'cc_num',
   policy_name            =&gt; 'redact_cust_cc_nums', 
   function_type          =&gt; DBMS_REDACT.REGEXP,
   function_parameters    =&gt; NULL,
   expression             =&gt; '1=1',
   regexp_pattern         =&gt; DBMS_REDACT.RE_PATTERN_CC_L6_T4,
   regexp_replace_string  =&gt; DBMS_REDACT.RE_REDACT_CC_MIDDLE_DIGITS,
   regexp_position        =&gt; DBMS_REDACT.RE_BEGINNING,
   regexp_occurrence      =&gt; DBMS_REDACT.RE_FIRST,
   regexp_match_parameter =&gt; DBMS_REDACT.RE_MATCH_CASE_INSENSITIVE,
   policy_description     =&gt; 'Regular expressions to redact credit card numbers',
   column_description     =&gt; 'cc_num contains customer credit card numbers');
END;
/
</pre>
<p>Query and redacted result:</p>
<pre dir="ltr">
SELECT cc_num FROM mavis.cust_info;

CC_NUM
-------
401288XXXXXX1881
411111XXXXXX1111
555555XXXXXX1111
511111XXXXXX1118
</pre></div>
<!-- class="example" --></div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="CEGHIEBI"></a>
<div id="ASOAG10607" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">5.8.4</span> Creating Custom Regular Expression Redaction Policies</h3>
<p>You <a id="sthref134"></a>can customize regular expressions in Data Redaction policies.</p>
<p>This section contains:</p>
<ul>
<li>
<p><a href="#CEGHBJHJ">Settings for Custom Regular Expressions</a></p>
</li>
<li>
<p><a href="#CEGEIACJ">Example of a Custom Regular Expression Redaction Policy</a></p>
</li>
</ul>
<a id="CEGHBJHJ"></a>
<div id="ASOAG10608" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3"><span class="secnum">5.8.4.1</span> Settings for Custom Regular Expressions</h4>
<p>To create <a id="sthref135"></a>custom regular expression redaction policies, you use the following parameters in the <code dir="ltr">DBMS_REDACT.ADD_POLICY</code> procedure:</p>
<ul>
<li>
<p><code dir="ltr">regexp_pattern</code>: This pattern is usually a text literal and can be of any of the data types <code dir="ltr">CHAR</code>, <code dir="ltr">VARCHAR2</code>, <code dir="ltr">NCHAR</code>, or <code dir="ltr">NVARCHAR2</code>. The pattern can contain up to 512 bytes. For further information about writing the regular expression for the <code dir="ltr">regexp_pattern</code> parameter, see the description of the <code dir="ltr">pattern</code> argument of the <code dir="ltr">REGEXP_REPLACE</code> SQL function in <a class="olink SQLRF020" href="../../server.112/e41084/ap_posix.htm#SQLRF020"><span class="italic">Oracle Database SQL Language Reference</span></a>, because the support that Data Redaction provides for regular expression matching is similar to that of the <code dir="ltr">REGEXP_REPLACE</code> SQL function.</p>
</li>
<li>
<p><code dir="ltr">regexp_replace_string</code>: This data can be of any of the data types <code dir="ltr">CHAR</code>, <code dir="ltr">VARCHAR2</code>, <code dir="ltr">NCHAR</code>, or <code dir="ltr">NVARCHAR2</code>. The <code dir="ltr">regexp_replace_string</code> can contain up to 500 back references to subexpressions in the form <code dir="ltr">\</code><code dir="ltr"><span class="codeinlineitalic">n</span></code>, where <code dir="ltr"><span class="codeinlineitalic">n</span></code> is a number from 1 to 9. If you want to include a backslash (\) in the <code dir="ltr">regexp_replace_string</code> setting, then you must precede it with the escape character, which is also a backslash. For example, to literally replace the matched pattern with <code dir="ltr">\2</code> (rather than replace it with the second matched subexpression of the matched pattern), you enter <code dir="ltr">\\2</code> in the <code dir="ltr">regexp_replace_string</code> setting. For more information, see <a class="olink SQLRF55541" href="../../server.112/e41084/ap_posix001.htm#SQLRF55541"><span class="italic">Oracle Database SQL Language Reference</span></a>.</p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#CACCFCEB">"General Syntax of the DBMS_REDACT.ADD_POLICY Procedure"</a> for information about other <code dir="ltr">DBMS_REDACT.ADD_POLICY</code> parameters</div>
</div>
<!-- class="sect3" -->
<a id="CEGEIACJ"></a>
<div id="ASOAG10609" class="sect3">
<h4 class="sect3"><span class="secnum">5.8.4.2</span> Example of a Custom Regular Expression Redaction Policy</h4>
<p><a href="#CACJBDAI">Example 5-12</a> shows <a id="sthref136"></a>how to use regular expressions to redact the <code dir="ltr">emp_id</code> column data. In this example, taken together, the <code dir="ltr">regexp_pattern</code> and <code dir="ltr">regexp_replace_string</code> parameters do the following: first, find the pattern of 9 digits. For reference, break them into three groups that contain the first 3, the next 2, and then the last 4 digits. Then, replace all 9 digits with <code dir="ltr">XXXXX</code> concatenated with the third group (the last 4 digits) as found in the original pattern.</p>
<div id="ASOAG819" class="example">
<p class="titleinexample"><a id="CACJBDAI"></a>Example 5-12 Partially Redacted Data Redaction Using Regular Expressions</p>
<pre dir="ltr">
BEGIN
 DBMS_REDACT.ADD_POLICY(
   object_schema          =&gt; 'mavis', 
   object_name            =&gt; 'cust_info', 
   column_name            =&gt; 'emp_id',
   policy_name            =&gt; 'redact_cust_ids', 
   function_type          =&gt; DBMS_REDACT.REGEXP,
   expression             =&gt; '1=1',
   regexp_pattern         =&gt; '(\d\d\d)(\d\d)(\d\d\d\d)',
   regexp_replace_string  =&gt; 'XXXXX\3',
   regexp_position        =&gt; 1,
   regexp_occurrence      =&gt; 0,
   regexp_match_parameter =&gt; 'i',
   policy_description     =&gt; 'Redacts customer IDs using regular expression',
   column_description     =&gt; 'emp_id contains employee ID numbers');
END;
/
</pre></div>
<!-- class="example" -->
<p>Query and redacted result:</p>
<pre dir="ltr">
SELECT emp_id FROM mavis.cust_info;

EMP_ID
------------
XXXXX1234
XXXXX5678
</pre></div>
<!-- class="sect3" --></div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="CEGIDIIE"></a>
<div id="ASOAG10610" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1"><span class="secnum">5.9</span> Creating a Random Redaction Policy</h2>
<p>This section contains:</p>
<ul>
<li>
<p><a href="#CEGCAGAF">About Creating Random Redaction Policies</a></p>
</li>
<li>
<p><a href="#CEGEDCHJ">Syntax for Creating a Random Redaction Policy</a></p>
</li>
<li>
<p><a href="#CEGGAJHA">Example of a Random Redaction Policy</a></p>
</li>
</ul>
<a id="CEGCAGAF"></a>
<div id="ASOAG10611" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">5.9.1</span> About Creating Random Redaction Policies</h3>
<p>A <a id="sthref137"></a><a id="sthref138"></a>random redaction policy presents the redacted data to the querying application user as randomly generated values each time it is displayed, depending on the data type of the column. Be aware that LOB columns are not supported.</p>
</div>
<!-- class="sect2" -->
<a id="CEGEDCHJ"></a>
<div id="ASOAG10612" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">5.9.2</span> Syntax for Creating a Random Redaction Policy</h3>
<p>The<a id="sthref139"></a> <code dir="ltr">DBMS_REDACT.ADD_POLICY</code> fields for creating a random redaction policy are as follows:</p>
<pre dir="ltr">
DBMS_REDACT.ADD_POLICY (
<span class="italic">   </span>object_schema           IN VARCHAR2 := NULL, 
   object_name             IN VARCHAR2,
   column_name             IN VARCHAR2 := NULL,
   policy_name             IN VARCHAR2,
   function_type           IN BINARY_INTEGER := NULL,
   expression              IN VARCHAR2,
   enable                  IN BOOLEAN := TRUE);
</pre>
<p>In this specification:</p>
<ul>
<li>
<p><code dir="ltr">object_schema</code>, <code dir="ltr">object_name</code>, <code dir="ltr">column_name</code>, <code dir="ltr">policy_name</code>, <code dir="ltr">expression</code>, <code dir="ltr">enable</code>: See <a href="#CACCFCEB">"General Syntax of the DBMS_REDACT.ADD_POLICY Procedure"</a>.</p>
</li>
<li>
<p><code dir="ltr">function_type</code>: Specifies the function used to set the type of redaction. Enter <code dir="ltr">DBMS_REDACT.RANDOM</code>.</p>
<p>If you omit the <code dir="ltr">function_type</code> parameter, then the default redaction <code dir="ltr">function_type</code> setting is <code dir="ltr">DBMS_REDACT.FULL</code>.</p>
<p>Remember that the data type of the column determines which <code dir="ltr">function_type</code> settings that you are permitted to use. See <a href="redaction_features.htm#CACCADBG">"Comparison of Full, Partial, and Random Redaction Based on Data Types"</a>.</p>
</li>
</ul>
</div>
<!-- class="sect2" -->
<a id="CEGGAJHA"></a>
<div id="ASOAG10613" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">5.9.3</span> Example of a Random Redaction Policy</h3>
<p><a href="#CACCIIJJ">Example 5-13</a> <a id="sthref140"></a>shows how to generate random values. Each time you run the <code dir="ltr">SELECT</code> statement, the output will be different.</p>
<div id="ASOAG720" class="example">
<p class="titleinexample"><a id="CACCIIJJ"></a>Example 5-13 Randomly Redacted Data Redaction Values</p>
<pre dir="ltr">
BEGIN
 DBMS_REDACT.ADD_POLICY(
   object_schema   =&gt; 'mavis', 
   object_name     =&gt; 'cust_info', 
   column_name     =&gt; 'login_username',
   policy_name     =&gt; 'redact_cust_rand_username', 
   function_type   =&gt; DBMS_REDACT.RANDOM,
   expression      =&gt; 'SYS_CONTEXT(''USERENV'',''SESSION_USER'') = ''APP_USER''');
END;
/
</pre>
<p>Query and redacted result:</p>
<pre dir="ltr">
SELECT login_username FROM mavis.cust_info;

LOGIN_USERNAME
----------
N[CG{\pTVcK
</pre></div>
<!-- class="example" --></div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="CEGFFDAG"></a>
<div id="ASOAG10614" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1"><span class="secnum">5.10</span> Creating a Policy That Uses No Redaction</h2>
<p>This section contains:</p>
<ul>
<li>
<p><a href="#CEGFCDHA">About Creating Policies That Use No Redaction</a></p>
</li>
<li>
<p><a href="#CEGEEJDF">Syntax for Creating a Policy with No Redaction</a></p>
</li>
<li>
<p><a href="#CEGBFAJG">Example of Performing No Redaction</a></p>
</li>
</ul>
<a id="CEGFCDHA"></a>
<div id="ASOAG10615" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">5.10.1</span> About Creating Policies That Use No Redaction</h3>
<p>The <a id="sthref141"></a><a id="sthref142"></a>None redaction type option enables you to test the internal operation of your redaction policies, with no effect on the results of queries against tables with policies defined on them. You can use this option to test the redaction policy definitions before applying them to a production environment. Be aware that LOB columns are not supported.</p>
</div>
<!-- class="sect2" -->
<a id="CEGEEJDF"></a>
<div id="ASOAG10616" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">5.10.2</span> Syntax for Creating a Policy with No Redaction</h3>
<p>The<a id="sthref143"></a> <code dir="ltr">DBMS_REDACT.ADD_POLICY</code> fields for creating a policy with no redaction are as follows:</p>
<pre dir="ltr">
DBMS_REDACT.ADD_POLICY (
<span class="italic">   </span>object_schema           IN VARCHAR2 := NULL, 
   object_name             IN VARCHAR2,
   column_name             IN VARCHAR2 := NULL,
   policy_name             IN VARCHAR2,
   function_type           IN BINARY_INTEGER := NULL,
   expression              IN VARCHAR2,
   enable                  IN BOOLEAN := TRUE);
</pre>
<p>In this specification:</p>
<ul>
<li>
<p><code dir="ltr">object_schema</code>, <code dir="ltr">object_name</code>, <code dir="ltr">column_name</code>, <code dir="ltr">policy_name</code>, <code dir="ltr">expression</code>, <code dir="ltr">enable</code>: See <a href="#CACCFCEB">"General Syntax of the DBMS_REDACT.ADD_POLICY Procedure"</a>.</p>
</li>
<li>
<p><code dir="ltr">function_type</code>: Specifies the functions used to set the type of data redaction. Enter <code dir="ltr">DBMS_REDACT.NONE</code>.</p>
<p>If you omit the <code dir="ltr">function_type</code> parameter, then the default redaction <code dir="ltr">function_type</code> setting is <code dir="ltr">DBMS_REDACT.FULL</code>.</p>
</li>
</ul>
</div>
<!-- class="sect2" -->
<a id="CEGBFAJG"></a>
<div id="ASOAG10617" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">5.10.3</span> Example of Performing No Redaction</h3>
<p><a href="#CACEAABG">Example 5-14</a> <a id="sthref144"></a>shows how to create a Data Redaction policy that does not redact any of the displayed values.</p>
<div id="ASOAG927" class="example">
<p class="titleinexample"><a id="CACEAABG"></a>Example 5-14 No Redacted Data Redaction Values</p>
<pre dir="ltr">
BEGIN
 DBMS_REDACT.ADD_POLICY(
   object_schema    =&gt; 'mavis', 
   object_name      =&gt; 'cust_info', 
   column_name      =&gt; 'user_name',
   policy_name      =&gt; 'redact_cust_no_vals', 
   function_type    =&gt; DBMS_REDACT.NONE,
   expression       =&gt; '1=1');
END;
/
</pre>
<p>Query and redacted result:</p>
<pre dir="ltr">
SELECT user_name FROM mavis.cust_info;

USER_NAME
----------
IDA NEAU
</pre></div>
<!-- class="example" --></div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="CACBEJAE"></a>
<div id="ASOAG722" class="sect1">
<h2 class="sect1"><span class="secnum">5.11</span> Exempting Users from Oracle Data Redaction Policies</h2>
<p>You can exempt users from having Oracle Data Redaction policies applied to the data they access. To <a id="sthref145"></a>do so, grant the users the <code dir="ltr">EXEMPT REDACTION POLICY</code> system privilege. Grant this privilege to trusted users only.</p>
<p>In addition to users who were granted this privilege, user <code dir="ltr">SYS</code> is also exempt from all Data Redaction policies. The person who creates the Data Redaction policy is by default not exempt from it, unless this person is user <code dir="ltr">SYS</code> or has the <code dir="ltr">EXEMPT REDACTION POLICY</code> system privilege.</p>
<p>Note the following:</p>
<ul>
<li>
<p>Users who have the <code dir="ltr">INSERT</code> privilege on a table can insert values into a redacted column, regardless of whether a Data Redaction policy exists on the table. Data Redaction only affects SQL <code dir="ltr">SELECT</code> statements (that is, queries) issued by a user, and has no effect on any other SQL issued by a user, including <code dir="ltr">INSERT</code>, <code dir="ltr">UPDATE</code>, or <code dir="ltr">DELETE</code> statements. (See the next bullet for exceptions to this rule.)</p>
</li>
<li>
<p>Users cannot perform a <code dir="ltr">CREATE TABLE AS SELECT</code> where any of the columns being selected (source columns) is protected by a Data Redaction policy (and similarly, any DML operation where the source is a redacted column), unless the user was granted the <code dir="ltr">EXEMPT REDACTION POLICY</code> system privilege.</p>
</li>
<li>
<p>The <code dir="ltr">EXEMPT REDACTION POLICY</code> system privilege is included in the <code dir="ltr">DBA</code> role, but this privilege must be granted explicitly to users because it is not included in the <code dir="ltr">WITH ADMIN OPTION</code> for <code dir="ltr">DBA</code> role grants. Users who were granted the <code dir="ltr">DBA</code> role are exempt from redaction policies because the <code dir="ltr">DBA</code> role contains the <code dir="ltr">EXP_FULL_DATABASE</code> role, which is granted the <code dir="ltr">EXEMPT REDACTION POLICY</code> system privilege.</p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="redaction_guidelines.htm#CACFHFEJ">"Restricting Administrative Access to Oracle Data Redaction Policies"</a></div>
</div>
<!-- class="sect1" -->
<a id="CACJDBBA"></a>
<div id="ASOAG737" class="sect1">
<h2 class="sect1"><span class="secnum">5.12</span> Altering an Oracle Data Redaction Policy</h2>
<p>You can use the <code dir="ltr">DBMS_REDACT.ALTER_POLICY</code> procedure to modify Oracle Data Redaction policies. In addition to changing current settings, this procedure enables you to add columns to a policy, if you want to redact more than one column in a database table.</p>
<p>This section contains the following topics:</p>
<ul>
<li>
<p><a href="#CACHAJDF">About Altering an Oracle Data Redaction Policy</a></p>
</li>
<li>
<p><a href="#CACHIEBE">Syntax for the DBMS_REDACT.ALTER_POLICY Procedure</a></p>
</li>
<li>
<p><a href="#CEGJDIJD">Parameters Required for Various DBMS_REDACT.ALTER_POLICY Actions</a></p>
</li>
<li>
<p><a href="#CACECBDD">Example of Altering an Oracle Data Redaction Policy</a></p>
</li>
</ul>
<a id="CACHAJDF"></a>
<div id="ASOAG953" class="sect2">
<h3 class="sect2"><span class="secnum">5.12.1</span> About Altering an Oracle Data Redaction Policy</h3>
<p>To <a id="sthref146"></a>alter a <a id="sthref147"></a>Data Redaction policy, use the <code dir="ltr">DBMS_REDACT.ALTER_POLICY</code> procedure. If the policy is already enabled, then you do not need to disable it first, and after you alter the policy, it remains enabled.</p>
<p>You can find the names of existing Data Redaction policies by querying the <code dir="ltr">POLICY_NAME</code> column of the <code dir="ltr">REDACTION_POLICIES</code> data dictionary view, and information about the columns, functions, and parameters specified in a policy by querying the <code dir="ltr">REDACTION_COLUMNS</code> view. To find the current value for policies that use full data redaction, you can query the <code dir="ltr">REDACTION_VALUES_FOR_TYPE_FULL</code> data dictionary view.</p>
<p>The <code dir="ltr">action</code> parameter specifies the type of modification that you want to perform. At a minimum, you must include the <code dir="ltr">object_name</code> and <code dir="ltr">policy_name</code> parameters when you run this procedure.</p>
</div>
<!-- class="sect2" -->
<a id="CACHIEBE"></a>
<div id="ASOAG954" class="sect2">
<h3 class="sect2"><span class="secnum">5.12.2</span> Syntax for the DBMS_REDACT.ALTER_POLICY Procedure</h3>
<p>The <a id="sthref148"></a>syntax for the <code dir="ltr">DBMS_REDACT.ALTER_POLICY</code> procedure is as follows:</p>
<pre dir="ltr">
DBMS_REDACT.ALTER_POLICY (
<span class="italic">   </span>object_schema          IN VARCHAR2 := NULL, 
   object_name            IN VARCHAR2 := NULL,<span class="italic"> </span>
   policy_name            IN VARCHAR2, 
   action                 IN BINARY_INTEGER := DBMS_REDACT.ADD_COLUMN,
   column_name            IN VARCHAR2 := NULL,
   function_type          IN BINARY_INTEGER := DBMS_REDACT.FULL,
   function_parameters    IN VARCHAR2 := NULL,
   expression             IN VARCHAR2 := NULL,
   regexp_pattern         IN VARCHAR2 := NULL,
   regexp_replace_string  IN VARCHAR2 := NULL,
   regexp_position        IN BINARY_INTEGER := NULL,
   regexp_occurrence      IN BINARY_INTEGER := NULL,
   regexp_match_parameter IN VARCHAR2 := NULL,
   policy_description     IN VARCHAR2 := NULL,
   column_description     IN VARCHAR2 := NULL);
</pre>
<p>In this specification:</p>
<ul>
<li>
<p><code dir="ltr">action</code>: Enter one of the following values to define the kind of action to use:</p>
<ul>
<li>
<p><code dir="ltr">DBMS_REDACT.MODIFY_COLUMN</code> if you plan to change the <code dir="ltr">column_name</code> value.</p>
</li>
<li>
<p><code dir="ltr">DBMS_REDACT.ADD_COLUMN</code> if you plan to add a new column (in addition to columns that are already protected by the policy) for redaction. This setting is the default for the <code dir="ltr">action</code> parameter.</p>
</li>
<li>
<p><code dir="ltr">DBMS_REDACT.DROP_COLUMN</code> if you want to remove redaction from a column.</p>
</li>
<li>
<p><code dir="ltr">DBMS_REDACT.MODIFY_EXPRESSION</code> if you plan to change the <code dir="ltr">expression</code> value. Each policy can have only one policy expression. In other words, when you modify the policy expression, you are replacing the existing policy expression with a new policy expression.</p>
</li>
<li>
<p><code dir="ltr">DBMS_REDACT.SET_POLICY_DESCRIPTION</code> if you want to change the description of the policy.</p>
</li>
<li>
<p><code dir="ltr">DBMS_REDACT.SET_COLUMN_DESCRIPTION</code> if you want to change the description of the column.</p>
</li>
</ul>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="#CEGJDIJD">"Parameters Required for Various DBMS_REDACT.ALTER_POLICY Actions"</a></p>
</li>
<li>
<p><a href="#CACCFCEB">"General Syntax of the DBMS_REDACT.ADD_POLICY Procedure"</a> for information about the remaining parameters</p>
</li>
</ul>
</div>
</div>
<!-- class="sect2" -->
<a id="CEGJDIJD"></a>
<div id="ASOAG10496" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">5.12.3</span> Parameters Required for Various DBMS_REDACT.ALTER_POLICY Actions</h3>
<p><a href="#CEGEGHHH">Table 5-5</a> shows <a id="sthref149"></a>the combinations of parameters that you must use to perform various <code dir="ltr">DBMS_REDACT.ALTER_POLICY</code> actions.</p>
<div id="ASOAG10497" class="tblhruleformal">
<p class="titleintable"><a id="sthref150"></a><a id="CEGEGHHH"></a>Table 5-5 Parameters Required for Various DBMS_REDACT.ALTER_POLICY Actions</p>
<table class="cellalignment2234" title="Parameters Required for Various DBMS_REDACT.ALTER_POLICY Actions" summary="DBMS_REDACT.ALTER_POLICY Variations" dir="ltr">
<thead>
<tr class="cellalignment2228">
<th class="cellalignment2235" id="r1c1-t22">Desired Alteration</th>
<th class="cellalignment2235" id="r1c2-t22">Parameters to Set</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2228">
<td class="cellalignment2236" id="r2c1-t22" headers="r1c1-t22">
<p>Add or modify a column</p>
</td>
<td class="cellalignment2236" headers="r2c1-t22 r1c2-t22">
<ul>
<li>
<p><code dir="ltr">action</code> (<code dir="ltr">DBMS_REDACT.MODIFY_COLUMN</code>)</p>
</li>
<li>
<p><code dir="ltr">column_name</code></p>
</li>
<li>
<p><code dir="ltr">function_type</code></p>
</li>
<li>
<p><code dir="ltr">function_parameters</code> (if necessary)</p>
</li>
<li>
<p><code dir="ltr">regexp</code>* (if necessary)</p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment2228">
<td class="cellalignment2236" id="r3c1-t22" headers="r1c1-t22">
<p>Change the policy expression</p>
</td>
<td class="cellalignment2236" headers="r3c1-t22 r1c2-t22">
<ul>
<li>
<p><code dir="ltr">action</code> (<code dir="ltr">DBMS_REDACT.MODIFY_EXPRESSION</code>)</p>
</li>
<li>
<p><code dir="ltr">expression</code></p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment2228">
<td class="cellalignment2236" id="r4c1-t22" headers="r1c1-t22">
<p>Change the description of the policy</p>
</td>
<td class="cellalignment2236" headers="r4c1-t22 r1c2-t22">
<ul>
<li>
<p><code dir="ltr">action</code> (<code dir="ltr">DBMS_REDACT.SET_POLICY_DESCRIPTION</code>)</p>
</li>
<li>
<p><code dir="ltr">policy_description</code></p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment2228">
<td class="cellalignment2236" id="r5c1-t22" headers="r1c1-t22">
<p>Change the description of the column</p>
</td>
<td class="cellalignment2236" headers="r5c1-t22 r1c2-t22">
<ul>
<li>
<p><code dir="ltr">action</code> (<code dir="ltr">DBMS_REDACT.SET_COLUMN_DESCRIPTION</code>)</p>
</li>
<li>
<p><code dir="ltr">column_description</code></p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment2228">
<td class="cellalignment2236" id="r6c1-t22" headers="r1c1-t22">
<p>Drop a column</p>
</td>
<td class="cellalignment2236" headers="r6c1-t22 r1c2-t22">
<ul>
<li>
<p><code dir="ltr">action</code> (<code dir="ltr">DBMS_REDACT.DROP_COLUMN</code>)</p>
</li>
<li>
<p><code dir="ltr">column_name</code></p>
</li>
</ul>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblhruleformal" --></div>
<!-- class="sect2" -->
<a id="CACECBDD"></a>
<div id="ASOAG955" class="sect2">
<h3 class="sect2"><span class="secnum">5.12.4</span> Example of Altering an Oracle Data Redaction Policy</h3>
<p>The exercise in this section shows<a id="sthref151"></a> how to modify a Data Redaction policy so that multiple columns are redacted. It also shows how to change the <code dir="ltr">expression</code> setting for the policy. To accomplish this, you must run the <code dir="ltr">DBMS_REDACT.ALTER_POLICY</code> procedure in stages.</p>
<ol>
<li>
<p>Create the policy.</p>
<pre dir="ltr">
BEGIN
 DBMS_REDACT.ADD_POLICY(
   object_schema   =&gt; 'hr', 
   object_name     =&gt; 'employees', 
   column_name     =&gt; 'email',
   policy_name     =&gt; 'hr_employees_pol', 
   function_type   =&gt; DBMS_REDACT.FULL,
   expression      =&gt; '1=1');
END;
/
</pre>
<p>At this point, when application users (including <code dir="ltr">HR</code>) query the <code dir="ltr">email</code> column, the email addresses are redacted to show a single space.</p>
<pre dir="ltr">
CONNECT HR
Enter password: <span class="italic">password</span>

SELECT EMAIL FROM HR.EMPLOYEES;

EMAIL
------

</pre></li>
<li>
<p>Alter this policy to redact the <code dir="ltr">hire_date</code> column to show <code dir="ltr">01-JAN-70.</code></p>
<pre dir="ltr">
BEGIN
 DBMS_REDACT.ALTER_POLICY(
   object_schema       =&gt; 'hr', 
   object_name         =&gt; 'employees', 
   policy_name         =&gt; 'hr_employees_pol', 
   action              =&gt; DBMS_REDACT.ADD_COLUMN,
   column_name         =&gt; 'hire_date',
   function_type       =&gt; DBMS_REDACT.PARTIAL,
   function_parameters =&gt; DBMS_REDACT.REDACT_DATE_EPOCH);
END;
/
</pre>
<p>To redact the <code dir="ltr">hire_date</code> column, you must change the <code dir="ltr">function_type</code> parameter to use partial redaction, and you must include the <code dir="ltr">function_parameters</code> parameter to specify the <code dir="ltr">DBMS_REDACT.REDACT_DATE_EPOCH</code> shortcut. The <code dir="ltr">expression</code> parameter is omitted because for this particular alteration, it does not need to change. The <code dir="ltr">email</code> column is still redacted, so a query shows the following:</p>
<pre dir="ltr">
SELECT EMAIL, HIRE_DATE FROM HR.EMPLOYEES;

EMAIL   HIRE_DATE
------  ----------
        01-JAN-70
</pre></li>
<li>
<p>Change the <code dir="ltr">expression</code> parameter so that user <code dir="ltr">HR</code> is the only user who can see the <a href="asogls.htm#BABGAFIB"><span class="xrefglossterm">actual data</span></a> for the <code dir="ltr">EMAIL</code> and <code dir="ltr">HIRE_DATE</code> columns.</p>
<pre dir="ltr">
BEGIN
 DBMS_REDACT.ALTER_POLICY(
   object_schema   =&gt; 'hr', 
   object_name     =&gt; 'employees', 
   policy_name     =&gt; 'hr_employees_pol', 
   action          =&gt; DBMS_REDACT.MODIFY_EXPRESSION,
   expression      =&gt; 'SYS_CONTEXT(''USERENV'',''SESSION_USER'') != ''HR''');
END;
/
</pre>
<p>To change the <code dir="ltr">expression</code> setting, you set the <code dir="ltr">action</code> parameter to <code dir="ltr">DBMS_REDACT.MODIFY_EXPRESSION</code>, and then enter the new expression in the <code dir="ltr">expression</code> parameter. At this stage, when user <code dir="ltr">HR</code> queries the <code dir="ltr">EMAIL</code> and <code dir="ltr">HIRE_DATE</code> columns, he or she can see the actual data.</p>
<pre dir="ltr">
SELECT EMAIL, HIRE_DATE FROM HR.EMPLOYEES;

EMAIL   HIRE_DATE
------  ----------
SKING   17-JUN-03
...
</pre></li>
<li>
<p>To drop the policy, enter the following procedure.</p>
<pre dir="ltr">
BEGIN
  DBMS_REDACT.DROP_POLICY (
    object_schema  =&gt; 'hr',
    object_name    =&gt; 'employees',
    policy_name    =&gt; 'hr_employees_pol');
END;
/
</pre></li>
</ol>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="CACHIIAE"></a>
<div id="ASOAG491" class="sect1">
<h2 class="sect1"><span class="secnum">5.13</span> Redacting Multiple Columns</h2>
<p>You<a id="sthref152"></a> can redact more than one column in a Data Redaction policy. To do so, create the policy for the first column that you want to redact. Afterward, use the <code dir="ltr">DBMS_REDACT.ALTER_POLICY</code> procedure to add the next column. As necessary, set the <code dir="ltr">action</code>, <code dir="ltr">column_name</code>, <code dir="ltr">function_type</code>, and <code dir="ltr">function_parameters</code> (or the parameters that begin with <code dir="ltr">regexp_</code>) parameters to define the redaction for the new column, but do not change the <code dir="ltr">object_schema</code>, <code dir="ltr">object_name</code>, <code dir="ltr">policy_name</code>, or <code dir="ltr">expression</code> parameters. Each redacted column continues to have the same redaction parameters that were used to create it.</p>
<p><a href="#CACCJGAH">Example 5-15</a> shows how to add a column to an existing Data Redaction policy. In this example, the <code dir="ltr">action</code> parameter specifies that a new column must be added, using <code dir="ltr">DBMS_REDACT.ADD_COLUMN</code>. The name of the new column, <code dir="ltr">card_num</code>, is set by the <code dir="ltr">column_name</code> parameter.</p>
<div id="ASOAG739" class="example">
<p class="titleinexample"><a id="CACCJGAH"></a>Example 5-15 Adding a Column to a Data Redaction Policy</p>
<pre dir="ltr">
BEGIN
 DBMS_REDACT.ALTER_POLICY(
  object_schema       =&gt; 'mavis', 
  object_name         =&gt; 'cust_info', 
  policy_name         =&gt; 'redact_cust_user_ids', 
  action              =&gt; DBMS_REDACT.ADD_COLUMN,
  column_name         =&gt; 'card_num',
  function_type       =&gt; DBMS_REDACT.FULL,
  function_parameters =&gt; '',
  expression          =&gt; 'SYS_CONTEXT(''SYS_SESSION_ROLES'',''ADM'') = ''TRUE''');
END;
/
</pre></div>
<!-- class="example" --></div>
<!-- class="sect1" -->
<a id="CEGCEGJC"></a>
<div id="ASOAG10651" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1"><span class="secnum">5.14</span> Disabling and Enabling an Oracle Data Redaction Policy</h2>
<p>After you create a Data Redaction policy, you can disable it and then reenable it as necessary.</p>
<p>This section contains:</p>
<ul>
<li>
<p><a href="#CACIFJBE">Disabling an Oracle Data Redaction Policy</a></p>
</li>
<li>
<p><a href="#CACBCFID">Enabling an Oracle Data Redaction Policy</a></p>
</li>
</ul>
<a id="CACIFJBE"></a>
<div id="ASOAG740" class="sect2">
<h3 class="sect2"><span class="secnum">5.14.1</span> Disabling an Oracle Data Redaction Policy</h3>
<p>To <a id="sthref153"></a>disable<a id="sthref154"></a> a Data Redaction policy, use the <code dir="ltr">DBMS_REDACT.DISABLE_POLICY</code> procedure. You can find the names of existing Data Redaction policies and whether they are enabled by querying the <code dir="ltr">POLICY_NAME</code> and <code dir="ltr">ENABLE</code> columns of the <code dir="ltr">REDACTION_POLICIES</code> view. However, as long as the policy still exists, you cannot create another policy for that table or view, even if the original policy is disabled. In other words, if you want to create a different policy on the same table column, then you must drop the first policy before you can create and use the new policy.</p>
<p>The <a id="sthref155"></a>syntax is as follows:</p>
<pre dir="ltr">
DBMS_REDACT.DISABLE_POLICY (
<span class="italic">   </span>object_schema       IN VARCHAR2 DEFAULT NULL, 
   object_name         IN VARCHAR2,<span class="italic"> </span>
   policy_name         IN VARCHAR2);
</pre>
<p>In this specification:</p>
<ul>
<li>
<p><code dir="ltr">object_schema</code>: Specifies the schema of the object on which the Data Redaction policy will be applied. If you omit this setting (or enter <code dir="ltr">NULL</code>), then Oracle Database uses the name of the current schema.</p>
</li>
<li>
<p><code dir="ltr">object_name</code>: Specifies the name of the table or view to be used for the Data Redaction policy.</p>
</li>
<li>
<p><code dir="ltr">policy_name</code>: Specifies the name of the policy to be disabled.</p>
</li>
</ul>
<p><a href="#CACIFFHC">Example 5-16</a> shows<a id="sthref156"></a> how to disable a Data Redaction policy.</p>
<div id="ASOAG741" class="example">
<p class="titleinexample"><a id="CACIFFHC"></a>Example 5-16 Disabling a Data Redaction Policy</p>
<pre dir="ltr">
BEGIN
  DBMS_REDACT.DISABLE_POLICY (
    object_schema  =&gt; 'mavis',
    object_name    =&gt; 'cust_info',
    policy_name    =&gt; 'redact_cust_user_ids');
END;
/
</pre></div>
<!-- class="example" --></div>
<!-- class="sect2" -->
<a id="CACBCFID"></a>
<div id="ASOAG742" class="sect2">
<h3 class="sect2"><span class="secnum">5.14.2</span> Enabling an Oracle Data Redaction Policy</h3>
<p>To<a id="sthref157"></a> enable<a id="sthref158"></a> a Data Redaction policy, use the <code dir="ltr">DBMS_REDACT.ENABLE_POLICY</code> procedure. Remember that immediately after you create a new policy, you do not need to enable it; the creation process handles that for you. To find the names of existing Data Redaction policies and whether they are enabled, query the <code dir="ltr">POLICY_NAME</code> and <code dir="ltr">ENABLE</code> columns of the <code dir="ltr">REDACTION_POLICIES</code> view. After you run the procedure, the enablement takes effect immediately.</p>
<p>The <a id="sthref159"></a>syntax is as follows:</p>
<pre dir="ltr">
DBMS_REDACT.ENABLE_POLICY (
<span class="italic">   </span>object_schema       IN VARCHAR2 DEFAULT NULL, 
   object_name         IN VARCHAR2,<span class="italic"> </span>
   policy_name         IN VARCHAR2);
</pre>
<p>In this specification:</p>
<ul>
<li>
<p><code dir="ltr">object_schema</code>: Specifies the schema of the object on which the Data Redaction policy will be applied. If you omit this setting (or enter <code dir="ltr">NULL</code>), then Oracle Database uses the name of the current schema.</p>
</li>
<li>
<p><code dir="ltr">object_name</code>: Specifies the name of the table or view to be used for the Data Redaction policy.</p>
</li>
<li>
<p><code dir="ltr">policy_name</code>: Specifies the name of the policy to be enabled.</p>
</li>
</ul>
<p><a href="#CACIGDDF">Example 5-17</a> shows <a id="sthref160"></a>how to enable a Data Redaction policy.</p>
<div id="ASOAG743" class="example">
<p class="titleinexample"><a id="CACIGDDF"></a>Example 5-17 Enabling a Data Redaction Policy</p>
<pre dir="ltr">
BEGIN
  DBMS_REDACT.ENABLE_POLICY (
    object_schema  =&gt; 'mavis',
    object_name    =&gt; 'cust_info',
    policy_name    =&gt; 'redact_cust_user_ids');
END;
/
</pre></div>
<!-- class="example" --></div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="CACJCFEI"></a>
<div id="ASOAG744" class="sect1">
<h2 class="sect1"><span class="secnum">5.15</span> Dropping an Oracle Data Redaction Policy</h2>
<p>To <a id="sthref161"></a>drop<a id="sthref162"></a> a Data Redaction policy, use the <code dir="ltr">DBMS_REDACT.DROP_POLICY</code> procedure. To find the names of existing Data Redaction policies, query the <code dir="ltr">POLICY_NAME</code> column of the <code dir="ltr">REDACTION_POLICIES</code> view. The policy can be either enabled or disabled when you drop it. After you run the procedure, the drop takes effect immediately.</p>
<p>When you drop a table or view that is associated with an Oracle Data Redaction policy, the policy is automatically dropped. As a best practice, drop the policy first, and then drop the table or view afterward. See <a href="redaction_guidelines.htm#CHDCGJAE">"Dropping Policies When the Recycle Bin Is Enabled"</a> for more information.</p>
<p>The<a id="sthref163"></a> syntax for dropping a Data Redaction policy is as follows:</p>
<pre dir="ltr">
DBMS_REDACT.DROP_POLICY (
<span class="italic">   </span>object_schema       IN VARCHAR2 DEFAULT NULL, 
   object_name         IN VARCHAR2,<span class="italic"> </span>
   policy_name         IN VARCHAR2);
</pre>
<p>In this specification:</p>
<ul>
<li>
<p><code dir="ltr">object_schema</code>: Specifies the schema of the object to which the Data Redaction policy applies. If you omit this setting (or enter <code dir="ltr">NULL</code>), then Oracle Database uses the name of the current schema.</p>
</li>
<li>
<p><code dir="ltr">object_name</code>: Specifies the name of the table or view to be used for the Data Redaction policy.</p>
</li>
<li>
<p><code dir="ltr">policy_name</code>: Specifies the name of the policy to be dropped.</p>
</li>
</ul>
<p><a href="#CACFIHFG">Example 5-18</a> shows<a id="sthref164"></a> how to drop a Data Redaction policy.</p>
<div id="ASOAG745" class="example">
<p class="titleinexample"><a id="CACFIHFG"></a>Example 5-18 Dropping a Data Redaction Policy</p>
<pre dir="ltr">
BEGIN
  DBMS_REDACT.DROP_POLICY (
    object_schema  =&gt; 'mavis',
    object_name    =&gt; 'cust_info',
    policy_name    =&gt; 'redact_cust_user_ids');
END;
/
</pre></div>
<!-- class="example" --></div>
<!-- class="sect1" -->
<a id="CACHHBAB"></a>
<div id="ASOAG746" class="sect1">
<h2 class="sect1"><span class="secnum">5.16</span> Example: How Oracle Data Redaction Affects Tables and Views</h2>
<p>Oracle Data <a id="sthref165"></a>Redaction policies apply to their target table or view and to any views that are created on this target, including materialized views. (See <a href="redaction_guidelines.htm#CHDBHFCF">"Creating Policies on Materialized Views"</a> for restrictions on creating Data Redaction policies on materialized views.) If you create a view chain (that is, a view based on another view), then the Data Redaction policy also applies throughout this view chain. The policies remain in effect all of the way up through this view chain, but if another policy is created for one of these views, then for the columns affected in the subsequent views, this new policy takes precedence.</p>
<p>To understand how this concept works, try the following example:</p>
<ol>
<li>
<p>Create and populate the following table:</p>
<pre dir="ltr">
CREATE TABLE TABLE1 (TC1 VARCHAR2(20), TN1 NUMBER(10));

INSERT INTO TABLE1 VALUES ('5111-1111-1111-1118', 987654329);
</pre></li>
<li>
<p>Create the following views, which will constitute the view chain for table <code dir="ltr">table1</code>:</p>
<pre dir="ltr">
CREATE VIEW view1 (vc1, vn1) AS SELECT tc1, tn1 FROM table1;
CREATE VIEW view2 (vc2, vn2) AS SELECT vc1, vn1 FROM view1;
CREATE VIEW view3 (vc3, vn3) AS SELECT vc2, vn2 FROM view2;
</pre></li>
<li>
<p>Create the following policy on the <code dir="ltr">table1</code> table, which changes the display of the <code dir="ltr">tc1</code> column to random values.</p>
<pre dir="ltr">
BEGIN
 DBMS_REDACT.ADD_POLICY(
   object_schema    =&gt; 'NULL', 
   object_name      =&gt; 'table1', 
   column_name      =&gt; 'tc1',
   policy_name      =&gt; 't1pol', 
   function_type    =&gt; DBMS_REDACT.RANDOM,
   expression       =&gt; '1=1');
END;
/
</pre></li>
<li>
<p>Query <code dir="ltr">table1.tc1</code>, <code dir="ltr">view1.vc1</code>, <code dir="ltr">view2.vc2</code>, and <code dir="ltr">view3.vc3</code>, and you will see that they all produce random output, based on the <code dir="ltr">t1pol</code> Data Redaction policy.</p>
<p>For example:</p>
<pre dir="ltr">
SELECT vc3 FROM view3;

VC3
-----------------------
M,v]3(z+U4~e;0#3]&lt;'
</pre></li>
<li>
<p>Create the following policy on <code dir="ltr">view2</code>, which changes the output of column <code dir="ltr">vc2</code> to display no output at all (that is, a blank space).</p>
<pre dir="ltr">
BEGIN
 DBMS_REDACT.ADD_POLICY(
   object_schema    =&gt; 'NULL', 
   object_name      =&gt; 'view2', 
   column_name      =&gt; 'vc2',
   policy_name      =&gt; 'v2pol', 
   function_type    =&gt; DBMS_REDACT.FULL,
   expression       =&gt; '1=1');
END;
/
</pre></li>
<li>
<p>Query views <code dir="ltr">view2</code> and <code dir="ltr">view3</code>.</p>
<pre dir="ltr">
SELECT vc2 FROM view2;
SELECT vc3 FROM view3;
</pre>
<p>Both queries produce the same output (a blank space), which illustrates how for these views, policy <code dir="ltr">v2pol</code> overrides the base table policy, <code dir="ltr">t1pol</code>.</p>
</li>
<li>
<p>Query table <code dir="ltr">table1</code> and view <code dir="ltr">view1</code>.</p>
<pre dir="ltr">
SELECT tc1 FROM table1;
SELECT vc1 FROM view1;
</pre>
<p>Because <code dir="ltr">table1</code> and <code dir="ltr">view1</code> are lower in the chain, they are not affected by policy <code dir="ltr">v2pol1</code>. The output for both remains as random values.</p>
</li>
<li>
<p>Create the following policy on <code dir="ltr">view1</code>, which redacts the first 5 digits of the numeric values in column <code dir="ltr">vn1</code> to <code dir="ltr">9</code>.</p>
<pre dir="ltr">
BEGIN
 DBMS_REDACT.ADD_POLICY(
   object_schema       =&gt; 'NULL', 
   object_name         =&gt; 'view1', 
   column_name         =&gt; 'vn1',
   policy_name         =&gt; 'v1pol', 
   function_type       =&gt; DBMS_REDACT.PARTIAL,
   function_parameters =&gt; '9,1,5',
   expression          =&gt; '1=1');
END;
/
</pre></li>
<li>
<p>Query view <code dir="ltr">view1</code>:</p>
<pre dir="ltr">
SELECT vc1, vn1 FROM view1;

VC1                                   VN1
------------------------------------- ----------------
:'F6`B&lt;dB/N&gt;hJDlJ7V                   999994329
</pre>
<p>Here, view <code dir="ltr">view1</code> is using two policies. Policy <code dir="ltr">t1pol</code> (on table <code dir="ltr">table1</code>) continues to redact column <code dir="ltr">vc1</code>, and policy <code dir="ltr">v1pol</code> (on view <code dir="ltr">view1</code>) redacts column <code dir="ltr">vn1</code>.</p>
</li>
<li>
<p>Query view <code dir="ltr">view2</code>:</p>
<pre dir="ltr">
SELECT vc2, vn2 FROM view2;

VC2                                   VN2
------------------------------------- ----------------
                                      999994329
</pre>
<p>View <code dir="ltr">view2</code> also uses two policies: the blank space for its column <code dir="ltr">vc2</code> is generated by policy <code dir="ltr">v2pol</code>, and the partial numeric redaction for <code dir="ltr">vn2</code> comes from policy <code dir="ltr">v1pol</code> for view <code dir="ltr">view1</code>.</p>
</li>
<li>
<p>Query view <code dir="ltr">view3</code>:</p>
<pre dir="ltr">
SELECT vc3, vn3 FROM view3;

VC3                                   VN3
------------------------------------- ----------------
                                      999994329
</pre>
<p>Because view <code dir="ltr">view3</code> has no direct policies, it uses the policy settings from both <code dir="ltr">view1</code> and <code dir="ltr">view2</code>. Hence, the output is the same as the output for <code dir="ltr">view2</code>.</p>
</li>
<li>
<p>Disable the policy.</p>
<p>If you disable a policy, then the output for all of the views along the view chain that are affected by the policy is also changed.</p>
<p>For example, disable the policy <code dir="ltr">t1pol</code>, which was created for table <code dir="ltr">table1</code>:</p>
<pre dir="ltr">
EXEC DBMS_REDACT.DISABLE_POLICY (NULL, 'TABLE1', 'T1POL');
</pre>
<p>Now query <code dir="ltr">view1</code> again:</p>
<pre dir="ltr">
SELECT vc1, vn1 FROM view1;

VC1                                   VN1
------------------------------------- ----------------
5111-1111-1111-1118                   999994329
</pre>
<p>Column <code dir="ltr">vc1</code> shows the values from the base table <code dir="ltr">table1</code>. Column <code dir="ltr">vn1</code> still shows the redacted values from policy <code dir="ltr">v2pol</code>.</p>
</li>
<li>
<p>To remove the components of this exercise:</p>
<pre dir="ltr">
EXEC DBMS_REDACT.DROP_POLICY (NULL, 'table1', 't1pol');
EXEC DBMS_REDACT.DROP_POLICY (NULL, 'view1', 'v1pol');
EXEC DBMS_REDACT.DROP_POLICY (NULL, 'view2', 'v2pol');
DROP TABLE table1;
DROP VIEW view1;
DROP VIEW view2;
DROP VIEW view3;
</pre></li>
</ol>
<p><a href="#CACBDDHA">Figure 5-1</a> shows how these policies affect the chain of views described in the previous example.</p>
<div id="ASOAG747" class="figure">
<p class="titleinfigure"><a id="CACBDDHA"></a>Figure 5-1 How Oracle Data Redaction Policies Work in a Chain of Views</p>
<img width="501" height="251" src="img/redaction.png" alt="Description of Figure 5-1 follows" /><br />
<a id="sthref166" href="img_text/redaction.htm">Description of ''Figure 5-1 How Oracle Data Redaction Policies Work in a Chain of Views''</a><br />
<br /></div>
<!-- class="figure" -->
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="redaction_guidelines.htm#CHDCGJAE">"Dropping Policies When the Recycle Bin Is Enabled"</a> for information about how Oracle Data Redaction policies are affected when you drop their associated tables or views when the recycle bin is enabled</div>
</div>
<!-- class="sect1" -->
<a id="CACCBCCD"></a>
<div id="ASOAG887" class="sect1">
<h2 class="sect1"><span class="secnum">5.17</span> Example: Using SQL Expressions to Build Reports with Redacted Values</h2>
<p>You <a id="sthref167"></a><a id="sthref168"></a>can use SQL expressions to build reports that are based on columns that have Oracle Data Redaction policies defined on them. The values used in the SQL expression will be redacted. This redaction occurs in such a way that the redaction takes place before the SQL expression is evaluated: the result value that is displayed in the report is the end result of the evaluated SQL expression over the redacted values, rather than the redacted result of the SQL expression as a whole.</p>
<p>For example, suppose you create the following Data Redaction policy for the <code dir="ltr">HR.EMPLOYEES</code> table, which will replace the first 4 digits of the value from the <code dir="ltr">SALARY</code> column with the number <code dir="ltr">9</code> and the first digit of the value from the <code dir="ltr">COMMISSION_PCT</code> column with a <code dir="ltr">9</code>.</p>
<pre dir="ltr">
BEGIN
 DBMS_REDACT.ADD_POLICY(
   object_schema          =&gt; 'HR', 
   object_name            =&gt; 'EMPLOYEES', 
   column_name            =&gt; 'SALARY',
   column_description     =&gt; 'emp_sal_comm shows employee salary and commission',
   policy_name            =&gt; 'redact_emp_sal_comm', 
   policy_description     =&gt; 'Partially redacts the emp_sal_comm column',
   function_type          =&gt; DBMS_REDACT.PARTIAL,
   function_parameters    =&gt; '9,1,4',
   expression             =&gt; '1=1');
END;
/
BEGIN
 DBMS_REDACT.ALTER_POLICY(
   object_schema          =&gt; 'HR',
   object_name            =&gt; 'EMPLOYEES',
   policy_name            =&gt; 'redact_emp_sal_comm',
   action                 =&gt; DBMS_REDACT.ADD_COLUMN,
   column_name            =&gt; 'COMMISSION_PCT',
   function_type          =&gt; DBMS_REDACT.PARTIAL,
   function_parameters    =&gt; '9,1,1',
   expression             =&gt; '1=1');
END;
/
</pre>
<p>Log in to the <code dir="ltr">HR</code> schema and then run the following report, which uses the SQL expression <code dir="ltr">(SALARY + COMMISSION_PCT)</code> to combine the employees' salaries and commissions:</p>
<pre dir="ltr">
SELECT (SALARY + COMMISSION_PCT) total_emp_compensation
FROM EMPLOYEES
WHERE DEPARTMENT_ID = 80;

TOTAL_EMP_COMPENSATION
----------------------
                9999.9
               9999.95
              99990.95
...
</pre>
<p>You can use a variety of SQL expressions for the report, including concatenation. For example:</p>
<pre dir="ltr">
SELECT 'Employee ID '          || EMPLOYEE_ID ||
       ' has a salary of '     || SALARY || 
       ' and a commission of ' || COMMISSION_PCT || '.' detailed_emp_compensation
FROM EMPLOYEES
WHERE DEPARTMENT_ID = 80
ORDER BY EMPLOYEE_ID;

DETAILED_EMP_COMPENSATION
-------------------------------------------------------------
Employee ID 150 has a salary of 99990 and a commission of .9.
Employee ID 151 has a salary of 9999 and a commission of .95.
Employee ID 152 has a salary of 9999 and a commission of .95.
...
</pre></div>
<!-- class="sect1" -->
<a id="CACFJCBG"></a>
<div id="ASOAG654" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1"><span class="secnum">5.18</span> Finding Information About Oracle Data Redaction Policies</h2>
<p><a href="#CACFGDCH">Table 5-6</a> lists <a id="sthref169"></a><a id="sthref170"></a>data dictionary views that provide information about Data Redaction policies. Before you can query these views, you must be granted the <code dir="ltr">SELECT_CATALOG_ROLE</code> role.</p>
<div id="ASOAG751" class="tblhruleformal">
<p class="titleintable"><a id="sthref171"></a><a id="CACFGDCH"></a>Table 5-6 Data Redaction Views</p>
<table class="cellalignment2234" title="Data Redaction Views" summary="Data Redaction Catalog Views" dir="ltr">
<thead>
<tr class="cellalignment2228">
<th class="cellalignment2235" id="r1c1-t24">View</th>
<th class="cellalignment2235" id="r1c2-t24">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2228">
<td class="cellalignment2236" id="r2c1-t24" headers="r1c1-t24">
<p><code dir="ltr">REDACTION_COLUMNS</code></p>
</td>
<td class="cellalignment2236" headers="r2c1-t24 r1c2-t24">
<p>Describes all of the redacted columns in the database, giving the owner of the table or view within which the column resides, the object name, the column name, the type of redaction function, the parameters to the redaction function (if any), and a description of the redaction policy</p>
</td>
</tr>
<tr class="cellalignment2228">
<td class="cellalignment2236" id="r3c1-t24" headers="r1c1-t24">
<p><code dir="ltr">REDACTION_POLICIES</code></p>
</td>
<td class="cellalignment2236" headers="r3c1-t24 r1c2-t24">
<p>Describes all of the data redaction policies in the database. It includes information about the object owner, object name, policy name, policy expression, whether the policy is enabled, and a description of the Data Redaction policy.</p>
</td>
</tr>
<tr class="cellalignment2228">
<td class="cellalignment2236" id="r4c1-t24" headers="r1c1-t24">
<p><code dir="ltr">REDACTION_VALUES_FOR_TYPE_FULL</code></p>
</td>
<td class="cellalignment2236" headers="r4c1-t24 r1c2-t24">
<p>Shows the current redaction values for Data Redaction policies that use full redaction</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblhruleformal" --></div>
<!-- class="sect1" --></div>
<!-- class="chapter" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment2227">
<tr>
<td class="cellalignment2236">
<table class="cellalignment2232">
<tr>
<td class="cellalignment2231"><a href="redaction_features.htm"><img width="24" height="24" src="../../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment2231"><a href="redaction_other.htm"><img width="24" height="24" src="../../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;1996, 2016,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment2238">
<table class="cellalignment2230">
<tr>
<td class="cellalignment2231"><a href="../../index.htm"><img width="24" height="24" src="../../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment2231"><a href="../../nav/portal_booklist.htm"><img width="24" height="24" src="../../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment2231"><a href="toc.htm"><img width="24" height="24" src="../../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment2231"><a href="index.htm"><img width="24" height="24" src="../../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment2231"><a href="../../nav/mindx.htm"><img width="24" height="24" src="../../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment2231"><a href="../../dcommon/html/feedback.htm"><img width="24" height="24" src="../../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>
</body>
</html>
