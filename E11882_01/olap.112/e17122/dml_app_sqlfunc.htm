<!DOCTYPE html>
<html lang="en">
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1">
<meta charset="utf-8">
<title>OLAP_TABLE SQL Functions</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Version 5.1.2 Build 742" />
<meta name="dcterms.created" content="2013-11-14T21:21:59Z" />
<meta name="robots" content="all" />
<meta name="dcterms.title" content="OLAP DML Reference" />
<meta name="dcterms.identifier" content="E17122-08" />
<meta name="dcterms.isVersionOf" content="OLADM" />
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;1994, 2013,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved." />
<link rel="Start" href="../../index.htm" title="Home" type="text/html" />
<link rel="Copyright" href="../../dcommon/html/cpyr.htm" title="Copyright" type="text/html" />

<script type="application/javascript"  src="../../dcommon/js/headfoot.js"></script>
<script type="application/javascript"  src="../../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html" />
<link rel="Index" href="index.htm" title="Index" type="text/html" />
<link rel="Prev" href="dml_commands_2075.htm" title="Previous" type="text/html" />
<link rel="Next" href="dml_app_sqlfunc001.htm" title="Next" type="text/html" />
<link rel="alternate" href="../e17122.pdf" title="PDF version" type="application/pdf" />
<link rel="schema.dcterms" href="http://purl.org/dc/terms/" />
<link rel="stylesheet" href="../../dcommon/css/fusiondoc.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/header.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/footer.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/fonts.css">
<link rel="stylesheet" href="../../dcommon/css/foundation.css">
<link rel="stylesheet" href="../../dcommon/css/codemirror.css">
<link rel="stylesheet" type="text/css" title="Default" href="../../nav/css/html5.css">
<link rel="stylesheet" href="../../dcommon/css/respond-480-tablet.css">
<link rel="stylesheet" href="../../dcommon/css/respond-768-laptop.css">
<link rel="stylesheet" href="../../dcommon/css/respond-1140-deskop.css">
<script type="application/javascript" src="../../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">550/593</span> <!-- End Header -->
<div id="OLADM930" class="appendix"><a id="CIHBDHCE"></a>
<h1 class="appendix"><span class="secnum">A</span> OLAP_TABLE SQL Functions</h1>
<p>This appendix contains reference documentation for the following SQL functions that you can use to extract multidimensional data from an analytic workspace and present it in the two-dimensional format of a relational table:</p>
<ul>
<li>
<p><a href="#CIHIFEAD">Creating Relational Views Using OLAP_TABLE</a></p>
</li>
<li>
<p><a href="#CHDHDDDI">Using OLAP DML Expressions in SELECT FROM OLAP_TABLE Statements</a></p>
</li>
<li>
<p><a href="dml_app_sqlfunc001.htm#g1004021">OLAP_TABLE</a></p>
</li>
<li>
<p><a href="dml_app_sqlfunc002.htm#CIHJHDCH">OLAP_CONDITION</a></p>
</li>
<li>
<p><a href="dml_app_sqlfunc003.htm#BGBGDDDF">OLAP_EXPRESSION</a></p>
</li>
<li>
<p><a href="dml_app_sqlfunc004.htm#BHBDCEJH">OLAP_EXPRESSION_BOOL</a></p>
</li>
<li>
<p><a href="dml_app_sqlfunc005.htm#CIAHHEDB">OLAP_EXPRESSION_DATE</a></p>
</li>
<li>
<p><a href="dml_app_sqlfunc006.htm#BCEEBEIH">OLAP_EXPRESSION_TEXT</a></p>
</li>
</ul>
<a id="CIHIFEAD"></a>
<div id="OLADM931" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Creating Relational Views Using OLAP_TABLE</h2>
<p><code>OLAP_TABLE</code> is a SQL function that returns a table of objects that can be joined to relational tables and views, and to other tables of objects populated by <code>OLAP_TABLE</code>. Within a SQL statement, you can specify an <code>OLAP_TABLE</code> function call wherever you would provide the name of a table or view</p>
<p><code>OLAP_TABLE</code> <a id="sthref5350"></a><a id="sthref5351"></a>uses a <span class="bold">limit map</span> to map dimensions and measures defined in an analytic workspace to columns in a logical table. The limit map combines with the <code>WHERE</code> clause of a SQL <code>SELECT</code> statement to generate a series of OLAP DML <a href="dml_commands_2009.htm#i78802">LIMIT command</a>s that are executed in the analytic workspace.</p>
<p><code>OLAP_TABLE</code> can use a limit map with a predefined logical table, or it can use the information in a limit map to dynamically generate a logical table at run time.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
The discussion of the <a href="dml_app_sqlfunc001.htm#CIHCGCBF"><span class="italic">limit_map</span></a> parameter of <a href="dml_app_sqlfunc001.htm#g1004021">OLAP_TABLE</a>, <a href="#CHDIBAFB">"Creating Logical Tables for Use by OLAP_TABLE"</a>, <a href="#CHDBIHFI">"Required OLAP DML Objects"</a>, <a href="#CHDIBAFB">"Creating Logical Tables for Use by OLAP_TABLE"</a>, <a href="#CHDIBAFB">"Creating Logical Tables for Use by OLAP_TABLE"</a>, <a href="#CHDIBAFB">"Creating Logical Tables for Use by OLAP_TABLE"</a></div>
<a id="CHDBIHFI"></a>
<div id="OLADM932" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Required OLAP DML Objects</h3>
<p>Several objects must be predefined within the analytic workspace to support the mapping of dimension hierarchies in the limit map:</p>
<ul>
<li>
<p>a <span class="bold">parent relation</span>, which identifies the parent of each dimension member within a hierarchy. See <a href="dml_basics.htm#BABGGIEH">"Parentrel Relation"</a> for more information.</p>
</li>
<li>
<p>a <span class="bold">hierarchy dimension</span>, which lists the hierarchies of a dimension. See <a href="dml_basics.htm#BABGAAEH">"Hierlist Dimension"</a> for more information.</p>
</li>
<li>
<p>an <span class="bold">inhierarchy</span> variable or valueset, which specifies which dimension members belong to each level of a hierarchy. See <a href="dml_basics.htm#BABIJDJF">"Inhier Valueset or Variable"</a> for more information.</p>
</li>
<li>
<p>a <span class="bold">grouping ID</span> variable, which identifies the depth within a hierarchy of each dimension member. See <a href="dml_basics.htm#BABCGJHG">"Gidrel Relation"</a> for more information.</p>
</li>
<li>
<p>a <span class="bold">family relation</span>, which provides the full parentage of each dimension member in a hierarchy. See <a href="dml_basics.htm#BABECBEE">"Familyrel Relation"</a> for more information.</p>
</li>
<li>
<p>a <span class="bold">level dimension</span>, which lists the levels of a dimension. See <a href="dml_basics.htm#BABDJGCB">"Levellist Dimension"</a> for more information.</p>
</li>
</ul>
</div>
<!-- class="sect2" -->
<a id="CHDIBAFB"></a>
<div id="OLADM933" class="sect2">
<h3 class="sect2">Creating Logical Tables for Use by OLAP_TABLE</h3>
<p>The logical table populated by <code>OLAP_TABLE</code> is actually a table type whose rows are user-defined object types, also known as <span class="bold"><a id="sthref5352"></a>Abstract Data Types</span> or <span class="bold">ADTs</span>.</p>
<p>A <a id="sthref5353"></a>user-defined object type is composed of attributes, which are equivalent to the columns of a table. The basic syntax for defining a row is as follows.</p>
<pre>
CREATE TYPE <span class="italic">object_name</span> AS OBJECT (
   <span class="italic">attribute1</span>      <span class="italic">datatype</span>,
   <span class="italic">attribute2</span>      <span class="italic">datatype</span>,
   <span class="italic">attribute</span>n      <span class="italic">datatype</span>);
</pre>
<p>A <a id="sthref5354"></a>table type is a collection of object types; this collection is equivalent to the rows of a table. The basic syntax for creating a table type is as follows.</p>
<pre>
CREATE TYPE <span class="italic">table_name</span> AS TABLE OF <span class="italic">object_name</span>;
</pre>
<p><code>OLAP_TABLE</code> can use a limit map with a predefined logical table, or it can use the information in a limit map to dynamically generate a logical table at run time.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="#CHDEIDBG">"Using OLAP_TABLE With Predefined ADTs"</a></p>
</li>
<li>
<p><a href="#CIHGDBCB">"Using OLAP_TABLE With Automatic ADTs"</a></p>
</li>
<li>
<p><a class="olink ADOBJ" href="../../appdev.112/e11822/toc.htm"><span class="italic">Oracle Database Object-Relational Developer's Guide</span></a> for information about object types</p>
</li>
<li>
<p><a class="olink SQLRF01506" href="../../server.112/e41084/statements_8001.htm#SQLRF01506">CREATE TYPE</a> in <span class="italic">Oracle Database SQL Language Reference</span></p>
</li>
</ul>
</div>
<a id="CHDEIDBG"></a>
<div id="OLADM934" class="sect3">
<h4 class="sect3">Using OLAP_TABLE With Predefined ADTs</h4>
<p><a id="sthref5355"></a>You <a id="sthref5356"></a><a id="sthref5357"></a>can <a id="sthref5358"></a>predefine the table of objects or generate it dynamically. <a id="sthref5359"></a>When you create the table type in advance, it is available in the database for use by any invocation of <code>OLAP_TABLE</code>. Queries that use predefined objects typically perform better than queries that dynamically generate the objects.</p>
<p><a href="#CHDHJDBA">Example A-1, "Template for Creating a View Using Predefined ADTs"</a><a id="sthref5360"></a> shows how to create a view of an analytic workspace using predefined ADTs.</p>
<div id="OLADM2951" class="example">
<p class="titleinexample"><a id="CHDHJDBA"></a>Example A-1 Template for Creating a View Using Predefined ADTs</p>
<pre>
SET ECHO ON
SET SERVEROUT ON

DROP TYPE <span class="italic">table_obj</span>;
DROP TYPE <span class="italic">row_obj</span>;

CREATE TYPE <span class="italic">row_obj</span> AS OBJECT (
   <span class="italic">         column_first</span>     <span class="italic">datatype</span>,
   <span class="italic">         column_next</span>      <span class="italic">datatype</span>,
   <span class="italic">         column_</span>n      <span class="italic">   datatype</span>);
/   
CREATE TYPE <span class="italic">table_obj</span> AS TABLE OF <span class="italic">row_obj</span>;
/
CREATE OR REPLACE VIEW <span class="italic">view_name</span> AS
   SELECT <span class="italic">column_first</span>, <span class="italic">column_next</span>, <span class="italic">column_</span>n
      FROM TABLE(OLAP_TABLE(
         '<span class="italic">analytic_workspace</span>', 
         '<span class="italic">table_obj</span>', 
         '<span class="italic">olap_command</span>',
         '<span class="italic">limit_map</span>'));
/
COMMIT;
/ 
GRANT SELECT ON <span class="italic">view_name</span> TO PUBLIC;        
</pre></div>
<!-- class="example" -->
<p><a href="#CHDFJHHA">Example A-2, "Sample View of the TIME Dimension Using Predefined ADTs"</a> uses <code>OLAP_TABLE</code> with a predefined table type to create a relational view of the <code>TIME</code> dimension in an analytic workspace named <code>MYAW</code> in the <code>MYAW_AW</code> schema.</p>
<p>The first parameter in the <code>OLAP_TABLE</code> call is the name of the analytic workspace. The second is the name of the predefined table type. The fourth is the limit map that specifies how to map the workspace dimension to the columns of the predefined table type. The third parameter is not specified</p>
<div id="OLADM2952" class="example">
<p class="titleinexample"><a id="CHDFJHHA"></a>Example A-2 Sample View of the TIME Dimension Using Predefined ADTs</p>
<pre>
CREATE TYPE time_cal_row AS OBJECT (
            time_id           varchar2(32),
            cal_short_label   varchar2(32),
            cal_end_date      date,
            cal_timespan      number(6));

CREATE TYPE time_cal_table AS TABLE OF time_cal_row;

CREATE OR REPLACE VIEW time_cal_view AS
   SELECT time_id, cal_short_label, cal_end_date, cal_timespan
      FROM TABLE(OLAP_TABLE(
         'myaw_aw.myaw duration session',
         'time_cal_table',
          '',
         'DIMENSION time_id from time with
            HIERARCHY time_parentrel
               INHIERARCHY time_inhier
            ATTRIBUTE cal_short_label from time_short_description
            ATTRIBUTE cal_end_date    from time_end_date
            ATTRIBUTE cal_timespan    from time_time_span'));
</pre></div>
<!-- class="example" --></div>
<!-- class="sect3" -->
<a id="CIHGDBCB"></a>
<div id="OLADM935" class="sect3">
<h4 class="sect3">Using OLAP_TABLE With Automatic ADTs</h4>
<p>If you <a id="sthref5361"></a>do not supply the name of a table type as an argument, <code>OLAP_TABLE</code> uses information in the limit map to generate the logical table automatically. In this case, the table type is only available at run time within the context of the calling SQL <code>SELECT</code> statement.</p>
<p><a href="#CIHICBCD">Example A-3, "Template for Creating a View Using Automatic ADTs"</a> shows how to create a view of an analytic workspace using automatic ADTs.</p>
<div id="OLADM2953" class="example">
<p class="titleinexample"><a id="CIHICBCD"></a>Example A-3 Template for Creating a View Using Automatic ADTs</p>
<pre>
SET ECHO ON
SET SERVEROUT ON

CREATE OR REPLACE VIEW <span class="italic">view_name</span> AS
   SELECT <span class="italic">column_first</span>, <span class="italic">column_next</span>, <span class="italic">column_</span>n
      FROM TABLE(OLAP_TABLE(
         '<span class="italic">analytic_workspace</span>',
         '', 
         '<span class="italic">olap_command</span>',
         '<span class="italic">limit_map</span>'));
/
COMMIT;
/ 
GRANT SELECT ON <span class="italic">view_name</span> TO PUBLIC;        
</pre></div>
<!-- class="example" -->
<p><a href="#CIHDHDDB">Example A-4, "View of the TIME Dimension Using Automatic ADTs"</a> creates the same view produced by <a href="#CHDFJHHA">Example A-2, "Sample View of the TIME Dimension Using Predefined ADTs"</a>, but it automatically generates the ADTs instead of using a predefined table type. It uses <code>AS</code> clauses in the limit map to specify the data types of the target columns.</p>
<div id="OLADM2954" class="example">
<p class="titleinexample"><a id="CIHDHDDB"></a>Example A-4 View of the TIME Dimension Using Automatic ADTs</p>
<pre>
CREATE OR REPLACE VIEW time_cal_view AS
   SELECT time_id, cal_short_label, cal_end_date, cal_timespan
      FROM TABLE(OLAP_TABLE(
        'myaw_aw.myaw duration session',
        null,
        null,
        'DIMENSION time_id AS varchar2(32) FROM time WITH
           HIERARCHY time_parentrel
              INHIERARCHY time_inhier
           ATTRIBUTE cal_short_label AS VARCHAR2(32) from time_short_description
           ATTRIBUTE cal_end_date AS DATE            from time_end_date
           ATTRIBUTE cal_timespan AS NUMBER(6)       from time_time_span'));

</pre></div>
<!-- class="example" -->
<p>When automatically generating ADTs, <code>OLAP_TABLE</code> uses default relational data types for the target columns unless you override them with <code>AS</code> clauses in the limit map. The default data type conversions used by <code>OLAP_TABLE</code> are described in <a href="dml_app_sqlfunc001.htm#CIAFCIEA">Table A-1, "Default Data Type Conversions"</a>.</p>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="CHDDACJH"></a>
<div id="OLADM936" class="sect2">
<h3 class="sect2">Adding Calculated Columns to the Relational View</h3>
<p><code>OLAP_TABLE</code> uses a limit map to present the multidimensional data from an analytic workspace in tabular form. The limit map specifies the columns of the logical table. You can add a calculated column to your relational view by specifying the <code>OLAP_EXPRESSION</code> function or a related Boolean, text, or date function in the select list of the query. When you specify one of these functions in the select list, <code>OLAP_TABLE</code> generates additional columns for the results of the function.</p>
<p>Before you use one of these expressions, you must specify a <code><a id="sthref5362"></a>ROW2CELL</code> clause in the limit map used by <code>OLAP_TABLE</code> to identifies the <code>RAW</code> column that <code>OLAP_TABLE</code> populates with information used by the OLAP single-row functions.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#CHDECIBH">"Using OLAP DML Expressions as Single-Row Functions"</a> and <a href="dml_app_sqlfunc001.htm#CIHGCEGC">"<span class="bold">ROW2CELL Clause</span>"</a></div>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="CHDHDDDI"></a>
<div id="OLADM937" class="sect1">
<h2 class="sect1">Using OLAP DML Expressions in SELECT FROM OLAP_TABLE Statements</h2>
<p>You can use OLAP DML commands within your SELECT FROM OLAP_TABLE statements as described in:</p>
<ul>
<li>
<p><a href="#CHDECIBH">"Using OLAP DML Expressions as Single-Row Functions"</a></p>
</li>
<li>
<p><a href="#CHDEBBGF">"Modifying an Analytic Workspace From Within a SELECT FROM OLAP_TABLE Statement"</a></p>
</li>
</ul>
<a id="CHDECIBH"></a>
<div id="OLADM938" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Using OLAP DML Expressions as Single-Row Functions</h3>
<p>SQL functions are typically single-row<a id="sthref5363"></a> functions return a single result row for every row of a queried table or view. Oracle supports several predefined SQL <a id="sthref5364"></a>single-row functions, for example <code>COS</code>, <code>LOG</code>, and <code>ROUND</code> which return numeric data, and <code>UPPER</code> and <code>LOWER</code> which return character data.</p>
<p>Within the context of a <code>SELECT FROM OLAP_TABLE</code> statement, there are four SQL functions that you can use to wrap OLAP DML functions in such a way that the OLAP DML function acts as a single-row function. There are four functions that the results of expressions of different OLAP DML data types: <a href="dml_app_sqlfunc003.htm#BGBGDDDF">OLAP_EXPRESSION</a> for Oracle OLAP numeric expressions, <a href="dml_app_sqlfunc004.htm#BHBDCEJH">OLAP_EXPRESSION_BOOL</a> for Oracle OLAP Boolean expressions, <a href="dml_app_sqlfunc005.htm#CIAHHEDB">OLAP_EXPRESSION_DATE</a> for Oracle OLAP datetime expressions, and <a href="dml_app_sqlfunc006.htm#BCEEBEIH">OLAP_EXPRESSION_TEXT</a> for Oracle OLAP text expressions. One argument of each of these SQL functions is an OLAP DML function.</p>
<p>You can specify the OLAP_EXPRESSION function and its variants in the same way you specify other Oracle single-row functions, notably in the select list, <code>WHERE</code>, and <code>ORDER BY</code> clauses.</p>
</div>
<!-- class="sect2" -->
<a id="CHDEBBGF"></a>
<div id="OLADM939" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Modifying an Analytic Workspace From Within a SELECT FROM OLAP_TABLE Statement</h3>
<p>There are several mechanisms for modifying an analytic workspace on the fly during the execution of <code>OLAP_TABLE</code>.</p>
<p>You can use the <code>OLAP_CONDITION</code> SQL function modifies an analytic workspace within the context of a <code>SELECT FROM OLAP_TABLE</code> statement. You can specify <code>OLAP_CONDITION</code> like other Oracle functions, typically in the <code>WHERE</code> clause. Using the <code>OLAP_CONDITION</code>, you can set an option, execute a <code>LIMIT</code> command, execute an OLAP model or forecast, or run a program. The changes made to the workspace can be transitory or they can persist in your session upon completion of the query.</p>
<p>In addition to <code>OLAP_CONDITION</code>, you can use syntax supported by the <code>OLAP_TABLE</code> function itself: The <code>PREDMLCMD</code> and <code>POSTDMLCMD</code> clauses in the limit map, and the <span class="italic">olap_command</span> parameter. <code>OLAP_CONDITION</code> has the advantage of portability, because it is not embedded within <code>OLAP_TABLE</code>, and versatility, because it can be applied at different entry points.</p>
<p><code>OLAP_TABLE</code> saves the status of dimensions in the limit map before executing the <code>LIMIT</code> commands that generate the result set for the query. After the data is fetched, <code>OLAP_TABLE</code> restores the status of the dimensions. You can specify a <code>PREDMLCMD</code> clause in the limit map to cause an OLAP DML command to execute before the dimension status is saved. Modifications resulting from the <code>PREDMLCMD</code> clause remain in the workspace after execution of <code>OLAP_TABLE</code>, unless reversed with a <code>POSTDMLCMD</code> clause. For more information, see <a href="dml_app_sqlfunc001.htm#CIHCGCBF"><span class="italic">limit_map</span></a>.</p>
<p>The <span class="italic">olap_command</span> parameter of <code>OLAP_TABLE</code> specifies an OLAP DML command that executes immediately before the result set is fetched. In some circumstances, the <span class="italic">olap_command</span> parameter may contain an OLAP DML <a href="dml_commands_1042.htm#g1037946">FETCH</a> command, which itself manages the fetch. Limits set by the <span class="italic">olap_command</span> parameter are only in effect during the execution of <code>OLAP_TABLE</code>. For more information, see <a href="dml_app_sqlfunc001.htm#CIHFFIBI"><span class="italic">olap_command</span></a>.</p>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<div class="refentry"></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
</div>
</div>
<footer><!--
<hr />
<table class="cellalignment3088">
<tr>
<td class="cellalignment3095">
<table class="cellalignment3093">
<tr>
<td class="cellalignment3092"><a href="dml_commands_2075.htm"><img width="24" height="24" src="../../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment3092"><a href="dml_app_sqlfunc001.htm"><img width="24" height="24" src="../../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;1994, 2013,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment3097">
<table class="cellalignment3091">
<tr>
<td class="cellalignment3092"><a href="../../index.htm"><img width="24" height="24" src="../../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment3092"><a href="../../nav/portal_booklist.htm"><img width="24" height="24" src="../../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment3092"><a href="toc.htm"><img width="24" height="24" src="../../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment3092"><a href="index.htm"><img width="24" height="24" src="../../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment3092"><a href="../../nav/mindx.htm"><img width="24" height="24" src="../../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment3092"><a href="../../dcommon/html/feedback.htm"><img width="24" height="24" src="../../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>

<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>
</body>
</html>
