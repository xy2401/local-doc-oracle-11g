<!DOCTYPE html>
<html lang="en">
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1">
<meta charset="utf-8">
<title>ACQUIRE</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Version 5.1.2 Build 742" />
<meta name="dcterms.created" content="2013-11-14T21:21:34Z" />
<meta name="robots" content="all" />
<meta name="dcterms.title" content="OLAP DML Reference" />
<meta name="dcterms.identifier" content="E17122-08" />
<meta name="dcterms.isVersionOf" content="OLADM" />
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;1994, 2013,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved." />
<link rel="Start" href="../../index.htm" title="Home" type="text/html" />
<link rel="Copyright" href="../../dcommon/html/cpyr.htm" title="Copyright" type="text/html" />

<script type="application/javascript"  src="../../dcommon/js/headfoot.js"></script>
<script type="application/javascript"  src="../../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html" />
<link rel="Index" href="index.htm" title="Index" type="text/html" />
<link rel="Prev" href="dml_commands_1.htm" title="Previous" type="text/html" />
<link rel="Next" href="dml_commands_1002.htm" title="Next" type="text/html" />
<link rel="alternate" href="../e17122.pdf" title="PDF version" type="application/pdf" />
<link rel="schema.dcterms" href="http://purl.org/dc/terms/" />
<link rel="stylesheet" href="../../dcommon/css/fusiondoc.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/header.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/footer.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/fonts.css">
<link rel="stylesheet" href="../../dcommon/css/foundation.css">
<link rel="stylesheet" href="../../dcommon/css/codemirror.css">
<link rel="stylesheet" type="text/css" title="Default" href="../../nav/css/html5.css">
<link rel="stylesheet" href="../../dcommon/css/respond-480-tablet.css">
<link rel="stylesheet" href="../../dcommon/css/respond-768-laptop.css">
<link rel="stylesheet" href="../../dcommon/css/respond-1140-deskop.css">
<script type="application/javascript" src="../../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">417/593</span> <!-- End Header --><a id="i1021649"></a>
<hr />
<div id="OLADM725" class="refsect1">
<h1 class="refsect1">ACQUIRE</h1>
<p><a id="ABC1044637"></a>When an analytic workspace is attached in <a id="sthref3522"></a>multiwriter mode, the ACQUIRE command acquires and (optionally) resynchronizes the specified objects so that their changes can be updated and committed.</p>
<div class="infoboxnotealso">
<p class="notep1">See also:</p>
<a href="dml_commands_1015.htm#BGEGDACB">"Managing Analytic Workspaces Attached in Multiwriter Mode"</a></div>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3523"></a>Syntax</p>
<p class="synopsis">ACQUIRE {<span class="italic">acquired_noresync_objects</span> | RESYNC [CASCADE] -</p>
<p class="synopsis"><span class="italic">resync_objects</span> [WAIT] } [CONSISTENT WITH [CASCADE] <span class="italic">consistency_objects</span> [WAIT]]</p>
<p>where <span class="syntaxinlineitalic">resync_objects</span> has the following syntax:</p>
<p class="synopsis"><span class="italic">resynch_objname</span> [FOR DELETE | [WITH [CASCADE]|WITHOUT] RELATIONS]] , ...</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3524"></a>Parameters</p>
<dl>
<dt><span class="italic">acquired_noresync_objects</span></dt>
<dd>
<p>A list of one or more variables, relations, valuesets, dimension names, separated by commas, that you want to access in read/write mode without resynchronizing.</p>
<p>To specify individual partitions of a partitioned variable, use the following syntax.</p>
<p class="synopsis"><span class="italic">variable_name</span> (PARTITION <span class="italic">partition_name</span> [, PARTITION <span class="italic">partition_name</span> ]...)</p>
<p>Acquiring objects in this manner preserves all read-only changes made to the objects. You can update variables and dimensions acquired in this manner using an UPDATE statement.</p>
</dd>
<dt><span class="italic">partition_name</span></dt>
<dd>
<p>The name of the partition in which you want to acquire the objects.</p>
</dd>
<dt>RESYNC</dt>
<dd>
<p>Specifies acquisition in read/write mode of the latest generation of the specified objects with all private changes discarded.</p>
</dd>
<dt>CASCADE</dt>
<dt><span class="italic">resync_objname</span></dt>
<dd>
<p>The name of a variable, relations, valueset, or dimension name that you want to access in read/write mode and resynchronize.</p>
<p>To specify individual partitions of a partitioned variable, use the following syntax.</p>
<p class="synopsis"><span class="italic">variable_name</span> (PARTITION <span class="italic">partition_name</span> [, PARTITION <span class="italic">partition_name</span> ]...)</p>
</dd>
<dt>WAIT</dt>
<dd>
<p>When you do not specify WAIT, the ACQUIRE statement fails when another user has acquired any of the objects in <span class="syntaxinlineitalic">resync_objects</span> in read/write mode. When you specify WAIT, Oracle OLAP waits until all objects in <span class="syntaxinlineitalic">resync_objects</span> it can be acquired in read/write mode or the wait times out.</p>
</dd>
<dt>CONSISTENT WITH</dt>
<dd>
<p>Specifies that additional objects are to be accessible in read-only mode.the behavior of the ACQUIRE statement when a specified object is already acquired by another user and resynchronizes the specified objects when the ACQUIRE statement succeeds.</p>
</dd>
<dt><span class="italic">consistency_objects</span> [WAIT]</dt>
<dd>
<p>A list of one or more a list of one or more variables, relations, valuesets, or dimension names, separated by commas, that you want to acquire in read-only mode.</p>
<p>To specify individual partitions of a partitioned variable, use the following syntax.</p>
<p class="synopsis"><span class="italic">variable_name</span> (PARTITION <span class="italic">partition_name</span> [, PARTITION <span class="italic">partition_name</span> ]...)</p>
<p>When you do not specify WAIT, the ACQUIRE statement fails when any of the objects in the <span class="syntaxinlineitalic">consistency_objects</span> are acquired in read/write mode by another user. When you specify the WAIT keyword, Oracle OLAP waits to execute the ACQUIRE statement until none of the objects in <span class="syntaxinlineitalic">consistency_objects</span> are acquired in read/write mode by another user or until the wait times out.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3525"></a>Usage Notes</p>
<p class="subhead2"><a id="OLADM2086"></a>Understanding Consistency</p>
<p>To some extent you can think of an ACQUIRE statement with a CONSISTENT WITH phrase as a combination of ACQUIRE and RELEASE statements.</p>
<pre>
ACQUIRE [avar...] RESYNC [rvar ...] cvar ... [WAIT]
RELEASE cvar ...
</pre>
<p>The difference is that an ACQUIRE CONSISTENT WITH statement succeeds even when the user does not have sufficient permissions to acquire <code>cvar</code> variables.</p>
<p class="subhead2"><a id="OLADM2087"></a>Failure and Error-Handling</p>
<p>All of the clauses in the ACQUIRE statement must succeed or the statement fails. Consequently, either all of the requested objects are acquired or none of them are acquired.</p>
<p>Only one user can acquire an object in read/write mode at a time. You can first acquire an object in read-only mode, and then, assuming another user has not also acquired it in read-only mode, you can acquire it in read/write mode without releasing it first. However, once another user has acquired an object in read-only mode, you cannot acquire the same object in read/write mode until the other user releases the object. When a specified object has been acquired by another user or when your read-only generation for a specified object is not the latest generation for the object, the ACQUIRE statement fails.</p>
<p>Also, it can take a long time for the ACQUIRE statement to complete when you specify WAIT for either the RESYNC or CONSISTENT phrase. During the wait, some variables in the acquisition lists may be released while others may have been acquired. It is even possible for a deadlock to occur which causes the ACQUIRE statement to fail with a timeout error.</p>
<p>To avoid problems caused by deadlock, be thoughtful about the order in which you code ACQUIRE and RELEASE statements and include appropriate error handling routines.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3526"></a>Examples</p>
<div id="OLADM2088" class="example">
<p class="titleinexample"><a id="sthref3527"></a>Example 9-1 Acquiring, Updating, and Releasing Objects</p>
<p>A classic use of multiwriter attachment mode is to allow two users to modify two different objects in the same analytic workspace. For example, assume that an analytic workspace has two variables: <code>actuals</code> and <code>budget</code>. Assume also that one user (user A) wants to modify <code>actuals</code>, while another user (user B) wants to modify <code>budget</code>. In this case, after attaching the analytic workspace in the multiwriter mode, each user acquires the desired variable, performs the desired modification, updates, commits the changes, and then, either detaches the workspace or releases the acquired variable.</p>
<p>User A executes the following statements.</p>
<pre>
AW ATTACH myworkspace MULTI
ACQUIRE actuals
... make modifications
UPDATE MULTI actuals
COMMIT
RELEASE actuals
AW DETACH myworkspace
</pre>
<p>While, at the same time, User B executes the following statements.</p>
<pre>
AW ATTACH myworkspace MULTI
ACQUIRE budget
... make modifications
UPDATE MULTI budget
COMMIT
RELEASE budget
AW DETACH myworkspace
</pre></div>
<!-- class="example" -->
<div id="OLADM2089" class="example">
<p class="titleinexample"><a id="sthref3528"></a>Example 9-2 Acquiring and Resynchronizing Objects</p>
<p>Assume that two users (named B1 and B2) both have to make what-if changes to <code>budget</code> and possibly modify their parts of <code>budget</code> when they like the results of the what-if changes. Neither user knows if anyone else needs to access <code>budget</code> at the same time that they are or if they have to make any permanent changes to <code>budget</code>. Consequently, they do not want to block anyone while they are performing what-if changes.</p>
<p>In this case, both users perform their what-if computation after attaching the analytic workspace in the multiwriter mode but without acquiring <code>budget</code>. When they later decide to make their what-if changes permanent, they try to acquire budget in unresynchronized mode. When the acquire succeeds, they update <code>budget</code> and commit the changes. The following OLAP DML statements show this scenario.</p>
<pre>
AW ATTACH myworkspace MULTI
...perform what-if computations
ACQUIRE budget
...maybe make some additional final changes
UPDATE MULTI budget
COMMIT
RELEASE budget
AW DETACH myworkspace
</pre>
<p>However, when the first acquire does not succeed, however, the users try again to acquire <code>budget</code> in resynchronized mode (possibly requesting a wait). When the resynchronized acquisition succeeds, they re-create the changes (because some relevant numbers might have changed) and then proceed to update and commit their analytic workspace. The following OLAP DML statements show this scenario.</p>
<pre>
AW ATTACH myworkspace MULTI
... perform what-if computations
ACQUIRE budget
...maybe make some additional final changes
UPDATE MULTI budget
COMMIT
RELEASE budget
AW DETACH myworkspace
AW ATTACH myworkspace MULTI
...perform what-if computations 
ACQUIRE budget --&gt; failed
ACQUIRE RESYNC budget WAIT
...determine that the changes are still needed
...make changes to make permanent
UPDATE MULTI budget
COMMIT
RELEASE budget
AW DETACH myworkspace
</pre></div>
<!-- class="example" -->
<div id="OLADM2090" class="example">
<p class="titleinexample"><a id="sthref3529"></a>Example 9-3 Acquiring Objects While Keeping Consistency</p>
<p>Sometimes you must keep some objects consistent with each other, which requires special care in multiwriter mode.</p>
<p>Assume that two users (User B1 and User B2) both have to modify <code>budget</code>, that <code>budget</code> must be kept consistent with <code>investment</code>, and that another user (User I) needs to modify <code>investment</code>. In this scenario, even though none of the users needs to modify both <code>budget</code> and <code>investment</code>, they all must ensure that when they acquire either <code>budget</code> or <code>investment</code> that no one else has either budget or investment already acquired. To achieve this effect, each user must issue an ACQUIRE statement with the CONSISTENT WITH phrase as shown in the following example code. Note that all of the users must be aware that the objects listed in the CONSISTENT phrase may be resynchronized by the ACQUIRE statement, if needed.</p>
<p>For example, User B1 could issue the following OLAP DML statements.</p>
<pre>
AW ATTACH myworkspace MULTI
... perform what-if computations
ACQUIRE budget CONSISTENT WITH investment
... maybe make some additional final changes
UPDATE MULTI budget
COMMIT
RELEASE budget, investment
AW DETACH myworkspace
</pre>
<p>User B2 could issue the following OLAP DML statements.</p>
<pre>
AW ATTACH myworkspace MULTI
... perform what-if computations 
ACQUIRE budget CONSISTENT WITH investment --&gt; failed
ACQUIRE RESYNC budget CONSISTENT WITH investment WAIT
... determine that the changes are still needed
... make changes to make permanent
UPDATE MULTI budget
COMMIT
RELEASE budget, investment
AW DETACH myworkspace
</pre>
<p>User I could issue the following OLAP DML statements.<a id="sthref3530"></a></p>
<pre>
AW ATTACH myworkspace MULTI
ACQUIRE investment CONSISTENT WITH budget --&gt; failed
ACQUIRE RESYNC investment CONSISTENT WITH budget WAIT
... make changes to investment
UPDATE MULTI investment
COMMIT
RELEASE budget, investment
AW DETACH myworkspace
</pre></div>
<!-- class="example" --></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment3088">
<tr>
<td class="cellalignment3095">
<table class="cellalignment3093">
<tr>
<td class="cellalignment3092"><a href="dml_commands_1.htm"><img width="24" height="24" src="../../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment3092"><a href="dml_commands_1002.htm"><img width="24" height="24" src="../../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;1994, 2013,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment3097">
<table class="cellalignment3091">
<tr>
<td class="cellalignment3092"><a href="../../index.htm"><img width="24" height="24" src="../../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment3092"><a href="../../nav/portal_booklist.htm"><img width="24" height="24" src="../../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment3092"><a href="toc.htm"><img width="24" height="24" src="../../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment3092"><a href="index.htm"><img width="24" height="24" src="../../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment3092"><a href="../../nav/mindx.htm"><img width="24" height="24" src="../../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment3092"><a href="../../dcommon/html/feedback.htm"><img width="24" height="24" src="../../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>
</body>
</html>
