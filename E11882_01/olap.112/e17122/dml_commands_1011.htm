<!DOCTYPE html>
<html lang="en">
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1">
<meta charset="utf-8">
<title>ALLOCATE</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Version 5.1.2 Build 742" />
<meta name="dcterms.created" content="2013-11-14T21:21:38Z" />
<meta name="robots" content="all" />
<meta name="dcterms.title" content="OLAP DML Reference" />
<meta name="dcterms.identifier" content="E17122-08" />
<meta name="dcterms.isVersionOf" content="OLADM" />
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;1994, 2013,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved." />
<link rel="Start" href="../../index.htm" title="Home" type="text/html" />
<link rel="Copyright" href="../../dcommon/html/cpyr.htm" title="Copyright" type="text/html" />

<script type="application/javascript"  src="../../dcommon/js/headfoot.js"></script>
<script type="application/javascript"  src="../../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html" />
<link rel="Index" href="index.htm" title="Index" type="text/html" />
<link rel="Prev" href="dml_commands_1010.htm" title="Previous" type="text/html" />
<link rel="Next" href="dml_commands_1012.htm" title="Next" type="text/html" />
<link rel="alternate" href="../e17122.pdf" title="PDF version" type="application/pdf" />
<link rel="schema.dcterms" href="http://purl.org/dc/terms/" />
<link rel="stylesheet" href="../../dcommon/css/fusiondoc.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/header.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/footer.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/fonts.css">
<link rel="stylesheet" href="../../dcommon/css/foundation.css">
<link rel="stylesheet" href="../../dcommon/css/codemirror.css">
<link rel="stylesheet" type="text/css" title="Default" href="../../nav/css/html5.css">
<link rel="stylesheet" href="../../dcommon/css/respond-480-tablet.css">
<link rel="stylesheet" href="../../dcommon/css/respond-768-laptop.css">
<link rel="stylesheet" href="../../dcommon/css/respond-1140-deskop.css">
<script type="application/javascript" src="../../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">427/593</span> <!-- End Header --><a id="i1030856"></a>
<hr />
<div id="OLADM741" class="refsect1">
<h1 class="refsect1">ALLOCATE</h1>
<p><a id="ABC1047994"></a>The ALLOCATE command calculates lower-level data from upper-level data by allocating variable data down a hierarchical dimension. Frequently you allocate data for budgeting, forecasting, and profitability analysis.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3643"></a>Syntax</p>
<p class="synopsis">ALLOCATE <span class="italic">source</span> [SOURCE <span class="italic">conjoint</span>] [BASIS <span class="italic">basisname</span> [ACROSS <span class="italic">dimname</span>]] - [TARGET <span class="italic">targetname</span> [TARGETLOG <span class="italic">targetlogname</span>]] - [USING <span class="italic">aggmap</span>] [ERRORLOG <span class="italic">errorlogfileunit</span>]</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3644"></a>Parameters</p>
<dl>
<dt><span class="italic">source</span></dt>
<dd>
<p>A variable or formula that provides the values to allocate. When the <span class="italic">source</span> object is a formula, you must also specify a variable with the TARGET keyword. When you specify a variable as <span class="italic">source</span> and you do not specify a target variable or a <span class="italic">basisname</span> variable, then ALLOCATE uses <span class="italic">source</span> as the basis and the target.</p>
</dd>
<dt>SOURCE <span class="italic">conjoint</span></dt>
<dd>
<p>Specifies a conjoint dimension that contains a list of cells the user has changed. The ALLOCATE command uses this list to produce the smallest target status needed to allocate all of the changed source cells.</p>
</dd>
<dt>BASIS <span class="italic">basisname</span></dt>
<dd>
<p>Specifies a variable, relation, or formula that provides the data on which the allocation is based. That data determines which cells of the target receive allocated values and, in an even or proportional operation, the amount of the source allocated to a target cell.</p>
<p>When the OPERATOR specified by a RELATION (for allocation) statement in <span class="italic">aggmap</span> is a COPY operator (COPY, MIN, MAX, FIRST, LAST), the basis tells the ALLOCATE command which target cells to update. When the OPERATOR specified is EVEN, then ALLOCATE derives the counts that it uses for allocation from the basis. When the OPERATOR specified is the PROPORTIONAL, then ALLOCATE uses the basis data to determine the amount to allocate to each target cell. When the OPERATOR is HCOPY, HFIRST, HLAST, or HEVEN, then ALLOCATE does not use a BASIS object. Instead, it allocates the source data to all of the target cells in the dimension hierarchy that is specified by the relation named in the RELATION statement.</p>
<p>When you specify the same variable as both the basis and the target, the current values of the target cells determine the allocation. When you do not specify a basis, then the ALLOCATE command uses the source as the basis.</p>
</dd>
<dt>ACROSS <span class="italic">dimname</span></dt>
<dd>
<p>Specifies a dimension, which can be a named composite, that the ALLOCATE command loops over to discover the cells in a basis. Because a basis can be a formula, you can realize a significant performance advantage by supplying a looping dimension that eliminates the sparsity from the basis loop.</p>
</dd>
<dt>TARGET <span class="italic">targetname</span></dt>
<dd>
<p>Specifies a variable to hold the allocated values. When the source object is a formula, then you must specify a target. When the source object is a variable and you do not specify a target, then ALLOCATE uses the source variable as the target.</p>
</dd>
<dt>TARGETLOG <span class="italic">targetlogname</span></dt>
<dd>
<p>Specifies a variable (identically dimensioned to the <span class="italic">targetname</span> variable), or a relation that specifies such a variable, to which ALLOCATE assigns a copy of the allocation. For instance, when ALLOCATE assigns the value of <code>100</code> to the cell of the <code>costs</code> variable that is specified by the <code>time</code> and <code>product</code> dimension values <code>Jan01</code> and <code>TV</code>, and the <code>targetlog</code> relation specifies the cell of the <code>costacct</code> variable that is specified by the same dimension values, then ALLOCATE assigns the value of <code>100</code> to the specified <code>costacct</code> cell, also.</p>
</dd>
<dt>USING <span class="italic">aggmap</span></dt>
<dd>
<p>Specifies the name of a previously-defined aggmap to use for the allocation. When you do not include this phrase, the command uses the default allocation specification for the variable as previously specified using the $ALLOCMAP property.</p>
</dd>
<dt>ERRORLOG <span class="italic">errorlogfileunit</span></dt>
<dd>
<p>Specifies a file unit that ALLOCATE uses for logging allocation deadlocks, errors, or other information. When the allocation does not generate any deadlocks or errors, ALLOCATE sets <span class="italic">errorlogname</span> to <code>NA</code>. When the allocation produces one or more deadlocks or errors, the events are sent to the specified file. ALLOCATE writes one line in the file for each allocation source that remains unallocated.</p>
<p>When you do not specify a file unit with ERRORLOG, ALLOCATE sends the information to the standard output device.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3645"></a>Usage Notes</p>
<p class="subhead2"><a id="OLADM2167"></a>Preserving Original Basis Values</p>
<p>Often the source, basis, and target objects are the same variable and therefore the original values in the cells of the target variable determine the proportions of the allocation. The allocation overwrites those original values in the target cells with the allocated values. To preserve original values in a variable, specify the original variable as the basis object and save the allocated values to a new variable as the target object. Using different basis and target objects makes it possible for you to preview the allocated data. When you then want to store the allocated values in the same variable as the basis, you can perform the allocation again with the same object as the basis and the target. Another example of using different basis and target objects is using an <code>actuals</code> variable as the basis of the allocation and a budget variable as the target.</p>
<p class="subhead2"><a id="OLADM2168"></a>Using a Formula as a Source or Basis</p>
<p>Source and basis objects can be formulas, which makes it possible for you to make complex computations and have the results be the source or basis object. For example, when you want to see the sales of individual products that would be necessary to produce a thirty percent increase in sales for the next year, you could express the increase in the following formula.</p>
<pre>
DEFINE actualsWanted DECIMAL FORMULA &lt;time, product&gt;
EQ LAG(actuals, 1, time) * 1.3
</pre>
<p>You would then use ACTUALSWANTED as the <span class="italic">source</span> object with the ALLOCATE command. In this example, you would use the ACTUALS variable as the basis.</p>
<p class="subhead2"><a id="OLADM2169"></a>Tracking Multiple Allocations</p>
<p>When you specify a variable with the TARGETLOG argument, you can store an allocated value in that variable and in the <code>target</code> variable. This double entry allocation makes it possible for you to track multiple allocations to the same target cell. For example, when you allocate a series of different costs to the same costs centers, then each allocation increases the values in the target cells. You can keep track of the individual allocations by specifying a different <span class="italic">targetlogname</span> variable for each allocation.</p>
<p class="subhead2"><a id="OLADM2170"></a>Logging Allocation Errors</p>
<p>When you specify a file with the ERRORLOG argument, you can record errors that result from locks and <code>NA</code> basis values. The log can provide feedback to an application about which source values remain unallocated. You can use the information to modify the allocation, for example by using a hierarchical operator such as HEVEN in a RELATION statement in the aggmap. You can use the ALLOCERRLOGHEADER and ALLOCERRLOGFORMAT options to format the error log. Within an allocation specification, you can specify other aspects of the error log using the ERRORLOG and ERRORMASK statements.</p>
<p class="subhead2"><a id="OLADM2171"></a>Logging the Progress of an Allocation</p>
<p>With the cube operations log, you can record and monitor the progress of an allocation. You can use the file to get feedback during a lengthy allocation and to gain information that might be useful for optimizing the allocation in the future.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink ARPLS72789" href="../../appdev.112/e40758/d_cube_log.htm#ARPLS72789"><span class="italic">Oracle Database PL/SQL Packages and Types Reference</span></a> for information about the cube operations log and the DBMS_CUBE_LOG package</div>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3646"></a>Examples</p>
<div id="OLADM2172" class="example">
<p class="titleinexample"><a id="sthref3647"></a>Example 9-34 Direct Even Allocation</p>
<p>This example allocates a value specified at one level of the <code>time</code> dimension hierarchy directly to the variable target cells that are specified by lower level values in the hierarchy without allocating values to an intermediate level. The <code>timemonthyear</code> relation specifies the hierarchical relationship of the <code>time</code> values. The source, basis, and target of the allocation are all the same variable, PROJBUDGET, which is dimensioned by <code>division</code>, <code>time</code>, and <code>line</code>. The <code>time</code> dimension is a nonunique concat dimension that has as its base dimensions <code>year</code>, <code>quarter</code>, and <code>month</code>. The <code>time</code> dimension is limited to <code>&lt;year: Yr02&gt;</code>, <code>&lt;quarter: Q1.02&gt;</code>, <code>&lt;quarter: q1.02&gt;</code>, and <code>&lt;month: Jan02&gt;</code> to <code>&lt;month: Jun02&gt;</code>. The following statements define the <code>projbudget</code> variable, set the value of a cell in to <code>6000</code> and then report the variable.</p>
<pre>
DEFINE projbudget VARIABLE DECIMAL &lt;division time line&gt;
projbudget(division 'CAMPING' time '&lt;YEAR: YR02&gt;' line  'MARKETING') = 6000
REPORT projbudget
</pre>
<p>The preceding statement produces the following results.</p>
<pre>
LINE: MARKETING
                 -PROJBUDGET--
                 --DIVISION---
TIME                CAMPING
---------------- -------------
&lt;year: Yr02&gt;          6,000.00
&lt;quarter: Q1.02&gt;            NA
&lt;quarter: Q2.02&gt;            NA
&lt;month: Jan02&gt;              NA
&lt;month: Feb02&gt;              NA
&lt;month: Mar02&gt;              NA
&lt;month: Apr02&gt;              NA
&lt;month: May02&gt;              NA
&lt;month: Jun02&gt;              NA
</pre>
<p>The following statements define a self-relation on the <code>time</code> dimension, relate the <code>month</code> values directly to the <code>year</code> values, and report the values of the relation.</p>
<pre>
DEFINE timemonthyear RELATION time &lt;time&gt;
LIMIT month TO 'JAN02' TO 'JUN02'
timemonthyear(time month) = '&lt;YEAR: YR02&gt;'
REPORT timemonthyear
</pre>
<p>The preceding statement produces the following results.</p>
<pre>
TIME             TIMEMONTHYEAR
---------------- -------------
&lt;year: Yr02&gt;     NA
&lt;quarter: Q1.02&gt; NA
&lt;quarter: Q2.02&gt; NA
&lt;month: Jan02&gt;   &lt;year: Yr02&gt;
&lt;month: Feb02&gt;   &lt;year: Yr02&gt;
&lt;month: Mar02&gt;   &lt;year: Yr02&gt;
&lt;month: Apr02&gt;   &lt;year: Yr02&gt;
&lt;month: May02&gt;   &lt;year: Yr02&gt;
&lt;month: Jun02&gt;   &lt;year: Yr02&gt;
</pre>
<p>The following statements define an aggmap and enter statements into the allocation specification. They allocate the value that is specified by <code>&lt;year: Yr02&gt;</code> from <code>projbudget</code> to the cells of the same variable that are specified by the <code>month</code> dimension values, and then report <code>projbudget</code>. The target cells of the variable have <code>NA</code> values so the RELATION statement in the allocation specification specifies the HEVEN operator. The ALLOCATE command specifies only one variable, <code>projbudget</code>, so that variable is the source and target of the allocation. No basis object is required because the allocation is an HEVEN operation. The allocation is directly from the <code>year</code> source value to the <code>month</code> target values because that is the hierarchy specified by the relation in the allocation specification.</p>
<pre>
DEFINE projbudgmap AGGMAP
ALLOCMAP 
RELATION timemonthyear OPERATOR HEVEN
END
ALLOCATE projbudget USING projbudgmap
REPORT projbudget
</pre>
<p>The preceding statement produces the following results.</p>
<pre>
LINE: MARKETING
                 -PROJBUDGET--
                 --DIVISION---
TIME                CAMPING
---------------- -------------
&lt;YEAR: YR02&gt;          6,000.00
&lt;QUARTER: Q1.02&gt;            NA
&lt;QUARTER: Q2.02&gt;            NA
&lt;MONTH: JAN02&gt;        1,000.00
...
&lt;MONTH: JUN02&gt;        1,000.00
</pre></div>
<!-- class="example" -->
<div id="OLADM2173" class="example">
<p class="titleinexample"><a id="CACDEJHD"></a>Example 9-35 Recursive Even Allocation with a Lock</p>
<p>This example allocates a value specified at one level of the <code>time</code> dimension hierarchy first to the target cells at an intermediate level in a variable and then to the cells that are specified by the lowest level values in the hierarchy. The <code>timeparent</code> relation specifies the hierarchical relationship of the <code>time</code> values. The source, basis, and target of the allocation are <code>projbudget</code>. The status of the <code>division</code>, <code>time</code>, and <code>line</code> dimensions are the same as the direct allocation example. At the beginning of this example, the <code>projbudget</code> variable again has just the single value, <code>6000</code>, in the cell specified by <code>&lt;year: Yr02&gt;</code>.</p>
<pre>
DEFINE timeparent RELATION time &lt;time&gt;
LIMIT quarter TO 'Q1.02' 'Q2.02'
timeparent(time quarter) = '&lt;YEAR: YR02&gt;'
LIMIT month TO 'JAN02' TO 'MAR02'
timeparent(time month) = '&lt;QUARTER: Q1.02&gt;'
LIMIT month TO 'APR02' TO 'JUN02'
timeparent(time month) = '&lt;QUARTER: Q1.02&gt;'
REPORT timeparent
</pre>
<p>The preceding statement produces the following results.</p>
<pre>
TIME             TIMEPARENT
---------------- -------------
&lt;year: Yr02&gt;     NA
&lt;quarter: Q1.02&gt; &lt;year: Yr02&gt;
&lt;quarter: Q2.02&gt; &lt;year: Yr02&gt;
&lt;month: Jan02&gt;   &lt;quarter: Q1.02&gt;
&lt;month: Feb02&gt;   &lt;quarter: Q1.02&gt;
&lt;month: Mar02&gt;   &lt;quarter: Q1.02&gt;
&lt;month: Apr02&gt;   &lt;quarter: Q2.02&gt;
&lt;month: May02&gt;   &lt;quarter: Q2.02&gt;
&lt;month: Jun02&gt;   &lt;quarter: Q2.02&gt;
</pre>
<p>This example demonstrates locking a cell so that it does not participate in the allocation. Locking a cell requires a valueset, so the following statements define one, limit the <code>time</code> dimension to the desired value, assign a value to the valueset, and then reset the status of the <code>time</code> dimension.</p>
<pre>
DEFINE timeval TO '&lt;QUARTER: Q2.02&gt;'
LIMIT time TO '&lt;Year: YR02&gt;' '&lt;Quarter: Q1.02&gt;'  '&lt;Quarter: Q2.02&gt;' -
   '&lt;month: Jan02&gt;' '&lt;month: Feb02&gt;' '&lt;month: Mar02&gt;' -
   '&lt;month: Apr02&gt;' '&lt;month: May02&gt;' '&lt;month: Jun02&gt;
</pre>
<p>The following statements revise the specification of the aggmap named <code>projbudgmap</code>. This time the RELATION statement in the allocation specification specifies the <code>timeparent</code> relation, the HEVEN operator, and the PROTECT argument. The READWRITE keyword specifies that the children of the locked cell also do not participate in the allocation. The NONORMALIZE keyword specifies that the value of the locked cell is not subtracted from the source value before it is allocated to the target cells. The statements then allocate the source value and report the results.</p>
<pre>
CONSIDER projbudgmap
ALLOCMAP 
RELATION timeparent OPERATOR HEVEN ARGS PROTECT NONORMALIZE READWRITE timeval
END

ALLOCATE projbudget USING projbudgmap
REPORT projbudget
</pre>
<p>The preceding statement produces the following results.</p>
<pre>
LINE: MARKETING
                 -PROJBUDGET--
                 --DIVISION---
TIME                CAMPING
---------------- -------------
&lt;year: Yr02&gt;          6,000.00
&lt;quarter: Q1.02&gt;      6,000.00
&lt;quarter: Q2.02&gt;            NA
&lt;month: Jan02&gt;        2,000.00
&lt;month: Feb02&gt;        2,000.00
&lt;month: Mar02&gt;        2,000.00
&lt;month: Apr02&gt;              NA
&lt;month: May02&gt;              NA
&lt;month: Jun02&gt;              NA
</pre></div>
<!-- class="example" -->
<div id="OLADM2174" class="example">
<p class="titleinexample"><a id="CACHFDCE"></a>Example 9-36 Recursive Proportional Allocation</p>
<p>This example uses the same relation as the recursive even allocation but it uses the PROPORTIONAL operator and it does not lock any cells. Because a proportional allocation uses the values of the basis object to calculate the values to assign to the target cells, the <code>projbudget</code> variable has values assigned to each of its cells. The value of the <code>&lt;year: Yr02&gt;</code> cell is <code>6000</code>., which was assigned to that cell. It is not the value an aggregation of the lower levels. A report of <code>projbudget</code> before the allocation produces the following results.</p>
<pre>
LINE: MARKETING
                 -PROJBUDGET--
                 --DIVISION---
TIME                CAMPING
---------------- -------------
&lt;year: Yr02&gt;          6,000.00
&lt;quarter: Q1.02&gt;      1,000.00
&lt;quarter: Q2.02&gt;      2,000.00
&lt;month: Jan02&gt;          300.00
&lt;month: Feb02&gt;          100.00
&lt;month: Mar02&gt;          600.00
&lt;month: Apr02&gt;          400.00
&lt;month: May02&gt;          800.00
&lt;month: Jun02&gt;          800.00
</pre>
<p>The following statements replace the previous specification of the aggmap with the new RELATION statement, which specifies the PROPORTIONAL operator. The allocation specification includes a <code>SOURCEVAL</code> <code>ZERO</code> statement, which specifies that the source value is replace with a zero value after the allocation (see the <a href="dml_commands_1012.htm#i79296">SOURCEVAL</a> statement of the ALLOCMAP command for more information). The statements then allocate the source value and report the result.</p>
<pre>
CONSIDER projbudgmap
ALLOCMAP JOINLINES('RELATION timeparent OPERATOR PROPORTIONAL timeval' -
  'SOURCEVAL ZERO' -
  'END')
ALLOCATE projbudget USING projbudgmap
REPORT projbudget
</pre>
<p>The preceding statement produces the following results<a id="sthref3648"></a>.</p>
<pre>
TIME             TIMEPARENT
LINE: MARKETING
                 -PROJBUDGET--
                 --DIVISION---
TIME                CAMPING
---------------- -------------
&lt;year: Yr02&gt;                 0
&lt;quarter: Q1.02&gt;      2,000.00
&lt;quarter: Q2.02&gt;      4,000.00
&lt;month: Jan02&gt;          600.00
&lt;month: Feb02&gt;          200.00
&lt;month: Mar02&gt;        1,200.00
&lt;month: Apr02&gt;          800.00
&lt;month: May02&gt;        1,600.00
&lt;month: Jun02&gt;        1,600.00 
</pre></div>
<!-- class="example" --></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment3088">
<tr>
<td class="cellalignment3095">
<table class="cellalignment3093">
<tr>
<td class="cellalignment3092"><a href="dml_commands_1010.htm"><img width="24" height="24" src="../../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment3092"><a href="dml_commands_1012.htm"><img width="24" height="24" src="../../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;1994, 2013,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment3097">
<table class="cellalignment3091">
<tr>
<td class="cellalignment3092"><a href="../../index.htm"><img width="24" height="24" src="../../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment3092"><a href="../../nav/portal_booklist.htm"><img width="24" height="24" src="../../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment3092"><a href="toc.htm"><img width="24" height="24" src="../../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment3092"><a href="index.htm"><img width="24" height="24" src="../../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment3092"><a href="../../nav/mindx.htm"><img width="24" height="24" src="../../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment3092"><a href="../../dcommon/html/feedback.htm"><img width="24" height="24" src="../../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>
</body>
</html>
