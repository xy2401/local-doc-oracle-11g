<!DOCTYPE html>
<html lang="en" >
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1">
<meta charset="utf-8">
<title>ALLOCMAP</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Version 5.1.2 Build 742" />
<meta name="dcterms.created" content="2013-11-14T21:21:38Z" />
<meta name="robots" content="all" />
<meta name="dcterms.title" content="OLAP DML Reference" />
<meta name="dcterms.identifier" content="E17122-08" />
<meta name="dcterms.isVersionOf" content="OLADM" />
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;1994, 2013,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved." />
<link rel="Start" href="../../index.htm" title="Home" type="text/html" />
<link rel="Copyright" href="../../dcommon/html/cpyr.htm" title="Copyright" type="text/html" />

<script type="application/javascript"  src="../../dcommon/js/headfoot.js"></script>
<script type="application/javascript"  src="../../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html" />
<link rel="Index" href="index.htm" title="Index" type="text/html" />
<link rel="Prev" href="dml_commands_1011.htm" title="Previous" type="text/html" />
<link rel="Next" href="dml_commands_1013.htm" title="Next" type="text/html" />
<link rel="alternate" href="../e17122.pdf" title="PDF version" type="application/pdf" />
<link rel="schema.dcterms" href="http://purl.org/dc/terms/" />
<link rel="stylesheet" href="../../dcommon/css/fusiondoc.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/header.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/footer.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/fonts.css">
<link rel="stylesheet" href="../../dcommon/css/foundation.css">
<link rel="stylesheet" href="../../dcommon/css/codemirror.css">
<link rel="stylesheet" type="text/css" title="Default" href="../../nav/css/html5.css">
<link rel="stylesheet" href="../../dcommon/css/respond-480-tablet.css">
<link rel="stylesheet" href="../../dcommon/css/respond-768-laptop.css">
<link rel="stylesheet" href="../../dcommon/css/respond-1140-deskop.css">
<script type="application/javascript" src="../../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">428/593</span> <!-- End Header --><a id="i78780"></a>
<hr />
<div id="OLADM742" class="refsect1">
<h1 class="refsect1">ALLOCMAP</h1>
<p><a id="sthref3649"></a><a id="ABC1048722"></a>The ALLOCMAP command identifies an aggmap object as an allocation specification and enters the contents of the specification. To use AGGMAP to assign an allocation specification to n aggmap object, the definition must be the one most recently defined or considered during the current session. When it is not, you must first use a CONSIDER statement to make it the current definition.</p>
<p>An alternative to the AGGMAP command is the EDIT AGGMAP command, which is available only in OLAP Worksheet. The EDIT AGGMAP command opens an Edit window in which you can delete or change an allocation specification for an aggmap object. To use the OLAP Worksheet, to code an allocation specification follow the instructions given in <a href="dml_commands_1036.htm#BCJBHAFB">"Editing a Newly Defined Aggmap to Code an Allocation Specification"</a>.</p>
<div class="infoboxnotealso">
<p class="notep1">See also:</p>
<a href="dml_objects.htm#i1035122">"OLAP DML Allocation Objects"</a> and <a href="dml_options.htm#CHDGFHFA">"Allocation Options"</a>.</div>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3650"></a>Syntax</p>
<p class="synopsis">ALLOCMAP&nbsp;[<span class="italic">specification</span>]</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3651"></a>Parameters</p>
<dl>
<dt><span class="italic">specification</span></dt>
<dd>
<p>A multiline text expression that is the allocation specification for the current aggmap object. An allocation specification begins with an ALLOCMAP statement and ends with an <code>END</code> statement. Between these statements, you code one or more of the following statements depending on the calculation that you want to specify:</p>
<dl>
<dd><a href="#BABIGGEA">CHILDLOCK</a></dd>
<dd><a href="#i79263">DEADLOCK</a></dd>
<dd><a href="#CACIFHBF">DIMENSION (for allocation)</a></dd>
<dd><a href="#i80540">ERRORLOG</a></dd>
<dd><a href="#i80545">ERRORMASK</a></dd>
<dd><a href="#CACFEIEC">MEASUREDIM (for allocation)</a></dd>
<dd><a href="#i79507">RELATION (for allocation)</a></dd>
<dd><a href="#i79296">SOURCEVAL</a></dd>
<dd><a href="#CACDJDFE">VALUESET</a></dd>
</dl>
<p>Each statement is a line of the multiline text expression. When coding an ALLOCMAP statement at the command line level, separate statements with newline delimiters (<code>\n</code>), or use JOINLINES.</p>
<p>For a discussion of how to determine which statements to include, see <a href="#CHDCDBBG">"Designing an Allocation Specification"</a>.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3652"></a>Usage Notes</p>
<p class="subhead2"><a id="CHDCDBBG"></a><a id="OLADM2175"></a>Designing an Allocation Specification</p>
<p>Minimally, an allocation specification consists of a RELATION statement or a VALUESET statement However, you can create more complex allocation specifications and change the default settings for error handling by including additional OLAP DML statements in the specification, as follows:</p>
<ol>
<li>
<p>For hierarchical allocations, a RELATION statement that specifies a self-relation that identifies the child-parent relationships of the hierarchy. List the statements in the order in which you want to perform the various operations; or if this is not important, list the RELATION statements in the same order as the dimensions appear in the variable definition.</p>
</li>
<li>
<p>For non-hierarchical allocations, a VALUESET statement that specifies the values to be used when allocating.</p>
</li>
<li>
<p>A CHILDLOCK statement that tells the ALLOCATE command whether to determine if RELATION statements in the aggmap specify lock on both a parent and a child element of a dimension hierarchy.</p>
</li>
<li>
<p>A DEADLOCK statement that tells the ALLOCATE command whether to continue an allocation when it encounters a deadlock, which occurs when the allocation cannot distribute a value because the targeted cell is locked or, for some operations, has a basis value of <code>NA.</code></p>
</li>
<li>
<p>When a dimension is not shared by the target variable and the source or the basis objects, a DIMENSION (for allocation) statement that specifies a single value to set as the status of that dimension.</p>
</li>
<li>
<p>An ERRORLOG statement that specifies how many errors to allow in the error log specified by the ALLOCATE command and whether to continue the allocation when the maximum number of errors has occurred.</p>
</li>
<li>
<p>An ERRORMASK statement that specifies which error conditions to exclude from the error log.</p>
</li>
<li>
<p>When the source data comes from a variable, a SOURCEVAL statement that specifies whether ALLOCATE changes the source data value after the allocation.</p>
</li>
</ol>
<p class="subhead2"><a id="OLADM2176"></a>Aggmap Type</p>
<p>You can use the AGGMAPINFO function to learn the type of an aggmap. An aggmap into which you have entered an allocation specification using the ALLOCMAP has the type ALLOCMAP and an aggmap into which you have entered an aggregation specification using an AGGMAP statement has the type AGGMAP. When you have defined an aggmap but have not yet entered a specification in it, its type is <code>NA</code>.</p>
<p class="subhead2"><a id="OLADM2177"></a>One RELATION for Each Dimension</p>
<p>An aggmap can have only one RELATION statement for any given dimension.</p>
<p class="subhead2"><a id="OLADM2178"></a>One Hierarchy For Each Dimension</p>
<p>An allocation operation proceeds down only one hierarchy in a dimension. When a dimension has multiple hierarchies, then you must limit the dimension to a hierarchy with a qualified data reference after the <span class="italic">rel-name</span> argument.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3653"></a>Examples</p>
<div id="OLADM2179" class="example">
<p class="titleinexample"><a id="BABDGCJA"></a><a id="i80029"></a>Example 9-37 Allocation Specification from an Input File</p>
<p>In this example an aggmap and its specification are defined in an ASCII disk file called <code>salesalloc.txt</code>. The statements in the file are then executed in the analytic workspace through the use of the INFILE statement. The statements in <code>salesalloc.txt</code> are the following.</p>
<pre>
IF NOT EXISTS ('salesalloc')
  THEN DEFINE salesalloc AGGMAP
  ELSE CONSIDER salesalloc
ALLOCMAP
  RELATION time.parent OPERATOR EVEN
  RELATION product.parent OPERATOR EVEN
  RELATION geography.parent OPERATOR EVEN
  SOURCEVAL ZERO
  DEADLOCK SKIP
END
</pre>
<p>To include the <code>salesalloc</code> aggmap in your analytic workspace, execute the following statement.</p>
<pre>
INFILE 'salesalloc.txt'
</pre>
<p>The <code>sales.agg</code> aggmap has now been defined and contains three RELATION statements and the SOURCEVAL and DEADLOCK statements. In this example, the ALLOCATE statement allocates its source value evenly to all of the aggregate level cells and the detail level cells of the target variable because the relations <code>time.parent</code>, <code>product.parent</code>, and <code>geography.parent</code> relate each child dimension value to its parent in the dimension hierarchy. The DEADLOCK statement tells the ALLOCATE statement to log an error and continue the allocation when a branch of a target hierarchy is locked or has a value of <code>NA</code>. The SOURCEVAL statement tells ALLOCATE to assign a zero value to the source cells after allocating the source data.</p>
<p>You can now use the <code>salesalloc</code> aggmap with an ALLOCATE statement, such as.</p>
<pre>
ALLOCATE sales USING salesalloc
</pre></div>
<!-- class="example" -->
<div id="OLADM2180" class="example">
<p class="titleinexample"><a id="BABCECHG"></a>Example 9-38 Allocation Specification from a Text Expression</p>
<p>In this example the <code>salesalloc</code> aggmap has already been defined. The specification is added to the aggmap as a text expression argument to the ALLOCMAP statement<a id="sthref3654"></a>.</p>
<pre>
CONSIDER salesalloc
ALLOCMAP
RELATION time.parent OPERATOR EVEN
RELATION product.parent OPERATOR EVEN
RELATION geography.parent OPERATOR EVEN
SOURCEVAL ZERO
DEADLOCK SKIP
</pre>
<p>&nbsp;</p>
</div>
<!-- class="example" -->
<div id="OLADM2181" class="example">
<p class="titleinexample"><a id="CACICCAD"></a>Example 9-39 Specifying a Single Dimension Value in an Allocation Specification</p>
<p>This example proportionally allocates a value it calculates from the <code>sales</code> variable to cells in a <code>projectedsales</code> variable. The <code>sales</code> variable is dimensioned by the <code>time</code>, <code>product</code>, <code>customer</code>, and <code>channel</code> dimensions.</p>
<p>The example defines the <code>projectedsales</code> variable to use as the target of the allocation and the <code>increasefactor</code> formula to use as the source. The formula multiplies values from <code>sales</code> by ten percent. The example limits the <code>time</code> dimension and creates the <code>ytoq.rel</code> relation, which relates the year 2001 to the quarters of 2002. The next LIMIT commands limit the dimensions shared by <code>sales</code> and <code>projectedsales</code>.</p>
<p>The example creates an aggmap and uses the ALLOCMAP statement to enter a RELATION and a DIMENSION statement into the map. The RELATION statement specifies the <code>ytoq.rel</code> relation as the dimension hierarchy to use for the allocation and specifies that the allocation is proportional. The DIMENSION statement tells ALLOCATE to set the status of the <code>channel</code> dimension to <code>totalchannel</code> for the duration of the allocation.</p>
<pre>
DEFINE projectedSales DECIMAL VARIABLE &lt;time, SPARSE &lt;product, customer&gt;&gt;
DEFINE increaseFactor DECIMAL FORMULA &lt;product&gt;
EQ sales * 1.1
LIMIT time TO '2001' 'Q1.02' TO 'Q4.02'
DEFINE YtoQ.rel RELATION time &lt;time&gt;
LIMIT time TO 'Q1.02' to 'Q4.02'
YtoQ.rel = '2001'
LIMIT time TO '2001' 'Q1.02' to 'Q4.02'
LIMIT product TO 'TotalProduct' 'Videodiv' 'Audiodiv' 'Accdiv'
LIMIT customers TO 'TotalCustomer'
DEFINE time.alloc AGGMAP
ALLOCMAP
RELATION YtoQ.rel OPERATOR PROPORTIONAL
DIMENSION channel 'TotalChannel'
END
ALLOCATE increaseFactor BASIS sales TARGET projectedSales USING time.alloc
</pre>
<p>The <code>sales</code> values that are the basis of the allocation are the following.</p>
<pre>
CHANNEL: TOTALCHANNEL
CUSTOMERS: TOTALCUSTOMER
                 ---------------PROJECTEDSALES---------------
                 --------------------TIME--------------------
PRODUCT           2001      Q1.02      Q2.02      Q3.02      Q4.02
------------     ------     ------     ------     ------     ------
TotalProduct      7000       1000       2000       3000       1000
Videodiv          4100        600       1100       1900        500
Audiodiv          1700        200        600        600        300
Accdiv            1200        200        300        500        200
</pre>
<p>The following shows a report of <code>projectedsales</code> for <code>totalchannel</code> after the allocation.</p>
<pre>
CHANNEL: TOTALCHANNEL
CUSTOMERS: TOTALCUSTOMER
                 ---------------PROJECTEDSALES---------------
                 --------------------TIME--------------------
PRODUCT           2001      Q1.02      Q2.02      Q3.02      Q4.02
------------     ------     ------     ------     ------     ------
TotalProduct       NA         NA         NA         NA         NA
Videodiv           NA        660       1210       2090        550
Audiodiv           NA        220        660        660        330
Accdiv             NA        220        330        550        220
</pre></div>
<!-- class="example" -->
<div id="OLADM2182" class="example">
<p class="titleinexample"><a id="CACFGGBG"></a>Example 9-40 Entering RELATION Statements in an Allocation Specification</p>
<p>This example defines a <code>time.type</code> dimension and adds to it the two hierarchies of the <code>time</code> dimension. It defines the <code>time.time</code> relation that relates the hierarchy types (that is, <code>time.type</code>) to the <code>time</code> dimension. The example defines the <code>time.alloc</code> aggmap. With the ALLOCMAP command, it enters a RELATION statement in the aggmap. The RELATION statement specifies the values of the <code>time</code> dimension hierarchy to use in the allocation, limits the <code>time</code> dimension to one hierarchy with the QDR, and the specifies the EVEN operation for the allocation. The ALLOCATE command then allocates data from the source object to the target variable using the <code>time.alloc</code> aggmap. In the ALLOCATE command the source, basis, and target objects are the same <code>sales</code> variable.</p>
<pre>
 
DEFINE time.type TEXT DIMENSION
MAINTAIN time.type add 'Fiscal'
MAINTAIN time.type add 'Calendar'
DEFINE time.time RELATION time &lt;time, time.type&gt;
DEFINE time.alloc AGGMAP
 
ALLOCMAP
RELATION time.time (time.type 'Fiscal') OPERATOR EVEN 
END
 
ALLOCATE sales USING time.alloc 
</pre></div>
<!-- class="example" --></div>
<!-- class="refsubsect" -->
<div id="OLADM743" class="refsect2"><a id="BABIGGEA"></a>
<hr />
<h2 class="refsect2">CHILDLOCK</h2>
<p><a id="sthref3655"></a>Within an allocation specification, a CHILDLOCK statement tells the ALLOCATE statement to determine if RELATION statements in the allocation specification have specified locks on both a parent and on a child of the parent in a dimension hierarchy. Locking both a parent and one of its children can cause incorrect allocation results.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3656"></a>Syntax</p>
<p class="synopsis">CHILDLOCK&nbsp;[DETECT|<span class="underline">NODETECT</span>]</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3657"></a>Parameters</p>
<dl>
<dt>DETECT</dt>
<dd>
<p>Tells the ALLOCATE statement to detect that an allocation lock exists on a parent and also on one of its children in a dimension hierarchy. When it detects a locked parent and child, the ALLOCATE statement creates an entry in the error log for the allocation.</p>
</dd>
<dt>NODETECT</dt>
<dd>
<p>(Default) Tells the ALLOCATE statement to continue an allocation even when a lock exists on a parent and also on one of its children in a hierarchy.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3658"></a>Examples</p>
<p>For an example of using a CHILDLOCK statement in an allocation specification, see <a href="dml_commands_1032.htm#CIHGCFJC">Example 9-79, "Creating an Aggmap for Allocation"</a>.</p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="OLADM744" class="refsect2"><a id="i79263"></a>
<hr />
<h2 class="refsect2">DEADLOCK</h2>
<p><a id="sthref3659"></a>Within an allocation specification, a DEADLOCK statement tells the ALLOCATE statement what to do when it cannot distribute a source value to a target cell specified by a value in a dimension hierarchy because the target cell is either locked by a RELATION statement in the allocation specification or the cell has a basis value of <code>NA</code>.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3660"></a>Syntax</p>
<p class="synopsis">DEADLOCK&nbsp;[SKIP|<span class="underline">NOSKIP</span>]</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3661"></a>Parameters</p>
<dl>
<dt>SKIP</dt>
<dd>
<p>Tells the ALLOCATE statement to log the error and continue with the allocation even though it cannot distribute source values to cells specified by a branch of a dimension hierarchy because a target cell is locked or the basis value of the cell is <code>NA</code>.</p>
</dd>
<dt>NOSKIP</dt>
<dd>
<p>Tells the ALLOCATE statement to stop the allocation and to return an error when it cannot distribute source values to cells in a branch of a dimension hierarchy because a target cell is locked or the basis value is <code>NA</code>. NOSKIP is the default action when you do not include a DEADLOCK statement in the aggmap used by the ALLOCATE command.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3662"></a>Examples</p>
<p>For examples of using a DEADLOCK statement in an allocation specification, see <a href="#BABDGCJA">Example 9-37, "Allocation Specification from an Input File"</a> and <a href="#BABCECHG">Example 9-38, "Allocation Specification from a Text Expression"</a>.</p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="OLADM745" class="refsect2"><a id="CACIFHBF"></a>
<hr />
<h2 class="refsect2">DIMENSION (for allocation)</h2>
<p><a id="sthref3663"></a>Within an allocation specification, a DIMENSION statement sets the status to a single value of a dimension. Within an allocation specification this dimension is a dimension that the source, basis, and target objects do not have in common. When an allocation specification does not specify such single values with DIMENSION statements, Oracle OLAP uses the current status values of the dimensions when performing the allocation.</p>
<p>You use a DIMENSION statement to ensure that the status of a dimension is set to the value that you want it to have for the allocation. You must use a separate DIMENSION statement for each dimension that is not shared by the source, basis, and target objects.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3664"></a>Syntax</p>
<p class="synopsis">DIMENSION&nbsp;<span class="italic">dimension&nbsp;</span>'<span class="italic">dimval</span>'</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3665"></a>Parameters</p>
<dl>
<dt><span class="italic">dimension</span></dt>
<dd>
<p>the name of the dimension to limit.</p>
</dd>
<dt>d<span class="italic">imval</span></dt>
<dd>
<p>The single value of the dimension to which you want the status of the dimension set for the duration of an allocation.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3666"></a>Examples</p>
<p>For an example of using a DIMENSION statement in an allocation specification, see <a href="#CACICCAD">Example 9-39, "Specifying a Single Dimension Value in an Allocation Specification"</a>.</p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="OLADM746" class="refsect2"><a id="i80540"></a>
<hr />
<h2 class="refsect2">ERRORLOG</h2>
<p><a id="sthref3667"></a>Within an allocation specification, an ERRORLOG statement specifies how many allocation error conditions to log and whether to continue or to stop the allocation when the specified maximum number of errors have been logged. You specify the error log with the ERRORLOG keyword to the ALLOCATE command.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3668"></a>Syntax</p>
<p class="synopsis">ERRORLOG&nbsp;[<span class="underline">UNLIMITED</span>|MAX &lt;<span class="italic">num</span>&gt;] [STOP|NOSTOP]</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3669"></a>Parameters</p>
<dl>
<dt>UNLIMITED</dt>
<dd>
<p>Tells the ALLOCATE command to write an unlimited number of errors to the error log. (Default.)</p>
</dd>
<dt>MAX <span class="italic">num</span></dt>
<dd>
<p>Specifies a maximum number of errors that ALLOCATE can write to the error log.</p>
</dd>
<dt>STOP</dt>
<dt>NOSTOP</dt>
<dd>
<p>Specifies whether to stop the allocation when ALLOCATE has written the maximum number of errors to the error log. When you specify STOP, the allocation stops. When you specify NOSTOP, the allocation continues but ALLOCATE does not write any more errors to the error log. When you have specified UNLIMITED, then the STOP and NOSTOP arguments have no effect and the allocation continues no matter how many errors occur.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3670"></a>Usage Notes</p>
<p class="subhead2"><a id="OLADM2183"></a>Formatting the Error Log</p>
<p>The ALLOCERRLOGFORMAT option determines the contents and the formatting of the error log that you specify with the ERRORLOG argument to the ALLOCATE command. You can specify a header for the error log with the ALLOCERRLOGHEADER option.</p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="OLADM747" class="refsect2"><a id="i80545"></a>
<hr />
<h2 class="refsect2">ERRORMASK</h2>
<p><a id="sthref3671"></a>Within an allocation specification, an ERRORMASK statement specifies the error conditions that you do not want to appear in the allocation error log. You specify the error log with the ERRORLOG keyword to the ALLOCATE command.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3672"></a>Syntax</p>
<p class="synopsis">ERRORMASK &lt;<span class="italic">num</span>...&gt;</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3673"></a>Parameters</p>
<dl>
<dt><span class="italic">num</span>...</dt>
<dd>
<p>The number of the error that you do not want to appear in the error log.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3674"></a>Examples</p>
<div id="OLADM2184" class="example">
<p class="titleinexample"><a id="sthref3675"></a>Example 9-41 Excluding CHILDLOCK Errors</p>
<p>To exclude a CHILDLOCK error, you would enter the following statement in the allocation specification.</p>
<pre>
ERRORMASK 10
</pre></div>
<!-- class="example" -->
<div id="OLADM2185" class="example">
<p class="titleinexample"><a id="sthref3676"></a>Example 9-42 Excluding All Allocation Errors</p>
<p>To exclude all errors, you would enter the following statement in the allocation specification.</p>
<pre>
ERRORMASK 1 2 3 4 5 6 7 8 9 10
</pre></div>
<!-- class="example" --></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="OLADM748" class="refsect2"><a id="CACFEIEC"></a>
<hr />
<h2 class="refsect2">MEASUREDIM (for allocation)</h2>
<p><a id="sthref3677"></a>Within an allocation specification, a MEASUREDIM statement identifies the name of a measure dimension that is specified in the definition of an operator variable or an argument variable. However, you cannot specify a measure dimension when it is included in the definition of the aggmap object.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3678"></a>Syntax</p>
<p class="synopsis">MEASUREDIM&nbsp;<span class="italic">name</span></p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3679"></a>Parameters</p>
<dl>
<dt><span class="italic">name</span></dt>
<dd>
<p>The name of the measure dimension. A measure dimension is a dimension that you define. The dimension values are names of existing variables.</p>
<div class="infoboxnotealso">
<p class="notep1">See also:</p>
<a href="dml_commands_1006.htm#i1005123">MEASUREDIM (for aggregation)</a> statement for the AGGMAP command</div>
</dd>
</dl>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="OLADM749" class="refsect2"><a id="i79507"></a>
<hr />
<h2 class="refsect2">RELATION (for allocation)</h2>
<p><a id="sthref3680"></a>Within an allocation specification, a RELATION statement identifies a relation that specifies the path through a dimension hierarchy and the method of the allocation. To allocate a source data down a hierarchy of a dimension, you must specify with a RELATION statement the values of the hierarchy that identify the cells of the variable that are the targets of the allocation. When the target of the allocation is a multidimensional variable, then you must include a separate RELATION statement for each dimension down which you want to allocate the source data. The order of the RELATION statements in an aggmap determines the order of the allocation. The allocation proceeds down the dimension hierarchy in the first RELATION statement, then down the second, and so on.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
Do not confuse this RELATION statement which can only be used as part of an AGGMAP command with either the RELATION command that defines a default relation for a dimension or the RELATION statement that is used as part of an AGGMAP command.</div>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3681"></a>Syntax</p>
<p class="synopsis">RELATION <span class="italic">rel-name</span> [(<span class="italic">qdr</span>. . .)] OPERATOR {<span class="italic">operator|</span>} -</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[NAOPERATOR <span class="italic">operator</span>] [REMOPERATOR <span class="italic">operator</span>] -</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[PARENTALIAS <span class="italic">dimension-alias-name</span>] -</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[ARGS&nbsp;{[FLOOR&nbsp;<span class="italic">floorval</span>]&nbsp;[CEILING&nbsp;<span class="italic">ceilval</span>]&nbsp;[MIN&nbsp;<span class="italic">minval</span>]&nbsp;[MAX&nbsp;<span class="italic">maxval]</span>&nbsp;-</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[NAHANDLE&nbsp;{<span class="underline">IGNORE</span>|CONSIDER|PREFER}]&nbsp;-</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[ADD|<span class="underline">ASSIGN</span>]&nbsp;[PROTECT&nbsp;[NONORMALIZE]&nbsp;[<span class="underline">READWRITE</span>|WRITE]&nbsp;<span class="italic">lockvalueset</span>]&nbsp;-</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[WEIGHTBY&nbsp;[ADD|<span class="underline">MULTIPLY</span>]&nbsp;[WNAFILL&nbsp;<span class="italic">nafillval</span>]&nbsp;<span class="italic">weightobj</span>]}]</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3682"></a>Parameters</p>
<dl>
<dt><span class="italic">rel-name</span></dt>
<dd>
<p>An Oracle OLAP self-relation that specifies the values of a dimension hierarchy that identify the path of allocation. The cells in the target variable identified by the values in <span class="italic">rel-name</span> receive the allocated data.</p>
</dd>
<dt><span class="italic">qdr.</span>&nbsp;.&nbsp;.</dt>
<dd>
<p>One or more qualified data references that specify a single dimension value for each dimension of the relation that is not part of the self-relation. When the self-relation has multiple hierarchies, you must provide a <span class="italic">qdr</span> for the hierarchy dimension of the self-relation dimension that limits to single values any hierarchies not involved in the allocation.</p>
</dd>
<dt>OPERATOR <span class="italic">operator</span></dt>
<dd>
<p>Specifies an allocation method described in <a href="#g1028728">Table 9-3, "Allocation Operators"</a> or returned by ALLOCOPS. The method determines the cells of the target variable for the <span class="italic">rel-name</span> relation to which ALLOCATE assigns a value. For the FIRST, LAST, HFIRST, and HLAST operators, ALLOCATE uses the order of the value in the dimension to determine the cell. The dimension order is the default logical order of the allocation dimension. There is no default operator for allocation.</p>
<div id="OLADM2186" class="tblformal">
<p class="titleintable"><a id="sthref3683"></a><a id="g1028728"></a>Table 9-3 Allocation Operators</p>
<table class="cellalignment3098" title="Allocation Operators" summary="This table describes the valid values for the operator argument that specifies the allocation method to be performed." dir="ltr">
<thead>
<tr class="cellalignment3089">
<th class="cellalignment3099" id="r1c1-t42">Operator</th>
<th class="cellalignment3099" id="r1c2-t42">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3089">
<td class="cellalignment3095" id="r2c1-t42" headers="r1c1-t42">
<p>COPY</p>
</td>
<td class="cellalignment3095" headers="r2c1-t42 r1c2-t42">
<p>Copies the allocation source to all of the target cells that have a basis data value that is not <code>NA</code>.</p>
</td>
</tr>
<tr class="cellalignment3089">
<td class="cellalignment3095" id="r3c1-t42" headers="r1c1-t42">
<p>HCOPY</p>
</td>
<td class="cellalignment3095" headers="r3c1-t42 r1c2-t42">
<p>Copies the allocation source to all of the target cells specified by the hierarchy even when the data in any of those cells is <code>NA</code>. When the source data is <code>NA</code>, then that <code>NA</code> value is not allocated to the target cells of that allocation.</p>
</td>
</tr>
<tr class="cellalignment3089">
<td class="cellalignment3095" id="r4c1-t42" headers="r1c1-t42">
<p>MIN</p>
</td>
<td class="cellalignment3095" headers="r4c1-t42 r1c2-t42">
<p>Copies the allocation source to the target that has the smallest basis data value.</p>
</td>
</tr>
<tr class="cellalignment3089">
<td class="cellalignment3095" id="r5c1-t42" headers="r1c1-t42">
<p>MAX</p>
</td>
<td class="cellalignment3095" headers="r5c1-t42 r1c2-t42">
<p>Copies the allocation source to the target that has the largest basis data value.</p>
</td>
</tr>
<tr class="cellalignment3089">
<td class="cellalignment3095" id="r6c1-t42" headers="r1c1-t42">
<p>FIRST</p>
</td>
<td class="cellalignment3095" headers="r6c1-t42 r1c2-t42">
<p>Copies the allocation source to the first target cell that has a non-<code>NA</code> basis data value.</p>
</td>
</tr>
<tr class="cellalignment3089">
<td class="cellalignment3095" id="r7c1-t42" headers="r1c1-t42">
<p>HFIRST</p>
</td>
<td class="cellalignment3095" headers="r7c1-t42 r1c2-t42">
<p>Copies the allocation source to the first target cell specified by the hierarchy even when the current data value of that cell is <code>NA</code></p>
</td>
</tr>
<tr class="cellalignment3089">
<td class="cellalignment3095" id="r8c1-t42" headers="r1c1-t42">
<p>LAST</p>
</td>
<td class="cellalignment3095" headers="r8c1-t42 r1c2-t42">
<p>Copies the allocation source to the last target cell that has a non-<code>NA</code> basis data value.</p>
</td>
</tr>
<tr class="cellalignment3089">
<td class="cellalignment3095" id="r9c1-t42" headers="r1c1-t42">
<p>HLAST</p>
</td>
<td class="cellalignment3095" headers="r9c1-t42 r1c2-t42">
<p>Copies the allocation source to the last target cell specified by the hierarchy even when the current data value of that cell is <code>NA</code></p>
</td>
</tr>
<tr class="cellalignment3089">
<td class="cellalignment3095" id="r10c1-t42" headers="r1c1-t42">
<p>EVEN</p>
</td>
<td class="cellalignment3095" headers="r10c1-t42 r1c2-t42">
<p>Divides the allocation source by the number of target cells that have non-<code>NA</code> basis data values and applies the quotient to each target cell.</p>
</td>
</tr>
<tr class="cellalignment3089">
<td class="cellalignment3095" id="r11c1-t42" headers="r1c1-t42">
<p>HEVEN</p>
</td>
<td class="cellalignment3095" headers="r11c1-t42 r1c2-t42">
<p>Divides the allocation source by the number of target cells, including the ones that have <code>NA</code> values, and applies the quotient to each target cell.</p>
</td>
</tr>
<tr class="cellalignment3089">
<td class="cellalignment3095" id="r12c1-t42" headers="r1c1-t42">
<p>PROPORTIONAL</p>
</td>
<td class="cellalignment3095" headers="r12c1-t42 r1c2-t42">
<p>Divides the allocation source by the sum of the data values of the target cells that have non-<code>NA</code> basis data values, multiplies the basis data value of each target cell by the quotient, and applies the resulting data to the target cell.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></dd>
<dt>NAOPERATOR <span class="italic">operator</span></dt>
<dd>
<p>The <span class="italic">operator</span> after the NAOPERATOR keyword specifies the operator that the ALLOCATE operation uses when it encounters an <code>NA</code> or lock-based deadlock. Valid operators are HFIRST, HLAST, and HEVEN which are described in <a href="#g1028728">Table 9-3, "Allocation Operators"</a>.</p>
</dd>
<dt>REMOPERATOR <span class="italic">operator</span></dt>
<dd>
<p>The <span class="italic">operator</span> after the REMOPERATOR keyword specifies the operator that the ALLOCATE operation uses when storing a remainder produced by an allocation. For example, assume you allocate the <code>INTEGER</code> 10 to three cells at the same level in a hierarchy, there is a remainder of 1. The REMOPERATOR specifies where you want the allocation operation to store this remainder. Valid operators for REMOPERATOR are MIN, MAX, FIRST, HFIRST, LAST, and HLAST which are described in <a href="#g1028728">Table 9-3, "Allocation Operators"</a>.</p>
</dd>
<dt>ARGS</dt>
<dd>
<p>Indicates additional arguments specify additional parameters for the allocation operation. All of these arguments apply uniformly to the dimension hierarchy specified by <span class="italic">rel-name</span>.</p>
</dd>
<dt>PARENTALIAS <span class="italic">dimension-alias-name</span></dt>
<dd>
<p>Specifies specialized allocation depending on the parent (for example, weighting by parent or child). For <span class="italic">dimension-alias-name</span>, specify the name of the alias for the dimension of <span class="italic">rel-name</span>.</p>
</dd>
<dt>ARGS <span class="italic">argument</span>...</dt>
<dd>
<p>One or more arguments after the ARGS keyword that specify additional parameters for the allocation operation. All of these arguments apply uniformly to the dimension hierarchy specified by <span class="italic">rel-name</span>.</p>
</dd>
<dt>FLOOR <span class="italic">floorval</span></dt>
<dd>
<p>Specifies that when an allocated target data value is less than <span class="italic">floorval</span>, the data allocated to the target cell is <code>NA</code>. This argument applies to the relation only when the PROPORTIONAL operator is specified.</p>
</dd>
<dt>CEILING <span class="italic">ceilval</span></dt>
<dd>
<p>Specifies that when an allocated target data value is greater than <span class="italic">ceilval</span>, the data allocated to the target cell is <code>NA</code>. This argument applies to the relation only when the PROPORTIONAL operator is specified.</p>
</dd>
<dt>MIN <span class="italic">minval</span></dt>
<dd>
<p>Specifies that when an allocated target data value is less than <span class="italic">minval</span>, the data allocated to the target cell is <span class="italic">minval</span>.</p>
</dd>
<dt>MAX <span class="italic">maxval</span></dt>
<dd>
<p>Specifies that when an allocated target data value is greater than <span class="italic">maxval</span>, the value allocated to the target cell is <span class="italic">maxval</span>.</p>
</dd>
<dt>NAHANDLE</dt>
<dd>
<p>Specifies how ALLOCATE treats <code>NA</code> values. Valid only when the OPERATOR is MIN or MAX.</p>
<ul>
<li>
<p><span class="syntaxinlinebold">IGNORE</span> specifies that ALLOCATE does not consider <code>NA</code> values in a MIN or MAX operation. (Default)</p>
</li>
<li>
<p><span class="syntaxinlinebold">CONSIDER</span> specifies that ALLOCATE treats an <code>NA</code> value as a zero; however, when the data value of a target cell is actually zero, the zero cell receives the allocated data value and not the <code>NA</code> cell.</p>
</li>
<li>
<p><span class="syntaxinlinebold">PREFER</span> specifies that ALLOCATE treats an <code>NA</code> value as a zero and the <code>NA</code> has priority over a zero value, so the <code>NA</code> cell receives the allocated data value and not the cell with the actual zero value.</p>
</li>
</ul>
</dd>
<dt>ADD</dt>
<dd>
<p>Specifies that ALLOCATE adds the allocated data to the current data in the target cell.</p>
</dd>
<dt>ASSIGN</dt>
<dd>
<p>Specifies that ALLOCATE replaces the data in the target cell with the allocated data, which is the default behavior.</p>
</dd>
<dt>PROTECT <span class="italic">lockvalueset</span></dt>
<dd>
<p>Specifies a set of dimension values to lock so that they cannot be targets of the allocation. Before allocating the source data, the allocation operation normalizes the sources by subtracting the data values of the specified locked cells from the source data.</p>
</dd>
<dt>NONORMALIZE</dt>
<dd>
<p>Specifies that the allocation operation does not normalize the source data. Using NONORMALIZE effectively removes from the allocation the values of the hierarchy at and below the dimension values specified by <span class="italic">lockvalueset</span>.</p>
</dd>
<dt>READWRITE</dt>
<dd>
<p>Specifies that the locked data values cannot be used as source data in a subsequent allocation, thereby locking the data of the hierarchy below the <span class="italic">lockvalueset</span> values.</p>
</dd>
<dt>WRITE</dt>
<dd>
<p>Specifies that the allocation cannot store data values in the cells identified by the <span class="italic">lockvalueset</span> dimension values but the allocation can use the data in those cells as source data in its subsequent steps. However, when in the aggmap you include a SOURCEVAL statement that specifies <code>NA</code> or <code>ZERO</code> and the locked cell is the source of an allocation, then ALLOCATE sets the value of the locked cell to <code>NA</code> or zero after the allocation.</p>
</dd>
<dt>WEIGHTBY</dt>
<dd>
<p>Specifies that the allocation uses a the value specified by <span class="italic">weightobj</span>. Using this clause allows for processes such as unit or currency conversion.</p>
</dd>
<dt>ADD</dt>
<dd>
<p>Specifies that ALLOCATE adds the value specified by <span class="italic">weightobj</span> to the existing data value of the target and assigns the sum to the target cell.</p>
</dd>
<dt>MULTIPLY</dt>
<dd>
<p>(Default) Specifies that ALLOCATE multiplies the value specified by <span class="italic">weightobj</span> by the data value of the target and assigning the product.</p>
</dd>
<dt>WNAFILL</dt>
<dd>
<p>Specifies that ALLOCATE replaces <code>NA</code> values in a cell before applying the value specified by <span class="italic">weightobj</span> to the <span class="italic">nafillval</span> value.</p>
</dd>
<dt><span class="italic">nafillval</span></dt>
<dd>
<p>The value that the ALLOCATE replaces <code>NA</code> values with. When you specify the ADD option to the WEIGHTBY clause, the default <code>NA</code> fill value is <code>0</code>; in all other cases, the default <code>NA</code> fill value is <code>1</code>.</p>
</dd>
<dt><span class="italic">weightobj</span></dt>
<dd>
<p>The name of an variable, formula, or relation whose value or values are the weights that Oracle OLAP applies to the allocated data just before it is stored in the target cell. When a relation is used, the target variable is referenced based on the weight relation and the cell is applied to the allocation target cell.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3684"></a>Usage Notes</p>
<p class="subhead2"><a id="OLADM2187"></a>Specifying the Path of the Allocation</p>
<p>The path of the allocation is the route the allocation system takes to go from the source data to the target data. Very different results derive from different allocation paths. You specify the path with the RELATION statements that you enter in the aggmap. The relation objects in the RELATION statements and the order of those statements specify the path and the method of allocation.</p>
<p>The allocation path goes from any level in the hierarchy of a dimension to any lower level of the hierarchy. You use a relation object that relates the members of the hierarchy to each other (a self-relation) to identify the elements of the hierarchy that you want to participate in the allocation. The allocation proceeds down the hierarchy of the dimension in the first RELATION statement in the aggmap, then down the hierarchy of the second RELATION statement, and so on.</p>
<p>When the dimension has multiple hierarchies, you must use the <span class="italic">qdr</span> argument in the RELATION statement to specify which hierarchy to use for the allocation. The hierarchy that you specify with a relation must not contain a circular relation (for example, one in which dimension value <code>A</code> relates to dimension value <code>B</code> which relates to dimension value <code>C</code> which relates to dimension value <code>A</code>).</p>
<p class="subhead2"><a id="OLADM2188"></a>Types of Allocation Paths</p>
<p>You can allocate values from a source to a target with any one of the following types of paths:</p>
<ul>
<li>
<p>Direct allocation path &shy;&mdash; You can allocate values directly from a source to the final target cells with no allocations to intermediate nodes of the hierarchy. For example, you can allocate source data values specified by dimension values at the <code>Quarter</code> level of a hierarchical <code>time</code> dimension to those at the <code>Month</code> level or those specified by dimension values at the <code>Year</code> level to those at the <code>Month</code> level.</p>
</li>
<li>
<p>Recursive descent hierarchy path &shy;&mdash; You can allocate values to intermediate nodes of the hierarchy and then to final target cells. For example, you can allocate source data values specified by dimension values at the <code>Category</code> level of a <code>product</code> dimension to those at the <code>Subcategory</code> level and then to those at the <code>ProductID</code> level.</p>
</li>
<li>
<p>Multidimensional allocation path &shy;&mdash; You can allocate values first down one dimension and then down another dimension. The allocations can be direct or recursive or a combination of both. The results might vary depending on the order of the allocation.</p>
</li>
<li>
<p>Simultaneous multidimensional allocation path &shy;&mdash; You can do a direct allocation of values simultaneously to variable cells specified by multiple dimensions by creating a composite dimension that specifies the non-<code>NA</code> cells of the variable to which you want to allocate values. You then use that composite as the basis of the allocation.</p>
</li>
</ul>
<p class="subhead2"><a id="OLADM2189"></a>Restrictions When Designing a RELATION Statement for Allocation</p>
<p>Keep the following restrictions in mind when designing a RELATION statement:</p>
<ul>
<li>
<p>Oracle OLAP can perform allocations on only one hierarchy in a dimension in one execution of the ALLOCATE command. When a dimension has multiple hierarchies, then you must supply a <span class="italic">qdr</span> argument to limit the relation to only one hierarchy.</p>
</li>
<li>
<p>An allocation specification must include either a RELATION statement or a VALUESET statement.</p>
</li>
<li>
<p>Only one RELATION statement or VALUESET statement may be used for each dimension in the allocation specification.</p>
</li>
</ul>
<p class="subhead2"><a id="OLADM2190"></a>Locking Cells in the Allocation Path</p>
<p>Sometimes you want a cell to retain its existing value and to not be affected by an allocation. You can lock a value of the hierarchy of the dimension and thereby remove that value from the allocation path.When you lock a value above the detail level in a hierarchy, then you remove the branch of the hierarchy below that value from the allocation. To lock a value, use the PROTECT argument to the RELATION statement.</p>
<p>For example, when you want to allocate a yearly budget that you revise monthly, then you would set the value of the <code>budget</code> at the <code>Year</code> level of the <code>time</code> dimension hierarchy. You would allocate data to the elements that are at the <code>Month</code> level. As the year progresses, you would enter the actual data for a month and then lock that element and reallocate the remaining yearly budget value to see the new monthly targets that are required to meet the annual goal.</p>
<p>When you lock an element, you can specify whether the source value is renormalized. By default, when you lock an element of the hierarchy, the value of the cell of the target variable specified by that element is subtracted from the source value and the remainder is allocated to the target cells. When you do not want the source renormalized during the allocation, specify NONORMALIZE after the PROTECT argument.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="i1020626"></a>Examples</p>
<p>For an example of using RELATION statements in an allocation statement, see the examples in the <a href="#i78780">ALLOCMAP</a> command, especially <a href="#CACFGGBG">Example 9-40, "Entering RELATION Statements in an Allocation Specification"</a>.</p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="OLADM750" class="refsect2"><a id="i79296"></a>
<hr />
<h2 class="refsect2">SOURCEVAL</h2>
<p><a id="sthref3685"></a>Within an allocation specification, a SOURCE VAL statement specifies the value that the ALLOCATE command assigns to a source cell in an allocation operation after it successfully allocates the value that the cell contained before the allocation.</p>
<p>The default value of SOURCEVAL is <code>NA</code>, which means that ALLOCATE sets the value of each of the allocated source cells to <code>NA</code> following the allocation. When you specify CURRENT as the SOURCEVAL, then the allocated source cells retain the values that they had before the allocation. When you specify <code>ZERO</code> as the SOURCEVAL, then ALLOCATE assigns a zero value to each source cell that is allocated.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3686"></a>Syntax</p>
<p class="synopsis">SOURCEVAL&nbsp;[CURRENT|ZERO|<span class="underline">NA</span>]</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3687"></a>Parameters</p>
<dl>
<dt>CURRENT</dt>
<dd>
<p>Specifies that the value of a source cell after the allocation equals its value before the allocation.</p>
</dd>
<dt>ZERO</dt>
<dd>
<p>Specifies that the value of a source cell after the allocation is zero.</p>
</dd>
<dt>NA</dt>
<dd>
<p>Specifies that the value of a source cell after the allocation is <code>NA</code>. (Default value.)</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="OLADM751" class="refsect2"><a id="CACDJDFE"></a>
<hr />
<h2 class="refsect2">VALUESET</h2>
<p><a id="ABC1127962"></a>Within an allocation specification, a VALUESET statement specifies the target dimension values of an allocation. A dimensioned valueset can be used to specify the allocation targets for an entire non-hierarchical dimension such as a measure or line dimension.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
Keep the following restrictions in mind:
<ul>
<li>
<p>An allocation specification must include at least one RELATION statement or a VALUESET statement.</p>
</li>
<li>
<p>You can only specify one RELATION statement or VALUESET statement for each dimension specified in the allocation specification.</p>
</li>
</ul>
</div>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3688"></a>Syntax</p>
<p class="synopsis">VALUSET <span class="italic">vs-name</span>[(<span class="italic">nondimvalueset</span>)| <span class="italic">qdr</span>... ] OPERATOR <span class="italic">operator</span> | <span class="italic">opvar</span> &ndash;</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[NAOPERATOR <span class="italic">text -exp</span>] [REMOPERATOR <span class="italic">text -exp</span>] -</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[ARGS [FLOOR <span class="italic">floorval</span>] [CEILING <span class="italic">ceilval</span>] &ndash;</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[MIN <span class="italic">minval</span>] [MAX <span class="italic">maxval</span>] &ndash;</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[ADDT [ {<span class="underline">TRUE</span>|FALSE} | ASSIGN] &ndash;</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[{PROTECTRW| PROTECTW} [NONORMALIZE] <span class="italic">lockvalueset</span>] &ndash;</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[WEIGHTBY [ADD] <span class="italic">weightobj</span> [WNAFILL <span class="italic">nafillval</span>]] | -</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[WEIGHTBY WEIGHTVAR <span class="italic">wobjr</span>]]</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3689"></a>Parameters</p>
<dl>
<dt><span class="italic">vs-name</span></dt>
<dd>
<p>Specifies the name of a valueset object that specifies the values of a dimension which are the path of allocation. The cells in the target variable identified by the values in <span class="italic">vs-name</span> receive the allocated data.</p>
</dd>
<dt><span class="italic">nondimvalueset</span></dt>
<dd>
<p>When <span class="italic">vs-name</span> is a dimensioned valueset, specifies a nondimensioned valueset that is the status used to loop the valueset dimension. When you do not include <span class="italic">nondimvalueset</span> or <span class="italic">qdr</span>, Oracle OLAP uses the default logical order of the dimensions, not its current status.</p>
</dd>
<dt><span class="italic">qdr</span></dt>
<dd>
<p>When <span class="italic">vs-name</span> is a non-dimensioned valueset, one or more qualified data references that specify the dimension values to use when allocating data.</p>
</dd>
<dt>OPERATOR <span class="italic">operator</span></dt>
<dd>
<p>The <span class="italic">operator</span> argument after the OPERATOR keyword is a text expression that is an operator type described in <a href="#g1028728">Table 9-3, "Allocation Operators"</a>. The operator type specifies the method of the allocation. The method determines the cells of the target variable for the <span class="italic">vs-name</span> relation to which ALLOCATE assigns a value. Unless you have specified a different status using <span class="italic">dimorder valueset</span>, for the FIRST, LAST, HFIRST, and HLAST operators, ALLOCATE uses the default logical order of the allocation dimension to determine the cell. There is no default operator for allocation.</p>
</dd>
<dt>OPERATOR <span class="italic">opvar</span></dt>
<dd>
<p>The <span class="italic">opvar</span> argument after OPERATOR keyword specifies a <code>TEXT</code> variable that specifies different the operation for each of the values of a dimension. The values of the variable are the allocation operators described in <a href="#g1028728">Table 9-3, "Allocation Operators"</a>. An operator variable is used to change the allocation operator with the values of one dimension. The <span class="italic">opvar</span> argument is used with the following types of dimensions:</p>
<ul>
<li>
<p>Measure dimension -- Changes the allocation method depending upon the variable being allocated. The values of the measure dimension are the names of the variables to be allocated. It dimensions a text variable whose values identify the operation to be used to allocate each measure. The allocation specification must include a MEASUREDIM (for allocation) statement that identifies the measure dimension.</p>
</li>
<li>
<p>Line item dimension -- Changes the allocation method depending upon the line item being allocated. The line item dimension is typically non-hierarchical and identifies financial allocations. The line item dimension is used both to dimension the data variable and to dimension a text variable that identifies the operation to be used to allocate each item. The operation variable is typically used to allocate line items over time.</p>
</li>
</ul>
<p>The <span class="italic">opvar</span> argument cannot be dimensioned by the dimension it is used to allocate. For example, when you want to specify different operations for the <code>geography</code> dimension, then <span class="italic">opvar</span> cannot be dimensioned by <code>geography</code>.</p>
<div class="infoboxnotealso">
<p class="notep1">Tip:</p>
To minimize the amount of paging for the operator variable, define the <span class="italic">opvar</span> variable as type of <code>TEXT</code> with a fixed width of <code>8</code>.</div>
</dd>
<dt>NAOPERATOR <span class="italic">text-exp</span></dt>
<dd>
<p>The <span class="italic">operator</span> after the NAOPERATOR keyword specifies the operator that the ALLOCATE operation uses when it encounters an <code>NA</code> or lock-based deadlock. Valid operators are HFIRST, HLAST, and HEVEN which are described in <a href="#g1028728">Table 9-3, "Allocation Operators"</a>.</p>
</dd>
<dt>REMOPERATOR <span class="italic">text-exp</span></dt>
<dd>
<p>The <span class="italic">operator</span> after the REMOPERATOR keyword specifies the operator that the ALLOCATE operation uses when storing a remainder produced by an allocation. For example, assume you allocate the <code>INTEGER</code> 10 to three cells at the same level in a hierarchy, there is a remainder of 1. The REMOPERATOR specifies where you want the allocation operation to store this remainder. Valid operators for REMOPERATOR are MIN, MAX, FIRST, HFIRST, LAST, and HLAST which are described in <a href="#g1028728">Table 9-3, "Allocation Operators"</a>.</p>
</dd>
<dt>ARGS</dt>
<dd>
<p>Indicates that additional arguments specify additional parameters for the allocation operation. All of these arguments apply uniformly to the valueset.</p>
</dd>
<dt>FLOOR <span class="italic">floorval</span></dt>
<dd>
<p>Specifies that when an allocated target value falls below the value specified in <span class="italic">floorval</span>, Oracle OLAP stores the value as NA.</p>
</dd>
<dt>CEILING <span class="italic">ceilval</span></dt>
<dd>
<p>Specifies that when an allocated target value exceeds the value specified in <span class="italic">ceilval</span>, then Oracle OLAP stores the value as NA.</p>
</dd>
<dt>MIN <span class="italic">minval</span></dt>
<dd>
<p>Specifies that when an allocated target value falls below the value specified <span class="italic">minval</span>, then Oracle OLAP stores the value of <span class="italic">minval</span> in the target.</p>
</dd>
<dt>MAX <span class="italic">maxval</span></dt>
<dd>
<p>Specifies that when an allocated target value exceeds the value specified <span class="italic">maxval</span>, then Oracle OLAP stores the value of <span class="italic">maxval</span> in the target</p>
</dd>
<dt>ADDT {<span class="underline">TRUE</span>|FALSE}</dt>
<dd>
<p>The ADDT phrase specifies the sign of the addition when Oracle OLAP adds target cells to the existing contents of the target cell:</p>
<ul>
<li>
<p><code>TRUE</code> specifies that the results of the allocation are added to the target. (Default)</p>
</li>
<li>
<p><code>FALSE</code> specifies that the results of the allocation are subtracted from the target cell.</p>
</li>
</ul>
</dd>
<dt>PROTECTRW <span class="italic">lockvalueset</span></dt>
<dd>
<p>Specifies that the dimension members specified by <span class="italic">lockvalueset</span> cannot be the targets or source values of allocation. Using this phrase allows users to specify an allocation "lock" on a hierarchical subtree. The current contents of the target cell are subtracted from the source and the source and basis is renormalized.</p>
</dd>
<dt>PROTECTW <span class="italic">lockvalueset</span></dt>
<dd>
<p>Specifies that the dimension members specified by <span class="italic">lockvalueset</span> cannot be the targets of an allocation. However, these target cells are used as the source values for subsequent steps in the allocation process. When the SOURCEVAL statement is set to <code>0</code> (zero) or <code>NA</code> and these values are reallocated, they are set appropriately.</p>
</dd>
<dt>NONORMALIZE</dt>
<dd>
<p>Specifies that Oracle OLAP should not renormalize the source and basis based on the protected cells. Specifying this keyword has an effect similar to removing a sub-branch from a hierarchy. Frequently, when you use this keyword, if, after allocation, data is aggregated from the allocation level, the source cell probably does not contain the original allocated amount</p>
</dd>
<dt>WEIGHTBY <span class="italic">weightobj</span></dt>
<dd>
<p>Specifies a weight that should be applied to the target cell just before it is stored. Using this phrase allows for processes such and unit or currency conversion. Value weight objects are variables, formulas and relations. When a relation is used, the target variable is referenced based on the weight relation, and the cell is applied the allocation target cell.</p>
</dd>
<dt>ADD</dt>
<dd>
<p>Specifies that Oracle OLAP adds the value of the weight to the allocation target rather than using multiplication.</p>
</dd>
<dt>WNAFILL <span class="italic">nafillval</span></dt>
<dd>
<p>Specifies the default value of the weight variable that should be used. When you do not include an <span class="syntaxinline">ADD</span> clause, the default value of <span class="syntaxinlineitalic">nafillval</span> is <code>1</code>. When you include the <span class="syntaxinline">ADD</span> clause, the default value of <span class="syntaxinlineitalic">nafillval</span> is <code>0</code> (zero).</p>
</dd>
<dt>WEIGHTBY WEIGHTVAR <span class="italic">wobj</span></dt>
<dd>
<p>Specifies that the allocated data should be weighted. The <span class="italic">wobj</span> argument is the name of a variable, relation, or formula whose values are the weights that Oracle OLAP applies to the allocated data just before it is stored in the target cell. Using this clause allows for processes such as unit or currency conversion and enables you to use different weight objects with the different operators specified in the operator variable you created for the OPERATOR <span class="italic">opvar</span> clause. <a id="sthref3690"></a></p>
</dd>
</dl>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" --></div>
<!-- class="refsect1" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment3088">
<tr>
<td class="cellalignment3095">
<table class="cellalignment3093">
<tr>
<td class="cellalignment3092"><a href="dml_commands_1011.htm"><img width="24" height="24" src="../../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment3092"><a href="dml_commands_1013.htm"><img width="24" height="24" src="../../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;1994, 2013,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment3097">
<table class="cellalignment3091">
<tr>
<td class="cellalignment3092"><a href="../../index.htm"><img width="24" height="24" src="../../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment3092"><a href="../../nav/portal_booklist.htm"><img width="24" height="24" src="../../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment3092"><a href="toc.htm"><img width="24" height="24" src="../../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment3092"><a href="index.htm"><img width="24" height="24" src="../../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment3092"><a href="../../nav/mindx.htm"><img width="24" height="24" src="../../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment3092"><a href="../../dcommon/html/feedback.htm"><img width="24" height="24" src="../../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>
</body>
</html>
