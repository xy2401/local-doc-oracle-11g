<!DOCTYPE html>
<html lang="en">
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1">
<meta charset="utf-8">
<title>CALL</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Version 5.1.2 Build 742" />
<meta name="dcterms.created" content="2013-11-14T21:21:41Z" />
<meta name="robots" content="all" />
<meta name="dcterms.title" content="OLAP DML Reference" />
<meta name="dcterms.identifier" content="E17122-08" />
<meta name="dcterms.isVersionOf" content="OLADM" />
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;1994, 2013,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved." />
<link rel="Start" href="../../index.htm" title="Home" type="text/html" />
<link rel="Copyright" href="../../dcommon/html/cpyr.htm" title="Copyright" type="text/html" />

<script type="application/javascript"  src="../../dcommon/js/headfoot.js"></script>
<script type="application/javascript"  src="../../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html" />
<link rel="Index" href="index.htm" title="Index" type="text/html" />
<link rel="Prev" href="dml_commands_1018.htm" title="Previous" type="text/html" />
<link rel="Next" href="dml_commands_1020.htm" title="Next" type="text/html" />
<link rel="alternate" href="../e17122.pdf" title="PDF version" type="application/pdf" />
<link rel="schema.dcterms" href="http://purl.org/dc/terms/" />
<link rel="stylesheet" href="../../dcommon/css/fusiondoc.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/header.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/footer.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/fonts.css">
<link rel="stylesheet" href="../../dcommon/css/foundation.css">
<link rel="stylesheet" href="../../dcommon/css/codemirror.css">
<link rel="stylesheet" type="text/css" title="Default" href="../../nav/css/html5.css">
<link rel="stylesheet" href="../../dcommon/css/respond-480-tablet.css">
<link rel="stylesheet" href="../../dcommon/css/respond-768-laptop.css">
<link rel="stylesheet" href="../../dcommon/css/respond-1140-deskop.css">
<script type="application/javascript" src="../../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">435/593</span> <!-- End Header --><a id="i79175"></a>
<hr />
<div id="OLADM770" class="refsect1">
<h1 class="refsect1">CALL</h1>
<p><a id="sthref3793"></a><a id="sthref3794"></a><a id="sthref3795"></a><a id="sthref3796"></a><a id="sthref3797"></a>The CALL command invokes a program. When the program has arguments, which are always enclosed in parentheses, it passes these arguments to the called program.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3798"></a>Syntax</p>
<p class="synopsis">CALL&nbsp;<span class="italic">program-name&nbsp;</span>[(<span class="italic">arg</span> ...)]</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3799"></a>Parameters</p>
<dl>
<dt><span class="italic">program-name</span></dt>
<dd>
<p>The name of the program to be called.</p>
</dd>
<dt><span class="italic">arg</span></dt>
<dd>
<p>One or more optional arguments expected by the called program. These arguments can be declared in the called program with ARGUMENT, or they can be referenced in the program with ARG. If the program uses the ARGUMENT statement, when you use CALL to invoke the program, specify the arguments so that they match the positions of the arguments declared in the called program.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3800"></a>Usage Notes</p>
<p class="subhead2"><a id="OLADM2233"></a>Dimension Arguments</p>
<p>When you pass a dimension value or dimension name as an argument, you must enclose the exact text value in single quotes, for example, <code>'Jan96'</code>. When the program arguments are declared with the ARGUMENT statement, you can pass a text expression that evaluates to a text value.</p>
<p class="subhead2"><a id="OLADM2234"></a>Program Return Values</p>
<p>When you use CALL to invoke a program that returns a value, the return value is discarded. A program can use the CALLTYPE function to determine whether it was invoked as a function, as a command, or by using CALL.</p>
<p class="subhead2"><a id="OLADM2235"></a>ARGUMENT Command or ARG Function</p>
<p>The called program can process arguments using either the ARGUMENT statement or the ARG function. In a program that has been invoked with CALL or as a function, the ARGS and ARGFR functions always return <code>NA</code>.</p>
<p>When CALL invokes a program whose arguments are not declared with the ARGUMENT statement, the arguments passed can be referenced with the ARG function. However, the ARG function is a text function and, consequently, interprets all arguments passed as text values. When you want to pass NTEXT arguments, be sure to declare them using ARGUMENT instead of using ARG. With ARG, NTEXT arguments are converted to TEXT, and this can result in data loss when the NTEXT values cannot be represented in the database character set.</p>
<p class="subhead2"><a id="OLADM2236"></a>ARGUMENT Statement Processing</p>
<p>When a program is invoked with CALL or as a function, the following two-step process occurs. When an error occurs in either step, the program is not executed.</p>
<ol>
<li>
<p>The specified data types are established. Argument expressions specified by the calling program are evaluated left to right, and their data types are identified. Any expression representing a dimension value can be a text (<code>TEXT</code> or <code>ID</code>), numeric (<code>INTEGER</code>, <code>DECIMAL</code>, and so on), or RELATION value. An error in one argument expression stops the process.</p>
</li>
<li>
<p>Each specified data type is matched with the declared data type. Argument expressions are matched by position with the declared arguments in the called program. The first argument expression is matched with the first declared argument variable, the second argument expression is matched with the second declared argument variable, and so on. Each expression is converted in turn to the declared data type of the argument variable.</p>
</li>
</ol>
<p>When an argument variable is declared as a dimension value, the matching value passed from the calling program can be <code>TEXT</code> or <code>ID</code> (representing a value of the specified dimension), numeric (representing a logical dimension position), or RELATION (representing a physical dimension position).When the matching value is a non-integer numeric value (for example, <code>DECIMAL</code>), it is rounded to the nearest <code>INTEGER</code> to represent a logical dimension position.</p>
<p>When an argument variable is declared as something other than a dimension value, and the matching value from the calling program is a RELATION value, an error occurs. When you want to pass a RELATION value that is received as a <code>TEXT</code> argument, use the CONVERT function to convert the value in the program's argument list.</p>
<p class="subhead2"><a id="OLADM2237"></a>ARGUMENT Statement with Extra Arguments</p>
<p>When the calling program specifies more arguments than are declared in the called program, the extra arguments are ignored. When the calling program specifies fewer arguments than are declared in the called program, the extra argument variables are given <code>NA</code> values.</p>
<p class="subhead2"><a id="OLADM2238"></a>ARGUMENT Statement Passing by Value</p>
<p>When arguments are declared with the ARGUMENT statement, they are passed <span class="italic">by value</span> to a program. Consequently, the called program is given only the <span class="italic">value</span> of an argument, without access to any analytic workspace object to which it might be related. However, when the name of an analytic workspace object is specified as an argument enclosed in single quotes, the value of the analytic workspace object is not passed. Instead, the name of the object is passed as a text string. See <a href="#i79993">Example 9-59, "Calling a Program or Function"</a>.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3801"></a>Examples</p>
<div id="OLADM2239" class="example">
<p class="titleinexample"><a id="i79993"></a>Example 9-59 Calling a Program or Function</p>
<p>This example illustrates how two programs, <code>roundup.p</code> and <code>roundup.f</code>, are used in different ways to evaluate data and produce output.</p>
<p>The <code>roundup.p</code> program accepts the name of a decimal variable as a text string and produces a report of that variable's values rounded to the nearest <code>INTEGER</code>. The <code>roundup.f</code> program also accepts the name of a decimal variable. However, instead of passing the name of the variable as a text string, the variable's value is passed as an argument. <code>roundup.f</code> does not produce a report. Instead, it returns each of the values of the decimal variable, rounded to the nearest <code>INTEGER</code>.</p>
<p>The <code>roundup.p</code> program is invoked using CALL and includes a REPORT statement. In contrast, <code>roundup.f</code> is invoked as a user-defined function whose return value is then used as an argument to a REPORT statement.</p>
<p>The <code>roundup.p</code> program uses ARGUMENT to declare a text argument. When invoked, <code>roundup.p</code> uses the argument as the name of a decimal variable. The calling program passes the name of the variable to give the called program access to <span class="italic">all</span> the values of the dimensioned variable. When the calling program passed the variable itself, instead of its name, only a <span class="italic">single</span> value would have been accessible to the called program. This program does not return a value; it produces a report.</p>
<pre>
DEFINE roundup.p PROGRAM INTEGER
PROGRAM
ARGUMENT varname TEXT
Report Down Line Across Month: Heading 'VARNAME' -
   IF INTPART(&amp;varname) EQ &amp;varname -
   THEN &amp;varname ELSE INTPART(&amp;varname) + 1 
END
</pre>
<p>The following statements</p>
<pre>
LIMIT division TO 1
LIMIT month TO 1 TO 4
DECIMALS = 0
CALL roundup.p('actual')
</pre>
<p>produce the following report.</p>
<pre>
DIVISION: CAMPING
               ----------------- Varname------------------
               -------------------MONTH-------------------
LINE             Jan95      Feb95      Mar95      Apr95
-------------- ---------- ---------- ---------- ----------
revenue           533,363    572,797    707,198    968,858
cogs              360,811    400,902    478,982    641,716
gross.margin      172,553    171,895    228,217    327,143
marketing          37,370     38,867     51,224     69,439
selling            89,008     86,458    102,233    139,567
r.d                24,308     23,400     39,943     57,186
opr.income         21,868     23,171     34,819     60,952
taxes              15,971     16,320     23,030     27,584
net.income          5,898      6,851     11,789     33,368
</pre>
<p>Another way to produce the same report is to write a user-defined function that can be used as an argument to the REPORT statement as illustrated in the following program named <code>roundup.f</code>.</p>
<pre>
DEFINE roundup.f PROGRAM INTEGER
PROGRAM
ARGUMENT realval DECIMAL
IF realval EQ INTPART(realval)
THEN RETURN INTPART(realval)
ELSE RETURN INTPART(realval) + 1
END
</pre>
<p>The following statements</p>
<pre>
LIMIT division TO 1
LIMIT month TO 1 TO 4
DECIMALS = 0
REPORT DOWN line ACROSS month: roundup.f(actual)
</pre>
<p>produce the following report.</p>
<pre>
DIVISION: CAMPING
               ------------ ROUNDUP.F(ACTUAL)-------------
               -------------------MONTH-------------------
LINE             Jan95      Feb95      Mar95      Apr95
-------------- ---------- ---------- ---------- ----------
revenue           533,363    572,797    707,198    968,858
cogs              360,811    400,902    478,982    641,716
gross.margin      172,553    171,895    228,217    327,143
marketing          37,370     38,867     51,224     69,439
selling            89,008     86,458    102,233    139,567
r.d                24,308     23,400     39,943     57,186
opr.income         21,868     23,171     34,819     60,952
taxes              15,971     16,320     23,030     27,584
net.income          5,898      6,851     11,789     33,368 
</pre></div>
<!-- class="example" -->
<p>(Compare the <code>roundup.f</code> program with the <code>roundup.p</code> program. <code>roundup.f</code> returns a value; it does not produce a report.)</p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment3088">
<tr>
<td class="cellalignment3095">
<table class="cellalignment3093">
<tr>
<td class="cellalignment3092"><a href="dml_commands_1018.htm"><img width="24" height="24" src="../../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment3092"><a href="dml_commands_1020.htm"><img width="24" height="24" src="../../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;1994, 2013,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment3097">
<table class="cellalignment3091">
<tr>
<td class="cellalignment3092"><a href="../../index.htm"><img width="24" height="24" src="../../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment3092"><a href="../../nav/portal_booklist.htm"><img width="24" height="24" src="../../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment3092"><a href="toc.htm"><img width="24" height="24" src="../../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment3092"><a href="index.htm"><img width="24" height="24" src="../../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment3092"><a href="../../nav/mindx.htm"><img width="24" height="24" src="../../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment3092"><a href="../../dcommon/html/feedback.htm"><img width="24" height="24" src="../../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>
</body>
</html>
