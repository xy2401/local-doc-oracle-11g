<!DOCTYPE html>
<html lang="en">
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1">
<meta charset="utf-8">
<title>CHGDFN</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Version 5.1.2 Build 742" />
<meta name="dcterms.created" content="2013-11-14T21:21:42Z" />
<meta name="robots" content="all" />
<meta name="dcterms.title" content="OLAP DML Reference" />
<meta name="dcterms.identifier" content="E17122-08" />
<meta name="dcterms.isVersionOf" content="OLADM" />
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;1994, 2013,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved." />
<link rel="Start" href="../../index.htm" title="Home" type="text/html" />
<link rel="Copyright" href="../../dcommon/html/cpyr.htm" title="Copyright" type="text/html" />

<script type="application/javascript"  src="../../dcommon/js/headfoot.js"></script>
<script type="application/javascript"  src="../../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html" />
<link rel="Index" href="index.htm" title="Index" type="text/html" />
<link rel="Prev" href="dml_commands_1020.htm" title="Previous" type="text/html" />
<link rel="Next" href="dml_commands_1022.htm" title="Next" type="text/html" />
<link rel="alternate" href="../e17122.pdf" title="PDF version" type="application/pdf" />
<link rel="schema.dcterms" href="http://purl.org/dc/terms/" />
<link rel="stylesheet" href="../../dcommon/css/fusiondoc.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/header.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/footer.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/fonts.css">
<link rel="stylesheet" href="../../dcommon/css/foundation.css">
<link rel="stylesheet" href="../../dcommon/css/codemirror.css">
<link rel="stylesheet" type="text/css" title="Default" href="../../nav/css/html5.css">
<link rel="stylesheet" href="../../dcommon/css/respond-480-tablet.css">
<link rel="stylesheet" href="../../dcommon/css/respond-768-laptop.css">
<link rel="stylesheet" href="../../dcommon/css/respond-1140-deskop.css">
<script type="application/javascript" src="../../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">437/593</span> <!-- End Header --><a id="g1044782"></a>
<hr />
<div id="OLADM772" class="refsect1">
<h1 class="refsect1">CHGDFN</h1>
<p><a id="sthref3815"></a><a id="sthref3816"></a><a id="sthref3817"></a><a id="sthref3818"></a><a id="sthref3819"></a><a id="sthref3820"></a>The CHGDFN command enables you to change certain aspects of the definitions of analytic workspace objects.</p>
<p>Before you can use CHGDFN to change the definition of an object, use CONSIDER to make that object definition the current definition.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
You cannot use CHGDFN to change definitions of objects that are in an analytic workspace that is attached in multiwriter mode.</div>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3821"></a>Syntax</p>
<p class="synopsis">CHGDFN&nbsp;<span class="italic">desired-change</span></p>
<p>where <span class="syntaxinlineitalic">desired-change</span> is one of the following:</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="italic">varname&nbsp;</span>SEGWIDTH&nbsp;<span class="italic">length dim</span>...</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="italic">partitioned-varname&nbsp;</span>{DROP | ADD } (<span class="italic">partition-instance</span>...)</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="italic">partition-template&nbsp;</span>{DEFINE | DELETE [CLEAR] } (<span class="italic">partition-instance</span>...)</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="italic">partition-template</span> RENAME PARTITION <span class="italic">old-name new-name</span></p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<span class="italic">conjoint</span> | <span class="italic">composite</span>}&nbsp;&nbsp;{HASH | BTREE | NOHASH}&nbsp;&nbsp;</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="italic">concat&nbsp;</span>BASE ADD&nbsp;<span class="italic">dimensionlist</span></p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="italic">conjoint&nbsp;</span>COMPOSITE</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="italic">composite&nbsp;</span>DIMENSION</p>
<p class="synopsis"><span class="italic">dimension</span> NTEXT | TEXT | NUMBER [<span class="italic">p</span>, <span class="italic">s</span>]</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="italic">dwmqy-dimname&nbsp;</span>{ {BEGINNING | ENDING}&nbsp;<span class="italic">phase |</span> {EARLIER | LATER}&nbsp;<span class="italic">n</span>}</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="italic">concat&nbsp;</span>[NOT] UNIQUE</p>
<p class="synopsis"><span class="italic">varname</span> {ADD |DROP} AGGCOUNT</p>
<p class="synopsis"><span class="italic">varname</span> [DROP] NULLTRACKING</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3822"></a>Parameters</p>
<dl>
<dt><span class="italic">varname</span></dt>
<dd>
<p>The name of the variable whose segment size you want to set.</p>
</dd>
<dt>SEGWIDTH</dt>
<dd>
<p>Indicates explicit sizing of a variable's segments. See <a href="#CACJBDAH">"Understanding Variable Segments"</a> for more information.</p>
</dd>
<dt><span class="italic">partitioned-varname</span></dt>
<dd>
<p>Specifies the name of a partitioned variable whose partitions you want to modify.</p>
</dd>
<dt>DROP <span class="italic">partition-instance</span></dt>
<dt>ADD <span class="italic">partition-instance</span></dt>
<dd>
<p>Removes or adds the specified partitions from the partitioned variable. See the <a href="dml_commands_1032.htm#i78533">DEFINE VARIABLE</a> command for a complete description of the <span class="syntaxinlineitalic">partition-instance</span> argument.</p>
</dd>
<dt>DEFINE <span class="italic">partition</span></dt>
<dt>DELETE [CLEAR] <span class="italic">partition-instance</span></dt>
<dd>
<p>Removes or adds the specified partitions from the partition template object. See the <a href="dml_commands_1032.htm#i1007745">DEFINE PARTITION TEMPLATE</a> command for a complete description of the <span class="syntaxinlineitalic">partition-instance</span> argument.</p>
<p>When you include the optional CLEAR keyword, Oracle OLAP also drops any corresponding partitions in the variables that are partitioned using the partition template object. In other words, including CLEAR is the same as issuing an additional CHGDFN statements to DROP the partition from the variables partitioned by it.</p>
</dd>
<dt>RENAME PARTITION <span class="italic">old-name new-name</span></dt>
<dd>
<p>Renames the specified partitions in the partition template object.</p>
</dd>
<dt>BASE ADD <span class="italic">dimensionlist</span></dt>
<dd>
<p>Adds the dimension or dimensions specified by <span class="italic">dimensionlist</span> to the base dimensions of the concat dimension.When you add one or more dimensions as base dimensions of a concat, then Oracle OLAP appends the dimensions to the existing list of base dimensions of the concat. Objects that are dimensioned by the concat, or objects that are dimensioned by a concat that has the altered concat as a base dimension, gain additional <code>NA</code> values. You cannot add as a base dimension a dimension that is already a component of the concat dimension.</p>
</dd>
<dt><span class="italic">length-dim</span>...</dt>
<dd>
<p>Segment width is specified as the maximum number of values in each segment for each dimension or composite in the variable's dimension list. The first <span class="italic">length-dim</span> is the number of values for the dimension or composite in the first position of the dimension list in the variable's definition (that is, the fastest-varying dimension or composite), the second <span class="italic">length-dim</span> is the number of values for the dimension or composite in the second position in the dimension list, and so on.</p>
</dd>
<dt><span class="italic">conjoint</span></dt>
<dt><span class="italic">composite</span></dt>
<dd>
<p>For the <span class="italic">index</span> syntax, the name of the conjoint dimension or composite whose index algorithm you want to change. For the <span class="italic">conjoint-to-composite</span> syntax, the name of the conjoint dimension you want to change to a composite. For the <span class="italic">composite-to-dim</span> syntax, the name of the composite you want to change to a conjoint dimension. You cannot change a conjoint dimension to a composite when the conjoint is a dimension of a formula.</p>
</dd>
<dt>BTREE</dt>
<dt>BTREE64</dt>
<dt>HASH</dt>
<dt>NOHASH</dt>
<dd>
<p>Indicates the index algorithm used to load and access values of your conjoint dimension or composite without losing data in objects defined with the conjoint or composite. A composite cannot be changed to NOHASH. A conjoint can be changed to NOHASH only when it was originally defined as HASH. See <a href="#i80679">"Changing the Index Algorithm of a Conjoint from BTREE to NOHASH"</a>.</p>
<p>HASH, NOHASH, and BTREE are different index algorithms used to load and access the values of a conjoint dimension or composite. (BTREE64 can only be used with composites.) HASH is the default for conjoints. The default for composites is determined by the SPARSEINDEX option, which has a default value of BTREE. The index algorithm affects the performance of loading and accessing large conjoints or composites. Performance varies depending on your system configuration, the organization of your data, and the design of your application.</p>
<ul>
<li>
<p><a id="i80714"></a><span class="bold">BTREE</span> is a standard indexing method that is recommended for composites and conjoint dimensions. Use BTREE as the default unless you are an advanced user and have a special need that requires HASH or NOHASH. BTREE tends to group similar values, which results in better locality of access.</p>
</li>
<li>
<p><span class="bold">BTREE 64</span> can only be used with composites. It specifies the creation of a highly-scalable b-tree index to relate composite values to base dimension values. For a variable that is dimensioned by a BTREE64 composite, like a BTREE composite, Oracle OLAP creates array elements (that is, variable cells) only for those dimension values that are stored in the tuples of the composite; it does not create a cell for every value in the base dimensions. However, unlike a BTREE composite, a BTREE64 composite supports b-trees greater than 2 gigabytes</p>
</li>
<li>
<p><span class="bold">HASH</span> is a standard indexing method that can be used for composites or conjoint dimensions that have only 2 or 3 base dimensions. One advantage to using HASH is that it results in a small amount of code. However, HASH is generally not recommended. Using HASH results in a very large index table, which can be too large to fit into memory.</p>
</li>
<li>
<p><span class="bold">NOHASH</span> can only be used with conjoint dimensions. It can be advantageous to use NOHASH when there is little memory available and the conjoint dimension has only 2 or 3 base dimensions.Also, you can use NOHASH when you load a very large initial amount of data. When you use NOHASH, the data is loaded in a way that makes it easy to access that data after it has been loaded. Once the data is loaded, change the definition of the conjoint dimension back to BTREE to ensure good performance. Otherwise, performance is likely to suffer, especially when the conjoint dimension has 4 or more base dimensions. See <a href="#i80679">"Changing the Index Algorithm of a Conjoint from BTREE to NOHASH"</a>.</p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">Tip:</p>
You can do performance testing to determine which algorithm provides the best performance for your situation. For example, suppose a data load executes well at first, then slows down drastically. Use CHGDFN to change the index algorithm from BTREE to NOHASH. Try the data load again to determine whether or not using NOHASH improves performance. You can then use CHGDFN to change the index algorithm back to BTREE. Note, however, that changing the index algorithm of a large conjoint dimension or composite from one algorithm type to another may take a considerable amount of time and that the CHGDFN command cannot be interrupted.</div>
</dd>
<dt>COMPOSITE</dt>
<dd>
<p>Indicates changing a conjoint dimension into a named composite. There are some restrictions on changing conjoint dimensions to composites; when a conjoint has the NOHASH index algorithm or when it has permissions, you cannot change it to a composite.</p>
</dd>
<dt>DIMENSION</dt>
<dd>
<p>Indicates changing a named composite into a conjoint dimension.</p>
</dd>
<dt><span class="italic">composite_dimension</span></dt>
<dd>
<p>The name of a composite that has a composite as a base dimension.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
In Oracle Database 11<span class="italic">g</span>, you cannot define a nested composite. Consequently, you only use the UNNEST keyword with nested composites that were defined in an earlier release and then imported into Oracle Database 11<span class="italic">g</span>.</div>
</dd>
<dt><span class="italic">dimension</span></dt>
<dd>
<p>The name of a TEXT, NTEXT or NUMBER dimension</p>
</dd>
<dt>NTEXT</dt>
<dd>
<p>Specifies that the statement changes the data type of a TEXT dimension to NTEXT</p>
</dd>
<dt>TEXT</dt>
<dd>
<p>Specifies that the statement changes the data type of a NTEXT dimension to TEXT</p>
</dd>
<dt>NUMBER [<span class="italic">p</span>, <span class="italic">s</span>]</dt>
<dd>
<p>Specifies that the statement changes the data type of a TEXT, NTEXT, or NUMBER dimension to NUMBER with the precision specified by <span class="italic">p</span> and the scale specified by <span class="italic">s</span>.</p>
</dd>
<dt><span class="italic">dwmqy-dimname</span></dt>
<dd>
<p>Specifies or changes the phase of a dimension of type DAY, WEEK, MONTH, QUARTER, or YEAR.</p>
</dd>
<dt>BEGINNING <span class="italic">phase</span></dt>
<dt>ENDING <span class="italic">phase</span></dt>
<dd>
<p>Specifies the beginning phase or ending phase of a dimension of type DAY, WEEK, MONTH, QUARTER, or YEAR. You must specify the phase as a date, giving the month, day, and year, enclosed in single quotes, using any of the input styles that are valid for variable values with a data type of DATE. When you specify a date with an ambiguous meaning (such as <code>'03 05 97'</code>), the date is interpreted according to the current setting of the DATEORDER option. For more information about specifying dates, see the <a href="dml_options012.htm#i79233">DATEORDER</a> option.</p>
</dd>
<dt>EARLIER <span class="italic">n</span></dt>
<dt>LATER <span class="italic">n</span></dt>
<dd>
<p><span class="italic">n</span> is an <code>INTEGER</code> expression that increments or decrements the period on which the DAY, WEEK, MONTH, QUARTER, or YEAR dimension's phase begins or ends. For example, for a WEEK dimension whose current begin phase is Monday, specify <code>LATER 2</code> to change the phase to Wednesday.</p>
</dd>
<dt>[NOT] UNIQUE</dt>
<dd>
<p>When you include <code>NOT</code>, changes a unique concat dimension to a nonunique concat. When you do not include <code>NOT</code>, changes a nonunique concat dimension to a unique concat dimension. See the <a href="dml_commands_1032.htm#i1010642">DEFINE DIMENSION CONCAT</a> command for more information on concat dimensions.</p>
</dd>
<dt>ADD AGGOUNT</dt>
<dd>
<p>Adds<a id="sthref3823"></a><a id="sthref3824"></a> an Aggcount variable to the specified variable. See the WITH AGGCOUNT phrase of the <a href="dml_commands_1032.htm#i78533">DEFINE VARIABLE</a> command for more information about Aggcount variables.</p>
</dd>
<dt>DROP AGGOUNT</dt>
<dd>
<p>Removes an Aggcount variable from the specified variable. See the WITH AGGCOUNT phrase of the <a href="dml_commands_1032.htm#i78533">DEFINE VARIABLE</a> command for more information about Aggcount variables.</p>
</dd>
<dt>NULLTRACKING</dt>
<dd>
<p>Adds NA2 bits to the specified variable if the variable does not have NA2 bits. For more information on NA2 bits and null tracking, see <a href="dml_commands_1032.htm#BGECIBHD">"NA2 Bits and Null Tracking"</a> .</p>
</dd>
<dt>DROP NULLTRACKING</dt>
<dd>
<p>Removes NA2 bits to the specified variable if the variable has NA2 bits.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3825"></a>Usage Notes</p>
<p class="subhead2"><a id="CACJBDAH"></a><a id="OLADM2244"></a>Understanding Variable Segments</p>
<p>A segment is contiguous disk space reserved for a portion of the total number of values a variable holds. For example, for a variable dimensioned by <code>month</code> with a SEGWIDTH of <code>150</code> and <code>product</code> with a SEGWIDTH of <code>90,000</code>, each segment holds up to 150 x 90,000 values of the variable. The number of segments in a variable affects the performance of data loading and data accessing.</p>
<p>When you do not specify <code>CHGDFN</code> <code>SEGWIDTH</code>, the default behavior is to assign a segwidth of <code>0</code> (zero) on non-composite dimensions and a large value for composites that are not the slowest-varying in the dimension set. This behavior allows new dimension and composite values to be added in most situations without greatly increasing the number of segments and degrading performance.</p>
<p>When you specify SEGWIDTH, you must specify a number, <code>0</code> (zero), or nonzero, for every dimension and composite of the variable.</p>
<p>When you set the value of SEGWIDTH for a dimension to 0, Oracle OLAP grows segments in that dimension as needed, minimizing the number of segments but not changing any existing segments. You can always specify <code>0</code> (zero for the slowest-varying dimension, because the data for any values that are later added to that dimension is appended to the existing data in the variable's last segment.</p>
<p>The segment size that you specify is used not only for the variable you designate as <span class="italic">varname,</span> but also for all other variables and relations that are defined with the same combination of dimensions and composites in the same order. The DEFINE command sets the SEGWIDTH at the time it creates a variable or relation. Changing the SEGWIDTH affects any new variable or relation that you subsequently create. The changed SEGWIDTH setting does not apply to previously existing variables or relations.</p>
<p>The time it takes to do data loads on a variable depends on how many pages are brought into memory and then written back out. This number can be affected by how a variable is divided into segments. Too many segments (thousands to millions) can degrade performance. See <a href="#i80660">"Reducing the Number of Segments"</a>.</p>
<p>The number of segments also affects data access. The time it takes to report a variable depends on how many values are brought into memory. You decide how many segments your variable should have based on your data loading and data accessing patterns.</p>
<p>DEFINE provides default segments. In most cases, you can use the default segments so that you do not have to use <code>CHGDFN SEGWIDTH</code> to manually control the size of segments. However, you may be able to improve performance by specifying the segment size instead of using the defaults.When you are not sure what your segment size should be, use the maximum anticipated number of values for each dimension or composite as the length arguments to SEGWIDTH. Then only one segment is created for the variable.</p>
<p class="subhead2"><a id="i80660"></a><a id="OLADM2245"></a>Reducing the Number of Segments</p>
<p>You can use OBJ (NUMSEGS) to find out if you have too many segments for objects that have a particular dimension set. When you find that you do, you can reduce the number of segments by following these steps:</p>
<ol>
<li>
<p>Export the variables and relations that use this dimension set to an EIF file.</p>
</li>
<li>
<p>Execute a MAINTAIN DELETE ALL statement for a dimension in the dimension set.</p>
</li>
<li>
<p>Optimally, execute a CHGDFN statement for a variable or relation with this dimension set, and increase the value of the length arguments to the SEGWIDTH keyword.</p>
</li>
<li>
<p>From the EIF file, import all the values you exported in Step 1.</p>
</li>
</ol>
<p class="subhead2"><a id="i80679"></a><a id="OLADM2246"></a>Changing the Index Algorithm of a Conjoint from BTREE to NOHASH</p>
<p>When you must change a conjoint dimension that was originally defined with the BTREE algorithm to a NOHASH conjoint, you can use the following method:</p>
<ol>
<li>
<p>Export the conjoint dimension and all the objects dimensioned by it to an EIF file.</p>
</li>
<li>
<p>Delete all the objects dimensioned by the conjoint dimension, and then delete the conjoint itself.</p>
</li>
<li>
<p>Redefine the conjoint as a NOHASH conjoint.</p>
</li>
<li>
<p>Import the conjoint dimension and the objects dimensioned by it from the EIF file. The NOHASH attribute on the definition at the time of the import causes the conjoint dimension to be read in as a NOHASH conjoint.</p>
</li>
</ol>
<p class="subhead2"><a id="OLADM2247"></a>Changing an Unnamed Composite to a Named Conjoint Dimension</p>
<p>When you want to change an unnamed composite into a conjoint dimension, you can use a RENAME statement to change the unnamed composite into a named composite, and then use CHGDFN to change the named composite into a conjoint dimension.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3826"></a>Examples</p>
<p>For an example of removing null tracking from a variable, see <a href="dml_commands_1032.htm#BGEEHAEJ">Example 9-104, "Defining a Variable with Null Tracking"</a>.</p>
<div id="OLADM2248" class="example">
<p class="titleinexample"><a id="sthref3827"></a>Example 9-62 Using CHGDFN SEGWIDTH</p>
<p>Suppose you have a variable called <code>d.sales</code> that is dimensioned by <code>month</code> and by a composite with the base dimensions <code>market</code> and <code>product</code>. The definition of <code>d.sales</code> looks like the following.</p>
<pre>
DEFINE d.sales VARIABLE DECIMAL &lt;month SPARSE&lt;market product&gt;&gt;
</pre>
<p>Suppose you want to have only one segment in the <code>d.sales</code> variable. You estimate that the <code>month</code> dimension eventually has 150 values and the composite has 100,000. The following statement creates one segment for the <code>d.sales</code> variable.</p>
<pre>
CHGDFN d.sales SEGWIDTH 150 100000
</pre>
<p>However, a better way to specify segment size for <code>d.sales</code> is to specify 0 for the slowest-varying dimension.</p>
<pre>
CHGDFN d.sales SEGWIDTH 150 0
</pre>
<p>Suppose you want one segment for a variable defined with a composite and two dimensions. For example, suppose you have a variable called <code>f.costs</code> with the following definition.</p>
<pre>
DEFINE f.costs VARIABLE DECIMAL &lt;geog SPARSE&lt;product channel&gt; time&gt;
</pre>
<p>You estimate the <code>geog</code> dimension has 100 values and the composite has 300,000. You do not have to estimate the number of values for the <code>time</code> dimension, because it is the slowest-varying dimension. The following statement creates one segment for the <code>f.costs</code> variable.</p>
<pre>
CHGDFN f.costs SEGWIDTH 100 300000 0
</pre></div>
<!-- class="example" -->
<div id="OLADM2249" class="example">
<p class="titleinexample"><a id="sthref3828"></a>Example 9-63 Changing the Phase of a YEAR Dimension</p>
<p>The following statements first create a dimension of type YEAR for a fiscal year, then use CHGDFN to switch to a new time phase for the fiscal year.</p>
<pre>
DEFINE fiscal DIMENSION year BEGINNING '06 01 96'
CHGDFN fiscal BEGINNING '01 01 97'
</pre></div>
<!-- class="example" -->
<div id="OLADM2250" class="example">
<p class="titleinexample"><a id="sthref3829"></a>Example 9-64 Adding a Base Dimension to a Concat Dimension</p>
<p>The following statements create a nonunique concat dimension named <code>reg.dist.ccdim</code> that has the <code>region</code> and <code>district</code> dimensions as its base dimensions and report the values of the concat.</p>
<pre>
DEFINE reg.dist.ccdim DIMENSION CONCAT(region district)
REPORT W 22 reg.dist.ccdim
</pre>
<p>The preceding statement produces the following output.</p>
<pre>
REG.DIST.CCDIM
--------------------
&lt;region: East&gt;
&lt;region: Central&gt;
&lt;region: West&gt;
&lt;district: Boston&gt;
&lt;district: Atlanta&gt;
&lt;district: Chicago&gt;
&lt;district: Dallas&gt;
&lt;district: Denver&gt;
&lt;district: Seattle&gt;
</pre>
<p>The following statements add the <code>store_id</code> dimension as a base to the concat dimension and then report the values of the concat again.</p>
<pre>
CHGDFN reg.dist.ccd BASE ADD store_id
REPORT W 22 reg.dist.ccd
</pre>
<p>The preceding statement produces the following output.</p>
<pre>
REG.DIST.CCD
----------------------
&lt;region: East&gt;
&lt;region: Central&gt;
&lt;region: West&gt;
&lt;district: Boston&gt;
...
&lt;district: Seattle&gt;
&lt;store_id: 10&gt;
&lt;store_id: 20&gt;
&lt;store_id: 30&gt;
&lt;store_id: 100&gt;
...
&lt;store_id: 500&gt;
&lt;store_id: 510&gt; 
</pre></div>
<!-- class="example" --></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment3088">
<tr>
<td class="cellalignment3095">
<table class="cellalignment3093">
<tr>
<td class="cellalignment3092"><a href="dml_commands_1020.htm"><img width="24" height="24" src="../../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment3092"><a href="dml_commands_1022.htm"><img width="24" height="24" src="../../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;1994, 2013,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment3097">
<table class="cellalignment3091">
<tr>
<td class="cellalignment3092"><a href="../../index.htm"><img width="24" height="24" src="../../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment3092"><a href="../../nav/portal_booklist.htm"><img width="24" height="24" src="../../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment3092"><a href="toc.htm"><img width="24" height="24" src="../../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment3092"><a href="index.htm"><img width="24" height="24" src="../../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment3092"><a href="../../nav/mindx.htm"><img width="24" height="24" src="../../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment3092"><a href="../../dcommon/html/feedback.htm"><img width="24" height="24" src="../../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>
</body>
</html>
