<!DOCTYPE html>
<html lang="en" >
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1">
<meta charset="utf-8">
<title>FILEVIEW</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Version 5.1.2 Build 742" />
<meta name="dcterms.created" content="2013-11-14T21:21:46Z" />
<meta name="robots" content="all" />
<meta name="dcterms.title" content="OLAP DML Reference" />
<meta name="dcterms.identifier" content="E17122-08" />
<meta name="dcterms.isVersionOf" content="OLADM" />
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;1994, 2013,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved." />
<link rel="Start" href="../../index.htm" title="Home" type="text/html" />
<link rel="Copyright" href="../../dcommon/html/cpyr.htm" title="Copyright" type="text/html" />

<script type="application/javascript"  src="../../dcommon/js/headfoot.js"></script>
<script type="application/javascript"  src="../../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html" />
<link rel="Index" href="index.htm" title="Index" type="text/html" />
<link rel="Prev" href="dml_commands_1050.htm" title="Previous" type="text/html" />
<link rel="Next" href="dml_commands_1052.htm" title="Next" type="text/html" />
<link rel="alternate" href="../e17122.pdf" title="PDF version" type="application/pdf" />
<link rel="schema.dcterms" href="http://purl.org/dc/terms/" />
<link rel="stylesheet" href="../../dcommon/css/fusiondoc.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/header.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/footer.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/fonts.css">
<link rel="stylesheet" href="../../dcommon/css/foundation.css">
<link rel="stylesheet" href="../../dcommon/css/codemirror.css">
<link rel="stylesheet" type="text/css" title="Default" href="../../nav/css/html5.css">
<link rel="stylesheet" href="../../dcommon/css/respond-480-tablet.css">
<link rel="stylesheet" href="../../dcommon/css/respond-768-laptop.css">
<link rel="stylesheet" href="../../dcommon/css/respond-1140-deskop.css">
<script type="application/javascript" src="../../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">467/593</span> <!-- End Header --><a id="i79491"></a>
<hr />
<div id="OLADM820" class="refsect1">
<h1 class="refsect1">FILEVIEW</h1>
<p><a id="sthref4331"></a><a id="sthref4332"></a><a id="sthref4333"></a>The FILEVIEW command works with the FILENEXT function to read one record at a time of an input file, process the data, and store the data in Oracle OLAP dimensions and variables according to the descriptions of the fields. Use FILENEXT to read the record, then use one or more FILEVIEW statements to process the fields as needed. FILEVIEW has the same attributes as FILEREAD for specifying the format of the input and the processing of the output.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4334"></a>Syntax</p>
<p class="synopsis">FILEVIEW&nbsp;<span class="italic">fileunit</span>&nbsp;[<span class="italic">field-desc</span>...]</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4335"></a>Parameters</p>
<dl>
<dt><span class="italic">fileunit</span></dt>
<dd>
<p>A fileunit number that is assigned to a file opened for reading (READ mode) in a previous call to the FILEOPEN function.</p>
</dd>
<dt><span class="italic">field-desc</span></dt>
<dd>
<p>A field description describes how to process one or more fields in each input record. Attributes in the field description specify how to format the input data. FILEVIEW reads each field according to the format specification and assigns the input data to the specified object. You can assign the data to the object directly or you can specify an expression to manipulate the data before you assign it. One field description can assign data from one input field to one Oracle OLAP object. Alternately you can use the ACROSS keyword to assign several values in the input record to a variable that is dimensioned by the fastest varying dimension. Because field attributes include the column number in the input record, you can process input fields in any order.</p>
<p><a id="sthref4336"></a>The format for the field description is as follows.</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[[<span class="italic">pos</span>]&nbsp;ACROSS&nbsp;<span class="italic">dim&nbsp;</span>[<span class="italic">limit-clause</span>]:]&nbsp;[<span class="italic">attribs</span>]&nbsp;<span class="italic">object&nbsp;</span>[=&nbsp;<span class="italic">exp</span>]</p>
</dd>
<dt><span class="italic">pos</span></dt>
<dd>
<p>One or more attributes that specify the position in the record where Oracle OLAP begins reading the fields specified by the ACROSS description. To specify the position, use the attributes FIELD, SPACE, and COLUMN (see the <a href="dml_commands_1049.htm#i79481">FILEREAD</a> command). The <span class="italic">pos</span> argument is optional when the series of fields specified in the ACROSS phrase begins in the next field for structured records, or the next byte for ruled records.</p>
</dd>
<dt>ACROSS-statement: <span class="italic">action-statement</span></dt>
<dd>
<p><a id="sthref4337"></a>Specifies the dimension of one or more data fields in the input record. FILEVIEW assigns the data in the fields to a variable according to the values in the current status of <span class="italic">dim</span>. Typically, each field description processes one value. However, using the ACROSS keyword, you can process one input value for each dimension value currently in the status. When you want the looping to apply to multiple action statements, enclose the action statements in angle brackets.</p>
<p>An ACROSS statement has the following syntax.</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ACROSS <span class="italic">dimension</span> [<span class="italic">limit-clause</span>]:</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="italic">action-statement</span></p>
<p>The syntax of <span class="italic">limit-clause</span> is the same syntax as any of the <span class="italic">limit-clause</span> arguments in the various forms of the LIMIT command (that is, the syntax of the LIMIT command after the <span class="italic">limit-type</span> argument such as "TO"). For the syntax of these arguments, see <a href="dml_commands_2009.htm#i1019733">LIMIT (using values) command</a>, <a href="dml_commands_2009.htm#i1019738">LIMIT using LEVELREL command</a>, <a href="dml_commands_2009.htm#i1019742">LIMIT (using parent relation)</a>, <a href="dml_commands_2009.htm#i1019747">LIMIT (using related dimension) command</a>, <a href="dml_commands_2009.htm#i1019753">LIMIT NOCONVERT command</a>, and <a href="dml_commands_2009.htm#i1019757">LIMIT command (using POSLIST)</a>.</p>
<p>The following example limits <code>month</code> to the last six values, no matter what the current status of <code>month</code> is.</p>
<pre>
ACROSS month last 6: units
</pre></dd>
<dt><span class="italic">attribs</span></dt>
<dd>
<p>One or more attributes that tell Oracle OLAP the position in the record and the format of the input data. (See the <a href="dml_commands_1049.htm#i79481">FILEREAD</a> command for an explanation of the available attributes.)</p>
</dd>
<dt><span class="italic">object</span> [= <span class="italic">exp</span>]</dt>
<dd>
<p>An Oracle OLAP variable, dimension, or relation to which the input data is assigned. When =&nbsp;<span class="italic">exp</span> is missing, the data is assigned implicitly to the object. When =&nbsp;<span class="italic">exp</span> is present, the data is processed according to the expression and then assigned to <span class="italic">object</span>.</p>
<p>You can use the keyword VALUE to represent the value in a particular field of a record. VALUE represents the data from the file, formatted according to the FILEREAD attributes you use. When the field in the record is blank, FILEREAD considers its value to be <code>NA</code>. By default, the data type of VALUE is the data type of the target object. However, you can specify a different data type with an attribute keyword. VALUE can be used more than once to represent different values from the same record. For each instance, specify the column from which to read each value, as shown in the following example code.</p>
<pre>
sales = if col 1 w 1 text value eq 'A' then col 2 w 8 value -
   else col 10 w 8 value
</pre>
<p>In this example, the default data type of VALUE is decimal, which is the data type of the target object <code>sales</code>. However, the first instance of VALUE is compared to a text expression, so you must use the attribute TEXT to specify its data type.</p>
</dd>
<dt>SELECT <span class="italic">exp</span></dt>
<dd>
<p>The SELECT field-description keyword processes varying record types (such as records with different structures or different target objects) with one FILEVIEW statement. Within a field description, you can use the following syntax:</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SELECT&nbsp;<span class="italic">exp</span>&nbsp;-&nbsp;</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[WHEN&nbsp;<span class="italic">exp&nbsp;action</span>&nbsp;[WHEN&nbsp;<span class="italic">exp&nbsp;action</span>&nbsp;...]]&nbsp;-&nbsp;</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;[ELSE&nbsp;<span class="italic">action</span>]</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;IF&nbsp;<span class="italic">bool-exp&nbsp;</span>THEN&nbsp;<span class="italic">action&nbsp;</span>[ELSE&nbsp;<span class="italic">action</span>]</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DO</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="italic">field-desc</span></p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[<span class="italic">field-desc</span>]</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;...</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DOEND</p>
<p>The <span class="italic">action</span> argument is one of the following:</p>
<ul>
<li>
<p>NULL (no action occurs)</p>
</li>
<li>
<p><span class="italic">field-description</span>, including nested IF and SELECT statements.</p>
</li>
</ul>
<p>SELECT evaluates the first expression, which may contain invocations of the VALUE keyword, and which has a default data type of TEXT. SELECT then sequentially compares the result with the WHEN expressions. When the first match is found, the associated action occurs. When no match is found, the ELSE action (if specified) occurs.</p>
</dd>
<dt>IF <span class="italic">bool-exp</span></dt>
<dd>
<p>The IF field-description keyword processes varying record types (such as records with different structures or different target objects) with one FILEVIEW statement. Within a field description, you can use the following syntax.</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;IF&nbsp;<span class="italic">bool-exp&nbsp;</span>THEN&nbsp;<span class="italic">action&nbsp;</span>[ELSE&nbsp;<span class="italic">action</span>]</p>
<p><span class="italic">action</span> is the same as described for SELECT.</p>
<p>IF evaluates the Boolean expression, which may contain invocations of the VALUE keyword. IF performs the THEN action when the expression is TRUE or the ELSE action, if specified, when the expression is FALSE. No action occurs when the expression is <code>NA</code>.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4338"></a>Usage Notes</p>
<p class="subhead2"><a id="OLADM2407"></a>Record Order</p>
<p>FILEVIEW can process the fields in a record in any order. List the field descriptions in the order you want to process them, identifying the fields with explicit column numbers. You can also use several FILEVIEW statements on the same record to do different processing depending on the data you find in the record.</p>
<p class="subhead2"><a id="OLADM2408"></a>Alternative OLAP DML Statement</p>
<p>When you want to process all the records in a file in the same way, without complicated optional processing, a FILEREAD statement is easier to use.</p>
<p class="subhead2"><a id="OLADM2409"></a>Dimension Values</p>
<p>When the target object of a field description is a dimension, you can specify whether the data in the file is used to add values to the dimension or not. The dimension attributes are MATCH and APPEND:</p>
<ul>
<li>
<p>MATCH -- Any value encountered in a field must already be a value of the dimension. FILEVIEW temporarily limits status to that value. When it is not already a dimension value, FILEVIEW generates an error. After executing a FILEVIEW statement, the dimension status is the same as before the execution of the statement.</p>
</li>
<li>
<p>APPEND -- The values in the field can already exist or they can be new. When the value exists, FILEVIEW limits status to that value; when it does not, FILEVIEW adds the value and then limits status. The dimension is limited to ALL when FILEVIEW is finished.</p>
</li>
</ul>
<p>For more information about handling dimensions, see the <a href="dml_commands_1049.htm#i79481">FILEREAD</a> command.</p>
<p class="subhead2"><a id="OLADM2410"></a>Handling Errors When FILEVIEW Encounters an Error</p>
<p>When FILEVIEW encounters an error, you can control what happens with an error trap and appropriate processing. Errors can be caused by attempts to convert data to an incompatible data type or by encountering invalid dimension values. You can use the FILEERROR function to find out what type of error occurred. After processing the error, you can use GOTO to branch back to the FILEVIEW statement.</p>
<p class="subhead2"><a id="OLADM2411"></a>Attribute List</p>
<p>For a complete list of the attributes for FILEVIEW and FILEREAD and for more information about processing <code>NA</code> values, reading date values, reading multidimensional data, storing NTEXT values, and specifying attributes, see the <a href="dml_commands_1049.htm#i79481">FILEREAD</a> command.</p>
<p class="subhead2"><a id="OLADM2412"></a>FILEVIEW with Composites</p>
<p>The discussions of composites and variables dimensioned by composites in FILEREAD also apply to FILEVIEW.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4339"></a>Examples</p>
<div id="OLADM2413" class="example">
<p class="titleinexample"><a id="sthref4340"></a>Example 9-133 Varying Months</p>
<p>The following program processes an input file that contains sales data for a variable number of months. The file has the following records:</p>
<ul>
<li>
<p>Record 1 -- Title (to be ignored).</p>
</li>
<li>
<p>Record 2 -- Column labels. Month names are used to set the status of <code>month</code>. The number of months is unknown before processing the file.</p>
</li>
<li>
<p>Record 3 -- Dashes underlining column labels (to be ignored).</p>
</li>
<li>
<p>Record 4 -- Blank.</p>
</li>
<li>
<p>Record 5 to end -- There are three record types for Record 5&mdash;one for each type of line to be read.</p>
</li>
</ul>
<p>One record type for Record 5 represents a detail line with the contents shown in the following table.</p>
<div class="inftblinformal">
<table class="cellalignment3100" title="Detail Line for Record 5" summary="This table illustrates the detail line for record 5." dir="ltr">
<thead>
<tr class="cellalignment3089">
<th class="cellalignment3099" id="r1c1-t127">Column</th>
<th class="cellalignment3099" id="r1c2-t127">Width</th>
<th class="cellalignment3099" id="r1c3-t127">Format</th>
<th class="cellalignment3099" id="r1c4-t127">Data</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3089">
<td class="cellalignment3095" id="r2c1-t127" headers="r1c1-t127">1</td>
<td class="cellalignment3095" headers="r2c1-t127 r1c2-t127">8</td>
<td class="cellalignment3095" headers="r2c1-t127 r1c3-t127">Symbolic</td>
<td class="cellalignment3095" headers="r2c1-t127 r1c4-t127">District name or blank (When the district name is blank on a detail line, the most recent line containing a district determines the current district.)</td>
</tr>
<tr class="cellalignment3089">
<td class="cellalignment3095" id="r3c1-t127" headers="r1c1-t127">10</td>
<td class="cellalignment3095" headers="r3c1-t127 r1c2-t127">10</td>
<td class="cellalignment3095" headers="r3c1-t127 r1c3-t127">Symbolic</td>
<td class="cellalignment3095" headers="r3c1-t127 r1c4-t127">Product name</td>
</tr>
<tr class="cellalignment3089">
<td class="cellalignment3095" id="r4c1-t127" headers="r1c1-t127">21</td>
<td class="cellalignment3095" headers="r4c1-t127 r1c2-t127">10</td>
<td class="cellalignment3095" headers="r4c1-t127 r1c3-t127">Symbolic</td>
<td class="cellalignment3095" headers="r4c1-t127 r1c4-t127">Sales for first month</td>
</tr>
<tr class="cellalignment3089">
<td class="cellalignment3095" id="r5c1-t127" headers="r1c1-t127">33</td>
<td class="cellalignment3095" headers="r5c1-t127 r1c2-t127">10</td>
<td class="cellalignment3095" headers="r5c1-t127 r1c3-t127">Symbolic</td>
<td class="cellalignment3095" headers="r5c1-t127 r1c4-t127">Sales for second month</td>
</tr>
<tr class="cellalignment3089">
<td class="cellalignment3095" id="r6c1-t127" headers="r1c1-t127">45</td>
<td class="cellalignment3095" headers="r6c1-t127 r1c2-t127">To end of record</td>
<td class="cellalignment3095" headers="r6c1-t127 r1c3-t127">Symbolic</td>
<td class="cellalignment3095" headers="r6c1-t127 r1c4-t127">Sales for additional months</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" -->
<p>Another record type in Record 5 represents a totals line with the contents shown in the following table.</p>
<div class="inftblinformal">
<table class="cellalignment3100" title="Totals Line for Record 5" summary="This table illustrates the totals line for record 5." dir="ltr">
<thead>
<tr class="cellalignment3089">
<th class="cellalignment3099" id="r1c1-t128">Column</th>
<th class="cellalignment3099" id="r1c2-t128">Width</th>
<th class="cellalignment3099" id="r1c3-t128">Data</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3089">
<td class="cellalignment3095" id="r2c1-t128" headers="r1c1-t128">1</td>
<td class="cellalignment3095" headers="r2c1-t128 r1c2-t128">18</td>
<td class="cellalignment3095" headers="r2c1-t128 r1c3-t128">Blank</td>
</tr>
<tr class="cellalignment3089">
<td class="cellalignment3095" id="r3c1-t128" headers="r1c1-t128">21</td>
<td class="cellalignment3095" headers="r3c1-t128 r1c2-t128">To end of record</td>
<td class="cellalignment3095" headers="r3c1-t128 r1c3-t128">Totals</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" -->
<p>A third record type of Record 5 contains dashes or equal signs as row separators as illustrated in the following table.</p>
<div class="inftblinformal">
<table class="cellalignment3100" title="Seperators for Record 5" summary="This table illustrates the row separtors for record 5." dir="ltr">
<thead>
<tr class="cellalignment3089">
<th class="cellalignment3099" id="r1c1-t129">Column</th>
<th class="cellalignment3099" id="r1c2-t129">Width</th>
<th class="cellalignment3099" id="r1c3-t129">Data</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3089">
<td class="cellalignment3095" id="r2c1-t129" headers="r1c1-t129">1</td>
<td class="cellalignment3095" headers="r2c1-t129 r1c2-t129">18</td>
<td class="cellalignment3095" headers="r2c1-t129 r1c3-t129">Blank</td>
</tr>
<tr class="cellalignment3089">
<td class="cellalignment3095" id="r3c1-t129" headers="r1c1-t129">21</td>
<td class="cellalignment3095" headers="r3c1-t129 r1c2-t129">To end of record</td>
<td class="cellalignment3095" headers="r3c1-t129 r1c3-t129">Dashes (--) or equal signs (==)</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" -->
<p>This is a report of the sample file.</p>
<pre>
  
                             This is the Title
                    Jan95      Feb95      Mar95      Apr95
                    ---------- ---------- ---------- ----------
 
Boston   Tents       32,153.52  32,536.30  43,062.75  57,608.39
         Canoes      66,013.92  76,083.84  91,748.16 125,594.28
         Racquets    52,420.86  56,837.88  58,838.04  69,338.88
         Sportswear  53,194.70  58,913.40  62,797.80  67,869.10
         Footwear    91,406.82  86,827.32 100,199.46 107,526.66
                    ---------- ---------- ---------- ----------
                    295,189.82 311,198.74 356,646.21 427,937.31
                    ---------- ---------- ---------- ----------
Atlanta  Tents       40,674.20  44,236.55  51,227.06  78,469.37
           .
           .
           .
         Footwear    53,284.54  57,331.30  59,144.76  70,516.98
                    ---------- ---------- ---------- ----------
                    231,780.46 245,812.33 275,622.68 355,784.92
                    ---------- ---------- ---------- ----------
                     1,813,326  1,985,731  2,185,174  2,638,409
                    ========== ========== ========== ==========
</pre>
<p>The program figures out which months are covered in the file, then reads the detail lines and assigns the sales data to the appropriate district and month. The program ignores total lines and underlines when FILEVIEW finds columns 1 through 19 blank. The program takes the name of the data file as an argument.</p>
<pre>
DEFINE salesdata PROGRAM
LD Store Several Months of Sales Data in an Analytic Workspace
PROGRAM
VARIABLE fil.unit INTEGER
VARIABLE flag BOOLEAN
VARIABLE mname TEXT
VARIABLE label TEXT
VARIABLE savedist TEXT
 
TRAP ON error NOPRINT
PUSH month district
fil.unit = FILEOPEN(ARG(1) READ)
 
IF FILENEXT(fil.unit) NE YES    "Skip Record 1
  THEN SIGNAL noread
IF FILENEXT(fil.unit) NE YES    "Process Record 2 
  THEN SIGNAL noread
FILEVIEW fil.unit COLUMN 21 ACROSS month: -
  WIDTH 10 mname = JOINLINES( mname VALUE)
LIMIT month TO mname
IF FILENEXT(fil.unit) NE YES     "Skip Record 3
  THEN SIGNAL noread
IF FILENEXT(fil.unit) NE YES     "Skip Record 4
  THEN SIGNAL noread
 
WHILE FILENEXT(fil.unit)  "Process Record 5 To End Of File
   DO
   "Store Value In Local Label Variable
   FILEVIEW fil.unit COLUMN 1 WIDTH 18 label  
   IF label NE NA         "Check For NA (Blank Field)
     THEN DO              "Get District Value If Present
      IF EXTCHARS(label, 1, 8) NE '      ' 
         "Set District Status
         THEN savedist = BLANKSTRIP(EXTCHARS(label, 1, 8)) 
       FILEVIEW fil.unit -
         COLUMN 1 WIDTH 8 district = IF VALUE NE NA THEN -
            VALUE ELSE savedist -
         COLUMN 10 WIDTH 10 product -
         COLUMN 19 ACROSS month: WIDTH 10 SPACE 2 -
            SCALE 2 newsales
      DOEND
NEXT:
  DOEND
 
FILECLOSE fil.unit
POP month district
RETURN
error:
IF fil.unit EQ NA
  THEN SHOW JOINCHARS('Can\'t Open Data File ' ARG(1) '.')
ELSE IF ERRORNAME NE 'attn' AND ERRORNAME NE 'QUIT'
  THEN DO 
    SHOW JOINCHARS('RECORD ' RECNO(fil.unit) ' is invalid.')
    GOTO NEXT
  DOEND
ELSE IF ERRORNAME EQ 'noread'
  THEN DO
    SHOW 'File Too Short.'
    FILECLOSE fil.unit
  DOEND
ELSE DO
  SHOW 'Data Import Interrupted.' 
  FILECLOSE fil.unit
DOEND
POP month district
RETURN
</pre></div>
<!-- class="example" -->
<div id="OLADM2414" class="example">
<p class="titleinexample"><a id="sthref4341"></a>Example 9-134 Additional Processing</p>
<p>When you want to save the dimension value that FILEVIEW read for display or further processing, you can read the field again and save the value in a variable. These lines in a program display the name of the month that FILEVIEW read. The FILEVIEW command saves the month value in column 1 in a variable called <code>mname</code>.</p>
<pre>
WHILE FILENEXT(fil.unit)
DO
  FILEVIEW fil.unit WIDTH 8 month WIDTH 5 INTEGER units -
       COLUMN 1 WIDTH 8 mname
  SHOW mname PROMPT
DOEND
</pre></div>
<!-- class="example" -->
<div id="OLADM2415" class="example">
<p class="titleinexample"><a id="sthref4342"></a>Example 9-135 Using the VALUE Keyword as a Function</p>
<p>Suppose you want to read and report data from a disk file similar to the following, named <code>numbers.dat</code>, which has columns 15 characters wide.</p>
<pre>
           1.0            2.0            3.0            4.0            5.0 
          -1.0           -2.0           -3.0           -4.0           -5.0
           0.0            0.0            1.43900000E+03                1.39900000E+03
</pre>
<p>You can read this data using the VALUE keyword as a function with FILEVIEW in a program similar to the following one (named <code>try</code>). However, this first example does not work. The FILEVIEW command skips fields. The reason for the data skipping is that each time FILEREAD fetches a field from the current record, it updates the column pointer to point <span class="italic">past</span> the field. When the next fetch does not specify a position (using the COLUMN, SPACE, or FIELD attribute), data is read from the default position established by the previous fetch. This behavior is typically desirable; however it does not work when multiple fetches are needed to perform a single assignment (for example, when the VALUE function is coded twice in the same IF...THEN...ELSE command block, as shown here). The NAMELIST and DIRLIST attributes return one value for multiple versions of a particular file name in the directory. The NAMELIST attribute also returns only one value for multiple files in the directory with the same root file name but different file types.</p>
<pre>
DEFINE try PROGRAM
PROGRAM
VARIABLE funit INTEGER
DEFINE dvar VARIABLE DECIMAL &lt;year&gt;
PUSH year
LIMIT year TO LAST 5
TRAP ON ERROR
funit=FILEOPEN('numbers.dat' R)
 
WHILE FILENEXT(funit)
   DO
   FILEVIEW funit ACROSS year: W 15 TEXT dvar = -
      IF FINDCHARS(VALUE, 'e') EQ 0 -  "Incorrect Use of Value
      THEN CONVERT(VALUE, dec) -       "Results in Skipped
      ELSE -9999.99                    "Fields
      REPORT DOWN year dvar
   DOEND
error:
FILECLOSE funit
DELETE dvar
POP year
END
</pre>
<p>When you execute the <code>try</code> program,</p>
<pre>
try
</pre>
<p>the output skips numbers, as in the following.</p>
<pre>
 
YEAR              DVAR
-------------  ----------
Yr93                 2.00
Yr94                 4.00
Yr95                   NA
Yr96            -9,999.99
Yr97            -9,999.99
   
YEAR              DVAR
-------------  ----------
Yr93                -2.00
Yr94                -4.00
Yr95                   NA
Yr96            -9,999.99
Yr97            -9,999.99
   
YEAR              DVAR
-------------  ----------
Yr93                 0.00
Yr94            -9,999.99
Yr95            -9,999.99
Yr96            -9,999.99
Yr97            -9,999.99
</pre>
<p>However, when the SPACE attribute is used to make the second VALUE back up some distance so it reads the same field that the first VALUE read, everything works fine. SPACE can be used in the preceding sample program by changing the THEN clause to the following clause.</p>
<pre>
THEN CONVERT(SPACE -15 VALUE, dec) -
</pre>
<p>Now when you execute the program,</p>
<pre>
try
</pre>
<p>the output looks like this.</p>
<pre>
   
YEAR              DVAR
-------------  ----------
Yr93                 1.00
Yr94                 2.00
Yr95                 3.00
Yr96                 4.00
Yr97                 5.00
   
YEAR              DVAR
-------------  ----------
Yr93                -1.00
Yr94                -2.00
Yr95                -3.00
Yr96                -4.00
Yr97                -5.00
   
YEAR              DVAR
-------------  ----------
Yr93                 0.00
Yr94                 0.00
Yr95            -9,999.99
Yr96            -9,999.99
Yr97            -9,999.99 
</pre></div>
<!-- class="example" --></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment3088">
<tr>
<td class="cellalignment3095">
<table class="cellalignment3093">
<tr>
<td class="cellalignment3092"><a href="dml_commands_1050.htm"><img width="24" height="24" src="../../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment3092"><a href="dml_commands_1052.htm"><img width="24" height="24" src="../../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;1994, 2013,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment3097">
<table class="cellalignment3091">
<tr>
<td class="cellalignment3092"><a href="../../index.htm"><img width="24" height="24" src="../../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment3092"><a href="../../nav/portal_booklist.htm"><img width="24" height="24" src="../../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment3092"><a href="toc.htm"><img width="24" height="24" src="../../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment3092"><a href="index.htm"><img width="24" height="24" src="../../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment3092"><a href="../../nav/mindx.htm"><img width="24" height="24" src="../../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment3092"><a href="../../dcommon/html/feedback.htm"><img width="24" height="24" src="../../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>
</body>
</html>
