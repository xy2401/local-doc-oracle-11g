<!DOCTYPE html>
<html lang="en">
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1">
<meta charset="utf-8">
<title>LIMIT command</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Version 5.1.2 Build 742" />
<meta name="dcterms.created" content="2013-11-14T21:21:49Z" />
<meta name="robots" content="all" />
<meta name="dcterms.title" content="OLAP DML Reference" />
<meta name="dcterms.identifier" content="E17122-08" />
<meta name="dcterms.isVersionOf" content="OLADM" />
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;1994, 2013,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved." />
<link rel="Start" href="../../index.htm" title="Home" type="text/html" />
<link rel="Copyright" href="../../dcommon/html/cpyr.htm" title="Copyright" type="text/html" />

<script type="application/javascript"  src="../../dcommon/js/headfoot.js"></script>
<script type="application/javascript"  src="../../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html" />
<link rel="Index" href="index.htm" title="Index" type="text/html" />
<link rel="Prev" href="dml_commands_2008.htm" title="Previous" type="text/html" />
<link rel="Next" href="dml_commands_2010.htm" title="Next" type="text/html" />
<link rel="alternate" href="../e17122.pdf" title="PDF version" type="application/pdf" />
<link rel="schema.dcterms" href="http://purl.org/dc/terms/" />
<link rel="stylesheet" href="../../dcommon/css/fusiondoc.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/header.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/footer.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/fonts.css">
<link rel="stylesheet" href="../../dcommon/css/foundation.css">
<link rel="stylesheet" href="../../dcommon/css/codemirror.css">
<link rel="stylesheet" type="text/css" title="Default" href="../../nav/css/html5.css">
<link rel="stylesheet" href="../../dcommon/css/respond-480-tablet.css">
<link rel="stylesheet" href="../../dcommon/css/respond-768-laptop.css">
<link rel="stylesheet" href="../../dcommon/css/respond-1140-deskop.css">
<script type="application/javascript" src="../../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">483/593</span> <!-- End Header --><a id="i78802"></a>
<hr />
<div id="OLADM839" class="refsect1">
<h1 class="refsect1">LIMIT command</h1>
<p><a id="sthref4481"></a><a id="sthref4482"></a><a id="sthref4483"></a><a id="sthref4484"></a>The LIMIT command<a id="sthref4485"></a><a id="sthref4486"></a><a id="sthref4487"></a> sets the current status list of a dimension and its dimension surrogates, or assigns values to a valuesets the current status list of a dimension and its dimension surrogates, or assigns values to a valueset. You use LIMIT to restrict the data values you are working on by temporarily limiting the range of the dimensions of the data. Using LIMIT, you create a<a id="sthref4488"></a> current status list for a dimension. The current status list of a dimension is an ordered list of currently accessible values for the dimension. Values that are in the current status list of a dimension are said to be "in status." For more information on dimension status and its importance when working with analytic workspace data, see <a href="dml_basics.htm#BABICBHE">"How to Specify the Set of Data that OLAP DML Operations Work Against"</a>.</p>
<div class="infoboxnotealso">
<p class="notep1">Tip:</p>
You set the current status list of one or more base dimensions of a composite, conjoint dimension, concat dimension, or a partition template based on the selected values of that object, see the <a href="dml_commands_2010.htm#CIHHAFHI">LIMIT BASEDIMS</a> command.</div>
<div class="infoboxnotealso">
<p class="notep1">See also::</p>
<a href="dml_functions_2010.htm#i78807">LIMIT function</a>, <a href="dml_commands_1032.htm#i78528">DEFINE VALUESET</a></div>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4489"></a>Syntax</p>
<p class="synopsis">LIMIT&nbsp;{<span class="italic">dimension</span> | <span class="italic">valueset</span> }&nbsp;[<span class="italic">concat-component</span>] <span class="italic">limit-type</span> [<span class="italic">limit-clause</span>] [IFNONE&nbsp;<span class="italic">label</span>]</p>
<p>where <span class="syntaxinlineitalic">limit-type</span> is one of the following keywords that specify how Oracle OLAP should modify the current status list:</p>
<dl>
<dd><span class="syntaxinline">TO</span></dd>
<dd><span class="syntaxinline">ADD</span></dd>
<dd><span class="syntaxinline">INSERT&nbsp;[FIRST|LAST|BEFORE</span>&nbsp;<span class="syntaxinlineitalic">position</span><span class="syntaxinline">|AFTER</span>&nbsp;<span class="italic">position</span><span class="syntaxinline">]</span></dd>
<dd><span class="syntaxinline">KEE</span></dd>
<dd><span class="syntaxinline">REMOVE</span></dd>
<dd><span class="syntaxinline">KEEP REORDER</span></dd>
<dd><span class="syntaxinline">COMPLEMENT</span></dd>
<dd><span class="syntaxinline">SORT [NAFIRST]</span></dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4490"></a>Parameters</p>
<dl>
<dt><span class="italic">dimension</span></dt>
<dd>
<p>The name of the dimension or dimension surrogate for which you are setting status.</p>
</dd>
<dt><span class="italic">valueset</span></dt>
<dd>
<p>The name of the valueset for which you are assigning values.</p>
</dd>
<dt><span class="italic">concat-component</span></dt>
<dd>
<p>Specifies the name of the component of the concat dimension whose values are used to determine the limit. When you specify a value for <span class="italic">concat-component</span>, the limit sets the status of the specified concat dimension using the values of <span class="italic">dimension</span> which is a component of the concat dimension. This <span class="italic">limit-clause</span> applies only when <span class="italic">dimension</span> is a concat dimension. The status of a concat dimension and of its component dimensions are not shared. Changing the status of a component dimension after you have used that dimension as the <span class="italic">limit-clause</span> in setting the status of a concat dimension does not change the status of the concat dimension.</p>
</dd>
<dt><span class="bold">TO</span></dt>
<dd>
<p>Replaces the status of a dimension or valueset with the values specified by the <span class="italic">limit-clause</span> arguments<span class="italic">.</span> The TO keyword selects values from the default status of a dimension in the same order as they appear in the LIMIT statement or in the order implied by the valuelist argument. When you use arguments that imply ordering, the ordering of the values is based on their positions in the default status.</p>
</dd>
<dt><span class="bold">ADD</span></dt>
<dd>
<p>Expands the status of a dimension or valueset by adding the values specified by the <span class="italic">limit-clause</span> arguments that are not already in status. The ADD keywords selects values from the default status of a dimension in the same order as they appear in the LIMIT statement or in the order implied by the <span class="italic">valuelist</span> argument. When you use arguments that imply ordering, the ordering of the values is based on their positions in the default status. ADD adds unique dimension values in the specified order after the current status list or valueset list.</p>
</dd>
<dt>INSERT</dt>
<dd>
<p>Expands the status of a dimension or valueset by inserting the values specified by the <span class="italic">limit-clause</span> arguments in a specified position in the current status. The INSERT keyword selects values from the default status of a dimension in the same order as they appear in the LIMIT statement or in the order implied by the <span class="italic">valuelist argument.</span></p>
<p>When you use arguments that imply ordering (for example,<code>value1</code>&nbsp;<code>TO</code>&nbsp;<code>value2</code>), the ordering of the values is based on their positions in the default status. INSERT adds values to a specified position in the current status. When an added value is already in status, it is removed from its position in the current status and added in the order in which it appears in the valuelist, preserving the order of the added values.</p>
</dd>
<dt>FIRST</dt>
<dd>
<p>Inserts the new values before the first value in status.</p>
</dd>
<dt>LAST</dt>
<dd>
<p>Inserts new values after the last value in status.</p>
</dd>
<dt>BEFORE</dt>
<dt>AFTER</dt>
<dd>
<p>Specifies whether new values Oracle OLAP inserts new values before or after position in the current status.</p>
</dd>
<dt><span class="italic">position</span></dt>
<dd>
<p>A dimension value in the current status, a character expression whose value is a dimension value in the current status, or an <code>INTEGER</code> expression whose value represents the position of a dimension value in the default status.</p>
</dd>
<dt><span class="bold">KEEP</span></dt>
<dd>
<p>Reduces the status of a dimension or valueset by keeping only the values specified by the <span class="italic">limit-clause</span> arguments<span class="italic">.</span> Oracle OLAP performs the selection based on the current dimension status. KEEP preserves the current order of values among the values that remain in the status.</p>
</dd>
<dt>KEEP REORDER</dt>
<dd>
<p>Like a simple KEEP, KEEP REORDER reduces the status of a dimension or valueset by keeping only the values specified by the <span class="italic">limit-clause</span> arguments<span class="italic">.</span> Oracle OLAP performs the selection based on the current dimension status. However, KEEP REORDER orders the result in the order of the selection arguments (that is, the <span class="italic">limit-clause</span> arguments) rather than by the current status order.</p>
</dd>
<dt><span class="bold">REMOVE</span></dt>
<dd>
<p>Reduces the status of a dimension or a valueset by removing the values specified by the <span class="italic">limit-clause</span> arguments<span class="italic">.</span> Oracle OLAP performs the selection based on the current dimension status. KEEP preserves the current order of values among the values that remain in the status.</p>
</dd>
<dt><span class="bold">COMPLEMENT</span></dt>
<dd>
<p>Replaces the status of a dimension or valueset with the values that are not specified by the <span class="italic">limit-clause</span> arguments<span class="italic">.</span> When you do not specify any arguments after COMPLEMENT, status is replaced by all values not now in status. Oracle OLAP performs the selection based on the current dimension status. COMPLEMENT leaves dimension values that remain in their default order. (Abbreviated COMP)</p>
</dd>
<dt><span class="bold">SORT</span></dt>
<dd>
<p>Sorts the values of a dimension or valueset according to the <span class="italic">limit-clause</span> arguments<span class="italic">.</span> LIMIT creates a temporary list of values based on the <span class="italic">limit-clause</span> arguments, and uses this list to sort the current status list. Any values not present in the temporary list are moved to the end of the current status list.</p>
</dd>
<dt>NAFIRST</dt>
<dd>
<p>Specifies that <code>NA</code> values are placed first in the sort list rather than last.</p>
</dd>
<dt><span class="italic">limit-clause</span></dt>
<dd>
<p>Specifies the values to use for the limit. The syntax is quite complex and, consequently, has been divided into the following topics:</p>
<dl>
<dd><a href="#i1019733">LIMIT (using values) command</a></dd>
<dd><a href="#i1019738">LIMIT using LEVELREL command</a></dd>
<dd><a href="#i1019747">LIMIT (using related dimension) command</a></dd>
<dd><a href="#i1019742">LIMIT (using parent relation)</a></dd>
<dd><a href="#i1019753">LIMIT NOCONVERT command</a></dd>
<dd><a href="#i1019757">LIMIT command (using POSLIST)</a></dd>
</dl>
</dd>
<dt>IFNONE</dt>
<dd>
<p>(For use only within an OLAP DML program) Specifies that program execution should branch to <span class="italic">label</span> when the requested status has null status or is based on a related dimension that turns out to have null status (that is, to have no values). In either case, the null status is not put into effect when program execution branches. Instead, the original status, before the LIMIT statement was executed, is retained even when OKNULLSTATUS is <code>YES</code>. Within an OLAP DML program, you cannot use both IFNONE and NULL in the same statement.</p>
</dd>
<dt><span class="italic">label</span></dt>
<dd>
<p>The name of a label elsewhere in the program constructed following the <a href="dml_commands_1056.htm#i1009483">"Guidelines for Constructing a Label"</a>. Execution of the program branches to the line directly following the specified label.</p>
<p>Note that <span class="italic">label,</span> as specified in IFNONE, must <span class="italic">not</span> be followed by a colon. However, the actual label elsewhere in the program must end with a colon.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4491"></a>Usage Notes</p>
<p class="subhead2"><a id="OLADM2502"></a>Specifying a Value of a Concat Dimension</p>
<p>To specify a value of a nonunique concat dimension, use the following syntax.</p>
<p class="synopsis">&lt;<span class="italic">base-dimension</span>: <span class="italic">value</span>&gt;.</p>
<p class="subhead2"><a id="OLADM2503"></a>Default Status List</p>
<p>When you first attach an analytic workspace, the current status list of each dimension consists of all of the values of the dimension that have read permission, in the order in which the values are stored. This list of values is called the default status list for the dimension.</p>
<p class="subhead2"><a id="i1019107"></a><a id="OLADM2504"></a>Unique Values</p>
<p>LIMIT selects only unique values of a dimension. When a value appears more than once in a LIMIT statement, it is placed in status in the order of its first appearance. For example, the following lines.</p>
<pre>
LIMIT time TO 'Jan97', 'Feb97', 'Jan97'
STATUS time
</pre>
<pre>
</pre>
<p>produce this output.</p>
<pre>
The current status of TIME is:
JAN97, FEB97 
</pre>
<p class="subhead2"><a id="OLADM2505"></a>Nonexistent Values</p>
<p>Oracle OLAP does not signal an error when you try to set the status of a dimension or valueset that has no values, unless you explicitly list values that do not exist. For example, assume that you have not added any values to a newly defined dimension WEEK. In this case, the statement <code>LIMIT week TO FIRST 10</code> does not cause an error. However, <code>LIMIT week TO 'Pete'</code> causes an error because <code>Pete</code> is not a value. Similarly, <code>LIMIT week TO 20</code> causes an error because <code>week</code> does not have a value at position <code>20</code>.</p>
<p class="subhead2"><a id="OLADM2506"></a>Setting the Status of a Dimension or Valueset to Null</p>
<p>Oracle OLAP allows the status of a dimension or valueset to be set to null (empty status) only when you have explicitly specified that you want null status to be permitted. You can give this permission in either of two ways:</p>
<ul>
<li>
<p>Set the OKNULLSTATUS option to <code>YES</code>. This specification indicates that null status should be allowed whenever it occurs (unless the IFNONE argument is present in a LIMIT statement).</p>
</li>
<li>
<p>Use the NULL keyword in a LIMIT statement to set the status of a particular dimension or valueset to null. You can do this by specifying TO NULL or KEEP&nbsp;NULL. This specification indicates that null status should be allowed for this LIMIT statement only.</p>
</li>
</ul>
<p>When you have not used either of these two methods to give permission for null status and you execute a LIMIT statement that would result in null status, Oracle OLAP does not change the status to null when it executes the statement. Instead, Oracle OLAP leaves the status as it was before the statement was issued and either signals an error (when IFNONE is not present) or branches to the IFNONE label (when IFNONE is present).</p>
<p>An IFNONE argument indicates that you do not want program execution to take its normal course when a dimension's status were to be set to null. Therefore, when IFNONE is present, Oracle OLAP branches to the IFNONE label and does not set the status to null, even when OKNULLSTATUS is <code>YES</code>. When the NULL keyword is present with IFNONE, Oracle OLAP signals the inconsistency with an error.</p>
<p>IFNONE requires the use of unstructured programming techniques. Oracle OLAP now provides alternative structured techniques, so the use of IFNONE is discouraged. IFNONE has been retained for compatibility with previous versions of Oracle OLAP.</p>
<p class="subhead2"><a id="OLADM2507"></a>Limiting a Conjoint</p>
<p>To limit a conjoint dimension to a value list, you can use the following constructions:</p>
<ul>
<li>
<p>Specify the actual values, surrounding each combination with angle brackets</p>
<pre>
LIMIT proddist TO '&lt;Tents, Boston&gt;' -
   '&lt;Footwear, Denver&gt;'
</pre></li>
</ul>
<pre>
</pre>
<ul>
<li>
<p>Use a variable name for the values, surrounding the combination with angle brackets.</p>
<pre>
prodname = 'Canoes'
distname = 'Seattle'
LIMIT proddist To &lt;prodname, distname&gt;
</pre></li>
<li>
<p>Create a multiline list, where each line is a combination surrounded by angle brackets.</p>
<pre>
namelist = '&lt;Tents Boston&gt;\n&lt;Footwear, -
   Denver&gt;\n &lt;Canoes, Seattle&gt;'
LIMIT proddist TO namelist
</pre></li>
</ul>
<pre>
</pre>
<ul>
<li>
<p>Use the implicit relation between a conjoint dimension and its base dimension to limit the conjoint dimension. For example, use the following statement to limit PRODDIST to all conjoint values having "Canoes" as one of its base values.</p>
<pre>
LIMIT proddist TO product 'Canoes'
</pre>
<div class="infobox-note">
<p class="notep1">Note:</p>
You can use logical position numbers for base dimension values in a conjoint dimension. <a href="dml_functions_1102.htm#CHEBBIBF">"Using INSTAT When the Dimension is a Conjoint Dimension"</a> illustrates using logical position numbers</div>
</li>
</ul>
<p>For an example of how you can limit a conjoint dimension that has a concat base dimension, see <a href="#i1020896">Example 10-25, "Limiting a Conjoint Dimension with a Concat Base Dimension"</a>.</p>
<p class="subhead2"><a id="OLADM2508"></a>Limiting a Concat</p>
<p>You can define a concat dimension using simple dimensions, conjoint dimensions, and other concat dimensions as the base dimensions of the concat. The syntax for limiting a concat dimension to one of its values is the following.</p>
<p class="synopsis">LIMIT&nbsp;<span class="italic">concatdim</span>&nbsp;TO&nbsp;&lt;<span class="italic">base-dim</span>: <span class="italic">value</span>&gt;</p>
<p>For example, the concat dimension <code>reg.dist.ccdim</code> has the simple dimensions <code>region</code> and <code>district</code> as its base dimensions. The following statement sets the status of <code>reg.dist.ccdim</code> to two of its values, <code>region:&nbsp;East</code> and <code>district:&nbsp;Atlanta</code>.</p>
<pre>
LIMIT reg.dist.ccdim TO &lt;region: 'East'&gt; &lt;district: 'Atlanta'&gt;
</pre>
<p>For other methods of setting the status of a concat dimension, see <a href="#i1019547">Example 10-16, "Limiting a Concat Dimension"</a>.</p>
<p class="subhead2"><a id="OLADM2509"></a>Alternative to Branching Using an IFNONE Label</p>
<p><a id="sthref4492"></a>As an alternative to branching to an <code>IFNONE</code> label, you can also handle null status for a dimension with the OKNULLSTATUS option. When you set OKNULLSTATUS to <code>YES</code>, then you are allowed to set the status of a dimension to null. You can then check for null status and execute appropriate commands with an IF...THEN...ELSE command, or you can handle null status as a case in a SWITCH command.</p>
<pre>
OKNULLSTATUS = YES
LIMIT month TO sales GT salesnum
IF STATLEN(month) LT 1
   THEN GOTO showerr
</pre></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="g1059810"></a>Examples</p>
<div id="OLADM2510" class="example">
<p class="titleinexample"><a id="sthref4493"></a>Example 10-14 Adding and Removing Values</p>
<p>These lines add values to the status for the <code>month</code> dimension.</p>
<pre>
LIMIT month TO 'Jan96' TO 'Jun96'
LIMIT month ADD 'Jul96' 'Sep96'
</pre>
<p>Issuing a <code>STATUS month</code> statement produces this output.</p>
<pre>
The current status of MONTH is:
Jan96 TO Jul96, Sep96
</pre>
<p>This line removes values from the status for the <code>month</code> dimension.</p>
<pre>
LIMIT month REMOVE 'Jan96' TO 'Mar96'
</pre>
<p>Now, issuing a <code>STATUS month</code> statement produces this output</p>
<pre>
The current status of MONTH is:
Apr96 TO Jul96, Sep96
</pre></div>
<!-- class="example" -->
<div id="OLADM2511" class="example">
<p class="titleinexample"><a id="sthref4494"></a>Example 10-15 Limiting with a Dimension Surrogate</p>
<p>A dimension and any dimension surrogates for it share the same status.</p>
<p>For example, assume that there is a <code>NUMBER</code> dimension named <code>store_id</code> that has the values <code>25</code>, <code>410</code>, <code>150</code>, <code>205</code>, <code>310</code>, and <code>10</code>. It also uses <code>storepos</code>, an INTEGER dimension surrogate for <code>store_id</code>. The dimension surrogate <code>storepos</code> has the values <code>1</code>, <code>2</code>, <code>3</code>, <code>4</code>, <code>5</code>, and <code>6</code>. A TEXT dimension surrogate for <code>store_id</code> is <code>storename</code>. It has the text values <code>Raoul's - Boston</code>, <code>Poldy's Potpourri</code>, <code>Molly's Emporium</code>, <code>Raoul's - Atlanta</code>, <code>Kinch's Kitchen Supplies</code>, and <code>Raoul's&nbsp;-&nbsp;Chicago</code>. The following statements are equivalent.</p>
<pre>
LIMIT store_id TO 25 410 150
LIMIT store_id TO storepos 1 2 3
LIMIT storepos TO 1 TO 3
LIMIT storepos TO first 3
LIMIT storename TO first 3
LIMIT storename TO 'Raoul\'s - Boston' TO 'Molly\'s Emporium'
LIMIT store_id TO storename storepos 1 2 3
LIMIT storename TO store_id 25 TO 150
</pre>
<p>The following statements set the status of the <code>store_id</code> dimension by limiting <code>storename</code>, which is a TEXT dimension surrogate for <code>store_id</code>, and report the values of <code>store_id</code>.</p>
<pre>
LIMIT storename TO 'Raoul\'s Sweets' TO 'Henry\'s Flowers'
REPORT store_id
</pre>
<p>The preceding statement produces the following output.</p>
<pre>
STORE_ID
--------------
10
20
30
</pre></div>
<!-- class="example" -->
<div id="OLADM2512" class="example">
<p class="titleinexample"><a id="i1019547"></a>Example 10-16 Limiting a Concat Dimension</p>
<p>In the following examples, the concat dimension <code>reg.dist.ccdim</code> has the simple dimensions <code>region</code> and <code>district</code> as its base dimensions. A concat dimension has an implicit relation to each of its component dimensions.</p>
<ul>
<li>
<p>The following statement sets the status of the concat dimension using the related dimension syntax and specifying the positions of the component (related) dimension.</p>
<pre>
LIMIT reg.dist.ccdim TO district 1, 4, 5
</pre>
<p>Issuing a <code>STATUS reg.dist.ccdim</code> statement produces the following output.</p>
<pre>
The current status of REG.DIST.CCDIM is:
&lt;DISTRICT: BOSTON&gt;, &lt;DISTRICT: DALLAS&gt;, &lt;DISTRICT: DENVER&gt;
</pre></li>
<li>
<p>The following statement limits the concat dimension directly to the values specified by positions of the concat dimension.</p>
<pre>
LIMIT reg.dist.ccdim TO 1, 4, 5
</pre>
<p>Issuing a <code>STATUS reg.dist.ccdim</code> statement produces the following output.</p>
<pre>
The current status of REG.DIST.CCDIM is:
&lt;REGION: EAST&gt;, &lt;DISTRICT: BOSTON&gt;, &lt;DISTRICT: ATLANTA&gt;
</pre></li>
<li>
<p>The following statements set the status of <code>district</code> and then limit <code>reg.dist.ccdim</code> to the status of <code>district</code>.</p>
<pre>
LIMIT district TO LAST 3
LIMIT reg.dist.ccdim TO district
</pre>
<p>Issuing a <code>REPORT reg.dist.ccdim</code> statement produces the following output.</p>
<pre>
REG.DIST.CCDIM
----------------------
&lt;district: Dallas&gt;
&lt;district: Denver&gt;
&lt;district: Seattle&gt;
</pre></li>
<li>
<p>In the following statement, the <span class="italic">limit-clause</span> argument is a list of values of the concat dimension.</p>
<pre>
LIMIT reg.dist.ccdim TO &lt;region: 'East'&gt; &lt;district:  'Boston'&gt; &lt;district: 'Atlanta'&gt;
</pre></li>
<li>
<p>The following statements define a valueset for <code>reg.dist.ccdim</code>, store the current status of the concat dimension in the valueset, reset the status of the concat to <code>ALL</code>, and then limit the concat to the valueset and report the values of the concat in status.</p>
<pre>
DEFINE regdist.vset VALUESET reg.dist.ccdim
LIMIT regdist.vset TO reg.dist.ccdim
LIMIT reg.dist.ccdim TO ALL
LIMIT reg.dist.ccdim TO regdist.vset
RPR W 22 reg.dist.ccdim
</pre>
<p>The preceding statements produce the following result.</p>
<pre>
REG.DIST.CCDIM
----------------------
&lt;region: East&gt;
&lt;district: Boston&gt;
&lt;district: Atlanta&gt;
</pre></li>
</ul>
<p>You can also limit a concat dimension using a valueset of one of its component dimensions:</p>
<ul>
<li>
<p>When the component dimensions contain identical values, you can limit the concat dimension to those values by using a Boolean expression. When the <code>district</code> and <code>region</code> dimensions both have <code>New</code> <code>York</code> as a value, then the following statement limits the <code>reg.dist.ccdim</code> to those values.</p>
<pre>
LIMIT reg.dist.ccdim TO BASEVAL(reg.dist.ccdim) EQ 'New York'
</pre></li>
<li>
<p>In the following example, the concat dimension <code>geog</code> has the simple dimension <code>region</code> and the conjoint dimension <code>cityandstate</code> as its base dimensions. The following statement sets the status of the concat dimension by limiting the conjoint base dimension.</p>
<pre>
LIMIT geog TO cityandstate &lt;'Princeton' 'New Jersey'&gt; -
   &lt;'Patterson' 'New Jersey'&gt;
</pre>
<p>Issuing a <code>STATUS geog</code> statement produces the following output.</p>
<pre>
The current status of GEOG is:
&lt;CITYANDSTATE: &lt;PRINCETON, NEW JERSEY&gt;, &lt;CITYANDSTATE: &lt;PATTERSON, NEW JERSEY&gt;&gt;
</pre></li>
<li>
<p>The following statements sets the status of the concat dimension by limiting the conjoint base dimension by specifying a value of a base dimension of the conjoint dimension.</p>
<pre>
LIMIT geog TO cityandstate city 'Princeton'
RPR W 30 geog
</pre>
<p>The preceding statement produces the following output.</p>
<pre>
GEOG
------------------------------
&lt;cityandstate: &lt;Princeton, New Jersey&gt;&gt;
&lt;cityandstate: &lt;Princeton, Indiana&gt;&gt;
</pre></li>
</ul>
</div>
<!-- class="example" -->
<div id="OLADM2513" class="example">
<p class="titleinexample"><a id="sthref4495"></a>Example 10-17 Limiting with a Worksheet</p>
<p>This example shows how to limit a dimension to the values that are contained in a column of a worksheet. Here the dimension <code>month</code> is limited to the values that are contained in the first column of the worksheet <code>workitem</code>. The following statements produce a <code>workitem</code> report, which is shown following the statements.</p>
<pre>
LIMIT month TO ALL
LIMIT wkscol TO 1
LIMIT wksrow TO workitem NE NA
REPORT workitem
               -WORKITEM-
               --WKSCOL--
WKSROW             1
-------------- ----------
             1 Jan96
             2 Feb96
             3 Mar96
             4 Apr96
             5 May96
             6 Jun96
             7 Jul96
             8 Aug96
             9 Sep96
            10 Oct96
            11 Nov96
            12 Dec96
</pre>
<p>The following statement limits the <code>month</code> dimension to the values that are listed in the first column of <code>workitem</code>.</p>
<pre>
LIMIT month TO CHARLIST(workitem)
</pre>
<p>Issuing a <code>STATUS month</code> statement produces the following output.</p>
<pre>
The current status of MONTH is:
Jan96 TO Dec96
</pre></div>
<!-- class="example" -->
<div id="OLADM2514" class="example">
<p class="titleinexample"><a id="CHDFHBAJ"></a><a id="i1021979"></a>Example 10-18 Using Ampersand Substitution with LIMIT</p>
<p><a id="sthref4496"></a><a id="sthref4497"></a><a id="sthref4498"></a>Assume that you want specify exactly two products for a program named <code>product.rpt</code>. In this cae, you could declare two dimension-value arguments to handle them. But when you want to be able to specify any number of products using LIMIT commands, then you can use a single argument with ampersand substitution.</p>
<p>Suppose you use the following commands in your program.</p>
<pre>
ARGUMENT natext TEXT
ARGUMENT widthamt INTEGER
ARGUMENT rptprod TEXT
    ...
LIMIT product TO &amp;rptprod
</pre>
<p>You can run the program and specify that you want the first three products in the report.</p>
<pre>
CALL product.rpt ('Missing' 8 'first 3')
</pre>
<p>The single quotation marks are necessary to indicate that "first 3" should be taken as a single argument, rather than two separate arguments separated by a space. The ampersand causes the LIMIT command to interpret <code>'first 3'</code> as a keyword expression rather than as a dimension value.</p>
</div>
<!-- class="example" -->
<div id="OLADM2515" class="example">
<p class="titleinexample"><a id="i1021996"></a>Example 10-19 Branching on Null Status</p>
<p><a id="sthref4499"></a><a id="sthref4500"></a><a id="sthref4501"></a><a id="sthref4502"></a>Your program might try to set or refine the status of the <code>product</code> dimension to include only the products for which unit sales are greater than 500. When no products have unit sales of more than 500, then you can use the <code>IFNONE</code> keyword to specify that execution branch to the <code>novals</code> label.</p>
<pre>
LIMIT product KEEP units GT 500 IFNONE novals
</pre>
<p>In the commands following the <code>novals</code> label, you can handle the special situation in which no products have units sales greater than 500.</p>
</div>
<!-- class="example" --></div>
<!-- class="refsubsect" -->
<div id="OLADM840" class="refsect2"><a id="i1019733"></a>
<hr />
<h2 class="refsect2">LIMIT (using values) command</h2>
<p><a id="ABC1039285"></a>A LIMIT command with a using values limit clause assigns values to a valueset or sets the current status list of a dimension or dimension surrogates to:</p>
<ul>
<li>
<p>Specified value or values. The values can be any of the following:</p>
<ul>
<li>
<p>Dimension values, expressed as literal values separated by commas, or as a multiline text expression, each line of which is a value of the dimension.</p>
</li>
<li>
<p>Ranges of dimension values, expressed as <span class="syntaxinlineitalic">value1</span> <span class="syntaxinline">TO</span> <span class="syntaxinlineitalic">value2</span>.</p>
</li>
<li>
<p>Integer values that represent the logical positions of dimension values, expressed as comma-delimited <code>INTEGER</code> values.</p>
</li>
<li>
<p>Ranges of INTEGER values that represent the logical positions of dimension values, expressed as <span class="syntaxinlineitalic">value1</span> <span class="syntaxinline">TO</span> <span class="syntaxinlineitalic">value2</span>.</p>
</li>
<li>
<p>Valuesets.</p>
</li>
</ul>
</li>
<li>
<p>Values for which a Boolean expression is <code>TRUE</code>.</p>
</li>
<li>
<p>The top or bottom performers of a dimension based on a criterion</p>
</li>
<li>
<p>The top or bottom performers of a dimension, by percentage, based on a criterion represented as an expression</p>
</li>
</ul>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4503"></a>Syntax</p>
<p class="synopsis">LIMIT&nbsp;{<span class="italic">dimension</span> | <span class="italic">valueset</span>}&nbsp;[<span class="italic">concat-component</span>] <span class="italic">limit-type -</span></p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<span class="italic">inclusive-val-args.</span>...| <span class="italic">exclusive-val-args</span>} [IFNONE&nbsp;<span class="italic">label</span>]</p>
<p>where:</p>
<ul>
<li>
<p><span class="syntaxinlineitalic">inclusive-val-args</span> is one or more of the following constructs:</p>
<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="syntaxinlineitalic">intvaluelist</span>&nbsp;<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="syntaxinlineitalic">text-expression</span><br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="syntaxinlineitalic">value1&nbsp;</span><span class="syntaxinline">TO&nbsp;</span><span class="syntaxinlineitalic">value2</span><br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="syntaxinlineitalic">valuelist</span><br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="syntaxinlineitalic">valueset</span><br /></li>
<li>
<p><span class="syntaxinlineitalic">exclusive-val-args</span> is one of the following constructs:</p>
<br />
<span class="syntaxinline">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ALL</span><br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="syntaxinlineitalic">boolean-expression</span><br />
<span class="syntaxinline">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{BOTTOM|TOP}&nbsp;</span><span class="syntaxinlineitalic">n&nbsp;</span><span class="syntaxinline">BASEDON&nbsp;</span><span class="syntaxinlineitalic">expression</span><br />
<span class="syntaxinline">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{BOTTOM|TOP}&nbsp;</span><span class="syntaxinlineitalic">n-percent&nbsp;</span><span class="syntaxinline">PERCENTOF&nbsp;</span><span class="syntaxinlineitalic">expression</span><br />
<span class="syntaxinline">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{FIRST|LAST}&nbsp;</span><span class="syntaxinlineitalic">n</span><br />
<span class="syntaxinline">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;NTH {</span><span class="syntaxinlineitalic">n</span> |<span class="italic">n</span> TO <span class="italic">n</span>}...<br />
<span class="syntaxinline">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;LONGLIST</span><br />
<span class="syntaxinline">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;LONGLIST</span><br />
<span class="syntaxinline">SESSION</span><br />
<span class="syntaxinline">STATUS</span><br />
<span class="syntaxinline">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;NULL</span><br /></li>
</ul>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4504"></a>Parameters</p>
<dl>
<dt><span class="italic">dimension</span></dt>
<dd>
<p>The name of the dimension or dimension surrogate for which you are setting status.</p>
</dd>
<dt><span class="italic">valueset</span></dt>
<dd>
<p>The name of the valueset for which you are assigning values.</p>
</dd>
<dt><span class="italic">concat-component</span></dt>
<dd>
<p>The name of the component of the concat dimension whose values are used to determine the limit. (See the main entry for <a href="#i78802">LIMIT command</a> for complete description of this argument.)</p>
</dd>
<dt><span class="italic">limit-type</span></dt>
<dd>
<p>A keyword that specifies how Oracle OLAP should modify the current status list. (See the main entry for <a href="#i78802">LIMIT command</a> for a list and descriptions of these keywords.)</p>
</dd>
<dt><span class="italic">intvaluelist</span></dt>
<dd>
<p>A list of one or more <code>INTEGER</code> values, or the name of a single-cell variable that holds a numeric value. Separate the values with commas (<code>,</code>). Numeric values with decimal places (SHORTDECIMAL or DECIMAL values) are automatically truncated to <code>INTEGER</code> values before being used as dimension values. An <code>INTEGER</code> specifies a dimension value by its logical position in the full set of dimension values. You cannot specify a <code>NUMBER</code> dimension value by an <code>INTEGER</code> position. When the values of the <code>NUMBER</code> dimension are <code>INTEGER</code> values, then you can set the status of the dimension by specifying dimension values, as in <span class="italic">intvalue1</span>, <span class="italic">intvalue2</span> and so on.</p>
</dd>
<dt><span class="italic">text-expression</span></dt>
<dd>
<p>A multiline text expression, each line of which is a value of dimension.</p>
</dd>
<dt><span class="italic">value1</span> TO <span class="italic">value2</span></dt>
<dd>
<p>Specifies a range of dimension values where <span class="italic">value1</span> and <span class="italic">value2</span> can be either <code>INTEGER</code> values or dimension values. Such a range can be increasing (for example, 1 to 10) or decreasing (for example, 10 to 1). When you specify an <code>INTEGER</code> value, that value is the logical position of a value in the default status list for the dimension. When you specify a dimension value, the command convertsthe value to the logical position of the value in the default status list for the dimensioon. The current status of the dimension or valueset is assigned accordingly.</p>
<div class="infoboxnotealso">
<p class="notep1">Tip:</p>
You cannot specify the values of a <code>NUMBER</code> dimension using INTEGER positions. Instead, define an <code>INTEGER</code> dimension surrogate for the <code>NUMBER</code> dimension and limit the dimension by the positions of the surrogate.</div>
</dd>
<dt><span class="italic">valuelist</span></dt>
<dd>
<p>A list of one or more values of dimension. A dimension value can be specified as a text expression whose value is a valid dimension value. For a <code>NUMBER</code> dimension, dimension values are numbers. For dimensions with a type of DAY, WEEK, MONTH, QUARTER, or YEAR, dimension values can also be specified as <code>DATE</code> expressions.</p>
</dd>
<dt><span class="italic">valueset</span></dt>
<dd>
<p>An analytic workspace valueset object that is a saved list that holds the values for the dimension whose status is being set. You cannot define a valueset for a dimension surrogate, therefore you cannot specify a valueset when setting the status of a dimension surrogate. However, when you limit a dimension with a valueset, then you automatically limit to the same set any dimension surrogates of that dimension. You can also specify a <a href="dml_functions_2010.htm#i78807">LIMIT function</a>.</p>
</dd>
<dt>ALL</dt>
<dd>
<p>Specifies that all dimension values in the default status are to be included in the status. The default status is made up of all dimension values for which read permission is granted, in the same order as when the dimension was last maintained. When you start up an analytic workspace, the status for each dimension in your analytic workspace is the default status. Changing the read permission for a dimension with PERMIT or PERMITRESET statement changes the default status for the dimension.</p>
</dd>
<dt><span class="italic">boolean-expression</span></dt>
<dd>
<p>An expression whose TRUE values are used by Oracle OLAP when limiting the dimension or status. The <span class="italic">boolean-expression</span> must be dimensioned by the dimension whose status is being set. For a dimension surrogate, the Boolean expression is evaluated over the dimension for which it is a surrogate. The data types of the expressions you are comparing in the Boolean expression must be similar. See the <a href="dml_functions_1045.htm#i79189">CONVERT</a> function for information on converting data types. To correctly use LIMIT with a Boolean expression you must understand how it works with a Boolean expression that has with multiple dimensions, see <a href="#i1020623">"How LIMIT Handles Boolean Expressions With More Than One Dimension"</a> for details.</p>
</dd>
<dt>BOTTOM &nbsp;<span class="italic">n</span>&nbsp;BASEDON&nbsp;<span class="italic">expression</span></dt>
<dt>TOP&nbsp;<span class="italic">n</span>&nbsp;BASEDON&nbsp;<span class="italic">expression</span></dt>
<dd>
<p>Specifies that the status of a dimension or valueset is set based on a criterion, where <span class="italic">n</span> is the number of values to select and <span class="italic">expression</span> is the criterion on which to base the selection. All dimensions of <span class="italic">expression</span> other than the one whose status is being set must be limited to a single value. TOP results in the status sorted in descending order, BOTTOM results in the status sorted in ascending order. You cannot use a composite after the BASEDON keyword. When you attempt to do so, an error message is displayed.</p>
</dd>
<dt>BOTTOM<span class="italic">&nbsp;n-percent</span>&nbsp;PERCENTOF&nbsp;<span class="italic">expression</span></dt>
<dt>TOP<span class="italic">&nbsp;n-percent</span>&nbsp;PERCENTOF&nbsp;<span class="italic">expression</span></dt>
<dd>
<p>Specifies that the status of a dimension or valueset is set by finding the top or bottom performers based on a criterion represented as an expression. This construction sorts values and adds them to the status that is based on their contribution, by percentage, to an expression.</p>
<p>For example, the following statement sorts products in descending order by each product's contribution to <code>TOTAL(sales)</code> and then add values to the status, starting from the top, until the cumulative total of <code>sales</code> by <code>product</code> reaches or exceeds 30 percent of all sales.</p>
<pre>
LIMIT product TO TOP 30 PERCENTOF TOTAL(sales, product)
</pre>
<div class="infobox-note">
<p class="notep1">Important:</p>
Do not use a criterion expression that causes a side effect or changes its own value.</div>
</dd>
<dt>FIRST&nbsp;<span class="italic">n</span></dt>
<dt>LAST <span class="italic">n</span></dt>
<dd>
<p>Specifies the first <span class="italic">n</span>, last <span class="italic">n</span> values in the dimension's full set of values when used with TO, ADD, COMPLEMENT, or INSERT. When used with KEEP or REMOVE, specifies the first <span class="italic">n</span>, last <span class="italic">n</span> or <span class="italic">n</span>th values in the current status.</p>
<div class="infobox-note">
<p class="notep1">Important:</p>
It can happen that the last item in status, based on a PERCENTOF criterion, is one of several dimension values having the same associated criterion value. In this case, LIMIT includes all dimension values with that criterion value in the resulting status, even when that causes the total of the criterion value to far exceed the specified percentage.</div>
</dd>
<dt>NTH {<span class="italic">n</span> |<span class="italic">n</span> TO <span class="italic">n</span>}</dt>
<dd>
<p>Specifies the <span class="italic">n</span> values in the dimension's full set of values when used with TO, ADD, COMPLEMENT, or INSERT. When used with KEEP or REMOVE, specifies the <span class="italic">n</span> values in the current status. You can specify any number of values or range of values.</p>
</dd>
<dt>LONGLIST</dt>
<dd>
<p>Indicates that there can be up to 2,000 arguments in the LIMIT statement. When there are less than 300 arguments, LONGLIST is not needed.</p>
</dd>
<dt>SESSION</dt>
<dd>
<p>Specifies that Oracle OLAP use only those dimension members that were created using a <a href="dml_commands_2016.htm#i1023561">MAINTAIN ADD SESSION</a> statement when performing the limit.</p>
</dd>
<dt>STATUS</dt>
<dd>
<p>Specifies that Oracle OLAP use the values that are presently in status when performing the limit. Specifying this keyword is equivalent to (but more efficient than) using a VALUES (<span class="italic">dimname</span>) statement.</p>
</dd>
<dt>NULL</dt>
<dd>
<p>Indicates an empty dimension or valueset list. Using this keyword with the TO or KEEP arguments removes all values from the current status, leaving an empty dimension or valueset list, even when OKNULLSTATUS is <code>NO</code>. You cannot use IFNONE and NULL in the same LIMIT statement. ADD, INSERT, and REMOVE NULL leave status unchanged. COMPLEMENT NULL places all values in status.</p>
</dd>
<dt>IFNONE <span class="italic">label</span></dt>
<dd>
<p>Specifies that program execution should branch to <span class="italic">label</span> when the requested status has null status or is based on a related dimension that turns out to have null status (that is, to have no values). (See the main entry for <a href="#i78802">LIMIT command</a> for complete description of this phrase.)</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4505"></a>Usage Notes</p>
<p class="subhead2"><a id="OLADM2516"></a>Considerations When Specifying Values</p>
<p>Keep the following points in mind when specifying values in <span class="italic">limit-clause:</span></p>
<ul>
<li>
<p><a id="sthref4506"></a>The setting of the LIMITSTRICT option determines how Oracle OLAP behaves when a list of values in a LIMIT command, a LIMIT function, or a QDR contains a nonexistent value. By default, when you specify a nonexistent value, Oracle OLAP treats the nonexistent value as an invalid value and stops executing the limit and issues an error. If, instead, you want Oracle OLAP to treat a nonexistent value as an <code>NA</code> value, set the value of LIMITSTRICT to <code>NO</code>.</p>
</li>
<li>
<p>You can embed a quoted string within a quoted string, which is necessary when there are special characters in a base dimension value of a composite or conjoint dimension, such as <code>Joe's Deli</code>. See the <a href="dml_expression.htm#CJAJJIJG">"Text Literals"</a>.</p>
</li>
<li>
<p>When the dimension has the NTEXT data type and an argument that represents a dimension value has the TEXT data type, LIMIT converts the argument value to NTEXT. Similarly, when the dimension has the TEXT data type and an argument that represents a dimension value has the NTEXT data type, LIMIT converts the argument value to TEXT; however, in this case, the conversion can result in data loss when the NTEXT value cannot be represented in the database character set.</p>
</li>
<li>
<p>When you specify a value of a dimension with a type of DAY, WEEK, MONTH, QUARTER, or YEAR, the value can be in the format specified by the VNF (value name format) for the dimension (or in the default VNF for the type of dimension you are limiting when the dimension does not have a VNF) or in a valid input style for DATE values.</p>
<p>You must only provide the date components that are relevant for the type of dimension you are limiting. For a DAY or WEEK dimension, you must supply the day, month, and year components. For a MONTH or QUARTER dimension, you must only supply the month and year (for example, <code>Jun95</code> or <code>0695</code> for June 1995). For a YEAR dimension, you must only specify the year (for example, <code>95</code> for 1995). The valid input styles for dates are discussed in DATEORDER.</p>
<p>When you specify a DATE expression or a text value that represents a complete date, you can specify <span class="italic">any</span> date that falls within the time period that is represented by the desired dimension value. Oracle OLAP uses the DATEORDER option to resolve any ambiguities.</p>
</li>
</ul>
<p class="subhead2"><a id="i1020623"></a><a id="OLADM2517"></a>How LIMIT Handles Boolean Expressions With More Than One Dimension</p>
<p>When you have used this type of LIMIT command (or LIMIT function) to limit only one dimension of a multi-dimensional Boolean expression, you effectively limit that expression to the values of limited dimension and <span class="italic">only</span> the current values of the unlimited dimensions.</p>
<p>For example, assume that you you have a <code>sales</code> variable is dimensioned by three dimensions: <code>product</code>, <code>district</code>, and <code>month</code>.</p>
<p>Let's look first at what happens when you explicitly limit <code>district</code> and <code>month</code> dimensions to single values and then limit <code>product</code> using a Boolean expression.</p>
<pre>
LIMIT month TO 'Jan95'
LIMIT district TO 'Boston'
LIMIT product TO sales GT 90000
STATUS product
</pre>
<pre>
</pre>
<p>The STATUS statement produces the following output.</p>
<pre>
The current status of PRODUCT is:
Footwear
</pre>
<pre>
</pre>
<p>In this case, the resulting status is all of the products whose sales exceed $90,000 for the month of January 1995 in the Boston district, which is only Footwear.</p>
<p>Now consider the following example in which the MONTH dimension is not limited to a single value.</p>
<pre>
LIMIT product TO ALL
LIMIT month TO 'Jan95' 'Feb95' 'Mar95'
LIMIT district TO 'Boston'
</pre>
<pre>
</pre>
<p>When you execute a REPORT <code>sales</code> statement, you can see the BOSTON sales figures for three months.</p>
<pre>
DISTRICT: BOSTON
               -------------SALES--------------
               -------------MONTH--------------
PRODUCT          Jan95      Feb95      Mar95
-------------- ---------- ---------- ----------
Tents           32,153.52  32,536.30  43,062.75
Canoes          66,013.92  76,083.84  91,748.16
Racquets        52,420.86  56,837.88  58,838.04
Sportswear      53,194.70  58,913.40  62,797.80
Footwear        91,406.82  86,827.32 100,199.46
</pre>
<pre>
</pre>
<p>However, the following LIMIT and STATUS commands produce the output shown following them. Again, only Footwear is in the status for <code>month</code>.</p>
<pre>
LIMIT product TO sales GT 90000
STATUS product
 
The current status of PRODUCT is:
Footwear
</pre>
<pre>
</pre>
<p>In this case, each product has three sales figures, one for each month. For each product, LIMIT evaluates the sales data for <span class="italic">only</span> the first month in status. A product is added to the status when its sales data exceeds $90,000 in that month.</p>
<p>When you would like all months evaluated for each product, you can use the EVERY, ANY, or NONE functions. For example, the following LIMIT statement adds a product to the status when <span class="italic">any</span> of its months has a sales figure that exceeds $90,000.</p>
<pre>
LIMIT product TO ANY(sales GT 90000, product)
</pre>
<p>In this case a <code>STATUS product</code> statement produces the following output.</p>
<pre>
The current status of product is:
Canoes, Footwear
</pre>
<p class="subhead2"><a id="OLADM2518"></a>Limiting Using Implicit Relations</p>
<p>Every dimension with a type of DAY, WEEK, MONTH, QUARTER, or YEAR is related to all other dimensions of this type through an implicit relation. When you limit the values of one DAY, WEEK, MONTH, QUARTER, or YEAR dimension by specifying another DAY, WEEK, MONTH, QUARTER, or YEAR dimension as the <span class="italic">related-dimension,</span> Oracle OLAP uses the implicit relation by default. However, when an explicit relation is defined between the two of these types of dimensions, you can override the default by specifying the name of the explicit relation as the <span class="italic">related-dimension.</span> For example, you can issue the following statement.</p>
<pre>
LIMIT month TO quarter year
</pre>
<pre>
</pre>
<p>This statement temporarily limits <code>quarter</code> to <code>year</code>, then limits <code>month</code> to <code>quarter</code>, and finally, restores <code>quarter</code> to its original status.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4507"></a>Examples</p>
<div id="OLADM2519" class="example">
<p class="titleinexample"><a id="CCHFGAHI"></a>Example 10-20 Using LIMIT to Partially Populate Variables</p>
<pre>
DEFINE GEOG DIMENSION TEXT
DEFINE PRODUCTS DIMENSION TEXT
DEFINE SALES VARIABLE DECIMAL &lt;PRODUCTS GEOG&gt;
DEFINE COSTS VARIABLE DECIMAL &lt;PRODUCTS GEOG&gt;
</pre>
<p>Assume also as shown by the following reports that you have populated the dimensions but not the variables. All of the elements of the <code>costs</code> and <code>sales</code> variables appear in the report and all have the value of <code>NA</code>.</p>
<pre>
PRODUCTS
------------
TVs
Radios
Skis
Bikes
 
GEOG
------------
Boston
Springfield
New Orleans
Baton Rouge
Quebec City
Montreal
Toronto
Norfolk
 
             -------------------SALES-------------------
             -----------------PRODUCTS------------------
GEOG            TVs       Radios      Skis      Bikes
------------ ---------- ---------- ---------- ----------
Boston               NA         NA         NA         NA
Springfield          NA         NA         NA         NA
New Orleans          NA         NA         NA         NA
Baton Rouge          NA         NA         NA         NA
Quebec City          NA         NA         NA         NA
Montreal             NA         NA         NA         NA
Toronto              NA         NA         NA         NA
Norfolk              NA         NA         NA         NA
 
             -------------------COSTS-------------------
             -----------------PRODUCTS------------------
GEOG            TVs       Radios      Skis      Bikes
------------ ---------- ---------- ---------- ----------
Boston               NA         NA         NA         NA
Springfield          NA         NA         NA         NA
New Orleans          NA         NA         NA         NA
Baton Rouge          NA         NA         NA         NA
Quebec City          NA         NA         NA         NA
Montreal             NA         NA         NA         NA
Toronto              NA         NA         NA         NA
Norfolk              NA         NA         NA         NA
 
</pre>
<p>Now you issue the following LIMIT command so that only values indexed by Boston and Springfield values of the geog dimension are accessible to Oracle OLAP.</p>
<pre>
LIMIT geog TO 'Boston' 'Springfield'
 
</pre>
<p>Now you issue new reports for <code>geog</code>, costs, and <code>sales</code>. For the <code>geog</code> dimension only the Boston and Springfield elements values appear. Also, only the elements of the <code>costs</code> and <code>sales</code> variables that are indexed by Boston and Springfield appear in the report.</p>
<pre>
GEOG
------------
Boston
Springfield
 
             -------------------SALES-------------------
             -----------------PRODUCTS------------------
GEOG            TVs       Radios      Skis      Bikes
------------ ---------- ---------- ---------- ----------
Boston               NA         NA         NA         NA
Springfield          NA         NA         NA         NA
 
             -------------------COSTS-------------------
             -----------------PRODUCTS------------------
GEOG            TVs       Radios      Skis      Bikes
------------ ---------- ---------- ---------- ----------
Boston               NA         NA         NA         NA
Springfield          NA         NA         NA         NA
 
</pre>
<p>Now you issue two assignment statements that use the RANDOM function to populate the <code>costs</code> and <code>sales</code> variables, followed by the LIMIT command that sets the status of the geog dimension to its default status of ALL.</p>
<pre>
 
sales = RANDOM (200)
costs = RANDOM (100)
LIMIT geog to ALL
 
</pre>
<p>Now you issue new reports for <code>geog</code>, costs, and <code>sales</code>. All of the values of the <code>geog</code> dimension and all of the elements of the <code>costs</code> and <code>sales</code> variables appear. However, only the elements of the <code>costs</code> and <code>sales</code> variables that are indexed by Boston and Springfield have non-NA values.</p>
<pre>
 
GEOG
------------
Boston
Springfield
New Orleans
Baton Rouge
Quebec City
Montreal
Toronto
Norfolk
 
             -------------------SALES-------------------
             -----------------PRODUCTS------------------
GEOG            TVs       Radios      Skis      Bikes
------------ ---------- ---------- ---------- ----------
Boston           199.97     133.82      10.07     148.17
Springfield      173.94      27.56      32.21      47.40
New Orleans          NA         NA         NA         NA
Baton Rouge          NA         NA         NA         NA
Quebec City          NA         NA         NA         NA
Montreal             NA         NA         NA         NA
Toronto              NA         NA         NA         NA
Norfolk              NA         NA         NA         NA
 
             -------------------COSTS-------------------
             -----------------PRODUCTS------------------
GEOG            TVs       Radios      Skis      Bikes
------------ ---------- ---------- ---------- ----------
Boston            43.52      25.32      68.68      10.38
Springfield        9.49      27.96      61.76      16.12
New Orleans          NA         NA         NA         NA
Baton Rouge          NA         NA         NA         NA
Quebec City          NA         NA         NA         NA
Montreal             NA         NA         NA         NA
Toronto              NA         NA         NA         NA
Norfolk              NA         NA         NA         NA
</pre></div>
<!-- class="example" -->
<div id="OLADM2520" class="example">
<p class="titleinexample"><a id="sthref4508"></a>Example 10-21 Limiting with a Boolean Expression</p>
<p>You can limit a dimension or valueset according to the values of a Boolean expression. In this example, the values of the TOTALL function are broken out by <code>product</code> and compared to a constant. The LIMIT statement sets the status to all the products whose sales, totaled for all months and districts, are greater than 12 million.</p>
<pre>
LIMIT product TO TOTAL(sales product) GT 12000000
</pre></div>
<!-- class="example" -->
<div id="OLADM2521" class="example">
<p class="titleinexample"><a id="sthref4509"></a>Example 10-22 Limiting with a Formula</p>
<p>When you use the same criterion frequently to limit a dimension, you can save the expression as a formula and use the name of the formula as the limit expression.</p>
<pre>
DEFINE criterion FORMULA TOTAL(sales product) GT 12000000
LIMIT product TO criterion
</pre></div>
<!-- class="example" -->
<div id="OLADM2522" class="example">
<p class="titleinexample"><a id="sthref4510"></a>Example 10-23 Limiting with a Valueset</p>
<p>You can save a status list in a valueset and use those values later to limit the status. When it takes several LIMIT commands to produce the status list you want, the valueset keeps you from having to repeat those LIMIT commands each time you need the same list. The following statements limit <code>district</code> to the districts in which sportswear sales exceeded $1,000,000 in 1996. The status is saved in the valueset <code>sports.district</code>, and you can limit <code>district</code> to the same list with one LIMIT statement.</p>
<pre>
DEFINE sports.district VALUESET district
LIMIT product TO 'Sportswear'
LIMIT month TO year 'Yr96'
LIMIT sports.district TO TOTAL(sales district) GT 1000000
LIMIT district TO sports.district
</pre>
<p>Issuing a <code>STATUS district</code> statement produces this output.</p>
<pre>
The current status of DISTRICT is:
ATLANTA TO DENVER
</pre></div>
<!-- class="example" -->
<div id="OLADM2523" class="example">
<p class="titleinexample"><a id="sthref4511"></a>Example 10-24 Limiting with a Variable</p>
<p>Here the TOP and BASEDON keywords are used to limit the status of a dimension, using the values of a variable as a criterion. The status list is sorted in descending order according to the values of <code>sales</code>.</p>
<pre>
LIMIT product TO 'Sportswear'
LIMIT month TO 'Jul96'
LIMIT district TO TOP 2 BASEDON sales
</pre>
<p>The following REPORT statement</p>
<pre>
REPORT DOWN district sales
</pre>
<p>produces this output, which shows the results of the LIMIT commands.</p>
<pre>
PRODUCT: SPORTSWEAR
               --SALES---
               --MONTH---
DISTRICT         Jul96
-------------- ----------
Dallas         220,416.81
Atlanta        211,666.14
</pre></div>
<!-- class="example" -->
<div id="OLADM2524" class="example">
<p class="titleinexample"><a id="i1020896"></a>Example 10-25 Limiting a Conjoint Dimension with a Concat Base Dimension</p>
<p>Assume that your analytic workspace contains a conjoint dimension named <code>prod.regdist</code> that has the <code>product</code> simple dimension and the <code>reg.dist.ccdim</code> concat dimension as its base dimensions. The conjoint dimension <code>prod.regdist</code> has the following values.</p>
<pre>
Tents   &lt;region: East&gt;
Tents   &lt;region: West&gt;
Canoes  &lt;region: East&gt;
Canoes  &lt;region: West&gt;
Tents   &lt;district: Boston&gt;
Tents   &lt;district: Atlanta&gt;
Tents   &lt;district: Denver&gt;
Canoes  &lt;district: Atlanta&gt;
Canoes  &lt;district: Seattle&gt;
</pre>
<p>There are two different ways that you can set the status of a conjoint dimension that has a concat dimension as a base dimension:</p>
<ul>
<li>
<p>By specifying the concat dimension, one of its component dimensions, and a value of the component dimension. The following LIMIT statement sets the status of <code>prod.regdist</code> in this manner.</p>
<pre>
LIMIT prod.regdist TO reg.proddist.ccdim district 'Atlanta'
RPR W 20 prod.regdist
</pre>
<p>The preceding statement produces the following output.</p>
<pre>
--------------PROD.REGDIST---------------
      PRODUCT           REG.DIST.CCDIM
-------------------- --------------------
Tents                &lt;district: Atlanta&gt;
Canoes               &lt;district: Atlanta&gt;
</pre></li>
<li>
<p>You can also set the status of the conjoint by specifying its values. The following LIMIT statement sets the status of <code>prod.regdist</code> in this manner.</p>
<pre>
LIMIT prod.regdist TO &lt;'Tents' '&lt;region: East&gt;'&gt; &lt;'Tents' '&lt;district: Boston&gt;'&gt;
RPR W 20 prod.regdist
</pre>
<p>The preceding statement produces the following output.<a id="sthref4512"></a></p>
<pre>
--------------PROD.REGDIST---------------
      PRODUCT           REG.DIST.CCDIM
-------------------- --------------------
Tents                &lt;region: East&gt;
Tents                &lt;district: Boston&gt;
</pre></li>
</ul>
</div>
<!-- class="example" --></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="OLADM841" class="refsect2"><a id="i1019738"></a>
<hr />
<h2 class="refsect2">LIMIT using LEVELREL command</h2>
<p><a id="ABC1112988"></a>A LIMIT command that uses only dimension values that are at the same level as the current level of the hierarchical dimension or dimension surrogate when setting status or assigning values to a valueset.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4513"></a>Syntax</p>
<p class="synopsis">LIMIT&nbsp;{<span class="italic">dimension</span> | <span class="italic">valueset</span>}&nbsp;[<span class="italic">concat-component</span>] <span class="italic">limit-type-</span></p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;LEVELREL <span class="italic">level-relation-clause</span>&nbsp;[IFNONE&nbsp;<span class="italic">label</span>]</p>
<p>where the syntax of <span class="syntaxinlineitalic">level-relation-clause</span> varies depending on the dimensionality of the object you want to specify:</p>
<ul>
<li>
<p>To specify a level relation which is multidimensional you use the following syntax:</p>
<p class="synopsis">RELATION <span class="italic">level-relation-name</span> [QUALIFY <span class="italic">relation-dimension-name</span> [<span class="italic">inclusive-val-args.</span>..]...]</p>
<p>(You can also use this syntax when the level relation is one-dimensional.)</p>
</li>
<li>
<p>To specify a level relation which is one-dimensional, you can use the following simplified syntax:</p>
<p class="synopsis">&nbsp;<span class="italic">level-relation-name</span>&nbsp;[<span class="italic">valueset2</span>]&nbsp;&nbsp;&nbsp;</p>
</li>
</ul>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4514"></a>Parameters</p>
<dl>
<dt><span class="italic">dimension</span></dt>
<dd>
<p>The name of the dimension or dimension surrogate for which you are setting status.</p>
</dd>
<dt><span class="italic">valueset</span></dt>
<dd>
<p>The name of the valueset for which you are assigning values; or a <a href="dml_functions_2010.htm#i78807">LIMIT function</a>.</p>
</dd>
<dt><span class="italic">concat-component</span></dt>
<dd>
<p>The name of the component of the concat dimension whose values are used to determine the limit. (See the main entry for <a href="#i78802">LIMIT command</a> for complete description of this argument.)</p>
</dd>
<dt><span class="italic">limit-type</span></dt>
<dd>
<p>A keyword that specifies how Oracle OLAP should modify the current status list. (See the main entry for <a href="#i78802">LIMIT command</a> for a list and descriptions of these keywords.)</p>
</dd>
<dt>LEVELREL</dt>
<dd>
<p>Sets the status of a hierarchical dimension to all of the values of the hierarchical dimension that are at the same level as the current value of the dimension; or, that limits a hierarchical dimension to those values of the hierarchical dimension that are at the same level as the current value of the dimension and that are also in a specified valueset.</p>
</dd>
<dt>RELATION</dt>
<dd>
<p>Specifies that Oracle OLAP performs the limit based on the values of the relation specified by <span class="italic">level-relation-name</span>. Specify this keyword if <span class="italic">level-relation-name</span> is a multidimensional relation.</p>
</dd>
<dt><span class="italic">level-relation-name</span></dt>
<dd>
<p>Specifies the name of a level relation for the hierarchical dimension you want to limit. See <a href="dml_basics.htm#BABHJAGG">"Levelrel Relation"</a> for more information.</p>
</dd>
<dt>QUALIFY <span class="italic">relation-dimension-name</span> [<span class="italic">inclusive-val-args</span>]</dt>
<dd>
<p>Identifies the values by which Oracle OLAP performs the limit.</p>
<ul>
<li>
<p><span class="syntaxinlineitalic">relation-dimension-name</span> is the name of a dimension of the relation specified by <span class="italic">level-relation-name</span>.</p>
</li>
<li>
<p><span class="syntaxinlineitalic">inclusive-val-args</span> specifies the values of <span class="italic">relation-dimension-name</span> to use when determining the values of <span class="italic">level-relation-name</span> by which to perform the limit. You can specify any inclusive valuelist argument as described in the syntax of the <span class="italic">inclusive-val-args</span> argument for the <span class="italic">valuelist</span> clause for LIMIT command. (See <a href="#i1019733">LIMIT (using values) command</a> for detailed syntax.) When you omit this argument, Oracle OLAP uses the current status of the dimension when performing the limit.</p>
</li>
</ul>
</dd>
<dt><span class="italic">valueset2</span></dt>
<dd>
<p>Specifies the name of a valueset object is dimensioned by the level dimension for the hierarchical dimension that you want to limit. The result of using this argument is the individual valueset that corresponds to the level value of the current position of the dimensions.</p>
<p>You can also specify a<a href="dml_functions_2010.htm#i78807">LIMIT function</a>.</p>
</dd>
<dt>IFNONE <span class="italic">label</span></dt>
<dd>
<p>Specifies that program execution should branch to <span class="italic">label</span> when the requested status has null status or is based on a related dimension that turns out to have null status (that is, to have no values). (See the main entry for <a href="#i78802">LIMIT command</a> for complete description of this phrase.)</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4515"></a>Examples</p>
<div id="OLADM2525" class="example">
<p class="titleinexample"><a id="sthref4516"></a>Example 10-26 Limiting to a Single Time Period of a Hierarchical Time Dimension</p>
<p>Assume that you have defined a hierarchical text dimension named <code>time</code>, a level dimension named <code>timelevels</code> that has <code>Month</code> and <code>Year</code> as values, and a relation named <code>timelevelsrel</code> that is dimensioned by <code>time</code> and that has <code>timelevels</code> as a related dimension (that is, for each value of the <code>time</code> dimension, <code>timelevelsre</code> contains a value of either <code>Month</code> or <code>Year</code>) When you want to limit the values of <code>time</code> that are already in status to only those values that are at the same level as <code>Jan99</code>, you can issue the following statement.<a id="sthref4517"></a></p>
<pre>
LIMIT time TO LEVELREL timelevelsrel
</pre>
<p>This is equivalent to issuing the following statement</p>
<pre>
LIMIT time TO RELATION timelevelsrel QUALIFY time CURRENT
</pre></div>
<!-- class="example" --></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="OLADM842" class="refsect2"><a id="i1019747"></a>
<hr />
<h2 class="refsect2">LIMIT (using related dimension) command</h2>
<p><a id="ABC1040283"></a>A LIMIT command with a related-dimension limit clause that uses the values of a different related dimension to assign values to a valueset or to set the status of a dimension or a dimension surrogate.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4518"></a>Syntax</p>
<p class="synopsis">LIMIT&nbsp;{<span class="italic">dimension</span> | <span class="italic">valueset</span>} <span class="italic">limit-type related-dim-clause</span> [IFNONE&nbsp;<span class="italic">label</span>]</p>
<p>where the syntax of <span class="syntaxinlineitalic">related-dim-clause</span> varies depending on the type of object being specified:</p>
<ul>
<li>
<p>When you want to specify a relation, the syntax is:</p>
<p class="synopsis">RELATION <span class="italic">relation-name</span> [QUALIFY <span class="italic">relation-dimension-name</span> [<span class="italic">inclusive-val-args.</span>..]...]</p>
</li>
<li>
<p>When you want to specify a dimension that is related to the dimension being limited, the syntax is:</p>
<p class="synopsis">&nbsp;<span class="italic">related-dimension-name</span>&nbsp;[<span class="italic">related-dimension-valuelist</span>]&nbsp;&nbsp;&nbsp;</p>
<p>(You can also use this simplified syntax when the object is a one-dimensional relation.)</p>
</li>
</ul>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4519"></a>Parameters</p>
<dl>
<dt><span class="italic">dimension</span></dt>
<dd>
<p>The name of the dimension or dimension surrogate for which you are setting status.</p>
</dd>
<dt><span class="italic">valueset</span></dt>
<dd>
<p>The name of the valueset for which you are assigning values; or a <a href="dml_functions_2010.htm#i78807">LIMIT function</a>.</p>
</dd>
<dt><span class="italic">concat-component</span></dt>
<dd>
<p>The name of the component of the concat dimension whose values are used to determine the limit. (See the main entry for <a href="#i78802">LIMIT command</a> for complete description of this argument.)</p>
</dd>
<dt><span class="italic">limit-type</span></dt>
<dd>
<p>A keyword that specifies how Oracle OLAP should modify the current status list. (See the main entry for <a href="#i78802">LIMIT command</a> for a list and descriptions of these keywords.)</p>
</dd>
<dt>RELATION <span class="italic">relation-name</span></dt>
<dd>
<p>Specifies that Oracle OLAP performs the limit based on the values of the relation specified by <span class="italic">relation-name</span>. Specify this keyword if <span class="italic">relation-name</span> is a multidimensional relation. Also, when there are multiple relations between the dimension being limited and the dimension specified by <span class="italic">related-dimension-name</span>, you can use this phrase to identify which relation Oracle OLAP uses to perform the limit.</p>
</dd>
<dt>QUALIFY <span class="italic">relation-dimension-name</span> [<span class="italic">inclusive-val-args</span>]</dt>
<dd>
<p>Identifies the values by which Oracle OLAP performs the limit, where:</p>
<ul>
<li>
<p><span class="syntaxinlineitalic">relation-dimension-name</span> is the name of a dimension of the relation specified by <span class="italic">relation-name</span>.</p>
</li>
<li>
<p><span class="syntaxinlineitalic">inclusive-val-args</span> specifies the values of <span class="italic">relation-dimension-name</span> to use when determining the parent values. You can specify any inclusive valuelist argument as described in the syntax of the <span class="italic">inclusive-val-args</span> argument for the <span class="italic">valuelist</span> clause for LIMIT command. See <a href="#i1019733">LIMIT (using values) command</a> for detailed syntax. When you omit this argument, Oracle OLAP uses the current status list of the related dimensions when performing the limit.</p>
</li>
</ul>
</dd>
<dt><span class="italic">related-dimension-name</span></dt>
<dd>
<p>Specifies the name of a one-dimensional relation or a dimension that is related to the dimension being limited. For <span class="italic">related-dimension-name</span>, you can also specify a dimension surrogate for the dimension you are limiting, or a dimension surrogate of the related dimension. For example, <code>dimsurr</code> is a dimension surrogate of <code>dim2</code> and <code>dim2</code> is related to <code>dim1</code>. The dimension surrogate <code>dimsurr</code> has the values <code>Dsv1</code>, <code>Dsv2</code>, <code>Dsv3</code> and <code>Dsv4</code>. The following statement limits <code>dim1</code> by specifying values of <code>dimsurr</code>.</p>
<pre>
LIMIT dim1 TO dimsurr dsv1 dsv3
</pre></dd>
<dt><span class="italic">related-dimension-valuelist</span></dt>
<dd>
<p>The values of the related dimension or a dimension surrogate for the related dimension or the dimension specified using the syntax shown in LIMIT command. See <a href="#i1019733">LIMIT (using values) command</a> for detailed syntax. When this argument is present in a LIMIT statement, status is obtained by selecting the values of the dimension being limited, which are related to the <span class="italic">related-dimension</span> values. When <span class="italic">valuelist</span> is omitted, the current status value of <span class="italic">related-dimension</span> is used.</p>
</dd>
<dt>IFNONE <span class="italic">label</span></dt>
<dd>
<p>Specifies that program execution should branch to <span class="italic">label</span> when the requested status has null status or is based on a related dimension that turns out to have null status (that is, to have no values). (See the main entry for <a href="#i78802">LIMIT command</a> for complete description of this phrase.)</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4520"></a>Usage Notes</p>
<p class="subhead2"><a id="OLADM2526"></a>Limiting to a Related Dimension Is a Two-Step Process</p>
<p>When you limit a dimension or valueset to a related dimension, the resulting status is determined in a two-step process:</p>
<ol>
<li>
<p>The dimension values are arranged in the order of the values of the related dimension.</p>
</li>
<li>
<p>When there are multiple values of the dimension for any value of the related dimension, those values are arranged in the order of their default status.</p>
</li>
</ol>
<p class="subhead2"><a id="OLADM2527"></a>Suppressing the Sort When Limiting to a Related Dimension</p>
<p>You can suppress the sort that occurs when you limit a dimension or valueset to a related dimension by setting LIMITSORTREL to <code>NO</code> which can significantly improve performance when the dimension you are limiting is large.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
When LIMIT.SORTREL is <code>NO</code>, printed output of a dimension may not appear in logical order.</div>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4521"></a>Examples</p>
<div id="OLADM2528" class="example">
<p class="titleinexample"><a id="sthref4522"></a>Example 10-27 Limiting with a Related Dimension</p>
<p>Here the status of a dimension is limited using a related dimension. This statement limits <code>district</code> to <code>Boston</code> and <code>Atlanta</code>, which are in the <code>East</code> region.</p>
<pre>
LIMIT district TO region 'East'
</pre>
<p>This statement limits <code>product</code> to <code>Sportswear</code> and <code>Footwear</code>, which are in the division that appears last in the list of <code>division</code> values.<a id="sthref4523"></a></p>
<pre>
LIMIT product TO division LAST 1
</pre></div>
<!-- class="example" --></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="OLADM843" class="refsect2"><a id="i1019742"></a>
<hr />
<h2 class="refsect2">LIMIT (using parent relation)</h2>
<p><a id="ABC1040578"></a>A LIMIT command that uses a parent relation in its limit clause to set the status of a hierarchical dimension or its dimension surrogate, or assigns values to a valueset, based on family relationships within the hierarchy.</p>
<div class="infoboxnotealso">
<p class="notep1">See:</p>
<a href="#CCHIDEBG">"Looping Behavior of LIMIT (using parent relation)"</a></div>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4524"></a>Syntax</p>
<p class="synopsis">LIMIT&nbsp;{<span class="italic">dimension</span> | <span class="italic">valueset</span>}&nbsp;[<span class="italic">concat-component</span>] <span class="italic">limit-type-</span></p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[<span class="italic">family-keyword</span> ] USING&nbsp;<span class="italic">parent-relation-clause</span> [IFNONE&nbsp;<span class="italic">label</span>]</p>
<p>where:</p>
<ul>
<li>
<p><span class="syntaxinlineitalic">family-keyword</span> has one of the following constructs:</p>
<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="syntaxinline">PARENTS</span><br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="syntaxinline">CHILDREN</span><br />
&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;<span class="syntaxinline">ANCESTORS</span> <span class="syntaxinline">[DISTANCE</span> <span class="syntaxinlineitalic">generation</span> <span class="syntaxinline">]</span><br />
&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;<span class="syntaxinline">DESCENDANTS</span> <span class="syntaxinline">[DISTANCE</span> <span class="syntaxinlineitalic">generation</span> <span class="syntaxinline">]</span><br />
&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;<span class="syntaxinline">SIBLINGS</span><br />
<span class="syntaxinline">TOPANCESTORS</span><br />
<span class="syntaxinline">BOTTOMDESCENDANTS</span><br />
&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;<span class="syntaxinline">HIERARCHY [INVERTED]&nbsp;[NOORIGIN]&nbsp;[SKIP</span>&nbsp;<span class="syntaxinlineitalic">n</span><span class="syntaxinline">]&nbsp;[DEPTH&nbsp;</span><span class="syntaxinlineitalic">n</span><span class="syntaxinline">]&nbsp;[RUN&nbsp;</span><span class="syntaxinlineitalic">textexp</span><span class="syntaxinline">]]&nbsp;</span><br /></li>
<li>
<p>The syntax for <span class="syntaxinlineitalic">parent-relation-clause</span> varies depending on its dimensionality of the object you want to specify:</p>
<ul>
<li>
<p>When the parent relation is multidimensional, use the following syntax:</p>
<p class="synopsis">RELATION <span class="italic">parentrel</span> [QUALIFY <span class="italic">relation-dimension-name</span> [<span class="italic">inclusive-val-args.</span>.. | CURRENT]...]</p>
<p>(You can also use this syntax when the parent relation is one-dimensional.)</p>
</li>
<li>
<p>When the parent relation is one-dimensional, you can use the following simplified syntax:</p>
<p class="synopsis">&nbsp;<span class="italic">parentrel</span>&nbsp;[<span class="italic">inclusive-val-args</span>&nbsp;| CURRENT]&nbsp;</p>
</li>
</ul>
</li>
</ul>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4525"></a>Parameters</p>
<dl>
<dt><span class="italic">dimension</span></dt>
<dd>
<p>The name of the dimension or dimension surrogate for which you are setting status.</p>
</dd>
<dt><span class="italic">valueset</span></dt>
<dd>
<p>The name of the valueset for which you are assigning values; or a <a href="dml_functions_2010.htm#i78807">LIMIT function</a>.</p>
</dd>
<dt><span class="italic">concat-component</span></dt>
<dd>
<p>The name of the component of the concat dimension whose values are used to determine the limit. (See the main entry for <a href="#i78802">LIMIT command</a> for complete description of this argument.)</p>
</dd>
<dt><span class="italic">limit-type</span></dt>
<dd>
<p>A keyword that specifies how Oracle OLAP should modify the current status list. (See the main entry for <a href="#i78802">LIMIT command</a> for a list and descriptions of these keywords.)</p>
</dd>
<dt>PARENTS</dt>
<dd>
<p>Finds the parent of each value in valuelist. For a dimension, when there is no <span class="italic">valuelist,</span> finds the parent for each value in status. For a valueset, when there is no <span class="italic">valuelist,</span> it finds the parent of each value in the valueset. It uses the <span class="italic">parent-relation</span> to look up the parent.</p>
</dd>
<dt>CHILDREN</dt>
<dd>
<p>Finds the children of each value in valuelist. For a dimension, when there is no <span class="italic">valuelist,</span> finds the children for each value in status. For a valueset, when there is no <span class="italic">valuelist,</span> it finds the children of each value in the valueset. It uses the <span class="italic">parent-relation</span> to look up the children.</p>
</dd>
<dt>ANCESTORS [DISTANCE <span class="italic">generation</span>]</dt>
<dd>
<p>When you do not include the DISTANCE phrase:</p>
<ul>
<li>
<p>Finds the ancestors (that is, parents, grandparents, and so on) of each value in <span class="italic">valuelist.</span> For a dimension, when there is no <span class="italic">valuelist,</span> it finds the ancestors of each value in status.</p>
</li>
<li>
<p>For a valueset, when there is no <span class="italic">valuelist,</span> it finds the ancestors of each value in the valueset. In other words it finds "parents" for the values and the "parents of the parents" until there are no new parents.</p>
</li>
</ul>
<p>When you include the DISTANCE phrase, limits to the ancestors who are members of the generation specified by <span class="italic">generation</span>:</p>
<ul>
<li>
<p>For <span class="italic">generation</span>, specify 0 for the current generation, 1 for parents, 2 for grandparents, 3 for great grandparents, and so on.</p>
</li>
<li>
<p>For negative values, the command returns descendant generations (that is -1 returns children, -2 returns grandchildren, and so on).</p>
</li>
</ul>
</dd>
<dt>DESCENDANTS [DISTANCE <span class="italic">generation</span>]</dt>
<dd>
<p>When you do not include the DISTANCE phrase:</p>
<ul>
<li>
<p>Finds the descendants (that is, children, grandchildren, and so on) of each value in <span class="italic">valuelist.</span> For a dimension, when there is no <span class="italic">valuelist,</span> it finds descendants for each value in status.</p>
</li>
<li>
<p>For a valueset, when there is no <span class="italic">valuelist,</span> it finds the descendants of each value in the valueset. In other words, it finds the children of the values and the children of the children until there are no new children.</p>
</li>
</ul>
<p>When you include the DISTANCE phrase, limits to the descendants who are members of the generation specified by <span class="italic">generation</span>:</p>
<ul>
<li>
<p>For <span class="italic">generation</span>, specify 0 for the current generation, 1 for children, 2 for grandchildren, 3 for great grandchildren, and so on.</p>
</li>
<li>
<p>For negative, the command returns ancestor generations (that is -1 returns parents, -2 returns grandparents, and so on).</p>
</li>
</ul>
</dd>
<dt>SIBLINGS</dt>
<dd>
<p>Finds all siblings of each value in <span class="italic">valuelist</span>, including the valuelist values, themselves. Issuing one LIMIT statement with the SIBLIGS keyword is the same as issuing two consecutive LIMIT statements: 1) LIMIT with PARENTS, 2) LIMIT with CHILDREN. For a dimension, when there is no <span class="italic">valuelist,</span> it finds siblings for each value in status. For a valueset, when there is no <span class="italic">valuelist,</span> it finds the siblings of each value in the valueset.</p>
</dd>
<dt>TOPANCESTORS</dt>
<dd>
<p>(Abbreviated TOPANC) Finds those members that are at the top of the hierarchy; that is, those members that do not have any ancestors which is equivalent to issuing the following two LIMIT commands.</p>
<pre>
   LIMIT dimension to ANCESTORS ....
   LIMIT dimension REMOVE DESCENDANTS....
</pre></dd>
<dt>BOTTOMDESCENDANTS</dt>
<dd>
<p>(Abbreviated BOTTOMDESC) Finds those members that are at the bottom of the hierarchy; that is, those members that do not have any descendants.</p>
</dd>
<dt>HIERARCHY</dt>
<dd>
<p>Finds the descendants (that is, children, grandchildren, and so on) based on a particular <span class="italic">parent-relation.</span> The difference is the order of the values. DESCENDANTS groups the values by level (all children, then all grandchildren, and so on); HIERARCHY places each group of children next to its parent. HIERARCHY includes the original values (that is, those in status before the LIMIT statement was executed) in status.</p>
</dd>
<dt>INVERTED</dt>
<dd>
<p>Indicates that children should be listed before their parents. By default, children are listed after their parents.</p>
</dd>
<dt>NOORIGIN</dt>
<dd>
<p>Excludes the original values from the status. The default is to include original values.</p>
</dd>
<dt>SKIP</dt>
<dd>
<p>Skips <span class="italic">n</span> generations for each value in <span class="italic">valuelist.</span> For dimensions, when there is no <span class="italic">valuelist,</span> it skips <span class="italic">n</span> generations for each value in status. For a valueset, when there is no <span class="italic">valuelist,</span> it skips <span class="italic">n</span> generations for each value in the valueset. This keyword, in combination with DEPTH, is helpful when drilling down; see <a href="#i1020830">Example 10-29, "Drilling Down Using SKIP and DEPT"</a>.</p>
</dd>
<dt>DEPTH</dt>
<dd>
<p>Includes <span class="italic">n</span> generations down from each value of <span class="italic">valuelist.</span> For dimensions, when there is no <span class="italic">valuelist,</span> it includes <span class="italic">n</span> generations for each value in status. For a valueset, when there is no <span class="italic">valuelist,</span> it includes <span class="italic">n</span> generations of each value in the valueset. The default depth value is 99. This keyword, in combination with SKIP, is helpful when drilling down on values.</p>
</dd>
<dt>RUN</dt>
<dd>
<p>Executes a statement, represented as a text expression, every time a group of children is constructed. For example, you can sort each group of children based on information stored in an Oracle OLAP variable. In the following statement, markets are sorted in increasing order based on unit sales every time a group of children is constructed.</p>
<pre>
LIMIT market TO HIERARCHY RUN 'SORT market a unit.m' USING -
</pre>
<pre>
  market.market
</pre>
<div class="infobox-note">
<p class="notep1">Note:</p>
In this example, when you use KEEP or REMOVE instead of TO in your LIMIT statement, the SORT statement would have no effect.</div>
</dd>
<dt>USING&nbsp;</dt>
<dd>
<p>Specifies the values to use when determining parent values.</p>
</dd>
<dt><span class="italic">parentrel</span></dt>
<dd>
<p>Specifies the name of the parent relation for the dimension.</p>
<div class="infoboxnotealso">
<p class="notep1">See also:</p>
<a href="dml_basics.htm#BABGGIEH">"Parentrel Relation"</a> and <a href="#CCHIDEBG">"Looping Behavior of LIMIT (using parent relation)"</a>.</div>
<p>To limit a dimension surrogate, use the parent relation for the dimension for which it is a surrogate.</p>
</dd>
<dt>RELATION &nbsp;</dt>
<dd>
<p>Identifies the beginning of the <span class="italic">parent-relation-clause</span>. You use this keyword when <span class="italic">parentrel</span> is a multidimensional relation.</p>
</dd>
<dt>QUALIFY <span class="italic">relation-dimension-name</span>&nbsp;</dt>
<dd>
<p>Specifies the name of a dimension of <span class="italic">parentrel</span>. The use of this clause varies depending on whether you are coding a LIMIT command or a LIMIT function as described in <a href="#CCHIDEBG">"Looping Behavior of LIMIT (using parent relation)"</a>.</p>
</dd>
<dt><span class="italic">inclusive-val-args</span></dt>
<dd>
<p>Specifies the values to use when determining the parent values. You can specify any inclusive valuelist argument as described in the syntax of the <span class="italic">inclusive-val-args</span> argument for the <span class="italic">valuelist</span> clause for LIMIT command. See <a href="#i1019733">LIMIT (using values) command</a> for detailed syntax.</p>
</dd>
<dt>CURENT</dt>
<dd>
<p>Specifies that you want to limit to the values of the children of the current value of the dimension. (This is the same as specifying <code><span class="codeinlineitalic">dimension_name</span></code> <code>+0</code>.)</p>
</dd>
<dt>IFNONE <span class="italic">label</span></dt>
<dd>
<p>Specifies that program execution should branch to <span class="italic">label</span> when the requested status has null status or is based on a related dimension that turns out to have null status (that is, to have no values). (See the main entry for <a href="#i78802">LIMIT command</a> for complete description of this phrase.)</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4526"></a>Usage Notes</p>
<p class="subhead2"><a id="CCHIDEBG"></a><a id="OLADM2529"></a>Looping Behavior of LIMIT (using parent relation)</p>
<p>When you do not include a QUALIFY clause, the set of values that this LIMIT puts into status when <span class="italic">parentrel</span> is multi-dimensional varies depending on whether or not you are issuing a LIMIT command or a LIMIT function:</p>
<ul>
<li>
<p>LIMIT command. All of the in-status values of the related dimensions of parentrel are included in the set of in-status values. If you only want the current values of the related dimensions of parentrel to be included in the set of in-status values, specify a QUALIFY <span class="italic">related-dimension</span> CURRENT clause for each of the related dimensions of parentrel.</p>
</li>
<li>
<p>LIMIT function. Only the current values of the related dimensions of parentrel are included in the set of in-status values. If you want all of the in-status values of the related dimensions of parentrel to be included in the set of in-status values, specify a QUALIFY <span class="italic">related-dimension</span> related-dimension clause for each of the related dimensions of parentrel.</p>
</li>
</ul>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4527"></a>Examples</p>
<div id="OLADM2530" class="example">
<p class="titleinexample"><a id="sthref4528"></a>Example 10-28 A Simple Drill Down</p>
<p>This example drills down on districts from the region level of the market dimension. First, the market dimension, which has embedded totals at the district, region, and total U.S. level, is limited to the region level data. This LIMIT is done using the relation <code>mlv.market</code>, which is a relation between <code>marke</code>t and <code>market.level</code>.</p>
<p>Issuing a <code>REPORT mlv.market</code> statement produces the following output, which shows the values of <code>mlv.market</code>.</p>
<pre>
MARKET         MLV.MARKET
-------------- ----------
Totus          Totus
East           Region
Boston         District
Atlanta        District
Central        Region
Chicago        District
Dallas         District
West           Region
Denver         District
Seattle        District
</pre>
<p>The following LIMIT statement limits the values of <code>MARKET</code>, and the STATUS statement produces the values currently in status. The output of STATUS is shown following the statements.</p>
<pre>
LIMIT market TO mlv.market 'Region'
STATUS market
 
The current status of MARKET is:
EAST, CENTRAL, WEST
</pre>
<p>To drill down on the district level data from the region level, you can use LIMIT with the CHILDREN keyword. The following example uses a parent-relation called <code>market.market</code> to perform the drill down. For each value of the <code>market</code> dimension, this relation contains the name of its parent.</p>
<pre>
DEFINE market.market RELATION market &lt;market&gt;
LD Self-relation for the Market Dimension
</pre>
<p>A report of <code>market.market</code> produces the following output.</p>
<pre>
MARKET         MARKET.MARKET
-------------- -------------
Totus          NA
East           Totus
Boston         Central
Atlanta        East
Central        Totus
Chicago        Central
Dallas         Central
West           Totus
Denver         West
Seattle        West
</pre>
<p>You can limit <code>market</code> to the children of the <code>East</code>, <code>Central</code>, and <code>West</code> regions by using the CHILDREN keyword with LIMIT.</p>
<pre>
LIMIT market TO mlv.market 'Region'
Limit market TO CHILDREN USING market.market
</pre>
<p>A report of <code>market</code> produces the following output.</p>
<pre>
MARKET
-------------
Boston
Atlanta
Chicago
Dallas
Denver
Seattle
</pre></div>
<!-- class="example" -->
<div id="OLADM2531" class="example">
<p class="titleinexample"><a id="i1020830"></a>Example 10-29 Drilling Down Using SKIP and DEPT</p>
<p>Consider the following statement.</p>
<pre>
LIMIT market TO HIERARCHY DEPTH 2 SKIP 1 USING market.market 'Totus'
</pre>
<p>Oracle OLAP looks in the child-parent relation (<code>market.market</code>) to find the children and the grandchildren (<code>DEPTH 2</code>) of <code>Totus</code> and it discards the first generation (<code>SKIP 1</code>). The resulting status follows.</p>
<pre>
Totus
Boston
Atlanta
Chicago
Dallas
Denver
Seattle
</pre>
<pre>
</pre>
<p>Note that <code>Totus</code> is included in status. With HIERARCHY, the original values are included in status.<a id="sthref4529"></a></p>
</div>
<!-- class="example" --></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="OLADM844" class="refsect2"><a id="i1019753"></a>
<hr />
<h2 class="refsect2">LIMIT NOCONVERT command</h2>
<p><a id="ABC1041001"></a>The LIMIT command sets the current status list of a dimension and its dimension surrogates, or assigns values to a valueset.</p>
<p>A LIMIT command with the NOCONVERT keyword sets the status of one dimension based on the numeric position of values in a different dimension.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4530"></a>Syntax</p>
<p class="synopsis">LIMIT{<span class="italic">dimension</span> | <span class="italic">valueset</span>}&nbsp;[<span class="italic">concat-component</span>] <span class="italic">limit-type -</span></p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;NOCONVERT&nbsp;[{<span class="italic">unrelated-dimension|numeric-valueset</span>}] -</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[IFNONE&nbsp;<span class="italic">label</span>]</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4531"></a>Parameters</p>
<dl>
<dt><span class="italic">dimension</span></dt>
<dd>
<p>The name of the dimension or dimension surrogate for which you are setting status.</p>
</dd>
<dt><span class="italic">valueset</span></dt>
<dd>
<p>The name of the valueset for which you are assigning values; or a <a href="dml_functions_2010.htm#i78807">LIMIT function</a>.</p>
</dd>
<dt><span class="italic">concat-component</span></dt>
<dd>
<p>The name of the component of the concat dimension whose values are used to determine the limit. (See the main entry for <a href="#i78802">LIMIT command</a> for complete description of this argument.)</p>
</dd>
<dt><span class="italic">limit-type</span></dt>
<dd>
<p>A keyword that specifies how Oracle OLAP should modify the current status list. (See the main entry for <a href="#i78802">LIMIT command</a> for a list and descriptions of these keywords.)</p>
</dd>
<dt>NOCONVERT</dt>
<dd>
<p>Sets the status of a dimension based on the numeric position of the specified values in the status list of an another dimension.</p>
</dd>
<dt><span class="italic">unrelated-dimension</span></dt>
<dd>
<p>Specifies the name of a dimension not related to the dimension being limited. Using this argument specifies that the status of a dimension or valueset is set based on the numeric position of each value in status of the unrelated-dimension. Setting status based on in status values in unrelated dimensions is particularly useful when the two dimensions are in different analytic workspaces (for example, when a one-to-one correspondence exists between the product dimension in two analytic workspaces).</p>
</dd>
<dt><span class="italic">numeric-valueset</span></dt>
<dd>
<p>Specifies a numeric valueset. When you use this argument, NOCONVERT sets the status based on the numeric values in the valueset. The numeric values represent the positions of the values in the default status of the dimension.</p>
</dd>
<dt>IFNONE <span class="italic">label</span></dt>
<dd>
<p>(For use only within an OLAP DML program) Specifies that program execution should branch to <span class="italic">label</span> when the requested status has null status or is based on a related dimension that turns out to have null status (that is, to have no values). (See the main entry for <a href="#i78802">LIMIT command</a> for complete description of this phrase.)<a id="sthref4532"></a></p>
</dd>
</dl>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="OLADM845" class="refsect2"><a id="i1019757"></a>
<hr />
<h2 class="refsect2">LIMIT command (using POSLIST)</h2>
<p><a id="sthref4533"></a>The LIMIT command sets the current status list of a dimension and its dimension surrogates, or assigns values to a valueset.</p>
<p>A LIMIT command with the POSLIST keyword sets the status of a dimension based on the position of the values within that dimension.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4534"></a>Syntax</p>
<p class="synopsis">LIMIT&nbsp;{<span class="italic">dimension</span> | <span class="italic">valueset</span>}&nbsp;[<span class="italic">concat-component</span>] <span class="italic">limit-type -</span></p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;POSLIST <span class="italic">poslist-exp</span> [IFNONE&nbsp;<span class="italic">label</span>]</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4535"></a>Parameters</p>
<dl>
<dt><span class="italic">dimension</span></dt>
<dd>
<p>The name of the dimension or dimension surrogate for which you are setting status.</p>
</dd>
<dt><span class="italic">valueset</span></dt>
<dd>
<p>The name of the valueset for which you are assigning values; or a <a href="dml_functions_2010.htm#i78807">LIMIT function</a>.</p>
</dd>
<dt><span class="italic">concat-component</span></dt>
<dd>
<p>The name of the component of the concat dimension whose values are used to determine the limit. (See the main entry for <a href="#i78802">LIMIT command</a> for complete description of this argument.)</p>
</dd>
<dt><span class="italic">limit-type</span></dt>
<dd>
<p>A standard keyword (documented in the main entry for LIMIT command) that specifies how Oracle OLAP should modify the current status list.</p>
</dd>
<dt>POSLIST&nbsp;<span class="italic">poslist-textexp</span></dt>
<dd>
<p>Sets the status of a dimension based on the position of a value within a dimension. <span class="italic">poslist-textexp</span> is a text expression, each line of which is a numeric value that evaluates to a numeric position of the dimension being limited.</p>
</dd>
<dt>IFNONE <span class="italic">label</span></dt>
<dd>
<p>Specifies that program execution should branch to <span class="italic">label</span> when the requested status has null status or is based on a related dimension that turns out to have null status (that is, to have no values). (See the main entry for <a href="#i78802">LIMIT command</a> for complete description of this phrase.)</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" --></div>
<!-- class="refsect1" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment3088">
<tr>
<td class="cellalignment3095">
<table class="cellalignment3093">
<tr>
<td class="cellalignment3092"><a href="dml_commands_2008.htm"><img width="24" height="24" src="../../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment3092"><a href="dml_commands_2010.htm"><img width="24" height="24" src="../../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;1994, 2013,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment3097">
<table class="cellalignment3091">
<tr>
<td class="cellalignment3092"><a href="../../index.htm"><img width="24" height="24" src="../../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment3092"><a href="../../nav/portal_booklist.htm"><img width="24" height="24" src="../../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment3092"><a href="toc.htm"><img width="24" height="24" src="../../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment3092"><a href="index.htm"><img width="24" height="24" src="../../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment3092"><a href="../../nav/mindx.htm"><img width="24" height="24" src="../../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment3092"><a href="../../dcommon/html/feedback.htm"><img width="24" height="24" src="../../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>
</body>
</html>
