<!DOCTYPE html>
<html lang="en">
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1">
<meta charset="utf-8">
<title>MAINTAIN</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Version 5.1.2 Build 742" />
<meta name="dcterms.created" content="2013-11-14T21:21:51Z" />
<meta name="robots" content="all" />
<meta name="dcterms.title" content="OLAP DML Reference" />
<meta name="dcterms.identifier" content="E17122-08" />
<meta name="dcterms.isVersionOf" content="OLADM" />
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;1994, 2013,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved." />
<link rel="Start" href="../../index.htm" title="Home" type="text/html" />
<link rel="Copyright" href="../../dcommon/html/cpyr.htm" title="Copyright" type="text/html" />

<script type="application/javascript"  src="../../dcommon/js/headfoot.js"></script>
<script type="application/javascript"  src="../../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html" />
<link rel="Index" href="index.htm" title="Index" type="text/html" />
<link rel="Prev" href="dml_commands_2015.htm" title="Previous" type="text/html" />
<link rel="Next" href="dml_commands_2017.htm" title="Next" type="text/html" />
<link rel="alternate" href="../e17122.pdf" title="PDF version" type="application/pdf" />
<link rel="schema.dcterms" href="http://purl.org/dc/terms/" />
<link rel="stylesheet" href="../../dcommon/css/fusiondoc.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/header.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/footer.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/fonts.css">
<link rel="stylesheet" href="../../dcommon/css/foundation.css">
<link rel="stylesheet" href="../../dcommon/css/codemirror.css">
<link rel="stylesheet" type="text/css" title="Default" href="../../nav/css/html5.css">
<link rel="stylesheet" href="../../dcommon/css/respond-480-tablet.css">
<link rel="stylesheet" href="../../dcommon/css/respond-768-laptop.css">
<link rel="stylesheet" href="../../dcommon/css/respond-1140-deskop.css">
<script type="application/javascript" src="../../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">490/593</span> <!-- End Header --><a id="i1017721"></a>
<hr />
<div id="OLADM852" class="refsect1">
<h1 class="refsect1">MAINTAIN</h1>
<p><a id="sthref4588"></a><a id="sthref4589"></a><a id="sthref4590"></a><a id="sthref4591"></a><a id="sthref4592"></a><a id="sthref4593"></a><a id="sthref4594"></a>The MAINTAIN command enters and maintains the values of dimensions, composites, and partition template objects.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
You can also issue a MAINTAIN statement for a surrogate dimension that has a Maintain trigger. In this case, Oracle OLAP only executes the Maintain trigger program; no other action occurs. See <a href="dml_program.htm#CHDBDIIH">"Trigger Programs"</a> for more information for more information. Issuing a MAINTAIN statement for a surrogate dimension that does <span class="italic">not</span> have a Maintain trigger, returns an error.</div>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4595"></a>Syntax</p>
<p class="synopsis">MAINTAIN <span class="italic">object {</span>ADD|DELETE|RENAME|MOVE|MERGE} <span class="italic">args</span></p>
<p>The keywords that you can use with the MAINTAIN command varies by object:</p>
<ul>
<li>
<p><span class="syntaxinline">MAINTAIN</span> <span class="syntaxinlineitalic">dimension</span> <span class="syntaxinline">{ADD|DELETE|RENAME|MOVE|MERGE}</span> <span class="syntaxinlineitalic">args</span></p>
<p>The keyword that you can use varies by the type of dimension that you want to maintain:</p>
<ul>
<li>
<p>With a non-concat dimension, you can use the ADD, DELETE, RENAME, MOVE, or MERGE keywords to add, delete, rename, move, or merge non-concat dimension values. You can also use the ADD keyword to add temporary calculated members to a dimension.</p>
</li>
<li>
<p>With a concat dimension, you can only use the MOVE keyword to move concat dimension values.</p>
</li>
</ul>
</li>
<li>
<p><span class="syntaxinline">MAINTAIN</span>&nbsp;<span class="syntaxinlineitalic">composite&nbsp;</span><span class="syntaxinline">{ADD|DELETE|MERGE}</span> <span class="syntaxinlineitalic">args</span></p>
</li>
<li>
<p><span class="syntaxinline">MAINTAIN</span>&nbsp;<span class="syntaxinlineitalic">partition-template</span>&nbsp;<span class="syntaxinline">{ADD|DELETE|MOVE}</span> <span class="syntaxinlineitalic">args</span></p>
</li>
</ul>
<p>The specific syntax varies by keyword. Consequently, there are separate topics for each keyword of the MAINTAIN command:</p>
<dl>
<dd><a href="#i1022202">MAINTAIN ADD</a></dd>
<dd><a href="#i1010111">MAINTAIN DELETE</a></dd>
<dd><a href="#i1023950">MAINTAIN MERGE</a></dd>
<dd><a href="#CIHIGHGA">MAINTAIN MOVE</a></dd>
<dd><a href="#i1010123">MAINTAIN RENAME</a></dd>
</dl>
<p>For information that applies to the MAINTAIN command in general, see the Usage Notes in this topic.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4596"></a>Usage Notes</p>
<p class="subhead2"><a id="OLADM2547"></a>Triggering Program Execution When MAINTAIN Executes</p>
<p>Using the TRIGGER command, you can make the execution of a MAINTAIN statement an event that automatically executes an OLAP DML program. See <a href="dml_program.htm#CHDBDIIH">"Trigger Programs"</a> for more information.</p>
<p class="subhead2"><a id="OLADM2548"></a>Automatic Status Reset</p>
<p>When you use the ADD, DELETE, MERGE, or MOVE keyword to maintain a dimension or composite whose status is not currently ALL, the MAINTAIN command automatically resets status to ALL before performing the maintenance function. However, when you use the RENAME keyword to maintain a dimension whose status is not currently ALL, the MAINTAIN command does <span class="italic">not</span> change the status of the dimension.</p>
<p class="subhead2"><a id="OLADM2549"></a>Maintain Permission</p>
<p>You cannot perform maintenance on a dimension when a PERMIT MAINTAIN statement denies maintain permission for the dimension. Maintain permission is implicitly denied whenever read permission is restricted for a dimension, even when you specify maintain permission for the dimension. (See the <a href="dml_commands_2026.htm#i79588">PERMIT</a> command.)</p>
<p class="subhead2"><a id="OLADM2550"></a>Maintaining Dimensions in Multiwriter Analytic Workspaces</p>
<p>Keep the following points in mind when maintaining dimensions in an analytic workspace that is attached in multiwriter mode:</p>
<ul>
<li>
<p>You cannot update a variable when any of its dimensions have been acquired and modified.</p>
</li>
<li>
<p>Reverting a dimension after adding dimension values is not recommended because it can result in suboptimal space allocation for variables dimensioned by the dimension.</p>
</li>
<li>
<p>When an acquired variable is dimensioned by an acquired dimension that has been maintained, you cannot update the variable until the dimension is updated or released.</p>
</li>
<li>
<p>You do not have to acquire composites in order for them to be maintained, Oracle OLAP automatically performs concurrent dimension maintenance for the composite dimensions.</p>
</li>
</ul>
<p>Also, before you can maintain dimensions in an analytic workspace that is attached in multiwriter mode, you must first acquire the dimension using an ACQUIRE statement.</p>
<p>For example, assume that user A and user B both have to perform what-if computations on both <code>actuals</code> and <code>budget</code>. After performing the what-if computations, user A needs to modify <code>actuals</code> and B needs to modify <code>budget</code>. Finally, both user A and user B have to add a new <code>time</code> dimension value and add data corresponding to that new dimension value to <code>actuals</code> or <code>budget</code>.</p>
<p>User A issues the following OLAP DML statements.</p>
<pre>
AW ATTACH myworkspace MULTI
...make modifications 
ACQUIRE actuals
...make more modifications
ACQUIRE time
MAINTAIN time ADD 'Y2002'
actuals (time 'Y2002', ...) = ...
UPDATE MULTI actuals, time
COMMIT
RELEASE actuals, time
AW DETACH myworkspace
</pre>
<p>User B issues the following OLAP DML statements.</p>
<pre>
AW ATTACH myworkspace MULTI
...make modifications 
ACQUIRE budget
...make more modifications
ACQUIRE time--&gt; failed
ACQUIRE RESYNC time WAIT
MAINTAIN time ADD 'Y2003'
budget (time 'Y2003', ...) = ...
UPDATE MULTI budget, time
COMMIT
RELEASE budget, time
AW DETACH myworkspace
</pre>
<p class="subhead2"><a id="OLADM2551"></a>MAINTAIN and Dimension Surrogates</p>
<p>You cannot use a MAINTAIN statement on a dimension surrogate. You can only use MAINTAIN to add values to or delete them from a dimension. However, when you add or delete a dimension value, then Oracle OLAP adds or removes a position from surrogates of that dimension. When you add a position to a dimension, the corresponding position in a surrogate for that dimension receives an <code>NA</code> value.</p>
<p class="subhead2"><a id="OLADM2552"></a>Maintaining a Concat Dimension</p>
<p>A concat dimension contains the values of its component dimensions. You do not directly add, merge, or delete the values of a concat dimension using MAINTAIN statements. Instead, when you add, merge, or delete values from a component dimension of the concat, Oracle OLAP automatically adds or deletes the values from the concat dimension. You can use the MOVE keyword of the MAINTAIN command to change the order of the values of a concat dimension.</p>
</div>
<!-- class="refsubsect" -->
<div id="OLADM853" class="refsect2"><a id="i1022202"></a>
<hr />
<h2 class="refsect2">MAINTAIN ADD</h2>
<p><a id="sthref4597"></a>The MAINTAIN command with the ADD keyword adds new TEXT, ID, and INTEGER values to a non-concat dimension, composite, or partition; or adds a new temporary calculated member to a dimension.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
You can also issue a <a href="#i1023542">MAINTAIN ADD for TEXT, ID, and INTEGER Values</a> statement for a surrogate dimension that has a Maintain trigger. In this case, Oracle OLAP only executes the Maintain trigger program one time for each value; no other action occurs. See <a href="dml_program.htm#CHDBDIIH">"Trigger Programs"</a> for more information for more information. Issuing a MAINTAIN statement for a surrogate dimension that does <span class="italic">not</span> have a Maintain trigger, returns an error.</div>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4598"></a>Syntax</p>
<p>The syntax for using the MAINTAIN command with the ADD keyword depends on the type of the object being maintained and whether you are adding a permanent or temporary member.</p>
<p>For this reason, the following separate entries are provided for MAINTAIN ADD:</p>
<ul>
<li>
<p><a href="#i1023542">MAINTAIN ADD for TEXT, ID, and INTEGER Values</a></p>
</li>
<li>
<p><a href="#i1023560">MAINTAIN ADD for DAY, WEEK, MONTH, QUARTER, and YEAR Values</a></p>
</li>
<li>
<p><a href="#i1023561">MAINTAIN ADD SESSION</a></p>
</li>
<li>
<p><a href="#CIHCFGGE">MAINTAIN ADD TO PARTITION</a></p>
</li>
</ul>
</div>
<!-- class="refsubsect" -->
<div id="OLADM854" class="refsect3"><a id="i1023542"></a>
<h3 class="refsect3">MAINTAIN ADD for TEXT, ID, and INTEGER Values</h3>
<p><a id="sthref4599"></a>The MAINTAIN command with the ADD keyword adds new TEXT, ID, or INTEGER values to a non-concat dimension or composite.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
You can also issue this MAINTAIN ADD statement for a surrogate dimension that has a Maintain trigger. In this case, Oracle OLAP only executes the Maintain trigger program one time for each value in <span class="italic">valuelist</span>; no other action occurs. See <a href="dml_program.htm#CHDBDIIH">"Trigger Programs"</a> for more information for more information. Issuing a MAINTAIN statement for a surrogate dimension that does <span class="italic">not</span> have a Maintain trigger, returns an error.</div>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4600"></a>Syntax</p>
<p class="synopsis">MAINTAIN <span class="italic">composite</span>|<span class="italic">dimension</span> ADD <span class="italic">valuelist</span> [FIRST|<span class="underline">LAST</span>|BEFORE <span class="italic">position|</span>AFTER <span class="italic">position</span>]</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4601"></a>Parameters</p>
<dl>
<dt><span class="italic">dimension</span></dt>
<dd>
<p>A non-concat dimension, already defined in an attached analytic workspace.</p>
</dd>
<dt><span class="italic">composite</span></dt>
<dd>
<p>A composite. When the composite is a named composite, it must be defined in an attached analytic workspace. When the composite is unnamed, it must have been used in defining an object in an attached analytic workspace. Use the SPARSE keyword to refer to an unnamed composite (for example, <code>SPARSE &lt;market product&gt;</code>).</p>
</dd>
<dt>ADD <span class="italic">valuelist</span></dt>
<dd>
<p>Specifies that the values in <span class="italic">valuelist</span> are to be added to the dimension or composite:</p>
<ul>
<li>
<p>When you use this argument to add values to a composite or a dimension of type TEXT or ID, the <span class="italic">valuelist</span> can be text literals or a TEXT or ID expression. When it is a multiline text expression, each element (line) is treated as a separate value.Do not add null dimension values (empty single quotes) or values that consists of spaces only, because there is no way you can refer to such values in the future.</p>
</li>
<li>
<p>When <span class="italic">dimension</span> is INTEGER, <span class="italic">valuelist</span> can be an <code>INTEGER</code> quantity, such as 5 or 100.</p>
</li>
</ul>
</dd>
<dt>FIRST</dt>
<dt>LAST</dt>
<dd>
<p>Specify the logical position at which dimension values are added. FIRST indicates that the new values are inserted before any existing values. LAST indicates that new values are added after the current values. LAST is the default. When you are adding a certain quantity of <code>INTEGER</code> values to an INTEGER dimension, that quantity of <code>INTEGER</code> values are added before or after any existing <code>INTEGER</code> values (depending on your specification), and all the <code>INTEGER</code> values in the resulting series are automatically adjusted into simple numeric order.</p>
<p>All values specified before the keyword FIRST or LAST are placed in that position, not just the one value immediately preceding the keyword in your statement.</p>
</dd>
<dt>BEFORE <span class="italic">position</span></dt>
<dt>AFTER <span class="italic">position</span></dt>
<dd>
<p>Specify a position before or after which the dimension values are to be added. For <span class="italic">position</span> you can specify an existing dimension value, a character expression whose value is an existing dimension value, or an <code>INTEGER</code> expression whose value represents the position of a dimension value. When you are adding a certain quantity of <code>INTEGER</code> values to an INTEGER dimension, that quantity of <code>INTEGER</code> values are added before or after the <code>INTEGER</code> position you specify, and the <code>INTEGER</code> values in the whole of the resulting series are automatically adjusted into simple numeric order.</p>
<p>All values specified before the keywords BEFORE or AFTER are placed in that position, not just the one value immediately preceding the keyword in your statement.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4602"></a>Usage Notes</p>
<p class="subhead2"><a id="OLADM2553"></a>Performance When Using MAINTAIN ADD BEFORE or AFTER position</p>
<p>The cost performance of using MAINTAIN ADD BEFORE or MAINTAIN MOVE AFTER statements depends on the number of values in the dimension rather than the number of values being added. Consequently, instead of issuing many of these statements one after another:</p>
<ol>
<li>
<p>Add the values using simple MAINTAIN ADD statements</p>
</li>
<li>
<p>Set the status of the dimension status to the values you are concerned with.</p>
</li>
<li>
<p>Order the added values, by issuing a single <a href="#i1010119">MAINTAIN MOVE dimension value</a> statement</p>
</li>
</ol>
<p class="subhead2"><a id="OLADM2554"></a>Adding Values to an INTEGER Dimension</p>
<p>When you use MAINTAIN to add values in an INTEGER dimension, the values are renumbered to keep the normal sequence of <code>INTEGER</code> values (1, 2, 3, ...).</p>
<p class="subhead2"><a id="OLADM2555"></a>Conjoint Dimensions and Composites</p>
<p>Each value of a conjoint dimension or composite is a combination of values from each of the dimensions (and composites, if any) in its dimension list. To add values to a conjoint dimension or composite, specify each value combination enclosed in angle brackets. The values in a given combination must be in the same order as the dimensions and composites in the definition of the conjoint dimension or composite. Each dimension value in the combination must already exist as a value in the corresponding base dimension. However, when a composite value in the combination does not exist, Oracle OLAP automatically adds the value to the appropriate composite.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4603"></a>Examples</p>
<div id="OLADM2556" class="example">
<p class="titleinexample"><a id="sthref4604"></a>Example 10-39 Adding Values to a TEXT Dimension</p>
<p>This statement adds <code>Omaha</code> and <code>Seattle</code> to the end of the dimension values for the <code>city</code> dimension.</p>
<pre>
MAINTAIN city ADD 'Omaha' 'Seattle'
</pre>
<p>This statement adds <code>Atlanta</code> at the beginning of the list of cities and inserts <code>Peoria</code> after <code>Omaha</code>.</p>
<pre>
MAINTAIN city ADD 'Atlanta' FIRST, 'Peoria' AFTER 'Omaha'
</pre>
<p>Here the value of the TEXT variable <code>textvar</code> is inserted before the fifth dimension value of <code>city</code>. When you assign the value <code>Columbus</code> to <code>textvar</code>, you must make sure it is in mixed case, because you want the dimension value to be in mixed case.</p>
<pre>
textvar = 'Columbus'
MAINTAIN city ADD textvar BEFORE 5
</pre></div>
<!-- class="example" -->
<div id="OLADM2557" class="example">
<p class="titleinexample"><a id="sthref4605"></a>Example 10-40 Adding Values to a Conjoint Dimension</p>
<p>The following is an example of adding values to a conjoint dimension.</p>
<pre>
DEFINE proddist DIMENSION &lt;product, district&gt;
MAINTAIN proddist ADD &lt;'Tents' 'Boston'&gt; &lt;'Footwear' 'Denver'&gt;
</pre>
<p>You can also assign a value of a base dimension to a text variable and use the name of the variable inside the angle brackets.</p>
<pre>
prodname = 'Canoes'
distname = 'Seattle'
MAINTAIN proddist ADD &lt;prodname, distname&gt;
</pre></div>
<!-- class="example" --></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect3" -->
<div id="OLADM855" class="refsect3"><a id="i1023560"></a>
<h3 class="refsect3">MAINTAIN ADD for DAY, WEEK, MONTH, QUARTER, and YEAR Values</h3>
<p><a id="sthref4606"></a>The MAINTAIN command with the ADD keyword adds new values to a dimension of type DAY, WEEK, MONTH, QUARTER, and YEAR.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4607"></a>Syntax</p>
<p class="synopsis">MAINTAIN <span class="italic">dimension</span> ADD {<span class="italic">valuelist</span>|{<span class="italic">n</span> PERIODS FIRST}|{<span class="italic">n</span> PERIODS LAST}}</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4608"></a>Parameters</p>
<dl>
<dt><span class="italic">dimension</span></dt>
<dd>
<p>A non-concat dimension, already defined in an attached analytic workspace.</p>
</dd>
<dt>ADD <span class="italic">valuelist</span></dt>
<dd>
<p>Specifies that the values in <span class="italic">valuelist</span> are to be added to the dimension. When <span class="italic">dimension</span> is of type DAY, WEEK, MONTH, QUARTER, or YEAR, then <span class="italic">valuelist</span> can be text constants or a TEXT, ID, or DATE expression. When the values are TEXT, they can be in the format specified by the VNF (value name format) for the dimension (or in the default format for the type of dimension you are maintaining when the dimension does not have a VNF) or in a valid input style for date values. When the values are specified as a TEXT expression, each element or line is treated as a separate value.</p>
<p>When the values are in the format specified by the VNF or in the default format for this type of dimension, each value explicitly indicates the time period you want to add. For example, assume that the VNF for a <code>month</code> dimension is <code>'&lt;MTXT&gt;&lt;YY&gt;'</code>. In this case, the value <code>JAN99</code> represents the month January&nbsp;1999.</p>
<p>When you specify a value for a DAY, WEEK, MONTH, QUARTER, or YEAR dimension as a date, you must provide only the date components that are relevant for the type of dimension you are maintaining. For a DAY or WEEK dimension, you must supply the day, month, and year components. For a MONTH or QUARTER dimension, you must supply only the month and year (for example, <code>'JUN98'</code> or <code>'0698'</code> for June&nbsp;1998). For a YEAR dimension, you must specify only the year (for example, <code>'98'</code> for 1998). For information about the valid input styles for dates, see the <a href="dml_options012.htm#i79233">DATEORDER</a> option.</p>
<p>When you add a dimension value by specifying a DATE expression or a TEXT value that represents a complete date, you can specify <span class="italic">any</span> date that falls within the time period you want to add. For example, to add the month January&nbsp;1999, you can specify any date from <code>'01JAN99'</code> through <code>'31JAN99</code>'. Oracle OLAP uses the DATEORDER option to resolve any ambiguities.</p>
<p>When adding values to a DAY, WEEK, MONTH, QUARTER, or YEAR dimension that does not yet have values, you must specify only the first and last values you want to add for the dimension. Oracle OLAP automatically fills in the gaps with appropriate values for the intervening time periods.</p>
<p>When a DAY, WEEK, MONTH, QUARTER, or YEAR dimension already has values, you can add values only at the beginning or the end of the existing list. To add values, you must specify only the first or last value you want to add. Oracle OLAP automatically fills in the gap between the existing list and the value you specify.</p>
</dd>
<dt><span class="italic">n</span> PERIODS FIRST</dt>
<dt><span class="italic">n</span> PERIODS LAST</dt>
<dd>
<p>Specifies the number of periods to add at the beginning or end of an existing list of dimension values.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4609"></a>Examples</p>
<div id="OLADM2558" class="example">
<p class="titleinexample"><a id="sthref4610"></a>Example 10-41 Adding Values to Dimension of Type QUARTER</p>
<p>In this example you define a new QUARTER dimension, called <code>qtr</code>, and you add dimension values for the quarters in 1998 and 1999. You must only add the first and last dimension values you want. Oracle OLAP fills in the intervening values. To add the first and last quarters, you can specify any dates that fall within those quarters.</p>
<pre>
DEFINE qtr DIMENSION QUARTER
MAINTAIN qtr ADD '01jan98' '31dec99'
</pre></div>
<!-- class="example" --></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect3" -->
<div id="OLADM856" class="refsect3"><a id="i1023561"></a>
<h3 class="refsect3">MAINTAIN ADD SESSION</h3>
<p><a id="sthref4611"></a><a id="sthref4612"></a><a id="sthref4613"></a><a id="sthref4614"></a><a id="sthref4615"></a>The MAINTAIN command with the ADD SESSION keywords adds a temporary calculated member to a dimension and applies it to the specified objects; or applies a previously-defined calculated member to the specified objects. The calculated member and its definition do not persist from session to session; both are deleted after the session in which they are created.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4616"></a>Syntax</p>
<p class="synopsis">MAINTAIN <span class="italic">dimension</span> ADD SESSION <span class="italic">member_name</span> [<span class="italic">= calculation</span>] -</p>
<p class="synopsis">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; [STEP DIMENSION (<span class="italic">stepdim</span>...)][<span class="italic">apply-to</span>]</p>
<p>where:</p>
<ul>
<li>
<p><span class="syntaxinlineitalic">calculation</span> is one of the following:</p>
<dl>
<dd><span class="syntaxinlineitalic">model-equation</span></dd>
<dd><span class="syntaxinline">AGGREGATION (</span><span class="syntaxinlineitalic">dimension-members</span><span class="syntaxinline">....)</span></dd>
</dl>
</li>
<li>
<p><span class="syntaxinlineitalic">apply-to</span> specifies the basis on which the custom aggregation is added using one of the following phrases:</p>
<dl>
<dd><span class="syntaxinline">APPLY TO AGGMAP</span> <span class="syntaxinlineitalic">aggmaps</span></dd>
<dd><span class="syntaxinline">APPLY FOR VARIABLE</span> <span class="syntaxinlineitalic">variables</span></dd>
<dd><span class="syntaxinline">APPLY WITH RELATION</span> <span class="syntaxinlineitalic">relations</span></dd>
</dl>
</li>
</ul>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4617"></a>Parameters</p>
<dl>
<dt><span class="italic">dimension</span></dt>
<dd>
<p>A dimension that is already defined in an attached analytic workspace. You can specify any type of dimension for <span class="italic">dimension</span> except a non-unique concat dimension or a base dimension of either a unique or non-unique concat dimension.</p>
</dd>
<dt>ADD SESSION</dt>
<dd>
<p>ADD SESSION indicates maintenance of a temporary calculated member.</p>
</dd>
<dt><span class="italic">member-name</span></dt>
<dd>
<p>Specifies the name of the temporary calculated member.</p>
</dd>
<dt>=</dt>
<dd>
<p>Indicates that you are defining a new calculated member.</p>
</dd>
<dt>model-equation</dt>
<dd>
<p>A text expression that specifies the calculation used as a dynamic model to calculate custom member values. (See the <a href="dml_commands_2050.htm#CIHCEHEH">SET</a> command for more information about model equations.)</p>
</dd>
<dt>AGGREGATION</dt>
<dd>
<p>Indicates that the temporary calculated member is added as a custom aggregation using the specified dimension members. This clause effectively modifies the RELATION statement of aggmap objects that are the aggregation specification for variables dimensioned by <span class="italic">dimension</span>. Consequently, a MAINTAIN ADD SESSION statement that contains an AGGREGATION clause must also contain an APPLY WITH RELATION clause.</p>
</dd>
<dt><span class="italic">dimension-membe</span>rs</dt>
<dd>
<p>A text expression that specifies one or more dimension values to be used by the custom aggregation. When using a literal to specify multiple dimension members, separate the values with commas</p>
</dd>
<dt>STEP DIMENSIONS</dt>
<dd>
<p>Indicates that the calculation is a time-series function.</p>
</dd>
<dt><span class="italic">stepdim</span></dt>
<dd>
<p>A text expression that specifies the dimension along which the time-series function is calculated. When using a literal to specify multiple dimension names, separate the names with commas.</p>
</dd>
<dt>APPLY TO AGGMAP</dt>
<dd>
<p><a id="sthref4618"></a><a id="sthref4619"></a>Indicates that the calculated temporary member is added <span class="italic">only</span> to dimensions used by the specified aggmap objects.</p>
</dd>
<dt><span class="italic">aggmaps</span></dt>
<dd>
<p>A text expression that specifies the name of one or more aggmap objects to which the temporary calculated member is added. When using a literal to specify multiple aggmap objects, separate the names with commas. The temporary calculated member is added to each of the specified aggmap objects.</p>
</dd>
<dt>APPLY FOR VARIABLE</dt>
<dd>
<p>Indicates that the temporary calculated member is added <span class="italic">only</span> to dimensions used by the default aggmap objects for the specified variables.</p>
</dd>
<dt><span class="italic">variables</span></dt>
<dd>
<p>A text expression that specifies the one or more variable names for which the temporary calculated member is added to. When using a literal to specify multiple variable names, separate the names with commas. The temporary calculated member is added to the default aggmap object of each specified variable.</p>
<div class="infobox-note">
<p class="notep1">Important:</p>
When a specified variable does not have a default aggmap, using this clause generates an error. Use AGGMAP SET or $AGGMAP to specify a default aggmap for the variable.</div>
</dd>
<dt>APPLY WITH RELATION</dt>
<dd>
<p>Indicates that the temporary calculated member is added dimensions used by the aggregation specifications that contain a RELATION statement for the specified relation.</p>
</dd>
<dt><span class="italic">relation</span></dt>
<dd>
<p>A text expression that specifies the name of the relation for which there must be a RELATION statement in the AGGMAP statement.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4620"></a>Usage Notes</p>
<p class="subhead2"><a id="OLADM2559"></a>Finding Out Information About Temporary Calculated Members</p>
<p>Once you have added a temporary calculated member using a MAINTAIN statement, you can use AGGMAPINFO to discover the temporary calculated members you have added, the equations used to calculate members, and the dimension members used in the right-hand side of equations used to calculate custom members.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4621"></a>Examples</p>
<div id="OLADM2560" class="example">
<p class="titleinexample"><a id="CHDBDHJA"></a><a id="i1023703"></a>Example 10-42 Creating Calculated Dimension Members with Aggregated Values</p>
<p>Assume that an analytic workspace has a dimension named <code>letter</code> and a variable named <code>my_quantity</code> with the following definitions and permanent values.</p>
<pre>
DEFINE letter DIMENSION TEXT
DEFINE my_quantity VARIABLE DECIMAL &lt;letter&gt;

LETTER                  MY_QUANTITY
-------------- ------------------------------
A                                       10.00
B                                      100.00
</pre>
<p>You can define temporary dimension members for the <code>letter</code> dimension and aggregate data in <code>my_quantity</code> for those members following these steps:</p>
<ol>
<li>
<p>Determine the aggregation that you want to perform and define and populate the necessary supporting objects.</p>
<ol>
<li>
<p>Create an empty child-parent relation for the <code>letter</code> dimension</p>
<pre>
DEFINE letter.parentrel RELATION letter &lt;letter&gt;

LETTER                LETTER.PARENTREL
-------------- ------------------------------
A              NA
B              NA
</pre></li>
<li>
<p>Define a simple model to be used to calculate values associated with the <code>letter</code> dimension</p>
<pre>
DEFINE my_model MODEL
MODEL 
  DIMENSION letter
 END
</pre></li>
<li>
<p>Define and compile a simple aggmap to be used to calculate <code>my_quantity</code> values associated with the <code>letter</code> dimension</p>
<pre>
DEFINE my_aggmap AGGMAP
AGGMAP 
   RELATION letter.parentrel PRECOMPUTE(NA)
   MODEL my_model PRECOMPUTE(NA)
  END

COMPILE my_aggmap
</pre></li>
<li>
<p>Define a variable to contain the definition for the custom aggregation, This new variable is the same as <code>my_quantity</code> except that has <code>my_aggmap</code> as its default aggmap.</p>
<pre>
DEFINE my_quantity_definition VARIABLE DECIMAL &lt;letter&gt;

CONSIDER my_quantity_definition
PROPERTY '$AGGMAP' 'my_aggmap'

REPORT my_quantity_definition

LETTER             MY_QUANTITY_DEFINITION
-------------- ------------------------------
A                                          NA
B                                          NA
</pre></li>
</ol>
</li>
<li>
<p>Add temporary members to the <code>letter</code> dimension and specify how variable values for those members are to be calculated.</p>
<pre>
MAINTAIN letter ADD SESSION 'C' = 'A' * 'B'
MAINTAIN letter ADD SESSION 'D' = AGGREGATION('A', 'B') -
    APPLY TO AGGMAP my_aggmap
MAINTAIN letter ADD SESSION 'E' = 'C' + 'D' -
    APPLY WITH RELATION letter.parentrel
MAINTAIN letter ADD SESSION 'F' = 10 * 'E' -
    APPLY FOR VARIABLE my_quantity_definition
</pre>
<p>A report of the <code>letter</code> dimension shows the new dimension members.</p>
<pre>
LETTER
--------------
A
B
C
D
E
F
</pre></li>
<li>
<p>Aggregate <code>my_quantity</code> using the aggmap object named <code>my_aggmap</code>.</p>
<pre>
REPORT AGGREGATE(my_quantity USING my_aggmap)

                AGGREGATE(MY_QUANTITY USING
LETTER                   MY_AGGMAP)
-------------- ------------------------------
A                                       10.00
B                                      100.00
C                                    1,000.00
D                                      110.00
E                                    1,110.00
F                                   11,100.00
</pre></li>
</ol>
<p>Assume now that you issue the UPDATE and COMMIT statements to update and commit your analytic workspace. Then you detach the analytic workspace and end your session.</p>
<p>Later you start a new session and attach the same analytic workspace. When you ask for a description of the analytic workspace you can see that all of the objects that were in the analytic workspace when the UPDATE was issued still exist.</p>
<pre>
DEFINE LETTER DIMENSION TEXT

DEFINE LETTER.PARENTREL RELATION LETTER &lt;LETTER&gt;

DEFINE MY_QUANTITY VARIABLE DECIMAL &lt;LETTER&gt;

DEFINE MY_MODEL MODEL
MODEL
DIMENSION letter
END

DEFINE MY_AGGMAP AGGMAP
AGGMAP
RELATION letter.parentrel PRECOMPUTE(NA)
MODEL my_model PRECOMPUTE(NA)
END

DEFINE MY_QUANTITY_DEFINITION VARIABLE DECIMAL &lt;LETTER&gt;
</pre>
<p>However, when you report on the <code>letter</code> dimension and the <code>my_quantity</code> variable, the temporary dimension members that you added in the previous session and their related values in the <code>my_quantity</code> variable do not exist.</p>
<pre>
LETTER
--------------
A
B

REPORT letter.parentrel

LETTER                LETTER.PARENTREL
-------------- ------------------------------
A              NA
B              NA

REPORT my_quantity

LETTER                  MY_QUANTITY
-------------- ------------------------------
A                                       10.00
B                                      100.00

LETTER             MY_QUANTITY_DEFINITION
-------------- ------------------------------
A                                          NA
B                                          NA

REPORT AGGREGATE(my_quantity USING my_aggmap)

                AGGREGATE(MY_QUANTITY USING
LETTER                   MY_AGGMAP)
-------------- ------------------------------
A                                       10.00
B                                      100.00
</pre></div>
<!-- class="example" --></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect3" -->
<div id="OLADM857" class="refsect3"><a id="CIHCFGGE"></a>
<h3 class="refsect3">MAINTAIN ADD TO PARTITION</h3>
<p>The MAINTAIN ADD TO PARTITION statement <a id="sthref4622"></a>adds previously-populated dimension or composite values to a partition of a previously-defined partition template object.</p>
<div class="infoboxnotealso">
<p class="notep1">Tip:</p>
Use <a href="#CIHBDFHF">MAINTAIN MOVE TO PARTITION</a> to maintain partition values when you have already populated a partitioned variable.</div>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4623"></a>Syntax</p>
<p class="synopsis">MAINTAIN <span class="italic">partition-template</span> ADD TO PARTITION <span class="italic">partition</span> <span class="italic">valuelist</span></p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4624"></a>Parameters</p>
<dl>
<dt><span class="italic">partition-template</span></dt>
<dd>
<p>A text expression that is the name of a previously-defined partition template object.</p>
</dd>
<dt>ADD TO PARTITION</dt>
<dd>
<p>Specifies that values are to be added to the partition.</p>
</dd>
<dt><span class="italic">partition</span></dt>
<dd>
<p>A text expression that is the name of a previously-defined partition in the partition template specified by <span class="italic">partition-template</span>.</p>
</dd>
<dt><span class="italic">valuelist</span></dt>
<dd>
<p>Text literals or a TEXT or ID expression specifying the values to be added. When it is a TEXT expression, each element (line) is treated as a separate value. The values in the expression are added exactly as they are typed.</p>
<p>For a concat dimension, you can specify a value of the concat dimension, or the name of a component dimension and a value or position of that dimension. You can use the values of a dimension surrogate as the values of <span class="italic">value</span>.</p>
<p>Note that you cannot partition along an <code>INTEGER</code> dimension.</p>
</dd>
<dt>TO</dt>
<dd>
<p>Indicates a range of values.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4625"></a>Examples</p>
<p>For an example of adding values to a partition, see <a href="#CCDJGJGJ">Example 10-48, "Adding and Deleting Partition Values"</a>.</p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect3" --></div>
<!-- class="refsect2" -->
<div id="OLADM858" class="refsect2"><a id="i1010111"></a>
<hr />
<h2 class="refsect2">MAINTAIN DELETE</h2>
<p><a id="sthref4626"></a><a id="sthref4627"></a><a id="sthref4628"></a>The MAINTAIN command with the DELETE keyword deletes members from non-concat dimensions and composites; or deletes the data of previously-partitioned variables from one partition to another as it changes the dimension or composite values defined for a partition in the partition template which the variables are dimensioned.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
You can also issue a MAINTAIN DELETE statement for a surrogate dimension that has a Maintain trigger. In this case, Oracle OLAP only executes the Maintain trigger program; no other action occurs. See <a href="dml_program.htm#CHDBDIIH">"Trigger Programs"</a> for more information for more information. Issuing a MAINTAIN statement for a surrogate dimension that does <span class="italic">not</span> have a Maintain trigger, returns an error.</div>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4629"></a>Syntax</p>
<p>The syntax for using the DELETE keyword of the MAINTAIN command to delete members varies depending on the type of object from which you are deleting the members. For this reason, the following separate entries are provided for MAINTAIN DELETE:</p>
<ul>
<li>
<p><a href="#i1024494">MAINTAIN DELETE dimension</a></p>
</li>
<li>
<p><a href="#i1024510">MAINTAIN DELETE composite</a></p>
</li>
<li>
<p><a href="#CIHHFEEI">MAINTAIN DELETE FROM PARTITION</a></p>
</li>
</ul>
</div>
<!-- class="refsubsect" -->
<div id="OLADM859" class="refsect3"><a id="i1024494"></a>
<h3 class="refsect3">MAINTAIN DELETE dimension</h3>
<p><a id="sthref4630"></a><a id="sthref4631"></a><a id="sthref4632"></a>The MAINTAIN command with the DELETE keyword deletes dimension members from non-concat dimensions.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
You can also issue a MAINTAIN DELETE statement for a surrogate dimension that has a Maintain trigger. In this case, Oracle OLAP only executes the Maintain trigger program; no other action occurs. See <a href="dml_program.htm#CHDBDIIH">"Trigger Programs"</a> for more information for more information. Issuing a MAINTAIN statement for a surrogate dimension that does <span class="italic">not</span> have a Maintain trigger, returns an error.</div>
<div class="infoboxnotealso">
<p class="notep1"><span class="bold">See also</span>:</p>
<a href="#i1024510">MAINTAIN DELETE composite</a></div>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4633"></a>Syntax</p>
<p class="synopsis">MAINTAIN <span class="italic">dimension</span> DELETE <span class="italic">limit-clause</span></p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4634"></a>Parameters</p>
<dl>
<dt><span class="italic">dimension</span></dt>
<dd>
<p>A non-concat dimension, already defined in an attached analytic workspace, whose values are to be deleted.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
You cannot use a dimension surrogate as the <span class="italic">dimension</span> argument of a MAINTAIN&nbsp;DELETE command. However, you can use a dimension surrogate as a value within the <span class="italic">limit-clause</span> parameter.</div>
</dd>
<dt><span class="italic">limit-clause</span></dt>
<dd>
<p>Specifies the values to delete from the dimension.</p>
<p>The syntax of <span class="italic">limit-clause</span> is the same syntax as any of the <span class="italic">limit-clause</span> arguments in the various forms of the LIMIT command (that is, the syntax of the LIMIT command after the <span class="italic">limit-type</span> argument such as "TO"). For the syntax of these arguments, see <a href="dml_commands_2009.htm#i1019733">LIMIT (using values) command</a>, <a href="dml_commands_2009.htm#i1019738">LIMIT using LEVELREL command</a>, <a href="dml_commands_2009.htm#i1019742">LIMIT (using parent relation)</a>, <a href="dml_commands_2009.htm#i1019747">LIMIT (using related dimension) command</a>, <a href="dml_commands_2009.htm#i1019753">LIMIT NOCONVERT command</a>, and <a href="dml_commands_2009.htm#i1019757">LIMIT command (using POSLIST)</a>.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4635"></a>Usage Notes</p>
<p class="subhead2"><a id="OLADM2561"></a>Deleting Temporary Calculated Members From Dimensions</p>
<p>When you use a MAINTAIN DELETE statement to delete a temporary calculated member, Oracle OLAP:</p>
<ol>
<li>
<p>Deletes the member from the dimension.</p>
</li>
<li>
<p>Removes the calculation from all aggmap objects that currently contain the corresponding calculation.</p>
</li>
</ol>
<p class="subhead2"><a id="OLADM2562"></a>Deleting Values in an Integer Dimension</p>
<p>When you use MAINTAIN to delete values in an INTEGER dimension, the values are renumbered to keep the normal sequence of <code>INTEGER</code> values (1, 2, 3, ...).</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4636"></a>Examples</p>
<div id="OLADM2563" class="example">
<p class="titleinexample"><a id="sthref4637"></a>Example 10-43 Deleting Dimension Values by Value</p>
<p>This statement deletes <code>Omaha</code> and <code>Newark</code> from the values for <code>city</code>.</p>
<pre>
MAINTAIN city DELETE 'Omaha' 'Newark'
</pre></div>
<!-- class="example" -->
<div id="OLADM2564" class="example">
<p class="titleinexample"><a id="sthref4638"></a>Example 10-44 Deleting the First Five Values of a Dimension</p>
<p>In this example, you use the INTEGER variable <code>intvar</code> to remove the first five cities from the dimension <code>city</code>.</p>
<pre>
intvar = 5
MAINTAIN city DELETE FIRST intvar
</pre></div>
<!-- class="example" -->
<div id="OLADM2565" class="example">
<p class="titleinexample"><a id="sthref4639"></a>Example 10-45 Deleting Dimension Values Based on a Boolean Expression</p>
<p>Here you remove from <code>city</code> all those cities with a population of less than 75,000 people. You use the variable <code>population.c</code>, which contains the population for each city.</p>
<pre>
MAINTAIN city DELETE population.c LT 75000
</pre></div>
<!-- class="example" -->
<div id="OLADM2566" class="example">
<p class="titleinexample"><a id="sthref4640"></a>Example 10-46 Deleting Dimension Values Using Surrogate to Specify Values</p>
<p>Assume that <code>prodid</code> is a <code>NUMBER</code> dimension and <code>prodtype</code> is a <code>TEXT</code> dimension surrogate for <code>prodid</code>. Assume also that the values of <code>prodid</code> are <code>17</code>, <code>40</code>, and <code>56</code>. The values of <code>prodtype</code> are <code>Two-Person&nbsp;Tent</code>, <code>Three-person&nbsp;Tent</code>, and <code>Four-person&nbsp;Tent</code>. The following statement deletes a value from <code>prodid</code> and from its surrogate.</p>
<pre>
MAINTAIN prodid DELETE prodid(prodtype 'Three-Person Tent')
</pre></div>
<!-- class="example" -->
<div id="OLADM2567" class="example">
<p class="titleinexample"><a id="sthref4641"></a>Example 10-47 Deleting Related MONTH Values</p>
<p>In this example, you use the related dimension <code>quarter</code> to remove values of the dimension <code>month</code>. All months related to the values of <code>quarter</code> currently in the status are deleted.</p>
<pre>
LIMIT quarter TO FIRST 1
</pre>
<p>MAINTAIN&nbsp;month&nbsp;DELETE&nbsp;quarter</p>
</div>
<!-- class="example" --></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect3" -->
<div id="OLADM860" class="refsect3"><a id="i1024510"></a>
<h3 class="refsect3">MAINTAIN DELETE composite</h3>
<p><a id="sthref4642"></a><a id="sthref4643"></a><a id="sthref4644"></a>The MAINTAIN command with the DELETE keyword deletes dimension members from composites.</p>
<div class="infoboxnotealso">
<p class="notep1">See also:</p>
<a href="#i1024494">MAINTAIN DELETE dimension</a></div>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4645"></a>Syntax</p>
<p class="synopsis">MAINTAIN&nbsp;<span class="italic">composite</span> DELETE&nbsp;<span class="italic">comp-arg</span></p>
<p>where <span class="syntaxinlineitalic">comp-arg</span> is one of the following constructs:</p>
<dl>
<dd><span class="syntaxinlineitalic">valuelist</span></dd>
<dd><span class="syntaxinline">ALL</span></dd>
<dd><span class="syntaxinlineitalic">base-dim&nbsp;</span><span class="syntaxinline">[</span><span class="syntaxinlineitalic">valuelist</span><span class="syntaxinline">]</span></dd>
<dd><span class="syntaxinlineitalic">boolean-expression</span></dd>
<dd><span class="syntaxinline">{TOP | BOTTOM}&nbsp;</span><span class="syntaxinlineitalic">n&nbsp;</span><span class="syntaxinline">BASEDON&nbsp;</span><span class="syntaxinlineitalic">exp</span></dd>
<dd><span class="syntaxinline">{TOP | BOTTOM}&nbsp;</span><span class="syntaxinlineitalic">n-percent&nbsp;</span><span class="syntaxinline">PERCENTOF&nbsp;</span><span class="syntaxinlineitalic">expression</span></dd>
<dd><span class="syntaxinline">LONGLIST</span></dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4646"></a>Parameters</p>
<dl>
<dt><span class="italic">composite</span></dt>
<dd>
<p>A composite whose values are to be deleted. When the composite is a named composite, it must be defined in an attached analytic workspace. When the composite is unnamed, it must have been used in defining an object in an attached analytic workspace.</p>
<p>Use the SPARSE keyword to refer to an unnamed composite (for example, <code>SPARSE&nbsp;&lt;market product&gt;</code>).</p>
</dd>
<dt><span class="italic">valuelist</span></dt>
<dd>
<p>Specifies one or more values to be deleted from the composite. The <span class="italic">valuelist</span> can be text constants or a text expression.</p>
</dd>
<dt>ALL</dt>
<dd>
<p>Deletes all composite values, but does <span class="italic">not</span> delete the definition of the composite itself.</p>
</dd>
<dt><span class="italic">base-dim</span> [<span class="italic">valuelist</span>]</dt>
<dd>
<p>Deletes the values that include the listed values of a base dimension of the composite. The argument <span class="italic">valuelist</span> can be one value, a list of values, or a range of values (using TO to specify an inclusive range). You cannot use position numbers to specify a range of values. When you omit <span class="italic">valuelist,</span> Oracle OLAP deletes all values that include <span class="italic">base-dim</span> values currently in status.</p>
</dd>
<dt><span class="italic">boolean-expression</span></dt>
<dd>
<p>Deletes all composite values for which the Boolean expression is <code>TRUE</code>. The <span class="italic">boolean-expression</span> must be dimensioned by the <span class="italic">dimension</span> or the <span class="italic">composite</span> from which you the values deleted. When it has additional dimensions, their status must each be limited to one value.</p>
</dd>
<dt>TOP <span class="italic">n</span> BASEDON <span class="italic">exp</span></dt>
<dt>BOTTOM <span class="italic">n</span> BASEDON <span class="italic">exp</span></dt>
<dd>
<p>Deletes the top or bottom <span class="italic">n</span> values based on the highest (TOP) or lowest (BOTTOM) values in <span class="italic">exp.</span> The expression must be dimensioned by the <span class="italic">composite</span> from which you the values deleted. When it has additional dimensions, their status must each be limited to one value.</p>
</dd>
<dt>BOTTOM <span class="italic">n-percent</span> PERCENTOF <span class="italic">expression</span></dt>
<dt>TOP <span class="italic">n-percent</span> PERCENTOF <span class="italic">expression</span></dt>
<dd>
<p>Deletes values by finding the top or bottom performers based on a criterion. This construction sorts values and deletes them based on their contribution, by percentage, to an expression.</p>
</dd>
<dt>LONGLIST</dt>
<dd>
<p>Indicates a long list (up to 2,000 values) of individual values to delete. When there are fewer than 300 values, LONGLIST is not needed.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect3" -->
<div id="OLADM861" class="refsect3"><a id="CIHHFEEI"></a>
<h3 class="refsect3">MAINTAIN DELETE FROM PARTITION</h3>
<p>The MAINTAIN DELETE FROM PARTITION command deletes the <a id="sthref4647"></a><a id="sthref4648"></a>data of previously-partitioned variables from one partition to another as it changes the dimension or composite values defined for a partition in the partition template which the variables are dimensioned.</p>
<div class="infoboxnotealso">
<p class="notep1">Tip:</p>
Use <a href="#CIHBDFHF">MAINTAIN MOVE TO PARTITION</a> to maintain partition values when you have already populated a partitioned variable.</div>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4649"></a>Syntax</p>
<p class="synopsis">MAINTAIN <span class="italic">partition-template</span> DELETE FROM PARTITION <span class="italic">partition</span> { <span class="italic">dim-arg</span>| <span class="italic">comp-arg</span>}</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4650"></a>Parameters</p>
<dl>
<dt><span class="italic">partition-template</span></dt>
<dd>
<p>A text expression that is the name of a previously-defined partition template object.</p>
</dd>
<dt><span class="italic">partition</span></dt>
<dd>
<p>A text expression that is the name of a previously-defined partition in the partition template specified by <span class="italic">partition-template</span>.</p>
</dd>
<dt>DELETE FROM PARTITION</dt>
<dd>
<p>Specifies that values are to be deleted from the partition and from partitioned variables dimensioned using a partition template that includes the partition.</p>
</dd>
<dt><span class="italic">dim-args</span></dt>
<dd>
<p>Specifies the values of a dimension that to use when deleting partitioned variable values and when redefining the values that are in the partition You can use any of the constructs specified for the <span class="italic">dim-arg</span> argument in <a href="#i1024494">MAINTAIN DELETE dimension</a>.</p>
</dd>
<dt><span class="italic">comp--args</span></dt>
<dd>
<p>Specifies the values of a composite to use when deleting partitioned variable values and when redefining the values that are in the partition You can use any of the constructs specified for the <span class="italic">comp-arg</span> argument in <a href="#i1024510">MAINTAIN DELETE composite</a>.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4651"></a>Examples</p>
<div id="OLADM2568" class="example">
<p class="titleinexample"><a id="CCDJGJGJ"></a>Example 10-48 Adding and Deleting Partition Values</p>
<p>Assume that you have defined the following objects in your analytic workspace. on</p>
<pre>
DEFINE time DIMENSION TEXT
DEFINE time_parentrel RELATION time &lt;time&gt;
DEFINE product DIMENSION TEXT
DEFINE partition_sales_by_year PARTITION TEMPLATE &lt;time product&gt; -
   PARTITION BY LIST (time) -
    (PARTITION time_2004 VALUES ('2004', 'Dec2004', 'Jan2004', '31Dec2004', - 
          '01Dec2004', '31Jan2004', '01Jan2004') &lt;TIME PRODUCT&gt; -
     PARTITION time_2003 VALUES ('2003', 'Dec2003', 'Jan2003', '31Dec2003', -
         '01Dec2003', '31Jan2003', '01Jan2003') &lt;TIME PRODUCT&gt; -
     PARTITION time_2002 VALUES ('2002', 'Dec2002', 'Jan2002', '31Dec2002', -
         '01Dec2002', '31Jan2002', '01Jan2002') &lt;TIME PRODUCT&gt;)
</pre>
<p>Assume that instead of having all sales values dimensioned levels by all time values of a year in a partition, you want to have partitions by days and by summary time values (month and year). To change <code>partition_sales_by_year</code> to reflect this new partitioning scheme, you issue the following statements.</p>
<pre>
"Create the new partition
CHGDFN partition_sales_by_year DEFINE -
         (PARTITION partition_month_years VALUES () &lt;time product&gt;)
"Delete the values for months and years from the partitions for years
MAINTAIN partition_sales_by_year DELETE FROM PARTITION time_2004 '2004'- 
        'Dec2004' 'Jan2004'
MAINTAIN partition_sales_by_year DELETE FROM PARTITION time_2003 '2003'-
        'Dec2003''Jan2003'
MAINTAIN partition_sales_by_year DELETE FROM PARTITION time_2002 '2002'-
       'Dec2002' 'Jan2002'
"Add the month and year values to the new partition for summary values
MAINTAIN partition_sales_by_year ADD TO PARTITION partition_month_years '2004'-
      'Dec2004' 'Jan2004' '2003' 'Dec2003''Jan2003' '2002' 'Dec2002' 'Jan2002'
</pre>
<p>The <code>partition_sales_by_year</code> partition template object now has the following definition.</p>
<pre>
DEFINE PARTITION_SALES_BY_YEAR PARTITION TEMPLATE &lt;TIME PRODUCT&gt; -
   PARTITION BY LIST (TIME) -
    (PARTITION TIME_2004 VALUES ('31Dec2004', '01Dec2004', '31Jan2004', -
       '01Jan2004') &lt;TIME PRODUCT&gt; -
     PARTITION TIME_2003 VALUES ('31Dec2003', '01Dec2003', '31Jan2003', -
       '01Jan2003') &lt;TIME PRODUCT&gt; -
     PARTITION TIME_2002 VALUES ('31Dec2002', '01Dec2002', '31Jan2002', -
       '01Jan2002') &lt;TIME PRODUCT&gt; -
     PARTITION PARTITION_MONTH_YEARS VALUES ('2004', 'Dec2004', 'Jan2004', -
       '2003', 'Dec2003', 'Jan2003', '2002', 'Dec2002', 'Jan2002')-
         &lt;TIME PRODUCT&gt;)
</pre></div>
<!-- class="example" --></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect3" --></div>
<!-- class="refsect2" -->
<div id="OLADM862" class="refsect2"><a id="i1023950"></a>
<hr />
<h2 class="refsect2">MAINTAIN MERGE</h2>
<p><a id="sthref4652"></a>The MAINTAIN command with the MERGE keyword provides a quick way to make sure all dimension or composite values on a separate list are included in a non-concat dimension or composite. Using the MERGE keyword with the MAINTAIN command automatically adds the new values from the list and ignores the duplicates. This method of entering dimension values can save a significant amount of time when you have a large number of values to enter.</p>
<p>You can use MERGE with dimensions of any data type, including DAY, WEEK, MONTH, QUARTER, and YEAR dimensions. However, because Oracle OLAP provides a quick way of adding values of DAY, WEEK, MONTH, QUARTER, and YEAR dimensions through the ADD keyword, the MERGE keyword may not be as useful with DAY, WEEK, MONTH, QUARTER, and YEAR dimensions as it is with TEXT or ID dimensions.</p>
<p>At the same time as you are merging values into a dimension, you can also update a relation that involves that dimension.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
You can also issue this MAINTAIN MERGE statement for a surrogate dimension that has a Maintain trigger. In this case, Oracle OLAP only executes the Maintain trigger program one time for each value in <span class="italic">exp</span>; no other action occurs. See <a href="dml_program.htm#CHDBDIIH">"Trigger Programs"</a> for more information for more information. Issuing a MAINTAIN statement for a surrogate dimension that does <span class="italic">not</span> have a Maintain trigger, returns an error.</div>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4653"></a>Syntax</p>
<p class="synopsis">MAINTAIN <span class="italic">dimension</span>|<span class="italic">composite</span> MERGE&nbsp;<span class="italic">exp</span>&nbsp;[RELATE&nbsp;<span class="italic">relation</span>]</p>
<dl>
<dt><span class="italic">dimension</span></dt>
<dd>
<p>A non-concat dimension, already defined in an attached analytic workspace, whose values are to be entered or changed.</p>
</dd>
<dt><span class="italic">composite</span></dt>
<dd>
<p>A composite whose values are to be added, deleted, or merged. When the composite is a named composite, it must be defined in an attached analytic workspace. When the composite is unnamed, it must have been used in defining an object in an attached analytic workspace. Use the SPARSE keyword to refer to an unnamed composite (for example, <code>SPARSE &lt;market product&gt;</code>).</p>
</dd>
<dt><span class="italic">exp</span></dt>
<dd>
<p>Specifies an expression whose values are to be merged with <span class="italic">dimension</span>; for example, the name of a dimensioned text variable that contains dimension values, or a single-cell text variable whose value is a multiline list of dimension values. MAINTAIN MERGE ignores any NAs in <span class="italic">exp.</span> When <span class="italic">dimension</span> is an INTEGER dimension, then <span class="italic">exp</span> specifies the number of values that you want in the dimension. When the actual total is less, MAINTAIN MERGE adds enough values to reach the specified total. For example, when an INTEGER dimension has 10 positions, <code>MERGE</code> <code>5</code> has no effect; but <code>MERGE</code> <code>15</code> would add 5 values.</p>
</dd>
<dt>RELATE <span class="italic">relation</span></dt>
<dd>
<p>Specifies a relation to be updated as new values from <span class="italic">exp</span> are merged into <span class="italic">dimension.</span> At least one dimension of <span class="italic">exp</span> must also appear in the definition of <span class="italic">relation.</span> When <span class="italic">exp</span> is a single-cell value, you cannot use the RELATE phrase.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4654"></a>Examples</p>
<div id="OLADM2569" class="example">
<p class="titleinexample"><a id="sthref4655"></a>Example 10-49 Using the MERGE Keyword with Composites</p>
<p>Suppose you want to define a composite that is made up of all combinations of the first three values of the <code>product</code> dimension and the first five values of the <code>district</code> dimension. You can efficiently include all 15 values with the following statements.</p>
<pre>
DEFINE comp_proddist COMPOSITE &lt;product district&gt;
LIMIT product TO FIRST 3
LIMIT district TO FIRST 5
MAINTAIN comp_proddist MERGE &lt;product district&gt;
</pre>
<p>This method works with conjoint dimensions as well.</p>
</div>
<!-- class="example" --></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="OLADM863" class="refsect2"><a id="CIHIGHGA"></a>
<hr />
<h2 class="refsect2">MAINTAIN MOVE</h2>
<p>A MAINTAIN command with the MOVE keyword has different effects depending on the object on which it operates:</p>
<ul>
<li>
<p>When maintaining a dimension, MAINTAIN MOVE changes the position of one or more values in a non-concat dimension or a dimension of type TEXT, ID, or INTEGER or adds previously-populated dimension or composite values to a partition</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
You can also issue a <a href="#i1010119">MAINTAIN MOVE dimension value</a> statement for a surrogate dimension that has a Maintain trigger. In this case, Oracle OLAP only executes the Maintain trigger program; no other action occurs. See <a href="dml_program.htm#CHDBDIIH">"Trigger Programs"</a> for more information for more information. Issuing a MAINTAIN statement for a surrogate dimension that does <span class="italic">not</span> have a Maintain trigger, returns an error.</div>
</li>
<li>
<p>When maintaining a partition, MAINTAIN MOVE moves the data of a previously-partitioned variables from one partition to another as it changes the dimension or composite values defined for a partition in the partition template which the variables are dimensioned.</p>
</li>
</ul>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4656"></a>Syntax</p>
<p>The syntax for using the MAINTAIN command with the MOVE keyword depends on the type of the object being maintained.</p>
<p>For this reason, the following separate entries are provided for MAINTAIN MOVE:</p>
<ul>
<li>
<p><a href="#i1010119">MAINTAIN MOVE dimension value</a></p>
</li>
<li>
<p><a href="#CIHBDFHF">MAINTAIN MOVE TO PARTITION</a></p>
</li>
</ul>
</div>
<!-- class="refsubsect" -->
<div id="OLADM864" class="refsect3"><a id="i1010119"></a>
<h3 class="refsect3">MAINTAIN MOVE dimension value</h3>
<p><a id="sthref4657"></a>A simple MAINTAIN MOVE statement changes the position of one or more values in a non-concat dimension or a dimension of type TEXT, ID, or INTEGER. You cannot use the MOVE keyword of the MAINTAIN command with composites or with dimensions of type DAY, WEEK, MONTH, QUARTER, or YEAR.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
You can also issue a MAINTAIN MOVE statement for a surrogate dimension that has a Maintain trigger. In this case, Oracle OLAP only executes the Maintain trigger program; no other action occurs. See <a href="dml_program.htm#CHDBDIIH">"Trigger Programs"</a> for more information for more information. Issuing a MAINTAIN statement for a surrogate dimension that does <span class="italic">not</span> have a Maintain trigger, returns an error.</div>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4658"></a>Syntax</p>
<p class="synopsis">MAINTAIN <span class="italic">dimension</span> MOVE <span class="italic">limit-clause</span></p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4659"></a>Parameters</p>
<dl>
<dt><span class="italic">dimension</span></dt>
<dd>
<p>A non-concat dimension, already defined in an attached analytic workspace, whose values are to be entered or changed. The dimension must be of type TEXT, ID, or INTEGER. You cannot specify a dimension of type DAY, WEEK, MONTH, QUARTER, or YEAR.</p>
</dd>
<dt><span class="italic">limit-clause</span></dt>
<dd>
<p>Specifies the values you want to move.</p>
<p>The syntax of <span class="italic">limit-clause</span> is the same syntax as any of the <span class="italic">limit-clause</span> arguments in the various forms of the LIMIT command (that is, the syntax of the LIMIT command after the <span class="italic">limit-type</span> argument such as "TO"). For the syntax of these arguments, see <a href="dml_commands_2009.htm#i1019733">LIMIT (using values) command</a>, <a href="dml_commands_2009.htm#i1019738">LIMIT using LEVELREL command</a>, <a href="dml_commands_2009.htm#i1019742">LIMIT (using parent relation)</a>, <a href="dml_commands_2009.htm#i1019747">LIMIT (using related dimension) command</a>, <a href="dml_commands_2009.htm#i1019753">LIMIT NOCONVERT command</a>, and <a href="dml_commands_2009.htm#i1019757">LIMIT command (using POSLIST)</a>.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4660"></a>Usage Notes</p>
<p class="subhead2"><a id="OLADM2570"></a>What Effects Performance of MAINTAIN MOVE</p>
<p>The performance cost of issuing a MAINTAIN MOVE command is dependent on the length of the dimension, not on the number of values being moved. Consequently, when moving values in a large dimension, do not issue several MAINTAIN MOVE statements one after another; instead, set up the dimension status to what you want and then issue a single MAINTAIN MOVE command.</p>
<p class="subhead2"><a id="OLADM2571"></a>Reordering or Sorting Values within a Dimension</p>
<p>When you want to reorder or sort dimension values using a MAINTAIN MOVE statement, to specify that you want to use all of the dimension values that are in status, use the STATUS keyword of the <span class="italic">limit-clause</span> argument of <a href="dml_commands_2009.htm#i1019733">LIMIT (using values) command</a> rather than a VALUES command.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4661"></a>Examples</p>
<div id="OLADM2572" class="example">
<p class="titleinexample"><a id="sthref4662"></a>Example 10-50 Moving a Dimension Value to a Specific Position</p>
<p>This statement moves the position of the city <code>Houston</code> to the position following the fifth dimension value.</p>
<pre>
MAINTAIN city MOVE 'Houston' AFTER 5
</pre></div>
<!-- class="example" -->
<div id="OLADM2573" class="example">
<p class="titleinexample"><a id="sthref4663"></a>Example 10-51 Moving a Dimension Value to the End of the Status List</p>
<p>In this example, you use the TEXT variable <code>textvar</code> to move <code>Seattle</code> to the end of the list of cities.</p>
<pre>
textvar = 'Seattle'
MAINTAIN city MOVE textvar LAST
</pre></div>
<!-- class="example" -->
<div id="OLADM2574" class="example">
<p class="titleinexample"><a id="sthref4664"></a>Example 10-52 Moving Values of Concat Dimensions</p>
<p>The following statement moves the <code>reg.dist.ccdim</code> concat dimension value <code>&lt;district:&nbsp;'Denver'&gt;</code> after the concat dimension value <code>&lt;region:&nbsp;'West'&gt;</code>.</p>
<pre>
MAINTAIN reg.dist.ccdim MOVE &lt;district: 'Denver'&gt; AFTER &lt;region: 'West'&gt;
</pre>
<p>The following statement moves the concat dimension value <code>&lt;district:&nbsp;'Denver'&gt;</code> after the position that corresponds to the first value of the component <code>district</code> dimension. If the first value in the status of <code>district</code> is <code>Atlanta</code>, then <code>&lt;district:&nbsp;'Denver'&gt;</code> moves after the value <code>&lt;district:&nbsp;'Atlanta'&gt;</code> in the concat dimension.</p>
<pre>
MAINTAIN reg.dist.ccdim MOVE &lt;district: 'Denver'&gt; AFTER &lt;district: 1&gt;
</pre>
<p>The following statement moves the concat dimension value <code>&lt;district:&nbsp;'Dallas'&gt;</code> after the third value of the concat dimension.</p>
<pre>
MAINTAIN reg.dist.ccdim MOVE &lt;district: 'Dallas'&gt; AFTER 3
</pre></div>
<!-- class="example" --></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect3" -->
<div id="OLADM865" class="refsect3"><a id="CIHBDFHF"></a>
<h3 class="refsect3">MAINTAIN MOVE TO PARTITION</h3>
<p>A MAINTAIN MOVE TO PARTITION statement combines both add and move capabilities. You can use a MAINTAIN MOVE TO PARTITION statement to:</p>
<ul>
<li>
<p>Add<a id="sthref4665"></a><a id="sthref4666"></a><a id="sthref4667"></a><a id="sthref4668"></a> previously-populated dimension or composite values to a partition in the same manner as <a href="#CIHCFGGE">MAINTAIN ADD TO PARTITION</a></p>
</li>
<li>
<p>Change the dimension or composite values defined for a partition in the partition template by which the variables are dimensioned and, at the same time, move the data of a previously-partitioned variables dimensioned by those dimensions and composites from one partition to another.</p>
</li>
</ul>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4669"></a>Syntax</p>
<p class="synopsis">MAINTAIN <span class="italic">partition-template</span> MOVE TO PARTITION <span class="italic">partition</span> <span class="italic">value&nbsp;[TO&nbsp;value]</span></p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4670"></a>Parameters</p>
<dl>
<dt><span class="italic">partition-template</span></dt>
<dd>
<p>A text expression that is the name of a previously-defined partition template object.</p>
</dd>
<dt>MOVE TO PARTITION</dt>
<dd>
<p>Specifies that values are to be added to the partition or moved from one partition to another.</p>
</dd>
<dt><span class="italic">partition</span></dt>
<dd>
<p>A text expression that is the name of a previously-defined partition in the partition template specified by <span class="italic">partition-template</span>.</p>
</dd>
<dt><span class="italic">value</span></dt>
<dd>
<p>Specifies one or more values of a previously-populated dimension or composite. You can specify these values as:</p>
<ul>
<li>
<p>A literal value.</p>
</li>
<li>
<p>An expression whose value is a dimension value.</p>
</li>
<li>
<p>For all dimensions except <code>NUMBER</code> dimensions, an <code>INTEGER</code> expression whose value represents the position of a dimension value.</p>
</li>
<li>
<p>A valueset; or a <a href="dml_functions_2010.htm#i78807">LIMIT function</a>.</p>
</li>
</ul>
<p>For a concat dimension, you can specify a value of the concat dimension, or the name of a component dimension and a value or position of that dimension. You can use the values of a dimension surrogate as the values of <span class="italic">value</span>.</p>
</dd>
<dt>TO</dt>
<dd>
<p>Indicates a range of values.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4671"></a>Examples</p>
<div id="OLADM2575" class="example">
<p class="titleinexample"><a id="CCDDADAJ"></a>Example 10-53 Specifying the Values of a Partition Using Valuesets</p>
<p>Assume that you have defined a partition template object with the following definition that does not specify the actual dimension values for each partition.</p>
<pre>
DEFINE PARTITION_SALES_BY_YEAR PARTITION TEMPLATE &lt;TIME PRODUCT&gt; -
   PARTITION BY LIST (TIME) -
    (PARTITION TIME_2004 VALUES () &lt;TIME PRODUCT&gt; -
     PARTITION TIME_2003 VALUES () &lt;TIME PRODUCT&gt; -
     PARTITION TIME_2002 VALUES () &lt;TIME PRODUCT&gt;)
</pre>
<p>To specify the values of each partition using valuesets, you take the following steps:</p>
<ol>
<li>
<p>Define a valueset for each year's values.</p>
<pre>
DEFINE vs_2004 VALUESET time
LIMIT vs_2004 to '01Dec2004' '31Dec2004' '01Jan2004''31Jan2004' -
     'Jan2004' 'Dec2004' '2004'
DEFINE vs_2003 VALUESET time
LIMIT vs_2003 to '01Dec2003' '31Dec2003' '01Jan2003''31Jan2003' -
     'Jan2003' 'Dec2003' '2003'
DEFINE vs_2002 VALUESET time
LIMIT vs_2002 to '01Dec2002' '31Dec2002' '01Jan2002''31Jan2002' -
     'Jan2002' 'Dec2002' '2002'
</pre></li>
<li>
<p>Using MAINTAIN MOVE statements, specify values for the partitions of the partition template.</p>
<pre>
MAINTAIN partition_sales_by_year MOVE TO PARTITION time_2004 vs_2004
MAINTAIN partition_sales_by_year MOVE TO PARTITION time_2003 vs_2003
MAINTAIN partition_sales_by_year MOVE TO PARTITION time_2002 vs_2002
</pre></li>
</ol>
<p>When you issue a DESCRIBE statement, you can see that the description of the <code>partition_sales_by_year</code> partition template now includes the appropriate values of <code>time</code> in each partition definition.</p>
<pre>
DEFINE PARTITION_SALES_BY_YEAR PARTITION TEMPLATE &lt;TIME PRODUCT&gt; - 
    PARTITION BY LIST (TIME) -
    (PARTITION TIME_2004 VALUES -
('2004','Dec2004','Jan2004', 31Dec2004',01Dec2004','31Jan2004','01Jan2004')-
     PARTITION TIME_2003 VALUES -
('2003','Dec2003','Jan2003', 31Dec2003',01Dec2003','31Jan2003','01Jan2003')-
      PARTITION TIME_2002 VALUES -
                     ('2002','Dec2002','Jan2002', 31Dec2002',01Dec2002','31Jan2002','01Jan2002'))
</pre></div>
<!-- class="example" --></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect3" --></div>
<!-- class="refsect2" -->
<div id="OLADM866" class="refsect2"><a id="i1010123"></a>
<hr />
<h2 class="refsect2">MAINTAIN RENAME</h2>
<p><a id="sthref4672"></a>The MAINTAIN command with the RENAME keyword changes the spelling of one or more dimension values. You cannot use RENAME keyword with a composite or with dimensions of type INTEGER, DAY, WEEK, MONTH, QUARTER, or YEAR.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
You can also issue a MAINTAIN RENAME statement for a surrogate dimension that has a Maintain trigger. In this case, Oracle OLAP only executes the Maintain trigger program; no other action occurs. See <a href="dml_program.htm#CHDBDIIH">"Trigger Programs"</a> for more information for more information. Issuing a MAINTAIN statement for a surrogate dimension that does <span class="italic">not</span> have a Maintain trigger, returns an error.</div>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4673"></a>Syntax</p>
<p class="synopsis">MAINTAIN <span class="italic">dimension</span> RENAME {<span class="italic">value</span> <span class="italic">new-value</span>}...</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4674"></a>Parameters</p>
<dl>
<dt><span class="italic">dimension</span></dt>
<dd>
<p>A non-concat dimension of type TEXT or ID that is already defined in an attached analytic workspace and whose values are to be renamed. You cannot specify a dimension of type INTEGER, DAY, WEEK, MONTH, QUARTER, or YEAR.</p>
</dd>
<dt><span class="italic">value</span></dt>
<dd>
<p>Specifies an existing dimension value to be renamed. You can specify a dimension value, a character expression whose value is a dimension value, or an <code>INTEGER</code> expression whose value represents the position of a dimension value.</p>
</dd>
<dt><span class="italic">new-value</span></dt>
<dd>
<p>A text constant or a TEXT or ID expression that is the new spelling for the dimension value.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4675"></a>Examples</p>
<div id="OLADM2576" class="example">
<p class="titleinexample"><a id="sthref4676"></a>Example 10-54 Renaming Values of a TEXT Dimension</p>
<p>This statement changes the spelling of the cities <code>Chic</code> and <code>Bost</code> to <code>Chicago</code> and <code>Boston</code>.</p>
<pre>
MAINTAIN city RENAME 'Chic' 'Chicago' 'Bost' 'Boston'
</pre>
<p><a id="i1024803"></a>In this example you use the TEXT variable <code>textvar</code> to change the second city to <code>Atlanta</code>.</p>
<pre>
textvar = 'Atlanta'
MAINTAIN city RENAME 2 textvar
</pre></div>
<!-- class="example" --></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" --></div>
<!-- class="refsect1" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment3088">
<tr>
<td class="cellalignment3095">
<table class="cellalignment3093">
<tr>
<td class="cellalignment3092"><a href="dml_commands_2015.htm"><img width="24" height="24" src="../../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment3092"><a href="dml_commands_2017.htm"><img width="24" height="24" src="../../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;1994, 2013,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment3097">
<table class="cellalignment3091">
<tr>
<td class="cellalignment3092"><a href="../../index.htm"><img width="24" height="24" src="../../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment3092"><a href="../../nav/portal_booklist.htm"><img width="24" height="24" src="../../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment3092"><a href="toc.htm"><img width="24" height="24" src="../../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment3092"><a href="index.htm"><img width="24" height="24" src="../../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment3092"><a href="../../nav/mindx.htm"><img width="24" height="24" src="../../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment3092"><a href="../../dcommon/html/feedback.htm"><img width="24" height="24" src="../../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>
</body>
</html>
