<!DOCTYPE html>
<html lang="en">
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1">
<meta charset="utf-8">
<title>PERMIT</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Version 5.1.2 Build 742" />
<meta name="dcterms.created" content="2013-11-14T21:21:54Z" />
<meta name="robots" content="all" />
<meta name="dcterms.title" content="OLAP DML Reference" />
<meta name="dcterms.identifier" content="E17122-08" />
<meta name="dcterms.isVersionOf" content="OLADM" />
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;1994, 2013,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved." />
<link rel="Start" href="../../index.htm" title="Home" type="text/html" />
<link rel="Copyright" href="../../dcommon/html/cpyr.htm" title="Copyright" type="text/html" />

<script type="application/javascript"  src="../../dcommon/js/headfoot.js"></script>
<script type="application/javascript"  src="../../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html" />
<link rel="Index" href="index.htm" title="Index" type="text/html" />
<link rel="Prev" href="dml_commands_2025.htm" title="Previous" type="text/html" />
<link rel="Next" href="dml_commands_2027.htm" title="Next" type="text/html" />
<link rel="alternate" href="../e17122.pdf" title="PDF version" type="application/pdf" />
<link rel="schema.dcterms" href="http://purl.org/dc/terms/" />
<link rel="stylesheet" href="../../dcommon/css/fusiondoc.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/header.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/footer.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/fonts.css">
<link rel="stylesheet" href="../../dcommon/css/foundation.css">
<link rel="stylesheet" href="../../dcommon/css/codemirror.css">
<link rel="stylesheet" type="text/css" title="Default" href="../../nav/css/html5.css">
<link rel="stylesheet" href="../../dcommon/css/respond-480-tablet.css">
<link rel="stylesheet" href="../../dcommon/css/respond-768-laptop.css">
<link rel="stylesheet" href="../../dcommon/css/respond-1140-deskop.css">
<script type="application/javascript" src="../../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">500/593</span> <!-- End Header --><a id="i79588"></a>
<hr />
<div id="OLADM878" class="refsect1">
<h1 class="refsect1">PERMIT</h1>
<p><a id="sthref4762"></a><a id="sthref4763"></a><a id="sthref4764"></a><a id="sthref4765"></a><a id="sthref4766"></a>The PERMIT command lets you grant or deny read-only and read/write access permission for workspace objects and for specific values of dimensions and dimensioned objects. You can also use PERMIT to grant or deny permission to maintain dimensions and to change permission for workspace objects.</p>
<p>In general, access permissions that you set for a dimension are meaningful not only for that dimension, but also for the objects dimensioned by that dimension as explained more fully in <a href="#BAJBDECG">"How Dimension Permission Interacts with Permissions for Other Objects"</a>. Access permissions that you set for other objects are limited in scope to that particular object. Various conditions determine when permission changes take effect as discussed in <a href="#BAJHHEGD">"When Permission Changes Take Effect"</a></p>
<div class="infoboxnotealso">
<p class="notep1">See also:</p>
<a href="#BAJGAJGJ">"Important Considerations Before You Change the Permissions of an Object"</a>, <a href="dml_program.htm#i1020273">"Startup Programs"</a>, <a href="dml_program.htm#CHDGGBGH">"Permission Programs"</a>, <a href="dml_options081.htm#i79593">PERMITERROR</a> option, and <a href="dml_commands_2027.htm#i79598">PERMITRESET</a> command.</div>
<div class="infoboxnotealso">
<p class="notep1">Tip:</p>
The PERMIT command assigns permission to the object most recently defined or considered. When the definition of the object is not the current one, first use a CONSIDER statement before issuing PERMIT commands for the object</div>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4767"></a>Syntax</p>
<p class="synopsis">PERMIT&nbsp;{READ|WRITE|MNT|PERMIT}&nbsp;[WHEN&nbsp;<span class="italic">permission-condition</span>...]</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4768"></a>Parameters</p>
<dl>
<dt>READ</dt>
<dd>
<p>Depending on the permission conditions, grants or restricts permission to read <span class="italic">all</span> of the values of an object or only certain values in a dimension or dimensioned object.</p>
<p>Note that restricting read permission for a dimension also restricts maintain permission for that dimension. Also, when you grant read permission for an object, write permission is also allowed for the values you can read, unless you deny it with an explicit PERMIT WRITE statement.</p>
</dd>
<dt>WRITE</dt>
<dd>
<p>Depending on the permission conditions, grants or restricts permission to modify <span class="italic">any</span> of the values of an object or only certain values of a dimensioned object.</p>
<p>Restricting write permission for an object does not necessarily mean that the object is totally unavailable. For example, when you have restricted write access to a calculation specification (that is, an aggmap object, program, model, or formula, you can still execute the object&mdash; you just cannot edit the contents of the calculation specification.</p>
<p>Oracle OLAP does not prevent you from granting write permission for values that you cannot read within a dimensioned object. When you have both a PERMIT READ and a PERMIT WRITE statement for a dimensioned object, and some values which satisfy the permission conditions for write do not fall within the subset of values which satisfy the permission conditions for read, then those values may be modified but not seen.</p>
<div class="infoboxnotealso">
<p class="notep1">Tip:</p>
Write permission is not meaningful for dimensions&mdash; except to provide write access to objects dimensioned by the dimension. To grant or restrict the ability to add values to a dimension, issue PERMIT MNT statements for the dimension instead.</div>
<div class="infoboxnotealso">
<p class="notep1">See also:</p>
<a href="#BAJFBDAA">"When the only PERMIT Statement for an Object is a PERMIT WRITE Statement"</a></div>
</dd>
<dt>MNT</dt>
<dd>
<p>Depending on the permission conditions, grants or restricts permission to maintain a dimension.</p>
<p>Note that you cannot grant maintain permission to a dimension for which you have restricted read permission. Oracle OLAP automatically denies maintain permission for a dimension when there is restricted read permission for that dimension.</p>
</dd>
<dt>PERMIT</dt>
<dd>
<p>Depending on the permission conditions, grants or restricts permission to use the PERMIT command to change the read, write, maintain, or permit permission for the object.</p>
<p>Note that unless explicitly you explicitly deny permit permission for an object, permit permission is allowed for an object no matter what other permissions are set for that object.</p>
</dd>
<dt>WHEN <span class="italic">permission-condition</span>...</dt>
<dd>
<p>When you omit the WHEN clause and execute a PERMIT READ, PERMIT WRITE, or PERMIT MNT statement, Oracle OLAP restores full read, write, or maintain permission to the object.</p>
<p>When you include the WHEN clause, the conditions for granting read, write, maintain, or permit permission consist of one or more Boolean expressions depending on whether or not the object has dimensionality, the type of permission you are setting and, for read and write permissions, whether or not the object has dimensionality:</p>
<ul>
<li>
<p>When you are specifying permit permission, maintain permission, or read or write permission that applies to an object without dimensionality or when you want the read or write permissions to apply to <span class="italic">all</span> the values of a dimensioned object, specify the permission condition as a Boolean expression that evaluates to a single value. (Not that if you <span class="italic">do</span> specify a dimensioned Boolean expression to specify permissions for an object without dimensionality or when you are specifying permit or maintain permission, then PERMIT uses the first value in status.)</p>
<div class="infoboxnotealso">
<p class="notep1">Tip:</p>
Avoid specifying a Boolean value as a permission condition (for example, <code>YES</code> or <code>NO</code>) for a PERMIT PERMIT statement. Instead specify the permission condition as a Boolean variable, a function that returns a Boolean result, or a Boolean value calculated by comparison operators. In this way, when permit permission has been denied, you can restore it by setting the value of the Boolean and executing a PERMITRESET statement. If you ever do lock up an object and are unable to modify its permission, you can specify permit permission for it in the workspace permission program for that workspace, then detach and reattach the workspace.</div>
</li>
<li>
<p>If you are specifying read or write permission that applies to individual dimension values or to slices of a dimensioned object, specify one permission condition for each dimension of interest. In this case, the WHEN clause has the following syntax and each dimensioned permission condition consists of a Boolean expression dimensioned by a dimension of the object.</p>
<dl>
<dd><span class="syntaxinline">WHEN</span>&nbsp;<span class="syntaxinlineitalic">dimensioned_permission_condition1</span></dd>
<dd><span class="syntaxinline">&nbsp;&nbsp;&nbsp;[BY&nbsp;</span><span class="syntaxinlineitalic">dimensioned_permission_condition2</span></dd>
<dd><span class="syntaxinline">[UNION</span> <span class="syntaxinlineitalic">dimensioned_permission_condition2A</span>]...</dd>
</dl>
<p>Use the UNION phrase to efficiently access the union of several symmetric subcubes of a multidimensional variable.</p>
<p>Note that if a Boolean expression for a dimensioned permission condition has any extra dimensions in addition to an object dimension, PERMIT takes the first value in status to determine which column of Boolean values to use. The intersection of the <code>YES</code> values for each dimension (a logical <code>AND</code> of the conditions) is the subset of values within the object to which the permission applies. When any of the object dimensions are not represented by a dimensioned permission condition, then Oracle OLAP assumes <code>YES</code> for all those dimension values.</p>
</li>
</ul>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4769"></a>Usage Notes</p>
<p class="subhead2"><a id="BAJGAJGJ"></a><a id="OLADM2634"></a>Important Considerations Before You Change the Permissions of an Object</p>
<p>Keep the following important considerations in mind before you change the permissions of an object:</p>
<ul>
<li>
<p>You <span class="italic">must</span> have permit permission for an object to issue PERMIT commands against it.</p>
</li>
<li>
<p>Do <span class="italic">not</span> lock out the DBA user, who must always have access to everything in the workspace.</p>
</li>
<li>
<p>Issuing PERMIT statements against an INTEGER dimension may result in undesired behavior. Dimensions with an INTEGER data type have values identified by their numeric position. PERMIT renumbers INTEGER dimensions to keep the normal sequence of <code>INTEGER</code> values (1, 2, 3, ...). When you must use PERMIT to change the default access rights for an INTEGER dimension and this behavior is not desirable, redefine the dimension with a different, non-integer data type.</p>
</li>
</ul>
<p class="subhead2"><a id="BAJHHEGD"></a><a id="OLADM2635"></a>When Permission Changes Take Effect</p>
<p>Within <a href="dml_program001.htm#i1015611">PERMIT_READ</a> and <a href="dml_program001.htm#i1015926">PERMIT_WRITE</a> programs, permissions ares only evaluated when you issue an explicit PERMIT or PERMITRESET statement and then reference the targeted object.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
AW ATTACH automatically executes a PERMITRESET immediately after executing an analytic workspace permission program. Executing PERMITRESET causes the workspace to be attached with all permission implemented</div>
<p>Once an analytic workspace is attached and any PERMIT_READ and PERMIT_WRITE programs have executed, permission changes specified by a PERMIT statement take effect:</p>
<ul>
<li>
<p>When a PERMITRESET statement executes.</p>
</li>
<li>
<p>When you are targeting any object (except a dimension), and the permission condition consists of a single Boolean variable, any changes to that Boolean variable affect the permission immediately. (You never have to execute a PERMITRESET in this case.)</p>
</li>
<li>
<p>In other situations, if you do not issue a PERMITRESET statement, permission are evaluated upon next reference to the object.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
The OBJ function is an exception to this rule. Because OBJ does not load the object into memory, it does not reflect any changes to the object's permission since the last time it was loaded. When you want OBJ to provide information based on new permission criteria, execute a LOAD statement before the OBJ statement.</div>
</li>
</ul>
<p class="subhead2"><a id="BAJFBDAA"></a><a id="OLADM2636"></a>When the only PERMIT Statement for an Object is a PERMIT WRITE Statement</p>
<p>When the only PERMIT statement for an object is a PERMIT WRITE, then read permission is provided by default for the object. The default read permission is provided independent of the value of the permission condition(s) for the PERMIT WRITE statement. Consequently, a PERMIT WRITE with a single-cell permission condition which evaluates to <code>NO</code> provides read-only access to an nondimensional object or to all the values of a dimensioned object.</p>
<p>When the only PERMIT statement for an object is a PERMIT WRITE with dimensioned permission conditions, it designates some values for read/write access and the remaining values for read-only access. See <a href="#i80909">Example 10-73, "Variable Permission"</a>.</p>
<p class="subhead2"><a id="BAJBDECG"></a><a id="OLADM2637"></a>How Dimension Permission Interacts with Permissions for Other Objects</p>
<p>All dimensioned data is affected by the read permission on its dimensions. The dimension values that satisfy the read permission condition determine the default status for the dimension. The values of dimensioned objects that correspond to dimension values without read permission are inaccessible.</p>
<p>However, in order for write permission associated with a dimension to apply to other objects dimensioned by it, there must be at least one PERMIT statement associated with the dimensioned object.</p>
<ul>
<li>
<p>When you want a dimensioned object to inherit write permission from its dimensions, but you do not want it to have permission of its own, which could interact with the dimension permission, you can simply use a PERMIT READ with a single-cell permission condition that evaluates to <code>YES</code>.</p>
</li>
<li>
<p>When you want a dimensioned object to inherit write permission from its dimensions, and you also want it to have permissions of its own, understand how dimension permission interacts with individual object permissions before setting them.</p>
</li>
</ul>
<p>Dimension permission interacts with permission for most of the objects dimensioned by it in the following ways:</p>
<ul>
<li>
<p>The access permissions of a dimension apply to all dimension surrogates defined for that dimension. You cannot use a PERMIT statement on a dimension surrogate.</p>
</li>
<li>
<p>When there is read or write permission associated with a dimension, but no permission restriction associated with an object dimensioned by that dimension, then the permission for the dimensioned object is the same as the dimension permission.</p>
</li>
<li>
<p>When there is read permission associated with both the dimension and the dimensioned object, Oracle OLAP determines the values with read permission in the object by taking the intersection of the values with read permission in the dimension and the values with read permission in the object.</p>
</li>
<li>
<p>When there is write permission associated with both the dimension and the dimensioned object, Oracle OLAP determines the values with write permission in the object by taking the intersection of the values with read permission in the dimension, the values with write permission in the dimension, and the values with write permission in the object.</p>
</li>
</ul>
<p>However, this is not the case for relations and valuesets. When there is restricted write permission for a dimension of a relation or a valueset, it does not affect relations and valuesets dimensioned by that dimension.</p>
<p class="subhead2"><a id="OLADM2638"></a>Determining Permission</p>
<p>The permission associated with an object is provided, like an LD, when you describe it using a DESCRIBE statement. The only exception is when you are denied permit permission for the object. In this case, no permission is provided when you describe it.</p>
<p class="subhead2"><a id="OLADM2639"></a>Advantages of PERMIT Over LIMIT as a Tool for Scoping</p>
<p>As a tool for scoping within application programs, PERMIT has several advantages over the LIMIT command. To restrict the scope of a dimensioned object according to a Boolean expression, you have to use two LIMIT statements, a <code>LIMIT</code> and a LIMITKEEP. You only need one PERMIT statement to do the same thing. Moreover, application users cannot change the restricted scope set by PERMIT commands in application programs. Application users can easily change the scope set by LIMIT commands in application programs simply by executing more LIMIT commands.</p>
<p class="subhead2"><a id="OLADM2640"></a>Handling Permission Violations</p>
<p>You can use the PERMITERROR option to control the way Oracle OLAP handles attempted violations of the permission established by PERMIT commands for variables. The default value of PERMITERROR is <code>YES</code>, meaning that Oracle OLAP signals an error when a user attempts to access a value for which permission is denied. When you set PERMITERROR to <code>NO</code>, Oracle OLAP simply denies access without signaling an error condition which is useful when you want to do a report of a dimensioned variable for which you have partial permission without limiting the dimensions to the permitted values up front. With PERMITERROR set to <code>NO</code>, values for which you do not have read permission appear as <code>NA</code> values in the report.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref4770"></a>Examples</p>
<div id="OLADM2641" class="example">
<p class="titleinexample"><a id="i80909"></a>Example 10-73 Variable Permission</p>
<p>For a variable <code>sales</code> dimensioned by <code>month</code>, <code>product</code>, and <code>district</code>, you might have three dimensioned permission conditions in the form of three variables as illustrated in the following report.</p>
<pre>
MONTH.BOOL&lt;MONTH&gt;  PROD.BOOL&lt;PRODUCT&gt;  DISTRICT.BOOL&lt;DISTRICT&gt;
-----------------  ------------------  -----------------------
Jan95    NO        Tents     YES       Boston     NO
Feb95    YES       Canoes    YES       Atlanta    NO
Mar95    NO        Racquets   NO       Chicago    YES
...      ...       ...        ...      ...        ...
</pre>
<p>When the <code>YES</code> values shown in the preceding example are the only <code>YES</code> values in the permission conditions, the following PERMIT statement provides read/write access to <code>sales</code> data for tents and canoes sold in Chicago in Feb95. In the absence of a <code>PERMIT</code>&nbsp;<code>READ</code> statement for <code>sales</code>, Oracle OLAP provides read-only permission for all the other values of <code>sales</code>.</p>
<pre>
PERMIT WRITE WHEN district.bool BY prod.bool BY month.bool
</pre>
<p>You can restore full write permission with the following PERMIT statement.</p>
<pre>
PERMIT WRITE
</pre>
<p>When there is no restricted write permission for <code>sales</code>, the following PERMIT statement provides read/write access to sales data for tents and canoes sold in Chicago in Feb95, and it causes all other values of sales to be invisible.</p>
<pre>
PERMIT READ WHEN district.bool BY prod.bool BY month.bool
</pre></div>
<!-- class="example" -->
<div id="OLADM2642" class="example">
<p class="titleinexample"><a id="sthref4771"></a>Example 10-74 Dimensioned Permission Condition</p>
<p>To restrict access to the <code>product</code> dimension you need a permission condition dimensioned by <code>product</code>. However, when the permission condition has a second dimension, say <code>authority</code>, PERMIT selects the BOOLEAN values that pertain to <code>product</code> based on the first value in status of <code>authority</code>. When you restrict read permission on the <code>authority</code> dimension to one value, PERMIT uses that value to determine the BOOLEAN values of the permission condition for <code>product</code>. The REPORT commands produce the output that follows them.</p>
<pre>
DEFINE authority DIMENSION TEXT
MAINTAIN authority ADD OTHER DBA
DEFINE prod_authority VARIABLE BOOLEAN &lt;product authority&gt;
...
" Assign values to the variable
...
REPORT prod_authority
 
              -----------------PROD_AUTHORITY------------------
              --------------------PRODUCT----------------------
AUTHORITY     Tents   Canoes   Racquets   Sportswear   Footwear
---------     -----   ------   --------   ----------   --------
Other            NO       NO        YES          YES        YES
Dba             YES      YES        YES          YES        YES

CONSIDER product
PERMIT READ WHEN prod_authority
PERMITERROR = NO
RPEPORT product
 
PRODUCT
-------------
Racquets
Sportswear
Footwear

CONSIDER authority
PERMIT READ WHEN AUTHORITY EQ 'dba'
PERMITRESET
Report product
 
PRODUCT
-------------
Tents
Canoes
Racquets
Sportswear
Footwear
</pre></div>
<!-- class="example" -->
<div id="OLADM2643" class="example">
<p class="titleinexample"><a id="i80934"></a>Example 10-75 User-Defined Boolean Function</p>
<p>In the following example, <code>usercheck</code> is a user-defined Boolean function that checks the current value of the variable <code>thisuser</code> against a list of user IDs. <code>usercheck</code> returns <code>NO</code> when the current value of <code>thisuser</code> is not in the list. The following PERMIT statement applied to the <code>sales</code> variable provides read-only access to all values of <code>sales</code> when <code>usercheck</code> returns <code>NO</code>. It provides read/write access to all values of <code>sales</code> when <code>usercheck</code> returns <code>YES</code>.</p>
<pre>
PERMIT WRITE WHEN usercheck(thisuser)
</pre>
<p>The following PERMIT statement, applied to the variable <code>price</code>, provides full access to all values of <code>price</code> when <code>usercheck</code> returns <code>YES</code>. When it returns <code>NO</code>, it denies all access to the <code>price</code> variable.</p>
<pre>
PERMIT READ WHEN usercheck(thisuser)
</pre></div>
<!-- class="example" -->
<div id="OLADM2644" class="example">
<p class="titleinexample"><a id="sthref4772"></a>Example 10-76 Individual Cells</p>
<p>When you want to prevent access to one particular sales figure, say for racquets in Boston in March of 1997, you can create a Boolean variable and use it in a PERMIT statement as illustrated in the following statements.</p>
<pre>
DEFINE sales.bool VARIABLE BOOLEAN &lt;month product district&gt;
sales.bool = yes
LIMIT month TO 'Mar97'
LIMIT product TO 'Racquets'
LIMIT district TO 'Boston'
sales.bool = no
CONSIDER sales
PERMIT READ WHEN sales.bool
</pre></div>
<!-- class="example" -->
<div id="OLADM2645" class="example">
<p class="titleinexample"><a id="sthref4773"></a>Example 10-77 Individual Dimension Values</p>
<p>The following PERMIT commands applied to the <code>district</code> dimension prevent access to all dimension values except <code>Boston</code> and <code>Atlanta</code>. They provide read/write access for all data related to <code>Boston</code> and read-only access for all data related to <code>Atlanta</code>. They also prevent anyone with a user ID not allowed by the function <code>usercheck</code> (see <a href="#i80934">Example 10-75, "User-Defined Boolean Function"</a>) from modifying the permission for <code>district</code>.</p>
<pre>
PERMIT READ WHEN district EQ 'Boston' OR district EQ 'Atlanta'
PERMIT WRITE WHEN district EQ 'Boston'
PERMIT PERMIT WHEN usercheck(thisuser) 
</pre></div>
<!-- class="example" --></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment3088">
<tr>
<td class="cellalignment3095">
<table class="cellalignment3093">
<tr>
<td class="cellalignment3092"><a href="dml_commands_2025.htm"><img width="24" height="24" src="../../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment3092"><a href="dml_commands_2027.htm"><img width="24" height="24" src="../../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;1994, 2013,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment3097">
<table class="cellalignment3091">
<tr>
<td class="cellalignment3092"><a href="../../index.htm"><img width="24" height="24" src="../../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment3092"><a href="../../nav/portal_booklist.htm"><img width="24" height="24" src="../../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment3092"><a href="toc.htm"><img width="24" height="24" src="../../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment3092"><a href="index.htm"><img width="24" height="24" src="../../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment3092"><a href="../../nav/mindx.htm"><img width="24" height="24" src="../../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment3092"><a href="../../dcommon/html/feedback.htm"><img width="24" height="24" src="../../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>
</body>
</html>
