<!DOCTYPE html>
<html lang="en" >
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1">
<meta charset="utf-8">
<title>OBJ</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Version 5.1.2 Build 742" />
<meta name="dcterms.created" content="2013-11-14T21:21:27Z" />
<meta name="robots" content="all" />
<meta name="dcterms.title" content="OLAP DML Reference" />
<meta name="dcterms.identifier" content="E17122-08" />
<meta name="dcterms.isVersionOf" content="OLADM" />
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;1994, 2013,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved." />
<link rel="Start" href="../../index.htm" title="Home" type="text/html" />
<link rel="Copyright" href="../../dcommon/html/cpyr.htm" title="Copyright" type="text/html" />

<script type="application/javascript"  src="../../dcommon/js/headfoot.js"></script>
<script type="application/javascript"  src="../../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html" />
<link rel="Index" href="index.htm" title="Index" type="text/html" />
<link rel="Prev" href="dml_functions_2052.htm" title="Previous" type="text/html" />
<link rel="Next" href="dml_functions_2054.htm" title="Next" type="text/html" />
<link rel="alternate" href="../e17122.pdf" title="PDF version" type="application/pdf" />
<link rel="schema.dcterms" href="http://purl.org/dc/terms/" />
<link rel="stylesheet" href="../../dcommon/css/fusiondoc.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/header.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/footer.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/fonts.css">
<link rel="stylesheet" href="../../dcommon/css/foundation.css">
<link rel="stylesheet" href="../../dcommon/css/codemirror.css">
<link rel="stylesheet" type="text/css" title="Default" href="../../nav/css/html5.css">
<link rel="stylesheet" href="../../dcommon/css/respond-480-tablet.css">
<link rel="stylesheet" href="../../dcommon/css/respond-768-laptop.css">
<link rel="stylesheet" href="../../dcommon/css/respond-1140-deskop.css">
<script type="application/javascript" src="../../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">311/593</span> <!-- End Header --><a id="g1054016"></a>
<hr />
<div id="OLADM626" class="refsect1">
<h1 class="refsect1">OBJ</h1>
<p><a id="sthref2649"></a><a id="sthref2650"></a><a id="sthref2651"></a><a id="sthref2652"></a>The OBJ function returns information about an analytic workspace object.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2653"></a>Return Value</p>
<p>The return value depends on the value specified for <span class="italic">choice</span>. Also, when <span class="italic">choice</span> is applicable to only a specific type of object, and you specify a different type of object for <span class="italic">object-name</span>, then OBJ returns <code>NA</code> unless otherwise noted.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2654"></a>Syntax</p>
<p class="synopsis">OBJ(<span class="italic">choice&nbsp;</span>[<span class="italic">object-name</span>])</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref2655"></a>Parameters</p>
<dl>
<dt><span class="italic">object-name</span></dt>
<dd>
<p>A <code>TEXT</code> expression that is the name of the object that you want to retrieve information about.</p>
</dd>
<dt><span class="italic">choice</span></dt>
<dd>
<p>A keyword or keyword phrase which indicates the type of information you want. See <a href="#BAJICHIF">Table 8-2, "Keywords for the choice argument of the OBJ Function"</a> for the syntax, data type of the returned value and description of valid keywords.</p>
<div id="OLADM1805" class="tblformalwidemax">
<p class="titleintable"><a id="sthref2656"></a><a id="BAJICHIF"></a>Table 8-2 Keywords for the choice argument of the OBJ Function</p>
<table class="cellalignment3100" title="Keywords for the choice argument of the OBJ Function" summary="This table lists and describes the keywords that you can specify for the OBJ function." dir="ltr">
<thead>
<tr class="cellalignment3089">
<th class="cellalignment3099" id="r1c1-t34">Keyword for choice</th>
<th class="cellalignment3099" id="r1c2-t34">Data Type</th>
<th class="cellalignment3099" id="r1c3-t34">Description of Returned Value</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3089">
<td class="cellalignment3095" id="r2c1-t34" headers="r1c1-t34">
<p>ACQUIRED</p>
</td>
<td class="cellalignment3095" headers="r2c1-t34 r1c2-t34">
<p>BOOLEAN</p>
</td>
<td class="cellalignment3095" headers="r2c1-t34 r1c3-t34">
<p>Whether the specified object has been acquired for modification in multiwriter mode. For a partitioned variable, returns YES only when all of the partitions of that variable have been acquire.</p>
</td>
</tr>
<tr class="cellalignment3089">
<td class="cellalignment3095" id="r3c1-t34" headers="r1c1-t34">
<p>ACQUIREDPARTITIONS</p>
</td>
<td class="cellalignment3095" headers="r3c1-t34 r1c2-t34">
<p>TEXT (multiline)</p>
</td>
<td class="cellalignment3095" headers="r3c1-t34 r1c3-t34">
<p>The names of the partitions of the variable specified by <span class="italic">object-name</span> that are acquired for modification in multiwriter mode.</p>
</td>
</tr>
<tr class="cellalignment3089">
<td class="cellalignment3095" id="r4c1-t34" headers="r1c1-t34">
<p>AGGMAP</p>
</td>
<td class="cellalignment3095" headers="r4c1-t34 r1c2-t34">
<p>TEXT (multiline)</p>
</td>
<td class="cellalignment3095" headers="r4c1-t34 r1c3-t34">
<p>The specification of the specified aggmap.</p>
</td>
</tr>
<tr class="cellalignment3089">
<td class="cellalignment3095" id="r5c1-t34" headers="r1c1-t34">
<p>AGGMAPLIST</p>
</td>
<td class="cellalignment3095" headers="r5c1-t34 r1c2-t34">
<p>TEXT (multiline)</p>
</td>
<td class="cellalignment3095" headers="r5c1-t34 r1c3-t34">
<p>The names of the aggmap objects in the specified <a id="sthref2657"></a><a id="sthref2658"></a>formula.</p>
</td>
</tr>
<tr class="cellalignment3089">
<td class="cellalignment3095" id="r6c1-t34" headers="r1c1-t34">
<p>ALIASLIST</p>
</td>
<td class="cellalignment3095" headers="r6c1-t34 r1c2-t34">
<p>TEXT (multiline)</p>
</td>
<td class="cellalignment3095" headers="r6c1-t34 r1c3-t34">
<p>The names of the alias dimensions for the <a id="sthref2659"></a>specified dimension.</p>
</td>
</tr>
<tr class="cellalignment3089">
<td class="cellalignment3095" id="r7c1-t34" headers="r1c1-t34">
<p>ALIASOF</p>
</td>
<td class="cellalignment3095" headers="r7c1-t34 r1c2-t34">
<p>TEXT</p>
</td>
<td class="cellalignment3095" headers="r7c1-t34 r1c3-t34">
<p>The name of the base dimension for the specified alias dimension.<a id="sthref2660"></a></p>
</td>
</tr>
<tr class="cellalignment3089">
<td class="cellalignment3095" id="r8c1-t34" headers="r1c1-t34">
<p>AW</p>
</td>
<td class="cellalignment3095" headers="r8c1-t34 r1c2-t34">
<p>TEXT</p>
</td>
<td class="cellalignment3095" headers="r8c1-t34 r1c3-t34">
<p>The name of an attached workspace that contains the specified object. When the specified object is in only one attached workspace, AW returns the name of the workspace. When the specified object is in multiple attached workspaces, AW still returns only one workspace name. You must use the AWLIST keyword to get all the relevant workspace names. When the object is not in any attached workspace, AW returns <code>NA</code>.</p>
</td>
</tr>
<tr class="cellalignment3089">
<td class="cellalignment3095" id="r9c1-t34" headers="r1c1-t34">
<p>AWLIST</p>
</td>
<td class="cellalignment3095" headers="r9c1-t34 r1c2-t34">
<p>TEXT (multiline)</p>
</td>
<td class="cellalignment3095" headers="r9c1-t34 r1c3-t34">
<p>The names of the attached workspaces <a id="sthref2661"></a>that contain an object with the specified name. When you specify a qualified object name for the object, AWLIST returns only the relevant workspace name. When no workspace contains the specified object, AWLIST returns <code>NA</code>.</p>
</td>
</tr>
<tr class="cellalignment3089">
<td class="cellalignment3095" id="r10c1-t34" headers="r1c1-t34">
<p>BTREE</p>
</td>
<td class="cellalignment3095" headers="r10c1-t34 r1c2-t34">
<p>BOOLEAN</p>
</td>
<td class="cellalignment3095" headers="r10c1-t34 r1c3-t34">
<p>Whether a BTREE index was defined for the specified conjoint dimension or composite.</p>
</td>
</tr>
<tr class="cellalignment3089">
<td class="cellalignment3095" id="r11c1-t34" headers="r1c1-t34">
<p>CACHEEMPTY</p>
</td>
<td class="cellalignment3095" headers="r11c1-t34 r1c2-t34">
<p>BOOLEAN</p>
</td>
<td class="cellalignment3095" headers="r11c1-t34 r1c3-t34">
<p>Whether a session cache <a id="sthref2662"></a>has been emptied of data for the specified variable. A cache can be emptied by using a CLEAR statement with the CACHE keyword. When <span class="italic">object-name</span> is not a variable or when it has no session cache, then CACHEEMPTY returns <code>NA</code>. (For more information on the session cache, see <a href="dml_options089.htm#i1011029">"What is an Oracle OLAP Session Cache?"</a>.)</p>
</td>
</tr>
<tr class="cellalignment3089">
<td class="cellalignment3095" id="r12c1-t34" headers="r1c1-t34">
<p>CACHECOUNT</p>
</td>
<td class="cellalignment3095" headers="r12c1-t34 r1c2-t34">
<p>LONG INTEGER</p>
</td>
<td class="cellalignment3095" headers="r12c1-t34 r1c3-t34">
<p>The number of non-<code>NA</code> cells in the session cache <a id="sthref2663"></a>for the specified variable. When <span class="italic">object-name</span> is not a variable or when it does not have a no session cache, then CACHECOUNT returns <code>NA</code>. (For more information on the session cache, see <a href="dml_options089.htm#i1011029">"What is an Oracle OLAP Session Cache?"</a>.).)</p>
</td>
</tr>
<tr class="cellalignment3089">
<td class="cellalignment3095" id="r13c1-t34" headers="r1c1-t34">
<p>CHANGED</p>
</td>
<td class="cellalignment3095" headers="r13c1-t34 r1c2-t34">
<p>BOOLEAN</p>
</td>
<td class="cellalignment3095" headers="r13c1-t34 r1c3-t34">
<p>Whether the specified variable, relation, dimension, or valueset <a id="sthref2664"></a>has been modified since the last UPDATE.</p>
</td>
</tr>
<tr class="cellalignment3089">
<td class="cellalignment3095" id="r14c1-t34" headers="r1c1-t34">
<p>CLASS</p>
</td>
<td class="cellalignment3095" headers="r14c1-t34 r1c2-t34">
<p>TEXT</p>
</td>
<td class="cellalignment3095" headers="r14c1-t34 r1c3-t34">
<p>The storage class of the specified <a id="sthref2665"></a>object. Possible return values are:</p>
<ul>
<li>
<p>TEMPORARY &mdash; An object whose values are not saved in the workspace; applicable to valuesets, variables, relations, and worksheets.</p>
</li>
<li>
<p>An empty string &mdash; A permanent object whose values, when modified, are stored in a new place in the workspace until you update and are then included in the update; applicable to all object types.</p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment3089">
<td class="cellalignment3095" id="r15c1-t34" headers="r1c1-t34">
<p>DATA</p>
</td>
<td class="cellalignment3095" headers="r15c1-t34 r1c2-t34">
<p>TEXT</p>
</td>
<td class="cellalignment3095" headers="r15c1-t34 r1c3-t34">
<p>The data type of the specified object. <a id="sthref2666"></a></p>
<ul>
<li>
<p>For dimensions, variables, and formulas, possible return values are <code>INTEGER</code>, <code>SHORTINTEGER</code>, <code>LONGINTEGER</code>, <code>DECIMAL</code>, <code>NUMBER</code>, <code>SHORT</code> (for SHORTDECIMAL), <code>BOOLEAN</code>, <code>ID</code>, <code>TEXT</code>, <code>NTEXT</code>, <code>DATE</code> or <code>DATETIME</code>.</p>
</li>
<li>
<p>For a relation, it returns the name of the related dimension.</p>
</li>
<li>
<p>For a concat dimension, conjoint dimension, composite, or partition template, it returns the names of the base dimensions of an object as a multiline text value.</p>
</li>
<li>
<p>For a program defined with a data type, it returns the name of the data type. For a program defined to return a value of a dimension, returns the name of the dimension.</p>
</li>
<li>
<p>For a valueset, it returns the name of the dimension for which the valueset was defined.</p>
</li>
<li>
<p>For other types of objects, it returns <code>NA</code>.</p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment3089">
<td class="cellalignment3095" id="r16c1-t34" headers="r1c1-t34">
<p>DEFINE</p>
</td>
<td class="cellalignment3095" headers="r16c1-t34 r1c2-t34">
<p>TEXT (multiline)</p>
</td>
<td class="cellalignment3095" headers="r16c1-t34 r1c3-t34">
<p>The description of the specified object. <a id="sthref2667"></a>The value is the same value that DESCRIBE would display for the object minus the words DEFINE and the name of the object.</p>
</td>
</tr>
<tr class="cellalignment3089">
<td class="cellalignment3095" id="r17c1-t34" headers="r1c1-t34">
<p>DFNCHANGED</p>
</td>
<td class="cellalignment3095" headers="r17c1-t34 r1c2-t34">
<p>BOOLEAN</p>
</td>
<td class="cellalignment3095" headers="r17c1-t34 r1c3-t34">
<p>Whether the definition of the specified object has changed since the last UPDATE.</p>
</td>
</tr>
<tr class="cellalignment3089">
<td class="cellalignment3095" id="r18c1-t34" headers="r1c1-t34">
<p>DFNDIMS</p>
</td>
<td class="cellalignment3095" headers="r18c1-t34 r1c2-t34">
<p>TEXT (multiline)</p>
</td>
<td class="cellalignment3095" headers="r18c1-t34 r1c3-t34">
<p>The names of the dimensions and composites <a id="sthref2668"></a>in the dimension list that is used to define the specified object. Note that:</p>
<ul>
<li>
<p>For an unnamed composite, it returns the form used in the object definition: <code>SPARSE&lt;dim1 dim2 ...&gt;</code>.</p>
</li>
<li>
<p>For a dimension surrogate, it returns the name of the dimension for which the surrogate was defined.</p>
</li>
<li>
<p>When no dimension list was used when the specified object was defined, it returns <code>NA</code>.</p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment3089">
<td class="cellalignment3095" id="r19c1-t34" headers="r1c1-t34">
<p>DIMMAX</p>
</td>
<td class="cellalignment3095" headers="r19c1-t34 r1c2-t34">
<p>INTEGER</p>
</td>
<td class="cellalignment3095" headers="r19c1-t34 r1c3-t34">
<p>The number of values in the<a id="sthref2669"></a> specified dimension. For other object types, it returns <code>0</code> (zero).</p>
<p>Note: When you use the DIMMAX choice with a dimension that has a read permission that restricts access to the dimension values, the result returned depends on whether the dimension has previously been loaded. Permissions are evaluated when an object is loaded. Generally, the first time you refer to an object in your session, Oracle OLAP loads the object and evaluates its permissions. However, the OBJ function does not load objects, because it is just providing information about them. When you use DIMMAX with a dimension that has not yet been loaded, the result reflects the entire number of values in the dimension, regardless of whether the dimension has read permissions. When a dimension with permissions has been loaded, then the DIMMAX choice reflects the permitted size. To ensure that the DIMMAX choice returns the permitted size, you can execute a LOAD statement before using the OBJ function.</p>
</td>
</tr>
<tr class="cellalignment3089">
<td class="cellalignment3095" id="r20c1-t34" headers="r1c1-t34">
<p>DIMS</p>
</td>
<td class="cellalignment3095" headers="r20c1-t34 r1c2-t34">
<p>TEXT (multiline)</p>
</td>
<td class="cellalignment3095" headers="r20c1-t34 r1c3-t34">
<p>The names of the dimensions of the<a id="sthref2670"></a><a id="sthref2671"></a> specified object. Specifically:</p>
<ul>
<li>
<p>For dimensions, simple, concat, or conjoint, it returns the name of the dimension itself. To find out the base dimensions of a concat or conjoint dimension, use the DATA keyword.</p>
</li>
<li>
<p>For composites, it returns the base dimensions of the composite.</p>
</li>
<li>
<p>For a dimension surrogate, it returns the name of the dimension for which the surrogate was defined.</p>
</li>
<li>
<p>For dimensioned objects, it returns the names of the dimensions of the object.</p>
</li>
<li>
<p>When an object has no dimensions, it returns <code>NA</code>.</p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment3089">
<td class="cellalignment3095" id="r21c1-t34" headers="r1c1-t34">
<p>DIMTYPE</p>
</td>
<td class="cellalignment3095" headers="r21c1-t34 r1c2-t34">
<p>TEXT</p>
</td>
<td class="cellalignment3095" headers="r21c1-t34 r1c3-t34">
<p>The type of the specified<a id="sthref2672"></a> dimension. Specifically:</p>
<ul>
<li>
<p>For a concat dimension, it returns <code>CONCAT</code>.</p>
</li>
<li>
<p>For a conjoint dimension, it returns <code>CONJOINT</code>.</p>
</li>
<li>
<p>For a composite, it returns <code>COMPOSITE</code>.</p>
</li>
<li>
<p>For a simple dimension, it returns the data type of the dimension.</p>
</li>
<li>
<p>For a partition template object, it returns <code>PARTITION TEMPLATE</code>.</p>
</li>
<li>
<p>For all other objects, it returns <code>NA</code>.</p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment3089">
<td class="cellalignment3095" id="r22c1-t34" headers="r1c1-t34">
<p>DISKSIZE</p>
</td>
<td class="cellalignment3095" headers="r22c1-t34 r1c2-t34">
<p>INTEGER</p>
</td>
<td class="cellalignment3095" headers="r22c1-t34 r1c3-t34">
<p>The total number of pages used to store the specified <a id="sthref2673"></a>object.</p>
<p>Note: For a temporary object, OBJ(DISKSIZE) returns a value of 0 (zero), because the values of a temporary object are stored in temporary storage and not in the database file.</p>
</td>
</tr>
<tr class="cellalignment3089">
<td class="cellalignment3095" id="r23c1-t34" headers="r1c1-t34">
<p>FORMULA</p>
</td>
<td class="cellalignment3095" headers="r23c1-t34 r1c2-t34">
<p>TEXT</p>
</td>
<td class="cellalignment3095" headers="r23c1-t34 r1c3-t34">
<p>The expression in the definition of the specified formula<a id="sthref2674"></a>.</p>
</td>
</tr>
<tr class="cellalignment3089">
<td class="cellalignment3095" id="r24c1-t34" headers="r1c1-t34">
<p>HASAGGCOUNT</p>
</td>
<td class="cellalignment3095" headers="r24c1-t34 r1c2-t34">
<p>BOOLEAN</p>
</td>
<td class="cellalignment3095" headers="r24c1-t34 r1c3-t34">
<p>Whether an Aggcount object is associated with the specified variable<a id="sthref2675"></a><a id="sthref2676"></a>. (For more information on Aggcount variables, see <a href="dml_commands_1032.htm#CIHFEAGE">"Aggcount Variables"</a>.)</p>
</td>
</tr>
<tr class="cellalignment3089">
<td class="cellalignment3095" id="r25c1-t34" headers="r1c1-t34">
<p>HASCACHE</p>
</td>
<td class="cellalignment3095" headers="r25c1-t34 r1c2-t34">
<p>BOOLEAN</p>
</td>
<td class="cellalignment3095" headers="r25c1-t34 r1c3-t34">
<p>Whether a session cache that is local to the session has been established to store data for the specified variable<a id="sthref2677"></a><a id="sthref2678"></a>. (For more information on the session cache, see <a href="dml_options089.htm#i1011029">"What is an Oracle OLAP Session Cache?"</a>.)</p>
</td>
</tr>
<tr class="cellalignment3089">
<td class="cellalignment3095" id="r26c1-t34" headers="r1c1-t34">
<p>HASH</p>
</td>
<td class="cellalignment3095" headers="r26c1-t34 r1c2-t34">
<p>BOOLEAN</p>
</td>
<td class="cellalignment3095" headers="r26c1-t34 r1c3-t34">
<p>Whether a HASH index was defined for the specified conjoint dimension<a id="sthref2679"></a><a id="sthref2680"></a> or composite.</p>
</td>
</tr>
<tr class="cellalignment3089">
<td class="cellalignment3095" id="r27c1-t34" headers="r1c1-t34">
<p>HASHSIZE</p>
</td>
<td class="cellalignment3095" headers="r27c1-t34 r1c2-t34">
<p>INTEGER</p>
</td>
<td class="cellalignment3095" headers="r27c1-t34 r1c3-t34">
<p>The number of pages allocated for the specified hashed dimension's TBLSPACE (that is, the page space containing the anchors for the hash table's K/V node lists). Note that this does <span class="italic">not</span> include the number of pages used for the actual Key/Value nodes, which are allocated from the RANSPACE's page space (KVPAGES).</p>
</td>
</tr>
<tr class="cellalignment3089">
<td class="cellalignment3095" id="r28c1-t34" headers="r1c1-t34">
<p>HASPROPERTY <span class="italic">prop-name</span></p>
</td>
<td class="cellalignment3095" headers="r28c1-t34 r1c2-t34">
<p>BOOLEAN</p>
</td>
<td class="cellalignment3095" headers="r28c1-t34 r1c3-t34">
<p>Whether the property specified by <span class="italic">prop-name</span> exists for the specified object. (Abbreviated HASPRP)</p>
</td>
</tr>
<tr class="cellalignment3089">
<td class="cellalignment3095" id="r29c1-t34" headers="r1c1-t34">
<p>HIDDEN</p>
</td>
<td class="cellalignment3095" headers="r29c1-t34 r1c2-t34">
<p>BOOLEAN</p>
</td>
<td class="cellalignment3095" headers="r29c1-t34 r1c3-t34">
<p>Whether the text of the specified program or model has been hidden. (For more information on hiding programs and models, see the <a href="dml_commands_2002.htm#i78886">HIDE</a> and <a href="dml_commands_2068.htm#BABEJDHB">UNHIDE</a> commands.)</p>
</td>
</tr>
<tr class="cellalignment3089">
<td class="cellalignment3095" id="r30c1-t34" headers="r1c1-t34">
<p>INDEXSIZE</p>
</td>
<td class="cellalignment3095" headers="r30c1-t34 r1c2-t34">
<p>INTEGER</p>
</td>
<td class="cellalignment3095" headers="r30c1-t34 r1c3-t34">
<p>The total size of all inversions associated with the specified relation or conjoint dimension.</p>
</td>
</tr>
<tr class="cellalignment3089">
<td class="cellalignment3095" id="r31c1-t34" headers="r1c1-t34">
<p>INORDER</p>
</td>
<td class="cellalignment3095" headers="r31c1-t34 r1c2-t34">
<p>BOOLEAN</p>
</td>
<td class="cellalignment3095" headers="r31c1-t34 r1c3-t34">
<p>Whether the logical order of the values of the underlying dimensions of the specified object matches the physical order in the analytic workspace. INORDER returns <code>TRUE</code> when the logical order of the values of the dimension has <span class="italic">not</span> been specified using MAINTAIN with the keywords ADD FIRST, ADD AFTER, ADD BEFORE, or MOVE.</p>
</td>
</tr>
<tr class="cellalignment3089">
<td class="cellalignment3095" id="r32c1-t34" headers="r1c1-t34">
<p>ISBY [RECURSIVE] <span class="italic">dimname</span></p>
</td>
<td class="cellalignment3095" headers="r32c1-t34 r1c2-t34">
<p>BOOLEAN</p>
</td>
<td class="cellalignment3095" headers="r32c1-t34 r1c3-t34">
<p>When you supply <span class="italic">object-name</span>, whether the specified object is dimensioned by, related to, or a surrogate for the specified dimension (<span class="italic">dimname</span>). When you supply only <span class="italic">dimname</span>, whether an object is dimensioned by the dimension you specify in <span class="italic">dimname</span>; or when the object is an aggmap, whether the specified dimension is a dimension of any relations or models in the aggmap.</p>
<ul>
<li>
<p>RECURSIVE specifies that Oracle OLAP should search for <span class="italic">dimname</span> in the base dimensions of the specified object, at any level. the. See <a href="#i1024578">Example 8-49, "OBJ With ISBY"</a> .</p>
</li>
<li>
<p><span class="italic">dimname</span> is a text expression that is the name of a dimension. (Oracle OLAP automatically converts the name to uppercase.) When <span class="italic">dimname</span> is a composite, the value returned by ISBY indicates if an object was defined with the composite.</p>
</li>
</ul>
<p>Specify a value for <span class="italic">object-name</span> when the object is a dimension surrogate, variable, relation, or valueset name to learn if that object is dimensioned by or related to or a surrogate for the specified dimension. You can omit <span class="italic">object-name</span> when you are looping through the list of workspace objects to obtain information about multiple objects, or when you are using OBJ to limit the NAME dimension.</p>
</td>
</tr>
<tr class="cellalignment3089">
<td class="cellalignment3095" id="r33c1-t34" headers="r1c1-t34">
<p>ISCOMPILED</p>
</td>
<td class="cellalignment3095" headers="r33c1-t34 r1c2-t34">
<p>BOOLEAN</p>
</td>
<td class="cellalignment3095" headers="r33c1-t34 r1c3-t34">
<p>Whether the compilation status of the specified compilable object (such as a program, model, or formula). The value returned depends on the type of object and on whether a compilation error was found in that object. For example:</p>
<ul>
<li>
<p>For programs, returns <code>YES</code> when the program has been processed by the compiler since the last time it was modified. A return value of <code>YES</code> does not necessarily indicate that all lines of the program are compiled. See the <a href="dml_commands_1024.htm#i79154">COMPILE</a> command for more information.</p>
</li>
<li>
<p>For formulas, returns <code>YES</code> only when the formula was compiled without finding a single error and when the formula can be saved. When the formula contains ampersand substitution, it cannot be saved. When the formula is empty, the ISCOMPILED choice returns <code>NO</code>.</p>
</li>
<li>
<p>For models, returns <code>YES</code> only when the model was compiled without a single error found or when the model is empty.</p>
</li>
<li>
<p>For programs, formulas, and models, returns <code>NO</code> when you delete an object that the program, formula, or model references.</p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment3089">
<td class="cellalignment3095" id="r34c1-t34" headers="r1c1-t34">
<p>ISCOMPRESSED</p>
</td>
<td class="cellalignment3095" headers="r34c1-t34 r1c2-t34">
<p>BOOLEAN</p>
</td>
<td class="cellalignment3095" headers="r34c1-t34 r1c3-t34">
<p>Whether the specified object is a compressed composite.</p>
</td>
</tr>
<tr class="cellalignment3089">
<td class="cellalignment3095" id="r35c1-t34" headers="r1c1-t34">
<p>ISLATEST</p>
</td>
<td class="cellalignment3095" headers="r35c1-t34 r1c2-t34">
<p>BOOLEAN</p>
</td>
<td class="cellalignment3095" headers="r35c1-t34 r1c3-t34">
<p>Whether the specified object is the latest version of the object. This syntax is the equivalent of <code>OBJ(VERSION)EQ OBJ(LATESTVER)</code>.</p>
</td>
</tr>
<tr class="cellalignment3089">
<td class="cellalignment3095" id="r36c1-t34" headers="r1c1-t34">
<p>ISSOLVED</p>
</td>
<td class="cellalignment3095" headers="r36c1-t34 r1c2-t34">
<p>BOOLEAN</p>
</td>
<td class="cellalignment3095" headers="r36c1-t34 r1c3-t34">
<p>When the specified object is a variable which is dimensioned by a compressed composite, whether the variable has been aggregated.</p>
</td>
</tr>
<tr class="cellalignment3089">
<td class="cellalignment3095" id="r37c1-t34" headers="r1c1-t34">
<p>KVSIZE</p>
</td>
<td class="cellalignment3095" headers="r37c1-t34 r1c2-t34">
<p>INTEGER</p>
</td>
<td class="cellalignment3095" headers="r37c1-t34 r1c3-t34">
<p>The number of pages currently allocated to hash and BTREE indexes.</p>
</td>
</tr>
<tr class="cellalignment3089">
<td class="cellalignment3095" id="r38c1-t34" headers="r1c1-t34">
<p>LATESTVER</p>
</td>
<td class="cellalignment3095" headers="r38c1-t34 r1c2-t34">
<p>INTEGER</p>
</td>
<td class="cellalignment3095" headers="r38c1-t34 r1c3-t34">
<p>The current state of the specified object, referring to the most recently committed version of the object. The returned value is either equal to or greater than the value returned by <code>OBJ(VERSION)</code>. When the value returned by LATESTVER is greater than that returned by <code>OBJ(VERSION)</code>, then another user has updated this object since the analytic workspace was attached in read-only or read/write mode, or, if the analytic workspace was attached in multiwriter mode, since the last synchronization.</p>
</td>
</tr>
<tr class="cellalignment3089">
<td class="cellalignment3095" id="r39c1-t34" headers="r1c1-t34">
<p>LD</p>
</td>
<td class="cellalignment3095" headers="r39c1-t34 r1c2-t34">
<p>TEXT (multiline)</p>
</td>
<td class="cellalignment3095" headers="r39c1-t34 r1c3-t34">
<p>The LD (long description) of the specified object.</p>
</td>
</tr>
<tr class="cellalignment3089">
<td class="cellalignment3095" id="r40c1-t34" headers="r1c1-t34">
<p>MODEL</p>
</td>
<td class="cellalignment3095" headers="r40c1-t34 r1c2-t34">
<p>TEXT (multiline)</p>
</td>
<td class="cellalignment3095" headers="r40c1-t34 r1c3-t34">
<p>The specification of the specified model.</p>
</td>
</tr>
<tr class="cellalignment3089">
<td class="cellalignment3095" id="r41c1-t34" headers="r1c1-t34">
<p>NACACHECOUNT</p>
</td>
<td class="cellalignment3095" headers="r41c1-t34 r1c2-t34">
<p>INTEGER</p>
</td>
<td class="cellalignment3095" headers="r41c1-t34 r1c3-t34">
<p>The total number of <code>NA</code> cached cells.</p>
</td>
</tr>
<tr class="cellalignment3089">
<td class="cellalignment3095" id="r42c1-t34" headers="r1c1-t34">
<p>NACACHEEMPTY</p>
</td>
<td class="cellalignment3095" headers="r42c1-t34 r1c2-t34">
<p>BOOLEAN</p>
</td>
<td class="cellalignment3095" headers="r42c1-t34 r1c3-t34">
<p>Whether the <code>NA</code> cache is empty.</p>
</td>
</tr>
<tr class="cellalignment3089">
<td class="cellalignment3095" id="r43c1-t34" headers="r1c1-t34">
<p>NAPAGES</p>
</td>
<td class="cellalignment3095" headers="r43c1-t34 r1c2-t34">
<p>INTEGER</p>
</td>
<td class="cellalignment3095" headers="r43c1-t34 r1c3-t34">
<p>The number of pages that contain only <code>NA</code> values and are <span class="italic">not</span> stored in the database.</p>
</td>
</tr>
<tr class="cellalignment3089">
<td class="cellalignment3095" id="r44c1-t34" headers="r1c1-t34">
<p>NOHASH</p>
</td>
<td class="cellalignment3095" headers="r44c1-t34 r1c2-t34">
<p>BOOLEAN</p>
</td>
<td class="cellalignment3095" headers="r44c1-t34 r1c3-t34">
<p>Whether the specified conjoint dimension uses the NOHASH index algorithm to load and access data.</p>
</td>
</tr>
<tr class="cellalignment3089">
<td class="cellalignment3095" id="r45c1-t34" headers="r1c1-t34">
<p>NUMCELLS</p>
</td>
<td class="cellalignment3095" headers="r45c1-t34 r1c2-t34">
<p>INTEGER</p>
</td>
<td class="cellalignment3095" headers="r45c1-t34 r1c3-t34">
<p>The total number of physical cells within the specified variable. Oracle OLAP determines this value by finding the Cartesian product of the <code>OBJ(DIMMAX)</code> values for the dimensions of the variable, taking composites into account.</p>
</td>
</tr>
<tr class="cellalignment3089">
<td class="cellalignment3095" id="r46c1-t34" headers="r1c1-t34">
<p>NUMDELS</p>
</td>
<td class="cellalignment3095" headers="r46c1-t34 r1c2-t34">
<p>DECIMAL</p>
</td>
<td class="cellalignment3095" headers="r46c1-t34 r1c3-t34">
<p>The number of deleted cells for the specified dimensioned object.</p>
</td>
</tr>
<tr class="cellalignment3089">
<td class="cellalignment3095" id="r47c1-t34" headers="r1c1-t34">
<p>NUMDFNDIMS</p>
</td>
<td class="cellalignment3095" headers="r47c1-t34 r1c2-t34">
<p>INTEGER</p>
</td>
<td class="cellalignment3095" headers="r47c1-t34 r1c3-t34">
<p>The number of dimensions or composites in the dimension list used to define the specified object. For this count, each composite counts as one, and the dimensions within the dimension list of the composite are not counted. An object defined with a dimension list could be a variable, relation, formula, valueset, concat or conjoint dimension, dimension surrogate, or composite. When no dimension list was used when defining the object (as for single-cell variables, programs, and so on.), it returns <code>0</code> (zero).</p>
</td>
</tr>
<tr class="cellalignment3089">
<td class="cellalignment3095" id="r48c1-t34" headers="r1c1-t34">
<p>NUMDIMS</p>
</td>
<td class="cellalignment3095" headers="r48c1-t34 r1c2-t34">
<p>INTEGER</p>
</td>
<td class="cellalignment3095" headers="r48c1-t34 r1c3-t34">
<p>The number of dimensions of the specified dimensioned object; or the number of base dimensions of the specified composite. When the specified object is a dimension is a dimension or dimension surrogate, it returns <code>1</code>, and for all other objects, it returns <code>0</code> (zero).</p>
</td>
</tr>
<tr class="cellalignment3089">
<td class="cellalignment3095" id="r49c1-t34" headers="r1c1-t34">
<p>NUMSEGS</p>
</td>
<td class="cellalignment3095" headers="r49c1-t34 r1c2-t34">
<p>INTEGER</p>
</td>
<td class="cellalignment3095" headers="r49c1-t34 r1c3-t34">
<p>The number of analytic workspace segments associated with the specified object when that object has multiple dimensions. (Note that Oracle OLAP uses segments internally to keep track of the physical storage of the object's values. Too many segments may slow the retrieval of information.)</p>
</td>
</tr>
<tr class="cellalignment3089">
<td class="cellalignment3095" id="r50c1-t34" headers="r1c1-t34">
<p>NUMVALS</p>
</td>
<td class="cellalignment3095" headers="r50c1-t34 r1c2-t34">
<p>INTEGER</p>
</td>
<td class="cellalignment3095" headers="r50c1-t34 r1c3-t34">
<p>The number of values or cells in the specified object. For a compressed composite or a variable dimensioned by a compressed composite, returns an <code>INTEGER</code> value that is the number of logical values in the object (that is, the value that would be returned if the composite was a b-tree composite).</p>
</td>
</tr>
<tr class="cellalignment3089">
<td class="cellalignment3095" id="r51c1-t34" headers="r1c1-t34">
<p>OWNSPACE</p>
</td>
<td class="cellalignment3095" headers="r51c1-t34 r1c2-t34">
<p>BOOLEAN</p>
</td>
<td class="cellalignment3095" headers="r51c1-t34 r1c3-t34">
<p>When the specified object is a conjoint dimension or a composite defined with a BTREE index algorithm, whether the object is using private page space to store BTREE nodes. When the specified object is a variable-width text dimension, a relation, or a variable-width text variable, whether the data for the object is stored in one or more private page spaces that are associated with that object.</p>
</td>
</tr>
<tr class="cellalignment3089">
<td class="cellalignment3095" id="r52c1-t34" headers="r1c1-t34">
<p>PARTBY</p>
</td>
<td class="cellalignment3095" headers="r52c1-t34 r1c2-t34">
<p>TEXT (multiline)</p>
</td>
<td class="cellalignment3095" headers="r52c1-t34 r1c3-t34">
<p>The names of the partition dimensions of the specified partitioned variable or <a id="sthref2681"></a><a id="sthref2682"></a>partition template object. The names are returned as a multiline text value (one line for each dimension).</p>
</td>
</tr>
<tr class="cellalignment3089">
<td class="cellalignment3095" id="r53c1-t34" headers="r1c1-t34">
<p>PARTDIMS <span class="italic">partitions</span></p>
</td>
<td class="cellalignment3095" headers="r53c1-t34 r1c2-t34">
<p>TEXT (multiline)</p>
</td>
<td class="cellalignment3095" headers="r53c1-t34 r1c3-t34">
<p>The names of the dimensions of the <span class="italic">partitions</span> of the specified partition template or a partitioned variable. The value is returned as a multiline text value (one line for each dimension).</p>
<p><span class="italic">partitions</span> is a multiline text value (one line for each partition name) that specifies which partitions you're asking about. When you specify a partition name that is not a valid partition in <span class="italic">partitions</span>, an error occurs.</p>
</td>
</tr>
<tr class="cellalignment3089">
<td class="cellalignment3095" id="r54c1-t34" headers="r1c1-t34">
<p>PARTITION <span class="italic">partitions</span></p>
</td>
<td class="cellalignment3095" headers="r54c1-t34 r1c2-t34">
<p>TEXT (multiline)</p>
</td>
<td class="cellalignment3095" headers="r54c1-t34 r1c3-t34">
<p>For a partitioned variable or a partition template object, a textual description of the <span class="italic">partitions</span> of the specified partition template or a partitioned variable. When called on a partition template, the returned description is similar to the DEFINE PARTITION TEMPLATE statement. When called on a partitioned variable, the returned description is similar to the DEFINE VARIABLE statement.</p>
<p><span class="italic">partitions</span> is a multiline text value (one line for each partition name) that specifies which partitions you're asking about.When you specify a partition name that is not a valid partition in <span class="italic">partitions</span>, an error occurs.</p>
</td>
</tr>
<tr class="cellalignment3089">
<td class="cellalignment3095" id="r55c1-t34" headers="r1c1-t34">
<p>PARTMETH</p>
</td>
<td class="cellalignment3095" headers="r55c1-t34 r1c2-t34">
<p>TEXT</p>
</td>
<td class="cellalignment3095" headers="r55c1-t34 r1c3-t34">
<p>The method (<code>RANGE</code> or <code>LIST</code>) by which the specified partition template<a id="sthref2683"></a><a id="sthref2684"></a><a id="sthref2685"></a> or a partitioned variable is partitioned.</p>
</td>
</tr>
<tr class="cellalignment3089">
<td class="cellalignment3095" id="r56c1-t34" headers="r1c1-t34">
<p>PARTNAMES</p>
</td>
<td class="cellalignment3095" headers="r56c1-t34 r1c2-t34">
<p>TEXT (multiline)</p>
</td>
<td class="cellalignment3095" headers="r56c1-t34 r1c3-t34">
<p>A multiline <code>TEXT</code> value containing the names of all the defined partitions of the specified partition temp<a id="sthref2686"></a><a id="sthref2687"></a>late. When <span class="italic">name</span> is the name of a partitioned variable, returns a multiline TEXT value containing the names of all the partitions of the variable.</p>
<p>Note: Not all of the partitions defined by a partition template necessarily exist in each partitioned variable. Calling <code>OBJ(PARTNAMES)</code>on a partitioned variable returns only those partitions that actually exist within the variable.</p>
</td>
</tr>
<tr class="cellalignment3089">
<td class="cellalignment3095" id="r57c1-t34" headers="r1c1-t34">
<p>PARTRANGE <span class="italic">partitions</span></p>
</td>
<td class="cellalignment3095" headers="r57c1-t34 r1c2-t34">
<p>TEXT (multiline)</p>
</td>
<td class="cellalignment3095" headers="r57c1-t34 r1c3-t34">
<p>The<a id="sthref2688"></a><a id="sthref2689"></a> values of the <code>LESS THAN</code> clause for each of the <span class="italic">partitions</span> for the specified RANGE partition template or RANGE partitioned variable.</p>
<p><span class="italic">partitions</span> is a multiline text value (one line for each partition name) that specifies which partitions you're asking about. When you specify a partition name that is not a valid partition in <span class="italic">partitions</span>, an error occurs.</p>
</td>
</tr>
<tr class="cellalignment3089">
<td class="cellalignment3095" id="r58c1-t34" headers="r1c1-t34">
<p>PERIOD</p>
</td>
<td class="cellalignment3095" headers="r58c1-t34 r1c2-t34">
<p>TEXT</p>
</td>
<td class="cellalignment3095" headers="r58c1-t34 r1c3-t34">
<p>When the specified object is a dimension of type DAY, WEEK, MONTH, QUARTER, or YEAR, the type of the dimension plus an indication of multiple periods or phasing, if any.</p>
</td>
</tr>
<tr class="cellalignment3089">
<td class="cellalignment3095" id="r59c1-t34" headers="r1c1-t34">
<p>PHYSMAX</p>
</td>
<td class="cellalignment3095" headers="r59c1-t34 r1c2-t34">
<p>INTEGER</p>
</td>
<td class="cellalignment3095" headers="r59c1-t34 r1c3-t34">
<p>The maximum physical value for positions within the specified dimension or composite.</p>
</td>
</tr>
<tr class="cellalignment3089">
<td class="cellalignment3095" id="r60c1-t34" headers="r1c1-t34">
<p>PMTMAINTAIN</p>
</td>
<td class="cellalignment3095" headers="r60c1-t34 r1c2-t34">
<p>TEXT</p>
</td>
<td class="cellalignment3095" headers="r60c1-t34 r1c3-t34">
<p>The permission condition for the maintain permission associated with the specified dimension. When there is no maintain permission for the dimension, it returns <code>NA</code>.</p>
</td>
</tr>
<tr class="cellalignment3089">
<td class="cellalignment3095" id="r61c1-t34" headers="r1c1-t34">
<p>PMTPERMIT</p>
</td>
<td class="cellalignment3095" headers="r61c1-t34 r1c2-t34">
<p>TEXT</p>
</td>
<td class="cellalignment3095" headers="r61c1-t34 r1c3-t34">
<p>The permission condition for the permit permission associated with the specified object. When there is no permit permission for the object, it returns <code>NA</code>.</p>
</td>
</tr>
<tr class="cellalignment3089">
<td class="cellalignment3095" id="r62c1-t34" headers="r1c1-t34">
<p>PMTREAD</p>
</td>
<td class="cellalignment3095" headers="r62c1-t34 r1c2-t34">
<p>TEXT</p>
</td>
<td class="cellalignment3095" headers="r62c1-t34 r1c3-t34">
<p>The permission condition for the read permission associated with the specified object. When there is no read permission for the object, it returns <code>NA</code>.</p>
</td>
</tr>
<tr class="cellalignment3089">
<td class="cellalignment3095" id="r63c1-t34" headers="r1c1-t34">
<p>PMTWRITE</p>
</td>
<td class="cellalignment3095" headers="r63c1-t34 r1c2-t34">
<p>TEXT</p>
</td>
<td class="cellalignment3095" headers="r63c1-t34 r1c3-t34">
<p>The permission condition for the write permission associated with the specified object. When there is no write permission for the object, it returns <code>NA</code>.</p>
</td>
</tr>
<tr class="cellalignment3089">
<td class="cellalignment3095" id="r64c1-t34" headers="r1c1-t34">
<p>PRECISION</p>
</td>
<td class="cellalignment3095" headers="r64c1-t34 r1c2-t34">
<p>INTEGER</p>
</td>
<td class="cellalignment3095" headers="r64c1-t34 r1c3-t34">
<p>The precision of the specified <code>NUMBER</code> dimension or variable. The precision is the total number of digits. When the variable was defined without a precision specification, then OBJ returns <code>NA</code>.</p>
</td>
</tr>
<tr class="cellalignment3089">
<td class="cellalignment3095" id="r65c1-t34" headers="r1c1-t34">
<p>PROGRAM</p>
</td>
<td class="cellalignment3095" headers="r65c1-t34 r1c2-t34">
<p>TEXT (multiline)</p>
</td>
<td class="cellalignment3095" headers="r65c1-t34 r1c3-t34">
<p>The text of the specified program.</p>
</td>
</tr>
<tr class="cellalignment3089">
<td class="cellalignment3095" id="r66c1-t34" headers="r1c1-t34">
<p>PROPCHANGED</p>
</td>
<td class="cellalignment3095" headers="r66c1-t34 r1c2-t34">
<p>BOOLEAN</p>
</td>
<td class="cellalignment3095" headers="r66c1-t34 r1c3-t34">
<p>Whether the properties of the specified object have changed since the last UPDATE.</p>
</td>
</tr>
<tr class="cellalignment3089">
<td class="cellalignment3095" id="r67c1-t34" headers="r1c1-t34">
<p>PROPERTY <span class="italic">prop-name</span></p>
</td>
<td class="cellalignment3095" headers="r67c1-t34 r1c2-t34">
<p>WORKSHEET</p>
</td>
<td class="cellalignment3095" headers="r67c1-t34 r1c3-t34">
<p>The value of the specified object's property as specified by <span class="italic">prop-name</span> which is a text expression that specifies the name of the property. The data type of the return value is determined at run time. When the named property does not exist, it returns <code>NA</code>. (Abbreviated PRP)</p>
</td>
</tr>
<tr class="cellalignment3089">
<td class="cellalignment3095" id="r68c1-t34" headers="r1c1-t34">
<p>PROPERTYLIST</p>
</td>
<td class="cellalignment3095" headers="r68c1-t34 r1c2-t34">
<p>TEXT (multiline)</p>
</td>
<td class="cellalignment3095" headers="r68c1-t34 r1c3-t34">
<p>The names of the properties associated with the specified object, one property on a line. The names are in uppercase letters and are stored in the collating sequence for ASCII characters. For objects without properties, it returns <code>NA</code>. (Abbreviated PRPLIST)</p>
</td>
</tr>
<tr class="cellalignment3089">
<td class="cellalignment3095" id="r69c1-t34" headers="r1c1-t34">
<p>PROPERTYTYPE <span class="italic">prop-name</span></p>
</td>
<td class="cellalignment3095" headers="r69c1-t34 r1c2-t34">
<p>TEXT</p>
</td>
<td class="cellalignment3095" headers="r69c1-t34 r1c3-t34">
<p>The data type of object's property as specified by <span class="italic">prop-name</span> which is a text expression that specifies the name of the property. The type is derived from the expression used in the PROPERTY statement that created the property. Possible return values are <code>BOOLEAN</code>, <code>TEXT</code>, <code>ID</code>, <code>DATE</code>, <code>DATETIME</code>, <code>NUMBER</code>, <code>INTEGER</code>, <code>LONGINTEGER</code>, <code>DECIMAL</code>, and <code>SHORT</code>.When the named property does not exist or has a value of <code>NA</code>, it returns <code>NA</code>. (Abbreviated PRPTYPE)</p>
</td>
</tr>
<tr class="cellalignment3089">
<td class="cellalignment3095" id="r70c1-t34" headers="r1c1-t34">
<p>PUSHCOUNT</p>
</td>
<td class="cellalignment3095" headers="r70c1-t34 r1c2-t34">
<p>INTEGER</p>
</td>
<td class="cellalignment3095" headers="r70c1-t34 r1c3-t34">
<p>The number of times PUSH has executed for the specified executed (that is, the number of pushed values currently saved for the specified object).</p>
</td>
</tr>
<tr class="cellalignment3089">
<td class="cellalignment3095" id="r71c1-t34" headers="r1c1-t34">
<p>REFERS [RECURSIVE] <span class="italic">text-expression</span></p>
</td>
<td class="cellalignment3095" headers="r71c1-t34 r1c2-t34">
<p>TEXT (multiline)</p>
</td>
<td class="cellalignment3095" headers="r71c1-t34 r1c3-t34">
<p>The words found in the specified compilable object (for example, a program) that match the ones you specify in <span class="italic">text-expression</span>. REFERS returns <code>NA</code> when it does not find any of the specified words, when the specified object is not a compilable object, or when the workspace does not contain any compilable objects. When you supply both arguments, REFERS searches only the specified object for the listed words. When you omit <span class="italic">object-name,</span> REFERS searches all the compilable objects in the current workspace.</p>
<ul>
<li>
<p><span class="italic">text-expression</span> is a multiline <code>TEXT</code> expression that is the words for which it should search. Each line in the text value is considered a separate word to be searched for. When, for <span class="italic">text-expression</span>, you specify a list of words that is the result of the OBJLIST function, you can produce a cross-reference for compilable objects in the current workspace.</p>
</li>
<li>
<p>RECURSIVE specifies that Oracle OLAP should search (following the calling tree) for the <span class="italic">text-expression</span> to retrieve a list of all of the occurrences of <span class="italic">text-expression</span>, at any level.</p>
</li>
</ul>
<p>Tip: The search is not case-sensitive; REFERS treats <code>TEXTVAR</code> and <code>Textvar</code> as the same word. REFERS ignores all text that is included in a comment or enclosed in single quotes.</p>
</td>
</tr>
<tr class="cellalignment3089">
<td class="cellalignment3095" id="r72c1-t34" headers="r1c1-t34">
<p>RELATION <span class="italic">relation-query</span></p>
</td>
<td class="cellalignment3095" headers="r72c1-t34 r1c2-t34">
<p>TEXT (multiline)</p>
</td>
<td class="cellalignment3095" headers="r72c1-t34 r1c3-t34">
<p>The default relation (as specified the RELATION command) for the specified object. The values that are returned vary depending on what you specify for <span class="italic">relation-query</span>. The syntax for <span class="italic">relation-query</span> is:</p>
<p><span class="syntaxinline">DEFINELIST | DIMLIST | ACTUAL</span> <span class="syntaxinlineitalic">rel-dimname</span> <span class="syntaxinline">| SPECIFIED</span> <span class="syntaxinlineitalic">rel-dimname</span></p>
<p>where:</p>
<ul>
<li>
<p>DEFINELIST specifies that the function return all of the names of the dimensions and their associated default relations. As shown in the following example, the names are returned and it associated default relation are returned one per line, alternating between dimension name and its associated default relation.</p>
<pre>
                  dimname1
                  relname1
                  dimname2
                  relname2
</pre></li>
<li>
<p>DIMLIST specifies that the function return all of the names of the dimensions for which default relations have been specified. As shown in the following example, Oracle OLAP returns the values one dimension name per line.</p>
<pre>
                  dimname1
                  dimname2
</pre></li>
<li>
<p>ACTUAL <span class="syntaxinlineitalic">dimname</span> specifies that the function return the relation that Oracle OLAP uses as the default relation between <span class="italic">object-name</span> and its related dimension specified by <span class="italic">rel-dimname</span>.</p>
</li>
<li>
<p>SPECIFIED <span class="syntaxinlineitalic">dimname</span> specifies that the function return the name of the relation specified in the RELATION command as the default relation between <span class="italic">object-name</span> and its related dimension specified by <span class="italic">rel-dimname</span> which is the value as actually entered in the RELATION command, even if an error occurred entering the data and there is no such relation in the analytic workspace.</p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment3089">
<td class="cellalignment3095" id="r73c1-t34" headers="r1c1-t34">
<p>RSSIZE</p>
</td>
<td class="cellalignment3095" headers="r73c1-t34 r1c2-t34">
<p>INTEGER</p>
</td>
<td class="cellalignment3095" headers="r73c1-t34 r1c3-t34">
<p>The number of random subset pages used by main object.</p>
</td>
</tr>
<tr class="cellalignment3089">
<td class="cellalignment3095" id="r74c1-t34" headers="r1c1-t34">
<p>SCALE</p>
</td>
<td class="cellalignment3095" headers="r74c1-t34 r1c2-t34">
<p>INTEGER</p>
</td>
<td class="cellalignment3095" headers="r74c1-t34 r1c3-t34">
<p>The scale of a <code>NUMBER</code> dimension or variable. A positive scale indicates the number of digits to the right of the decimal point. A negative scale indicates the number of rounded digits to the left of the decimal point. When the variable was defined without a scale specification, then OBJ returns <code>NA</code>.</p>
</td>
</tr>
<tr class="cellalignment3089">
<td class="cellalignment3095" id="r75c1-t34" headers="r1c1-t34">
<p>SEGWIDTH {<span class="italic">dim-name</span>|ALL}</p>
</td>
<td class="cellalignment3095" headers="r75c1-t34 r1c2-t34">
<p>TEXT (multiline)</p>
</td>
<td class="cellalignment3095" headers="r75c1-t34 r1c3-t34">
<p>The default or user-specified segment size of a variable that has multiple dimensions and that is associated with either a particular dimension or all dimensions. Each line begins with a segment-size (up to 11 digits) followed by the name of the associated dimension or composite. The dimension name is not included in the line when you specify a dimension and its dimensioned object. In that case only the segment value is returned. When the segment size is reported as zero, it means the default segment size is in effect, and therefore you may have to use CHGDFN to set an appropriate size for the variable's segments.</p>
<ul>
<li>
<p><span class="italic">dim-name</span> is a text expression that is the name of a dimension.</p>
</li>
<li>
<p>ALL specifies all dimensions.</p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment3089">
<td class="cellalignment3095" id="r76c1-t34" headers="r1c1-t34">
<p>SESSION</p>
</td>
<td class="cellalignment3095" headers="r76c1-t34 r1c2-t34">
<p>BOOLEAN</p>
</td>
<td class="cellalignment3095" headers="r76c1-t34 r1c3-t34">
<p>Whether the specified object is a session object.</p>
</td>
</tr>
<tr class="cellalignment3089">
<td class="cellalignment3095" id="r77c1-t34" headers="r1c1-t34">
<p>SHAREMAP</p>
</td>
<td class="cellalignment3095" headers="r77c1-t34 r1c2-t34">
<p>BOOLEAN</p>
</td>
<td class="cellalignment3095" headers="r77c1-t34 r1c3-t34">
<p>When the specified object is dimensioned by a compound dimension, whether the compound dimension is shared with other objects.</p>
</td>
</tr>
<tr class="cellalignment3089">
<td class="cellalignment3095" id="r78c1-t34" headers="r1c1-t34">
<p>SPARSE</p>
</td>
<td class="cellalignment3095" headers="r78c1-t34 r1c2-t34">
<p>TEXT (multiline)</p>
</td>
<td class="cellalignment3095" headers="r78c1-t34 r1c3-t34">
<p>The composites used in the definition of the specified object.</p>
</td>
</tr>
<tr class="cellalignment3089">
<td class="cellalignment3095" id="r79c1-t34" headers="r1c1-t34">
<p>SURROGATELIST</p>
</td>
<td class="cellalignment3095" headers="r79c1-t34 r1c2-t34">
<p>TEXT (multiline)</p>
</td>
<td class="cellalignment3095" headers="r79c1-t34 r1c3-t34">
<p>The surrogates defined for the specified surrogate or dimension.</p>
</td>
</tr>
<tr class="cellalignment3089">
<td class="cellalignment3095" id="r80c1-t34" headers="r1c1-t34">
<p>TRIGGER [<span class="italic">triggering-event</span>}</p>
</td>
<td class="cellalignment3095" headers="r80c1-t34 r1c2-t34">
<p>TEXT (multiline)</p>
</td>
<td class="cellalignment3095" headers="r80c1-t34 r1c3-t34">
<p>TRIGGER without a <span class="italic">triggering-event</span> keyword returns all the <span class="italic">triggering-event</span> keywords and trigger programs names associated with the specified object; or <code>NA</code> when the object does not have any trigger programs associated with it. TRIGGER with a <span class="italic">triggering-event</span> keyword returns the names of the trigger programs associated with the specified object event.</p>
<p>Specify the <span class="italic">triggering-event</span> using one of the following keywords:</p>
<dl>
<dd>MAINTAIN</dd>
<dd>DELETE</dd>
<dd>PROPERTY</dd>
<dd>ASSIGN</dd>
<dd>BEFORE_UPDATE</dd>
<dd>AFTER_UPDATE</dd>
</dl>
</td>
</tr>
<tr class="cellalignment3089">
<td class="cellalignment3095" id="r81c1-t34" headers="r1c1-t34">
<p>TYPE</p>
</td>
<td class="cellalignment3095" headers="r81c1-t34 r1c2-t34">
<p>TEXT</p>
</td>
<td class="cellalignment3095" headers="r81c1-t34 r1c3-t34">
<p>The object type of the specified object.</p>
</td>
</tr>
<tr class="cellalignment3089">
<td class="cellalignment3095" id="r82c1-t34" headers="r1c1-t34">
<p>UNIQUE</p>
</td>
<td class="cellalignment3095" headers="r82c1-t34 r1c2-t34">
<p>BOOLEAN</p>
</td>
<td class="cellalignment3095" headers="r82c1-t34 r1c3-t34">
<p>Whether the specified concat dimension is unique. Returns <code>FALSE</code> for other dimensions, and <code>NA</code> for other object types (including Partition Templates).</p>
</td>
</tr>
<tr class="cellalignment3089">
<td class="cellalignment3095" id="r83c1-t34" headers="r1c1-t34">
<p>UPDATED</p>
</td>
<td class="cellalignment3095" headers="r83c1-t34 r1c2-t34">
<p>BOOLEAN</p>
</td>
<td class="cellalignment3095" headers="r83c1-t34 r1c3-t34">
<p>When the analytic workspace is attached in multiwriter mode, whether the specified object been updated. For other attachment modes, returns <code>NA</code>.</p>
</td>
</tr>
<tr class="cellalignment3089">
<td class="cellalignment3095" id="r84c1-t34" headers="r1c1-t34">
<p>VALCOUNT</p>
</td>
<td class="cellalignment3095" headers="r84c1-t34 r1c2-t34">
<p>INTEGER</p>
</td>
<td class="cellalignment3095" headers="r84c1-t34 r1c3-t34">
<p>The number of logical uncompressed values in the specified compressed composite. For all other dimensions the result is identical to DIMMAX.</p>
</td>
</tr>
<tr class="cellalignment3089">
<td class="cellalignment3095" id="r85c1-t34" headers="r1c1-t34">
<p>VALSIZE</p>
</td>
<td class="cellalignment3095" headers="r85c1-t34 r1c2-t34">
<p>INTEGER</p>
</td>
<td class="cellalignment3095" headers="r85c1-t34 r1c3-t34">
<p>The number of pages used to store the specified object's values. For text dimensions and variables defined without the WIDTH keyword, OBJ(VALSIZE) counts only those pages that contain the four-byte pointers to the text, not the storage for the text itself. For a temporary variable, OBJ(VALSIZE) returns a value of 0 (zero) because the values of a temporary variable are stored in temporary storage and not in the analytic workspace.</p>
</td>
</tr>
<tr class="cellalignment3089">
<td class="cellalignment3095" id="r86c1-t34" headers="r1c1-t34">
<p>VERSION</p>
</td>
<td class="cellalignment3095" headers="r86c1-t34 r1c2-t34">
<p>INTEGER</p>
</td>
<td class="cellalignment3095" headers="r86c1-t34 r1c3-t34">
<p>The current state of the attached version of the specified object. (Note that changes that are updated and committed increase this number.)</p>
</td>
</tr>
<tr class="cellalignment3089">
<td class="cellalignment3095" id="r87c1-t34" headers="r1c1-t34">
<p>VNF</p>
</td>
<td class="cellalignment3095" headers="r87c1-t34 r1c2-t34">
<p>TEXT</p>
</td>
<td class="cellalignment3095" headers="r87c1-t34 r1c3-t34">
<p>When the specified object is a dimension of type DAY, WEEK, MONTH, QUARTER, or YEAR for which you have defined a VNF (value name format), the VNF of the dimension. For other types of objects, it returns <code>NA</code>.</p>
</td>
</tr>
<tr class="cellalignment3089">
<td class="cellalignment3095" id="r88c1-t34" headers="r1c1-t34">
<p>WIDTH</p>
</td>
<td class="cellalignment3095" headers="r88c1-t34 r1c2-t34">
<p>INTEGER</p>
</td>
<td class="cellalignment3095" headers="r88c1-t34 r1c3-t34">
<p>The width, in bytes, of the storage area of each value of the specified object:</p>
<ul>
<li>
<p>For dimensioned INTEGER and BOOLEAN variables that you defined with a width, it returns <code>1</code>.</p>
</li>
<li>
<p>For dimensioned text variables and text dimensions that you defined with a width, it returns a value between <code>1</code> and <code>4000</code>, which identifies the defined width.</p>
</li>
<li>
<p>For all other objects, it returns <code>NA</code>.</p>
</li>
</ul>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformalwidemax" --></dd>
<dt><span class="italic">object-name</span></dt>
<dd>
<p>A text expression that contains the name of the object in which you are interested. The object can be in any attached workspace. When you specify <span class="italic">object-name</span> as a text literal, you must enclose it in single quotes. (Oracle OLAP automatically converts the name to uppercase.) When you specify the name of a program as the <span class="italic">object-name</span> and you omit the quotes, Oracle OLAP runs the program and uses its return value as the name of the object to be supplied as <span class="italic">object-name</span>.</p>
<p>You can omit <span class="italic">object-name</span> when you are using the OBJ function as part of a statement, such as the LIMIT command, that loops through the NAME dimension. In this case, the return value is dimensioned by the NAME dimension in the current workspace.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="g1052637"></a>Examples</p>
<div class="infoboxnotealso">
<p class="notep1">See also:</p>
For examples of using the <a href="#g1054016">OBJ</a> function to retrieve default relation information, see <a href="dml_commands_2039.htm#CACIAADF">Example 10-95, "Specifying a Default Relation Using the Relation Command"</a></div>
<div id="OLADM1806" class="example">
<p class="titleinexample"><a id="i80646"></a>Example 8-47 Listing Dimensions</p>
<p>Suppose you want a list of all the dimensions in an analytic workspace. First, use a LIMIT command and the OBJ function to limit the status of the NAME dimension. Then use a STATUS statement to produce a list of dimensions. Because the values returned by <code>OBJ(TYPE)</code> are always in uppercase, you must use <code>'DIMENSION'</code> (not <code>'dimension'</code>) in the LIMIT statement to get a match. The statements</p>
<pre>
LIMIT NAME TO OBJ(TYPE) EQ 'DIMENSION'
STATUS NAME
</pre>
<p>produce the following output.</p>
<pre>
The current status of NAME is:
PRODUCT, DISTRICT, DIVISION, LINE, REGION, MARKETLEVEL, MARKET,
MONTH, YEAR, QUARTER
</pre></div>
<!-- class="example" -->
<div id="OLADM1807" class="example">
<p class="titleinexample"><a id="sthref2690"></a>Example 8-48 Listing Relations</p>
<p>Suppose you want to see the definitions of all the relations in an analytic workspace. Use the LIMIT command and the OBJ function to select these names. Then use DESCRIBE to produce a list of their definitions. The statements</p>
<pre>
LIMIT NAME TO OBJ(TYPE) EQ 'RELATION'
DESCRIBE
</pre>
<p>produce the following output.</p>
<pre>
DEFINE REGION.DISTRICT RELATION REGION &lt;DISTRICT&gt;
LD REGION for each DISTRICT
 
DEFINE DIVISION.PRODUCT RELATION DIVISION &lt;PRODUCT&gt;
LD DIVISION for each PRODUCT
 
DEFINE MLV.MARKET RELATION MARKETLEVEL &lt;MARKET&gt;
 
DEFINE MARKET.MARKET RELATION MARKET &lt;MARKET&gt;
LD Self-relation for the Market Dimension 
</pre></div>
<!-- class="example" -->
<div id="OLADM1808" class="example">
<p class="titleinexample"><a id="i1024578"></a>Example 8-49 OBJ With ISBY</p>
<p>For example, the following statement limits NAME to all the objects dimensioned by <code>month</code>.</p>
<pre>
LIMIT NAME TO OBJ(ISBY 'month')
</pre>
<p>You can use ISBY to find out if a dimension is a base dimension of a concat or conjoint dimension or a composite. For example, assume that you had a conjoint dimension named <code>proddist</code> whose base dimensions were <code>product</code> and <code>district</code>. In this case, the following statement returns <code>YES</code>.</p>
<pre>
SHOW OBJ(ISBY 'district' 'proddist')
</pre>
<p>You can use ISBY to find out if a dimension is a dimension of a relation or a model used in an aggmap. For example, assume that you had an aggmap called <code>myaggmap</code> and you wanted to find out if a dimension named <code>mydimension</code> was used in any relations or models within <code>myaggmap</code>. In this case, you could issue the following statement.</p>
<pre>
SHOW OBJ(ISBY 'mydimension' 'myaggmap')
</pre>
<p>To determine whether a specified dimension is a base dimension at any level, you must use ISBY with the RECURSIVE keyword. For example, assume that you had a conjoint dimension named <code>proddist.mon</code> whose base dimensions were <code>proddist</code> and <code>month</code> and a variable <code>proddist.sales</code> dimensioned by <code>proddist</code>. In this case, each of the following statements would return <code>NO</code>.</p>
<pre>
SHOW OBJ(ISBY 'district' 'proddist.mon')
SHOW OBJ(ISBY 'district' 'proddist.sales')
</pre>
<p>However, when you use ISBY with the RECURSIVE keyword, each of the following statements would return <code>YES</code>.</p>
<pre>
SHOW OBJ(ISBY RECURSIVE 'district' 'proddist.mon')
SHOW OBJ(ISBY RECURSIVE 'district' 'proddist.sales')
</pre></div>
<!-- class="example" -->
<div id="OLADM1809" class="example">
<p class="titleinexample"><a id="sthref2691"></a>Example 8-50 Getting Information about a Variable</p>
<p>This example illustrates the use of several choices of the OBJ function to obtain information about the variable <code>sales</code>. The definition of <code>sales</code> is as follows.</p>
<pre>
DEFINE sales VARIABLE DECIMAL &lt;month product district&gt;
LD Sales Revenue
</pre>
<ul>
<li>
<p>The statement</p>
<pre>
SHOW OBJ(TYPE 'sales')
</pre>
<p>produces the following output.</p>
<pre>
VARIABLE
</pre></li>
<li>
<p>The statement</p>
<pre>
SHOW OBJ(DATA 'sales')
</pre>
<p>produces the following output.</p>
<pre>
DECIMAL
</pre></li>
<li>
<p>The statement</p>
<pre>
SHOW OBJ(DIMS 'sales')
</pre>
<p>produces the following output.</p>
<pre>
MONTH
PRODUCT
DISTRICT
</pre></li>
<li>
<p>The statement</p>
<pre>
SHOW OBJ(ISBY 'product' 'sales')
</pre>
<p>produces the following output.</p>
<pre>
YES
</pre></li>
<li>
<p>The statement</p>
<pre>
SHOW OBJ(LD 'sales')
</pre>
<p>produces the following output.</p>
<pre>
Sales Revenue
</pre></li>
</ul>
</div>
<!-- class="example" -->
<div id="OLADM1810" class="example">
<p class="titleinexample"><a id="sthref2692"></a>Example 8-51 Returning the Name of the Object or the Type of the Object</p>
<p>Suppose <code>textvar</code> is a variable whose value is <code>geog</code>, which is the name of a dimension. Whether you enclose the word <code>textvar</code> in quotation marks determines whether the following <code>OBJ</code> function calls return the word <code>VARIABLE</code> (the type of object <code>textvar</code> is) or <code>DIMENSION</code> (the type of object <code>geog</code> is).</p>
<pre>
SHOW OBJ(TYPE 'textvar')
VARIABLE

SHOW OBJ(TYPE textvar)
DIMENSION
</pre></div>
<!-- class="example" -->
<div id="OLADM1811" class="example">
<p class="titleinexample"><a id="i80737"></a>Example 8-52 Using OBJ to Select Objects</p>
<p>This example uses OBJ and DESCRIBE to look at the definitions of all the relations in an analytic workspace. The Oracle OLAP statements</p>
<pre>
LIMIT NAME TO OBJ(TYPE) EQ 'RELATION'
DESCRIBE
</pre>
<p>produce the following output.</p>
<pre>
DEFINE REGION.DISTRICT RELATION REGION &lt;DISTRICT&gt;
LD REGION for each DISTRICT
 
DEFINE DIVISION.PRODUCT RELATION DIVISION &lt;PRODUCT&gt;
LD DIVISION for each PRODUCT
 
DEFINE MLV.MARKET RELATION MARKETLEVEL &lt;MARKET&gt;
 
DEFINE MARKET.MARKET RELATION MARKET &lt;MARKET&gt;
LD Self-relation for the Market Dimension
</pre></div>
<!-- class="example" -->
<div id="OLADM1812" class="example">
<p class="titleinexample"><a id="sthref2693"></a>Example 8-53 Counting Compiled Objects</p>
<p>The following statements count how many compilable objects in your workspace are compiled and how many are not compiled. Each statement loops over the objects in the current workspace. The OBJ function returns <code>YES</code> for each object that is compiled, <code>NO</code> for each compilable object that is not compiled, and <code>NA</code> for objects that are not compilable. When NASKIP is <code>YES</code> (the default), the COUNT function in the first statement counts the number of <code>YES</code> values that are returned by OBJ, and in the second statement it counts the number of <code>NO</code> values that are returned.</p>
<pre>
SHOW COUNT(OBJ(ISCOMPILED))
SHOW COUNT(NOT OBJ(ISCOMPILED))
</pre></div>
<!-- class="example" -->
<div id="OLADM1813" class="example">
<p class="titleinexample"><a id="sthref2694"></a>Example 8-54 OBJ with REFERS</p>
<p>The following statement searches the compilable objects in the current workspace for references to the objects in all the attached workspaces. The output lists the non-compilable objects in the current workspace too, but the return value for them is <code>NA</code>.</p>
<pre>
REPORT OBJ(REFERS OBJLIST(AW(LIST)))
</pre>
<p>In the following example, <code>OBJ(REFERS)</code> tells you whether <code>var1</code>, <code>var2</code>, or <code>var3</code> appears in the <code>myprog</code> program. The return value of <code>OBJ(REFERS)</code> is a multiline text value that contains the references it finds. When only <code>var1</code> and <code>var3</code> appear in the program, then the return value contains those two names, each on a separate line. The statement</p>
<pre>
SHOW OBJ(REFERS 'var1\nvar2\nvar3' 'myprog')
</pre>
<p>produces the following output.</p>
<pre>
VAR1
VAR3
</pre>
<p>When you do not specify the name of a program or formula to be searched, OBJ(REFERS) returns a single-line or multiline text value for <span class="italic">each object</span> in the NAME dimension of the current workspace. For objects that are not programs or formulas, <code>NA</code> is returned. The statement</p>
<pre>
REPORT OBJ(REFERS 'var1\nvar2\nvar3')
</pre>
<p>produces the following output.</p>
<pre>
               OBJ(REFERS
                 'var1
                  var2
NAME           var3' )
-------------- ----------
PRODUCT        NA
DISTRICT       NA
DIVISION       NA
LINE           NA
QUARTER        NA
REGION         NA
YEAR           NA
MONTH          NA
   ...
MYPROG         VAR1
               VAR3
VAR1           NA
VAR2           NA
VAR3           NA
</pre></div>
<!-- class="example" -->
<div id="OLADM1814" class="example">
<p class="titleinexample"><a id="sthref2695"></a>Example 8-55 OBJ with PROPERTY</p>
<p>In the following example, OBJ(PROPERTY) returns information about the <code>decplace</code> property of the <code>actual</code> variable. (See the <a href="dml_commands_2031.htm#i79628">PROPERTY</a> command for more information.) The user created this property to store the number of decimal places and now wants to obtain that value to produce a report of the <code>actual</code> variable.</p>
<p>The statements</p>
<pre>
CONSIDER actual
PROPERTY 'decplace' 4
LIMIT month TO FIRST 1
LIMIT division TO 'Camping'
REPORT ACROSS month W 20 DECIMAL OBJ(PROPERTY 'decplace' -
'actual') actual 
</pre>
<p>produce the following output.</p>
<pre>
DIVISION: CAMPING
               -------ACTUAL-------
               -------MONTH--------
LINE                  JAN 95
-------------- --------------------
Revenue                533,362.8800
Cogs                   360,810.6600
Gross.Margin           172,552.2200
Marketing               37,369.5000
Selling                 89,007.3800
R.D                     24,307.5000
Opr.Income              21,867.8400
Taxes                   15,970.3900
Net.Income               5,897.4500
</pre></div>
<!-- class="example" -->
<div id="OLADM1815" class="example">
<p class="titleinexample"><a id="sthref2696"></a>Example 8-56 OBJ with SEGWIDTH</p>
<p>The following statements show how to change and display segment size values for all of a variable's dimensions.</p>
<pre>
CHGDFN sales SEGWIDTH 150 5000 50
SHOW OBJ(SEGWIDTH ALL 'sales')
</pre>
<p>These statements produce the following output.</p>
<pre>
 150 MONTH
5000 PRODUCT
  50 DISTRICT
</pre>
<p>The following statement shows how to obtain the segment size value for a specific dimension.</p>
<pre>
SHOW OBJ(SEGWIDTH 'product' 'sales')
</pre>
<p>This statement produces the following output.</p>
<pre>
5000
</pre>
<p>The following statement shows how to obtain a list of segment sizes for every multidimensional variable or relation associated with the dimension.</p>
<p>When <span class="italic">object-name</span> is not specified, you must use REPORT rather than SHOW to obtain a value for each object in the NAME dimension.</p>
<pre>
REPORT OBJ(SEGWIDTH 'product')
</pre>
<p>This statement produces the following output.</p>
<pre>
NAME           OBJ(SEGWIDTH 'product')
-------------- -----------------------
SALES          5000
SALES.FORECAST 5000
SALES.PLAN     5000
SHARE          5000
UNITS          5000
UNITS.M        0
   ...
</pre>
<p>The following statement shows how to produce a list of segment sizes for all dimensions in the current workspace.</p>
<pre>
REPORT OBJ(SEGWIDTH ALL)
</pre>
<p>This statement produces the following output.</p>
<pre>
NAME           OBJ(SEGWIDTH ALL)
-------------- -----------------
SALES          150 MONTH
               5000 PRODUCT
               50 DISTRICT
 
SALES.FORECAST 150 MONTH
               5000 PRODUCT
               50 DISTRICT
    ...
</pre></div>
<!-- class="example" --></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment3088">
<tr>
<td class="cellalignment3095">
<table class="cellalignment3093">
<tr>
<td class="cellalignment3092"><a href="dml_functions_2052.htm"><img width="24" height="24" src="../../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment3092"><a href="dml_functions_2054.htm"><img width="24" height="24" src="../../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;1994, 2013,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment3097">
<table class="cellalignment3091">
<tr>
<td class="cellalignment3092"><a href="../../index.htm"><img width="24" height="24" src="../../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment3092"><a href="../../nav/portal_booklist.htm"><img width="24" height="24" src="../../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment3092"><a href="toc.htm"><img width="24" height="24" src="../../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment3092"><a href="index.htm"><img width="24" height="24" src="../../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment3092"><a href="../../nav/mindx.htm"><img width="24" height="24" src="../../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment3092"><a href="../../dcommon/html/feedback.htm"><img width="24" height="24" src="../../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>
</body>
</html>
