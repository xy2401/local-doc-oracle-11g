<!DOCTYPE html>
<html lang="en" >
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1">
<meta charset="utf-8">
<title>TCONVERT</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Version 5.1.2 Build 742" />
<meta name="dcterms.created" content="2013-11-14T21:21:33Z" />
<meta name="robots" content="all" />
<meta name="dcterms.title" content="OLAP DML Reference" />
<meta name="dcterms.identifier" content="E17122-08" />
<meta name="dcterms.isVersionOf" content="OLADM" />
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;1994, 2013,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved." />
<link rel="Start" href="../../index.htm" title="Home" type="text/html" />
<link rel="Copyright" href="../../dcommon/html/cpyr.htm" title="Copyright" type="text/html" />

<script type="application/javascript"  src="../../dcommon/js/headfoot.js"></script>
<script type="application/javascript"  src="../../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html" />
<link rel="Index" href="index.htm" title="Index" type="text/html" />
<link rel="Prev" href="dml_functions_2123.htm" title="Previous" type="text/html" />
<link rel="Next" href="dml_functions_2125.htm" title="Next" type="text/html" />
<link rel="alternate" href="../e17122.pdf" title="PDF version" type="application/pdf" />
<link rel="schema.dcterms" href="http://purl.org/dc/terms/" />
<link rel="stylesheet" href="../../dcommon/css/fusiondoc.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/header.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/footer.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/fonts.css">
<link rel="stylesheet" href="../../dcommon/css/foundation.css">
<link rel="stylesheet" href="../../dcommon/css/codemirror.css">
<link rel="stylesheet" type="text/css" title="Default" href="../../nav/css/html5.css">
<link rel="stylesheet" href="../../dcommon/css/respond-480-tablet.css">
<link rel="stylesheet" href="../../dcommon/css/respond-768-laptop.css">
<link rel="stylesheet" href="../../dcommon/css/respond-1140-deskop.css">
<script type="application/javascript" src="../../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">382/593</span> <!-- End Header --><a id="i78613"></a>
<hr />
<div id="OLADM689" class="refsect1">
<h1 class="refsect1">TCONVERT</h1>
<p><a id="sthref3266"></a><a id="sthref3267"></a><a id="sthref3268"></a>The TCONVERT function converts time-series data from one dimension of type DAY, WEEK, MONTH, QUARTER, or YEAR to another dimension of type DAY, WEEK, MONTH, QUARTER, or YEAR. You can specify an aggregation method or an allocation method to use in the conversion.</p>
<div class="infobox-note">
<p class="notep1">Important:</p>
You can only use this function with dimensions of type DAY, WEEK, MONTH, QUARTER, or YEAR.You can<span class="italic">not</span> use this function for time dimensions that are implemented as hierarchical dimensions of type TEXT.</div>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3269"></a>Return Value</p>
<p>The value returned by the TCONVERT function depends on the type of conversion you specify and the type of the dimension being converted.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3270"></a>Syntax</p>
<p class="synopsis">TCONVERT(<span class="italic">expression&nbsp;time-dimension&nbsp;method&nbsp;</span>[<span class="italic">method</span>])</p>
<p>where the syntax for <span class="syntaxinlineitalic">method</span> varies by method type:</p>
<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="syntaxinline">SUM|AVERAGE|LAST&nbsp;[BY&nbsp;PERIOD|BY&nbsp;DAY]&nbsp;[STATUS|NOSTATUS]</span><br />
<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="syntaxinline">SPLIT|REPEAT|INTERPOLATE&nbsp;[BY&nbsp;PERIOD|BY&nbsp;DAY]</span></div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3271"></a>Parameters</p>
<dl>
<dt><span class="italic">expression</span></dt>
<dd>
<p>An expression whose values you want to convert. <span class="italic">Expression</span> must be dimensioned by a dimension of type DAY, WEEK, MONTH, QUARTER, or YEAR. This dimension is referred to as the <span class="italic">source</span> dimension. Usually <span class="italic">expression</span> is numeric, but with some conversion methods you can also convert text data. See <a href="#i79193">"Converting Text Data"</a>.</p>
</dd>
<dt><span class="italic">time-dimension</span></dt>
<dd>
<p>The DAY, WEEK, MONTH, QUARTER, or YEAR dimension to which you want to convert the <span class="italic">expression.</span> This dimension is referred to as the <span class="italic">target</span> dimension.</p>
</dd>
<dt><span class="italic">method</span></dt>
<dd>
<p>The method to use for converting data from the source dimension to the target dimension. You can specify an aggregation method or an allocation method:</p>
</dd>
</dl>
<ul>
<li>
<p>Aggregation methods are SUM, AVERAGE, and LAST. They are typically used to convert data from smaller time periods to larger time periods (for example, months to years).</p>
</li>
<li>
<p>Allocation methods are SPLIT, REPEAT, and INTERPOLATE. They are typically used to convert data from larger to smaller time periods (for example, years to quarters). The allocation methods all use the full default status of the source dimension to determine the periods that contribute to the allocation.</p>
</li>
</ul>
<p>Except for a case in which the source dimension and target dimension have overlapping periods of equal length (as with a calendar year and a fiscal year), you can specify both an aggregation method and an allocation method. See <a href="#i79203">"Compatible Aggregation and Allocation Methods"</a> and <a href="#i79210">"Using Both Aggregation and Allocation"</a>.</p>
<p>For all methods, results are calculated for the values in the current status of the target dimension.</p>
<p>The results you obtain depend on the method you specify and on whether you convert data between dimensions with periods of equal length or unequal length. See <a href="#i79210">"Using Both Aggregation and Allocation"</a>, <a href="#CACBEIBD">"Overlapping Periods of Equal Length"</a>, and <a href="#i79251">"Substituting a Compatible Method"</a>.</p>
<dl>
<dt>SUM [BY PERIOD]</dt>
<dd>
<p>Aggregates data to a target period by totaling the data of the contributing source periods. For each target period, SUM BY PERIOD returns the total for all the source periods that end in the target period. SUM uses the implicit relation between the source and target dimensions.</p>
</dd>
<dt>SUM BY DAY</dt>
<dd>
<p>Weights each source value according to the portion of target days it represents. For each target period, SUM BY DAY multiplies each contributing source period value by a weighting factor that has this form where <span class="italic">source-days-in-target</span> is the Number of <span class="italic">source-period days</span> that actually fall in target period and total-days-in-period is the total number of days in source period:</p>
<p class="synopsis"><span class="italic">source-days-in-target</span> / <span class="italic">total-days-in-period</span></p>
<p>SUM BY DAY then returns the total of these weighted source values. When you use SUM BY DAY, the value of an individual source period may be apportioned across adjacent target periods.</p>
<p>For example, suppose you convert weekly data to monthly data. When three days of a week fall in January and four fall in February, then SUM BY DAY adds <code>3/7</code> of the data for that week to the January total and <code>4/7</code> to the February total. In contrast, SUM BY PERIOD adds the entire data value for the week to the February total (because the week ends in February).</p>
<p>As another example, suppose you want to convert calendar year data to a fiscal year ending in June. Calendar year 1996 (<code>Cal96</code>) is the only calendar year that ends in fiscal year 1997 (<code>Fy97</code>). The SUM BY PERIOD method assigns the value for <code>Cal96</code> to <code>Fy97</code>. In contrast, SUM BY DAY apportions the <code>Cal96</code> value to the fiscal years <code>Fy96</code> and <code>Fy97</code>, according to the number of calendar days that fall in each fiscal year. Of the 366 days of <code>Cal96</code>, 182 days (January&nbsp;1 - June&nbsp;30) fall in <code>Fy96</code> and 184 days (July&nbsp;1 - December&nbsp;31) fall in <code>Fy97</code>. Therefore, for the <code>CAL96</code> data, SUM&nbsp;BY&nbsp;DAY uses a weighting factor of <code>182/366</code> for <code>Fy96</code> and a factor of <code>184/366</code> for <code>Fy97</code>.</p>
</dd>
<dt>AVERAGE [BY PERIOD]</dt>
<dd>
<p>Aggregates data to a target period by averaging the data of the contributing source periods. For each target period, AVERAGE BY PERIOD adds up the data from all the source periods that end within the target period and divides this total by the number of source periods. AVERAGE BY PERIOD uses the implicit relation between the two time dimensions.</p>
</dd>
<dt>AVERAGE BY DAY</dt>
<dd>
<p>Weights the value of each contributing source period by the portion of target days it represents. For each target period, AVERAGE BY DAY multiplies the value of each source period by the number of days of that source period that actually fall within the target period. The average is then calculated by adding these weighted source values and dividing by the total number of days in the target period. When you use AVERAGE BY DAY, the value of a single source period may be apportioned across adjacent target periods.</p>
</dd>
<dt>LAST [BY PERIOD]</dt>
<dd>
<p>For each target period, LAST BY PERIOD returns the data value from the last source period that ends within the target period. It uses the implicit relation between the source and target dimensions.</p>
</dd>
<dt>LAST BY DAY</dt>
<dd>
<p>Has the same effect as LAST BY PERIOD, provided you are converting data from smaller periods to larger periods. See <a href="#i79251">"Substituting a Compatible Method"</a>.</p>
</dd>
<dt>STATUS</dt>
<dd>
<p>Indicates that the current status of the source dimension is used. It is the default for the SUM and AVERAGE methods.</p>
</dd>
<dt>NOSTATUS</dt>
<dd>
<p>Indicates that the full default status of the source dimension is used. It is the default for the LAST method.</p>
</dd>
<dt>SPLIT [BY PERIOD]</dt>
<dd>
<p>Allocates data to target periods by splitting the data from the source periods. SPLIT&nbsp;BY&nbsp;PERIOD divides a source value evenly among the target periods that end in that source period. SPLIT BY PERIOD uses the implicit relation between the two DAY, WEEK, MONTH, QUARTER, or YEAR dimensions.</p>
</dd>
<dt>SPLIT BY DAY</dt>
<dd>
<p>Weights each source value according to the portion of target days it represents. For each target period, SPLIT BY DAY multiplies each contributing source period value by a weighting factor that has this form where <span class="italic">target-days-in-source</span> is the Number of target-period days that actually fall in source period and <span class="italic">total-period-days</span> is the total number of days in source period:</p>
<p class="synopsis"><span class="italic">target-days-in-source</span> / <span class="italic">total-period-days</span></p>
<p>SPLIT BY DAY then returns the total of these weighted source values. When you use SPLIT BY DAY, the value of an individual source period may be apportioned across adjacent target periods.</p>
</dd>
<dt>REPEAT</dt>
<dd>
<p>For each target period, REPEAT returns the value of a source period. The target periods are the periods that end within the source period. REPEAT uses the implicit relation between the source and target dimensions. REPEAT BY DAY has the same effect as REPEAT BY PERIOD, provided you are converting data from larger time periods to smaller time periods. See <a href="#i79251">"Substituting a Compatible Method"</a>.</p>
</dd>
<dt>INTERPOLATE [BY PERIOD]</dt>
<dd>
<p>The INTERPOLATE method allocates data to target periods by first calculating the difference between the values of the current and previous source periods, and then splitting the result incrementally over the target periods. INTERPOLATE divides the difference between the current and previous source period values by the number of target periods that end in the source period, and it increments each target period by this amount.</p>
</dd>
<dt>INTERPOLATE BY DAY</dt>
<dd>
<p>For each target period, adds the value of the previous source period to a value that is calculated as follows where <span class="italic">end-days</span> is the number of days from end of previous source period to end of current target period and <span class="italic">period-days</span> is the total number of days in current source period:</p>
<p class="synopsis">(<span class="italic">end-days</span> / <span class="italic">period-days</span>) * (<span class="italic">current-source-value</span> - <span class="italic">previous-source-value</span>)</p>
<p>When a target period has days that fall in multiple source periods, a similar calculation is made for each source period.</p>
</dd>
</dl>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3272"></a>Usage Notes</p>
<p class="subhead2"><a id="OLADM1956"></a>Dimensions of the Result Returned by TCONVERT</p>
<p>The results returned by TCONVERT are dimensioned by the target DAY, WEEK, MONTH, QUARTER, or YEAR dimension and by all of <span class="italic">expression</span> dimensions that are not DAY, WEEK, MONTH, QUARTER, or YEAR dimensions<span class="italic">.</span></p>
<p class="subhead2"><a id="OLADM1957"></a>Status Used with Allocation</p>
<p>The STATUS and NOSTATUS keywords have no effect with the allocation methods. The allocation methods always use the full default status of the source dimension to determine the contributing periods.</p>
<p class="subhead2"><a id="i79203"></a><a id="OLADM1958"></a>Compatible Aggregation and Allocation Methods</p>
<p>Except for a case in which the source dimension and the target dimension have overlapping periods of equal length, you can specify both an aggregation method and an allocation method. However, the two methods must be compatible. <a href="#g1012008">Table 8-15, "Compatible Aggregation and Allocation Methods"</a> shows the compatible methods.</p>
<div id="OLADM1959" class="tblformal">
<p class="titleintable"><a id="sthref3273"></a><a id="g1012008"></a>Table 8-15 Compatible Aggregation and Allocation Methods</p>
<table class="cellalignment3098" title="Compatible Aggregation and Allocation Methods" summary="This table outlines allocation methods that are compatible with various aggregation methods." dir="ltr">
<thead>
<tr class="cellalignment3089">
<th class="cellalignment3099" id="r1c1-t84">Aggregation</th>
<th class="cellalignment3099" id="r1c2-t84">Compatible Allocation</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3089">
<td class="cellalignment3095" id="r2c1-t84" headers="r1c1-t84">
<p>SUM</p>
</td>
<td class="cellalignment3095" headers="r2c1-t84 r1c2-t84">
<p>SPLIT</p>
</td>
</tr>
<tr class="cellalignment3089">
<td class="cellalignment3095" id="r3c1-t84" headers="r1c1-t84">
<p>AVERAGE</p>
</td>
<td class="cellalignment3095" headers="r3c1-t84 r1c2-t84">
<p>REPEAT</p>
</td>
</tr>
<tr class="cellalignment3089">
<td class="cellalignment3095" id="r4c1-t84" headers="r1c1-t84">
<p>LAST</p>
</td>
<td class="cellalignment3095" headers="r4c1-t84 r1c2-t84">
<p>INTERPOLATE</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<p>When you specify both an aggregation method and an allocation method, you can specify BY PERIOD or BY DAY with either method. When you specify BY PERIOD (explicitly or by default) for one method and BY DAY for the other method, BY DAY takes precedence.</p>
<p class="subhead2"><a id="i79210"></a><a id="OLADM1960"></a>Using Both Aggregation and Allocation</p>
<p>When you specify both an aggregation method and a compatible allocation method, Oracle OLAP handles this as follows:</p>
<ul>
<li>
<p>When you convert data from smaller periods to larger periods, Oracle OLAP uses the aggregation method (with BY DAY, if specified for either method).</p>
</li>
<li>
<p>When you convert data from larger periods to smaller periods, Oracle OLAP uses the allocation method (with BY DAY, if specified for either method).</p>
</li>
<li>
<p>When you convert data between dimensions that have non-overlapping periods of equal length, such as a quarter ending in March and a quarter ending in June, the results of the aggregation and allocation methods are identical.</p>
</li>
</ul>
<p class="subhead2"><a id="CACBEIBD"></a><a id="OLADM1961"></a>Overlapping Periods of Equal Length</p>
<p>When you convert data between two dimensions of type DAY, WEEK, MONTH, QUARTER, or YEAR that have overlapping periods of equal length, such as a calendar year and a fiscal year, or a quarter ending in March and a quarter ending in April, you must specify either an aggregation method or allocation method, but not both. For these dimensions, the compatible aggregation and allocation methods may yield different results.</p>
<p>For example, when you convert data from a calendar year dimension to a fiscal year dimension that ends in June, the SUM and SPLIT methods return different results:</p>
<ul>
<li>
<p>The SUM method totals up the data from the source periods that end in the target period. Because the calendar year 1996 ends in fiscal year 1997, the SUM method assigns the value for calendar year 1996 to fiscal year 1997.</p>
</li>
<li>
<p>The SPLIT method allocates a source data value to the target periods that end in the source period. Because the fiscal year 1996 ends in calendar year 1996, the SPLIT method assigns the value for calendar year 1996 to fiscal year 1996.</p>
</li>
</ul>
<p class="subhead2"><a id="i79251"></a><a id="OLADM1962"></a>Substituting a Compatible Method</p>
<p>When you specify a single conversion method, and you use an aggregation method to convert data from a larger period to a smaller period (for example, from months to weeks) Oracle OLAP automatically uses the compatible allocation method instead of the specified aggregation method. Similarly, when you use an allocation method to convert data from a smaller period to a larger period, Oracle OLAP automatically uses the compatible aggregation method. See <a href="#i79203">"Compatible Aggregation and Allocation Methods"</a>.</p>
<p class="subhead2"><a id="OLADM1963"></a>Data Type of the Result</p>
<p>When possible, TCONVERT returns results that have the same data type as <span class="italic">expression.</span> When <span class="italic">expression</span> is DECIMAL, the results are always DECIMAL. When <span class="italic">expression</span> is INTEGER, the results are INTEGER when the required calculations do not involve division. For example, when two dimensions are <span class="italic">aligned</span> (that is, they have the same phase and are based on the same periods, such as a calendar year dimension and a quarter dimension ending in December), the result is INTEGER when you use the REPEAT method to convert an INTEGER <span class="italic">expression</span> from larger periods to smaller periods. Similarly, the result is INTEGER when you use the SUM or LAST method to convert the <span class="italic">expression</span> from smaller to larger periods.</p>
<p class="subhead2"><a id="i79193"></a><a id="OLADM1964"></a>Converting Text Data</p>
<p>You can also use TCONVERT to convert the values of a text expression when no numeric calculations are needed for the conversion. For aligned dimensions, for example, you can use the LAST method to convert text values from smaller periods to larger periods, and you can use the REPEAT method to convert text values from larger periods to smaller periods. You can also use the LAST and REPEAT methods to convert text data between dimensions that have periods of equal length. When you attempt to convert a text expression with a method that requires numeric calculations, you receive an error message.</p>
<p class="subhead2"><a id="OLADM1965"></a>Methods for Financial Data</p>
<p>When you work with financial data, you can use an appropriate conversion method for each type of data. <a href="#g1011968">Table 8-16, "Examples of Conversion Methods for Different Types of Financial Data"</a> gives some examples.</p>
<div id="OLADM1966" class="tblformal">
<p class="titleintable"><a id="sthref3274"></a><a id="g1011968"></a>Table 8-16 Examples of Conversion Methods for Different Types of Financial Data</p>
<table class="cellalignment3098" title="Examples of Conversion Methods for Different Types of Financial Data" summary="This table provides outlines conversion methods that are frequently used for different types of financial data." dir="ltr">
<thead>
<tr class="cellalignment3089">
<th class="cellalignment3099" id="r1c1-t85">Type of Financial Data</th>
<th class="cellalignment3099" id="r1c2-t85">Conversion</th>
<th class="cellalignment3099" id="r1c3-t85">Conversion Method</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3089">
<td class="cellalignment3095" id="r2c1-t85" headers="r1c1-t85">
<p>Revenue or expenses</p>
</td>
<td class="cellalignment3095" headers="r2c1-t85 r1c2-t85">
<p>Month to year</p>
</td>
<td class="cellalignment3095" headers="r2c1-t85 r1c3-t85">
<p>SUM</p>
</td>
</tr>
<tr class="cellalignment3089">
<td class="cellalignment3095" id="r3c1-t85" headers="r1c1-t85">
<p>Stock quotations</p>
</td>
<td class="cellalignment3095" headers="r3c1-t85 r1c2-t85">
<p>Day to quarter</p>
</td>
<td class="cellalignment3095" headers="r3c1-t85 r1c3-t85">
<p>AVERAGE</p>
</td>
</tr>
<tr class="cellalignment3089">
<td class="cellalignment3095" id="r4c1-t85" headers="r1c1-t85">
<p>Balance sheet items</p>
</td>
<td class="cellalignment3095" headers="r4c1-t85 r1c2-t85">
<p>Month to quarter</p>
</td>
<td class="cellalignment3095" headers="r4c1-t85 r1c3-t85">
<p>LAST</p>
</td>
</tr>
<tr class="cellalignment3089">
<td class="cellalignment3095" id="r5c1-t85" headers="r1c1-t85">
<p>Quarterly tax payment</p>
</td>
<td class="cellalignment3095" headers="r5c1-t85 r1c2-t85">
<p>Year to quarter</p>
</td>
<td class="cellalignment3095" headers="r5c1-t85 r1c3-t85">
<p>SPLIT BY PERIOD</p>
</td>
</tr>
<tr class="cellalignment3089">
<td class="cellalignment3095" id="r6c1-t85" headers="r1c1-t85">
<p>Money supply</p>
</td>
<td class="cellalignment3095" headers="r6c1-t85 r1c2-t85">
<p>Year to quarter</p>
</td>
<td class="cellalignment3095" headers="r6c1-t85 r1c3-t85">
<p>INTERPOLATE</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsubsect" -->
<p class="subhead2"><a id="OLADM1967"></a>How TCONVERT Handles NA Values</p>
<p>TCONVERT is affected by the NASKIP option. When NASKIP is set to <code>NO</code>, TCONVERT returns an <code>NA</code> value for any target period that receives contributions from a source period with an <code>NA</code> value.</p>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref3275"></a>Examples</p>
<div id="OLADM1968" class="example">
<p class="titleinexample"><a id="sthref3276"></a>Example 8-133 Splitting Data Across Quarters</p>
<p>This example shows the effects of using the SPLIT method and the SPLIT BY DAY method to allocate an annual budget revenue figure of $120,000 across the quarters of the year 1996. An existing <code>year</code> dimension is the source dimension and an existing <code>quarter</code> dimension is the target dimension.</p>
<p>The following statements</p>
<pre>
DEFINE budget.revenue DECIMAL &lt;year&gt;
budget.revenue(year 'Yr96') = 120000
LIMIT quarter TO year 'Yr96'
REPORT W 12 HEADING 'Split Evenly' -
   TCONVERT(budget.revenue quarter SPLIT) -
   W 12 HEADING 'Split by Day' -
   TCONVERT(budget.revenue quarter Split by day)
</pre>
<p>produce this report.</p>
<pre>
QUARTER        Split Evenly Split by Day
-------------- ------------ ------------
Q1.96             30,000.00    29,836.07
Q2.96             30,000.00    29,836.07
Q3.96             30,000.00    30,163.93
Q4.96             30,000.00    30,163.93
</pre></div>
<!-- class="example" -->
<div id="OLADM1969" class="example">
<p class="titleinexample"><a id="sthref3277"></a>Example 8-134 Aggregating Weekly Data to Monthly Using TCONVERT</p>
<p>This example aggregates weekly data to monthly data. First, define a week dimension named <code>week</code> and add weeks that include the dates January&nbsp;1,&nbsp;1996 and June&nbsp;30,&nbsp;1996 (Oracle OLAP automatically adds the intervening weeks).</p>
<pre>
DEFINE week DIMENSION WEEK
MAINTAIN week ADD '01Jan96' '30Jun96'
</pre>
<p>Next, define a variable named <code>weekvar</code>, dimensioned by <code>week</code>, and assign a value of <code>7</code> to each week.</p>
<pre>
DEFINE weekvar DECIMAL &lt;week&gt;
weekvar = 7
</pre>
<p>The following statements show that December 31, 1995 is the beginning date of the first week for which <code>weekvar</code> contains non-<code>NA</code> data and that July&nbsp;6,&nbsp;1996 is the ending date of the final week for which <code>weekvar</code> contains non-<code>NA</code> data.</p>
<pre>
SHOW BEGINDATE(weekvar)
SHOW ENDDATE(weekvar)
</pre>
<p>The statements produce this output.</p>
<pre>
31Dec95
06Jul96
</pre>
<p>With these beginning and ending dates, when the data is converted to monthly data, it is aggregated over the months <code>Dec95</code> through <code>Jul96</code>. The following statements show the effects of using the SUM method and the SUM BY DAY method to convert the weekly <code>weekvar</code> data to monthly data.</p>
<pre>
LIMIT month TO 'Jan96' TO 'Jul96'
REPORT HEADING 'Sum' TCONVERT(weekvar month SUM) -
   HEADING 'Sum by Day' -
   TCONVERT(weekvar month SUM BY day)
</pre>
<p>These statements produce the following report.</p>
<pre>
MONTH              Sum    Sum by Day
-------------- ---------- ----------
Jan96               28.00      31.00
Feb96               28.00      29.00
Mar96               35.00      31.00
Apr96               28.00      30.00
May96               28.00      31.00
Jun96               35.00      30.00
Jul96                7.00       6.00
</pre></div>
<!-- class="example" --></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment3088">
<tr>
<td class="cellalignment3095">
<table class="cellalignment3093">
<tr>
<td class="cellalignment3092"><a href="dml_functions_2123.htm"><img width="24" height="24" src="../../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment3092"><a href="dml_functions_2125.htm"><img width="24" height="24" src="../../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;1994, 2013,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment3097">
<table class="cellalignment3091">
<tr>
<td class="cellalignment3092"><a href="../../index.htm"><img width="24" height="24" src="../../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment3092"><a href="../../nav/portal_booklist.htm"><img width="24" height="24" src="../../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment3092"><a href="toc.htm"><img width="24" height="24" src="../../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment3092"><a href="index.htm"><img width="24" height="24" src="../../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment3092"><a href="../../nav/mindx.htm"><img width="24" height="24" src="../../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment3092"><a href="../../dcommon/html/feedback.htm"><img width="24" height="24" src="../../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>
</body>
</html>
