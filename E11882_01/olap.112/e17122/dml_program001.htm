<!DOCTYPE html>
<html lang="en">
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1">
<meta charset="utf-8">
<title>User-Written Programs Looked For by Oracle OLAP</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Version 5.1.2 Build 742" />
<meta name="dcterms.created" content="2013-11-14T21:21:8Z" />
<meta name="robots" content="all" />
<meta name="dcterms.title" content="OLAP DML Reference" />
<meta name="dcterms.identifier" content="E17122-08" />
<meta name="dcterms.isVersionOf" content="OLADM" />
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;1994, 2013,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved." />
<link rel="Start" href="../../index.htm" title="Home" type="text/html" />
<link rel="Copyright" href="../../dcommon/html/cpyr.htm" title="Copyright" type="text/html" />

<script type="application/javascript"  src="../../dcommon/js/headfoot.js"></script>
<script type="application/javascript"  src="../../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html" />
<link rel="Index" href="index.htm" title="Index" type="text/html" />
<link rel="Prev" href="dml_program.htm" title="Previous" type="text/html" />
<link rel="Next" href="dml_functions_1.htm" title="Next" type="text/html" />
<link rel="alternate" href="../e17122.pdf" title="PDF version" type="application/pdf" />
<link rel="schema.dcterms" href="http://purl.org/dc/terms/" />
<link rel="stylesheet" href="../../dcommon/css/fusiondoc.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/header.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/footer.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/fonts.css">
<link rel="stylesheet" href="../../dcommon/css/foundation.css">
<link rel="stylesheet" href="../../dcommon/css/codemirror.css">
<link rel="stylesheet" type="text/css" title="Default" href="../../nav/css/html5.css">
<link rel="stylesheet" href="../../dcommon/css/respond-480-tablet.css">
<link rel="stylesheet" href="../../dcommon/css/respond-768-laptop.css">
<link rel="stylesheet" href="../../dcommon/css/respond-1140-deskop.css">
<script type="application/javascript" src="../../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">140/593</span> <!-- End Header --><a id="CHDFGIHF"></a>
<hr />
<div id="OLADM311" class="refsect1"><!-- infolevel="all" infotype="General" -->
<h1 class="refsect1">User-Written Programs Looked For by Oracle OLAP</h1>
<p>Oracle OLAP looks for the Oracle OLAP programs with the following names and executes them as explained in the topic for each program.</p>
<br />
<a href="#CHDIHFFD">AUTOGO</a><br />
<a href="#i1015357">ONATTACH</a><br />
<a href="#CHDCBAFE">ONDETACH</a><br />
<a href="#i1015611">PERMIT_READ</a><br />
<a href="#i1015926">PERMIT_WRITE</a><br />
<a href="#CEGFHIJE">TRIGGER_AFTER_UPDATE</a><br />
<a href="#CEGEHJCD">TRIGGER_AW</a><br />
<a href="#CEGEHCCI">TRIGGER_BEFORE_UPDATE</a><br />
<a href="#BABIJHCI">TRIGGER_DEFINE</a><br />
<div id="OLADM1434" class="refsect2"><a id="CHDIHFFD"></a>
<hr />
<h2 class="refsect2">AUTOGO</h2>
<p><a id="sthref1337"></a><a id="sthref1338"></a><a id="sthref1339"></a><a id="sthref1340"></a>An AUTOGO program is a program that you can create and that Oracle OLAP checks for by name when an <a href="dml_commands_1015.htm#i1016126">AW ATTACH</a> command executes.</p>
<p>When you attach an analytic workspace that contains a program named AUTOGO, unless the AW ATTACH statement includes an NOAUTOGO clause or an AUTOGO clause that specifies a program with a different name, Oracle OLAP executes the ONATTACH program.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
Oracle OLAP checks for this program and other programs when a user attaches an analytic workspace. See <a href="dml_program.htm#i1020273">"Startup Programs"</a> for more information.</div>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1341"></a>Return Value</p>
<p><code>BOOLEAN</code></p>
<p><code>TRUE</code> when Oracle OLAP has successfully set up and attached the analytic workspace; or <code>FALSE</code> when it has not or when the Autogo program has thrown an exception.</p>
</div>
<!-- class="refsubsect" -->
<div class="infobox-note">
<p class="notep1">Note:</p>
You are encouraged to use the normal return values rather than relying on exceptions to create a return value of <code>FALSE</code>.</div>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1342"></a>Syntax</p>
<p>To define a program with the name <code>AUTOGO</code> use the syntax shown in <a href="dml_commands_1032.htm#i78513">DEFINE PROGRAM</a>. Code the actual program as a user-defined function with the following argument.</p>
<p class="synopsis">AUTOGO (<span class="italic">password</span>)</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1343"></a>Parameters</p>
<p>See <a href="dml_commands_1015.htm#i1016126">AW ATTACH</a> for explanation of <span class="italic">password</span>.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1344"></a>Examples</p>
<p>For examples of how attachment programs behave, see <a href="dml_commands_1015.htm#BABDDFCB">Example 9-50, "Startup Programs"</a>.</p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="OLADM312" class="refsect2"><a id="i1015357"></a>
<hr />
<h2 class="refsect2">ONATTACH</h2>
<p><a id="sthref1345"></a><a id="sthref1346"></a><a id="sthref1347"></a><a id="sthref1348"></a>An ONATTACH program is a program that you can create and that Oracle OLAP checks for by name when an <a href="dml_commands_1015.htm#i1016126">AW ATTACH</a> command executes.</p>
<p>When you attach an analytic workspace that contains a program named ONATTACH, unless the AW ATTACH statement includes an NOONATTACH clause or an ONATTACH clause that specifies a program with a different name, Oracle OLAP executes the ONATTACH program.</p>
<p>Depending on the statements in the <code>onattach</code> program, the user is granted or denied access to specific objects or sets of object values. For multiwriter attachment, you can use <a href="dml_commands_1001.htm#i1021649">ACQUIRE</a> commands to provide access to individual workspace objects. For read-only and read/write attachment, you can use <a href="dml_commands_2026.htm#i79588">PERMIT</a> commands that grant or restrict access to individual workspace objects. All of the objects referred to in a given <code>onattach</code> program must exist in the same analytic workspace.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
Oracle OLAP checks for this program and other programs when a user attaches an analytic workspace. See <a href="dml_program.htm#i1020273">"Startup Programs"</a> for more information.</div>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1349"></a>Return Value</p>
<p><code>BOOLEAN</code></p>
<p><code>TRUE</code> when Oracle OLAP has successfully set up and attached the analytic workspace; or <code>FALSE</code> when it has not or when the <code>onattach</code> program has thrown an exception.</p>
</div>
<!-- class="refsubsect" -->
<div class="infobox-note">
<p class="notep1">Note:</p>
You are encouraged to use the normal return values rather than relying on exceptions to create a return value of <code>FALSE</code>.</div>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1350"></a>Syntax</p>
<p>To define a program with the name <code>ONATTACH</code> use the syntax shown in <a href="dml_commands_1032.htm#i78513">DEFINE PROGRAM</a>. Code the actual program as a user-defined function with the following argument.</p>
<p class="synopsis">ONATTACH ({READ|WRITE|EXCLUSIVE|MULTI} <span class="italic">password</span>)</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1351"></a>Parameters</p>
<p>See <a href="dml_commands_1015.htm#i1016126">AW ATTACH</a> for explanations of the attachment modes (that is, READ, WRITE, EXCLUSIVE, and MULTI) and <span class="italic">password</span>.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1352"></a>Usage Notes</p>
<p class="subhead2"><a id="OLADM1435"></a>ONATTACH Programs Created by the OLAP API</p>
<p>When an analytic workspace is created as an OLAP cube using the OLAP API, the OLAP API may also create a program named ONATTACH. You can <span class="italic">not</span> modify an ONATTACH program that is automatically created in this way. Additionally, overriding the execution of this ONATTACH is not recommended.</p>
<p>Consequently, when this type of ONATTACH program exists in an analytic workspace, create a different type of startup program to specify behavior that you want performed when that analytic workspace is attached.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1353"></a>Examples</p>
<p>For examples of how attachment programs behave, see <a href="dml_commands_1015.htm#BABDDFCB">Example 9-50, "Startup Programs"</a>.</p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="OLADM313" class="refsect2"><a id="CHDCBAFE"></a>
<hr />
<h2 class="refsect2">ONDETACH</h2>
<p><a id="sthref1354"></a><a id="sthref1355"></a><a id="sthref1356"></a>An ONDETACH program is a program that you can create and that Oracle OLAP checks for by name when an <a href="dml_commands_1015.htm#i1016138">AW DETACH</a> command executes. Depending on the value returned by the program, Oracle OLAP executes the code within the program immediately after detaching the analytic workspace.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
Oracle OLAP checks for other programs when a user attaches an analytic workspace. See <a href="dml_program.htm#i1020273">"Startup Programs"</a> for more information.</div>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1357"></a>Return Value</p>
<p><code>BOOLEAN</code></p>
<p><code>TRUE</code> when Oracle OLAP has successfully detached the analytic workspace; or <code>FALSE</code> when it has not or when the <code>detach</code> program has thrown an exception.</p>
</div>
<!-- class="refsubsect" -->
<div class="infobox-note">
<p class="notep1">Note:</p>
You are encouraged to use the normal return values rather than relying on exceptions to create a return value of <code>FALSE</code>.</div>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1358"></a>Syntax</p>
<p>To define a program with the name <code>ONDETACH</code> use the syntax shown in <a href="dml_commands_1032.htm#i78513">DEFINE PROGRAM</a>.</p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="OLADM314" class="refsect2"><a id="i1015611"></a>
<hr />
<h2 class="refsect2">PERMIT_READ</h2>
<p><a id="sthref1359"></a>A PERMIT_READ program is a program that <a id="sthref1360"></a><a id="sthref1361"></a><a id="sthref1362"></a>you can create and that Oracle OLAP checks for by name when an <a href="dml_commands_1015.htm#i1016126">AW ATTACH</a> read-only command executes. Depending on the value returned by the program, Oracle OLAP executes the code within the program after attaching the analytic workspace. Depending on the statements in the <code>permit_read</code> program the user is granted or denied access to specific objects or sets of object values. Within <code>permit_read</code> program, you can specify <a href="dml_commands_2026.htm#i79588">PERMIT</a> commands that grant or restrict access to individual workspace objects. All of the objects referred to in a given <code>permit_read</code> must exist in the same analytic workspace.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
Oracle OLAP checks for this program and other programs when a user attaches an analytic workspace. See <a href="dml_program.htm#i1020273">"Startup Programs"</a> for more information.</div>
<div class="infoboxnotealso">
<p class="notep1">See also:</p>
<a href="dml_options081.htm#i79593">PERMITERROR</a> option, <a href="dml_options082.htm#CHDDHGFC">PERMITREADERROR</a> option, and <a href="#i1015926">PERMIT_WRITE</a> program</div>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1363"></a>Return Value</p>
<p><code>BOOLEAN</code></p>
<p><code>TRUE</code> when Oracle OLAP has successfully set up and attached the analytic workspace; or <code>FALSE</code> when it has not or when the <code>permit_read</code> program has thrown an exception</p>
</div>
<!-- class="refsubsect" -->
<div class="infobox-note">
<p class="notep1">Note:</p>
You are encouraged to use the normal return values rather than relying on exceptions to create a return value of <code>FALSE</code>.</div>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1364"></a>Syntax</p>
<p>To define a program with the name <code>PERMIT_READ</code> use the syntax shown in <a href="dml_commands_1032.htm#i78513">DEFINE PROGRAM</a>. Code the actual program as a user-defined function with the following argument.</p>
<p class="synopsis">PERMIT_READ (<span class="italic">password</span>)</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1365"></a>Parameters</p>
<p>See <a href="dml_commands_1015.htm#i1016126">AW ATTACH</a> for an explanation of <span class="italic">password</span>. When a user specifies a password when attaching the analytic workspace, then the password is passed as an argument to the program for processing.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1366"></a>Examples</p>
<p>To see the order in which permission programs are executed when an analytic workspace is attached, see <a href="dml_commands_1015.htm#BABDDFCB">Example 9-50, "Startup Programs"</a>.</p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="OLADM315" class="refsect2"><a id="i1015926"></a>
<hr />
<h2 class="refsect2">PERMIT_WRITE</h2>
<p><a id="sthref1367"></a>A PERMIT_WRITE program <a id="sthref1368"></a><a id="sthref1369"></a><a id="sthref1370"></a>is a program that you can create and that Oracle OLAP checks for by name when an <a href="dml_commands_1015.htm#i1016126">AW ATTACH</a> read/write command executes. Depending on the value returned by the program, Oracle OLAP executes the code within the program after attaching the analytic workspace. Depending on the statements in the <code>permit_write</code> program, the user is granted or denied access to specific objects or sets of object values. Within <code>permit_write</code> program, you can specify <a href="dml_commands_2026.htm#i79588">PERMIT</a> commands that grant or restrict access to individual workspace object. All of the objects referred to in a given <code>permit_write</code> program must exist in the same analytic workspace.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
Oracle OLAP checks for this program and other programs when a user attaches an analytic workspace. See <a href="dml_program.htm#i1020273">"Startup Programs"</a> for more information.</div>
<div class="infoboxnotealso">
<p class="notep1">See also:</p>
<a href="dml_options081.htm#i79593">PERMITERROR</a> option, <a href="dml_options082.htm#CHDDHGFC">PERMITREADERROR</a> option, and <a href="#i1015611">PERMIT_READ</a> program</div>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1371"></a>Return Value</p>
<p><code>BOOLEAN</code></p>
<p><code>TRUE</code> when Oracle OLAP has successfully set up and attached the analytic workspace; or <code>FALSE</code> when it has not or when the <code>permit_write</code> program has thrown an exception</p>
</div>
<!-- class="refsubsect" -->
<div class="infobox-note">
<p class="notep1">Note:</p>
You are encouraged to use the normal return values rather than relying on exceptions to create a return value of <code>FALSE</code>.</div>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1372"></a>Syntax</p>
<p>To define a program with the name <code>PERMIT_WRITE</code> use the syntax shown in <a href="dml_commands_1032.htm#i78513">DEFINE PROGRAM</a>. Code the actual program as a user-defined function with the following argument.</p>
<p class="synopsis">PERMIT_WRITE (<span class="italic">password</span>)</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1373"></a>Parameters</p>
<p>See <a href="dml_commands_1015.htm#i1016126">AW ATTACH</a> for an explanation of <span class="italic">password</span>. When a user specifies a password when attaching the analytic workspace, then the password is passed as an argument to the program for processing.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1374"></a>Examples</p>
<p>To see the order in which permission programs are executed when an analytic workspace is attached, see <a href="dml_commands_1015.htm#BABDDFCB">Example 9-50, "Startup Programs"</a>.</p>
</div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="OLADM316" class="refsect2"><a id="CEGFHIJE"></a>
<hr />
<h2 class="refsect2">TRIGGER_AFTER_UPDATE</h2>
<p><a id="sthref1375"></a><a id="sthref1376"></a><a id="sthref1377"></a><a id="sthref1378"></a><a id="sthref1379"></a><a id="sthref1380"></a>A <a id="sthref1381"></a><a id="sthref1382"></a><a id="sthref1383"></a>TRIGGER_AFTER_UPDATE program is a program that you can create in an analytic workspace and that Oracle OLAP checks for by name when an <a href="dml_commands_2069.htm#i79209">UPDATE</a> command for that analytic workspace executes. When the program exists in the same analytic workspace that you are updating, Oracle OLAP executes the program after executing the UPDATE.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
The <a href="dml_options104.htm#BABHEIJA">USETRIGGERS</a> option must be set to its default value of <code>TRUE</code> for a TRIGGER_AFTER_UPDATE program to execute</div>
<div class="infoboxnotealso">
<p class="notep1">See also:</p>
<a href="dml_program.htm#CHDBDIIH">"Trigger Programs"</a>.</div>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1384"></a>Syntax</p>
<p>To create a program with the name <code>TRIGGER_AFTER_UPDATE</code>, follow the guidelines presented in <a href="dml_program.htm#CHDBDIIH">"Trigger Programs"</a>.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1385"></a>Examples</p>
<div id="OLADM1436" class="example">
<p class="titleinexample"><a id="CEGFDICG"></a>Example 6-1 TRIGGER_AFTER_UPDATE Program</p>
<p>Assume you have defined the following program in your analytic workspace.</p>
<pre>
DEFINE TRIGGER_AFTER_UPDATE PROGRAM
PROGRAM
SHOW JOINCHARS ('calltype = ' CALLTYPE)
SHOW JOINCHARS ('triggering event = ' TRIGGER(EVENT))
SHOW JOINCHARS ('triggering subevent = ' TRIGGER(SUBEVENT))
END
 
</pre>
<p>When you issue an UPDATE statement the program executes and displays the following output.</p>
<pre>
calltype = TRIGGER
triggering event = AFTER_UPDATE
triggering subevent = AW
</pre></div>
<!-- class="example" --></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="OLADM317" class="refsect2"><a id="CEGEHJCD"></a>
<hr />
<h2 class="refsect2">TRIGGER_AW</h2>
<p><a id="sthref1386"></a><a id="sthref1387"></a><a id="sthref1388"></a><a id="sthref1389"></a><a id="sthref1390"></a></p>
<p>A TRIGGER_AW program is a program that you can create in one analytic workspace and that Oracle OLAP checks for by name when that analytic workspace is current and you create, attach, detach, or delete any other analytic workspace.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
Oracle OLAP checks for this program and other programs when a user attaches an analytic workspace. See <a href="dml_program.htm#i1020273">"Startup Programs"</a> for more information.</div>
<div class="infoboxnotealso">
<p class="notep1">See also:</p>
<a href="dml_program.htm#CHDBDIIH">"Trigger Programs"</a>.</div>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1391"></a>Return Value</p>
<p>None.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1392"></a>Syntax</p>
<p>To create a program with the name <code>TRIGGER_AW</code>, follow the guidelines presented in<a href="#CHDHDDIB">"How to Create a TRIGGER_AW Program"</a>.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1393"></a>Usage Notes</p>
<p class="subhead2"><a id="CHDHDDIB"></a><a id="OLADM1437"></a>How to Create a TRIGGER_AW Program</p>
<p>You create a TRIGGER_AW program by following the following procedure:</p>
<ol>
<li>
<p>Define the program as described in DEFINE PROGRAM.</p>
</li>
<li>
<p>Name the program TRIGGER_AW.</p>
</li>
<li>
<p>Code the actual program as described in<a href="dml_program.htm#BABFDEFF">"Specifying Program Contents"</a>.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
There is no support for recursive triggers. You must set the USETRIGGERS option to <code>NO</code> before you issue an AW statement <span class="italic">within</span> an TRIGGER_AW program</div>
</li>
</ol>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1394"></a>Examples</p>
<div id="OLADM1438" class="example">
<p class="titleinexample"><a id="sthref1395"></a>Example 6-2 A TRIGGER_AW Program</p>
<p>Assume that you have defined a program with the following definition in an analytic workspace named <code>my_aw</code>.</p>
<pre>
DEFINE TRIGGER_AW PROGRAM
PROGRAM
SHOW CALLTYPE
SHOW TRIGGER(EVENT)
SHOW TRIGGER(SUBEVENT)
SHOW TRIGGER(NAME)
END
</pre>
<p>When attach the <code>my_aw</code> workspace, the specified values are displayed.</p>
<pre>
AW ATTACH MY_AW

TRIGGER
AW
ATTACH
MY_AW 
</pre></div>
<!-- class="example" --></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="OLADM318" class="refsect2"><a id="CEGEHCCI"></a>
<hr />
<h2 class="refsect2">TRIGGER_BEFORE_UPDATE</h2>
<p><a id="sthref1396"></a><a id="sthref1397"></a><a id="sthref1398"></a><a id="sthref1399"></a><a id="sthref1400"></a><a id="sthref1401"></a><a id="sthref1402"></a>A TRIGGER_BEFORE_UPDATE program is a program that you can create and that Oracle OLAP checks for by name when an <a href="dml_commands_2069.htm#i79209">UPDATE</a> command executes. When the program exists in the same analytic workspace that you are updating, Oracle OLAP executes the program and then, depending on the value returned by the program (if any), either does nor does not update the workspace.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
The <a href="dml_options104.htm#BABHEIJA">USETRIGGERS</a> option must be set to its default value of <code>TRUE</code> for a TRIGGER_BEFORE_UPDATE program to execute</div>
<div class="infoboxnotealso">
<p class="notep1">See also:</p>
<a href="dml_program.htm#CHDBDIIH">"Trigger Programs"</a>.</div>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1403"></a>Return Value</p>
<p>You can write the program as a function that returns a <code>BOOLEAN</code> value. In this case, when the program returns FALSE, Oracle OLAP does not execute the UPDATE statement that triggered the execution of the TRIGGER_BEFORE_UPDATE program; when the program returns <code>TRUE</code> or <code>NA</code>, the UPDATE statement executes.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1404"></a>Syntax</p>
<p>To create a program with the name <code>TRIGGER_UPDATE</code>, follow the guidelines presented in<a href="dml_program.htm#CHDBDIIH">"Trigger Programs"</a>.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1405"></a>Examples</p>
<div id="OLADM1439" class="example">
<p class="titleinexample"><a id="CEGCBCAB"></a>Example 6-3 TRIGGER_BEFORE_UPDATE Program</p>
<p>Assume that an analytic workspace named <code>myaw</code> has an TRIGGER_BEFORE_UPDATE program with the following definition.</p>
<pre>
DEFINE TRIGGER_BEFORE_UPDATE PROGRAM BOOLEAN
PROGRAM
SHOW JOINCHARS ('calltype = ' CALLTYPE)
SHOW JOINCHARS ('triggering event = ' TRIGGER(EVENT))
SHOW JOINCHARS ('triggering subevent = ' TRIGGER(SUBEVENT))
RETURN TRUE
END
 
</pre>
<p>Assume that you define a <code>TEXT</code> variable named <code>myvar</code> and, then, issue an UPDATE statement. The TRIGGER_BEFORE_UPDSATE program executes.</p>
<pre>
calltype = TRIGGER
triggering event = BEFORE_UPDATE
triggering subevent = AW
</pre>
<p>Because the program returned TRUE, the definition for <code>myva</code>r exists after you detach and reattach the workspace.</p>
<pre>
AW DETACH myaw
AW ATTACH myaw
DESCRIBE

DEFINE TRIGGER_BEFORE_UPDATE PROGRAM BOOLEAN
PROGRAM
SHOW JOINCHARS ('calltype = ' CALLTYPE)
SHOW JOINCHARS ('triggering event = ' TRIGGER(EVENT))
SHOW JOINCHARS ('triggering subevent = ' TRIGGER(SUBEVENT))
RETURN TRUE
END
 
DEFINE MYVAR VARIABLE TEXT
</pre>
<p>However, if you modified the program so that it returned <code>FALSE</code>, then when you detach and reattach the workspace, not only would the <code>myva</code>r definition not in the workspace, the definition for the TRIGGER_BEFORE_UPDATE program would also not be in the workspace.</p>
</div>
<!-- class="example" --></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" -->
<div id="OLADM319" class="refsect2"><a id="BABIJHCI"></a>
<hr />
<h2 class="refsect2">TRIGGER_DEFINE</h2>
<p><a id="sthref1406"></a><a id="sthref1407"></a><a id="sthref1408"></a><a id="sthref1409"></a><a id="sthref1410"></a><a id="sthref1411"></a><a id="sthref1412"></a>A TRIGGER_DEFINE program is a program that you create and that Oracle OLAP checks for by name when a <a href="dml_commands_1032.htm#i78478">DEFINE</a> command executes. When the program exists in the same analytic workspace in which you are defining a new object, Oracle OLAP executes the program.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
The <a href="dml_options104.htm#BABHEIJA">USETRIGGERS</a> option must be set to its default value of <code>TRUE</code> for a TRIGGER_DEFINE program to execute</div>
<div class="infoboxnotealso">
<p class="notep1">See also:</p>
<a href="dml_program.htm#CHDBDIIH">"Trigger Programs"</a>.</div>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1413"></a>Syntax</p>
<p>To create a program with the name <code>TRIGGER_DEFINE</code>, follow the guidelines presented in <a href="dml_program.htm#CHDBDIIH">"Trigger Programs"</a>.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="sthref1414"></a>Examples</p>
<div id="OLADM1440" class="example">
<p class="titleinexample"><a id="CEGDICCB"></a>Example 6-4 A TRIGGER_DEFINE Program</p>
<p>Assume that you have written a TRIGGER_DEFINE program with the following description in your analytic workspace.</p>
<pre>
DEFINE TRIGGER_DEFINE PROGRAM
PROGRAM
SHOW JOINCHARS ('calltype = ' CALLTYPE)
SHOW JOINCHARS ('triggering event = ' TRIGGER(EVENT))
SHOW JOINCHARS ('fully qualified object name ='TRIGGER(NAME))
SHOW JOINCHARS ('type of object = 'OBJ(TYPE TRIGGER(NAME))
DESCRIBE &amp;TRIGGER(NAME)
END
</pre>
<p>Assume, as shown in the following statements, that you issue a DEFINE VARIABLE statement to define a variable named <code>myvar</code>. As shown by the output following the statement, Oracle OLAP defines the variable and executes the TRIGGER_DEFINE program.</p>
<pre>
DEFINE myvar VARIABLE TEXT
calltype = TRIGGER
triggering event = DEFINE
fully qualified object name =MYAW!MYVAR
type of object = VARIABLE
 
DEFINE MYVAR VARIABLE TEXT
</pre></div>
<!-- class="example" --></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect2" --></div>
<!-- class="refsect1" --></div>
<!-- class="refentry" -->
<!-- class="chapter" -->
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment3088">
<tr>
<td class="cellalignment3095">
<table class="cellalignment3093">
<tr>
<td class="cellalignment3092"><a href="dml_program.htm"><img width="24" height="24" src="../../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment3092"><a href="dml_functions_1.htm"><img width="24" height="24" src="../../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;1994, 2013,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment3097">
<table class="cellalignment3091">
<tr>
<td class="cellalignment3092"><a href="../../index.htm"><img width="24" height="24" src="../../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment3092"><a href="../../nav/portal_booklist.htm"><img width="24" height="24" src="../../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment3092"><a href="toc.htm"><img width="24" height="24" src="../../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment3092"><a href="index.htm"><img width="24" height="24" src="../../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment3092"><a href="../../nav/mindx.htm"><img width="24" height="24" src="../../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment3092"><a href="../../dcommon/html/feedback.htm"><img width="24" height="24" src="../../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>
</body>
</html>
