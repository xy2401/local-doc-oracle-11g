<!DOCTYPE html>
<html lang="en">
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1">
<meta charset="utf-8">
<title>Data Objects</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Version 5.1.2 Build 748" />
<meta name="dcterms.created" content="2014-03-05T2:31:2Z" />
<meta name="robots" content="all" />
<meta name="dcterms.title" content="Warehouse Builder Concepts" />
<meta name="dcterms.identifier" content="E10581-06" />
<meta name="dcterms.isVersionOf" content="WBCON" />
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;2000, 2014,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved." />
<link rel="Start" href="../../index.htm" title="Home" type="text/html" />
<link rel="Copyright" href="../../dcommon/html/cpyr.htm" title="Copyright" type="text/html" />

<script type="application/javascript"  src="../../dcommon/js/headfoot.js"></script>
<script type="application/javascript"  src="../../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html" />
<link rel="Index" href="index.htm" title="Index" type="text/html" />
<link rel="Glossary" href="glossary.htm" title="Glossary" type="text/html" />
<link rel="Prev" href="sourcetargs.htm" title="Previous" type="text/html" />
<link rel="Next" href="datatransform.htm" title="Next" type="text/html" />
<link rel="alternate" href="../e10581.pdf" title="PDF version" type="application/pdf" />
<link rel="schema.dcterms" href="http://purl.org/dc/terms/" />
<link rel="stylesheet" href="../../dcommon/css/fusiondoc.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/header.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/footer.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/fonts.css">
<link rel="stylesheet" href="../../dcommon/css/foundation.css">
<link rel="stylesheet" href="../../dcommon/css/codemirror.css">
<link rel="stylesheet" type="text/css" title="Default" href="../../nav/css/html5.css">
<link rel="stylesheet" href="../../dcommon/css/respond-480-tablet.css">
<link rel="stylesheet" href="../../dcommon/css/respond-768-laptop.css">
<link rel="stylesheet" href="../../dcommon/css/respond-1140-deskop.css">
<script type="application/javascript" src="../../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">10/19</span> <!-- End Header -->
<div id="WBCON4490" class="chapter"><a id="sthref403"></a>
<h1 class="chapter"><span class="secnum">5</span> Data Objects</h1>
<p>The data in the data system that you implement with Oracle Warehouse Builder is stored in target schemas. This data is in the form of data objects such as tables, views, dimensional objects, and cubes. This section discusses relational and dimensional data objects that you design for your target system, and business intelligence objects for analytical views.</p>
<p>This section contains these topics:</p>
<ul>
<li>
<p><a href="#BCGEIAHA">"Types of Data Objects"</a></p>
</li>
<li>
<p><a href="#CIHCCFAF">"Dimensional Objects: Dimensions and Cubes"</a></p>
</li>
<li>
<p><a href="#BEIIDJJC">"Relational Dimensions"</a></p>
</li>
<li>
<p><a href="#BEIEDBGG">"Slowly Changing Dimensions (SCDs)"</a></p>
</li>
<li>
<p><a href="#CIHEBAIF">"Time Dimensions"</a></p>
</li>
<li>
<p><a href="#CIHEGHCH">"Cubes: Measures and Dimensionality"</a></p>
</li>
</ul>
<a id="BCGEIAHA"></a>
<div id="WBCON04369" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Types of Data Objects</h2>
<p>Oracle Warehouse Builder uses <a id="sthref404"></a>relational and dimensional data objects and <a id="sthref405"></a>intelligence objects as follows:</p>
<ul>
<li>
<p>Relational objects rely on tables and table-derived objects to store and link all of their data. Relational objects include tables, views, materialized views, and sequences.</p>
</li>
<li>
<p>Dimensional objects contain additional metadata to identify and categorize your data. Dimensional objects include dimensions and cubes.</p>
</li>
<li>
<p><a id="sthref406"></a>Intelligence objects enable you to store definitions of business views. You can deploy these definitions to <a id="sthref407"></a><a id="sthref408"></a>Oracle Business Intelligence Suite Enterprise Edition (OBI EE). In Oracle Warehouse Builder, intelligence objects are displayed under the <a id="sthref409"></a>Business Intelligence node in the Project Navigator.</p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p>"Designing Source and Target Schemas" in <a class="olink WBETL01000" href="../../owb.112/e10935/design_tgt_schemas.htm#WBETL01000"><span class="italic">Oracle Warehouse Builder Data Modeling, ETL, and Data Quality Guide.</span></a></p>
</li>
<li>
<p>"Overview of Data Objects" in <a class="olink WBETL02017" href="../../owb.112/e10935/orcl_data_objx.htm#WBETL02017"><span class="italic">Oracle Warehouse Builder Data Modeling, ETL, and Data Quality Guide</span></a> for a complete list and discussion of the data objects that you can use in Oracle Warehouse Builder, and the data types that you can use and create.</p>
</li>
<li>
<p>"Defining Business Intelligence Objects" in <a class="olink WBDOD" href="../e10582/toc.htm"><span class="italic">Oracle Warehouse Builder Sources and Targets Guide</span></a>.</p>
</li>
</ul>
</div>
<a id="CIHFBBGD"></a>
<div id="WBCON4491" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Data Object Editors<a id="sthref410"></a></h3>
<p>Oracle Warehouse Builder provides contextual <a id="sthref411"></a>data object editors to create, edit, configure, validate, and deploy Oracle data objects. The data object editors work with relational, dimensional, and business intelligence objects.</p>
<p>Use data object editors to:</p>
<ul>
<li>
<p>Create, edit, and delete relational and dimensional objects.</p>
</li>
<li>
<p>Create, edit, and delete the following business intelligence objects: Business Areas and Item Folders.</p>
</li>
<li>
<p>Define relationships between Oracle data objects.</p>
</li>
<li>
<p>Validate, generate, and deploy Oracle data objects.</p>
</li>
<li>
<p>Define and edit all aspects of a data object such as its columns, constraints, indexes, partitions, data rules, and attribute sets.</p>
</li>
<li>
<p>Define implementation details for dimensional objects with a relational implementation.</p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="apx_editors.htm#CHDECADI">"Data Object and Document Editors"</a> in this guide</p>
</li>
<li>
<p><a class="olink WBETL01005" href="../../owb.112/e10935/design_tgt_schemas.htm#WBETL01005">"Validating Data Objects"</a> and <a class="olink WBETL01006" href="../../owb.112/e10935/design_tgt_schemas.htm#WBETL01006">"Generating Data Objects"</a> in <a class="olink WBETL" href="../e10935/toc.htm"><span class="italic">Oracle Warehouse Builder Data Modeling, ETL, and Data Quality Guide</span></a>.</p>
</li>
</ul>
</div>
</div>
<!-- class="sect2" -->
<a id="CIHCIGCE"></a>
<div id="WBCON4492" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><a id="sthref412"></a>Data Viewers</h3>
<p>Oracle Warehouse Builder Data Viewers are available for dimensions and cubes, and relational objects (tables, views, materialized views, sequences, external tables and so forth). The dimension and cube Data Viewers enable interactive, logical-level browsing of the contents of these objects at a logical level, regardless of the details of the underlying physical storage. The <a id="sthref413"></a>dimension Data Viewer lets you browse and drill into the dimension members organized by hierarchy and level. The <a id="sthref414"></a>cube Data Viewer enables interactive browsing of the contents of the cube, and pivoting and drilling down into the data along any dimension.</p>
<p>To access a Data Viewer, from the Projects Navigator, right-click a data object and select <span class="bold">Data</span>.</p>
<p>By default, the Data Viewer for the selected object displays the first hundred rows of data. To retrieve the next set of rows, click <span class="bold">Get More</span>. Alternatively, you can click <span class="bold">More</span> to perform the same action. The columns and column names displayed in the Data Viewer are taken directly from the location in which the actual table is deployed.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
"Using the Data Viewer to View Data Stored in Data Objects" in <a class="olink WBETL01002" href="../../owb.112/e10935/orcl_data_objx.htm#WBETL01002"><span class="italic">Oracle Warehouse Builder Data Modeling, ETL, and Data Quality Guide.</span></a></div>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="CIHCCFAF"></a>
<div id="WBCON4493" class="sect1">
<h2 class="sect1">Dimensional Objects: Dimensions and Cubes</h2>
<p>The term <span class="bold">dimensional object</span> refers to both <a id="sthref415"></a>dimensions and cubes. Oracle Warehouse Builder provides wizards to create and maintain dimensions by answering simple questions. Oracle Warehouse Builder supports two types of <a id="sthref416"></a>dimensional objects:</p>
<ul>
<li>
<p><span class="bold">Dimensions</span>, discussed under <a href="#BABHDAHE">"About Creating and Using Cubes and Dimensions"</a> in this guide.</p>
</li>
<li>
<p><span class="bold">Cubes</span>, discussed under <a href="#CIHEGHCH">"Cubes: Measures and Dimensionality"</a> in this guide.</p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
"Defining Dimensional Objects" in <a class="olink WBETL03000" href="../../owb.112/e10935/dim_objects.htm#WBETL03000"><span class="italic">Oracle Warehouse Builder Data Modeling, ETL, and Data Quality Guide</span></a> for complete procedures.</div>
<div id="WBCON4494" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref417"></a>
<h3 class="sect2"><a id="sthref418"></a>ROLAP versus <a id="sthref419"></a>MOLAP Implementations</h3>
<p>Oracle Warehouse Builder separates the logical design of dimensional objects from their storage. The logical design, which consists of business rules, first focuses on the structure and the content of the dimensional object. You can then choose to store the dimensional object in a <a id="sthref420"></a>relational ROLAP or an <a id="sthref421"></a>analytic MOLAP implementation.</p>
<ul>
<li>
<p><a id="sthref422"></a><a id="sthref423"></a>ROLAP and relational implementations store the dimensional object in a relational schema in the database.</p>
</li>
<li>
<p><a id="sthref424"></a>A MOLAP implementation stores the dimensional object in analytic workspaces in the database.</p>
</li>
</ul>
<p>Oracle Warehouse Builder enables you to use the same metadata to create and manage both your relational and multidimensional data stores. Separating the logical design from the physical implementation has the advantage of making design of ETL logic transparent. Regardless of the physical storage implementation, the logic for loading dimensions and cubes is identical.</p>
<p class="subhead2"><a id="WBCON4495"></a><a id="sthref425"></a>Uses for OLAP</p>
<p><a id="sthref426"></a>Dimensional objects provide complex analytic power to your data warehouse. After you load data into dimensional objects, you can run complex analytical queries that answer your business questions. These analytic queries include time-series analysis, inter-row calculations, access to aggregated historical and current data, and forecasts. Multidimensional objects are more effective in answering these types of queries quickly.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
"ROLAP Implementation of Dimensional Objects" and "MOLAP Implementation of Dimensional Objects" under "Overview of Implementing Dimensional Objects" in <a class="olink WBETL03009" href="../../owb.112/e10935/dim_objects.htm#WBETL03009"><span class="italic">Oracle Warehouse Builder Data Modeling, ETL, and Data Quality Guide</span></a>.</div>
</div>
<!-- class="sect2" -->
<a id="BABHDAHE"></a>
<div id="WBCON4496" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">About Creating and Using Cubes and Dimensions</h3>
<p>A <a href="glossary.htm#BGBFDGDF"><span class="xrefglossterm">dimension</span></a> consists of a set of levels and a set of hierarchies defined over these levels. Working with cubes and dimensional objects consists of four high-level processes:</p>
<ol>
<li>
<p><a href="#CACIHJHA">"Dimension Creation"</a></p>
</li>
<li>
<p><a href="#CHDIGDBB">"Dimension Implementation"</a></p>
</li>
<li>
<p><a href="#CHDHCGHF">"Dimension Deployment"</a></p>
</li>
<li>
<p><a href="#CIHEGFFH">"Dimension Loading"</a></p>
</li>
</ol>
<a id="CACIHJHA"></a>
<div id="WBCON4497" class="sect3">
<h4 class="sect3">Dimension Creation</h4>
<p>When you define dimensional objects such as cubes, you describe the logical relationships that help store data in a more structured format. For example, to define a dimension, you describe its attributes, levels, and hierarchies.</p>
<p>Oracle Warehouse Builder provides the following two methods to define dimensions:</p>
<ul>
<li>
<p><span class="bold"><a id="sthref427"></a>Create Dimension Wizard:</span> Creates a fully functional dimensional object along with implementation objects that store the dimension data. Provides default settings for the most common values. Use this wizard when you want to quickly create a dimension without manually specifying settings.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
"Defaults Used By the Create Dimension Wizard" under "Creating Dimensions" in <a class="olink WBETL03003" href="../../owb.112/e10935/dim_objects.htm#WBETL03003"><span class="italic">Oracle Warehouse Builder Data Modeling, ETL, and Data Quality Guide</span></a>.</div>
</li>
<li>
<p><span class="bold"><a id="sthref428"></a>Dimension Editor:</span> Use editors to create or edit dimensional objects. Use editors to create a dimensional object when you want to specify settings that are different from the default settings used by the wizards. Also use editors to create dimensional objects that use certain advanced options that are not available when you use wizards. For example, to create a relational dimension that uses a snowflake schema implementation, you must use the editor. When you use the wizard, the default implementation method used is the star schema. However, you can edit a dimension that you created using the Create Dimension Wizard and modify it to use a snowflake schema implementation.</p>
</li>
</ul>
</div>
<!-- class="sect3" -->
<a id="CHDIGDBB"></a>
<div id="WBCON4498" class="sect3">
<h4 class="sect3"><a id="sthref429"></a><a id="sthref430"></a><a id="sthref431"></a>Dimension Implementation</h4>
<p>To implement a dimension is to create the physical structure of the dimensional object. Oracle Warehouse Builder provides the following implementations for dimensions:</p>
<ul>
<li>
<p><a href="#CIHCCIJE">"Relational Implementation of Dimensions"</a></p>
</li>
<li>
<p><a href="#BABDGBEF">"ROLAP Implementation of Dimensional Objects"</a></p>
</li>
<li>
<p><a href="#CIHFDJCB">"MOLAP Implementation of Dimensional Objects"</a></p>
</li>
</ul>
<div class="infobox-note">
<p class="notep1">Note:</p>
To use a MOLAP implementation, you must have the following software installed:
<ul>
<li>
<p>Oracle Database 11<span class="italic">g</span> Enterprise Edition with the <a id="sthref432"></a>OLAP option</p>
</li>
<li>
<p>OLAP 10.1.0.4 or higher</p>
</li>
</ul>
</div>
<p>You set the <a id="sthref433"></a>Deployment Option configuration property to specify the type of implementation for a dimensional object. For more information on setting this property, see "Configuring Dimensions" and "Configuring Cubes" in Oracle Warehouse Builder Help.</p>
<a id="CIHCCIJE"></a>
<div id="WBCON4499" class="sect4">
<h5 class="sect4">Relational Implementation of Dimensions</h5>
<p>The dimensional data is stored in implementation objects that are typically tables. For relational dimensions, Oracle Warehouse Builder can use a star schema, a snowflake schema, or a manual schema to store the implementation objects.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#CHDFCIDE">"Star Schema"</a> and <a href="#CHDEIFFC">"Snowflake Schema"</a> in this guide.</div>
</div>
<!-- class="sect4" -->
<a id="BABDGBEF"></a>
<div id="WBCON4504" class="sect4">
<h5 class="sect4">ROLAP Implementation of Dimensional Objects</h5>
<p>In addition to creating DDL scripts that can be deployed to a database, a ROLAP implementation enables you to create CWM2 metadata for the dimensional object in the OLAP catalog.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#CIHJDBGE">"About the OLAP Catalog"</a> in this guide.</div>
</div>
<!-- class="sect4" -->
<a id="CIHFDJCB"></a>
<div id="WBCON4505" class="sect4">
<h5 class="sect4">MOLAP Implementation of Dimensional Objects</h5>
<p>The dimension data is stored in an <a href="glossary.htm#BGBJGHEG"><span class="xrefglossterm">analytic workspace</span></a> in Oracle Database 11<span class="italic">g</span>. This analytic workspace, in turn, is stored in the database.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink OLAUG" href="../../olap.112/e17123/toc.htm"><span class="italic">Oracle OLAP User's Guide</span></a> for more information about analytic workspaces.</div>
</div>
<!-- class="sect4" --></div>
<!-- class="sect3" -->
<a id="CHDHCGHF"></a>
<div id="WBCON4509" class="sect3">
<h4 class="sect3">Dimension Deployment</h4>
<p>To instantiate the dimensional objects in the database, you must deploy them. To specify the type of implementation for dimensional objects, you set the deployment option. The configuration parameter Deployment Options enables you to set the deployment option.</p>
<p>Oracle Warehouse Builder provides the following <a id="sthref434"></a>deployment options for dimensional objects.</p>
<ul>
<li>
<p><span class="bold">Deploy All:</span> For a relational or ROLAP implementation, the dimensional object is deployed to the database and a CWM definition to the OLAP catalog. For a MOLAP implementation, the dimensional object is deployed to the analytic workspace.</p>
</li>
<li>
<p><span class="bold">Deploy Data Objects Only:</span> Deploys the dimensional object only to the database. You can select this option only for dimensional objects that use a relational implementation.</p>
</li>
<li>
<p><span class="bold">Deploy to Catalog Only:</span> Deploys the CWM definition to the OLAP catalog only. Use this option if you want applications such as Oracle Business Intelligence Enterprise Edition to access the dimensional object data after you deploy data only. Use this option if you previously deployed with "Data Objects Only" and now want to deploy the CWM Catalog definitions without re-deploying the data objects again.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#CIHJDBGE">"About the OLAP Catalog"</a> in this guide.</div>
</li>
<li>
<p><span class="bold">Deploy Aggregation:</span> Deploys the aggregations defined on the cube measures. This option is available only for cubes.</p>
</li>
</ul>
<p class="subhead2"><a id="WBCON4510"></a>Deploying Dimensional Objects that Use a MOLAP Implementation</p>
<p>Dimensional objects that use a MOLAP implementation can be deployed just after you define them. You can use the Design Center or the Control Center Manager to deploy a dimensional object.</p>
<p class="subhead2"><a id="WBCON4511"></a>Deploying Dimensional Objects that Use a Relational or ROLAP Implementation</p>
<p>Before you deploy a relational or ROLAP dimensional object, ensure that the implementation details are specified. It means that the dimensional object should be bound to its implementation objects. Also ensure that the dimensional object is valid.</p>
<p>After you perform binding, deploy the dimensional object. Before you deploy a dimensional object, ensure that all its implementation objects are deployed. For a dimension, this includes the sequence that is used to generate the surrogate identifier of the dimension levels. Alternatively, you can deploy the implementation objects with the dimensional object.</p>
</div>
<!-- class="sect3" -->
<a id="CIHEGFFH"></a>
<div id="WBCON4512" class="sect3">
<h4 class="sect3"><a id="sthref435"></a>Dimension Loading</h4>
<p>After you deploy a dimension, you load data into it by creating a mapping. Use the Mapping Editor to create the mapping, which loads data from the source objects into the dimensional object. You then deploy and execute this mapping.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
"Dimension Operator as a Target" and "Cube Operator" in Oracle Warehouse Builder Help for more information on loading dimensions and cubes</div>
</div>
<!-- class="sect3" -->
<a id="CIHJDBGE"></a>
<div id="WBCON4507" class="sect3">
<h4 class="sect3">About the OLAP Catalog</h4>
<p>The <a id="sthref436"></a>OLAP catalog is the metadata repository provided for the OLAP option in the Oracle Database. This metadata describes the data stored in both relational tables and in analytic workspaces.</p>
<p>When you deploy a dimensional object using Oracle Warehouse Builder, you can specify if the dimensional object metadata should be stored in the OLAP catalog.</p>
<p><a id="sthref437"></a>OLAP metadata is dynamically projected through a series of views called the active catalog views (views whose names begin with <a id="sthref438"></a>ALL_OLAP2_AW).</p>
<p>In Oracle Database 11<span class="italic">g</span>, the OLAP catalog metadata is used by OLAP tools and applications to access data stored in relational star and snowflake schemas. External application such as Oracle Business Intelligence Enterprise Edition use the OLAP catalog to query relational and multidimensional data. The application must not be aware of whether the data is located in relational tables or in analytic workspaces, nor does it require to know the mechanism for accessing it.</p>
<p><a href="#CIHJEGBD">Figure 5-1</a> describes how the OLAP catalog enables applications to access data stored in relational tables and analytic workspaces.</p>
<div id="WBCON4508" class="figure">
<p class="titleinfigure"><a id="CIHJEGBD"></a>Figure 5-1 Using the OLAP Catalog to Access Dimensional Objects</p>
<img width="437" height="325" src="img/olap_catalog_access.gif" alt="Description of Figure 5-1 follows" /><br />
<a id="sthref439" href="img_text/olap_catalog_access.htm">Description of "Figure 5-1 Using the OLAP Catalog to Access Dimensional Objects"</a><br />
<br /></div>
<!-- class="figure" -->
<p>The OLAP catalog uses the metadata it stores to access data stored in relational tables or views. The OLAP catalog defines logical multidimensional objects and maps them to the physical data sources. The logical objects are dimensions and cubes. The physical data sources are columns of a relational table or view.</p>
</div>
<!-- class="sect3" -->
<a id="BCGBJCDG"></a>
<div id="WBCON4513" class="sect3">
<h4 class="sect3"><a id="sthref440"></a><a id="sthref441"></a>Orphan Management Policy for Dimensions</h4>
<p>The orphan management policy in Oracle Warehouse Builder enables you to manage orphan records in dimensions and cubes. An orphan record is one that does not have a corresponding, existing parent record.</p>
<p>Orphan records can occur when:</p>
<ul>
<li>
<p>A record that is loaded into a dimensional object does not have a corresponding parent record.</p>
</li>
<li>
<p>A record is deleted from a dimensional object. This could result in the child records of the deleted record not having an existing parent record.</p>
</li>
</ul>
<p>Oracle Warehouse Builder enables you to specify a different orphan management policy for loading dimensional data and removing dimensional data.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
"Orphan Management for Dimensional Objects" under "Overview of Cubes" in <a class="olink WBETL03002" href="../../owb.112/e10935/dim_objects.htm#WBETL03002"><span class="italic">Oracle Warehouse Builder Data Modeling, ETL, and Data Quality Guide.</span></a></div>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="BEIIDJJC"></a>
<div id="WBCON4517" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1"><a id="sthref442"></a>Relational Dimensions</h2>
<p>A relational dimension is a structure that organizes data. Examples of commonly used dimensions are Customers, Time, and Products.</p>
<p>Relational dimensions provide improved query performance because users often analyze data by drilling down on known hierarchies. An example of a hierarchy is the Time hierarchy of year, quarter, month, day. The Oracle Database uses these defined hierarchies by rewriting queries that retrieve data from materialized views rather than detail tables.</p>
<p>Typical relational dimension tables have the following characteristics:</p>
<ul>
<li>
<p>A single column primary key populated with values called warehouse keys.</p>
<p>Warehouse keys that provide administrative control over the dimension, support techniques that preserve dimension history, and reduce the size of cubes.</p>
</li>
<li>
<p>One or more hierarchies that are explicitly defined as dimension objects. Hierarchies maximize the number of query rewrites by the Oracle server.</p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink WBETL02000" href="../../owb.112/e10935/orcl_data_objx.htm#WBETL02000">"Creating Relational Data Objects"</a> in <span class="italic">Oracle Warehouse Builder Data Modeling, ETL, and Data Quality Guide</span>.</div>
<a id="BEIECEEB"></a>
<div id="WBCON4518" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><a id="sthref443"></a>Rules for Dimension Objects</h3>
<p>When you create a dimension object using Oracle Warehouse Builder, the dimension must conform to the following rules:</p>
<ul>
<li>
<p>A dimension must have a surrogate identifier and a business identifier.</p>
</li>
<li>
<p>The surrogate identifier can consist of only one attribute. However, the business identifier can consist of multiple attribute.</p>
</li>
<li>
<p>Every dimension level must have at least one attribute.</p>
</li>
<li>
<p>A dimension attribute can be either a surrogate identifier, a business identifier, a parent identifier, or a regular attribute.</p>
</li>
<li>
<p>A regular attribute can also play only one of the following roles at a time: effective date, expiration date, or triggering attribute.</p>
</li>
<li>
<p>A dimension that uses a relational or ROLAP implementation must have at least one level.</p>
</li>
<li>
<p>Any database table or view that implements a dimension that uses a relational or ROLAP implementation must have only one <code>LONG</code>, <code>LONG RAW</code>, or <code>NCLOB</code> column.</p>
</li>
<li>
<p>For a dimension that uses a relational or ROLAP implementation, all level attributes must bind to database tables or views only.</p>
</li>
<li>
<p>A dimension that uses a relational or ROLAP implementation must be associated with a sequence that is used to load the dimension key attribute.</p>
</li>
<li>
<p>The dimension key attribute of a dimension that uses a relational or ROLAP implementation must bind to the primary key of a table.</p>
</li>
<li>
<p>A Type 2 Slowing Changing Dimension (SCD) must have the effective date, expiration date, and at least one triggering attribute.</p>
</li>
<li>
<p>A Type 3 Slowing Changing Dimension (SCD) must have the effective date and at least one triggering attribute.</p>
</li>
</ul>
<div class="infobox-note">
<p class="notep1">Note:</p>
For dimensions with a ROLAP implementation, there are implications and limitations related to the various dimension structures when either reporting on the underlying tables or deploying to the OLAP catalog. Refer to the topic, "Limitations of Deploying Dimensions to the OLAP Catalog" under "Overview of Dimensions" in <a class="olink WBETL03001" href="../../owb.112/e10935/dim_objects.htm#WBETL03001"><span class="italic">Oracle Warehouse Builder Data Modeling, ETL, and Data Quality Guide</span></a>.</div>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
"About the OLAP Catalog" under "Overview of Implementing Dimensional Objects" in <a class="olink WBETL03009" href="../../owb.112/e10935/dim_objects.htm#WBETL03009"><span class="italic">Oracle Warehouse Builder Data Modeling, ETl, and Data Quality Guide</span></a>.</div>
</div>
<!-- class="sect2" -->
<a id="BEIFBDIH"></a>
<div id="WBCON4520" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">About Defining a Dimension</h3>
<p>Creating a dimension consists of:</p>
<ul>
<li>
<p><a href="#BCGFEAFJ">"Defining Dimension Attributes"</a></p>
</li>
<li>
<p><a href="#CIHGHCDH">"Defining Levels"</a></p>
</li>
<li>
<p><a href="#BCGCFJJI">"Defining Level Attributes"</a></p>
</li>
<li>
<p><a href="#BCGICJCI">"Defining Hierarchies"</a></p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
"Defining Dimensional Objects" in <a class="olink WBETL03000" href="../../owb.112/e10935/dim_objects.htm#WBETL03000"><span class="italic">Oracle Warehouse Builder Data Modeling, ETL, and Data Quality Guide.</span></a></div>
<a id="BCGFEAFJ"></a>
<div id="WBCON4521" class="sect3">
<h4 class="sect3">Defining <a id="sthref444"></a><a id="sthref445"></a>Dimension Attributes</h4>
<p>A <a href="glossary.htm#BGBFIJDB"><span class="xrefglossterm">dimension attribute</span></a> is a descriptive characteristic of a dimension member. It has a name and a data type. A dimension attribute is applicable to one or more levels in the dimension. They are implemented as level attributes to store data.</p>
<p>In Oracle Warehouse Builder, you define dimension attributes when you define a dimension. The list of dimension attributes must include all the attributes that you may need for any of the levels in the dimension. Dimension attributes are the only attributes that are visible in Oracle Business Intelligence Suite Enterprise Edition (OBI EE) and other OLAP tools.</p>
<p>For example, the Products dimension has a dimension attribute called Description. This attribute is applicable to all the levels Total, Groups, and Products and stores the description for each of the members of these levels.</p>
</div>
<!-- class="sect3" -->
<a id="CIHGHCDH"></a>
<div id="WBCON4522" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Defining <a id="sthref446"></a><a id="sthref447"></a>Levels</h4>
<p>The levels in a dimension represent the level of aggregation of data. A dimension must contain at least one level, except for a dimension that contains a value-based hierarchy. Every level must have level attributes and a level identifier.</p>
<p>For example, the dimension Products can have the following levels: Total, Groups, and Product.</p>
<p class="subhead2"><a id="WBCON4523"></a><a id="sthref448"></a>Surrogate, Business, and Parent Identifiers</p>
<p>Every level must have two identifiers: a surrogate identifier and a business identifier. When you create a dimension, each level must implement the dimension attributes marked as the surrogate identifier and business identifier (attributes, for a composite business identifier) of the dimension.</p>
<div id="WBCON4524" class="sect4"><!-- infolevel="all" infotype="General" --><a id="sthref449"></a>
<h5 class="sect4"><a id="sthref450"></a><a id="sthref451"></a>Surrogate Identifiers</h5>
<p>A surrogate identifier uniquely identifies each level record across all the levels of the dimension. It must be composed of a single attribute. Surrogate identifiers enable you to hook facts to any dimension level as opposed to the lowest dimension level only.</p>
<p>For a dimension that has a relational or ROLAP implementation, the surrogate identifier should be of the data type <code>NUMBER</code>. Because the value of the surrogate identifier must be unique across all dimension levels, you use the same sequence to generate the surrogate identifier of all the dimension levels.</p>
<p>For a relational implementation, the surrogate identifier serves the following purposes:</p>
<ul>
<li>
<p>If a child level is stored in a different table from the parent level, each child level record stores the surrogate identifier of the parent record.</p>
</li>
<li>
<p>In a fact table, each cube record stores only the surrogate identifier of the dimension record to which it refers. By storing the surrogate identifier, the size of the fact table that implements the cube is reduced.</p>
</li>
</ul>
</div>
<!-- class="sect4" -->
<div id="WBCON4525" class="sect4"><!-- infolevel="all" infotype="General" --><a id="sthref452"></a>
<h5 class="sect4"><a id="sthref453"></a><a id="sthref454"></a>Business Identifiers</h5>
<p>A business identifier consists of a user-selected list of attributes. The business identifier must be unique across the level and is always derived from the natural key of the data source. The business identifier uniquely identifies the member. For example, the business identifier of a Product level can be its Universal Product Code (UPC), which is a unique code for each product.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
For a dimension that has a MOLAP implementation, the business identifier can consist of only one attribute.</div>
<p>The business identifier does the following:</p>
<ul>
<li>
<p>Identifies a record in business terms</p>
</li>
<li>
<p>Provides a logical link between the fact and the dimension or between two levels</p>
</li>
<li>
<p>Enables the lookup of a surrogate key</p>
</li>
</ul>
<p>When you populate a child level in a dimension, you must specify the business identifier of its parent level. When you populate a cube, you must specify the business identifier of the dimension level to which the cube refers.</p>
</div>
<!-- class="sect4" -->
<div id="WBCON4526" class="sect4"><!-- infolevel="all" infotype="General" --><a id="sthref455"></a>
<h5 class="sect4"><a id="sthref456"></a><a id="sthref457"></a>Parent Identifier</h5>
<p>A parent identifier is used to annotate the parent reference in a value-based hierarchy. For more information on value-based hierarchies, see <a href="#BABIGJFI">"Value-based Hierarchies"</a>.</p>
<p>For example, an <code>EMPLOYEE</code> dimension with a value-based hierarchy, has the following dimension attributes: <code>ID</code>, <code>FIRST_NAME</code>, <code>LAST_NAME</code>, <code>EMAIL</code>, <code>PHONE</code>, <code>JOB_ID</code>, <code>HIRE_DATE</code>, and <code>MANAGER_ID</code>. In this dimension, ID is the surrogate identifier and <code>MANAGER_ID</code> is the parent identifier.</p>
</div>
<!-- class="sect4" --></div>
<!-- class="sect3" -->
<a id="BCGCFJJI"></a>
<div id="WBCON4527" class="sect3">
<h4 class="sect3">Defining <a id="sthref458"></a><a id="sthref459"></a>Level Attributes</h4>
<p>A level attribute is a descriptive characteristic of a level member. Each level in the dimension has a set of level attributes. To define level attributes, you select the dimension attributes that the level implements. A level attribute has a distinct name and a data type. The data type is inherited from the dimension attribute that the level attribute implements. The name of the level attribute can be modified to be different from that of the dimension attribute that it implements.</p>
<p>Every level must implement the attribute marked as the surrogate identifier and the business identifier in the set of the dimension attributes.</p>
</div>
<!-- class="sect3" -->
<a id="BCGICJCI"></a>
<div id="WBCON4528" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Defining <a id="sthref460"></a><a id="sthref461"></a>Hierarchies</h4>
<p>A dimension hierarchy is a logical structure that uses ordered levels or a set of data values (for a value-based hierarchy) for organizing data. A hierarchy describes parent-child relationships among a set of levels. A level-based hierarchy must have at least one level. A level can be part of multiple hierarchy.</p>
<p>For example, the Time dimension can have the following two hierarchies:</p>
<p>Fiscal Hierarchy: Fiscal Year &gt; Fiscal Quarter &gt; Fiscal Month &gt; Fiscal Week &gt; Day</p>
<p>Calendar Hierarchy: Calendar Year &gt; Calendar Quarter &gt; Calendar Month &gt; Day</p>
<p>All hierarchies must be strict 1:n relationships. One record in a parent level corresponds to multiple records in a child level. But one record in a child level corresponds to only one parent record within a hierarchy.</p>
</div>
<!-- class="sect3" -->
<a id="CHDEHGJD"></a>
<div id="WBCON4529" class="sect3">
<h4 class="sect3"><a id="sthref462"></a><a id="sthref463"></a>Dimension Roles</h4>
<p>A dimension role is an alias for a dimension. In a data warehouse, a cube can refer to the same dimension multiple times, without requiring the dimension to be stored multiple times. Multiple references to the same dimension may cause confusion. So you create an alias for each reference to the dimension, thus allowing the joins to be instantly understandable. In such cases, the same dimension performs different dimension roles in the cube.</p>
<p>For example, a sales record can have the following three time values:</p>
<ul>
<li>
<p>Time the order is booked</p>
</li>
<li>
<p>Time the order is shipped</p>
</li>
<li>
<p>Time the order is fulfilled</p>
</li>
</ul>
<p>Instead of creating three time dimensions and populating them with data, you can use dimension roles. Model one time dimension and create the following three roles for the time dimension: order booked time, order shipped time, and order fulfillment time. The sales cube can refer to the order time, ship time, and fulfillment time dimensions.</p>
<p>When the dimension is stored in the database, only one dimension is created and each dimension role references this dimension. But when the dimension is stored in the OLAP catalog, Oracle Warehouse Builder creates a dimension for each dimension role. Thus, if a time dimension has three roles, three dimensions are created in the OLAP catalog. However, all three dimensions are mapped to the same underlying table. This is a workaround because the OLAP catalog does not support dimension roles.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
Dimension roles can be created for dimensions that have a relational implementation only.</div>
</div>
<!-- class="sect3" -->
<div id="WBCON4530" class="sect3"><a id="sthref464"></a>
<h4 class="sect3"><a id="sthref465"></a>Level Relationships</h4>
<p>A level relationship is an association between levels in a dimension hierarchy. Level relationships are implemented using level attributes that store the reference to the parent level in the hierarchy.</p>
<p>For example, the Products dimension has the following hierarchy: Total &gt; Groups &gt; Product. Oracle Warehouse Builder creates two level relationships: Product to Groups and Groups to Total. Two new attributes implement this level relationship: one in the Product level and one in the Groups level. These attributes store the surrogate ID of the parent level.</p>
</div>
<!-- class="sect3" -->
<div id="WBCON4531" class="sect3"><!-- infolevel="all" infotype="General" --><a id="sthref466"></a>
<h4 class="sect3">Control <a id="sthref467"></a>Rows</h4>
<p>When you load data into a dimension, Oracle Warehouse Builder creates control rows. Control rows link fact data to a dimension at any level, thus enabling the reuse of a dimension in different cubes.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
"Using Control Rows" in Chapter 3, "Defining Dimensional Objects" in <a class="olink WBETL03000" href="../../owb.112/e10935/dim_objects.htm#WBETL03000"><span class="italic">Oracle Warehouse Builder Data Modeling, ETL, and Data Quality Guide</span></a>.</div>
</div>
<!-- class="sect3" -->
<a id="BABIGJFI"></a>
<div id="WBCON4532" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Value-based <a id="sthref468"></a><a id="sthref469"></a>Hierarchies</h4>
<p>A value-based hierarchy is a dimension in which hierarchical relationships are defined by a parent dimension attribute and a child dimension attribute. This is different from a level-based hierarchy, referred to as a hierarchy in this chapter, in which the hierarchical relationships are defined between levels.</p>
<p>You create a value-based hierarchy when the parent-child relationships cannot be grouped into meaningful levels. A value-based hierarchy has no levels. When you create the dimension attributes, you must specify which dimension attribute is the parent attribute.</p>
<p>For example, consider an <code>EMPLOYEE</code> dimension that has the following dimension attributes: <code>ID</code>, <code>FIRST_NAME</code>, <code>LAST_NAME</code>, <code>EMAIL</code>, <code>PHONE</code>, <code>JOB_ID</code>, <code>HIRE_DATE</code>, <code>DESCRIPTION</code>, and <code>MANAGER_ID</code>. This dimension contains a parent-child relationship in which the <code>MANAGER_ID</code> attribute identifies the manager of each employee. But these relationships may not form meaningful levels across the organization. This is because the number of levels between an employee and the CEO is different for all employees. There may be four levels between employee A and the CEO, whereas, there may be six levels between employee B and the CEO. In such cases, you create a value-based hierarchy with <code>MANAGER_ID</code> as the parent identifier.</p>
<p>You can create value-based hierarchies using the Data Object Editor only. For more information about specifying a parent attribute, see "Attributes Tab" in Oracle Warehouse Builder Help.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
Value-based hierarchies can be created only in dimensions that use a MOLAP implementation.</div>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="BEIGGBDE"></a>
<div id="WBCON4533" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><a id="sthref470"></a>Implementing a Dimension</h3>
<p>Implementing a dimension consists of specifying how the dimension and its data are physically stored. You can choose either a relational implementation, ROLAP implementation, or MOLAP implementation for a dimension. For more information about setting the implementation method, see <a href="#CHDIGDBB">"Dimension Implementation"</a>.</p>
<p>When you store dimension data in a relational form, you can implement the dimension using one of the following methods:</p>
<ul>
<li>
<p><a href="#CHDFCIDE">"Star Schema"</a></p>
</li>
<li>
<p><a href="#CHDEIFFC">"Snowflake Schema"</a></p>
</li>
</ul>
<a id="CHDFCIDE"></a>
<div id="WBCON4535" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3"><a id="sthref471"></a><a id="sthref472"></a>Star Schema</h4>
<p>In a star schema implementation, Oracle Warehouse Builder stores the dimension data in a single table. Because the same table or view stores data for multiple dimension level, you must specify a dimension key column in the table. The dimension key column is the primary key for the dimension. This column also forms the foreign key reference to the cube.</p>
<p>Each level implements a subset of dimension attributes. By default, the level attribute name equals as the dimension attribute name. To avoid name conflicts caused by all level data being stored in the same table, Oracle Warehouse Builder uses the following guidelines for naming in a star table:</p>
<ul>
<li>
<p>If the level attribute name is not unique, Oracle Warehouse Builder prefixes it with the name of the level.</p>
</li>
<li>
<p>If the level attribute name is unique, Oracle Warehouse Builder does not use any prefix.</p>
</li>
</ul>
<div class="infobox-note">
<p class="notep1">Note:</p>
To ensure that no prefixes are used, you must explicitly change the level attribute name in the Create Dimension wizard or the Data Object Editor.</div>
<p>For example, if you implement the Products dimension using a star schema, Oracle Warehouse Builder uses a single table to implement all the levels in the dimension.</p>
<p><a href="#BEIEHDAC">Figure 5-2</a> displays the star schema implementation of the Products dimension. The attributes in all the levels are mapped to different columns in a single table called <code>PRODUCTS</code>. The column called <code>DIMENSION_KEY</code> stores the surrogate ID for the dimension and is the primary key of the table.</p>
<div id="WBCON4536" class="figure">
<p class="titleinfigure"><a id="BEIEHDAC"></a>Figure 5-2 Star Schema Implementation of Products Dimension</p>
<img width="547" height="465" src="img/star_implementation.gif" alt="Description of Figure 5-2 follows" /><br />
<a id="sthref473" href="img_text/star_implementation.htm">Description of "Figure 5-2 Star Schema Implementation of Products Dimension"</a><br />
<br /></div>
<!-- class="figure" -->
<p>For relational or ROLAP dimensions that use a star implementation, you can bind attributes from multiple levels to the same database column. A database column that is bound to attributes from multiple dimension levels is referred to as a <span class="italic">shared column</span>. For a Type 2 SCD, you cannot set the level attributes that are bound to a shared column as triggering attributes.</p>
</div>
<!-- class="sect3" -->
<a id="CHDEIFFC"></a>
<div id="WBCON4537" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3"><a id="sthref474"></a><a id="sthref475"></a>Snowflake Schema</h4>
<p>In a snowflake schema implementation, Oracle Warehouse Builder uses multiple table to store the dimension data. Separate database tables or views store the data pertaining to each level in the dimension.</p>
<p><a href="#BEIDDHHD">Figure 5-3</a> displays the snowflake implementation of the <code>PRODUCTS</code> dimension. Each level in the dimension is mapped to a different table.</p>
<div id="WBCON4538" class="figure">
<p class="titleinfigure"><a id="BEIDDHHD"></a>Figure 5-3 Snowflake Schema Implementation of the Products Dimension</p>
<img width="513" height="471" src="img/snowflake_implementation.gif" alt="Description of Figure 5-3 follows" /><br />
<a id="sthref476" href="img_text/snowflake_implementation.htm">Description of "Figure 5-3 Snowflake Schema Implementation of the Products Dimension"</a><br />
<br /></div>
<!-- class="figure" --></div>
<!-- class="sect3" --></div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="BEIEDBGG"></a>
<div id="WBCON4543" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1"><a id="sthref477"></a>Slowly Changing Dimensions (SCDs)</h2>
<p>A Slowly Changing Dimension (SCD) is a dimension that stores and manages both current and historical data over time in a data warehouse. In data warehousing, there are three commonly recognized types of SCDs: Type 1, Type 2, and Type 3.</p>
<p>With the appropriate licensing, you can use Oracle Warehouse Builder to define, deploy, and load all three types of SCDs. You can create slowly changing dimensions only for dimensions that use a relational implementation.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
Type 1 does not require additional licensing; however, Type 2 and Type 3 SCDs require Oracle Warehouse Builder Enterprise ETL Option. Refer to <a class="olink DBLIC" href="../../license.112/e47877/toc.htm"><span class="italic">Oracle Database Licensing Information</span></a>.</div>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink WBETL03001" href="../../owb.112/e10935/dim_objects.htm#WBETL03001">"Overview of Slowly Changing Dimensions"</a> in <span class="italic">Oracle Warehouse Builder Data Modeling, ETL, and Data Quality Guide</span> for complete information about the types of SCDs and how to use them.</div>
<div id="WBCON4545" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref478"></a>
<h3 class="sect2">About <a id="sthref479"></a>Type 1 Slowly Changing Dimensions</h3>
<p>In a Type 1 Slowly Changing Dimension (SCD), the new data overwrites the existing data. Typically, this type is not considered an SCD and most dimensions are of this type. Thus the existing data is lost as it is not stored anywhere else. This is the default type of dimension you create. You need not specify any additional information to create a Type 1 SCD. Unless there are specific business reasons, you must assume that a Type 1 SCD is sufficient.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
"Creating Slowly Changing Dimensions" in <a class="olink WBETL03007" href="../../owb.112/e10935/dim_objects.htm#WBETL03007"><span class="italic">Oracle Warehouse Builder Data Modeling, ETL, and Data Quality Guide</span></a> for detailed information about all types of SCDs.</div>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="CIHEBAIF"></a>
<div id="WBCON4560" class="sect1">
<h2 class="sect1"><a id="sthref480"></a><a id="sthref481"></a>Time Dimensions</h2>
<p>A time dimension is a dimension that stores temporal data. Time dimensions are used extensively in data warehouses. Oracle Warehouse Builder enables you to create and populate time dimensions. You can use Oracle Warehouse Builder to create both fiscal and calendar time dimensions.</p>
<p>When you create a time dimension using the wizard, Oracle Warehouse Builder creates the mapping for you to execute to populate the time dimension. Also, the data loaded into the time dimension conforms to the best practices recommended by Oracle Warehouse Builder for a time dimension.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
"Creating Time Dimensions" in <a class="olink WBETL03014" href="../../owb.112/e10935/dim_objects.htm#WBETL03014"><span class="italic">Oracle Warehouse Builder Data Modeling, ETL, and Data Quality Guide</span></a>.</div>
</div>
<!-- class="sect1" -->
<a id="CIHEGHCH"></a>
<div id="WBCON4576" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1"><a id="sthref482"></a>Cubes: Measures and Dimensionality</h2>
<p>A <a href="glossary.htm#BGBFJGBG"><span class="xrefglossterm">cube</span></a> is a data object that contains measures, and links to one or more dimensions. The axes of a cube contain dimension members, and the body of the cube contains measure values. Most measures are additive. For example, sales data can be organized into a cube whose edges contain values for Time, Products, and Promotions dimensions and whose body contains values from the measures Value sales, and Dollar sales.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
In the relational implementation of a cube, the cube is linked to dimension tables over foreign key constraints. Since data integrity is vital, these constraints are critical in a data warehousing environment. The constraints enforce referential integrity during the daily operations of the data warehouse.</div>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
"Overview of Cubes" in <a class="olink WBETL03002" href="../../owb.112/e10935/dim_objects.htm#WBETL03002"><span class="italic">Oracle Warehouse Builder Data Modeling, ETL, and Data Quality Guide.</span></a></div>
<a id="BEIGGDGC"></a>
<div id="WBCON4577" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Cube Definitions</h3>
<p>A cube consists of the set of measures defined over a set of dimensions as follows.</p>
<ul>
<li>
<p><a href="#CIHHAAGF">"Cube Measures"</a></p>
</li>
<li>
<p><a href="#CIHCAIGH">"Cube Dimensionality"</a></p>
</li>
</ul>
<a id="CIHHAAGF"></a>
<div id="WBCON4578" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Cube <a id="sthref483"></a>Measures</h4>
<p>A measure is data, usually numeric and additive, that can be examined and analyzed. Examples of measures include sales, cost, and profit. A cube must have one or more measures. You can also perform aggregation of measures. Only numeric measures can be aggregated.</p>
</div>
<!-- class="sect3" -->
<a id="CIHCAIGH"></a>
<div id="WBCON4579" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Cube <a id="sthref484"></a>Dimensionality</h4>
<p>A cube is defined by a set of dimensions. A cube can refer to a level that is not the lowest level in a dimension.</p>
<p>For cubes that use a pure relational implementation, you can reuse the same dimension multiple times with the help of dimension roles. For more information on dimension roles, see <a href="#CHDEHGJD">"Dimension Roles"</a>.</p>
<p>Before you validate a cube, ensure that all the dimensions that the cube references are valid.</p>
<p>To define a dimension reference, specify the following:</p>
<ul>
<li>
<p>The dimension and the level within the dimension to which the cube refers.</p>
<p>For a cube that uses a relational implementation, you can refer to intermediate levels in a dimension. However, for cubes that use a MOLAP implementation, you can only reference the lowest level in the dimension. Oracle Warehouse Builder supports a reference to the non surrogate identifier of a level, for example, the business keys.</p>
</li>
<li>
<p>For dimensions that use a relational or ROLAP implementation, a dimension role for each dimension to indicate what role the dimension reference is performing in the cube. Specifying the dimension role is optional.</p>
</li>
</ul>
<p>When you define a MOLAP cube, the order in which you define the dimension references is important. The physical ordering of dimensions on disk equals as the order in which you define the dimension references. The physical ordering is tightly coupled with the sparsity definition. Define the dimension references in the order of most dense to least dense. Time is usually a dense dimension, and listing it first expedites data loading and time-based analysis. For more information on defining dimension references, see "Dimensions Page" or "Dimensions Tab" in Oracle Warehouse Builder Help. For more information on sparsity, see "Advanced Dialog Box" in Oracle Warehouse Builder Help.</p>
<p><a id="WBCON4580"></a><span class="subhead3"><a id="sthref485"></a>Default Aggregation Method&nbsp;</span></p>
<p>You can define aggregations that should be performed on the cube. For ROLAP cubes, you can only define a single aggregation method for the cube. For MOLAP cubes, you can define a different aggregation method for each dimension of each measure. Oracle Warehouse Builder enables you to use the same aggregation function for all the cube measures or specify different aggregate functions for each measure.</p>
<p>Oracle Warehouse Builder supports the following default aggregation methods: SUM, SSUM (scaled SUM), AVERAGE, HAVERAGE (hierarchical average), MAX, MIN, FIRST, LAST, AND, OR, HIERARCHICAL_FIRST and HIERARCHICAL_LAST. If you do not want to perform aggregation, select NOAGG. The methods AND and OR are not applicable for cubes that use a multidimensional implementation.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
You cannot define aggregation for pure relational cubes.</div>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="BEIBFICJ"></a>
<div id="WBCON4583" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Implementing a Cube</h3>
<p>When you implement a cube, you specify the physical storage details for the cube. You can implement a cube in a relational form or a multidimensional form in the database.</p>
<p>The types of implementation are:</p>
<ul>
<li>
<p><a href="#BABHEAEG">"Relational and ROLAP Implementation of a Cube"</a></p>
</li>
<li>
<p><a href="#BABJAHJC">"MOLAP Implementation of a Cube"</a></p>
</li>
</ul>
<p>To set the type of implementation for a cube, use the <span class="bold">Deployment Option</span> configuration property.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
"Creating Cubes" in <a class="olink WBETL03004" href="../../owb.112/e10935/dim_objects.htm#WBETL03004"><span class="italic">Oracle Warehouse Builder Data Modeling, ETL, and Data Quality Guide</span></a>.</div>
<a id="BABHEAEG"></a>
<div id="WBCON4584" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3"><a id="sthref486"></a><a id="sthref487"></a><a id="sthref488"></a><a id="sthref489"></a>Relational and ROLAP Implementation of a Cube</h4>
<p>The database object used to store the cube data is called a fact table. A cube must be implemented using only one fact table. The fact table contains columns for the cube measures and dimension references. For more information on setting the implementation option for a cube, see <a href="#CHDIGDBB">"Dimension Implementation"</a>.</p>
<p>To implement a cube:</p>
<ul>
<li>
<p>Select a table or materialized view that stores the cube data.</p>
</li>
<li>
<p>For each measure, select a column that stores the measure data.</p>
</li>
<li>
<p>For each dimension reference, select a column that stores the dimension reference.</p>
<p>Each dimension reference corresponds to a column on the fact table and optionally a foreign key from the fact table to dimension table. The 1:n relationships from the fact tables to the dimension tables must be enforced.</p>
</li>
</ul>
<p><a href="#CIHEGGCC">Figure 5-4</a> displays the bindings for the relational implementation of the <code>SALES</code> cube. The data for the <code>SALES</code> cube is stored in a table called <code>SALES</code>.</p>
<div id="WBCON4585" class="figure">
<p class="titleinfigure"><a id="CIHEGGCC"></a>Figure 5-4 Implementation of the Sales Cube</p>
<img width="581" height="287" src="img/cube_impl_rel.gif" alt="Description of Figure 5-4 follows" /><br />
<a id="sthref490" href="img_text/cube_impl_rel.htm">Description of "Figure 5-4 Implementation of the Sales Cube"</a><br />
<br /></div>
<!-- class="figure" --></div>
<!-- class="sect3" -->
<a id="BABJAHJC"></a>
<div id="WBCON4589" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3"><a id="sthref491"></a><a id="sthref492"></a>MOLAP Implementation of a Cube</h4>
<p>Storing the cube and its data in an analytic workspace is called a MOLAP implementation. You can store multiple cubes in the same analytic workspace. For more information on OLAP implementation, see <a href="#CIHFDJCB">"MOLAP Implementation of Dimensional Objects"</a>.</p>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="BEIICHBB"></a>
<div id="WBCON4590" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><a id="sthref493"></a>Solve Dependency Order of Cube</h3>
<p>Certain business scenarios may require the dimensions in a cube to be evaluated in a particular order. The order in which the dimensions are evaluated is called the solve dependency order of the cube. For example, in the Sales cube, the Time dimension must be evaluated before the Products dimension. For each dimension of the cube, you can specify a dependency on another dimension of the cube.</p>
<p>The advantage of specifying the dependency order is that it enables Oracle Warehouse Builder to optimize the query speed of calculating the joins of the dimension and cubes. For example, retrieving results from the sales cube based on Time criteria may be more selective than retrieving result based on Products criteria. In this case, you can specify that for the Sales cube, the Products dimension depends on the Time dimension.</p>
<p>Specifying the solve dependency order is optional. If you do not specify a dependency order, the optimizer determines the solve-order with additional flexibility.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
"Configuring Cubes" in <a class="olink WBETL03012" href="../../owb.112/e10935/dim_objects.htm#WBETL03012"><span class="italic">Oracle Warehuse Builder Data Modeling, ETL, and Data Quality Guide</span></a>.</div>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" --></div>
<!-- class="chapter" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment3042">
<tr>
<td class="cellalignment3049">
<table class="cellalignment3047">
<tr>
<td class="cellalignment3046"><a href="sourcetargs.htm"><img width="24" height="24" src="../../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment3046"><a href="datatransform.htm"><img width="24" height="24" src="../../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;2000, 2014,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment3051">
<table class="cellalignment3045">
<tr>
<td class="cellalignment3046"><a href="../../index.htm"><img width="24" height="24" src="../../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment3046"><a href="../../nav/portal_booklist.htm"><img width="24" height="24" src="../../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment3046"><a href="toc.htm"><img width="24" height="24" src="../../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment3046"><a href="index.htm"><img width="24" height="24" src="../../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment3046"><a href="../../nav/mindx.htm"><img width="24" height="24" src="../../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment3046"><a href="../../dcommon/html/feedback.htm"><img width="24" height="24" src="../../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>
</body>
</html>
