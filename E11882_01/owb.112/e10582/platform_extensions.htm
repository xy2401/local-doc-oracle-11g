<!DOCTYPE html>
<html lang="en" >
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1">
<meta charset="utf-8">
<title>Creating New Platforms</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Version 5.1.2 Build 737" />
<meta name="dcterms.created" content="2013-07-16T0:40:2Z" />
<meta name="robots" content="all" />
<meta name="dcterms.title" content="Warehouse Builder Sources and Targets Guide" />
<meta name="dcterms.identifier" content="E10582-06" />
<meta name="dcterms.isVersionOf" content="WBDOD" />
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;2000, 2013,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved." />
<link rel="Start" href="../../index.htm" title="Home" type="text/html" />
<link rel="Copyright" href="../../dcommon/html/cpyr.htm" title="Copyright" type="text/html" />

<script type="application/javascript"  src="../../dcommon/js/headfoot.js"></script>
<script type="application/javascript"  src="../../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html" />
<link rel="Index" href="index.htm" title="Index" type="text/html" />
<link rel="Prev" href="imp_thirdparty_design.htm" title="Previous" type="text/html" />
<link rel="Next" href="code_templates.htm" title="Next" type="text/html" />
<link rel="alternate" href="../e10582.pdf" title="PDF version" type="application/pdf" />
<link rel="schema.dcterms" href="http://purl.org/dc/terms/" />
<link rel="stylesheet" href="../../dcommon/css/fusiondoc.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/header.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/footer.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/fonts.css">
<link rel="stylesheet" href="../../dcommon/css/foundation.css">
<link rel="stylesheet" href="../../dcommon/css/codemirror.css">
<link rel="stylesheet" type="text/css" title="Default" href="../../nav/css/html5.css">
<link rel="stylesheet" href="../../dcommon/css/respond-480-tablet.css">
<link rel="stylesheet" href="../../dcommon/css/respond-768-laptop.css">
<link rel="stylesheet" href="../../dcommon/css/respond-1140-deskop.css">
<script type="application/javascript" src="../../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">14/17</span> <!-- End Header -->
<div class="chapter"><a id="CHDHEGEX"></a>
<h1 class="chapter"><span class="secnum">11</span> Creating New Platforms</h1>
<p>Starting with Oracle Warehouse Builder 11<span class="italic">g</span> Release 2 (11.2), you can create new platforms to integrate with other systems and construct integration capabilities using code templates based on your requirements. A platform refers to a data source or target. By creating new platforms, you can thus connect to new databases in addition to those that are supported by default in Oracle Warehouse Builder.</p>
<p>This chapter contains the following topics:</p>
<ul>
<li>
<p><a href="#CIHBIHCD">"Creating a New Platform"</a></p>
</li>
<li>
<p><a href="#CIHEBDGB">"Defining the Properties of a New Platform"</a></p>
</li>
<li>
<p><a href="#CIHGHHAB">"Creating a Microsoft Excel Platform"</a></p>
</li>
<li>
<p><a href="#CIHFBBFG">"Using Custom Metadata Import in Platforms"</a></p>
</li>
</ul>
<a id="CIHBIHCD"></a>
<div class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Creating a New Platform</h2>
<p>When you create a new platform, you must define properties including connection information, code generation options, data types supported by the platform, and how these data types map to the generic data types.</p>
<p>To create the platform and define its characteristics, you must use OMB*Plus scripting commands.</p>
<p>For more information about OMB*Plus scripting, see <a class="olink WBSCR" href="../e10584/toc.htm"><span class="italic">Oracle Warehouse Builder API and Scripting Reference</span></a>.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink WBREF" href="../e14406/toc.htm"><span class="italic">Oracle Warehouse Builder OMB*Plus Command Reference</span></a> for a list of all OMB*Plus commands.</div>
<p>The <code>OMBCREATE</code> command creates a new platform:</p>
<pre>
OMBCREATE PLATFORM 'MICROSOFT_EXCEL' SET PROPERTIES (BUSINESS_NAME) VALUES ('Microsoft Excel')
</pre>
<p>The business name is displayed in the Projects Navigator.</p>
<p>To define the properties of this platform, use the <code>OMBALTER</code> command:</p>
<pre>
OMBALTER PLATFORM 'MICROSOFT_EXCEL' ADD PLATFORM_TYPE 'CHAR'
</pre>
<p>For a complete listing of the commands to create and define a new platform, see <a href="#CIHGHHAB">"Creating a Microsoft Excel Platform"</a>. You can add to this depending on your specific requirements.</p>
<p>When you create a platform from the OMB*Plus interface, the platform gets added under the Databases node in the Projects Navigator. The location of the platform gets added under the Databases node in the Locations Navigator. You can now create a module under this new platform.</p>
</div>
<!-- class="sect1" -->
<a id="CIHEBDGB"></a>
<div class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Defining the Properties of a New Platform</h2>
<p>While creating a new platform, you must define certain basic properties for the platform. These include:</p>
<ul>
<li>
<p>Designer and run-time properties</p>
</li>
<li>
<p>Platform data types</p>
</li>
<li>
<p>CMI/MIV to be used for custom import</p>
</li>
<li>
<p>Data type definitions for the mappings</p>
</li>
<li>
<p>JDBC driver for the platform</p>
</li>
</ul>
<p><a href="#CIHEBGJF">Table 11-1</a> lists the properties that must be specified for a platform.</p>
<div class="tblformal">
<p class="titleintable"><a id="sthref452"></a><a id="CIHEBGJF"></a>Table 11-1 Properties of a Platform</p>
<table class="cellalignment3020" title="Properties of a Platform" summary="properties of a tier 3 platform" dir="ltr">
<thead>
<tr class="cellalignment3014">
<th class="cellalignment3021" id="r1c1-t3">Property</th>
<th class="cellalignment3021" id="r1c2-t3">Data Type</th>
<th class="cellalignment3021" id="r1c3-t3">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r2c1-t3" headers="r1c1-t3">
<p>NAME</p>
</td>
<td class="cellalignment3022" headers="r2c1-t3 r1c2-t3">
<p>STRING</p>
</td>
<td class="cellalignment3022" headers="r2c1-t3 r1c3-t3">
<p>The physical name of the platform.</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r3c1-t3" headers="r1c1-t3">
<p>BUSINESS_NAME</p>
</td>
<td class="cellalignment3022" headers="r3c1-t3 r1c2-t3">
<p>STRING</p>
</td>
<td class="cellalignment3022" headers="r3c1-t3 r1c3-t3">
<p>Business name of the platform.</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r4c1-t3" headers="r1c1-t3">
<p>DESCRIPTION</p>
</td>
<td class="cellalignment3022" headers="r4c1-t3 r1c2-t3">
<p>STRING</p>
</td>
<td class="cellalignment3022" headers="r4c1-t3 r1c3-t3">
<p>Description of the platform.</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r5c1-t3" headers="r1c1-t3">
<p>DRIVERCLASS</p>
</td>
<td class="cellalignment3022" headers="r5c1-t3 r1c2-t3">
<p>STRING</p>
</td>
<td class="cellalignment3022" headers="r5c1-t3 r1c3-t3">
<p>The default JDBC driver class. For example <code>com.sunopsis.jdbc.driver.xml.SnpsXmlDriver</code> for XML.</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r6c1-t3" headers="r1c1-t3">
<p>URL_TEMPLATE</p>
</td>
<td class="cellalignment3022" headers="r6c1-t3 r1c2-t3">
<p>STRING</p>
</td>
<td class="cellalignment3022" headers="r6c1-t3 r1c3-t3">
<p>The default URL for the driver. This is used as a template.</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r7c1-t3" headers="r1c1-t3">
<p>COL_ALIAS_WORD</p>
</td>
<td class="cellalignment3022" headers="r7c1-t3 r1c2-t3">
<p>STRING</p>
</td>
<td class="cellalignment3022" headers="r7c1-t3 r1c3-t3">
<p>The separator for a column and its alias. It is not mandatory to specify this property.</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r8c1-t3" headers="r1c1-t3">
<p>TAB_ALIAS_WORD</p>
</td>
<td class="cellalignment3022" headers="r8c1-t3 r1c2-t3">
<p>STRING</p>
</td>
<td class="cellalignment3022" headers="r8c1-t3 r1c3-t3">
<p>The separator for a table and its alias. It is not mandatory to specify this property.</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r9c1-t3" headers="r1c1-t3">
<p>DATE_FCT</p>
</td>
<td class="cellalignment3022" headers="r9c1-t3 r1c2-t3">
<p>STRING</p>
</td>
<td class="cellalignment3022" headers="r9c1-t3 r1c3-t3">
<p>The function that returns the date and time. For example <code>sysdate</code> for Oracle.</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r10c1-t3" headers="r1c1-t3">
<p>DDL_NULL</p>
</td>
<td class="cellalignment3022" headers="r10c1-t3 r1c2-t3">
<p>STRING</p>
</td>
<td class="cellalignment3022" headers="r10c1-t3 r1c3-t3">
<p>A column that can hold NULL value.</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r11c1-t3" headers="r1c1-t3">
<p>DEFAULT_MAX_NAME_LEN</p>
</td>
<td class="cellalignment3022" headers="r11c1-t3 r1c2-t3">
<p>INTEGER</p>
</td>
<td class="cellalignment3022" headers="r11c1-t3 r1c3-t3">
<p>The maximum length for a table name. If you specify a name longer than this limit, the name is truncated to this length.</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r12c1-t3" headers="r1c1-t3">
<p>DEFAULT_NAME_LEN_SEMANTIC</p>
</td>
<td class="cellalignment3022" headers="r12c1-t3 r1c2-t3">
<p>STRING</p>
</td>
<td class="cellalignment3022" headers="r12c1-t3 r1c3-t3">
<p>Whether the name length is specified in characters or bytes.</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r13c1-t3" headers="r1c1-t3">
<p>SPECIAL_MAX_NAME_LEN</p>
</td>
<td class="cellalignment3022" headers="r13c1-t3 r1c2-t3">
<p>STRING</p>
</td>
<td class="cellalignment3022" headers="r13c1-t3 r1c3-t3">
<p>Name length for second class objects (SCOs). (For example INDEX=18 or COLUMN=30).</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r14c1-t3" headers="r1c1-t3">
<p>SPECIAL_NAME_LEN_SEMANTICS</p>
</td>
<td class="cellalignment3022" headers="r14c1-t3 r1c2-t3">
<p>STRING</p>
</td>
<td class="cellalignment3022" headers="r14c1-t3 r1c3-t3">
<p>Whether SPECIAL_MAX_NAME_LEN is specified in terms of characters or bytes.</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r15c1-t3" headers="r1c1-t3">
<p>ESCAPE_CHAR</p>
</td>
<td class="cellalignment3022" headers="r15c1-t3 r1c2-t3">
<p>STRING</p>
</td>
<td class="cellalignment3022" headers="r15c1-t3 r1c3-t3">
<p>The escape character. For example, it is the double quotation mark (") for Oracle Database.</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r16c1-t3" headers="r1c1-t3">
<p>ENCLOSURE_CHAR</p>
</td>
<td class="cellalignment3022" headers="r16c1-t3 r1c2-t3">
<p>STRING</p>
</td>
<td class="cellalignment3022" headers="r16c1-t3 r1c3-t3">
<p>The enclosure character. For example, it is the backslash (\) for Oracle Database.</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r17c1-t3" headers="r1c1-t3">
<p>RESERVED_WORDS</p>
</td>
<td class="cellalignment3022" headers="r17c1-t3 r1c2-t3">
<p>STRING</p>
</td>
<td class="cellalignment3022" headers="r17c1-t3 r1c3-t3">
<p>Reserved words for a platform.</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r18c1-t3" headers="r1c1-t3">
<p>ILLEGAL_CHARS</p>
</td>
<td class="cellalignment3022" headers="r18c1-t3 r1c2-t3">
<p>STRING</p>
</td>
<td class="cellalignment3022" headers="r18c1-t3 r1c3-t3">
<p>Characters that cannot be used while naming objects in a platform.</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r19c1-t3" headers="r1c1-t3">
<p>ILLEGAL_LEADING_CHARS</p>
</td>
<td class="cellalignment3022" headers="r19c1-t3 r1c2-t3">
<p>STRING</p>
</td>
<td class="cellalignment3022" headers="r19c1-t3 r1c3-t3">
<p>Characters that cannot be used as the first character in the name of an object.</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r20c1-t3" headers="r1c1-t3">
<p>CUSTOM_IMPORTERS</p>
</td>
<td class="cellalignment3022" headers="r20c1-t3 r1c2-t3">&nbsp;</td>
<td class="cellalignment3022" headers="r20c1-t3 r1c3-t3">
<p>The custom metadata definitions that are associated to a platform.</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r21c1-t3" headers="r1c1-t3">
<p>Data Types</p>
</td>
<td class="cellalignment3022" headers="r21c1-t3 r1c2-t3">&nbsp;</td>
<td class="cellalignment3022" headers="r21c1-t3 r1c3-t3">
<p>The data types supported by a platform. You can specify the syntax to define a data type and any parameter that the data type uses. For example the length, precision, and scale.</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r22c1-t3" headers="r1c1-t3">
<p>Data Type map to Generic platform</p>
</td>
<td class="cellalignment3022" headers="r22c1-t3 r1c2-t3">&nbsp;</td>
<td class="cellalignment3022" headers="r22c1-t3 r1c3-t3">
<p>The mapping of a platform's data types to the generic data types.</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r23c1-t3" headers="r1c1-t3">
<p>Data Type map from Generic platform</p>
</td>
<td class="cellalignment3022" headers="r23c1-t3 r1c2-t3">&nbsp;</td>
<td class="cellalignment3022" headers="r23c1-t3 r1c3-t3">
<p>The mapping of generic data types to a platform's data types.</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r24c1-t3" headers="r1c1-t3">
<p>VARCHAR_MASK</p>
</td>
<td class="cellalignment3022" headers="r24c1-t3 r1c2-t3">
<p>STRING</p>
</td>
<td class="cellalignment3022" headers="r24c1-t3 r1c3-t3">
<p>Run-time properties used by the platform while executing Code Templates.</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r25c1-t3" headers="r1c1-t3">
<p>DATE_MASK</p>
</td>
<td class="cellalignment3022" headers="r25c1-t3 r1c2-t3">
<p>STRING</p>
</td>
<td class="cellalignment3022" headers="r25c1-t3 r1c3-t3">&nbsp;</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r26c1-t3" headers="r1c1-t3">
<p>NUMERIC_MASK</p>
</td>
<td class="cellalignment3022" headers="r26c1-t3 r1c2-t3">
<p>STRING</p>
</td>
<td class="cellalignment3022" headers="r26c1-t3 r1c3-t3">
<p>The syntax to be used to describe the numeric data type in DDL. The tags %L (data length) and %P (precision) can be used.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<div class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref453"></a>
<h3 class="sect2">Defining the Platform Type</h3>
<p>Based on your requirements, you can provide support for various data types in a platform. The properties of the Data Type define the scope of a data type. These properties are listed in <a href="#CIHDIFJA">Table 11-2</a>.</p>
<div class="tblformal">
<p class="titleintable"><a id="sthref454"></a><a id="CIHDIFJA"></a>Table 11-2 Properties of Data Type</p>
<table class="cellalignment3020" title="Properties of Data Type" summary="parameters for Data Type property" dir="ltr">
<thead>
<tr class="cellalignment3014">
<th class="cellalignment3021" id="r1c1-t4">Property</th>
<th class="cellalignment3021" id="r1c2-t4">Type</th>
<th class="cellalignment3021" id="r1c3-t4">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r2c1-t4" headers="r1c1-t4">
<p>NAME</p>
</td>
<td class="cellalignment3022" headers="r2c1-t4 r1c2-t4">
<p>STRING</p>
</td>
<td class="cellalignment3022" headers="r2c1-t4 r1c3-t4">
<p>The physical name of the data type.</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r3c1-t4" headers="r1c1-t4">
<p>BUSINESS_NAME</p>
</td>
<td class="cellalignment3022" headers="r3c1-t4 r1c2-t4">
<p>STRING</p>
</td>
<td class="cellalignment3022" headers="r3c1-t4 r1c3-t4">
<p>The business name of the data type.</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r4c1-t4" headers="r1c1-t4">
<p>DESCRIPTION</p>
</td>
<td class="cellalignment3022" headers="r4c1-t4 r1c2-t4">
<p>STRING</p>
</td>
<td class="cellalignment3022" headers="r4c1-t4 r1c3-t4">
<p>Description of the data type.</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r5c1-t4" headers="r1c1-t4">
<p>SYNTAX</p>
</td>
<td class="cellalignment3022" headers="r5c1-t4 r1c2-t4">
<p>STRING</p>
</td>
<td class="cellalignment3022" headers="r5c1-t4 r1c3-t4">
<p>The syntax to be used during code generation. For example <code>CHAR[(%size)]</code>.</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r6c1-t4" headers="r1c1-t4">
<p>P1</p>
</td>
<td class="cellalignment3022" headers="r6c1-t4 r1c2-t4">
<p>STRING</p>
</td>
<td class="cellalignment3022" headers="r6c1-t4 r1c3-t4">
<p>Either size, precision, or scale.</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r7c1-t4" headers="r1c1-t4">
<p>P1TYPE</p>
</td>
<td class="cellalignment3022" headers="r7c1-t4 r1c2-t4">
<p>STRING</p>
</td>
<td class="cellalignment3022" headers="r7c1-t4 r1c3-t4">
<p>Specifies the range.</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r8c1-t4" headers="r1c1-t4">
<p>P1DEFAULT</p>
</td>
<td class="cellalignment3022" headers="r8c1-t4 r1c2-t4">
<p>STRING</p>
</td>
<td class="cellalignment3022" headers="r8c1-t4 r1c3-t4">
<p>Default value for P1.</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r9c1-t4" headers="r1c1-t4">
<p>P1MIN</p>
</td>
<td class="cellalignment3022" headers="r9c1-t4 r1c2-t4">
<p>STRING</p>
</td>
<td class="cellalignment3022" headers="r9c1-t4 r1c3-t4">
<p>Minimum value for P1.</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r10c1-t4" headers="r1c1-t4">
<p>P1MAX</p>
</td>
<td class="cellalignment3022" headers="r10c1-t4 r1c2-t4">
<p>STRING</p>
</td>
<td class="cellalignment3022" headers="r10c1-t4 r1c3-t4">
<p>Maximum value for P1.</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r11c1-t4" headers="r1c1-t4">
<p>P2</p>
</td>
<td class="cellalignment3022" headers="r11c1-t4 r1c2-t4">
<p>STRING</p>
</td>
<td class="cellalignment3022" headers="r11c1-t4 r1c3-t4">
<p>Specifies either Size, Precision, or Scale.</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r12c1-t4" headers="r1c1-t4">
<p>P2TYPE</p>
</td>
<td class="cellalignment3022" headers="r12c1-t4 r1c2-t4">
<p>STRING</p>
</td>
<td class="cellalignment3022" headers="r12c1-t4 r1c3-t4">
<p>Specifies the range.</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r13c1-t4" headers="r1c1-t4">
<p>P2DEFAULT</p>
</td>
<td class="cellalignment3022" headers="r13c1-t4 r1c2-t4">
<p>STRING</p>
</td>
<td class="cellalignment3022" headers="r13c1-t4 r1c3-t4">
<p>Default value for P2.</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r14c1-t4" headers="r1c1-t4">
<p>P2MIN</p>
</td>
<td class="cellalignment3022" headers="r14c1-t4 r1c2-t4">
<p>STRING</p>
</td>
<td class="cellalignment3022" headers="r14c1-t4 r1c3-t4">
<p>Minimum value for P2.</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r15c1-t4" headers="r1c1-t4">
<p>P2MAX</p>
</td>
<td class="cellalignment3022" headers="r15c1-t4 r1c2-t4">
<p>STRING</p>
</td>
<td class="cellalignment3022" headers="r15c1-t4 r1c3-t4">
<p>Maximum value for P2.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="sect2" -->
<div class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref455"></a>
<h3 class="sect2">Defining the Data Type Map</h3>
<p>After you define data types for a platform, you must also define how these data types map to other generic data types. You can define these data type mappings with the properties listed in <a href="#CIHICABH">Table 11-3</a>.</p>
<div class="tblformal">
<p class="titleintable"><a id="sthref456"></a><a id="CIHICABH"></a>Table 11-3 Data Type Mapping Properties</p>
<table class="cellalignment3020" title="Data Type Mapping Properties" summary="data type mapping between platforms" dir="ltr">
<thead>
<tr class="cellalignment3014">
<th class="cellalignment3021" id="r1c1-t5">Property</th>
<th class="cellalignment3021" id="r1c2-t5">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r2c1-t5" headers="r1c1-t5">
<p>NAME</p>
</td>
<td class="cellalignment3022" headers="r2c1-t5 r1c2-t5">
<p>The physical name of the map.</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r3c1-t5" headers="r1c1-t5">
<p>BUSINESS_NAME</p>
</td>
<td class="cellalignment3022" headers="r3c1-t5 r1c2-t5">
<p>Business name of the map.</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r4c1-t5" headers="r1c1-t5">
<p>DESCRIPTION</p>
</td>
<td class="cellalignment3022" headers="r4c1-t5 r1c2-t5">
<p>Description of the map.</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r5c1-t5" headers="r1c1-t5">
<p>FROM_DATATYPE</p>
</td>
<td class="cellalignment3022" headers="r5c1-t5 r1c2-t5">
<p>The data type to map from.</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r6c1-t5" headers="r1c1-t5">
<p>TO_DATATYPE</p>
</td>
<td class="cellalignment3022" headers="r6c1-t5 r1c2-t5">
<p>Data type to be mapped to.</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r7c1-t5" headers="r1c1-t5">
<p>CONDITION1</p>
</td>
<td class="cellalignment3022" headers="r7c1-t5 r1c2-t5">
<p>Defines the condition where the data type mapping is valid. For example, mapping from a generic CHAR data type to a DB2UDB CHAR data type is dependent on the size of the characters, and this size is specified in the CONDITION1 parameter.</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r8c1-t5" headers="r1c1-t5">
<p>CONDITION2</p>
</td>
<td class="cellalignment3022" headers="r8c1-t5 r1c2-t5">
<p>Used for setting additional condition.</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r9c1-t5" headers="r1c1-t5">
<p>CONDITION3</p>
</td>
<td class="cellalignment3022" headers="r9c1-t5 r1c2-t5">
<p>Used for setting additional condition.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="sect2" -->
<div class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref457"></a>
<h3 class="sect2">Generic Data Types Supported in Oracle Warehouse Builder</h3>
<p>The Generic data types supported in Oracle Warehouse Builder are listed in <a href="#CIHIHGIA">Table 11-4</a>.</p>
<div class="tblformal">
<p class="titleintable"><a id="sthref458"></a><a id="CIHIHGIA"></a>Table 11-4 Generic Data Types</p>
<table class="cellalignment3020" title="Generic Data Types" summary="Generic Datatypes" dir="ltr">
<thead>
<tr class="cellalignment3014">
<th class="cellalignment3021" id="r1c1-t6">Category</th>
<th class="cellalignment3021" id="r1c2-t6">Generic Data Type</th>
<th class="cellalignment3021" id="r1c3-t6">Parameters</th>
<th class="cellalignment3021" id="r1c4-t6">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r2c1-t6" headers="r1c1-t6">
<p>Numbers</p>
</td>
<td class="cellalignment3022" headers="r2c1-t6 r1c2-t6">
<p>BIGINT</p>
</td>
<td class="cellalignment3022" headers="r2c1-t6 r1c3-t6">&nbsp;</td>
<td class="cellalignment3022" headers="r2c1-t6 r1c4-t6">
<p>Range is -2^63 to 2^63-1</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r3c1-t6" headers="r1c1-t6">&nbsp;</td>
<td class="cellalignment3022" headers="r3c1-t6 r1c2-t6">
<p>BINARY_FLOAT</p>
</td>
<td class="cellalignment3022" headers="r3c1-t6 r1c3-t6">&nbsp;</td>
<td class="cellalignment3022" headers="r3c1-t6 r1c4-t6">
<p>Single precision floating point numbers</p>
<p>Minimum positive finite value = 1.17549E-38F</p>
<p>Maximum positive finite value = 3.40282E+38F</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r4c1-t6" headers="r1c1-t6">&nbsp;</td>
<td class="cellalignment3022" headers="r4c1-t6 r1c2-t6">
<p>BINARY_DOUBLE</p>
</td>
<td class="cellalignment3022" headers="r4c1-t6 r1c3-t6">&nbsp;</td>
<td class="cellalignment3022" headers="r4c1-t6 r1c4-t6">
<p>Double precision floating point numbers</p>
<p>Minimum positive finite value = 2.22507485850720E-308</p>
<p>Maximum positive finite value = 31.79769313486231E+308</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r5c1-t6" headers="r1c1-t6">&nbsp;</td>
<td class="cellalignment3022" headers="r5c1-t6 r1c2-t6">
<p>BIT</p>
</td>
<td class="cellalignment3022" headers="r5c1-t6 r1c3-t6">&nbsp;</td>
<td class="cellalignment3022" headers="r5c1-t6 r1c4-t6">
<p>An integer data type that can take a value of 1, 0, or NULL</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r6c1-t6" headers="r1c1-t6">&nbsp;</td>
<td class="cellalignment3022" headers="r6c1-t6 r1c2-t6">
<p>FLOAT</p>
</td>
<td class="cellalignment3022" headers="r6c1-t6 r1c3-t6">
<p>FLOAT (precision)</p>
</td>
<td class="cellalignment3022" headers="r6c1-t6 r1c4-t6">
<p>-1.79769E+308 to -2.23E-308, 0 and 2.23E-308 to 1.79769E+308</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r7c1-t6" headers="r1c1-t6">&nbsp;</td>
<td class="cellalignment3022" headers="r7c1-t6 r1c2-t6">
<p>DOUBLE</p>
</td>
<td class="cellalignment3022" headers="r7c1-t6 r1c3-t6">
<p>DOUBLE (precision)</p>
</td>
<td class="cellalignment3022" headers="r7c1-t6 r1c4-t6">
<p>-1.79769E+308 to -2.23E-308, 0 and 2.23E-308 to 1.79769E+308</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r8c1-t6" headers="r1c1-t6">&nbsp;</td>
<td class="cellalignment3022" headers="r8c1-t6 r1c2-t6">
<p>INTEGER</p>
</td>
<td class="cellalignment3022" headers="r8c1-t6 r1c3-t6">&nbsp;</td>
<td class="cellalignment3022" headers="r8c1-t6 r1c4-t6">
<p>NUMERIC(38)</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r9c1-t6" headers="r1c1-t6">&nbsp;</td>
<td class="cellalignment3022" headers="r9c1-t6 r1c2-t6">
<p>INT10</p>
</td>
<td class="cellalignment3022" headers="r9c1-t6 r1c3-t6">&nbsp;</td>
<td class="cellalignment3022" headers="r9c1-t6 r1c4-t6">
<p>The range of large integers is -2 147 483 648 to +2 147 483 647</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r10c1-t6" headers="r1c1-t6">&nbsp;</td>
<td class="cellalignment3022" headers="r10c1-t6 r1c2-t6">
<p>MONEY</p>
</td>
<td class="cellalignment3022" headers="r10c1-t6 r1c3-t6">&nbsp;</td>
<td class="cellalignment3022" headers="r10c1-t6 r1c4-t6">
<p>Ranges from -922,337,203,685,477.5808 to 922,337,203,685,477.5807. (Used only by MS SQL Server)</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r11c1-t6" headers="r1c1-t6">&nbsp;</td>
<td class="cellalignment3022" headers="r11c1-t6 r1c2-t6">
<p>NUMERIC</p>
</td>
<td class="cellalignment3022" headers="r11c1-t6 r1c3-t6">
<p>NUMERIC [(precision [, scale])]</p>
</td>
<td class="cellalignment3022" headers="r11c1-t6 r1c4-t6">
<p>The precision p can range from 1 to 38. The scale s can range from -84 to 127</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r12c1-t6" headers="r1c1-t6">&nbsp;</td>
<td class="cellalignment3022" headers="r12c1-t6 r1c2-t6">
<p>DECIMAL</p>
</td>
<td class="cellalignment3022" headers="r12c1-t6 r1c3-t6">
<p>DECIMAL [(precision [, scale])]</p>
</td>
<td class="cellalignment3022" headers="r12c1-t6 r1c4-t6">
<p>The precision p can range from 1 to 38. The scale s can range from -84 to 127</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r13c1-t6" headers="r1c1-t6">&nbsp;</td>
<td class="cellalignment3022" headers="r13c1-t6 r1c2-t6">
<p>REAL</p>
</td>
<td class="cellalignment3022" headers="r13c1-t6 r1c3-t6">&nbsp;</td>
<td class="cellalignment3022" headers="r13c1-t6 r1c4-t6">
<p>Ranges from - 3.40E + 38 to -1.18E - 38, 0 and 1.18E - 38 to 3.40E + 38</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r14c1-t6" headers="r1c1-t6">&nbsp;</td>
<td class="cellalignment3022" headers="r14c1-t6 r1c2-t6">
<p>SMALLINT</p>
</td>
<td class="cellalignment3022" headers="r14c1-t6 r1c3-t6">&nbsp;</td>
<td class="cellalignment3022" headers="r14c1-t6 r1c4-t6">
<p>Ranges from -2^15 (-32,768) to 2^15-1 (32,767)</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r15c1-t6" headers="r1c1-t6">&nbsp;</td>
<td class="cellalignment3022" headers="r15c1-t6 r1c2-t6">
<p>SMALLMONEY</p>
</td>
<td class="cellalignment3022" headers="r15c1-t6 r1c3-t6">&nbsp;</td>
<td class="cellalignment3022" headers="r15c1-t6 r1c4-t6">
<p>Ranges from - 214,748.3648 to 214,748.3647</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r16c1-t6" headers="r1c1-t6">&nbsp;</td>
<td class="cellalignment3022" headers="r16c1-t6 r1c2-t6">
<p>TINYINT</p>
</td>
<td class="cellalignment3022" headers="r16c1-t6 r1c3-t6">&nbsp;</td>
<td class="cellalignment3022" headers="r16c1-t6 r1c4-t6">
<p>Ranges from 0 to 255</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r17c1-t6" headers="r1c1-t6">
<p>Large Objects</p>
</td>
<td class="cellalignment3022" headers="r17c1-t6 r1c2-t6">
<p>BLOB</p>
</td>
<td class="cellalignment3022" headers="r17c1-t6 r1c3-t6">
<p>BLOB</p>
</td>
<td class="cellalignment3022" headers="r17c1-t6 r1c4-t6">
<p>A binary large object, with no limit on the maximum size</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r18c1-t6" headers="r1c1-t6">&nbsp;</td>
<td class="cellalignment3022" headers="r18c1-t6 r1c2-t6">
<p>VARLOB</p>
</td>
<td class="cellalignment3022" headers="r18c1-t6 r1c3-t6">
<p>VARBLOB [(size[K|M|G])]</p>
</td>
<td class="cellalignment3022" headers="r18c1-t6 r1c4-t6">
<p>A binary large object is a varying-length binary string that can be up to 2 GB (2 147 483 647 bytes) long. The default value is 1 MB (1,048,576)</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r19c1-t6" headers="r1c1-t6">&nbsp;</td>
<td class="cellalignment3022" headers="r19c1-t6 r1c2-t6">
<p>CLOB</p>
</td>
<td class="cellalignment3022" headers="r19c1-t6 r1c3-t6">&nbsp;</td>
<td class="cellalignment3022" headers="r19c1-t6 r1c4-t6">
<p>Character large object. No limit on the maximum size</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r20c1-t6" headers="r1c1-t6">&nbsp;</td>
<td class="cellalignment3022" headers="r20c1-t6 r1c2-t6">
<p>VARCLOB</p>
</td>
<td class="cellalignment3022" headers="r20c1-t6 r1c3-t6">
<p>VARCLOB [(size[K|M|G])]</p>
</td>
<td class="cellalignment3022" headers="r20c1-t6 r1c4-t6">
<p>A CLOB (character large object) value can be up to 2 GB (2 147 483 647 bytes) long. The default value is 1 MB (1,048,576)</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r21c1-t6" headers="r1c1-t6">&nbsp;</td>
<td class="cellalignment3022" headers="r21c1-t6 r1c2-t6">
<p>DBCLOB</p>
</td>
<td class="cellalignment3022" headers="r21c1-t6 r1c3-t6">
<p>DBCLOB [(size[K|M|G])]</p>
</td>
<td class="cellalignment3022" headers="r21c1-t6 r1c4-t6">
<p>A DBCLOB (double-byte character large object) value can be up to 1 073 741 823 double-byte characters long. (Only used by IBM DB2 UDB)</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r22c1-t6" headers="r1c1-t6">&nbsp;</td>
<td class="cellalignment3022" headers="r22c1-t6 r1c2-t6">
<p>NCLOB</p>
</td>
<td class="cellalignment3022" headers="r22c1-t6 r1c3-t6">&nbsp;</td>
<td class="cellalignment3022" headers="r22c1-t6 r1c4-t6">
<p>Character large object in Unicode or double-byte. No limit on the maximum size</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r23c1-t6" headers="r1c1-t6">
<p>Character Strings</p>
</td>
<td class="cellalignment3022" headers="r23c1-t6 r1c2-t6">
<p>CHAR</p>
</td>
<td class="cellalignment3022" headers="r23c1-t6 r1c3-t6">
<p>CHAR[(size)]</p>
</td>
<td class="cellalignment3022" headers="r23c1-t6 r1c4-t6">
<p>Fixed length character data with size between 1 and 8000</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r24c1-t6" headers="r1c1-t6">&nbsp;</td>
<td class="cellalignment3022" headers="r24c1-t6 r1c2-t6">
<p>GRAPHIC</p>
</td>
<td class="cellalignment3022" headers="r24c1-t6 r1c3-t6">
<p>GRAPHIC (size)</p>
</td>
<td class="cellalignment3022" headers="r24c1-t6 r1c4-t6">
<p>The size attribute must be between 1 and 127, inclusive. (Only used by IBM DB2 UDB)</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r25c1-t6" headers="r1c1-t6">&nbsp;</td>
<td class="cellalignment3022" headers="r25c1-t6 r1c2-t6">
<p>LONGVARGRAPHIC</p>
</td>
<td class="cellalignment3022" headers="r25c1-t6 r1c3-t6">
<p>LONGVARGRAPHIC (size)</p>
</td>
<td class="cellalignment3022" headers="r25c1-t6 r1c4-t6">
<p>VARGRAPHIC value can be up to 16 350 double-byte characters long. (Only used by IBM DB2 UDB)</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r26c1-t6" headers="r1c1-t6">&nbsp;</td>
<td class="cellalignment3022" headers="r26c1-t6 r1c2-t6">
<p>NCHAR</p>
</td>
<td class="cellalignment3022" headers="r26c1-t6 r1c3-t6">
<p>NCHAR (size)</p>
</td>
<td class="cellalignment3022" headers="r26c1-t6 r1c4-t6">
<p>Fixed length (1 to 2000) Unicode or double-byte character data</p>
<p>Size: 1-4000</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r27c1-t6" headers="r1c1-t6">&nbsp;</td>
<td class="cellalignment3022" headers="r27c1-t6 r1c2-t6">
<p>NVARCHAR</p>
</td>
<td class="cellalignment3022" headers="r27c1-t6 r1c3-t6">
<p>NVARCHAR (size)</p>
</td>
<td class="cellalignment3022" headers="r27c1-t6 r1c4-t6">
<p>Variable length (1 to 4000) Unicode or double-byte character data</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r28c1-t6" headers="r1c1-t6">&nbsp;</td>
<td class="cellalignment3022" headers="r28c1-t6 r1c2-t6">
<p>NVARCHARMAX</p>
</td>
<td class="cellalignment3022" headers="r28c1-t6 r1c3-t6">
<p>NVARCHARMAX</p>
</td>
<td class="cellalignment3022" headers="r28c1-t6 r1c4-t6">
<p>Variable length (1 to 2^31-1) Unicode or double-byte character data</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r29c1-t6" headers="r1c1-t6">&nbsp;</td>
<td class="cellalignment3022" headers="r29c1-t6 r1c2-t6">
<p>VARCHAR</p>
</td>
<td class="cellalignment3022" headers="r29c1-t6 r1c3-t6">
<p>VARCHAR (size)</p>
</td>
<td class="cellalignment3022" headers="r29c1-t6 r1c4-t6">
<p>Variable length (1 to 8000) character data</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r30c1-t6" headers="r1c1-t6">&nbsp;</td>
<td class="cellalignment3022" headers="r30c1-t6 r1c2-t6">
<p>VARCHARMAX</p>
</td>
<td class="cellalignment3022" headers="r30c1-t6 r1c3-t6">
<p>VARCHARMAX</p>
</td>
<td class="cellalignment3022" headers="r30c1-t6 r1c4-t6">
<p>Variable length (1 to 2^31) character data</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r31c1-t6" headers="r1c1-t6">&nbsp;</td>
<td class="cellalignment3022" headers="r31c1-t6 r1c2-t6">
<p>VARGRAPHIC</p>
</td>
<td class="cellalignment3022" headers="r31c1-t6 r1c3-t6">
<p>VARGRAPHIC (size)</p>
</td>
<td class="cellalignment3022" headers="r31c1-t6 r1c4-t6">
<p>A VARGRAPHIC value can be up to 16 336 double-byte characters long. (Only used by IBM DB2 UDB)</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r32c1-t6" headers="r1c1-t6">
<p>Date and Time</p>
</td>
<td class="cellalignment3022" headers="r32c1-t6 r1c2-t6">
<p>DATE</p>
</td>
<td class="cellalignment3022" headers="r32c1-t6 r1c3-t6">&nbsp;</td>
<td class="cellalignment3022" headers="r32c1-t6 r1c4-t6">
<p>Date in year, month, day, hour, minute, and second without fractional seconds precision or time zone</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r33c1-t6" headers="r1c1-t6">&nbsp;</td>
<td class="cellalignment3022" headers="r33c1-t6 r1c2-t6">
<p>DATETIME</p>
</td>
<td class="cellalignment3022" headers="r33c1-t6 r1c3-t6">&nbsp;</td>
<td class="cellalignment3022" headers="r33c1-t6 r1c4-t6">
<p>Range is January 1, 1753, through December 31, 9999, accuracy is 3.33 milliseconds. (MS SQL Server only)</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r34c1-t6" headers="r1c1-t6">&nbsp;</td>
<td class="cellalignment3022" headers="r34c1-t6 r1c2-t6">
<p>INTERVAL YEAR TO MONTH</p>
</td>
<td class="cellalignment3022" headers="r34c1-t6 r1c3-t6">
<p>INTERVAL DAY [(day_precision)] TO SECOND [(fractional_seconds_precision)]</p>
</td>
<td class="cellalignment3022" headers="r34c1-t6 r1c4-t6">
<p>Stores a period in days, hours, minutes, and seconds, where</p>
<p>day_precision is the maximum number of digits in the DAY datetime field. Accepted values are 0 to 9. The default is 2.</p>
<p>fractional_seconds_precision is the number of digits in the fractional part of the SECOND field. Accepted values are 0 to 9. The default is 6. The size is fixed at 11 bytes.</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r35c1-t6" headers="r1c1-t6">&nbsp;</td>
<td class="cellalignment3022" headers="r35c1-t6 r1c2-t6">
<p>SMALLDATETIME</p>
</td>
<td class="cellalignment3022" headers="r35c1-t6 r1c3-t6">&nbsp;</td>
<td class="cellalignment3022" headers="r35c1-t6 r1c4-t6">
<p>Range is January 1, 1900, through June 6, 2079; accuracy is 1 minute</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r36c1-t6" headers="r1c1-t6">&nbsp;</td>
<td class="cellalignment3022" headers="r36c1-t6 r1c2-t6">
<p>TIME</p>
</td>
<td class="cellalignment3022" headers="r36c1-t6 r1c3-t6">&nbsp;</td>
<td class="cellalignment3022" headers="r36c1-t6 r1c4-t6">
<p>A TIME is a three-part value (hour, minute, and second) designating a time of day under a 24-hour clock. The range of the hour part is 0 to 24. The range of the other two parts is 0 to 59. If the hour is 24, the minute and second specifications are zero.</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r37c1-t6" headers="r1c1-t6">&nbsp;</td>
<td class="cellalignment3022" headers="r37c1-t6 r1c2-t6">
<p>TIMESTAMP</p>
</td>
<td class="cellalignment3022" headers="r37c1-t6 r1c3-t6">
<p>TIMESTAMP [(fractional_seconds_precision)]</p>
</td>
<td class="cellalignment3022" headers="r37c1-t6 r1c4-t6">
<p>DATE with factional seconds precision</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r38c1-t6" headers="r1c1-t6">&nbsp;</td>
<td class="cellalignment3022" headers="r38c1-t6 r1c2-t6">
<p>TIMESTAMP WITH TIME ZONE</p>
</td>
<td class="cellalignment3022" headers="r38c1-t6 r1c3-t6">
<p>TIMESTAMP [(fractional_seconds_precision)] WITH TIME ZONE</p>
</td>
<td class="cellalignment3022" headers="r38c1-t6 r1c4-t6">
<p>TIMESTAMP plus time zone displacement value</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r39c1-t6" headers="r1c1-t6">&nbsp;</td>
<td class="cellalignment3022" headers="r39c1-t6 r1c2-t6">
<p>TIMESTAMP WITH LOCAL TIME ZONE</p>
</td>
<td class="cellalignment3022" headers="r39c1-t6 r1c3-t6">
<p>TIMESTAMP [(fractional_seconds_precision)]</p>
<p>WITH LOCAL TIME ZONE</p>
</td>
<td class="cellalignment3022" headers="r39c1-t6 r1c4-t6">
<p>TIMESTAMP normalized to the database time zone</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r40c1-t6" headers="r1c1-t6">
<p>Binary Strings</p>
</td>
<td class="cellalignment3022" headers="r40c1-t6 r1c2-t6">
<p>BINARY</p>
</td>
<td class="cellalignment3022" headers="r40c1-t6 r1c3-t6">
<p>BINARY [(size)]</p>
</td>
<td class="cellalignment3022" headers="r40c1-t6 r1c4-t6">
<p>Binary data up to 8000 bytes</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r41c1-t6" headers="r1c1-t6">&nbsp;</td>
<td class="cellalignment3022" headers="r41c1-t6 r1c2-t6">
<p>VARBINARY</p>
</td>
<td class="cellalignment3022" headers="r41c1-t6 r1c3-t6">
<p>VARBINARY [(size)]</p>
</td>
<td class="cellalignment3022" headers="r41c1-t6 r1c4-t6">
<p>Binary data of variable length up to 8000</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r42c1-t6" headers="r1c1-t6">&nbsp;</td>
<td class="cellalignment3022" headers="r42c1-t6 r1c2-t6">
<p>VARBINARYMAX</p>
</td>
<td class="cellalignment3022" headers="r42c1-t6 r1c3-t6">
<p>VARBINARY [(size)]</p>
</td>
<td class="cellalignment3022" headers="r42c1-t6 r1c4-t6">
<p>Binary data of variable length up to 2 GB</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r43c1-t6" headers="r1c1-t6">&nbsp;</td>
<td class="cellalignment3022" headers="r43c1-t6 r1c2-t6">
<p>LONGVARBINARY</p>
</td>
<td class="cellalignment3022" headers="r43c1-t6 r1c3-t6">
<p>LONGVARBINARY</p>
</td>
<td class="cellalignment3022" headers="r43c1-t6 r1c4-t6">
<p>Raw binary data of variable length up to 2 gigabytes</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r44c1-t6" headers="r1c1-t6">&nbsp;</td>
<td class="cellalignment3022" headers="r44c1-t6 r1c2-t6">
<p>IMAGE</p>
</td>
<td class="cellalignment3022" headers="r44c1-t6 r1c3-t6">
<p>IMAGE</p>
</td>
<td class="cellalignment3022" headers="r44c1-t6 r1c4-t6">
<p>Variable-length binary data from 0 through 2^31-1 (2,147,483,647) bytes</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r45c1-t6" headers="r1c1-t6">
<p>Others</p>
</td>
<td class="cellalignment3022" headers="r45c1-t6 r1c2-t6">
<p>UNDEFINED</p>
</td>
<td class="cellalignment3022" headers="r45c1-t6 r1c3-t6">
<p>UNDEFINED</p>
</td>
<td class="cellalignment3022" headers="r45c1-t6 r1c4-t6">
<p>Represent all non-supported data types (catch-all)</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r46c1-t6" headers="r1c1-t6">&nbsp;</td>
<td class="cellalignment3022" headers="r46c1-t6 r1c2-t6">
<p>XMLTYPE</p>
</td>
<td class="cellalignment3022" headers="r46c1-t6 r1c3-t6">
<p>XMLTYPE</p>
</td>
<td class="cellalignment3022" headers="r46c1-t6 r1c4-t6">
<p>Only mapped between Oracle/Oracle Work Flow and Generic</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r47c1-t6" headers="r1c1-t6">&nbsp;</td>
<td class="cellalignment3022" headers="r47c1-t6 r1c2-t6">
<p>BOOLEAN</p>
</td>
<td class="cellalignment3022" headers="r47c1-t6 r1c3-t6">
<p>BOOLEAN</p>
</td>
<td class="cellalignment3022" headers="r47c1-t6 r1c4-t6">
<p>Only mapped between Oracle/Oracle Work Flow and Generic</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="sect2" -->
<div class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref459"></a>
<h3 class="sect2">DB2 Data Types Mapping</h3>
<p><a href="#CIHDJFBD">Table 11-5</a> lists the mapping of DB2 data types to generic data types.</p>
<div class="tblformal">
<p class="titleintable"><a id="sthref460"></a><a id="CIHDJFBD"></a>Table 11-5 DB2 Data Types to Generic Data Types</p>
<table class="cellalignment3020" title="DB2 Data Types to Generic Data Types" summary="DB2 Datatypes to Generic Datatypes" dir="ltr">
<thead>
<tr class="cellalignment3014">
<th class="cellalignment3021" id="r1c1-t7">DB2 Data Type</th>
<th class="cellalignment3021" id="r1c2-t7">Generic Data Type</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r2c1-t7" headers="r1c1-t7">
<p>CHARACTER, CHAR</p>
</td>
<td class="cellalignment3022" headers="r2c1-t7 r1c2-t7">
<p>CHAR</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r3c1-t7" headers="r1c1-t7">
<p>VARCHAR, CHARACTER VARYING, CHAR VARYING</p>
</td>
<td class="cellalignment3022" headers="r3c1-t7 r1c2-t7">
<p>VARCHAR</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r4c1-t7" headers="r1c1-t7">
<p>LONG VARCHAR</p>
</td>
<td class="cellalignment3022" headers="r4c1-t7 r1c2-t7">
<p>LONG VARCHAR</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r5c1-t7" headers="r1c1-t7">
<p>GRAPHIC</p>
</td>
<td class="cellalignment3022" headers="r5c1-t7 r1c2-t7">
<p>GRAPHIC</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r6c1-t7" headers="r1c1-t7">
<p>VARGRAPHIC</p>
</td>
<td class="cellalignment3022" headers="r6c1-t7 r1c2-t7">
<p>VARGRAPHIC</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r7c1-t7" headers="r1c1-t7">
<p>LONG VARGRAPHIC</p>
</td>
<td class="cellalignment3022" headers="r7c1-t7 r1c2-t7">
<p>LONG VARGRAPHIC</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r8c1-t7" headers="r1c1-t7">
<p>DBCLOB</p>
</td>
<td class="cellalignment3022" headers="r8c1-t7 r1c2-t7">
<p>DBCLOB</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r9c1-t7" headers="r1c1-t7">
<p>SMALLINT</p>
</td>
<td class="cellalignment3022" headers="r9c1-t7 r1c2-t7">
<p>SMALLINT</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r10c1-t7" headers="r1c1-t7">
<p>INTEGER, INT</p>
</td>
<td class="cellalignment3022" headers="r10c1-t7 r1c2-t7">
<p>INT10</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r11c1-t7" headers="r1c1-t7">
<p>BIGINT</p>
</td>
<td class="cellalignment3022" headers="r11c1-t7 r1c2-t7">
<p>BIGINT</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r12c1-t7" headers="r1c1-t7">
<p>NUMERIC, NUM</p>
</td>
<td class="cellalignment3022" headers="r12c1-t7 r1c2-t7">
<p>NUMERIC</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r13c1-t7" headers="r1c1-t7">
<p>DECIMAL, DEC</p>
</td>
<td class="cellalignment3022" headers="r13c1-t7 r1c2-t7">
<p>DECIMAL</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r14c1-t7" headers="r1c1-t7">
<p>REAL</p>
</td>
<td class="cellalignment3022" headers="r14c1-t7 r1c2-t7">
<p>REAL</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r15c1-t7" headers="r1c1-t7">
<p>FLOAT</p>
</td>
<td class="cellalignment3022" headers="r15c1-t7 r1c2-t7">
<p>FLOAT</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r16c1-t7" headers="r1c1-t7">
<p>DOUBLE</p>
</td>
<td class="cellalignment3022" headers="r16c1-t7 r1c2-t7">
<p>DOUBLE</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r17c1-t7" headers="r1c1-t7">
<p>DATE</p>
</td>
<td class="cellalignment3022" headers="r17c1-t7 r1c2-t7">
<p>DATE</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r18c1-t7" headers="r1c1-t7">
<p>TIMESTAMP</p>
</td>
<td class="cellalignment3022" headers="r18c1-t7 r1c2-t7">
<p>TIMESTAMP</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r19c1-t7" headers="r1c1-t7">
<p>TIME</p>
</td>
<td class="cellalignment3022" headers="r19c1-t7 r1c2-t7">
<p>TIME</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r20c1-t7" headers="r1c1-t7">
<p>BLOB, BINARY LARGE OBJECT</p>
</td>
<td class="cellalignment3022" headers="r20c1-t7 r1c2-t7">
<p>VARLOB</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r21c1-t7" headers="r1c1-t7">
<p>CLOB, CHARACTER LARGE OBJECT, CHAR LARGE OBJECT</p>
</td>
<td class="cellalignment3022" headers="r21c1-t7 r1c2-t7">
<p>VARCLOB</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<p><a href="#CIHICABA">Table 11-6</a> lists the mapping of generic data types to DB2 data types.</p>
<div class="tblformal">
<p class="titleintable"><a id="sthref461"></a><a id="CIHICABA"></a>Table 11-6 Generic Data Types to DB2 Data Types</p>
<table class="cellalignment3020" title="Generic Data Types to DB2 Data Types" summary="Generic Datatypes to DB2 Datatypes" dir="ltr">
<thead>
<tr class="cellalignment3014">
<th class="cellalignment3021" id="r1c1-t8">Generic Data Type</th>
<th class="cellalignment3021" id="r1c2-t8">DB2 Data Type</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r2c1-t8" headers="r1c1-t8">
<p>BIGINT</p>
</td>
<td class="cellalignment3022" headers="r2c1-t8 r1c2-t8">
<p>BIGINT</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r3c1-t8" headers="r1c1-t8">
<p>BINARY_FLOAT</p>
</td>
<td class="cellalignment3022" headers="r3c1-t8 r1c2-t8">
<p>REAL</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r4c1-t8" headers="r1c1-t8">
<p>BINARY_DOUBLE</p>
</td>
<td class="cellalignment3022" headers="r4c1-t8 r1c2-t8">
<p>FLOAT(53)</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r5c1-t8" headers="r1c1-t8">
<p>BIT</p>
</td>
<td class="cellalignment3022" headers="r5c1-t8 r1c2-t8">
<p>NUMERIC(1)</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r6c1-t8" headers="r1c1-t8">
<p>FLOAT [(precision)]</p>
</td>
<td class="cellalignment3022" headers="r6c1-t8 r1c2-t8">
<p>FLOAT [(precision)]</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r7c1-t8" headers="r1c1-t8">
<p>DOUBLE [(precision)]</p>
</td>
<td class="cellalignment3022" headers="r7c1-t8 r1c2-t8">
<p>DOUBLE [(precision)]</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r8c1-t8" headers="r1c1-t8">
<p>INTEGER</p>
</td>
<td class="cellalignment3022" headers="r8c1-t8 r1c2-t8">
<p>NUMERIC(31)</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r9c1-t8" headers="r1c1-t8">
<p>INT10</p>
</td>
<td class="cellalignment3022" headers="r9c1-t8 r1c2-t8">
<p>INTEGER</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r10c1-t8" headers="r1c1-t8">
<p>MONEY</p>
</td>
<td class="cellalignment3022" headers="r10c1-t8 r1c2-t8">
<p>REAL</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r11c1-t8" headers="r1c1-t8">
<p>NUMERIC [(precision [, scale])]</p>
</td>
<td class="cellalignment3022" headers="r11c1-t8 r1c2-t8">
<p>NUMERIC [(precision [, scale])]</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r12c1-t8" headers="r1c1-t8">
<p>DECIMAL [(precision [, scale])]</p>
</td>
<td class="cellalignment3022" headers="r12c1-t8 r1c2-t8">
<p>DECIMAL [(precision [, scale])]</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r13c1-t8" headers="r1c1-t8">
<p>REAL</p>
</td>
<td class="cellalignment3022" headers="r13c1-t8 r1c2-t8">
<p>REAL</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r14c1-t8" headers="r1c1-t8">
<p>SMALLINT</p>
</td>
<td class="cellalignment3022" headers="r14c1-t8 r1c2-t8">
<p>SMALLINT</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r15c1-t8" headers="r1c1-t8">
<p>SMALLMONEY</p>
</td>
<td class="cellalignment3022" headers="r15c1-t8 r1c2-t8">
<p>REAL</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r16c1-t8" headers="r1c1-t8">
<p>TINYINT</p>
</td>
<td class="cellalignment3022" headers="r16c1-t8 r1c2-t8">
<p>SMALLINT</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r17c1-t8" headers="r1c1-t8">
<p>BLOB</p>
</td>
<td class="cellalignment3022" headers="r17c1-t8 r1c2-t8">
<p>BLOB</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r18c1-t8" headers="r1c1-t8">
<p>VARLOB</p>
</td>
<td class="cellalignment3022" headers="r18c1-t8 r1c2-t8">
<p>BLOB</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r19c1-t8" headers="r1c1-t8">
<p>CLOB</p>
</td>
<td class="cellalignment3022" headers="r19c1-t8 r1c2-t8">
<p>CLOB (2147483647)</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r20c1-t8" headers="r1c1-t8">
<p>VARCLOB</p>
</td>
<td class="cellalignment3022" headers="r20c1-t8 r1c2-t8">
<p>CLOB</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r21c1-t8" headers="r1c1-t8">
<p>DBCLOB [(size [K|M|G])]</p>
</td>
<td class="cellalignment3022" headers="r21c1-t8 r1c2-t8">
<p>DBCLOB [(size [K|M|G])]</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r22c1-t8" headers="r1c1-t8">
<p>NCLOB</p>
</td>
<td class="cellalignment3022" headers="r22c1-t8 r1c2-t8">
<p>DBCLOB</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r23c1-t8" headers="r1c1-t8">
<p>CHAR [(size)]</p>
</td>
<td class="cellalignment3022" headers="r23c1-t8 r1c2-t8">
<p>CHAR [(size)]</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r24c1-t8" headers="r1c1-t8">
<p>GRAPHIC (size)</p>
</td>
<td class="cellalignment3022" headers="r24c1-t8 r1c2-t8">
<p>GRAPHIC (size)</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r25c1-t8" headers="r1c1-t8">
<p>LONGVARCHAR</p>
</td>
<td class="cellalignment3022" headers="r25c1-t8 r1c2-t8">
<p>LONGVARCHAR</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r26c1-t8" headers="r1c1-t8">
<p>LONGVARGRAPHIC</p>
</td>
<td class="cellalignment3022" headers="r26c1-t8 r1c2-t8">
<p>LONGVARGRAPHIC</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r27c1-t8" headers="r1c1-t8">
<p>NCHAR [(size)]</p>
</td>
<td class="cellalignment3022" headers="r27c1-t8 r1c2-t8">
<p>VARGRAPHIC [(size)]</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r28c1-t8" headers="r1c1-t8">
<p>NVARCHAR (size)</p>
</td>
<td class="cellalignment3022" headers="r28c1-t8 r1c2-t8">
<p>VARGRAPHIC (size)</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r29c1-t8" headers="r1c1-t8">
<p>NVARCHARMAX</p>
</td>
<td class="cellalignment3022" headers="r29c1-t8 r1c2-t8">
<p>DBCLOB</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r30c1-t8" headers="r1c1-t8">
<p>VARCHAR (size)</p>
</td>
<td class="cellalignment3022" headers="r30c1-t8 r1c2-t8">
<p>size&lt;=32,672: VARCHAR</p>
<p>32672&lt;size&lt;=32700:LONG VARCHAR</p>
<p>size&gt;32,700: CLOB</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r31c1-t8" headers="r1c1-t8">
<p>VARCHARMAX</p>
</td>
<td class="cellalignment3022" headers="r31c1-t8 r1c2-t8">
<p>CLOB</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r32c1-t8" headers="r1c1-t8">
<p>VARGRAPHIC (n)</p>
</td>
<td class="cellalignment3022" headers="r32c1-t8 r1c2-t8">
<p>VARGRAPHIC (n)</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r33c1-t8" headers="r1c1-t8">
<p>DATE</p>
</td>
<td class="cellalignment3022" headers="r33c1-t8 r1c2-t8">
<p>DATE</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r34c1-t8" headers="r1c1-t8">
<p>DATETIME</p>
</td>
<td class="cellalignment3022" headers="r34c1-t8 r1c2-t8">
<p>TIMESTAMP</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r35c1-t8" headers="r1c1-t8">
<p>INTERVAL YEAR [(year_precision)] TO MONTH</p>
</td>
<td class="cellalignment3022" headers="r35c1-t8 r1c2-t8">
<p>VARCHAR</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r36c1-t8" headers="r1c1-t8">
<p>INTERVAL DAY [(day_precision)] TO SECOND [(fractional_seconds_precision)]</p>
</td>
<td class="cellalignment3022" headers="r36c1-t8 r1c2-t8">
<p>VARCHAR</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r37c1-t8" headers="r1c1-t8">
<p>SMALLDATETIME</p>
</td>
<td class="cellalignment3022" headers="r37c1-t8 r1c2-t8">
<p>TIMESTAMP</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r38c1-t8" headers="r1c1-t8">
<p>TIME</p>
</td>
<td class="cellalignment3022" headers="r38c1-t8 r1c2-t8">
<p>TIME</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r39c1-t8" headers="r1c1-t8">
<p>TIMESTAMP [(fractional_seconds_precision)]</p>
</td>
<td class="cellalignment3022" headers="r39c1-t8 r1c2-t8">
<p>TIMESTAMP</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r40c1-t8" headers="r1c1-t8">
<p>TIMESTAMP [(fractional_seconds_precision)] WITH TIME ZONE</p>
</td>
<td class="cellalignment3022" headers="r40c1-t8 r1c2-t8">
<p>VARCHAR</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r41c1-t8" headers="r1c1-t8">
<p>TIMESTAMP [(fractional_seconds_precision)] WITH LOCAL TIME ZONE</p>
</td>
<td class="cellalignment3022" headers="r41c1-t8 r1c2-t8">
<p>VARCHAR</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r42c1-t8" headers="r1c1-t8">
<p>BINARY [(size)]</p>
</td>
<td class="cellalignment3022" headers="r42c1-t8 r1c2-t8">
<p>size&lt;=254: CHAR (size) FOR BIT DATA</p>
<p>size&gt;254:VARCHAR(size) FOR BIT DATA</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r43c1-t8" headers="r1c1-t8">
<p>VARBINARY [(size)]</p>
</td>
<td class="cellalignment3022" headers="r43c1-t8 r1c2-t8">
<p>size&lt;=32,672:VARCHAR(size) FOR BIT DATA</p>
<p>size&gt;32,672: BLOB</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r44c1-t8" headers="r1c1-t8">
<p>VARBINARYMAX</p>
</td>
<td class="cellalignment3022" headers="r44c1-t8 r1c2-t8">
<p>BLOB</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r45c1-t8" headers="r1c1-t8">
<p>LONGVARBINARY</p>
</td>
<td class="cellalignment3022" headers="r45c1-t8 r1c2-t8">
<p>BLOB</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r46c1-t8" headers="r1c1-t8">
<p>IMAGE</p>
</td>
<td class="cellalignment3022" headers="r46c1-t8 r1c2-t8">
<p>BLOB</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r47c1-t8" headers="r1c1-t8">
<p>UNDEFINED</p>
</td>
<td class="cellalignment3022" headers="r47c1-t8 r1c2-t8">
<p>VARCHAR(32672)</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r48c1-t8" headers="r1c1-t8">
<p>XMLTYPE</p>
</td>
<td class="cellalignment3022" headers="r48c1-t8 r1c2-t8">
<p>VARCHAR(32672)</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r49c1-t8" headers="r1c1-t8">
<p>BOOLEAN</p>
</td>
<td class="cellalignment3022" headers="r49c1-t8 r1c2-t8">
<p>VARCHAR(10)</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<p>There might be precision loss in the following cases:</p>
<ul>
<li>
<p>Mapping a generic NUMERIC data type (up to 38) to DB2 NUMERIC data type with a maximum precision of 31</p>
</li>
<li>
<p>Mapping a generic DECIMAL data type (up to 38) to DB2 DECIMAL data type with a maximum precision of 31</p>
</li>
<li>
<p>Mapping a generic INTEGER data type (up to 38) to DB2 NUMERIC(31) data type with a maximum precision of 31</p>
</li>
</ul>
</div>
<!-- class="sect2" -->
<div class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref462"></a>
<h3 class="sect2">MS SQL Server Data Types Mapping</h3>
<p><a href="#CIHBDBDB">Table 11-7</a> lists the mapping of MS SQL Server data types to generic data types.</p>
<div class="tblformal">
<p class="titleintable"><a id="sthref463"></a><a id="CIHBDBDB"></a>Table 11-7 MS SQL Server Data Types to Generic Data Types</p>
<table class="cellalignment3020" title="MS SQL Server Data Types to Generic Data Types" summary="MS SQL Server Datatypes to Generic Datatypes" dir="ltr">
<thead>
<tr class="cellalignment3014">
<th class="cellalignment3021" id="r1c1-t9">MS SQL Server Data Type</th>
<th class="cellalignment3021" id="r1c2-t9">Generic Data Type</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r2c1-t9" headers="r1c1-t9">
<p>CHAR</p>
</td>
<td class="cellalignment3022" headers="r2c1-t9 r1c2-t9">
<p>CHAR</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r3c1-t9" headers="r1c1-t9">
<p>VARCHAR</p>
</td>
<td class="cellalignment3022" headers="r3c1-t9 r1c2-t9">
<p>VARCHAR</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r4c1-t9" headers="r1c1-t9">
<p>VARCHAR(MAX)</p>
</td>
<td class="cellalignment3022" headers="r4c1-t9 r1c2-t9">
<p>VARCHARMAX</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r5c1-t9" headers="r1c1-t9">
<p>TEXT</p>
</td>
<td class="cellalignment3022" headers="r5c1-t9 r1c2-t9">
<p>VARCHAR(2147483647)</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r6c1-t9" headers="r1c1-t9">
<p>NCHAR</p>
</td>
<td class="cellalignment3022" headers="r6c1-t9 r1c2-t9">
<p>NCHAR</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r7c1-t9" headers="r1c1-t9">
<p>NVARCHAR</p>
</td>
<td class="cellalignment3022" headers="r7c1-t9 r1c2-t9">
<p>NVARCHAR</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r8c1-t9" headers="r1c1-t9">
<p>NVARCHAR(MAX)</p>
</td>
<td class="cellalignment3022" headers="r8c1-t9 r1c2-t9">
<p>NVARCHARMAX</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r9c1-t9" headers="r1c1-t9">
<p>NTEXT</p>
</td>
<td class="cellalignment3022" headers="r9c1-t9 r1c2-t9">
<p>NVARCHAR</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r10c1-t9" headers="r1c1-t9">
<p>BINARY</p>
</td>
<td class="cellalignment3022" headers="r10c1-t9 r1c2-t9">
<p>BINARY</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r11c1-t9" headers="r1c1-t9">
<p>VARBINARY</p>
</td>
<td class="cellalignment3022" headers="r11c1-t9 r1c2-t9">
<p>VARBINARY</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r12c1-t9" headers="r1c1-t9">
<p>VARBINARY(MAX)</p>
</td>
<td class="cellalignment3022" headers="r12c1-t9 r1c2-t9">
<p>VARBINARYMAX</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r13c1-t9" headers="r1c1-t9">
<p>IMAGE</p>
</td>
<td class="cellalignment3022" headers="r13c1-t9 r1c2-t9">
<p>IMAGE</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r14c1-t9" headers="r1c1-t9">
<p>SMALLINT</p>
</td>
<td class="cellalignment3022" headers="r14c1-t9 r1c2-t9">
<p>SMALLINT</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r15c1-t9" headers="r1c1-t9">
<p>INT</p>
</td>
<td class="cellalignment3022" headers="r15c1-t9 r1c2-t9">
<p>INT10</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r16c1-t9" headers="r1c1-t9">
<p>BIGINT</p>
</td>
<td class="cellalignment3022" headers="r16c1-t9 r1c2-t9">
<p>BIGINT</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r17c1-t9" headers="r1c1-t9">
<p>TINYINT</p>
</td>
<td class="cellalignment3022" headers="r17c1-t9 r1c2-t9">
<p>TINYINT</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r18c1-t9" headers="r1c1-t9">
<p>BIT</p>
</td>
<td class="cellalignment3022" headers="r18c1-t9 r1c2-t9">
<p>BIT</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r19c1-t9" headers="r1c1-t9">
<p>MONEY</p>
</td>
<td class="cellalignment3022" headers="r19c1-t9 r1c2-t9">
<p>MONEY</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r20c1-t9" headers="r1c1-t9">
<p>SMALLMONEY</p>
</td>
<td class="cellalignment3022" headers="r20c1-t9 r1c2-t9">
<p>SMALLMONEY</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r21c1-t9" headers="r1c1-t9">
<p>NUMERIC</p>
</td>
<td class="cellalignment3022" headers="r21c1-t9 r1c2-t9">
<p>NUMERIC</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r22c1-t9" headers="r1c1-t9">
<p>DECIMAL</p>
</td>
<td class="cellalignment3022" headers="r22c1-t9 r1c2-t9">
<p>DECIMAL</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r23c1-t9" headers="r1c1-t9">
<p>REAL</p>
</td>
<td class="cellalignment3022" headers="r23c1-t9 r1c2-t9">
<p>REAL</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r24c1-t9" headers="r1c1-t9">
<p>FLOAT</p>
</td>
<td class="cellalignment3022" headers="r24c1-t9 r1c2-t9">
<p>FLOAT</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r25c1-t9" headers="r1c1-t9">
<p>DATETIME</p>
</td>
<td class="cellalignment3022" headers="r25c1-t9 r1c2-t9">
<p>DATETIME</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r26c1-t9" headers="r1c1-t9">
<p>SMALLDATETIME</p>
</td>
<td class="cellalignment3022" headers="r26c1-t9 r1c2-t9">
<p>SMALLDATETIME</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r27c1-t9" headers="r1c1-t9">
<p>UNIQUEIDENTIFIER</p>
</td>
<td class="cellalignment3022" headers="r27c1-t9 r1c2-t9">
<p>UNDEFINED</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r28c1-t9" headers="r1c1-t9">
<p>XML</p>
</td>
<td class="cellalignment3022" headers="r28c1-t9 r1c2-t9">
<p>UNDEFINED</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r29c1-t9" headers="r1c1-t9">
<p>TIMESTAMP</p>
</td>
<td class="cellalignment3022" headers="r29c1-t9 r1c2-t9">
<p>UNDEFINED</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r30c1-t9" headers="r1c1-t9">
<p>SQL_VARIANT</p>
</td>
<td class="cellalignment3022" headers="r30c1-t9 r1c2-t9">
<p>UNDEFINED</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<p><a href="#CIHIDEDB">Table 11-8</a> lists the mapping of generic data types to MS SQL Server data types.</p>
<div class="tblformal">
<p class="titleintable"><a id="sthref464"></a><a id="CIHIDEDB"></a>Table 11-8 Generic Data Types to MS SQL Server Data Types</p>
<table class="cellalignment3020" title="Generic Data Types to MS SQL Server Data Types" summary="Generic Datatypes to MS SQL Server Datatypes" dir="ltr">
<thead>
<tr class="cellalignment3014">
<th class="cellalignment3021" id="r1c1-t10">Generic Data Type</th>
<th class="cellalignment3021" id="r1c2-t10">MS SQL Server Data Type</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r2c1-t10" headers="r1c1-t10">
<p>BIGINT</p>
</td>
<td class="cellalignment3022" headers="r2c1-t10 r1c2-t10">
<p>BIGINT</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r3c1-t10" headers="r1c1-t10">
<p>BINARY_FLOAT</p>
</td>
<td class="cellalignment3022" headers="r3c1-t10 r1c2-t10">
<p>REAL</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r4c1-t10" headers="r1c1-t10">
<p>BINARY_DOUBLE</p>
</td>
<td class="cellalignment3022" headers="r4c1-t10 r1c2-t10">
<p>FLOAT</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r5c1-t10" headers="r1c1-t10">
<p>BIT</p>
</td>
<td class="cellalignment3022" headers="r5c1-t10 r1c2-t10">
<p>BIT</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r6c1-t10" headers="r1c1-t10">
<p>FLOAT</p>
</td>
<td class="cellalignment3022" headers="r6c1-t10 r1c2-t10">
<p>FLOAT</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r7c1-t10" headers="r1c1-t10">
<p>DOUBLE</p>
</td>
<td class="cellalignment3022" headers="r7c1-t10 r1c2-t10">
<p>FLOAT</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r8c1-t10" headers="r1c1-t10">
<p>INTEGER</p>
</td>
<td class="cellalignment3022" headers="r8c1-t10 r1c2-t10">
<p>NUMERIC(38)</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r9c1-t10" headers="r1c1-t10">
<p>INT10</p>
</td>
<td class="cellalignment3022" headers="r9c1-t10 r1c2-t10">
<p>INT</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r10c1-t10" headers="r1c1-t10">
<p>MONEY</p>
</td>
<td class="cellalignment3022" headers="r10c1-t10 r1c2-t10">
<p>MONEY</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r11c1-t10" headers="r1c1-t10">
<p>NUMERIC</p>
</td>
<td class="cellalignment3022" headers="r11c1-t10 r1c2-t10">
<p>NUMERIC</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r12c1-t10" headers="r1c1-t10">
<p>DECIMAL</p>
</td>
<td class="cellalignment3022" headers="r12c1-t10 r1c2-t10">
<p>DECIMAL</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r13c1-t10" headers="r1c1-t10">
<p>REAL</p>
</td>
<td class="cellalignment3022" headers="r13c1-t10 r1c2-t10">
<p>REAL</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r14c1-t10" headers="r1c1-t10">
<p>SMALLINT</p>
</td>
<td class="cellalignment3022" headers="r14c1-t10 r1c2-t10">
<p>SMALLINT</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r15c1-t10" headers="r1c1-t10">
<p>SMALLMONEY</p>
</td>
<td class="cellalignment3022" headers="r15c1-t10 r1c2-t10">
<p>SMALLMONEY</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r16c1-t10" headers="r1c1-t10">
<p>TINYINT</p>
</td>
<td class="cellalignment3022" headers="r16c1-t10 r1c2-t10">
<p>TINYINT</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r17c1-t10" headers="r1c1-t10">
<p>BLOB</p>
</td>
<td class="cellalignment3022" headers="r17c1-t10 r1c2-t10">
<p>VARBINARY(MAX)</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r18c1-t10" headers="r1c1-t10">
<p>VARBLOB(N)</p>
</td>
<td class="cellalignment3022" headers="r18c1-t10 r1c2-t10">
<p>VARCHAR(MAX)</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r19c1-t10" headers="r1c1-t10">
<p>CLOB</p>
</td>
<td class="cellalignment3022" headers="r19c1-t10 r1c2-t10">
<p>VARCHAR(MAX)</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r20c1-t10" headers="r1c1-t10">
<p>VARCLOB(N)</p>
</td>
<td class="cellalignment3022" headers="r20c1-t10 r1c2-t10">
<p>VARCHAR(MAX)</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r21c1-t10" headers="r1c1-t10">
<p>DBCLOB</p>
</td>
<td class="cellalignment3022" headers="r21c1-t10 r1c2-t10">
<p>NVARCHAR(MAX)</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r22c1-t10" headers="r1c1-t10">
<p>NCLOB</p>
</td>
<td class="cellalignment3022" headers="r22c1-t10 r1c2-t10">
<p>NVARCHAR(MAX)</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r23c1-t10" headers="r1c1-t10">
<p>CHAR(N)</p>
</td>
<td class="cellalignment3022" headers="r23c1-t10 r1c2-t10">
<p>CHAR(N)</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r24c1-t10" headers="r1c1-t10">
<p>GRAPHIC(N)</p>
</td>
<td class="cellalignment3022" headers="r24c1-t10 r1c2-t10">
<p>NCHAR(254)</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r25c1-t10" headers="r1c1-t10">
<p>LONGVARCHAR</p>
</td>
<td class="cellalignment3022" headers="r25c1-t10 r1c2-t10">
<p>VARCHAR(MAX)</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r26c1-t10" headers="r1c1-t10">
<p>LONGVARGRAPHIC(N)</p>
</td>
<td class="cellalignment3022" headers="r26c1-t10 r1c2-t10">
<p>NVARCHAR(MAX)</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r27c1-t10" headers="r1c1-t10">
<p>NCHAR(N)</p>
</td>
<td class="cellalignment3022" headers="r27c1-t10 r1c2-t10">
<p>NCHAR(N)</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r28c1-t10" headers="r1c1-t10">
<p>NVARCHAR(N)</p>
</td>
<td class="cellalignment3022" headers="r28c1-t10 r1c2-t10">
<p>NVARCHAR(N)</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r29c1-t10" headers="r1c1-t10">
<p>NVARCHARMAX</p>
</td>
<td class="cellalignment3022" headers="r29c1-t10 r1c2-t10">
<p>NVARCHAR(MAX)</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r30c1-t10" headers="r1c1-t10">
<p>VARCHAR(N)</p>
</td>
<td class="cellalignment3022" headers="r30c1-t10 r1c2-t10">
<p>1&lt;=n&lt;=8000: varchar (n)</p>
<p>n&gt;8000: varchar (max)</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r31c1-t10" headers="r1c1-t10">
<p>VARCHARMAX</p>
</td>
<td class="cellalignment3022" headers="r31c1-t10 r1c2-t10">
<p>VARCHAR(MAX)</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r32c1-t10" headers="r1c1-t10">
<p>VARGRAPHIC(N)</p>
</td>
<td class="cellalignment3022" headers="r32c1-t10 r1c2-t10">
<p>NVARCHAR(MAX)</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r33c1-t10" headers="r1c1-t10">
<p>DATE</p>
</td>
<td class="cellalignment3022" headers="r33c1-t10 r1c2-t10">
<p>DATETIME</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r34c1-t10" headers="r1c1-t10">
<p>DATETIME</p>
</td>
<td class="cellalignment3022" headers="r34c1-t10 r1c2-t10">
<p>DATETIME</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r35c1-t10" headers="r1c1-t10">
<p>INTERVAL DAY TO SECOND</p>
</td>
<td class="cellalignment3022" headers="r35c1-t10 r1c2-t10">
<p>VARCHAR</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r36c1-t10" headers="r1c1-t10">
<p>INTERVAL YEAR TO MONTH</p>
</td>
<td class="cellalignment3022" headers="r36c1-t10 r1c2-t10">
<p>VARCHAR</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r37c1-t10" headers="r1c1-t10">
<p>SMALLDATETIME</p>
</td>
<td class="cellalignment3022" headers="r37c1-t10 r1c2-t10">
<p>SMALLDATETIME</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r38c1-t10" headers="r1c1-t10">
<p>TIME</p>
</td>
<td class="cellalignment3022" headers="r38c1-t10 r1c2-t10">
<p>VARCHAR</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r39c1-t10" headers="r1c1-t10">
<p>TIMESTAMP</p>
</td>
<td class="cellalignment3022" headers="r39c1-t10 r1c2-t10">
<p>DATETIME</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r40c1-t10" headers="r1c1-t10">
<p>TIMESTAMP WITH TIME ZONE</p>
</td>
<td class="cellalignment3022" headers="r40c1-t10 r1c2-t10">
<p>DATETIME</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r41c1-t10" headers="r1c1-t10">
<p>TIMESTAMP WITH LOCAL TIME ZONE</p>
</td>
<td class="cellalignment3022" headers="r41c1-t10 r1c2-t10">
<p>DATETIME</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r42c1-t10" headers="r1c1-t10">
<p>BINARY (size)</p>
</td>
<td class="cellalignment3022" headers="r42c1-t10 r1c2-t10">
<p>BINARY (size)</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r43c1-t10" headers="r1c1-t10">
<p>VARBINARY (size)</p>
</td>
<td class="cellalignment3022" headers="r43c1-t10 r1c2-t10">
<p>1&lt;=size&lt;=8000: varbinary (size)</p>
<p>n&gt;8000: varbinary (max)</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r44c1-t10" headers="r1c1-t10">
<p>VARBINARYMAX</p>
</td>
<td class="cellalignment3022" headers="r44c1-t10 r1c2-t10">
<p>VARBINARY(MAX)</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r45c1-t10" headers="r1c1-t10">
<p>LONGVARBINARY</p>
</td>
<td class="cellalignment3022" headers="r45c1-t10 r1c2-t10">
<p>VARBINARY(MAX)</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r46c1-t10" headers="r1c1-t10">
<p>IMAGE</p>
</td>
<td class="cellalignment3022" headers="r46c1-t10 r1c2-t10">
<p>IMAGE</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r47c1-t10" headers="r1c1-t10">
<p>UNDEFINED</p>
</td>
<td class="cellalignment3022" headers="r47c1-t10 r1c2-t10">
<p>VARCHAR(MAX)</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r48c1-t10" headers="r1c1-t10">
<p>XMLTYPE</p>
</td>
<td class="cellalignment3022" headers="r48c1-t10 r1c2-t10">
<p>VARCHAR(MAX)</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r49c1-t10" headers="r1c1-t10">
<p>BOOLEAN</p>
</td>
<td class="cellalignment3022" headers="r49c1-t10 r1c2-t10">
<p>VARCHAR(10)</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="sect2" -->
<div class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref465"></a>
<h3 class="sect2">Creating Modules Based on a Platform</h3>
<p>When you run the <code>OMBCREATE</code> command to create a platform, the corresponding platform node is added under the <code>Databases</code> node in the Projects Navigator. You can now create a module under this new platform.</p>
<p>For example, to create a module under <span class="bold">Microsoft_Excel</span>, right-click <span class="bold">Microsoft_Excel</span> and select <span class="bold">New Microsoft_Excel Module</span>. The Create Module Wizard guides you through the steps to create a module. This includes:</p>
<ol>
<li>
<p><a href="#CIHBHCGB">"Providing a Name and Access Method"</a></p>
</li>
<li>
<p><a href="#CIHIFAAA">"Providing Connection Information"</a></p>
</li>
</ol>
<p class="subhead2"><a id="CIHBHCGB"></a>Providing a Name and Access Method</p>
<p>On the Name and Description page, provide a name for the module. By default, this is a Generic Access module. Select the access method as well. It can be either <span class="bold">Native Database Connection</span> or <span class="bold">Gateway</span>. For native database connectivity, Oracle Warehouse Builder supports importing metadata based on JDBC. So if a JDBC or ODBC driver is installed on the system, you can use this driver for the data import. Click <span class="bold">Next</span> to open the Connection Information page.</p>
<p class="subhead2"><a id="CIHIFAAA"></a>Providing Connection Information</p>
<p>Native Database Connection implies a generic JDBC connection. Click <span class="bold">Edit</span> to open the Edit Generic JDBC Location dialog box and provide the location information. You must provide a JDBC URL in the UrL field and a JDBC driver in the Driver Class field.</p>
<p>If you select Gateway connection, then provide the database connection details.</p>
<p>A platform module supports the following objects:</p>
<ul>
<li>
<p>Transformations</p>
</li>
<li>
<p>Tables</p>
</li>
<li>
<p>Views</p>
</li>
</ul>
<p>The data you can store in these objects depends on the data types you defined for the platform.</p>
<p>You can also import metadata by defining a <a id="sthref466"></a><a id="sthref467"></a>Custom Metadata Interface (CMI) that is based on a custom API.</p>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="CIHGHHAB"></a>
<div class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Creating a Microsoft Excel Platform</h2>
<p>The following example creates a new platform to extract data from Microsoft Excel worksheets. This example lists only the most basic options to create the platform, including the connection information, and the supported data types. You can build on the platform by inserting additional features.</p>
<p>First, define the platform on the Projects Navigator:</p>
<pre>
OMBCREATE PLATFORM 'MICROSOFT_EXCEL' SET PROPERTIES (BUSINESS_NAME) VALUES ('Microsoft Excel')
</pre>
<p>Next, define the connection information for the platform. This includes specifying the ODBC:JDBC driver and the URL template:</p>
<pre>
OMBALTER PLATFORM 'MICROSOFT_EXCEL' SET PROPERTIES (DRIVER_CLASS,URI_TEMPLATE) VALUES
('sun.jdbc.odbc.JdbcOdbcDriver','jdbc:odbc:Driver={Microsoft Excel Driver (*.xls)}\;
DBQ=&lt;filename&gt;\;DriverID=22\;READONLY=true')
</pre>
<p>We then define the properties for the platform:</p>
<pre>
OMBALTER PLATFORM 'MICROSOFT_EXCEL' SET PROPERTIES (LOCAL_OBJECT_MASK) VALUES ('%SCHEMA.%OBJECT')
OMBALTER PLATFORM 'MICROSOFT_EXCEL' SET PROPERTIES (DATE_MASK) VALUES ('DATETIME')
OMBALTER PLATFORM 'MICROSOFT_EXCEL' SET PROPERTIES (DDLNULL) VALUES ('null')
OMBALTER PLATFORM 'MICROSOFT_EXCEL' SET PROPERTIES (NUMERIC_MASK) VALUES ('NUMBER')
OMBALTER PLATFORM 'MICROSOFT_EXCEL' SET PROPERTIES (VARCHAR_MASK) VALUES ('VARCHAR(%L)')
OMBALTER PLATFORM 'MICROSOFT_EXCEL' SET PROPERTIES (LOCAL_OBJECT_MASK) VALUES ('%OBJECT')
OMBALTER PLATFORM 'MICROSOFT_EXCEL' SET PROPERTIES (DEFAULT_MAX_NAME_LEN) VALUES ('30')
OMBALTER PLATFORM 'MICROSOFT_EXCEL' SET PROPERTIES (REMOTE_OBJECT_MASK) VALUES ('%OBJECT')
</pre>
<p>We finally define the data types supported by the platform:</p>
<pre>
OMBALTER PLATFORM 'MICROSOFT_EXCEL' ADD PLATFORM_TYPE 'LOGICAL'
OMBALTER PLATFORM 'MICROSOFT_EXCEL' MODIFY PLATFORM_TYPE 'LOGICAL' SET PROPERTIES(SYNTAX) VALUES ('LOGICAL')
OMBALTER PLATFORM 'MICROSOFT_EXCEL' ADD FROM_PLATFORM_TYPEMAP 'LOGICAL_TOG' SET PROPERTIES (FROM_DATATYPE, TO_DATATYPE) VALUES ('LOGICAL', 'CHAR')
OMBALTER PLATFORM 'MICROSOFT_EXCEL' ADD TO_PLATFORM_TYPEMAP 'LOGICAL_FROMG' SET PROPERTIES (FROM_DATATYPE, TO_DATATYPE) VALUES ('CHAR', 'LOGICAL')
OMBALTER PLATFORM 'MICROSOFT_EXCEL' ADD PLATFORM_TYPE 'CURRENCY'
OMBALTER PLATFORM 'MICROSOFT_EXCEL' MODIFY PLATFORM_TYPE 'CURRENCY' SET PROPERTIES(P1,P1MIN, P1MAX,P1DEFAULT,P1TYPE) VALUES ('precision','1', '64000', '1','range')
OMBALTER PLATFORM 'MICROSOFT_EXCEL' MODIFY PLATFORM_TYPE 'CURRENCY' SET PROPERTIES(P2,P2MIN, P2MAX,P2DEFAULT,P2TYPE) VALUES ('scale','1', '18', '1','range')
OMBALTER PLATFORM 'MICROSOFT_EXCEL' MODIFY PLATFORM_TYPE 'CURRENCY' SET PROPERTIES(SYNTAX) VALUES ('CURRENCY(%precision,%scale)')
OMBALTER PLATFORM 'MICROSOFT_EXCEL' ADD FROM_PLATFORM_TYPEMAP 'CURRENCY_TOG' SET PROPERTIES (FROM_DATATYPE, TO_DATATYPE) VALUES ('CURRENCY', 'NUMERIC')
OMBALTER PLATFORM 'MICROSOFT_EXCEL' ADD PLATFORM_TYPE 'NUMBER'
OMBALTER PLATFORM 'MICROSOFT_EXCEL' MODIFY PLATFORM_TYPE 'NUMBER' SET PROPERTIES(P1,P1MIN, P1MAX,P1DEFAULT,P1TYPE) VALUES ('precision','1', '64000', '1','range')
OMBALTER PLATFORM 'MICROSOFT_EXCEL' MODIFY PLATFORM_TYPE 'NUMBER' SET PROPERTIES(P2,P2MIN, P2MAX,P2DEFAULT,P2TYPE) VALUES ('scale','1', '18', '1','range')
OMBALTER PLATFORM 'MICROSOFT_EXCEL' MODIFY PLATFORM_TYPE 'NUMBER' SET PROPERTIES(SYNTAX) VALUES ('NUMBER(%precision,%scale)')
OMBALTER PLATFORM 'MICROSOFT_EXCEL' ADD FROM_PLATFORM_TYPEMAP 'NUMBER_TOG' SET PROPERTIES (FROM_DATATYPE, TO_DATATYPE) VALUES ('NUMBER', 'NUMERIC')
OMBALTER PLATFORM 'MICROSOFT_EXCEL' ADD TO_PLATFORM_TYPEMAP 'NUMBER_FROMG' SET PROPERTIES (FROM_DATATYPE, TO_DATATYPE) VALUES ('NUMERIC', 'NUMBER')
OMBALTER PLATFORM 'MICROSOFT_EXCEL' ADD PLATFORM_TYPE 'DATETIME'
OMBALTER PLATFORM 'MICROSOFT_EXCEL' MODIFY PLATFORM_TYPE 'DATETIME' SET PROPERTIES(SYNTAX) VALUES ('DATETIME')
OMBALTER PLATFORM 'MICROSOFT_EXCEL' ADD FROM_PLATFORM_TYPEMAP 'DATETIME_TOG' SET PROPERTIES (FROM_DATATYPE, TO_DATATYPE) VALUES ('DATETIME', 'DATETIME')
OMBALTER PLATFORM 'MICROSOFT_EXCEL' ADD TO_PLATFORM_TYPEMAP 'DATETIME_FROMG' SET PROPERTIES (FROM_DATATYPE, TO_DATATYPE) VALUES ('DATETIME', 'DATETIME')
OMBALTER PLATFORM 'MICROSOFT_EXCEL' ADD PLATFORM_TYPE 'VARCHAR'
OMBALTER PLATFORM 'MICROSOFT_EXCEL' MODIFY PLATFORM_TYPE 'VARCHAR' SET PROPERTIES(P1,P1MAX,P1DEFAULT,P1TYPE) VALUES ('size','64000', '1','range')
OMBALTER PLATFORM 'MICROSOFT_EXCEL' MODIFY PLATFORM_TYPE 'VARCHAR' SET PROPERTIES(SYNTAX) VALUES ('VARCHAR(%size)')
OMBALTER PLATFORM 'MICROSOFT_EXCEL' ADD FROM_PLATFORM_TYPEMAP 'VARCHAR_TOG' SET PROPERTIES (FROM_DATATYPE, TO_DATATYPE) VALUES ('VARCHAR', 'VARCHAR')
OMBALTER PLATFORM 'MICROSOFT_EXCEL' ADD TO_PLATFORM_TYPEMAP 'VARCHAR_FROMG' SET PROPERTIES (FROM_DATATYPE, TO_DATATYPE) VALUES ('VARCHAR', 'VARCHAR')
</pre>
<p>Run this script from the OMB*Plus console in Oracle Warehouse Builder. The newly created platform is now visible as a node in the Projects Navigator.</p>
<div class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref468"></a>
<h3 class="sect2">Importing an Excel Worksheet</h3>
<p><span class="bold">To import an Excel worksheet</span>:</p>
<ol>
<li>
<p>Create a new Excel module from the MICROSOFT EXCEL platform node in the Projects Navigator.</p>
</li>
<li>
<p>On the Name and Descriptions page of the Create Module wizard, specify <span class="bold">Native Database Connection</span> as the access method.</p>
</li>
<li>
<p>On the Connection Information page, click <span class="bold">Edit</span> to open the Edit Generic JDBC Location dialog box.</p>
<p>Provide a dummy user name and password as shown in <a href="#CIHFFAIG">Figure 11-1</a>. You can provide any value for the user name and password, but cannot leave the fields blank. Values for Driver Class and URL fields are set, based on the values provided in the script. However, you must edit the UrL field to point to the location of the Excel file.</p>
<p>The URL field contains the value:</p>
<pre>
jdbc:odbc:Driver={Microsoft Excel Driver (*.xls)};DBQ=&lt;filename&gt;;DriverID=22;READONLY=true
</pre>
<p>The file name field must be altered to point to the location of the Excel file. For example:</p>
<pre>
jdbc:odbc:Driver={Microsoft Excel Driver (*.xls)};DBQ=c:/my_projects/excel/employees.xls;DriverID=22;READONLY=true
</pre>
<p>In this example, the location points to the file <code>employees.xls</code>.</p>
</li>
</ol>
<div class="figure">
<p class="titleinfigure"><a id="CIHFFAIG"></a>Figure 11-1 Connection Information for the Excel File</p>
<img width="696" height="536" src="img/excel_platform_connect.gif" alt="Description of Figure 11-1 follows" /><br />
<a id="sthref469" href="img_text/excel_platform_connect.htm">Description of "Figure 11-1 Connection Information for the Excel File"</a><br />
<br /></div>
<!-- class="figure" -->
<p>After you create the Excel module and provide the location details for the excel file, you can import the table definitions from the file.</p>
<p><span class="bold">To import the definitions</span>:</p>
<ol>
<li>
<p>Right-click the module and select <span class="bold">Database Objects</span>.</p>
<p>The Import Metadata Wizard is displayed.</p>
</li>
<li>
<p>Import the table from the Excel file in the same way you import tables from a database.</p>
</li>
<li>
<p>To view the data in the table, right-click the imported table and select <span class="bold">Data</span>.</p>
</li>
</ol>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="CIHFBBFG"></a>
<div class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Using <a id="sthref470"></a><a id="sthref471"></a>Custom Metadata Import in Platforms</h2>
<p>Using a CMI mechanism, you can define how metadata from a database is to be imported into Oracle Warehouse Builder. You can define a CMI that leverages the SQL definitions or the API definitions of the database from which you want to import metadata.</p>
<a id="CHDFIDDA"></a>
<div class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Example: Implementing SQL-Based CMI Import for DB2 UDB</h3>
<p>You can define a CMI that uses SQL to retrieve metadata from the SQL-based data dictionary of DB2 UDB and import tables from a DB2 platform. You can implement a similar mechanism to import metadata from any database that uses an SQL-based data dictionary.</p>
<p>To leverage on a CMI mechanism, you must define a CMI DEFINITION for the platform. CMI definitions can only be created from the <code>root</code> context. You can switch to the <code>root</code> context only from the OMB Plus console. You cannot switch to the <code>root</code> context using the OMB*Plus view from within the Oracle Warehouse Builder UI.</p>
<p>To use the OMB Plus console on a Windows system, select <span class="bold">Start</span>, then <span class="bold">All Programs</span>, <span class="bold">&lt;OWB&gt;</span>, <span class="bold">Warehouse Builder</span>, and then <span class="bold">OMB Plus</span>.</p>
<p>To switch to the <code>root</code> context, use the following command:</p>
<pre>
OMBCONNECT &lt;repository user&gt;/&lt;password&gt;@&lt;host&gt;:&lt;port number&gt;:&lt;service name&gt;
</pre>
<p>For example,</p>
<pre>
OMBCONNECT rep_user/password@localhost:1521:orcl
</pre>
<p>Where <code>rep_user</code>/<code>password</code> is the user name/password to connect to the repository, <code>localhost</code> indicates a local installation, <code>1521</code> is the port number, and <code>orcl</code> is the service name of the database.</p>
<p><a href="#CIHBJFCB">Example 11-1</a> lists a platform definition for DB2 UDB. This lists only the basic definition and does not include the data types that can be added to the platform.</p>
<div class="example">
<p class="titleinexample"><a id="CIHBJFCB"></a>Example 11-1 Platform Definition for IBM DB2 UDB</p>
<pre>
set platformname IBM_DB2_UDB
set platformdisplay "IBM DB2 CMI Api"
 
puts "Creating Platform $platformdisplay"
 
OMBCREATE PLATFORM '$platformname' SET PROPERTIES (BUSINESS_NAME) VALUES ('$platformdisplay')
OMBALTER PLATFORM '$platformname' SET PROPERTIES (DRIVER_CLASS,URI_TEMPLATE) VALUES ('com.ibm.db2.jcc.DB2Driver','jdbc:db2://Host:Port/Database Name')
OMBALTER PLATFORM '$platformname' SET PROPERTIES (LOCAL_OBJECT_MASK) VALUES ('%SCHEMA.%OBJECT')
OMBALTER PLATFORM '$platformname' SET PROPERTIES (DATE_MASK) VALUES ('TIMESTAMP')
OMBALTER PLATFORM '$platformname' SET PROPERTIES (DDLNULL) VALUES ('null')
OMBALTER PLATFORM '$platformname' SET PROPERTIES (NUMERIC_MASK) VALUES ('NUMERIC(%L,%P)')
OMBALTER PLATFORM '$platformname' SET PROPERTIES (VARCHAR_MASK) VALUES ('VARCHAR(%L)')
OMBALTER PLATFORM '$platformname' SET PROPERTIES (LOCAL_OBJECT_MASK) VALUES ('%SCHEMA.%OBJECT')
OMBALTER PLATFORM '$platformname' SET PROPERTIES (DEFAULT_MAX_NAME_LEN) VALUES ('30')
OMBALTER PLATFORM '$platformname' SET PROPERTIES (REMOTE_OBJECT_MASK) VALUES ('%SCHEMA.%OBJECT')
</pre></div>
<!-- class="example" -->
<p>Next, add a CMI definition to the platform.</p>
<pre>
OMBCREATE CMI_DEFINITION 'DB2_IMPORT_SQL' USING DEFINITION_FILE 'c:\\platformdef2_miv.xml'
OMBALTER CMI_DEFINITION 'DB2_IMPORT_SQL' SET PROPERTIES (MIV_TYPE) VALUES ('Databases')
OMBALTER PLATFORM '$platformname' SET REF CMI_DEFINITION 'DB2_IMPORT_SQL'
</pre>
<p>Save the changes using the command <code>OMBCOMMIT</code>.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
You can store the entire script as a <code>.tcl</code> file and run the file from the OMB Plus console.</div>
<p>The file <code>platformdef2_miv.xml</code> contains the custom import definition to import metadata using SQL. <a href="#CIHIJABJ">Example 11-2</a> lists the CMI definition file.</p>
<div class="example">
<p class="titleinexample"><a id="CIHIJABJ"></a>Example 11-2 CMI Definition File</p>
<pre>
&lt;?xml version="1.0"?&gt;
&lt;miv&gt;

&lt;miv_tables type="SQLStatement" default="true"&gt;
        SELECT rtrim(tabname) table_name 
        FROM syscat.tables  
        WHERE tabschema = &lt;Parameter name="owner"/&gt; 
                AND type = 'T'   
                AND status = 'N'   
        ORDER BY table_name
&lt;/miv_tables&gt;

&lt;miv_columns type="SQLStatement" default="true"&gt;
        SELECT rtrim(col.tabname) entity_name, 
               col.colno position, 
               rtrim(col.colname), 
               col.typename, 
               col.length, 
               col.length, 
               col.scale, 
               col.remarks, 
               col.nulls,
               '' datatypeowner,
               col.default,
               CHAR(col.codepage) charset,
               1 bytes_per_char,
               'N' use_char_semantics
        FROM syscat.columns col
        WHERE col.tabschema = &lt;Parameter name="owner"/&gt;
&lt;/miv_columns&gt;
 
&lt;miv_capabilities type="ResultSet"&gt;
        &lt;table_supported&gt;true&lt;/table_supported&gt;
        &lt;view_supported&gt;false&lt;/view_supported&gt;
        &lt;sequence_supported&gt;false&lt;/sequence_supported&gt;
        &lt;table_name_filter_supported&gt;true&lt;/table_name_filter_supported&gt;
        &lt;view_name_filter_supported&gt;false&lt;/view_name_filter_supported&gt;
        &lt;sequence_name_filter_supported&gt;false&lt;/sequence_name_filter_supported&gt;
        &lt;business_area_supported&gt;false&lt;/business_area_supported&gt;      
        &lt;business_area_table_supported&gt;false&lt;/business_area_table_supported&gt;    
        &lt;business_area_view_supported&gt;false&lt;/business_area_view_supported&gt;      
        &lt;business_area_sequence_supported&gt;false&lt;/business_area_sequence_supported&gt;      
        &lt;application_owner_supported&gt;true&lt;/application_owner_supported&gt;
        &lt;table_fklevel_supported&gt;false&lt;/table_fklevel_supported&gt;
        &lt;reimport_supported&gt;true&lt;/reimport_supported&gt;
        &lt;data_object_at_leaf_levels&gt;false&lt;/data_object_at_leaf_levels&gt;
        &lt;multiple_tree_supported&gt;false&lt;/multiple_tree_supported&gt;
&lt;/miv_capabilities&gt;
 
&lt;/miv&gt;
</pre></div>
<!-- class="example" -->
<p>The definition file contains queries to retrieve tables and columns. This MIV file is created using elements defined in an XML schema definition (XSD) file. This file is called <code>cmi.xsd</code> and is stored in the <code><span class="codeinlineitalic">OWB_HOME</span></code><code>/owb/misc</code> folder.</p>
<p>After you create the platform, it is available under the Databases node in Projects Navigator. You can now connect to a DB2UDB database and import metadata. To connect to DB2, you require the appropriate driver files. For information on the driver file requirements, see <a href="jdbc_connection.htm#CACCBIBI">"JDBC Connection Drivers for DB2"</a>.</p>
<p>Similarly, you can create a new platform for any database that uses an SQL-based data dictionary and then create a SQL-based CMI mechanism to import metadata from the database.</p>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<div class="sect1"><!-- infolevel="all" infotype="General" --><a id="sthref472"></a>
<h2 class="sect1">Defining Other Platforms</h2>
<p><a href="#CIHJBBGI">Table 11-9</a> lists the URL template specification and the driver class for other common platforms.</p>
<div class="tblhruleformalwide">
<p class="titleintable"><a id="sthref473"></a><a id="CIHJBBGI"></a>Table 11-9 JDBC Requirements for Different Platforms</p>
<table class="cellalignment3027" title="JDBC Requirements for Different Platforms" summary="platform definitions" dir="ltr">
<thead>
<tr class="cellalignment3014">
<th class="cellalignment3021" id="r1c1-t12">Platform</th>
<th class="cellalignment3021" id="r1c2-t12">URL Template</th>
<th class="cellalignment3021" id="r1c3-t12">Driver Class</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r2c1-t12" headers="r1c1-t12">
<p><a id="sthref474"></a><a id="sthref475"></a>Teradata</p>
</td>
<td class="cellalignment3022" headers="r2c1-t12 r1c2-t12">
<p><code>jdbc:teradata://&lt;host&gt;:&lt;port&gt;/&lt;server&gt;</code></p>
</td>
<td class="cellalignment3022" headers="r2c1-t12 r1c3-t12">
<p><code>com.ncr.teradata.TeraDriver</code></p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r3c1-t12" headers="r1c1-t12">
<p><a id="sthref476"></a><a id="sthref477"></a>Informix</p>
</td>
<td class="cellalignment3022" headers="r3c1-t12 r1c2-t12">
<p><code>jdbc:informix-sqli://&lt;host&gt;:&lt;port&gt;:informixserver=&lt;servername&gt;\;database=&lt;dbname&gt;\[\;&lt;property&gt;=&lt;value&gt;...\]</code></p>
</td>
<td class="cellalignment3022" headers="r3c1-t12 r1c3-t12">
<p><code>com.informix.jdbc.IfxDriver</code></p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r4c1-t12" headers="r1c1-t12">
<p><a id="sthref478"></a><a id="sthref479"></a>Sybase</p>
</td>
<td class="cellalignment3022" headers="r4c1-t12 r1c2-t12">
<p><code>jdbc:sybase:Tds:&lt;host&gt;:&lt;port&gt;\[/&lt;database&gt;\]\[?&lt;property&gt;=&lt;value&gt;&amp;&lt;property&gt;=&lt;value&gt;...\]</code></p>
</td>
<td class="cellalignment3022" headers="r4c1-t12 r1c3-t12">
<p><code>com.sybase.jdbc2.jdbc.SybDriver</code></p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r5c1-t12" headers="r1c1-t12">
<p><a id="sthref480"></a><a id="sthref481"></a>MySQL</p>
</td>
<td class="cellalignment3022" headers="r5c1-t12 r1c2-t12">
<p><code>jdbc:mysql://&lt;host&gt;\[:&lt;port&gt;\]/\[&lt;database&gt;\]\[?&lt;property&gt;=&lt;value&gt;\[&amp;&lt;property&gt;=&lt;value&gt;...\]\]</code></p>
</td>
<td class="cellalignment3022" headers="r5c1-t12 r1c3-t12">
<p><code>com.mysql.jdbc.Driver</code></p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblhruleformalwide" -->
<p>For each database, you must also install the required JDBC driver. The JDBC driver for a database may be shipped with the product, or may require a separate download or purchase.</p>
</div>
<!-- class="sect1" --></div>
<!-- class="chapter" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment3013">
<tr>
<td class="cellalignment3022">
<table class="cellalignment3018">
<tr>
<td class="cellalignment3017"><a href="imp_thirdparty_design.htm"><img width="24" height="24" src="../../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment3017"><a href="code_templates.htm"><img width="24" height="24" src="../../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;2000, 2013,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment3024">
<table class="cellalignment3016">
<tr>
<td class="cellalignment3017"><a href="../../index.htm"><img width="24" height="24" src="../../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment3017"><a href="../../nav/portal_booklist.htm"><img width="24" height="24" src="../../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment3017"><a href="toc.htm"><img width="24" height="24" src="../../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment3017"><a href="index.htm"><img width="24" height="24" src="../../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment3017"><a href="../../nav/mindx.htm"><img width="24" height="24" src="../../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment3017"><a href="../../dcommon/html/feedback.htm"><img width="24" height="24" src="../../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>
</body>
</html>
