<!DOCTYPE html>
<html lang="en" >
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1">
<meta charset="utf-8">
<title>Extracting Data from SAP Applications</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Version 5.1.2 Build 737" />
<meta name="dcterms.created" content="2013-07-16T0:40:1Z" />
<meta name="robots" content="all" />
<meta name="dcterms.title" content="Warehouse Builder Sources and Targets Guide" />
<meta name="dcterms.identifier" content="E10582-06" />
<meta name="dcterms.isVersionOf" content="WBDOD" />
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;2000, 2013,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved." />
<link rel="Start" href="../../index.htm" title="Home" type="text/html" />
<link rel="Copyright" href="../../dcommon/html/cpyr.htm" title="Copyright" type="text/html" />

<script type="application/javascript"  src="../../dcommon/js/headfoot.js"></script>
<script type="application/javascript"  src="../../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html" />
<link rel="Index" href="index.htm" title="Index" type="text/html" />
<link rel="Prev" href="jdbc_connection.htm" title="Previous" type="text/html" />
<link rel="Next" href="integrating_apps.htm" title="Next" type="text/html" />
<link rel="alternate" href="../e10582.pdf" title="PDF version" type="application/pdf" />
<link rel="schema.dcterms" href="http://purl.org/dc/terms/" />
<link rel="stylesheet" href="../../dcommon/css/fusiondoc.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/header.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/footer.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/fonts.css">
<link rel="stylesheet" href="../../dcommon/css/foundation.css">
<link rel="stylesheet" href="../../dcommon/css/codemirror.css">
<link rel="stylesheet" type="text/css" title="Default" href="../../nav/css/html5.css">
<link rel="stylesheet" href="../../dcommon/css/respond-480-tablet.css">
<link rel="stylesheet" href="../../dcommon/css/respond-768-laptop.css">
<link rel="stylesheet" href="../../dcommon/css/respond-1140-deskop.css">
<script type="application/javascript" src="../../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">10/17</span> <!-- End Header -->
<div id="WBDOD30500" class="chapter"><a id="BACFRSAP"></a>
<h1 class="chapter"><span class="secnum">7</span> Extracting Data from SAP Applications</h1>
<p>Many companies implement the SAP Enterprise Resource Planning (ERP) system and Oracle Warehouse Builder enables easy access to the data in these SAP systems.</p>
<p>This chapter describes how you can extract data from SAP systems. It describes why you require an SAP connector, how to import metadata from SAP tables, use them in a mapping, generate ABAP code for the mappings, and deploy them to an SAP system. The chapter also describes the various methods by which you can extract data from the SAP system and load this data into a target table on Oracle Warehouse Builder system.</p>
<p>This chapter contains the following topics:</p>
<ul>
<li>
<p><a href="#CACGCIHE">"Why SAP Connector"</a></p>
</li>
<li>
<p><a href="#CACFDFJB">"Supported SAP Versions"</a></p>
</li>
<li>
<p><a href="#CACCGICD">"Overview of SAP Objects"</a></p>
</li>
<li>
<p><a href="#CACIIDCB">"Overview of the Interaction Between Oracle Warehouse Builder and SAP"</a></p>
</li>
<li>
<p><a href="#CACHFIBD">"Implementing the SAP Data Retrieval Mechanism"</a></p>
</li>
<li>
<p><a href="#BABFJFGB">"Connecting to the SAP System"</a></p>
</li>
<li>
<p><a href="#CACGBCGF">"Importing Metadata from SAP Tables"</a></p>
</li>
<li>
<p><a href="#CACDBEEG">"Creating SAP Extraction Mappings"</a></p>
</li>
<li>
<p><a href="#CACCAGIC">"Deploying and Executing SAP ABAP Mappings"</a></p>
</li>
</ul>
<a id="CACGCIHE"></a>
<div id="WBDOD90777" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Why SAP Connector</h2>
<p>The SAP R/3 system operates differently compared to SQL-based systems like Oracle E-Business Suite and Oracle's PeopleSoft systems.</p>
<p>The major differences include:</p>
<ul>
<li>
<p>The native data manipulation language is ABAP, which is a proprietary SAP language.</p>
</li>
<li>
<p>Table names are cryptic compared to those in SQL-based ERP systems.</p>
</li>
<li>
<p>In addition to database tables, SAP contains logical tables called <span class="italic">pool tables</span> and <span class="italic">cluster tables</span>. These tables contain multiple physical tables and must be managed differently from SQL-based tables.</p>
</li>
</ul>
<p>The SAP connector assists you in managing all these issues. Furthermore, the SAP connector enables you to follow the administrative and security processes of the SAP environment.</p>
</div>
<!-- class="sect1" -->
<a id="CACFDFJB"></a>
<div id="WBDOD90778" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Supported SAP Versions</h2>
<p>For information about the SAP R/3 versions supported by Oracle Warehouse Builder 11<span class="italic">g</span>, log in to <a href="https://metalink.oracle.com"><code>https://support.oracle.com/</code></a>, and go to the <span class="bold">Certify</span> link.</p>
</div>
<!-- class="sect1" -->
<a id="CACCGICD"></a>
<div id="WBDOD90779" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Overview of SAP Objects</h2>
<p>This section provides a brief overview of the different types of tables in SAP, and how data is organized within an SAP system. The section consists of the following topics:</p>
<ul>
<li>
<p><a href="#BABEFIAJ">"SAP Object Types"</a></p>
</li>
<li>
<p><a href="#BABHEHBB">"SAP Business Domains"</a></p>
</li>
</ul>
<a id="BABEFIAJ"></a>
<div id="WBDOD90780" class="sect2">
<h3 class="sect2"><a id="sthref171"></a>SAP Object Types</h3>
<p>With the SAP connector, you can import metadata definitions for the following SAP table types:</p>
<ul>
<li>
<p><span class="bold"><a id="sthref172"></a><a id="sthref173"></a>Transparent</span>: A transparent table is a database table that stores data. You can access the table from non-SAP systems as well, for example, using SQL statements. However, Oracle Warehouse Builder uses ABAP code to access transparent tables.</p>
</li>
<li>
<p><span class="bold"><a id="sthref174"></a>Cluster</span>: A cluster table is usually used to store control data. It can also be used to store temporary data or documentation. Because cluster tables are data dictionary tables and not database tables, you can access these tables only by using ABAP.</p>
</li>
<li>
<p><a id="sthref175"></a><a id="sthref176"></a><span class="bold">Pooled</span>: This is a logical table that must be assigned to a table pool in the database. A table pool consists of multiple pooled tables. A pooled table is used to store control data such as program parameters. You require ABAP code to access pooled tables.</p>
</li>
</ul>
</div>
<!-- class="sect2" -->
<a id="BABHEHBB"></a>
<div id="WBDOD90781" class="sect2">
<h3 class="sect2">SAP Business Domains<a id="sthref177"></a><a id="sthref178"></a></h3>
<p>SAP application systems logically group tables under different business domains. In SAP, a business domain is an organizational unit in an enterprise that groups product and market areas. For example, the Financial Accounting business domain represents data describing financial accounting transactions. These transactions might include General Ledger Accounting, Accounts Payable, Accounts Receivable, and Closing and Reporting.</p>
<p>When you import SAP definitions, you can use a graphical navigation tree in the Business Domain Hierarchy dialog box to search the business domain structure in the SAP source application. This navigation tree enables you to select SAP tables from the SAP application server.</p>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="CACIIDCB"></a>
<div id="WBDOD90782" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Overview of the Interaction Between Oracle Warehouse Builder and SAP</h2>
<p>Moving data from the SAP system to an Oracle database using Oracle Warehouse Builder consists of the following tasks:</p>
<ol>
<li>
<p>Connecting to the SAP system.</p>
</li>
<li>
<p>Importing metadata from SAP data objects.</p>
</li>
<li>
<p>Creating an extraction mapping in Oracle Warehouse Builder that defines:</p>
<ul>
<li>
<p>The SAP source tables from which data is to be imported.</p>
</li>
<li>
<p>The transformation operators that operate on the source tables to extract data based on certain criteria.</p>
</li>
<li>
<p>The target table in Oracle Warehouse Builder to store the data imported from the SAP source tables.</p>
</li>
</ul>
</li>
<li>
<p>Deploying the mapping.</p>
<p>This creates the ABAP report for the mapping.</p>
</li>
<li>
<p>Starting the mapping.</p>
<p>This results in the following sequence of tasks, all of which are performed automatically by Oracle Warehouse Builder:</p>
<ul>
<li>
<p>Transfer of the ABAP report to the SAP server.</p>
</li>
<li>
<p>Compiling of the ABAP report.</p>
</li>
<li>
<p>Execution of the ABAP report, which results in the generation of a data file (this file has a <code>.dat</code> extension).</p>
</li>
<li>
<p>Transfer of the data file to the Oracle Warehouse Builder server using FTP.</p>
</li>
<li>
<p>Loading data from the data file into the target table in Oracle Warehouse Builder. The loading takes place using SQL*Loader.</p>
</li>
</ul>
</li>
</ol>
<div id="WBDOD90783" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref179"></a>
<h3 class="sect2">SAP Function Modules</h3>
<p>To access SAP data from non-SAP systems, you typically use a function module to execute an ABAP program that extracts the data. A function module in SAP is a procedure that is defined in a special ABAP program known as a function group. After the function group is defined, the function module can then be called from any ABAP program.</p>
<p>SAP contains a predefined function module called <code>RFC_ABAP_INSTALL_AND_RUN</code> to execute ABAP report. To upload the Oracle Warehouse Builder-generated ABAP report and execute it in SAP, you need access rights to this function module.</p>
<p>Alternatively, you can ask the SAP administrator to create a customized function module that executes a specific ABAP program. You can then use this function module to execute the ABAP report generated by Oracle Warehouse Builder.</p>
</div>
<!-- class="sect2" -->
<div id="WBDOD90784" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref180"></a>
<h3 class="sect2">Data Retrieval Mechanisms</h3>
<p>Data retrieval from the SAP system can be <a href="#CACHDDHG">"Completely Managed by Oracle Warehouse Builder"</a>, <a href="#CACHBJFJ">"Managed by Oracle Warehouse Builder with SAP Verification"</a>, or <a href="#CACIEJCJ">"Manual"</a>. This depends on whether the SAP administrator provides the Oracle Warehouse Builder user with access rights to the predefined function module <code>RFC_ABAP_INSTALL_AND_RUN</code> or creates a customized function module to execute the ABAP report.</p>
<p class="subhead2"><a id="CACHDDHG"></a><a id="WBDOD90785"></a>Completely Managed by Oracle Warehouse Builder</p>
<p>In this mechanism, Oracle Warehouse Builder has access to upload and execute the generated ABAP using the default function module <code>RFC_ABAP_INSTALL_AND_RUN</code>, and to use FTP to import the generated data file from the SAP system.</p>
<p>Thus the entire process of retrieving data from the SAP system and creating a target table is managed by the Oracle Warehouse Builder and can be completely automated. It is therefore the simplest method of data retrieval. See <a href="#CACHCFFG">"Automated System"</a> for more details on implementing this data retrieval mechanism.</p>
<p class="subhead2"><a id="CACHBJFJ"></a><a id="WBDOD90786"></a>Managed by Oracle Warehouse Builder with SAP Verification</p>
<p>In this mechanism, as an Oracle Warehouse Builder user, you do not have access rights to the default function module <code>RFC_ABAP_INSTALL_AND_RUN</code> that executes the ABAP report in the SAP system. Instead, the SAP administrator first verifies the ABAP report that you generate using Oracle Warehouse Builder, and then creates a customized function module to execute this ABAP report. You can then run the ABAP code on the SAP system using this customized function module.</p>
<p>See <a href="#CACGHBDA">"Semi-Automated System"</a> for more details about implementing this data retrieval mechanism.</p>
<p class="subhead2"><a id="CACIEJCJ"></a><a id="WBDOD90787"></a>Manual</p>
<p>In this mechanism, as a Oracle Warehouse Builder user, you cannot directly run the ABAP code on the SAP system. Instead, you generate the ABAP report for the mapping, and send it to the SAP administrator, who runs the code on the SAP system. You then import the generated data file using FTP and load the target table.</p>
<p>The tasks involved in retrieving data using FTP and creating the Oracle table are implemented using a Process Flow. See <a href="#CACDAGCI">"Manual System"</a> for more details about implementing this system.</p>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="CACHFIBD"></a>
<div id="WBDOD90788" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Implementing the SAP Data Retrieval Mechanism</h2>
<p>As a Oracle Warehouse Builder user, you must be aware of certain restrictions while trying to extract data from an SAP system.</p>
<p>Because the SAP and Oracle Warehouse Builder systems are totally independent systems, as an Oracle Warehouse Builder user, you may only have restricted access rights to the SAP data (especially in the production environment). You therefore have to interact with the SAP administrator to extract data from the system.</p>
<p>Access privilege to the SAP system is most often determined by whether it is the development, test, or the production environment. Each of the data retrieval mechanisms can be implemented in the development, test, or production environment depending on the privileges granted by the SAP system administrator.</p>
<p class="subhead2"><a id="WBDOD90789"></a>Development Environment</p>
<p>Typically, in the development environment, the SAP administrator gives you access rights to use the predefined function module <code>RFC_ABAP_INSTALL_AND_RUN</code>. Therefore, in this environment, you can implement a completely <a href="#CACHCFFG">"Automated System"</a> for data retrieval.</p>
<p class="subhead2"><a id="WBDOD90790"></a>Test and Production Environment</p>
<p>Typically, in the test and production environments, the SAP administrator may not give you access rights to use the predefined function module <code>RFC_ABAP_INSTALL_AND_RUN</code>. Instead, the SAP administrator verifies the ABAP report, and either creates a customized function module that you can use, or runs the ABAP report on the SAP system, and enables you to extract the resultant data. You can therefore implement either a <a href="#CACGHBDA">"Semi-Automated System"</a> or a <a href="#CACDAGCI">"Manual System"</a> for data retrieval.</p>
<p>A typical data retrieval system may therefore consist of any of the three mechanisms implemented in the different environments.</p>
<p class="subhead2"><a id="WBDOD90791"></a>Scenario 1</p>
<p>You run the automated system in the SAP development environment. After you verify the ABAP report in this environment, you then move the ABAP report to the SAP test environment and test the code using a customized function module. You then finally move this to the SAP production environment.</p>
<p>This implementation is recommended by Oracle, as it automates and simplifies the data retrieval task.</p>
<p class="subhead2"><a id="WBDOD90792"></a>Scenario 2</p>
<p>Depending on the access rights to the development, test, and production environments, you implement any one of the data retrieval mechanisms in each of the environments.</p>
<p>The following sections provide details of the tasks involved in retrieving data from an SAP system:</p>
<ol>
<li>
<p><a href="#BABFJFGB">"Connecting to the SAP System"</a></p>
</li>
<li>
<p><a href="#CACGBCGF">"Importing Metadata from SAP Tables"</a></p>
</li>
<li>
<p><a href="#CACDBEEG">"Creating SAP Extraction Mappings"</a></p>
</li>
<li>
<p><a href="#CACCAGIC">"Deploying and Executing SAP ABAP Mappings"</a>.</p>
</li>
</ol>
</div>
<!-- class="sect1" -->
<a id="BABFJFGB"></a>
<div id="WBDOD90793" class="sect1">
<h2 class="sect1">Connecting to the <a id="sthref181"></a><a id="sthref182"></a>SAP System</h2>
<p>To connect to the SAP system from Oracle Warehouse Builder, you must use certain SAP-specific DLL files. After you establish connection, you can then import metadata from SAP tables into SAP modules in Oracle Warehouse Builder.</p>
<p>This section contains the following topics:</p>
<ul>
<li>
<p><a href="#BABHIADJ">"Required Files for SAP Connector"</a></p>
</li>
<li>
<p><a href="#BABEJJCD">"Creating SAP Module Definitions"</a></p>
</li>
<li>
<p><a href="#CACIIFEJ">"Troubleshooting Connection Errors"</a></p>
</li>
<li>
<p><a href="#BABEJJCD">"Creating SAP Module Definitions"</a></p>
</li>
</ul>
<a id="BABHIADJ"></a>
<div id="WBDOD90794" class="sect2">
<h3 class="sect2">Required Files for SAP Connector</h3>
<p>Different sets of files are required depending on whether you are working on a Windows or a UNIX system.</p>
<p class="subhead2"><a id="WBDOD90795"></a>Files Required in Windows</p>
<p>The SAP connector requires a DLL file named <code>librfc32.dll</code> to use remote function calls on the client computer. You must copy <code>librfc32.dll</code> to the location specified in <code>java.library.path</code> on your client system.</p>
<p>To find this location, click <span class="bold">MyComputer</span>, <span class="bold">Properties</span>, and then click <span class="bold">Advanced</span>. Next click <span class="bold">Environment Variables</span>, and under System variables, check the locations specified for the variable <span class="italic">Path</span>.</p>
<p>You can copy the <code>librfc32.dll</code> file to any one of the multiple locations specified in Path. One of the locations correspond to <code><span class="codeinlineitalic">OWB_HOME</span></code>, and is therefore the preferred location. This location is usually <code><span class="codeinlineitalic">OWB_HOME</span></code><code>\owb\bin</code>.</p>
<p>See <a href="#CACJJGIA">Table 7-1</a> for the list of files required in Windows.</p>
<div id="WBDOD90796" class="tblformal">
<p class="titleintable"><a id="sthref183"></a><a id="CACJJGIA"></a>Table 7-1 Required Files for Windows</p>
<table class="cellalignment3020" title="Required Files for Windows" summary="lists out the files required in Windows to connect Warehouse Builder to an SAP system" dir="ltr">
<thead>
<tr class="cellalignment3014">
<th class="cellalignment3021" id="r1c1-t2">Required Files</th>
<th class="cellalignment3021" id="r1c2-t2">Path</th>
<th class="cellalignment3021" id="r1c3-t2">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r2c1-t2" headers="r1c1-t2">
<p><code>librfc32.dll</code></p>
</td>
<td class="cellalignment3022" headers="r2c1-t2 r1c2-t2">
<p><code><span class="codeinlineitalic">OWB_HOME</span></code><code>\owb\bin</code></p>
</td>
<td class="cellalignment3022" headers="r2c1-t2 r1c3-t2">
<p>This file is available on the SAP Application Installation CD.</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r3c1-t2" headers="r1c1-t2">
<p><code>sapjcorfc.dll</code></p>
</td>
<td class="cellalignment3022" headers="r3c1-t2 r1c2-t2">
<p><code><span class="codeinlineitalic">OWB_HOME</span></code><code>\owb\bin</code></p>
</td>
<td class="cellalignment3022" headers="r3c1-t2 r1c3-t2">
<p>Copy this file to the same location where you placed <code>librfc32.dll</code>.</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r4c1-t2" headers="r1c1-t2">
<p><code>sapjco.jar</code></p>
</td>
<td class="cellalignment3022" headers="r4c1-t2 r1c2-t2">
<p><code><span class="codeinlineitalic">OWB_HOME</span></code><code>\owb\lib\int</code></p>
</td>
<td class="cellalignment3022" headers="r4c1-t2 r1c3-t2">&nbsp;</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<p>Restart the client after copying these files.</p>
<p class="subhead2"><a id="WBDOD90797"></a>Files Required in UNIX</p>
<p>The SAP connector requires a DLL file named <code>librfccm.so</code> to use remote function calls on the client computer. You must copy this file to the location specified by the UNIX environment variable path <code>LD_LIBRARY_PATH</code> on your client system.</p>
<p>By default, <code><span class="codeinlineitalic">OWB_HOME</span></code><code>/owb/bin/admin</code> is the location specified in LD_LIBRARY_PATH. If it is not, then ensure that you add <code><span class="codeinlineitalic">OWB_HOME</span></code><code>\owb\bin\admin</code> to LD_LIBRARY_PATH.</p>
<p>See <a href="#CACIIEGG">Table 7-2</a> for the list of files required in UNIX.</p>
<div id="WBDOD90798" class="tblformal">
<p class="titleintable"><a id="sthref184"></a><a id="CACIIEGG"></a>Table 7-2 Required Files for UNIX</p>
<table class="cellalignment3020" title="Required Files for UNIX" summary="lists out the files required in an Unix system to connect Warehouse Builder to an SAP system" dir="ltr">
<thead>
<tr class="cellalignment3014">
<th class="cellalignment3021" id="r1c1-t3">Required Files</th>
<th class="cellalignment3021" id="r1c2-t3">Path</th>
<th class="cellalignment3021" id="r1c3-t3">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r2c1-t3" headers="r1c1-t3">
<p><code>librfcccm.so</code></p>
</td>
<td class="cellalignment3022" headers="r2c1-t3 r1c2-t3">
<p><code><span class="codeinlineitalic">OWB_HOME</span></code><code>\owb\bin\admin</code></p>
</td>
<td class="cellalignment3022" headers="r2c1-t3 r1c3-t3">
<p>This file is available on the SAP Application Installation CD.</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r3c1-t3" headers="r1c1-t3">
<p><code>libsapjcorfc.so</code></p>
</td>
<td class="cellalignment3022" headers="r3c1-t3 r1c2-t3">
<p><code><span class="codeinlineitalic">OWB_HOME</span></code><code>\owb\bin\admin</code></p>
</td>
<td class="cellalignment3022" headers="r3c1-t3 r1c3-t3">
<p>Copy this file to the same location where you placed <code>librfcccm.so</code>.</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r4c1-t3" headers="r1c1-t3">
<p><code>sapjco.jar</code></p>
</td>
<td class="cellalignment3022" headers="r4c1-t3 r1c2-t3">
<p><code><span class="codeinlineitalic">OWB_HOME</span></code><code>\owb\lib\int</code></p>
</td>
<td class="cellalignment3022" headers="r4c1-t3 r1c3-t3">&nbsp;</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<p>Restart the client after copying these files.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
Different versions of SAP R/3 might require different versions of the DLL, SO, and JAR files. The correct versions are available in the SAP installation CD. The files can also be downloaded from:
<p><code><a href="http://service.sap.com/patches">http://service.sap.com/patches</a></code></p>
</div>
</div>
<!-- class="sect2" -->
<a id="CACIIFEJ"></a>
<div id="WBDOD90799" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Troubleshooting Connection Errors</h3>
<p>The most common errors while connecting to the SAP system are listed in <a href="#CACDAIHE">Table 7-3</a>:</p>
<div id="WBDOD90800" class="tblformal">
<p class="titleintable"><a id="sthref185"></a><a id="CACDAIHE"></a>Table 7-3 SAP Connection Errors</p>
<table class="cellalignment3020" title="SAP Connection Errors" summary="SAP connections errors" dir="ltr">
<thead>
<tr class="cellalignment3014">
<th class="cellalignment3021" id="r1c1-t5">Error Message</th>
<th class="cellalignment3021" id="r1c2-t5">Possible Reason</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r2c1-t5" headers="r1c1-t5">
<p>Connection failed.You are not authorized to logon to the target system (error code 1).</p>
</td>
<td class="cellalignment3022" headers="r2c1-t5 r1c2-t5">
<p>Incorrect user name or password to connect to the SAP server.</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r3c1-t5" headers="r1c1-t5">
<p>Connection failed.</p>
<p>Connect to SAP gateway failed.</p>
</td>
<td class="cellalignment3022" headers="r3c1-t5 r1c2-t5">
<p>Incorrect application server, system number, or client details.</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r4c1-t5" headers="r1c1-t5">
<p>Some Location Details are missing.</p>
<p>Please verify the location information is completely specified.</p>
</td>
<td class="cellalignment3022" headers="r4c1-t5 r1c2-t5">
<p>Missing DLL files, or DLL files placed in the wrong location.</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r5c1-t5" headers="r1c1-t5">
<p>Missing <code>saprfc32.dll</code></p>
</td>
<td class="cellalignment3022" headers="r5c1-t5 r1c2-t5">
<p>Missing <code>saprfc32.dll</code> file, or file placed in the wrong location.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<div class="infobox-note">
<p class="notep1">Note:</p>
If you create the SAP source module and import SAP tables but cannot see the columns in the tables, then you have an incompatible <code>librfc32.dll</code> file. Download the correct version of the DLL file from the SAP Web site.</div>
</div>
<!-- class="sect2" -->
<a id="BABEJJCD"></a>
<div id="WBDOD90801" class="sect2">
<h3 class="sect2">Creating SAP Module Definitions<a id="sthref186"></a><a id="sthref187"></a><a id="sthref188"></a><a id="sthref189"></a><a id="sthref190"></a><a id="sthref191"></a><a id="sthref192"></a><a id="sthref193"></a></h3>
<p>Use the Create Module Wizard to create the SAP source module that stores data from the SAP source.</p>
<p><span class="bold">To create a SAP Module</span>:</p>
<ol>
<li>
<p>Right-click <span class="bold">SAP</span> and select <span class="bold">New SAP</span>.</p>
<p>The Create Module Wizard is displayed.</p>
</li>
<li>
<p>On the Name and Description page, provide a name for the SAP module. Select the module status and optionally also provide a description. Click <span class="bold">Next</span>.</p>
</li>
<li>
<p>On the Connection Information page, either select from an existing location or click <span class="bold">Edit</span> to open the Edit SAP Location dialog box. Specify the details as described in <a href="#BABCFGCC">"Connecting to the SAP System"</a>. Click <span class="bold">Next</span>.</p>
</li>
<li>
<p>On the Summary page, click <span class="bold">Finish</span>.</p>
<p>A new sap module is now available on the Projects Navigator.</p>
</li>
</ol>
<div class="infobox-note">
<p class="notep1"><span class="bold">Note</span>:</p>
Before you create a SAP location, ensure that you have all the necessary information. You can provide the location information either while creating the module or before importing metadata into the module. You require the following information to create the location: server name, user name, password, system number, and client number. Obtain these details from the system administrator.</div>
<p>When you set the connection information, you can choose the connection types described in the subsequent sections.</p>
<p class="subhead2"><a id="CACHFCEA"></a><a id="WBDOD90802"></a>Remote Function Call (RFC)<a id="sthref194"></a><a id="sthref195"></a><a id="sthref196"></a></p>
<p>A remote function call enables you to call a function module on a remote system. This method requires specific IP Address information for the SAP application server.</p>
<p class="subhead2"><a id="WBDOD90803"></a>SAP Remote Function Call (SAPRFC.INI)<a id="sthref197"></a></p>
<p>You can also specify the connection information in a file called <code>SAPRFC.INI</code>, and copy this file to the following location: <code><span class="codeinlineitalic">OWB_HOME</span></code><code>\owb\bin\admin</code>.</p>
<p>Using the <code>SAPRFC.INI</code> file requires prior knowledge of ABAP parameters, because you must specify the values for certain parameters to make the SAP connection, and is not the recommended connection method if you are not familiar with ABAP.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
The <code>SAPRFC.INI</code> file comes with the SAP installation CD.</div>
<p>The Create Module Wizard creates the module for you based on the metadata contained in the SAP application server.</p>
<a id="BABCFGCC"></a>
<div id="WBDOD90804" class="sect3">
<h4 class="sect3">Connecting to the SAP System</h4>
<ol>
<li>
<p>Select one of the following connection types:</p>
<ul>
<li>
<p>Remote Function Call (RFC)</p>
<p>This is the recommended connection type, and is selected by default in Oracle Warehouse Builder.</p>
</li>
<li>
<p>SAP Remote Function Call (SAPRFC.INI)</p>
</li>
</ul>
<p>For more information about these connection types, see <a href="#BABEJJCD">"Creating SAP Module Definitions"</a>.</p>
</li>
<li>
<p>Enter the connection information in the appropriate fields. The fields displayed on this page depend on the connection type you choose.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
Ensure that you have copied the DLL files to the right location. For more information, see <a href="#BABHIADJ">"Required Files for SAP Connector"</a>.</div>
<p>You must obtain the connection information for your SAP application server from the system administrator before you can complete this step.</p>
<p><a id="sthref198"></a>RFC Connection type requires the following connection information:</p>
<p><span class="bold">Application Server:</span> The alias name or the IP address of the SAP application server.</p>
<p><span class="bold">System Number:</span> The SAP system number. This must be provided by the SAP system administrator.</p>
<p><span class="bold">Client:</span> The SAP client number. This must be provided by the SAP system administrator.</p>
<p><span class="bold">User Name:</span> The user name with access rights to the SAP system. This name is supplied by the SAP system administrator.</p>
<p><span class="bold">Language:</span> EN for English or DE for German. If you select DE, the description text is displayed in German and all other text is displayed in English.</p>
<p>The <a id="sthref199"></a><a id="sthref200"></a><a id="sthref201"></a>SAPRFC connection type requires the following connection information:</p>
<p><span class="bold">RFC Destination:</span> Enter the alias for the SAP connection information.</p>
<p>In addition, both the connection types require the following connection information if the ABAP report is to be executed in SAP using a function module and the data file is to be transferred by FTP to Oracle Warehouse Builder:</p>
<p><span class="bold">Host Login User Name</span>: A valid user name on the system that hosts the SAP application server. This user must have access rights to copy the data file using FTP.</p>
<p><span class="bold">FTP Directory</span>: The directory in the SAP server that stores the data file generated when the ABAP report is executed. For systems where the FTP directory structure is identical to the operating system directory structure, this field can be left blank. For systems where the file system directory structure is mapped to the FTP directory structure, enter the FTP directory path that is mapped to the staging file directory in the file system directory structure. For example, on a computer that runs Windows, if the staging file directory <code>"C:\temp"</code> is mapped to <code>"/"</code> in the FTP directory structure, then enter <code>"/"</code> in this field.</p>
<p><span class="bold">Execution Function Module</span>: In the SAP instance, if a remote function module other than the SAP delivered function module <code>RFC_ABAP_INSTALL_AND_RUN</code> is used to remotely execute ABAP reports through RFC connections, then enter the remote function module name here.</p>
</li>
<li>
<p>Click <span class="bold">Test Connection</span> to verify that the connection information you provided is correct.</p>
</li>
<li>
<p>Click <span class="bold">OK</span> to go back to the Connection Information page of the Create Module Wizard.</p>
</li>
</ol>
<div class="figure">
<p class="titleinfigure"><a id="sthref202"></a>Figure 7-1 Edit SAP Location Dialog Box</p>
<img width="580" height="740" src="img/sap_location.gif" alt="Description of Figure 7-1 follows" /><br />
<a id="sthref203" href="img_text/sap_location.htm">Description of "Figure 7-1 Edit SAP Location Dialog Box"</a><br />
<br /></div>
<!-- class="figure" --></div>
<!-- class="sect3" --></div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="CACGBCGF"></a>
<div id="WBDOD90805" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Importing Metadata from SAP Tables</h2>
<p>After you establish a connection with the SAP server, you can import metadata from SAP tables.</p>
<p>This section contains the following topics:</p>
<ul>
<li>
<p><a href="#BABHHHEF">"Importing SAP Metadata Definitions"</a></p>
</li>
<li>
<p><a href="#BABBBAEG">"Analyzing Metadata Details"</a></p>
</li>
</ul>
<a id="BABHHHEF"></a>
<div id="WBDOD90806" class="sect2">
<h3 class="sect2">Importing SAP Metadata Definitions</h3>
<p>After creating the SAP source module, you can import metadata definitions from SAP tables using the Import Metadata Wizard. This wizard enables you to filter the SAP tables to import, verify those tables, and reimport them. You can import metadata for transparent tables, cluster tables, or pool tables.</p>
<p><span class="bold">To import SAP metadata</span>:</p>
<ol>
<li>
<p>From the Projects Navigator, expand the <span class="bold">Applications</span> node.</p>
</li>
<li>
<p>Right-click the SAP source module into which you want to import metadata and select <span class="bold">Import</span>.</p>
<p>Oracle Warehouse Builder displays the Welcome page for the Import Metadata Wizard.</p>
</li>
<li>
<p>Click <span class="bold">Next.</span></p>
</li>
<li>
<p>Complete the following tasks:</p>
<ul>
<li>
<p><a href="#BABDAHEG">"Filtering SAP Metadata"</a></p>
</li>
<li>
<p><a href="#BABEJEGA">"Selecting Objects for Metadata Import"</a></p>
</li>
<li>
<p><a href="#BABIGIFF">"Reviewing Import Summary"</a></p>
</li>
</ul>
</li>
</ol>
<a id="BABDAHEG"></a>
<div id="WBDOD90807" class="sect3">
<h4 class="sect3">Filtering SAP Metadata</h4>
<p>You can filter objects to import by business domain or by text strings. Select a filtering method and click <span class="bold">Next</span>.</p>
<a id="BABGFJGH"></a>
<div id="WBDOD90808" class="sect4"><!-- infolevel="all" infotype="General" -->
<h5 class="sect4">Filtering SAP Metadata by Business Domain</h5>
<ol>
<li>
<p>Select <span class="bold">Business Domain</span> and click <span class="bold">Browse</span> to display the SAP R/3 Business Domain Hierarchy dialog box.</p>
<p>The Import Metadata wizard displays the Loading Progress dialog box while it is retrieving the business domains.</p>
</li>
<li>
<p>The Business Domain Hierarchy dialog box lists the available SAP business domains.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
It may take a few minutes to list the SAP business domains depending on factors such as the network location of the SAP application server, the type of LAN used, and the size of the SAP application database.</div>
<p>Use the Business Domain Hierarchy dialog box to select the SAP business domains that contain the metadata tables you want to import.</p>
</li>
<li>
<p>Select a folder and click <span class="bold">Show Tables</span> to view the tables available in a business domain.</p>
<p>The Import Metadata Wizard displays a list of tables in the selected business domain in the Folder dialog box.</p>
</li>
<li>
<p>Review this dialog box to ensure that you are selecting the required tables.</p>
<p>Some business domains can contain more than 1000 tables. Importing such a large amount of metadata can take time, depending on the network connection speed and the processing power of the source and target systems.</p>
</li>
<li>
<p>Click <span class="bold">OK.</span></p>
<p>The wizard displays the Filter Information page with the SAP business domain displayed in the Business Domain field.</p>
</li>
</ol>
</div>
<!-- class="sect4" -->
<a id="BABJAGJI"></a>
<div id="WBDOD90809" class="sect4"><!-- infolevel="all" infotype="General" -->
<h5 class="sect4">Filtering SAP Metadata by Text String</h5>
<ol>
<li>
<p>Select <span class="bold">Text String, where object</span> and use the <span class="bold">Name matches</span> or <span class="bold">Description matches</span> entry field to enter a string and obtain matching tables from the SAP data source.</p>
<p>The <span class="bold">Description matches</span> field is case sensitive, the <span class="bold">Name matches</span> field is not.</p>
<p>Create a filter for object selection by using the wildcard characters <code>%</code> for zero or more matching characters, and <code>_</code> for a single matching character.</p>
<p>For example, to search the business domain for tables whose descriptions contain the word CURRENCY, select <span class="bold">Description matches</span> and enter <code>%CURRENCY%.</code> You can also search for tables by their names.</p>
</li>
<li>
<p>Specify the number of tables you want to import in the Maximum number of objects displayed field.</p>
</li>
</ol>
</div>
<!-- class="sect4" --></div>
<!-- class="sect3" -->
<a id="BABEJEGA"></a>
<div id="WBDOD90810" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Selecting Objects for Metadata Import</h4>
<p>The Object Selection page contains a description of the tables and enables you to select the tables you want to import into the SAP module.</p>
<p><span class="bold">To select the tables</span>:</p>
<ol>
<li>
<p>Move the tables from the available list to the selected list.</p>
<p>The Import Metadata Wizard also enables you to choose whether you want to import tables with foreign key relationships for each table that you choose to import. You can select one of the following:</p>
<p><span class="bold">None</span>: Import only the tables in the Selected list.</p>
<p><span class="bold">One Level</span>: Import the tables in the Selected list and any tables linked to them directly through a foreign key relationship.</p>
<p><span class="bold">All Levels</span>: Import the tables in the Selected list and all tables linked to them through foreign key relationships.</p>
</li>
<li>
<p>Click <span class="bold">Next.</span></p>
<p>If you select One Level or All Levels, the Confirm Import Selection dialog box is displayed.</p>
<p>Review this dialog box to ensure that you are selecting the required tables.</p>
</li>
<li>
<p>Click <span class="bold">OK.</span></p>
<p>The selected tables appear in the Selected list of the Table Selection page.</p>
</li>
<li>
<p>Click <span class="bold">Next.</span></p>
<p>The wizard displays the Summary and Import page.</p>
</li>
</ol>
</div>
<!-- class="sect3" -->
<a id="BABIGIFF"></a>
<div id="WBDOD90811" class="sect3">
<h4 class="sect3">Reviewing Import Summary</h4>
<p>The wizard imports the definitions for the selected tables from the SAP application server, stores them in the SAP source module, and then displays the Summary and Import page.</p>
<p>You can edit the descriptions for each table by selecting the <span class="bold">Description</span> field and entering a new description.</p>
<p>Review the information about the Summary and Import page and click <span class="bold">Finish.</span></p>
<p>The SAP Connector reads the table definitions from the SAP application server and creates the metadata objects in the workspace.</p>
<p>The time it takes to import the SAP metadata into the workspace depends on the size and number of tables and the connection between the SAP application server and the workspace. It is a best practice to import small batches of tables to allow better performance.</p>
<p>When the import completes, the Import Results dialog box displays. Click <span class="bold">OK</span> to finish importing metadata.</p>
</div>
<!-- class="sect3" -->
<div id="WBDOD90812" class="sect3"><a id="sthref204"></a>
<h4 class="sect3">Reimporting SAP Tables</h4>
<p>To reimport SAP tables, follow the importing procedure using the Import Metadata Wizard. Before starting the import, the wizard checks the source for tables with the same name as those you are importing. The tables that have been imported appear in bold in the Object Selection page. On the Summary and Import page, the Action column indicates that these tables are reimported. The wizard then activates the <span class="bold">Advanced Synchronize Options</span> button so that you can control the reimport options.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
To undo the reimport, click <span class="bold">Undo</span>. This ensures that no changes are made to the existing metadata.</div>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="BABBBAEG"></a>
<div id="WBDOD90813" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Analyzing Metadata Details</h3>
<p>With SAP tables, you cannot view the data after you import the metadata from these tables. However, you can get good insight about the data that is stored in the tables by viewing the <a href="#CACHDBJA">"Column Descriptions"</a> and the <a href="#CACJIEJE">"Constraints Details"</a>.</p>
<p class="subhead2"><a id="CACHDBJA"></a><a id="WBDOD90814"></a>Column Descriptions</p>
<p>You can view the column description of each of the columns in a table. This is valuable because the column names in SAP can be nondescriptive, and difficult to interpret if you have not previously seen the data in the table.</p>
<p>To view the descriptions, double-click the table to open the data object editor for the table, and then click the <span class="bold">Columns</span> editor.</p>
<p>The description for the columns of the table are visible as shown in <a href="#CACBBGEJ">Figure 7-2</a>.</p>
<div id="WBDOD90815" class="figure">
<p class="titleinfigure"><a id="CACBBGEJ"></a>Figure 7-2 The Columns Editor with the Description for the Columns of SAP Table</p>
<img width="922" height="667" src="img/sap_columns_desc.gif" alt="Description of Figure 7-2 follows" /><br />
<a id="sthref205" href="img_text/sap_columns_desc.htm">Description of "Figure 7-2 The Columns Editor with the Description for the Columns of SAP Table"</a><br />
<br /></div>
<!-- class="figure" -->
<p class="subhead2"><a id="CACJIEJE"></a><a id="WBDOD90816"></a>Constraints Details</p>
<p>The other benefit of the data object editor is that you can get information about the primary and foreign keys within the table. To view the key constraints, click the <span class="bold">Constraints</span> editor.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
It is also a useful practice to display the business names of the SAP tables in the Projects Navigator. Business names provide a description of the tables and are therefore more intuitive than the physical names. To view the business names for tables in Oracle Warehouse Builder, from the main menu, click <span class="bold">Tools</span>, <span class="bold">Preferences</span>, <span class="bold">OWB, Naming</span>, and then select <span class="bold">Business Names</span> in the Naming Mode field.</div>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="CACDBEEG"></a>
<div id="WBDOD90817" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Creating SAP Extraction Mappings<a id="sthref206"></a><a id="sthref207"></a></h2>
<p>After importing metadata from SAP tables, you must define the extraction mapping to extract data from the SAP system.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
For details of mappings in Oracle Warehouse Builder, see <a class="olink WBETL" href="../e10935/toc.htm"><span class="italic">Oracle Warehouse Builder Data Modeling, ETL, and Data Quality Guide</span></a>.</div>
<div id="WBDOD90818" class="sect2"><a id="sthref208"></a>
<h3 class="sect2">Defining the SAP Extraction Mapping</h3>
<p>You can use the Mapping Editor to create a mapping containing SAP tables. Creating a mapping with SAP tables is similar to creating mappings with other database objects. However, there are restrictions on the operators that can be used in the mapping. You can only use table, filter, joiner, and mapping input parameter mapping operators in a mapping containing SAP tables.</p>
<p>A typical SAP extraction mapping consists of one or more SAP source tables (transparent, cluster, or pooled), one or more filter or joiner operators, and a non-SAP target table (typically an Oracle table) to store the imported data.</p>
<p>This is as shown in <a href="#CACGAFBB">Figure 7-3</a>.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
The source table is always an SAP table. You cannot have both SAP and non-SAP (Oracle) source tables in a mapping, but the staging table is an Oracle table.</div>
<div id="WBDOD90819" class="figure">
<p class="titleinfigure"><a id="CACGAFBB"></a>Figure 7-3 SAP Extraction Mapping</p>
<img width="754" height="465" src="img/sap_mapping.gif" alt="Description of Figure 7-3 follows" /><br />
<a id="sthref209" href="img_text/sap_mapping.htm">Description of "Figure 7-3 SAP Extraction Mapping"</a><br />
<br /></div>
<!-- class="figure" -->
<p>In this mapping, the input parameter holds a date value, and the data from table <code>BKPF</code> is filtered based on this date. Because this is defined as an input parameter, you can enter a value for the date when the mapping is run. The joiner operator enables you to join data from multiple tables, and the combined data set is stored in a staging table.</p>
<p>This section contains the following topics:</p>
<ul>
<li>
<p><a href="#CACDGBDF">"Adding SAP Tables to the Mapping"</a></p>
</li>
<li>
<p><a href="#BABFBJIF">"Setting the Loading Type"</a></p>
</li>
<li>
<p><a href="#CACIAFDG">"Setting Configuration Properties for the Mapping"</a></p>
</li>
</ul>
<a id="CACDGBDF"></a>
<div id="WBDOD90820" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Adding SAP Tables to the Mapping</h4>
<p><span class="bold">To add an SAP table to a mapping:</span></p>
<p>On the mapping editor, drag and drop the required SAP table onto the Mapping Editor canvas.</p>
<p>The editor places a table operator on the mapping canvas to represent the SAP table.</p>
</div>
<!-- class="sect3" -->
<a id="BABFBJIF"></a>
<div id="WBDOD90821" class="sect3">
<h4 class="sect3">Setting the <a id="sthref210"></a><a id="sthref211"></a><a id="sthref212"></a>Loading Type</h4>
<p>Use the operator properties panel of the Mapping Editor to set the SQL*Loader properties for the tables in the mapping.</p>
<p><span class="bold">To set the loading type for the SAP Source Table:</span></p>
<ol>
<li>
<p>On the Mapping Editor, select the SAP source table. The Table Operator Properties panel displays the properties of the SAP table operator.</p>
</li>
<li>
<p>Select a loading type from the Loading Type list. With ABAP code as the language for the mapping, the SQL*Loader code is generated as indicated in <a href="#BABFBECG">Table 7-4</a>.</p>
<div id="WBDOD90822" class="tblformal">
<p class="titleintable"><a id="sthref213"></a><a id="BABFBECG"></a>Table 7-4 SQL*Loader Code Generated in ABAP</p>
<table class="cellalignment3020" title="SQL*Loader Code Generated in ABAP" summary="This table show the loading types and resulting SQL*Loader code generated in the ABAP code." dir="ltr">
<thead>
<tr class="cellalignment3014">
<th class="cellalignment3021" id="r1c1-t15">Loading Type</th>
<th class="cellalignment3021" id="r1c2-t15">Resulting Load Type in SQL*Loader</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r2c1-t15" headers="r1c1-t15">
<p>INSERT</p>
</td>
<td class="cellalignment3022" headers="r2c1-t15 r1c2-t15">
<p>APPEND</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r3c1-t15" headers="r1c1-t15">
<p>CHECK/INSERT</p>
</td>
<td class="cellalignment3022" headers="r3c1-t15 r1c2-t15">
<p>INSERT</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r4c1-t15" headers="r1c1-t15">
<p>TRUNCATE/INSERT</p>
</td>
<td class="cellalignment3022" headers="r4c1-t15 r1c2-t15">
<p>TRUNCATE</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r5c1-t15" headers="r1c1-t15">
<p>DELETE/INSERT</p>
</td>
<td class="cellalignment3022" headers="r5c1-t15 r1c2-t15">
<p>REPLACE</p>
</td>
</tr>
<tr class="cellalignment3014">
<td class="cellalignment3022" id="r6c1-t15" headers="r1c1-t15">
<p>All other types</p>
</td>
<td class="cellalignment3022" headers="r6c1-t15 r1c2-t15">
<p>APPEND</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></li>
</ol>
</div>
<!-- class="sect3" -->
<a id="CACIAFDG"></a>
<div id="WBDOD90823" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Setting Configuration Properties for the Mapping</h4>
<ul>
<li>
<p>Use the Configuration Properties dialog box to define the code generation language as described in <a href="#CACGGDFH">"Setting the Language Parameter"</a>.</p>
</li>
<li>
<p>Set ABAP specific parameters, and the directory and initialization file settings in the Configuration Properties dialog box as described in <a href="#CACCEFIG">"Setting Run-time Parameters"</a>.</p>
</li>
</ul>
<p class="subhead2"><a id="CACGGDFH"></a><a id="WBDOD90824"></a>Setting the <a id="sthref214"></a><a id="sthref215"></a><a id="sthref216"></a>Language Parameter</p>
<p>The language parameter enables you to choose the type of code you want to generate for a mapping. For mappings containing SAP source tables, Oracle Warehouse Builder enables you to select either PL/SQL or ABAP.</p>
<p>If the SAP system uses a non-Oracle database to store data, then you must select ABAP to generate code. If the SAP data is stored on an Oracle database, then you can specify PL/SQL. However, with PL/SQL, you cannot extract pool or cluster tables. Therefore, in all instances it is desirable to set the language to ABAP.</p>
<p class="subhead2"><a id="CACCEFIG"></a><a id="WBDOD90825"></a>Setting <a id="sthref217"></a><a id="sthref218"></a><a id="sthref219"></a>Run-time Parameters</p>
<p>With the language set to ABAP, you can expand the Runtime Parameters node in the Configuration Properties dialog box to display settings specific to ABAP code generation.</p>
<p>Some of these settings come with preset properties that optimize code generation. It is recommended that these settings be retained, because altering them may slow down the code generation process.</p>
<p>The following run-time parameters are available for <a id="sthref220"></a>SAP mappings:</p>
<ul>
<li>
<p><span class="bold">ABAP Report Name</span>: Specifies the name of the ABAP report generated by the mapping. This is required only when you run a custom function module to execute the ABAP report.</p>
</li>
<li>
<p><span class="bold">Background Job</span>: Select this option to run the ABAP report as a background job in the SAP system. Enable this option for the longer running jobs. Foreground batch jobs that run for a long duration are considered to be hanging in SAP after a certain time. Therefore it is ideal to have a background job running for such extracts.</p>
</li>
<li>
<p><span class="bold">Control File Name</span>: By default, the control file name equals the data file name specified in the Data File Name field. This implies that the ABAP code generates a single control file that contains both, the SQL*Loader control information and the data (since the log files are the same). You can assign different file names for the control file and the data file, in which case different files are generated for the control information and data, and both the files are transferred by FTP.</p>
</li>
<li>
<p><span class="bold"><a id="sthref221"></a>Data File Name</span>: Specifies the name of the data file that is generated when the ABAP report is executed in the SAP system.</p>
</li>
<li>
<p><span class="bold"><a id="sthref222"></a>File Delimiter for Staging File</span>: Specifies the column separator in a SQL data file.</p>
</li>
<li>
<p><span class="bold">Include FTP</span>: If this is set to <code>true</code>, then the data file is moved to the Oracle Warehouse Builder system using FTP. If this is set to <code>false</code>, then the file is not transferred.</p>
</li>
<li>
<p><span class="bold">INSTALL ONLY</span>: When you set this to <code>true</code> and run the mapping, the ABAP report gets installed on the SAP system, but does not get executed. To execute the ABAP report, you must run the mapping again and use the execution function module. Setting this option to <code>true</code> enables you to generate the mapping, install the ABAP report on the SAP system, and subsequently make modifications to the ABAP report and then execute it. You can use this option when you want the ABAP report to be stored on the SAP system. If this option is set to <code>false</code>, then the ABAP report is loaded and executed on the SAP system. However, the ABAP report is not stored on the SAP system after it is executed.</p>
</li>
<li>
<p><span class="bold">SAP Location</span>: Specifies the location of the SAP instance from where the data can be extracted.</p>
</li>
<li>
<p><span class="bold"><a id="sthref223"></a>SAP System Version</span>: Specifies the SAP system version number to which you want to deploy the ABAP report. The characteristics of the generated ABAP report depends on the version number. For MySAP ERP and all other versions, select SAP R/3 4.7. Different ABAP report is generated for versions before 4.7.</p>
</li>
<li>
<p><span class="bold"><a id="sthref224"></a>SQL Join Collapsing</span>: If this is set to <code>true</code>, then it specifies the following hint, if possible, to generate ABAP report.</p>
<pre>
SELECT &lt; &gt; INTO &lt; &gt; FROM (T1 as T1 inner join T2 as T2) ON &lt;condition &gt; 
</pre></li>
<li>
<p><span class="bold"><a id="sthref225"></a>Staging File Directory</span>: Specifies the location of the directory in the SAP system where the data file generated by ABAP report resides.</p>
</li>
<li>
<p><span class="bold">Timeout</span>: This specifies the duration, in seconds, for which Oracle Warehouse Builder waits for the SAP system to execute the ABAP report and return a data file. If the SAP system completes the execution within this duration, then Oracle Warehouse Builder automatically retrieves the resultant data file from the SAP system. If the execution takes longer than the specified duration, then you must manually retrieve the data file.</p>
</li>
</ul>
</div>
<!-- class="sect3" -->
<div id="WBDOD90826" class="sect3"><!-- infolevel="all" infotype="General" --><a id="sthref226"></a>
<h4 class="sect3">Setting the Join Rank</h4>
<p>You must set this parameter only if the mapping contains the joiner operator, and you want to explicitly specify the driving table. Unlike SQL, ABAP code generation is rule-based. Therefore, you must design the mapping in such a way that the tables are loaded in the right order. Or, you can explicitly specify the order in which the tables are to be joined. From the Configuration Properties dialog box, expand <span class="bold">Table Operators</span>, and then for each table, specify the Join Rank. The driving table must have the Join Rank value set to 1, with increasing values for the subsequent tables.</p>
<p>You can also let Oracle Warehouse Builder decide the driving table, and the order of joining the other tables. In such cases, do not enter values for Join Rank.</p>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="CACCAGIC"></a>
<div id="WBDOD90827" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Deploying and Executing SAP ABAP Mappings</h2>
<p>After designing the extraction mapping, you must validate, generate, and deploy the mapping, as you do with all mappings in Oracle Warehouse Builder.</p>
<p><span class="bold">To generate the script for the SAP mapping:</span></p>
<ol>
<li>
<p>Right-click the SAP mapping and select <span class="bold">Generate.</span></p>
<p>The Generation Results window is displayed.</p>
</li>
<li>
<p>On the Script tab, select the script name and select <span class="bold">View Code.</span></p>
<p>The generated code is displayed in the code viewer.</p>
<p>You can edit, print, or save the file using the code editor. Close the code viewer to return to the Generation Results window.</p>
</li>
<li>
<p>To save the file, click <span class="bold">Save as File</span> and save the ABAP program to the hard drive.</p>
</li>
</ol>
<p>After you generate the SAP mapping, you must deploy the mapping to create the logical objects in the target location.</p>
<p>To deploy an SAP mapping, right-click the mapping and select <span class="bold">Deploy</span>. You can also deploy the mapping from Control Center Manager.</p>
<p>For detailed information about deployment, see <a class="olink WBETL12000" href="../../owb.112/e10935/deploy.htm#WBETL12000"><span class="italic">Oracle Warehouse Builder Data Modeling, ETL, and Data Quality Guide</span></a>.</p>
<p>When an SAP mapping is deployed, an ABAP mapping is created and stored in the Oracle Warehouse Builder run time schema. Oracle Warehouse Builder also saves the <code>ABAP</code> file under <code><span class="codeinlineitalic">OWB_HOME</span></code><code>\owb\deployed_files</code>, where <code><span class="codeinlineitalic">OWB_HOME</span></code> is the location of the Oracle home directory of your Oracle Warehouse Builder installation.</p>
<p>If you are using the Oracle Warehouse Builder installation that comes with Oracle Database, then this equals the database home.</p>
<p>Depending on whether data retrieval from the SAP system is fully automated, semi-automated, or manual, you must perform the subsequent tasks described in the following sections:</p>
<ul>
<li>
<p><a href="#CACHCFFG">"Automated System"</a></p>
</li>
<li>
<p><a href="#CACGHBDA">"Semi-Automated System"</a></p>
</li>
<li>
<p><a href="#CACDAGCI">"Manual System"</a></p>
</li>
</ul>
<a id="CACHCFFG"></a>
<div id="WBDOD90828" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Automated System</h3>
<p>In a completely automated system, as an Oracle Warehouse Builder user you have access to the predefined function module in the SAP system. It enables you to execute any ABAP report and extract data directly from the SAP system without being dependent on the SAP administrator, as shown in <a href="#CACFFFHE">Figure 7-4</a>.</p>
<div id="WBDOD90829" class="figure">
<p class="titleinfigure"><a id="CACFFFHE"></a>Figure 7-4 Automated Data Retrieval</p>
<img width="705" height="444" src="img/sap_runtime_1.gif" alt="Description of Figure 7-4 follows" /><br />
<a id="sthref227" href="img_text/sap_runtime_1.htm">Description of "Figure 7-4 Automated Data Retrieval"</a><br />
<br /></div>
<!-- class="figure" -->
<p>You can automate the process of transferring the ABAP report to the SAP system and generating the data file on the SAP system. After the data file is generated, Oracle Warehouse Builder uses FTP to transfer the data file to the Oracle Warehouse Builder system. The data file is then loaded into the target file by using SQL*Loader.</p>
<p>An automated system works as follows:</p>
<ol>
<li>
<p>You design the extraction mapping and generate the ABAP report for this mapping.</p>
</li>
<li>
<p>Before deploying the mapping, you must ensure that the following configuration properties are set for the mapping:</p>
<ul>
<li>
<p><span class="bold">ABAP Report Name</span>: The file that stores the ABAP code generated for the mapping.</p>
</li>
<li>
<p><span class="bold">SAP Location</span>: The location on the SAP system from where data is extracted.</p>
</li>
<li>
<p><span class="bold">Data File Name</span>: The name of the data file to store the data generated by the execution of ABAP report.</p>
</li>
</ul>
<p>Also ensure that you have provided the following additional connection details for the SAP location:</p>
<ul>
<li>
<p><span class="bold">Execution Function Module</span>: Provide the name of the predefined SAP function module. When executed, this function module takes the ABAP report name as the parameter, and executes the ABAP code.</p>
</li>
<li>
<p><span class="bold">FTP Directory</span>: A directory on the SAP system. The data file generated upon the execution of the function module is saved to this directory. Oracle Warehouse Builder uses FTP to transfer the file from this directory to the Oracle Warehouse Builder system. This requires an FTP server to be located in the SAP system.</p>
</li>
<li>
<p>Also provide a user name with <span class="italic">Write</span> permissions on the FTP directory.</p>
</li>
</ul>
</li>
<li>
<p>You then start the mapping, after which the following tasks are automatically performed:</p>
<ul>
<li>
<p>Oracle Warehouse Builder deploys the ABAP report and the function module RFC_ABAP_INSTALL_AND_RUN is used to load and execute the ABAP report in the SAP system.</p>
<p>The ABAP report is sent to the SAP system using a <a href="#CACHFCEA">"Remote Function Call (RFC)"</a>.</p>
</li>
</ul>
</li>
<li>
<p>In the SAP system, the ABAP report extracts data from the source tables and creates a data file.</p>
<p>This data file is stored in the location specified by the Staging File Directory. See <a href="#CACCEFIG">"Setting Run-time Parameters"</a> for details of the staging file directory.</p>
</li>
<li>
<p>Oracle Warehouse Builder uses FTP to transfer this data file back to the Oracle Warehouse Builder system.</p>
<p>The file is stored in the location specified in the FTP Directory field.</p>
</li>
<li>
<p>Using SQL*Loader, Oracle Warehouse Builder loads the target table specified in the mapping with the data from the data file.</p>
</li>
</ol>
<p>The advantage of this system is that you can create a fully automated end-to-end solution to extract SAP data. As a user, you create the extraction mapping, and run it from Oracle Warehouse Builder, which then creates the ABAP report, sends it to the SAP system, extracts the resultant data file, and loads the target table with the extracted data.</p>
</div>
<!-- class="sect2" -->
<a id="CACGHBDA"></a>
<div id="WBDOD90830" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Semi-Automated System</h3>
<p>In a semi-automated system, as a Oracle Warehouse Builder user, you do not have access to the predefined function module <code>RFC_ABAP_INSTALL_AND_RUN</code>, and therefore cannot use this function module to execute ABAP report. Instead, you must create an extraction mapping, deploy it, and then send the ABAP report to the SAP administrator who verifies the code before allowing you to run it in the SAP system, as shown in <a href="#CACIBGJD">Figure 7-5</a>.</p>
<div id="WBDOD90831" class="figure">
<p class="titleinfigure"><a id="CACIBGJD"></a>Figure 7-5 Semi-Automated Implementation</p>
<img width="487" height="398" src="img/sap_runtime_2.gif" alt="Description of Figure 7-5 follows" /><br />
<a id="sthref228" href="img_text/sap_runtime_2.htm">Description of "Figure 7-5 Semi-Automated Implementation"</a><br />
<br /></div>
<!-- class="figure" -->
<p>A semi-automated system works as follows:</p>
<ol>
<li>
<p>You design the extraction mapping and generate the ABAP report for this mapping.</p>
<p>You can then test this report in the development environment.</p>
</li>
<li>
<p>You then send the ABAP report to the SAP administrator, who tests the report, and loads it to the SAP repository in the production environment.</p>
</li>
<li>
<p>The SAP administrator can create a new report or use the same report that you send.</p>
</li>
<li>
<p>If the SAP administrator creates a new report, then obtain the name of the new report and use it in your mapping to extract data from the production environment.</p>
</li>
<li>
<p>Before you run the mapping in the production environment, ensure that you have set the following configuration properties for the mapping:</p>
<ul>
<li>
<p><span class="bold">ABAP Report Name</span>: The SAP administrator provides the name of the ABAP report after verifying the code. You must then use this report name to extract data.</p>
</li>
<li>
<p><span class="bold">SAP Location</span>: The location on the SAP system from where data is extracted.</p>
</li>
<li>
<p><span class="bold">Data File Name</span>: Name of the data file to store the data generated during execution of ABAP report.</p>
</li>
</ul>
<p>Also ensure that you have provided the following additional connection details for the SAP location:</p>
<ul>
<li>
<p><span class="bold">Execution Function Module</span>: Provide the name of the custom function module created by the SAP administrator. On execution, this function module takes the ABAP report name as the parameter, and executes the ABAP code. You must obtain the function module name from the SAP administrator.</p>
</li>
<li>
<p><span class="bold">FTP Directory</span>: A directory on the SAP system. The data file generated by the execution of the ABAP report is saved to this directory. Oracle Warehouse Builder imports the data file using FTP. The FTP server resides on the SAP system.</p>
</li>
<li>
<p>Also provide a user name with <span class="italic">Read</span> permissions on the FTP directory.</p>
</li>
</ul>
</li>
<li>
<p>In the production environment, when you run the mapping, Oracle Warehouse Builder sends the ABAP report name and the custom function module to the SAP system using a <a href="#CACHFCEA">"Remote Function Call (RFC)"</a>.</p>
</li>
<li>
<p>In the SAP system, the ABAP report gets executed and a data file is generated. The ABAP report gets executed only if the ABAP report name and the function module are available.</p>
<p>This data file is stored in the location specified by the Staging File Directory.</p>
</li>
<li>
<p>Oracle Warehouse Builder imports the data file using FTP. An FTP server must be available on the SAP server.</p>
</li>
<li>
<p>Oracle Warehouse Builder uses SQL*Loader to load the target table with data from the data file.</p>
</li>
</ol>
</div>
<!-- class="sect2" -->
<a id="CACDAGCI"></a>
<div id="WBDOD90832" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Manual System</h3>
<p>In a manual system, your role as an Oracle Warehouse Builder user is restricted to generating the ABAP report for the mapping, and sending the ABAP report to the SAP administrator. The tasks involved in this system are:</p>
<ol>
<li>
<p>You create an extraction mapping, and generate the ABAP report for the mapping.</p>
</li>
<li>
<p>While designing the mapping, ensure that you specify the Data File Name to store the data file.</p>
</li>
<li>
<p>You send the ABAP report to the SAP administrator.</p>
</li>
<li>
<p>The SAP administrator executes the ABAP report in the SAP system.</p>
</li>
<li>
<p>On execution of the code, a data file is generated.</p>
</li>
</ol>
<p>You can then create a process flow to import the data file. The process flow may typically consist of the activities shown in <a href="#CACFHDIB">Figure 7-6</a>. For more details on implementing process flows, see <a class="olink WBETL08000" href="../../owb.112/e10935/design_processflows.htm#WBETL08000"><span class="italic">Oracle Warehouse Builder Data Modeling, ETL, and Data Quality Guide</span></a>.</p>
<div id="WBDOD90833" class="figure">
<p class="titleinfigure"><a id="CACFHDIB"></a>Figure 7-6 Process Flow to Import SAP Data</p>
<img width="890" height="236" src="img/sap_proc_flow_data_detect.gif" alt="Description of Figure 7-6 follows" /><br />
<a id="sthref229" href="img_text/sap_proc_flow_data_detect.htm">Description of "Figure 7-6 Process Flow to Import SAP Data"</a><br />
<br /></div>
<!-- class="figure" -->
<ol>
<li>
<p>A File Exists activity checks for the availability of the data file.</p>
</li>
<li>
<p>If the file exists, then an FTP activity transfers the file to the Oracle Warehouse Builder system.</p>
</li>
<li>
<p>If the file does not exist, then it must wait till the file is made available, and then perform an FTP.</p>
</li>
<li>
<p>Using SQL*Loader, the target table is loaded with data from the data file.</p>
</li>
</ol>
<p>In most production environments, the SAP administrator may not allow any other user to access the SAP system. In such cases, implementing the manual system may be the only viable option.</p>
<p class="subhead2"><a id="sthref230"></a>Using SQL*Loader in the Process Flow</p>
<p>To use SQL*Loader in the process flow, insert a SQL*Plus activity as shown in <a href="#CACFHDIB">Figure 7-6</a>. To use the SQL*Loader, use the HOST command. Once you insert the SQL*Plus activity, insert the following value for SCRIPT:</p>
<pre>
HOST sqlldr ${Target.User}/${Target.Password} CONTROL=${Working.RootPath}\C.CTL
quit
</pre>
<p>Insert the relevant value for the control (<code>.ctl</code>) file name.</p>
<p>Then configure the path settings for the SQL*Plus activity. Right-click the process flow and select <span class="bold">Configure</span>.</p>
<p>Under SQL*Plus Activities, expand the SQLPLUS node and provide the required values under Path Settings as shown in <a href="#BABGDGAJ">Figure 7-7</a>.</p>
<p>Deployed Location refers to the location of the target table. Working location refers to the location of the control file.</p>
<div class="figure">
<p class="titleinfigure"><a id="BABGDGAJ"></a>Figure 7-7 Path Setting for the Process Flow</p>
<img width="417" height="212" src="img/procflow_pathset.gif" alt="The path settings for the SQL PLUS activity." /><br /></div>
<!-- class="figure" --></div>
<!-- class="sect2" --></div>
<!-- class="sect1" --></div>
<!-- class="chapter" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment3013">
<tr>
<td class="cellalignment3022">
<table class="cellalignment3018">
<tr>
<td class="cellalignment3017"><a href="jdbc_connection.htm"><img width="24" height="24" src="../../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment3017"><a href="integrating_apps.htm"><img width="24" height="24" src="../../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;2000, 2013,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment3024">
<table class="cellalignment3016">
<tr>
<td class="cellalignment3017"><a href="../../index.htm"><img width="24" height="24" src="../../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment3017"><a href="../../nav/portal_booklist.htm"><img width="24" height="24" src="../../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment3017"><a href="toc.htm"><img width="24" height="24" src="../../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment3017"><a href="index.htm"><img width="24" height="24" src="../../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment3017"><a href="../../nav/mindx.htm"><img width="24" height="24" src="../../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment3017"><a href="../../dcommon/html/feedback.htm"><img width="24" height="24" src="../../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>
</body>
</html>
