<!DOCTYPE html>
<html lang="en" >
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1">
<meta charset="utf-8">
<title>Creating and Managing Custom Objects and Properties</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Version 5.1.2 Build 737" />
<meta name="dcterms.created" content="2013-07-18T10:6:13Z" />
<meta name="robots" content="all" />
<meta name="dcterms.title" content="Warehouse Builder API and Scripting Reference" />
<meta name="dcterms.identifier" content="E10584-02" />
<meta name="dcterms.isVersionOf" content="WBSCR" />
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;2000, 2013,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved." />
<link rel="Start" href="../../index.htm" title="Home" type="text/html" />
<link rel="Copyright" href="../../dcommon/html/cpyr.htm" title="Copyright" type="text/html" />

<script type="application/javascript"  src="../../dcommon/js/headfoot.js"></script>
<script type="application/javascript"  src="../../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html" />
<link rel="Prev" href="api_5experts.htm" title="Previous" type="text/html" />
<link rel="Next" href="omb_appendix.htm" title="Next" type="text/html" />
<link rel="alternate" href="../e10584.pdf" title="PDF version" type="application/pdf" />
<link rel="schema.dcterms" href="http://purl.org/dc/terms/" />
<link rel="stylesheet" href="../../dcommon/css/fusiondoc.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/header.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/footer.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/fonts.css">
<link rel="stylesheet" href="../../dcommon/css/foundation.css">
<link rel="stylesheet" href="../../dcommon/css/codemirror.css">
<link rel="stylesheet" type="text/css" title="Default" href="../../nav/css/html5.css">
<link rel="stylesheet" href="../../dcommon/css/respond-480-tablet.css">
<link rel="stylesheet" href="../../dcommon/css/respond-768-laptop.css">
<link rel="stylesheet" href="../../dcommon/css/respond-1140-deskop.css">
<script type="application/javascript" src="../../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">13/14</span> <!-- End Header -->
<div id="WBSCR16000" class="chapter"><a id="CHDHFAGC"></a>
<h1 class="chapter"><span class="secnum">7</span> Creating and Managing Custom Objects and Properties</h1>
<p>This chapter describes how to extend the workspace by creating custom objects and custom properties. This chapter includes the following topics:</p>
<ul>
<li>
<p><a href="#BABIHFEJ">Extending the Workspace With User Defined Objects</a></p>
</li>
<li>
<p><a href="#BABIFHAF">Adding New Properties to Workspace Objects</a></p>
</li>
<li>
<p><a href="#BABDFJCG">Adding UDOs to the Workspace</a></p>
</li>
<li>
<p><a href="#BABCICIB">Working with UDOs and UDPs</a></p>
</li>
<li>
<p><a href="#BABCECBA">Creating New Icons for Workspace Objects</a></p>
</li>
</ul>
<a id="BABIHFEJ"></a>
<div id="WBSCR16100" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Extending the Workspace With User Defined Objects</h2>
<p>You may encounter scenarios that require you to extend the OWB object model with new types of objects or properties. For example, as you use Warehouse Builder in conjunction with other applications, you may want to document how the data and metadata you manage in Warehouse Builder interacts with other applications.Oracle Warehouse Builder supports user-defined objects (UDOs) and user-defined properties (UDPs) that allow you to represent these new objects or to annotate pre-defined Warehouse Builder objects with new properties.You can specify icons to represent user-defined objects, edit user-defined objects and properties with a basic GUI editor in Design Center, and reference them in OMB*Plus scripts. Combining UDOs, UDPs with experts and scripting is one powerful way to extend Warehouse Builder's feature set.You can also establish relationships between UDOs and other objects, and perform lineage and impact analysis that includes the UDOs.</p>
<p>For example, as you use Warehouse Builder in conjunction with other applications, you may want to document how the data and metadata you manage in Warehouse Builder interacts with other applications. To facilitate this documentation, you can introduce new metadata objects and associate those objects with existing workspace objects. These custom objects appear in the Design Center with the icon of your choice. You can edit them with a basic editor and perform lineage and impact analysis.</p>
<p>Users with administration privileges can extend the workspace by adding new properties and objects.</p>
<ul>
<li>
<p><a href="#BABIFHAF"><span class="xreftitlebold">Adding New Properties to Workspace Objects</span></a>: Each workspace object has a pre-defined property set. If you would like to add new properties specific to your environment, this can be done with UDP's. (For example, you might like to add a property called Design Notes for each of your metadata objects.) Once defined, UDP's are treated the same as pre-defined properties.</p>
</li>
<li>
<p><a href="#BABDFJCG"><span class="xreftitlebold">Adding UDOs to the Workspace</span></a>: You can introduce new types of objects to the workspace by defining UDOs which follow the general rules for object locking, multiuser access, transactions, security, and snapshots. You can also import and export UDOs and UDPs using the Metadata Loader (MDL). Note that after you define a new UDO, you can use it in scripting as well.</p>
</li>
</ul>
<p>For the sake of clarity, this chapter refers to the objects native to the workspace as <span class="italic">workspace objects</span>. Any objects you introduce to the workspace are <span class="italic">UDOs</span> and any new properties are <span class="italic">UDPs</span>.</p>
<a id="CEGDBGHF"></a>
<div id="WBSCR16859" class="sect2">
<h3 class="sect2">Using OMB*Plus Scripts to Specify UDOs and UDPs</h3>
<p>OMB*Plus scripts enable you to define new objects, add and remove properties, as well as view the attributes for existing objects. The syntax is case sensitive and must be in upper case. While creating UDOs and UDPs, follow the guidelines in <a href="#CEGCADAB">"Naming Conventions for UDOs and UDPs"</a>.</p>
<p class="subhead2"><a id="CHDIJICI"></a><a id="WBSCR16860"></a>OMBDEFINE</p>
<p><code>OMBDEFINE CLASS_DEFINITION</code> enables you to create new object definitions in the workspace.</p>
<p>To create a new module definition, use the following command:</p>
<pre>
OMBDEFINE MODULE CLASS_DEFINITION 'UD_TABLEMODULE' SET PROPERTIES 
   (BUSINESS_NAME, PLURAL_NAME) VALUES ('Table Module', 'Table Modules')
</pre>
<p>This creates a new module definition called <code>UD_TABLEMODULE</code>.</p>
<p class="subhead2"><a id="CHDJDAHJ"></a><a id="WBSCR16861"></a>OMBREDEFINE</p>
<p><code>OMBREDEFINE CLASS_DEFINITION</code> enables you to redefine a UDO.</p>
<p>To create a UDP on the Dimension object, use the following command:</p>
<pre>
OMBREDEFINE CLASS_DEFINITION 'DIMENSION' 
     ADD PROPERTY_DEFINITION 'UD_DOCID' SET PROPERTIES (TYPE, DEFAULT_VALUE)
     VALUES ('INTEGER', '100')
</pre>
<p>This adds a new property definition called <code>UD_DOCID</code> to class definition <code>DIMENSION</code>.</p>
<p>The following command adds a new property definition for notes for the <code>COLUMN</code> type. Because columns exist in tables, views, materialized view, external tables and sequences, the following command adds the definition of this property to columns for all of those metadata objects:</p>
<pre>
OMBREDEFINE CLASS_DEFINITION 'COLUMN' 
     ADD PROPERTY_DEFINITION 'UD_COL_NOTE' SET PROPERTIES (TYPE, DEFAULT_VALUE)
     VALUES ('STRING', 'notes')
</pre>
<p>When you create and save a new property definition, OMB*Plus performs the following validations:</p>
<ul>
<li>
<p>A user access check ensuring that you have single-user access to the current workspace.</p>
</li>
<li>
<p>A name space check ensuring that you did not define two identically named property definitions within the same class hierarchy.</p>
</li>
<li>
<p>A property value check ensuring that you defined default values consistent with the data types that you specified.</p>
</li>
</ul>
<p>To change the name or the default value of a given property definition, use a command as follows:</p>
<pre>
OMBREDEFINE CLASS_DEFINITION 'TABLE' MODIFY PROPERTY_DEFINITION 'UD_TBL_NOTE'
     SET PROPERTIES (DEFAULT_VALUE, BUSINESS_NAME) 
     VALUES ('99', 'Table Note') 
</pre>
<p>To delete a UDP, use a command such as</p>
<pre>
OMBREDEFINE CLASS_DEFINITION 'TABLE' DELETE PROPERTY_DEFINITION 'UD_TBL_NOTE'
</pre>
<p>which deletes the UD_TBL_NOTE property definition from the Table class. Deleting a UDP is a destructive action and should generally be done with caution because it cannot be undone. It renders irretrievable all custom property values made for this property definition in your workspace.</p>
<p class="subhead2"><a id="CHDHHDFB"></a><a id="WBSCR16862"></a>OMBDESCRIBE</p>
<p>You can use <code>OMBDESCRIBE</code> on any class definition to view the attributes for a metadata element. Among other tasks, use <code>OMBDESCRIBE</code> to list all the property definitions including the UDPs for a given object type. For instance, the following command lists the UDPs for dimensions:</p>
<pre>
OMBDESCRIBE CLASS_DEFINITION 'DIMENSION' GET USER_DEFINED PROPERTY_DEFINITIONS
</pre>
<p>You can also use <code>OMBDESCRIBE</code> to inspect the properties of a property definition. For instance, for a UDP called <code>UD_DOCID</code>, you can discover its data type, default value, and business name using the following command:</p>
<pre>
OMBDESCRIBE CLASS_DEFINITION 'DIMENSION' PROPERTY_DEFINITION  'UD_DOCID' 
     GET PROPERTIES (TYPE, DEFAULT_VALUE, BUSINESS_NAME)
</pre></div>
<!-- class="sect2" -->
<a id="CEGCADAB"></a>
<div id="WBSCR16863" class="sect2">
<h3 class="sect2">Naming Conventions for UDOs and UDPs</h3>
<p>It is mandatory to include the prefix UD_ while naming UDOs and UDPs. This ensures that the names of UDOs and UDPs are not identical to the names of predefined objects in the workspace.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
If in a previous release you named a UDP with the prefix UDP_, then it is still valid. However, for all subsequent UDOs and UDPs, use the UD_ prefix.</div>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="BABIFHAF"></a>
<div id="WBSCR16200" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Adding New Properties to Workspace Objects</h2>
<p><span class="bold">To define new properties on Workspace objects, complete the following steps:</span></p>
<ol>
<li>
<p>Carefully plan the new additions to the workspace.</p>
<p>If possible, you should define all user-defined properties into the workspace before enabling end users to access it. In doing so, you avoid the task of supplying values for UDPs on existing objects.</p>
</li>
<li>
<p>Log in as the workspace owner, in single user mode.</p>
<p>If another user is logged on within the GUI or OMB*Plus, then you will be prevented from running commands that alter the structure of the workspace.</p>
<p>If already logged into the Design Center, then you can start OMB*Plus from the main menu of Design Center. On the main menu, click <span class="bold">View</span>, and select <span class="bold">OMB*Plus</span>. To ensure that other users do not access the workspace, issue the command <code>OMBSWITCHMODE SINGLE_USER_MODE</code>.</p>
</li>
<li>
<p>Use the command <a href="#CHDJDAHJ">OMBREDEFINE</a> on the workspace object to which you want to add a custom property definition.OMBDEFINE FOLDER_DEFINITION</p>
<p>For examples on how to use this command, see the section <a href="#CHDJDAHJ">OMBREDEFINE</a>.</p>
</li>
<li>
<p>To view the changes in OMB*Plus, use the command <a href="#CHDHHDFB">OMBDESCRIBE</a>.</p>
</li>
<li>
<p>Use the command OMBCOMMIT to save the changes.</p>
</li>
<li>
<p>After you commit the changes, users can view and assign values to the new property in the graphical user interface.</p>
</li>
<li>
<p>Notify users that they can log in to the Design Center.</p>
</li>
</ol>
<div id="WBSCR16864" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref277"></a>
<h3 class="sect2">Creating UDPs: An Example</h3>
<p><span class="bold">To create UDPs for an object, complete the following steps:</span></p>
<ol>
<li>
<p>Log in to the client as an administrator.</p>
</li>
<li>
<p>Open the OMB*Plus view from the main menu of the Design Center. To do this, click <span class="bold">View</span>, and select <span class="bold">OMB*Plus</span>.</p>
</li>
<li>
<p>Ensure that you are in single user mode. You can verify this with the command <code>OMBDISPLAYCURRENTMODE</code>. If you are in multiple user mode, then switch to single user mode by using the command:OMBREDEFINE CLASS_DEFINITION 'VIEW</p>
<pre>
OMBSWITCHMODE SINGLE_USER_MODE
</pre></li>
<li>
<p>In the OMB*Plus client, enter the following command to create four UDPs for the object <code>View</code>:</p>
<ul>
<li>
<pre>
OMBREDEFINE CLASS_DEFINITION 'VIEW' \
ADD PROPERTY_DEFINITION 'UD_OWNER' SET PROPERTIES \ 
(TYPE, DEFAULT_VALUE, BUSINESS_NAME) VALUES \ 
('STRING', 'REP_OWNER', 'Object Owner')  
</pre></li>
<li>
<pre>
OMBREDEFINE CLASS_DEFINITION 'VIEW' \ 
ADD PROPERTY_DEFINITION 'UD_FILE' SET PROPERTIES \ 
(TYPE, DEFAULT_VALUE) VALUES ('FILE', 'C:\\vw.sql')
</pre></li>
<li>
<pre>
OMBREDEFINE CLASS_DEFINITION 'VIEW' \ 
ADD PROPERTY_DEFINITION 'UD_LINK' SET PROPERTIES \ 
(TYPE, DEFAULT_VALUE) VALUES ('URL', 'http://www.oracle.com')
</pre></li>
<li>
<pre>
OMBREDEFINE CLASS_DEFINITION 'VIEW' \ 
ADD PROPERTY_DEFINITION 'UD_VERSION' SET PROPERTIES \ 
(TYPE, DEFAULT_VALUE) VALUES ('DATE', '2006-1-7')
</pre></li>
<li>
<pre>
OMBSAVE
</pre></li>
</ul>
<p>This creates the following UDPs: <code>UD_OWNER</code>, <code>UD_FILE</code>, <code>UD_LINK</code>, and <code>UD_VERSION</code>.</p>
<p>Note that the valid UDP types are: integer, string, float, double, date, timestamp, boolean, long, file, and url.</p>
</li>
<li>
<p>From the Projects Navigator create a view in any module.</p>
</li>
<li>
<p>Open the property inspector for the view. To do this, select the view and from the main menu, click <span class="bold">View</span>, and then select <span class="bold">Property Inspector</span>.</p>
</li>
<li>
<p>The user defined properties are listed on the property inspector.</p>
<p>You can modify the values of any of the UDPs from the property inspector.</p>
</li>
</ol>
<p>To remove a UDP from the workspace, use the <code>DELETE</code> clause. For example, to delete UD_VERSION, use the following command:</p>
<pre>
OMBREDEFINE CLASS_DEFINITION 'VIEW' DELETE PROPERTY_DEFINITION 'UD_VERSION' 
</pre></div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="BABDFJCG"></a>
<div id="WBSCR16300" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Adding UDOs to the Workspace</h2>
<p>UDOs are objects that you define and add to the workspace in addition to existing workspace objects.</p>
<p>All UDOs must belong to a module, and the module itself is a UDO. This module acts as the topmost container holding other objects within it. A module can contain folders, first class objects (FCOs), and second class objects (SCOs). Similarly, a folder can contain other folders, FCOs, and SCOs. An FCO can contain one or more SCOs.</p>
<p>UDOs exhibit a parent-child relationship. The module is the topmost parent. An FCO within a module is a child element of the module. Similarly, an SCO within an FCO is a child element of the FCO. For example, an Oracle module is a parent module. A table within this module is an FCO and a column within the table is an SCO.</p>
<p><span class="bold">To define new objects for the workspace, complete the following steps:</span></p>
<ol>
<li>
<p>Carefully plan the new additions to the workspace.</p>
<p>Before you begin, fully review the remainder of this chapter and become familiar with the necessary scripting commands.</p>
</li>
<li>
<p>Log in to the client as an administrator and in single user mode.</p>
</li>
<li>
<p>Design the UDO based on the steps described in <a href="#BABGGDDF">"Writing Scripts to Define UDOs"</a>.</p>
</li>
<li>
<p>Use the <a href="#CHDIJICI">OMBDEFINE</a> command to create a new module definition, and FCOs and SCOs within that module. Use the <a href="#CHDJDAHJ">OMBREDEFINE</a> command to make any changes to the UDOs or to set properties for these objects.</p>
<p>Once you create the UDO through scripting, you can use the graphical user interface to create and edit the objects it contains.</p>
</li>
<li>
<p>Log in to the Design Center and view the new objects as described in <a href="#BABCICIB">"Working with UDOs and UDPs"</a>.</p>
<p>Verify that the new objects display as intended.</p>
</li>
<li>
<p>(Optional) Assign a new icon to the UDO, as described in<a href="#BABCECBA">"Creating New Icons for Workspace Objects"</a>.</p>
</li>
<li>
<p>Save the changes using the command OMBCOMMIT.</p>
</li>
<li>
<p>Notify users that they can log in to the client.</p>
</li>
</ol>
<a id="BABGGDDF"></a>
<div id="WBSCR16865" class="sect2">
<h3 class="sect2">Writing Scripts to Define UDOs</h3>
<p><span class="bold">To define a UDO, write a script that completes the following steps:</span></p>
<ul>
<li>
<p><span class="bold">Create a user defined module</span>: This will be the parent module.</p>
</li>
<li>
<p><span class="bold">Define the object type</span>: Define the module to be a folder. This folder is an object that can hold other objects.</p>
</li>
<li>
<p><span class="bold">Define FCOs and SCOs</span>: Create user-defined FCOs and SCOs for the UDO, define the parent-child relationship between the FCOs and the SCOs, and assign physical names to these objects. For example, <code>UD_WORKBOOK</code> is a valid physical name. You can also indicate a business name and plural name, both of which are displayed in the Design Center and in editors. Continuing the previous example, <code>Workbook</code> and <code>Workbooks</code> are likely entries for the business name and plural name, respectively. If you do not specify these values, then they default to the physical name.</p>
</li>
<li>
<p><span class="bold">Define object properties</span>: Define the properties for all the objects you create. Some properties, such as Name, Business_Name, Plural_Name, and Description, are assigned automatically to any newly created object.</p>
</li>
<li>
<p><span class="bold">Add component definition</span>: All parent objects need to be assigned a component definition. The child elements have to be added to the component definition. The component definition determines the lifetime of child elements.For example, a column cannot exist if the parent table is deleted. Note that a component definition includes all the SCOs for the parent FCO, and all the SCOs owned by the first level SCOs and so on. If the child type is a FCO, then it must be added to the FOLDER_DEFINITION of the parent.</p>
</li>
<li>
<p><span class="bold">Define association types</span>: Create association types to indicate the types of relationships a UDO can have with workspace objects and other UDOs. You need to perform this step only if you want end users to later relate the UDO to specific instances of objects. For instance, in your script you could associate the UDO with tables and views. In the Design Center, end users could then relate instances of the UDO with specific tables and views. Warehouse Builder displays these relationships in impact and lineage analysis reports.</p>
</li>
<li>
<p><span class="bold">Assign icons (optional)</span>: See <a href="#BABCECBA">"Creating New Icons for Workspace Objects"</a>.</p>
</li>
<li>
<p>Save the changes.</p>
</li>
</ul>
</div>
<!-- class="sect2" -->
<div id="WBSCR16866" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref278"></a>
<h3 class="sect2">Creating UDOs: An Example</h3>
<p>This section provides an example to create UDOs modeled on a Java application. The Java application acts as a module. This module contains classes (FCOs), and those classes contain methods (SCOs). Within a method, you can model the lines of code. From a business standpoint, this is of interest because a particular line of code in an application may be impacted by a change in a database table if it is used within a SQL (JDBC) statement.</p>
<div id="WBSCR16867" class="figure">
<p class="titleinfigure"><a id="CIHHFFDI"></a>Figure 7-1 Structure of the UDOs</p>
<img width="431" height="548" src="img/udo001_structure.gif" alt="Description of Figure 7-1 follows" /><br />
<a id="sthref279" href="img_text/udo001_structure.htm">Description of "Figure 7-1 Structure of the UDOs"</a><br />
<br /></div>
<!-- class="figure" -->
<p><span class="bold">To create the UDOs, perform the following steps:</span></p>
<ol>
<li>
<p>Log in to the Warehouse Builder client as an administrator and open the OMB*Plus window. Make sure that you are logged in single user mode.</p>
</li>
<li>
<p>First create a module definition and set properties for this module:</p>
<pre>
OMBDEFINE MODULE CLASS_DEFINITION 'UD_JAVA_APP' \ 
SET PROPERTIES (BUSINESS_NAME, PLURAL_NAME) \ 
VALUES ('Java Application', 'Java Applications')
</pre>
<p>This defines the module definition and sets certain properties common to all objects. BUSINESS_NAME is the user-friendly name for an object. If the Naming mode preference for the Design Center is switched to Business mode, then the value set for BUSINESS_NAME is displayed for the object. PLURAL_NAME is the label that is used to show where multiple instances of an object are shown, such as the label used for a tree node in the Design Center that contains several instances of the object.</p>
</li>
<li>
<p>Now create a folder definition with the same name as the module so that the module assumes the role of a folder:</p>
<pre>
OMBDEFINE FOLDER_DEFINITION 'UD_JAVA_APP'
</pre></li>
<li>
<p>Now create an FCO:</p>
<pre>
OMBDEFINE FIRST_CLASS_OBJECT CLASS_DEFINITION \ 
'UD_JCLASS' SET PROPERTIES (BUSINESS_NAME, PLURAL_NAME) \ 
VALUES ('Java Class File', 'Java Class Files')
</pre></li>
<li>
<p>Add the FCO as a child of the folder class:</p>
<pre>
OMBREDEFINE CLASS_DEFINITION 'UD_JAVA_APP' \ 
ADD CHILD_TYPE 'UD_JCLASS'
</pre></li>
<li>
<p>Create a component definition for the FCO:</p>
<pre>
OMBDEFINE COMPONENT_DEFINITION 'UD_JCLASS'
</pre></li>
<li>
<p>Add the component definition to the folder definition:</p>
<pre>
OMBREDEFINE FOLDER_DEFINITION 'UD_JAVA_APP' \ 
ADD 'UD_JCLASS'
</pre></li>
<li>
<p>Create an SCO and set its properties:</p>
<pre>
OMBDEFINE SECOND_CLASS_OBJECT \ 
CLASS_DEFINITION 'UD_JMETHOD' \ 
SET PROPERTIES (BUSINESS_NAME, PLURAL_NAME) \ 
VALUES ('Method', 'Methods')
</pre></li>
<li>
<p>Add the SCO as a child of the FCO:</p>
<pre>
OMBREDEFINE CLASS_DEFINITION 'UD_JCLASS' \ 
ADD CHILD_TYPE 'UD_JMETHOD'
</pre></li>
<li>
<p>Add the SCO to the component definition:</p>
<pre>
OMBREDEFINE COMPONENT_DEFINITION 'UD_JCLASS' \ 
ADD 'UD_JMETHOD' 
</pre></li>
<li>
<p>Create an SCO and set its properties:</p>
<pre>
OMBDEFINE SECOND_CLASS_OBJECT \ 
CLASS_DEFINITION 'UD_JMETHOD_LINE' \ 
SET PROPERTIES (BUSINESS_NAME, PLURAL_NAME) \ 
VALUES ('Java Method Line', 'Java Method Lines') 
</pre></li>
<li>
<p>Add this SCO as a child of the initially created SCO:</p>
<pre>
OMBREDEFINE CLASS_DEFINITION 'UD_JMETHOD' \ 
ADD CHILD_TYPE 'UD_JMETHOD_LINE' 
</pre></li>
<li>
<p>Add this SCO to the component definition:</p>
<pre>
OMBREDEFINE COMPONENT_DEFINITION 'UD_JCLASS' \ 
ADD 'UD_JMETHOD_LINE'
</pre></li>
</ol>
<p>This creates the following UDOs:</p>
<ul>
<li>
<p>A module folder called UD_JAVA_APP</p>
</li>
<li>
<p>An FCO named UD_JCLASS, within the module</p>
</li>
<li>
<p>An SCO named UD_JMETHOD, which is the child of UD_JCLASS</p>
</li>
<li>
<p>Another SCO named UD_JMETHOD_LINE, which is the child of UD_JMETHOD</p>
</li>
</ul>
<p>You can access the UDOs from the Projects Navigator under the User Defined Modules icon. To create a new instance of the UDO, right-click the UDO and select <span class="bold">New</span>. You can create new modules and FCOs as well as edit these modules and FCOs.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
If you cannot see the newly created UDOs in the Projects Navigator, shut down Warehouse Builder completely, and then start it up again, saving any changes if prompted.</div>
</div>
<!-- class="sect2" -->
<div id="WBSCR16868" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref280"></a>
<h3 class="sect2">Associating UDOs with Objects</h3>
<p>UDOs can be associated with other objects. By creating these associations, UDOs become a part of Lineage and Impact Analysis diagram just like any other object.</p>
<p class="subhead2"><a id="WBSCR16869"></a>Associating a Java Application with a Table</p>
<p>This example associates the SCO, UD_JMETHOD, with one or more tables. This is modeling the fact that a method could be referencing tables in JDBC calls.</p>
<p>To associate the Java method to table, use the command:</p>
<pre>
OMBDEFINE ASSOCIATION_DEFINITION 'UD_XJMETHOD2TABLE' \ 
SET PROPERTIES (CLASS_1,CLASS_2,ROLE_1,ROLE_2 \ 
,ROLE_1_MAX_CARDINALITY,ROLE_1_NAVIGABLE) \ 
VALUES ('UD_JMETHOD','TABLE','TABLEUSED','JM2TABLE' \ 
,'INFINITE','true') ADD DEPENDENCY_DEFINITION 'DATAFLOW' 
</pre>
<p>CLASS_1 and CLASS_2 can be any classes (FCO or SCO). At least one of the classes should be a user defined class. The other class can be either a user defined class or one of the main Warehouse Builder classes, such as table or column. In this example, the association is between the UDO UD_JMETHOD, and table.</p>
<p>Role_1 and Role_2 are the names you use to identify Class_1 from the point of view of this association. A class may have multiple associations and it plays a role in each one of them.</p>
<p>MAX_CARDINALITY allows you to limit the number of objects of that class which participate in that association. For example, consider the association between uniqueKey and foreignKey. The max_cardinality of uniqueKey is 1, because a given foreignKey object can be associated with at most one uniqueKey object. MAX_CARDINALITY can be set to any positive integer, or the reserved word INFINITE.</p>
<p>ROLE_1_NAVIGABLE is used by Lineage/Impact analyzer. If set to TRUE, it means that the analyzer can traverse the association in either direction between Class_1 and Class_2. If the property is set to FALSE, it means that the analyzer can traverse the relationship from Class_1 to Class_2, but not the other way around.</p>
<p>When you set the DEPENDENCY_DEFINITION parameter to DATAFLOW, the association participates in the dataflow impact and lineage analysis.</p>
<p><span class="bold">To associate the UDO to a table, complete the following steps:</span></p>
<ol>
<li>
<p>In the Projects Navigator, expand the node User Defined Modules.</p>
</li>
<li>
<p>Right-click <span class="bold">UD_JAVA_APP</span> and select <span class="bold">New UD_JAVA_APP</span>.</p>
</li>
<li>
<p>Specify a name for the application.</p>
</li>
<li>
<p>Right-click <span class="bold">UD_JCLASS</span> and select <span class="bold">New UD_JCLASS</span>.</p>
</li>
<li>
<p>Specify a name for the Java class. In the example, it is CUSTOMERUPDATE.</p>
<img width="261" height="293" src="img/udo003_customerupdate.gif" alt="Description of udo003_customerupdate.gif follows" /><br />
<a id="sthref281" href="img_text/udo003_customerupdate.htm">Description of the illustration udo003_customerupdate.gif</a><br />
<br /></li>
<li>
<p>Right-click CUSTOMERUPDATE, and select <span class="bold">Open</span> to open the UDO Editor.</p>
</li>
<li>
<p>Click the Object and Association Tree tab and select CUSTOMERUPDATE. In the right panel, you can view the properties for the user defined object CUSTOMERUPDATE.</p>
<img width="730" height="361" src="img/udo004_jclasseditor.gif" alt="Description of udo004_jclasseditor.gif follows" /><br />
<a id="sthref282" href="img_text/udo004_jclasseditor.htm">Description of the illustration udo004_jclasseditor.gif</a><br />
<br /></li>
<li>
<p>On the Object and Association Tree tab, right-click <span class="bold">UD_JMethod</span> and select <span class="bold">Create</span>.</p>
<p>An SCO called JMETHOD_1 is created.</p>
</li>
<li>
<p>JMETHOD_1 contains two nodes: UD_JMETHOD_LINE, which is the child SCO, and TABLEUSED, which is the value specified for ROLE_1 when the association UD_XJMETHOD2TABLE was created.</p>
</li>
<li>
<p>Right-click TABLEUSED and select <span class="bold">Reference</span>.</p>
<p>The Object Selector dialog box is displayed, and allows you to select the table to which you want to connect the UDO.</p>
<img width="616" height="493" src="img/udo006_objectselector.gif" alt="Description of udo006_objectselector.gif follows" /><br />
<a id="sthref283" href="img_text/udo006_objectselector.htm">Description of the illustration udo006_objectselector.gif</a><br />
<br /></li>
</ol>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="BABCICIB"></a>
<div id="WBSCR16400" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Working with UDOs and UDPs</h2>
<p>In the graphical user interface, you can view UDOs and UDPs in the Projects Navigator and in the <a href="#BEHCDCCH">Repository Design Browser</a>. However, in the Projects Navigator, you can also edit the UDOs and UDPs.</p>
<p class="subhead2"><a id="BEHCDCCH"></a><a id="WBSCR16870"></a>Repository Design Browser</p>
<p>The Repository Browser is a web browser for viewing repository metadata, generating different reports for objects metadata, and auditing runtime deployment and execution operations. In the Design Browser you can see all objects (including UDOs)and their properties (including UDPs) of all the projects created for a workspace. You can also generate and view reports on metadata including lineage and impact analysis reports.</p>
<p>If you define a UDP for a given object, then you can view the UDP name and values in the browser reports. The values are listed as Extended Property Name and Extended Property Value.</p>
<div id="WBSCR16871" class="sect2"><a id="sthref284"></a>
<h3 class="sect2">Propagating UDOs and UDPs to Other Workspaces</h3>
<p>The primary method for propagating changes from one workspace to another is by using MDL. MDL enables you to export and import the metadata definition of the UDP and its contents.</p>
<p class="subhead2"><a id="WBSCR16872"></a>Exporting UDOs and UDPs</p>
<p>You can export UDOs and UDPs as any other object.</p>
<p>In the MDL Control file, the option is <code>DEFINITIONFILE=</code><code><span class="codeinlineitalic">filename</span></code> to export the metadata definition. For example:</p>
<pre>
## Sample Export file 
USERID=UserName/Password@HostName:PortID:OracleServiceName
#
DEFINITIONFILE=Drive:\DirectoryName\filename.mdd

FILE=Drive:\DirectoryName\filename.mdl
LOG=Drive:\DirectoryName\filename.log
</pre>
<p class="subhead2"><a id="WBSCR16873"></a>Importing UDOs and UDPs</p>
<p>You can import UDPs from the command line as well as from the user interface. During import, MDL updates the UDPs for all objects. In the MDL Control file, the option is DEFINITIONFILE=filename to import the metadata definition. For example:</p>
<pre>
## Sample Import file 
USERID=UserName/Password@HostName:PortID:OracleServiceName
#
DEFINITIONFILE=Drive:\DirectoryName\filename.mdd

FILE=Drive:\DirectoryName\filename.mdl
LOG=Drive:\DirectoryName\filename.log
</pre>
<p>You can import UDPs using one of the following search criteria:</p>
<ul>
<li>
<p><span class="bold">Universal ID</span>: The metadata definition contains a Universal Object ID (UOID). The UOID uniquely identifies objects across workspaces. If you import the MDL file by UOID, then MDL looks up the metadata definition by UOID. If the metadata definition name in the source MDL file is different from the metadata definition in the workspace, then MDL renames it when it is running in the Update/Replace mode.</p>
</li>
<li>
<p><span class="bold">Physical Name</span>: MDL looks up the metadata definition by physical name.</p>
</li>
</ul>
<p>Regardless of the import mode, MDL either adds the metadata definition if it does not exist in the workspace, or updates the metadata definition if it already exists. MDL does not delete metadata definitions in the workspace.</p>
<p>When updating the metadata definition, MDL only renames the object if the names are different (search criteria is by UOID), and updates the default value. MDL does not change the data type.</p>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="BABCECBA"></a>
<div id="WBSCR16500" class="sect1">
<h2 class="sect1">Creating New Icons for Workspace Objects</h2>
<p>Icons are graphics that visually suggest the availability of a function or type of an object to end users. There are many types of pre-defined workspace objects, each with their own icon. You may want to change the icon associated with an existing object or instance of an object to something more recognizable. For example, you could visually highlight a particular table by altering its icon. Additionally, for UDOs, you may want to change the default icon to something representative of the object. You can create your own icons using a graphics editor or third-party software.</p>
<p>You can create a new icon set and then associate it with an object using the OMB*Plus scripting language.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
You can assign new icons to most workspace objects with the exception of pre-defined objects like public transformations and public data rules and <code>DEFAULT_CONFIGURATION</code>, <code>DEFAULT_CONTROL_CENTER</code>, and <code>OWB_REPOSITORY_LOCATION</code>.</div>
<p>Every object has a set of icons of varying sizes to represent it throughout the various editors and toolbars. Each icon set includes a canvas icon, palette icon, and a tree icon as described in <a href="#CHDBBHJB">Table 7-1</a>. When you define a new icon set, follow the sizing guidelines. If you specify a new icon with an incorrect size, it is automatically resized, which may distort your intended design.</p>
<div id="WBSCR16874" class="tblformal">
<p class="titleintable"><a id="sthref285"></a><a id="CHDBBHJB"></a>Table 7-1 Icon Sets</p>
<table class="cellalignment3008" title="Icon Sets" summary="Icon Sets" dir="ltr">
<thead>
<tr class="cellalignment2999">
<th class="cellalignment3009" id="r1c1-t5">Type</th>
<th class="cellalignment3009" id="r1c2-t5">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2999">
<td class="cellalignment3005" id="r2c1-t5" headers="r1c1-t5">
<p>Canvas Icon</p>
</td>
<td class="cellalignment3005" headers="r2c1-t5 r1c2-t5">
<p>Represents instances of objects in the canvas of an editor. For example, it displays a table icon in the canvas of the Mapping Editor or in a Lineage Report. The correct size is 32 x 32 pixels in GIF or JPEG format.</p>
</td>
</tr>
<tr class="cellalignment2999">
<td class="cellalignment3005" id="r3c1-t5" headers="r1c1-t5">
<p>Palette Icon</p>
</td>
<td class="cellalignment3005" headers="r3c1-t5 r1c2-t5">
<p>Represents types of objects in editor palettes. For example, it displays the table operator in the Mapping Editor operator palette. The correct size is 18 x 18 pixels in GIF or JPEG format.</p>
</td>
</tr>
<tr class="cellalignment2999">
<td class="cellalignment3005" id="r4c1-t5" headers="r1c1-t5">
<p>Tree Icon</p>
</td>
<td class="cellalignment3005" headers="r4c1-t5 r1c2-t5">
<p>Represents types and instances of objects in navigation trees such as the Project Explorer in the Design Center. The correct size is 16 x 16 pixels in GIF or JPEG format.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<div id="WBSCR16875" class="sect2"><a id="sthref286"></a>
<h3 class="sect2">Creating Icon Sets</h3>
<p>To create a new icon set, complete the following steps:</p>
<ol>
<li>
<p>Log in to the client as an administrator.</p>
</li>
<li>
<p>In the Globals Navigator, right-click the Icon Sets node and select <span class="bold">New Icon Set</span>.</p>
</li>
<li>
<p>The Create Icon Set dialog box is displayed. For details on the values to be entered on this page, see <a href="#CHDFABEE">"Create Icon Set Dialog Box"</a> .</p>
</li>
</ol>
<a id="CHDFABEE"></a>
<div id="WBSCR16876" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Create Icon Set Dialog Box</h4>
<p>The Create Icon Set dialog box enables you to specify values for the Icon Set. Enter the following values and click <span class="bold">OK</span> to define a new Icon Set:</p>
<ul>
<li>
<p><span class="bold">Name</span>: The name of the Icon Set.</p>
</li>
<li>
<p><span class="bold">Description</span>: A description of the Icon Set.</p>
</li>
<li>
<p><span class="bold">File Name</span>: Navigate and select the image that you want to assign to the new Icon Set. You need to select an image for Canvas, Palette, and Tree Icon.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
You can select any image to represent the new icon.</div>
</li>
</ul>
<p>The newly created icon set will be available under Icon Sets in the Globals Navigator.</p>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<div id="WBSCR16877" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref287"></a>
<h3 class="sect2">Assigning New Icon Sets to Objects</h3>
<p>To assign a new icon set to an object, you must use the OMB*Plus scripting clause SET REFERENCE ICONSET. To remove an icon set, use the clause UNSET REFERENCE ICONSET.</p>
<p>To assign an icon set named ICON1 to an FCO such as Table, use the following command:</p>
<pre>
OMBREDEFINE CLASS_DEFINITION 'TABLE' SET REF ICONSET 'ICON1'
</pre>
<p>To remove an icon set assigned to this FCO, use the following command:</p>
<pre>
OMBREDEFINE CLASS_DEFINITION 'TABLE' UNSET REF ICONSET
</pre>
<p>To assign an icon set to a specific instance of a table TAB1, use the following command:</p>
<pre>
OMBALTER TABLE 'TAB1' SET REFERENCE ICONSET 'ICON1'
</pre>
<p>To remove this icon set, use the following command:</p>
<pre>
OMBALTER TABLE 'TAB1' UNSET REFERENCE ICONSET
</pre>
<p>To know what icon set has been assigned to an object, use the following command:</p>
<pre>
OMBRETRIEVE TABLE 'TAB1' GET REFERENCE ICONSET
</pre></div>
<!-- class="sect2" --></div>
<!-- class="sect1" --></div>
<!-- class="chapter" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment2998">
<tr>
<td class="cellalignment3005">
<table class="cellalignment3003">
<tr>
<td class="cellalignment3002"><a href="api_5experts.htm"><img width="24" height="24" src="../../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment3002"><a href="omb_appendix.htm"><img width="24" height="24" src="../../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;2000, 2013,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment3007">
<table class="cellalignment3001">
<tr>
<td class="cellalignment3002"><a href="../../index.htm"><img width="24" height="24" src="../../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment3002"><a href="../../nav/portal_booklist.htm"><img width="24" height="24" src="../../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment3002"><a href="toc.htm"><img width="24" height="24" src="../../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment3002"><a href="../../nav/mindx.htm"><img width="24" height="24" src="../../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment3002"><a href="../../dcommon/html/feedback.htm"><img width="24" height="24" src="../../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>
</body>
</html>
