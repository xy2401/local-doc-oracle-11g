<!DOCTYPE html>
<html lang="en" >
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1">
<meta charset="utf-8">
<title>Creating and Consuming Web Services in Oracle Warehouse Builder</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Version 5.1.2 Build 037" />
<meta name="dcterms.created" content="2011-09-21T18:21:36Z" />
<meta name="robots" content="all" />
<meta name="dcterms.title" content="Warehouse Builder Data Modeling, ETL, and Data Quality Guide" />
<meta name="dcterms.identifier" content="E10935-05" />
<meta name="dcterms.isVersionOf" content="WBETL" />
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;2000, 2011,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved." />
<link rel="Start" href="../../index.htm" title="Home" type="text/html" />
<link rel="Copyright" href="../../dcommon/html/cpyr.htm" title="Copyright" type="text/html" />

<script type="application/javascript"  src="../../dcommon/js/headfoot.js"></script>
<script type="application/javascript"  src="../../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html" />
<link rel="Index" href="index.htm" title="Index" type="text/html" />
<link rel="Prev" href="errors_trouble.htm" title="Previous" type="text/html" />
<link rel="Next" href="trans_mod.htm" title="Next" type="text/html" />
<link rel="alternate" href="../e10935.pdf" title="PDF version" type="application/pdf" />
<link rel="schema.dcterms" href="http://purl.org/dc/terms/" />
<link rel="stylesheet" href="../../dcommon/css/fusiondoc.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/header.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/footer.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/fonts.css">
<link rel="stylesheet" href="../../dcommon/css/foundation.css">
<link rel="stylesheet" href="../../dcommon/css/codemirror.css">
<link rel="stylesheet" type="text/css" title="Default" href="../../nav/css/html5.css">
<link rel="stylesheet" href="../../dcommon/css/respond-480-tablet.css">
<link rel="stylesheet" href="../../dcommon/css/respond-768-laptop.css">
<link rel="stylesheet" href="../../dcommon/css/respond-1140-deskop.css">
<script type="application/javascript" src="../../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">21/37</span> <!-- End Header --><a id="BABIICGD"></a><a id="WBETL16000"></a>
<h1 class="chapter"><span class="secnum">16</span> Creating and Consuming Web Services in Oracle Warehouse Builder</h1>
<p>Web services are the basis of the widely used Service-Oriented Architecture (SOA) approach to integrating enterprise applications. They enable easy access to remote content and application functionality using industry-standard mechanisms, without any dependency on the provider's platform, the location, or the service implementation.</p>
<p>Oracle Warehouse Builder-based solutions can participate fully in SOA-based architectures. You can publish certain Oracle Warehouse Builder objects as Web services, thus enabling other developers to use industry standards to leverage functionalities defined in these objects.</p>
<p>This chapter contains the following topics:</p>
<ul>
<li>
<p><a href="#CHDHAEHB">"Introduction to Web Services"</a></p>
</li>
<li>
<p><a href="#BABBAFHH">"Publishing Oracle Warehouse Builder Objects as Web Services"</a></p>
</li>
<li>
<p><a href="#BABHFEDG">"Creating Web Services Based on a URL"</a></p>
</li>
<li>
<p><a href="#BABIBBBD">"Executing Web Services"</a></p>
</li>
<li>
<p><a href="#BABEFDEB">"Using Web Services as Activities in Process Flows"</a></p>
</li>
<li>
<p><a href="#BABGDJHB">"Using Web Services in Mappings"</a></p>
</li>
<li>
<p><a href="#CHDCEHBG">"Using Secure Sockets Layer (SSL) to Access Web Services Securely"</a></p>
</li>
<li>
<p><a href="#CHDHCHDE">"Case Study: Using Web Services for Data Integration"</a></p>
</li>
</ul>
<a id="CHDHAEHB"></a><a id="WBETL16001"></a>
<div class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Introduction to <a id="sthref1626"></a>Web Services</h2>
<p>A Web service is a software system designed to provide a standard, vendor-neutral method of accessing computing resources or services over a network. It uses open, XML-based standards and transport protocols to exchange data with calling clients.</p>
<p>A Web service generally consists of:</p>
<ul>
<li>
<p>a published interface definition for the Web service, that describes messages that clients can send to the service and responses the Web service returns to the caller.</p>
</li>
<li>
<p>an implementation that provides the functionality exposed through the interface.</p>
</li>
</ul>
<p>The caller of a Web service does not depend upon underlying implementation details such as the choice of programming language, application server technology or database. The published interface describes all information required for the caller to consume the Web service.</p>
<p>Because implementation differences are not exposed to the caller, Web services enable easy integration of software components from different technology vendors. The approach of building solutions based on Web services is commonly called Service-Oriented Architecture (SOA).</p>
<p>While there are several common approaches to building Web services, in enterprise computing, Web services generally interact using the XML-based standards Simple Object Access Protocol (SOAP) and Web Services Description Language (WSDL).</p>
<p class="subhead2"><a id="sthref1627"></a>Simple Object Access Protocol (SOAP)</p>
<p><span class="bold">Simple Object Access Protocol (SOAP)</span> is a protocol for exchanging XML-based messages over a computer network, normally using HTTP. SOAP forms the foundation layer of the Web services stack, providing a basic messaging framework that more abstract layers can build on. It is used to send Web service requests and to receive Web service responses.</p>
<p class="subhead2"><a id="sthref1628"></a>Web Services Description Language (WSDL)</p>
<p>The <span class="bold">Web Services Description Language (WSDL)</span> is an XML-based service description of how to communicate using the Web service. It includes the following information:</p>
<ul>
<li>
<p>Purpose and location (on a remote computer) of the Web service</p>
</li>
<li>
<p>Operations that you can perform on the Web service</p>
</li>
<li>
<p>Input parameters and return values for each operation</p>
</li>
<li>
<p>Protocol bindings and message formats required to interact with the Web services</p>
</li>
</ul>
<p>The supported operations and messages are described abstractly, and then bound to a concrete network protocol and message format.</p>
<div class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref1629"></a>
<h3 class="sect2">Advantages of <a id="sthref1630"></a><a id="sthref1631"></a>Web Services</h3>
<p>Web services provide the following advantages:</p>
<ul>
<li>
<p>Support Service Oriented Architecture (SOA)</p>
</li>
<li>
<p>Enable sharing of application functionality between application developers</p>
</li>
<li>
<p>Enable you to build services that invoke data integration processes</p>
</li>
<li>
<p>Enable you to build applications faster because you can reuse application logic created by others</p>
</li>
</ul>
</div>
<!-- class="sect2" -->
<div class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref1632"></a>
<h3 class="sect2">About Web Services in Oracle Warehouse Builder</h3>
<p>Oracle Warehouse Builder supports Web services integration using the SOAP and WSDL standards, and thus can be fully integrated into SOA-based enterprise architectures. Developers experienced with Oracle Warehouse Builder can create and leverage Web services-based solutions in their data integration designs using their existing tools, code, and skill set. For example, you can integrate your ETL design into larger solutions based on products such as Oracle BPEL Process Manager.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink WBDOD10669" href="../../owb.112/e10582/web_services.htm#WBDOD10669"><span class="italic">Oracle Warehouse Builder Sources and Targets Guide</span></a> for more information about Web services concepts.</div>
<p>Oracle Warehouse Builder supports the following Web service-related functionality:</p>
<ul>
<li>
<p>Publishing Oracle Warehouse Builder ETL jobs as SOAP-based Web services, which can then be invoked or consumed by other systems.</p>
<p>See <a href="#CHDFDBHB">"About Publishing Web Services"</a>.</p>
</li>
<li>
<p>Calling Web services that expose functionality created outside of your Oracle Warehouse Builder ETL design.</p>
<p>See <a href="#CHDJICFH">"About Consuming Web Services"</a>.</p>
</li>
</ul>
<p>These two areas of functionality enable Oracle Warehouse Builder-based designs to participate fully in SOA-based solutions.</p>
<div class="sect3"><!-- infolevel="all" infotype="General" --><a id="sthref1633"></a>
<h4 class="sect3">About Defining Web Services</h4>
<p>Web services are defined within an application server module in the Design Center. An Application Server module is associated with the location to which the Web services are deployed. It contains Web services and Web service packages. Web service packages are primarily used to group related Web services and contain a set of Web services.</p>
<p>Use the Application Servers node in the Projects Navigator to define Web services based on existing Oracle Warehouse Builder objects. Use the Public Application Servers node in the Globals Navigator to define public Web services.</p>
</div>
<!-- class="sect3" -->
<a id="CHDFDBHB"></a>
<div class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">About <a id="sthref1634"></a><a id="sthref1635"></a>Publishing Web Services</h4>
<p>The process of making ETL processes designed using Oracle Warehouse Builder available to other application developers in the form of Web services is referred to as publishing Web services. To publish a Web service, you must create a WSDL file that contains information about your Web service and make this WSDL file available for remote access.</p>
<p>When you use Oracle Warehouse Builder to publish Web services, you must select the object whose functionality you want to publish as a Web service. The code generator generates the required WSDL file.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#BABBAFHH">"Publishing Oracle Warehouse Builder Objects as Web Services"</a>.</div>
</div>
<!-- class="sect3" -->
<a id="CHDJICFH"></a>
<div class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">About <a id="sthref1636"></a><a id="sthref1637"></a>Consuming Web Services</h4>
<p>The process of using Web services that are made available remotely by other application developers in your ETL designs is called consuming Web services. To consume a Web service, you must know the location of the WSDL file of the Web service. You can then make a request to the Web service to perform the required task.</p>
<p>Before you consume remote Web services in your ETL designs, you must import the Web service into Oracle Warehouse Builder.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="#BABGDJHB">"Using Web Services in Mappings"</a></p>
</li>
<li>
<p><a href="#BABEFDEB">"Using Web Services as Activities in Process Flows"</a></p>
</li>
</ul>
</div>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<div class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref1638"></a>
<h3 class="sect2">About Public <a id="sthref1639"></a><a id="sthref1640"></a>Web Services</h3>
<p>Public Web services are accessible across the workspace in which they are defined and are not limited to a particular project. Public Web services are created under the Public Application Servers node of the Globals Navigator.</p>
<p>Public Web services can only be based on URLs, not on Oracle Warehouse Builder objects. Creating public Web services enables you to create Web services based on existing WSDL files.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#BABHFEDG">"Creating Web Services Based on a URL"</a> for more information about creating public Web services.</div>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="BABBAFHH"></a><a id="WBETL16002"></a>
<div class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Publishing Oracle Warehouse Builder Objects <a id="sthref1641"></a>as Web Services</h2>
<p>You can make ETL processes defined using certain Oracle Warehouse Builder objects available to other application developers by publishing these objects as Web services. After you publish an Oracle Warehouse Builder object as a Web service, other developers can remotely access the Web service and use the functionality defined in this object. Because Web services use open, industry-standard mechanisms, the developers need not install Oracle Warehouse Builder or be familiar with how it works.</p>
<p>You can create Web services based on the following Oracle Warehouse Builder objects:</p>
<ul>
<li>
<p>Mappings, including Code Template (CT) mappings</p>
</li>
<li>
<p>Process flows</p>
</li>
<li>
<p>Transformations</p>
</li>
<li>
<p>Data auditors</p>
</li>
<li>
<p>Table or module for Change Data Capture</p>
</li>
</ul>
<p class="subhead1"><a id="sthref1642"></a>Methods of Creating Web Services Based on Oracle Warehouse Builder Objects</p>
<p>Use one of the following methods to create Web services based on Oracle Warehouse Builder objects.</p>
<ul>
<li>
<p>Publish Oracle Warehouse Builder objects as Web services.</p>
<p>See <a href="#CHDECHFD">"Steps to Publish Oracle Warehouse Builder Objects as Web Services"</a>.</p>
</li>
<li>
<p>Define a Web service using the Create Web Service Wizard. Then generate and deploy the Web service.</p>
<p>See <a href="#CHDCCDGB">"Steps to Create Web Services Based on Oracle Warehouse Builder Objects"</a> for information about creating Web services.</p>
</li>
</ul>
<p>You can also publish Web services that are based on URLs as described in <a href="#CHDGDDGF">"Steps to Publish Web Services Based on a URL"</a>.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
During the lifetime of the data warehouse, the definitions of the object on which a Web service is based can change. To propagate these changes to the Web service, redeploy the Web service using the steps described in <a href="#BABCCGFI">"Deploying Web Services"</a>.
<p>When a Web service that is used in a process flow is modified and redeployed, ensure that you synchronize the Web service as described in <a href="#BABFFDFF">"Synchronizing Web Service Activities with Their Referenced Web Services"</a>.</p>
</div>
<p class="subhead1"><a id="sthref1643"></a>Supported Versions for Web Services</p>
<p><a href="#BABIDDBH">Table 16-1</a> lists the versions of standards and products supported by Oracle Warehouse Builder.</p>
<div class="tblformal">
<p class="titleintable"><a id="sthref1644"></a><a id="BABIDDBH"></a>Table 16-1 Supported Versions of Standards and Products for Web Services</p>
<table class="cellalignment2975" title="Supported Versions of Standards and Products for Web Services" summary="This table lists the supported versions of products used by web services." dir="ltr">
<thead>
<tr class="cellalignment2969">
<th class="cellalignment2976" id="r1c1-t7">Standard or Product</th>
<th class="cellalignment2976" id="r1c2-t7">Version</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2969">
<td class="cellalignment2977" id="r2c1-t7" headers="r1c1-t7">
<p>WSDL</p>
</td>
<td class="cellalignment2977" headers="r2c1-t7 r1c2-t7">
<p>1.1</p>
</td>
</tr>
<tr class="cellalignment2969">
<td class="cellalignment2977" id="r3c1-t7" headers="r1c1-t7">
<p>SOAP</p>
</td>
<td class="cellalignment2977" headers="r3c1-t7 r1c2-t7">
<p>1.1, 1.2</p>
</td>
</tr>
<tr class="cellalignment2969">
<td class="cellalignment2977" id="r4c1-t7" headers="r1c1-t7">
<p>OC4J standalone</p>
</td>
<td class="cellalignment2977" headers="r4c1-t7 r1c2-t7">
<p>10<span class="italic">g</span> and later</p>
</td>
</tr>
<tr class="cellalignment2969">
<td class="cellalignment2977" id="r5c1-t7" headers="r1c1-t7">
<p>Oracle Application Server</p>
</td>
<td class="cellalignment2977" headers="r5c1-t7 r1c2-t7">
<p>10<span class="italic">g</span> and later</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<p class="subhead1"><a id="CHDECHFD"></a>Steps to Publish Oracle Warehouse Builder Objects as Web Services</p>
<p>You can quickly publish an Oracle Warehouse Builder object as a Web service from the Projects Navigator. Right-click the object (such as mapping, process flow, data auditor, or transformation) to publish as a Web service and select <span class="bold">Publish as Web Service</span>. The Select Application Server or Web Service Package dialog box is displayed containing the existing application server modules and Web service packages. Select the application server module or Web service package to which the object should be published as a Web service. Oracle Warehouse Builder creates the Web service based on the selected object under the application server module or Web service package, and then publishes the Web service (deploys the Web service to the application server).</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#CHDCJEEI">"Example: Publishing Mappings as Web Services"</a> for an example of publishing Oracle Warehouse Builder objects as Web services.</div>
<p class="subhead1"><a id="CHDCCDGB"></a>Steps to Create Web Services Based on Oracle Warehouse Builder Objects</p>
<p>Use the following steps to publish Web services that are based on Oracle Warehouse Builder objects.</p>
<ol>
<li>
<p>If you have not done so, in the Projects Navigator, create an Application Server module and its associated location. An Application Server module is a container for a set of Web services and Web service packages.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink WBDOD10671" href="../../owb.112/e10582/web_services.htm#WBDOD10671"><span class="italic">Oracle Warehouse Builder Sources and Targets Guide</span></a> for more information about creating Application Server modules.</div>
</li>
<li>
<p>Create a Web service as described in <a href="#BABDBCHH">"Creating Web Services Based on Oracle Warehouse Builder Objects"</a>.</p>
</li>
<li>
<p>Validate the Web service as described in <a href="#BABDBEBJ">"Validating Web Services"</a>.</p>
</li>
<li>
<p>Generate the Web service as described in <a href="#BABIGFFC">"Generating Web Services"</a>.</p>
</li>
<li>
<p>Deploy the Web service as described in <a href="#BABCCGFI">"Deploying Web Services"</a>.</p>
</li>
</ol>
<p>You can use the functionality defined in the Web service by executing the Web service as described in <a href="#BABIBBBD">"Executing Web Services"</a>.</p>
<p class="subhead1"><a id="CHDGDDGF"></a>Steps to Publish Web Services Based on a URL</p>
<p>Use the following steps to publish Web services that are based on a URL.</p>
<ol>
<li>
<p>If you have not done so, in the Globals Navigator, create a public application server module, under the Public Application Servers node, and its associated location. A public application server module is a container for a set of Web services.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink WBDOD10671" href="../../owb.112/e10582/web_services.htm#WBDOD10671"><span class="italic">Oracle Warehouse Builder Sources and Targets Guide</span></a> for more information about creating public application server modules.</div>
</li>
<li>
<p>Create a Web service as described in <a href="#BABHFEDG">"Creating Web Services Based on a URL"</a>.</p>
</li>
<li>
<p>Validate the Web service as described in <a href="#BABDBEBJ">"Validating Web Services"</a>.</p>
</li>
<li>
<p>Generate the Web service as described in <a href="#BABIGFFC">"Generating Web Services"</a>.</p>
</li>
<li>
<p>Deploy the Web service as described in <a href="#BABCCGFI">"Deploying Web Services"</a>.</p>
</li>
</ol>
<div class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref1645"></a>
<h3 class="sect2">Creating Web <a id="sthref1646"></a><a id="sthref1647"></a>Service Packages</h3>
<p>A Web service package is a container for a set of Web services. Use Web service packages to group a set of related Web services. A Web service package does not have any location associated with it and uses the same location details of the Application Server module that contains it.</p>
<p>You can create Web service packages only in the Projects Navigator and not in the Globals Navigator.</p>
<p><span class="bold">To create a Web service package:</span></p>
<ol>
<li>
<p>Expand the project node under which you want to create a Web service package.</p>
</li>
<li>
<p>If you have not done so, create an application server module to contain the Web service package.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink WBDOD10671" href="../../owb.112/e10582/web_services.htm#WBDOD10671"><span class="italic">Oracle Warehouse Builder Sources and Targets Guide</span></a> for more information about creating application server modules.</div>
</li>
<li>
<p>Expand the application server node under which you want to create the Web service package, right-click Web Service Packages, and then select <span class="bold">New Web Service Package</span>.</p>
<p>The Create Web Service Package dialog box is displayed.</p>
</li>
<li>
<p>Enter the following details in the Create Web Service Package dialog box.</p>
<ul>
<li>
<p><span class="bold">Name:</span> The name of the Web service package</p>
</li>
<li>
<p><span class="bold">Description:</span> An optional description for the Web service package</p>
</li>
</ul>
</li>
</ol>
</div>
<!-- class="sect2" -->
<a id="BABDBCHH"></a>
<div class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Creating Web <a id="sthref1648"></a><a id="sthref1649"></a>Services Based on Oracle Warehouse Builder Objects</h3>
<p>Use the Projects Navigator to create Web services based on Oracle Warehouse Builder objects.</p>
<p><span class="bold">To create a Web service based on an Oracle Warehouse Builder object:</span></p>
<ol>
<li>
<p>In the Projects Navigator, expand the project node and then the application server node under which you want to create a Web service.</p>
</li>
<li>
<p>Right-click the Web Services node and select <span class="bold">New Web Service</span>.</p>
<p>To create a Web service under a Web service package, in the Projects Navigator, right-click the Web service package and select <span class="bold">New Web Service</span>.</p>
<p>The Create Web Service Wizard is displayed.</p>
</li>
<li>
<p>On the Welcome page of the wizard, click <span class="bold">Next</span>.</p>
</li>
<li>
<p>On the Name and Description page, provide details as described in <a href="#BABFCGEI">"Naming the Web Service"</a> and click <span class="bold">Next</span>.</p>
</li>
<li>
<p>On the Implementation page, provide details as described in <a href="#BABIFGEE">"Defining the Web Service Implementation"</a> and click <span class="bold">Next</span>.</p>
</li>
<li>
<p>On the Review Specification page, review the details that you entered in the wizard. To modify any values, click <span class="bold">Back</span>. To complete the definition of the Web service, click <span class="bold">Finish</span>.</p>
<p>Click <span class="bold">View Source</span> to view the WSDL code that is generated by Oracle Warehouse Builder to implement this Web service.</p>
</li>
</ol>
<p>The Web service is created and added to the navigator tree.</p>
<p>Alternatively, you can quickly create a Web service by right-clicking the object based on which you want to create a Web service and selecting <span class="bold">Create Web Service</span>. The Select Application Server or Web Service Package dialog box is displayed. Select the and click <span class="bold">OK</span>. The Web service is created and added under the application server node you selected.</p>
<p class="subhead2"><a id="sthref1650"></a>Example: WSDL File for a Web Service</p>
<p>The following is an example of a WSDL file created for a Web service.</p>
<pre>
&lt;definitions
     name="HttpSoap11"
     targetNamespace="http://dbWebService.packaging.sdk.jrt.wh.oracle/"
     xmlns="http://schemas.xmlsoap.org/wsdl/"
     xmlns:tns="http://dbWebService.packaging.sdk.jrt.wh.oracle/"
     xmlns:mime="http://http://schemas.xmlsoap.org/wsdl/mime/"
     xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/"
     xmlns:xsd="http://www.w3.org/2001/XMLSchema"
     xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"
    &gt;
    &lt;types&gt;
    &lt;/types&gt;
    &lt;message name="FUNCTION_TARGETInput"&gt;
        &lt;part name="P1" type="xsd:string"/&gt;
        &lt;part name="P2" type="xsd:string"/&gt;
    &lt;/message&gt;
...
...
...
</pre>
<a id="BABFCGEI"></a>
<div class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Naming the Web Service</h4>
<p>Use the Name and Description page to describe the Web service. Provide the following information on this page:</p>
<p><span class="bold">Name:</span> The name of the Web service. The name should conform to Oracle Warehouse Builder naming standards.</p>
<p><span class="bold">Description:</span> An optional description for the Web service.</p>
</div>
<!-- class="sect3" -->
<a id="BABIFGEE"></a>
<div class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Defining the Web Service Implementation</h4>
<p>Use the Implementation page to select Oracle Warehouse Builder object on which the Web service should be based.</p>
<p>Select one of the following options to create a Web service:</p>
<ul>
<li>
<p>Create from a mapping</p>
</li>
<li>
<p>Create from a process flow</p>
</li>
<li>
<p>Create from a transformation</p>
</li>
<li>
<p>Create from a data auditor</p>
</li>
<li>
<p>Create from a table or module used for Change Data Capture</p>
</li>
</ul>
<p>Based on the option that you select, the text area below the options displays the available objects on which you can base the Web service. Select Oracle Warehouse Builder object from this text area.</p>
<p>When you create a Web service based on a CT mapping, if the agent associated with the Web service is different from the agent associated with the Code Template mapping, a warning is displayed during validation. You can still generate, deploy, and run such a Web service. However, in some cases, the execution may fail.</p>
<p>While creating a Web service based on a CT mapping, it is recommended that the Web service use the same agent as the Code Template mapping.</p>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="BABDBEBJ"></a>
<div class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Validating <a id="sthref1651"></a><a id="sthref1652"></a>Web Services</h3>
<p>When you validate a Web service, Oracle Warehouse Builder verifies the metadata definitions and configuration parameters to ensure that they are valid according to the rules defined by Oracle Warehouse Builder. When you validate a Web service, the WSDL file associated with the Web service is validated against the W3C WSDL schema. Successful validation ensures that code can be generated to deploy the Web service.</p>
<p>To validate a Web service, select the Web service in the Design Center and click <span class="bold">Validate</span> on the toolbar. Or, right-click the Web service in the Design Center, and select <span class="bold">Validate</span>.</p>
<p>You can also validate an application server module or a Web service package. This validates all the Web services contained in the application server module or Web service package.</p>
</div>
<!-- class="sect2" -->
<a id="BABIGFFC"></a>
<div class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Generating <a id="sthref1653"></a><a id="sthref1654"></a>Web Services</h3>
<p>Generating Web services creates the code required to deploy the Web service to the associated OC4J or Oracle Application Server location. When you generate a Web service, Oracle Warehouse Builder creates a corresponding WSDL file for each Web service. For Web services based on Oracle Warehouse Builder objects, an <code>.ear</code> file is also generated. For Web service packages, one <code>.ear</code> file is generated for each Web service.</p>
<p>The generated files are stored in a default location on the file system on which the Design client is installed. You cannot view or edit these generated files.</p>
<p>To generate a Web service, select the Web service and click <span class="bold">Generate</span> on the toolbar. Or right-click the Web service and select <span class="bold">Generate</span>. You can also generate an application server module or a Web service package, to generate code concurrently for all the Web services contained in the application server module or Web service package.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
You cannot generate a public Web service. However, you can validate a public Web service.</div>
</div>
<!-- class="sect2" -->
<a id="BABCCGFI"></a>
<div class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Deploying <a id="sthref1655"></a><a id="sthref1656"></a>Web Services</h3>
<p>Deploying Web services uses the scripts created during generation to create the Web service in the agent location associated with the application server module containing the Web service.</p>
<p>When you deploy a Web service, the <code>.ear</code> file corresponding to this Web service is located in the <code><span class="codeinlineitalic">OWB_HOME</span></code><code>/owb/jrt/applications</code> directory. This directory also contains a separate folder for each Web service deployed to the OC4J instance that is embedded in Oracle Warehouse Builder.</p>
<p>To deploy Web services, you need a Control Center Agent (CCA) and an OC4J instance.</p>
<p>You can deploy <a id="sthref1657"></a>Web services to:</p>
<ul>
<li>
<p>OC4J standalone instance</p>
<p>When you install Oracle Warehouse Builder, an OC4J instance is installed with it. You can deploy Web services to this OC4J instance or to an OC4J instance that is part of an Oracle Application Server instance.</p>
</li>
<li>
<p>Oracle Application Server</p>
<p>You can deploy Web services to any Oracle Application Server. Before you do so, create a URI location that points to this Oracle Application Server instance. For more information about creating a location related to an Oracle Application Server instance, see <a class="olink WBDOD10671" href="../../owb.112/e10582/web_services.htm#WBDOD10671"><span class="italic">Oracle Warehouse Builder Sources and Targets Guide</span></a>.</p>
</li>
</ul>
<p>You can deploy Web services either from the Design Center or from the Control Center Manager.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
You cannot deploy a public Web service.</div>
<p class="subhead2"><a id="sthref1658"></a>Prerequisites <a id="sthref1659"></a><a id="sthref1660"></a>for Deploying Web Services</p>
<p>Before you deploy a Web service based on an Oracle Warehouse Builder object, ensure that you:</p>
<ul>
<li>
<p>Deploy Oracle Warehouse Builder objects on which the Web service is based</p>
</li>
<li>
<p>Start the Control Center Agent</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="sap_km_mappings.htm#BABECFDC">"Starting the Control Center Agent (CCA)"</a> for information about starting the Control Center Agent.</div>
</li>
</ul>
<div class="sect3"><!-- infolevel="all" infotype="General" --><a id="sthref1661"></a>
<h4 class="sect3">Deploying Web Services Using the Control Center Manager</h4>
<p>From the Design Center, open the Control Center by selecting <span class="bold">Control Center Manager</span> from the Tools menu. In the Control Center Manager, expand the node that represents the location that contains the Web service. Select the Web service, set the Default Actions to Create, and click <span class="bold">Deploy</span> on the toolbar.</p>
</div>
<!-- class="sect3" -->
<div class="sect3"><!-- infolevel="all" infotype="General" --><a id="sthref1662"></a>
<h4 class="sect3">Deploying Web Services Using the Design Center</h4>
<p>From the Projects Navigator, right-click the Web service and select <span class="bold">Deploy</span>. Or select the Web service and click <span class="bold">Deploy</span> on the toolbar.</p>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="BABHFEDG"></a><a id="WBETL16003"></a>
<div class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Creating <a id="sthref1663"></a><a id="sthref1664"></a>Web Services Based on a URL</h2>
<p>Oracle Warehouse Builder enables you to create public Web services from a URL. Public Web services are ones that you define under the Public Application Servers node of the Globals Navigator. You use public Web services primarily to leverage existing functionality, available as Web services, in ETL objects. Before you use existing Web services (local or remote) in your ETL designs, you must create a public Web service in Oracle Warehouse Builder that represents the functionality in the Web service.</p>
<p>To create a Web service from a URL, you need a URL pointing to the valid WSDL file. The URL can point to a WSDL file on the local file system or in a remote location. If the WSDL file is on a remote computer, then you must specify the proxy settings used to access the remote location.</p>
<p class="subhead2"><a id="sthref1665"></a>Proxy Settings for <a id="sthref1666"></a><a id="sthref1667"></a>Creating Web Services Based on External URLs</p>
<p>When you create a Web service based on an external URL, you must specify the proxy settings that is necessary to access the external URL. Use the following steps to set the proxy:</p>
<ol>
<li>
<p>In the Design Center, select <span class="bold">Preferences</span> from the Tools menu.</p>
<p>The Preferences dialog box is displayed.</p>
</li>
<li>
<p>In the navigator tree on the left, select <span class="bold">Web Browser and Proxy</span>.</p>
<p>The Web Browser and Proxy preferences are displayed on the right of the Preferences dialog box.</p>
</li>
<li>
<p>Select <span class="bold">Use HTTP Proxy Server</span> and specify values for the following fields:</p>
<ul>
<li>
<p><span class="bold">Host Name:</span> Represents the name of the proxy server</p>
</li>
<li>
<p><span class="bold">Port Number:</span> Represents the port number of the proxy server</p>
</li>
<li>
<p><span class="bold">Exceptions:</span> Represents the addresses for which the proxy server is bypassed. Use an asterisk (*) as a wildcard and separate multiple entries using a vertical bar (|).</p>
</li>
</ul>
</li>
<li>
<p>If your proxy server requires authentication, select <span class="bold">Proxy Server Requires Authentication</span>. Enter the credentials using the User Name and Password fields.</p>
</li>
<li>
<p>Click <span class="bold">Test Proxy</span> to test your proxy settings.</p>
</li>
</ol>
<p class="subhead2"><a id="sthref1668"></a>Steps to Create a Web Services Based on a URL</p>
<p>Use the following steps to create a Web Service based on a URL.</p>
<ol>
<li>
<p>In the Globals Navigator of the Design Center, expand the application server node under which you want to create a Web service.</p>
</li>
<li>
<p>Right-click the application server node and select <span class="bold">New Web Service</span>.</p>
<p>The Create Web Service Wizard is displayed.</p>
</li>
<li>
<p>On the Welcome page of the wizard, click <span class="bold">Next</span>.</p>
</li>
<li>
<p>On the Name and Description page, provide details as described in <a href="#BABGIJID">"Naming and Describing a Public Web Service"</a> and click <span class="bold">Next</span>.</p>
</li>
<li>
<p>On the Review Specification page, review the details that you entered in the wizard. To modify any values, click <span class="bold">Back</span>. To complete the definition of the Web service, click <span class="bold">Finish</span>.</p>
<p>Click <span class="bold">View Source</span> to view the WSDL code used to implement this Web service.</p>
</li>
</ol>
<p>The Web service is created and added to the navigator tree.</p>
<a id="BABGIJID"></a>
<div class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Naming and Describing a Public Web Service</h3>
<p>Use the Name and Description page to specify the location of the WSDL file that acts as a basis for the Web service. This page contains the following fields:</p>
<ul>
<li>
<p><span class="bold">Name:</span> Represents the name of the Web service. The name is derived automatically from the WSDL file and you can edit it, if required.</p>
</li>
<li>
<p><span class="bold">WSDL File Location:</span> Click <span class="bold">Browse</span> to specify the path of the WSDL file. The URL address can be the path of a local file or the URL address of a remote accessible across a network. The WSDL file contains the definitions of the existing Web service.</p>
<p>This property is displayed only when you use the Globals Navigator to create a Web service based on a URL.</p>
</li>
<li>
<p><span class="bold">Description:</span> An optional description for the Web service.</p>
</li>
</ul>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="BABIBBBD"></a><a id="WBETL16004"></a>
<div class="sect1">
<h2 class="sect1">Executing Web Services</h2>
<p>Executing a Web service enables you to run the functionality defined in the Web service. You can run a Web service either from the Control Center Manager or from a Web browser.</p>
<p class="subhead2"><a id="BABCGAEF"></a>Prerequisites for Executing Web Services</p>
<p>To run Web services, you must use a J2EE user who is granted the <code>OWB_J2EE_EXECUTOR</code> role. When you use the OC4J server embedded within Oracle Warehouse Builder, this role is created for you.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
For Web services that contain CT mappings, if the Web service execution is likely to take more than a day, it is recommended that you split the job into smaller ones. The default transaction timeout for the OC4J is set to one day. If your job execution takes more than a day, then the execution times out and unexpected errors are encountered.</div>
<p>Use one of the following methods to assign this role to a J2EE user:</p>
<ul>
<li>
<p>Manage J2EE User Accounts option in the Repository Assistant</p>
</li>
<li>
<p>J2EE User Management option under the Tools menu of the Design Center</p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="#CHDCEHBG">"Using Secure Sockets Layer (SSL) to Access Web Services Securely"</a> for more information about J2EE roles</p>
</li>
<li>
<p><a class="olink WBINS" href="../e17130/toc.htm"><span class="italic">Oracle Warehouse Builder Installation and Administration Guide</span></a> for more information about managing J2EE users.</p>
</li>
</ul>
</div>
<a id="WBETL16018"></a>
<div class="sect2"><a id="sthref1669"></a>
<h3 class="sect2">Using the <a id="sthref1670"></a><a id="sthref1671"></a>Control Center Manager to Run Web Services</h3>
<p><span class="bold">To run a Web service using the Control Center Manager:</span></p>
<ol>
<li>
<p>In the Control Center Manager, expand the location node that contains the Web service, select the Web service and click <span class="bold">Start</span> on the toolbar. Or right-click the Web service and select <span class="bold">Start</span>.</p>
<p>The Select Operations dialog box is displayed. The Operations list contains the list of operations that you can perform using the Web service.</p>
<p>If your Web service contains only one operation, the Select Operations dialog box is not displayed.</p>
</li>
<li>
<p>In the Operations list, select the operation to perform and click <span class="bold">OK</span>.</p>
<p>The Input Parameters dialog box that is used to provide the execution parameters for the Web service is displayed.</p>
</li>
<li>
<p>In the Input Parameters dialog box, enter values for the displayed parameters.</p>
<p>The parameters listed depend on the type of object on which the Web service is based. For example, Web services based on PL/SQL mappings, process flows, and data auditors have the CUSTOM_PARAMS and SYSTEM_PARAMS parameters. Web services based on Code CT mappings contain the parameters OWB_PARAMS.</p>
<ul>
<li>
<p><span class="bold">CUSTOM_PARAMS:</span> Represents the values for the mapping input parameters used in the Web service.</p>
<p>For example, when you create a Web service based on a mapping and the mapping requires input parameters, use the CUSTOM_PARAMS field to enter values for these input parameters. Use commas to separate multiple values.</p>
</li>
<li>
<p><span class="bold">SYSTEM_PARAMS:</span> Represents the values for mapping execution parameters, if any, such as Bulk Size, Audit Level, Operating Mode, Maximum Number of Errors, and Commit Frequency. When you have multiple system parameters, use a comma to separate each parameter.</p>
<p>For example, OPERATING_MODE=SET_BASED,AUDIT_LEVEL=NONE.</p>
</li>
<li>
<p><span class="bold">OWB_PARAMS:</span> Represents the parameters of the CT mapping on which the Web service is based.</p>
</li>
</ul>
</li>
<li>
<p>Click <span class="bold">OK</span>.</p>
</li>
</ol>
<p>The Web service is run and the results of the execution are displayed in a new log window in the Design Center. The details displayed include the number of rows selected, inserted, updated, or deleted and any errors or warnings that occurred.</p>
</div>
<!-- class="sect2" -->
<a id="BABJHABB"></a>
<div class="sect2">
<h3 class="sect2">Using a Browser to <a id="sthref1672"></a><a id="sthref1673"></a>Run Web Services</h3>
<p>Use any browser to run Web services that were deployed to either the OC4J server embedded in Oracle Warehouse Builder or to other OC4J servers.</p>
<p>When you use the OC4J server embedded in Oracle Warehouse Builder to access Web services, all the prerequisites for Web service security are provided. You must provide basic authentication before you can run the Web service.</p>
<p><span class="bold">To run Web services using a browser:</span></p>
<ol>
<li>
<p>Ensure that the prerequisites, as described in <a href="#BABCGAEF">"Prerequisites for Executing Web Services"</a>, are satisfied.</p>
</li>
<li>
<p>(Optional) While executing Web services that were deployed to an OC4J server other than the one installed with Oracle Warehouse Builder, perform the steps listed in <a href="#CHDDABHG">"Setting Up Secure Access on External OC4J Servers"</a>.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
You may encounter errors while executing Web services that were not deployed to the OC4J server embedded in Oracle Warehouse Builder. See <a href="errors_trouble.htm#BABCEFBG">"Error Executing Web Services from the Secure Web Site"</a> for information about resolving these errors.</div>
</li>
<li>
<p>Open a Web browser, specify the following URL in the address bar, and press the Enter key.</p>
<p><code>http://</code><code><span class="codeinlineitalic">host_name</span></code>:8888/<code><span class="codeinlineitalic">jndi_name</span></code><code>/webservice</code></p>
<p>To run the Web service securely, use the following URL:</p>
<p><code>https://</code><code><span class="codeinlineitalic">host_name</span></code>:4443/<code><span class="codeinlineitalic">jndi_name</span></code><code>/webservice</code></p>
<p>The endpoint page for the Web service is displayed. If you use the AGENTWEBSERVICE Web service provided by Oracle Warehouse Builder, then the AgentWebService Endpoint page is displayed.</p>
<p>Here, <code><span class="codeinlineitalic">host_name</span></code> represents the host name of the computer on which the Web service is stored, and <code><span class="codeinlineitalic">jndi_name</span></code> is the name of the <code>.ear</code> file generated for the Web service. To run Web services using the AGENTWEBSERVICE installed with Oracle Warehouse Builder, use jrt as the <code><span class="codeinlineitalic">jndi_name</span></code>.</p>
<p>The default port numbers used for the Web service are 8888 and 4443. You can use different port numbers.</p>
</li>
<li>
<p>Follow the steps listed in <a href="#BABCHDIA">"Performing Operations on Web Services Using a Browser"</a> to run the Web service.</p>
</li>
</ol>
</div>
<!-- class="sect2" -->
<a id="BABCHDIA"></a>
<div class="sect2">
<h3 class="sect2">Performing Operations on Web Services Using a Browser</h3>
<p>The Web service AGENTWEBSERVICE, under the AGENT_SERVER node of the Globals Navigator, is an embedded Web service that exposes the Agent server installed with Oracle Warehouse Builder as a Web service. The steps listed in this section are performed using the AgentWebService Endpoint page, which is the interface corresponding to the AGENTWEBSERVICE. This Web service is started automatically when the Control Center Agent (CCA) is started. However, you can use other Web service endpoints to perform operations defined by Web services.</p>
<ol>
<li>
<p>Select the operation to perform on the Web service and provide the information required to perform the operation.</p>
<p>Following are some operations that you can select when you use AGENTWEBSERVICE.</p>
<ul>
<li>
<p>isDeployed</p>
<p>See <a href="#CHDHHFFE">"Determining If a Web Service or Application Was Deployed to an OC4J Server"</a></p>
</li>
<li>
<p>runCCJob</p>
<p>See <a href="#CHDCJBJC">"Executing a Control Center Job"</a></p>
</li>
<li>
<p>abortJob</p>
<p>See <a href="#CHDJADEH">"Terminating an Execution Job"</a></p>
</li>
<li>
<p>invokeEAR</p>
<p>See <a href="#CHDBBGAE">"Running Deployed Applications"</a></p>
</li>
</ul>
</li>
<li>
<p>Expand the Show Transport Info node and select <span class="bold">Enable</span> to the right of the label HTTP Authentication.</p>
</li>
<li>
<p>In the Transport Info section, enter details in the following fields:</p>
<ul>
<li>
<p><span class="bold">Username:</span> Name of a J2EE user, with the <code>OWB_J2EE_OPERATOR</code> role, that is used to run the Web service</p>
</li>
<li>
<p><span class="bold">Password:</span> Password for the J2EE user that you specified in the Username field</p>
</li>
</ul>
</li>
<li>
<p>Click <span class="bold">Invoke</span>.</p>
<p>The Test Result page containing the results of the operation is displayed.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
Sometimes, after you enter the credentials and click <span class="bold">Invoke</span>, you may be prompted for credentials. Reenter the credentials of the J2EE that you specified in the Transport Info section.</div>
</li>
</ol>
<a id="CHDHHFFE"></a>
<div class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Determining If a Web Service or Application Was Deployed to an OC4J Server</h4>
<p>The isDeployed operation enables you to determine if a Web service or application is deployed to an OC4J server.</p>
<p>Use the following steps to determine if a Web service was deployed to an OC4J Server.</p>
<ol>
<li>
<p>On the AgentWebService Endpoint page, select <span class="bold">isDeployed</span> in the Operation field.</p>
</li>
<li>
<p>In the jndiName field, enter the name of the application.</p>
<p>Use the jndi_name or the fully qualified application name. To determine this name, check the <code><span class="codeinlineitalic">OWB_HOME</span></code><code>/owb/jrt/applications</code> directory.</p>
</li>
</ol>
<p>If the Web service was deployed to the OC4J instance, the XML code on the Test Result page displays True.</p>
</div>
<!-- class="sect3" -->
<a id="CHDCJBJC"></a>
<div class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Executing a Control Center Job</h4>
<p>The runCCJob operation enables you to run a Control Center job. Jobs include Web services defined using Oracle Warehouse Builder, mappings, and process flows.</p>
<p>Use the following steps to run a Control Center job.</p>
<ol>
<li>
<p>On the AgentWebService Endpoint page, select runCCJob in the Operation field.</p>
</li>
<li>
<p>Provide information in the following fields:</p>
<ul>
<li>
<p><span class="bold">username:</span> Represents the name of the workspace user executing the Web service.</p>
</li>
<li>
<p><span class="bold">password:</span> Represents the password of the user specified in the username field.</p>
</li>
<li>
<p><span class="bold">workspace:</span> Represents the name of the workspace in which the Web service execution job should be run. If the user executing the Web service is not the workspace owner, then prefix the workspace name with the username (for example, test_user.my_workspace.)</p>
</li>
<li>
<p><span class="bold">location:</span> Represents the physical name of the location to which the task is deployed.</p>
</li>
<li>
<p><span class="bold">task_type:</span> Represents the type of task. Use the following values:</p>
<p>PLSQL - for PL/SQL mappings</p>
<p>SQL_LOADER - for SQL*Loader mappings</p>
<p>PROCESS - for process flows</p>
<p>SAP - for SAP mappings</p>
<p>DATA_AUDITOR - for Oracle Warehouse Builder data auditor mappings</p>
</li>
<li>
<p><span class="bold">task_name:</span> Represents the physical name of the deployed object. For example, MY_MAPPING. For process flows, qualify the process flow name with the name of the process flow package to which it belongs (for example, <code>MY_PROCESS_FLOW_PACK. MY_PROCESS_FLOW</code>).</p>
</li>
<li>
<p><span class="bold">connection_string:</span> Represents the connection information of the computer that has the Control Center Manager.</p>
</li>
<li>
<p><span class="bold">system_params:</span> Represents the mapping execution parameters of the mapping, if any, such as Bulk Size or Commit Frequency. When you have multiple system parameters, use a comma to separate each parameter.</p>
<p>For example, OPERATING_MODE=SET_BASED,AUDIT_LEVEL=NONE.</p>
</li>
<li>
<p><span class="bold">custom_params:</span> Represents the input parameters for the mapping.</p>
</li>
</ul>
</li>
</ol>
<p>The runCCJob operation returns 1 if the execution was successful, 2 if there were warnings, and 3 if there were errors in the execution.</p>
</div>
<!-- class="sect3" -->
<a id="CHDJADEH"></a>
<div class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Terminating an Execution Job</h4>
<p>The abortJob operation enables you to terminate a particular job that was submitted to the Control Center Manager.</p>
<p>Use the following steps to terminate a particular job.</p>
<ol>
<li>
<p>On the AgentWebService Endpoint page, select abortJob in the Operation field.</p>
</li>
<li>
<p>In the jobID field, enter the Job ID of the Control Center job to terminate.</p>
</li>
<li>
<p>In the timeOut field, enter the value for the time out in milliseconds. Entering a zero in this field indicates that there is no timeout.</p>
</li>
</ol>
<p>A return value of true in the Test Results page indicates that the terminate message was sent to the Control Center Manager.</p>
</div>
<!-- class="sect3" -->
<a id="CHDBBGAE"></a>
<div class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Running Deployed Applications</h4>
<p>The invokeEAR operation enables you to run deployed applications such as Web services and CT mappings.</p>
<p>Use the following steps to run a Web service or CT mapping.</p>
<ol>
<li>
<p>On the AgentWebService Endpoint page, select invokeEAR in the Operation field.</p>
</li>
<li>
<p>In the jndiName field, enter the JNDI name of the Web service.</p>
</li>
<li>
<p>In the soa_params field, enter the values of the mapping execution parameters. Separate each value using a comma.</p>
</li>
<li>
<p>In the owb_params field, enter the values of the input parameters.</p>
</li>
</ol>
<p>The Test Result page contains the Job ID of the Web service execution.</p>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="BABEFDEB"></a><a id="WBETL16005"></a>
<div class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Using Web Services as <a id="sthref1674"></a><a id="sthref1675"></a>Activities in Process Flows</h2>
<p>You can use the functionality defined in a Web service as part of a process flow. The Web service can either be created or imported into Oracle Warehouse Builder. To use Web services in a process flow, use the Web Service activity.</p>
<p>For an example of using Web services in process flows, see <a href="#CHDHCHDE">"Case Study: Using Web Services for Data Integration"</a>.</p>
<div class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref1676"></a>
<h3 class="sect2">Rules for Using Web Services in Process Flows</h3>
<p>In process flows, Oracle Warehouse Builder only supports Web services that conform to the following rules:</p>
<ul>
<li>
<p>Only Web services described through an accessible WSDL file are supported.</p>
</li>
<li>
<p>If the WSDL file contains multiple service, then one service must be nominated.</p>
</li>
<li>
<p>Web services that have basic authentications need a URI location to provide the credentials. You must set the Deployed Location property of the Web Service activity to this URI location.</p>
</li>
<li>
<p>If the Web service contains multiple port then the port must be nominated.</p>
</li>
<li>
<p>The port must use the http transport.</p>
</li>
</ul>
</div>
<!-- class="sect2" -->
<div class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref1677"></a>
<h3 class="sect2">Steps to Use Web Services in Process Flows</h3>
<p><span class="bold">To use a Web service in a process flow:</span></p>
<ol>
<li>
<p>In the Projects Navigator, create a process flow.</p>
<p>For more information about creating process flows, see <a href="design_processflows.htm#i1171059">"Steps for Defining Process Flows"</a>.</p>
</li>
<li>
<p>Add all the activities, except the Web service activity, that are part of the process flow and establish data flows between them.</p>
</li>
<li>
<p>If you are using an external Web service, import the Web service into Oracle Warehouse Builder by creating a public Web service in the Globals Navigator.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#BABHFEDG">"Creating Web Services Based on a URL"</a> for more information about importing Web services.</div>
</li>
<li>
<p>Drag and drop the Web service, either from the Projects Navigator or the Globals Navigator, onto the Process Flow Editor canvas.</p>
<p><span class="italic">or</span></p>
<p>From the Graph menu, select <span class="bold">Available Objects</span>. The Add Available Objects dialog box is displayed. Select the required Web service and click <span class="bold">OK</span>.</p>
<p>The Web Service Operation dialog box is displayed.</p>
</li>
<li>
<p>Select an operation from the available operations of the Web service and click <span class="bold">OK</span>. The selected operation is used in the process flow.</p>
<p>The Web service is added to the Process Flow Editor and its properties are listed in the Structure panel.</p>
<p>The operation in a synchronous Web service has both input and output messages. They are mapped to input or output parameters of the Web Service activity in the process flow.</p>
</li>
<li>
<p>Provide the required input values for the Web service activity properties. Select the property in the Structure panel, and use the Property Inspector to set values.</p>
<p>If the Web service needs authentication, create a URI location and set the Deployed Location property of the Web Service activity to this URI location.</p>
</li>
<li>
<p>Establish data flows to and from the Web Service activity.</p>
</li>
<li>
<p>Generate the process flow and resolve any errors that may occur.</p>
</li>
<li>
<p>Ensure that all Web services that you added to the process flow in the form of Web Service activities are deployed.</p>
</li>
<li>
<p>Deploy the process flow package containing the process flow created in Step 1. Use the Control Center Manager or right-click the process flow package in the Projects Navigator and select <span class="bold">Deploy</span>.</p>
</li>
<li>
<p>Run the process flow. Right-click the process flow in the Projects Navigator and select <span class="bold">Start</span>.</p>
</li>
</ol>
</div>
<!-- class="sect2" -->
<a id="BABFFDFF"></a>
<div class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Synchronizing <a id="sthref1678"></a><a id="sthref1679"></a>Web Service Activities with Their Referenced Web Services</h3>
<p>When the definition of a Web service is modified, you must propagate these changes to all the process flows that consume this Web service.</p>
<p><span class="bold">To synchronize Web services used in process flows:</span></p>
<ol>
<li>
<p>Right-click the process flow that uses the Web service and select <span class="bold">Open</span>.</p>
<p>The Process Flow Editor for this process flow is displayed.</p>
</li>
<li>
<p>Select the Web Service activity that represents the Web service that has changed. From the Edit menu, select <span class="bold">Synchronize</span>.</p>
<p>The Synchronize dialog box is displayed. The object with which the Web service should be synchronized is selected, and you cannot modify this.</p>
</li>
<li>
<p>Specify the Matching Strategy by selecting one of the following matching options: Match By Object Id, Match By Object Position, or Match by Object Name.</p>
<p>For details about these options, click <span class="bold">Help</span>.</p>
</li>
<li>
<p>Specify the Synchronize Strategy by selecting Replace or Merge.</p>
</li>
<li>
<p>Click <span class="bold">OK</span> to synchronize the Web service with the object on which it is based.</p>
</li>
</ol>
<p>The changes made to the Web service are propagated to the Web Service activity that is based on the Web service.</p>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="BABGDJHB"></a><a id="WBETL16006"></a>
<div class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Using <a id="sthref1680"></a><a id="sthref1681"></a>Web Services in Mappings</h2>
<p>Because Web services are essentially functions, Oracle Warehouse Builder leverages the Web services support provided by Oracle Database to enable you to use Web services in mappings (which are PL/SQL packages). Thus, you can leverage functionality present in existing Web services.</p>
<p>Use one of the following methods to create a mapping that uses Web services as sources or targets:</p>
<ul>
<li>
<p>Use the <code>UTL_HTTP</code> package.</p>
</li>
<li>
<p>Use the JPublisher utility to interface SQL to the Web service.</p>
<p>See <a href="#CHDJCHHB">"Steps to Consume a Web Service in a Mapping Using JPublisher"</a>.</p>
</li>
<li>
<p>Use the <code>UTL_DBWS</code> package to consume Web services.</p>
<p>Depending on the version of Oracle Database, you must download and install the DBWS utility to perform these tasks.</p>
</li>
<li>
<p>Use the script <code>use_webservice_in_mapping.tcl</code> located in the <code><span class="codeinlineitalic">OWB_HOME</span></code><code>/owb/misc/mappingWS</code> directory to create an expert that you can use to consume Web services in mapping.</p>
</li>
</ul>
<p class="subhead1"><a id="CHDJCHHB"></a>Steps to Consume a Web Service in a Mapping Using JPublisher</p>
<p>The JPublisher utility translates your object types (which can be Oracle objects, Varrays, nested tables, REFs, or object types) to Java classes and generates accessor methods for each of the object's attributes. JPublisher creates the mapping between object types and Java classes, and between object attribute types and their corresponding Java types.</p>
<p>For PL/SQL packages, JPublisher creates a class containing a wrapper method for each subprogram in the package. Like object methods, the wrapper methods generated for each subprogram are always instance methods, even when the original method is static. The wrapper methods generated by JPublisher provide a convenient way to invoke PL/SQL stored procedures from Java code or to invoke a Java stored procedure from a client Java program.</p>
<ol>
<li>
<p>Use JPublisher to generate table function proxies for the WSDL file and publish PL/SQL wrapper and proxy code.</p>
<p>For example, the following command generates proxies for the Web service available at the URL http://99.22.32.21:9762/services/test_ws?wsdl.</p>
<pre>
jpub -user wh_tgt/wh_tgt_pswd -sysuser system/oracle -dir=test_ws
     -proxywsdl=http://90.22.32.21:9762/services/test_ws?wsdl
     
</pre>
<p>Here, <code>wh_tgt</code> and <code>wh_tgt_pswd</code> are the database credentials for Oracle Warehouse Builder location where the mapping is deployed.</p>
<p>JPublisher generates Java classes and PL/SQL wrappers and loads them into the specified schema (<code>WH_TGT</code>).</p>
</li>
<li>
<p>(Optional) Define PL/SQL code to call the Web service.</p>
<p>This step verifies that the callout to the table function works at the Oracle Database level, without involving Oracle Warehouse Builder.</p>
<p>The following example verifies that the callout to the function called <code>my_func</code> that is part of the package <code>my_pack</code> works correctly:</p>
<pre>
SELECT * FROM TABLE(WH_TGT.MY_PROC.MY_FUNC)
</pre></li>
<li>
<p>Import the Web service metadata, for which you generated table function proxies, into Oracle Warehouse Builder using the Import Metadata Wizard.</p>
<p>The metadata includes user-defined types and PL/SQL packages.</p>
</li>
<li>
<p>Open Oracle Warehouse Builder mapping in which you want to consume the Web service and add a Table Function operator to call the Web service. Perform the following tasks:</p>
<ul>
<li>
<p>In the Table Function Name property of the Table Function operator, enter the name of the generated table function (from Step 1) to add to the mapping.</p>
</li>
<li>
<p>In the INGRP1 group of the Table Function operator, select the type of input accepted by the table function using the Input Parameter Type field.</p>
</li>
</ul>
</li>
<li>
<p>Define the source rows that represent the input to the Web service.</p>
<p>Map the operator that represents the Web service input to the inout group of the Table Function operator.</p>
</li>
<li>
<p>Capture the output of the Web service in a table in the mapping.</p>
<p>Because the Table Function operator returns a collection type as output, use the Expand Object operator, if required, to map the individual out rows to the target table.</p>
</li>
<li>
<p>(Optional) If you set a Web proxy (for example you run behind a corporate firewall), use a Pre-Mapping Process operator that uses the procedure INITIALIZE_PROXY to configure the HTTP proxy.</p>
</li>
<li>
<p>Generate and run the mapping.</p>
</li>
</ol>
</div>
<!-- class="sect1" -->
<a id="CHDCEHBG"></a><a id="WBETL16007"></a>
<div class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Using <a id="sthref1682"></a>Secure Sockets Layer (SSL) to Access Web Services Securely</h2>
<p>Where security is a primary concern, Oracle Warehouse Builder enables you to access Web services in a secure way using the Secure Sockets Layer (SSL). This ensures that messages exchanged between the OC4J server and the Web service are secured.</p>
<p>You can access Web services deployed to both the OC4J server embedded in Oracle Warehouse Builder and to other external OC4J servers securely.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#BABJHABB">"Using a Browser to Run Web Services"</a></div>
<div class="sect2"><a id="sthref1683"></a>
<h3 class="sect2">J2EE Roles for Control Center Agent Security</h3>
<p>Oracle Warehouse Builder provides the following three roles to facilitate Oracle Warehouse Builder Control Center Agent security.</p>
<ul>
<li>
<p><code>OWB_J2EE_EXECUTOR</code>: Enables grantees to run mappings in the Control Center Agent (CCA).</p>
</li>
<li>
<p><code>OWB_J2EE_OPERATOR</code>: Includes the <code>OWB_J2EE_EXECUTOR</code> role and enables grantees to access and manipulate audit information.</p>
</li>
<li>
<p><code>OWB_J2EE_ADMINISTRATOR</code>: Includes the <code>OWB_J2EE_EXECUTOR</code> role and enables grantees to administer OC4J and deploy Oracle Warehouse Builder objects to the Control Center Agent.</p>
</li>
</ul>
</div>
<!-- class="sect2" -->
<a id="CHDDABHG"></a>
<div class="sect2">
<h3 class="sect2">Setting Up <a id="sthref1684"></a>Secure Access on External OC4J Servers</h3>
<p>You can securely access Web services located on other OC4J servers (that are not embedded in Oracle Warehouse Builder). Before you do so, you must set up security on the OC4J server.</p>
<p><span class="bold">Use the following steps to set up secure access on other OC4J servers:</span></p>
<ol>
<li>
<p>Create a key store with an RSA private/public key pair using the keytool utility.</p>
<p>The following example uses the RSA key pair generation algorithm to generate a key store that resides in a file named <code>mykeystore.jks</code> and which has a password of 123456.</p>
<pre>
%keytool -genkey -keylag RSA -keystore mykeystore.jks -storepass 123456
</pre>
<p>The <code>keystore</code> option sets the file name where the keys are stored. The <code>storepass</code> option sets the password for protecting the key store. If you omit the <code>storepass</code> option, then you are prompted for the password.</p>
</li>
<li>
<p>You are prompted to enter a key entry password. In OC4J 10.1.3.x implementations, the key store password must be the same as the key entry password.</p>
<p>The <code>mykeystore.jks</code> file is created in the current directory. The default alias of the key is <code>mykey</code>.</p>
</li>
<li>
<p>If you do not have a <code>secure-web-site.xml</code> file, create one in the following location: <code><span class="codeinlineitalic">OWB_HOME</span></code><code>/j2ee/home/config</code>.</p>
<p>To start, copy whatever content you need from <code>default-web-site.xml</code>. This typically includes the following subelements under the &lt;web-site&gt; element:</p>
<ul>
<li>
<p>&lt;web-app&gt; (for each Web application to secure)</p>
</li>
<li>
<p>&lt;access-log&gt; (for logging; confirm that this specifies an appropriate log file)</p>
</li>
<li>
<p>&lt;default-web-app&gt;</p>
</li>
</ul>
</li>
<li>
<p>Update <code>secure-web-site.xml</code> with the following elements:</p>
<ul>
<li>
<p>Update the web-site element to add secure="true" and to set the port number to some available port. For standalone OC4J, use the HTTP protocol, which is the default setting. To use the default of 443, you must be a super user.</p>
<p>When you set protocol="http" and secure="true", the HTTPS protocol is used.</p>
<p>The following is an example of a &lt;web-site&gt; element.</p>
<pre>
&lt;web-site port="4443" secure="true" protocol="http"
display-name="Default Oracle OAS Containers for J2EE Web Site"&gt;
...
...
&lt;/web-site&gt;
</pre></li>
<li>
<p>Add an entry under the web-site element to define the key store and its password as follows:</p>
<p>&lt;ssl-config keystore="<code><span class="codeinlineitalic">your_keystore</span></code>" keystore-password="<code><span class="codeinlineitalic">your_password</span></code>" /&gt;</p>
<p>Here, <code><span class="codeinlineitalic">your_keystore</span></code> is the path to the key store&mdash;either absolute, or relative to <code><span class="codeinlineitalic">OWB_HOME</span></code><code>/j2ee/home/config</code> (where the Web site XML file is located)&mdash;and <code>your_password</code> is the key store password.</p>
</li>
</ul>
</li>
<li>
<p>Save the changes to <code>secure-web-site.xml</code>.</p>
</li>
<li>
<p>Enable the secure Web site by adding the secure Web site to the <code>server.xml</code> file located in <code><span class="codeinlineitalic">OWB_HOME</span></code><code>/owb/jrt/config</code> directory.</p>
</li>
<li>
<p>Restart the OC4J server to ensure that the previous changes are applied.</p>
</li>
<li>
<p>If they are not yet created, create the <code>OWB_J2EE_EXECUTOR</code>, <code>OWB_J2EE_OPERATOR</code>, and <code>OWB_J2EE_ADMINISTRATOR</code> roles.</p>
<p>See the <code>file system-jazn-data.xml</code> file located in the <code><span class="codeinlineitalic">OWB_HOME</span></code><code>/owb/jrt/config</code> folder.</p>
</li>
<li>
<p>Create the J2EE user used to run Web services and grant the <code>OWB_J2EE_EXECUTOR</code> role to this user.</p>
</li>
</ol>
</div>
<!-- class="sect2" -->
<div class="sect2"><a id="sthref1685"></a>
<h3 class="sect2">Updating the Key Store Password</h3>
<p>For the OC4J server that is embedded in Oracle Warehouse Builder, you are provided with a secure key store for using SSL with Web services. This key store is available in the <code>serverkeystore.jks</code> file in the <code><span class="codeinlineitalic">OWB_HOME</span></code><code>/owb/jrt/config</code> folder.</p>
<p>The default password for this key store is <code>welcome</code>. Use the <code><span class="codeinlineitalic">JAVA_HOME</span></code><code>/bin/keytool</code> to change the password. Or just replace the key store with a newly created key store using <code><span class="codeinlineitalic">JAVA_HOME</span></code><code>/bin/keytool</code>.</p>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="CHDHCHDE"></a><a id="WBETL16008"></a>
<div class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Case Study: Using Web Services for Data Integration</h2>
<p>Company A and Company B have just been merged. Company A is located in San Francisco, USA, and Company B is located in Shanghai, China. Currently, they are still following their own separate business processes. You must develop a plan to integrate their business processes.</p>
<p>Company A uses Oracle Database to store their data and Oracle Warehouse Builder for data integration and ETL. A mapping is used to determine the total sales for a specified period.</p>
<p>Company B uses a SQL Server database to store data and Oracle Warehouse Builder for data integration and ETL. Because the source tables are in SQL Server, a CT mapping is used to determine the total sales over a specified period.</p>
<a id="CHDCJEEI"></a>
<div class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Example: <a id="sthref1686"></a>Publishing Mappings as Web Services</h3>
<p>Company A stores the sales details in a table called <code>ORDERS</code>. The <code>PRODUCTS</code> table stores details about products. The mapping <code>LOAD_TOTAL_SALES_MAP</code> transforms source data and loads the details of total sales into the target table <code>TOTAL_SALES</code>. As part of the data integration requirement, the business processes of Company A and Company B must be integrated.</p>
<p>Publishing the mapping <code>LOAD_TOTAL_SALES_MAP</code> as a Web service, enables the functionality defined in the mapping to be accessed remotely, without dependency on the location, data format, or provider's platform.</p>
<p>Company A uses the following tables to store data:</p>
<ul>
<li>
<p><code>ORDERS</code>: contains the columns <code>order_id</code>, <code>order_date</code>, <code>product_id</code>, <code>quantity</code>, and <code>customer_id</code></p>
</li>
<li>
<p><code>PRODUCTS</code>: contains the columns <code>product_id</code>, <code>product_name</code>, <code>product_desc</code>, and <code>product_price</code></p>
</li>
<li>
<p><code>CUSTOMERS</code>: contains the columns <code>customer_id</code>, <code>first_name</code>, <code>last_name</code>, <code>cust_address</code>, and <code>cust_city</code></p>
</li>
</ul>
<p>Use the following steps to publish the <code>LOAD_TOTAL_SALES_MAP</code> as a Web service.</p>
<a id="CHDIHHDG"></a>
<ol>
<li>
<p>In the Projects Navigator, create an application server module called <code>INTEGRATION_AS_MOD</code> that contains the Web service you are creating. Ensure that the location details of this module are set to the agent location to which the Web service is deployed.</p>
</li>
<li>
<p>Expand the Oracle module that contains the <code>LOAD_TOTAL_SALES_MAP</code> mapping.</p>
</li>
<li>
<p>Right-click the <code>LOAD_TOTAL_SALES_MAP</code> mapping and select <span class="bold">Publish as Web Service</span>.</p>
<p>The Select Application Server or Web Service Package dialog box is displayed.</p>
</li>
<li>
<p>Select <code>INTEGRATION_AS_MOD</code> and click <span class="bold">OK</span>.</p>
</li>
</ol>
<p>The Web service called <code>WS_LOAD_TOTAL_SALES_MAP</code> is created and deployed to the agent location associated with the application server module <code>INTEGRATION_AS_MOD</code>.</p>
</div>
<!-- class="sect2" -->
<a id="CHDIFGFB"></a>
<div class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Example: <a id="sthref1687"></a>Consuming Web Services in Process Flows</h3>
<p>Company B uses a CT mapping called <code>LOAD_TOT_SALES_CT_MAP</code> to load aggregate sales during a specified period to the target table <code>TOT_SALES</code>. This mapping is similar to the mapping used by Company A. However, a CT mapping is used because the source tables <code>ORDERS</code>, <code>PRODUCTS</code>, and <code>CUSTOMERS</code> are stored in a SQL Server database.</p>
<p>Because Company B is located in China, the source tables store the sales figures in Chinese Yuan. However, because Company A and Company B have been merged, the sales head wants to see the consolidated sales of both companies in a common currency, U.S. Dollar. You must now convert the sales figures of Company B to U.S. Dollar.</p>
<p>To determine the conversion rate, you can use an external Currency Converter Web Service. This Web service takes two input parameters, From Currency and To Currency. Its output is the multiple that must be used to convert the From Currency to the To Currency. Because this is an external Web service, you must first import this Web service into Oracle Warehouse Builder.</p>
<p class="subhead2"><a id="sthref1688"></a>Steps to Consume a Web Service in a Process Flow</p>
<ol>
<li>
<p><a href="#CHDCIEBI">"Modify the LOAD_TOT_SALES_CT_MAP Code Template (CT) Mapping"</a>.</p>
</li>
<li>
<p><a href="#CHDJCAHH">"Import the Currency Converter Web Service"</a>.</p>
</li>
<li>
<p><a href="#CHDJCHGI">"Create a Process Flow That Consumes the Currency Converter Web Service"</a>.</p>
</li>
</ol>
<a id="CHDCIEBI"></a>
<div class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Modify the LOAD_TOT_SALES_CT_MAP Code Template (CT) Mapping</h4>
<p>Edit the CT mapping <code>LOAD_TOT_SALES_CT_MAP</code> and add a Mapping Input operator and an Expression operator. The Mapping Input operator is used to provide the currency conversion value. The Expression operator is used to compute the total sales in U.S. Dollar by multiplying the total sales in Chinese Yuan with the conversion value and then loading the converted sales figures into the <code>TOT_SALES</code> table.</p>
</div>
<!-- class="sect3" -->
<a id="CHDJCAHH"></a>
<div class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Import the Currency Converter Web Service</h4>
<p>The Currency Converter Web service is an external Web service that is available at:</p>
<p>http://www.webservicex.net/CurrencyConvertor.asmx?WSDL</p>
<p>Before you can consume this Web service in a process flow, you must import this Web service into Oracle Warehouse Builder, using the following steps:</p>
<ol>
<li>
<p>In the Globals Navigator, create an application server module called <code>PUBLIC_AS_MOD</code>.</p>
<p>To import a Web service that is based on a URL, you must create a public Web service in the Globals Navigator.</p>
</li>
<li>
<p>In the Globals Navigator, right-click <code>PUBLIC_AS_MOD</code> and select <span class="bold">New Web Service</span> to create a Web service based on a URL. This Web service is called <code>WS_CURR_CONVERT</code>.</p>
<p>Use the URL to the currency converter Web service to specify the WSDL file location.</p>
<p>For more details about creating a Web service based on a URL, see <a href="#BABHFEDG">"Creating Web Services Based on a URL"</a>.</p>
</li>
</ol>
</div>
<!-- class="sect3" -->
<a id="CHDJCHGI"></a>
<div class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Create a Process Flow That Consumes the Currency Converter Web Service</h4>
<p>Use a process flow to establish the order in which objects are run and to use the output of an object as input to another. The process flow loads the target table with sales figures for Company B in U.S. Dollar.</p>
<p><a href="#CHDGDCGJ">Figure 16-1</a> displays the process flow that loads the <code>TOT_SALES</code> table with the sales figures for Company B in U.S. Dollar.</p>
<p>The Web service <code>CONVERTSERVICE_CONVERSIONRATE</code> is run first and its output is the conversion value that should be multiplied to a value in Chinese Yuan to convert it to U.S. Dollar. This value is provided as the input to the Mapping Input Parameter operator in the <code>LOAD_TOT_SALES_CT_MAP</code> CT mapping, represented by the Mapping activity CMAP1, that represents the conversion value.</p>
<div class="figure">
<p class="titleinfigure"><a id="CHDGDCGJ"></a>Figure 16-1 Process Flow that Consumes a Web Service</p>
<img width="553" height="110" src="img/ws_consume_pf.gif" alt="This image is described in the surrounding text." /><br />
<a id="sthref1689" href="img_text/ws_consume_pf.htm">Description of "Figure 16-1 Process Flow that Consumes a Web Service"</a><br />
<br /></div>
<!-- class="figure" --></div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<div class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref1690"></a>
<h3 class="sect2">Example: Integrating Oracle Warehouse Builder Web <a id="sthref1691"></a>Services with Oracle BPEL Process Manager</h3>
<p>You can integrate ETL functionality developed using Oracle Warehouse Builder with products such as Oracle BPEL Process Manager. This is achieved by publishing ETL objects as Web services that can be consumed by Oracle BPEL Process Manager.</p>
<p>Oracle BPEL Process Manager provides a comprehensive and easy-to-use solution for designing, deploying, and managing BPEL Processes.</p>
<p class="subhead2"><a id="sthref1692"></a>Scenario</p>
<p>The sales head of Company A wants to evaluate the sales performance of both Company A and Company B over a specified time period. Both company A and Company B have their own processes to determine sales performance over a specified period. The need is to integrate these processes so that you have an easy way to determine the total sales, during a period, for the combined company.</p>
<p class="subhead2"><a id="sthref1693"></a>Before You Integrate ETL Functionality with Oracle BPEL Process Manager</p>
<p>Company A uses the mapping <code>LOAD_TOTAL_SALES_MAP</code>, which is published as the Web service <code>WS_LOAD_TOTAL_SALES_MAP</code>. Company B uses the Code Template mapping <code>LOAD_TOT_SALES_CT_MAP</code> and a process flow to convert the sales in Chinese Yuan to U.S. Dollar. Ensure that you publish this process flow as a Web service. Also ensure that you publish any objects associated with these Web services.</p>
<p class="subhead2"><a id="sthref1694"></a>Steps to Integrate With BPEL</p>
<ol>
<li>
<p>Start the Oracle SOA Suite.</p>
</li>
<li>
<p>Start JDeveloper BPEL Designer</p>
</li>
<li>
<p>Create a BPEL process called BPEL_INTEG. This process uses the Web services created by Company A and Company B.</p>
<p><a href="#CHDEHGHI">Figure 16-2</a> displays the process BPEL_INTEG.</p>
<div class="figure">
<p class="titleinfigure"><a id="CHDEHGHI"></a>Figure 16-2 BPEL Process that Uses Web Services</p>
<img width="931" height="1274" src="img/bpel_process.gif" alt="Description of Figure 16-2 follows" /><br />
<a id="sthref1695" href="img_text/bpel_process.htm">Description of "Figure 16-2 BPEL Process that Uses Web Services"</a><br />
<br /></div>
<!-- class="figure" --></li>
<li>
<p>Deploy the BPEL process by right-clicking the BPEL process in the Applications Navigator, selecting <span class="bold">Deploy</span>, and choosing the deployment location.</p>
<p>You can use the Log panel to view the deployment results.</p>
</li>
<li>
<p>Login to BPEL Manager using a web browser.</p>
</li>
<li>
<p>On the Dashboard tab, select BPEL_INTEG in the Deployed BPEL Processes section.</p>
</li>
<li>
<p>Select the Initiate tab.</p>
</li>
<li>
<p>Enter values for the input parameters START_DATE and END_DATE using the Input field and click <span class="bold">Post XML Message</span> to run the BPEL process.</p>
<p>For example, enter the following value in the Input field: START_DATA=2007-01-01,END_DATA=2008-12-31.</p>
</li>
<li>
<p>View the audit trail for the Business Process Execution. Select the Instances tab of the BPEL Console and click the Flow link.</p>
</li>
</ol>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment2968">
<tr>
<td class="cellalignment2977">
<table class="cellalignment2973">
<tr>
<td class="cellalignment2972"><a href="errors_trouble.htm"><img width="24" height="24" src="../../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment2972"><a href="trans_mod.htm"><img width="24" height="24" src="../../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;2000, 2011,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment2980">
<table class="cellalignment2971">
<tr>
<td class="cellalignment2972"><a href="../../index.htm"><img width="24" height="24" src="../../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment2972"><a href="../../nav/portal_booklist.htm"><img width="24" height="24" src="../../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment2972"><a href="toc.htm"><img width="24" height="24" src="../../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment2972"><a href="index.htm"><img width="24" height="24" src="../../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment2972"><a href="../../nav/mindx.htm"><img width="24" height="24" src="../../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment2972"><a href="../../dcommon/html/feedback.htm"><img width="24" height="24" src="../../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>
</body>
</html>
