<!DOCTYPE html>
<html lang="en" >
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1">
<meta charset="utf-8">
<title>Defining Dimensional Objects</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Version 5.1.2 Build 037" />
<meta name="dcterms.created" content="2011-09-21T18:21:22Z" />
<meta name="robots" content="all" />
<meta name="dcterms.title" content="Warehouse Builder Data Modeling, ETL, and Data Quality Guide" />
<meta name="dcterms.identifier" content="E10935-05" />
<meta name="dcterms.isVersionOf" content="WBETL" />
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;2000, 2011,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved." />
<link rel="Start" href="../../index.htm" title="Home" type="text/html" />
<link rel="Copyright" href="../../dcommon/html/cpyr.htm" title="Copyright" type="text/html" />

<script type="application/javascript"  src="../../dcommon/js/headfoot.js"></script>
<script type="application/javascript"  src="../../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html" />
<link rel="Index" href="index.htm" title="Index" type="text/html" />
<link rel="Prev" href="orcl_data_objx.htm" title="Previous" type="text/html" />
<link rel="Next" href="part_2.htm" title="Next" type="text/html" />
<link rel="alternate" href="../e10935.pdf" title="PDF version" type="application/pdf" />
<link rel="schema.dcterms" href="http://purl.org/dc/terms/" />
<link rel="stylesheet" href="../../dcommon/css/fusiondoc.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/header.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/footer.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/fonts.css">
<link rel="stylesheet" href="../../dcommon/css/foundation.css">
<link rel="stylesheet" href="../../dcommon/css/codemirror.css">
<link rel="stylesheet" type="text/css" title="Default" href="../../nav/css/html5.css">
<link rel="stylesheet" href="../../dcommon/css/respond-480-tablet.css">
<link rel="stylesheet" href="../../dcommon/css/respond-768-laptop.css">
<link rel="stylesheet" href="../../dcommon/css/respond-1140-deskop.css">
<script type="application/javascript" src="../../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">7/37</span> <!-- End Header --><a id="BABEJGDC"></a><a id="WBETL03000"></a>
<h1 class="chapter"><span class="secnum">3</span> Defining Dimensional Objects</h1>
<p><a id="ABC1366555"></a><a id="ABC1366555SRI1"></a>Oracle Warehouse Builder enables you to define, deploy, and load dimensional objects. You can deploy dimensional objects either to a relational schema or to an analytical workspace in the database.</p>
<p>This chapter contains the following topics:</p>
<ul>
<li>
<p><a href="#CIHCCFAF">"Overview of Dimensional Objects"</a></p>
</li>
<li>
<p><a href="#CHDIGDBB">"Overview of Implementing Dimensional Objects"</a></p>
</li>
<li>
<p><a href="#BEIFBIBA">"Creating Dimensions"</a></p>
</li>
<li>
<p><a href="#BEIHFEAG">"Creating Slowly Changing Dimensions"</a></p>
</li>
<li>
<p><a href="#BEIFBHAJ">"Editing Dimension Definitions"</a></p>
</li>
<li>
<p><a href="#CIHGFCIJ">"Configuring Dimensions"</a></p>
</li>
<li>
<p><a href="#BEIIAHEF">"Creating Cubes"</a></p>
</li>
<li>
<p><a href="#BEICADBG">"Editing Cube Definitions"</a></p>
</li>
<li>
<p><a href="#CIHDBEID">"Configuring Cubes"</a></p>
</li>
<li>
<p><a href="#CIHCJAFD">"Creating Time Dimensions"</a></p>
</li>
<li>
<p><a href="#CIHHCHFG">"Populating Time Dimensions"</a></p>
</li>
</ul>
<a id="CIHCCFAF"></a><a id="WBETL03008"></a>
<div class="sect1">
<h2 class="sect1">Overview of <a id="sthref461"></a>Dimensional Objects</h2>
<p>Objects that contain additional metadata to identify and categorize data are called dimensional objects. Oracle Warehouse Builder enables you to design, deploy, and load two types of dimensional objects: dimensions and cubes. In this chapter, <span class="italic">dimensional object</span> refers to both dimensions and cubes. Most analytic queries require the use of a time dimension. Oracle Warehouse Builder provides tools that enable you to easily create and populate time dimensions by answering simple questions.</p>
<p class="subhead2"><a id="sthref462"></a>Steps to Create Dimensional Objects</p>
<p>Creating <a id="sthref463"></a>dimensional objects consists of following high-level tasks.</p>
<ol>
<li>
<p>Define dimensional objects</p>
<p>Defining dimensional objects consists of specifying the logical relationships that help store data in a more structured format. For example, to define a dimension, you describe its attributes, levels, and hierarchies. To define a cube, you define its measures and dimensions.</p>
<p>You can use wizards or editors to define dimensional objects. For more details, see:</p>
<ul>
<li>
<p><a href="#BEIFBIBA">"Creating Dimensions"</a></p>
</li>
<li>
<p><a href="#BEIHFEAG">"Creating Slowly Changing Dimensions"</a></p>
</li>
<li>
<p><a href="#BEIIAHEF">"Creating Cubes"</a></p>
</li>
<li>
<p><a href="#CIHCJAFD">"Creating Time Dimensions"</a></p>
</li>
</ul>
</li>
<li>
<p>Implement dimensional objects</p>
<p>See <a href="#CHDIGDBB">"Overview of Implementing Dimensional Objects"</a></p>
</li>
<li>
<p>Deploy dimensional objects</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="deploy.htm#BIHHAEJF">"About Deploying Dimensional Objects"</a></p>
</li>
<li>
<p><a href="deploy.htm#i1088602">"Deploying Objects"</a></p>
</li>
</ul>
</div>
</li>
<li>
<p>Load dimensional objects</p>
<p>To load data into dimensional objects, create a mapping that defines the data flow and transformations from the source objects to the dimensional object. You then deploy and run this mapping.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="dim_mappings.htm#BEIGFHJD">"Using Dimensions in ETL Mappings"</a></p>
</li>
<li>
<p><a href="dim_mappings.htm#BEIDHCBD">"Using Cubes in ETL Mappings"</a></p>
</li>
</ul>
</div>
</li>
</ol>
<a id="BABBDDCA"></a><a id="WBETL03001"></a>
<div class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Overview of <a id="sthref464"></a>Dimensions</h3>
<p>A dimension is a structure that organizes data. Examples of commonly used dimensions are Customers, Time, and Products.</p>
<p>For relational dimensions, using dimensions improves query performance because users often analyze data by drilling down on known hierarchies. An example of a hierarchy is the Time hierarchy of year, quarter, month, day. The Database uses these defined hierarchies by rewriting queries that retrieve data from materialized views rather than detail tables.</p>
<p>A dimension consists of a set of levels and a set of hierarchies defined over these levels. To create a dimension, you must define the following:</p>
<ul>
<li>
<p>Dimension attributes</p>
</li>
<li>
<p>Levels</p>
</li>
<li>
<p>Level attributes</p>
<p>This includes surrogate and business identifiers for levels.</p>
</li>
<li>
<p>Hierarchies</p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink WBCON" href="../e10581/toc.htm"><span class="italic">Oracle Warehouse Builder Concepts</span></a> for more information about defining dimension attributes, levels, level attributes, and hierarchies.</div>
<div class="sect3"><!-- infolevel="all" infotype="General" --><a id="sthref465"></a>
<h4 class="sect3">Overview of <a id="sthref466"></a><a id="sthref467"></a>Surrogate Identifiers</h4>
<p>A surrogate identifier uniquely identifies each level record across all the levels of the dimension. It must be composed of a single attribute. Surrogate identifiers enable you to hook facts to any dimension level as opposed to the lowest dimension level only. For a dimension that has a relational or ROLAP implementation, the surrogate identifier should be of the data type <code>NUMBER</code>.</p>
<p>You must use a <a id="sthref468"></a>surrogate key if:</p>
<ul>
<li>
<p>your dimension is a Type 2 or Type 3 SCD. In these cases, you can have multiple dimension records loaded for each business key value, so you need an extra unique key to track these records.</p>
</li>
<li>
<p>your dimension contains more that one level and is implemented using a star schema. Thus, any cube that references such a dimension references multiple dimension level.</p>
<p>If no surrogate key is defined, then only the leaf-level dimension records are saved in the dimension table, the parent level information is stored in extra columns in the leaf-level records. But there is no unique way to reference the upper level in that case.</p>
</li>
</ul>
<p>You do not need a surrogate key for any Type 1 dimensions, implemented by star or snowflake, where only the leaf level(s) are referenced by a cube. Dimensions with multiple hierarchies work with no surrogate key, because the leaf levels are referenced by the cube.</p>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<div class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref469"></a>
<h3 class="sect2">Overview of <a id="sthref470"></a>Slowly Changing Dimensions</h3>
<p>A Slowly Changing Dimension (SCD) is a dimension that stores and manages both current and historical data over time in a data warehouse. In data warehousing, there are three commonly recognized types of SCDs. describes the types of SCDs, as described in <a href="#BABIEBBH">Table 3-1</a>.</p>
<div class="tblformal">
<p class="titleintable"><a id="sthref471"></a><a id="BABIEBBH"></a>Table 3-1 Types of Slowly Changing Dimensions</p>
<table class="cellalignment2975" title="Types of Slowly Changing Dimensions" summary="This table describes the types of Slowly Changing Dimensions." dir="ltr">
<thead>
<tr class="cellalignment2969">
<th class="cellalignment2976" id="r1c1-t5">Type</th>
<th class="cellalignment2976" id="r1c2-t5">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2969">
<td class="cellalignment2977" id="r2c1-t5" headers="r1c1-t5">
<p>Type 1</p>
</td>
<td class="cellalignment2977" headers="r2c1-t5 r1c2-t5">
<p>Stores only one version of the dimension record. When a change is made, the record is overwritten and no historic data is stored.</p>
</td>
</tr>
<tr class="cellalignment2969">
<td class="cellalignment2977" id="r3c1-t5" headers="r1c1-t5">
<p>Type 2</p>
</td>
<td class="cellalignment2977" headers="r3c1-t5 r1c2-t5">
<p>Stores multiple versions of the same dimension record. When the dimension record is modified, new versions are created while the old ones are retained.</p>
</td>
</tr>
<tr class="cellalignment2969">
<td class="cellalignment2977" id="r4c1-t5" headers="r1c1-t5">
<p>Type 3</p>
</td>
<td class="cellalignment2977" headers="r4c1-t5 r1c2-t5">
<p>Stores one version of the dimension record. This record stores the previous value and current value of selected attributes.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<p>Use Type 2 and Type 3 SCDs to store and manage both current and historical data over time in a data warehouse. Type 1 dimensions, referred to as dimensions, do not preserve historical data.</p>
<p class="subhead2"><a id="sthref472"></a>Additional <a id="sthref473"></a>Attributes for Slowly Changing Dimensions (SCDs)</p>
<p>To create a Type 2 SCD or a Type 3 SCD, in addition to the regular dimension attributes, you need additional attributes that perform the following roles:</p>
<ul>
<li>
<p><span class="bold">Triggering <a id="sthref474"></a><a id="sthref475"></a>Attributes:</span> These are attributes for which historical values must be stored. For example, in the PRODUCTS dimension, the attribute PACKAGE_TYPE of the Product level can be a triggering attribute. When the value of the attribute changes, the old value must be stored.</p>
</li>
<li>
<p><span class="bold">Effective <a id="sthref476"></a><a id="sthref477"></a>Date:</span> This attribute stores the start date of the record's life span.</p>
</li>
<li>
<p><span class="bold">Expiration <a id="sthref478"></a><a id="sthref479"></a>Date:</span> This attribute stores the end date of the record's life span.</p>
</li>
<li>
<p><span class="bold">Previous <a id="sthref480"></a>Attribute:</span> For Type 3 SCDs only, this attribute stores the previous value of a versioned attribute.</p>
</li>
</ul>
<p>An attribute can play only one of the above roles. For example, an attribute cannot be a regular attribute and an effective date attribute. When you use the wizard to create a Type 2 SCD or a Type 3 SCD, Oracle Warehouse Builder creates the required additional attributes.</p>
<div class="sect3"><a id="sthref481"></a>
<h4 class="sect3">Overview of Defining Type 2 Slowly Changing Dimensions</h4>
<p>A Type 2 SCD retains the full history of values. When the value of a triggering attribute changes, the current record is closed. A new record is created with the changed data values and this new record becomes the current record. Each record contains the effective date and expiration date to identify the time period for which the record was active. Oracle Warehouse Builder also enables you to set a specific non-null date value as the expiration date. The current record is the one with a null or the previously specified value in the expiration date.</p>
<p>All the levels in a dimension need not store historical data. Typically, only the lowest levels is versioned.</p>
<p>To define a Type 2 <a id="sthref482"></a>Slowly Changing Dimension (SCD), you must identify the following:</p>
<ul>
<li>
<p>For the level that stores historical data, specify the attributes used as the effective date and the expiration date.</p>
</li>
<li>
<p>Choose the level attribute(s) that triggers a version of history to be created.</p>
<p>You cannot choose the surrogate identifier, effective date attribute, or expiration date attribute as the triggering attribute.</p>
</li>
</ul>
<p>Each version of a record is assigned a different surrogate identifier. The business identifier connects the different versions in a logical sense. Typically, if there is a business need, Type 2 SCDs are used.</p>
<p class="subhead2"><a id="BEIGBGCA"></a>Type 2 SCD <a id="sthref483"></a><a id="sthref484"></a>Example</p>
<p>Consider the <code>Customers</code> Type 2 SCD that contains two levels, Household and Customer. Customer is the leaf level and Household is the non-leaf level. <a href="#BCGBDJIB">Table 3-2</a> lists dimension attributes of the <code>Customers</code> Type 2 SCD.</p>
<div class="tblformal">
<p class="titleintable"><a id="sthref485"></a><a id="BCGBDJIB"></a>Table 3-2 Dimension Attributes of the Customers Type 2</p>
<table class="cellalignment2975" title="Dimension Attributes of the Customers Type 2" summary="This table lists the attributes of the Customers Type 2 SCD." dir="ltr">
<thead>
<tr class="cellalignment2969">
<th class="cellalignment2976" id="r1c1-t6">Attribute Name</th>
<th class="cellalignment2976" id="r1c2-t6">Identifier</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2969">
<td class="cellalignment2977" id="r2c1-t6" headers="r1c1-t6">
<p><code>ID</code></p>
</td>
<td class="cellalignment2977" headers="r2c1-t6 r1c2-t6">
<p>Surrogate identifier</p>
</td>
</tr>
<tr class="cellalignment2969">
<td class="cellalignment2977" id="r3c1-t6" headers="r1c1-t6">
<p><code>BUSN_ID</code></p>
</td>
<td class="cellalignment2977" headers="r3c1-t6 r1c2-t6">
<p>Business identifier</p>
</td>
</tr>
<tr class="cellalignment2969">
<td class="cellalignment2977" id="r4c1-t6" headers="r1c1-t6">
<p><code>ADDRESS</code></p>
</td>
<td class="cellalignment2977" headers="r4c1-t6 r1c2-t6">&nbsp;</td>
</tr>
<tr class="cellalignment2969">
<td class="cellalignment2977" id="r5c1-t6" headers="r1c1-t6">
<p><code>ZIP</code></p>
</td>
<td class="cellalignment2977" headers="r5c1-t6 r1c2-t6">&nbsp;</td>
</tr>
<tr class="cellalignment2969">
<td class="cellalignment2977" id="r6c1-t6" headers="r1c1-t6">
<p><code>MARITAL_STATUS</code></p>
</td>
<td class="cellalignment2977" headers="r6c1-t6 r1c2-t6">&nbsp;</td>
</tr>
<tr class="cellalignment2969">
<td class="cellalignment2977" id="r7c1-t6" headers="r1c1-t6">
<p><code>HOME_PHONE</code></p>
</td>
<td class="cellalignment2977" headers="r7c1-t6 r1c2-t6">&nbsp;</td>
</tr>
<tr class="cellalignment2969">
<td class="cellalignment2977" id="r8c1-t6" headers="r1c1-t6">
<p><code>EFFECTIVE_DATE</code></p>
</td>
<td class="cellalignment2977" headers="r8c1-t6 r1c2-t6">
<p>Effective Date</p>
</td>
</tr>
<tr class="cellalignment2969">
<td class="cellalignment2977" id="r9c1-t6" headers="r1c1-t6">
<p><code>EXPIRATION_DATE</code></p>
</td>
<td class="cellalignment2977" headers="r9c1-t6 r1c2-t6">
<p>Expiration Date</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<p>The Household level implements the following attributes: <code>ID</code>, <code>BUSN_ID</code>, <code>ADDRESS</code>, <code>ZIP</code>, <code>EFFECTIVE_DATE</code>, and <code>EXPIRATION_DATE</code>. The Customer level implements the following attributes: <code>ID</code>, BUSN_ID, <code>MARITAL_STATUS</code>, <code>HOME_PHONE</code>, <code>EFFECTIVE_DATE</code>, and <code>EXPIRATION_DATE</code>.The <code>Customers_tab</code> table implements the Customers Type 2 SCD (for a relational or ROLAP implementation). <a href="#BABCGDBI">Table 3-3</a> lists the columns in the <code>Customers_tab</code> table, along with details about the dimension level and the attribute that each column implements.</p>
<div class="tblformal">
<p class="titleintable"><a id="sthref486"></a><a id="BABCGDBI"></a>Table 3-3 Columns that Implement the Customers Type 2 SCD Level Attributes</p>
<table class="cellalignment2975" title="Columns that Implement the Customers Type 2 SCD Level Attributes" summary="This table lists the attributes of the Customers_tab table." dir="ltr">
<thead>
<tr class="cellalignment2969">
<th class="cellalignment2976" id="r1c1-t7">Column Name in the <code>Customers_tab</code> table</th>
<th class="cellalignment2976" id="r1c2-t7">Level Name</th>
<th class="cellalignment2976" id="r1c3-t7">Dimension Attribute Name</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2969">
<td class="cellalignment2977" id="r2c1-t7" headers="r1c1-t7">
<p>DIMENSION_KEY</p>
</td>
<td class="cellalignment2977" headers="r2c1-t7 r1c2-t7">&nbsp;</td>
<td class="cellalignment2977" headers="r2c1-t7 r1c3-t7">&nbsp;</td>
</tr>
<tr class="cellalignment2969">
<td class="cellalignment2977" id="r3c1-t7" headers="r1c1-t7">
<p>H_ID</p>
</td>
<td class="cellalignment2977" headers="r3c1-t7 r1c2-t7">
<p>Household</p>
</td>
<td class="cellalignment2977" headers="r3c1-t7 r1c3-t7">
<p>ID</p>
</td>
</tr>
<tr class="cellalignment2969">
<td class="cellalignment2977" id="r4c1-t7" headers="r1c1-t7">
<p>H_BUSN_ID</p>
</td>
<td class="cellalignment2977" headers="r4c1-t7 r1c2-t7">
<p>Household</p>
</td>
<td class="cellalignment2977" headers="r4c1-t7 r1c3-t7">
<p>BUSN_ID</p>
</td>
</tr>
<tr class="cellalignment2969">
<td class="cellalignment2977" id="r5c1-t7" headers="r1c1-t7">
<p>H_ADDRESS</p>
</td>
<td class="cellalignment2977" headers="r5c1-t7 r1c2-t7">
<p>Household</p>
</td>
<td class="cellalignment2977" headers="r5c1-t7 r1c3-t7">
<p>ADDRESS</p>
</td>
</tr>
<tr class="cellalignment2969">
<td class="cellalignment2977" id="r6c1-t7" headers="r1c1-t7">
<p>H_ZIP</p>
</td>
<td class="cellalignment2977" headers="r6c1-t7 r1c2-t7">
<p>Household</p>
</td>
<td class="cellalignment2977" headers="r6c1-t7 r1c3-t7">
<p>ZIP</p>
</td>
</tr>
<tr class="cellalignment2969">
<td class="cellalignment2977" id="r7c1-t7" headers="r1c1-t7">
<p>H_EFFECTIVE_DATE</p>
</td>
<td class="cellalignment2977" headers="r7c1-t7 r1c2-t7">
<p>Household</p>
</td>
<td class="cellalignment2977" headers="r7c1-t7 r1c3-t7">
<p>EFFECTIVE_DATE</p>
</td>
</tr>
<tr class="cellalignment2969">
<td class="cellalignment2977" id="r8c1-t7" headers="r1c1-t7">
<p>H_EXPIRATION_DATE</p>
</td>
<td class="cellalignment2977" headers="r8c1-t7 r1c2-t7">
<p>Household</p>
</td>
<td class="cellalignment2977" headers="r8c1-t7 r1c3-t7">
<p>EXPIRATION_DATE</p>
</td>
</tr>
<tr class="cellalignment2969">
<td class="cellalignment2977" id="r9c1-t7" headers="r1c1-t7">
<p>C_ID</p>
</td>
<td class="cellalignment2977" headers="r9c1-t7 r1c2-t7">
<p>Customer</p>
</td>
<td class="cellalignment2977" headers="r9c1-t7 r1c3-t7">
<p>ID</p>
</td>
</tr>
<tr class="cellalignment2969">
<td class="cellalignment2977" id="r10c1-t7" headers="r1c1-t7">
<p>C_BUSN_ID</p>
</td>
<td class="cellalignment2977" headers="r10c1-t7 r1c2-t7">
<p>Customer</p>
</td>
<td class="cellalignment2977" headers="r10c1-t7 r1c3-t7">
<p>BUSN_ID</p>
</td>
</tr>
<tr class="cellalignment2969">
<td class="cellalignment2977" id="r11c1-t7" headers="r1c1-t7">
<p>C_MARITAL_STATUS</p>
</td>
<td class="cellalignment2977" headers="r11c1-t7 r1c2-t7">
<p>Customer</p>
</td>
<td class="cellalignment2977" headers="r11c1-t7 r1c3-t7">
<p>MARITAL_STATUS</p>
</td>
</tr>
<tr class="cellalignment2969">
<td class="cellalignment2977" id="r12c1-t7" headers="r1c1-t7">
<p>C_HOME_PHONE</p>
</td>
<td class="cellalignment2977" headers="r12c1-t7 r1c2-t7">
<p>Customer</p>
</td>
<td class="cellalignment2977" headers="r12c1-t7 r1c3-t7">
<p>HOME_PHONE</p>
</td>
</tr>
<tr class="cellalignment2969">
<td class="cellalignment2977" id="r13c1-t7" headers="r1c1-t7">
<p>C_EFFECTIVE_DATE</p>
</td>
<td class="cellalignment2977" headers="r13c1-t7 r1c2-t7">
<p>Customer</p>
</td>
<td class="cellalignment2977" headers="r13c1-t7 r1c3-t7">
<p>EFFECTIVE_DATE</p>
</td>
</tr>
<tr class="cellalignment2969">
<td class="cellalignment2977" id="r14c1-t7" headers="r1c1-t7">
<p>C_EXPIRATION_DATE</p>
</td>
<td class="cellalignment2977" headers="r14c1-t7 r1c2-t7">
<p>Customer</p>
</td>
<td class="cellalignment2977" headers="r14c1-t7 r1c3-t7">
<p>EXPIRATION_DATE</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<p><span class="bold">To create the Customers Type 2 SCD:</span></p>
<ul>
<li>
<p>Specify that the <code>ZIP</code> attribute of the Household level and the <code>MARITAL_STATUS</code> attribute of the Customer level are the triggering attributes.</p>
</li>
<li>
<p>Use two additional attributes to store the effective date and the expiration date of the level records. When you use the Create Dimension wizard, Oracle Warehouse Builder creates these additional attributes for the lowest level only. If you use the Dimension Editor, then you must explicitly create these attributes and apply them to the required levels.</p>
</li>
</ul>
</div>
<!-- class="sect3" -->
<div class="sect3"><!-- infolevel="all" infotype="General" --><a id="sthref487"></a>
<h4 class="sect3">Overview of <a id="sthref488"></a><a id="sthref489"></a>Hierarchy Versioning</h4>
<p>For Type 2 SCDs, when the non-leaf level of a dimension contains versioned attributes, the versioning of this non-leaf level results in the versioning of its corresponding child records, if they have effective date and expiration date attributes. For example, in the <code>Customers</code> Type 2 SCD described in <a href="#BEIGBGCA">"Type 2 SCD Example"</a>, when the value of the <code>H_ZIP</code> is updated in a particular Household level record, the child records corresponding to this Household level are automatically versioned.</p>
<p>Hierarchy versioning is not enabled by default for Type 2 SCDs. Thus, when you create a Type 2 SCD using the Create Dimension Wizard, hierarchy versioning is disabled. Use the Dimension Editor to enable hierarchy versioning.</p>
<p class="subhead2"><a id="sthref490"></a>Steps to Enable <a id="sthref491"></a><a id="sthref492"></a><a id="sthref493"></a>Hierarchy Versioning</p>
<ol>
<li>
<p>Right-click the Type 2 SCD in the Projects Navigator and select <span class="bold">Open</span>.</p>
<p>The Dimension Editor is displayed.</p>
</li>
<li>
<p>Navigate to the SCD tab.</p>
</li>
<li>
<p>Click <span class="bold">Settings</span> to the right of the Type 2: Store the Complete change history option.</p>
<p>The Type 2 Slowly Changing Dimension dialog box is displayed. The attributes of each level are displayed under the level node.</p>
</li>
<li>
<p>In the child level that should be versioned when its parent attribute changes, for the attribute that represents the parent attribute of this child level, select <span class="bold">Trigger History</span> in the Record History column.</p>
<p>For example, you create the <code>Customers</code> Type 2 SCD using the Create Dimension Wizard. Then open the editor for this Type 2 SCD and navigate to the Type 2 Slowly changing Dimension dialog box. The <code>Customer</code> level has an attribute called <code>HOUSEHOLD_ID</code>. This attribute represents the parent attribute of each <code>Customer</code> record. For the <code>HOUSEHOLD_ID</code> attribute, select <span class="bold">Trigger History</span> in the Record History column.</p>
</li>
</ol>
</div>
<!-- class="sect3" -->
<div class="sect3"><a id="sthref494"></a>
<h4 class="sect3">Overview of Defining Type 3 Slowly Changing Dimensions (SCDs)</h4>
<p>A Type 3 Slowly Changing Dimension (SCD) stores two versions of values for certain selected level attributes. Each record stores the previous value and the current value of the versioned attributes. When the value of any of the versioned attributes changes, the current value is stored as the old value and the new value becomes the current value. Each record stores the effective date that identifies the date from which the current value is active. This doubles the number of columns for the versioned attributes and is used rarely.</p>
<p>Before you define a <a id="sthref495"></a>Type 3 SCD, identify the following:</p>
<ol>
<li>
<p>For each level, specify which attributes should be versioned. That is, identify which attributes should store the previous value and the current value.</p>
</li>
<li>
<p>For each versioned attribute, specify the attribute that stores the previous value.</p>
<p>The following restrictions apply to attributes that can have a previous value.</p>
<ul>
<li>
<p>An attribute specified as a previous value cannot have further previous values.</p>
</li>
<li>
<p>The surrogate identifier cannot have previous values.</p>
</li>
</ul>
</li>
<li>
<p>For each level that is versioned, specify the attribute that stores the effective date.</p>
</li>
</ol>
<p>Oracle Warehouse Builder recommends that you do not include previous value attributes in the business identifier of a Type 3 SCD.</p>
<p class="subhead2"><a id="sthref496"></a>Type 3 SCD <a id="sthref497"></a><a id="sthref498"></a>Example</p>
<p>The <code>PRODUCTS</code> dimension described in <a href="#CIHBAEBJ">"Dimension Example"</a> can be created as a Type 3 SCD. The attributes <code>PACKAGE_TYPE</code> and <code>PACKAGE_SIZE</code> of the Product level should be versioned. You define two additional attributes to store the previous values, say <code>PREV_PACK_SIZE</code> and <code>PREV_PACK_TYPE</code> in the Product level. Suppose the value of the <code>PACKAGE_TYPE</code> attribute changes, Oracle Warehouse Builder stores the current value of this attribute in <code>PREV_PACK_TYPE</code> and stores the new value in the <code>PACKAGE_TYPE</code> attribute. The effective date attribute can be set to the current system date or to any other specified date.</p>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="BABHDFIG"></a><a id="WBETL03002"></a>
<div class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Overview of <a id="sthref499"></a>Cubes</h3>
<p>Cubes contain measures and link to one or more dimensions. The axes of a cube contain dimension members and the body of the cube contains measure values. Most measures are additive. For example, sales data can be organized into a cube whose edges contain values for Time, Products, and Promotions dimensions and whose body contains values from the measures Value sales, and Dollar sales.</p>
<p>A cube is linked to dimension tables over foreign key constraints. Since data integrity is vital, these constraints are critical in a data warehousing environment. The constraints enforce referential integrity during the daily operations of the data warehouse.</p>
<p>Data analysis applications typically aggregate data across many dimensions. It enables to look for anomalies or unusual patterns in the data. Using cubes is the most efficient way of performing these type of operations. In a relational implementation, when you design dimensions with warehouse keys, the cube row length is usually reduced. This is because warehouse keys are shorter than their natural counterparts. This results is lesser amount of storage space needed for the cube data. For a MOLAP implementation, OLAP uses VARCHAR2 keys.</p>
<p>A typical cube contains:</p>
<ul>
<li>
<p>A primary key defined on a set of foreign key reference columns or, for a data list, on an artificial key or a set of warehouse key columns. When the cube is a data list, the foreign key reference columns do not uniquely identify each row in the cube.</p>
</li>
<li>
<p>A set of foreign key reference columns that link the table with its dimensions.</p>
</li>
</ul>
<p>To create cubes, you must define the cube measures and the cube dimensionality. For more information about measures and cube dimensionality, see <a class="olink WBCON" href="../e10581/toc.htm"><span class="italic">Oracle Warehouse Builder Concepts</span></a>.</p>
</div>
<!-- class="sect2" -->
<a id="BCGBJCDG"></a>
<div class="sect2">
<h3 class="sect2"><a id="sthref500"></a><a id="sthref501"></a>Orphan Management for Dimensional Objects</h3>
<p>Oracle Warehouse Builder's orphan management policy enables you to manage orphan records in dimensional objects (dimensions and cubes). An orphan record is one that does not have a corresponding existing parent record. Orphan management automates the process of handling source rows that do not meet the requirements necessary to form a valid dimension or cube record.</p>
<p>Orphan records can occur when:</p>
<ul>
<li>
<p>A record that is loaded into a dimensional object does not have a corresponding parent record.</p>
<p>A dimension record is considered an orphan if one or more of its level references is null or nonexistant. A cube record is considered an orphan if one or more dimension records that it references is either nonexistent or null.</p>
</li>
<li>
<p>A record is deleted from a dimensional object. This could result in the child records of the deleted record not having an existing parent record.</p>
</li>
</ul>
<p>Oracle Warehouse Builder enables you to specify different orphan management policies for loading dimensional object data and for removing dimensional object data.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
Orphan management is not supported for MOLAP dimensions and cubes.</div>
<div class="sect3"><a id="sthref502"></a>
<h4 class="sect3">Orphan Management While Loading Data Into Dimensional Objects</h4>
<p>An orphan record is created while loading data into a dimensional object if you insert a record that does not have an existing parent record. For example, you load data into the City level of the Geography dimension. The value of the State attribute in this record does not exist in the State level. This record is an orphan record. Or you load data into the SALES cube, but the value for the Customer ID does not exist in the Customers dimension.</p>
<p>Oracle Warehouse Builder enables you to specify the integrity policy used while loading orphan records into a dimensional object. You can specify different actions for records that have a null parent record and records that have an invalid parent record.</p>
<p>The orphan management policy <a id="sthref503"></a>options that you can set for loading are:</p>
<ul>
<li>
<p><span class="bold">Reject Load</span>: The record is not inserted.</p>
</li>
<li>
<p><span class="bold">Default Parent:</span> You can specify a default parent record. This default record is used as the parent record for any record that does not have an existing parent record. If the default parent record does not exist, then Oracle Warehouse Builder creates the default parent record.</p>
<p>You specify the attribute values of the default parent record at the time of defining the dimensional object. If any ancestor of the default parent does not exist, then Oracle Warehouse Builder also creates this record.</p>
</li>
<li>
<p><span class="bold">No Maintenance:</span> This is the default behavior. Oracle Warehouse Builder does not actively detect, reject, or fix orphan records.</p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="#CHDJEGCJ">"Orphan Tab"</a> for details about setting an orphan management policy for dimensions.</p>
</li>
<li>
<p><a href="#BABEACDG">"Orphan Tab"</a> for details about setting an orphan management policy for cubes.</p>
</li>
</ul>
</div>
</div>
<!-- class="sect3" -->
<div class="sect3"><a id="sthref504"></a>
<h4 class="sect3">Orphan Management While Removing Data From Dimensional Objects</h4>
<p>Orphan records can be created while removing data if the record that is being removed has corresponding child records. For example, you remove a record in the State level of the Geography dimension. This state has city records that refer to it. All the city records that refer to the deleted state record becomes orphan records.</p>
<p>While removing data from a dimension, you can select one of the following orphan management <a id="sthref505"></a>policies:</p>
<ul>
<li>
<p><span class="bold">Reject Removal</span>: Oracle Warehouse Builder does not enable you to delete the record if it has existing child records.</p>
</li>
<li>
<p><span class="bold">No Maintenance:</span> This is the default behavior. Oracle Warehouse Builder does not actively detect, reject, or fix orphan records.</p>
</li>
</ul>
</div>
<!-- class="sect3" -->
<div class="sect3"><!-- infolevel="all" infotype="General" --><a id="sthref506"></a>
<h4 class="sect3"><a id="sthref507"></a><a id="sthref508"></a>Error Tables</h4>
<p>Error tables store any records that are detected as anomalous, by Orphan Management, during a load or remove operation on a dimension. Error tables are created when you deploy a dimension for the first time if you select the Deploy Error Tables option on the Orphan tab of the dimension editor.</p>
<p>Following are the records that appear in error tables:</p>
<ul>
<li>
<p>Records that are not inserted during a load operation</p>
</li>
<li>
<p>Records whose parents are defaulted during the load operation</p>
</li>
<li>
<p>Records that could not be deleted during a remove operation</p>
</li>
</ul>
<p>Oracle Warehouse Builder creates one error table for each implementation object. For example, if a dimension is implemented using a snowflake schema, then multiple error tables are created. If the dimension is implemented using a star schema, then one error table is created. The name of the error table equals the implementation object suffixed with an _ERR. If the implementation table is called <code>CITY</code>, then the error table is called <code>CITY_ERR</code>.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
Since orphan management is not supported for MOLAP dimensional objects, error tables are created for dimensions and cubes that have a relational or ROLAP implementation only.</div>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="CHDIGDBB"></a><a id="WBETL03009"></a>
<div class="sect1">
<h2 class="sect1"><a id="sthref509"></a><a id="sthref510"></a><a id="sthref511"></a>Overview of Implementing Dimensional Objects</h2>
<p>To implement a dimensional object is to create the physical structure of the dimensional object. Oracle Warehouse Builder provides the following implementations for dimensional objects:</p>
<ul>
<li>
<p><a href="#CIHCCIJE">"Relational Implementation of Dimensional Objects"</a></p>
</li>
<li>
<p><a href="#BABDGBEF">"ROLAP Implementation of Dimensional Objects"</a></p>
</li>
<li>
<p><a href="#CIHFDJCB">"MOLAP Implementation of Dimensional Objects"</a></p>
</li>
</ul>
<div class="infobox-note">
<p class="notep1">Note:</p>
To use a MOLAP implementation, you must have Database Enterprise Edition 10.1.0.4 or higher with the OLAP option enabled.</div>
<p>The implementation is set using the Storage page of the Wizard that is used to create the dimensional object or the Storage tab of the object editor. You can further refine the implementation deployment options using the Deployment Option configuration parameter. For more information about setting this parameter, see <a href="#CIHGFCIJ">"Configuring Dimensions"</a> and <a href="#CIHDBEID">"Configuring Cubes"</a>.</p>
<a id="CIHCCIJE"></a>
<div class="sect2">
<h3 class="sect2">Relational <a id="sthref512"></a><a id="sthref513"></a><a id="sthref514"></a>Implementation of Dimensional Objects</h3>
<p>A relational implementation stores the dimensional object and its data in a relational form in the database. The dimensional object data is stored in implementation objects that are typically tables. Any queries that are run on the dimensional object obtain data from these tables. Oracle Warehouse Builder creates the DDL scripts that create the dimensional object. You can then deploy these scripts to the database using the Control Center. For relational dimensions, Oracle Warehouse Builder can use a star schema, a snowflake schema, or a manual schema to store the implementation objects.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink WBCON" href="../e10581/toc.htm"><span class="italic">Oracle Warehouse Builder Concepts</span></a> for more information about how the star schema and snowflake schema store dimension data.</div>
<p>When you use the wizard to define dimensional objects, Oracle Warehouse Builder creates the database tables that store the dimensional object data. It also defines the association between the dimension object attributes and the implementation tables that defines the table columns that store the dimensional object data.</p>
<p>When you define a dimensional object using the editors, you can decide whether you want Oracle Warehouse Builder to create the implementation tables or you want to store the dimensional object data in your own tables and views. If you want Oracle Warehouse Builder to create implementation objects, then perform auto binding for the dimensional object. To use your own implementation tables to store the dimensional object data, perform manual binding.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
For a relational implementation, you cannot view the data stored in the dimensional object using the Data Viewer. However, you can view the data stored in the implementation tables of the dimensional object using the Data Viewer.</div>
<a id="BABFIACA"></a><a id="WBETL03006"></a>
<div class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Binding<a id="sthref515"></a><a id="sthref516"></a></h4>
<p>Binding is the process of connecting the attributes of the dimensional object to the columns in the table or view that store their data. You perform binding only for dimensional objects that have a relational or ROLAP implementation. For multidimensional objects, binding is implicit and is resolved in the analytic workspace.</p>
<p>For dimensions, you connect the level attributes and level relationships to the columns in the implementation objects. For cubes, you connect the measures and dimension references to implementation table columns.</p>
<p>Oracle Warehouse Builder provides two methods of binding: <a href="#BABGCHIC">"Auto Binding"</a> and <a href="#BABFCIHF">"Manual Binding"</a>.</p>
<p><a id="sthref517"></a><span class="subhead3">When to <a id="sthref518"></a>Perform Binding&nbsp;</span></p>
<ul>
<li>
<p>When you create a dimensional object using the wizard, the object is bound for you. If you make any changes to the dimensional object using the editor, then you must re-bind the object before you deploy them.</p>
</li>
<li>
<p>When you create a dimensional object using the editor, you must bind the dimensional object to its implementation objects before deployment.</p>
</li>
<li>
<p>When you make any change to a dimensional object definition using the editors, you must rebind the dimensional object to its implementation objects.</p>
</li>
</ul>
</div>
<!-- class="sect3" -->
<a id="BABGCHIC"></a>
<div class="sect3">
<h4 class="sect3">Auto <a id="sthref519"></a><a id="sthref520"></a>Binding</h4>
<p>Auto binding refers to the creation of the implementation tables, if they do not exist. The attributes and relationships of the dimensional object are then bound to the columns that store their data. In the case of a dimension, the number of tables used to store the dimension data depends on the options you select for the storage. You can perform auto binding using both the wizards and the editors. When you use the editors to create dimensional objects, you can perform both auto binding and manual binding.</p>
<p><span class="bold">To perform <a id="sthref521"></a><a id="sthref522"></a>auto binding:</span></p>
<ol>
<li>
<p>In the Projects Navigator, right-click the dimensional object and select <span class="bold">Open</span>.</p>
<p>The editor for this dimensional object is displayed.</p>
</li>
<li>
<p>On the Physical Bindings tab, select node that represents the dimensional object.</p>
</li>
<li>
<p>From the File menu, select <span class="bold">Bind</span>.</p>
<p>If the Bind option is not enabled, then verify if the dimensional object uses a relational or ROLAP implementation. In the case of dimensions, ensure that the Manual option is not set in the Implementation section of the Storage tab.</p>
</li>
</ol>
<p>Alternatively, you can perform auto binding by right-clicking the dimensional object in the Projects Navigator and selecting <span class="bold">Bind</span>.</p>
</div>
<!-- class="sect3" -->
<a id="BABFCIHF"></a>
<div class="sect3">
<h4 class="sect3">Manual <a id="sthref523"></a><a id="sthref524"></a>Binding</h4>
<p>In manual binding, you must explicitly bind the attributes of the dimensional objects to the database columns that store their data. You use manual binding when you want to bind a dimensional object to existing tables or views. If a dimensional object is bound to certain implementation objects (as shown on the Physical Bindings tab of the Dimension Editor), then unbind the dimensional object and then perform manual binding. For details about unbinding dimensional objects, see <a href="#BABJBCAA">"Unbinding"</a>.</p>
<p><span class="bold">To perform <a id="sthref525"></a><a id="sthref526"></a>manual binding for a dimensional object:</span></p>
<ol>
<li>
<p>Create the implementation objects (tables or views) that you use to store the dimensional object data.</p>
<p>In the case of relational or ROLAP dimensions, create the sequence used to load the surrogate identifier of the dimension. You can choose to use an existing sequence.</p>
</li>
<li>
<p>In the Projects Navigator, right-click the dimensional and select <span class="bold">Open</span>.</p>
<p>The editor for the dimensional object is displayed.</p>
</li>
<li>
<p>On the Physical Bindings tab, right-click a blank area, select <span class="bold">Add</span> and then the type of object that represents the implementation object.</p>
<p>Oracle Warehouse Builder displays the Add a New or Existing &lt;Object&gt; dialog box. For example, if the dimension data is stored in a table, then right-click a blank area on the Physical Bindings tab, select <span class="bold">Add</span> and then <span class="bold">Table</span>. The Add a New or Existing Table dialog box is displayed.</p>
</li>
<li>
<p>Choose the <span class="bold">Select an existing &lt;Object&gt;</span> option and then select the data object from the list of objects displayed in the selection tree.</p>
</li>
<li>
<p>Click <span class="bold">OK</span>.</p>
<p>A node representing the object that you just added is displayed on the canvas.</p>
</li>
<li>
<p>For dimensions, if multiple data object is used to store the dimension data, perform steps 3 to 5 for each data implementation object.</p>
</li>
<li>
<p>For dimensions, map the attributes in each level of the dimension to the columns that store their data. Also map the level relationships to the database column that store their data.</p>
<p>For cubes, map the measures and dimension references to the columns that store the cube data.</p>
<p>To map to the implementation object columns, hold down your mouse on the dimension or cube attribute, drag, and then drop on the column that stores the attribute value.</p>
<p>For example, for the <code>PRODUCTS</code> dimension described in <a href="#CIHBAEBJ">"Dimension Example"</a>, the attribute <code>NAME</code> in the Groups level of the <code>PRODUCTS</code> dimension is stored in the <code>GROUP_NAME</code> attribute of the <code>PRODUCTS_TAB</code> table. Hold down the mouse on the <code>NAME</code> attribute, drag, and drop on the <code>GROUP_NAME</code> attribute of the <code>PRODUCTS_TAB</code> table.</p>
</li>
</ol>
</div>
<!-- class="sect3" -->
<a id="BABJBCAA"></a>
<div class="sect3">
<h4 class="sect3">Unbinding<a id="sthref527"></a><a id="sthref528"></a><a id="sthref529"></a></h4>
<p>Oracle Warehouse Builder also enables you to unbind a dimensional object. Unbinding removes the connections between the dimensional object and the tables that store its data.</p>
<p>To unbind a dimensional object from its current implementation, select the dimensional object in the Projects Navigator and, from the File menu, select <span class="bold">Unbind</span>. Unbinding removes the bindings between the dimensional object and its implementation objects. However, it does not delete the implementation objects.</p>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="BABDGBEF"></a>
<div class="sect2">
<h3 class="sect2">ROLAP Implementation of Dimensional Objects</h3>
<p>A ROLAP implementation, like a relational implementation, stores the dimensional object and its data in a relational form in the database. Additionally, depending on the type of ROLAP implementation, it either creates CWM2 metadata in the OLAP catalog or OLAP cube materialized views.</p>
<p>This section describes how ROLAP implementations are classified.</p>
<p class="subhead2"><a id="sthref530"></a>ROLAP <a id="sthref531"></a><a id="sthref532"></a><a id="sthref533"></a>Implementation</p>
<p>The dimensional object and its data are stored in a relational form in the database and the CWM2 metadata for the dimensional object is stored in the OLAP catalog. It enables to query the dimensional object from Discoverer (for OLAP).</p>
<p class="subhead2"><a id="sthref534"></a>ROLAP with MVs <a id="sthref535"></a><a id="sthref536"></a>Implementation</p>
<p>The dimensional object and its data are stored in a relational form in the database. Additionally, cube-organized materialized views are created in an analytic workspace.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
In Oracle Warehouse Builder 11<span class="italic">g</span> Release 2 (11.2), only star schema tables are supported for the ROLAP with MVs implementation.</div>
<p class="subhead2"><a id="sthref537"></a>About OLAP Catalog</p>
<p>The OLAP catalog is the metadata repository provided for the OLAP option in the Oracle Database. This metadata describes the data stored in relational tables.</p>
<p>When you deploy a dimensional object using Oracle Warehouse Builder, you can specify if the dimensional object metadata should be stored in the OLAP catalog.</p>
<p>OLAP metadata is dynamically projected through a series of views called the active catalog views (views whose names begin with ALL_CWM2_AW).</p>
<p>In Oracle Database 10<span class="italic">g</span>, the OLAP catalog metadata is used by OLAP tools and applications to access data stored in relational star and snowflake schemas. External application such as Discoverer use the OLAP catalog to query relational and multidimensional data. The application must be aware of whether the data is located in relational tables or in analytic workspaces, or must know the mechanism for accessing it.</p>
<p>The OLAP catalog uses the metadata it stores to access data stored in relational tables or views. The OLAP catalog defines logical multidimensional objects and maps them to the physical data sources. The logical objects are dimensions and cubes. The physical data sources are columns of a relational table or view.</p>
</div>
<!-- class="sect2" -->
<a id="CIHFDJCB"></a>
<div class="sect2">
<h3 class="sect2">MOLAP Implementation of <a id="sthref538"></a><a id="sthref539"></a><a id="sthref540"></a>Dimensional Objects</h3>
<p>In a MOLAP implementation, the dimensional object data is stored in an analytic workspace in Oracle Database 10<span class="italic">g</span> or Database 11<span class="italic">g</span>. This analytic workspace, in turn, is stored in the database.</p>
<p>If the location of the computer containing the AW uses Database 10<span class="italic">g</span>, then the OLAP 10<span class="italic">g</span> form analytic workspaces are generated. If the location used Database 11<span class="italic">g</span>, then the OLAP 11<span class="italic">g</span> form analytic workspaces are generated.</p>
<a id="CIHHCHAH"></a>
<div class="sect3">
<h4 class="sect3"><a id="sthref541"></a>Analytic Workspace</h4>
<p>An analytic workspace is a container within the Oracle Database that stores data in a multidimensional format. Analytic workspaces provide the best support to OLAP processing. An analytic workspace can contain a variety of objects such as dimensions and variables.</p>
<p>An analytic workspace is stored in a relational database table, which can be partitioned across multiple disk drives like any other table. You can create many analytic workspaces within a single schema to share among users. An analytic workspace is owned by a particular user and other users can be granted access to it. The name of a dimensional object must be unique within the owner's schema. For more information about analytic workspaces, see <a class="olink OLAUG" href="../../olap.112/e17123/toc.htm"><span class="italic">Oracle OLAP User's Guide</span></a>.</p>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<div class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref542"></a>
<h3 class="sect2">Deployment Options for Dimensional Objects</h3>
<p>After you define dimensional objects, you must deploy them to instantiate them in the database. To specify the type of implementation for dimensional objects, you set the configuration parameter Deployment Option.</p>
<p>Oracle Warehouse Builder provides the following deployment options for dimensions: <a href="#BABFCFBB">"Deploy All"</a>, <a href="#BABEEJEB">"Deploy Data Objects Only"</a>, <a href="#BABIHEHE">"Deploy to Catalog"</a>, and <a href="#BABGEIFD">"Deploy Aggregation"</a>.</p>
<p><a id="BABFCFBB"></a><span class="subhead3">Deploy <a id="sthref543"></a><a id="sthref544"></a><a id="sthref545"></a><a id="sthref546"></a><a id="sthref547"></a>All&nbsp;</span>For a relational or ROLAP implementation, the dimension is deployed to the database and a CWM definition to the OLAP catalog. For a ROLAP with MVs implementation, the dimension is deployed to the database and cube-organized materialized views are created in an analytic workspace. For a MOLAP implementation, the dimension is deployed to the analytic workspace.</p>
<p><a id="BABEEJEB"></a><span class="subhead3">Deploy <a id="sthref548"></a><a id="sthref549"></a><a id="sthref550"></a>Data Objects Only&nbsp;</span>Deploys the dimension only to the database. You can select this option only for dimensions that use a relational or a ROLAP implementation.</p>
<p><a id="BABIHEHE"></a><span class="subhead3">Deploy to <a id="sthref551"></a><a id="sthref552"></a><a id="sthref553"></a>Catalog&nbsp;</span>Deploys the CWM definition to the OLAP catalog only. Use this option if you want applications such as Discoverer for OLAP to access the dimension data after you deploy data only. You can also use this option if you previously deployed with "Data Objects Only" and now want to deploy the CWM Catalog definitions without redeploying the data objects again.</p>
<p><a id="BABGEIFD"></a><span class="subhead3">Deploy <a id="sthref554"></a><a id="sthref555"></a>Aggregation&nbsp;</span>Deploys the aggregations defined on the cube measures. This option is available only for cubes.</p>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="BEIFBIBA"></a><a id="WBETL03003"></a>
<div class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Creating Dimensions</h2>
<p>To create dimensions, use one of the following methods:</p>
<ul>
<li>
<p><a href="#BEIFGDII">"Creating Dimensions Using the Create Dimension Wizard"</a></p>
<p>The wizard enables you to create a fully functional dimension object quickly. When you use the wizard, many settings are defaulted to the most commonly used values. You can modify these settings later using the Dimension Editor. If you choose a relational implementation for the dimension, then the implementation tables and the dimension bindings are also created in the workspace.</p>
<p>For more information about the defaults used by the Dimension wizard, see <a href="#CIHECFCB">"Defaults Used By the Create Dimension Wizard"</a>.</p>
</li>
<li>
<p><a href="#BEIHBAAE">"Creating Dimensions Using the Dimension Editor"</a></p>
<p>The Dimension Editor gives you full control over all aspects of the dimension definition and implementation. This provides maximum flexibility. Use the editor to create a dimension from the start or to edit a previously created dimension.</p>
</li>
<li>
<p>Using the Time Dimension wizard</p>
<p>The Time Dimension wizard enables you to create and populate time dimensions. For more information about the Time Dimension wizard, see <a href="#CIHCJAFD">"Creating Time Dimensions"</a>.</p>
</li>
</ul>
<a id="CIHBAEBJ"></a>
<div class="sect2">
<h3 class="sect2"><a id="sthref556"></a><a id="sthref557"></a>Dimension Example</h3>
<p>An example of a dimension is the Products dimension that you use to organize product data. <a href="#BEIDGFHE">Table 3-4</a> lists the levels in the <code>PRODUCTS</code> dimension and the surrogate identifier and business identifier for each of the levels in the dimension.</p>
<div class="tblformal">
<p class="titleintable"><a id="sthref558"></a><a id="BEIDGFHE"></a>Table 3-4 Products Dimension Level Details</p>
<table class="cellalignment2975" title="Products Dimension Level Details" summary="This table describes the levels and level attributes of the Products dimension." dir="ltr">
<thead>
<tr class="cellalignment2969">
<th class="cellalignment2976" id="r1c1-t15">Level</th>
<th class="cellalignment2976" id="r1c2-t15">Attribute Name</th>
<th class="cellalignment2976" id="r1c3-t15">Identifier</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2969">
<td class="cellalignment2977" id="r2c1-t15" headers="r1c1-t15">
<p>Total</p>
</td>
<td class="cellalignment2977" headers="r2c1-t15 r1c2-t15">
<p>ID</p>
</td>
<td class="cellalignment2977" headers="r2c1-t15 r1c3-t15">
<p>Surrogate</p>
</td>
</tr>
<tr class="cellalignment2969">
<td class="cellalignment2977" id="r3c1-t15" headers="r1c1-t15">&nbsp;</td>
<td class="cellalignment2977" headers="r3c1-t15 r1c2-t15">
<p>Name</p>
</td>
<td class="cellalignment2977" headers="r3c1-t15 r1c3-t15">
<p>Business</p>
</td>
</tr>
<tr class="cellalignment2969">
<td class="cellalignment2977" id="r4c1-t15" headers="r1c1-t15">&nbsp;</td>
<td class="cellalignment2977" headers="r4c1-t15 r1c2-t15">
<p>Description</p>
</td>
<td class="cellalignment2977" headers="r4c1-t15 r1c3-t15">&nbsp;</td>
</tr>
<tr class="cellalignment2969">
<td class="cellalignment2977" id="r5c1-t15" headers="r1c1-t15">
<p>Groups</p>
</td>
<td class="cellalignment2977" headers="r5c1-t15 r1c2-t15">
<p>ID</p>
</td>
<td class="cellalignment2977" headers="r5c1-t15 r1c3-t15">
<p>Surrogate</p>
</td>
</tr>
<tr class="cellalignment2969">
<td class="cellalignment2977" id="r6c1-t15" headers="r1c1-t15">&nbsp;</td>
<td class="cellalignment2977" headers="r6c1-t15 r1c2-t15">
<p>Name</p>
</td>
<td class="cellalignment2977" headers="r6c1-t15 r1c3-t15">
<p>Business</p>
</td>
</tr>
<tr class="cellalignment2969">
<td class="cellalignment2977" id="r7c1-t15" headers="r1c1-t15">&nbsp;</td>
<td class="cellalignment2977" headers="r7c1-t15 r1c2-t15">
<p>Description</p>
</td>
<td class="cellalignment2977" headers="r7c1-t15 r1c3-t15">&nbsp;</td>
</tr>
<tr class="cellalignment2969">
<td class="cellalignment2977" id="r8c1-t15" headers="r1c1-t15">
<p>Product</p>
</td>
<td class="cellalignment2977" headers="r8c1-t15 r1c2-t15">
<p>ID</p>
</td>
<td class="cellalignment2977" headers="r8c1-t15 r1c3-t15">
<p>Surrogate</p>
</td>
</tr>
<tr class="cellalignment2969">
<td class="cellalignment2977" id="r9c1-t15" headers="r1c1-t15">&nbsp;</td>
<td class="cellalignment2977" headers="r9c1-t15 r1c2-t15">
<p>UPC</p>
</td>
<td class="cellalignment2977" headers="r9c1-t15 r1c3-t15">
<p>Business</p>
</td>
</tr>
<tr class="cellalignment2969">
<td class="cellalignment2977" id="r10c1-t15" headers="r1c1-t15">&nbsp;</td>
<td class="cellalignment2977" headers="r10c1-t15 r1c2-t15">
<p>Name</p>
</td>
<td class="cellalignment2977" headers="r10c1-t15 r1c3-t15">&nbsp;</td>
</tr>
<tr class="cellalignment2969">
<td class="cellalignment2977" id="r11c1-t15" headers="r1c1-t15">&nbsp;</td>
<td class="cellalignment2977" headers="r11c1-t15 r1c2-t15">
<p>Description</p>
</td>
<td class="cellalignment2977" headers="r11c1-t15 r1c3-t15">&nbsp;</td>
</tr>
<tr class="cellalignment2969">
<td class="cellalignment2977" id="r12c1-t15" headers="r1c1-t15">&nbsp;</td>
<td class="cellalignment2977" headers="r12c1-t15 r1c2-t15">
<p>Package Type</p>
</td>
<td class="cellalignment2977" headers="r12c1-t15 r1c3-t15">&nbsp;</td>
</tr>
<tr class="cellalignment2969">
<td class="cellalignment2977" id="r13c1-t15" headers="r1c1-t15">&nbsp;</td>
<td class="cellalignment2977" headers="r13c1-t15 r1c2-t15">
<p>Package Size</p>
</td>
<td class="cellalignment2977" headers="r13c1-t15 r1c3-t15">&nbsp;</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<p>The <code>PRODUCTS</code> dimension contains the following hierarchy:</p>
<p>Hierarchy 1: Total &gt; Groups &gt; Product</p>
</div>
<!-- class="sect2" -->
<a id="BEIFGDII"></a>
<div class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><a id="sthref559"></a><a id="sthref560"></a><a id="sthref561"></a>Creating Dimensions Using the Create Dimension Wizard</h3>
<p><span class="bold">To create a dimension using the Create Dimension wizard:</span></p>
<ol>
<li>
<p>From the Projects Navigator expand the Databases node and then the node.</p>
</li>
<li>
<p>Expand the module where you want to create the dimension.</p>
</li>
<li>
<p>Right-click the Dimensions node and select <span class="bold">New Dimension</span>.</p>
<p>Oracle Warehouse Builder displays the Welcome page of the Create Dimension wizard. Click <span class="bold">Next</span> to proceed. The wizard guides you through the following pages:</p>
<ul>
<li>
<p><a href="#CHDCFBID">"Name and Description Page"</a></p>
</li>
<li>
<p><a href="#CHDGCBHE">"Storage Type Page"</a></p>
</li>
<li>
<p><a href="#CHDFBGHC">"Dimension Attributes Page"</a></p>
</li>
<li>
<p><a href="#CHDHHHFA">"Levels Page"</a></p>
</li>
<li>
<p><a href="#CHDDAEFC">"Level Attributes Page"</a></p>
</li>
<li>
<p>(Relational and ROLAP dimensions only) <a href="#CHDIFBEJ">"Slowly Changing Dimension Page"</a></p>
</li>
<li>
<p><a href="#CIHBFEIB">"Pre Create Settings Page"</a></p>
</li>
<li>
<p><a href="#CIHFJFIC">"Dimension Creation Progress Page"</a></p>
</li>
<li>
<p><a href="#CHDBJHIE">"Summary Page"</a></p>
</li>
</ul>
</li>
</ol>
<a id="CHDCFBID"></a>
<div class="sect3">
<h4 class="sect3">Name and Description Page</h4>
<p>Use the Name and Description page to describe your dimension. Enter the following information on this page:</p>
<ul>
<li>
<p><span class="bold">Name:</span> This is the name used to refer to the dimension. The dimension name must be unique within a module.</p>
</li>
<li>
<p><span class="bold">Description:</span> You can type an optional description for the dimension.</p>
</li>
</ul>
</div>
<!-- class="sect3" -->
<a id="CHDGCBHE"></a>
<div class="sect3">
<h4 class="sect3"><a id="sthref562"></a>Storage Type Page</h4>
<p>Use the Storage Type page to specify the type of storage for the dimension. The storage type determines how the dimension data is physically stored in the database. The options you can select for storage type are:</p>
<ul>
<li>
<p><a href="#BABCGAEH">"ROLAP: Relational storage"</a></p>
</li>
<li>
<p><a href="#BABHCGBA">"ROLAP: with MVs"</a></p>
</li>
<li>
<p><a href="#BABDBADB">"MOLAP: Multidimensional storage"</a></p>
</li>
</ul>
<p>You select the storage type based on the volume of data stored at the lowest level of the entire cube and the refresh rate required.</p>
<p><a id="BABCGAEH"></a><span class="subhead3">ROLAP: Relational storage&nbsp;</span>Oracle Warehouse Builder stores the dimension definition and its data in a relational form in the database. Select this option to create a dimension that uses a relational or ROLAP implementation.</p>
<p>Relational storage is preferable to store detailed, high volume data or you have high refresh rates combined with high volumes of data. Use relational storage to perform one of the following:</p>
<ul>
<li>
<p>Store detailed information such as call detail records, point of sales (POS) records and other such transaction oriented data.</p>
</li>
<li>
<p>Refresh high volumes of data at short intervals.</p>
</li>
<li>
<p>Detailed reporting such as lists of order details.</p>
</li>
<li>
<p>Ad hoc queries in which changing needs require more flexibility in the data model.</p>
</li>
</ul>
<p>Operational data stores and enterprise data warehouses are typically implemented using relational storage. You can then derive multi-dimensional implementations from this relational implementation to perform different analysis types.</p>
<p>If the database containing the target schema has the OLAP option installed, then you can also deploy the dimensions to the OLAP catalog.</p>
<p>When you choose a relational implementation for a dimension, the implementation tables used to store the dimension data are created. The default implementation of the dimension is using a star schema. Data for all the levels in the dimension is stored in a single database table.</p>
<p><a id="BABHCGBA"></a><span class="subhead3">ROLAP: with MVs&nbsp;</span>Oracle Warehouse Builder stores the dimension definition and its data in a relational form in the database. Additionally, cube-organized MVs are created in the analytic workspace. Select this option to create a dimension that uses a relational implementation and stores summaries in the analytic workspace. Using this option provides summary management based on cube-organized MVs in Oracle Database11<span class="italic">g</span>. Query performance is greatly improved, must make modification to your queries.</p>
<p>When you choose a ROLAP with MVs implementation:</p>
<ul>
<li>
<p>the implementation tables used to store the dimension data are created. The default implementation of the dimension is using a star schema.</p>
</li>
<li>
<p>the dimension is stored in an analytic workspace that uses the same name as the module to which the dimension belongs. The tablespace that is used to store the analytic workspace is the tablespace that is defined as the users tablespace for the schema that contains the dimension metadata.</p>
</li>
</ul>
<p><a id="BABDBADB"></a><span class="subhead3">MOLAP: Multidimensional storage&nbsp;</span>Oracle Warehouse Builder stores the dimension definition and dimension data in an analytic workspace in the database. Select this option to create a dimension that uses a MOLAP implementation.</p>
<p>Multidimensional storage is preferable when you want to store aggregated data for analysis. The refresh intervals for a multidimensional storage are usually longer than relational storage as data must be pre-calculated and pre-aggregated. Also, the data volumes are typically smaller due to higher aggregation levels. Use multidimensional storage to perform the following:</p>
<ul>
<li>
<p>Advanced analysis such as trend analysis, what-if analysis, or to forecast and allocate data.</p>
</li>
<li>
<p>Constant analysis using a well-defined consistent data model with fixed query patterns.</p>
</li>
</ul>
<p>When you choose a MOLAP implementation, the dimension is stored in an analytic workspace that uses the same name as the module to which the dimension belongs. The tablespace that is used to store the analytic workspace is the tablespace that is defined as the users tablespace for the schema that contains the dimension metadata.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
For information about certain limitations of deploying dimensions to the OLAP catalog, see <a href="#BABHIGIG">"Limitations of Deploying Dimensions to the OLAP Catalog"</a>.</div>
</div>
<!-- class="sect3" -->
<a id="CHDFBGHC"></a>
<div class="sect3">
<h4 class="sect3"><a id="sthref563"></a>Dimension Attributes Page</h4>
<p>Use the Dimension Attributes page to define the dimension attributes. A dimension attribute is applicable to one or more levels in the dimension. By default, the following attributes are created for each dimension: ID, Name, and Description. You can rename the ID attribute or delete it.</p>
<p>Specify the following details for each dimension attribute:</p>
<ul>
<li>
<p><span class="bold">Name:</span> This is the name of the dimension attribute. The name must be unique within the dimension.</p>
</li>
<li>
<p><span class="bold">Description:</span> Type an optional description for the dimension attribute.</p>
</li>
<li>
<p><span class="bold">Identifier:</span> Select the type of dimension attribute. Select one of the following options:</p>
<p><span class="bold">Surrogate:</span> Indicates that the attribute is the surrogate identifier of the dimension. Specifying a surrogate identifier for a dimension is optional.</p>
<p><span class="bold">Business:</span> Indicates that the attribute is the business identifier of the dimension</p>
<p><span class="bold">Parent:</span> Since you can create values-based hierarchies only using the Dimension Editor, this option is displayed only in the Attributes tab of the Dimension Editor. In a value-based hierarchy, selecting Parent indicates that the attribute stores the parent value of an attribute. If the attribute is a regular dimension attribute, then leave this field blank.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
You can create value-based hierarchies only when you choose a MOLAP implementation for the dimension.</div>
<p>The options displayed in the Identifier list depend on the type of dimension. When you create a dimension with a relational or ROLAP implementation, only the Surrogate and Business options are displayed. For MOLAP dimensions, only the Business and Parent options are displayed.</p>
</li>
<li>
<p><span class="bold">Data Type:</span> Select the data type of the dimension attribute from the list.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
The following data types are not supported for MOLAP implementations: <code>BLOB</code>, <code>INTERVAL</code> <code>DAY</code> <code>TO</code> <code>SECOND</code>, <code>INTERVAL YEAR TO MONTH</code>, <code>RAW</code>, <code>TIMESTAMP WITH TIME ZONE</code>, <code>TIMESTAMP WITH LOCAL TIME ZONE</code>.</div>
</li>
<li>
<p><span class="bold">Length:</span> For character data types, specify the length of the attribute.</p>
</li>
<li>
<p><span class="bold">Precision:</span> For numeric data types, define the total number of digits enabled for the column.</p>
</li>
<li>
<p><span class="bold">Scale:</span> For numeric data types, define the total number of digits to the right of the decimal point.</p>
</li>
<li>
<p><span class="bold">Seconds Precision:</span> Represents the number of digits in the fractional part of the datetime field. It can be a number between 0 and 9. The seconds precision is used only for <code>TIMESTAMP</code>, <code>TIMESTAMP WITH TIME ZONE</code>, and <code>TIMESTAMP WITH LOCAL TIME ZONE</code> data types.</p>
</li>
<li>
<p><span class="bold">Descriptor:</span> Select the type of descriptor. The options are: Short Description, Long Description, End date, Time span, Prior period, and Year Ago Period.</p>
<p>Descriptors are very important for MOLAP implementations. For example, in a custom time dimension, you must have Time Span and End Date to enable time series analysis.</p>
</li>
</ul>
</div>
<!-- class="sect3" -->
<a id="CHDHHHFA"></a>
<div class="sect3">
<h4 class="sect3"><a id="sthref564"></a>Levels Page</h4>
<p>The Levels page defines the levels of aggregation in the dimension. A dimension must contain at least one level. The only exception is value-based hierarchies that contain no levels. You can create a value-based hierarchy using the Dimension Editor only.</p>
<p>Enter the following details on the Levels page:</p>
<ul>
<li>
<p><span class="bold">Name:</span> This is the name of the level. The level name must be unique within the dimension.</p>
</li>
<li>
<p><span class="bold">Description:</span> Type an optional description for the level.</p>
</li>
</ul>
<p>List the levels in the dimension such that the parent levels appear above the child levels. Use the arrow keys to move levels so that they appear in this order.</p>
<p><a id="sthref565"></a><a id="sthref566"></a>Oracle Warehouse Builder creates a default hierarchy called STANDARD that contains the levels in the same order that you listed them on the Levels page. The attributes used to store the parent key references of each level are also created. For a relational or ROLAP dimension, two attributes are created, one for the surrogate identifier and one for the business identifier, that correspond to the parent level of each level. For a MOLAP dimension, for each level, one attribute that corresponds to the business identifier of the parent level is created.</p>
<p>For example, the Products dimension contains the following levels: Total, Groups, and Product. Two level relationships are created in the dimension, one each under the Product and Groups levels. For relational or ROLAP dimensions, these level relationships reference the surrogate identifier of the parent level. Level relationships are only displayed in the <a href="#CHDHHBCE">"Physical Bindings Tab"</a> of the Dimension Editor.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
To create additional hierarchies, use the Hierarchies tab of the Dimension Editor as described in <a href="#CHDHCAJB">"Hierarchies Tab"</a>.</div>
</div>
<!-- class="sect3" -->
<a id="CHDDAEFC"></a>
<div class="sect3">
<h4 class="sect3"><a id="sthref567"></a>Level Attributes Page</h4>
<p>The Level Attributes page defines the level attributes of each dimension level. You define level attributes by selecting the dimension attributes that apply to the level. The dimension attributes are defined on the Dimension Attributes page of the Create Dimension wizard.</p>
<p>The Level Attributes page contains two sections: <a href="#BABFBAHD">"Levels"</a> and <a href="#BABDGBJE">"Level Attributes"</a>.</p>
<p><a id="BABFBAHD"></a><span class="subhead3">Levels&nbsp;</span>The Levels section lists all the levels defined in the Levels page of the Create Dimension wizard. Select a level in this section to specify the dimension attributes that this level implements. You select a level by clicking the level name.</p>
<p><a id="BABDGBJE"></a><span class="subhead3">Level Attributes&nbsp;</span>The Level Attributes section lists all the dimension attributes defined in the Dimension Attributes page. For each level, choose the dimension attributes that the level implements. To indicate that a dimension attribute is implemented by a level, select the <span class="bold">Applicable</span> option for the dimension attribute. The name of the level attribute can be different from that of the dimension attribute. Use the <span class="bold">Level Attribute Name</span> field to specify the name of the level attribute.</p>
<p>For example, to specify that the dimension attributes ID, Name, Description, and Budget are implemented by the State level:</p>
<ol>
<li>
<p>Select the State level in the Levels section.</p>
</li>
<li>
<p>In the Level Attributes section, select the <span class="bold">Applicable</span> option for the attributes ID, Name, Description, and Budget.</p>
</li>
</ol>
<p>By default, the following defaults are used:</p>
<ul>
<li>
<p>The attributes ID, Name, and Description are applicable to all levels.</p>
</li>
<li>
<p>All dimension attributes are applicable to the lowest level in the dimension.</p>
</li>
</ul>
</div>
<!-- class="sect3" -->
<a id="CHDIFBEJ"></a>
<div class="sect3">
<h4 class="sect3"><a id="sthref568"></a><a id="sthref569"></a>Slowly Changing Dimension Page<a id="sthref570"></a><a id="sthref571"></a></h4>
<p>Use of Slowly Changing Dimension functionality requires the Oracle Warehouse Builder Enterprise ETL Option.</p>
<p>The Slowly Changing Dimension page enables you to define the type of slowly changing policy used by the dimension. This page is displayed only if you had chosen <span class="bold">Relational storage (ROLAP)</span> as the storage type on the <a href="#CHDGCBHE">"Storage Type Page"</a>.</p>
<p>For more information about Slowly Changing Dimensions concepts, see <a class="olink WBCON" href="../e10581/toc.htm"><span class="italic">Oracle Warehouse Builder Concepts</span></a>.</p>
<p>Select one of the following options for the slowly changing policy:</p>
<ul>
<li>
<p><span class="bold">Type 1: Do not store history:</span> This is the default selection. Oracle Warehouse Builder creates a dimension that stores no history. This is a normal dimension.</p>
</li>
<li>
<p><a id="sthref572"></a><span class="bold">Type 2: Store the complete change history:</span> Select this option to create a Type 2 Slowly Changing Dimension. Oracle Warehouse Builder creates the following two additional dimension attributes and makes them applicable for the lowest level in the Type 2 SCD:</p>
<ul>
<li>
<p>Effective date</p>
</li>
<li>
<p>Expiration date</p>
</li>
</ul>
<p>All the attributes of the lowest level in the Type 2 SCD, except the surrogate and business identifier, are defined as the triggering attributes.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
You cannot create a Type 2 or Type 3 Slowly Changing Dimension if the type of storage is MOLAP.</div>
</li>
<li>
<p><a id="sthref573"></a><span class="bold">Type 3: Store only the previous value:</span> Select this option to create a Type 3 Slowly Changing Dimension. Oracle Warehouse Builder assumes that all the level attributes at the lowest level, excluding the surrogate ID and business ID, should be versioned. For each level attribute that is versioned, an additional attribute is created to store the previous value of the attribute.</p>
</li>
</ul>
</div>
<!-- class="sect3" -->
<a id="CIHBFEIB"></a>
<div class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Pre Create Settings Page</h4>
<p>The Pre Create Settings page displays a summary of the options selected on the previous pages of the Create Dimension wizard. This includes the attributes, levels, hierarchies, storage type, and the slowly changing policy used for the dimension. Oracle Warehouse Builder uses these settings to create the dimension definition and the database tables that implement the dimension. It also binds the dimension attributes to the table columns that store the attribute data.</p>
<p>Click <span class="bold">Next</span> to proceed with the implementation of the dimension. To change any of the options you previously selected, click <span class="bold">Back</span>.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
Review this page carefully as it summarizes the implementation and its objects.</div>
</div>
<!-- class="sect3" -->
<a id="CIHFJFIC"></a>
<div class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Dimension Creation Progress Page</h4>
<p>The Dimension Creation Progress page displays the progress of the dimension implementation that was started on the Pre-Create Settings page. The Message Log section on this page provides information about the individual tasks completed during the dimension implementation. Click <span class="bold">Next</span> to proceed.</p>
</div>
<!-- class="sect3" -->
<a id="CHDBJHIE"></a>
<div class="sect3">
<h4 class="sect3">Summary Page</h4>
<p>The Summary page provides a brief summary of the options that you selected using the Create Dimension wizard. Use the Summary page to review the selected options. Click <span class="bold">Finish</span> to create the dimension. You now have a fully functional dimension. This dimension is displayed under the Dimensions node of the Projects Navigator.</p>
<p>Oracle Warehouse Builder creates the metadata for the following in the workspace:</p>
<ul>
<li>
<p>The dimension object.</p>
</li>
<li>
<p>The objects that store the dimension data.</p>
<p>For a relational implementation, a database table that stores the dimension data is created. Oracle Warehouse Builder binds the attributes in the dimension to the database columns used to store their values.</p>
<p>For a MOLAP implementation, the analytic workspace that stores the dimension data is created.</p>
</li>
<li>
<p>(Relational and ROLAP dimensions only) The database sequence used to generate the surrogate identifier for all the dimension levels.</p>
</li>
</ul>
<p>Oracle Warehouse Builder creates the definitions of these objects in the workspace and not the objects themselves.</p>
<p><a id="BABDGDJJ"></a><span class="subhead3">Deploying Dimensions&nbsp;</span>To create the dimension in the target schema, you must deploy the dimension. For a ROLAP dimension, ensure that you deploy the sequence and the implementation tables before you deploy the dimension. Alternatively, you can deploy all these objects at the same time. For more information see <a href="#BABDGBEF">"ROLAP Implementation of Dimensional Objects"</a>.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
When you delete a dimension, the associated objects such as sequence, database tables, or AWs are not deleted. You must explicitly delete these objects.</div>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="CIHECFCB"></a>
<div class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Defaults Used By the <a id="sthref574"></a><a id="sthref575"></a>Create Dimension Wizard</h3>
<p>When you create a dimension using the Create Dimension wizard, default values are set for some attributes that are used to create the dimension. The following sections describe the defaults used.</p>
<div class="sect3"><!-- infolevel="all" infotype="General" --><a id="sthref576"></a>
<h4 class="sect3">Storage</h4>
<p>For a relational storage, the star schema is used as the default implementation method.</p>
<p>When you choose multidimensional storage, the dimension is stored in an analytic workspace that has the same name as the module in which the dimension is defined. If the analytic workspace does not exist, then it is created. The analytic workspace is stored in the users tablespace of the schema that owns the module.</p>
</div>
<!-- class="sect3" -->
<div class="sect3"><!-- infolevel="all" infotype="General" --><a id="sthref577"></a>
<h4 class="sect3">Dimension Attributes</h4>
<p>Oracle Warehouse Builder creates default dimension attributes with the properties specified in <a href="#BABEBDJC">Table 3-5</a>.</p>
<div class="tblformal">
<p class="titleintable"><a id="sthref578"></a><a id="BABEBDJC"></a>Table 3-5 Default Dimension Attributes</p>
<table class="cellalignment2975" title="Default Dimension Attributes" summary="This table lists the default dimension attributes created by the Create Dimension wizard." dir="ltr">
<thead>
<tr class="cellalignment2969">
<th class="cellalignment2976" id="r1c1-t23">Dimension Attribute Name</th>
<th class="cellalignment2976" id="r1c2-t23">Identifier</th>
<th class="cellalignment2976" id="r1c3-t23">Data Type</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2969">
<td class="cellalignment2977" id="r2c1-t23" headers="r1c1-t23">
<p>ID</p>
</td>
<td class="cellalignment2977" headers="r2c1-t23 r1c2-t23">
<p>Surrogate</p>
</td>
<td class="cellalignment2977" headers="r2c1-t23 r1c3-t23">
<p><code>NUMBER</code></p>
</td>
</tr>
<tr class="cellalignment2969">
<td class="cellalignment2977" id="r3c1-t23" headers="r1c1-t23">
<p>Name</p>
</td>
<td class="cellalignment2977" headers="r3c1-t23 r1c2-t23">
<p>Business</p>
</td>
<td class="cellalignment2977" headers="r3c1-t23 r1c3-t23">
<p><code>VARCHAR2</code></p>
</td>
</tr>
<tr class="cellalignment2969">
<td class="cellalignment2977" id="r4c1-t23" headers="r1c1-t23">
<p>Description</p>
</td>
<td class="cellalignment2977" headers="r4c1-t23 r1c2-t23">&nbsp;</td>
<td class="cellalignment2977" headers="r4c1-t23 r1c3-t23">
<p><code>VARCHAR2</code></p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<p>You can add additional attributes. For your dimension to be valid, you must define the surrogate and business identifiers.</p>
</div>
<!-- class="sect3" -->
<div class="sect3"><!-- infolevel="all" infotype="General" --><a id="sthref579"></a>
<h4 class="sect3">Hierarchies</h4>
<p>Oracle Warehouse Builder creates a default hierarchy called STANDARD that contains all the levels listed on the Levels page of the Create Dimension wizard. The hierarchy uses the levels in the same order that they are listed on the Levels page.</p>
</div>
<!-- class="sect3" -->
<div class="sect3"><!-- infolevel="all" infotype="General" --><a id="sthref580"></a>
<h4 class="sect3">Level Attributes</h4>
<p>The ID, Name, and Description attributes are applicable to each level defined in the dimension. All the dimension attributes are applicable to the lowest level in the dimension. The lowest level is the level that is defined last on the Levels page.</p>
</div>
<!-- class="sect3" -->
<div class="sect3"><!-- infolevel="all" infotype="General" --><a id="sthref581"></a>
<h4 class="sect3">Slowly Changing Dimensions</h4>
<p>When you create a Type 2 SCD, all the attributes of the lowest level, except the surrogate identifier and the business identifier, are versioned. Two additional attributes are created to store the effective date and the expiration date of each record. For example, if you create the <code>Products</code> dimension described in <a href="#CIHBAEBJ">"Dimension Example"</a> as a Type 2 SCD, then the attributes <code>UPC</code>, <code>Package_type</code>, and <code>Package_size</code> are versioned. Oracle Warehouse Builder creates two additional attributes called <code>EXPIRATION_DATE</code> and <code>EFFECTIVE_DATE</code>, of data type <code>DATE</code>, to store the effective date and expiration date of versioned records.</p>
<p>For a Type 3 SCD, all level attributes of the lowest level, except the surrogate identifier and the primary identifier, are versioned. Oracle Warehouse Builder creates additional attributes to store the previous value of each versioned attribute. Additionally, an attribute to store the effective date is created. For example, if you create the Products dimension described in <a href="#CIHBAEBJ">"Dimension Example"</a> as a Type 3 SCD, then additional attributes called <code>PREV_DESCRIPTION</code>, <code>PREV_PACKAGE_TYPE</code>, <code>PREV_PACKAGE_SIZE</code>, and <code>PREV_UPC</code> are created to store the previous values of the versioned attributes. These data type for these attributes are the same the ones used to store the current value of the attribute. Oracle Warehouse Builder also creates an attribute EFFECTIVE_TIME to store the effective time of versioned records. This attribute uses the <code>DATE</code> data type.</p>
</div>
<!-- class="sect3" -->
<div class="sect3"><!-- infolevel="all" infotype="General" --><a id="sthref582"></a>
<h4 class="sect3">Orphan Management Policy</h4>
<p>For relational and ROLAP dimensions, the default orphan management policy for loading data into and removing data from dimensions is No Maintenance.</p>
<p>The Deploy Error Tables option is deselected.</p>
</div>
<!-- class="sect3" -->
<div class="sect3"><!-- infolevel="all" infotype="General" --><a id="sthref583"></a>
<h4 class="sect3">Implementation Objects</h4>
<p>For each dimension, in addition to the dimension object, certain implementation objects are created. The number and type of implementation objects depends on the storage type of the dimension.</p>
<p>For time dimensions, irrespective of the storage type, a map that loads the time dimension is created. The name of the map is the dimension name followed by '_MAP'. For example, the map that loads a time dimension called TIMES must be called TIMES_MAP.</p>
<p class="subhead2"><a id="BABBFFEJ"></a>ROLAP: Relational Storage</p>
<p>For a relational storage, the following implementation objects are created:</p>
<p><span class="bold">Table:</span> A table with the same name as the dimension is created to store the dimension data. A unique key is created on the dimension key column. For example, when you define a dimension called <code>CHANNELS</code>, a table called <code>CHANNELS_TAB</code> is created to store the dimension data. Also, a unique key called <code>CHANNELS_DIMENSION_KEY_PK</code> is created on the dimension key column.</p>
<p><span class="bold">Sequence:</span> For a dimension that uses a relational storage, a sequence that loads the dimension key values is created. For example, for the dimension called <code>CHANNELS</code>, a sequence called <code>CHANNELS_SEQ</code> is created.</p>
<p class="subhead2"><a id="BABBCGAB"></a>ROLAP: with MVs</p>
<p>For a ROLAP with MVs implementation, the implementation table and the sequence that loads the surrogate identifier, as described in <a href="#BABBFFEJ">"ROLAP: Relational Storage"</a>, are created. Additionally, an analytic workspace with the same name as the module containing the dimension is created.</p>
<p class="subhead2"><a id="sthref584"></a>MOLAP: Multidimensional Storage</p>
<p>For a multidimensional storage, if it does not exist, an analytic workspace with the same name as the module that contains the dimension is created. For example, if you create a dimension called <code>PRODUCTS</code> in the <code>SALES_WH</code> module, then the dimension is stored in an analytic workspace called <code>SALES_WH</code>. If an analytic workspace with this name does not exist, it is first created and then the dimension is stored in this analytic workspace.</p>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="BEIHBAAE"></a>
<div class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><a id="sthref585"></a><a id="sthref586"></a>Creating Dimensions Using the Dimension Editor</h3>
<p>The Dimension Editor enables advanced users to create dimensions according to their requirements. You can also edit a dimension using the Dimension Editor.</p>
<p>Use the Dimension Editor to create a dimension to perform one of the following tasks:</p>
<ul>
<li>
<p>Use the snowflake implementation methods.</p>
</li>
<li>
<p>Create value-based hierarchies.</p>
</li>
<li>
<p>Create dimension roles.</p>
</li>
<li>
<p>Skip levels in a hierarchy.</p>
</li>
<li>
<p>Use existing database tables or views to store the dimension data. This is referred to as manual binding.</p>
</li>
<li>
<p>Specify an orphan management policy.</p>
</li>
<li>
<p>Create multiple hierarchies in a dimension.</p>
</li>
</ul>
<p><span class="bold">To define a dimension using the Dimension Editor:</span></p>
<ol>
<li>
<p>From the Projects Navigator expand the Databases node and then the node.</p>
</li>
<li>
<p>Expand the target module where you want to create the dimension.</p>
</li>
<li>
<p>Right-click <span class="bold">Dimensions</span> and select <span class="bold">New</span>.</p>
<p>The New Gallery dialog box is displayed.</p>
</li>
<li>
<p>Select <span class="bold">Dimension without using Wizard</span> and click <span class="bold">OK</span>.</p>
<p>Oracle Warehouse Builder displays the Create Dimension dialog box.</p>
</li>
<li>
<p>Specify a name and an optional description for the dimension and click <span class="bold">OK</span>.</p>
<p>The Dimension Editor is displayed with the Name tab containing the name and description you provided.</p>
<p>To define the dimension, provide information about the following tabs:</p>
<ul>
<li>
<p><a href="#CHDFAHEJ">"Name Tab"</a></p>
</li>
<li>
<p><a href="#CHDBDJAC">"Storage Tab"</a></p>
</li>
<li>
<p><a href="#CHDCHADB">"Attributes Tab"</a></p>
</li>
<li>
<p><a href="#CHDJEHJJ">"Levels Tab"</a></p>
</li>
<li>
<p><a href="#CHDHCAJB">"Hierarchies Tab"</a></p>
</li>
<li>
<p><a href="#CHDIGCHF">"SCD Tab"</a></p>
</li>
<li>
<p><a href="#CHDJEGCJ">"Orphan Tab"</a></p>
</li>
<li>
<p><a href="#CHDHHBCE">"Physical Bindings Tab"</a></p>
</li>
</ul>
<div class="infobox-note">
<p class="notep1">Note:</p>
When you use the Dimension Editor to create a dimension that has a relational implementation, the physical structures that store the dimension data are not automatically created. You must create these structures either manually or using the Bind option in the File menu.</div>
</li>
<li>
<p>For dimensions that have a relational or ROLAP with MVs implementation, bind the attributes in the dimension to the database columns that store their data, see <a href="#CHDHHBCE">"Physical Bindings Tab"</a>.</p>
</li>
</ol>
<a id="CHDFAHEJ"></a>
<div class="sect3">
<h4 class="sect3">Name Tab</h4>
<p>Use the Name tab to describe your dimension. You also specify the type of dimension and the dimension roles on this tab.</p>
<p>The <span class="bold">Name</span> field represents the name of the dimension. The dimension name must be unique within the module. Use the <span class="bold">Description</span> field to enter an optional description for the dimension.</p>
<p><a id="sthref587"></a><span class="subhead3">Dimension Roles&nbsp;</span>Use the Dimension Roles section to define dimension roles. You define the following for each dimension role:</p>
<ul>
<li>
<p><span class="bold">Name:</span> Represents the name of the dimension role.</p>
</li>
<li>
<p><span class="bold">Description:</span> Specify an optional description for the dimension role.</p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink WBCON" href="../e10581/toc.htm"><span class="italic">Oracle Warehouse Builder Concepts</span></a> for more information about dimension roles.</div>
</div>
<!-- class="sect3" -->
<a id="CHDBDJAC"></a>
<div class="sect3">
<h4 class="sect3">Storage Tab</h4>
<p>Use the Storage tab to specify the type of storage for the dimension. The storage options you can select are described in the following sections.</p>
<p><a id="sthref588"></a><span class="subhead3">ROLAP: Relational Storage&nbsp;</span>Select the Relational option to store the dimension and its data in a relational form in the database. Use this option to create a dimension that uses a relational or ROLAP implementation.</p>
<p>For a relational storage, you can select one of the following methods to implement the dimension:</p>
<ul>
<li>
<p><span class="bold">Star schema:</span> Implements the dimension using a star schema. Dimension data is stored in a single database table or view.</p>
</li>
<li>
<p><span class="bold">Snowflake schema:</span> Implements the dimension using a snowflake schema. This dimension data is stored in multiple database table or view.</p>
</li>
<li>
<p><span class="bold">Manual:</span> You must explicitly bind the attributes from the dimension to the database object that stores their data. When you select this option, you are assigned write access to the Physical Binding tab in the Dimension Editor and the auto binding feature is disabled so that you do not accidentally remove the bindings that you manually created.</p>
</li>
</ul>
<p>When you perform auto binding, these storage settings are used to perform auto binding.</p>
<p>Click <span class="bold">Create composite unique key</span> to create a composite unique key on the business identifiers of all levels. For example, if your dimension contains three levels, when you create a composite unique key, a unique key that includes the business identifiers of all three levels is created. Creating a composite unique key enforces uniqueness of a dimension record across the dimension at the database level.</p>
<p>If the database containing the target schema has the OLAP option installed, then you can also deploy the dimensions to the OLAP catalog by setting the configuration parameter as described in <a href="#BABBDBAI">"Specifying How Dimensions are Deployed"</a>.</p>
<p><a id="BABFJJFH"></a><span class="subhead3">ROLAP: with Cube MVs&nbsp;</span>Oracle Warehouse Builder stores the dimension definition and its data in a relational form in the database. Additionally, materialized view summaries are created for the implementation tables in the analytic workspace. Select this option to create a dimension that uses a ROLAP implementation and stores summaries in the analytic workspace.</p>
<p>When you choose a ROLAP with MVs implementation, specify the name of the analytic workspace that should store the summary data using the AW Name field in the MOLAP: Multidimensional storage section.</p>
<p><a id="sthref589"></a><span class="subhead3">MOLAP: Multidimensional storage&nbsp;</span>Select the MOLAP option to store the dimension and its data in a multidimensional form in the database. Use this option to create a dimension that uses a MOLAP implementation. The dimension data is stored in an analytic workspace.</p>
<p>Enter values for the following fields:</p>
<ul>
<li>
<p><span class="bold">AW Name:</span> Enter the name of the analytic workspace that stores the dimension data. Alternatively, you can click the Select button to display a list of MOLAP objects in the current project. Oracle Warehouse Builder displays a node for each module in the project. Expand a module to view the list of dimensional objects in the module. Selecting an object from list stores the dimension in the same analytic workspace as the selected object.</p>
</li>
<li>
<p><span class="bold">AW Tablespace Name:</span> Enter the name of the tablespace in which the analytic workspace is stored.</p>
</li>
</ul>
<p>Dimensions with multiple hierarchies can sometimes use the same source column for aggregate levels (that is, any level above the base). In such cases, you select the <span class="bold">Generate surrogate keys in the analytic workspace</span> option. During a load operation, the level name is added as a prefix to each value. It is recommended that you select this option unless you know that every dimension member is unique.</p>
<p>If you are sure that dimension members are unique across levels, then you can use the exact same names in the analytic workspace as the source. For example, if your relational schema uses numeric surrogate keys to assure uniqueness, then you need not create new surrogate keys in the analytic workspace. The <span class="bold">Use natural keys from data source</span> option enables you to use the same natural keys from the source in the analytic workspace.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
If you edit a dimension and change the Storage type from ROLAP to MOLAP, then the data type of the surrogate identifier is changed to <code>VARCHAR2</code>.</div>
</div>
<!-- class="sect3" -->
<a id="CHDCHADB"></a>
<div class="sect3">
<h4 class="sect3">Attributes Tab</h4>
<p>Use the Attributes tab to define the dimension attributes. The Attributes tab contains two sections: Sequence and Dimension Attributes.</p>
<p><a id="sthref590"></a><span class="subhead3">Sequence&nbsp;</span>The Sequence attribute is required only for dimensions that have a relational implementation and that have a surrogate identifier defined. Use the Sequence field to specify the name of the database sequence that populates the dimension key column. Click <span class="bold">Select</span> to the right of this field to display the Available Sequences dialog box. This dialog box contains a node for each module in the project. Expand a module node to view the sequences contained in the module. Select a sequence from the displayed list.</p>
<p><a id="sthref591"></a><span class="subhead3">Dimension Attributes&nbsp;</span>Use the Dimension Attributes section to define the details of the dimension attributes as described in <a href="#CHDFBGHC">"Dimension Attributes Page"</a>.</p>
</div>
<!-- class="sect3" -->
<a id="CHDJEHJJ"></a>
<div class="sect3">
<h4 class="sect3">Levels Tab</h4>
<p>Use the Levels tab to define the dimension levels and the attributes for each level in the dimension. You also use this tab to create value-based hierarchies.</p>
<p>Before you define level attributes, ensure that the dimension attributes are defined on the Dimension Attributes tab. To define the level attributes for a level, you must select the dimension attributes that the level implements. The Levels tab contains two sections: <a href="#BABJIEGH">"Levels"</a> and <a href="#BABBJJIG">"Level Attributes"</a>.</p>
<p><a id="BABJIEGH"></a><span class="subhead3">Levels&nbsp;</span>The Levels section displays the levels in the dimension. Provide the following details for each level:</p>
<ul>
<li>
<p><span class="bold">Name:</span> Enter the name of the dimension level. The name must be unique within the dimension.</p>
</li>
<li>
<p><span class="bold">Description:</span> Enter an optional description for the level.</p>
</li>
</ul>
<p><a id="BABBJJIG"></a><span class="subhead3">Level Attributes&nbsp;</span>The Level Attributes section lists all the dimension attributes defined on the Attributes tab. The values that you specify in this section are applicable to the level selected in the Levels section. The Level Attributes section contains the following:</p>
<ul>
<li>
<p><span class="bold">Dimension Attribute Name:</span> Represents the name of the dimension attribute.</p>
</li>
<li>
<p><span class="bold">Applicable:</span> Select the Applicable option if the level selected in the Levels section implements this dimension attribute.</p>
</li>
<li>
<p><span class="bold">Level Attribute Name:</span> Represents the name of the level attribute. Use this field to specify a name for the level attribute, a name that is different from that of the dimension attribute. This is an optional field. If you do not specify a name, then the level attribute has the same name as the dimension attribute.</p>
</li>
<li>
<p><span class="bold">Description:</span> Specify an optional description for the level attribute.</p>
</li>
<li>
<p><span class="bold">Default Value:</span> Specify the default value of the level attribute.</p>
</li>
</ul>
<p>For example, to specify that the Groups level implements the dimension attributes ID, Name, and Description:</p>
<ul>
<li>
<p>Select the Groups level in the <span class="bold">Levels</span> section.</p>
</li>
<li>
<p>In the Level Attributes section, select the <span class="bold">Applicable</span> option for the ID, Name, and Description attributes.</p>
</li>
</ul>
</div>
<!-- class="sect3" -->
<a id="CHDHCAJB"></a>
<div class="sect3">
<h4 class="sect3"><a id="sthref592"></a><a id="sthref593"></a>Hierarchies Tab</h4>
<p>Use the Hierarchies tab to create dimension hierarchies. The Hierarchies tab contains two sections: <a href="#BABBCJEB">"Hierarchies"</a> and <a href="#BABJBJDH">"Levels"</a>.</p>
<p><a id="BABBCJEB"></a><span class="subhead3">Hierarchies&nbsp;</span>Use the Hierarchies section to define the hierarchies in the dimension. For each hierarchy, define the following:</p>
<ul>
<li>
<p><span class="bold">Hierarchy:</span> Represents the name of the hierarchy. To create a new hierarchy, enter the name of the hierarchy in this field.</p>
</li>
<li>
<p><span class="bold">Value-based:</span> Select this option to create a value-based hierarchy. A value-based hierarchy contains no levels. It must have an attribute identified as the parent identifier. Since you can create value-based hierarchies only for MOLAP dimensions, this option is displayed only if you select <span class="bold">MOLAP: Multidimensional storage</span> on the Storage tab.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink WBCON" href="../e10581/toc.htm"><span class="italic">Oracle Warehouse Builder Concepts</span></a> for information about value-based hierarchies.</div>
</li>
<li>
<p><span class="bold">Description:</span> Enter an optional description for the hierarchy.</p>
</li>
<li>
<p><span class="bold">Default:</span> Select the Default option if the hierarchy is the default hierarchy for the dimension. When a dimension has multiple hierarchy, query tools show the default hierarchy. It is recommended that you set the most commonly used hierarchy as the default hierarchy.</p>
</li>
</ul>
<p>To delete a hierarchy, right-click the cell to the left of the <span class="bold">Hierarchy</span> field and select <span class="bold">Delete</span>. Alternatively, you can select the hierarchy by clicking the cell to the left of the Hierarchy field and press the Delete button.</p>
<p>When you create a hierarchy, ensure that you create the attributes that store the parent level references for each level. For a relational or ROLAP dimension, create two attributes to store the surrogate identifier reference and business identifier reference of each level. For a MOLAP dimension, create one attribute to store the reference to the business identifier of the parent level of each level.</p>
<p><a id="BABJBJDH"></a><span class="subhead3">Levels&nbsp;</span>The Levels section lists all the levels defined on the Levels tab of the Dimension Editor. Use this section to specify the levels used in each hierarchy. The Levels section contains the following:</p>
<ul>
<li>
<p><span class="bold">Level:</span> Represents the name of the level. Click the list to display all the levels defined in the dimension.</p>
</li>
<li>
<p><span class="bold">Skip to Level:</span> Represents the parent level of the level indicated by the Level field. Use this field to define skip-level hierarchies.</p>
<p>For example, the Products dimension contains the following hierarchy:</p>
<p>Total &gt; Product</p>
<p>This hierarchy does not include the Groups level. Thus the Product level must skip the Groups level and use the Total level as a parent. To create this hierarchy, select the Product level in the <span class="bold">Level</span> field and select Total from the <span class="bold">Skip to Level</span> list.</p>
</li>
<li>
<p><span class="bold">Summary Level:</span> Represents the dimension level used to load summaries in the analytic workspace. This option is displayed only if you select <span class="bold">ROLAP: with Cube MVs</span> on the Storage tab.</p>
</li>
</ul>
<p>Use the arrows to the left of the Levels section to change the order in which the levels appear in the section.</p>
</div>
<!-- class="sect3" -->
<a id="CHDIGCHF"></a>
<div class="sect3">
<h4 class="sect3">SCD Tab</h4>
<p>Use this tab to specify the type of slowly changing policy that the dimension implements. Since you can create a Slowly Changing Dimension only for dimensions that use a relational implementation, the options on this tab are enabled only if you select <span class="bold">ROLAP: Relational Storage</span> or <span class="bold">ROLAP: with Cube MVs</span> on the Storage tab.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
If you choose a MOLAP implementation on the <a href="#CHDBDJAC">"Storage Tab"</a>, then the options on this tab are disabled.</div>
<p>The options that you can select for slowly changing policy are:</p>
<ul>
<li>
<p><span class="bold">Type 1: Do not keep history:</span> Creates a normal dimension that stores no history.</p>
</li>
<li>
<p><span class="bold">Type 2: Store the complete change history:</span> Select this option to create a Type 2 SCD. Click <span class="bold">Settings</span> to specify the additional details such as triggering attribute, effective date and expiration date for each level.as described in <a href="#BEIDFDCG">"Creating Type 2 Slowly Changing Dimensions Using the Dimension Editor"</a>.</p>
</li>
<li>
<p><span class="bold">Type 3: Store only the previous value:</span> Select this option to create a Type 3 SCD. Click <span class="bold">Settings</span> to specify the additional details such as effective date and the attributes used to store the previous value of versioned attributes as described in <a href="#BEIIIHJJ">"Creating Type 3 Slowly Changing Dimensions Using the Dimension Editor"</a>.</p>
</li>
</ul>
<div class="infobox-note">
<p class="notep1">Note:</p>
You cannot create a Type 2 or Type 3 Slowly Changing Dimension if you have specified the type of storage as MOLAP.</div>
<p>When you create a Type 2 or Type 3 SCD using the Dimension Editor, you must create the dimension attributes that store the effective data and expiration date and apply them to the required levels.</p>
</div>
<!-- class="sect3" -->
<a id="CHDJEGCJ"></a>
<div class="sect3">
<h4 class="sect3"><a id="sthref594"></a><a id="sthref595"></a><a id="sthref596"></a>Orphan Tab</h4>
<p>The Orphan tab defines the orphan management policy used while loading data into the dimension or removing data from the dimension. This tab contains two sections: Orphan Management for Removal and Orphan Management for Loading.</p>
<p><a id="sthref597"></a><span class="subhead3">Orphan Management for Loading&nbsp;</span>Use this section to specify the orphan management policy for loading data into a dimension. You can specify different orphan management policies for records that have null parent records and records that have invalid parent records. Use the options under the heading Null parent key values to specify the orphan management policy for records that have a null parent. Use the options under the heading Invalid parent key values to specify the orphan management policy for records that have an invalid parent record.</p>
<p>For records with a null parent and records with an invalid parent, select one of the following orphan management policies:</p>
<ul>
<li>
<p><span class="bold">No Maintenance:</span> Oracle Warehouse Builder does not actively detect, reject, or fix orphan rows.</p>
</li>
<li>
<p><span class="bold">Default Parent:</span> Oracle Warehouse Builder assigns a default parent row for any row that does not have an existing parent row at the time of loading data. You use the Settings button to define the default parent row. For more information about assigning a default parent row, refer <a href="#CIHBFJGJ">"Specifying the Default Parent for Orphan Rows"</a>.</p>
</li>
<li>
<p><span class="bold">Reject Orphan:</span> Oracle Warehouse Builder does not insert the row if it does not have an existing parent row.</p>
</li>
</ul>
<p><a id="sthref598"></a><span class="subhead3">Orphan Management for Removal&nbsp;</span>You use this section to specify the orphan management policy for removing data from a dimension. Select one of the following options:</p>
<ul>
<li>
<p><span class="bold">No maintenance:</span> Oracle Warehouse Builder does not actively detect, reject, or fix orphan rows.</p>
</li>
<li>
<p><span class="bold">Reject Removal:</span> Oracle Warehouse Builder does not remove a row if the row has existing child rows.</p>
</li>
</ul>
<p><a id="sthref599"></a><span class="subhead3">Deployment Options&nbsp;</span></p>
<p>Select <span class="bold">Deploy Error Table(s)</span> to generate and deploy the error tables related to orphan management along with the dimension.</p>
</div>
<!-- class="sect3" -->
<a id="CIHBFJGJ"></a>
<div class="sect3">
<h4 class="sect3">Specifying the Default Parent for Orphan Rows</h4>
<p>Use the Default Parent dialog to <a id="sthref600"></a>specify the default parent record of an orphan row. You can specify a default parent record for all the dimension levels.</p>
<p>The Default Parent dialog contains a row for each dimension level. displays a table that contains the following four columns:</p>
<ul>
<li>
<p><span class="bold">Levels:</span> The Levels column displays a node for each level in the dimension. Expand a level node to display all the attributes in the level.</p>
</li>
<li>
<p><span class="bold">Identifying Attribute:</span> Represents the name of the level attribute.</p>
</li>
<li>
<p><span class="bold">Data Type:</span> Displays the data type of the attribute.</p>
</li>
<li>
<p><span class="bold">Default Value:</span> Specify a default value for the level attribute.</p>
</li>
</ul>
</div>
<!-- class="sect3" -->
<a id="CHDHHBCE"></a>
<div class="sect3">
<h4 class="sect3">Physical Bindings Tab<a id="sthref601"></a></h4>
<p>Use the Physical Bindings tab to bind the dimension to its implementation objects. Binding is the process of specifying the database columns that stores the data of each attribute and level relationship in the dimension. When you use the Create Dimension wizard to create a dimension, binding is automatically performed. When you use the editor to create a dimension, you must specify the details of the database tables or views that store the dimension data.</p>
<p>Choose one of the following options to bind dimension attributes to the database columns that store their data:</p>
<ul>
<li>
<p>Auto binding</p>
</li>
<li>
<p>Manual binding</p>
</li>
</ul>
<p><a id="sthref602"></a><span class="subhead3">Auto Binding&nbsp;</span>When you perform auto binding, Oracle Warehouse Builder maps the attributes in the dimension to the database columns that store their data. When you perform auto binding for the first time, Oracle Warehouse Builder also creates the tables that are used to store the dimension data.</p>
<p>To perform auto binding, select the dimension in the Projects Navigator or on the Physical Bindings tab. From the file menu, select <span class="bold">Bind</span>. Alternatively, right-click the dimension in the Projects Navigator and select <span class="bold">Bind</span>. For more information about the auto binding rules, see <a href="#BABGCHIC">"Auto Binding"</a>.</p>
<p>When you perform auto binding on a dimension that is bound, Oracle Warehouse Builder uses the following <a id="sthref603"></a><a id="sthref604"></a>rules:</p>
<ul>
<li>
<p>If the implementation method of the dimension remains the same, then Oracle Warehouse Builder rebinds the dimensional object to the existing implementation objects. The implementation method can be either Star or Snowflake.</p>
<p>For example, you create a Products dimension using the star schema implementation method and perform auto binding. The dimension data is stored in a table called Products. You modify the dimension definition at a later date but retain the implementation method as star. When you now auto bind the Products dimension, Oracle Warehouse Builder rebinds the Products dimension attributes to the same implementation tables.</p>
</li>
<li>
<p>If the implementation method of a dimension is changed, then Oracle Warehouse Builder deletes the old implementation objects and creates a new set of implementation tables. To retain the old implementation objects, then you must first unbind the dimensional object and then perform auto binding.</p>
<p>For example, you create a Products dimension using the star schema implementation method and bind it to the implementation table. You now edit this dimension and change its implementation method to snowflake. When you now perform auto binding for the modified Products dimension, Oracle Warehouse Builder deletes the table that stores the dimension data, creates new implementation tables, and binds the dimension attributes and relationships to the new implementation tables.</p>
</li>
</ul>
<p><a id="sthref605"></a><span class="subhead3">Manual Binding&nbsp;</span>In manual binding, you must explicitly bind the attributes in each level of the dimension to the database columns that store their data. You can either bind to existing tables or create new tables and bind to them. You would typically use manual binding to bind existing tables to a dimension. Use manual binding if no auto binding or rebinding is required.</p>
<p>If the dimension is defined without a surrogate key, the dimension key attribute must be left unbound.</p>
<p><span class="bold">To perform manual binding:</span></p>
<ol>
<li>
<p>In the Projects Navigator, right-click the dimension and select <span class="bold">Open</span>.</p>
<p>Oracle Warehouse Builder displays the editor for this dimension.</p>
</li>
<li>
<p>On the Physical Bindings tab, right-click a blank area, select <span class="bold">Add</span> and then select the type of database object that stores the dimension data.</p>
<p>For example, if the dimension data is stored in a table, then right-click a blank area on the Physical Bindings tab, select <span class="bold">Add</span> and then <span class="bold">Table</span>. Oracle Warehouse Builder displays the Add a new or existing Table dialog box. To store the dimension data, you either select an existing table or create a new table.</p>
</li>
<li>
<p>Repeat Step 2 as many times as the number of database objects that are used to store the dimension data. For example, if the dimension data is stored in three database tables, then perform Step 2 thrice.</p>
</li>
<li>
<p>Bind each attribute in the dimension to the database column that stores its data.</p>
</li>
</ol>
<p>After you define a dimension and perform binding (for ROLAP dimensions only), you must deploy the dimension and its associated objects. For more information about deploying dimensions, see <a href="#BABDGDJJ">"Deploying Dimensions"</a>.</p>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="BABHIGIG"></a>
<div class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Limitations of Deploying <a id="sthref606"></a>Dimensions to the OLAP Catalog</h3>
<p>For dimensions with a ROLAP implementation, there are implications and limitations related to the various dimension structures when either reporting on the underlying tables or deploying to the OLAP catalog. Although the dimension may be successfully deployed, errors could occur when other applications, such as Discoverer access the OLAP catalog.</p>
<p>The following are items that are affected by this limitation:</p>
<ul>
<li>
<p>No reporting tool has metadata about all aspects of dimensional metadata you capture, so this must be incorporated into the query/reports. Otherwise you see odd information because of the way the data is populated in the implementation tables.</p>
<p>The dimension and cube implementation tables store solved rows which contain negative key values. You can filter out these rows in your queries or reports. When you create a query or report, use the view that is associated with a dimension instead of the dimension itself. Each dimension has a view that is associated with it. The view name is specified in the configuration parameter View Name of the dimension or cube.</p>
</li>
<li>
<p>Skip-level hierarchies and ragged hierarchy metadata is not deployed to the OLAP catalog.</p>
<p>If you create a dimension that contains skip-level or ragged hierarchies, then the metadata for these is stored in Oracle Warehouse Builder repository but is not deployed to the OLAP catalog.</p>
</li>
<li>
<p>Dimensions with multiple hierarchies must have all dimension attributes mapped along all the hierarchies.</p>
</li>
</ul>
</div>
<!-- class="sect2" -->
<div class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref607"></a>
<h3 class="sect2">Using Control <a id="sthref608"></a><a id="sthref609"></a><a id="sthref610"></a>Rows</h3>
<p>Control rows enable you to link fact data to a dimension at any level. For example, you may want to reuse a Time dimension in two different cubes to record the budget data at the month level and the actual data at the day level. Because of the way dimensions are loaded with control rows, you can perform this without any additional definitions. Each member in a dimension hierarchy is represented using a single record.</p>
<p>Oracle Warehouse Builder creates control rows when you load data into the dimension. All control rows have negative dimension key values starting from -2. For each level value of higher levels, a row is generated that can act as a unique linking row to the fact table. All the lower levels in this linking or control rows are nulled out.</p>
<p>Consider the Products dimension described in <a href="#CIHBAEBJ">"Dimension Example"</a>. You load data into this dimension from a table that contains four categories of products. Oracle Warehouse Builder inserts control rows in the dimension as shown in <a href="#BCGIGGFI">Table 3-6</a>. These rows enable you to link to a cube at any dimension level. The table does not contain all the dimension attribute values.</p>
<div class="tblformal">
<p class="titleintable"><a id="sthref611"></a><a id="BCGIGGFI"></a>Table 3-6 Control Rows Created for the Products Dimension</p>
<table class="cellalignment2975" title="Control Rows Created for the Products Dimension" summary="This table provides an example of control rows." dir="ltr">
<thead>
<tr class="cellalignment2969">
<th class="cellalignment2976" id="r1c1-t30">Dimension Key</th>
<th class="cellalignment2976" id="r1c2-t30">Total Name</th>
<th class="cellalignment2976" id="r1c3-t30">Categories Name</th>
<th class="cellalignment2976" id="r1c4-t30">Product Name</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2969">
<td class="cellalignment2977" id="r2c1-t30" headers="r1c1-t30">
<p>-3</p>
</td>
<td class="cellalignment2977" headers="r2c1-t30 r1c2-t30">
<p>TOTAL</p>
</td>
<td class="cellalignment2977" headers="r2c1-t30 r1c3-t30">&nbsp;</td>
<td class="cellalignment2977" headers="r2c1-t30 r1c4-t30">&nbsp;</td>
</tr>
<tr class="cellalignment2969">
<td class="cellalignment2977" id="r3c1-t30" headers="r1c1-t30">
<p>-9</p>
</td>
<td class="cellalignment2977" headers="r3c1-t30 r1c2-t30">
<p>TOTAL</p>
</td>
<td class="cellalignment2977" headers="r3c1-t30 r1c3-t30">
<p>Hardware</p>
</td>
<td class="cellalignment2977" headers="r3c1-t30 r1c4-t30">&nbsp;</td>
</tr>
<tr class="cellalignment2969">
<td class="cellalignment2977" id="r4c1-t30" headers="r1c1-t30">
<p>-10</p>
</td>
<td class="cellalignment2977" headers="r4c1-t30 r1c2-t30">
<p>TOTAL</p>
</td>
<td class="cellalignment2977" headers="r4c1-t30 r1c3-t30">
<p>Software</p>
</td>
<td class="cellalignment2977" headers="r4c1-t30 r1c4-t30">&nbsp;</td>
</tr>
<tr class="cellalignment2969">
<td class="cellalignment2977" id="r5c1-t30" headers="r1c1-t30">
<p>-11</p>
</td>
<td class="cellalignment2977" headers="r5c1-t30 r1c2-t30">
<p>TOTAL</p>
</td>
<td class="cellalignment2977" headers="r5c1-t30 r1c3-t30">
<p>Electronics</p>
</td>
<td class="cellalignment2977" headers="r5c1-t30 r1c4-t30">&nbsp;</td>
</tr>
<tr class="cellalignment2969">
<td class="cellalignment2977" id="r6c1-t30" headers="r1c1-t30">
<p>-12</p>
</td>
<td class="cellalignment2977" headers="r6c1-t30 r1c2-t30">
<p>TOTAL</p>
</td>
<td class="cellalignment2977" headers="r6c1-t30 r1c3-t30">
<p>Peripherals</p>
</td>
<td class="cellalignment2977" headers="r6c1-t30 r1c4-t30">&nbsp;</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<div class="sect3"><!-- infolevel="all" infotype="General" --><a id="sthref612"></a>
<h4 class="sect3">Determining the <a id="sthref613"></a>Number of Rows in a Dimension</h4>
<p>To obtain the real number of rows in a dimension, count the number of rows by including a <code>WHERE</code> clause that excludes the NULL rows. For example, to obtain a count on Products, count the number of rows including a <code>WHERE</code> clause to exclude NULL rows in Product.</p>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="BEIHFEAG"></a><a id="WBETL03007"></a>
<div class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Creating Slowly Changing Dimensions</h2>
<p>You can create an SCD either using the Create Dimension Wizard or the Dimension Editor.</p>
<p>To create an SCD using the Create Dimension Wizard, use the Slowly Changing Dimension page of the Create Dimension Wizard. You only specify the type of SCD to create on this page. Oracle Warehouse Builder assumes default values for all other required parameters. For more information about the Slowly Changing Dimension page, see <a href="#CHDIFBEJ">"Slowly Changing Dimension Page"</a>.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
Type 1 does not require additional licensing; however, Type 2 and Type 3 SCDs require the Oracle Warehouse Builder Enterprise ETL Option.</div>
<p>To create a Type 2 SCD or a Type 3 SCD, in addition to the regular dimension attributes, you need additional attributes that perform the following roles.</p>
<p class="subhead2"><a id="BABFDDJB"></a>Triggering Attribute</p>
<p>These are attributes for which historical values must be stored. For example, in the <code>PRODUCTS</code> dimension, the attribute <code>PACKAGE_TYPE</code> of the Product level can be a triggering attribute. When the value of this attribute changes, the old value must be stored.</p>
<p class="subhead2"><a id="sthref614"></a>Effective Date</p>
<p>This attribute stores the start date of the record's life span.</p>
<p class="subhead2"><a id="sthref615"></a>Expiration Date</p>
<p>This attribute stores the end date of the record's life span.</p>
<p>An attribute can play only one of the above roles. For example, an attribute cannot be a regular attribute and an effective date attribute. When you use the wizard to create a Type 2 SCD or a Type 3 SCD, Oracle Warehouse Builder creates the required additional attributes.</p>
<a id="BEIDFDCG"></a>
<div class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><a id="sthref616"></a><a id="sthref617"></a>Creating Type 2 Slowly Changing Dimensions Using the Dimension Editor</h3>
<p>A Type 2 SCD stores the full history of values for each attribute and level relationship.</p>
<p>To create a Type 2 SCD using the Dimension Editor, define the following:</p>
<ul>
<li>
<p>The attributes that trigger history saving.</p>
</li>
<li>
<p>The attributes that store the effective date and the expiration date.</p>
</li>
</ul>
<div class="infobox-note">
<p class="notep1">Note:</p>
You can create a Type 2 SCD only for dimensions that have a relational implementation.</div>
<p><span class="bold">To create a Type 2 SCD using the Dimension Editor:</span></p>
<ol>
<li>
<p>From the Projects Navigator, expand the Databases node and then the node.</p>
</li>
<li>
<p>Expand the target module where you want to create the Type 2 SCD.</p>
</li>
<li>
<p>Right-click <span class="bold">Dimensions,</span> select <span class="bold">New</span>, then <span class="bold">Dimension without using Wizard</span>.</p>
</li>
<li>
<p>Provide information about the Name tab of the Dimension Editor as described in the <a href="#CHDFAHEJ">"Name Tab"</a>.</p>
</li>
<li>
<p>On the Attributes tab, for each level, create two additional attributes to store the effective date and the expiration date. For more information about creating attributes, see <a href="#CHDCHADB">"Attributes Tab"</a>.</p>
</li>
<li>
<p>Provide information about the following tabs of the Dimension Editor:</p>
<ul>
<li>
<p><a href="#CHDJEHJJ">"Levels Tab"</a></p>
</li>
<li>
<p><a href="#CHDHCAJB">"Hierarchies Tab"</a></p>
</li>
</ul>
</li>
<li>
<p>On the Slowly Changing tab, select the <span class="bold">Type 2: Store the complete change history</span> option.</p>
</li>
<li>
<p>Click <span class="bold">Settings</span> to the right of this option.</p>
<p>Oracle Warehouse Builder displays the Type 2 Slowly Changing Policy dialog box. Specify the details of the Type 2 SCD as described in <a href="#CHDEJJEF">"Type 2 Slowly Changing Dimension Dialog Box"</a>.</p>
</li>
<li>
<p>Provide information about the <a href="#CHDBDJAC">"Storage Tab"</a> of the Dimension Editor.</p>
</li>
</ol>
<a id="CHDEJJEF"></a>
<div class="sect3">
<h4 class="sect3">Type 2 Slowly Changing Dimension Dialog Box</h4>
<p>Use the Type 2 Slowly Changing Dimension dialog box to specify the effective date attribute, expiration date attribute, and the versioned attribute. This dialog box displays a table that contains the following columns: Levels, Identifying Attribute, Data Type, and Record History.</p>
<ul>
<li>
<p><span class="bold">Levels:</span> Represents the levels in the dimension. Expand a level node to view its level attributes.</p>
</li>
<li>
<p><span class="bold">Identifying Attribute:</span> Represents the level attribute.</p>
</li>
<li>
<p><span class="bold">Data Type:</span> Represents the data type of the level attribute.</p>
</li>
<li>
<p><span class="bold">Record History:</span> Use this list to indicate that an attribute is versioned or that it stores the effective date or expiration date of the level record.</p>
<ul>
<li>
<p><span class="bold">Trigger History:</span> Select this option for an attribute if the attribute should be versioned.</p>
</li>
<li>
<p><span class="bold">Effective Date:</span> Select this option for an attribute if it stores the value of the effective date of the level record.</p>
</li>
<li>
<p><span class="bold">Expiration Date:</span> Select this option for an attribute id it stores the expiration date of the level record.</p>
</li>
</ul>
<p>The surrogate ID and the business ID of a level cannot be versioned.</p>
</li>
</ul>
<p>For example, in the <code>PRODUCTS</code> Type 2 SCD, the attributes that store the effective date and expiration date are <code>EFFECTIVE_TIME</code> and <code>EXPIRATION_TIME</code> respectively. You must create these dimension attributes and apply them to the <code>Product</code> level. The attribute <code>PACKAGE_TYPE</code> should be versioned. Thus, for this attribute, you select <span class="bold">Trigger history</span> under the Record History column. When the value of the <code>PACKAGE_TYPE</code> attribute changes, the existing record is closed and a new record is created using the latest values.</p>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="BCGIBEEI"></a>
<div class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Updating Type 2 <a id="sthref618"></a><a id="sthref619"></a>Slowly Changing Dimensions</h3>
<p>All the levels in a dimension need not store historical data. Typically, only the lowest level, also called the leaf level, stores historical data. However, you can also store historical data for other dimension levels.</p>
<p>When a record in a Type 2 SCD is versioned, the old record is marked as closed and a new record is created with the updated values. The expiration date of the record is set to indicate that it is closed. The new record is referred to as the current record and, by default, has a default expiration of NULL. While loading data into the Type 2 SCD, you can set the expiration date by using the configuration parameters for the Dimension operator. For more information, see <a href="src_tgt_opers.htm#CHDBAEIB">"Dimension Operator"</a>.</p>
<p>You can update the following in a Type 2 SCD:</p>
<ul>
<li>
<p>Leaf level attribute</p>
</li>
<li>
<p>Leaf level versioned attribute</p>
</li>
<li>
<p>Non-leaf level attribute</p>
</li>
<li>
<p>Non-leaf level versioned attribute</p>
</li>
<li>
<p>Leaf level parent attribute</p>
</li>
</ul>
<p>The following sections describe Oracle Warehouse Builder functionality for these update operations.</p>
<p><a id="sthref620"></a><span class="subhead3">Updating a Leaf Level Attribute&nbsp;</span></p>
<p>When you update a leaf level attribute, the value of this attribute is updated in the corresponding record.</p>
<p>For example, if you update the value of <code>C_HOME_PHONE</code> in a <code>Customer</code> level record, then the record is updated with the changed phone number.</p>
<p><a id="sthref621"></a><span class="subhead3">Updating a Leaf Level Versioned Attribute&nbsp;</span></p>
<p>When you update a leaf level versioned attribute, the current record is marked as closed. A new record is created with the updated value of the versioned attribute.</p>
<p>For example, if you update the marital status of a customer, then the current record is marked as closed. A new record with the updated marital status is created for that customer.</p>
<p><a id="sthref622"></a><span class="subhead3">Updating a non-leaf Level Attribute&nbsp;</span></p>
<p>When you update an attribute in a non-leaf level, the open records of the non-leaf level and the child records corresponding to this non-leaf level are updated with the new value.</p>
<p>For example, when you update the <code>H_ADDRESS</code> attribute in a <code>Household</code> level record, the current open record for that household is updated. All open child records corresponding to that particular household are also updated.</p>
<p><a id="sthref623"></a><span class="subhead3">Updating a non-leaf Level Versioned Attribute&nbsp;</span></p>
<p>The update functionality depends on whether hierarchy versioning is enabled or disabled.</p>
<p><span class="bold">Hierarchy Versioning Disabled</span></p>
<p>The non-leaf level record corresponding to the versioned attribute is closed and a new record is created with the updated value. The child records of this non-leaf level record are updated with the changed value of the non-leaf level versioned attribute.</p>
<p>For example, when the value of <code>H_ZIP</code> in a <code>Household</code> level record is updated, the current open record for that household is closed. A new record with the updated value of <code>H_ZIP</code> is created. The value of <code>H_ZIP</code> is updated in all the child records corresponding to the updated household record.</p>
<p>In this case, when you validate or deploy, a warning message appears to inform user that the versioning of non-leaf level does not results in the versioning of corresponding child level records.</p>
<p><span class="bold">Hierarchy Versioning Enabled</span></p>
<p>The non-leaf level record corresponding to the versioned attribute is closed and a new record is created with the updated value. Child records corresponding to this non-leaf level record are also closed and new child records are created with the updated value.For example, when the value of <code>H_ZIP</code> in a <code>Household</code> level record is updated, the current open record for that household and its corresponding child records are closed. New records are created, with the updated value, for the household and for the child records corresponding to this household.</p>
<p><a id="sthref624"></a><span class="subhead3">Updating the Leaf Level Parent Attribute&nbsp;</span></p>
<p>In addition to updating the level attributes in a Type 2 SCD, you can also update the parent attribute of a child record. In the <code>Customers</code> Type 2 SCD, the attribute <code>H_BUSN_ID</code> in a <code>Customer</code> record stores the parent attribute of that customer. The update functionality for the leaf level parent attribute depends on whether hierarchy versioning is enabled or disabled.</p>
<p><span class="bold">Hierarchy Versioning Disabled</span></p>
<p>The child record is updated with the new parent attribute value.</p>
<p>For example, when you update the value of the <code>H_BUSN_ID</code> attribute representing the parent record of a <code>Customer</code> record, the <code>Customer</code> record is updated with the new values.</p>
<p><span class="bold">Hierarchy Versioning Enabled</span></p>
<p>The child record is closed and a new record with the changed parent attribute value is created.</p>
<p>For example, when you update the <code>H_BUSN_ID</code> attribute of a customer record, the current customer record is closed. A new customer record with the updated <code>H_BUSN_ID</code> is created.</p>
</div>
<!-- class="sect2" -->
<a id="BEIIIHJJ"></a>
<div class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><a id="sthref625"></a><a id="sthref626"></a>Creating Type 3 Slowly Changing Dimensions Using the Dimension Editor</h3>
<p>A Type 3 SCD stores two versions of values for certain selected attributes. You can create a Type 3 SCD only for dimensions that have a relational implementation. Specify the following:</p>
<ul>
<li>
<p>The attributes that should be versioned.</p>
</li>
<li>
<p>The attributes that store the previous value of each versioned attribute.</p>
<p>For each versioned attribute, you must create an additional attribute to store the previous value of the attribute. For example, to version the Population attribute, then you create an additional attribute to store the previous value of population.</p>
</li>
</ul>
<p><span class="bold">To create a Type 3 SCD:</span></p>
<ol>
<li>
<p>From the Projects Navigator, expand the Database node and then the node.</p>
</li>
<li>
<p>Expand the target module where you want to create the Type 3 SCD.</p>
</li>
<li>
<p>Right-click <span class="bold">Dimensions</span>, select <span class="bold">New</span>.</p>
<p>The New Gallery dialog box is displayed.</p>
</li>
<li>
<p>Select <span class="bold">Dimension without Using Wizard</span> and click <span class="bold">OK</span>.</p>
</li>
<li>
<p>Provide information about the Name tab of the Dimension Editor as described in <a href="#CHDFAHEJ">"Name Tab"</a>.</p>
</li>
<li>
<p>On the Attributes tab, for each level, create an additional attribute to store the expiration date of the attributes in the level as described in <a href="#CHDCHADB">"Attributes Tab"</a>.</p>
<p>Consider an example where you want to store previous values for the package_type and package_size attributes of the Products dimension. In this case, create two new attributes prev_package_type and prev_package_size to store the previous values of these attributes.</p>
</li>
<li>
<p>Provide information about the following tabs of the Dimension Editor:</p>
<ul>
<li>
<p><a href="#CHDJEHJJ">"Levels Tab"</a></p>
</li>
<li>
<p><a href="#CHDHCAJB">"Hierarchies Tab"</a></p>
</li>
</ul>
</li>
<li>
<p>On the Slowly Changing tab, select the <span class="bold">Type 3: Store only the previous value</span> option. Click <span class="bold">Settings</span> to the right of this option.</p>
<p>Oracle Warehouse Builder displays the Type 3 Slowly Changing Policy dialog box. Specify the details of the Type 2 SCD using this dialog box as described in <a href="#CIHCAIBH">"Type 3 Slowly Changing Dimension Dialog Box"</a>.</p>
</li>
<li>
<p>Provide information about the <a href="#CHDBDJAC">"Storage Tab"</a> of the Dimension Editor.</p>
</li>
</ol>
<a id="CIHCAIBH"></a>
<div class="sect3">
<h4 class="sect3">Type 3 Slowly Changing Dimension Dialog Box</h4>
<p>Use the Type 3 Slowly Changing Dimension dialog box to specify the implementation details. Use this dialog box to select the attribute that stores effective date, the attributes that should be versioned, and the attributes that store the previous value of the versioned attributes.</p>
<p>This dialog box displays a table that contains four columns: Levels, Identifying Attribute, Previous Attribute, and Record History.</p>
<ul>
<li>
<p><span class="bold">Levels:</span> Displays the levels in the dimension. Expand a level node to view the level attributes.</p>
</li>
<li>
<p><span class="bold">Identifying Attribute:</span> Represents the level attribute.</p>
</li>
<li>
<p><span class="bold">Previous Attribute:</span> Represents the attribute that stores the previous value of the versioned attribute. Use the list to select the previous value attribute. Specify a previous value attribute only for versioned attributes. You must explicitly create the attributes that store the previous values of versioned attributes. Again, create these as dimension attributes and apply them to the required level.</p>
</li>
<li>
<p><span class="bold">Effective:</span> Indicates if an attribute stores the effective date. If the attribute stores the effective date, then select <span class="bold">Effective date</span> from the <span class="bold">Effective</span> list.</p>
<p>The surrogate ID of a level cannot be versioned.</p>
</li>
</ul>
<p>Consider the <code>PRODUCTS</code> Type 3 SCD. The <code>EFFECTIVE_TIME</code> attribute stores the effective date of the Product level records. The <code>PACKAGE_TYPE</code> attribute of the Product level should be versioned. The attribute that stores the previous value of this attribute, represented by the <span class="bold">Previous Attribute</span> column, is <code>PREVIOUS_PACKAGE_TYPE</code>. When the value of the <code>PACKAGE_TYPE</code> attribute changes, Oracle Warehouse Builder does the following:</p>
<ul>
<li>
<p>Moves the existing value of the <code>PACKAGE_TYPE</code> attribute the <code>PREVIOUS_PACKAGE_TYPE</code> attribute.</p>
</li>
<li>
<p>Stores the new value of population in the <code>PACKAGE_TYPE</code> attribute.</p>
</li>
</ul>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="BEIFBHAJ"></a><a id="WBETL03010"></a>
<div class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1"><a id="sthref627"></a><a id="sthref628"></a>Editing Dimension Definitions</h2>
<p>Use the Dimension Editor to edit the definition of a dimension. When you edit a dimension definition, the changes are made only in the object metadata. To update the physical object definition, deploy the modified dimension using the Control Center.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
Once you create a Slowly Changing Dimension, you cannot modify its type using the Dimension Editor.</div>
<p><span class="bold">To edit a dimension or Slowly Changing Dimension definition:</span></p>
<p>Right-click the dimension in the Projects Navigator and select <span class="bold">Open</span>.</p>
<p><span class="italic">or</span></p>
<p>Double-click the dimension in the Projects Navigator.</p>
<p>The Dimension Editor is displayed. Modify the definition using the tabs in the Dimension Editor.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
When you modify the implementation (star or snowflake) of a relational or ROLAP dimension, ensure that you first unbind the dimension and then perform binding. This creates the physical bindings according to the modified implementation.</div>
<p>For more information about these tabs, see the following sections:</p>
<ul>
<li>
<p><a href="#BEIHBAAE">"Creating Dimensions Using the Dimension Editor"</a></p>
</li>
<li>
<p><a href="#CHDEJJEF">"Type 2 Slowly Changing Dimension Dialog Box"</a></p>
</li>
<li>
<p><a href="#CIHCAIBH">"Type 3 Slowly Changing Dimension Dialog Box"</a></p>
</li>
</ul>
</div>
<!-- class="sect1" -->
<a id="CIHGFCIJ"></a><a id="WBETL03011"></a>
<div class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Configuring <a id="sthref629"></a><a id="sthref630"></a><a id="sthref631"></a>Dimensions</h2>
<p>When you configure a dimension, you configure both the dimension and the underlying table.</p>
<p><span class="bold">To configure the physical properties for a dimension:</span></p>
<ol>
<li>
<p>From the Projects Navigator, right-click the dimension name and select <span class="bold">Configure</span>.</p>
<p>The Configuration tab is displayed.</p>
</li>
<li>
<p>Configure the dimension parameters listed under the following categories.</p>
<p>For a dimension that uses a relational or ROLAP implementation, you can also configure the implementation tables. For more information, see <a href="orcl_data_objx.htm#i1110821">"Configuring Tables"</a>.</p>
</li>
</ol>
<p class="subhead2"><a id="sthref632"></a>Identification</p>
<p><span class="bold">Deployable<a id="sthref633"></a>:</span> Select TRUE to indicate to deploy this dimension. Oracle Warehouse Builder generates scripts only for table constraints marked deployable.</p>
<p><a id="BABCAAEC"></a><span class="bold">Deployment Options:</span> Use this parameter to specify the type of implementation for the dimension. Select one of the following options: Deploy All, Deploy Data Objects Only, Deploy to Catalog Only.</p>
<p>For more information about deployment options, see <a href="#BABBDBAI">"Specifying How Dimensions are Deployed"</a>.</p>
<p><span class="bold">View Name:</span> Specify the name of the view that is created to hide the control rows in the implementation table that stores the dimension data. This is applicable for relational or ROLAP dimensions that use a star schema. The default view name, if you do not explicitly specify one, is the dimension name suffixed with "_v".</p>
<p><span class="bold">Visible:</span> This parameter is not used in code generation.</p>
<p class="subhead2"><a id="BABIFFHI"></a>Summary Management</p>
<p>The parameters in this section must be set only if the dimension uses a ROLAP with MVs implementation.</p>
<ul>
<li>
<p><span class="bold">Enable MV Refresh:</span> Enables the materialized views that store the summary data to be refreshed. The default value of this parameter is False.</p>
</li>
<li>
<p><span class="bold">MV Constraints:</span> Set either TRUSTED or ENFORCED for this parameter.</p>
<p>Trusted constraints result in a more efficient refresh operation. Setting this parameter to Trusted enables use of non-validated RELY constraints and rewrite against materialized views during refresh. However, if the trusted constraint information is invalid, then the refresh may corrupt the materialized view.</p>
<p>Setting this parameter to Enforced enables the use of only validated, enforced constraints and rewrite against materialized views.</p>
</li>
<li>
<p><span class="bold">Refresh Mode:</span> Select either Fast, Complete, or Force for this parameter.</p>
<p>For Complete refresh, the materialized view's defining query is recalculated.</p>
<p>For Fast refresh, only changed rows are inserted in the cube and the affected areas of the cube are re-aggregated.</p>
<p>Force refresh first applies Fast refresh. If this is not possible, then it applies Complete refresh.</p>
</li>
<li>
<p><span class="bold">Refresh Next Date:</span> Represents the next data on which the materialized views should be refreshed.</p>
</li>
<li>
<p><span class="bold">Refresh On:</span> Set to DEMAND or ONDATE.</p>
<p>Setting this parameter to Demand causes the materialized views to be updated on demand. Setting to ONDATE refreshes the materialized views on the date specified in the Refresh Next Date parameter.</p>
</li>
<li>
<p><span class="bold">Refresh Start Date:</span> Represents the date on which to begin refreshing the materialized views.</p>
</li>
</ul>
<a id="BABBDBAI"></a>
<div class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Specifying How Dimensions are Deployed</h3>
<p>You can specify the form in which dimensions are deployed to the target schema by setting the Deployment Option configuration parameter. The values you can set for deployment option of dimensions are: <a href="#BABFCFBB">"Deploy All"</a>, <a href="#BABEEJEB">"Deploy Data Objects Only"</a>, and <a href="#BABIHEHE">"Deploy to Catalog"</a>. For steps on setting the Configuration Options parameter, see <a href="#CIHGFCIJ">"Configuring Dimensions"</a>.</p>
<p>In addition to the Deployment Option configuration parameter, the form in which dimensions are deployed also depends on the generation mode you specify. The PL/SQL Generation Mode parameter of the module containing the dimension represents the Database to which objects in the module are deployed. You can set the PL/SQL Generation Mode to one of the following options: Default Oracle Database 10<span class="italic">g</span>, Oracle Database11<span class="italic">g</span>, Oracle8<span class="italic">i</span>, and Oracle9<span class="italic">i</span>. For more information, see <a href="orcl_data_objx.htm#i1127700">"Configuring Target Modules"</a>.</p>
<p><a href="#BABJACID">Table 3-7</a> describes how dimensions with ROLAP implementations are deployed on different Database versions.</p>
<div class="tblformalwide">
<p class="titleintable"><a id="sthref634"></a><a id="BABJACID"></a>Table 3-7 Deployment Options for ROLAP Dimensions</p>
<table class="cellalignment2978" title="Deployment Options for ROLAP Dimensions" summary="This table describes the form in which dimensions are stored for ROLAP implementation." dir="ltr">
<thead>
<tr class="cellalignment2969">
<th class="cellalignment2976" id="r1c1-t35">Deployment Option</th>
<th class="cellalignment2976" id="r1c2-t35">Target Schema: Database 10<span class="italic">g</span>, ROLAP Implementation</th>
<th class="cellalignment2976" id="r1c3-t35">Target Schema: Database 11<span class="italic">g</span>, ROLAP Implementation</th>
<th class="cellalignment2976" id="r1c4-t35">Target Schema: Database 11<span class="italic">g</span>, ROLAP with MVs Implementation</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2969">
<td class="cellalignment2977" id="r2c1-t35" headers="r1c1-t35">
<p>Deploy Data Objects</p>
</td>
<td class="cellalignment2977" headers="r2c1-t35 r1c2-t35">
<p>relational dimension DDL</p>
</td>
<td class="cellalignment2977" headers="r2c1-t35 r1c3-t35">
<p>relational dimension DDL</p>
</td>
<td class="cellalignment2977" headers="r2c1-t35 r1c4-t35">
<p>relational dimension DDL</p>
</td>
</tr>
<tr class="cellalignment2969">
<td class="cellalignment2977" id="r3c1-t35" headers="r1c1-t35">
<p>Deploy to Catalog</p>
</td>
<td class="cellalignment2977" headers="r3c1-t35 r1c2-t35">
<p>CWM2</p>
</td>
<td class="cellalignment2977" headers="r3c1-t35 r1c3-t35">
<p>CWM2</p>
</td>
<td class="cellalignment2977" headers="r3c1-t35 r1c4-t35">
<p>11g form AW+</p>
</td>
</tr>
<tr class="cellalignment2969">
<td class="cellalignment2977" id="r4c1-t35" headers="r1c1-t35">
<p>Deploy All</p>
</td>
<td class="cellalignment2977" headers="r4c1-t35 r1c2-t35">
<p>relational dimension DDL and CWM2</p>
</td>
<td class="cellalignment2977" headers="r4c1-t35 r1c3-t35">
<p>relational dimension DDL and CWM2</p>
</td>
<td class="cellalignment2977" headers="r4c1-t35 r1c4-t35">
<p>relational dimension DDL and 11g form AW+</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformalwide" -->
<p><a href="#BABFAEHJ">Table 3-8</a> describes how dimensions with a MOLAP implementation are deployed on different Database versions.</p>
<div class="tblformalwide">
<p class="titleintable"><a id="sthref635"></a><a id="BABFAEHJ"></a>Table 3-8 Deployment Options for Dimensions with a MOLAP Implementation</p>
<table class="cellalignment2978" title="Deployment Options for Dimensions with a MOLAP Implementation" summary="This table describes the form in which dimensions are stored for MOLAP implementation." dir="ltr">
<thead>
<tr class="cellalignment2969">
<th class="cellalignment2976" id="r1c1-t36">Deployment Option</th>
<th class="cellalignment2976" id="r1c2-t36">Target Schema: 10<span class="italic">g</span> Database</th>
<th class="cellalignment2976" id="r1c3-t36">Target Schema: 11<span class="italic">g</span> Database</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2969">
<td class="cellalignment2977" id="r2c1-t36" headers="r1c1-t36">
<p>Deploy Data Objects</p>
</td>
<td class="cellalignment2977" headers="r2c1-t36 r1c2-t36">
<p>10g form AW</p>
</td>
<td class="cellalignment2977" headers="r2c1-t36 r1c3-t36">
<p>11g form AW</p>
</td>
</tr>
<tr class="cellalignment2969">
<td class="cellalignment2977" id="r3c1-t36" headers="r1c1-t36">
<p>Deploy to Catalog</p>
</td>
<td class="cellalignment2977" headers="r3c1-t36 r1c2-t36">
<p>10g form AW</p>
</td>
<td class="cellalignment2977" headers="r3c1-t36 r1c3-t36">
<p>11g form AW</p>
</td>
</tr>
<tr class="cellalignment2969">
<td class="cellalignment2977" id="r4c1-t36" headers="r1c1-t36">
<p>Deploy All</p>
</td>
<td class="cellalignment2977" headers="r4c1-t36 r1c2-t36">
<p>n/a</p>
</td>
<td class="cellalignment2977" headers="r4c1-t36 r1c3-t36">
<p>n/a</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformalwide" --></div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="BEIIAHEF"></a><a id="WBETL03004"></a>
<div class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Creating Cubes</h2>
<p>Oracle Warehouse Builder provides the following two methods of creating a cube:</p>
<ul>
<li>
<p><a href="#CHDDGEEG">"Using the Create Cube Wizard to Create Cubes"</a></p>
<p>Use the Create Cube wizard to create a basic cube quickly. Oracle Warehouse Builder assumes default values for most of the parameters and creates the database structures that store the cube data.</p>
</li>
<li>
<p><a href="#CHDCFIDI">"Using the Cube Editor to Create Cubes"</a></p>
<p>Use the Cube Editor to create a cube when you want to specify certain advanced options such as aggregation methods and solve dependency order. These options are not available when you use the Create Cube wizard.</p>
</li>
</ul>
<p>Alternatively, you can use the Create Cube wizard to quickly create a basic cube object. Then use the Cube Editor to specify the other options.</p>
<div class="sect2"><a id="sthref636"></a>
<h3 class="sect2">About <a id="sthref637"></a><a id="sthref638"></a>Calculated Measures in Cubes</h3>
<p>While defining measures in a cube, you can also create calculated measures. A calculated measure is a measure whose data is not stored. Its value is calculated when required using the expression defined for the measure.</p>
<p>Calculated <a id="sthref639"></a><a id="sthref640"></a>measures can be classified into the following two types:</p>
<ul>
<li>
<p><a href="#BABHHCAC">"Standard Calculation"</a></p>
</li>
<li>
<p><a href="#BABJABDJ">"Custom Expression"</a></p>
</li>
</ul>
<a id="BABHHCAC"></a>
<div class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Standard Calculation</h4>
<p>Standard calculations are based on the templates. Oracle Warehouse Builder enables you to define the following standard calculations: <a href="#BABBHAEI">"Basic Arithmetic"</a>, <a href="#BABGBCJD">"Advanced Arithmetic"</a>, <a href="#BABDFHBH">"Prior/Future Comparison"</a>, and <a href="#BABIEDAI">"Time Frame"</a>.</p>
<p class="subhead2"><a id="BABBHAEI"></a>Basic Arithmetic</p>
<p>This type enables you to perform basic arithmetic calculations such as the following. <a href="#BABHBBCB">Table 3-9</a> lists the basic arithmetic calculations.</p>
<div class="tblformal">
<p class="titleintable"><a id="sthref641"></a><a id="BABHBBCB"></a>Table 3-9 List of Basic Calculated Measures</p>
<table class="cellalignment2975" title="List of Basic Calculated Measures" summary="This table describes the basic arithmetic calculation measures." dir="ltr">
<thead>
<tr class="cellalignment2969">
<th class="cellalignment2976" id="r1c1-t37">Calculation Name</th>
<th class="cellalignment2976" id="r1c2-t37">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2969">
<td class="cellalignment2977" id="r2c1-t37" headers="r1c1-t37">
<p>Addition</p>
</td>
<td class="cellalignment2977" headers="r2c1-t37 r1c2-t37">
<p>Use this calculation to add either two measures or a measure and a number.</p>
</td>
</tr>
<tr class="cellalignment2969">
<td class="cellalignment2977" id="r3c1-t37" headers="r1c1-t37">
<p>Subtraction</p>
</td>
<td class="cellalignment2977" headers="r3c1-t37 r1c2-t37">
<p>Use this calculation to subtract two measures or a measure and a number.</p>
</td>
</tr>
<tr class="cellalignment2969">
<td class="cellalignment2977" id="r4c1-t37" headers="r1c1-t37">
<p>Multiplication</p>
</td>
<td class="cellalignment2977" headers="r4c1-t37 r1c2-t37">
<p>Use this calculation to multiply two measures or a measure and a number.</p>
</td>
</tr>
<tr class="cellalignment2969">
<td class="cellalignment2977" id="r5c1-t37" headers="r1c1-t37">
<p>Division</p>
</td>
<td class="cellalignment2977" headers="r5c1-t37 r1c2-t37">
<p>Use this calculation to divide two measures or a measure and a number.</p>
</td>
</tr>
<tr class="cellalignment2969">
<td class="cellalignment2977" id="r6c1-t37" headers="r1c1-t37">
<p>Ratio</p>
</td>
<td class="cellalignment2977" headers="r6c1-t37 r1c2-t37">&nbsp;</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="BABGBCJD"></a>Advanced Arithmetic</p>
<p>This type enables you to create the advanced calculations such as the ones defined in <a href="#BABEBDFG">Table 3-10</a>.</p>
<div class="tblformal">
<p class="titleintable"><a id="sthref642"></a><a id="BABEBDFG"></a>Table 3-10 List of Advanced Arithmetic Calculated Measures</p>
<table class="cellalignment2975" title="List of Advanced Arithmetic Calculated Measures" summary="This table describes the advanced arithmetic calculation measures." dir="ltr">
<thead>
<tr class="cellalignment2969">
<th class="cellalignment2976" id="r1c1-t38">Calculation Name</th>
<th class="cellalignment2976" id="r1c2-t38">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2969">
<td class="cellalignment2977" id="r2c1-t38" headers="r1c1-t38">
<p>Cumulative Total</p>
</td>
<td class="cellalignment2977" headers="r2c1-t38 r1c2-t38">
<p>Use this calculation to return the cumulative total of measure data over time periods within each level of a specified dimension.</p>
<p>For example, Cumulative Sales for 2001= Sales Q1 + Sales Q2 + Sales Q3 + Sales Q4</p>
</td>
</tr>
<tr class="cellalignment2969">
<td class="cellalignment2977" id="r3c1-t38" headers="r1c1-t38">
<p>Index</p>
</td>
<td class="cellalignment2977" headers="r3c1-t38 r1c2-t38">
<p>Use this calculation to return the ratio of a measure's value as a percentage of a baseline value for the measure. The formula for the calculation is:</p>
<p>(Current member / Base Line member)</p>
<p>For example, Consumer Price Index (assuming baseline cost of goods is 1967) = (2001 Cost of Goods/1967 Cost of Goods)) * 100</p>
</td>
</tr>
<tr class="cellalignment2969">
<td class="cellalignment2977" id="r4c1-t38" headers="r1c1-t38">
<p>Percent Markup</p>
</td>
<td class="cellalignment2977" headers="r4c1-t38 r1c2-t38">
<p>Use this calculation to return the percentage markup between two measures where the basis for the calculation is the older measure. The formula used for this calculation is: (y-x)/x.</p>
<p>For example, the new price is 110 and the old price is 100. The percentage markup is calculated:</p>
<p>(110-100)/100 = +10%.</p>
</td>
</tr>
<tr class="cellalignment2969">
<td class="cellalignment2977" id="r5c1-t38" headers="r1c1-t38">
<p>Percent Variance</p>
</td>
<td class="cellalignment2977" headers="r5c1-t38 r1c2-t38">
<p>Use this calculation to return the percent difference between a measure and a target for that measure. For example, the percentage variance between sales and quota is:</p>
<p>(Sales-Quota)/Quota.</p>
</td>
</tr>
<tr class="cellalignment2969">
<td class="cellalignment2977" id="r6c1-t38" headers="r1c1-t38">
<p>Rank</p>
</td>
<td class="cellalignment2977" headers="r6c1-t38 r1c2-t38">
<p>Use this calculation to return the numeric rank value of each dimension member based on the value of the specified measure. For example, the rank of TV sales where DVD is 150, TV is 100, and Radio is 50 would be 2.</p>
</td>
</tr>
<tr class="cellalignment2969">
<td class="cellalignment2977" id="r7c1-t38" headers="r1c1-t38">
<p>Share</p>
</td>
<td class="cellalignment2977" headers="r7c1-t38 r1c2-t38">
<p>Use this calculation to return the ratio of a measure's value to the same measure value for another dimension member or level. The formula for this calculation is:</p>
<p>(Current member / Specified member).</p>
</td>
</tr>
<tr class="cellalignment2969">
<td class="cellalignment2977" id="r8c1-t38" headers="r1c1-t38">
<p>Variance</p>
</td>
<td class="cellalignment2977" headers="r8c1-t38 r1c2-t38">
<p>Use this calculation to calculate the variance between a base measure and a target for that measure. An example of variance is:</p>
<p>Sales Variance = Sales - Sales Forecast.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="BABDFHBH"></a>Prior/Future Comparison</p>
<p>Use this type to define prior and future value calculations such as the ones described in <a href="#BABFEIGI">Table 3-11</a>.</p>
<div class="tblformal">
<p class="titleintable"><a id="sthref643"></a><a id="BABFEIGI"></a>Table 3-11 List of Prior/Future Comparison Calculated Measures</p>
<table class="cellalignment2975" title="List of Prior/Future Comparison Calculated Measures" summary="This table describes the Prior/Future Comparison calculated measures." dir="ltr">
<thead>
<tr class="cellalignment2969">
<th class="cellalignment2976" id="r1c1-t39">Calculated Measure Name</th>
<th class="cellalignment2976" id="r1c2-t39">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2969">
<td class="cellalignment2977" id="r2c1-t39" headers="r1c1-t39">
<p>Prior Value</p>
</td>
<td class="cellalignment2977" headers="r2c1-t39 r1c2-t39">
<p>Use this calculation to return the value of a measure from an earlier time period.</p>
</td>
</tr>
<tr class="cellalignment2969">
<td class="cellalignment2977" id="r3c1-t39" headers="r1c1-t39">
<p>Difference from Prior Period</p>
</td>
<td class="cellalignment2977" headers="r3c1-t39 r1c2-t39">
<p>Use this calculation to return the difference between the current value of a measure and the value of that measure from a prior period. The formula for this calculation is:</p>
<p>(Current Value - Previous Value)</p>
</td>
</tr>
<tr class="cellalignment2969">
<td class="cellalignment2977" id="r4c1-t39" headers="r1c1-t39">
<p>Percent Difference from Prior Period</p>
</td>
<td class="cellalignment2977" headers="r4c1-t39 r1c2-t39">
<p>Use this calculation to return the percentage difference between the current value of a measure and the value of that measure from a prior period. The formula for this calculation is:</p>
<p>((Current Value - Previous Value) / Previous Value)</p>
</td>
</tr>
<tr class="cellalignment2969">
<td class="cellalignment2977" id="r5c1-t39" headers="r1c1-t39">
<p>Future Value</p>
</td>
<td class="cellalignment2977" headers="r5c1-t39 r1c2-t39">
<p>Use this calculation to return the value of an item for a future time period. For example, Sales a Year from Now = Sales from October 2006 if the current time is October 2005.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="BABIEDAI"></a>Time Frame</p>
<p>This type enables you to create the time series calculations listed in <a href="#BABFABHE">Table 3-12</a>.</p>
<div class="tblformal">
<p class="titleintable"><a id="sthref644"></a><a id="BABFABHE"></a>Table 3-12 List of Time Series Calculated Measures</p>
<table class="cellalignment2975" title="List of Time Series Calculated Measures" summary="This table describes the time Series calculated measures." dir="ltr">
<thead>
<tr class="cellalignment2969">
<th class="cellalignment2976" id="r1c1-t40">Calculated Measure Name</th>
<th class="cellalignment2976" id="r1c2-t40">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2969">
<td class="cellalignment2977" id="r2c1-t40" headers="r1c1-t40">
<p>Moving Average</p>
</td>
<td class="cellalignment2977" headers="r2c1-t40 r1c2-t40">
<p>Use this calculation to return the average value for a measure over a rolling number of time periods. And example of this calculation is:</p>
<p>Moving average sales for the last 3 months = (Jan Sales + Feb Sales + March Sales)/3</p>
</td>
</tr>
<tr class="cellalignment2969">
<td class="cellalignment2977" id="r3c1-t40" headers="r1c1-t40">
<p>Moving Maximum</p>
</td>
<td class="cellalignment2977" headers="r3c1-t40 r1c2-t40">
<p>Use this calculation to return the maximum value for a measure over a rolling number of time periods. An example of this calculation is:</p>
<p>Moving maximum sales for the last 3 months = the largest Sales value for Jan, Feb, and March.</p>
</td>
</tr>
<tr class="cellalignment2969">
<td class="cellalignment2977" id="r4c1-t40" headers="r1c1-t40">
<p>Moving Minimum</p>
</td>
<td class="cellalignment2977" headers="r4c1-t40 r1c2-t40">
<p>Use this calculation to return the minimum value for a measure over a rolling number of time periods. An example of this calculation is:</p>
<p>Moving minimum sales for the last 3 months = the smallest Sales value for Jan, Feb, and March.</p>
</td>
</tr>
<tr class="cellalignment2969">
<td class="cellalignment2977" id="r5c1-t40" headers="r1c1-t40">
<p>Moving Total</p>
</td>
<td class="cellalignment2977" headers="r5c1-t40 r1c2-t40">
<p>Use this calculation to return the total value for a measure over a rolling number of time periods. An example of this calculation is:</p>
<p>Moving total sales for the last 3 months = (Jan Sales + Feb Sales + March Sales).</p>
</td>
</tr>
<tr class="cellalignment2969">
<td class="cellalignment2977" id="r6c1-t40" headers="r1c1-t40">
<p>Period to Date</p>
</td>
<td class="cellalignment2977" headers="r6c1-t40 r1c2-t40">
<p>Use this calculation to sum measure data over time periods, to create cumulative measure data. An example of this calculation is:</p>
<p>Year-to-date sales to March = Jan Sales + Feb Sales + March Sales.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="sect3" -->
<a id="BABJABDJ"></a>
<div class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Custom Expression</h4>
<p>Select the <span class="bold">Custom Expression</span> option to specify an expression that is used to compute the calculated measure.</p>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<div class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref645"></a>
<h3 class="sect2">Cube<a id="sthref646"></a><a id="sthref647"></a> Example</h3>
<p>The <code>Sales</code> cube stores aggregated sales data. It contains the following two measures: <code>Value_sales</code> and <code>Dollar_sales</code>.</p>
<ul>
<li>
<p><code>Value_sales</code>: Stores the amount of the sale in terms of the quantity sold.</p>
</li>
<li>
<p><code>Dollar_sales</code>: Stores the amount of the sale.</p>
</li>
</ul>
<p><a href="#CIHBCCII">Table 3-13</a> describes the dimensionality of the Sales cube. It lists the name of the dimension and the dimension level that the cube references.</p>
<div class="tblformal">
<p class="titleintable"><a id="sthref648"></a><a id="CIHBCCII"></a>Table 3-13 Dimensionality of the Sales Cube</p>
<table class="cellalignment2975" title="Dimensionality of the Sales Cube" summary="This table contains two columns that list the dimension name and dimension level to which the Sales cube references." dir="ltr">
<thead>
<tr class="cellalignment2969">
<th class="cellalignment2976" id="r1c1-t41">Dimension Name</th>
<th class="cellalignment2976" id="r1c2-t41">Level Name</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2969">
<td class="cellalignment2977" id="r2c1-t41" headers="r1c1-t41">
<p>Products</p>
</td>
<td class="cellalignment2977" headers="r2c1-t41 r1c2-t41">
<p>Product</p>
</td>
</tr>
<tr class="cellalignment2969">
<td class="cellalignment2977" id="r3c1-t41" headers="r1c1-t41">
<p>Customers</p>
</td>
<td class="cellalignment2977" headers="r3c1-t41 r1c2-t41">
<p>Customer</p>
</td>
</tr>
<tr class="cellalignment2969">
<td class="cellalignment2977" id="r4c1-t41" headers="r1c1-t41">
<p>Times</p>
</td>
<td class="cellalignment2977" headers="r4c1-t41 r1c2-t41">
<p>Day</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="sect2" -->
<a id="CHDDGEEG"></a>
<div class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><a id="sthref649"></a><a id="sthref650"></a><a id="sthref651"></a>Using the Create Cube Wizard to Create Cubes</h3>
<p>Use the following steps to create a cube using the wizard:</p>
<ol>
<li>
<p>From the Projects Navigator expand the Databases node and then the node.</p>
</li>
<li>
<p>Expand the target module where you want to create the cube.</p>
</li>
<li>
<p>Right-click <span class="bold">Cubes,</span> select <span class="bold">New Cube</span>.</p>
<p>Oracle Warehouse Builder displays the Welcome page of the Cube wizard. Click <span class="bold">Next</span> to proceed. The wizard guides you through the following pages:</p>
<ul>
<li>
<p><a href="#CHDGJIAF">"Name and Description Page"</a></p>
</li>
<li>
<p><a href="#CHDBDCHD">"Storage Type Page"</a></p>
</li>
<li>
<p><a href="#CHDIHCJI">"Dimensions Page"</a></p>
</li>
<li>
<p><a href="#CHDBEEBA">"Measures Page"</a></p>
</li>
<li>
<p><a href="#CHDEGHBH">"Summary Page"</a></p>
</li>
</ul>
</li>
</ol>
<a id="CHDGJIAF"></a>
<div class="sect3">
<h4 class="sect3">Name and Description Page</h4>
<p>Use the Name and Description page to describe the cube. Enter the following details on this page:</p>
<ul>
<li>
<p><span class="bold">Name:</span> The name of the cube. The cube name must be unique within the module.</p>
</li>
<li>
<p><span class="bold">Description:</span> Specify an optional description for the cube.</p>
</li>
</ul>
</div>
<!-- class="sect3" -->
<a id="CHDBDCHD"></a>
<div class="sect3">
<h4 class="sect3"><a id="sthref652"></a>Storage Type Page</h4>
<p>Use the Storage Type page to specify the type of storage for the cube. The storage type determines how the cube data is physically stored in the database. The options you can select for storage type are:</p>
<ul>
<li>
<p><a href="#BABECJEG">"ROLAP: Relational storage"</a></p>
</li>
<li>
<p><a href="#BABHCIBC">"ROLAP: with MVs"</a></p>
</li>
<li>
<p><a href="#BABDHJDC">"MOLAP: Multidimensional storage"</a></p>
</li>
</ul>
<p>You select the storage type based on the volume of data stored at the lowest level of the entire cube and the refresh rate required.</p>
<p class="subhead2"><a id="BABECJEG"></a>ROLAP: Relational storage</p>
<p>Oracle Warehouse Builder stores the cube definition and its data in a relational form in the database. Use this option to create a cube that has a relational or ROLAP implementation.</p>
<p>Relational storage is preferable to store detailed, high volume data or you have high refresh rates combined with high volumes of data. Use relational storage to perform one of the following:</p>
<ul>
<li>
<p>Store detailed information such as call detail records, point of sales (POS) records and other such transaction oriented data.</p>
</li>
<li>
<p>Refresh high volumes of data at short intervals.</p>
</li>
<li>
<p>Detailed reporting such as lists of order details.</p>
</li>
</ul>
<p>Operational data stores and enterprise data warehouses are typically implemented using relational storage. You can then derive MOLAP implementations from this relational implementation to perform different types of analysis.</p>
<p>If the database containing the target schema has the OLAP option installed, then you can also deploy the dimensions to the OLAP catalog.</p>
<p>When you choose a relational implementation for a cube, the implementation table used to store the cube data is created.</p>
<p class="subhead2"><a id="BABHCIBC"></a>ROLAP: with MVs</p>
<p>Oracle Warehouse Builder stores the cube definition and its data in a relational form in the database. Additionally, cube-organized MVs are created in the analytic workspace. Select this option to create a cube that uses a ROLAP implementation and stores summaries in the analytic workspace.</p>
<p>Using this option provides summary management based on cube-organized MVs in 11<span class="italic">g</span> Database. Query performance is greatly improved, without the requirement to make any modification to your queries.</p>
<p>Cubes created using the ROLAP: with MVs implementation can only store summary data in the cube MV.</p>
<p>When you choose the ROLAP with MVs implementation:</p>
<ul>
<li>
<p>the implementation table used to store the cube data is created.</p>
</li>
<li>
<p>the cube is stored in an analytic workspace that uses the same name as the module to which the dimension belongs. The tablespace that is used to store the analytic workspace is the tablespace that is defined as the users tablespace for the schema that contains the dimension metadata.</p>
</li>
</ul>
<div class="infobox-note">
<p class="notep1">Note:</p>
If a cube uses the ROLAP: with Cube MVs implementation, then all dimensions that this cube references must also use the ROLAP: with Cube MVs implementation.</div>
<p class="subhead2"><a id="BABDHJDC"></a>MOLAP: Multidimensional storage</p>
<p>Oracle Warehouse Builder stores the cube definition and the cube data in an analytic workspace in the database. Use this option to create a cube that has a MOLAP implementation.</p>
<p>Multidimensional storage is preferable when you want to store aggregated data for analysis. The refresh intervals for a multidimensional storage are usually longer than relational storage as data must be pre-calculated and pre-aggregated. Also, the data volumes are typically smaller due to higher aggregation levels. Use multidimensional storage to perform the following:</p>
<ul>
<li>
<p>Advanced analysis such as trend analysis, what-if analysis, or to forecast and allocate data</p>
</li>
<li>
<p>Drill and pivot data with instant results</p>
</li>
</ul>
<p>When you choose a MOLAP implementation, the name used to store the cube in the analytic workspace is generated. If no analytic workspace exists, then one is created using the name you specify.</p>
</div>
<!-- class="sect3" -->
<a id="CHDIHCJI"></a>
<div class="sect3">
<h4 class="sect3"><a id="sthref653"></a>Dimensions Page</h4>
<p>The Dimensions page defines the dimensionality of the cube. A cube must refer to at least one dimension. You define dimensionality by selecting the dimensions that the cube references. You can use the same dimension to define multiple cubes. For example, the dimension TIMES can be used by the SALES cube and the COST cube.</p>
<p>The Dimensions page contains two sections: Available Dimensions and Selected Dimensions.</p>
<p><a id="sthref654"></a><span class="subhead3">Available Dimensions&nbsp;</span>The Available Dimensions section lists all the dimensions in the workspace. Each module in the project is represented by a separate node. Expand a module node to view all the dimensions in that module.</p>
<p>Oracle Warehouse Builder filters the dimensions displayed in the Available Dimensions section based on the implementation type chosen for the dimension. If you select ROLAP as the storage type, then only dimensions that have a relational implementation are listed. If you select MOLAP as the storage type, then only dimensions stored in an analytic workspace are listed.</p>
<p><a id="sthref655"></a><span class="subhead3">Selected Dimensions&nbsp;</span>The Selected Dimensions section lists the dimensions that you selected in the Available Dimensions section. Use the right arrow to the move a dimension from the Available Dimensions list to the Selected Dimensions list.</p>
</div>
<!-- class="sect3" -->
<a id="CHDBEEBA"></a>
<div class="sect3">
<h4 class="sect3"><a id="sthref656"></a>Measures Page</h4>
<p>Use the Measures page to define the measures of the cube. For each measure, specify the following details:</p>
<ul>
<li>
<p><span class="bold">Name:</span> The name of the measure. The name of the measure must be unique within the cube.</p>
</li>
<li>
<p><span class="bold">Description:</span> An optional description for the measure.</p>
</li>
<li>
<p><span class="bold">Data Type:</span> Select the data type of the measure.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
The following data types are not supported for MOLAP implementations: <code>BLOB</code>, <code>INTERVAL DAY TO SECOND</code>, <code>INTERVAL YEAR TO MONTH</code>, <code>RAW</code>, <code>TIMESTAMP WITH TIME ZONE</code>, <code>TIMESTAMP WITH LOCAL TIME ZONE</code>.</div>
</li>
<li>
<p><span class="bold">Length</span>: Specify length for character data types only.</p>
</li>
<li>
<p><span class="bold">Precision</span>: Define the total number of digits enabled for the measure. Precision is defined only for numeric data types.</p>
</li>
<li>
<p><span class="bold">Scale:</span> Define the total number of digits to the right of the decimal point. Scale is defined only for numeric data types.</p>
</li>
<li>
<p><span class="bold">Seconds Precision:</span> Represents the number of digits in the fractional part of the datetime field. It can be a number between 0 and 9. The seconds precision is used only for <code>TIMESTAMP</code>, <code>TIMESTAMP WITH TIME ZONE</code>, and <code>TIMESTAMP WITH LOCAL TIME ZONE</code> data types.</p>
</li>
</ul>
</div>
<!-- class="sect3" -->
<a id="CHDEGHBH"></a>
<div class="sect3">
<h4 class="sect3">Summary Page</h4>
<p>Use the Summary page to review the options that you specified using the Cube wizard. Click <span class="bold">Finish</span> to complete defining the cube. This cube is displayed under the Cubes node of the Projects Navigator.</p>
<p>Oracle Warehouse Builder creates the metadata for the following in the workspace:</p>
<ul>
<li>
<p>The cube object.</p>
</li>
<li>
<p>The definition of the table that stores the cube data.</p>
<p>For a relational or ROLAP implementation, the definition of the database table that stores the cube data is created. Additionally, foreign keys are created in the table that stores the cube data to each data object that stores the data relating to the dimension the cube references.</p>
<p>For a MOLAP implementation, the analytic workspace that stores the cube data is created. The wizard only creates the definitions for these objects in the workspace. It does not create the objects in the target schema.</p>
</li>
</ul>
<p><a id="BABFJCJB"></a><span class="subhead3">Deploying Cubes&nbsp;</span>To create the cube and its associated objects in the target schema, you must deploy the cube. Before you deploy a ROLAP cube, ensure that you successfully deploy the database table that stores the cube data. Alternatively, you can deploy both the table and the cube. For more information, see <a href="#CIHFDJCB">"MOLAP Implementation of Dimensional Objects"</a>.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
When you delete a cube, the associated objects such as the database table or analytic workspace are not deleted. You must explicitly delete these objects.</div>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<div class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref657"></a>
<h3 class="sect2">Defaults <a id="sthref658"></a>Used by the Create Cube Wizard</h3>
<p>When you create a cube using the Create Cube wizard, the following defaults are used:</p>
<ul>
<li>
<p><span class="bold">MOLAP Storage:</span> The cube is stored in an analytic workspace that has the same name as the module in which the cube is created. The analytic workspace is stored in the users tablespace of the schema that owns the module.</p>
</li>
<li>
<p><span class="bold">Solve:</span> By default, the cube is solved on demand.</p>
</li>
<li>
<p><span class="bold">Aggregation Function:</span> The default aggregation function for all dimensions that the cube references is SUM.</p>
</li>
</ul>
</div>
<!-- class="sect2" -->
<a id="CHDCFIDI"></a>
<div class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><a id="sthref659"></a><a id="sthref660"></a>Using the Cube Editor to Create Cubes</h3>
<p>The Cube Editor enables advanced users to create cubes according to their requirements. You can also use the Cube Editor to edit a cube.</p>
<p>Use the Cube Editor to create a cube if you must:</p>
<ul>
<li>
<p>Specify the dimensions along which the cube is sparse.</p>
</li>
<li>
<p>Define aggregation methods for the cube measures.</p>
</li>
<li>
<p>Precompute aggregations for a level.</p>
</li>
</ul>
<p><span class="bold">To create a cube using the Cube Editor:</span></p>
<ol>
<li>
<p>From the Projects Navigator expand the Databases node and then the node.</p>
</li>
<li>
<p>Expand the target module where you want to create the cube.</p>
</li>
<li>
<p>Right-click <span class="bold">Cubes</span>, select <span class="bold">New</span>.</p>
<p>The New Gallery dialog Box is displayed.</p>
</li>
<li>
<p>Select <span class="bold">Cube without using Wizard</span> and click <span class="bold">OK</span>.</p>
<p>Oracle Warehouse Builder displays the Cube Editor. To define a cube, provide information about the following tabs of the Cube Details panel:</p>
<ul>
<li>
<p><a href="#CHDCEGGF">"Name Tab"</a></p>
</li>
<li>
<p><a href="#CHDBHCED">"Storage Tab"</a></p>
</li>
<li>
<p><a href="#CHDIEEAI">"Dimensions Tab"</a></p>
</li>
<li>
<p><a href="#CHDJBHFD">"Measures Tab"</a></p>
</li>
<li>
<p><a href="#CHDIIFID">"Aggregation Tab"</a></p>
</li>
<li>
<p><a href="#BABEACDG">"Orphan Tab"</a></p>
</li>
<li>
<p><a href="#CHDFAABH">"Physical Bindings Tab"</a></p>
</li>
</ul>
<p>When you use the Cube Editor to create a cube, the physical objects that store the cube data are not automatically created. You must create these objects.</p>
</li>
<li>
<p>To bind the cube measures and the dimension references to the database columns that store their data, see <a href="#CHDFAABH">"Physical Bindings Tab"</a>. You perform this step only for cubes that use a ROLAP implementation.</p>
</li>
</ol>
<a id="CHDCEGGF"></a>
<div class="sect3">
<h4 class="sect3">Name Tab</h4>
<p>Use the Name tab to describe the cube. Specify the following details on this tab:</p>
<ul>
<li>
<p><span class="bold">Name</span>: Specify a name for the cube. The cube name must be unique within the module.</p>
</li>
<li>
<p><span class="bold">Description</span>: Specify an optional description for the cube.</p>
</li>
</ul>
</div>
<!-- class="sect3" -->
<a id="CHDBHCED"></a>
<div class="sect3">
<h4 class="sect3">Storage Tab</h4>
<p>The Storage tab specifies how the cube and its data should be stored. You can select either Relational or MOLAP as the storage type.</p>
<p><a id="sthref661"></a><span class="subhead3">ROLAP: Relational Storage&nbsp;</span>Select the <span class="bold">ROLAP: Relational storage</span> option to store the cube definition and its data in a relational form in the database. Use this option to create a cube that has a relational or ROLAP implementation. The cube data is stored in a database table or view.</p>
<p>Select the <span class="bold">Create bitmap indexes</span> option to generate bitmap indexes on all the foreign key columns in the fact table. This is required for a star query. For more information, see <a class="olink DWHSG" href="../../server.112/e25554/toc.htm"><span class="italic">Oracle Database Data Warehousing Guide</span></a>.</p>
<p>Select the <span class="bold">Create composite unique key</span> option to create a unique key on the dimension foreign key columns.</p>
<p>If the database containing the target schema has the OLAP option installed, then you can also deploy the dimensions to the OLAP catalog.</p>
<p><a id="sthref662"></a><span class="subhead3">ROLAP: with Cube MVs&nbsp;</span>Select the <span class="bold">ROLAP: with Cube MVs</span> option to store the dimension definition and its data in a relational form in the database and cube materialized view summaries in the analytic workspace.</p>
<p>When you choose a ROLAP with MVs implementation, specify the name of the analytic workspace that should store the summary data using the <span class="bold">AW Name</span> field in the MOLAP: Multidimensional storage section.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
If a cube uses the ROLAP: with Cube MVs implementation, then all dimensions that this cube references must also use the ROLAP: with Cube MVs implementation.</div>
<p><a id="sthref663"></a><span class="subhead3">MOLAP: Multidimensional storage&nbsp;</span>Select the <span class="bold">MOLAP: Multidimensional storage</span> option to store the cube data in an analytic workspace. Use this option to create a cube with a MOLAP implementation. Use the Analytic Workspace section to specify the storage details. Enter the following details in this section:</p>
<ul>
<li>
<p><span class="bold">AW Name:</span> This field specifies the name of the analytic workspace that stores the cube definition and cube data. Use the <span class="bold">Select</span> button to display the Analytic Workspaces dialog box. This dialog box lists the dimensional objects in the current project. Selecting an object from list stores the cube in the same analytic workspace as the selected object.</p>
</li>
<li>
<p><span class="bold">AW Tablespace Name:</span> Represents the name of the tablespace in which the analytic workspace is stored. If you do not specify a name, then the analytic workspace is stored in the default users tablespace of the owner of the module.</p>
</li>
</ul>
</div>
<!-- class="sect3" -->
<a id="CHDIEEAI"></a>
<div class="sect3">
<h4 class="sect3">Dimensions Tab</h4>
<p>Use the Dimensions tab to define the dimensionality of the cube. This tab displays a table that you use to select the dimensions that the cube references and the <span class="bold">Advanced</span> button. You can change the order of the dimensions listed in this tab by using the arrows on the left of this tab. The Advanced button is enabled only for cubes that use MOLAP implementation or ROLAP with cube MVs implementation.</p>
<p>Use the <span class="bold">Advanced</span> button to define the sparsity of the dimensions referenced by the cube. Clicking this button displays the Advanced dialog box. Since you can define sparsity only for MOLAP cubes, the Advanced button is enabled only if the Storage type is MOLAP. For more information about the Sparsity dialog box, see <a href="#CIHEFJJD">"Advanced Dialog Box"</a>.</p>
<p>The table on the Dimensions tab contains the following columns:</p>
<ul>
<li>
<p><span class="bold">Dimension:</span> This field represents the name of the dimension that the cube references. Click the Ellipsis button in this field to display the Available Modules dialog box. This dialog box displays the list of dimensions in the current project. Select a dimension from this list.</p>
<p>Oracle Warehouse Builder filters the dimensions displayed in this list based on the storage type specified for the cube. If you define a relational implementation for the cube, then only those dimensions that use a relational implementation are displayed. If you define a MOLAP implementation for the cube, then only the dimensions that use a MOLAP implementation are displayed.</p>
</li>
<li>
<p><span class="bold">Level:</span> The <span class="bold">Levels</span> displays all the levels in the dimension selected in the Dimension field. Select the dimension level that the cube references.</p>
</li>
<li>
<p><span class="bold">Role:</span> The <span class="bold">Role</span> list displays the dimension roles, if any, that the selected dimension contains. Select the dimension role that the cube uses. You can specify dimension roles for relational dimensions only.</p>
</li>
</ul>
<a id="CIHEFJJD"></a>
<div class="sect4">
<h5 class="sect4">Advanced Dialog Box</h5>
<p>Use the Advanced dialog box to specify the sparsity of the dimensions that the cube references. Sparsity is applicable for only for MOLAP cubes and ROLAP cubes that are implemented using cube MVs. For more information about sparsity, see <a class="olink OLAUG" href="../../olap.112/e17123/toc.htm"><span class="italic">Oracle OLAP User's Guide</span></a>.</p>
<p>This dialog box displays a table that contains two columns: Dimensions and Sparsity.</p>
<ul>
<li>
<p><span class="bold">Dimensions:</span> This column displays all the dimensions listed on the Dimension tab of the Cube Editor. The dimensions are listed in the order in which they appear on the Dimensions tab. To change the order in which the dimensions appear on this dialog box, you must change the order in which the dimensions are listed on the <a href="#CHDIEEAI">"Dimensions Tab"</a> of the Cube Editor.</p>
</li>
<li>
<p><a id="sthref664"></a><a id="sthref665"></a><span class="bold">Sparsity:</span> Sparsity specifies that the cube data is sparse along a particular dimension. Select <span class="bold">Sparsity</span> for a dimension reference if the cube data is sparse along that dimension. For example, if the data in the SALES cube is sparse along the Promotions dimension, select Sparsity for the Promotions dimension.</p>
<p>All the sparse dimensions in a cube must be grouped starting from the least sparse to the most sparse. For example, the Sales cube references the dimensions Times, Products, Promotions, and Channels. This is the order in which the dimensions are listed in the Advanced dialog box. The cube data is sparse along the dimensions Promotions and Channels, with Promotions being the most sparse. Then all these dimensions should appear as a group in the following order: Times, Products, Channels, and Promotions. You cannot have any other dimension listed in between these dimensions.</p>
<p>Use the following <a id="sthref666"></a>guidelines to order dimensions:</p>
<ul>
<li>
<p>List the time dimension first to expedite data loading and time-based analysis. Time is often a dense dimension, although it may be sparse if the base level is Day or the cube has many dimensions.</p>
</li>
<li>
<p>List the sparse dimensions in order from the one with the most members to the one with the least. For a compressed cube, list the sparse dimensions in order from the one with the least members to the one with the most.</p>
</li>
</ul>
<p>Defining sparsity for a cube provides the following benefits:</p>
<ul>
<li>
<p>Improves data retrieval speed.</p>
</li>
<li>
<p>Reduces the storage space used by the cube.</p>
</li>
</ul>
</li>
</ul>
<p><a id="CIHIDHJJ"></a><span class="subhead3"><a id="sthref667"></a>Compress Cube&nbsp;</span>Select this option to compress the cube data and then store it. Compressed storage uses less space and results in faster aggregation than a normal space storage. For more details on compressing cubes, see <a class="olink OLAUG" href="../../olap.112/e17123/toc.htm"><span class="italic">Oracle OLAP User's Guide</span></a>.</p>
<p>Compressed storage is normally used for extremely sparse cubes. A cube is said to be extremely sparse if the dimension hierarchies contain levels with little change to the number of dimension members from one level to the next. Thus many parents have only one descendent for several contiguous levels. Since the aggregated data values do not change from one level to the next, the aggregate data can be stored once.</p>
<p>For compressed composites, you can only choose SUM and non-additive aggregation operators.</p>
<p><a id="sthref668"></a><span class="subhead3"><a id="sthref669"></a>Partition Cube&nbsp;</span>Select this option to partition the cube along one of its dimensions. Partitioning a cube improves the performance of large measures.</p>
<p>Use the table below the Partition Cube option to specify the dimension along which the cube is partitioned. The specified dimension must have at least one level-based hierarchy and its members must be distributed evenly, such that every parent at a particular level has roughly the same number of children. Use the <span class="bold">Dimension</span> column to select the dimension along which the cube is partitioned. Use the <span class="bold">Hierarchy</span> and <span class="bold">Level</span> columns to select the dimension hierarchy and level.</p>
<p>Time is usually the best choice to partition a cube because it meets the required criteria. In addition, data is loaded and rolled off by time period, so that new partitions can be created and old partitions dropped as part of the data refresh process.</p>
<p><a id="sthref670"></a><span class="subhead3">Use a Global Index&nbsp;</span>Select this option to create a global partitioned index.</p>
</div>
<!-- class="sect4" --></div>
<!-- class="sect3" -->
<a id="CHDJBHFD"></a>
<div class="sect3">
<h4 class="sect3">Measures Tab</h4>
<p>Use the Measures tab to define the cube measures. Specify the following details for each measure:</p>
<ul>
<li>
<p><span class="bold">Name:</span> The name of the measure. The measure name must be unique within the cube.</p>
</li>
<li>
<p><span class="bold">Description:</span> An optional description for the measure.</p>
</li>
<li>
<p><span class="bold">Data Type:</span> The data type of the measure.</p>
</li>
<li>
<p><span class="bold">Length:</span> The maximum number of bytes for the measure. Length is specified only for character data.</p>
</li>
<li>
<p><span class="bold">Precision:</span> Define the total number of digits enabled for the column. Precision is defined only for numeric data types.</p>
</li>
<li>
<p><span class="bold">Scale:</span> Define the total number of digits to the right of the decimal point. Scale is defined only for numeric data types.</p>
</li>
<li>
<p><span class="bold">Seconds Precision:</span> Represents the number of digits in the fractional part of the datetime field. It can be a number between 0 and 9. The seconds precision is used only for <code>TIMESTAMP</code>, <code>TIMESTAMP WITH TIME ZONE</code>, and <code>TIMESTAMP WITH LOCAL TIME ZONE</code> data types.</p>
</li>
<li>
<p><span class="bold">Expression:</span> Use this field to define a calculated measure. A calculated measure is a measure whose data is not stored. Its value is calculated when required using the expression defined. Click the Ellipsis button to display the Calculated Measure wizard. For more information about the Calculated Measure wizard, see <a href="#BABEJHIC">"Calculated Measure Wizard"</a>.</p>
<p>You can use any other measures defined in the cube to create an expression for a measure. The expression defined can be validated only at deploy time.</p>
</li>
</ul>
<div class="infobox-note">
<p class="notep1">Note:</p>
You can create calculated measures for MOLAP dimensions only.</div>
<p>Click the <span class="bold">Generate Calculated Measures</span> button to generate a series of standard calculations for a base measure. This is a time-saver operation for creating share, rank and time based calculations. Any calculated measure that you create using this option can also be created manually using the Calculated Measure wizard.</p>
</div>
<!-- class="sect3" -->
<a id="BABEJHIC"></a>
<div class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Calculated <a id="sthref671"></a><a id="sthref672"></a>Measure Wizard</h4>
<p>Use the Calculated Measure wizard to create calculated measures in a cube that uses a MOLAP implementation. These calculated measures, just like the other measures defined on the cube, are deployed to an analytic workspace. The wizard enables you create certain extra calculations that are not created when you click Generate Calculated Measures.</p>
<div class="sect4"><!-- infolevel="all" infotype="General" --><a id="sthref673"></a>
<h5 class="sect4">Define Calculated Measure Details</h5>
<p>Use this page to define the details of the calculated measure. The contents of this page depend on the type of calculation you chose on the Select Calculated Measure Type page. For example, if you choose addition as the calculated measure type, this page displays the two lists that enable you to select the measure s that should be added.</p>
<p>If you chose Custom Expression on the Select Calculated Measure Type page, the Expression Builder interface is displayed. Use this interface to define a custom measure. For more information about the Expression Builder, see <a href="data_flow_opers.htm#i1145941">"About the Expression Builder"</a>.</p>
</div>
<!-- class="sect4" -->
<div class="sect4"><!-- infolevel="all" infotype="General" --><a id="sthref674"></a>
<h5 class="sect4">Reviewing the Summary Information</h5>
<p>Use the Finish page to review the information defined for the calculated measure. Click <span class="bold">Back</span> to change any of the selected values. Click <span class="bold">Finish</span> to complete the calculated measure definition.</p>
</div>
<!-- class="sect4" --></div>
<!-- class="sect3" -->
<a id="CHDIIFID"></a>
<div class="sect3">
<h4 class="sect3">Aggregation Tab</h4>
<p>Use the Aggregation tab to define the aggregations that must be performed for each dimension that the cube references. You select the aggregate function that is used to aggregate data. You can also precompute measures along each dimension that the cube references. By default, aggregation is performed for every alternate level starting from the lowest level. The default aggregate function is SUM. For more details on the strategies for summarizing data, see the chapter about summarizing data in the <a class="olink OLAUG" href="../../olap.112/e17123/toc.htm"><span class="italic">Oracle OLAP User's Guide</span></a>.</p>
<p>Specify the following options on the Aggregations tab:</p>
<ul>
<li>
<p><span class="bold">Cube Aggregation Method:</span> Select the aggregate function used to aggregate the cube data. The default selection is SUM.</p>
</li>
<li>
<p><span class="bold">Summary Refresh Method:</span> Select the data refresh method. The options you can select are On Demand and On Commit.</p>
</li>
</ul>
<p><a id="sthref675"></a><span class="subhead3">Summary Strategy for Cube&nbsp;</span>Use this section to define levels along which data should be precomputed for each dimension. The <span class="bold">Dimension</span> column lists the dimensions that the cube references. To select the levels in a dimension for which data should be precomputed, click the Ellipsis button in the <span class="bold">PreCompute</span> column to the right of the dimension name. The PreCompute dialog box is displayed. Use this dialog box to select the levels in the dimension along which the measure data is precomputed. You can specify the levels to be precomputed for each dimension hierarchy. By default, alternate levels, starting from the lowest level, are precomputed.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
You cannot define aggregations for pure relational cubes (cubes implemented in a relational schema in the database only and not in OLAP catalog).</div>
<div class="sect4"><!-- infolevel="all" infotype="General" --><a id="sthref676"></a>
<h5 class="sect4">Precomputing ROLAP Cubes</h5>
<p>For ROLAP cubes, aggregation is implemented by creating materialized views that store aggregated data. These materialized views improve query performance. For MOLAP implementations, the aggregate data is generated and stored in the analytic workspace along with the base-level data. Some of the aggregate data is generated during deployment and the rest is aggregated as needed in response to a query, following the rules defined in the Aggregation tab.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
The materialized views created to implement ROLAP aggregation are not displayed under the Materialized Views node in the Projects Navigator.</div>
</div>
<!-- class="sect4" --></div>
<!-- class="sect3" -->
<a id="BABEACDG"></a>
<div class="sect3">
<h4 class="sect3"><a id="sthref677"></a><a id="sthref678"></a>Orphan Tab</h4>
<p>Use the Orphan tab to specify the orphan management policy to use while loading data into the cube or deleting it. The Orphan tab contains two sections: Null Dimension key values and Invalid dimension key values, that you use to specify the action to be taken for cube records with null dimension key values and cube records with invalid dimension key values respectively.</p>
<p>Select one of the following options to specify the orphan management policy for cube records with null and invalid dimension key values:</p>
<ul>
<li>
<p><span class="bold">No Maintenance:</span> Oracle Warehouse Builder does not actively detect, reject, or fix orphan rows.</p>
</li>
<li>
<p><span class="bold">Default Dimension Record:</span> Oracle Warehouse Builder assigns a default dimension record for any row that has an invalid or null dimension key value. Use the Settings button to define the default parent row.</p>
</li>
<li>
<p><span class="bold">Reject Orphan:</span> Oracle Warehouse Builder does not insert the row if it does not have an existing dimension record.</p>
</li>
</ul>
<p>Select <span class="bold">Deploy Error Table(s)</span> to generate and deploy the error tables related to orphan management along with the dimension.</p>
</div>
<!-- class="sect3" -->
<a id="CHDFAABH"></a>
<div class="sect3">
<h4 class="sect3">Physical Bindings Tab<a id="sthref679"></a></h4>
<p>After you define the cube structure, you must specify the details of the database tables or views that store the cube data. The Physical Bindings tab enables you to define the implementation objects for cubes. Choose one of the following options to bind the cube to the database object that stores its data:</p>
<ul>
<li>
<p>Auto binding</p>
</li>
<li>
<p>Manual binding</p>
</li>
</ul>
<p><a id="sthref680"></a><span class="subhead3">Auto Binding&nbsp;</span>When you perform auto binding, the measures and dimension references of the cube are automatically mapped to the database columns that store their data.</p>
<p>To perform auto binding, select the cube in the Projects Navigator. From the File menu, click <span class="bold">Bind</span>. Oracle Warehouse Builder maps the measures and dimension references in the cube to the table that stores the cube data.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink WBCON" href="../e10581/toc.htm"><span class="italic">Oracle Warehouse Builder Concepts</span></a> for information about auto binding rules.</div>
<p><a id="sthref681"></a><span class="subhead3">Manual Binding&nbsp;</span>In manual binding, you must explicitly map the measures and dimension references in the cube to the database objects that store their data. You can either store the cube data in existing tables or create new tables.</p>
<p>To perform manual binding:</p>
<ol>
<li>
<p>Open the Cube Editor for the cube and navigate to the Physical Bindings tab.</p>
</li>
<li>
<p>Right-click a blank area, select <span class="bold">Add</span> and then select the type of objects that stores the cube data. For example, if the cube data is stored in a table, right-click a blank area, select <span class="bold">Add</span> and then <span class="bold">Table</span>.</p>
<p>Oracle Warehouse Builder displays the Add a new or Existing table dialog box. You either select an existing table or create a new table to store the cube data.</p>
</li>
<li>
<p>Map each attribute in the dimension to the database column that stores its data.</p>
</li>
</ol>
<p>After you define the cube using the Data Object and perform binding (for ROLAP cubes only), you must deploy the cube. For more information about deploying cubes, see <a href="#BABFJCJB">"Deploying Cubes"</a>.</p>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<div class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref682"></a>
<h3 class="sect2">Cubes Stored in Analytic Workspaces</h3>
<p>Cubes that use a MOLAP implementation are stored in analytic workspaces. The analytic workspace engine in Database 10<span class="italic">g</span> provides APIs called AWXML. These APIs enable both client/server usage (as in Analytic Workspace Manager) and batch-like usage with java stored procedures. This section describes implementation details for MOLAP cubes.</p>
<div class="sect3"><!-- infolevel="all" infotype="General" --><a id="sthref683"></a>
<h4 class="sect3">Ragged <a id="sthref684"></a>Cube Data</h4>
<p>If you select <span class="bold">Use natural keys from data source</span> on the Storage tab of a dimension, mapping code (AWXML mapping code) that can handle ragged fact data for any cube that uses this dimension is generated. The source column for the cube dimension level is actually mapped to every parent level also. It enables ragged fact data to be loaded.</p>
<p>If you select <span class="bold">Generate surrogate keys in the analytic workspace</span> on the Storage tab of a dimension, when you create a mapping that loads data at the level of this dimension, you load cube dimension members for this level only.</p>
</div>
<!-- class="sect3" -->
<div class="sect3"><!-- infolevel="all" infotype="General" --><a id="sthref685"></a>
<h4 class="sect3">Defining Aggregations</h4>
<p>Oracle Warehouse Builder enables you to reuse existing dimensions without the need of defining additional hierarchies. Aggregations are generated based on the cube dimension level references you define. Only hierarchies where the cube dimension level is a member is included in the aggregation. If the cube dimension level referenced is a non-leaf level of the hierarchy, then levels lower in the hierarchy is excluded when the cube or measures are solved. For example, if you have two cubes, BUDGET and SALES, they can share the same dimension definitions without additional dimension hierarchy definitions.</p>
</div>
<!-- class="sect3" -->
<div class="sect3"><!-- infolevel="all" infotype="General" --><a id="sthref686"></a>
<h4 class="sect3">Auto <a id="sthref687"></a><a id="sthref688"></a>Solving MOLAP Cubes</h4>
<p>An important attribute of the OLAP AWXML engine is its ability to auto-solve cubes that are stored in analytic workspaces. You can auto-solve both compressed and non-compressed cubes. A compressed cube is one for which the <span class="bold">Compress Cube</span> option on the <a href="#CIHEFJJD">"Advanced Dialog Box"</a> is selected.</p>
<p>A cube is auto-solved if any of the following conditions are satisfied:</p>
<ul>
<li>
<p>The cube is compressed</p>
</li>
<li>
<p>The cube is not compressed, and the following additional conditions are true:</p>
<ul>
<li>
<p>The solve property for all the measures is set to Yes.</p>
</li>
<li>
<p>The dimension levels that the cube references are at the leaf level of all hierarchies the level is a member of.</p>
</li>
</ul>
</li>
<li>
<p>Mapping that contains the cube is run.</p>
</li>
</ul>
<p>Incremental Aggregation of cube is dependent on auto-solve (load and aggregate in one operation). Incremental aggregation is a property of the cube operator in the mapping and applies only to auto-solved cubes.Oracle Warehouse Builder can generate cubes that are not auto-solved cubes if any of the following conditions are true:</p>
<ul>
<li>
<p>The cube is solved by the mapping that loads the cube</p>
</li>
<li>
<p>Oracle Warehouse Builder transformations are used to solve the cube</p>
</li>
<li>
<p>The cube is non-compressed and any of the following conditions are true:</p>
<ul>
<li>
<p>Some of the measures have the Solve property set to No.</p>
</li>
<li>
<p>The dimension levels that the cube references are non-leaf levels of a hierarchy the level is a member of.</p>
</li>
</ul>
</li>
</ul>
</div>
<!-- class="sect3" -->
<div class="sect3"><!-- infolevel="all" infotype="General" --><a id="sthref689"></a>
<h4 class="sect3">Solving <a id="sthref690"></a><a id="sthref691"></a>Cube Measures</h4>
<p>You can choose to solve only one cube measure for both compressed and non-compressed cubes. A compressed cube is one for which the Compress Cube option on the <a href="#CIHEFJJD">"Advanced Dialog Box"</a> is selected.</p>
<p>To solve only one measure in a compressed cube, use the following steps:</p>
<ol>
<li>
<p>Open the Cube Editor for the cube and navigate to the Aggregation tab.</p>
<p>You can open the Cube Editor by double-clicking the cube name in the Projects Navigator.</p>
</li>
<li>
<p>Select the measure to solve on the <span class="bold">Measures</span> section of the Aggregation tab.</p>
</li>
<li>
<p>The <span class="bold">Aggregation for measure</span> section displays a row for each dimension that the cube references. In the row that represents the dimension along which you want to solve the cube, select <span class="bold">NOAGG</span> in the <span class="bold">Aggregation Function</span> column.</p>
</li>
</ol>
<p>To solve only one measure in a non-compressed cube, you need the latest database patch 10.2.0.2. If you have Database 10<span class="italic">g</span> Release 1, then refer to patch 4550247 for details. The options defined on cube measures for solve indicate which measures is included in the primary solve. The solve indicator on the cube operator in the map however indicates whether this solve is processed or not. So the map can just load data or load and solve the data.</p>
</div>
<!-- class="sect3" -->
<div class="sect3"><!-- infolevel="all" infotype="General" --><a id="sthref692"></a>
<h4 class="sect3">Solving <a id="sthref693"></a><a id="sthref694"></a>Cubes Independent of Loading</h4>
<p>You can solve cubes independent of loading using the predefined transformation WB_OLAP_AW_PRECOMPUTE. This function also enables you to solve measures independently of each other. This transformation function is available in the Globals Navigator under the Public Transformations node in the OLAP category of the Predefined node.</p>
<p>The following example solves the measure <code>SALES</code> in the <code>SALES_CUBE</code>:</p>
<pre>
declare
    rslt VARCHAR2(4000);
begin
    rslt:=WB_OLAP_AW_PRECOMPUTE('MART','SALES_CUBE','SALES');
end;
/

</pre>
<p>This function contains parameters for parallel solve and maximum number of job queues. If the cube is being solved in parallel, then an asynchronous solve job is started and the master job ID is returned through the return value of the function.</p>
<p><a id="sthref695"></a><span class="subhead3">Calculation Plans Generated&nbsp;</span>The following calculation plans are generated:</p>
<ul>
<li>
<p>Calculation plan for the cube</p>
</li>
<li>
<p>Calculation plan for each stored measure</p>
</li>
</ul>
<p>It enables measures to be solved individually after a data load, or entire cubes to be solved. The actual calculation plan can also exclude levels based on the metadata.</p>
</div>
<!-- class="sect3" -->
<div class="sect3"><!-- infolevel="all" infotype="General" --><a id="sthref696"></a>
<h4 class="sect3">Parallel <a id="sthref697"></a><a id="sthref698"></a>Solving of Cubes</h4>
<p>You can enable parallel solving of cubes by configuring the mapping that loads the cube. The cube operator has a property called <span class="bold">Allow Parallel Solve</span> and also a property for the <span class="bold">Max Job Queues Allocated</span>. These two properties determine if parallel solving is performed and also the size of the job pool. The default is to let the AWXML engine determine this value.</p>
</div>
<!-- class="sect3" -->
<div class="sect3"><!-- infolevel="all" infotype="General" --><a id="sthref699"></a>
<h4 class="sect3">Output of a MOLAP Cube Mapping</h4>
<p>When you run a mapping that loads a cube, one of the output parameters is AW_EXECUTE_RESULT. When the map is run using parallel solve, this output parameter contains the job ID. You can then use the following data dictionary views to determine when the job is complete and what to do next:</p>
<ul>
<li>
<p>ALL_SCHEDULER_JOBS</p>
</li>
<li>
<p>ALL_SCHEDULER_JOB_RUN_DETAILS</p>
</li>
<li>
<p>ALL_SCHEDULER_RUNNING_JOBS</p>
</li>
</ul>
<p>If the mapping is not run using parallel solve, the AW_EXECUTE_RESULT output parameter returns the 'Successful' tag or an error. For more information about the error, see the OLAPSYS.XML_LOAD_LOG table.</p>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<div class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref700"></a>
<h3 class="sect2">Restriction on Referencing a Non-Leaf Level</h3>
<p>A cube cannot reference a non-leaf-level when a dimension is a star implementation that is defined without surrogate keys, because non-leaf records are not included in the dimension table. While the parent level information is included in the child records, there is no way to uniquely identify it. While the cube editor enables you to pick a non-leaf level for the dimension reference in the cube, you obtain incorrect results when you load the cube.</p>
<p>A deployment error is possible on the fact table, if the data types of the parent level business key and the leaf-level business key do not match. In that case, the foreign key definition is incorrect, because the foreign key column has the data type of the parent level, but the referenced primary key column must have the data type of the leaf level.</p>
<p>For example, create a simple dimension with two levels, <code>L1</code> and <code>L2</code>. Assign them business key attributes with these data types: <code>L1</code> <code>NUMBER</code> and <code>L2</code> <code>VARCHAR2(20)</code>. Then, create a cube to reference this dimension and pick <code>L1</code> (the parent) as the referenced dimension. When creating the surrogate key attribute role for the ID, change the dimension attribute to null, so that the dimension does not have surrogate keys. Rebind the cube after picking the parent level as the reference. If you then attempt to deploy the fact table, then Oracle Warehouse Builder returns an ORA-XXXXX error.</p>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="BEICADBG"></a><a id="WBETL03013"></a>
<div class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1"><a id="sthref701"></a><a id="sthref702"></a>Editing Cube Definitions</h2>
<p>You can edit a cube and alter its definition using the Cube Editor. When you edit a dimension definition, the changes are made only in the object metadata. To update the physical object definition, deploy the modified dimension using the Control Center.</p>
<p><span class="bold">To edit a cube definition:</span></p>
<ul>
<li>
<p>Right-click the cube in the Projects Navigator and select <span class="bold">Open.</span></p>
</li>
</ul>
<p><span class="italic">or</span></p>
<ul>
<li>
<p>Double-click the cube in the Projects Navigator.</p>
</li>
</ul>
<p>The Cube Editor is displayed. Edit the cube definition using these tabs. For more information about the tabs in the Cube Editor, see <a href="#CHDCFIDI">"Using the Cube Editor to Create Cubes"</a>.</p>
</div>
<!-- class="sect1" -->
<a id="CIHDBEID"></a><a id="WBETL03012"></a>
<div class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Configuring <a id="sthref703"></a><a id="sthref704"></a>Cubes</h2>
<p>When you configure a cube, you configure both the cube and the underlying table.</p>
<p><span class="bold">To configure the physical properties for a cube:</span></p>
<ol>
<li>
<p>From the Projects Navigator, right-click the cube name and select <span class="bold">Configure</span>.</p>
<p>The Configuration tab for the cube is displayed.</p>
</li>
<li>
<p>Configure the cube parameters listed in the following categories.</p>
<p>In addition to these parameters, use the following are some guidelines for configuring a cube.</p>
<ul>
<li>
<p>Foreign Key constraints exist for every dimension.</p>
</li>
<li>
<p>Bitmap indexes have been generated for every foreign key column to its referenced dimension.</p>
</li>
</ul>
</li>
</ol>
<p class="subhead2"><a id="sthref705"></a>Identification</p>
<p><span class="bold">Deployable<a id="sthref706"></a>:</span> Select TRUE to indicate to deploy this cube. Oracle Warehouse Builder generates scripts only for table constraints marked deployable.</p>
<p><span class="bold">Deployment Options<a id="sthref707"></a>:</span> Use this parameter to specify the type of implementation for the cube. The options are:</p>
<ul>
<li>
<p><span class="bold">Deploy All:</span> For a relational or ROLAP implementation, the cube is deployed to the database and a CWM definition to the OLAP catalog. For a MOLAP implementation, the cube is deployed to the analytic workspace.</p>
</li>
<li>
<p><span class="bold">Deploy Data Objects only:</span> Deploys the cube only to the database. You can select this option only for cubes that have a relational implementation.</p>
</li>
<li>
<p><span class="bold">Deploy to Catalog only:</span> Deploys the CWM definition to the OLAP catalog only. Use this option if you want applications such as Discoverer for OLAP to access the cube data after you deploy data only. Use this option if you previously deployed with "Data Objects Only" and now want to deploy the CWM Catalog definitions without redeploying the data objects again.</p>
</li>
<li>
<p><span class="bold">Deploy Aggregation:</span> Deploys the aggregations defined on the cube measures.</p>
</li>
</ul>
<p><span class="bold">Materialized View Index Tablespace<a id="sthref708"></a>:</span> The name of the tablespace that stores the materialized view indexes.</p>
<p><span class="bold">Materialized View Tablespace<a id="sthref709"></a>:</span> The name of the tablespace that stores the materialized view created for the cube.</p>
<p><span class="bold">Visible:</span> This parameter is not used in code generation.</p>
<p class="subhead2"><a id="sthref710"></a>Summary Management</p>
<ul>
<li>
<p><span class="bold">Cost Based Aggregation:</span> This parameter is applicable to MOLAP cubes and ROLAP cubes with OLAP summaries (materialized views). Represents the percentage of preaggregation for cubes.</p>
<p>Setting a value of 0 for this parameter does not create any aggregate values. The aggregations are computed at run time. Subsequently, this value results in the fastest maintenance and the least storage space. However, it also results in the slowest query response time.</p>
<p>Setting a value of 100 for this parameter creates all the aggregate values. These values must be fetched when a query is run. This value results in the fastest query response time. However, the maintenance is slow and a lot of storage space is used.</p>
</li>
<li>
<p><span class="bold">Enable Query Rewrite:</span> Set this parameter to ENABLE to enable query rewrite. The query rewrite mechanism in the server automatically rewrites SQL queries to use existing materialized views. This improves query performance. Set this parameter only if the cube uses a ROLAP with MVs implementation.</p>
</li>
</ul>
<p>For information about the parameters Enable MV Refresh, MV constraints, Refresh Mode, Refresh Next Date, Refresh On, and Refresh Start Date, see <a href="#BABIFFHI">"Summary Management"</a>.</p>
<div class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref711"></a>
<h3 class="sect2">Specifying How Cubes are Deployed</h3>
<p>You can specify the form in which cubes are deployed to the target schema by setting the Deployment Option configuration parameter. The values you can set for deployment option of cubes are: <a href="#BABFCFBB">Deploy All</a>, <a href="#BABEEJEB">"Deploy Data Objects Only"</a>, <a href="#BABIHEHE">"Deploy to Catalog"</a>, and <a href="#BABGEIFD">"Deploy Aggregation"</a>. For steps on setting the Configuration Options parameter, see <a href="#CIHDBEID">"Configuring Cubes"</a>.</p>
<p>In addition to the Deployment Option configuration parameter, the form in which cubes are deployed also depends on the generation mode you specify. The PL/SQL Generation Mode parameter of the module containing the cube represents the Database to which objects in the module are deployed. You can set the PL/SQL Generation Mode to one of the following options: Default Oracle Database 10<span class="italic">g</span>, Oracle Database 11<span class="italic">g</span>, Oracle8<span class="italic">i</span>, and Oracle9<span class="italic">i</span>. For more information, see <a href="orcl_data_objx.htm#i1127700">"Configuring Target Modules"</a>.</p>
<p><a href="#BABGGHGJ">Table 3-14</a> describes how cubes with ROLAP implementations are deployed on different Database versions.</p>
<div class="tblformalwide">
<p class="titleintable"><a id="sthref712"></a><a id="BABGGHGJ"></a>Table 3-14 Deployment Options for ROLAP Cubes</p>
<table class="cellalignment2978" title="Deployment Options for ROLAP Cubes" summary="This table describes the form in which cubes are stored for ROLAP implementation." dir="ltr">
<thead>
<tr class="cellalignment2969">
<th class="cellalignment2976" id="r1c1-t50">Deployment Option</th>
<th class="cellalignment2976" id="r1c2-t50">Target Schema: Database 10<span class="italic">g</span>, ROLAP Implementation</th>
<th class="cellalignment2976" id="r1c3-t50">Target Schema: Database 11<span class="italic">g</span>, ROLAP Implementation</th>
<th class="cellalignment2976" id="r1c4-t50">Target Schema: Database 11<span class="italic">g</span>, ROLAP with MVs Implementation</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2969">
<td class="cellalignment2977" id="r2c1-t50" headers="r1c1-t50">
<p>Deploy Data Objects</p>
</td>
<td class="cellalignment2977" headers="r2c1-t50 r1c2-t50">
<p>n/a</p>
</td>
<td class="cellalignment2977" headers="r2c1-t50 r1c3-t50">
<p>n/a</p>
</td>
<td class="cellalignment2977" headers="r2c1-t50 r1c4-t50">
<p>n/a</p>
</td>
</tr>
<tr class="cellalignment2969">
<td class="cellalignment2977" id="r3c1-t50" headers="r1c1-t50">
<p>Deploy to Catalog</p>
</td>
<td class="cellalignment2977" headers="r3c1-t50 r1c2-t50">
<p>CWM2</p>
</td>
<td class="cellalignment2977" headers="r3c1-t50 r1c3-t50">
<p>CWM2</p>
</td>
<td class="cellalignment2977" headers="r3c1-t50 r1c4-t50">
<p>11g form AW+</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformalwide" -->
<p><a href="#BABGECGH">Table 3-15</a> describes how cubes with a MOLAP implementation are deployed on different Database versions.</p>
<div class="tblformalwide">
<p class="titleintable"><a id="sthref713"></a><a id="BABGECGH"></a>Table 3-15 Deployment Options for Cubes with a MOLAP Implementation</p>
<table class="cellalignment2978" title="Deployment Options for Cubes with a MOLAP Implementation" summary="This table describes the form in which cubes are stored for MOLAP implementation." dir="ltr">
<thead>
<tr class="cellalignment2969">
<th class="cellalignment2976" id="r1c1-t51">Deployment Option</th>
<th class="cellalignment2976" id="r1c2-t51">Target Schema: Database 10<span class="italic">g</span></th>
<th class="cellalignment2976" id="r1c3-t51">Target Schema: Database 11<span class="italic">g</span></th>
</tr>
</thead>
<tbody>
<tr class="cellalignment2969">
<td class="cellalignment2977" id="r2c1-t51" headers="r1c1-t51">
<p>Deploy Data Objects</p>
</td>
<td class="cellalignment2977" headers="r2c1-t51 r1c2-t51">
<p>10g form AW</p>
</td>
<td class="cellalignment2977" headers="r2c1-t51 r1c3-t51">
<p>11g form AW</p>
</td>
</tr>
<tr class="cellalignment2969">
<td class="cellalignment2977" id="r3c1-t51" headers="r1c1-t51">
<p>Deploy to Catalog</p>
</td>
<td class="cellalignment2977" headers="r3c1-t51 r1c2-t51">
<p>10g form AW</p>
</td>
<td class="cellalignment2977" headers="r3c1-t51 r1c3-t51">
<p>11g form AW</p>
</td>
</tr>
<tr class="cellalignment2969">
<td class="cellalignment2977" id="r4c1-t51" headers="r1c1-t51">
<p>Deploy All</p>
</td>
<td class="cellalignment2977" headers="r4c1-t51 r1c2-t51">
<p>n/a</p>
</td>
<td class="cellalignment2977" headers="r4c1-t51 r1c3-t51">
<p>n/a</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformalwide" --></div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="CIHCJAFD"></a><a id="WBETL03014"></a>
<div class="sect1">
<h2 class="sect1">Creating Time Dimensions</h2>
<p>Oracle Warehouse Builder provides the Create Time Dimension wizard that enables you to create a fully functional time dimension quickly. The mapping that populates the time dimension is also created automatically. When you choose a relational implementation for a time dimension, the implementation objects that store the time dimension data are also created.</p>
<p>You can also use the Dimension Editor to define a time dimension with your own specifications. In this case, you must create the implementation objects and the map that loads the time dimension.</p>
<div class="sect2"><a id="sthref714"></a>
<h3 class="sect2"><a id="sthref715"></a><a id="sthref716"></a><a id="sthref717"></a>Creating a Time Dimension Using the Time Dimension Wizard</h3>
<p>Use the following steps to create a time dimension using the Create Time Dimension wizard:</p>
<ol>
<li>
<p>From the Projects Navigator expand the <span class="bold">Databases</span> node and then the <span class="bold">Oracle</span> node.</p>
</li>
<li>
<p>Expand the target module where you want to create a time dimension.</p>
</li>
<li>
<p>Right-click <span class="bold">Dimensions</span>, select <span class="bold">New</span>.</p>
<p>The New Gallery dialog box is displayed.</p>
</li>
<li>
<p>Select <span class="bold">Time Dimension</span> and click <span class="bold">OK</span>.</p>
<p>Oracle Warehouse Builder displays the Welcome page of the Create Time Dimension wizard. Click <span class="bold">Next</span> to proceed. The wizard guides you through the following pages:</p>
<ul>
<li>
<p><a href="#CHDFJJIJ">"Name and Description Page"</a></p>
</li>
<li>
<p><a href="#CHDHFACB">"Storage Page"</a></p>
</li>
<li>
<p><a href="#CHDGBJDC">"Data Generation Page"</a></p>
</li>
<li>
<p><a href="#CHDBBCJB">"Levels Page (Calendar Time Dimension Only)"</a></p>
</li>
<li>
<p><a href="#CIHCBGDG">"Levels Page (Fiscal Time Dimension Only)"</a></p>
</li>
<li>
<p><a href="#CIHCEFFI">"Pre Create Settings Page"</a></p>
</li>
<li>
<p><a href="#CIHEICCA">"Time Dimension Progress Page"</a></p>
</li>
<li>
<p><a href="#CHDEEJEE">"Summary Page"</a></p>
</li>
</ul>
</li>
</ol>
<a id="CHDFJJIJ"></a>
<div class="sect3">
<h4 class="sect3">Name and Description Page</h4>
<p>The Name page describes the time dimension. Provide the following details on the Name page:</p>
<ul>
<li>
<p><span class="bold">Name:</span> Type the name of the time dimension. The name must be unique within a module.</p>
</li>
<li>
<p><span class="bold">Description:</span> Type an optional description for the time dimension.</p>
</li>
</ul>
</div>
<!-- class="sect3" -->
<a id="CHDHFACB"></a>
<div class="sect3">
<h4 class="sect3"><a id="sthref718"></a>Storage Page</h4>
<p>Use the Storage page to specify how the time dimension data should be stored in the database. You select the storage type based on the volume of data stored at the lowest level of the entire cube and the refresh rate required. The storage type options are:</p>
<ul>
<li>
<p><span class="bold">ROLAP: Relational storage:</span> Stores the time dimension definition in a relational form in the database. Select this option to create a time dimension that uses a relational or ROLAP implementation.</p>
<p>Oracle Warehouse Builder automatically creates the underlying tables required to implement this time dimension. A star schema is used to implement the time dimension.</p>
<p>If the database containing the target schema has the OLAP option installed, you can also deploy the dimensions to the OLAP catalog.</p>
</li>
<li>
<p><span class="bold">ROLAP with MVs:</span> Stores the time dimension definition and its data in a relational form in the database. Additionally, cube-organized MVs are created in the analytic workspace. Select this option to create a dimension that uses a relational implementation and stores summaries in the analytic workspace.</p>
<p>Using this option provides summary management based on cube-organized MVs in Oracle Database 11<span class="italic">g</span>. Query performance is greatly improved, without the requirement to make any modification to your queries.</p>
</li>
<li>
<p><span class="bold">MOLAP: Multidimensional storage:</span> Stores the time dimension definition and data in an analytic workspace. Select this option to create a time dimension that uses a MOLAP implementation.</p>
<p>Oracle Warehouse Builder stores the time dimension in an analytic workspace with same name as the module. The tablespace that is used to store the analytic workspace is the tablespace that is defined as the users tablespace for the schema that contains the dimension metadata.</p>
</li>
</ul>
<p>For more information about these options, see <a href="#CHDGCBHE">"Storage Type Page"</a>.</p>
</div>
<!-- class="sect3" -->
<a id="CHDGBJDC"></a>
<div class="sect3">
<h4 class="sect3"><a id="sthref719"></a>Data Generation Page</h4>
<p>Use the Data Generation page to specify additional information about the time dimension such as the type of time dimension and the range of data stored in it. This page contains details about the range of data stored in the time dimension and the type of temporal data.</p>
<p><a id="sthref720"></a><span class="subhead3">Range of Data&nbsp;</span>The Range of Data section specifies the range of the temporal data stored in the time dimension. To specify the range, define the following:</p>
<ul>
<li>
<p><span class="bold">Start year:</span> The year from which to store data in the time dimension. Click the list to select a starting year.</p>
</li>
<li>
<p><span class="bold">Number of years:</span> The total number of years, beginning from Start Year, for which the time dimension stores data. Specify the number of years by selecting a value from the list.</p>
</li>
</ul>
<p><a id="sthref721"></a><span class="subhead3">Type of Time Dimension&nbsp;</span>Use the Type of Time Dimension section to specify the type of time dimension to create. Select one of the following options for type of time dimension:</p>
<ul>
<li>
<p><span class="bold">Calendar:</span> Creates a calendar time dimension.</p>
</li>
<li>
<p><span class="bold">Fiscal:</span> Creates a fiscal time dimension. Enter the following additional details to create a fiscal time dimension:</p>
<ul>
<li>
<p><span class="bold">Fiscal Convention:</span> Select the convention to use to represent the fiscal months. The options available are 544 and 445.</p>
</li>
<li>
<p><span class="bold">Fiscal Year Starting:</span> Select the date and month from which the fiscal year starts.</p>
</li>
<li>
<p><span class="bold">Fiscal Week Starting:</span> Select the day from which the fiscal week starts.</p>
</li>
</ul>
</li>
</ul>
</div>
<!-- class="sect3" -->
<a id="CHDBBCJB"></a>
<div class="sect3">
<h4 class="sect3"><a id="sthref722"></a>Levels Page (Calendar Time Dimension Only)</h4>
<p>Use the Levels page to select the calendar hierarchy that should be created and the levels that it contains. Since there is no drill-up path from the Calendar Week level to any of the levels above it, the following two options are provided to create a calendar hierarchy:</p>
<ul>
<li>
<p>Normal Hierarchy</p>
</li>
<li>
<p>Week Hierarchy</p>
</li>
</ul>
<p><a id="sthref723"></a><span class="subhead3">Normal Hierarchy&nbsp;</span>The Normal Hierarchy contains the following levels:</p>
<ul>
<li>
<p>Calendar year</p>
</li>
<li>
<p>Calendar quarter</p>
</li>
<li>
<p>Calendar month</p>
</li>
<li>
<p>Day</p>
</li>
</ul>
<p>Select the levels to be included in the calendar hierarchy. You must select at least two levels.</p>
<p><a id="sthref724"></a><span class="subhead3">Week Hierarchy&nbsp;</span>The Week Hierarchy contains two levels: Calendar Week and Day. Use this hierarchy to create a hierarchy that contains the Calendar Week level. When you select the Week Hierarchy option, both these levels are selected by default.</p>
</div>
<!-- class="sect3" -->
<a id="CIHCBGDG"></a>
<div class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Levels Page (Fiscal Time Dimension Only)</h4>
<p>Use the Levels page to select the levels that should be included in the fiscal hierarchy. The levels you can select are:</p>
<ul>
<li>
<p>Fiscal year</p>
</li>
<li>
<p>Fiscal quarter</p>
</li>
<li>
<p>Fiscal month</p>
</li>
<li>
<p>Fiscal week</p>
</li>
<li>
<p>Day</p>
</li>
</ul>
<p>You must select a minimum of two levels. Oracle Warehouse Builder creates the fiscal hierarchy that contains the selected levels. To create additional hierarchies, use the Dimension Editor. For more information about using the Dimension Editor, see <a href="#CIHJEBDD">"Editing Time Dimension Definitions"</a>.</p>
</div>
<!-- class="sect3" -->
<a id="CIHCEFFI"></a>
<div class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Pre Create Settings Page</h4>
<p>The Pre Create Settings page displays a summary of the options you selected on the previous pages of the Create Time Dimension wizard. This includes the attributes, levels, hierarchies, and the name of the map that is used to populate the time dimension. Oracle Warehouse Builder uses these settings to create the objects that implement the time dimension. Click <span class="bold">Next</span> to proceed with the implementation of the wizard. Click <span class="bold">Back</span> to change any options that you selected on the previous wizard pages.</p>
</div>
<!-- class="sect3" -->
<a id="CIHEICCA"></a>
<div class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Time Dimension Progress Page</h4>
<p>The Time Dimension Progress page displays the progress of the time dimension implementation. The progress status log on this page lists the activities that are performed by the Time Dimension wizard to implement the time dimension. After the process is completed, click <span class="bold">Next</span> to proceed.</p>
</div>
<!-- class="sect3" -->
<a id="CHDEEJEE"></a>
<div class="sect3">
<h4 class="sect3">Summary Page</h4>
<p>The Summary page summarizes the options selected in the wizard pages. Use this page to review the options you selected.</p>
<p>Click <span class="bold">Finish</span> to complete the creation of the time dimension. You now have a fully functional time dimension. This dimension is displayed under the Dimensions node of the Projects Navigator. The mapping that loads this time dimension is displayed under the Mappings node in the Projects Navigator.</p>
<p>Oracle Warehouse Builder creates the following objects:</p>
<ul>
<li>
<p>The time dimension object.</p>
</li>
<li>
<p>The sequence that populates the surrogate ID of the time dimension levels</p>
</li>
<li>
<p>The physical structures that store the time dimension data.</p>
<p>For a relational implementation, the database tables that store the dimension data are created in the workspace. Oracle Warehouse Builder also binds the time dimension attributes to the database columns that store their values. For a MOLAP implementation, the analytic workspace that stores the time dimension and its data is created.</p>
</li>
<li>
<p>A mapping that populates the time dimension.</p>
</li>
</ul>
<div class="infobox-note">
<p class="notep1">Note:</p>
When you delete a time dimension, the table, sequence, and the mapping associated with the time dimension are not deleted. You must explicitly delete these objects.</div>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<div class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref725"></a>
<h3 class="sect2">Defaults Used by the <a id="sthref726"></a>Time Dimension Wizard</h3>
<p>When you create a time dimension using the Time Dimension wizard, the following defaults are used:</p>
<ul>
<li>
<p><span class="bold">Storage:</span> The default implementation for the relational storage is the star schema. For a MOLAP implementation, the dimension is stored in an analytic workspace that has the same name as the module in which the time dimension is created. The analytic workspace is stored in the tablespace that is assigned as the users tablespace for the schema that owns the module containing the dimension.</p>
</li>
<li>
<p><span class="bold">Hierarchy:</span> A standard hierarchy that contains all the levels listed on the Levels page of the Create Dimension wizard is created. The hierarchy contains the levels in the same order that they are listed on the Levels page.</p>
</li>
</ul>
</div>
<!-- class="sect2" -->
<a id="CIHJEBDD"></a>
<div class="sect2">
<h3 class="sect2"><a id="sthref727"></a><a id="sthref728"></a>Editing Time Dimension Definitions</h3>
<p><span class="bold">To edit a time dimension:</span></p>
<ol>
<li>
<p>From the Projects Navigator expand the Databases node then the node.</p>
</li>
<li>
<p>Expand the target module that contains the time dimension to be edited.</p>
</li>
<li>
<p>Right-click the time dimension to edit and select <span class="bold">Open</span>. You can also double-click the time dimension. Oracle Warehouse Builder displays the Dimension Editor for the time dimension.</p>
</li>
<li>
<p>Edit the information about the following tabs:</p>
<ul>
<li>
<p><a href="#CHDDGCBF">"Name Tab"</a></p>
</li>
<li>
<p><a href="#CHDJJHHE">"Storage Tab"</a></p>
</li>
<li>
<p><a href="#CIHDIGJH">"Attributes Tab"</a></p>
</li>
<li>
<p><a href="#CIHBCEDI">"Levels Tab"</a></p>
</li>
<li>
<p><a href="#CHDCDFAE">"Hierarchies Tab"</a></p>
</li>
</ul>
</li>
</ol>
<p>When you modify a time dimension, a new population map and new implementation tables are created. You can choose to either delete the existing population map and implementation tables or to retain them.</p>
<p>Use the Mapping Editor to modify the time dimension population map. You must deploy the mapping that populates the time dimension.</p>
<p>If you delete the population map before deploying the map, you cannot populate data into the time dimension. The work around is to run the time dimension wizard again and create another dimension population map.</p>
<a id="CHDDGCBF"></a>
<div class="sect3">
<h4 class="sect3">Name Tab</h4>
<p>Use the Name tab to describe the Time dimension. Enter the following details on the Name tab:</p>
<ul>
<li>
<p><span class="bold">Name:</span> The name of the time dimension. The name must be unique within the module. For more information about naming conventions, see <a href="orcl_data_objx.htm#CHDEAEAD">"Naming Conventions for Data Objects"</a>.</p>
</li>
<li>
<p><span class="bold">Description:</span> An optional description for the time dimension.</p>
</li>
<li>
<p><span class="bold">Range of Data:</span> Specifies the range of the data stored in the time dimension. To specify the range, define the following:</p>
<ul>
<li>
<p><span class="bold">Starting year:</span> The year from which data should be stored in the time dimension. Click the list to select a starting year.</p>
</li>
<li>
<p><span class="bold">Number of years:</span> The total number of years, beginning from Starting Year, for which the time dimension stores data. Select a value from the list.</p>
</li>
</ul>
</li>
</ul>
</div>
<!-- class="sect3" -->
<a id="CHDJJHHE"></a>
<div class="sect3">
<h4 class="sect3">Storage Tab</h4>
<p>Use the Storage tab to specify the type of storage for the time dimension. The storage options you can use are Relational or MOLAP.</p>
<p><a id="sthref729"></a><span class="subhead3">Relational&nbsp;</span>Selecting the <span class="bold">Relational</span> option stores the time dimension definition in a relational form in the database. Select one of the following options for the relational implementation of the time dimension:</p>
<ul>
<li>
<p><span class="bold">Star schema:</span> The time dimension is implemented using a star schema. Dimension data is stored in a single database table or view.</p>
</li>
<li>
<p><span class="bold">Snowflake schema:</span> The time dimension is implemented using a snowflake schema. The dimension data is stored in multiple tables or views.</p>
</li>
</ul>
<p>If the database containing the target schema has the OLAP option installed, you can also deploy the dimensions to the OLAP catalog.</p>
<p><a id="sthref730"></a><span class="subhead3">MOLAP&nbsp;</span>Select MOLAP to store the time dimension definition and data in an analytic workspace in the database. This method uses an analytic workspace to store the time dimension data. Provide the following details for a MOLAP implementation:</p>
<ul>
<li>
<p><span class="bold">AW Name:</span> Enter the name of the analytic workspace that stores the time dimension. Click the Ellipsis button to display a list of available AWs. Oracle Warehouse Builder displays a node for each module in the current project. Expand a module to view the list of dimensional objects in the module. Selecting an object from list stores the time dimension in the same analytic workspace as the selected object.</p>
</li>
<li>
<p><span class="bold">Tablespace Name:</span> Enter the name of the tablespace that stores the analytic workspace. If you do not enter a value, then the analytic workspace is stored in the tablespace that is defined as the users tablespace for the schema containing the time dimension metadata.</p>
</li>
</ul>
</div>
<!-- class="sect3" -->
<a id="CIHDIGJH"></a>
<div class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Attributes Tab</h4>
<p>The Attributes tab defines the dimension attributes and the sequence used to populate the dimension key of the time dimension. The Sequence field represents the name of the sequence that populates the dimension key column of the time dimension. Use the <span class="bold">Select</span> to the right of this field to select a sequence from the Available Sequences dialog box. This dialog box lists all the sequences that belong to the current project.</p>
<p><a id="sthref731"></a><span class="subhead3">Dimension Attributes&nbsp;</span>The Dimension Attributes section lists the dimension attributes of the time dimension. You also use this page to create new dimension attributes. For each attribute, you specify the following details:</p>
<ul>
<li>
<p><span class="bold">Name:</span> The name of the dimension attribute. The attribute name must be unique within the dimension.</p>
</li>
<li>
<p><span class="bold">Description:</span> An optional description for the attribute.</p>
</li>
<li>
<p><span class="bold">Identifier:</span> Represents the type of identifier of the attribute. The lists displays two options: Surrogate and Business. Select the type of identifier.</p>
</li>
<li>
<p><span class="bold">Data Type:</span> Select the data type of the attribute.</p>
</li>
<li>
<p><span class="bold">Length</span>: Specify length only for character data types.</p>
</li>
<li>
<p><span class="bold">Precision</span>: Define the total number of digits enabled for the column. Precision is defined only for numeric data types.</p>
</li>
<li>
<p><span class="bold">Scale:</span> Define the total number of digits to the right of the decimal point. Scale is defined only for numeric data types.</p>
</li>
<li>
<p><span class="bold">Seconds Precision:</span> Represents the number of digits in the fractional part of the datetime field. It can be a number between 0 and 9. The seconds precision is used only for <code>TIMESTAMP</code>, <code>TIMESTAMP WITH TIME ZONE</code> , and <code>TIMESTAMP WITH LOCAL TIME ZONE</code> data types.</p>
</li>
<li>
<p><span class="bold">Descriptor:</span> Select the type of descriptor. The options are: Short Description, Long Description, Start date, End date, Time span, and Prior period.</p>
</li>
</ul>
</div>
<!-- class="sect3" -->
<a id="CIHBCEDI"></a>
<div class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Levels Tab</h4>
<p>The Levels tab defines the levels in the time dimension. You can create additional levels by entering the name and an optional description for the level in the Levels section. For more information about the contents of the Levels tab, see <a href="#CHDDAEFC">"Level Attributes Page"</a>.</p>
</div>
<!-- class="sect3" -->
<a id="CHDCDFAE"></a>
<div class="sect3">
<h4 class="sect3">Hierarchies Tab</h4>
<p>Use the Hierarchies tab to create additional hierarchies in the time dimension. When you modify the time dimension definition, the map that populates it must reflect these changes. Click <span class="bold">Create Map</span> to re-create the map that populates the time dimension. For a fiscal time dimension, you can modify the fiscal settings by clicking <span class="bold">Fiscal Settings</span>. The Fiscal Information Settings dialog box is displayed. Use this dialog box to modify the fiscal convention, fiscal year start, and fiscal week start.</p>
<p>The Hierarchies tab contains two sections: Hierarchies and Levels.</p>
<ul>
<li>
<p><span class="bold">Hierarchies:</span> Use this section to create hierarchies. Oracle Warehouse Builder displays any existing hierarchies in the time dimension. You create additional hierarchies by specifying the name of the hierarchy and type of hierarchy. The options for type of hierarchy are None, Fiscal, Calendar Week, and Calendar Year. Use the <span class="bold">Default</span> property to indicate which of the hierarchies is the default hierarchy.</p>
</li>
<li>
<p><span class="bold">Levels:</span> The Levels section lists the levels in the time dimension. When you create a new hierarchy, choose the levels to include in your hierarchy by selecting the Applicable option.<a id="sthref732"></a><a id="sthref733"></a></p>
</li>
</ul>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<div class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref734"></a>
<h3 class="sect2">Modifying the Implementation of Time Dimensions</h3>
<p>Use the Time Dimension editor to modify the implementation of a time dimension. The implementation details determine if the time dimension is implemented using a star schema or a snowflake schema.</p>
<p>For each time dimension, Oracle Warehouse Builder automatically creates a mapping that loads the time dimension. Thus, when you modify a time dimension, the mapping that loads the time dimension must also be modified.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
You cannot use the Unbind option to unbind a time dimension from its implementation objects.</div>
<p><span class="bold">To modify the implementation of a time dimension:</span></p>
<ol>
<li>
<p>In the Projects Navigator, double-click the time dimension whose implementation you want to modify.</p>
<p>The editor is opened for the time dimension.</p>
</li>
<li>
<p>On the Storage tab, under the ROLAP: Relational Storage option, select the new implementation for the time dimension.</p>
<p>To change to a star schema implementation, select <span class="bold">Star</span>.</p>
<p>To change to a snowflake implementation, select <span class="bold">Snowflake</span>.</p>
</li>
<li>
<p>On the Hierarchies tab, click <span class="bold">Create map</span>.</p>
<p>This redefines the mapping that loads the time dimension based on the implementation changes made.</p>
</li>
</ol>
<p>The Physical Bindings tab displays the modified bindings for the time dimension.</p>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="CIHHCHFG"></a><a id="WBETL03015"></a>
<div class="sect1">
<h2 class="sect1"><a id="sthref735"></a>Populating Time Dimensions</h2>
<p>You populate a time dimension by creating a mapping that loads data into the time dimension. When you create a time dimension using the Create Time Dimension wizard, Oracle Warehouse Builder creates a mapping that populates the time dimension based on the values of the following parameters:</p>
<ul>
<li>
<p>Start year of the data</p>
</li>
<li>
<p>Number of years of the data</p>
</li>
<li>
<p>Start day and month of fiscal year (only for fiscal time dimensions)</p>
</li>
<li>
<p>Start day of fiscal week (only for fiscal time dimensions)</p>
</li>
<li>
<p>Fiscal type (only for fiscal time dimensions)</p>
</li>
</ul>
<p>The values of these parameters are initialized at the time of creating the time dimension using the Create Time Dimension wizard.</p>
<p><a href="#CIHBCADA">Figure 3-1</a> displays a mapping to load a calendar time dimension. The Mapping Input operator <code>DATE_INPUTS</code> represents the attributes needed to populate the time dimension. The values of the attributes in this operator are set based on the values you provide when you created the time dimension. You can modify these values by double-clicking the DATE_INPUTS operator, clicking the Output Attributes link, and modifying the values of the input parameters. However, when you modify parameter values, you must regenerate the redeploy the mapping that loads the time dimension.</p>
<div class="figure">
<p class="titleinfigure"><a id="CIHBCADA"></a>Figure 3-1 Mapping that Populates a Time Dimension</p>
<img width="690" height="255" src="img/time_dim_load_map.gif" alt="Description of Figure 3-1 follows" /><br />
<a id="sthref736" href="img_text/time_dim_load_map.htm">Description of "Figure 3-1 Mapping that Populates a Time Dimension"</a><br />
<br /></div>
<!-- class="figure" -->
<div class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref737"></a>
<h3 class="sect2">Dynamically Populating <a id="sthref738"></a><a id="sthref739"></a><a id="sthref740"></a>Time Dimensions</h3>
<p>In certain warehouse scenarios, you must dynamically populate your time dimension based on the current requirements. Although the values used to populate the time dimension are set at the time of creating the time dimension, Oracle Warehouse Builder enables you to modify these values and dynamically populate the time dimension when required.</p>
<p>The Deployment Preferences contain a preference called Prompt for Execution Parameters. Setting this parameter to True enables you to provide values for the input parameters at run time.</p>
<p><span class="bold">To dynamically populate time dimensions:</span></p>
<ol>
<li>
<p>Ensure that the Prompt for Execution Parameters preference is set to True.</p>
<p>In the Tools menu, select <span class="bold">Preferences</span> to display the Preferences dialog box. In the left panel, expand the Oracle Warehouse Builder node, click Deployment in the left panel and select <span class="bold">Prompt for Execution Parameters</span>.</p>
</li>
<li>
<p>Run the mapping that loads the time dimension by right-clicking the mapping and selecting <span class="bold">Start</span>.</p>
<p>The Input Parameters dialog box is displayed containing the input parameters that are used to load the time dimension such as start year, number of years.</p>
</li>
<li>
<p>Set values for the parameters YEAR_START_DATE and NUMBER_YEARS and click <span class="bold">OK</span>. For fiscal time dimensions, also set values for FISCAL_TYPE, DAYS_OF_FISCAL_WEEK, and FISCALYEAR_START_DATE.</p>
</li>
</ol>
</div>
<!-- class="sect2" -->
<div class="sect2"><a id="sthref741"></a>
<h3 class="sect2">Overlapping <a id="sthref742"></a>Data Populations</h3>
<p>You can run a map that populates the time dimension multiple times. During each run you specify the attributes required to populate the time dimension. It is possible that a run of the mapping may overlap with the previous runs, meaning you may attempt to load data that exists in the time dimension. In such a case, if a record was populated by a previous run, Oracle Warehouse Builder does not populate the data again.</p>
<p>For example, in the first run, you populate the time dimension with data from the year 2000 for 5 years. In the second run, you populate the time dimension with data from 2003 for 3 years. Since the records from beginning 2003 to end 2004 exist in the time dimension, they are not created again.</p>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment2968">
<tr>
<td class="cellalignment2977">
<table class="cellalignment2973">
<tr>
<td class="cellalignment2972"><a href="orcl_data_objx.htm"><img width="24" height="24" src="../../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment2972"><a href="part_2.htm"><img width="24" height="24" src="../../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;2000, 2011,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment2980">
<table class="cellalignment2971">
<tr>
<td class="cellalignment2972"><a href="../../index.htm"><img width="24" height="24" src="../../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment2972"><a href="../../nav/portal_booklist.htm"><img width="24" height="24" src="../../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment2972"><a href="toc.htm"><img width="24" height="24" src="../../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment2972"><a href="index.htm"><img width="24" height="24" src="../../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment2972"><a href="../../nav/mindx.htm"><img width="24" height="24" src="../../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment2972"><a href="../../dcommon/html/feedback.htm"><img width="24" height="24" src="../../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>
</body>
</html>
