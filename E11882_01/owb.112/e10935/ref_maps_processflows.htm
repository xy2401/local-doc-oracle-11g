<!DOCTYPE html>
<html lang="en">
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1">
<meta charset="utf-8">
<title>Mappings and Process Flows Reference</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Version 5.1.2 Build 037" />
<meta name="dcterms.created" content="2011-09-21T18:21:39Z" />
<meta name="robots" content="all" />
<meta name="dcterms.title" content="Warehouse Builder Data Modeling, ETL, and Data Quality Guide" />
<meta name="dcterms.identifier" content="E10935-05" />
<meta name="dcterms.isVersionOf" content="WBETL" />
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;2000, 2011,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved." />
<link rel="Start" href="../../index.htm" title="Home" type="text/html" />
<link rel="Copyright" href="../../dcommon/html/cpyr.htm" title="Copyright" type="text/html" />

<script type="application/javascript"  src="../../dcommon/js/headfoot.js"></script>
<script type="application/javascript"  src="../../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html" />
<link rel="Index" href="index.htm" title="Index" type="text/html" />
<link rel="Prev" href="part_4.htm" title="Previous" type="text/html" />
<link rel="Next" href="src_tgt_opers.htm" title="Next" type="text/html" />
<link rel="alternate" href="../e10935.pdf" title="PDF version" type="application/pdf" />
<link rel="schema.dcterms" href="http://purl.org/dc/terms/" />
<link rel="stylesheet" href="../../dcommon/css/fusiondoc.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/header.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/footer.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/fonts.css">
<link rel="stylesheet" href="../../dcommon/css/foundation.css">
<link rel="stylesheet" href="../../dcommon/css/codemirror.css">
<link rel="stylesheet" type="text/css" title="Default" href="../../nav/css/html5.css">
<link rel="stylesheet" href="../../dcommon/css/respond-480-tablet.css">
<link rel="stylesheet" href="../../dcommon/css/respond-768-laptop.css">
<link rel="stylesheet" href="../../dcommon/css/respond-1140-deskop.css">
<script type="application/javascript" src="../../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">31/37</span> <!-- End Header --><a id="BBADCEGG"></a><a id="WBETL24000"></a>
<h1 class="chapter"><span class="secnum">24</span> Mappings and Process Flows Reference</h1>
<p>This chapter contains the following topics:</p>
<ul>
<li>
<p><a href="#BBADCBBB">"Configuring ETL Objects"</a></p>
</li>
<li>
<p><a href="#i1113472">"Configuring Mappings Reference"</a></p>
</li>
<li>
<p><a href="#i1130147">"Configuring Process Flows Reference"</a></p>
</li>
</ul>
<a id="BBADCBBB"></a><a id="WBETL24002"></a>
<div class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Configuring ETL Objects</h2>
<p>Earlier in the design phase, you defined a logical model for your target system using Oracle Warehouse Builder design objects. This chapter includes reference information for assigning physical properties to mappings and process flows. This chapter presents configuration parameters in the order in which they appear in the user interface.</p>
<p>This section contains the following topics:</p>
<ul>
<li>
<p><a href="#i1113472">"Configuring Mappings Reference"</a></p>
</li>
<li>
<p><a href="#i1130147">"Configuring Process Flows Reference"</a></p>
</li>
</ul>
</div>
<!-- class="sect1" -->
<a id="i1113472"></a><a id="WBETL13001"></a>
<div class="sect1">
<h2 class="sect1">Configuring Mappings Reference</h2>
<p>When you configure mappings properly, you can improve the Extract, Transform, and Load (ETL) performance. Use this section as a reference for setting configuration parameters that govern how data is loaded and to optimize code for better performance.</p>
<p>Configuration parameters for mappings are classified into the following categories:</p>
<ul>
<li>
<p><a href="#i1134262">"Runtime Parameters"</a></p>
</li>
<li>
<p><a href="#i1112962">"Code Generation Options"</a></p>
</li>
</ul>
<p>In addition to these parameters, you can configure the source and target operators in the mapping as described in <a href="#i1128311">"Sources and Targets Reference"</a>. There are some additional parameters that you can configure for CT mappings as described in <a href="#CHDHBHAG">"Configuring Code Template (CT) Mappings"</a>.</p>
<a id="i1134262"></a>
<div class="sect2">
<h3 class="sect2">Runtime Parameters</h3>
<p><a id="sthref1993"></a><a id="sthref1994"></a>When you configure run time parameters for a mapping, you set the default behaviors for the mapping. You can override these parameters when you run the mapping either in the Control Center, the Process Flow Editor, or Oracle Enterprise Manager.</p>
<p>The Runtime parameters include the following parameters:</p>
<ul>
<li>
<p><a href="#i1112958">"Analyze Table Sample Percentage"</a></p>
</li>
<li>
<p><a href="#i1123309">"Bulk Size"</a></p>
</li>
<li>
<p><a href="#CHDHACIG">"Chunk Execute Resume Task"</a></p>
</li>
<li>
<p><a href="#CHDJBCGF">"Chunk Force Resume"</a></p>
</li>
<li>
<p><a href="#CHDEIFHG">"Chunk Number of Times to Retry"</a></p>
</li>
<li>
<p><a href="#CHDCGGCE">"Chunk Parallel Level"</a></p>
</li>
<li>
<p><a href="#i1112947">"Commit Frequency"</a></p>
</li>
<li>
<p><a href="#i1118036">"Default Audit Level "</a></p>
</li>
<li>
<p><a href="#i1130206">"Default Operating Mode"</a></p>
</li>
<li>
<p><a href="#i1136122">"Default Purge Group"</a></p>
</li>
<li>
<p><a href="#i1118043">"Maximum Number of Errors"</a></p>
</li>
<li>
<p><a href="#CHDCEJEE">"Number of Threads to Process Chunks"</a></p>
</li>
</ul>
<a id="i1112958"></a>
<div class="sect3">
<h4 class="sect3">Analyze Table Sample Percentage</h4>
<p>When you select the <a href="#i1130431">"Analyze Table Statements"</a> option, Oracle Warehouse Builder estimates when gathering statistics on the target tables. After data is loaded into the target tables, statistics used for cost-based optimization are gathered on each target table. You can set this parameter to the percentage of rows in each target table used for this analysis.</p>
</div>
<!-- class="sect3" -->
<a id="i1123309"></a>
<div class="sect3">
<h4 class="sect3">Bulk Size</h4>
<p>Use <span class="bold">Bulk Size</span> to specify the number of rows in each bulk for PL/SQL Bulk Processing. Oracle Warehouse Builder uses the Bulk Size parameter only when the <a href="#i1121634">"Bulk Processing Code"</a> option is selected and the operating mode is set to row-based. For more information, see <span class="italic">Oracle PL/SQL Reference Guide.</span></p>
</div>
<!-- class="sect3" -->
<a id="CHDHACIG"></a>
<div class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Chunk Execute Resume Task</h4>
<p>This parameter specifies whether the parallel chunking task must be resumed. Select False to run a new parallel chunking task. Select True to resume the parallel chunking task. At run time, you can override the value set for this parameter by using the Input Parameters dialog box.</p>
</div>
<!-- class="sect3" -->
<a id="CHDJBCGF"></a>
<div class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Chunk Force Resume</h4>
<p>This parameter specifies whether the parallel chunking task must be resumed if it has been stopped due to errors. Set this parameter to True to force Oracle Warehouse Builder to resume the parallel chunking task. At run time, you can override the value set for this parameter by using the Input Parameters dialog box.</p>
</div>
<!-- class="sect3" -->
<a id="CHDEIFHG"></a>
<div class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Chunk Number of Times to Retry</h4>
<p>This parameter specifies the number of times that Oracle Warehouse Builder attempts to resume a failed parallel chunking task. Enter a numeric value that specifies the number of attempts. At run time, you can override the value set for this parameter by using the Input Parameters dialog box.</p>
</div>
<!-- class="sect3" -->
<a id="CHDCGGCE"></a>
<div class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Chunk Parallel Level</h4>
<p>This parameter specifies the number of threads that must be used to process the chunks in parallel. Enter a numeric value for this parameter. Setting this parameter to NULL or zero causes the mapping to be run serially.</p>
<p>At run time, you can override the value set for this parameter by using the Input Parameters dialog box.</p>
</div>
<!-- class="sect3" -->
<a id="i1112947"></a>
<div class="sect3">
<h4 class="sect3">Commit Frequency</h4>
<p>Commit frequency applies only to non-bulk mode mappings. Bulk mode mappings commit according to the bulk size.</p>
<p>If you set the <a href="#i1130206"><span class="xreftitlebold">Default Operating Mode</span></a> to row-based and deselect <a href="#i1121634">"Bulk Processing Code"</a><span class="bold">,</span> then use the <span class="bold">Commit Frequency</span> parameter to determine the number of rows to be processed before a commit operation. Oracle Warehouse Builder commits data to the database after processing the number of rows specified in this parameter.</p>
<p>If you select the <a href="#i1121634">"Bulk Processing Code"</a> option, set the Commit Frequency equal to the <a href="#i1123309">"Bulk Size"</a>. If the two values differ, then Bulk Size overrides Commit Frequency and a commit operation is implicitly performed for every bulk size.</p>
</div>
<!-- class="sect3" -->
<a id="i1118036"></a>
<div class="sect3">
<h4 class="sect3">Default Audit Level</h4>
<p>Use <span class="bold">Default Audit Level</span> to indicate the audit level used when executing the package. Audit levels dictate the amount of audit information captured in the run time schema when the package is run. The audit level settings are:</p>
<ul>
<li>
<p><span class="bold">None:</span> No auditing information is recorded in run time.</p>
</li>
<li>
<p><span class="bold">Statistics:</span> Statistical auditing information is recorded in run time.</p>
</li>
<li>
<p><span class="bold">Error Details:</span> Error information and statistical auditing information is recorded in run time.</p>
</li>
<li>
<p><span class="bold">Complete:</span> All auditing information is recorded in run time. Running a mapping with the audit level set to <span class="bold">Complete</span> generates a large amount of diagnostic data, which may quickly fill the allocated tablespace.</p>
</li>
</ul>
</div>
<!-- class="sect3" -->
<a id="i1130206"></a>
<div class="sect3">
<h4 class="sect3">Default Operating Mode</h4>
<p>For mappings with a PL/SQL implementation, select a default operating mode. The operating mode, you selected can greatly affect mapping performance. For details on how operating modes affect performance, see <a href="etl_performance.htm#i1146158">"Set-Based Versus Row-Based Operating Modes"</a>. You can select one of the following operating modes:</p>
<ul>
<li>
<p><span class="bold">Set based:</span> A single SQL statement that inserts all data and performs all operations on the data is generated. This increases the speed of Data Manipulation Language (DML) operations. Set based mode offers optimal performance but minimal auditing details.</p>
</li>
<li>
<p><span class="bold">Row based:</span> Statements that process data row by row are generated. The select statement is a SQL cursor. All subsequent statements are PL/SQL. Because data is processed row by row, the row-based operating mode has the slowest performance but offers exhaustive auditing details.</p>
</li>
<li>
<p><span class="bold">Row based (Target Only):</span> A cursor select statement is generated and attempts are made to include as many operations as possible in the cursor. For each target, Oracle Warehouse Builder generates a PL/SQL insert statement and inserts each row into the target separately.</p>
</li>
<li>
<p><span class="bold">Set based fail over row based:</span> The mapping is run in set based mode. If an error occurs, then the execution fails and the mapping is started over again in the row-based mode. This mode is recommended for use only in test environments and is not recommended for use in production environments.</p>
</li>
<li>
<p><span class="bold">Set based fail over row based (Target Only):</span> The mapping is first run in set based mode. If an error occurs, then the execution fails over to <span class="bold">Row based (Target Only)</span> mode. This mode is recommended for use only in test environments and is not recommended for use in production environments.</p>
</li>
</ul>
<div class="infobox-note">
<p class="notep1">Note:</p>
Release 11.2.0.3 and onwards, the feature Set Based Failover Row Based has been deprecated.</div>
</div>
<!-- class="sect3" -->
<a id="i1136122"></a>
<div class="sect3">
<h4 class="sect3">Default Purge Group</h4>
<p>Default Purge Group is used when executing the package. Each audit record in the run time schema is assigned to the purge group specified.</p>
</div>
<!-- class="sect3" -->
<a id="i1118043"></a>
<div class="sect3"><a id="g1188951"></a>
<h4 class="sect3">Maximum Number of Errors</h4>
<p>Use <span class="bold">Maximum Number of Errors</span> to indicate the maximum number of errors enabled while executing the package. Execution of the package terminates when the number of errors exceeds the maximum number of errors value.</p>
<p>The Maximum Number of Errors parameter applies to the count of errors for the entire mapping run, whether run in set-based, row-based, or failover modes. Consider the following cases:</p>
<ul>
<li>
<p>Maximum number of errors is set to 50 and the mapping is run in set-based mode. The data did not load successfully. One error resulted from failure of the set-based load DML statement. The mapping return status is WARNING.</p>
</li>
<li>
<p>Maximum number of errors is set to 50, the mapping is run in set-based mode, and Enable Constraint parameter is set to false. The data is loaded successfully, but 60 constraint violation errors occurred during reenabling of the constraint. The mapping return status is ERROR.</p>
</li>
<li>
<p>Max number of errors is set to 50 and the mapping is run in row-based mode. Some of the data loaded successfully, but with many errors. The mapping terminates after reaching the 50th error. The mapping return status is ERROR.</p>
</li>
<li>
<p>Max number of errors is set to 50 and the mapping is run in set-based failover to row-based mode. The data did not load successfully in the set-based mode. One error resulted from the failure of the set-based load DML statement. Some of the data loaded successfully in the row-based mode, but with many errors. The mapping terminates after reaching the 49th error in the row-based mode because there was one error counted in set-based mode. The mapping return status is ERROR.</p>
</li>
</ul>
</div>
<!-- class="sect3" -->
<a id="CHDCEJEE"></a>
<div class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Number of Threads to Process Chunks</h4>
<p>The Number of Threads to Process Chunks parameter represents the number of threads used to process the chunks of source data. Setting this parameter to zero means that the mapping is not run in parallel.</p>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="i1112962"></a>
<div class="sect2">
<h3 class="sect2">Code Generation Options</h3>
<p><a id="sthref1995"></a>The Code Generation Options include the following:</p>
<ul>
<li>
<p><a href="#CIHDGDFD">"ANSI SQL Syntax"</a></p>
</li>
<li>
<p><a href="#i1140778">"Commit Control"</a></p>
</li>
<li>
<p><a href="#i1130431">"Analyze Table Statements"</a></p>
</li>
<li>
<p><a href="#CIHBCCGE">"Enable Parallel DML"</a></p>
</li>
<li>
<p><a href="#i1124213">"Optimized Code"</a></p>
</li>
<li>
<p><a href="#CIHCIIID">"Authid"</a></p>
</li>
<li>
<p><a href="#CIHEDGIJ">"Use Target Load Ordering"</a></p>
</li>
<li>
<p><a href="#CIHFCIJH">"ERROR TRIGGER"</a></p>
</li>
<li>
<p><a href="#i1121634">"Bulk Processing Code"</a></p>
</li>
<li>
<p><a href="#i1134618">"Generation Mode"</a></p>
</li>
</ul>
<a id="CIHDGDFD"></a>
<div class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">ANSI SQL Syntax</h4>
<p>If you select this option, ANSI SQL syntax is generated. Otherwise, Oracle SQL syntax is generated.</p>
</div>
<!-- class="sect3" -->
<a id="i1140778"></a>
<div class="sect3">
<h4 class="sect3">Commit Control</h4>
<p><span class="bold">Automatic</span>: This is the default setting. Oracle Warehouse Builder loads and then automatically commits data based on the mapping design. This setting is valid for all mapping types. For multiple targets in a single mapping, data is committed based on target by target processing (insert, update, delete).</p>
<p><span class="bold">Automatic Correlated</span>: Automatic correlated commit is a specialized type of automatic commit that applies only to PL/SQL mappings with multiple targets. Oracle Warehouse Builder considers all targets collectively and commits or rolls back data uniformly across all targets.</p>
<p>The mapping behavior varies according to the operating mode that you select. For more information about automatic correlated commit, see <a href="etl_performance.htm#i1145851">"Committing Data from a Single Source to Multiple Targets"</a>.</p>
<p><span class="bold">Manual</span>: Select manual commit control for PL/SQL mappings when you want to interject complex business logic or perform validations before committing data.</p>
<p>You have the following options for specifying manual commits:</p>
<ul>
<li>
<p>You can define the commit logic within the mapping as described in <a href="etl_performance.htm#BBAFJJCJ">"Embedding Commit Logic into the Mapping"</a>.</p>
</li>
<li>
<p>You can commit data in a process flow or from a SQL*Plus session as described in <a href="etl_performance.htm#CHDGBIJD">"Committing Data Independently of Mapping Design"</a>.</p>
</li>
</ul>
<p><span class="bold">No Commit</span>: If you set this option, then Oracle Warehouse Builder mapping does not issue a commit while the mapping run.</p>
</div>
<!-- class="sect3" -->
<a id="i1130431"></a>
<div class="sect3">
<h4 class="sect3">Analyze Table Statements</h4>
<p>If you select this option, code is generated for analyzing the target table after the target is loaded, if the resultant target table is double or half its original size.</p>
<p>If the target table is not in the same schema as the mapping and you want to analyze the table, then you must grant ANALYZE ANY to the schema owning the mapping.</p>
</div>
<!-- class="sect3" -->
<a id="CIHBCCGE"></a>
<div class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Enable Parallel DML</h4>
<p>If you select this option, parallel DML is enabled at run time. Executing DML statements in parallel improves the response time of data-intensive operations in large databases that are present in a data warehouse.</p>
</div>
<!-- class="sect3" -->
<a id="i1124213"></a>
<div class="sect3">
<h4 class="sect3">Optimized Code</h4>
<p>Select this option to improve performance for mappings that include the Splitter operator and inserts into multiple target tables. When this option is selected and the mapping is run by Oracle<span class="italic">9i</span> or later, a single SQL statement is generated (<code>multi_table_insert</code>) that inserts data into multiple tables based on the same set of source data.</p>
<p>The multiple table insert is performed only if this option is selected and the Oracle target module database is Oracle<span class="italic">9i</span> or later. The multiple table insert is performed only for mappings in set-based mode that include a Splitter operator, and does not include active operators, such as an Aggregator or Joiner operator, between the Splitter and the target. In addition, the multiple insert is available only for tables. It is not available for views, materialized views, dimensions, or cubes. Each target table must have fewer than 999 columns. For detailed instructions on how to create a mapping with multiple targets, see <a href="data_flow_opers.htm#i1243165">"Example: Creating Mappings with Multiple Targets"</a>.</p>
<p><a id="i1182332"></a>Do not select this option for mappings run in row-based mode or for mappings run by Oracle<span class="italic">8i</span> server. Also, do not select this option when auditing information for individual targets is required.</p>
<p>When this option is selected, one total SELECT and INSERT count is returned for all targets.</p>
</div>
<!-- class="sect3" -->
<a id="CIHCIIID"></a>
<div class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Authid</h4>
<p>Specifies the AUTHID option to be used while generating the code. The options that you can select are Current_User, Definer, or None.</p>
</div>
<!-- class="sect3" -->
<a id="CIHEDGIJ"></a>
<div class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Use Target Load Ordering</h4>
<p>For PL/SQL mappings with multiple targets, you can generate code that defines an order for loading the targets. This is important when a parent-child relationship exists between two or more targets in a mapping. The option is selected by default.</p>
</div>
<!-- class="sect3" -->
<a id="CIHFCIJH"></a>
<div class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">ERROR TRIGGER</h4>
<p>Specify the name of the error trigger procedure in this field.</p>
</div>
<!-- class="sect3" -->
<a id="i1121634"></a>
<div class="sect3">
<h4 class="sect3">Bulk Processing Code</h4>
<p>If this configuration parameter is selected and the operating mode is set to row-based, Oracle Warehouse Builder generates PL/SQL bulk processing code. PL/SQL bulk processing improves row-based ETL performance by collecting, processing, and writing rows in bulk, instead of doing it row by row. The size of each bulk is determined by the configuration parameter Bulk Size. Set-based mode offers optimal performance, followed by bulk processing, and finally by row-based mode. For more information, see <span class="italic">Oracle PL/SQL Reference Guide.</span></p>
</div>
<!-- class="sect3" -->
<a id="i1134618"></a>
<div class="sect3">
<h4 class="sect3">Generation Mode</h4>
<p>By default, when code is generated for a mapping, the code for all possible operating modes is generated. That is, if you set the <a href="#i1130206">"Default Operating Mode"</a> to <span class="bold">Set based</span>, Oracle Warehouse Builder still generates code for all possible operating modes when <span class="bold">Generation Mode</span> is set to All Operating Modes. It enables you to switch the operating modes for testing purposes at run time.</p>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="CHDHDDJG"></a>
<div class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Chunking Options</h3>
<p>The parameters in the Chunking Options section enable you to configure parallel chunking for a PL/SQL mapping.</p>
<p>Expand the Details node under Chunking Options to specify the following parallel chunking options:</p>
<ul>
<li>
<p><a href="#CHDICEHE">"Chunking Method"</a></p>
</li>
<li>
<p>Chunk by Number Column</p>
<p>Expand the Chunk by Number Column node to set the following parameters: <a href="#CHDCFGIB">"Chunk Table"</a>, <a href="#CHDHDCGB">"Chunk Column"</a>, and <a href="#CHDBEIJC">"Chunk Size"</a>.</p>
</li>
<li>
<p>Chunk by ROWID</p>
<p>Expand the Chunk by ROWID node to set the following parameters: <a href="#CHDCFGIB">"Chunk Table"</a>, <a href="#CHDBECCD">"Chunk Type"</a>, and <a href="#CHDBEIJC">"Chunk Size"</a>.</p>
</li>
<li>
<p>Chunk by SQL Statement</p>
<p>Expand the Chunk by SQL Statement node to set the following parameters: <a href="#CHDEFFHC">"SQL Statement"</a> and <a href="#CHDEIEBJ">"SQL Statement Chunk Type"</a>.</p>
</li>
</ul>
<a id="CHDICEHE"></a>
<div class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Chunking Method</h4>
<p>Use this parameter to select the method to be used for performing parallel chunking. Following are the options you can select for this parameter:</p>
<ul>
<li>
<p><span class="bold">None:</span> Does not perform parallel chunking.</p>
</li>
<li>
<p><span class="bold">Chunk By Number Column:</span> Uses a numeric column in the source data as a basis for dividing the source data into chunks. When you select this option, you must set the parameters listed under the Chunk By Number Column node.</p>
</li>
<li>
<p><span class="bold">Chunk by ROWID:</span> Divides the source rows into chunks depending on the <code>ROWID</code> of the column in the source data. When you select this option, you must set the parameters listed under the Chunk By ROWID node.</p>
</li>
<li>
<p><span class="bold">Chunk by SQL Statement:</span> Uses a SQL statement to divide the source data into chunks. When you select this option, you must set the parameters listed under the Chunk By SQL Statement node.</p>
</li>
</ul>
</div>
<!-- class="sect3" -->
<a id="CHDCFGIB"></a>
<div class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Chunk Table</h4>
<p>Use Chunk Table to select the source table on which parallel data chunking must be performed.</p>
</div>
<!-- class="sect3" -->
<a id="CHDHDCGB"></a>
<div class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Chunk Column</h4>
<p>The Chunking Column parameter is applicable when you perform parallel chunking using a numeric column in the source table. Use this parameter to select the source column based on which parallel chunking is performed.</p>
</div>
<!-- class="sect3" -->
<a id="CHDBEIJC"></a>
<div class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Chunk Size</h4>
<p>Use Chunk Size to specify the range of each chunk.</p>
</div>
<!-- class="sect3" -->
<a id="CHDBECCD"></a>
<div class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Chunk Type</h4>
<p>Use chunk Type to specify how source data must be divided into chunks based on the <code>ROWID</code> of the source columns. The options you can select are By data blocks and By rows.</p>
</div>
<!-- class="sect3" -->
<a id="CHDEFFHC"></a>
<div class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">SQL Statement</h4>
<p>Specify the SQL statement using which the source data is divided into smaller chunks.</p>
</div>
<!-- class="sect3" -->
<a id="CHDEIEBJ"></a>
<div class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">SQL Statement Chunk Type</h4>
<p>Use this parameter to specify how the SQL statement, specified using <a href="#CHDEFFHC">"SQL Statement"</a>, chunks the source data. Select one of the following options:</p>
<ul>
<li>
<p><span class="bold">NUMBER_COLUMN:</span> Data is chunked using a numeric column in the source data.</p>
</li>
<li>
<p><span class="bold">ROWID:</span> Data is chunked using the <code>ROWID</code> of columns.</p>
</li>
</ul>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="CHDBAABI"></a>
<div class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">SCD Updates</h3>
<p>The parameters in the SCD Updates section enable you to configure serial chunking for a PL/SQL mapping. The SCD Updates options contains one parameter called <a href="#CHDJBGDC">"Chunking Strategy"</a>.</p>
<a id="CHDJBGDC"></a>
<div class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Chunking Strategy</h4>
<p>The Chunking Strategy parameter enables to perform serial chunking. Select Serial to perform serial chunking on the source data. Select None to disable serial chunking for the PL/SQL mapping.</p>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="i1128311"></a>
<div class="sect2">
<h3 class="sect2">Sources and Targets Reference</h3>
<p>For relational and dimensional sources and targets such as tables, views, and cubes, Oracle Warehouse Builder displays the following set of properties for each operator:</p>
<ul>
<li>
<p><a href="#CIHFHAAC">"Use LCR APIs"</a></p>
</li>
<li>
<p><a href="#i1124522">"Database Link"</a></p>
</li>
<li>
<p><a href="#i1112991">"Location"</a></p>
</li>
<li>
<p><a href="#CIHHCAGA">"Conflict Resolution"</a></p>
</li>
<li>
<p><a href="#i1124526">"Schema"</a></p>
</li>
<li>
<p><a href="#i1113016">"Partition Exchange Loading"</a></p>
</li>
<li>
<p><a href="#i1113036">"Hints"</a></p>
</li>
<li>
<p><a href="#i1124509">"Constraint Management"</a></p>
</li>
<li>
<p><a href="#i1134263">"SQL*Loader Parameters"</a></p>
</li>
</ul>
<a id="CIHFHAAC"></a>
<div class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Use LCR APIs</h4>
<p>By default, this setting is enabled and DML is performed using LCR APIs if available. If no LCR APIs are available, then the standard DML is used.</p>
</div>
<!-- class="sect3" -->
<a id="i1124522"></a>
<div class="sect3">
<h4 class="sect3">Database Link</h4>
<p>This parameter is maintained for backward compatibility only.</p>
<p>In previous releases, you could select a database link by name from the list. Source operators can be configured for schemas and database links, but targets can be configured for schemas only. Sources and targets can reside in different schemas, but they must reside in the same database instance.</p>
</div>
<!-- class="sect3" -->
<a id="i1112991"></a>
<div class="sect3">
<h4 class="sect3">Location</h4>
<p>This setting specifies the location that is used to access the source or target operator.</p>
</div>
<!-- class="sect3" -->
<a id="CIHHCAGA"></a>
<div class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Conflict Resolution</h4>
<p>Enable this setting to detect and resolve any conflicts that may arise during DML operations using the LCR APIs.</p>
</div>
<!-- class="sect3" -->
<a id="i1124526"></a>
<div class="sect3">
<h4 class="sect3">Schema</h4>
<p>This parameter is maintained for backward compatibility only.</p>
<p>In previous releases, you could link the mapping to a particular schema by clicking on the Schema field and typing a name.</p>
</div>
<!-- class="sect3" -->
<a id="i1113016"></a>
<div class="sect3">
<h4 class="sect3">Partition Exchange Loading</h4>
<p>Use the settings in this section to enable Partition Exchange Loading (PEL) into a target table. For specific information about each of these settings and additional information about how to design mappings for PEL, see <a href="etl_performance.htm#i1131648">"Improved Performance through Partition Exchange Loading"</a>.</p>
</div>
<!-- class="sect3" -->
<a id="i1113036"></a>
<div class="sect3">
<h4 class="sect3">Hints</h4>
<p>Define loading or extraction hints. Application developers often develop insights into their data. For example, they know that a query runs much faster if a set of tables is joined in one order rather than another. Oracle Warehouse Builder can incorporate these insights into the generated SQL code packages as SQL Optimizer Hints.</p>
<p>When you select a hint from the Hints dialog box, the hint appears in the <span class="bold">Existing Hints</span> field. Enter additional text as appropriate in the Extra Text column. The editor includes the hint in the mapping definition as is. There is no validation or checking on this text.</p>
<p>You can define loading hints for mappings that load data in INSERT or UPDATE mode. By default, commonly used hints such as APPEND and PARALLEL are added. For all loading modes other than INSERT, the APPEND hint causes no effect and you can choose to remove it.</p>
<p>Hint is available during mapping configuration. To configure a hint:</p>
<ol>
<li>
<p>In the Projects Navigator, expand the <span class="bold">Databases</span> folder, and then the required module.</p>
</li>
<li>
<p>In the module, expand the Mappings node.</p>
</li>
<li>
<p>Right-click the required mapping and select <span class="bold">Configure</span>.</p>
<p>The Configuration tab displays the configuration parameters of the mapping.</p>
</li>
<li>
<p>In the Configuration tab, expand the required operator type and then expand the required operator.</p>
</li>
<li>
<p>Expand the Hints node and click the Ellipsis button to the right of a hint type to enter a hint.</p>
</li>
</ol>
<p>For information about optimizer hints and how to use them, see <a class="olink PFGRF" href="../../server.112/e41573/toc.htm"><span class="italic">Oracle Database Performance Tuning Guide</span></a>.</p>
</div>
<!-- class="sect3" -->
<a id="i1124509"></a>
<div class="sect3">
<h4 class="sect3">Constraint Management</h4>
<p>Configure the following Constraint Management parameters:</p>
<ul>
<li>
<p><span class="bold">Exceptions Table Name:</span> All rows that violate their foreign key constraints during reenabling are logged into the specified exceptions table. No automatic truncation of this table is performed either before or after the load. Constraint violations are also loaded into the run time audit error tables.</p>
<p>For SQL and PL/SQL loading, if you do not specify an exceptions table, invalid rows are loaded into a temporary table located in the default tablespace and then loaded into the Runtime Audit error table. The table is dropped after the load.</p>
<p>If you are using SQL*Loader direct path loading, you must specify an exception table. Consult the SQL*Loader documentation for more information.</p>
</li>
<li>
<p><span class="bold">Enable Constraints:</span> If you set this option to False, Oracle Warehouse Builder disables constraints on the target tables, loads data, and then reenables the constraints. Constraint violations found during reenable are identified in the run time audit error table and, if specified, loaded into an exceptions table. If you set this option to True, then Oracle Warehouse Builder does not manage constraints and the data from the source is loaded into the target table.</p>
<p>When you disable constraints, loading is quicker because a constraint check is not performed. However, if exceptions occur for any rows during reenabling, the constraints for those rows remain in a nonvalidated state. These rows are logged in the run time audit error table by their <code>ROWID</code>. You must manually inspect the error rows to take any necessary corrective action.</p>
<p>The disabling and enabling of constraints happens on the target table. When the Enable Constraints parameter is set to True, the constraints on the target table is disabled before the loading of data, and is reenabled after the loading of data. When the constraints are reenabled, the entire table is scanned and rows that violate the constraints are logged in the exceptions table. These rows are reported as constraint violation errors in the audit browser.</p>
<p>Consider a scenario where the target table is empty and the Enable Constraints parameter is set to True. Initially suppose that the source table has 10 rows, of which 2 rows violate the constraint on the target table. When the mapping is run, the constraints on the target table are first disabled, then data is loaded (all 10 rows), and then constraints on the target table are reenabled. When the constraints are reenabled, the 2 rows that violate the constraints are logged into the exceptions table. The audit browser reports that there are 2 constraint violation errors.</p>
<p>Later, the mapping is again run with a new source table containing 20 rows, of which 5 rows violate the constraint on the target table. After the data is loaded into the target table (all 20 rows), the target table has 30 rows. When the constraints on the target table are reenabled, 7 rows are logged in to the exceptions table and reported as constraint violation errors in the audit browser. These include the 5 rows reported newly and the 2 rows reported initially. This is because Oracle Warehouse Builder scans the entire target table, which means that all 30 rows are checked and therefore the 2 rows with violations from the first data load are included. Oracle Warehouse Builder cannot identify only the new rows added when the mapping was run the second time. Therefore, unless you truncate the target table before each data load, you always see the constraint violations from the previous data loads reported each time.</p>
<p>Setting the Enable Constraints option to True is subject to the following restrictions:</p>
<ul>
<li>
<p>For set-based operating mode, the foreign key constraints on the targets are disabled before loading, and then reenabled after loading. This parameter has no effect on foreign key constraints on other tables referencing the target table. If the load is done using SQL*Loader instead of a SQL or PL/SQL package, then a reenable clause is added to the .ctl file.</p>
</li>
<li>
<p>For set-based fail over to row-based and set-based fail over to row-based (target only) operating modes, the deselect setting disables the foreign key constraints on the targets before loading and then reenables them if the load succeeds in set-based mode. This setting has no effect on foreign keys referencing other tables. If the load fails over to row-based, then loading repeats in row-based mode and all constraints remain enabled.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
Constraint violations created during reenabling does not cause the load to fail from set-based mode over to row-based mode.</div>
</li>
<li>
<p>For row-based or row-based (target only) operating modes, all foreign key constraints remain enabled even if the option is not selected.</p>
</li>
<li>
<p>For the TRUNCATE/INSERT DML type, the deselect setting disables foreign key constraints on other tables referencing the target table before loading, and then reenables the constraints after loading, regardless of the default operating mode.</p>
</li>
</ul>
</li>
</ul>
</div>
<!-- class="sect3" -->
<a id="i1134263"></a>
<div class="sect3">
<h4 class="sect3">SQL*Loader Parameters</h4>
<p>When you have a Table operator that contains inputs from a flat file, you must configure the following SQL*Loader Parameters properties:</p>
<ul>
<li>
<p><span class="bold">Partition Name:</span> Indicates that the load is a partition-level load. Partition-level loading enables you to load one or more specified partitions or subpartitions in a table. Full database, user, and transportable tablespace mode loading does not support partition-level loading. Because incremental loading (incremental, cumulative, and complete) can be done only in full database mode, partition-level loading cannot be specified for incremental loads. In all modes, partitioned data is loaded in a format such that partitions or subpartitions can be selectively loaded.</p>
</li>
<li>
<p><span class="bold">Sorted Indexes Clause:</span> Identifies the indexes on which the data is presorted. This clause is enabled only for direct path loads. Because the data sorted for one index is not usually in the right order for another index, you specify only one index in the SORTED INDEXES clause. When the data is in the same order for multiple indexes, all indexes can be specified. All indexes listed in the SORTED INDEXES clause must be created before you start the direct path load.</p>
</li>
<li>
<p><span class="bold">Singlerow:</span> Intended for use during a direct path load with APPEND on systems with limited memory, or when loading a small number of records into a large table. This option inserts each index entry directly into the index, one record at a time. By default, SQL*Loader does not use SINGLEROW to append records to a table. Index entries are stored in a temporary area and merged with the original index after the load. Although this method achieves better performance and produces an optimal index, it requires extra storage space. During the merge, the original index, the new index, and the space for new entries all simultaneously occupy storage space. With the SINGLEROW option, storage space is not required for new index entries or for a new index. Although the resulting index may not be as optimal as a freshly sorted one, it takes less space to produce. It also takes more time, because additional UNDO information is generated for each index insert. This option is recommended when the available storage is limited. It is also recommended when the number of records to be loaded is small compared to the size of the table. A ratio of 1:20 or less is considered small.</p>
</li>
<li>
<p><span class="bold">Trailing Nullcols:</span> Sets SQL*Loader to treat any relatively positioned columns that are not present in the record as null columns.</p>
</li>
<li>
<p><span class="bold">Records To Skip:</span> Invokes the SKIP command in SQL*Loader. SKIP specifies the number of logical records from the beginning of the file that should not be loaded. By default, no records are skipped. This parameter continues loads that have been interrupted for some reason. It is used for all conventional loads, for single-table direct loads, and for multiple-table direct loads when the same number of records is loaded into each table. It is not used for multiple-table direct loads when a different number of records is loaded into each table.</p>
</li>
<li>
<p><span class="bold">Database File Name:</span> Specifies the names of the export files to import. The default extension is .dmp. Because you can export multiple export files, you may must specify multiple file names to be imported. You must have read access to the imported files. You must also have the IMP_FULL_DATABASE role.</p>
</li>
</ul>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="CHDHBHAG"></a>
<div class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Configuring Code Template (CT) Mappings</h3>
<p>The configuration parameters for Code Template (CT) mappings are similar to the parameters for PL/SQL mappings. However, for CT mappings, the nodes SCD Updates and Chunking Options are not displayed because these options only apply to PL/SQL mappings.</p>
<p>You can set an additional parameters called <a href="#CHDIDJED">"Use Enclosure Character"</a> and <a href="#CHDIICFJ">"Source File Operator"</a> for CT mappings. These parameters are displayed in the Configuration tab of the mapping.</p>
<a id="CHDIDJED"></a>
<div class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Use Enclosure Character</h4>
<p>Select this parameter to enclose SQL identifiers in the generated code of CT mappings. Oracle Warehouse Builder supports delimited identifiers in CT mapping across heterogeneous database systems.</p>
<p>For example, if the Use Enclosure Character parameter is selected, and the enclosure character is set to square brackets, the SQL statement generated is as follows:</p>
<pre>
SELECT [My Empno], [My Emp Name] FROM [My Employees]
</pre>
<p>By default, the enclosure character used for Oracle Database, IBM DB2 UDB, and SQL Server is the double quotation marks. You can set the enclosure character that is necessary for each platform by using OMB*Plus. For example, to change the enclosure character for the SQL Server platform to square brackets, use the following OMB*Plus command.</p>
<p><code>OMBALTER PLATFORM 'SQLSERVER' SET PROPERTIES (ENCLOSURE_CHAR) VALUES ('/[/]')</code>;</p>
<p>For a CT mapping that has the Use Enclosure Character parameter selected to work correctly, you must set up the correct enclosure character for any new platform that you create. For example, you create a new platform called <code>MYSQL</code> that references a MySQL database. Your CT mapping uses a table from the MySQL database and you want to generate code using the double quotation mark as the enclosure character. Before you generate code for the CT mapping, you must set the enclosure character for the MYSQL platform using the following statement:</p>
<p><code>OMBALTER PLATFORM 'MYSQL' SET PROPERTIES (ENCLOSURE_CHAR) VALUES ('"')</code></p>
<div class="infobox-note">
<p class="notep1">Note:</p>
The Use Enclosure Parameter is not supported for CT mappings that contain Flat File operators.</div>
</div>
<!-- class="sect3" -->
<div class="sect3"><!-- infolevel="all" infotype="General" --><a id="sthref1996"></a>
<h4 class="sect3">SQL Loader Data Files</h4>
<p>Use the SQL Loader Data Files section to set the <a href="#CHDIICFJ">"Source File Operator"</a> parameter. For CT mappings that contain one or more Flat File operators, you can set parameters for the associated data files.</p>
<p class="subhead2"><a id="CHDIICFJ"></a>Source File Operator<a id="sthref1997"></a></p>
<p>Use this property to specify the Flat File operator that must be associated with the current data file.</p>
<p>If your CT mapping contains only one Flat File operator, setting the Source File Operator parameter is optional. However, if your CT mapping contains multiple Flat File operator, you must set this parameter. This parameter enables Oracle Warehouse Builder to understand the relationship between the data file and the Flat File operator.</p>
<p>This property is available starting with Oracle Warehouse Builder 11g Release 2 (11.2.0.2).</p>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="i1113194"></a>
<div class="sect2">
<h3 class="sect2">Configuring Flat File Operators</h3>
<p><a id="sthref1998"></a><a id="sthref1999"></a><a id="sthref2000"></a>The Configuration tab of the Flat File operator contains additional settings for Flat File operators, depending on how the operators are used in the mapping.</p>
<ul>
<li>
<p><a href="#i1115091">"Flat File Operators as a Target"</a><span class="bold">:</span> A PL/SQL deployment code package is generated. For information about configuring the parameters associated with a Flat File operator used as a target, see <a href="#i1115091">"Flat File Operators as a Target"</a>.</p>
</li>
<li>
<p><a href="#i1131671">"Flat File Operator as a Source"</a><span class="bold">:</span> SQL*Loader scripts are generated. For information about the parameters associated with a Flat File operator used as a source, see <a href="#i1131671">"Flat File Operator as a Source"</a>.</p>
</li>
</ul>
</div>
<!-- class="sect2" -->
<a id="i1115091"></a>
<div class="sect2">
<h3 class="sect2">Flat File Operators as a Target</h3>
<p><span class="bold">To configure properties unique to mappings with flat file targets:</span></p>
<ol>
<li>
<p>Select a mapping from the Projects Navigator, select <span class="bold">Design</span> from the menu bar, and select <span class="bold">Configure.</span></p>
<p>Or, right-click the mapping you want to configure and select <span class="bold">Configure</span>.</p>
<p>Oracle Warehouse Builder displays the Configuration tab for the mapping.</p>
</li>
<li>
<p>Choose the parameters to configure and click the space to the right of the parameter name to edit its value.</p>
<p>For each parameter, you can either select an option from a list, enter a value, or click the Ellipsis button to display another properties dialog box.</p>
</li>
<li>
<p>Select the <span class="bold">Deployable</span> option to generate a set of scripts for mapping objects marked as deployable. If this option is not selected for a mapping, then scripts are not generated for that mapping.</p>
</li>
<li>
<p>Set <span class="bold">Language</span> to the type of code to generate for the selected mapping. The options you can choose from depend upon the design and use of the operators in the mapping. Depending on the mapping, you can select from PL/SQL, ABAP (for an SAP source mapping), or SQL*Loader.</p>
</li>
<li>
<p>Specify the location to deploy the mapping.</p>
</li>
<li>
<p>Under <a href="#i1134262"><span class="xreftitlebold">Runtime Parameters</span></a>, set the <span class="bold">Default Operating Mode</span> to <span class="bold">Row based (target only)</span>. This type of mapping does not generates code in any other default operating mode. For a description of each run time parameter, see <a href="#i1134262">"Runtime Parameters"</a>.</p>
</li>
<li>
<p>Set the <a href="#i1112962"><span class="xreftitlebold">Code Generation Options</span></a> as described in <a href="#i1112962">"Code Generation Options"</a>.</p>
</li>
<li>
<p>Set the <a href="#i1128311"><span class="xreftitlebold">Sources and Targets Reference</span></a> as described in <a href="#i1128311">"Sources and Targets Reference"</a>.</p>
</li>
<li>
<p>For <span class="bold">Access Specification,</span> specify the name of the flat file target in <span class="bold">Target Data File Name.</span> For the <span class="bold">Target Data File Location,</span> specify a target file located on the computer where you installed the run time Platform. Select <span class="bold">Output as XML file</span> if you want the output to be in an xml file.</p>
</li>
</ol>
</div>
<!-- class="sect2" -->
<a id="i1131671"></a>
<div class="sect2">
<h3 class="sect2">Flat File Operator as a Source</h3>
<p><span class="bold">To configure a mapping with a Flat File operator as a source:</span></p>
<ol>
<li>
<p>Select a mapping from the Projects Navigator, select <span class="bold">Design</span> from the menu bar, and select <span class="bold">Configure.</span> Or, right-click the mapping to configure and select <span class="bold">Configure</span>.</p>
</li>
<li>
<p>Select the parameters to configure and click the space to the right of the parameter name to edit its value.</p>
<p>For each parameter, you can specify whether you want the parameter to be selected, select an option from a list, enter a value, or click the Ellipsis button to display another properties dialog box.</p>
</li>
<li>
<p>Select the <span class="bold">Deployable</span> option to generate SQL*Loader script.</p>
</li>
<li>
<p>Specify the <span class="bold">Log File Location</span> and <span class="bold">Log File Name.</span></p>
</li>
<li>
<p>Select <span class="bold">Continue Load.</span></p>
<p>If SQL*Loader runs out of space for data rows or index entries, the load is discontinued. If the <span class="bold">Continue Load</span> option is selected, then an attempt is made to continue discontinued loads.</p>
</li>
<li>
<p>In <span class="bold">Nls Characterset,</span> specify the character set to place in the CHARACTERSET clause.</p>
</li>
<li>
<p>Select <span class="bold">Direct Mode</span> to indicate that a direct path loading is done. If this option is not selected, then a conventional loading is done. In general, direct mode is faster.</p>
</li>
<li>
<p>Select <span class="bold">Operation Recoverable</span> to indicate that the load is recoverable. If this option is not selected, then the load is not recoverable and records are not recorded in the redo log.</p>
</li>
<li>
<p>Configure the following parameters that affect the OPTIONS clause in the SQL*Loader script that is generated for mappings with flat file sources.</p>
<p><span class="bold">Perform Parallel Load</span>: If this option is selected, direct loads can operate in multiple concurrent sessions.</p>
<p><span class="bold">Errors Allowed:</span> If the value specified is greater than 0, then the ERRORS = n option is generated. SQL*Loader terminates the load at the first consistent point after it reaches this error limit.</p>
<p><span class="bold">Records To Skip:</span> If the value specified is greater than 0, then the SKIP = n option is generated. This value indicates the number of records from the beginning of the file that should not be loaded. If the value is not specified, then no records are skipped.</p>
<p><span class="bold">Records To Load:</span> If the value specified is greater than 0, then the LOAD = n option is generated. This value specifies the maximum number of records to load. If a value is not specified, then all of the records are loaded.</p>
<p><span class="bold">Rows Per Commit:</span> If the value specified is greater than 0, then the ROWS = n option is generated. For direct path loads, the value identifies the number of rows to read from the source before a data is saved. For conventional path loads, the value specifies the number of rows in the bind array.</p>
<p><span class="bold">Read Size:</span> If the value specified is greater than 0, then the READSIZE = n option is generated. The value is used to specify the size of the read buffer.</p>
<p><span class="bold">Bind Size:</span> If the value specified is greater than 0, then the BINDSIZE = n option is generated. The value indicates the maximum size, in bytes, of the bind array.</p>
<p><span class="bold">Read Buffers:</span> If the value specified is greater than 0, then the READBUFFERS = n clause is generated. READBUFFERS specifies the number of buffers to use during a direct path load. Do not specify a value for READBUFFERS unless it is necessary.</p>
<p><span class="bold">Preserve Blanks:</span> If this option is selected, then the PRESERVE BLANKS clause is generated. PRESERVE BLANKS retains leading white space when optional enclosure delimiters are not present. It also leaves the trailing white space intact when fields are specified with a predetermined size.</p>
<p><span class="bold">Database File Name:</span> This parameter enables you to specify the characteristics of the physical files to be loaded. The initial values of these parameter is set from the properties of the flat file used in the mapping.</p>
<p>If this parameter is set to a nonblank value, then the FILE= option is generated. The value specified is enclosed in single quotation marks in the generated code.</p>
<p><span class="bold">Control File Location</span> and <span class="bold">Control File Name:</span> The control file name necessary for audit details.</p>
<p>For more information about each SQL*Loader option and clause, see <a class="olink SUTIL" href="../../server.112/e22490/toc.htm"><span class="italic">Oracle Database Utilities</span></a>.</p>
</li>
<li>
<p>Expand the <a href="#i1134262"><span class="xreftitlebold">Runtime Parameters</span></a> to configure your mapping for deployment.</p>
<p><span class="bold">Audit:</span> Select this option to perform an audit when the package is run.</p>
<p><span class="bold">Default Purge Group:</span> The Default Purge Group is used when executing the package. Each audit record in the run time schema is assigned to the purge group specified.</p>
</li>
<li>
<p>Expand <a href="#i1128311"><span class="xreftitlebold">Sources and Targets Reference</span></a> to set the physical properties of the operators in the mapping as described in <a href="#i1128311">"Sources and Targets Reference"</a>.</p>
</li>
</ol>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="i1130147"></a><a id="WBETL13002"></a>
<div class="sect1">
<h2 class="sect1">Configuring Process Flows Reference</h2>
<p><span class="bold">To configure a process flow module:</span></p>
<ol>
<li>
<p>Right-click the process flow module and select <span class="bold">Configure.</span></p>
<p>Oracle Warehouse Builder displays the Configuration tab for the process flow module.</p>
</li>
<li>
<p>Set the parameters for <span class="bold">Evaluation Location</span> and <span class="bold">Identification Location.</span></p>
<p><span class="bold">Evaluation Location</span> is the location from which this process flow is evaluated.</p>
<p><span class="bold">Identification Location</span> provides the location where the generated code is deployed to.</p>
</li>
</ol>
<p><span class="bold">To configure a process flow package</span>:</p>
<ol>
<li>
<p>Right-click the process flow package and select <span class="bold">Configure</span>.</p>
<p>Oracle Warehouse Builder displays the Configuration tab for the process flow package.</p>
</li>
<li>
<p>Set the parameters for <span class="bold">Referred Calendar</span> and <span class="bold">Generation Comments.</span></p>
<p><span class="bold">Referred Calendar</span> provides the schedule to associate with this package.</p>
<p><span class="bold">Generation Comments</span> provides additional comments for the generated code.</p>
</li>
</ol>
<p>Click any of the activities of a package to view its properties.</p>
<p>Under <span class="bold">Path Settings,</span> set the following properties for each activity in the process flow:</p>
<p><span class="bold">Execution Location:</span> The location from which this activity is run. If you configured Oracle Enterprise Manager, then you can select an Oracle Enterprise Manager agent to run the process flow.</p>
<p><span class="bold">Remote Location:</span> The remote location for FTP activities only.</p>
<p><span class="bold">Working Location:</span> The working location for FTP, FILE EXISTS, and External Process activities only.</p>
<p><span class="bold">Deployed Location:</span> The deployment location. This setting applies to transformation activities only. For activities referring to predefined transformations, you must change the setting from <span class="bold">Use Default Location</span> and specify a valid location.</p>
<p>Under <span class="bold">General Properties,</span> you can view the bound name, which is the name of the object that the activity represents in the process flow. Only mapping, transformation, and subprocess activities have bound names.</p>
<p>Under <span class="bold">Execution Settings,</span> select the option <span class="bold">Use Return as Status</span>.</p>
<p>This setting governs the behavior for activities that return <code>NUMBER</code> in their output. These activities include the <a href="activities_in_pf.htm#i1155929">"FTP"</a>, <a href="activities_in_pf.htm#i1173362">"User Defined"</a>, and <a href="activities_in_pf.htm#i1157933">"Transform"</a> activities. When you select <span class="bold">Use Return as Status</span>, the Process Flow Editor assigns the outgoing transition conditions based on the following numeric return values for the activity:</p>
<p>1 = Success Transition</p>
<p>2 = Warning Transition</p>
<p>3 = Error Transition</p>
</div>
<!-- class="sect1" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment2968">
<tr>
<td class="cellalignment2977">
<table class="cellalignment2973">
<tr>
<td class="cellalignment2972"><a href="part_4.htm"><img width="24" height="24" src="../../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment2972"><a href="src_tgt_opers.htm"><img width="24" height="24" src="../../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;2000, 2011,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment2980">
<table class="cellalignment2971">
<tr>
<td class="cellalignment2972"><a href="../../index.htm"><img width="24" height="24" src="../../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment2972"><a href="../../nav/portal_booklist.htm"><img width="24" height="24" src="../../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment2972"><a href="toc.htm"><img width="24" height="24" src="../../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment2972"><a href="index.htm"><img width="24" height="24" src="../../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment2972"><a href="../../nav/mindx.htm"><img width="24" height="24" src="../../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment2972"><a href="../../dcommon/html/feedback.htm"><img width="24" height="24" src="../../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>
</body>
</html>
