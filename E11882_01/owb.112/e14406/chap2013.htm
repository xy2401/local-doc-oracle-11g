<!DOCTYPE html>
<html lang="en" >
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1">
<meta charset="utf-8">
<title>OMBALTER EXPERT</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Version 5.1.1 Build 007" />
<meta name="dcterms.created" content="2009-08-03T19:1:40Z" />
<meta name="robots" content="all" />
<meta name="dcterms.title" content="Warehouse Builder OMB*Plus Command Reference" />
<meta name="dcterms.identifier" content="E14406-01" />
<meta name="dcterms.isVersionOf" content="WBREF" />
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;2009,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved." />
<link rel="Start" href="../../index.htm" title="Home" type="text/html" />
<link rel="Copyright" href="../../dcommon/html/cpyr.htm" title="Copyright" type="text/html" />

<script type="application/javascript"  src="../../dcommon/js/headfoot.js"></script>
<script type="application/javascript"  src="../../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html" />
<link rel="Prev" href="chap2012.htm" title="Previous" type="text/html" />
<link rel="Next" href="chap2014.htm" title="Next" type="text/html" />
<link rel="schema.dcterms" href="http://purl.org/dc/terms/" />
<link rel="stylesheet" href="../../dcommon/css/fusiondoc.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/header.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/footer.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/fonts.css">
<link rel="stylesheet" href="../../dcommon/css/foundation.css">
<link rel="stylesheet" href="../../dcommon/css/codemirror.css">
<link rel="stylesheet" type="text/css" title="Default" href="../../nav/css/html5.css">
<link rel="stylesheet" href="../../dcommon/css/respond-480-tablet.css">
<link rel="stylesheet" href="../../dcommon/css/respond-768-laptop.css">
<link rel="stylesheet" href="../../dcommon/css/respond-1140-deskop.css">
<script type="application/javascript" src="../../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">40/513</span> <!-- End Header --><a id="BGDDFFHH"></a><a id="WBREF1330"></a>
<div class="sect1">
<h1 class="sect1">OMBALTER EXPERT</h1>
<div class="sect2"><a id="sthref867"></a>
<h2 class="sect2">Purpose</h2>
<p>To alter an expert.</p>
</div>
<!-- class="sect2" -->
<div class="sect2"><a id="sthref868"></a>
<h2 class="sect2">Prerequisites</h2>
<p>In the context of an expert module.</p>
</div>
<!-- class="sect2" -->
<div class="sect2"><a id="sthref869"></a>
<h2 class="sect2">Syntax</h2>
<pre>
alterExpertCommand =  OMBALTER EXPERT "QUOTED_STRING" ( "renameClause" { 
          "alterPropertiesOrIconSetClause" } { "alterExpertDetailClauses" } | 
          "alterPropertiesOrIconSetClause"+ { "alterExpertDetailClauses" } | 
          "alterExpertDetailClauses"+ )
     renameClause =  RENAME TO "QUOTED_STRING"
     alterPropertiesOrIconSetClause =  SET "setPropertiesClause" | SET 
          "setReferenceIconSetClause" | UNSET "unsetReferenceIconSetClause"
     alterExpertDetailClauses =  ( ADD ( "addParameterClause" | 
          "addVariableClause" | "addNestedExpertClause" | "addTaskClause" | 
          "addTransitionClause" ) | MODIFY ( "modifyParameterClause" | 
          "modifyVariableClause" | "modifyTaskClause" | "modifyTransitionClause"
           ) | DELETE ( "deleteParameterClause" | "deleteVariableClause" | 
          "deleteTaskClause" | "deleteTransitionClause" ) )
     setPropertiesClause =  PROPERTIES "(" "propertyNameList" ")" VALUES "(" 
          "propertyValueList" ")"
     setReferenceIconSetClause =  ( REFERENCE | REF ) ICONSET "QUOTED_STRING"
     unsetReferenceIconSetClause =  ( REFERENCE | REF ) ICONSET
     addParameterClause =  PARAMETER "QUOTED_STRING" [ OF TASK "QUOTED_STRING" ]
           [ SET "setPropertiesClause" ] [ "parameterBindingClause" ]
     addVariableClause =  VARIABLE "QUOTED_STRING" [ SET "setPropertiesClause" ]
     addNestedExpertClause =  NESTED_EXPERT TASK "QUOTED_STRING" SET [ 
          "collectPropertiesClause" SET ] ( REF | REFERENCE ) EXPERT 
          "QUOTED_STRING" [ SET "setReferenceIconSetClause" ]
     addTaskClause =  "TASK_TYPE" TASK "QUOTED_STRING" [ SET ( 
          "setPropertiesClause" [ SET "setReferenceIconSetClause" ] | 
          "setReferenceIconSetClause" ) ]
     addTransitionClause =  TRANSITION "QUOTED_STRING" FROM TASK "QUOTED_STRING"
           TO "QUOTED_STRING" [ SET "setPropertiesClause" ]
     modifyParameterClause =  "parameterLocator" ( "renameClause" [ SET 
          "setPropertiesClause" ] [ "parameterBindingClause" ] | SET 
          "setPropertiesClause" [ "parameterBindingClause" ] | 
          "parameterBindingClause" )
     modifyVariableClause =  "variableLocator" ( "renameClause" [ SET 
          "setPropertiesClause" ] | SET "setPropertiesClause" )
     modifyTaskClause =  TASK "QUOTED_STRING" ( "renameClause" { 
          "alterPropertiesOrIconSetClause" } | "alterPropertiesOrIconSetClause"+
           )
     modifyTransitionClause =  TRANSITION "QUOTED_STRING" ( "renameClause" [ SET
           "setPropertiesClause" ] | SET "setPropertiesClause" )
     deleteParameterClause =  "parameterLocator"
     deleteVariableClause =  "variableLocator"
     deleteTaskClause =  TASK "QUOTED_STRING"
     deleteTransitionClause =  TRANSITION "QUOTED_STRING"
     propertyNameList =  "UNQUOTED_STRING" { "," "UNQUOTED_STRING" }
     propertyValueList =  "propertyValue" { "," "propertyValue" }
     parameterBindingClause =  UNBIND | BIND TO ( "parameterLocator" | 
          "variableLocator" )
     collectPropertiesClause =  PROPERTIES "(" "propertyNameList" ")" VALUES "("
           "propertyValueList" ")"
     parameterLocator =  PARAMETER "QUOTED_STRING" [ OF TASK "QUOTED_STRING" ]
     variableLocator =  VARIABLE "QUOTED_STRING"
     propertyValue =  ( "QUOTED_STRING" | "INTEGER_LITERAL" | 
          "FLOATING_POINT_LITERAL" )
</pre></div>
<!-- class="sect2" -->
<div class="sect2"><a id="sthref870"></a>
<h2 class="sect2">Parameters</h2>
<div class="sect3"><a id="sthref871"></a>
<h3 class="sect3">alterExpertCommand</h3>
<pre>
Alter the definition of an expert.  The following lists all the default expert parameters:

1) EXP_LAUNCH_CONTEXT, type: STRING, direction: IN
The console context in which this expert is being launched.
2) EXP_LAUNCH_CONTEXT_TYPE, type: STRING, direction: IN
The type of the console context in which this expert is being launched.
3) EXP_OPERATION, type: STRING, direction: IN
The operation to be performed.  It is either CREATE or EDIT.
4) EXP_TYPE_TO_CREATE, type: STRING, direction: IN
The object type selected to be created when this expert is launched.
</pre></div>
<!-- class="sect3" -->
<div class="sect3"><a id="sthref872"></a>
<h3 class="sect3">renameClause</h3>
<p>Rename the expert.</p>
</div>
<!-- class="sect3" -->
<div class="sect3"><a id="sthref873"></a>
<h3 class="sect3">alterPropertiesOrIconSetClause</h3>
<p>Alter existing expert module properties and/or Icon Set.</p>
</div>
<!-- class="sect3" -->
<div class="sect3"><a id="sthref874"></a>
<h3 class="sect3">alterExpertDetailClauses</h3>
<p>Alter child objects of an expert.</p>
</div>
<!-- class="sect3" -->
<div class="sect3"><a id="sthref875"></a>
<h3 class="sect3">setPropertiesClause</h3>
<p>This clause sets properties for the corresponding object.</p>
</div>
<!-- class="sect3" -->
<div class="sect3"><a id="sthref876"></a>
<h3 class="sect3">getPropertiesClause</h3>
<pre>
Basic properties for EXPERT: 

Name: BUSINESS_NAME
Type: STRING(200)
Valid Values: Any valid character string in supported character set.
Default: Empty string
Business name of the expert

Name: DESCRIPTION
Type: STRING(4000)
Valid Values: Any valid character string in supported character set.
Default: Empty string
Description of the expert

Basic properties for TASK: 

Name: BUSINESS_NAME
Type: STRING(200)
Valid Values: Any valid character string in supported character set.
Default: Empty string
Business name of the task

Name: DESCRIPTION
Type: STRING(4000)
Valid Values: Any valid character string in supported character set.
Default: Empty string
Description of the task.  This is equivalent to the Goal of task in the expert editor.

Name: INSTRUCTION
Type: STRING(4000)
Valid Values: Any valid character string in supported character set.
Default: Empty string
The instruction for the task

Name: PREPROCESSING
Type: STRING
Valid Values: Any valid character string in supported character set.
Default: N/A
The pre-processing script for the task

Name: MAIN
Type: STRING
Valid Values: Any valid character string in supported character set.
Default: N/A
The main script for the task

Name: POSTPROCESSING
Type: STRING
Valid Values: Any valid character string in supported character set.
Default: N/A
The post-processing script for the task


Basic propeties for START TASK: 

Name: PROC_DECL
Type: STRING(4000)
Valid Values: Any valid character string in supported character set.
Default: Empty string
The procedure declaration for the expert.


Basic properties for TRANSITION: 

Name: BUSINESS_NAME
Type: STRING(200)
Valid Values: Any valid character string in supported character set.
Default: Empty string
Business name of the transition

Name: DESCRIPTION
Type: STRING(4000)
Valid Values: Any valid character string in supported character set.
Default: Empty string
Description of the transition

Name: TRANSITION_CONDITION
Type: STRING(4000)
Valid Values: Any valid character string in supported character set.
Default: Empty string
Condition of the transition

Name: TRANSITION_ORDER
Type: NUMBER
Valid Values: Any valid character string in supported character set.
Default: N/A
Order of the transition

Basic properties for PARAMETER: 

Name: BUSINESS_NAME
Type: STRING(200)
Valid Values: Any valid character string in supported character set.
Default: Empty string
Business name of the parameter

Name: DESCRIPTION
Type: STRING(4000)
Valid Values: Any valid character string in supported character set.
Default: Empty string
Description of the parameter

Name: DATATYPE
Type: STRING
Valid Values: STRING, NUMBER, BOOLEAN, ARRAY
Default: STRING
Datatype of the parameter

Name: DIRECTION
Type: STRING
Valid Values: IN, OUT, INOUT
Default: IN
Direction of the parameter. 
Direction of custom expert parameter can only be IN or OUT. 
For some tasks, direction of custom parameter can be IN, OUT or INOUT. 

Name: VALUE
Type: Same as datatype of the parameter
Valid Values: Any valid character string in supported character set.
Default: N/A
The static value of the parameter


Basic properties for VARIABLE: 

Name: BUSINESS_NAME
Type: STRING(200)
Valid Values: Any valid character string in supported character set.
Default: Empty string
Business name of the variable

Name: DESCRIPTION
Type: STRING(4000)
Valid Values: Any valid character string in supported character set.
Default: Empty string
Description of the variable

Name: DATATYPE
Type: STRING
Valid Values: STRING, NUMBER, BOOLEAN, ARRAY
Default: STRING
Datatype of the variable

Name: VALUE
Type: Same as datatype of the variable
Valid Values: Any valid character string in supported character set.
Default: N/A
The static value of the variable
</pre></div>
<!-- class="sect3" -->
<div class="sect3"><a id="sthref877"></a>
<h3 class="sect3">setReferenceIconSetClause</h3>
<p>Set icon set for the expert module.</p>
</div>
<!-- class="sect3" -->
<div class="sect3"><a id="sthref878"></a>
<h3 class="sect3">unsetReferenceIconSetClause</h3>
<p>Unset icon set for expert.</p>
</div>
<!-- class="sect3" -->
<div class="sect3"><a id="sthref879"></a>
<h3 class="sect3">addParameterClause</h3>
<p>Add a parameter to the expert or one of it's tasks.</p>
</div>
<!-- class="sect3" -->
<div class="sect3"><a id="sthref880"></a>
<h3 class="sect3">addVariableClause</h3>
<p>Add a variable to the expert.</p>
</div>
<!-- class="sect3" -->
<div class="sect3"><a id="sthref881"></a>
<h3 class="sect3">addNestedExpertClause</h3>
<p>Add a nested expert to the expert. The nested expert is added by reference.</p>
</div>
<!-- class="sect3" -->
<div class="sect3"><a id="sthref882"></a>
<h3 class="sect3">addTaskClause</h3>
<pre>
Add a task to the expert.  Valid task types include: ADVANCED_QUEUE, ALTERNATIVE_SORT_ORDER, ANALYZE_IMPACT, ANALYZE_LINEAGE, BUSINESS_AREA, CATALOG_FOLDER, CHANGE_MANAGER, COMMIT, CONTROLCENTERJOBS, CUBE, CUSTOM_DIALOG, DATA_AUDITOR, DATA_PROFILE, DATA_RULE, DATA_VIEWER, DEPLOY, DERIVATION, DIMENSION, DIMENSION_DRILL_PATH, DRILL_PATH, DRILL_TO_DETAIL, END, EXTERNAL_TABLE, FLAT_FILE, FUNCTION, GENERATION, ITEM_FOLDER, JACL, JAVA, JDBC, JYTHON, LIST_OF_VALUES, LOGICAL_TABLE, MAPPING, MATERIALIZED_VIEW, NESTED_EXPERT, NESTED_KM, OBJECT_SELECTOR, OMB, OS, PLUGGABLE_MAPPING, PRESENTATION_TEMPLATE, PROCEDURE, PROCESS_FLOW, REGISTERED_FUNCTION, RUNTIME_API, SELECT_SOURCE, SELECT_TARGET, SEQUENCE, SOURCE_IMPORT, START, STARTJOB, TABLE, VALIDATION, VIEW, WEB_SERVICE.

Definition of each task is as follow:

Task type  : ADVANCED_QUEUE
Group      : MML
Description: A task to create or alter an advanced queue.
Built-in parameters:
1) EXIT_CODE, type: NUMBER, direction: OUT
The exit code represents the exit status on the execution of a task. An exit code of 0 means the task executed successfully, 1 for error, and -1 for cancel.
2) RETURN_VALUE, type: STRING, direction: OUT
The return value from the execution of a task.
3) OPERATION, type: STRING, direction: IN
The operation to be performed.  It is either CREATE or EDIT.
4) PARENT_CONTEXT, type: STRING, direction: IN
The parent context for executing this task.
5) OBJECT_TO_EDIT, type: STRING, direction: IN
The OWB object to be edited for this OWB object task, when the OPERATION is specified as EDIT.

Task type  : ALTERNATIVE_SORT_ORDER
Group      : MML
Description: A task to create or alter an alternative sort order.
Built-in parameters:
1) EXIT_CODE, type: NUMBER, direction: OUT
The exit code represents the exit status on the execution of a task. An exit code of 0 means the task executed successfully, 1 for error, and -1 for cancel.
2) RETURN_VALUE, type: STRING, direction: OUT
The return value from the execution of a task.
3) OPERATION, type: STRING, direction: IN
The operation to be performed.  It is either CREATE or EDIT.
4) PARENT_CONTEXT, type: STRING, direction: IN
The parent context for executing this task.
5) OBJECT_TO_EDIT, type: STRING, direction: IN
The OWB object to be edited for this OWB object task, when the OPERATION is specified as EDIT.

Task type  : ANALYZE_IMPACT
Group      : Service
Description: A task to analyze impact of an object.
Built-in parameters:
1) EXIT_CODE, type: NUMBER, direction: OUT
The exit code represents the exit status on the execution of a task. An exit code of 0 means the task executed successfully, 1 for error, and -1 for cancel.
2) RETURN_VALUE, type: STRING, direction: OUT
The return value from the execution of a task.
3) OBJECT_TYPE, type: STRING, direction: IN
The type of object for analyzing impact.
4) OBJECT_PATH, type: STRING, direction: IN
The path to the object whose impact will be analyzed.

Task type  : ANALYZE_LINEAGE
Group      : Service
Description: A task to analyze lineage of an object.
Built-in parameters:
1) EXIT_CODE, type: NUMBER, direction: OUT
The exit code represents the exit status on the execution of a task. An exit code of 0 means the task executed successfully, 1 for error, and -1 for cancel.
2) RETURN_VALUE, type: STRING, direction: OUT
The return value from the execution of a task.
3) OBJECT_TYPE, type: STRING, direction: IN
The type of object for analyzing lineage.
4) OBJECT_PATH, type: STRING, direction: IN
The path to the object whose lineage will be analyzed.

Task type  : BUSINESS_AREA
Group      : MML
Description: A task to create or alter a business area.
Built-in parameters:
1) EXIT_CODE, type: NUMBER, direction: OUT
The exit code represents the exit status on the execution of a task. An exit code of 0 means the task executed successfully, 1 for error, and -1 for cancel.
2) RETURN_VALUE, type: STRING, direction: OUT
The return value from the execution of a task.
3) OPERATION, type: STRING, direction: IN
The operation to be performed.  It is either CREATE or EDIT.
4) PARENT_CONTEXT, type: STRING, direction: IN
The parent context for executing this task.
5) OBJECT_TO_EDIT, type: STRING, direction: IN
The OWB object to be edited for this OWB object task, when the OPERATION is specified as EDIT.

Task type  : CATALOG_FOLDER
Group      : MML
Description: A task to create or alter a catalog folder.
Built-in parameters:
1) EXIT_CODE, type: NUMBER, direction: OUT
The exit code represents the exit status on the execution of a task. An exit code of 0 means the task executed successfully, 1 for error, and -1 for cancel.
2) RETURN_VALUE, type: STRING, direction: OUT
The return value from the execution of a task.
3) OPERATION, type: STRING, direction: IN
The operation to be performed.  It is either CREATE or EDIT.
4) PARENT_CONTEXT, type: STRING, direction: IN
The parent context for executing this task.
5) OBJECT_TO_EDIT, type: STRING, direction: IN
The OWB object to be edited for this OWB object task, when the OPERATION is specified as EDIT.

Task type  : CHANGE_MANAGER
Group      : Service
Description: A task to invoke the change manager.
Built-in parameters:
1) EXIT_CODE, type: NUMBER, direction: OUT
The exit code represents the exit status on the execution of a task. An exit code of 0 means the task executed successfully, 1 for error, and -1 for cancel.
2) RETURN_VALUE, type: STRING, direction: OUT
The return value from the execution of a task.
3) OPERATION, type: STRING, direction: IN
The operation to be performed.  It is either CREATE or EDIT.
4) PARENT_CONTEXT, type: STRING, direction: IN
The parent context for executing this task.
5) OBJECT_TO_EDIT, type: STRING, direction: IN
The OWB object to be edited for this OWB object task, when the OPERATION is specified as EDIT.

Task type  : COMMIT
Group      : Service
Description: A task to perform commit in the design repository.
Built-in parameters:
1) EXIT_CODE, type: NUMBER, direction: OUT
The exit code represents the exit status on the execution of a task. An exit code of 0 means the task executed successfully, 1 for error, and -1 for cancel.
2) RETURN_VALUE, type: STRING, direction: OUT
The return value from the execution of a task.

Task type  : CONTROLCENTERJOBS
Group      : Service
Description: A task to launch the Control Center Job Monitor.
Built-in parameters:
1) EXIT_CODE, type: NUMBER, direction: OUT
The exit code represents the exit status on the execution of a task. An exit code of 0 means the task executed successfully, 1 for error, and -1 for cancel.
2) RETURN_VALUE, type: STRING, direction: OUT
The return value from the execution of a task.
3) CONTROL_CENTER_NAME, type: STRING, direction: IN
The Control Center to use.
4) PARENT_CONTEXT, type: STRING, direction: IN
The parent context for executing this task.

Task type  : CUBE
Group      : MML
Description: A task to create or alter a cube.
Built-in parameters:
1) EXIT_CODE, type: NUMBER, direction: OUT
The exit code represents the exit status on the execution of a task. An exit code of 0 means the task executed successfully, 1 for error, and -1 for cancel.
2) RETURN_VALUE, type: STRING, direction: OUT
The return value from the execution of a task.
3) OPERATION, type: STRING, direction: IN
The operation to be performed.  It is either CREATE or EDIT.
4) PARENT_CONTEXT, type: STRING, direction: IN
The parent context for executing this task.
5) OBJECT_TO_EDIT, type: STRING, direction: IN
The OWB object to be edited for this OWB object task, when the OPERATION is specified as EDIT.

Task type  : CUSTOM_DIALOG
Group      : UI
Description: A task to show a custom dialog for user interaction.
Built-in parameters:
1) GUI_RETURN_VALUE, type: ARRAY, direction: OUT
The return value of type ARRAY that stores the name and return value pair for each UI component.
2) EXIT_CODE, type: NUMBER, direction: OUT
The exit code represents the exit status on the execution of a task. An exit code of 0 means the task executed successfully, 1 for error, and -1 for cancel.
3) RETURN_VALUE, type: STRING, direction: OUT
The return value from the execution of a task.

Task type  : DATA_AUDITOR
Group      : MML
Description: A task to create or alter a data auditor.
Built-in parameters:
1) EXIT_CODE, type: NUMBER, direction: OUT
The exit code represents the exit status on the execution of a task. An exit code of 0 means the task executed successfully, 1 for error, and -1 for cancel.
2) RETURN_VALUE, type: STRING, direction: OUT
The return value from the execution of a task.
3) OPERATION, type: STRING, direction: IN
The operation to be performed.  It is either CREATE or EDIT.
4) PARENT_CONTEXT, type: STRING, direction: IN
The parent context for executing this task.
5) OBJECT_TO_EDIT, type: STRING, direction: IN
The OWB object to be edited for this OWB object task, when the OPERATION is specified as EDIT.

Task type  : DATA_PROFILE
Group      : MML
Description: A task to create or alter a data profile.
Built-in parameters:
1) EXIT_CODE, type: NUMBER, direction: OUT
The exit code represents the exit status on the execution of a task. An exit code of 0 means the task executed successfully, 1 for error, and -1 for cancel.
2) RETURN_VALUE, type: STRING, direction: OUT
The return value from the execution of a task.
3) OPERATION, type: STRING, direction: IN
The operation to be performed.  It is either CREATE or EDIT.
4) PARENT_CONTEXT, type: STRING, direction: IN
The parent context for executing this task.
5) OBJECT_TO_EDIT, type: STRING, direction: IN
The OWB object to be edited for this OWB object task, when the OPERATION is specified as EDIT.

Task type  : DATA_RULE
Group      : MML
Description: A task to create or alter a data rule.
Built-in parameters:
1) EXIT_CODE, type: NUMBER, direction: OUT
The exit code represents the exit status on the execution of a task. An exit code of 0 means the task executed successfully, 1 for error, and -1 for cancel.
2) RETURN_VALUE, type: STRING, direction: OUT
The return value from the execution of a task.
3) OPERATION, type: STRING, direction: IN
The operation to be performed.  It is either CREATE or EDIT.
4) PARENT_CONTEXT, type: STRING, direction: IN
The parent context for executing this task.
5) OBJECT_TO_EDIT, type: STRING, direction: IN
The OWB object to be edited for this OWB object task, when the OPERATION is specified as EDIT.

Task type  : DATA_VIEWER
Group      : Service
Description: A task to launch the data viewer.
Built-in parameters:
1) EXIT_CODE, type: NUMBER, direction: OUT
The exit code represents the exit status on the execution of a task. An exit code of 0 means the task executed successfully, 1 for error, and -1 for cancel.
2) RETURN_VALUE, type: STRING, direction: OUT
The return value from the execution of a task.
3) OBJECT_TYPE, type: STRING, direction: IN
The type of the OWB FCO, such as TABLE.
4) OBJECT_NAME, type: STRING, direction: IN
The name of the OWB FCO.
5) PARENT_CONTEXT, type: STRING, direction: IN
The parent context for executing this task.

Task type  : DEPLOY
Group      : Service
Description: A task to launch the Control Center deployment monitor.
Built-in parameters:
1) EXIT_CODE, type: NUMBER, direction: OUT
The exit code represents the exit status on the execution of a task. An exit code of 0 means the task executed successfully, 1 for error, and -1 for cancel.
2) RETURN_VALUE, type: STRING, direction: OUT
The return value from the execution of a task.
3) ACTION_PLAN_NAME, type: STRING, direction: IN
The deployment action plan to use.
4) PARENT_CONTEXT, type: STRING, direction: IN
The parent context for executing this task.

Task type  : DERIVATION
Group      : Service
Description: A task to run derivation service.
Built-in parameters:
1) EXIT_CODE, type: NUMBER, direction: OUT
The exit code represents the exit status on the execution of a task. An exit code of 0 means the task executed successfully, 1 for error, and -1 for cancel.
2) RETURN_VALUE, type: STRING, direction: OUT
The return value from the execution of a task.
3) OBJECT_TYPE, type: STRING, direction: IN
The type of object to derive.
4) OBJECT_PATH, type: STRING, direction: IN
The path to the object to be derived.

Task type  : DIMENSION
Group      : MML
Description: A task to create or alter a dimension.
Built-in parameters:
1) EXIT_CODE, type: NUMBER, direction: OUT
The exit code represents the exit status on the execution of a task. An exit code of 0 means the task executed successfully, 1 for error, and -1 for cancel.
2) RETURN_VALUE, type: STRING, direction: OUT
The return value from the execution of a task.
3) OPERATION, type: STRING, direction: IN
The operation to be performed.  It is either CREATE or EDIT.
4) PARENT_CONTEXT, type: STRING, direction: IN
The parent context for executing this task.
5) OBJECT_TO_EDIT, type: STRING, direction: IN
The OWB object to be edited for this OWB object task, when the OPERATION is specified as EDIT.

Task type  : DIMENSION_DRILL_PATH
Group      : MML
Description: A task to create or alter a dimension drill path.
Built-in parameters:
1) EXIT_CODE, type: NUMBER, direction: OUT
The exit code represents the exit status on the execution of a task. An exit code of 0 means the task executed successfully, 1 for error, and -1 for cancel.
2) RETURN_VALUE, type: STRING, direction: OUT
The return value from the execution of a task.
3) OPERATION, type: STRING, direction: IN
The operation to be performed.  It is either CREATE or EDIT.
4) PARENT_CONTEXT, type: STRING, direction: IN
The parent context for executing this task.
5) OBJECT_TO_EDIT, type: STRING, direction: IN
The OWB object to be edited for this OWB object task, when the OPERATION is specified as EDIT.

Task type  : DRILL_PATH
Group      : MML
Description: A task to create or alter a drill path.
Built-in parameters:
1) EXIT_CODE, type: NUMBER, direction: OUT
The exit code represents the exit status on the execution of a task. An exit code of 0 means the task executed successfully, 1 for error, and -1 for cancel.
2) RETURN_VALUE, type: STRING, direction: OUT
The return value from the execution of a task.
3) OPERATION, type: STRING, direction: IN
The operation to be performed.  It is either CREATE or EDIT.
4) PARENT_CONTEXT, type: STRING, direction: IN
The parent context for executing this task.
5) OBJECT_TO_EDIT, type: STRING, direction: IN
The OWB object to be edited for this OWB object task, when the OPERATION is specified as EDIT.

Task type  : DRILL_TO_DETAIL
Group      : MML
Description: A task to create or alter a drill to detail.
Built-in parameters:
1) EXIT_CODE, type: NUMBER, direction: OUT
The exit code represents the exit status on the execution of a task. An exit code of 0 means the task executed successfully, 1 for error, and -1 for cancel.
2) RETURN_VALUE, type: STRING, direction: OUT
The return value from the execution of a task.
3) OPERATION, type: STRING, direction: IN
The operation to be performed.  It is either CREATE or EDIT.
4) PARENT_CONTEXT, type: STRING, direction: IN
The parent context for executing this task.
5) OBJECT_TO_EDIT, type: STRING, direction: IN
The OWB object to be edited for this OWB object task, when the OPERATION is specified as EDIT.

Task type  : END
Group      : FlowControl
Description: A task that marks the end of the flow.
Built-in parameters:

Task type  : EXTERNAL_TABLE
Group      : MML
Description: A task to create or alter an external table.
Built-in parameters:
1) EXIT_CODE, type: NUMBER, direction: OUT
The exit code represents the exit status on the execution of a task. An exit code of 0 means the task executed successfully, 1 for error, and -1 for cancel.
2) RETURN_VALUE, type: STRING, direction: OUT
The return value from the execution of a task.
3) OPERATION, type: STRING, direction: IN
The operation to be performed.  It is either CREATE or EDIT.
4) PARENT_CONTEXT, type: STRING, direction: IN
The parent context for executing this task.
5) OBJECT_TO_EDIT, type: STRING, direction: IN
The OWB object to be edited for this OWB object task, when the OPERATION is specified as EDIT.

Task type  : FLAT_FILE
Group      : MML
Description: A task to create or alter a file.
Built-in parameters:
1) EXIT_CODE, type: NUMBER, direction: OUT
The exit code represents the exit status on the execution of a task. An exit code of 0 means the task executed successfully, 1 for error, and -1 for cancel.
2) RETURN_VALUE, type: STRING, direction: OUT
The return value from the execution of a task.
3) OPERATION, type: STRING, direction: IN
The operation to be performed.  It is either CREATE or EDIT.
4) PARENT_CONTEXT, type: STRING, direction: IN
The parent context for executing this task.
5) OBJECT_TO_EDIT, type: STRING, direction: IN
The OWB object to be edited for this OWB object task, when the OPERATION is specified as EDIT.

Task type  : FUNCTION
Group      : MML
Description: A task to create or alter a function.
Built-in parameters:
1) EXIT_CODE, type: NUMBER, direction: OUT
The exit code represents the exit status on the execution of a task. An exit code of 0 means the task executed successfully, 1 for error, and -1 for cancel.
2) RETURN_VALUE, type: STRING, direction: OUT
The return value from the execution of a task.
3) OPERATION, type: STRING, direction: IN
The operation to be performed.  It is either CREATE or EDIT.
4) PARENT_CONTEXT, type: STRING, direction: IN
The parent context for executing this task.
5) OBJECT_TO_EDIT, type: STRING, direction: IN
The OWB object to be edited for this OWB object task, when the OPERATION is specified as EDIT.

Task type  : GENERATION
Group      : Service
Description: A task to invoke the generation dialog.
Built-in parameters:
1) EXIT_CODE, type: NUMBER, direction: OUT
The exit code represents the exit status on the execution of a task. An exit code of 0 means the task executed successfully, 1 for error, and -1 for cancel.
2) RETURN_VALUE, type: STRING, direction: OUT
The return value from the execution of a task.
3) OBJECT_TYPE, type: STRING, direction: IN
The type of object to generate.
4) OBJECT_PATH, type: STRING, direction: IN
The path to the object to be generated.
5) PARENT_CONTEXT, type: STRING, direction: IN
The parent context for executing this task.

Task type  : ITEM_FOLDER
Group      : MML
Description: A task to create or alter an item folder.
Built-in parameters:
1) EXIT_CODE, type: NUMBER, direction: OUT
The exit code represents the exit status on the execution of a task. An exit code of 0 means the task executed successfully, 1 for error, and -1 for cancel.
2) RETURN_VALUE, type: STRING, direction: OUT
The return value from the execution of a task.
3) OPERATION, type: STRING, direction: IN
The operation to be performed.  It is either CREATE or EDIT.
4) PARENT_CONTEXT, type: STRING, direction: IN
The parent context for executing this task.
5) OBJECT_TO_EDIT, type: STRING, direction: IN
The OWB object to be edited for this OWB object task, when the OPERATION is specified as EDIT.

Task type  : JACL
Group      : Runtime
Description: A task to execute Jacl code.
Built-in parameters:
1) EXIT_CODE, type: NUMBER, direction: OUT
The exit code represents the exit status on the execution of a task. An exit code of 0 means the task executed successfully, 1 for error, and -1 for cancel.
2) RETURN_VALUE, type: STRING, direction: OUT
The return value from the execution of a task.

Task type  : JAVA
Group      : Integration
Description: A task to execute a Java program.
Built-in parameters:
1) EXIT_CODE, type: NUMBER, direction: OUT
The exit code represents the exit status on the execution of a task. An exit code of 0 means the task executed successfully, 1 for error, and -1 for cancel.
2) RETURN_VALUE, type: STRING, direction: OUT
The return value from the execution of a task.
3) CLASS_URL, type: STRING, direction: IN
The URL specification of the Jar file.  An example for a local jar file xyz.jar can be specified as file:/xyz.jar
4) CLASS_NAME, type: STRING, direction: IN
The class to load.  This includes the package as well in dotted notation.  For example, oracle.owb.Test
5) METHOD_NAME, type: STRING, direction: IN
The static method to execute.
6) ARGUMENT_LIST, type: STRING, direction: IN
The argument list to be passed into the static method.

Task type  : JDBC
Group      : Runtime
Description: A task to connect to a database and execute SQL DDL and DML statements.
Built-in parameters:
1) EXIT_CODE, type: NUMBER, direction: OUT
The exit code represents the exit status on the execution of a task. An exit code of 0 means the task executed successfully, 1 for error, and -1 for cancel.
2) RETURN_VALUE, type: STRING, direction: OUT
The return value from the execution of a task.

Task type  : JYTHON
Group      : Runtime
Description: A task to execute Jython code.
Built-in parameters:
1) EXIT_CODE, type: NUMBER, direction: OUT
The exit code represents the exit status on the execution of a task. An exit code of 0 means the task executed successfully, 1 for error, and -1 for cancel.
2) RETURN_VALUE, type: STRING, direction: OUT
The return value from the execution of a task.

Task type  : LIST_OF_VALUES
Group      : MML
Description: A task to create or alter a list of values.
Built-in parameters:
1) EXIT_CODE, type: NUMBER, direction: OUT
The exit code represents the exit status on the execution of a task. An exit code of 0 means the task executed successfully, 1 for error, and -1 for cancel.
2) RETURN_VALUE, type: STRING, direction: OUT
The return value from the execution of a task.
3) OPERATION, type: STRING, direction: IN
The operation to be performed.  It is either CREATE or EDIT.
4) PARENT_CONTEXT, type: STRING, direction: IN
The parent context for executing this task.
5) OBJECT_TO_EDIT, type: STRING, direction: IN
The OWB object to be edited for this OWB object task, when the OPERATION is specified as EDIT.

Task type  : LOGICAL_TABLE
Group      : MML
Description: A task to create or alter an item folder.
Built-in parameters:
1) EXIT_CODE, type: NUMBER, direction: OUT
The exit code represents the exit status on the execution of a task. An exit code of 0 means the task executed successfully, 1 for error, and -1 for cancel.
2) RETURN_VALUE, type: STRING, direction: OUT
The return value from the execution of a task.
3) OPERATION, type: STRING, direction: IN
The operation to be performed.  It is either CREATE or EDIT.
4) PARENT_CONTEXT, type: STRING, direction: IN
The parent context for executing this task.
5) OBJECT_TO_EDIT, type: STRING, direction: IN
The OWB object to be edited for this OWB object task, when the OPERATION is specified as EDIT.

Task type  : MAPPING
Group      : MML
Description: A task to create or alter a mapping.
Built-in parameters:
1) EXIT_CODE, type: NUMBER, direction: OUT
The exit code represents the exit status on the execution of a task. An exit code of 0 means the task executed successfully, 1 for error, and -1 for cancel.
2) RETURN_VALUE, type: STRING, direction: OUT
The return value from the execution of a task.
3) OPERATION, type: STRING, direction: IN
The operation to be performed.  It is either CREATE or EDIT.
4) PARENT_CONTEXT, type: STRING, direction: IN
The parent context for executing this task.
5) OBJECT_TO_EDIT, type: STRING, direction: IN
The OWB object to be edited for this OWB object task, when the OPERATION is specified as EDIT.

Task type  : MATERIALIZED_VIEW
Group      : MML
Description: A task to create or alter a materialized view.
Built-in parameters:
1) EXIT_CODE, type: NUMBER, direction: OUT
The exit code represents the exit status on the execution of a task. An exit code of 0 means the task executed successfully, 1 for error, and -1 for cancel.
2) RETURN_VALUE, type: STRING, direction: OUT
The return value from the execution of a task.
3) OPERATION, type: STRING, direction: IN
The operation to be performed.  It is either CREATE or EDIT.
4) PARENT_CONTEXT, type: STRING, direction: IN
The parent context for executing this task.
5) OBJECT_TO_EDIT, type: STRING, direction: IN
The OWB object to be edited for this OWB object task, when the OPERATION is specified as EDIT.

Task type  : NESTED_EXPERT
Group      : FlowControl
Description: A task that references another expert.
Built-in parameters:
1) EXIT_CODE, type: NUMBER, direction: OUT
The exit code represents the exit status on the execution of a task. An exit code of 0 means the task executed successfully, 1 for error, and -1 for cancel.
2) RETURN_VALUE, type: STRING, direction: OUT
The return value from the execution of a task.

Task type  : NESTED_KM
Group      : FlowControl
Description: A task that references another knowledge module.
Built-in parameters:
1) EXIT_CODE, type: NUMBER, direction: OUT
The exit code represents the exit status on the execution of a task. An exit code of 0 means the task executed successfully, 1 for error, and -1 for cancel.
2) RETURN_VALUE, type: STRING, direction: OUT
The return value from the execution of a task.

Task type  : OBJECT_SELECTOR
Group      : UI
Description: A task that shows a dialog for user to select an object.
Built-in parameters:
1) EXIT_CODE, type: NUMBER, direction: OUT
The exit code represents the exit status on the execution of a task. An exit code of 0 means the task executed successfully, 1 for error, and -1 for cancel.
2) RETURN_VALUE, type: STRING, direction: OUT
The return value from the execution of a task.
3) PARENT_CONTEXT, type: STRING, direction: IN
The parent context for executing this task.
4) OBJECT_TYPE, type: STRING, direction: IN
The type of object for selection.

Task type  : OMB
Group      : Integration
Description: A task to launch a generic OMB script.
Built-in parameters:
1) EXIT_CODE, type: NUMBER, direction: OUT
The exit code represents the exit status on the execution of a task. An exit code of 0 means the task executed successfully, 1 for error, and -1 for cancel.
2) RETURN_VALUE, type: STRING, direction: OUT
The return value from the execution of a task.

Task type  : OS
Group      : Runtime
Description: A task to execute an OS call.
Built-in parameters:
1) EXIT_CODE, type: NUMBER, direction: OUT
The exit code represents the exit status on the execution of a task. An exit code of 0 means the task executed successfully, 1 for error, and -1 for cancel.
2) RETURN_VALUE, type: STRING, direction: OUT
The return value from the execution of a task.

Task type  : PLUGGABLE_MAPPING
Group      : MML
Description: A task to create or alter a pluggable mapping.
Built-in parameters:
1) EXIT_CODE, type: NUMBER, direction: OUT
The exit code represents the exit status on the execution of a task. An exit code of 0 means the task executed successfully, 1 for error, and -1 for cancel.
2) RETURN_VALUE, type: STRING, direction: OUT
The return value from the execution of a task.
3) OPERATION, type: STRING, direction: IN
The operation to be performed.  It is either CREATE or EDIT.
4) PARENT_CONTEXT, type: STRING, direction: IN
The parent context for executing this task.
5) OBJECT_TO_EDIT, type: STRING, direction: IN
The OWB object to be edited for this OWB object task, when the OPERATION is specified as EDIT.

Task type  : PRESENTATION_TEMPLATE
Group      : MML
Description: A task to create or alter a presentation template.
Built-in parameters:
1) EXIT_CODE, type: NUMBER, direction: OUT
The exit code represents the exit status on the execution of a task. An exit code of 0 means the task executed successfully, 1 for error, and -1 for cancel.
2) RETURN_VALUE, type: STRING, direction: OUT
The return value from the execution of a task.
3) OPERATION, type: STRING, direction: IN
The operation to be performed.  It is either CREATE or EDIT.
4) PARENT_CONTEXT, type: STRING, direction: IN
The parent context for executing this task.
5) OBJECT_TO_EDIT, type: STRING, direction: IN
The OWB object to be edited for this OWB object task, when the OPERATION is specified as EDIT.

Task type  : PROCEDURE
Group      : MML
Description: A task to create or alter a procedure.
Built-in parameters:
1) EXIT_CODE, type: NUMBER, direction: OUT
The exit code represents the exit status on the execution of a task. An exit code of 0 means the task executed successfully, 1 for error, and -1 for cancel.
2) RETURN_VALUE, type: STRING, direction: OUT
The return value from the execution of a task.
3) OPERATION, type: STRING, direction: IN
The operation to be performed.  It is either CREATE or EDIT.
4) PARENT_CONTEXT, type: STRING, direction: IN
The parent context for executing this task.
5) OBJECT_TO_EDIT, type: STRING, direction: IN
The OWB object to be edited for this OWB object task, when the OPERATION is specified as EDIT.

Task type  : PROCESS_FLOW
Group      : MML
Description: A task to create or alter a process flow.
Built-in parameters:
1) EXIT_CODE, type: NUMBER, direction: OUT
The exit code represents the exit status on the execution of a task. An exit code of 0 means the task executed successfully, 1 for error, and -1 for cancel.
2) RETURN_VALUE, type: STRING, direction: OUT
The return value from the execution of a task.
3) OPERATION, type: STRING, direction: IN
The operation to be performed.  It is either CREATE or EDIT.
4) PARENT_CONTEXT, type: STRING, direction: IN
The parent context for executing this task.
5) OBJECT_TO_EDIT, type: STRING, direction: IN
The OWB object to be edited for this OWB object task, when the OPERATION is specified as EDIT.

Task type  : REGISTERED_FUNCTION
Group      : MML
Description: A task to create or alter a registered function.
Built-in parameters:
1) EXIT_CODE, type: NUMBER, direction: OUT
The exit code represents the exit status on the execution of a task. An exit code of 0 means the task executed successfully, 1 for error, and -1 for cancel.
2) RETURN_VALUE, type: STRING, direction: OUT
The return value from the execution of a task.
3) OPERATION, type: STRING, direction: IN
The operation to be performed.  It is either CREATE or EDIT.
4) PARENT_CONTEXT, type: STRING, direction: IN
The parent context for executing this task.
5) OBJECT_TO_EDIT, type: STRING, direction: IN
The OWB object to be edited for this OWB object task, when the OPERATION is specified as EDIT.

Task type  : RUNTIME_API
Group      : Runtime
Description: A task to execute a runtime API call.
Built-in parameters:
1) EXIT_CODE, type: NUMBER, direction: OUT
The exit code represents the exit status on the execution of a task. An exit code of 0 means the task executed successfully, 1 for error, and -1 for cancel.
2) RETURN_VALUE, type: STRING, direction: OUT
The return value from the execution of a task.

Task type  : SELECT_SOURCE
Group      : UI
Description: A task that allows users to pick a metadata source.
Built-in parameters:
1) EXIT_CODE, type: NUMBER, direction: OUT
The exit code represents the exit status on the execution of a task. An exit code of 0 means the task executed successfully, 1 for error, and -1 for cancel.
2) RETURN_VALUE, type: STRING, direction: OUT
The return value from the execution of a task.
3) PARENT_CONTEXT, type: STRING, direction: IN
The parent context for executing this task.
4) MODULE_NAME, type: STRING, direction: OUT
The name of the module.
5) LOCATION_NAME, type: STRING, direction: OUT
The name of the location for this connection.
6) OBJECT_TYPE, type: STRING, direction: OUT
The type of object selected as the source.
7) SOURCE_TYPE, type: STRING, direction: INOUT
The type of the source, e.g. file or database.

Task type  : SELECT_TARGET
Group      : UI
Description: A task that allows users to pick a target.
Built-in parameters:
1) EXIT_CODE, type: NUMBER, direction: OUT
The exit code represents the exit status on the execution of a task. An exit code of 0 means the task executed successfully, 1 for error, and -1 for cancel.
2) RETURN_VALUE, type: STRING, direction: OUT
The return value from the execution of a task.
3) PARENT_CONTEXT, type: STRING, direction: IN
The parent context for executing this task.
4) MODULE_NAME, type: STRING, direction: OUT
The name of the module.
5) LOCATION_NAME, type: STRING, direction: OUT
The name of the location for this connection.
6) OBJECT_TYPE, type: STRING, direction: OUT
The type of object selected as the target.
7) SOURCE_TYPE, type: STRING, direction: INOUT
The type of the source, e.g. file or database.

Task type  : SEQUENCE
Group      : MML
Description: A task to create or alter a sequence.
Built-in parameters:
1) EXIT_CODE, type: NUMBER, direction: OUT
The exit code represents the exit status on the execution of a task. An exit code of 0 means the task executed successfully, 1 for error, and -1 for cancel.
2) RETURN_VALUE, type: STRING, direction: OUT
The return value from the execution of a task.
3) OPERATION, type: STRING, direction: IN
The operation to be performed.  It is either CREATE or EDIT.
4) PARENT_CONTEXT, type: STRING, direction: IN
The parent context for executing this task.
5) OBJECT_TO_EDIT, type: STRING, direction: IN
The OWB object to be edited for this OWB object task, when the OPERATION is specified as EDIT.

Task type  : SOURCE_IMPORT
Group      : Service
Description: A task to invoke the import wizard.
Built-in parameters:
1) EXIT_CODE, type: NUMBER, direction: OUT
The exit code represents the exit status on the execution of a task. An exit code of 0 means the task executed successfully, 1 for error, and -1 for cancel.
2) RETURN_VALUE, type: STRING, direction: OUT
The return value from the execution of a task.
3) PARENT_CONTEXT, type: STRING, direction: IN
The parent context for executing this task.
4) OBJECT_TYPE, type: STRING, direction: IN
The type of object to import.
5) IMPORT_MODE, type: STRING, direction: IN
The mode for import.  Select FULL_MODE for importing multiple objects, or MINIMAL_MODE for single import.

Task type  : START
Group      : FlowControl
Description: A task that marks the beginning of the flow.
Built-in parameters:

Task type  : STARTJOB
Group      : Service
Description: A task to launch the start job monitor.
Built-in parameters:
1) EXIT_CODE, type: NUMBER, direction: OUT
The exit code represents the exit status on the execution of a task. An exit code of 0 means the task executed successfully, 1 for error, and -1 for cancel.
2) RETURN_VALUE, type: STRING, direction: OUT
The return value from the execution of a task.
3) OBJECT_TYPE, type: STRING, direction: IN
The type of object to be started.
4) OBJECT_PATH, type: STRING, direction: IN
The context path of the object to be started.
5) PARENT_CONTEXT, type: STRING, direction: IN
The parent context for executing this task.

Task type  : TABLE
Group      : MML
Description: A task to create or alter a table.
Built-in parameters:
1) EXIT_CODE, type: NUMBER, direction: OUT
The exit code represents the exit status on the execution of a task. An exit code of 0 means the task executed successfully, 1 for error, and -1 for cancel.
2) RETURN_VALUE, type: STRING, direction: OUT
The return value from the execution of a task.
3) OPERATION, type: STRING, direction: IN
The operation to be performed.  It is either CREATE or EDIT.
4) PARENT_CONTEXT, type: STRING, direction: IN
The parent context for executing this task.
5) OBJECT_TO_EDIT, type: STRING, direction: IN
The OWB object to be edited for this OWB object task, when the OPERATION is specified as EDIT.

Task type  : VALIDATION
Group      : Service
Description: A task to invoke the validation dialog.
Built-in parameters:
1) EXIT_CODE, type: NUMBER, direction: OUT
The exit code represents the exit status on the execution of a task. An exit code of 0 means the task executed successfully, 1 for error, and -1 for cancel.
2) RETURN_VALUE, type: STRING, direction: OUT
The return value from the execution of a task.
3) OBJECT_TYPE, type: STRING, direction: IN
The type of object to validate.
4) OBJECT_PATH, type: STRING, direction: IN
The path to the object to be validated.
5) PARENT_CONTEXT, type: STRING, direction: IN
The parent context for executing this task.

Task type  : VIEW
Group      : MML
Description: A task to create or alter a view.
Built-in parameters:
1) EXIT_CODE, type: NUMBER, direction: OUT
The exit code represents the exit status on the execution of a task. An exit code of 0 means the task executed successfully, 1 for error, and -1 for cancel.
2) RETURN_VALUE, type: STRING, direction: OUT
The return value from the execution of a task.
3) OPERATION, type: STRING, direction: IN
The operation to be performed.  It is either CREATE or EDIT.
4) PARENT_CONTEXT, type: STRING, direction: IN
The parent context for executing this task.
5) OBJECT_TO_EDIT, type: STRING, direction: IN
The OWB object to be edited for this OWB object task, when the OPERATION is specified as EDIT.

Task type  : WEB_SERVICE
Group      : MML
Description: A task to create or alter a web service.
Built-in parameters:
1) EXIT_CODE, type: NUMBER, direction: OUT
The exit code represents the exit status on the execution of a task. An exit code of 0 means the task executed successfully, 1 for error, and -1 for cancel.
2) RETURN_VALUE, type: STRING, direction: OUT
The return value from the execution of a task.
3) OPERATION, type: STRING, direction: IN
The operation to be performed.  It is either CREATE or EDIT.
4) PARENT_CONTEXT, type: STRING, direction: IN
The parent context for executing this task.
5) OBJECT_TO_EDIT, type: STRING, direction: IN
The OWB object to be edited for this OWB object task, when the OPERATION is specified as EDIT.
</pre></div>
<!-- class="sect3" -->
<div class="sect3"><a id="sthref883"></a>
<h3 class="sect3">addTransitionClause</h3>
<p>Add a transition to the expert.</p>
</div>
<!-- class="sect3" -->
<div class="sect3"><a id="sthref884"></a>
<h3 class="sect3">modifyParameterClause</h3>
<p>Modify the definition of a parameter.</p>
</div>
<!-- class="sect3" -->
<div class="sect3"><a id="sthref885"></a>
<h3 class="sect3">modifyVariableClause</h3>
<p>Modify the definition of a variable.</p>
</div>
<!-- class="sect3" -->
<div class="sect3"><a id="sthref886"></a>
<h3 class="sect3">modifyTaskClause</h3>
<p>Modify the definition of a task.</p>
</div>
<!-- class="sect3" -->
<div class="sect3"><a id="sthref887"></a>
<h3 class="sect3">modifyTransitionClause</h3>
<p>Modify the definition of a transition.</p>
</div>
<!-- class="sect3" -->
<div class="sect3"><a id="sthref888"></a>
<h3 class="sect3">deleteParameterClause</h3>
<p>Delete a parameter.</p>
</div>
<!-- class="sect3" -->
<div class="sect3"><a id="sthref889"></a>
<h3 class="sect3">deleteVariableClause</h3>
<p>Delete a variable.</p>
</div>
<!-- class="sect3" -->
<div class="sect3"><a id="sthref890"></a>
<h3 class="sect3">deleteTaskClause</h3>
<p>Delete a task expert.</p>
</div>
<!-- class="sect3" -->
<div class="sect3"><a id="sthref891"></a>
<h3 class="sect3">deleteTransitionClause</h3>
<p>Delete a transition.</p>
</div>
<!-- class="sect3" -->
<div class="sect3"><a id="sthref892"></a>
<h3 class="sect3">propertyNameList</h3>
<p>The list of property names.</p>
</div>
<!-- class="sect3" -->
<div class="sect3"><a id="sthref893"></a>
<h3 class="sect3">propertyValueList</h3>
<p>The list of property values being set.</p>
</div>
<!-- class="sect3" -->
<div class="sect3"><a id="sthref894"></a>
<h3 class="sect3">parameterBindingClause</h3>
<p>Bind or unbind two parameters. Note that this is setting the binding attribute of the parameter object and is not necessarily the same as the direction of data flow. The parameter to be set should be the one whose binding attribute is modified via the Object Inspector in the expert editor.</p>
</div>
<!-- class="sect3" -->
<div class="sect3"><a id="sthref895"></a>
<h3 class="sect3">collectPropertiesClause</h3>
<p>This clause sets properties for the corresponding object.</p>
</div>
<!-- class="sect3" -->
<div class="sect3"><a id="sthref896"></a>
<h3 class="sect3">parameterLocator</h3>
<p>Specify a parameter, either one of the expert or of a task.</p>
</div>
<!-- class="sect3" -->
<div class="sect3"><a id="sthref897"></a>
<h3 class="sect3">variableLocator</h3>
<p>Specify a variable in the expert.</p>
</div>
<!-- class="sect3" -->
<div class="sect3"><a id="sthref898"></a>
<h3 class="sect3">propertyValue</h3>
<p>Value of a property.</p>
</div>
<!-- class="sect3" -->
<div class="sect3"><a id="sthref899"></a>
<h3 class="sect3">EXPERT Object</h3>
<div class="tblformalwide">
<p class="titleintable"><a id="sthref900"></a><a id="sthref901"></a>Table 2-10 EXPERT Object</p>
<table class="cellalignment3038" title="EXPERT Object" summary="Object Properties" dir="ltr">
<thead>
<tr class="cellalignment3029">
<th class="cellalignment3039" id="r1c1-t11">Property</th>
<th class="cellalignment3039" id="r1c2-t11">Type</th>
<th class="cellalignment3039" id="r1c3-t11">Choices</th>
<th class="cellalignment3039" id="r1c4-t11">Min</th>
<th class="cellalignment3039" id="r1c5-t11">Max</th>
<th class="cellalignment3039" id="r1c6-t11">Default</th>
<th class="cellalignment3039" id="r1c7-t11">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3029">
<td class="cellalignment3035" id="r2c1-t11" headers="r1c1-t11">
<p>CLOSE_ASSISTANT_ON_COMPLETION</p>
</td>
<td class="cellalignment3035" headers="r2c1-t11 r1c2-t11">
<p>BOOLEAN</p>
</td>
<td class="cellalignment3035" headers="r2c1-t11 r1c3-t11">
<p>true, false</p>
</td>
<td class="cellalignment3035" headers="r2c1-t11 r1c4-t11">
<p>none</p>
</td>
<td class="cellalignment3035" headers="r2c1-t11 r1c5-t11">
<p>none</p>
</td>
<td class="cellalignment3035" headers="r2c1-t11 r1c6-t11">
<p>true</p>
</td>
<td class="cellalignment3035" headers="r2c1-t11 r1c7-t11">
<p>Sets whether the task assistant should be automatically closed after the expert has been run.</p>
</td>
</tr>
<tr class="cellalignment3029">
<td class="cellalignment3035" id="r3c1-t11" headers="r1c1-t11">
<p>CLOSE_WINDOWS_ON_EXECUTION</p>
</td>
<td class="cellalignment3035" headers="r3c1-t11 r1c2-t11">
<p>BOOLEAN</p>
</td>
<td class="cellalignment3035" headers="r3c1-t11 r1c3-t11">
<p>true, false</p>
</td>
<td class="cellalignment3035" headers="r3c1-t11 r1c4-t11">
<p>none</p>
</td>
<td class="cellalignment3035" headers="r3c1-t11 r1c5-t11">
<p>none</p>
</td>
<td class="cellalignment3035" headers="r3c1-t11 r1c6-t11">
<p>true</p>
</td>
<td class="cellalignment3035" headers="r3c1-t11 r1c7-t11">
<p>Close all open windows when this expert is run.</p>
</td>
</tr>
<tr class="cellalignment3029">
<td class="cellalignment3035" id="r4c1-t11" headers="r1c1-t11">
<p>FINISH_DIALOG_ON_COMPLETION</p>
</td>
<td class="cellalignment3035" headers="r4c1-t11 r1c2-t11">
<p>BOOLEAN</p>
</td>
<td class="cellalignment3035" headers="r4c1-t11 r1c3-t11">
<p>true, false</p>
</td>
<td class="cellalignment3035" headers="r4c1-t11 r1c4-t11">
<p>none</p>
</td>
<td class="cellalignment3035" headers="r4c1-t11 r1c5-t11">
<p>none</p>
</td>
<td class="cellalignment3035" headers="r4c1-t11 r1c6-t11">
<p>true</p>
</td>
<td class="cellalignment3035" headers="r4c1-t11 r1c7-t11">
<p>Shows the finish dialog upon completion of expert.</p>
</td>
</tr>
<tr class="cellalignment3029">
<td class="cellalignment3035" id="r5c1-t11" headers="r1c1-t11">
<p>GENERATION_COMMENTS</p>
</td>
<td class="cellalignment3035" headers="r5c1-t11 r1c2-t11">
<p>STRING</p>
</td>
<td class="cellalignment3035" headers="r5c1-t11 r1c3-t11">
<p>none</p>
</td>
<td class="cellalignment3035" headers="r5c1-t11 r1c4-t11">
<p>none</p>
</td>
<td class="cellalignment3035" headers="r5c1-t11 r1c5-t11">
<p>none</p>
</td>
<td class="cellalignment3035" headers="r5c1-t11 r1c6-t11">
<p>empty string</p>
</td>
<td class="cellalignment3035" headers="r5c1-t11 r1c7-t11">
<p>Enter additional comments for the generated code.</p>
</td>
</tr>
<tr class="cellalignment3029">
<td class="cellalignment3035" id="r6c1-t11" headers="r1c1-t11">
<p>LOGGING</p>
</td>
<td class="cellalignment3035" headers="r6c1-t11 r1c2-t11">
<p>BOOLEAN</p>
</td>
<td class="cellalignment3035" headers="r6c1-t11 r1c3-t11">
<p>true, false</p>
</td>
<td class="cellalignment3035" headers="r6c1-t11 r1c4-t11">
<p>none</p>
</td>
<td class="cellalignment3035" headers="r6c1-t11 r1c5-t11">
<p>none</p>
</td>
<td class="cellalignment3035" headers="r6c1-t11 r1c6-t11">
<p>false</p>
</td>
<td class="cellalignment3035" headers="r6c1-t11 r1c7-t11">&nbsp;</td>
</tr>
<tr class="cellalignment3029">
<td class="cellalignment3035" id="r7c1-t11" headers="r1c1-t11">
<p>MENU_ITEM_DISPLAY_STRING</p>
</td>
<td class="cellalignment3035" headers="r7c1-t11 r1c2-t11">
<p>STRING</p>
</td>
<td class="cellalignment3035" headers="r7c1-t11 r1c3-t11">
<p>none</p>
</td>
<td class="cellalignment3035" headers="r7c1-t11 r1c4-t11">
<p>none</p>
</td>
<td class="cellalignment3035" headers="r7c1-t11 r1c5-t11">
<p>none</p>
</td>
<td class="cellalignment3035" headers="r7c1-t11 r1c6-t11">
<p>empty string</p>
</td>
<td class="cellalignment3035" headers="r7c1-t11 r1c7-t11">
<p>The display string when this expert is added as a menu item.</p>
</td>
</tr>
<tr class="cellalignment3029">
<td class="cellalignment3035" id="r8c1-t11" headers="r1c1-t11">
<p>ONLY_RUN_FROM_MENU</p>
</td>
<td class="cellalignment3035" headers="r8c1-t11 r1c2-t11">
<p>BOOLEAN</p>
</td>
<td class="cellalignment3035" headers="r8c1-t11 r1c3-t11">
<p>true, false</p>
</td>
<td class="cellalignment3035" headers="r8c1-t11 r1c4-t11">
<p>none</p>
</td>
<td class="cellalignment3035" headers="r8c1-t11 r1c5-t11">
<p>none</p>
</td>
<td class="cellalignment3035" headers="r8c1-t11 r1c6-t11">
<p>false</p>
</td>
<td class="cellalignment3035" headers="r8c1-t11 r1c7-t11">
<p>Only allow this expert to be run when it is attached to a menu item.</p>
</td>
</tr>
<tr class="cellalignment3029">
<td class="cellalignment3035" id="r9c1-t11" headers="r1c1-t11">
<p>REVERT_TO_SAVED_ON_ERROR</p>
</td>
<td class="cellalignment3035" headers="r9c1-t11 r1c2-t11">
<p>BOOLEAN</p>
</td>
<td class="cellalignment3035" headers="r9c1-t11 r1c3-t11">
<p>true, false</p>
</td>
<td class="cellalignment3035" headers="r9c1-t11 r1c4-t11">
<p>none</p>
</td>
<td class="cellalignment3035" headers="r9c1-t11 r1c5-t11">
<p>none</p>
</td>
<td class="cellalignment3035" headers="r9c1-t11 r1c6-t11">
<p>false</p>
</td>
<td class="cellalignment3035" headers="r9c1-t11 r1c7-t11">
<p>Revert to saved metadata if error occurs when the expert is run.</p>
</td>
</tr>
<tr class="cellalignment3029">
<td class="cellalignment3035" id="r10c1-t11" headers="r1c1-t11">
<p>RUN_STANDALONE</p>
</td>
<td class="cellalignment3035" headers="r10c1-t11 r1c2-t11">
<p>BOOLEAN</p>
</td>
<td class="cellalignment3035" headers="r10c1-t11 r1c3-t11">
<p>true, false</p>
</td>
<td class="cellalignment3035" headers="r10c1-t11 r1c4-t11">
<p>none</p>
</td>
<td class="cellalignment3035" headers="r10c1-t11 r1c5-t11">
<p>none</p>
</td>
<td class="cellalignment3035" headers="r10c1-t11 r1c6-t11">
<p>true</p>
</td>
<td class="cellalignment3035" headers="r10c1-t11 r1c7-t11">
<p>Sets whether the expert should be run as a standalone in expert assistant mode or not.</p>
</td>
</tr>
<tr class="cellalignment3029">
<td class="cellalignment3035" id="r11c1-t11" headers="r1c1-t11">
<p>SAVE_ALL_BEFORE_START</p>
</td>
<td class="cellalignment3035" headers="r11c1-t11 r1c2-t11">
<p>BOOLEAN</p>
</td>
<td class="cellalignment3035" headers="r11c1-t11 r1c3-t11">
<p>true, false</p>
</td>
<td class="cellalignment3035" headers="r11c1-t11 r1c4-t11">
<p>none</p>
</td>
<td class="cellalignment3035" headers="r11c1-t11 r1c5-t11">
<p>none</p>
</td>
<td class="cellalignment3035" headers="r11c1-t11 r1c6-t11">
<p>false</p>
</td>
<td class="cellalignment3035" headers="r11c1-t11 r1c7-t11">
<p>Save all metadata before running the expert.</p>
</td>
</tr>
<tr class="cellalignment3029">
<td class="cellalignment3035" id="r12c1-t11" headers="r1c1-t11">
<p>SHOW_BUSY_DIALOG</p>
</td>
<td class="cellalignment3035" headers="r12c1-t11 r1c2-t11">
<p>BOOLEAN</p>
</td>
<td class="cellalignment3035" headers="r12c1-t11 r1c3-t11">
<p>true, false</p>
</td>
<td class="cellalignment3035" headers="r12c1-t11 r1c4-t11">
<p>none</p>
</td>
<td class="cellalignment3035" headers="r12c1-t11 r1c5-t11">
<p>none</p>
</td>
<td class="cellalignment3035" headers="r12c1-t11 r1c6-t11">
<p>true</p>
</td>
<td class="cellalignment3035" headers="r12c1-t11 r1c7-t11">
<p>Sets whether busy dialog should be shown when OMB or Java tasks are executed in non-standalone mode.</p>
</td>
</tr>
<tr class="cellalignment3029">
<td class="cellalignment3035" id="r13c1-t11" headers="r1c1-t11">
<p>SHOW_LOG_WINDOW</p>
</td>
<td class="cellalignment3035" headers="r13c1-t11 r1c2-t11">
<p>BOOLEAN</p>
</td>
<td class="cellalignment3035" headers="r13c1-t11 r1c3-t11">
<p>true, false</p>
</td>
<td class="cellalignment3035" headers="r13c1-t11 r1c4-t11">
<p>none</p>
</td>
<td class="cellalignment3035" headers="r13c1-t11 r1c5-t11">
<p>none</p>
</td>
<td class="cellalignment3035" headers="r13c1-t11 r1c6-t11">
<p>false</p>
</td>
<td class="cellalignment3035" headers="r13c1-t11 r1c7-t11">
<p>Sets whether the log window should be shown when running the expert.</p>
</td>
</tr>
<tr class="cellalignment3029">
<td class="cellalignment3035" id="r14c1-t11" headers="r1c1-t11">
<p>SHOW_PROGRESS_GRAPH</p>
</td>
<td class="cellalignment3035" headers="r14c1-t11 r1c2-t11">
<p>BOOLEAN</p>
</td>
<td class="cellalignment3035" headers="r14c1-t11 r1c3-t11">
<p>true, false</p>
</td>
<td class="cellalignment3035" headers="r14c1-t11 r1c4-t11">
<p>none</p>
</td>
<td class="cellalignment3035" headers="r14c1-t11 r1c5-t11">
<p>none</p>
</td>
<td class="cellalignment3035" headers="r14c1-t11 r1c6-t11">
<p>true</p>
</td>
<td class="cellalignment3035" headers="r14c1-t11 r1c7-t11">
<p>Sets whether the progress graph dialog should be shown when running the expert.</p>
</td>
</tr>
<tr class="cellalignment3029">
<td class="cellalignment3035" id="r15c1-t11" headers="r1c1-t11">
<p>SHOW_TASK_ASSISTANT</p>
</td>
<td class="cellalignment3035" headers="r15c1-t11 r1c2-t11">
<p>BOOLEAN</p>
</td>
<td class="cellalignment3035" headers="r15c1-t11 r1c3-t11">
<p>true, false</p>
</td>
<td class="cellalignment3035" headers="r15c1-t11 r1c4-t11">
<p>none</p>
</td>
<td class="cellalignment3035" headers="r15c1-t11 r1c5-t11">
<p>none</p>
</td>
<td class="cellalignment3035" headers="r15c1-t11 r1c6-t11">
<p>true</p>
</td>
<td class="cellalignment3035" headers="r15c1-t11 r1c7-t11">
<p>Sets whether the task assistant should be shown when running the expert.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformalwide" --></div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<div class="sect2"><a id="sthref902"></a>
<h2 class="sect2">See Also</h2>
<p><a href="chap1001.htm#EEFFEFAD">OMBALTER</a></p>
<p><a href="chap7010.htm#EFDCCGBE">OMBCREATE EXPERT</a></p>
<p><a href="chap19001.htm#ABFABFHC">OMBRETRIEVE EXPERT</a></p>
<p><a href="chap12017.htm#FGCHGGAG">OMBDROP EXPERT</a></p>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment3028">
<tr>
<td class="cellalignment3035">
<table class="cellalignment3033">
<tr>
<td class="cellalignment3032"><a href="chap2012.htm"><img width="24" height="24" src="../../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment3032"><a href="chap2014.htm"><img width="24" height="24" src="../../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;2009,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment3037">
<table class="cellalignment3031">
<tr>
<td class="cellalignment3032"><a href="../../index.htm"><img width="24" height="24" src="../../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment3032"><a href="../../nav/portal_booklist.htm"><img width="24" height="24" src="../../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment3032"><a href="toc.htm"><img width="24" height="24" src="../../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment3032"><a href="../../nav/mindx.htm"><img width="24" height="24" src="../../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment3032"><a href="../../dcommon/html/feedback.htm"><img width="24" height="24" src="../../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>
</body>
</html>
