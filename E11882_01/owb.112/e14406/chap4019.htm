<!DOCTYPE html>
<html lang="en" >
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1">
<meta charset="utf-8">
<title>OMBALTER TABLE_FUNCTION</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Version 5.1.1 Build 007" />
<meta name="dcterms.created" content="2009-08-03T19:2:20Z" />
<meta name="robots" content="all" />
<meta name="dcterms.title" content="Warehouse Builder OMB*Plus Command Reference" />
<meta name="dcterms.identifier" content="E14406-01" />
<meta name="dcterms.isVersionOf" content="WBREF" />
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;2009,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved." />
<link rel="Start" href="../../index.htm" title="Home" type="text/html" />
<link rel="Copyright" href="../../dcommon/html/cpyr.htm" title="Copyright" type="text/html" />

<script type="application/javascript"  src="../../dcommon/js/headfoot.js"></script>
<script type="application/javascript"  src="../../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html" />
<link rel="Prev" href="chap4018.htm" title="Previous" type="text/html" />
<link rel="Next" href="chap4020.htm" title="Next" type="text/html" />
<link rel="schema.dcterms" href="http://purl.org/dc/terms/" />
<link rel="stylesheet" href="../../dcommon/css/fusiondoc.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/header.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/footer.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/fonts.css">
<link rel="stylesheet" href="../../dcommon/css/foundation.css">
<link rel="stylesheet" href="../../dcommon/css/codemirror.css">
<link rel="stylesheet" type="text/css" title="Default" href="../../nav/css/html5.css">
<link rel="stylesheet" href="../../dcommon/css/respond-480-tablet.css">
<link rel="stylesheet" href="../../dcommon/css/respond-768-laptop.css">
<link rel="stylesheet" href="../../dcommon/css/respond-1140-deskop.css">
<script type="application/javascript" src="../../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">90/513</span> <!-- End Header --><a id="ADAGBEBH"></a><a id="WBREF1810"></a>
<div class="sect1">
<h1 class="sect1">OMBALTER TABLE_FUNCTION</h1>
<div class="sect2"><a id="sthref2709"></a>
<h2 class="sect2">Purpose</h2>
<p>Alter the Table Function by renaming it, and/or reset its properties, and/or resetting its Ordered/Partitioned fields, and/or adding Parameters.</p>
</div>
<!-- class="sect2" -->
<div class="sect2"><a id="sthref2710"></a>
<h2 class="sect2">Prerequisites</h2>
<p>Should be in the context of Oracle Module or Package. The REFCursorType and PLSQLTableType which are set as Datatype for parameters should pre-exist in corresponding Package.</p>
</div>
<!-- class="sect2" -->
<div class="sect2"><a id="sthref2711"></a>
<h2 class="sect2">Syntax</h2>
<pre>
alterFunctionCommand =  OMBALTER ( FUNCTION "QUOTED_STRING" ( 
          "renameClause" [ "alterPropertiesOrIconSetClause" ] [ 
          "alterFuncProcParameterImplementationSCOClause" ] | 
          "alterPropertiesOrIconSetClause" [ 
          "alterFuncProcParameterImplementationSCOClause" ] | 
          "alterFuncProcParameterImplementationSCOClause" | 
          "alterFunctionCodeTemplateClause" ) )
     renameClause =  RENAME TO "QUOTED_STRING"
     alterPropertiesOrIconSetClause =  SET ( "setPropertiesClause" [ SET 
          "setReferenceIconSetClause" | UNSET "unsetReferenceIconSetClause" ] | 
          "setReferenceIconSetClause" ) | UNSET "unsetReferenceIconSetClause"
     alterFuncProcParameterImplementationSCOClause =  ( ADD ( 
          "alterFuncProcParameterClause" | "addRelationalDependentClause" | 
          "addFuncImplementationClause" ) | MODIFY ( 
          "modifyFuncProcParameterClause" | "modifyFuncProcImplementationClause"
           ) | DELETE ( "deleteFuncProcParameterClause" | 
          "deleteRelationalDependentClause" | 
          "deleteFuncProcImplementationClause" ) ) [ 
          "alterFuncProcParameterImplementationSCOClause" ]
     alterFunctionCodeTemplateClause =  SET "setFunctionCodeTemplateClause" | 
          UNSET "unsetFunctionCodeTemplateClause"
     setPropertiesClause =  PROPERTIES "(" "propertyNameList" ")" VALUES "(" 
          "propertyValueList" ")"
     setReferenceIconSetClause =  ( REFERENCE | REF ) ICONSET "QUOTED_STRING"
     unsetReferenceIconSetClause =  ( REFERENCE | REF ) ICONSET
     alterFuncProcParameterClause =  PARAMETER "QUOTED_STRING" [ AT POSITION 
          "INTEGER_LITERAL" ] [ SET "setPropertiesClause" ]
     addRelationalDependentClause =  ( REFERENCE | REF ) ( TABLE | VIEW | 
          MATERIALIZED_VIEW | SEQUENCE | FUNCTION | PROCEDURE | PACKAGE ) 
          "QUOTED_STRING"
     addFuncImplementationClause =  FUNCTION_IMPLEMENTATION "QUOTED_STRING" [ 
          SET "setFuncImplPropertiesClause" ]
     modifyFuncProcParameterClause =  ( PARAMETER "QUOTED_STRING" ( 
          "renameClause" | "moveToClause" | [ SET "setPropertiesClause" ] ) )
     modifyFuncProcImplementationClause =  ( FUNCTION_IMPLEMENTATION 
          "QUOTED_STRING" ( "renameClause" [ SET "setFuncImplPropertiesClause" ]
           | [ SET "setFuncImplPropertiesClause" ] ) )
     deleteFuncProcParameterClause =  ( PARAMETER "QUOTED_STRING" )
     deleteRelationalDependentClause =  ( REFERENCE | REF ) ( TABLE | VIEW | 
          MATERIALIZED_VIEW | SEQUENCE | FUNCTION | PROCEDURE | PACKAGE ) 
          "QUOTED_STRING"
     deleteFuncProcImplementationClause =  ( FUNCTION_IMPLEMENTATION 
          "QUOTED_STRING" )
     setFunctionCodeTemplateClause =  ( REFERENCE | REF ) CODE_TEMPLATE 
          "QUOTED_STRING" FOR PLATFORM "QUOTED_STRING" | ( ( REFERENCE | REF ) 
          CODE_TEMPLATE FOR PLATFORM "QUOTED_STRING" OPTIONS "(" 
          "propertyNameList" ")" VALUES "(" "propertyValueList" ")" )
     unsetFunctionCodeTemplateClause =  ( REFERENCE | REF ) CODE_TEMPLATES | ( 
          REFERENCE | REF ) CODE_TEMPLATE FOR PLATFORM "QUOTED_STRING"
     propertyNameList =  "UNQUOTED_STRING" { "," "UNQUOTED_STRING" }
     propertyValueList =  "propertyValue" { "," "propertyValue" }
     setFuncImplPropertiesClause =  PROPERTIES "(" "propertyNameList" ")" VALUES
           "(" "propertyValueList" ")"
     moveToClause =  MOVE TO POSITION "INTEGER_LITERAL"
     propertyValue =  ( "QUOTED_STRING" | "INTEGER_LITERAL" | 
          "FLOATING_POINT_LITERAL" )
</pre></div>
<!-- class="sect2" -->
<div class="sect2"><a id="sthref2712"></a>
<h2 class="sect2">Parameters</h2>
<div class="sect3"><a id="sthref2713"></a>
<h3 class="sect3">alterFunctionCommand</h3>
<p>Alters a Table Function</p>
</div>
<!-- class="sect3" -->
<div class="sect3"><a id="sthref2714"></a>
<h3 class="sect3">renameClause</h3>
<p>Rename a Table Function</p>
</div>
<!-- class="sect3" -->
<div class="sect3"><a id="sthref2715"></a>
<h3 class="sect3">alterPropertiesOrIconSetClause</h3>
<p>Alter table function properties or icon set.</p>
</div>
<!-- class="sect3" -->
<div class="sect3"><a id="sthref2716"></a>
<h3 class="sect3">alterFuncProcParameterImplementationSCOClause</h3>
<p>Used to alter, modify or delete table function parameter, implementation or dependency.</p>
</div>
<!-- class="sect3" -->
<div class="sect3"><a id="sthref2717"></a>
<h3 class="sect3">setPropertiesClause</h3>
<p>Associate a set of properties with a Table Function.</p>
</div>
<!-- class="sect3" -->
<div class="sect3"><a id="sthref2718"></a>
<h3 class="sect3">setPropertiesClause</h3>
<pre>
Properties for TABLE_FUNCTION: 
Name: BUSINESS_NAME
Type: STRING(200)
Valid Values: Any valid character string in supported character set.
Default: Empty string
Business name of the Table Function 

Name: DESCRIPTION
Type: STRING(4000)
Valid Values: Any valid character string in supported character set.
Default: Empty string
Description of the Table Function 

Name: PARALLEL_EXECUTION
Type: STRING(5)
Valid Values: TRUE, FALSE
Default: Empty string
Enables Parallel Execution of the Table Function

Name: PIPELINED_EXECUTION
Type: STRING(5)
Valid Values: TRUE, FALSE
Default: Empty string
Enables Partitioned Execution of the Table Function

Name: ORDER_METHOD
Type: STRING(9)
Valid Values: ORDERBY, CLUSTERBY
Default: ORDERBY
Order Method for the Table Function

Name: PARTITION_METHOD
Type: STRING(5)
Valid Values: NONE, ANY, HASH, RANGE
Default: NONE
Partition Method for the Table Function

Name: RETURN_TYPE
Type: STRING(4000)
Valid Values: Any valid character string in supported character set.
Default: Empty string
Name of the Return Type of this Table Function. For this release, this has to be a PLSQL Table Type whose datatype has to be PLSQLRecordType. Also, it should already be defined in USER_TYPES Package in this Module. 

Name: IMPLEMENTATION
Type: STRING(4000)
Valid Values: Any valid character string in supported character set.
Default: Empty string
Implementation code for this Table Function.

Name: IS_DETERMINISTIC
Type: STRING(5)
Valid Values: TRUE, FALSE
Default: Empty string
Whether this Table Function is Deterministic.

Properties for PARAMETER:

Name: BUSINESS_NAME
Type: STRING(200)
Valid Values: Any valid character string in supported character set.
Default: Empty string
Business name of the Parameter

Name: DESCRIPTION
Type: STRING(4000)
Valid Values: Any valid character string in supported character set.
Default: Empty string
Description of the Parameter

Name: DATATYPE
Type: STRING(4000)
Valid Values: Any valid REF cursor type
Default: Empty string
Datatype of the Parameter. Parameter will always be IN type for Table Function. For this release, it has to be a REF Cursor type. Also, this REF Cursor should already be defined in USER_TYPES Package in this Module.
</pre></div>
<!-- class="sect3" -->
<div class="sect3"><a id="sthref2719"></a>
<h3 class="sect3">setReferenceIconSetClause</h3>
<p>Used to set reference icon set to table function.</p>
</div>
<!-- class="sect3" -->
<div class="sect3"><a id="sthref2720"></a>
<h3 class="sect3">unsetReferenceIconSetClause</h3>
<p>Used to unset reference icon set to table function.</p>
</div>
<!-- class="sect3" -->
<div class="sect3"><a id="sthref2721"></a>
<h3 class="sect3">alterFuncProcParameterClause</h3>
<p>Alter the parameters of a table function, including adding, dropping parameters, changing their direction, datatype and default values.</p>
</div>
<!-- class="sect3" -->
<div class="sect3"><a id="sthref2722"></a>
<h3 class="sect3">addRelationalDependentClause</h3>
<p>This clause adds referential dependencies to other relational objects.</p>
</div>
<!-- class="sect3" -->
<div class="sect3"><a id="sthref2723"></a>
<h3 class="sect3">addFuncImplementationClause</h3>
<p>Used to add implementation to table function.</p>
</div>
<!-- class="sect3" -->
<div class="sect3"><a id="sthref2724"></a>
<h3 class="sect3">modifyFuncProcParameterClause</h3>
<p>Modify one or more Parameters to this Function/Procedure.</p>
</div>
<!-- class="sect3" -->
<div class="sect3"><a id="sthref2725"></a>
<h3 class="sect3">modifyFuncProcImplementationClause</h3>
<p>Used to modify table function implementation.</p>
</div>
<!-- class="sect3" -->
<div class="sect3"><a id="sthref2726"></a>
<h3 class="sect3">deleteFuncProcParameterClause</h3>
<p>Delete one or more Parameters to this Function/Procedure.</p>
</div>
<!-- class="sect3" -->
<div class="sect3"><a id="sthref2727"></a>
<h3 class="sect3">deleteRelationalDependentClause</h3>
<p>This clause deletes referential dependencies to other relational objects.</p>
</div>
<!-- class="sect3" -->
<div class="sect3"><a id="sthref2728"></a>
<h3 class="sect3">deleteFuncProcImplementationClause</h3>
<p>Used to delete a table function implementation.</p>
</div>
<!-- class="sect3" -->
<div class="sect3"><a id="sthref2729"></a>
<h3 class="sect3">propertyNameList</h3>
<p>Comma separated list of property names. Property names are unquoted.</p>
</div>
<!-- class="sect3" -->
<div class="sect3"><a id="sthref2730"></a>
<h3 class="sect3">propertyValueList</h3>
<p>Comma separated list of property values.</p>
</div>
<!-- class="sect3" -->
<div class="sect3"><a id="sthref2731"></a>
<h3 class="sect3">setFuncImplPropertiesClause</h3>
<p>Used to set table function implementation properties.</p>
</div>
<!-- class="sect3" -->
<div class="sect3"><a id="sthref2732"></a>
<h3 class="sect3">moveToClause</h3>
<p>Move a Parameters of this Function/Procedure.</p>
</div>
<!-- class="sect3" -->
<div class="sect3"><a id="sthref2733"></a>
<h3 class="sect3">propertyValue</h3>
<p>Value of a property.</p>
</div>
<!-- class="sect3" -->
<div class="sect3"><a id="sthref2734"></a>
<h3 class="sect3">TABLE_FUNCTION Object</h3>
<div class="tblformalwide">
<p class="titleintable"><a id="sthref2735"></a><a id="sthref2736"></a>Table 4-62 TABLE_FUNCTION Object</p>
<table class="cellalignment3038" title="TABLE_FUNCTION Object" summary="Object Properties" dir="ltr">
<thead>
<tr class="cellalignment3029">
<th class="cellalignment3039" id="r1c1-t63">Property</th>
<th class="cellalignment3039" id="r1c2-t63">Type</th>
<th class="cellalignment3039" id="r1c3-t63">Choices</th>
<th class="cellalignment3039" id="r1c4-t63">Min</th>
<th class="cellalignment3039" id="r1c5-t63">Max</th>
<th class="cellalignment3039" id="r1c6-t63">Default</th>
<th class="cellalignment3039" id="r1c7-t63">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment3029">
<td class="cellalignment3035" id="r2c1-t63" headers="r1c1-t63">
<p>AUTHID</p>
</td>
<td class="cellalignment3035" headers="r2c1-t63 r1c2-t63">
<p>STRING</p>
</td>
<td class="cellalignment3035" headers="r2c1-t63 r1c3-t63">
<p>, CURRENT_USER, DEFINER</p>
</td>
<td class="cellalignment3035" headers="r2c1-t63 r1c4-t63">
<p>none</p>
</td>
<td class="cellalignment3035" headers="r2c1-t63 r1c5-t63">
<p>none</p>
</td>
<td class="cellalignment3035" headers="r2c1-t63 r1c6-t63">
<p>empty string</p>
</td>
<td class="cellalignment3035" headers="r2c1-t63 r1c7-t63">
<p>Generate the transformation with selected AUTHID option. The function will be executed with the permissions defined by the AUTHID clause instead of the function owner's permissions.</p>
</td>
</tr>
<tr class="cellalignment3029">
<td class="cellalignment3035" id="r3c1-t63" headers="r1c1-t63">
<p>CALLED_ON_NULL_INPUT</p>
</td>
<td class="cellalignment3035" headers="r3c1-t63 r1c2-t63">
<p>STRING</p>
</td>
<td class="cellalignment3035" headers="r3c1-t63 r1c3-t63">
<p>, CALLED ON NULL INPUT</p>
</td>
<td class="cellalignment3035" headers="r3c1-t63 r1c4-t63">
<p>none</p>
</td>
<td class="cellalignment3035" headers="r3c1-t63 r1c5-t63">
<p>none</p>
</td>
<td class="cellalignment3035" headers="r3c1-t63 r1c6-t63">
<p>empty string</p>
</td>
<td class="cellalignment3035" headers="r3c1-t63 r1c7-t63">
<p>Specifies that the function is called regardless of whether any of its arguments are null. It can return a null value or a non-null value.</p>
</td>
</tr>
<tr class="cellalignment3029">
<td class="cellalignment3035" id="r4c1-t63" headers="r1c1-t63">
<p>DEPLOYABLE</p>
</td>
<td class="cellalignment3035" headers="r4c1-t63 r1c2-t63">
<p>BOOLEAN</p>
</td>
<td class="cellalignment3035" headers="r4c1-t63 r1c3-t63">
<p>true, false</p>
</td>
<td class="cellalignment3035" headers="r4c1-t63 r1c4-t63">
<p>none</p>
</td>
<td class="cellalignment3035" headers="r4c1-t63 r1c5-t63">
<p>none</p>
</td>
<td class="cellalignment3035" headers="r4c1-t63 r1c6-t63">
<p>true</p>
</td>
<td class="cellalignment3035" headers="r4c1-t63 r1c7-t63">
<p>Warehouse Builder generates a set of scripts to create an object only for those object marked as Deployable = true</p>
</td>
</tr>
<tr class="cellalignment3029">
<td class="cellalignment3035" id="r5c1-t63" headers="r1c1-t63">
<p>DETERMINISTIC_STATE</p>
</td>
<td class="cellalignment3035" headers="r5c1-t63 r1c2-t63">
<p>STRING</p>
</td>
<td class="cellalignment3035" headers="r5c1-t63 r1c3-t63">
<p>, DETERMINISTIC, NOT DETERMINISTIC</p>
</td>
<td class="cellalignment3035" headers="r5c1-t63 r1c4-t63">
<p>none</p>
</td>
<td class="cellalignment3035" headers="r5c1-t63 r1c5-t63">
<p>none</p>
</td>
<td class="cellalignment3035" headers="r5c1-t63 r1c6-t63">
<p>empty string</p>
</td>
<td class="cellalignment3035" headers="r5c1-t63 r1c7-t63">
<p>Specifies that the function returns the same result every time, for a given set of inputs.</p>
</td>
</tr>
<tr class="cellalignment3029">
<td class="cellalignment3035" id="r6c1-t63" headers="r1c1-t63">
<p>ENCRYPTION</p>
</td>
<td class="cellalignment3035" headers="r6c1-t63 r1c2-t63">
<p>STRING</p>
</td>
<td class="cellalignment3035" headers="r6c1-t63 r1c3-t63">
<p>, ENCRYPTION</p>
</td>
<td class="cellalignment3035" headers="r6c1-t63 r1c4-t63">
<p>none</p>
</td>
<td class="cellalignment3035" headers="r6c1-t63 r1c5-t63">
<p>none</p>
</td>
<td class="cellalignment3035" headers="r6c1-t63 r1c6-t63">
<p>empty string</p>
</td>
<td class="cellalignment3035" headers="r6c1-t63 r1c7-t63">
<p>Specifies whether the function body will be encrypted when the function is created.</p>
</td>
</tr>
<tr class="cellalignment3029">
<td class="cellalignment3035" id="r7c1-t63" headers="r1c1-t63">
<p>EXECUTE_AS</p>
</td>
<td class="cellalignment3035" headers="r7c1-t63 r1c2-t63">
<p>STRING</p>
</td>
<td class="cellalignment3035" headers="r7c1-t63 r1c3-t63">
<p>, EXECUTE AS CALLER, EXECUTE AS OWNER, EXECUTE AS SELF</p>
</td>
<td class="cellalignment3035" headers="r7c1-t63 r1c4-t63">
<p>none</p>
</td>
<td class="cellalignment3035" headers="r7c1-t63 r1c5-t63">
<p>none</p>
</td>
<td class="cellalignment3035" headers="r7c1-t63 r1c6-t63">
<p>empty string</p>
</td>
<td class="cellalignment3035" headers="r7c1-t63 r1c7-t63">
<p>Generate the transformation with selected EXECUTE AS option. Function will be executed with the permissions defined by the EXECUTE AS clause rather than the function owner's permissions.</p>
</td>
</tr>
<tr class="cellalignment3029">
<td class="cellalignment3035" id="r8c1-t63" headers="r1c1-t63">
<p>EXTERNAL_ACTION</p>
</td>
<td class="cellalignment3035" headers="r8c1-t63 r1c2-t63">
<p>STRING</p>
</td>
<td class="cellalignment3035" headers="r8c1-t63 r1c3-t63">
<p>, EXTERNAL ACTION, NO EXTERNAL ACTION</p>
</td>
<td class="cellalignment3035" headers="r8c1-t63 r1c4-t63">
<p>none</p>
</td>
<td class="cellalignment3035" headers="r8c1-t63 r1c5-t63">
<p>none</p>
</td>
<td class="cellalignment3035" headers="r8c1-t63 r1c6-t63">
<p>empty string</p>
</td>
<td class="cellalignment3035" headers="r8c1-t63 r1c7-t63">
<p>Specifies that the function takes some action that changes the state of an object not managed by the database manager, such as reading or writing a file in the OS-managed folders.</p>
</td>
</tr>
<tr class="cellalignment3029">
<td class="cellalignment3035" id="r9c1-t63" headers="r1c1-t63">
<p>GENERATION_COMMENTS</p>
</td>
<td class="cellalignment3035" headers="r9c1-t63 r1c2-t63">
<p>STRING</p>
</td>
<td class="cellalignment3035" headers="r9c1-t63 r1c3-t63">
<p>none</p>
</td>
<td class="cellalignment3035" headers="r9c1-t63 r1c4-t63">
<p>none</p>
</td>
<td class="cellalignment3035" headers="r9c1-t63 r1c5-t63">
<p>none</p>
</td>
<td class="cellalignment3035" headers="r9c1-t63 r1c6-t63">
<p>empty string</p>
</td>
<td class="cellalignment3035" headers="r9c1-t63 r1c7-t63">
<p>Enter additional comments for the generated code.</p>
</td>
</tr>
<tr class="cellalignment3029">
<td class="cellalignment3035" id="r10c1-t63" headers="r1c1-t63">
<p>INHERIT_ISOLATION_LEVEL</p>
</td>
<td class="cellalignment3035" headers="r10c1-t63 r1c2-t63">
<p>STRING</p>
</td>
<td class="cellalignment3035" headers="r10c1-t63 r1c3-t63">
<p>, INHERIT ISOLATION LEVEL WITH LOCK REQUEST, INHERIT ISOLATION LEVEL WITHOUT LOCK REQUEST</p>
</td>
<td class="cellalignment3035" headers="r10c1-t63 r1c4-t63">
<p>none</p>
</td>
<td class="cellalignment3035" headers="r10c1-t63 r1c5-t63">
<p>none</p>
</td>
<td class="cellalignment3035" headers="r10c1-t63 r1c6-t63">
<p>empty string</p>
</td>
<td class="cellalignment3035" headers="r10c1-t63 r1c7-t63">
<p>Specifies whether or not a lock request can be associated with the isolation-clause of the statement when the function inherits the isolation level of the statement that invokes the function. The default is INHERIT ISOLATION LEVEL WITHOUT LOCK REQUEST.</p>
</td>
</tr>
<tr class="cellalignment3029">
<td class="cellalignment3035" id="r11c1-t63" headers="r1c1-t63">
<p>INHERIT_SPECIAL_REGISTERS</p>
</td>
<td class="cellalignment3035" headers="r11c1-t63 r1c2-t63">
<p>STRING</p>
</td>
<td class="cellalignment3035" headers="r11c1-t63 r1c3-t63">
<p>, INHERIT SPECIAL REGISTERS</p>
</td>
<td class="cellalignment3035" headers="r11c1-t63 r1c4-t63">
<p>none</p>
</td>
<td class="cellalignment3035" headers="r11c1-t63 r1c5-t63">
<p>none</p>
</td>
<td class="cellalignment3035" headers="r11c1-t63 r1c6-t63">
<p>empty string</p>
</td>
<td class="cellalignment3035" headers="r11c1-t63 r1c7-t63">
<p>Specifies that the function will inherit all the special registers from the invoking statement.</p>
</td>
</tr>
<tr class="cellalignment3029">
<td class="cellalignment3035" id="r12c1-t63" headers="r1c1-t63">
<p>IS_DETERMINISTIC</p>
</td>
<td class="cellalignment3035" headers="r12c1-t63 r1c2-t63">
<p>STRING</p>
</td>
<td class="cellalignment3035" headers="r12c1-t63 r1c3-t63">
<p>, DETERMINISTIC</p>
</td>
<td class="cellalignment3035" headers="r12c1-t63 r1c4-t63">
<p>none</p>
</td>
<td class="cellalignment3035" headers="r12c1-t63 r1c5-t63">
<p>none</p>
</td>
<td class="cellalignment3035" headers="r12c1-t63 r1c6-t63">
<p>empty string</p>
</td>
<td class="cellalignment3035" headers="r12c1-t63 r1c7-t63">
<p>Optimization hint that specifies that the function returns the same result every time for a given set of arguments. If the function is called with the same arguments multiple times, then the optimizer may re-use the previous result.</p>
</td>
</tr>
<tr class="cellalignment3029">
<td class="cellalignment3035" id="r13c1-t63" headers="r1c1-t63">
<p>IS_PARALLEL_ENABLE</p>
</td>
<td class="cellalignment3035" headers="r13c1-t63 r1c2-t63">
<p>STRING</p>
</td>
<td class="cellalignment3035" headers="r13c1-t63 r1c3-t63">
<p>, PARALLEL_ENABLE</p>
</td>
<td class="cellalignment3035" headers="r13c1-t63 r1c4-t63">
<p>none</p>
</td>
<td class="cellalignment3035" headers="r13c1-t63 r1c5-t63">
<p>none</p>
</td>
<td class="cellalignment3035" headers="r13c1-t63 r1c6-t63">
<p>empty string</p>
</td>
<td class="cellalignment3035" headers="r13c1-t63 r1c7-t63">
<p>Optimization hint, instructing Oracle to execute the function in parallel whenever called from within a SQL query.</p>
</td>
</tr>
<tr class="cellalignment3029">
<td class="cellalignment3035" id="r14c1-t63" headers="r1c1-t63">
<p>LANGUAGE_SQL</p>
</td>
<td class="cellalignment3035" headers="r14c1-t63 r1c2-t63">
<p>STRING</p>
</td>
<td class="cellalignment3035" headers="r14c1-t63 r1c3-t63">
<p>, LANGUAGE SQL</p>
</td>
<td class="cellalignment3035" headers="r14c1-t63 r1c4-t63">
<p>none</p>
</td>
<td class="cellalignment3035" headers="r14c1-t63 r1c5-t63">
<p>none</p>
</td>
<td class="cellalignment3035" headers="r14c1-t63 r1c6-t63">
<p>empty string</p>
</td>
<td class="cellalignment3035" headers="r14c1-t63 r1c7-t63">
<p>This Optional clause indicates that the function is written in SQL PL. This is the default option, to satisfy SQL99 requirements.</p>
</td>
</tr>
<tr class="cellalignment3029">
<td class="cellalignment3035" id="r15c1-t63" headers="r1c1-t63">
<p>PARAMETER_CCSID</p>
</td>
<td class="cellalignment3035" headers="r15c1-t63 r1c2-t63">
<p>STRING</p>
</td>
<td class="cellalignment3035" headers="r15c1-t63 r1c3-t63">
<p>, PARAMETER CCSID ASCII, PARAMETER CCSID UNICODE</p>
</td>
<td class="cellalignment3035" headers="r15c1-t63 r1c4-t63">
<p>none</p>
</td>
<td class="cellalignment3035" headers="r15c1-t63 r1c5-t63">
<p>none</p>
</td>
<td class="cellalignment3035" headers="r15c1-t63 r1c6-t63">
<p>empty string</p>
</td>
<td class="cellalignment3035" headers="r15c1-t63 r1c7-t63">
<p>Specifies the encoding scheme to use for all string data passed into and out of the function. If the PARAMETER CCSID clause is not specified, the default is PARAMETER CCSID UNICODE for Unicode databases, and PARAMETER CCSID ASCII for all other databases.</p>
</td>
</tr>
<tr class="cellalignment3029">
<td class="cellalignment3035" id="r16c1-t63" headers="r1c1-t63">
<p>PRAGMA_AUTONOMOUS_TRANSACTION</p>
</td>
<td class="cellalignment3035" headers="r16c1-t63 r1c2-t63">
<p>STRING</p>
</td>
<td class="cellalignment3035" headers="r16c1-t63 r1c3-t63">
<p>, PRAGMA AUTONOMOUS_TRANSACTION</p>
</td>
<td class="cellalignment3035" headers="r16c1-t63 r1c4-t63">
<p>none</p>
</td>
<td class="cellalignment3035" headers="r16c1-t63 r1c5-t63">
<p>none</p>
</td>
<td class="cellalignment3035" headers="r16c1-t63 r1c6-t63">
<p>empty string</p>
</td>
<td class="cellalignment3035" headers="r16c1-t63 r1c7-t63">
<p>Instructs the PL/SQL compiler to mark the function as independent, which allows the function to suspend the main transaction.</p>
</td>
</tr>
<tr class="cellalignment3029">
<td class="cellalignment3035" id="r17c1-t63" headers="r1c1-t63">
<p>SCHEMABINDING</p>
</td>
<td class="cellalignment3035" headers="r17c1-t63 r1c2-t63">
<p>STRING</p>
</td>
<td class="cellalignment3035" headers="r17c1-t63 r1c3-t63">
<p>, SCHEMABINDING</p>
</td>
<td class="cellalignment3035" headers="r17c1-t63 r1c4-t63">
<p>none</p>
</td>
<td class="cellalignment3035" headers="r17c1-t63 r1c5-t63">
<p>none</p>
</td>
<td class="cellalignment3035" headers="r17c1-t63 r1c6-t63">
<p>empty string</p>
</td>
<td class="cellalignment3035" headers="r17c1-t63 r1c7-t63">
<p>Specifies that the function is bound to the database objects that it references (that is, they cannot be dropped or modified). This condition will prevent changes to the function if other schema-bound objects are referencing it. If a function is created with SCHEMABINDING, then the function is a deterministic function.</p>
</td>
</tr>
<tr class="cellalignment3029">
<td class="cellalignment3035" id="r18c1-t63" headers="r1c1-t63">
<p>SPECIFIC</p>
</td>
<td class="cellalignment3035" headers="r18c1-t63 r1c2-t63">
<p>STRING</p>
</td>
<td class="cellalignment3035" headers="r18c1-t63 r1c3-t63">
<p>none</p>
</td>
<td class="cellalignment3035" headers="r18c1-t63 r1c4-t63">
<p>none</p>
</td>
<td class="cellalignment3035" headers="r18c1-t63 r1c5-t63">
<p>none</p>
</td>
<td class="cellalignment3035" headers="r18c1-t63 r1c6-t63">
<p>empty string</p>
</td>
<td class="cellalignment3035" headers="r18c1-t63 r1c7-t63">
<p>Uniquely identifies a function within the current schema. The specific name can be the same as the function name, and it can be up to 18 characters long. If the SPECIFIC keyword is omitted, then the IBM DB2 UDB Database Manager automatically generates a unique identifier for the function in the format SQLyymmddhhmmssxxx.</p>
</td>
</tr>
<tr class="cellalignment3029">
<td class="cellalignment3035" id="r19c1-t63" headers="r1c1-t63">
<p>SQL_DATA</p>
</td>
<td class="cellalignment3035" headers="r19c1-t63 r1c2-t63">
<p>STRING</p>
</td>
<td class="cellalignment3035" headers="r19c1-t63 r1c3-t63">
<p>, CONTAINS SQL, MODIFIES SQL DATA, READS SQL DATA</p>
</td>
<td class="cellalignment3035" headers="r19c1-t63 r1c4-t63">
<p>none</p>
</td>
<td class="cellalignment3035" headers="r19c1-t63 r1c5-t63">
<p>none</p>
</td>
<td class="cellalignment3035" headers="r19c1-t63 r1c6-t63">
<p>empty string</p>
</td>
<td class="cellalignment3035" headers="r19c1-t63 r1c7-t63">
<p>Specifies what type of SQL statements can be executed by the function. CONTAINS SQL specifies that the function can only execute SQL statements that do not read or modify SQL data. READS SQL DATA specifies that only SQL statements that do not modify SQL data can be executed by the function. MODIFIES SQL DATA specifies that all SQL statements supported in dynamic-compound-statement can be executed by the function.</p>
</td>
</tr>
<tr class="cellalignment3029">
<td class="cellalignment3035" id="r20c1-t63" headers="r1c1-t63">
<p>STATIC_DISPATCH</p>
</td>
<td class="cellalignment3035" headers="r20c1-t63 r1c2-t63">
<p>STRING</p>
</td>
<td class="cellalignment3035" headers="r20c1-t63 r1c3-t63">
<p>, STATIC DISPATCH</p>
</td>
<td class="cellalignment3035" headers="r20c1-t63 r1c4-t63">
<p>none</p>
</td>
<td class="cellalignment3035" headers="r20c1-t63 r1c5-t63">
<p>none</p>
</td>
<td class="cellalignment3035" headers="r20c1-t63 r1c6-t63">
<p>empty string</p>
</td>
<td class="cellalignment3035" headers="r20c1-t63 r1c7-t63">
<p>Specifies that the function is to return the static values of an ARRAY or a user-defined type. Required if you have a non-SQL function that uses an ARRAY or a user-defined type as parameters.</p>
</td>
</tr>
<tr class="cellalignment3029">
<td class="cellalignment3035" id="r21c1-t63" headers="r1c1-t63">
<p>WITH_NULL_INPUT</p>
</td>
<td class="cellalignment3035" headers="r21c1-t63 r1c2-t63">
<p>STRING</p>
</td>
<td class="cellalignment3035" headers="r21c1-t63 r1c3-t63">
<p>, CALLED ON NULL INPUT, RETURNS NULL ON NULL INPUT</p>
</td>
<td class="cellalignment3035" headers="r21c1-t63 r1c4-t63">
<p>none</p>
</td>
<td class="cellalignment3035" headers="r21c1-t63 r1c5-t63">
<p>none</p>
</td>
<td class="cellalignment3035" headers="r21c1-t63 r1c6-t63">
<p>empty string</p>
</td>
<td class="cellalignment3035" headers="r21c1-t63 r1c7-t63">
<p>Specifies that if RETURNS NULL ON NULL INPUT is specified in a CLR function, then SQL Server can return NULL when any of the arguments it receives is NULL, without actually invoking the body of the function. If CALLED ON NULL INPUT is specified, then the function body executes even if NULL is passed as an argument.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformalwide" --></div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<div class="sect2"><a id="sthref2737"></a>
<h2 class="sect2">See Also</h2>
<p><a href="chap1001.htm#EEFFEFAD">OMBALTER</a></p>
<p><a href="chap9020.htm#ABAFHHEE">OMBCREATE TABLE_FUNCTION</a></p>
<p><a href="chap15001.htm#EBHDFCEE">OMBDROP TABLE_FUNCTION</a></p>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment3028">
<tr>
<td class="cellalignment3035">
<table class="cellalignment3033">
<tr>
<td class="cellalignment3032"><a href="chap4018.htm"><img width="24" height="24" src="../../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment3032"><a href="chap4020.htm"><img width="24" height="24" src="../../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;2009,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment3037">
<table class="cellalignment3031">
<tr>
<td class="cellalignment3032"><a href="../../index.htm"><img width="24" height="24" src="../../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment3032"><a href="../../nav/portal_booklist.htm"><img width="24" height="24" src="../../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment3032"><a href="toc.htm"><img width="24" height="24" src="../../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment3032"><a href="../../nav/mindx.htm"><img width="24" height="24" src="../../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment3032"><a href="../../dcommon/html/feedback.htm"><img width="24" height="24" src="../../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>
</body>
</html>
