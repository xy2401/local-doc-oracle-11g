<!DOCTYPE html>
<html lang="en" >
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1">
<meta charset="utf-8">
<title>Oracle Clusterware C Application Program Interfaces</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Merged Version 1056" />
<meta name="dcterms.created" content="2015-06-03T16:55:40Z" />
<meta name="robots" content="all" />
<meta name="dcterms.title" content="Clusterware Administration and Deployment Guide" />
<meta name="dcterms.identifier" content="E41959-04" />
<meta name="dcterms.isVersionOf" content="CWADD" />
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;2007, 2015,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved." />
<link rel="Start" href="../../index.htm" title="Home" type="text/html" />
<link rel="Copyright" href="../../dcommon/html/cpyr.htm" title="Copyright" type="text/html" />

<script type="application/javascript"  src="../../dcommon/js/headfoot.js"></script>
<script type="application/javascript"  src="../../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html" />
<link rel="Index" href="index.htm" title="Index" type="text/html" />
<link rel="Glossary" href="glossary.htm" title="Glossary" type="text/html" />
<link rel="Prev" href="crsref.htm" title="Previous" type="text/html" />
<link rel="Next" href="ocrsyntax.htm" title="Next" type="text/html" />
<link rel="alternate" href="../e41959.pdf" title="PDF version" type="application/pdf" />
<link rel="schema.dcterms" href="http://purl.org/dc/terms/" />
<link rel="stylesheet" href="../../dcommon/css/fusiondoc.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/header.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/footer.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/fonts.css">
<link rel="stylesheet" href="../../dcommon/css/foundation.css">
<link rel="stylesheet" href="../../dcommon/css/codemirror.css">
<link rel="stylesheet" type="text/css" title="Default" href="../../nav/css/html5.css">
<link rel="stylesheet" href="../../dcommon/css/respond-480-tablet.css">
<link rel="stylesheet" href="../../dcommon/css/respond-768-laptop.css">
<link rel="stylesheet" href="../../dcommon/css/respond-1140-deskop.css">
<script type="application/javascript" src="../../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">17/21</span> <!-- End Header -->
<div id="CWADD6000" class="appendix"><a id="BGBIIFJF"></a>
<h1 class="appendix"><span class="secnum">F</span> Oracle Clusterware C Application Program Interfaces</h1>
<p>This appendix describes the Oracle Clusterware C application program interfaces (APIs). This appendix contains the following topics:</p>
<ul>
<li>
<p><a href="#CACGIIIH">About the Programming Interface (C API) to Oracle Clusterware</a></p>
<ul>
<li>
<p><a href="#CACFBGAI">Overview</a></p>
</li>
<li>
<p><a href="#CJGFIGEC">Operational Notes</a></p>
</li>
<li>
<p><a href="#BGBEGGJB">Deprecated CLSCRS APIs</a></p>
</li>
</ul>
</li>
<li>
<p><a href="#CACBFAHA">Interactive CLSCRS APIs</a></p>
</li>
<li>
<p><a href="#CACGCCGD">Non-Interactive CLSCRS APIs</a></p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1"><span class="bold">See Also</span>:</p>
<a href="crschp.htm#CHDGHGJA">Chapter 6, "Making Applications Highly Available Using Oracle Clusterware"</a> for detailed information about using Oracle Clusterware to make applications highly available</div>
<div class="refentry"><a id="CACGIIIH"></a>
<div id="CWADD91814" class="refsect1">
<h2 class="refsect1">About the Programming Interface (C API) to Oracle Clusterware</h2>
<p><a id="sthref1196"></a><a id="sthref1197"></a><a id="sthref1198"></a>This section contains information about using the programming interface (C API) to Oracle Clusterware (CLSCRS.</p>
<ul>
<li>
<p><a href="#CACFBGAI">Overview</a></p>
</li>
<li>
<p><a href="#CJGFIGEC">Operational Notes</a></p>
</li>
<li>
<p><a href="#BGBEGGJB">Deprecated CLSCRS APIs</a></p>
</li>
</ul>
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="CACFBGAI"></a>Overview</p>
<p><a id="sthref1199"></a>CLSCRS is a set of C-based APIs for Oracle Clusterware. The CLSCRS APIs enable you to manage the operation of entities that are managed by Oracle Clusterware. These entities include resources, resource types, servers, and server pools. You use the APIs to register user applications with Oracle Clusterware so that the clusterware can manage them and maintain high availability. Once an application is registered, you can manage it and query the application's status. If you no longer need the application, then you can stop it and unregister it from Oracle Clusterware.</p>
<p>Oracle Clusterware services are provided by Cluster Ready Services that runs as part of Oracle Clusterware. The CLSCRS API uses a context that is explicitly named in all function calls. The API does not store anything at the process or thread level. You can use the callbacks for diagnostic logging.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
You can install the Oracle Clusterware high availability API from the Oracle Database client installation media.</div>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="CJGFIGEC"></a>Operational Notes</p>
<p>This section includes the following topics:</p>
<ul>
<li>
<p><a href="#BGBGJCGJ">Context Initialization and Persistence</a></p>
</li>
<li>
<p><a href="#BGBJGEBE">Threading Support</a></p>
</li>
<li>
<p><a href="#BGBCAIEH">CLSCRS API Data Structures</a></p>
</li>
<li>
<p><a href="#BGBBBEJA">Memory Management</a></p>
</li>
<li>
<p><a href="#BGBECEJB">Error Handling and Tracing</a></p>
</li>
<li>
<p><a href="#BGBBIGJA">Callback Mechanism</a></p>
</li>
<li>
<p><a href="#BGBGGBHD">Filters</a></p>
</li>
<li>
<p><a href="#BGBIICHE">Script Agent Usage</a></p>
</li>
<li>
<p><a href="#BGBEBFDG">Help Interface</a></p>
</li>
</ul>
<p class="subhead2"><a id="BGBGJCGJ"></a><a id="CWADD92011"></a>Context Initialization and Persistence</p>
<p>To use the <a id="sthref1200"></a>CLSCRS APIs, you must first initialize the <code dir="ltr">clscrs</code> context. The calls to create and terminate this context are:</p>
<ul>
<li>
<p><code dir="ltr">clscrs_init_crs</code>: Initializes the <code dir="ltr">clscrs</code> context</p>
</li>
<li>
<p><code dir="ltr">clscrs_term_crs</code>: Terminates the <code dir="ltr">clscrs</code> context</p>
</li>
</ul>
<p>The caller is responsible for terminating the context when it is no longer needed.</p>
<p class="subhead2"><a id="BGBJGEBE"></a><a id="CWADD92012"></a>Threading Support</p>
<p>If <a id="sthref1201"></a>initialized with the <code dir="ltr">CLSCRS_FLAG_USETHREADS</code> flag, then the CLSCRS API may spawn threads internally. Every API function executes in the context of the calling thread. The API context object may not be used concurrently by multiple threads. However, no thread-affinity on the part of the client is required. A process may create multiple API contexts and use those on different threads, subject to the one-thread-per-one-context-at-a-time rule.</p>
<p class="subhead2"><a id="BGBCAIEH"></a><a id="CWADD92013"></a>CLSCRS API Data Structures</p>
<p>The following <a id="sthref1202"></a>entities are passed into the API calls and contain return values from the API call:</p>
<ul>
<li>
<p><code dir="ltr">clscrs_sp</code>: A stringpair (<code dir="ltr">sp</code>) contains a name and a value string. The value can be NULL. It is created and destroyed, and its contents can be examined and the value replaced. A stringpair can be a member of exactly one stringpair list (<code dir="ltr">splist</code>).</p>
</li>
<li>
<p><code dir="ltr">clscrs_splist</code>: A stringpair list (<code dir="ltr">splist</code>) is a list of zero or more stringpairs used in various contexts. An API can add stringpairs to or remove them from a stringpair list, or the API can iterate stringpairs.</p>
</li>
<li>
<p><code dir="ltr">clscrs_res</code>: A resource instance (<code dir="ltr">res</code>) represents an Oracle Clusterware entity, which contains the name and additional data appropriate to the context in which the Oracle Clusterware entity is used. Sometimes a resource instance contains Oracle Clusterware entity attribute data and other times it carries status and return messages about an operation. A single resource instance can be a member of exactly one <code dir="ltr">clscrs_reslist</code>.</p>
</li>
<li>
<p><code dir="ltr">clscrs_reslist</code>: A resource list (<code dir="ltr">reslist</code>) is a data structure that contains zero or more instances of <code dir="ltr">clscrs_res</code>. An API can add resources to or remove them from a resource list, or the API can iterate resources.</p>
</li>
</ul>
<p class="subhead2"><a id="BGBBBEJA"></a><a id="CWADD92014"></a>Memory Management</p>
<p>The <a id="sthref1203"></a>CLSCRS APIs work on elements and lists. The elements are added to lists. The memory for both elements and lists is allocated and released through explicit API calls. It is the caller's responsibility to release the memory that they allocate. However, when elements are added to lists, only the list must be destroyed: the destruction of the list destroys its elements implicitly. The elements must be destroyed when they are not added to any list. For recursive lists, destroying the parent list also destroys any lists contained within it. The <code dir="ltr">clscrs_sp</code> and <code dir="ltr">clscrs_res</code> elements must be destroyed by the caller. If they are part of a <code dir="ltr">clscrs_splist</code> or <code dir="ltr">clscrs_reslist</code>, destroying the list destroys the respective <code dir="ltr">clscrs_sp</code> and <code dir="ltr">clscrs_res</code> entities.</p>
<p>For example, when a resource is created and added to a resource list, only the resource list must be destroyed, but not the individual resource. Destroying the resource list releases the memory for the individual resource, too.</p>
<p>Memory is allocated by the API through the following calls:</p>
<pre dir="ltr">
clscrs_sp_create()
clscrs_res_create()
clscrs_serverpool_create()
clscrs_type_create()
clscrs_splist_create()
clscrs_reslist_create()
clscrs_entity_id_create()
</pre>
<p>Each of the calls in the preceding list has a corresponding <code dir="ltr">clscrs_*_destroy()</code> call.</p>
<p class="subhead2"><a id="BGBECEJB"></a><a id="CWADD92015"></a>Error Handling and Tracing</p>
<p>Interactive and non-interactive <a id="sthref1204"></a>CLSCRS APIs each use a different error-handling mechanism.</p>
<p>For non-interactive CLSCRS APIs, the error code is returned as the return value of the function call. For example:</p>
<pre dir="ltr">
clscrsret clscrs_sp_get_value(clscrs_sp *sp, oratext **value);
</pre>
<p>The error code is returned as a <code dir="ltr">clscrsret</code> value.</p>
<p>For interactive CLSCRS APIs, the output result is represented, as follows:</p>
<ol>
<li>
<p>The return value of the function call provides a high-level output of the request. Did the request reach the server? Was it completely successful, or completely or only partially unsuccessful? A successful return value means the request was received, processed, and the outcome was successful for all entities requested.</p>
</li>
<li>
<p>For each entity on which the request operated, there is a programmatic completion code stored in the <code dir="ltr">op_status</code> list. If the value is not <code dir="ltr">success</code>, it indicates the high-level type of the problem specific to processing the request for the particular object.</p>
</li>
<li>
<p>Optionally, the API might indicate that it wants to receive localized, human-readable error, warning, or status messages by using the callback mechanism. Each invocation of the callback provides the message, message type (severity), and the ID of the object to which the callback invocation pertains.</p>
</li>
</ol>
<p>For example:</p>
<pre dir="ltr">
CLSCRS_STAT clscrs_register_resource2(clscrs_reslist *in_reslist, uword flags,
                                       clscrs_msgf2 msgf, void *msgarg,
                                       clscrs_reslist *op_status);
</pre>
<ol>
<li>
<p>The function returns an error code of value <code dir="ltr">CLSCRS_STAT</code>.</p>
</li>
<li>
<p>The <code dir="ltr">crsd</code> sends error messages, warning messages, and progress messages back to the client through the <code dir="ltr">clscrs_msgf2</code> callback. The client must implement the callback to process these messages returned by the <code dir="ltr">crsd</code>.</p>
</li>
<li>
<p>In previous Oracle Clusterware releases, the API also contained results of each operation on the Oracle Clusterware entities as part of the <code dir="ltr">op_status</code> list. You can access that information using the following API:</p>
<pre dir="ltr">
clscrsret clscrs_res_get_op_status(clscrs_res *res, CLSCRS_STAT *status,
                                    oratext **msg);
</pre>
<p>The <code dir="ltr">status</code> argument contains a status code about the <code dir="ltr">crsd</code> operation on the Oracle Clusterware entity. Additionally, the <code dir="ltr">msg</code> argument contains a message from the <code dir="ltr">crsd</code> about the result of the operation. Though the <code dir="ltr">op_status</code> list continues to contain the results of the <code dir="ltr">crsd</code> operation for each Oracle Clusterware entity in the <code dir="ltr">msg</code> argument, usage of the <code dir="ltr">msg</code> argument to get the error codes and messages has now been deprecated and is not supported for any use of the API on a new entity. Only pre-existing use cases (for acting on resources, specifically) are supported. Use the callback function to process any messages returned by the <code dir="ltr">crsd</code>.</p>
</li>
</ol>
<p class="subhead2"><a id="BGBBIGJA"></a><a id="CWADD92016"></a>Callback Mechanism</p>
<p>Interactive <a id="sthref1205"></a>CLSCRS APIs provide a callback mechanism that the clients can use to process error messages, warning messages, and progress messages sent by the <code dir="ltr">crsd</code>.</p>
<p>The signature of the callback mechanism is:</p>
<pre dir="ltr">
typedef  void (*clscrs_msgf2)(void *usrp, const oratext *id, const oratext *msg,
                clscrs_msgtype msgtype);
</pre>
<p>In the preceding syntax:</p>
<ul>
<li>
<p><code dir="ltr">usrp</code>: Is a user-supplied pointer that probably contains the context of the call</p>
</li>
<li>
<p><code dir="ltr">id</code>: Is the identifier of the entity to which the message corresponds</p>
</li>
<li>
<p><code dir="ltr">msg</code>: Is the output text</p>
</li>
<li>
<p><code dir="ltr">msgtype</code>: Is the type of the message; either error, warning, or progress</p>
</li>
</ul>
<p><a href="#BGBFEEED">Example F-1</a> describes an example of the callback mechanism.</p>
<div id="CWADD92017" class="example">
<p class="titleinexample"><a id="BGBFEEED"></a>Example F-1 Callback Mechanism</p>
<pre dir="ltr">
void myCallback(void *arg, const oratext *pId, const oratext *pMsg,
                clscrs_msgtype msgType)
{
    if (pMsg != NULL)
   {
       cout &lt;&lt; pMsg &lt;&lt; endl;
    }
}
</pre></div>
<!-- class="example" -->
<p><a href="#BGBGHECD">Example F-2</a> describes how to use the callback mechanism in an interactive API.</p>
<div id="CWADD92018" class="example">
<p class="titleinexample"><a id="BGBGHECD"></a>Example F-2 Using the Callback Mechanism In an Interactive API</p>
<pre dir="ltr">
clscrs_start_resource2(pResIdList, NULL,
                       env, myCallback, NULL,
                       0, pOpStatus);
</pre></div>
<!-- class="example" -->
<p>You can also print debug trace messages for the API, itself by passing the <code dir="ltr">CLSCRS_FLAG_TRACE</code> flag when creating the context. The signature for context creation is:</p>
<pre dir="ltr">
CLSCRS_STAT clscrs_init_crs(clscrs_ctx **ctx, clscrs_msgf2 errf, void *errCtx,
                             ub4 flags);
</pre>
<p>For the trace messages to work, you must specify both the <code dir="ltr">CLSCRS_FLAG_TRACE</code> flag and a <code dir="ltr">clscrs_msgf2</code> callback mechanism in the <code dir="ltr">clscrs_init_crs</code> API.</p>
<p>The <code dir="ltr">clscrs_msgf2</code> callback mechanism has the following signature:</p>
<pre dir="ltr">
typedef  void (*clscrs_msgf)(void *usrp, const oratext *msg, sword msglen);
</pre>
<p class="subhead2"><a id="BGBGGBHD"></a><a id="CWADD92019"></a>Filters</p>
<p>You can use <a id="sthref1206"></a>filters to narrow down Oracle Clusterware entities upon which a CLSCRS API operates. Simple filters are attribute-value pairs with an operator. Operators must be surrounded by spaces, as shown in the examples. You can combine simple filters into expressions called expression filters using Boolean operators.</p>
<p>Supported filter operators are:</p>
<br />
<code dir="ltr">=</code><br />
<code dir="ltr">&gt;</code><br />
<code dir="ltr">&lt;</code><br />
<code dir="ltr">!=</code><br />
<code dir="ltr">co</code>: Contains<br />
<code dir="ltr">st</code>: Starts with<br />
<code dir="ltr">en</code>: Ends with<br />
<p>Supported Boolean operators are <code dir="ltr">AND</code> and <code dir="ltr">OR</code>.</p>
<p>Examples of filters are:</p>
<ul>
<li>
<p><code dir="ltr">TYPE = type1</code></p>
</li>
<li>
<p><code dir="ltr">((TYPE = type1) AND (CHECK_INTERVAL &gt; 50))</code></p>
</li>
<li>
<p><code dir="ltr">(TYPE = type1) AND ((CHECK_INTERVAL &gt; 30) OR (AUTO_START co never))</code></p>
</li>
<li>
<p><code dir="ltr">NAME en network.res</code></p>
</li>
<li>
<p><code dir="ltr">TYPE st ora.db</code></p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
Use the <code dir="ltr">clscrs_comparator enum</code> and the <code dir="ltr">clscrs_operator enum</code> located in the <code dir="ltr">$ORA_CRS_HOME/crs/demo/clscrsx.h</code> file to get the correct type for the above comparators and operators, respectively, in the API calls</div>
<p>There are two types of filters and CLSCRS has a set of APIs to create these filters:</p>
<ul>
<li>
<p><span class="bold">Comparison filter</span>: <a id="sthref1207"></a>A simple filter that compares two values. For example:</p>
<pre dir="ltr">
TYPE = ora.db.type
</pre>
<p>Use the <code dir="ltr">clscrs_compfilter_create</code> API to create a comparison filter. For example, to create the <code dir="ltr">(TYPE = ora.db.type)</code> comparison filter:</p>
<pre dir="ltr">
clscrs_compfilter_create(ctx, clscrs_TYPE,
                    clscrs_comparator_eq, (const oratext *)"ora.db.type",
                    &amp;myCompFilter);
</pre></li>
<li>
<p><span class="bold">Expression filter</span>: <a id="sthref1208"></a>A filter that is created from either a set of comparison filters or expression filters, or both. For example:</p>
<pre dir="ltr">
((TYPE = ora.db.type) AND (CHECK_INTERVAL &gt; 50))
</pre>
<p>Use the <code dir="ltr">clscrs_expfilter_create</code> API to create a comparison filter. For example, to create an expression filter:</p>
<pre dir="ltr">
clscrs_exprfilter_create(myCompFilter1, clscrs_operator_or,
                          myCompFilter2, &amp;myExprFilter);
</pre></li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
The <code dir="ltr">$ORA_CRS_HOME/crs/demo/clscrsx.h</code> file for usage information for the <code dir="ltr">clscrs_compfilter_create</code> and <code dir="ltr">clscrs_expfilter_create</code> APIs</div>
<div class="infobox-note">
<p class="notep1">Note:</p>
Both the <code dir="ltr">clscrs_compfilter_create</code> and <code dir="ltr">clscrs_expfilter_create</code> APIs allocate memory that must be freed by calling <code dir="ltr">clscrs_filter_destroy()</code>.</div>
<p>You can use filters in the following interactive CLSCRS APIs in place of an entity list:</p>
<br />
<code dir="ltr">clscrs_start_resource2</code><br />
<code dir="ltr">clscrs_stat2</code><br />
<code dir="ltr">clscrs_stop_resource2</code><br />
<code dir="ltr">clscrs_check_resource2</code><br />
<code dir="ltr">clscrs_relocate_resource2</code><br />
<p><a href="#BGBJEFEG">Example F-3</a> describes using filters in an interactive CLSCRS API.</p>
<div id="CWADD92020" class="example">
<p class="titleinexample"><a id="BGBJEFEG"></a>Example F-3 Filters In an Interactive CLSCRS API</p>
<pre dir="ltr">
clscrs_start_resource2(myCompFilter, NULL,
                       env, msgf2, NULL,
                       0, pOpStatus);
</pre></div>
<!-- class="example" -->
<p class="subhead2"><a id="BGBIICHE"></a><a id="CWADD92021"></a>Script Agent Usage</p>
<p>When you use CLSCRS APIs inside script agent entry points, keep the following in mind:</p>
<ol>
<li>
<p>Some actions, such as start, stop, and clean, are executed under a lock on the resource instance. Thus, issuing a request to the server to act on the resource directly or by extension of a relation results in a dead-lock.</p>
</li>
<li>
<p>Issuing read-only (<code dir="ltr">clscrs_stat2</code>) is generally safe unless it is an initial check, where the script agent must not call back on the server, because that results in a dead-lock, as well. Use the <code dir="ltr">clsagfw</code> APIs to query the check entry point.</p>
</li>
</ol>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="resatt.htm#CHDCECHH">Appendix B, "Oracle Clusterware Resource Reference"</a> for examples of script agents</div>
<p class="subhead2"><a id="BGBEBFDG"></a><a id="CWADD91811"></a>Help Interface</p>
<p>You can find the entire list of CLSCRS APIs, including usage information for each, in the <code dir="ltr">$ORA_CRS_HOME/crs/demo/clscrsx.h</code> file, along with a demo called <code dir="ltr">crsapp.c</code>.</p>
</div>
<!-- class="refsubsect" -->
<div class="refsubsect">
<p class="titleinrefsubsect"><a id="BGBEGGJB"></a>Deprecated CLSCRS APIs</p>
<p><a href="#CACBECBE">Table F-1</a> lists the deprecated <a id="sthref1209"></a>CLSCRS APIs and the corresponding new APIs for Oracle Clusterware 11<span class="italic">g</span> release 2 (11.2).</p>
<div id="CWADD91813" class="tblformalwide">
<p class="titleintable"><a id="sthref1210"></a><a id="CACBECBE"></a>Table F-1 Deprecated CLSCRS APIs</p>
<table class="cellalignment414" title="Deprecated CLSCRS APIs" summary="This table lists deprecated C API commands and their replacements." dir="ltr">
<thead>
<tr class="cellalignment408">
<th class="cellalignment415" id="r1c1-t8">Deprecated Command</th>
<th class="cellalignment415" id="r1c2-t8">Replacement</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment408">
<td class="cellalignment416" id="r2c1-t8" headers="r1c1-t8">
<pre dir="ltr">
clscrs_register_resource
</pre></td>
<td class="cellalignment416" headers="r2c1-t8 r1c2-t8">
<pre dir="ltr">
clscrs_register_resource2
</pre></td>
</tr>
<tr class="cellalignment408">
<td class="cellalignment416" id="r3c1-t8" headers="r1c1-t8">
<pre dir="ltr">
clscrs_start_resource
</pre></td>
<td class="cellalignment416" headers="r3c1-t8 r1c2-t8">
<pre dir="ltr">
clscrs_start_resource2
</pre></td>
</tr>
<tr class="cellalignment408">
<td class="cellalignment416" id="r4c1-t8" headers="r1c1-t8">
<pre dir="ltr">
clscrs_stat
</pre></td>
<td class="cellalignment416" headers="r4c1-t8 r1c2-t8">
<pre dir="ltr">
clscrs_stat2
</pre></td>
</tr>
<tr class="cellalignment408">
<td class="cellalignment416" id="r5c1-t8" headers="r1c1-t8">
<pre dir="ltr">
clscrs_stop_resource
</pre></td>
<td class="cellalignment416" headers="r5c1-t8 r1c2-t8">
<pre dir="ltr">
clscrs_stop_resource2
</pre></td>
</tr>
<tr class="cellalignment408">
<td class="cellalignment416" id="r6c1-t8" headers="r1c1-t8">
<pre dir="ltr">
clscrs_check_resource
</pre></td>
<td class="cellalignment416" headers="r6c1-t8 r1c2-t8">
<pre dir="ltr">
clscrs_check_resource2
</pre></td>
</tr>
<tr class="cellalignment408">
<td class="cellalignment416" id="r7c1-t8" headers="r1c1-t8">
<pre dir="ltr">
clscrs_relocate_resource
</pre></td>
<td class="cellalignment416" headers="r7c1-t8 r1c2-t8">
<pre dir="ltr">
clscrs_relocate_resource2
</pre></td>
</tr>
<tr class="cellalignment408">
<td class="cellalignment416" id="r8c1-t8" headers="r1c1-t8">
<pre dir="ltr">
clscrs_unregister_resource
</pre></td>
<td class="cellalignment416" headers="r8c1-t8 r1c2-t8">
<pre dir="ltr">
clscrs_unregister_resource2
</pre></td>
</tr>
<tr class="cellalignment408">
<td class="cellalignment416" id="r9c1-t8" headers="r1c1-t8">
<pre dir="ltr">
clscrs_msgf
</pre></td>
<td class="cellalignment416" headers="r9c1-t8 r1c2-t8">
<pre dir="ltr">
clscrs_msgf2
</pre></td>
</tr>
<tr class="cellalignment408">
<td class="cellalignment416" id="r10c1-t8" headers="r1c1-t8">
<pre dir="ltr">
clscrs_fail_resource
</pre></td>
<td class="cellalignment416" headers="r10c1-t8 r1c2-t8">
<p>No replacement.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformalwide" --></div>
<!-- class="refsubsect" --></div>
<!-- class="refsect1" -->
<a id="CACBFAHA"></a>
<div id="CWADD91821" class="refsect1">
<h2 class="refsect1">Interactive CLSCRS APIs</h2>
<p>The APIs listed in <a href="#BGBHIJGJ">Table F-2</a> make calls to the Cluster Ready Services daemon (<code dir="ltr">crsd</code>) to run commands. The <code dir="ltr">crsd</code> must be up and running for these APIs to function.</p>
<div id="CWADD91822" class="tblformal">
<p class="titleintable"><a id="sthref1211"></a><a id="BGBHIJGJ"></a>Table F-2 Summary of Interactive CLSCRS APIs for Oracle Clusterware</p>
<table class="cellalignment417" title="Summary of Interactive CLSCRS APIs for Oracle Clusterware" summary="Describes each subprogram of the DBMS_LOGSTDBY procedure, including a reference to the section where each procedure is dscribed in more detail." dir="ltr">
<thead>
<tr class="cellalignment408">
<th class="cellalignment415" id="r1c1-t9">C API</th>
<th class="cellalignment415" id="r1c2-t9">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment408">
<td class="cellalignment416" id="r2c1-t9" headers="r1c1-t9">
<pre dir="ltr">
clscrs_register_type
</pre></td>
<td class="cellalignment416" headers="r2c1-t9 r1c2-t9">
<p>Registers the resource types in the input resource list.</p>
</td>
</tr>
<tr class="cellalignment408">
<td class="cellalignment416" id="r3c1-t9" headers="r1c1-t9">
<pre dir="ltr">
clscrs_register_serverpool
</pre></td>
<td class="cellalignment416" headers="r3c1-t9 r1c2-t9">
<p>Registers a server pool for the input list of servers.</p>
</td>
</tr>
<tr class="cellalignment408">
<td class="cellalignment416" id="r4c1-t9" headers="r1c1-t9">
<pre dir="ltr">
clscrs_register_resource2
</pre></td>
<td class="cellalignment416" headers="r4c1-t9 r1c2-t9">
<p>Registers the resources in the input resource list.</p>
</td>
</tr>
<tr class="cellalignment408">
<td class="cellalignment416" id="r5c1-t9" headers="r1c1-t9">
<pre dir="ltr">
clscrs_start_resource2
</pre></td>
<td class="cellalignment416" headers="r5c1-t9 r1c2-t9">
<p>Notifies Oracle Clusterware to start a named set of resources.</p>
</td>
</tr>
<tr class="cellalignment408">
<td class="cellalignment416" id="r6c1-t9" headers="r1c1-t9">
<pre dir="ltr">
clscrs_stat2
</pre></td>
<td class="cellalignment416" headers="r6c1-t9 r1c2-t9">
<p>Obtains information about the entities identified in rqlist.</p>
</td>
</tr>
<tr class="cellalignment408">
<td class="cellalignment416" id="r7c1-t9" headers="r1c1-t9">
<pre dir="ltr">
clscrs_stop_resource2
</pre></td>
<td class="cellalignment416" headers="r7c1-t9 r1c2-t9">
<p>Notifies Oracle Clusterware to stop a named set of resources.</p>
</td>
</tr>
<tr class="cellalignment408">
<td class="cellalignment416" id="r8c1-t9" headers="r1c1-t9">
<pre dir="ltr">
clscrs_check_resource2
</pre></td>
<td class="cellalignment416" headers="r8c1-t9 r1c2-t9">
<p>Notifies Oracle Clusterware to run the check entry points for the identified resources.</p>
</td>
</tr>
<tr class="cellalignment408">
<td class="cellalignment416" id="r9c1-t9" headers="r1c1-t9">
<pre dir="ltr">
clscrs_relocate_resource2
</pre></td>
<td class="cellalignment416" headers="r9c1-t9 r1c2-t9">
<p>Relocates the list of resource identifiers.</p>
</td>
</tr>
<tr class="cellalignment408">
<td class="cellalignment416" id="r10c1-t9" headers="r1c1-t9">
<pre dir="ltr">
clscrs_unregister_resource2
</pre></td>
<td class="cellalignment416" headers="r10c1-t9 r1c2-t9">
<p>Unregisters the resources in the input list of resource names.</p>
</td>
</tr>
<tr class="cellalignment408">
<td class="cellalignment416" id="r11c1-t9" headers="r1c1-t9">
<pre dir="ltr">
clscrs_unregister_type
</pre></td>
<td class="cellalignment416" headers="r11c1-t9 r1c2-t9">
<p>Unregisters the resource types in the input list.</p>
</td>
</tr>
<tr class="cellalignment408">
<td class="cellalignment416" id="r12c1-t9" headers="r1c1-t9">
<pre dir="ltr">
clscrs_unregister_serverpool
</pre></td>
<td class="cellalignment416" headers="r12c1-t9 r1c2-t9">
<p>Unregisters the given server pool.</p>
</td>
</tr>
<tr class="cellalignment408">
<td class="cellalignment416" id="r13c1-t9" headers="r1c1-t9">
<pre dir="ltr">
clscrs_relocate_server
</pre></td>
<td class="cellalignment416" headers="r13c1-t9 r1c2-t9">
<p>Relocates a list of servers.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsect1" -->
<a id="CACGCCGD"></a>
<div id="CWADD91823" class="refsect1">
<h2 class="refsect1">Non-Interactive CLSCRS APIs</h2>
<p>You can use non-interactive CLSCRS APIs for functions such as context initialization, preparing request payloads for interactive APIs, and post-processing output of the interactive APIs. The non-interactive CLSCRS APIs do not call <code dir="ltr">crsd</code>.</p>
<p>A callback error reporting mechanism is not available for the non-interactive CLSCRS APIs. All interactive CLSCRS APIs, except, <code dir="ltr">clscrs_stat2</code>, use this callback mechanism. Clients of these APIs also use the callback mechanism to receive error, warning, and progress messages from the <code dir="ltr">crsd</code>.</p>
<p>You can also use filters to reduce the list of CRS entities. You can also use filters in the interactive APIs to reduce the list of CRS entities.</p>
<p class="subhead2"><a id="CWADD92167"></a><a id="sthref1212"></a>Thread Safety</p>
<p>The routines provided to manage API data structures cannot be used with the same API context in multiple threads concurrently; however, no thread-affinity on the part of the client is required. A process may invoke these routines on multiple threads provided that a separate API context is used in each instance.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#BGBECEJB">"Error Handling and Tracing"</a>, <a href="#BGBBIGJA">"Callback Mechanism"</a>, and <a href="#BGBGGBHD">"Filters"</a> for more information</div>
<p><a href="#CACCIHGD">Table F-3</a> describes the non-interactive CLSCRS APIs.</p>
<div id="CWADD91824" class="tblformal">
<p class="titleintable"><a id="sthref1213"></a><a id="CACCIHGD"></a>Table F-3 Non-Interactive CLSCRS APIs</p>
<table class="cellalignment417" title="Non-Interactive CLSCRS APIs" summary="Describes each subprogram of the DBMS_LOGSTDBY procedure, including a reference to the section where each procedure is dscribed in more detail." dir="ltr">
<thead>
<tr class="cellalignment408">
<th class="cellalignment415" id="r1c1-t11">C API</th>
<th class="cellalignment415" id="r1c2-t11">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment408">
<td class="cellalignment416" id="r2c1-t11" headers="r1c1-t11">
<pre dir="ltr">
clscrs_entity_id_destroy
</pre></td>
<td class="cellalignment416" headers="r2c1-t11 r1c2-t11">
<p>Frees the memory associated with an entity identifier created from <code dir="ltr">clscrs_entity_id_create()</code>.</p>
</td>
</tr>
<tr class="cellalignment408">
<td class="cellalignment416" id="r3c1-t11" headers="r1c1-t11">
<pre dir="ltr">
clscrs_exprfilter_create
</pre></td>
<td class="cellalignment416" headers="r3c1-t11 r1c2-t11">
<p>Constructs an expression filter from comparison and/or expression filters.</p>
</td>
</tr>
<tr class="cellalignment408">
<td class="cellalignment416" id="r4c1-t11" headers="r1c1-t11">
<pre dir="ltr">
clscrs_filter_destroy
</pre></td>
<td class="cellalignment416" headers="r4c1-t11 r1c2-t11">
<p>Frees the memory for a filter.</p>
</td>
</tr>
<tr class="cellalignment408">
<td class="cellalignment416" id="r5c1-t11" headers="r1c1-t11">
<pre dir="ltr">
clscrs_get_entity_type
</pre></td>
<td class="cellalignment416" headers="r5c1-t11 r1c2-t11">
<p>Obtains the entity type corresponding to the entity identifier provided.</p>
</td>
</tr>
<tr class="cellalignment408">
<td class="cellalignment416" id="r6c1-t11" headers="r1c1-t11">
<pre dir="ltr">
clscrs_get_fixed_attrlist
</pre></td>
<td class="cellalignment416" headers="r6c1-t11 r1c2-t11">
<p>Obtains the list of attributes that correspond to an attribute group identifier.</p>
</td>
</tr>
<tr class="cellalignment408">
<td class="cellalignment416" id="r7c1-t11" headers="r1c1-t11">
<pre dir="ltr">
clscrs_get_resource_instance_details
</pre></td>
<td class="cellalignment416" headers="r7c1-t11 r1c2-t11">
<p>Obtains the resource instance details, such as resource name, cardinality, and degree, from the resource instance identifier that is used.</p>
</td>
</tr>
<tr class="cellalignment408">
<td class="cellalignment416" id="r8c1-t11" headers="r1c1-t11">
<pre dir="ltr">
clscrs_getnodename
</pre></td>
<td class="cellalignment416" headers="r8c1-t11 r1c2-t11">
<p>Obtains the node name.</p>
</td>
</tr>
<tr class="cellalignment408">
<td class="cellalignment416" id="r9c1-t11" headers="r1c1-t11">
<pre dir="ltr">
clscrs_init_crs
</pre></td>
<td class="cellalignment416" headers="r9c1-t11 r1c2-t11">
<p>Initializes a context for communications with Oracle Clusterware.</p>
</td>
</tr>
<tr class="cellalignment408">
<td class="cellalignment416" id="r10c1-t11" headers="r1c1-t11">
<pre dir="ltr">
clscrs_is_crs_admin
</pre></td>
<td class="cellalignment416" headers="r10c1-t11 r1c2-t11">
<p>Checks whether the user is an Oracle Clusterware administrator.</p>
</td>
</tr>
<tr class="cellalignment408">
<td class="cellalignment416" id="r11c1-t11" headers="r1c1-t11">
<pre dir="ltr">
clscrs_res_attr_count
</pre></td>
<td class="cellalignment416" headers="r11c1-t11 r1c2-t11">
<p>Obtains the number of attributes for a resource.</p>
</td>
</tr>
<tr class="cellalignment408">
<td class="cellalignment416" id="r12c1-t11" headers="r1c1-t11">
<pre dir="ltr">
clscrs_res_create
</pre></td>
<td class="cellalignment416" headers="r12c1-t11 r1c2-t11">
<p>Creates a new resource.</p>
</td>
</tr>
<tr class="cellalignment408">
<td class="cellalignment416" id="r13c1-t11" headers="r1c1-t11">
<pre dir="ltr">
clscrs_res_destroy
</pre></td>
<td class="cellalignment416" headers="r13c1-t11 r1c2-t11">
<p>Frees the memory for a resource.</p>
</td>
</tr>
<tr class="cellalignment408">
<td class="cellalignment416" id="r14c1-t11" headers="r1c1-t11">
<pre dir="ltr">
clscrs_res_get_attr
</pre></td>
<td class="cellalignment416" headers="r14c1-t11 r1c2-t11">
<p>Obtains a resource attribute for a resource.</p>
</td>
</tr>
<tr class="cellalignment408">
<td class="cellalignment416" id="r15c1-t11" headers="r1c1-t11">
<pre dir="ltr">
clscrs_res_get_attr_list
</pre></td>
<td class="cellalignment416" headers="r15c1-t11 r1c2-t11">
<p>Obtains the attribute list for a resource.</p>
</td>
</tr>
<tr class="cellalignment408">
<td class="cellalignment416" id="r16c1-t11" headers="r1c1-t11">
<pre dir="ltr">
clscrs_res_get_name
</pre></td>
<td class="cellalignment416" headers="r16c1-t11 r1c2-t11">
<p>Obtains the name of a resource.</p>
</td>
</tr>
<tr class="cellalignment408">
<td class="cellalignment416" id="r17c1-t11" headers="r1c1-t11">
<pre dir="ltr">
clscrs_res_get_op_status
</pre></td>
<td class="cellalignment416" headers="r17c1-t11 r1c2-t11">
<p>Obtains the status of an operation for an entity.</p>
</td>
</tr>
<tr class="cellalignment408">
<td class="cellalignment416" id="r18c1-t11" headers="r1c1-t11">
<pre dir="ltr">
clscrs_res_get_registered
</pre></td>
<td class="cellalignment416" headers="r18c1-t11 r1c2-t11">
<p>Obtains the registration status of a resource.</p>
</td>
</tr>
<tr class="cellalignment408">
<td class="cellalignment416" id="r19c1-t11" headers="r1c1-t11">
<pre dir="ltr">
clscrs_res_get_reslist
</pre></td>
<td class="cellalignment416" headers="r19c1-t11 r1c2-t11">
<p>Obtains the resource list for a resource.</p>
</td>
</tr>
<tr class="cellalignment408">
<td class="cellalignment416" id="r20c1-t11" headers="r1c1-t11">
<pre dir="ltr">
clscrs_res_set_attr_list
</pre></td>
<td class="cellalignment416" headers="r20c1-t11 r1c2-t11">
<p>Sets the attribute list for a resource.</p>
</td>
</tr>
<tr class="cellalignment408">
<td class="cellalignment416" id="r21c1-t11" headers="r1c1-t11">
<pre dir="ltr">
clscrs_res_set_reslist
</pre></td>
<td class="cellalignment416" headers="r21c1-t11 r1c2-t11">
<p>Sets the resource list for a resource.</p>
</td>
</tr>
<tr class="cellalignment408">
<td class="cellalignment416" id="r22c1-t11" headers="r1c1-t11">
<pre dir="ltr">
clscrs_reslist_append
</pre></td>
<td class="cellalignment416" headers="r22c1-t11 r1c2-t11">
<p>Adds a resource to a resource list.</p>
</td>
</tr>
<tr class="cellalignment408">
<td class="cellalignment416" id="r23c1-t11" headers="r1c1-t11">
<pre dir="ltr">
clscrs_reslist_count
</pre></td>
<td class="cellalignment416" headers="r23c1-t11 r1c2-t11">
<p>Counts the number of resources in a resource list.</p>
</td>
</tr>
<tr class="cellalignment408">
<td class="cellalignment416" id="r24c1-t11" headers="r1c1-t11">
<pre dir="ltr">
clscrs_reslist_create
</pre></td>
<td class="cellalignment416" headers="r24c1-t11 r1c2-t11">
<p>Creates a new resource list.</p>
</td>
</tr>
<tr class="cellalignment408">
<td class="cellalignment416" id="r25c1-t11" headers="r1c1-t11">
<pre dir="ltr">
clscrs_reslist_delete_res
</pre></td>
<td class="cellalignment416" headers="r25c1-t11 r1c2-t11">
<p>Deletes a resource from a resource list.</p>
</td>
</tr>
<tr class="cellalignment408">
<td class="cellalignment416" id="r26c1-t11" headers="r1c1-t11">
<pre dir="ltr">
clscrs_reslist_destroy
</pre></td>
<td class="cellalignment416" headers="r26c1-t11 r1c2-t11">
<p>Frees the memory for a resource list.</p>
</td>
</tr>
<tr class="cellalignment408">
<td class="cellalignment416" id="r27c1-t11" headers="r1c1-t11">
<pre dir="ltr">
clscrs_reslist_find
</pre></td>
<td class="cellalignment416" headers="r27c1-t11 r1c2-t11">
<p>Finds a resource in a resource list.</p>
</td>
</tr>
<tr class="cellalignment408">
<td class="cellalignment416" id="r28c1-t11" headers="r1c1-t11">
<pre dir="ltr">
clscrs_reslist_first
</pre></td>
<td class="cellalignment416" headers="r28c1-t11 r1c2-t11">
<p>Obtains the first resource on a resource list.</p>
</td>
</tr>
<tr class="cellalignment408">
<td class="cellalignment416" id="r29c1-t11" headers="r1c1-t11">
<pre dir="ltr">
clscrs_reslist_next
</pre></td>
<td class="cellalignment416" headers="r29c1-t11 r1c2-t11">
<p>Obtains the current next resource from the resource list.</p>
</td>
</tr>
<tr class="cellalignment408">
<td class="cellalignment416" id="r30c1-t11" headers="r1c1-t11">
<pre dir="ltr">
clscrs_sp_get
</pre></td>
<td class="cellalignment416" headers="r30c1-t11 r1c2-t11">
<p>Obtains the name and value components of a stringpair.</p>
</td>
</tr>
<tr class="cellalignment408">
<td class="cellalignment416" id="r31c1-t11" headers="r1c1-t11">
<pre dir="ltr">
clscrs_sp_set
</pre></td>
<td class="cellalignment416" headers="r31c1-t11 r1c2-t11">
<p>Changes the value part of a stringpair.</p>
</td>
</tr>
<tr class="cellalignment408">
<td class="cellalignment416" id="r32c1-t11" headers="r1c1-t11">
<pre dir="ltr">
clscrs_splist_append
</pre></td>
<td class="cellalignment416" headers="r32c1-t11 r1c2-t11">
<p>Adds a new stringpair (sp) to a stringpair list (splist).</p>
</td>
</tr>
<tr class="cellalignment408">
<td class="cellalignment416" id="r33c1-t11" headers="r1c1-t11">
<pre dir="ltr">
clscrs_splist_create
</pre></td>
<td class="cellalignment416" headers="r33c1-t11 r1c2-t11">
<p>Creates a new stringpair list.</p>
</td>
</tr>
<tr class="cellalignment408">
<td class="cellalignment416" id="r34c1-t11" headers="r1c1-t11">
<pre dir="ltr">
clscrs_splist_delete_sp
</pre></td>
<td class="cellalignment416" headers="r34c1-t11 r1c2-t11">
<p>Deletes a stringpair (sp) from a stringpair list (splist).</p>
</td>
</tr>
<tr class="cellalignment408">
<td class="cellalignment416" id="r35c1-t11" headers="r1c1-t11">
<pre dir="ltr">
clscrs_splist_first
</pre></td>
<td class="cellalignment416" headers="r35c1-t11 r1c2-t11">
<p>Obtains the first stringpair (sp) from a stringpair list (splist).</p>
</td>
</tr>
<tr class="cellalignment408">
<td class="cellalignment416" id="r36c1-t11" headers="r1c1-t11">
<pre dir="ltr">
clscrs_splist_replace
</pre></td>
<td class="cellalignment416" headers="r36c1-t11 r1c2-t11">
<p>Replaces the value for a stringpair (sp) in a stringpair list (splist).</p>
</td>
</tr>
<tr class="cellalignment408">
<td class="cellalignment416" id="r37c1-t11" headers="r1c1-t11">
<pre dir="ltr">
clscrs_term_crs
</pre></td>
<td class="cellalignment416" headers="r37c1-t11 r1c2-t11">
<p>Releases a context for communications with CRS.</p>
</td>
</tr>
<tr class="cellalignment408">
<td class="cellalignment416" id="r38c1-t11" headers="r1c1-t11">
<pre dir="ltr">
clscrs_type_create
</pre></td>
<td class="cellalignment416" headers="r38c1-t11 r1c2-t11">
<p>Creates a new resource type.</p>
</td>
</tr>
<tr class="cellalignment408">
<td class="cellalignment416" id="r39c1-t11" headers="r1c1-t11">
<pre dir="ltr">
clscrs_type_get_attr
</pre></td>
<td class="cellalignment416" headers="r39c1-t11 r1c2-t11">
<p>Obtains the value/properties of a resource type attribute.</p>
</td>
</tr>
<tr class="cellalignment408">
<td class="cellalignment416" id="r40c1-t11" headers="r1c1-t11">
<pre dir="ltr">
clscrs_type_set_attr
</pre></td>
<td class="cellalignment416" headers="r40c1-t11 r1c2-t11">
<p>Adds an attribute to a resource type.</p>
</td>
</tr>
<tr class="cellalignment408">
<td class="cellalignment416" id="r41c1-t11" headers="r1c1-t11">
<pre dir="ltr">
clscrs_compfilter_create
</pre></td>
<td class="cellalignment416" headers="r41c1-t11 r1c2-t11">
<p>Constructs a simple filter that compares two values.</p>
</td>
</tr>
<tr class="cellalignment408">
<td class="cellalignment416" id="r42c1-t11" headers="r1c1-t11">
<pre dir="ltr">
clscrs_entity_id_create
</pre></td>
<td class="cellalignment416" headers="r42c1-t11 r1c2-t11">
<p>Creates an entity identifier that identifies a CRS entity such as a resource, resource type, server group, and so on.</p>
</td>
</tr>
<tr class="cellalignment408">
<td class="cellalignment416" id="r43c1-t11" headers="r1c1-t11">
<pre dir="ltr">
clscrs_register_serverpool
</pre></td>
<td class="cellalignment416" headers="r43c1-t11 r1c2-t11">
<p>Registers a server pool for the input list of servers.</p>
</td>
</tr>
<tr class="cellalignment408">
<td class="cellalignment416" id="r44c1-t11" headers="r1c1-t11">
<pre dir="ltr">
clscrs_register_type
</pre></td>
<td class="cellalignment416" headers="r44c1-t11 r1c2-t11">
<p>Registers the resource types in the input resource list.</p>
</td>
</tr>
<tr class="cellalignment408">
<td class="cellalignment416" id="r45c1-t11" headers="r1c1-t11">
<pre dir="ltr">
clscrs_relocate_server
</pre></td>
<td class="cellalignment416" headers="r45c1-t11 r1c2-t11">
<p>Relocates a list of servers.</p>
</td>
</tr>
<tr class="cellalignment408">
<td class="cellalignment416" id="r46c1-t11" headers="r1c1-t11">
<pre dir="ltr">
clscrs_res_get_node_list
</pre></td>
<td class="cellalignment416" headers="r46c1-t11 r1c2-t11">
<p>Obtains the nodelist currently hosting the resource.</p>
</td>
</tr>
<tr class="cellalignment408">
<td class="cellalignment416" id="r47c1-t11" headers="r1c1-t11">
<pre dir="ltr">
clscrs_res_set_attr
</pre></td>
<td class="cellalignment416" headers="r47c1-t11 r1c2-t11">
<p>Sets a resource attribute for a resource.</p>
</td>
</tr>
<tr class="cellalignment408">
<td class="cellalignment416" id="r48c1-t11" headers="r1c1-t11">
<pre dir="ltr">
clscrs_sp_get_value
</pre></td>
<td class="cellalignment416" headers="r48c1-t11 r1c2-t11">
<p>Obtains the value component of a stringpair.</p>
</td>
</tr>
<tr class="cellalignment408">
<td class="cellalignment416" id="r49c1-t11" headers="r1c1-t11">
<pre dir="ltr">
clscrs_splist_count
</pre></td>
<td class="cellalignment416" headers="r49c1-t11 r1c2-t11">
<p>Counts the number of stringpairs (sp) in a stringpair list (splist).</p>
</td>
</tr>
<tr class="cellalignment408">
<td class="cellalignment416" id="r50c1-t11" headers="r1c1-t11">
<pre dir="ltr">
clscrs_splist_create_and_set
</pre></td>
<td class="cellalignment416" headers="r50c1-t11 r1c2-t11">
<p>Creates a new stringpair list (splist) and set the name and value for the first stringpair in the list.</p>
</td>
</tr>
<tr class="cellalignment408">
<td class="cellalignment416" id="r51c1-t11" headers="r1c1-t11">
<pre dir="ltr">
clscrs_splist_destroy
</pre></td>
<td class="cellalignment416" headers="r51c1-t11 r1c2-t11">
<p>Frees the memory for a stringpair list (splist).</p>
</td>
</tr>
<tr class="cellalignment408">
<td class="cellalignment416" id="r52c1-t11" headers="r1c1-t11">
<pre dir="ltr">
clscrs_splist_find
</pre></td>
<td class="cellalignment416" headers="r52c1-t11 r1c2-t11">
<p>Finds the value for a stringpair (sp) in a stringpair list (splist).</p>
</td>
</tr>
<tr class="cellalignment408">
<td class="cellalignment416" id="r53c1-t11" headers="r1c1-t11">
<pre dir="ltr">
clscrs_splist_next
</pre></td>
<td class="cellalignment416" headers="r53c1-t11 r1c2-t11">
<p>Obtains the current next stringpair (sp) from a stringpair list (splist). Current next SP is effectively the next SP in the SPLIST. The list iterator is stored within the API and is not exposed.</p>
</td>
</tr>
<tr class="cellalignment408">
<td class="cellalignment416" id="r54c1-t11" headers="r1c1-t11">
<pre dir="ltr">
clscrs_stat2
</pre></td>
<td class="cellalignment416" headers="r54c1-t11 r1c2-t11">
<p>Obtains information about the entities identified in rqlist.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="refsect1" --></div>
<!-- class="refentry" --></div>
<!-- class="appendix" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment407">
<tr>
<td class="cellalignment416">
<table class="cellalignment412">
<tr>
<td class="cellalignment411"><a href="crsref.htm"><img width="24" height="24" src="../../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment411"><a href="ocrsyntax.htm"><img width="24" height="24" src="../../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;2007, 2015,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment419">
<table class="cellalignment410">
<tr>
<td class="cellalignment411"><a href="../../index.htm"><img width="24" height="24" src="../../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment411"><a href="../../nav/portal_booklist.htm"><img width="24" height="24" src="../../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment411"><a href="toc.htm"><img width="24" height="24" src="../../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment411"><a href="index.htm"><img width="24" height="24" src="../../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment411"><a href="../../nav/mindx.htm"><img width="24" height="24" src="../../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment411"><a href="../../dcommon/html/feedback.htm"><img width="24" height="24" src="../../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>
</body>
</html>
