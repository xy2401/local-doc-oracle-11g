<!DOCTYPE html>
<html lang="en" >
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1">
<meta charset="utf-8">
<title>Making Applications Highly Available Using Oracle Clusterware</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Merged Version 1056" />
<meta name="dcterms.created" content="2015-06-03T16:55:36Z" />
<meta name="robots" content="all" />
<meta name="dcterms.title" content="Clusterware Administration and Deployment Guide" />
<meta name="dcterms.identifier" content="E41959-04" />
<meta name="dcterms.isVersionOf" content="CWADD" />
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;2007, 2015,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved." />
<link rel="Start" href="../../index.htm" title="Home" type="text/html" />
<link rel="Copyright" href="../../dcommon/html/cpyr.htm" title="Copyright" type="text/html" />

<script type="application/javascript"  src="../../dcommon/js/headfoot.js"></script>
<script type="application/javascript"  src="../../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html" />
<link rel="Index" href="index.htm" title="Index" type="text/html" />
<link rel="Glossary" href="glossary.htm" title="Glossary" type="text/html" />
<link rel="Prev" href="clonecluster.htm" title="Previous" type="text/html" />
<link rel="Next" href="cvu.htm" title="Next" type="text/html" />
<link rel="alternate" href="../e41959.pdf" title="PDF version" type="application/pdf" />
<link rel="schema.dcterms" href="http://purl.org/dc/terms/" />
<link rel="stylesheet" href="../../dcommon/css/fusiondoc.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/header.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/footer.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/fonts.css">
<link rel="stylesheet" href="../../dcommon/css/foundation.css">
<link rel="stylesheet" href="../../dcommon/css/codemirror.css">
<link rel="stylesheet" type="text/css" title="Default" href="../../nav/css/html5.css">
<link rel="stylesheet" href="../../dcommon/css/respond-480-tablet.css">
<link rel="stylesheet" href="../../dcommon/css/respond-768-laptop.css">
<link rel="stylesheet" href="../../dcommon/css/respond-1140-deskop.css">
<script type="application/javascript" src="../../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">11/21</span> <!-- End Header -->
<div id="CWADD91277" class="chapter"><a id="CHDGHGJA"></a>
<h1 class="chapter"><span class="secnum">6</span> Making Applications Highly Available Using Oracle Clusterware</h1>
<p>When an application, process, or server fails in a cluster, you want the disruption to be as short as possible, if not completely unknown to users. For example, when an application fails on a server, that application can be restarted on another server in the cluster, minimizing or negating any disruption in the use of that application. Similarly, if a server in a cluster fails, then all of the applications and processes running on that server must be able to fail over to another server to continue providing service to the users. Using customizable <a href="glossary.htm#CBAHDGEA"><span class="xrefglossterm">action script</span></a>s and application agent programs, as well as resource attributes that you assign to applications and processes, Oracle Clusterware can manage all these entities to ensure high availability.</p>
<p>This chapter explains how to use Oracle Clusterware to start, stop, monitor, restart, and relocate applications. Oracle Clusterware is the underlying cluster solution for Oracle Real Application Clusters (Oracle RAC). The same functionality and principles you use to manage Oracle RAC databases are applied to the management of applications.</p>
<p>This chapter includes the following topics:</p>
<ul>
<li>
<p><a href="#CHDBGDAD">Oracle Clusterware Resources and Agents</a></p>
</li>
<li>
<p><a href="#BGBHIBEE">Overview of Using Oracle Clusterware to Enable High Availability</a></p>
</li>
<li>
<p><a href="#BGBEFFII">Registering an Application as a Resource</a></p>
</li>
<li>
<p><a href="#BGBCCEAE">Managing Resources</a></p>
</li>
<li>
<p><a href="#BGBGEBAD">Managing Automatic Restart of Oracle Clusterware Resources</a></p>
</li>
</ul>
<a id="CHDBGDAD"></a>
<div id="CWADD92084" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Oracle Clusterware Resources and Agents</h2>
<p>This section discusses the framework that Oracle Clusterware uses to monitor and manage <a href="glossary.htm#CBAIFEGI"><span class="xrefglossterm">resource</span></a>s, in order to ensure high application availability.</p>
<p>This section includes the following topics:</p>
<ul>
<li>
<p><a href="#BGBGCEEB">Resources</a></p>
</li>
<li>
<p><a href="#BGBEHFDB">Resource Types</a></p>
</li>
<li>
<p><a href="#CHDHDJBF">Agents</a></p>
</li>
<li>
<p><a href="#BCEHEDAB">Action Scripts</a></p>
</li>
<li>
<p><a href="#CHDGIDCA">Building an Agent</a></p>
</li>
<li>
<p><a href="#BGBJDDCE">Registering a Resource in Oracle Clusterware</a></p>
</li>
</ul>
<a id="BGBGCEEB"></a>
<div id="CWADD91279" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Resources</h3>
<p>Oracle Clusterware manages applications and processes as <a id="sthref266"></a>resources that you register with Oracle Clusterware. The number of resources you register with Oracle Clusterware to manage an application depends on the application. Applications that consist of only one process are usually represented by only one resource. More complex applications, built on multiple processes or components, may require multiple resources.</p>
<p>When you register an application as a resource in Oracle Clusterware, you define how Oracle Clusterware manages the application using resource attributes you ascribe to the resource. The frequency with which the resource is checked and the number of attempts to restart a resource on the same server after a failure before attempting to start it on another server (failover) are examples of resource attributes. The registration information also includes a path to an action script or application-specific action program that Oracle Clusterware calls to start, stop, check, and clean up the application.</p>
<p>An action script is a shell script (a batch script in Windows) that a generic script agent provided by Oracle Clusterware calls. An application-specific agent is usually a C or C++ program that calls Oracle Clusterware-provided APIs directly.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="resatt.htm#CHDCECHH">Appendix B, "Oracle Clusterware Resource Reference"</a> for an example of an action script</div>
<p>Oracle Clusterware 11<span class="italic">g</span> release 2 (11.2) uses agent programs (agents) to manage resources and includes the following built-in agents so that you can use scripts to protect an application:</p>
<ul>
<li>
<p><a id="sthref267"></a><a id="sthref268"></a><code dir="ltr"><span class="codeinlinebold">scriptagent</span></code>: Use this agent (<code dir="ltr">scriptagent.exe</code> in Windows) to use shell or batch scripts to protect an application. Both the <code dir="ltr">cluster_resource</code> and <code dir="ltr">local_resource</code> resource types are configured to use this agent, and any resources of these types automatically take advantage of this agent.</p>
</li>
<li>
<p><a id="sthref269"></a><a id="sthref270"></a><a id="sthref271"></a><code dir="ltr"><span class="codeinlinebold">appagent</span></code>: This agent (<code dir="ltr">appagent.exe</code> in Windows) automatically protects any resources of the <code dir="ltr">application</code> resource type used in previous versions of Oracle Clusterware. You are not required to configure anything to take advantage of the agent. It invokes action scripts in the manner done with previous versions of Oracle Clusterware and should only be used for the <code dir="ltr">application</code> resource type.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
Oracle recommends that you use <code dir="ltr">scriptagent</code> for all resources of types other than <code dir="ltr">application</code>. Oracle provides the application agent for backward compatibility with the deprecated <code dir="ltr">application</code> resource type.</div>
</li>
</ul>
<p>By default, all resources not of the <code dir="ltr">application</code> resource type, use the script agent, unless you override this behavior by creating a new resource type and specifying a different agent as part of the resource type specification (using the <code dir="ltr">AGENT_FILENAME</code> attribute).</p>
<p>Additionally, you can create your own agents to manage your resources in any manner you want.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#BGBEHFDB">"Resource Types"</a> for more information about resource types and <a href="#CHDGIDCA">"Building an Agent"</a> for more information about building custom agents</div>
</div>
<!-- class="sect2" -->
<a id="BGBEHFDB"></a>
<div id="CWADD91280" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Resource Types</h3>
<p><a id="sthref272"></a>Generally, all resources are unique but some resources may have common attributes. Oracle Clusterware uses resource types to organize these similar resources. Benefits that resource types provide are:</p>
<ul>
<li>
<p>Manage only necessary resource attributes</p>
</li>
<li>
<p>Manage all resources based on the resource type</p>
</li>
</ul>
<p>Every resource that you register in Oracle Clusterware must have a certain resource type. In addition to the resource types included in Oracle Clusterware, you can define custom resource types using the Oracle Clusterware Control (CRSCTL) utility. The included resource types are:</p>
<ul>
<li>
<p><span class="bold">Local resource</span>: Instances of local resources&mdash;type name is <a id="sthref273"></a><a id="sthref274"></a><a id="sthref275"></a><a id="sthref276"></a><code dir="ltr">local_resource</code>&mdash;run on each server of the cluster. When a server joins the cluster, Oracle Clusterware automatically extends local resources to have instances tied to the new server. When a server leaves the cluster, Oracle Clusterware automatically sheds the instances of local resources that ran on the departing server. Instances of local resources are pinned to their servers; they do not fail over from one server to another.</p>
</li>
<li>
<p><span class="bold">Cluster resource</span>: Cluster-aware resource types&mdash;type name is <a id="sthref277"></a><a id="sthref278"></a><a id="sthref279"></a><a id="sthref280"></a><code dir="ltr">cluster_resource</code>&mdash;are aware of the cluster environment and are subject to <a href="glossary.htm#CHDEEJEG"><span class="xrefglossterm">cardinality</span></a> and cross-server switchover and failover.</p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="crsref.htm#CHDGADEH">Appendix E, "CRSCTL Utility Reference"</a> for more information about using CRSCTL to add resource types</p>
</li>
<li>
<p><a href="#BGBCBJEH">"Resource States"</a> for more information about resource state</p>
</li>
</ul>
</div>
<div class="infobox-note">
<p class="notep1">Note:</p>
Previous versions of Oracle Clusterware only supported the <span class="italic">application</span> resource type. This resource type still exists, but only for backward compatibility. Oracle recommends that you register application-type resources using the <code dir="ltr">cluster_resource</code> resource type in Oracle Clusterware 11<span class="italic">g</span> release 2 (11.2). If you decide not to register your application-type resources using the <code dir="ltr">cluster_resource</code> resource type, then consult the documentation that corresponds to those applications for administration information.</div>
</div>
<!-- class="sect2" -->
<a id="CHDHDJBF"></a>
<div id="CWADD92082" class="sect2">
<h3 class="sect2">Agents</h3>
<p>Oracle Clusterware manages applications when they are registered as resources with Oracle Clusterware. Oracle Clusterware has access to application-specific primitives that have the ability to start, stop, and monitor a specific resource. Oracle Clusterware runs all resource-specific commands through an entity called an <a id="sthref281"></a><span class="italic">agent</span>.</p>
<p>An agent is a process that contains the agent framework and user code to manage resources. The <a id="sthref282"></a><span class="italic">agent framework</span> is a library that enables you to plug in your application-specific code to manage customized applications. You program all of the actual application management functions, such as starting, stopping and checking the health of an application, into the agent. These functions are referred to as <a id="sthref283"></a><span class="italic">entry points</span>.</p>
<p>The agent framework is responsible for invoking these entry point functions on behalf of Oracle Clusterware. Agent developers can use these entry points to plug in the required functionality for a specific resource regarding how to start, stop, and monitor a resource. Agents are capable of managing multiple resources.</p>
<p>Agent developers can set the following entry points as callbacks to their code:</p>
<ul>
<li>
<p><span class="bold">START</span>: The START <a id="sthref284"></a>entry point acts to bring a resource online. The agent framework calls this entry point whenever it receives the start command from Oracle Clusterware.</p>
</li>
<li>
<p><span class="bold">STOP</span>: The <a id="sthref285"></a>STOP entry points acts to gracefully bring down a resource. The agent framework calls this entry point whenever it receives the stop command from Oracle Clusterware.</p>
</li>
<li>
<p><span class="bold">CHECK</span>: The <a id="sthref286"></a><a id="sthref287"></a>CHECK (monitor) entry point acts to monitor the health of a resource. The agent framework periodically calls this entry point. If it notices any state change during this action, then the agent framework notifies Oracle Clusterware about the change in the state of the specific resource.</p>
</li>
<li>
<p><span class="bold">CLEAN</span>: The <a id="sthref288"></a>CLEAN entry point acts whenever there is a need to clean up a resource. It is a non-graceful operation that is invoked when users must forcefully terminate a resource. This command cleans up the resource-specific environment so that the resource can be restarted.</p>
</li>
<li>
<p><span class="bold">ABORT</span>: If <a id="sthref289"></a>any of the other entry points hang, the agent framework calls the ABORT entry point to abort the ongoing action. If the agent developer does not supply an abort function, then the agent framework exits the agent program.</p>
</li>
</ul>
<p>START, STOP, CHECK, and CLEAN are mandatory entry points and the agent developer must provide these entry points when building an agent. Agent developers have several options to implement these entry points, including using C, C++, or scripts. It is also possible to develop agents that use both C or C++ and script-type entry points. When initializing the agent framework, if any of the mandatory entry points are not provided, then the agent framework invokes a script pointed to by the <code dir="ltr">ACTION_SCRIPT</code> resource attribute.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="resatt.htm#CHDHEAGJ">"ACTION_SCRIPT"</a> for information about this resource attribute</div>
<p>At any given time, the agent framework invokes only one entry point per application. If that entry point hangs, then the agent framework calls the ABORT entry point to abort the current operation. The agent framework periodically invokes the CHECK entry point to determine the state of the resource. This entry point must return one of the following states as the resource state:</p>
<ul>
<li>
<p><span class="bold">CLSAGFW_ONLINE</span>: The CHECK <a id="sthref290"></a>entry point returns ONLINE if the resource was brought up successfully and is currently in a functioning state. The agent framework continues to monitor the resource when it is in this state. This state has a numeric value of 0 for the <code dir="ltr">scriptagent</code>.</p>
</li>
<li>
<p><span class="bold">CLSAGFW_UNPLANNED_OFFLINE/CLSAGFW_PLANNED_OFFLINE</span>: The <a id="sthref291"></a><a id="sthref292"></a>OFFLINE state indicates that the resource is not currently running. These two states have numeric values of 1 and 2, respectively, for the <code dir="ltr">scriptagent</code>.</p>
<p>Two distinct categories exist to describe an resource's offline state: <span class="italic">planned</span> and <span class="italic">unplanned</span>.</p>
<p>When the state of the resource transitions to OFFLINE through Oracle Clusterware, then it is assumed that the <span class="italic">intent</span> for this resource is to be offline (<code dir="ltr">TARGET=OFFLINE</code>), regardless of which value is returned from the CHECK entry point. However, when an agent detects that the state of a resource has changed independent of Oracle Clusterware (such as somebody stopping the resource through a non-Oracle interface), then the intent must be carried over from the agent to the Cluster Ready Services daemon (<code dir="ltr">crsd</code>). The intent then becomes the determining factor for the following:</p>
<ul>
<li>
<p>Whether to keep or to change the value of the resource's <code dir="ltr">TARGET</code> resource attribute. PLANNED_OFFLINE indicates that the <code dir="ltr">TARGET</code> resource attribute must be changed to OFFLINE <span class="italic">only if</span> the resource was running before. If the resource was not running (<code dir="ltr">STATE=OFFLINE</code>, <code dir="ltr">TARGET=OFFLINE</code>) and a request comes in to start it, then the value of the <code dir="ltr">TARGET</code> resource attribute changes to ONLINE. The start request then goes to the agent and the agent reports back to Oracle Clusterware a PLANNED_OFFLINE resource state, and the value of the <code dir="ltr">TARGET</code> resource attribute remains ONLINE. UNPLANNED_OFFLINE does not change the <code dir="ltr">TARGET</code> attribute.</p>
</li>
<li>
<p>Whether to leave the resource's state as UNPLANNED_OFFLINE or attempt to recover the resource by restarting it locally or failing it over to a another server in the cluster. The PLANNED_OFFLINE state makes <code dir="ltr">crsd</code> leave the resource as is, whereas the UNPLANNED_OFFLINE state prompts resource recovery.</p>
</li>
</ul>
</li>
<li>
<p><span class="bold">CLSAGFW_UNKNOWN</span>: The CHECK entry point returns <a id="sthref293"></a>UNKNOWN if the current state of the resource cannot be determined. In response to this state, Oracle Clusterware does not attempt to failover or to restart the resource. The agent framework continues to monitor the resource if the previous state of the resource was either ONLINE or PARTIAL. This state has a numeric value of 3 for the <code dir="ltr">scriptagent</code>.</p>
</li>
<li>
<p><span class="bold">CLSAGFW_PARTIAL</span>: The CHECK entry point returns <a id="sthref294"></a>PARTIAL when it knows that a resource is partially ONLINE and some of its services are available. Oracle Clusterware considers this state as partially ONLINE and does not attempt to failover or to restart the resource. The agent framework continues to monitor the resource in this state. This state has a numeric value of 4 for the <code dir="ltr">scriptagent</code>.</p>
</li>
<li>
<p><span class="bold">CLSAGFW_FAILED</span>: The CHECK entry point returns <a id="sthref295"></a>FAILED whenever it detects that a resource is not in a functioning state and some of its components have failed and some clean up is required to restart the resource. In response to this state, Oracle Clusterware calls the CLEAN action to clean up the resource. After the CLEAN action finishes, the state of the resource is expected to be OFFLINE. Next, depending on the policy of the resource, Oracle Clusterware may attempt to failover or restart the resource. Under no circumstances does the agent framework monitor failed resources. This state has a numeric value of 5 for the <code dir="ltr">scriptagent</code>.</p>
</li>
</ul>
<p>The agent framework implicitly monitors resources in the states listed in <a href="#CHDEJIEE">Table 6-1</a> at regular intervals, as specified by the <code dir="ltr">CHECK_INTERVAL</code> or <code dir="ltr">OFFLINE_CHECK_INTERVAL</code> resource attributes.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="resatt.htm#CHDECBJC">"CHECK_INTERVAL"</a> and <a href="resatt.htm#CHDFGAAB">"OFFLINE_CHECK_INTERVAL"</a> for more information about these resource attributes</div>
<div id="CWADD92083" class="tblhruleformal">
<p class="titleintable"><a id="sthref296"></a><a id="CHDEJIEE"></a>Table 6-1 Agent Framework Monitoring Characteristics</p>
<table class="cellalignment414" title="Agent Framework Monitoring Characteristics" summary="This table lists the characteristics with which the agent framework monitors resources in certain states." dir="ltr">
<thead>
<tr class="cellalignment408">
<th class="cellalignment415" id="r1c1-t9">State</th>
<th class="cellalignment415" id="r1c2-t9">Condition</th>
<th class="cellalignment415" id="r1c3-t9">Frequency</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment408">
<td class="cellalignment416" id="r2c1-t9" headers="r1c1-t9">
<p>ONLINE</p>
</td>
<td class="cellalignment416" headers="r2c1-t9 r1c2-t9">
<p>Always</p>
</td>
<td class="cellalignment416" headers="r2c1-t9 r1c3-t9">
<p><code dir="ltr">CHECK_INTERVAL</code></p>
</td>
</tr>
<tr class="cellalignment408">
<td class="cellalignment416" id="r3c1-t9" headers="r1c1-t9">
<p>PARTIAL</p>
</td>
<td class="cellalignment416" headers="r3c1-t9 r1c2-t9">
<p>Always</p>
</td>
<td class="cellalignment416" headers="r3c1-t9 r1c3-t9">
<p><code dir="ltr">CHECK_INTERVAL</code></p>
</td>
</tr>
<tr class="cellalignment408">
<td class="cellalignment416" id="r4c1-t9" headers="r1c1-t9">
<p>OFFLINE</p>
</td>
<td class="cellalignment416" headers="r4c1-t9 r1c2-t9">
<p>Only if the value of the <code dir="ltr">OFFLINE_CHECK_INTERVAL</code> resource attribute is greater than 0.</p>
</td>
<td class="cellalignment416" headers="r4c1-t9 r1c3-t9">
<p><code dir="ltr">OFFLINE_CHECK_INTERVAL</code></p>
</td>
</tr>
<tr class="cellalignment408">
<td class="cellalignment416" id="r5c1-t9" headers="r1c1-t9">
<p>UNKNOWN</p>
</td>
<td class="cellalignment416" headers="r5c1-t9 r1c2-t9">
<p>Only monitored if the resource was previously being monitored as a result of any one of the previously mentioned conditions.</p>
</td>
<td class="cellalignment416" headers="r5c1-t9 r1c3-t9">
<p>Whatever the value of either the <code dir="ltr">CHECK_INTERVAL</code> or <code dir="ltr">OFFLINE_CHECK_INTERVAL</code> attributes.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblhruleformal" -->
<p>Whenever an agent starts, the state of all the resources it monitors is set to UNKNOWN. After receiving an initial probe request from Oracle Clusterware, the agent framework executes the CHECK entry point for all of the resources to determine their current states.</p>
<p>Once the CHECK action successfully completes for a resource, the state of the resource transitions to one of the previously mentioned states. The agent framework then starts resources based on commands issued from Oracle Clusterware. After the completion of every action, the agent framework invokes the CHECK action to determine the current resource state. If the resource is in one of the monitored states listed in <a href="#CHDEJIEE">Table 6-1</a>, then the agent framework periodically executes the CHECK entry point to check for changes in resource state.</p>
<p>By default, the agent framework does not monitor resources that are offline. However, if the value of the <code dir="ltr">OFFLINE_CHECK_INTERVAL</code> attribute is greater than 0, then the agent framework monitors offline resources.</p>
</div>
<!-- class="sect2" -->
<a id="BCEHEDAB"></a>
<div id="CWADD92142" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Action Scripts</h3>
<p>An <a id="sthref297"></a>action script defines one or more actions to start, stop, check, or clean resources. The agent framework invokes these actions in the absence of the C/C++ actions. Using action scripts, you can build an agent that contains the C/C++ entry points, as well as the script entry points. If all of the actions are defined in the action script, then you can use the script agent to invoke the actions defined in any action scripts.</p>
<p>Before invoking the action defined in the action script, the agent framework exports all the necessary attributes from the resource profile to the environment. Action scripts can log messages to the <code dir="ltr">stdout/stderr</code>, and the agent framework prints those messages in the agent logs. However, action scripts can use special tags to send the progress, warning, or error messages to the <code dir="ltr">crs*</code> client tools by prefixing one of the following tags to the messages printed to <code dir="ltr">stdout/stderr</code>:</p>
<pre dir="ltr">
CRS_WARNING
CRS_ERROR
CRS_PROGRESS
</pre>
<p>The agent framework strips out the prefixed tag when it sends the final message to the <code dir="ltr">crs*</code> clients.</p>
<p>Resource attributes can be accessed from within an action script as environment variables prefixed with <code dir="ltr">_CRS_</code>. For example, the <code dir="ltr">START_TIMEOUT</code> attribute becomes an environment variable named <code dir="ltr">_CRS_START_TIMEOUT</code>.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><code dir="ltr"><a href="crsref.htm#CHDDCDAJ">"crsctl start resource"</a></code> and <code dir="ltr"><a href="crsref.htm#CHDCDADG">"crsctl stop resource"</a></code> for more information about using the <code dir="ltr">-env</code> option as a way to override attribute values for a single start or stop action, respectively</p>
</li>
<li>
<p><a href="resatt.htm#CHDGJFJG">Example B-3</a> for an example of an action script for an agent</p>
</li>
</ul>
</div>
</div>
<!-- class="sect2" -->
<a id="CHDGIDCA"></a>
<div id="CWADD92085" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Building an Agent</h3>
<p>Building an agent for a specific application involves the following steps:</p>
<ol>
<li>
<p>Implement the agent framework entry points either in scripts, C, or C++.</p>
</li>
<li>
<p>Build the agent executable (for C and C++ agents).</p>
</li>
<li>
<p>Collect all the parameters needed by the entry points and define a new resource type. Set the <code dir="ltr">AGENT_FILENAME</code> attribute to the absolute path of the newly built executable.</p>
</li>
</ol>
</div>
<!-- class="sect2" -->
<a id="BGBJDDCE"></a>
<div id="CWADD91281" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Registering a Resource in Oracle Clusterware</h3>
<p><a id="sthref298"></a><a id="sthref299"></a>Register resources in Oracle Clusterware 11<span class="italic">g</span> release 2 (11.2) using the <code dir="ltr">crsctl add resource</code> command.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
The <code dir="ltr">CRS_REGISTER</code> and <code dir="ltr">CRS_PROFILE</code> commands are still available in the Oracle Clusterware home but are deprecated for this release.</div>
<p>To register an application as a resource:</p>
<pre dir="ltr">
$ crsctl add resource <span class="italic">resource_name</span> -type <span class="italic">resource_type</span> [-file <span class="italic">file_path</span>] | [-attr "<span class="italic">attribute_name</span>='<span class="italic">attribute_value</span>', <span class="italic">attribute_name</span>='<span class="italic">attribute_value</span>', ..."]
</pre>
<p>Choose a name for the resource based on the application for which it is being created. For example, if you create a resource for an Apache Web server, then you might name the resource <code dir="ltr">myApache</code>.</p>
<p>The name of the resource type follows the <code dir="ltr">-type</code> option. You can specify resource attributes in either a text file specified with the <code dir="ltr">-file</code> option or in a comma-delimited list of resource attribute-value pairs enclosed in double quotation marks (<code dir="ltr">""</code>) following the <code dir="ltr">-attr</code> option. You must enclose space- or comma-delimited attribute names and values enclosed in parentheses in single quotation marks (<code dir="ltr">''</code>).</p>
<p>The following is an example of an attribute file:</p>
<pre dir="ltr">
PLACEMENT=favored
HOSTING_MEMBERS=node1 node2 node3
RESTART_ATTEMPTS@CARDINALITYID(1)=0
RESTART_ATTEMPTS@CARDINALITYID(2)=0
FAILURE_THRESHOLD@CARDINALITYID(1)=2
FAILURE_THRESHOLD@CARDINALITYID(2)=4
FAILURE_INTERVAL@CARDINALITYID(1)=300
FAILURE_INTERVAL@CARDINALITYID(2)=500
CHECK_INTERVAL=2
CARDINALITY=2
</pre>
<p>The following is an example of using the <code dir="ltr">-attr</code> option:</p>
<pre dir="ltr">
$ crsctl add resource <span class="italic">resource_name</span> -type <span class="italic">resource_type</span>] [-attr "PLACEMENT='favored', HOSTING_MEMBERS='node1 node2 node3', ..."]
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="#BGBBGGHI">"Adding User-defined Resources"</a> for examples of using the <code dir="ltr">crsctl add resource</code> command</p>
</li>
<li>
<p><code dir="ltr"><a href="crsref.htm#CHDIHGHE">"crsctl add resource"</a></code> for more information about using the <code dir="ltr">crsctl add resource</code> command</p>
</li>
<li>
<p><a href="resatt.htm#CHDBHEAH">"Resource Attributes"</a> for more information about resource attributes</p>
</li>
</ul>
</div>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="BGBHIBEE"></a>
<div id="CWADD91283" class="sect1">
<h2 class="sect1">Overview of Using Oracle Clusterware to Enable High Availability</h2>
<p>Oracle Clusterware manages resources based on how you configure them to increase their availability. You can configure your resources so that Oracle Clusterware:</p>
<ul>
<li>
<p>Starts resources during cluster or server start</p>
</li>
<li>
<p>Restarts resources when failures occur</p>
</li>
<li>
<p>Relocates resources to other servers, if the servers are available</p>
</li>
</ul>
<p>To manage your applications with Oracle Clusterware:</p>
<ol>
<li>
<p>Create an action script or use an existing agent.</p>
</li>
<li>
<p>Register your applications as resources with Oracle Clusterware.</p>
<p>If a single application requires that you register multiple resources, you may be required to define relevant dependencies between the resources.</p>
</li>
<li>
<p>Assign the appropriate privileges to the resource.</p>
</li>
<li>
<p>Start or stop your resources.</p>
</li>
</ol>
<p>When a resource fails, Oracle Clusterware attempts to restart the resource based on attribute values that you provide when you register an application or process as a resource. If a server in a cluster fails, then you can configure your resources so that processes that were assigned to run on the failed server restart on another server. Based on various resource attributes, Oracle Clusterware supports a variety of configurable scenarios.</p>
<p>When you register a resource in Oracle Clusterware, the relevant information about the application and the resource-relevant information, is stored in the Oracle Cluster Registry (OCR). This information includes:</p>
<ul>
<li>
<p><span class="bold">Path to the action script or application-specific agent</span>: <a id="sthref300"></a><a id="sthref301"></a>This is the absolute path to the script or application-specific agent that defines the start, stop, check, and clean actions that Oracle Clusterware performs on the application.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#CHDHDJBF">"Agents"</a> for more information about these actions</div>
</li>
</ul>
<ul>
<li>
<p><span class="bold">Privileges</span>: Oracle Clusterware has the necessary privileges to control all of the components of your application for high availability operations, including the right to start processes that are owned by other user identities. Oracle Clusterware must run as a privileged user to control applications with the correct start and stop processes.</p>
</li>
<li>
<p><span class="bold">Resource Dependencies</span>: You can create relationships among resources that imply an operational ordering or that affect the placement of resources on servers in the cluster. For example, Oracle Clusterware can only start a resource that has a hard start dependency on another resource if the other resource is running. Oracle Clusterware prevents stopping a resource if other resources that depend on it are running. However, you can force a resource to stop using the <code dir="ltr">crsctl stop resource -f</code> command, which first stops all resources that depend on the resource being stopped.</p>
</li>
</ul>
<p>This section includes the following topics:</p>
<ul>
<li>
<p><a href="#BGBGJIHB">Resource Attributes</a></p>
</li>
<li>
<p><a href="#BGBCBJEH">Resource States</a></p>
</li>
<li>
<p><a href="#BGBDAFFJ">Resource Dependencies</a></p>
</li>
<li>
<p><a href="#CHDIEDHA">Resource Placement</a></p>
</li>
</ul>
<a id="BGBGJIHB"></a>
<div id="CWADD91284" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Resource Attributes</h3>
<p>Resource attributes define how Oracle Clusterware manages resources of a specific resource type. Each resource type has a unique set of attributes. Some resource attributes are specified when you register resources, while others are internally managed by Oracle Clusterware.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
Where you can define new resource attributes, you can only use US-7 ASCII characters.</div>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="resatt.htm#CHDCECHH">Appendix B, "Oracle Clusterware Resource Reference"</a> for complete details of resource attributes</div>
</div>
<!-- class="sect2" -->
<a id="BGBCBJEH"></a>
<div id="CWADD91286" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Resource States</h3>
<p>Every resource in a cluster is in a particular state at any time. Certain actions or events can cause that state to change.</p>
<p><a href="#BGBFCGAD">Table 6-2</a> lists and describes the possible <a href="glossary.htm#CBACFDHJ"><span class="xrefglossterm">resource state</span></a>s.</p>
<div id="CWADD91287" class="tblhruleformal">
<p class="titleintable"><a id="sthref302"></a><a id="BGBFCGAD"></a>Table 6-2 Possible Resource States</p>
<table class="cellalignment414" title="Possible Resource States" summary="This table lists and describes possible resource states." dir="ltr">
<thead>
<tr class="cellalignment408">
<th class="cellalignment415" id="r1c1-t16">State</th>
<th class="cellalignment415" id="r1c2-t16">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment408">
<td class="cellalignment416" id="r2c1-t16" headers="r1c1-t16">
<p>ONLINE</p>
</td>
<td class="cellalignment416" headers="r2c1-t16 r1c2-t16">
<p>The resource is running.</p>
</td>
</tr>
<tr class="cellalignment408">
<td class="cellalignment416" id="r3c1-t16" headers="r1c1-t16">
<p>OFFLINE</p>
</td>
<td class="cellalignment416" headers="r3c1-t16 r1c2-t16">
<p>The resource is not running.</p>
</td>
</tr>
<tr class="cellalignment408">
<td class="cellalignment416" id="r4c1-t16" headers="r1c1-t16">
<p>UNKNOWN</p>
</td>
<td class="cellalignment416" headers="r4c1-t16 r1c2-t16">
<p>An attempt to stop the resource has failed. Oracle Clusterware does not actively monitor resources that are in this state. You must perform an application-specific action to ensure that the resource is offline, such as stop a process, and then run the <code dir="ltr">crsctl stop resource</code> command to reset the state of the resource to OFFLINE.</p>
</td>
</tr>
<tr class="cellalignment408">
<td class="cellalignment416" id="r5c1-t16" headers="r1c1-t16">
<p>INTERMEDIATE</p>
</td>
<td class="cellalignment416" headers="r5c1-t16 r1c2-t16">
<p>A resource can be in the INTERMEDIATE state because of one of two events:</p>
<ol>
<li>
<p>Oracle Clusterware cannot determine the state of the resource but the resource was either attempting to go online or was online the last time its state was precisely known. Usually, the resource transitions out of this state on its own over time, as the conditions that impeded the check action no longer apply.</p>
</li>
<li>
<p>A resource is partially online. For example, the Oracle Database VIP resource fails over to another server when its home server leaves the cluster. However, applications cannot use this VIP to access the database while it is on a non-home server. Similarly, when an Oracle Database instance is started and not open, the resource is partially online: it is running but is not available to provide services.</p>
</li>
</ol>
<p>Oracle Clusterware actively monitors resources that are in the INTERMEDIATE state and, typically, you are not required to intervene. If the resource is in the INTERMEDIATE state due to the preceding reason 1, then as soon as the state of the resource is established, Oracle Clusterware transitions the resource out of the INTERMEDIATE state.</p>
<p>If the resource is in the INTERMEDIATE state due to the preceding reason 2, then it stays in this state if it remains partially online. For example, the home server of the VIP must rejoin the cluster so the VIP can switch over to it. A database administrator must issue a command to open the database instance.</p>
<p>In either case, however, Oracle Clusterware transitions the resource out of the INTERMEDIATE state automatically as soon as it is appropriate.Use the <code dir="ltr">STATE_DETAILS</code> resource attribute to explain the reason for a resource being in the INTERMEDIATE state and provide a solution to transition the resource out of this state.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblhruleformal" --></div>
<!-- class="sect2" -->
<a id="BGBDAFFJ"></a>
<div id="CWADD91288" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Resource Dependencies</h3>
<p><a id="sthref303"></a>You can configure resources to be dependent on other resources, so that the dependent resources can only start or stop when certain conditions of the resources on which they depend are met. For example, when Oracle Clusterware attempts to start a resource, it is necessary for any resources on which the initial resource depends to be running and in the same location. If Oracle Clusterware cannot bring the resources online, then the initial (dependent) resource cannot be brought online, either. If Oracle Clusterware stops a resource or a resource fails, then any dependent resource is also stopped.</p>
<p>Some resources require more time to start than others. Some resources must start whenever a server starts, while other resources require a manual start action. These and many other examples of resource-specific behavior imply that each resource must be described in terms of how it is expected to behave and how it relates to other resources (resource dependencies).</p>
<p>You can configure resources so that they depend on Oracle resources. When creating resources, however, do not use an <span class="italic">ora</span> prefix in the resource name. This prefix is reserved for Oracle use only.</p>
<p>Previous versions of Oracle Clusterware included only two dependency specifications: the <code dir="ltr">REQUIRED_RESOURCES</code> resource attribute and the <code dir="ltr">OPTIONAL_RESOURCES</code> resource attribute. The <code dir="ltr">REQUIRED_RESOURCES</code> resource attribute applied to both start and stop resource dependencies.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
The <code dir="ltr">REQUIRED_RESOURCES</code> and <code dir="ltr">OPTIONAL_RESOURCES</code> resource attributes are still available only for resources of <code dir="ltr">application</code> type. Their use to define resource dependencies in Oracle Clusterware 11<span class="italic">g</span> release 2 (11.2) is deprecated.</div>
<p>In Oracle Clusterware 11<span class="italic">g</span> release 2 (11.2) resource dependencies are separated into start and stop categories. This separation improves and expands the start and stop dependencies between resources and resource types.</p>
<p>This section includes the following topics:</p>
<ul>
<li>
<p><a href="#BGBECIFD">Start Dependencies</a></p>
</li>
<li>
<p><a href="#BGBJFGIF">Stop Dependencies</a></p>
</li>
</ul>
<a id="BGBECIFD"></a>
<div id="CWADD91289" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Start Dependencies</h4>
<p>Oracle Clusterware considers <a id="sthref304"></a>start dependencies contained in the profile of a resource when the <a href="glossary.htm#CBAFCABA"><span class="xrefglossterm">start effort evaluation</span></a> for that resource begins. You specify start dependencies for resources using the <code dir="ltr">START_DEPENDENCIES</code> resource attribute. You can use modifiers on each dependency to further configure the dependency.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="resatt.htm#CHDJHECG">"START_DEPENDENCIES"</a> for more information about the resource attribute, modifiers, and usage</div>
<p>This section includes descriptions of the following START dependencies:</p>
<ul>
<li>
<p><code dir="ltr"><a href="#BGBFHJDA">hard</a></code></p>
</li>
<li>
<p><code dir="ltr"><a href="#BGBCFHFI">weak</a></code></p>
</li>
<li>
<p><code dir="ltr"><a href="#BGBGIIEA">attraction</a></code></p>
</li>
<li>
<p><code dir="ltr"><a href="#BGBDFCHC">pullup</a></code></p>
</li>
<li>
<p><code dir="ltr"><a href="#BGBFFFBB">dispersion</a></code></p>
</li>
</ul>
<p class="subhead2"><a id="BGBFHJDA"></a><a id="CWADD91290"></a>hard</p>
<p>Define a <a id="sthref305"></a><a id="sthref306"></a><code dir="ltr">hard</code> start dependency for a resource if another resource must be running before the dependent resource can start. For example, if resource A has a <code dir="ltr">hard</code> start dependency on resource B, then resource B must be running before resource A can start.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
Oracle recommends that resources with <code dir="ltr">hard</code> start dependencies also have <code dir="ltr">pullup</code> start dependencies.</div>
<p>You can configure the <code dir="ltr">hard</code> start dependency with the following constraints:</p>
<ul>
<li>
<p><code dir="ltr">START_DEPENDENCIES=hard(global:resourceB)</code></p>
<p>By default, resources A and B must be located on the same server (co-located). Use the <code dir="ltr">global</code> modifier to specify that resources need not be co-located. For example, if resource A has a <code dir="ltr">hard(global:resourceB)</code> start dependency on resource B, then, if resource B is running on any node in the cluster, resource A can start.</p>
</li>
<li>
<p><code dir="ltr">START_DEPENDENCIES=hard(intermediate:resourceB)</code></p>
<p>Use the <code dir="ltr">intermediate</code> modifier to specify that the dependent resource can start if a resource on which it depends is in either the <code dir="ltr">ONLINE</code> or <code dir="ltr">INTERMEDIATE</code> state.</p>
</li>
<li>
<p><code dir="ltr">START_DEPENDENCIES=hard(type:resourceB.type)</code></p>
<p>Use the <code dir="ltr">type</code> modifier to specify whether the <code dir="ltr">hard</code> start dependency acts on a particular resource or a resource type. For example, if you specify that resource A has a <code dir="ltr">hard</code> start dependency on the <code dir="ltr">resourceB.type</code> type, then if any resource of the <code dir="ltr">resourceB.type</code> type is running, resource A can start.</p>
</li>
<li>
<p><code dir="ltr">START_DEPENDENCIES=hard(resourceB, intermediate:resourceC, intermediate:global:type:resourceC.type)</code></p>
<p>You can combine modifiers and specify multiple resources in the <code dir="ltr">START_DEPENDENCIES</code> resource attribute.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
Separate modifier clauses with commas. The <code dir="ltr">type</code> modifier clause must always be the last modifier clause in the list and the <code dir="ltr">type</code> modifier must always directly precede the type.</div>
</li>
</ul>
<p class="subhead2"><a id="BGBCFHFI"></a><a id="CWADD91291"></a>weak</p>
<p>If resource A has a <a id="sthref307"></a><a id="sthref308"></a><code dir="ltr">weak</code> start dependency on resource B, then an attempt to start resource A attempts to start resource B, if resource B is not running. The result of the attempt to start resource B is, however, of no consequence to the result of starting resource A.</p>
<p>You can configure the <code dir="ltr">weak</code> start dependency with the following constraints:</p>
<ul>
<li>
<p><code dir="ltr">START_DEPENDENCIES=weak(global:resourceB)</code></p>
<p>By default, resources A and B must be co-located. Use the <code dir="ltr">global</code> modifier to specify that resources need not be co-located. For example, if resource A has a <code dir="ltr">weak(global:resourceB)</code> start dependency on resource B, then, if resource B is running on any node in the cluster, resource A can start.</p>
</li>
<li>
<p><code dir="ltr">START_DEPENDENCIES=weak(concurrent:resourceB)</code></p>
<p>Use the <code dir="ltr">concurrent</code> modifier to specify that resource A and resource B can start concurrently, instead of waiting for resource B to start, first.</p>
</li>
<li>
<p><code dir="ltr">START_DEPENDENCIES=weak(type:resourceB.type)</code></p>
<p>Use the <code dir="ltr">type</code> modifier to specify that the dependency acts on a resource of a particular resource type, such as <code dir="ltr">resourceB.type</code>.</p>
</li>
</ul>
<p class="subhead2"><a id="BGBGIIEA"></a><a id="CWADD91292"></a>attraction</p>
<p>If resource A has an <a id="sthref309"></a><a id="sthref310"></a><code dir="ltr">attraction</code> dependency on resource B, then Oracle Clusterware prefers to place resource A on servers hosting resource B. Dependent resources, such as resource A in this case, are more likely to run on servers on which resources to which they have <code dir="ltr">attraction</code> dependencies are running. Oracle Clusterware places dependent resources on servers with resources to which they are attracted.</p>
<p>You can configure the <code dir="ltr">attraction</code> start dependency with the following constraints:</p>
<ul>
<li>
<p><code dir="ltr">START_DEPENDENCIES=attraction(intermediate:resourceB)</code></p>
<p>Use the <code dir="ltr">intermediate</code> modifier to specify whether the resource is attracted to resources that are in the <code dir="ltr">INTERMEDIATE</code> state.</p>
</li>
<li>
<p><code dir="ltr">START_DEPENDENCIES=attraction(type:resourceB.type)</code></p>
<p>Use the <code dir="ltr">type</code> modifier to specify whether the dependency acts on a particular resource type. The dependent resource is attracted to the server hosting the greatest number of resources of a particular type.</p>
</li>
</ul>
<div class="infobox-note">
<p class="notep1">Note:</p>
Previous versions of Oracle Clusterware used the now deprecated <code dir="ltr">OPTIONAL_RESOURCES</code> attribute to express attraction dependency.</div>
<p class="subhead2"><a id="BGBDFCHC"></a><a id="CWADD91293"></a>pullup</p>
<p>Use the <a id="sthref311"></a><a id="sthref312"></a><code dir="ltr">pullup</code> start dependency if resource A must automatically start whenever resource B starts. This dependency only affects resource A if it is not running. As is the case for other dependencies, <code dir="ltr">pullup</code> may cause the dependent resource to start on any server. Use the <code dir="ltr">pullup</code> dependency whenever there is a hard stop dependency, so that if resource A depends on resource B and resource B fails and then recovers, then resource A is restarted.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
Oracle recommends that resources with <code dir="ltr">hard</code> start dependencies also have <code dir="ltr">pullup</code> start dependencies.</div>
<p>You can configure the <code dir="ltr">pullup</code> start dependency with the following constraints:</p>
<ul>
<li>
<p><code dir="ltr">START_DEPENDENCIES=pullup(intermediate:resourceB)</code></p>
<p>Use the <code dir="ltr">intermediate</code> modifier to specify whether resource B can be either in the <code dir="ltr">ONLINE</code> or <code dir="ltr">INTERMEDIATE</code> state to start resource A.</p>
<p>If resource A has a <code dir="ltr">pullup</code> dependency on multiple resources, then resource A starts only when all resources upon which it depends, start.</p>
</li>
<li>
<p><code dir="ltr">START_DEPENDENCIES=pullup:always(resourceB)</code></p>
<p>Use the <code dir="ltr">always</code> modifier to specify whether Oracle Clusterware starts resource A despite the value of its <code dir="ltr">TARGET</code> attribute, whether it is <code dir="ltr">ONLINE</code> or <code dir="ltr">OFFLINE</code>. By default, without using the <code dir="ltr">always</code> modifier, <code dir="ltr">pullup</code> only starts resources if the value of the <code dir="ltr">TARGET</code> attribute of the dependent resource is <code dir="ltr">ONLINE</code>.</p>
</li>
<li>
<p><code dir="ltr">START_DEPENDENCIES=pullup(type:resourceB.type)</code></p>
<p>Use the <code dir="ltr">type</code> modifier to specify that the dependency acts on a particular resource type.</p>
</li>
</ul>
<p class="subhead2"><a id="BGBFFFBB"></a><a id="CWADD91294"></a>dispersion</p>
<p>If you specify the <a id="sthref313"></a><a id="sthref314"></a><code dir="ltr">dispersion</code> start dependency for a resource, then Oracle Clusterware starts this resource on a server that has the fewest number of resources to which this resource has dispersion. Resources with dispersion may still end up running on the same server if there are not enough servers to disperse them to.</p>
<p>You can configure the <code dir="ltr">dispersion</code> start dependency with the following modifiers:</p>
<ul>
<li>
<p><code dir="ltr">START_DEPENDENCIES=dispersion(intermedite:resourceB)</code></p>
<p>Use the <code dir="ltr">intermediate</code> modifier to specify that Oracle Clusterware disperses resource A whether resource B is either in the <code dir="ltr">ONLINE</code> or <code dir="ltr">INTERMEDIATE</code> state.</p>
</li>
<li>
<p><code dir="ltr">START_DEPENDENCIES=dispersion:active(resourceB)</code></p>
<p>Typically, dispersion is only applied when starting resources. If at the time of starting, resources that disperse each other start on the same server (because there are not enough servers at the time the resources start), then Oracle Clusterware leaves the resources alone once they are running, even when more servers join the cluster. If you specify the <code dir="ltr">active</code> modifier, then Oracle Clusterware reapplies dispersion on resources later when new servers join the cluster.</p>
</li>
</ul>
</div>
<!-- class="sect3" -->
<a id="BGBJFGIF"></a>
<div id="CWADD91295" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Stop Dependencies</h4>
<p>Oracle Clusterware considers <a id="sthref315"></a>stop dependencies between resources whenever a resource is stopped (the resource state changes from <code dir="ltr">ONLINE</code> to any other state).</p>
<p class="subhead2"><a id="CWADD91296"></a>hard</p>
<p>If resource A has a <a id="sthref316"></a><a id="sthref317"></a><code dir="ltr">hard</code> stop dependency on resource B, then resource A must be stopped when B stops running. The two resources may attempt to start or relocate to another server, depending upon how they are configured. Oracle recommends that resources with <code dir="ltr">hard</code> stop dependencies also have <code dir="ltr">hard</code> start dependencies.</p>
<p>You can configure the <code dir="ltr">hard</code> stop dependency with the following modifiers:</p>
<ul>
<li>
<p><code dir="ltr">STOP_DEPENDENCIES=hard(intermedite:resourceB)</code></p>
<p>Use the <code dir="ltr">intermediate</code> modifier to specify whether resource B must be in either the <code dir="ltr">ONLINE</code> or <code dir="ltr">INTERMEDIATE</code> state for resource A to stay online.</p>
</li>
<li>
<p><code dir="ltr">STOP_DEPENDENCIES=hard(global:resourceB)</code></p>
<p>Use the <code dir="ltr">global</code> modifier to specify whether resource A requires that resource B be present on the same server or on any server in the cluster to remain online. If this constraint is not specified, then resources A and B must be running on the same server. Oracle Clusterware stops resource A when that condition is no longer met.</p>
</li>
<li>
<p><code dir="ltr">STOP_DEPENDENCIES=hard(shutdown:resourceB)</code></p>
<p>Use the <code dir="ltr">shutdown</code> modifier to stop the resource only when you shut down the Oracle Clusterware stack using either the <code dir="ltr">crsctl stop crs</code> or <code dir="ltr">crsctl stop cluster</code> commands.</p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="resatt.htm#CHDBFBFH">"STOP_DEPENDENCIES"</a> for more information about modifiers</div>
<p class="subhead2"><a id="CWADD92086"></a>Affect of Resource Dependencies on Resource State Recovery</p>
<p>When a resource goes from a running to a non-running state, while the intent to have it running remains unchanged, this transition is called a <span class="italic">resource failure</span>. At this point, Oracle Clusterware applies a resource state recovery procedure that may try to restart the resource locally, relocate it to another server, or just stop the dependent resources, depending on the high availability policy for resources and the state of entities at the time.</p>
<p>When two or more resources depend on each other, a failure of one of them may end up causing the other to fail, as well. In most cases, it is difficult to control or even predict the order in which these failures are detected. For example, even if resource A depends on resource B, Oracle Clusterware may detect the failure of resource B after the failure of resource A.</p>
<p>This lack of failure order predictability can cause Oracle Clusterware to attempt to restart dependent resources in parallel, which, ultimately, leads to the failure to restart some resources, because the resources upon which they depend are being restarted out of order.</p>
<p>In this case, Oracle Clusterware reattempts to restart the dependent resources locally if either or both the <code dir="ltr">hard</code> stop and <code dir="ltr">pullup</code> dependencies are used. For example, if resource A has either a <code dir="ltr">hard</code> stop dependency or <code dir="ltr">pullup</code> dependency, or both, on resource B, and resource A fails because resource B failed, then Oracle Clusterware may end up trying to restart both resources at the same time. If the attempt to restart resource A fails, then as soon as resource B successfully restarts, Oracle Clusterware reattempts to restart resource A.</p>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="CHDIEDHA"></a>
<div id="CWADD92087" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Resource Placement</h3>
<p>As part of the <a id="sthref318"></a>start effort evaluation, the first decision that Oracle Clusterware must make is where to start (or place) the resource. Making such a decision is easy when the caller specifies the target server by name. If a target server is not specified, however, then Oracle Clusterware attempts to locate the best possible server for placement given the resource's configuration and the current state of the cluster.</p>
<p>Oracle Clusterware considers a resource's placement policy first and filters out servers that do not fit with that policy. Oracle Clusterware sorts the remaining servers in a particular order depending on the value of the <code dir="ltr">PLACEMENT</code> resource attribute of the resource.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#BGBHCCAE">"Application Placement Policies"</a> for more information about the <code dir="ltr">PLACEMENT</code> resource attribute</div>
<p>The result of this consideration is a maximum of two lists of candidate servers on which Oracle Clusterware can start the resource. One list contains preferred servers and the other contains possible servers. The list of preferred servers will be empty if the value of the <code dir="ltr">PLACEMENT</code> resource attribute for the resource is set to <code dir="ltr">balanced</code> or <code dir="ltr">restricted</code>. The placement policy of the resource determines on which server the resource wants to run. Oracle Clusterware considers preferred servers over possible servers, if there are servers in the preferred list.</p>
<p>Oracle Clusterware then considers the resource's dependencies to determine where to place the resource, if any exist. The <code dir="ltr"><a href="#BGBGIIEA">attraction</a></code> and <code dir="ltr"><a href="#BGBFFFBB">dispersion</a></code> start dependencies affect the resource placement decision, as do some of the dependency modifiers. Oracle Clusterware applies these placement hints to further order the servers in the two previously mentioned lists. Note that Oracle Clusterware processes each list of servers independently, so that the effect of the resource's placement policy is not confused by that of dependencies.</p>
<p>Finally, Oracle Clusterware chooses the first server from the list of preferred servers, if any servers are listed. If there are no servers on the list of preferred servers, then Oracle Clusterware chooses the first server from the list of possible servers, if any servers are listed. When no servers exist in either list, Oracle Clusterware generates a resource placement error.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
Neither the placement policies nor the dependencies of the resources related to the resource Oracle Clusterware is attempting to start affect the placement decision.</div>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="BGBEFFII"></a>
<div id="CWADD91297" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Registering an Application as a Resource</h2>
<p>This section presents examples of the procedures for registering an application as a resource in Oracle Clusterware. The procedures instruct you how to add an Apache Web server as a resource to Oracle Clusterware.</p>
<p>The examples in this section assume that the Oracle Clusterware administrator has full administrative privileges over Oracle Clusterware and the user or group that owns the application that Oracle Clusterware is going to manage. Once the registration process is complete, Oracle Clusterware can start any application on behalf of any operating system user.</p>
<p>Oracle Clusterware distinguishes between an owner of a registered resource and a user. The owner of a resource is the operating system user under which the agent runs. The <code dir="ltr">ACL</code> resource attribute of the resource defines permissions for the users and the owner. Only <code dir="ltr">root</code> can modify any resource.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="admin.htm#CHDEHIHA">"Role-Separated Management"</a></div>
<div class="infobox-note">
<p class="notep1">Notes:</p>
<ul>
<li>
<p>Oracle Clusterware commands prefixed with <code dir="ltr">crs_</code> are deprecated with this release. CRSCTL commands replace those commands. See <a href="crsref.htm#CHDGADEH">Appendix E, "CRSCTL Utility Reference"</a> for a list of CRSCTL commands and their corresponding <code dir="ltr">crs_</code> commands.</p>
</li>
<li>
<p>Do not use CRSCTL commands on any resources that have names prefixed with <code dir="ltr">ora</code> (because these are Oracle resources), unless My Oracle Support directs you to do so.</p>
<p>To configure Oracle resources, use the server control utility, SRVCTL, which provides you with all configurable options.</p>
</li>
</ul>
</div>
<p>This section includes the following topics:</p>
<ul>
<li>
<p><a href="#BGBJHJHC">Creating an Application VIP Managed by Oracle Clusterware</a></p>
</li>
<li>
<p><a href="#BGBBGGHI">Adding User-defined Resources</a></p>
</li>
<li>
<p><a href="#CHDGBEBJ">Adding Resources Using Oracle Enterprise Manager</a></p>
</li>
<li>
<p><a href="#BGBJFJEE">Changing Resource Permissions</a></p>
</li>
<li>
<p><a href="#BGBHCCAE">Application Placement Policies</a></p>
</li>
<li>
<p><a href="#BGBGHGHF">Unregistering Applications and Application Resources</a></p>
</li>
</ul>
<a id="BGBJHJHC"></a>
<div id="CWADD91298" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Creating an Application VIP Managed by Oracle Clusterware</h3>
<p>If clients of an application access the application through a network, and the placement policy for the application allows it to fail over to another node, then you must register a <a id="sthref319"></a><a id="sthref320"></a>virtual internet protocol address (VIP) on which the application depends. An application VIP is a cluster resource that Oracle Clusterware manages (Oracle Clusterware provides a standard VIP agent for application VIPs). You should base any new application VIPs on this VIP type to ensure that your system experiences consistent behavior among all of the VIPs that you deploy in your cluster.</p>
<p>While you can add a VIP in the same way that you can add any other resource that Oracle Clusterware manages, Oracle recommends using the script <code dir="ltr"><span class="codeinlineitalic">Grid_home</span></code><code dir="ltr">/bin/appvipcfg</code> to create or delete an application VIP.</p>
<p>To create an <a id="sthref321"></a>application VIP, use the following syntax:</p>
<pre dir="ltr">
appvipcfg create -network=<span class="italic">network_number</span> -ip=<span class="italic">ip_address</span> -vipname=<span class="italic">vip_name</span>
-user=<span class="italic">user_name</span> [-group=<span class="italic">group_name</span>] [-failback=0 | 1]
</pre>
<p>To delete an <a id="sthref322"></a>application VIP, use the following syntax:</p>
<pre dir="ltr">
appvipcfg delete -vipname=<span class="italic">vip_name</span>
</pre>
<p>Where <code dir="ltr"><span class="codeinlineitalic">network_number</span></code> is the number of the network, <code dir="ltr"><span class="codeinlineitalic">ip_address</span></code> is the IP address, <code dir="ltr"><span class="codeinlineitalic">vip_name</span></code> is the name of the VIP, <code dir="ltr"><span class="codeinlineitalic">user_name</span></code> is the name of the user who installed Oracle Database, and <code dir="ltr"><span class="codeinlineitalic">group_name</span></code> is the name of the group. The default value of the <code dir="ltr">-failback</code> option is 0. If you set the option to 1, then the VIP (and therefore any resources that depend on VIP) fails back to the original node when it becomes available again.</p>
<p>For example, as <code dir="ltr">root</code>, run the following command:</p>
<pre dir="ltr">
# <span class="italic">Grid_home</span>/bin/appvipcfg create -network=1 -ip=148.87.58.196 -vipname=appsVIP -user=root
</pre>
<p>The script only requires a network number (default is 1), the IP address, and a name for the VIP resource, as well as the user that owns the application VIP resource. A VIP resource is typically owned by <code dir="ltr">root</code> because VIP related operations require root privileges.</p>
<p>To delete an application VIP, use the same script with the <code dir="ltr">delete</code> option. This option accepts the VIP name as a parameter. For example:</p>
<pre dir="ltr">
# <span class="italic">Grid_home</span>/bin/appvipcfg delete -vipname=appsVIP
</pre>
<p>After you have created the application VIP using this configuration script, you can view the VIP profile using the following command:</p>
<pre dir="ltr">
<span class="italic">Grid_home</span>/bin/crsctl status res appsVIP -p
</pre>
<p>Verify and, if required, modify the following parameters using the <code dir="ltr"><span class="codeinlineitalic">Grid_home</span></code><code dir="ltr">/bin/crsctl modify res</code> command.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="resatt.htm#CHDCECHH">Appendix B, "Oracle Clusterware Resource Reference"</a> for detailed information about using CRSCTL commands</div>
<p>The <code dir="ltr">appvipcfg</code> script assumes that the default <code dir="ltr">ora.vip</code> network resource (<code dir="ltr">ora.net1.network</code>) is used as the default. In addition, it is also assumes that a default <code dir="ltr">app.appvip_net1.type</code> is used for those purposes.</p>
<p>As the Oracle Database installation owner, start the VIP resource:</p>
<pre dir="ltr">
$ crsctl start resource appsVIP
</pre>
<p class="subhead2"><a id="CWADD91299"></a>Adding an Application VIP with Oracle Enterprise Manager</p>
<p>To <a id="sthref323"></a><a id="sthref324"></a>add an application VIP with Oracle Enterprise Manager:</p>
<ol>
<li>
<p>Log into Oracle Enterprise Manager Database Control.</p>
</li>
<li>
<p>Click the <span class="bold">Cluster</span> tab.</p>
</li>
<li>
<p>Click <span class="bold">Administration</span>.</p>
</li>
<li>
<p>Click <span class="bold">Manage Resources</span>.</p>
</li>
<li>
<p>Enter a cluster administrator user name and password to display the Manage Resources page.</p>
</li>
<li>
<p>Click <span class="bold">Add Application VIP</span>.</p>
</li>
<li>
<p>Enter a name for the VIP in the <span class="bold">Name</span> field.</p>
</li>
<li>
<p>Enter a network number in the <span class="bold">Network Number</span> field.</p>
</li>
<li>
<p>Enter an IP address for the VIP in the <span class="bold">Internet Protocol Address</span> field.</p>
</li>
<li>
<p>Enter <span class="bold">root</span> in the <span class="bold">Primary User</span> field. Oracle Enterprise Manager defaults to whatever user name you are logged in as.</p>
</li>
<li>
<p>Select <span class="bold">Start the resource after creation</span> if you want the VIP to start immediately.</p>
</li>
<li>
<p>Click <span class="bold">Continue</span> to display the Confirmation: Add VIP Resource page.</p>
</li>
<li>
<p>Enter <span class="bold">root</span> and the root password as the cluster credentials.</p>
</li>
<li>
<p>Click <span class="bold">Continue</span> to create the application VIP.</p>
</li>
</ol>
</div>
<!-- class="sect2" -->
<a id="BGBBGGHI"></a>
<div id="CWADD91300" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Adding User-defined Resources</h3>
<p>You can <a id="sthref325"></a>add resources to Oracle Clusterware at any time. However, if you add a resource that is dependent on another resource, then you must first add the resource upon which it is dependent.</p>
<p>In the examples in this section, assume that an action script, <code dir="ltr">myApache.scr</code>, resides in the <code dir="ltr">/opt/cluster/scripts</code> directory on each node to facilitate adding the resource to the cluster. It is also assumed that a server pool has been created to host an application. This server pool is not a sub-pool of Generic, but instead it is used to host the application in a top-level server pool.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="resatt.htm#CHDJHDCA">"Examples of Action Scripts for Third-Party Applications"</a> to see an example of an action script</div>
<div class="infobox-note">
<p class="notep1">Note:</p>
Oracle recommends that you use shared storage, such as Oracle Automatic Storage Management Cluster File System (Oracle ACFS), to store action scripts to decrease script maintenance.</div>
<p>This section includes the following topics:</p>
<ul>
<li>
<p><a href="#BCEJCCDA">Deciding on a Deployment Scheme</a></p>
</li>
<li>
<p><a href="#CHDFHGBA">Adding a Resource to a Specified Server Pool</a></p>
</li>
<li>
<p><a href="#CHDCFIAI">Adding a Resource Using a Server-Specific Deployment</a></p>
</li>
</ul>
<a id="BCEJCCDA"></a>
<div id="CWADD92378" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Deciding on a Deployment Scheme</h4>
<p><a id="sthref326"></a>You must decide whether to use administrator or policy management for the application. Use administrator management for smaller, two-node configurations, where your cluster configuration is not likely to change. Use policy management for more dynamic configurations when your cluster consists of more than two nodes. For example, if a resource only runs on node 1 and node 2 because only those nodes have the necessary files, then administrator management is probably more appropriate.</p>
<p>Oracle Clusterware supports the deployment of applications in access-controlled server pools made up of anonymous servers and strictly based on the desired pool size. Cluster policies defined by the administrator can and must be used in this case to govern the server assignment with desired sizes and levels of importance. Alternatively, a strict or preferred server assignment can be used, in which resources run on specifically named servers. This represents the pre-existing model available in earlier releases of Oracle Clusterware now known as administrator management.</p>
<p>Conceptually, a cluster hosting applications developed and deployed in both of the deployment schemes can be viewed as two logically separated groups of servers. One server group is used for server pools, enabling role separation and server capacity control. The other server group assumes a fixed assignment based on named servers in the cluster.</p>
<p>To manage an application using either deployment scheme, you must create a server pool before adding the resource to the cluster. A built-in server pool named <span class="italic">Generic</span> always owns the servers used by applications of administrator-based management. The Generic server pool is a logical division and can be used to separate the two parts of the cluster using different management schemes.</p>
<p>For third party developers to use the model to deploy applications, server pools must be used. To take advantage of the pre-existing application development and deployment model based on named servers, sub-pools of Generic (server pools that have Generic as their parent pool, defined by the server pool attribute <code dir="ltr">PARENT_POOLS</code>) must be used. By creating sub-pools that use Generic as their parent and enumerating servers by name in the sub-pool definitions, applications ensure that named servers are in Generic and are used exclusively for applications using the named servers model.</p>
</div>
<!-- class="sect3" -->
<a id="CHDFHGBA"></a>
<div id="CWADD92143" class="sect3">
<h4 class="sect3">Adding a Resource to a Specified Server Pool</h4>
<p>To add the Apache Web server to a specific server pool as a resource using the policy-based deployment scheme, run the following command as the user that is supposed to run the Apache Server. For an Apache Server this is typically the <code dir="ltr">root</code> user:</p>
<pre dir="ltr">
$ crsctl add resource myApache -type cluster_resource
-attr "ACTION_SCRIPT=/opt/cluster/scripts/myapache.scr, PLACEMENT=restricted,
SERVER_POOLS=<span class="italic">server_pool_list</span>,CHECK_INTERVAL=30,RESTART_ATTEMPTS=2,
START_DEPENDENCIES=hard(appsvip),STOP_DEPENDENCIES=hard(appsvip)"
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="resatt.htm#CHDJHDCA">"Examples of Action Scripts for Third-Party Applications"</a></div>
<p>In the preceding example, <code dir="ltr">myApache</code> is the name of the resource added to the cluster.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
A resource name cannot begin with a period nor with the character string "ora".</div>
<p>Notice that attribute values are enclosed in single quotation marks (' '). Configure the resource as follows:</p>
<ul>
<li>
<p>The resource is a <code dir="ltr">cluster_resource</code> type.</p>
</li>
<li>
<p><code dir="ltr">ACTION_SCRIPT=/opt/cluster/scripts/myapache.scr:</code> The path to the required action script.</p>
</li>
<li>
<p><code dir="ltr">PLACEMENT=restricted</code></p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#BGBHCCAE">"Application Placement Policies"</a> for more information about the <code dir="ltr">PLACEMENT</code> resource attribute</div>
</li>
<li>
<p><code dir="ltr">SERVER_POOLS=</code><code dir="ltr"><span class="codeinlineitalic">server_pool_list</span></code>: This resource can only run in the server pools specified in a space-separated list.</p>
</li>
<li>
<p><code dir="ltr">CHECK_INTERVAL=30</code>: Oracle Clusterware checks this resource every 30 seconds to determine its status.</p>
</li>
<li>
<p><code dir="ltr">RESTART_ATTEMPTS=2</code>: Oracle Clusterware attempts to restart this resource twice before failing it over to another node.</p>
</li>
<li>
<p><code dir="ltr">START_DEPENDENCIES=hard(appsvip)</code>: This resource has a hard START dependency on the appsvip resource. The appsvip resource must be online in order for myApache to start.</p>
</li>
<li>
<p><code dir="ltr">STOP_DEPENDENCIES=hard(appsvip)</code>: This resource has a hard STOP dependency on the appsvip resource. The myApache resource stops if the appsvip resource goes offline.</p>
</li>
</ul>
</div>
<!-- class="sect3" -->
<a id="CHDCFIAI"></a>
<div id="CWADD92144" class="sect3">
<h4 class="sect3">Adding a Resource Using a Server-Specific Deployment</h4>
<p>To add the Apache Web server as a resource that uses a named server deployment, it is assumed that the resource is added to a server pool that is by definition a sub-pool of the Generic server pool. Server pools that represent sub-pools of Generic are created using the <code dir="ltr">crsctl add serverpool</code> command. These server pools define the Generic server pool as their parent in the server pool attribute <code dir="ltr">PARENT_POOLS</code>. In addition, they include a list of server names in the <code dir="ltr">SERVER_NAMES</code> parameter to specify the servers that should be assigned to the respective pool. For example:</p>
<pre dir="ltr">
$ crsctl add serverpool myApache_sp -attr "PARENT_POOLS=Generic, SERVER_NAMES=host36 host37"
</pre>
<p>Once this sub-pool has been created, you can add the resource, as in the previous example:</p>
<pre dir="ltr">
$ crsctl add resource myApache -type cluster_resource
-attr "ACTION_SCRIPT=/opt/cluster/scripts/myapache.scr, PLACEMENT='restricted', 
SERVER_POOLS=myApache_sp, CHECK_INTERVAL='30', RESTART_ATTEMPTS='2', 
START_DEPENDENCIES='hard(appsvip)', STOP_DEPENDENCIES='hard(appsvip)'"
</pre>
<div class="infobox-note">
<p class="notep1">Note:</p>
A resource name cannot begin with a period nor with the character string "ora".</div>
<p>In addition, note that when adding a resource using a server-specific deployment, the server pools listed in the <code dir="ltr">SERVER_POOLS</code> resource parameter must be sub-pools under Generic.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="admin.htm#CHDHIDGF">"Policy-Based Cluster and Capacity Management"</a></div>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="CHDGBEBJ"></a>
<div id="CWADD91303" class="sect2">
<h3 class="sect2">Adding Resources Using Oracle Enterprise Manager</h3>
<p>To <a id="sthref327"></a><a id="sthref328"></a>add resources to Oracle Clusterware using Oracle Enterprise Manager:</p>
<ol>
<li>
<p>Log into Oracle Enterprise Manager Database Control.</p>
</li>
<li>
<p>Click the <span class="bold">Cluster</span> tab.</p>
</li>
<li>
<p>Click <span class="bold">Administration</span>.</p>
</li>
<li>
<p>Click <span class="bold">Add Resource</span>.</p>
</li>
<li>
<p>Enter a cluster administrator user name and password to display the Add Resource page.</p>
</li>
<li>
<p>Enter a name for the resource in the <span class="bold">Name</span> field.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
A resource name cannot begin with a period nor with the character string "ora".</div>
</li>
<li>
<p>Choose either <span class="bold">cluster_resource</span> or <span class="bold">local_resource</span> from the <span class="bold">Resource Type</span> drop down.</p>
</li>
<li>
<p>Optionally, enter a description of the resource in the <span class="bold">Description</span> field.</p>
</li>
<li>
<p>Select <span class="bold">Start the resource after creation</span> if you want the resource to start immediately.</p>
</li>
<li>
<p>The optional parameters in the <span class="bold">Placement</span> section define where in a cluster Oracle Clusterware places the resource.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#BGBHCCAE">"Application Placement Policies"</a> for more information about placement</div>
<p>The attributes in this section correspond to the attributes described in <a href="resatt.htm#CHDCECHH">Appendix B, "Oracle Clusterware Resource Reference"</a>.</p>
</li>
<li>
<p>In the <span class="bold">Action Program</span> section, choose from the <span class="bold">Action Program</span> drop down whether Oracle Clusterware calls an action script, an agent file, or both to manage the resource.</p>
<p>You must also specify a path to the script, file, or both, depending on what you select from the drop down.</p>
<p>If you choose <span class="bold">Action Script</span>, then you can click <span class="bold">Create New Action Script</span> to use the Oracle Enterprise Manager action script template to create an action script for your resource, if you have not yet done so.</p>
</li>
<li>
<p>To further configure the resource, click <span class="bold">Attributes</span>. On this page, you can configure start, stop, and status attributes, and offline monitoring and any attributes that you define.</p>
</li>
<li>
<p>Click <span class="bold">Advanced Settings</span> to enable more detailed resource attribute configurations.</p>
</li>
<li>
<p>Click <span class="bold">Dependencies</span> to configure start and stop dependencies between resources.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#BGBDAFFJ">"Resource Dependencies"</a> for more information about dependencies</div>
</li>
<li>
<p>Click <span class="bold">Submit</span> when you finish configuring the resource.</p>
</li>
</ol>
</div>
<!-- class="sect2" -->
<a id="BGBJFJEE"></a>
<div id="CWADD91305" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Changing Resource Permissions</h3>
<p>Oracle Clusterware manages resources based on the <a id="sthref329"></a>permissions of the user who added the resource. The user who first added the resource owns the resource and the resource runs as the resource owner. Certain resources must be managed as <code dir="ltr">root</code>. If a user other than <code dir="ltr">root</code> adds a resource that must be run as <code dir="ltr">root</code>, then the permissions must be changed as <code dir="ltr">root</code> so that <code dir="ltr">root</code> manages the resource, as follows:</p>
<ol>
<li>
<p>Change the permission of the named resource to <code dir="ltr">root</code> by running the following command as <code dir="ltr">root</code>:</p>
<pre dir="ltr">
# crsctl setperm resource <span class="italic">resource_name</span> &ndash;o root
</pre></li>
<li>
<p>As the user who installed Oracle Clusterware, enable the Oracle Database installation owner (<code dir="ltr">oracle</code>, in the following example) to run the script, as follows:</p>
<pre dir="ltr">
$ crsctl setperm resource <span class="italic">resource_name</span> &ndash;u user:oracle:r-x
</pre></li>
<li>
<p>Start the resource:</p>
<pre dir="ltr">
$ crsctl start resource <span class="italic">resource_name</span>
</pre></li>
</ol>
</div>
<!-- class="sect2" -->
<a id="BGBHCCAE"></a>
<div id="CWADD91306" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Application Placement Policies</h3>
<p>A resource can be started on any server, subject to the placement policies, the resource start dependencies, and the availability of the action script on that server.</p>
<p>The <code dir="ltr">PLACEMENT</code> resource attribute determines how Oracle Clusterware selects a server on which to start a resource and where to relocate the resource after a server failure. The <code dir="ltr">HOSTING_MEMBERS</code> and <code dir="ltr">SERVER_POOLS</code> attributes determine eligible servers to host a resource and the <code dir="ltr">PLACEMENT</code> attribute further refines the placement of resources.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="resatt.htm#CHDCECHH">Appendix B, "Oracle Clusterware Resource Reference"</a> for more information about the <code dir="ltr">HOSTING_MEMBERS</code> and <code dir="ltr">SERVER_POOLS</code> resource attributes</div>
<p>The value of the <code dir="ltr">PLACEMENT</code> resource attribute determines how Oracle Clusterware places resources when they are added to the cluster or when a server fails. Together with either the <code dir="ltr">HOSTING_MEMBERS</code> or <code dir="ltr">SERVER_POOLS</code> attributes, you can configure how Oracle Clusterware places the resources in a cluster. When the value of the <code dir="ltr">PLACEMENT</code> attribute is:</p>
<ul>
<li>
<p><code dir="ltr">balanced</code>: Oracle Clusterware uses any online server for placement. Less loaded servers are preferred to servers with greater loads. To measure how loaded a server is, Oracle Clusterware uses the <code dir="ltr">LOAD</code> resource attribute of the resources that are in an <code dir="ltr">ONLINE</code> state on the server. Oracle Clusterware uses the sum total of the <code dir="ltr">LOAD</code> values to measure the current server load.</p>
</li>
<li>
<p><code dir="ltr">favored</code>: If values are assigned to either the <code dir="ltr">SERVER_POOLS</code> or <code dir="ltr">HOSTING_MEMBERS</code> resource attribute, then Oracle Clusterware considers servers belonging to the member list in either attribute first. If no servers are available, then Oracle Clusterware places the resource on any other available server. If there are values for both the <code dir="ltr">SERVER_POOLS</code> and <code dir="ltr">HOSTING_MEMBERS</code> attributes, then the <code dir="ltr">SERVER_POOLS</code> attribute restricts the choices to the servers within the preference indicated by the value of <code dir="ltr">HOSTING_MEMBERS</code>.</p>
</li>
<li>
<p><code dir="ltr">restricted</code>: Oracle Clusterware only considers servers that belong to server pools listed in the <code dir="ltr">SEVER_POOLS</code> resource attribute or servers listed in the <code dir="ltr">HOSTING_MEMBERS</code> resource attribute for resource placement. Only one of these resource attributes can have a value, otherwise it results in an error.</p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="resatt.htm#CHDDDBJF">"SERVER_POOLS"</a> for more information</div>
</div>
<!-- class="sect2" -->
<a id="BGBGHGHF"></a>
<div id="CWADD91309" class="sect2">
<h3 class="sect2">Unregistering Applications and Application Resources</h3>
<p>To unregister a resource, use the <code dir="ltr">crsctl delete resource</code> command. You cannot unregister an application or resource that is ONLINE or required by another resource, unless you use the <code dir="ltr">-force</code> option. The following example unregisters the Apache Web server application:</p>
<pre dir="ltr">
$ crsctl delete resource myApache
</pre>
<p>Run the <code dir="ltr">crsctl delete resource</code> command as a clean-up step when a resource is no longer managed by Oracle Clusterware. Oracle recommends that you unregister any unnecessary resources.</p>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="BGBCCEAE"></a>
<div id="CWADD91315" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Managing Resources</h2>
<p>This section includes the following topics:</p>
<ul>
<li>
<p><a href="#BGBHAHED">Registering Application Resources</a></p>
</li>
<li>
<p><a href="#BGBHDCBI">Starting Application Resources</a></p>
</li>
<li>
<p><a href="#BGBCJFHA">Relocating Applications and Application Resources</a></p>
</li>
<li>
<p><a href="#BGBJHGGI">Stopping Applications and Application Resources</a></p>
</li>
<li>
<p><a href="#BGBBEIFG">Displaying Clusterware Application and Application Resource Status Information</a></p>
</li>
</ul>
<a id="BGBHAHED"></a>
<div id="CWADD91316" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Registering Application Resources</h3>
<p>Each application that you manage with Oracle Clusterware is stored as a resource in OCR. Use the <code dir="ltr">crsctl add resource</code> command to register applications in OCR. For example, enter the following command to register the Apache Web server application from the previous example:</p>
<pre dir="ltr">
$ crsctl add resource myApache -type cluster_resource
-attr "ACTION_SCRIPT=/opt/cluster/scripts/myapache.scr, PLACEMENT=restricted,
SERVER_POOLS=<span class="italic">server_pool_list</span>,CHECK_INTERVAL=30,RESTART_ATTEMPTS=2,
START_DEPENDENCIES=hard(appsvip),STOP_DEPENDENCIES=hard(appsvip)"
</pre>
<p>If you modify a resource, then update OCR by running the <code dir="ltr">crsctl modify resource</code> command.</p>
</div>
<!-- class="sect2" -->
<a id="BGBHDCBI"></a>
<div id="CWADD91317" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Starting Application Resources</h3>
<p>Start and stop resources with the <code dir="ltr">crsctl start resource</code> and <code dir="ltr">crsctl stop resource</code> commands. Manually starting or stopping resources outside of Oracle Clusterware can invalidate the resource status. In addition, Oracle Clusterware may attempt to restart a resource on which you perform a manual stop operation.</p>
<p>To start an application resource that is registered with Oracle Clusterware, use the <code dir="ltr">crsctl start resource</code> command. For example:</p>
<pre dir="ltr">
$ crsctl start resource myApache
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="crsref.htm#CHDGADEH">Appendix E, "CRSCTL Utility Reference"</a> for usage information and examples of CRSCTL command output</div>
<p>The command waits to receive a notification of success or failure from the action program each time the action program is called. Oracle Clusterware can start application resources if they have stopped due to exceeding their failure threshold values. You must register a resource using <code dir="ltr">crsctl add resource</code> before you can start it.</p>
<p>Running the <code dir="ltr">crsctl start resource</code> command on a resource sets the resource <code dir="ltr">TARGET</code> value to <code dir="ltr">ONLINE</code>. Oracle Clusterware attempts to change the state to match the <code dir="ltr">TARGET</code> by running the action program with the <code dir="ltr">start</code> action.</p>
<p>If a cluster server fails while you are starting a resource on that server, then check the state of the resource on the cluster by using the <code dir="ltr">crsctl status resource</code> command.</p>
</div>
<!-- class="sect2" -->
<a id="BGBCJFHA"></a>
<div id="CWADD91319" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Relocating Applications and Application Resources</h3>
<p>Use the <code dir="ltr">crsctl relocate resource</code> command to relocate applications and application resources. For example, to relocate the Apache Web server application to a server named <code dir="ltr">rac2</code>, run the following command:</p>
<pre dir="ltr">
# crsctl relocate resource myApache -n rac2
</pre>
<p>Each time that the action program is called, the <code dir="ltr">crsctl relocate resource</code> command waits for the duration specified by the value of the <code dir="ltr">SCRIPT_TIMEOUT</code> resource attribute to receive notification of success or failure from the action program. A relocation attempt fails if:</p>
<ul>
<li>
<p>The application has required resources that run on the initial server</p>
</li>
<li>
<p>Applications that require the specified resource run on the initial server</p>
</li>
</ul>
<p>To relocate an application and its required resources, use the <code dir="ltr">-f</code> option with the <code dir="ltr">crsctl relocate resource</code> command. Oracle Clusterware relocates or starts all resources that are required by the application regardless of their state.</p>
</div>
<!-- class="sect2" -->
<a id="BGBJHGGI"></a>
<div id="CWADD91320" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Stopping Applications and Application Resources</h3>
<p>Stop application resources with the <code dir="ltr">crsctl stop resource</code> command. The command sets the resource <code dir="ltr">TARGET</code> value to <code dir="ltr">OFFLINE</code>. Because Oracle Clusterware always attempts to match the state of a resource to its target, the Oracle Clusterware subsystem stops the application. The following example stops the Apache Web server:</p>
<pre dir="ltr">
# crsctl stop resource myApache
</pre>
<p>You cannot stop a resource if another resource has a hard stop dependency on it, unless you use the force (<code dir="ltr">-f</code>) option. If you use the <code dir="ltr">crsctl stop resource</code> <code dir="ltr"><span class="codeinlineitalic">resource_name</span></code> <code dir="ltr">-f</code> command on a resource upon which other resources depend, and if those resources are running, then Oracle Clusterware stops the resource <span class="italic">and</span> all of the resources that depend on the resource that you are stopping.</p>
</div>
<!-- class="sect2" -->
<a id="BGBBEIFG"></a>
<div id="CWADD91321" class="sect2">
<h3 class="sect2">Displaying Clusterware Application and Application Resource Status Information</h3>
<p>To display status information about applications and resources that are on cluster servers, use the <code dir="ltr">crsctl status resource</code> command. The following example displays the status information for the Apache Web server application:</p>
<pre dir="ltr">
# crsctl status resource myApache

NAME=myApache
TYPE=cluster_resource
TARGET=ONLINE
STATE=ONLINE on server010
</pre>
<p>Other information this command returns includes the following:</p>
<ul>
<li>
<p>How many times the resource has been restarted</p>
</li>
<li>
<p>How many times the resource has failed within the failure interval</p>
</li>
<li>
<p>The maximum number of times that a resource can restart or fail</p>
</li>
<li>
<p>The target state of the resource and the normal status information</p>
</li>
</ul>
<p>Use the <code dir="ltr">-f</code> option with the <code dir="ltr">crsctl status resource</code> <code dir="ltr"><span class="codeinlineitalic">resource_name</span></code> command to view full information of a specific resource.</p>
<p>Enter the following command to view information about <span class="italic">all</span> applications and resources in tabular format:</p>
<pre dir="ltr">
# crsctl status resource
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="crsref.htm#CHDGADEH">Appendix E, "CRSCTL Utility Reference"</a> for detailed information about CRSCTL commands</div>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="BGBGEBAD"></a>
<div id="CWADD91322" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Managing Automatic Restart of Oracle Clusterware Resources</h2>
<p>You can prevent Oracle Clusterware from automatically restarting a resource by setting several resource attributes. You can also control how Oracle Clusterware manages the restart counters for your resources. In addition, you can customize the timeout values for the <code dir="ltr">start</code>, <code dir="ltr">stop</code>, and <code dir="ltr">check</code> actions that Oracle Clusterware performs on resources.</p>
<p>This section includes the following topics:</p>
<ul>
<li>
<p><a href="#BGBFEHGF">Preventing Automatic Restarts</a></p>
</li>
<li>
<p><a href="#BGBIIEEI">Automatically Manage Restart Attempts Counter for Resources</a></p>
</li>
</ul>
<a id="BGBFEHGF"></a>
<div id="CWADD91323" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Preventing Automatic Restarts</h3>
<p>When a server restarts, Oracle Clusterware attempts to start the resources that run on the server as soon as the server starts. Resource startup might fail, however, if system components on which a resource depends, such as a volume manager or a file system, are not running. This is especially true if Oracle Clusterware does not manage the system components on which a resource depends. To manage automatic restarts, use the <code dir="ltr">AUTO_START</code> resource attribute to specify whether Oracle Clusterware should automatically start a resource when a server restarts.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
Regardless of the value of the <code dir="ltr">AUTO_START</code> resource attribute for a resource, the resource can start if another resource has a hard or weak start dependency on it or if the resource has a pullup start dependency on another resource.</div>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="#BGBECIFD">"Start Dependencies"</a> for more information</p>
</li>
<li>
<p><a href="resatt.htm#CHDCECHH">Appendix B, "Oracle Clusterware Resource Reference"</a> for more information about the <code dir="ltr">AUTO_START</code> resource attribute</p>
</li>
</ul>
</div>
</div>
<!-- class="sect2" -->
<a id="BGBIIEEI"></a>
<div id="CWADD91324" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Automatically Manage Restart Attempts Counter for Resources</h3>
<p>When a resource fails, Oracle Clusterware attempts to restart the resource the number of times specified in the <code dir="ltr">RESTART_ATTEMPTS</code> resource attribute, regardless of how often the resource fails. The <code dir="ltr">crsd</code> process maintains an internal counter to track how often Oracle Clusterware restarts a resource. The number of times Oracle Clusterware has attempted to restart a resource is reflected in the <code dir="ltr">RESTART_COUNT</code> resource attribute. Oracle Clusterware can automatically manage the restart attempts counter based on the stability of a resource. The <code dir="ltr">UPTIME_THRESHOLD</code> resource attribute determines the time period that a resource must remain online, after which the <code dir="ltr">RESTART_COUNT</code> attribute gets reset to 0. In addition, the <code dir="ltr">RESTART_COUNT</code> resource attribute gets reset to 0 if the resource is relocated or restarted by the user, or the resource fails over to another server.</p>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" --></div>
<!-- class="chapter" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment407">
<tr>
<td class="cellalignment416">
<table class="cellalignment412">
<tr>
<td class="cellalignment411"><a href="clonecluster.htm"><img width="24" height="24" src="../../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment411"><a href="cvu.htm"><img width="24" height="24" src="../../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;2007, 2015,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment419">
<table class="cellalignment410">
<tr>
<td class="cellalignment411"><a href="../../index.htm"><img width="24" height="24" src="../../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment411"><a href="../../nav/portal_booklist.htm"><img width="24" height="24" src="../../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment411"><a href="toc.htm"><img width="24" height="24" src="../../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment411"><a href="index.htm"><img width="24" height="24" src="../../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment411"><a href="../../nav/mindx.htm"><img width="24" height="24" src="../../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment411"><a href="../../dcommon/html/feedback.htm"><img width="24" height="24" src="../../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>
</body>
</html>
