<!DOCTYPE html>
<html lang="en" >
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1">
<meta charset="utf-8">
<title>Introduction to Automatic Workload Management</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Merged Version 1058" />
<meta name="dcterms.created" content="2015-06-24T11:50:38Z" />
<meta name="robots" content="all" />
<meta name="dcterms.title" content="Real Application Clusters Administration and Deployment Guide" />
<meta name="dcterms.identifier" content="E41960-04" />
<meta name="dcterms.isVersionOf" content="RACAD" />
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;1999, 2015,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved." />
<link rel="Start" href="../../index.htm" title="Home" type="text/html" />
<link rel="Copyright" href="../../dcommon/html/cpyr.htm" title="Copyright" type="text/html" />

<script type="application/javascript"  src="../../dcommon/js/headfoot.js"></script>
<script type="application/javascript"  src="../../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html" />
<link rel="Index" href="index.htm" title="Index" type="text/html" />
<link rel="Glossary" href="rac_glossary.htm" title="Glossary" type="text/html" />
<link rel="Prev" href="onenode.htm" title="Previous" type="text/html" />
<link rel="Next" href="rman.htm" title="Next" type="text/html" />
<link rel="alternate" href="../e41960.pdf" title="PDF version" type="application/pdf" />
<link rel="schema.dcterms" href="http://purl.org/dc/terms/" />
<link rel="stylesheet" href="../../dcommon/css/fusiondoc.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/header.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/footer.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/fonts.css">
<link rel="stylesheet" href="../../dcommon/css/foundation.css">
<link rel="stylesheet" href="../../dcommon/css/codemirror.css">
<link rel="stylesheet" type="text/css" title="Default" href="../../nav/css/html5.css">
<link rel="stylesheet" href="../../dcommon/css/respond-480-tablet.css">
<link rel="stylesheet" href="../../dcommon/css/respond-768-laptop.css">
<link rel="stylesheet" href="../../dcommon/css/respond-1140-deskop.css">
<script type="application/javascript" src="../../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">10/24</span> <!-- End Header -->
<script  >
<!-- // <![CDATA[
window.name='hafeats'
// ]]> -->
</script> <script  >
// <![CDATA[
function footdisplay(footnum,footnote) {
    var msg = window.open('', 'NewWindow' + footnum,
        'directories=no,height=120,location=no,menubar=no,resizable=yes,' +
        'scrollbars=yes,status=no,toolbar=no,width=598');
    msg.document.open('text/html');
    msg.document.write('<!DOCTYPE html ');
    msg.document.write('PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" ');

    msg.document.write('"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">');
    msg.document.write('<html xmlns="http://www.w3.org/1999/xhtml" lang="en"><head><title>');
    msg.document.write('Footnote ' + footnum);
    msg.document.write('<\/title><meta http-equiv="Content-Type" ');
    msg.document.write('content="text/html; charset=utf-8" />');
    msg.document.write('');
    msg.document.write('<style> <![CDATA[ ');
    msg.document.write('h1 {text-align: center; font-size: 14pt;}');
    msg.document.write('fieldset {border: none;}');
    msg.document.write('form {text-align: center;}');
    msg.document.write(' ]]\u003e <\/style>');
    msg.document.write('<\/head><body><h1>Footnote ' + footnum + '<\/h1><p>');
    msg.document.write(footnote);
    msg.document.write('<\/p><form action="" method="post"><fieldset>');
    msg.document.write('<input type="button" value="OK" ');
    msg.document.write('onclick="window.close();" />');
    msg.document.write('<\/fieldset><\/form><\/body><\/html>');
    msg.document.close();
    msg.focus();
}
// ]]>
</script> <noscript>
<p>The script content on this page is for navigation purposes only and does not alter the content in any way.</p>
</noscript>
<div id="RACAD076" class="chapter"><a id="BABIAICG"></a>
<h1 class="chapter"><span class="secnum">5</span> Introduction to Automatic Workload Management</h1>
<p>When a user or application connects to a database, Oracle recommends that you use a service specified in the <code >CONNECT_DATA</code> portion of the connect string. Oracle Database automatically creates one database service when the database is created. For many installations, this may be all you need. To enable more flexibility in the management of the workload using the database, Oracle Database enables you to create multiple services and specify which instances (or the server pools that contain the instances) the services are started on. If you are interested in greater workload management flexibility, then continue reading this chapter to understand the added features that you can use with services.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
The features discussed in this chapter do not work with the default database service. You must create cluster managed services to take advantage of these features. You can only manage the services that you create. Any service created automatically by the database server is managed by the database server.</div>
<p>This chapter describes how to manage workloads in Oracle Real Application Clusters (Oracle RAC) to provide high availability and scalability for your applications. This chapter includes the following topics:</p>
<ul>
<li>
<p><a href="#BABBBGJB">Overview of Automatic Workload Management</a></p>
</li>
<li>
<p><a href="#CJHHAGGA">Automatic Workload Repository</a></p>
</li>
<li>
<p><a href="#BABHBDJD">Service Deployment Options</a></p>
</li>
<li>
<p><a href="#BABEFHAA">Connection Load Balancing</a></p>
</li>
<li>
<p><a href="#BABECAFD">Fast Application Notification</a></p>
</li>
<li>
<p><a href="#BABICAJC">Load Balancing Advisory</a></p>
</li>
<li>
<p><a href="#BABBAAFE">Oracle Clients That Are Integrated with Fast Application Notification</a></p>
</li>
<li>
<p><a href="#BABBBCFG">Services and Distributed Transaction Processing in Oracle RAC</a></p>
</li>
<li>
<p><a href="#BABJJJAG">Administering Services</a></p>
</li>
<li>
<p><a href="#BABJDCJC">Measuring Performance by Service Using the Automatic Workload Repository</a></p>
</li>
<li>
<p><a href="#BABJJDFJ">Automatic Workload Repository Service Thresholds and Alerts</a></p>
</li>
</ul>
<a id="BABBBGJB"></a>
<div id="RACAD7120" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Overview of Automatic Workload Management</h2>
<p><a id="sthref442"></a>Automatic workload management enables you to manage workload distributions to provide optimal performance for users and applications. Automatic workload management comprises the following:</p>
<ul>
<li>
<p><span class="bold">Services</span>: <a id="sthref443"></a>Oracle Database provides a powerful automatic workload management facility, called services, to enable the enterprise grid vision. Services are entities that you can define in Oracle RAC databases that enable you to group database workloads and route work to the optimal instances that are assigned to offer the service.</p>
</li>
<li>
<p><span class="bold">Connection Load Balancing<a id="sthref444"></a></span>: A feature of Oracle Net Services that balances incoming connections across all of the instances that provide the requested database service.</p>
</li>
<li>
<p><a id="sthref445"></a><span class="bold">High Availability Framework</span>: An Oracle RAC component that enables Oracle Database to always maintain components in a running state.</p>
</li>
<li>
<p><span class="bold">Event Notification:</span> Oracle Clusterware generates events that can be received by application subscribers and listeners. These events are used for:</p>
<ul>
<li>
<p><span class="bold">Fast Application Notification</span> <span class="bold">(FAN)</span>: Provides <a id="sthref446"></a>information to Oracle RAC applications and clients about cluster state changes and workload service level changes, such as <code dir="ltr">UP</code> and <code dir="ltr">DOWN</code> events for instances, services, or nodes. FAN has two methods for publishing events to clients, the <a id="sthref447"></a>Oracle Notification Service daemon, which is used by <a id="sthref448"></a>Java Database Connectivity (JDBC) clients including the Oracle Application Server<span class="italic">,</span> and Oracle Streams Advanced Queueing, which is used by Oracle Call Interface and Oracle Data Provider for .NET (ODP.NET) clients.</p>
</li>
<li>
<p><a id="sthref449"></a><span class="bold">Load Balancing Advisory</span>: Provides information to applications about the current service levels that the database and its instances are providing. The load balancing advisory makes recommendations to applications about where to direct application requests to obtain the best service based on the policy that you have defined for that service. Load balancing advisory events are published through Oracle Notification Service.</p>
</li>
</ul>
</li>
<li>
<p><a id="sthref450"></a><span class="bold">Automatic Workload Repository (AWR)</span>: Tracks service-level statistics as <a href="rac_glossary.htm#CHDEAECD"><span class="xrefglossterm">metric</span></a>s. Server generated alerts can be created for these metrics when they exceed or fail to meet certain thresholds.</p>
</li>
<li>
<p><span class="bold">Fast Connection Failover</span>: <a id="sthref451"></a>This is the ability of Oracle Clients to provide rapid failover of connections by subscribing to FAN events.</p>
</li>
<li>
<p><span class="bold">Runtime Connection Load Balancing</span>: <a id="sthref452"></a>This is the ability of Oracle Clients to provide intelligent allocations of connections in the connection pool based on the current service level provided by the database instances when applications request a connection to complete some work.</p>
</li>
<li>
<p><span class="bold">Single Client Access Name (SCAN)</span>: Provides a single name to the clients connecting to Oracle RAC that does not change throughout the life of the cluster, even if you add or remove nodes from the cluster. Clients connecting with SCAN can use a simple connection string, such as a thin JDBC URL or EZConnect, and still achieve the load balancing and client connection failover.</p>
</li>
</ul>
<p>You can deploy Oracle RAC and noncluster Oracle database environments to use automatic workload management features in many different ways. Depending on the number of nodes and your environment's complexity and objectives, your choices for optimal automatic workload management and high-availability configuration depend on several considerations that are described in this chapter.</p>
</div>
<!-- class="sect1" -->
<a id="CJHHAGGA"></a>
<div id="RACAD951" class="sect1">
<h2 class="sect1">Automatic Workload Repository</h2>
<p>The <a id="sthref453"></a><a href="rac_glossary.htm#CHDEEFED"><span class="xrefglossterm">Automatic Workload Repository (AWR)</span></a> collects, processes, and maintains performance statistics for the database. The gathered data can be displayed in both reports and views. If you use services with your database, then AWR tracks <a href="rac_glossary.htm#CHDEAECD"><span class="xrefglossterm">metric</span></a>s at the service level.</p>
<p>Metrics can be measured against a variety of units, including time, transactions, or database calls. For example, the number of database calls per second is a metric. Server generated alerts can be placed on these metrics when they exceed or fail to meet user-specified thresholds. The database or system administrator can then respond, for example, by:</p>
<ul>
<li>
<p>Using the Oracle Database Resource Manager to configure the service level for one service to have priorities relative to other services</p>
</li>
<li>
<p>Stopping overloaded processes</p>
</li>
<li>
<p>Modifying a service level requirement</p>
</li>
<li>
<p>Implementing recovery scenarios in response to service quality changes</p>
</li>
</ul>
<p>Using AWR metrics and performance alerts enables you to maintain continued service availability despite service level changes. It also enables you to measure the quality of service provided by the database services.</p>
<p>The <a id="sthref454"></a>AWR ensures that the Oracle Clusterware workload management framework and the database <a id="sthref455"></a>resource manager have persistent and global representations of performance data. This information helps Oracle Database schedule job classes by service and to assign priorities to consumer groups. If necessary, you can rebalance <a id="sthref456"></a><a id="sthref457"></a>workloads manually with either Oracle Enterprise Manager or SRVCTL. You can also disconnect a series of sessions, but leave the service running.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
Oracle <span class="italic">does not</span> recommend using the DBMS_SERVICE package for use with services used by an Oracle RAC database. Use SRVCTL or Oracle Enterprise Manager to create database services for Oracle RAC.</div>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a class="olink TDPPT046" href="../../server.112/e10822/tdppt_alerts.htm#TDPPT046"><span class="italic">Oracle Database 2 Day + Performance Tuning Guide</span></a> for more information on creating alerts for metric thresholds</p>
</li>
<li>
<p><a class="olink PFGRF02601" href="../../server.112/e41573/autostat.htm#PFGRF02601"><span class="italic">Oracle Database Performance Tuning Guide</span></a> for more information about the Automatic Workload Repository</p>
</li>
<li>
<p><a class="olink ARPLS092" href="../../appdev.112/e40758/d_serv.htm#ARPLS092"><span class="italic">Oracle Database PL/SQL Packages and Types Reference</span></a> for details about Oracle Database packages</p>
</li>
</ul>
</div>
</div>
<!-- class="sect1" -->
<a id="BABHBDJD"></a>
<div id="RACAD7300" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Service Deployment Options</h2>
<p>This section describes the following service deployment topics:</p>
<ul>
<li>
<p><a href="#CHDGEBED">Using Oracle Services</a></p>
</li>
<li>
<p><a href="#BABCGFBE">Service Characteristics</a></p>
</li>
<li>
<p><a href="#BABGDFHJ">Service Usage in an Oracle RAC Database</a></p>
</li>
<li>
<p><a href="#BABGDFHJ">Service Usage in an Oracle RAC Database</a></p>
</li>
<li>
<p><a href="#CHDDBHHB">Default Service Connections</a></p>
</li>
</ul>
<a id="CHDGEBED"></a>
<div id="RACAD841" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Using Oracle Services</h3>
<p><a id="sthref458"></a>To manage <a id="sthref459"></a>workloads or a group of applications, you can define services that you assign to a particular application or to a subset of an application's operations. You can also group work by type under services. For example, online users can use one service, while batch processing can use another and reporting can use yet another service to connect to the database.</p>
<p><a id="sthref460"></a>Oracle <a id="sthref461"></a>recommends that all users who share a service have the same service level requirements. You can define specific characteristics for services and each service can represent a separate unit of work. There are many options that you can take advantage of when using services. Although you do not have to implement these options, using them helps optimize application performance.</p>
</div>
<!-- class="sect2" -->
<a id="BABCGFBE"></a>
<div id="RACAD8256" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Service Characteristics</h3>
<p>When you create new services for your database, you should define the <a id="sthref462"></a>automatic workload management characteristics for each service. The characteristics of a service include:</p>
<ul>
<li>
<p><a href="#BABDIJHC">Service Name</a></p>
</li>
<li>
<p><a href="#BABBDEAG">Net Service Name</a></p>
</li>
<li>
<p><a href="#BABDBGDE">Service Edition</a></p>
</li>
<li>
<p><a href="#BABIEBFI">Service Management Policy</a></p>
</li>
<li>
<p><a href="#BABJJCIH">Database Role for a Service</a></p>
</li>
<li>
<p><a href="#BABCDAFE">Instance Preference</a></p>
</li>
<li>
<p><a href="#BABBDDGB">Server Pool Assignment</a></p>
</li>
<li>
<p><a href="#BABHCHJA">Load Balancing Advisory Goal for Runtime Connection Load Balancing</a></p>
</li>
<li>
<p><a href="#BABJEEFA">Connection Load Balancing Goal</a></p>
</li>
<li>
<p><a href="#BABCADGG">Distributed Transaction Processing</a></p>
</li>
<li>
<p><a href="#BABHECGC">Subscription to High Availability Events</a></p>
</li>
<li>
<p><a href="#BABDCBHH">Transparent Application Failover Policy</a></p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="#BABJHDBD">"Creating Services with SRVCTL"</a> for more information</p>
</li>
<li>
<p><a href="srvctladmin.htm#i1001971">"SRVCTL Command Reference"</a> for more information about using SRVCTL to create or modify services and descriptions of the various options</p>
</li>
</ul>
</div>
<a id="BABDIJHC"></a>
<div id="RACAD8257" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Service Name</h4>
<p>Each Oracle database or service has a service name. The service name for an Oracle database is normally its global database name. The service name is used by clients to connect to one or more instances. The service name should be unique throughout your system.</p>
</div>
<!-- class="sect3" -->
<a id="BABBDEAG"></a>
<div id="RACAD8258" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Net Service Name</h4>
<p>To connect to a database service, clients use a connect descriptor that provides the location of the database and the name of the database service. A connect descriptor is comprised of one or more protocol addresses of the listener and the connect information for the destination service in the <code dir="ltr">tnsnames.ora</code> file.</p>
</div>
<!-- class="sect3" -->
<a id="BABDBGDE"></a>
<div id="RACAD8259" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Service Edition</h4>
<p>The <a id="sthref463"></a><a id="sthref464"></a><span class="italic">edition</span> attribute of a database service, which specifies the initial session edition for a session that is started using that service. If the program that creates a new session does not specify the initial session, then the edition name specified by the service is used. If the service does not specify the edition name, then the initial session edition is the database default edition.</p>
</div>
<!-- class="sect3" -->
<a id="BABIEBFI"></a>
<div id="RACAD8260" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Service Management Policy</h4>
<p>When you use Oracle Clusterware to manage your database, you can configure startup options for each individual database service when you add the service using the <code dir="ltr">srvctl add service</code> command with the <code dir="ltr">-y</code> option. If you set the management policy for a service to <a id="sthref465"></a><code dir="ltr">AUTOMATIC</code> (the default), then the service starts automatically when you start the database with SRVCTL. If you set the management policy to <a id="sthref466"></a><code dir="ltr">MANUAL</code>, then the service does not automatically start, and you must manually start it with SRVCTL. A <code dir="ltr">MANUAL</code> setting does not prevent Oracle Clusterware from monitoring the service when it is running and restarting it if a failure occurs. Prior to Oracle RAC 11<span class="italic">g</span> release 2 (11.2), all services worked as though they were defined with a <code dir="ltr">MANUAL</code> management policy.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<code dir="ltr"><a href="srvctladmin.htm#i1008562">"srvctl add service"</a></code> for more usage information</div>
<p>Using CRSCTL to stop and restart Oracle Clusterware is treated as a failure and the service is restarted if it was previously running.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
When you use automatic services in an administrator-managed database, during planned database startup, services may start on the first instances to start rather than their preferred instances.</div>
</div>
<!-- class="sect3" -->
<a id="BABJJCIH"></a>
<div id="RACAD8261" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Database Role for a Service</h4>
<p>If you configured Oracle Data Guard in your environment, then you can define a role for each service using SRVCTL with the <code dir="ltr">-l</code> option. When you specify a role for a service, Oracle Clusterware automatically starts the service only when the database role matches the role you specified for the service. Valid roles are <code dir="ltr">PRIMARY</code>, <code dir="ltr">PHYSICAL_STANDBY</code>, <code dir="ltr">LOGICAL_STANDBY</code>, and <code dir="ltr">SNAPSHOT_STANDBY</code>.</p>
<p>If multiple databases in the cluster offer the same service name, then Oracle RAC balances connections to that service across all such databases. This is useful for standby and active Oracle Data Guard databases, but if you want client connections to a service to be directed to a particular database, then the service name must be unique within the cluster (not offered by any other database).</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink SBYDB4701" href="../../server.112/e41134/concepts.htm#SBYDB4701"><span class="italic">Oracle Data Guard Concepts and Administration</span></a> for more information about database roles</div>
</div>
<!-- class="sect3" -->
<a id="BABCDAFE"></a>
<div id="RACAD8262" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Instance Preference</h4>
<p><a id="sthref467"></a><a id="sthref468"></a>When you define a service for an administrator-managed database, you define which instances normally support that service using SRVCTL with the <code dir="ltr">-r</code> option. These are known as the <a id="sthref469"></a><a id="sthref470"></a><span class="italic">preferred</span> instances. You can also define other instances to support a service if the service's preferred instance fails using SRVCTL with the <code dir="ltr">-a</code> option. These are known as <a id="sthref471"></a><a id="sthref472"></a><span class="italic">available</span> instances.</p>
<p>When you specify preferred instances, you are specifying the number of instances on which a service normally runs. Oracle Clusterware attempts to ensure that the service always runs on the number of instances for which you have configured the service. Afterwards, due to either instance failure or planned service relocations, a service may be running on an available instance. You cannot control which available instance to which Oracle Clusterware relocates the services if there are multiple instances in the list.</p>
<p>When a service moves to an available instance, Oracle Database does not move the service back to the preferred instance when the preferred instance restarts because:</p>
<ul>
<li>
<p>The service is running on the desired number of instances.</p>
</li>
<li>
<p>Maintaining the service on the current instance provides a higher level of service availability.</p>
</li>
<li>
<p>Not moving the service back to the initial preferred instance prevents a second outage.</p>
</li>
</ul>
<p>You can, however, easily automate fail back to the preferred instance by using FAN callouts.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="admin.htm#CHDFBBGE">"Overview of Oracle RAC Database Administration"</a> for more information about policy-managed and administrator-managed databases</div>
</div>
<!-- class="sect3" -->
<a id="BABBDDGB"></a>
<div id="RACAD8263" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Server Pool Assignment</h4>
<p><a id="sthref473"></a><a id="sthref474"></a>When you define services for a policy-managed database, you assign the service to a server pool where the database is running using SRVCTL with the <code dir="ltr">-g</code> option. You can define the service as either <code dir="ltr">UNIFORM</code> (running on all instances in the server pool) or <code dir="ltr">SINGLETON</code> (running on only one instance in the server pool) using the <code dir="ltr">-c</code> option. For singleton services, Oracle RAC chooses on which instance in the server pool the service is active. If that instance fails, then the service fails over to another instance in the server pool. A service can only run in one server pool.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
If you use Oracle Database Quality of Service Management (Oracle Database QoS Management), then you cannot have singleton services in a server pool, unless the maximum size of that server pool is one.</div>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="admin.htm#CHDFBBGE">"Overview of Oracle RAC Database Administration"</a> for more information about policy-managed and administrator-managed databases</div>
</div>
<!-- class="sect3" -->
<a id="BABHCHJA"></a>
<div id="RACAD8264" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Load Balancing Advisory Goal for Runtime Connection Load Balancing</h4>
<p>With <a id="sthref475"></a>runtime connection load balancing, applications can use load balancing advisory events to provide better service to users. Oracle JDBC, Oracle Universal Connection Pool (UCP) for Java, Oracle Call Interface, Connection Manager (CMAN), and ODP.NET clients are automatically integrated to take advantage of load balancing advisory events. The load balancing advisory informs the client about the current service level that an instance is providing for a service. To enable the load balancing advisory, use SRVCTL with the <code dir="ltr">-B</code> option when creating or modifying the service.</p>
<p><a id="sthref476"></a>The load balancing advisory also recommends how much of the workload should be sent to that instance. The goal determines whether connections are made to the service based on best service quality (how efficiently a single transaction completes) or best throughput (how efficiently a complete job or long-running query completes).</p>
</div>
<!-- class="sect3" -->
<a id="BABJEEFA"></a>
<div id="RACAD8265" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Connection Load Balancing Goal</h4>
<p><a id="sthref477"></a>Oracle Net Services provides connection load balancing to enable you to spread user connections across all of the instances that are supporting a service. For each service, you can use SRVCTL to define the method you want the listener to use for load balancing by setting the connection load balancing goal, specified with the <code dir="ltr">-j</code> option. Connections are classified as <code dir="ltr">LONG</code> (such as connection pools and SQL*FORMS) which tells the listener to use session-based statistics, or <code dir="ltr">SHORT</code> which tells the listener to use CPU-based statistics. If the load balancing advisory is enabled, its information is used to balance connections; otherwise, CPU utilization is used to balance connections.</p>
</div>
<!-- class="sect3" -->
<a id="BABCADGG"></a>
<div id="RACAD8266" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Distributed Transaction Processing</h4>
<p>Distributed transaction processing applications have unique requirements. To make it easier to use Oracle RAC with global transactions, use SRVCTL and specify the distributed transaction processing option (<code dir="ltr">-x</code> <code dir="ltr">TRUE</code>) for the service so that all tightly coupled branches of a distributed transaction processing transaction are run on the same instance.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#BABBBCFG">"Services and Distributed Transaction Processing in Oracle RAC"</a> for more information about distributed transaction processing in Oracle RAC</div>
</div>
<!-- class="sect3" -->
<a id="BABHECGC"></a>
<div id="RACAD8267" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Subscription to High Availability Events</h4>
<p>Oracle RAC uses FAN to notify applications about configuration changes and the current service level that is provided by each instance where the service is enabled. If you are using a client that uses Oracle Streams Advanced Queuing, such as OCI and ODP.NET clients, to receive FAN events, you must enable the service used by that client to access the alert notification queue by using SRVCTL with the <code dir="ltr">-q</code> option.</p>
</div>
<!-- class="sect3" -->
<a id="BABDCBHH"></a>
<div id="RACAD8268" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Transparent Application Failover Policy</h4>
<p>When Oracle Net Services establishes a connection to an instance, the connection remains open until the client closes the connection, the instance is shutdown, or a failure occurs. If you configure transparent application failover (TAF) for the connection, then Oracle Database moves the session to a surviving instance when an outage occurs.</p>
<p>TAF can restart a query after failover has completed but for other types of transactions, such as <code dir="ltr">INSERT</code>, <code dir="ltr">UPDATE</code>, or <code dir="ltr">DELETE</code>, the application must rollback the failed transaction and resubmit the transaction. You must also reexecute any session customizations, in other words, <code dir="ltr">ALTER SESSION</code> statements, after failover has occurred. However, with TAF, a connection is not moved during normal processing, even if the workload changes over time.</p>
<p><a id="sthref478"></a>Services simplify the deployment of TAF. You can define a TAF policy for a service, and all connections using this service will automatically have TAF enabled. This does not require any client-side changes. The TAF setting on a service overrides any TAF setting in the client connection definition.</p>
<p>To define a TAF policy for a service, use SRVCTL as in the following example, where the service name is <code dir="ltr">tafconn.example.com</code> and the database name is CRM:</p>
<pre dir="ltr">
$ srvctl modify service -d crm -s tafconn.example.com -P BASIC
   -e SELECT -z 5 -w 120
</pre>
<p>You can also specify a single transparent application failover (TAF) policy for all users of a service by defining the <code dir="ltr">FAILOVER_METHOD</code> (<code dir="ltr">-m</code> option), <code dir="ltr">FAILOVER_TYPE</code> (<code dir="ltr">-e</code> option). The TAF policy can also define the number of times that a failed session attempts to reconnect to the service (<code dir="ltr">-z</code> option) and how long it should wait between reconnection attempts (<code dir="ltr">-w</code> option).</p>
<p>Oracle Call Interface applications with TAF enabled should use FAN high availability events for fast connection failover.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink NETAG" href="../../network.112/e41945/toc.htm"><span class="italic">Oracle Database Net Services Administrator's Guide</span></a> for more information about configuring TAF</div>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="BABGDFHJ"></a>
<div id="RACAD8269" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Service Usage in an Oracle RAC Database</h3>
<p>A service name can identify multiple database instances, and an instance can belong to multiple services. Services for an Oracle RAC database are used by several database features, as described in the following topics:</p>
<ul>
<li>
<p><a href="#BABECFEE">Resource Profile for a Service</a></p>
</li>
<li>
<p><a href="#BABJJGFC">Database Resource Manager Consumer Group Mappings for Services</a></p>
</li>
<li>
<p><a href="#BABDCDCG">Performance Monitoring by Service with AWR</a></p>
</li>
<li>
<p><a href="#BABBDFCA">Parallel Operations and Services</a></p>
</li>
</ul>
<a id="BABECFEE"></a>
<div id="RACAD8270" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Resource Profile for a Service</h4>
<p><a id="sthref479"></a>Resource profiles are automatically created when you define a service. A resource profile describes how Oracle Clusterware should manage the service and which instance the service should failover to if the preferred instance stops. Resource profiles also define <a id="sthref480"></a>service <a id="sthref481"></a>dependencies for the instance and the database. Due to these dependencies, if you stop a database, then the instances and services are automatically stopped in the correct order.</p>
</div>
<!-- class="sect3" -->
<a id="BABJJGFC"></a>
<div id="RACAD8271" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Database Resource Manager Consumer Group Mappings for Services</h4>
<p>Services are integrated with the <a id="sthref482"></a>Resource Manager, which enables you to restrict the resources that are used by the users who connect to an instance by using a service. The Resource Manager enables you to map a consumer group to a service so that users who connect to an instance using that service are members of the specified consumer group.</p>
</div>
<!-- class="sect3" -->
<a id="BABDCDCG"></a>
<div id="RACAD8272" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Performance Monitoring by Service with AWR</h4>
<p>The metric data generated by <a id="sthref483"></a><a id="sthref484"></a>Automatic Workload Repository (AWR) is organized into various groups, such as event, event class, session, service, and tablespace metrics. Typically, you view the AWR data using Oracle Enterprise Manager or AWR reports.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink PFGRF94183" href="../../server.112/e41573/autostat.htm#PFGRF94183"><span class="italic">Oracle Database Performance Tuning Guide</span></a> for more information about generating and viewing AWR reports</div>
</div>
<!-- class="sect3" -->
<a id="BABBDFCA"></a>
<div id="RACAD8273" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Parallel Operations and Services</h4>
<p><a id="sthref485"></a><a id="sthref486"></a><a id="sthref487"></a><a id="sthref488"></a><a id="sthref489"></a>By default, in an Oracle RAC environment, a SQL statement executed in parallel can run across all of the nodes in the cluster. For this cross-node or inter-node parallel execution to perform well, the interconnect in the Oracle RAC environment must be size appropriately because inter-node parallel execution may result in a lot of interconnect traffic. To limit inter-node parallel execution, you can control parallel execution in an Oracle RAC environment using the <code dir="ltr">PARALLEL_FORCE_LOCAL</code> initialization parameter. By setting this parameter to <code dir="ltr">TRUE</code>, the parallel execution servers can only execute on the same Oracle RAC node where the SQL statement was started.</p>
<p>Services are used to limit the number of instances that participate in a parallel SQL operation. When the default database service is used, the parallel SQL operation can run on all available instances. You can create any number of services, each consisting of one or more instances. When a parallel SQL operation is started, the parallel execution servers are only spawned on instances which offer the specified service used in the initial database connection.</p>
<p><code dir="ltr"><a id="sthref490"></a>PARALLEL_INSTANCE_GROUP</code> is an Oracle RAC parameter that, when used in conjunction with services, lets you restrict parallel query operations to a limited number of instances.To restrict parallel query operations to a limited number of instances, set the <code dir="ltr">PARALLEL_INSTANCE_GROUP</code> initialization parameter to the name of a service. This does not affect other parallel operations such as parallel recovery or the processing of <code dir="ltr">GV$</code> queries.</p>
</div>
<!-- class="sect3" -->
<div id="RACAD8274" class="sect3"><!-- infolevel="all" infotype="General" --><a id="sthref491"></a>
<h4 class="sect3">Oracle Streams and Oracle RAC</h4>
<p><a id="sthref492"></a><a id="sthref493"></a>Oracle Streams takes advantage of Oracle RAC features in many ways. When Oracle Streams is configured in an Oracle Real Application Clusters (Oracle RAC) environment, each queue table has an owning instance. If the instance that hosts a queue table fails, another instance in the Oracle RAC database becomes the owning instance for the queue table, allowing Oracle Streams to continue operating.</p>
<p>Also, on an Oracle RAC database, a service is created for each buffered queue. This service always runs on the owner instance of the destination queue and follows the ownership of this queue if the ownership switches because of instance startup, instance shutdown, and so on. This service is used by queue-to-queue propagations.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink STRMS179" href="../../server.112/e17069/ap_other.htm#STRMS179"><span class="italic">Oracle Streams Concepts and Administration</span></a></div>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="CHDDBHHB"></a>
<div id="RACAD7123" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Default Service Connection<a id="sthref494"></a>s</h3>
<p>A special Oracle database service is created by default for your Oracle RAC database. This default service is always available on all instances in an Oracle RAC environment, unless an instance is in restricted mode. You cannot alter this service or its properties. The database also supports the following two internal services:</p>
<ul>
<li>
<p><code dir="ltr"><a id="sthref495"></a>SYS$BACKGROUND</code> is used by the background processes only</p>
</li>
<li>
<p><code dir="ltr"><a id="sthref496"></a>SYS$USERS</code> is the default service for user sessions that are not associated with any application service</p>
</li>
</ul>
<p>Both of these internal services support all of the automatic workload management features. You cannot stop or disable either of these internal services.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
You can explicitly manage only the services that you create. If a feature of the database creates an internal service, you cannot manage it using the information in this chapter.</div>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="BABEFHAA"></a>
<div id="RACAD7122" class="sect1">
<h2 class="sect1">Connection Load Balancing</h2>
<p>Oracle Net Services provides the ability to balance client connections across the instances in an Oracle RAC configuration. There are two types of load balancing that you can implement: <a id="sthref497"></a>client-side and server-side <a id="sthref498"></a>load balancing. Client-side load balancing balances the connection requests across the listeners. With server-side load balancing, the SCAN listener directs a connection request to the best instance currently providing the service by using the load balancing advisory.</p>
<p>In an Oracle RAC database, client connections should use both types of connection load balancing.</p>
<ul>
<li>
<p><a href="#BABGIHBJ">Client-Side Load Balancing</a></p>
</li>
<li>
<p><a href="#BABCFBJG">Other Client-Side Connection Features</a></p>
</li>
<li>
<p><a href="#BABFHFHF">Server-Side Load Balancing</a></p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink NETAG" href="../../network.112/e41945/toc.htm"><span class="italic">Oracle Database Net Services Administrator's Guide</span></a> for detailed information about both types of load balancing</div>
<a id="BABGIHBJ"></a>
<div id="RACAD8275" class="sect2">
<h3 class="sect2">Client-Side Load Balancing</h3>
<p><a id="sthref499"></a>Client-side load balancing is defined in your client connection definition (<code dir="ltr">tnsnames.ora</code> file, for example) by setting the parameter <code dir="ltr">LOAD_BALANCE=ON</code>. When you set this parameter to <code dir="ltr">ON</code>, Oracle Database randomly selects an address in the address list, and connects to that node's listener. This balances client connections across the available SCAN listeners in the cluster.</p>
<p>The SCAN listener redirects the connection request to the local listener of the instance that is least loaded and provides the requested service. When the listener receives the connection request, the listener connects the user to an instance that the listener knows provides the requested service. To see what services a listener supports, run the <code dir="ltr">lsnrctl services</code> command.</p>
<p>When clients connect using SCAN, Oracle Net automatically load balances client connection requests across the three IP addresses you defined for the SCAN, unless you are using EZConnect.</p>
<p>If you want to use both SCAN and non-SCAN VIPs on the client side, then set the <a id="sthref500"></a><code dir="ltr">REMOTE_LISTENER</code> parameter on the Oracle RAC database to a mix of SCAN VIPs and a list of node VIPs (you must manually update the <code dir="ltr">REMOTE_LISTENER</code> parameter to include all the SCAN VIPs and all the node VIPs).</p>
<p>The following is an example of the format you use to add SCAN and node VIP information to the <code dir="ltr">tnsnames.ora</code> file for a two-node cluster:</p>
<pre dir="ltr">
LISTENERS_<span class="italic">db_unique_name</span> =
  (ADDRESS_LIST =
    (ADDRESS=(PROTOCOL=TCP)(HOST=<span class="italic">scan_VIP1</span>)(PORT = <span class="italic">scan_port_number</span>))
    (ADDRESS=(PROTOCOL=TCP)(HOST=<span class="italic">scan_VIP2</span>)(PORT = <span class="italic">scan_port_number</span>))
    (ADDRESS=(PROTOCOL=TCP)(HOST=<span class="italic">scan_VIP3</span>)(PORT = <span class="italic">scan_port_number</span>))
    (ADDRESS = (PROTOCOL = TCP)(HOST = <span class="italic">node_VIP_name1</span>-vip)(PORT = <span class="italic">listener_port_number</span>))
    (ADDRESS = (PROTOCOL = TCP)(HOST = <span class="italic">node_VIP_name2</span>-vip)(PORT = <span class="italic">listener_port_number</span>))
  )
</pre>
<div class="infobox-note">
<p class="notep1">Note:</p>
The number of node VIPs you add must correspond to the number of nodes in the cluster.</div>
<p>Run the following SQL*Plus command:</p>
<pre dir="ltr">
SQL&gt; ALTER SYSTEM SET REMOTE_LISTENER = 'LISTENERS_<span class="italic">db_unique_name</span>' SCOPE=BOTH SID='*'
</pre>
<p>Alternatively, you can run the following SQL*Plus command to update a two-node cluster:</p>
<pre dir="ltr">
SQL&gt; ALTER SYSTEM SET remote_listener = '
(ADDRESS_LIST=
(ADDRESS=(PROTOCOL=TCP)(HOST=<span class="italic">scan_VIP1</span>)(PORT = <span class="italic">scan_port_number</span>))
(ADDRESS=(PROTOCOL=TCP)(HOST=<span class="italic">scan_VIP</span>2)(PORT = <span class="italic">scan_port_number</span>))
(ADDRESS=(PROTOCOL=TCP)(HOST=<span class="italic">scan_VIP</span>3)(PORT = <span class="italic">scan_port_number</span>))
(ADDRESS=(PROTOCOL=TCP)(HOST=<span class="italic">node_VIP_name1</span>-vip)(PORT = <span class="italic">listener_port_number</span>))
(ADDRESS=(PROTOCOL=TCP)(HOST=<span class="italic">node_VIP_name2</span>-vip)(PORT = <span class="italic">listener_port_number</span>)))' 
SCOPE=BOTH SID=*
</pre>
<div id="RACAD8276" class="sect3"><a id="sthref501"></a>
<h4 class="sect3">Generic Database Clients</h4>
<p>With Oracle Database 11<span class="italic">g</span> Release 2 (11.2), Oracle Net Services introduces the ability to add the <code dir="ltr">connect_timeout</code> and <code dir="ltr">retry_count</code> parameters to individual <code dir="ltr">tnsnames.ora</code> connection strings.</p>
<pre dir="ltr">
(CONNECT_TIMEOUT=10)(RETRY_COUNT=3)
</pre>
<p>The granularity is seconds. Oracle Net waits for 10 seconds to receive a response, after which it assumes a failure. Oracle Net goes through the address list three times before it returns a failure to the client.</p>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="BABCFBJG"></a>
<div id="RACAD8277" class="sect2">
<h3 class="sect2">Other Client-Side Connection Features</h3>
<p>In addition to client-side load balancing, Oracle Net Services include <span class="bold">connection failover</span>. If an error is returned from the chosen address in the list, Oracle Net Services tries the next address in the list until it is either successful or it has exhausted all addresses in its list. For SCAN, Oracle Net Services tries all three addresses before returning a failure to the client. EZConnect with SCAN includes this connection failover feature.</p>
<p>To increase availability, you can specify a timeout that specifies how long Oracle Net waits for a response from the listener before returning an error. The method of setting this timeout parameter depends on the type of client access.</p>
<div id="RACAD8278" class="sect3"><a id="sthref502"></a>
<h4 class="sect3">JDBC Clients</h4>
<p>You can avoid delays by setting the <code dir="ltr">oracle.net.ns.SQLnetDef.TCP_CONNTIMEOUT_STR</code> property, as follows:</p>
<pre dir="ltr">
Properties prop = new Properties ();
prop.put (oracle.net.ns.SQLnetDef.TCP_CONNTIMEOUT_STR,
"" + (1 * 1000)); // 1 second
dbPools[ poolIndex ].setConnectionProperties ( prop );
</pre>
<p>The parameter value is specified in milliseconds. Therefore, it is possible to reduce the timeout to 500Ms if the application retries connecting.</p>
</div>
<!-- class="sect3" -->
<div id="RACAD8279" class="sect3"><a id="sthref503"></a>
<h4 class="sect3">Oracle Call Interface Clients</h4>
<p>For Oracle Call Interface clients, create a local <code dir="ltr">sqlnet.ora</code> file on the client side. Configure the connection timeout in this file by adding the following line:</p>
<pre dir="ltr">
sqlnet.outbound_connect_timeout = 1
</pre>
<p>The granularity of the timeout value for the Oracle Call Interface client is in seconds. The <code dir="ltr">sqlnet.ora</code> file affects all connections using this client.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
Do <span class="italic">not</span> configure the connection timeout in the <code dir="ltr">sqlnet.ora</code> file on the server.</div>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="BABFHFHF"></a>
<div id="RACAD8280" class="sect2">
<h3 class="sect2">Server-Side Load Balancing</h3>
<p>When you create an Oracle RAC database with DBCA, it automatically:</p>
<ul>
<li>
<p>Configures and enables server-side load balancing</p>
</li>
<li>
<p>Sets the remote listener parameter to the SCAN listener (<span class="bold">Note:</span> If you do not use DBCA, you should set the <code dir="ltr">REMOTE_LISTENER</code> database parameter to <code dir="ltr"><span class="codeinlineitalic">scan_name</span></code><code dir="ltr">:</code><code dir="ltr"><span class="codeinlineitalic">scan_port</span></code>.)</p>
</li>
<li>
<p>Creates a sample client-side load balancing connection definition in the <code dir="ltr">tnsnames.ora</code> file on the server</p>
</li>
</ul>
<p>FAN, Fast Connection Failover, and the load balancing advisory depend on an accurate connection load balancing configuration that includes setting the connection load balancing goal for the service. You can use a goal of either <code dir="ltr">LONG</code> or <code dir="ltr">SHORT</code> for connection load balancing. These goals have the following characteristics:</p>
<ul>
<li>
<p><span class="bold">LONG</span>: Use the <code dir="ltr">LONG</code> <a id="sthref504"></a>connection load balancing method for applications that have long-lived connections. This is typical for connection pools and SQL*Forms sessions. <code dir="ltr">LONG</code> is the default connection load balancing goal. The following is an example of modifying a service, <code dir="ltr">batchconn</code>, with the <code dir="ltr">srvctl</code> utility to define the connection load balancing goal for long-lived sessions:</p>
<pre dir="ltr">
srvctl modify service -d <span class="italic">db_unique_name</span> -s batchconn -j LONG 
</pre></li>
<li>
<p><span class="bold">SHORT</span>: Use the <code dir="ltr">SHORT</code> <a id="sthref505"></a>connection load balancing method for applications that have short-lived connections. When using connection pools that are integrated with FAN, set the <code dir="ltr">CLB_GOAL</code> to <code dir="ltr">SHORT</code>. The following example modifies the service known as <code dir="ltr">oltpapp</code>, using SRVCTL to set the connection load balancing goal to <code dir="ltr">SHORT</code>:</p>
<pre dir="ltr">
srvctl modify service -d <span class="italic">db_unique_name</span> -s oltpapp -j SHORT 
</pre></li>
</ul>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="BABECAFD"></a>
<div id="RACAD7128" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Fast Application Notification</h2>
<p>This section provides a detailed description of <a id="sthref506"></a>FAN under the following topics:</p>
<ul>
<li>
<p><a href="#BABFCCCJ">Overview of Fast Application Notification</a></p>
</li>
<li>
<p><a href="#BABFAHDJ">Application High Availability with Services and FAN</a></p>
</li>
<li>
<p><a href="#BABJEAJJ">Managing Unplanned Outages</a></p>
</li>
<li>
<p><a href="#BABEEGIJ">Managing Planned Outages</a></p>
</li>
<li>
<p><a href="#BABGCEBF">Fast Application Notification High Availability Events</a></p>
</li>
<li>
<p><a href="#BABHAJAH">Using Fast Application Notification Callouts</a></p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#BABBAAFE">"Oracle Clients That Are Integrated with Fast Application Notification"</a> for more information about specific client environments that you can use with FAN</div>
</li>
</ul>
<a id="BABFCCCJ"></a>
<div id="RACAD7301" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Overview of Fast Application Notification</h3>
<p><a id="sthref507"></a>FAN is a notification mechanism that Oracle RAC uses to notify other processes about configuration and service level information that includes service status changes, such as <code dir="ltr">UP</code> or <code dir="ltr">DOWN</code> events. Applications can respond to FAN events and take immediate action. FAN <code dir="ltr">UP</code> and <code dir="ltr">DOWN</code> events can apply to instances, services, and nodes.</p>
<p>For cluster configuration changes, the Oracle RAC high availability framework publishes a FAN event immediately when a state change occurs in the cluster. Instead of waiting for the application to poll the database and detect a problem, applications can receive FAN events and react immediately. With FAN, in-flight transactions can be immediately terminated and the client notified when the instance fails.</p>
<p>FAN also publishes <a id="sthref508"></a>load balancing advisory events. Applications can take advantage of the load balancing advisory FAN events to direct work requests to the instance in the cluster that is currently providing the best service quality. You can take advantage of FAN events in the following three ways:</p>
<ol>
<li>
<p>Your application can use FAN without programmatic changes if you use an integrated Oracle client. The integrated <a id="sthref509"></a>clients for FAN events include Oracle Database JDBC, Oracle Database ODP.NET, and Oracle Database Oracle Call Interface. This includes applications that use TAF. The integrated Oracle clients must be Oracle Database 10<span class="italic">g</span> release 2 (10.2) or later to take advantage of the load balancing advisory FAN events. (See the <a class="olink NETAG" href="../../network.112/e41945/toc.htm"><span class="italic">Oracle Database Net Services Administrator's Guide</span></a> for more information about configuring TAF.)</p>
</li>
<li>
<p>Applications can use FAN programmatically by using the <a id="sthref510"></a>JDBC and Oracle RAC FAN application programming interface (API) or by using callbacks with Oracle Call Interface to subscribe to FAN events and to execute event handling actions upon the receipt of an event.</p>
</li>
<li>
<p>You can implement FAN with server-side callouts on your database tier.</p>
</li>
</ol>
<p>For <code dir="ltr">DOWN</code> events, the disruption to the application can be minimized because sessions to the failed instance or node can be terminated. Incomplete transactions can be terminated and the application user is immediately notified. Application users who request connections are directed to available instances only. For <code dir="ltr">UP</code> events, when services and instances are started, new connections can be created so that the application can immediately take advantage of the extra resources. Through server-side callouts, you can also use <a id="sthref511"></a>FAN to:</p>
<ul>
<li>
<p>Log status information</p>
</li>
<li>
<p>Page DBAs or to open support tickets when resources fail to start</p>
</li>
<li>
<p>Automatically start dependent external applications that must be co-located with a service</p>
</li>
<li>
<p>Change resource plans or shut down services when the number of available instances for a policy-managed database decreases, for example, if nodes fail</p>
</li>
<li>
<p>Automate the fail back of a service to preferred instances for administrator-managed databases, if needed</p>
</li>
</ul>
<p><a id="sthref512"></a>FAN events are published using Oracle Notification Service and <a id="sthref513"></a>Oracle Streams <a id="sthref514"></a>Advanced Queuing. The publication mechanisms are automatically configured as part of your Oracle RAC installation.</p>
<p>Connection Manager (CMAN) and Oracle Net Services listeners are integrated with FAN events, enabling the listener and CMAN to immediately de-register services provided by the failed instance and to avoid erroneously sending connection requests to failed instances.</p>
<p>If you specify the connection load balancing goal <code dir="ltr"><a id="sthref515"></a>CLB_GOAL_SHORT</code> for the service, then the listener uses the load balancing advisory when the listener balances the connection loads. When load balancing advisory is enabled, the metrics used for the listener are finer grained.</p>
</div>
<!-- class="sect2" -->
<a id="BABFAHDJ"></a>
<div id="RACAD7129" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Application High Availability with Services and FAN</h3>
<p>Oracle Database focuses on maintaining service availability. In Oracle RAC, Oracle services are designed to be continuously available with loads shared across one or more instances. The Oracle RAC high availability framework maintains service availability by using Oracle Clusterware and resource profiles.</p>
<p>The Oracle RAC high availability framework monitors the database and its services and sends event notifications using FAN. Oracle Clusterware recovers and balances services according to business rules and the service attributes.</p>
</div>
<!-- class="sect2" -->
<a id="BABJEAJJ"></a>
<div id="RACAD7130" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Managing Unplanned Outages</h3>
<p>You can assign services to one or more instances in an administrator-managed Oracle RAC database or to server pools in a policy-managed database. If Oracle RAC detects an <a id="sthref516"></a>outage, then Oracle Clusterware isolates the failed component and recovers the dependent components. For services, if the failed component is an instance, then Oracle Clusterware relocates the service to an available instance in the cluster. FAN events can occur at various levels within the Oracle Database architecture and are published through Oracle Notification Service and Oracle Streams AQ. You can also program notification using FAN callouts.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
Oracle Database does not run Oracle RAC <a id="sthref517"></a>callouts with guaranteed ordering. Callouts are run asynchronously and they are subject to scheduling variabilities.</div>
<p>Notification occurs from a surviving node when the failed node is out of service. The location and number of instances in an Oracle RAC environment that provide a service are transparent to applications. Restart and recovery are automatic, including the restarting of the subsystems, such as the listener and the Oracle Automatic Storage Management (Oracle ASM) processes, not just the database. You can use FAN callouts to report faults to your fault management system and to initiate repair jobs.</p>
</div>
<!-- class="sect2" -->
<a id="BABEEGIJ"></a>
<div id="RACAD7131" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Managing Planned Outages</h3>
<p><a id="sthref518"></a>For repairs, upgrades, and changes that require you to isolate one or more instances or nodes, Oracle RAC provides interfaces that relocate, disable, and enable services to minimize service disruption to application users. When you relocate a service, you indicate the service should run on another instance temporarily. If you disable a service, then the service is stopped on all database instances and is no longer available. Disabled services are not restarted automatically. Once you complete the operation, you can return the service to normal operation or enable the service and then restart it.</p>
<p>Due to dependencies, if you manually shutdown your database, then all of your services for that database automatically stop. If you want your services to automatically start when you manually restart the database, then you must set the management policy of the service to automatic. If you want to shut down only one instance of the database, but not the service, you can use the <code dir="ltr">srvctl stop instance</code> command with the <code dir="ltr">-f</code> option. When you use the <code dir="ltr">-f</code> option with this command, the database services that were running on that instance are failed over to another instance if possible.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#BABIEBFI">"Service Management Policy"</a></div>
</div>
<!-- class="sect2" -->
<a id="BABGCEBF"></a>
<div id="RACAD7132" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Fast Application Notification High Availability Events</h3>
<p><a href="#BABCFJCA">Table 5-1</a> lists the <a id="sthref519"></a>FAN event types and <a href="#BABJHGIA">Table 5-2</a> describes name-value pairs for the event parameters. The event type is always the first entry and the timestamp is always the last entry, as in the following example:</p>
<pre dir="ltr">
FAN event type: SERVICEMEMBER VERSION=1.0
service=fantest database=ractest instance=rac1host=node01 status=up
reason=FAILURE card=1 timestamp=2010-07-02 22:06:02
</pre>
<div id="RACAD8300" class="tblhruleformal">
<p class="titleintable"><a id="sthref520"></a><a id="BABCFJCA"></a>Table 5-1 FAN Event Types</p>
<table class="cellalignment432" title="FAN Event Types" summary="FAN event types and descriptions" dir="ltr">
<thead>
<tr class="cellalignment423">
<th class="cellalignment430" id="r1c1-t23">Event Types</th>
<th class="cellalignment430" id="r1c2-t23">Notes</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment423">
<td class="cellalignment431" id="r2c1-t23" headers="r1c1-t23">
<p><code dir="ltr">DATABASE</code>, <code dir="ltr">INSTANCE</code>, <code dir="ltr">NODE</code>, <code dir="ltr">SERVICE</code>, <code dir="ltr">SERVICEMEMBER</code>, <code dir="ltr">SERVICEMETRICS</code>, <code dir="ltr">SRV_PRECONNECT</code>.</p>
</td>
<td class="cellalignment431" headers="r2c1-t23 r1c2-t23">
<ul>
<li>
<p><code dir="ltr">DATABASE</code> and <code dir="ltr">INSTANCE</code> types list the database service as <code dir="ltr">DB_UNIQUE_NAME</code>.</p>
</li>
<li>
<p>Events of <code dir="ltr">SERVICEMETRICS</code> type are load balancing advisory events.</p>
<p><span class="bold">See Also:</span> <a href="#BABHJDGB">Table 5-4</a> for more information about load balancing events</p>
</li>
</ul>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblhruleformal" -->
<div id="RACAD7687" class="tblhruleformal">
<p class="titleintable"><a id="sthref521"></a><a id="BABJHGIA"></a>Table 5-2 Event Parameter Name-Value Pairs and Descriptions</p>
<table class="cellalignment432" title="Event Parameter Name-Value Pairs and Descriptions" summary="Event payload parameters and descriptions" dir="ltr">
<thead>
<tr class="cellalignment423">
<th class="cellalignment430" id="r1c1-t24">Parameter</th>
<th class="cellalignment430" id="r1c2-t24">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment423">
<td class="cellalignment431" id="r2c1-t24" headers="r1c1-t24">
<p><code dir="ltr">VERSION</code></p>
</td>
<td class="cellalignment431" headers="r2c1-t24 r1c2-t24">
<p>Version of the event record. Used to identify release changes.</p>
</td>
</tr>
<tr class="cellalignment423">
<td class="cellalignment431" id="r3c1-t24" headers="r1c1-t24">
<p><code dir="ltr">DATABASE</code></p>
</td>
<td class="cellalignment431" headers="r3c1-t24 r1c2-t24">
<p>The unique name of the database supporting the service; matches the initialization parameter value for <code dir="ltr">DB_UNIQUE_NAME</code>, which defaults to the value of the <code dir="ltr">DB_NAME</code> initialization parameter.</p>
</td>
</tr>
<tr class="cellalignment423">
<td class="cellalignment431" id="r4c1-t24" headers="r1c1-t24">
<p><code dir="ltr">INSTANCE</code></p>
</td>
<td class="cellalignment431" headers="r4c1-t24 r1c2-t24">
<p>The name of the instance that supports the service; matches the <code dir="ltr">ORACLE_SID</code> value.</p>
</td>
</tr>
<tr class="cellalignment423">
<td class="cellalignment431" id="r5c1-t24" headers="r1c1-t24">
<p><code dir="ltr">HOST</code></p>
</td>
<td class="cellalignment431" headers="r5c1-t24 r1c2-t24">
<p>The name of the node that supports the service or the node that has stopped; matches the node name known to Cluster Synchronization Services (CSS).</p>
</td>
</tr>
<tr class="cellalignment423">
<td class="cellalignment431" id="r6c1-t24" headers="r1c1-t24">
<p><code dir="ltr">SERVICE</code></p>
</td>
<td class="cellalignment431" headers="r6c1-t24 r1c2-t24">
<p>The service name; matches the name of the service as listed in <code dir="ltr">DBA_SERVICES</code>.</p>
</td>
</tr>
<tr class="cellalignment423">
<td class="cellalignment431" id="r7c1-t24" headers="r1c1-t24">
<p><code dir="ltr">STATUS</code></p>
</td>
<td class="cellalignment431" headers="r7c1-t24 r1c2-t24">
<p>Values are <code dir="ltr">UP</code>, <code dir="ltr">DOWN</code>, <code dir="ltr">NODEDOWN</code> (this only applies to the <code dir="ltr">NODE</code> event type), <code dir="ltr">NOT_RESTARTING</code>, <code dir="ltr">PRECONN_UP</code>, <code dir="ltr">PRECONN_DOWN</code>, and <code dir="ltr">UNKNOWN</code>.</p>
<p><span class="bold">Notes:</span></p>
<ul>
<li>
<p>When the node is down, the status is <code dir="ltr">NODEDOWN</code>, as opposed to <code dir="ltr">DOWN</code> for other event types.</p>
</li>
<li>
<p>When <code dir="ltr">STATUS=NODEDOWN</code> and <code dir="ltr">REASON=MEMBER_LEAVE</code>, a node has failed and is no longer part of the cluster.</p>
</li>
<li>
<p>When <code dir="ltr">STATUS=NODEDOWN</code> and <code dir="ltr">REASON=PUBLIC_NW_DOWN</code>, the node is up but it is unreachable because the public network is down.</p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment423">
<td class="cellalignment431" id="r8c1-t24" headers="r1c1-t24">
<p><code dir="ltr">REASON</code></p>
</td>
<td class="cellalignment431" headers="r8c1-t24 r1c2-t24">
<p><code dir="ltr">AUTOSTART</code>, <code dir="ltr">BOOT</code>, <code dir="ltr">DEPENDENCY</code>, <code dir="ltr">FAILURE</code>, <code dir="ltr">MEMBER_LEAVE</code>, <code dir="ltr">PUBLIC_NW_DOWN</code>, <code dir="ltr">USER</code>.</p>
<p><span class="bold">Notes:</span></p>
<ul>
<li>
<p>For <code dir="ltr">DATABASE</code> and <code dir="ltr">SERVICE</code> event types, <code dir="ltr">REASON=AUTOSTART</code> if, when the node started, the <code dir="ltr">AUTO_START</code> resource attribute was set to <code dir="ltr">1</code>, and the resource was offline before the node started</p>
</li>
<li>
<p>For <code dir="ltr">DATABASE</code> and <code dir="ltr">SERVICE</code> event types, <code dir="ltr">REASON=BOOT</code> if, when the node started, the resource started because it was online before the node started</p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment423">
<td class="cellalignment431" id="r9c1-t24" headers="r1c1-t24">
<p><code dir="ltr">CARDINALITY</code></p>
</td>
<td class="cellalignment431" headers="r9c1-t24 r1c2-t24">
<p>The number of service members that are currently active; included in all <code dir="ltr">SERVICEMEMBER UP</code> events.</p>
<p>Following is an example of <code dir="ltr">SERVICEMEMBER UP</code> event:</p>
<pre dir="ltr">
SERVICEMEMBER VERSION=1.0 service=myServ.company.com
database=prod instance=PROD1 host=stru09 status=up
reason=USER card=1 timestamp=2010-07-27 14:43:03
</pre></td>
</tr>
<tr class="cellalignment423">
<td class="cellalignment431" id="r10c1-t24" headers="r1c1-t24">
<p><code dir="ltr">INCARNATION</code></p>
</td>
<td class="cellalignment431" headers="r10c1-t24 r1c2-t24">
<p>For <code dir="ltr">NODEDOWN</code> events; the new cluster incarnation.</p>
<p>Following is an example of <code dir="ltr">NODEDOWN</code> event:</p>
<pre dir="ltr">
NODE VERSION=1.0 host=stru09 incarn=175615351 status=down
reason=member_leave timestamp=27-Jul-2010 14:49:32
</pre></td>
</tr>
<tr class="cellalignment423">
<td class="cellalignment431" id="r11c1-t24" headers="r1c1-t24">
<p><code dir="ltr">TIMESTAMP</code></p>
</td>
<td class="cellalignment431" headers="r11c1-t24 r1c2-t24">
<p>The local time zone to use when ordering notification events.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblhruleformal" -->
<p>Some of the FAN event record parameters have values that correspond to values returned by the <code dir="ltr">SYS_CONTEXT</code> function using the default namespace <code dir="ltr">USERENV</code>, as shown in <a href="#BABFJDAI">Table 5-3</a>.</p>
<div id="RACAD7688" class="tblformal">
<p class="titleintable"><a id="sthref522"></a><a id="BABFJDAI"></a>Table 5-3 FAN Parameters and Matching Session Information<a id="sthref523"></a></p>
<table class="cellalignment429" title="FAN Parameters and Matching Session Information" summary="FAN parameters and matching Oracle database signatures" dir="ltr">
<thead>
<tr class="cellalignment423">
<th class="cellalignment430" id="r1c1-t25">FAN Parameter</th>
<th class="cellalignment430" id="r1c2-t25">Matching Session Information</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment423">
<td class="cellalignment431" id="r2c1-t25" headers="r1c1-t25">
<p><code dir="ltr">SERVICE<a id="sthref524"></a></code></p>
</td>
<td class="cellalignment431" headers="r2c1-t25 r1c2-t25">
<p><code dir="ltr">sys_context('userenv', 'service_name')</code></p>
</td>
</tr>
<tr class="cellalignment423">
<td class="cellalignment431" id="r3c1-t25" headers="r1c1-t25">
<p><code dir="ltr">DATABASE_UNIQUE_NAME<a id="sthref525"></a><a id="sthref526"></a></code></p>
</td>
<td class="cellalignment431" headers="r3c1-t25 r1c2-t25">
<p><code dir="ltr">sys_context('userenv', 'db_unique_name')</code></p>
</td>
</tr>
<tr class="cellalignment423">
<td class="cellalignment431" id="r4c1-t25" headers="r1c1-t25">
<p><code dir="ltr">INSTANCE<a id="sthref527"></a></code></p>
</td>
<td class="cellalignment431" headers="r4c1-t25 r1c2-t25">
<p><code dir="ltr">sys_context('userenv', 'instance_name')</code></p>
</td>
</tr>
<tr class="cellalignment423">
<td class="cellalignment431" id="r5c1-t25" headers="r1c1-t25">
<p><code dir="ltr">CLUSTER_NODE_NAME<a id="sthref528"></a></code></p>
</td>
<td class="cellalignment431" headers="r5c1-t25 r1c2-t25">
<p><code dir="ltr">sys_context('userenv', 'server_host')</code></p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="sect2" -->
<a id="BABHAJAH"></a>
<div id="RACAD7133" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Using Fast Application Notification Callouts</h3>
<p><a id="sthref529"></a>FAN callouts are server-side executables that Oracle RAC executes immediately when high availability events occur. You can use FAN callouts to automate activities when events occur in a cluster configuration, such as:</p>
<ul>
<li>
<p>Opening fault tracking tickets</p>
</li>
<li>
<p>Sending messages to pagers</p>
</li>
<li>
<p>Sending e-mail</p>
</li>
<li>
<p>Starting and stopping server-side applications</p>
</li>
<li>
<p>Maintaining an uptime log by logging each event as it occurs</p>
</li>
<li>
<p>Relocating low-priority services when high priority services come online</p>
</li>
</ul>
<p><a id="sthref530"></a>To use FAN callouts, place an executable in the <code dir="ltr"><span class="codeinlineitalic">Grid_home</span></code><code dir="ltr">/racg/usrco</code> directory on every node that runs Oracle Clusterware. The executable must be able to run stand-alone when called, with optional arguments, from another program. The following is an example file for the <code dir="ltr"><span class="codeinlineitalic">Grid_home</span></code><code dir="ltr">/racg/usrco/callout.sh</code> callout:</p>
<pre dir="ltr">
#! /bin/ksh
FAN_LOGFILE= [your path name]/admin/log/'hostname`_uptime'.log
echo $* "reported="'date' &gt;&gt; $FAN_LOGFILE &amp;
</pre>
<p>The previous example produces output similar to the following:</p>
<pre dir="ltr">
NODE VERSION=1.0 host=sun880-2 incarn=23 status=nodedown reason=
timestamp=08-Oct-2004 04:02:14 reported=Fri Oct 8 04:02:14 PDT 2004
</pre>
<p>The contents of a FAN event record matches the current session of the user logged on to the database, as shown in <a href="#BABFJDAI">Table 5-3</a>. The user environment (<code dir="ltr">USERENV</code>) information is also available using Oracle Call Interface connection handle and descriptor attributes (using <code dir="ltr">OCIAttrGet()</code>). Use this information to take actions on sessions that match the FAN event data.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="#BABJHGIA">Table 5-2, "Event Parameter Name-Value Pairs and Descriptions"</a> for information about the callout and event details</p>
</li>
<li>
<p><a class="olink LNOCI020" href="../../appdev.112/e10646/oci02bas.htm#LNOCI020"><span class="italic">Oracle Call Interface Programmer's Guide</span></a> for more information about connection handle and descriptor attributes</p>
</li>
</ul>
</div>
<div id="RACAD8326" class="sect3"><!-- infolevel="all" infotype="General" --><a id="sthref531"></a>
<h4 class="sect3">User Callout Events</h4>
<p>All user callout events originate from Oracle Clusterware. If a node goes down, or a resource (such as a VIP or a database) changes state or properties, then Oracle Clusterware sends out an Oracle Notification Service event to that effect. This event must always be pushed to at least one node in the cluster, and the best way to ensure that is to make the user callouts listen to Oracle Notification Service events from within the agent of the Oracle Notification Service resource.</p>
<p>If the Oracle Notification Service resource is down on a particular node, then the events on that node are lost, and so user callouts are not issued. The Oracle Notification Service event is read from within the agent of the Oracle Notification Service resource, is translated, and is posted to user callouts.</p>
<p>In general, events are only posted to user callouts on the node from which the event originated. For example, if the database on <code dir="ltr">node1</code> goes down, then the callout is posted to <code dir="ltr">node1</code>, only. The only exceptions to this are node down and VIP down events&mdash;these events are posted to all nodes, regardless of from where they originated.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
In Oracle Database 11<span class="italic">g</span> release 2 (11.2.0.2), the two attributes <span class="italic">service</span> and <span class="italic">database</span> for event types of DATABASE or INSTANCE do not include the database domain name.</div>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="BABICAJC"></a>
<div id="RACAD7302" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Load Balancing Advisory</h2>
<p>This section describes the <a id="sthref532"></a>load balancing advisory under the following topics:</p>
<ul>
<li>
<p><a href="#BABJEEFI">Overview of the Load Balancing Advisory</a></p>
</li>
<li>
<p><a href="#BABICBJB">Configuring Your Environment to Use the Load Balancing Advisory</a></p>
</li>
<li>
<p><a href="#BABGJJDH">Load Balancing Advisory FAN Events</a></p>
</li>
<li>
<p><a href="#BABIJAEI">Monitoring Load Balancing Advisory FAN Events</a></p>
</li>
</ul>
<a id="BABJEEFI"></a>
<div id="RACAD7303" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Overview of the Load Balancing Advisory</h3>
<p>Load balancing distributes work across all of the available Oracle RAC database instances. Oracle recommends that applications use persistent connections that span the instances that offer a particular service, such as when using connection pools. When using persistent connections, connections are created infrequently and exist for a long duration. Work comes into the system with high frequency, borrows these connections, and exists for a relatively short duration. The load balancing advisory provides advice about how to direct incoming work to the instances that provide the optimal quality of service for that work. This minimizes the need to relocate the work later.</p>
<p>By using the Load Balancing Advisory or runtime connection load balancing <a id="sthref533"></a>goals, feedback is built in to the system. Work is routed to provide the best service times globally, and routing responds gracefully to changing system conditions. In a steady state, the system approaches equilibrium with improved throughput across all of the Oracle RAC instances.</p>
<p>Standard architectures that can use the load balancing advisory include connection load balancing, transaction processing monitors, application servers, connection concentrators, hardware and software load balancers, job schedulers, batch schedulers, and message queuing systems. All of these applications can allocate work.</p>
<p>The <a id="sthref534"></a>load balancing advisory is deployed with key Oracle clients, such as a listener, the JDBC universal connection pool, and the ODP.NET Connection Pool. Third-party applications can also subscribe to load balancing advisory events by using JDBC and Oracle RAC FAN API or by using callbacks with Oracle Call Interface.</p>
</div>
<!-- class="sect2" -->
<a id="BABICBJB"></a>
<div id="RACAD7304" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Configuring Your Environment to Use the Load Balancing Advisory</h3>
<p>You can configure your environment to use the <a id="sthref535"></a>load balancing advisory by defining service-level goals for each service for which you want to enable load balancing. Configuring a service-level goal enables the load balancing advisory and the publishing of FAN load balancing events for that service.</p>
<p>There are two types of service-level <a id="sthref536"></a>goals for runtime connection load balancing:</p>
<ul>
<li>
<p><a id="sthref537"></a><code dir="ltr">SERVICE_TIME</code>: Attempts to direct work requests to instances according to response time. Load balancing advisory data is based on elapsed time for work done in the service plus available bandwidth to the service. An example for the use of <code dir="ltr">SERVICE_TIME</code> is for workloads such as internet shopping where the rate of demand changes. The following example shows how to set the goal to <code dir="ltr">SERVICE_TIME</code> for connections using the <code dir="ltr">online</code> service:</p>
<pre dir="ltr">
srvctl modify service -d <span class="italic">db_unique_name</span> -s online -B SERVICE_TIME -j SHORT
</pre></li>
<li>
<p><code dir="ltr"><a id="sthref538"></a>THROUGHPUT</code>: Attempts to direct work requests according to throughput. The load balancing advisory is based on the rate that work is completed in the service plus available bandwidth to the service. An example for the use of <code dir="ltr">THROUGHPUT</code> is for workloads such as batch processes, where the next job starts when the last job completes. The following example shows how to set the goal to <code dir="ltr">THROUGHPUT</code> for connections using the <code dir="ltr">sjob</code> service:</p>
<pre dir="ltr">
srvctl modify service -d <span class="italic">db_unique_name</span> -s sjob -B THROUGHPUT -j LONG
</pre></li>
</ul>
<p>Setting the runtime connection load balancing goal to <code dir="ltr">NONE</code> disables load balancing for the service. You can see the goal settings for a service in the data dictionary by querying the <code dir="ltr">DBA_SERVICES</code>, <code dir="ltr">V$SERVICES</code>, and <code dir="ltr">V$ACTIVE_SERVICES</code> views. You can also review the load balancing settings for a service using Oracle Enterprise Manager.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="#BABJJJAG">"Administering Services"</a> for more information about administering services and adding goals to services</p>
</li>
<li>
<p><a class="olink TDPRC307" href="../../rac.112/e17264/configwlm.htm#TDPRC307"><span class="italic">Oracle Database 2 Day + Real Application Clusters Guide</span></a> for more information about managing services using Oracle Enterprise Manager</p>
</li>
</ul>
</div>
</div>
<!-- class="sect2" -->
<a id="BABGJJDH"></a>
<div id="RACAD7305" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Load Balancing Advisory FAN Events</h3>
<p>The <a id="sthref539"></a>load balancing advisory FAN events provide metrics for load balancing algorithms. The easiest way to take advantage of these events is to use the runtime connection load balancing feature of an Oracle integrated client such as JDBC, ODP.NET, or Oracle Call Interface. Other client applications can take advantage of FAN programatically by using the Oracle Notification Service application programming interface (ONS API) to subscribe to FAN events and execute event-handling actions upon receipt. <a href="#BABHJDGB">Table 5-4</a> describes the load balancing advisory FAN event parameters.</p>
<div id="RACAD7689" class="tblformalwide">
<p class="titleintable"><a id="sthref540"></a><a id="BABHJDGB"></a>Table 5-4 Load Balancing Advisory FAN Events</p>
<table class="cellalignment432" title="Load Balancing Advisory FAN Events" summary="Event payload parameters and descriptions" dir="ltr">
<thead>
<tr class="cellalignment423">
<th class="cellalignment430" id="r1c1-t29">Parameter</th>
<th class="cellalignment430" id="r1c2-t29">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment423">
<td class="cellalignment431" id="r2c1-t29" headers="r1c1-t29">
<p><code dir="ltr">VERSION</code></p>
</td>
<td class="cellalignment431" headers="r2c1-t29 r1c2-t29">
<p>Version of the event record. Used to identify release changes.</p>
</td>
</tr>
<tr class="cellalignment423">
<td class="cellalignment431" id="r3c1-t29" headers="r1c1-t29">
<p><code dir="ltr">EVENT_TYPE</code></p>
</td>
<td class="cellalignment431" headers="r3c1-t29 r1c2-t29">
<p>A load balancing advisory event is always of the <code dir="ltr">SERVICEMETRICS</code> event type.</p>
</td>
</tr>
<tr class="cellalignment423">
<td class="cellalignment431" id="r4c1-t29" headers="r1c1-t29">
<p><code dir="ltr">SERVICE</code></p>
</td>
<td class="cellalignment431" headers="r4c1-t29 r1c2-t29">
<p>The service name; matches the value of <code dir="ltr">NAME</code> in <code dir="ltr">DBA_SERVICES</code>.</p>
</td>
</tr>
<tr class="cellalignment423">
<td class="cellalignment431" id="r5c1-t29" headers="r1c1-t29">
<p><code dir="ltr">DATABASE_UNIQUE_NAME</code></p>
</td>
<td class="cellalignment431" headers="r5c1-t29 r1c2-t29">
<p>The unique database supporting the service; matches the initialization parameter value for <code dir="ltr">DB_UNIQUE_NAME</code>, which defaults to the value of the initialization parameter <code dir="ltr">DB_NAME</code>.</p>
</td>
</tr>
<tr class="cellalignment423">
<td class="cellalignment431" id="r6c1-t29" headers="r1c1-t29">
<p><code dir="ltr">INSTANCE</code></p>
</td>
<td class="cellalignment431" headers="r6c1-t29 r1c2-t29">
<p>The name of the instance that supports the service; matches the <code dir="ltr">ORACLE_SID</code> value.</p>
</td>
</tr>
<tr class="cellalignment423">
<td class="cellalignment431" id="r7c1-t29" headers="r1c1-t29">
<p><code dir="ltr">PERCENT</code></p>
</td>
<td class="cellalignment431" headers="r7c1-t29 r1c2-t29">
<p>The percentage of work requests to send to this database instance.</p>
</td>
</tr>
<tr class="cellalignment423">
<td class="cellalignment431" id="r8c1-t29" headers="r1c1-t29">
<p><code dir="ltr">FLAG</code></p>
</td>
<td class="cellalignment431" headers="r8c1-t29 r1c2-t29">
<p>Indication of the service quality relative to the service goal. Valid values are <code dir="ltr">GOOD</code>, <code dir="ltr">VIOLATING</code>, <code dir="ltr">NO DATA</code>, and <code dir="ltr">BLOCKED</code>.</p>
</td>
</tr>
<tr class="cellalignment423">
<td class="cellalignment431" id="r9c1-t29" headers="r1c1-t29">
<p><code dir="ltr">TIMESTAMP</code></p>
</td>
<td class="cellalignment431" headers="r9c1-t29 r1c2-t29">
<p>The local time zone to use when ordering notification events.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformalwide" -->
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink JJDBC" href="../../java.112/e16548/toc.htm"><span class="italic">Oracle Database JDBC Developer's Guide</span></a> for more information about the Oracle RAC FAN API</div>
</div>
<!-- class="sect2" -->
<a id="BABIJAEI"></a>
<div id="RACAD8281" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Monitoring Load Balancing Advisory FAN Events</h3>
<p>You can use the following query against the internal queue table for load balancing advisory FAN events to monitor load balancing advisory events generated for an instance:</p>
<pre dir="ltr">
SET PAGES 60 COLSEP '|' LINES 132 NUM 8 VERIFY OFF FEEDBACK OFF
COLUMN user_data HEADING "AQ Service Metrics" FORMAT A60 WRAP
BREAK ON service_name SKIP 1
SELECT
 TO_CHAR(enq_time, 'HH:MI:SS') Enq_time, user_data
 FROM sys.sys$service_metrics_tab
 ORDER BY 1 ;
</pre>
<p>The results of this query contain rows similar to the following:</p>
<pre dir="ltr">
02:56:05|SYS$RLBTYP('hr', 'VERSION=1.0 database=sales service=hr { {in
        |stance=sales_4 percent=38 flag=GOOD aff=TRUE}{instance=sales_1
        | percent=62 flag=GOOD aff=TRUE} } timestamp=2010-07-16 07:56
        |:05')
</pre></div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="BABBAAFE"></a>
<div id="RACAD7134" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Oracle Clients That Are Integrated with Fast Application Notification</h2>
<p>Oracle has integrated FAN with many of the common <a id="sthref541"></a>client application environments that are used to connect to Oracle RAC databases. Therefore, the easiest way to use FAN is to use an integrated Oracle Client.</p>
<p>The following sections discuss how FAN is integrated with Oracle Clients and how to enable FAN events for the several specific client development environments:</p>
<ul>
<li>
<p><a href="#BABIDJGH">Overview of Oracle Integrated Clients and FAN</a></p>
</li>
<li>
<p><a href="#BABFCFHA">Enabling JDBC Clients for Fast Connection Failover</a></p>
</li>
<li>
<p><a href="#BABFFCAE">Enabling JDBC Clients for Runtime Connection Load Balancing</a></p>
</li>
<li>
<p><a href="#BABEFCIC">Enabling Oracle Call Interface Clients for Fast Connection Failover</a></p>
</li>
<li>
<p><a href="#BABJEIAJ">Enabling Oracle Call Interface Clients for Runtime Connection Load Balancing</a></p>
</li>
<li>
<p><a href="#BABFAEAB">Enabling ODP.NET Clients to Receive FAN High Availability Events</a></p>
</li>
<li>
<p><a href="#BABDAFFE">Enabling ODP.NET Clients to Receive FAN Load Balancing Advisory Events</a></p>
</li>
</ul>
<a id="BABIDJGH"></a>
<div id="RACAD8282" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Overview of Oracle Integrated Clients and FAN</h3>
<p>The overall goal when using FAN is to enable applications to consistently obtain connections to available instances that provide the best service. The Oracle integrated clients you can use are <a id="sthref542"></a>Oracle Call Interface Session Pools, <a id="sthref543"></a>CMAN session pools, and <a id="sthref544"></a>JDBC and <a id="sthref545"></a>ODP.NET connection pools. The Fast Connection Failover (FCF) feature is a FAN client implemented through a connection pool.</p>
<p>Due to the integration with FAN, Oracle integrated clients are more aware of the current status of an Oracle RAC cluster. This prevents client connections from waiting or trying to connect to an instance that is no longer available. When instances start, Oracle RAC uses FAN to notify the connection pool so that the connection pool can create connections to the recently started instance and take advantage of the additional resources that this instance provides.</p>
<p>Oracle <a id="sthref546"></a>connection pools that are integrated with FAN can:</p>
<ul>
<li>
<p>Balance connections across all of the Oracle RAC instances when a service starts; this is preferable to directing the sessions that are defined for the connection pool to the first Oracle RAC instance that supports the service</p>
</li>
<li>
<p>Remove terminated connections immediately when a service is declared <code dir="ltr">DOWN</code> at an instance, and immediately when nodes are declared <code dir="ltr">DOWN</code></p>
</li>
<li>
<p>Report errors to clients immediately when Oracle Database detects the <code dir="ltr">NOT RESTARTING</code> state, instead of making the client wait while the service repeatedly attempts to restart</p>
</li>
<li>
<p>Balance work requests at runtime using load balancing advisory events</p>
</li>
</ul>
<p>The use of connection pools and FAN requires that you have properly configured database connection load balancing across all of the instances that provide the services used by the connection pool. Oracle recommends that you configure both client-side and server-side load balancing with <a id="sthref547"></a>Oracle Net Services. If you use DBCA to create your database, then both client-side and server-side load balancing are configured by default.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#BABEFHAA">"Connection Load Balancing"</a></div>
</div>
<!-- class="sect2" -->
<a id="BABFCFHA"></a>
<div id="RACAD7135" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Enabling JDBC Clients for Fast Connection Failover</h3>
<p><a id="sthref548"></a><a id="sthref549"></a><a id="sthref550"></a><a id="sthref551"></a>Enabling Fast Connection Failover (FCF) for the Oracle JDBC Universal Connection Pool (UCP) enables the use of FAN high availability and load balancing advisory events. To use FAN, your application can use the JDBC development environment for either thick or thin JDBC clients. The Java Database Connectivity Oracle Call Interface (JDBC/OCI) driver connection pooling functionality is part of the JDBC client. This functionality is provided by the <code dir="ltr">OracleOCIConnectionPool</code> class.</p>
<p>The UCP is integrated to take advantage of Load Balancing Advisory information. Oracle introduced the Universal Connection Pool for JDBC in Oracle Database 11<span class="italic">g</span> release 11.1.0.7.0. Consequently, Oracle deprecated the existing JDBC connection pool, the Implicit Connection Cache, that was introduced in Oracle Database 10<span class="italic">g</span> release 1, for use with Oracle RAC databases. You can use the UCP with Oracle Database 10<span class="italic">g</span> or Oracle Database 11<span class="italic">g</span>.</p>
<p>To enable FCF for the JDBC client, set the <code dir="ltr">fastConnectionFailoverEnabled</code> property of the <code dir="ltr">OracleDataSource</code> class in the <code dir="ltr">oracle.jdbc.pool</code> package before making the first <code dir="ltr">getConnection()</code> request. When you enable FCF for the JDBC client, the failover property applies to every connection in the connection pool. Enabling FCF with JDBC Thin Driver (Thin driver)<a id="sthref552"></a><a id="sthref553"></a> or JDBC/OCI clients enables the connection pool to receive and react to all FAN events.</p>
<p>JDBC application developers can now programatically integrate with FAN by using a set of APIs introduced in Oracle Database 11<span class="italic">g</span> release 2 (11.2). The Oracle RAC FAN APIs enable application code to receive and respond to FAN event notifications sent by Oracle RAC in the following ways:</p>
<ul>
<li>
<p>Listening for Oracle RAC service down, service up, and node down events</p>
</li>
<li>
<p>Listening for load balancing advisory events and responding to them</p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a class="olink JJDBC" href="../../java.112/e16548/toc.htm"><span class="italic">Oracle Database JDBC Developer's Guide</span></a> for more information about using APIs, configuring the JDBC universal connection pool, and Oracle Notification Service</p>
</li>
<li>
<p><a class="olink TDPRC" href="../e17264/toc.htm"><span class="italic">Oracle Database 2 Day + Real Application Clusters Guide</span></a> for more information about configuring JDBC clients</p>
</li>
</ul>
</div>
<div id="RACAD8283" class="sect3"><!-- infolevel="all" infotype="General" --><a id="sthref554"></a>
<h4 class="sect3">Oracle Notification Service for JDBC Clients</h4>
<p><a id="sthref555"></a>FCF relies on Oracle Notification Service to propagate database events between the connection pool and the Oracle RAC database. At runtime, the connection pool must be able to setup an Oracle Notification Service environment. Oracle Notification Service (<code dir="ltr">ons.jar</code>) is included as part of the Oracle Client software. Oracle Notification Service can be configured using either remote configuration or client-side Oracle Notification Service daemon configuration. Remote Oracle Notification Service subscription offers the following advantages:</p>
<ul>
<li>
<p>Support for an All Java mid-tier software</p>
</li>
<li>
<p>An Oracle Notification Service daemon is not necessary on the client system, so you do not have to manage this process</p>
</li>
<li>
<p>Simple configuration by way of a <code dir="ltr">DataSource</code> property</p>
</li>
</ul>
</div>
<!-- class="sect3" -->
<a id="BABHDEHI"></a>
<div id="RACAD7306" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Configuring FCF for JDBC/OCI and JDBC Thin Driver Clients</h4>
<p>You can enable FCF for Oracle's Implicit Connection Cache or UCP. Oracle recommends using the UCP for Java. The Implicit Connection Cache is deprecated.</p>
<p><a id="sthref556"></a><a id="sthref557"></a><a id="sthref558"></a>This procedure explains how to enable <a id="sthref559"></a><a id="sthref560"></a>FCF for JDBC. For JDBC/OCI clients, if you enable FCF, do not enable TAF, either on the client or for the service. To enable FCF, you must first enable the UCP, as described in the following procedure:</p>
<ol>
<li>
<p>Create the connection pool and set <code dir="ltr">FastConnectionFailoverEnabled</code>.</p>
<p>The following example creates a connection pool and enables FCF. The <code dir="ltr">ucp.jar</code> library must be included in the classpath of an application to use this example.</p>
<pre dir="ltr">
PoolDataSource pds = PoolDataSourceFactory.getPoolDataSource();
pds.setFastConnectionFailoverEnabled(true);
</pre></li>
<li>
<p>Determine the ports to use for Oracle Notification Service remote subscriptions.</p>
<p>Use the following command to view the Oracle Notification Service configuration on each node that is running Oracle Clusterware as in the following example:</p>
<pre dir="ltr">
srvctl config nodeapps -s
</pre>
<p>The output of this command lists the local and remote ports configured for Oracle Notification Service.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
Oracle Notification Service configuration should have been automatically completed during the Oracle Clusterware installation.</div>
</li>
<li>
<p>Add Oracle Notification Service daemons to remote nodes for upgraded Oracle9<span class="italic">i</span> databases.</p>
<p>The information in the Oracle Cluster Registry (OCR) for Oracle Notification Service daemons is automatically configured for Oracle Database 10<span class="italic">g</span> and higher. If you are upgrading from an Oracle9<span class="italic">i</span> version of the database, then add Oracle Notification Service daemons to remote nodes (nodes outside the cluster), with the following command:</p>
<pre dir="ltr">
srvctl modify nodeapps -t <span class="italic">host_port_list</span>
</pre></li>
<li>
<p>Configure the remote Oracle Notification Service subscription.</p>
<p>When using the Universal Connection Pool, an application calls <code dir="ltr">setONSConfiguration</code> for an <code dir="ltr">OracleDataSource</code> instance and specifies the nodes and port numbers to use. The port numbers used for each node are the same as the remote port displayed for each node in Step 2, as shown in the following example. The <code dir="ltr">ons.jar</code> library must be included in the classpath of an application to use this example.</p>
<pre dir="ltr">
pds.setONSConfiguration("nodes=racnode1:6200,racnode2:6200");
</pre>
<p>Applications that use remote Oracle Notification Service configuration must set the <code dir="ltr">oracle.ons.oraclehome</code> system property to the location of <code dir="ltr">ORACLE_HOME</code> before starting the application, for example:</p>
<pre dir="ltr">
java -Doracle.ons.oraclehome=$ORACLE_HOME ...
</pre></li>
<li>
<p>Configure the connection URL.</p>
<p>A connection factory's connection URL must use the service name syntax when using FCF. The service name is used to map the connection pool to the service. The following example demonstrates configuring the connection URL:</p>
<pre dir="ltr">
pds.setConnectionFactoryClassName("oracle.jdbc.pool.OracleDataSource");
pds.setURL("jdbc:oracle:thin@//<span class="italic">SCAN_name</span>:1521/<span class="italic">service_name</span>");......
</pre></li>
</ol>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a class="olink JJDBC" href="../../java.112/e16548/toc.htm"><span class="italic">Oracle Database JDBC Developer's Guide</span></a> for more information about JDBC</p>
</li>
<li>
<p><a class="olink JJUCP08100" href="../../java.112/e12265/rac.htm#JJUCP08100"><span class="italic">Oracle Universal Connection Pool for JDBC Developer's Guide</span></a> for more information about configuring FCF</p>
</li>
</ul>
</div>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="BABFFCAE"></a>
<div id="RACAD8284" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Enabling JDBC Clients for Runtime Connection Load Balancing</h3>
<p>UCP JDBC connection pools leverage the load balancing functionality provided by an Oracle RAC database. Runtime connection load balancing requires the use of an Oracle JDBC driver and an Oracle RAC database.</p>
<p>Runtime connection load balancing requires that FCF is enabled and configured properly. See <a href="#BABHDEHI">"Configuring FCF for JDBC/OCI and JDBC Thin Driver Clients"</a>. In addition, the Oracle RAC load balancing advisory must be configured with service-level goals for each service used by the connection pool. The connection load balancing goal should be set to <code dir="ltr">SHORT</code>, for example:</p>
<pre dir="ltr">
srvctl modify service -d <span class="italic">db_unique_name</span> -s <span class="italic">service_name</span> -B SERVICE_TIME -j SHORT
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink JJUCP08100" href="../../java.112/e12265/rac.htm#JJUCP08100"><span class="italic">Oracle Universal Connection Pool for JDBC Developer's Guide</span></a> for more information about configuring runtime connection load balancing for UCP JDBC connection pools</div>
</div>
<!-- class="sect2" -->
<a id="BABEFCIC"></a>
<div id="RACAD7307" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Enabling Oracle Call Interface Clients for Fast Connection Failover</h3>
<p><a id="sthref561"></a>Oracle Call Interface (OCI) clients can enable FCF by registering to receive notifications for Oracle RAC high availability FAN events and responding when events occur. Using FCF improves the session failover response time in OCI applications and also removes connections to nonfunctioning instances from connection and session pools. FCF can be used in OCI applications that also use TAF, connection pools, or session pools.</p>
<p>To use FCF, you must use a service with the load balancing advisory goal and the connection load balancing goal configured. The service metrics received from the Oracle RAC load balancing advisory through FAN events for the service are automatically placed in the Oracle Streams AQ queue table, <code dir="ltr">ALERT_QUEUE</code>. Client applications can register callbacks that are used whenever an event occurs. This reduces the time that it takes to detect a connection failure.</p>
<p>During <code dir="ltr">DOWN</code> event processing, OCI:</p>
<ul>
<li>
<p>Terminates affected connections at the client and returns an error</p>
</li>
<li>
<p>Removes connections from the OCI connection pool and the OCI session pool&mdash;the session pool maps each session to a physical connection in the connection pool, and there can be multiple sessions for each connection</p>
</li>
<li>
<p>Fails over the connection if you have configured TAF. If TAF is not configured, then the client only receives an error if the instance it is connected to fails.</p>
</li>
</ul>
<p>If your application is using TAF, then you must enable the TAF properties for the service using SRVCTL or Oracle Enterprise Manager. Configure your OCI client applications to connect to an Oracle RAC database using the configured service.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
Oracle Call Interface does not manage <code dir="ltr">UP</code> events.</div>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink NETAG" href="../../network.112/e41945/toc.htm"><span class="italic">Oracle Database Net Services Administrator's Guide</span></a> for more information about configuring TAF</div>
<p class="subhead2"><a id="RACAD8285"></a>Configuring FCF for OCI Clients</p>
<p>OCI applications must connect to an Oracle RAC instance to enable HA event notification. Furthermore, these applications must perform the following steps to configure FCF for an OCI client:</p>
<ol>
<li>
<p>Configure the service for your OCI connection pool to enable connection load balancing and runtime connection load balancing. Also configure the service to have Advanced Queuing notifications enabled, as shown in the following example:</p>
<pre dir="ltr">
$ srvctl modify service -d crm -s ociapp.example.com -q TRUE 
   -B THROUGHPUT -j LONG
</pre></li>
<li>
<p>Set the context of the environment for OCI calls on the client to enable subscriptions by using the <code dir="ltr">OCIEnvCreate()</code> call, setting the <code dir="ltr">MODE</code> parameter value to <code dir="ltr">OCI_EVENTS</code>, as follows:</p>
<pre dir="ltr">
(void) OCIEnvCreate(&amp;myenvhp, OCI_EVENTS|OCI_OBJECT, ...);
</pre></li>
<li>
<p>Link the application with a thread library.</p>
</li>
<li>
<p>After linking with the thread library, the applications can register a callback that is invoked whenever a FAN event occurs.</p>
</li>
</ol>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink LNOCI" href="../../appdev.112/e10646/toc.htm"><span class="italic">Oracle Call Interface Programmer's Guide</span></a> for more information about Oracle Call Interface</div>
</div>
<!-- class="sect2" -->
<a id="BABJEIAJ"></a>
<div id="RACAD7308" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Enabling Oracle Call Interface Clients for Runtime Connection Load Balancing<a id="sthref562"></a><a id="sthref563"></a><a id="sthref564"></a><a id="sthref565"></a><a id="sthref566"></a></h3>
<p>As of Oracle Database 11<span class="italic">g</span> release 2 (11.2), OCI <a id="sthref567"></a><a id="sthref568"></a><a id="sthref569"></a><a id="sthref570"></a>session pooling enables multiple threads of an application to use a dynamically managed set of pre-created database sessions. In connection pooling, the pool element is a connection, but in session pooling, the pool element is a session. Oracle Database continually reuses the sessions in the session pool to form nearly permanent channels to the instances, thus saving the overhead of creating and closing sessions every time applications need them.</p>
<p>Runtime connection load balancing is enabled by default in a release 11.1 or higher client talking to a server of 10.2 or higher. <a id="sthref571"></a>For Oracle RAC environments, session pools use service metrics received from the Oracle RAC load balancing advisory<a id="sthref572" href="#sthref572" onclick='footdisplay(1,"Runtime connection load balancing is basically routing work requests to sessions in a session pool that can best serve the work. It comes into effect when selecting a session from an existing session pool. Thus, runtime connection load balancing is a very frequent activity.")'><sup class="tablefootnote">Foot&nbsp;1&nbsp;</sup></a> through Fast Application Notification (FAN) events to balance application session requests. <a id="sthref573"></a>The work requests coming into the session pool can be distributed across the instances of Oracle RAC offering a service, using the current service performance.</p>
<p>Runtime connection load balancing is basically routing work requests to sessions in a session pool that best serve the work. It comes into effect when selecting a session from an existing session pool and thus is a very frequent activity. For session pools that support services at one instance only, the first available session in the pool is adequate. When the pool supports services that span multiple instances, there is a need to distribute the work requests across instances so that the instances that are providing better service or have greater capacity get more requests.</p>
<p>Connect time load balancing occurs when a session is first created by the application. It is necessary that the sessions that are part of the pool be well distributed across Oracle RAC instances, at the time they are first created. This ensures that sessions on each of the instances get a chance to execute work.</p>
<p class="subhead2"><a id="RACAD8286"></a>Configuring OCI Clients to Receive Load Balancing Advisory FAN Events</p>
<p>For Oracle RAC environments, session pools use service metrics received from the Oracle RAC load balancing advisory through Fast Application Notification (FAN) events to balance application session requests. To enable your application to receive the <a id="sthref574"></a><a id="sthref575"></a>service metrics based on the service time, ensure you have met the following conditions:</p>
<ol>
<li>
<p>Link the application with the threads library.</p>
</li>
<li>
<p>Create the <a id="sthref576"></a>OCI environment in <code dir="ltr"><a id="sthref577"></a>OCI_EVENTS</code> and <a id="sthref578"></a><code dir="ltr">OCI_THREADED</code> mode.</p>
</li>
<li>
<p><a id="sthref579"></a><a id="sthref580"></a><a id="sthref581"></a>Configure the load balancing advisory goal (<code dir="ltr">-B</code> option) and connection load balancing goal (<code dir="ltr">-j</code> option) for a service that is used by the session pool, as shown in the following example:</p>
<pre dir="ltr">
srvctl modify service -d crm -s ociapps -B SERVICE_TIME -j SHORT
</pre></li>
</ol>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink LNOCI" href="../../appdev.112/e10646/toc.htm"><span class="italic">Oracle Call Interface Programmer's Guide</span></a> for more information about Oracle Call Interface</div>
</div>
<!-- class="sect2" -->
<a id="BABFAEAB"></a>
<div id="RACAD7136" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Enabling ODP.NET Clients to Receive FAN High Availability Events</h3>
<p><a id="sthref582"></a>ODP.NET connection pools can subscribe to notifications that indicate when nodes, services, and service members are down. After a <code dir="ltr">DOWN</code> event, Oracle Database cleans up sessions in the connection pool that go to the instance and ODP.NET proactively removes connections that are no longer valid. ODP.NET establishes additional connections to existing Oracle RAC instances if the removal of invalid connections reduces the total number of connections to below the value for the <code dir="ltr">MIN_POOL_SIZE</code> parameter.</p>
<p>Perform the following steps to enable FAN for ODP.NET clients:</p>
<ol>
<li>
<p>Enable Advanced Queuing notifications for a service by using SRVCTL as shown in the following example:</p>
<pre dir="ltr">
srvctl modify service -d crm -s odpnet.example.com -q TRUE
</pre></li>
<li>
<p>Grant permissions on the internal event queue table by executing the following command for the users that will be connecting by way of the ODP.NET application, where <code dir="ltr"><span class="codeinlineitalic">user_name</span></code> is the database user name:</p>
<pre dir="ltr">
EXECUTE DBMS_AQADM.GRANT_QUEUE_PRIVILEGE('DEQUEUE','SYS.SYS$SERVICE_METR
ICS', <span class="italic">user_name</span>); 
</pre></li>
<li>
<p>Enable Fast Connection Failover for <a id="sthref583"></a>ODP.NET connection pools by subscribing to FAN high availability events. To enable FCF, include "<code dir="ltr">HA Events=true</code>" and "<code dir="ltr">pooling=true</code>" (the default value) in the connection string, as shown in the following example where <code dir="ltr"><span class="codeinlineitalic">user_name</span></code> is the name of the database user and <code dir="ltr"><span class="codeinlineitalic">password</span></code> is the password for that user:</p>
<pre dir="ltr">
con.ConnectionString =
   "User Id=<span class="italic">user_name</span>;Password=<span class="italic">password</span>;Data Source=odpnet;" +
   "Min Pool Size=10;Connection Lifetime=120;Connection Timeout=60;" +
   "HA Events=true;Incr Pool Size=5;Decr Pool Size=2";
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink ODPNT" href="../../win.112/e23174/toc.htm"><span class="italic">Oracle Data Provider for .NET Developer's Guide</span></a> for more information about using FAN events in ODP.NET applications</div>
</li>
</ol>
</div>
<!-- class="sect2" -->
<a id="BABDAFFE"></a>
<div id="RACAD7309" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Enabling ODP.NET Clients to Receive FAN Load Balancing Advisory Events</h3>
<p><a id="sthref584"></a>Use the following procedures to enable <a id="sthref585"></a>ODP.NET clients or applications to receive FAN load balancing advisory events:</p>
<ol>
<li>
<p>Enable Advanced Queuing notifications by using SRVCTL, and set the connection load balancing goal as shown in the following example:</p>
<pre dir="ltr">
srvctl modify service -d crm -s odpapp.example.com -q TRUE -j LONG
</pre></li>
<li>
<p>Ensure Oracle Net Services is configured for connection load balancing.</p>
</li>
<li>
<p>Grant permissions on the internal event queue table by executing the following command for the users that will be connecting by way of the ODP.NET application, where <code dir="ltr"><span class="codeinlineitalic">user_name</span></code> is the name of the database user:</p>
<pre dir="ltr">
EXECUTE DBMS_AQADM.GRANT_QUEUE_PRIVILEGE('DEQUEUE','SYS.SYS$SERVICE_METR
ICS', <span class="italic">user_name</span>);
</pre></li>
<li>
<p>To take advantage of load balancing events with ODP.NET connection pools, set the load balancing attribute in the ConnectionString to <code dir="ltr">TRUE</code> (the default is <code dir="ltr">FALSE</code>). You can do this at connect time. This only works if you are using connection pools, or when the pooling attribute is set to <code dir="ltr">TRUE</code> which is the default.</p>
<p>The following example demonstrates how to configure the ConnectionString to enable load balancing, where <code dir="ltr"><span class="codeinlineitalic">user_name</span></code> is the name of the user and <code dir="ltr"><span class="codeinlineitalic">password</span></code> is the password:</p>
<pre dir="ltr">
con.ConnectionString =
  "User Id=<span class="italic">user_name</span>;Password=<span class="italic">password</span>;Data Source=odpapp;" +
  "Min Pool Size=10;Connection Lifetime=120;Connection Timeout=60;" +
  "Load Balancing=true;Incr Pool Size=5;Decr Pool Size=2";
 
</pre></li>
</ol>
<div class="infobox-note">
<p class="notep1">Note:</p>
ODP.NET does not support connection redistribution when a node starts (UP events). However, if you have enabled failover on the server-side, then ODP.NET can migrate connections to newly available instances.</div>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a class="olink ODPNT" href="../../win.112/e23174/toc.htm"><span class="italic">Oracle Data Provider for .NET Developer's Guide</span></a> for more information about ODP. NET</p>
</li>
<li>
<p><a href="srvctladmin.htm#i1009746">"srvctl modify service"</a> in <a href="srvctladmin.htm#CHDEBCFF">Appendix A, "Server Control Utility Reference"</a>.</p>
</li>
</ul>
</div>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="BABBBCFG"></a>
<div id="RACAD7147" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Services and Distributed Transaction Processing in Oracle RAC</h2>
<p>The X/Open Distributed Transaction Processing (DTP) architecture defines a standard architecture or interface that enables multiple application programs (APs) to share resources provided by multiple, and possibly different, resource managers (RMs). It coordinates the work between APs and RMs into global transactions.</p>
<p>The following sections discuss how Oracle RAC supports XA transactions and DTP processing:</p>
<ul>
<li>
<p><a href="#BABDHACC">Overview of XA Transactions and DTP Services</a></p>
</li>
<li>
<p><a href="#BABGHAHE">Benefits of DTP Services for XA Transactions</a></p>
</li>
<li>
<p><a href="#BABCDIII">Using DTP Services with Oracle RAC</a></p>
</li>
<li>
<p><a href="#BABJIJJF">Configuring DTP Services</a></p>
</li>
<li>
<p><a href="#BABHHDJI">Relocating DTP Services in Administrator-Managed Databases</a></p>
</li>
</ul>
<a id="BABDHACC"></a>
<div id="RACAD8287" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Overview of XA Transactions and DTP Services</h3>
<p>An XA transaction<a id="sthref586"></a><a id="sthref587"></a><a id="sthref588"></a> <a id="sthref589"></a>can span Oracle RAC instances by default, allowing any application that uses the Oracle XA library to take full advantage of the Oracle RAC environment to enhance the availability and scalability of the application.</p>
<p>GTX<span class="italic">n</span> background processes support global (XA) transactions in an Oracle RAC environment. The <a id="sthref590"></a><code dir="ltr">GLOBAL_TXN_PROCESSES</code> initialization parameter, which is set to <code dir="ltr">1</code> by default, specifies the initial number of GTX<span class="italic">n</span> background processes for each Oracle RAC instance. Use the default value for this parameter clusterwide to allow distributed transactions to span multiple Oracle RAC instances. Using the default value allows the units of work performed across these Oracle RAC instances to share resources and act as a single transaction (that is, the units of work are <span class="italic">tightly coupled</span>). It also allows 2PC requests to be sent to any node in the cluster.</p>
<p>Before Oracle RAC 11<span class="italic">g</span> release 1 (11.1), the way to achieve tight coupling in Oracle RAC was to use Distributed Transaction Processing (DTP) services, that is, services whose cardinality (one) ensured that all tightly-coupled branches landed on the same instance&mdash;regardless of whether load balancing was enabled. Tightly coupled XA transactions no longer require the special type of singleton services to be deployed on Oracle RAC databases if the XA application does not join or resume XA transaction branches. XA transactions are transparently supported on Oracle RAC databases with any type of service configuration.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
Oracle RAC 11<span class="italic">g</span> release 1 (11.1) and later does not require a DTP service but performance might be improved if you use a DTP service, as described in <a href="#BABGHAHE">"Benefits of DTP Services for XA Transactions"</a>.</div>
<p>An <a id="sthref591"></a><a id="sthref592"></a>external transaction manager, such as Oracle Services for Microsoft Transaction Server (OraMTS), coordinates <a id="sthref593"></a>DTP/XA transactions. However, an internal Oracle transaction manager coordinates <a id="sthref594"></a>distributed SQL transactions. Both DTP/XA and distributed SQL transactions must use the DTP service in Oracle RAC.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a class="olink ADFNS1505" href="../../appdev.112/e41502/adfns_xa.htm#ADFNS1505"><span class="italic">Oracle Database Advanced Application Developer's Guide</span></a> for complete information about using Oracle XA with Oracle RAC</p>
</li>
<li>
<p><a class="olink REFRN10291" href="../../server.112/e40402/initparams099.htm#REFRN10291"><span class="italic">Oracle Database Reference</span></a> for information about the <code dir="ltr">GLOBAL_TXN_PROCESSES</code> initialization parameter</p>
</li>
</ul>
</div>
</div>
<!-- class="sect2" -->
<a id="BABGHAHE"></a>
<div id="RACAD8288" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Benefits of DTP Services for XA Transactions</h3>
<p><a id="sthref595"></a>To provide improved application performance with distributed transaction processing in Oracle RAC, you may want to take advantage of DTP services. Using DTP services, you can direct all branches of a <a id="sthref596"></a>distributed transaction to a single instance in the cluster. To load balance across the cluster, it is better to have several groups of smaller application servers with each group directing its transactions to a single service, or set of services, than to have one or two larger application servers.</p>
<p>In addition, connection pools at the application server tier that load balance across multiple connections to an Oracle RAC database can use this method to ensure that all tightly-coupled branches of a global distributed transaction run on only one Oracle RAC instance. This is also true in distributed transaction environments using protocols such as X/Open Distributed Transaction Processing (DTP) or the Microsoft Distributed Transaction Coordinator (DTC).</p>
<p>To enhance the performance of distributed transactions, you can use services to manage DTP environments. By defining the DTP property of a service, the service is guaranteed to run on one instance at a time in an Oracle RAC database. All global distributed transactions performed through the DTP service are ensured to have their tightly-coupled branches running on a single Oracle RAC instance. This has the following benefits:</p>
<ul>
<li>
<p>The changes are available locally within one Oracle RAC instance when tightly coupled branches need information about changes made by each other</p>
</li>
<li>
<p>Relocation and failover of services are fully supported for DTP</p>
</li>
<li>
<p>By using more DTP services than there are Oracle RAC instances, Oracle Database can balance the load by services across all of the Oracle RAC database instances</p>
</li>
</ul>
</div>
<!-- class="sect2" -->
<a id="BABCDIII"></a>
<div id="RACAD8289" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Using DTP Services with Oracle RAC</h3>
<p>To leverage all of the instances in a cluster, create one or more DTP services for each Oracle RAC instance that hosts distributed transactions. Choose one DTP service for one distributed transaction. Choose different DTP services for different distributed transactions to balance the workload among the Oracle RAC database instances. Because all of the branches of a distributed transaction are on one instance, you can leverage all of the instances to balance the load of many DTP transactions through multiple singleton services, thereby maximizing application throughput.</p>
<p>If you add or delete nodes from your cluster database, then you may have to identify and relocate services that you are using for DTP transactions to ensure that you maintain optimum performance levels.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink ADFNS" href="../../appdev.112/e41502/toc.htm"><span class="italic">Oracle Database Advanced Application Developer's Guide</span></a> for more information about transaction branch management in Oracle RAC</div>
</div>
<!-- class="sect2" -->
<a id="BABJIJJF"></a>
<div id="RACAD969" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Configuring DTP Services</h3>
<p>To create DTP services for distributed transaction processing, perform the following steps:</p>
<ol>
<li>
<p>Create a singleton service using <a id="sthref597"></a>Oracle Enterprise Manager or SRVCTL.</p>
<p>For an administrator-managed database, define only one instance as the preferred instance. You can have as many available instances as you want, for example:</p>
<pre dir="ltr">
srvctl add service -d crm -s xa_01.example.com -r RAC01 -a RAC02,RAC03
</pre>
<p>For a policy-managed database, specify the server pool to use, and set the cardinality of the service to <code dir="ltr">SINGLETON</code>, for example:</p>
<pre dir="ltr">
srvctl add service -d crm -s xa_01.example.com -g dtp_pool -c SINGLETON
</pre></li>
<li>
<p>Set the DTP option (<code dir="ltr">-x</code>) for the service to <code dir="ltr">TRUE</code> (the default value is <code dir="ltr">FALSE)</code>. You can use Oracle Enterprise Manager or SRVCTL to modify the DTP property of the singleton service. The following example shows how to modify the <code dir="ltr">xa_01.example.com</code> service using SRVCTL:</p>
<pre dir="ltr">
srvctl modify service -d crm -s xa_01.example.com -x TRUE
</pre></li>
</ol>
</div>
<!-- class="sect2" -->
<a id="BABHHDJI"></a>
<div id="RACAD8290" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Relocating DTP Services in Administrator-Managed Databases</h3>
<p>If the instance that provides a DTP service, for example <code dir="ltr">XA_01</code>, fails, then the singleton service fails over to an available instance, such as <code dir="ltr">RAC02</code> or <code dir="ltr">RAC03</code>.</p>
<p>If services migrate to other instances, then you might have to force the relocation of the service back to the preferred instance after it is restarted to evenly re-balance the load on all of the available hardware. You can use data from the <code dir="ltr">GV$ACTIVE_SERVICES</code> view to determine whether you need to relocate the STP service.</p>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="BABJJJAG"></a>
<div id="RACAD849" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Administering Services</h2>
<p>You can create and <a id="sthref598"></a><a id="sthref599"></a>administer <a id="sthref600"></a><a id="sthref601"></a>services with Oracle Enterprise Manager and the SRVCTL utility. The following sections describe how to perform service-related tasks using these tools:</p>
<ul>
<li>
<p><a href="#BABHJFJG">Overview of Service Administration</a></p>
</li>
<li>
<p><a href="#BABEDIIC">Administering Services with Oracle Enterprise Manager</a></p>
</li>
<li>
<p><a href="#BABGDFGI">Administering Services with SRVCTL</a></p>
</li>
</ul>
<div class="infobox-note">
<p class="notep1">Note:</p>
You can also use the DBMS_SERVICE package to create or modify services and service attributes, but SRVCTL or Oracle Enterprise Manager will override any settings made using this package. The DBMS_SERVICE package is not recommended for use with services used by an Oracle RAC database.</div>
<a id="BABHJFJG"></a>
<div id="RACAD7124" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Overview of Service Administration</h3>
<p><a id="sthref602"></a>When you <a id="sthref603"></a>create and administer <a id="sthref604"></a>services, you are dividing the work that your database performs into manageable units. The goal of using services is to achieve optimal utilization of your database infrastructure. You can create and deploy services based on business requirements. Oracle Database can measure the performance for each service. Using the <code dir="ltr">DBMS_MONITOR</code> package, you can define both the application modules within a service and the individual actions for a module and monitor thresholds for these actions, enabling you to manage workloads to deliver capacity on demand.</p>
<p>To create a service, you can use either Oracle Enterprise Manager, or SRVCTL. When you create new services for your database, you should define the automatic workload management characteristics for each service, as described in <a href="#BABCGFBE">"Service Characteristics"</a>.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a class="olink APQOS144" href="../../server.112/e24611/wlm_strats.htm#APQOS144"><span class="italic">Oracle Database Quality of Service Management User's Guide</span></a> if you are using Oracle Database QoS Management with your Oracle cluster for details on how to configure the database services</p>
</li>
<li>
<p><a href="#BABBAAFE">"Oracle Clients That Are Integrated with Fast Application Notification"</a> for more details</p>
</li>
</ul>
</div>
<p>In addition to creating services, you can:</p>
<ul>
<li>
<p><span class="bold">Delete a service</span>. You can delete services that you created. However, you cannot delete or modify the properties of the default database service that Oracle Database created.</p>
</li>
<li>
<p><span class="bold">Check the status of a service</span>. A service can be assigned different roles among the available instances. In a complex database with many services, you may not remember the details of every service. Therefore, you may have to check the status on an instance or service basis. For example, you may have to know the status of a service for a particular instance before you make modifications to that instance or to the Oracle home from which it runs.</p>
</li>
<li>
<p><span class="bold">Start or stop a service for a database or an instance</span>. A service must be started before it can be used for client connections to that instance. If you shut down your database, for example, by running the SRVCTL command <code dir="ltr">srvctl stop database -d</code> <code dir="ltr"><span class="codeinlineitalic">db_unique_name</span></code> where <code dir="ltr"><span class="codeinlineitalic">db_unique_name</span></code> is the name of the database you want to stop, then Oracle Database stops all services to that database. Depending on the service management policy, you may have to manually restart the services when you start the database.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
If Oracle Database QoS Management is enabled for the Oracle RAC database, then the services are automatically restarted after they are stopped.</div>
</li>
<li>
<p><span class="bold">Map a service to a consumer group</span>. Oracle Database can automatically map services to Resource Manager Consumer groups to limit the amount of resources that services can use in an instance. You must create the consumer group and then map the service to the consumer group.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink ARPLS050" href="../../appdev.112/e40758/d_resmgr.htm#ARPLS050"><span class="italic">Oracle Database PL/SQL Packages and Types Reference</span></a> for information about the <code dir="ltr">DBMS_RESOURCE_MANAGER.SET_CONSUMER_GROUP_MAPPING_PRI</code> procedure</div>
</li>
<li>
<p><span class="bold">Enable or disable a service for a database or an instance</span>. By default, Oracle Clusterware attempts to restart a service automatically after failures. You can prevent this behavior by disabling a service. Disabling a service is useful when you must perform database or instance maintenance, for example, if you are performing an upgrade and you want to prevent connection requests.</p>
</li>
<li>
<p><span class="bold">Relocate a service to a different instance</span>. You can move a service from one instance to another instance to re-balance workloads, for example, after adding or deleting cluster nodes.</p>
</li>
</ul>
<div class="infobox-note">
<p class="notep1">Notes:</p>
<ul>
<li>
<p>When you use services, do not set a value for the <a id="sthref605"></a><a id="sthref606"></a><code dir="ltr">SERVICE_NAMES</code> parameter; Oracle Database controls the setting for this parameter for the services that you create and for the <a id="sthref607"></a>default database service. The service features that this chapter describes are not directly related to the features that Oracle Database provides when you set <code dir="ltr">SERVICE_NAMES</code>. In addition, setting a value for this parameter may override some benefits of using services.</p>
</li>
<li>
<p>If you specify a service using the <a id="sthref608"></a><a id="sthref609"></a><code dir="ltr">DISPATCHERS</code> initialization parameter, it overrides any service in the <code dir="ltr">SERVICE_NAMES</code> parameter, and cannot be managed. (For example, stopping the service with a SRVCTL command does not stop users connecting with the service.)</p>
</li>
</ul>
</div>
</div>
<!-- class="sect2" -->
<a id="BABEDIIC"></a>
<div id="RACAD7025" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Administering Services with Oracle Enterprise Manager</h3>
<p><a id="sthref610"></a>The Cluster Managed Database Services page is the master page for beginning all tasks related to services. To access this page, go to the Cluster Database Availability page, then click <span class="bold">Cluster Managed Database Services</span> in the Services section. You can use this page and drill down from this page to perform the following tasks:</p>
<ul>
<li>
<p>View a list of services for the cluster</p>
</li>
<li>
<p>View the instances on which each service is currently running</p>
</li>
<li>
<p>View the status for each service</p>
</li>
<li>
<p>Create or edit a service</p>
</li>
<li>
<p>Start or stop a service</p>
</li>
<li>
<p>Enable or disable a service</p>
</li>
<li>
<p>Perform instance-level tasks for a service</p>
</li>
<li>
<p>Delete a service</p>
</li>
</ul>
<div class="infobox-note">
<p class="notep1">Note:</p>
You must have <code dir="ltr">SYSDBA</code> credentials to access a cluster database. Cluster Managed Database Services does not permit you to connect as anything other than <code dir="ltr">SYSDBA</code>.</div>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><span class="italic">Oracle Enterprise Manager</span> online help for more information about administering services with Oracle Enterprise Manager</p>
</li>
<li>
<p><a class="olink TDPRC307" href="../../rac.112/e17264/configwlm.htm#TDPRC307"><span class="italic">Oracle Database 2 Day + Real Application Clusters Guide</span></a> for more information about using Oracle Enterprise Manager to manage services</p>
</li>
</ul>
</div>
</div>
<!-- class="sect2" -->
<a id="BABGDFGI"></a>
<div id="RACAD7026" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Administering Services with SRVCTL</h3>
<p><a id="sthref611"></a>When you create a <a id="sthref612"></a>service by using <a id="sthref613"></a>SRVCTL, you must start the service with a separate SRVCTL command. However, you may later have to manually stop or restart the service. You may also have to disable the service to prevent automatic restarts, to manually relocate the service, or obtain status information about the service. The following sections explain how to use SRVCTL to perform the following administrative tasks:</p>
<ul>
<li>
<p><a href="#BABJHDBD">Creating Services with SRVCTL</a></p>
</li>
<li>
<p><a href="#BABEGFHA">Starting and Stopping Services with SRVCTL</a></p>
</li>
<li>
<p><a href="#BABDGBBD">Enabling and Disabling Services with SRVCTL</a></p>
</li>
<li>
<p><a href="#BABIEDFB">Relocating Services with SRVCTL</a></p>
</li>
<li>
<p><a href="#BABBEJAG">Obtaining the Statuses of Services with SRVCTL</a></p>
</li>
<li>
<p><a href="#BABJDDGG">Obtaining the Configuration of Services with SRVCTL</a></p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="srvctladmin.htm#CHDEBCFF">Appendix A, "Server Control Utility Reference"</a> for more information about SRVCTL commands that you can use to manage services, including descriptions of options</div>
<a id="BABJHDBD"></a>
<div id="RACAD7126" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Creating Services with SRVCTL</h4>
<p>To create a service with SRVCTL, enter a command from the command line using the following syntax:</p>
<pre dir="ltr">
srvctl add service -d <span class="codeinlineitalic">db_unique_name</span> -s <span class="codeinlineitalic">service_name</span> -t <span class="italic">edition_name</span>
{-r <span class="codeinlineitalic">preferred_list</span> [-a <span class="codeinlineitalic">available_list</span>]} | {-g <span class="italic">server_pool</span>
[-c {UNIFORM | SINGLETON}] [-k <span class="italic">net_number</span>]}
[-P {BASIC | NONE}] [-l {[PRIMARY] | [PHYSICAL_STANDBY] | [LOGICAL_STANDBY] |
[SNAPSHOT_STANDBY]}] [-y {AUTOMATIC | MANUAL}] [-q {TRUE | FALSE}]
[-x {TRUE | FALSE}] [-j {SHORT | LONG}] [-B {NONE | SERVICE_TIME | THROUGHPUT}]
 [-e {NONE |SESSION | SELECT}] [-m {NONE | BASIC}] [-z <span class="italic">failover_retries</span>]
 [-w <span class="italic">failover_delay</span>]
</pre>
<div class="infobox-note">
<p class="notep1">Note:</p>
The <code dir="ltr"><span class="codeinlineitalic">service_name</span></code> initialization parameter has a 4 kilobyte (KB) limit for its value. Therefore, the total length of the names of all services assigned to an instance cannot exceed 4 KB.</div>
</div>
<!-- class="sect3" -->
<a id="BABEGFHA"></a>
<div id="RACAD7027" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Starting and Stopping Services with SRVCTL</h4>
<p>For applications to connect using a server, the service must be started. If you stop a service, then it is temporarily unavailable, but is still subject to automatic restart and failover.</p>
<p>Enter the following SRVCTL syntax from the command line to stop or start a service:</p>
<pre dir="ltr">
<a id="sthref614"></a>srvctl start service -d <span class="italic">database_unique_name</span> [-s <span class="codeinlineitalic">service_name_list</span>] [-i <span class="codeinlineitalic">inst_name</span>]
[-o <span class="codeinlineitalic">start_options</span>]
</pre>
<pre dir="ltr">
<a id="sthref615"></a>srvctl stop service -d <span class="italic">database_unique_name</span> -s <span class="codeinlineitalic">service_name_list</span> [-i <span class="codeinlineitalic">inst_name</span>]
[-o <span class="codeinlineitalic">start_options</span>]
</pre></div>
<!-- class="sect3" -->
<a id="BABDGBBD"></a>
<div id="RACAD7028" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Enabling and Disabling Services with SRVCTL</h4>
<p>If you disable a service, then Oracle Clusterware does not consider the service for automatic startup, failover, or restart. You might disable a service when performing application maintenance, to ensure the service is not accidentally restarted by Oracle Clusterware until your maintenance operations are complete. To make the service available for normal operation again, you enable the service.</p>
<p>Use the following SRVCTL syntax from the command line to enable and disable services:</p>
<pre dir="ltr">
<a id="sthref616"></a>srvctl enable service -d <span class="codeinlineitalic">database_unique_name</span> -s <span class="codeinlineitalic">service_name_list</span> [-i <span class="codeinlineitalic">inst_name</span>]
</pre>
<pre dir="ltr">
<a id="sthref617"></a>srvctl disable service -d <span class="codeinlineitalic">database_unique_name</span> -s <span class="codeinlineitalic">service_name_list</span> [-i <span class="codeinlineitalic">inst_name</span>]
</pre></div>
<!-- class="sect3" -->
<a id="BABIEDFB"></a>
<div id="RACAD7029" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Relocating Services with SRVCTL</h4>
<p>Run the <code dir="ltr">srvctl relocate service</code> command from the command line to relocate a service. You might use this command when a service has failed over to an available instance, but you want to move it back to the preferred instance after that instance is restarted.</p>
<p>The following command relocates the <code dir="ltr">crm</code> service from instance <code dir="ltr">apps1</code> to instance <code dir="ltr">apps3</code>:</p>
<pre dir="ltr">
srvctl relocate service -d apps -s crm -i apps1 -t apps3
</pre></div>
<!-- class="sect3" -->
<a id="BABBEJAG"></a>
<div id="RACAD7030" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Obtaining the Statuses of Services with SRVCTL</h4>
<p>Run the <code dir="ltr">srvctl status service</code> command from the command line to obtain the status of a service. For example, the following command returns the status of the services that are running on the <code dir="ltr">apps</code> database:</p>
<pre dir="ltr">
<a id="sthref618"></a>srvctl status service -d apps

Service erp is running on nodes: apps02,apps03
Service hr is running on nodes: apps02,apps03
Service sales is running on nodes: apps01,apps04
</pre></div>
<!-- class="sect3" -->
<a id="BABJDDGG"></a>
<div id="RACAD7316" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Obtaining the Configuration of Services with SRVCTL</h4>
<p>Run the <code dir="ltr">srvctl config service</code> command from the command line to obtain the high availability configuration of a service. For example, the following command returns the configuration of the <code dir="ltr">erp</code> service that is running on the <code dir="ltr">apps</code> database:</p>
<pre dir="ltr">
srvctl config service -d apps -s erp

Service name: erp
Service is enabled
Server pool: sp1
Cardinality: UNIFORM
Disconnect: false
Service role: PRIMARY
Management policy: AUTOMATIC
DTP transaction: false
AQ HA notificaitons: false
Failover type: NONE
Failover method: NONE
TAF failover retries: 0
TAF failover delay: 0
Connection Load Balancing Goal: LONG
Runtime Load Balancing Goal: SERVICE_TIME
TAF policy specification: NONE
Edition:
Service is enabled on nodes:
Service is disabled on nodes:
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="srvctladmin.htm#CHDEBCFF">Appendix A, "Server Control Utility Reference"</a> for information about other administrative tasks that you can perform with SRVCTL</div>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="BABJDCJC"></a>
<div id="RACAD7127" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Measuring Performance by Service Using the <a id="sthref619"></a>Automatic Workload Repository</h2>
<p>Services add a new dimension for performance tuning. With services, workloads are visible and measurable, and therefore resource consumption and wait times are attributable by application. Tuning by using 'service and SQL' replaces tuning by 'session and SQL' in the majority of systems where all sessions are anonymous and shared.</p>
<p>The Automatic Workload Repository (AWR) maintains performance statistics that include information about response time, throughput, resource consumption, and wait events for all services and work that a database performs. Oracle Database also maintains metrics, statistics, wait events, wait classes, and SQL-level traces for services. You can optionally augment these statistics by defining modules within your application to monitor certain statistics. You can also define the actions within those modules that business critical transactions should execute in response to particular statistical values.</p>
<p>Enable module and action monitoring using the <code dir="ltr">DBMS_MONTIOR</code> PL/SQL package. For example, for connections that use the <code dir="ltr">erp</code> service, the following command enables monitoring for the <code dir="ltr">exceptions pay</code> action in the <code dir="ltr">payroll</code> module:</p>
<pre dir="ltr">
EXECUTE DBMS_MONITOR.SERV_MOD_ACT_STAT_ENABLE(SERVICE_NAME =&gt; 'ERP', 
MODULE_NAME=&gt; 'PAYROLL', ACTION_NAME =&gt; 'EXCEPTIONS PAY');
</pre>
<p>For connections that use the <code dir="ltr">erp</code> service, the following command enables monitoring for all actions in the <code dir="ltr">payroll</code> module:</p>
<pre dir="ltr">
EXECUTE DBMS_MONITOR.SERV_MOD_ACT_STAT_ENABLE(SERVICE_NAME =&gt; 'ERP', 
MODULE_NAME=&gt; 'PAYROLL', ACTION_NAME =&gt; NULL);
</pre>
<p>Use the <code dir="ltr">DBA_ENABLED_AGGREGATIONS</code> view to verify that you have enabled monitoring for application modules and actions.</p>
<p>Statistics aggregation and tracing by service are global in scope for Oracle RAC databases. In addition, these statistic aggregations are persistent across instance restarts and service relocations for both Oracle RAC and noncluster Oracle databases.</p>
<p>The service, module, and action names are visible in <code dir="ltr">V$SESSION</code>, <code dir="ltr">V$ACTIVE_SESSION_HISTORY</code>, and <code dir="ltr">V$SQL</code> views. The call times and performance statistics are visible in <code dir="ltr">V$SERVICE_STATS</code>, <code dir="ltr">V$SERVICE_EVENT</code>, <code dir="ltr">V$SERVICE_WAIT_CLASS</code>, <code dir="ltr">V$SERVICEMETRIC</code>, and <code dir="ltr">V$SERVICEMETRIC_HISTORY</code>. When you enable statistics collection for an important transaction, you can see the call speed for each service, module, and action name at each database instance using the <code dir="ltr">V$SERV_MOD_ACT_STATS</code> view.</p>
<p>The following sample SQL*Plus script provides service quality statistics for a five second interval. You can use these service quality statistics to monitor the quality of a service, to direct work, and to balance services across Oracle RAC instances:</p>
<pre dir="ltr">
SET PAGESIZE 60 COLSEP '|' NUMWIDTH 8 LINESIZE 132 VERIFY OFF FEEDBACK OFF
COLUMN service_name FORMAT A20 TRUNCATED HEADING 'Service'
COLUMN begin_time HEADING 'Begin Time' FORMAT A10
COLUMN end_time HEADING 'End Time' FORMAT A10
COLUMN instance_name HEADING 'Instance' FORMAT A10
COLUMN service_time HEADING 'Service Time|mSec/Call' FORMAT 999999999
COLUMN throughput HEADING 'Calls/sec'FORMAT 99.99 
BREAK ON service_name SKIP 1 
SELECT 
    service_name 
  , TO_CHAR(begin_time, 'HH:MI:SS') begin_time 
  , TO_CHAR(end_time, 'HH:MI:SS') end_time 
  , instance_name 
  , elapsedpercall  service_time
  ,  callspersec  throughput
FROM  
    gv$instance i     
  , gv$active_services s     
  , gv$servicemetric m 
WHERE s.inst_id = m.inst_id  
  AND s.name_hash = m.service_name_hash
  AND i.inst_id = m.inst_id
  AND m.group_id = 10
ORDER BY
   service_name
 , i.inst_id
 , begin_time ;
</pre></div>
<!-- class="sect1" -->
<a id="BABJJDFJ"></a>
<div id="RACAD7317" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Automatic Workload Repository Service Thresholds and Alerts</h2>
<p>Service level <a id="sthref620"></a><a id="sthref621"></a>thresholds enable you to compare actual service levels against required levels of service. This provides accountability for the delivery or the failure to deliver an agreed service level. The end goal is a predictable system that achieves service levels. There is no requirement to perform as fast as possible with minimum resource consumption; the requirement is to meet the <span class="italic">quality</span> of service.</p>
<p>AWR allows you to explicitly specify two performance thresholds for each service: the response time for calls (<code dir="ltr">ELAPSED_TIME_PER_CALL</code>), and the CPU time for calls (<code dir="ltr">CPU_TIME_PER_CALL</code>). The response time threshold indicates that the elapsed time for each user call for each service should not exceed a certain value, and the CPU time for calls threshold indicates that the time spent using the CPU for each call for each service should not exceed a certain value. Response time is a fundamental measure that reflects all delays and faults that might be blocking the call from running on behalf of the user. Response time can also indicate differences in node power across the nodes of an Oracle RAC database.</p>
<p>You must set these thresholds on each instance of an Oracle RAC database. The elapsed time and CPU time are calculated as the moving average of the elapsed, server-side call time. The AWR monitors the elapsed time and CPU time and publishes AWR alerts when the performance exceeds the thresholds. You can schedule actions using <a id="sthref622"></a>Oracle Enterprise Manager jobs for these alerts, or you can schedule actions to occur programmatically when the alert is received. You can respond to these alerts by changing the priority of a job, stopping overloaded processes, or by relocating, starting or stopping a service. This permits you to maintain service availability despite changes in demand.</p>
<p>This section includes the following topics:</p>
<ul>
<li>
<p><a href="#BABFAECB">Example of Services and Thresholds Alerts</a></p>
</li>
<li>
<p><a href="#BABECJID">Enable Service, Module, and Action Monitoring</a></p>
</li>
</ul>
<a id="BABFAECB"></a>
<div id="RACAD7318" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Example of Services and Thresholds Alerts</h3>
<p>In this scenario, you need to check the thresholds for the payroll service. You can use the AWR report to get this information. You should compare the results from reports run over several successive intervals during which time the system is running optimally. For example, assume that for servers accessed by a payroll application, the AWR report runs each Thursday during the peak usage times of 1:00 p.m. to 5:00 p.m. The AWR report contains the response time, or elapsed database time, and the CPU consumption time, or CPU time, for calls for each server, including the <code dir="ltr">payroll</code> service. The AWR report also provides a breakdown of the work done and the wait times that are contributing to the response times.</p>
<p>Using <code dir="ltr">DBMS_MONITOR</code>, you set a warning threshold for the elapsed time per call for the <code dir="ltr">payroll</code> service at 0.5 seconds (500000 microseconds). You also set a critical threshold for the elapsed time per call for the <code dir="ltr">payroll</code> service at 0.75 seconds (750000 microseconds).</p>
<p>In this example, thresholds are added for the <code dir="ltr">payroll</code> service as follows:</p>
<pre dir="ltr">
EXECUTE DBMS_SERVER_ALERT.SET_THRESHOLD( 
METRICS_ID =&gt; DBMS_SERVER_ALERT.ELAPSED_TIME_PER_CALL 
, warning_operator =&gt; DBMS_SERVER_ALERT.OPERATOR_GE 
, warning_value =&gt; '500000' 
, critical_operator =&gt; DBMS_SERVER_ALERT.OPERATOR_GE 
, critical_value =&gt; '750000' 
, observation_period =&gt; 30 
, consecutive_occurrences =&gt; 5 
, instance_name =&gt; NULL 
, object_type =&gt; DBMS_SERVER_ALERT.OBJECT_TYPE_SERVICE 
, object_name =&gt; 'payroll');
</pre>
<p>You can verify the threshold configuration is set on all the instances using the following <code dir="ltr">SELECT</code> statement:</p>
<pre dir="ltr">
SELECT METRICS_NAME, INSTANCE_NAME, WARNING_VALUE, CRITICAL_VALUE, 
OBSERVATION_PERIOD FROM dba_thresholds ;
</pre></div>
<!-- class="sect2" -->
<a id="BABECJID"></a>
<div id="RACAD7319" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Enable Service, Module, and Action Monitoring</h3>
<p>You can enable performance data tracing for important modules and actions within each service. The performance statistics are available in the <code dir="ltr">V$SERV_MOD_ACT_STATS</code> view. For example, you might decide to set the following:</p>
<ul>
<li>
<p>For the <code dir="ltr">ERP</code> service, enable monitoring for the <code dir="ltr">exceptions pay</code> action in the <code dir="ltr">payroll</code> module.</p>
</li>
<li>
<p>For the <code dir="ltr">ERP</code> service, enable monitoring for the all actions in the <code dir="ltr">payroll</code> module.</p>
</li>
<li>
<p>For the <code dir="ltr">HOT_BATCH</code> service, enable monitoring for all actions in the <code dir="ltr">posting</code> module.</p>
</li>
</ul>
<p>The following commands show how to enable the module and action monitoring for the services:</p>
<pre dir="ltr">
EXECUTE DBMS_MONITOR.SERV_MOD_ACT_STAT_ENABLE(service_name =&gt; 'erp', module_name=&gt;
 'payroll', action_name =&gt; 'exceptions pay');
EXECUTE DBMS_MONITOR.SERV_MOD_ACT_STAT_ENABLE(service_name =&gt; 'erp', module_name=&gt;
 'payroll', action_name =&gt; NULL);
EXECUTE DBMS_MONITOR.SERV_MOD_ACT_STAT_ENABLE(service_name =&gt; 'hot_batch', 
module_name =&gt;'posting', action_name =&gt; NULL); 
</pre>
<p>To verify monitoring is enabled for the service, module, and actions, use the following <code dir="ltr">SELECT</code> statement:</p>
<pre dir="ltr">
COLUMN AGGREGATION_TYPE FORMAT A21 TRUNCATED HEADING 'AGGREGATION'
COLUMN PRIMARY_ID FORMAT A20 TRUNCATED HEADING 'SERVICE'
COLUMN QUALIFIER_ID1 FORMAT A20 TRUNCATED HEADING 'MODULE'
COLUMN QUALIFIER_ID2 FORMAT A20 TRUNCATED HEADING 'ACTION'
SELECT * FROM DBA_ENABLED_AGGREGATIONS ; 
</pre>
<p>The output might appear as follows:</p>
<pre dir="ltr">
AGGREGATION           SERVICE                MODULE        ACTION
------------           --------------------   ----------    -------------
SERVICE_MODULE_ACTION  ERP                    PAYROLL       EXCEPTIONS PAY
SERVICE_MODULE_ACTION  ERP                    PAYROLL
SERVICE_MODULE_ACTION  HOT_BATCH              POSTING
</pre></div>
<!-- class="sect2" --></div>
<!-- class="sect1" --></div>
<!-- class="chapter" -->
<hr />
<br />
<p style="text-decoration:underline">Footnote Legend</p>
Footnote&nbsp;1:&nbsp;Runtime connection load balancing is basically routing work requests to sessions in a session pool that can best serve the work. It comes into effect when selecting a session from an existing session pool. Thus, runtime connection load balancing is a very frequent activity.<br /></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment422">
<tr>
<td class="cellalignment431">
<table class="cellalignment427">
<tr>
<td class="cellalignment426"><a href="onenode.htm"><img width="24" height="24" src="../../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment426"><a href="rman.htm"><img width="24" height="24" src="../../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;1999, 2015,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment434">
<table class="cellalignment425">
<tr>
<td class="cellalignment426"><a href="../../index.htm"><img width="24" height="24" src="../../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment426"><a href="../../nav/portal_booklist.htm"><img width="24" height="24" src="../../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment426"><a href="toc.htm"><img width="24" height="24" src="../../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment426"><a href="index.htm"><img width="24" height="24" src="../../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment426"><a href="../../nav/mindx.htm"><img width="24" height="24" src="../../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment426"><a href="../../dcommon/html/feedback.htm"><img width="24" height="24" src="../../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
</body>
</html>
