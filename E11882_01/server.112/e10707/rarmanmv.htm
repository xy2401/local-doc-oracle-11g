<!DOCTYPE html>
<html lang="en">
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1">
<meta charset="utf-8">
<title>Managing a Materialized View Replication Environment</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Version 5.1.2 Build 732" />
<meta name="dcterms.created" content="2013-06-04T10:28:46Z" />
<meta name="robots" content="all" />
<meta name="dcterms.title" content="Database Advanced Replication Management API Reference" />
<meta name="dcterms.identifier" content="E10707-05" />
<meta name="dcterms.isVersionOf" content="REPMA" />
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;1996, 2013,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved." />
<link rel="Start" href="../../index.htm" title="Home" type="text/html" />
<link rel="Copyright" href="../../dcommon/html/cpyr.htm" title="Copyright" type="text/html" />

<script type="application/javascript"  src="../../dcommon/js/headfoot.js"></script>
<script type="application/javascript"  src="../../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html" />
<link rel="Index" href="index.htm" title="Index" type="text/html" />
<link rel="Prev" href="rarmanmaster.htm" title="Previous" type="text/html" />
<link rel="Next" href="rarmanage.htm" title="Next" type="text/html" />
<link rel="alternate" href="../e10707.pdf" title="PDF version" type="application/pdf" />
<link rel="schema.dcterms" href="http://purl.org/dc/terms/" />
<link rel="stylesheet" href="../../dcommon/css/fusiondoc.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/header.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/footer.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/fonts.css">
<link rel="stylesheet" href="../../dcommon/css/foundation.css">
<link rel="stylesheet" href="../../dcommon/css/codemirror.css">
<link rel="stylesheet" type="text/css" title="Default" href="../../nav/css/html5.css">
<link rel="stylesheet" href="../../dcommon/css/respond-480-tablet.css">
<link rel="stylesheet" href="../../dcommon/css/respond-768-laptop.css">
<link rel="stylesheet" href="../../dcommon/css/respond-1140-deskop.css">
<script type="application/javascript" src="../../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">13/37</span> <!-- End Header -->
<div id="REPMA008" class="chapter"><a id="CHDBCAEE"></a><a id="CHDDIBGA"></a>
<h1 class="chapter"><span class="secnum">8</span> Managing a Materialized View Replication Environment</h1>
<p>Materialized view replication provides the flexibility to build data sets to meet the needs of your users and front-end applications, while still meeting the requirements of your security configuration. This chapter describes how to manage materialized view sites with the replication management API.</p>
<p>This chapter contains these topics:</p>
<ul>
<li>
<p><a href="#i34521">Refreshing Materialized Views</a></p>
</li>
<li>
<p><a href="#i36846">Changing a Materialized View Group's Master Site</a></p>
</li>
<li>
<p><a href="#i30374">Dropping Materialized View Groups and Objects</a></p>
</li>
<li>
<p><a href="#i30379">Managing Materialized View Logs</a></p>
</li>
<li>
<p><a href="#i30332">Performing an Offline Instantiation of a Materialized View Site Using Export/Import</a></p>
</li>
<li>
<p><a href="#i34143">Using a Group Owner for a Materialized View Group</a></p>
</li>
</ul>
<a id="i34521"></a>
<div id="REPMA389" class="sect1">
<h2 class="sect1">Refreshing Materialized Views<a id="sthref614"></a><a id="sthref615"></a><a id="sthref616"></a></h2>
<p>Refreshing a materialized view synchronizes the data in the materialized view's master(s) and the data in the materialized view. You can either refresh all of the materialized views in a refresh group at once, or you can refresh materialized views individually. If you have applications that depend on multiple materialized views at a materialized view site, then Oracle recommends using refresh groups so that the data is transactionally consistent in all of the materialized views used by the application.</p>
<p>The following example refreshes the <code>hr_refg</code> refresh group:</p>
<pre>
<a id="sthref617"></a><a id="sthref618"></a>EXECUTE <a href="rarrefreshpac.htm#i94192">DBMS_REFRESH.REFRESH (</a>'hr_refg');
</pre>
<p>The following example refreshes the <code>hr.departments_mv</code> materialized view:</p>
<pre>
<a id="sthref619"></a><a id="sthref620"></a>BEGIN
   DBMS_MVIEW.REFRESH (
     list   =&gt;  'hr.departments_mv', 
     method =&gt;  '?');
END;
/
</pre>
<div class="infobox-note">
<p class="notep1">Note:</p>
<a id="sthref621"></a><a id="sthref622"></a>Do not use the <code>DBMS_MVIEW.REFRESH_ALL_MVIEWS</code> or the <code>DBMS_MVIEW.REFRESH_DEPENDENT</code> procedure to refresh materialized views used in a replication environment. Instead, use the <code>DBMS_REFRESH.REFRESH</code> or the <code>DBMS_MVIEW.REFRESH</code> procedure to refresh materialized views in a replication environment.</div>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink ARPLS027" href="../../appdev.112/e40758/d_mview.htm#ARPLS027"><span class="italic">Oracle Database PL/SQL Packages and Types Reference</span></a> for more information about the <code>DBMS_MVIEW</code> package</div>
</div>
<!-- class="sect1" -->
<a id="i36846"></a>
<div id="REPMA390" class="sect1">
<h2 class="sect1">Changing a Materialized View Group's Master Site<a id="sthref623"></a><a id="sthref624"></a><a id="sthref625"></a></h2>
<p>To change the master site of a materialized view group at a level 1 materialized view site to another master site, call the <code>SWITCH_MVIEW_MASTER</code> procedure in the <code>DBMS_REPCAT</code> package, as shown in the following example:</p>
<pre>
BEGIN
   <a href="rarrcatpac.htm#i114433">DBMS_REPCAT.SWITCH_MVIEW_MASTER (</a>
      gname  =&gt; 'hr_repg',
      master =&gt; 'orc3.example.com');
END;
/
</pre>
<p>In this example, the master site for the <code>hr_repg</code> replication group is changed to the <code>orc3.example.com</code> master site. You must call this procedure at the materialized view site whose master site you want to change. The new database must be a master site in the replication environment. When you call this procedure, Oracle uses the new master to perform a full refresh of each materialized view in the local materialized view group. Ensure that you have set up the materialized view site to use the new master site before you run the <code>SWITCH_MVIEW_MASTER</code> procedure.</p>
<p>The entries in the <code>SYS.SLOG$</code> table at the old master site for the switched materialized view are not removed. As a result, the materialized view log (<code>MLOG$</code> table) of the switched updatable materialized view at the old master site has the potential to grow indefinitely, unless you purge it by calling <code>DBMS_MVIEW.PURGE_LOG</code>.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
You cannot switch the master of materialized views that are based on other materialized views (level 2 and greater materialized views). Such a materialized view must be dropped and re-created to base it on a different master.</div>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="rarrepsite.htm#i18551">"Setting Up Materialized View Sites"</a></div>
</div>
<!-- class="sect1" -->
<a id="i30374"></a>
<div id="REPMA391" class="sect1">
<h2 class="sect1">Dropping Materialized View Groups and Objects<a id="sthref626"></a></h2>
<p>You might need to drop replication activity at a materialized view site for several reasons. Perhaps the data requirements have changed or an employee has left the company.</p>
<p>This section contains the following sections:</p>
<ul>
<li>
<p><a href="#i33132">Dropping a Materialized View Group Created with a Deployment Template</a></p>
</li>
<li>
<p><a href="#i33137">Dropping a Materialized View Group or Objects Created Manually</a></p>
</li>
<li>
<p><a href="#i18984">Cleaning Up a Master Site or Master Materialized View Site</a></p>
</li>
</ul>
<a id="i33132"></a>
<div id="REPMA392" class="sect2">
<h3 class="sect2">Dropping a Materialized View Group Created with a Deployment Template<a id="sthref627"></a><a id="sthref628"></a></h3>
<p>If a materialized view group was created with a deployment template, then, before you drop the materialized view group at the remote materialized view site, you must execute the <code>DROP_SITE_INSTANTIATION</code> procedure at the target master site of the materialized view group. In addition to removing the metadata relating to the materialized view group, this procedure also removes the related deployment template data regarding this site.</p>
<p>The <code>DROP_SITE_INSTANTIATION</code> procedure has a public and a private version. The public version allows the owner of the materialized view group to drop the materialized view site, while the private version allows the replication administrator to drop a materialized view site on behalf of the materialized view group owner.</p>
<div id="REPMA393" class="sect3"><a id="sthref629"></a>
<h4 class="sect3">Using the Public Version of DROP_SITE_INSTANTIATION<a id="sthref630"></a><a id="sthref631"></a><a id="sthref632"></a><a id="sthref633"></a></h4>
<p>Meet the following requirements to complete these actions:</p>
<p><span class="bold">Executed As</span>:</p>
<ul>
<li>
<p>Materialized View Group Owner at Master Site</p>
</li>
<li>
<p>Materialized View Administrator at Materialized View Site</p>
</li>
</ul>
<p><span class="bold">Executed At</span>:</p>
<ul>
<li>
<p>Master Site for Target Materialized View Site</p>
</li>
<li>
<p>Materialized View Site</p>
</li>
</ul>
<p><span class="bold">Replication Status</span>: Normal</p>
<p>Complete the following steps to drop a materialized view group created with a deployment template.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
If you are viewing this document online, then you can copy the text from the "BEGINNING OF SCRIPT" line after this note to the "END OF SCRIPT" line into a text editor and then edit the text to create a script for your environment.</div>
<pre>
<a id="i36736"></a>
/************************* BEGINNING OF SCRIPT ******************************
</pre>
<dl>
<dd><a id="REPMA1268"></a><a id="sthref634"></a></dd>
<dt class="seghead">Step 1&nbsp;&nbsp;&nbsp;Connect to the master site as the materialized view group owner.</dt>
<dd>
<pre>
*/
</pre>
<pre>
SET ECHO ON

SPOOL drop_mv_group_public.out

CONNECT hr@orc3.example.com

/*
</pre></dd>
<dd><a id="REPMA1269"></a><a id="sthref635"></a></dd>
<dt class="seghead">Step 2&nbsp;&nbsp;&nbsp;Drop the instantiated materialized view site from the master site.</dt>
<dd>
<pre>
*/

BEGIN
   <a href="rarrcatinstantpac.htm#i93857">DBMS_REPCAT_INSTANTIATE.DROP_SITE_INSTANTIATION(</a> 
      refresh_template_name =&gt;  'hr_refg_dt',
      site_name =&gt; 'mv4.example.com');
END;
/

/*
</pre></dd>
<dd><a id="REPMA1270"></a><a id="sthref636"></a></dd>
<dt class="seghead">Step 3&nbsp;&nbsp;&nbsp;Connect to the remote materialized view site as the materialized view administrator.</dt>
<dd>
<pre>
*/
</pre>
<pre>
CONNECT mviewadmin@mv4.example.com

/*
</pre>
<p>If you are not able to connect to the remote materialized view site, then the target materialized view group cannot refresh, but the existing data still remains at the materialized view site.</p>
</dd>
<dd><a id="REPMA1271"></a><a id="sthref637"></a></dd>
<dt class="seghead">Step 4&nbsp;&nbsp;&nbsp;Drop the materialized view group.</dt>
<dd>
<pre>
*/
</pre>
<pre>
BEGIN
   <a href="rarrcatpac.htm#i109292">DBMS_REPCAT.DROP_MVIEW_REPGROUP (</a>
      gname =&gt; 'hr_repg',
      drop_contents =&gt; TRUE);
END;
/

/*
</pre>
<p>To physically remove the contents of the materialized view group from the materialized view database, specify <code>TRUE</code> for the <code>drop_contents</code> parameter.</p>
</dd>
<dd><a id="REPMA1272"></a><a id="sthref638"></a></dd>
<dt class="seghead">Step 5&nbsp;&nbsp;&nbsp;Remove the refresh group.</dt>
<dd>
<p>Connect as the refresh group owner and remove the refresh group.</p>
<pre>
*/

CONNECT hr@mv4.example.com

BEGIN
   <a href="rarrefreshpac.htm#i94940">DBMS_REFRESH.DESTROY (</a>
       name =&gt; 'hr_refg');
END;
/

SET ECHO OFF

SPOOL OFF

<a id="i30949"></a>/************************* END OF SCRIPT **********************************/
</pre></dd>
</dl>
</div>
<!-- class="sect3" -->
<div id="REPMA394" class="sect3"><a id="sthref639"></a>
<h4 class="sect3">Using the Private Version of DROP_SITE_INSTANTIATION<a id="sthref640"></a><a id="sthref641"></a><a id="sthref642"></a><a id="sthref643"></a></h4>
<p>The following steps are to be performed by the replication administrator on behalf of the materialized view group owner. Meet the following requirements to complete these actions:</p>
<p><span class="bold">Executed As</span>:</p>
<ul>
<li>
<p>Replication Administrator at Master Site</p>
</li>
<li>
<p>Materialized View Administrator at Materialized View Site</p>
</li>
</ul>
<p><span class="bold">Executed At</span>:</p>
<ul>
<li>
<p>Master Site for Target Materialized View Site</p>
</li>
<li>
<p>Materialized View Site</p>
</li>
</ul>
<p><span class="bold">Replication Status</span>: Normal</p>
<p>Complete the following steps to drop a materialized view group created with a deployment template.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
If you are viewing this document online, then you can copy the text from the "BEGINNING OF SCRIPT" line after this note to the "END OF SCRIPT" line into a text editor and then edit the text to create a script for your environment.</div>
<pre>
<a id="i36737"></a>
/************************* BEGINNING OF SCRIPT ******************************
</pre>
<dl>
<dd><a id="REPMA1273"></a><a id="sthref644"></a></dd>
<dt class="seghead">Step 1&nbsp;&nbsp;&nbsp;Connect to the master site as the replication administrator.</dt>
<dd>
<pre>
*/
</pre>
<pre>
SET ECHO ON

SPOOL drop_mv_group_private.out

CONNECT repadmin@orc1.example.com

/*
</pre></dd>
<dd><a id="REPMA1274"></a><a id="sthref645"></a></dd>
<dt class="seghead">Step 2&nbsp;&nbsp;&nbsp;Drop the instantiated materialized view site from the master site.</dt>
<dd>
<pre>
*/

BEGIN
   <a href="rarrcatrgtpac.htm#i95739">DBMS_REPCAT_RGT.DROP_SITE_INSTANTIATION (</a> 
      refresh_template_name =&gt; 'hr_refg_dt',
      user_name             =&gt; 'hr',
      site_name             =&gt; 'mv4.example.com');
END;
/

/*
</pre></dd>
<dd><a id="REPMA1275"></a><a id="sthref646"></a></dd>
<dt class="seghead">Step 3&nbsp;&nbsp;&nbsp;Connect to the remote materialized view site as the materialized view administrator.</dt>
<dd>
<pre>
*/
</pre>
<pre>
CONNECT mviewadmin@mv4.example.com

/*
</pre>
<p>If you are unable to connect to the remote materialized view site, then the target materialized view group cannot refresh, but the existing data still remains at the materialized view site.</p>
</dd>
<dd><a id="REPMA1276"></a><a id="sthref647"></a></dd>
<dt class="seghead">Step 4&nbsp;&nbsp;&nbsp;Drop the materialized view group.</dt>
<dd>
<pre>
*/
</pre>
<pre>
BEGIN
   <a href="rarrcatpac.htm#i109292">DBMS_REPCAT.DROP_MVIEW_REPGROUP (</a>
      gname =&gt; 'hr_repg',
      drop_contents =&gt; TRUE,
      gowner =&gt; 'hr');
END;
/

/*
</pre>
<p>To physically remove the contents of the materialized view group from the materialized view database, specify <code>TRUE</code> for the <code>drop_contents</code> parameter.</p>
</dd>
<dd><a id="REPMA1277"></a><a id="sthref648"></a></dd>
<dt class="seghead">Step 5&nbsp;&nbsp;&nbsp;Remove the refresh group.</dt>
<dd>
<p>Connect as the refresh group owner and remove the refresh group.</p>
<pre>
*/

CONNECT hr@mv4.example.com

BEGIN
   <a href="rarrefreshpac.htm#i94940">DBMS_REFRESH.DESTROY (</a>
       name =&gt; 'hr_refg');
END;
/

SET ECHO OFF

SPOOL OFF

<a id="i31096"></a>/************************* END OF SCRIPT **********************************/
</pre></dd>
</dl>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="i33137"></a>
<div id="REPMA395" class="sect2">
<h3 class="sect2">Dropping a Materialized View Group or Objects Created Manually<a id="sthref649"></a><a id="sthref650"></a></h3>
<p>The most secure method of removing replication support for a materialized view site is to physically drop the replicated objects or groups at the materialized view site. The following two sections describe how to drop these objects and groups while connected to the materialized view group.</p>
<p>Ideally, these procedures should be executed while the materialized view is connected to its target master site or master materialized view site. A connection ensures that any related metadata at the master site or master materialized view site is removed. If a connection to the master site or master materialized view site is not possible, then be sure to complete the procedure described in <a href="#i18984">"Cleaning Up a Master Site or Master Materialized View Site"</a> to manually remove the related metadata.</p>
<a id="i19031"></a>
<div id="REPMA396" class="sect3">
<h4 class="sect3">Dropping a Materialized View Group Created Manually<code><a id="sthref651"></a><a id="sthref652"></a></code></h4>
<p>When it becomes necessary to remove a materialized view group from a materialized view site, use the <code>DROP_MVIEW_REPGROUP</code> procedure to drop a materialized view group. When you execute this procedure and are connected to the target master site or master materialized view site, the metadata for the target materialized view group at the master site or master materialized view site is removed. If you cannot connect, then see <a href="#i18984">"Cleaning Up a Master Site or Master Materialized View Site"</a> for more information.</p>
<p>Meet the following requirements to complete these actions:</p>
<p><span class="bold">Executed As</span>: Materialized View Administrator</p>
<p><span class="bold">Executed At</span>: Remote Materialized View Site</p>
<p><span class="bold">Replication Status</span>: N/A</p>
<p>Complete the following steps to drop a materialized view group at a materialized view site:</p>
<dl>
<dd><a id="REPMA1278"></a><a id="sthref653"></a></dd>
<dt class="seghead">Step 1&nbsp;&nbsp;&nbsp;Connect to the materialized view site as the materialized view administrator.</dt>
<dd>
<pre>
CONNECT mviewadmin@mv1.example.com
Enter password: <span class="italic">password</span>
</pre></dd>
<dd><a id="REPMA1279"></a><a id="sthref654"></a></dd>
<dt class="seghead">Step 2&nbsp;&nbsp;&nbsp;Drop the materialized view group.</dt>
<dd>
<pre>
BEGIN
</pre>
<pre>
   <a href="rarrcatpac.htm#i109292">DBMS_REPCAT.DROP_MVIEW_REPGROUP (</a>
      gname =&gt; 'hr_repg',
      drop_contents =&gt; TRUE);
END;
/
</pre>
<p>To physically remove the contents of the materialized view group from the materialized view database, specify <code>TRUE</code> for the <code>drop_contents</code> parameter.</p>
</dd>
</dl>
</div>
<!-- class="sect3" -->
<a id="i19057"></a>
<div id="REPMA397" class="sect3">
<h4 class="sect3">Dropping Objects at a Materialized View Site<code><a id="sthref655"></a><a id="sthref656"></a><a id="sthref657"></a></code></h4>
<p>When it becomes necessary to remove an individual materialized view from a materialized view site, use the <code>DROP_MVIEW_REPOBJECT</code> procedure API to drop a materialized view. When you execute this procedure and are connected to the target master site or master materialized view site, the metadata for the target materialized view at the master site or master materialized view site is removed. If you cannot connect, then see <a href="#i18984">"Cleaning Up a Master Site or Master Materialized View Site"</a> for more information.</p>
<p>Meet the following requirements to complete these actions:</p>
<p><span class="bold">Executed As</span>: Materialized View Administrator</p>
<p><span class="bold">Executed At</span>: Remote Materialized View Site</p>
<p><span class="bold">Replication Status</span>: N/A</p>
<p>Complete the following steps to drop an individual materialized view at a materialized view site.</p>
<dl>
<dd><a id="REPMA1280"></a><a id="sthref658"></a></dd>
<dt class="seghead">Step 1&nbsp;&nbsp;&nbsp;Connect to the materialized view site as the materialized view administrator.</dt>
<dd>
<pre>
CONNECT mviewadmin@mv1.example.com
Enter password: <span class="italic">password</span>
</pre></dd>
<dd><a id="REPMA1281"></a><a id="sthref659"></a></dd>
<dt class="seghead">Step 2&nbsp;&nbsp;&nbsp;Drop the materialized view.</dt>
<dd>
<pre>
BEGIN
</pre>
<pre>
   <a href="rarrcatpac.htm#i109347">DBMS_REPCAT.DROP_MVIEW_REPOBJECT (</a>
      sname =&gt; 'hr', 
      oname =&gt; 'employees_mv1', 
      type =&gt; 'SNAPSHOT', 
      drop_objects =&gt; TRUE);
END;
/
</pre>
<p>To physically remove the contents of the materialized view from the materialized view database, specify <code>TRUE</code> for the <code>drop_contents</code> parameter.</p>
</dd>
</dl>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="i18984"></a>
<div id="REPMA398" class="sect2">
<h3 class="sect2">Cleaning Up a Master<a id="sthref660"></a> Site or Master Materialized View Site</h3>
<p>If you are unable to drop a materialized view group or materialized view object while connected to the target master site or master materialized view site, then you must remove the related metadata at the master site or master materialized view site manually. Cleaning up the metadata also ensures that you are not needlessly maintaining master table or master materialized view changes to a materialized view log. The following sections describe how to clean up your master site or master materialized view site after dropping a materialized view group or object.</p>
<div id="REPMA399" class="sect3"><a id="sthref661"></a>
<h4 class="sect3">Cleaning Up After Dropping a Materialized View Group<code><a id="sthref662"></a><a id="sthref663"></a><a id="sthref664"></a><a id="sthref665"></a><a id="sthref666"></a></code></h4>
<p>If you have executed the steps described in <a href="#i19031">"Dropping a Materialized View Group Created Manually"</a> and were not connected to the master site or master materialized view site, then you are encouraged to complete the following steps to clean up the target master site or master materialized view site.</p>
<p>Meet the following requirements to complete these actions:</p>
<p><span class="bold">Executed As</span>: Replication Administrator</p>
<p><span class="bold">Executed At</span>: Master Site or Master Materialized View Site for Target Materialized View Site</p>
<p><span class="bold">Replication Status</span>: Normal</p>
<p>Complete the following steps to clean up a master site or master materialized view site after dropping a materialized view group:</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
If you are viewing this document online, then you can copy the text from the "BEGINNING OF SCRIPT" line after this note to the "END OF SCRIPT" line into a text editor and then edit the text to create a script for your environment.</div>
<pre>
/************************* BEGINNING OF SCRIPT ******************************
</pre>
<dl>
<dd><a id="REPMA1282"></a><a id="sthref667"></a></dd>
<dt class="seghead">Step 1&nbsp;&nbsp;&nbsp;Connect to the master site or master materialized view site as the replication administrator.</dt>
<dd>
<pre>
*/
</pre>
<pre>
SET ECHO ON

SPOOL cleanup_master1.out

CONNECT repadmin@orc1.example.com

/*
</pre></dd>
<dd><a id="REPMA1283"></a><a id="CHDFBAEH"></a></dd>
<dt class="seghead">Step 2&nbsp;&nbsp;&nbsp;Unregister the materialized view groups.</dt>
<dd>
<pre>
*/
</pre>
<pre>
BEGIN
   <a href="rarrcatpac.htm#i99176">DBMS_REPCAT.UNREGISTER_MVIEW_REPGROUP (</a>
      gname =&gt; 'hr_repg',
      mviewsite =&gt; 'mv1.example.com');
END;
/

/*
</pre></dd>
<dd><a id="REPMA1284"></a><a id="sthref668"></a></dd>
<dt class="seghead">Step 3&nbsp;&nbsp;&nbsp;Purge the materialized view logs of the entries that were marked for the target materialized views.</dt>
<dd>
<p>Execute the <code>PURGE_MVIEW_FROM_LOG</code> procedure for each materialized view that was in the materialized view groups you unregistered in Step <a href="#CHDFBAEH">2</a>.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
If for some reason unregistering the materialized view group fails, then you should still complete this step.</div>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink ARPLS027" href="../../appdev.112/e40758/d_mview.htm#ARPLS027"><span class="italic">Oracle Database PL/SQL Packages and Types Reference</span></a> for more information about the <code>DBMS_MVIEW</code> package</div>
<pre>
*/

BEGIN
   DBMS_MVIEW.PURGE_MVIEW_FROM_LOG (
      mviewowner =&gt; 'hr',
      mviewname =&gt; 'countries_mv1', 
      mviewsite =&gt; 'mv1.example.com');
END;
/

BEGIN
   DBMS_MVIEW.PURGE_MVIEW_FROM_LOG (
      mviewowner =&gt; 'hr',
      mviewname =&gt; 'departments_mv1', 
      mviewsite =&gt; 'mv1.example.com');
END;
/

BEGIN
   DBMS_MVIEW.PURGE_MVIEW_FROM_LOG (
      mviewowner =&gt; 'hr',
      mviewname =&gt; 'employees_mv1', 
      mviewsite =&gt; 'mv1.example.com');
END;
/

BEGIN
   DBMS_MVIEW.PURGE_MVIEW_FROM_LOG (
      mviewowner =&gt; 'hr',
      mviewname =&gt; 'jobs_mv1', 
      mviewsite =&gt; 'mv1.example.com');
END;
/

BEGIN
   DBMS_MVIEW.PURGE_MVIEW_FROM_LOG (
      mviewowner =&gt; 'hr',
      mviewname =&gt; 'job_history_mv1', 
      mviewsite =&gt; 'mv1.example.com');
END;
/

BEGIN
   DBMS_MVIEW.PURGE_MVIEW_FROM_LOG (
      mviewowner =&gt; 'hr',
      mviewname =&gt; 'locations_mv1', 
      mviewsite =&gt; 'mv1.example.com');
END;
/

BEGIN
   DBMS_MVIEW.PURGE_MVIEW_FROM_LOG (
      mviewowner =&gt; 'hr',
      mviewname =&gt; 'regions_mv1', 
      mviewsite =&gt; 'mv1.example.com');
END;
/

SET ECHO OFF

SPOOL OFF

<a id="i31305"></a>/************************* END OF SCRIPT **********************************/
</pre></dd>
</dl>
</div>
<!-- class="sect3" -->
<div id="REPMA400" class="sect3"><a id="sthref669"></a>
<h4 class="sect3">Cleaning Up Individual Materialized View Support<a id="sthref670"></a><a id="sthref671"></a><a id="sthref672"></a><a id="sthref673"></a><code><a id="sthref674"></a><a id="sthref675"></a><a id="sthref676"></a></code></h4>
<p>If you have executed the steps described in <a href="#i19057">"Dropping Objects at a Materialized View Site"</a> and were not connected to the master site or master materialized view site, then you are encouraged to complete the following steps to clean up the target master site or master materialized view site.</p>
<p>Meet the following requirements to complete these actions:</p>
<p><span class="bold">Executed As</span>: Replication Administrator</p>
<p><span class="bold">Executed At</span>: Master Site or Master Materialized View Site for Target Materialized View Site</p>
<p><span class="bold">Replication Status</span>: Normal</p>
<p>Complete the following steps to clean up a master site or master materialized view site after dropping an individual materialized view.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
If you are viewing this document online, then you can copy the text from the "BEGINNING OF SCRIPT" line after this note to the "END OF SCRIPT" line into a text editor and then edit the text to create a script for your environment.</div>
<pre>
<a id="i36738"></a>
/************************* BEGINNING OF SCRIPT ******************************
</pre>
<dl>
<dd><a id="REPMA1285"></a><a id="sthref677"></a></dd>
<dt class="seghead">Step 1&nbsp;&nbsp;&nbsp;Connect to the master site or master materialized view site as the replication administrator.</dt>
<dd>
<pre>
*/
</pre>
<pre>
SET ECHO ON

SPOOL cleanup_master2.out

CONNECT repadmin@orc1.example.com

/*
</pre></dd>
<dd><a id="REPMA1286"></a><a id="sthref678"></a></dd>
<dt class="seghead">Step 2&nbsp;&nbsp;&nbsp;Unregister the materialized view.</dt>
<dd>
<pre>
*/
</pre>
<pre>
BEGIN
   DBMS_MVIEW.UNREGISTER_MVIEW (
      mviewowner =&gt; 'hr',
      mviewname =&gt; 'employees_mv1',
      mviewsite =&gt; 'mv1.example.com');
END;
/

/*
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink ARPLS027" href="../../appdev.112/e40758/d_mview.htm#ARPLS027"><span class="italic">Oracle Database PL/SQL Packages and Types Reference</span></a> for more information about the <code>DBMS_MVIEW</code> package</div>
</dd>
<dd><a id="REPMA1287"></a><a id="sthref679"></a></dd>
<dt class="seghead">Step 3&nbsp;&nbsp;&nbsp;Purge the associated materialized view log of the entries that were marked for the target materialized views.</dt>
<dd>
<div class="infobox-note">
<p class="notep1">Note:</p>
If for some reason unregistering the materialized view fails, then you should still complete this step.</div>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink ARPLS027" href="../../appdev.112/e40758/d_mview.htm#ARPLS027"><span class="italic">Oracle Database PL/SQL Packages and Types Reference</span></a> for more information about the <code>DBMS_MVIEW</code> package</div>
<pre>
*/

BEGIN
   DBMS_MVIEW.PURGE_MVIEW_FROM_LOG (<a id="sthref680"></a><a id="sthref681"></a>
      mviewowner =&gt; 'hr',
      mviewname =&gt; 'employees_mv1', 
      mviewsite =&gt; 'mv1.example.com');
END;
/

SET ECHO OFF

SPOOL OFF

<a id="i31411"></a>/************************* END OF SCRIPT **********************************/
</pre></dd>
</dl>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="i30379"></a>
<div id="REPMA124" class="sect1">
<h2 class="sect1">Managing Materialized View Logs<a id="sthref682"></a><a id="sthref683"></a></h2>
<p>The following sections explain how to manage materialized view logs:</p>
<ul>
<li>
<p><a href="#i19705">Altering Materialized View Logs</a></p>
</li>
<li>
<p><a href="#i19724">Managing Materialized View Log Space</a></p>
</li>
<li>
<p><a href="#i19786">Reorganizing Master Tables that Have Materialized View Logs</a></p>
</li>
<li>
<p><a href="#i20013">Dropping a Materialized View Log</a></p>
</li>
</ul>
<a id="i19705"></a>
<div id="REPMA401" class="sect2">
<h3 class="sect2">Altering Materialized View Logs<a id="sthref684"></a><a id="sthref685"></a></h3>
<p>After creating a materialized view log, you can alter its storage parameters and support for corresponding materialized views. The following sections explain more about altering materialized view logs. Only the following users can alter a materialized view log:</p>
<ul>
<li>
<p>The owner of the master table or master materialized view.</p>
</li>
<li>
<p>A user with the <code>SELECT</code> privilege for the master table or master materialized view and <code>ALTER</code> privilege on the <code>MLOG$</code>_<span class="italic">master_name</span>, where <span class="italic">master_name</span> is the name of the master for the materialized view log. For example, if the master table is <code>employees</code>, then the materialized view log table name is <code>MLOG$_employees</code>.</p>
</li>
</ul>
<div id="REPMA402" class="sect3"><a id="sthref686"></a>
<h4 class="sect3">Altering Materialized View Log Storage Parameters<a id="sthref687"></a><a id="sthref688"></a></h4>
<p>To alter a materialized view log's storage parameters, use the <code>ALTER</code> <code>MATERIALIZED</code> <code>VIEW</code> <code>LOG</code> statement. For example, the following statement alters a materialized view log on the <code>employees</code> table in the <code>hr</code> schema:</p>
<pre>
ALTER MATERIALIZED VIEW LOG ON hr.employees
  PCTFREE 25
  PCTUSED 40;
</pre></div>
<!-- class="sect3" -->
<a id="CCHFFJHG"></a>
<div id="REPMA403" class="sect3">
<h4 class="sect3">Altering a Materialized View Log to Add Columns<a id="sthref689"></a><a id="sthref690"></a></h4>
<p>To add new columns to a materialized view log, use the SQL statement <code>ALTER</code> <code>MATERIALIZED</code> <code>VIEW</code> <code>LOG</code>. For example, the following statement alters a materialized view log on the <code>customers</code> table in the <code>sales</code> schema:</p>
<pre>
ALTER MATERIALIZED VIEW LOG ON hr.employees
  ADD (department_id);
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink REPLN106" href="../../server.112/e10706/repplan.htm#REPLN106"><span class="italic">Oracle Database Advanced Replication</span></a> for more information about adding columns to a materialized view log</div>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="i19724"></a>
<div id="REPMA404" class="sect2">
<h3 class="sect2">Managing Materialized View Log Space<a id="sthref691"></a></h3>
<p>Oracle automatically tracks which rows in a materialized view log have been used during the refreshes of materialized views, and purges these rows from the log so that the log does not grow endlessly. Because multiple simple materialized views can use the same materialized view log, rows already used to refresh one materialized view might still be needed to refresh another materialized view. Oracle does not delete rows from the log until <span class="italic">all</span> materialized views have used them.</p>
<p>For example, suppose two materialized views were created against the <code>customers</code> table in a master site. Oracle refreshes the <code>customers</code> materialized view at the <code>spdb1</code> database. However, the server that manages the master table and associated materialized view log does not purge the materialized view log rows used during the refresh of this materialized view until the <code>customers</code> materialized view at the <code>spdb2</code> database also refreshes using these rows.</p>
<p>Because Oracle must wait for all dependent materialized views to refresh before purging rows from a materialized view log, unwanted situations can occur that cause a materialized view log to grow indefinitely when multiple materialized views are based on the same master table or master materialized view.</p>
<p>For example, such situations can occur when multiple materialized views are based on a master table or master materialized view and one of the following conditions is true:</p>
<ul>
<li>
<p>One materialized view is not configured for automatic refreshes and has not been manually refreshed for a long time.</p>
</li>
<li>
<p>One materialized view has an infrequent refresh interval, such as every year (365 days).</p>
</li>
<li>
<p>A network failure has prevented an automatic refresh of one or more of the materialized views based on the master table or master materialized view.</p>
</li>
<li>
<p>A network or site failure has prevented a master table or master materialized view from becoming aware that a materialized view has been dropped.</p>
</li>
</ul>
<div class="infobox-note">
<p class="notep1">Note:</p>
If you purge or <code>TRUNCATE</code> a materialized view log before a materialized view has refreshed the changes that were deleted, then the materialized view must perform a complete refresh.</div>
<a id="i19734"></a>
<div id="REPMA405" class="sect3">
<h4 class="sect3">Purging Rows from a Materialized View Log<a id="sthref692"></a><a id="sthref693"></a><a id="sthref694"></a></h4>
<p>Always try to keep a materialized view log as small as possible to minimize the database space that it uses. To remove rows from a materialized view log and make space for newer log records, you can perform one of the following actions:</p>
<ul>
<li>
<p>Refresh the materialized views associated with the log so that Oracle can purge rows from the materialized view log.</p>
</li>
<li>
<p>Manually purge records in the log by deleting rows required only by the <span class="italic">n</span>th least recently refreshed materialized views.</p>
</li>
</ul>
<p>To manually purge rows from a materialized view log, execute the <code>PURGE_LOG</code> procedure of the <code>DBMS_MVIEW</code> package at the database that contains the log. For example, to purge entries from the materialized view log of the <code>customers</code> table that are necessary only for the least recently refreshed materialized view, execute the following procedure:</p>
<pre>
BEGIN
   DBMS_MVIEW.PURGE_LOG (<a id="sthref695"></a><a id="sthref696"></a>
      master =&gt; 'hr.employees',
      num    =&gt; 1,
      flag   =&gt; 'DELETE');
END;
/
</pre>
<p><a id="sthref697"></a>Only the owner of a materialized view log or a user with the <code>EXECUTE</code> privilege for the <code>DBMS_MVIEW</code> package can purge rows from the materialized view log by executing the <code>PURGE_LOG</code> procedure.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink ARPLS027" href="../../appdev.112/e40758/d_mview.htm#ARPLS027"><span class="italic">Oracle Database PL/SQL Packages and Types Reference</span></a> for more information about the <code>DBMS_MVIEW</code> package</div>
</div>
<!-- class="sect3" -->
<div id="REPMA406" class="sect3"><a id="sthref698"></a>
<h4 class="sect3">Truncating a Materialized View Log<a id="sthref699"></a><a id="sthref700"></a></h4>
<p>If a materialized view log grows and allocates many extents, then purging the log of rows does not reduce the amount of space allocated for the log. In such cases, you should truncate the materialized view log. Only the owner of a materialized view log or a user with the <code>DELETE</code> <code>ANY</code> <code>TABLE</code> system privilege can truncate a materialized view log.</p>
<p>To reduce the space allocated for a materialized view log by truncating it, complete the following steps:</p>
<dl>
<dd><a id="REPMA1288"></a><a id="sthref701"></a></dd>
<dt class="seghead">Step 1&nbsp;&nbsp;&nbsp;Acquire an exclusive lock on the master table or master materialized view to prevent updates during the following process.</dt>
<dd>
<p>For example, issue a statement similar to the following:</p>
<pre>
LOCK TABLE hr.employees IN EXCLUSIVE MODE;
</pre></dd>
<dd><a id="REPMA1289"></a><a id="sthref702"></a></dd>
<dt class="seghead">Step 2&nbsp;&nbsp;&nbsp;Using a second database session, copy the rows in the materialized view log (in other words, the MLOG$ table) to a temporary table.</dt>
<dd>
<p>For example, issue a statement similar to the following:</p>
<pre>
CREATE TABLE hr.templog AS SELECT * FROM hr.MLOG$_employees;
</pre></dd>
<dd><a id="REPMA1290"></a><a id="sthref703"></a></dd>
<dt class="seghead">Step 3&nbsp;&nbsp;&nbsp;<a id="sthref704"></a>Using the second session, truncate the log using the SQL statement TRUNCATE TABLE.</dt>
<dd>
<p>For example, issue a statement similar to the following:</p>
<pre>
TRUNCATE TABLE hr.MLOG$_employees;
</pre></dd>
<dd><a id="REPMA1291"></a><a id="sthref705"></a></dd>
<dt class="seghead">Step 4&nbsp;&nbsp;&nbsp;Using the second session, reinsert the old rows.</dt>
<dd>
<p>Perform this step so that you do not have to perform a complete refresh of the dependent materialized views.</p>
<p>For example, issue statements similar to the following:</p>
<pre>
INSERT INTO hr.MLOG$_employees SELECT * FROM hr.templog;

DROP TABLE hr.templog;
</pre></dd>
<dd><a id="REPMA1292"></a><a id="sthref706"></a></dd>
<dt class="seghead">Step 5&nbsp;&nbsp;&nbsp;Using the first session, release the exclusive lock on the master table or master materialized view.</dt>
<dd>
<p>You can accomplish this by performing a rollback:</p>
<pre>
ROLLBACK;
</pre></dd>
</dl>
<div class="infobox-note">
<p class="notep1">Note:</p>
Any changes made to the master table or master materialized view between the time you copy the rows to a new location and when you truncate the log do not appear until after you perform a complete refresh.</div>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="i19786"></a>
<div id="REPMA101" class="sect2">
<h3 class="sect2">Reorganizing Master Tables that Have Materialized View Logs<a id="sthref707"></a><a id="sthref708"></a><a id="sthref709"></a></h3>
<p>To improve performance and optimize disk use, you can periodically reorganize master tables. This section describes how to reorganize a master and preserve the fast refresh capability of associated materialized views.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
<a id="sthref710"></a><a id="sthref711"></a><a id="sthref712"></a><a id="sthref713"></a>These sections do not discuss online redefinition of tables. Online redefinition is not allowed on master tables with materialized view logs, master materialized views, or materialized views. Online redefinition is allowed only on master tables that do not have materialized view logs. See the <a class="olink ADMIN01514" href="../../server.112/e25494/tables.htm#ADMIN01514"><span class="italic">Oracle Database Administrator's Guide</span></a> for more information about online redefinition of tables.</div>
<div id="REPMA407" class="sect3"><a id="sthref714"></a>
<h4 class="sect3">Reorganization Notification<a id="sthref715"></a><a id="sthref716"></a><a id="sthref717"></a><a id="sthref718"></a></h4>
<p>When you reorganize a table, any <code>ROWID</code> information of the materialized view log must be invalidated. Oracle detects a table reorganization automatically only if the table is truncated as part of the reorganization.</p>
<p>If the table is not truncated, then Oracle must be notified of the table reorganization. To support table reorganizations, two procedures in the <code>DBMS_MVIEW</code> package, <code>BEGIN_TABLE_REORGANIZATION</code> and <code>END_TABLE_REORGANIZATION</code>, notify Oracle that the specified table has been reorganized. The procedures perform clean-up operations, verify the integrity of the logs and triggers that the fast refresh mechanism needs, and invalidate the <code>ROWID</code> information in the table's materialized view log. The inputs are the owner and name of the master to be reorganized. There is no output.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#i19831">"Method 2 for Reorganizing Table employees"</a></div>
</div>
<!-- class="sect3" -->
<div id="REPMA408" class="sect3"><a id="sthref719"></a>
<h4 class="sect3">Truncating Masters<a id="sthref720"></a><a id="sthref721"></a></h4>
<p>When a table is truncated, its materialized view log is also truncated. However, for primary key materialized views, you can preserve the materialized view log, allowing fast refreshes to continue. Although the information stored in a materialized view log is preserved, the materialized view log becomes invalid for rowids when the master is truncated. The rowid information in the materialized view log will seem to be newly created and cannot be used by rowid materialized views for fast refresh.</p>
<p>The <a id="sthref722"></a><a id="sthref723"></a><code>PRESERVE</code> <code>MATERIALIZED</code> <code>VIEW</code> <code>LOG</code> option is the default. Therefore, if you specify the <code>PRESERVE</code> <code>MATERIALIZED</code> <code>VIEW</code> <code>LOG</code> option or no option, then the information in the master's materialized view log is preserved, but current rowid materialized views can use the log for a fast refresh only <span class="italic">after</span> a complete refresh has been performed.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
To ensure that any previously fast refreshable materialized view is still refreshable, follow the guidelines in <a href="#i19815">"Methods of Reorganizing a Database Table"</a>.</div>
<p>If the <code>PURGE</code> <code>MATERIALIZED</code> <code>VIEW</code> <code>LOG</code> option is specified, then the materialized view log is purged along with the master.</p>
<div id="REPMA409" class="sect4"><a id="sthref724"></a>
<h5 class="sect4">Examples</h5>
<p>Either of the following two statements preserves materialized view log information when the master table named <code>employees</code> is truncated:</p>
<pre>
TRUNCATE TABLE hr.employees PRESERVE MATERIALIZED VIEW LOG;
TRUNCATE TABLE hr.employees;
</pre>
<p>The following statement truncates the materialized view log along with the master table:</p>
<pre>
TRUNCATE TABLE hr.employees PURGE MATERIALIZED VIEW LOG;
</pre></div>
<!-- class="sect4" --></div>
<!-- class="sect3" -->
<a id="i19815"></a>
<div id="REPMA410" class="sect3">
<h4 class="sect3">Methods of Reorganizing a Database Table<a id="sthref725"></a></h4>
<p>Oracle provides four table reorganization methods that preserve the capability for fast refresh. These appear in the following sections. Other reorganization methods require an initial complete refresh to enable subsequent fast refreshes.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
Do <span class="italic">not</span> use Direct Loader during a reorganization of a master. Direct Loader can cause reordering of the columns, which could invalidate the log information used in subquery and LOB materialized views.</div>
<div id="REPMA411" class="sect4"><a id="sthref726"></a>
<h5 class="sect4"><span class="bold">Method 1 for Reorganizing Table employees</span></h5>
<p>Complete the following steps:</p>
<ol>
<li>
<p>Call <code>DBMS_MVIEW.BEGIN_TABLE_REORGANIZATION</code> for table employees.</p>
</li>
<li>
<p>Rename table employees to employees_old.</p>
</li>
<li>
<p>Create table employees as SELECT * FROM employees_old.</p>
</li>
<li>
<p>Call <code>DBMS_MVIEW.END_TABLE_REORGANIZATION</code> for new table employees.</p>
</li>
</ol>
<div class="infobox-note">
<p class="notep1">Caution:</p>
When a table is renamed, its associated PL/SQL triggers are also adjusted to the new name of the table.</div>
<p>Ensure that no transaction is issued against the reorganized table between calling <code>BEGIN_TABLE_REORGANIZATION</code> and <code>END_TABLE_REORGANIZATION</code>.</p>
</div>
<!-- class="sect4" -->
<a id="i19831"></a>
<div id="REPMA412" class="sect4">
<h5 class="sect4">Method 2 for Reorganizing Table employees</h5>
<p>Complete the following steps:</p>
<ol>
<li>
<p>Call <code>DBMS_MVIEW.BEGIN_TABLE_REORGANIZATION</code> for table employees.</p>
</li>
<li>
<p>Export table employees.</p>
</li>
<li>
<p>Truncate table employees with <code>PRESERVE</code> <code>MATERIALIZED</code> <code>VIEW</code> <code>LOG</code> option.</p>
</li>
<li>
<p>Import table employees using conventional path.</p>
</li>
<li>
<p>Call <code>DBMS_MVIEW.END_TABLE_REORGANIZATION</code> for new table employees.</p>
</li>
</ol>
<div class="infobox-note">
<p class="notep1">Caution:</p>
When you truncate masters as part of a reorganization, you must use the <code>PRESERVE</code> <code>MATERIALIZED</code> <code>VIEW</code> <code>LOG</code> clause of the truncate table DDL.</div>
<p>Ensure that no transaction is issued against the reorganized table between calling <code>BEGIN_TABLE_REORGANIZATION</code> and <code>END_TABLE_REORGANIZATION</code>.</p>
</div>
<!-- class="sect4" -->
<div id="REPMA413" class="sect4"><a id="sthref727"></a>
<h5 class="sect4"><span class="bold">Method 3 for Reorganizing Table employees</span></h5>
<p>Complete the following steps:</p>
<ol>
<li>
<p>Call <code>DBMS_MVIEW.BEGIN_TABLE_REORGANIZATION</code> for table employees.</p>
</li>
<li>
<p>Export table employees.</p>
</li>
<li>
<p>Rename table employees to employees_old.</p>
</li>
<li>
<p>Import table employees using conventional path.</p>
</li>
<li>
<p>Call <code>DBMS_MVIEW.END_TABLE_REORGANIZATION</code> for new table employees.</p>
</li>
</ol>
<div class="infobox-note">
<p class="notep1">Caution:</p>
When a table is renamed, its associated PL/SQL triggers are also adjusted to the new name of the table.</div>
<p>Ensure that no transaction is issued against the reorganized table between calling <code>BEGIN_TABLE_REORGANIZATION</code> and <code>END_TABLE_REORGANIZATION</code>.</p>
</div>
<!-- class="sect4" -->
<div id="REPMA414" class="sect4"><a id="sthref728"></a>
<h5 class="sect4"><span class="bold">Method 4 for Reorganizing Table employees</span></h5>
<p>Complete the following steps:</p>
<ol>
<li>
<p>Call <code>DBMS_MVIEW.BEGIN_TABLE_REORGANIZATION</code> for table employees.</p>
</li>
<li>
<p>Select contents of table employees to a flat file.</p>
</li>
<li>
<p>Rename table employees to employees_old.</p>
</li>
<li>
<p>Create table employees with the same shape as employees_old.</p>
</li>
<li>
<p>Run SQL*Loader using conventional path.</p>
</li>
<li>
<p>Call <code>DBMS_MVIEW.END_TABLE_REORGANIZATION</code> for new table employees.</p>
</li>
</ol>
<div class="infobox-note">
<p class="notep1">Caution:</p>
When a table is renamed, its associated PL/SQL triggers are also adjusted to the new name of the table.</div>
<p>Ensure that no transaction is issued against the reorganized table between calling <code>BEGIN_TABLE_REORGANIZATION</code> and <code>END_TABLE_REORGANIZATION</code>.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink ARPLS027" href="../../appdev.112/e40758/d_mview.htm#ARPLS027"><span class="italic">Oracle Database PL/SQL Packages and Types Reference</span></a> for more information about the <code>DBMS_MVIEW</code> package</div>
</div>
<!-- class="sect4" --></div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="i20013"></a>
<div id="REPMA415" class="sect2">
<h3 class="sect2">Dropping a Materialized View Log<a id="sthref729"></a><a id="sthref730"></a></h3>
<p>You can delete a materialized view log regardless of its master or any existing materialized views. For example, you might decide to drop a materialized view log if one of the following conditions is true:</p>
<ul>
<li>
<p>All materialized views of a master have been dropped.</p>
</li>
<li>
<p>All materialized views of a master are to be refreshed using complete refresh, not fast refresh.</p>
</li>
<li>
<p>A master no longer supports materialized views that require fast refreshes.</p>
</li>
</ul>
<p>Here, a master can be a master table or a master materialized view. To delete a materialized view log, execute the <code>DROP</code> <code>MATERIALIZED</code> <code>VIEW</code> <code>LOG</code> statement in SQL*Plus. For example, the following statement deletes the materialized view log for a table named <code>customers</code> in the <code>sales</code> schema:</p>
<pre>
DROP MATERIALIZED VIEW LOG ON hr.employees;
</pre>
<p>Only the owner of the master or a user with the <code>DROP</code> <code>ANY</code> <code>TABLE</code> system privilege can drop a materialized view log.</p>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="i30332"></a>
<div id="REPMA416" class="sect1">
<h2 class="sect1">Performing an Offline Instantiation of a Materialized View Site Using Export/Import<a id="sthref731"></a><a id="sthref732"></a></h2>
<p>Adding a new materialized view site to your replication environment can cause network traffic. The network traffic is caused by propagating the entire contents of tables or materialized views through the network to the new materialized view site.</p>
<p>To minimize such network traffic, you can add a new materialized view site using offline instantiation procedure. With offline instantiation, you can create a new materialized view group at a materialized view site. Offline instantiation uses of Oracle's Export and Import utilities, which allow you to create an export file and transfer the data to the new site through a storage medium, such as CD-ROM, tape, and so on. Offline instantiation is especially useful for materialized views, because the target computer could be a laptop using a modem connection.</p>
<p>The following script performs an offline instantiation for a new materialized view group at a new materialized view site. The materialized view group is based on an existing master group at a master site. Meet the following requirements to complete these actions:</p>
<p><span class="bold">Executed As</span>:</p>
<ul>
<li>
<p>Replication Administrator at Master Site</p>
</li>
<li>
<p>Materialized View Administrator at New Materialized View Site</p>
</li>
</ul>
<p><span class="bold">Executed At</span>:</p>
<ul>
<li>
<p>Master Site for Target Materialized View Site</p>
</li>
<li>
<p>New Materialized View Site</p>
</li>
</ul>
<p><span class="bold">Replication Status</span>: Normal</p>
<p><span class="bold">Materialized View Site</span>:</p>
<ul>
<li>
<p>Set up materialized view site. In this example, the materialized view site is <code>mview.example.com</code> and the master site is <code>orc1.example.com</code>.</p>
</li>
<li>
<p>Ensure that the appropriate schema has been created before the offline instantiation of your materialized view site.</p>
</li>
<li>
<p>Create proxy users at the master site if they do not exist.</p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p>For more information about setting up a master site and creating proxy users at a master site, see <a href="rarrepsite.htm#i10539">"Setting Up Master Sites"</a></p>
</li>
<li>
<p>For more information about setting up materialized view sites, see <a href="rarrepsite.htm#i18551">"Setting Up Materialized View Sites"</a></p>
</li>
</ul>
</div>
<p>Complete the following steps to set up a materialized view site named <code>mview.example.com</code>.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
If you are viewing this document online, then you can copy the text from the "BEGINNING OF SCRIPT" line after this note to the "END OF SCRIPT" line into a text editor and then edit the text to create a script for your environment.</div>
<pre>
<a id="i36739"></a>
/************************ BEGINNING OF SCRIPT *********************************
</pre>
<dl>
<dd><a id="REPMA1293"></a><a id="sthref733"></a></dd>
<dt class="seghead">Step 1&nbsp;&nbsp;&nbsp;Connect to the master site as the replication administrator.</dt>
<dd>
<pre>
*/
</pre>
<pre>
SET ECHO ON

SPOOL offline.out

CONNECT repadmin@orc1.example.com

/*
</pre></dd>
<dd><a id="REPMA1294"></a><a id="sthref734"></a></dd>
<dt class="seghead">Step 2&nbsp;&nbsp;&nbsp;Create the necessary materialized view logs, if they do not exist.</dt>
<dd>
<p>If materialized view logs do not exist for the relevant master tables, then create them at the master site.</p>
<pre>
*/

CREATE MATERIALIZED VIEW LOG ON hr.countries;
CREATE MATERIALIZED VIEW LOG ON hr.departments;
CREATE MATERIALIZED VIEW LOG ON hr.employees;
CREATE MATERIALIZED VIEW LOG ON hr.jobs;
CREATE MATERIALIZED VIEW LOG ON hr.job_history;
CREATE MATERIALIZED VIEW LOG ON hr.locations;
CREATE MATERIALIZED VIEW LOG ON hr.regions;

/*
</pre></dd>
<dd><a id="REPMA1295"></a><a id="CHDFDICF"></a></dd>
<dt class="seghead">Step 3&nbsp;&nbsp;&nbsp;Create a temporary schema at the master site for the materialized views.</dt>
<dd>
<p>To prepare materialized views for export, you must create the schema that contains the replicated objects.</p>
<p>In this example, create a temporary schema <code>temp_schema</code>.</p>
<pre>
*/

CONNECT system@orc1.example.com

CREATE TABLESPACE offline_mview
 DATAFILE 'offline_mview.dbf' SIZE 10M AUTOEXTEND ON
 EXTENT MANAGEMENT LOCAL AUTOALLOCATE;

CREATE TEMPORARY TABLESPACE offline_temp_mview
 TEMPFILE 'offline_temp_mview.dbf' SIZE 5M AUTOEXTEND ON;

ACCEPT password PROMPT 'Enter password for user: ' HIDE

CREATE USER temp_schema IDENTIFIED BY &amp;password;

ALTER USER temp_schema DEFAULT TABLESPACE offline_mview
              QUOTA UNLIMITED ON offline_mview;

ALTER USER temp_schema TEMPORARY TABLESPACE offline_temp_mview;

GRANT ALTER SESSION, CREATE CLUSTER, CREATE DATABASE LINK, CREATE SEQUENCE,
  CREATE SESSION, CREATE SYNONYM, CREATE TABLE, CREATE VIEW, CREATE INDEXTYPE, 
  CREATE OPERATOR, CREATE PROCEDURE, CREATE TRIGGER, CREATE TYPE, 
  CREATE MATERIALIZED VIEW, SELECT ANY TABLE
TO temp_schema;

CONNECT temp_schema@orc1.example.com;

/*
</pre></dd>
<dd><a id="REPMA1296"></a><a id="CHDECCIE"></a></dd>
<dt class="seghead">Step 4&nbsp;&nbsp;&nbsp;Create temporary materialized views at the master site in the separate schema you created in Step <a href="#CHDFDICF">3</a>.</dt>
<dd>
<p>These materialized views contain the data that you transfer to your new materialized view site using the Export utility.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
Ensure that the <code>SELECT</code> statements include the database link. In this example, the database link is <code>orc1.example.com</code>.</div>
<pre>
*/

CREATE MATERIALIZED VIEW temp_schema.countries
      REFRESH FAST WITH PRIMARY KEY FOR UPDATE AS SELECT *
      FROM hr.countries@orc1.example.com;

CREATE MATERIALIZED VIEW temp_schema.departments 
      REFRESH FAST WITH PRIMARY KEY FOR UPDATE AS SELECT *
      FROM hr.departments@orc1.example.com;

CREATE MATERIALIZED VIEW temp_schema.employees 
      REFRESH FAST WITH PRIMARY KEY FOR UPDATE AS SELECT *
      FROM hr.employees@orc1.example.com;

CREATE MATERIALIZED VIEW temp_schema.jobs 
      REFRESH FAST WITH PRIMARY KEY FOR UPDATE AS SELECT *
      FROM hr.jobs@orc1.example.com;

CREATE MATERIALIZED VIEW temp_schema.job_history 
      REFRESH FAST WITH PRIMARY KEY FOR UPDATE AS SELECT *
      FROM hr.job_history@orc1.example.com;

CREATE MATERIALIZED VIEW temp_schema.locations 
      REFRESH FAST WITH PRIMARY KEY FOR UPDATE AS SELECT *
      FROM hr.locations@orc1.example.com;

CREATE MATERIALIZED VIEW temp_schema.regions 
      REFRESH FAST WITH PRIMARY KEY FOR UPDATE AS SELECT *
      FROM hr.regions@orc1.example.com;

/*
</pre></dd>
<dd><a id="REPMA1297"></a><a id="CHDJHCHA"></a></dd>
<dt class="seghead">Step 5&nbsp;&nbsp;&nbsp;Create a directory object at each database.</dt>
<dd>
<p>Each database involved in this operation must have a directory object to hold the Data Pump dump file, and the user who will perform the export or import must have <code>READ</code> and <code>WRITE</code> privileges on this directory object. In this example, a Data Pump export is performed at the master site, and a Data Pump import is performed at the materialized view site.</p>
<p>While connected in SQL*Plus to a database as an administrative user who can create directory objects using the SQL statement <code>CREATE</code> <code>DIRECTORY</code>, create a directory object to hold the Data Pump dump file and log files. For example:</p>
<pre>
*/

CONNECT system@orc1.example.com

CREATE DIRECTORY DPUMP_DIR AS '/usr/dpump_dir';

CONNECT system@mview.example.com

CREATE DIRECTORY DPUMP_DIR AS '/usr/dpump_dir';

/*
</pre>
<p>Ensure that you complete these actions at both databases involved in the operation. In this example, <code>SYSTEM</code> user creates the directory objects and performs all exports and imports. If a user who does not own the directory object will perform the export or import, then grant the user <code>READ</code> and <code>WRITE</code> privileges on the directory object.</p>
</dd>
<dd><a id="REPMA1298"></a><a id="sthref735"></a></dd>
<dt class="seghead">Step 6&nbsp;&nbsp;&nbsp;Perform a schema-level export of the schema containing the materialized views.</dt>
<dd>
<p>On a command line, perform the export that will contain all data and metadata for the materialized views. This example connects as the <code>SYSTEM</code> user. The following is an example Data Pump export command:</p>
<pre>
expdp system SCHEMAS=temp_schema DIRECTORY=DPUMP_DIR 
DUMPFILE=temp_schema.dmp
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink SUTIL200" href="../../server.112/e22490/dp_export.htm#SUTIL200"><span class="italic">Oracle Database Utilities</span></a> for information about performing a Data Pump export</div>
<pre>
*/

PAUSE Press &lt;RETURN&gt; to continue when the export is complete.

/*
</pre></dd>
<dd><a id="REPMA1299"></a><a id="sthref736"></a></dd>
<dt class="seghead">Step 7&nbsp;&nbsp;&nbsp;Connect to the new materialized view site as SYSTEM user.</dt>
<dd>
<pre>
*/
</pre>
<pre>
CONNECT system@mview.example.com

/*
</pre></dd>
<dd><a id="REPMA1300"></a><a id="sthref737"></a></dd>
<dt class="seghead">Step 8&nbsp;&nbsp;&nbsp;Drop the hr User</dt>
<dd>
<p>This example creates the materialized views in the <code>hr</code> schema at the materialized view site. This schema is created when Oracle is installed. This step drops the schema, but the schema will be re-created and populated with materialized views later in this example.</p>
<pre>
*/

DROP USER hr CASCADE;

/*
</pre></dd>
<dd><a id="REPMA1301"></a><a id="CHDGICCD"></a></dd>
<dt class="seghead">Step 9&nbsp;&nbsp;&nbsp;Create necessary schema and database link at the materialized view site, if they do not exist.</dt>
<dd>
<p>Before you perform the offline instantiation of your materialized views, create the schema that will contain the materialized views at the new materialized view site and the database link from the materialized view site to the master site. The materialized views must be in the same schema that contains the master objects at the master site. If the schema exists, then grant the necessary privileges and create the database link.</p>
<pre>
*/

CREATE TABLESPACE demo_mview
 DATAFILE 'demo_mview.dbf' SIZE 10M AUTOEXTEND ON
 EXTENT MANAGEMENT LOCAL AUTOALLOCATE;

CREATE TEMPORARY TABLESPACE temp_mview
 TEMPFILE 'temp_mview.dbf' SIZE 5M AUTOEXTEND ON;

CREATE USER hr IDENTIFIED BY &amp;password;

ALTER USER hr DEFAULT TABLESPACE demo_mview
              QUOTA UNLIMITED ON demo_mview;

ALTER USER hr TEMPORARY TABLESPACE temp_mview;

GRANT 
  CREATE SESSION, 
  CREATE TABLE, 
  CREATE PROCEDURE, 
  CREATE SEQUENCE, 
  CREATE TRIGGER, 
  CREATE VIEW, 
  CREATE SYNONYM, 
  ALTER SESSION,
  CREATE MATERIALIZED VIEW,
  ALTER ANY MATERIALIZED VIEW,
  CREATE DATABASE LINK
TO hr;

CONNECT hr@mview.example.com

CREATE DATABASE LINK orc1.example.com CONNECT TO hr IDENTIFIED by &amp;password;

/*
</pre></dd>
<dd><a id="REPMA1302"></a><a id="CHDEIEJH"></a></dd>
<dt class="seghead">Step 10&nbsp;&nbsp;&nbsp;Connect to the new materialized view site as the materialized view administrator.</dt>
<dd>
<pre>
*/
</pre>
<pre>
CONNECT mviewadmin@mview.example.com

/*
</pre></dd>
<dd><a id="REPMA1303"></a><a id="sthref738"></a></dd>
<dt class="seghead">Step 11&nbsp;&nbsp;&nbsp;Create an empty materialized view group.</dt>
<dd>
<p>Run the <code>DBMS_REPCAT.CREATE_MVIEW_REPGROUP</code> procedure at the new materialized view site to create an empty materialized view group into which you will add your materialized views.</p>
<pre>
*/

BEGIN
   <a href="rarrcatpac.htm#i106989">DBMS_REPCAT.CREATE_MVIEW_REPGROUP (</a><a id="sthref739"></a><a id="sthref740"></a>
      gname            =&gt; 'hr_repg',
      master           =&gt; 'orc1.example.com',
      propagation_mode =&gt; 'ASYNCHRONOUS');
END;
/

/*
</pre></dd>
<dd><a id="REPMA1304"></a><a id="CHDFFHGJ"></a></dd>
<dt class="seghead">Step 12&nbsp;&nbsp;&nbsp;Create an empty refresh group.</dt>
<dd>
<p>All materialized views that are added to a particular refresh group are refreshed at the same time. This ensures transactional consistency between the related materialized views in the refresh group.</p>
<pre>
*/

BEGIN<a id="sthref741"></a><a id="sthref742"></a>
   <a href="rarrefreshpac.htm#i94079">DBMS_REFRESH.MAKE (</a>
      name =&gt; 'mviewadmin.hr_refg',
      list =&gt; '', 
      next_date =&gt; SYSDATE, 
      interval =&gt; 'SYSDATE + 1/24',
      implicit_destroy =&gt; FALSE, 
      rollback_seg =&gt; '',
      push_deferred_rpc =&gt; TRUE, 
      refresh_after_errors =&gt; FALSE);
END;
/

/*
</pre></dd>
<dd><a id="REPMA1305"></a><a id="sthref743"></a></dd>
<dt class="seghead">Step 13&nbsp;&nbsp;&nbsp;In a separate terminal window, transfer the export dump file to the new materialized view site.</dt>
<dd>
<p>Using the <code>DBMS_FILE_TRANSFER</code> package, FTP or some other method, transfer the export dump file to the new materialized view site.</p>
<pre>
*/ 

PAUSE Press &lt;RETURN&gt; to continue after transferring the dump file. 

/*
</pre></dd>
<dd><a id="REPMA1306"></a><a id="sthref744"></a></dd>
<dt class="seghead">Step 14&nbsp;&nbsp;&nbsp;In a separate terminal window, import the materialized views to the owner at the new materialized view site.</dt>
<dd>
<p>On a command line, perform the import of the file that you exported in Step <a href="#CHDJHCHA">5</a>. This example connects as the <code>SYSTEM</code> user.</p>
<p>If you use Data Pump, then ensure that you import your data using the <code>REMAP_SCHEMA</code> parameter to import the data from the temporary user you created at the master site to the owner of the materialized views at the materialized view site. In this example, the temporary user at the master site is <code>temp_schema</code> and the materialized view owner at the materialized view site is <code>hr</code>.</p>
<p>Also, if you use Data Pump, then you can use the <code>REMAP_TABLESPACE</code> parameter if the tablespace is different at the master site and the materialized view site. In this example, the tablespace at the master site is <code>offline_mview</code> (created in Step <a href="#CHDFDICF">3</a>) and the tablespace at the materialized view site is <code>demo_mview</code> (created in Step <a href="#CHDGICCD">9</a>).</p>
<p>The following is an example import command:</p>
<pre>
impdp system DIRECTORY=DPUMP_DIR DUMPFILE=temp_schema.dmp 
REMAP_SCHEMA=temp_schema:hr REMAP_TABLESPACE=offline_mview:demo_mview
</pre>
<p>Only users with the <code>DBA</code> role or the <code>IMP_FULL_DATABASE</code> role can import using the <code>REMAP_SCHEMA</code> parameter.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink SUTIL300" href="../../server.112/e22490/dp_import.htm#SUTIL300"><span class="italic">Oracle Database Utilities</span></a> for information about performing a Data Pump import</div>
<pre>
*/

PAUSE Press &lt;RETURN&gt; to continue when the import is complete.

/*
</pre></dd>
<dd><a id="REPMA1307"></a><a id="sthref745"></a></dd>
<dt class="seghead">Step 15&nbsp;&nbsp;&nbsp;Add materialized views to the materialized view group.</dt>
<dd>
<p>Execute the <code>DBMS_REPCAT.CREATE_MVIEW_REPOBJECT</code> procedure to add the materialized views to the materialized view group you created in Step <a href="#CHDGICCD">9</a>.</p>
<pre>
*/

BEGIN
   <a id="sthref746"></a><a id="sthref747"></a><a href="rarrcatpac.htm#i107165">DBMS_REPCAT.CREATE_MVIEW_REPOBJECT (</a>
      gname             =&gt; 'hr_repg',
      sname             =&gt; 'hr',
      oname             =&gt; 'countries',
      type              =&gt; 'SNAPSHOT',
      min_communication =&gt; TRUE);
END;
/

BEGIN
   <a id="sthref748"></a><a href="rarrcatpac.htm#i107165">DBMS_REPCAT.CREATE_MVIEW_REPOBJECT (</a>
      gname             =&gt; 'hr_repg',
      sname             =&gt; 'hr',
      oname             =&gt; 'departments',
      type              =&gt; 'SNAPSHOT',
      min_communication =&gt; TRUE);
END;
/

BEGIN
   <a id="sthref749"></a><a href="rarrcatpac.htm#i107165">DBMS_REPCAT.CREATE_MVIEW_REPOBJECT (</a>
      gname             =&gt; 'hr_repg',
      sname             =&gt; 'hr',
      oname             =&gt; 'employees',
      type              =&gt; 'SNAPSHOT',
      min_communication =&gt; TRUE);
END;
/

BEGIN
   <a id="sthref750"></a><a href="rarrcatpac.htm#i107165">DBMS_REPCAT.CREATE_MVIEW_REPOBJECT (</a>
      gname             =&gt; 'hr_repg',
      sname             =&gt; 'hr',
      oname             =&gt; 'jobs',
      type              =&gt; 'SNAPSHOT',
      min_communication =&gt; TRUE);
END;
/

BEGIN
   <a id="sthref751"></a><a href="rarrcatpac.htm#i107165">DBMS_REPCAT.CREATE_MVIEW_REPOBJECT (</a>
      gname             =&gt; 'hr_repg',
      sname             =&gt; 'hr',
      oname             =&gt; 'job_history',
      type              =&gt; 'SNAPSHOT',
      min_communication =&gt; TRUE);
END;
/

BEGIN
   <a id="sthref752"></a><a id="sthref753"></a><a href="rarrcatpac.htm#i107165">DBMS_REPCAT.CREATE_MVIEW_REPOBJECT (</a>
      gname             =&gt; 'hr_repg',
      sname             =&gt; 'hr',
      oname             =&gt; 'locations',
      type              =&gt; 'SNAPSHOT',
      min_communication =&gt; TRUE);
END;
/

BEGIN
   <a id="sthref754"></a><a href="rarrcatpac.htm#i107165">DBMS_REPCAT.CREATE_MVIEW_REPOBJECT (</a>
      gname             =&gt; 'hr_repg',
      sname             =&gt; 'hr',
      oname             =&gt; 'regions',
      type              =&gt; 'SNAPSHOT',
      min_communication =&gt; TRUE);
END;
/

/*
</pre></dd>
<dd><a id="REPMA1308"></a><a id="sthref755"></a></dd>
<dt class="seghead">Step 16&nbsp;&nbsp;&nbsp;Add the materialized views to the refresh group<a id="sthref756"></a>.</dt>
<dd>
<p>All of the materialized view group objects that you add to the refresh group are refreshed at the same time to preserve referential integrity between related materialized views. Execute the <code>DBMS_REFRESH.ADD</code> procedure to add the materialized views to the refresh group you created in Step <a href="#CHDFFHGJ">12</a>.</p>
<pre>
*/

BEGIN
   <a href="rarrefreshpac.htm#i93894">DBMS_REFRESH.ADD (</a><a id="sthref757"></a><a id="sthref758"></a>
      name =&gt; 'mviewadmin.hr_refg',
      list =&gt; 'hr.countries',
      lax =&gt; TRUE);
END;
/

BEGIN
   <a href="rarrefreshpac.htm#i93894">DBMS_REFRESH.ADD (</a>
      name =&gt; 'mviewadmin.hr_refg',
      list =&gt; 'hr.departments',
      lax =&gt; TRUE);
END;
/

BEGIN
   <a href="rarrefreshpac.htm#i93894">DBMS_REFRESH.ADD (</a>
      name =&gt; 'mviewadmin.hr_refg',
      list =&gt; 'hr.employees',
      lax =&gt; TRUE);
END;
/

BEGIN
   <a href="rarrefreshpac.htm#i93894">DBMS_REFRESH.ADD (</a>
      name =&gt; 'mviewadmin.hr_refg',
      list =&gt; 'hr.jobs',
      lax =&gt; TRUE);
END;
/

BEGIN
   <a href="rarrefreshpac.htm#i93894">DBMS_REFRESH.ADD (</a>
      name =&gt; 'mviewadmin.hr_refg',
      list =&gt; 'hr.job_history',
      lax =&gt; TRUE);
END;
/

BEGIN
   <a href="rarrefreshpac.htm#i93894">DBMS_REFRESH.ADD (</a>
      name =&gt; 'mviewadmin.hr_refg',
      list =&gt; 'hr.locations',
      lax =&gt; TRUE);
END;
/

BEGIN
   <a href="rarrefreshpac.htm#i93894">DBMS_REFRESH.ADD (</a>
      name =&gt; 'mviewadmin.hr_refg',
      list =&gt; 'hr.regions',
      lax =&gt; TRUE);
END;
/

/*
</pre></dd>
<dd><a id="REPMA1309"></a><a id="sthref759"></a></dd>
<dt class="seghead">Step 17&nbsp;&nbsp;&nbsp;Refresh materialized views to register them at master site.<a id="sthref760"></a><a id="sthref761"></a><a id="sthref762"></a><a id="sthref763"></a></dt>
<dd>
<p>In addition to retrieving the latest changes from the master tables, refreshing the materialized views at the new materialized view site registers the offline instantiated materialized views at the target master site.</p>
<pre>
*/

EXECUTE <a href="rarrefreshpac.htm#i94192">DBMS_REFRESH.REFRESH (</a>'hr_refg');

/*
</pre></dd>
<dd><a id="REPMA1310"></a><a id="sthref764"></a></dd>
<dt class="seghead">Step 18&nbsp;&nbsp;&nbsp;Connect to the master site as SYSTEM user.</dt>
<dd>
<pre>
*/
</pre>
<pre>
CONNECT system@orc1.example.com

/*
</pre></dd>
<dd><a id="REPMA1311"></a><a id="sthref765"></a></dd>
<dt class="seghead">Step 19&nbsp;&nbsp;&nbsp;Drop the temporary schema to delete the temporary materialized views you created in Step <a href="#CHDECCIE">4</a> at the master site.</dt>
<dd>
<pre>
*/
</pre>
<pre>
DROP USER temp_schema CASCADE;

SET ECHO OFF

SPOOL OFF

<a id="i37410"></a>/************************* END OF SCRIPT **********************************/
</pre></dd>
</dl>
</div>
<!-- class="sect1" -->
<a id="i34143"></a>
<div id="REPMA105" class="sect1">
<h2 class="sect1">Using a Group Owner<a id="sthref766"></a><a id="sthref767"></a><a id="sthref768"></a><a id="sthref769"></a><a id="sthref770"></a><a id="sthref771"></a> for a Materialized View Group</h2>
<p>Specifying a group owner when you define a new materialized view group and its related objects enables you to create multiple materialized view groups based on the same replication group at a single materialized view site. Also, specifying group owners enables you to create multiple materialized view groups that are based on the same replication group at a master site or master materialized view site. You accomplish this by creating the materialized view groups under different schemas at the materialized view site. This example uses the schemas <code>bob</code> and <code>jane</code> as group owners and assumes that these schemas exist at the materialized view site.</p>
<p><span class="bold">Executed As</span>:</p>
<ul>
<li>
<p>Materialized View Administrator at New Materialized View Site</p>
</li>
</ul>
<p><span class="bold">Executed At</span>:</p>
<ul>
<li>
<p>Materialized View Site</p>
</li>
</ul>
<p><span class="bold">Replication Status</span>: Normal</p>
<p><span class="bold">Materialized View Site</span>:</p>
<ul>
<li>
<p>Set up materialized view site. In this example, the materialized view site is <code>mv1.example.com</code> and the master site is <code>orc1.example.com</code>.</p>
</li>
<li>
<p>Create proxy users at the master site if they do not exist.</p>
</li>
<li>
<p>Create materialized view logs for the tables in the <code>hr</code> schema at the master site if they do not exist.</p>
</li>
</ul>
<p>Complete the following steps to use a group owner.</p>
<div class="infobox-note">
<p class="notep1"><span class="bold">Note</span>:</p>
If you are viewing this document online, then you can copy the text from the "BEGINNING OF SCRIPT" line after this note to the "END OF SCRIPT" line into a text editor and then edit the text to create a script for your environment.</div>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a class="olink REPLN105" href="../../server.112/e10706/repmview.htm#REPLN105"><span class="variable">Oracle Database Advanced Replication</span></a> for a complete description of using group owners and the advantages of using multiple data sets</p>
</li>
<li>
<p>For more information about setting up a master site and creating proxy users at a master site, see <a href="rarrepsite.htm#i10539">"Setting Up Master Sites"</a></p>
</li>
<li>
<p>For more information about setting up materialized view sites, see <a href="rarrepsite.htm#i18551">"Setting Up Materialized View Sites"</a></p>
</li>
</ul>
</div>
<pre>
/************************* BEGINNING OF SCRIPT ******************************
</pre>
<dl>
<dd><a id="REPMA1312"></a><a id="sthref772"></a></dd>
<dt class="seghead">Step 1&nbsp;&nbsp;&nbsp;Create a database link from the hr schema to the master site</dt>
<dd>
<p>Before building your materialized view group, you must ensure that the replicated schema exists at the remote materialized view site and that the necessary database links have been created.</p>
<p>In this example, if the <code>hr</code> schema does not exist, then create the schema. If the <code>hr</code> schema exists at the materialized view site, then grant any necessary privileges.</p>
<pre>
*/

CONNECT system@mv1.example.com

CREATE TABLESPACE demo_mv1
 DATAFILE 'demo_mv1.dbf' SIZE 10M AUTOEXTEND ON
 EXTENT MANAGEMENT LOCAL AUTOALLOCATE;

CREATE TEMPORARY TABLESPACE temp_mv1
 TEMPFILE 'temp_mv1.dbf' SIZE 5M AUTOEXTEND ON;

ACCEPT password PROMPT 'Enter password for user: ' HIDE

CREATE USER hr IDENTIFIED BY &amp;password;

ALTER USER hr DEFAULT TABLESPACE demo_mv1
              QUOTA UNLIMITED ON demo_mv1;

ALTER USER hr TEMPORARY TABLESPACE temp_mv1;

GRANT 
  CREATE SESSION, 
  CREATE TABLE, 
  CREATE PROCEDURE, 
  CREATE SEQUENCE, 
  CREATE TRIGGER, 
  CREATE VIEW, 
  CREATE SYNONYM, 
  ALTER SESSION,
  CREATE MATERIALIZED VIEW,
  ALTER ANY MATERIALIZED VIEW,
  CREATE DATABASE LINK
 TO hr;

/*
</pre>
<pre>
</pre>
<p><a id="i38981"></a>If it does not exist, then create the database link for the replicated schema.<a id="sthref773"></a><a id="sthref774"></a></p>
<p>Before building your materialized view group, you must ensure that the necessary database links exist for the replicated schema. The owner of the materialized views needs a database link pointing to the <code>proxy_refresher</code> that was created when the master site was set up.</p>
<pre>
*/

SET ECHO ON

SPOOL mv_group_owner.out

CONNECT hr@mv1.example.com

CREATE DATABASE LINK orc1.example.com 
   CONNECT TO proxy_refresher IDENTIFIED BY &amp;password;

/*
</pre></dd>
<dd><a id="REPMA1313"></a><a id="sthref775"></a></dd>
<dt class="seghead">Step 2&nbsp;&nbsp;&nbsp;Connect to the materialized view site as the materialized view administrator.</dt>
<dd>
<pre>
*/
</pre>
<pre>
CONNECT mviewadmin@mv1.example.com

/*
</pre></dd>
<dd><a id="REPMA1314"></a><a id="sthref776"></a></dd>
<dt class="seghead">Step 3&nbsp;&nbsp;&nbsp;Create materialized view group with group owner (gowner) bob using the CREATE_MVIEW_REPGROUP procedure.</dt>
<dd>
<p>The replication group that you specify in the <code>gname</code> parameter must match the name of the replication group that you are replicating at the target master site or master materialized view site. The <code>gowner</code> parameter enables you to specify an additional identifier that lets you create multiple materialized view groups based on the same replication group at the same materialized view site.</p>
<p>In this example, materialized view groups are created for the group owners <code>bob</code> and <code>jane</code>, and these two materialized view groups are based on the same replication group.</p>
<pre>
*/

BEGIN
   <a href="rarrcatpac.htm#i106989">DBMS_REPCAT.CREATE_MVIEW_REPGROUP (</a><a id="sthref777"></a><a id="sthref778"></a>
      gname =&gt; 'hr_repg',
      master =&gt; 'orc1.example.com',
      propagation_mode =&gt; 'ASYNCHRONOUS',
      gowner =&gt; 'bob');
END;
/

BEGIN
   <a href="rarrcatpac.htm#i106989">DBMS_REPCAT.CREATE_MVIEW_REPGROUP (</a>
      gname =&gt; 'hr_repg',
      master =&gt; 'orc1.example.com',
      propagation_mode =&gt; 'ASYNCHRONOUS',
      gowner =&gt; 'jane');
END;
/

/*
</pre></dd>
<dd><a id="REPMA1315"></a><a id="sthref779"></a></dd>
<dt class="seghead">Step 4&nbsp;&nbsp;&nbsp;Create the materialized views owned by bob.</dt>
<dd>
<p>The <code>gowner</code> value used when creating your materialized view objects must match the <code>gowner</code> value specified when you created the materialized view group in the previous procedures. After creating the materialized view groups, you can create materialized views based on the same master in the <code>hr_repg</code> materialized view group owned by <code>bob</code> and <code>jane</code>. This example assumes that these users exist.</p>
<div class="infobox-note">
<p class="notep1">Caution:</p>
Each object must have a unique name. When using a <code>gowner</code> to create multiple materialized view groups, duplicate object names could become a problem. To avoid any object-naming conflicts, you might want to append the <code>gowner</code> value to the end of the object name that you create, as illustrated in the following procedures (that is, <code>create</code> <code>materialized</code> <code>view</code> <code>hr.countries_bob</code>). Such a naming method ensures that you do not create any objects with conflicting names.</div>
<p>Whenever you create a materialized view, always specify the schema name of the table owner in the query for the materialized view. In the following examples, <code>hr</code> is specified as the owner of the table in each query.</p>
<pre>
*/

CREATE MATERIALIZED VIEW hr.countries_bob 
  REFRESH FAST WITH PRIMARY KEY FOR UPDATE 
  AS SELECT * FROM hr.countries@orc1.example.com;

CREATE MATERIALIZED VIEW hr.departments_bob 
  REFRESH FAST WITH PRIMARY KEY FOR UPDATE 
  AS SELECT * FROM hr.departments@orc1.example.com;

CREATE MATERIALIZED VIEW hr.employees_bob 
  REFRESH FAST WITH PRIMARY KEY FOR UPDATE 
  AS SELECT * FROM hr.employees@orc1.example.com;

CREATE MATERIALIZED VIEW hr.jobs_bob 
  REFRESH FAST WITH PRIMARY KEY FOR UPDATE 
  AS SELECT * FROM hr.jobs@orc1.example.com;

CREATE MATERIALIZED VIEW hr.job_history_bob 
  REFRESH FAST WITH PRIMARY KEY FOR UPDATE 
  AS SELECT * FROM hr.job_history@orc1.example.com;

CREATE MATERIALIZED VIEW hr.locations_bob 
  REFRESH FAST WITH PRIMARY KEY FOR UPDATE 
  AS SELECT * FROM hr.locations@orc1.example.com;

CREATE MATERIALIZED VIEW hr.regions_bob 
  REFRESH FAST WITH PRIMARY KEY FOR UPDATE 
  AS SELECT * FROM hr.regions@orc1.example.com;

/*
</pre></dd>
<dd><a id="REPMA1316"></a><a id="sthref780"></a></dd>
<dt class="seghead">Step 5&nbsp;&nbsp;&nbsp;Create the materialized views owned by jane.</dt>
<dd>
<pre>
*/
</pre>
<pre>
CREATE MATERIALIZED VIEW hr.departments_jane 
  REFRESH FAST WITH PRIMARY KEY FOR UPDATE 
  AS SELECT * FROM hr.departments@orc1.example.com;

CREATE MATERIALIZED VIEW hr.employees_jane 
  REFRESH FAST WITH PRIMARY KEY FOR UPDATE 
  AS SELECT * FROM hr.employees@orc1.example.com;

/*
</pre></dd>
<dd><a id="REPMA1317"></a><a id="sthref781"></a></dd>
<dt class="seghead">Step 6&nbsp;&nbsp;&nbsp;Add the materialized views owned by bob to the materialized view group<a id="sthref782"></a>.</dt>
<dd>
<pre>
*/
</pre>
<pre>
BEGIN
   <a href="rarrcatpac.htm#i107165">DBMS_REPCAT.CREATE_MVIEW_REPOBJECT (</a><a id="sthref783"></a><a id="sthref784"></a>
      gname =&gt; 'hr_repg',
      sname =&gt; 'hr',
      oname =&gt; 'countries_bob',
      type =&gt; 'SNAPSHOT',
      min_communication =&gt; TRUE,
      gowner =&gt; 'bob');
END;
/

BEGIN
   <a href="rarrcatpac.htm#i107165">DBMS_REPCAT.CREATE_MVIEW_REPOBJECT (</a>
      gname =&gt; 'hr_repg',
      sname =&gt; 'hr',
      oname =&gt; 'departments_bob',
      type =&gt; 'SNAPSHOT',
      min_communication =&gt; TRUE,
      gowner =&gt; 'bob');
END;
/

BEGIN
   <a href="rarrcatpac.htm#i107165">DBMS_REPCAT.CREATE_MVIEW_REPOBJECT (</a>
      gname =&gt; 'hr_repg',
      sname =&gt; 'hr',
      oname =&gt; 'employees_bob',
      type =&gt; 'SNAPSHOT',
      min_communication =&gt; TRUE,
      gowner =&gt; 'bob');
END;
/

BEGIN
   <a href="rarrcatpac.htm#i107165">DBMS_REPCAT.CREATE_MVIEW_REPOBJECT (</a>
      gname =&gt; 'hr_repg',
      sname =&gt; 'hr',
      oname =&gt; 'jobs_bob',
      type =&gt; 'SNAPSHOT',
      min_communication =&gt; TRUE,
      gowner =&gt; 'bob');
END;
/

BEGIN
   <a href="rarrcatpac.htm#i107165">DBMS_REPCAT.CREATE_MVIEW_REPOBJECT (</a>
      gname =&gt; 'hr_repg',
      sname =&gt; 'hr',
      oname =&gt; 'job_history_bob',
      type =&gt; 'SNAPSHOT',
      min_communication =&gt; TRUE,
      gowner =&gt; 'bob');
END;
/

BEGIN
   <a href="rarrcatpac.htm#i107165">DBMS_REPCAT.CREATE_MVIEW_REPOBJECT (</a>
      gname =&gt; 'hr_repg',
      sname =&gt; 'hr',
      oname =&gt; 'locations_bob',
      type =&gt; 'SNAPSHOT',
      min_communication =&gt; TRUE,
      gowner =&gt; 'bob');
END;
/

BEGIN
   <a href="rarrcatpac.htm#i107165">DBMS_REPCAT.CREATE_MVIEW_REPOBJECT (</a>
      gname =&gt; 'hr_repg',
      sname =&gt; 'hr',
      oname =&gt; 'regions_bob',
      type =&gt; 'SNAPSHOT',
      min_communication =&gt; TRUE,
      gowner =&gt; 'bob');
END;
/

/*
</pre></dd>
<dd><a id="REPMA1318"></a><a id="sthref785"></a></dd>
<dt class="seghead">Step 7&nbsp;&nbsp;&nbsp;Add the materialized views owned by jane to the materialized view group.</dt>
<dd>
<pre>
*/
</pre>
<pre>
BEGIN
   <a href="rarrcatpac.htm#i107165">DBMS_REPCAT.CREATE_MVIEW_REPOBJECT (</a>
      gname =&gt; 'hr_repg',
      sname =&gt; 'hr',
      oname =&gt; 'departments_jane',
      type =&gt; 'SNAPSHOT',
      min_communication =&gt; TRUE,
      gowner =&gt; 'jane');
END;
/

BEGIN
   <a href="rarrcatpac.htm#i107165">DBMS_REPCAT.CREATE_MVIEW_REPOBJECT (</a>
      gname =&gt; 'hr_repg',
      sname =&gt; 'hr',
      oname =&gt; 'employees_jane',
      type =&gt; 'SNAPSHOT',
      min_communication =&gt; TRUE,
      gowner =&gt; 'jane');
END;
/

SET ECHO OFF

SPOOL OFF

/*
</pre></dd>
<dd><a id="REPMA1319"></a><a id="sthref786"></a></dd>
<dt class="seghead">Step 8&nbsp;&nbsp;&nbsp;Add your materialized views to a refresh group.</dt>
<dd>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="rarmviewgroup.htm#g29265">Chapter 5, "Creating a Materialized View Group"</a> (Step <a href="rarmviewgroup.htm#CHDGBBJH">6</a>) for more information about adding materialized views to a refresh group</div>
<pre>
<a id="i34422"></a>
/************************* END OF SCRIPT **********************************/
</pre></dd>
</dl>
</div>
<!-- class="sect1" --></div>
<!-- class="chapter" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment1768">
<tr>
<td class="cellalignment1777">
<table class="cellalignment1773">
<tr>
<td class="cellalignment1772"><a href="rarmanmaster.htm"><img width="24" height="24" src="../../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment1772"><a href="rarmanage.htm"><img width="24" height="24" src="../../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;1996, 2013,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment1779">
<table class="cellalignment1771">
<tr>
<td class="cellalignment1772"><a href="../../index.htm"><img width="24" height="24" src="../../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment1772"><a href="../../nav/portal_booklist.htm"><img width="24" height="24" src="../../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment1772"><a href="toc.htm"><img width="24" height="24" src="../../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment1772"><a href="index.htm"><img width="24" height="24" src="../../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment1772"><a href="../../nav/mindx.htm"><img width="24" height="24" src="../../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment1772"><a href="../../dcommon/html/feedback.htm"><img width="24" height="24" src="../../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>
</body>
</html>
