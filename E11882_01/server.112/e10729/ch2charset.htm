<!DOCTYPE html>
<html lang="en" >
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1">
<meta charset="utf-8">
<title>Choosing a Character Set</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Version 5.1.2 Build 070" />
<meta name="dcterms.created" content="2013-07-05T0:14:25Z" />
<meta name="robots" content="all" />
<meta name="dcterms.title" content="Database Globalization Support Guide" />
<meta name="dcterms.identifier" content="E10729-08" />
<meta name="dcterms.isVersionOf" content="NLSPG" />
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;1996, 2013,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved." />
<link rel="Start" href="../../index.htm" title="Home" type="text/html" />
<link rel="Copyright" href="../../dcommon/html/cpyr.htm" title="Copyright" type="text/html" />

<script type="application/javascript"  src="../../dcommon/js/headfoot.js"></script>
<script type="application/javascript"  src="../../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html" />
<link rel="Index" href="index.htm" title="Index" type="text/html" />
<link rel="Glossary" href="glossary.htm" title="Glossary" type="text/html" />
<link rel="Prev" href="ch1overview.htm" title="Previous" type="text/html" />
<link rel="Next" href="ch3globenv.htm" title="Next" type="text/html" />
<link rel="alternate" href="../e10729.pdf" title="PDF version" type="application/pdf" />
<link rel="schema.dcterms" href="http://purl.org/dc/terms/" />
<link rel="stylesheet" href="../../dcommon/css/fusiondoc.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/header.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/footer.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/fonts.css">
<link rel="stylesheet" href="../../dcommon/css/foundation.css">
<link rel="stylesheet" href="../../dcommon/css/codemirror.css">
<link rel="stylesheet" type="text/css" title="Default" href="../../nav/css/html5.css">
<link rel="stylesheet" href="../../dcommon/css/respond-480-tablet.css">
<link rel="stylesheet" href="../../dcommon/css/respond-768-laptop.css">
<link rel="stylesheet" href="../../dcommon/css/respond-1140-deskop.css">
<script type="application/javascript" src="../../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">6/21</span> <!-- End Header --><a id="g1015066"></a><a id="NLSPG002"></a><a id="i1007681"></a>
<h1 class="chapter"><span class="secnum">2</span> Choosing a Character Set</h1>
<p>This chapter explains how to choose a character set. The following topics are included:</p>
<ul>
<li>
<p><a href="#i1005932">Character Set Encoding</a></p>
</li>
<li>
<p><a href="#i1006683">Length Semantics</a></p>
</li>
<li>
<p><a href="#i1006750">Choosing an Oracle Database Character Set</a></p>
</li>
<li>
<p><a href="#i1007203">Changing the Character Set After Database Creation</a></p>
</li>
<li>
<p><a href="#i1007228">Monolingual Database Scenario</a></p>
</li>
<li>
<p><a href="#i1007281">Multilingual Database Scenarios</a></p>
</li>
</ul>
<a id="i1005932"></a><a id="NLSPG157"></a>
<div class="sect1">
<h2 class="sect1">Character Set Encoding</h2>
<p>When computer systems <a id="sthref16"></a>process characters, they use numeric codes instead of the graphical representation of the character. For example, when the database stores the letter <code>A</code>, it actually stores a numeric code that the computer system interprets as the letter. These numeric codes are especially important in a global environment because of the potential need to convert data between different character sets.</p>
<p>This section discusses the following topics:</p>
<ul>
<li>
<p><a href="#i1005957">What is an Encoded Character Set?</a></p>
</li>
<li>
<p><a href="#i1006076">Which Characters Are Encoded?</a></p>
</li>
<li>
<p><a href="#i1006121">What Characters Does a Character Set Support?</a></p>
</li>
<li>
<p><a href="#i1006571">How are Characters Encoded?</a></p>
</li>
<li>
<p><a href="#i1006624">Naming Convention for Oracle Database Character Sets</a></p>
</li>
</ul>
<a id="i1005957"></a><a id="NLSPG158"></a>
<div class="sect2">
<h3 class="sect2">What is an Encoded Character Set?</h3>
<p>You specify an encoded character set when you create a database. Choosing a character set determines what languages can be represented in the database. It also affects:</p>
<ul>
<li>
<p>How you create the database schema</p>
</li>
<li>
<p>How you develop applications that process character data</p>
</li>
<li>
<p>How the database works with the operating system</p>
</li>
<li>
<p>Database performance</p>
</li>
<li>
<p>Storage required for storing character data</p>
</li>
</ul>
<p>A group of characters (for example, alphabetic characters, ideographs, symbols, punctuation marks, and control characters) can be encoded as a character set. An <span class="bold">encoded character set</span> assigns a unique numeric code to each character in the character set. The numeric codes are called <span class="bold"><a id="sthref17"></a>code points</span> or <span class="bold">encoded values</span>. <a href="#CIHDGBHD">Table 2-1</a> shows examples of characters that have been assigned a hexadecimal code value in the ASCII character set.</p>
<div class="tblformalmax">
<p class="titleintable"><a id="NLSPG701"></a><a id="sthref18"></a><a id="CIHDGBHD"></a>Table 2-1 Encoded Characters in the ASCII Character Set</p>
<table class="cellalignment1914" title="Encoded Characters in the ASCII Character Set " summary="This table is described in the preceding text" dir="ltr">
<thead>
<tr class="cellalignment1905">
<th class="cellalignment1915" id="r1c1-t2">Character</th>
<th class="cellalignment1915" id="r1c2-t2">Description</th>
<th class="cellalignment1915" id="r1c3-t2">Hexadecimal Code Value</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1905">
<td class="cellalignment1911" id="r2c1-t2" headers="r1c1-t2">
<p>!</p>
</td>
<td class="cellalignment1911" headers="r2c1-t2 r1c2-t2">
<p>Exclamation Mark</p>
</td>
<td class="cellalignment1911" headers="r2c1-t2 r1c3-t2">
<p>21</p>
</td>
</tr>
<tr class="cellalignment1905">
<td class="cellalignment1911" id="r3c1-t2" headers="r1c1-t2">
<p>#</p>
</td>
<td class="cellalignment1911" headers="r3c1-t2 r1c2-t2">
<p>Number Sign</p>
</td>
<td class="cellalignment1911" headers="r3c1-t2 r1c3-t2">
<p>23</p>
</td>
</tr>
<tr class="cellalignment1905">
<td class="cellalignment1911" id="r4c1-t2" headers="r1c1-t2">
<p>$</p>
</td>
<td class="cellalignment1911" headers="r4c1-t2 r1c2-t2">
<p>Dollar Sign</p>
</td>
<td class="cellalignment1911" headers="r4c1-t2 r1c3-t2">
<p>24</p>
</td>
</tr>
<tr class="cellalignment1905">
<td class="cellalignment1911" id="r5c1-t2" headers="r1c1-t2">
<p>1</p>
</td>
<td class="cellalignment1911" headers="r5c1-t2 r1c2-t2">
<p>Number 1</p>
</td>
<td class="cellalignment1911" headers="r5c1-t2 r1c3-t2">
<p>31</p>
</td>
</tr>
<tr class="cellalignment1905">
<td class="cellalignment1911" id="r6c1-t2" headers="r1c1-t2">
<p>2</p>
</td>
<td class="cellalignment1911" headers="r6c1-t2 r1c2-t2">
<p>Number 2</p>
</td>
<td class="cellalignment1911" headers="r6c1-t2 r1c3-t2">
<p>32</p>
</td>
</tr>
<tr class="cellalignment1905">
<td class="cellalignment1911" id="r7c1-t2" headers="r1c1-t2">
<p>3</p>
</td>
<td class="cellalignment1911" headers="r7c1-t2 r1c2-t2">
<p>Number 3</p>
</td>
<td class="cellalignment1911" headers="r7c1-t2 r1c3-t2">
<p>33</p>
</td>
</tr>
<tr class="cellalignment1905">
<td class="cellalignment1911" id="r8c1-t2" headers="r1c1-t2">
<p>A</p>
</td>
<td class="cellalignment1911" headers="r8c1-t2 r1c2-t2">
<p>Uppercase A</p>
</td>
<td class="cellalignment1911" headers="r8c1-t2 r1c3-t2">
<p>41</p>
</td>
</tr>
<tr class="cellalignment1905">
<td class="cellalignment1911" id="r9c1-t2" headers="r1c1-t2">
<p>B</p>
</td>
<td class="cellalignment1911" headers="r9c1-t2 r1c2-t2">
<p>Uppercase B</p>
</td>
<td class="cellalignment1911" headers="r9c1-t2 r1c3-t2">
<p>42</p>
</td>
</tr>
<tr class="cellalignment1905">
<td class="cellalignment1911" id="r10c1-t2" headers="r1c1-t2">
<p>C</p>
</td>
<td class="cellalignment1911" headers="r10c1-t2 r1c2-t2">
<p>Uppercase C</p>
</td>
<td class="cellalignment1911" headers="r10c1-t2 r1c3-t2">
<p>43</p>
</td>
</tr>
<tr class="cellalignment1905">
<td class="cellalignment1911" id="r11c1-t2" headers="r1c1-t2">
<p>a</p>
</td>
<td class="cellalignment1911" headers="r11c1-t2 r1c2-t2">
<p>Lowercase a</p>
</td>
<td class="cellalignment1911" headers="r11c1-t2 r1c3-t2">
<p>61</p>
</td>
</tr>
<tr class="cellalignment1905">
<td class="cellalignment1911" id="r12c1-t2" headers="r1c1-t2">
<p>b</p>
</td>
<td class="cellalignment1911" headers="r12c1-t2 r1c2-t2">
<p>Lowercase b</p>
</td>
<td class="cellalignment1911" headers="r12c1-t2 r1c3-t2">
<p>62</p>
</td>
</tr>
<tr class="cellalignment1905">
<td class="cellalignment1911" id="r13c1-t2" headers="r1c1-t2">
<p>c</p>
</td>
<td class="cellalignment1911" headers="r13c1-t2 r1c2-t2">
<p>Lowercase c</p>
</td>
<td class="cellalignment1911" headers="r13c1-t2 r1c3-t2">
<p>63</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformalmax" -->
<p>The computer industry uses many encoded character sets. Character sets differ in the following ways:</p>
<ul>
<li>
<p>The number of characters available to be used in the set</p>
</li>
<li>
<p>The characters that are available to be used in the set (also known as the <span class="bold"><a id="sthref19"></a>character repertoire</span>)</p>
</li>
<li>
<p>The scripts used for writing and the languages that they represent</p>
</li>
<li>
<p>The code points or values assigned to each character</p>
</li>
<li>
<p>The encoding scheme used to represent a specific character</p>
</li>
</ul>
<p>Oracle Database supports most national, international, and vendor-specific encoded character set standards.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="applocaledata.htm#i635016">"Character Sets"</a> for a complete list of character sets that are supported by Oracle Database</div>
</div>
<!-- class="sect2" -->
<a id="i1006076"></a><a id="NLSPG159"></a>
<div class="sect2">
<h3 class="sect2">Which Characters Are Encoded?</h3>
<p>The characters that are encoded in a character set depend on the writing systems that are represented. A writing system can be used to represent a language or a group of languages. Writing systems can be classified into two categories:</p>
<ul>
<li>
<p><a href="#i1006096">Phonetic Writing Systems</a></p>
</li>
<li>
<p><a href="#i1006101">Ideographic Writing Systems</a></p>
</li>
</ul>
<p>This section also includes the following topics:</p>
<ul>
<li>
<p><a href="#i1006107">Punctuation, Control Characters, Numbers, and Symbols</a></p>
</li>
<li>
<p><a href="#i1006115">Writing Direction</a></p>
</li>
</ul>
<a id="i1006096"></a><a id="NLSPG160"></a>
<div class="sect3">
<h4 class="sect3">Phonetic Writing Systems</h4>
<p>Phonetic writing systems consist of symbols that represent different sounds associated with a language. Greek, Latin, Cyrillic, and Devanagari are all examples of phonetic writing systems based on alphabets. Note that alphabets can represent multiple languages. For example, the Latin alphabet can represent many Western European languages such as French, German, and English.</p>
<p>Characters associated with a <a id="sthref20"></a><a id="sthref21"></a>phonetic writing system can typically be encoded in one byte because the character repertoire is usually smaller than 256 characters.</p>
</div>
<!-- class="sect3" -->
<a id="i1006101"></a><a id="NLSPG161"></a>
<div class="sect3">
<h4 class="sect3">Ideographic Writing Systems</h4>
<p>Ideographic writing systems consist of ideographs or pictographs that represent the meaning of a word, not the sounds of a language. Chinese and Japanese are examples of <a id="sthref22"></a><a id="sthref23"></a>ideographic writing systems that are based on tens of thousands of ideographs. Languages that use ideographic writing systems may also use a <span class="bold"><a id="sthref24"></a>syllabary</span>. Syllabaries provide a mechanism for communicating additional phonetic information. For instance, Japanese has two syllabaries: Hiragana, normally used for grammatical elements, and Katakana, normally used for foreign and onomatopoeic words.</p>
<p>Characters associated with an ideographic writing system typically are encoded in more than one byte because the character repertoire has tens of thousands of characters.</p>
</div>
<!-- class="sect3" -->
<a id="i1006107"></a><a id="NLSPG162"></a>
<div class="sect3">
<h4 class="sect3">Punctuation, Control Characters, Numbers, and Symbols</h4>
<p>In addition to <a id="sthref25"></a><a id="sthref26"></a><a id="sthref27"></a><a id="sthref28"></a><a id="sthref29"></a><a id="sthref30"></a><a id="sthref31"></a><a id="sthref32"></a>encoding the script of a language, other special characters must be encoded:</p>
<ul>
<li>
<p>Punctuation marks such as commas, periods, and apostrophes</p>
</li>
<li>
<p>Numbers</p>
</li>
<li>
<p>Special symbols such as currency symbols and math operators</p>
</li>
<li>
<p>Control characters such as carriage returns and tabs</p>
</li>
</ul>
</div>
<!-- class="sect3" -->
<a id="i1006115"></a><a id="NLSPG163"></a>
<div class="sect3">
<h4 class="sect3">Writing Direction</h4>
<p><a id="i1006117"></a>Most Western languages are written left to right from the top to the bottom of the page. East Asian languages are usually written top to bottom from the right to the left of the page, although exceptions are frequently made for technical books translated from Western languages. Arabic and Hebrew are written right to left from the top to the bottom.</p>
<p>Numbers reverse direction in Arabic and Hebrew. Although the text is written right to left, numbers within the sentence are written left to right. For example, "I wrote 32 books" would be written as "skoob 32 etorw I". Regardless of the writing direction, Oracle Database stores the data in logical order. Logical order means the order that is used by someone typing a language, not how it looks on the screen.</p>
<p>Writing direction does not affect the encoding of a character.</p>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="i1006121"></a><a id="NLSPG164"></a>
<div class="sect2">
<h3 class="sect2">What Characters Does a Character Set Support?</h3>
<p>Different<a id="sthref33"></a><a id="sthref34"></a> character sets support different character repertoires. Because character sets are typically based on a particular writing script, they can support multiple languages. When character sets were first developed, they had a limited character repertoire. Even now there can be problems using certain characters across platforms. The following <code>CHAR</code> and <code>VARCHAR</code> characters are represented in all Oracle Database character sets and can be transported to any platform:</p>
<ul>
<li>
<p>Uppercase and lowercase English characters A through Z and a through z</p>
</li>
<li>
<p>Arabic digits 0 through 9</p>
</li>
<li>
<p>The following punctuation marks: % ' ' ( ) * + - , . / \ : ; &lt; &gt; = ! _ &amp; ~ { } | ^ ? $ # @ " [ ]</p>
</li>
<li>
<p>The following control characters: space, horizontal tab, vertical tab, form feed</p>
</li>
</ul>
<p>If you are using characters outside this set, then take care that your data is supported in the database character set that you have chosen.</p>
<p>Setting the <code>NLS_LANG</code> parameter properly is essential to proper data conversion. The character set that is specified by the <code>NLS_LANG</code> parameter should reflect the setting for the client operating system. Setting <code>NLS_LANG</code> correctly enables proper conversion from the client operating system character encoding to the database character set. When these settings are the same, Oracle Database assumes that the data being sent or received is encoded in the same character set as the database character set, so character set validation or conversion may not be performed. This can lead to corrupt data if conversions are necessary.</p>
<p>During conversion from one character set to another, Oracle Database expects client-side data to be encoded in the character set specified by the <code>NLS_LANG</code> parameter. If you put other values into the string (for example, by using the <code>CHR</code> or <code>CONVERT</code> SQL functions), then the values may be corrupted when they are sent to the database because they are not converted properly. If you have configured the environment correctly and if the database character set supports the entire repertoire of character data that may be input into the database, then you do not need to change the current database character set. However, if your enterprise becomes more globalized and you have additional characters or new languages to support, then you may need to choose a character set with a greater character repertoire. Oracle recommends that you use Unicode databases and data types.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="ch6unicode.htm#g1014017">Chapter 6, "Supporting Multilingual Databases with Unicode"</a></p>
</li>
<li>
<p><a class="olink SQLRF" href="../e41084/toc.htm"><span class="italic">Oracle Database SQL Language Reference</span></a> for more information about the <code>CHR</code> and <code>CONVERT</code> SQL functions</p>
</li>
<li>
<p><a href="ch13custlocale.htm#i1006322">"Displaying a Code Chart with the Oracle Locale Builder"</a></p>
</li>
</ul>
</div>
<a id="NLSPG165"></a>
<div class="sect3"><a id="sthref35"></a>
<h4 class="sect3">ASCII <a id="sthref36"></a>Encoding</h4>
<p><a href="#CIHJEADJ">Table 2-2</a> shows how the ASCII character set is encoded. Row and column headings denote hexadecimal digits. To find the encoded value of a character, read the column number followed by the row number. For example, the code value of the character A is 0x41.</p>
<div class="tblformal">
<p class="titleintable"><a id="sthref37"></a><a id="CIHJEADJ"></a>Table 2-2 7-Bit ASCII Character Set</p>
<table class="cellalignment1916" title="7-Bit ASCII Character Set" summary="7-Bit ASCII Character Set" dir="ltr">
<thead>
<tr class="cellalignment1905">
<th class="cellalignment1915" id="r1c1-t5">-</th>
<th class="cellalignment1915" id="r1c2-t5">0</th>
<th class="cellalignment1915" id="r1c3-t5">1</th>
<th class="cellalignment1915" id="r1c4-t5">2</th>
<th class="cellalignment1915" id="r1c5-t5">3</th>
<th class="cellalignment1915" id="r1c6-t5">4</th>
<th class="cellalignment1915" id="r1c7-t5">5</th>
<th class="cellalignment1915" id="r1c8-t5">6</th>
<th class="cellalignment1915" id="r1c9-t5">7</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1905">
<td class="cellalignment1911" id="r2c1-t5" headers="r1c1-t5">
<p>0</p>
</td>
<td class="cellalignment1911" headers="r2c1-t5 r1c2-t5">
<p>NUL</p>
</td>
<td class="cellalignment1911" headers="r2c1-t5 r1c3-t5">
<p>DLE</p>
</td>
<td class="cellalignment1911" headers="r2c1-t5 r1c4-t5">
<p>SP</p>
</td>
<td class="cellalignment1911" headers="r2c1-t5 r1c5-t5">
<p>0</p>
</td>
<td class="cellalignment1911" headers="r2c1-t5 r1c6-t5">
<p>@</p>
</td>
<td class="cellalignment1911" headers="r2c1-t5 r1c7-t5">
<p>P</p>
</td>
<td class="cellalignment1911" headers="r2c1-t5 r1c8-t5">
<p>'</p>
</td>
<td class="cellalignment1911" headers="r2c1-t5 r1c9-t5">
<p>p</p>
</td>
</tr>
<tr class="cellalignment1905">
<td class="cellalignment1911" id="r3c1-t5" headers="r1c1-t5">
<p>1</p>
</td>
<td class="cellalignment1911" headers="r3c1-t5 r1c2-t5">
<p>SOH</p>
</td>
<td class="cellalignment1911" headers="r3c1-t5 r1c3-t5">
<p>DC1</p>
</td>
<td class="cellalignment1911" headers="r3c1-t5 r1c4-t5">
<p>!</p>
</td>
<td class="cellalignment1911" headers="r3c1-t5 r1c5-t5">
<p>1</p>
</td>
<td class="cellalignment1911" headers="r3c1-t5 r1c6-t5">
<p>A</p>
</td>
<td class="cellalignment1911" headers="r3c1-t5 r1c7-t5">
<p>Q</p>
</td>
<td class="cellalignment1911" headers="r3c1-t5 r1c8-t5">
<p>a</p>
</td>
<td class="cellalignment1911" headers="r3c1-t5 r1c9-t5">
<p>q</p>
</td>
</tr>
<tr class="cellalignment1905">
<td class="cellalignment1911" id="r4c1-t5" headers="r1c1-t5">
<p>2</p>
</td>
<td class="cellalignment1911" headers="r4c1-t5 r1c2-t5">
<p>STX</p>
</td>
<td class="cellalignment1911" headers="r4c1-t5 r1c3-t5">
<p>DC2</p>
</td>
<td class="cellalignment1911" headers="r4c1-t5 r1c4-t5">
<p>"</p>
</td>
<td class="cellalignment1911" headers="r4c1-t5 r1c5-t5">
<p>2</p>
</td>
<td class="cellalignment1911" headers="r4c1-t5 r1c6-t5">
<p>B</p>
</td>
<td class="cellalignment1911" headers="r4c1-t5 r1c7-t5">
<p>R</p>
</td>
<td class="cellalignment1911" headers="r4c1-t5 r1c8-t5">
<p>b</p>
</td>
<td class="cellalignment1911" headers="r4c1-t5 r1c9-t5">
<p>r</p>
</td>
</tr>
<tr class="cellalignment1905">
<td class="cellalignment1911" id="r5c1-t5" headers="r1c1-t5">
<p>3</p>
</td>
<td class="cellalignment1911" headers="r5c1-t5 r1c2-t5">
<p>ETX</p>
</td>
<td class="cellalignment1911" headers="r5c1-t5 r1c3-t5">
<p>DC3</p>
</td>
<td class="cellalignment1911" headers="r5c1-t5 r1c4-t5">
<p>#</p>
</td>
<td class="cellalignment1911" headers="r5c1-t5 r1c5-t5">
<p>3</p>
</td>
<td class="cellalignment1911" headers="r5c1-t5 r1c6-t5">
<p>C</p>
</td>
<td class="cellalignment1911" headers="r5c1-t5 r1c7-t5">
<p>S</p>
</td>
<td class="cellalignment1911" headers="r5c1-t5 r1c8-t5">
<p>c</p>
</td>
<td class="cellalignment1911" headers="r5c1-t5 r1c9-t5">
<p>s</p>
</td>
</tr>
<tr class="cellalignment1905">
<td class="cellalignment1911" id="r6c1-t5" headers="r1c1-t5">
<p>4</p>
</td>
<td class="cellalignment1911" headers="r6c1-t5 r1c2-t5">
<p>EOT</p>
</td>
<td class="cellalignment1911" headers="r6c1-t5 r1c3-t5">
<p>DC4</p>
</td>
<td class="cellalignment1911" headers="r6c1-t5 r1c4-t5">
<p>$</p>
</td>
<td class="cellalignment1911" headers="r6c1-t5 r1c5-t5">
<p>4</p>
</td>
<td class="cellalignment1911" headers="r6c1-t5 r1c6-t5">
<p>D</p>
</td>
<td class="cellalignment1911" headers="r6c1-t5 r1c7-t5">
<p>T</p>
</td>
<td class="cellalignment1911" headers="r6c1-t5 r1c8-t5">
<p>d</p>
</td>
<td class="cellalignment1911" headers="r6c1-t5 r1c9-t5">
<p>t</p>
</td>
</tr>
<tr class="cellalignment1905">
<td class="cellalignment1911" id="r7c1-t5" headers="r1c1-t5">
<p>5</p>
</td>
<td class="cellalignment1911" headers="r7c1-t5 r1c2-t5">
<p>ENQ</p>
</td>
<td class="cellalignment1911" headers="r7c1-t5 r1c3-t5">
<p>NAK</p>
</td>
<td class="cellalignment1911" headers="r7c1-t5 r1c4-t5">
<p>%</p>
</td>
<td class="cellalignment1911" headers="r7c1-t5 r1c5-t5">
<p>5</p>
</td>
<td class="cellalignment1911" headers="r7c1-t5 r1c6-t5">
<p>E</p>
</td>
<td class="cellalignment1911" headers="r7c1-t5 r1c7-t5">
<p>U</p>
</td>
<td class="cellalignment1911" headers="r7c1-t5 r1c8-t5">
<p>e</p>
</td>
<td class="cellalignment1911" headers="r7c1-t5 r1c9-t5">
<p>u</p>
</td>
</tr>
<tr class="cellalignment1905">
<td class="cellalignment1911" id="r8c1-t5" headers="r1c1-t5">
<p>6</p>
</td>
<td class="cellalignment1911" headers="r8c1-t5 r1c2-t5">
<p>ACK</p>
</td>
<td class="cellalignment1911" headers="r8c1-t5 r1c3-t5">
<p>SYN</p>
</td>
<td class="cellalignment1911" headers="r8c1-t5 r1c4-t5">
<p>&amp;</p>
</td>
<td class="cellalignment1911" headers="r8c1-t5 r1c5-t5">
<p>6</p>
</td>
<td class="cellalignment1911" headers="r8c1-t5 r1c6-t5">
<p>F</p>
</td>
<td class="cellalignment1911" headers="r8c1-t5 r1c7-t5">
<p>V</p>
</td>
<td class="cellalignment1911" headers="r8c1-t5 r1c8-t5">
<p>f</p>
</td>
<td class="cellalignment1911" headers="r8c1-t5 r1c9-t5">
<p>v</p>
</td>
</tr>
<tr class="cellalignment1905">
<td class="cellalignment1911" id="r9c1-t5" headers="r1c1-t5">
<p>7</p>
</td>
<td class="cellalignment1911" headers="r9c1-t5 r1c2-t5">
<p>BEL</p>
</td>
<td class="cellalignment1911" headers="r9c1-t5 r1c3-t5">
<p>ETB</p>
</td>
<td class="cellalignment1911" headers="r9c1-t5 r1c4-t5">
<p>'</p>
</td>
<td class="cellalignment1911" headers="r9c1-t5 r1c5-t5">
<p>7</p>
</td>
<td class="cellalignment1911" headers="r9c1-t5 r1c6-t5">
<p>G</p>
</td>
<td class="cellalignment1911" headers="r9c1-t5 r1c7-t5">
<p>W</p>
</td>
<td class="cellalignment1911" headers="r9c1-t5 r1c8-t5">
<p>g</p>
</td>
<td class="cellalignment1911" headers="r9c1-t5 r1c9-t5">
<p>w</p>
</td>
</tr>
<tr class="cellalignment1905">
<td class="cellalignment1911" id="r10c1-t5" headers="r1c1-t5">
<p>8</p>
</td>
<td class="cellalignment1911" headers="r10c1-t5 r1c2-t5">
<p>BS</p>
</td>
<td class="cellalignment1911" headers="r10c1-t5 r1c3-t5">
<p>CAN</p>
</td>
<td class="cellalignment1911" headers="r10c1-t5 r1c4-t5">
<p>(</p>
</td>
<td class="cellalignment1911" headers="r10c1-t5 r1c5-t5">
<p>8</p>
</td>
<td class="cellalignment1911" headers="r10c1-t5 r1c6-t5">
<p>H</p>
</td>
<td class="cellalignment1911" headers="r10c1-t5 r1c7-t5">
<p>X</p>
</td>
<td class="cellalignment1911" headers="r10c1-t5 r1c8-t5">
<p>h</p>
</td>
<td class="cellalignment1911" headers="r10c1-t5 r1c9-t5">
<p>x</p>
</td>
</tr>
<tr class="cellalignment1905">
<td class="cellalignment1911" id="r11c1-t5" headers="r1c1-t5">
<p>9</p>
</td>
<td class="cellalignment1911" headers="r11c1-t5 r1c2-t5">
<p>TAB</p>
</td>
<td class="cellalignment1911" headers="r11c1-t5 r1c3-t5">
<p>EM</p>
</td>
<td class="cellalignment1911" headers="r11c1-t5 r1c4-t5">
<p>)</p>
</td>
<td class="cellalignment1911" headers="r11c1-t5 r1c5-t5">
<p>9</p>
</td>
<td class="cellalignment1911" headers="r11c1-t5 r1c6-t5">
<p>I</p>
</td>
<td class="cellalignment1911" headers="r11c1-t5 r1c7-t5">
<p>Y</p>
</td>
<td class="cellalignment1911" headers="r11c1-t5 r1c8-t5">
<p>i</p>
</td>
<td class="cellalignment1911" headers="r11c1-t5 r1c9-t5">
<p>y</p>
</td>
</tr>
<tr class="cellalignment1905">
<td class="cellalignment1911" id="r12c1-t5" headers="r1c1-t5">
<p>A</p>
</td>
<td class="cellalignment1911" headers="r12c1-t5 r1c2-t5">
<p>LF</p>
</td>
<td class="cellalignment1911" headers="r12c1-t5 r1c3-t5">
<p>SUB</p>
</td>
<td class="cellalignment1911" headers="r12c1-t5 r1c4-t5">
<p>*</p>
</td>
<td class="cellalignment1911" headers="r12c1-t5 r1c5-t5">
<p>:</p>
</td>
<td class="cellalignment1911" headers="r12c1-t5 r1c6-t5">
<p>J</p>
</td>
<td class="cellalignment1911" headers="r12c1-t5 r1c7-t5">
<p>Z</p>
</td>
<td class="cellalignment1911" headers="r12c1-t5 r1c8-t5">
<p>j</p>
</td>
<td class="cellalignment1911" headers="r12c1-t5 r1c9-t5">
<p>z</p>
</td>
</tr>
<tr class="cellalignment1905">
<td class="cellalignment1911" id="r13c1-t5" headers="r1c1-t5">
<p>B</p>
</td>
<td class="cellalignment1911" headers="r13c1-t5 r1c2-t5">
<p>VT</p>
</td>
<td class="cellalignment1911" headers="r13c1-t5 r1c3-t5">
<p>ESC</p>
</td>
<td class="cellalignment1911" headers="r13c1-t5 r1c4-t5">
<p>+</p>
</td>
<td class="cellalignment1911" headers="r13c1-t5 r1c5-t5">
<p>;</p>
</td>
<td class="cellalignment1911" headers="r13c1-t5 r1c6-t5">
<p>K</p>
</td>
<td class="cellalignment1911" headers="r13c1-t5 r1c7-t5">
<p>[</p>
</td>
<td class="cellalignment1911" headers="r13c1-t5 r1c8-t5">
<p>k</p>
</td>
<td class="cellalignment1911" headers="r13c1-t5 r1c9-t5">
<p>{</p>
</td>
</tr>
<tr class="cellalignment1905">
<td class="cellalignment1911" id="r14c1-t5" headers="r1c1-t5">
<p>C</p>
</td>
<td class="cellalignment1911" headers="r14c1-t5 r1c2-t5">
<p>FF</p>
</td>
<td class="cellalignment1911" headers="r14c1-t5 r1c3-t5">
<p>FS</p>
</td>
<td class="cellalignment1911" headers="r14c1-t5 r1c4-t5">
<p>,</p>
</td>
<td class="cellalignment1911" headers="r14c1-t5 r1c5-t5">
<p>&lt;</p>
</td>
<td class="cellalignment1911" headers="r14c1-t5 r1c6-t5">
<p>L</p>
</td>
<td class="cellalignment1911" headers="r14c1-t5 r1c7-t5">
<p>\</p>
</td>
<td class="cellalignment1911" headers="r14c1-t5 r1c8-t5">
<p>l</p>
</td>
<td class="cellalignment1911" headers="r14c1-t5 r1c9-t5">
<p>|</p>
</td>
</tr>
<tr class="cellalignment1905">
<td class="cellalignment1911" id="r15c1-t5" headers="r1c1-t5">
<p>D</p>
</td>
<td class="cellalignment1911" headers="r15c1-t5 r1c2-t5">
<p>CR</p>
</td>
<td class="cellalignment1911" headers="r15c1-t5 r1c3-t5">
<p>GS</p>
</td>
<td class="cellalignment1911" headers="r15c1-t5 r1c4-t5">
<p>-</p>
</td>
<td class="cellalignment1911" headers="r15c1-t5 r1c5-t5">
<p>=</p>
</td>
<td class="cellalignment1911" headers="r15c1-t5 r1c6-t5">
<p>M</p>
</td>
<td class="cellalignment1911" headers="r15c1-t5 r1c7-t5">
<p>]</p>
</td>
<td class="cellalignment1911" headers="r15c1-t5 r1c8-t5">
<p>m</p>
</td>
<td class="cellalignment1911" headers="r15c1-t5 r1c9-t5">
<p>}</p>
</td>
</tr>
<tr class="cellalignment1905">
<td class="cellalignment1911" id="r16c1-t5" headers="r1c1-t5">
<p>E</p>
</td>
<td class="cellalignment1911" headers="r16c1-t5 r1c2-t5">
<p>SO</p>
</td>
<td class="cellalignment1911" headers="r16c1-t5 r1c3-t5">
<p>RS</p>
</td>
<td class="cellalignment1911" headers="r16c1-t5 r1c4-t5">
<p>.</p>
</td>
<td class="cellalignment1911" headers="r16c1-t5 r1c5-t5">
<p>&gt;</p>
</td>
<td class="cellalignment1911" headers="r16c1-t5 r1c6-t5">
<p>N</p>
</td>
<td class="cellalignment1911" headers="r16c1-t5 r1c7-t5">
<p>^</p>
</td>
<td class="cellalignment1911" headers="r16c1-t5 r1c8-t5">
<p>n</p>
</td>
<td class="cellalignment1911" headers="r16c1-t5 r1c9-t5">
<p>~</p>
</td>
</tr>
<tr class="cellalignment1905">
<td class="cellalignment1911" id="r17c1-t5" headers="r1c1-t5">
<p>F</p>
</td>
<td class="cellalignment1911" headers="r17c1-t5 r1c2-t5">
<p>SI</p>
</td>
<td class="cellalignment1911" headers="r17c1-t5 r1c3-t5">
<p>US</p>
</td>
<td class="cellalignment1911" headers="r17c1-t5 r1c4-t5">
<p>/</p>
</td>
<td class="cellalignment1911" headers="r17c1-t5 r1c5-t5">
<p>?</p>
</td>
<td class="cellalignment1911" headers="r17c1-t5 r1c6-t5">
<p>O</p>
</td>
<td class="cellalignment1911" headers="r17c1-t5 r1c7-t5">
<p>_</p>
</td>
<td class="cellalignment1911" headers="r17c1-t5 r1c8-t5">
<p>o</p>
</td>
<td class="cellalignment1911" headers="r17c1-t5 r1c9-t5">
<p>DEL</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<p>As languages evolve to meet the needs of people around the world, new character sets are created to support the languages. Typically, these new character sets support a group of related languages based on the same script. For example, the ISO 8859 character set series was created to support different European languages. <a href="#g1009542">Table 2-3</a> shows the languages that are supported by the ISO <a id="sthref38"></a><a id="sthref39"></a>8859 character sets.</p>
<div class="tblformalwide">
<p class="titleintable"><a id="NLSPG703"></a><a id="sthref40"></a><a id="g1009542"></a>Table 2-3 lSO 8859 Character Sets</p>
<table class="cellalignment1914" title="lSO 8859 Character Sets " summary="This table is described in the preceding text" dir="ltr">
<thead>
<tr class="cellalignment1905">
<th class="cellalignment1915" id="r1c1-t6">Standard</th>
<th class="cellalignment1915" id="r1c2-t6">Languages Supported</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1905">
<td class="cellalignment1911" id="r2c1-t6" headers="r1c1-t6">
<p>ISO 8859-1</p>
</td>
<td class="cellalignment1911" headers="r2c1-t6 r1c2-t6">
<p>Western European (Albanian, Basque, Breton, Catalan, Danish, Dutch, English, Faeroese, Finnish, French, German, Greenlandic, Icelandic, Irish Gaelic, Italian, Latin, Luxemburgish, Norwegian, Portuguese, Rhaeto-Romanic, Scottish Gaelic, Spanish, Swedish)</p>
</td>
</tr>
<tr class="cellalignment1905">
<td class="cellalignment1911" id="r3c1-t6" headers="r1c1-t6">
<p>ISO 8859-2</p>
</td>
<td class="cellalignment1911" headers="r3c1-t6 r1c2-t6">
<p>Eastern European (Albanian, Croatian, Czech, English, German, Hungarian, Latin, Polish, Romanian, Slovak, Slovenian, Serbian)</p>
</td>
</tr>
<tr class="cellalignment1905">
<td class="cellalignment1911" id="r4c1-t6" headers="r1c1-t6">
<p>ISO 8859-3</p>
</td>
<td class="cellalignment1911" headers="r4c1-t6 r1c2-t6">
<p>Southeastern European (Afrikaans, Catalan, Dutch, English, Esperanto, German, Italian, Maltese, Spanish, Turkish)</p>
</td>
</tr>
<tr class="cellalignment1905">
<td class="cellalignment1911" id="r5c1-t6" headers="r1c1-t6">
<p>ISO 8859-4</p>
</td>
<td class="cellalignment1911" headers="r5c1-t6 r1c2-t6">
<p>Northern European (Danish, English, Estonian, Finnish, German, Greenlandic, Latin, Latvian, Lithuanian, Norwegian, S&aacute;mi, Slovenian, Swedish)</p>
</td>
</tr>
<tr class="cellalignment1905">
<td class="cellalignment1911" id="r6c1-t6" headers="r1c1-t6">
<p>ISO 8859-5</p>
</td>
<td class="cellalignment1911" headers="r6c1-t6 r1c2-t6">
<p>Eastern European (Cyrillic-based: Bulgarian, Byelorussian, Macedonian, Russian, Serbian, Ukrainian)</p>
</td>
</tr>
<tr class="cellalignment1905">
<td class="cellalignment1911" id="r7c1-t6" headers="r1c1-t6">
<p>ISO 8859-6</p>
</td>
<td class="cellalignment1911" headers="r7c1-t6 r1c2-t6">
<p>Arabic</p>
</td>
</tr>
<tr class="cellalignment1905">
<td class="cellalignment1911" id="r8c1-t6" headers="r1c1-t6">
<p>ISO 8859-7</p>
</td>
<td class="cellalignment1911" headers="r8c1-t6 r1c2-t6">
<p>Greek</p>
</td>
</tr>
<tr class="cellalignment1905">
<td class="cellalignment1911" id="r9c1-t6" headers="r1c1-t6">
<p>ISO 8859-8</p>
</td>
<td class="cellalignment1911" headers="r9c1-t6 r1c2-t6">
<p>Hebrew</p>
</td>
</tr>
<tr class="cellalignment1905">
<td class="cellalignment1911" id="r10c1-t6" headers="r1c1-t6">
<p>ISO 8859-9</p>
</td>
<td class="cellalignment1911" headers="r10c1-t6 r1c2-t6">
<p>Western European (Albanian, Basque, Breton, Catalan, Cornish, Danish, Dutch, English, Finnish, French, Frisian, Galician, German, Greenlandic, Irish Gaelic, Italian, Latin, Luxemburgish, Norwegian, Portuguese, Rhaeto-Romanic, Scottish Gaelic, Spanish, Swedish, Turkish)</p>
</td>
</tr>
<tr class="cellalignment1905">
<td class="cellalignment1911" id="r11c1-t6" headers="r1c1-t6">
<p>ISO 8859-10</p>
</td>
<td class="cellalignment1911" headers="r11c1-t6 r1c2-t6">
<p>Northern European (Danish, English, Estonian, Faeroese, Finnish, German, Greenlandic, Icelandic, Irish Gaelic, Latin, Lithuanian, Norwegian, S&aacute;mi, Slovenian, Swedish)</p>
</td>
</tr>
<tr class="cellalignment1905">
<td class="cellalignment1911" id="r12c1-t6" headers="r1c1-t6">
<p>ISO 8859-13</p>
</td>
<td class="cellalignment1911" headers="r12c1-t6 r1c2-t6">
<p>Baltic Rim (English, Estonian, Finnish, Latin, Latvian, Norwegian)</p>
</td>
</tr>
<tr class="cellalignment1905">
<td class="cellalignment1911" id="r13c1-t6" headers="r1c1-t6">
<p>ISO 8859-14</p>
</td>
<td class="cellalignment1911" headers="r13c1-t6 r1c2-t6">
<p>Celtic (Albanian, Basque, Breton, Catalan, Cornish, Danish, English, Galician, German, Greenlandic, Irish Gaelic, Italian, Latin, Luxemburgish, Manx Gaelic, Norwegian, Portuguese, Rhaeto-Romanic, Scottish Gaelic, Spanish, Swedish, Welsh)</p>
</td>
</tr>
<tr class="cellalignment1905">
<td class="cellalignment1911" id="r14c1-t6" headers="r1c1-t6">
<p>ISO 8859-15</p>
</td>
<td class="cellalignment1911" headers="r14c1-t6 r1c2-t6">
<p>Western European (Albanian, Basque, Breton, Catalan, Danish, Dutch, English, Estonian, Faroese, Finnish, French, Frisian, Galician, German, Greenlandic, Icelandic, Irish Gaelic, Italian, Latin, Luxemburgish, Norwegian, Portuguese, Rhaeto-Romanic, Scottish Gaelic, Spanish, Swedish)</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformalwide" -->
<p>Historically, character sets have provided restricted multilingual support, which has been limited to groups of languages based on similar scripts. More recently, universal character sets have emerged to enable greatly improved solutions for multilingual support. Unicode is one such universal character set that encompasses most major scripts of the modern world. As of version 5.0, Unicode supports more than 99,000 characters.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="ch6unicode.htm#g1014017">Chapter 6, "Supporting Multilingual Databases with Unicode"</a></div>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="i1006571"></a><a id="NLSPG166"></a>
<div class="sect2">
<h3 class="sect2">How are Characters Encoded?</h3>
<p>Different types of encoding schemes have been created by the computer industry. The character set you choose affects what kind of encoding scheme is used. This is important because different encoding schemes have different performance characteristics. These characteristics can influence your database schema and application development. The character set you choose uses one of the following types of encoding schemes:</p>
<ul>
<li>
<p><a href="#i1006582">Single-Byte Encoding Schemes</a></p>
</li>
<li>
<p><a href="#i1006605">Multibyte Encoding Schemes</a></p>
</li>
</ul>
<a id="i1006582"></a><a id="NLSPG167"></a>
<div class="sect3">
<h4 class="sect3">Single-Byte Encoding Schemes</h4>
<p>Single-byte encoding <a id="sthref41"></a><a id="sthref42"></a>schemes are efficient. They take up the least amount of space to represent characters and are easy to process and program with because one character can be represented in one byte. Single-byte encoding schemes are classified as one of the following types:</p>
<a id="i1006586"></a>
<ul>
<li>
<p><a id="sthref43"></a><a id="sthref44"></a>7-bit encoding schemes</p>
<p>Single-byte <a id="sthref45"></a><a id="sthref46"></a>7-bit encoding schemes can define up to 128 characters and normally support just one language. One of the most common single-byte character sets, used since the early days of computing, is ASCII (American Standard Code for Information Interchange).</p>
</li>
<li>
<p><a id="i1006591"></a><a id="sthref47"></a><a id="sthref48"></a>8-bit encoding schemes</p>
<p>Single-byte <a id="sthref49"></a><a id="sthref50"></a>8-bit encoding schemes can define up to 256 characters and often support a group of related languages. One example is ISO 8859-1, which supports many Western European languages. <a href="#i1006599">Figure 2-1</a> shows the ISO 8859-1 8-bit encoding scheme.</p>
</li>
</ul>
<div class="figure">
<p class="titleinfigure"><a id="i1006599"></a><a id="NLSPG704"></a>Figure 2-1 ISO 8859-1 8-Bit Encoding Scheme</p>
<img width="574" height="307" src="img/iso88591.gif" alt="Description of Figure 2-1 follows" /><br />
<a id="sthref51" href="./img_text/iso88591.htm">Description of "Figure 2-1 ISO 8859-1 8-Bit Encoding Scheme"</a><br />
<br /></div>
<!-- class="figure" --></div>
<!-- class="sect3" -->
<a id="i1006605"></a><a id="NLSPG168"></a>
<div class="sect3">
<h4 class="sect3">Multibyte Encoding Schemes</h4>
<p>Multibyte encoding <a id="sthref52"></a><a id="sthref53"></a>schemes are needed to support ideographic scripts used in Asian languages like Chinese or Japanese because these languages use thousands of characters. These encoding schemes use either a fixed number or a variable number of bytes to represent each character.</p>
<a id="i1006609"></a>
<ul>
<li>
<p><a id="sthref54"></a><a id="sthref55"></a><a id="sthref56"></a>Fixed-width multibyte encoding schemes</p>
<p>In a fixed-width multibyte encoding scheme, each character is represented by a fixed number of bytes. The number of bytes is at least two in a multibyte encoding scheme.</p>
</li>
<li>
<p><a id="i1006614"></a><a id="sthref57"></a><a id="sthref58"></a><a id="sthref59"></a>Variable-width multibyte encoding schemes</p>
<p>A variable-width encoding scheme uses one or more bytes to represent a single character. Some multibyte encoding schemes use certain bits to indicate the number of bytes that represents a character. For example, if two bytes is the maximum number of bytes used to represent a character, then the most significant bit can be used to indicate whether that byte is a single-byte character or the first byte of a double-byte character.</p>
</li>
<li>
<p><a id="sthref60"></a><a id="sthref61"></a><a id="sthref62"></a>Shift-sensitive <a id="sthref63"></a>variable-width multibyte encoding schemes</p>
<p>Some variable-width encoding schemes use control codes to differentiate between single-byte and multibyte characters with the same code values. A shift-out code indicates that the following character is multibyte. A shift-in code indicates that the following character is single-byte. Shift-sensitive encoding schemes are used primarily on IBM platforms. Note that ISO-2022 character sets cannot be used as database character sets, but they can be used for applications such as a mail server.</p>
</li>
</ul>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="i1006624"></a><a id="NLSPG169"></a>
<div class="sect2">
<h3 class="sect2">Naming Convention for Oracle Database Character Sets</h3>
<p>Oracle Database uses the fol<a id="sthref64"></a>lowing naming convention for its character set names:</p>
<pre>
&lt;region&gt;&lt;number of bits used to represent a character&gt;&lt;standard character set name&gt;[S|C]
</pre>
<p>The parts of the names that appear between angle brackets are concatenated. The optional <code>S</code> or <code>C</code> is used to differentiate character sets that can be used only on the server (<code>S</code>) or only on the client (<code>C</code>).</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
Keep in mind that:
<ul>
<li>
<p>You should use the server character set (<code>S</code>) on the Macintosh platform. The Macintosh client character sets are obsolete. On EBCDIC platforms, use the server character set (<code>S</code>) on the server and the client character set (<code>C</code>) on the client.</p>
</li>
<li>
<p>UTF8 and UTFE are exceptions to the naming convention.</p>
</li>
</ul>
</div>
<p><a href="#g1009784">Table 2-4</a> shows examples of Oracle Database character set names.</p>
<div class="tblformal">
<p class="titleintable"><a id="NLSPG705"></a><a id="sthref65"></a><a id="g1009784"></a>Table 2-4 Examples of Oracle Database Character Set Names</p>
<table class="cellalignment1916" title="Examples of Oracle Database Character Set Names " summary="This table is described in the preceding text" dir="ltr">
<thead>
<tr class="cellalignment1905">
<th class="cellalignment1915" id="r1c1-t9">Oracle Database Character Set Name</th>
<th class="cellalignment1915" id="r1c2-t9">Description</th>
<th class="cellalignment1915" id="r1c3-t9">Region</th>
<th class="cellalignment1915" id="r1c4-t9">Number of Bits Used to Represent a Character</th>
<th class="cellalignment1915" id="r1c5-t9">Standard Character Set Name</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1905">
<td class="cellalignment1911" id="r2c1-t9" headers="r1c1-t9">
<p>US7ASCII</p>
</td>
<td class="cellalignment1911" headers="r2c1-t9 r1c2-t9">
<p>U.S. 7-bit ASCII</p>
</td>
<td class="cellalignment1911" headers="r2c1-t9 r1c3-t9">
<p>US</p>
</td>
<td class="cellalignment1911" headers="r2c1-t9 r1c4-t9">
<p>7</p>
</td>
<td class="cellalignment1911" headers="r2c1-t9 r1c5-t9">
<p>ASCII</p>
</td>
</tr>
<tr class="cellalignment1905">
<td class="cellalignment1911" id="r3c1-t9" headers="r1c1-t9">
<p>WE8ISO8859P1</p>
</td>
<td class="cellalignment1911" headers="r3c1-t9 r1c2-t9">
<p>Western European 8-bit ISO 8859 Part 1</p>
</td>
<td class="cellalignment1911" headers="r3c1-t9 r1c3-t9">
<p>WE (Western Europe)</p>
</td>
<td class="cellalignment1911" headers="r3c1-t9 r1c4-t9">
<p>8</p>
</td>
<td class="cellalignment1911" headers="r3c1-t9 r1c5-t9">
<p>ISO8859 Part 1</p>
</td>
</tr>
<tr class="cellalignment1905">
<td class="cellalignment1911" id="r4c1-t9" headers="r1c1-t9">
<p>JA16SJIS</p>
</td>
<td class="cellalignment1911" headers="r4c1-t9 r1c2-t9">
<p>Japanese 16-bit Shifted Japanese Industrial Standard</p>
</td>
<td class="cellalignment1911" headers="r4c1-t9 r1c3-t9">
<p>JA</p>
</td>
<td class="cellalignment1911" headers="r4c1-t9 r1c4-t9">
<p>16</p>
</td>
<td class="cellalignment1911" headers="r4c1-t9 r1c5-t9">
<p>SJIS</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" --></div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="i1006683"></a><a id="NLSPG170"></a>
<div class="sect1">
<h2 class="sect1">Length Semantics<a id="sthref66"></a><a id="sthref67"></a><a id="sthref68"></a></h2>
<p>In single-byte character sets, the number of bytes and the number of characters in a string are the same. In multibyte character sets, a character or code point consists of one or more bytes. Calculating the number of characters based on byte lengths can be difficult in a variable-width character set. Calculating column lengths in bytes is called <span class="bold">byte semantics</span>, while measuring column lengths in characters is called <span class="bold">character semantics</span>.</p>
<p>Character semantics is useful for defining the storage requirements for multibyte strings of varying widths. For example, in a Unicode database (AL32UTF8), suppose that you need to define a <code>VARCHAR2</code> column that can store up to five Chinese characters together with five English characters. Using byte semantics, this column requires 15 bytes for the Chinese characters, which are three bytes long, and 5 bytes for the English characters, which are one byte long, for a total of 20 bytes. Using character semantics, the column requires 10 characters.</p>
<p>The following expressions use byte semantics:</p>
<ul>
<li>
<p><code>VARCHAR2(20 BYTE)</code></p>
</li>
<li>
<p><code>SUBSTRB(</code><code><span class="codeinlineitalic">string</span></code><code>, 1, 20)</code></p>
</li>
</ul>
<p>Note the <code>BYTE</code> qualifier in the <code>VARCHAR2</code> expression and the <code>B</code> suffix in the SQL function name.</p>
<p>The following expressions use character semantics:</p>
<ul>
<li>
<p><code>VARCHAR2(10 CHAR)</code></p>
</li>
<li>
<p><code>SUBSTR(</code><code><span class="codeinlineitalic">string</span></code><code>, 1, 10)</code></p>
</li>
</ul>
<p>Note the <code>CHAR</code> qualifier in the <code>VARCHAR2</code> expression.</p>
<p>The length semantics of character data type columns, user-defined type attributes, and PL/SQL variables can be specified explicitly in their definitions with the <code>BYTE</code> or <code>CHAR</code> qualifier. This method of specifying the length semantics is recommended as it properly documents the expected semantics in creation DDL statements and makes the statements independent of any execution environment.</p>
<p>If a column, user-defined type attribute or PL/SQL variable definition contains neither the <code>BYTE</code> nor the <code>CHAR</code> qualifier, the length semantics associated with the column, attribute, or variable is determined by the value of the session parameter <code>NLS_LENGTH_SEMANTICS</code>. If you create database objects with legacy scripts that are too large and complex to be updated to include explicit <code>BYTE</code> and/or <code>CHAR</code> qualifiers, execute an explicit <code>ALTER</code> <code>SESSION</code> <code>SET</code> <code>NLS_LENGTH_SEMANTICS</code> statement before running each of the scripts to assure the scripts create objects in the expected semantics.</p>
<p>The <code>NLS_LENGTH_SEMANTICS</code> initializa<a id="sthref69"></a><a id="sthref70"></a>tion parameter determines the default value of the <code>NLS_LENGTH_SEMANTICS</code> session parameter for new sessions. Its default value is <code>BYTE</code>. For the sake of compatibility with existing application installation procedures, which may have been written before character length semantics was introduced into Oracle SQL, Oracle recommends that you leave this initialization parameter undefined or you set it to <code>BYTE</code>. Otherwise, created columns may be larger than expected, causing applications to malfunction or, in some cases, cause buffer overflows.</p>
<p>Byte semantics is the default for the database character set. Character length semantics is the default and the only allowable kind of length semantics for <code>NCHAR</code> data types. The user cannot specify the <code>CHAR</code> or <code>BYTE</code> qualifier for <code>NCHAR</code> definitions.</p>
<p>Consider the following example:</p>
<pre>
CREATE TABLE employees
</pre>
<pre>
( employee_id NUMBER(4)
, last_name NVARCHAR2(10)
, job_id NVARCHAR2(9)
, manager_id NUMBER(4)
, hire_date DATE
, salary NUMBER(7,2)
, department_id NUMBER(2)
) ;
</pre>
<pre>
</pre>
<p>When the <code>NCHAR</code> character set is AL16UTF16, <code>last_name</code> can hold up to 10 Unicode code points. When the <code>NCHAR</code> character set is AL16UTF16, <code>last_name</code> can hold up to 20 bytes.</p>
<p><a href="#i1006715">Figure 2-2</a> shows the number of bytes needed to store different kinds of characters in the UTF-8 character set. The ASCII characters requires one byte, the Latin and Greek characters require two bytes, the Asian character requires three bytes, and the supplementary character requires four bytes of storage.</p>
<div class="figure">
<p class="titleinfigure"><a id="i1006715"></a><a id="NLSPG706"></a>Figure 2-2 Bytes of Storage for Different Kinds of Characters</p>
<img width="600" height="269" src="img/nlspg032.gif" alt="Description of Figure 2-2 follows" /><br />
<a id="sthref71" href="./img_text/nlspg032.htm">Description of "Figure 2-2 Bytes of Storage for Different Kinds of Characters"</a><br />
<br /></div>
<!-- class="figure" -->
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="ch9sql.htm#i1006154">"SQL Functions for Different Length Semantics"</a> for more information about the <code>SUBSTR</code> and <code>SUBSTRB</code> functions</p>
</li>
<li>
<p><a href="ch3globenv.htm#i1008561">"Length Semantics"</a> for more information about the <code>NLS_LENGTH_SEMANTICS</code> initialization parameter</p>
</li>
<li>
<p><a href="ch6unicode.htm#g1014017">Chapter 6, "Supporting Multilingual Databases with Unicode"</a> for more information about Unicode and the <code>NCHAR</code> data type</p>
</li>
<li>
<p><a class="olink SQLRF" href="../e41084/toc.htm"><span class="italic">Oracle Database SQL Language Reference</span></a> for more information about the <code>SUBSTRB</code> and <code>SUBSTR</code> functions and the <code>BYTE</code> and <code>CHAR</code> qualifiers for character data types</p>
</li>
</ul>
</div>
</div>
<!-- class="sect1" -->
<a id="i1006750"></a><a id="NLSPG171"></a>
<div class="sect1">
<h2 class="sect1">Choosing an Oracle Database Character Set</h2>
<p>Oracle Database uses the <a id="sthref72"></a>database character set for:</p>
<ul>
<li>
<p>Data stored in <a id="sthref73"></a>SQL <code>CHAR</code> data types (<code>CHAR</code>, <code>VARCHAR2</code>, <code>CLOB</code>, and <code>LONG)</code></p>
</li>
<li>
<p>Identifiers such as table names, column names, and PL/SQL variables</p>
</li>
<li>
<p>Entering and storing SQL and PL/SQL source code</p>
</li>
</ul>
<p>The character encoding scheme used by the database is defined as part of the <code>CREATE</code> <code>DATABASE</code> statement. All SQL <code>CHAR</code> data type columns (<code>CHAR</code>, <code>CLOB</code>, <code>VARCHAR2</code>, and <code>LONG)</code>, including columns in the data dictionary, have their data stored in the database character set. In addition, the choice of database character set determines which characters can name objects in the database. SQL <code>NCHAR</code> data type columns (<code>NCHAR</code>, <code>NCLOB</code>, and <code>NVARCHAR2)</code> use the national character set.</p>
<p>After the database is created, you cannot change the character sets, with some exceptions, without re-creating the database.</p>
<p>Consider the following questions when you choose an Oracle Database character set for the database:</p>
<ul>
<li>
<p>What languages does the database need to support now?</p>
</li>
<li>
<p>What languages does the database need to support in the future?</p>
</li>
<li>
<p>Is the character set available on the operating system?</p>
</li>
<li>
<p>What character sets are used on clients?</p>
</li>
<li>
<p>How well does the application handle the character set?</p>
</li>
<li>
<p>What are the performance implications of the character set?</p>
</li>
<li>
<p>What are the restrictions associated with the character set?</p>
</li>
</ul>
<p>The Oracle Database character sets are listed in <a href="applocaledata.htm#i635016">"Character Sets"</a>. They are named according to the languages and regions in which they are used. Some character sets that are named for a region are also listed explicitly by language.</p>
<p>If you want to see the characters that are included in a character set, then:</p>
<ul>
<li>
<p>Check national, international, or vendor product documentation or standards documents</p>
</li>
<li>
<p>Use Oracle Locale Builder</p>
</li>
</ul>
<p>This section contains the following topics:</p>
<ul>
<li>
<p><a href="#i1006845">Current and Future Language Requirements</a></p>
</li>
<li>
<p><a href="#i1006848">Client Operating System and Application Compatibility</a></p>
</li>
<li>
<p><a href="#i1006853">Character Set Conversion Between Clients and the Server</a></p>
</li>
<li>
<p><a href="#i1006870">Performance Implications of Choosing a Database Character Set</a></p>
</li>
<li>
<p><a href="#i1006874">Restrictions on Database Character Sets</a></p>
</li>
<li>
<p><a href="#i1007017">Choosing a National Character Set</a></p>
</li>
<li>
<p><a href="#i1007034">Summary of Supported Data Types</a></p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="ch6unicode.htm#i1006807">"UCS-2 Encoding"</a></p>
</li>
<li>
<p><a href="#i1007017">"Choosing a National Character Set"</a></p>
</li>
<li>
<p><a href="#i1007203">"Changing the Character Set After Database Creation"</a></p>
</li>
<li>
<p><a href="applocaledata.htm#g694776">Appendix A, "Locale Data"</a></p>
</li>
<li>
<p><a href="ch13custlocale.htm#g1014110">Chapter 13, "Customizing Locale Data"</a></p>
</li>
</ul>
</div>
</li>
</ul>
<a id="i1006845"></a><a id="NLSPG172"></a>
<div class="sect2">
<h3 class="sect2">Current and Future Language Requirements</h3>
<p>Several character sets may meet your current language requirements. Consider future language requirements when you choose a database character set. If you expect to support additional languages in the future, then choose a character set that supports those languages to prevent the need to migrate to a different character set later.</p>
</div>
<!-- class="sect2" -->
<a id="i1006848"></a><a id="NLSPG173"></a>
<div class="sect2">
<h3 class="sect2">Client Operating System and Application Compatibility</h3>
<p>The database <a id="sthref74"></a><a id="sthref75"></a><a id="sthref76"></a>character set is <a id="sthref77"></a>independent of the operating system because Oracle Database has its own globalization architecture. For example, on an English Windows operating system, you can create and run a database with a Japanese character set. However, when an application in the client operating system accesses the database, the client operating system must be able to support the database character set with appropriate fonts and input methods. For example, you cannot insert or retrieve Japanese data on the English Windows operating system without first installing a Japanese font and input method. Another way to insert and retrieve Japanese data is to use a Japanese operating system remotely to access the database server.</p>
</div>
<!-- class="sect2" -->
<a id="i1006853"></a><a id="NLSPG174"></a>
<div class="sect2">
<h3 class="sect2">Character Set Conversion Between Clients and the Server</h3>
<p>If you choo<a id="sthref78"></a><a id="sthref79"></a><a id="sthref80"></a>se a database character set that is different from the character set on the client operating system, then the Oracle Database can convert the operating system character set to the database character set. Character set conversion has the following disadvantages:</p>
<ul>
<li>
<p>Potential data loss</p>
</li>
<li>
<p>Increased overhead</p>
</li>
</ul>
<p>Character set conversions can sometimes cause data loss. For example, if you are converting from character set A to character set B, then the destination character set B must have the same character set repertoire as A. Any characters that are not available in character set B are converted to a replacement character. The replacement character is often specified as a question mark or as a linguistically related character. For example, <code>&auml;</code> (<code>a</code> with an umlaut) may be converted to <code>a</code>. If you have distributed environments, then consider using character sets with similar character repertoires to avoid loss of data.</p>
<p>Character set conversion may require copying strings between buffers several times before the data reaches the client. The database character set should always be a superset or equivalent of the native character set of the client's operating system. The character sets used by client applications that access the database usually determine which superset is the best choice.</p>
<p>If all client applications use the same character set, then that character set is usually the best choice for the database character set. When client applications use different character sets, the database character set should be a superset of all the client character sets. This ensures that every character is represented when converting from a client character set to the database character set.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="ch11charsetmig.htm#g1011430">Chapter 11, "Character Set Migration"</a></div>
</div>
<!-- class="sect2" -->
<a id="i1006870"></a><a id="NLSPG175"></a>
<div class="sect2">
<h3 class="sect2">Performance Implications of Choosing a Database Character Set</h3>
<p>For best <a id="sthref81"></a><a id="sthref82"></a>performance, choose a character set that avoids character set conversion and uses the most efficient encoding for the languages desired. Single-byte character sets result in better performance than multibyte character sets, and they also are the most efficient in terms of space requirements. However, single-byte character sets limit how many languages you can support.</p>
</div>
<!-- class="sect2" -->
<a id="i1006874"></a><a id="NLSPG176"></a>
<div class="sect2">
<h3 class="sect2">Restrictions on Database Character Sets</h3>
<p>ASCII-based character sets are supported only on ASCII-based platforms. Similarly, you can use an EBCDIC-based character set only on EBCDIC-based platforms.</p>
<p>The database character set is used to identify SQL and PL/SQL source code. In order to do this, it must have either EBCDIC or 7-bit ASCII as a subset, whichever is native to the platform. Therefore, it is not possible to use a fixed-width, multibyte character set as the database character set. Currently, only the AL16UTF16 character set cannot be used as a database character set.</p>
<a id="NLSPG177"></a>
<div class="sect3"><a id="sthref83"></a>
<h4 class="sect3">Restrictions on <a id="sthref84"></a>Character Sets Used to Express Names</h4>
<p><a href="#g1009616">Table 2-5</a> lists the restrictions on the character sets that can be used to express names.</p>
<div class="tblformalwide">
<p class="titleintable"><a id="NLSPG707"></a><a id="sthref85"></a><a id="g1009616"></a>Table 2-5 Restrictions on Character Sets Used to Express Names</p>
<table class="cellalignment1914" title="Restrictions on Character Sets Used to Express Names " summary="This table is described in the preceding text" dir="ltr">
<thead>
<tr class="cellalignment1905">
<th class="cellalignment1915" id="r1c1-t13">Name</th>
<th class="cellalignment1915" id="r1c2-t13">Single-Byte</th>
<th class="cellalignment1915" id="r1c3-t13">Variable Width</th>
<th class="cellalignment1915" id="r1c4-t13">Comments</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1905">
<td class="cellalignment1911" id="r2c1-t13" headers="r1c1-t13">
<p>Column names</p>
</td>
<td class="cellalignment1911" headers="r2c1-t13 r1c2-t13">
<p>Yes</p>
</td>
<td class="cellalignment1911" headers="r2c1-t13 r1c3-t13">
<p>Yes</p>
</td>
<td class="cellalignment1911" headers="r2c1-t13 r1c4-t13">
<p>-</p>
</td>
</tr>
<tr class="cellalignment1905">
<td class="cellalignment1911" id="r3c1-t13" headers="r1c1-t13">
<p>Schema objects</p>
</td>
<td class="cellalignment1911" headers="r3c1-t13 r1c2-t13">
<p>Yes</p>
</td>
<td class="cellalignment1911" headers="r3c1-t13 r1c3-t13">
<p>Yes</p>
</td>
<td class="cellalignment1911" headers="r3c1-t13 r1c4-t13">
<p>-</p>
</td>
</tr>
<tr class="cellalignment1905">
<td class="cellalignment1911" id="r4c1-t13" headers="r1c1-t13">
<p>Comments</p>
</td>
<td class="cellalignment1911" headers="r4c1-t13 r1c2-t13">
<p>Yes</p>
</td>
<td class="cellalignment1911" headers="r4c1-t13 r1c3-t13">
<p>Yes</p>
</td>
<td class="cellalignment1911" headers="r4c1-t13 r1c4-t13">
<p>-</p>
</td>
</tr>
<tr class="cellalignment1905">
<td class="cellalignment1911" id="r5c1-t13" headers="r1c1-t13">
<p>Database link names</p>
</td>
<td class="cellalignment1911" headers="r5c1-t13 r1c2-t13">
<p>Yes</p>
</td>
<td class="cellalignment1911" headers="r5c1-t13 r1c3-t13">
<p>No</p>
</td>
<td class="cellalignment1911" headers="r5c1-t13 r1c4-t13">
<p>-</p>
</td>
</tr>
<tr class="cellalignment1905">
<td class="cellalignment1911" id="r6c1-t13" headers="r1c1-t13">
<p>Database names</p>
</td>
<td class="cellalignment1911" headers="r6c1-t13 r1c2-t13">
<p>Yes</p>
</td>
<td class="cellalignment1911" headers="r6c1-t13 r1c3-t13">
<p>No</p>
</td>
<td class="cellalignment1911" headers="r6c1-t13 r1c4-t13">
<p>-</p>
</td>
</tr>
<tr class="cellalignment1905">
<td class="cellalignment1911" id="r7c1-t13" headers="r1c1-t13">
<p>File names (datafile, log file, control file, initialization parameter file)</p>
</td>
<td class="cellalignment1911" headers="r7c1-t13 r1c2-t13">
<p>Yes</p>
</td>
<td class="cellalignment1911" headers="r7c1-t13 r1c3-t13">
<p>No</p>
</td>
<td class="cellalignment1911" headers="r7c1-t13 r1c4-t13">
<p>-</p>
</td>
</tr>
<tr class="cellalignment1905">
<td class="cellalignment1911" id="r8c1-t13" headers="r1c1-t13">
<p>Instance names</p>
</td>
<td class="cellalignment1911" headers="r8c1-t13 r1c2-t13">
<p>Yes</p>
</td>
<td class="cellalignment1911" headers="r8c1-t13 r1c3-t13">
<p>No</p>
</td>
<td class="cellalignment1911" headers="r8c1-t13 r1c4-t13">
<p>-</p>
</td>
</tr>
<tr class="cellalignment1905">
<td class="cellalignment1911" id="r9c1-t13" headers="r1c1-t13">
<p>Directory names</p>
</td>
<td class="cellalignment1911" headers="r9c1-t13 r1c2-t13">
<p>Yes</p>
</td>
<td class="cellalignment1911" headers="r9c1-t13 r1c3-t13">
<p>No</p>
</td>
<td class="cellalignment1911" headers="r9c1-t13 r1c4-t13">
<p>-</p>
</td>
</tr>
<tr class="cellalignment1905">
<td class="cellalignment1911" id="r10c1-t13" headers="r1c1-t13">
<p>Keywords</p>
</td>
<td class="cellalignment1911" headers="r10c1-t13 r1c2-t13">
<p>Yes</p>
</td>
<td class="cellalignment1911" headers="r10c1-t13 r1c3-t13">
<p>No</p>
</td>
<td class="cellalignment1911" headers="r10c1-t13 r1c4-t13">
<p>Can be expressed in English ASCII or EBCDIC characters only</p>
</td>
</tr>
<tr class="cellalignment1905">
<td class="cellalignment1911" id="r11c1-t13" headers="r1c1-t13">
<p>Recovery Manager file names</p>
</td>
<td class="cellalignment1911" headers="r11c1-t13 r1c2-t13">
<p>Yes</p>
</td>
<td class="cellalignment1911" headers="r11c1-t13 r1c3-t13">
<p>No</p>
</td>
<td class="cellalignment1911" headers="r11c1-t13 r1c4-t13">
<p>-</p>
</td>
</tr>
<tr class="cellalignment1905">
<td class="cellalignment1911" id="r12c1-t13" headers="r1c1-t13">
<p>Rollback segment names</p>
</td>
<td class="cellalignment1911" headers="r12c1-t13 r1c2-t13">
<p>Yes</p>
</td>
<td class="cellalignment1911" headers="r12c1-t13 r1c3-t13">
<p>No</p>
</td>
<td class="cellalignment1911" headers="r12c1-t13 r1c4-t13">
<p>The <code>ROLLBACK_SEGMENTS</code> parameter does not support NLS</p>
</td>
</tr>
<tr class="cellalignment1905">
<td class="cellalignment1911" id="r13c1-t13" headers="r1c1-t13">
<p>Stored script names</p>
</td>
<td class="cellalignment1911" headers="r13c1-t13 r1c2-t13">
<p>Yes</p>
</td>
<td class="cellalignment1911" headers="r13c1-t13 r1c3-t13">
<p>Yes</p>
</td>
<td class="cellalignment1911" headers="r13c1-t13 r1c4-t13">
<p>-</p>
</td>
</tr>
<tr class="cellalignment1905">
<td class="cellalignment1911" id="r14c1-t13" headers="r1c1-t13">
<p>Tablespace names</p>
</td>
<td class="cellalignment1911" headers="r14c1-t13 r1c2-t13">
<p>Yes</p>
</td>
<td class="cellalignment1911" headers="r14c1-t13 r1c3-t13">
<p>No</p>
</td>
<td class="cellalignment1911" headers="r14c1-t13 r1c4-t13">
<p>-</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformalwide" -->
<p>For a list of supported string formats and character sets, including LOB data (<code>LOB</code>, <code>BLOB</code>, <code>CLOB</code>, and <code>NCLOB</code>), see <a href="#g1009747">Table 2-7</a>.</p>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="NLSPG178"></a>
<div class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref86"></a>
<h3 class="sect2">Database Character Set Statement of Direction</h3>
<p>A list of character sets has been compiled in <a href="applocaledata.htm#CIAEICDE">Table A-4, "Recommended ASCII Database Character Sets"</a> and <a href="applocaledata.htm#CIAJAGCB">Table A-5, "Recommended EBCDIC Database Character Sets"</a> that Oracle strongly recommends for usage as the database character set. Other Oracle-supported character sets that do not appear on this list can continue to be used in Oracle Database 11<span class="italic">g</span> Release 2, but may be desupported in a future release. Starting with Oracle Database 11<span class="italic">g</span> Release 1, the choice for the database character set is limited to this list of recommended character sets in common installation paths of Oracle Universal Installer and Oracle Database Configuration Assistant. Customers are still able to create new databases using custom installation paths and migrate their existing databases even if the character set is not on the recommended list. However, Oracle suggests that customers migrate to a recommended character set as soon as possible. At the top of the list of character sets that Oracle recommends for all new system deployment, is the Unicode character set AL32UTF8.</p>
</div>
<!-- class="sect2" -->
<a id="NLSPG179"></a>
<div class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref87"></a>
<h3 class="sect2">Choosing Unicode as a Database Character Set</h3>
<p>Oracle recommends using Unicode for all new system deployments. Migrating legacy systems to Unicode is also recommended. Deploying your systems today in Unicode offers many advantages in usability, compatibility, and extensibility. Oracle Database enables you to deploy high-performing systems faster and more easily while utilizing the advantages of Unicode. Even if you do not need to support multilingual data today, nor have any requirement for Unicode, it is still likely to be the best choice for a new system in the long run and will ultimately save you time and money as well as give you competitive advantages in the long term. See <a href="ch6unicode.htm#g1014017">Chapter 6, "Supporting Multilingual Databases with Unicode"</a> for more information about Unicode.</p>
</div>
<!-- class="sect2" -->
<a id="i1007017"></a><a id="NLSPG180"></a>
<div class="sect2">
<h3 class="sect2">Choosing a National Character Set</h3>
<p>The term <span class="bold">national character set</span> <a id="sthref88"></a><a id="sthref89"></a>refers to an alternative character set that enables you to store Unicode character data in a database that does not have a Unicode database character set. Other reasons for choosing a national character set are:</p>
<ul>
<li>
<p>The properties of a different character encoding scheme may be more desirable for extensive character processing operations.</p>
</li>
<li>
<p>Programming in the national character set is easier.</p>
</li>
</ul>
<p>SQL <code>NCHAR</code>, <code>NVARCHAR2</code>, and <code>NCLOB</code> data types support Unicode data only. You can use either the UTF8 or the AL16UTF16 character set. The default is AL16UTF16.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="ch6unicode.htm#g1014017">Chapter 6, "Supporting Multilingual Databases with Unicode"</a></div>
</div>
<!-- class="sect2" -->
<a id="i1007034"></a><a id="NLSPG181"></a>
<div class="sect2">
<h3 class="sect2"><a id="sthref90"></a>Summary of Supported Data Types<a id="sthref91"></a><a id="sthref92"></a></h3>
<p><a href="#g1009694">Table 2-6</a> lists the data types that are supported for different encoding schemes.</p>
<div class="tblformalmax">
<p class="titleintable"><a id="NLSPG708"></a><a id="sthref93"></a><a id="g1009694"></a>Table 2-6 SQL Data Types Supported for Encoding Schemes</p>
<table class="cellalignment1914" title="SQL Data Types Supported for Encoding Schemes" summary="This table is described in the preceding text" dir="ltr">
<thead>
<tr class="cellalignment1905">
<th class="cellalignment1915" id="r1c1-t15">Data Type</th>
<th class="cellalignment1915" id="r1c2-t15">Single Byte</th>
<th class="cellalignment1915" id="r1c3-t15">Multibyte Non-Unicode</th>
<th class="cellalignment1915" id="r1c4-t15">Multibyte Unicode</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1905">
<td class="cellalignment1911" id="r2c1-t15" headers="r1c1-t15">
<p><code>CHAR</code></p>
</td>
<td class="cellalignment1911" headers="r2c1-t15 r1c2-t15">
<p>Yes</p>
</td>
<td class="cellalignment1911" headers="r2c1-t15 r1c3-t15">
<p>Yes</p>
</td>
<td class="cellalignment1911" headers="r2c1-t15 r1c4-t15">
<p>Yes</p>
</td>
</tr>
<tr class="cellalignment1905">
<td class="cellalignment1911" id="r3c1-t15" headers="r1c1-t15">
<p><code>VARCHAR2</code></p>
</td>
<td class="cellalignment1911" headers="r3c1-t15 r1c2-t15">
<p>Yes</p>
</td>
<td class="cellalignment1911" headers="r3c1-t15 r1c3-t15">
<p>Yes</p>
</td>
<td class="cellalignment1911" headers="r3c1-t15 r1c4-t15">
<p>Yes</p>
</td>
</tr>
<tr class="cellalignment1905">
<td class="cellalignment1911" id="r4c1-t15" headers="r1c1-t15">
<p><code>NCHAR</code></p>
</td>
<td class="cellalignment1911" headers="r4c1-t15 r1c2-t15">
<p>No</p>
</td>
<td class="cellalignment1911" headers="r4c1-t15 r1c3-t15">
<p>No</p>
</td>
<td class="cellalignment1911" headers="r4c1-t15 r1c4-t15">
<p>Yes</p>
</td>
</tr>
<tr class="cellalignment1905">
<td class="cellalignment1911" id="r5c1-t15" headers="r1c1-t15">
<p><code>NVARCHAR2</code></p>
</td>
<td class="cellalignment1911" headers="r5c1-t15 r1c2-t15">
<p>No</p>
</td>
<td class="cellalignment1911" headers="r5c1-t15 r1c3-t15">
<p>No</p>
</td>
<td class="cellalignment1911" headers="r5c1-t15 r1c4-t15">
<p>Yes</p>
</td>
</tr>
<tr class="cellalignment1905">
<td class="cellalignment1911" id="r6c1-t15" headers="r1c1-t15">
<p><code>BLOB</code></p>
</td>
<td class="cellalignment1911" headers="r6c1-t15 r1c2-t15">
<p>Yes</p>
</td>
<td class="cellalignment1911" headers="r6c1-t15 r1c3-t15">
<p>Yes</p>
</td>
<td class="cellalignment1911" headers="r6c1-t15 r1c4-t15">
<p>Yes</p>
</td>
</tr>
<tr class="cellalignment1905">
<td class="cellalignment1911" id="r7c1-t15" headers="r1c1-t15">
<p><code>CLOB</code></p>
</td>
<td class="cellalignment1911" headers="r7c1-t15 r1c2-t15">
<p>Yes</p>
</td>
<td class="cellalignment1911" headers="r7c1-t15 r1c3-t15">
<p>Yes</p>
</td>
<td class="cellalignment1911" headers="r7c1-t15 r1c4-t15">
<p>Yes</p>
</td>
</tr>
<tr class="cellalignment1905">
<td class="cellalignment1911" id="r8c1-t15" headers="r1c1-t15">
<p><code>LONG</code></p>
</td>
<td class="cellalignment1911" headers="r8c1-t15 r1c2-t15">
<p>Yes</p>
</td>
<td class="cellalignment1911" headers="r8c1-t15 r1c3-t15">
<p>Yes</p>
</td>
<td class="cellalignment1911" headers="r8c1-t15 r1c4-t15">
<p>Yes</p>
</td>
</tr>
<tr class="cellalignment1905">
<td class="cellalignment1911" id="r9c1-t15" headers="r1c1-t15">
<p><code>NCLOB</code></p>
</td>
<td class="cellalignment1911" headers="r9c1-t15 r1c2-t15">
<p>No</p>
</td>
<td class="cellalignment1911" headers="r9c1-t15 r1c3-t15">
<p>No</p>
</td>
<td class="cellalignment1911" headers="r9c1-t15 r1c4-t15">
<p>Yes</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformalmax" -->
<div class="infobox-note">
<p class="notep1"><span class="bold">Note</span>:</p>
<code>BLOBs</code> process characters as a series of byte sequences. The data is not subject to any NLS-sensitive operations.</div>
<p><a href="#g1009747">Table 2-7</a> lists the SQL data types that are supported for abstract data types.</p>
<div class="tblformalmax">
<p class="titleintable"><a id="NLSPG709"></a><a id="sthref94"></a><a id="g1009747"></a>Table 2-7 Abstract Data Type Support for SQL Data Types</p>
<table class="cellalignment1914" title="Abstract Data Type Support for SQL Data Types" summary="This table is described in the preceding text" dir="ltr">
<thead>
<tr class="cellalignment1905">
<th class="cellalignment1915" id="r1c1-t17">Abstract Data Type</th>
<th class="cellalignment1915" id="r1c2-t17">CHAR</th>
<th class="cellalignment1915" id="r1c3-t17">NCHAR</th>
<th class="cellalignment1915" id="r1c4-t17">BLOB</th>
<th class="cellalignment1915" id="r1c5-t17">CLOB</th>
<th class="cellalignment1915" id="r1c6-t17">NCLOB</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1905">
<td class="cellalignment1911" id="r2c1-t17" headers="r1c1-t17">
<p>Object</p>
</td>
<td class="cellalignment1911" headers="r2c1-t17 r1c2-t17">
<p>Yes</p>
</td>
<td class="cellalignment1911" headers="r2c1-t17 r1c3-t17">
<p>Yes</p>
</td>
<td class="cellalignment1911" headers="r2c1-t17 r1c4-t17">
<p>Yes</p>
</td>
<td class="cellalignment1911" headers="r2c1-t17 r1c5-t17">
<p>Yes</p>
</td>
<td class="cellalignment1911" headers="r2c1-t17 r1c6-t17">
<p>Yes</p>
</td>
</tr>
<tr class="cellalignment1905">
<td class="cellalignment1911" id="r3c1-t17" headers="r1c1-t17">
<p>Collection</p>
</td>
<td class="cellalignment1911" headers="r3c1-t17 r1c2-t17">
<p>Yes</p>
</td>
<td class="cellalignment1911" headers="r3c1-t17 r1c3-t17">
<p>Yes</p>
</td>
<td class="cellalignment1911" headers="r3c1-t17 r1c4-t17">
<p>Yes</p>
</td>
<td class="cellalignment1911" headers="r3c1-t17 r1c5-t17">
<p>Yes</p>
</td>
<td class="cellalignment1911" headers="r3c1-t17 r1c6-t17">
<p>Yes</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformalmax" -->
<p>You can create an abstract <a id="sthref95"></a><a id="sthref96"></a>data type with the <code>NCHAR</code> attribute as follows:</p>
<pre>
SQL&gt; CREATE TYPE tp1 AS OBJECT (a NCHAR(10));
Type created.
SQL&gt; CREATE TABLE t1 (a tp1);
Table created.
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink ADOBJ" href="../../appdev.112/e11822/toc.htm"><span class="italic">Oracle Database Object-Relational Developer's Guide</span></a> for more information about objects and collections</div>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="i1007203"></a><a id="NLSPG182"></a>
<div class="sect1">
<h2 class="sect1">Changing the Character Set After Database Creation</h2>
<p>You<a id="sthref97"></a> may want to change the database character set after the database has been created. For example, you may find that the number of languages that need to be supported in your database has increased. In most cases, you must do a full export/import to properly convert all data to the new character set. However, if, and only if, the new character set is a strict superset of all of the schema data, then it is possible to use the <code>CSALTER</code> script to expedite the change in the database character set.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="ch11charsetmig.htm#g1011430">Chapter 11, "Character Set Migration"</a></p>
</li>
<li>
<p><a class="olink UPGRD" href="../e23633/toc.htm"><span class="italic">Oracle Database Upgrade Guide</span></a> for more information about exporting and importing data</p>
</li>
<li>
<p><a class="olink STRMS165" href="../../server.112/e17069/ap_strmnt.htm#STRMS165"><span class="italic">Oracle Streams Concepts and Administration</span></a> for information about using Streams to change the character set of a database while the database remains online</p>
</li>
</ul>
</div>
</div>
<!-- class="sect1" -->
<a id="i1007228"></a><a id="NLSPG183"></a>
<div class="sect1">
<h2 class="sect1">Monolingual Database Scenario</h2>
<p>The simplest example of a database configuration is a client and a server that run in the same language environment and use the same character set. This monolingual scenario has the advantage of fast response because the overhead associated with character set conversion is avoided. <a href="#i1007234">Figure 2-3</a> shows a database server and a client that use the same character set. The Japanese client and the server both use the JA16EUC character set.</p>
<div class="figure">
<p class="titleinfigure"><a id="i1007234"></a><a id="NLSPG710"></a>Figure 2-3 Monolingual Database Scenario</p>
<img width="600" height="97" src="img/nlspg025.gif" alt="Description of Figure 2-3 follows" /><br />
<a id="sthref98" href="./img_text/nlspg025.htm">Description of "Figure 2-3 Monolingual Database Scenario"</a><br />
<br /></div>
<!-- class="figure" -->
<p>You can also use a multitier architecture. <a href="#i1007245">Figure 2-4</a> shows an application server between the database server and the client. The application server and the database server use the same character set in a monolingual scenario. The server, the application server, and the client use the JA16EUC character set.</p>
<div class="figure">
<p class="titleinfigure"><a id="i1007245"></a><a id="NLSPG711"></a>Figure 2-4 Multitier Monolingual Database Scenario</p>
<img width="600" height="140" src="img/nlspg026.gif" alt="Description of Figure 2-4 follows" /><br />
<a id="sthref99" href="./img_text/nlspg026.htm">Description of "Figure 2-4 Multitier Monolingual Database Scenario"</a><br />
<br /></div>
<!-- class="figure" -->
<a id="i1007253"></a><a id="NLSPG184"></a>
<div class="sect2">
<h3 class="sect2"><a id="sthref100"></a>Character Set Conversion in a Monolingual Scenario</h3>
<p>Character set conversion may be required in a client/server environment if a client application resides on a different platform than the server and if the platforms do not use the same character encoding schemes. Character data passed between client and server must be converted between the two encoding schemes. Character conversion occurs automatically and transparently through Oracle Net.</p>
<p>You can convert between any two character sets. <a href="#i1007260">Figure 2-5</a> shows a server and one client with the JA16EUC Japanese character set. The other client uses the JA16SJIS Japanese character set.</p>
<div class="figure">
<p class="titleinfigure"><a id="i1007260"></a><a id="NLSPG712"></a>Figure 2-5 Character Set Conversion</p>
<img width="600" height="219" src="img/nlspg027.gif" alt="Description of Figure 2-5 follows" /><br />
<a id="sthref101" href="./img_text/nlspg027.htm">Description of "Figure 2-5 Character Set Conversion"</a><br />
<br /></div>
<!-- class="figure" -->
<p>When a target character set does not contain all of the characters in the source data, replacement characters are used. If, for example, a server uses US7ASCII and a German client uses WE8ISO8859P1, then the German character <code>&szlig;</code> is replaced with <code>?</code> and <code>&auml;</code> is replaced with <code>a</code>.</p>
<p>Replacement characters may be defined for specific characters as part of a character set definition. When a specific replacement character is not defined, a default replacement character is used. To avoid the use of replacement characters when converting from a client character set to a database character set, the server character set should be a superset of all the client character sets.</p>
<p><a href="#i1007272">Figure 2-6</a> shows that data loss occurs when the database character set does not include all of the characters in the client character set. The database character set is US7ASCII. The client's character set is WE8MSWIN1252, and the language used by the client is German. When the client inserts a string that contains <code>&szlig;</code>, the database replaces <code>&szlig;</code> with <code>?</code>, resulting in lost data.</p>
<div class="figure">
<p class="titleinfigure"><a id="i1007272"></a><a id="NLSPG713"></a>Figure 2-6 Data Loss During Character Conversion</p>
<img width="600" height="302" src="img/nlspg033.gif" alt="Description of Figure 2-6 follows" /><br />
<a id="sthref102" href="./img_text/nlspg033.htm">Description of "Figure 2-6 Data Loss During Character Conversion"</a><br />
<br /></div>
<!-- class="figure" -->
<p>If German data is expected to be stored on the server, then a database character set that supports German characters should be used for both the server and the client to avoid data loss and conversion overhead.</p>
<p>When one of the character sets is a variable-width multibyte character set, conversion can introduce noticeable overhead. Carefully evaluate your situation and choose character sets to avoid conversion as much as possible.</p>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="i1007281"></a><a id="NLSPG185"></a>
<div class="sect1">
<h2 class="sect1">Multilingual Database Scenarios</h2>
<p>Multilingual support can be restricted or unrestricted. This section contains the following topics:</p>
<ul>
<li>
<p><a href="#i1007292">Restricted Multilingual Support</a></p>
</li>
<li>
<p><a href="#i1007323">Unrestricted Multilingual Support</a></p>
</li>
</ul>
<a id="i1007292"></a><a id="NLSPG186"></a>
<div class="sect2">
<h3 class="sect2">Restricted Multilingual <a id="sthref103"></a>Support</h3>
<p>Some character sets support multiple languages because they have related writing systems or scripts. For example, the Oracle Database WE8ISO8859P1 character set supports the following Western European languages:</p>
<dl>
<dd>Catalan</dd>
<dd>Danish</dd>
<dd>Dutch</dd>
<dd>English</dd>
<dd>Finnish</dd>
<dd>French</dd>
<dd>German</dd>
<dd>Icelandic</dd>
<dd>Italian</dd>
<dd>Norwegian</dd>
<dd>Portuguese</dd>
<dd>Spanish</dd>
<dd>Swedish</dd>
</dl>
<p>These languages all use a Latin-based writing script.</p>
<p>When you use a character set that supports a group of languages, your database has <span class="bold"><a id="sthref104"></a><a id="sthref105"></a>restricted multilingual support</span>.</p>
<p><a href="#i1007317">Figure 2-7</a> shows a Western European server that used the WE8ISO8850P1 Oracle Database character set, a French client that uses the same character set as the server, and a German client that uses the WE8DEC character set. The German client requires character conversion because it is using a different character set than the server.</p>
<div class="figure">
<p class="titleinfigure"><a id="i1007317"></a><a id="NLSPG714"></a>Figure 2-7 Restricted Multilingual Support</p>
<img width="600" height="262" src="img/nlspg028.gif" alt="Description of Figure 2-7 follows" /><br />
<a id="sthref106" href="./img_text/nlspg028.htm">Description of "Figure 2-7 Restricted Multilingual Support"</a><br />
<br /></div>
<!-- class="figure" --></div>
<!-- class="sect2" -->
<a id="i1007323"></a><a id="NLSPG187"></a>
<div class="sect2">
<h3 class="sect2">Unrestricted <a id="sthref107"></a><a id="sthref108"></a>Multilingual Support</h3>
<p>If you need unrestricted multilingual support, then use a universal character set such as Unicode for the server database character set. Unicode has two major encoding schemes:</p>
<ul>
<li>
<p>UTF-16: Each character is either 2 or 4 bytes long.</p>
</li>
<li>
<p>UTF-8: Each character takes 1 to 4 bytes to store.</p>
</li>
</ul>
<p>Oracle Database provides support for UTF-8 as a database character set and both UTF-8 and UTF-16 as national character sets.</p>
<p>Character set conversion between a UTF-8 database and any single-byte character set introduces very little overhead.</p>
<p>Conversion between UTF-8 and any multibyte character set has some overhead. There is no data loss from conversion, with the following exceptions:</p>
<ul>
<li>
<p>Some multibyte character sets do not support user-defined characters during character set conversion to and from UTF-8.</p>
</li>
<li>
<p>Some Unicode characters are mapped to more than one character in another character set. For example, one Unicode character is mapped to three characters in the JA16SJIS character set. This means that a round-trip conversion may not result in the original JA16SJIS character.</p>
</li>
</ul>
<p><a href="#i1007338">Figure 2-8</a> shows a server that uses the AL32UTF8 Oracle Database character set that is based on the Unicode UTF-8 character set.</p>
<div class="figure">
<p class="titleinfigure"><a id="i1007338"></a><a id="NLSPG715"></a>Figure 2-8 Unrestricted Multilingual Support Scenario in a Client/Server Configuration</p>
<img width="600" height="406" src="img/nlspg029.gif" alt="Description of Figure 2-8 follows" /><br />
<a id="sthref109" href="./img_text/nlspg029.htm">Description of "Figure 2-8 Unrestricted Multilingual Support Scenario in a Client/Server Configuration"</a><br />
<br /></div>
<!-- class="figure" -->
<p>There are four clients:</p>
<ul>
<li>
<p>A French client that uses the WE8ISO8859P1 Oracle Database character set</p>
</li>
<li>
<p>A German client that uses the WE8DEC character set</p>
</li>
<li>
<p>A Japanese client that uses the JA16EUC character set</p>
</li>
<li>
<p>A Japanese client that used the JA16SJIS character set</p>
</li>
</ul>
<p>Character conversion takes place between each client and the server, but there is no data loss because AL32UTF8 is a universal character set. If the German client tries to retrieve data from one of the Japanese clients, then all of the Japanese characters in the data are lost during the character set conversion.</p>
<p><a href="#i1007354">Figure 2-9</a> shows a Unicode solution for a multitier configuration.</p>
<div class="figure">
<p class="titleinfigure"><a id="i1007354"></a><a id="NLSPG716"></a>Figure 2-9 Multitier Unrestricted Multilingual Support Scenario in a Multitier Configuration</p>
<img width="600" height="346" src="img/nlspg030.gif" alt="Description of Figure 2-9 follows" /><br />
<a id="sthref110" href="./img_text/nlspg030.htm">Description of "Figure 2-9 Multitier Unrestricted Multilingual Support Scenario in a Multitier Configuration"</a><br />
<br /></div>
<!-- class="figure" -->
<p>The database, the application server, and each client use the AL32UTF8 character set. This eliminates the need for character conversion even though the clients are French, German, and Japanese.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="ch6unicode.htm#g1014017">Chapter 6, "Supporting Multilingual Databases with Unicode"</a></div>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment1904">
<tr>
<td class="cellalignment1911">
<table class="cellalignment1909">
<tr>
<td class="cellalignment1908"><a href="ch1overview.htm"><img width="24" height="24" src="../../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment1908"><a href="ch3globenv.htm"><img width="24" height="24" src="../../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;1996, 2013,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment1913">
<table class="cellalignment1907">
<tr>
<td class="cellalignment1908"><a href="../../index.htm"><img width="24" height="24" src="../../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment1908"><a href="../../nav/portal_booklist.htm"><img width="24" height="24" src="../../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment1908"><a href="toc.htm"><img width="24" height="24" src="../../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment1908"><a href="index.htm"><img width="24" height="24" src="../../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment1908"><a href="../../nav/mindx.htm"><img width="24" height="24" src="../../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment1908"><a href="../../dcommon/html/feedback.htm"><img width="24" height="24" src="../../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>
</body>
</html>
