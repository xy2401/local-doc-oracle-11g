<!DOCTYPE html>
<html lang="en" >
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1">
<meta charset="utf-8">
<title>SQL and PL/SQL Programming in a Global Environment</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Version 5.1.2 Build 070" />
<meta name="dcterms.created" content="2013-07-05T0:14:31Z" />
<meta name="robots" content="all" />
<meta name="dcterms.title" content="Database Globalization Support Guide" />
<meta name="dcterms.identifier" content="E10729-08" />
<meta name="dcterms.isVersionOf" content="NLSPG" />
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;1996, 2013,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved." />
<link rel="Start" href="../../index.htm" title="Home" type="text/html" />
<link rel="Copyright" href="../../dcommon/html/cpyr.htm" title="Copyright" type="text/html" />

<script type="application/javascript"  src="../../dcommon/js/headfoot.js"></script>
<script type="application/javascript"  src="../../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html" />
<link rel="Index" href="index.htm" title="Index" type="text/html" />
<link rel="Glossary" href="glossary.htm" title="Glossary" type="text/html" />
<link rel="Prev" href="ch8gdk.htm" title="Previous" type="text/html" />
<link rel="Next" href="ch10oci.htm" title="Next" type="text/html" />
<link rel="alternate" href="../e10729.pdf" title="PDF version" type="application/pdf" />
<link rel="schema.dcterms" href="http://purl.org/dc/terms/" />
<link rel="stylesheet" href="../../dcommon/css/fusiondoc.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/header.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/footer.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/fonts.css">
<link rel="stylesheet" href="../../dcommon/css/foundation.css">
<link rel="stylesheet" href="../../dcommon/css/codemirror.css">
<link rel="stylesheet" type="text/css" title="Default" href="../../nav/css/html5.css">
<link rel="stylesheet" href="../../dcommon/css/respond-480-tablet.css">
<link rel="stylesheet" href="../../dcommon/css/respond-768-laptop.css">
<link rel="stylesheet" href="../../dcommon/css/respond-1140-deskop.css">
<script type="application/javascript" src="../../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">13/21</span> <!-- End Header --><a id="g1012219"></a><a id="NLSPG009"></a><a id="i1007043"></a>
<h1 class="chapter"><span class="secnum">9</span> SQL and PL/SQL Programming in a Global Environment</h1>
<p>This chapter contains information useful for SQL programming in a globalization support environment. This chapter includes the following topics:</p>
<ul>
<li>
<p><a href="#i1005917">Locale-Dependent SQL Functions with Optional NLS Parameters</a></p>
</li>
<li>
<p><a href="#CIHHJBGF">Other Locale-Dependent SQL Functions</a></p>
</li>
<li>
<p><a href="#i1006424">Miscellaneous Topics for SQL and PL/SQL Programming in a Global Environment</a></p>
</li>
</ul>
<a id="i1005917"></a><a id="NLSPG429"></a>
<div class="sect1">
<h2 class="sect1">Locale-Dependent SQL Functions with Optional NLS Parameters</h2>
<p>NLS parameters can be specified for all SQL functions whose behavior depends on globalization support conventions. These functions are:</p>
<dl>
<dd><code><a id="sthref904"></a><a id="sthref905"></a>TO_CHAR</code></dd>
<dd><code><a id="sthref906"></a><a id="sthref907"></a>TO_DATE</code></dd>
<dd><code><a id="sthref908"></a><a id="sthref909"></a>TO_NUMBER</code></dd>
<dd><code><a id="sthref910"></a><a id="sthref911"></a>NLS_UPPER</code></dd>
<dd><code><a id="sthref912"></a><a id="sthref913"></a>NLS_LOWER</code></dd>
<dd><code><a id="sthref914"></a><a id="sthref915"></a>NLS_INITCAP</code></dd>
<dd><code><a id="sthref916"></a><a id="sthref917"></a>NLSSORT</code></dd>
</dl>
<p>Explicitly specifying the optional NLS parameters for these functions enables the functions to be evaluated independently of the session's NLS parameters. This feature can be important for SQL statements that contain numbers and dates as string literals.</p>
<p>For example, the following query is evaluated correctly if the language specified for dates is <code>AMERICAN</code>:</p>
<pre>
SELECT last_name FROM employees WHERE hire_date &gt; '01-JAN-2005';
</pre>
<p>Such a query can be made independent of the current date language by using a statement similar to the following:</p>
<pre>
SELECT last_name FROM employees
     WHERE hire_date &gt; TO_DATE('01-JAN-2005','DD-MON-YYYY',
     'NLS_DATE_LANGUAGE = AMERICAN');
</pre>
<p>In this way, SQL statements that are independent of the session language can be defined where necessary. Such statements are necessary when string literals appear in SQL statements in views, <code>CHECK</code> constraints, or triggers.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
Only SQL statements that must be independent of the session NLS parameter values should explicitly specify optional NLS parameters in locale-dependent SQL functions. Using session default values for NLS parameters in SQL functions usually results in better performance.</div>
<p>All character functions support both single-byte and multibyte characters. Except where explicitly stated, character functions operate character by character, rather than byte by byte.</p>
<p>The rest of this section includes the following topics:</p>
<ul>
<li>
<p><a href="#CIHGBBBA">Default Values for NLS Parameters in SQL Functions</a></p>
</li>
<li>
<p><a href="#i1005962">Specifying NLS Parameters in SQL Functions</a></p>
</li>
<li>
<p><a href="#i1006071">Unacceptable NLS Parameters in SQL Functions</a></p>
</li>
</ul>
<a id="CIHGBBBA"></a><a id="NLSPG430"></a>
<div class="sect2">
<h3 class="sect2">Default Values for <a id="sthref918"></a><a id="sthref919"></a>NLS Parameters in SQL Functions</h3>
<p>When SQL functions evaluate views and triggers, default values from the current session are used for the NLS function parameters. When SQL functions evaluate <code>CHECK</code> constraints, they use the default values that were specified for the NLS parameters when the database was created.</p>
</div>
<!-- class="sect2" -->
<a id="i1005962"></a><a id="NLSPG431"></a>
<div class="sect2">
<h3 class="sect2">Specifying NLS <a id="sthref920"></a><a id="sthref921"></a>Parameters in SQL Functions</h3>
<p>NLS parameters are specified in SQL functions as follows:</p>
<pre>
'<span class="codeinlineitalic">parameter</span> = <span class="codeinlineitalic">value</span>'
</pre>
<p>For example:</p>
<pre>
'NLS_DATE_LANGUAGE = AMERICAN'
</pre>
<p>The following NLS parameters can be specified in SQL functions:</p>
<dl>
<dd><code>NLS_DATE_LANGUAGE</code></dd>
<dd><code>NLS_NUMERIC_CHARACTERS</code></dd>
<dd><code>NLS_CURRENCY</code></dd>
<dd><code>NLS_ISO_CURRENCY</code></dd>
<dd><code>NLS_DUAL_CURRENCY</code></dd>
<dd><code>NLS_CALENDAR</code></dd>
<dd><code>NLS_SORT</code></dd>
</dl>
<p><a href="#CIHDAACF">Table 9-1</a> shows which NLS parameters are valid for specific SQL functions.</p>
<div class="tblformal">
<p class="titleintable"><a id="NLSPG842"></a><a id="sthref922"></a><a id="CIHDAACF"></a>Table 9-1 SQL Functions and Their Valid NLS Parameters</p>
<table class="cellalignment1916" title="SQL Functions and Their Valid NLS Parameters " summary="This table is described in the preceding text" dir="ltr">
<thead>
<tr class="cellalignment1905">
<th class="cellalignment1915" id="r1c1-t3">SQL Function</th>
<th class="cellalignment1915" id="r1c2-t3">Valid NLS Parameters</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1905">
<td class="cellalignment1911" id="r2c1-t3" headers="r1c1-t3">
<p><code>TO_DATE</code></p>
</td>
<td class="cellalignment1911" headers="r2c1-t3 r1c2-t3">
<p><code>NLS_DATE_LANGUAGE NLS_CALENDAR</code></p>
</td>
</tr>
<tr class="cellalignment1905">
<td class="cellalignment1911" id="r3c1-t3" headers="r1c1-t3">
<p><code>TO_NUMBER</code></p>
</td>
<td class="cellalignment1911" headers="r3c1-t3 r1c2-t3">
<p><code>NLS_NUMERIC_CHARACTERS NLS_CURRENCY NLS_DUAL_CURRENCY NLS_ISO_CURRENCY</code></p>
</td>
</tr>
<tr class="cellalignment1905">
<td class="cellalignment1911" id="r4c1-t3" headers="r1c1-t3">
<p><code>TO_CHAR</code></p>
</td>
<td class="cellalignment1911" headers="r4c1-t3 r1c2-t3">
<p><code>NLS_DATE_LANGUAGE NLS_NUMERIC_CHARACTERS NLS_CURRENCY NLS_ISO_CURRENCY NLS_DUAL_CURRENCY NLS_CALENDAR</code></p>
</td>
</tr>
<tr class="cellalignment1905">
<td class="cellalignment1911" id="r5c1-t3" headers="r1c1-t3">
<p><code>TO_NCHAR</code></p>
</td>
<td class="cellalignment1911" headers="r5c1-t3 r1c2-t3">
<p><code>NLS_DATE_LANGUAGE NLS_NUMERIC_CHARACTERS NLS_CURRENCY NLS_ISO_CURRENCY NLS_DUAL_CURRENCY NLS_CALENDAR</code></p>
</td>
</tr>
<tr class="cellalignment1905">
<td class="cellalignment1911" id="r6c1-t3" headers="r1c1-t3">
<p><code>NLS_UPPER</code></p>
</td>
<td class="cellalignment1911" headers="r6c1-t3 r1c2-t3">
<p><code>NLS_SORT</code></p>
</td>
</tr>
<tr class="cellalignment1905">
<td class="cellalignment1911" id="r7c1-t3" headers="r1c1-t3">
<p><code>NLS_LOWER</code></p>
</td>
<td class="cellalignment1911" headers="r7c1-t3 r1c2-t3">
<p><code>NLS_SORT</code></p>
</td>
</tr>
<tr class="cellalignment1905">
<td class="cellalignment1911" id="r8c1-t3" headers="r1c1-t3">
<p><code>NLS_INITCAP</code></p>
</td>
<td class="cellalignment1911" headers="r8c1-t3 r1c2-t3">
<p><code>NLS_SORT</code></p>
</td>
</tr>
<tr class="cellalignment1905">
<td class="cellalignment1911" id="r9c1-t3" headers="r1c1-t3">
<p><code>NLSSORT</code></p>
</td>
<td class="cellalignment1911" headers="r9c1-t3 r1c2-t3">
<p><code>NLS_SORT</code></p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<p>The following examples show how to use NLS parameters in SQL functions:</p>
<pre>
TO_DATE ('1-JAN-99', 'DD-MON-YY',
   'nls_date_language = American')

TO_CHAR (hire_date, 'DD/MON/YYYY',
   'nls_date_language = French')

TO_CHAR (SYSDATE, 'DD/MON/YYYY',
    'nls_date_language=''Traditional Chinese'' ')

TO_NUMBER ('13.000,00', '99G999D99',
   'nls_numeric_characters = '',.''')

TO_CHAR (salary, '9G999D99L', 'nls_numeric_characters = '',.''
   nls_currency = ''EUR''')

TO_CHAR (salary, '9G999D99C', 'nls_numeric_characters = ''.,''
   nls_iso_currency = Japan')

NLS_UPPER (last_name, 'nls_sort = Swiss')

NLSSORT (last_name, 'nls_sort = German')
</pre>
<div class="infobox-note">
<p class="notep1"><span class="bold">Note</span>:</p>
In some languages, some lowercase characters correspond to more than one uppercase character or vice versa. As a result, the length of the output from the <code>NLS_UPPER</code>, <code>NLS_LOWER</code>, and <code>NLS_INITCAP</code> functions can differ from the length of the input.</div>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="ch5lingsort.htm#i1006394">"Special Uppercase Letters"</a></p>
</li>
<li>
<p><a href="ch5lingsort.htm#i1006416">"Special Lowercase Letters"</a></p>
</li>
</ul>
</div>
</div>
<!-- class="sect2" -->
<a id="i1006071"></a><a id="NLSPG432"></a>
<div class="sect2">
<h3 class="sect2">Unacceptable NLS Parameters in SQL Functions<a id="sthref923"></a><a id="sthref924"></a></h3>
<p>The following NLS parameters are not accepted in SQL functions except for <code>NLSSORT</code>:</p>
<ul>
<li>
<p><code>NLS_LANGUAGE</code></p>
</li>
<li>
<p><code>NLS_TERRITORY</code></p>
</li>
<li>
<p><code>NLS_DATE_FORMAT</code></p>
</li>
</ul>
<p><code>NLS_DATE_FORMAT</code> and <code>NLS_TERRITORY_FORMAT</code> are not accepted as parameters because they can interfere with required format masks. A date format must always be specified if an NLS parameter is in a <code>TO_CHAR</code> or <code>TO_DATE</code> function. As a result, <code>NLS_DATE_FORMAT</code> and <code>NLS_TERRITORY_FORMAT</code> are not valid NLS parameters for the <code>TO_CHAR</code> or <code>TO_DATE</code> functions. If you specify <code>NLS_DATE_FORMAT</code> or <code>NLS_TERRITORY_FORMAT</code> in the <code>TO_CHAR</code> or <code>TO_DATE</code> function, then an error is returned.</p>
<p><code>NLS_LANGUAGE</code> can interfere with the session value of <code>NLS_DATE_LANGUAGE</code>. If you specify <code>NLS_LANGUAGE</code> in the <code>TO_CHAR</code> function, for example, then its value is ignored if it differs from the session value of <code>NLS_DATE_LANGUAGE</code>.</p>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="CIHHJBGF"></a><a id="NLSPG433"></a>
<div class="sect1">
<h2 class="sect1">Other Locale-Dependent SQL Functions</h2>
<p>This section includes the following topics:</p>
<ul>
<li>
<p><a href="#i1006110">The CONVERT Function</a></p>
</li>
<li>
<p><a href="#i1006154">SQL Functions for Different Length Semantics</a></p>
</li>
<li>
<p><a href="#i1006229">LIKE Conditions for Different Length Semantics</a></p>
</li>
<li>
<p><a href="#i1006264">Character Set SQL Functions</a></p>
</li>
<li>
<p><a href="#i1006311">The NLSSORT Function</a></p>
</li>
</ul>
<a id="i1006110"></a><a id="NLSPG434"></a>
<div class="sect2">
<h3 class="sect2">The CONVER<a id="sthref925"></a><a id="sthref926"></a>T Function</h3>
<p><a id="sthref927"></a><a id="sthref928"></a><a id="sthref929"></a><a id="sthref930"></a>The <code>CONVERT</code> function enables conversion of character data between character sets.</p>
<p>The <code>CONVERT</code> function converts the binary representation of a character string in one character set to another. It uses exactly the same technique as conversion between database and client character sets. Hence, it uses <a id="sthref931"></a>replacement characters and has the same limitations.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="ch2charset.htm#i1006853">"Character Set Conversion Between Clients and the Server"</a></div>
<p>The syntax for <code>CONVERT</code> is as follows:</p>
<pre>
CONVERT(<span class="codeinlineitalic">char</span>, <span class="codeinlineitalic">dest_char_set</span>[, <span class="codeinlineitalic">source_char_set</span>])
</pre>
<p><code><span class="codeinlineitalic">char</span></code> is the value to be converted. <code><span class="codeinlineitalic">source_char_set</span></code> is the source character set and <code><span class="codeinlineitalic">dest_char_set</span></code> is the destination character set. If the <code><span class="codeinlineitalic">source_char_set</span></code> parameter is not specified, then it defaults to the database character set.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a class="olink SQLRF" href="../e41084/toc.htm"><span class="italic">Oracle Database SQL Language Reference</span></a> for more information about the <code>CONVERT</code> function</p>
</li>
<li>
<p><a href="applocaledata.htm#i636773">"Character Set Conversion Support"</a> for character set encodings that are used only for the <code>CONVERT</code> function</p>
</li>
</ul>
</div>
</div>
<!-- class="sect2" -->
<a id="i1006154"></a><a id="NLSPG435"></a>
<div class="sect2">
<h3 class="sect2">SQL Functions for Different Length Semantics</h3>
<p>Oracle provides SQL functions that work in accordance with different length semantics. There are three groups of such SQL functions: <code><a id="sthref932"></a><a id="sthref933"></a><a id="sthref934"></a><a id="sthref935"></a><a id="sthref936"></a><a id="sthref937"></a>SUBSTR</code>, <code>LENGTH</code>, and <code>INSTR</code>. Each function in a group is based on a different kind of length semantics and is distinguished by the character or number appended to the function name. For example, <code>SUBSTRB</code> is based on byte semantics.</p>
<p>The <code>SUBSTR</code> functions return a requested portion of a substring. The <code>LENGTH</code> functions return the length of a string. The <code>INSTR</code> functions search for a substring in a string.</p>
<p>The <code>SUBSTR</code> functions calculate the length of a string differently. <a href="#CIHBDIBC">Table 9-2</a> summarizes the calculation methods.</p>
<div class="tblformalwide">
<p class="titleintable"><a id="NLSPG843"></a><a id="sthref938"></a><a id="CIHBDIBC"></a>Table 9-2 How the SUBSTR Functions Calculate the Length of a String</p>
<table class="cellalignment1914" title="How the SUBSTR Functions Calculate the Length of a String " summary="This table is described in the preceding text" dir="ltr">
<thead>
<tr class="cellalignment1905">
<th class="cellalignment1915" id="r1c1-t8">Function</th>
<th class="cellalignment1915" id="r1c2-t8">Calculation Method</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1905">
<td class="cellalignment1911" id="r2c1-t8" headers="r1c1-t8">
<p><code><a id="sthref939"></a><a id="sthref940"></a>SUBSTR</code></p>
</td>
<td class="cellalignment1911" headers="r2c1-t8 r1c2-t8">
<p>Calculates the length of a string in characters based on the length semantics associated with the character set of the data type. For example, AL32UTF8 characters are calculated in UCS-4 characters. UTF8 and AL16UTF16 characters are calculated in UCS-2 characters. A supplementary character is counted as one character in AL32UTF8 and as two characters in UTF8 and AL16UTF16. Because <code>VARCHAR</code> and <code>NVARCHAR</code> may use different character sets, <code>SUBSTR</code> may give different results for different data types even if two strings are identical. If your application requires consistency, then use <code>SUBSTR2</code> or <code>SUBSTR4</code> to force all semantic calculations to be UCS-2 or UCS-4, respectively.</p>
</td>
</tr>
<tr class="cellalignment1905">
<td class="cellalignment1911" id="r3c1-t8" headers="r1c1-t8">
<p><code>S<a id="sthref941"></a><a id="sthref942"></a><a id="sthref943"></a>UBSTRB</code></p>
</td>
<td class="cellalignment1911" headers="r3c1-t8 r1c2-t8">
<p>Calculates the length of a string in bytes.</p>
</td>
</tr>
<tr class="cellalignment1905">
<td class="cellalignment1911" id="r4c1-t8" headers="r1c1-t8">
<p><code><a id="sthref944"></a><a id="sthref945"></a><a id="sthref946"></a>SUBSTR2</code></p>
</td>
<td class="cellalignment1911" headers="r4c1-t8 r1c2-t8">
<p>Calculates the length of a string in UCS-2 characters, which is compliant with Java strings and Windows client environments. Characters are represented in UCS-2 or 16-bit Unicode values. Supplementary characters are counted as two characters.</p>
</td>
</tr>
<tr class="cellalignment1905">
<td class="cellalignment1911" id="r5c1-t8" headers="r1c1-t8">
<p><code><a id="sthref947"></a><a id="sthref948"></a><a id="sthref949"></a>SUBSTR4</code></p>
</td>
<td class="cellalignment1911" headers="r5c1-t8 r1c2-t8">
<p>Calculates the length of a string in UCS-4 characters. Characters are represented in UCS-4 or 32-bit Unicode values. Supplementary characters are counted as one character.</p>
</td>
</tr>
<tr class="cellalignment1905">
<td class="cellalignment1911" id="r6c1-t8" headers="r1c1-t8">
<p><code><a id="sthref950"></a><a id="sthref951"></a><a id="sthref952"></a>SUBSTRC</code></p>
</td>
<td class="cellalignment1911" headers="r6c1-t8 r1c2-t8">
<p>Calculates the length of a string in Unicode composed characters. Supplementary characters and composed characters are counted as one character.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformalwide" -->
<p>The <code><a id="sthref953"></a><a id="sthref954"></a>LENGTH</code> and <code><a id="sthref955"></a><a id="sthref956"></a>INSTR</code> functions calculate string length in the same way, according to the character or number added to the function name.</p>
<p>The following examples demonstrate the differences between <code>SUBSTR</code> and <code>SUBSTRB</code> on a database whose character set is AL32UTF8.</p>
<p>For the string <code>Fu&szlig;ball,</code> the following statement returns a substring that is 4 characters long, beginning with the second character:</p>
<pre>
SELECT SUBSTR ('Fu&szlig;ball', 2 , 4) SUBSTR FROM DUAL;

SUBS
----
u&szlig;ba
</pre>
<p>For the string <code>Fu&szlig;ball,</code> the following statement returns a substring 4 bytes long, beginning with the second byte:</p>
<pre>
SELECT SUBSTRB ('Fu&szlig;ball', 2 , 4) SUBSTRB FROM DUAL;

SUB
---
u&szlig;b
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink SQLRF" href="../e41084/toc.htm"><span class="italic">Oracle Database SQL Language Reference</span></a> for more information about the <code>SUBSTR</code>, <code>LENGTH</code>, and <code>INSTR</code> functions</div>
</div>
<!-- class="sect2" -->
<a id="i1006229"></a><a id="NLSPG436"></a>
<div class="sect2">
<h3 class="sect2">LIKE Conditions for <a id="sthref957"></a><a id="sthref958"></a>Different Length Semantics</h3>
<p>The <code>LIKE</code> conditions specify a test that uses pattern-matching. The equality operator (=) exactly matches one character value to another, but the <code>LIKE</code> conditions match a portion of one character value to another by searching the first value for the pattern specified by the second.</p>
<p><code>LIKE</code> calculates the length of strings in characters using the length semantics associated with the input character set. The <code>LIKE2</code>, <code>LIKE4</code>, and <code>LIKEC</code> conditions are summarized in <a href="#g1007320">Table 9-3</a>.</p>
<div class="tblformalwide">
<p class="titleintable"><a id="NLSPG844"></a><a id="sthref959"></a><a id="g1007320"></a>Table 9-3 LIKE Conditions</p>
<table class="cellalignment1914" title="LIKE Conditions" summary="This table is described in the preceding text" dir="ltr">
<thead>
<tr class="cellalignment1905">
<th class="cellalignment1915" id="r1c1-t10">Function</th>
<th class="cellalignment1915" id="r1c2-t10">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1905">
<td class="cellalignment1911" id="r2c1-t10" headers="r1c1-t10">
<p><code><a id="sthref960"></a><a id="sthref961"></a>LIKE2</code></p>
</td>
<td class="cellalignment1911" headers="r2c1-t10 r1c2-t10">
<p>Use when characters are represented in UCS-2 semantics. A supplementary character is considered as two characters.</p>
</td>
</tr>
<tr class="cellalignment1905">
<td class="cellalignment1911" id="r3c1-t10" headers="r1c1-t10">
<p><code><a id="sthref962"></a><a id="sthref963"></a>LIKE4</code></p>
</td>
<td class="cellalignment1911" headers="r3c1-t10 r1c2-t10">
<p>Use when characters are represented in UCS-4 semantics. A supplementary character is considered as one character.</p>
</td>
</tr>
<tr class="cellalignment1905">
<td class="cellalignment1911" id="r4c1-t10" headers="r1c1-t10">
<p><code><a id="sthref964"></a><a id="sthref965"></a>LIKEC</code></p>
</td>
<td class="cellalignment1911" headers="r4c1-t10 r1c2-t10">
<p>Use when characters are represented in Unicode complete character semantics. A composed character is treated as one character.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformalwide" -->
<p>There is no <code>LIKEB</code> condition.</p>
</div>
<!-- class="sect2" -->
<a id="i1006264"></a><a id="NLSPG437"></a>
<div class="sect2">
<h3 class="sect2">Character Set SQL Functions</h3>
<p>Two SQL functions, <code>NLS_CHARSET_NAME</code> and <code>NLS_CHARSET_ID</code>, can convert between character set ID numbers and character set names. They are used by programs that need to determine character set ID numbers for binding variables through OCI. <a id="sthref966"></a></p>
<p>Another SQL function, <code>NLS_CHARSET_DECL_LEN</code>, returns the declaration length of a column in number of characters, given the byte length of the column.</p>
<p>This section includes the following topics:</p>
<ul>
<li>
<p><a href="#i1006292">Converting from Character Set Number to Character Set Name</a></p>
</li>
<li>
<p><a href="#i1006296">Converting from Character Set Name to Character Set Number</a></p>
</li>
<li>
<p><a href="#CIHFDEBI">Returning the Length of an NCHAR Column</a></p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink SQLRF" href="../e41084/toc.htm"><span class="italic">Oracle Database SQL Language Reference</span></a></div>
</li>
</ul>
<a id="i1006292"></a><a id="NLSPG438"></a>
<div class="sect3">
<h4 class="sect3">Converting from Character Set Number to Character Set Name</h4>
<p>The <code><a id="sthref967"></a><a id="sthref968"></a>NLS_CHARSET_NAME</code>(<code><span class="codeinlineitalic">n</span></code>) function returns the name of the character set corresponding to ID number <code><span class="codeinlineitalic">n</span></code>. The function returns <code>NULL</code> if <code><span class="codeinlineitalic">n</span></code> is not a recognized character set ID value.</p>
</div>
<!-- class="sect3" -->
<a id="i1006296"></a><a id="NLSPG439"></a>
<div class="sect3">
<h4 class="sect3">Converting from Character Set Name to Character Set Number</h4>
<p><code><a id="sthref969"></a><a id="sthref970"></a>NLS_CHARSET_ID</code>(<code><span class="codeinlineitalic">text</span></code>) returns the character set ID corresponding to the name specified by <code><span class="codeinlineitalic">text</span></code>. <code><span class="codeinlineitalic">text</span></code> is defined as a run-time <code>VARCHAR2</code> quantity, a character set name. Values for <code>text</code> can be <code>NLSRTL</code> names that resolve to character sets that are not the database character set or the national character set.</p>
<p>If the value <code>CHAR_CS</code> is entered for <code><span class="codeinlineitalic">text</span></code>, then the function returns the ID of the database character set. If the value <code>NCHAR_CS</code> is entered for <code><span class="codeinlineitalic">text</span></code>, then the function returns the ID of the database's national character set. The function returns <code>NULL</code> if <code><span class="codeinlineitalic">text</span></code> is not a recognized name.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
The value for <code><span class="codeinlineitalic">text</span></code> must be entered in uppercase characters.</div>
</div>
<!-- class="sect3" -->
<a id="CIHFDEBI"></a><a id="NLSPG440"></a>
<div class="sect3">
<h4 class="sect3">Returning the Length of an NCHAR Column</h4>
<p><code><a id="sthref971"></a><a id="sthref972"></a>NLS_CHARSET_DECL_LEN</code>(<code><span class="codeinlineitalic">BYTECNT</span></code>, <code><span class="codeinlineitalic">CSID</span></code>) returns the declaration length of a column in number of characters, given the byte length of the column. <code><span class="codeinlineitalic">BYTECNT</span></code> is the byte length of the column. <code><span class="codeinlineitalic">CSID</span></code> is the character set ID of the column.</p>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="i1006311"></a><a id="NLSPG441"></a>
<div class="sect2">
<h3 class="sect2"><a id="sthref973"></a><a id="sthref974"></a>The NLSSORT Function</h3>
<p>The <code>NLSSORT</code> function enables you to use any linguistic sort for an <code>ORDER BY</code> clause. It replaces a character string with the equivalent sort string used by the linguistic sort mechanism so that sorting the replacement strings produces the desired sorting sequence. For a binary sort, the sort string is the same as the input string.</p>
<p>The kind of linguistic sort used by an <code>ORDER BY</code> clause is determined by the <code>NLS_SORT</code> session parameter, but it can be overridden by explicitly using the <code>NLSSORT</code> function.</p>
<p><a href="#i1006319">Example 9-1</a> specifies a German sort with the <code>NLS_SORT</code> session parameter.</p>
<div class="example">
<p class="titleinexample"><a id="i1006319"></a><a id="NLSPG845"></a>Example 9-1 Specifying a German Sort with the NLS_SORT Session Parameter</p>
<pre>
ALTER SESSION SET NLS_SORT = GERMAN;
SELECT * FROM table1
     ORDER BY column1;
</pre></div>
<!-- class="example" -->
<div class="example">
<p class="titleinexample"><a id="NLSPG846"></a><a id="sthref975"></a>Example 9-2 Specifying a French Sort with the NLSSORT Function</p>
<p>This example first sets the <code>NLS_SORT</code> session parameter to German, but the <code>NLSSORT</code> function overrides it by specifying a French sort.</p>
<pre>
ALTER SESSION SET NLS_SORT = GERMAN;
SELECT * FROM table1
     ORDER BY NLSSORT(column1, 'NLS_SORT=FRENCH');
</pre>
<p>The <code>WHERE</code> clause uses binary comparison when <code>NLS_COMP</code> is set to <code>BINARY</code>, but this can be overridden by using the <code>NLSSORT</code> function in the <code>WHERE</code> clause.</p>
</div>
<!-- class="example" -->
<div class="example">
<p class="titleinexample"><a id="NLSPG847"></a><a id="sthref976"></a>Example 9-3 Making a Linguistic Comparison with the WHERE Clause</p>
<pre>
ALTER SESSION SET NLS_COMP = BINARY;
SELECT * FROM table1
WHERE NLSSORT(column1, 'NLS_SORT=FRENCH')&gt;
      NLSSORT(column2, 'NLS_SORT=FRENCH');
</pre>
<p>Setting the <code>NLS_COMP</code> session parameter to <code>LINGUISTIC</code> causes the <code>NLS_SORT</code> value to be used in the <code>WHERE</code> clause.</p>
<p>The rest of this section contains the following topics:</p>
</div>
<!-- class="example" -->
<ul>
<li>
<p><a href="#i1006355">NLSSORT Syntax</a></p>
</li>
<li>
<p><a href="#i1006366">Comparing Strings in a WHERE Clause</a></p>
</li>
<li>
<p><a href="#CIHJFGJB">Using the NLS_COMP Parameter to Simplify Comparisons in the WHERE Clause</a></p>
</li>
<li>
<p><a href="#i1006400">Controlling an ORDER BY Clause</a></p>
</li>
</ul>
<a id="i1006355"></a><a id="NLSPG442"></a>
<div class="sect3">
<h4 class="sect3"><a id="sthref977"></a>NLSSORT Syntax</h4>
<p>There are four ways to use <code>NLSSORT</code>:</p>
<ul>
<li>
<p><code>NLSSORT()</code>, which relies on the <code>NLS_SORT</code> parameter</p>
</li>
<li>
<p><code>NLSSORT(column1, 'NLS_SORT=</code><code><span class="codeinlineitalic">xxxx</span></code><code>')</code></p>
</li>
<li>
<p><code>NLSSORT(column1, 'NLS_LANG=</code><code><span class="codeinlineitalic">xxxx</span></code><code>')</code></p>
</li>
<li>
<p><code>NLSSORT(column1, 'NLS_LANGUAGE=</code><code><span class="codeinlineitalic">xxxx</span></code><code>')</code></p>
</li>
</ul>
<p>The <code>NLS_LANG</code> parameter of the <code>NLSSORT</code> function is not the same as the <code>NLS_LANG</code> client environment setting. In the <code>NLSSORT</code> function, <code>NLS_LANG</code> specifies the abbreviated language name, such as <code>US</code> for American or <code>PL</code> for Polish. For example:</p>
<pre>
SELECT * FROM table1
ORDER BY NLSSORT(column1, 'NLS_LANG=PL');
</pre></div>
<!-- class="sect3" -->
<a id="i1006366"></a><a id="NLSPG443"></a>
<div class="sect3">
<h4 class="sect3">Comparing Strings in a <a id="sthref978"></a><a id="sthref979"></a>WHERE Clause</h4>
<p><code>NLSSORT</code> enables applications to perform string matching that follows alphabetic conventions. Normally, character strings in a <code>WHERE</code> clause are compared by using the binary values of the characters. One character is considered greater than another character if it has a greater binary value in the database character set. Because the sequence of characters based on their binary values might not match the alphabetic sequence for a language, such comparisons may not follow alphabetic conventions. For example, if a column (<code>column1</code>) contains the values ABC, ABZ, BCD, and &Auml;BC in the ISO 8859-1 8-bit character set, then the following query returns both <code>BCD</code> and <code>&Auml;BC</code> because <code>&Auml;</code> has a higher numeric value than <code>B</code>:</p>
<pre>
SELECT column1 FROM table1 WHERE column1 &gt; 'B';
</pre>
<p>In German, <code>&Auml;</code> is sorted alphabetically before <code>B</code>, but in Swedish, <code>&Auml;</code> is sorted after <code>Z</code>. Linguistic comparisons can be made by using <code>NLSSORT</code> in the <code>WHERE</code> clause:</p>
<pre>
WHERE NLSSORT(col) <span class="codeinlineitalic">comparison_operator</span> NLSSORT(<span class="codeinlineitalic">comparison_string</span>)
</pre>
<p>Note that <code>NLSSORT</code> must be on both sides of the comparison operator. For example:</p>
<pre>
SELECT column1 FROM table1 WHERE NLSSORT(column1) &gt; NLSSORT('B');
</pre>
<p>If a German linguistic sort has been set, then the statement does not return strings beginning with <code>&Auml;</code> because <code>&Auml;</code> comes before <code>B</code> in the German alphabet. If a Swedish linguistic sort has been set, then strings beginning with <code>&Auml;</code> are returned because <code>&Auml;</code> comes after <code>Z</code> in the Swedish alphabet.</p>
</div>
<!-- class="sect3" -->
<a id="CIHJFGJB"></a><a id="NLSPG444"></a>
<div class="sect3">
<h4 class="sect3">Using the NLS_CO<a id="sthref980"></a>MP Parameter to Simplify Comparisons in the WHERE Clause</h4>
<p>Comparison in the <code>WHERE</code> clause or PL/SQL blocks is binary by default. Using the <code>NLSSORT</code> function for linguistic comparison can be tedious, especially when the linguistic sort has already been specified in the <code>NLS_SORT</code> session parameter. You can use the <code>NLS_COMP</code> parameter to indicate that the comparisons in a <code>WHERE</code> clause or in PL/SQL blocks must be linguistic according to the <code>NLS_SORT</code> session parameter.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
The <code>NLS_COMP</code> parameter does not affect comparison behavior for <a id="sthref981"></a><a id="sthref982"></a><a id="sthref983"></a><a id="sthref984"></a>partitioned tables. String comparisons that are based on a <code>VALUES LESS THAN</code> partition are always binary.</div>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="ch3globenv.htm#i1008458">"NLS_COMP"</a></div>
</div>
<!-- class="sect3" -->
<a id="i1006400"></a><a id="NLSPG445"></a>
<div class="sect3">
<h4 class="sect3">Controlling an <a id="sthref985"></a><a id="sthref986"></a>ORDER BY Clause</h4>
<p>If a linguistic sort is in use, then <code>ORDER BY</code> clauses use an implicit <code>NLSSORT</code> on character data. The sort mechanism (linguistic or binary) for an <code>ORDER</code> <code>BY</code> clause is transparent to the application. However, if the <code>NLSSORT</code> function is explicitly specified in an <code>ORDER</code> <code>BY</code> clause, then the implicit <code>NLSSORT</code> is not done.</p>
<p>If a linguistic sort has been defined by the <code>NLS_SORT</code> session parameter, then an <code>ORDER BY</code> clause in an application uses an implicit <code>NLSSORT</code> function. If you specify an explicit <code>NLSSORT</code> function, then it overrides the implicit <code>NLSSORT</code> function.</p>
<p>When the sort mechanism has been defined as linguistic, the <code>NLSSORT</code> function is usually unnecessary in an <code>ORDER</code> <code>BY</code> clause.</p>
<p>When the sort mechanism either defaults or is defined as binary, then a query like the following uses a binary sort:</p>
<pre>
SELECT last_name FROM employees 
     ORDER BY last_name;
</pre>
<p>A German linguistic sort can be obtained as follows:</p>
<pre>
SELECT last_name FROM employees
     ORDER BY NLSSORT(last_name, 'NLS_SORT = GERMAN');
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="ch5lingsort.htm#i1005958">"Using Linguistic Sorts"</a></div>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="i1006424"></a><a id="NLSPG446"></a>
<div class="sect1">
<h2 class="sect1">Miscellaneous Topics for SQL and PL/SQL Programming in a Global Environment</h2>
<p>This section contains the following topics:</p>
<ul>
<li>
<p><a href="#i1006458">SQL Date Format Masks</a></p>
</li>
<li>
<p><a href="#CIHGFJEI">Calculating Week Numbers</a></p>
</li>
<li>
<p><a href="#i1006484">SQL Numeric Format Masks</a></p>
</li>
<li>
<p><a href="#i1006505">Loading External BFILE Data into LOB Columns</a></p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink SQLRF" href="../e41084/toc.htm"><span class="italic">Oracle Database SQL Language Reference</span></a> for a complete description of format masks</div>
</li>
</ul>
<a id="i1006458"></a><a id="NLSPG447"></a>
<div class="sect2">
<h3 class="sect2">SQL Date <a id="sthref987"></a>Format Masks</h3>
<p>Several format<a id="sthref988"></a> masks are provided with the <code>TO_CHAR</code><a id="sthref989"></a>, <code>TO_DATE</code><a id="sthref990"></a>, and <code>TO_NUMBER</code><a id="sthref991"></a> functions.</p>
<p>The <code>RM</code> (Roman Month) format<a id="sthref992"></a> element returns a month as a Roman numeral. You can specify either upper case or lower case by using <code>RM</code> or <code>rm</code>. For example, for the date 7 Sep 2007, <code>DD-rm-YYYY</code> returns <code>07-ix-2007</code> and <code>DD-RM-YYYY</code> returns <code>07-IX-2007</code>.</p>
<p>Note that the <code>MON</code> and <code>DY</code> format masks explicitly support month and day abbreviations that may not be three characters in length. For example, the abbreviations "Lu" and "Ma" can be specified for the French "Lundi" and "Mardi", respectively.</p>
</div>
<!-- class="sect2" -->
<a id="CIHGFJEI"></a><a id="NLSPG448"></a>
<div class="sect2">
<h3 class="sect2">Calculating Week Numbers</h3>
<p>The week numbers returned by the <code>WW</code> format mask are calculated according to the following algorithm: <code>int(dayOfYear+6)/7</code>. This algorithm does not follow the ISO<a id="sthref993"></a> standard (2015, 1992-06-15).<a id="sthref994"></a></p>
<p>To support the ISO<a id="sthref995"></a><a id="sthref996"></a> standard, the <code>IW</code> format element is provided. It returns the ISO week number. In addition, the <code>I</code>, <code>IY</code>, <code>IYY</code>, and <code>IYYY</code> format elements, equivalent in behavior to the <code>Y</code>, <code>YY</code>, <code>YYY</code>, and <code>YYYY</code> format elements, return the year relating to the ISO week number.</p>
<p>In the ISO standard, the year relating to an ISO week number can be different from the calendar year. For example, 1st Jan 2007 is in ISO week number 53 of 2008. A week always starts on a Monday and ends on a Sunday. The week number is determined according the following rules:</p>
<ul>
<li>
<p>If January 1 falls on a Friday, Saturday, or Sunday, then the week including January 1 is the last week of the previous year, because most of the days in the week belong to the previous year.</p>
</li>
<li>
<p>If January 1 falls on a Monday, Tuesday, Wednesday, or Thursday, then the week is the first week of the new year, because most of the days in the week belong to the new year.</p>
</li>
</ul>
<p>For example, January 1, 1991, is a Tuesday, so Monday, December 31, 1990, to Sunday, January 6, 1991, is in week 1. Thus, the ISO week number and year for December 31, 1990, is 1, 1991. To get the ISO week number, use the <code>IW</code> format mask for the week number and one of the <code>IY</code> formats for the year.<a id="sthref997"></a><a id="sthref998"></a><a id="sthref999"></a><a id="sthref1000"></a></p>
</div>
<!-- class="sect2" -->
<a id="i1006484"></a><a id="NLSPG449"></a>
<div class="sect2">
<h3 class="sect2">SQL Numeric <a id="sthref1001"></a>Format Masks</h3>
<p>Several additional format<a id="sthref1002"></a> elements are provided for formatting numbers:</p>
<div class="inftblinformal">
<table class="cellalignment1914" title="Format elements for formatting numbers" summary="This table is described in the preceding text" dir="ltr">
<thead>
<tr class="cellalignment1905">
<th class="cellalignment1915" id="r1c1-t17">Element</th>
<th class="cellalignment1915" id="r1c2-t17">Description</th>
<th class="cellalignment1915" id="r1c3-t17">Purpose</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1905">
<td class="cellalignment1911" id="r2c1-t17" headers="r1c1-t17"><code>D</code></td>
<td class="cellalignment1911" headers="r2c1-t17 r1c2-t17">Decimal</td>
<td class="cellalignment1911" headers="r2c1-t17 r1c3-t17">Returns the decimal point character<a id="sthref1003"></a></td>
</tr>
<tr class="cellalignment1905">
<td class="cellalignment1911" id="r3c1-t17" headers="r1c1-t17"><code>G</code></td>
<td class="cellalignment1911" headers="r3c1-t17 r1c2-t17">Group</td>
<td class="cellalignment1911" headers="r3c1-t17 r1c3-t17">Returns the group separator<a id="sthref1004"></a></td>
</tr>
<tr class="cellalignment1905">
<td class="cellalignment1911" id="r4c1-t17" headers="r1c1-t17"><code>L</code></td>
<td class="cellalignment1911" headers="r4c1-t17 r1c2-t17">Local currency</td>
<td class="cellalignment1911" headers="r4c1-t17 r1c3-t17">Returns the local currency symbol<a id="sthref1005"></a></td>
</tr>
<tr class="cellalignment1905">
<td class="cellalignment1911" id="r5c1-t17" headers="r1c1-t17"><code>C</code></td>
<td class="cellalignment1911" headers="r5c1-t17 r1c2-t17">International currency</td>
<td class="cellalignment1911" headers="r5c1-t17 r1c3-t17">Returns the ISO currency symbol<a id="sthref1006"></a></td>
</tr>
<tr class="cellalignment1905">
<td class="cellalignment1911" id="r6c1-t17" headers="r1c1-t17"><code>RN</code></td>
<td class="cellalignment1911" headers="r6c1-t17 r1c2-t17">Roman numeral</td>
<td class="cellalignment1911" headers="r6c1-t17 r1c3-t17">Returns the number as its Roman numeral equivalent<a id="sthref1007"></a></td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" -->
<p>For Roman numerals, you can specify either upper case or lower case, using <code>RN</code> or <code>rn</code>, respectively. The number being converted must be an integer in the range 1 to 3999.</p>
</div>
<!-- class="sect2" -->
<a id="i1006505"></a><a id="NLSPG450"></a>
<div class="sect2">
<h3 class="sect2">Loading External <a id="sthref1008"></a><a id="sthref1009"></a><a id="sthref1010"></a>BFILE Data into LOB Columns</h3>
<p>The <code><a id="sthref1011"></a>DBMS_LOB</code> PL/SQL package can load external <code>BFILE</code> data into <code>LOB</code> columns. Oracle Database performs character set conversion before loading the binary data into <code>CLOB</code> or <code>NCLOB</code> columns. Thus, the <code>BFILE</code> data does not need to be in the same character set as the database or national character set to work properly. The APIs convert the data from the specified <code>BFILE</code> character set into the database character set for the <code>CLOB</code> data type, or the national character set for the <code>NCLOB</code> data type. The loading takes place on the server because <code>BFILE</code> data is not supported on the client.</p>
<ul>
<li>
<p>Use <code><a id="sthref1012"></a>DBMS_LOB.LOADBLOBFROMFILE</code> to load <code>BLOB</code> columns.</p>
</li>
<li>
<p>Use <code><a id="sthref1013"></a>DBMS_LOB.LOADCLOBFROMFILE</code> to load <code>CLOB</code> and <code>NCLOB</code> columns.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a class="olink ARPLS" href="../../appdev.112/e40758/toc.htm"><span class="italic">Oracle Database PL/SQL Packages and Types Reference</span></a></p>
</li>
<li>
<p><a class="olink ADLOB" href="../../appdev.112/e18294/toc.htm"><span class="italic">Oracle Database SecureFiles and Large Objects Developer's Guide</span></a></p>
</li>
</ul>
</div>
</li>
</ul>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment1904">
<tr>
<td class="cellalignment1911">
<table class="cellalignment1909">
<tr>
<td class="cellalignment1908"><a href="ch8gdk.htm"><img width="24" height="24" src="../../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment1908"><a href="ch10oci.htm"><img width="24" height="24" src="../../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;1996, 2013,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment1913">
<table class="cellalignment1907">
<tr>
<td class="cellalignment1908"><a href="../../index.htm"><img width="24" height="24" src="../../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment1908"><a href="../../nav/portal_booklist.htm"><img width="24" height="24" src="../../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment1908"><a href="toc.htm"><img width="24" height="24" src="../../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment1908"><a href="index.htm"><img width="24" height="24" src="../../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment1908"><a href="../../nav/mindx.htm"><img width="24" height="24" src="../../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment1908"><a href="../../dcommon/html/feedback.htm"><img width="24" height="24" src="../../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>
</body>
</html>
