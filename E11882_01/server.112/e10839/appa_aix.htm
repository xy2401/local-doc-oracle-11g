<!DOCTYPE html>
<html lang="en" >
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1">
<meta charset="utf-8">
<title>Administering Oracle Database on AIX</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Merged Version 1093" />
<meta name="dcterms.created" content="2017-09-07T5:10:53Z" />
<meta name="robots" content="all" />
<meta name="dcterms.title" content="Database Administrator's Reference" />
<meta name="dcterms.identifier" content="E10839-25" />
<meta name="dcterms.isVersionOf" content="UNXAR" />
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;2006, 2017,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved." />
<link rel="Start" href="../../index.htm" title="Home" type="text/html" />
<link rel="Copyright" href="../../dcommon/html/cpyr.htm" title="Copyright" type="text/html" />

<script type="application/javascript"  src="../../dcommon/js/headfoot.js"></script>
<script type="application/javascript"  src="../../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html" />
<link rel="Index" href="index.htm" title="Index" type="text/html" />
<link rel="Prev" href="tuning.htm" title="Previous" type="text/html" />
<link rel="Next" href="appc_linux.htm" title="Next" type="text/html" />
<link rel="alternate" href="../e10839.pdf" title="PDF version" type="application/pdf" />
<link rel="schema.dcterms" href="http://purl.org/dc/terms/" />
<link rel="stylesheet" href="../../dcommon/css/fusiondoc.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/header.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/footer.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/fonts.css">
<link rel="stylesheet" href="../../dcommon/css/foundation.css">
<link rel="stylesheet" href="../../dcommon/css/codemirror.css">
<link rel="stylesheet" type="text/css" title="Default" href="../../nav/css/html5.css">
<link rel="stylesheet" href="../../dcommon/css/respond-480-tablet.css">
<link rel="stylesheet" href="../../dcommon/css/respond-768-laptop.css">
<link rel="stylesheet" href="../../dcommon/css/respond-1140-deskop.css">
<script type="application/javascript" src="../../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">13/20</span> <!-- End Header -->
<div id="UNXAR009" class="appendix"><a id="BEJJBAGE"></a>
<h1 class="appendix"><span class="secnum">A</span> Administering Oracle Database on AIX</h1>
<p>This appendix contains information about administering Oracle Database on AIX. It includes the following topics:</p>
<ul>
<li>
<p><a href="#i631085">Memory and Paging</a></p>
</li>
<li>
<p><a href="#i631245">Disk Input-Output Issues</a></p>
</li>
<li>
<p><a href="#i631579">CPU Scheduling and Process Priorities</a></p>
</li>
<li>
<p><a href="#BGBICJDA">Setting the AIXTHREAD_SCOPE Environment Variable</a></p>
</li>
<li>
<p><a href="#CEGIEHJI">Network Information Service external naming support</a></p>
</li>
<li>
<p><a href="#BABFBIDI">Simultaneous Multithreading on AIX 5.3 and Later Versions</a></p>
</li>
<li>
<p><a href="#CEGGGEDF">Configuring IBM JSSE Provider with Oracle JDBC Thin Driver</a></p>
</li>
</ul>
<a id="i631085"></a>
<div id="UNXAR267" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1"><span class="secnum">A.1</span> Memory and Paging</h2>
<p><a id="sthref459"></a>Memory contention occurs when processes require more memory than is available. To cope with the shortage, the system pages programs and data between memory and disks.</p>
<p>This section contains the following topics:</p>
<ul>
<li>
<p><a href="#i631089">Controlling Buffer-Cache Paging Activity</a></p>
</li>
<li>
<p><a href="#CHDFDBBC">Tuning the AIX File Buffer Cache</a></p>
</li>
<li>
<p><a href="#CHDBGDIE">Allocating Sufficient Paging Space</a></p>
</li>
<li>
<p><a href="#CHDDEAIH">Controlling Paging</a></p>
</li>
<li>
<p><a href="#CHDDAGHE">Setting the Database Block Size</a></p>
</li>
<li>
<p><a href="#CHDIDEII">Tuning the Log Archive Buffers</a></p>
</li>
<li>
<p><a href="#CHDBHIBG">Input-Output Buffers and SQL*Loader</a></p>
</li>
</ul>
<a id="i631089"></a>
<div id="UNXAR268" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">A.1.1</span> Controlling Buffer-Cache Paging Activity<a id="sthref460"></a></h3>
<p>Excessive paging activity decreases performance substantially. This can become a problem with database files created on journaled file systems (JFS and JFS2). In this situation, a large number of SGA data buffers may also have analogous file system buffers containing the most frequently referenced data. The behavior of the AIX file buffer cache manager can have a significant impact on performance. It can cause an Input-Output bottleneck, resulting in lower overall system throughput.</p>
<p>It is possible to tune <a id="sthref461"></a>buffer-cache paging activity, but you must do it carefully and infrequently. Use the <code dir="ltr">/usr/sbin/vmo</code> <a id="sthref462"></a><a id="sthref463"></a>command to tune the AIX system parameters in the following table:</p>
<div class="inftblinformal">
<table class="cellalignment1790" title="vmtune Command Parameters" summary="This table describes the vmtune command parameters" dir="ltr">
<thead>
<tr class="cellalignment1784">
<th class="cellalignment1791" id="r1c1-t2"><span class="bold">Parameter</span></th>
<th class="cellalignment1791" id="r1c2-t2">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1784">
<td class="cellalignment1792" id="r2c1-t2" headers="r1c1-t2"><a id="sthref464"></a><a id="sthref465"></a><code dir="ltr">minfree</code></td>
<td class="cellalignment1792" headers="r2c1-t2 r1c2-t2">The minimum free-list size. If the free-list space in the buffer falls lower than this size, then the system uses page stealing to replenish the free list.</td>
</tr>
<tr class="cellalignment1784">
<td class="cellalignment1792" id="r3c1-t2" headers="r1c1-t2"><a id="sthref466"></a><a id="sthref467"></a><code dir="ltr">maxfree</code></td>
<td class="cellalignment1792" headers="r3c1-t2 r1c2-t2">The maximum free-list size. If the free-list space in the buffer exceeds this size, then the system stops using page stealing to replenish the free list.</td>
</tr>
<tr class="cellalignment1784">
<td class="cellalignment1792" id="r4c1-t2" headers="r1c1-t2"><a id="sthref468"></a><a id="sthref469"></a><code dir="ltr">minperm</code></td>
<td class="cellalignment1792" headers="r4c1-t2 r1c2-t2">The minimum number of permanent buffer pages for file Input-Output.</td>
</tr>
<tr class="cellalignment1784">
<td class="cellalignment1792" id="r5c1-t2" headers="r1c1-t2"><a id="sthref470"></a><a id="sthref471"></a><code dir="ltr">maxperm</code></td>
<td class="cellalignment1792" headers="r5c1-t2 r1c2-t2">The maximum number of permanent buffer pages for file Input-Output.</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" -->
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<span class="italic">AIX 5L Performance Management Guide</span> for more information about AIX system parameters</div>
</div>
<!-- class="sect2" -->
<a id="CHDFDBBC"></a>
<div id="UNXAR269" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">A.1.2</span> Tuning the AIX File Bu<a id="sthref472"></a>ffer Cache</h3>
<p>The purpose of the AIX file buffer cache is to reduce disk access frequency when journaled file systems are used. If this cache is too small, then disk usage increases and potentially saturates one or more disks. If the cache is too large, then memory is wasted.</p>
<p>You can configure the AIX file buffer cache by adjusting the <code dir="ltr">minperm</code> and <code dir="ltr">maxperm</code> parameters. In general, if the buffer hit ratio is low (less than 90 percent), as determined by the <code dir="ltr">sar -b</code> command, then increasing the <code dir="ltr">minperm</code> parameter value may help. If maintaining a high buffer hit ratio is not critical, then decreasing the <code dir="ltr">minperm</code> parameter value increases the physical memory available. Refer to the AIX documentation for more information about increasing the size of the AIX file buffer cache.</p>
<p>The performance gain cannot be quantified easily, because it depends on the degree of multiprogramming and the Input-Output characteristics of the workload.</p>
<p class="subhead2"><a id="UNXAR270"></a>Tuning the minperm and maxperm Parameters<a id="sthref473"></a><a id="sthref474"></a><a id="sthref475"></a><a id="sthref476"></a></p>
<p>AIX provides a mechanism for you to loosely control the ratio of page frames used for files rather than those used for computational (working or program text) segments by adjusting the <code dir="ltr">minperm</code> and <code dir="ltr">maxperm</code> values according to the following guidelines:</p>
<ul>
<li>
<p>If the percentage of real memory occupied by file pages falls lower than the <code dir="ltr">minperm</code> value, then the virtual memory manager (VMM) page-replacement algorithm takes both file and computational pages, regardless of repage rates.</p>
</li>
<li>
<p>If the percentage of real memory occupied by file pages rises above the <code dir="ltr">maxperm</code> value, then the VMM page-replacement algorithm takes both file and computational pages.</p>
</li>
<li>
<p>If the percentage of real memory occupied by file pages is between the <code dir="ltr">minperm</code> and <code dir="ltr">maxperm</code> parameter values, then the VMM normally takes only file pages. However, if the repaging rate for file pages is higher than the repaging rate for computational pages, then the computational pages are taken as well.</p>
</li>
</ul>
<p>Use the following algorithm to calculate the default values:</p>
<ul>
<li>
<p><code dir="ltr">minperm</code> (in pages) = ((number of page frames)-1024) * 0.2</p>
</li>
<li>
<p><code dir="ltr">maxperm</code> (in pages) = ((number of page frames)-1024) * 0.8</p>
</li>
</ul>
<p>Use the following command to change the value of the <code dir="ltr">minperm</code> parameter to 5 percent of the total number of page frames, and the value of the <code dir="ltr">maxperm</code> parameter to 20 percent of the total number of page frames:</p>
<pre dir="ltr">
# /usr/sbin/vmo -o minperm percent=5 -o maxperm percent=20
</pre>
<p>The default values are 20 percent and 80 percent, respectively.</p>
<p>To optimize for quick response when opening new database connections, adjust the <code dir="ltr">minfree</code> parameter to maintain enough free pages in the system to load the application into memory without adding additional pages to the free list. To determine the real memory size (resident set size, working set) of a process, use the following command:</p>
<pre dir="ltr">
$ ps v <span class="italic">process_id</span>
</pre>
<p>Set the <code dir="ltr">minfree</code> parameter to this value or to 8 frames, whichever is larger.</p>
<p>If you are using Direct Input-Output, then you can set the <code dir="ltr">minperm</code> and <code dir="ltr">maxperm</code> parameters to low values. For example, 5 percent and 20 percent, respectively. This is because the AIX file buffer cache is not used for Direct Input-Output. The memory may be better used for other purposes, such as for the Oracle System Global Area.</p>
</div>
<!-- class="sect2" -->
<a id="CHDBGDIE"></a>
<div id="UNXAR271" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">A.1.3</span> Allocating Sufficient Paging Space<a id="sthref477"></a></h3>
<p>Inadequate paging space (swap space) usually causes the system to stop responding or show very slow response times. On AIX, you can dynamically add paging space on raw disk partitions. The amount of paging space you should configure depends on the amount of physical memory present and the paging space requirements of the applications. Use the <code dir="ltr">lsps</code> command to monitor paging space use and the <code dir="ltr">vmstat</code> command to monitor system paging activities. To increase the paging space, use the <code dir="ltr">smit pgsp</code> command.</p>
<p>If paging space is preallocated, then Oracle recommends that you set the paging space to a value larger than the amount of RAM. But on AIX, paging space is not allocated until required. The system uses swap space only if it runs out of real memory. If the memory is sized correctly, then there is no paging and the page space can be small. Workloads where the demand for pages does not fluctuate significantly perform well with a small paging space. Workloads likely to have peak periods of increased paging require enough paging space to handle the peak number of pages.</p>
<p>As a general rule, an initial setting for the paging space is half the size of RAM plus 4 GB, with an upper limit of 32 GB. Monitor the paging space use with the <code dir="ltr">lsps -a</code> command, and increase or decrease the paging space size accordingly. The metric percent Used in the output of <code dir="ltr">lsps -a</code> is typically less than 25 percent on a healthy system. A properly sized deployment requires very little paging space and an excessive amount of swapping is an indication that the RAM on the system may be undersized.</p>
<div class="infobox-note">
<p class="notep1">Caution:</p>
Do not undersize the paging space. If you do, then the system terminates active processes when it runs out of space. However, oversizing the paging space has little or no negative impact.</div>
</div>
<!-- class="sect2" -->
<a id="CHDDEAIH"></a>
<div id="UNXAR272" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">A.1.4</span> Controlling Paging<a id="sthref478"></a></h3>
<p>Constant and excessive paging indicates that the real memory is over-committed. In general, you should:</p>
<ul>
<li>
<p>Avoid constant paging unless the system is equipped with very fast expanded storage that makes paging between memory and expanded storage much faster than Oracle Database can read and write data between the SGA and disks.</p>
</li>
<li>
<p>Allocate limited memory resource to where it is most beneficial to system performance. It is sometimes a recursive process of balancing the memory resource requirements and trade-offs.</p>
</li>
<li>
<p>If memory is not adequate, then build a prioritized list of memory-requiring processes and elements of the system. Assign memory to where the performance gains are the greatest. A prioritized list may look like the following:</p>
<ol>
<li>
<p>OS and RDBMS kernels</p>
</li>
<li>
<p>User and application processes</p>
</li>
<li>
<p>Redo log buffer</p>
</li>
<li>
<p>PGAs and shared pool</p>
</li>
<li>
<p>Database block buffer caches</p>
</li>
</ol>
</li>
</ul>
<p>For example, suppose you query Oracle Database dynamic performance tables and views and find that both the shared pool and database buffer cache require more memory. Then, assigning the limited spare memory to the shared pool may be more beneficial than assigning it to the database block buffer caches.</p>
<p>The following AIX commands provide paging status and statistics:</p>
<ul>
<li>
<p><code dir="ltr">vmstat -s</code></p>
</li>
<li>
<p><code dir="ltr">vmstat</code> <code dir="ltr"><span class="codeinlineitalic">interval</span></code> <code dir="ltr">[</code><code dir="ltr"><span class="codeinlineitalic">repeats</span></code><code dir="ltr">]</code></p>
</li>
<li>
<p><code dir="ltr">sar -r</code> <code dir="ltr"><span class="codeinlineitalic">interval</span></code> <code dir="ltr">[</code><code dir="ltr"><span class="codeinlineitalic">repeats</span></code><code dir="ltr">]</code></p>
</li>
</ul>
</div>
<!-- class="sect2" -->
<a id="CHDDAGHE"></a>
<div id="UNXAR273" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">A.1.5</span> Setting the Database Block Size<a id="sthref479"></a></h3>
<p>You can configure Oracle <a id="sthref480"></a>Database <a id="sthref481"></a>block size for better Input-Output throughput. On AIX, you can set the value of the <code dir="ltr">DB_BLOCK_SIZE</code> initialization parameter to between 2 KB and 32 KB, with a default of 4 KB. If Oracle Database is installed on a journaled file system, then the block size should be a multiple of the file system block size (4 KB on JFS, 16 K to 1 MB on GPFS). For databases on raw partitions, Oracle Database block size is a multiple of the operating system physical block size (512 bytes on AIX).</p>
<p>Oracle recommends smaller Oracle Database block sizes (2 KB or 4 KB) for online transaction processing or mixed workload environments and larger block sizes (8 KB, 16 KB, or 32 KB) for decision support system workload environments.</p>
</div>
<!-- class="sect2" -->
<a id="CHDIDEII"></a>
<div id="UNXAR274" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">A.1.6</span> Tuning the Log Archive Buffers<a id="sthref482"></a></h3>
<p>By increasing the <code dir="ltr">LOG_BUFFER</code> size, you may be able to improve the speed of archiving the database, particularly if transactions are long or numerous. Monitor the log file Input-Output activity and system throughput to determine the optimum <code dir="ltr">LOG_BUFFER</code> size. Tune the <code dir="ltr">LOG_BUFFER</code> parameter carefully to ensure that the overall performance of normal database activity does not degrade.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
The <code dir="ltr">LOG_ARCHIVE_BUFFER_SIZE</code> parameter was obsoleted with Oracle8<span class="italic">i</span> Database.</div>
</div>
<!-- class="sect2" -->
<a id="CHDBHIBG"></a>
<div id="UNXAR275" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">A.1.7</span> Input-Output Buffers and SQL*Loader<a id="sthref483"></a></h3>
<p>For high-speed data loading, such as using the <a id="sthref484"></a>SQL*Loader direct path option in addition to loading data in parallel, the CPU spends most of its time waiting for Input-Output to complete. By increasing the number of buffers, you can maximize CPU usage, and by doing this, increase overall throughput.</p>
<p>The number of buffers (set by the SQL*Loader <code dir="ltr">BUFFERS</code> parameter) you choose depends on the amount of available memory and how much you want to maximize CPU usage.</p>
<p>The performance gains depend on CPU usage and the degree of parallelism that you use when loading data.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink SUTIL" href="../e22490/toc.htm"><span class="italic">Oracle Database Utilities</span></a> for information about adjusting the file processing options string for the <code dir="ltr">BUFFERS</code> parameter and for information about the SQL*Loader utility</div>
<p class="subhead2"><a id="UNXAR276"></a>BUFFER Parameter for the Import Utility<a id="sthref485"></a><a id="sthref486"></a><a id="sthref487"></a><a id="sthref488"></a></p>
<p>The <code dir="ltr">BUFFER</code> parameter for the Import utility should be set to a large value to optimize the performance of high-speed networks when they are used. For example, if you use the IBM RS/6000 Scalable POWER parallel Systems switch, then you should set the <code dir="ltr">BUFFER</code> parameter to a value of at least 1 MB.</p>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="i631245"></a>
<div id="UNXAR277" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1"><span class="secnum">A.2</span> Disk Input-Output Issues</h2>
<p>Disk Input-Output contention can result from poor memory management (with subsequent paging and swapping), or poor distribution of tablespaces and files across disks.</p>
<p>Ensure that the Input-Output activity is distributed evenly across multiple disk drives by using AIX utilities such as <code dir="ltr">filemon</code>, <code dir="ltr">sar</code>, <code dir="ltr">iostat</code>, and other performance tools to identify disks with high Input-Output activity.</p>
<p>This section contains the following topics:</p>
<ul>
<li>
<p><a href="#BEHHEGBG">AIX Logical Volume Manager</a></p>
</li>
<li>
<p><a href="#i633938">Using Journaled File Systems Compared to Raw Logical Volumes</a></p>
</li>
<li>
<p><a href="#i631413">Using Asynchronous Input-Output</a></p>
</li>
<li>
<p><a href="#BEHGGBAJ">Input-Output Slaves</a></p>
</li>
<li>
<p><a href="#BEHIIECG">Using the DB_FILE_MULTIBLOCK_READ_COUNT Parameter</a></p>
</li>
<li>
<p><a href="#i631520">Using Write Behind</a></p>
</li>
<li>
<p><a href="#BEHEBJBI">Tuning Sequential Read Ahead</a></p>
</li>
<li>
<p><a href="#BEHFJFEG">Tuning Disk Input-Output Pacing</a></p>
</li>
<li>
<p><a href="#BEHGHJFH">Resilvering with Oracle Database</a></p>
</li>
</ul>
<a id="BEHHEGBG"></a>
<div id="UNXAR278" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">A.2.1</span> AIX Logical Vo<a id="sthref489"></a>lume Manager</h3>
<p><a id="i631283"></a>The AIX Logical Volume Manager can stripe data across multiple disks to reduce disk contention. The primary objective of striping is to achieve high performance when reading and writing large sequential files. Effective use of the striping features in the Logical Volume Manager enables you to spread Input-Output more evenly across disks, resulting in better overall performance.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
Do not add logical volumes to Automatic Storage Management disk groups. Automatic Storage Management works best when you add raw disk devices to disk groups. If you are using Automatic Storage Management, then do not use Logical Volume Manager for striping. Automatic Storage Management implements striping and mirroring.</div>
<p class="subhead2"><a id="UNXAR279"></a>Design a Striped Logical Volume<a id="sthref490"></a></p>
<p><a id="i631286"></a>When you define a striped logical volume, you must specify the items listed in the following table:</p>
<div class="inftblinformal">
<table class="cellalignment1790" title="Striped Logical Volume Item Specification" summary="This table describes the striped logical volume items that you must specify" dir="ltr">
<thead>
<tr class="cellalignment1784">
<th class="cellalignment1791" id="r1c1-t8">Item</th>
<th class="cellalignment1791" id="r1c2-t8">Recommended Settings</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1784">
<td class="cellalignment1792" id="r2c1-t8" headers="r1c1-t8">Drives</td>
<td class="cellalignment1792" headers="r2c1-t8 r1c2-t8">There must be at least two physical drives. The drives should have minimal activity when performance-critical sequential Input-Output is carried out. Sometimes, you must stripe the logical volume between two or more adapters.</td>
</tr>
<tr class="cellalignment1784">
<td class="cellalignment1792" id="r3c1-t8" headers="r1c1-t8">Stripe unit size</td>
<td class="cellalignment1792" headers="r3c1-t8 r1c2-t8">Although the stripe unit size can be any power of 2 (from 2 KB to 128 KB), stripe sizes of 32 KB and 64 KB are good values for most workloads. For Oracle Database files, the stripe size must be a multiple of the database block size.</td>
</tr>
<tr class="cellalignment1784">
<td class="cellalignment1792" id="r4c1-t8" headers="r1c1-t8">Size</td>
<td class="cellalignment1792" headers="r4c1-t8 r1c2-t8">The number of physical partitions allocated to the logical volume must be a multiple of the number of disk drives used.</td>
</tr>
<tr class="cellalignment1784">
<td class="cellalignment1792" id="r5c1-t8" headers="r1c1-t8">Attributes</td>
<td class="cellalignment1792" headers="r5c1-t8 r1c2-t8">Cannot be mirrored. Set the <code dir="ltr">copies</code> attribute to a value of 1.</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" -->
<p class="subhead2"><a id="UNXAR280"></a>Other Considerations</p>
<p>Performance gains from effective use of the Logical Volume Manager can vary greatly, depending on the Logical Volume Manager you use and the characteristics of the workload. For decision support system workloads, you can see substantial improvement. For online transaction processing-type or mixed workloads, you can expect significant performance gains.</p>
</div>
<!-- class="sect2" -->
<a id="i633938"></a>
<div id="UNXAR281" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">A.2.2</span> Using Journaled File Systems Compared to Raw Logical Volumes<a id="sthref491"></a><a id="sthref492"></a></h3>
<p>Address the following considerations when deciding whether to use journaled file systems or raw logical volumes:</p>
<ul>
<li>
<p>File systems are continually being improved, as are various file system implementations.</p>
</li>
<li>
<p>File systems require some additional configuration (AIX <code dir="ltr">minservers</code> and <code dir="ltr">maxservers</code> parameter) and add a small CPU overhead because Asynchronous Input-Output on file systems is serviced outside the kernel.</p>
</li>
<li>
<p>Different vendors implement the file system layer in different ways to capitalize on the strengths of different disks. This makes it difficult to compare file systems across platforms.</p>
</li>
<li>
<p>The introduction of more powerful Logical Volume Manager interfaces substantially reduces the tasks of configuring and backing up logical disks based on raw logical volumes.</p>
</li>
<li>
<p>The Direct Input-Output and Concurrent Input-Output features included in IBM AIX on POWER Systems improve file system performance to a level comparable to raw logical volumes.</p>
</li>
</ul>
<p>In earlier versions of AIX, file systems supported only buffered read and write and added extra contention because of imperfect inode locking. These two issues are solved by the JFS2 Concurrent Input-Output feature and the GPFS Direct Input-Output feature.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
To use the Oracle RAC option, you must place data files on an Automatic Storage Management disk group or on a GPFS file system. You cannot use JFS or JFS2. Direct Input-Output is implicitly enabled when you use GPFS.</div>
<p class="subhead2"><a id="UNXAR282"></a>File System Options<a id="sthref493"></a><a id="sthref494"></a></p>
<p>IBM AIX on POWER Systems includes Direct Input-Output and Concurrent Input-Output support. Direct Input-Output and Concurrent Input-Output support enables database files to exist on file systems while bypassing the operating system buffer cache and removing inode locking operations that are redundant with the features provided by Oracle Database.</p>
<p>Where possible, Oracle recommends enabling Concurrent Input-Output or Direct Input-Output on file systems containing Oracle data files. The following table lists file systems available on AIX and the recommended setting:</p>
<div class="inftblinformal">
<table class="cellalignment1790" title="File System I/O Options on AIX" summary="This table lists file system I/O options on AIX" dir="ltr">
<thead>
<tr class="cellalignment1784">
<th class="cellalignment1791" id="r1c1-t10">File System</th>
<th class="cellalignment1791" id="r1c2-t10">Option</th>
<th class="cellalignment1791" id="r1c3-t10">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1784">
<td class="cellalignment1792" id="r2c1-t10" headers="r1c1-t10">JFS</td>
<td class="cellalignment1792" headers="r2c1-t10 r1c2-t10">dio</td>
<td class="cellalignment1792" headers="r2c1-t10 r1c3-t10">Concurrent Input-Output is not available on JFS. Direct Input-Output is available, but performance is degraded compared to JFS2 with Concurrent Input-Output.</td>
</tr>
<tr class="cellalignment1784">
<td class="cellalignment1792" id="r3c1-t10" headers="r1c1-t10">JFS large file</td>
<td class="cellalignment1792" headers="r3c1-t10 r1c2-t10">none</td>
<td class="cellalignment1792" headers="r3c1-t10 r1c3-t10">Oracle does not recommend using JFS large file for Oracle Database because its 128 KB alignment constraint prevents you from using Direct Input-Output.</td>
</tr>
<tr class="cellalignment1784">
<td class="cellalignment1792" id="r4c1-t10" headers="r1c1-t10">JFS2</td>
<td class="cellalignment1792" headers="r4c1-t10 r1c2-t10">cio</td>
<td class="cellalignment1792" headers="r4c1-t10 r1c3-t10">Concurrent Input-Output is a better setting than Direct Input-Output on JFS2, because it provides support for multiple concurrent readers and writers on the same file. However, due to AIX restrictions on JFS2/CIO, Concurrent Input-Output is intended to be used only with Oracle data files, control files, and log files. It should be applied only to file systems that are dedicated to such a purpose. For the same reason, the Oracle home directory is not supported on a JFS2 file system mounted with the <code dir="ltr">cio</code> option. For example, during installation, if you inadvertently specify that the Oracle home directory is on a JFS2 file system mounted with the CIO option, then while trying to relink Oracle, you may encounter the following error:
<p><code dir="ltr">"ld: 0711-866 INTERNAL ERROR: Output symbol table size miscalculated"</code></p>
<p><span class="bold">Note</span>: For Oracle Database 11<span class="italic">g</span> Release 2 (11.2.0.2) and later, on AIX 6.1 systems, Oracle recommends that you do not use the <code dir="ltr">cio</code> option on a JFS2 file system.</p>
</td>
</tr>
<tr class="cellalignment1784">
<td class="cellalignment1792" id="r5c1-t10" headers="r1c1-t10">GPFS</td>
<td class="cellalignment1792" headers="r5c1-t10 r1c2-t10">NA</td>
<td class="cellalignment1792" headers="r5c1-t10 r1c3-t10">Oracle Database silently enables Direct Input-Output on GPFS for optimum performance. GPFS Direct Input-Output supports multiple readers and writers on multiple nodes. Therefore, Direct Input-Output and Concurrent Input-Output are the same thing on GPFS.</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" -->
<p class="subhead2"><a id="UNXAR283"></a>Considerations for JFS and JFS2<a id="sthref495"></a><a id="sthref496"></a></p>
<p>If you are placing Oracle Database logs on a JFS2 file system, then the optimal configuration is to create the file system using the <code dir="ltr">agblksize=512</code> option and to mount it with the <code dir="ltr">cio</code> option.</p>
<p>Before Oracle Database 11<span class="italic">g</span>, Direct Input-Output and Concurrent Input-Output could not be enabled at the file level on JFS/JFS2. Therefore, the Oracle home directory and data files had to be placed in separate file systems for optimal performance. The Oracle home directory was placed on a file system mounted with default options, with the data files and logs on file systems mounted using the <code dir="ltr">dio</code> or <code dir="ltr">cio</code> options.</p>
<p>With Oracle Database 11<span class="italic">g</span>, you can enable Direct Input-Output and Concurrent Input-Output on JFS/JFS2 at the file level. You can do this by setting the <code dir="ltr">FILESYSTEMIO_OPTIONS</code> parameter in the server parameter file to <code dir="ltr">setall</code> or <code dir="ltr">directIO</code>. This enables Concurrent Input-Output on JFS2 and Direct Input-Output on JFS for all data file Input-Output. Because the <code dir="ltr">directIO</code> setting disables asynchronous Input-Output it should normally not be used. As a result of this 11<span class="italic">g</span> feature, you can place data files on the same JFS/JFS2 file system as the Oracle home directory and still use Direct Input-Output or Concurrent Input-Output for improved performance. As mentioned earlier, you should still place Oracle Database logs on a separate JFS2 file system for optimal performance.</p>
<p class="subhead2"><a id="UNXAR284"></a>Considerations for GPFS<a id="sthref497"></a></p>
<p>If you are using GPFS, then you can use the same file system for all purposes. This includes using it for the Oracle home directory and for storing data files and logs. For optimal performance, you should use a large GPFS block size (typically, at least 512 KB). GPFS is designed for scalability, and there is no requirement to create multiple GPFS file systems as long as the amount of data fits in a single GPFS file system.</p>
<p class="subhead2"><a id="UNXAR285"></a>Moving from a Journaled File System to Raw Logical Volumes<a id="sthref498"></a><a id="sthref499"></a></p>
<p>To move from a journaled file system to raw devices without having to manually reload all the data, perform the following steps as the <code dir="ltr">root</code> user:</p>
<ol>
<li>
<p>Create a raw device (preferably, in a BigVG) using the new raw logical volume device type (<code dir="ltr">-T O</code>), which enables putting the first Oracle block at offset zero for optimal performance:</p>
<pre dir="ltr">
# mklv -T O -y <span class="italic">new_raw_device</span> VolumeGroup NumberOfPartitions
</pre>
<div class="infobox-note">
<p class="notep1">Note:</p>
The raw device should be larger than the existing file. In addition, you must bear in mind the size of the new raw device to prevent wasting space.</div>
</li>
<li>
<p>Set the permissions on the raw device.</p>
</li>
<li>
<p>Use <code dir="ltr">dd</code> to convert and copy the contents of the JFS file to the new raw device as follows:</p>
<pre dir="ltr">
# dd if=<span class="italic">old_JFS_file</span> of=<span class="italic">new_raw_device</span> bs=1m
</pre></li>
<li>
<p>Rename the data file.</p>
</li>
</ol>
<p class="subhead2"><a id="BEHDDGEJ"></a><a id="UNXAR286"></a>Moving from Raw Logical Volumes to a Journaled File System<a id="sthref500"></a><a id="sthref501"></a></p>
<p>The first Oracle block on a raw logical volume is not necessarily at offset zero. However, the first Oracle block on a file system is always at offset zero. To determine the offset and locate the first block on a raw logical volume, use the <code dir="ltr">$ORACLE_HOME/bin/offset</code> command. The offset can be 4096 bytes or 128 KB on AIX logical volumes or zero on AIX logical volumes created with the <code dir="ltr">mklv -T O</code> option.</p>
<p>When you have determined the offset, you can copy over data from a raw logical volume to a file system using the <code dir="ltr">dd</code> command and skipping the offset. The following example assumes an offset of 4096 bytes:</p>
<pre dir="ltr">
# dd if=old_raw_device bs=4k skip=1|dd of=new_file bs=256
</pre>
<p>You can instruct Oracle Database to use many blocks smaller than the maximum capacity of a raw logical volume. If you do this, then you must add a <code dir="ltr">count</code> clause to ensure that only data that contains Oracle blocks is copied. The following example assumes an offset of 4096 bytes, an Oracle block size of 8 KB, and 150000 blocks:</p>
<pre dir="ltr">
# dd if=old_raw_device bs=4k skip=1|dd bs=8k count=150000|dd of=new_file bs=256k
</pre></div>
<!-- class="sect2" -->
<a id="i631413"></a>
<div id="UNXAR287" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">A.2.3</span> Using Asynchronous Input-Output<a id="sthref502"></a></h3>
<p>Oracle Database takes full advantage of asynchronous Input-Output provided by AIX, resulting in faster database access.</p>
<p>IBM AIX on POWER Systems support asynchronous Input-Output for database files created on file system partitions. When using asynchronous Input-Output on file systems, the kernel database processes (<code dir="ltr">aioserver</code>) control each request from the time a request is taken off the queue to the time it is completed. The number of <code dir="ltr">aioserver</code> servers determines the number of asynchronous Input-Output requests that can be processed in the system concurrently. So, it is important to tune the number of <code dir="ltr">aioserver</code> processes when using file systems to store Oracle Database data files.</p>
<p>Use one of the following commands to set the number of servers. This applies only when using asynchronous Input-Output on file systems:</p>
<ul>
<li>
<p><code dir="ltr">smit aio</code></p>
</li>
<li>
<p><code dir="ltr">chdev -l aio0 -a maxservers='</code> <code dir="ltr"><span class="codeinlineitalic">m</span></code> <code dir="ltr">' -a minservers='</code><code dir="ltr"><span class="codeinlineitalic">n</span></code><code dir="ltr">'</code></p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p>The System Management Interface Tool (SMIT) online Help for more information about SMIT</p>
</li>
<li>
<p>The man pages for more information about the <code dir="ltr">smit aio</code> and <code dir="ltr">chdev</code> commands</p>
</li>
</ul>
</div>
</li>
</ul>
<div class="infobox-note">
<p class="notep1">Note:</p>
<ul>
<li>
<p>On IBM AIX on POWER Systems, there are two asynchronous Input-Output subsystems available. Oracle Database 11<span class="italic">g</span> uses Legacy asynchronous Input-Output (<code dir="ltr">aio0</code>), even though the Oracle preinstallation script enables Legacy asynchronous Input-Output (<code dir="ltr">aio0</code>) and POSIX AIO (<code dir="ltr">posix_aio0</code>). Both asynchronous Input-Output subsystems have the same performance characteristics.</p>
</li>
<li>
<p>Starting with AIX 6.1, the <code dir="ltr">minservers</code>, <code dir="ltr">maxservers</code>, and <code dir="ltr">maxreqs</code> parameters are replaced by the <code dir="ltr">aio_minservers</code>, <code dir="ltr">aio_maxservers</code>, and <code dir="ltr">aio_maxreqs</code> parameters respectively.</p>
</li>
</ul>
</div>
<p>Set the minimum value to the number of servers to be started when the system is started. Set the maximum value to the number of servers that can be started in response to a large number of concurrent requests. These parameters apply to file systems only.</p>
<p>The default value for the minimum number of servers is 1. The default value for the maximum number of servers is 10. These values are usually too low to run Oracle Database on large systems with 4 CPUs or more, if you are not using kernelized asynchronous Input-Output. Oracle recommends that you set the parameters to the values listed in the following table:</p>
<div class="inftblinformal">
<table class="cellalignment1790" title="MAXSERVERS and MINSERVERS Parameter Values" summary="This table lists recommended values for the MAXSERVERS and MINSERVERS parameters" dir="ltr">
<thead>
<tr class="cellalignment1784">
<th class="cellalignment1791" id="r1c1-t14">Parameter</th>
<th class="cellalignment1791" id="r1c2-t14">Value</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1784">
<td class="cellalignment1792" id="r2c1-t14" headers="r1c1-t14"><code dir="ltr">minservers</code></td>
<td class="cellalignment1792" headers="r2c1-t14 r1c2-t14">Oracle recommends an initial value equal to the number of CPUs on the system or 10, whichever is lower.</td>
</tr>
<tr class="cellalignment1784">
<td class="cellalignment1792" id="r3c1-t14" headers="r1c1-t14"><code dir="ltr">maxservers</code></td>
<td class="cellalignment1792" headers="r3c1-t14 r1c2-t14">Starting with AIX 5L version 5.3, this parameter counts the maximum number of asynchronous Input-Output servers for each CPU. On previous versions of AIX, it was a systemwide value. If you are using General Parallel File System (GPFS), then set <code dir="ltr">maxservers</code> to worker1threads divided by the number of CPUs. This is the optimal setting. Increasing <code dir="ltr">maxservers</code> does not lead to improved Input-Output performance.
<p>If you are using JFS/JFS2, then set the initial value to 10 times the number of logical disks divided by the number of CPUs that are to be used concurrently but no more than 80. Monitor the actual number of <code dir="ltr">aioservers</code> started during a typical workload using the <code dir="ltr">pstat</code> or <code dir="ltr">ps</code> commands. If the actual number of active aioservers equals the maxservers, then increase the <code dir="ltr">maxservers</code> value.</p>
</td>
</tr>
<tr class="cellalignment1784">
<td class="cellalignment1792" id="r4c1-t14" headers="r1c1-t14"><code dir="ltr">maxreqs</code></td>
<td class="cellalignment1792" headers="r4c1-t14 r1c2-t14">Set the initial value to 4 times the number of logical disks multiplied by the queue depth. You can determine the queue depth by running the following command:
<pre dir="ltr">
$ lsattr -E -l <span class="italic">hdiskxx</span>
</pre>
<p>Typically, the queue depth is 3.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" -->
<p>If the value of the <code dir="ltr">maxservers</code> or <code dir="ltr">maxreqs</code> parameter is set too low, then the following warning messages are repeatedly displayed:</p>
<pre dir="ltr">
Warning: lio_listio returned EAGAINPerformance degradation may be seen.
</pre>
<p>You can avoid these errors by increasing the value of the <code dir="ltr">maxservers</code> parameter. To display the number of asynchronous Input-Output servers running, enter the following commands as the <code dir="ltr">root</code> user:</p>
<pre dir="ltr">
# pstat -a | grep -c aios
# ps -k | grep aioserver
</pre>
<p>Check the number of active asynchronous Input-Output servers periodically, and change the values of the <code dir="ltr">minservers</code> and <code dir="ltr">maxservers</code> parameters if required. The changes take place when the system is restarted.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
See your operating system vendor documentation for information about tuning AIO parameters.</div>
</div>
<!-- class="sect2" -->
<a id="BEHGGBAJ"></a>
<div id="UNXAR288" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">A.2.4</span> Input-Output Slaves<a id="sthref503"></a><a id="sthref504"></a></h3>
<p>Input-Output Slaves are specialized Oracle processes that perform only Input-Output. They are rarely used on AIX, because asynchronous Input-Output is the default and recommended way for Oracle to perform Input-Output operations on AIX. Input-Output Slaves are allocated from shared memory buffers. Input-Output Slaves use the initialization parameters listed in the following table:</p>
<div class="inftblinformal">
<table class="cellalignment1790" title="I/O Slave Parameters" summary="This table lists the I/O slave parameters, and their range and default values" dir="ltr">
<thead>
<tr class="cellalignment1784">
<th class="cellalignment1791" id="r1c1-t16">Parameter</th>
<th class="cellalignment1791" id="r1c2-t16">Range of Values</th>
<th class="cellalignment1791" id="r1c3-t16">Default Value</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1784">
<td class="cellalignment1792" id="r2c1-t16" headers="r1c1-t16"><code dir="ltr">DISK_ASYNCH_IO</code></td>
<td class="cellalignment1792" headers="r2c1-t16 r1c2-t16"><code dir="ltr">true</code>/<code dir="ltr">false</code></td>
<td class="cellalignment1792" headers="r2c1-t16 r1c3-t16"><code dir="ltr">true</code></td>
</tr>
<tr class="cellalignment1784">
<td class="cellalignment1792" id="r3c1-t16" headers="r1c1-t16"><code dir="ltr">TAPE_ASYNCH_IO</code></td>
<td class="cellalignment1792" headers="r3c1-t16 r1c2-t16"><code dir="ltr">true</code>/<code dir="ltr">false</code></td>
<td class="cellalignment1792" headers="r3c1-t16 r1c3-t16"><code dir="ltr">true</code></td>
</tr>
<tr class="cellalignment1784">
<td class="cellalignment1792" id="r4c1-t16" headers="r1c1-t16"><code dir="ltr">BACKUP_TAPE_IO_SLAVES</code></td>
<td class="cellalignment1792" headers="r4c1-t16 r1c2-t16"><code dir="ltr">true</code>/<code dir="ltr">false</code></td>
<td class="cellalignment1792" headers="r4c1-t16 r1c3-t16"><code dir="ltr">false</code></td>
</tr>
<tr class="cellalignment1784">
<td class="cellalignment1792" id="r5c1-t16" headers="r1c1-t16"><code dir="ltr">DBWR_IO_SLAVES</code></td>
<td class="cellalignment1792" headers="r5c1-t16 r1c2-t16">0 - 999</td>
<td class="cellalignment1792" headers="r5c1-t16 r1c3-t16">0</td>
</tr>
<tr class="cellalignment1784">
<td class="cellalignment1792" id="r6c1-t16" headers="r1c1-t16"><code dir="ltr">DB_WRITER_PROCESSES</code></td>
<td class="cellalignment1792" headers="r6c1-t16 r1c2-t16">1-20</td>
<td class="cellalignment1792" headers="r6c1-t16 r1c3-t16">1</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" -->
<p>Generally, you do not adjust the parameters in the preceding table. However, on large workloads, the database writer may become a bottleneck. If it does, then increase the value of <code dir="ltr">DB_WRITER_PROCESSES</code>. As a general rule, do not increase the number of database writer processes above one for each pair of CPUs in the system or partition.</p>
<p>There are times when you must turn off asynchronous I/O. For example, if instructed to do so by Oracle Support for debugging. You can use the <code dir="ltr">DISK_ASYNCH_IO</code> and <code dir="ltr">TAPE_ASYNCH_IO</code> parameters to switch off asynchronous I/O for disk or tape devices. <code dir="ltr">TAPE_ASYNCH_IO</code> support is only available when the Media Manager software supports it and for Recovery Manager, if <code dir="ltr">BACKUP_TAPE_IO_SLAVES</code> is true.</p>
<p>Set the <code dir="ltr">DBWR_IO_SLAVES</code> parameter to greater than 0 only if the <code dir="ltr">DISK_ASYNCH_IO</code> parameter is set to <code dir="ltr">false</code>. Otherwise, the database writer process becomes a bottleneck. In this case, the optimal value on AIX for the <code dir="ltr">DBWR_IO_SLAVES</code> parameter is 4.</p>
</div>
<!-- class="sect2" -->
<a id="BEHIIECG"></a>
<div id="UNXAR289" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">A.2.5</span> Using the DB_FILE_MULTIBLOCK_READ_COUNT Parameter<a id="sthref505"></a><a id="sthref506"></a></h3>
<p>When using Direct Input-Output or Concurrent Input-Output with Oracle Database 11<span class="italic">g,</span> the AIX file system does not perform any read-ahead on sequential scans. For this reason the <code dir="ltr">DB_FILE_MULTIBLOCK_READ_COUNT</code> value in the server parameter file should be increased when Direct Input-Output or Concurrent Input-Output is enabled on Oracle data files. The read ahead is performed by Oracle Database as specified by the <code dir="ltr">DB_FILE_MULTIBLOCK_READ_COUNT</code> initialization parameter.</p>
<p>Setting a large value for the <code dir="ltr">DB_FILE_MULTIBLOCK_READ_COUNT</code> initialization parameter usually yields better Input-Output throughput on sequential scans. On AIX, this parameter ranges from 1 to 512, but using a value higher than 16 usually does not provide additional performance gain.</p>
<p>Set this parameter so that its value when multiplied by the value of the <code dir="ltr">DB_BLOCK_SIZE</code> parameter produces a number larger than the Logical Volume Manager stripe size. Such a setting causes more disks to be used.</p>
</div>
<!-- class="sect2" -->
<a id="i631520"></a>
<div id="UNXAR290" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">A.2.6</span> Using Write Behind</h3>
<p>The write behind feature enables the operating system to group write Input-Output together, up to the size of a partition. You can improve performance by doing this, because the number of Input-Output operations is reduced. The file system divides each file into 16 KB partitions to increase write performance, limit the number of dirty pages in memory, and minimize disk fragmentation. The pages of a particular partition are not written to disk until the program writes the first byte of the next 16 KB partition. To set the size of the buffer for write behind to eight 16 KB partitions, enter the following command:</p>
<pre dir="ltr">
&agrave;        # /usr/sbin/vmo -o numclust=8
</pre>
<p>To disable write behind, enter the following command:</p>
<pre dir="ltr">
&agrave;        # /usr/sbin/vmo -o numclust=0 
</pre></div>
<!-- class="sect2" -->
<a id="BEHEBJBI"></a>
<div id="UNXAR291" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">A.2.7</span> Tuning Sequential Read Ahead<a id="sthref507"></a><a id="sthref508"></a></h3>
<div class="infobox-note">
<p class="notep1">Note:</p>
The information in this section applies only to file systems, and only when neither Direct Input-Output nor Concurrent Input-Output are used.</div>
<p><a id="i631528"></a>The VMM<a id="sthref509"></a> anticipates the need for pages of a sequential file. It observes the pattern in which a process accesses a file. When the process accesses two consecutive pages of the file, the VMM assumes that the program continues to access the file sequentially, and schedules additional sequential reads of the file. These reads overlap the program processing and make data available to the program faster. The following VMM thresholds, implemented as kernel parameters, determine the number of pages it reads ahead:</p>
<a id="i631530"></a>
<ul>
<li>
<p><code dir="ltr">minpgahead</code></p>
<p>This parameter stores the number of pages read ahead when the VMM first detects the sequential access pattern.</p>
</li>
<li>
<p><code dir="ltr">maxpgahead</code></p>
<p>This parameter stores the maximum number of pages that VMM reads ahead in a sequential file.</p>
</li>
</ul>
<p>Set the <code dir="ltr">minpgahead</code> and <code dir="ltr">maxpgahead</code> parameters to appropriate values for an application. The default values are 2 and 8 respectively. Use the <code dir="ltr">/usr/sbin/vmo</code> command to change these values. You can use higher values for the <code dir="ltr">maxpgahead</code> parameter in systems where the sequential performance of striped logical volumes is of paramount importance. To set the <code dir="ltr">minpgahead</code> parameter to 32 pages and the <code dir="ltr">maxpgahead</code> parameter to 64 pages, run the following command as the <code dir="ltr">root</code> user:</p>
<pre dir="ltr">
-o minpgahead=32 -o maxpgahead=64
</pre>
<p>Set both the <code dir="ltr">minpgahead</code> and <code dir="ltr">maxpgahead</code> parameters to a power of two. For example, 2, 4, 8, . . . 512, 1042, . . . and so on.</p>
</div>
<!-- class="sect2" -->
<a id="BEHFJFEG"></a>
<div id="UNXAR292" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">A.2.8</span> Tuning Disk Input-Output Pacing<a id="sthref510"></a></h3>
<p><a id="i631542"></a>Disk Input-Output pacing is an AIX mechanism that enables the system administrator to limit the number of pending Input-Output requests to a file. This prevents disk Input-Output intensive processes from saturating the CPU. Therefore, the response time of interactive and CPU-intensive processes does not deteriorate.</p>
<p><a id="i631549"></a>You can achieve disk Input-Output pacing by adjusting two system parameters: the high-water mark and the low-water mark. When a process writes to a file that has a pending high-water mark Input-Output request, the process is put to sleep. The process wakes up when the number of outstanding Input-Output requests falls lower than or equals the low-water mark.</p>
<p>You can use the <code dir="ltr">smit</code> command to change the high and low-water marks. Determine the water marks through trial-and-error. Use caution when setting the water marks, because they affect performance. Tuning the high and low-water marks has less effect on disk Input-Output larger than 4 KB.</p>
<p>You can determine disk Input-Output saturation by analyzing the result of <code dir="ltr">iostat</code>, in particular, the percentage of <code dir="ltr">iowait</code> and <code dir="ltr">tm_act</code>. A high <code dir="ltr">iowait</code> percentage combined with high <code dir="ltr">tm_act</code> percentages on specific disks is an indication of disk saturation.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
A high <code dir="ltr">iowait</code> alone is not necessarily an indication of an Input-Output bottleneck.</div>
</div>
<!-- class="sect2" -->
<a id="BEHGHJFH"></a>
<div id="UNXAR293" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">A.2.9</span> Resilvering with Oracle Database<a id="sthref511"></a></h3>
<p>If you disable mirror write consistency for an Oracle data file allocated on a raw logical volume, then the Oracle Database crash recovery process uses resilvering to recover after a system failure. This resilvering process prevents database inconsistencies or corruption.</p>
<p>During crash recovery, if a data file is allocated on a logical volume with multiple copies, then the resilvering process performs a checksum on the data blocks of all the copies. It then performs one of the following:</p>
<ul>
<li>
<p>If the data blocks in a copy have valid checksums, then the resilvering process uses that copy to update the copies that have invalid checksums.</p>
</li>
<li>
<p>If all copies have blocks with invalid checksums, then the resilvering process rebuilds the blocks using information from the redo log file. It then writes the data file to the logical volume and updates all the copies.</p>
</li>
</ul>
<p>On AIX, the resilvering process works only for data files allocated on raw logical volumes for which mirror write consistency is disabled. Resilvering is not required for data files on mirrored logical volumes with mirror write consistency enabled, because mirror write consistency ensures that all copies are synchronized.</p>
<p>If the system fails while you are upgrading an earlier release of Oracle Database that used data files on logical volumes for which mirror write consistency was disabled, then run the <code dir="ltr">syncvg</code> command to synchronize the mirrored logical volume before starting Oracle Database. If you do not synchronize the mirrored logical volume before starting the database, then Oracle Database may read incorrect data from an logical volume copy.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
If a disk drive fails, then resilvering does not occur. You must run the <code dir="ltr">syncvg</code> command before you can reactivate the logical volume.</div>
<div class="infobox-note">
<p class="notep1">Caution:</p>
Oracle supports resilvering for data files only. Do not disable mirror write consistency for redo log files.</div>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="i631579"></a>
<div id="UNXAR295" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1"><span class="secnum">A.3</span> CPU Scheduling and Process Priorities<a id="sthref512"></a></h2>
<p>The CPU is another system component for which processes may contend. Although the AIX kernel allocates CPU effectively most of the time, many processes compete for CPU cycles. If the system has multiple CPU (SMP), then there may be different levels of contention on each CPU.</p>
<p>The following sections provide information about CPU scheduling and process priorities:</p>
<ul>
<li>
<p><a href="#CHDJFHBC">Changing Process Running Time Slice</a></p>
</li>
<li>
<p><a href="#CHDDJGFI">Using Processor Binding on SMP Systems</a></p>
</li>
</ul>
<a id="CHDJFHBC"></a>
<div id="UNXAR296" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">A.3.1</span> Changing Process Running Time Slice</h3>
<p>The default value for the run-time slice of the AIX RR dispatcher is ten milliseconds (msec). Use the <a id="i632130"></a><code dir="ltr">schedo</code> command to change the time slice. A longer time slice causes a lower context switch rate if the average voluntary switch rate of the applications is lower. As a result, fewer CPU cycles are spent on context-switching for a process and the system throughput should improve.</p>
<p>However, a longer run-time slice can deteriorate response time, especially on a uniprocessor system. The default run-time slice is usually acceptable for most applications. When the run queue is high and most of the applications and Oracle shadow processes are capable of running a much longer duration, you may want to increase the time slice by entering the following command:</p>
<pre dir="ltr">
f # /usr/sbin/schedo -t <span class="italic">n</span>
</pre>
<p>In the preceding command, setting <code dir="ltr"><span class="codeinlineitalic">n</span></code> to 0 results in a slice of 10 msec, choosing a value of 1 results in a slice of 20 msec, choosing a value of 2 results in a slice of 30 msec, and so on.</p>
</div>
<!-- class="sect2" -->
<a id="CHDDJGFI"></a>
<div id="UNXAR297" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">A.3.2</span> Using Processor Bind<a id="sthref513"></a>ing on SMP Systems</h3>
<p>Binding certain processes to a processor can improve performance substantially on an SMP system. Processor binding is available and fully functional on AIX 5L.</p>
<p>However, starting with AIX 5L, specific improvements in the AIX scheduler enables Oracle Database processes to be scheduled optimally without processor binding. Therefore, Oracle no longer recommends binding processes to processors when running on AIX 5L version 5.3 or later.</p>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="BGBICJDA"></a>
<div id="UNXAR298" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1"><span class="secnum">A.4</span> Setting the AIXTHREAD_SCOPE Environment Variable<a id="sthref514"></a><a id="sthref515"></a></h2>
<p>Threads in AIX can run with process-wide contention scope (M:N) or with systemwide contention scope (1:1). The <code dir="ltr">AIXTHREAD_SCOPE</code> environment variable controls which contention scope is used.</p>
<p>The default value of the <code dir="ltr">AIXTHREAD_SCOPE</code> environment variable is <code dir="ltr">P</code>, which specifies process-wide contention scope. When using process-wide contention scope, Oracle threads are mapped to a pool of kernel threads. When Oracle is waiting on an event and its thread is swapped out, it may return on a different kernel thread with a different thread ID. Oracle uses the thread ID to post waiting processes, so it is important for the thread ID to remain the same. When using systemwide contention scope, Oracle threads are mapped to kernel threads statically, one to one. For this reason, Oracle recommends that you use systemwide contention. The use of systemwide contention is especially critical for Oracle Real Application Clusters (Oracle RAC) instances.</p>
<p>In addition, on AIX 5L version 5.3 or later, if you set systemwide contention scope, then significantly less memory is allocated to each Oracle process.</p>
<p>Oracle recommends that you set the value of the <code dir="ltr">AIXTHREAD_SCOPE</code> environment variable to <code dir="ltr">S</code> in the environment script that you use to set the <code dir="ltr">ORACLE_HOME</code> or <code dir="ltr">ORACLE_SID</code> environment variables for an Oracle Database instance or an Oracle Net listener process as follows:</p>
<ul>
<li>
<p>Bourne, Bash, or Korn shell:</p>
<p>Add the following line to the <code dir="ltr">~/.profile</code> or <code dir="ltr">/usr/local/bin/oraenv</code> script:</p>
<pre dir="ltr">
AIXTHREAD_SCOPE=S; export AIXTHREAD_SCOPE
</pre></li>
</ul>
<ul>
<li>
<p>C shell:</p>
<p>Add the following line to the <code dir="ltr">~/.login</code> or <code dir="ltr">/usr/local/bin/coraenv</code> script:</p>
<pre dir="ltr">
setenv AIXTHREAD_SCOPE S
</pre></li>
</ul>
<p>Doing this enables systemwide thread scope for running all Oracle processes.</p>
</div>
<!-- class="sect1" -->
<a id="CEGIEHJI"></a>
<div id="UNXAR299" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1"><span class="secnum">A.5</span> Network Information Service external naming support</h2>
<p>Network Information Service external naming adapter is supported on AIX. To configure and use Network Information Service external naming, refer to the "Configuring External Naming Methods" section of <a class="olink NETAG277" href="../../network.112/e41945/naming.htm#NETAG277"><span class="italic">Oracle Database Net Services Administrator's Guide</span></a>.</p>
</div>
<!-- class="sect1" -->
<a id="BABFBIDI"></a>
<div id="UNXAR300" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1"><span class="secnum">A.6</span> Simultaneous Multithreading on AIX 5.3 and Later Versions</h2>
<p>If Simultaneous Multithreading is enabled, and AIX 5.3 and later version operating system is used, then the <code dir="ltr">v$osstat</code> view reports 2 additional rows corresponding to the online logical (<code dir="ltr">NUM_LCPUS</code>) and virtual cpus (<code dir="ltr">NUM_VCPUS</code>).</p>
<p>If Oracle is run on AIX 5.3 and later versions without Simultaneous Multithreading, then these rows are not reported.</p>
</div>
<!-- class="sect1" -->
<a id="CEGGGEDF"></a>
<div id="UNXAR301" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1"><span class="secnum">A.7</span> Configuring IBM JSSE Provider with Oracle JDBC Thin Driver</h2>
<p>If you want to configure SSL on IBM JDK, then you may face the following issues:</p>
<ul>
<li>
<p>IBM JSSE does not support <code dir="ltr">SSLv2Hello</code> SSL protocol</p>
<p>For SSL clients using Thin JDBC connectors, you must set <code dir="ltr">oracle.net.ss1_version</code> system property to select <code dir="ltr">TLSv1</code> SSL protocol or <code dir="ltr">SSLv3</code> SSL protocol</p>
</li>
<li>
<p>IBM JSSE does not allow anonymous ciphers</p>
<p>For SSL clients using anonymous ciphers, you must replace the Default Trust Manager with a Custom Trust Manager that accepts anonymous ciphers.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
IBM JSSE documentation for more information on creating and installing Custom Trust Manager</div>
</li>
</ul>
</div>
<!-- class="sect1" --></div>
<!-- class="appendix" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment1783">
<tr>
<td class="cellalignment1792">
<table class="cellalignment1788">
<tr>
<td class="cellalignment1787"><a href="tuning.htm"><img width="24" height="24" src="../../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment1787"><a href="appc_linux.htm"><img width="24" height="24" src="../../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;2006, 2017,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment1794">
<table class="cellalignment1786">
<tr>
<td class="cellalignment1787"><a href="../../index.htm"><img width="24" height="24" src="../../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment1787"><a href="../../nav/portal_booklist.htm"><img width="24" height="24" src="../../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment1787"><a href="toc.htm"><img width="24" height="24" src="../../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment1787"><a href="index.htm"><img width="24" height="24" src="../../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment1787"><a href="../../nav/mindx.htm"><img width="24" height="24" src="../../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment1787"><a href="../../dcommon/html/feedback.htm"><img width="24" height="24" src="../../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>
</body>
</html>
