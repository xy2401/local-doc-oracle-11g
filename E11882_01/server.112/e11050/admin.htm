<!DOCTYPE html>
<html lang="en" >
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1">
<meta charset="utf-8">
<title>Using Heterogeneous Services Agents</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Version 5.1.1 Build 005" />
<meta name="dcterms.created" content="2009-07-31T22:45:59Z" />
<meta name="robots" content="all" />
<meta name="dcterms.title" content="Database Heterogeneous Connectivity User's Guide" />
<meta name="dcterms.identifier" content="E11050-01" />
<meta name="dcterms.isVersionOf" content="HETER" />
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;2001, 2009,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved." />
<link rel="Start" href="../../index.htm" title="Home" type="text/html" />
<link rel="Copyright" href="../../dcommon/html/cpyr.htm" title="Copyright" type="text/html" />

<script type="application/javascript"  src="../../dcommon/js/headfoot.js"></script>
<script type="application/javascript"  src="../../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html" />
<link rel="Index" href="index.htm" title="Index" type="text/html" />
<link rel="Prev" href="majfeat.htm" title="Previous" type="text/html" />
<link rel="Next" href="trouble.htm" title="Next" type="text/html" />
<link rel="alternate" href="../e11050.pdf" title="PDF version" type="application/pdf" />
<link rel="schema.dcterms" href="http://purl.org/dc/terms/" />
<link rel="stylesheet" href="../../dcommon/css/fusiondoc.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/header.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/footer.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/fonts.css">
<link rel="stylesheet" href="../../dcommon/css/foundation.css">
<link rel="stylesheet" href="../../dcommon/css/codemirror.css">
<link rel="stylesheet" type="text/css" title="Default" href="../../nav/css/html5.css">
<link rel="stylesheet" href="../../dcommon/css/respond-480-tablet.css">
<link rel="stylesheet" href="../../dcommon/css/respond-768-laptop.css">
<link rel="stylesheet" href="../../dcommon/css/respond-1140-deskop.css">
<script type="application/javascript" src="../../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">10/12</span> <!-- End Header --><a id="g1014945"></a><a id="i1007209"></a>
<h1 class="chapter"><span class="secnum">4</span> <a id="HETER004"></a>Using Heterogeneous Services Agents</h1>
<p>This chapter explains how to use Heterogeneous Services (HS) agents. For installing and configuring the agents, refer to the Oracle Database gateway installation and configuration guides. This chapter contains the following sections:</p>
<ul>
<li>
<p><a href="#i1006093">Initialization Parameters</a></p>
</li>
<li>
<p><a href="#i1006150">Optimizing Data Transfers Using Bulk Fetch</a></p>
</li>
<li>
<p><a href="#CDCDBAJJ">Optimizing Data Loads Using Parallel Load</a></p>
</li>
<li>
<p><a href="#i1006214">Registering Agents</a></p>
</li>
<li>
<p><a href="#i1006351">Oracle Database Server SQL Construct Processing</a></p>
</li>
<li>
<p><a href="#i1007467">Executing User-Defined Functions on a Non-Oracle Database</a></p>
</li>
<li>
<p><a href="#i1006431">Using Synonyms</a></p>
</li>
<li>
<p><a href="#i1006558">Copying Data from the Oracle Database Server to the Non-Oracle Database System</a></p>
</li>
<li>
<p><a href="#i1006620">Copying Data from the Non-Oracle Database System to the Oracle Database Server</a></p>
</li>
<li>
<p><a href="#i1006658">Using Heterogeneous Services Data Dictionary Views</a></p>
</li>
<li>
<p><a href="#CDCBDFAE">Using the Heterogeneous Services Dynamic Performance Views</a></p>
</li>
</ul>
<a id="i1006093"></a>
<div class="sect1">
<h2 class="sect1"><span class="secnum">4.1</span> Initialization Parameters<a id="sthref102"></a><a id="sthref103"></a><a id="sthref104"></a></h2>
<p>Configure the gateway using initialization parameters. This is done by creating an initialization file and setting the desired parameters in this file. See <a href="tgvsgc.htm#i1006030">Section 2.5</a> for configuration information.</p>
<p>Heterogeneous Services initialization parameters are distinct from Oracle Database initialization parameters. Heterogeneous Services initialization parameters are set in the Heterogeneous Services initialization file and not in the Oracle database initialization parameter file (<code>init.ora</code> file). There is a Heterogeneous Services initialization file for each gateway instance.</p>
<p>The following sections describe:</p>
<ul>
<li>
<p>Encrypting Initialization Parameters</p>
</li>
<li>
<p>Gateway Initialization Parameters</p>
</li>
</ul>
<a id="CDCJHICA"></a>
<div class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">4.1.1</span> Encrypting <a id="HETER4010"></a>Initialization Parameters</h3>
<p>Initialization parameters may contain sensitive information, such as user IDs or passwords. Initialization parameters are stored in plain text files and are insecure. An encryption feature has been added to Heterogeneous Services making it possible to encrypt parameter values. This is done through the <code>dg4pwd</code> utility. To use this feature requires setting the value of a parameter in the initialization file to an unquoted asterisk (*). For example:</p>
HD_FDS_CONNECT_INFO = *
<p>With the value set to this security marker, all Heterogeneous Services agents know that the real value will be stored in a related, encrypted password file. The name of this file will be <code>init</code><code><span class="codeinlineitalic">sid</span></code><code>.pwd</code>, where <code><span class="codeinlineitalic">sid</span></code> is the Oracle system identifier used for the gateway. This file is created by the <code>dg4pwd</code> utility in the current directory containing the initialization file. Running the utility prompts for the real value of the parameter, which the utility will encrypt and store in the password file. It should be noted that encrypted initialization parameters are implicitly treated as <code>PRIVATE</code> parameters and are not uploaded to the server.</p>
<div class="sect3"><!-- infolevel="all" infotype="General" --><a id="sthref105"></a>
<h4 class="sect3"><span class="secnum">4.1.1.1</span> Using the dg4pwd Utility</h4>
<p>The <code>dg4pwd</code> utility is used to encrypt initialization parameters that would normally be stored in the initialization parameter file in plain text. The utility works by reading the initialization parameter file in the current directory and looking for parameters having a security marker for the value. The security marker is an unquoted asterisk (*). This designates that the value of this parameter is to be stored in an encrypted form in a password file. The following is an example of an initialization parameter set to this value:</p>
<pre>
HS_FDS_CONNECT_INFO = *
</pre>
<p>The initialization parameter file in the current directory is first edited to set the value of the parameter to this security marker. Then the utility is run, specifying the gateway SID on the command line, with an optional user ID to designate a different owner of the encrypted information. The utility reads the initialization parameter file and prompts you to enter the real values that are to be encrypted. The syntax of the command is:</p>
<pre>
dg4pwd [<span class="italic">sid</span>] {<span class="italic">userid</span>}
</pre>
<p>Where <code>[</code><code><span class="codeinlineitalic">sid</span></code><code>]</code> is the SID of the gateway and <code>{</code><code><span class="codeinlineitalic">userid</span></code><code>}</code> is an optional user ID used to encrypt the contents. If no user ID is specified, then the current user's ID is used. Values are encrypted using this ID. In order to decrypt the values, the agent must be run as that user. The following example assumes a gateway SID of SYBASE:</p>
<pre>
dg4pwd SYBASE
ORACLE Gateway Password Utility
Constructing password file for Gateway SID SYBASE
Enter the value for HS_FDS_CONNECT_INFO
sybasew
</pre>
<p>In the previous example, the initialization parameter file, <code>initSYBASE.ora</code>, is read. The parameter, <code>HS_FDS_CONNECT_INFO</code>, is identified as requiring encryption. Enter the value (for example, <code>sybasew</code>) and presses enter. If more parameters require encryption, they are prompted for in turn. The encrypted data is stored in the same directory as the initialization file.Any initialization parameters needing encryption should be encrypted before using the Oracle Database gateway.</p>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<div class="sect2"><a id="sthref106"></a>
<h3 class="sect2"><span class="secnum">4.1.2</span> Gateway Initialization Parameters</h3>
<p>Gateway initialization parameters can be divided into two groups. One is a set of generic initialization parameters that are common to all gateways and the other is a set of initialization parameters that are specific to individual gateways. The following generic initialization parameters are the only initialization parameters discussed in this document:</p>
<br />
<code>HS_BULK</code><br />
<code>HS_CALL_NAME</code><br />
<code>HS_COMMIT_POINT_STRENGTH</code><br />
<code>HS_DB_DOMAIN</code><br />
<code>HS_DB_INTERNAL_NAME</code><br />
<code>HS_DB_NAME</code><br />
<code>HS_DESCRIBE_CACHE_HWM</code><br />
<code>HS_FDS_CONNECT_INFO</code><br />
<code>HS_FDS_DEFAULT_SCHEMA_NAME</code><br />
<code>HS_FDS_SHAREABLE_NAME</code><br />
<code>HS_FDS_TRACE_LEVEL</code><br />
<code>HS_LANGUAGE</code><br />
<code>HS_LONG_PIECE_TRANSFER_SIZE</code><br />
<code>HS_NLS_DATE_FORMAT</code><br />
<code>HS_NLS_DATE_LANGUAGE</code><br />
<code>HS_NLS_NCHAR</code><br />
<code>HS_NLS_NUMERIC_CHARACTERS</code><br />
<code>HS_NLS_TIMESTAMP_FORMAT</code><br />
<code>HS_NLS_TIMESTAMP_TZ_FORMAT</code><br />
<code>HS_OPEN_CURSORS</code><br />
<code>HS_ROWID_CACHE_SIZE</code><br />
<code>HS_RPC_FETCH_REBLOCKING</code><br />
<code>HS_RPC_FETCH_SIZE</code><br />
<code>HS_TIME_ZONE</code><br />
<p>Do not use the <code>PRIVATE</code> keyword when setting any of these parameters. Using the <code>PRIVATE</code> keyword prevents the parameter from being uploaded to the server and can cause errors in SQL processing. None of these parameters needs to be set in the environment, so you do not need to use the <code>SET</code> keyword.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
Individual gateway documentation for the list of initialization parameters specific to a gateway</div>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="i1006150"></a>
<div class="sect1">
<h2 class="sect1"><span class="secnum">4.2</span> Optimizing Data Transfers Using Bulk Fetch</h2>
<p><a id="sthref107"></a><a id="sthref108"></a><a id="sthref109"></a>When<a id="sthref110"></a> an application fetches data from a non-Oracle system using Heterogeneous Services, data is transferred:</p>
<ol>
<li>
<p>From the non-Oracle system to the agent process.</p>
</li>
<li>
<p>From the agent process to Oracle Database.</p>
</li>
<li>
<p>From Oracle Database to the application.</p>
</li>
</ol>
<p>Oracle optimizes all three data transfers, as illustrated in <a href="#i1006162">Figure 4-1</a>.</p>
<div class="figure">
<p class="titleinfigure"><a id="i1006162"></a>Figure 4-1 Optimizing Data Transfers</p>
<img width="600" height="368" src="img/heter009.gif" alt="Description of Figure 4-1 follows" title="Description of Figure 4-1 follows" /><br />
<a id="sthref111" href="img_text/heter009.htm">Description of "Figure 4-1 Optimizing Data Transfers"</a><br />
<br /></div>
<!-- class="figure" -->
<p>This section contains the following topics:</p>
<ul>
<li>
<p><a href="#i1006185">Using OCI, an Oracle Precompiler, or Another Tool for Array Fetches</a></p>
</li>
<li>
<p><a href="#i1006190">Controlling the Array Fetch Between Oracle Database and the Agent</a></p>
</li>
<li>
<p><a href="#i1006197">Controlling the Array Fetch Between the Agent and the Non-Oracle System</a></p>
</li>
<li>
<p><a href="#i1006204">Controlling the Reblocking of Array Fetches</a></p>
</li>
</ul>
<a id="i1006185"></a>
<div class="sect2">
<h3 class="sect2"><span class="secnum">4.2.1</span> Using OCI, an Oracle Precompiler, or Another Tool for Array Fetches</h3>
<p><a id="sthref112"></a><a id="sthref113"></a><a id="sthref114"></a><a id="sthref115"></a>You can optimize data transfers between your application and Oracle Database by using <a id="sthref116"></a>array fetches. See your application development tool documentation for information about array fetching and how to specify the amount of data to be sent and each network round-trip.</p>
</div>
<!-- class="sect2" -->
<a id="i1006190"></a>
<div class="sect2">
<h3 class="sect2"><span class="secnum">4.2.2</span> Controlling the Array Fetch Between Oracle Database and the Agent</h3>
<p><a id="sthref117"></a><a id="sthref118"></a>When Oracle retrieves data from a non-Oracle system, the Heterogeneous Services initialization parameter, <code><a id="sthref119"></a>HS_RPC_FETCH_SIZE</code>, defines the number of bytes sent for each fetch between the agent and Oracle Database. The agent fetches data from the non-Oracle system until one of the following occurs:</p>
<ul>
<li>
<p>It has accumulated the specified number of bytes to send back to Oracle Database.</p>
</li>
<li>
<p>The last row of the result set is fetched from the non-Oracle system.</p>
</li>
</ul>
</div>
<!-- class="sect2" -->
<a id="i1006197"></a>
<div class="sect2">
<h3 class="sect2"><span class="secnum">4.2.3</span> Controlling the Array Fetch Between the Agent and the Non-Oracle System</h3>
<p><a id="sthref120"></a><a id="sthref121"></a>The initialization parameter, <code><a id="sthref122"></a>HS_FDS_FETCH_ROWS</code>, determines the number of rows to be retrieved from a non-Oracle system. Note that the <a id="sthref123"></a>array fetch must be supported by the agent. See your agent-specific documentation to ensure that your agent supports array fetching.</p>
</div>
<!-- class="sect2" -->
<a id="i1006204"></a>
<div class="sect2">
<h3 class="sect2"><span class="secnum">4.2.4</span> <a id="sthref124"></a>Controlling the Reblocking of Array Fetches</h3>
<p><a id="sthref125"></a><a id="sthref126"></a>By default, an agent fetches data from the non-Oracle system until it has enough data retrieved to send back to the system. It continues until the number of bytes fetched from the non-Oracle system is equal to or higher than the value of <code><a id="sthref127"></a>HS_RPC_FETCH_SIZE</code> initialization parameter. In other words, the agent <span class="bold">reblocks</span> the data between the agent and Oracle Database in sizes defined by the value of the <code>HS_RPC_FETCH_SIZE</code> initialization parameter.</p>
<p>When the non-Oracle system supports array fetches, you can immediately send the data fetched from the non-Oracle system by the array fetch to Oracle Database without waiting until the exact value of the <code>HS_RPC_FETCH_SIZE</code> initialization parameter is reached. That is, you can stream the data from the non-Oracle system to Oracle Database and disable reblocking by setting the value of the <code><a id="sthref128"></a>HS_RPC_FETCH_REBLOCKING</code> initialization parameter to <code>OFF</code>.</p>
<p>For example, assume that you set <code>HS_RPC_FETCH_SIZE</code> to 64 kilobytes (KB) and <code>HS_FDS_FETCH_ROWS</code> to 100 rows. Also assume that each row is approximately 600 bytes in size, so that the 100 rows are approximately 60 KB. When the <code>HS_RPC_FETCH_REBLOCKING</code> initialization parameter is set to <code>ON</code>, the agent starts fetching 100 rows from the non-Oracle system.</p>
<p>Because there is only 60 KB of data in the agent, the agent does not send the data back to Oracle Database. Instead, the agent fetches the next 100 rows from the non-Oracle system. Because there is now 120 KB of data in the agent, the first 64 KB can be sent back to Oracle Database.</p>
<p>Now there is 56 KB of data left in the agent. The agent fetches another 100 rows from the non-Oracle system before sending the next 64 KB of data to Oracle Database. By setting the <code>HS_RPC_FETCH_REBLOCKING</code> initialization parameter to <code>OFF</code>, the first 100 rows are immediately sent back to the Oracle database server.</p>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="CDCDBAJJ"></a>
<div class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1"><span class="secnum">4.3</span> Optimizing Data Loads Using <a id="HETER4001"></a>Parallel Load</h2>
<p>The <code>DBMS_HS_PARALLEL</code> PL/SQL package enables parallel processing for heterogeneous targets access. This package improves performance when retrieving data from a large foreign table.</p>
<p><code>DBMS_HS_PARALLEL</code> is compiled with an authorization ID of <code>CURRENT_USER</code>, meaning it uses invoker's rights. In other words, all procedures in this package are executed with the privileges of the calling user.</p>
<p>For additional information about the procedures, see <span class="italic"><a class="olink ARPLS" href="../../appdev.112/e40758/toc.htm">Oracle Database PL/SQL Packages and Types Reference</a></span>.</p>
</div>
<!-- class="sect1" -->
<a id="i1006214"></a>
<div class="sect1">
<h2 class="sect1"><span class="secnum">4.4</span> Registering Agents</h2>
<p><span class="bold"><a id="sthref129"></a><a id="sthref130"></a>Registration</span> is an operation through which Oracle stores information about an agent in the data dictionary. Agents do not have to be registered. If an agent is not registered, Oracle stores information about the agent in memory instead of in the data dictionary. When a session involving an agent terminates, this information ceases to be available.</p>
<p><span class="bold">Self</span>-<span class="bold">registration</span> is an operation in which a database administrator sets an initialization parameter that lets the agent automatically upload information into the data dictionary. Self-registration occurs when the <code>HS_AUTOREGISTER</code> initialization parameter is set to <code>TRUE</code> (default).</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
<code>HS_AUTOREGISTER</code> is an Oracle initialization parameter that you set in the <code>init.ora</code> file; it is not a Heterogeneous Services initialization parameter that is set in the gateway initialization file.</div>
<p>This section contains the following topics:</p>
<ul>
<li>
<p><a href="#i1006233">Enabling Agent Self-Registration</a></p>
</li>
<li>
<p><a href="#i1006344">Disabling Agent Self-Registration</a></p>
</li>
</ul>
<a id="i1006233"></a>
<div class="sect2">
<h3 class="sect2"><span class="secnum">4.4.1</span> Enabling Agent Self-Registration</h3>
<p><a id="sthref131"></a><a id="sthref132"></a>To ensure correct operation over heterogeneous database links, agent self-registration automates updates to Heterogeneous Services configuration data that describe agents on remote hosts. Agent self-registration is the default behavior. If you do not want to use the agent self-registration feature, set the <code>HS_AUTOREGISTER</code> initialization parameter to <code>FALSE</code>.</p>
<p>Both the server and the agent rely on three types of information to configure and control operation of the Heterogeneous Services connection. These three sets of information are collectively called <span class="bold">HS configuration data</span>:</p>
<div class="inftblruleinformal">
<table class="cellalignment1573" title="Heterogeneous Services configuration data" summary="This table is described in the preceding text" dir="ltr">
<thead>
<tr class="cellalignment1567">
<th class="cellalignment1574" id="r1c1-t4">Heterogeneous Services Configuration Data</th>
<th class="cellalignment1574" id="r1c2-t4">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1567">
<td class="cellalignment1575" id="r2c1-t4" headers="r1c1-t4">Heterogeneous Services initialization parameters</td>
<td class="cellalignment1575" headers="r2c1-t4 r1c2-t4">Provide control over various connection-specific details of operation.</td>
</tr>
<tr class="cellalignment1567">
<td class="cellalignment1575" id="r3c1-t4" headers="r1c1-t4">Capability definitions</td>
<td class="cellalignment1575" headers="r3c1-t4 r1c2-t4">Identify details like SQL language features supported by the non-Oracle data source.</td>
</tr>
<tr class="cellalignment1567">
<td class="cellalignment1575" id="r4c1-t4" headers="r1c1-t4">Data dictionary translations</td>
<td class="cellalignment1575" headers="r4c1-t4 r1c2-t4">Map references to Oracle data dictionary tables and views into equivalents specific to the non-Oracle data source.</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblruleinformal" -->
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#i1006326">Section 4.4.1.3, "Specifying HS_AUTOREGISTER"</a></div>
<div class="sect3"><a id="sthref133"></a>
<h4 class="sect3"><span class="secnum">4.4.1.1</span> Using Agent Self-Registration to Avoid Configuration Mismatches</h4>
<p><a id="sthref134"></a><a id="sthref135"></a>HS configuration data is stored in the data dictionary of the Oracle database server. Because the agent may be remote and may therefore be administered separately, several circumstances can lead to configuration mismatches between servers and agents. For example:</p>
<ul>
<li>
<p>An agent can be newly installed on a separate computer so that the server has no Heterogeneous Services data dictionary content to represent the agent's Heterogeneous Services configuration data.</p>
</li>
<li>
<p>A server can be newly installed and lack the necessary Heterogeneous Services configuration data for existing agents and non-Oracle data stores.</p>
</li>
<li>
<p>A non-Oracle instance can be upgraded from an older version to a newer version, requiring modification of the Heterogeneous Services configuration data.</p>
</li>
<li>
<p>A Heterogeneous Services agent at a remote site can be upgraded to a new version or patched, requiring modification of the Heterogeneous Services configuration data.</p>
</li>
<li>
<p>A database administrator (DBA) at the non-Oracle site can change the agent setup, possibly for tuning or testing purposes, in a manner which affects Heterogeneous Services configuration data.</p>
</li>
</ul>
<p>Agent self-registration permits successful operation of Heterogeneous Services in all these scenarios. Specifically, agent self-registration enhances interoperability between any Oracle database server and any Heterogeneous Services agent (if each is Version 8.0.3 or higher). The basic mechanism for this functionality is the ability to upload Heterogeneous Services configuration data from agents to servers.</p>
<p>Self-registration provides automatic updating of Heterogeneous Services configuration data residing in the Oracle database server data dictionary. This update ensures that the agent self-registration uploads need to be done only once, on the initial use of a previously unregistered agent. Instance information is uploaded on each connection, not stored in the server data dictionary.</p>
</div>
<!-- class="sect3" -->
<div class="sect3"><a id="sthref136"></a>
<h4 class="sect3"><span class="secnum">4.4.1.2</span> Understanding Agent Self-Registration</h4>
<p><a id="sthref137"></a><a id="sthref138"></a>The Heterogeneous Services agent self-registration feature can perform the following tasks:</p>
<ul>
<li>
<p>Identify the agent and the non-Oracle data store to the Oracle database server</p>
</li>
<li>
<p>Permit agents to define Heterogeneous Services initialization parameters for use both by the agent and connected Oracle servers</p>
</li>
<li>
<p>Upload capability definitions and data dictionary translations, if available, from a Heterogeneous Services agent during connection initialization</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
The upload of class information occurs only when the class is undefined in the server data dictionary. Similarly, instance information is uploaded only if the instance is undefined in the server data dictionary.</div>
</li>
</ul>
<p>The information required for agent self-registration is accessed in the server data dictionary by using these agent-supplied names:</p>
<ul>
<li>
<p><code>FDS_CLASS</code></p>
</li>
<li>
<p><code>FDS_CLASS_VERSION</code></p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#i1006658">Section 4.10, "Using Heterogeneous Services Data Dictionary Views"</a> to learn how to use the Heterogeneous Services data dictionary views</div>
</li>
</ul>
<div class="sect4"><a id="sthref139"></a>
<h5 class="sect4"><span class="secnum">4.4.1.2.1</span> <a id="sthref140"></a>FDS_CLASS and <a id="sthref141"></a>FDS_CLASS_VERSION</h5>
<p><code>FDS_CLASS</code> and <code>FDS_CLASS_VERSION</code> are defined by Oracle or by third-party vendors for each individual Heterogeneous Services agent and version. Oracle Heterogeneous Services concatenates these names to form <code>FDS_CLASS_NAME</code>, which is used as a primary key to access class information in the server data dictionary.</p>
<p><code>FDS_CLASS</code> should specify the type of non-Oracle data store to be accessed and <code>FDS_CLASS_VERSION</code> should specify a version number for both the non-Oracle data store and the agent that connects to it. Note that when any component of an agent changes, <code>FDS_CLASS_VERSION</code> must also change to uniquely identify the new release.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
This information is uploaded when you initialize each connection.</div>
</div>
<!-- class="sect4" -->
<div class="sect4"><a id="sthref142"></a>
<h5 class="sect4"><span class="secnum">4.4.1.2.2</span> <a id="sthref143"></a>FDS_INST_NAME</h5>
<p><span class="bold">Instance</span>-<span class="bold">Specific Information</span> can be stored in the server data dictionary. The instance name, <code>FDS_INST_NAME</code>, is configured by the database administrator (DBA) who administers the agent. How the DBA performs this configuration depends on the specific agent in use.</p>
<p>The Oracle database server uses <code>FDS_INST_NAME</code> to look up instance-specific configuration information in its data dictionary. Oracle uses the value as a primary key for columns of the same name in these views:</p>
<ul>
<li>
<p><code>FDS_INST_INIT</code></p>
</li>
<li>
<p><code>FDS_INST_CAPS</code></p>
</li>
<li>
<p><code>FDS_INST_DD</code></p>
</li>
</ul>
<p>Server data dictionary accesses that use <code>FDS_INST_NAME</code> also use <code>FDS_CLASS_NAME</code> to uniquely identify configuration information rows. For example, if you port a database from class Sybase816 to class Sybase817, both databases can simultaneously operate with instance name <code>SCOTT</code> and use separate sets of configuration information.</p>
<p>Unlike class information, instance information is not automatically self-registered in the server data dictionary:</p>
<ul>
<li>
<p>If available, instance information is always uploaded by the agent. However, it is never stored in the server data dictionary. Instead, the information is kept in memory and it is only valid for that connection.</p>
</li>
<li>
<p>If the server data dictionary contains instance information, it represents the DBA's defined setup details which correspond to the instance configuration. Data dictionary defined instance information takes precedence over class information. However, uploaded instance information takes precedence over data dictionary defined instance information.</p>
</li>
</ul>
</div>
<!-- class="sect4" --></div>
<!-- class="sect3" -->
<a id="i1006326"></a>
<div class="sect3">
<h4 class="sect3"><span class="secnum">4.4.1.3</span> Specifying HS_AUTOREGISTER</h4>
<p>The <code><a id="sthref144"></a>HS_AUTOREGISTER</code> Oracle database server initialization parameter enables or disables automatic self-registration of Heterogeneous Services agents. Note that this parameter is specified in the Oracle initialization parameter file, not the agent initialization file. For example, you can set the parameter as follows:</p>
<pre>
HS_AUTOREGISTER = TRUE
</pre>
<p>When set to <code>TRUE</code>, the agent uploads information describing a previously unknown agent class or a new agent version into the server's data dictionary.</p>
<p>Oracle recommends that you use the default value for this parameter (<code>TRUE</code>), which ensures that the server's data dictionary content always correctly represents definitions of class capabilities and data dictionary translations as used in Heterogeneous Services connections.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<span class="italic"><a class="olink REFRN" href="../e40402/toc.htm">Oracle Database Reference</a></span> for a description of this parameter</div>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="i1006344"></a>
<div class="sect2">
<h3 class="sect2"><span class="secnum">4.4.2</span> Disabling Agent Self-Registration</h3>
<p><a id="sthref145"></a><a id="sthref146"></a>To disable agent self-registration, set the <code>HS_AUTOREGISTER</code> initialization parameter as follows:</p>
<pre>
HS_AUTOREGISTER = FALSE
</pre>
<p>Disabling agent self-registration means that agent information is not stored in the data dictionary. Consequently, the Heterogeneous Services data dictionary views are not useful sources of information. Nevertheless, the Oracle server still requires information about the class and instance of each agent. If agent self-registration is disabled, the server stores this information in local memory.</p>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="i1006351"></a>
<div class="sect1">
<h2 class="sect1"><span class="secnum">4.5</span> Oracle Database Server SQL Construct Processing</h2>
<p>Heterogeneous Services and the gateway rewrite SQL statements when the statements need to be translated or postprocessed. <a id="sthref147"></a></p>
<p>For the following examples, assume the <code>INITCAP</code> function is not supported in the non-Oracle database. Consider a program that requests the following from the non-Oracle database. For example:</p>
<pre>
SELECT "COLUMN_A" FROM "test"@remote_db
    WHERE "COLUMN_A" = INITCAP("COLUMN_B");
</pre>
<p>The non-Oracle database does not recognize the <code>INITCAP</code> function, so the Oracle database server fetches the data from the table <code>test</code> in the remote database and filters the results locally. The gateway rewrites the <code>SELECT</code> statement as follows:</p>
<pre>
SELECT "COLUMN_A", "COLUMN_B" FROM "test"@remote_db;
</pre>
<p>The results of the query are sent from the gateway to Oracle and are filtered by the Oracle database server.</p>
<p>If a string literal or bind variable is supplied in place of <code>"COLUMN_B"</code> as shown in the previous example, the Heterogeneous Services component of the Oracle server would apply the <code>INITCAP</code> function before sending the SQL command to the gateway. For example, if the following SQL command is issued:</p>
<pre>
SELECT "COLUMN_A" FROM "test"@remote_db WHERE "COLUMN_A" = INITCAP('jones');
</pre>
<p>The following SQL command would be sent to the gateway:</p>
<pre>
SELECT "COLUMN_A" FROM "test"@remote_db WHERE "COLUMN_A" = 'Jones';
</pre>
<p>Consider the following <code>UPDATE</code> request:</p>
<pre>
UPDATE "test"@remote_db SET "COLUMN_A" = 'new_value'
    WHERE "COLUMN_A" = INITCAP("COLUMN_B");
</pre>
<p>In this case, the Oracle database server and the gateway cannot compensate for the lack of support at the non-Oracle side, so an error is issued.</p>
<p>If a string literal or bind variable is supplied in place of <code>"COLUMN_B"</code> as shown in the preceding example, the Heterogeneous Services component of the Oracle server would apply the <code>INITCAP</code> function before sending the SQL command to the gateway. For example, if the following SQL command is issued:</p>
<pre>
UPDATE "test"@remote_db SET "COLUMN_A" = 'new_value' 
    WHERE "COLUMN_A" = INITCAP('jones');
</pre>
<p>The following SQL command would be sent to the gateway:</p>
<pre>
UPDATE  "test"@remote_db SET "COLUMN_A" = 'new_value' 
    WHERE "COLUMN_A" = 'Jones';
</pre>
<p>In previous releases, the preceding <code>UPDATE</code> statement would have raised an error due to the lack of <code>INITCAP</code> function support in the non-Oracle database.</p>
<div class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref148"></a>
<h3 class="sect2"><span class="secnum">4.5.1</span> Data Type Checking <a id="sthref149"></a><a id="sthref150"></a>Support for a Remote-Mapped Statement</h3>
<p>The Oracle database has always performed data type checking and data type coercion in a homogeneous environment. For example, <code>SELECT * FROM EMP WHERE EMPNO='7934'</code> would return the same result as <code>SELECT * FROM EMPNO WHERE EMPNO=7934</code>. There is also full data type checking support for remote-mapped statements in a heterogeneous environment. In general, the operands in SQL statements whether its a column, literal, or bind variable would be processed internally for data type checking. Consider the following examples:</p>
<pre>
SELECT * FROM EMP@LINK WHERE NUMBER_COLUMN='123'
SELECT * FROM EMP@LINK WHERE NUMBER_COLUMN=CHAR_COLUMN;
SELECT * FROM EMP@LINK WHERE NUMBER_COLUMN=CHAR_BIND_VARIABLE;
</pre>
<p>Most non-Oracle databases do not support data type coercion, and the previous statements fail if they are sent to a non-Oracle database as is. The Heterogeneous Services component for the Oracle database performs data type checking and the necessary data type coercion before sending an acceptable statement to a non-Oracle database.</p>
<p>Data type checking provides consistent behavior on post-processed or remote-mapped statements. Consider the following two statements:</p>
<pre>
SELECT * FROM EMP@LINK WHERE TO_CHAR(EMPNO)='7933' + '1';
</pre>
<p>And:</p>
<pre>
SELECT * FROM EMP@LINK WHERE EMPNO='7933' + '1';
</pre>
<p>Both of the previous statements provide the same result and coercion regardless if the <code>TO_CHAR</code> function is supported in the non-Oracle database or not. Now, consider the following statement:</p>
<pre>
SELECT * FROM EMP@LINK WHERE EMPNO='123abc' + '1';
</pre>
<p>As data type checking is enforced, the coercion attempt within Oracle generates an error and returns it without sending any statements to a non-Oracle database.</p>
<p>In summary, there is consistent data type checking and coercion behavior regardless of post-processed or remote-mapped statements.</p>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="i1007467"></a>
<div class="sect1">
<h2 class="sect1"><span class="secnum">4.6</span> Executing User-Defined Functions on a Non-Oracle Database</h2>
<p>You can execute user-defined <a id="sthref151"></a>functions in a remote non-Oracle database. For example:</p>
<pre>
SELECT getdeptforemp@Remote_DB(7782) FROM dual;
</pre>
<p>In this example, a <code>SELECT</code> statement was issued that executes a user-defined function in the remote database that returns department information for employee 7782.</p>
<p>When the remote function resides in an Oracle database, the Oracle database automatically ensures that the remote function does not update any database state (such as updating rows in a database or updating the PL/SQL package state). The gateway cannot verify this when the remote function resides in a non-Oracle database. Therefore, you are responsible for ensuring that the user-defined functions do not update the state in any database. Ensuring no updates to the database is required to guarantee read consistency.</p>
<p>As a security measure, you must specify the functions that you want to execute remotely and their owners in the <code>HS_CALL_NAME</code> parameter in the gateway-specific initialization parameter file. For example:</p>
<pre>
</pre>
<pre>
HS_CALL_NAME = "owner1.A1, owner2.A2 "
</pre>
<p><code>owner1</code> and <code>owner2</code> are the remote function owner names. <code>A1</code> and <code>A2</code> are the remote function names. You do not need to specify the remote function owner in the SQL statement. By default, the remote function needs to reside in the schema that the Database Gateway connects to. If this is not the case, then you must specify the owner of the remote function in the SQL statement.</p>
<p>Some other examples of executing user-defined remote functions are as follows:</p>
<ul>
<li>
<p>A remote function in a subquery</p>
<p>The function uses the <code>employee_id</code> column data to retrieve the <code>department_id</code> from the <code>EMPLOYEES</code> table in the remote database. The outer query then determines all department numbers in the remote database that match the returned list.</p>
<pre>
SELECT * FROM departments@remotedb
  WHERE department_id IN
     (SELECT
      getdeptforemp@remotedb (employee_id)
      FROM employees@remotedb);
</pre></li>
</ul>
<ul>
<li>
<p>Applying a local function to the result of a user-defined remote function</p>
<p>This query returns the maximum salary of all employees on the remote database.</p>
<pre>
SELECT max (getsalforemp@remotedb (employee_id))
   FROM employees@remotedb;
</pre></li>
</ul>
<ul>
<li>
<p>A DML statement</p>
<p>The statement uses the output from a user-defined query in the remote database to update the salary column with new salary information.</p>
<pre>
UPDDATE employee_history
   SET salary = emp_changed_salary@remote_db;
</pre></li>
</ul>
<p>In these examples, the Oracle database passes the function name and owner to the Database Gateway. The user-defined function is executed on the remote database.</p>
</div>
<!-- class="sect1" -->
<a id="i1006431"></a>
<div class="sect1">
<h2 class="sect1"><span class="secnum">4.7</span> Using Synonyms</h2>
<p><a id="sthref152"></a>You can provide complete data location transparency and network transparency by using the synonym feature of the Oracle database server. When a synonym is defined, you do not have to know the underlying table or network protocol. A synonym can be public, which means that all Oracle users can refer to the synonym. A synonym can also be defined as private, which means every Oracle user must have a synonym defined to access the non-Oracle table.</p>
<p>The following statement creates a systemwide synonym for the <code>emp</code> table in the schema of user <code>ORACLE</code> in the Sybase database:</p>
<pre>
CREATE PUBLIC SYNONYM emp FOR "ORACLE"."EMP"@SYBS;

</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink ADMIN" href="../e25494/toc.htm"><span class="italic">Oracle Database Administrator's Guide</span></a> for information about synonyms</div>
<pre>

</pre>
<div class="sect2"><a id="sthref153"></a>
<h3 class="sect2"><span class="secnum">4.7.1</span> Example of a Distributed Query</h3>
<div class="infobox-note">
<p class="notep1">Note:</p>
Modify these examples for your environment. Do not try to execute them as they are written.</div>
<p>The following statement joins data between the Oracle database server, an IBM DB2 database, and a Sybase database:</p>
<pre>
SELECT O.CUSTNAME, P.PROJNO, E.ENAME, SUM(E.RATE*P."HOURS")
       FROM ORDERS@DB2 O, EMP@ORACLE9 E, "PROJECTS"@SYBS P
       WHERE O.PROJNO = P."PROJNO"
          AND P."EMPNO" = E.EMPNO
       GROUP BY O.CUSTNAME, P."PROJNO", E.ENAME;
</pre>
<p>Through a combination of views and synonyms, using the following SQL statements, the process of distributed queries is transparent:</p>
<pre>
CREATE SYNONYM ORDERS FOR ORDERS@DB2;
CREATE SYNONYM PROJECTS FOR "PROJECTS"@SYBS;
CREATE VIEW DETAILS (CUSTNAME,PROJNO,ENAME,SPEND)
      AS 
      SELECT O.CUSTNAME, P."PROJNO", E.ENAME, SUM(E.RATE*P."HOURS")
      SPEND
      FROM ORDERS O, EMP E, PROJECTS P
      WHERE O.PROJNO = P."PROJNO"
      AND P."EMPNO" = E.EMPNO
      GROUP BY O.CUSTNAME, P."PROJNO", E.ENAME;
</pre>
<p>Use the following SQL statement to retrieve information from the data stores in one statement:</p>
<pre>
SELECT * FROM DETAILS;
</pre>
<p>The statement retrieves the following table:</p>
<pre>
CUSTNAME         PROJNO           ENAME          SPEND
--------         ------           -----          -----
ABC Co.             1             Jones            400
ABC Co.             1             Smith            180
XYZ Inc.            2             Jones            400
XYZ Inc.            2             Smith            180
</pre></div>
<pre>


</pre></div>
<!-- class="sect1" -->
<a id="i1006558"></a>
<div class="sect1">
<h2 class="sect1"><span class="secnum">4.8</span> Copying Data from the Oracle Database Server to the Non-Oracle Database System<a id="sthref154"></a></h2>
<p>Heterogeneous Services supports callback links. This enables SQL statements like the following to be executed:</p>
<pre>
INSERT INTO <span class="italic">table_name@dblink</span> SELECT <span class="italic">column_list</span> FROM <span class="italic">table_name</span>;
</pre>
<p>Even though Heterogeneous Services supports the callback functionality, not all gateways have implemented it. If the gateway that you are using has not implemented this functionality, the preceding <code>INSERT</code> statement returns the following error message:</p>
<pre>
ORA-02025: All tables in the SQL statement must be at the remote database
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
Your gateway documentation for information about support for callback links</div>
<p>For gateways that do not support callback links, you can use the SQL*Plus <code>COPY</code> command. The syntax is as follows:</p>
<pre>
COPY FROM <span class="italic">username/password@db_name</span><span class="codeinlineitalic"> </span>-
   INSERT <span class="italic">destination_table</span> -
   USING <span class="italic">query</span>;
</pre>
<p>The following example selects all rows from the local Oracle <code>emp</code> table, inserts them into the <code>emp</code> table on the non-Oracle database, and commits the transaction:</p>
<pre>
COPY FROM SCOTT/TIGER@inst1 -
  INSERT EMP@remote_db -
  USING SELECT * FROM EMP;



The COPY command supports the APPEND, CREATE, INSERT, and REPLACE options. However, INSERT is the only option supported when copying to non-Oracle databases. The SQL*Plus COPY command does not support copying to tables with lowercase table names. Use the following PL/SQL syntax with lowercase table names:
DECLARE
<span class="italic">    v1 oracle_table.column1</span>%TYPE;
<span class="italic">    v2 oracle_table.column2</span>%TYPE;
<span class="italic">    v3 oracle_table.column3</span>%TYPE;
    .
    .
    .
    CURSOR <span class="italic">cursor_name</span> IS SELECT * FROM <span class="italic">oracle_table</span>;
BEGIN
    OPEN <span class="italic">cursor_name</span>;
    LOOP
       FETCH <span class="italic">cursor_name</span> INTO <span class="italic">v1, v2, v3,</span> ... ;
       EXIT WHEN <span class="italic">cursor_name</span>%NOTFOUND;
       INSERT INTO <span class="italic">destination_table</span> VALUES (<span class="italic">v1, v2, v3, ...</span>);
    END LOOP;

    CLOSE <span class="italic">cursor_name</span>;
END;
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<span class="italic"><a class="olink SQPUG" href="../../server.112/e16604/toc.htm">SQL*Plus User's Guide and Reference</a></span> for more information about the <code>COPY</code> command</div>
</div>
<!-- class="sect1" -->
<a id="i1006620"></a>
<div class="sect1">
<h2 class="sect1"><span class="secnum">4.9</span> <a id="sthref155"></a>Copying Data from the Non-Oracle Database System to the Oracle Database Server<a id="sthref156"></a></h2>
<p>The <code>CREATE TABLE</code> statement lets you copy data from a non-Oracle database to the Oracle database. To create a table on the local database and insert rows from the non-Oracle table, use the following syntax:</p>
<pre>
CREATE TABLE <span class="italic">table_name</span> AS <span class="italic">query;</span>
</pre>
<p>The following example creates the table <code>emp</code> in the local Oracle database and inserts the rows from the <code>EMP</code> table of the non-Oracle database:</p>
<pre>
CREATE TABLE table1 AS SELECT * FROM "EMP"@remote_db;



Alternatively, you can use the SQL*Plus COPY command to copy data from the non-Oracle database to the Oracle database server.

</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<span class="italic"><a class="olink SQPUG" href="../../server.112/e16604/toc.htm">SQL*Plus User's Guide and Reference</a></span> for more information about the <code>COPY</code> command</div>
<pre>

</pre></div>
<!-- class="sect1" -->
<a id="i1006658"></a>
<div class="sect1">
<h2 class="sect1"><span class="secnum">4.10</span> Using Heterogeneous Services Data Dictionary Views</h2>
<p><a id="sthref157"></a><a id="sthref158"></a>You can use the Heterogeneous Services data dictionary views to access information about Heterogeneous Services. This section addresses the following topics:</p>
<ul>
<li>
<p><a href="#i1006682">Understanding the Types of Views</a></p>
</li>
<li>
<p><a href="#i1006755">Understanding the Sources of Data Dictionary Information</a></p>
</li>
<li>
<p><a href="#i1006769">Using the General Views</a></p>
</li>
<li>
<p><a href="#i1006798">Using the Transaction Service Views</a></p>
</li>
<li>
<p><a href="#i1006841">Using the SQL Service Views</a></p>
</li>
</ul>
<a id="i1006682"></a>
<div class="sect2">
<h3 class="sect2"><span class="secnum">4.10.1</span> Understanding the Types of Views</h3>
<p><a id="sthref159"></a>The Heterogeneous Services data dictionary views, whose names all begin with the <code>HS_</code> prefix, can be divided into the following categories:</p>
<ul>
<li>
<p>General views</p>
</li>
<li>
<p>Views used for the transaction service</p>
</li>
<li>
<p>Views used for the <a id="sthref160"></a>SQL service</p>
</li>
</ul>
<p>Most of the data dictionary views are defined for both classes and instances. For most types of data there is a <code>*_CLASS</code> view and a <code>*_INST</code> view. See <a href="#CDCGJIIA">Table 4-1</a> for additional details.</p>
<div class="tblruleformalwide">
<p class="titleintable"><a id="sthref161"></a><a id="CDCGJIIA"></a>Table 4-1 Data Dictionary Views for Heterogeneous Services</p>
<table class="cellalignment1573" title="Data Dictionary Views for Heterogeneous Services" summary="This table is described in the preceding text" dir="ltr">
<thead>
<tr class="cellalignment1567">
<th class="cellalignment1574" id="r1c1-t15">View</th>
<th class="cellalignment1574" id="r1c2-t15">Type</th>
<th class="cellalignment1574" id="r1c3-t15">Identifies</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1567">
<td class="cellalignment1575" id="r2c1-t15" headers="r1c1-t15">
<p><code><a id="sthref162"></a>HS_BASE_CAPS</code></p>
</td>
<td class="cellalignment1575" headers="r2c1-t15 r1c2-t15">
<p>SQL service</p>
</td>
<td class="cellalignment1575" headers="r2c1-t15 r1c3-t15">
<p>All capabilities supported by Heterogeneous Services</p>
</td>
</tr>
<tr class="cellalignment1567">
<td class="cellalignment1575" id="r3c1-t15" headers="r1c1-t15">
<p><code><a id="sthref163"></a>HS_BASE_DD</code></p>
</td>
<td class="cellalignment1575" headers="r3c1-t15 r1c2-t15">
<p>SQL service</p>
</td>
<td class="cellalignment1575" headers="r3c1-t15 r1c3-t15">
<p>All data dictionary translation table names supported by Heterogeneous Services</p>
</td>
</tr>
<tr class="cellalignment1567">
<td class="cellalignment1575" id="r4c1-t15" headers="r1c1-t15">
<p><code><a id="sthref164"></a>HS_CLASS_CAPS</code></p>
</td>
<td class="cellalignment1575" headers="r4c1-t15 r1c2-t15">
<p>Transaction service, SQL service</p>
</td>
<td class="cellalignment1575" headers="r4c1-t15 r1c3-t15">
<p>Capabilities for each class</p>
</td>
</tr>
<tr class="cellalignment1567">
<td class="cellalignment1575" id="r5c1-t15" headers="r1c1-t15">
<p><code><a id="sthref165"></a>HS_CLASS_DD</code></p>
</td>
<td class="cellalignment1575" headers="r5c1-t15 r1c2-t15">
<p>SQL service</p>
</td>
<td class="cellalignment1575" headers="r5c1-t15 r1c3-t15">
<p>Data dictionary translations for each class</p>
</td>
</tr>
<tr class="cellalignment1567">
<td class="cellalignment1575" id="r6c1-t15" headers="r1c1-t15">
<p><code><a id="sthref166"></a>HS_CLASS_INIT</code></p>
</td>
<td class="cellalignment1575" headers="r6c1-t15 r1c2-t15">
<p>General</p>
</td>
<td class="cellalignment1575" headers="r6c1-t15 r1c3-t15">
<p>Initialization parameters for each class</p>
</td>
</tr>
<tr class="cellalignment1567">
<td class="cellalignment1575" id="r7c1-t15" headers="r1c1-t15">
<p><code><a id="sthref167"></a>HS_FDS_CLASS</code></p>
</td>
<td class="cellalignment1575" headers="r7c1-t15 r1c2-t15">
<p>General</p>
</td>
<td class="cellalignment1575" headers="r7c1-t15 r1c3-t15">
<p>Classes accessible from the Oracle server</p>
</td>
</tr>
<tr class="cellalignment1567">
<td class="cellalignment1575" id="r8c1-t15" headers="r1c1-t15">
<p><code><a id="sthref168"></a>HS_FDS_INST</code></p>
</td>
<td class="cellalignment1575" headers="r8c1-t15 r1c2-t15">
<p>General</p>
</td>
<td class="cellalignment1575" headers="r8c1-t15 r1c3-t15">
<p>Instances accessible from the Oracle server</p>
</td>
</tr>
<tr class="cellalignment1567">
<td class="cellalignment1575" id="r9c1-t15" headers="r1c1-t15">
<p><code><a id="sthref169"></a>HS_INST_CAPS</code></p>
</td>
<td class="cellalignment1575" headers="r9c1-t15 r1c2-t15">
<p>Transaction service, SQL service</p>
</td>
<td class="cellalignment1575" headers="r9c1-t15 r1c3-t15">
<p>Capabilities for each instance (if set up by the DBA)</p>
</td>
</tr>
<tr class="cellalignment1567">
<td class="cellalignment1575" id="r10c1-t15" headers="r1c1-t15">
<p><code><a id="sthref170"></a>HS_INST_DD</code></p>
</td>
<td class="cellalignment1575" headers="r10c1-t15 r1c2-t15">
<p>SQL service</p>
</td>
<td class="cellalignment1575" headers="r10c1-t15 r1c3-t15">
<p>Data dictionary translations for each class (if set up by the DBA)</p>
</td>
</tr>
<tr class="cellalignment1567">
<td class="cellalignment1575" id="r11c1-t15" headers="r1c1-t15">
<p><code><a id="sthref171"></a>HS_INST_INIT</code></p>
</td>
<td class="cellalignment1575" headers="r11c1-t15 r1c2-t15">
<p>General</p>
</td>
<td class="cellalignment1575" headers="r11c1-t15 r1c3-t15">
<p>Initialization parameters for each instance (if set up by the DBA)</p>
</td>
</tr>
<tr class="cellalignment1567">
<td class="cellalignment1575" id="r12c1-t15" headers="r1c1-t15">
<p><code><a id="sthref172"></a>HS_BULK</code></p>
</td>
<td class="cellalignment1575" headers="r12c1-t15 r1c2-t15">&nbsp;</td>
<td class="cellalignment1575" headers="r12c1-t15 r1c3-t15">
<p>Data dictionary view to keep track of internal objects created with bulk load procedures.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblruleformalwide" -->
<p>Like all Oracle data dictionary tables, these views are read-only. Do not change the content of any of the underlying tables.</p>
</div>
<!-- class="sect2" -->
<a id="i1006755"></a>
<div class="sect2">
<h3 class="sect2"><span class="secnum">4.10.2</span> Understanding the Sources of Data Dictionary Information</h3>
<p><a id="sthref173"></a>The values used for data dictionary content in any particular connection on a Heterogeneous Services database link can come from any of the following sources, in order of precedence:</p>
<ul>
<li>
<p>Instance information uploaded by the connected Heterogeneous Services agent at the start of the session. This information overrides corresponding content in the Oracle data dictionary, but is never stored into the Oracle data dictionary.</p>
</li>
<li>
<p>Instance information stored in the Oracle data dictionary. This data overrides any corresponding content for the connected class.</p>
</li>
<li>
<p>Class information stored in the Oracle data dictionary.</p>
</li>
</ul>
<p>If the Oracle database server runs with the <code>HS_AUTOREGISTER</code> server initialization parameter set to <code>FALSE</code>, then information is not stored automatically in the Oracle data dictionary. The equivalent data is uploaded by the Heterogeneous Services agent on a connection-specific basis each time a connection is made, with any instance-specific information taking precedence over class information.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
It is not possible to determine positively what capabilities and what data dictionary translations are in use for a given session due to the possibility that an agent can upload instance information.</div>
<p>You can determine the values of Heterogeneous Services initialization parameters by querying the <code>VALUE</code> column of the <code>V$HS_PARAMETER</code> view. Note that the <code>VALUE</code> column of <code>V$HS_PARAMETER</code> truncates the actual initialization parameter value from a maximum of 255 characters to a maximum of 64 characters. It truncates the parameter name from a maximum of 64 characters to a maximum of 30 characters.</p>
</div>
<!-- class="sect2" -->
<a id="i1006769"></a>
<div class="sect2">
<h3 class="sect2"><span class="secnum">4.10.3</span> Using the General Views</h3>
<p><a id="sthref174"></a>The views that are common for all services are as follows:</p>
<div class="inftblruleinformal">
<table class="cellalignment1573" title="Heterogeneous Services views for all services" summary="This table is described in the preceding text" dir="ltr">
<thead>
<tr class="cellalignment1567">
<th class="cellalignment1574" id="r1c1-t17">View</th>
<th class="cellalignment1574" id="r1c2-t17">Contains</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1567">
<td class="cellalignment1575" id="r2c1-t17" headers="r1c1-t17"><code>HS_FDS_CLASS</code></td>
<td class="cellalignment1575" headers="r2c1-t17 r1c2-t17">Names of the classes that are uploaded into the Oracle data dictionary</td>
</tr>
<tr class="cellalignment1567">
<td class="cellalignment1575" id="r3c1-t17" headers="r1c1-t17"><code>HS_FDS_INST</code></td>
<td class="cellalignment1575" headers="r3c1-t17 r1c2-t17">Names of the instances that are uploaded into the Oracle data dictionary</td>
</tr>
<tr class="cellalignment1567">
<td class="cellalignment1575" id="r4c1-t17" headers="r1c1-t17"><code>HS_CLASS_INIT</code></td>
<td class="cellalignment1575" headers="r4c1-t17 r1c2-t17">Information about the Heterogeneous Services initialization parameters</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblruleinformal" -->
<p>For example, you can access multiple Sybase gateways from an Oracle database server. After accessing the gateways for the first time, the information uploaded into the Oracle database server could appear as follows:</p>
<pre>
SQL&gt; SELECT * FROM HS_FDS_CLASS; 

FDS_CLASS_NAME        FDS_CLASS_COMMENTS             FDS_CLASS_ID
--------------------- ------------------------------ ------------
Sybase816             Uses Sybase driver, R1.1                 1
Sybase817             Uses Sybase driver, R1.2                21
</pre>
<p>Two classes are uploaded: a class that accesses Sybase816 and a class that accesses Sybase817. The data dictionary in the Oracle database server now contains capability information, SQL translations, and data dictionary translations for both Sybase816 and Sybase817.</p>
<p>The Oracle database server data dictionary also contains instance information in the <code>HS_FDS_INST</code> view for each non-Oracle system instance that is accessed.</p>
</div>
<!-- class="sect2" -->
<a id="i1006798"></a>
<div class="sect2">
<h3 class="sect2"><span class="secnum">4.10.4</span> Using the Transaction Service Views</h3>
<p><a id="sthref175"></a><a id="sthref176"></a>When a non-Oracle system is involved in a distributed transaction, the transaction capabilities of the non-Oracle system and the agent control whether it can participate in distributed transactions. Transaction capabilities are stored in the <code>HS_CLASS_CAPS</code> tables.</p>
<p>The ability of the non-Oracle system and agent to support two-phase commit protocols is specified by the 2PC type capability, which can specify one of the types shown in the following table.</p>
<div class="inftblruleinformal">
<table class="cellalignment1573" title="Two-phase commit types" summary="This table is described in the preceding text" dir="ltr">
<thead>
<tr class="cellalignment1567">
<th class="cellalignment1574" id="r1c1-t18">Type</th>
<th class="cellalignment1574" id="r1c2-t18">Capability</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1567">
<td class="cellalignment1575" id="r2c1-t18" headers="r1c1-t18">Read-Only (RO)</td>
<td class="cellalignment1575" headers="r2c1-t18 r1c2-t18">The non-Oracle system can be queried only with SQL <code>SELECT</code> statements. Procedure calls are not allowed because procedure calls are assumed to write data.</td>
</tr>
<tr class="cellalignment1567">
<td class="cellalignment1575" id="r3c1-t18" headers="r1c1-t18">Single-Site (SS)</td>
<td class="cellalignment1575" headers="r3c1-t18 r1c2-t18">The non-Oracle system can handle remote transactions but not distributed transactions. That is, it cannot participate in the two-phase commit protocol.</td>
</tr>
<tr class="cellalignment1567">
<td class="cellalignment1575" id="r4c1-t18" headers="r1c1-t18">Commit Confirm (CC)</td>
<td class="cellalignment1575" headers="r4c1-t18 r1c2-t18">The non-Oracle system can participate in distributed transactions. It can participate in the server's two-phase commit protocol but only as the commit point site. That is, it cannot prepare data, but it can remember the outcome of a particular transaction if asked by the global coordinator.</td>
</tr>
<tr class="cellalignment1567">
<td class="cellalignment1575" id="r5c1-t18" headers="r1c1-t18">Two-Phase Commit (2PC)</td>
<td class="cellalignment1575" headers="r5c1-t18 r1c2-t18">The non-Oracle system can participate in distributed transactions. It can participate in the server's two-phase commit protocol, as a regular two-phase commit node, but not as a commit point site. That is, it can prepare data, but it cannot remember the outcome of a particular transaction if asked to by the global coordinator.</td>
</tr>
<tr class="cellalignment1567">
<td class="cellalignment1575" id="r6c1-t18" headers="r1c1-t18">Two-Phase Commit Confirm (2PCC)</td>
<td class="cellalignment1575" headers="r6c1-t18 r1c2-t18">The non-Oracle system can participate in distributed transactions. It can participate in the server's two-phase commit protocol as a regular two-phase commit node or as the commit point site. That is, it can prepare data and it can remember the outcome of a particular transaction if asked by the global coordinator.</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblruleinformal" -->
<p>The transaction model supported by the driver and non-Oracle system can be queried from the <code>HS_CLASS_CAPS</code> Heterogeneous Services data dictionary view.</p>
<p>The following example shows one of the capabilities is of the 2PC type:</p>
<pre>
</pre>
<pre>
SELECT cap_description, translation
FROM   hs_class_caps
WHERE  cap_description LIKE '2PC%'
AND    fds_class_name LIKE 'SYBASE%';

CAP_DESCRIPTION                          TRANSLATION
---------------------------------------- -----------
2PC type (RO-SS-CC-PREP/2P-2PCC)                  CC



When the non-Oracle system and agent support distributed transactions, the non-Oracle system is treated like any other Oracle server. When a failure occurs during the two-phase commit protocol, the transaction is recovered automatically. If the failure persists, the in-doubt transaction may need to be manually overridden by the database administrator. 

</pre></div>
<!-- class="sect2" -->
<a id="i1006841"></a>
<div class="sect2">
<h3 class="sect2"><span class="secnum">4.10.5</span> Using the SQL Service Views</h3>
<p><a id="sthref177"></a><a id="sthref178"></a>Data dictionary views that are specific for the SQL service contain information about:</p>
<ul>
<li>
<p>SQL capabilities and SQL translations of the non-Oracle data source</p>
</li>
<li>
<p>Data dictionary translations to map Oracle data dictionary views to the data dictionary of the non-Oracle system</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
This section describes only a portion of the SQL Service-related capabilities. Because you should never need to alter these settings for administrative purposes, these capabilities are not discussed here.</div>
</li>
</ul>
<div class="sect3"><a id="sthref179"></a>
<h4 class="sect3"><span class="secnum">4.10.5.1</span> Using Views for Capabilities and Translations</h4>
<p>The <code>HS_*_CAPS</code> data dictionary tables contain information about the <a id="sthref180"></a>SQL capabilities of the non-Oracle data source and required SQL translations. These views specify whether the non-Oracle data store or the Oracle database server implements certain SQL language features. If a capability is turned off, then Oracle does not send any SQL statements to the non-Oracle data source that require this particular capability, but it still performs postprocessing.</p>
</div>
<!-- class="sect3" -->
<div class="sect3"><a id="sthref181"></a>
<h4 class="sect3"><span class="secnum">4.10.5.2</span> Using Views for Data Dictionary Translations</h4>
<p>In order to make the non-Oracle system appear similar to an Oracle database server, Heterogeneous Services connections map a limited set of Oracle data dictionary views onto the non-Oracle system's data dictionary. This mapping permits applications to issue queries as if these views belonged to an Oracle data dictionary. Data dictionary translations make this access possible. These translations are stored in Heterogeneous Services views whose names have the <code>_DD</code> suffix.</p>
<p>For example, the following <code>SELECT</code> statement transforms into a Sybase query that retrieves information about <code>emp</code> tables from the Sybase data dictionary table:</p>
SELECT * FROM USER_TABLES@remote_db WHERE UPPER(TABLE_NAME)='EMP';
<p>Data dictionary tables can be mimicked instead of translated. If a data dictionary translation is not possible because the non-Oracle data source does not have the required information in its data dictionary, then Heterogeneous Services causes it to appear as if the data dictionary table is available, but the table contains no information.</p>
<p>To retrieve information about which Oracle data dictionary views or tables are translated or mimicked for the non-Oracle system, connect as user <code>SYS</code> and issue the following query on the <code>HS_CLASS_DD</code> view:</p>
<pre>
SELECT DD_TABLE_NAME, TRANSLATION_TYPE
FROM   HS_CLASS_DD
WHERE  FDS_CLASS_NAME LIKE 'SYBASE%';

DD_TABLE_NAME                  T
-----------------------------  -
ALL_ARGUMENTS                  M
ALL_CATALOG                    T
ALL_CLUSTERS                   T
ALL_CLUSTER_HASH_EXPRESSIONS   M
ALL_COLL_TYPES                 M
ALL_COL_COMMENTS               T
ALL_COL_PRIVS                  M
ALL_COL_PRIVS_MADE             M
ALL_COL_PRIVS_RECD             M
...
</pre>
<p>The <code>T</code> translation type specifies that a translation exists. When the translation type is <code>M</code>, the data dictionary table is mimicked.</p>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="CDCBDFAE"></a>
<div class="sect1">
<h2 class="sect1"><span class="secnum">4.11</span> Using the Heterogeneous Services Dynamic Performance Views</h2>
<p><a id="sthref182"></a><a id="sthref183"></a>The Oracle database server stores information about agents, sessions, and parameters. You can use the dynamic performance views to access this information. This section contains the following topics:</p>
<ul>
<li>
<p><a href="#i1006901">Determining Which Agents Are Running on a Host: V$HS_AGENT View</a></p>
</li>
<li>
<p><a href="#i1006956">Determining the Open Heterogeneous Services Sessions: V$HS_SESSION View</a></p>
</li>
<li>
<p><a href="#CACHDHBB">Determining the Heterogeneous Services Parameters: V$HS_PARAMETER View</a></p>
</li>
</ul>
<a id="i1006901"></a>
<div class="sect2">
<h3 class="sect2"><span class="secnum">4.11.1</span> Determining Which Agents Are Running on a Host: V$HS_AGENT View</h3>
<p>The <code>V$HS_AGENT</code> view identifies the set of Heterogeneous Services agents currently operating on a specified host. <a id="sthref184"></a><a id="sthref185"></a><a href="#CACIDAJC">Table 4-2</a> shows the most relevant columns. For a description of all the columns in the view, see <a class="olink REFRN" href="../e40402/toc.htm"><span class="italic">Oracle Database Reference</span></a>.</p>
<div class="tblruleformalwide">
<p class="titleintable"><a id="sthref186"></a><a id="CACIDAJC"></a>Table 4-2 Important Columns in the V$HS_AGENT View</p>
<table class="cellalignment1573" title="Important Columns in the V$HS_AGENT View" summary="This table is described in the preceding text" dir="ltr">
<thead>
<tr class="cellalignment1567">
<th class="cellalignment1574" id="r1c1-t20">Column</th>
<th class="cellalignment1574" id="r1c2-t20">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1567">
<td class="cellalignment1575" id="r2c1-t20" headers="r1c1-t20">
<p><code>AGENT_ID</code></p>
</td>
<td class="cellalignment1575" headers="r2c1-t20 r1c2-t20">
<p>Oracle Net session identifier used for connections to agent (<code>listener.ora SID</code>)</p>
</td>
</tr>
<tr class="cellalignment1567">
<td class="cellalignment1575" id="r3c1-t20" headers="r1c1-t20">
<p><code>MACHINE</code></p>
</td>
<td class="cellalignment1575" headers="r3c1-t20 r1c2-t20">
<p>Operating system machine name</p>
</td>
</tr>
<tr class="cellalignment1567">
<td class="cellalignment1575" id="r4c1-t20" headers="r1c1-t20">
<p><code>PROGRAM</code></p>
</td>
<td class="cellalignment1575" headers="r4c1-t20 r1c2-t20">
<p>Program name of agent</p>
</td>
</tr>
<tr class="cellalignment1567">
<td class="cellalignment1575" id="r5c1-t20" headers="r1c1-t20">
<p><code>AGENT_TYPE</code></p>
</td>
<td class="cellalignment1575" headers="r5c1-t20 r1c2-t20">
<p>Type of agent</p>
</td>
</tr>
<tr class="cellalignment1567">
<td class="cellalignment1575" id="r6c1-t20" headers="r1c1-t20">
<p><code>FDS_CLASS_ID</code></p>
</td>
<td class="cellalignment1575" headers="r6c1-t20 r1c2-t20">
<p>The ID of the foreign data store class</p>
</td>
</tr>
<tr class="cellalignment1567">
<td class="cellalignment1575" id="r7c1-t20" headers="r1c1-t20">
<p><code>FDS_INST_ID</code></p>
</td>
<td class="cellalignment1575" headers="r7c1-t20 r1c2-t20">
<p>The instance name of the foreign data store</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblruleformalwide" --></div>
<!-- class="sect2" -->
<a id="i1006956"></a>
<div class="sect2">
<h3 class="sect2"><span class="secnum">4.11.2</span> Determining the Open Heterogeneous Services Sessions: V$HS_SESSION View</h3>
<p><a id="sthref187"></a><a id="sthref188"></a>The <code>V$HS_SESSION</code> view shows the sessions for each agent and specifies the database link that is used. <a href="#CACCIIGF">Table 4-3</a> shows the most relevant columns. For a description of all the columns in the view, see <a class="olink REFRN" href="../e40402/toc.htm"><span class="italic">Oracle Database Reference</span></a>.</p>
<div class="tblruleformalwide">
<p class="titleintable"><a id="sthref189"></a><a id="CACCIIGF"></a>Table 4-3 Important Columns in the V$HS_SESSION View</p>
<table class="cellalignment1573" title="Important Columns in the V$HS_SESSION View" summary="This table is described in the preceding text" dir="ltr">
<thead>
<tr class="cellalignment1567">
<th class="cellalignment1574" id="r1c1-t21">Column</th>
<th class="cellalignment1574" id="r1c2-t21">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1567">
<td class="cellalignment1575" id="r2c1-t21" headers="r1c1-t21">
<p><code>HS_SESSION_ID</code></p>
</td>
<td class="cellalignment1575" headers="r2c1-t21 r1c2-t21">
<p>Unique Heterogeneous Services session identifier</p>
</td>
</tr>
<tr class="cellalignment1567">
<td class="cellalignment1575" id="r3c1-t21" headers="r1c1-t21">
<p><code>AGENT_ID</code></p>
</td>
<td class="cellalignment1575" headers="r3c1-t21 r1c2-t21">
<p>Oracle Net session identifier used for connections to agent (<code>listener.ora SID</code>)</p>
</td>
</tr>
<tr class="cellalignment1567">
<td class="cellalignment1575" id="r4c1-t21" headers="r1c1-t21">
<p><code>DB_LINK</code></p>
</td>
<td class="cellalignment1575" headers="r4c1-t21 r1c2-t21">
<p>Server database link name used to access the agent <code>NULL</code> means that no database link is used (for example, when using external procedures)</p>
</td>
</tr>
<tr class="cellalignment1567">
<td class="cellalignment1575" id="r5c1-t21" headers="r1c1-t21">
<p><code>DB_LINK_OWNER</code></p>
</td>
<td class="cellalignment1575" headers="r5c1-t21 r1c2-t21">
<p>Owner of the database link in <code>DB_LINK</code></p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblruleformalwide" --></div>
<!-- class="sect2" -->
<a id="CACHDHBB"></a>
<div class="sect2">
<h3 class="sect2"><span class="secnum">4.11.3</span> Determining the Heterogeneous Services Parameters: V$HS_PARAMETER View</h3>
<p>The <code>V$HS_PARAMETER</code> view lists the Heterogeneous Services parameters and their values that are registered in the Oracle database server. <a href="#CACEJJEH">Table 4-4</a> shows the most relevant columns. For a description of all the columns in the view, see <a class="olink REFRN" href="../e40402/toc.htm"><span class="italic">Oracle Database Reference</span></a>.</p>
<div class="tblruleformalwide">
<p class="titleintable"><a id="sthref190"></a><a id="CACEJJEH"></a>Table 4-4 Important Columns in the V$HS_SESSION View</p>
<table class="cellalignment1573" title="Important Columns in the V$HS_SESSION View" summary="This table is described in the preceding text" dir="ltr">
<thead>
<tr class="cellalignment1567">
<th class="cellalignment1574" id="r1c1-t22">Column</th>
<th class="cellalignment1574" id="r1c2-t22">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1567">
<td class="cellalignment1575" id="r2c1-t22" headers="r1c1-t22">
<p><code>HS_SESSION_ID</code></p>
</td>
<td class="cellalignment1575" headers="r2c1-t22 r1c2-t22">
<p>Unique Heterogeneous Services session identifier</p>
</td>
</tr>
<tr class="cellalignment1567">
<td class="cellalignment1575" id="r3c1-t22" headers="r1c1-t22">
<p><code>PARAMETER</code></p>
</td>
<td class="cellalignment1575" headers="r3c1-t22 r1c2-t22">
<p>The name of the Heterogeneous Services parameter</p>
</td>
</tr>
<tr class="cellalignment1567">
<td class="cellalignment1575" id="r4c1-t22" headers="r1c1-t22">
<p><code>VALUE</code></p>
</td>
<td class="cellalignment1575" headers="r4c1-t22 r1c2-t22">
<p>The value of the Heterogeneous Services parameter</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblruleformalwide" -->
<p><a id="i1007047"></a>Information about the database link that was used for establishing the distributed connection, the startup time, and the set of initialization parameters used for the session is also available. All of the runtime information is derived from dynamically updated tables.</p>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment1566">
<tr>
<td class="cellalignment1575">
<table class="cellalignment1571">
<tr>
<td class="cellalignment1570"><a href="majfeat.htm"><img width="24" height="24" src="../../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment1570"><a href="trouble.htm"><img width="24" height="24" src="../../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;2001, 2009,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment1577">
<table class="cellalignment1569">
<tr>
<td class="cellalignment1570"><a href="../../index.htm"><img width="24" height="24" src="../../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment1570"><a href="../../nav/portal_booklist.htm"><img width="24" height="24" src="../../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment1570"><a href="toc.htm"><img width="24" height="24" src="../../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment1570"><a href="index.htm"><img width="24" height="24" src="../../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment1570"><a href="../../nav/mindx.htm"><img width="24" height="24" src="../../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment1570"><a href="../../dcommon/html/feedback.htm"><img width="24" height="24" src="../../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>
</body>
</html>
