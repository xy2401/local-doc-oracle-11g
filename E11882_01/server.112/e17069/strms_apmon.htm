<!DOCTYPE html>
<html lang="en">
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1">
<meta charset="utf-8">
<title>Monitoring Oracle Streams Apply Processes</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Version 5.1.2 Build 732" />
<meta name="dcterms.created" content="2013-06-04T12:39:39Z" />
<meta name="robots" content="all" />
<meta name="dcterms.title" content="Streams Concepts and Administration" />
<meta name="dcterms.identifier" content="E17069-08" />
<meta name="dcterms.isVersionOf" content="STRMS" />
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;2002, 2013,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved." />
<link rel="Start" href="../../index.htm" title="Home" type="text/html" />
<link rel="Copyright" href="../../dcommon/html/cpyr.htm" title="Copyright" type="text/html" />

<script type="application/javascript"  src="../../dcommon/js/headfoot.js"></script>
<script type="application/javascript"  src="../../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html" />
<link rel="Index" href="index.htm" title="Index" type="text/html" />
<link rel="Glossary" href="strms_glossary.htm" title="Glossary" type="text/html" />
<link rel="Prev" href="strms_qpmon.htm" title="Previous" type="text/html" />
<link rel="Next" href="strms_rumon.htm" title="Next" type="text/html" />
<link rel="alternate" href="../e17069.pdf" title="PDF version" type="application/pdf" />
<link rel="schema.dcterms" href="http://purl.org/dc/terms/" />
<link rel="stylesheet" href="../../dcommon/css/fusiondoc.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/header.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/footer.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/fonts.css">
<link rel="stylesheet" href="../../dcommon/css/foundation.css">
<link rel="stylesheet" href="../../dcommon/css/codemirror.css">
<link rel="stylesheet" type="text/css" title="Default" href="../../nav/css/html5.css">
<link rel="stylesheet" href="../../dcommon/css/respond-480-tablet.css">
<link rel="stylesheet" href="../../dcommon/css/respond-768-laptop.css">
<link rel="stylesheet" href="../../dcommon/css/respond-1140-deskop.css">
<script type="application/javascript" src="../../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">36/57</span> <!-- End Header -->
<div id="STRMS940" class="chapter"><a id="CFFGFJBB"></a><a id="CFFHJHHC"></a>
<h1 class="chapter"><span class="secnum">26</span> Monitoring Oracle Streams Apply Processes</h1>
<p><a id="sthref1167"></a><a id="sthref1168"></a>The following topics describe monitoring Oracle Streams <a href="strms_glossary.htm#CHDJBHJC"><span class="xrefglossterm">apply process</span></a>es:</p>
<ul>
<li>
<p><a href="#i1018375">Determining the Queue, Rule Sets, and Status for Each Apply Process</a></p>
</li>
<li>
<p><a href="#i1007243">Displaying General Information About Each Apply Process</a></p>
</li>
<li>
<p><a href="#i1007275">Listing the Parameter Settings for Each Apply Process</a></p>
</li>
<li>
<p><a href="#i1007328">Displaying Information About Apply Handlers</a></p>
</li>
<li>
<p><a href="#CHDBJIFF">Displaying Session Information About Each Apply Process</a></p>
</li>
<li>
<p><a href="#i1007562">Displaying Information About the Reader Server for Each Apply Process</a></p>
</li>
<li>
<p><a href="#CHDCAJAF">Monitoring Transactions and Messages Spilled by Each Apply Process</a></p>
</li>
<li>
<p><a href="#i1007594">Determining Capture to Dequeue Latency for a Message</a></p>
</li>
<li>
<p><a href="#i1007622">Displaying General Information About Each Coordinator Process</a></p>
</li>
<li>
<p><a href="#i1015387">Displaying Information About Transactions Received and Applied</a></p>
</li>
<li>
<p><a href="#i1007662">Determining the Capture to Apply Latency for a Message for Each Apply Process</a></p>
</li>
<li>
<p><a href="#i1007717">Displaying Information About the Apply Servers for Each Apply Process</a></p>
</li>
<li>
<p><a href="#i1007764">Displaying Effective Apply Parallelism for an Apply Process</a></p>
</li>
<li>
<p><a href="#i1013210">Viewing Rules that Specify a Destination Queue on Apply</a></p>
</li>
<li>
<p><a href="#i1013211">Viewing Rules that Specify No Execution on Apply</a></p>
</li>
<li>
<p><a href="#CFFCFCDD">Determining Which Apply Processes Use Combined Capture and Apply</a></p>
</li>
<li>
<p><a href="#CACBGECI">Displaying the Substitute Key Columns Specified at a Destination Database</a></p>
</li>
<li>
<p><a href="#CACCGDCE">Monitoring Virtual Dependency Definitions</a></p>
</li>
<li>
<p><a href="#i1007797">Checking for Apply Errors</a></p>
</li>
<li>
<p><a href="#i1007852">Displaying Detailed Information About Apply Errors</a></p>
</li>
</ul>
<div class="infobox-note">
<p class="notep1"><span class="bold">Note</span>:</p>
The Oracle Streams tool in Oracle Enterprise Manager is also an excellent way to monitor an Oracle Streams environment. See <a class="olink TDPII154" href="../../server.112/e17516/tdpii_adcont.htm#TDPII154"><span class="italic">Oracle Database 2 Day + Data Replication and Integration Guide</span></a> and the online Help for the Oracle Streams tool for more information.</div>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="strms_apply.htm#g1018604">Chapter 4, "Oracle Streams Information Consumption"</a></p>
</li>
<li>
<p><a href="strms_mapply.htm#g1026098">Chapter 17, "Managing Oracle Streams Information Consumption"</a></p>
</li>
<li>
<p><a href="strms_trapply.htm#BABHBJHA">Chapter 33, "Troubleshooting Apply"</a></p>
</li>
<li>
<p><a class="olink REFRN" href="../e40402/toc.htm"><span class="italic">Oracle Database Reference</span></a> for information about the data dictionary views described in this chapter</p>
</li>
</ul>
</div>
<a id="i1018375"></a>
<div id="STRMS945" class="sect1">
<h2 class="sect1">Determining the Queue, Rule Sets, and Status for Each Apply Process<a id="sthref1169"></a></h2>
<p>You can determine the following information for each <a href="strms_glossary.htm#CHDJBHJC"><span class="xrefglossterm">apply process</span></a> in a database by running the query in this section:</p>
<ul>
<li>
<p>The apply process name</p>
</li>
<li>
<p>The name of the <a href="strms_glossary.htm#CHDIDCDI"><span class="xrefglossterm">queue</span></a> used by the apply process</p>
</li>
<li>
<p>The name of the <a href="strms_glossary.htm#CHDEEDIJ"><span class="xrefglossterm">positive rule set</span></a> used by the apply process</p>
</li>
<li>
<p>The name of the <a href="strms_glossary.htm#CHDBHJHI"><span class="xrefglossterm">negative rule set</span></a> used by the apply process</p>
</li>
<li>
<p>The status of the apply process, either <code>ENABLED</code>, <code>DISABLED</code>, or <code>ABORTED</code></p>
</li>
</ul>
<p>To display this general information about each apply process in a database, run the following query:</p>
<pre>
COLUMN APPLY_NAME HEADING 'Apply|Process|Name' FORMAT A15
COLUMN QUEUE_NAME HEADING 'Apply|Process|Queue' FORMAT A15
COLUMN RULE_SET_NAME HEADING 'Positive|Rule Set' FORMAT A15
COLUMN NEGATIVE_RULE_SET_NAME HEADING 'Negative|Rule Set' FORMAT A15
COLUMN STATUS HEADING 'Apply|Process|Status' FORMAT A15

SELECT APPLY_NAME, 
       QUEUE_NAME, 
       RULE_SET_NAME, 
       NEGATIVE_RULE_SET_NAME,
       STATUS
  FROM DBA_APPLY;
</pre>
<p>Your output looks similar to the following:</p>
<pre>
Apply           Apply                                           Apply
Process         Process         Positive        Negative        Process
Name            Queue           Rule Set        Rule Set        Status
--------------- --------------- --------------- --------------- ---------------
STRM01_APPLY    STREAMS_QUEUE   RULESET$_36                     ENABLED
APPLY_EMP       STREAMS_QUEUE   RULESET$_16                     DISABLED
APPLY           STREAMS_QUEUE   RULESET$_21     RULESET$_23     ENABLED
</pre>
<p>If the status of an apply process is <code>ABORTED</code>, then you can query the <code>ERROR_NUMBER</code> and <code>ERROR_MESSAGE</code> columns in the <code>DBA_APPLY</code> data dictionary view to determine the error. These columns are populated when an apply process aborts or when an apply process is disabled after reaching a limit. These columns are cleared when an apply process is restarted.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
The <code>ERROR_NUMBER</code> and <code>ERROR_MESSAGE</code> columns in the <code>DBA_APPLY</code> data dictionary view are not related to the information in the <code>DBA_APPLY_ERROR</code> data dictionary view.</div>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#i1007797">"Checking for Apply Errors"</a> to check for apply errors if the apply process status is <code>ABORTED</code></div>
</div>
<!-- class="sect1" -->
<a id="i1007243"></a>
<div id="STRMS946" class="sect1">
<h2 class="sect1">Displaying General Information About Each Apply Process<a id="sthref1170"></a></h2>
<p>You can display the following general information about each <a href="strms_glossary.htm#CHDJBHJC"><span class="xrefglossterm">apply process</span></a> in a database by running the query in this section:</p>
<ul>
<li>
<p>The apply process name.</p>
</li>
<li>
<p>The type of <a href="strms_glossary.htm#CHDFHHGJ"><span class="xrefglossterm">message</span></a>s applied by the apply process. An apply process either can apply either <a href="strms_glossary.htm#CHDCHEJI"><span class="xrefglossterm">captured LCR</span></a>s, or an apply process can apply <a href="strms_glossary.htm#CBAGDEIH"><span class="xrefglossterm">persistent LCR</span></a>s and <a href="strms_glossary.htm#CBAGGIDA"><span class="xrefglossterm">persistent user message</span></a>s.</p>
</li>
<li>
<p>The <a href="strms_glossary.htm#CHDGCCIF"><span class="xrefglossterm">apply user</span></a>.</p>
</li>
</ul>
<p>To display this general information about each apply process in a database, run the following query:</p>
<pre>
COLUMN APPLY_NAME HEADING 'Apply Process Name' FORMAT A20
COLUMN APPLY_CAPTURED HEADING 'Applies Captured LCRs?' FORMAT A22
COLUMN APPLY_USER HEADING 'Apply User' FORMAT A20
 
SELECT APPLY_NAME, APPLY_CAPTURED, APPLY_USER
  FROM DBA_APPLY;
</pre>
<p>Your output looks similar to the following:</p>
<pre>
Apply Process Name   Applies Captured LCRs? Apply User         
-------------------- ---------------------- --------------------
STRM01_APPLY         YES                    STRMADMIN           
SYNC_APPLY           NO                     STRMADMIN           
</pre></div>
<!-- class="sect1" -->
<a id="i1007275"></a>
<div id="STRMS949" class="sect1">
<h2 class="sect1">Listing the Parameter Settings for Each Apply Process<a id="sthref1171"></a></h2>
<p>The following query displays the current setting for each <a href="strms_glossary.htm#CHDJBHJC"><span class="xrefglossterm">apply process</span></a> parameter for each apply process in a database:</p>
<pre>
COLUMN APPLY_NAME HEADING 'Apply Process|Name' FORMAT A15
COLUMN PARAMETER HEADING 'Parameter' FORMAT A30
COLUMN VALUE HEADING 'Value' FORMAT A22
COLUMN SET_BY_USER HEADING 'Set by|User?' FORMAT A10

SELECT APPLY_NAME,
       PARAMETER, 
       VALUE,
       SET_BY_USER  
  FROM DBA_APPLY_PARAMETERS;
</pre>
<p>Your output looks similar to the following:</p>
<pre>
Apply Process                                                         Set by
Name            Parameter                      Value                  User?
--------------- ------------------------------ ---------------------- ----------
APPLY$_DB_3     ALLOW_DUPLICATE_ROWS           N                      NO
APPLY$_DB_3     APPLY_SEQUENCE_NEXTVAL         N                      NO
APPLY$_DB_3     COMMIT_SERIALIZATION           DEPENDENT_TRANSACTIONS NO
APPLY$_DB_3     COMPARE_KEY_ONLY               N                      NO
APPLY$_DB_3     DISABLE_ON_ERROR               Y                      NO
APPLY$_DB_3     DISABLE_ON_LIMIT               N                      NO
APPLY$_DB_3     GROUPTRANSOPS                  250                    NO
APPLY$_DB_3     IGNORE_TRANSACTION                                    NO
APPLY$_DB_3     MAXIMUM_SCN                    INFINITE               NO
APPLY$_DB_3     MAX_SGA_SIZE                   INFINITE               NO
APPLY$_DB_3     PARALLELISM                    4                      NO
APPLY$_DB_3     PRESERVE_ENCRYPTION            Y                      NO
APPLY$_DB_3     RTRIM_ON_IMPLICIT_CONVERSION   Y                      NO
APPLY$_DB_3     STARTUP_SECONDS                0                      NO
APPLY$_DB_3     TIME_LIMIT                     INFINITE               NO
APPLY$_DB_3     TRACE_LEVEL                    0                      NO
APPLY$_DB_3     TRANSACTION_LIMIT              INFINITE               NO
APPLY$_DB_3     TXN_AGE_SPILL_THRESHOLD        900                    NO
APPLY$_DB_3     TXN_LCR_SPILL_THRESHOLD        10000                  NO
APPLY$_DB_3     WRITE_ALERT_LOG                Y                      NO
</pre>
<div class="infobox-note">
<p class="notep1">Note:</p>
If the <code>Set</code> <code>by</code> <code>User?</code> column is <code>NO</code> for a parameter, then the parameter is set to its default value. If the <code>Set</code> <code>by</code> <code>User?</code> column is <code>YES</code> for a parameter, then the parameter was set by a user and might or might not be set to its default value.</div>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="strms_apply.htm#i1007170">"Apply Process Parameters"</a></p>
</li>
<li>
<p><a href="strms_mapply.htm#i1006527">"Setting an Apply Process Parameter"</a></p>
</li>
<li>
<p><a class="olink TDPII145" href="../../server.112/e17516/tdpii_adcont.htm#TDPII145"><span class="italic">Oracle Database 2 Day + Data Replication and Integration Guide</span></a></p>
</li>
<li>
<p>The <code>DBMS_APPLY_ADM.SET_PARAMETER</code> procedure in the <a class="olink ARPLS314" href="../../appdev.112/e40758/d_apply.htm#ARPLS314"><span class="italic">Oracle Database PL/SQL Packages and Types Reference</span></a> for detailed information about the apply process parameters</p>
</li>
</ul>
</div>
</div>
<!-- class="sect1" -->
<a id="i1007328"></a>
<div id="STRMS205" class="sect1">
<h2 class="sect1">Displaying Information About Apply Handlers<a id="sthref1172"></a><a id="sthref1173"></a></h2>
<p>This section contains instructions for displaying information about the <a href="strms_glossary.htm#CHDCJAED"><span class="xrefglossterm">apply handler</span></a>s for <a href="strms_glossary.htm#CHDJBHJC"><span class="xrefglossterm">apply process</span></a>es.</p>
<p>This section contains these topics:</p>
<ul>
<li>
<p><a href="#CACHHIGC">Displaying Information About DML Handlers</a></p>
</li>
<li>
<p><a href="#CACJHBGH">Displaying the DDL Handler for Each Apply Process</a></p>
</li>
<li>
<p><a href="#CFFJCHFH">Displaying All of the Error Handlers for Local Apply Processes</a></p>
</li>
<li>
<p><a href="#CACBFIFF">Displaying the Message Handler for Each Apply Process</a></p>
</li>
<li>
<p><a href="#CACJDBJI">Displaying the Precommit Handler for Each Apply Process</a></p>
</li>
</ul>
<a id="CACHHIGC"></a>
<div id="STRMS951" class="sect2">
<h3 class="sect2">Displaying Information About DML Handlers<a id="sthref1174"></a><a id="sthref1175"></a><a id="sthref1176"></a><a id="sthref1177"></a><a id="sthref1178"></a></h3>
<p>The following sections contain instructions for displaying information about <a href="strms_glossary.htm#CHDEIDID"><span class="xrefglossterm">DML handler</span></a>s:</p>
<ul>
<li>
<p><a href="#CACIDFJF">Displaying Information About All DML Handlers</a></p>
</li>
<li>
<p><a href="#CACIJBDA">Displaying Information About Statement DML Handlers</a></p>
</li>
<li>
<p><a href="#CACHHHFI">Displaying Information About Procedure DML Handlers</a></p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="strms_apply.htm#BABGBDGD">"DML Handlers"</a></p>
</li>
<li>
<p><a href="strms_mapply.htm#BGBJHGHG">"Managing a DML Handler"</a></p>
</li>
</ul>
</div>
<a id="CACIDFJF"></a>
<div id="STRMS1609" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Displaying Information About All DML Handlers</h4>
<p>You can display the following information about all of the <a href="strms_glossary.htm#CHDEIDID"><span class="xrefglossterm">DML handler</span></a>s in a database, including all <a href="strms_glossary.htm#CHDJIDCH"><span class="xrefglossterm">statement DML handler</span></a>s and all <a href="strms_glossary.htm#CHDEAFJH"><span class="xrefglossterm">procedure DML handler</span></a>s:</p>
<ul>
<li>
<p>The owner and name of the table for which the DML handler is set</p>
</li>
<li>
<p>The operation for which the DML handler is set</p>
</li>
<li>
<p>The name of the DML handler</p>
</li>
<li>
<p>The type of the DML handler, either statement or procedure</p>
</li>
<li>
<p>The name of the apply process that uses the DML handler</p>
</li>
</ul>
<p>To display this information for each DML handler in a database, run the following query:</p>
<pre>
COLUMN OBJECT_OWNER HEADING 'Table|Owner' FORMAT A7
COLUMN OBJECT_NAME HEADING 'Table Name' FORMAT A11
COLUMN OPERATION_NAME HEADING 'Operation' FORMAT A9
COLUMN HANDLER HEADING 'DML Handler' FORMAT A13
COLUMN HANDLER_TYPE HEADING 'Handler|Type' FORMAT A9
COLUMN APPLY_NAME HEADING 'Apply|Process|Name' FORMAT A15
 
SELECT OBJECT_OWNER,
       OBJECT_NAME,
       OPERATION_NAME,
       NVL(USER_PROCEDURE,HANDLER_NAME) Handler,
       DECODE(HANDLER_TYPE,'PROCEDURE HANDLER','PROCEDURE','STMT HANDLER', 
              'STATEMENT','UNKNOWN') HANDLER_TYPE,
       APPLY_NAME
  FROM DBA_APPLY_DML_HANDLERS
  WHERE ERROR_HANDLER = 'N' AND
        APPLY_DATABASE_LINK IS NULL
  ORDER BY OBJECT_OWNER, OBJECT_NAME;
</pre>
<p>Your output looks similar to the following:</p>
<pre>
                                                      Apply
Table                                       Handler   Process
Owner   Table Name  Operation DML Handler   Type      Name
------- ----------- --------- ------------- --------- ---------------
HR      DEPARTMENTS UPDATE    "STRMADMIN"." PROCEDURE
                              SQL_GEN_DEP"
HR      JOBS        UPDATE    TRACK_JOBS    STATEMENT APPLY$_PROD_25
OE      ORDERS      INSERT    MODIFY_ORDERS STATEMENT APPLY$_PROD_25
</pre>
<p>Because <code>Apply</code> <code>Process</code> <code>Name</code> is <code>NULL</code> for the <code>strmadmin.sql_gen_dep</code> procedure DML handler, this handler is a general handler that runs for all of the local apply processes.</p>
</div>
<!-- class="sect3" -->
<a id="CACIJBDA"></a>
<div id="STRMS1482" class="sect3">
<h4 class="sect3">Displaying Information About Statement DML Handlers<a id="sthref1179"></a><a id="sthref1180"></a></h4>
<p>The following sections contain queries that display information about the statement DML handlers in a database:</p>
<ul>
<li>
<p><a href="#CACIBJGE">Displaying the Statement DML Handlers in a Database</a></p>
</li>
<li>
<p><a href="#CACIDHBJ">Displaying the Statement DML Handlers Used by Each Apply Process</a></p>
</li>
<li>
<p><a href="#CACEFJEI">Displaying All of the Statements in Statement DML Handlers</a></p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="strms_apply.htm#BGBFBIAE">"Statement DML Handlers"</a></p>
</li>
<li>
<p><a href="strms_mapply.htm#BGBFBBBA">"Managing a Statement DML Handler"</a></p>
</li>
</ul>
</div>
<a id="CACIBJGE"></a>
<div id="STRMS1483" class="sect4">
<h5 class="sect4">Displaying the Statement DML Handlers in a Database</h5>
<p>You can display the following information about the statement DML handlers in a database:</p>
<ul>
<li>
<p>The name of the statement DML handler</p>
</li>
<li>
<p>The comment for the statement DML handler</p>
</li>
<li>
<p>The time when the statement DML handler was created</p>
</li>
<li>
<p>The time when the statement DML handler was last modified</p>
</li>
</ul>
<p>To display this information for each statement DML handler in a database, run the following query:</p>
<pre>
COLUMN HANDLER_NAME HEADING 'Handler Name' FORMAT A15
COLUMN HANDLER_COMMENT HEADING 'Comment' FORMAT A35
COLUMN CREATION_TIME HEADING 'Creation|Time' FORMAT A10
COLUMN MODIFICATION_TIME HEADING 'Last|Change|Time' FORMAT A10

SELECT HANDLER_NAME, 
       HANDLER_COMMENT, 
       CREATION_TIME, 
       MODIFICATION_TIME
  FROM DBA_STREAMS_STMT_HANDLERS
  ORDER BY HANDLER_NAME;
</pre>
<p>Your output looks similar to the following:</p>
<pre>
                                                               Last
                                                    Creation   Change
Handler Name    Comment                             Time       Time
--------------- ----------------------------------- ---------- ----------
MODIFY_ORDERS   Modifies inserts into the orders ta 12-MAR-09
                ble                                 07.59.56.9
                                                    46180 AM
 
TRACK_JOBS      Tracks updates to the jobs table    11-MAR-09
                                                    10.47.52.7
                                                    76489 AM
</pre>
<p>When the <code>MODIFICATION_TIME</code> is <code>NULL</code>, shown in this output by <code>Last</code> <code>Change</code> <code>Time</code>, it indicates that the handler has not been modified since its creation.</p>
</div>
<!-- class="sect4" -->
<a id="CACIDHBJ"></a>
<div id="STRMS1484" class="sect4">
<h5 class="sect4">Displaying the Statement DML Handlers Used by Each Apply Process</h5>
<p>When you specify a statement DML handler using the <code>ADD_STMT_HANDLER</code> procedure in the <code>DBMS_APPLY_ADM</code> package at a destination database, you can either specify that the handler runs for a specific apply process or that the handler is a general handler that runs for all apply processes in the database that apply changes locally. If a statement DML handler for an operation on a table is used by a specific apply process, and another statement DML handler is a general handler for the same operation on the same table, then both handlers are invoked when an apply process dequeues a row LCR with the operation on the table. Each statement DML handler receives the original row LCR, and the statement DML handlers can execute in any order.</p>
<p>You can display the following information about the statement DML handlers used by the apply processes in the database:</p>
<ul>
<li>
<p>The owner and name of the table for which the statement DML handler is set</p>
</li>
<li>
<p>The operation for which the statement DML handler is set</p>
</li>
<li>
<p>The name of the apply process that uses the statement DML handler</p>
</li>
<li>
<p>The name of the statement DML handler</p>
</li>
</ul>
<p>To display this information for the statement DML handlers used by each apply process, run the following query:</p>
<pre>
COLUMN OBJECT_OWNER HEADING 'Table|Owner' FORMAT A10
COLUMN OBJECT_NAME HEADING 'Table Name' FORMAT A10
COLUMN OPERATION_NAME HEADING 'Operation' FORMAT A9
COLUMN APPLY_NAME HEADING 'Apply Process|Name' FORMAT A15
COLUMN HANDLER_NAME HEADING 'Statement DML|Handler Name' FORMAT A30

SELECT OBJECT_OWNER, 
       OBJECT_NAME, 
       OPERATION_NAME, 
       APPLY_NAME,
       HANDLER_NAME
  FROM DBA_APPLY_DML_HANDLERS
  WHERE HANDLER_TYPE='STMT HANDLER'
  ORDER BY OBJECT_OWNER, OBJECT_NAME, OPERATION_NAME;
</pre>
<p>Your output looks similar to the following:</p>
<pre>
Table                           Apply Process   Statement DML
Owner      Table Name Operation Name            Handler Name
---------- ---------- --------- --------------- ------------------------------
HR         JOBS       UPDATE    APPLY$_PROD_25  TRACK_JOBS
OE         ORDERS     INSERT    APPLY$_PROD_25  MODIFY_ORDERS
</pre>
<p>When <code>Apply</code> <code>Process</code> <code>Name</code> is <code>NULL</code> for a statement DML handler, the handler is a general handler that runs for all of the local apply processes.</p>
</div>
<!-- class="sect4" -->
<a id="CACEFJEI"></a>
<div id="STRMS1485" class="sect4">
<h5 class="sect4">Displaying All of the Statements in Statement DML Handlers</h5>
<p>The query in this section displays the following information about the statements in statement DML handlers in a database:</p>
<ul>
<li>
<p>The name of the statement DML handler that includes each statement</p>
</li>
<li>
<p>The execution order of each statement</p>
</li>
<li>
<p>The text of each statement</p>
</li>
</ul>
<p>To display this information, run the following query:</p>
<pre>
COLUMN HANDLER_NAME HEADING 'Statement|Handler' FORMAT A15
COLUMN EXECUTION_SEQUENCE HEADING 'Execution|Sequence' FORMAT 999999
COLUMN STATEMENT HEADING 'Statement' FORMAT A50

SET LONG  8000
SET PAGES 8000
SELECT HANDLER_NAME,
       EXECUTION_SEQUENCE,
       STATEMENT
  FROM DBA_STREAMS_STMTS
  ORDER BY HANDLER_NAME, EXECUTION_SEQUENCE;
</pre>
<p>Your output looks similar to the following:</p>
<pre>
Statement       Execution
Handler          Sequence Statement
--------------- --------- --------------------------------------------------
MODIFY_ORDERS           1 INSERT INTO oe.orders(
                                       order_id,
                                       order_date,
                                       order_mode,
                                       customer_id,
                                       order_status,
                                       order_total,
                                       sales_rep_id,
                                       promotion_id)
                                     VALUES(
                                       :new.order_id,
                                       :new.order_date,
                                       :new.order_mode,
                                       :new.customer_id,
                                       DECODE(:new.order_status, 1, 2, :new.
                          order_status),
                                       :new.order_total,
                                       :new.sales_rep_id,
                                       :new.promotion_id)
 
TRACK_JOBS             10 :lcr.execute TRUE
TRACK_JOBS             20 INSERT INTO hr.track_jobs(
                                       change_id,
                                       job_id,
                                       job_title,
                                       min_salary_old,
                                       min_salary_new,
                                       max_salary_old,
                                       max_salary_new,
                                       timestamp)
                                     VALUES(
                                       hr.track_jobs_seq.NEXTVAL,
                                       :new.job_id,
                                       :new.job_title,
                                       :old.min_salary,
                                       :new.min_salary,
                                       :old.max_salary,
                                       :new.max_salary,
                                       :source_time)
</pre></div>
<!-- class="sect4" --></div>
<!-- class="sect3" -->
<a id="CACHHHFI"></a>
<div id="STRMS1548" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Displaying Information About Procedure DML Handlers<a id="sthref1181"></a><a id="sthref1182"></a></h4>
<p>When you specify a local procedure DML handler using the <code>SET_DML_HANDLER</code> procedure in the <code>DBMS_APPLY_ADM</code> package at a destination database, you can either specify that the handler runs for a specific apply process or that the handler is a general handler that runs for all apply processes in the database that apply changes locally, when appropriate. A specific procedure DML handler takes precedence over a generic procedure DML handler. A DML handler is run for a specified operation on a specific table.</p>
<p>To display the procedure DML handler for each apply process in a database, run the following query:</p>
<pre>
COLUMN OBJECT_OWNER HEADING 'Table|Owner' FORMAT A11
COLUMN OBJECT_NAME HEADING 'Table Name' FORMAT A15
COLUMN OPERATION_NAME HEADING 'Operation' FORMAT A9
COLUMN USER_PROCEDURE HEADING 'Handler Procedure' FORMAT A25
COLUMN APPLY_NAME HEADING 'Apply Process|Name' FORMAT A15

SELECT OBJECT_OWNER, 
       OBJECT_NAME, 
       OPERATION_NAME, 
       USER_PROCEDURE,
       APPLY_NAME
  FROM DBA_APPLY_DML_HANDLERS
  WHERE ERROR_HANDLER = 'N' AND
        USER_PROCEDURE IS NOT NULL
  ORDER BY OBJECT_OWNER, OBJECT_NAME;
</pre>
<p>Your output looks similar to the following:</p>
<pre>
Table                                                           Apply Process
Owner       Table Name      Operation Handler Procedure         Name
----------- --------------- --------- ------------------------- ---------------
HR          DEPARTMENTS     UPDATE    "STRMADMIN"."SQL_GEN_DEP"
</pre>
<p>Because <code>Apply</code> <code>Process</code> <code>Name</code> is <code>NULL</code> for the <code>strmadmin.sql_gen_dep</code> procedure DML handler, this handler is a general handler that runs for all of the local apply processes.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="strms_apply.htm#BGBFFGHI">"Procedure DML Handlers"</a></p>
</li>
<li>
<p><a href="strms_mapply.htm#BGBBJCGI">"Managing a Procedure DML Handler"</a></p>
</li>
</ul>
</div>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="CACJHBGH"></a>
<div id="STRMS952" class="sect2">
<h3 class="sect2">Displaying the DDL Handler for Each Apply Process<a id="sthref1183"></a><a id="sthref1184"></a><a id="sthref1185"></a><a id="sthref1186"></a><a id="sthref1187"></a></h3>
<p>To display the DDL handler for each apply process in a database, run the following query:</p>
<pre>
COLUMN APPLY_NAME HEADING 'Apply Process Name' FORMAT A20
COLUMN DDL_HANDLER HEADING 'DDL Handler' FORMAT A40

SELECT APPLY_NAME, DDL_HANDLER FROM DBA_APPLY;
</pre>
<p>Your output looks similar to the following:</p>
<pre>
Apply Process Name   DDL Handler
-------------------- ----------------------------------------
STREP01_APPLY        "STRMADMIN"."HISTORY_DDL"
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="strms_mapply.htm#BGBJHHEI">"Managing a DDL Handler"</a></div>
</div>
<!-- class="sect2" -->
<a id="CFFJCHFH"></a>
<div id="STRMS953" class="sect2">
<h3 class="sect2">Displaying All of the Error Handlers for Local Apply Processes<a id="sthref1188"></a><a id="sthref1189"></a><a id="sthref1190"></a><a id="sthref1191"></a></h3>
<p>When you specify a local <a href="strms_glossary.htm#CHDJFGCJ"><span class="xrefglossterm">error handler</span></a> using the <code>SET_DML_HANDLER</code> procedure in the <code>DBMS_APPLY_ADM</code> package at a <a href="strms_glossary.htm#CHDGCAJA"><span class="xrefglossterm">destination database</span></a>, you can specify either that the handler runs for a specific apply process or that the handler is a general handler that runs for all apply processes in the database that apply changes locally when an error is raised by an apply process. A specific error handler takes precedence over a generic error handler. An error handler is run for a specified operation on a specific table.</p>
<p>To display the error handler for each apply process that applies changes locally in a database, run the following query:</p>
<pre>
COLUMN OBJECT_OWNER HEADING 'Table|Owner' FORMAT A5
COLUMN OBJECT_NAME HEADING 'Table Name' FORMAT A10
COLUMN OPERATION_NAME HEADING 'Operation' FORMAT A10
COLUMN USER_PROCEDURE HEADING 'Handler Procedure' FORMAT A30
COLUMN APPLY_NAME HEADING 'Apply Process|Name' FORMAT A15

SELECT OBJECT_OWNER, 
       OBJECT_NAME, 
       OPERATION_NAME, 
       USER_PROCEDURE,
       APPLY_NAME 
  FROM DBA_APPLY_DML_HANDLERS
  WHERE ERROR_HANDLER = 'Y'
  ORDER BY OBJECT_OWNER, OBJECT_NAME;
</pre>
<p>Your output looks similar to the following:</p>
<pre>
Table                                                      Apply Process
Owner Table Name Operation  Handler Procedure              Name
----- ---------- ---------- ------------------------------ --------------
HR    REGIONS    INSERT     "STRMADMIN"."ERRORS_PKG"."REGI
                            ONS_PK_ERROR"
</pre>
<p><code>Apply</code> <code>Process</code> <code>Name</code> is <code>NULL</code> for the <code>strmadmin.errors_pkg.regions_pk_error</code> error handler. Therefore, this handler is a general handler that runs for all of the local apply processes.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="strms_mapply.htm#i1010565">"Managing an Error Handler"</a></div>
</div>
<!-- class="sect2" -->
<a id="CACBFIFF"></a>
<div id="STRMS954" class="sect2">
<h3 class="sect2">Displaying the Message Handler for Each Apply Process<a id="sthref1192"></a><a id="sthref1193"></a><a id="sthref1194"></a><a id="sthref1195"></a></h3>
<p>To display each <a href="strms_glossary.htm#CHDDHDEH"><span class="xrefglossterm">message handler</span></a> in a database, run the following query:</p>
<pre>
COLUMN APPLY_NAME HEADING 'Apply Process Name' FORMAT A20
COLUMN MESSAGE_HANDLER HEADING 'Message Handler' FORMAT A20

SELECT APPLY_NAME, MESSAGE_HANDLER FROM DBA_APPLY
  WHERE MESSAGE_HANDLER IS NOT NULL;
</pre>
<p>Your output looks similar to the following:</p>
<pre>
Apply Process Name   Message Handler
-------------------- --------------------
STRM03_APPLY         "OE"."MES_HANDLER"
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="strms_mapply.htm#i1006583">"Managing the Message Handler for an Apply Process"</a></div>
</div>
<!-- class="sect2" -->
<a id="CACJDBJI"></a>
<div id="STRMS955" class="sect2">
<h3 class="sect2">Displaying the Precommit Handler for Each Apply Process<a id="sthref1196"></a><a id="sthref1197"></a></h3>
<p>You can display the following information about each <a href="strms_glossary.htm#CHDGJIFI"><span class="xrefglossterm">precommit handler</span></a> used by an <a href="strms_glossary.htm#CHDJBHJC"><span class="xrefglossterm">apply process</span></a> in a database by running the query in this section:</p>
<ul>
<li>
<p>The apply process name.</p>
</li>
<li>
<p>The owner and name of the precommit handler</p>
</li>
<li>
<p>The type of <a href="strms_glossary.htm#CHDFHHGJ"><span class="xrefglossterm">message</span></a>s applied by the apply process. An apply process either can apply either <a href="strms_glossary.htm#CHDCHEJI"><span class="xrefglossterm">captured LCR</span></a>s, or an apply process can apply <a href="strms_glossary.htm#CBAGDEIH"><span class="xrefglossterm">persistent LCR</span></a>s and <a href="strms_glossary.htm#CBAGGIDA"><span class="xrefglossterm">persistent user message</span></a>s.</p>
</li>
</ul>
<p>To display each this information for each precommit handler in the database, run the following query:</p>
<pre>
COLUMN APPLY_NAME HEADING 'Apply Process Name' FORMAT A15
COLUMN PRECOMMIT_HANDLER HEADING 'Precommit Handler' FORMAT A30
COLUMN APPLY_CAPTURED HEADING 'Applies Captured|Messages?' FORMAT A20

SELECT APPLY_NAME, PRECOMMIT_HANDLER, APPLY_CAPTURED
  FROM DBA_APPLY
  WHERE PRECOMMIT_HANDLER IS NOT NULL;
</pre>
<p>Your output looks similar to the following:</p>
<pre>
                                                    Applies Captured
Apply Process Name   Precommit Handler              Messages?
-------------------- ------------------------------ --------------------
STRM01_APPLY         "STRMADMIN"."HISTORY_COMMIT"   YES
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="strms_mapply.htm#i1009583">"Managing the Precommit Handler for an Apply Process"</a></div>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="CHDBJIFF"></a>
<div id="STRMS1689" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Displaying Session Information About Each Apply Process<a id="sthref1198"></a><a id="sthref1199"></a></h2>
<p>The query in this section displays the following session information about each session associated with a <a href="strms_glossary.htm#CHDJBHJC"><span class="xrefglossterm">apply process</span></a> in a database:</p>
<ul>
<li>
<p>The apply process component</p>
</li>
<li>
<p>The session identifier</p>
</li>
<li>
<p>The serial number</p>
</li>
<li>
<p>The operating system process identification number</p>
</li>
<li>
<p>The process names of the coordinator process, the reader process, and the apply servers</p>
</li>
</ul>
<p>To display this information for each capture process in a database, run the following query:</p>
<pre>
COLUMN ACTION HEADING 'Apply Process Component' FORMAT A30
COLUMN SID HEADING 'Session ID' FORMAT 99999
COLUMN SERIAL# HEADING 'Session|Serial|Number' FORMAT 99999999
COLUMN PROCESS HEADING 'Operating System|Process Number' FORMAT A17
COLUMN PROCESS_NAME HEADING 'Process|Names' FORMAT A7
 
SELECT /*+PARAM('_module_action_old_length',0)*/ ACTION,
       SID,
       SERIAL#,
       PROCESS,
       SUBSTR(PROGRAM,INSTR(PROGRAM,'(')+1,4) PROCESS_NAME
  FROM V$SESSION
  WHERE MODULE ='Streams' AND
        ACTION LIKE '%Apply%';
</pre>
<p>Your output looks similar to the following:</p>
<pre>
                                            Session
                                             Serial Operating System  Process
Apply Process Component        Session ID    Number Process Number    Names
------------------------------ ---------- --------- ----------------- -------
APPLY$_EMDBB_3 - Apply Coordin         17      3040 9863              AP01
ator
APPLY$_EMDBB_3 - Apply Server          58     52788 9869              AS02
APPLY$_EMDBB_3 - Apply Reader          63        21 9865              AS01
APPLY$_EMDBB_3 - Apply Server          64        37 9872              AS03
APPLY$_EMDBB_3 - Apply Server          67        22 9875              AS04
APPLY$_EMDBB_3 - Apply Server          69         1 9877              AS05
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="strms_apply.htm#i1007083">"Apply Process Subcomponents"</a></div>
</div>
<!-- class="sect1" -->
<a id="i1007562"></a>
<div id="STRMS956" class="sect1">
<h2 class="sect1">Displaying Information About the Reader Server for Each Apply Process<a id="sthref1200"></a><a id="sthref1201"></a><a id="sthref1202"></a></h2>
<p>The <a href="strms_glossary.htm#CHDIFFGB"><span class="xrefglossterm">reader server</span></a> for an <a href="strms_glossary.htm#CHDJBHJC"><span class="xrefglossterm">apply process</span></a> dequeues <a href="strms_glossary.htm#CHDFHHGJ"><span class="xrefglossterm">message</span></a>s from the <a href="strms_glossary.htm#CHDIDCDI"><span class="xrefglossterm">queue</span></a>. The reader server is a process that computes dependencies between LCRs and assembles messages into transactions. The reader server then returns the assembled transactions to the coordinator, which assigns them to idle <a href="strms_glossary.htm#CHDDCEJB"><span class="xrefglossterm">apply servers</span></a>.</p>
<p>The query in this section displays the following information about the reader server for each apply process:</p>
<ul>
<li>
<p>The name of the apply process</p>
</li>
<li>
<p>The type of <a href="strms_glossary.htm#CHDFHHGJ"><span class="xrefglossterm">message</span></a>s dequeued by the reader server. An apply process either can dequeue either <a href="strms_glossary.htm#CHDCHEJI"><span class="xrefglossterm">captured LCR</span></a>s, or an apply process can dequeue <a href="strms_glossary.htm#CBAGDEIH"><span class="xrefglossterm">persistent LCR</span></a>s and <a href="strms_glossary.htm#CBAGGIDA"><span class="xrefglossterm">persistent user message</span></a>s.</p>
</li>
<li>
<p>The name of the process used by the reader server. The process name is in the form <code>AS</code><code><span class="codeinlineitalic">nn</span></code>, where <code><span class="codeinlineitalic">nn</span></code> can be letters and numbers.</p>
</li>
<li>
<p>The current state of the reader server</p>
<p>See <a href="strms_apply.htm#i1009432">"Reader Server States"</a>.</p>
</li>
<li>
<p>The total number of messages dequeued by the reader server since the last time the apply process was started</p>
</li>
</ul>
<p>The information displayed by this query is valid only for an enabled apply process.</p>
<p>Run the following query to display this information for each apply process:</p>
<pre>
COLUMN APPLY_NAME HEADING 'Apply Process|Name' FORMAT A15
COLUMN APPLY_CAPTURED HEADING 'Dequeues Captured|Messages?' FORMAT A17
COLUMN PROCESS_NAME HEADING 'Process|Name' FORMAT A7
COLUMN STATE HEADING 'State' FORMAT A17
COLUMN TOTAL_MESSAGES_DEQUEUED HEADING 'Total Messages|Dequeued' FORMAT 99999999

SELECT r.APPLY_NAME,
       ap.APPLY_CAPTURED,
       SUBSTR(s.PROGRAM,INSTR(s.PROGRAM,'(')+1,4) PROCESS_NAME,
       r.STATE,
       r.TOTAL_MESSAGES_DEQUEUED
       FROM V$STREAMS_APPLY_READER r, V$SESSION s, DBA_APPLY ap 
       WHERE r.SID = s.SID AND 
             r.SERIAL# = s.SERIAL# AND 
             r.APPLY_NAME = ap.APPLY_NAME;
</pre>
<p>Your output looks similar to the following:</p>
<pre>
Apply Process   Dequeues Captured Process                   Total Messages
Name            Messages?         Name    State                   Dequeued
--------------- ----------------- ------- ----------------- --------------
APPLY_SPOKE     YES               AS01    DEQUEUE MESSAGES              54
</pre></div>
<!-- class="sect1" -->
<a id="CHDCAJAF"></a>
<div id="STRMS957" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Monitoring Transactions and Messages Spilled by Each Apply Process<a id="sthref1203"></a><a id="sthref1204"></a><a id="sthref1205"></a><a id="sthref1206"></a></h2>
<p>If the <code>txn_lcr_spill_threshold</code> <a href="strms_glossary.htm#CHDJBHJC"><span class="xrefglossterm">apply process</span></a> parameter is set to a value other than <code>INFINITE</code>, then an apply process can spill <a href="strms_glossary.htm#CHDFHHGJ"><span class="xrefglossterm">message</span></a>s from memory to hard disk when the number of messages in a transaction exceeds the specified number.</p>
<p>The first query in this section displays the following information about each transaction currently being applied for which the apply process has spilled messages:</p>
<ul>
<li>
<p>The name of the apply process</p>
</li>
<li>
<p>The transaction ID of the transaction with spilled messages</p>
</li>
<li>
<p>The system change number (SCN) of the first message in the transaction</p>
</li>
<li>
<p>The number of messages currently spilled in the transaction</p>
</li>
</ul>
<p>To display this information for each apply process in a database, run the following query:</p>
<pre>
COLUMN APPLY_NAME HEADING 'Apply Name' FORMAT A20
COLUMN 'Transaction ID' HEADING 'Transaction ID' FORMAT A15
COLUMN FIRST_SCN HEADING 'First SCN'   FORMAT 99999999
COLUMN MESSAGE_COUNT HEADING 'Message Count' FORMAT 99999999
 
SELECT APPLY_NAME,
       XIDUSN ||'.'|| 
       XIDSLT ||'.'||
       XIDSQN "Transaction ID",
       FIRST_SCN,
       MESSAGE_COUNT
  FROM DBA_APPLY_SPILL_TXN;
</pre>
<p>Your output looks similar to the following:</p>
<pre>
Apply Name           Transaction ID  First SCN Message Count
-------------------- --------------- --------- -------------
APPLY_HR             1.42.2277         2246944           100
</pre>
<p>The next query in this section displays the following information about the messages spilled by the apply processes in the local database:</p>
<ul>
<li>
<p>The name of the apply process</p>
</li>
<li>
<p>The total number of messages spilled by the apply process since it last started</p>
</li>
<li>
<p>The amount of time the apply process spent spilling messages, in seconds</p>
</li>
</ul>
<p>To display this information for each apply process in a database, run the following query:</p>
<pre>
COLUMN APPLY_NAME HEADING 'Apply Name' FORMAT A15
COLUMN TOTAL_MESSAGES_SPILLED HEADING 'Total|Spilled Messages' FORMAT 99999999
COLUMN ELAPSED_SPILL_TIME HEADING 'Elapsed Time|Spilling Messages' FORMAT 99999999.99

SELECT APPLY_NAME,
       TOTAL_MESSAGES_SPILLED,
       (ELAPSED_SPILL_TIME/100) ELAPSED_SPILL_TIME
  FROM V$STREAMS_APPLY_READER;
</pre>
<p>Your output looks similar to the following:</p>
<pre>
                           Total      Elapsed Time
Apply Name      Spilled Messages Spilling Messages
--------------- ---------------- -----------------
APPLY_HR                     100              2.67
</pre>
<div class="infobox-note">
<p class="notep1">Note:</p>
The elapsed time spilling messages is displayed in seconds. The <code>V$STREAMS_APPLY_READER</code> view displays elapsed time in centiseconds by default. A centisecond is one-hundredth of a second. The query in this section divides each elapsed time by one hundred to display the elapsed time in seconds.</div>
</div>
<!-- class="sect1" -->
<a id="i1007594"></a>
<div id="STRMS958" class="sect1">
<h2 class="sect1">Determining Capture to Dequeue Latency for a Message<a id="sthref1207"></a><a id="sthref1208"></a><a id="sthref1209"></a></h2>
<p>The query in this section displays the following information about the last <a href="strms_glossary.htm#CHDFHHGJ"><span class="xrefglossterm">message</span></a> dequeued by each <a href="strms_glossary.htm#CHDJBHJC"><span class="xrefglossterm">apply process</span></a>:</p>
<ul>
<li>
<p>The name of the apply process.</p>
</li>
<li>
<p>The latency. For <a href="strms_glossary.htm#CHDCHEJI"><span class="xrefglossterm">captured LCR</span></a>s, the latency is the amount of time between when the message was created at a <a href="strms_glossary.htm#CHDHFBJG"><span class="xrefglossterm">source database</span></a> and when the message was dequeued by the apply process. For any other type of message, the latency is the amount of time between when the message enqueued at the local database and when the message was dequeued by the apply process.</p>
</li>
<li>
<p>The message creation time. For captured LCRs, the message creation time is the time when the data manipulation language (DML) or data definition language (DDL) change generated the redo data at the source database for the message. For messages enqueued by an application or apply process, the message creation time is the last time the message was enqueued. A message can be enqueued one or more additional times by <a href="strms_glossary.htm#CHDEICIC"><span class="xrefglossterm">propagation</span></a>s before it reaches an apply process.</p>
</li>
<li>
<p>The time when the message was dequeued by the apply process.</p>
</li>
<li>
<p>The message number of the message that was last dequeued by the apply process.</p>
</li>
</ul>
<p>The information displayed by this query is valid only for an enabled apply process.</p>
<p>Run the following query to display this information for each apply process:</p>
<pre>
COLUMN APPLY_NAME HEADING 'Apply Process|Name' FORMAT A17
COLUMN LATENCY HEADING 'Latency|in|Seconds' FORMAT 999999
COLUMN CREATION HEADING 'Message Creation' FORMAT A17
COLUMN LAST_DEQUEUE HEADING 'Last Dequeue Time' FORMAT A20
COLUMN DEQUEUED_MESSAGE_NUMBER HEADING 'Dequeued|Message Number' FORMAT 9999999999

SELECT APPLY_NAME,
     (DEQUEUE_TIME-DEQUEUED_MESSAGE_CREATE_TIME)*86400 LATENCY,
     TO_CHAR(DEQUEUED_MESSAGE_CREATE_TIME,'HH24:MI:SS MM/DD/YY') CREATION,
     TO_CHAR(DEQUEUE_TIME,'HH24:MI:SS MM/DD/YY') LAST_DEQUEUE,
     DEQUEUED_MESSAGE_NUMBER  
  FROM V$STREAMS_APPLY_READER;
</pre>
<p>Your output looks similar to the following:</p>
<pre>
                  Latency
Apply Process          in                                              Dequeued
Name              Seconds Message Creation  Last Dequeue Time    Message Number
----------------- ------- ----------------- -------------------- --------------
APPLY$_STM1_14          1 15:22:15 06/13/05 15:22:16 06/13/05            502129
</pre></div>
<!-- class="sect1" -->
<a id="i1007622"></a>
<div id="STRMS959" class="sect1">
<h2 class="sect1">Displaying General Information About Each Coordinator Process<a id="sthref1210"></a><a id="sthref1211"></a></h2>
<p>A <a href="strms_glossary.htm#CHDEGIHH"><span class="xrefglossterm">coordinator process</span></a> gets transactions from the <a href="strms_glossary.htm#CHDIFFGB"><span class="xrefglossterm">reader server</span></a> and passes these transactions to <a href="strms_glossary.htm#CHDDCEJB"><span class="xrefglossterm">apply servers</span></a>. The <a href="strms_glossary.htm#CHDEGIHH"><span class="xrefglossterm">coordinator process</span></a> name is <code>AP</code><code><span class="codeinlineitalic">nn</span></code>, where <code><span class="codeinlineitalic">nn</span></code> is a coordinator process number.</p>
<p>The query in this section displays the following information about the coordinator process for each <a href="strms_glossary.htm#CHDJBHJC"><span class="xrefglossterm">apply process</span></a>:</p>
<ul>
<li>
<p>The apply process name</p>
</li>
<li>
<p>The number of the coordinator in the process name <code>AP</code><code><span class="codeinlineitalic">nn</span></code>, where <code><span class="codeinlineitalic">nn</span></code> can include letters and numbers</p>
</li>
<li>
<p>The session identifier of the coordinator's session</p>
</li>
<li>
<p>The serial number of the coordinator's session</p>
</li>
<li>
<p>The current state of the coordinator</p>
<p>See <a href="strms_apply.htm#i1009431">"Coordinator Process States"</a>.</p>
</li>
</ul>
<p>The information displayed by this query is valid only for an enabled apply process.</p>
<p>Run the following query to display this information for each apply process:</p>
<pre>
COLUMN APPLY_NAME HEADING 'Apply Process|Name' FORMAT A17
COLUMN PROCESS_NAME HEADING 'Coordinator|Process|Name' FORMAT A11
COLUMN SID HEADING 'Session|ID' FORMAT 9999
COLUMN SERIAL# HEADING 'Session|Serial|Number' FORMAT 9999
COLUMN STATE HEADING 'State' FORMAT A21

SELECT c.APPLY_NAME,
       SUBSTR(s.PROGRAM,INSTR(s.PROGRAM,'(')+1,4) PROCESS_NAME,
       c.SID,
       c.SERIAL#,
       c.STATE
       FROM V$STREAMS_APPLY_COORDINATOR c, V$SESSION s
       WHERE c.SID = s.SID AND
             c.SERIAL# = s.SERIAL#;
</pre>
<p>Your output looks similar to the following:</p>
<pre>
                  Coordinator         Session
Apply Process     Process     Session  Serial
Name              Name             ID  Number State
----------------- ----------- ------- ------- ---------------------
APPLY_SPOKE       AP01            944       5 IDLE
</pre></div>
<!-- class="sect1" -->
<a id="i1015387"></a>
<div id="STRMS960" class="sect1">
<h2 class="sect1">Displaying Information About Transactions Received and Applied<a id="sthref1212"></a><a id="sthref1213"></a></h2>
<p>The query in this section displays the following information about the transactions received, applied, and being applied by each <a href="strms_glossary.htm#CHDJBHJC"><span class="xrefglossterm">apply process</span></a>:</p>
<ul>
<li>
<p>The apply process name</p>
</li>
<li>
<p>The total number of transactions received by the <a href="strms_glossary.htm#CHDEGIHH"><span class="xrefglossterm">coordinator process</span></a> since the apply process was last started</p>
</li>
<li>
<p>The total number of transactions successfully applied by the apply process since the apply process was last started</p>
</li>
<li>
<p>The number of transactions applied by the apply process that resulted in an apply error since the apply process was last started</p>
</li>
<li>
<p>The total number of transactions currently being applied by the apply process</p>
</li>
<li>
<p>The total number of complete transactions that the coordinator process has received but has not yet assigned to any apply servers</p>
</li>
<li>
<p>The total number of transactions received by the coordinator process but ignored because the apply process had already applied the transactions since the apply process was last started</p>
</li>
</ul>
<p>The information displayed by this query is valid only for an enabled apply process.</p>
<p>For example, to display this information for an apply process named <code>apply</code>, run the following query:</p>
<pre>
COLUMN APPLY_NAME HEADING 'Apply Process Name' FORMAT A20
COLUMN TOTAL_RECEIVED HEADING 'Total|Trans|Received' FORMAT 99999999
COLUMN TOTAL_APPLIED HEADING 'Total|Trans|Applied' FORMAT 99999999
COLUMN TOTAL_ERRORS HEADING 'Total|Apply|Errors' FORMAT 9999
COLUMN BEING_APPLIED HEADING 'Total|Trans Being|Applied' FORMAT 99999999
COLUMN UNASSIGNED_COMPLETE_TXNS HEADING 'Total|Unnasigned|Trans' FORMAT 99999999
COLUMN TOTAL_IGNORED HEADING 'Total|Trans|Ignored' FORMAT 99999999
 
SELECT APPLY_NAME,
       TOTAL_RECEIVED,
       TOTAL_APPLIED,
       TOTAL_ERRORS,
       (TOTAL_ASSIGNED - (TOTAL_ROLLBACKS + TOTAL_APPLIED)) BEING_APPLIED,
       UNASSIGNED_COMPLETE_TXNS,
       TOTAL_IGNORED 
       FROM V$STREAMS_APPLY_COORDINATOR;
</pre>
<p>Your output looks similar to the following:</p>
<pre>
                         Total     Total  Total       Total      Total     Total
                         Trans     Trans  Apply Trans Being Unnasigned     Trans
Apply Process Name    Received   Applied Errors     Applied      Trans   Ignored
-------------------- --------- --------- ------ ----------- ---------- ---------
APPLY_FROM_MULT1            81        73      2           6          4         0
APPLY_FROM_MULT2           114        96      0          14          7         4
</pre></div>
<!-- class="sect1" -->
<a id="i1007662"></a>
<div id="STRMS961" class="sect1">
<h2 class="sect1">Determining the Capture to Apply Latency for a Message for Each Apply Process<a id="sthref1214"></a><a id="sthref1215"></a><a id="sthref1216"></a><a id="sthref1217"></a><a id="sthref1218"></a><a id="sthref1219"></a><a id="sthref1220"></a><a id="sthref1221"></a><a id="sthref1222"></a></h2>
<p>This section contains two different queries that show the capture to apply latency for a particular <a href="strms_glossary.htm#CHDFHHGJ"><span class="xrefglossterm">message</span></a>. That is, these queries show the amount of time between when the message was created at a <a href="strms_glossary.htm#CHDHFBJG"><span class="xrefglossterm">source database</span></a> and when the message was applied by an <a href="strms_glossary.htm#CHDJBHJC"><span class="xrefglossterm">apply process</span></a>. One query uses the <code>V$STREAMS_APPLY_COORDINATOR</code> dynamic performance view. The other uses the <code>DBA_APPLY_PROGRESS</code> static data dictionary view.</p>
<p>The two queries differ in the following ways:</p>
<ul>
<li>
<p>You can use the query on the <code>V$STREAMS_APPLY_COORDINATOR</code> view to determine capture to apply latency for <a href="strms_glossary.htm#CHDCHEJI"><span class="xrefglossterm">captured LCR</span></a>s or <a href="strms_glossary.htm#CBAGDEIH"><span class="xrefglossterm">persistent LCR</span></a>s. However, the query on the <code>DBA_APPLY_PROGRESS</code> view only returns results for captured LCRs.</p>
</li>
<li>
<p>The apply process must be enabled when you run the query on the <code>V$STREAMS_APPLY_COORDINATOR</code> view, while the apply process can be enabled or disabled when you run the query on the <code>DBA_APPLY_PROGRESS</code> view. Therefore, if the apply process is currently disabled and change capture is performed by a capture process, then run the query on the <code>DBA_APPLY_PROGRESS</code> view to determine the capture to apply latency.</p>
</li>
<li>
<p>The query on the <code>V$STREAMS_APPLY_COORDINATOR</code> view can show the latency for a more recent transaction than the query on the <code>DBA_APPLY_PROGRESS</code> view.</p>
</li>
</ul>
<p>Both queries display the following information about a message applied by each apply process:</p>
<ul>
<li>
<p>The apply process name</p>
</li>
<li>
<p>The capture to apply latency for the message</p>
</li>
<li>
<p>The message creation time</p>
<p>For captured LCRs, the message creation time is the time when the data manipulation language (DML) or data definition language (DDL) change generated the redo data at the source database for the message.</p>
<p>For persistent LCRs, the message creation time is the time when the LCR was constructed.</p>
</li>
<li>
<p>The time when the message was applied by the apply process</p>
</li>
<li>
<p>The message number of the message</p>
</li>
</ul>
<div class="infobox-note">
<p class="notep1">Note:</p>
These queries do not pertain to <a href="strms_glossary.htm#CBAGGIDA"><span class="xrefglossterm">persistent user message</span></a>s.</div>
<div id="STRMS962" class="sect2"><a id="sthref1223"></a>
<h3 class="sect2">Example V$STREAMS_APPLY_COORDINATOR Query for Latency</h3>
<p>Run the following query to display the capture to apply latency using the <code>V$STREAMS_APPLY_COORDINATOR</code> view for a captured LCR or a persistent LCR for each apply process:</p>
<pre>
COLUMN APPLY_NAME HEADING 'Apply Process|Name' FORMAT A13
COLUMN 'Latency in Seconds' FORMAT 999999
COLUMN 'Message Creation' FORMAT A17
COLUMN 'Apply Time' FORMAT A17
COLUMN HWM_MESSAGE_NUMBER HEADING 'Applied|Message|Number' FORMAT 9999999999

SELECT APPLY_NAME,
     (HWM_TIME-HWM_MESSAGE_CREATE_TIME)*86400 "Latency in Seconds",
     TO_CHAR(HWM_MESSAGE_CREATE_TIME,'HH24:MI:SS MM/DD/YY') 
        "Message Creation",
     TO_CHAR(HWM_TIME,'HH24:MI:SS MM/DD/YY') "Apply Time",
     HWM_MESSAGE_NUMBER  
  FROM V$STREAMS_APPLY_COORDINATOR;
</pre>
<p>Your output looks similar to the following:</p>
<pre>
Apply Process                                                            Message
Name          Latency in Seconds Message Creation  Apply Time             Number
------------- ------------------ ----------------- ----------------- -----------
APPLY$_DA_2                    2 13:00:10 07/14/10 13:00:12 07/14/10      672733
</pre></div>
<!-- class="sect2" -->
<div id="STRMS963" class="sect2"><a id="sthref1224"></a>
<h3 class="sect2">Example DBA_APPLY_PROGRESS Query for Latency</h3>
<p>Run the following query to display the capture to apply latency using the <code>DBA_APPLY_PROGRESS</code> view for a captured LCR for each apply process:</p>
<pre>
COLUMN APPLY_NAME HEADING 'Apply Process|Name' FORMAT A17
COLUMN 'Latency in Seconds' FORMAT 999999
COLUMN 'Message Creation' FORMAT A17
COLUMN 'Apply Time' FORMAT A17
COLUMN APPLIED_MESSAGE_NUMBER HEADING 'Applied|Message|Number' FORMAT 9999999999

SELECT APPLY_NAME,
     (APPLY_TIME-APPLIED_MESSAGE_CREATE_TIME)*86400 "Latency in Seconds",
     TO_CHAR(APPLIED_MESSAGE_CREATE_TIME,'HH24:MI:SS MM/DD/YY') 
        "Message Creation",
     TO_CHAR(APPLY_TIME,'HH24:MI:SS MM/DD/YY') "Apply Time",
     APPLIED_MESSAGE_NUMBER  
  FROM DBA_APPLY_PROGRESS;
</pre>
<p>Your output looks similar to the following:</p>
<pre>
                                                                         Applied
Apply Process                                                            Message
Name              Latency in Seconds Message Creation  Apply Time         Number
----------------- ------------------ ----------------- ----------------- -------
APPLY$_STM1_14                    33 14:05:13 06/13/05 14:05:46 06/13/05  498215
</pre></div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="i1007717"></a>
<div id="STRMS964" class="sect1">
<h2 class="sect1">Displaying Information About the Apply Servers for Each Apply Process<a id="sthref1225"></a><a id="sthref1226"></a><a id="sthref1227"></a></h2>
<p>An <a href="strms_glossary.htm#CHDJBHJC"><span class="xrefglossterm">apply process</span></a> can use one or more <a href="strms_glossary.htm#CHDDCEJB"><span class="xrefglossterm">apply servers</span></a> that apply LCRs to database objects as DML statements or DDL statements or pass the LCRs to their appropriate handlers. For non-LCR <a href="strms_glossary.htm#CHDFHHGJ"><span class="xrefglossterm">message</span></a>s, the apply servers pass the messages to the <a href="strms_glossary.htm#CHDDHDEH"><span class="xrefglossterm">message handler</span></a>. Each apply server is a process.</p>
<p>The query in this section displays the following information about the apply servers for each apply process:</p>
<ul>
<li>
<p>The name of the apply process.</p>
</li>
<li>
<p>The names of the reader server processes, in order. Each process name is in the form <code>AS</code><code><span class="codeinlineitalic">nn</span></code>, where <code><span class="codeinlineitalic">nn</span></code> can be letters and numbers.</p>
</li>
<li>
<p>The current state of each apply server</p>
<p>See <a href="strms_apply.htm#i1009430">"Apply Server States"</a>.</p>
</li>
<li>
<p>The total number of transactions assigned to each apply server since the last time the apply process was started. A transaction can contain more than one message.</p>
</li>
<li>
<p>The total number of messages applied by each apply server since the last time the apply process was started.</p>
</li>
</ul>
<p>The information displayed by this query is valid only for an enabled apply process.</p>
<p>Run the following query to display information about the apply servers for each apply process:</p>
<pre>
COLUMN APPLY_NAME HEADING 'Apply Process Name' FORMAT A22
COLUMN PROCESS_NAME HEADING 'Process Name' FORMAT A12
COLUMN STATE HEADING 'State' FORMAT A17
COLUMN TOTAL_ASSIGNED HEADING 'Total|Transactions|Assigned' FORMAT 99999999
COLUMN TOTAL_MESSAGES_APPLIED HEADING 'Total|Messages|Applied' FORMAT 99999999

SELECT r.APPLY_NAME,
       SUBSTR(s.PROGRAM,INSTR(S.PROGRAM,'(')+1,4) PROCESS_NAME,
       r.STATE,
       r.TOTAL_ASSIGNED, 
       r.TOTAL_MESSAGES_APPLIED
  FROM V$STREAMS_APPLY_SERVER R, V$SESSION S 
  WHERE r.SID = s.SID AND 
        r.SERIAL# = s.SERIAL# 
  ORDER BY r.APPLY_NAME, r.SERVER_ID;
</pre>
<p>Your output looks similar to the following:</p>
<pre>
                                                             Total     Total
                                                      Transactions  Messages
Apply Process Name     Process Name State                 Assigned   Applied
---------------------- ------------ ----------------- ------------ ---------
APPLY$_DA_2            AS02         IDLE                      1012    109190
APPLY$_DA_2            AS03         IDLE                       996    107568
APPLY$_DA_2            AS04         IDLE                      1006    108648
APPLY$_DA_2            AS05         IDLE                       987    10659
6
</pre></div>
<!-- class="sect1" -->
<a id="i1007764"></a>
<div id="STRMS965" class="sect1">
<h2 class="sect1">Displaying Effective Apply Parallelism for an Apply Process<a id="sthref1228"></a><a id="sthref1229"></a></h2>
<p>In some environments, an <a href="strms_glossary.htm#CHDJBHJC"><span class="xrefglossterm">apply process</span></a> might not use all of the <a href="strms_glossary.htm#CHDDCEJB"><span class="xrefglossterm">apply servers</span></a> available to it. For example, apply process parallelism can be set to five, but only three apply servers are ever used by the apply process. In this case, the effective apply parallelism is three.</p>
<p>The following query displays the effective apply parallelism for an apply process named <code>apply</code>:</p>
<pre>
SELECT COUNT(SERVER_ID) "Effective Parallelism"
  FROM V$STREAMS_APPLY_SERVER
  WHERE APPLY_NAME = 'APPLY' AND
        TOTAL_MESSAGES_APPLIED &gt; 0;
</pre>
<p>Your output looks similar to the following:</p>
<pre>
Effective Parallelism
---------------------
                    2
</pre>
<p>This query returned two for the effective parallelism. If parallelism is set to three for the apply process named <code>apply</code>, then one apply server has not been used since the last time the apply process was started.</p>
<p>You can display the total number of <a href="strms_glossary.htm#CHDFHHGJ"><span class="xrefglossterm">message</span></a>s applied by each apply server by running the following query:</p>
<pre>
COLUMN SERVER_ID HEADING 'Apply Server ID' FORMAT 99
COLUMN TOTAL_MESSAGES_APPLIED HEADING 'Total Messages Applied' FORMAT 999999

SELECT SERVER_ID, TOTAL_MESSAGES_APPLIED 
  FROM V$STREAMS_APPLY_SERVER
  WHERE APPLY_NAME = 'APPLY'
  ORDER BY SERVER_ID;
</pre>
<p>Your output looks similar to the following:</p>
<pre>
Apply Server ID Total Messages Applied
--------------- ----------------------
              1                   2141
              2                    276
              3                      0
              4                      0
</pre>
<p>In this case, apply servers 3 and 4 have not been used by the apply process since it was last started. If the <code>parallelism</code> setting for an apply process is much higher than the effective parallelism for the apply process, then consider lowering the <code>parallelism</code> setting. For example, if the <code>parallelism</code> setting is 6, but the effective parallelism for the apply process is 2, then consider lowering the setting.</p>
</div>
<!-- class="sect1" -->
<a id="i1013210"></a>
<div id="STRMS966" class="sect1">
<h2 class="sect1">Viewing Rules that Specify a Destination Queue on Apply<a id="sthref1230"></a><a id="sthref1231"></a></h2>
<p>You can specify a <a href="strms_glossary.htm#CHDHJHJD"><span class="xrefglossterm">destination queue</span></a> for a <a href="strms_glossary.htm#CHDIFFCF"><span class="xrefglossterm">rule</span></a> using the <code>SET_ENQUEUE_DESTINATION</code> procedure in the <code>DBMS_APPLY_ADM</code> package. If an <a href="strms_glossary.htm#CHDJBHJC"><span class="xrefglossterm">apply process</span></a> has such a rule in its <a href="strms_glossary.htm#CHDEEDIJ"><span class="xrefglossterm">positive rule set</span></a>, and a <a href="strms_glossary.htm#CHDFHHGJ"><span class="xrefglossterm">message</span></a> satisfies the rule, then the apply process enqueues the message into the destination queue.</p>
<p>To view destination queue settings for rules, run the following query:</p>
<pre>
COLUMN RULE_OWNER HEADING 'Rule Owner' FORMAT A15
COLUMN RULE_NAME HEADING 'Rule Name' FORMAT A15
COLUMN DESTINATION_QUEUE_NAME HEADING 'Destination Queue' FORMAT A30

SELECT RULE_OWNER, RULE_NAME, DESTINATION_QUEUE_NAME
  FROM DBA_APPLY_ENQUEUE;
</pre>
<p>Your output looks similar to the following:</p>
<pre>
Rule Owner      Rule Name       Destination Queue
--------------- --------------- ------------------------------
STRMADMIN       DEPARTMENTS17   "STRMADMIN"."STREAMS_QUEUE"
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="strms_mapply.htm#i1008466">"Specifying That Apply Processes Enqueue Messages"</a></p>
</li>
<li>
<p><a href="strms_adrules.htm#i1010177">"Enqueue Destinations for Messages During Apply"</a></p>
</li>
</ul>
</div>
</div>
<!-- class="sect1" -->
<a id="i1013211"></a>
<div id="STRMS967" class="sect1">
<h2 class="sect1">Viewing Rules that Specify No Execution on Apply<a id="sthref1232"></a><a id="sthref1233"></a></h2>
<p>You can specify an execution directive for a <a href="strms_glossary.htm#CHDIFFCF"><span class="xrefglossterm">rule</span></a> using the <code>SET_EXECUTE</code> procedure in the <code>DBMS_APPLY_ADM</code> package. An execution directive controls whether a <a href="strms_glossary.htm#CHDFHHGJ"><span class="xrefglossterm">message</span></a> that satisfies the specified rule is executed by an <a href="strms_glossary.htm#CHDJBHJC"><span class="xrefglossterm">apply process</span></a>. If an apply process has a rule in its <a href="strms_glossary.htm#CHDEEDIJ"><span class="xrefglossterm">positive rule set</span></a> with <code>NO</code> for its execution directive, and a message satisfies the rule, then the apply process does not execute the message and does not send the message to any <a href="strms_glossary.htm#CHDCJAED"><span class="xrefglossterm">apply handler</span></a>.</p>
<p>To view each rule with <code>NO</code> for its execution directive, run the following query:</p>
<pre>
COLUMN RULE_OWNER HEADING 'Rule Owner' FORMAT A20
COLUMN RULE_NAME HEADING 'Rule Name' FORMAT A20

SELECT RULE_OWNER, RULE_NAME
  FROM DBA_APPLY_EXECUTE
  WHERE EXECUTE_EVENT = 'NO';
</pre>
<p>Your output looks similar to the following:</p>
<pre>
Rule Owner           Rule Name
-------------------- --------------------
STRMADMIN            DEPARTMENTS18
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="strms_mapply.htm#i1008467">"Specifying Execute Directives for Apply Processes"</a></p>
</li>
<li>
<p><a href="strms_adrules.htm#i1021609">"Execution Directives for Messages During Apply"</a></p>
</li>
</ul>
</div>
</div>
<!-- class="sect1" -->
<a id="CFFCFCDD"></a>
<div id="STRMS968" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Determining Which Apply Processes Use Combined Capture and Apply<a id="sthref1234"></a><a id="sthref1235"></a><a id="sthref1236"></a></h2>
<p>A combined capture and apply environment is efficient because the <a href="strms_glossary.htm#CHDBHECD"><span class="xrefglossterm">capture process</span></a> acts as the propagation sender that sends logical change records (LCRs) directly to the propagation receiver.</p>
<p>When an apply process uses combined capture and apply, the following columns in the <code>V$STREAMS_APPLY_READER</code> data dictionary view are populated:</p>
<ul>
<li>
<p><code>PROXY_SID</code> shows the session ID of the propagation receiver</p>
</li>
<li>
<p><code>PROXY_SERIAL</code> shows the serial number of the propagation receiver</p>
</li>
<li>
<p><code>PROXY_SPID</code> shows the process identification number of the propagation receiver</p>
</li>
<li>
<p><code>CAPTURE_BYTES_RECEIVED</code> shows the number of bytes received by the apply process from the capture process since the apply process last started</p>
</li>
</ul>
<p>When an apply process does not use combined capture and apply, the <code>PROXY_SID</code> and <code>PROXY_SERIAL</code> columns are 0 (zero), and the <code>PROXY_SPID</code> and <code>CAPTURE_BYTES_RECEIVED</code> columns are not populated.</p>
<p>To determine whether an apply process uses combined capture and apply, run the following query:</p>
<pre>
COLUMN APPLY_NAME HEADING 'Apply Process Name' FORMAT A20
COLUMN PROXY_SID HEADING 'Propagation|Receiver|Session ID' FORMAT 99999999
COLUMN PROXY_SERIAL HEADING 'Propagation|ReceiverSerial|Number' FORMAT 99999999
COLUMN PROXY_SPID HEADING 'Propagation|Receiver|Process ID' FORMAT 99999999999
COLUMN CAPTURE_BYTES_RECEIVED HEADING 'Number of|Bytes Received' FORMAT 9999999999

SELECT APPLY_NAME,
       PROXY_SID,
       PROXY_SERIAL,
       PROXY_SPID,
       CAPTURE_BYTES_RECEIVED
   FROM V$STREAMS_APPLY_READER;
</pre>
<p>Your output looks similar to the following:</p>
<pre>
                     Propagation    Propagation Propagation
                        Receiver ReceiverSerial Receiver          Number of
Apply Process Name    Session ID         Number Process ID   Bytes Received
-------------------- ----------- -------------- ------------ --------------
APPLY_SPOKE1                 940              1 22636               4358614
APPLY_SPOKE2                 928              4 29154               4310581
</pre>
<p>This output indicates that the <code>apply_spoke1</code> apply process uses combined capture and apply. Since it last started, this apply process has received <code>4358614</code> bytes from the capture process. The <code>apply_spoke2</code> apply process also uses combined capture and apply. Since it last started, this apply process has received <code>4310581</code> bytes from the capture process.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="strms_adcca.htm#BGBJBDHJ">Chapter 12, "Combined Capture and Apply Optimization"</a></div>
</div>
<!-- class="sect1" -->
<a id="CACBGECI"></a>
<div id="STRMS969" class="sect1">
<h2 class="sect1">Displaying the Substitute Key Columns Specified at a Destination Database<a id="sthref1237"></a></h2>
<p>You can designate a substitute key at a destination database, which is a column or set of columns that Oracle can use to identify rows in the table during apply. You can use substitute key columns to specify key columns for a table that has no primary key, or they can be used instead of a table's primary key when the table is processed by any apply process at a destination database.</p>
<p>To display all of the substitute key columns specified at a destination database, run the following query:</p>
<pre>
COLUMN OBJECT_OWNER HEADING 'Table Owner' FORMAT A20
COLUMN OBJECT_NAME HEADING 'Table Name' FORMAT A20
COLUMN COLUMN_NAME HEADING 'Substitute Key Name' FORMAT A20
COLUMN APPLY_DATABASE_LINK HEADING 'Database Link|for Remote|Apply' FORMAT A15

SELECT OBJECT_OWNER, OBJECT_NAME, COLUMN_NAME, APPLY_DATABASE_LINK 
  FROM DBA_APPLY_KEY_COLUMNS
  ORDER BY APPLY_DATABASE_LINK, OBJECT_OWNER, OBJECT_NAME;
</pre>
<p>Your output looks similar to the following:</p>
<pre>
                                                               Database Link
                                                               for Remote
Table Owner          Table Name           Substitute Key Name  Apply
-------------------- -------------------- -------------------- ---------------
HR                   DEPARTMENTS          DEPARTMENT_NAME
HR                   DEPARTMENTS          LOCATION_ID
HR                   EMPLOYEES            FIRST_NAME
HR                   EMPLOYEES            LAST_NAME
HR                   EMPLOYEES            HIRE_DATE
</pre>
<div class="infobox-note">
<p class="notep1">Note:</p>
This query shows the database link in the last column if the substitute key columns are for a remote non-Oracle database. The last column is <code>NULL</code> if a substitute key column is specified for the local destination database.</div>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="strms_adapply.htm#i1006973">"Substitute Key Columns"</a></p>
</li>
<li>
<p><a href="strms_mapply.htm#BGBGJICI">"Managing the Substitute Key Columns for a Table"</a></p>
</li>
<li>
<p><a href="strms_mapply.htm#i1010782">"Managing Apply Errors"</a></p>
</li>
</ul>
</div>
</div>
<!-- class="sect1" -->
<a id="CACCGDCE"></a>
<div id="STRMS970" class="sect1">
<h2 class="sect1">Monitoring Virtual Dependency Definitions<a id="sthref1238"></a></h2>
<p>The following sections contain queries that display information about virtual dependency definitions in a database:</p>
<ul>
<li>
<p><a href="#CACGCECI">Displaying Value Dependencies</a></p>
</li>
<li>
<p><a href="#CACCJAGE">Displaying Object Dependencies</a></p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="strms_adapply.htm#BABDFDBI">"Apply Processes and Dependencies"</a> for more information about virtual dependency definitions</div>
<a id="CACGCECI"></a>
<div id="STRMS971" class="sect2">
<h3 class="sect2">Displaying Value Dependencies<a id="sthref1239"></a></h3>
<p>To display the value dependencies in a database, run the following query:</p>
<pre>
COLUMN DEPENDENCY_NAME HEADING 'Dependency Name' FORMAT A25
COLUMN OBJECT_OWNER HEADING 'Object Owner' FORMAT A15
COLUMN OBJECT_NAME HEADING 'Object Name' FORMAT A20
COLUMN COLUMN_NAME HEADING 'Column Name' FORMAT A15

SELECT DEPENDENCY_NAME, 
       OBJECT_OWNER, 
       OBJECT_NAME, 
       COLUMN_NAME 
  FROM DBA_APPLY_VALUE_DEPENDENCIES;
</pre>
<p>Your output should look similar to the following:</p>
<pre>
Dependency Name           Object Owner    Object Name          Column Name
------------------------- --------------- -------------------- ---------------
ORDER_ID_FOREIGN_KEY      OE              ORDERS               ORDER_ID
ORDER_ID_FOREIGN_KEY      OE              ORDER_ITEMS          ORDER_ID
KEY_53_FOREIGN_KEY        US_DESIGNS      ALL_DESIGNS_SUMMARY  KEY_53
KEY_53_FOREIGN_KEY        US_DESIGNS      DESIGN_53            KEY_53
</pre>
<p>This output shows the following value dependencies:</p>
<ul>
<li>
<p>The <code>order_id_foreign_key</code> value dependency describes a dependency between the <code>order_id</code> column in the <code>oe.orders</code> table and the <code>order_id</code> column in the <code>oe.order_items</code> table.</p>
</li>
<li>
<p>The <code>key_53_foreign_key</code> value dependency describes a dependency between the <code>key_53</code> column in the <code>us_designs.all_designs_summary</code> table and the <code>key_53</code> column in the <code>us_designs.design_53</code> table.</p>
</li>
</ul>
</div>
<!-- class="sect2" -->
<a id="CACCJAGE"></a>
<div id="STRMS972" class="sect2">
<h3 class="sect2">Displaying Object Dependencies<a id="sthref1240"></a></h3>
<p>To display the object dependencies in a database, run the following query:</p>
<pre>
COLUMN OBJECT_OWNER HEADING 'Object Owner' FORMAT A15
COLUMN OBJECT_NAME HEADING 'Object Name' FORMAT A15
COLUMN PARENT_OBJECT_OWNER HEADING 'Parent Object Owner' FORMAT A20
COLUMN PARENT_OBJECT_NAME HEADING 'Parent Object Name' FORMAT A20

SELECT OBJECT_OWNER, 
       OBJECT_NAME, 
       PARENT_OBJECT_OWNER, 
       PARENT_OBJECT_NAME 
  FROM DBA_APPLY_OBJECT_DEPENDENCIES;
</pre>
<p>Your output should look similar to the following:</p>
<pre>
Object Owner    Object Name     Parent Object Owner  Parent Object Name
--------------- --------------- -------------------- --------------------
ORD             CUSTOMERS       ORD                  SHIP_ORDERS
ORD             ORDERS          ORD                  SHIP_ORDERS
ORD             ORDER_ITEMS     ORD                  SHIP_ORDERS
</pre>
<p>This output shows an object dependency in which the <code>ord.ship_orders</code> table is a parent table to the following child tables:</p>
<ul>
<li>
<p><code>ord.customers</code></p>
</li>
<li>
<p><code>ord.orders</code></p>
</li>
<li>
<p><code>ord.order_items</code></p>
</li>
</ul>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="i1007797"></a>
<div id="STRMS133" class="sect1">
<h2 class="sect1">Checking for Apply Errors<a id="sthref1241"></a><a id="sthref1242"></a><a id="sthref1243"></a><a id="sthref1244"></a></h2>
<p>To check for apply errors, run the following query:</p>
<pre>
COLUMN APPLY_NAME HEADING 'Apply|Process|Name' FORMAT A11
COLUMN SOURCE_DATABASE HEADING 'Source|Database' FORMAT A10
COLUMN LOCAL_TRANSACTION_ID HEADING 'Local|Transaction|ID' FORMAT A11
COLUMN ERROR_NUMBER HEADING 'Error Number' FORMAT 99999999
COLUMN ERROR_MESSAGE HEADING 'Error Message' FORMAT A20
COLUMN MESSAGE_COUNT HEADING 'Messages in|Error|Transaction' FORMAT 99999999

SELECT APPLY_NAME, 
       SOURCE_DATABASE, 
       LOCAL_TRANSACTION_ID, 
       ERROR_NUMBER,
       ERROR_MESSAGE,
       MESSAGE_COUNT
  FROM DBA_APPLY_ERROR;
</pre>
<p>If there are any apply errors, then your output looks similar to the following:</p>
<pre>
Apply                  Local                                         Messages in
Process     Source     Transaction                                         Error
Name        Database   ID          Error Number Error Message        Transaction
----------- ---------- ----------- ------------ -------------------- -----------
APPLY$_DB_2 DB.EXAMPLE 13.16.334          26786 ORA-26786: A row wit           1
            .COM                                h key ("EMPLOYEE_ID"
                                                ) = (206) exists but
                                                 has conflicting col
                                                umn(s) "SALARY" in t
                                                able HR.EMPLOYEES
                                                ORA-01403: no data f
                                                ound
APPLY$_DB_2 DB.EXAMPLE 15.17.540          26786 ORA-26786: A row wit           1
            .COM                                h key ("EMPLOYEE_ID"
                                                ) = (206) exists but
                                                 has conflicting col
                                                umn(s) "SALARY" in t
                                                able HR.EMPLOYEES
                                                ORA-01403: no data f
                                                ound
</pre>
<p>If there are apply errors, then you can either try to reexecute the transactions that encountered the errors, or you can delete the transactions. If you want to reexecute a transaction that encountered an error, then first correct the condition that caused the transaction to raise an error.</p>
<p>If you want to delete a transaction that encountered an error, then you might need to resynchronize data manually if you are sharing data between multiple databases. Remember to set an appropriate session <a href="strms_glossary.htm#CHDBJJHH"><span class="xrefglossterm">tag</span></a>, if necessary, when you resynchronize data manually.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="strms_trapply.htm#BABHBJHA">Chapter 33, "Troubleshooting Apply"</a></p>
</li>
<li>
<p><a href="strms_apply.htm#i1008918">"The Error Queue"</a></p>
</li>
<li>
<p><a href="strms_mapply.htm#i1010782">"Managing Apply Errors"</a></p>
</li>
<li>
<p><a href="strms_adapply.htm#i1006927">"Considerations for Applying DML Changes to Tables"</a> for information about the possible causes of apply errors</p>
</li>
<li>
<p><a class="olink STREP120" href="../../server.112/e10705/rep_tags.htm#STREP120"><span class="italic">Oracle Streams Replication Administrator's Guide</span></a> for more information about setting tag values generated by the current session</p>
</li>
</ul>
</div>
</div>
<!-- class="sect1" -->
<a id="i1007852"></a>
<div id="STRMS143" class="sect1">
<h2 class="sect1">Displaying Detailed Information About Apply Errors<a id="sthref1245"></a><a id="sthref1246"></a><a id="sthref1247"></a><a id="sthref1248"></a></h2>
<p>This section contains SQL scripts that you can use to display detailed information about the error transactions in the error queue in a database. These scripts are designed to display information about LCRs, but you can extend them to display information about any non-LCR <a href="strms_glossary.htm#CHDFHHGJ"><span class="xrefglossterm">message</span></a>s used in your environment as well.</p>
<p>To use these scripts, complete the following steps:</p>
<ol>
<li>
<p><a href="#CHDCBIED">Grant Explicit SELECT Privilege on the DBA_APPLY_ERROR View</a></p>
</li>
<li>
<p><a href="#CHDDECFJ">Create a Procedure that Prints the Value in an ANYDATA Object</a></p>
</li>
<li>
<p><a href="#CHDCBCIC">Create a Procedure that Prints a Specified LCR</a></p>
</li>
<li>
<p><a href="#CHDEICAJ">Create a Procedure that Prints All the LCRs in the Error Queue</a></p>
</li>
<li>
<p><a href="#CHDFBEFC">Create a Procedure that Prints All the Error LCRs for a Transaction</a></p>
</li>
</ol>
<div class="infobox-note">
<p class="notep1">Note:</p>
These scripts display only the first 253 characters for <code>VARCHAR2</code> values in LCRs.</div>
<a id="i1007882"></a>
<dl>
<dd><a id="STRMS1691"></a><a id="CHDCBIED"></a></dd>
<dt class="seghead">Step 1&nbsp;&nbsp;&nbsp;Grant Explicit SELECT Privilege on the DBA_APPLY_ERROR View</dt>
<dd>
<p>The user who creates and runs the <code>print_errors</code> and <code>print_transaction</code> procedures described in the following sections must be granted explicit <code>SELECT</code> privilege on the <code>DBA_APPLY_ERROR</code> data dictionary view. This privilege cannot be granted through a role. Running the <code>GRANT_ADMIN_PRIVILEGE</code> procedure in the <code>DBMS_STREAMS_AUTH</code> package on a user grants this privilege to the user.</p>
<p>To grant this privilege to a user directly, complete the following steps:</p>
<ol>
<li>
<p>In SQL*Plus, connect as an administrative user who can grant privileges.</p>
<p>See <a class="olink ADMIN00102" href="../../server.112/e25494/dba.htm#ADMIN00102"><span class="italic">Oracle Database Administrator's Guide</span></a> for information about connecting to a database in SQL*Plus.</p>
</li>
<li id="i1007886">
<p>Grant <code>SELECT</code> privilege on the <code>DBA_APPLY_ERROR</code> data dictionary view to the appropriate user. For example, to grant this privilege to the <code>strmadmin</code> user, run the following statement:</p>
<pre>
GRANT SELECT ON DBA_APPLY_ERROR TO strmadmin;
</pre></li>
<li id="CFFCADFF">
<p>Grant <code>EXECUTE</code> privilege on the <code>DBMS_APPLY_ADM</code> package. For example, to grant this privilege to the <code>strmadmin</code> user, run the following statement:</p>
<pre>
GRANT EXECUTE ON DBMS_APPLY_ADM TO strmadmin;
</pre></li>
<li>
<p>Connect to the database as the user to whom you granted the privilege in Step&nbsp;<a href="#i1007886">2</a> and <a href="#CFFCADFF">3</a>.</p>
</li>
</ol>
</dd>
<dd><a id="STRMS1692"></a><a id="CHDDECFJ"></a></dd>
<dt class="seghead">Step 2&nbsp;&nbsp;&nbsp;Create a Procedure that Prints the Value in an ANYDATA Object</dt>
<dd>
<p>The following procedure prints the value in a specified <code>ANYDATA</code> object for some selected data types. Optionally, you can add more data types to this procedure.</p>
<pre>
CREATE OR REPLACE PROCEDURE print_any(data IN ANYDATA) IS
  tn  VARCHAR2(61);
  str VARCHAR2(4000);
  chr VARCHAR2(1000);
  num NUMBER;
  dat DATE;
  rw  RAW(4000);
  res NUMBER;
BEGIN
  IF data IS NULL THEN
    DBMS_OUTPUT.PUT_LINE('NULL value');
    RETURN;
  END IF;
  tn := data.GETTYPENAME();
  IF tn = 'SYS.VARCHAR2' THEN
    res := data.GETVARCHAR2(str);
    DBMS_OUTPUT.PUT_LINE(SUBSTR(str,0,253));
  ELSIF tn = 'SYS.CHAR' then
    res := data.GETCHAR(chr);
    DBMS_OUTPUT.PUT_LINE(SUBSTR(chr,0,253));
  ELSIF tn = 'SYS.VARCHAR' THEN
    res := data.GETVARCHAR(chr);
    DBMS_OUTPUT.PUT_LINE(chr);
  ELSIF tn = 'SYS.NUMBER' THEN
    res := data.GETNUMBER(num);
    DBMS_OUTPUT.PUT_LINE(num);
  ELSIF tn = 'SYS.DATE' THEN
    res := data.GETDATE(dat);
    DBMS_OUTPUT.PUT_LINE(dat);
  ELSIF tn= 'SYS.TIMESTAMP' THEN
    res := data.GETTIMESTAMP(dat);
    DBMS_OUTPUT.PUT_LINE(TO_CHAR(dat,'DD-MON-RR HH.MI.SSXFF AM'));
  ELSIF tn= 'SYS.TIMESTAMPTZ' THEN
    res := data.GETTIMESTAMPTZ(dat);
    DBMS_OUTPUT.PUT_LINE(TO_CHAR(dat,'DD-MON-RR HH.MI.SSXFF AM'));
  ELSIF tn= 'SYS.TIMESTAMPLTZ' THEN
    res := data.GETTIMESTAMPLTZ(dat);
    DBMS_OUTPUT.PUT_LINE(TO_CHAR(dat,'DD-MON-RR HH.MI.SSXFF AM'));
  ELSIF tn = 'SYS.RAW' THEN
    -- res := data.GETRAW(rw);
    -- DBMS_OUTPUT.PUT_LINE(SUBSTR(DBMS_LOB.SUBSTR(rw),0,253));
    DBMS_OUTPUT.PUT_LINE('BLOB Value');
  ELSIF tn = 'SYS.BLOB' THEN
    DBMS_OUTPUT.PUT_LINE('BLOB Found');
  ELSE
    DBMS_OUTPUT.PUT_LINE('typename is ' || tn);
  END IF;
END print_any;
/
</pre></dd>
<dd><a id="STRMS1693"></a><a id="CHDCBCIC"></a></dd>
<dt class="seghead">Step 3&nbsp;&nbsp;&nbsp;Create a Procedure that Prints a Specified LCR<a id="sthref1249"></a><a id="sthref1250"></a><a id="sthref1251"></a><a id="sthref1252"></a><a id="sthref1253"></a><a id="sthref1254"></a><a id="sthref1255"></a><a id="sthref1256"></a></dt>
<dd>
<p>The following procedure prints a specified LCR. It calls the <code>print_any</code> procedure created in <a href="#CHDDECFJ">"Create a Procedure that Prints the Value in an ANYDATA Object"</a>.</p>
<pre>
CREATE OR REPLACE PROCEDURE print_lcr(lcr IN ANYDATA) IS
  typenm    VARCHAR2(61);
  ddllcr    SYS.LCR$_DDL_RECORD;
  proclcr   SYS.LCR$_PROCEDURE_RECORD;
  rowlcr    SYS.LCR$_ROW_RECORD;
  res       NUMBER;
  newlist   SYS.LCR$_ROW_LIST;
  oldlist   SYS.LCR$_ROW_LIST;
  ddl_text  CLOB;
  ext_attr  ANYDATA;
BEGIN
  typenm := lcr.GETTYPENAME();
  DBMS_OUTPUT.PUT_LINE('type name: ' || typenm);
  IF (typenm = 'SYS.LCR$_DDL_RECORD') THEN
    res := lcr.GETOBJECT(ddllcr);
    DBMS_OUTPUT.PUT_LINE('source database: ' || 
                         ddllcr.GET_SOURCE_DATABASE_NAME);
    DBMS_OUTPUT.PUT_LINE('owner: ' || ddllcr.GET_OBJECT_OWNER);
    DBMS_OUTPUT.PUT_LINE('object: ' || ddllcr.GET_OBJECT_NAME);
    DBMS_OUTPUT.PUT_LINE('is tag null: ' || ddllcr.IS_NULL_TAG);
    DBMS_LOB.CREATETEMPORARY(ddl_text, TRUE);
    ddllcr.GET_DDL_TEXT(ddl_text);
    DBMS_OUTPUT.PUT_LINE('ddl: ' || ddl_text);    
    -- Print extra attributes in DDL LCR
    ext_attr := ddllcr.GET_EXTRA_ATTRIBUTE('serial#');
      IF (ext_attr IS NOT NULL) THEN
        DBMS_OUTPUT.PUT_LINE('serial#: ' || ext_attr.ACCESSNUMBER());
      END IF;
    ext_attr := ddllcr.GET_EXTRA_ATTRIBUTE('session#');
      IF (ext_attr IS NOT NULL) THEN
        DBMS_OUTPUT.PUT_LINE('session#: ' || ext_attr.ACCESSNUMBER());
      END IF; 
    ext_attr := ddllcr.GET_EXTRA_ATTRIBUTE('thread#');
      IF (ext_attr IS NOT NULL) THEN
        DBMS_OUTPUT.PUT_LINE('thread#: ' || ext_attr.ACCESSNUMBER());
      END IF;   
    ext_attr := ddllcr.GET_EXTRA_ATTRIBUTE('tx_name');
      IF (ext_attr IS NOT NULL) THEN
        DBMS_OUTPUT.PUT_LINE('transaction name: ' || ext_attr.ACCESSVARCHAR2());
      END IF;
    ext_attr := ddllcr.GET_EXTRA_ATTRIBUTE('username');
      IF (ext_attr IS NOT NULL) THEN
        DBMS_OUTPUT.PUT_LINE('username: ' || ext_attr.ACCESSVARCHAR2());
      END IF;      
    DBMS_LOB.FREETEMPORARY(ddl_text);
  ELSIF (typenm = 'SYS.LCR$_ROW_RECORD') THEN
    res := lcr.GETOBJECT(rowlcr);
    DBMS_OUTPUT.PUT_LINE('source database: ' || 
                         rowlcr.GET_SOURCE_DATABASE_NAME);
    DBMS_OUTPUT.PUT_LINE('owner: ' || rowlcr.GET_OBJECT_OWNER);
    DBMS_OUTPUT.PUT_LINE('object: ' || rowlcr.GET_OBJECT_NAME);
    DBMS_OUTPUT.PUT_LINE('is tag null: ' || rowlcr.IS_NULL_TAG); 
    DBMS_OUTPUT.PUT_LINE('command_type: ' || rowlcr.GET_COMMAND_TYPE); 
    oldlist := rowlcr.GET_VALUES('old');
    FOR i IN 1..oldlist.COUNT LOOP
      IF oldlist(i) IS NOT NULL THEN
        DBMS_OUTPUT.PUT_LINE('old(' || i || '): ' || oldlist(i).column_name);
        print_any(oldlist(i).data);
      END IF;
    END LOOP;
    newlist := rowlcr.GET_VALUES('new', 'n');
    FOR i in 1..newlist.count LOOP
      IF newlist(i) IS NOT NULL THEN
        DBMS_OUTPUT.PUT_LINE('new(' || i || '): ' || newlist(i).column_name);
        print_any(newlist(i).data);
      END IF;
    END LOOP;
    -- Print extra attributes in row LCR
    ext_attr := rowlcr.GET_EXTRA_ATTRIBUTE('row_id');
      IF (ext_attr IS NOT NULL) THEN
        DBMS_OUTPUT.PUT_LINE('row_id: ' || ext_attr.ACCESSUROWID());
      END IF;
    ext_attr := rowlcr.GET_EXTRA_ATTRIBUTE('serial#');
      IF (ext_attr IS NOT NULL) THEN
        DBMS_OUTPUT.PUT_LINE('serial#: ' || ext_attr.ACCESSNUMBER());
      END IF;
    ext_attr := rowlcr.GET_EXTRA_ATTRIBUTE('session#');
      IF (ext_attr IS NOT NULL) THEN
        DBMS_OUTPUT.PUT_LINE('session#: ' || ext_attr.ACCESSNUMBER());
      END IF; 
    ext_attr := rowlcr.GET_EXTRA_ATTRIBUTE('thread#');
      IF (ext_attr IS NOT NULL) THEN
        DBMS_OUTPUT.PUT_LINE('thread#: ' || ext_attr.ACCESSNUMBER());
      END IF;   
    ext_attr := rowlcr.GET_EXTRA_ATTRIBUTE('tx_name');
      IF (ext_attr IS NOT NULL) THEN
        DBMS_OUTPUT.PUT_LINE('transaction name: ' || ext_attr.ACCESSVARCHAR2());
      END IF;
    ext_attr := rowlcr.GET_EXTRA_ATTRIBUTE('username');
      IF (ext_attr IS NOT NULL) THEN
        DBMS_OUTPUT.PUT_LINE('username: ' || ext_attr.ACCESSVARCHAR2());
      END IF;          
  ELSE
    DBMS_OUTPUT.PUT_LINE('Non-LCR Message with type ' || typenm);
  END IF;
END print_lcr;
/
</pre></dd>
<dd><a id="STRMS1694"></a><a id="CHDEICAJ"></a></dd>
<dt class="seghead">Step 4&nbsp;&nbsp;&nbsp;Create a Procedure that Prints All the LCRs in the Error Queue<a id="sthref1257"></a><a id="sthref1258"></a></dt>
<dd>
<p>The following procedure prints all of the LCRs in all of the error queues. It calls the <code>print_lcr</code> procedure created in <a href="#CHDCBCIC">"Create a Procedure that Prints a Specified LCR"</a>.</p>
<pre>
CREATE OR REPLACE PROCEDURE print_errors IS
  CURSOR c IS
    SELECT LOCAL_TRANSACTION_ID,
           SOURCE_DATABASE,
           MESSAGE_NUMBER,
           MESSAGE_COUNT,
           ERROR_NUMBER,
           ERROR_MESSAGE
      FROM DBA_APPLY_ERROR
      ORDER BY SOURCE_DATABASE, SOURCE_COMMIT_SCN;
  i      NUMBER;
  txnid  VARCHAR2(30);
  source VARCHAR2(128);
  msgno  NUMBER;
  msgcnt NUMBER;
  errnum NUMBER := 0;
  errno  NUMBER;
  errmsg VARCHAR2(2000);
  lcr    ANYDATA;
  r      NUMBER;
BEGIN
  FOR r IN c LOOP
    errnum := errnum + 1;
    msgcnt := r.MESSAGE_COUNT;
    txnid  := r.LOCAL_TRANSACTION_ID;
    source := r.SOURCE_DATABASE;
    msgno  := r.MESSAGE_NUMBER;
    errno  := r.ERROR_NUMBER;
    errmsg := r.ERROR_MESSAGE;
DBMS_OUTPUT.PUT_LINE('*************************************************');
    DBMS_OUTPUT.PUT_LINE('----- ERROR #' || errnum);
    DBMS_OUTPUT.PUT_LINE('----- Local Transaction ID: ' || txnid);
    DBMS_OUTPUT.PUT_LINE('----- Source Database: ' || source);
    DBMS_OUTPUT.PUT_LINE('----Error in Message: '|| msgno);
    DBMS_OUTPUT.PUT_LINE('----Error Number: '||errno);
    DBMS_OUTPUT.PUT_LINE('----Message Text: '||errmsg);
    FOR i IN 1..msgcnt LOOP
      DBMS_OUTPUT.PUT_LINE('--message: ' || i);
        lcr := DBMS_APPLY_ADM.GET_ERROR_MESSAGE(i, txnid);
        print_lcr(lcr);
    END LOOP;
  END LOOP;
END print_errors;
/
</pre>
<p>To run this procedure after you create it, enter the following:</p>
<pre>
SET SERVEROUTPUT ON SIZE 1000000

EXEC print_errors
</pre></dd>
<dd><a id="STRMS1695"></a><a id="CHDFBEFC"></a></dd>
<dt class="seghead">Step 5&nbsp;&nbsp;&nbsp;Create a Procedure that Prints All the Error LCRs for a Transaction<a id="sthref1259"></a><a id="sthref1260"></a></dt>
<dd>
<p>The following procedure prints all the LCRs in the error queue for a particular transaction. It calls the <code>print_lcr</code> procedure created in <a href="#CHDCBCIC">"Create a Procedure that Prints a Specified LCR"</a>.</p>
<pre>
CREATE OR REPLACE PROCEDURE print_transaction(ltxnid IN VARCHAR2) IS
  i      NUMBER;
  txnid  VARCHAR2(30);
  source VARCHAR2(128);
  msgno  NUMBER;
  msgcnt NUMBER;
  errno  NUMBER;
  errmsg VARCHAR2(2000);
  lcr    ANYDATA;
BEGIN
  SELECT LOCAL_TRANSACTION_ID,
         SOURCE_DATABASE,
         MESSAGE_NUMBER,
         MESSAGE_COUNT,
         ERROR_NUMBER,
         ERROR_MESSAGE
      INTO txnid, source, msgno, msgcnt, errno, errmsg
      FROM DBA_APPLY_ERROR
      WHERE LOCAL_TRANSACTION_ID =  ltxnid;
  DBMS_OUTPUT.PUT_LINE('----- Local Transaction ID: ' || txnid);
  DBMS_OUTPUT.PUT_LINE('----- Source Database: ' || source);
  DBMS_OUTPUT.PUT_LINE('----Error in Message: '|| msgno);
  DBMS_OUTPUT.PUT_LINE('----Error Number: '||errno);
  DBMS_OUTPUT.PUT_LINE('----Message Text: '||errmsg);
  FOR i IN 1..msgcnt LOOP
  DBMS_OUTPUT.PUT_LINE('--message: ' || i);
    lcr := DBMS_APPLY_ADM.GET_ERROR_MESSAGE(i, txnid); -- gets the LCR
    print_lcr(lcr);
  END LOOP;
END print_transaction;
/
</pre>
<p>To run this procedure after you create it, pass to it the local transaction identifier of an error transaction. For example, if the local transaction identifier is <code>1.17.2485</code>, then enter the following:</p>
<pre>
SET SERVEROUTPUT ON SIZE 1000000

EXEC print_transaction('1.17.2485')
</pre></dd>
</dl>
</div>
<!-- class="sect1" --></div>
<!-- class="chapter" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment1624">
<tr>
<td class="cellalignment1631">
<table class="cellalignment1629">
<tr>
<td class="cellalignment1628"><a href="strms_qpmon.htm"><img width="24" height="24" src="../../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment1628"><a href="strms_rumon.htm"><img width="24" height="24" src="../../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;2002, 2013,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment1633">
<table class="cellalignment1627">
<tr>
<td class="cellalignment1628"><a href="../../index.htm"><img width="24" height="24" src="../../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment1628"><a href="../../nav/portal_booklist.htm"><img width="24" height="24" src="../../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment1628"><a href="toc.htm"><img width="24" height="24" src="../../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment1628"><a href="index.htm"><img width="24" height="24" src="../../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment1628"><a href="../../nav/mindx.htm"><img width="24" height="24" src="../../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment1628"><a href="../../dcommon/html/feedback.htm"><img width="24" height="24" src="../../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>
</body>
</html>
