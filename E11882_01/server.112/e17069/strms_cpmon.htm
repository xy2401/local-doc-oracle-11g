<!DOCTYPE html>
<html lang="en">
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1">
<meta charset="utf-8">
<title>Monitoring Oracle Streams Implicit Capture</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Version 5.1.2 Build 732" />
<meta name="dcterms.created" content="2013-06-04T12:39:39Z" />
<meta name="robots" content="all" />
<meta name="dcterms.title" content="Streams Concepts and Administration" />
<meta name="dcterms.identifier" content="E17069-08" />
<meta name="dcterms.isVersionOf" content="STRMS" />
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;2002, 2013,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved." />
<link rel="Start" href="../../index.htm" title="Home" type="text/html" />
<link rel="Copyright" href="../../dcommon/html/cpyr.htm" title="Copyright" type="text/html" />

<script type="application/javascript"  src="../../dcommon/js/headfoot.js"></script>
<script type="application/javascript"  src="../../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html" />
<link rel="Index" href="index.htm" title="Index" type="text/html" />
<link rel="Glossary" href="strms_glossary.htm" title="Glossary" type="text/html" />
<link rel="Prev" href="strms_topology.htm" title="Previous" type="text/html" />
<link rel="Next" href="strms_qpmon.htm" title="Next" type="text/html" />
<link rel="alternate" href="../e17069.pdf" title="PDF version" type="application/pdf" />
<link rel="schema.dcterms" href="http://purl.org/dc/terms/" />
<link rel="stylesheet" href="../../dcommon/css/fusiondoc.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/header.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/footer.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/fonts.css">
<link rel="stylesheet" href="../../dcommon/css/foundation.css">
<link rel="stylesheet" href="../../dcommon/css/codemirror.css">
<link rel="stylesheet" type="text/css" title="Default" href="../../nav/css/html5.css">
<link rel="stylesheet" href="../../dcommon/css/respond-480-tablet.css">
<link rel="stylesheet" href="../../dcommon/css/respond-768-laptop.css">
<link rel="stylesheet" href="../../dcommon/css/respond-1140-deskop.css">
<script type="application/javascript" src="../../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">34/57</span> <!-- End Header -->
<div id="STRMS877" class="chapter"><a id="CFFGDGCI"></a><a id="CFFEEFFA"></a>
<h1 class="chapter"><span class="secnum">24</span> Monitoring Oracle Streams Implicit Capture</h1>
<p>Both <a href="strms_glossary.htm#CHDBHECD"><span class="xrefglossterm">capture process</span></a>es and <a href="strms_glossary.htm#CBACHEDJ"><span class="xrefglossterm">synchronous capture</span></a>s perform <a href="strms_glossary.htm#CHDECBHI"><span class="xrefglossterm">implicit capture</span></a>.</p>
<p>The following topics describe monitoring Oracle Streams implicit capture:</p>
<ul>
<li>
<p><a href="#CFFBEDGE">Monitoring a Capture Process</a></p>
</li>
<li>
<p><a href="#CFFGCIJJ">Monitoring a Synchronous Capture</a></p>
</li>
<li>
<p><a href="#i1013673">Viewing the Extra Attributes Captured by Implicit Capture</a></p>
</li>
</ul>
<div class="infobox-note">
<p class="notep1"><span class="bold">Note</span>:</p>
The Oracle Streams tool in Oracle Enterprise Manager is also an excellent way to monitor an Oracle Streams environment. See <a class="olink TDPII148" href="../../server.112/e17516/tdpii_adcont.htm#TDPII148"><span class="italic">Oracle Database 2 Day + Data Replication and Integration Guide</span></a> and the online Help for the Oracle Streams tool for more information.</div>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="strms_capture.htm#i1006083">Chapter 2, "Oracle Streams Information Capture"</a></p>
</li>
<li>
<p><a href="strms_mcap.htm#g1032206">Chapter 15, "Managing Oracle Streams Implicit Capture"</a></p>
</li>
<li>
<p><a href="strms_trcapture.htm#CACCGFEH">Chapter 31, "Troubleshooting Implicit Capture"</a></p>
</li>
<li>
<p><a class="olink REFRN" href="../e40402/toc.htm"><span class="italic">Oracle Database Reference</span></a> for information about the data dictionary views described in this chapter</p>
</li>
</ul>
</div>
<a id="CFFBEDGE"></a>
<div id="STRMS878" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Monitoring a Capture Process</h2>
<p><a id="sthref1044"></a><a id="sthref1045"></a>This section provides sample queries that you can use to monitor Oracle Streams <a href="strms_glossary.htm#CHDBHECD"><span class="xrefglossterm">capture process</span></a>es.</p>
<p>This section contains these topics:</p>
<ul>
<li>
<p><a href="#i1006497">Displaying the Queue, Rule Sets, and Status of Each Capture Process</a></p>
</li>
<li>
<p><a href="#CHDBEFGF">Displaying Session Information About Each Capture Process</a></p>
</li>
<li>
<p><a href="#i1006519">Displaying Change Capture Information About Each Capture Process</a></p>
</li>
<li>
<p><a href="#CHDEABAH">Displaying State Change and Message Creation Time for Each Capture Process</a></p>
</li>
<li>
<p><a href="#CHDFIJDC">Displaying Elapsed Time Performing Capture Operations for Each Capture Process</a></p>
</li>
<li>
<p><a href="#i1011840">Displaying Information About Each Downstream Capture Process</a></p>
</li>
<li>
<p><a href="#i1012129">Displaying the Registered Redo Log Files for Each Capture Process</a></p>
</li>
<li>
<p><a href="#CHDBBJCF">Displaying the Redo Log Files that Are Required by Each Capture Process</a></p>
</li>
<li>
<p><a href="#i1021143">Displaying SCN Values for Each Redo Log File Used by Each Capture Process</a></p>
</li>
<li>
<p><a href="#i1021152">Displaying the Last Archived Redo Entry Available to Each Capture Process</a></p>
</li>
<li>
<p><a href="#i1006567">Listing the Parameter Settings for Each Capture Process</a></p>
</li>
<li>
<p><a href="#i1006617">Determining the Applied SCN for All Capture Processes in a Database</a></p>
</li>
<li>
<p><a href="#i1006631">Determining Redo Log Scanning Latency for Each Capture Process</a></p>
</li>
<li>
<p><a href="#i1006661">Determining Message Enqueuing Latency for Each Capture Process</a></p>
</li>
<li>
<p><a href="#i1020990">Displaying Information About Rule Evaluations for Each Capture Process</a></p>
</li>
<li>
<p><a href="#CFFJBCFH">Determining Which Capture Processes Use Combined Capture and Apply</a></p>
</li>
<li>
<p><a href="#CACIGHCH">Displaying Information About Split and Merge Operations</a></p>
</li>
<li>
<p><a href="#CACCIFAE">Monitoring Supplemental Logging</a></p>
</li>
</ul>
<a id="i1006497"></a>
<div id="STRMS879" class="sect2">
<h3 class="sect2">Displaying the Queue, Rule Sets, and Status of Each Capture Process<a id="sthref1046"></a></h3>
<p>You can display the following information about each <a href="strms_glossary.htm#CHDBHECD"><span class="xrefglossterm">capture process</span></a> in a database by running the query in this section:</p>
<ul>
<li>
<p>The capture process name</p>
</li>
<li>
<p>The name of the <a href="strms_glossary.htm#CHDIDCDI"><span class="xrefglossterm">queue</span></a> used by the capture process</p>
</li>
<li>
<p>The name of the <a href="strms_glossary.htm#CHDEEDIJ"><span class="xrefglossterm">positive rule set</span></a> used by the capture process</p>
</li>
<li>
<p>The name of the <a href="strms_glossary.htm#CHDBHJHI"><span class="xrefglossterm">negative rule set</span></a> used by the capture process</p>
</li>
<li>
<p>The status of the capture process, which can be <code>ENABLED</code>, <code>DISABLED</code>, or <code>ABORTED</code></p>
</li>
</ul>
<p>To display this general information about each capture process in a database, run the following query:</p>
<pre>
COLUMN CAPTURE_NAME HEADING 'Capture|Process|Name' FORMAT A15
COLUMN QUEUE_NAME HEADING 'Capture|Process|Queue' FORMAT A15
COLUMN RULE_SET_NAME HEADING 'Positive|Rule Set' FORMAT A15
COLUMN NEGATIVE_RULE_SET_NAME HEADING 'Negative|Rule Set' FORMAT A15
COLUMN STATUS HEADING 'Capture|Process|Status' FORMAT A15

SELECT CAPTURE_NAME, QUEUE_NAME, RULE_SET_NAME, NEGATIVE_RULE_SET_NAME, STATUS 
   FROM DBA_CAPTURE;
</pre>
<p>Your output looks similar to the following:</p>
<pre>
Capture         Capture                                         Capture
Process         Process         Positive        Negative        Process
Name            Queue           Rule Set        Rule Set        Status
--------------- --------------- --------------- --------------- ---------------
STRM01_CAPTURE  STREAMS_QUEUE   RULESET$_25     RULESET$_36     ENABLED
</pre>
<p>If the status of a capture process is <code>ABORTED</code>, then you can query the <code>ERROR_NUMBER</code> and <code>ERROR_MESSAGE</code> columns in the <code>DBA_CAPTURE</code> data dictionary view to determine the error.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="strms_trcapture.htm#CACGICCI">"Is the Capture Process Enabled?"</a> for an example query that shows the error number and error message if a capture process is aborted</div>
</div>
<!-- class="sect2" -->
<a id="CHDBEFGF"></a>
<div id="STRMS1687" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Displaying Session Information About Each Capture Process<a id="sthref1047"></a><a id="sthref1048"></a></h3>
<p>The query in this section displays the following session information about each session associated with a <a href="strms_glossary.htm#CHDBHECD"><span class="xrefglossterm">capture process</span></a> in a database:</p>
<ul>
<li>
<p>The capture process component</p>
</li>
<li>
<p>The session identifier</p>
</li>
<li>
<p>The serial number</p>
</li>
<li>
<p>The operating system process identification number</p>
</li>
<li>
<p>The process name of the capture process in the form <code>CP</code><code><span class="codeinlineitalic">nn</span></code>, where <code><span class="codeinlineitalic">nn</span></code> can include letters and numbers</p>
</li>
</ul>
<p>To display this information for each capture process in a database, run the following query:</p>
<pre>
COLUMN ACTION HEADING 'Capture Process Component' FORMAT A25
COLUMN SID HEADING 'Session ID' FORMAT 99999
COLUMN SERIAL# HEADING 'Session|Serial|Number' FORMAT 99999999
COLUMN PROCESS HEADING 'Operating System|Process Number' FORMAT A20
COLUMN PROCESS_NAME HEADING 'Process|Name' FORMAT A7
 
SELECT /*+PARAM('_module_action_old_length',0)*/ ACTION,
       SID,
       SERIAL#,
       PROCESS,
       SUBSTR(PROGRAM,INSTR(PROGRAM,'(')+1,4) PROCESS_NAME
  FROM V$SESSION
  WHERE MODULE ='Streams' AND
        ACTION LIKE '%Capture%';
</pre>
<p>Your output looks similar to the following:</p>
<pre>
                                       Session
                                        Serial Operating System     Process
Capture Process Component Session ID    Number Process Number       Name
------------------------- ---------- --------- -------------------- -------
EMDBA$CAP - Capture               74         9 10019                CP01
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="strms_capture.htm#i1006718">"Capture Process Subcomponents"</a> for information about capture process parallelism</div>
</div>
<!-- class="sect2" -->
<a id="i1006519"></a>
<div id="STRMS880" class="sect2">
<h3 class="sect2">Displaying Change Capture Information About Each Capture Process<a id="sthref1049"></a><a id="sthref1050"></a></h3>
<p>The query in this section displays the following information about each <a href="strms_glossary.htm#CHDBHECD"><span class="xrefglossterm">capture process</span></a> in a database:</p>
<ul>
<li>
<p>The name of the capture process.</p>
</li>
<li>
<p>The process number <code>CP</code><code><span class="codeinlineitalic">nn</span></code>, where <code><span class="codeinlineitalic">nn</span></code> can include letters and numbers</p>
</li>
<li>
<p>The session identifier.</p>
</li>
<li>
<p>The serial number of the session.</p>
</li>
<li>
<p>The current state of the capture process</p>
<p>See <a href="strms_capture.htm#i1014290">"Capture Process States"</a>.</p>
</li>
<li>
<p>The total number of redo entries passed by LogMiner to the capture process for detailed <a href="strms_glossary.htm#CHDIFFCF"><span class="xrefglossterm">rule</span></a> evaluation. A capture process converts a redo entry into a <a href="strms_glossary.htm#CHDFHHGJ"><span class="xrefglossterm">message</span></a> and performs detailed rule evaluation on the message when capture process prefiltering cannot discard the change.</p>
</li>
<li>
<p>The total number LCRs enqueued since the capture process was last started.</p>
</li>
</ul>
<p>To display this information for each capture process in a database, run the following query:</p>
<pre>
COLUMN CAPTURE_NAME HEADING 'Capture|Name' FORMAT A7
COLUMN PROCESS_NAME HEADING 'Capture|Process|Number' FORMAT A7
COLUMN SID HEADING 'Session|ID' FORMAT 9999
COLUMN SERIAL# HEADING 'Session|Serial|Number' FORMAT 9999
COLUMN STATE HEADING 'State' FORMAT A20
COLUMN TOTAL_MESSAGES_CAPTURED HEADING 'Redo|Entries|Evaluated|In Detail' FORMAT 9999999
COLUMN TOTAL_MESSAGES_ENQUEUED HEADING 'Total|LCRs|Enqueued' FORMAT 9999999999

SELECT c.CAPTURE_NAME,
       SUBSTR(s.PROGRAM,INSTR(s.PROGRAM,'(')+1,4) PROCESS_NAME, 
       c.SID,
       c.SERIAL#, 
       c.STATE,
       c.TOTAL_MESSAGES_CAPTURED,
       c.TOTAL_MESSAGES_ENQUEUED 
  FROM V$STREAMS_CAPTURE c, V$SESSION s
  WHERE c.SID = s.SID AND
        c.SERIAL# = s.SERIAL#;
</pre>
<p>Your output looks similar to the following:</p>
<pre>
                                                          Redo
        Capture         Session                        Entries       Total
Capture Process Session  Serial                      Evaluated        LCRs
Name    Number       ID  Number State                In Detail    Enqueued
------- ------- ------- ------- -------------------- --------- -----------
CAPTURE CP01        954       3 CAPTURING CHANGES      3719085     3389713
_HNS
</pre>
<p>The number of redo entries scanned can be higher than the number of DML and DDL redo entries captured by a capture process. Only DML and DDL redo entries that satisfy the <a href="strms_glossary.htm#CHDCHGGB"><span class="xrefglossterm">rule set</span></a>s of a capture process are captured and enqueued into the capture process <a href="strms_glossary.htm#CHDIDCDI"><span class="xrefglossterm">queue</span></a>. Also, the total LCRs enqueued includes LCRs that contain transaction control statements. These row LCRs contain directives such as <code>COMMIT</code> and <code>ROLLBACK</code>. Therefore, the total LCRs enqueued is a number higher than the number of row changes and DDL changes enqueued by a capture process.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="strms_capture.htm#i1006190">"Row LCRs"</a> for more information about transaction control statements</div>
</div>
<!-- class="sect2" -->
<a id="CHDEABAH"></a>
<div id="STRMS881" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Displaying State Change and Message Creation Time for Each Capture Process<a id="sthref1051"></a><a id="sthref1052"></a><a id="sthref1053"></a><a id="sthref1054"></a><a id="sthref1055"></a></h3>
<p>The query in this section displays the following information for each <a href="strms_glossary.htm#CHDBHECD"><span class="xrefglossterm">capture process</span></a> in a database:</p>
<ul>
<li>
<p>The name of the capture process</p>
</li>
<li>
<p>The current state of the capture process</p>
<p>See <a href="strms_capture.htm#i1014290">"Capture Process States"</a>.</p>
</li>
<li>
<p>The date and time when the capture process state last changed</p>
</li>
<li>
<p>The date and time when the capture process last created an LCR</p>
</li>
</ul>
<p>To display this information for each capture process in a database, run the following query:</p>
<pre>
COLUMN CAPTURE_NAME HEADING 'Capture|Name' FORMAT A15
COLUMN STATE HEADING 'State' FORMAT A27
COLUMN STATE_CHANGED HEADING 'State|Change Time'
COLUMN CREATE_MESSAGE HEADING 'Last Message|Create Time'

SELECT CAPTURE_NAME,
       STATE,
       TO_CHAR(STATE_CHANGED_TIME, 'HH24:MI:SS MM/DD/YY') STATE_CHANGED,
       TO_CHAR(CAPTURE_MESSAGE_CREATE_TIME, 'HH24:MI:SS MM/DD/YY') CREATE_MESSAGE
  FROM V$STREAMS_CAPTURE;
</pre>
<p>Your output looks similar to the following:</p>
<pre>
Capture                                     State             Last Message
Name            State                       Change Time       Create Time
--------------- --------------------------- ----------------- -----------------
CAPTURE_SIMP    CAPTURING CHANGES           13:24:42 11/08/04 13:24:41 11/08/04
</pre></div>
<!-- class="sect2" -->
<a id="CHDFIJDC"></a>
<div id="STRMS882" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Displaying Elapsed Time Performing Capture Operations for Each Capture Process<a id="sthref1056"></a><a id="sthref1057"></a><a id="sthref1058"></a></h3>
<p>The query in this section displays the following information for each <a href="strms_glossary.htm#CHDBHECD"><span class="xrefglossterm">capture process</span></a> in a database:</p>
<ul>
<li>
<p>The name of the capture process</p>
</li>
<li>
<p>The elapsed capture time, which is the amount of time (in seconds) spent scanning for changes in the redo log since the capture process was last started</p>
</li>
<li>
<p>The elapsed <a href="strms_glossary.htm#CHDIFFCF"><span class="xrefglossterm">rule</span></a> evaluation time, which is the amount of time (in seconds) spent evaluating rules since the capture process was last started</p>
</li>
<li>
<p>The elapsed enqueue time, which is the amount of time (in seconds) spent enqueuing <a href="strms_glossary.htm#CHDFHHGJ"><span class="xrefglossterm">message</span></a>s since the capture process was last started</p>
</li>
<li>
<p>The elapsed LCR creation time, which is the amount of time (in seconds) spent creating logical change records (LCRs) since the capture process was last started</p>
</li>
<li>
<p>The elapsed pause time, which is the amount of time (in seconds) spent paused for flow control since the capture process was last started</p>
</li>
</ul>
<div class="infobox-note">
<p class="notep1">Note:</p>
All times for this query are displayed in seconds. The <code>V$STREAMS_CAPTURE</code> view displays elapsed time in centiseconds by default. A centisecond is one-hundredth of a second. The query in this section divides each elapsed time by one hundred to display the elapsed time in seconds.</div>
<p>To display this information for each capture process in a database, run the following query:</p>
<pre>
COLUMN CAPTURE_NAME HEADING 'Capture|Name' FORMAT A15
COLUMN ELAPSED_CAPTURE_TIME HEADING 'Elapsed|Capture|Time' FORMAT 99999999.99
COLUMN ELAPSED_RULE_TIME HEADING 'Elapsed|Rule|Evaluation|Time' FORMAT 99999999.99
COLUMN ELAPSED_ENQUEUE_TIME HEADING 'Elapsed|Enqueue|Time' FORMAT 99999999.99
COLUMN ELAPSED_LCR_TIME HEADING 'Elapsed|LCR|Creation|Time' FORMAT 99999999.99
COLUMN ELAPSED_PAUSE_TIME HEADING 'Elapsed|Pause|Time' FORMAT 99999999.99

SELECT CAPTURE_NAME,
       (ELAPSED_CAPTURE_TIME/100) ELAPSED_CAPTURE_TIME,
       (ELAPSED_RULE_TIME/100) ELAPSED_RULE_TIME,
       (ELAPSED_ENQUEUE_TIME/100) ELAPSED_ENQUEUE_TIME,
       (ELAPSED_LCR_TIME/100) ELAPSED_LCR_TIME,
       (ELAPSED_PAUSE_TIME/100) ELAPSED_PAUSE_TIME
  FROM V$STREAMS_CAPTURE;
</pre>
<p>Your output looks similar to the following:</p>
<pre>
                                  Elapsed                   Elapsed
                     Elapsed         Rule      Elapsed          LCR      Elapsed
Capture              Capture   Evaluation      Enqueue     Creation        Pause
Name                    Time         Time         Time         Time         Time
--------------- ------------ ------------ ------------ ------------ ------------
STM1$CAP             1213.92          .04        33.84       185.25       600.60
</pre></div>
<!-- class="sect2" -->
<a id="i1011840"></a>
<div id="STRMS883" class="sect2">
<h3 class="sect2">Displaying Information About Each Downstream Capture Process<a id="sthref1059"></a><a id="sthref1060"></a><a id="sthref1061"></a><a id="sthref1062"></a></h3>
<p>A downstream capture is a <a href="strms_glossary.htm#CHDBHECD"><span class="xrefglossterm">capture process</span></a> that runs on a database other than the <a href="strms_glossary.htm#CHDHFBJG"><span class="xrefglossterm">source database</span></a>. You can display the following information about each <a href="strms_glossary.htm#CHDHEBHD"><span class="xrefglossterm">downstream capture process</span></a> in a database by running the query in this section:</p>
<ul>
<li>
<p>The capture process name</p>
</li>
<li>
<p>The <a href="strms_glossary.htm#CHDHFBJG"><span class="xrefglossterm">source database</span></a> of the changes captured by the capture process</p>
</li>
<li>
<p>The name of the <a href="strms_glossary.htm#CHDIDCDI"><span class="xrefglossterm">queue</span></a> used by the capture process</p>
</li>
<li>
<p>The status of the capture process, which can be <code>ENABLED</code>, <code>DISABLED</code>, or <code>ABORTED</code></p>
</li>
<li>
<p>Whether the downstream capture process uses a database link to the source database for administrative actions</p>
</li>
</ul>
<p>To display this information about each downstream capture process in a database, run the following query:</p>
<pre>
COLUMN CAPTURE_NAME HEADING 'Capture|Process|Name' FORMAT A15
COLUMN SOURCE_DATABASE HEADING 'Source|Database' FORMAT A15
COLUMN QUEUE_NAME HEADING 'Capture|Process|Queue' FORMAT A15
COLUMN STATUS HEADING 'Capture|Process|Status' FORMAT A15
COLUMN USE_DATABASE_LINK HEADING 'Uses|Database|Link?' FORMAT A8

SELECT CAPTURE_NAME, 
       SOURCE_DATABASE, 
       QUEUE_NAME, 
       STATUS, 
       USE_DATABASE_LINK
   FROM DBA_CAPTURE
   WHERE CAPTURE_TYPE = 'DOWNSTREAM';
</pre>
<p>Your output looks similar to the following:</p>
<pre>
Capture                              Capture         Capture         Uses
Process         Source               Process         Process         Database
Name            Database             Queue           Status          Link?
--------------- -------------------- --------------- --------------- --------
STRM03_CAPTURE  DBS1.EXAMPLE.COM     STRM03_QUEUE    ENABLED         YES
</pre>
<p>In this case, the source database for the capture process is <code>dbs1.example.com</code>, but the local database running the capture process is not <code>dbs1.example.com</code>. Also, the capture process returned by this query uses a database link to the source database to perform administrative actions. The database link name is the same as the global name of the source database, which is <code>dbs1.example.com</code> in this case.</p>
<p>If the status of a capture process is <code>ABORTED</code>, then you can query the <code>ERROR_NUMBER</code> and <code>ERROR_MESSAGE</code> columns in the <code>DBA_CAPTURE</code> data dictionary view to determine the error.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
<a id="sthref1063"></a>At the source database for an Oracle Streams downstream capture process, you can query the <code>V$ARCHIVE_DEST_STATUS</code> view to display information about the downstream database. The following columns in the view relate to the downstream database:
<ul>
<li>
<p>The <code>TYPE</code> column shows <code>DOWNSTREAM</code> if redo log information is being shipped to a downstream capture database.</p>
</li>
<li>
<p>The <code>DESTINATION</code> column shows the name of the downstream capture database.</p>
</li>
</ul>
</div>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="strms_capture.htm#i1013269">"Local Capture and Downstream Capture"</a></p>
</li>
<li>
<p><a class="olink STREP209" href="../../server.112/e10705/ccap.htm#STREP209"><span class="italic">Oracle Streams Replication Administrator's Guide</span></a> for information about creating a capture process</p>
</li>
<li>
<p><a href="strms_trcapture.htm#CACGICCI">"Is the Capture Process Enabled?"</a> for an example query that shows the error number and error message if a capture process is aborted</p>
</li>
</ul>
</div>
</div>
<!-- class="sect2" -->
<a id="i1012129"></a>
<div id="STRMS884" class="sect2">
<h3 class="sect2">Displaying the Registered Redo Log Files for Each Capture Process<a id="sthref1064"></a><a id="sthref1065"></a><a id="sthref1066"></a></h3>
<p>You can display information about the archived redo log files that are registered for each <a href="strms_glossary.htm#CHDBHECD"><span class="xrefglossterm">capture process</span></a> in a database by running the query in this section. This query displays information about these files for both <a href="strms_glossary.htm#CHDDGCGH"><span class="xrefglossterm">local capture process</span></a>es and <a href="strms_glossary.htm#CHDHEBHD"><span class="xrefglossterm">downstream capture process</span></a>es.</p>
<p>The query displays the following information for each registered archived redo log file:</p>
<ul>
<li>
<p>The name of a capture process that uses the file</p>
</li>
<li>
<p>The <a href="strms_glossary.htm#CHDHFBJG"><span class="xrefglossterm">source database</span></a> of the file</p>
</li>
<li>
<p>The sequence number of the file</p>
</li>
<li>
<p>The name and location of the file at the local site</p>
</li>
<li>
<p>Whether the file contains the beginning of a data dictionary build</p>
</li>
<li>
<p>Whether the file contains the end of a data dictionary build</p>
</li>
</ul>
<p>To display this information about each registered archive redo log file in a database, run the following query:</p>
<pre>
COLUMN CONSUMER_NAME HEADING 'Capture|Process|Name' FORMAT A15
COLUMN SOURCE_DATABASE HEADING 'Source|Database' FORMAT A10
COLUMN SEQUENCE# HEADING 'Sequence|Number' FORMAT 99999
COLUMN NAME HEADING 'Archived Redo Log|File Name' FORMAT A20
COLUMN DICTIONARY_BEGIN HEADING 'Dictionary|Build|Begin' FORMAT A10
COLUMN DICTIONARY_END HEADING 'Dictionary|Build|End' FORMAT A10

SELECT r.CONSUMER_NAME,
       r.SOURCE_DATABASE,
       r.SEQUENCE#, 
       r.NAME, 
       r.DICTIONARY_BEGIN, 
       r.DICTIONARY_END 
  FROM DBA_REGISTERED_ARCHIVED_LOG r, DBA_CAPTURE c
  WHERE r.CONSUMER_NAME = c.CAPTURE_NAME;  
</pre>
<p>Your output looks similar to the following:</p>
<pre>
Capture                                                  Dictionary Dictionary
<a id="i1021521"></a>Process         Source     Sequence Archived Redo Log    Build      Build
<a id="i1021523"></a>Name            Database     Number File Name            Begin      End
<a id="i1021525"></a>--------------- ---------- -------- -------------------- ---------- ----------
<a id="i1021527"></a>STRM02_CAPTURE  DBS2.EXAMP       15 /orc/dbs/log/arch2_1 NO         NO
<a id="i1021529"></a>                LE.COM              _15_478347508.arc
<a id="i1021531"></a>STRM02_CAPTURE  DBS2.EXAMP       16 /orc/dbs/log/arch2_1 NO         NO
<a id="i1021533"></a>                LE.COM              _16_478347508.arc 
<a id="i1021535"></a>STRM03_CAPTURE  DBS1.EXAMP       45 /remote_logs/arch1_1 YES        YES
<a id="i1021537"></a>                LE.COM              _45_478347335.arc
<a id="i1021539"></a>STRM03_CAPTURE  DBS1.EXAMP       46 /remote_logs/arch1_1 NO         NO
<a id="i1021541"></a>                LE.COM              _46_478347335.arc
<a id="i1021543"></a>STRM03_CAPTURE  DBS1.EXAMP       47 /remote_logs/arch1_1 NO         NO
<a id="i1021545"></a>                LE.COM              _47_478347335.arc
<a id="i1021547"></a>
</pre>
<p>Assume that this query was run at the <code>dbs2.example.com</code> database, and that <code>strm02_capture</code> is a <a href="strms_glossary.htm#CHDDGCGH"><span class="xrefglossterm">local capture process</span></a>, and <code>strm03_capture</code> is a <a href="strms_glossary.htm#CHDHEBHD"><span class="xrefglossterm">downstream capture process</span></a>. The <a href="strms_glossary.htm#CHDHFBJG"><span class="xrefglossterm">source database</span></a> for the <code>strm03_capture</code> downstream capture process is <code>dbs1.example.com</code>. This query shows that there are two registered archived redo log files for <code>strm02_capture</code> and three registered archived redo log files for <code>strm03_capture</code>. This query shows the name and location of each of these files in the local file system.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="strms_adcapture.htm#i1010542">"The LogMiner Data Dictionary for a Capture Process"</a> for more information about data dictionary builds</p>
</li>
<li>
<p><a href="strms_capture.htm#i1013269">"Local Capture and Downstream Capture"</a></p>
</li>
<li>
<p><a class="olink STREP209" href="../../server.112/e10705/ccap.htm#STREP209"><span class="italic">Oracle Streams Replication Administrator's Guide</span></a> for information about configuring a capture process</p>
</li>
<li>
<p><a href="strms_adcapture.htm#i1007010">"ARCHIVELOG Mode and a Capture Process"</a></p>
</li>
</ul>
</div>
</div>
<!-- class="sect2" -->
<a id="CHDBBJCF"></a>
<div id="STRMS885" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Displaying the Redo Log Files that Are Required by Each Capture Process<a id="sthref1067"></a><a id="sthref1068"></a><a id="sthref1069"></a></h3>
<p>A <a href="strms_glossary.htm#CHDBHECD"><span class="xrefglossterm">capture process</span></a> needs the redo log file that includes the <a href="strms_glossary.htm#CHDJHFCB"><span class="xrefglossterm">required checkpoint SCN</span></a>, and all subsequent redo log files. You can query the <code>REQUIRED_CHECKPOINT_SCN</code> column in the <code>DBA_CAPTURE</code> data dictionary view to determine the required checkpoint SCN for a capture process. Redo log files before the redo log file that contains the required checkpoint SCN are no longer needed by the capture process. These redo log files can be stored offline if they are no longer needed for any other purpose. If you reset the <a href="strms_glossary.htm#CHDIJJCD"><span class="xrefglossterm">start SCN</span></a> for a capture process to a lower value in the future, then these redo log files might be needed.</p>
<p>The query displays the following information for each required archived redo log file:</p>
<ul>
<li>
<p>The name of a capture process that uses the file</p>
</li>
<li>
<p>The <a href="strms_glossary.htm#CHDHFBJG"><span class="xrefglossterm">source database</span></a> of the file</p>
</li>
<li>
<p>The sequence number of the file</p>
</li>
<li>
<p>The name and location of the required redo log file at the local site</p>
</li>
</ul>
<p>To display this information about each required archive redo log file in a database, run the following query:</p>
<pre>
COLUMN CONSUMER_NAME HEADING 'Capture|Process|Name' FORMAT A15
COLUMN SOURCE_DATABASE HEADING 'Source|Database' FORMAT A10
COLUMN SEQUENCE# HEADING 'Sequence|Number' FORMAT 99999
COLUMN NAME HEADING 'Required|Archived Redo Log|File Name' FORMAT A40

SELECT r.CONSUMER_NAME,
       r.SOURCE_DATABASE,
       r.SEQUENCE#, 
       r.NAME 
  FROM DBA_REGISTERED_ARCHIVED_LOG r, DBA_CAPTURE c
  WHERE r.CONSUMER_NAME =  c.CAPTURE_NAME AND
        r.NEXT_SCN      &gt;= c.REQUIRED_CHECKPOINT_SCN;  
</pre>
<p>Your output looks similar to the following:</p>
<pre>
Capture                             Required
Process         Source     Sequence Archived Redo Log
Name            Database     Number File Name
--------------- ---------- -------- ----------------------------------------
STRM02_CAPTURE  DBS2.EXAMP       16 /orc/dbs/log/arch2_1_16_478347508.arc
                LE.COM
STRM03_CAPTURE  DBS1.EXAMP       47 /remote_logs/arch1_1_47_478347335.arc
                LE.COM
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="strms_adcapture.htm#BABFFBHF">"Required Checkpoint SCN"</a></div>
</div>
<!-- class="sect2" -->
<a id="i1021143"></a>
<div id="STRMS886" class="sect2">
<h3 class="sect2">Displaying SCN Values for Each Redo Log File Used by Each Capture Process<a id="sthref1070"></a><a id="sthref1071"></a><a id="sthref1072"></a><a id="sthref1073"></a></h3>
<p>You can display information about the SCN values for archived redo log files that are registered for each <a href="strms_glossary.htm#CHDBHECD"><span class="xrefglossterm">capture process</span></a> in a database by running the query in this section. This query displays information the SCN values for these files for both <a href="strms_glossary.htm#CHDDGCGH"><span class="xrefglossterm">local capture process</span></a>es and <a href="strms_glossary.htm#CHDHEBHD"><span class="xrefglossterm">downstream capture process</span></a>es. This query also identifies redo log files that are no longer needed by any capture process at the local database.</p>
<p>The query displays the following information for each registered archived redo log file:</p>
<ul>
<li>
<p>The capture process name of a capture process that uses the file</p>
</li>
<li>
<p>The name and location of the file at the local site</p>
</li>
<li>
<p>The lowest SCN value for the information contained in the redo log file</p>
</li>
<li>
<p>The lowest SCN value for the next redo log file in the sequence</p>
</li>
<li>
<p>Whether the redo log file is purgeable</p>
</li>
</ul>
<p>To display this information about each registered archive redo log file in a database, run the following query:</p>
<pre>
COLUMN CONSUMER_NAME HEADING 'Capture|Process|Name' FORMAT A15
COLUMN NAME HEADING 'Archived Redo Log|File Name' FORMAT A25
COLUMN FIRST_SCN HEADING 'First SCN' FORMAT 99999999999
COLUMN NEXT_SCN HEADING 'Next SCN' FORMAT 99999999999
COLUMN PURGEABLE HEADING 'Purgeable?' FORMAT A10
 
SELECT r.CONSUMER_NAME,
       r.NAME, 
       r.FIRST_SCN,
       r.NEXT_SCN,
       r.PURGEABLE 
  FROM DBA_REGISTERED_ARCHIVED_LOG r, DBA_CAPTURE c
  WHERE r.CONSUMER_NAME = c.CAPTURE_NAME;
</pre>
<p>Your output looks similar to the following:</p>
<pre>
Capture
Process         Archived Redo Log
Name            File Name                    First SCN     Next SCN Purgeable?
--------------- ------------------------- ------------ ------------ ----------
CAPTURE_SIMP    /private1/ARCHIVE_LOGS/1_       509686       549100 YES
                3_502628294.dbf
 
CAPTURE_SIMP    /private1/ARCHIVE_LOGS/1_       549100       587296 YES
                4_502628294.dbf
 
CAPTURE_SIMP    /private1/ARCHIVE_LOGS/1_       587296       623107 NO
                5_502628294.dbf
</pre>
<p>The redo log files with <code>YES</code> for <code>Purgeable?</code> for all capture processes will never be needed by any capture process at the local database. These redo log files can be removed without affecting any existing capture process at the local database. The redo log files with <code>NO</code> for <code>Purgeable?</code> for one or more capture processes must be retained.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="strms_adcapture.htm#i1007010">"ARCHIVELOG Mode and a Capture Process"</a></div>
</div>
<!-- class="sect2" -->
<a id="i1021152"></a>
<div id="STRMS887" class="sect2">
<h3 class="sect2">Displaying the Last Archived Redo Entry Available to Each Capture Process<a id="sthref1074"></a><a id="sthref1075"></a></h3>
<p>For a <a href="strms_glossary.htm#CHDDGCGH"><span class="xrefglossterm">local capture process</span></a>, the last archived redo entry available is the last entry from the online redo log flushed to an archived log file. For a <a href="strms_glossary.htm#CHDHEBHD"><span class="xrefglossterm">downstream capture process</span></a>, the last archived redo entry available is the redo entry with the most recent system change number (SCN) in the last archived log file added to the LogMiner session used by the capture process.</p>
<p>You can display the following information about the last redo entry that was made available to each capture process by running the query in this section:</p>
<ul>
<li>
<p>The name of the capture process</p>
</li>
<li>
<p>The identification number of the LogMiner session used by the capture process</p>
</li>
<li>
<p>The highest SCN available for the capture process</p>
<p>For local capture, this SCN is the last redo SCN flushed to the log files. For downstream capture, this SCN is the last SCN added to LogMiner through the archive logs.</p>
</li>
<li>
<p>The timestamp of the highest SCN available for the capture process</p>
<p>For local capture, this timestamp is the time the SCN was written to the log file. For downstream capture, this timestamp is the time of the most recent archive log (containing the most recent SCN) available to LogMiner.</p>
</li>
</ul>
<p>The information displayed by this query is valid only for an enabled capture process.</p>
<p>Run the following query to display this information for each capture process:</p>
<pre>
COLUMN CAPTURE_NAME HEADING 'Capture|Name' FORMAT A20
COLUMN LOGMINER_ID HEADING 'LogMiner ID' FORMAT 9999
COLUMN AVAILABLE_MESSAGE_NUMBER HEADING 'Highest|Available SCN' FORMAT 9999999999
COLUMN AVAILABLE_MESSAGE_CREATE_TIME HEADING 'Time of|Highest|Available SCN'

SELECT CAPTURE_NAME,
       LOGMINER_ID,
       AVAILABLE_MESSAGE_NUMBER,
       TO_CHAR(AVAILABLE_MESSAGE_CREATE_TIME, 'HH24:MI:SS MM/DD/YY') 
         AVAILABLE_MESSAGE_CREATE_TIME
  FROM V$STREAMS_CAPTURE;
</pre>
<p>Your output looks similar to the following:</p>
<pre>
                                               Time of
Capture                                Highest Highest
Name                 LogMiner ID Available SCN Available SCN
-------------------- ----------- ------------- -----------------
DB1$CAP                        1       1506751 09:46:11 06/29/09
</pre></div>
<!-- class="sect2" -->
<a id="i1006567"></a>
<div id="STRMS890" class="sect2">
<h3 class="sect2">Listing the Parameter Settings for Each Capture Process<a id="sthref1076"></a></h3>
<p>The following query displays the current setting for each <a href="strms_glossary.htm#CHDBHECD"><span class="xrefglossterm">capture process</span></a> parameter for each capture process in a database:</p>
<pre>
COLUMN CAPTURE_NAME HEADING 'Capture|Process|Name' FORMAT A25
COLUMN PARAMETER HEADING 'Parameter' FORMAT A30
COLUMN VALUE HEADING 'Value' FORMAT A10
COLUMN SET_BY_USER HEADING 'Set by|User?' FORMAT A10

SELECT CAPTURE_NAME,
       PARAMETER, 
       VALUE,
       SET_BY_USER  
  FROM DBA_CAPTURE_PARAMETERS;
</pre>
<p>Your output looks similar to the following:</p>
<pre>
Capture
Process                                                             Set by
Name                      Parameter                      Value      User?
------------------------- ------------------------------ ---------- ----------
DA$CAP                    CAPTURE_IDKEY_OBJECTS          N          NO
DA$CAP                    CAPTURE_SEQUENCE_NEXTVAL       N          NO
DA$CAP                    DISABLE_ON_LIMIT               N          NO
DA$CAP                    DOWNSTREAM_REAL_TIME_MINE      Y          NO
DA$CAP                    EXCLUDETRANS                              NO
DA$CAP                    EXCLUDEUSER                               NO
DA$CAP                    EXCLUDEUSERID                             NO
DA$CAP                    GETAPPLOPS                     Y          NO
DA$CAP                    GETREPLICATES                  N          NO
DA$CAP                    IGNORE_TRANSACTION                        NO
DA$CAP                    IGNORE_UNSUPPORTED_TABLE       *          NO
DA$CAP                    MAXIMUM_SCN                    INFINITE   NO
DA$CAP                    MAX_SGA_SIZE                   INFINITE   NO
DA$CAP                    MERGE_THRESHOLD                60         NO
DA$CAP                    MESSAGE_LIMIT                  INFINITE   NO
DA$CAP                    MESSAGE_TRACKING_FREQUENCY     2000000    NO
DA$CAP                    PARALLELISM                    1          NO
DA$CAP                    SKIP_AUTOFILTERED_TABLE_DDL    Y          NO
DA$CAP                    SPLIT_THRESHOLD                1800       NO
DA$CAP                    STARTUP_SECONDS                0          NO
DA$CAP                    TIME_LIMIT                     INFINITE   NO
DA$CAP                    TRACE_LEVEL                    0          NO
DA$CAP                    WRITE_ALERT_LOG                Y          NO
DA$CAP                    XOUT_CLIENT_EXISTS             N          NO
</pre>
<div class="infobox-note">
<p class="notep1">Note:</p>
If the <code>Set</code> <code>by</code> <code>User?</code> column is <code>NO</code> for a parameter, then the parameter is set to its default value. If the <code>Set</code> <code>by</code> <code>User?</code> column is <code>YES</code> for a parameter, then the parameter was set by a user and might or might not be set to its default value.</div>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="strms_capture.htm#i1006718">"Capture Process Subcomponents"</a></p>
</li>
<li>
<p><a href="strms_mcap.htm#i1006402">"Setting a Capture Process Parameter"</a></p>
</li>
</ul>
</div>
</div>
<!-- class="sect2" -->
<a id="i1006617"></a>
<div id="STRMS891" class="sect2">
<h3 class="sect2">Determining the Applied SCN for All Capture Processes in a Database<a id="sthref1077"></a><a id="sthref1078"></a><a id="sthref1079"></a><a id="sthref1080"></a><a id="sthref1081"></a><a id="sthref1082"></a></h3>
<p>The applied system change number (SCN) for a <a href="strms_glossary.htm#CHDBHECD"><span class="xrefglossterm">capture process</span></a> is the SCN of the most recent <a href="strms_glossary.htm#CHDFHHGJ"><span class="xrefglossterm">message</span></a> dequeued by the relevant <a href="strms_glossary.htm#CHDJBHJC"><span class="xrefglossterm">apply process</span></a>es. All changes below this <a href="strms_glossary.htm#CHDGDHFE"><span class="xrefglossterm">applied SCN</span></a> have been dequeued by all apply processes that apply changes captured by the capture process.</p>
<p>To display the applied SCN for all of the capture processes in a database, run the following query:</p>
<pre>
COLUMN CAPTURE_NAME HEADING 'Capture Process Name' FORMAT A30
COLUMN APPLIED_SCN HEADING 'Applied SCN' FORMAT 99999999999

SELECT CAPTURE_NAME, APPLIED_SCN FROM DBA_CAPTURE;
</pre>
<p>Your output looks similar to the following:</p>
<pre>
Capture Process Name           Applied SCN
------------------------------ -----------
CAPTURE_EMP                         177154
</pre></div>
<!-- class="sect2" -->
<a id="i1006631"></a>
<div id="STRMS892" class="sect2">
<h3 class="sect2">Determining Redo Log Scanning Latency for Each Capture Process<a id="sthref1083"></a><a id="sthref1084"></a><a id="sthref1085"></a><a id="sthref1086"></a></h3>
<p>You can find the following information about each <a href="strms_glossary.htm#CHDBHECD"><span class="xrefglossterm">capture process</span></a> by running the query in this section:</p>
<ul>
<li>
<p>The redo log scanning latency, which specifies the number of seconds between the creation time of the most recent redo log entry scanned by a capture process and the current time. This number might be relatively large immediately after you start a capture process.</p>
</li>
<li>
<p>The seconds since last recorded status, which is the number of seconds since a capture process last recorded its status.</p>
</li>
<li>
<p>The current capture process time, which is the latest time when the capture process recorded its status.</p>
</li>
<li>
<p>The <a href="strms_glossary.htm#CHDFHHGJ"><span class="xrefglossterm">message</span></a> creation time, which is the time when the data manipulation language (DML) or data definition language (DDL) change generated the redo data at the source database for the most recently <a href="strms_glossary.htm#CHDCHEJI"><span class="xrefglossterm">captured LCR</span></a>.</p>
</li>
</ul>
<p>The information displayed by this query is valid only for an enabled capture process.</p>
<p>Run the following query to determine the redo scanning latency for each capture process:</p>
<pre>
COLUMN CAPTURE_NAME HEADING 'Capture|Process|Name' FORMAT A10
COLUMN LATENCY_SECONDS HEADING 'Latency|in|Seconds' FORMAT 999999
COLUMN LAST_STATUS HEADING 'Seconds Since|Last Status' FORMAT 999999
COLUMN CAPTURE_TIME HEADING 'Current|Process|Time'
COLUMN CREATE_TIME HEADING 'Message|Creation Time' FORMAT 999999

SELECT CAPTURE_NAME,
       ((SYSDATE - CAPTURE_MESSAGE_CREATE_TIME)*86400) LATENCY_SECONDS,
       ((SYSDATE - CAPTURE_TIME)*86400) LAST_STATUS,
       TO_CHAR(CAPTURE_TIME, 'HH24:MI:SS MM/DD/YY') CAPTURE_TIME,       
       TO_CHAR(CAPTURE_MESSAGE_CREATE_TIME, 'HH24:MI:SS MM/DD/YY') CREATE_TIME
  FROM V$STREAMS_CAPTURE;
</pre>
<p>Your output looks similar to the following:</p>
<pre>
Capture    Latency               Current
Process         in Seconds Since Process           Message
Name       Seconds   Last Status Time              Creation Time
---------- ------- ------------- ----------------- -----------------
DA$CAP           1             1 12:33:39 07/14/10 12:33:39 07/14/10
</pre>
<p>The <code>"Latency</code> <code>in</code> <code>Seconds"</code> returned by this query is the difference between the current time (<code>SYSDATE</code>) and the <code>"Message</code> <code>Creation</code> <code>Time."</code> The <code>"Seconds</code> <code>Since</code> <code>Last</code> <code>Status"</code> returned by this query is the difference between the current time (<code>SYSDATE</code>) and the <code>"Current</code> <code>Process</code> <code>Time."</code></p>
</div>
<!-- class="sect2" -->
<a id="i1006661"></a>
<div id="STRMS893" class="sect2">
<h3 class="sect2">Determining Message Enqueuing Latency for Each Capture Process<a id="sthref1087"></a><a id="sthref1088"></a><a id="sthref1089"></a><a id="sthref1090"></a><a id="sthref1091"></a><a id="sthref1092"></a></h3>
<p>You can find the following information about each <a href="strms_glossary.htm#CHDBHECD"><span class="xrefglossterm">capture process</span></a> by running the query in this section:</p>
<ul>
<li>
<p>The <a href="strms_glossary.htm#CHDFHHGJ"><span class="xrefglossterm">message</span></a> enqueuing latency, which specifies the number of seconds between when an entry was recorded in the redo log at the source database and when the message was enqueued by the capture process</p>
</li>
<li>
<p>The message creation time, which is the time when the data manipulation language (DML) or data definition language (DDL) change generated the redo data at the source database for the most recently enqueued message</p>
</li>
<li>
<p>The enqueue time, which is when the capture process enqueued the message into its <a href="strms_glossary.htm#CHDIDCDI"><span class="xrefglossterm">queue</span></a></p>
</li>
<li>
<p>The message number of the enqueued message</p>
</li>
</ul>
<p>The information displayed by this query is valid only for an enabled capture process.</p>
<p>Run the following query to determine the message capturing latency for each capture process:</p>
<pre>
COLUMN CAPTURE_NAME HEADING 'Capture|Process|Name' FORMAT A10
COLUMN LATENCY_SECONDS HEADING 'Latency|in|Seconds' FORMAT 999999
COLUMN CREATE_TIME HEADING 'Message Creation|Time' FORMAT A20
COLUMN ENQUEUE_TIME HEADING 'Enqueue Time' FORMAT A20
COLUMN ENQUEUE_MESSAGE_NUMBER HEADING 'Message|Number' FORMAT 9999999999

SELECT CAPTURE_NAME,
       (ENQUEUE_TIME-ENQUEUE_MESSAGE_CREATE_TIME)*86400 LATENCY_SECONDS, 
       TO_CHAR(ENQUEUE_MESSAGE_CREATE_TIME, 'HH24:MI:SS MM/DD/YY') CREATE_TIME,
       TO_CHAR(ENQUEUE_TIME, 'HH24:MI:SS MM/DD/YY') ENQUEUE_TIME,
       ENQUEUE_MESSAGE_NUMBER
  FROM V$STREAMS_CAPTURE;
</pre>
<p>Your output looks similar to the following:</p>
<pre>
Capture    Latency
Process         in Message Creation                            Message
Name       Seconds Time                 Enqueue Time          Number
---------- ------- -------------------- -------------------- -------
CAPTURE          0 10:56:51 03/01/02    10:56:51 03/01/02     253962
</pre>
<p>The <code>"Latency</code> <code>in</code> <code>Seconds"</code> returned by this query is the difference between the <code>"Enqueue</code> <code>Time"</code> and the <code>"Message</code> <code>Creation</code> <code>Time."</code></p>
</div>
<!-- class="sect2" -->
<a id="i1020990"></a>
<div id="STRMS894" class="sect2">
<h3 class="sect2">Displaying Information About Rule Evaluations for Each Capture Process<a id="sthref1093"></a><a id="sthref1094"></a><a id="sthref1095"></a></h3>
<p>You can display the following information about <a href="strms_glossary.htm#CHDIFFCF"><span class="xrefglossterm">rule</span></a> evaluation for each <a href="strms_glossary.htm#CHDBHECD"><span class="xrefglossterm">capture process</span></a> by running the query in this section:</p>
<ul>
<li>
<p>The name of the capture process.</p>
</li>
<li>
<p>The number of changes discarded during prefiltering since the capture process was last started. The capture process determined that these changes definitely did not satisfy the capture process <a href="strms_glossary.htm#CHDCHGGB"><span class="xrefglossterm">rule set</span></a>s during prefiltering.</p>
</li>
<li>
<p>The number of changes kept during prefiltering since the capture process was last started. The capture process determined that these changes definitely satisfied the capture process rule sets during prefiltering. Such changes are converted into LCRs and enqueued into the capture process <a href="strms_glossary.htm#CHDIDCDI"><span class="xrefglossterm">queue</span></a>.</p>
</li>
<li>
<p>The total number of prefilter evaluations since the capture process was last started.</p>
</li>
<li>
<p>The number of undecided changes after prefiltering since the capture process was last started. These changes might or might not satisfy the capture process rule sets. Some of these changes might be filtered out after prefiltering without requiring full evaluation. Other changes require full evaluation to determine whether they satisfy the capture process rule sets.</p>
</li>
<li>
<p>The number of full evaluations since the capture process was last started. Full evaluations can be expensive. Therefore, capture process performance is best when this number is relatively low.</p>
</li>
</ul>
<p>The information displayed by this query is valid only for an enabled capture process.</p>
<p>Run the following query to display this information for each capture process:</p>
<pre>
COLUMN CAPTURE_NAME HEADING 'Capture|Name' FORMAT A15
COLUMN TOTAL_PREFILTER_DISCARDED HEADING 'Prefilter|Changes|Discarded' 
  FORMAT 9999999999
COLUMN TOTAL_PREFILTER_KEPT HEADING 'Prefilter|Changes|Kept' FORMAT 9999999999
COLUMN TOTAL_PREFILTER_EVALUATIONS HEADING 'Prefilter|Evaluations' 
  FORMAT 9999999999
COLUMN UNDECIDED HEADING 'Undecided|After|Prefilter' FORMAT 9999999999
COLUMN TOTAL_FULL_EVALUATIONS HEADING 'Full|Evaluations' FORMAT 9999999999

SELECT CAPTURE_NAME,
       TOTAL_PREFILTER_DISCARDED,
       TOTAL_PREFILTER_KEPT,
       TOTAL_PREFILTER_EVALUATIONS,
       (TOTAL_PREFILTER_EVALUATIONS - 
         (TOTAL_PREFILTER_KEPT + TOTAL_PREFILTER_DISCARDED)) UNDECIDED,
       TOTAL_FULL_EVALUATIONS
  FROM V$STREAMS_CAPTURE;
</pre>
<p>Your output looks similar to the following:</p>
<pre>
                 Prefilter   Prefilter               Undecided
Capture            Changes     Changes   Prefilter       After        Full
Name             Discarded        Kept Evaluations   Prefilter Evaluations
--------------- ---------- ----------- ----------- ----------- -----------
CAPTURE_HNS         927409     3271491     4198900           0           9
</pre>
<p>The total number of prefilter evaluations equals the sum of the prefilter changes discarded, the prefilter changes kept, and the undecided changes.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="strms_adcapture.htm#i1010527">"Capture Process Rule Evaluation"</a></div>
</div>
<!-- class="sect2" -->
<a id="CFFJBCFH"></a>
<div id="STRMS895" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Determining Which Capture Processes Use Combined Capture and Apply<a id="sthref1096"></a><a id="sthref1097"></a><a id="sthref1098"></a></h3>
<p>A combined capture and apply environment is efficient because the <a href="strms_glossary.htm#CHDBHECD"><span class="xrefglossterm">capture process</span></a> acts as the propagation sender, and the <a href="strms_glossary.htm#CHDFJFED"><span class="xrefglossterm">buffered queue</span></a> is optimized to make replication of changes more efficient.</p>
<p>When a capture process uses combined capture and apply, the <code>OPTIMIZATION</code> column in the <code>V$STREAMS_CAPTURE</code> data dictionary view is greater than zero. When a capture process does not use combined capture and apply, the <code>OPTIMIZATION</code> column is 0 (zero).</p>
<p>To determine whether a capture process uses combined capture and apply, run the following query:</p>
<pre>
COLUMN CAPTURE_NAME HEADING 'Capture Name' FORMAT A30
COLUMN OPTIMIZATION HEADING 'Optimized?' FORMAT A10

SELECT CAPTURE_NAME, 
       DECODE(OPTIMIZATION,
                0, 'No',
                   'Yes') OPTIMIZATION
  FROM V$STREAMS_CAPTURE;
</pre>
<p>Your output looks similar to the following:</p>
<pre>
Capture Name                   Optimized?
------------------------------ ----------
CAPTURE_HNS                    Yes
</pre>
<p>This output indicates that the <code>capture_hns</code> capture process uses combined capture and apply.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="strms_adcca.htm#BGBJBDHJ">Chapter 12, "Combined Capture and Apply Optimization"</a></div>
</div>
<!-- class="sect2" -->
<a id="CACIGHCH"></a>
<div id="STRMS1603" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Displaying Information About Split and Merge Operations</h3>
<p>Splitting and merging an Oracle Streams destination is useful under the following conditions:</p>
<ul>
<li>
<p>A single capture process captures changes that are sent to two or more apply processes.</p>
</li>
<li>
<p>An apply process stops accepting changes captured by the capture process. The apply process might stop accepting changes if, for example, the apply process is disabled, the database that contains the apply process goes down, there is a network problem, the computer system running the database that contains the apply process goes down, or for some other reason.</p>
</li>
</ul>
<p>When these conditions are met, it is best to split the problem destination stream off from the other destination streams to avoid degraded performance. When the problem is corrected, the destination stream that was split off can be merged back into the other destination streams for the capture process.</p>
<p>By default, split and merge operations are performed automatically when Oracle Streams detects a problem destination. Two capture process parameters, <code>split_threshold</code> and <code>merge_threshold</code>, control automatic split and merge operations.</p>
<p>The following sections contain queries that you can run to monitor current and past automatic split and merge operations:</p>
<ul>
<li>
<p><a href="#CACDIECA">Displaying the Names of the Original and Cloned Oracle Streams Components</a></p>
</li>
<li>
<p><a href="#CACBIDAF">Displaying the Actions and Thresholds for Split and Merge Operations</a></p>
</li>
<li>
<p><a href="#CACCABDI">Displaying the Lag Time of the Cloned Capture Process</a></p>
</li>
<li>
<p><a href="#CACBIGFG">Displaying Information About the Split and Merge Jobs</a></p>
</li>
<li>
<p><a href="#CACIBBCJ">Displaying Information About Past Split and Merge Operations</a></p>
</li>
</ul>
<div class="infobox-note">
<p class="notep1">Note:</p>
The queries in these sections only show information about automatic split and merge operations. These queries do not show information about operations that split streams manually using the <code>SPLIT_STREAMS</code> procedure in the <code>DBMS_STREAMS_ADM</code> package.</div>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a class="olink STREP434" href="../../server.112/e10705/man_gen_rep.htm#STREP434"><span class="italic">Oracle Streams Replication Administrator's Guide</span></a> for more information about split and merge operations</p>
</li>
<li>
<p><a class="olink ARPLS306" href="../../appdev.112/e40758/d_cap_a.htm#ARPLS306"><span class="italic">Oracle Database PL/SQL Packages and Types Reference</span></a> for more information about capture process parameters</p>
</li>
</ul>
</div>
<a id="CACDIECA"></a>
<div id="STRMS1604" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Displaying the Names of the Original and Cloned Oracle Streams Components</h4>
<p>The query in this section shows the following information about the Oracle Streams components that are involved in a split and merge operation:</p>
<ul>
<li>
<p>The name of the original capture process from which a destination stream was split off</p>
</li>
<li>
<p>The name of the cloned capture process that captures changes for the problem destination</p>
</li>
<li>
<p>The name of the original propagation or apply process that was part of the stream that was split off</p>
<p>In a multiple-database configuration, a propagation sends changes from the capture process's queue to the apply process's queue, and a propagation is shown in this query. In a single-database configuration, an apply process dequeues changes from the queue that is used by the capture process, and an apply process is shown in this query.</p>
</li>
<li>
<p>The name of the cloned propagation or apply process that processes changes for the problem destination</p>
</li>
<li>
<p>The type of the Oracle Streams component that receives changes from the capture process, either <code>PROPAGATION</code> or <code>APPLY</code></p>
</li>
</ul>
<p>Run the following query to display this information:</p>
<pre>
COLUMN ORIGINAL_CAPTURE_NAME HEADING 'Original|Capture|Process' FORMAT A15
COLUMN CLONED_CAPTURE_NAME HEADING 'Cloned|Capture|Process' FORMAT A15
COLUMN ORIGINAL_STREAMS_NAME HEADING 'Original|Streams|Name' FORMAT A15
COLUMN CLONED_STREAMS_NAME HEADING 'Cloned|Streams|Name' FORMAT A15
COLUMN STREAMS_TYPE HEADING 'Streams|Type' FORMAT A11
 
SELECT ORIGINAL_CAPTURE_NAME,
       CLONED_CAPTURE_NAME,
       ORIGINAL_STREAMS_NAME,
       CLONED_STREAMS_NAME,
       STREAMS_TYPE
 FROM DBA_STREAMS_SPLIT_MERGE;
</pre>
<p>Your output looks similar to the following:</p>
<pre>
Original        Cloned          Original        Cloned
Capture         Capture         Streams         Streams         Streams
Process         Process         Name            Name            Type
--------------- --------------- --------------- --------------- -----------
DB$CAP          CLONED$_DB$CAP_ PROPAGATION$_17 CLONED$_PROPAGA PROPAGATION
                1                               TION$_17_2
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink STREP434" href="../../server.112/e10705/man_gen_rep.htm#STREP434"><span class="italic">Oracle Streams Replication Administrator's Guide</span></a> for more information about split and merge operations</div>
</div>
<!-- class="sect3" -->
<a id="CACBIDAF"></a>
<div id="STRMS1605" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Displaying the Actions and Thresholds for Split and Merge Operations</h4>
<p>The query in this section shows the following information about the actions performed by the split and merge operation and the thresholds that were set for splitting and merging a problem destination:</p>
<ul>
<li>
<p>The name of the original capture process from which a destination stream was split off</p>
</li>
<li>
<p>The script status of the split or merge job, either <code>GENERATING</code>, <code>NOT</code> <code>EXECUTED</code>, <code>EXECUTING</code>, <code>EXECUTED</code>, or <code>ERROR</code></p>
</li>
<li>
<p>The type of action performed by the job, either <code>SPLIT</code>, <code>MERGE</code>, or <code>MONITOR</code></p>
<p>When a <code>SPLIT</code> job determines that a split must be performed, a row with <code>SPLIT</code> action type is inserted into the <code>DBA_STREAMS_SPLIT_MERGE</code> view.</p>
<p>When the split operation is complete, the <code>SPLIT</code> action type row is copied to the <code>DBA_STREAMS_SPLIT_MERGE_HIST</code> view, and a <code>MERGE</code> job is created. A row with <code>MERGE</code> action type is inserted into the <code>DBA_STREAMS_SPLIT_MERGE</code> view. When merge operation is complete, the <code>MERGE</code> action type row is moved to the <code>DBA_STREAMS_SPLIT_MERGE_HIST</code> view, and the <code>SPLIT</code> action type row is deleted from the <code>DBA_STREAMS_SPLIT_MERGE</code> view. The <code>SPLIT</code> action type row was previously copied to the <code>DBA_STREAMS_SPLIT_MERGE_HIST</code> view.</p>
<p>Each original capture process has a <code>SPLIT</code> job that monitors all of its destinations. This type of job displays the <code>MONITOR</code> action type in rows in the <code>DBA_STREAMS_SPLIT_MERGE</code> view. <code>MONITOR</code> action type rows are moved to the <code>DBA_STREAMS_SPLIT_MERGE_HIST</code> view only if the <code>SPLIT</code> job is disabled. A <code>SPLIT</code> job can be disabled either by setting the <code>split_threshold</code> capture process parameter to <code>INFINITE</code> or by dropping the capture process.</p>
</li>
<li>
<p>The capture process parameter threshold set for the operation, in seconds</p>
<p>For <code>SPLIT</code> jobs, the threshold is set by the <code>split_threshold</code> capture process parameter. For <code>MERGE</code> jobs, the threshold is set by the <code>merge_threshold</code> capture process parameter.</p>
</li>
<li>
<p>The status of the action</p>
<p>For <code>SPLIT</code> actions, the status can be <code>SPLITTING</code>, <code>SPLIT</code> <code>DONE</code>, or <code>ERROR</code>. The <code>SPLITTING</code> status indicates that the split operation is being performed. The <code>SPLIT</code> <code>DONE</code> status indicates that the split operation is complete. The <code>ERROR</code> status indicates that an error was returned during the split operation.</p>
<p>For <code>MERGE</code> actions, the status can be <code>NOTHING</code> <code>TO</code> <code>MERGE</code>, <code>MERGING</code>, <code>MERGE</code> <code>DONE</code>, or <code>ERROR</code>. The <code>NOTHING</code> <code>TO</code> <code>MERGE</code> status indicates that a split was performed but the split stream is not yet ready to merge. The <code>MERGING</code> status indicates that the merge operation is being performed. The <code>MERGE</code> <code>DONE</code> status indicates that the merge operation is complete. The <code>ERROR</code> status indicates that an error was returned during the merge operation.</p>
<p>For <code>MONITOR</code> actions, the status can be any of the <code>SPLIT</code> and <code>MERGE</code> status values. In addition, a <code>MONITOR</code> action can show <code>NOTHING</code> <code>TO</code> <code>SPLIT</code> or <code>NONSPLITTABLE</code> for its status. The <code>NOTHING</code> <code>TO</code> <code>SPLIT</code> status indicates that the streams flowing from the capture process are being processed at all destinations, and no stream should be split. The <code>NONSPLITTABLE</code> status indicates that it is not possible to split the stream for the capture process. A <code>NONSPLITTABLE</code> status is possible in the following cases:</p>
<ul>
<li>
<p>The capture process is disabled or aborted.</p>
</li>
<li>
<p>The capture process's queue has at least one publisher in addition to the capture process. The additional publisher can be another capture process or a propagation that sends messages to the queue.</p>
</li>
<li>
<p>The capture process has only one destination. Split and merge operations are possible only when there are two or more destinations for the changes captured by the capture process.</p>
</li>
</ul>
</li>
<li>
<p>The date and time when the job status was last updated</p>
</li>
</ul>
<p>Run the following query to display this information:</p>
<pre>
COLUMN ORIGINAL_CAPTURE_NAME HEADING 'Original|Capture|Process' FORMAT A10
COLUMN SCRIPT_STATUS HEADING 'Script|Status' FORMAT A12
COLUMN ACTION_TYPE HEADING 'Action|Type' FORMAT A7
COLUMN ACTION_THRESHOLD HEADING 'Action|Threshold' FORMAT A15
COLUMN STATUS HEADING 'Status' FORMAT A16
COLUMN STATUS_UPDATE_TIME HEADING 'Status|Update|Time' FORMAT A15
 
SELECT ORIGINAL_CAPTURE_NAME,
       SCRIPT_STATUS,
       ACTION_TYPE,
       ACTION_THRESHOLD,
       STATUS,
       STATUS_UPDATE_TIME
 FROM DBA_STREAMS_SPLIT_MERGE
 ORDER BY STATUS_UPDATE_TIME DESC;
</pre>
<p>Your output looks similar to the following:</p>
<pre>
Original                                                         Status
Capture    Script       Action  Action                           Update
Process    Status       Type    Threshold       Status           Time
---------- ------------ ------- --------------- ---------------- ---------------
DB$CAP     EXECUTED     SPLIT   1800            SPLIT DONE       31-MAR-09 01.31
                                                                 .37.133788 PM
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a class="olink STREP434" href="../../server.112/e10705/man_gen_rep.htm#STREP434"><span class="italic">Oracle Streams Replication Administrator's Guide</span></a> for more information about split and merge operations</p>
</li>
<li>
<p><a class="olink ARPLS306" href="../../appdev.112/e40758/d_cap_a.htm#ARPLS306"><span class="italic">Oracle Database PL/SQL Packages and Types Reference</span></a> for more information about capture process parameters</p>
</li>
</ul>
</div>
</div>
<!-- class="sect3" -->
<a id="CACCABDI"></a>
<div id="STRMS1606" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Displaying the Lag Time of the Cloned Capture Process</h4>
<p>After a stream is split off from a capture process for a problem destination, you must correct the problem at the destination and ensure that the cloned capture process is enabled. When the cloned capture process is sending changes to the problem destination, and the apply process at the problem destination is applying these changes, an Oracle Scheduler job runs the <code>MERGE_STREAMS_JOB</code> procedure according to its schedule.</p>
<p>The <code>MERGE_STREAMS_JOB</code> procedure queries the <code>CAPTURE_MESSAGE_CREATE_TIME</code> in the <code>GV$STREAMS_CAPTURE</code> view. When the difference between <code>CAPTURE_MESSAGE_CREATE_TIME</code> of the cloned capture process and the original capture process is less than or equal to the value of the <code>merge_threshold</code> capture process parameter, the <code>MERGE_STREAMS_JOB</code> procedure determines that the streams are ready to merge. The <code>MERGE_STREAMS_JOB</code> procedure runs the <code>MERGE_STREAMS</code> procedure automatically to merge the streams.</p>
<p>The <code>LAG</code> column in the <code>DBA_STREAMS_SPLIT_MERGE</code> view tracks the time in seconds that the cloned capture process lags behind the original capture process. The following query displays the lag time:</p>
<pre>
COLUMN ORIGINAL_CAPTURE_NAME HEADING 'Original Capture Process' FORMAT A25
COLUMN CLONED_CAPTURE_NAME HEADING 'Cloned Capture Process' FORMAT A25
COLUMN LAG HEADING 'Lag' FORMAT 999999999999999
 
SELECT ORIGINAL_CAPTURE_NAME,
       CLONED_CAPTURE_NAME,
       LAG
 FROM DBA_STREAMS_SPLIT_MERGE;
</pre>
<p>Your output looks similar to the following:</p>
<pre>
Original Capture Process  Cloned Capture Process                 Lag
------------------------- ------------------------- ----------------
DB$CAP                    CLONED$_DB$CAP_1                       526
</pre>
<p>When the <code>MERGE_STREAMS_JOB</code> runs and the lag time is less than or equal to the value of the <code>merge_threshold</code> capture process parameter, the merge operation begins.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink STREP434" href="../../server.112/e10705/man_gen_rep.htm#STREP434"><span class="italic">Oracle Streams Replication Administrator's Guide</span></a> for more information about split and merge operations</div>
</div>
<!-- class="sect3" -->
<a id="CACBIGFG"></a>
<div id="STRMS1607" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Displaying Information About the Split and Merge Jobs</h4>
<p>The query in this section shows the following information about split and merge jobs:</p>
<ul>
<li>
<p>The name of the original capture process from which a destination stream was split off</p>
</li>
<li>
<p>The owner of the job</p>
</li>
<li>
<p>The name of the job</p>
</li>
<li>
<p>The current state of the job, either <code>DISABLED</code>, <code>RETRY</code> <code>SCHEDULED</code>, <code>SCHEDULED</code>, <code>RUNNING</code>, <code>COMPLETED</code>, <code>BROKEN</code>, <code>FAILED</code>, <code>REMOTE</code>, <code>SUCCEEDED</code>, or <code>CHAIN_STALLED</code></p>
<p>See <a class="olink ADMIN12038" href="../../server.112/e25494/schedadmin.htm#ADMIN12038"><span class="italic">Oracle Database Administrator's Guide</span></a> for information about these job states.</p>
</li>
<li>
<p>The date and time when the job will run next</p>
</li>
</ul>
<p>Run the following query to display this information:</p>
<pre>
COLUMN ORIGINAL_CAPTURE_NAME HEADING 'Original|Capture|Process' FORMAT A10
COLUMN JOB_OWNER HEADING 'Job Owner' FORMAT A10
COLUMN JOB_NAME HEADING 'Job Name' FORMAT A15
COLUMN JOB_STATE HEADING 'Job State' FORMAT A15
COLUMN JOB_NEXT_RUN_DATE HEADING 'Job Next|Run Date' FORMAT A20
 
SELECT ORIGINAL_CAPTURE_NAME,
       JOB_OWNER,
       JOB_NAME,
       JOB_STATE,
       JOB_NEXT_RUN_DATE
 FROM DBA_STREAMS_SPLIT_MERGE;
</pre>
<p>Your output looks similar to the following:</p>
<pre>
Original
Capture                                               Job Next
Process    Job Owner  Job Name        Job State       Run Date
---------- ---------- --------------- --------------- --------------------
DB$CAP     SYS        STREAMS_SPLITJO SCHEDULED       01-APR-09 01.14.55.0
                      B$_3                            00000 PM -07:00
DB$CAP     SYS        STREAMS_MERGEJO SCHEDULED       01-APR-09 01.17.08.0
                      B$_6                            00000 PM -07:00
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink STREP434" href="../../server.112/e10705/man_gen_rep.htm#STREP434"><span class="italic">Oracle Streams Replication Administrator's Guide</span></a> for more information about split and merge operations</div>
</div>
<!-- class="sect3" -->
<a id="CACIBBCJ"></a>
<div id="STRMS1608" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Displaying Information About Past Split and Merge Operations</h4>
<p>The query in this section shows the following historical information about split and merge operations that were performed in the past:</p>
<ul>
<li>
<p>The name of the original capture process from which a destination stream was split off</p>
</li>
<li>
<p>The script status of split or merge job</p>
</li>
<li>
<p>The type of action performed by the job, either <code>SPLIT</code> or <code>MERGE</code></p>
</li>
<li>
<p>The status of the action performed by the job</p>
<p>See <a href="#CACBIDAF">"Displaying the Actions and Thresholds for Split and Merge Operations"</a> for information about the status values.</p>
</li>
<li>
<p>The owner of the job</p>
</li>
<li>
<p>The name of the job</p>
</li>
<li>
<p>The recoverable script ID</p>
</li>
</ul>
<p>Run the following query to display this information:</p>
<pre>
COLUMN ORIGINAL_CAPTURE_NAME HEADING 'Original|Capture|Process' FORMAT A8
COLUMN SCRIPT_STATUS HEADING 'Script|Status' FORMAT A12
COLUMN ACTION_TYPE HEADING 'Action|Type' FORMAT A8
COLUMN STATUS HEADING 'Status' FORMAT A10
COLUMN JOB_OWNER HEADING 'Job Owner' FORMAT A10
COLUMN JOB_NAME HEADING 'Job Name' FORMAT A10
COLUMN RECOVERABLE_SCRIPT_ID HEADING 'Recoverable|Script ID' FORMAT A15
 
SELECT ORIGINAL_CAPTURE_NAME,
       SCRIPT_STATUS,
       ACTION_TYPE,
       STATUS,
       JOB_OWNER,
       JOB_NAME,
       RECOVERABLE_SCRIPT_ID
 FROM DBA_STREAMS_SPLIT_MERGE_HIST;
</pre>
<p>Your output looks similar to the following:</p>
<pre>
Original
Capture  Script       Action                                    Recoverable
Process  Status       Type     Status     Job Owner  Job Name   Script ID
-------- ------------ -------- ---------- ---------- ---------- ---------------
DB1$CAP  EXECUTED     SPLIT    SPLIT DONE SYS        STREAMS_SP 6E5C6C49CDB5798
                                                     LITJOB$_9  3E040578C891704
                                                                87
 
DB1$CAP  EXECUTED     MERGE    MERGE DONE SYS        STREAMS_ME 6E5BA57554F1C4C
                                                     RGEJOB$_12 3E040578C89170A
                                                                1F
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink STREP434" href="../../server.112/e10705/man_gen_rep.htm#STREP434"><span class="italic">Oracle Streams Replication Administrator's Guide</span></a> for more information about split and merge operations</div>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="CACCIFAE"></a>
<div id="STRMS208" class="sect2"><a id="BABJEDCC"></a>
<h3 class="sect2">Monitoring Supplemental Logging<a id="sthref1099"></a><a id="sthref1100"></a></h3>
<p>The following sections contain queries that you can run to monitor supplemental logging at a source database:</p>
<ul>
<li>
<p><a href="#CACICJFI">Displaying Supplemental Log Groups at a Source Database</a></p>
</li>
<li>
<p><a href="#CACCGAGF">Displaying Database Supplemental Logging Specifications</a></p>
</li>
<li>
<p><a href="#CACFDFHF">Displaying Supplemental Logging Specified During Preparation for Instantiation</a></p>
</li>
</ul>
<p>The total supplemental logging at a database is determined by the results shown in all three of the queries in these sections combined. For example, supplemental logging can be enabled for columns in a table even if no results for the table are returned by the query in the <a href="#CACICJFI">"Displaying Supplemental Log Groups at a Source Database"</a> section. That is, supplemental logging can be enabled for the table if database supplemental logging is enabled or if the table is in a schema for which supplemental logging was enabled during preparation for instantiation.</p>
<p>Supplemental logging places additional column data into a redo log when an operation is performed. A capture process captures this additional information and places it in LCRs. An apply process that applies these captured LCRs might need this additional information to schedule or apply changes correctly.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="strms_capture.htm#i1007293">"Supplemental Logging in an Oracle Streams Environment"</a></p>
</li>
<li>
<p><a class="olink STREP107" href="../../server.112/e10705/prep_rep.htm#STREP107"><span class="italic">Oracle Streams Replication Administrator's Guide</span></a></p>
</li>
</ul>
</div>
<a id="CACICJFI"></a>
<div id="STRMS896" class="sect3">
<h4 class="sect3">Displaying Supplemental Log Groups at a Source Database<a id="sthref1101"></a><a id="sthref1102"></a></h4>
<p>To check whether one or more log groups are specified for the table at the source database, run the following query:</p>
<pre>
COLUMN LOG_GROUP_NAME HEADING 'Log Group' FORMAT A20
COLUMN TABLE_NAME HEADING 'Table' FORMAT A15
COLUMN ALWAYS HEADING 'Conditional or|Unconditional' FORMAT A14
COLUMN LOG_GROUP_TYPE HEADING 'Type of Log Group' FORMAT A20

SELECT 
    LOG_GROUP_NAME, 
    TABLE_NAME, 
    DECODE(ALWAYS,
             'ALWAYS', 'Unconditional',
             'CONDITIONAL', 'Conditional') ALWAYS,
    LOG_GROUP_TYPE
  FROM DBA_LOG_GROUPS;
</pre>
<p>Your output looks similar to the following:</p>
<pre>
                                     Conditional or
Log Group            Table           Unconditional  Type of Log Group
-------------------- --------------- -------------- --------------------
LOG_GROUP_DEP_PK     DEPARTMENTS     Unconditional  USER LOG GROUP
SYS_C002105          REGIONS         Unconditional  PRIMARY KEY LOGGING
SYS_C002106          REGIONS         Conditional    FOREIGN KEY LOGGING
SYS_C002110          LOCATIONS       Unonditional   ALL COLUMN LOGGING
SYS_C002111          COUNTRIES       Conditional    ALL COLUMN LOGGING
LOG_GROUP_JOBS_CR    JOBS            Conditional    USER LOG GROUP
</pre>
<p>If the output for the type of log group shows how the log group was created:</p>
<ul>
<li>
<p>If the output is <code>USER</code> <code>LOG</code> <code>GROUP</code>, then the log group was created using the <code>ADD</code> <code>SUPPLEMENTAL</code> <code>LOG</code> <code>GROUP</code> clause of the <code>ALTER</code> <code>TABLE</code> statement.</p>
</li>
<li>
<p>Otherwise, the log group was created using the <code>ADD</code> <code>SUPPLEMENTAL</code> <code>LOG</code> <code>DATA</code> clause of the <code>ALTER</code> <code>TABLE</code> statement.</p>
</li>
</ul>
<p>If the type of log group is <code>USER</code> <code>LOG</code> <code>GROUP</code>, then you can list the columns in the log group by querying the <code>DBA_LOG_GROUP_COLUMNS</code> data dictionary view.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
If the type of log group is not <code>USER</code> <code>LOG</code> <code>GROUP</code>, then the <code>DBA_LOG_GROUP_COLUMNS</code> data dictionary view does not contain information about the columns in the log group. Instead, Oracle supplementally logs the correct columns when an operation is performed on the table. For example, if the type of log group is <code>PRIMARY</code> <code>KEY</code> <code>LOGGING</code>, then Oracle logs the current primary key column(s) when a change is performed on the table.</div>
</div>
<!-- class="sect3" -->
<a id="CACCGAGF"></a>
<div id="STRMS897" class="sect3">
<h4 class="sect3">Displaying Database Supplemental Logging Specifications<a id="sthref1103"></a></h4>
<p>To display the database supplemental logging specifications, query the <code>V$DATABASE</code> dynamic performance view, as in the following example:</p>
<pre>
COLUMN log_min HEADING 'Minimum|Supplemental|Logging?' FORMAT A12
COLUMN log_pk HEADING 'Primary Key|Supplemental|Logging?' FORMAT A12
COLUMN log_fk HEADING 'Foreign Key|Supplemental|Logging?' FORMAT A12
COLUMN log_ui HEADING 'Unique|Supplemental|Logging?' FORMAT A12
COLUMN log_all HEADING 'All Columns|Supplemental|Logging?' FORMAT A12

SELECT SUPPLEMENTAL_LOG_DATA_MIN log_min, 
       SUPPLEMENTAL_LOG_DATA_PK log_pk, 
       SUPPLEMENTAL_LOG_DATA_FK log_fk,
       SUPPLEMENTAL_LOG_DATA_UI log_ui,
       SUPPLEMENTAL_LOG_DATA_ALL log_all
  FROM V$DATABASE;  
  
</pre>
<p>Your output looks similar to the following:</p>
<pre>
Minimum      Primary Key  Foreign Key  Unique        All Columns
Supplemental Supplemental Supplemental Supplemental  Supplemental
Logging?     Logging?     Logging?     Logging?      Logging?
------------ ------------ ------------ ------------- ------------
YES          YES          YES          YES           NO
</pre>
<p>These results show that minimum, primary key, foreign key, and unique key columns are being supplementally logged for all of the tables in the database. Because unique key columns are supplementally logged, bitmap index columns also are supplementally logged. However, all columns are not being supplementally logged.</p>
</div>
<!-- class="sect3" -->
<a id="CACFDFHF"></a>
<div id="STRMS898" class="sect3">
<h4 class="sect3">Displaying Supplemental Logging Specified During Preparation for Instantiation</h4>
<p>Supplemental logging can be enabled when database objects are prepared for instantiation using one of the three procedures in the <code>DBMS_CAPTURE_ADM</code> package. A data dictionary view displays the supplemental logging enabled by each of these procedures: <code>PREPARE_TABLE_INSTANTIATION</code>, <code>PREPARE_SCHEMA_INSTANTIATION</code>, and <code>PREPARE_GLOBAL_INSTANTIATION</code>.</p>
<ul>
<li>
<p>The <code>DBA_CAPTURE_PREPARED_TABLES</code> view displays the supplemental logging enabled by the <code>PREPARE_TABLE_INSTANTIATION</code> procedure.</p>
</li>
<li>
<p>The <code>DBA_CAPTURE_PREPARED_SCHEMAS</code> view displays the supplemental logging enabled by the <code>PREPARE_SCHEMA_INSTANTIATION</code> procedure.</p>
</li>
<li>
<p>The <code>DBA_CAPTURE_PREPARED_DATABASE</code> view displays the supplemental logging enabled by the <code>PREPARE_GLOBAL_INSTANTIATION</code> procedure.</p>
</li>
</ul>
<p>Each of these views has the following columns:</p>
<ul>
<li>
<p><code>SUPPLEMENTAL_LOG_DATA_PK</code> shows whether primary key supplemental logging was enabled by a procedure.</p>
</li>
<li>
<p><code>SUPPLEMENTAL_LOG_DATA_UI</code> shows whether unique key and bitmap index supplemental logging was enabled by a procedure.</p>
</li>
<li>
<p><code>SUPPLEMENTAL_LOG_DATA_FK</code> shows whether foreign key supplemental logging was enabled by a procedure.</p>
</li>
<li>
<p><code>SUPPLEMENTAL_LOG_DATA_ALL</code> shows whether supplemental logging for all columns was enabled by a procedure.</p>
</li>
</ul>
<p>Each of these columns can display one of the following values:</p>
<ul>
<li>
<p><code>IMPLICIT</code> means that the relevant procedure enabled supplemental logging for the columns.</p>
</li>
<li>
<p><code>EXPLICIT</code> means that supplemental logging was enabled for the columns manually using an <code>ALTER</code> <code>TABLE</code> or <code>ALTER</code> <code>DATABASE</code> statement with an <code>ADD</code> <code>SUPPLEMENTAL</code> <code>LOG</code> <code>DATA</code> clause.</p>
</li>
<li>
<p><code>NO</code> means that supplemental logging was not enabled for the columns using a prepare procedure or an <code>ALTER</code> <code>TABLE</code> or <code>ALTER</code> <code>DATABASE</code> statement with an <code>ADD</code> <code>SUPPLEMENTAL</code> <code>LOG</code> <code>DATA</code> clause. Supplemental logging might not be enabled for the columns. However, supplemental logging might be enabled for the columns at another level (table, schema, or database), or it might have been enabled using an <code>ALTER</code> <code>TABLE</code> statement with an <code>ADD</code> <code>SUPPLEMENTAL</code> <code>LOG</code> <code>GROUP</code> clause.</p>
</li>
</ul>
<p>The following sections contain queries that display the supplemental logging enabled by these procedures:</p>
<ul>
<li>
<p><a href="#CACGJEEA">Displaying Supplemental Logging Enabled by PREPARE_TABLE_INSTANTIATION</a></p>
</li>
<li>
<p><a href="#CACHHIEH">Displaying Supplemental Logging Enabled by PREPARE_SCHEMA_INSTANTIATION</a></p>
</li>
<li>
<p><a href="#CACHBEEC">Displaying Supplemental Logging Enabled by PREPARE_GLOBAL_INSTANTIATION</a></p>
</li>
</ul>
<a id="CACGJEEA"></a>
<div id="STRMS899" class="sect4">
<h5 class="sect4">Displaying Supplemental Logging Enabled by PREPARE_TABLE_INSTANTIATION</h5>
<p>The following query displays the supplemental logging enabled by the <code>PREPARE_TABLE_INSTANTIATION</code> procedure for the tables in the <code>hr</code> schema:</p>
<pre>
COLUMN TABLE_NAME HEADING 'Table Name' FORMAT A15
COLUMN log_pk HEADING 'Primary Key|Supplemental|Logging' FORMAT A12
COLUMN log_fk HEADING 'Foreign Key|Supplemental|Logging' FORMAT A12
COLUMN log_ui HEADING 'Unique|Supplemental|Logging' FORMAT A12
COLUMN log_all HEADING 'All Columns|Supplemental|Logging' FORMAT A12

SELECT TABLE_NAME,
       SUPPLEMENTAL_LOG_DATA_PK log_pk, 
       SUPPLEMENTAL_LOG_DATA_FK log_fk,
       SUPPLEMENTAL_LOG_DATA_UI log_ui,
       SUPPLEMENTAL_LOG_DATA_ALL log_all
  FROM DBA_CAPTURE_PREPARED_TABLES
  WHERE TABLE_OWNER = 'HR';  
  
</pre>
<p>Your output looks similar to the following:</p>
<pre>
                Primary Key  Foreign Key  Unique         All Columns
                Supplemental Supplemental Supplemental   Supplemental
Table Name      Logging      Logging      Logging        Logging
--------------- ------------ ------------ -------------- ------------
COUNTRIES       NO           NO           NO             NO
REGIONS         IMPLICIT     IMPLICIT     IMPLICIT       NO
DEPARTMENTS     IMPLICIT     IMPLICIT     IMPLICIT       NO
LOCATIONS       EXPLICIT     NO           NO             NO
EMPLOYEES       NO           NO           NO             IMPLICIT
JOB_HISTORY     NO           NO           NO             NO
JOBS            NO           NO           NO             NO
</pre>
<p>These results show the following:</p>
<ul>
<li>
<p>The <code>PREPARE_TABLE_INSTANTIATION</code> procedure enabled supplemental logging for the primary key, unique key, bitmap index, and foreign key columns in the <code>hr.regions</code> and <code>hr.departments</code> tables.</p>
</li>
<li>
<p>The <code>PREPARE_TABLE_INSTANTIATION</code> procedure enabled supplemental logging for all columns in the <code>hr.employees</code> table.</p>
</li>
<li>
<p>An <code>ALTER</code> <code>TABLE</code> statement with an <code>ADD</code> <code>SUPPLEMENTAL</code> <code>LOG</code> <code>DATA</code> clause enabled primary key supplemental logging for the <code>hr.locations</code> table.</p>
</li>
</ul>
<div class="infobox-note">
<p class="notep1">Note:</p>
Omit the <code>WHERE</code> clause in the query to list the information for all of the tables in the database.</div>
</div>
<!-- class="sect4" -->
<a id="CACHHIEH"></a>
<div id="STRMS900" class="sect4">
<h5 class="sect4">Displaying Supplemental Logging Enabled by PREPARE_SCHEMA_INSTANTIATION</h5>
<p>The following query displays the supplemental logging enabled by the <code>PREPARE_SCHEMA_INSTANTIATION</code> procedure:</p>
<pre>
COLUMN SCHEMA_NAME HEADING 'Schema Name' FORMAT A20
COLUMN log_pk HEADING 'Primary Key|Supplemental|Logging' FORMAT A12
COLUMN log_fk HEADING 'Foreign Key|Supplemental|Logging' FORMAT A12
COLUMN log_ui HEADING 'Unique|Supplemental|Logging' FORMAT A12
COLUMN log_all HEADING 'All Columns|Supplemental|Logging' FORMAT A12

SELECT SCHEMA_NAME,
       SUPPLEMENTAL_LOG_DATA_PK log_pk, 
       SUPPLEMENTAL_LOG_DATA_FK log_fk,
       SUPPLEMENTAL_LOG_DATA_UI log_ui,
       SUPPLEMENTAL_LOG_DATA_ALL log_all
  FROM DBA_CAPTURE_PREPARED_SCHEMAS;
  
</pre>
<p>Your output looks similar to the following:</p>
<pre>
                     Primary Key  Foreign Key  Unique         All Columns
                     Supplemental Supplemental Supplemental   Supplemental
Schema Name          Logging      Logging      Logging        Logging
-------------------- ------------ ------------ -------------- ------------
HR                   NO           NO           NO             IMPLICIT
OE                   IMPLICIT     IMPLICIT     IMPLICIT       NO
</pre>
<p>These results show the following:</p>
<ul>
<li>
<p>The <code>PREPARE_SCHEMA_INSTANTIATION</code> procedure enabled supplemental logging for all columns in tables in the <code>hr</code> schema.</p>
</li>
<li>
<p>The <code>PREPARE_SCHEMA_INSTANTIATION</code> procedure enabled supplemental logging for the primary key, unique key, bitmap index, and foreign key columns in the tables in the <code>oe</code> schema.</p>
</li>
</ul>
</div>
<!-- class="sect4" -->
<a id="CACHBEEC"></a>
<div id="STRMS901" class="sect4">
<h5 class="sect4">Displaying Supplemental Logging Enabled by PREPARE_GLOBAL_INSTANTIATION</h5>
<p>The following query displays the supplemental logging enabled by the <code>PREPARE_GLOBAL_INSTANTIATION</code> procedure:</p>
<pre>
COLUMN log_pk HEADING 'Primary Key|Supplemental|Logging' FORMAT A12
COLUMN log_fk HEADING 'Foreign Key|Supplemental|Logging' FORMAT A12
COLUMN log_ui HEADING 'Unique|Supplemental|Logging' FORMAT A12
COLUMN log_all HEADING 'All Columns|Supplemental|Logging' FORMAT A12

SELECT SUPPLEMENTAL_LOG_DATA_PK log_pk,
       SUPPLEMENTAL_LOG_DATA_FK log_fk,
       SUPPLEMENTAL_LOG_DATA_UI log_ui,
       SUPPLEMENTAL_LOG_DATA_ALL log_all
  FROM DBA_CAPTURE_PREPARED_DATABASE;
  
</pre>
<p>Your output looks similar to the following:</p>
<pre>
Primary Key  Foreign Key  Unique         All Columns
Supplemental Supplemental Supplemental   Supplemental
Logging      Logging      Logging        Logging
------------ ------------ -------------- ------------
IMPLICIT     IMPLICIT     IMPLICIT       NO
</pre>
<p>These results show that the <code>PREPARE_GLOBAL_INSTANTIATION</code> procedure enabled supplemental logging for the primary key, unique key, bitmap index, and foreign key columns in all of the tables in the database.</p>
</div>
<!-- class="sect4" --></div>
<!-- class="sect3" --></div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="CFFGCIJJ"></a>
<div id="STRMS902" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Monitoring a Synchronous Capture<a id="sthref1104"></a><a id="sthref1105"></a></h2>
<p>This section provides sample queries that you can use to monitor Oracle Streams <a href="strms_glossary.htm#CBACHEDJ"><span class="xrefglossterm">synchronous capture</span></a>s.</p>
<p>This section contains these topics:</p>
<ul>
<li>
<p><a href="#CFFFDBHA">Displaying the Queue and Rule Set of Each Synchronous Capture</a></p>
</li>
<li>
<p><a href="#CFFHGGFH">Displaying the Tables For Which Synchronous Capture Captures Changes</a></p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="strms_capture.htm#CACIDGBI">"Implicit Capture with Synchronous Capture"</a></p>
</li>
<li>
<p><a class="olink STREP208" href="../../server.112/e10705/ccap.htm#STREP208"><span class="italic">Oracle Streams Replication Administrator's Guide</span></a> for information about configuring synchronous capture</p>
</li>
<li>
<p><a href="strms_mcap.htm#BEHJAHDA">"Managing a Synchronous Capture"</a></p>
</li>
<li>
<p><a class="olink TDPII080" href="../../server.112/e17516/tdpii_repcont.htm#TDPII080"><span class="italic">Oracle Database 2 Day + Data Replication and Integration Guide</span></a> for an example that configures a replication environment that uses synchronous capture</p>
</li>
</ul>
</div>
<a id="CFFFDBHA"></a>
<div id="STRMS903" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Displaying the Queue and Rule Set of Each Synchronous Capture<a id="sthref1106"></a></h3>
<p>You can display the following information about each <a href="strms_glossary.htm#CBACHEDJ"><span class="xrefglossterm">synchronous capture</span></a> in a database by running the query in this section:</p>
<ul>
<li>
<p>The synchronous capture name</p>
</li>
<li>
<p>The name of the <a href="strms_glossary.htm#CHDIDCDI"><span class="xrefglossterm">queue</span></a> used by the synchronous capture</p>
</li>
<li>
<p>The name of the <a href="strms_glossary.htm#CHDEEDIJ"><span class="xrefglossterm">positive rule set</span></a> used by the synchronous capture</p>
</li>
<li>
<p>The <a href="strms_glossary.htm#CBAEBCEE"><span class="xrefglossterm">capture user</span></a> for the synchronous capture</p>
</li>
</ul>
<p>To display this general information about each synchronous capture in a database, run the following query:</p>
<pre>
COLUMN CAPTURE_NAME HEADING 'Synchronous|Capture Name' FORMAT A20
COLUMN QUEUE_NAME HEADING 'Synchronous|Capture Queue' FORMAT A20
COLUMN RULE_SET_NAME HEADING 'Positive Rule Set' FORMAT A20
COLUMN CAPTURE_USER HEADING 'Capture User' FORMAT A15

SELECT CAPTURE_NAME, QUEUE_NAME, RULE_SET_NAME, CAPTURE_USER
   FROM DBA_SYNC_CAPTURE;

</pre>
<p>Your output looks similar to the following:</p>
<pre>
Synchronous          Synchronous
Capture Name         Capture Queue        Positive Rule Set    Capture User
-------------------- -------------------- -------------------- ---------------
SYNC01_CAPTURE       STRM01_QUEUE         RULESET$_21          STRMADMIN
SYNC02_CAPTURE       STRM02_QUEUE         SYNC02_RULE_SET      HR
</pre></div>
<!-- class="sect2" -->
<a id="CFFHGGFH"></a>
<div id="STRMS904" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Displaying the Tables For Which Synchronous Capture Captures Changes<a id="sthref1107"></a><a id="sthref1108"></a></h3>
<p>The <code>DBA_SYNC_CAPTURE_TABLES</code> view displays the tables whose DML changes are captured by any synchronous capture in the local database. The <code>DBA_STREAMS_TABLE_RULES</code> view has information about each synchronous capture name and the rules used by each synchronous capture. You can display the following information by running the query in this section:</p>
<ul>
<li>
<p>The name of each synchronous capture</p>
</li>
<li>
<p>The name of each <a href="strms_glossary.htm#CHDIFFCF"><span class="xrefglossterm">rule</span></a> used by the synchronous capture</p>
</li>
<li>
<p>If the rule is a <a href="strms_glossary.htm#CHDBCGAG"><span class="xrefglossterm">subset rule</span></a>, then the type of subsetting operation covered by the rule</p>
</li>
<li>
<p>The owner of each table specified in each rule</p>
</li>
<li>
<p>The name of each table specified in each rule</p>
</li>
<li>
<p>Whether synchronous capture is enabled or disabled for the table. If the synchronous capture is enabled for a table, then it captures DML changes made to the table. If synchronous capture is not enabled for a table, then it does not capture DML changes made to the table.</p>
</li>
</ul>
<p>To display this information, run the following query:</p>
<pre>
COLUMN STREAMS_NAME HEADING 'Synchronous|Capture Name' FORMAT A15
COLUMN RULE_NAME HEADING 'Rule Name' FORMAT A15
COLUMN SUBSETTING_OPERATION HEADING 'Subsetting|Operation' FORMAT A10
COLUMN TABLE_OWNER HEADING 'Table|Owner' FORMAT A10
COLUMN TABLE_NAME HEADING 'Table Name' FORMAT A15
COLUMN ENABLED HEADING 'Enabled?' FORMAT A8

SELECT r.STREAMS_NAME, 
       r.RULE_NAME, 
       r.SUBSETTING_OPERATION,
       t.TABLE_OWNER, 
       t.TABLE_NAME, 
       t.ENABLED
   FROM DBA_STREAMS_TABLE_RULES r,
        DBA_SYNC_CAPTURE_TABLES t
   WHERE r.STREAMS_TYPE = 'SYNC_CAPTURE' AND
         r.TABLE_OWNER  = t.TABLE_OWNER AND
         r.TABLE_NAME   = t.TABLE_NAME;
</pre>
<p>Your output looks similar to the following:</p>
<pre>
Synchronous                     Subsetting Table
Capture Name    Rule Name       Operation  Owner      Table Name      Enabled?
--------------- --------------- ---------- ---------- --------------- --------
SYNC01_CAPTURE  EMPLOYEES20                HR         EMPLOYEES       YES
SYNC02_CAPTURE  DEPARTMENTS24   DELETE     HR         DEPARTMENTS     YES
SYNC02_CAPTURE  DEPARTMENTS23   UPDATE     HR         DEPARTMENTS     YES
SYNC02_CAPTURE  DEPARTMENTS22   INSERT     HR         DEPARTMENTS     YES
</pre>
<p>This output indicates that synchronous capture <code>sync01_capture</code> captures DML changes made to the <code>hr.employees</code> table. This output also indicates that synchronous capture <code>sync02_capture</code> captures a subset of the changes to the <code>hr.departments</code> table.</p>
<p>If the <code>ENABLED</code> column shows <code>NO</code> for a table, then synchronous capture does not capture changes to the table. The <code>ENABLED</code> column shows <code>NO</code> when a table rule is added to a synchronous capture rule set by a procedure other than <code>ADD_TABLE_RULES</code> or <code>ADD_SUBSET_RULES</code> in the <code>DBMS_STREAMS_ADM</code> package. For example, if the <code>ADD_RULE</code> procedure in the <code>DBMS_RULE_ADM</code> package adds a table rule to a synchronous capture rule set, then the table appears when you query the <code>DBA_SYNC_CAPTURE_TABLES</code> view, but synchronous capture does not capture DML changes to the table. No results appear in the <code>DBA_SYNC_CAPTURE_TABLES</code> view for schema and global rules.</p>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="i1013673"></a>
<div id="STRMS905" class="sect1">
<h2 class="sect1">Viewing the Extra Attributes Captured by Implicit Capture<a id="sthref1109"></a><a id="sthref1110"></a></h2>
<p>You can use the <code>INCLUDE_EXTRA_ATTRIBUTE</code> procedure in the <code>DBMS_CAPTURE_ADM</code> package to instruct a <a href="strms_glossary.htm#CHDBHECD"><span class="xrefglossterm">capture process</span></a> or <a href="strms_glossary.htm#CBACHEDJ"><span class="xrefglossterm">synchronous capture</span></a> to capture one or more extra attributes and include the extra attributes in LCRs. The following query displays the extra attributes included in the LCRs captured by each capture process and synchronous capture in the local database:</p>
<pre>
COLUMN CAPTURE_NAME HEADING 'Capture Process or|Synchronous Capture' FORMAT A20
COLUMN ATTRIBUTE_NAME HEADING 'Attribute Name' FORMAT A15
COLUMN INCLUDE HEADING 'Include Attribute in LCRs?' FORMAT A30

SELECT CAPTURE_NAME, ATTRIBUTE_NAME, INCLUDE 
  FROM DBA_CAPTURE_EXTRA_ATTRIBUTES
  ORDER BY CAPTURE_NAME;
</pre>
<p>Your output looks similar to the following:</p>
<pre>
Capture Process or   Attribute Name  Include Attribute in LCRs?
Synchronous Capture
-------------------- --------------- ------------------------------
SYNC_CAPTURE         ROW_ID          NO
SYNC_CAPTURE         SERIAL#         NO
SYNC_CAPTURE         SESSION#        NO
SYNC_CAPTURE         THREAD#         NO
SYNC_CAPTURE         TX_NAME         YES
SYNC_CAPTURE         USERNAME        NO
</pre>
<p>Based on this output, the capture process or synchronous capture named <code>sync_capture</code> includes the transaction name (<code>tx_name</code>) in the LCRs that it captures, but this capture process or synchronous capture does not include any other extra attributes in the LCRs that it captures. To determine whether name returned by the <code>CAPTURE_NAME</code> column is a capture process or a synchronous capture, query the <code>DBA_CAPTURE</code> and <code>DBA_SYNC_CAPTURE</code> views.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="strms_capture.htm#CACHIIJF">"Extra Information in LCRs"</a></p>
</li>
<li>
<p><a href="strms_mcap.htm#i1011044">"Managing Extra Attributes in Captured LCRs"</a></p>
</li>
<li>
<p><a class="olink ARPLS522" href="../../appdev.112/e40758/d_cap_a.htm#ARPLS522"><span class="italic">Oracle Database PL/SQL Packages and Types Reference</span></a> for more information about the <code>INCLUDE_EXTRA_ATTRIBUTE</code> procedure</p>
</li>
</ul>
</div>
</div>
<!-- class="sect1" --></div>
<!-- class="chapter" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment1624">
<tr>
<td class="cellalignment1631">
<table class="cellalignment1629">
<tr>
<td class="cellalignment1628"><a href="strms_topology.htm"><img width="24" height="24" src="../../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment1628"><a href="strms_qpmon.htm"><img width="24" height="24" src="../../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;2002, 2013,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment1633">
<table class="cellalignment1627">
<tr>
<td class="cellalignment1628"><a href="../../index.htm"><img width="24" height="24" src="../../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment1628"><a href="../../nav/portal_booklist.htm"><img width="24" height="24" src="../../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment1628"><a href="toc.htm"><img width="24" height="24" src="../../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment1628"><a href="index.htm"><img width="24" height="24" src="../../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment1628"><a href="../../nav/mindx.htm"><img width="24" height="24" src="../../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment1628"><a href="../../dcommon/html/feedback.htm"><img width="24" height="24" src="../../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>
</body>
</html>
