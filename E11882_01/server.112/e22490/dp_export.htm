<!DOCTYPE html>
<html lang="en" >
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1">
<meta charset="utf-8">
<title>Data Pump Export</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Merged Version 1093" />
<meta name="dcterms.created" content="2018-03-26T15:54:34Z" />
<meta name="robots" content="all" />
<meta name="dcterms.title" content="Database Utilities" />
<meta name="dcterms.identifier" content="E22490-08" />
<meta name="dcterms.isVersionOf" content="SUTIL" />
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;1996, 2018,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved." />
<link rel="Start" href="../../index.htm" title="Home" type="text/html" />
<link rel="Copyright" href="../../dcommon/html/cpyr.htm" title="Copyright" type="text/html" />

<script type="application/javascript"  src="../../dcommon/js/headfoot.js"></script>
<script type="application/javascript"  src="../../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html" />
<link rel="Index" href="index.htm" title="Index" type="text/html" />
<link rel="Prev" href="dp_overview.htm" title="Previous" type="text/html" />
<link rel="Next" href="dp_import.htm" title="Next" type="text/html" />
<link rel="alternate" href="../e22490.pdf" title="PDF version" type="application/pdf" />
<link rel="schema.dcterms" href="http://purl.org/dc/terms/" />
<link rel="stylesheet" href="../../dcommon/css/fusiondoc.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/header.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/footer.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/fonts.css">
<link rel="stylesheet" href="../../dcommon/css/foundation.css">
<link rel="stylesheet" href="../../dcommon/css/codemirror.css">
<link rel="stylesheet" type="text/css" title="Default" href="../../nav/css/html5.css">
<link rel="stylesheet" href="../../dcommon/css/respond-480-tablet.css">
<link rel="stylesheet" href="../../dcommon/css/respond-768-laptop.css">
<link rel="stylesheet" href="../../dcommon/css/respond-1140-deskop.css">
<script type="application/javascript" src="../../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">10/36</span> <!-- End Header -->
<div id="SUTIL200" class="chapter"><a id="g1022624"></a> <a id="i1007466"></a>
<h1 class="chapter"><span class="secnum">2</span> Data Pump Export</h1>
<p>This chapter describes the Oracle Data Pump Export utility (expdp). The following topics are discussed:</p>
<ul>
<li>
<p><a href="#i1006388">What Is Data Pump Export?</a></p>
</li>
<li>
<p><a href="#i1012781">Invoking Data Pump Export</a></p>
</li>
<li>
<p><a href="#i1009903">Filtering During Export Operations</a></p>
</li>
<li>
<p><a href="#i1006293">Parameters Available in Export's Command-Line Mode</a></p>
</li>
<li>
<p><a href="#i1005616">Commands Available in Export's Interactive-Command Mode</a></p>
</li>
<li>
<p><a href="#i1006376">Examples of Using Data Pump Export</a></p>
</li>
<li>
<p><a href="#BEHBGGEB">Syntax Diagrams for Data Pump Export</a></p>
</li>
</ul>
<a id="i1006388"></a>
<div id="SUTIL823" class="sect1">
<h2 class="sect1">What Is Data Pump Export?</h2>
<p>Data Pump Export (hereinafter referred to as Export for ease of reading) is a utility for unloading data and metadata into a set of operating system files called a dump file set. The dump file set can be imported only by the Data Pump Import utility. The dump file set can be imported on the same system or it can be moved to another system and loaded there.</p>
<p>The dump file set<a id="sthref34"></a> is made up of one or more disk files that contain table data, database object metadata, and control information. The files are written in a proprietary, binary format. During an import operation, the Data Pump Import utility uses these files to locate each database object in the dump file set.</p>
<p>Because the dump files are written by the server, rather than by the client, the database administrator (DBA) must create directory objects that define the server locations to which files are written. See <a href="dp_overview.htm#i1009520">"Default Locations for Dump, Log, and SQL Files"</a> for more information about directory objects.</p>
<p>Data Pump Export enables you to specify that a job should move a subset of the data and metadata, as determined by the export mode. This is done using data filters<a id="sthref35"></a> and metadata filters, which are specified through Export parameters. See <a href="#i1009903">"Filtering During Export Operations"</a>.</p>
<p>To see some examples of the various ways in which you can use Data Pump Export, refer to <a href="#i1006376">"Examples of Using Data Pump Export"</a>.</p>
</div>
<!-- class="sect1" -->
<a id="i1012781"></a>
<div id="SUTIL824" class="sect1">
<h2 class="sect1">Invoking Data Pump Export</h2>
<p>The Data Pump Export utility is invoked using the <code dir="ltr">expdp</code> command. The characteristics of the export operation are determined by the Export parameters you specify. These parameters can be specified either on the command line or in a parameter file.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
Do not invoke Export<a id="sthref36"></a> as <code dir="ltr">SYSDBA,</code> except at the request of Oracle technical support. <code dir="ltr">SYSDBA</code> is used internally and has specialized functions; its behavior is not the same as for general users.</div>
<p>The following sections contain more information about invoking Export:</p>
<ul>
<li>
<p><a href="#i1007106">"Data Pump Export Interfaces"</a></p>
</li>
<li>
<p><a href="#i1007114">"Data Pump Export Modes"</a></p>
</li>
<li>
<p><a href="#BEHIJGJA">"Network Considerations"</a></p>
</li>
</ul>
<a id="i1007106"></a>
<div id="SUTIL825" class="sect2">
<h3 class="sect2">Data Pump Export Interfaces</h3>
<p>You can interact<a id="sthref37"></a> with Data Pump Export by using a command line, a parameter file, or an interactive-command mode.</p>
<ul>
<li>
<p>Command-Line Interface: Enables you to specify most of the Export parameters directly on the command line. For a complete description of the parameters available in the command-line interface, see <a href="#i1006293">"Parameters Available in Export's Command-Line Mode"</a>.</p>
</li>
<li>
<p>Parameter File Interface: Enables you to specify command-line parameters in a parameter file. The only exception is the <code dir="ltr">PARFILE</code> parameter, because parameter files cannot be nested. The use of parameter files is recommended if you are using parameters whose values require quotation marks. See <a href="#BEHJHGHB">"Use of Quotation Marks On the Data Pump Command Line"</a>.</p>
</li>
<li>
<p>Interactive-Command Interface<a id="sthref38"></a>: Stops logging to the terminal and displays the Export prompt, from which you can enter various commands, some of which are specific to interactive-command mode. This mode is enabled by pressing Ctrl+C during an export operation started with the command-line interface or the parameter file interface. Interactive-command mode is also enabled when you attach to an executing or stopped job.</p>
<p>For a complete description of the commands available in interactive-command mode, see <a href="#i1005616">"Commands Available in Export's Interactive-Command Mode"</a>.</p>
</li>
</ul>
</div>
<!-- class="sect2" -->
<a id="i1007114"></a>
<div id="SUTIL826" class="sect2">
<h3 class="sect2">Data Pump Export Modes</h3>
<p>Export provides different modes<a id="sthref39"></a> for unloading different portions of the database. The mode is specified on the command line, using the appropriate parameter. The available modes are described in the following sections:</p>
<ul>
<li>
<p><a href="#i1007504">"Full Export Mode"</a></p>
</li>
<li>
<p><a href="#i1007509">"Schema Mode"</a></p>
</li>
<li>
<p><a href="#i1007514">"Table Mode"</a></p>
</li>
<li>
<p><a href="#i1007519">"Tablespace Mode"</a></p>
</li>
<li>
<p><a href="#i1007524">"Transportable Tablespace Mode"</a></p>
</li>
</ul>
<div class="infobox-note">
<p class="notep1">Note:</p>
Several system schemas cannot be exported because they are not user schemas; they contain Oracle-managed data and metadata. Examples of system schemas that are not exported include <code dir="ltr">SYS</code>, <code dir="ltr">ORDSYS</code>, and <code dir="ltr">MDSYS</code>.</div>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#i1006376">"Examples of Using Data Pump Export"</a></div>
<a id="i1007504"></a>
<div id="SUTIL827" class="sect3">
<h4 class="sect3">Full Export Mode</h4>
<p>A full<a id="sthref40"></a> export is specified using the <code dir="ltr">FULL</code> parameter. In a full database export, the entire<a id="sthref41"></a> database is unloaded. This mode requires that you have the <code dir="ltr">DATAPUMP_EXP_FULL_DATABASE</code> role.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#i1006790">"FULL"</a> for a description of the Export <code dir="ltr">FULL</code> parameter</div>
</div>
<!-- class="sect3" -->
<a id="i1007509"></a>
<div id="SUTIL828" class="sect3">
<h4 class="sect3">Schema Mode</h4>
<p>A schema<a id="sthref42"></a> export is specified using the <code dir="ltr">SCHEMAS</code> parameter. This is the default export mode. If you have the <code dir="ltr">DATAPUMP_EXP_FULL_DATABASE</code> role, then you can specify a list of schemas, optionally including the schema definitions themselves and also system privilege grants to those schemas. If you do not have the <code dir="ltr">DATAPUMP_EXP_FULL_DATABASE</code> role, then you can export only your own schema.</p>
<p>The <code dir="ltr">SYS</code> schema cannot be used as a source schema for export jobs.</p>
<p>Cross-schema references are not exported unless the referenced schema is also specified in the list of schemas to be exported. For example, a trigger defined on a table within one of the specified schemas, but that resides in a schema not explicitly specified, is not exported. This is also true for external type definitions upon which tables in the specified schemas depend. In such a case, it is expected that the type definitions already exist in the target instance at import time.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#i1006804">"SCHEMAS"</a> for a description of the Export <code dir="ltr">SCHEMAS</code> parameter</div>
</div>
<!-- class="sect3" -->
<a id="i1007514"></a>
<div id="SUTIL829" class="sect3">
<h4 class="sect3">Table Mode</h4>
<p>A table<a id="sthref43"></a> mode export is specified using the <code dir="ltr">TABLES</code> parameter. In table mode, only a specified set of tables, partitions, and their dependent objects are unloaded.</p>
<p>If you specify the <code dir="ltr">TRANSPORTABLE=ALWAYS</code> parameter with the <code dir="ltr">TABLES</code> parameter, then only object metadata is unloaded. To move the actual data, you copy the data files to the target database. This results in quicker export times. If you are moving data files between releases or platforms, then the data files may need to be processed by Oracle Recovery Manager (RMAN).</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink BRADV05432" href="../../backup.112/e10642/rcmxplat.htm#BRADV05432"><span class="italic">Oracle Database Backup and Recovery User's Guide</span></a> for more information on transporting data across platforms</div>
<p>You must have the <code dir="ltr">DATAPUMP_EXP_FULL_DATABASE</code> role to specify tables that are not in your own schema. Note that type definitions for columns are <span class="italic">not</span> exported in table mode. It is expected that the type definitions already exist in the target instance at import time. Also, as in schema exports, cross-schema references are not exported.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="#i1006816">"TABLES"</a> for a description of the Export <code dir="ltr">TABLES</code> parameter</p>
</li>
<li>
<p><a href="#BABCIEEI">"TRANSPORTABLE"</a> for a description of the Export <code dir="ltr">TRANSPORTABLE</code> parameter</p>
</li>
</ul>
</div>
</div>
<!-- class="sect3" -->
<a id="i1007519"></a>
<div id="SUTIL830" class="sect3">
<h4 class="sect3">Tablespace Mode</h4>
<p>A tablespace<a id="sthref44"></a> export is specified using the <code dir="ltr">TABLESPACES</code> parameter. In tablespace mode, only the tables contained in a specified set of tablespaces are unloaded. If a table is unloaded, then its dependent objects are also unloaded. Both object metadata and data are unloaded. In tablespace mode, if any part of a table resides in the specified set, then that table and all of its dependent objects are exported. Privileged users get all tables. Unprivileged users get only the tables in their own schemas.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="#i1006828">"TABLESPACES"</a> for a description of the Export <code dir="ltr">TABLESPACES</code> parameter</p>
</li>
</ul>
</div>
</div>
<!-- class="sect3" -->
<a id="i1007524"></a>
<div id="SUTIL831" class="sect3">
<h4 class="sect3">Transportable Tablespace Mode</h4>
<p>A transportable tablespace<a id="sthref45"></a> export is specified using the <code dir="ltr">TRANSPORT_TABLESPACES</code> parameter. In transportable tablespace mode, only the metadata for the tables (and their dependent objects) within a specified set of tablespaces is exported. The tablespace data files are copied in a separate operation. Then, a transportable tablespace import is performed to import the dump file containing the metadata and to specify the data files to use.</p>
<p>Transportable tablespace mode requires that the specified tables be completely self-contained. That is, all storage segments of all tables (and their indexes) defined within the tablespace set must also be contained within the set. If there are self-containment violations, then Export identifies all of the problems without actually performing the export.</p>
<p>Transportable tablespace exports cannot be restarted once stopped. Also, they cannot have a degree of parallelism greater than 1.</p>
<p>Encrypted columns are not supported in transportable tablespace mode.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
You cannot export transportable tablespaces and then import them into a database at a lower release level. The target database must be at the same or higher release level as the source database.</div>
<p class="subhead2"><a id="BEHDGGGI"></a><a id="SUTIL3776"></a>Considerations for Time Zone File Versions in Transportable Tablespace Mode</p>
<p>Jobs performed in transportable tablespace mode have the following requirements concerning time zone file versions:<a id="sthref46"></a><a id="sthref47"></a></p>
<ul>
<li>
<p>If the source is Oracle Database 11<span class="italic">g</span> release 2 (11.2.0.2) or later and there are tables in the transportable set that use TIMESTAMP WITH TIMEZONE (TSTZ) columns, then the time zone file version on the target database must exactly match the time zone file version on the source database.</p>
</li>
<li>
<p>If the source is earlier than Oracle Database 11<span class="italic">g</span> release 2 (11.2.0.2), then the time zone file version must be the same on the source and target database for all transportable jobs regardless of whether the transportable set uses TSTZ columns.</p>
</li>
</ul>
<p>If these requirements are not met, then the import job aborts before anything is imported. This is because if the import job were allowed to import the objects, there might be inconsistent results when tables with TSTZ columns were read.</p>
<p>To identify the time zone file version of a database, you can execute the following SQL statement:</p>
<pre dir="ltr">
SQL&gt; SELECT VERSION FROM V$TIMEZONE_FILE;
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="#BABIEGEI">"TRANSPORT_FULL_CHECK"</a></p>
</li>
<li>
<p><a href="#i1006840">"TRANSPORT_TABLESPACES"</a></p>
</li>
<li>
<p><a class="olink ADMIN10140" href="../../server.112/e25494/tspaces.htm#ADMIN10140"><span class="italic">Oracle Database Administrator's Guide</span></a> for more information about transportable tablespaces</p>
</li>
<li>
<p><a class="olink NLSPG004" href="../../server.112/e10729/ch4datetime.htm#NLSPG004"><span class="italic">Oracle Database Globalization Support Guide</span></a> for more information about time zone file versions</p>
</li>
</ul>
</div>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="BEHIJGJA"></a>
<div id="SUTIL832" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Network Considerations</h3>
<p>You can specify a connect identifier in the connect string when you invoke the Data Pump Export utility. This identifier can specify a database instance that is different from the current instance identified by the current Oracle System ID (SID). The connect identifier can be an Oracle*Net connect descriptor or a net service name (usually defined in the <code dir="ltr">tnsnames.ora</code> file) that maps to a connect descriptor. Use of a connect identifier requires that you have Oracle Net Listener running (to start the default listener, enter <code dir="ltr">lsnrctl</code> <code dir="ltr">start</code>). The following is an example of this type of connection, in which <code dir="ltr">inst1</code> is the connect identifier:</p>
<pre dir="ltr">
expdp hr@inst1 DIRECTORY=dpump_dir1 DUMPFILE=hr.dmp TABLES=employees
</pre>
<p>Export then prompts you for a password:</p>
<pre dir="ltr">
Password: <span class="italic">password</span>
</pre>
<p>The local Export client connects to the database instance defined by the connect identifier <code dir="ltr">inst1</code> (a net service name), retrieves data from <code dir="ltr">inst1</code>, and writes it to the dump file <code dir="ltr">hr.dmp</code> on <code dir="ltr">inst1</code>.</p>
<p>Specifying a connect identifier when you invoke the Export utility is different from performing an export operation using the <code dir="ltr">NETWORK_LINK</code> parameter. When you start an export operation and specify a connect identifier, the local Export client connects to the database instance identified by the connect identifier, retrieves data from that database instance, and writes it to a dump file set on that database instance. Whereas, when you perform an export using the <code dir="ltr">NETWORK_LINK</code> parameter, the export is performed using a database link. (A database link is a connection between two physical database servers that allows a client to access them as one logical database.)</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="#i1011008">"NETWORK_LINK"</a></p>
</li>
<li>
<p><a class="olink ADMIN12083" href="../../server.112/e25494/ds_concepts.htm#ADMIN12083"><span class="italic">Oracle Database Administrator's Guide</span></a> for more information about database links</p>
</li>
<li>
<p><a class="olink NETAG" href="../../network.112/e41945/toc.htm"><span class="italic">Oracle Database Net Services Administrator's Guide</span></a> for more information about connect identifiers and Oracle Net Listener</p>
</li>
<li>
<p><a class="olink HETER" href="../../server.112/e11050/toc.htm"><span class="italic">Oracle Database Heterogeneous Connectivity User's Guide</span></a></p>
</li>
</ul>
</div>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="i1009903"></a>
<div id="SUTIL833" class="sect1">
<h2 class="sect1">Filtering During Export Operations</h2>
<p>Data Pump Export provides data and metadata filtering capability to help you limit the type of information that is exported.</p>
<div id="SUTIL834" class="sect2"><a id="sthref48"></a>
<h3 class="sect2">Data Filters</h3>
<p>Data specific filtering is implemented through the <code dir="ltr">QUERY</code> and <code dir="ltr">SAMPLE</code> parameters, which specify restrictions on the table rows that are to be exported.</p>
<p>Data filtering can also occur indirectly because of metadata filtering, which can include or exclude table objects along with any associated row data.</p>
<p>Each data filter can be specified once per table within a job. If different filters using the same name are applied to both a particular table and to the whole job, then the filter parameter supplied for the specific table takes precedence.</p>
</div>
<!-- class="sect2" -->
<a id="i1012306"></a>
<div id="SUTIL835" class="sect2">
<h3 class="sect2">Metadata Filters</h3>
<p>Metadata filtering is implemented through the <code dir="ltr">EXCLUDE</code> and <code dir="ltr">INCLUDE</code> parameters. The <code dir="ltr">EXCLUDE</code> and <code dir="ltr">INCLUDE</code> parameters are mutually exclusive.</p>
<p>Metadata filters identify a set of objects to be included or excluded from an Export or Import operation. For example, you could request a full export, but without Package Specifications or Package Bodies.</p>
<p>To use filters correctly and to get the results you expect, remember that <span class="italic">dependent objects of an identified object are processed along with the identified object.</span> For example, if a filter specifies that an index is to be included in an operation, then statistics from that index will also be included. Likewise, if a table is excluded by a filter, then indexes, constraints, grants, and triggers upon the table will also be excluded by the filter.</p>
<p>If multiple filters are specified for an object type, then an implicit <code dir="ltr">AND</code> operation is applied to them. That is, objects pertaining to the job must pass <span class="italic">all</span> of the filters applied to their object types.</p>
<p>The same metadata filter name can be specified multiple times within a job.</p>
<p>To see a list of valid object types, query the following views: <code dir="ltr">DATABASE_EXPORT_OBJECTS</code> for full mode, <code dir="ltr">SCHEMA_EXPORT_OBJECTS</code> for schema mode, and <code dir="ltr">TABLE_EXPORT_OBJECTS</code> for table and tablespace mode. The values listed in the <code dir="ltr">OBJECT_PATH</code> column are the valid object types. For example, you could perform the following query:</p>
<pre dir="ltr">
SQL&gt; SELECT OBJECT_PATH, COMMENTS FROM SCHEMA_EXPORT_OBJECTS
  2  WHERE OBJECT_PATH LIKE '%GRANT' AND OBJECT_PATH NOT LIKE '%/%';
</pre>
<p>The output of this query looks similar to the following:</p>
<pre dir="ltr">
OBJECT_PATH
--------------------------------------------------------------------------------
COMMENTS
--------------------------------------------------------------------------------
GRANT
Object grants on the selected tables
 
OBJECT_GRANT
Object grants on the selected tables
 
PROCDEPOBJ_GRANT
Grants on instance procedural objects
 
PROCOBJ_GRANT
Schema procedural object grants in the selected schemas
 
ROLE_GRANT
Role grants to users associated with the selected schemas
 
SYSTEM_GRANT
System privileges granted to users associated with the selected schemas
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#i1007829">"EXCLUDE"</a> and <a href="#i1007837">"INCLUDE"</a></div>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="i1006293"></a>
<div id="SUTIL836" class="sect1">
<h2 class="sect1">Parameters Available in Export's Command-Line Mode</h2>
<p>This section describes the parameters available in the command-line mode<a id="sthref49"></a> of Data Pump Export. Be sure to read the following sections before using the Export parameters:</p>
<ul>
<li>
<p><a href="#CIHCAFIG">"Specifying Export Parameters"</a></p>
</li>
<li>
<p><a href="#BEHJHGHB">"Use of Quotation Marks On the Data Pump Command Line"</a></p>
</li>
</ul>
<p>Many of the parameter descriptions include an example of how to use the parameter. For background information on setting up the necessary environment to run the examples, see:</p>
<ul>
<li>
<p><a href="#BEHCECFD">"Using the Export Parameter Examples"</a></p>
</li>
</ul>
<p class="subhead1"><a id="CIHCAFIG"></a><a id="SUTIL3756"></a>Specifying Export Parameters</p>
<p>For parameters that can have multiple values specified, the values can be separated by commas or by spaces. For example, you could specify <code dir="ltr">TABLES=employees,jobs</code> or <code dir="ltr">TABLES=employees jobs</code>.</p>
<p>For every parameter you enter, you must enter an equal sign (=) and a value. Data Pump has no other way of knowing that the previous parameter specification is complete and a new parameter specification is beginning. For example, in the following command line, even though <code dir="ltr">NOLOGFILE</code> is a valid parameter, it would be interpreted as another dumpfile name for the <code dir="ltr">DUMPFILE</code> parameter:</p>
<pre dir="ltr">
expdp DIRECTORY=dpumpdir DUMPFILE=test.dmp NOLOGFILE TABLES=employees
</pre>
<p>This would result in two dump files being created, <code dir="ltr">test.dmp</code> and <code dir="ltr">nologfile.dmp</code>.</p>
<p>To avoid this, specify either <code dir="ltr">NOLOGFILE=YES</code> or <code dir="ltr">NOLOGFILE=NO</code>.</p>
<p class="subhead2"><a id="BEHJHGHB"></a><a id="SUTIL2885"></a>Use of Quotation Marks On the Data Pump Command Line<a id="sthref50"></a><a id="sthref51"></a></p>
<p>Some operating systems treat quotation marks as special characters and will therefore not pass them to an application unless they are preceded by an escape character, such as the backslash (\). This is true both on the command line and within parameter files. Some operating systems may require an additional set of single or double quotation marks on the command line around the entire parameter value containing the special characters.</p>
<p>The following examples are provided to illustrate these concepts. Be aware that they may not apply to your particular operating system and that this documentation cannot anticipate the operating environments unique to each user.</p>
<p>Suppose you specify the <code dir="ltr">TABLES</code> parameter in a parameter file, as follows:</p>
<pre dir="ltr">
TABLES = \"MixedCaseTableName\"
</pre>
<p>If you were to specify that on the command line, some operating systems would require that it be surrounded by single quotation marks, as follows:</p>
<pre dir="ltr">
TABLES = '\"MixedCaseTableName\"'
</pre>
<p>To avoid having to supply additional quotation marks on the command line, Oracle recommends the use of parameter files. Also, note that if you use a parameter file and the parameter value being specified does not have quotation marks as the first character in the string (for example, <code dir="ltr">TABLES=scott."EmP"</code>), then the use of escape characters may not be necessary on some systems.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p>The Export <a href="#CIHHECFF">"PARFILE"</a> parameter</p>
</li>
<li>
<p><a href="dp_overview.htm#i1009520">"Default Locations for Dump, Log, and SQL Files"</a> for information about creating default directory objects</p>
</li>
<li>
<p><a href="#i1006376">"Examples of Using Data Pump Export"</a></p>
</li>
<li>
<p>Your Oracle operating system-specific documentation for information about how special and reserved characters are handled on your system</p>
</li>
</ul>
</div>
<p class="subhead1"><a id="BEHCECFD"></a><a id="SUTIL2884"></a>Using the Export Parameter Examples</p>
<p>If you try running the examples that are provided for each parameter, be aware of the following:</p>
<ul>
<li>
<p>After you enter the username and parameters as shown in the example, Export is started and you are prompted for a password. You must enter the password before a database connection is made.</p>
</li>
<li>
<p>Most of the examples use the sample schemas of the seed database, which is installed by default when you install Oracle Database. In particular, the human resources (<code dir="ltr">hr</code>) schema is often used.</p>
</li>
<li>
<p>The examples assume that the directory objects, <code dir="ltr">dpump_dir1</code> and <code dir="ltr">dpump_dir2</code>, already exist and that <code dir="ltr">READ</code> and <code dir="ltr">WRITE</code> privileges have been granted to the <code dir="ltr">hr</code> user for these directory objects. See <a href="dp_overview.htm#i1009520">"Default Locations for Dump, Log, and SQL Files"</a> for information about creating directory objects and assigning privileges to them.</p>
</li>
<li>
<p>Some of the examples require the <code dir="ltr">DATAPUMP_EXP_FULL_DATABASE</code> and <code dir="ltr">DATAPUMP_IMP_FULL_DATABASE</code> roles. The examples assume that the <code dir="ltr">hr</code> user has been granted these roles.</p>
</li>
</ul>
<p>If necessary, ask your DBA for help in creating these directory objects and assigning the necessary privileges and roles.</p>
<p>Syntax diagrams of these parameters are provided in <a href="#BEHBGGEB">"Syntax Diagrams for Data Pump Export"</a>.</p>
<p>Unless specifically noted, these parameters can also be specified in a parameter file.</p>
<div id="SUTIL3836" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref52"></a>
<h3 class="sect2">ABORT_STEP</h3>
<p>Default: Null</p>
<p class="subhead1"><a id="SUTIL3837"></a>Purpose</p>
<p>Used to stop the job after it is initialized. This allows the master table to be queried before any data is exported.</p>
<p class="subhead1"><a id="SUTIL3838"></a>Syntax and Description</p>
<pre dir="ltr">
ABORT_STEP=[<span class="italic">n</span> | -1]
</pre>
<p>The possible values correspond to a process order number in the master table. The result of using each number is as follows:</p>
<ul>
<li>
<p><span class="italic">n</span> -- If the value is zero or greater, then the export operation is started and the job is aborted at the object that is stored in the master table with the corresponding process order number.</p>
</li>
<li>
<p>-1 -- If the value is negative one (-1) then abort the job after setting it up, but before exporting any objects or data.</p>
</li>
</ul>
<p class="subhead1"><a id="SUTIL3839"></a>Restrictions</p>
<ul>
<li>
<p>None</p>
</li>
</ul>
<p class="subhead1"><a id="SUTIL3840"></a>Example</p>
<pre dir="ltr">
&gt; expdp hr DIRECTORY=dpump_dir1 DUMPFILE=expdat.dmp SCHEMAS=hr ABORT_STEP=-1
</pre></div>
<!-- class="sect2" -->
<div id="SUTIL3841" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref53"></a>
<h3 class="sect2">ACCESS_METHOD</h3>
<p>Default: <code dir="ltr">AUTOMATIC</code></p>
<p class="subhead1"><a id="SUTIL3842"></a>Purpose</p>
<p>Instructs Export to use a particular method to unload data.</p>
<p class="subhead1"><a id="SUTIL3843"></a>Syntax and Description</p>
<pre dir="ltr">
ACCESS_METHOD=[AUTOMATIC | DIRECT_PATH | EXTERNAL_TABLE]
</pre>
<p>The <code dir="ltr">ACCESS_METHOD</code> parameter is provided so that you can try an alternative method if the default method does not work for some reason. Oracle recommends that you use the default option (<code dir="ltr">AUTOMATIC</code>) whenever possible because it allows Data Pump to automatically select the most efficient method.</p>
<p class="subhead1"><a id="SUTIL3844"></a>Restrictions</p>
<ul>
<li>
<p>If the <code dir="ltr">NETWORK_LINK</code> parameter is also specified, then direct path mode is not supported.</p>
</li>
<li>
<p>The <code dir="ltr">ACCESS_METHOD</code> parameter for Data Pump Export is not valid for transportable tablespace jobs.</p>
</li>
</ul>
<p class="subhead1"><a id="SUTIL3845"></a>Example</p>
<pre dir="ltr">
&gt; expdp hr DIRECTORY=dpump_dir1 DUMPFILE=expdat.dmp SCHEMAS=hr 
ACCESS_METHOD=EXTERNAL_TABLE 
</pre></div>
<!-- class="sect2" -->
<a id="i1007145"></a>
<div id="SUTIL837" class="sect2">
<h3 class="sect2">ATTACH<a id="sthref54"></a></h3>
<p>Default: job currently in the user's schema, if there is only one</p>
<p class="subhead1"><a id="SUTIL2886"></a>Purpose</p>
<p>Attaches<a id="sthref55"></a> the client session to an existing export<a id="sthref56"></a> job and automatically places you in the interactive-command interface. Export displays a description of the job to which you are attached and also displays the Export prompt.</p>
<p class="subhead1"><a id="SUTIL2887"></a>Syntax and Description</p>
<pre dir="ltr">
ATTACH [=[<span class="italic">schema_name</span>.]<span class="italic">job_name</span>]
</pre>
<p>The <code dir="ltr"><span class="codeinlineitalic">schema_name</span></code> is optional. To specify a schema other than your own, you must have the <code dir="ltr">DATAPUMP_EXP_FULL_DATABASE</code> role.</p>
<p>The <code dir="ltr"><span class="codeinlineitalic">job_name</span></code> is optional if only one export job is associated with your schema and the job is active. To attach to a stopped job, you must supply the job name. To see a list of Data Pump job names, you can query the <code dir="ltr">DBA_DATAPUMP_JOBS</code> view or the <code dir="ltr">USER_DATAPUMP_JOBS</code> view.</p>
<p>When you are attached to the job, Export displays a description of the job and then displays the Export prompt.</p>
<p class="subhead1"><a id="SUTIL2888"></a>Restrictions</p>
<ul>
<li>
<p>When you specify the <code dir="ltr">ATTACH</code> parameter, the only other Data Pump parameter you can specify on the command line is <code dir="ltr">ENCRYPTION_PASSWORD</code>.</p>
</li>
<li>
<p>If the job you are attaching to was initially started using an encryption password, then when you attach to the job you must again enter the <code dir="ltr">ENCRYPTION_PASSWORD</code> parameter on the command line to re-specify that password. The only exception to this is if the job was initially started with the <code dir="ltr">ENCRYPTION=ENCRYPTED_COLUMNS_ONLY</code> parameter. In that case, the encryption password is not needed when attaching to the job.</p>
</li>
<li>
<p>You cannot attach to a job in another schema unless it is already running.</p>
</li>
<li>
<p>If the dump file set or master table for the job have been deleted, then the attach operation will fail.</p>
</li>
<li>
<p>Altering the master table in any way will lead to unpredictable results.</p>
</li>
</ul>
<p class="subhead1"><a id="SUTIL2889"></a>Example</p>
<p>The following is an example of using the <code dir="ltr">ATTACH</code> parameter. It assumes that the job, <code dir="ltr">hr.export_job</code>, already exists.</p>
<pre dir="ltr">
&gt; expdp hr ATTACH=hr.export_job
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#i1005616">"Commands Available in Export's Interactive-Command Mode"</a></div>
</div>
<!-- class="sect2" -->
<a id="CIHHFDDI"></a>
<div id="SUTIL2890" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">CLUSTER<a id="sthref57"></a><a id="sthref58"></a></h3>
<p>Default: YES</p>
<p class="subhead1"><a id="SUTIL2891"></a>Purpose</p>
<p>Determines whether Data Pump can use Oracle Real Application Clusters (Oracle RAC) resources and start workers on other Oracle RAC instances.</p>
<p class="subhead1"><a id="SUTIL2892"></a>Syntax and Description</p>
<pre dir="ltr">
CLUSTER=[YES | NO]
</pre>
<p>To force Data Pump Export to use only the instance where the job is started and to replicate pre-Oracle Database 11<span class="italic">g</span> release 2 (11.2) behavior, specify <code dir="ltr">CLUSTER=NO</code>.</p>
<p>To specify a specific, existing service and constrain worker processes to run only on instances defined for that service, use the <code dir="ltr">SERVICE_NAME</code> parameter with the <code dir="ltr">CLUSTER=Y</code>ES parameter.</p>
<p>Use of the <code dir="ltr">CLUSTER</code> parameter may affect performance because there is some additional overhead in distributing the export job across Oracle RAC instances. For small jobs, it may be better to specify <code dir="ltr">CLUSTER=NO</code> to constrain the job to run on the instance where it is started. Jobs whose performance benefits the most from using the <code dir="ltr">CLUSTER</code> parameter are those involving large amounts of data.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="#CIHCIJHC">"SERVICE_NAME"</a></p>
</li>
<li>
<p><a href="dp_overview.htm#CJAJGBFF">"Oracle RAC Considerations"</a></p>
</li>
</ul>
</div>
<p class="subhead1"><a id="SUTIL2893"></a>Example</p>
<p>The following is an example of using the <code dir="ltr">CLUSTER</code> parameter:</p>
<pre dir="ltr">
&gt; expdp hr DIRECTORY=dpump_dir1 DUMPFILE=hr_clus%U.dmp CLUSTER=NO PARALLEL=3
</pre>
<p>This example starts a schema-mode export (the default) of the <code dir="ltr">hr</code> schema. Because <code dir="ltr">CLUSTER=NO</code> is specified, the job uses only the instance on which it started. (If the <code dir="ltr">CLUSTER</code> parameter had not been specified at all, then the default value of <code dir="ltr">Y</code> would have been used and workers would have been started on other instances in the Oracle RAC, if necessary.) The dump files will be written to the location specified for the <code dir="ltr">dpump_dir1</code> directory object. The job can have up to 3 parallel processes.</p>
</div>
<!-- class="sect2" -->
<a id="BABCAJHC"></a>
<div id="SUTIL201" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">COMPRESSION<a id="sthref59"></a><a id="sthref60"></a></h3>
<p>Default: <code dir="ltr">METADATA_ONLY</code></p>
<p class="subhead1"><a id="SUTIL2894"></a>Purpose</p>
<p>Specifies which data to compress before writing to the dump file set.</p>
<p class="subhead1"><a id="SUTIL2895"></a>Syntax and Description</p>
<pre dir="ltr">
COMPRESSION=[ALL | DATA_ONLY | METADATA_ONLY | NONE]
</pre>
<ul>
<li>
<p><code dir="ltr">ALL</code> enables compression for the entire export operation. The <code dir="ltr">ALL</code> option requires that the Oracle Advanced Compression option be enabled.</p>
</li>
<li>
<p><code dir="ltr">DATA_ONLY</code> results in all data being written to the dump file in compressed format. The <code dir="ltr">DATA_ONLY</code> option requires that the Oracle Advanced Compression option be enabled.</p>
</li>
<li>
<p><code dir="ltr">METADATA_ONLY</code> results in all metadata being written to the dump file in compressed format. This is the default.</p>
</li>
<li>
<p><code dir="ltr">NONE</code> disables compression for the entire export operation.</p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink DBLIC141" href="../../license.112/e47877/options.htm#DBLIC141"><span class="italic">Oracle Database Licensing Information</span></a> for information about licensing requirements for the Oracle Advanced Compression option</div>
<p class="subhead1"><a id="SUTIL2896"></a>Restrictions</p>
<ul>
<li>
<p>To make full use of all these compression options, the <code dir="ltr">COMPATIBLE</code> initialization parameter must be set to at least 11.0.0.</p>
</li>
<li>
<p>The <code dir="ltr">METADATA_ONLY</code> option can be used even if the <code dir="ltr">COMPATIBLE</code> initialization parameter is set to 10.2.</p>
</li>
<li>
<p>Compression of data using <code dir="ltr">ALL</code> or <code dir="ltr">DATA_ONLY</code> is valid only in the Enterprise Edition of Oracle Database 11<span class="italic">g</span> and also requires that the Oracle Advanced Compression option be enabled.</p>
</li>
</ul>
<p class="subhead1"><a id="SUTIL2897"></a>Example</p>
<p>The following is an example of using the <code dir="ltr">COMPRESSION</code> parameter:</p>
<pre dir="ltr">
&gt; expdp hr DIRECTORY=dpump_dir1 DUMPFILE=hr_comp.dmp COMPRESSION=METADATA_ONLY
</pre>
<p>This command will execute a schema-mode export that will compress all metadata before writing it out to the dump file, <code dir="ltr">hr_comp.dmp</code>. It defaults to a schema-mode export because no export mode is specified.</p>
</div>
<!-- class="sect2" -->
<a id="i1007851"></a>
<div id="SUTIL838" class="sect2">
<h3 class="sect2">CONTENT<a id="sthref61"></a><a id="sthref62"></a></h3>
<p>Default: <code dir="ltr">ALL</code></p>
<p class="subhead1"><a id="SUTIL2898"></a>Purpose</p>
<p>Enables<a id="sthref63"></a> you to filter what Export unloads: data only, metadata only, or both.</p>
<p class="subhead1"><a id="SUTIL2899"></a>Syntax and Description</p>
<pre dir="ltr">
CONTENT=[ALL | DATA_ONLY | METADATA_ONLY]
</pre>
<ul>
<li>
<p><code dir="ltr">ALL</code> unloads both data and metadata. This is the default.</p>
</li>
<li>
<p><code dir="ltr">DATA_ONLY</code> unloads only table row data; no database object definitions are unloaded.</p>
</li>
<li>
<p><code dir="ltr">METADATA_ONLY</code> unloads only database object definitions; no table row data is unloaded. Be aware that if you specify <code dir="ltr">CONTENT=METADATA_ONLY</code>, then when the dump file is subsequently imported, any index or table statistics imported from the dump file will be locked after the import.</p>
</li>
</ul>
<p class="subhead1"><a id="SUTIL2900"></a>Restrictions</p>
<ul>
<li>
<p>The <code dir="ltr">CONTENT=METADATA_ONLY</code> parameter cannot be used with the <code dir="ltr">TRANSPORT_TABLESPACES</code> (transportable-tablespace mode) parameter or with the <code dir="ltr">QUERY</code> parameter.</p>
</li>
</ul>
<p class="subhead1"><a id="SUTIL2901"></a>Example</p>
<p>The following is an example of using the <code dir="ltr">CONTENT</code> parameter:</p>
<pre dir="ltr">
&gt; expdp hr DIRECTORY=dpump_dir1 DUMPFILE=hr.dmp CONTENT=METADATA_ONLY
</pre>
<p>This command will execute a schema-mode export that will unload only the metadata associated with the <code dir="ltr">hr</code> schema. It defaults to a schema-mode export of the <code dir="ltr">hr</code> schema because no export mode is specified.</p>
</div>
<!-- class="sect2" -->
<a id="BABFJADJ"></a>
<div id="SUTIL839" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">DATA_OPTIONS<a id="sthref64"></a><a id="sthref65"></a></h3>
<p>Default: There is no default. If this parameter is not used, then the special data handling options it provides simply do not take effect.</p>
<p class="subhead1"><a id="SUTIL2902"></a>Purpose</p>
<p>The <code dir="ltr">DATA_OPTIONS</code> parameter designates how certain types of data should be handled during export operations.</p>
<p class="subhead1"><a id="SUTIL2903"></a>Syntax and Description</p>
<pre dir="ltr">
DATA_OPTIONS=XML_CLOBS
</pre>
<p>The <code dir="ltr">XML_CLOBS</code> option specifies that XMLType columns are to be exported in uncompressed CLOB format regardless of the XMLType storage format that was defined for them.</p>
<p>If a table has XMLType columns stored <span class="italic">only</span> as CLOBs, then it is not necessary to specify the <code dir="ltr">XML_CLOBS</code> option because Data Pump automatically exports them in CLOB format.If a table has XMLType columns stored as any combination of object-relational (schema-based), binary, or CLOB formats, then Data Pump exports them in compressed format, by default. This is the preferred method. However, if you need to export the data in uncompressed CLOB format, you can use the <code dir="ltr">XML_CLOBS</code> option to override the default.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink ADXDB3000" href="../../appdev.112/e23094/xdb26imp.htm#ADXDB3000"><span class="italic">Oracle XML DB Developer's Guide</span></a> for information specific to exporting and importing XMLType tables</div>
<p class="subhead1"><a id="SUTIL2904"></a>Restrictions</p>
<ul>
<li>
<p>Using the <code dir="ltr">XML_CLOBS</code> option requires that the same XML schema be used at both export and import time.</p>
</li>
<li>
<p>The Export <code dir="ltr">DATA_OPTIONS</code> parameter requires the job version to be set at <code dir="ltr">11.0.0</code> or higher. See <a href="#i1007148">"VERSION"</a>.</p>
</li>
</ul>
<p class="subhead1"><a id="SUTIL2905"></a>Example</p>
<p>This example shows an export operation in which any XMLType columns in the <code dir="ltr">hr.xdb_tab1</code> table are exported in uncompressed CLOB format regardless of the XMLType storage format that was defined for them.</p>
<pre dir="ltr">
&gt; expdp hr TABLES=hr.xdb_tab1 DIRECTORY=dpump_dir1 DUMPFILE=hr_xml.dmp
VERSION=11.2 DATA_OPTIONS=XML_CLOBS
</pre></div>
<!-- class="sect2" -->
<a id="i1009233"></a>
<div id="SUTIL840" class="sect2">
<h3 class="sect2">DIRECTORY<a id="sthref66"></a></h3>
<p>Default: <code dir="ltr">DATA_PUMP_DIR</code></p>
<p class="subhead1"><a id="SUTIL2906"></a>Purpose</p>
<p>Specifies the default location to which Export can write the dump file set and the log file.</p>
<p class="subhead1"><a id="SUTIL2907"></a>Syntax and Description</p>
<pre dir="ltr">
DIRECTORY=<span class="italic">directory_object</span>
</pre>
<p>The <code dir="ltr"><span class="codeinlineitalic">directory_object</span></code> is the name of a database directory object (<span class="italic">not</span> <span class="italic">the file path of</span> <span class="italic">an actual directory</span>). Upon installation, privileged users have access to a default directory object named <code dir="ltr">DATA_PUMP_DIR</code>. Users with access to the default <code dir="ltr">DATA_PUMP_DIR</code> directory object do not need to use the <code dir="ltr">DIRECTORY</code> parameter at all.</p>
<p><a id="i1006905"></a>A directory object specified on the <code dir="ltr">DUMPFILE</code> or <code dir="ltr">LOGFILE</code> parameter overrides any directory object that you specify for the <code dir="ltr">DIRECTORY</code> parameter.</p>
<p class="subhead1"><a id="SUTIL2908"></a>Example</p>
<p>The following is an example of using the <code dir="ltr">DIRECTORY</code> parameter:</p>
<pre dir="ltr">
&gt; expdp hr DIRECTORY=dpump_dir1 DUMPFILE=employees.dmp CONTENT=METADATA_ONLY
</pre>
<p>The dump file, <code dir="ltr">employees</code>.<code dir="ltr">dmp</code>, will be written to the path that is associated with the directory object <code dir="ltr">dpump_dir1</code>.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="dp_overview.htm#i1009520">"Default Locations for Dump, Log, and SQL Files"</a> for more information about default directory objects and the order of precedence Data Pump uses to determine a file's location</p>
</li>
<li>
<p><a href="dp_overview.htm#CJAJGBFF">"Oracle RAC Considerations"</a></p>
</li>
<li>
<p><a class="olink SQLRF" href="../e41084/toc.htm"><span class="italic">Oracle Database SQL Language Reference</span></a> for information about the <code dir="ltr">CREATE</code> <code dir="ltr">DIRECTORY</code> command</p>
</li>
</ul>
</div>
</div>
<!-- class="sect2" -->
<a id="i1006912"></a>
<div id="SUTIL841" class="sect2">
<h3 class="sect2">DUMPFILE<a id="sthref67"></a></h3>
<p>Default: <code dir="ltr">expdat</code>.<code dir="ltr">dmp</code></p>
<p class="subhead1"><a id="SUTIL2909"></a>Purpose</p>
<p>Specifies<a id="sthref68"></a> the names, and optionally, the directory objects of dump files for an export job.</p>
<p class="subhead1"><a id="SUTIL2910"></a>Syntax and Description</p>
<pre dir="ltr">
DUMPFILE=[<span class="italic">directory_object</span>:]<span class="italic">file_name</span> [, ...]
</pre>
<p>The <code dir="ltr"><span class="codeinlineitalic">directory_object</span></code> is optional if one has already been established by the <code dir="ltr">DIRECTORY</code> parameter. If you supply a value here, then it must be a directory object that already exists and that you have access to. A database directory object that is specified as part of the <code dir="ltr">DUMPFILE</code> parameter overrides a value specified by the <code dir="ltr">DIRECTORY</code> parameter or by the default directory object.</p>
<p>You can supply multiple <code dir="ltr"><span class="codeinlineitalic">file_name</span></code> specifications as a comma-delimited list or in separate <code dir="ltr">DUMPFILE</code> parameter specifications. If no extension is given for the file name, then Export uses the default file extension of .<code dir="ltr">dmp</code>. The file names can contain a substitution variable (<code dir="ltr">%U</code>), which implies that multiple files may be generated. The substitution variable is expanded in the resulting file names into a 2-digit, fixed-width, incrementing integer starting at 01 and ending at 99. If a file specification contains two substitution variables, both are incremented at the same time. For example, <code dir="ltr">exp%Uaa%U.dmp</code> would resolve to <code dir="ltr">exp01aa01.dmp</code>, <code dir="ltr">exp02aa02.dmp</code>, and so forth.</p>
<p>If the <code dir="ltr">FILESIZE</code> parameter is specified, then each dump file will have a maximum of that size and be nonextensible. If more space is required for the dump file set and a template with a substitution variable (<code dir="ltr">%U</code>) was supplied, then a new dump file is automatically created of the size specified by the <code dir="ltr">FILESIZE</code> parameter, if there is room on the device.</p>
<p>As each file specification or file template containing a substitution variable is defined, it is instantiated into one fully qualified file name and Export attempts to create it. The file specifications are processed in the order in which they are specified. If the job needs extra files because the maximum file size is reached, or to keep parallel workers active, then additional files are created if file templates with substitution variables were specified.</p>
<p>Although it is possible to specify multiple files using the <code dir="ltr">DUMPFILE</code> parameter, the export job may only require a subset of those files to hold the exported data. The dump file set displayed at the end of the export job shows exactly which files were used. It is this list of files that is required to perform an import operation using this dump file set. Any files that were not used can be discarded.</p>
<p class="subhead1"><a id="SUTIL2911"></a>Restrictions</p>
<ul>
<li>
<p>Any resulting dump file names that match preexisting dump file names will generate an error and the preexisting dump files will not be overwritten. You can override this behavior by specifying the Export parameter <code dir="ltr">REUSE_DUMPFILES=YES</code>.</p>
</li>
</ul>
<p class="subhead1"><a id="SUTIL2912"></a>Example</p>
<p>The following is an example of using the <code dir="ltr">DUMPFILE</code> parameter:</p>
<pre dir="ltr">
&gt; expdp hr SCHEMAS=hr DIRECTORY=dpump_dir1 DUMPFILE=dpump_dir2:exp1.dmp,
 exp2%U.dmp PARALLEL=3
</pre>
<p>The dump file, <code dir="ltr">exp1</code>.<code dir="ltr">dmp,</code> will be written to the path associated with the directory object <code dir="ltr">dpump_dir2</code> because <code dir="ltr">dpump_dir2</code> was specified as part of the dump file name, and therefore overrides the directory object specified with the <code dir="ltr">DIRECTORY</code> parameter. Because all three parallel processes will be given work to perform during this job, dump files named <code dir="ltr">exp201.dmp</code> and <code dir="ltr">exp202.dmp</code> will be created based on the specified substitution variable <code dir="ltr">exp2%U.dmp</code>. Because no directory is specified for them, they will be written to the path associated with the directory object, <code dir="ltr">dpump_dir1</code>, that was specified with the <code dir="ltr">DIRECTORY</code> parameter.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="dp_overview.htm#i1009999">"Using Substitution Variables"</a> for more information on how substitution variables are handled when you specify them in dump file names</p>
</li>
</ul>
</div>
</div>
<!-- class="sect2" -->
<a id="BABJEGAB"></a>
<div id="SUTIL203" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">ENCRYPTION<a id="sthref69"></a><a id="sthref70"></a></h3>
<p>Default: The default value depends upon the combination of encryption-related parameters that are used. To enable encryption, either the <code dir="ltr">ENCRYPTION</code> or <code dir="ltr">ENCRYPTION_PASSWORD</code> parameter, or both, must be specified.</p>
<p>If only the <code dir="ltr">ENCRYPTION_PASSWORD</code> parameter is specified, then the <code dir="ltr">ENCRYPTION</code> parameter defaults to <code dir="ltr">ALL</code>.</p>
<p>If only the <code dir="ltr">ENCRYPTION</code> parameter is specified and the Oracle encryption wallet is open, then the default mode is <code dir="ltr">TRANSPARENT</code>. If only the <code dir="ltr">ENCRYPTION</code> parameter is specified and the wallet is closed, then an error is returned.</p>
<p>If neither <code dir="ltr">ENCRYPTION</code> nor <code dir="ltr">ENCRYPTION_PASSWORD</code> is specified, then <code dir="ltr">ENCRYPTION</code> defaults to <code dir="ltr">NONE</code>.</p>
<p class="subhead1"><a id="SUTIL2913"></a>Purpose</p>
<p>Specifies whether to encrypt data before writing it to the dump file set.</p>
<p class="subhead1"><a id="SUTIL2914"></a>Syntax and Description</p>
<pre dir="ltr">
ENCRYPTION = [ALL | DATA_ONLY | ENCRYPTED_COLUMNS_ONLY | METADATA_ONLY | NONE]
</pre>
<p><code dir="ltr">ALL</code> enables encryption for all data and metadata in the export operation.</p>
<p><code dir="ltr">DATA_ONLY</code> specifies that only data is written to the dump file set in encrypted format.</p>
<p><code dir="ltr">ENCRYPTED_COLUMNS_ONLY</code> specifies that only encrypted columns are written to the dump file set in encrypted format. To use this option, you must have Oracle Advanced Security transparent data encryption enabled. See <a class="olink ASOAG600" href="../../network.112/e40393/asotrans.htm#ASOAG600"><span class="italic">Oracle Database Advanced Security Administrator's Guide</span></a> for more information about transparent data encryption.</p>
<p><code dir="ltr">METADATA_ONLY</code> specifies that only metadata is written to the dump file set in encrypted format.</p>
<p><code dir="ltr">NONE</code> specifies that no data is written to the dump file set in encrypted format.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
If the data being exported includes SecureFiles<a id="sthref71"></a><a id="sthref72"></a> that you want to be encrypted, then you must specify <code dir="ltr">ENCRYPTION=ALL</code> to encrypt the entire dump file set. Encryption of the entire dump file set is the only way to achieve encryption security for SecureFiles during a Data Pump export operation. For more information about SecureFiles, see <a class="olink ADLOB" href="../../appdev.112/e18294/toc.htm"><span class="italic">Oracle Database SecureFiles and Large Objects Developer's Guide</span></a>.</div>
<p class="subhead1"><a id="SUTIL2915"></a>Restrictions</p>
<ul>
<li>
<p>To specify the <code dir="ltr">ALL</code>, <code dir="ltr">DATA_ONLY</code>, or <code dir="ltr">METADATA_ONLY</code> options, the <code dir="ltr">COMPATIBLE</code> initialization parameter must be set to at least 11.0.0.</p>
</li>
<li>
<p>This parameter is valid only in the Enterprise Edition of Oracle Database 11<span class="italic">g</span>.</p>
</li>
<li>
<p>Data Pump encryption features require that the Oracle Advanced Security option be enabled. See <a class="olink ASOAG" href="../../network.112/e40393/toc.htm"><span class="italic">Oracle Database Advanced Security Administrator's Guide</span></a> for information about licensing requirements for the Oracle Advanced Security option.</p>
</li>
</ul>
<p class="subhead1"><a id="SUTIL2916"></a>Example</p>
<p>The following example performs an export operation in which only data is encrypted in the dump file:</p>
<pre dir="ltr">
&gt; expdp hr DIRECTORY=dpump_dir1 DUMPFILE=hr_enc.dmp JOB_NAME=enc1
ENCRYPTION=data_only ENCRYPTION_PASSWORD=foobar
</pre></div>
<!-- class="sect2" -->
<a id="BABHJECC"></a>
<div id="SUTIL842" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">ENCRYPTION_ALGORITHM<a id="sthref73"></a><a id="sthref74"></a></h3>
<p>Default: <code dir="ltr">AES128</code></p>
<p class="subhead1"><a id="SUTIL2917"></a>Purpose</p>
<p>Specifies which cryptographic algorithm should be used to perform the encryption.</p>
<p class="subhead1"><a id="SUTIL2918"></a>Syntax and Description</p>
<pre dir="ltr">
ENCRYPTION_ALGORITHM = [AES128 | AES192 | AES256]
</pre>
<p>See <a class="olink ASOAG" href="../../network.112/e40393/toc.htm"><span class="italic">Oracle Database Advanced Security Administrator's Guide</span></a> for information about encryption algorithms.</p>
<p class="subhead1"><a id="SUTIL2919"></a>Restrictions</p>
<ul>
<li>
<p>To use this encryption feature, the <code dir="ltr">COMPATIBLE</code> initialization parameter must be set to at least 11.0.0.</p>
</li>
<li>
<p>The <code dir="ltr">ENCRYPTION_ALGORITHM</code> parameter requires that you also specify either the <code dir="ltr">ENCRYPTION</code> or <code dir="ltr">ENCRYPTION_PASSWORD</code> parameter; otherwise an error is returned.</p>
</li>
<li>
<p>This parameter is valid only in the Enterprise Edition of Oracle Database 11<span class="italic">g</span>.</p>
</li>
<li>
<p>Data Pump encryption features require that the Oracle Advanced Security option be enabled. See <a class="olink ASOAG" href="../../network.112/e40393/toc.htm"><span class="italic">Oracle Database Advanced Security Administrator's Guide</span></a> for information about licensing requirements for the Oracle Advanced Security option.</p>
</li>
</ul>
<p class="subhead1"><a id="SUTIL2920"></a>Example</p>
<pre dir="ltr">
&gt; expdp hr DIRECTORY=dpump_dir1 DUMPFILE=hr_enc3.dmp
ENCRYPTION_PASSWORD=foobar ENCRYPTION_ALGORITHM=AES128
</pre></div>
<!-- class="sect2" -->
<a id="BABIJJJE"></a>
<div id="SUTIL843" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">ENCRYPTION_MODE<a id="sthref75"></a><a id="sthref76"></a></h3>
<p>Default: The default mode depends on which other encryption-related parameters are used. If only the <code dir="ltr">ENCRYPTION</code> parameter is specified and the Oracle encryption wallet is open, then the default mode is <code dir="ltr">TRANSPARENT</code>. If only the <code dir="ltr">ENCRYPTION</code> parameter is specified and the wallet is closed, then an error is returned.</p>
<p>If the <code dir="ltr">ENCRYPTION_PASSWORD</code> parameter is specified and the wallet is open, then the default is <code dir="ltr">DUAL</code>. If the <code dir="ltr">ENCRYPTION_PASSWORD</code> parameter is specified and the wallet is closed, then the default is <code dir="ltr">PASSWORD</code>.</p>
<p class="subhead1"><a id="SUTIL2921"></a>Purpose</p>
<p>Specifies the type of security to use when encryption and decryption are performed.</p>
<p class="subhead1"><a id="SUTIL2922"></a>Syntax and Description</p>
<pre dir="ltr">
ENCRYPTION_MODE = [DUAL | PASSWORD | TRANSPARENT]
</pre>
<p><code dir="ltr">DUAL</code> mode creates a dump file set that can later be imported either transparently or by specifying a password that was used when the dual-mode encrypted dump file set was created. When you later import the dump file set created in <code dir="ltr">DUAL</code> mode, you can use either the wallet or the password that was specified with the <code dir="ltr">ENCRYPTION_PASSWORD</code> parameter. <code dir="ltr">DUAL</code> mode is best suited for cases in which the dump file set will be imported on-site using the wallet, but which may also need to be imported offsite where the wallet is not available.</p>
<p><code dir="ltr">PASSWORD</code> mode requires that you provide a password when creating encrypted dump file sets. You will need to provide the same password when you import the dump file set. <code dir="ltr">PASSWORD</code> mode requires that you also specify the <code dir="ltr">ENCRYPTION_PASSWORD</code> parameter. The <code dir="ltr">PASSWORD</code> mode is best suited for cases in which the dump file set will be imported into a different or remote database, but which must remain secure in transit.</p>
<p><code dir="ltr">TRANSPARENT</code> mode allows an encrypted dump file set to be created without any intervention from a database administrator (DBA), provided the required wallet is available. Therefore, the <code dir="ltr">ENCRYPTION_PASSWORD</code> parameter is not required, and will in fact, cause an error if it is used in <code dir="ltr">TRANSPARENT</code> mode. This encryption mode is best suited for cases in which the dump file set will be imported into the same database from which it was exported.</p>
<p class="subhead1"><a id="SUTIL2923"></a>Restrictions</p>
<ul>
<li>
<p>To use <code dir="ltr">DUAL</code> or <code dir="ltr">TRANSPARENT</code> mode, the <code dir="ltr">COMPATIBLE</code> initialization parameter must be set to at least 11.0.0.</p>
</li>
<li>
<p>When you use the <code dir="ltr">ENCRYPTION_MODE</code> parameter, you must also use either the <code dir="ltr">ENCRYPTION</code> or <code dir="ltr">ENCRYPTION_PASSWORD</code> parameter. Otherwise, an error is returned.</p>
</li>
<li>
<p>When you use the <code dir="ltr">ENCRYPTION=</code><code dir="ltr">ENCRYPTED_COLUMNS_ONLY</code>, you cannot use the <code dir="ltr">ENCRYPTION_MODE</code> parameter. Otherwise, an error is returned.</p>
</li>
<li>
<p>This parameter is valid only in the Enterprise Edition of Oracle Database 11<span class="italic">g</span>.</p>
</li>
<li>
<p>Data Pump encryption features require that the Oracle Advanced Security option be enabled. See <a class="olink ASOAG" href="../../network.112/e40393/toc.htm"><span class="italic">Oracle Database Advanced Security Administrator's Guide</span></a> for information about licensing requirements for the Oracle Advanced Security option.</p>
</li>
</ul>
<p class="subhead1"><a id="SUTIL2924"></a>Example</p>
<pre dir="ltr">
&gt; expdp hr DIRECTORY=dpump_dir1 DUMPFILE=hr_enc4.dmp
ENCRYPTION=all ENCRYPTION_PASSWORD=secretwords
ENCRYPTION_ALGORITHM=AES256 ENCRYPTION_MODE=DUAL
</pre></div>
<!-- class="sect2" -->
<a id="BABEIGFB"></a>
<div id="SUTIL844" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">ENCRYPTION_PASSWORD<a id="sthref77"></a><a id="sthref78"></a><a id="sthref79"></a><a id="sthref80"></a></h3>
<p>Default: There is no default; the value is user-provided.</p>
<p class="subhead1"><a id="SUTIL2925"></a>Purpose</p>
<p>Specifies a password for encrypting encrypted column data, metadata, or table data in the export dumpfile. This prevents unauthorized access to an encrypted dump file set.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
Data Pump encryption functionality changed as of Oracle Database 11<span class="italic">g</span> release 1 (11.1). Before release 11.1, the <code dir="ltr">ENCRYPTION_PASSWORD</code> parameter applied only to encrypted columns. However, as of release 11.1, the new <code dir="ltr">ENCRYPTION</code> parameter provides options for encrypting other types of data. This means that if you now specify <code dir="ltr">ENCRYPTION_PASSWORD</code> without also specifying <code dir="ltr">ENCRYPTION</code> and a specific option, then <span class="italic">all</span> data written to the dump file will be encrypted (equivalent to specifying <code dir="ltr">ENCRYPTION=ALL</code>). If you want to re-encrypt <span class="italic">only</span> encrypted columns, then you must now specify <code dir="ltr">ENCRYPTION=ENCRYPTED_COLUMNS_ONLY</code> in addition to <code dir="ltr">ENCRYPTION_PASSWORD</code>.</div>
<p class="subhead1"><a id="SUTIL2926"></a>Syntax and Description</p>
<pre dir="ltr">
ENCRYPTION_PASSWORD = <span class="codeinlineitalic">password</span>
</pre>
<p>Thee <code dir="ltr"><span class="codeinlineitalic">password</span></code> value that is supplied specifies a key for re-encrypting encrypted table columns, metadata, or table data so that they are not written as clear text in the dump file set. If the export operation involves encrypted table columns, but an encryption password is not supplied, then the encrypted columns will be written to the dump file set as clear text and a warning will be issued.</p>
<p>For export operations, this parameter is required if the <code dir="ltr">ENCRYPTION_MODE</code> parameter is set to either <code dir="ltr">PASSWORD</code> or <code dir="ltr">DUAL</code>.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
There is no connection or dependency between the key specified with the Data Pump <code dir="ltr">ENCRYPTION_PASSWORD</code> parameter and the key specified with the <code dir="ltr">ENCRYPT</code> keyword when the table with encrypted columns was initially created. For example, suppose a table is created as follows, with an encrypted column whose key is <code dir="ltr">xyz</code>:
<pre dir="ltr">
CREATE TABLE emp (col1 VARCHAR2(256) ENCRYPT IDENTIFIED BY "xyz");
</pre>
<p>When you export the <code dir="ltr">emp</code> table, you can supply any arbitrary value for <code dir="ltr">ENCRYPTION_PASSWORD</code>. It does not have to be <code dir="ltr">xyz</code>.</p>
</div>
<p class="subhead1"><a id="SUTIL2927"></a>Restrictions</p>
<ul>
<li>
<p>This parameter is valid only in the Enterprise Edition of Oracle Database 11<span class="italic">g</span>.</p>
</li>
<li>
<p>Data Pump encryption features require that the Oracle Advanced Security option be enabled. See <a class="olink ASOAG" href="../../network.112/e40393/toc.htm"><span class="italic">Oracle Database Advanced Security Administrator's Guide</span></a> for information about licensing requirements for the Oracle Advanced Security option.</p>
</li>
<li>
<p>If <code dir="ltr">ENCRYPTION_PASSWORD</code> is specified but <code dir="ltr">ENCRYPTION_MODE</code> is not specified, then it is not necessary to have Oracle Advanced Security transparent data encryption enabled since <code dir="ltr">ENCRYPTION_MODE</code> will default to <code dir="ltr">PASSWORD</code>.</p>
</li>
<li>
<p>The <code dir="ltr">ENCRYPTION_PASSWORD</code> parameter is not valid if the requested encryption mode is <code dir="ltr">TRANSPARENT</code>.</p>
</li>
<li>
<p>To use the <code dir="ltr">ENCRYPTION_PASSWORD</code> parameter if <code dir="ltr">ENCRYPTION_MODE</code> is set to <code dir="ltr">DUAL</code>, you must have Oracle Advanced Security transparent data encryption enabled. See <a class="olink ASOAG" href="../../network.112/e40393/toc.htm"><span class="italic">Oracle Database Advanced Security Administrator's Guide</span></a> for more information about transparent data encryption.</p>
</li>
<li>
<p>For network exports, the <code dir="ltr">ENCRYPTION_PASSWORD</code> parameter in conjunction with <code dir="ltr">ENCRYPTION=ENCRYPTED_COLUMNS_ONLY</code> is not supported with user-defined external tables that have encrypted columns. The table will be skipped and an error message will be displayed, but the job will continue.</p>
</li>
<li>
<p>Encryption attributes for all columns must match between the exported table definition and the target table. For example, suppose you have a table, <code dir="ltr">EMP</code>, and one of its columns is named <code dir="ltr">EMPNO</code>. Both of the following situations would result in an error because the encryption attribute for the <code dir="ltr">EMP</code> column in the source table would not match the encryption attribute for the <code dir="ltr">EMP</code> column in the target table:</p>
<ul>
<li>
<p>The <code dir="ltr">EMP</code> table is exported with the <code dir="ltr">EMPNO</code> column being encrypted, but before importing the table you remove the encryption attribute from the <code dir="ltr">EMPNO</code> column.</p>
</li>
<li>
<p>The <code dir="ltr">EMP</code> table is exported without the <code dir="ltr">EMPNO</code> column being encrypted, but before importing the table you enable encryption on the <code dir="ltr">EMPNO</code> column.</p>
</li>
</ul>
</li>
</ul>
<p class="subhead1"><a id="SUTIL2928"></a>Example</p>
<p>In the following example, an encryption password, <code dir="ltr">123456</code>, is assigned to the dump file, <code dir="ltr">dpcd2be1.dmp</code>.</p>
<pre dir="ltr">
expdp hr TABLES=employee_s_encrypt DIRECTORY=dpump_dir1
DUMPFILE=dpcd2be1.dmp ENCRYPTION=ENCRYPTED_COLUMNS_ONLY 
ENCRYPTION_PASSWORD=123456
</pre>
<p>Encrypted columns in the <code dir="ltr">employee_s_encrypt</code> table, will not be written as clear text in the <code dir="ltr">dpcd2be1.dmp</code> dump file. Note that to subsequently import the <code dir="ltr">dpcd2be1.dmp</code> file created by this example, you will need to supply the same encryption password. (See <a href="dp_import.htm#BABCDGIG">"ENCRYPTION_PASSWORD"</a> for an example of an import operation using the <code dir="ltr">ENCRYPTION_PASSWORD</code> parameter.)</p>
</div>
<!-- class="sect2" -->
<div id="SUTIL845" class="sect2"><a id="sthref81"></a>
<h3 class="sect2">ESTIMATE<a id="sthref82"></a></h3>
<p>Default: <code dir="ltr">BLOCKS</code></p>
<p class="subhead1"><a id="SUTIL2929"></a>Purpose</p>
<p>Specifies<a id="sthref83"></a> the method that Export will use to estimate<a id="sthref84"></a> how much disk space each table in the export job will consume (in bytes). The estimate is printed in the log file and displayed on the client's standard output device. The estimate is for table row data only; it does not include metadata.</p>
<p class="subhead1"><a id="SUTIL2930"></a>Syntax and Description</p>
<pre dir="ltr">
ESTIMATE=[BLOCKS | STATISTICS]
</pre>
<ul>
<li>
<p><code dir="ltr">BLOCKS</code> - The estimate is calculated by multiplying the number of database blocks used by the source objects, times the appropriate block sizes.</p>
</li>
<li>
<p><code dir="ltr">STATISTICS</code> - The estimate is calculated using statistics for each table. For this method to be as accurate as possible, all tables should have been analyzed recently. (Table analysis can be done with either the SQL <code dir="ltr">ANALYZE</code> statement or the <code dir="ltr">DBMS_STATS</code> PL/SQL package.)</p>
</li>
</ul>
<p class="subhead1"><a id="SUTIL2931"></a>Restrictions</p>
<ul>
<li>
<p>If the Data Pump export job involves compressed tables, then the default size estimation given for the compressed table is inaccurate when <code dir="ltr">ESTIMATE=BLOCKS</code> is used. This is because the size estimate does not reflect that the data was stored in a compressed form. To get a more accurate size estimate for compressed tables, use <code dir="ltr">ESTIMATE=STATISTICS</code>.</p>
</li>
<li>
<p>The estimate may also be inaccurate if either the <code dir="ltr">QUERY</code> or <code dir="ltr">REMAP_DATA</code> parameter is used.</p>
</li>
</ul>
<p class="subhead1"><a id="SUTIL2932"></a>Example</p>
<p>The following example shows a use of the <code dir="ltr">ESTIMATE</code> parameter in which the estimate is calculated using statistics for the <code dir="ltr">employees</code> table:</p>
<pre dir="ltr">
&gt; expdp hr TABLES=employees ESTIMATE=STATISTICS DIRECTORY=dpump_dir1
 DUMPFILE=estimate_stat.dmp
</pre></div>
<!-- class="sect2" -->
<a id="i1007146"></a>
<div id="SUTIL846" class="sect2">
<h3 class="sect2">ESTIMATE_ONLY<a id="sthref85"></a></h3>
<p>Default: <code dir="ltr">NO</code></p>
<p class="subhead1"><a id="SUTIL2933"></a>Purpose</p>
<p>Instructs Export to estimate the space that a job would consume, without actually performing the export operation.</p>
<p class="subhead1"><a id="SUTIL2934"></a>Syntax and Description</p>
<pre dir="ltr">
ESTIMATE_ONLY=[YES | NO]
</pre>
<p>If <code dir="ltr">ESTIMATE_ONLY</code>=<code dir="ltr">YES</code>, then Export estimates<a id="sthref86"></a> the space that would be consumed, but quits without actually performing the export operation.</p>
<p class="subhead1"><a id="SUTIL3757"></a>Restrictions</p>
<ul>
<li>
<p>The <code dir="ltr">ESTIMATE_ONLY</code> parameter cannot be used in conjunction with the <code dir="ltr">QUERY</code> parameter.</p>
</li>
</ul>
<p class="subhead1"><a id="SUTIL2935"></a>Example</p>
<p>The following shows an example of using the <code dir="ltr">ESTIMATE_ONLY</code> parameter to determine how much space an export of the <code dir="ltr">HR</code> schema will take.</p>
<pre dir="ltr">
&gt; expdp hr ESTIMATE_ONLY=YES NOLOGFILE=YES SCHEMAS=HR
</pre></div>
<!-- class="sect2" -->
<a id="i1007829"></a>
<div id="SUTIL847" class="sect2">
<h3 class="sect2">EXCLUDE<a id="sthref87"></a></h3>
<p>Default: There is no default</p>
<p class="subhead1"><a id="SUTIL2936"></a>Purpose</p>
<p>Enables<a id="sthref88"></a> you to filter<a id="sthref89"></a> the metadata that is exported by specifying objects and object types to be excluded<a id="sthref90"></a> from the export operation.</p>
<p class="subhead1"><a id="SUTIL2937"></a>Syntax and Description</p>
<pre dir="ltr">
EXCLUDE=<span class="italic">object_type</span>[:<span class="italic">name_clause</span>] [, ...]
</pre>
<p>The <code dir="ltr"><span class="codeinlineitalic">object_type</span></code> specifies the type of object to be excluded. To see a list of valid values for <code dir="ltr"><span class="codeinlineitalic">object_type</span></code>, query the following views: <code dir="ltr">DATABASE_EXPORT_OBJECTS</code> for full mode, <code dir="ltr">SCHEMA_EXPORT_OBJECTS</code> for schema mode, and <code dir="ltr">TABLE_EXPORT_OBJECTS</code> for table and tablespace mode. The values listed in the <code dir="ltr">OBJECT_PATH</code> column are the valid object types.</p>
<p>All object types for the given mode of export will be included in the export <span class="italic">except</span> those specified in an <code dir="ltr">EXCLUDE</code> statement. If an object is excluded, then all of its dependent objects are also excluded. For example, excluding a table will also exclude all indexes and triggers on the table.</p>
<p>The <code dir="ltr"><span class="codeinlineitalic">name_clause</span></code> is optional. It allows selection of specific objects within an object type. It is a SQL expression used as a filter on the type's object names. It consists of a SQL operator and the values against which the object names of the specified type are to be compared. The <code dir="ltr"><span class="codeinlineitalic">name_clause</span></code> applies only to object types whose instances have names (for example, it is applicable to <code dir="ltr">TABLE</code>, but not to <code dir="ltr">GRANT</code>). It must be separated from the object type with a colon and enclosed in double quotation marks, because single quotation marks are required to delimit the name strings. For example, you could set <code dir="ltr">EXCLUDE=INDEX:"LIKE 'EMP%'"</code> to exclude all indexes whose names start with <code dir="ltr">EMP</code>.</p>
<p>The name that you supply for the <code dir="ltr"><span class="codeinlineitalic">name_clause</span></code> must exactly match, including upper and lower casing, an existing object in the database. For example, if the <code dir="ltr"><span class="codeinlineitalic">name_clause</span></code> you supply is for a table named <code dir="ltr">EMPLOYEES</code>, then there must be an existing table named <code dir="ltr">EMPLOYEES</code> using all upper case. If the <code dir="ltr"><span class="codeinlineitalic">name_clause</span></code> were supplied as <code dir="ltr">Employees</code> or <code dir="ltr">employees</code> or any other variation, then the table would not be found.</p>
<p>If no <code dir="ltr"><span class="codeinlineitalic">name_clause</span></code> is provided, then all objects of the specified type are excluded.</p>
<p>More than one <code dir="ltr">EXCLUDE</code> statement can be specified.</p>
<p>Depending on your operating system, the use of quotation marks when you specify a value for this parameter may also require that you use escape characters. Oracle recommends that you place this parameter in a parameter file, which can reduce the number of escape characters that might otherwise be needed on the command line.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="#i1007837">"INCLUDE"</a> for an example of using a parameter file</p>
</li>
<li>
<p><a href="#BEHJHGHB">"Use of Quotation Marks On the Data Pump Command Line"</a></p>
</li>
</ul>
</div>
<p>If the <code dir="ltr"><span class="codeinlineitalic">object_type</span></code> you specify is <code dir="ltr">CONSTRAINT</code>, <code dir="ltr">GRANT</code>, or <code dir="ltr">USER</code>, then you should be aware of the effects this will have, as described in the following paragraphs.</p>
<p class="subhead2"><a id="SUTIL2938"></a>Excluding Constraints</p>
<p>The following constraints cannot be explicitly excluded:</p>
<ul>
<li>
<p><code dir="ltr">NOT</code> <code dir="ltr">NULL</code> constraints</p>
</li>
<li>
<p>Constraints needed for the table to be created and loaded successfully; for example, primary key constraints for index-organized tables, or <code dir="ltr">REF</code> <code dir="ltr">SCOPE</code> and <code dir="ltr">WITH</code> <code dir="ltr">ROWID</code> constraints for tables with <code dir="ltr">REF</code> columns</p>
</li>
</ul>
<p>This means that the following <code dir="ltr">EXCLUDE</code> statements will be interpreted as follows:</p>
<ul>
<li>
<p><code dir="ltr">EXCLUDE=</code><code dir="ltr">CONSTRAINT</code> will exclude all (nonreferential) constraints, except for <code dir="ltr">NOT</code> <code dir="ltr">NULL</code> constraints and any constraints needed for successful table creation and loading.</p>
</li>
<li>
<p><code dir="ltr">EXCLUDE=</code><code dir="ltr">REF_CONSTRAINT</code> will exclude referential integrity (foreign key) constraints.</p>
</li>
</ul>
<p class="subhead2"><a id="SUTIL2939"></a>Excluding Grants and Users</p>
<p>Specifying <code dir="ltr">EXCLUDE</code>=<code dir="ltr">GRANT</code> excludes object grants on all object types and system privilege grants.</p>
<p>Specifying <code dir="ltr">EXCLUDE</code>=<code dir="ltr">USER</code> excludes only the definitions of users, not the objects contained within users' schemas.</p>
<p>To exclude a specific user and all objects of that user, specify a command such as the following, where <code dir="ltr">hr</code> is the schema name of the user you want to exclude.</p>
<p><code dir="ltr">expdp FULL=YES DUMPFILE=expfull.dmp EXCLUDE=SCHEMA:"='HR'"</code></p>
<p>Note that in this situation, an export mode of <code dir="ltr">FULL</code> is specified. If no mode were specified, then the default mode, <code dir="ltr">SCHEMAS</code>, would be used. This would cause an error because the command would indicate that the schema should be both exported and excluded at the same time.</p>
<p>If you try to exclude a user by using a statement such as <code dir="ltr">EXCLUDE=USER:"='HR'"</code>, then only the information used in <code dir="ltr">CREATE USER hr</code> DDL statements will be excluded, and you may not get the results you expect.</p>
<p class="subhead1"><a id="SUTIL2940"></a>Restrictions</p>
<ul>
<li>
<p>The <code dir="ltr">EXCLUDE</code> and <code dir="ltr">INCLUDE</code> parameters are mutually exclusive.</p>
</li>
</ul>
<p class="subhead1"><a id="SUTIL2941"></a>Example</p>
<p>The following is an example of using the <code dir="ltr">EXCLUDE</code> statement.</p>
<pre dir="ltr">
&gt; expdp hr DIRECTORY=dpump_dir1 DUMPFILE=hr_exclude.dmp EXCLUDE=VIEW,
PACKAGE, FUNCTION
</pre>
<p>This will result in a schema-mode export (the default export mode) in which all of the <code dir="ltr">hr</code> schema will be exported except its views, packages, and functions.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="#i1009903">"Filtering During Export Operations"</a> for more information about the effects of using the <code dir="ltr">EXCLUDE</code> parameter</p>
</li>
</ul>
</div>
</div>
<!-- class="sect2" -->
<a id="i1006927"></a>
<div id="SUTIL848" class="sect2">
<h3 class="sect2">FILESIZE<a id="sthref91"></a></h3>
<p>Default: <code dir="ltr">0</code> (equivalent to the maximum size of 16 terabytes)</p>
<p class="subhead1"><a id="SUTIL2942"></a>Purpose</p>
<p>Specifies<a id="sthref92"></a> the maximum size of each dump file. If the size is reached for any member of the dump file set, then that file is closed and an attempt is made to create a new file, if the file specification contains a substitution variable or if additional dump files have been added to the job.</p>
<p class="subhead1"><a id="SUTIL2943"></a>Syntax and Description</p>
<pre dir="ltr">
FILESIZE=<span class="italic">integer</span>[B | KB | MB | GB | TB]
</pre>
<p>The <code dir="ltr"><span class="codeinlineitalic">integer</span></code> can be immediately followed (do not insert a space) by <code dir="ltr">B</code>, <code dir="ltr">KB</code>, <code dir="ltr">MB</code>, <code dir="ltr">GB</code>, or <code dir="ltr">TB</code> (indicating bytes, kilobytes, megabytes, gigabytes, and terabytes respectively). Bytes is the default. The actual size of the resulting file may be rounded down slightly to match the size of the internal blocks used in dump files.</p>
<p class="subhead2"><a id="SUTIL2944"></a>Restrictions</p>
<ul>
<li>
<p>The minimum size for a file is ten times the default Data Pump block size, which is 4 kilobytes.</p>
</li>
<li>
<p>The maximum size for a file is 16 terabytes.</p>
</li>
</ul>
<p class="subhead1"><a id="SUTIL2945"></a>Example</p>
<p>The following shows an example in which the size of the dump file is set to 3 megabytes:</p>
<pre dir="ltr">
&gt; expdp hr DIRECTORY=dpump_dir1 DUMPFILE=hr_3m.dmp FILESIZE=3MB
</pre>
<p>If 3 megabytes had not been sufficient to hold all the exported data, then the following error would have been displayed and the job would have stopped:</p>
<pre dir="ltr">
ORA-39095: Dump file space has been exhausted: Unable to allocate 217088 bytes
</pre>
<p>The actual number of bytes that could not be allocated may vary. Also, this number does not represent the amount of space needed to complete the entire export operation. It indicates only the size of the current object that was being exported when the job ran out of dump file space.This situation can be corrected by first attaching to the stopped job, adding one or more files using the <code dir="ltr">ADD_FILE</code> command, and then restarting the operation.</p>
</div>
<!-- class="sect2" -->
<a id="i1007149"></a>
<div id="SUTIL849" class="sect2">
<h3 class="sect2">FLASHBACK_SCN<a id="sthref93"></a></h3>
<p>Default: There is no default</p>
<p class="subhead1"><a id="SUTIL2946"></a>Purpose</p>
<p>Specifies<a id="sthref94"></a> the system change number (SCN) that Export will use to enable the Flashback Query utility.</p>
<p class="subhead1"><a id="SUTIL2947"></a>Syntax and Description</p>
<pre dir="ltr">
FLASHBACK_SCN=<span class="italic">scn_value</span>
</pre>
<p>The export operation is performed with data that is consistent up to the specified SCN. If the <code dir="ltr">NETWORK_LINK</code> parameter is specified, then the SCN refers to the SCN of the source database.</p>
<p class="subhead1"><a id="SUTIL2948"></a>Restrictions</p>
<ul>
<li>
<p><code dir="ltr">FLASHBACK_SCN</code> and <code dir="ltr">FLASHBACK_TIME</code> are mutually exclusive.</p>
</li>
<li>
<p>The <code dir="ltr">FLASHBACK_SCN</code> parameter pertains only to the Flashback Query capability of Oracle Database. It is not applicable to Flashback Database, Flashback Drop, or Flashback Data Archive.</p>
</li>
</ul>
<p class="subhead1"><a id="SUTIL2949"></a>Example</p>
<p>The following example assumes that an existing SCN value of <code dir="ltr">384632</code> exists. It exports the <code dir="ltr">hr</code> schema up to SCN 384632.</p>
<pre dir="ltr">
&gt; expdp hr DIRECTORY=dpump_dir1 DUMPFILE=hr_scn.dmp FLASHBACK_SCN=384632
</pre>
<div class="infobox-note">
<p class="notep1">Note:</p>
If you are on a logical standby system and using a network link to access the logical standby primary, then the <code dir="ltr">FLASHBACK_SCN</code> parameter is ignored because SCNs are selected by logical standby. See <a class="olink SBYDB" href="../e41134/toc.htm"><span class="italic">Oracle Data Guard Concepts and Administration</span></a> for information about logical standby databases.</div>
</div>
<!-- class="sect2" -->
<a id="i1007150"></a>
<div id="SUTIL850" class="sect2">
<h3 class="sect2">FLASHBACK_TIME<a id="sthref95"></a></h3>
<p>Default: There is no default</p>
<p class="subhead1"><a id="SUTIL2950"></a>Purpose</p>
<p>The SCN<a id="sthref96"></a> that most closely matches the specified time is found, and this SCN is used to enable the Flashback utility. The export operation is performed with data that is consistent up to this SCN.</p>
<p class="subhead1"><a id="SUTIL2951"></a>Syntax and Description</p>
<pre dir="ltr">
FLASHBACK_TIME="TO_TIMESTAMP(time-value)"
</pre>
<p>Because the <code dir="ltr">TO_TIMESTAMP</code> value is enclosed in quotation marks, it would be best to put this parameter in a parameter file. See <a href="#BEHJHGHB">"Use of Quotation Marks On the Data Pump Command Line"</a>.</p>
<p class="subhead1"><a id="SUTIL2952"></a>Restrictions</p>
<ul>
<li>
<p><code dir="ltr">FLASHBACK_TIME</code> and <code dir="ltr">FLASHBACK_SCN</code> are mutually exclusive.</p>
</li>
<li>
<p>The <code dir="ltr">FLASHBACK_TIME</code> parameter pertains only to the flashback query capability of Oracle Database. It is not applicable to Flashback Database, Flashback Drop, or Flashback Data Archive.</p>
</li>
</ul>
<p class="subhead1"><a id="SUTIL2953"></a>Example</p>
<p>You can specify the time in any format that the <code dir="ltr">DBMS_FLASHBACK.ENABLE_AT_TIME</code> procedure accepts. For example, suppose you have a parameter file, <code dir="ltr">flashback.par</code>, with the following contents:</p>
<pre dir="ltr">
DIRECTORY=dpump_dir1
DUMPFILE=hr_time.dmp
FLASHBACK_TIME="TO_TIMESTAMP('25-08-2008 14:35:00', 'DD-MM-YYYY HH24:MI:SS')"
</pre>
<p>You could then issue the following command:</p>
<pre dir="ltr">
&gt; expdp hr PARFILE=flashback.par
</pre>
<p>The export operation will be performed with data that is consistent with the SCN that most closely matches the specified time.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
If you are on a logical standby system and using a network link to access the logical standby primary, then the <code dir="ltr">FLASHBACK_SCN</code> parameter is ignored because SCNs are selected by logical standby. See <a class="olink SBYDB" href="../e41134/toc.htm"><span class="italic">Oracle Data Guard Concepts and Administration</span></a> for information about logical standby databases.</div>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink ADFNS" href="../../appdev.112/e41502/toc.htm"><span class="italic">Oracle Database Advanced Application Developer's Guide</span></a> for information about using Flashback Query</div>
</div>
<!-- class="sect2" -->
<a id="i1006790"></a>
<div id="SUTIL851" class="sect2">
<h3 class="sect2">FULL<a id="sthref97"></a></h3>
<p>Default: <code dir="ltr">NO</code></p>
<p class="subhead1"><a id="SUTIL2954"></a>Purpose</p>
<p>Specifies that you want to perform a<a id="sthref98"></a> full database mode export.</p>
<p class="subhead1"><a id="SUTIL2955"></a>Syntax and Description</p>
<pre dir="ltr">
FULL=[YES | NO]
</pre>
<p><code dir="ltr">FULL=YES</code> indicates that all data and metadata are to be exported. Filtering can restrict what is exported using this export mode. See <a href="#i1009903">"Filtering During Export Operations"</a>.</p>
<p>To perform a full export, you must have the <code dir="ltr">DATAPUMP_EXP_FULL_DATABASE</code> role.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
Be aware that when you later import a dump file that was created by a full-mode export, the import operation attempts to copy the password for the <code dir="ltr">SYS</code> account from the source database. This sometimes fails (for example, if the password is in a shared password file). If it does fail, then after the import completes, you must set the password for the <code dir="ltr">SYS</code> account at the target database to a password of your choice.</div>
<p class="subhead1"><a id="SUTIL2956"></a>Restrictions</p>
<ul>
<li>
<p>A full export does not export system schemas that contain Oracle-managed data and metadata. Examples of system schemas that are not exported include <code dir="ltr">SYS</code>, <code dir="ltr">ORDSYS</code>, and <code dir="ltr">MDSYS</code>.</p>
</li>
<li>
<p>Grants on objects owned by the <code dir="ltr">SYS</code> schema are never exported.</p>
</li>
<li>
<p>If you are exporting data that is protected by a realm, then you must have authorization for that realm.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink DVADM003" href="../../server.112/e23090/cfrealms.htm#DVADM003"><span class="italic">Oracle Database Vault Administrator's Guide</span></a> for information about configuring realms</div>
</li>
</ul>
<p class="subhead1"><a id="SUTIL2957"></a>Example</p>
<p>The following is an example of using the <code dir="ltr">FULL</code> parameter. The dump file, <code dir="ltr">expfull.dmp</code> is written to the <code dir="ltr">dpump_dir2</code> directory.</p>
<pre dir="ltr">
&gt; expdp hr DIRECTORY=dpump_dir2 DUMPFILE=expfull.dmp FULL=YES NOLOGFILE=YES
</pre></div>
<!-- class="sect2" -->
<div id="SUTIL852" class="sect2"><a id="sthref99"></a>
<h3 class="sect2">HELP<a id="sthref100"></a></h3>
<p>Default: <code dir="ltr">NO</code></p>
<p class="subhead1"><a id="SUTIL2958"></a>Purpose</p>
<p>Displays online help for the Export utility.</p>
<p class="subhead1"><a id="SUTIL2959"></a>Syntax and Description</p>
<pre dir="ltr">
HELP = [YES | NO]
</pre>
<p>If <code dir="ltr">HELP</code>=<code dir="ltr">YES</code> is specified, then Export displays a summary of all Export command-line parameters and interactive commands.</p>
<p class="subhead1"><a id="SUTIL2960"></a>Example</p>
<pre dir="ltr">
&gt; expdp HELP = YES
</pre>
<p>This example will display a brief description of all Export parameters and commands.</p>
</div>
<!-- class="sect2" -->
<a id="i1007837"></a>
<div id="SUTIL853" class="sect2">
<h3 class="sect2">INCLUDE<a id="sthref101"></a></h3>
<p>Default: There is no default</p>
<p class="subhead1"><a id="SUTIL2961"></a>Purpose</p>
<p>Enables <a id="sthref102"></a>you to filter<a id="sthref103"></a> the metadata that is exported by specifying objects and object types for the current export mode. The specified objects and all their dependent objects are exported. Grants on these objects are also exported.</p>
<p class="subhead1"><a id="SUTIL2962"></a>Syntax and Description</p>
<pre dir="ltr">
INCLUDE = <span class="italic">object_type</span>[:<span class="italic">name_clause</span>] [, ...]
</pre>
<p>The <code dir="ltr"><span class="codeinlineitalic">object_type</span></code> specifies the type of object to be included. To see a list of valid values for <code dir="ltr"><span class="codeinlineitalic">object_type</span></code>, query the following views: <code dir="ltr">DATABASE_EXPORT_OBJECTS</code> for full mode, <code dir="ltr">SCHEMA_EXPORT_OBJECTS</code> for schema mode, and <code dir="ltr">TABLE_EXPORT_OBJECTS</code> for table and tablespace mode. The values listed in the <code dir="ltr">OBJECT_PATH</code> column are the valid object types.</p>
<p>Only object types explicitly specified in <code dir="ltr">INCLUDE</code> statements, and their dependent objects, are exported. No other object types, including the schema definition information that is normally part of a schema-mode export when you have the <code dir="ltr">DATAPUMP_EXP_FULL_DATABASE</code> role, are exported.</p>
<p>The <code dir="ltr"><span class="codeinlineitalic">name_clause</span></code> is optional. It allows fine-grained selection of specific objects within an object type. It is a SQL expression used as a filter on the object names of the type. It consists of a SQL operator and the values against which the object names of the specified type are to be compared. The <code dir="ltr"><span class="codeinlineitalic">name_clause</span></code> applies only to object types whose instances have names (for example, it is applicable to <code dir="ltr">TABLE</code>, but not to <code dir="ltr">GRANT</code>). It must be separated from the object type with a colon and enclosed in double quotation marks, because single quotation marks are required to delimit the name strings.</p>
<p>The name that you supply for the <code dir="ltr"><span class="codeinlineitalic">name_clause</span></code> must exactly match, including upper and lower casing, an existing object in the database. For example, if the <code dir="ltr"><span class="codeinlineitalic">name_clause</span></code> you supply is for a table named <code dir="ltr">EMPLOYEES</code>, then there must be an existing table named <code dir="ltr">EMPLOYEES</code> using all upper case. If the <code dir="ltr"><span class="codeinlineitalic">name_clause</span></code> were supplied as <code dir="ltr">Employees</code> or <code dir="ltr">employees</code> or any other variation, then the table would not be found.</p>
<p>Depending on your operating system, the use of quotation marks when you specify a value for this parameter may also require that you use escape characters. Oracle recommends that you place this parameter in a parameter file, which can reduce the number of escape characters that might otherwise be needed on the command line. See <a href="#BEHJHGHB">"Use of Quotation Marks On the Data Pump Command Line"</a>.</p>
<p>For example, suppose you have a parameter file named <code dir="ltr">hr.par</code> with the following content:</p>
<pre dir="ltr">
SCHEMAS=HR
DUMPFILE=expinclude.dmp
DIRECTORY=dpump_dir1
LOGFILE=expinclude.log
INCLUDE=TABLE:"IN ('EMPLOYEES', 'DEPARTMENTS')"
INCLUDE=PROCEDURE
INCLUDE=INDEX:"LIKE 'EMP%'"
</pre>
<p>You could then use the <code dir="ltr">hr.par</code> file to start an export operation, without having to enter any other parameters on the command line. The <code dir="ltr">EMPLOYEES</code> and <code dir="ltr">DEPARTMENTS</code> tables, all procedures, and all index names with an EMP prefix will be included in the export.</p>
<pre dir="ltr">
&gt; expdp hr PARFILE=hr.par
</pre>
<p class="subhead2"><a id="SUTIL2963"></a>Including Constraints</p>
<p>If the <code dir="ltr"><span class="codeinlineitalic">object_type</span></code> you specify is a <code dir="ltr">CONSTRAINT</code>, then you should be aware of the effects this will have.</p>
<p>The following constraints cannot be explicitly included:</p>
<ul>
<li>
<p><code dir="ltr">NOT</code> <code dir="ltr">NULL</code> constraints</p>
</li>
<li>
<p>Constraints needed for the table to be created and loaded successfully; for example, primary key constraints for index-organized tables, or <code dir="ltr">REF</code> <code dir="ltr">SCOPE</code> and <code dir="ltr">WITH</code> <code dir="ltr">ROWID</code> constraints for tables with <code dir="ltr">REF</code> columns</p>
</li>
</ul>
<p>This means that the following <code dir="ltr">INCLUDE</code> statements will be interpreted as follows:</p>
<ul>
<li>
<p><code dir="ltr">INCLUDE=</code><code dir="ltr">CONSTRAINT</code> will include all (nonreferential) constraints, except for <code dir="ltr">NOT</code> <code dir="ltr">NULL</code> constraints and any constraints needed for successful table creation and loading</p>
</li>
<li>
<p><code dir="ltr">INCLUDE=</code><code dir="ltr">REF_CONSTRAINT</code> will include referential integrity (foreign key) constraints</p>
</li>
</ul>
<p class="subhead1"><a id="SUTIL2964"></a>Restrictions</p>
<ul>
<li>
<p>The <code dir="ltr">INCLUDE</code> and <code dir="ltr">EXCLUDE</code> parameters are mutually exclusive.</p>
</li>
<li>
<p>Grants on objects owned by the <code dir="ltr">SYS</code> schema are never exported.</p>
</li>
</ul>
<p class="subhead1"><a id="SUTIL2965"></a>Example</p>
<p>The following example performs an export of all tables (and their dependent objects) in the <code dir="ltr">hr</code> schema:</p>
<pre dir="ltr">
&gt; expdp hr INCLUDE=TABLE DUMPFILE=dpump_dir1:exp_inc.dmp NOLOGFILE=YES
</pre></div>
<!-- class="sect2" -->
<a id="BEHGDDCA"></a>
<div id="SUTIL854" class="sect2">
<h3 class="sect2">JOB_NAME<a id="sthref104"></a></h3>
<p>Default: system-generated name of the form <code dir="ltr">SYS_EXPORT_&lt;mode&gt;_NN</code></p>
<p class="subhead1"><a id="SUTIL2966"></a>Purpose</p>
<p>Used to identify the export job in subsequent actions, such as when the <code dir="ltr">ATTACH</code> parameter is used to attach to a job, or to identify the job using the <code dir="ltr">DBA_DATAPUMP_JOBS</code> or <code dir="ltr">USER_DATAPUMP_JOBS</code> views.</p>
<p class="subhead1"><a id="SUTIL2967"></a>Syntax and Description</p>
<pre dir="ltr">
JOB_NAME=<span class="italic">jobname_string</span>
</pre>
<p>The <code dir="ltr"><span class="codeinlineitalic">jobname_string</span></code> specifies<a id="sthref105"></a> a name<a id="sthref106"></a> of up to 30 bytes for this export job<a id="sthref107"></a>. The bytes must represent printable characters and spaces. If spaces are included, then the name must be enclosed in single quotation marks (for example, 'Thursday Export'). The job name is implicitly qualified by the schema of the user performing the export operation. The job name is used as the name of the master table, which controls the export job.</p>
<p>The default job name is system-generated in the form <code dir="ltr">SYS_EXPORT_&lt;mode&gt;_NN</code>, where <code dir="ltr">NN</code> expands to a 2-digit incrementing integer starting at 01. An example of a default name is <code dir="ltr">'SYS_EXPORT_TABLESPACE_02'</code>.</p>
<p class="subhead1"><a id="SUTIL2968"></a>Example</p>
<p>The following example shows an export operation that is assigned a job name of <code dir="ltr">exp_job</code>:</p>
<pre dir="ltr">
&gt; expdp hr DIRECTORY=dpump_dir1 DUMPFILE=exp_job.dmp JOB_NAME=exp_job
NOLOGFILE=YES
</pre></div>
<!-- class="sect2" -->
<div id="SUTIL3846" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref108"></a>
<h3 class="sect2">KEEP_MASTER</h3>
<p>Default: <code dir="ltr">NO</code></p>
<p class="subhead1"><a id="SUTIL3847"></a>Purpose</p>
<p>Indicates whether the master table should be deleted or retained at the end of a Data Pump job that completes successfully. The master table is automatically retained for jobs that do not complete successfully.</p>
<p class="subhead1"><a id="SUTIL3848"></a>Syntax and Description</p>
<pre dir="ltr">
KEEP_MASTER=[YES | NO]
</pre>
<p class="subhead1"><a id="SUTIL3849"></a>Restrictions</p>
<ul>
<li>
<p>None</p>
</li>
</ul>
<p class="subhead1"><a id="SUTIL3850"></a>Example</p>
<pre dir="ltr">
&gt; expdp hr DIRECTORY=dpump_dir1 DUMPFILE=expdat.dmp SCHEMAS=hr KEEP_MASTER=YES
</pre></div>
<!-- class="sect2" -->
<a id="BABIHEAC"></a>
<div id="SUTIL855" class="sect2">
<h3 class="sect2">LOGFILE<a id="sthref109"></a><a id="sthref110"></a></h3>
<p>Default: <code dir="ltr">export</code>.<code dir="ltr">log</code></p>
<p class="subhead1"><a id="SUTIL2969"></a>Purpose</p>
<p>Specifies the name, and optionally, a directory, for the log file of the export job.</p>
<p class="subhead1"><a id="SUTIL2970"></a>Syntax and Description</p>
<pre dir="ltr">
LOGFILE=[<span class="italic">directory_object</span>:]<span class="italic">file_name</span>
</pre>
<p>You can specify a database <code dir="ltr"><span class="codeinlineitalic">directory_object</span></code> previously established by the DBA, assuming that you have access to it. This overrides the directory object specified with the <code dir="ltr">DIRECTORY</code> parameter.</p>
<p>The <code dir="ltr"><span class="codeinlineitalic">file_name</span></code> specifies a name for the log file. The default behavior is to create a file named <code dir="ltr">export</code>.<code dir="ltr">log</code> in the directory referenced by the directory object specified in the <code dir="ltr">DIRECTORY</code> parameter.</p>
<p>All messages regarding work in progress, work completed, and errors encountered are written to the log file. (For a real-time status of the job, use the <code dir="ltr">STATUS</code> command in interactive mode.)</p>
<p>A log file is always created for an export job unless the <code dir="ltr">NOLOGFILE</code> parameter is specified. As with the dump file set, the log file is relative to the server and not the client.</p>
<p>An existing file matching the file name will be overwritten.</p>
<p class="subhead1"><a id="SUTIL2971"></a>Restrictions</p>
<ul>
<li>
<p>To perform a Data Pump Export using Oracle Automatic Storage Management (Oracle ASM), you must specify a <code dir="ltr">LOGFILE</code> parameter that includes a directory object that does not include the Oracle ASM + notation. That is, the log file must be written to a disk file, and not written into the Oracle ASM storage. Alternatively, you can specify <code dir="ltr">NOLOGFILE=YES</code>. However, this prevents the writing of the log file.</p>
</li>
</ul>
<p class="subhead1"><a id="SUTIL2972"></a>Example</p>
<p>The following example shows how to specify a log file name if you do not want to use the default:</p>
<pre dir="ltr">
&gt; expdp hr DIRECTORY=dpump_dir1 DUMPFILE=hr.dmp LOGFILE=hr_export.log
</pre>
<div class="infobox-note">
<p class="notep1">Note:</p>
Data Pump Export writes the log file using the database character set. If your client <code dir="ltr">NLS_LANG</code> environment setting sets up a different client character set from the database character set, then it is possible that table names may be different in the log file than they are when displayed on the client output screen.</div>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="#i1009049">"STATUS"</a></p>
</li>
<li>
<p><a href="dp_overview.htm#i1009537">"Using Directory Objects When Oracle Automatic Storage Management Is Enabled"</a> for information about Oracle Automatic Storage Management and directory objects</p>
</li>
</ul>
</div>
</div>
<!-- class="sect2" -->
<div id="SUTIL3851" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref111"></a>
<h3 class="sect2">METRICS</h3>
<p>Default: <code dir="ltr">NO</code></p>
<p class="subhead1"><a id="SUTIL3852"></a>Purpose</p>
<p>Indicates whether additional information about the job should be reported to the Data Pump log file.</p>
<p class="subhead1"><a id="SUTIL3853"></a>Syntax and Description</p>
<pre dir="ltr">
METRICS=[YES | NO]
</pre>
<p>When <code dir="ltr">METRICS=YES</code> is used, the number of objects and the elapsed time are recorded in the Data Pump log file.</p>
<p class="subhead1"><a id="SUTIL3854"></a>Restrictions</p>
<ul>
<li>
<p>None</p>
</li>
</ul>
<p class="subhead1"><a id="SUTIL3855"></a>Example</p>
<pre dir="ltr">
&gt; expdp hr DIRECTORY=dpump_dir1 DUMPFILE=expdat.dmp SCHEMAS=hr METRICS=YES
</pre></div>
<!-- class="sect2" -->
<a id="i1011008"></a>
<div id="SUTIL856" class="sect2">
<h3 class="sect2">NETWORK_LINK<a id="sthref112"></a><a id="sthref113"></a></h3>
<p>Default: There is no default</p>
<p class="subhead1"><a id="SUTIL2973"></a>Purpose</p>
<p>Enables an export from a (source) database identified by a valid database link. The data from the source database instance is written to a dump file set on the connected database instance.</p>
<p class="subhead1"><a id="SUTIL2974"></a>Syntax and Description</p>
<pre dir="ltr">
NETWORK_LINK=<span class="italic">source_database_link</span>
</pre>
<p>The <code dir="ltr">NETWORK_LINK</code> parameter initiates an export using a database link. This means that the system to which the <code dir="ltr">expdp</code> client is connected contacts the source database referenced by the <code dir="ltr"><span class="codeinlineitalic">source_database_link</span></code>, retrieves data from it, and writes the data to a dump file set back on the connected system.</p>
<p>The <code dir="ltr"><span class="codeinlineitalic">source_database_link</span></code> provided must be the name of a database link to an available database. If the database on that instance does not already have a database link, then you or your DBA must create one using the SQL <code dir="ltr">CREATE DATABASE LINK</code> statement.</p>
<p>If the source database is read-only, then the user on the source database must have a locally managed temporary tablespace assigned as the default temporary tablespace. Otherwise, the job will fail.</p>
<div class="infobox-note">
<p class="notep1">Caution:</p>
If an export operation is performed over an unencrypted network link, then all data is exported as clear text even if it is encrypted in the database. See <a class="olink ASOAG" href="../../network.112/e40393/toc.htm"><span class="italic">Oracle Database Advanced Security Administrator's Guide</span></a> for information about network security.</div>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a class="olink ADMIN12083" href="../../server.112/e25494/ds_concepts.htm#ADMIN12083"><span class="italic">Oracle Database Administrator's Guide</span></a> for more information about database links</p>
</li>
<li>
<p><a class="olink SQLRF01205" href="../../server.112/e41084/statements_5005.htm#SQLRF01205"><span class="italic">Oracle Database SQL Language Reference</span></a> for more information about the <code dir="ltr">CREATE DATABASE LINK</code> statement</p>
</li>
<li>
<p><a class="olink ADMIN11367" href="../../server.112/e25494/tspaces.htm#ADMIN11367"><span class="italic">Oracle Database Administrator's Guide</span></a> for more information about locally managed tablespaces</p>
</li>
</ul>
</div>
<p class="subhead1"><a id="SUTIL2975"></a>Restrictions</p>
<ul>
<li>
<p>The only types of database links supported by Data Pump Export are: public, fixed user, and connected user. Current-user database links are not supported.</p>
</li>
<li>
<p>Network exports do not support <code dir="ltr">LONG</code> columns.</p>
</li>
<li>
<p>When operating across a network link, Data Pump requires that the source and target databases differ by no more than one version. For example, if one database is Oracle Database 11<span class="italic">g</span>, then the other database must be either 11<span class="italic">g</span> or 10<span class="italic">g</span>. Note that Data Pump checks only the major version number (for example, 10<span class="italic">g</span> and 11<span class="italic">g</span>), not specific release numbers (for example, 10.1, 10.2, 11.1, or 11.2).</p>
</li>
</ul>
<p class="subhead1"><a id="SUTIL2976"></a>Example</p>
<p>The following is an example of using the <code dir="ltr">NETWORK_LINK</code> parameter. The <code dir="ltr"><span class="codeinlineitalic">source_database_link</span></code> would be replaced with the name of a valid database link that must already exist.</p>
<pre dir="ltr">
&gt; expdp hr DIRECTORY=dpump_dir1 NETWORK_LINK=<span class="italic">source_database_link</span>
  DUMPFILE=network_export.dmp LOGFILE=network_export.log
</pre></div>
<!-- class="sect2" -->
<a id="i1007147"></a>
<div id="SUTIL857" class="sect2">
<h3 class="sect2">NOLOGFILE<a id="sthref114"></a></h3>
<p>Default: <code dir="ltr">NO</code></p>
<p class="subhead1"><a id="SUTIL2977"></a>Purpose</p>
<p>Specifies whether to suppress creation of a log file.</p>
<p class="subhead1"><a id="SUTIL2978"></a>Syntax and Description</p>
<pre dir="ltr">
NOLOGFILE=[YES | NO]
</pre>
<p>Specify <code dir="ltr">NOLOGFILE</code> =<code dir="ltr">YES</code> to suppress<a id="sthref115"></a> the default behavior of creating a log file. Progress and error information is still written to the standard output device of any attached clients, including the client that started the original export operation. If there are no clients attached to a running job and you specify <code dir="ltr">NOLOGFILE=YES</code>, then you run the risk of losing important progress and error information.</p>
<p class="subhead1"><a id="SUTIL2979"></a>Example</p>
<p>The following is an example of using the <code dir="ltr">NOLOGFILE</code> parameter:</p>
<pre dir="ltr">
&gt; expdp hr DIRECTORY=dpump_dir1 DUMPFILE=hr.dmp NOLOGFILE=YES
</pre>
<p>This command results in a schema-mode export (the default) in which no log file is written.</p>
</div>
<!-- class="sect2" -->
<a id="i1006404"></a>
<div id="SUTIL858" class="sect2">
<h3 class="sect2">PARALLEL<a id="sthref116"></a></h3>
<p>Default: <code dir="ltr">1</code></p>
<p class="subhead1"><a id="SUTIL2980"></a>Purpose</p>
<p>Specifies<a id="sthref117"></a> the maximum number of processes of active execution operating on behalf of the export job. This execution set consists of a combination of worker processes and parallel I/O server processes. The master control process and worker processes acting as query coordinators in parallel query operations do not count toward this total.</p>
<p>This parameter enables you to make trade-offs between resource consumption and elapsed time.</p>
<p class="subhead1"><a id="SUTIL2981"></a>Syntax and Description</p>
<pre dir="ltr">
PARALLEL=<span class="italic">integer</span>
</pre>
<p>The value you specify for <code dir="ltr"><span class="codeinlineitalic">integer</span></code> should be less than, or equal to, the number of files in the dump file set (or you should specify substitution variables in the dump file specifications). Because each active worker process or I/O server process writes exclusively to one file at a time, an insufficient number of files can have adverse effects. Some of the worker processes will be idle while waiting for files, thereby degrading the overall performance of the job. More importantly, if any member of a cooperating group of parallel I/O server processes cannot obtain a file for output, then the export operation will be stopped with an <code dir="ltr">ORA-39095</code> error. Both situations can be corrected by attaching to the job using the Data Pump Export utility, adding more files using the <code dir="ltr">ADD_FILE</code> command while in interactive mode, and in the case of a stopped job, restarting the job.</p>
<p>To increase or decrease the value of <code dir="ltr">PARALLEL</code> during job execution, use interactive-command mode. Decreasing parallelism does not result in fewer worker processes associated with the job; it decreases the number of worker processes that will be executing at any given time. Also, any ongoing work must reach an orderly completion point before the decrease takes effect. Therefore, it may take a while to see any effect from decreasing the value. Idle workers are not deleted until the job exits.</p>
<p>Increasing the parallelism takes effect immediately if there is work that can be performed in parallel.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="dp_perf.htm#i1005599">"Controlling Resource Consumption"</a></div>
<p class="subhead2"><a id="CIHGACIA"></a><a id="SUTIL2982"></a>Using PARALLEL During An Export In An Oracle RAC Environment</p>
<p>In an Oracle Real Application Clusters (Oracle RAC) environment, if an export operation has <code dir="ltr">PARALLEL=1</code>, then all Data Pump processes reside on the instance where the job is started. Therefore, the directory object can point to local storage for that instance.</p>
<p>If the export operation has <code dir="ltr">PARALLEL</code> set to a value greater than 1, then Data Pump processes can reside on instances other than the one where the job was started. Therefore, the directory object must point to shared storage that is accessible by all instances of the Oracle RAC.</p>
<p class="subhead1"><a id="SUTIL2983"></a>Restrictions</p>
<ul>
<li>
<p>This parameter is valid only in the Enterprise Edition of Oracle Database 11<span class="italic">g</span>.</p>
</li>
<li>
<p>To export a table or table partition in parallel (using PQ slaves), you must have the <code dir="ltr">DATAPUMP_EXP_FULL_DATABASE</code> role.</p>
</li>
</ul>
<p class="subhead1"><a id="SUTIL2984"></a>Example</p>
<p>The following is an example of using the <code dir="ltr">PARALLEL</code> parameter:</p>
<pre dir="ltr">
&gt; expdp hr DIRECTORY=dpump_dir1 LOGFILE=parallel_export.log 
JOB_NAME=par4_job DUMPFILE=par_exp%u.dmp PARALLEL=4
 
</pre>
<p>This results in a schema-mode export (the default) of the <code dir="ltr">hr</code> schema in which up to four files could be created in the path pointed to by the directory object, <code dir="ltr">dpump_dir1</code>.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="#i1006912">"DUMPFILE"</a></p>
</li>
<li>
<p><a href="#i1005616">"Commands Available in Export's Interactive-Command Mode"</a></p>
</li>
<li>
<p><a href="#i1006259">"Performing a Parallel Full Database Export"</a></p>
</li>
</ul>
</div>
</div>
<!-- class="sect2" -->
<a id="CIHHECFF"></a>
<div id="SUTIL859" class="sect2">
<h3 class="sect2">PARFILE<a id="sthref118"></a></h3>
<p>Default: There is no default</p>
<p class="subhead1"><a id="SUTIL2985"></a>Purpose</p>
<p>Specifies<a id="sthref119"></a> the name of an export parameter file.</p>
<p class="subhead1"><a id="SUTIL2986"></a>Syntax and Description</p>
<pre dir="ltr">
PARFILE=[<span class="italic">directory_path</span>]<span class="italic">file_name</span>
</pre>
<p>Unlike dump files, log files, and SQL files which are created and written by the server, the parameter file is opened and read by the <code dir="ltr">expdp</code> client. Therefore, a directory object name is neither required nor appropriate. The default is the user's current directory. The use of parameter files is highly recommended if you are using parameters whose values require the use of quotation marks.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#BEHJHGHB">"Use of Quotation Marks On the Data Pump Command Line"</a></div>
<p class="subhead1"><a id="SUTIL2987"></a>Restrictions</p>
<ul>
<li>
<p>The <code dir="ltr">PARFILE</code> parameter cannot be specified within a parameter file.</p>
</li>
</ul>
<p class="subhead1"><a id="SUTIL2988"></a>Example</p>
<p>The content of an example parameter file, <code dir="ltr">hr.par</code>, might be as follows:</p>
<pre dir="ltr">
SCHEMAS=HR
DUMPFILE=exp.dmp
DIRECTORY=dpump_dir1
LOGFILE=exp.log
</pre>
<p>You could then issue the following Export command to specify the parameter file:</p>
<pre dir="ltr">
&gt; expdp hr PARFILE=hr.par
</pre></div>
<!-- class="sect2" -->
<a id="i1007859"></a>
<div id="SUTIL860" class="sect2">
<h3 class="sect2">QUERY<a id="sthref120"></a></h3>
<p>Default: There is no default</p>
<p class="subhead1"><a id="SUTIL2989"></a>Purpose</p>
<p>Allows you to specify a query clause that is used to filter the data that gets exported.<a id="sthref121"></a></p>
<p class="subhead1"><a id="SUTIL2990"></a>Syntax and Description</p>
<pre dir="ltr">
QUERY = [<span class="italic">schema</span>.][<span class="italic">table_name</span>:] <span class="italic">query_clause</span>
</pre>
<p>The <code dir="ltr"><span class="codeinlineitalic">query_clause</span></code> is typically a SQL <code dir="ltr">WHERE</code> clause for fine-grained row selection, but could be any SQL clause. For example, an <code dir="ltr">ORDER</code> <code dir="ltr">BY</code> clause could be used to speed up a migration from a heap-organized table to an index-organized table. If a schema and table name are not supplied, then the query is applied to (and must be valid for) all tables in the export job. A table-specific query overrides a query applied to all tables.</p>
<p>When the query is to be applied to a specific table, a colon must separate the table name from the query clause. More than one table-specific query can be specified, but only one query can be specified per table.</p>
<p>If the <code dir="ltr">NETWORK_LINK</code> parameter is specified along with the <code dir="ltr">QUERY</code> parameter, then any objects specified in the <code dir="ltr"><span class="codeinlineitalic">query_clause</span></code> that are on the remote (source) node must be explicitly qualified with the <code dir="ltr">NETWORK_LINK</code> value. Otherwise, Data Pump assumes that the object is on the local (target) node; if it is not, then an error is returned and the import of the table from the remote (source) system fails.</p>
<p>For example, if you specify <code dir="ltr">NETWORK_LINK=dblink1</code>, then the <code dir="ltr"><span class="codeinlineitalic">query_clause</span></code> of the <code dir="ltr">QUERY</code> parameter must specify that link, as shown in the following example:</p>
<pre dir="ltr">
QUERY=(hr.employees:"WHERE last_name IN(SELECT last_name 
FROM hr.employees@dblink1)")
</pre>
<p>Depending on your operating system, the use of quotation marks when you specify a value for this parameter may also require that you use escape characters. Oracle recommends that you place this parameter in a parameter file, which can reduce the number of escape characters that might otherwise be needed on the command line. See <a href="#BEHJHGHB">"Use of Quotation Marks On the Data Pump Command Line"</a>.</p>
<p>To specify a schema other than your own in a table-specific query, you must be granted access to that specific table.</p>
<p class="subhead1"><a id="SUTIL2991"></a>Restrictions</p>
<ul>
<li>
<p>The <code dir="ltr">QUERY</code> parameter cannot be used with the following parameters:</p>
<ul>
<li>
<p><code dir="ltr">CONTENT=METADATA_ONLY</code></p>
</li>
<li>
<p><code dir="ltr">ESTIMATE_ONLY</code></p>
</li>
<li>
<p><code dir="ltr">TRANSPORT_TABLESPACES</code></p>
</li>
</ul>
</li>
<li>
<p>When the <code dir="ltr">QUERY</code> parameter is specified for a table, Data Pump uses external tables to unload the target table. External tables uses a SQL <code dir="ltr">CREATE TABLE AS SELECT</code> statement. The value of the <code dir="ltr">QUERY</code> parameter is the <code dir="ltr">WHERE</code> clause in the <code dir="ltr">SELECT</code> portion of the <code dir="ltr">CREATE TABLE</code> statement. If the <code dir="ltr">QUERY</code> parameter includes references to another table with columns whose names match the table being unloaded, and if those columns are used in the query, then you will need to use a table alias to distinguish between columns in the table being unloaded and columns in the <code dir="ltr">SELECT</code> statement with the same name. The table alias used by Data Pump for the table being unloaded is <code dir="ltr">KU$</code>.</p>
<p>For example, suppose you want to export a subset of the <code dir="ltr">sh.sales</code> table based on the credit limit for a customer in the <code dir="ltr">sh.customers</code> table. In the following example, <code dir="ltr">KU$</code> is used to qualify the <code dir="ltr">cust_id</code> field in the <code dir="ltr">QUERY</code> parameter for unloading <code dir="ltr">sh.sales</code>. As a result, Data Pump exports only rows for customers whose credit limit is greater than $10,000.</p>
<pre dir="ltr">
QUERY='sales:"WHERE EXISTS (SELECT cust_id FROM customers c 
   WHERE cust_credit_limit &gt; 10000 AND ku$.cust_id = c.cust_id)"'
</pre>
<p>If, as in the following query, <code dir="ltr">KU$</code> is not used for a table alias, then the result will be that all rows are unloaded:</p>
<pre dir="ltr">
QUERY='sales:"WHERE EXISTS (SELECT cust_id FROM customers c 
   WHERE cust_credit_limit &gt; 10000 AND cust_id = c.cust_id)"'
</pre></li>
<li>
<p>The maximum length allowed for a <code dir="ltr">QUERY</code> string is 4000 bytes including quotation marks, which means that the actual maximum length allowed is 3998 bytes.</p>
</li>
</ul>
<p class="subhead1"><a id="SUTIL2992"></a>Example</p>
<p>The following is an example of using the <code dir="ltr">QUERY</code> parameter:</p>
<pre dir="ltr">
&gt; expdp hr PARFILE=emp_query.par
</pre>
<p>The contents of the emp_query.par file are as follows:</p>
<pre dir="ltr">
QUERY=employees:"WHERE department_id &gt; 10 AND salary &gt; 10000"
NOLOGFILE=YES 
DIRECTORY=dpump_dir1 
DUMPFILE=exp1.dmp 
</pre>
<p>This example unloads all tables in the <code dir="ltr">hr</code> schema, but only the rows that fit the query expression. In this case, all rows in all tables (except <code dir="ltr">employees</code>) in the <code dir="ltr">hr</code> schema will be unloaded. For the <code dir="ltr">employees</code> table, only rows that meet the query criteria are unloaded.</p>
</div>
<!-- class="sect2" -->
<a id="BABDCEDA"></a>
<div id="SUTIL861" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">REMAP_DATA<a id="sthref122"></a><a id="sthref123"></a></h3>
<p>Default: There is no default</p>
<p class="subhead1"><a id="SUTIL2993"></a>Purpose</p>
<p>The <code dir="ltr">REMAP_DATA</code> parameter allows you to specify a remap function that takes as a source the original value of the designated column and returns a remapped value that will replace the original value in the dump file. A common use for this option is to mask data when moving from a production system to a test system. For example, a column of sensitive customer data such as credit card numbers could be replaced with numbers generated by a <code dir="ltr">REMAP_DATA</code> function. This would allow the data to retain its essential formatting and processing characteristics without exposing private data to unauthorized personnel.</p>
<p>The same function can be applied to multiple columns being dumped. This is useful when you want to guarantee consistency in remapping both the child and parent column in a referential constraint.</p>
<p class="subhead1"><a id="SUTIL2994"></a>Syntax and Description</p>
<pre dir="ltr">
REMAP_DATA=[<span class="italic">schema</span>.]<span class="italic">tablename</span>.<span class="italic">column_name</span>:[<span class="italic">schema</span>.]<span class="italic">pkg</span>.<span class="italic">function</span>
</pre>
<p>The description of each syntax element, in the order in which they appear in the syntax, is as follows:</p>
<p><span class="italic">schema</span> -- the schema containing the table to be remapped. By default, this is the schema of the user doing the export.</p>
<p><span class="italic">tablename</span> -- the table whose column will be remapped.</p>
<p><span class="italic">column_name</span> -- the column whose data is to be remapped. The maximum number of columns that can be remapped for a single table is 10.</p>
<p><span class="italic">schema</span> -- the schema containing the PL/SQL package you have created that contains the remapping function. As a default, this is the schema of the user doing the export.</p>
<p><span class="italic">pkg</span> -- the name of the PL/SQL package you have created that contains the remapping function.</p>
<p><span class="italic">function</span> -- the name of the function within the PL/SQL that will be called to remap the column table in each row of the specified table.</p>
<p class="subhead1"><a id="SUTIL2995"></a>Restrictions</p>
<ul>
<li>
<p>The datatypes of the source argument and the returned value should both match the data type of the designated column in the table.</p>
</li>
<li>
<p>Remapping functions should not perform commits or rollbacks except in autonomous transactions.</p>
</li>
<li>
<p>The maximum number of columns you can remap on a single table is 10. You can remap 9 columns on table <code dir="ltr">a</code> and 8 columns on table <code dir="ltr">b</code>, and so on, but the maximum for each table is 10.</p>
</li>
<li>
<p>The use of synonyms as values for the <code dir="ltr">REMAP_DATA</code> parameter is not supported. For example, if the <code dir="ltr">regions</code> table in the <code dir="ltr">hr</code> schema had a synonym of <code dir="ltr">regn</code>, an error would be returned if you specified <code dir="ltr">regn</code> as part of the <code dir="ltr">REMPA_DATA</code> specification.</p>
</li>
<li>
<p>Remapping LOB column data of a remote table is not supported.</p>
</li>
</ul>
<p class="subhead1"><a id="SUTIL2996"></a>Example</p>
<p>The following example assumes a package named <code dir="ltr">remap</code> has been created that contains functions named <code dir="ltr">minus10</code> and <code dir="ltr">plusx</code> which change the values for <code dir="ltr">employee_id</code> and <code dir="ltr">first_name</code> in the <code dir="ltr">employees</code> table.</p>
<pre dir="ltr">
&gt; expdp hr DIRECTORY=dpump_dir1 DUMPFILE=remap1.dmp TABLES=employees
REMAP_DATA=hr.employees.employee_id:hr.remap.minus10 
REMAP_DATA=hr.employees.first_name:hr.remap.plusx 
</pre></div>
<!-- class="sect2" -->
<a id="BABECJEF"></a>
<div id="SUTIL862" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">REUSE_DUMPFILES<a id="sthref124"></a><a id="sthref125"></a></h3>
<p>Default: <code dir="ltr">NO</code></p>
<p class="subhead1"><a id="SUTIL2997"></a>Purpose</p>
<p>Specifies whether to overwrite a preexisting dump file.</p>
<p class="subhead1"><a id="SUTIL2998"></a>Syntax and Description</p>
<pre dir="ltr">
REUSE_DUMPFILES=[YES | NO]
</pre>
<p>Normally, Data Pump Export will return an error if you specify a dump file name that already exists. The <code dir="ltr">REUSE_DUMPFILES</code> parameter allows you to override that behavior and reuse a dump file name. For example, if you performed an export and specified <code dir="ltr">DUMPFILE=hr.dmp</code> and <code dir="ltr">REUSE_DUMPFILES=YES</code>, then <code dir="ltr">hr.dmp</code> would be overwritten if it already existed. Its previous contents would be lost and it would contain data for the current export instead.</p>
<p class="subhead1"><a id="SUTIL2999"></a>Example</p>
<p>The following export operation creates a dump file named <code dir="ltr">enc1.dmp</code>, even if a dump file with that name already exists.</p>
<pre dir="ltr">
&gt; expdp hr DIRECTORY=dpump_dir1 DUMPFILE=enc1.dmp
TABLES=employees REUSE_DUMPFILES=YES
</pre></div>
<!-- class="sect2" -->
<a id="BABBFAJD"></a>
<div id="SUTIL863" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">SAMPLE<a id="sthref126"></a><a id="sthref127"></a></h3>
<p>Default: There is no default</p>
<p class="subhead1"><a id="SUTIL3000"></a>Purpose</p>
<p>Allows you to specify a percentage of the data rows to be sampled and unloaded from the source database.</p>
<p class="subhead1"><a id="SUTIL3001"></a>Syntax and Description</p>
<pre dir="ltr">
SAMPLE=[[schema_name.]table_name:]sample_percent
</pre>
<p>This parameter allows you to export subsets of data by specifying the percentage of data to be sampled and exported. The <code dir="ltr">sample_percent</code> indicates the probability that a row will be selected as part of the sample. It does not mean that the database will retrieve exactly that amount of rows from the table. The value you supply for <code dir="ltr">sample_percent</code> can be anywhere from .000001 up to, but not including, 100.</p>
<p>The <code dir="ltr">sample_percent</code> can be applied to specific tables. In the following example, 50% of the <code dir="ltr">HR.EMPLOYEES</code> table will be exported:</p>
<pre dir="ltr">
SAMPLE="HR"."EMPLOYEES":50
</pre>
<p>If you specify a schema, then you must also specify a table. However, you can specify a table without specifying a schema; the current user will be assumed. If no table is specified, then the <code dir="ltr">sample_percent</code> value applies to the entire export job.</p>
<p>Note that you can use this parameter with the Data Pump Import <code dir="ltr">PCTSPACE</code> transform, so that the size of storage allocations matches the sampled data subset. (See <a href="dp_import.htm#BEHEDGJJ">"TRANSFORM"</a>.)</p>
<p class="subhead1"><a id="SUTIL3002"></a>Restrictions</p>
<ul>
<li>
<p>The <code dir="ltr">SAMPLE</code> parameter is not valid for network exports.</p>
</li>
</ul>
<p class="subhead1"><a id="SUTIL3003"></a>Example</p>
<p>In the following example, the value <code dir="ltr">70</code> for <code dir="ltr">SAMPLE</code> is applied to the entire export job because no table name is specified.</p>
<pre dir="ltr">
&gt; expdp hr DIRECTORY=dpump_dir1 DUMPFILE=sample.dmp SAMPLE=70
</pre></div>
<!-- class="sect2" -->
<a id="i1006804"></a>
<div id="SUTIL864" class="sect2">
<h3 class="sect2">SCHEMAS<a id="sthref128"></a></h3>
<p>Default: current user's schema</p>
<p class="subhead1"><a id="SUTIL3004"></a>Purpose</p>
<p>Specifies that you want to perform a schema-mode export. This<a id="sthref129"></a> is the default mode for Export.</p>
<p class="subhead1"><a id="SUTIL3005"></a>Syntax and Description</p>
<pre dir="ltr">
SCHEMAS=<span class="italic">schema_name</span> [, ...]
</pre>
<p>If you have the <code dir="ltr">DATAPUMP_EXP_FULL_DATABASE</code> role, then you can specify a single schema other than your own or a list of schema names. The <code dir="ltr">DATAPUMP_EXP_FULL_DATABASE</code> role also allows you to export additional nonschema object information for each specified schema so that the schemas can be re-created at import time. This additional information includes the user definitions themselves and all associated system and role grants, user password history, and so on. Filtering can further restrict what is exported using schema mode (see <a href="#i1009903">"Filtering During Export Operations"</a>).</p>
<p class="subhead1"><a id="SUTIL3006"></a>Restrictions</p>
<ul>
<li>
<p>If you do not have the <code dir="ltr">DATAPUMP_EXP_FULL_DATABASE</code> role, then you can specify only your own schema.</p>
</li>
<li>
<p>The <code dir="ltr">SYS</code> schema cannot be used as a source schema for export jobs.</p>
</li>
</ul>
<p class="subhead1"><a id="SUTIL3007"></a>Example</p>
<p>The following is an example of using the <code dir="ltr">SCHEMAS</code> parameter. Note that user <code dir="ltr">hr</code> is allowed to specify more than one schema because the <code dir="ltr">DATAPUMP_EXP_FULL_DATABASE</code> role was previously assigned to it for the purpose of these examples.</p>
<pre dir="ltr">
&gt; expdp hr DIRECTORY=dpump_dir1 DUMPFILE=expdat.dmp SCHEMAS=hr,sh,oe 
 
</pre>
<p>This results in a schema-mode export in which the schemas, <code dir="ltr">hr</code>, <code dir="ltr">sh,</code> and <code dir="ltr">oe</code> will be written to the <code dir="ltr">expdat.dmp</code> dump file located in the <code dir="ltr">dpump_dir1</code> directory.</p>
</div>
<!-- class="sect2" -->
<a id="CIHCIJHC"></a>
<div id="SUTIL3008" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">SERVICE_NAME<a id="sthref130"></a><a id="sthref131"></a></h3>
<p>Default: There is no default</p>
<p class="subhead1"><a id="SUTIL3009"></a>Purpose</p>
<p>Used to specify a service name to be used in conjunction with the <code dir="ltr">CLUSTER</code> parameter.</p>
<p class="subhead1"><a id="SUTIL3010"></a>Syntax and Description</p>
<pre dir="ltr">
SERVICE_NAME=<span class="italic">name</span>
</pre>
<p>The <code dir="ltr">SERVICE_NAME</code> parameter can be used with the <code dir="ltr">CLUSTER=YES</code> parameter to specify an existing service associated with a resource group that defines a set of Oracle Real Application Clusters (Oracle RAC) instances belonging to that resource group, typically a subset of all the Oracle RAC instances.</p>
<p>The service name is only used to determine the resource group and instances defined for that resource group. The instance where the job is started is always used, regardless of whether it is part of the resource group.</p>
<p>The <code dir="ltr">SERVICE_NAME</code> parameter is ignored if <code dir="ltr">CLUSTER=NO</code> is also specified.</p>
<p>Suppose you have an Oracle RAC configuration containing instances A, B, C, and D. Also suppose that a service named <code dir="ltr">my_service</code> exists with a resource group consisting of instances A, B, and C only. In such a scenario, the following would be true:</p>
<ul>
<li>
<p>If you start a Data Pump job on instance A and specify <code dir="ltr">CLUSTER=YES</code> (or accept the default, which is <code dir="ltr">Y</code>) and you do not specify the <code dir="ltr">SERVICE_NAME</code> parameter, then Data Pump creates workers on all instances: A, B, C, and D, depending on the degree of parallelism specified.</p>
</li>
<li>
<p>If you start a Data Pump job on instance A and specify <code dir="ltr">CLUSTER=YES</code> and <code dir="ltr">SERVICE_NAME=my_service</code>, then workers can be started on instances A, B, and C only.</p>
</li>
<li>
<p>If you start a Data Pump job on instance D and specify <code dir="ltr">CLUSTER=YES</code> and <code dir="ltr">SERVICE_NAME=my_service</code>, then workers can be started on instances A, B, C, and D. Even though instance D is not in <code dir="ltr">my_service</code> it is included because it is the instance on which the job was started.</p>
</li>
<li>
<p>If you start a Data Pump job on instance A and specify <code dir="ltr">CLUSTER=NO</code>, then any <code dir="ltr">SERVICE_NAME</code> parameter you specify is ignored and all processes will start on instance A.</p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#CIHHFDDI">"CLUSTER"</a></div>
<p class="subhead1"><a id="SUTIL3011"></a>Example</p>
<p>The following is an example of using the <code dir="ltr">SERVICE_NAME</code> parameter:</p>
<pre dir="ltr">
expdp hr DIRECTORY=dpump_dir1 DUMPFILE=hr_svname2.dmp SERVICE_NAME=sales
</pre>
<p>This example starts a schema-mode export (the default mode) of the <code dir="ltr">hr</code> schema. Even though <code dir="ltr">CLUSTER=YES</code> is not specified on the command line, it is the default behavior, so the job will use all instances in the resource group associated with the service name <code dir="ltr">sales</code>. A dump file named <code dir="ltr">hr_svname2.dmp</code> will be written to the location specified by the <code dir="ltr">dpump_dir1</code> directory object.</p>
</div>
<!-- class="sect2" -->
<a id="CIHBDCJD"></a>
<div id="SUTIL3012" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">SOURCE_EDITION<a id="sthref132"></a><a id="sthref133"></a></h3>
<p>Default: the default database edition on the system</p>
<p class="subhead1"><a id="SUTIL3013"></a>Purpose</p>
<p>Specifies the database edition from which objects will be exported.</p>
<p class="subhead1"><a id="SUTIL3014"></a>Syntax and Description</p>
<pre dir="ltr">
SOURCE_EDITION=<span class="italic">edition_name</span>
</pre>
<p>If <code dir="ltr">SOURCE_EDITION=</code><code dir="ltr"><span class="codeinlineitalic">edition_name</span></code> is specified, then the objects from that edition are exported. Data Pump selects all inherited objects that have not changed and all actual objects that have changed.</p>
<p>If this parameter is not specified, then the default edition is used. If the specified edition does not exist or is not usable, then an error message is returned.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a class="olink SQLRF" href="../e41084/toc.htm"><span class="italic">Oracle Database SQL Language Reference</span></a> for information about how editions are created</p>
</li>
<li>
<p><a class="olink ADFNS" href="../../appdev.112/e41502/toc.htm"><span class="italic">Oracle Database Advanced Application Developer's Guide</span></a> for more information about the editions feature, including inherited and actual objects</p>
</li>
</ul>
</div>
<p class="subhead1"><a id="SUTIL3015"></a>Restrictions</p>
<ul>
<li>
<p>This parameter is only useful if there are two or more versions of the same versionable objects in the database.</p>
</li>
<li>
<p>The job version must be <code dir="ltr">11.2</code> or higher. See <a href="#i1007148">"VERSION"</a>.</p>
</li>
</ul>
<p class="subhead1"><a id="SUTIL3016"></a>Example</p>
<p>The following is an example of using the <code dir="ltr">SOURCE_EDITION</code> parameter:</p>
<pre dir="ltr">
&gt; expdp hr DIRECTORY=dpump_dir1 DUMPFILE=exp_dat.dmp SOURCE_EDITION=exp_edition EXCLUDE=USER
</pre>
<p>This example assumes the existence of an edition named <code dir="ltr">exp_edition</code> on the system from which objects are being exported. Because no export mode is specified, the default of schema mode will be used. The <code dir="ltr">EXCLUDE=user</code> parameter excludes only the definitions of users, not the objects contained within users' schemas.</p>
</div>
<!-- class="sect2" -->
<a id="i1009049"></a>
<div id="SUTIL865" class="sect2">
<h3 class="sect2">STATUS<a id="sthref134"></a></h3>
<p>Default: <code dir="ltr">0</code></p>
<p class="subhead1"><a id="SUTIL3017"></a>Purpose</p>
<p>Specifies the frequency at which the job status display is updated.</p>
<p class="subhead1"><a id="SUTIL3018"></a>Syntax and Description</p>
<pre dir="ltr">
STATUS=[<span class="italic">integer</span>]
</pre>
<p>If you supply a value for <code dir="ltr"><span class="codeinlineitalic">integer</span></code>, it specifies how frequently, in seconds, job status should be displayed in logging mode. If no value is entered or if the default value of 0 is used, then no additional information is displayed beyond information about the completion of each object type, table, or partition.</p>
<p>This status information is written only to your standard output device, not to the log file (if one is in effect).</p>
<p class="subhead1"><a id="SUTIL3019"></a>Example</p>
<p>The following is an example of using the <code dir="ltr">STATUS</code> parameter.</p>
<pre dir="ltr">
&gt; expdp hr DIRECTORY=dpump_dir1 SCHEMAS=hr,sh STATUS=300
</pre>
<p>This example will export the <code dir="ltr">hr</code> and <code dir="ltr">sh</code> schemas and display the status of the export every 5 minutes (60 seconds x 5 = 300 seconds).</p>
</div>
<!-- class="sect2" -->
<a id="i1006816"></a>
<div id="SUTIL866" class="sect2">
<h3 class="sect2">TABLES<a id="sthref135"></a><a id="sthref136"></a></h3>
<p>Default: There is no default</p>
<p class="subhead1"><a id="SUTIL3020"></a>Purpose</p>
<p>Specifies that you want to perform a table-mode export.</p>
<p class="subhead1"><a id="SUTIL3021"></a>Syntax and Description</p>
<pre dir="ltr">
TABLES=[<span class="italic">schema_name</span>.]<span class="italic">table_name</span>[:<span class="italic">partition_name</span>] [, ...]
</pre>
<p>Filtering can restrict what is exported using this mode (see <a href="#i1009903">"Filtering During Export Operations"</a>). You can filter the data and metadata that is exported, by specifying a comma-delimited list of tables and partitions or subpartitions. If a partition name is specified, then it must be the name of a partition or subpartition in the associated table. Only the specified set of tables, partitions, and their dependent objects are unloaded.</p>
<p>If an entire partitioned table is exported, then it will be imported in its entirety, as a partitioned table. The only case in which this is not true is if <code dir="ltr">PARTITION_OPTIONS=DEPARTITION</code> is specified during import.</p>
<p>The table name that you specify can be preceded by a qualifying schema name. The schema defaults to that of the current user. To specify a schema other than your own, you must have the <code dir="ltr">DATAPUMP_EXP_FULL_DATABASE</code> role.</p>
<p>Use of the wildcard character, %, to specify table names and partition names is supported.</p>
<p>The following restrictions apply to table names:</p>
<ul>
<li>
<p>By default, table names in a database are stored as uppercase. If you have a table name in mixed-case or lowercase, and you want to preserve case-sensitivity for the table name, then you must enclose the name in quotation marks. The name must exactly match the table name stored in the database.</p>
<p>Some operating systems require that quotation marks on the command line be preceded by an escape character. The following are examples of how case-sensitivity can be preserved in the different Export modes.</p>
<ul>
<li>
<p>In command-line mode:</p>
<pre dir="ltr">
TABLES='\"Emp\"'
</pre></li>
<li>
<p>In parameter file mode:</p>
<pre dir="ltr">
TABLES='"Emp"'
</pre></li>
</ul>
</li>
<li>
<p><a id="sthref137"></a>Table names specified on the command line cannot include a pound sign (#), unless the table name is enclosed in quotation marks. Similarly, in the parameter file, if a table name includes a pound sign (#), then the Export utility interprets the rest of the line as a comment, unless the table name is enclosed in quotation marks.</p>
<p><a id="sthref138"></a><a id="sthref139"></a>F<a id="sthref140"></a>or example, if the parameter file contains the following line, then Export interprets everything on the line after <code dir="ltr">emp#</code> as a comment and does not export the tables <code dir="ltr">dept</code> and <code dir="ltr">mydata:</code></p>
<pre dir="ltr">
TABLES=(emp#, dept, mydata)
</pre>
<p>However, if the parameter file contains the following line, then the Export utility exports all three tables because <code dir="ltr">emp#</code> is enclosed in quotation marks:</p>
<pre dir="ltr">
TABLES=('"emp#"', dept, mydata)
</pre>
<div class="infobox-note">
<p class="notep1">Note:</p>
Some operating systems require single quotation marks rather than double quotation marks, or the reverse. See your Oracle operating system-specific documentation. Different operating systems also have other restrictions on table naming.
<p>For example, the UNIX C shell attaches a special meaning to a dollar sign ($) or pound sign (#) (or certain other special characters). You must use escape characters to get such characters in the name past the shell and into Export.</p>
</div>
</li>
</ul>
<p class="subhead1"><a id="SUTIL3022"></a>Using the Transportable Option During Table-Mode Export</p>
<p>To use the transportable option during a table-mode export, specify the <code dir="ltr">TRANSPORTABLE=ALWAYS</code> parameter<a id="sthref141"></a> with the <code dir="ltr">TABLES</code> parameter. Metadata for the specified tables, partitions, or subpartitions is exported to the dump file. To move the actual data, you copy the data files to the target database.</p>
<p>If only a subset of a table's partitions are exported and the <code dir="ltr">TRANSPORTABLE=ALWAYS</code> parameter is used, then on import each partition becomes a non-partitioned table.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="#BABCIEEI">"TRANSPORTABLE"</a></p>
</li>
<li>
<p>The Import <a href="dp_import.htm#BABIGHCC">"REMAP_TABLE"</a> command</p>
</li>
<li>
<p><a href="dp_overview.htm#CEGFEEJE">"Using Data File Copying to Move Data"</a></p>
</li>
</ul>
</div>
<p class="subhead1"><a id="SUTIL3023"></a>Restrictions</p>
<ul>
<li>
<p>Cross-schema references are not exported. For example, a trigger defined on a table within one of the specified schemas, but that resides in a schema not explicitly specified, is not exported.</p>
</li>
<li>
<p>Types used by the table are <span class="italic">not</span> exported in table mode. This means that if you subsequently import the dump file and the type does not already exist in the destination database, then the table creation will fail.</p>
</li>
<li>
<p>The use of synonyms as values for the <code dir="ltr">TABLES</code> parameter is not supported. For example, if the <code dir="ltr">regions</code> table in the <code dir="ltr">hr</code> schema had a synonym of <code dir="ltr">regn</code>, then it would not be valid to use <code dir="ltr">TABLES=regn</code>. An error would be returned.</p>
</li>
<li>
<p>The export of tables that include a wildcard character, %, in the table name is not supported if the table has partitions.</p>
</li>
<li>
<p>The length of the table name list specified for the <code dir="ltr">TABLES</code> parameter is limited to a maximum of 4 MB, unless you are using the <code dir="ltr">NETWORK_LINK</code> parameter to an Oracle Database release 10.2.0.3 or earlier or to a read-only database. In such cases, the limit is 4 KB.</p>
</li>
<li>
<p>You can only specify partitions from one table if <code dir="ltr">TRANSPORTABLE=ALWAYS</code> is also set on the export.</p>
</li>
</ul>
<p class="subhead1"><a id="SUTIL3024"></a>Examples</p>
<p>The following example shows a simple use of the <code dir="ltr">TABLES</code> parameter to export three tables found in the <code dir="ltr">hr</code> schema: <code dir="ltr">employees</code>, <code dir="ltr">jobs</code>, and <code dir="ltr">departments</code>. Because user <code dir="ltr">hr</code> is exporting tables found in the <code dir="ltr">hr</code> schema, the schema name is not needed before the table names.</p>
<pre dir="ltr">
&gt; expdp hr DIRECTORY=dpump_dir1 DUMPFILE=tables.dmp
TABLES=employees,jobs,departments
</pre>
<p>The following example assumes that user <code dir="ltr">hr</code> has the <code dir="ltr">DATAPUMP_EXP_FULL_DATABASE</code> role. It shows the use of the <code dir="ltr">TABLES</code> parameter to export partitions.</p>
<pre dir="ltr">
&gt; expdp hr DIRECTORY=dpump_dir1 DUMPFILE=tables_part.dmp
TABLES=sh.sales:sales_Q1_2008,sh.sales:sales_Q2_2008
</pre>
<p>This example exports the partitions, <code dir="ltr">sales_Q1_2008</code> and <code dir="ltr">sales_Q2_2008</code>, from the table <code dir="ltr">sales</code> in the schema <code dir="ltr">sh</code>.</p>
</div>
<!-- class="sect2" -->
<a id="i1006828"></a>
<div id="SUTIL867" class="sect2">
<h3 class="sect2">TABLESPACES<a id="sthref142"></a></h3>
<p>Default: There is no default</p>
<p class="subhead1"><a id="SUTIL3025"></a>Purpose</p>
<p>Specifies<a id="sthref143"></a> a list of tablespace names to be exported in tablespace mode.</p>
<p class="subhead1"><a id="SUTIL3026"></a>Syntax and Description</p>
<pre dir="ltr">
TABLESPACES=<span class="italic">tablespace_name</span> [, ...]
</pre>
<p>In tablespace mode, only the tables contained in a specified set of tablespaces are unloaded. If a table is unloaded, then its dependent objects are also unloaded. Both object metadata and data are unloaded. If any part of a table resides in the specified set, then that table and all of its dependent objects are exported. Privileged users get all tables. Unprivileged users get only the tables in their own schemas</p>
<p>Filtering can restrict what is exported using this mode (see <a href="#i1009903">"Filtering During Export Operations"</a>).</p>
<p class="subhead1"><a id="SUTIL3027"></a>Restrictions</p>
<ul>
<li>
<p>The length of the tablespace name list specified for the <code dir="ltr">TABLESPACES</code> parameter is limited to a maximum of 4 MB, unless you are using the <code dir="ltr">NETWORK_LINK</code> to an Oracle Database release 10.2.0.3 or earlier or to a read-only database. In such cases, the limit is 4 KB.</p>
</li>
</ul>
<p class="subhead1"><a id="SUTIL3028"></a>Example</p>
<p>The following is an example of using the <code dir="ltr">TABLESPACES</code> parameter. The example assumes that tablespaces <code dir="ltr">tbs_4</code>, <code dir="ltr">tbs_5</code>, and <code dir="ltr">tbs_6</code> already exist.</p>
<pre dir="ltr">
&gt; expdp hr DIRECTORY=dpump_dir1 DUMPFILE=tbs.dmp 
TABLESPACES=tbs_4, tbs_5, tbs_6
</pre>
<p>This results in a tablespace export in which tables (and their dependent objects) from the specified tablespaces (<code dir="ltr">tbs_4</code>, <code dir="ltr">tbs_5</code>, and <code dir="ltr">tbs_6</code>) will be unloaded.</p>
</div>
<!-- class="sect2" -->
<a id="BABIEGEI"></a>
<div id="SUTIL868" class="sect2">
<h3 class="sect2">TRANSPORT_FULL_CHECK<a id="sthref144"></a><a id="sthref145"></a></h3>
<p>Default: <code dir="ltr">NO</code></p>
<p class="subhead1"><a id="SUTIL3029"></a>Purpose</p>
<p>Specifies whether to check for dependencies between those objects inside the transportable set and those outside the transportable set. This parameter is applicable only to a transportable-tablespace mode export.</p>
<p class="subhead1"><a id="SUTIL3030"></a>Syntax and Description</p>
<pre dir="ltr">
TRANSPORT_FULL_CHECK=[YES | NO]
</pre>
<p>If <code dir="ltr">TRANSPORT_FULL_CHECK</code>=<code dir="ltr">YES</code>, then Export verifies that there are no dependencies between those objects inside the transportable set and those outside the transportable set. The check addresses two-way dependencies. For example, if a table is inside the transportable set but its index is not, then a failure is returned and the export operation is terminated. Similarly, a failure is also returned if an index is in the transportable set but the table is not.</p>
<p>If <code dir="ltr">TRANSPORT_FULL_CHECK</code>=<code dir="ltr">NO,</code> then Export verifies only that there are no objects within the transportable set that are dependent on objects outside the transportable set. This check addresses a one-way dependency. For example, a table is not dependent on an index, but an index <span class="italic">is</span> dependent on a table, because an index without a table has no meaning. Therefore, if the transportable set contains a table, but not its index, then this check succeeds. However, if the transportable set contains an index, but not the table, then the export operation is terminated.</p>
<p>There are other checks performed as well. For instance, export always verifies that all storage segments of all tables (and their indexes) defined within the tablespace set specified by <code dir="ltr">TRANSPORT_TABLESPACES</code> are actually contained within the tablespace set.</p>
<p class="subhead1"><a id="SUTIL3031"></a>Example</p>
<p>The following is an example of using the <code dir="ltr">TRANSPORT_FULL_CHECK</code> parameter. It assumes that tablespace <code dir="ltr">tbs_1</code> exists.</p>
<pre dir="ltr">
&gt; expdp hr DIRECTORY=dpump_dir1 DUMPFILE=tts.dmp 
TRANSPORT_TABLESPACES=tbs_1 TRANSPORT_FULL_CHECK=YES LOGFILE=tts.log 
</pre></div>
<!-- class="sect2" -->
<a id="i1006840"></a>
<div id="SUTIL869" class="sect2">
<h3 class="sect2">TRANSPORT_TABLESPACES<a id="sthref146"></a></h3>
<p>Default: There is no default</p>
<p class="subhead1"><a id="SUTIL3032"></a>Purpose</p>
<p>Specifies<a id="sthref147"></a> that you want to perform an export in transportable-tablespace mode.</p>
<p class="subhead1"><a id="SUTIL3033"></a>Syntax and Description</p>
<pre dir="ltr">
TRANSPORT_TABLESPACES=<span class="italic">tablespace_name</span> [, ...]
</pre>
<p>Use the <code dir="ltr">TRANSPORT_TABLESPACES</code> parameter to specify a list of tablespace names for which object metadata will be exported from the source database into the target database.</p>
<p>The log file for the export lists the data files that are used in the transportable set, the dump files, and any containment violations.</p>
<p>The <code dir="ltr">TRANSPORT_TABLESPACES</code> parameter exports metadata for <span class="italic">all</span> objects within the specified tablespaces. If you want to perform a transportable export of only certain tables, partitions, or subpartitions, then you must use the <code dir="ltr">TABLES</code> parameter with the <code dir="ltr">TRANSPORTABLE=ALWAYS</code> parameter.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
You cannot export transportable tablespaces and then import them into a database at a lower release level. The target database must be at the same or higher release level as the source database.</div>
<p class="subhead2"><a id="SUTIL3034"></a>Restrictions</p>
<ul>
<li>
<p>Transportable jobs are not restartable.</p>
</li>
<li>
<p>Transportable jobs are restricted to a degree of parallelism of 1.</p>
</li>
<li>
<p>Transportable tablespace mode requires that you have the <code dir="ltr">DATAPUMP_EXP_FULL_DATABASE</code> role.</p>
</li>
<li>
<p>Transportable mode does not support encrypted columns.</p>
</li>
<li>
<p>The default tablespace of the user performing the export must not be set to one of the tablespaces being transported.</p>
</li>
<li>
<p>The <code dir="ltr">SYS</code> and <code dir="ltr">SYSAUX</code> tablespaces are not transportable.</p>
</li>
<li>
<p>All tablespaces in the transportable set must be set to read-only.</p>
</li>
<li>
<p>If the Data Pump Export <code dir="ltr">VERSION</code> parameter is specified along with the <code dir="ltr">TRANSPORT_TABLESPACES</code> parameter, then the version must be equal to or greater than the Oracle Database <code dir="ltr">COMPATIBLE</code> initialization parameter.</p>
</li>
<li>
<p>The <code dir="ltr">TRANSPORT_TABLESPACES</code> parameter cannot be used in conjunction with the <code dir="ltr">QUERY</code> parameter.</p>
</li>
<li>
<p>Transportable tablespace jobs do not support the <code dir="ltr">ACCESS_METHOD</code> parameter for Data Pump Export.</p>
</li>
</ul>
<p class="subhead1"><a id="SUTIL3035"></a>Example 1</p>
<p>The following is an example of using the <code dir="ltr">TRANSPORT_TABLESPACES</code> parameter in a file-based job (rather than network-based). The tablespace <code dir="ltr">tbs_1</code> is the tablespace being moved. This example assumes that tablespace <code dir="ltr">tbs_1</code> exists and that it has been set to read-only. This example also assumes that the default tablespace was changed before this export command was issued.</p>
<pre dir="ltr">
&gt; expdp hr DIRECTORY=dpump_dir1 DUMPFILE=tts.dmp
TRANSPORT_TABLESPACES=tbs_1 TRANSPORT_FULL_CHECK=YES LOGFILE=tts.log
</pre>
<div class="infoboxnotealso">
<p class="notep1"><span class="bold">See Also</span>:</p>
<ul>
<li>
<p><a href="#i1007524">"Transportable Tablespace Mode"</a></p>
</li>
<li>
<p><a href="dp_overview.htm#CEGFEEJE">"Using Data File Copying to Move Data"</a></p>
</li>
<li>
<p><a href="#BEHDGGGI">"Considerations for Time Zone File Versions in Transportable Tablespace Mode"</a></p>
</li>
<li>
<p><a class="olink ADMIN" href="../e25494/toc.htm"><span class="italic">Oracle Database Administrator's Guide</span></a> for detailed information about transporting tablespaces between databases</p>
</li>
</ul>
</div>
</div>
<!-- class="sect2" -->
<a id="BABCIEEI"></a>
<div id="SUTIL202" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">TRANSPORTABLE<a id="sthref148"></a><a id="sthref149"></a></h3>
<p>Default: <code dir="ltr">NEVER</code></p>
<p class="subhead1"><a id="SUTIL3036"></a>Purpose</p>
<p>Specifies whether the transportable option should be used during a table mode export (specified with the <code dir="ltr">TABLES</code> parameter) to export metadata for specific tables, partitions, and subpartitions.</p>
<p class="subhead1"><a id="SUTIL3037"></a>Syntax and Description</p>
<pre dir="ltr">
TRANSPORTABLE = [ALWAYS | NEVER]
</pre>
<p>The definitions of the allowed values are as follows:</p>
<p><code dir="ltr">ALWAYS</code> - Instructs the export job to use the transportable option. If transportable is not possible, then the job will fail. The transportable option exports only metadata for the specified tables, partitions, or subpartitions specified by the <code dir="ltr">TABLES</code> parameter. You must copy the actual data files to the target database. See <a href="dp_overview.htm#CEGFEEJE">"Using Data File Copying to Move Data"</a>.</p>
<p><code dir="ltr">NEVER</code> - Instructs the export job to use either the direct path or external table method to unload data rather than the transportable option. This is the default.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
If you want to export an entire tablespace in transportable mode, then use the <code dir="ltr">TRANSPORT_TABLESPACES</code> parameter.</div>
<ul>
<li>
<p>If only a subset of a table's partitions are exported and the <code dir="ltr">TRANSPORTABLE=ALWAYS</code> parameter is used, then on import each partition becomes a non-partitioned table.</p>
</li>
<li>
<p>If only a subset of a table's partitions are exported and the <code dir="ltr">TRANSPORTABLE</code> parameter is <span class="italic">not</span> used at all or is set to <code dir="ltr">NEVER</code> (the default), then on import:</p>
<ul>
<li>
<p>If <code dir="ltr">PARTITION_OPTIONS=DEPARTITION</code> is used, then each partition included in the dump file set is created as a non-partitioned table.</p>
</li>
<li>
<p>If <code dir="ltr">PARTITION_OPTIONS</code> is <span class="italic">not</span> used, then the complete table is created. That is, all the metadata for the complete table is present so that the table definition looks the same on the target system as it did on the source. But only the data that was exported for the specified partitions is inserted into the table.</p>
</li>
</ul>
</li>
</ul>
<p class="subhead1"><a id="SUTIL3038"></a>Restrictions</p>
<ul>
<li>
<p>The <code dir="ltr">TRANSPORTABLE</code> parameter is only valid in table mode exports.</p>
</li>
<li>
<p>The user performing a transportable export requires the <code dir="ltr">DATAPUMP_EXP_FULL_DATABASE</code> privilege.</p>
</li>
<li>
<p>Tablespaces associated with tables, partitions, and subpartitions must be read-only.</p>
</li>
<li>
<p>Transportable mode does not export any data. Data is copied when the tablespace data files are copied from the source system to the target system. The tablespaces that must be copied are listed at the end of the log file for the export operation.</p>
</li>
<li>
<p>To make use of the <code dir="ltr">TRANSPORTABLE</code> parameter, the <code dir="ltr">COMPATIBLE</code> initialization parameter must be set to at least 11.0.0.</p>
</li>
<li>
<p>The default tablespace of the user performing the export must not be set to one of the tablespaces being transported.</p>
</li>
</ul>
<p class="subhead1"><a id="SUTIL3039"></a>Example</p>
<p>The following example assumes that the <code dir="ltr">sh</code> user has the <code dir="ltr">DATAPUMP_EXP_FULL_DATABASE</code> role and that table <code dir="ltr">sales2</code> is partitioned and contained within tablespace <code dir="ltr">tbs2</code>. (The <code dir="ltr">tbs2</code> tablespace must be set to read-only in the source database.)</p>
<pre dir="ltr">
&gt; expdp sh DIRECTORY=dpump_dir1 DUMPFILE=tto1.dmp
TABLES=sh.sales2 TRANSPORTABLE=ALWAYS 
</pre>
<p>After the export completes successfully, you must copy the data files to the target database area. You could then perform an import operation using the <code dir="ltr">PARTITION_OPTIONS</code> and <code dir="ltr">REMAP_SCHEMA</code> parameters to make each of the partitions in <code dir="ltr">sales2</code> its own table.</p>
<pre dir="ltr">
&gt; impdp system PARTITION_OPTIONS=DEPARTITION 
TRANSPORT_DATAFILES=oracle/dbs/tbs2 DIRECTORY=dpump_dir1 
DUMPFILE=tto1.dmp REMAP_SCHEMA=sh:dp
</pre></div>
<!-- class="sect2" -->
<a id="i1007148"></a>
<div id="SUTIL870" class="sect2">
<h3 class="sect2">VERSION<a id="sthref150"></a></h3>
<p>Default: <code dir="ltr">COMPATIBLE</code></p>
<p class="subhead1"><a id="SUTIL3040"></a>Purpose</p>
<p>Specifies<a id="sthref151"></a> the version of database objects to be exported (that is, only database objects and attributes that are compatible with the specified release will be exported). This can be used to create a dump file set that is compatible with a previous release of Oracle Database. Note that this does <span class="italic">not</span> mean that Data Pump Export can be used with releases of Oracle Database prior to Oracle Database 10<span class="italic">g</span> release 1 (10.1). Data Pump Export only works with Oracle Database 10<span class="italic">g</span> release 1 (10.1) or later. The <code dir="ltr">VERSION</code> parameter simply allows you to identify the version of the objects being exported.</p>
<p class="subhead1"><a id="SUTIL3041"></a>Syntax and Description</p>
<pre dir="ltr">
VERSION=[COMPATIBLE | LATEST | <span class="italic">version_string</span>]
</pre>
<p>The legal values for the <code dir="ltr">VERSION</code> parameter are as follows:</p>
<ul>
<li>
<p><code dir="ltr">COMPATIBLE</code> - This is the default value. The version of the metadata corresponds to the database compatibility level. Database compatibility must be set to 9.2 or higher.</p>
</li>
<li>
<p><code dir="ltr">LATEST</code> - The version of the metadata corresponds to the database release.</p>
</li>
<li>
<p><code dir="ltr"><span class="codeinlineitalic">version_string</span></code> - A specific database release (for example, 11.2.0). In Oracle Database 11<span class="italic">g,</span> this value cannot be lower than 9.2.</p>
</li>
</ul>
<p>Database objects or attributes that are incompatible with the specified release will not be exported. For example, tables containing new datatypes that are not supported in the specified release will not be exported.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="dp_overview.htm#CEGFCFFI">"Moving Data Between Different Database Releases"</a></div>
<p class="subhead1"><a id="SUTIL3042"></a>Restrictions</p>
<ul>
<li>
<p>Exporting a table with archived LOBs<a id="sthref152"></a><a id="sthref153"></a> to a database release earlier than 11.2 is not allowed.</p>
</li>
<li>
<p>If the Data Pump Export <code dir="ltr">VERSION</code> parameter is specified along with the <code dir="ltr">TRANSPORT_TABLESPACES</code> parameter, then the value must be equal to or greater than the Oracle Database <code dir="ltr">COMPATIBLE</code> initialization parameter.</p>
</li>
</ul>
<p class="subhead1"><a id="SUTIL3043"></a>Example</p>
<p>The following example shows an export for which the version of the metadata will correspond to the database release:</p>
<pre dir="ltr">
&gt; expdp hr TABLES=hr.employees VERSION=LATEST DIRECTORY=dpump_dir1
DUMPFILE=emp.dmp NOLOGFILE=YES
</pre></div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="i1005616"></a>
<div id="SUTIL871" class="sect1">
<h2 class="sect1">Commands Available in Export's Interactive-Command Mode</h2>
<p>In interactive-command mode<a id="sthref154"></a>, the current job continues running, but logging to the terminal is suspended and the Export prompt (<code dir="ltr">Export&gt;</code>) is displayed.</p>
<p>To start interactive-command mode, do one of the following:</p>
<ul>
<li>
<p>From an attached client, press Ctrl+C.</p>
</li>
<li>
<p>From a terminal other than the one on which the job is running, specify the <code dir="ltr">ATTACH</code> parameter in an <code dir="ltr">expdp</code> command to attach to the job. This is a useful feature in situations in which you start a job at one location and need to check on it at a later time from a different location.</p>
</li>
</ul>
<p><a href="#g1013354">Table 2-1</a> lists the activities you can perform for the current job from the Data Pump Export prompt in interactive-command mode.</p>
<div id="SUTIL3044" class="tblformal">
<p class="titleintable"><a id="sthref155"></a><a id="g1013354"></a>Table 2-1 Supported Activities in Data Pump Export's Interactive-Command Mode</p>
<table class="cellalignment1394" title="Supported Activities in Data Pump Export's Interactive-Command Mode" summary="Commands for Data Pump Export interactive command mode" dir="ltr">
<thead>
<tr class="cellalignment1388">
<th class="cellalignment1395" id="r1c1-t46">Activity</th>
<th class="cellalignment1395" id="r1c2-t46">Command Used</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1388">
<td class="cellalignment1396" id="r2c1-t46" headers="r1c1-t46">
<p>Add additional dump files.</p>
</td>
<td class="cellalignment1396" headers="r2c1-t46 r1c2-t46">
<p><a href="#i1007234">ADD_FILE</a></p>
</td>
</tr>
<tr class="cellalignment1388">
<td class="cellalignment1396" id="r3c1-t46" headers="r1c1-t46">
<p>Exit interactive mode and enter logging mode.</p>
</td>
<td class="cellalignment1396" headers="r3c1-t46 r1c2-t46">
<p><a href="#i1007220">CONTINUE_CLIENT</a></p>
</td>
</tr>
<tr class="cellalignment1388">
<td class="cellalignment1396" id="r4c1-t46" headers="r1c1-t46">
<p>Stop the export client session, but leave the job running.</p>
</td>
<td class="cellalignment1396" headers="r4c1-t46 r1c2-t46">
<p><a href="#i1007335">EXIT_CLIENT</a></p>
</td>
</tr>
<tr class="cellalignment1388">
<td class="cellalignment1396" id="r5c1-t46" headers="r1c1-t46">
<p>Redefine the default size to be used for any subsequent dump files.</p>
</td>
<td class="cellalignment1396" headers="r5c1-t46 r1c2-t46">
<p><a href="#BABBJFFA">FILESIZE</a></p>
</td>
</tr>
<tr class="cellalignment1388">
<td class="cellalignment1396" id="r6c1-t46" headers="r1c1-t46">
<p>Display a summary of available commands.</p>
</td>
<td class="cellalignment1396" headers="r6c1-t46 r1c2-t46">
<p><a href="#i1007342">HELP</a></p>
</td>
</tr>
<tr class="cellalignment1388">
<td class="cellalignment1396" id="r7c1-t46" headers="r1c1-t46">
<p>Detach all currently attached client sessions and terminate the current job.</p>
</td>
<td class="cellalignment1396" headers="r7c1-t46 r1c2-t46">
<p><a href="#i1007241">KILL_JOB</a></p>
</td>
</tr>
<tr class="cellalignment1388">
<td class="cellalignment1396" id="r8c1-t46" headers="r1c1-t46">
<p>Increase or decrease the number of active worker processes for the current job. This command is valid only in the Enterprise Edition of Oracle Database 11<span class="italic">g</span>.</p>
</td>
<td class="cellalignment1396" headers="r8c1-t46 r1c2-t46">
<p><a href="#i1007213">PARALLEL</a></p>
</td>
</tr>
<tr class="cellalignment1388">
<td class="cellalignment1396" id="r9c1-t46" headers="r1c1-t46">
<p>Restart a stopped job to which you are attached.</p>
</td>
<td class="cellalignment1396" headers="r9c1-t46 r1c2-t46">
<p><a href="#i1007206">START_JOB</a></p>
</td>
</tr>
<tr class="cellalignment1388">
<td class="cellalignment1396" id="r10c1-t46" headers="r1c1-t46">
<p>Display detailed status for the current job and/or set status interval.</p>
</td>
<td class="cellalignment1396" headers="r10c1-t46 r1c2-t46">
<p><a href="#i1007227">STATUS</a></p>
</td>
</tr>
<tr class="cellalignment1388">
<td class="cellalignment1396" id="r11c1-t46" headers="r1c1-t46">
<p>Stop the current job for later restart.</p>
</td>
<td class="cellalignment1396" headers="r11c1-t46 r1c2-t46">
<p><a href="#i1007199">STOP_JOB</a></p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<p><a id="i1007192"></a>The following are descriptions of the commands available in the interactive-command mode of Data Pump Export.</p>
<a id="i1007234"></a>
<div id="SUTIL872" class="sect2">
<h3 class="sect2">ADD_FILE<a id="sthref156"></a></h3>
<p class="subhead1"><a id="SUTIL3045"></a>Purpose</p>
<p>Adds<a id="sthref157"></a> additional files or substitution variables to the export dump file set.</p>
<p class="subhead1"><a id="SUTIL3046"></a>Syntax and Description</p>
<pre dir="ltr">
ADD_FILE=[<span class="italic">directory_object</span>:]<span class="italic">file_name</span> [,...]
</pre>
<p>Each file name can have a different directory object. If no directory object is specified, then the default is assumed.</p>
<p>The <code dir="ltr"><span class="codeinlineitalic">file_name</span></code> must not contain any directory path information. However, it can include a substitution variable, <code dir="ltr">%U</code>, which indicates that multiple files may be generated using the specified file name as a template.</p>
<p>The size of the file being added is determined by the setting of the <code dir="ltr">FILESIZE</code> parameter.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="dp_overview.htm#i1007107">"File Allocation"</a> for information about the effects of using substitution variables</div>
<p class="subhead1"><a id="SUTIL3047"></a>Example</p>
<p>The following example adds two dump files to the dump file set. A directory object is not specified for the dump file named <code dir="ltr">hr2.dmp</code>, so the default directory object for the job is assumed. A different directory object, <code dir="ltr">dpump_dir2</code>, is specified for the dump file named <code dir="ltr">hr3.dmp</code>.</p>
<pre dir="ltr">
Export&gt; ADD_FILE=hr2.dmp, dpump_dir2:hr3.dmp
</pre></div>
<!-- class="sect2" -->
<a id="i1007220"></a>
<div id="SUTIL873" class="sect2">
<h3 class="sect2">CONTINUE_CLIENT<a id="sthref158"></a></h3>
<p class="subhead1"><a id="SUTIL3048"></a>Purpose</p>
<p>Changes<a id="sthref159"></a> the Export mode from interactive-command mode to logging mode.</p>
<p class="subhead1"><a id="SUTIL3049"></a>Syntax and Description</p>
<pre dir="ltr">
CONTINUE_CLIENT
</pre>
<p>In logging mode, status is continually output to the terminal. If the job is currently stopped, then <code dir="ltr">CONTINUE_CLIENT</code> will also cause the client to attempt to start the job.</p>
<p class="subhead1"><a id="SUTIL3050"></a>Example</p>
<pre dir="ltr">
Export&gt; CONTINUE_CLIENT
</pre></div>
<!-- class="sect2" -->
<a id="i1007335"></a>
<div id="SUTIL874" class="sect2">
<h3 class="sect2">EXIT_CLIENT<a id="sthref160"></a></h3>
<p class="subhead1"><a id="SUTIL3051"></a>Purpose</p>
<p>Stops<a id="sthref161"></a> the export client session, exits Export, and discontinues logging to the terminal, but leaves the current job running.</p>
<p class="subhead1"><a id="SUTIL3052"></a>Syntax and Description</p>
<pre dir="ltr">
EXIT_CLIENT
</pre>
<p>Because <code dir="ltr">EXIT_CLIENT</code> leaves the job running, you can attach to the job at a later time. To see the status of the job, you can monitor the log file for the job or you can query the <code dir="ltr">USER_DATAPUMP_JOBS</code> view or the <code dir="ltr">V$SESSION_LONGOPS</code> view.</p>
<p class="subhead1"><a id="SUTIL3053"></a>Example</p>
<pre dir="ltr">
Export&gt; EXIT_CLIENT
</pre></div>
<!-- class="sect2" -->
<a id="BABBJFFA"></a>
<div id="SUTIL875" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">FILESIZE<a id="sthref162"></a><a id="sthref163"></a></h3>
<p class="subhead1"><a id="SUTIL3054"></a>Purpose</p>
<p>Redefines the maximum size of subsequent dump files. If the size is reached for any member of the dump file set, then that file is closed and an attempt is made to create a new file, if the file specification contains a substitution variable or if additional dump files have been added to the job.</p>
<p class="subhead1"><a id="SUTIL3055"></a>Syntax and Description</p>
<pre dir="ltr">
FILESIZE=<span class="italic">integer</span>[B | KB | MB | GB | TB]
</pre>
<p>The <code dir="ltr"><span class="codeinlineitalic">integer</span></code> can be immediately followed (do not insert a space) by <code dir="ltr">B</code>, <code dir="ltr">KB</code>, <code dir="ltr">MB</code>, <code dir="ltr">GB</code>, or <code dir="ltr">TB</code> (indicating bytes, kilobytes, megabytes, gigabytes, and terabytes respectively). Bytes is the default. The actual size of the resulting file may be rounded down slightly to match the size of the internal blocks used in dump files.</p>
<p>A file size of 0 is equivalent to the maximum file size of 16 TB.</p>
<p class="subhead2"><a id="SUTIL3769"></a>Restrictions</p>
<ul>
<li>
<p>The minimum size for a file is ten times the default Data Pump block size, which is 4 kilobytes.</p>
</li>
<li>
<p>The maximum size for a file is 16 terabytes.</p>
</li>
</ul>
<p class="subhead1"><a id="SUTIL3056"></a>Example</p>
<pre dir="ltr">
Export&gt; FILESIZE=100MB
</pre></div>
<!-- class="sect2" -->
<a id="i1007342"></a>
<div id="SUTIL876" class="sect2">
<h3 class="sect2">HELP<a id="sthref164"></a></h3>
<p class="subhead1"><a id="SUTIL3057"></a>Purpose</p>
<p>Provides information about Data Pump Export <a id="sthref165"></a><a id="sthref166"></a>commands available in interactive-command mode.</p>
<p class="subhead1"><a id="SUTIL3058"></a>Syntax and Description</p>
<pre dir="ltr">
HELP
</pre>
<p>Displays information about the commands available in interactive-command mode.</p>
<p class="subhead1"><a id="SUTIL3059"></a>Example</p>
<pre dir="ltr">
Export&gt; HELP
</pre></div>
<!-- class="sect2" -->
<a id="i1007241"></a>
<div id="SUTIL877" class="sect2">
<h3 class="sect2">KILL_JOB<a id="sthref167"></a></h3>
<p class="subhead1"><a id="SUTIL3060"></a>Purpose</p>
<p>Detaches<a id="sthref168"></a> all currently attached client sessions and then terminates the current job. It exits Export and returns to the terminal prompt.</p>
<p class="subhead1"><a id="SUTIL3061"></a>Syntax and Description</p>
<pre dir="ltr">
KILL_JOB
</pre>
<p>A job that is terminated using <code dir="ltr">KILL_JOB</code> cannot be restarted. All attached clients, including the one issuing the <code dir="ltr">KILL_JOB</code> command, receive a warning that the job is being terminated by the current user and are then detached. After all clients are detached, the job's process structure is immediately run down and the master table and dump files are deleted. Log files are not deleted.</p>
<p class="subhead1"><a id="SUTIL3062"></a>Example</p>
<pre dir="ltr">
Export&gt; KILL_JOB
</pre></div>
<!-- class="sect2" -->
<a id="i1007213"></a>
<div id="SUTIL878" class="sect2">
<h3 class="sect2">PARALLEL<a id="sthref169"></a><a id="sthref170"></a></h3>
<p class="subhead1"><a id="SUTIL3063"></a>Purpose</p>
<p>Enables you to increase or decrease the number of <span class="italic">active</span> processes (worker and parallel slaves) for the current job.</p>
<p class="subhead1"><a id="SUTIL3064"></a>Syntax and Description</p>
<pre dir="ltr">
PARALLEL=<span class="italic">integer</span>
</pre>
<p><code dir="ltr">PARALLEL</code> is available as both a command-line parameter and as an interactive-command mode<a id="sthref171"></a> parameter. You set it to the desired number of parallel processes (worker and parallel slaves). An increase takes effect immediately if there are sufficient files and resources. A decrease does not take effect until an existing process finishes its current task. If the value is decreased, then workers are idled but not deleted until the job exits.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#i1006404">"PARALLEL"</a> for more information about parallelism</div>
<p class="subhead1"><a id="SUTIL3781"></a>Restrictions</p>
<ul>
<li>
<p>This parameter is valid only in the Enterprise Edition of Oracle Database 11<span class="italic">g</span>.</p>
</li>
</ul>
<p class="subhead1"><a id="SUTIL3065"></a>Example</p>
<pre dir="ltr">
Export&gt; PARALLEL=10
</pre></div>
<!-- class="sect2" -->
<a id="i1007206"></a>
<div id="SUTIL879" class="sect2">
<h3 class="sect2">START_JOB<a id="sthref172"></a></h3>
<p class="subhead1"><a id="SUTIL3066"></a>Purpose</p>
<p>Starts<a id="sthref173"></a> the current job to which you are attached.</p>
<p class="subhead1"><a id="SUTIL3067"></a>Syntax and Description</p>
<pre dir="ltr">
START_JOB
</pre>
<p>The <code dir="ltr">START_JOB</code> command restarts the current job to which you are attached (the job cannot be currently executing). The job is restarted with no data loss or corruption after an unexpected failure or after you issued a <code dir="ltr">STOP_JOB</code> command, provided the dump file set and master table have not been altered in any way.</p>
<p>Exports done in transportable-tablespace mode are not restartable.</p>
<p class="subhead1"><a id="SUTIL3068"></a>Example</p>
<pre dir="ltr">
Export&gt; START_JOB
</pre></div>
<!-- class="sect2" -->
<a id="i1007227"></a>
<div id="SUTIL880" class="sect2">
<h3 class="sect2">STATUS<a id="sthref174"></a></h3>
<p class="subhead1"><a id="SUTIL3069"></a>Purpose</p>
<p>Displays<a id="sthref175"></a> cumulative status of the job, a description of the current operation, and an estimated completion percentage. It also allows you to reset the display interval for logging mode status.</p>
<p class="subhead1"><a id="SUTIL3070"></a>Syntax and Description</p>
<pre dir="ltr">
STATUS[=<span class="italic">integer</span>]
</pre>
<p>You have the option of specifying how frequently, in seconds, this status should be displayed in logging mode. If no value is entered or if the default value of 0 is used, then the periodic status display is turned off and status is displayed only once.</p>
<p>This status information is written only to your standard output device, not to the log file (even if one is in effect).</p>
<p class="subhead1"><a id="SUTIL3071"></a>Example</p>
<p>The following example will display the current job status and change the logging mode display interval to five minutes (300 seconds):</p>
<pre dir="ltr">
Export&gt; STATUS=300
</pre></div>
<!-- class="sect2" -->
<a id="i1007199"></a>
<div id="SUTIL881" class="sect2">
<h3 class="sect2">STOP_JOB<a id="sthref176"></a></h3>
<p class="subhead1"><a id="SUTIL3072"></a>Purpose</p>
<p>Stops<a id="sthref177"></a> the current job either immediately or after an orderly shutdown, and exits Export.</p>
<p class="subhead1"><a id="SUTIL3073"></a>Syntax and Description</p>
<pre dir="ltr">
STOP_JOB[=IMMEDIATE]
</pre>
<p>If the master table and dump file set are not disturbed when or after the <code dir="ltr">STOP_JOB</code> command is issued, then the job can be attached to and restarted at a later time with the <code dir="ltr">START_JOB</code> command.</p>
<p>To perform an orderly shutdown, use <code dir="ltr">STOP_JOB</code> (without any associated value). A warning requiring confirmation will be issued. An orderly shutdown stops the job after worker processes have finished their current tasks.</p>
<p>To perform an immediate shutdown, specify <code dir="ltr">STOP_JOB</code>=<code dir="ltr">IMMEDIATE</code>. A warning requiring confirmation will be issued. All attached clients, including the one issuing the <code dir="ltr">STOP_JOB</code> command, receive a warning that the job is being stopped by the current user and they will be detached. After all clients are detached, the process structure of the job is immediately run down. That is, the master process will not wait for the worker processes to finish their current tasks. There is no risk of corruption or data loss when you specify <code dir="ltr">STOP_JOB=IMMEDIATE</code>. However, some tasks that were incomplete at the time of shutdown may have to be redone at restart time.</p>
<p class="subhead1"><a id="SUTIL3074"></a>Example</p>
<pre dir="ltr">
Export&gt; STOP_JOB=IMMEDIATE
</pre></div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="i1006376"></a>
<div id="SUTIL882" class="sect1">
<h2 class="sect1">Examples of Using Data Pump Export</h2>
<p>This section provides the following examples of using Data Pump Export:</p>
<ul>
<li>
<p><a href="#BEHJEHAE">Performing a Table-Mode Export</a></p>
</li>
<li>
<p><a href="#BEHEJDBE">Data-Only Unload of Selected Tables and Rows</a></p>
</li>
<li>
<p><a href="#BEHGAHCJ">Estimating Disk Space Needed in a Table-Mode Export</a></p>
</li>
<li>
<p><a href="#BEHEFFAB">Performing a Schema-Mode Export</a></p>
</li>
<li>
<p><a href="#i1006259">Performing a Parallel Full Database Export</a></p>
</li>
<li>
<p><a href="#i1006279">Using Interactive Mode to Stop and Reattach to a Job</a></p>
</li>
</ul>
<p>For information that will help you to successfully use these examples, see <a href="#BEHCECFD">"Using the Export Parameter Examples"</a>.</p>
<a id="BEHJEHAE"></a>
<div id="SUTIL883" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Performing a Table-Mode Export</h3>
<p><a href="#BEHJGFEJ">Example 2-1</a> shows a table-mode export, specified using the <code dir="ltr">TABLES</code> parameter. Issue the following Data Pump export command to perform a table export of the tables <code dir="ltr">employees</code> and <code dir="ltr">jobs</code> from the human resources (<code dir="ltr">hr</code>) schema:</p>
<div id="SUTIL3075" class="example">
<p class="titleinexample"><a id="BEHJGFEJ"></a>Example 2-1 Performing a Table-Mode Export</p>
<pre dir="ltr">
expdp hr TABLES=employees,jobs DUMPFILE=dpump_dir1:table.dmp NOLOGFILE=YES
</pre></div>
<!-- class="example" -->
<p>Because user <code dir="ltr">hr</code> is exporting tables in his own schema, it is not necessary to specify the schema name for the tables. The <code dir="ltr">NOLOGFILE=YES</code> parameter indicates that an Export log file of the operation will not be generated.</p>
</div>
<!-- class="sect2" -->
<a id="BEHEJDBE"></a>
<div id="SUTIL884" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Data-Only Unload of Selected Tables and Rows</h3>
<p><a href="#BEHHDHFE">Example 2-2</a> shows the contents of a parameter file (<code dir="ltr">exp.par</code>) that you could use to perform a data-only unload of all tables in the human resources (<code dir="ltr">hr</code>) schema except for the tables <code dir="ltr">countries</code> and <code dir="ltr">regions</code>. Rows in the <code dir="ltr">employees</code> table are unloaded that have a <code dir="ltr">department_id</code> other than 50. The rows are ordered by <code dir="ltr">employee_id</code>.</p>
<div id="SUTIL3076" class="example">
<p class="titleinexample"><a id="BEHHDHFE"></a>Example 2-2 Data-Only Unload of Selected Tables and Rows</p>
<pre dir="ltr">
DIRECTORY=dpump_dir1
DUMPFILE=dataonly.dmp
CONTENT=DATA_ONLY
EXCLUDE=TABLE:"IN ('COUNTRIES', 'REGIONS')"
QUERY=employees:"WHERE department_id !=50 ORDER BY employee_id"
</pre></div>
<!-- class="example" -->
<p>You can issue the following command to execute the <code dir="ltr">exp.par</code> parameter file:</p>
<pre dir="ltr">
&gt; expdp hr PARFILE=exp.par
</pre>
<p>A schema-mode export (the default mode) is performed, but the <code dir="ltr">CONTENT</code> parameter effectively limits the export to an unload of just the table's data. The DBA previously created the directory object <code dir="ltr">dpump_dir1</code> which points to the directory on the server where user <code dir="ltr">hr</code> is authorized to read and write export dump files. The dump file <code dir="ltr">dataonly.dmp</code> is created in <code dir="ltr">dpump_dir1</code>.</p>
</div>
<!-- class="sect2" -->
<a id="BEHGAHCJ"></a>
<div id="SUTIL885" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Estimating Disk Space Needed in a Table-Mode Export</h3>
<p><a href="#BEHFGABE">Example 2-3</a> shows the use of the <code dir="ltr">ESTIMATE_ONLY</code> parameter to estimate the space that would be consumed in a table-mode export, without actually performing the export operation. Issue the following command to use the <code dir="ltr">BLOCKS</code> method to estimate the number of bytes required to export the data in the following three tables located in the human resource (<code dir="ltr">hr</code>) schema: <code dir="ltr">employees</code>, <code dir="ltr">departments</code>, and <code dir="ltr">locations</code>.</p>
<div id="SUTIL3077" class="example">
<p class="titleinexample"><a id="BEHFGABE"></a>Example 2-3 Estimating Disk Space Needed in a Table-Mode Export</p>
<pre dir="ltr">
&gt; expdp hr DIRECTORY=dpump_dir1 ESTIMATE_ONLY=YES TABLES=employees, 
departments, locations LOGFILE=estimate.log
</pre></div>
<!-- class="example" -->
<p>The estimate is printed in the log file and displayed on the client's standard output device. The estimate is for table row data only; it does not include metadata.</p>
</div>
<!-- class="sect2" -->
<a id="BEHEFFAB"></a>
<div id="SUTIL886" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Performing a Schema-Mode Export</h3>
<p><a href="#BEHFJEJD">Example 2-4</a> shows a schema-mode export of the <code dir="ltr">hr</code> schema. In a schema-mode export, only objects belonging to the corresponding schemas are unloaded. Because schema mode is the default mode, it is not necessary to specify the <code dir="ltr">SCHEMAS</code> parameter on the command line, unless you are specifying more than one schema or a schema other than your own.</p>
<div id="SUTIL3078" class="example">
<p class="titleinexample"><a id="BEHFJEJD"></a>Example 2-4 Performing a Schema Mode Export</p>
<pre dir="ltr">
&gt; expdp hr DUMPFILE=dpump_dir1:expschema.dmp LOGFILE=dpump_dir1:expschema.log
</pre></div>
<!-- class="example" --></div>
<!-- class="sect2" -->
<a id="i1006259"></a>
<div id="SUTIL887" class="sect2">
<h3 class="sect2">Performing a Parallel Full Database Export</h3>
<p><a href="#i1009711">Example 2-5</a> shows a full database Export that will have up to 3 parallel processes (worker or PQ slaves).</p>
<div id="SUTIL3079" class="example">
<p class="titleinexample"><a id="i1009711"></a>Example 2-5 Parallel Full Export</p>
<pre dir="ltr">
&gt; expdp hr FULL=YES DUMPFILE=dpump_dir1:full1%U.dmp, dpump_dir2:full2%U.dmp
FILESIZE=2G PARALLEL=3 LOGFILE=dpump_dir1:expfull.log JOB_NAME=expfull
</pre>
<p>Because this is a full database export, all data and metadata in the database will be exported. Dump files <code dir="ltr">full101</code>.<code dir="ltr">dmp</code>, <code dir="ltr">full201</code>.<code dir="ltr">dmp</code>, <code dir="ltr">full102</code>.<code dir="ltr">dmp</code>, and so on will be created in a round-robin fashion in the directories pointed to by the <code dir="ltr">dpump_dir1</code> and <code dir="ltr">dpump_dir2</code> directory objects. For best performance, these should be on separate I/O channels. Each file will be up to 2 gigabytes in size, as necessary. Initially, up to three files will be created. More files will be created, if needed. The job and master table will have a name of <code dir="ltr">expfull</code>. The log file will be written to <code dir="ltr">expfull.log</code> in the <code dir="ltr">dpump_dir1</code> directory.</p>
</div>
<!-- class="example" --></div>
<!-- class="sect2" -->
<a id="i1006279"></a>
<div id="SUTIL888" class="sect2">
<h3 class="sect2">Using Interactive Mode to Stop and Reattach to a Job</h3>
<p>To start this example, reexecute the parallel full export in <a href="#i1009711">Example 2-5</a>. While the export is running, press Ctrl+C. This will start the interactive-command interface of Data Pump Export. In the interactive interface, logging to the terminal stops and the Export prompt is displayed.</p>
<div id="SUTIL3080" class="example">
<p class="titleinexample"><a id="BEHJDDJG"></a>Example 2-6 Stopping and Reattaching to a Job</p>
<p>At the Export prompt, issue the following command to stop the job:</p>
<pre dir="ltr">
Export&gt; STOP_JOB=IMMEDIATE
Are you sure you wish to stop this job ([y]/n): y
</pre>
<p>The job is placed in a stopped state and exits the client.</p>
<p>Enter the following command to reattach to the job you just stopped:</p>
<pre dir="ltr">
&gt; expdp hr ATTACH=EXPFULL
</pre></div>
<!-- class="example" -->
<p>After the job status is displayed, you can issue the <code dir="ltr">CONTINUE_CLIENT</code> command to resume logging mode and restart the <code dir="ltr">expfull</code> job.</p>
<pre dir="ltr">
Export&gt; CONTINUE_CLIENT
</pre>
<p>A message is displayed that the job has been reopened, and processing status is output to the client.</p>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="BEHBGGEB"></a>
<div id="SUTIL889" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Syntax Diagrams for Data Pump Export<a id="sthref178"></a><a id="sthref179"></a></h2>
<p>This section provides syntax diagrams for Data Pump Export. These diagrams use standard SQL syntax notation. For more information about SQL syntax notation, see <a class="olink SQLRF018" href="../../server.112/e41084/ap_syntx.htm#SQLRF018"><span class="italic">Oracle Database SQL Language Reference</span></a>.</p>
<p class="subhead1"><a id="SUTIL3081"></a>ExpInit</p>
<img width="716" height="110" src="img/expinit.gif" alt="Description of expinit.gif follows" /><br />
<a id="sthref180" href="img_text/expinit.htm">Description of the illustration ''expinit.gif''</a><br />
<br />
<p class="subhead1"><a id="SUTIL3082"></a>ExpStart</p>
<img width="781" height="98" src="img/expstart.gif" alt="Description of expstart.gif follows" /><br />
<a id="sthref181" href="img_text/expstart.htm">Description of the illustration ''expstart.gif''</a><br />
<br />
<p class="subhead1"><a id="SUTIL3083"></a>ExpModes</p>
<img width="798" height="367" src="img/expmodes.gif" alt="Description of expmodes.gif follows" /><br />
<a id="sthref182" href="img_text/expmodes.htm">Description of the illustration ''expmodes.gif''</a><br />
<br />
<p class="subhead1"><a id="SUTIL3084"></a>ExpOpts</p>
<img width="428" height="949" src="img/expopts.gif" alt="Description of expopts.gif follows" /><br />
<a id="sthref183" href="img_text/expopts.htm">Description of the illustration ''expopts.gif''</a><br />
<br />
<p class="subhead1"><a id="SUTIL3085"></a>ExpEncrypt</p>
<img width="489" height="404" src="img/expencrypt.gif" alt="Description of expencrypt.gif follows" /><br />
<a id="sthref184" href="img_text/expencrypt.htm">Description of the illustration ''expencrypt.gif''</a><br />
<br />
<p class="subhead1"><a id="SUTIL3086"></a>ExpFilter</p>
<img width="709" height="298" src="img/expfilter.gif" alt="Description of expfilter.gif follows" /><br />
<a id="sthref185" href="img_text/expfilter.htm">Description of the illustration ''expfilter.gif''</a><br />
<br />
<p class="subhead1"><a id="SUTIL3087"></a>ExpRacOpt</p>
<img width="341" height="102" src="img/expracopt.gif" alt="Description of expracopt.gif follows" /><br />
<a id="sthref186" href="img_text/expracopt.htm">Description of the illustration ''expracopt.gif''</a><br />
<br />
<p class="subhead1"><a id="SUTIL3088"></a>ExpRemap</p>
<img width="827" height="70" src="img/expremap.gif" alt="Description of expremap.gif follows" /><br />
<a id="sthref187" href="img_text/expremap.htm">Description of the illustration ''expremap.gif''</a><br />
<br />
<p class="subhead1"><a id="SUTIL3089"></a>ExpFileOpts</p>
<img width="532" height="399" src="img/expfileopts.gif" alt="Description of expfileopts.gif follows" /><br />
<a id="sthref188" href="img_text/expfileopts.htm">Description of the illustration ''expfileopts.gif''</a><br />
<br />
<p class="subhead1"><a id="SUTIL3090"></a>ExpDynOpts</p>
<img width="531" height="484" src="img/expdynopts.gif" alt="Description of expdynopts.gif follows" /><br />
<a id="sthref189" href="img_text/expdynopts.htm">Description of the illustration ''expdynopts.gif''</a><br />
<br />
<p class="subhead1"><a id="SUTIL3856"></a>ExpDiagnostics</p>
<img width="449" height="275" src="img/expdiagnostics.gif" alt="Description of expdiagnostics.gif follows" /><br />
<a id="sthref190" href="img_text/expdiagnostics.htm">Description of the illustration ''expdiagnostics.gif''</a><br />
<br /></div>
<!-- class="sect1" --></div>
<!-- class="chapter" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment1387">
<tr>
<td class="cellalignment1396">
<table class="cellalignment1392">
<tr>
<td class="cellalignment1391"><a href="dp_overview.htm"><img width="24" height="24" src="../../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment1391"><a href="dp_import.htm"><img width="24" height="24" src="../../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;1996, 2018,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment1398">
<table class="cellalignment1390">
<tr>
<td class="cellalignment1391"><a href="../../index.htm"><img width="24" height="24" src="../../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment1391"><a href="../../nav/portal_booklist.htm"><img width="24" height="24" src="../../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment1391"><a href="toc.htm"><img width="24" height="24" src="../../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment1391"><a href="index.htm"><img width="24" height="24" src="../../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment1391"><a href="../../nav/mindx.htm"><img width="24" height="24" src="../../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment1391"><a href="../../dcommon/html/feedback.htm"><img width="24" height="24" src="../../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>
</body>
</html>
