<!DOCTYPE html>
<html lang="en" >
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1">
<meta charset="utf-8">
<title>Using the DBMS_MACADM Package</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Merged Version 1088" />
<meta name="dcterms.created" content="2016-11-14T16:25:11Z" />
<meta name="robots" content="all" />
<meta name="dcterms.title" content="Database Vault Administrator's Guide" />
<meta name="dcterms.identifier" content="E23090-13" />
<meta name="dcterms.isVersionOf" content="DVADM" />
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;2006, 2016,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved." />
<link rel="Start" href="../../index.htm" title="Home" type="text/html" />
<link rel="Copyright" href="../../dcommon/html/cpyr.htm" title="Copyright" type="text/html" />

<script type="application/javascript"  src="../../dcommon/js/headfoot.js"></script>
<script type="application/javascript"  src="../../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html" />
<link rel="Index" href="index.htm" title="Index" type="text/html" />
<link rel="Prev" href="db_objects.htm" title="Previous" type="text/html" />
<link rel="Next" href="apis_macsec_roles.htm" title="Next" type="text/html" />
<link rel="alternate" href="../e23090.pdf" title="PDF version" type="application/pdf" />
<link rel="schema.dcterms" href="http://purl.org/dc/terms/" />
<link rel="stylesheet" href="../../dcommon/css/fusiondoc.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/header.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/footer.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/fonts.css">
<link rel="stylesheet" href="../../dcommon/css/foundation.css">
<link rel="stylesheet" href="../../dcommon/css/codemirror.css">
<link rel="stylesheet" type="text/css" title="Default" href="../../nav/css/html5.css">
<link rel="stylesheet" href="../../dcommon/css/respond-480-tablet.css">
<link rel="stylesheet" href="../../dcommon/css/respond-768-laptop.css">
<link rel="stylesheet" href="../../dcommon/css/respond-1140-deskop.css">
<script type="application/javascript" src="../../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">19/31</span> <!-- End Header -->
<div id="DVADM016" class="chapter"><a id="CHDHHDGI"></a>
<h1 class="chapter"><span class="secnum">12</span> Using the DBMS_MACADM Package</h1>
<p>This chapter contains:</p>
<ul>
<li>
<p><a href="#CACIICIJ">About the DBMS_MACADM Package</a></p>
</li>
<li>
<p><a href="#CHDFIJHJ">Realm Procedures Within DBMS_MACADM</a></p>
</li>
<li>
<p><a href="#CHDGJABC">Rule Set Procedures Within DBMS_MACADM</a></p>
</li>
<li>
<p><a href="#CHDJEFHA">Command Rule Procedures Within DBMS_MACADM</a></p>
</li>
<li>
<p><a href="#CHDEGBDF">Factor Procedures and Functions Within DBMS_MACADM</a></p>
</li>
<li>
<p><a href="#CHDBDJBG">Secure Application Role Procedures Within DBMS_MACADM</a></p>
</li>
<li>
<p><a href="#CHDIFEDB">Oracle Label Security Policy Procedures Within DBMS_MACADM</a></p>
</li>
<li>
<p><a href="#CACHGIDG">General System Maintenance Procedures Within DBMS_MACADM</a></p>
</li>
</ul>
<a id="CACIICIJ"></a>
<div id="DVADM70417" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">About the DBMS_MACADM Package</h2>
<p><a id="sthref570"></a>The procedures and functions within the <code dir="ltr">DBMS_MACADM</code> package allow you to write applications that configure the realms, factors, rule sets, command rules, secure application roles, and Oracle Label Security policies normally configured in Oracle Database Vault Administrator.</p>
<p>The <code dir="ltr">DBMS_MACADM</code> package is available only for users who have been granted the <code dir="ltr">DV_ADMIN</code> or <code dir="ltr">DV_OWNER</code> role.</p>
<p>Many of the parameters used in the procedures and functions in the <code dir="ltr">DBMS_MACADM</code> package can use the constants available in the <code dir="ltr">DBMS_MACUTL</code> package. See <a href="apis_dbms_macutl.htm#BABIHDDJ">"DBMS_MACUTL Constants"</a> for more information.</p>
<p>Oracle Database Vault also provides a set of PL/SQL interfaces that you can use with the <code dir="ltr">DBMS_MACADM</code> package. See <a href="plsql_interfaces.htm#CHDEAEHD">Chapter 15, "Using the Oracle Database Vault PL/SQL&nbsp;Interfaces,"</a> for more information.</p>
</div>
<!-- class="sect1" -->
<a id="CHDFIJHJ"></a>
<div id="DVADM70418" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Realm Procedures Within DBMS_MACADM</h2>
<p><a href="#CHDIDCBF">Table 12-1</a> lists <a id="sthref571"></a><a id="sthref572"></a>procedures <a id="sthref573"></a><a id="sthref574"></a>within the <code dir="ltr">DBMS_MACADM</code> package that you can use to configure realms. For constants that you can use with these procedures, see <a href="apis_dbms_macutl.htm#BCFGCJFH">Table 14-1</a> for more information.</p>
<p><a href="cfrealms.htm#CHDFGFJJ">Chapter 4, "Configuring Realms,"</a> describes realms in detail. See also <a href="apis_dbms_macutl.htm#CIHIDIDC">Chapter 14, "Using the DBMS_MACUTL Package,"</a> for a set of general purpose utility procedures that you can use with the realm procedures.</p>
<div id="DVADM70419" class="tblhruleformalwide">
<p class="titleintable"><a id="sthref575"></a><a id="CHDIDCBF"></a>Table 12-1 DBMS_MACADM Realm Configuration Procedures</p>
<table class="cellalignment1647" title="DBMS_MACADM Realm Configuration Procedures" summary="Realms APIs" dir="ltr">
<thead>
<tr class="cellalignment1639">
<th class="cellalignment1648" id="r1c1-t2">Procedure</th>
<th class="cellalignment1648" id="r1c2-t2">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r2c1-t2" headers="r1c1-t2">
<p><a href="#BCFHJJAE">ADD_AUTH_TO_REALM Procedure</a></p>
</td>
<td class="cellalignment1646" headers="r2c1-t2 r1c2-t2">
<p>Authorizes a user or role to access a realm as an owner or a participant<a id="sthref576"></a><a id="sthref577"></a></p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r3c1-t2" headers="r1c1-t2">
<p><a href="#BCFEDBCJ">ADD_OBJECT_TO_REALM Procedure</a></p>
</td>
<td class="cellalignment1646" headers="r3c1-t2 r1c2-t2">
<p>Registers a set of objects for realm protection<a id="sthref578"></a><a id="sthref579"></a></p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r4c1-t2" headers="r1c1-t2">
<p><a href="#BCFBAEGJ">CREATE_REALM Procedure</a></p>
</td>
<td class="cellalignment1646" headers="r4c1-t2 r1c2-t2">
<p>Creates a realm</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r5c1-t2" headers="r1c1-t2">
<p><a href="#BCFDCDFB">DELETE_AUTH_FROM_REALM Procedure</a></p>
</td>
<td class="cellalignment1646" headers="r5c1-t2 r1c2-t2">
<p>Removes the authorization of a user or role to access a realm</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r6c1-t2" headers="r1c1-t2">
<p><a href="#BCFGIHBE">DELETE_OBJECT_FROM_REALM Procedure</a></p>
</td>
<td class="cellalignment1646" headers="r6c1-t2 r1c2-t2">
<p>Removes a set of objects from realm protection</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r7c1-t2" headers="r1c1-t2">
<p><a href="#BCFDHBFC">DELETE_REALM Procedure</a></p>
</td>
<td class="cellalignment1646" headers="r7c1-t2 r1c2-t2">
<p>Deletes a realm</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r8c1-t2" headers="r1c1-t2">
<p><a href="#BCFJFAID">DELETE_REALM_CASCADE Procedure</a></p>
</td>
<td class="cellalignment1646" headers="r8c1-t2 r1c2-t2">
<p>Deletes a realm its related Database Vault configuration information</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r9c1-t2" headers="r1c1-t2">
<p><a href="#BCFIJFAE">RENAME_REALM Procedure</a></p>
</td>
<td class="cellalignment1646" headers="r9c1-t2 r1c2-t2">
<p>Renames a realm. The name change takes effect everywhere the realm is used.</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r10c1-t2" headers="r1c1-t2">
<p><a href="#BCFIJJGF">UPDATE_REALM Procedure</a></p>
</td>
<td class="cellalignment1646" headers="r10c1-t2 r1c2-t2">
<p>Updates a realm.<a id="sthref580"></a></p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r11c1-t2" headers="r1c1-t2">
<p><a href="#BCFCGBJE">UPDATE_REALM_AUTH Procedure</a></p>
</td>
<td class="cellalignment1646" headers="r11c1-t2 r1c2-t2">
<p>Updates the authorization of a user or role to access a realm<a id="sthref581"></a></p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblhruleformalwide" -->
<a id="BCFHJJAE"></a>
<div id="DVADM70420" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">ADD_AUTH_TO_REALM Procedure</h3>
<p>The<a id="sthref582"></a> <code dir="ltr">ADD_AUTH_TO_REALM</code> procedure authorizes a user or role to access a realm as an owner or a participant. For detailed information about realm authorization, see <a href="cfrealms.htm#CHDHDGGD">"Defining Realm Authorization"</a>.</p>
<p>Optionally, you can specify a rule set that must be checked before allowing the authorization to proceed.</p>
<p class="subhead2"><a id="DVADM70421"></a>Syntax</p>
<pre dir="ltr">
DBMS_MACADM.ADD_AUTH_TO_REALM(
  realm_name    IN VARCHAR2, 
  grantee       IN VARCHAR2, 
  rule_set_name IN VARCHAR2, 
  auth_options  IN NUMBER); 
</pre>
<p class="subhead2"><a id="DVADM70422"></a>Parameters</p>
<div id="DVADM70423" class="tblhruleformal">
<p class="titleintable"><a id="sthref583"></a><a id="sthref584"></a>Table 12-2 ADD_AUTH_TO_REALM Parameters</p>
<table class="cellalignment1647" title="ADD_AUTH_TO_REALM Parameters" summary="ADD_AUTH_TO_REALM parameters (1)" dir="ltr">
<thead>
<tr class="cellalignment1639">
<th class="cellalignment1648" id="r1c1-t3">Parameter</th>
<th class="cellalignment1648" id="r1c2-t3">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r2c1-t3" headers="r1c1-t3">
<p><code dir="ltr">realm_name</code></p>
</td>
<td class="cellalignment1646" headers="r2c1-t3 r1c2-t3">
<p>Realm name.</p>
<p>To find the existing realms in the current database instance, query the <code dir="ltr">DVSYS.DBA_DV_REALM</code> view, described in <a href="views.htm#BABIIJHE">"DVSYS.DBA_DV_REALM View"</a>.</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r3c1-t3" headers="r1c1-t3">
<p><code dir="ltr">grantee</code></p>
</td>
<td class="cellalignment1646" headers="r3c1-t3 r1c2-t3">
<p>User or role name to authorize as an owner or a participant.</p>
<p>To find the existing users and roles in the current database instance, query the <code dir="ltr">DBA_USERS</code> and <code dir="ltr">DBA_ROLES</code> views, described in <a class="olink REFRN" href="../e40402/toc.htm"><span class="italic">Oracle Database Reference</span></a>.</p>
<p>To find the authorization of a particular user or role, query the <code dir="ltr">DVA_DV_REALM_AUTH</code> view, described in <a href="views.htm#BABDFECH">"DVSYS.DBA_DV_REALM_AUTH View"</a>.</p>
<p>To find existing secure application roles used in privilege management, query the <code dir="ltr">DVSYS.DBA_DV_ROLE</code> view. Both are described in <a href="views.htm#BABIFDGE">Chapter 16, "Oracle Database Vault Data Dictionary Views."</a></p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r4c1-t3" headers="r1c1-t3">
<p><code dir="ltr">rule_set_name</code></p>
</td>
<td class="cellalignment1646" headers="r4c1-t3 r1c2-t3">
<p>Optional. Rule set to check before authorizing. If the rule set evaluates to <code dir="ltr">TRUE</code>, then the authorization is allowed.</p>
<p>To find the available rule sets, query the <code dir="ltr">DVSYS.DBA_DV_RULE_SET</code> view, described in <a href="views.htm#BABIDJIF">"DVSYS.DBA_DV_RULE_SET View"</a>.</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r5c1-t3" headers="r1c1-t3">
<p><code dir="ltr">auth_options</code></p>
</td>
<td class="cellalignment1646" headers="r5c1-t3 r1c2-t3">
<p>Optional. Specify one of the following options to authorize the realm:</p>
<ul>
<li>
<p><code dir="ltr">DBMS_MACUTL.G_REALM_AUTH_PARTICIPANT</code>: Participant. This account or role provides system or direct privileges to access, manipulate, and create objects protected by the realm, provided these rights have been granted using the standard Oracle Database privilege grant process.</p>
</li>
<li>
<p><code dir="ltr">DBMS_MACUTL.G_REALM_AUTH_OWNER</code>: Owner. This account or role has the same privileges as the realm participant, plus the authorization to grant or revoke realm-secured database roles. A realm can have multiple owners.</p>
</li>
</ul>
<p>See <a href="cfrealms.htm#CHDHDGGD">"Defining Realm Authorization"</a> for more information on participants and owners.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblhruleformal" -->
<p class="subhead2"><a id="DVADM70424"></a>Examples</p>
<p>The following example authorizes user <code dir="ltr">SYSADM</code> as a participant in the Performance Statistics Realm. Because the default is to authorize the user as a participant, the <code dir="ltr">auth_options</code> parameter can be omitted.</p>
<pre dir="ltr">
BEGIN
 DBMS_MACADM.ADD_AUTH_TO_REALM(
  realm_name  =&gt; 'Performance Statistics Realm', 
  grantee     =&gt; 'SYSADM'); 
END;
/
</pre>
<p>This example sets user <code dir="ltr">SYSADM</code> as the owner of the Performance Statistics Realm.</p>
<pre dir="ltr">
BEGIN
 DBMS_MACADM.ADD_AUTH_TO_REALM(
  realm_name   =&gt; 'Performance Statistics Realm', 
  grantee      =&gt; 'SYSADM', 
  auth_options =&gt; DBMS_MACUTL.G_REALM_AUTH_OWNER);
END;
/
</pre>
<p>The next example triggers the Check Conf Access rule set before allowing user <code dir="ltr">SYSADM</code> to be made the owner of the Performance Statistics Realm.</p>
<pre dir="ltr">
BEGIN
 DBMS_MACADM.ADD_AUTH_TO_REALM(
  realm_name    =&gt; 'Performance Statistics Realm', 
  grantee       =&gt; 'SYSADM', 
  rule_set_name =&gt; 'Check Conf Access',
  auth_options  =&gt; DBMS_MACUTL.G_REALM_AUTH_OWNER);
END;
/
</pre></div>
<!-- class="sect2" -->
<a id="BCFEDBCJ"></a>
<div id="DVADM70425" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">ADD_OBJECT_TO_REALM Procedure</h3>
<p>The<a id="sthref585"></a> <code dir="ltr">ADD_OBJECT_TO_REALM</code> procedure registers a set of objects for realm protection.</p>
<p class="subhead2"><a id="DVADM70426"></a>Syntax</p>
<pre dir="ltr">
DBMS_MACADM.ADD_OBJECT_TO_REALM(
  realm_name   IN VARCHAR2, 
  object_owner IN VARCHAR2, 
  object_name  IN VARCHAR2, 
  object_type  IN VARCHAR2); 
</pre>
<p class="subhead2"><a id="DVADM70427"></a>Parameters</p>
<div id="DVADM70428" class="tblhruleformal">
<p class="titleintable"><a id="sthref586"></a><a id="sthref587"></a>Table 12-3 ADD_OBJECT_TO_REALM Parameters</p>
<table class="cellalignment1647" title="ADD_OBJECT_TO_REALM Parameters" summary="ADD_OBJECT_TO_REALM Parameters" dir="ltr">
<thead>
<tr class="cellalignment1639">
<th class="cellalignment1648" id="r1c1-t4">Parameter</th>
<th class="cellalignment1648" id="r1c2-t4">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r2c1-t4" headers="r1c1-t4">
<p><code dir="ltr">realm_name</code></p>
</td>
<td class="cellalignment1646" headers="r2c1-t4 r1c2-t4">
<p>Realm name.</p>
<p>To find the existing realms in the current database instance, query the <code dir="ltr">DVSYS.DBA_DV_REALM</code> view, described in <a href="views.htm#BABIIJHE">"DVSYS.DBA_DV_REALM View"</a>.</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r3c1-t4" headers="r1c1-t4">
<p><code dir="ltr">object_owner</code></p>
</td>
<td class="cellalignment1646" headers="r3c1-t4 r1c2-t4">
<p>The owner of the object that is being added to the realm. If you add a role to a realm, the object owner of the role is shown as <code dir="ltr">%</code> (for all), because roles do not have owners.</p>
<p>To find the available users, query the <code dir="ltr">DBA_USERS</code> view, described in <a class="olink REFRN23302" href="../../server.112/e40402/statviews_5081.htm#REFRN23302"><span class="italic">Oracle Database Reference</span></a>.</p>
<p>To find the authorization of a particular user or role, query the <code dir="ltr">DVA_DV_REALM_AUTH</code> view, described in <a href="views.htm#BABDFECH">"DVSYS.DBA_DV_REALM_AUTH View"</a>.</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r4c1-t4" headers="r1c1-t4">
<p><code dir="ltr">object_name</code></p>
</td>
<td class="cellalignment1646" headers="r4c1-t4 r1c2-t4">
<p>Object name. (The wildcard % is allowed. See "Object Name" under <a href="cfrealms.htm#CHDIAAFB">"Creating Realm-Secured Objects"</a> for exceptions to the wildcard %.) You can also use the <code dir="ltr">DBMS_MACUTL.</code><code dir="ltr">G_ALL_OBJECT</code> constant.</p>
<p>To find the available objects, query the <code dir="ltr">ALL_OBJECTS</code> view, described in <a class="olink REFRN20146" href="../../server.112/e40402/statviews_1158.htm#REFRN20146"><span class="italic">Oracle Database Reference</span></a>.</p>
<p>To find objects that are secured by existing realms, query the <code dir="ltr">DVSYS.DBA_DV_REALM_OBJECT</code> view, described in <a href="views.htm#BABDAHHI">"DVSYS.DBA_DV_REALM_OBJECT View"</a>.</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r5c1-t4" headers="r1c1-t4">
<p><code dir="ltr">object_type</code></p>
</td>
<td class="cellalignment1646" headers="r5c1-t4 r1c2-t4">
<p>Object type, such as <code dir="ltr">TABLE</code>, <code dir="ltr">INDEX</code>, or <code dir="ltr">ROLE</code>. (The wildcard % is allowed. See "Object Types" under <a href="cfrealms.htm#CHDIAAFB">"Creating Realm-Secured Objects"</a> for exceptions to the wildcard %.)</p>
<p>You can also use the <code dir="ltr">DBMS_MACUTL.</code><code dir="ltr">G_ALL_OBJECT</code> constant.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblhruleformal" -->
<p class="subhead2"><a id="DVADM70429"></a>Example</p>
<pre dir="ltr">
BEGIN
 DBMS_MACADM.ADD_OBJECT_TO_REALM(
  realm_name   =&gt; 'Performance Statistics Realm', 
  object_owner =&gt; '%', 
  object_name  =&gt; 'GATHER_SYSTEM_STATISTICS', 
  object_type  =&gt; 'ROLE'); 
END;
/
</pre></div>
<!-- class="sect2" -->
<a id="BCFBAEGJ"></a>
<div id="DVADM70430" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">CREATE_REALM Procedure</h3>
<p>The<a id="sthref588"></a> <code dir="ltr">CREATE_REALM</code> procedure creates a realm. After you create the realm, use the following procedures to complete the realm definition:</p>
<ul>
<li>
<p><code dir="ltr">ADD_OBJECT_TO_REALM</code> procedure registers one or more objects for the realm.</p>
</li>
<li>
<p><code dir="ltr">ADD_AUTH_TO_REALM</code> procedures authorize users or roles for the realm.</p>
</li>
</ul>
<p class="subhead2"><a id="DVADM70431"></a>Syntax</p>
<pre dir="ltr">
DBMS_MACADM.CREATE_REALM(
  realm_name    IN VARCHAR2, 
  description   IN VARCHAR2, 
  enabled       IN VARCHAR2, 
  audit_options IN NUMBER); 
</pre>
<p class="subhead2"><a id="DVADM70432"></a>Parameters</p>
<div id="DVADM70433" class="tblhruleformal">
<p class="titleintable"><a id="sthref589"></a><a id="sthref590"></a>Table 12-4 CREATE_REALM Parameters</p>
<table class="cellalignment1647" title="CREATE_REALM Parameters" summary="CREATE_REALM Parameters" dir="ltr">
<thead>
<tr class="cellalignment1639">
<th class="cellalignment1648" id="r1c1-t5">Parameter</th>
<th class="cellalignment1648" id="r1c2-t5">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r2c1-t5" headers="r1c1-t5">
<p><code dir="ltr">realm_name</code></p>
</td>
<td class="cellalignment1646" headers="r2c1-t5 r1c2-t5">
<p>Realm name, up to 90 characters in mixed-case.</p>
<p>To find the existing realms in the current database instance, query the <code dir="ltr">DVSYS.DBA_DV_REALM</code> view, described in <a href="views.htm#BABIIJHE">"DVSYS.DBA_DV_REALM View"</a>.</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r3c1-t5" headers="r1c1-t5">
<p><code dir="ltr">description</code></p>
</td>
<td class="cellalignment1646" headers="r3c1-t5 r1c2-t5">
<p>Description of the purpose of the realm, up to 1024 characters in mixed-case.</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r4c1-t5" headers="r1c1-t5">
<p><code dir="ltr">enabled</code></p>
</td>
<td class="cellalignment1646" headers="r4c1-t5 r1c2-t5">
<p><code dir="ltr">DBMS_MACUTL.G_YES</code> (Yes) enables realm checking; <code dir="ltr">DBMS_MACUTL.G_NO</code> (No) disables it. The default is <code dir="ltr">DBMS_MACUTL.G_YES</code>.</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r5c1-t5" headers="r1c1-t5">
<p><code dir="ltr">audit_options</code></p>
</td>
<td class="cellalignment1646" headers="r5c1-t5 r1c2-t5">
<p>Specify one of the following options to audit the realm:</p>
<ul>
<li>
<p><code dir="ltr">DBMS_MACUTL.G_REALM_AUDIT_OFF</code>: Disables auditing for the realm (default)</p>
</li>
<li>
<p><code dir="ltr">DBMS_MACUTL.G_REALM_AUDIT_FAIL</code>: Creates an audit record when a realm violation occurs (for example, when an unauthorized user tries to modify an object that is protected by the realm)</p>
</li>
<li>
<p><code dir="ltr">DBMS_MACUTL.G_REALM_AUDIT_SUCCESS</code>: Creates an audit record for authorized activities on objects protected by the realm</p>
</li>
<li>
<p><code dir="ltr">DBMS_MACUTL.G_REALM_AUDIT_FAIL + DBMS_MACUTL.G_REALM_AUDIT_SUCCESS</code>: Creates an audit record for both authorized and unauthorized activities on objects protected by the realm</p>
</li>
</ul>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblhruleformal" -->
<p class="subhead2"><a id="DVADM70434"></a>Example</p>
<pre dir="ltr">
BEGIN
 DBMS_MACADM.CREATE_REALM(
  realm_name    =&gt; 'Performance Statistics Realm', 
  description   =&gt; 'Realm to measure performance', 
  enabled       =&gt; DBMS_MACUTL.G_YES, 
  audit_options =&gt; DBMS_MACUTL.G_REALM_AUDIT_FAIL + DBMS_MACUTL.G_REALM_AUDIT_SUCCESS);
END; 
/
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="apis_dbms_macutl.htm#CIHJBBHD">Example 14-1, "Creating a Realm Using DBMS_MACUTL Constants"</a></div>
</div>
<!-- class="sect2" -->
<a id="BCFDCDFB"></a>
<div id="DVADM70435" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">DELETE_AUTH_FROM_REALM Procedure</h3>
<p>The<a id="sthref591"></a> <code dir="ltr">DELETE_AUTH_FROM_REALM</code> procedure removes the authorization of a user or role to access a realm.</p>
<p class="subhead2"><a id="DVADM70436"></a>Syntax</p>
<pre dir="ltr">
DBMS_MACADM.DELETE_AUTH_FROM_REALM(
  realm_name IN VARCHAR2,
  grantee    IN VARCHAR2);
</pre>
<p class="subhead2"><a id="DVADM70437"></a>Parameters</p>
<div id="DVADM70438" class="tblhruleformal">
<p class="titleintable"><a id="sthref592"></a><a id="sthref593"></a>Table 12-5 DELETE_AUTH_FROM_REALM Parameters</p>
<table class="cellalignment1647" title="DELETE_AUTH_FROM_REALM Parameters" summary="DELETE_AUTH_FROM_REALM Parameters" dir="ltr">
<thead>
<tr class="cellalignment1639">
<th class="cellalignment1648" id="r1c1-t7">Parameter</th>
<th class="cellalignment1648" id="r1c2-t7">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r2c1-t7" headers="r1c1-t7">
<p><code dir="ltr">realm_name</code></p>
</td>
<td class="cellalignment1646" headers="r2c1-t7 r1c2-t7">
<p>Realm name.</p>
<p>To find the existing realms in the current database instance, query the <code dir="ltr">DVSYS.DBA_DV_REALM</code> view, described in <a href="views.htm#BABIIJHE">"DVSYS.DBA_DV_REALM View"</a>.</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r3c1-t7" headers="r1c1-t7">
<p><code dir="ltr">grantee</code></p>
</td>
<td class="cellalignment1646" headers="r3c1-t7 r1c2-t7">
<p>User or role name.</p>
<p>To find the authorization of a particular user or role, query the <code dir="ltr">DVA_DV_REALM_AUTH</code> view, described in <a href="views.htm#BABDFECH">"DVSYS.DBA_DV_REALM_AUTH View"</a>.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblhruleformal" -->
<p class="subhead2"><a id="DVADM70439"></a>Example</p>
<pre dir="ltr">
BEGIN
 DBMS_MACADM.DELETE_AUTH_FROM_REALM(
  realm_name =&gt; 'Performance Statistics Realm',
  grantee    =&gt; 'SYS');
END;
/
</pre></div>
<!-- class="sect2" -->
<a id="BCFGIHBE"></a>
<div id="DVADM70440" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">DELETE_OBJECT_FROM_REALM Procedure</h3>
<p>The<a id="sthref594"></a> <code dir="ltr">DELETE_OBJECT_FROM_REALM</code> procedure removes a set of objects from realm protection.</p>
<p class="subhead2"><a id="DVADM70441"></a>Syntax</p>
<pre dir="ltr">
DBMS_MACADM.DELETE_OBJECT_FROM_REALM(
  realm_name   IN VARCHAR2, 
  object_owner IN VARCHAR2, 
  object_name  IN VARCHAR2, 
  object_type  IN VARCHAR2);
</pre>
<p class="subhead2"><a id="DVADM70442"></a>Parameters</p>
<div id="DVADM70443" class="tblhruleformal">
<p class="titleintable"><a id="sthref595"></a><a id="sthref596"></a>Table 12-6 DELETE_OBJECT_FROM_REALM Parameters</p>
<table class="cellalignment1647" title="DELETE_OBJECT_FROM_REALM Parameters" summary="DELETE_OBJECT_FROM_REALM Parameters" dir="ltr">
<thead>
<tr class="cellalignment1639">
<th class="cellalignment1648" id="r1c1-t8">Parameter</th>
<th class="cellalignment1648" id="r1c2-t8">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r2c1-t8" headers="r1c1-t8">
<p><code dir="ltr">realm_name</code></p>
</td>
<td class="cellalignment1646" headers="r2c1-t8 r1c2-t8">
<p>Realm name.</p>
<p>To find the existing realms in the current database instance, query the <code dir="ltr">DVSYS.DBA_DV_REALM</code> view, described in <a href="views.htm#BABIIJHE">"DVSYS.DBA_DV_REALM View"</a>.</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r3c1-t8" headers="r1c1-t8">
<p><code dir="ltr">object_owner</code></p>
</td>
<td class="cellalignment1646" headers="r3c1-t8 r1c2-t8">
<p>The owner of the object that was added to the realm.</p>
<p>To find the available users, query the <code dir="ltr">DBA_USERS</code> view, described in <a class="olink REFRN" href="../e40402/toc.htm"><span class="italic">Oracle Database Reference</span></a>.</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r4c1-t8" headers="r1c1-t8">
<p><code dir="ltr">object_name</code></p>
</td>
<td class="cellalignment1646" headers="r4c1-t8 r1c2-t8">
<p>Object name. (The wildcard % is allowed. See "Object Name" under <a href="cfrealms.htm#CHDIAAFB">"Creating Realm-Secured Objects"</a> for exceptions to the wildcard %.) You can also use the <code dir="ltr">DBMS_MACUTL</code> <code dir="ltr">G_ALL_OBJECT</code> constant.</p>
<p>To find objects that are secured by existing realms, query the <code dir="ltr">DVSYS.DBA_DV_REALM_OBJECT</code> view, described in <a href="views.htm#BABDAHHI">"DVSYS.DBA_DV_REALM_OBJECT View"</a>.</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r5c1-t8" headers="r1c1-t8">
<p><code dir="ltr">object_type</code></p>
</td>
<td class="cellalignment1646" headers="r5c1-t8 r1c2-t8">
<p>Object type, such as <code dir="ltr">TABLE</code>, <code dir="ltr">INDEX</code>, or <code dir="ltr">ROLE</code>. (The wildcard % is allowed. See "Object Types" under <a href="cfrealms.htm#CHDIAAFB">"Creating Realm-Secured Objects"</a> for exceptions to the wildcard %.)</p>
<p>You can also use the <code dir="ltr">DBMS_MACUTL</code> <code dir="ltr">G_ALL_OBJECT</code> constant.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblhruleformal" -->
<p class="subhead2"><a id="DVADM70444"></a>Example</p>
<pre dir="ltr">
BEGIN
 DBMS_MACADM.DELETE_OBJECT_FROM_REALM(
  realm_name   =&gt; 'Performance Statistics Realm', 
  object_owner =&gt; 'SYS', 
  object_name  =&gt; 'GATHER_SYSTEM_STATISTICS', 
  object_type  =&gt; 'ROLE'); 
END;
/
</pre></div>
<!-- class="sect2" -->
<a id="BCFDHBFC"></a>
<div id="DVADM70445" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">DELETE_REALM Procedure</h3>
<p>The<a id="sthref597"></a> <code dir="ltr">DELETE_REALM</code> procedure deletes a realm but does not remove its associated objects and authorizations. Before you delete a realm, you can locate its associated objects by querying the <code dir="ltr">DVSYS.DBA_DV_REALM_OBJECT</code> view. To find a listing of the realm-related objects, query the <code dir="ltr">DVSYS.DBA_DV_REALM</code> view. To find its authorizations, query <code dir="ltr">DVSYS.DBA_DV_REALM_AUTH</code>. These views are described in <a href="views.htm#BABIFDGE">Chapter 16, "Oracle Database Vault Data Dictionary Views."</a></p>
<p>If you want to remove the associated objects and authorizations and the realm, see <a href="#BCFJFAID">"DELETE_REALM_CASCADE Procedure"</a>.</p>
<p class="subhead2"><a id="DVADM70446"></a>Syntax</p>
<pre dir="ltr">
DBMS_MACADM.DELETE_REALM(
  realm_name IN VARCHAR2); 
</pre>
<p class="subhead2"><a id="DVADM70447"></a>Parameters</p>
<div id="DVADM70448" class="tblhruleformal">
<p class="titleintable"><a id="sthref598"></a><a id="sthref599"></a>Table 12-7 DELETE_REALM Parameter</p>
<table class="cellalignment1647" title="DELETE_REALM Parameter" summary="DELETE_REALM Parameter" dir="ltr">
<thead>
<tr class="cellalignment1639">
<th class="cellalignment1648" id="r1c1-t9">Parameter</th>
<th class="cellalignment1648" id="r1c2-t9">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r2c1-t9" headers="r1c1-t9">
<p><code dir="ltr">realm_name</code></p>
</td>
<td class="cellalignment1646" headers="r2c1-t9 r1c2-t9">
<p>Realm name.</p>
<p>To find the existing realms in the current database instance, query the <code dir="ltr">DVSYS.DBA_DV_REALM</code> view, described in <a href="views.htm#BABIIJHE">"DVSYS.DBA_DV_REALM View"</a>.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblhruleformal" -->
<p class="subhead2"><a id="DVADM70449"></a>Example</p>
<pre dir="ltr">
EXEC DBMS_MACADM.DELETE_REALM('Performance Statistics Realm'); 
</pre></div>
<!-- class="sect2" -->
<a id="BCFJFAID"></a>
<div id="DVADM70450" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">DELETE_REALM_CASCADE Procedure</h3>
<p>The<a id="sthref600"></a> <code dir="ltr">DELETE_REALM_CASCADE</code> procedure deletes a realm, including its related Database Vault configuration information that specifies who is authorized (<code dir="ltr">DVSYS.DBA_DV_REALM_AUTH</code> view) and what objects are protected (<code dir="ltr">DVSYS.DBA_DV_REALM_OBJECT</code> view). It does not delete the actual database objects or users. To find a listing of the realm-related objects, query the <code dir="ltr">DVSYS.DBA_DV_REALM</code> view. To find its authorizations, query <code dir="ltr">DVSYS.DBA_DV_REALM_AUTH</code>. Both are described under <a href="views.htm#BABIFDGE">Chapter 16, "Oracle Database Vault Data Dictionary Views."</a></p>
<p class="subhead2"><a id="DVADM70451"></a>Syntax</p>
<pre dir="ltr">
DBMS_MACADM.DELETE_REALM_CASCADE(
  realm_name IN VARCHAR2); 
</pre>
<p class="subhead2"><a id="DVADM70452"></a>Parameters</p>
<div id="DVADM70453" class="tblhruleformal">
<p class="titleintable"><a id="sthref601"></a><a id="sthref602"></a>Table 12-8 DELETE_REALM_CASCADE Parameter</p>
<table class="cellalignment1647" title="DELETE_REALM_CASCADE Parameter" summary="DELETE_REALM_CASCADE Parameter" dir="ltr">
<thead>
<tr class="cellalignment1639">
<th class="cellalignment1648" id="r1c1-t10">Parameter</th>
<th class="cellalignment1648" id="r1c2-t10">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r2c1-t10" headers="r1c1-t10">
<p><code dir="ltr">realm_name</code></p>
</td>
<td class="cellalignment1646" headers="r2c1-t10 r1c2-t10">
<p>Realm name.</p>
<p>To find the existing realms in the current database instance, query the <code dir="ltr">DVSYS.DBA_DV_REALM</code> view, described in <a href="views.htm#BABIIJHE">"DVSYS.DBA_DV_REALM View"</a>.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblhruleformal" -->
<p class="subhead2"><a id="DVADM70454"></a>Example</p>
<pre dir="ltr">
EXEC DBMS_MACADM.DELETE_REALM_CASCADE('Performance Statistics Realm'); 
</pre></div>
<!-- class="sect2" -->
<a id="BCFIJFAE"></a>
<div id="DVADM70455" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">RENAME_REALM Procedure</h3>
<p>The<a id="sthref603"></a> <code dir="ltr">RENAME_REALM</code> procedure renames a realm. The name change takes effect everywhere the realm is used.</p>
<p class="subhead2"><a id="DVADM70456"></a>Syntax</p>
<pre dir="ltr">
DBMS_MACADM.RENAME_REALM(
  realm_name IN VARCHAR2, 
  new_name   IN VARCHAR2); 
</pre>
<p class="subhead2"><a id="DVADM70457"></a>Parameters</p>
<div id="DVADM70458" class="tblhruleformal">
<p class="titleintable"><a id="sthref604"></a><a id="sthref605"></a>Table 12-9 RENAME_REALM Parameters</p>
<table class="cellalignment1647" title="RENAME_REALM Parameters" summary="RENAME_REALM Parameters" dir="ltr">
<thead>
<tr class="cellalignment1639">
<th class="cellalignment1648" id="r1c1-t11">Parameter</th>
<th class="cellalignment1648" id="r1c2-t11">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r2c1-t11" headers="r1c1-t11">
<p><code dir="ltr">realm_name</code></p>
</td>
<td class="cellalignment1646" headers="r2c1-t11 r1c2-t11">
<p>Current realm name.</p>
<p>To find the existing realms in the current database instance, query the <code dir="ltr">DVSYS.DBA_DV_REALM</code> view, described in <a href="views.htm#BABIIJHE">"DVSYS.DBA_DV_REALM View"</a>.</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r3c1-t11" headers="r1c1-t11">
<p><code dir="ltr">new_name</code></p>
</td>
<td class="cellalignment1646" headers="r3c1-t11 r1c2-t11">
<p>New realm name, up to 90 characters in mixed-case.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblhruleformal" -->
<p class="subhead2"><a id="DVADM70459"></a>Example</p>
<pre dir="ltr">
BEGIN
 DBMS_MACADM.RENAME_REALM(
  realm_name =&gt; 'Performance Statistics Realm', 
  new_name   =&gt; 'Sector 2 Performance Statistics Realm');
END; 
/
</pre></div>
<!-- class="sect2" -->
<a id="BCFIJJGF"></a>
<div id="DVADM70460" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">UPDATE_REALM Procedure</h3>
<p>The<a id="sthref606"></a> <code dir="ltr">UPDATE_REALM</code> procedure updates a realm.</p>
<p class="subhead2"><a id="DVADM70461"></a>Syntax</p>
<pre dir="ltr">
DBMS_MACADM.UPDATE_REALM(
  realm_name    IN VARCHAR2, 
  description   IN VARCHAR2, 
  enabled       IN VARCHAR2, 
  audit_options IN NUMBER DEFAULT NULL); 
</pre>
<p class="subhead2"><a id="DVADM70462"></a>Parameters</p>
<div id="DVADM70463" class="tblhruleformal">
<p class="titleintable"><a id="sthref607"></a><a id="sthref608"></a>Table 12-10 UPDATE_REALM Parameters</p>
<table class="cellalignment1647" title="UPDATE_REALM Parameters" summary="UPDATE_REALM Parameters" dir="ltr">
<thead>
<tr class="cellalignment1639">
<th class="cellalignment1648" id="r1c1-t12">Parameter</th>
<th class="cellalignment1648" id="r1c2-t12">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r2c1-t12" headers="r1c1-t12">
<p><code dir="ltr">realm_name</code></p>
</td>
<td class="cellalignment1646" headers="r2c1-t12 r1c2-t12">
<p>Realm name.</p>
<p>To find the existing realms in the current database instance, query the <code dir="ltr">DVSYS.DBA_DV_REALM</code> view, described in <a href="views.htm#BABIIJHE">"DVSYS.DBA_DV_REALM View"</a>.</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r3c1-t12" headers="r1c1-t12">
<p><code dir="ltr">description</code></p>
</td>
<td class="cellalignment1646" headers="r3c1-t12 r1c2-t12">
<p>Description of the purpose of the realm, up to 1024 characters in mixed-case.</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r4c1-t12" headers="r1c1-t12">
<p><code dir="ltr">enabled</code></p>
</td>
<td class="cellalignment1646" headers="r4c1-t12 r1c2-t12">
<p><code dir="ltr">DBMS_MACUTL.G_YES</code> (Yes) enables realm checking; <code dir="ltr">DBMS_MACUTL.G_NO</code> (No) disables it.</p>
<p>The default for <code dir="ltr">enabled</code> is the previously set value, which you can find by querying the <code dir="ltr">DVSYS.DBA_DV_REALM</code> data dictionary view.</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r5c1-t12" headers="r1c1-t12">
<p><code dir="ltr">audit_options</code></p>
</td>
<td class="cellalignment1646" headers="r5c1-t12 r1c2-t12">
<p>Specify one of the following options to audit the realm:</p>
<ul>
<li>
<p><code dir="ltr">DBMS_MACUTL.G_REALM_AUDIT_OFF</code>: Disables auditing for the realm</p>
</li>
<li>
<p><code dir="ltr">DBMS_MACUTL.G_REALM_AUDIT_FAIL</code>: Creates an audit record when a realm violation occurs (for example, when an unauthorized user tries to modify an object that is protected by the realm</p>
</li>
<li>
<p><code dir="ltr">DBMS_MACUTL.G_REALM_AUDIT_SUCCESS</code>: Creates an audit record for authorized activities on objects protected by the realm.</p>
</li>
<li>
<p><code dir="ltr">DBMS_MACUTL.G_REALM_AUDIT_FAIL + DBMS_MACUTL.G_REALM_AUDIT_SUCCESS</code>: Creates an audit record for both authorized and unauthorized activities on objects protected by the realm</p>
</li>
</ul>
<p>The default for <code dir="ltr">audit_options</code> is the previously set value, which you can find by querying the <code dir="ltr">DVSYS.DBA_DV_REALM</code> data dictionary view.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblhruleformal" -->
<p class="subhead2"><a id="DVADM70464"></a>Example</p>
<pre dir="ltr">
BEGIN
 DBMS_MACADM.UPDATE_REALM(
  realm_name    =&gt; 'Sector 2 Performance Statistics Realm', 
  description   =&gt; 'Realm to measure performance for Sector 2 applications', 
  enabled       =&gt; DBMS_MACUTL.G_YES, 
  audit_options =&gt; DBMS_MACUTL.G_REALM_AUDIT_FAIL + G_REALM_AUDIT_SUCCESS); 
END;
/
</pre></div>
<!-- class="sect2" -->
<a id="BCFCGBJE"></a>
<div id="DVADM70465" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">UPDATE_REALM_AUTH Procedure</h3>
<p>The<a id="sthref609"></a> <code dir="ltr">UPDATE_REALM_AUTH</code> procedure updates the authorization of a user or role to access a realm.</p>
<p class="subhead2"><a id="DVADM70466"></a>Syntax</p>
<pre dir="ltr">
DBMS_MACADM.UPDATE_REALM_AUTH(
  realm_name    IN VARCHAR2, 
  grantee       IN VARCHAR2, 
  rule_set_name IN VARCHAR2, 
  auth_options  IN NUMBER); 
</pre>
<p class="subhead2"><a id="DVADM70467"></a>Parameters</p>
<div id="DVADM70468" class="tblhruleformal">
<p class="titleintable"><a id="sthref610"></a><a id="sthref611"></a>Table 12-11 UPDATE_REALM_AUTH Parameters</p>
<table class="cellalignment1647" title="UPDATE_REALM_AUTH Parameters" summary="UPDATE_REALM_AUTH Parameters" dir="ltr">
<thead>
<tr class="cellalignment1639">
<th class="cellalignment1648" id="r1c1-t13">Parameter</th>
<th class="cellalignment1648" id="r1c2-t13">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r2c1-t13" headers="r1c1-t13">
<p><code dir="ltr">realm_name</code></p>
</td>
<td class="cellalignment1646" headers="r2c1-t13 r1c2-t13">
<p>Realm name.</p>
<p>To find the existing realms in the current database instance, query the <code dir="ltr">DVSYS.DBA_DV_REALM</code> view, described in <a href="views.htm#BABIIJHE">"DVSYS.DBA_DV_REALM View"</a>.</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r3c1-t13" headers="r1c1-t13">
<p><code dir="ltr">grantee</code></p>
</td>
<td class="cellalignment1646" headers="r3c1-t13 r1c2-t13">
<p>User or role name.</p>
<p>To find the available users and roles, query the <code dir="ltr">DBA_USERS</code> and <code dir="ltr">DBA_ROLES</code> views, described in <a class="olink REFRN" href="../e40402/toc.htm"><span class="italic">Oracle Database Reference</span></a>.</p>
<p>To find the authorization of a particular user or role, query the <code dir="ltr">DVA_DV_REALM_AUTH</code> view, described in <a href="views.htm#BABDFECH">"DVSYS.DBA_DV_REALM_AUTH View"</a>.</p>
<p>To find existing secure application roles used in privilege management, query the <code dir="ltr">DVSYS.DBA_DV_ROLE</code> view, described in <a href="views.htm#BABGFIGC">"DVSYS.DBA_DV_ROLE View"</a>.</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r4c1-t13" headers="r1c1-t13">
<p><code dir="ltr">rule_set_name</code></p>
</td>
<td class="cellalignment1646" headers="r4c1-t13 r1c2-t13">
<p>Optional Rule set to check before authorizing. If the rule set evaluates to <code dir="ltr">TRUE</code>, then the authorization is allowed.</p>
<p>To find the available rule sets, query the <code dir="ltr">DVSYS.DBA_DV_RULE_SET</code> view. To find rules that are associated with the rule sets, query the <code dir="ltr">DBA_DB_RULE_SET_RULE</code> view. Both are described in <a href="views.htm#BABIFDGE">Chapter 16, "Oracle Database Vault Data Dictionary Views."</a></p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r5c1-t13" headers="r1c1-t13">
<p><code dir="ltr">auth_options</code></p>
</td>
<td class="cellalignment1646" headers="r5c1-t13 r1c2-t13">
<p>Optional. Specify one of the following options to authorize the realm:</p>
<ul>
<li>
<p><code dir="ltr">DBMS_MACUTL.G_REALM_AUTH_PARTICIPANT</code>: Participant. This account or role provides system or direct privileges to access, manipulate, and create objects protected by the realm, provided these rights have been granted using the standard Oracle Database privilege grant process.</p>
</li>
<li>
<p><code dir="ltr">DBMS_MACUTL.G_REALM_AUTH_OWNER</code>: Owner. This account or role has the same privileges as the realm participant, plus the authorization to grant or revoke realm-secured database roles. A realm can have multiple owners.</p>
</li>
</ul>
<p>The default for <code dir="ltr">auth_options</code> value is the previously set value, which you can find by querying the <code dir="ltr">DVSYS.DBA_DV_REALM_AUTH</code> data dictionary view.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblhruleformal" -->
<p class="subhead2"><a id="DVADM70469"></a>Example</p>
<pre dir="ltr">
BEGIN
 DBMS_MACADM.UPDATE_REALM_AUTH(
  realm_name    =&gt; 'Sector 2 Performance Statistics Realm', 
  grantee       =&gt; 'SYSADM', 
  rule_set_name =&gt; 'Check Conf Access', 
  auth_options  =&gt; DBMS_MACUTL.G_REALM_AUTH_OWNER);
END; 
/
</pre></div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="CHDGJABC"></a>
<div id="DVADM70470" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Rule Set Procedures Within DBMS_MACADM</h2>
<p><a href="#CHDBGFHI">Table 12-12</a> lists <a id="sthref612"></a><a id="sthref613"></a>procedures<a id="sthref614"></a><a id="sthref615"></a> within the <code dir="ltr">DBMS_MACADM</code> package that you can use to configure rule sets.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="cfrulset.htm#BABIFBBC">Chapter 5, "Configuring Rule Sets,"</a> for detailed information about rule sets</p>
</li>
<li>
<p><a href="apis_dbms_macutl.htm#CIHIDIDC">Chapter 14, "Using the DBMS_MACUTL Package,"</a> for a set of general-purpose utility procedures that you can use with the rule set procedures</p>
</li>
<li>
<p><a href="plsql_interfaces.htm#CHDEAEHD">Chapter 15, "Using the Oracle Database Vault PL/SQL&nbsp;Interfaces,"</a> for PL/SQL interfaces that you can use with rules</p>
</li>
</ul>
</div>
<div id="DVADM70471" class="tblhruleformalwide">
<p class="titleintable"><a id="sthref616"></a><a id="CHDBGFHI"></a>Table 12-12 DBMS_MACADM Rule Set Configuration Procedures</p>
<table class="cellalignment1647" title="DBMS_MACADM Rule Set Configuration Procedures" summary="Rule Set APIs" dir="ltr">
<thead>
<tr class="cellalignment1639">
<th class="cellalignment1648" id="r1c1-t15">Procedure</th>
<th class="cellalignment1648" id="r1c2-t15">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r2c1-t15" headers="r1c1-t15">
<p><a href="#BCFBEHHB">ADD_RULE_TO_RULE_SET Procedure</a></p>
</td>
<td class="cellalignment1646" headers="r2c1-t15 r1c2-t15">
<p>Adds a rule to a rule set</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r3c1-t15" headers="r1c1-t15">
<p><a href="#BCFFDGFE">CREATE_RULE Procedure</a></p>
</td>
<td class="cellalignment1646" headers="r3c1-t15 r1c2-t15">
<p>Creates a rule</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r4c1-t15" headers="r1c1-t15">
<p><a href="#BCFGGGJC">CREATE_RULE_SET Procedure</a></p>
</td>
<td class="cellalignment1646" headers="r4c1-t15 r1c2-t15">
<p>Creates a rule set</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r5c1-t15" headers="r1c1-t15">
<p><a href="#BCFDHHGF">DELETE_RULE Procedure</a></p>
</td>
<td class="cellalignment1646" headers="r5c1-t15 r1c2-t15">
<p>Deletes a rule</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r6c1-t15" headers="r1c1-t15">
<p><a href="#BCFJHIIA">DELETE_RULE_FROM_RULE_SET Procedure</a></p>
</td>
<td class="cellalignment1646" headers="r6c1-t15 r1c2-t15">
<p>Deletes a rule from a rule set</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r7c1-t15" headers="r1c1-t15">
<p><a href="#BCFHFDFH">DELETE_RULE_SET Procedure</a></p>
</td>
<td class="cellalignment1646" headers="r7c1-t15 r1c2-t15">
<p>Deletes a rule set</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r8c1-t15" headers="r1c1-t15">
<p><a href="#BCFFDBJI">RENAME_RULE Procedure</a></p>
</td>
<td class="cellalignment1646" headers="r8c1-t15 r1c2-t15">
<p>Renames a rule. The name change takes effect everywhere the rule is used.</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r9c1-t15" headers="r1c1-t15">
<p><a href="#BCFGEEEI">RENAME_RULE_SET Procedure</a></p>
</td>
<td class="cellalignment1646" headers="r9c1-t15 r1c2-t15">
<p>Renames a rule set. The name change takes effect everywhere the rule set is used.</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r10c1-t15" headers="r1c1-t15">
<p><a href="#BCFDBBEG">SYNC_RULES Procedure</a></p>
</td>
<td class="cellalignment1646" headers="r10c1-t15 r1c2-t15">
<p>Synchronizes the rules</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r11c1-t15" headers="r1c1-t15">
<p><a href="#BCFBEDFF">UPDATE_RULE Procedure</a></p>
</td>
<td class="cellalignment1646" headers="r11c1-t15 r1c2-t15">
<p>Updates a rule</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r12c1-t15" headers="r1c1-t15">
<p><a href="#BCFEEDFG">UPDATE_RULE_SET Procedure</a></p>
</td>
<td class="cellalignment1646" headers="r12c1-t15 r1c2-t15">
<p>Updates a rule set</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblhruleformalwide" -->
<a id="BCFBEHHB"></a>
<div id="DVADM70472" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">ADD_RULE_TO_RULE_SET Procedure</h3>
<p>The<a id="sthref617"></a> <code dir="ltr">ADD_RULE_TO_RULE_SET</code> procedure adds rule to a rule set, and lets you specify whether to have the rule be checked when the rule set is evaluated.</p>
<p class="subhead2"><a id="DVADM70473"></a>Syntax</p>
<pre dir="ltr">
DBMS_MACADM.ADD_RULE_TO_RULE_SET(
  rule_set_name  IN VARCHAR2, 
  rule_name      IN VARCHAR2, 
  rule_order     IN NUMBER, 
  enabled        IN VARCHAR2);
</pre>
<p class="subhead2"><a id="DVADM70474"></a>Parameters</p>
<div id="DVADM70475" class="tblhruleformal">
<p class="titleintable"><a id="sthref618"></a><a id="sthref619"></a>Table 12-13 ADD_RULE_TO_RULE_SET Parameters</p>
<table class="cellalignment1647" title="ADD_RULE_TO_RULE_SET Parameters" summary="ADD_RULE_TO_RULE_SET 1" dir="ltr">
<thead>
<tr class="cellalignment1639">
<th class="cellalignment1648" id="r1c1-t16">Parameter</th>
<th class="cellalignment1648" id="r1c2-t16">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r2c1-t16" headers="r1c1-t16">
<p><code dir="ltr">rule_set_name</code></p>
</td>
<td class="cellalignment1646" headers="r2c1-t16 r1c2-t16">
<p>Rule set name.</p>
<p>To find existing rule sets in the current database instance, query the <code dir="ltr">DVSYS.DBA_DV_RULE_SET</code> view, described in <a href="views.htm#BABIDJIF">"DVSYS.DBA_DV_RULE_SET View"</a>.</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r3c1-t16" headers="r1c1-t16">
<p><code dir="ltr">rule_name</code></p>
</td>
<td class="cellalignment1646" headers="r3c1-t16 r1c2-t16">
<p>Rule to add to the rule set.</p>
<p>To find existing rules, query the <code dir="ltr">DVSYS.DBA_DV_RULE</code> view, described in <a href="views.htm#BABBAIHI">"DVSYS.DBA_DV_RULE View"</a>.</p>
<p>To find rules that have been associated with rule sets, use <code dir="ltr">DVSYS.DBA_DV_RULE_SET_RULE</code>, described in <a href="views.htm#BABFBEIA">"DVSYS.DBA_DV_RULE_SET_RULE View"</a>.</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r4c1-t16" headers="r1c1-t16">
<p><code dir="ltr">rule_order</code></p>
</td>
<td class="cellalignment1646" headers="r4c1-t16 r1c2-t16">
<p>Does not apply to this release, but you must include a value for the <code dir="ltr">ADD_RULE_TO_RULE_SET</code> procedure to work. Enter <code dir="ltr">1</code>.</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r5c1-t16" headers="r1c1-t16">
<p><code dir="ltr">enabled</code></p>
</td>
<td class="cellalignment1646" headers="r5c1-t16 r1c2-t16">
<p>Optional. Determines whether the rule should be checked when the rule set is evaluated. Possible values are:</p>
<ul>
<li>
<p><code dir="ltr">Y</code> (yes; default). Enables the rule to be checked during the rule set evaluation.</p>
</li>
<li>
<p><code dir="ltr">N</code> (no). Prevents the rule from being checked during the rule set evaluation.</p>
</li>
</ul>
<p>You can also enter the following <code dir="ltr">DBMS_MACUTL</code> constants:</p>
<ul>
<li>
<p><code dir="ltr">DBMS_MACUTL.G_YES</code> (default)</p>
</li>
<li>
<p><code dir="ltr">DBMS_MACUTL.G_NO</code></p>
</li>
</ul>
<p>See <a href="apis_dbms_macutl.htm#BCFGCJFH">Table 14-1</a> for more information.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblhruleformal" -->
<p class="subhead2"><a id="DVADM70476"></a>Examples</p>
<p>The following example adds a rule to a rule set, and by omitting the <code dir="ltr">enabled</code> parameter, automatically enables the rule to be checked when the rule set is evaluated.</p>
<pre dir="ltr">
BEGIN
 DBMS_MACADM.ADD_RULE_TO_RULE_SET(
  rule_set_name =&gt; 'Limit_DBA_Access', 
  rule_name     =&gt; 'Restrict DROP TABLE operations',
  rule_order    =&gt; 1);
END;
/
</pre>
<p>This example adds the rule to the rule set but disables rule checking.</p>
<pre dir="ltr">
BEGIN
 DBMS_MACADM.ADD_RULE_TO_RULE_SET(
  rule_set_name =&gt; 'Limit_DBA_Access',
  rule_name     =&gt; 'Check UPDATE operations',
  rule_order    =&gt; 1,
  enabled       =&gt; DBMS_MACUTL.G_NO);
END;
/
</pre></div>
<!-- class="sect2" -->
<a id="BCFFDGFE"></a>
<div id="DVADM70477" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">CREATE_RULE Procedure</h3>
<p>The<a id="sthref620"></a> <code dir="ltr">CREATE_RULE</code> procedure creates a rule. After you create a rule, you can add it to a rule set.</p>
<p class="subhead2"><a id="DVADM70478"></a>Syntax</p>
<pre dir="ltr">
DBMS_MACADM.CREATE_RULE(
  rule_name  IN VARCHAR2, 
  rule_expr  IN VARCHAR2);
</pre>
<p class="subhead2"><a id="DVADM70479"></a>Parameters</p>
<div id="DVADM70480" class="tblhruleformal">
<p class="titleintable"><a id="sthref621"></a><a id="sthref622"></a>Table 12-14 CREATE_RULE Parameters</p>
<table class="cellalignment1647" title="CREATE_RULE Parameters" summary="CREATE_RULE" dir="ltr">
<thead>
<tr class="cellalignment1639">
<th class="cellalignment1648" id="r1c1-t17">Parameter</th>
<th class="cellalignment1648" id="r1c2-t17">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r2c1-t17" headers="r1c1-t17">
<p><code dir="ltr">rule_name</code></p>
</td>
<td class="cellalignment1646" headers="r2c1-t17 r1c2-t17">
<p>Rule name, up to 90 characters in mixed-case. Spaces are allowed.</p>
<p>To find existing rules in the current database instance, query the <code dir="ltr">DVSYS.DBA_DV_RULE</code> view, described in <a href="views.htm#BABBAIHI">"DVSYS.DBA_DV_RULE View"</a>.</p>
<p>To find rules that have been associated with rule sets, query <code dir="ltr">DVSYS.DBA_DV_RULE_SET_RULE</code>, described in <a href="views.htm#BABFBEIA">"DVSYS.DBA_DV_RULE_SET_RULE View"</a>.</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r3c1-t17" headers="r1c1-t17">
<p><code dir="ltr">rule_expr</code></p>
</td>
<td class="cellalignment1646" headers="r3c1-t17 r1c2-t17">
<p>PL/SQL <code dir="ltr">BOOLEAN</code> expression.</p>
<p>If the expression contains quotation marks, do not use double quotation marks. Instead, use two single quotation marks. Enclose the entire expression within single quotation marks. For example:</p>
<pre dir="ltr">
'TO_CHAR(SYSDATE,''HH24'') = ''12'''
</pre>
<p>See <a href="cfrulset.htm#BABJHDJI">"Creating a New Rule"</a> for more information on rule expressions.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblhruleformal" -->
<p class="subhead2"><a id="DVADM70481"></a>Example</p>
<pre dir="ltr">
BEGIN
 DBMS_MACADM.CREATE_RULE(
  rule_name  =&gt; 'Check UPDATE operations', 
  rule_expr  =&gt;'SYS_CONTEXT(''USERENV'',''SESSION_USER'') = ''SYSADM''');
END;
/
</pre></div>
<!-- class="sect2" -->
<a id="BCFGGGJC"></a>
<div id="DVADM70482" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">CREATE_RULE_SET Procedure</h3>
<p>The <code dir="ltr">CREATE_RULE_SET</code> <a id="sthref623"></a>procedure creates a rule set. After you create a rule set, you can use the <code dir="ltr">CREATE_RULE</code> and <code dir="ltr">ADD_RULE_TO_RULE_SET</code> procedures to create and add rules to the rule set.</p>
<p class="subhead2"><a id="DVADM70483"></a>Syntax</p>
<pre dir="ltr">
DBMS_MACADM.CREATE_RULE_SET(
  rule_set_name    IN VARCHAR2, 
  description      IN VARCHAR2, 
  enabled          IN VARCHAR2, 
  eval_options     IN NUMBER, 
  audit_options    IN NUMBER, 
  fail_options     IN NUMBER, 
  fail_message     IN VARCHAR2, 
  fail_code        IN NUMBER, 
  handler_options  IN NUMBER, 
  handler          IN VARCHAR2,
  is_static        IN BOOLEAN DEFAULT FALSE);
</pre>
<p class="subhead2"><a id="DVADM70484"></a>Parameters</p>
<div id="DVADM70485" class="tblhruleformal">
<p class="titleintable"><a id="sthref624"></a><a id="sthref625"></a>Table 12-15 CREATE_RULE_SET Parameters</p>
<table class="cellalignment1647" title="CREATE_RULE_SET Parameters" summary="CREATE_RULE_SET" dir="ltr">
<thead>
<tr class="cellalignment1639">
<th class="cellalignment1648" id="r1c1-t18">Parameter</th>
<th class="cellalignment1648" id="r1c2-t18">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r2c1-t18" headers="r1c1-t18">
<p><code dir="ltr">rule_set_name</code></p>
</td>
<td class="cellalignment1646" headers="r2c1-t18 r1c2-t18">
<p>Rule set name, up to 90 characters in mixed-case. Spaces are allowed.</p>
<p>To find existing rule sets in the current database instance, query the <code dir="ltr">DVSYS.DBA_DV_RULE_SET</code> view, described in <a href="views.htm#BABIDJIF">"DVSYS.DBA_DV_RULE_SET View"</a>.</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r3c1-t18" headers="r1c1-t18">
<p><code dir="ltr">description</code></p>
</td>
<td class="cellalignment1646" headers="r3c1-t18 r1c2-t18">
<p>Description of the purpose of the rule set, up to 1024 characters in mixed-case.</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r4c1-t18" headers="r1c1-t18">
<p><code dir="ltr">enabled</code></p>
</td>
<td class="cellalignment1646" headers="r4c1-t18 r1c2-t18">
<p><code dir="ltr">DBMS_MACUTL.G_YES</code> (Yes) enables the rule set; <code dir="ltr">DBMS_MACUTL.G_NO</code> (No) disables it. The default is <code dir="ltr">Y</code>.</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r5c1-t18" headers="r1c1-t18">
<p><code dir="ltr">eval_options</code></p>
</td>
<td class="cellalignment1646" headers="r5c1-t18 r1c2-t18">
<p>If you plan to assign multiple rules to the rule set, enter one of the following settings:</p>
<ul>
<li>
<p><code dir="ltr">DBMS_MACUTL.G_RULESET_EVAL_ALL</code>: All rules in the rule set must evaluate to true for the rule set itself to evaluate to true (default).</p>
</li>
<li>
<p><code dir="ltr">DBMS_MACUTL.G_RULESET_EVAL_ANY</code>: At least one rule in the rule set must evaluate to true for the rule set itself to evaluate to true.</p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r6c1-t18" headers="r1c1-t18">
<p><code dir="ltr">audit_options</code></p>
</td>
<td class="cellalignment1646" headers="r6c1-t18 r1c2-t18">
<p>Select one of the following settings:</p>
<ul>
<li>
<p><code dir="ltr">DBMS_MACUTL.G_RULESET_AUDIT_OFF</code>: Disables auditing for the rule set (default)</p>
</li>
<li>
<p><code dir="ltr">DBMS_MACUTL.G_RULESET_AUDIT_FAIL</code>: Creates an audit record when a rule set violation occurs</p>
</li>
<li>
<p><code dir="ltr">DBMS_MACUTL.G_RULESET_AUDIT_SUCCESS</code>: Creates an audit record for a successful rule set evaluation</p>
</li>
<li>
<p><code dir="ltr">DBMS_MACUTL.G_RULESET_AUDIT_FAIL + DBMS_MACUTL.G_RULESET_AUDIT_SUCCESS</code>: Creates an audit record for both successful and failed rule set evaluations</p>
</li>
</ul>
<p>See <a href="cfrulset.htm#CHDEIGIA">"Audit Options"</a> for more information.</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r7c1-t18" headers="r1c1-t18">
<p><code dir="ltr">fail_options</code></p>
</td>
<td class="cellalignment1646" headers="r7c1-t18 r1c2-t18">
<p>Options for reporting factor errors:</p>
<ul>
<li>
<p><code dir="ltr">DBMS_MACUTL.G_RULESET_FAIL_SHOW</code>: Shows an error message (default)</p>
</li>
<li>
<p><code dir="ltr">DBMS_MACUTL.G_RULESET_FAIL_SILENT</code>: Does not show an error message</p>
</li>
</ul>
<p>See <a href="cfrulset.htm#CHDJJBBA">"Error Handling Options"</a> for more information.</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r8c1-t18" headers="r1c1-t18">
<p><code dir="ltr">fail_message</code></p>
</td>
<td class="cellalignment1646" headers="r8c1-t18 r1c2-t18">
<p>Enter an error message for failure, up to 80 characters in mixed-case, to associate with the fail code you specify for <code dir="ltr">fail_code</code>.</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r9c1-t18" headers="r1c1-t18">
<p><code dir="ltr">fail_code</code></p>
</td>
<td class="cellalignment1646" headers="r9c1-t18 r1c2-t18">
<p>Enter a number in the range of -20000 to -20999 or 20000 to 20999 to associate with the <code dir="ltr">fail_message</code> parameter.</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r10c1-t18" headers="r1c1-t18">
<p><code dir="ltr">handler_options</code></p>
</td>
<td class="cellalignment1646" headers="r10c1-t18 r1c2-t18">
<p>Select one of the following settings:</p>
<ul>
<li>
<p><code dir="ltr">DBMS_MACUTL.G_RULESET_HANDLER_OFF</code>: Disables error handling (default)</p>
</li>
<li>
<p><code dir="ltr">DBMS_MACUTL.G_RULESET_HANDLER_FAIL</code>: Calls handler on rule set failure</p>
</li>
<li>
<p><code dir="ltr">DBMS_MACUTL.G_RULESET_HANDLER_SUCCESS</code>: Calls handler on rule set success</p>
</li>
</ul>
<p>See <a href="cfrulset.htm#CHDJJBBA">"Error Handling Options"</a> for more information.</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r11c1-t18" headers="r1c1-t18">
<p><code dir="ltr">handler</code></p>
</td>
<td class="cellalignment1646" headers="r11c1-t18 r1c2-t18">
<p>Name of the PL/SQL function or procedure that defines the custom event handler logic.</p>
<p>See <a href="cfrulset.htm#CHDJJBBA">"Error Handling Options"</a> for more information.</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r12c1-t18" headers="r1c1-t18">
<p><code dir="ltr">is_static</code></p>
</td>
<td class="cellalignment1646" headers="r12c1-t18 r1c2-t18">
<p>Optional. Determines how often a rule set is evaluated when it is accessed. The default is <code dir="ltr">FALSE</code>.</p>
<ul>
<li>
<p><code dir="ltr">TRUE</code>: The rule set is evaluated once during the user session. After that, the value is re-used.</p>
</li>
<li>
<p><code dir="ltr">FALSE</code>: The rule set evaluated every time.</p>
</li>
</ul>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblhruleformal" -->
<p class="subhead2"><a id="DVADM70486"></a>Example</p>
<pre dir="ltr">
BEGIN
 DBMS_MACADM.CREATE_RULE_SET(
  rule_set_name    =&gt; 'Limit_DBA_Access', 
  description      =&gt; 'DBA access through predefined processes', 
  enabled          =&gt; DBMS_MACUTL.G_YES,
  eval_options     =&gt; 2,
  audit_options    =&gt; DBMS_MACUTL.G_RULESET_AUDIT_FAIL + DBMS_MACUTL.G_RULESET_AUDIT_SUCCESS,
  fail_options     =&gt; DBMS_MACUTL.G_RULESET_FAIL_SILENT,
  fail_message     =&gt; '',
  fail_code        =&gt; 20461,
  handler_options  =&gt; DBMS_MACUTL.G_RULESET_HANDLER_FAIL, 
  handler          =&gt; 'dbavowner.email_alert',
  is_static        =&gt; TRUE);
END;
/
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="apis_dbms_macutl.htm#CIHCFIDJ">Example 14-2, "Creating a Rule Set Using DBMS_MACUTL Constants"</a></div>
</div>
<!-- class="sect2" -->
<a id="BCFDHHGF"></a>
<div id="DVADM70487" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">DELETE_RULE Procedure</h3>
<p>The<a id="sthref626"></a> <code dir="ltr">DELETE_RULE</code> procedure deletes a rule.</p>
<p class="subhead2"><a id="DVADM70488"></a>Syntax</p>
<pre dir="ltr">
DBMS_MACADM.DELETE_RULE(
  rule_name IN VARCHAR2); 
</pre>
<p class="subhead2"><a id="DVADM70489"></a>Parameter</p>
<div id="DVADM70490" class="tblhruleformal">
<p class="titleintable"><a id="sthref627"></a><a id="sthref628"></a>Table 12-16 DELETE_RULE Parameter</p>
<table class="cellalignment1647" title="DELETE_RULE Parameter" summary="DELETE_RULE" dir="ltr">
<thead>
<tr class="cellalignment1639">
<th class="cellalignment1648" id="r1c1-t20">Parameter</th>
<th class="cellalignment1648" id="r1c2-t20">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r2c1-t20" headers="r1c1-t20">
<p><code dir="ltr">rule_name</code></p>
</td>
<td class="cellalignment1646" headers="r2c1-t20 r1c2-t20">
<p>Rule name.</p>
<p>To find existing rules in the current database instance, query the <code dir="ltr">DVSYS.DBA_DV_RULE</code> view, described in <a href="views.htm#BABBAIHI">"DVSYS.DBA_DV_RULE View"</a>.</p>
<p>To find rules that have been associated with rule sets, query <code dir="ltr">DVSYS.DBA_DV_RULE_SET_RULE</code>, described in <a href="views.htm#BABFBEIA">"DVSYS.DBA_DV_RULE_SET_RULE View"</a>.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblhruleformal" -->
<p class="subhead2"><a id="DVADM70491"></a>Example</p>
<pre dir="ltr">
EXEC DBMS_MACADM.DELETE_RULE('Check UPDATE operations'); 
</pre></div>
<!-- class="sect2" -->
<a id="BCFJHIIA"></a>
<div id="DVADM70492" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">DELETE_RULE_FROM_RULE_SET Procedure</h3>
<p>The<a id="sthref629"></a> <code dir="ltr">DELETE_RULE_FROM_RULE_SET</code> procedure deletes a rule from a rule set.</p>
<p class="subhead2"><a id="DVADM70493"></a>Syntax</p>
<pre dir="ltr">
DBMS_MACADM.DELETE_RULE_FROM_RULE_SET(
  rule_set_name IN VARCHAR2, 
  rule_name     IN VARCHAR2);
</pre>
<p class="subhead2"><a id="DVADM70494"></a>Parameters</p>
<div id="DVADM70495" class="tblhruleformal">
<p class="titleintable"><a id="sthref630"></a><a id="sthref631"></a>Table 12-17 DELETE_RULE_FROM_RULE_SET Parameters</p>
<table class="cellalignment1647" title="DELETE_RULE_FROM_RULE_SET Parameters" summary="DELETE_RULE_FROM_RULE_SET" dir="ltr">
<thead>
<tr class="cellalignment1639">
<th class="cellalignment1648" id="r1c1-t21">Parameter</th>
<th class="cellalignment1648" id="r1c2-t21">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r2c1-t21" headers="r1c1-t21">
<p><code dir="ltr">rule_set_name</code></p>
</td>
<td class="cellalignment1646" headers="r2c1-t21 r1c2-t21">
<p>Rule set name.</p>
<p>To find existing rule sets in the current database instance, query the <code dir="ltr">DVSYS.DBA_DV_RULE_SET</code> view, described in <a href="views.htm#BABIDJIF">"DVSYS.DBA_DV_RULE_SET View"</a>.</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r3c1-t21" headers="r1c1-t21">
<p><code dir="ltr">rule_name</code></p>
</td>
<td class="cellalignment1646" headers="r3c1-t21 r1c2-t21">
<p>Rule to remove from the rule set.</p>
<p>To find existing rules in the current database instance, query the <code dir="ltr">DVSYS.DBA_DV_RULE</code> view, described in <a href="views.htm#BABBAIHI">"DVSYS.DBA_DV_RULE View"</a>.</p>
<p>To find rules that have been associated with rule sets, query <code dir="ltr">DVSYS.DBA_DV_RULE_SET_RULE</code>, described in <a href="views.htm#BABFBEIA">"DVSYS.DBA_DV_RULE_SET_RULE View"</a>.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblhruleformal" -->
<p class="subhead2"><a id="DVADM70496"></a>Example</p>
<pre dir="ltr">
BEGIN
 DBMS_MACADM.DELETE_RULE_FROM_RULE_SET(
  rule_set_name =&gt; 'Limit_DBA_Access', 
  rule_name     =&gt; 'Check UPDATE operations');
END;
/
</pre></div>
<!-- class="sect2" -->
<a id="BCFHFDFH"></a>
<div id="DVADM70497" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">DELETE_RULE_SET Procedure</h3>
<p>The<a id="sthref632"></a> <code dir="ltr">DELETE_RULE_SET</code> procedure deletes a rule set.</p>
<p class="subhead2"><a id="DVADM70498"></a>Syntax</p>
<pre dir="ltr">
DBMS_MACADM.DELETE_RULE_SET(
  rule_set_name IN VARCHAR2); 
</pre>
<p class="subhead2"><a id="DVADM70499"></a>Parameters</p>
<div id="DVADM70500" class="tblhruleformal">
<p class="titleintable"><a id="sthref633"></a><a id="sthref634"></a>Table 12-18 DELETE_RULE_SET Parameter</p>
<table class="cellalignment1647" title="DELETE_RULE_SET Parameter" summary="DELETE_RULE_SET" dir="ltr">
<thead>
<tr class="cellalignment1639">
<th class="cellalignment1648" id="r1c1-t22">Parameter</th>
<th class="cellalignment1648" id="r1c2-t22">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r2c1-t22" headers="r1c1-t22">
<p><code dir="ltr">rule_set_name</code></p>
</td>
<td class="cellalignment1646" headers="r2c1-t22 r1c2-t22">
<p>Rule set name.</p>
<p>To find existing rule sets in the current database instance, query the <code dir="ltr">DVSYS.DBA_DV_RULE_SET</code> view, described in <a href="views.htm#BABIDJIF">"DVSYS.DBA_DV_RULE_SET View"</a>.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblhruleformal" -->
<p class="subhead2"><a id="DVADM70501"></a>Example</p>
<pre dir="ltr">
EXEC DBMS_MACADM.DELETE_RULE_SET('Limit_DBA_Access'); 
</pre></div>
<!-- class="sect2" -->
<a id="BCFFDBJI"></a>
<div id="DVADM70502" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">RENAME_RULE Procedure</h3>
<p>The<a id="sthref635"></a> <code dir="ltr">RENAME_RULE</code> procedure renames a rule. The name change takes effect everywhere the rule is used.</p>
<p class="subhead2"><a id="DVADM70503"></a>Syntax</p>
<pre dir="ltr">
DBMS_MACADM.RENAME_RULE(
  rule_name  IN VARCHAR2, 
  new_name   IN VARCHAR2); 
</pre>
<p class="subhead2"><a id="DVADM70504"></a>Parameters</p>
<div id="DVADM70505" class="tblhruleformal">
<p class="titleintable"><a id="sthref636"></a><a id="sthref637"></a>Table 12-19 RENAME_RULE Parameters</p>
<table class="cellalignment1647" title="RENAME_RULE Parameters" summary="RENAME_RULE" dir="ltr">
<thead>
<tr class="cellalignment1639">
<th class="cellalignment1648" id="r1c1-t23">Parameter</th>
<th class="cellalignment1648" id="r1c2-t23">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r2c1-t23" headers="r1c1-t23">
<p><code dir="ltr">rule_name</code></p>
</td>
<td class="cellalignment1646" headers="r2c1-t23 r1c2-t23">
<p>Current rule name.</p>
<p>To find existing rules in the current database instance, query the <code dir="ltr">DVSYS.DBA_DV_RULE</code> view, described in <a href="views.htm#BABBAIHI">"DVSYS.DBA_DV_RULE View"</a>.</p>
<p>To find rules that have been associated with rule sets, query <code dir="ltr">DVSYS.DBA_DV_RULE_SET_RULE</code>, described in <a href="views.htm#BABFBEIA">"DVSYS.DBA_DV_RULE_SET_RULE View"</a>.</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r3c1-t23" headers="r1c1-t23">
<p><code dir="ltr">new_name</code></p>
</td>
<td class="cellalignment1646" headers="r3c1-t23 r1c2-t23">
<p>New rule name, up to 90 characters in mixed-case.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblhruleformal" -->
<p class="subhead2"><a id="DVADM70506"></a>Example</p>
<pre dir="ltr">
BEGIN
 DBMS_MACADM.RENAME_RULE(
  rule_name  =&gt; 'Check UPDATE operations', 
  new_name   =&gt; 'Check Sector 2 Processes');
END; 
/
</pre></div>
<!-- class="sect2" -->
<a id="BCFGEEEI"></a>
<div id="DVADM70507" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">RENAME_RULE_SET Procedure</h3>
<p>The<a id="sthref638"></a> <code dir="ltr">RENAME_RULE_SET</code> procedure renames a rule set. The name change takes effect everywhere the rule set is used.</p>
<p class="subhead2"><a id="DVADM70508"></a>Syntax</p>
<pre dir="ltr">
DBMS_MACADM.RENAME_RULE_SET(
  rule_set_name IN VARCHAR2, 
  new_name      IN VARCHAR2); 
</pre>
<p class="subhead2"><a id="DVADM70509"></a>Parameters</p>
<div id="DVADM70510" class="tblhruleformal">
<p class="titleintable"><a id="sthref639"></a><a id="sthref640"></a>Table 12-20 RENAME_RULE_SET Parameters</p>
<table class="cellalignment1647" title="RENAME_RULE_SET Parameters" summary="RENAME_RULE_SET" dir="ltr">
<thead>
<tr class="cellalignment1639">
<th class="cellalignment1648" id="r1c1-t24">Parameter</th>
<th class="cellalignment1648" id="r1c2-t24">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r2c1-t24" headers="r1c1-t24">
<p><code dir="ltr">rule_set_name</code></p>
</td>
<td class="cellalignment1646" headers="r2c1-t24 r1c2-t24">
<p>Current rule set name.</p>
<p>To find existing rule sets in the current database instance, query the <code dir="ltr">DVSYS.DBA_DV_RULE_SET</code> view, described in <a href="views.htm#BABIDJIF">"DVSYS.DBA_DV_RULE_SET View"</a>.</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r3c1-t24" headers="r1c1-t24">
<p><code dir="ltr">new_name</code></p>
</td>
<td class="cellalignment1646" headers="r3c1-t24 r1c2-t24">
<p>New rule set name, up to 90 characters in mixed-case. Spaces are allowed.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblhruleformal" -->
<p class="subhead2"><a id="DVADM70511"></a>Example</p>
<pre dir="ltr">
BEGIN
 DBMS_MACADM.RENAME_RULE_SET(
  rule_set_name =&gt; 'Limit_DBA_Access', 
  new_name      =&gt; 'Limit Sector 2 Access'); 
END;
/
</pre></div>
<!-- class="sect2" -->
<a id="BCFDBBEG"></a>
<div id="DVADM70512" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">SYNC_RULES Procedure</h3>
<p>The<a id="sthref641"></a> <code dir="ltr">SYNC_RULES</code> procedure synchronizes the rules in Oracle Database Vault and Advanced Queuing Rules engine. You must perform this operation immediately after you roll back an <code dir="ltr">ADD_RULE_TO_RULESET</code>, a <code dir="ltr">DELETE_RULE</code>, or an <code dir="ltr">UPDATE_RULE</code> operation.</p>
<p class="subhead2"><a id="DVADM70513"></a>Syntax</p>
<pre dir="ltr">
DBMS_MACADM.SYNC_RULES(); 
</pre>
<p class="subhead2"><a id="DVADM70514"></a>Parameters</p>
<p>None.</p>
<p class="subhead2"><a id="DVADM70515"></a>Example</p>
<pre dir="ltr">
EXEC DBMS_MACADM.SYNC_RULES(); 
</pre></div>
<!-- class="sect2" -->
<a id="BCFBEDFF"></a>
<div id="DVADM70516" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">UPDATE_RULE Procedure</h3>
<p>The<a id="sthref642"></a> <code dir="ltr">UPDATE_RULE</code> procedure updates a rule.</p>
<p class="subhead2"><a id="DVADM70517"></a>Syntax</p>
<pre dir="ltr">
DBMS_MACADM.UPDATE_RULE(
  rule_name  IN VARCHAR2, 
  rule_expr  IN VARCHAR2);
</pre>
<p class="subhead2"><a id="DVADM70518"></a>Parameters</p>
<div id="DVADM70519" class="tblhruleformal">
<p class="titleintable"><a id="sthref643"></a><a id="sthref644"></a>Table 12-21 UPDATE_RULE Parameters</p>
<table class="cellalignment1647" title="UPDATE_RULE Parameters" summary="UPDATE_RULE" dir="ltr">
<thead>
<tr class="cellalignment1639">
<th class="cellalignment1648" id="r1c1-t25">Parameter</th>
<th class="cellalignment1648" id="r1c2-t25">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r2c1-t25" headers="r1c1-t25">
<p><code dir="ltr">rule_name</code></p>
</td>
<td class="cellalignment1646" headers="r2c1-t25 r1c2-t25">
<p>Rule name.</p>
<p>To find existing rules in the current database instance, query the <code dir="ltr">DVSYS.DBA_DV_RULE</code> view, described in <a href="views.htm#BABBAIHI">"DVSYS.DBA_DV_RULE View"</a>.</p>
<p>To find rules that have been associated with rule sets, query <code dir="ltr">DVSYS.DBA_DV_RULE_SET_RULE</code>, described in <a href="views.htm#BABFBEIA">"DVSYS.DBA_DV_RULE_SET_RULE View"</a>.</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r3c1-t25" headers="r1c1-t25">
<p><code dir="ltr">rule_expr</code></p>
</td>
<td class="cellalignment1646" headers="r3c1-t25 r1c2-t25">
<p>PL/SQL <code dir="ltr">BOOLEAN</code> expression.</p>
<p>If the expression contains quotation marks, do not use double quotation marks. Instead, use two single quotation marks. Enclose the entire expression within single quotation marks. For example:</p>
<pre dir="ltr">
'TO_CHAR(SYSDATE,''HH24'') = ''12'''
</pre>
<p>See <a href="cfrulset.htm#BABJHDJI">"Creating a New Rule"</a> for more information on rule expressions.</p>
<p>To find existing rule expressions, query the <code dir="ltr">DVSYS.DBA_DV_RULE</code> view.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblhruleformal" -->
<p class="subhead2"><a id="DVADM70520"></a>Example</p>
<pre dir="ltr">
BEGIN
 DBMS_MACADM.UPDATE_RULE(
  rule_name  =&gt; 'Check UPDATE operations', 
  rule_expr  =&gt;'SYS_CONTEXT(''USERENV'',''SESSION_USER'') = ''SYSADM'' AND
               (
                 UPPER(SYS_CONTEXT(''USERENV'',''MODULE'')) LIKE ''APPSRVR%'' OR
                 UPPER(SYS_CONTEXT(''USERENV'',''MODULE'')) LIKE ''DBAPP%'' )'
               );
END;
/
</pre></div>
<!-- class="sect2" -->
<a id="BCFEEDFG"></a>
<div id="DVADM70521" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">UPDATE_RULE_SET Procedure</h3>
<p>The<a id="sthref645"></a> <code dir="ltr">UPDATE_RULE_SET</code> procedure updates a rule set.</p>
<p class="subhead2"><a id="DVADM70522"></a>Syntax</p>
<pre dir="ltr">
DBMS_MACADM.UPDATE_RULE_SET(
  rule_set_name    IN VARCHAR2,
  description      IN VARCHAR2, 
  enabled          IN VARCHAR2, 
  eval_options     IN NUMBER, 
  audit_options    IN NUMBER, 
  fail_options     IN NUMBER, 
  fail_message     IN VARCHAR2, 
  fail_code        IN NUMBER, 
  handler_options  IN NUMBER, 
  handler          IN VARCHAR2,
  is_static        IN BOOLEAN DEFAULT FALSE); 
</pre>
<p class="subhead2"><a id="DVADM70523"></a>Parameters</p>
<div id="DVADM70524" class="tblhruleformal">
<p class="titleintable"><a id="sthref646"></a><a id="sthref647"></a>Table 12-22 UPDATE_RULE_SET Parameters</p>
<table class="cellalignment1647" title="UPDATE_RULE_SET Parameters" summary="UPDATE_RULE_SET" dir="ltr">
<thead>
<tr class="cellalignment1639">
<th class="cellalignment1648" id="r1c1-t26">Parameter</th>
<th class="cellalignment1648" id="r1c2-t26">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r2c1-t26" headers="r1c1-t26">
<p><code dir="ltr">rule_set_name</code></p>
</td>
<td class="cellalignment1646" headers="r2c1-t26 r1c2-t26">
<p>Rule set name.</p>
<p>To find existing rule sets in the current database instance, query the <code dir="ltr">DVSYS.DBA_DV_RULE_SET</code> view, described in <a href="views.htm#BABIDJIF">"DVSYS.DBA_DV_RULE_SET View"</a>.</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r3c1-t26" headers="r1c1-t26">
<p><code dir="ltr">description</code></p>
</td>
<td class="cellalignment1646" headers="r3c1-t26 r1c2-t26">
<p>Description of the purpose of the rule set, up to 1024 characters in mixed-case.</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r4c1-t26" headers="r1c1-t26">
<p><code dir="ltr">enabled</code></p>
</td>
<td class="cellalignment1646" headers="r4c1-t26 r1c2-t26">
<p><code dir="ltr">DBMS_MACUTL.G_YES</code> (Yes) enables rule set checking; <code dir="ltr">DBMS_MACUTL.G_NO</code> (No) disables it.</p>
<p>The default for the <code dir="ltr">enabled</code> setting is the previously set value, which you can find by querying the <code dir="ltr">DVSYS.DBA_DV_RULE_SET</code> data dictionary view.</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r5c1-t26" headers="r1c1-t26">
<p><code dir="ltr">eval_options</code></p>
</td>
<td class="cellalignment1646" headers="r5c1-t26 r1c2-t26">
<p>If you plan to assign multiple rules to the rule set, enter one of the following settings:</p>
<ul>
<li>
<p><code dir="ltr">DBMS_MACUTL.G_RULESET_EVAL_ALL</code>: All rules in the rule set must evaluate to true for the rule set itself to evaluate to true.</p>
</li>
<li>
<p><code dir="ltr">DBMS_MACUTL.G_RULESET_EVAL_ANY</code>: At least one rule in the rule set must evaluate to true for the rule set itself to evaluate to true.</p>
</li>
</ul>
<p>The default for <code dir="ltr">eval_options</code> is the previously set value, which you can find by querying the <code dir="ltr">DVSYS.DBA_DV_RULE_SET</code> data dictionary view.</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r6c1-t26" headers="r1c1-t26">
<p><code dir="ltr">audit_options</code></p>
</td>
<td class="cellalignment1646" headers="r6c1-t26 r1c2-t26">
<p>Select one of the following settings:</p>
<ul>
<li>
<p><code dir="ltr">DBMS_MACUTL.G_RULESET_AUDIT_OFF</code>: Disables auditing for the rule set</p>
</li>
<li>
<p><code dir="ltr">DBMS_MACUTL.G_RULESET_AUDIT_FAIL</code>: Creates an audit record when a rule set violation occurs</p>
</li>
<li>
<p><code dir="ltr">DBMS_MACUTL.G_RULESET_AUDIT_SUCCESS</code>: Creates an audit record for a successful rule set evaluation</p>
</li>
<li>
<p><code dir="ltr">DBMS_MACUTL.G_RULESET_AUDIT_FAIL + DBMS_MACUTL.G_RULESET_AUDIT_SUCCESS</code>: Creates an audit record for both successful and failed rule set evaluations</p>
</li>
</ul>
<p>The default for <code dir="ltr">audit_options</code> is the previously set value, which you can find by querying the <code dir="ltr">DVSYS.DBA_DV_RULE_SET</code> data dictionary view.</p>
<p>See <a href="cfrulset.htm#CHDEIGIA">"Audit Options"</a> for more information.</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r7c1-t26" headers="r1c1-t26">
<p><code dir="ltr">fail_options</code></p>
</td>
<td class="cellalignment1646" headers="r7c1-t26 r1c2-t26">
<p>Options for reporting factor errors:</p>
<ul>
<li>
<p><code dir="ltr">DBMS_MACUTL.G_RULESET_FAIL_SHOW</code>: Shows an error message.</p>
</li>
<li>
<p><code dir="ltr">DBMS_MACUTL.G_RULESET_FAIL_SILENT</code>: Does not show an error message.</p>
</li>
</ul>
<p>The default for <code dir="ltr">fail_options</code> is the previously set value, which you can find by querying the <code dir="ltr">DVSYS.DBA_DV_RULE_SET</code> data dictionary view.</p>
<p>See <a href="cfrulset.htm#CHDJJBBA">"Error Handling Options"</a> for more information.</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r8c1-t26" headers="r1c1-t26">
<p><code dir="ltr">fail_message</code></p>
</td>
<td class="cellalignment1646" headers="r8c1-t26 r1c2-t26">
<p>Error message for failure, up to 80 characters in mixed-case, to associate with the fail code you specify for <code dir="ltr">fail_code</code>.</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r9c1-t26" headers="r1c1-t26">
<p><code dir="ltr">fail_code</code></p>
</td>
<td class="cellalignment1646" headers="r9c1-t26 r1c2-t26">
<p>Enter a number in the range of -20000 to -20999 or 20000 to 20999 to associate with the <code dir="ltr">fail_message</code> parameter.</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r10c1-t26" headers="r1c1-t26">
<p><code dir="ltr">handler_options</code></p>
</td>
<td class="cellalignment1646" headers="r10c1-t26 r1c2-t26">
<p>Select one of the following settings:</p>
<ul>
<li>
<p><code dir="ltr">DBMS_MACUTL.G_RULESET_HANDLER_OFF</code>: Disables error handling.</p>
</li>
<li>
<p><code dir="ltr">DBMS_MACUTL.G_RULESET_HANDLER_FAIL</code>: Call handler on rule set failure.</p>
</li>
<li>
<p><code dir="ltr">DBMS_MACUTL.G_RULESET_HANDLER_SUCCESS</code>: Call handler on rule set success.</p>
</li>
</ul>
<p>The default for <code dir="ltr">handler_options</code> is the previously set value, which you can find by querying the <code dir="ltr">DVSYS.DBA_DV_RULE_SET</code> data dictionary view.</p>
<p>See <a href="cfrulset.htm#CHDJJBBA">"Error Handling Options"</a> for more information.</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r11c1-t26" headers="r1c1-t26">
<p><code dir="ltr">handler</code></p>
</td>
<td class="cellalignment1646" headers="r11c1-t26 r1c2-t26">
<p>Name of the PL/SQL function or procedure that defines the custom event handler logic.</p>
<p>See <a href="cfrulset.htm#CHDJJBBA">"Error Handling Options"</a> for more information.</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r12c1-t26" headers="r1c1-t26">
<p><code dir="ltr">is_static</code></p>
</td>
<td class="cellalignment1646" headers="r12c1-t26 r1c2-t26">
<p>Optional. Determines how often a rule set is evaluated when it is accessed by a SQL statement.</p>
<ul>
<li>
<p><code dir="ltr">TRUE</code>: The rule set is evaluated once during the user session. After that, the value is re-used.</p>
</li>
<li>
<p><code dir="ltr">FALSE</code>: The rule set evaluated each time a SQL statement accesses it (default).</p>
</li>
</ul>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblhruleformal" -->
<p class="subhead2"><a id="DVADM70525"></a>Example</p>
<pre dir="ltr">
BEGIN
 DBMS_MACADM.UPDATE_RULE_SET(
  rule_set_name    =&gt; 'Limit_DBA_Access', 
  description      =&gt; 'DBA access through predefined processes', 
  enabled          =&gt; DBMS_MACUTL.G_YES,
  eval_options     =&gt; DBMS_MACUTL.G_RULESET_AUDIT_FAIL,
  audit_options    =&gt; DBMS_MACUTL.G_RULESET_AUDIT_FAIL,
  fail_options     =&gt; DBMS_MACUTL.G_RULESET_FAIL_SHOW,
  fail_message     =&gt; 'Access denied!',
  fail_code        =&gt; 20900,
  handler_options  =&gt; DBMS_MACUTL.G_RULESET_HANDLER_OFF, 
  handler          =&gt; '',
  is_static        =  TRUE);
END;
/
</pre></div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="CHDJEFHA"></a>
<div id="DVADM70526" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Command Rule Procedures Within DBMS_MACADM</h2>
<p><a href="#CHDCAHBJ">Table 12-23</a> lists <a id="sthref648"></a>procedures<a id="sthref649"></a><a id="sthref650"></a> within the <code dir="ltr">DBMS_MACADM</code> package that you can use to configure command rules.</p>
<p><a href="cfcmdaut.htm#CHDJDGHE">Chapter 6, "Configuring Command Rules,"</a> describes command rules in detail. See also <a href="apis_dbms_macutl.htm#CIHIDIDC">Chapter 14, "Using the DBMS_MACUTL Package,"</a> for a set of general-purpose utility procedures that you can use with the command rule procedures.</p>
<div id="DVADM70527" class="tblhruleformalwide">
<p class="titleintable"><a id="sthref651"></a><a id="CHDCAHBJ"></a>Table 12-23 DBMS_MACADM Command Rule Configuration Procedures</p>
<table class="cellalignment1647" title="DBMS_MACADM Command Rule Configuration Procedures" summary="Command rule APIs" dir="ltr">
<thead>
<tr class="cellalignment1639">
<th class="cellalignment1648" id="r1c1-t27">Procedure</th>
<th class="cellalignment1648" id="r1c2-t27">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r2c1-t27" headers="r1c1-t27">
<p><a href="#BCFHDICB">CREATE_COMMAND_RULE Procedure</a></p>
</td>
<td class="cellalignment1646" headers="r2c1-t27 r1c2-t27">
<p>Creates a command rule, associates it with a rule set, and lets you enable the command rule for rule checking with a rule set</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r3c1-t27" headers="r1c1-t27">
<p><a href="#BCFGGFGG">DELETE_COMMAND_RULE Procedure</a></p>
</td>
<td class="cellalignment1646" headers="r3c1-t27 r1c2-t27">
<p>Drops a command rule declaration</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r4c1-t27" headers="r1c1-t27">
<p><a href="#BCFHFFEA">UPDATE_COMMAND_RULE Procedure</a></p>
</td>
<td class="cellalignment1646" headers="r4c1-t27 r1c2-t27">
<p>Updates a command rule declaration</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblhruleformalwide" -->
<a id="BCFHDICB"></a>
<div id="DVADM70528" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">CREATE_COMMAND_RULE Procedure</h3>
<p>The<a id="sthref652"></a> <code dir="ltr">CREATE_COMMAND_RULE</code> procedure creates a command rule, associates it with a rule set, and lets you enable the command rule for rule checking with a rule set.</p>
<p class="subhead2"><a id="DVADM70529"></a>Syntax</p>
<pre dir="ltr">
DBMS_MACADM.CREATE_COMMAND_RULE(
  command         IN VARCHAR2, 
  rule_set_name   IN VARCHAR2, 
  object_owner    IN VARCHAR2, 
  object_name     IN VARCHAR2, 
  enabled         IN VARCHAR2);
</pre>
<p class="subhead2"><a id="DVADM70530"></a>Parameters</p>
<div id="DVADM70531" class="tblhruleformal">
<p class="titleintable"><a id="sthref653"></a><a id="sthref654"></a>Table 12-24 CREATE_COMMAND_RULE Parameters</p>
<table class="cellalignment1647" title="CREATE_COMMAND_RULE Parameters" summary="CREATE_COMMAND_RULE" dir="ltr">
<thead>
<tr class="cellalignment1639">
<th class="cellalignment1648" id="r1c1-t28">Parameter</th>
<th class="cellalignment1648" id="r1c2-t28">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r2c1-t28" headers="r1c1-t28">
<p><code dir="ltr">command</code></p>
</td>
<td class="cellalignment1646" headers="r2c1-t28 r1c2-t28">
<p>SQL statement to protect.</p>
<p>See also the following:</p>
<ul>
<li>
<p><a href="views.htm#BABGHBCE">"DVSYS.DBA_DV_COMMAND_RULE View"</a> for a listing of existing command rules</p>
</li>
<li>
<p><a href="cfcmdaut.htm#BABHADDH">"SQL Statements That Can Be Protected by Command Rules"</a> for a listing of available SQL statements that you can use</p>
</li>
<li>
<p><a class="olink SQLRF" href="../e41084/toc.htm"><span class="italic">Oracle Database SQL Language Reference</span></a> for more information about SQL statements</p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r3c1-t28" headers="r1c1-t28">
<p><code dir="ltr">rule_set_name</code></p>
</td>
<td class="cellalignment1646" headers="r3c1-t28 r1c2-t28">
<p>Name of rule set to associate with this command rule.</p>
<p>To find existing rule sets in the current database instance, query the <code dir="ltr">DVSYS.DBA_DV_RULE_SET</code> view, described in <a href="views.htm#BABIDJIF">"DVSYS.DBA_DV_RULE_SET View"</a>.</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r4c1-t28" headers="r1c1-t28">
<p><code dir="ltr">object_owner</code></p>
</td>
<td class="cellalignment1646" headers="r4c1-t28 r1c2-t28">
<p>Database schema to which this command rule will apply. The wildcard <code dir="ltr">%</code> is allowed, except for the <code dir="ltr">SELECT</code>, <code dir="ltr">INSERT</code>, <code dir="ltr">UPDATE</code>, <code dir="ltr">DELETE</code>, and <code dir="ltr">EXECUTE</code> statements.</p>
<p>To find the available users, query the <code dir="ltr">DBA_USERS</code> view, described in <a class="olink REFRN23302" href="../../server.112/e40402/statviews_5081.htm#REFRN23302"><span class="italic">Oracle Database Reference</span></a>.</p>
<p>See also "Object Owner" in <a href="cfcmdaut.htm#CHDFIFHJ">"Creating and Editing a Command Rule"</a> for more information.</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r5c1-t28" headers="r1c1-t28">
<p><code dir="ltr">object_name</code></p>
</td>
<td class="cellalignment1646" headers="r5c1-t28 r1c2-t28">
<p>Object name. (The wildcard % is allowed. See "Object Name" in <a href="cfcmdaut.htm#CHDFIFHJ">"Creating and Editing a Command Rule"</a> for more information about objects protected by command rules.)</p>
<p>To find the available objects, query the <code dir="ltr">ALL_OBJECTS</code> view, described in <a class="olink REFRN20146" href="../../server.112/e40402/statviews_1158.htm#REFRN20146"><span class="italic">Oracle Database Reference</span></a>.</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r6c1-t28" headers="r1c1-t28">
<p><code dir="ltr">enabled</code></p>
</td>
<td class="cellalignment1646" headers="r6c1-t28 r1c2-t28">
<p><code dir="ltr">DBMS_MACUTL.G_YES</code> (Yes) enables the command rule; <code dir="ltr">DBMS_MACUTL.G_NO</code> (No) disables it. The default is <code dir="ltr">DBMS_MACUTL.G_YES</code>.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblhruleformal" -->
<p class="subhead2"><a id="DVADM70532"></a>Example</p>
<pre dir="ltr">
BEGIN
 DBMS_MACADM.CREATE_COMMAND_RULE(
  command         =&gt; 'SELECT', 
  rule_set_name   =&gt; 'Limit Sector 2 Access', 
  object_owner    =&gt; 'SYSADM', 
  object_name     =&gt; 'EMP_DATA', 
  enabled         =&gt; DBMS_MACUTL.G_YES);
END; 
/
</pre></div>
<!-- class="sect2" -->
<a id="BCFGGFGG"></a>
<div id="DVADM70533" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">DELETE_COMMAND_RULE Procedure</h3>
<p>The<a id="sthref655"></a> <code dir="ltr">DELETE_COMMAND_RULE</code> procedure drops a command rule declaration.</p>
<p class="subhead2"><a id="DVADM70534"></a>Syntax</p>
<pre dir="ltr">
DBMS_MACADM.DELETE_COMMAND_RULE(
  command      IN VARCHAR2, 
  object_owner IN VARCHAR2, 
  object_name  IN VARCHAR2); 
</pre>
<p class="subhead2"><a id="DVADM70535"></a>Parameters</p>
<div id="DVADM70536" class="tblhruleformal">
<p class="titleintable"><a id="sthref656"></a><a id="sthref657"></a>Table 12-25 DELETE_COMMAND_RULE Parameters</p>
<table class="cellalignment1647" title="DELETE_COMMAND_RULE Parameters" summary="DELETE_COMMAND_RULE" dir="ltr">
<thead>
<tr class="cellalignment1639">
<th class="cellalignment1648" id="r1c1-t29">Parameter</th>
<th class="cellalignment1648" id="r1c2-t29">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r2c1-t29" headers="r1c1-t29">
<p><code dir="ltr">command</code></p>
</td>
<td class="cellalignment1646" headers="r2c1-t29 r1c2-t29">
<p>SQL statement the command rule protects.</p>
<p>To find available command rules, query the <code dir="ltr">DVSYS.DBA_DV_COMMAND_RULE</code> view, described in <a href="views.htm#BABGHBCE">"DVSYS.DBA_DV_COMMAND_RULE View"</a>.</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r3c1-t29" headers="r1c1-t29">
<p><code dir="ltr">object_owner</code></p>
</td>
<td class="cellalignment1646" headers="r3c1-t29 r1c2-t29">
<p>Database schema to which this command rule applies.</p>
<p>To find the available users in the current database instance, query the <code dir="ltr">DBA_USERS</code> view, described in <a class="olink REFRN23302" href="../../server.112/e40402/statviews_5081.htm#REFRN23302"><span class="italic">Oracle Database Reference</span></a>.</p>
<p>See also "Object Owner" in <a href="cfcmdaut.htm#CHDFIFHJ">"Creating and Editing a Command Rule"</a> for more information.</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r4c1-t29" headers="r1c1-t29">
<p><code dir="ltr">object_name</code></p>
</td>
<td class="cellalignment1646" headers="r4c1-t29 r1c2-t29">
<p>Object name. (The wildcard % is allowed. See "Object Name" in <a href="cfcmdaut.htm#CHDFIFHJ">"Creating and Editing a Command Rule"</a> for more information about objects protected by command rules.)</p>
<p>To find the available objects, query the <code dir="ltr">ALL_OBJECTS</code> view, described in <a class="olink REFRN20146" href="../../server.112/e40402/statviews_1158.htm#REFRN20146"><span class="italic">Oracle Database Reference</span></a>.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblhruleformal" -->
<p class="subhead2"><a id="DVADM70537"></a>Example</p>
<pre dir="ltr">
BEGIN
 DBMS_MACADM.DELETE_COMMAND_RULE(
  command      =&gt; 'SELECT', 
  object_owner =&gt; 'SYSADM', 
  object_name  =&gt; 'EMP_DATA'); 
END;
/
</pre></div>
<!-- class="sect2" -->
<a id="BCFHFFEA"></a>
<div id="DVADM70538" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">UPDATE_COMMAND_RULE Procedure</h3>
<p>The<a id="sthref658"></a> <code dir="ltr">UPDATE_COMMAND_RULE</code> procedure updates a command rule declaration.</p>
<p class="subhead2"><a id="DVADM70539"></a>Syntax</p>
<pre dir="ltr">
DBMS_MACADM.UPDATE_COMMAND_RULE(
  command        IN VARCHAR2, 
  rule_set_name  IN VARCHAR2, 
  object_owner   IN VARCHAR2, 
  object_name    IN VARCHAR2, 
  enabled        IN VARCHAR2); 
</pre>
<p class="subhead2"><a id="DVADM70540"></a>Parameters</p>
<div id="DVADM70541" class="tblhruleformal">
<p class="titleintable"><a id="sthref659"></a><a id="sthref660"></a>Table 12-26 UPDATE_COMMAND_RULE Parameters</p>
<table class="cellalignment1647" title="UPDATE_COMMAND_RULE Parameters" summary="UPDATE_COMMAND_RULE" dir="ltr">
<thead>
<tr class="cellalignment1639">
<th class="cellalignment1648" id="r1c1-t30">Parameter</th>
<th class="cellalignment1648" id="r1c2-t30">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r2c1-t30" headers="r1c1-t30">
<p><code dir="ltr">command</code></p>
</td>
<td class="cellalignment1646" headers="r2c1-t30 r1c2-t30">
<p>SQL statement to protect.</p>
<p>See also the following:</p>
<ul>
<li>
<p><a href="cfcmdaut.htm#BABHADDH">"SQL Statements That Can Be Protected by Command Rules"</a> for a listing of available SQL statements that you can use</p>
</li>
<li>
<p><a href="views.htm#BABGHBCE">"DVSYS.DBA_DV_COMMAND_RULE View"</a> for a listing of existing command rules</p>
</li>
<li>
<p><a class="olink SQLRF" href="../e41084/toc.htm"><span class="italic">Oracle Database SQL Language Reference</span></a> for more information about SQL statements</p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r3c1-t30" headers="r1c1-t30">
<p><code dir="ltr">rule_set_name</code></p>
</td>
<td class="cellalignment1646" headers="r3c1-t30 r1c2-t30">
<p>Name of rule set to associate with this command rule.</p>
<p>To find existing rule sets in the current database instance, query the <code dir="ltr">DVSYS.DBA_DV_RULE_SET</code> view, described in <a href="views.htm#BABIDJIF">"DVSYS.DBA_DV_RULE_SET View"</a>.</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r4c1-t30" headers="r1c1-t30">
<p><code dir="ltr">object_owner</code></p>
</td>
<td class="cellalignment1646" headers="r4c1-t30 r1c2-t30">
<p>Database schema to which this command rule applies.</p>
<p>To find the available users, query the <code dir="ltr">DBA_USERS</code> view, described in <a class="olink REFRN23302" href="../../server.112/e40402/statviews_5081.htm#REFRN23302"><span class="italic">Oracle Database Reference</span></a>. See also "Object Owner" in <a href="cfcmdaut.htm#CHDFIFHJ">"Creating and Editing a Command Rule"</a> for more information.</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r5c1-t30" headers="r1c1-t30">
<p><code dir="ltr">object_name</code></p>
</td>
<td class="cellalignment1646" headers="r5c1-t30 r1c2-t30">
<p>Object name. (The wildcard % is allowed. See "Object Name" in <a href="cfcmdaut.htm#CHDFIFHJ">"Creating and Editing a Command Rule"</a> for more information about objects protected by command rules.)</p>
<p>To find the available objects, query the <code dir="ltr">ALL_OBJECTS</code> view, described in <a class="olink REFRN20146" href="../../server.112/e40402/statviews_1158.htm#REFRN20146"><span class="italic">Oracle Database Reference</span></a>.</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r6c1-t30" headers="r1c1-t30">
<p><code dir="ltr">enabled</code></p>
</td>
<td class="cellalignment1646" headers="r6c1-t30 r1c2-t30">
<p><code dir="ltr">DBMS_MACUTL.G_YES</code> (Yes) enables the command rule; <code dir="ltr">DBMS_MACUTL.G_NO</code> (No) disables it.</p>
<p>The default for <code dir="ltr">enabled</code> is the previously set value, which you can find by querying the <code dir="ltr">DVSYS.DBA_DV_COMMAND_RULE</code> data dictionary view.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblhruleformal" -->
<p class="subhead2"><a id="DVADM70542"></a>Example</p>
<pre dir="ltr">
BEGIN
 DBMS_MACADM.UPDATE_COMMAND_RULE(
  command         =&gt; 'SELECT', 
  rule_set_name   =&gt; 'Limit Sector 2 Access', 
  object_owner    =&gt; 'SYSADM', 
  object_name     =&gt; '%', 
  enabled         =&gt; DBMS_MACUTL.G_NO);
END;
/
</pre></div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="CHDEGBDF"></a>
<div id="DVADM70543" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Factor Procedures and Functions Within DBMS_MACADM</h2>
<p><a href="#CHDJJBDC">Table 12-27</a> lists<a id="sthref661"></a> procedures and functions<a id="sthref662"></a><a id="sthref663"></a> within the <code dir="ltr">DBMS_MACADM</code> package that you can use to configure factors.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="cfgfact.htm#CIHCDJJA">Chapter 7, "Configuring Factors,"</a> for detailed information about factors</p>
</li>
<li>
<p><a href="apis_dbms_macutl.htm#CIHIDIDC">Chapter 14, "Using the DBMS_MACUTL Package,"</a> for a set of general-purpose utility procedures that you can use with the factor procedures</p>
</li>
<li>
<p><a href="plsql_interfaces.htm#CHDEAEHD">Chapter 15, "Using the Oracle Database Vault PL/SQL&nbsp;Interfaces,"</a> for a set of PL/SQL interfaces that you can use with factors</p>
</li>
</ul>
</div>
<div id="DVADM70544" class="tblhruleformalwide">
<p class="titleintable"><a id="sthref664"></a><a id="CHDJJBDC"></a>Table 12-27 DBMS_MACADM Factor Configuration Procedures</p>
<table class="cellalignment1647" title="DBMS_MACADM Factor Configuration Procedures" summary="Factor APIs" dir="ltr">
<thead>
<tr class="cellalignment1639">
<th class="cellalignment1648" id="r1c1-t32">Procedure</th>
<th class="cellalignment1648" id="r1c2-t32">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r2c1-t32" headers="r1c1-t32">
<p><a href="#BCFJHJCJ">ADD_FACTOR_LINK Procedure</a></p>
</td>
<td class="cellalignment1646" headers="r2c1-t32 r1c2-t32">
<p>Specifies a parent-child relationship for two factors</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r3c1-t32" headers="r1c1-t32">
<p><a href="#BCFDGGJA">ADD_POLICY_FACTOR Procedure</a></p>
</td>
<td class="cellalignment1646" headers="r3c1-t32 r1c2-t32">
<p>Specifies that the label for a factor contributes to the Oracle Label Security label for a policy.</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r4c1-t32" headers="r1c1-t32">
<p><a href="#BCFHDFDF">CHANGE_IDENTITY_FACTOR Procedure</a></p>
</td>
<td class="cellalignment1646" headers="r4c1-t32 r1c2-t32">
<p>Associates an identity with a different factor</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r5c1-t32" headers="r1c1-t32">
<p><a href="#BCFHIFAA">CHANGE_IDENTITY_VALUE Procedure</a></p>
</td>
<td class="cellalignment1646" headers="r5c1-t32 r1c2-t32">
<p>Updates the value of an identity</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r6c1-t32" headers="r1c1-t32">
<p><a href="#BCFCDGCJ">CREATE_DOMAIN_IDENTITY Procedure</a></p>
</td>
<td class="cellalignment1646" headers="r6c1-t32 r1c2-t32">
<p>Adds an Oracle Real Application Clusters (Oracle RAC) database node to the domain factor identities and labels it according to the Oracle Label Security policy.</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r7c1-t32" headers="r1c1-t32">
<p><a href="#BCFGDFDF">CREATE_FACTOR Procedure</a></p>
</td>
<td class="cellalignment1646" headers="r7c1-t32 r1c2-t32">
<p>Creates a factor</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r8c1-t32" headers="r1c1-t32">
<p><a href="#BCFJIFEG">CREATE_FACTOR_TYPE Procedure</a></p>
</td>
<td class="cellalignment1646" headers="r8c1-t32 r1c2-t32">
<p>Creates a factor type</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r9c1-t32" headers="r1c1-t32">
<p><a href="#BCFBBEFG">CREATE_IDENTITY Procedure</a></p>
</td>
<td class="cellalignment1646" headers="r9c1-t32 r1c2-t32">
<p>Creates an identity</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r10c1-t32" headers="r1c1-t32">
<p><a href="#BCFIIEJJ">CREATE_IDENTITY_MAP Procedure</a></p>
</td>
<td class="cellalignment1646" headers="r10c1-t32 r1c2-t32">
<p>Defines a set of tests that are used to derive the identity of a factor from the value of linked child factors (subfactors)</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r11c1-t32" headers="r1c1-t32">
<p><a href="#BCFJBCJF">DELETE_FACTOR Procedure</a></p>
</td>
<td class="cellalignment1646" headers="r11c1-t32 r1c2-t32">
<p>Deletes a factor</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r12c1-t32" headers="r1c1-t32">
<p><a href="#BCFDHCJF">DELETE_FACTOR_LINK Procedure</a></p>
</td>
<td class="cellalignment1646" headers="r12c1-t32 r1c2-t32">
<p>Removes a parent-child relationship for two factors</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r13c1-t32" headers="r1c1-t32">
<p><a href="#BCFFHCIB">DELETE_FACTOR_TYPE Procedure</a></p>
</td>
<td class="cellalignment1646" headers="r13c1-t32 r1c2-t32">
<p>Deletes a factor type</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r14c1-t32" headers="r1c1-t32">
<p><a href="#BCFBFHJF">DELETE_IDENTITY Procedure</a></p>
</td>
<td class="cellalignment1646" headers="r14c1-t32 r1c2-t32">
<p>Removes an identity</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r15c1-t32" headers="r1c1-t32">
<p><a href="#BCFHJDBJ">DELETE_IDENTITY_MAP Procedure</a></p>
</td>
<td class="cellalignment1646" headers="r15c1-t32 r1c2-t32">
<p>Removes an identity map from a factor</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r16c1-t32" headers="r1c1-t32">
<p><a href="#BCFGCCJG">DROP_DOMAIN_IDENTITY Procedure</a></p>
</td>
<td class="cellalignment1646" headers="r16c1-t32 r1c2-t32">
<p>Removes an Oracle RAC database node from a domain</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r17c1-t32" headers="r1c1-t32">
<p><a href="#BCFGJIJA">GET_INSTANCE_INFO Function</a></p>
</td>
<td class="cellalignment1646" headers="r17c1-t32 r1c2-t32">
<p>Returns information from the <code dir="ltr">SYS.V_$INSTANCE</code> system table about the current database instance; returns a <code dir="ltr">VARCHAR2</code> value<a id="sthref665"></a></p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r18c1-t32" headers="r1c1-t32">
<p><a href="#BCFBDAGB">GET_SESSION_INFO Function</a></p>
</td>
<td class="cellalignment1646" headers="r18c1-t32 r1c2-t32">
<p>Returns information from the <code dir="ltr">SYS.V_$SESSION</code> system table for the current session; returns a <code dir="ltr">VARCHAR2</code> value<a id="sthref666"></a></p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r19c1-t32" headers="r1c1-t32">
<p><a href="#BCFEIDFE">RENAME_FACTOR Procedure</a></p>
</td>
<td class="cellalignment1646" headers="r19c1-t32 r1c2-t32">
<p>Renames a factor. The name change takes effect everywhere the factor is used.</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r20c1-t32" headers="r1c1-t32">
<p><a href="#BCFDFIIG">RENAME_FACTOR_TYPE Procedure</a></p>
</td>
<td class="cellalignment1646" headers="r20c1-t32 r1c2-t32">
<p>Renames a factor type. The name change takes effect everywhere the factor type is used.</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r21c1-t32" headers="r1c1-t32">
<p><a href="#BCFJAIAI">UPDATE_FACTOR Procedure</a></p>
</td>
<td class="cellalignment1646" headers="r21c1-t32 r1c2-t32">
<p>Updates a factor</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r22c1-t32" headers="r1c1-t32">
<p><a href="#BCFJCIGE">UPDATE_FACTOR_TYPE Procedure</a></p>
</td>
<td class="cellalignment1646" headers="r22c1-t32 r1c2-t32">
<p>Updates the description of a factor type</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r23c1-t32" headers="r1c1-t32">
<p><a href="#BCFJHCAF">UPDATE_IDENTITY Procedure</a></p>
</td>
<td class="cellalignment1646" headers="r23c1-t32 r1c2-t32">
<p>Updates the trust level of a factor identity</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblhruleformalwide" -->
<a id="BCFJHJCJ"></a>
<div id="DVADM70545" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">ADD_FACTOR_LINK Procedure</h3>
<p>The<a id="sthref667"></a> <code dir="ltr">ADD_FACTOR_LINK</code> procedure specifies a parent-child relationship for two factors.</p>
<p class="subhead2"><a id="DVADM70546"></a>Syntax</p>
<pre dir="ltr">
DBMS_MACADM.ADD_FACTOR_LINK(
  parent_factor_name IN VARCHAR2, 
  child_factor_name  IN VARCHAR2, 
  label_indicator    IN VARCHAR2);
</pre>
<p class="subhead2"><a id="DVADM70547"></a>Parameters</p>
<div id="DVADM70548" class="tblhruleformal">
<p class="titleintable"><a id="sthref668"></a><a id="sthref669"></a>Table 12-28 ADD_FACTOR_LINK Parameters</p>
<table class="cellalignment1647" title="ADD_FACTOR_LINK Parameters" summary="ADD_FACTOR_LINK" dir="ltr">
<thead>
<tr class="cellalignment1639">
<th class="cellalignment1648" id="r1c1-t33">Parameter</th>
<th class="cellalignment1648" id="r1c2-t33">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r2c1-t33" headers="r1c1-t33">
<p><code dir="ltr">parent_factor_name</code></p>
</td>
<td class="cellalignment1646" headers="r2c1-t33 r1c2-t33">
<p>Parent factor name.</p>
<p>To find existing parent and child factors in the current database instance, query the <code dir="ltr">DVSYS.DBA_DV_FACTOR_LINK</code> view, described in <a href="views.htm#BABDAFEJ">"DVSYS.DBA_DV_FACTOR_LINK View"</a>.</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r3c1-t33" headers="r1c1-t33">
<p><code dir="ltr">child_factor_name</code></p>
</td>
<td class="cellalignment1646" headers="r3c1-t33 r1c2-t33">
<p>Child factor name.</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r4c1-t33" headers="r1c1-t33">
<p><code dir="ltr">label_indicator</code></p>
</td>
<td class="cellalignment1646" headers="r4c1-t33 r1c2-t33">
<p>Indicates that the child factor being linked to the parent factor contributes to the label of the parent factor in an Oracle Label Security integration. Specify either <code dir="ltr">DBMS_MACUTL.G_YES</code> (for Yes) or <code dir="ltr">DBMS_MACUTL.G_NO</code> (for No).</p>
<p>To find the Oracle Label Security policies and labels associated with factors, query the following views, described in <a href="views.htm#BABIFDGE">Chapter 16, "Oracle Database Vault Data Dictionary Views"</a>:</p>
<ul>
<li>
<p><code dir="ltr">DVSYS.DBA_DV_MAC_POLICY</code>: Lists Oracle Label Security policies defined in the current database instance.</p>
</li>
<li>
<p><code dir="ltr">DVSYS.DBA_DV_MAC_POLICY_FACTOR</code>: Lists the factors that are associated with Oracle Label Security policies for the current database instance.</p>
</li>
<li>
<p><code dir="ltr">DVSYS.DBA_DV_POLICY_LABEL</code>: Lists the Oracle Label Security label for each factor identifier in the <code dir="ltr">DVSYS.DBA_DV_IDENTITY</code> view for each policy.</p>
</li>
</ul>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblhruleformal" -->
<p class="subhead2"><a id="DVADM70549"></a>Example</p>
<pre dir="ltr">
BEGIN
 DBMS_MACADM.ADD_FACTOR_LINK(
  parent_factor_name =&gt; 'HQ_ClientID', 
  child_factor_name  =&gt; 'Div1_ClientID', 
  label_indicator    =&gt; DBMS_MACUTL.G_YES);
END;
/
</pre></div>
<!-- class="sect2" -->
<a id="BCFDGGJA"></a>
<div id="DVADM70550" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">ADD_POLICY_FACTOR Procedure</h3>
<p>The<a id="sthref670"></a> <code dir="ltr">ADD_POLICY_FACTOR</code> procedure specifies that the label for a factor contributes to the Oracle Label Security label for a policy.</p>
<p class="subhead2"><a id="DVADM70551"></a>Syntax</p>
<pre dir="ltr">
DBMS_MACADM.ADD_POLICY_FACTOR(
  policy_name  IN VARCHAR2, 
  factor_name  IN VARCHAR2); 
</pre>
<p class="subhead2"><a id="DVADM70552"></a>Parameters</p>
<div id="DVADM70553" class="tblhruleformal">
<p class="titleintable"><a id="sthref671"></a><a id="sthref672"></a>Table 12-29 ADD_POLICY_FACTOR Parameters</p>
<table class="cellalignment1647" title="ADD_POLICY_FACTOR Parameters" summary="ADD_POLICY_FACTOR" dir="ltr">
<thead>
<tr class="cellalignment1639">
<th class="cellalignment1648" id="r1c1-t34">Parameter</th>
<th class="cellalignment1648" id="r1c2-t34">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r2c1-t34" headers="r1c1-t34">
<p><code dir="ltr">policy_name</code></p>
</td>
<td class="cellalignment1646" headers="r2c1-t34 r1c2-t34">
<p>Oracle Label Security policy name.</p>
<p>To find the policies defined in the current database instance, query the <code dir="ltr">DVSYS.DBA_DV_MAC_POLICY</code> view, described in <a href="views.htm#BABIHCJA">"DVSYS.DBA_DV_MAC_POLICY View"</a>.</p>
<p>To find factors that are associated with Oracle Label Security policies, query <code dir="ltr">DVSYS.DBA_DV_MAC_POLICY_FACTOR</code>, described in <a href="views.htm#BABJCCEB">"DVSYS.DBA_DV_MAC_POLICY_FACTOR View"</a>.</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r3c1-t34" headers="r1c1-t34">
<p><code dir="ltr">factor_name</code></p>
</td>
<td class="cellalignment1646" headers="r3c1-t34 r1c2-t34">
<p>Factor name.</p>
<p>To find existing factors, query the <code dir="ltr">DVSYS.DBA_DV_FACTOR</code> view, described in <a href="views.htm#BABJHIEG">"DVSYS.DBA_DV_FACTOR View"</a>.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblhruleformal" -->
<p class="subhead2"><a id="DVADM70554"></a>Example</p>
<pre dir="ltr">
BEGIN
 DBMS_MACADM.ADD_POLICY_FACTOR(
  policy_name  =&gt; 'AccessData', 
  factor_name  =&gt; 'Sector2_ClientID'); 
END;
/
</pre></div>
<!-- class="sect2" -->
<a id="BCFHDFDF"></a>
<div id="DVADM70555" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">CHANGE_IDENTITY_FACTOR Procedure</h3>
<p>The<a id="sthref673"></a> <code dir="ltr">CHANGE_IDENTITY_FACTOR</code> procedure associates an identity with a different factor.</p>
<p class="subhead2"><a id="DVADM70556"></a>Syntax</p>
<pre dir="ltr">
DBMS_MACADM.CHANGE_IDENTITY_FACTOR(
  factor_name     IN VARCHAR2, 
  value           IN VARCHAR2, 
  new_factor_name IN VARCHAR2); 
</pre>
<p class="subhead2"><a id="DVADM70557"></a>Parameters</p>
<div id="DVADM70558" class="tblhruleformal">
<p class="titleintable"><a id="sthref674"></a><a id="sthref675"></a>Table 12-30 CHANGE_IDENTITY_FACTOR Parameters</p>
<table class="cellalignment1647" title="CHANGE_IDENTITY_FACTOR Parameters" summary="CHANGE_IDENTITY_FACTOR" dir="ltr">
<thead>
<tr class="cellalignment1639">
<th class="cellalignment1648" id="r1c1-t35">Parameter</th>
<th class="cellalignment1648" id="r1c2-t35">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r2c1-t35" headers="r1c1-t35">
<p><code dir="ltr">factor_name</code></p>
</td>
<td class="cellalignment1646" headers="r2c1-t35 r1c2-t35">
<p>Current factor name.</p>
<p>To find existing factors, query the <code dir="ltr">DVSYS.DBA_DV_FACTOR</code> view, described in <a href="views.htm#BABJHIEG">"DVSYS.DBA_DV_FACTOR View"</a>.</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r3c1-t35" headers="r1c1-t35">
<p><code dir="ltr">value</code></p>
</td>
<td class="cellalignment1646" headers="r3c1-t35 r1c2-t35">
<p>Value of the identity to update.</p>
<p>To find existing identities for each factor in the current database instance, query the <code dir="ltr">DVSYS.DBA_DV_IDENTITY</code> view, described in <a href="views.htm#BABBHHCB">"DVSYS.DBA_DV_IDENTITY View"</a>.</p>
<p>To find current identity mappings, query the <code dir="ltr">DVSYS.DBA_DV_IDENTITY_MAP</code> view, described in <a href="views.htm#BABBDBFF">"DVSYS.DBA_DV_IDENTITY_MAP View"</a>.</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r4c1-t35" headers="r1c1-t35">
<p><code dir="ltr">new_factor_name</code></p>
</td>
<td class="cellalignment1646" headers="r4c1-t35 r1c2-t35">
<p>Name of the factor to associate with the identity, which you can find by querying the <code dir="ltr">DVSYS.DBA_DV_FACTOR</code> view, described in <a href="views.htm#BABJHIEG">"DVSYS.DBA_DV_FACTOR View"</a>.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblhruleformal" -->
<p class="subhead2"><a id="DVADM70559"></a>Example</p>
<pre dir="ltr">
BEGIN
 DBMS_MACADM.CHANGE_IDENTITY_FACTOR(
  factor_name     =&gt; 'Sector2_ClientID', 
  value           =&gt; 'intranet', 
  new_factor_name =&gt; 'Sector4_ClientID'); 
END;
/
</pre></div>
<!-- class="sect2" -->
<a id="BCFHIFAA"></a>
<div id="DVADM70560" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">CHANGE_IDENTITY_VALUE Procedure</h3>
<p>The<a id="sthref676"></a> <code dir="ltr">CHANGE_IDENTITY_FACTOR</code> procedure updates the value of an identity.</p>
<p class="subhead2"><a id="DVADM70561"></a>Syntax</p>
<pre dir="ltr">
DBMS_MACADM.CHANGE_IDENTITY_VALUE(
  factor_name  IN VARCHAR2, 
  value        IN VARCHAR2, 
  new_value    IN VARCHAR2); 
</pre>
<p class="subhead2"><a id="DVADM70562"></a>Parameters</p>
<div id="DVADM70563" class="tblhruleformal">
<p class="titleintable"><a id="sthref677"></a><a id="sthref678"></a>Table 12-31 CHANGE_IDENTITY_VALUE Parameters</p>
<table class="cellalignment1647" title="CHANGE_IDENTITY_VALUE Parameters" summary="CHANGE_IDENTITY_VALUE" dir="ltr">
<thead>
<tr class="cellalignment1639">
<th class="cellalignment1648" id="r1c1-t36">Parameter</th>
<th class="cellalignment1648" id="r1c2-t36">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r2c1-t36" headers="r1c1-t36">
<p><code dir="ltr">factor_name</code></p>
</td>
<td class="cellalignment1646" headers="r2c1-t36 r1c2-t36">
<p>Factor name.</p>
<p>To find existing factors, query the <code dir="ltr">DVSYS.DBA_DV_FACTOR</code> view, described in <a href="views.htm#BABJHIEG">"DVSYS.DBA_DV_FACTOR View"</a>.</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r3c1-t36" headers="r1c1-t36">
<p><code dir="ltr">value</code></p>
</td>
<td class="cellalignment1646" headers="r3c1-t36 r1c2-t36">
<p>Current value associated with the identity.</p>
<p>To find existing identities for each factor in the current database instance, query the <code dir="ltr">DVSYS.DBA_DV_IDENTITY</code> view, described in <a href="views.htm#BABBHHCB">"DVSYS.DBA_DV_IDENTITY View"</a>.</p>
<p>To find current identity mappings, query the <code dir="ltr">DVSYS.DBA_DV_IDENTITY_MAP</code> view, described in <a href="views.htm#BABBDBFF">"DVSYS.DBA_DV_IDENTITY_MAP View"</a>.</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r4c1-t36" headers="r1c1-t36">
<p><code dir="ltr">new_value</code></p>
</td>
<td class="cellalignment1646" headers="r4c1-t36 r1c2-t36">
<p>New identity value, up to 1024 characters in mixed-case.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblhruleformal" -->
<p class="subhead2"><a id="DVADM70564"></a>Example</p>
<pre dir="ltr">
BEGIN
 DBMS_MACADM.CHANGE_IDENTITY_VALUE(
  factor_name  =&gt; 'Sector2_ClientID', 
  value        =&gt; 'remote', 
  new_value    =&gt; 'intranet');
END; 
/
</pre></div>
<!-- class="sect2" -->
<a id="BCFCDGCJ"></a>
<div id="DVADM70565" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">CREATE_DOMAIN_IDENTITY Procedure</h3>
<p>The<a id="sthref679"></a> <code dir="ltr">CREATE_DOMAIN_IDENTITY</code> procedure adds an Oracle Real Application Clusters (Oracle RAC) database node to the domain factor identities and labels it according to the Oracle Label Security policy.</p>
<p class="subhead2"><a id="DVADM70566"></a>Syntax</p>
<pre dir="ltr">
DBMS_MACADM.CREATE_DOMAIN_IDENTITY(
  domain_name  IN VARCHAR2, 
  domain_host  IN VARCHAR2, 
  policy_name  IN VARCHAR2 DEFAULT NULL, 
  domain_label IN VARCHAR2 DEFAULT NULL); 
</pre>
<p class="subhead2"><a id="DVADM70567"></a>Parameters</p>
<div id="DVADM70568" class="tblhruleformal">
<p class="titleintable"><a id="sthref680"></a><a id="sthref681"></a>Table 12-32 CREATE_DOMAIN_IDENTITY Parameters</p>
<table class="cellalignment1647" title="CREATE_DOMAIN_IDENTITY Parameters" summary="CREATE_DOMAIN_IDENTITY" dir="ltr">
<thead>
<tr class="cellalignment1639">
<th class="cellalignment1648" id="r1c1-t37">Parameter</th>
<th class="cellalignment1648" id="r1c2-t37">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r2c1-t37" headers="r1c1-t37">
<p><code dir="ltr">domain_name</code></p>
</td>
<td class="cellalignment1646" headers="r2c1-t37 r1c2-t37">
<p>Name of the domain to which to add the host.</p>
<p>To find the logical location of the database within the network structure within a distributed database system, run the <code dir="ltr">DVF.F$DATABASE_DOMAIN</code> function, described in <a href="plsql_interfaces.htm#CHDJGAIJ">"Oracle Database Vault PL/SQL Factor Functions"</a>.</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r3c1-t37" headers="r1c1-t37">
<p><code dir="ltr">domain_host</code></p>
</td>
<td class="cellalignment1646" headers="r3c1-t37 r1c2-t37">
<p>Oracle Real Application Clusters host name being added to the domain.</p>
<p>To find host name of a database, run the <code dir="ltr">DVF.F$DATABASE_HOSTNAME</code> function, described in <a href="plsql_interfaces.htm#CHDJGAIJ">"Oracle Database Vault PL/SQL Factor Functions"</a>.</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r4c1-t37" headers="r1c1-t37">
<p><code dir="ltr">policy_name</code></p>
</td>
<td class="cellalignment1646" headers="r4c1-t37 r1c2-t37">
<p>Oracle Label Security policy name. If you omit the policy name, then the domain is not associated with any policy.</p>
<p>To find the available policies, query the <code dir="ltr">DVSYS.DBA_DV_MAC_POLICY</code> view, described in <a href="views.htm#BABIHCJA">"DVSYS.DBA_DV_MAC_POLICY View"</a>.</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r5c1-t37" headers="r1c1-t37">
<p><code dir="ltr">domain_label</code></p>
</td>
<td class="cellalignment1646" headers="r5c1-t37 r1c2-t37">
<p>Name of the domain to which to add the Oracle Label Security policy.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblhruleformal" -->
<p class="subhead2"><a id="DVADM70569"></a>Examples</p>
<pre dir="ltr">
BEGIN
 DBMS_MACADM.CREATE_DOMAIN_IDENTITY(
  domain_name  =&gt; 'example', 
  domain_host  =&gt; 'mydom_host', 
  policy_name  =&gt; 'AccessData', 
  domain_label =&gt; 'sensitive'); 
END;
/
</pre></div>
<!-- class="sect2" -->
<a id="BCFGDFDF"></a>
<div id="DVADM70570" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">CREATE_FACTOR Procedure</h3>
<p>The<a id="sthref682"></a> <code dir="ltr">CREATE_FACTOR</code> procedure creates a factor. After you create a factor, you can give it an identity by using the <code dir="ltr">CREATE_IDENTITY</code> procedure, described in <a href="#BCFBBEFG">"CREATE_IDENTITY Procedure"</a>.</p>
<p class="subhead2"><a id="DVADM70571"></a>Syntax</p>
<pre dir="ltr">
DBMS_MACADM.CREATE_FACTOR(
  factor_name       IN VARCHAR2, 
  factor_type_name  IN VARCHAR2, 
  description       IN VARCHAR2, 
  rule_set_name     IN VARCHAR2, 
  get_expr          IN VARCHAR2, 
  validate_expr     IN VARCHAR2, 
  identify_by       IN NUMBER, 
  labeled_by        IN NUMBER, 
  eval_options      IN NUMBER, 
  audit_options     IN NUMBER, 
  fail_options      IN NUMBER); 
</pre>
<p class="subhead2"><a id="DVADM70572"></a>Parameters</p>
<div id="DVADM70573" class="tblhruleformal">
<p class="titleintable"><a id="sthref683"></a><a id="sthref684"></a>Table 12-33 CREATE_FACTOR Parameters</p>
<table class="cellalignment1647" title="CREATE_FACTOR Parameters" summary="CREATE_FACTOR" dir="ltr">
<thead>
<tr class="cellalignment1639">
<th class="cellalignment1648" id="r1c1-t38">Parameter</th>
<th class="cellalignment1648" id="r1c2-t38">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r2c1-t38" headers="r1c1-t38">
<p><code dir="ltr">factor_name</code></p>
</td>
<td class="cellalignment1646" headers="r2c1-t38 r1c2-t38">
<p>Factor name, up to 28 characters in mixed-case, without spaces.</p>
<p>To find existing factors in the current database instance, query the <code dir="ltr">DVSYS.DBA_DV_FACTOR</code> view, described in <a href="views.htm#BABJHIEG">"DVSYS.DBA_DV_FACTOR View"</a>.</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r3c1-t38" headers="r1c1-t38">
<p><code dir="ltr">factor_type_name</code></p>
</td>
<td class="cellalignment1646" headers="r3c1-t38 r1c2-t38">
<p>Type of the factor, up to 30 characters in mixed-case, without spaces.</p>
<p>To find existing factor types, query the <code dir="ltr">DBA_DV_FACTOR_TYPE</code> view, described in <a href="views.htm#BABEJCIJ">"DVSYS.DBA_DV_FACTOR_TYPE View"</a>.</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r4c1-t38" headers="r1c1-t38">
<p><code dir="ltr">description</code></p>
</td>
<td class="cellalignment1646" headers="r4c1-t38 r1c2-t38">
<p>Description of the purpose of the factor, up to 1024 characters in mixed-case.</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r5c1-t38" headers="r1c1-t38">
<p><code dir="ltr">rule_set_name</code></p>
</td>
<td class="cellalignment1646" headers="r5c1-t38 r1c2-t38">
<p>Rule set name if you want to use a rule set to control when and how a factor identity is set.</p>
<p>To find existing rule sets, query the <code dir="ltr">DVSYS.DBA_DV_RULE_SET</code> view, described in <a href="views.htm#BABIDJIF">"DVSYS.DBA_DV_RULE_SET View"</a>. See also <a href="cfgfact.htm#BABGAJIG">"Assignment Rule Set"</a> for more information about assigning rule sets to factors.</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r6c1-t38" headers="r1c1-t38">
<p><code dir="ltr">get_expr</code></p>
</td>
<td class="cellalignment1646" headers="r6c1-t38 r1c2-t38">
<p>Valid PL/SQL expression that retrieves the identity of a factor. It can use up to 255 characters in mixed-case. See <a href="cfgfact.htm#BABGIIAB">"Retrieval Method"</a> for more information. See also the <code dir="ltr">audit_options</code> parameter.</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r7c1-t38" headers="r1c1-t38">
<p><code dir="ltr">validate_expr</code></p>
</td>
<td class="cellalignment1646" headers="r7c1-t38 r1c2-t38">
<p>Name of the procedure to validate the factor. This is a valid PL/SQL expression that returns a Boolean value (<code dir="ltr">TRUE</code> or <code dir="ltr">FALSE</code>) to validate the identity of the factor. See <a href="cfgfact.htm#BABJJEFA">"Validation Method"</a> for more information.</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r8c1-t38" headers="r1c1-t38">
<p><code dir="ltr">identify_by</code></p>
</td>
<td class="cellalignment1646" headers="r8c1-t38 r1c2-t38">
<p>Options for determining the identity of a factor, based on the expression set for the <code dir="ltr">get_expr</code> parameter:</p>
<ul>
<li>
<p><code dir="ltr">DBMS_MACUTL.G_IDENTIFY_BY_CONSTANT</code>: By constant</p>
</li>
<li>
<p><code dir="ltr">DBMS_MACUTL.G_IDENTIFY_BY_METHOD</code>: By method</p>
</li>
<li>
<p><code dir="ltr">DBMS_MACUTL.G_IDENTIFY_BY_FACTOR</code>: By factor</p>
</li>
<li>
<p><code dir="ltr">DBMS_MACUTL.G_IDENTIFY_BY_CONTEXT</code>: By context</p>
</li>
</ul>
<p>See <a href="cfgfact.htm#BABHHGBC">"Factor Identification"</a> for more information.</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r9c1-t38" headers="r1c1-t38">
<p><code dir="ltr">labeled_by</code></p>
</td>
<td class="cellalignment1646" headers="r9c1-t38 r1c2-t38">
<p>Options for labeling the factor:</p>
<ul>
<li>
<p><code dir="ltr">DBMS_MACUTL.G_LABELED_BY_SELF</code>: Labels the identities for the factor directly from the labels associated with an Oracle Label Security policy (default)</p>
</li>
<li>
<p><code dir="ltr">DBMS_MACUTL.G_LABELED_BY_FACTORS</code>: Derives the factor identity label from the labels of its child factor identities.</p>
</li>
</ul>
<p>See <a href="cfgfact.htm#CIHHFBGG">"Factor Labeling"</a> for more information.</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r10c1-t38" headers="r1c1-t38">
<p><code dir="ltr">eval_options</code></p>
</td>
<td class="cellalignment1646" headers="r10c1-t38 r1c2-t38">
<p>Options for evaluating the factor when the user logs on:</p>
<ul>
<li>
<p><code dir="ltr">DBMS_MACUTL.G_EVAL_ON_SESSION</code>: When the database session is created (default)</p>
</li>
<li>
<p><code dir="ltr">DBMS_MACUTL.G_EVAL_ON_ACCESS</code> Each time the factor is accessed</p>
</li>
<li>
<p><code dir="ltr">DBMS_MACUTL.G_EVAL_ON_STARTUP</code> On start-up</p>
</li>
</ul>
<p>See <a href="cfgfact.htm#BABIEIBD">"Evaluation"</a> for more information.</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r11c1-t38" headers="r1c1-t38">
<p><code dir="ltr">audit_options</code></p>
</td>
<td class="cellalignment1646" headers="r11c1-t38 r1c2-t38">
<p>Options for auditing the factor if you want to generate a custom Oracle Database Vault audit record.</p>
<ul>
<li>
<p><code dir="ltr">DBMS_MACUTL.G_AUDIT_OFF</code>: Disables auditing.</p>
</li>
<li>
<p><code dir="ltr">DBMS_MACUTL.G_AUDIT_ALWAYS</code>: Always audits.</p>
</li>
<li>
<p><code dir="ltr">DBMS_MACUTL.G_AUDIT_ON_GET_ERROR</code>: Audits if <code dir="ltr">get_expr</code> returns an error.</p>
</li>
<li>
<p><code dir="ltr">DBMS_MACUTL.G_AUDIT_ON_GET_NULL</code>: Audits if <code dir="ltr">get_expr</code> is null.</p>
</li>
<li>
<p><code dir="ltr">DBMS_MACUTL.G_AUDIT_ON_VALIDATE_ERROR</code>: Audits if the validation procedure returns an error.</p>
</li>
<li>
<p><code dir="ltr">DBMS_MACUTL.G_AUDIT_ON_VALIDATE_FALSE</code>: Audits if the validation procedure is false.</p>
</li>
<li>
<p><code dir="ltr">DBMS_MACUTL.G_AUDIT_ON_TRUST_LEVEL_NULL</code>: Audits if there is no trust level set.</p>
</li>
<li>
<p><code dir="ltr">DBMS_MACUTL.G_AUDIT_ON_TRUST_LEVEL_NEG</code>: Audits if the trust level is negative.</p>
</li>
</ul>
<p>See <a href="cfgfact.htm#BABEDJHB">"Audit Options"</a> for more information.</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r12c1-t38" headers="r1c1-t38">
<p><code dir="ltr">fail_options</code></p>
</td>
<td class="cellalignment1646" headers="r12c1-t38 r1c2-t38">
<p>Options for reporting factor errors:</p>
<ul>
<li>
<p><code dir="ltr">DBMS_MACUTL.G_FAIL_WITH_MESSAGE</code>: Shows an error message (default)</p>
</li>
<li>
<p><code dir="ltr">DBMS_MACUTL.G_FAIL_SILENTLY</code>: Does not show an error message</p>
</li>
</ul>
<p>See <a href="cfgfact.htm#BABEBHID">"Error Options"</a> for more information.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblhruleformal" -->
<p class="subhead2"><a id="DVADM70574"></a>Example</p>
<pre dir="ltr">
BEGIN
 DBMS_MACADM.CREATE_FACTOR(
  factor_name       =&gt; 'Sector2_DB', 
  factor_type_name  =&gt; 'Instance', 
  description       =&gt; ' ', 
  rule_set_name     =&gt; 'Limit_DBA_Access', 
  get_expr          =&gt; 'UPPER(SYS_CONTEXT(''USERENV'',''DB_NAME''))', 
  validate_expr     =&gt; 'dbavowner.check_db_access', 
  identify_by       =&gt; DBMS_MACUTL.G_IDENTIFY_BY_METHOD, 
  labeled_by        =&gt; DBMS_MACUTL.G_LABELED_BY_SELF, 
  eval_options      =&gt; DBMS_MACUTL.G_EVAL_ON_SESSION, 
  audit_options     =&gt; DBMS_MACUTL.G_AUDIT_OFF, 
  fail_options      =&gt; DBMS_MACUTL.G_FAIL_SILENTLY); 
END;
/
</pre></div>
<!-- class="sect2" -->
<a id="BCFJIFEG"></a>
<div id="DVADM70575" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">CREATE_FACTOR_TYPE Procedure</h3>
<p>The<a id="sthref685"></a> <code dir="ltr">CREATE_FACTOR_TYPE</code> procedure creates a user-defined factor type.</p>
<p class="subhead2"><a id="DVADM70576"></a>Syntax</p>
<pre dir="ltr">
DBMS_MACADM.CREATE_FACTOR_TYPE(
  name        IN VARCHAR2, 
  description IN VARCHAR2);
</pre>
<p class="subhead2"><a id="DVADM70577"></a>Parameters</p>
<div id="DVADM70578" class="tblhruleformal">
<p class="titleintable"><a id="sthref686"></a><a id="sthref687"></a>Table 12-34 CREATE_FACTOR_TYPE Parameters</p>
<table class="cellalignment1647" title="CREATE_FACTOR_TYPE Parameters" summary="CREATE_FACTOR_TYPE" dir="ltr">
<thead>
<tr class="cellalignment1639">
<th class="cellalignment1648" id="r1c1-t39">Parameter</th>
<th class="cellalignment1648" id="r1c2-t39">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r2c1-t39" headers="r1c1-t39">
<p><code dir="ltr">name</code></p>
</td>
<td class="cellalignment1646" headers="r2c1-t39 r1c2-t39">
<p>Factor type name, up to 30 characters in mixed-case, without spaces.</p>
<p>To find existing factor types, query the <code dir="ltr">DVSYS.DBA_DV_FACTOR_TYPE</code> view, described in <a href="views.htm#BABEJCIJ">"DVSYS.DBA_DV_FACTOR_TYPE View"</a>.</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r3c1-t39" headers="r1c1-t39">
<p><code dir="ltr">description</code></p>
</td>
<td class="cellalignment1646" headers="r3c1-t39 r1c2-t39">
<p>Description of the purpose of the factor type, up to 1024 characters in mixed-case.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblhruleformal" -->
<p class="subhead2"><a id="DVADM70579"></a>Example</p>
<pre dir="ltr">
BEGIN
 DBMS_MACADM.CREATE_FACTOR_TYPE(
  name        =&gt; 'Sector2Instance', 
  description =&gt; 'Checks DB instances used in Sector 2');
END;
/
</pre></div>
<!-- class="sect2" -->
<a id="BCFBBEFG"></a>
<div id="DVADM70580" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">CREATE_IDENTITY Procedure</h3>
<p>The <a id="sthref688"></a><code dir="ltr">CREATE_IDENTITY</code> procedure assigns an identity and an associated trust level for a given factor. After you create a factor, you must assign it an identity.</p>
<p class="subhead2"><a id="DVADM70581"></a>Syntax</p>
<pre dir="ltr">
DBMS_MACADM.CREATE_IDENTITY(
  factor_name  IN VARCHAR2, 
  value        IN VARCHAR2, 
  trust_level  IN NUMBER); 
</pre>
<p class="subhead2"><a id="DVADM70582"></a>Parameters</p>
<div id="DVADM70583" class="tblhruleformal">
<p class="titleintable"><a id="sthref689"></a><a id="sthref690"></a>Table 12-35 CREATE_IDENTITY Parameters</p>
<table class="cellalignment1647" title="CREATE_IDENTITY Parameters" summary="CREATE_IDENTITY" dir="ltr">
<thead>
<tr class="cellalignment1639">
<th class="cellalignment1648" id="r1c1-t40">Parameter</th>
<th class="cellalignment1648" id="r1c2-t40">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r2c1-t40" headers="r1c1-t40">
<p><code dir="ltr">factor_name</code></p>
</td>
<td class="cellalignment1646" headers="r2c1-t40 r1c2-t40">
<p>Factor name.</p>
<p>To find existing factors, query the <code dir="ltr">DVSYS.DBA_DV_FACTOR</code> view, described in <a href="views.htm#BABJHIEG">"DVSYS.DBA_DV_FACTOR View"</a>.</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r3c1-t40" headers="r1c1-t40">
<p><code dir="ltr">value</code></p>
</td>
<td class="cellalignment1646" headers="r3c1-t40 r1c2-t40">
<p>The actual value of the factor, up to 1024 characters in mixed-case. For example, the identity of an IP_Address factor could be the IP address of 192.0.2.12.</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r4c1-t40" headers="r1c1-t40">
<p><code dir="ltr">trust_level</code></p>
</td>
<td class="cellalignment1646" headers="r4c1-t40 r1c2-t40">
<p>Number that indicates the magnitude of trust relative to other identities for the same factor. In general, the higher the trust level number is set, the greater the trust. A trust level of 10 indicates "very trusted." Negative trust levels are not trusted.</p>
<p>See <a href="cfgfact.htm#BABDJFJB">"Creating and Configuring a Factor Identity"</a> for more information about trust levels and label security.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblhruleformal" -->
<p class="subhead2"><a id="DVADM70584"></a>Example</p>
<pre dir="ltr">
BEGIN
 DBMS_MACADM.CREATE_IDENTITY(
  factor_name  =&gt; 'Sector2_ClientID', 
  value        =&gt; 'intranet', 
  trust_level  =&gt; 5); 
END;
/
</pre></div>
<!-- class="sect2" -->
<a id="BCFIIEJJ"></a>
<div id="DVADM70585" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">CREATE_IDENTITY_MAP Procedure</h3>
<p>The<a id="sthref691"></a> <code dir="ltr">CREATE_IDENTITY_MAP</code> procedure defines a set of tests that are used to derive the identity of a factor from the value of linked child factors (subfactors).</p>
<p class="subhead2"><a id="DVADM70586"></a>Syntax</p>
<pre dir="ltr">
DBMS_MACADM.CREATE_IDENTITY_MAP(
  identity_factor_name  IN VARCHAR2,
  identity_factor_value IN VARCHAR2, 
  parent_factor_name    IN VARCHAR2, 
  child_factor_name     IN VARCHAR2, 
  operation             IN VARCHAR2, 
  operand1              IN VARCHAR2, 
  operand2              IN VARCHAR2);
</pre>
<p class="subhead2"><a id="DVADM70587"></a>Parameters</p>
<div id="DVADM70588" class="tblhruleformal">
<p class="titleintable"><a id="sthref692"></a><a id="sthref693"></a>Table 12-36 CREATE_IDENTITY_MAP Parameters</p>
<table class="cellalignment1647" title="CREATE_IDENTITY_MAP Parameters" summary="CREATE_IDENTITY_MAP" dir="ltr">
<thead>
<tr class="cellalignment1639">
<th class="cellalignment1648" id="r1c1-t41">Parameter</th>
<th class="cellalignment1648" id="r1c2-t41">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r2c1-t41" headers="r1c1-t41">
<p><code dir="ltr">identity_factor_name</code></p>
</td>
<td class="cellalignment1646" headers="r2c1-t41 r1c2-t41">
<p>Factor the identity map is for.</p>
<p>To find existing factors in the current database instance, query the <code dir="ltr">DVSYS.DBA_DV_FACTOR</code> view, described in <a href="views.htm#BABJHIEG">"DVSYS.DBA_DV_FACTOR View"</a>.</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r3c1-t41" headers="r1c1-t41">
<p><code dir="ltr">identity_factor_value</code></p>
</td>
<td class="cellalignment1646" headers="r3c1-t41 r1c2-t41">
<p>Value the factor assumes if the identity map evaluates to <code dir="ltr">TRUE</code>.</p>
<p>To find existing factor identities, query the <code dir="ltr">DVSYS.DBA_DV_IDENTITY</code> view, described in <a href="views.htm#BABBHHCB">"DVSYS.DBA_DV_IDENTITY View"</a>.</p>
<p>To find current factor identity mappings, use <code dir="ltr">DVSYS.DBA_DV_IDENTITY_MAP</code>, described in <a href="views.htm#BABBDBFF">"DVSYS.DBA_DV_IDENTITY_MAP View"</a>.</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r4c1-t41" headers="r1c1-t41">
<p><code dir="ltr">parent_factor_name</code></p>
</td>
<td class="cellalignment1646" headers="r4c1-t41 r1c2-t41">
<p>The parent factor link to which the map is related.</p>
<p>To find existing parent-child factor mappings, query the <code dir="ltr">DVSYS.DBA_DV_IDENTITY_MAP</code> view, described in <a href="views.htm#BABBDBFF">"DVSYS.DBA_DV_IDENTITY_MAP View"</a>.</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r5c1-t41" headers="r1c1-t41">
<p><code dir="ltr">child_factor_name</code></p>
</td>
<td class="cellalignment1646" headers="r5c1-t41 r1c2-t41">
<p>The child factor link to which the map is related.</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r6c1-t41" headers="r1c1-t41">
<p><code dir="ltr">operation</code></p>
</td>
<td class="cellalignment1646" headers="r6c1-t41 r1c2-t41">
<p>Relational operator for the identity map (for example, &lt;, &gt;, =, and so on).</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r7c1-t41" headers="r1c1-t41">
<p><code dir="ltr">operand1</code></p>
</td>
<td class="cellalignment1646" headers="r7c1-t41 r1c2-t41">
<p>Left operand for the relational operator; refers to the low value you enter.</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r8c1-t41" headers="r1c1-t41">
<p><code dir="ltr">operand2</code></p>
</td>
<td class="cellalignment1646" headers="r8c1-t41 r1c2-t41">
<p>Right operand for the relational operator; refers to the high value you enter.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblhruleformal" -->
<p class="subhead2"><a id="DVADM70589"></a>Example</p>
<pre dir="ltr">
BEGIN
 DBMS_MACADM.CREATE_IDENTITY_MAP(
  identity_factor_name  =&gt; 'Sector2_ClientID',
  identity_factor_value =&gt; 'intranet', 
  parent_factor_name    =&gt; 'HQ_ClientID', 
  child_factor_name     =&gt; 'Div1_ClientID', 
  operation             =&gt; '&lt;', 
  operand1              =&gt; '192.0.2.50', 
  operand2              =&gt; '192.0.2.100');
END;
/
</pre></div>
<!-- class="sect2" -->
<a id="BCFJBCJF"></a>
<div id="DVADM70590" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">DELETE_FACTOR Procedure</h3>
<p>The<a id="sthref694"></a> <code dir="ltr">DELETE_FACTOR</code> procedure deletes a factor.</p>
<p class="subhead2"><a id="DVADM70591"></a>Syntax</p>
<pre dir="ltr">
DBMS_MACADM.DELETE_FACTOR(
  factor_name IN VARCHAR2);
</pre>
<p class="subhead2"><a id="DVADM70592"></a>Parameters</p>
<div id="DVADM70593" class="tblhruleformal">
<p class="titleintable"><a id="sthref695"></a><a id="sthref696"></a>Table 12-37 DELETE_FACTOR Parameter</p>
<table class="cellalignment1647" title="DELETE_FACTOR Parameter" summary="DELETE_FACTOR" dir="ltr">
<thead>
<tr class="cellalignment1639">
<th class="cellalignment1648" id="r1c1-t42">Parameter</th>
<th class="cellalignment1648" id="r1c2-t42">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r2c1-t42" headers="r1c1-t42">
<p><code dir="ltr">factor_name</code></p>
</td>
<td class="cellalignment1646" headers="r2c1-t42 r1c2-t42">
<p>Factor name.</p>
<p>To find existing factors in the current database instance, query the <code dir="ltr">DVSYS.DBA_DV_FACTOR</code> view, described in <a href="views.htm#BABJHIEG">"DVSYS.DBA_DV_FACTOR View"</a>.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblhruleformal" -->
<p class="subhead2"><a id="DVADM70594"></a>Example</p>
<pre dir="ltr">
EXEC DBMS_MACADM.DELETE_FACTOR('Sector2_ClientID');
</pre></div>
<!-- class="sect2" -->
<a id="BCFDHCJF"></a>
<div id="DVADM70595" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">DELETE_FACTOR_LINK Procedure</h3>
<p>The<a id="sthref697"></a> <code dir="ltr">DELETE_FACTOR_LINK</code> procedure removes a parent-child relationship for two factors.</p>
<p class="subhead2"><a id="DVADM70596"></a>Syntax</p>
<pre dir="ltr">
DBMS_MACADM.DELETE_FACTOR_LINK(
  parent_factor_name IN VARCHAR2, 
  child_factor_name  IN VARCHAR2); 
</pre>
<p class="subhead2"><a id="DVADM70597"></a>Parameters</p>
<div id="DVADM70598" class="tblhruleformal">
<p class="titleintable"><a id="sthref698"></a><a id="sthref699"></a>Table 12-38 DELETE_FACTOR_LINK Parameters</p>
<table class="cellalignment1647" title="DELETE_FACTOR_LINK Parameters" summary="DELETE_FACTOR_LINK" dir="ltr">
<thead>
<tr class="cellalignment1639">
<th class="cellalignment1648" id="r1c1-t43">Parameter</th>
<th class="cellalignment1648" id="r1c2-t43">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r2c1-t43" headers="r1c1-t43">
<p><code dir="ltr">parent_factor_name</code></p>
</td>
<td class="cellalignment1646" headers="r2c1-t43 r1c2-t43">
<p>Factor name.</p>
<p>To find factors that are used in parent-child mappings in the current database instance, query the <code dir="ltr">DVSYS.DBA_DV_FACTOR_LINK</code> view, described in <a href="views.htm#BABDAFEJ">"DVSYS.DBA_DV_FACTOR_LINK View"</a>.</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r3c1-t43" headers="r1c1-t43">
<p><code dir="ltr">child_factor_name</code></p>
</td>
<td class="cellalignment1646" headers="r3c1-t43 r1c2-t43">
<p>Factor name.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblhruleformal" -->
<p class="subhead2"><a id="DVADM70599"></a>Example</p>
<pre dir="ltr">
BEGIN
 DBMS_MACADM.DELETE_FACTOR_LINK(
  parent_factor_name =&gt; 'HQ_ClientID', 
  child_factor_name  =&gt; 'Div1_ClientID'); 
END;
/
</pre></div>
<!-- class="sect2" -->
<a id="BCFFHCIB"></a>
<div id="DVADM70600" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">DELETE_FACTOR_TYPE Procedure</h3>
<p>The<a id="sthref700"></a> <code dir="ltr">DELETE_FACTOR_TYPE</code> procedure deletes a factor type.</p>
<p class="subhead2"><a id="DVADM70601"></a>Syntax</p>
<pre dir="ltr">
DBMS_MACADM.DELETE_FACTOR_TYPE(
  name IN VARCHAR2);
</pre>
<p class="subhead2"><a id="DVADM70602"></a>Parameters</p>
<div id="DVADM70603" class="tblhruleformal">
<p class="titleintable"><a id="sthref701"></a><a id="sthref702"></a>Table 12-39 DELETE_FACTOR_TYPE Parameters</p>
<table class="cellalignment1647" title="DELETE_FACTOR_TYPE Parameters" summary="DELETE_FACTOR_TYPE" dir="ltr">
<thead>
<tr class="cellalignment1639">
<th class="cellalignment1648" id="r1c1-t44">Parameter</th>
<th class="cellalignment1648" id="r1c2-t44">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r2c1-t44" headers="r1c1-t44">
<p><code dir="ltr">name</code></p>
</td>
<td class="cellalignment1646" headers="r2c1-t44 r1c2-t44">
<p>Factor type name.</p>
<p>To find existing factor types, query the <code dir="ltr">DVSYS.DBA_DV_FACTOR_TYPE</code> view, described in <a href="views.htm#BABEJCIJ">"DVSYS.DBA_DV_FACTOR_TYPE View"</a>.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblhruleformal" -->
<p class="subhead2"><a id="DVADM70604"></a>Example</p>
<pre dir="ltr">
EXEC DBMS_MACADM.DELETE_FACTOR_TYPE('Sector2Instance');
</pre></div>
<!-- class="sect2" -->
<a id="BCFBFHJF"></a>
<div id="DVADM70605" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">DELETE_IDENTITY Procedure</h3>
<p>The<a id="sthref703"></a> <code dir="ltr">DELETE_IDENTITY</code> procedure removes an identity from an existing factor.</p>
<p class="subhead2"><a id="DVADM70606"></a>Syntax</p>
<pre dir="ltr">
DBMS_MACADM.DELETE_IDENTITY(
  factor_name IN VARCHAR2, 
  value       IN VARCHAR2); 
</pre>
<p class="subhead2"><a id="DVADM70607"></a>Parameters</p>
<div id="DVADM70608" class="tblhruleformal">
<p class="titleintable"><a id="sthref704"></a><a id="sthref705"></a>Table 12-40 DELETE_IDENTITY Parameters</p>
<table class="cellalignment1647" title="DELETE_IDENTITY Parameters" summary="DELETE_IDENTITY" dir="ltr">
<thead>
<tr class="cellalignment1639">
<th class="cellalignment1648" id="r1c1-t45">Parameter</th>
<th class="cellalignment1648" id="r1c2-t45">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r2c1-t45" headers="r1c1-t45">
<p><code dir="ltr">factor_name</code></p>
</td>
<td class="cellalignment1646" headers="r2c1-t45 r1c2-t45">
<p>Factor name.</p>
<p>To find existing factors in the current database instance, query the <code dir="ltr">DVSYS.DBA_DV_FACTOR</code> view, described in <a href="views.htm#BABJHIEG">"DVSYS.DBA_DV_FACTOR View"</a>.</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r3c1-t45" headers="r1c1-t45">
<p><code dir="ltr">value</code></p>
</td>
<td class="cellalignment1646" headers="r3c1-t45 r1c2-t45">
<p>Identity value associated with the factor.</p>
<p>To find the identities for each factor in the current database instance, query the <code dir="ltr">DVSYS.DBA_DV_IDENTITY</code> view, described in <a href="views.htm#BABBHHCB">"DVSYS.DBA_DV_IDENTITY View"</a>.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblhruleformal" -->
<p class="subhead2"><a id="DVADM70609"></a>Example</p>
<pre dir="ltr">
BEGIN
 DBMS_MACADM.DELETE_IDENTITY(
  factor_name =&gt; 'Sector2_ClientID', 
  value       =&gt; 'intranet'); 
END;
/
</pre></div>
<!-- class="sect2" -->
<a id="BCFHJDBJ"></a>
<div id="DVADM70610" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">DELETE_IDENTITY_MAP Procedure</h3>
<p>The<a id="sthref706"></a> <code dir="ltr">DELETE_IDENTITY_MAP</code> procedure removes an identity map for a factor.</p>
<p class="subhead2"><a id="DVADM70611"></a>Syntax</p>
<pre dir="ltr">
DBMS_MACADM.DELETE_IDENTITY_MAP(
  identity_factor_name  IN VARCHAR2, 
  identity_factor_value IN VARCHAR2,
  parent_factor_name    IN VARCHAR2, 
  child_factor_name     IN VARCHAR2, 
  operation             IN VARCHAR2, 
  operand1              IN VARCHAR2, 
  operand2              IN VARCHAR2); 
</pre>
<p class="subhead2"><a id="DVADM70612"></a>Parameters</p>
<div id="DVADM70613" class="tblhruleformal">
<p class="titleintable"><a id="sthref707"></a><a id="sthref708"></a>Table 12-41 DELETE_IDENTITY_MAP Parameters</p>
<table class="cellalignment1647" title="DELETE_IDENTITY_MAP Parameters" summary="DELETE_IDENTITY_MAP" dir="ltr">
<thead>
<tr class="cellalignment1639">
<th class="cellalignment1648" id="r1c1-t46">Parameter</th>
<th class="cellalignment1648" id="r1c2-t46">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r2c1-t46" headers="r1c1-t46">
<p><code dir="ltr">identity_factor_name</code></p>
</td>
<td class="cellalignment1646" headers="r2c1-t46 r1c2-t46">
<p>Factor the identity map is for.</p>
<p>To find existing factors in the current database instance, query the <code dir="ltr">DVSYS.DBA_DV_FACTOR</code> view, described in <a href="views.htm#BABJHIEG">"DVSYS.DBA_DV_FACTOR View"</a>.</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r3c1-t46" headers="r1c1-t46">
<p><code dir="ltr">identity_factor_value</code></p>
</td>
<td class="cellalignment1646" headers="r3c1-t46 r1c2-t46">
<p>Value the factor assumes if the identity map evaluates to <code dir="ltr">TRUE</code>.</p>
<p>To find existing factor identities, query the <code dir="ltr">DVSYS.DBA_DV_IDENTITY</code> view, described in <a href="views.htm#BABBHHCB">"DVSYS.DBA_DV_IDENTITY View"</a>.</p>
<p>To find current factor identity mappings, query <code dir="ltr">DVSYS.DBA_DV_IDENTITY_MAP</code>, described in <a href="views.htm#BABBDBFF">"DVSYS.DBA_DV_IDENTITY_MAP View"</a>.</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r4c1-t46" headers="r1c1-t46">
<p><code dir="ltr">parent_factor_name</code></p>
</td>
<td class="cellalignment1646" headers="r4c1-t46 r1c2-t46">
<p>The parent factor link to which the map is related.</p>
<p>To find existing parent-child factors, query the <code dir="ltr">DVSYS.DBA_DV_FACTOR_link</code> view, described in <a href="views.htm#BABDAFEJ">"DVSYS.DBA_DV_FACTOR_LINK View"</a>.</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r5c1-t46" headers="r1c1-t46">
<p><code dir="ltr">child_factor_name</code></p>
</td>
<td class="cellalignment1646" headers="r5c1-t46 r1c2-t46">
<p>The child factor to which the map is related.</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r6c1-t46" headers="r1c1-t46">
<p><code dir="ltr">operation</code></p>
</td>
<td class="cellalignment1646" headers="r6c1-t46 r1c2-t46">
<p>Relational operator for the identity map (for example, &lt;, &gt;, =, and so on).</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r7c1-t46" headers="r1c1-t46">
<p><code dir="ltr">operand1</code></p>
</td>
<td class="cellalignment1646" headers="r7c1-t46 r1c2-t46">
<p>Left (low value) operand for the relational operator.</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r8c1-t46" headers="r1c1-t46">
<p><code dir="ltr">operand2</code></p>
</td>
<td class="cellalignment1646" headers="r8c1-t46 r1c2-t46">
<p>Right (high value) operand for the relational operator.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblhruleformal" -->
<p class="subhead2"><a id="DVADM70614"></a>Example</p>
<pre dir="ltr">
BEGIN
 DBMS_MACADM.DELETE_IDENTITY_MAP(
  identity_factor_name  =&gt; 'Sector2_ClientID',
  identity_factor_value =&gt; 'intranet', 
  parent_factor_name    =&gt; 'HQ_ClientID', 
  child_factor_name     =&gt; 'Div1_ClientID', 
  operation             =&gt; '&lt;', 
  operand1              =&gt; '192.0.2.10', 
  operand2              =&gt; '192.0.2.15');
END;
/
</pre></div>
<!-- class="sect2" -->
<a id="BCFGCCJG"></a>
<div id="DVADM70615" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">DROP_DOMAIN_IDENTITY Procedure</h3>
<p>The<a id="sthref709"></a> <code dir="ltr">DROP_DOMAIN_IDENTITY</code> procedure removes an Oracle Real Application Clusters database node from a domain.</p>
<p class="subhead2"><a id="DVADM70616"></a>Syntax</p>
<pre dir="ltr">
DBMS_MACADM.DROP_DOMAIN_IDENTITY(
  domain_name  IN VARCHAR2, 
  domain_host  IN VARCHAR2); 
</pre>
<p class="subhead2"><a id="DVADM70617"></a>Parameters</p>
<div id="DVADM70618" class="tblhruleformal">
<p class="titleintable"><a id="sthref710"></a><a id="sthref711"></a>Table 12-42 DROP_DOMAIN_IDENTITY Parameters</p>
<table class="cellalignment1647" title="DROP_DOMAIN_IDENTITY Parameters" summary="DROP_DOMAIN_IDENTITY" dir="ltr">
<thead>
<tr class="cellalignment1639">
<th class="cellalignment1648" id="r1c1-t47">Parameter</th>
<th class="cellalignment1648" id="r1c2-t47">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r2c1-t47" headers="r1c1-t47">
<p><code dir="ltr">domain_name</code></p>
</td>
<td class="cellalignment1646" headers="r2c1-t47 r1c2-t47">
<p>Name of the domain to which the host was added.</p>
<p>To find the domain of a database as specified by the <code dir="ltr">DB_DOMAIN</code> initialization parameter, run the <code dir="ltr">DVF.F$DATABASE_DOMAIN</code> function, described in <a href="plsql_interfaces.htm#CHDJGAIJ">"Oracle Database Vault PL/SQL Factor Functions"</a>.</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r3c1-t47" headers="r1c1-t47">
<p><code dir="ltr">domain_host</code></p>
</td>
<td class="cellalignment1646" headers="r3c1-t47 r1c2-t47">
<p>Oracle Real Application Clusters host name being that was added to the domain.</p>
<p>To find the host name for a specified database, run the <code dir="ltr">DVF.F$DATABASE_HOSTNAME</code> function, described in <a href="plsql_interfaces.htm#CHDJGAIJ">"Oracle Database Vault PL/SQL Factor Functions"</a>.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblhruleformal" -->
<p class="subhead2"><a id="DVADM70619"></a>Example</p>
<pre dir="ltr">
BEGIN
 DBMS_MACADM.DROP_DOMAIN_IDENTITY(
  domain_name  =&gt; 'example', 
  domain_host  =&gt; 'mydom_host'); 
END;
/
</pre></div>
<!-- class="sect2" -->
<a id="BCFGJIJA"></a>
<div id="DVADM70620" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">GET_INSTANCE_INFO Function</h3>
<p>The<a id="sthref712"></a> <code dir="ltr">GET_INSTANCE_INFO</code> function returns information from the <code dir="ltr">SYS.V_$INSTANCE</code> system table about the current database instance. The <code dir="ltr">V$INSTANCE</code> data dictionary view also contains database instance information from this table. See <a class="olink REFRN30105" href="../../server.112/e40402/dynviews_2002.htm#REFRN30105"><span class="italic">Oracle Database Reference</span></a> for more information.</p>
<p class="subhead2"><a id="DVADM70621"></a>Syntax</p>
<pre dir="ltr">
DBMS_MACADM.GET_INSTANCE_INFO(
  p_parameter IN VARCHAR2)
RETURN VARCHAR2; 
</pre>
<p class="subhead2"><a id="DVADM70622"></a>Parameters</p>
<div id="DVADM70623" class="tblhruleformal">
<p class="titleintable"><a id="sthref713"></a><a id="sthref714"></a>Table 12-43 GET_INSTANCE_INFO Parameter</p>
<table class="cellalignment1647" title="GET_INSTANCE_INFO Parameter" summary="GET_INSTANCE_INFO" dir="ltr">
<thead>
<tr class="cellalignment1639">
<th class="cellalignment1648" id="r1c1-t48">Parameter</th>
<th class="cellalignment1648" id="r1c2-t48">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r2c1-t48" headers="r1c1-t48">
<p><code dir="ltr">p_parameter</code></p>
</td>
<td class="cellalignment1646" headers="r2c1-t48 r1c2-t48">
<p>Column name in the <code dir="ltr">SYS.V_$INSTANCE</code> system table</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblhruleformal" -->
<p class="subhead2"><a id="DVADM70624"></a>Example</p>
<pre dir="ltr">
DECLARE
 instance_var varchar2 := null;
BEGIN 
 instance_var = DBMS_MACADM.GET_INSTANCE_INFO('INSTANCE_NAME'); 
END;
/
</pre></div>
<!-- class="sect2" -->
<a id="BCFBDAGB"></a>
<div id="DVADM70625" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">GET_SESSION_INFO Function</h3>
<p>The<a id="sthref715"></a> <code dir="ltr">GET_SESSION_INFO</code> function returns information from the <code dir="ltr">SYS.V_$SESSION</code> system table for the current session. The <code dir="ltr">V$SESSION</code> data dictionary view also contains session information from this table. See <a class="olink REFRN30223" href="../../server.112/e40402/dynviews_3016.htm#REFRN30223"><span class="italic">Oracle Database Reference</span></a> for more information.</p>
<p class="subhead2"><a id="DVADM70626"></a>Syntax</p>
<pre dir="ltr">
DBMS_MACADM.GET_SESSION_INFO(
  p_parameter IN VARCHAR2)
RETURN VARCHAR2;
</pre>
<p class="subhead2"><a id="DVADM70627"></a>Parameters</p>
<div id="DVADM70628" class="tblhruleformal">
<p class="titleintable"><a id="sthref716"></a><a id="sthref717"></a>Table 12-44 GET_SESSION_INFO Parameter</p>
<table class="cellalignment1647" title="GET_SESSION_INFO Parameter" summary="GET_SESSION_INFO" dir="ltr">
<thead>
<tr class="cellalignment1639">
<th class="cellalignment1648" id="r1c1-t49">Parameter</th>
<th class="cellalignment1648" id="r1c2-t49">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r2c1-t49" headers="r1c1-t49">
<p><code dir="ltr">p_parameter</code></p>
</td>
<td class="cellalignment1646" headers="r2c1-t49 r1c2-t49">
<p>Column name in the <code dir="ltr">SYS.V_$SESSION</code> system table.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblhruleformal" -->
<p class="subhead2"><a id="DVADM70629"></a>Example</p>
<pre dir="ltr">
DECLARE
 session_var varchar2 := null;
BEGIN 
 session_var = DBMS_MACADM.GET_SESSION_INFO('PROCESS'); 
END;
/
</pre></div>
<!-- class="sect2" -->
<a id="BCFEIDFE"></a>
<div id="DVADM70630" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">RENAME_FACTOR Procedure</h3>
<p>The<a id="sthref718"></a> <code dir="ltr">RENAME_FACTOR</code> procedure renames a factor. The name change takes effect everywhere the factor is used.</p>
<p class="subhead2"><a id="DVADM70631"></a>Syntax</p>
<pre dir="ltr">
DBMS_MACADM.RENAME_FACTOR(
  factor_name     IN VARCHAR2, 
  new_factor_name IN VARCHAR2);
</pre>
<p class="subhead2"><a id="DVADM70632"></a>Parameters</p>
<div id="DVADM70633" class="tblhruleformal">
<p class="titleintable"><a id="sthref719"></a><a id="sthref720"></a>Table 12-45 RENAME_FACTOR Parameters</p>
<table class="cellalignment1647" title="RENAME_FACTOR Parameters" summary="RENAME_FACTOR" dir="ltr">
<thead>
<tr class="cellalignment1639">
<th class="cellalignment1648" id="r1c1-t50">Parameter</th>
<th class="cellalignment1648" id="r1c2-t50">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r2c1-t50" headers="r1c1-t50">
<p><code dir="ltr">factor_name</code></p>
</td>
<td class="cellalignment1646" headers="r2c1-t50 r1c2-t50">
<p>Current factor name.</p>
<p>To find existing factors in the current database instance, query the <code dir="ltr">DVSYS.DBA_DV_FACTOR</code> view, described in <a href="views.htm#BABJHIEG">"DVSYS.DBA_DV_FACTOR View"</a>.</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r3c1-t50" headers="r1c1-t50">
<p><code dir="ltr">new_factor_name</code></p>
</td>
<td class="cellalignment1646" headers="r3c1-t50 r1c2-t50">
<p>New factor name, up to 28 characters in mixed-case, without spaces.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblhruleformal" -->
<p class="subhead2"><a id="DVADM70634"></a>Example</p>
<pre dir="ltr">
BEGIN
 DBMS_MACADM.RENAME_FACTOR(
  factor_name     =&gt; 'Sector2_ClientID', 
  new_factor_name =&gt; 'Sector2_Clients');
END;
/
</pre></div>
<!-- class="sect2" -->
<a id="BCFDFIIG"></a>
<div id="DVADM70635" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">RENAME_FACTOR_TYPE Procedure</h3>
<p>The <a id="sthref721"></a><code dir="ltr">RENAME_FACTOR</code> procedure renames a factor type. The name change takes effect everywhere the factor type is used.</p>
<p class="subhead2"><a id="DVADM70636"></a>Syntax</p>
<pre dir="ltr">
DBMS_MACADM.RENAME_FACTOR_TYPE(
  old_name  IN VARCHAR2, 
  new_name  IN VARCHAR2); 
</pre>
<p class="subhead2"><a id="DVADM70637"></a>Parameters</p>
<div id="DVADM70638" class="tblhruleformal">
<p class="titleintable"><a id="sthref722"></a><a id="sthref723"></a>Table 12-46 RENAME_FACTOR_TYPE Parameters</p>
<table class="cellalignment1647" title="RENAME_FACTOR_TYPE Parameters" summary="RENAME_FACTOR_TYPE" dir="ltr">
<thead>
<tr class="cellalignment1639">
<th class="cellalignment1648" id="r1c1-t51">Parameter</th>
<th class="cellalignment1648" id="r1c2-t51">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r2c1-t51" headers="r1c1-t51">
<p><code dir="ltr">old_name</code></p>
</td>
<td class="cellalignment1646" headers="r2c1-t51 r1c2-t51">
<p>Current factor type name.</p>
<p>To find existing factor types in the current database instance, query the <code dir="ltr">DVSYS.DBA_DV_FACTOR_TYPE</code> view, described in <a href="views.htm#BABEJCIJ">"DVSYS.DBA_DV_FACTOR_TYPE View"</a>.</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r3c1-t51" headers="r1c1-t51">
<p><code dir="ltr">new_name</code></p>
</td>
<td class="cellalignment1646" headers="r3c1-t51 r1c2-t51">
<p>New factor type name, up to 30 characters in mixed-case, without spaces.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblhruleformal" -->
<p class="subhead2"><a id="DVADM70639"></a>Example</p>
<pre dir="ltr">
BEGIN
 DBMS_MACADM.RENAME_FACTOR_TYPE(
  old_name  =&gt; 'Sector2Instance', 
  new_name  =&gt; 'Sector2DBInstance'); 
END;
/
</pre></div>
<!-- class="sect2" -->
<a id="BCFJAIAI"></a>
<div id="DVADM70640" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">UPDATE_FACTOR Procedure</h3>
<p>The<a id="sthref724"></a> <code dir="ltr">UPDATE_FACTOR</code> procedure updates the description of a factor type.</p>
<p class="subhead2"><a id="DVADM70641"></a>Syntax</p>
<pre dir="ltr">
DBMS_MACADM.UPDATE_FACTOR(
  factor_name       IN VARCHAR2, 
  factor_type_name  IN VARCHAR2, 
  description       IN VARCHAR2, 
  rule_set_name     IN VARCHAR2, 
  get_expr          IN VARCHAR2, 
  validate_expr     IN VARCHAR2, 
  identify_by       IN NUMBER, 
  labeled_by        IN NUMBER, 
  eval_options      IN NUMBER, 
  audit_options     IN NUMBER, 
  fail_options      IN NUMBER); 
</pre>
<p class="subhead2"><a id="DVADM70642"></a>Parameters</p>
<div id="DVADM70643" class="tblhruleformal">
<p class="titleintable"><a id="sthref725"></a><a id="sthref726"></a>Table 12-47 UPDATE_FACTOR</p>
<table class="cellalignment1647" title="UPDATE_FACTOR" summary="UPDATE_FACTOR" dir="ltr">
<thead>
<tr class="cellalignment1639">
<th class="cellalignment1648" id="r1c1-t52">Parameter</th>
<th class="cellalignment1648" id="r1c2-t52">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r2c1-t52" headers="r1c1-t52">
<p><code dir="ltr">factor_name</code></p>
</td>
<td class="cellalignment1646" headers="r2c1-t52 r1c2-t52">
<p>Factor name.</p>
<p>To find existing factors in the current database instance, query the <code dir="ltr">DVSYS.DBA_DV_FACTOR</code> view, described in <a href="views.htm#BABJHIEG">"DVSYS.DBA_DV_FACTOR View"</a>.</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r3c1-t52" headers="r1c1-t52">
<p><code dir="ltr">factor_type_name</code></p>
</td>
<td class="cellalignment1646" headers="r3c1-t52 r1c2-t52">
<p>Factor type name.</p>
<p>To find existing factor types, query the <code dir="ltr">DVSYS.DBA_DV_FACTOR_TYPE</code> view, described in <a href="views.htm#BABEJCIJ">"DVSYS.DBA_DV_FACTOR_TYPE View"</a>.</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r4c1-t52" headers="r1c1-t52">
<p><code dir="ltr">description</code></p>
</td>
<td class="cellalignment1646" headers="r4c1-t52 r1c2-t52">
<p>Description of the purpose of the factor, up to 1024 characters in mixed-case.</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r5c1-t52" headers="r1c1-t52">
<p><code dir="ltr">rule_set_name</code></p>
</td>
<td class="cellalignment1646" headers="r5c1-t52 r1c2-t52">
<p>Name of the rule set used to control when and how a factor identity is set.</p>
<p>To find existing rule sets, query the <code dir="ltr">DVSYS.DBA_DV_RULE_SET</code> view, described in <a href="views.htm#BABIDJIF">"DVSYS.DBA_DV_RULE_SET View"</a>.</p>
<p>See also <a href="cfgfact.htm#BABGAJIG">"Assignment Rule Set"</a> for more information about assigning rule sets to factors.</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r6c1-t52" headers="r1c1-t52">
<p><code dir="ltr">get_expr</code></p>
</td>
<td class="cellalignment1646" headers="r6c1-t52 r1c2-t52">
<p>Valid PL/SQL expression that retrieves the identity of a factor. It can use up to 255 characters in mixed-case. See <a href="cfgfact.htm#BABGIIAB">"Retrieval Method"</a> for more information. See also the <code dir="ltr">audit_options</code> parameter.</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r7c1-t52" headers="r1c1-t52">
<p><code dir="ltr">validate_expr</code></p>
</td>
<td class="cellalignment1646" headers="r7c1-t52 r1c2-t52">
<p>Name of the procedure to validate factor. This is a valid PL/SQL expression that returns a Boolean value (<code dir="ltr">TRUE</code> or <code dir="ltr">FALSE</code>) to validate the identity of the factor. See <a href="cfgfact.htm#BABJJEFA">"Validation Method"</a> for more information.</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r8c1-t52" headers="r1c1-t52">
<p><code dir="ltr">identify_by</code></p>
</td>
<td class="cellalignment1646" headers="r8c1-t52 r1c2-t52">
<p>Options for determining the identity of a factor, based on the expression set for the <code dir="ltr">get_expr</code> parameter:</p>
<ul>
<li>
<p><code dir="ltr">DBMS_MACUTL.G_IDENTIFY_BY_CONSTANT</code>: By constant</p>
</li>
<li>
<p><code dir="ltr">DBMS_MACUTL.G_IDENTIFY_BY_METHOD</code>: By method</p>
</li>
<li>
<p><code dir="ltr">DBMS_MACUTL.G_IDENTIFY_BY_FACTOR</code>: By factor</p>
</li>
<li>
<p><code dir="ltr">DBMS_MACUTL.G_IDENTIFY_BY_CONTEXT</code>: By context</p>
</li>
</ul>
<p>See <a href="cfgfact.htm#BABHHGBC">"Factor Identification"</a> for more information.</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r9c1-t52" headers="r1c1-t52">
<p><code dir="ltr">labeled_by</code></p>
</td>
<td class="cellalignment1646" headers="r9c1-t52 r1c2-t52">
<p>Options for labeling the factor:</p>
<ul>
<li>
<p><code dir="ltr">DBMS_MACUTL.G_LABELED_BY_SELF</code>: Labels the identities for the factor directly from the labels associated with an Oracle Label Security policy</p>
</li>
<li>
<p><code dir="ltr">DBMS_MACUTL.G_LABELED_BY_FACTORS</code>: Derives the factor identity label from the labels of its child factor identities.</p>
</li>
</ul>
<p>The default for <code dir="ltr">labeled_by</code> is the previously set value, which you can find by querying the <code dir="ltr">DVSYS.DBA_DV_FACTOR</code> data dictionary view.</p>
<p>See <a href="cfgfact.htm#CIHHFBGG">"Factor Labeling"</a> for more information.</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r10c1-t52" headers="r1c1-t52">
<p><code dir="ltr">eval_options</code></p>
</td>
<td class="cellalignment1646" headers="r10c1-t52 r1c2-t52">
<p>Options for evaluating the factor when the user logs on:</p>
<ul>
<li>
<p><code dir="ltr">DBMS_MACUTL.G_EVAL_ON_SESSION</code>: When the database session is created</p>
</li>
<li>
<p><code dir="ltr">DBMS_MACUTL.G_EVAL_ON_ACCESS</code>: Each time the factor is accessed</p>
</li>
<li>
<p><code dir="ltr">DBMS_MACUTL.G_EVAL_ON_STARTUP</code>: On start-up</p>
</li>
</ul>
<p>The default for <code dir="ltr">eval_options</code> is the previously set value, which you can find by querying the <code dir="ltr">DVSYS.DBA_DV_FACTOR</code> data dictionary view.</p>
<p>See <a href="cfgfact.htm#BABIEIBD">"Evaluation"</a> for more information.</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r11c1-t52" headers="r1c1-t52">
<p><code dir="ltr">audit_options</code></p>
</td>
<td class="cellalignment1646" headers="r11c1-t52 r1c2-t52">
<p>Options for auditing the factor if you want to generate a custom Oracle Database Vault audit record.</p>
<ul>
<li>
<p><code dir="ltr">DBMS_MACUTL.G_AUDIT_OFF</code>: Disables auditing.</p>
</li>
<li>
<p><code dir="ltr">DBMS_MACUTL.G_AUDIT_ALWAYS</code>: Always audits.</p>
</li>
<li>
<p><code dir="ltr">DBMS_MACUTL.G_AUDIT_ON_GET_ERROR</code>: Audits if <code dir="ltr">get_expr</code> returns an error.</p>
</li>
<li>
<p><code dir="ltr">DBMS_MACUTL.G_AUDIT_ON_GET_NULL</code>: Audits if <code dir="ltr">get_expr</code> is null.</p>
</li>
<li>
<p><code dir="ltr">DBMS_MACUTL.G_AUDIT_ON_VALIDATE_ERROR</code>: Audits if the validation procedure returns an error.</p>
</li>
<li>
<p><code dir="ltr">DBMS_MACUTL.G_AUDIT_ON_VALIDATE_FALSE</code>: Audits if the validation procedure is false.</p>
</li>
<li>
<p><code dir="ltr">DBMS_MACUTL.G_AUDIT_ON_TRUST_LEVEL_NULL</code>: Audits if there is no trust level set.</p>
</li>
<li>
<p><code dir="ltr">DBMS_MACUTL.G_AUDIT_ON_TRUST_LEVEL_NEG</code>: Audits if the trust level is negative.</p>
</li>
</ul>
<p>The default for <code dir="ltr">audit_options</code> is the previously set value, which you can find by querying the <code dir="ltr">DVSYS.DBA_DV_FACTOR</code> data dictionary view.</p>
<p>See <a href="cfgfact.htm#BABEDJHB">"Audit Options"</a> for more information.</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r12c1-t52" headers="r1c1-t52">
<p><code dir="ltr">fail_options</code></p>
</td>
<td class="cellalignment1646" headers="r12c1-t52 r1c2-t52">
<p>Options for reporting factor errors:</p>
<ul>
<li>
<p><code dir="ltr">DBMS_MACUTL.G_FAIL_WITH_MESSAGE</code>: Shows an error message.</p>
</li>
<li>
<p><code dir="ltr">DBMS_MACUTL.G_FAIL_SILENTLY</code>: Does not show an error message.</p>
</li>
</ul>
<p>The default for <code dir="ltr">fail_options</code> is the previously set value, which you can find by querying the <code dir="ltr">DVSYS.DBA_DV_FACTOR</code> data dictionary view.</p>
<p>See <a href="cfgfact.htm#BABEBHID">"Error Options"</a> for more information.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblhruleformal" -->
<p class="subhead2"><a id="DVADM70644"></a>Example</p>
<pre dir="ltr">
BEGIN
 DBMS_MACADM.UPDATE_FACTOR(
  factor_name       =&gt; 'Sector2_DB', 
  factor_type_name  =&gt; 'Instance', 
  description       =&gt; ' ', 
  rule_set_name     =&gt; 'Limit_DBA_Access', 
  get_expr          =&gt; 'UPPER(SYS_CONTEXT(''USERENV'',''DB_NAME''))', 
  validate_expr     =&gt; 'dbavowner.check_db_access', 
  identify_by       =&gt; DBMS_MACUTL.G_IDENTIFY_BY_METHOD, 
  labeled_by        =&gt; DBMS_MACUTL.G_LABELED_BY_SELF, 
  eval_options      =&gt; DBMS_MACUTL.G_EVAL_ON_ACCESS, 
  audit_options     =&gt; DBMS_MACUTL.G_AUDIT_ALWAYS, 
  fail_options      =&gt; DBMS_MACUTL.G_FAIL_WITH_MESSAGE); 
END;
/
</pre></div>
<!-- class="sect2" -->
<a id="BCFJCIGE"></a>
<div id="DVADM70645" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">UPDATE_FACTOR_TYPE Procedure</h3>
<p>The<a id="sthref727"></a> <code dir="ltr">UPDATE_FACTOR_TYPE</code> procedure updates a factor type.</p>
<p class="subhead2"><a id="DVADM70646"></a>Syntax</p>
<pre dir="ltr">
DBMS_MACADM.UPDATE_FACTOR_TYPE(
  name         IN VARCHAR2, 
  description  IN VARCHAR2);
</pre>
<p class="subhead2"><a id="DVADM70647"></a>Parameters</p>
<div id="DVADM70648" class="tblhruleformal">
<p class="titleintable"><a id="sthref728"></a><a id="sthref729"></a>Table 12-48 UPDATE_FACTOR_TYPE Parameters</p>
<table class="cellalignment1647" title="UPDATE_FACTOR_TYPE Parameters" summary="UPDATE_FACTOR_TYPE" dir="ltr">
<thead>
<tr class="cellalignment1639">
<th class="cellalignment1648" id="r1c1-t53">Parameter</th>
<th class="cellalignment1648" id="r1c2-t53">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r2c1-t53" headers="r1c1-t53">
<p><code dir="ltr">name</code></p>
</td>
<td class="cellalignment1646" headers="r2c1-t53 r1c2-t53">
<p>Factor type name.</p>
<p>To find existing factor types in the current database instance, query the <code dir="ltr">DVSYS.DBA_DV_FACTOR_TYPE</code> view, described in <a href="views.htm#BABEJCIJ">"DVSYS.DBA_DV_FACTOR_TYPE View"</a>.</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r3c1-t53" headers="r1c1-t53">
<p><code dir="ltr">description</code></p>
</td>
<td class="cellalignment1646" headers="r3c1-t53 r1c2-t53">
<p>Description of the purpose of the factor type, up to 1024 characters in mixed case.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblhruleformal" -->
<p class="subhead2"><a id="DVADM70649"></a>Example</p>
<pre dir="ltr">
BEGIN
 DBMS_MACADM.UPDATE_FACTOR_TYPE(
  name        =&gt; 'Sector2DBInstance', 
  description =&gt; 'Checks DB instances used in Sector 2');
END;
/
</pre></div>
<!-- class="sect2" -->
<a id="BCFJHCAF"></a>
<div id="DVADM70650" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">UPDATE_IDENTITY Procedure</h3>
<p>The<a id="sthref730"></a> <code dir="ltr">UPDATE_IDENTITY</code> procedure updates the trust level of a factor identity.</p>
<p class="subhead2"><a id="DVADM70651"></a>Syntax</p>
<pre dir="ltr">
DBMS_MACADM.UPDATE_IDENTITY(
  factor_name  IN VARCHAR2, 
  value        IN VARCHAR2, 
  trust_level  IN NUMBER); 
</pre>
<p class="subhead2"><a id="DVADM70652"></a>Parameters</p>
<div id="DVADM70653" class="tblhruleformal">
<p class="titleintable"><a id="sthref731"></a><a id="sthref732"></a>Table 12-49 UPDATE_IDENTITY Parameters</p>
<table class="cellalignment1647" title="UPDATE_IDENTITY Parameters" summary="UPDATE_IDENTITY" dir="ltr">
<thead>
<tr class="cellalignment1639">
<th class="cellalignment1648" id="r1c1-t54">Parameter</th>
<th class="cellalignment1648" id="r1c2-t54">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r2c1-t54" headers="r1c1-t54">
<p><code dir="ltr">factor_name</code></p>
</td>
<td class="cellalignment1646" headers="r2c1-t54 r1c2-t54">
<p>Factor name.</p>
<p>To find existing factors in the current database instance, query the <code dir="ltr">DBSYS.DBA_DV_FACTOR</code> view, described in <a href="views.htm#BABJHIEG">"DVSYS.DBA_DV_FACTOR View"</a>.</p>
<p>To find factors that have identities, query <code dir="ltr">DVSYS.DBA_DV_IDENTITY</code>, described in <a href="views.htm#BABBHHCB">"DVSYS.DBA_DV_IDENTITY View"</a>.</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r3c1-t54" headers="r1c1-t54">
<p><code dir="ltr">value</code></p>
</td>
<td class="cellalignment1646" headers="r3c1-t54 r1c2-t54">
<p>New factor identity, up to 1024 characters in mixed-case. For example, the identity of an IP_Address factor could be the IP address of 192.0.2.12.</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r4c1-t54" headers="r1c1-t54">
<p><code dir="ltr">trust_level</code></p>
</td>
<td class="cellalignment1646" headers="r4c1-t54 r1c2-t54">
<p>Number that indicates the magnitude of trust relative to other identities for the same factor. In general, the higher the trust level number is set, the greater the trust. A trust level of 10 indicates "very trusted." Negative trust levels are not trusted.</p>
<p>See <a href="cfgfact.htm#BABDJFJB">"Creating and Configuring a Factor Identity"</a> for more information about trust levels and label security.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblhruleformal" -->
<p class="subhead2"><a id="DVADM70654"></a>Example</p>
<pre dir="ltr">
BEGIN
 DBMS_MACADM.UPDATE_IDENTITY(
  factor_name  =&gt; 'Sector2_ClientID', 
  value        =&gt; 'intranet', 
  trust_level  =&gt; 10); 
END;
/
</pre></div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="CHDBDJBG"></a>
<div id="DVADM70655" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Secure Application Role Procedures Within DBMS_MACADM</h2>
<p><a href="#CHDDDFJI">Table 12-50</a> lists <a id="sthref733"></a><a id="sthref734"></a>procedures<a id="sthref735"></a><a id="sthref736"></a> within the <code dir="ltr">DBMS_MACADM</code> package that you can use to configure Oracle Database Vault secure application roles.</p>
<p><a href="cfseappr.htm#CHDFIAIE">Chapter 8, "Configuring Secure Application Roles for&nbsp;Oracle Database Vault,"</a> describes secure application roles in detail. See also <a href="apis_dbms_macutl.htm#CIHIDIDC">Chapter 14, "Using the DBMS_MACUTL Package,"</a> for a set of general-purpose utility procedures that you can use with the secure application role procedures.</p>
<div id="DVADM70656" class="tblhruleformalwide">
<p class="titleintable"><a id="sthref737"></a><a id="CHDDDFJI"></a>Table 12-50 DBMS_MACADM Secure Application Role Configuration Procedures</p>
<table class="cellalignment1647" title="DBMS_MACADM Secure Application Role Configuration Procedures" summary="Secure Application Role APIs" dir="ltr">
<thead>
<tr class="cellalignment1639">
<th class="cellalignment1648" id="r1c1-t55">Procedure</th>
<th class="cellalignment1648" id="r1c2-t55">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r2c1-t55" headers="r1c1-t55">
<p><a href="#BCFHEDEE">CREATE_ROLE Procedure</a></p>
</td>
<td class="cellalignment1646" headers="r2c1-t55 r1c2-t55">
<p>Creates an Oracle Database Vault secure application role</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r3c1-t55" headers="r1c1-t55">
<p><a href="#BCFDBIBA">DELETE_ROLE Procedure</a></p>
</td>
<td class="cellalignment1646" headers="r3c1-t55 r1c2-t55">
<p>Deletes an Oracle Database Vault secure application role</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r4c1-t55" headers="r1c1-t55">
<p><a href="#BCFDGBEC">RENAME_ROLE Procedure</a></p>
</td>
<td class="cellalignment1646" headers="r4c1-t55 r1c2-t55">
<p>Renames an Oracle Database Vault secure application role. The name change takes effect everywhere the role is used.</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r5c1-t55" headers="r1c1-t55">
<p><a href="#BCFFBDFA">UPDATE_ROLE Procedure</a></p>
</td>
<td class="cellalignment1646" headers="r5c1-t55 r1c2-t55">
<p>Updates a Oracle Database Vault secure application role</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblhruleformalwide" -->
<a id="BCFHEDEE"></a>
<div id="DVADM70657" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">CREATE_ROLE Procedure</h3>
<p>The<a id="sthref738"></a> <code dir="ltr">CREATE_ROLE</code> procedure creates an Oracle Database Vault secure application role.</p>
<p class="subhead2"><a id="DVADM70658"></a>Syntax</p>
<pre dir="ltr">
DBMS_MACADM.CREATE_ROLE(
  role_name      IN VARCHAR2, 
  enabled        IN VARCHAR2,
  rule_set_name  IN VARCHAR2);
</pre>
<p class="subhead2"><a id="DVADM70659"></a>Parameters</p>
<div id="DVADM70660" class="tblhruleformal">
<p class="titleintable"><a id="sthref739"></a><a id="sthref740"></a>Table 12-51 CREATE_ROLE Parameters</p>
<table class="cellalignment1647" title="CREATE_ROLE Parameters" summary="CREATE_ROLE" dir="ltr">
<thead>
<tr class="cellalignment1639">
<th class="cellalignment1648" id="r1c1-t56">Parameter</th>
<th class="cellalignment1648" id="r1c2-t56">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r2c1-t56" headers="r1c1-t56">
<p><code dir="ltr">role_name</code></p>
</td>
<td class="cellalignment1646" headers="r2c1-t56 r1c2-t56">
<p>Role name, up to 30 characters, with no spaces. Preferably, enter the role name in upper case letters, though you are not required to do so.</p>
<p>To find existing secure application roles in the current database instance, query the <code dir="ltr">DVSYS.DBA_DV_ROLE</code> view, described in <a href="views.htm#BABGFIGC">"DVSYS.DBA_DV_ROLE View"</a>.</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r3c1-t56" headers="r1c1-t56">
<p><code dir="ltr">enabled</code></p>
</td>
<td class="cellalignment1646" headers="r3c1-t56 r1c2-t56">
<p><code dir="ltr">Y</code> (yes) makes the role available for enabling; <code dir="ltr">N</code> (no) prevents the role from being enabled. The default is <code dir="ltr">Y</code>.</p>
<p>You can also use the following <code dir="ltr">DBMS_MACUTL</code> constants:</p>
<ul>
<li>
<p><code dir="ltr">DBMS_MACUTL.G_YES</code></p>
</li>
<li>
<p><code dir="ltr">DBMS_MACUTL.G_NO</code></p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r4c1-t56" headers="r1c1-t56">
<p><code dir="ltr">rule_set_name</code></p>
</td>
<td class="cellalignment1646" headers="r4c1-t56 r1c2-t56">
<p>Name of rule set to determine whether a user can set this secure application role.</p>
<p>To find existing rule sets in the current database instance, query the <code dir="ltr">DVSYS.DBA_DV_RULE_SET</code> view, described in <a href="views.htm#BABIDJIF">"DVSYS.DBA_DV_RULE_SET View"</a>.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblhruleformal" -->
<p class="subhead2"><a id="DVADM70661"></a>Example</p>
<pre dir="ltr">
BEGIN
 DBMS_MACADM.CREATE_ROLE(
  role_name      =&gt; 'Sector2_APP_MGR', 
  enabled        =&gt; DBMS_MACUTL.G_YES,
  rule_set_name  =&gt; 'Check App2 Access');
END;
/
</pre></div>
<!-- class="sect2" -->
<a id="BCFDBIBA"></a>
<div id="DVADM70662" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">DELETE_ROLE Procedure</h3>
<p>The<a id="sthref741"></a> <code dir="ltr">DELETE_ROLE</code> procedure deletes an Oracle Database Vault secure application role.</p>
<p class="subhead2"><a id="DVADM70663"></a>Syntax</p>
<pre dir="ltr">
DBMS_MACADM.DELETE_ROLE(
  role_name IN VARCHAR2); 
</pre>
<p class="subhead2"><a id="DVADM70664"></a>Parameters</p>
<div id="DVADM70665" class="tblhruleformal">
<p class="titleintable"><a id="sthref742"></a><a id="sthref743"></a>Table 12-52 DELETE_ROLE Parameter</p>
<table class="cellalignment1647" title="DELETE_ROLE Parameter" summary="DELETE_ROLE" dir="ltr">
<thead>
<tr class="cellalignment1639">
<th class="cellalignment1648" id="r1c1-t57">Parameter</th>
<th class="cellalignment1648" id="r1c2-t57">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r2c1-t57" headers="r1c1-t57">
<p><code dir="ltr">role_name</code></p>
</td>
<td class="cellalignment1646" headers="r2c1-t57 r1c2-t57">
<p>Role name.</p>
<p>To find existing secure application roles in the current database instance, query the <code dir="ltr">DVSYS.DBA_DV_ROLE</code> view, described in <a href="views.htm#BABGFIGC">"DVSYS.DBA_DV_ROLE View"</a>.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblhruleformal" -->
<p class="subhead2"><a id="DVADM70666"></a>Example</p>
<pre dir="ltr">
EXEC DBMS_MACADM.DELETE_ROLE('SECT2_APP_MGR'); 
</pre></div>
<!-- class="sect2" -->
<a id="BCFDGBEC"></a>
<div id="DVADM70667" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">RENAME_ROLE Procedure</h3>
<p>The<a id="sthref744"></a> <code dir="ltr">RENAME_ROLE</code> procedure renames an Oracle Database Vault secure application role. The name change takes effect everywhere the role is used.</p>
<p class="subhead2"><a id="DVADM70668"></a>Syntax</p>
<pre dir="ltr">
DBMS_MACADM.RENAME_ROLE(
  role_name      IN VARCHAR2, 
  new_role_name  IN VARCHAR2);
</pre>
<p class="subhead2"><a id="DVADM70669"></a>Parameters</p>
<div id="DVADM70670" class="tblhruleformal">
<p class="titleintable"><a id="sthref745"></a><a id="sthref746"></a>Table 12-53 RENAME_ROLE Parameters</p>
<table class="cellalignment1647" title="RENAME_ROLE Parameters" summary="RENAME_ROLE" dir="ltr">
<thead>
<tr class="cellalignment1639">
<th class="cellalignment1648" id="r1c1-t58">Parameter</th>
<th class="cellalignment1648" id="r1c2-t58">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r2c1-t58" headers="r1c1-t58">
<p><code dir="ltr">role_name</code></p>
</td>
<td class="cellalignment1646" headers="r2c1-t58 r1c2-t58">
<p>Current role name. Preferably, enter the role name in upper case letters, though you are not required to do so.</p>
<p>To find existing secure application roles in the current database instance, query the <code dir="ltr">DVSYS.DBA_DV_ROLE</code> view, described in <a href="views.htm#BABGFIGC">"DVSYS.DBA_DV_ROLE View"</a>.</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r3c1-t58" headers="r1c1-t58">
<p><code dir="ltr">new_role_name</code></p>
</td>
<td class="cellalignment1646" headers="r3c1-t58 r1c2-t58">
<p>Role name, up to 30 characters, in uppercase, with no spaces. Ensure that this name follows the standard Oracle naming conventions for role creation described in <a class="olink SQLRF" href="../e41084/toc.htm"><span class="italic">Oracle Database SQL Language Reference</span></a>.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblhruleformal" -->
<p class="subhead2"><a id="DVADM70671"></a>Example</p>
<pre dir="ltr">
BEGIN
 DBMS_MACADM.RENAME_ROLE(
  role_name      =&gt; 'SECT2_APP_MGR', 
  new_role_name  =&gt; 'SECT2_SYSADMIN');
END;
/
</pre></div>
<!-- class="sect2" -->
<a id="BCFFBDFA"></a>
<div id="DVADM70672" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">UPDATE_ROLE Procedure</h3>
<p>The<a id="sthref747"></a> <code dir="ltr">UPDATE_ROLE</code> procedure updates a Oracle Database Vault secure application role.</p>
<p class="subhead2"><a id="DVADM70673"></a>Syntax</p>
<pre dir="ltr">
DBMS_MACADM.UPDATE_ROLE(
  role_name      IN VARCHAR2, 
  enabled        IN VARCHAR2, 
  rule_set_name  IN VARCHAR2);
</pre>
<p class="subhead2"><a id="DVADM70674"></a>Parameters</p>
<div id="DVADM70675" class="tblhruleformal">
<p class="titleintable"><a id="sthref748"></a><a id="sthref749"></a>Table 12-54 UPDATE_ROLE Parameters</p>
<table class="cellalignment1647" title="UPDATE_ROLE Parameters" summary="UPDATE_ROLE" dir="ltr">
<thead>
<tr class="cellalignment1639">
<th class="cellalignment1648" id="r1c1-t59">Parameter</th>
<th class="cellalignment1648" id="r1c2-t59">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r2c1-t59" headers="r1c1-t59">
<p><code dir="ltr">role_name</code></p>
</td>
<td class="cellalignment1646" headers="r2c1-t59 r1c2-t59">
<p>Role name.</p>
<p>To find existing secure application roles in the current database instance, query the <code dir="ltr">DVSYS.DBA_DV_ROLE</code> view, described in <a href="views.htm#BABGFIGC">"DVSYS.DBA_DV_ROLE View"</a>.</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r3c1-t59" headers="r1c1-t59">
<p><code dir="ltr">enabled</code></p>
</td>
<td class="cellalignment1646" headers="r3c1-t59 r1c2-t59">
<p><code dir="ltr">DBMS_MACUTL.G_YES</code> (Yes) makes the role available for enabling; <code dir="ltr">DBMS_MACUTL.G_NO</code> (No) prevents the role from being enabled.</p>
<p>The default for <code dir="ltr">enabled</code> is the previously set value, which you can find by querying the <code dir="ltr">DVSYS.DBA_DV_ROLE</code> data dictionary view.</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r4c1-t59" headers="r1c1-t59">
<p><code dir="ltr">rule_set_name</code></p>
</td>
<td class="cellalignment1646" headers="r4c1-t59 r1c2-t59">
<p>Name of rule set to determine whether a user can set this secure application role.</p>
<p>To find existing rule sets in the current database instance, query the <code dir="ltr">DVSYS.DBA_DV_RULE_SET</code> view, described in <a href="views.htm#BABIDJIF">"DVSYS.DBA_DV_RULE_SET View"</a>.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblhruleformal" -->
<p class="subhead2"><a id="DVADM70676"></a>Example</p>
<pre dir="ltr">
BEGIN
 DBMS_MACADM.UPDATE_ROLE(
  role_name      =&gt; 'SECT2_SYSADMIN', 
  enabled        =&gt; DBMS_MACUTL.G_YES, 
  rule_set_name  =&gt; 'System Access Controls');
END;
/
</pre></div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="CHDIFEDB"></a>
<div id="DVADM70677" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Oracle Label Security Policy Procedures Within DBMS_MACADM</h2>
<p><a href="#CHDIBHII">Table 12-55</a> lists <a id="sthref750"></a><a id="sthref751"></a>procedures<a id="sthref752"></a> within the <code dir="ltr">DBMS_MACADM</code> package that you can use to configure Oracle Label Security policies for Oracle Database Vault.</p>
<p><a href="dv_ols.htm#BEIFHIGI">Chapter 9, "Integrating Oracle Database Vault with Other&nbsp;Oracle Products,"</a> describes Oracle Label Security policies in detail. See also <a href="apis_dbms_macutl.htm#CIHIDIDC">Chapter 14, "Using the DBMS_MACUTL Package,"</a> for a set of general-purpose utility procedures that you can use with the Oracle Label Security policy procedures.</p>
<div id="DVADM70678" class="tblhruleformalwide">
<p class="titleintable"><a id="sthref753"></a><a id="CHDIBHII"></a>Table 12-55 DBMS_MACADM Oracle Label Security Configuration Procedures</p>
<table class="cellalignment1647" title="DBMS_MACADM Oracle Label Security Configuration Procedures" summary="OLS policy APIs" dir="ltr">
<thead>
<tr class="cellalignment1639">
<th class="cellalignment1648" id="r1c1-t60">Procedure</th>
<th class="cellalignment1648" id="r1c2-t60">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r2c1-t60" headers="r1c1-t60">
<p><a href="#BCFHBJCI">CREATE_MAC_POLICY Procedure</a></p>
</td>
<td class="cellalignment1646" headers="r2c1-t60 r1c2-t60">
<p>Specifies the algorithm that is used to merge labels when computing the label for a factor, or the Oracle Label Security Session label</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r3c1-t60" headers="r1c1-t60">
<p><a href="#BCFDDCED">CREATE_POLICY_LABEL Procedure</a></p>
</td>
<td class="cellalignment1646" headers="r3c1-t60 r1c2-t60">
<p>Labels an identity within an Oracle Label Security policy</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r4c1-t60" headers="r1c1-t60">
<p><a href="#BCFBCJGG">DELETE_MAC_POLICY_CASCADE Procedure</a></p>
</td>
<td class="cellalignment1646" headers="r4c1-t60 r1c2-t60">
<p>Deletes all Oracle Database Vault objects related to an Oracle Label Security policy.</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r5c1-t60" headers="r1c1-t60">
<p><a href="#BCFGGBCF">DELETE_POLICY_FACTOR Procedure</a></p>
</td>
<td class="cellalignment1646" headers="r5c1-t60 r1c2-t60">
<p>Removes the factor from contributing to the Oracle Label Security label</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r6c1-t60" headers="r1c1-t60">
<p><a href="#BCFDBAAB">DELETE_POLICY_LABEL Procedure</a></p>
</td>
<td class="cellalignment1646" headers="r6c1-t60 r1c2-t60">
<p>Removes the label from an identity within an Oracle Label Security policy</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r7c1-t60" headers="r1c1-t60">
<p><a href="#BCFEBJJG">UPDATE_MAC_POLICY Procedure</a></p>
</td>
<td class="cellalignment1646" headers="r7c1-t60 r1c2-t60">
<p>Specifies the algorithm that is used to merge labels when computing the label for a factor, or the Oracle Label Security Session label</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblhruleformalwide" -->
<a id="BCFHBJCI"></a>
<div id="DVADM70679" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">CREATE_MAC_POLICY Procedure</h3>
<p>The<a id="sthref754"></a> <code dir="ltr">CREATE_MAC_POLICY</code> procedure specifies the algorithm that is used to merge labels when computing the label for a factor, or the Oracle Label Security Session label.</p>
<p class="subhead2"><a id="DVADM70680"></a>Syntax</p>
<pre dir="ltr">
DBMS_MACADM.CREATE_MAC_POLICY(
  policy_name  IN VARCHAR2,
  algorithm    IN VARCHAR2);
</pre>
<p class="subhead2"><a id="DVADM70681"></a>Parameters</p>
<div id="DVADM70682" class="tblhruleformal">
<p class="titleintable"><a id="sthref755"></a><a id="CACFFHHJ"></a>Table 12-56 CREATE_MAC_POLICY Parameters</p>
<table class="cellalignment1647" title="CREATE_MAC_POLICY Parameters" summary="CREATE_MAC_POLICY" dir="ltr">
<thead>
<tr class="cellalignment1639">
<th class="cellalignment1648" id="r1c1-t61">Parameter</th>
<th class="cellalignment1648" id="r1c2-t61">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r2c1-t61" headers="r1c1-t61">
<p><code dir="ltr">policy_name</code></p>
</td>
<td class="cellalignment1646" headers="r2c1-t61 r1c2-t61">
<p>Name of an existing policy.</p>
<p>To find existing policies in the current database instance, query the <code dir="ltr">DVSYS.DBA_DV_MAC_POLICY</code> view, described in <a href="views.htm#BABIHCJA">"DVSYS.DBA_DV_MAC_POLICY View"</a>.</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r3c1-t61" headers="r1c1-t61">
<p><code dir="ltr">algorithm</code></p>
</td>
<td class="cellalignment1646" headers="r3c1-t61 r1c2-t61">
<p>Merge algorithm for cases when Oracle Label Security has merged two labels. Enter the code listed in <a href="#BCFCADEE">Table 12-57</a> that corresponds to the merge algorithm you want. For example, enter <code dir="ltr">HUU</code> to if you want to select the Maximum Level/Union/Union merge algorithm.</p>
<p>For more information on label-merging algorithms, see <a class="olink OLSAG" href="../../network.112/e10745/toc.htm"><span class="italic">Oracle Label Security Administrator's Guide</span></a>.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblhruleformal" -->
<div id="DVADM70683" class="tblhruleformal">
<p class="titleintable"><a id="sthref756"></a><a id="BCFCADEE"></a>Table 12-57 Oracle Label Security Merge Algorithm Codes</p>
<table class="cellalignment1647" title="Oracle Label Security Merge Algorithm Codes" summary="Merge algorithm codes" dir="ltr">
<thead>
<tr class="cellalignment1639">
<th class="cellalignment1648" id="r1c1-t62">Code</th>
<th class="cellalignment1648" id="r1c2-t62">Value</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r2c1-t62" headers="r1c1-t62">
<p><code dir="ltr">HUU</code></p>
</td>
<td class="cellalignment1646" headers="r2c1-t62 r1c2-t62">
<p>Maximum Level/Union/Union</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r3c1-t62" headers="r1c1-t62">
<p><code dir="ltr">HIU</code></p>
</td>
<td class="cellalignment1646" headers="r3c1-t62 r1c2-t62">
<p>Maximum Level/Intersection/Union</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r4c1-t62" headers="r1c1-t62">
<p><code dir="ltr">HMU</code></p>
</td>
<td class="cellalignment1646" headers="r4c1-t62 r1c2-t62">
<p>Maximum Level/Minus/Union</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r5c1-t62" headers="r1c1-t62">
<p><code dir="ltr">HNU</code></p>
</td>
<td class="cellalignment1646" headers="r5c1-t62 r1c2-t62">
<p>Maximum Level/Null/Union</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r6c1-t62" headers="r1c1-t62">
<p><code dir="ltr">HUI</code></p>
</td>
<td class="cellalignment1646" headers="r6c1-t62 r1c2-t62">
<p>Maximum Level/Union/Intersection</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r7c1-t62" headers="r1c1-t62">
<p><code dir="ltr">HII</code></p>
</td>
<td class="cellalignment1646" headers="r7c1-t62 r1c2-t62">
<p>Maximum Level/Intersection/Intersection</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r8c1-t62" headers="r1c1-t62">
<p><code dir="ltr">HMI</code></p>
</td>
<td class="cellalignment1646" headers="r8c1-t62 r1c2-t62">
<p>Maximum Level/Minus/Intersection</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r9c1-t62" headers="r1c1-t62">
<p><code dir="ltr">HNI</code></p>
</td>
<td class="cellalignment1646" headers="r9c1-t62 r1c2-t62">
<p>Maximum Level/Null/Intersection</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r10c1-t62" headers="r1c1-t62">
<p><code dir="ltr">HUM</code></p>
</td>
<td class="cellalignment1646" headers="r10c1-t62 r1c2-t62">
<p>Maximum Level/Union/Minus</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r11c1-t62" headers="r1c1-t62">
<p><code dir="ltr">HIM</code></p>
</td>
<td class="cellalignment1646" headers="r11c1-t62 r1c2-t62">
<p>Maximum Level/Intersection/Minus</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r12c1-t62" headers="r1c1-t62">
<p><code dir="ltr">HMM</code></p>
</td>
<td class="cellalignment1646" headers="r12c1-t62 r1c2-t62">
<p>Maximum Level/Minus/Minus</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r13c1-t62" headers="r1c1-t62">
<p><code dir="ltr">HNM</code></p>
</td>
<td class="cellalignment1646" headers="r13c1-t62 r1c2-t62">
<p>Maximum Level/Null/Minus</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r14c1-t62" headers="r1c1-t62">
<p><code dir="ltr">HUN</code></p>
</td>
<td class="cellalignment1646" headers="r14c1-t62 r1c2-t62">
<p>Maximum Level/Union/Null</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r15c1-t62" headers="r1c1-t62">
<p><code dir="ltr">HIN</code></p>
</td>
<td class="cellalignment1646" headers="r15c1-t62 r1c2-t62">
<p>Maximum Level/Intersection/Null</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r16c1-t62" headers="r1c1-t62">
<p><code dir="ltr">HMN</code></p>
</td>
<td class="cellalignment1646" headers="r16c1-t62 r1c2-t62">
<p>Maximum Level/Minus/Null</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r17c1-t62" headers="r1c1-t62">
<p><code dir="ltr">HNN</code></p>
</td>
<td class="cellalignment1646" headers="r17c1-t62 r1c2-t62">
<p>Maximum Level/Null/Null</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r18c1-t62" headers="r1c1-t62">
<p><code dir="ltr">LUU</code></p>
</td>
<td class="cellalignment1646" headers="r18c1-t62 r1c2-t62">
<p>Minimum Level/Union/Union</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r19c1-t62" headers="r1c1-t62">
<p><code dir="ltr">LIU</code></p>
</td>
<td class="cellalignment1646" headers="r19c1-t62 r1c2-t62">
<p>Minimum Level/Intersection/Union</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r20c1-t62" headers="r1c1-t62">
<p><code dir="ltr">LMU</code></p>
</td>
<td class="cellalignment1646" headers="r20c1-t62 r1c2-t62">
<p>Minimum Level/Minus/Union</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r21c1-t62" headers="r1c1-t62">
<p><code dir="ltr">LNU</code></p>
</td>
<td class="cellalignment1646" headers="r21c1-t62 r1c2-t62">
<p>Minimum Level/Null/Union</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r22c1-t62" headers="r1c1-t62">
<p><code dir="ltr">LUI</code></p>
</td>
<td class="cellalignment1646" headers="r22c1-t62 r1c2-t62">
<p>Minimum Level/Union/Intersection</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r23c1-t62" headers="r1c1-t62">
<p><code dir="ltr">LII</code></p>
</td>
<td class="cellalignment1646" headers="r23c1-t62 r1c2-t62">
<p>Minimum Level/Intersection/Intersection</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r24c1-t62" headers="r1c1-t62">
<p><code dir="ltr">LMI</code></p>
</td>
<td class="cellalignment1646" headers="r24c1-t62 r1c2-t62">
<p>Minimum Level/Minus/Intersection</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r25c1-t62" headers="r1c1-t62">
<p><code dir="ltr">LNI</code></p>
</td>
<td class="cellalignment1646" headers="r25c1-t62 r1c2-t62">
<p>Minimum Level/Null/Intersection</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r26c1-t62" headers="r1c1-t62">
<p><code dir="ltr">LUM</code></p>
</td>
<td class="cellalignment1646" headers="r26c1-t62 r1c2-t62">
<p>Minimum Level/Union/Minus</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r27c1-t62" headers="r1c1-t62">
<p><code dir="ltr">LIM</code></p>
</td>
<td class="cellalignment1646" headers="r27c1-t62 r1c2-t62">
<p>Minimum Level/Intersection/Minus</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r28c1-t62" headers="r1c1-t62">
<p><code dir="ltr">LMM</code></p>
</td>
<td class="cellalignment1646" headers="r28c1-t62 r1c2-t62">
<p>Minimum Level/Minus/Minus</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r29c1-t62" headers="r1c1-t62">
<p><code dir="ltr">LNM</code></p>
</td>
<td class="cellalignment1646" headers="r29c1-t62 r1c2-t62">
<p>Minimum Level/Null/Minus</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r30c1-t62" headers="r1c1-t62">
<p><code dir="ltr">LUN</code></p>
</td>
<td class="cellalignment1646" headers="r30c1-t62 r1c2-t62">
<p>Minimum Level/Union/Null</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r31c1-t62" headers="r1c1-t62">
<p><code dir="ltr">LIN</code></p>
</td>
<td class="cellalignment1646" headers="r31c1-t62 r1c2-t62">
<p>Minimum Level/Intersection/Null</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r32c1-t62" headers="r1c1-t62">
<p><code dir="ltr">LMN</code></p>
</td>
<td class="cellalignment1646" headers="r32c1-t62 r1c2-t62">
<p>Minimum Level/Minus/Null</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r33c1-t62" headers="r1c1-t62">
<p><code dir="ltr">LNN</code></p>
</td>
<td class="cellalignment1646" headers="r33c1-t62 r1c2-t62">
<p>Minimum Level/Null/Null</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblhruleformal" -->
<p class="subhead2"><a id="DVADM70684"></a>Example</p>
<pre dir="ltr">
BEGIN
 DBMS_MACADM.CREATE_MAC_POLICY(
  policy_name  =&gt; 'Access Locations',
  algorithm    =&gt; 'HUU');
END;
/
</pre></div>
<!-- class="sect2" -->
<a id="BCFDDCED"></a>
<div id="DVADM70685" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">CREATE_POLICY_LABEL Procedure</h3>
<p>The<a id="sthref757"></a> <code dir="ltr">CREATE_POLICY_LABEL</code> procedure labels an identity within an Oracle Label Security policy.</p>
<p class="subhead2"><a id="DVADM70686"></a>Syntax</p>
<pre dir="ltr">
DBMS_MACADM.CREATE_POLICY_LABEL(
  identity_factor_name   IN VARCHAR2, 
  identity_factor_value  IN VARCHAR2, 
  policy_name            IN VARCHAR2, 
  label                  IN VARCHAR2); 
</pre>
<p class="subhead2"><a id="DVADM70687"></a>Parameters</p>
<div id="DVADM70688" class="tblhruleformal">
<p class="titleintable"><a id="sthref758"></a><a id="sthref759"></a>Table 12-58 CREATE_POLICY_LABEL Parameters</p>
<table class="cellalignment1647" title="CREATE_POLICY_LABEL Parameters" summary="CREATE_POLICY_LABEL" dir="ltr">
<thead>
<tr class="cellalignment1639">
<th class="cellalignment1648" id="r1c1-t63">Parameter</th>
<th class="cellalignment1648" id="r1c2-t63">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r2c1-t63" headers="r1c1-t63">
<p><code dir="ltr">identity_factor_name</code></p>
</td>
<td class="cellalignment1646" headers="r2c1-t63 r1c2-t63">
<p>Name of the factor being labeled.</p>
<p>To find existing factors in the current database instance, query the <code dir="ltr">DVSYS.DBA_DV_FACTOR</code> view, described in <a href="views.htm#BABJHIEG">"DVSYS.DBA_DV_FACTOR View"</a>.</p>
<p>To find factors that are associated with Oracle Label Security policies, use <code dir="ltr">DVSYS.DBA_DV_MAC_POLICY_FACTOR</code>, described in <a href="views.htm#BABJCCEB">"DVSYS.DBA_DV_MAC_POLICY_FACTOR View"</a>.</p>
<p>See also <a href="dv_ols.htm#BEICFCJI">"Label Security Policy Factors"</a> for more information.</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r3c1-t63" headers="r1c1-t63">
<p><code dir="ltr">identity_factor_value</code></p>
</td>
<td class="cellalignment1646" headers="r3c1-t63 r1c2-t63">
<p>Value of identity for the factor being labeled.</p>
<p>To find the identities of existing factors in the current database instance, query the <code dir="ltr">DVSYS.DBA_DV_IDENTITY</code> view, described in <a href="views.htm#BABBHHCB">"DVSYS.DBA_DV_IDENTITY View"</a>.</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r4c1-t63" headers="r1c1-t63">
<p><code dir="ltr">policy_name</code></p>
</td>
<td class="cellalignment1646" headers="r4c1-t63 r1c2-t63">
<p>Name of an existing policy.</p>
<p>To find existing policies in the current database instance, query the <code dir="ltr">DVSYS.DBA_DV_MAC_POLICY</code> view, described in <a href="views.htm#BABIHCJA">"DVSYS.DBA_DV_MAC_POLICY View"</a>.</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r5c1-t63" headers="r1c1-t63">
<p><code dir="ltr">label</code></p>
</td>
<td class="cellalignment1646" headers="r5c1-t63 r1c2-t63">
<p>Oracle Label Security label name.</p>
<p>To find existing policy labels for factor identifiers, query the <code dir="ltr">DVSYS.DBA_DV_POLICY_LABEL</code> view, described in <a href="views.htm#BABHCAGA">"DVSYS.DBA_DV_POLICY_LABEL View"</a>.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblhruleformal" -->
<p class="subhead2"><a id="DVADM70689"></a>Example</p>
<pre dir="ltr">
BEGIN
 DBMS_MACADM.CREATE_POLICY_LABEL(
  identity_factor_name   =&gt; 'App_Host_Name', 
  identity_factor_value  =&gt; 'Sect2_Fin_Apps', 
  policy_name            =&gt; 'Access Locations', 
  label                  =&gt; 'Sensitive'); 
END;
/
</pre></div>
<!-- class="sect2" -->
<a id="BCFBCJGG"></a>
<div id="DVADM70690" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">DELETE_MAC_POLICY_CASCADE Procedure</h3>
<p>The<a id="sthref760"></a> <code dir="ltr">DELETE_MAC_POLICY_CASCADE</code> procedure deletes all Oracle Database Vault objects related to an Oracle Label Security policy.</p>
<p class="subhead2"><a id="DVADM70691"></a>Syntax</p>
<pre dir="ltr">
DBMS_MACADM.DELETE_MAC_POLICY_CASCADE(
  policy_name  IN VARCHAR2); 
</pre>
<p class="subhead2"><a id="DVADM70692"></a>Parameters</p>
<div id="DVADM70693" class="tblhruleformal">
<p class="titleintable"><a id="sthref761"></a><a id="sthref762"></a>Table 12-59 DELETE_MAC_POLICY_CASCADE Parameter</p>
<table class="cellalignment1647" title="DELETE_MAC_POLICY_CASCADE Parameter" summary="DELETE_MAC_POLICY_CASCADE" dir="ltr">
<thead>
<tr class="cellalignment1639">
<th class="cellalignment1648" id="r1c1-t64">Parameter</th>
<th class="cellalignment1648" id="r1c2-t64">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r2c1-t64" headers="r1c1-t64">
<p><code dir="ltr">policy_name</code></p>
</td>
<td class="cellalignment1646" headers="r2c1-t64 r1c2-t64">
<p>Name of an existing policy.</p>
<p>To find existing policies in the current database instance, query the <code dir="ltr">DVSYS.DBA_DV_MAC_POLICY</code> view, described in <a href="views.htm#BABIHCJA">"DVSYS.DBA_DV_MAC_POLICY View"</a>.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblhruleformal" -->
<p class="subhead2"><a id="DVADM70694"></a>Example</p>
<pre dir="ltr">
EXEC DBMS_MACADM.DELETE_MAC_POLICY_CASCADE('Access Locations'); 
</pre></div>
<!-- class="sect2" -->
<a id="BCFGGBCF"></a>
<div id="DVADM70695" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">DELETE_POLICY_FACTOR Procedure</h3>
<p>The<a id="sthref763"></a> <code dir="ltr">DELETE_POLICY_FACTOR</code> procedure removes the factor from contributing to the Oracle Label Security label.</p>
<p class="subhead2"><a id="DVADM70696"></a>Syntax</p>
<pre dir="ltr">
DBMS_MACADM.DELETE_POLICY_FACTOR(
  policy_name  IN VARCHAR2, 
  factor_name  IN VARCHAR2); 
</pre>
<p class="subhead2"><a id="DVADM70697"></a>Parameters</p>
<div id="DVADM70698" class="tblhruleformal">
<p class="titleintable"><a id="sthref764"></a><a id="sthref765"></a>Table 12-60 DELETE_POLICY_FACTOR Parameters</p>
<table class="cellalignment1647" title="DELETE_POLICY_FACTOR Parameters" summary="DELETE_POLICY_FACTOR" dir="ltr">
<thead>
<tr class="cellalignment1639">
<th class="cellalignment1648" id="r1c1-t65">Parameter</th>
<th class="cellalignment1648" id="r1c2-t65">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r2c1-t65" headers="r1c1-t65">
<p><code dir="ltr">policy_name</code></p>
</td>
<td class="cellalignment1646" headers="r2c1-t65 r1c2-t65">
<p>Name of an existing policy.</p>
<p>To find existing policies in the current database instance, query the <code dir="ltr">DVSYS.DBA_DV_MAC_POLICY</code> view, described in <a href="views.htm#BABIHCJA">"DVSYS.DBA_DV_MAC_POLICY View"</a>.</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r3c1-t65" headers="r1c1-t65">
<p><code dir="ltr">factor_name</code></p>
</td>
<td class="cellalignment1646" headers="r3c1-t65 r1c2-t65">
<p>Name of factor associated with the Oracle Label Security label.</p>
<p>To find factors that are associated with Oracle Label Security policies, query <code dir="ltr">DVSYS.DBA_DV_MAC_POLICY_FACTOR</code>, described in <a href="views.htm#BABJCCEB">"DVSYS.DBA_DV_MAC_POLICY_FACTOR View"</a>.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblhruleformal" -->
<p class="subhead2"><a id="DVADM70699"></a>Example</p>
<pre dir="ltr">
BEGIN
 DBMS_MACADM.DELETE_POLICY_FACTOR(
  policy_name  =&gt; 'Access Locations', 
  factor_name  =&gt; 'App_Host_Name'); 
END;
/
</pre></div>
<!-- class="sect2" -->
<a id="BCFDBAAB"></a>
<div id="DVADM70700" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">DELETE_POLICY_LABEL Procedure</h3>
<p>The<a id="sthref766"></a> <code dir="ltr">DELETE_POLICY_LABEL</code> procedure removes the label from an identity within an Oracle Label Security policy.</p>
<p class="subhead2"><a id="DVADM70701"></a>Syntax</p>
<pre dir="ltr">
DBMS_MACADM.DELETE_POLICY_LABEL(
  identity_factor_name   IN VARCHAR2, 
  identity_factor_value  IN VARCHAR2, 
  policy_name            IN VARCHAR2, 
  label                  IN VARCHAR2); 
</pre>
<p class="subhead2"><a id="DVADM70702"></a>Parameters</p>
<div id="DVADM70703" class="tblhruleformal">
<p class="titleintable"><a id="sthref767"></a><a id="sthref768"></a>Table 12-61 DELETE_POLICY_LABEL Parameters</p>
<table class="cellalignment1647" title="DELETE_POLICY_LABEL Parameters" summary="DELETE_POLICY_LABEL" dir="ltr">
<thead>
<tr class="cellalignment1639">
<th class="cellalignment1648" id="r1c1-t66">Parameter</th>
<th class="cellalignment1648" id="r1c2-t66">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r2c1-t66" headers="r1c1-t66">
<p><code dir="ltr">identity_factor_name</code></p>
</td>
<td class="cellalignment1646" headers="r2c1-t66 r1c2-t66">
<p>Name of the factor that was labeled.</p>
<p>To find existing factors in the current database instance that are associated with Oracle Label Security policies, query <code dir="ltr">DVSYS.DBA_DV_MAC_POLICY_FACTOR</code>, described in <a href="views.htm#BABJCCEB">"DVSYS.DBA_DV_MAC_POLICY_FACTOR View"</a>.</p>
<p>See also <a href="dv_ols.htm#BEICFCJI">"Label Security Policy Factors"</a> for more information.</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r3c1-t66" headers="r1c1-t66">
<p><code dir="ltr">identity_factor_value</code></p>
</td>
<td class="cellalignment1646" headers="r3c1-t66 r1c2-t66">
<p>Value of identity for the factor that was labeled.</p>
<p>To find the identities of existing factors in the current database instance, query the <code dir="ltr">DVSYS.DBA_DV_IDENTITY</code> view, described in <a href="views.htm#BABBHHCB">"DVSYS.DBA_DV_IDENTITY View"</a>.</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r4c1-t66" headers="r1c1-t66">
<p><code dir="ltr">policy_name</code></p>
</td>
<td class="cellalignment1646" headers="r4c1-t66 r1c2-t66">
<p>Name of an existing policy.</p>
<p>To find existing policies in the current database instance, query the <code dir="ltr">DVSYS.DBA_DV_MAC_POLICY</code> view, described in <a href="views.htm#BABIHCJA">"DVSYS.DBA_DV_MAC_POLICY View"</a>.</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r5c1-t66" headers="r1c1-t66">
<p><code dir="ltr">label</code></p>
</td>
<td class="cellalignment1646" headers="r5c1-t66 r1c2-t66">
<p>Oracle Label Security label name.</p>
<p>To find existing policy labels for factor identifiers, query the <code dir="ltr">DVSYS.DBA_DV_POLICY_LABEL</code> view, described in <a href="views.htm#BABHCAGA">"DVSYS.DBA_DV_POLICY_LABEL View"</a>.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblhruleformal" -->
<p class="subhead2"><a id="DVADM70704"></a>Example</p>
<pre dir="ltr">
BEGIN
 DBMS_MACADM.DELETE_POLICY_LABEL(
  identity_factor_name   =&gt; 'App_Host_Name', 
  identity_factor_value  =&gt; 'Sect2_Fin_Apps', 
  policy_name            =&gt; 'Access Locations', 
  label                  =&gt; 'Sensitive'); 
END;
/
</pre></div>
<!-- class="sect2" -->
<a id="BCFEBJJG"></a>
<div id="DVADM70705" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">UPDATE_MAC_POLICY Procedure</h3>
<p>The<a id="sthref769"></a> <code dir="ltr">UPDATE_MAC_POLICY</code> procedure specifies the algorithm that is used to merge labels when computing the label for a factor, or the Oracle Label Security Session label.</p>
<p class="subhead2"><a id="DVADM70706"></a>Syntax</p>
<pre dir="ltr">
DBMS_MACADM.UPDATE_MAC_POLICY(
  policy_name  IN VARCHAR2, 
  algorithm    IN VARCHAR2); 
</pre>
<p class="subhead2"><a id="DVADM70707"></a>Parameters</p>
<div id="DVADM70708" class="tblhruleformal">
<p class="titleintable"><a id="sthref770"></a><a id="sthref771"></a>Table 12-62 UPDATE_MAC_POLICY</p>
<table class="cellalignment1647" title="UPDATE_MAC_POLICY" summary="UPDATE_MAC_POLICY" dir="ltr">
<thead>
<tr class="cellalignment1639">
<th class="cellalignment1648" id="r1c1-t67">Parameter</th>
<th class="cellalignment1648" id="r1c2-t67">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r2c1-t67" headers="r1c1-t67">
<p><code dir="ltr">policy_name</code></p>
</td>
<td class="cellalignment1646" headers="r2c1-t67 r1c2-t67">
<p>Name of an existing policy.</p>
<p>To find existing policies in the current database instance, query the <code dir="ltr">DVSYS.DBA_DV_MAC_POLICY</code> view, described in <a href="views.htm#BABIHCJA">"DVSYS.DBA_DV_MAC_POLICY View"</a>.</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r3c1-t67" headers="r1c1-t67">
<p><code dir="ltr">algorithm</code></p>
</td>
<td class="cellalignment1646" headers="r3c1-t67 r1c2-t67">
<p>Merge algorithm for cases when Oracle Label Security has merged two labels. See <a href="#BCFCADEE">Table 12-57</a> for listing of the available algorithms.</p>
<p>For more information on label-merging algorithms, see <a class="olink OLSAG" href="../../network.112/e10745/toc.htm"><span class="italic">Oracle Label Security Administrator's Guide</span></a>.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblhruleformal" -->
<p class="subhead2"><a id="DVADM70709"></a>Example</p>
<pre dir="ltr">
BEGIN
 DBMS_MACADM.UPDATE_MAC_POLICY(
  policy_name  =&gt; 'Access Locations',
  algorithm    =&gt; 'LUI');
END;
/
</pre></div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="CACHGIDG"></a>
<div id="DVADM70710" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">General System Maintenance Procedures Within DBMS_MACADM</h2>
<p><a href="#CACCHFJE">Table 12-63</a> lists the procedures within the <code dir="ltr">DBMS_MACADM</code> PL/SQL package that you can use to perform general maintenance activities that require the protection of the <code dir="ltr">DV_OWNER</code> or <code dir="ltr">DV_ADMIN</code> role.</p>
<div id="DVADM70711" class="tblhruleformal">
<p class="titleintable"><a id="sthref772"></a><a id="CACCHFJE"></a>Table 12-63 DBMS_MACADM Disable/Enable Procedures</p>
<table class="cellalignment1647" title="DBMS_MACADM Disable/Enable Procedures" summary="DVSYS.DBMS_MACADM Enable/Disable Configuration Procedures" dir="ltr">
<thead>
<tr class="cellalignment1639">
<th class="cellalignment1648" id="r1c1-t68">Procedure</th>
<th class="cellalignment1648" id="r1c2-t68">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r2c1-t68" headers="r1c1-t68">
<p><a href="#CACBGAEE">ADD_NLS_DATA Procedure</a></p>
</td>
<td class="cellalignment1646" headers="r2c1-t68 r1c2-t68">
<p>Adds a new language to Oracle Database Vault</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r3c1-t68" headers="r1c1-t68">
<p><a href="#CACECEBG">AUTHORIZE_DATAPUMP_USER Procedure</a></p>
</td>
<td class="cellalignment1646" headers="r3c1-t68 r1c2-t68">
<p>Authorizes a user to perform Oracle Data Pump operations when Oracle Database Vault is enabled</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r4c1-t68" headers="r1c1-t68">
<p><a href="#CACFDIFH">AUTHORIZE_SCHEDULER_USER Procedure</a></p>
</td>
<td class="cellalignment1646" headers="r4c1-t68 r1c2-t68">
<p>Authorizes a user to schedule database jobs when Oracle Database Vault is enabled</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r5c1-t68" headers="r1c1-t68">
<p><a href="#CACEEHCF">UNAUTHORIZE_DATAPUMP_USER Procedure</a></p>
</td>
<td class="cellalignment1646" headers="r5c1-t68 r1c2-t68">
<p>Revokes the authorization that was granted by the <code dir="ltr">DBMS_MACADM.AUTHORIZE_DATAPUMP_USER</code> procedure</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r6c1-t68" headers="r1c1-t68">
<p><a href="#CACGIDFG">UNAUTHORIZE_SCHEDULER_USER Procedure</a></p>
</td>
<td class="cellalignment1646" headers="r6c1-t68 r1c2-t68">
<p>Revokes authorization that was granted by the <code dir="ltr">DBMS_MACADM.AUTHORIZE_SCHEDULER_USER</code> procedure</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblhruleformal" -->
<a id="CACBGAEE"></a>
<div id="DVADM71159" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">ADD_NLS_DATA Procedure</h3>
<p>The<a id="sthref773"></a> <code dir="ltr">ADD_NLS_DATA</code> procedure adds a new language to Oracle Database Vault.</p>
<p class="subhead2"><a id="DVADM71160"></a>Syntax</p>
<pre dir="ltr">
DBMS_MACADM.ADD_NLS_DATA(
  language      IN VARCHAR );
</pre>
<p class="subhead2"><a id="DVADM71161"></a>Parameters</p>
<div id="DVADM71162" class="tblhruleformal">
<p class="titleintable"><a id="sthref774"></a><a id="sthref775"></a>Table 12-64 ADD_NLS_DATA</p>
<table class="cellalignment1647" title="ADD_NLS_DATA" summary="AUTHORIZE_DATAPUMP_USER" dir="ltr">
<thead>
<tr class="cellalignment1639">
<th class="cellalignment1648" id="r1c1-t69">Parameter</th>
<th class="cellalignment1648" id="r1c2-t69">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r2c1-t69" headers="r1c1-t69">
<p><code dir="ltr">language</code></p>
</td>
<td class="cellalignment1646" headers="r2c1-t69 r1c2-t69">
<p>Enter one of the following settings. (This parameter is case insensitive.)</p>
<ul>
<li>
<p><code dir="ltr">ENGLISH</code></p>
</li>
<li>
<p><code dir="ltr">GERMAN</code></p>
</li>
<li>
<p><code dir="ltr">SPANISH</code></p>
</li>
<li>
<p><code dir="ltr">FRENCH</code></p>
</li>
<li>
<p><code dir="ltr">ITALIAN</code></p>
</li>
<li>
<p><code dir="ltr">JAPANESE</code></p>
</li>
<li>
<p><code dir="ltr">KOREAN</code></p>
</li>
<li>
<p><code dir="ltr">BRAZILIAN PORTUGUESE</code></p>
</li>
<li>
<p><code dir="ltr">SIMPLIFIED CHINESE</code></p>
</li>
<li>
<p><code dir="ltr">TRADITIONAL CHINESE</code></p>
</li>
</ul>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblhruleformal" -->
<p class="subhead2"><a id="DVADM71163"></a>Examples</p>
<pre dir="ltr">
EXEC DBMS_MACADM.ADD_NLS_DATA('french');
</pre></div>
<!-- class="sect2" -->
<a id="CACECEBG"></a>
<div id="DVADM70712" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">AUTHORIZE_DATAPUMP_USER Procedure</h3>
<p>The<a id="sthref776"></a> <code dir="ltr">AUTHORIZE_DATAPUMP_USER</code> procedure<a id="sthref777"></a> authorizes a user to perform Oracle Data Pump operations when Oracle Database Vault is enabled. It applies to both the <code dir="ltr">expdp</code> and <code dir="ltr">impdp</code> utilities. See <a href="dba.htm#CHDGICDC">"Granting a Database Administrator Authorization to Use Oracle Data Pump"</a> for full usage information, including the levels of additional authorization the user must have to use Oracle Data Pump in an Oracle Database Vault environment.</p>
<p class="subhead2"><a id="DVADM70713"></a>Syntax</p>
<pre dir="ltr">
DBMS_MACADM.AUTHORIZE_DATAPUMP_USER(
  user_name      IN VARCHAR2,
  schema_name    IN VARCHAR2 DEFAULT NULL,
  table_name     IN VARCHAR2 DEFAULT NULL);
</pre>
<p class="subhead2"><a id="DVADM70714"></a>Parameters</p>
<div id="DVADM70715" class="tblhruleformal">
<p class="titleintable"><a id="sthref778"></a><a id="sthref779"></a>Table 12-65 AUTHORIZE_DATAPUMP_USER</p>
<table class="cellalignment1647" title="AUTHORIZE_DATAPUMP_USER" summary="AUTHORIZE_DATAPUMP_USER" dir="ltr">
<thead>
<tr class="cellalignment1639">
<th class="cellalignment1648" id="r1c1-t70">Parameter</th>
<th class="cellalignment1648" id="r1c2-t70">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r2c1-t70" headers="r1c1-t70">
<p><code dir="ltr">user_name</code></p>
</td>
<td class="cellalignment1646" headers="r2c1-t70 r1c2-t70">
<p>Name of the Oracle Data Pump user to whom you want to grant authorization.</p>
<p>To find a list of users who have privileges to use Oracle Data Pump (that is, the <code dir="ltr">EXP_FULL_DATABASE</code> and <code dir="ltr">IMP_FULL_DATABASE</code> roles), query the <code dir="ltr">DBA_ROLE_PRIVS</code> data dictionary view as follows:</p>
<pre dir="ltr">
SELECT GRANTEE, GRANTED_ROLE FROM DBA_ROLE_PRIVS WHERE GRANTED_ROLE LIKE '%FULL%'
</pre></td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r3c1-t70" headers="r1c1-t70">
<p><code dir="ltr">schema_name</code></p>
</td>
<td class="cellalignment1646" headers="r3c1-t70 r1c2-t70">
<p>Name of the database schema that the Oracle Data Pump user must export or import. If you omit this parameter, then the user is granted global authorization to export and import any schema in the database. In this case, ensure the user has been granted the <code dir="ltr">DV_OWNER</code> or <code dir="ltr">DV_ADMIN</code> role.</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r4c1-t70" headers="r1c1-t70">
<p><code dir="ltr">table_name</code></p>
</td>
<td class="cellalignment1646" headers="r4c1-t70 r1c2-t70">
<p>Name of the table within the schema specified by the <code dir="ltr">schema_name</code> parameter. If you omit this parameter, then the user you specified can export and import all tables within the schema specified by the <code dir="ltr">schema_name</code> parameter.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblhruleformal" -->
<p class="subhead2"><a id="DVADM70716"></a>Examples</p>
<pre dir="ltr">
EXEC DBMS_MACADM.AUTHORIZE_DATAPUMP_USER('DP_MGR');

EXEC DBMS_MACADM.AUTHORIZE_DATAPUMP_USER('DP_MGR', 'HR');

EXEC DBMS_MACADM.AUTHORIZE_DATAPUMP_USER('DP_MGR', 'HR', 'EMPLOYEES'); 
</pre></div>
<!-- class="sect2" -->
<a id="CACFDIFH"></a>
<div id="DVADM70717" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">AUTHORIZE_SCHEDULER_USER Procedure</h3>
<p>The<a id="sthref780"></a> <code dir="ltr">AUTHORIZE_SCHEDULER_USER</code> procedure grants a user authorization to schedule database jobs when Oracle Database Vault is enabled. This authorization applies to anyone who has privileges to schedule database jobs. These privileges include any of the following: <code dir="ltr">CREATE JOB</code>, <code dir="ltr">CREATE ANY JOB</code>, <code dir="ltr">CREATE EXTERNAL JOB</code>, <code dir="ltr">EXECUTE ANY PROGRAM</code>, <code dir="ltr">EXECUTE ANY CLASS</code>, <code dir="ltr">MANAGE SCHEDULER</code>. See <a href="dba.htm#CHDICCJG">"Scheduling Database Jobs in an Oracle Database Vault Environment"</a> full usage information, including the levels of authorization the user must have to schedule database jobs in an Oracle Database Vault environment.</p>
<p class="subhead2"><a id="DVADM70718"></a>Syntax</p>
<pre dir="ltr">
DBMS_MACADM.AUTHORIZE_SCHEDULER_USER(
  user_name      IN VARCHAR2,
  schema_name    IN VARCHAR2 DEFAULT NULL);
</pre>
<p class="subhead2"><a id="DVADM70719"></a>Parameters</p>
<div id="DVADM70720" class="tblhruleformal">
<p class="titleintable"><a id="sthref781"></a><a id="sthref782"></a>Table 12-66 AUTHORIZE_SCHEDULER_USER</p>
<table class="cellalignment1647" title="AUTHORIZE_SCHEDULER_USER" summary="AUTHORIZE_SCHEDULER_USER" dir="ltr">
<thead>
<tr class="cellalignment1639">
<th class="cellalignment1648" id="r1c1-t71">Parameter</th>
<th class="cellalignment1648" id="r1c2-t71">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r2c1-t71" headers="r1c1-t71">
<p><code dir="ltr">user_name</code></p>
</td>
<td class="cellalignment1646" headers="r2c1-t71 r1c2-t71">
<p>Name of the user to whom you want to grant authorization.</p>
<p>To find a list of users who have privileges to schedule jobs, query the <code dir="ltr">DBA_SYS_PRIVS</code> data dictionary view for users who have privileges to schedule database jobs. See Step <a href="dba.htm#CHDCIACI">2</a> in <a href="dba.htm#CHDGICDC">"Granting a Database Administrator Authorization to Use Oracle Data Pump"</a>.</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r3c1-t71" headers="r1c1-t71">
<p><code dir="ltr">schema_name</code></p>
</td>
<td class="cellalignment1646" headers="r3c1-t71 r1c2-t71">
<p>Name of the database schema for which a job will be scheduled. If you omit this parameter, then the user is granted global authorization to schedule a job for any schema in the database.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblhruleformal" -->
<p class="subhead2"><a id="DVADM70721"></a>Examples</p>
<p>The following example authorizes the user <code dir="ltr">JOB_MGR</code> to run a job under any schema.</p>
<pre dir="ltr">
EXEC DBMS_MACADM.AUTHORIZE_SCHEDULER_USER('JOB_MGR');
</pre>
<p>This example authorizes user <code dir="ltr">JOB_MGR</code> to run a job under the <code dir="ltr">HR</code> schema only.</p>
<pre dir="ltr">
EXEC DBMS_MACADM.AUTHORIZE_SCHEDULER_USER('JOB_MGR', 'HR');
</pre></div>
<!-- class="sect2" -->
<a id="CACEEHCF"></a>
<div id="DVADM70722" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">UNAUTHORIZE_DATAPUMP_USER Procedure</h3>
<p>The<a id="sthref783"></a> <code dir="ltr">UNAUTHORIZE_DATAPUMP_USER</code> procedure revokes the authorization that was granted by the <code dir="ltr">AUTHORIZE_DATAPUMP_USER</code> procedure. When you run this procedure, ensure that its settings correspond exactly to the equivalent <code dir="ltr">AUTHORIZE_DATAPUMP_USER</code> procedure.</p>
<p>For example, the following two procedures will work because the parameters are consistent:</p>
<pre dir="ltr">
EXEC DBMS_MACADM.AUTHORIZE_DATAPUMP_USER('DP_MGR');

EXEC DBMS_MACADM.UNAUTHORIZE_DATAPUMP_USER('DP_MGR');
</pre>
<p>However, because the parameters in the following procedures are not consistent, the <code dir="ltr">UNAUTHORIZE_DATAPUMP_USER</code> procedure will not work:</p>
<pre dir="ltr">
EXEC DBMS_MACADM.AUTHORIZE_DATAPUMP_USER('JSMITH');

EXEC DBMS_MACADM.UNAUTHORIZE_DATAPUMP_USER('JSMITH', 'HR');
</pre>
<p class="subhead2"><a id="DVADM70723"></a>Syntax</p>
<pre dir="ltr">
DBMS_MACADM.UNAUTHORIZE_DATAPUMP_USER(
  user_name      IN VARCHAR2,
  schema_name    IN VARCHAR2 DEFAULT NULL,
  table_name     IN VARCHAR2 DEFAULT NULL);
</pre>
<p class="subhead2"><a id="DVADM70724"></a>Parameters</p>
<div id="DVADM70725" class="tblhruleformal">
<p class="titleintable"><a id="sthref784"></a><a id="sthref785"></a>Table 12-67 UNAUTHORIZE_DATAPUMP_USER</p>
<table class="cellalignment1647" title="UNAUTHORIZE_DATAPUMP_USER" summary="UNAUTHORIZE_DATAPUMP_USER" dir="ltr">
<thead>
<tr class="cellalignment1639">
<th class="cellalignment1648" id="r1c1-t72">Parameter</th>
<th class="cellalignment1648" id="r1c2-t72">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r2c1-t72" headers="r1c1-t72">
<p><code dir="ltr">user_name</code></p>
</td>
<td class="cellalignment1646" headers="r2c1-t72 r1c2-t72">
<p>Name of the Oracle Data Pump user from whom you want to revoke authorization.</p>
<p>To find a list of users and authorizations from the <code dir="ltr">AUTHORIZE_DATAPUMP_USER</code> procedure, query the <code dir="ltr">DVSYS.DBA_DV_RULE_SET</code> data dictionary view as follows:</p>
<pre dir="ltr">
SELECT RULE_EXPR FROM DVSYS.DBA_DV_RULE_SET WHERE RULE_SET_NAME = 'Allow Oracle Data Pump Operation';
</pre></td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r3c1-t72" headers="r1c1-t72">
<p><code dir="ltr">schema_name</code></p>
</td>
<td class="cellalignment1646" headers="r3c1-t72 r1c2-t72">
<p>Name of the database schema that the Oracle Data Pump user is authorized to export or import.</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r4c1-t72" headers="r1c1-t72">
<p><code dir="ltr">table_name</code></p>
</td>
<td class="cellalignment1646" headers="r4c1-t72 r1c2-t72">
<p>Name of the table within the schema specified by the <code dir="ltr">schema name</code> parameter.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblhruleformal" -->
<p class="subhead2"><a id="DVADM70726"></a>Examples</p>
<pre dir="ltr">
EXEC DBMS_MACADM.UNAUTHORIZE_DATAPUMP_USER('JSMITH');

EXEC DBMS_MACADM.UNAUTHORIZE_DATAPUMP_USER('JSMITH', 'HR');

EXEC DBMS_MACADM.UNAUTHORIZE_DATAPUMP_USER('JSMITH', 'HR', 'SALARY');
</pre></div>
<!-- class="sect2" -->
<a id="CACGIDFG"></a>
<div id="DVADM70727" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">UNAUTHORIZE_SCHEDULER_USER Procedure</h3>
<p>The<a id="sthref786"></a> <code dir="ltr">UNAUTHORIZE_SCHEDULER_USER</code> procedure revokes the authorization that was granted by the <code dir="ltr">AUTHORIZE_SCHEDULER_USER</code> procedure. When you run this procedure, ensure that its settings correspond exactly to the equivalent <code dir="ltr">AUTHORIZE_SCHEDULER_USER</code> procedure.</p>
<p>For example, the following two procedures will work because the parameters are consistent:</p>
<pre dir="ltr">
EXEC DBMS_MACADM.AUTHORIZE_SCHEDULER_USER('JOB_MGR');

EXEC DBMS_MACADM.UNAUTHORIZE_SCHEDULER_USER('JOB_MGR');
</pre>
<p>However, because the parameters in the following procedures are not consistent, the <code dir="ltr">UNAUTHORIZE_SCHEDULER_USER</code> procedure will not work:</p>
<pre dir="ltr">
EXEC DBMS_MACADM.AUTHORIZE_SCHEDULER_USER('JOB_MGR');

EXEC DBMS_MACADM.UNAUTHORIZE_SCHEDULER_USER('JOB_MGR', 'HR');
</pre>
<p class="subhead2"><a id="DVADM70728"></a>Syntax</p>
<pre dir="ltr">
DBMS_MACADM.UNAUTHORIZE_SCHEDULER_USER
  user_name      IN VARCHAR2,
  schema_name    IN VARCHAR2 DEFAULT NULL);
</pre>
<p class="subhead2"><a id="DVADM70729"></a>Parameters</p>
<div id="DVADM70730" class="tblhruleformal">
<p class="titleintable"><a id="sthref787"></a><a id="sthref788"></a>Table 12-68 UNAUTHORIZE_SCHEDULER_USER</p>
<table class="cellalignment1647" title="UNAUTHORIZE_SCHEDULER_USER" summary="UNAUTHORIZE_SCHEDULER_USER" dir="ltr">
<thead>
<tr class="cellalignment1639">
<th class="cellalignment1648" id="r1c1-t73">Parameter</th>
<th class="cellalignment1648" id="r1c2-t73">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r2c1-t73" headers="r1c1-t73">
<p><code dir="ltr">user_name</code></p>
</td>
<td class="cellalignment1646" headers="r2c1-t73 r1c2-t73">
<p>Name of the job scheduling user from whom you want to revoke authorization.</p>
<p>To find a list of users and authorizations from the <code dir="ltr">AUTHORIZE_SCHEDULER_USER</code> procedure, query the <code dir="ltr">DVSYS.DBA_DV_RULE_SET</code> data dictionary view as follows:</p>
<pre dir="ltr">
SELECT RULE_EXPR FROM DVSYS.DBA_DV_RULE_SET WHERE RULE_SET_NAME = 'Allow Scheduler Job';
</pre></td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r3c1-t73" headers="r1c1-t73">
<p><code dir="ltr">schema_name</code></p>
</td>
<td class="cellalignment1646" headers="r3c1-t73 r1c2-t73">
<p>Name of the database schema for which the user is authorized to schedule jobs.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblhruleformal" -->
<p class="subhead2"><a id="DVADM70731"></a>Examples</p>
<pre dir="ltr">
EXEC DBMS_MACADM.UNAUTHORIZE_SCHEDULER_USER('JOB_MGR');

EXEC DBMS_MACADM.UNAUTHORIZE_SCHEDULER_USER('JOB_MGR', 'HR');
</pre></div>
<!-- class="sect2" --></div>
<!-- class="sect1" --></div>
<!-- class="chapter" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment1638">
<tr>
<td class="cellalignment1646">
<table class="cellalignment1643">
<tr>
<td class="cellalignment1642"><a href="db_objects.htm"><img width="24" height="24" src="../../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment1642"><a href="apis_macsec_roles.htm"><img width="24" height="24" src="../../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;2006, 2016,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment1650">
<table class="cellalignment1641">
<tr>
<td class="cellalignment1642"><a href="../../index.htm"><img width="24" height="24" src="../../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment1642"><a href="../../nav/portal_booklist.htm"><img width="24" height="24" src="../../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment1642"><a href="toc.htm"><img width="24" height="24" src="../../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment1642"><a href="index.htm"><img width="24" height="24" src="../../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment1642"><a href="../../nav/mindx.htm"><img width="24" height="24" src="../../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment1642"><a href="../../dcommon/html/feedback.htm"><img width="24" height="24" src="../../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>
</body>
</html>
