<!DOCTYPE html>
<html lang="en" >
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1">
<meta charset="utf-8">
<title>Using the DBMS_MACUTL Package</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Merged Version 1088" />
<meta name="dcterms.created" content="2016-11-14T16:25:11Z" />
<meta name="robots" content="all" />
<meta name="dcterms.title" content="Database Vault Administrator's Guide" />
<meta name="dcterms.identifier" content="E23090-13" />
<meta name="dcterms.isVersionOf" content="DVADM" />
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;2006, 2016,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved." />
<link rel="Start" href="../../index.htm" title="Home" type="text/html" />
<link rel="Copyright" href="../../dcommon/html/cpyr.htm" title="Copyright" type="text/html" />

<script type="application/javascript"  src="../../dcommon/js/headfoot.js"></script>
<script type="application/javascript"  src="../../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html" />
<link rel="Index" href="index.htm" title="Index" type="text/html" />
<link rel="Prev" href="apis_macsec_roles.htm" title="Previous" type="text/html" />
<link rel="Next" href="plsql_interfaces.htm" title="Next" type="text/html" />
<link rel="alternate" href="../e23090.pdf" title="PDF version" type="application/pdf" />
<link rel="schema.dcterms" href="http://purl.org/dc/terms/" />
<link rel="stylesheet" href="../../dcommon/css/fusiondoc.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/header.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/footer.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/fonts.css">
<link rel="stylesheet" href="../../dcommon/css/foundation.css">
<link rel="stylesheet" href="../../dcommon/css/codemirror.css">
<link rel="stylesheet" type="text/css" title="Default" href="../../nav/css/html5.css">
<link rel="stylesheet" href="../../dcommon/css/respond-480-tablet.css">
<link rel="stylesheet" href="../../dcommon/css/respond-768-laptop.css">
<link rel="stylesheet" href="../../dcommon/css/respond-1140-deskop.css">
<script type="application/javascript" src="../../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">21/31</span> <!-- End Header -->
<div id="DVADM020" class="chapter"><a id="CIHIDIDC"></a>
<h1 class="chapter"><span class="secnum">14</span> Using the DBMS_MACUTL Package</h1>
<p>This chapter contains:</p>
<ul>
<li>
<p><a href="#CIHCDDDH">About the DBMS_MACUTL Package</a></p>
</li>
<li>
<p><a href="#BABIHDDJ">DBMS_MACUTL Constants</a></p>
</li>
<li>
<p><a href="#BABFFEHJ">Procedures and Functions Within the DBMS_MACUTL Package</a></p>
</li>
</ul>
<a id="CIHCDDDH"></a>
<div id="DVADM70752" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">About the DBMS_MACUTL Package</h2>
<p><a id="sthref801"></a>The <code dir="ltr">DBMS_MACUTL</code> package<a id="sthref802"></a><a id="sthref803"></a> provides<a id="ABC1541365"></a><a id="ABC1541365SRI1"></a> a <a id="ABC1541369"></a><a id="ABC1541369SRI1"></a>set <a id="ABC1541373"></a><a id="ABC1541373SRI1"></a>of <a id="ABC1541384"></a><a id="ABC1541384SRI1"></a>general purpose utility procedures and functions that you can use throughout the application code you write for Oracle Database Vault. This package is available to all users.</p>
</div>
<!-- class="sect1" -->
<a id="BABIHDDJ"></a>
<div id="DVADM70753" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">DBMS_MACUTL Constants</h2>
<p>This section contains:</p>
<ul>
<li>
<p><a href="#CIHGJJEF">DBMS_MACUTL Listing of Constants</a></p>
</li>
<li>
<p><a href="#CIHDAIAD">Examples of Using the DBMS_MACUTL Constants</a></p>
</li>
</ul>
<a id="CIHGJJEF"></a>
<div id="DVADM70754" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">DBMS_MACUTL Listing of Constants</h3>
<p><a id="sthref804"></a><a href="#BCFGCJFH">Table 14-1</a> summarizes constant (that is, <a id="sthref805"></a>fields) <a id="sthref806"></a>descriptions <a id="sthref807"></a>for <a id="sthref808"></a>the <a id="sthref809"></a><code dir="ltr">DBMS_MACUTL</code> package. You can use these constants with any of the Oracle Database Vault PL/SQL packages. Many of these constants have equivalents in the Oracle Database Vault package. For example, the <code dir="ltr">enabled</code> parameter, which is available in several procedures, can accept either <code dir="ltr">Y</code> (for Yes) or the constant <code dir="ltr">G_YES</code>. Choosing one over the other is a matter of personal preference. They both have the same result.</p>
<div id="DVADM70755" class="tblhruleformal">
<p class="titleintable"><a id="sthref810"></a><a id="BCFGCJFH"></a>Table 14-1 DBMS_MACUTL Listing of Constants</p>
<table class="cellalignment1647" title="DBMS_MACUTL Listing of Constants" summary="Field summary for the DVSYS.DBMS_MACSEC_ROLES API" dir="ltr">
<thead>
<tr class="cellalignment1639">
<th class="cellalignment1648" id="r1c1-t2">Constant Name</th>
<th class="cellalignment1648" id="r1c2-t2">Data Type&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</th>
<th class="cellalignment1648" id="r1c3-t2">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r2c1-t2" headers="r1c1-t2">
<p><code dir="ltr">G_ALL_OBJECT</code></p>
</td>
<td class="cellalignment1646" headers="r2c1-t2 r1c2-t2">
<p><code dir="ltr">VARCHAR2(1)</code></p>
</td>
<td class="cellalignment1646" headers="r2c1-t2 r1c3-t2">
<p>Used with the realm API <code dir="ltr">object_name</code> and <code dir="ltr">object_type</code> parameters as a wildcard to indicate all object names or all object types.</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r3c1-t2" headers="r1c1-t2">
<p><code dir="ltr">G_AUDIT_ALWAYS</code></p>
</td>
<td class="cellalignment1646" headers="r3c1-t2 r1c2-t2">
<p><code dir="ltr">NUMBER</code></p>
</td>
<td class="cellalignment1646" headers="r3c1-t2 r1c3-t2">
<p>Used with the factor API <code dir="ltr">audit_options</code> parameter to enable an audit.</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r4c1-t2" headers="r1c1-t2">
<p><code dir="ltr">G_AUDIT_OFF</code></p>
</td>
<td class="cellalignment1646" headers="r4c1-t2 r1c2-t2">
<p><code dir="ltr">NUMBER</code></p>
</td>
<td class="cellalignment1646" headers="r4c1-t2 r1c3-t2">
<p>Used with the factor API <code dir="ltr">audit_options</code> parameter to disable auditing.<a id="sthref811"></a></p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r5c1-t2" headers="r1c1-t2">
<p><code dir="ltr">G_AUDIT_ON_GET_ERROR</code></p>
</td>
<td class="cellalignment1646" headers="r5c1-t2 r1c2-t2">
<p><code dir="ltr">NUMBER</code></p>
</td>
<td class="cellalignment1646" headers="r5c1-t2 r1c3-t2">
<p>Used with the factor API <code dir="ltr">audit_options</code> parameter to audit if the expression specified in the <code dir="ltr">get_expr</code> parameter returns an error.</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r6c1-t2" headers="r1c1-t2">
<p><code dir="ltr">G_AUDIT_ON_GET_NULL</code></p>
</td>
<td class="cellalignment1646" headers="r6c1-t2 r1c2-t2">
<p><code dir="ltr">NUMBER</code></p>
</td>
<td class="cellalignment1646" headers="r6c1-t2 r1c3-t2">
<p>Used with the factor API <code dir="ltr">audit_options</code> parameter to audit if the expression in the <code dir="ltr">get_expr</code> field is null.</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r7c1-t2" headers="r1c1-t2">
<p><code dir="ltr">G_AUDIT_ON_TRUST_LEVEL_NEG</code></p>
</td>
<td class="cellalignment1646" headers="r7c1-t2 r1c2-t2">
<p><code dir="ltr">NUMBER</code></p>
</td>
<td class="cellalignment1646" headers="r7c1-t2 r1c3-t2">
<p>Used with the factor API <code dir="ltr">audit_options</code> parameter to audit if the trust level is negative.</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r8c1-t2" headers="r1c1-t2">
<p><code dir="ltr">G_AUDIT_ON_TRUST_LEVEL_NULL</code></p>
</td>
<td class="cellalignment1646" headers="r8c1-t2 r1c2-t2">
<p><code dir="ltr">NUMBER</code></p>
</td>
<td class="cellalignment1646" headers="r8c1-t2 r1c3-t2">
<p>Used with the factor API <code dir="ltr">audit_options</code> parameter to audit if no trust level exists.</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r9c1-t2" headers="r1c1-t2">
<p><code dir="ltr">G_AUDIT_ON_VALIDATE_ERROR</code></p>
</td>
<td class="cellalignment1646" headers="r9c1-t2 r1c2-t2">
<p><code dir="ltr">NUMBER</code></p>
</td>
<td class="cellalignment1646" headers="r9c1-t2 r1c3-t2">
<p>Used with the factor API <code dir="ltr">audit_options</code> parameter to audit if the validation function returns an error.</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r10c1-t2" headers="r1c1-t2">
<p><code dir="ltr">G_AUDIT_ON_VALIDATE_FALSE</code></p>
</td>
<td class="cellalignment1646" headers="r10c1-t2 r1c2-t2">
<p><code dir="ltr">NUMBER</code></p>
</td>
<td class="cellalignment1646" headers="r10c1-t2 r1c3-t2">
<p>Used with the factor API <code dir="ltr">audit_options</code> parameter to audit if validation function is false.</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r11c1-t2" headers="r1c1-t2">
<p><code dir="ltr">G_EVAL_ON_ACCESS</code></p>
</td>
<td class="cellalignment1646" headers="r11c1-t2 r1c2-t2">
<p><code dir="ltr">NUMBER</code></p>
</td>
<td class="cellalignment1646" headers="r11c1-t2 r1c3-t2">
<p>Used with the factor API <code dir="ltr">eval_options</code> parameter to reevaluate the factor each time it is accessed.</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r12c1-t2" headers="r1c1-t2">
<p><code dir="ltr">G_EVAL_ON_SESSION</code></p>
</td>
<td class="cellalignment1646" headers="r12c1-t2 r1c2-t2">
<p><code dir="ltr">NUMBER</code></p>
</td>
<td class="cellalignment1646" headers="r12c1-t2 r1c3-t2">
<p>Used with the factor API <code dir="ltr">eval_options</code> parameter to evaluate the factor only once, when the user logs in to the session.<a id="sthref812"></a></p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r13c1-t2" headers="r1c1-t2">
<p><code dir="ltr">G_FAIL_SILENTLY</code></p>
</td>
<td class="cellalignment1646" headers="r13c1-t2 r1c2-t2">
<p><code dir="ltr">NUMBER</code></p>
</td>
<td class="cellalignment1646" headers="r13c1-t2 r1c3-t2">
<p>Used with the <code dir="ltr">fail_options</code> parameter to fail and show no error message.</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r14c1-t2" headers="r1c1-t2">
<p><code dir="ltr">G_FAIL_WITH_MESSAGE</code></p>
</td>
<td class="cellalignment1646" headers="r14c1-t2 r1c2-t2">
<p><code dir="ltr">NUMBER</code></p>
</td>
<td class="cellalignment1646" headers="r14c1-t2 r1c3-t2">
<p>Used with the <code dir="ltr">fail_options</code> parameter to fail and show an error message.</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r15c1-t2" headers="r1c1-t2">
<p><code dir="ltr">G_IDENTIFY_BY_CONSTANT</code></p>
</td>
<td class="cellalignment1646" headers="r15c1-t2 r1c2-t2">
<p><code dir="ltr">NUMBER</code></p>
</td>
<td class="cellalignment1646" headers="r15c1-t2 r1c3-t2">
<p>Used with the factor API <code dir="ltr">identify_by</code> parameter: Fixed value in PL/SQL expression defined in the <code dir="ltr">get_expr</code> parameter.</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r16c1-t2" headers="r1c1-t2">
<p><code dir="ltr">G_IDENTIFY_BY_CONTEXT</code></p>
</td>
<td class="cellalignment1646" headers="r16c1-t2 r1c2-t2">
<p><code dir="ltr">NUMBER</code></p>
</td>
<td class="cellalignment1646" headers="r16c1-t2 r1c3-t2">
<p>Used with the factor API <code dir="ltr">identify_by</code> parameter to indicate context.</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r17c1-t2" headers="r1c1-t2">
<p><code dir="ltr">G_IDENTIFY_BY_FACTOR</code></p>
</td>
<td class="cellalignment1646" headers="r17c1-t2 r1c2-t2">
<p><code dir="ltr">NUMBER</code></p>
</td>
<td class="cellalignment1646" headers="r17c1-t2 r1c3-t2">
<p>Used with the factor API <code dir="ltr">identify_by</code> parameter for subfactors through the <code dir="ltr">factor_link$</code> table.</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r18c1-t2" headers="r1c1-t2">
<p><code dir="ltr">G_IDENTIFY_BY_METHOD</code></p>
</td>
<td class="cellalignment1646" headers="r18c1-t2 r1c2-t2">
<p><code dir="ltr">NUMBER</code></p>
</td>
<td class="cellalignment1646" headers="r18c1-t2 r1c3-t2">
<p>Used with the factor API <code dir="ltr">identify_by</code> parameter: Expression in <code dir="ltr">get_expr</code> field</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r19c1-t2" headers="r1c1-t2">
<p><code dir="ltr">G_IDENTIFY_BY_RULESET</code></p>
</td>
<td class="cellalignment1646" headers="r19c1-t2 r1c2-t2">
<p><code dir="ltr">NUMBER</code></p>
</td>
<td class="cellalignment1646" headers="r19c1-t2 r1c3-t2">
<p>Used with the factor API <code dir="ltr">identify_by</code> parameter: Expression and Rule Set with the <code dir="ltr">factor_expr$</code> table</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r20c1-t2" headers="r1c1-t2">
<p><code dir="ltr">G_LABELED_BY_FACTORS</code></p>
</td>
<td class="cellalignment1646" headers="r20c1-t2 r1c2-t2">
<p><code dir="ltr">NUMBER</code></p>
</td>
<td class="cellalignment1646" headers="r20c1-t2 r1c3-t2">
<p>Used with the factor API <code dir="ltr">labeled_by</code> parameter to derive the label from subfactor and merge algorithm.</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r21c1-t2" headers="r1c1-t2">
<p><code dir="ltr">G_LABELED_BY_SELF</code></p>
</td>
<td class="cellalignment1646" headers="r21c1-t2 r1c2-t2">
<p><code dir="ltr">NUMBER</code></p>
</td>
<td class="cellalignment1646" headers="r21c1-t2 r1c3-t2">
<p>Used with the factor API <code dir="ltr">labeled_by</code> parameter to label the factor identities.</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r22c1-t2" headers="r1c1-t2">
<p><code dir="ltr">G_MAX_SESSION_LABEL</code></p>
</td>
<td class="cellalignment1646" headers="r22c1-t2 r1c2-t2">
<p><code dir="ltr">VARCHAR2(30)</code></p>
</td>
<td class="cellalignment1646" headers="r22c1-t2 r1c3-t2">
<p>This is the highest label a user could set based on the factors. It does not consider the label for a user.</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r23c1-t2" headers="r1c1-t2">
<p><code dir="ltr">G_MIN_POLICY_LABEL</code></p>
</td>
<td class="cellalignment1646" headers="r23c1-t2 r1c2-t2">
<p><code dir="ltr">VARCHAR2(30)</code></p>
</td>
<td class="cellalignment1646" headers="r23c1-t2 r1c3-t2">
<p>The label to which a factor with a null label defaults.</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r24c1-t2" headers="r1c1-t2">
<p><code dir="ltr">G_NO</code></p>
</td>
<td class="cellalignment1646" headers="r24c1-t2 r1c2-t2">
<p><code dir="ltr">VARCHAR2(1)</code></p>
</td>
<td class="cellalignment1646" headers="r24c1-t2 r1c3-t2">
<p>Used with the following APIs:</p>
<ul>
<li>
<p>The factor API <code dir="ltr">label_indicator</code> parameter to indicate that a child factor linked to a parent factor does not contribute to the label of the parent factor in an Oracle Label Security integration.</p>
</li>
<li>
<p>Any API that uses the <code dir="ltr">enabled</code> parameter.</p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r25c1-t2" headers="r1c1-t2">
<p><code dir="ltr">G_OLS_SESSION_LABEL</code></p>
</td>
<td class="cellalignment1646" headers="r25c1-t2 r1c2-t2">
<p><code dir="ltr">VARCHAR2(30)</code></p>
</td>
<td class="cellalignment1646" headers="r25c1-t2 r1c3-t2">
<p>The Oracle Label Security session label for a user at the time <code dir="ltr">init_session</code> is run.</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r26c1-t2" headers="r1c1-t2">
<p><code dir="ltr">G_REALM_AUDIT_FAIL</code></p>
</td>
<td class="cellalignment1646" headers="r26c1-t2 r1c2-t2">
<p><code dir="ltr">NUMBER</code></p>
</td>
<td class="cellalignment1646" headers="r26c1-t2 r1c3-t2">
<p>Used with the realm API <code dir="ltr">audit_options</code> parameter to audit when the realm is violated.<a id="sthref813"></a></p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r27c1-t2" headers="r1c1-t2">
<p><code dir="ltr">G_REALM_AUDIT_OFF</code></p>
</td>
<td class="cellalignment1646" headers="r27c1-t2 r1c2-t2">
<p><code dir="ltr">NUMBER</code></p>
</td>
<td class="cellalignment1646" headers="r27c1-t2 r1c3-t2">
<p>Used with the realm API <code dir="ltr">audit_options</code> parameter to disable auditing.</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r28c1-t2" headers="r1c1-t2">
<p><code dir="ltr">G_REALM_AUDIT_SUCCESS</code></p>
</td>
<td class="cellalignment1646" headers="r28c1-t2 r1c2-t2">
<p><code dir="ltr">NUMBER</code></p>
</td>
<td class="cellalignment1646" headers="r28c1-t2 r1c3-t2">
<p>Used with the realm API <code dir="ltr">audit_options parameter</code>: Audit on successful realm access</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r29c1-t2" headers="r1c1-t2">
<p><code dir="ltr">G_REALM_AUTH_OWNER</code></p>
</td>
<td class="cellalignment1646" headers="r29c1-t2 r1c2-t2">
<p><code dir="ltr">NUMBER</code></p>
</td>
<td class="cellalignment1646" headers="r29c1-t2 r1c3-t2">
<p>Used with the realm API <code dir="ltr">auth_options</code> parameter to set the realm authorization to Owner.</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r30c1-t2" headers="r1c1-t2">
<p><code dir="ltr">G_REALM_AUTH_PARTICIPANT</code></p>
</td>
<td class="cellalignment1646" headers="r30c1-t2 r1c2-t2">
<p><code dir="ltr">NUMBER</code></p>
</td>
<td class="cellalignment1646" headers="r30c1-t2 r1c3-t2">
<p>Used with the realm API <code dir="ltr">auth_options</code> parameter to set the realm authorization to Participant.</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r31c1-t2" headers="r1c1-t2">
<p><code dir="ltr">G_RULESET_AUDIT_FAIL</code></p>
</td>
<td class="cellalignment1646" headers="r31c1-t2 r1c2-t2">
<p><code dir="ltr">NUMBER</code></p>
</td>
<td class="cellalignment1646" headers="r31c1-t2 r1c3-t2">
<p>Used with the rule set API <code dir="ltr">audit_options</code> parameter to audit on rule set failure<a id="sthref814"></a>.</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r32c1-t2" headers="r1c1-t2">
<p><code dir="ltr">G_RULESET_AUDIT_OFF</code></p>
</td>
<td class="cellalignment1646" headers="r32c1-t2 r1c2-t2">
<p><code dir="ltr">NUMBER</code></p>
</td>
<td class="cellalignment1646" headers="r32c1-t2 r1c3-t2">
<p>Used with the rule set API <code dir="ltr">audit_options</code> parameter to disable auditing.</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r33c1-t2" headers="r1c1-t2">
<p><code dir="ltr">G_RULESET_AUDIT_SUCCESS</code></p>
</td>
<td class="cellalignment1646" headers="r33c1-t2 r1c2-t2">
<p><code dir="ltr">NUMBER</code></p>
</td>
<td class="cellalignment1646" headers="r33c1-t2 r1c3-t2">
<p>Used with the rule set API <code dir="ltr">audit_options</code> parameter to audit on rule set success.</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r34c1-t2" headers="r1c1-t2">
<p><code dir="ltr">G_RULESET_EVAL_ALL</code></p>
</td>
<td class="cellalignment1646" headers="r34c1-t2 r1c2-t2">
<p><code dir="ltr">NUMBER</code></p>
</td>
<td class="cellalignment1646" headers="r34c1-t2 r1c3-t2">
<p>Used with the rule set API <code dir="ltr">eval_options</code> parameter to enable the rule set to succeed if all rules evaluate to true.</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r35c1-t2" headers="r1c1-t2">
<p><code dir="ltr">G_RULESET_EVAL_ANY</code></p>
</td>
<td class="cellalignment1646" headers="r35c1-t2 r1c2-t2">
<p><code dir="ltr">NUMBER</code></p>
</td>
<td class="cellalignment1646" headers="r35c1-t2 r1c3-t2">
<p>Used with the rule set API <code dir="ltr">eval_options</code> parameter to succeed if any of the rules evaluate to true.</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r36c1-t2" headers="r1c1-t2">
<p><code dir="ltr">G_RULESET_FAIL_SHOW</code></p>
</td>
<td class="cellalignment1646" headers="r36c1-t2 r1c2-t2">
<p><code dir="ltr">NUMBER</code></p>
</td>
<td class="cellalignment1646" headers="r36c1-t2 r1c3-t2">
<p>Used with the rule set API <code dir="ltr">fail_options</code> parameter to show an error message if the rule set fails.</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r37c1-t2" headers="r1c1-t2">
<p><code dir="ltr">G_RULESET_FAIL_SILENT</code></p>
</td>
<td class="cellalignment1646" headers="r37c1-t2 r1c2-t2">
<p><code dir="ltr">NUMBER</code></p>
</td>
<td class="cellalignment1646" headers="r37c1-t2 r1c3-t2">
<p>Used with the rule set API <code dir="ltr">fail_options</code> parameter to not show an error message if the rule set fails.</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r38c1-t2" headers="r1c1-t2">
<p><code dir="ltr">G_RULESET_HANDLER_FAIL</code></p>
</td>
<td class="cellalignment1646" headers="r38c1-t2 r1c2-t2">
<p><code dir="ltr">NUMBER</code></p>
</td>
<td class="cellalignment1646" headers="r38c1-t2 r1c3-t2">
<p>Used with the rule set API <code dir="ltr">handler_options</code> parameter to call a handler (specified by the <code dir="ltr">handler</code> parameter) if the rule set fails.</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r39c1-t2" headers="r1c1-t2">
<p><code dir="ltr">G_RULESET_HANDLER_OFF</code></p>
</td>
<td class="cellalignment1646" headers="r39c1-t2 r1c2-t2">
<p><code dir="ltr">NUMBER</code></p>
</td>
<td class="cellalignment1646" headers="r39c1-t2 r1c3-t2">
<p>Used with the rule set API <code dir="ltr">handler_options</code> parameter to disable calls to a handler or if no handler is used.</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r40c1-t2" headers="r1c1-t2">
<p><code dir="ltr">G_RULESET_HANDLER_SUCCESS</code></p>
</td>
<td class="cellalignment1646" headers="r40c1-t2 r1c2-t2">
<p><code dir="ltr">NUMBER</code></p>
</td>
<td class="cellalignment1646" headers="r40c1-t2 r1c3-t2">
<p>Used with the rule set API <code dir="ltr">handler_options</code> parameter to call a handler if the rule set succeeds.</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r41c1-t2" headers="r1c1-t2">
<p><code dir="ltr">G_USER_POLICY_LABEL</code></p>
</td>
<td class="cellalignment1646" headers="r41c1-t2 r1c2-t2">
<p><code dir="ltr">VARCHAR2(30)</code></p>
</td>
<td class="cellalignment1646" headers="r41c1-t2 r1c3-t2">
<p>This is what Oracle Label Security has decided the user's label should be set to after factoring in the preceding values.</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r42c1-t2" headers="r1c1-t2">
<p><code dir="ltr">G_YES</code></p>
</td>
<td class="cellalignment1646" headers="r42c1-t2 r1c2-t2">
<p><code dir="ltr">VARCHAR2(1)</code></p>
</td>
<td class="cellalignment1646" headers="r42c1-t2 r1c3-t2">
<p>Used with the following APIs:</p>
<ul>
<li>
<p>The factor API <code dir="ltr">label_indicator</code> parameter to indicate that a child factor linked to a parent factor contributes to the label of the parent factor in an Oracle Label Security integration.</p>
</li>
<li>
<p>Any API that uses the <code dir="ltr">enabled</code> parameter.</p>
</li>
</ul>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblhruleformal" --></div>
<!-- class="sect2" -->
<a id="CIHDAIAD"></a>
<div id="DVADM70756" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Examples of Using the DBMS_MACUTL Constants</h3>
<p><a href="#CIHJBBHD">Example 14-1</a> <a id="sthref815"></a>shows <a id="sthref816"></a>how to <a id="sthref817"></a>use the <code dir="ltr">G_YES</code> and <code dir="ltr">G_REALM_AUDIT_FAIL</code> <code dir="ltr">DBMS_MACUTL</code> constants when creating a realm.</p>
<div id="DVADM70757" class="example">
<p class="titleinexample"><a id="CIHJBBHD"></a>Example 14-1 Creating a Realm Using DBMS_MACUTL Constants</p>
<pre dir="ltr">
BEGIN
 DBMS_MACADM.CREATE_REALM(
  realm_name    =&gt; 'Performance Statistics Realm',
  description   =&gt; 'Realm to measure performance',
  enabled       =&gt;  DBMS_MACUTL.G_YES,
  audit_options =&gt;  DBMS_MACUTL.G_REALM_AUDIT_FAIL);
END;
/
</pre></div>
<!-- class="example" -->
<p><a href="#CIHCFIDJ">Example 14-2</a> <a id="sthref818"></a>shows how to use several <code dir="ltr">DBMS_MACUTL</code> constants when creating a rule set.</p>
<div id="DVADM70758" class="example">
<p class="titleinexample"><a id="CIHCFIDJ"></a>Example 14-2 Creating a Rule Set Using DBMS_MACUTL Constants</p>
<pre dir="ltr">
BEGIN
 DBMS_MACADM.CREATE_RULE_SET(
  rule_set_name    =&gt; 'Limit_DBA_Access', 
  description      =&gt; 'DBA access through predefined processes', 
  enabled          =&gt; 'Y',
  eval_options     =&gt; DBMS_MACUTL.G_RULESET_EVAL_ALL,
  audit_options    =&gt; DBMS_MACUTL.G_RULESET_AUDIT_FAIL,
  fail_options     =&gt; DBMS_MACUTL.G_RULESET_FAIL_SHOW,
  fail_message     =&gt; 'Rule Set Limit_DBA_Access has failed.',
  fail_code        =&gt; 20000,
  handler_options  =&gt; DBMS_MACUTL.G_RULESET_HANDLER_FAIL, 
  handler          =&gt; 'dbavowner.email_alert');
END;
/
</pre></div>
<!-- class="example" -->
<p><a href="#CIHCCFFC">Example 14-3</a> <a id="sthref819"></a>shows how to use constants when creating a factor.</p>
<div id="DVADM70759" class="example">
<p class="titleinexample"><a id="CIHCCFFC"></a>Example 14-3 Creating a Factor Using DBMS_MACUTL Constants</p>
<pre dir="ltr">
BEGIN
 DBMS_MACADM.CREATE_FACTOR(
  factor_name       =&gt; 'Sector2_DB', 
  factor_type_name  =&gt; 'Instance', 
  description       =&gt; ' ', 
  rule_set_name     =&gt; 'DB_access', 
  get_expr          =&gt; 'UPPER(SYS_CONTEXT(''USERENV'',''DB_NAME''))', 
  validate_expr     =&gt; 'dbavowner.check_db_access', 
  identify_by       =&gt; DBMS_MACUTL.G_IDENTIFY_BY_FACTOR, 
  labeled_by        =&gt; DBMS_MACUTL.G_LABELED_BY_SELF, 
  eval_options      =&gt; DBMS_MACUTL.G_EVAL_ON_SESSION, 
  audit_options     =&gt; DBMS_MACUTL.G_AUDIT_ALWAYS, 
  fail_options      =&gt; DBMS_MACUTL.G_FAIL_SILENTLY); 
END;
/
</pre></div>
<!-- class="example" --></div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="BABFFEHJ"></a>
<div id="DVADM70760" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Procedures and Functions Within the DBMS_MACUTL Package</h2>
<p><a href="#CHDEEAFC">Table 14-2</a> lists <a id="sthref820"></a>the procedures and functions in the <code dir="ltr">DBMS_MACUTL</code> package.<a id="sthref821"></a> You can use these procedures or functions as standalone code, or within rule expressions. The examples in this section show a mixture of using both.</p>
<div id="DVADM70761" class="tblhruleformalwide">
<p class="titleintable"><a id="sthref822"></a><a id="CHDEEAFC"></a>Table 14-2 DBMS_MACUTL Utility Functions</p>
<table class="cellalignment1647" title="DBMS_MACUTL Utility Functions" summary="DVSYS.DBMS_MACUTL API functions" dir="ltr">
<thead>
<tr class="cellalignment1639">
<th class="cellalignment1648" id="r1c1-t3">Procedure or Function</th>
<th class="cellalignment1648" id="r1c2-t3">Descriptions</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r2c1-t3" headers="r1c1-t3">
<p><a href="#BCFEDDCC">CHECK_DVSYS_DML_ALLOWED Procedure</a></p>
</td>
<td class="cellalignment1646" headers="r2c1-t3 r1c2-t3">
<p>Verifies that public-packages are not being bypassed by users updating the Oracle <a id="sthref823"></a>Database Vault configuration</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r3c1-t3" headers="r1c1-t3">
<p><a href="#BCFEJGFC">GET_CODE_VALUE Function</a></p>
</td>
<td class="cellalignment1646" headers="r3c1-t3 r1c2-t3">
<p>Looks up the value for a code within a code group.<a id="sthref824"></a></p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r4c1-t3" headers="r1c1-t3">
<p><a href="#BCFDHIGG">GET_SECOND Function</a></p>
</td>
<td class="cellalignment1646" headers="r4c1-t3 r1c2-t3">
<p>Returns the seconds in Oracle SS format (00-59). Useful for rule expressions based on time data</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r5c1-t3" headers="r1c1-t3">
<p><a href="#BCFGHJGH">GET_MINUTE Function</a></p>
</td>
<td class="cellalignment1646" headers="r5c1-t3 r1c2-t3">
<p>Returns the minute in Oracle MI format (00&ndash;59). Useful for rule expressions based on time data</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r6c1-t3" headers="r1c1-t3">
<p><a href="#BCFHBBEC">GET_HOUR Function</a></p>
</td>
<td class="cellalignment1646" headers="r6c1-t3 r1c2-t3">
<p>Returns the month in Oracle HH24 format (00&ndash;23). Useful for rule expressions based on time data</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r7c1-t3" headers="r1c1-t3">
<p><a href="#BCFHACEB">GET_DAY Function</a></p>
</td>
<td class="cellalignment1646" headers="r7c1-t3 r1c2-t3">
<p>Returns the day in Oracle DD format (01&ndash;31). Useful for rule expressions based<a id="sthref825"></a> on time data</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r8c1-t3" headers="r1c1-t3">
<p><a href="#BCFCFDGJ">GET_MONTH Function</a></p>
</td>
<td class="cellalignment1646" headers="r8c1-t3 r1c2-t3">
<p>Returns the month in Oracle MM format (01&ndash;12). Useful for rule expressions based on time data</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r9c1-t3" headers="r1c1-t3">
<p><a href="#BCFEJEDB">GET_YEAR Function</a></p>
</td>
<td class="cellalignment1646" headers="r9c1-t3 r1c2-t3">
<p>Returns the year in Oracle YYYY format (0001&ndash;9999). Useful for rule expressions based on time data</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r10c1-t3" headers="r1c1-t3">
<p><a href="#BCFDDCBD">IS_ALPHA Function</a></p>
</td>
<td class="cellalignment1646" headers="r10c1-t3 r1c2-t3">
<p>Checks whether the character is alphabetic</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r11c1-t3" headers="r1c1-t3">
<p><a href="#BCFGFDJC">IS_DIGIT Function</a></p>
</td>
<td class="cellalignment1646" headers="r11c1-t3 r1c2-t3">
<p>Checks whether the character is numeric</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r12c1-t3" headers="r1c1-t3">
<p><a href="#BCFJAEBJ">IS_DVSYS_OWNER Function</a></p>
</td>
<td class="cellalignment1646" headers="r12c1-t3 r1c2-t3">
<p>Determines whether a user is authorized to manage the Oracle Database Vault configuration</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r13c1-t3" headers="r1c1-t3">
<p><a href="#BCFBGFJG">IS_OLS_INSTALLED Function</a></p>
</td>
<td class="cellalignment1646" headers="r13c1-t3 r1c2-t3">
<p>Returns an indicator regarding whether Oracle Label Security is installed<a id="sthref826"></a></p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r14c1-t3" headers="r1c1-t3">
<p><a href="#BCFGJACH">IS_OLS_INSTALLED_VARCHAR Function</a></p>
</td>
<td class="cellalignment1646" headers="r14c1-t3 r1c2-t3">
<p>Returns an indicator regarding whether Oracle Label Security is installed</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r15c1-t3" headers="r1c1-t3">
<p><a href="#BCFIAACJ">USER_HAS_ROLE Function</a></p>
</td>
<td class="cellalignment1646" headers="r15c1-t3 r1c2-t3">
<p>Checks whether a user has a role privilege, directly or indirectly (through another role)</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r16c1-t3" headers="r1c1-t3">
<p><a href="#BCFGGGEI">USER_HAS_ROLE_VARCHAR Function</a></p>
</td>
<td class="cellalignment1646" headers="r16c1-t3 r1c2-t3">
<p>Checks whether a user <a id="sthref827"></a>has a role privilege, directly or indirectly (through another role)<a id="sthref828"></a></p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r17c1-t3" headers="r1c1-t3">
<p><a href="#BCFGGHEJ">USER_HAS_SYSTEM_PRIVILEGE Function</a></p>
</td>
<td class="cellalignment1646" headers="r17c1-t3 r1c2-t3">
<p>Checks whether a user has a <a id="sthref829"></a>system <a id="sthref830"></a>privilege, directly or <a id="sthref831"></a><a id="sthref832"></a>indirectly<a id="sthref833"></a><a id="sthref834"></a> (through<a id="sthref835"></a><a id="sthref836"></a> a role<a id="sthref837"></a><a id="sthref838"></a>)</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblhruleformalwide" -->
<a id="BCFEDDCC"></a>
<div id="DVADM70762" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">CHECK_DVSYS_DML_ALLOWED Procedure</h3>
<p>The<a id="sthref839"></a> <code dir="ltr">CHECK_DVSYS_DML_ALLOWED</code> procedure verifies that public packages are not being bypassed by users updating the Oracle Database Vault configuration.</p>
<p class="subhead2"><a id="DVADM70763"></a>Syntax</p>
<pre dir="ltr">
DBMS_MACUTL.CHECK_DVSYS_DML_ALLOWED(
  p_user IN VARCHAR2 DEFAULT USER); 
</pre>
<p class="subhead2"><a id="DVADM70764"></a>Parameter</p>
<div id="DVADM70765" class="tblhruleformal">
<p class="titleintable"><a id="sthref840"></a><a id="sthref841"></a>Table 14-3 CHECK_DVSYS_DML_ALLOWED Parameter</p>
<table class="cellalignment1647" title="CHECK_DVSYS_DML_ALLOWED Parameter" summary="CHECK_DVSYS_DML_ALLOWED" dir="ltr">
<thead>
<tr class="cellalignment1639">
<th class="cellalignment1648" id="r1c1-t4">Parameter</th>
<th class="cellalignment1648" id="r1c2-t4">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r2c1-t4" headers="r1c1-t4">
<p><code dir="ltr">p_user</code></p>
</td>
<td class="cellalignment1646" headers="r2c1-t4 r1c2-t4">
<p>User performing the operation.</p>
<p>To find existing users in the current database instance, query the following views:</p>
<ul>
<li>
<p><code dir="ltr">DBA_USERS</code>: Finds available users for the current database instance. See <a class="olink REFRN" href="../e40402/toc.htm"><span class="italic">Oracle Database Reference</span></a>.</p>
</li>
<li>
<p><code dir="ltr">DVSYS.DBA_DV_REALM_AUTH</code>: Finds the authorization of a particular user or role. See <a href="views.htm#BABDFECH">"DVSYS.DBA_DV_REALM_AUTH View"</a>.</p>
</li>
<li>
<p><code dir="ltr">DVSYS.DBA_DV_ROLE</code>: Finds existing secure application roles used in privilege management. See <a href="views.htm#BABGFIGC">"DVSYS.DBA_DV_ROLE View"</a>.</p>
</li>
</ul>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblhruleformal" -->
<p class="subhead2"><a id="DVADM70766"></a>Example</p>
<p>User <code dir="ltr">SYSTEM</code> fails the check:</p>
<pre dir="ltr">
EXEC DBMS_MACUTL.CHECK_DVSYS_DML_ALLOWED('system'); 

ERROR at line 1:
<a id="sthref842"></a>ORA-47920: Authorization failed for user system to perform this operation
<a id="sthref843"></a>ORA-06512: at "DBMS_MACUTL", line 23
ORA-06512: at "DBMS_MACUTL", line 372
ORA-06512: at "DBMS_MACUTL", line 508
ORA-06512: at "DBMS_MACUTL", line 572
ORA-06512: at line 1
</pre>
<p>User <code dir="ltr">lbrown_dvowner</code>, who has the <code dir="ltr">DV_OWNER</code> role, passes the check:</p>
<pre dir="ltr">
EXEC DBMS_MACUTL.CHECK_DVSYS_DML_ALLOWED('lbrown_dvowner');

PL/SQL procedure successfully completed.
</pre></div>
<!-- class="sect2" -->
<a id="BCFEJGFC"></a>
<div id="DVADM70767" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">GET_CODE_VALUE Function</h3>
<p>The <code dir="ltr">GET_CODE_VALUE</code> function <a id="sthref844"></a>finds the value for a code within a code group, and then returns a <code dir="ltr">VARCHAR2</code> value.</p>
<p class="subhead2"><a id="DVADM70768"></a>Syntax</p>
<pre dir="ltr">
DBMS_MACUTL.GET_CODE_VALUE(
  p_code_group IN VARCHAR2, 
  p_code       IN VARCHAR2)
RETURN VARCHAR2; 
</pre>
<p class="subhead2"><a id="DVADM70769"></a>Parameters</p>
<div id="DVADM70770" class="tblhruleformal">
<p class="titleintable"><a id="sthref845"></a><a id="sthref846"></a>Table 14-4 GET_CODE_VALUE Parameters</p>
<table class="cellalignment1647" title="GET_CODE_VALUE Parameters" summary="GET_CODE_VALUE" dir="ltr">
<thead>
<tr class="cellalignment1639">
<th class="cellalignment1648" id="r1c1-t5">Parameter</th>
<th class="cellalignment1648" id="r1c2-t5">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r2c1-t5" headers="r1c1-t5">
<p><code dir="ltr">p_code_group</code></p>
</td>
<td class="cellalignment1646" headers="r2c1-t5 r1c2-t5">
<p>Code group (for example, <code dir="ltr">AUDIT_EVENTS</code> or <code dir="ltr">BOOLEAN</code>).</p>
<p>To find available code groups in the current database instance, query the <code dir="ltr">DVSYS.DBA_DV_CODE</code> view, described in <a href="views.htm#BABFCEGE">"DVSYS.DBA_DV_CODE View"</a>.</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r3c1-t5" headers="r1c1-t5">
<p><code dir="ltr">p_code</code></p>
</td>
<td class="cellalignment1646" headers="r3c1-t5 r1c2-t5">
<p>ID of the code.</p>
<p>This ID is listed when you run the <code dir="ltr">DVSYS.DBA_DV_CODE</code> view.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblhruleformal" -->
<p class="subhead2"><a id="DVADM70771"></a>Example</p>
<pre dir="ltr">
BEGIN 
 DBMS_MACADM.CREATE_RULE(
  rule_name =&gt; 'Get Label Algorithm for Maximum Level/Union/Null',
  rule_expr =&gt; 'DBMS_MACUTL.GET_CODE_VALUE(''LABEL_ALG'', ''HUN'') = ''Union''');
END;
/
</pre></div>
<!-- class="sect2" -->
<a id="BCFDHIGG"></a>
<div id="DVADM70772" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">GET_SECOND Function</h3>
<p>The <code dir="ltr">GET_SECOND</code> <a id="sthref847"></a>function returns the seconds in Oracle SS (seconds) format (00&ndash;59), and then returns a <code dir="ltr">NUMBER</code> value. It is useful for rule expressions based on time data.</p>
<p class="subhead2"><a id="DVADM70773"></a>Syntax</p>
<pre dir="ltr">
DBMS_MACUTL.GET_SECOND(
  p_date IN DATE DEFAULT SYSDATE)
RETURN NUMBER;
</pre>
<p class="subhead2"><a id="DVADM70774"></a>Parameter</p>
<div id="DVADM70775" class="tblhruleformal">
<p class="titleintable"><a id="sthref848"></a><a id="sthref849"></a>Table 14-5 GET_SECOND Parameter</p>
<table class="cellalignment1647" title="GET_SECOND Parameter" summary="GET_SECOND" dir="ltr">
<thead>
<tr class="cellalignment1639">
<th class="cellalignment1648" id="r1c1-t6">Parameter</th>
<th class="cellalignment1648" id="r1c2-t6">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r2c1-t6" headers="r1c1-t6">
<p><code dir="ltr">p_date</code></p>
</td>
<td class="cellalignment1646" headers="r2c1-t6 r1c2-t6">
<p>Date in SS format (for example, <code dir="ltr">59</code>).</p>
<p>If you do not specify a date, then Oracle Database Vault uses the Oracle Database <code dir="ltr">SYSDATE</code> function to retrieve the current date and time set for the operating system on which the database resides.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblhruleformal" -->
<p class="subhead2"><a id="DVADM70776"></a>Example</p>
<pre dir="ltr">
SET SERVEROUTPUT ON
DECLARE 
  seconds number; 
BEGIN 
  seconds := DBMS_MACUTL.GET_SECOND(TO_DATE('03-APR-2009 6:56 PM', 
  'dd-mon-yyyy hh:mi PM')); 
  DBMS_OUTPUT.PUT_LINE('Seconds: '||seconds); 
END; 
/ 
</pre>
<p>This example, which uses a fixed date and time, returns the following:</p>
<pre dir="ltr">
Seconds: 56
</pre></div>
<!-- class="sect2" -->
<a id="BCFGHJGH"></a>
<div id="DVADM70777" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">GET_MINUTE Function</h3>
<p>The <code dir="ltr">GET_MINUTE</code> function <a id="sthref850"></a>returns the minute in Oracle MI (minute) format (00&ndash;59), in a <code dir="ltr">NUMBER</code> value. It is useful for rule expressions based on time data.</p>
<p class="subhead2"><a id="DVADM70778"></a>Syntax</p>
<pre dir="ltr">
DBMS_MACUTL.GET_MINUTE(
  p_date IN DATE DEFAULT SYSDATE)
RETURN NUMBER;
</pre>
<p class="subhead2"><a id="DVADM70779"></a>Parameter</p>
<div id="DVADM70780" class="tblhruleformal">
<p class="titleintable"><a id="sthref851"></a><a id="sthref852"></a>Table 14-6 GET_MINUTE Parameter</p>
<table class="cellalignment1647" title="GET_MINUTE Parameter" summary="GET_MINUTE" dir="ltr">
<thead>
<tr class="cellalignment1639">
<th class="cellalignment1648" id="r1c1-t7">Parameter</th>
<th class="cellalignment1648" id="r1c2-t7">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r2c1-t7" headers="r1c1-t7">
<p><code dir="ltr">p_date</code></p>
</td>
<td class="cellalignment1646" headers="r2c1-t7 r1c2-t7">
<p>Date in MI format (for example, <code dir="ltr">30</code>, as in 2:30).</p>
<p>If you do not specify a date, then Oracle Database Vault uses the Oracle Database <code dir="ltr">SYSDATE</code> function to retrieve the current date and time set for the operating system on which the database resides.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblhruleformal" -->
<p class="subhead2"><a id="DVADM70781"></a>Example</p>
<pre dir="ltr">
SET SERVEROUTPUT ON
DECLARE 
  minute number; 
BEGIN 
  minute := DBMS_MACUTL.GET_MINUTE(SYSDATE); 
  DBMS_OUTPUT.PUT_LINE('Minute: '||minute); 
END; 
/
</pre>
<p>Output similar to the following appears:</p>
<pre dir="ltr">
Minute: 17
</pre></div>
<!-- class="sect2" -->
<a id="BCFHBBEC"></a>
<div id="DVADM70782" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">GET_HOUR Function</h3>
<p>The<a id="sthref853"></a> <code dir="ltr">GET_HOUR</code> function returns the hour in Oracle HH24 (hour) format (00&ndash;23), in a <code dir="ltr">NUMBER</code> value. It is useful for rule expressions based on time data.</p>
<p class="subhead2"><a id="DVADM70783"></a>Syntax</p>
<pre dir="ltr">
DBMS_MACUTL.GET_HOUR(
  p_date IN DATE DEFAULT SYSDATE)
RETURN NUMBER; 
</pre>
<p class="subhead2"><a id="DVADM70784"></a>Parameter</p>
<div id="DVADM70785" class="tblhruleformal">
<p class="titleintable"><a id="sthref854"></a><a id="sthref855"></a>Table 14-7 GET_HOUR Parameter</p>
<table class="cellalignment1647" title="GET_HOUR Parameter" summary="GET_HOUR" dir="ltr">
<thead>
<tr class="cellalignment1639">
<th class="cellalignment1648" id="r1c1-t8">Parameter</th>
<th class="cellalignment1648" id="r1c2-t8">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r2c1-t8" headers="r1c1-t8">
<p><code dir="ltr">p_date</code></p>
</td>
<td class="cellalignment1646" headers="r2c1-t8 r1c2-t8">
<p>Date in HH24 format (for example, <code dir="ltr">14</code> for 2:00 p.m.)</p>
<p>If you do not specify a date, then Oracle Database Vault uses the Oracle Database <code dir="ltr">SYSDATE</code> function to retrieve the current date and time set for the operating system on which the database resides.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblhruleformal" -->
<p class="subhead2"><a id="DVADM70786"></a>Example</p>
<pre dir="ltr">
SET SERVEROUTPUT ON
DECLARE 
  hours number; 
BEGIN 
  hours := DBMS_MACUTL.GET_HOUR(SYSDATE); 
  DBMS_OUTPUT.PUT_LINE('Hour: '||hours); 
END; 
/
</pre>
<p>Output similar to the following appears:</p>
<pre dir="ltr">
Hour: 12
</pre></div>
<!-- class="sect2" -->
<a id="BCFHACEB"></a>
<div id="DVADM70787" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">GET_DAY Function</h3>
<p>The<a id="sthref856"></a> <code dir="ltr">GET_DAY</code> function returns the day in Oracle DD (day) format (01&ndash;31), in a <code dir="ltr">NUMBER</code> value. It is useful for rule expressions based on time data.</p>
<p class="subhead2"><a id="DVADM70788"></a>Syntax</p>
<pre dir="ltr">
DBMS_MACUTL.GET_DAY(
  p_date IN DATE DEFAULT SYSDATE)
RETURN NUMBER; 
</pre>
<p class="subhead2"><a id="DVADM70789"></a>Parameter</p>
<div id="DVADM70790" class="tblhruleformal">
<p class="titleintable"><a id="sthref857"></a><a id="sthref858"></a>Table 14-8 GET_DAY Parameter</p>
<table class="cellalignment1647" title="GET_DAY Parameter" summary="GET_DAY" dir="ltr">
<thead>
<tr class="cellalignment1639">
<th class="cellalignment1648" id="r1c1-t9">Parameter</th>
<th class="cellalignment1648" id="r1c2-t9">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r2c1-t9" headers="r1c1-t9">
<p><code dir="ltr">p_date</code></p>
</td>
<td class="cellalignment1646" headers="r2c1-t9 r1c2-t9">
<p>Date in DD format (for example, <code dir="ltr">01</code> for the first day of the month).</p>
<p>If you do not specify a date, then Oracle Database Vault uses the Oracle Database <code dir="ltr">SYSDATE</code> function to retrieve the current date and time set for the operating system on which the database resides.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblhruleformal" -->
<p class="subhead2"><a id="DVADM70791"></a>Example</p>
<pre dir="ltr">
SET SERVEROUTPUT ON
DECLARE 
  day number; 
BEGIN 
  day := DBMS_MACUTL.GET_DAY(SYSDATE); 
  DBMS_OUTPUT.PUT_LINE('Day: '||day); 
END; 
/
</pre>
<p>Output similar to the following appears:</p>
<pre dir="ltr">
Day: 3
</pre></div>
<!-- class="sect2" -->
<a id="BCFCFDGJ"></a>
<div id="DVADM70792" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">GET_MONTH Function</h3>
<p>The<a id="sthref859"></a> <code dir="ltr">GET_MONTH</code> function returns the month in Oracle MM (month) format (01&ndash;12), in a <code dir="ltr">NUMBER</code> value. It is useful for rule expressions based on time data.</p>
<p class="subhead2"><a id="DVADM70793"></a>Syntax</p>
<pre dir="ltr">
DBMS_MACUTL.GET_MONTH(
  p_date IN DATE DEFAULT SYSDATE)
RETURN NUMBER;
</pre>
<p class="subhead2"><a id="DVADM70794"></a>Parameter</p>
<div id="DVADM70795" class="tblhruleformal">
<p class="titleintable"><a id="sthref860"></a><a id="sthref861"></a>Table 14-9 GET_MONTH Parameter</p>
<table class="cellalignment1647" title="GET_MONTH Parameter" summary="GET_MONTH" dir="ltr">
<thead>
<tr class="cellalignment1639">
<th class="cellalignment1648" id="r1c1-t10">Parameter</th>
<th class="cellalignment1648" id="r1c2-t10">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r2c1-t10" headers="r1c1-t10">
<p><code dir="ltr">p_date</code></p>
</td>
<td class="cellalignment1646" headers="r2c1-t10 r1c2-t10">
<p>Date in MM format (for example, <code dir="ltr">08</code> for the month of August).</p>
<p>If you do not specify a date, then Oracle Database Vault uses the Oracle Database <code dir="ltr">SYSDATE</code> function to retrieve the current date and time set for the operating system on which the database resides.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblhruleformal" -->
<p class="subhead2"><a id="DVADM70796"></a>Example</p>
<pre dir="ltr">
SET SERVEROUTPUT ON
DECLARE 
  month number; 
BEGIN 
  month := DBMS_MACUTL.GET_MONTH(SYSDATE); 
  DBMS_OUTPUT.PUT_LINE('Month: '||month); 
END; 
/
</pre>
<p>Output similar to the following appears:</p>
<pre dir="ltr">
Month: 4
</pre></div>
<!-- class="sect2" -->
<a id="BCFEJEDB"></a>
<div id="DVADM70797" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">GET_YEAR Function</h3>
<p>The<a id="sthref862"></a> <code dir="ltr">GET_YEAR</code> function returns the year in Oracle YYYY (year) format (0001&ndash;9999), in a <code dir="ltr">NUMBER</code> value. It is useful for rule expressions based on time data.</p>
<p class="subhead2"><a id="DVADM70798"></a>Syntax</p>
<pre dir="ltr">
DBMS_MACUTL.GET_YEAR(
  p_date IN DATE DEFAULT SYSDATE)
RETURN NUMBER;
</pre>
<p class="subhead2"><a id="DVADM70799"></a>Parameter</p>
<div id="DVADM70800" class="tblhruleformal">
<p class="titleintable"><a id="sthref863"></a><a id="sthref864"></a>Table 14-10 GET_YEAR Parameter</p>
<table class="cellalignment1647" title="GET_YEAR Parameter" summary="GET_YEAR" dir="ltr">
<thead>
<tr class="cellalignment1639">
<th class="cellalignment1648" id="r1c1-t11">Parameter</th>
<th class="cellalignment1648" id="r1c2-t11">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r2c1-t11" headers="r1c1-t11">
<p><code dir="ltr">p_date</code></p>
</td>
<td class="cellalignment1646" headers="r2c1-t11 r1c2-t11">
<p>Date in YYYY format (for example, <code dir="ltr">1984</code>).</p>
<p>If you do not specify a date, then Oracle Database Vault uses the <code dir="ltr">SYSDATE</code> function to retrieve the current date and time set for the operating system on which the database resides.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblhruleformal" -->
<p class="subhead2"><a id="DVADM70801"></a>Example</p>
<pre dir="ltr">
SET SERVEROUTPUT ON
DECLARE 
  year number; 
BEGIN 
  year := DBMS_MACUTL.GET_YEAR(SYSDATE); 
  DBMS_OUTPUT.PUT_LINE('Year: '||year); 
END; 
/
</pre></div>
<!-- class="sect2" -->
<a id="BCFDDCBD"></a>
<div id="DVADM70802" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">IS_ALPHA Function</h3>
<p>The <code dir="ltr"><a id="sthref865"></a>IS_ALPHA</code> function checks whether the character is alphabetic, and then returns a <code dir="ltr">BOOLEAN</code> value. <code dir="ltr">IS_ALPHA</code> returns <code dir="ltr">TRUE</code> if the character is alphabetic.</p>
<p class="subhead2"><a id="DVADM70803"></a>Syntax</p>
<pre dir="ltr">
DBMS_MACUTL.IS_ALPHA(
  c IN VARCHAR2)
RETURN BOOLEAN; 
</pre>
<p class="subhead2"><a id="DVADM70804"></a>Parameter</p>
<div id="DVADM70805" class="tblhruleformal">
<p class="titleintable"><a id="sthref866"></a><a id="sthref867"></a>Table 14-11 IS_ALPHA Parameter</p>
<table class="cellalignment1647" title="IS_ALPHA Parameter" summary="IS_ALPHA" dir="ltr">
<thead>
<tr class="cellalignment1639">
<th class="cellalignment1648" id="r1c1-t12">Parameter</th>
<th class="cellalignment1648" id="r1c2-t12">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r2c1-t12" headers="r1c1-t12">
<p><code dir="ltr">c</code></p>
</td>
<td class="cellalignment1646" headers="r2c1-t12 r1c2-t12">
<p>String with one character</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblhruleformal" -->
<p class="subhead2"><a id="DVADM70806"></a>Example</p>
<pre dir="ltr">
SET SERVEROUTPUT ON
BEGIN 
 IF DBMS_MACUTL.IS_ALPHA('z')  
  THEN DBMS_OUTPUT.PUT_LINE('The alphabetic character was found');
 ELSE 
  DBMS_OUTPUT.PUT_LINE('No alphabetic characters today.'); 
 END IF; 
END;
/
</pre></div>
<!-- class="sect2" -->
<a id="BCFGFDJC"></a>
<div id="DVADM70807" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">IS_DIGIT Function</h3>
<p>The<a id="sthref868"></a> <code dir="ltr">IS_DIGIT</code> function checks whether the character is numeric, and then returns a <code dir="ltr">BOOLEAN</code> value. <code dir="ltr">IS_DIGIT</code> returns <code dir="ltr">TRUE</code> if the character is a digit.</p>
<p class="subhead2"><a id="DVADM70808"></a>Syntax</p>
<pre dir="ltr">
DBMS_MACUTL.IS_DIGIT(
  c IN VARCHAR2)
RETURN BOOLEAN;
</pre>
<p class="subhead2"><a id="DVADM70809"></a>Parameter</p>
<div id="DVADM70810" class="tblhruleformal">
<p class="titleintable"><a id="sthref869"></a><a id="sthref870"></a>Table 14-12 IS_DIGIT Parameter</p>
<table class="cellalignment1647" title="IS_DIGIT Parameter" summary="IS_DIGIT" dir="ltr">
<thead>
<tr class="cellalignment1639">
<th class="cellalignment1648" id="r1c1-t13">Parameter</th>
<th class="cellalignment1648" id="r1c2-t13">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r2c1-t13" headers="r1c1-t13">
<p><code dir="ltr">c</code></p>
</td>
<td class="cellalignment1646" headers="r2c1-t13 r1c2-t13">
<p>String with one character</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblhruleformal" -->
<p class="subhead2"><a id="DVADM70811"></a>Example</p>
<pre dir="ltr">
SET SERVEROUTPUT ON
BEGIN 
 IF DBMS_MACUTL.IS_DIGIT('7')  
  THEN DBMS_OUTPUT.PUT_LINE('The numeric character was found');
 ELSE 
  DBMS_OUTPUT.PUT_LINE('No numeric characters today.'); 
 END IF; 
END;
/
</pre></div>
<!-- class="sect2" -->
<a id="BCFJAEBJ"></a>
<div id="DVADM70812" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">IS_DVSYS_OWNER Function</h3>
<p>The<a id="sthref871"></a> <code dir="ltr">IS_DVSYS_OWNER</code> function determines whether a user is authorized to manage the Oracle Database Vault configuration, and then returns a <code dir="ltr">BOOLEAN</code> value. <code dir="ltr">IS_DVSYS_OWNER</code> returns <code dir="ltr">TRUE</code> if the user is authorized.</p>
<p class="subhead2"><a id="DVADM70813"></a>Syntax</p>
<pre dir="ltr">
DBMS_MACUTL.IS_DVSYS_OWNER(
  p_user IN VARCHAR2 DEFAULT USER)
RETURN BOOLEAN;
</pre>
<p class="subhead2"><a id="DVADM70814"></a>Parameter</p>
<div id="DVADM70815" class="tblhruleformal">
<p class="titleintable"><a id="sthref872"></a><a id="sthref873"></a>Table 14-13 IS_DVSYS_OWNER Parameter</p>
<table class="cellalignment1647" title="IS_DVSYS_OWNER Parameter" summary="IS_DVSYS_OWNER" dir="ltr">
<thead>
<tr class="cellalignment1639">
<th class="cellalignment1648" id="r1c1-t14">Parameter</th>
<th class="cellalignment1648" id="r1c2-t14">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r2c1-t14" headers="r1c1-t14">
<p><code dir="ltr">p_user</code></p>
</td>
<td class="cellalignment1646" headers="r2c1-t14 r1c2-t14">
<p>User to check.</p>
<p>To find existing users, query the following views:</p>
<ul>
<li>
<p><code dir="ltr">DBA_USERS</code>: Finds available users for the current database instance. See <a class="olink REFRN" href="../e40402/toc.htm"><span class="italic">Oracle Database Reference</span></a>.</p>
</li>
<li>
<p><code dir="ltr">DVSYS.DBA_DV_REALM_AUTH</code>: Finds the authorization of a particular user or role. See <a href="views.htm#BABDFECH">"DVSYS.DBA_DV_REALM_AUTH View"</a>.</p>
</li>
<li>
<p><code dir="ltr">DVSYS.DBA_DV_ROLE</code>: Finds existing secure application roles used in privilege management. See <a href="views.htm#BABGFIGC">"DVSYS.DBA_DV_ROLE View"</a>.</p>
</li>
</ul>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblhruleformal" -->
<p class="subhead2"><a id="DVADM70816"></a>Example</p>
<pre dir="ltr">
SET SERVEROUTPUT ON
BEGIN 
 IF DBMS_MACUTL.IS_DVSYS_OWNER('PSMITH')
  THEN DBMS_OUTPUT.PUT_LINE('PSMITH is authorized to manage Database Vault.');
 ELSE 
  DBMS_OUTPUT.PUT_LINE('PSMITH is not authorized to manage Database Vault.'); 
 END IF; 
END;
/
</pre></div>
<!-- class="sect2" -->
<a id="BCFBGFJG"></a>
<div id="DVADM70817" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">IS_OLS_INSTALLED Function</h3>
<p>The<a id="sthref874"></a> <code dir="ltr">IS_OLS_INSTALLED</code> function returns an indicator regarding whether Oracle Label Security is installed, and then returns a <code dir="ltr">TRUE</code> or <code dir="ltr">FALSE</code> <code dir="ltr">BOOLEAN</code> value. If Oracle Label Security is installed, <code dir="ltr">IS_OLS_INSTALLED</code> returns <code dir="ltr">TRUE</code>.</p>
<p class="subhead2"><a id="DVADM70818"></a>Syntax</p>
<pre dir="ltr">
DBMS_MACUTL.IS_OLS_INSTALLED()
RETURN BOOLEAN;
</pre>
<p class="subhead2"><a id="DVADM70819"></a>Parameters</p>
<p>None.</p>
<p class="subhead2"><a id="DVADM70820"></a>Example</p>
<pre dir="ltr">
SET SERVEROUTPUT ON
BEGIN 
 IF DBMS_MACUTL.IS_OLS_INSTALLED()  
  THEN DBMS_OUTPUT.PUT_LINE('OLS is installed');
 ELSE 
  DBMS_OUTPUT.PUT_LINE('OLS is not installed'); 
 END IF; 
END;
/
</pre></div>
<!-- class="sect2" -->
<a id="BCFGJACH"></a>
<div id="DVADM70821" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">IS_OLS_INSTALLED_VARCHAR Function</h3>
<p><a id="sthref875"></a>The <code dir="ltr">IS_OLS_INSTALLED_VARCHAR</code> function returns an indicator regarding whether Oracle Label Security is installed, and then returns a <code dir="ltr">Y</code> or <code dir="ltr">N</code> <code dir="ltr">VARCHAR2</code> value. If Oracle Label Security is installed, then <code dir="ltr">IS_OLS_INSTALLED_VARCHAR</code> returns <code dir="ltr">Y</code>.</p>
<p class="subhead2"><a id="DVADM70822"></a>Syntax</p>
<pre dir="ltr">
DBMS_MACUTL.IS_OLS_INSTALLED_VARCHAR()
RETURN VARCHAR2;
</pre>
<p class="subhead2"><a id="DVADM70823"></a>Parameters</p>
<p>None.</p>
<p class="subhead2"><a id="DVADM70824"></a>Example</p>
<p>See <a href="#BCFBGFJG">"IS_OLS_INSTALLED Function"</a> for an example.</p>
</div>
<!-- class="sect2" -->
<a id="BCFIAACJ"></a>
<div id="DVADM70830" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">USER_HAS_ROLE Function</h3>
<p>The<a id="sthref876"></a> <code dir="ltr">USER_HAS_ROLE</code> function checks whether a user has a role privilege, directly or indirectly (through another role), and then returns a <code dir="ltr">BOOLEAN</code> value. If the user has a role privilege, then <code dir="ltr">USER_HAS_ROLE</code> returns <code dir="ltr">TRUE</code>.</p>
<p class="subhead2"><a id="DVADM70831"></a>Syntax</p>
<pre dir="ltr">
DBMS_MACUTL.USER_HAS_ROLE(
  p_role IN VARCHAR2, 
  p_user IN VARCHAR2 DEFAULT USER)
RETURN BOOLEAN;
</pre>
<p class="subhead2"><a id="DVADM70832"></a>Parameters</p>
<div id="DVADM70833" class="tblhruleformal">
<p class="titleintable"><a id="sthref877"></a><a id="sthref878"></a>Table 14-14 USER_HAS_ROLE Parameters</p>
<table class="cellalignment1647" title="USER_HAS_ROLE Parameters" summary="USER_HAS_ROLE" dir="ltr">
<thead>
<tr class="cellalignment1639">
<th class="cellalignment1648" id="r1c1-t15">Parameter</th>
<th class="cellalignment1648" id="r1c2-t15">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r2c1-t15" headers="r1c1-t15">
<p><code dir="ltr">p_role</code></p>
</td>
<td class="cellalignment1646" headers="r2c1-t15 r1c2-t15">
<p>Role privilege to check.</p>
<p>To find existing roles, query the following views:</p>
<ul>
<li>
<p><code dir="ltr">DBA_ROLES</code>: Finds available roles in the current database instance. See <a class="olink REFRN" href="../e40402/toc.htm"><span class="italic">Oracle Database Reference</span></a>.</p>
</li>
<li>
<p><code dir="ltr">DVSYS.DBA_DV_REALM_AUTH</code>: Finds the authorization of a particular user or role. See <a href="views.htm#BABDFECH">"DVSYS.DBA_DV_REALM_AUTH View"</a>.</p>
</li>
<li>
<p><code dir="ltr">DVSYS.DBA_DV_ROLE</code>: Finds existing secure application roles used in privilege management. See <a href="views.htm#BABGFIGC">"DVSYS.DBA_DV_ROLE View"</a>.</p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r3c1-t15" headers="r1c1-t15">
<p><code dir="ltr">p_user</code></p>
</td>
<td class="cellalignment1646" headers="r3c1-t15 r1c2-t15">
<p>User to check.</p>
<p>To find existing users, query the following views:</p>
<ul>
<li>
<p><code dir="ltr">DBA_USERS</code>: Finds available users for the current database instance. See <a class="olink REFRN" href="../e40402/toc.htm"><span class="italic">Oracle Database Reference</span></a>.</p>
</li>
<li>
<p><code dir="ltr">DVSYS.DBA_DV_REALM_AUTH</code>: Finds the authorization of a particular user or role. See <a href="views.htm#BABDFECH">"DVSYS.DBA_DV_REALM_AUTH View"</a>.</p>
</li>
</ul>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblhruleformal" -->
<p class="subhead2"><a id="DVADM70834"></a>Example</p>
<pre dir="ltr">
SET SERVEROUTPUT ON
BEGIN
 IF DBMS_MACUTL.USER_HAS_ROLE('SECTOR2_APP_MGR', 'PSMITH')
  THEN DBMS_OUTPUT.PUT_LINE('User PSMITH has the SECTOR2_APP_MGR role');
   ELSE 
  DBMS_OUTPUT.PUT_LINE('User PSMITH does not have the SECTOR2_APP_MGR role.'); 
 END IF;
END;
/
</pre></div>
<!-- class="sect2" -->
<a id="BCFGGGEI"></a>
<div id="DVADM70835" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">USER_HAS_ROLE_VARCHAR Function</h3>
<p>The<a id="sthref879"></a> <code dir="ltr">USER_HAS_ROLE_VARCHAR</code> function checks whether a user has a role privilege, directly or indirectly (through another role), and then returns a <code dir="ltr">VARCHAR2</code> value. If the user has the role privilege specified, then <code dir="ltr">USER_HAS_ROLE_VARCHAR</code> returns <code dir="ltr">Y</code>.</p>
<p class="subhead2"><a id="DVADM70836"></a>Syntax</p>
<pre dir="ltr">
DBMS_MACUTL.USER_HAS_ROLE_VARCHAR(
  p_role IN VARCHAR2, 
  p_user IN VARCHAR2 DEFAULT USER)
RETURN VARCHAR2;
</pre>
<p class="subhead2"><a id="DVADM70837"></a>Parameters</p>
<div id="DVADM70838" class="tblhruleformal">
<p class="titleintable"><a id="sthref880"></a><a id="sthref881"></a>Table 14-15 USER_HAS_ROLE_VARCHAR Parameters</p>
<table class="cellalignment1647" title="USER_HAS_ROLE_VARCHAR Parameters" summary="USER_HAS_ROLE_VARCHAR" dir="ltr">
<thead>
<tr class="cellalignment1639">
<th class="cellalignment1648" id="r1c1-t16">Parameter</th>
<th class="cellalignment1648" id="r1c2-t16">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r2c1-t16" headers="r1c1-t16">
<p><code dir="ltr">p_role</code></p>
</td>
<td class="cellalignment1646" headers="r2c1-t16 r1c2-t16">
<p>Role to check.</p>
<p>To find existing roles, query the following views:</p>
<ul>
<li>
<p><code dir="ltr">DBA_ROLES</code>: Finds available roles in the current database instance. See <a class="olink REFRN" href="../e40402/toc.htm"><span class="italic">Oracle Database Reference</span></a>.</p>
</li>
<li>
<p><code dir="ltr">DVSYS.DBA_DV_REALM_AUTH</code>: Finds the authorization of a particular user or role. See <a href="views.htm#BABDFECH">"DVSYS.DBA_DV_REALM_AUTH View"</a>.</p>
</li>
<li>
<p><code dir="ltr">DVSYS.DBA_DV_ROLE</code>: Finds existing secure application roles used in privilege management. See <a href="views.htm#BABGFIGC">"DVSYS.DBA_DV_ROLE View"</a>.</p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r3c1-t16" headers="r1c1-t16">
<p><code dir="ltr">p_user</code></p>
</td>
<td class="cellalignment1646" headers="r3c1-t16 r1c2-t16">
<p>User to check.</p>
<p>To find existing users, query the following views:</p>
<ul>
<li>
<p><code dir="ltr">DBA_USERS</code>: Finds available users for the current database instance. See <a class="olink REFRN" href="../e40402/toc.htm"><span class="italic">Oracle Database Reference</span></a>.</p>
</li>
<li>
<p><code dir="ltr">DVSYS.DBA_DV_REALM_AUTH</code>: Finds the authorization of a particular user or role. See <a href="views.htm#BABDFECH">"DVSYS.DBA_DV_REALM_AUTH View"</a>.</p>
</li>
</ul>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblhruleformal" --></div>
<!-- class="sect2" -->
<a id="BCFGGHEJ"></a>
<div id="DVADM70839" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">USER_HAS_SYSTEM_PRIVILEGE Function</h3>
<p>The<a id="sthref882"></a> <code dir="ltr">USER_HAS_SYSTEM_PRIVILEGE</code> function checks whether a user has a system privilege, directly or indirectly (through a role), and then returns a <code dir="ltr">BOOLEAN</code> value. If the user has the system privilege specified, then <code dir="ltr">USER_HAS_SYSTEM_PRIVILEGE</code> returns <code dir="ltr">TRUE</code>.</p>
<p class="subhead2"><a id="DVADM70840"></a>Syntax</p>
<pre dir="ltr">
DBMS_MACUTL.USER_HAS_SYSTEM_PRIVILEGE(
  p_privilege  IN VARCHAR2, 
  p_user       IN VARCHAR2 DEFAULT USER)
RETURN BOOLEAN;
</pre>
<p class="subhead2"><a id="DVADM70841"></a>Parameters</p>
<div id="DVADM70842" class="tblhruleformal">
<p class="titleintable"><a id="sthref883"></a><a id="sthref884"></a>Table 14-16 USER_HAS_SYSTEM_PRIVILEGE Parameters</p>
<table class="cellalignment1647" title="USER_HAS_SYSTEM_PRIVILEGE Parameters" summary="USER_HAS_SYSTEM_PRIVILEGE" dir="ltr">
<thead>
<tr class="cellalignment1639">
<th class="cellalignment1648" id="r1c1-t17">Parameter</th>
<th class="cellalignment1648" id="r1c2-t17">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r2c1-t17" headers="r1c1-t17">
<p><code dir="ltr">p_privilege</code></p>
</td>
<td class="cellalignment1646" headers="r2c1-t17 r1c2-t17">
<p>System privilege to check for.</p>
<p>To find privileges for a database account excluding <code dir="ltr">PUBLIC</code> privileges, query the <code dir="ltr">DVSYS.DBA_DV_USER_PRIVS</code> view, described in <a href="views.htm#BABJDCAC">"DVSYS.DBA_DV_USER_PRIVS View"</a>.</p>
<p>To find all privileges for a database account, use <code dir="ltr">DVSYS.DBA_DV_USER_PRIVS_ALL</code>, described in <a href="views.htm#BABIFFHJ">"DVSYS.DBA_DV_USER_PRIVS_ALL View"</a>.</p>
</td>
</tr>
<tr class="cellalignment1639">
<td class="cellalignment1646" id="r3c1-t17" headers="r1c1-t17">
<p><code dir="ltr">p_user</code></p>
</td>
<td class="cellalignment1646" headers="r3c1-t17 r1c2-t17">
<p>User to check.</p>
<p>To find existing users, query the following views:</p>
<ul>
<li>
<p><code dir="ltr">DBA_USERS</code>: Finds available users for the current database instance. See <a class="olink REFRN" href="../e40402/toc.htm"><span class="italic">Oracle Database Reference</span></a>.</p>
</li>
<li>
<p><code dir="ltr">DVSYS.DBA_DV_REALM_AUTH</code>: Finds the authorization of a particular user or role. See <a href="views.htm#BABDFECH">"DVSYS.DBA_DV_REALM_AUTH View"</a>.</p>
</li>
</ul>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblhruleformal" -->
<p class="subhead2"><a id="DVADM70843"></a>Example</p>
<pre dir="ltr">
SET SERVEROUTPUT ON
BEGIN
 IF DBMS_MACUTL.USER_HAS_SYSTEM_PRIVILEGE('EXECUTE', 'PSMITH')
  THEN DBMS_OUTPUT.PUT_LINE('User PSMITH has the EXECUTE ANY PRIVILEGE privilege.');
   ELSE 
  DBMS_OUTPUT.PUT_LINE('User PSMITH does not have the EXECUTE ANY PRIVILEGE privilege.'); 
 END IF;
END;
/
</pre></div>
<!-- class="sect2" --></div>
<!-- class="sect1" --></div>
<!-- class="chapter" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment1638">
<tr>
<td class="cellalignment1646">
<table class="cellalignment1643">
<tr>
<td class="cellalignment1642"><a href="apis_macsec_roles.htm"><img width="24" height="24" src="../../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment1642"><a href="plsql_interfaces.htm"><img width="24" height="24" src="../../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;2006, 2016,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment1650">
<table class="cellalignment1641">
<tr>
<td class="cellalignment1642"><a href="../../index.htm"><img width="24" height="24" src="../../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment1642"><a href="../../nav/portal_booklist.htm"><img width="24" height="24" src="../../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment1642"><a href="toc.htm"><img width="24" height="24" src="../../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment1642"><a href="index.htm"><img width="24" height="24" src="../../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment1642"><a href="../../nav/mindx.htm"><img width="24" height="24" src="../../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment1642"><a href="../../dcommon/html/feedback.htm"><img width="24" height="24" src="../../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>
</body>
</html>
