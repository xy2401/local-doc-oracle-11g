<!DOCTYPE html>
<html lang="en" >
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1">
<meta charset="utf-8">
<title>Creating and Configuring an Oracle Database</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Merged Version 1055" />
<meta name="dcterms.created" content="2015-05-05T8:27:32Z" />
<meta name="robots" content="all" />
<meta name="dcterms.title" content="Database Administrator's Guide" />
<meta name="dcterms.identifier" content="E25494-07" />
<meta name="dcterms.isVersionOf" content="ADMIN" />
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;2001, 2015,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved." />
<link rel="Start" href="../../index.htm" title="Home" type="text/html" />
<link rel="Copyright" href="../../dcommon/html/cpyr.htm" title="Copyright" type="text/html" />

<script type="application/javascript"  src="../../dcommon/js/headfoot.js"></script>
<script type="application/javascript"  src="../../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html" />
<link rel="Index" href="index.htm" title="Index" type="text/html" />
<link rel="Prev" href="dba.htm" title="Previous" type="text/html" />
<link rel="Next" href="start.htm" title="Next" type="text/html" />
<link rel="alternate" href="../e25494.pdf" title="PDF version" type="application/pdf" />
<link rel="schema.dcterms" href="http://purl.org/dc/terms/" />
<link rel="stylesheet" href="../../dcommon/css/fusiondoc.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/header.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/footer.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/fonts.css">
<link rel="stylesheet" href="../../dcommon/css/foundation.css">
<link rel="stylesheet" href="../../dcommon/css/codemirror.css">
<link rel="stylesheet" type="text/css" title="Default" href="../../nav/css/html5.css">
<link rel="stylesheet" href="../../dcommon/css/respond-480-tablet.css">
<link rel="stylesheet" href="../../dcommon/css/respond-768-laptop.css">
<link rel="stylesheet" href="../../dcommon/css/respond-1140-deskop.css">
<script type="application/javascript" src="../../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">9/49</span> <!-- End Header -->
<script  >
<!-- // <![CDATA[
window.name='create'
// ]]> -->
</script> <script  >
// <![CDATA[
function footdisplay(footnum,footnote) {
    var msg = window.open('', 'NewWindow' + footnum,
        'directories=no,height=120,location=no,menubar=no,resizable=yes,' +
        'scrollbars=yes,status=no,toolbar=no,width=598');
    msg.document.open('text/html');
    msg.document.write('<!DOCTYPE html ');
    msg.document.write('PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" ');

    msg.document.write('"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">');
    msg.document.write('<html xmlns="http://www.w3.org/1999/xhtml" lang="en"><head><title>');
    msg.document.write('Footnote ' + footnum);
    msg.document.write('<\/title><meta http-equiv="Content-Type" ');
    msg.document.write('content="text/html; charset=utf-8" />');
    msg.document.write('');
    msg.document.write('<style> <![CDATA[ ');
    msg.document.write('h1 {text-align: center; font-size: 14pt;}');
    msg.document.write('fieldset {border: none;}');
    msg.document.write('form {text-align: center;}');
    msg.document.write(' ]]\u003e <\/style>');
    msg.document.write('<\/head><body><h1>Footnote ' + footnum + '<\/h1><p>');
    msg.document.write(footnote);
    msg.document.write('<\/p><form action="" method="post"><fieldset>');
    msg.document.write('<input type="button" value="OK" ');
    msg.document.write('onclick="window.close();" />');
    msg.document.write('<\/fieldset><\/form><\/body><\/html>');
    msg.document.close();
    msg.focus();
}
// ]]>
</script> <noscript>
<p>The script content on this page is for navigation purposes only and does not alter the content in any way.</p>
</noscript>
<div id="ADMIN002" class="chapter"><a id="g1034097"></a> <a id="i1017640"></a>
<h1 class="chapter"><span class="secnum">2</span> Creating and Configuring an Oracle Database</h1>
<p>In this chapter:<a id="sthref131"></a><a id="sthref132"></a><a id="sthref133"></a></p>
<ul>
<li>
<p><a href="#i1008487">About Creating an Oracle Database</a></p>
</li>
<li>
<p><a href="#CIABGCIH">Creating a Database with DBCA</a></p>
</li>
<li>
<p><a href="#CIAEJDBE">Creating a Database with the CREATE DATABASE Statement</a></p>
</li>
<li>
<p><a href="#i1009187">Specifying CREATE DATABASE Statement Clauses</a></p>
</li>
<li>
<p><a href="#CIAFAFFG">Specifying Initialization Parameters</a></p>
</li>
<li>
<p><a href="#i1013934">Managing Initialization Parameters Using a Server Parameter File</a></p>
</li>
<li>
<p><a href="#CIABBCAI">Managing Application Workloads with Database Services</a></p>
</li>
<li>
<p><a href="#i1009520">Considerations After Creating a Database</a></p>
</li>
<li>
<p><a href="#BABIHAEB">Cloning a Database with CloneDB</a></p>
</li>
<li>
<p><a href="#i1009497">Dropping a Database</a></p>
</li>
<li>
<p><a href="#i1011991">Database Data Dictionary Views</a></p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="omf.htm#g1018000">Chapter 17, "Using Oracle Managed Files"</a> for information about creating a database whose underlying operating system files are automatically created and managed by the Oracle Database server</p>
</li>
<li>
<p>Your platform-specific Oracle Real Application Clusters (Oracle RAC) installation guide for information about creating a database in an Oracle RAC environment</p>
</li>
</ul>
</div>
</li>
</ul>
<a id="i1008487"></a>
<div id="ADMIN11068" class="sect1">
<h2 class="sect1">About Creating an Oracle Database</h2>
<p>After you plan your database using some of the guidelines presented in this section, you can create the database with a graphical tool or a SQL command. You typically create a database during Oracle Database software installation. However, you can also create a database after installation. Reasons to create a database after installation are as follows:</p>
<ul>
<li>
<p>You used Oracle Universal Installer (OUI) to install software only, and did not create a database.</p>
</li>
<li>
<p>You want to create another database (and database instance) on the same host computer as an existing Oracle database. In this case, this chapter assumes that the new database uses the same Oracle home as the existing database. You can also create the database in a new Oracle home by running OUI again.</p>
</li>
<li>
<p>You want to make a copy of (clone) a database.</p>
</li>
</ul>
<p>The specific methods for creating a database are:<a id="sthref134"></a><a id="sthref135"></a><a id="sthref136"></a><a id="sthref137"></a><a id="sthref138"></a><a id="sthref139"></a><a id="sthref140"></a></p>
<ul>
<li>
<p>With Database Configuration Assistant<a id="sthref141"></a> (DBCA), a graphical tool.</p>
<p>See <a href="#CIABGCIH">"Creating a Database with DBCA"</a></p>
</li>
<li>
<p>With the <code >CREATE</code> <code dir="ltr">DATABASE</code> SQL statement.</p>
<p>See <a href="#CIAEJDBE">"Creating a Database with the CREATE DATABASE Statement"</a></p>
</li>
</ul>
<a id="CIAIGADE"></a>
<div id="ADMIN11070" class="sect2">
<h3 class="sect2">Considerations Before Creating the Database</h3>
<p><a id="sthref142"></a><a id="sthref143"></a><a id="sthref144"></a>Database creation prepares several operating system files to work together as an Oracle Database. You only need to create a database once, regardless of how many data files it has or how many instances access it. You can create a database to erase information in an existing database and create a new database with the same name and physical structure.</p>
<p>The following topics can help prepare you for database creation.</p>
<ul>
<li>
<p><a href="#i1008322">Planning for Database Creation</a></p>
</li>
<li>
<p><a href="#i1008470">Meeting Creation Prerequisites</a></p>
</li>
</ul>
<a id="i1008322"></a>
<div id="ADMIN11071" class="sect3">
<h4 class="sect3">Planning for Database Creation</h4>
<p>Prepare to create the database by research and careful planning. <a href="#BABHJCHI">Table 2-1</a> lists some recommended actions:</p>
<div id="ADMIN12918" class="tblhruleformal">
<p class="titleintable"><a id="sthref145"></a><a id="BABHJCHI"></a>Table 2-1 Database Planning Tasks</p>
<table class="cellalignment1333" title="Database Planning Tasks" summary="The left column lists various actions for planning for database ceation, the right column points you to additional information for performing these actions." dir="ltr">
<thead>
<tr class="cellalignment1327">
<th class="cellalignment1334" id="r1c1-t3">Action</th>
<th class="cellalignment1334" id="r1c2-t3">Additional Information</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1327">
<td class="cellalignment1335" id="r2c1-t3" headers="r1c1-t3">
<p>Plan the database tables and indexes and estimate the amount of space they will require.</p>
</td>
<td class="cellalignment1335" headers="r2c1-t3 r1c2-t3">
<p><a href="part2.htm#g996990">Part I, "Oracle Database Structure and Storage"</a></p>
<p><a href="part4.htm#g996977">Part I, "Schema Objects"</a></p>
</td>
</tr>
<tr class="cellalignment1327">
<td class="cellalignment1335" id="r3c1-t3" headers="r1c1-t3">
<p>Plan the layout of the underlying operating system files your database will comprise. Proper distribution of files can improve database performance dramatically by distributing the I/O during file access. You can distribute I/O in several ways when you install Oracle software and create your database. For example, you can place redo log files on separate disks or use striping. You can situate data files to reduce contention. And you can control data density (number of rows to a data block). If you create a Fast Recovery Area, Oracle recommends that you place it on a storage device that is different from that of the data files.</p>
<p>To greatly simplify this planning task, consider using Oracle Managed Files and Automatic Storage Management to create and manage the operating system files that comprise your database storage.</p>
</td>
<td class="cellalignment1335" headers="r3c1-t3 r1c2-t3">
<p><a href="omf.htm#g1018000">Chapter 17, "Using Oracle Managed Files"</a></p>
<p><a class="olink OSTMG" href="../e18951/toc.htm"><span class="italic">Oracle Automatic Storage Management Administrator's Guide</span></a></p>
<p><a class="olink PFGRF015" href="../../server.112/e41573/iodesign.htm#PFGRF015"><span class="italic">Oracle Database Performance Tuning Guide</span></a></p>
<p><a class="olink BRADV" href="../../backup.112/e10642/toc.htm"><span class="italic">Oracle Database Backup and Recovery User's Guide</span></a></p>
<p>Your Oracle operating system&ndash;specific documentation, including the appropriate Oracle Database installation guide.</p>
</td>
</tr>
<tr class="cellalignment1327">
<td class="cellalignment1335" id="r4c1-t3" headers="r1c1-t3">
<p>Select the <span class="bold">global database name</span>, which is the name and location of the database within the network structure. Create the global database name by setting both the <code dir="ltr">DB_NAME</code> and <code dir="ltr">DB_DOMAIN</code> initialization parameters.</p>
</td>
<td class="cellalignment1335" headers="r4c1-t3 r1c2-t3">
<p><a href="#i1013998">"Determining the Global Database Name"</a></p>
</td>
</tr>
<tr class="cellalignment1327">
<td class="cellalignment1335" id="r5c1-t3" headers="r1c1-t3">
<p>Familiarize yourself with the initialization parameters contained in the initialization parameter file. Become familiar with the concept and operation of a <span class="bold">server parameter file</span>. A server parameter file lets you store and manage your initialization parameters persistently in a server-side disk file.</p>
</td>
<td class="cellalignment1335" headers="r5c1-t3 r1c2-t3">
<p><a href="#i1013946">"About Initialization Parameters and Initialization Parameter Files"</a></p>
<p><a href="#i1009971">"What Is a Server Parameter File?"</a></p>
<p><a class="olink REFRN001" href="../../server.112/e40402/initparams_part.htm#REFRN001"><span class="italic">Oracle Database Reference</span></a></p>
</td>
</tr>
<tr class="cellalignment1327">
<td class="cellalignment1335" id="r6c1-t3" headers="r1c1-t3">
<p>Select the database cha<a id="sthref146"></a>racter set.</p>
<p>All character data, including data in the data dictionary, is stored in the database character set. You specify the database character set when you create the database.</p>
<p>See <a href="#BABICDGA">"Selecting a Character Set"</a> for details.</p>
</td>
<td class="cellalignment1335" headers="r6c1-t3 r1c2-t3">
<p><a class="olink NLSPG002" href="../../server.112/e10729/ch2charset.htm#NLSPG002"><span class="italic">Oracle Database Globalization Support Guide</span></a></p>
</td>
</tr>
<tr class="cellalignment1327">
<td class="cellalignment1335" id="r7c1-t3" headers="r1c1-t3">
<p>Consider what time zones your database must support.</p>
<p>Oracle Database uses one of two time zone files as the source of valid time zones. The default time zone file is <code dir="ltr">timezlrg_11.dat</code>. It contains more time zones than the smaller time zone file, <code dir="ltr">timezone_11.dat</code>.</p>
</td>
<td class="cellalignment1335" headers="r7c1-t3 r1c2-t3">
<p><a href="#i1009420">"Specifying the Database Time Zone File"</a></p>
</td>
</tr>
<tr class="cellalignment1327">
<td class="cellalignment1335" id="r8c1-t3" headers="r1c1-t3">
<p>Select the standard database block size. This is specified at database creation by the <code dir="ltr">DB_BLOCK_SIZE</code> initialization parameter and cannot be changed after the database is created.</p>
<p>The <code dir="ltr">SYSTEM</code> tablespace and most other tablespaces use the standard block size. Additionally, you can specify up to four nonstandard block sizes when creating tablespaces.</p>
</td>
<td class="cellalignment1335" headers="r8c1-t3 r1c2-t3">
<p><a href="#i1014072">"Specifying Database Block Sizes"</a></p>
</td>
</tr>
<tr class="cellalignment1327">
<td class="cellalignment1335" id="r9c1-t3" headers="r1c1-t3">
<p>If you plan to store online redo log files on disks with a 4K byte sector size, determine whether you must manually specify redo log block size.</p>
</td>
<td class="cellalignment1335" headers="r9c1-t3 r1c2-t3">
<p><a href="onlineredo.htm#CHDFBDJC">"Planning the Block Size of Redo Log Files"</a></p>
</td>
</tr>
<tr class="cellalignment1327">
<td class="cellalignment1335" id="r10c1-t3" headers="r1c1-t3">
<p>Determine the appropriate initial sizing for the <code dir="ltr">SYSAUX</code> tablespace.</p>
</td>
<td class="cellalignment1335" headers="r10c1-t3 r1c2-t3">
<p><a href="#i1011308">"About the SYSAUX Tablespace"</a></p>
</td>
</tr>
<tr class="cellalignment1327">
<td class="cellalignment1335" id="r11c1-t3" headers="r1c1-t3">
<p>Plan to use a default tablespace for non-<code dir="ltr">SYSTEM</code> users to prevent inadvertently saving database objects in the <code dir="ltr">SYSTEM</code> tablespace.</p>
</td>
<td class="cellalignment1335" headers="r11c1-t3 r1c2-t3">
<p><a href="#i1017247">"Creating a Default Permanent Tablespace"</a></p>
</td>
</tr>
<tr class="cellalignment1327">
<td class="cellalignment1335" id="r12c1-t3" headers="r1c1-t3">
<p>Plan to use an undo tablespace to manage your undo data.</p>
</td>
<td class="cellalignment1335" headers="r12c1-t3 r1c2-t3">
<p><a href="undo.htm#g1012303">Chapter 16, "Managing Undo"</a></p>
</td>
</tr>
<tr class="cellalignment1327">
<td class="cellalignment1335" id="r13c1-t3" headers="r1c1-t3">
<p>Develop a backup and recovery strategy to protect the database from failure. It is important to protect the control file by multiplexing, to choose the appropriate backup mode, and to manage the online and archived redo logs.</p>
</td>
<td class="cellalignment1335" headers="r13c1-t3 r1c2-t3">
<p><a href="onlineredo.htm#g1011287">Chapter 12, "Managing the Redo Log"</a></p>
<p><a href="archredo.htm#g1015189">Chapter 13, "Managing Archived Redo Logs"</a></p>
<p><a href="control.htm#g1009963">Chapter 11, "Managing Control Files"</a></p>
<p><a class="olink BRADV" href="../../backup.112/e10642/toc.htm"><span class="italic">Oracle Database Backup and Recovery User's Guide</span></a></p>
</td>
</tr>
<tr class="cellalignment1327">
<td class="cellalignment1335" id="r14c1-t3" headers="r1c1-t3">
<p>Familiarize yourself with the principles and options of starting up and shutting down an instance and mounting and opening a database.</p>
</td>
<td class="cellalignment1335" headers="r14c1-t3 r1c2-t3">
<p><a href="start.htm#g1011160">Chapter 3, "Starting Up and Shutting Down"</a></p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblhruleformal" -->
<a id="BABICDGA"></a>
<div id="ADMIN13343" class="sect4">
<h5 class="sect4">Selecting a Character Set</h5>
<p>Oracle recommends AL32UTF8 as the database character set. AL32UTF8 is Oracle's name for the UTF-8 encoding of the Unicode standard. The Unicode standard is the universal character set that supports most of the currently spoken languages of the world. The use of the Unicode standard is indispensable for any multilingual technology, including database processing.</p>
<p>After a database is created and accumulates production data, changing the database character set is a time consuming and complex project. Therefore, it is very important to select the right character set at installation time. Even if the database does not currently store multilingual data but is expected to store multilingual data within a few years, the choice of AL32UTF8 for the database character set is usually the only good decision.</p>
<p>Even so, the default character set used by Oracle Universal Installer (OUI) and Database Configuration Assistant (DBCA) for the UNIX, Linux, and Microsoft Windows platforms is not AL32UTF8, but a Microsoft Windows character set known as an ANSI code page. The particular character set is selected based on the current language (locale) of the operating system session that started OUI or DBCA. If the language is American English or one of the Western European languages, the default character set is WE8MSWIN1252. Each Microsoft Windows ANSI Code Page is capable of storing data only from one language or a limited group of languages, such as only Western European, or only Eastern European, or only Japanese.</p>
<p>A Microsoft Windows character set is the default even for databases created on UNIX and Linux platforms because Microsoft Windows is the prevalent platform for client workstations. Oracle Client libraries automatically perform the necessary character set conversion between the database character set and the character sets used by non-Windows client applications.</p>
<p>You may also choose to use any other character set from the presented list of character sets. You can use this option to select a particular character set required by an application vendor, or choose a particular character set that is the common character set used by all clients connecting to this database.</p>
<p>As AL32UTF8 is a multibyte character set, database operations on character data may be slightly slower when compared to single-byte database character sets, such as WE8MSWIN1252. Storage space requirements for text in most languages that use characters outside of the ASCII repertoire are higher in AL32UTF8 compared to legacy character sets supporting the language. The increase in storage space concerns only character data and only data that is not in English. The universality and flexibility of Unicode usually outweighs these additional costs.</p>
<div class="infobox-note">
<p class="notep1">Caution:</p>
Do not use the character set named UTF8 as the database character set unless required for compatibility with Oracle Database clients and servers in version 8.1.7 and earlier, or unless explicitly requested by your application vendor. Despite having a very similar name, UTF8 is not a proper implementation of the Unicode encoding UTF-8. If the UTF8 character set is used where UTF-8 processing is expected, data loss and security issues may occur. This is especially true for Web related data, such as XML and URL addresses.</div>
</div>
<!-- class="sect4" --></div>
<!-- class="sect3" -->
<a id="i1008470"></a>
<div id="ADMIN11072" class="sect3">
<h4 class="sect3">Meeting Creation Prerequisites<a id="sthref147"></a><a id="sthref148"></a></h4>
<p>Before you can create a new database, the following prerequisites must be met:</p>
<ul>
<li>
<p>The desired Oracle software must be installed. This includes setting various environment variables unique to your operating system and establishing the directory structure for software and database files.</p>
</li>
<li>
<p>Sufficient memory must be available to start the Oracle Database instance.</p>
</li>
<li>
<p>Sufficient disk storage space must be available for the planned database on the computer that runs Oracle Database.</p>
</li>
</ul>
<p>All of these are discussed in the <a class="olink GINST" href="http://www.oracle.com/pls/topic/lookup?ctx=db112&amp;id=GINST"><span class="italic">Oracle Database Installation Guide</span></a> specific to your operating system. If you use the Oracle Universal Installer, it will guide you through your installation and provide help in setting environment variables and establishing directory structure and authorizations.</p>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="CIABGCIH"></a>
<div id="ADMIN12479" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Creating a Data<a id="sthref149"></a><a id="sthref150"></a>base with DBCA</h2>
<p>Database Configuration Assistant (DBCA) is the preferred way to create a database, because it is a more automated approach, and your database is ready to use when DBCA completes. DBCA can be launched by the Oracle Universal Installer (OUI), depending upon the type of install that you select. You can also launch DBCA as a standalone tool at any time after Oracle Database installation.</p>
<p>You can run DBCA in interactive mode or noninteractive/silent mode. Interactive mode provides a graphical interface and guided workflow for creating and configuring a database. Noninteractive/silent mode enables you to script database creation. You can run DBCA in noninteractive/silent mode by specifying command-line arguments, a response file, or both.</p>
<div id="ADMIN12537" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref151"></a>
<h3 class="sect2">Creating a Database with Interactive DBCA</h3>
<p>See <a class="olink ADMQS002" href="../../server.112/e10897/install.htm#ADMQS002"><span class="italic">Oracle Database 2 Day DBA</span></a> for detailed information about creating a database interactively with DBCA.</p>
</div>
<!-- class="sect2" -->
<div id="ADMIN12538" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref152"></a>
<h3 class="sect2">Creating a Database with Noninteractive/Silent DBCA</h3>
<p>See Appendix A of the installation guide for your platform for details on using the noninter<a id="sthref153"></a>active/silent mode of DBCA.</p>
<p>The following example creates a database by passing command-line arguments to DBCA:</p>
<pre dir="ltr">
dbca -silent -createDatabase -templateName General_Purpose.dbc
  -gdbname ora11g -sid ora11g -responseFile NO_VALUE -characterSet AL32UTF8
  -memoryPercentage 30 -emConfiguration LOCAL

Enter SYSTEM user password:
<span class="italic">password</span>
Enter SYS user password:
<span class="italic">password</span>
Copying database files
1% complete
3% complete
...
</pre>
<p>To ensure completely silent operation, you can redirect stdout to a file. In this case, however, you must supply passwords for the administrative accounts in command-line arguments or the response file.</p>
<p>To view brief help for DBCA command-line arguments, enter the following command:</p>
<pre dir="ltr">
dbca -help
</pre>
<p>For more detailed argument information, including defaults, view the response file template found on your distribution media. Appendix A of your platform installation guide provides the name and location of this file.</p>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="CIAEJDBE"></a>
<div id="ADMIN11073" class="sect1">
<h2 class="sect1">Creating a Database with the CREATE DATABASE Statement</h2>
<p><a id="ADMIN11069"></a>Using the <code dir="ltr">CREATE</code> <code dir="ltr">DATABASE</code> SQL statement is a more manual approach to creating a database. One advantage of using this statement over using DBCA is that you can create databases from within scripts.</p>
<p>If you use the <code dir="ltr">CREATE DATABASE</code> statement, you must complete additional actions before you have an operational database. These actions include building views on the data dictionary tables and installing standard PL/SQL packages. You perform these actions by running the supplied scripts.</p>
<p>If you have existing scripts for creating your database, consider editing those scripts to take advantage of new Oracle Database features.</p>
<p>The instructions in this section apply to <span class="italic">single-instance installations only</span>. See the Oracle Real Application Clusters (Oracle RAC) installation guide for your platform for instructions for creating an Oracle RAC database.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
<a id="sthref154"></a><span class="italic">Single-instance</span> does not mean that only one Oracle instance can reside on a single host computer. In fact, multiple Oracle instances (and their associated databases) can run on a single host computer. A <span class="bold">single-instance database</span> is a database that is accessed by only one Oracle instance, as opposed to an Oracle RAC database, which is accessed concurrently by multiple Oracle instances on multiple nodes. See <a class="olink RACAD" href="../../rac.112/e41960/toc.htm"><span class="italic">Oracle Real Application Clusters Administration and Deployment Guide</span></a> for more information on Oracle RAC.</div>
<p>Complete the following steps to create a database with the <code dir="ltr">CREATE</code> <code dir="ltr">DATABASE</code> statement. The examples create a database named <code dir="ltr">mynewdb</code>.</p>
<p><a href="#i1008816">Step 1: Specify an Instance Identifier (SID)</a></p>
<p><a href="#CIAHEAEE">Step 2: Ensure That the Required Environment Variables Are Set</a></p>
<p><a href="#i1008823">Step 3: Choose a Database Administrator Authentication Method</a></p>
<p><a href="#CIACJGDI">Step 4: Create the Initialization Parameter File</a></p>
<p><a href="#CIAEBAFH">Step 5: (Windows Only) Create an Instance</a></p>
<p><a href="#i1008957">Step 6: Connect to the Instance</a></p>
<p><a href="#i1016637">Step 7: Create a Server Parameter File</a></p>
<p><a href="#i1008962">Step 8: Start the Instance</a></p>
<p><a href="#i1008985">Step 9: Issue the CREATE DATABASE Statement</a></p>
<p><a href="#i1009102">Step 10: Create Additional Tablespaces</a></p>
<p><a href="#i1009122">Step 11: Run Scripts to Build Data Dictionary Views</a></p>
<p><a href="#i1009152">Step 12: (Optional) Run Scripts to Install Additional Options</a></p>
<p><a href="#i1009175">Step 13: Back Up the Database.</a></p>
<p><a href="#CIAGICGI">Step 14: (Optional) Enable Automatic Instance Startup</a></p>
<div class="infoboxnotealso">
<p class="notep1">Tip:</p>
If you are using Oracle Automatic Storage Management (Oracle ASM) to manage your disk storage, you must start the Oracle ASM instance and configure your disk groups before performing these steps. For information about Automatic Storage Management, see <a class="olink OSTMG" href="../e18951/toc.htm"><span class="italic">Oracle Automatic Storage Management Administrator's Guide</span></a>.</div>
<a id="i1008816"></a>
<div id="ADMIN11074" class="sect2">
<h3 class="sect2">Step 1: Specify an Instance Identifier (SID)</h3>
<p><a id="sthref155"></a><a id="sthref156"></a>Decide on a unique Oracle system identifier (SID) for your instance, open a command window, and set the <code dir="ltr">ORACLE_SID</code> environment variable. Use this command window for the subsequent steps.</p>
<p><code dir="ltr">ORACLE_SID</code> is used to distinguish this instance from other Oracle Database instances that you may create later and run concurrently on the same host computer. Restrictions related to the valid characters in an <code dir="ltr">ORACLE_SID</code> are platform-specific. On some platforms, the SID is case-sensitive.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
It is common practice to set the SID to be equal to the database name. The maximum number of characters for the database name is eight. For more information, see the discussion of the <code dir="ltr">DB_NAME</code> initialization parameter in <a class="olink REFRN10041" href="../../server.112/e40402/initparams064.htm#REFRN10041"><span class="italic">Oracle Database Reference</span></a>.</div>
<p>The following example for UNIX and Linux operating systems sets the SID for the instance that you will connect to in <a href="#i1008957">Step 6: Connect to the Instance</a>:</p>
<ul>
<li>
<p>Bourne, Bash, or Korn shell:</p>
<pre dir="ltr">
ORACLE_SID=mynewdb
export ORACLE_SID
</pre></li>
<li>
<p>C shell:</p>
<pre dir="ltr">
setenv ORACLE_SID mynewdb
</pre></li>
</ul>
<p>The following example sets the SID for the Windows operating system:</p>
<pre dir="ltr">
set ORACLE_SID=mynewdb
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink CNCPT601" href="../../server.112/e40540/startup.htm#CNCPT601"><span class="italic">Oracle Database Concepts</span></a> for background information about the Oracle instance</div>
</div>
<!-- class="sect2" -->
<a id="CIAHEAEE"></a>
<div id="ADMIN12480" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Step 2: Ensure That the Required Environment Variables Are Set</h3>
<p>Depending on your platform, before you can start SQL*Plus (as required in <a href="#i1008957">Step 6: Connect to the Instance</a>), you may have to set environment variables, or at least verify that they are set properly.</p>
<p>For example, on most platforms, <code dir="ltr">ORACLE_SID</code> and <code dir="ltr">ORACLE_HOME</code> must be set. In addition, it is advisable to set the <code dir="ltr">PATH</code> variable to include the <span class="italic">ORACLE_HOME</span>/bin directory. On the UNIX and Linux platforms, you must set these environment variables manually. On the Windows platform, OUI automatically assigns values to <code dir="ltr">ORACLE_HOME</code> and <code dir="ltr">ORACLE_SID</code> in the Windows registry. If you did not create a database upon installation, OUI does not set <code dir="ltr">ORACLE_SID</code> in the registry, and you will have to set the <code dir="ltr">ORACLE_SID</code> environment variable when you create your database later.</p>
</div>
<!-- class="sect2" -->
<a id="i1008823"></a>
<div id="ADMIN11075" class="sect2">
<h3 class="sect2">Step 3: Choose a Database Administrator Authentication Method</h3>
<p>You must be authenticated and granted appropriate system privileges in order to create a database. You can be authenticated as an administrator with the required privileges in the following ways:</p>
<ul>
<li>
<p>With a password file</p>
</li>
<li>
<p>With operating system authentication</p>
</li>
</ul>
<p>In this step, you decide on an authentication method.</p>
<p>To be authenticated with a password file, create the password file as described in <a href="dba.htm#i1006789">"Creating and Maintaining a Password File"</a>. To be authenticated with operating system authentication, ensure that you log in to the host computer with a user account that is a member of the appropriate operating system user group. On the UNIX and Linux platforms, for example, this is typically the <code dir="ltr">dba</code> user group. On the Windows platform, the user installing the Oracle software is automatically placed in the required user group.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="dba.htm#i1006444">"About Database Administrator Security and Privileges"</a></p>
</li>
<li>
<p><a href="dba.htm#i1006534">"Database Administrator Authentication"</a> for information about password files and operating system authentication</p>
</li>
</ul>
</div>
</div>
<!-- class="sect2" -->
<a id="CIACJGDI"></a>
<div id="ADMIN11076" class="sect2">
<h3 class="sect2">Step 4: Create the Initialization Parameter File</h3>
<p><a id="sthref157"></a><a id="sthref158"></a>When an Oracle instance starts, it reads an initialization parameter file. This file can be a text file, which can be created and modified with a text editor, or a binary file, which is created and dynamically modified by the database. The binary file, which is preferred, is called a <span class="bold">server parameter file</span>. In this step, you create a text initialization parameter file. In a later step, you create a server parameter file from the text file.</p>
<p>One way to create the text initialization parameter file is to edit the sample presented in <a href="#CIAGFFIE">"Sample Initialization Parameter File"</a>.</p>
<p>If you create the initialization parameter file manually, ensure that it contains at least the parameters listed in <a href="#BABCACIJ">Table 2-2</a>. All other parameters not listed have default values.</p>
<div id="ADMIN12919" class="tblformal">
<p class="titleintable"><a id="sthref159"></a><a id="BABCACIJ"></a>Table 2-2 Recommended Minimum Initialization Parameters</p>
<table class="cellalignment1338" title="Recommended Minimum Initialization Parameters" summary="This table contains 3 columns: Parameter name, Mandatory (Y or N), Comments. It contains 3 rows" dir="ltr">
<thead>
<tr class="cellalignment1327">
<th class="cellalignment1334" id="r1c1-t10">Parameter Name</th>
<th class="cellalignment1334" id="r1c2-t10">Mandatory</th>
<th class="cellalignment1334" id="r1c3-t10">Notes</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1327">
<td class="cellalignment1335" id="r2c1-t10" headers="r1c1-t10">
<p><code dir="ltr">DB_NAME</code></p>
</td>
<td class="cellalignment1335" headers="r2c1-t10 r1c2-t10">
<p>Yes</p>
</td>
<td class="cellalignment1335" headers="r2c1-t10 r1c3-t10">
<p>Database identifier. Must correspond to the value used in the <code dir="ltr">CREATE</code> <code dir="ltr">DATABASE</code> statement. Maximum 8 characters.</p>
</td>
</tr>
<tr class="cellalignment1327">
<td class="cellalignment1335" id="r3c1-t10" headers="r1c1-t10">
<p><code dir="ltr">CONTROL_FILES</code></p>
</td>
<td class="cellalignment1335" headers="r3c1-t10 r1c2-t10">
<p>No</p>
</td>
<td class="cellalignment1335" headers="r3c1-t10 r1c3-t10">
<p>Strongly recommended. If not provided, then the database instance creates one control file in the same location as the initialization parameter file. Providing this parameter enables you to multiplex control files. See <a href="control.htm#i1006257">"Creating Initial Control Files"</a> for more information.</p>
</td>
</tr>
<tr class="cellalignment1327">
<td class="cellalignment1335" id="r4c1-t10" headers="r1c1-t10">
<p><code dir="ltr">MEMORY_TARGET</code></p>
</td>
<td class="cellalignment1335" headers="r4c1-t10 r1c2-t10">
<p>No</p>
</td>
<td class="cellalignment1335" headers="r4c1-t10 r1c3-t10">
<p>Sets the total amount of memory used by the instance and enables automatic memory management. You can choose other initialization parameters instead of this one for more manual control of memory usage. See <a href="memory.htm#BGBFDFJB">"Configuring Memory Manually"</a>.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<p>For convenience, store your initialization parameter file in the Oracle Database default location, using the default file name. Then when you start your database, it will not be necessary to specify the <code dir="ltr">PFILE</code> clause of the <code dir="ltr">STARTUP</code> command, because Oracle Database automatically looks in the default location for the initialization parameter file.</p>
<p>For more information about initialization parameters and the initialization parameter file, including the default name and location of the initialization parameter file for your platform, see <a href="#i1013946">"About Initialization Parameters and Initialization Parameter Files"</a>.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="#CIAFAFFG">"Specifying Initialization Parameters"</a></p>
</li>
<li>
<p><a class="olink REFRN" href="../e40402/toc.htm"><span class="italic">Oracle Database Reference</span></a> for details on all initialization parameters</p>
</li>
</ul>
</div>
</div>
<!-- class="sect2" -->
<a id="CIAEBAFH"></a>
<div id="ADMIN12481" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Step 5: (Windows Only) Create an Instance</h3>
<p>On the Windows platform, before you can connect to an instance, you must manually create it if it does not already exist. The <code dir="ltr">ORADIM</code> command creates an Oracle instance by creating a new Windows service.</p>
<p>To create an instance:</p>
<ul>
<li>
<p>Enter the following command at a Windows command prompt:</p>
<pre dir="ltr">
oradim -NEW -SID <span class="italic">sid</span> -STARTMODE MANUAL -PFILE <span class="italic">pfile</span>
</pre>
<p>where <code dir="ltr"><span class="codeinlineitalic">sid</span></code> is the desired SID (for example <code dir="ltr">mynewdb</code>) and <code dir="ltr"><span class="codeinlineitalic">pfile</span></code> is the full path to the text initialization parameter file. This command creates the instance but does not start it.</p>
</li>
</ul>
<div class="infobox-note">
<p class="notep1">Caution:</p>
Do not set the -<code dir="ltr">STARTMODE</code> argument to <code dir="ltr">AUTO</code> at this point, because this causes the new instance to start and attempt to mount the database, which does not exist yet. You can change this parameter to <code dir="ltr">AUTO</code>, if desired, in Step 14.</div>
<p>See the section "Using ORADIM to Administer an Oracle Database Instance" in <a class="olink NTQRF05011" href="../../win.112/e10845/create.htm#NTQRF05011"><span class="italic">Oracle Database Platform Guide for Microsoft Windows</span></a> for more information on the <code dir="ltr">ORADIM</code> command.</p>
</div>
<!-- class="sect2" -->
<a id="i1008957"></a>
<div id="ADMIN11077" class="sect2">
<h3 class="sect2">Step 6: Connect to the Instance</h3>
<p>Start SQL*Plus and connect to your Oracle Database instance with the <code dir="ltr">SYSDBA</code> system privilege.</p>
<ul>
<li>
<p>To authenticate with a password file, enter the following commands, and then enter the <code dir="ltr">SYS</code> password when prompted:</p>
<pre dir="ltr">
$ sqlplus /nolog
SQL&gt; CONNECT SYS AS SYSDBA
</pre></li>
<li>
<p>To authenticate with operating system authentication, enter the following commands:</p>
<pre dir="ltr">
$ sqlplus /nolog
SQL&gt; CONNECT / AS SYSDBA
</pre></li>
</ul>
<p>SQL*Plus outputs the following message:</p>
<pre dir="ltr">
Connected to an idle instance.
</pre>
<div class="infobox-note">
<p class="notep1">Note:</p>
SQL*Plus may output a message similar to the following:
<pre dir="ltr">
Connected to:
Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - Production
With the Partitioning, OLAP and Data Mining options
</pre>
<p>If so, the instance is already started. You may have connected to the wrong instance. Exit SQL*Plus with the <code dir="ltr">EXIT</code> command, check that <code dir="ltr">ORACLE_SID</code> is set properly, and repeat this step.</p>
</div>
</div>
<!-- class="sect2" -->
<a id="i1016637"></a>
<div id="ADMIN11078" class="sect2">
<h3 class="sect2">Step 7: Create a Server Parameter File</h3>
<p>The server parameter file enables you to change initialization parameters with the <code dir="ltr">ALTER</code> <code dir="ltr">SYSTEM</code> command and persist the changes across a database shutdown and startup. You create the server parameter file from your edited text initialization file.</p>
<p>The following SQL*Plus command reads the text initialization parameter file (PFILE) with the default name from the default location, creates a server parameter file (SPFILE) from the text initialization parameter file, and writes the SPFILE to the default location with the default SPFILE name.</p>
<pre dir="ltr">
CREATE SPFILE FROM PFILE;
</pre>
<p>You can also supply the file name and path for both the PFILE and SPFILE if you are not using default names and locations.</p>
<div class="infoboxnotealso">
<p class="notep1">Tip:</p>
The database must be restarted before the server parameter file takes effect.</div>
<div class="infobox-note">
<p class="notep1">Note:</p>
Although creating a server parameter file is optional at this point, it is recommended. If you do not create a server parameter file, the instance continues to read the text initialization parameter file whenever it starts.
<p><span class="bold">Important</span>&mdash;If you are using Oracle Managed Files and your initialization parameter file does not contain the <code dir="ltr">CONTROL_FILES</code> parameter, then you must create a server parameter file now so the database can save the names and location of the control files that it creates during the <code dir="ltr">CREATE</code> <code dir="ltr">DATABASE</code> statement. See <a href="#i1015127">"Specifying Oracle Managed Files at Database Creation"</a> for more information.</p>
</div>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="#i1013934">"Managing Initialization Parameters Using a Server Parameter File"</a></p>
</li>
<li>
<p><a class="olink SQLRF01315" href="../../server.112/e41084/statements_6016.htm#SQLRF01315"><span class="italic">Oracle Database SQL Language Reference</span></a> for more information on the <code dir="ltr">CREATE</code> <code dir="ltr">SPFILE</code> command</p>
</li>
</ul>
</div>
</div>
<!-- class="sect2" -->
<a id="i1008962"></a>
<div id="ADMIN11079" class="sect2">
<h3 class="sect2">Step 8: Start the Instance <a id="sthref160"></a></h3>
<p>Start an instance without mounting a database. Typically, you do this only during database creation or while performing maintenance on the database. Use the <code dir="ltr">STARTUP</code> command with the <code dir="ltr">NOMOUNT</code> clause. In this example, because the initialization parameter file or server parameter file is stored in the default location, you are not required to specify the <code dir="ltr">PFILE</code> clause:</p>
<pre dir="ltr">
STARTUP NOMOUNT
</pre>
<p>At this point, the instance memory is allocated and its processes are started. The database itself does not yet exist.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="start.htm#g1011160">Chapter 3, "Starting Up and Shutting Down"</a>, to learn how to use the <code dir="ltr">STARTUP</code> command</p>
</li>
<li>
<p><a href="#i1013934">"Managing Initialization Parameters Using a Server Parameter File"</a></p>
</li>
</ul>
</div>
</div>
<!-- class="sect2" -->
<a id="i1008985"></a>
<div id="ADMIN11080" class="sect2">
<h3 class="sect2">Step 9: Issue the CREATE DATABASE Statement</h3>
<p><a id="sthref161"></a><a id="sthref162"></a>To create the new database, use the <code dir="ltr">CREATE</code> <code dir="ltr">DATABASE</code> statement.</p>
<p class="subhead2"><a id="ADMIN12539"></a>Example 1</p>
<p>The following statement creates database <code dir="ltr">mynewdb</code>. This database name must agree with the <code dir="ltr">DB_NAME</code> parameter in the initialization parameter file. This example assumes the following:</p>
<ul>
<li>
<p>The initialization parameter file specifies the number and location of control files with the <code dir="ltr">CONTROL_FILES</code> parameter.</p>
</li>
<li>
<p>The directory <code dir="ltr">/u01/app/oracle/oradata/mynewdb</code> exists.</p>
</li>
<li>
<p>The directories <code dir="ltr">/u01/logs/my</code> and <code dir="ltr">/u02/logs/my</code> exist.</p>
</li>
</ul>
<pre dir="ltr">
CREATE DATABASE mynewdb
   USER SYS IDENTIFIED BY <span class="italic">sys_password</span>
   USER SYSTEM IDENTIFIED BY <span class="italic">system_password</span>
   LOGFILE GROUP 1 ('/u01/logs/my/redo01a.log','/u02/logs/my/redo01b.log') SIZE 100M BLOCKSIZE 512,
           GROUP 2 ('/u01/logs/my/redo02a.log','/u02/logs/my/redo02b.log') SIZE 100M BLOCKSIZE 512,
           GROUP 3 ('/u01/logs/my/redo03a.log','/u02/logs/my/redo03b.log') SIZE 100M BLOCKSIZE 512
   MAXLOGFILES 5
   MAXLOGMEMBERS 5
   MAXLOGHISTORY 1
   MAXDATAFILES 100
   CHARACTER SET AL32UTF8
   NATIONAL CHARACTER SET AL16UTF16
   EXTENT MANAGEMENT LOCAL
   DATAFILE '/u01/app/oracle/oradata/mynewdb/system01.dbf' SIZE 325M REUSE
   SYSAUX DATAFILE '/u01/app/oracle/oradata/mynewdb/sysaux01.dbf' SIZE 325M REUSE
   DEFAULT TABLESPACE users
      DATAFILE '/u01/app/oracle/oradata/mynewdb/users01.dbf'
      SIZE 500M REUSE AUTOEXTEND ON MAXSIZE UNLIMITED
   DEFAULT TEMPORARY TABLESPACE tempts1
      TEMPFILE '/u01/app/oracle/oradata/mynewdb/temp01.dbf'
      SIZE 20M REUSE
   UNDO TABLESPACE undotbs
      DATAFILE '/u01/app/oracle/oradata/mynewdb/undotbs01.dbf'
      SIZE 200M REUSE AUTOEXTEND ON MAXSIZE UNLIMITED;
</pre>
<p>A database is created with the following characteristics:</p>
<ul>
<li>
<p>The database is named <code dir="ltr">mynewdb</code>. Its global database name is <code dir="ltr">mynewdb.us.example.com</code>, where the domain portion (<code dir="ltr">us.example.com</code>) is taken from the initialization parameter file. See <a href="#i1013998">"Determining the Global Database Name"</a>.</p>
</li>
<li>
<p>Three control files are created as specified by the <code dir="ltr">CONTROL_FILES</code> initialization parameter, which was set before database creation in the initialization parameter file. See <a href="#CIAGFFIE">"Sample Initialization Parameter File"</a> and <a href="#i1014044">"Specifying Control Files"</a>.</p>
</li>
<li>
<p>The passwords for user accounts <code dir="ltr">SYS</code> and <code dir="ltr">SYSTEM</code> are set to the values that you specified. Beginning with Release 11<span class="italic">g</span>, the passwords are case-sensitive. The two clauses that specify the passwords for <code dir="ltr">SYS</code> and <code dir="ltr">SYSTEM</code> are not mandatory in this release of Oracle Database. However, if you specify either clause, then you must specify both clauses. For further information about the use of these clauses, see <a href="#i1009226">"Protecting Your Database: Specifying Passwords for Users SYS and SYSTEM"</a>.</p>
</li>
<li>
<p>The new database has three redo log file groups, each with two members, as specified in the <code dir="ltr">LOGFILE</code> clause. <code dir="ltr">MAXLOGFILES</code>, <code dir="ltr">MAXLOGMEMBERS</code>, and <code dir="ltr">MAXLOGHISTORY</code> define limits for the redo log. See <a href="onlineredo.htm#i1006351">"Choosing the Number of Redo Log Files"</a>. The block size for the redo logs is set to 512 bytes, the same size as physical sectors on disk. The <code dir="ltr">BLOCKSIZE</code> clause is optional if block size is to be the same as physical sector size (the default). Typical sector size and thus typical block size is 512. Permissible values for <code dir="ltr">BLOCKSIZE</code> are 512, 1024, and 4096. For newer disks with a 4K sector size, optionally specify <code dir="ltr">BLOCKSIZE</code> as 4096. See <a href="onlineredo.htm#CHDFBDJC">"Planning the Block Size of Redo Log Files"</a> for more information.</p>
</li>
<li>
<p><code dir="ltr">MAXDATAFILES</code> specifies the maximum number of data files that can be open in the database. This number affects the initial sizing of the control file.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
You can set several limits during database creation. Some of these limits are limited by and affected by operating system limits. For example, if you set <code dir="ltr">MAXDATAFILES</code>, Oracle Database allocates enough space in the control file to store <code dir="ltr">MAXDATAFILES</code> filenames, even if the database has only one data file initially. However, because the maximum control file size is limited and operating system dependent, you might not be able to set all <code dir="ltr">CREATE DATABASE</code> parameters at their theoretical maximums.
<p>For more information about setting limits during database creation, see the <a class="olink SQLRF01204" href="../../server.112/e41084/statements_5004.htm#SQLRF01204"><span class="italic">Oracle Database SQL Language Reference</span></a> and your operating system&ndash;specific Oracle documentation.</p>
</div>
</li>
<li>
<p>The <code dir="ltr">AL32UTF8</code> character set is used to store data in this database.</p>
</li>
<li>
<p>The <code dir="ltr">AL16UTF16</code> character set is specified as the <code dir="ltr">NATIONAL CHARACTER SET,</code> used to store data in columns specifically defined as <code dir="ltr">NCHAR</code>, <code dir="ltr">NCLOB</code>, or <code dir="ltr">NVARCHAR2</code>.</p>
</li>
<li>
<p>The <code dir="ltr"><a id="sthref163"></a>SYSTEM</code> tablespace, consisting of the operating system file <code dir="ltr">/u01/app/oracle/oradata/mynewdb/system01.dbf</code> is created as specified by the <code dir="ltr">DATAFILE</code> clause. If a file with that name already exists, then it is overwritten.</p>
</li>
<li>
<p>The <code dir="ltr"><a id="sthref164"></a>SYSTEM</code> tablespace is created as a locally managed tablespace. See <a href="#i1011260">"Creating a Locally Managed SYSTEM Tablespace"</a>.</p>
</li>
<li>
<p>A <code dir="ltr"><a id="sthref165"></a>SYSAUX</code> tablespace is created, consisting of the operating system file <code dir="ltr">/u01/app/oracle/oradata/mynewdb/sysaux01.dbf</code> as specified in the <code dir="ltr"><a id="sthref166"></a>SYSAUX DATAFILE</code> clause. See <a href="#i1011308">"About the SYSAUX Tablespace"</a>.</p>
</li>
<li>
<p>The <code dir="ltr">DEFAULT</code> <code dir="ltr">TABLESPACE</code> clause creates and names a default permanent tablespace for this database.</p>
</li>
<li>
<p>The <code dir="ltr"><a id="sthref167"></a>DEFAULT TEMPORARY TABLESPACE</code> clause creates and names a <a id="sthref168"></a>default temporary tablespace for this database. See <a href="#i1009290">"Creating a Default Temporary Tablespace"</a>.</p>
</li>
<li>
<p>The <code dir="ltr"><a id="sthref169"></a>UNDO TABLESPACE</code> clause creates and names an <a id="sthref170"></a>undo tablespace that is used to store undo data for this database if you have specified <code dir="ltr">UNDO_MANAGEMENT=AUTO</code> in the initialization parameter file. If you omit this parameter, it defaults to <code dir="ltr">AUTO</code>. See <a href="#i1009264">"Using Automatic Undo Management: Creating an Undo Tablespace"</a>.</p>
</li>
<li>
<p>Redo log files will not initially be archived, because the <code dir="ltr">ARCHIVELOG</code> clause is not specified in this <code dir="ltr">CREATE</code> <code dir="ltr">DATABASE</code> statement. This is customary during database creation. You can later use an <code dir="ltr">ALTER DATABASE</code> statement to switch to <code dir="ltr">ARCHIVELOG</code> mode. The initialization parameters in the initialization parameter file for <code dir="ltr">mynewdb</code> relating to archiving are <code dir="ltr">LOG_ARCHIVE_DEST_1</code> and <code dir="ltr">LOG_ARCHIVE_FORMAT</code>. See <a href="archredo.htm#g1015189">Chapter 13, "Managing Archived Redo Logs"</a>.</p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">Tips:</p>
<ul>
<li>
<p>Ensure that all directories used in the <code dir="ltr">CREATE</code> <code dir="ltr">DATABASE</code> statement exist. The <code dir="ltr">CREATE</code> <code dir="ltr">DATABASE</code> statement does not create directories.</p>
</li>
<li>
<p>If you are not using Oracle Managed Files, then every tablespace clause must include a <code dir="ltr">DATAFILE</code> or <code dir="ltr">TEMPFILE</code> clause.</p>
</li>
<li>
<p>If database creation fails, then you can look at the alert log to determine the reason for the failure and to determine corrective actions. See <a href="diag.htm#CHDGCEIH">"Viewing the Alert Log"</a>. If you receive an error message that contains a process number, then examine the trace file for that process. Look for the trace file that contains the process number in the trace file name. See <a href="diag.htm#CHDIHIBA">"Finding Trace Files"</a> for more information.</p>
</li>
<li>
<p>To resubmit the <code dir="ltr">CREATE</code> <code dir="ltr">DATABASE</code> statement after a failure, you must first shut down the instance and delete any files created by the previous <code dir="ltr">CREATE</code> <code dir="ltr">DATABASE</code> statement.</p>
</li>
</ul>
</div>
<p class="subhead2"><a id="ADMIN12540"></a>Example 2</p>
<p>This example illustrates creating a database with Oracle Managed Files, which enables you to use a much simpler <code dir="ltr">CREATE</code> <code dir="ltr">DATABASE</code> statement. To use Oracle Managed Files, the initialization parameter <code dir="ltr">DB_CREATE_FILE_DEST</code> must be set. This parameter defines the base directory for the various database files that the database creates and automatically names. The following statement is an example of setting this parameter in the initialization parameter file:</p>
<pre dir="ltr">
DB_CREATE_FILE_DEST='/u01/app/oracle/oradata'
</pre>
<p>With Oracle Managed Files and the following <code dir="ltr">CREATE</code> <code dir="ltr">DATABASE</code> statement, the database creates the <code dir="ltr">SYSTEM</code> and <code dir="ltr">SYSAUX</code> tablespaces, creates the additional tablespaces specified in the statement, and chooses default sizes and properties for all data files, control files, and redo log files. Note that these properties and the other default database properties set by this method may not be suitable for your production environment, so it is recommended that you examine the resulting configuration and modify it if necessary.</p>
<pre dir="ltr">
CREATE DATABASE mynewdb
USER SYS IDENTIFIED BY <span class="italic">sys_password</span>
USER SYSTEM IDENTIFIED BY <span class="italic">system_password</span>
EXTENT MANAGEMENT LOCAL
DEFAULT TEMPORARY TABLESPACE temp
UNDO TABLESPACE undotbs1
DEFAULT TABLESPACE users;
</pre>
<div class="infoboxnotealso">
<p class="notep1">Tip:</p>
If your <code dir="ltr">CREATE</code> <code dir="ltr">DATABASE</code> statement fails, and if you did not complete Step 7, then ensure that there is not a pre-existing server parameter file (SPFILE) for this instance that is setting initialization parameters in an unexpected way. For example, an SPFILE contains a setting for the complete path to all control files, and the <code dir="ltr">CREATE</code> <code dir="ltr">DATABASE</code> statement fails if those control files do not exist. Ensure that you shut down and restart the instance (with <code dir="ltr">STARTUP</code> <code dir="ltr">NOMOUNT</code>) after removing an unwanted SPFILE. See <a href="#i1013934">"Managing Initialization Parameters Using a Server Parameter File"</a> for more information.</div>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="#i1009187">"Specifying CREATE DATABASE Statement Clauses"</a></p>
</li>
<li>
<p><a href="#i1015127">"Specifying Oracle Managed Files at Database Creation"</a></p>
</li>
<li>
<p><a href="omf.htm#g1018000">Chapter 17, "Using Oracle Managed Files"</a></p>
</li>
<li>
<p><a class="olink SQLRF01204" href="../../server.112/e41084/statements_5004.htm#SQLRF01204"><span class="italic">Oracle Database SQL Language Reference</span></a> for more information about specifying the clauses and parameter values for the <code dir="ltr">CREATE DATABASE</code> statement</p>
</li>
</ul>
</div>
</div>
<!-- class="sect2" -->
<a id="i1009102"></a>
<div id="ADMIN11081" class="sect2">
<h3 class="sect2">Step 10: Create Additional Tablespaces</h3>
<p>To make the database functional, you must create additional tablespaces for your application data. The following sample script creates some additional tablespaces:</p>
<pre dir="ltr">
CREATE TABLESPACE apps_tbs LOGGING 
     DATAFILE '/u01/app/oracle/oradata/mynewdb/apps01.dbf' 
     SIZE 500M REUSE AUTOEXTEND ON NEXT  1280K MAXSIZE UNLIMITED 
     EXTENT MANAGEMENT LOCAL;
-- create a tablespace for indexes, separate from user tablespace (optional)
CREATE TABLESPACE indx_tbs LOGGING 
     DATAFILE '/u01/app/oracle/oradata/mynewdb/indx01.dbf' 
     SIZE 100M REUSE AUTOEXTEND ON NEXT  1280K MAXSIZE UNLIMITED 
     EXTENT MANAGEMENT LOCAL;
</pre>
<p>For information about creating tablespaces, see <a href="tspaces.htm#g1029288">Chapter 14, "Managing Tablespaces"</a>.</p>
</div>
<!-- class="sect2" -->
<a id="i1009122"></a>
<div id="ADMIN11082" class="sect2">
<h3 class="sect2">Step 11: Run Scripts to Build Data Dictionary Views<a id="sthref171"></a><a id="sthref172"></a><a id="sthref173"></a><a id="sthref174"></a></h3>
<p>Run the scripts necessary to build data dictionary views, synonyms, and PL/SQL packages, and to support proper functioning of SQL*Plus.</p>
<p>In SQL*Plus, connect to your Oracle Database instance with the <code dir="ltr">SYSDBA</code> administrative privilege:</p>
<pre dir="ltr">
@?/rdbms/admin/catalog.sql
@?/rdbms/admin/catproc.sql
@?/rdbms/admin/utlrp.sql
</pre>
<p>In SQL*Plus, connect to your Oracle Database instance as <code dir="ltr">SYSTEM</code> user:</p>
<pre dir="ltr">
@?/sqlplus/admin/pupbld.sql
</pre>
<p>The at-sign (<code dir="ltr">@</code>) is shorthand for the command that runs a SQL*Plus script. The question mark (<code dir="ltr">?</code>) is a SQL*Plus variable indicating the Oracle home directory. The following table contains descriptions of the scripts:</p>
<div class="inftblinformal">
<table class="cellalignment1333" title="Data Dictionary Scripts" summary="The left column lists scripts by name, the right column describes the corresponding script." dir="ltr">
<thead>
<tr class="cellalignment1327">
<th class="cellalignment1334" id="r1c1-t22">Script</th>
<th class="cellalignment1334" id="r1c2-t22">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1327">
<td class="cellalignment1335" id="r2c1-t22" headers="r1c1-t22"><code dir="ltr">CATALOG.SQL</code></td>
<td class="cellalignment1335" headers="r2c1-t22 r1c2-t22">Creates the views of the data dictionary tables, the dynamic performance views, and public synonyms for many of the views. Grants <code dir="ltr">PUBLIC</code> access to the synonyms.</td>
</tr>
<tr class="cellalignment1327">
<td class="cellalignment1335" id="r3c1-t22" headers="r1c1-t22"><code dir="ltr">CATPROC.SQL</code></td>
<td class="cellalignment1335" headers="r3c1-t22 r1c2-t22">Runs all scripts required for or used with PL/SQL.</td>
</tr>
<tr class="cellalignment1327">
<td class="cellalignment1335" id="r4c1-t22" headers="r1c1-t22"><code dir="ltr">UTLRP.SQL</code></td>
<td class="cellalignment1335" headers="r4c1-t22 r1c2-t22">Recompiles all PL/SQL modules that are in an invalid state, including packages, procedures, and types.</td>
</tr>
<tr class="cellalignment1327">
<td class="cellalignment1335" id="r5c1-t22" headers="r1c1-t22"><code dir="ltr">PUPBLD.SQL</code></td>
<td class="cellalignment1335" headers="r5c1-t22 r1c2-t22">Required for SQL*Plus. Enables SQL*Plus to disable commands by user.</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" --></div>
<!-- class="sect2" -->
<a id="i1009152"></a>
<div id="ADMIN11083" class="sect2">
<h3 class="sect2">Step 12: (Optional) Run Scripts to Install Additional Options</h3>
<p>You may want to run other scripts. The scripts that you run are determined by the features and options you choose to use or install. Many of the scripts available to you are described in the <a class="olink REFRN005" href="../../server.112/e40402/scripts.htm#REFRN005"><span class="italic">Oracle Database Reference.</span></a></p>
<p>If you plan to install other Oracle products to work with this database, then see the installation instructions for those products. Some products require you to create additional data dictionary tables. Usually, command files are provided to create and load these tables into the database data dictionary.</p>
<p>See your Oracle documentation for the specific products that you plan to install for installation and administration instructions.</p>
</div>
<!-- class="sect2" -->
<a id="i1009175"></a>
<div id="ADMIN11084" class="sect2">
<h3 class="sect2">Step 13: Back Up the Database.</h3>
<p><a id="sthref175"></a><a id="sthref176"></a><a id="sthref177"></a>Take a full backup of the database to ensure that you have a complete set of files from which to recover if a media failure occurs. For information on backing up a database, see <a class="olink BRADV" href="../../backup.112/e10642/toc.htm"><span class="italic">Oracle Database Backup and Recovery User's Guide.</span></a></p>
</div>
<!-- class="sect2" -->
<a id="CIAGICGI"></a>
<div id="ADMIN12482" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Step 14: (Optional) Enable Automatic Instance Startup</h3>
<p>You might want to configure the Oracle instance to start automatically when its host computer restarts. See your operating system documentation for instructions. For example, on Windows, use the following command to configure the database service to start the instance upon computer restart:</p>
<pre dir="ltr">
ORADIM -EDIT -SID <span class="italic">sid</span> -STARTMODE AUTO -SRVCSTART SYSTEM [-SPFILE]
</pre>
<p>You must use the <code dir="ltr">-SPFILE</code> argument if you want the instance to read an SPFILE upon automatic restart.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="restart.htm#BABGIGDB">Chapter 4, "Configuring Automatic Restart of an Oracle Database"</a></p>
</li>
<li>
<p>The section "Using ORADIM to Administer an Oracle Database Instance" in <a class="olink NTQRF05011" href="../../win.112/e10845/create.htm#NTQRF05011"><span class="italic">Oracle Database Platform Guide for Microsoft Windows</span></a> for more information on the <code dir="ltr">ORADIM</code> command.</p>
</li>
</ul>
</div>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="i1009187"></a>
<div id="ADMIN11085" class="sect1">
<h2 class="sect1">Specifying CREATE DATABASE Statement Clauses</h2>
<p>When you execute a <code dir="ltr">CREATE</code> <code dir="ltr">DATABASE</code> statement, Oracle Database performs several operations. The actual operations performed depend on the clauses that you specify in the <code dir="ltr">CREATE</code> <code dir="ltr">DATABASE</code> statement and the initialization parameters that you have set. Oracle Database performs at least these operations:</p>
<ul>
<li>
<p>Creates the data files for the database</p>
</li>
<li>
<p>Creates the control files for the database</p>
</li>
<li>
<p>Creates the redo log files for the database and establishes the <code dir="ltr">ARCHIVELOG</code> mode</p>
</li>
<li>
<p>Creates the <code dir="ltr">SYSTEM</code> tablespace</p>
</li>
<li>
<p>Creates the <code dir="ltr">SYSAUX</code> tablespace</p>
</li>
<li>
<p>Creates the data dictionary</p>
</li>
<li>
<p>Sets the character set that stores data in the database</p>
</li>
<li>
<p>Sets the database time zone</p>
</li>
<li>
<p>Mounts and opens the database for use</p>
</li>
</ul>
<p>This section discusses several of the clauses of the <code dir="ltr">CREATE</code> <code dir="ltr">DATABASE</code> statement. It expands upon some of the clauses discussed in <a href="#i1008985">"Step 9: Issue the CREATE DATABASE Statement"</a> and introduces additional ones. Many of the <code dir="ltr">CREATE DATABASE</code> clauses discussed here can be used to simplify the creation and management of your database.</p>
<p>The following topics are contained in this section:</p>
<ul>
<li>
<p><a href="#i1009226">Protecting Your Database: Specifying Passwords for Users SYS and SYSTEM</a></p>
</li>
<li>
<p><a href="#i1011260">Creating a Locally Managed SYSTEM Tablespace</a></p>
</li>
<li>
<p><a href="#i1011308">About the SYSAUX Tablespace</a></p>
</li>
<li>
<p><a href="#i1009264">Using Automatic Undo Management: Creating an Undo Tablespace</a></p>
</li>
<li>
<p><a href="#i1009290">Creating a Default Temporary Tablespace</a></p>
</li>
<li>
<p><a href="#i1015127">Specifying Oracle Managed Files at Database Creation</a></p>
</li>
<li>
<p><a href="#i1015204">Supporting Bigfile Tablespaces During Database Creation</a></p>
</li>
<li>
<p><a href="#i1009404">Specifying the Database Time Zone and Time Zone File</a></p>
</li>
<li>
<p><a href="#i1009449">Specifying FORCE LOGGING Mode</a></p>
</li>
</ul>
<a id="i1009226"></a>
<div id="ADMIN11086" class="sect2">
<h3 class="sect2">Protecting Your Database: Specifying Passwords for Users SYS and SYSTEM</h3>
<p><a id="sthref178"></a><a id="sthref179"></a><a id="sthref180"></a><a id="sthref181"></a><a id="sthref182"></a><a id="sthref183"></a>The clauses of the <code dir="ltr">CREATE</code> <code dir="ltr">DATABASE</code> statement used for specifying the passwords for users <code dir="ltr">SYS</code> and <code dir="ltr">SYSTEM</code> are:</p>
<ul>
<li>
<p><code dir="ltr">USER</code> <code dir="ltr">SYS</code> <code dir="ltr">IDENTIFIED</code> <code dir="ltr">BY</code> <code dir="ltr"><span class="codeinlineitalic">password</span></code></p>
</li>
<li>
<p><code dir="ltr">USER</code> <code dir="ltr">SYSTEM</code> <code dir="ltr">IDENTIFIED</code> <code dir="ltr">BY</code> <code dir="ltr"><span class="codeinlineitalic">password</span></code></p>
</li>
</ul>
<p>If you omit these clauses, then these users are assigned the default passwords <code dir="ltr">change_on_install</code> and <code dir="ltr">manager</code>, respectively. A record is written to the alert log indicating that the default passwords were used. To protect your database, you must change these passwords using the <code dir="ltr">ALTER USER</code> statement immediately after database creation.</p>
<p>Oracle strongly recommends that you specify these clauses, even though they are optional in this release of Oracle Database. The default passwords are commonly known, and if you neglect to change them later, then you leave database vulnerable to attack by malicious users.</p>
<p>When choosing a password, keep in mind that beginning in Release 11<span class="italic">g</span>, passwords are case-sensitive. Also, there may be password formatting requirements for your database. See the section entitled "How Oracle Database Checks the Complexity of Passwords" in <a class="olink DBSEG33223" href="../../network.112/e36292/authentication.htm#DBSEG33223"><span class="italic">Oracle Database Security Guide</span></a> for more information.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#i1009523">"Some Security Considerations"</a></div>
</div>
<!-- class="sect2" -->
<a id="i1011260"></a>
<div id="ADMIN11087" class="sect2">
<h3 class="sect2">Creating a Locally Managed <a id="sthref184"></a>SYSTEM Tablespace</h3>
<p>Specify the <code dir="ltr"><a id="sthref185"></a><a id="sthref186"></a><a id="sthref187"></a><a id="sthref188"></a><a id="sthref189"></a>EXTENT MANAGEMENT LOCAL</code> clause in the <code dir="ltr">CREATE</code> <code dir="ltr">DATABASE</code> statement to create a locally managed <code dir="ltr">SYSTEM</code> tablespace. The <code dir="ltr">COMPATIBLE</code> initialization parameter must be set to 10.0.0 or higher for this statement to be successful. If you do not specify the <code dir="ltr">EXTENT MANAGEMENT LOCAL</code> clause, then by default the database creates a dictionary-managed <code dir="ltr">SYSTEM</code> tablespace. Dictionary-managed tablespaces are deprecated.</p>
<p>If you create your database with a locally managed <code dir="ltr">SYSTEM</code> tablespace, and if you are not using Oracle Managed Files, then ensure that the following conditions are met:</p>
<ul>
<li>
<p>You specify the <code dir="ltr">DEFAULT</code> <code dir="ltr">TEMPORARY</code> <code dir="ltr">TABLESPACE</code> clause in the <code dir="ltr">CREATE</code> <code dir="ltr">DATABASE</code> statement.</p>
</li>
<li>
<p>You include the <code dir="ltr">UNDO TABLESPACE</code> clause in the <code dir="ltr">CREATE</code> <code dir="ltr">DATABASE</code> statement.</p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a class="olink SQLRF01204" href="../../server.112/e41084/statements_5004.htm#SQLRF01204"><span class="italic">Oracle Database SQL Language Reference</span></a> for more specific information about the use of the <code dir="ltr">DEFAULT TEMPORARY TABLESPACE</code> and <code dir="ltr">UNDO TABLESPACE</code> clauses when <code dir="ltr">EXTENT MANAGEMENT LOCAL</code> is specified for the <code dir="ltr">SYSTEM</code> tablespace</p>
</li>
<li>
<p><a href="tspaces.htm#i1013496">"Locally Managed Tablespaces"</a></p>
</li>
<li>
<p><a href="tspaces.htm#i1007147">"Migrating the SYSTEM Tablespace to a Locally Managed Tablespace"</a></p>
</li>
</ul>
</div>
</div>
<!-- class="sect2" -->
<a id="i1011308"></a>
<div id="ADMIN00203" class="sect2">
<h3 class="sect2">About the SYSAUX Tablespace<a id="sthref190"></a><a id="sthref191"></a><a id="sthref192"></a><a id="sthref193"></a></h3>
<p>The <code dir="ltr">SYSAUX</code> tablespace is always created at database creation. The <code dir="ltr">SYSAUX</code> tablespace serves as an auxiliary tablespace to the <code dir="ltr">SYSTEM</code> tablespace. Because it is the default tablespace for many Oracle Database features and products that previously required their own tablespaces, it reduces the number of tablespaces required by the database. It also reduces the load on the <code dir="ltr">SYSTEM</code> tablespace.</p>
<p>You can specify only data file attributes for the <code dir="ltr">SYSAUX</code> tablespace, using the <code dir="ltr">SYSAUX DATAFILE</code> clause in the <code dir="ltr">CREATE</code> <code dir="ltr">DATABASE</code> statement. Mandatory attributes of the <code dir="ltr">SYSAUX</code> tablespace are set by Oracle Database and include:</p>
<ul>
<li>
<p><code dir="ltr">PERMANENT</code></p>
</li>
<li>
<p><code dir="ltr">READ</code> <code dir="ltr">WRITE</code></p>
</li>
<li>
<p><code dir="ltr">EXTENT</code> <code dir="ltr">MANAGMENT</code> <code dir="ltr">LOCAL</code></p>
</li>
<li>
<p><code dir="ltr">SEGMENT</code> <code dir="ltr">SPACE</code> <code dir="ltr">MANAGMENT</code> <code dir="ltr">AUTO</code></p>
</li>
</ul>
<p>You cannot alter these attributes with an <code dir="ltr">ALTER</code> <code dir="ltr">TABLESPACE</code> statement, and any attempt to do so will result in an error. You cannot drop or rename the <code dir="ltr">SYSAUX</code> tablespace.</p>
<p>The size of the <code dir="ltr">SYSAUX</code> tablespace is determined by the size of the database components that occupy <code dir="ltr">SYSAUX</code>. You can view a list of these components by querying the <code dir="ltr">V$SYSAUX_OCCUPANTS</code> view. Based on the initial sizes of these components, the <code dir="ltr">SYSAUX</code> tablespace must be at least 400 MB at the time of database creation. The space requirements of the <code dir="ltr">SYSAUX</code> tablespace will increase after the database is fully deployed, depending on the nature of its use and workload. For more information on how to manage the space consumption of the <code dir="ltr">SYSAUX</code> tablespace on an ongoing basis, see the <a href="tspaces.htm#i1011659">"Managing the SYSAUX Tablespace"</a>.</p>
<p>If you include a <code dir="ltr">DATAFILE</code> clause for the <code dir="ltr">SYSTEM</code> tablespace, then you must specify the <code dir="ltr">SYSAUX DATAFILE</code> clause as well, or the <code dir="ltr">CREATE</code> <code dir="ltr">DATABASE</code> statement will fail. This requirement does not exist if the Oracle Managed Files feature is enabled (see <a href="#i1015127">"Specifying Oracle Managed Files at Database Creation"</a>).</p>
<p>The <code dir="ltr">SYSAUX</code> tablespace has the same security attributes as the <code dir="ltr">SYSTEM</code> tablespace.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
This documentation discusses the creation of the <code dir="ltr">SYSAUX</code> database at database creation. When upgrading from a release of Oracle Database that did not require the <code dir="ltr">SYSAUX</code> tablespace, you must create the <code dir="ltr">SYSAUX</code> tablespace as part of the upgrade process. This is discussed in <a class="olink UPGRD" href="../e23633/toc.htm"><span class="italic">Oracle Database Upgrade Guide</span></a>.</div>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="tspaces.htm#i1011659">"Managing the SYSAUX Tablespace"</a></div>
</div>
<!-- class="sect2" -->
<a id="i1009264"></a>
<div id="ADMIN11088" class="sect2">
<h3 class="sect2">Using Automatic Undo Management: Creating an Undo Tablespace<a id="sthref194"></a><a id="sthref195"></a><a id="sthref196"></a><a id="sthref197"></a><a id="sthref198"></a><a id="sthref199"></a><a id="sthref200"></a><a id="sthref201"></a></h3>
<p>Automatic undo management uses an undo tablespace. To enable automatic undo management, set the <code dir="ltr">UNDO_MANAGEMENT</code> initialization parameter to <code dir="ltr">AUTO</code> in your initialization parameter file. Or, omit this parameter, and the database defaults to automatic undo management. In this mode, undo data is stored in an undo tablespace and is managed by Oracle Database. To define and name the undo tablespace yourself, you must include the <code dir="ltr">UNDO TABLESPACE</code> clause in the <code dir="ltr">CREATE DATABASE</code> statement at database creation time. If you omit this clause, and automatic undo management is enabled, then the database creates a default undo tablespace named <code dir="ltr">SYS_UNDOTBS</code>.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="#i1014292">"Specifying the Method of Undo Space Management"</a></p>
</li>
<li>
<p><a href="undo.htm#g1012303">Chapter 16, "Managing Undo"</a>, for information about the creation and use of undo tablespaces</p>
</li>
</ul>
</div>
</div>
<!-- class="sect2" -->
<a id="i1017247"></a>
<div id="ADMIN11089" class="sect2">
<h3 class="sect2">Creating a Default Permanent Tablespace</h3>
<p>The <code dir="ltr">DEFAULT</code> <code dir="ltr">TABLESPACE</code> clause of the <code dir="ltr">CREATE</code> <code dir="ltr">DATABASE</code> statement specifies a default permanent tablespace for the database. Oracle Database assigns to this tablespace any non-<code dir="ltr">SYSTEM</code> users for whom you do not explicitly specify a different permanent tablespace. If you do not specify this clause, then the <code dir="ltr">SYSTEM</code> tablespace is the default permanent tablespace for non-<code dir="ltr">SYSTEM</code> users. Oracle strongly recommends that you create a default permanent tablespace.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink SQLRF01204" href="../../server.112/e41084/statements_5004.htm#SQLRF01204"><span class="italic">Oracle Database SQL Language Reference</span></a> for the syntax of the <code dir="ltr">DEFAULT TABLESPACE</code> clause of <code dir="ltr">CREATE DATABASE</code> and <code dir="ltr">ALTER DATABASE</code></div>
</div>
<!-- class="sect2" -->
<a id="i1009290"></a>
<div id="ADMIN11090" class="sect2">
<h3 class="sect2">Creating a Default Temporary Tablespace</h3>
<p><a id="sthref202"></a>The <code dir="ltr">DEFAULT TEMPORARY TABLESPACE</code> clause of the <a id="sthref203"></a><a id="sthref204"></a><a id="sthref205"></a><a id="sthref206"></a><code dir="ltr">CREATE</code> <code dir="ltr">DATABASE</code> statement creates a default temporary tablespace for the database. Oracle Database assigns this tablespace as the temporary tablespace for users who are not explicitly assigned a temporary tablespace.</p>
<p>You can explicitly assign a temporary tablespace or tablespace group to a user in the <code dir="ltr">CREATE USER</code> statement. However, if you do not do so, and if no default temporary tablespace has been specified for the database, then by default these users are assigned the <code dir="ltr">SYSTEM</code> tablespace as their temporary tablespace. It is not good practice to store temporary data in the <code dir="ltr">SYSTEM</code> tablespace, and it is cumbersome to assign every user a temporary tablespace individually. Therefore, Oracle recommends that you use the <code dir="ltr">DEFAULT TEMPORARY TABLESPACE</code> clause of <code dir="ltr">CREATE</code> <code dir="ltr">DATABASE</code>.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
When you specify a locally managed <code dir="ltr">SYSTEM</code> tablespace, the <code dir="ltr">SYSTEM</code> tablespace <span class="italic">cannot</span> be used as a temporary tablespace. In this case you must create a default temporary tablespace. This behavior is explained in <a href="#i1011260">"Creating a Locally Managed SYSTEM Tablespace"</a>.</div>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a class="olink SQLRF01204" href="../../server.112/e41084/statements_5004.htm#SQLRF01204"><span class="italic">Oracle Database SQL Language Reference</span></a> for the syntax of the <code dir="ltr">DEFAULT TEMPORARY TABLESPACE</code> clause of <code dir="ltr">CREATE DATABASE</code> and <code dir="ltr">ALTER DATABASE</code></p>
</li>
<li>
<p><a href="tspaces.htm#i1013552">"Temporary Tablespaces"</a> for information about creating and using temporary tablespaces</p>
</li>
<li>
<p><a href="tspaces.htm#i1008609">"Multiple Temporary Tablespaces: Using Tablespace Groups"</a> for information about creating and using temporary tablespace groups</p>
</li>
</ul>
</div>
</div>
<!-- class="sect2" -->
<a id="i1015127"></a>
<div id="ADMIN11091" class="sect2">
<h3 class="sect2">Specifying Oracle Managed Files at Database Creation<a id="sthref207"></a></h3>
<p>You can minimize the number of clauses and parameters that you specify in your <code dir="ltr">CREATE</code> <code dir="ltr">DATABASE</code> statement by using the <a id="sthref208"></a>Oracle Managed Files feature. You do this by specifying either a directory or Oracle Automatic Storage Management (Oracle ASM) disk group in which your files are created and managed by Oracle Database.</p>
<p>By including any of the initialization parameters <code dir="ltr">DB_CREATE_FILE_DEST,</code> <code dir="ltr">DB_CREATE_ONLINE_LOG_DEST_</code><code dir="ltr"><span class="codeinlineitalic">n</span></code>, or <code dir="ltr">DB_RECOVERY_FILE_DEST</code> in your initialization parameter file, you instruct Oracle Database to create and manage the underlying operating system files of your database. Oracle Database will automatically create and manage the operating system files for the following database structures, depending on which initialization parameters you specify and how you specify clauses in your <code dir="ltr">CREATE</code> <code dir="ltr">DATABASE</code> statement:</p>
<ul>
<li>
<p>Tablespaces and their data files</p>
</li>
<li>
<p>Temporary tablespaces and their temp files</p>
</li>
<li>
<p>Control files</p>
</li>
<li>
<p>Redo log files</p>
</li>
<li>
<p>Archived redo log files</p>
</li>
<li>
<p>Flashback logs</p>
</li>
<li>
<p>Block change tracking files</p>
</li>
<li>
<p>RMAN backups</p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#i1016119">"Specifying a Fast Recovery Area"</a> for information about setting initialization parameters that create a Fast Recovery Area</div>
<p>The following <code dir="ltr">CREATE</code> <code dir="ltr">DATABASE</code> statement shows briefly how the Oracle Managed Files feature works, assuming you have specified required initialization parameters:</p>
<pre dir="ltr">
CREATE DATABASE mynewdb
     USER SYS IDENTIFIED BY <span class="italic">sys_password</span>
     USER SYSTEM IDENTIFIED BY <span class="italic">system_password</span>
     EXTENT MANAGEMENT LOCAL
     UNDO TABLESPACE undotbs
     DEFAULT TEMPORARY TABLESPACE tempts1
     DEFAULT TABLESPACE users;
</pre>
<ul>
<li>
<p>The <code dir="ltr">SYSTEM</code> tablespace is created as a locally managed tablespace. Without the <code dir="ltr">EXTENT</code> <code dir="ltr">MANAGEMENT</code> <code dir="ltr">LOCAL</code> clause, the <code dir="ltr">SYSTEM</code> tablespace is created as dictionary managed, which is not recommended.</p>
</li>
<li>
<p>No <code dir="ltr">DATAFILE</code> clause is specified, so the database creates an Oracle managed data file for the <code dir="ltr">SYSTEM</code> tablespace.</p>
</li>
<li>
<p>No <code dir="ltr">LOGFILE</code> clauses are included, so the database creates two Oracle managed redo log file groups.</p>
</li>
<li>
<p>No <code dir="ltr">SYSAUX DATAFILE</code> is included, so the database creates an Oracle managed data file for the <code dir="ltr">SYSAUX</code> tablespace.</p>
</li>
<li>
<p>No <code dir="ltr">DATAFILE</code> subclause is specified for the <code dir="ltr">UNDO TABLESPACE</code> and <code dir="ltr">DEFAULT</code> <code dir="ltr">TABLESPACE</code> clauses, so the database creates an Oracle managed data file for each of these tablespaces.</p>
</li>
<li>
<p>No <code dir="ltr">TEMPFILE</code> subclause is specified for the <code dir="ltr">DEFAULT TEMPORARY TABLESPACE</code> clause, so the database creates an Oracle managed temp file.</p>
</li>
<li>
<p>If no <code dir="ltr">CONTROL_FILES</code> initialization parameter is specified in the initialization parameter file, then the database also creates an Oracle managed control file.</p>
</li>
<li>
<p>If you are using a server parameter file (see <a href="#i1013934">"Managing Initialization Parameters Using a Server Parameter File"</a>), then the database automatically sets the appropriate initialization parameters.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="omf.htm#g1018000">Chapter 17, "Using Oracle Managed Files"</a>, for information about the Oracle Managed Files feature and how to use it</p>
</li>
<li>
<p><a class="olink OSTMG" href="../e18951/toc.htm"><span class="italic">Oracle Automatic Storage Management Administrator's Guide</span></a>. for information about Automatic Storage Management</p>
</li>
</ul>
</div>
</li>
</ul>
</div>
<!-- class="sect2" -->
<a id="i1015204"></a>
<div id="ADMIN00205" class="sect2">
<h3 class="sect2">Supporting Bigfile Tablespaces During Database Creation<a id="sthref209"></a><a id="sthref210"></a><a id="sthref211"></a></h3>
<p>Oracle Database simplifies management of tablespaces and enables support for ultra-large databases by letting you create <span class="bold">bigfile tablespaces</span>. Bigfile tablespaces can contain only one file, but that file can have up to 4G blocks. The maximum number of data files in an Oracle Database is limited (usually to 64K files). Therefore, bigfile tablespaces can significantly enhance the storage capacity of an Oracle Database.</p>
<p>This section discusses the clauses of the <code dir="ltr">CREATE</code> <code dir="ltr">DATABASE</code> statement that let you include support for bigfile tablespaces.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="tspaces.htm#i1010733">"Bigfile Tablespaces"</a> for more information about bigfile tablespaces</div>
<div id="ADMIN11092" class="sect3"><a id="sthref212"></a>
<h4 class="sect3"><a id="sthref213"></a>Specifying the Default Tablespace Type<a id="sthref214"></a><a id="sthref215"></a></h4>
<p>The <code dir="ltr">SET DEFAULT...TABLESPACE</code> clause of the <code dir="ltr">CREATE</code> <code dir="ltr">DATABASE</code> statement determines the default type of tablespace for this database in subsequent <code dir="ltr">CREATE</code> <code dir="ltr">TABLESPACE</code> statements. Specify either <code dir="ltr">SET DEFAULT BIGFILE TABLESPACE</code> or <code dir="ltr">SET DEFAULT SMALLFILE TABLESPACE</code>. If you omit this clause, then the default is a <span class="bold">smallfile tablespace</span>, which is the traditional type of Oracle Database tablespace. A smallfile tablespace can contain up to 1022 files with up to 4M blocks each.</p>
<p>The use of bigfile tablespaces further enhances the Oracle Managed Files feature, because bigfile tablespaces make data files completely transparent for users. SQL syntax for the <code dir="ltr">ALTER</code> <code dir="ltr">TABLESPACE</code> statement has been extended to allow you to perform operations on tablespaces, rather than the underlying data files.</p>
<p>The <code dir="ltr">CREATE</code> <code dir="ltr">DATABASE</code> statement shown in <a href="#i1015127">"Specifying Oracle Managed Files at Database Creation"</a> can be modified as follows to specify that the default type of tablespace is a bigfile tablespace:</p>
<pre dir="ltr">
CREATE DATABASE mynewdb
     USER SYS IDENTIFIED BY <span class="italic">sys_password</span>
     USER SYSTEM IDENTIFIED BY <span class="italic">system_password</span>
     SET DEFAULT BIGFILE TABLESPACE
     UNDO TABLESPACE undotbs
     DEFAULT TEMPORARY TABLESPACE tempts1;
</pre>
<p>To dynamically change the default tablespace type after database creation, use the <code dir="ltr">SET DEFAULT TABLESPACE</code> clause of the <code dir="ltr">ALTER DATABASE</code> statement:</p>
<pre dir="ltr">
ALTER DATABASE SET DEFAULT BIGFILE TABLESPACE;
</pre>
<p>You can determine the current default tablespace type for the database by querying the <code dir="ltr">DATABASE_PROPERTIES</code> data dictionary view as follows:</p>
<pre dir="ltr">
SELECT PROPERTY_VALUE FROM DATABASE_PROPERTIES 
   WHERE PROPERTY_NAME = 'DEFAULT_TBS_TYPE';
</pre></div>
<!-- class="sect3" -->
<div id="ADMIN11093" class="sect3"><!-- infolevel="all" infotype="General" --><a id="sthref216"></a>
<h4 class="sect3">Overriding the Default Tablespace Type<a id="sthref217"></a><a id="sthref218"></a></h4>
<p>The <code dir="ltr">SYSTEM</code> and <code dir="ltr">SYSAUX</code> tablespaces are always created with the default tablespace type. However, you can explicitly override the default tablespace type for the <code dir="ltr">UNDO</code> and <code dir="ltr">DEFAULT</code> <code dir="ltr">TEMPORARY</code> tablespace during the <code dir="ltr">CREATE</code> <code dir="ltr">DATABASE</code> operation.</p>
<p><a id="sthref219"></a><a id="sthref220"></a>For example, you can create a bigfile <code dir="ltr">UNDO</code> tablespace in a database with the default tablespace type of smallfile as follows:</p>
<pre dir="ltr">
CREATE DATABASE mynewdb
...
     BIGFILE UNDO TABLESPACE undotbs
        DATAFILE '/u01/oracle/oradata/mynewdb/undotbs01.dbf'
        SIZE 200M REUSE AUTOEXTEND ON MAXSIZE UNLIMITED;
</pre>
<p><a id="sthref221"></a><a id="sthref222"></a>You can create a smallfile <code dir="ltr">DEFAULT</code> <code dir="ltr">TEMPORARY</code> tablespace in a database with the default tablespace type of bigfile as follows:<a id="sthref223"></a><a id="sthref224"></a></p>
<pre dir="ltr">
CREATE DATABASE mynewdb
   SET DEFAULT BIGFILE TABLESPACE
...
     SMALLFILE DEFAULT TEMPORARY TABLESPACE tempts1
        TEMPFILE '/u01/oracle/oradata/mynewdb/temp01.dbf' 
        SIZE 20M REUSE
...
</pre></div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="i1009404"></a>
<div id="ADMIN11094" class="sect2">
<h3 class="sect2">Specifying the Database Time Zone and Time Zone File</h3>
<p>This section contains:</p>
<ul>
<li>
<p><a href="#BABDGHAJ">Setting the Database Time Zone</a></p>
</li>
<li>
<p><a href="#BABFECIE">About the Database Time Zone Files</a></p>
</li>
<li>
<p><a href="#i1009420">Specifying the Database Time Zone File</a></p>
</li>
</ul>
<a id="BABDGHAJ"></a>
<div id="ADMIN11095" class="sect3">
<h4 class="sect3">Setting the Database Time Zone</h4>
<p>Set the database time zone when the database is created by using the <a id="sthref225"></a><a id="sthref226"></a><a id="sthref227"></a><a id="sthref228"></a><a id="sthref229"></a><code dir="ltr">SET TIME_ZONE</code> clause of the <code dir="ltr">CREATE DATABASE</code> statement. If you do not set the database time zone, then it defaults to the time zone of the host operating system.</p>
<p>You can change the database time zone for a session by using the <code dir="ltr">SET TIME_ZONE</code> clause of the <code dir="ltr">ALTER SESSION</code> statement.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink NLSPG262" href="../../server.112/e10729/ch4datetime.htm#NLSPG262"><span class="italic">Oracle Database Globalization Support Guide</span></a> for more information about setting the database time zone</div>
</div>
<!-- class="sect3" -->
<a id="BABFECIE"></a>
<div id="ADMIN13344" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">About the Database Time Zone Files</h4>
<p>Two time zone files are included in a subdirectory of the Oracle home directory. The <a id="sthref230"></a>time zone files contain the valid time zone names. The following information is also included for each time zone:</p>
<ul>
<li>
<p>Offset from Coordinated Universal Time (UTC)</p>
</li>
<li>
<p>Transition times for Daylight Saving Time</p>
</li>
<li>
<p>Abbreviations for standard time and Daylight Saving Time</p>
</li>
</ul>
<p>The default time zone file is <span class="italic">ORACLE_HOME</span>/oracore/zoneinfo/timezlrg_11.dat. A smaller time zone file with fewer time zones can be found in <span class="italic">ORACLE_HOME</span>/oracore/zoneinfo/timezone_11.dat.</p>
<p>To view the time zone names in the file being used by your database, use the following query:<a id="sthref231"></a></p>
<pre dir="ltr">
SELECT * FROM V$TIMEZONE_NAMES;
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink NLSPG004" href="../../server.112/e10729/ch4datetime.htm#NLSPG004"><span class="italic">Oracle Database Globalization Support Guide</span></a> for more information about managing and selecting time zone files</div>
</div>
<!-- class="sect3" -->
<a id="i1009420"></a>
<div id="ADMIN00201" class="sect3">
<h4 class="sect3">Specifying the Database Time Zone File</h4>
<p>All databases that share information must use the same time zone data file.</p>
<p>The database server always uses the large time zone file by default. If you would like to use the small time zone file on the client and know that all your data will refer only to regions in the small file, you can set the <code dir="ltr">ORA_TZFILE</code> environment variable on the client to the full path name of the timezone_<code dir="ltr"><span class="codeinlineitalic">version</span></code>.dat file on the client, where <code dir="ltr"><span class="codeinlineitalic">version</span></code> matches the time zone file version that is being used by the database server.</p>
<p>If you are already using the default larger time zone file on the client, then it is not practical to change to the smaller time zone file, because the database may contain data with time zones that are not part of the smaller file.</p>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="i1009449"></a>
<div id="ADMIN11096" class="sect2">
<h3 class="sect2">Specifying FORCE LOGGING Mode<a id="sthref232"></a><a id="sthref233"></a></h3>
<p>Some data definition language statements (such as <code dir="ltr">CREATE</code> <code dir="ltr">TABLE</code>) allow the <code dir="ltr">NOLOGGING</code> clause, which causes some database operations not to generate redo records in the database redo log. The <code dir="ltr">NOLOGGING</code> setting can speed up operations that can be easily recovered outside of the database recovery mechanisms, but it can negatively affect media recovery and standby databases.</p>
<p>Oracle Database lets you force the writing of redo records even when <code dir="ltr">NOLOGGING</code> has been specified in DDL statements. The database never generates redo records for temporary tablespaces and temporary segments, so forced logging has no affect for objects.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink SQLRF30009" href="../../server.112/e41084/clauses005.htm#SQLRF30009"><span class="italic">Oracle Database SQL Language Reference</span></a> for information about operations that can be done in <code dir="ltr">NOLOGGING</code> mode</div>
<div id="ADMIN11097" class="sect3"><a id="sthref234"></a>
<h4 class="sect3">Using the FORCE LOGGING Clause</h4>
<p>To put the database into <code dir="ltr">FORCE LOGGING</code> mode, use the <code dir="ltr">FORCE LOGGING</code> clause in the <code dir="ltr">CREATE DATABASE</code> statement. If you do not specify this clause, the database is not placed into <code dir="ltr">FORCE LOGGING</code> mode.</p>
<p>Use the <code dir="ltr">ALTER DATABASE</code> statement to place the database into <code dir="ltr">FORCE LOGGING</code> mode after database creation. This statement can take a considerable time for completion, because it waits for all unlogged direct writes to complete.</p>
<p>You can cancel <code dir="ltr">FORCE LOGGING</code> mode using the following SQL statement:</p>
<pre dir="ltr">
ALTER DATABASE NO FORCE LOGGING;
</pre>
<p>Independent of specifying <code dir="ltr">FORCE LOGGING</code> for the database, you can selectively specify <code dir="ltr">FORCE LOGGING</code> or <code dir="ltr">NO FORCE LOGGING</code> at the tablespace level. However, if <code dir="ltr">FORCE LOGGING</code> mode is in effect for the database, it takes precedence over the tablespace setting. If it is not in effect for the database, then the individual tablespace settings are enforced. Oracle recommends that either the entire database is placed into <code dir="ltr">FORCE LOGGING</code> mode, or individual tablespaces be placed into <code dir="ltr">FORCE LOGGING</code> mode, but not both.</p>
<p>The <code dir="ltr">FORCE LOGGING</code> mode is a persistent attribute of the database. That is, if the database is shut down and restarted, it remains in the same logging mode. However, if you re-create the control file, the database is not restarted in the <code dir="ltr">FORCE LOGGING</code> mode unless you specify the <code dir="ltr"><a id="sthref235"></a>FORCE LOGGING</code> clause in the <code dir="ltr">CREATE CONTROL FILE</code> statement.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="tspaces.htm#i1006743">"Controlling the Writing of Redo Records"</a> for information about using the <code dir="ltr">FORCE LOGGING</code> clause for tablespace creation.</div>
</div>
<!-- class="sect3" -->
<div id="ADMIN11098" class="sect3"><a id="sthref236"></a>
<h4 class="sect3">Performance Considerations of <a id="sthref237"></a>FORCE LOGGING Mode</h4>
<p><code dir="ltr">FORCE LOGGING</code> mode results in some performance degradation. If the primary reason for specifying <code dir="ltr">FORCE LOGGING</code> is to ensure complete media recovery, and there is no standby database active, then consider the following:</p>
<ul>
<li>
<p>How many media failures are likely to happen?</p>
</li>
<li>
<p>How serious is the damage if unlogged direct writes cannot be recovered?</p>
</li>
<li>
<p>Is the performance degradation caused by forced logging tolerable?</p>
</li>
</ul>
<p>If the database is running in <code dir="ltr">NOARCHIVELOG</code> mode, then generally there is no benefit to placing the database in <code dir="ltr">FORCE LOGGING</code> mode. Media recovery is not possible in <code dir="ltr">NOARCHIVELOG</code> mode, so if you combine it with <code dir="ltr">FORCE LOGGING</code>, the result may be performance degradation with little benefit.</p>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="CIAFAFFG"></a>
<div id="ADMIN12541" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Specifying Initialization Parameters</h2>
<p>This section introduces you to <a id="sthref238"></a>some of the basic initialization parameters you can add or edit before you create your new database. The following topics are covered:</p>
<ul>
<li>
<p><a href="#i1013946">About Initialization Parameters and Initialization Parameter Files</a></p>
</li>
<li>
<p><a href="#i1013998">Determining the Global Database Name</a></p>
</li>
<li>
<p><a href="#i1016119">Specifying a Fast Recovery Area</a></p>
</li>
<li>
<p><a href="#i1014044">Specifying Control Files</a></p>
</li>
<li>
<p><a href="#i1014072">Specifying Database Block Sizes</a></p>
</li>
<li>
<p><a href="#i1014287">Specifying the Maximum Number of Processes</a></p>
</li>
<li>
<p><a href="#CIAHAJEI">Specifying the DDL Lock Timeout</a></p>
</li>
<li>
<p><a href="#i1014292">Specifying the Method of Undo Space Management</a></p>
</li>
<li>
<p><a href="#i1014800">About The COMPATIBLE Initialization Parameter</a></p>
</li>
<li>
<p><a href="#i1014312">Setting the License Parameter</a></p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a class="olink REFRN001" href="../../server.112/e40402/initparams_part.htm#REFRN001"><span class="italic">Oracle Database Reference</span></a> for descriptions of all initialization parameters including their default settings</p>
</li>
<li>
<p><a href="memory.htm#BGBCBHEJ">Chapter 6, "Managing Memory"</a> for a discussion of the initialization parameters that pertain to memory management</p>
</li>
</ul>
</div>
</li>
</ul>
<a id="i1013946"></a>
<div id="ADMIN11099" class="sect2">
<h3 class="sect2">About Initialization Parameters and Initialization Parameter Files<a id="sthref239"></a><a id="sthref240"></a></h3>
<p>When an Oracle instance starts, it reads initialization parameters from an initialization parameter file. This file must at a minimum specify the <code dir="ltr">DB_NAME</code> parameter. All other parameters have default values.</p>
<p>The initialization parameter file can be either a read-only text file, a <code dir="ltr">PFILE</code>, or a read/write binary file.</p>
<p>The binary file is called a <span class="bold">server parameter file</span>. A server parameter file enables you to change initialization parameters with <code dir="ltr">ALTER SYSTEM</code> commands and to persist the changes across a shutdown and startup. It also provides a basis for self-tuning by Oracle Database. For these reasons, it is recommended that you use a server parameter file. You can create one manually from your edited text initialization file, or automatically by using Database Configuration Assistant (DBCA) to create your database.</p>
<p>Before you manually create a server parameter file, you can start an instance with a text initialization parameter file. Upon startup, the Oracle instance first searches for a server parameter file in a default location, and if it does not find one, searches for a text initialization parameter file. You can also override an existing server parameter file by naming a text initialization parameter file as an argument of the <code dir="ltr">STARTUP</code> command.</p>
<p>Default file names and locations for the text initialization parameter file are shown in the following table:</p>
<div class="inftblruleinformal">
<table class="cellalignment1333" title="Default Name and Location of Initialization Parameter File" summary="Column 1 lists the platforms, column 2 provides the default file name and column 3 provides the default file location." dir="ltr">
<thead>
<tr class="cellalignment1327">
<th class="cellalignment1334" id="r1c1-t40">Platform</th>
<th class="cellalignment1334" id="r1c2-t40">Default Name</th>
<th class="cellalignment1334" id="r1c3-t40">Default Location</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1327">
<td class="cellalignment1335" id="r2c1-t40" headers="r1c1-t40">UNIX and Linux</td>
<td class="cellalignment1335" headers="r2c1-t40 r1c2-t40"><code dir="ltr">init</code><code dir="ltr"><span class="codeinlineitalic">ORACLE_SID</span></code>.<code dir="ltr">ora</code>
<p>For example, the initialization parameter file for the <code dir="ltr">mynewdb</code> database is named:</p>
<p><code dir="ltr">initmynewdb.ora</code></p>
</td>
<td class="cellalignment1335" headers="r2c1-t40 r1c3-t40"><span class="italic">ORACLE_HOME</span>/<code dir="ltr">dbs</code></td>
</tr>
<tr class="cellalignment1327">
<td class="cellalignment1335" id="r3c1-t40" headers="r1c1-t40">Windows</td>
<td class="cellalignment1335" headers="r3c1-t40 r1c2-t40"><code dir="ltr">init</code><code dir="ltr"><span class="codeinlineitalic">ORACLE_SID</span></code><code dir="ltr">.ora</code></td>
<td class="cellalignment1335" headers="r3c1-t40 r1c3-t40"><span class="italic">ORACLE_HOME</span>\<code dir="ltr">database</code></td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblruleinformal" -->
<p>If you are creating an Oracle database for the first time, Oracle suggests that you minimize the number of parameter values that you alter. As you become more familiar with your database and environment, you can dynamically tune many initialization parameters using the <code dir="ltr">ALTER SYSTEM</code> statement. If you are using a text initialization parameter file, then your changes are effective only for the current instance. To make them permanent, you must update them manually in the initialization parameter file, or they will be lost over the next shutdown and startup of the database. If you are using a server parameter file, then initialization parameter file changes made by the <code dir="ltr">ALTER SYSTEM</code> statement can persist across shutdown and startup.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="#i1013998">"Determining the Global Database Name"</a> for information about the <code dir="ltr">DB_NAME</code> parameter</p>
</li>
<li>
<p><a href="#i1013934">"Managing Initialization Parameters Using a Server Parameter File"</a></p>
</li>
<li>
<p><a href="start.htm#i1006219">"About Initialization Parameter Files and Startup"</a></p>
</li>
</ul>
</div>
<div id="ADMIN12542" class="sect3"><!-- infolevel="all" infotype="General" --><a id="sthref241"></a>
<h4 class="sect3">Text Initialization Parameter File Format</h4>
<p>The text initialization parameter file (PFILE) must contain name/value pairs in one of the following forms:</p>
<ul>
<li>
<p>For parameters that accept only a single value:</p>
<pre dir="ltr">
<span class="italic">parameter_name</span>=<span class="italic">value</span>
</pre></li>
<li>
<p>For parameters that accept one or more values (such as the <code dir="ltr">CONTROL_FILES</code> parameter):</p>
<pre dir="ltr">
<span class="italic">parameter_name</span>=(<span class="italic">value</span>[,<span class="italic">value</span>] ...)
</pre></li>
</ul>
<p>Parameter values of type string must be enclosed in single quotes ('). Case (upper or lower) in filenames is significant only if case is significant on the host operating system.</p>
<p>For parameters that accept multiple values, to enable you to easily copy and paste name/value pairs from the alert log, you can repeat a parameter on multiple lines, where each line contains a different value.</p>
<pre dir="ltr">
control_files='/u01/app/oracle/oradata/orcl/control01.ctl'
control_files='/u01/app/oracle/oradata/orcl/control02.ctl'
control_files='/u01/app/oracle/oradata/orcl/control03.ctl'
</pre>
<p>If you repeat a parameter that does not accept multiple values, then only the last value specified takes effect.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a class="olink REFRN" href="../e40402/toc.htm"><span class="italic">Oracle Database Reference</span></a> for more information about the content and syntax of the text initialization parameter file</p>
</li>
<li>
<p><a href="diag.htm#CHDHEGBH">"Alert Log"</a></p>
</li>
</ul>
</div>
</div>
<!-- class="sect3" -->
<a id="CIAGFFIE"></a>
<div id="ADMIN12543" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Sample Initialization Parameter File</h4>
<p>Oracle Database provides generally appropriate values in a sample text initialization parameter file. You can edit these Oracle-supplied initialization parameters and add others, depending upon your configuration and options and how you plan to tune the database.</p>
<p>The <a id="sthref242"></a>sample text initialization parameter file is named <code dir="ltr">init.ora</code> and is found in the following location on most platforms:</p>
<pre dir="ltr">
<span class="italic">ORACLE_HOME</span>/dbs
</pre>
<p>The following is the content of the sample file:</p>
<pre dir="ltr">
##############################################################################
# Example INIT.ORA file
#
# This file is provided by Oracle Corporation to help you start by providing
# a starting point to customize your RDBMS installation for your site. 
# 
# NOTE: The values that are used in this file are only intended to be used
# as a starting point. You may want to adjust/tune those values to your
# specific hardware and needs. You may also consider using Database
# Configuration Assistant tool (DBCA) to create INIT file and to size your
# initial set of tablespaces based on the user input.
###############################################################################
 
# Change '&lt;ORACLE_BASE&gt;' to point to the oracle base (the one you specify at
# install time)
 
db_name='ORCL'
memory_target=1G
processes = 150
audit_file_dest='&lt;ORACLE_BASE&gt;/admin/orcl/adump'
audit_trail ='db'
db_block_size=8192
db_domain=''
db_recovery_file_dest='&lt;ORACLE_BASE&gt;/flash_recovery_area'
db_recovery_file_dest_size=2G
diagnostic_dest='&lt;ORACLE_BASE&gt;'
dispatchers='(PROTOCOL=TCP) (SERVICE=ORCLXDB)'
open_cursors=300 
remote_login_passwordfile='EXCLUSIVE'
undo_tablespace='UNDOTBS1'
# You may want to ensure that control files are created on separate physical
# devices
control_files = (ora_control1, ora_control2)
compatible ='11.2.0'
</pre></div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="i1013998"></a>
<div id="ADMIN11100" class="sect2">
<h3 class="sect2">Determining the Global Database Name</h3>
<p><a id="sthref243"></a><a id="sthref244"></a><a id="sthref245"></a><a id="sthref246"></a><a id="sthref247"></a>The global database name consists of the user-specified local database name and the location of the database within a network structure. The <code dir="ltr">DB_NAME</code> initialization parameter determines the local name component of the database name, and the <code dir="ltr">DB_DOMAIN</code> parameter, which is optional, indicates the domain (logical location) within a network structure. The combination of the settings for these two parameters must form a database name that is unique within a network.</p>
<p>For example, to create a database with a global database name of <code dir="ltr">test.us.example.com</code>, edit the parameters of the new parameter file as follows:</p>
<pre dir="ltr">
DB_NAME = test
DB_DOMAIN = us.example.com
</pre>
<p>You can rename the <code dir="ltr">GLOBAL_NAME</code> of your database using the <code dir="ltr">ALTER DATABASE RENAME GLOBAL_NAME</code> statement. However, you must also shut down and restart the database after first changing the <code dir="ltr">DB_NAME</code> and <code dir="ltr">DB_DOMAIN</code> initialization parameters and re-creating the control files. Re-creating the control files is easily accomplished with the command <code dir="ltr">ALTER</code> <code dir="ltr">DATABASE</code> <code dir="ltr">BACKUP</code> <code dir="ltr">CONTROLFILE</code> <code dir="ltr">TO</code> <code dir="ltr">TRACE</code>. See <a class="olink BRADV90011" href="../../backup.112/e10642/osbackup.htm#BRADV90011"><span class="italic">Oracle Database Backup and Recovery User's Guide</span></a> for more information.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink SUTIL014" href="../../server.112/e22490/dbnewid.htm#SUTIL014"><span class="italic">Oracle Database Utilities</span></a> for information about using the <code dir="ltr">DBNEWID</code> utility, which is another means of changing a database name</div>
<a id="i1014022"></a>
<div id="ADMIN11101" class="sect3">
<h4 class="sect3">DB_NAME Initialization Parameter</h4>
<p><code dir="ltr"><a id="sthref248"></a><a id="sthref249"></a><a id="sthref250"></a>DB_NAME</code> must be set to a text string of no more than eight characters. During database creation, the name provided for <code dir="ltr">DB_NAME</code> is recorded in the data files, redo log files, and control file of the database. If during database instance startup the value of the <code dir="ltr">DB_NAME</code> parameter (in the parameter file) and the database name in the control file are different, the database does not start.</p>
</div>
<!-- class="sect3" -->
<a id="i1014028"></a>
<div id="ADMIN11102" class="sect3">
<h4 class="sect3">DB_DOMAIN Initialization Parameter</h4>
<p><code dir="ltr"><a id="sthref251"></a><a id="sthref252"></a><a id="sthref253"></a>DB_DOMAIN</code> is a text string that specifies the network domain where the database is created. If the database you are about to create will ever be part of a distributed database system, then give special attention to this initialization parameter before database creation. This parameter is optional.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="part7.htm#g996967">Part I, "Distributed Database Management"</a> for more information about distributed databases</div>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="i1016119"></a>
<div id="ADMIN11103" class="sect2">
<h3 class="sect2">Specifying a Fast Recovery Area<a id="sthref254"></a></h3>
<p>The Fast Recovery Area is a location in which Oracle Database can store and manage files related to backup and recovery. It is distinct from the database area, which is a location for the current database files (data files, control files, and online redo logs).</p>
<p>You specify the Fast Recovery Area with the following initialization parameters:</p>
<ul>
<li>
<p><code dir="ltr">DB_RECOVERY_FILE_DEST</code>: Location of the Fast Recovery Area. This can be a directory, file system, or Automatic Storage Management (Oracle ASM) disk group. It cannot be a raw file system.</p>
<p>In an Oracle Real Application Clusters (Oracle RAC) environment, this location must be on a cluster file system, Oracle ASM disk group, or a shared directory configured through NFS.</p>
</li>
<li>
<p><code dir="ltr">DB_RECOVERY_FILE_DEST_SIZE</code>: Specifies the maximum total bytes to be used by the Fast Recovery Area. This initialization parameter must be specified before <code dir="ltr">DB_RECOVERY_FILE_DEST</code> is enabled.</p>
</li>
</ul>
<p>In an Oracle RAC environment, the settings for these two parameters must be the same on all instances.</p>
<p>You cannot enable these parameters if you have set values for the <code dir="ltr">LOG_ARCHIVE_DEST</code> and <code dir="ltr">LOG_ARCHIVE_DUPLEX_DEST</code> parameters. You must disable those parameters before setting up the Fast Recovery Area. You can instead set values for the <code dir="ltr">LOG_ARCHIVE_DEST_</code><code dir="ltr"><span class="codeinlineitalic">n</span></code> parameters. The <code dir="ltr">LOG_ARCHIVE_DEST_1</code> parameter is implicitly set to point to the Fast Recovery Area if a local archiving location has not been configured and <code dir="ltr">LOG_ARCHIVE_DEST_1</code> value has not been set.</p>
<p>Oracle recommends using a Fast Recovery Area, because it can simplify backup and recovery operations for your database.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink BRADV8183" href="../../backup.112/e10642/rcmconfb.htm#BRADV8183"><span class="italic">Oracle Database Backup and Recovery User's Guide</span></a> to learn how to create and use a Fast Recovery Area</div>
</div>
<!-- class="sect2" -->
<a id="i1014044"></a>
<div id="ADMIN11104" class="sect2">
<h3 class="sect2">Specifying Control Files <a id="sthref255"></a><a id="sthref256"></a><a id="sthref257"></a><a id="sthref258"></a><a id="sthref259"></a><a id="sthref260"></a><a id="sthref261"></a><a id="sthref262"></a></h3>
<p>The <code dir="ltr">CONTROL_FILES</code> initialization parameter specifies one or more control filenames for the database. When you execute the <code dir="ltr">CREATE DATABASE</code> statement, the control files listed in the <code dir="ltr">CONTROL_FILES</code> parameter are created.</p>
<p>If you do not include <code dir="ltr">CONTROL_FILES</code> in the initialization parameter file, then Oracle Database creates a control file in the same directory as the initialization parameter file, using a default operating system&ndash;dependent filename. If you have enabled Oracle Managed Files, the database creates Oracle managed control files.</p>
<p>If you want the database to create new operating system files when creating database control files, the filenames listed in the <code dir="ltr">CONTROL_FILES</code> parameter must not match any filenames that currently exist on your system. If you want the database to reuse or overwrite existing files when creating database control files, ensure that the filenames listed in the <code dir="ltr">CONTROL_FILES</code> parameter match the filenames that are to be reused, and include a <a id="sthref263"></a><code dir="ltr">CONTROLFILE</code> <code dir="ltr">REUSE</code> clause in the <code dir="ltr">CREATE</code> <code dir="ltr">DATABASE</code> statement.</p>
<p><a id="sthref264"></a><a id="sthref265"></a>Oracle strongly recommends you use at least two control files stored on separate physical disk drives for each database.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="control.htm#g1009963">Chapter 11, "Managing Control Files"</a></p>
</li>
<li>
<p><a href="#i1015127">"Specifying Oracle Managed Files at Database Creation"</a></p>
</li>
</ul>
</div>
</div>
<!-- class="sect2" -->
<a id="i1014072"></a>
<div id="ADMIN11105" class="sect2">
<h3 class="sect2">Specifying Database Block Sizes<a id="sthref266"></a><a id="sthref267"></a><a id="sthref268"></a><a id="sthref269"></a></h3>
<p>The <code dir="ltr">DB_BLOCK_SIZE</code> initialization parameter specifies the standard block size for the database. This block size is used for the <code dir="ltr">SYSTEM</code> tablespace and by default in other tablespaces. Oracle Database can support up to four additional nonstandard block sizes.</p>
<div id="ADMIN11106" class="sect3"><a id="sthref270"></a>
<h4 class="sect3">DB_BLOCK_SIZE Initialization Parameter<a id="sthref271"></a></h4>
<p>The most commonly used block size should be picked as the standard block size. In many cases, this is the only block size that you must specify. Typically, <code dir="ltr">DB_BLOCK_SIZE</code> is set to either 4K or 8K. If you do not set a value for this parameter, then the default data block size is operating system specific, which is generally adequate.</p>
<p>You cannot change the block size after database creation except by re-creating the database. If the database block size is different from the operating system block size, then ensure that the database block size is a multiple of the operating system block size. For example, if your operating system block size is 2K (2048 bytes), the following setting for the <code dir="ltr">DB_BLOCK_SIZE</code> initialization parameter is valid:</p>
<pre dir="ltr">
DB_BLOCK_SIZE=4096
</pre>
<p>A larger data block size provides greater efficiency in disk and memory I/O (access and storage of data). Therefore, consider specifying a block size larger than your operating system block size if the following conditions exist:</p>
<ul>
<li>
<p>Oracle Database is on a large computer system with a large amount of memory and fast disk drives. For example, databases controlled by mainframe computers with vast hardware resources typically use a data block size of 4K or greater.</p>
</li>
<li>
<p>The operating system that runs Oracle Database uses a small operating system block size. For example, if the operating system block size is 1K and the default data block size matches this, the database may be performing an excessive amount of disk I/O during normal operation. For best performance in this case, a database block should consist of multiple operating system blocks.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
Your operating system specific Oracle documentation for details about the default block size.</div>
</li>
</ul>
</div>
<!-- class="sect3" -->
<a id="i1014092"></a>
<div id="ADMIN11107" class="sect3">
<h4 class="sect3">Nonstandard Block Sizes<a id="sthref272"></a></h4>
<p>Tablespaces of nonstandard block sizes can be created using the <code dir="ltr">CREATE TABLESPACE</code> statement and specifying the <code dir="ltr">BLOCKSIZE</code> clause. These nonstandard block sizes can have any of the following power-of-two values: 2K, 4K, 8K, 16K or 32K. Platform-specific restrictions regarding the maximum block size apply, so some of these sizes may not be allowed on some platforms.</p>
<p>To use nonstandard block sizes, you must configure subcaches within the buffer cache area of the SGA memory for all of the nonstandard block sizes that you intend to use. The initialization parameters used for configuring these subcaches are described in <a href="memory.htm#i1014121">"Using Automatic Shared Memory Management"</a>.</p>
<p>The ability to specify multiple block sizes for your database is especially useful if you are transporting tablespaces between databases. You can, for example, transport a tablespace that uses a 4K block size from an OLTP environment to a data warehouse environment that uses a standard block size of 8K.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
A 32K block size is valid only on 64-bit platforms.</div>
<div class="infoboxnotealso">
<p class="notep1">Caution:</p>
Oracle recommends against specifying a 2K block size when 4K sector size disks are in use, because performance degradation can occur. For an explanation, see <a href="onlineredo.htm#CHDFBDJC">"Planning the Block Size of Redo Log Files"</a>.</div>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="tspaces.htm#i1006225">"Creating Tablespaces"</a></p>
</li>
<li>
<p><a href="tspaces.htm#i1007169">"Transporting Tablespaces Between Databases"</a></p>
</li>
</ul>
</div>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="i1014287"></a>
<div id="ADMIN11108" class="sect2">
<h3 class="sect2">Specifying the Maximum Number of Processes</h3>
<p>The <code dir="ltr">PROCESSES</code><a id="sthref273"></a><a id="sthref274"></a> initialization parameter determines the maximum number of operating system processes that can be connected to Oracle Database concurrently. The value of this parameter must be a minimum of one for each background process plus one for each user process. The number of background processes will vary according the database features that you are using. For example, if you are using Advanced Queuing or the file mapping feature, then you will have additional background processes. If you are using Automatic Storage Management, then add three additional processes for the database instance.</p>
<p>If you plan on running 50 user processes, a good estimate would be to set the <code dir="ltr">PROCESSES</code> initialization parameter to 70.</p>
</div>
<!-- class="sect2" -->
<a id="CIAHAJEI"></a>
<div id="ADMIN12289" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Specifying the DDL Lock Timeout</h3>
<p>A data definition language (DDL) statement is either nonblocking or blocking, and both types of DDL statements require exclusive locks on internal structures. If these locks are unavailable when a DDL statement runs, then nonblocking and blocking DDL statements behave differently:</p>
<ul>
<li>
<p>Nonblocking DDL waits until every concurrent DML transaction that references the object affected by the DDL either commits or rolls back.</p>
</li>
<li>
<p>Blocking DDL fails, though it might have succeeded if it had been executed subseconds later when the locks become available.</p>
</li>
</ul>
<p>To enable blocking DDL statements to wait for locks, specify a <span class="bold"><a id="sthref275"></a><a id="sthref276"></a>DDL lock timeout</span>&mdash;the number of seconds a DDL command waits for its required locks before failing.</p>
<p>To specify a DDL lock timeout, use the <code dir="ltr">DDL_LOCK_TIMEOUT</code> parameter. The permissible range of values for <code dir="ltr">DDL_LOCK_TIMEOUT</code> is 0 to 1,000,000. The default is 0. You can set <code dir="ltr">DDL_LOCK_TIMEOUT</code> at the system level, or at the session level with an <code dir="ltr">ALTER</code> <code dir="ltr">SESSION</code> statement.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
The <code dir="ltr">DDL_LOCK_TIMOUT</code> parameter does not affect nonblocking DDL statements.</div>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a class="olink REFRN10267" href="../../server.112/e40402/initparams074.htm#REFRN10267"><span class="italic">Oracle Database Reference</span></a></p>
</li>
<li>
<p><a class="olink SQLRF55501" href="../../server.112/e41084/ap_locks.htm#SQLRF55501"><span class="italic">Oracle Database SQL Language Reference</span></a></p>
</li>
</ul>
</div>
</div>
<!-- class="sect2" -->
<a id="i1014292"></a>
<div id="ADMIN11109" class="sect2">
<h3 class="sect2">Specifying the Method of Undo Space Management</h3>
<p>Every Oracle Database must have a method of maintaining information that is used to undo changes to the database. Such information consists of records of the actions of transactions, primarily before they are committed. Collectively these records are called <span class="bold">undo data</span>. This section provides instructions for setting up an environment for automatic undo management using an undo tablespace.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="undo.htm#g1012303">Chapter 16, "Managing Undo"</a></div>
<div id="ADMIN11110" class="sect3"><a id="sthref277"></a>
<h4 class="sect3">UNDO_MANAGEMENT Initialization Parameter</h4>
<p>The <code dir="ltr">UNDO_MANAGEMENT</code> initialization parameter determines whether an instance starts in automatic undo management mode, which stores undo in an undo tablespace. Set this parameter to <code dir="ltr">AUTO</code> to enable automatic undo management mode. Beginning with Release 11<span class="italic">g</span>, <code dir="ltr">AUTO</code> is the default if the parameter is omitted or is null.</p>
</div>
<!-- class="sect3" -->
<div id="ADMIN11111" class="sect3"><a id="sthref278"></a>
<h4 class="sect3"><a id="sthref279"></a><a id="sthref280"></a>UNDO_TABLESPACE Initialization Parameter</h4>
<p>When an instance starts up in automatic undo management mode, it attempts to select an undo tablespace for storage of undo data. If the database was created in automatic undo management mode, then the default undo tablespace (either the system-created <code dir="ltr">SYS_UNDOTBS</code> tablespace or the user-specified undo tablespace) is the undo tablespace used at instance startup. You can override this default for the instance by specifying a value for the <code dir="ltr">UNDO_TABLESPACE</code> initialization parameter. This parameter is especially useful for assigning a particular undo tablespace to an instance in an Oracle Real Application Clusters environment.</p>
<p>If no undo tablespace is specified by the <code dir="ltr">UNDO_TABLESPACE</code> initialization parameter, then the first available undo tablespace in the database is chosen. If no undo tablespace is available, then the instance starts without an undo tablespace, and undo data is written to the <code dir="ltr">SYSTEM</code> tablespace. You should avoid running in this mode.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
When using the <code dir="ltr">CREATE</code> <code dir="ltr">DATABASE</code> statement to create a database, do not include an <code dir="ltr">UNDO_TABLESPACE</code> parameter in the initialization parameter file. Instead, include an <code dir="ltr">UNDO</code> <code dir="ltr">TABLESPACE</code> clause in the <code dir="ltr">CREATE</code> <code dir="ltr">DATABASE</code> statement.</div>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="i1014800"></a>
<div id="ADMIN11112" class="sect2">
<h3 class="sect2">About The COMPATIBLE Initialization Parameter<a id="sthref281"></a><a id="sthref282"></a></h3>
<p>The <code dir="ltr">COMPATIBLE</code> initialization parameter enables or disables the use of features in the database that affect file format on disk. For example, if you create an Oracle Database 11<span class="italic">g</span> Release 2 (11.2) database, but specify <code dir="ltr">COMPATIBLE=10.0.0</code> in the initialization parameter file, then features that require 11.2 compatibility generate an error if you try to use them. Such a database is said to be at the 10.0.0 compatibility level.</p>
<p>You can advance the compatibility level of your database by changing the <code dir="ltr">COMPATIBLE</code> initialization parameter. If you do, there is no way to start the database using a lower compatibility level setting, except by doing a point-in-time recovery to a time before the compatibility was advanced.</p>
<p>The default value for the <code dir="ltr">COMPATIBLE</code> parameter is the release number of the most recent major release.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
<ul>
<li>
<p>For Oracle Database 11<span class="italic">g</span> Release 2 (11.2), the default value of the <code dir="ltr">COMPATIBLE</code> parameter is 11.2.0.0.0. The minimum value is 10.0.0. If you create an Oracle Database using the default value, then you can immediately use all the new features in this release, and you can never downgrade the database.</p>
</li>
<li>
<p>When you set this parameter in a server parameter file (SPFILE) using the <code dir="ltr">ALTER SYSTEM</code> statement, you must specify <code dir="ltr">SCOPE=SPFILE</code>, and you must restart the database for the change to take effect.</p>
</li>
</ul>
</div>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a class="olink UPGRD12473" href="../../server.112/e23633/intro.htm#UPGRD12473"><span class="italic">Oracle Database Upgrade Guide</span></a> for a detailed discussion of database compatibility and the <code dir="ltr">COMPATIBLE</code> initialization parameter</p>
</li>
<li>
<p><a class="olink REFRN10019" href="../../server.112/e40402/initparams035.htm#REFRN10019"><span class="italic">Oracle Database Reference</span></a></p>
</li>
<li>
<p><a class="olink BRADV80055" href="../../backup.112/e10642/rcmflash.htm#BRADV80055"><span class="italic">Oracle Database Backup and Recovery User's Guide</span></a> for information about point-in-time recovery of your database</p>
</li>
</ul>
</div>
</div>
<!-- class="sect2" -->
<a id="i1014312"></a>
<div id="ADMIN11113" class="sect2">
<h3 class="sect2">Setting the License Parameter</h3>
<div class="infobox-note">
<p class="notep1">Note:</p>
Oracle no longer offers licensing by the number of concurrent sessions. Therefore the <code dir="ltr">LICENSE_MAX_SESSIONS</code> and <code dir="ltr">LICENSE_SESSIONS_WARNING</code> initialization parameters are no longer needed and have been deprecated.</div>
<p>If you use named user licensing, Oracle Database can help you enforce this form of licensing. <a id="sthref283"></a><a id="sthref284"></a>You can set a limit on the number of users created in the database. Once this limit is reached, you cannot create more users.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
This mechanism assumes that each person accessing the database has a unique user name and that no people share a user name. Therefore, so that named user licensing can help you ensure compliance with your Oracle license agreement, do not allow multiple users to log in using the same user name.</div>
<p>To limit the number of users created in a database, set the <code dir="ltr">LICENSE_MAX_USERS</code> initialization parameter in the database initialization parameter file, as shown in the following example:</p>
<pre dir="ltr">
LICENSE_MAX_USERS = 200
</pre></div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="i1013934"></a>
<div id="ADMIN00202" class="sect1">
<h2 class="sect1">Managing Initialization Parameters Using a Server Parameter File<a id="sthref285"></a><a id="sthref286"></a></h2>
<p>Initialization parameters for the Oracle Database have traditionally been stored in a text initialization parameter file. For better manageability, you can choose to maintain initialization parameters in a binary server parameter file that is persistent across database startup and shutdown. This section introduces the server parameter file, and explains how to manage initialization parameters using either method of storing the parameters. The following topics are contained in this section.</p>
<ul>
<li>
<p><a href="#i1009971">What Is a Server Parameter File?</a></p>
</li>
<li>
<p><a href="#i1009989">Migrating to a Server Parameter File</a></p>
</li>
<li>
<p><a href="#i1010013">Creating a Server Parameter File</a></p>
</li>
<li>
<p><a href="#i1010034">The SPFILE Initialization Parameter</a></p>
</li>
<li>
<p><a href="#i1010047">Changing Initialization Parameter Values</a></p>
</li>
<li>
<p><a href="#CIABCGBH">Clearing Initialization Parameter Values</a></p>
</li>
<li>
<p><a href="#i1010100">Exporting the Server Parameter File</a></p>
</li>
<li>
<p><a href="#i1010122">Backing Up the Server Parameter File</a></p>
</li>
<li>
<p><a href="#i1010142">Recovering a Lost or Damaged Server Parameter File</a></p>
</li>
<li>
<p><a href="#i1010149">Viewing Parameter Settings</a></p>
</li>
</ul>
<a id="i1009971"></a>
<div id="ADMIN11115" class="sect2">
<h3 class="sect2">What Is a Server Parameter File<a id="sthref287"></a>?</h3>
<p>A server parameter file can be thought of as a repository for initialization parameters that is maintained on the system running the Oracle Database server. It is, by design, a server-side initialization parameter file. Initialization parameters stored in a server parameter file are persistent, in that any changes made to the parameters while an instance is running can persist across instance shutdown and startup. This arrangement eliminates the need to manually update initialization parameters to make persistent any changes effected by <code dir="ltr">ALTER SYSTEM</code> statements. It also provides a basis for self-tuning by the Oracle Database server.</p>
<p>A server parameter file is initially built from a text initialization parameter file using the <code dir="ltr">CREATE SPFILE</code> statement. (It can also be created directly by the Database Configuration Assistant.) The server parameter file is a binary file that cannot be edited using a text editor. Oracle Database provides other interfaces for viewing and modifying parameter settings in a server parameter file.</p>
<div class="infobox-note">
<p class="notep1">Caution:</p>
Although you can open the binary server parameter file with a text editor and view its text, <span class="italic">do not</span> manually edit it. Doing so will corrupt the file. You will not be able to start your instance, and if the instance is running, it could fail.</div>
<p>When you issue a <code dir="ltr"><a id="sthref288"></a><a id="sthref289"></a>STARTUP</code> command with no <code dir="ltr">PFILE</code> clause, the Oracle instance searches an operating system&ndash;specific default location for a server parameter file from which to read initialization parameter settings. If no server parameter file is found, the instance searches for a text initialization parameter file. If a server parameter file exists but you want to override it with settings in a text initialization parameter file, you must specify the <code dir="ltr">PFILE</code> clause when issuing the <code dir="ltr">STARTUP</code> command. Instructions for starting an instance using a server parameter file are contained in <a href="start.htm#i1006133">"Starting Up a Database"</a>.</p>
</div>
<!-- class="sect2" -->
<a id="i1009989"></a>
<div id="ADMIN11116" class="sect2">
<h3 class="sect2">Migrating to a Server Parameter File<a id="sthref290"></a></h3>
<p>If you are currently using a text initialization parameter file, then use the following steps to migrate to a server parameter file.</p>
<ol>
<li>
<p>If the initialization parameter file is located on a client system, then transfer the file (for example, FTP) from the client system to the server system.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
If you are migrating to a server parameter file in an Oracle Real Application Clusters environment, you must combine all of your instance-specific initialization parameter files into a single initialization parameter file. Instructions for doing this and other actions unique to using a server parameter file for instances that are part of an Oracle Real Application Clusters installation are discussed in <a class="olink RACAD020" href="../../rac.112/e41960/admin.htm#RACAD020"><span class="italic">Oracle Real Application Clusters Administration and Deployment Guide</span></a> and in your platform-specific Oracle Real Application Clusters Installation Guide.</div>
</li>
<li>
<p>Create a server parameter file in the default location using the <code dir="ltr">CREATE SPFILE FROM PFILE</code> statement. See <a href="#i1010013">"Creating a Server Parameter File"</a> for instructions.</p>
<p>This statement reads the text initialization parameter file to create a server parameter file. The database does not have to be started to issue a <code dir="ltr">CREATE SPFILE</code> statement.</p>
</li>
<li>
<p>Start up or restart the instance.</p>
<p>The instance finds the new SPFILE in the default location and starts up with it.</p>
</li>
</ol>
</div>
<!-- class="sect2" -->
<a id="i1010013"></a>
<div id="ADMIN11117" class="sect2">
<h3 class="sect2">Creating a Server Parameter File<a id="sthref291"></a></h3>
<p>You use the <code dir="ltr"><a id="sthref292"></a>CREATE SPFILE</code> statement to create a server parameter file. You must have the <code dir="ltr">SYSDBA</code> or the <code dir="ltr">SYSOPER</code> system privilege to execute this statement.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
When you use the Database Configuration Assistant to create a database, it automatically creates a server parameter file for you.</div>
<p>The <code dir="ltr">CREATE SPFILE</code> statement can be executed before or after instance startup. However, if the instance has been started using a server parameter file, an error is raised if you attempt to re-create the same server parameter file that is currently being used by the instance.</p>
<p>You can create a server parameter file (SPFILE) from an existing text initialization parameter file or from memory. Creating the SPFILE from memory means copying the current values of initialization parameters in the running instance to the SPFILE.</p>
<p>The following example creates a server parameter file from text initialization parameter file <code dir="ltr">/u01/oracle/dbs/init.ora</code>. In this example no <code dir="ltr">SPFILE</code> name is specified, so the file is created with the platform-specific default name and location shown in <a href="#CIAJEBBI">Table 2-3</a>.</p>
<pre dir="ltr">
CREATE SPFILE FROM PFILE='/u01/oracle/dbs/<span class="bold">init.ora</span>';
</pre>
<p>The next example illustrates creating a server parameter file and supplying a name and location.</p>
<pre dir="ltr">
CREATE SPFILE='/u01/oracle/dbs/<span class="bold">test_spfile.ora</span>'
       FROM PFILE='/u01/oracle/dbs/test_init.ora';
</pre>
<p>The next example illustrates creating a server parameter file in the default location from the current values of the initialization parameters in memory.</p>
<pre dir="ltr">
CREATE SPFILE FROM MEMORY;
</pre>
<p>Whether you use the default SPFILE name and default location or specify an SPFILE name and location, if an SPFILE of the same name already exists in the location, it is overwritten without a warning message.</p>
<p>When you create an SPFILE from a text initialization parameter file, comments specified on the same lines as a parameter setting in the initialization parameter file are maintained in the SPFILE. All other comments are ignored.</p>
<p>Oracle recommends that you allow the database to give the SPFILE the default name and store it in the default location. This eases administration of your database. For example, the <code dir="ltr">STARTUP</code> command assumes this default location to read the SPFILE.</p>
<p><a href="#CIAJEBBI">Table 2-3</a> shows the default name and location for both the text initialization parameter file (PFILE) and server parameter file (SPFILE) for the UNIX, Linux, and Windows platforms, both with and without the presence of Oracle Automatic Storage Management (Oracle ASM). The table assumes that the SPFILE is a file. If it is a raw device, the default name could be a logical volume name or partition device name, and the default location could differ.</p>
<div id="ADMIN12921" class="tblhruleformalwidemax">
<p class="titleintable"><a id="sthref293"></a><a id="CIAJEBBI"></a>Table 2-3 PFILE and SPFILE Default Names and Locations on UNIX, LInux, and Windows</p>
<table class="cellalignment1333" title="PFILE and SPFILE Default Names and Locations on UNIX, LInux, and Windows" summary="This table shows the default name and default location for the server parameter file on the UNIX and Windows platforms" dir="ltr">
<thead>
<tr class="cellalignment1327">
<th class="cellalignment1334" id="r1c1-t62">Platform</th>
<th class="cellalignment1334" id="r1c2-t62">PFILE Default Name</th>
<th class="cellalignment1334" id="r1c3-t62">SPFILE Default Name</th>
<th class="cellalignment1334" id="r1c4-t62">PFILE Default Location</th>
<th class="cellalignment1334" id="r1c5-t62">SPFILE Default Location</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1327">
<td class="cellalignment1335" id="r2c1-t62" headers="r1c1-t62">
<p>UNIX and Linux</p>
</td>
<td class="cellalignment1335" headers="r2c1-t62 r1c2-t62">
<p><code dir="ltr">init</code><code dir="ltr"><span class="codeinlineitalic">ORACLE_SID</span></code><code dir="ltr">.ora</code></p>
</td>
<td class="cellalignment1335" headers="r2c1-t62 r1c3-t62">
<p><code dir="ltr">spfile</code><code dir="ltr"><span class="codeinlineitalic">ORACLE_SID</span></code><code dir="ltr">.ora</code></p>
</td>
<td class="cellalignment1335" headers="r2c1-t62 r1c4-t62">
<p><span class="italic">OH</span><code dir="ltr">/dbs</code> or the same location as the data files<a id="BABJGHJI" href="#BABJGHJI" onclick='footdisplay(1,"\u003cspan class=\"italic\"\u003eOH\u003c/span\u003e represents the Oracle home directory")'><sup class="tablefootnote">Foot&nbsp;1&nbsp;</sup></a></p>
</td>
<td class="cellalignment1335" headers="r2c1-t62 r1c5-t62">
<p><span class="bold">Without Oracle ASM</span>:</p>
<p><span class="italic">OH</span><code dir="ltr">/dbs</code> or the same location as the data files<a id="sthref294" href="#sthref294" onclick='footdisplay(1,"\u003cspan class=\"italic\"\u003eOH\u003c/span\u003e represents the Oracle home directory")'><sup class="footnotenumber">Footref&nbsp;1</sup></a></p>
<p><span class="bold">When Oracle ASM is present</span>:</p>
<p>In the same disk group as the data files<a id="BABFFEEG" href="#BABFFEEG" onclick='footdisplay(2,"Assumes database created with DBCA")'><sup class="tablefootnote">Foot&nbsp;2&nbsp;</sup></a></p>
</td>
</tr>
<tr class="cellalignment1327">
<td class="cellalignment1335" id="r3c1-t62" headers="r1c1-t62">
<p>Windows</p>
</td>
<td class="cellalignment1335" headers="r3c1-t62 r1c2-t62">
<p><code dir="ltr">init</code><code dir="ltr"><span class="codeinlineitalic">ORACLE_SID</span></code><code dir="ltr">.ora</code></p>
</td>
<td class="cellalignment1335" headers="r3c1-t62 r1c3-t62">
<p><code dir="ltr">spfile</code><code dir="ltr"><span class="codeinlineitalic">ORACLE_SID</span></code><code dir="ltr">.ora</code></p>
</td>
<td class="cellalignment1335" headers="r3c1-t62 r1c4-t62">
<p><span class="italic">OH</span><code dir="ltr">\database</code></p>
</td>
<td class="cellalignment1335" headers="r3c1-t62 r1c5-t62">
<p><span class="bold">Without Oracle ASM</span>:</p>
<p><span class="italic">OH</span><code dir="ltr">\database</code></p>
<p><span class="bold">When Oracle ASM is present</span>:</p>
<p>In the same disk group as the data files<a id="sthref295" href="#sthref295" onclick='footdisplay(2,"Assumes database created with DBCA")'><sup class="footnotenumber">Footref&nbsp;2</sup></a></p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblhruleformalwidemax" -->
<p class="tablefootnote"><sup class="tablefootnote">Footnote&nbsp;1&nbsp;</sup><span class="italic">OH</span> represents the Oracle home directory</p>
<p class="tablefootnote"><sup class="tablefootnote">Footnote&nbsp;2&nbsp;</sup>Assumes database created with DBCA</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
Upon startup, the instance first searches for an SPFILE named <code dir="ltr">spfile</code><code dir="ltr"><span class="codeinlineitalic">ORACLE_SID</span></code>.<code dir="ltr">ora</code>, and if not found, searches for <code dir="ltr">spfile.ora</code>. Using <code dir="ltr">spfile.ora</code> enables all Real Application Cluster (Oracle RAC) instances to use the same server parameter file.
<p>If neither SPFILE is found, the instance searches for the text initialization parameter file <code dir="ltr">init</code><code dir="ltr"><span class="codeinlineitalic">ORACLE_SID</span></code>.<code dir="ltr">ora</code>.</p>
</div>
<p>If you create an SPFILE in a location other than the default location, you must create in the default PFILE location a "stub" PFILE that points to the server parameter file. For more information, see <a href="start.htm#i1006133">"Starting Up a Database"</a>.</p>
<p>When you create the database with DBCA when Oracle ASM is present, DBCA places the SPFILE in an Oracle ASM disk group, and also causes this stub PFILE to be created.</p>
</div>
<!-- class="sect2" -->
<a id="i1010034"></a>
<div id="ADMIN11118" class="sect2">
<h3 class="sect2">The SPFILE Initialization Parameter<a id="sthref296"></a><a id="sthref297"></a><a id="sthref298"></a></h3>
<p>The <code dir="ltr">SPFILE</code> initialization parameter contains the name of the current server parameter file. When the default server parameter file is used by the database&mdash;that is, you issue a <code dir="ltr">STARTUP</code> command and do not specify a <code dir="ltr">PFILE</code> parameter&mdash;the value of <code dir="ltr">SPFILE</code> is internally set by the server. The SQL*Plus command <code dir="ltr">SHOW PARAMETERS SPFILE</code> (or any other method of querying the value of a parameter) displays the name of the server parameter file that is currently in use.</p>
</div>
<!-- class="sect2" -->
<a id="i1010047"></a>
<div id="ADMIN11119" class="sect2">
<h3 class="sect2">Changing Initialization Parameter Values<a id="sthref299"></a></h3>
<p>The <code dir="ltr"><a id="sthref300"></a>ALTER SYSTEM</code> statement enables you to set, change, or restore to default the values of initialization parameters. If you are using a text initialization parameter file, the <code dir="ltr">ALTER SYSTEM</code> statement changes the value of a parameter only for the current instance, because there is no mechanism for automatically updating text initialization parameters on disk. You must update them manually to be passed to a future instance. Using a server parameter file overcomes this limitation.</p>
<p>There are two kinds of initialization parameters:</p>
<ul>
<li>
<p><span class="bold">Dynamic initialization parameters</span> can be changed for the current Oracle Database instance. The changes take effect immediately.</p>
</li>
<li>
<p><span class="bold">Static initialization parameters</span> cannot be changed for the current instance. You must change these parameters in the text initialization file or server parameter file and then restart the database before changes take effect.</p>
</li>
</ul>
<div id="ADMIN11120" class="sect3"><a id="sthref301"></a>
<h4 class="sect3">Setting or Changing Initialization Parameter Values</h4>
<p><a id="sthref302"></a><a id="sthref303"></a>Use the <code dir="ltr">SET</code> clause of the <code dir="ltr"><a id="sthref304"></a><a id="sthref305"></a>ALTER SYSTEM</code> statement to set or change initialization parameter values. The optional <code dir="ltr">SCOPE</code> clause specifies the scope of a change as described in the following table:</p>
<div class="inftblinformal">
<table class="cellalignment1333" title="The ALTER SYSTEM ... SCOPE Statement" summary="In the left column the various settings for the SCOPE clause are listed. The right column describes the effect of the setting." dir="ltr">
<thead>
<tr class="cellalignment1327">
<th class="cellalignment1334" id="r1c1-t64">SCOPE Clause</th>
<th class="cellalignment1334" id="r1c2-t64">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1327">
<td class="cellalignment1335" id="r2c1-t64" headers="r1c1-t64"><code dir="ltr">SCOPE = SPFILE</code></td>
<td class="cellalignment1335" headers="r2c1-t64 r1c2-t64">The change is applied in the server parameter file only. The effect is as follows:
<ul>
<li>
<p>No change is made to the current instance.</p>
</li>
<li>
<p>For both dynamic and static parameters, the change is effective at the next startup and is persistent.</p>
</li>
</ul>
<p>This is the only <code dir="ltr">SCOPE</code> specification allowed for static parameters.</p>
</td>
</tr>
<tr class="cellalignment1327">
<td class="cellalignment1335" id="r3c1-t64" headers="r1c1-t64"><code dir="ltr">SCOPE = MEMORY</code></td>
<td class="cellalignment1335" headers="r3c1-t64 r1c2-t64">The change is applied in memory only. The effect is as follows:
<ul>
<li>
<p>The change is made to the current instance and is effective immediately.</p>
</li>
<li>
<p>For dynamic parameters, the effect is immediate, but it is not persistent because the server parameter file is not updated.</p>
</li>
</ul>
<p>For static parameters, this specification is not allowed.</p>
</td>
</tr>
<tr class="cellalignment1327">
<td class="cellalignment1335" id="r4c1-t64" headers="r1c1-t64"><code dir="ltr">SCOPE = BOTH</code></td>
<td class="cellalignment1335" headers="r4c1-t64 r1c2-t64">The change is applied in both the server parameter file and memory. The effect is as follows:
<ul>
<li>
<p>The change is made to the current instance and is effective immediately.</p>
</li>
<li>
<p>For dynamic parameters, the effect is persistent because the server parameter file is updated.</p>
</li>
</ul>
<p>For static parameters, this specification is not allowed.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" -->
<p>It is an error to specify <code dir="ltr">SCOPE=SPFILE</code> or <code dir="ltr">SCOPE=BOTH</code> if the instance did not start up with a server parameter file. The default is <code dir="ltr">SCOPE=BOTH</code> if a server parameter file was used to start up the instance, and <code dir="ltr">MEMORY</code> if a text initialization parameter file was used to start up the instance.</p>
<p>For dynamic parameters, you can also specify the <code dir="ltr">DEFERRED</code> keyword. When specified, the change is effective only for future sessions.</p>
<p>When you specify <code dir="ltr">SCOPE</code> as <code dir="ltr">SPFILE</code> or <code dir="ltr">BOTH</code>, an optional <code dir="ltr">COMMENT</code> clause lets you associate a text string with the parameter update. The comment is written to the server parameter file.</p>
<p>The following statement changes the maximum number of failed login attempts before the connection is dropped. It includes a comment, and explicitly states that the change is to be made only in the server parameter file.</p>
<pre dir="ltr">
ALTER SYSTEM SET SEC_MAX_FAILED_LOGIN_ATTEMPTS=3
                 COMMENT='Reduce from 10 for tighter security.'
                 SCOPE=SPFILE;
</pre>
<p>The next example sets a complex initialization parameter that takes a list of attributes. Specifically, the parameter value being set is the <code dir="ltr">LOG_ARCHIVE_DEST_n</code> initialization parameter. This statement could change an existing setting for this parameter or create a new archive destination.</p>
<pre dir="ltr">
ALTER SYSTEM 
     SET LOG_ARCHIVE_DEST_4='LOCATION=/u02/oracle/rbdb1/',MANDATORY,'REOPEN=2'
         COMMENT='Add new destination on Nov 29'
         SCOPE=SPFILE;
</pre>
<p>When a value consists of a list of parameters, you cannot edit individual attributes by the position or ordinal number. You must specify the complete list of values each time the parameter is updated, and the new list completely replaces the old list.</p>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="CIABCGBH"></a>
<div id="ADMIN12346" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Clearing Initialization <a id="sthref306"></a><a id="sthref307"></a>Parameter Values</h3>
<p>You can use the <code dir="ltr">ALTER</code> <code dir="ltr">SYSTEM</code> <code dir="ltr">RESET</code> command to clear (remove) the setting of any initialization parameter in the SPFILE that was used to start the instance. Neither <code dir="ltr">SCOPE</code><code dir="ltr">=</code><code dir="ltr">MEMORY</code> nor <code dir="ltr">SCOPE</code><code dir="ltr">=</code><code dir="ltr">BOTH</code> are allowed. The <code dir="ltr">SCOPE</code> <code dir="ltr">=</code> <code dir="ltr">SPFILE</code> clause is not required, but can be included.</p>
<p>You may want to clear a parameter in the SPFILE so that upon the next database startup a default value is used.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink SQLRF00902" href="../../server.112/e41084/statements_2014.htm#SQLRF00902"><span class="italic">Oracle Database SQL Language Reference</span></a> for information about the <code dir="ltr">ALTER</code> <code dir="ltr">SYSTEM</code> command</div>
</div>
<!-- class="sect2" -->
<a id="i1010100"></a>
<div id="ADMIN11121" class="sect2">
<h3 class="sect2">Exporting the Server Parameter File<a id="sthref308"></a></h3>
<p>You can use the <code dir="ltr">CREATE PFILE</code> statement to export a server parameter file (SPFILE) to a text initialization parameter file. Doing so might be necessary for several reasons:</p>
<ul>
<li>
<p>For diagnostic purposes, listing all of the parameter values currently used by an instance. This is analogous to the SQL*Plus <code dir="ltr">SHOW PARAMETERS</code> command or selecting from the <code dir="ltr">V$PARAMETER</code> or <code dir="ltr">V$PARAMETER2</code> views.</p>
</li>
<li>
<p>To modify the &amp;spfile;server parameter file by first exporting it, editing the resulting text file, and then re-creating it using the <code dir="ltr">CREATE SPFILE</code> statement</p>
</li>
</ul>
<p>The exported file can also be used to start up an instance using the <code dir="ltr">PFILE</code> clause.</p>
<p>You must have the <code dir="ltr">SYSDBA</code> or the <code dir="ltr">SYSOPER</code> system privilege to execute the <code dir="ltr">CREATE PFILE</code> statement. The exported file is created on the database server system. It contains any comments associated with the parameter in the same line as the parameter setting.</p>
<p>The following example creates a text initialization parameter file from the SPFILE:</p>
<pre dir="ltr">
CREATE PFILE FROM SPFILE;
</pre>
<p>Because no names were specified for the files, the database creates an initialization parameter file with a platform-specific name, and it is created from the platform-specific default server parameter file.</p>
<p>The following example creates a text initialization parameter file from a server parameter file, but in this example the names of the files are specified:</p>
<pre dir="ltr">
CREATE PFILE='/u01/oracle/dbs/test_init.ora'
       FROM SPFILE='/u01/oracle/dbs/test_spfile.ora';
</pre>
<div class="infobox-note">
<p class="notep1">Note:</p>
An alternative is to create a PFILE from the current values of the initialization parameters in memory. The following is an example of the required command:
<pre dir="ltr">
<a id="sthref309"></a>CREATE PFILE='/u01/oracle/dbs/test_init.ora' FROM MEMORY;
</pre></div>
</div>
<!-- class="sect2" -->
<a id="i1010122"></a>
<div id="ADMIN11122" class="sect2">
<h3 class="sect2">Backing Up the Server Parameter File<a id="sthref310"></a></h3>
<p>You can create a backup of your server parameter file (SPFILE) by exporting it, as described in <a href="#i1010100">"Exporting the Server Parameter File"</a>. If the backup and recovery strategy for your database is implemented using Recovery Manager (RMAN), then you can use RMAN to create a backup of the SPFILE. The SPFILE is backed up automatically by RMAN when you back up your database, but RMAN also enables you to specifically create a backup of the currently active SPFILE.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink BRADV89519" href="../../backup.112/e10642/rcmbckba.htm#BRADV89519"><span class="italic">Oracle Database Backup and Recovery User's Guide</span></a></div>
</div>
<!-- class="sect2" -->
<a id="i1010142"></a>
<div id="ADMIN11123" class="sect2">
<h3 class="sect2">Recovering a Lost or Damaged Server Parameter File<a id="sthref311"></a></h3>
<p>If your server parameter file (SPFILE) becomes lost or corrupted, the current instance may fail, or the next attempt at starting the database instance may fail. There are several ways to recover the SPFILE:</p>
<ul>
<li>
<p>If the instance is running, issue the following command to re-create the SPFILE from the current values of initialization parameters in memory:</p>
<pre dir="ltr">
CREATE SPFILE FROM MEMORY;
</pre>
<p>This command creates the SPFILE with the default name and in the default location. You can also create the SPFILE with a new name or in a specified location. See <a href="#i1010013">"Creating a Server Parameter File"</a> for examples.</p>
</li>
<li>
<p>If you have a valid text initialization parameter file (PFILE), re-create the SPFILE from the PFILE with the following command:</p>
<pre dir="ltr">
CREATE SPFILE FROM PFILE;
</pre>
<p>This command assumes that the PFILE is in the default location and has the default name. See <a href="#i1010013">"Creating a Server Parameter File"</a> for the command syntax to use when the PFILE is not in the default location or has a nondefault name.</p>
</li>
<li>
<p>Restore the SPFILE from backup.</p>
<p>See <a href="#i1010122">"Backing Up the Server Parameter File"</a> for more information.</p>
</li>
<li>
<p><a id="sthref312"></a>If none of the previous methods are possible in your situation, perform these steps:</p>
<ol>
<li>
<p>Create a text initialization parameter file (PFILE) from the parameter value listings in the alert log.</p>
<p>When an instance starts up, the initialization parameters used for startup are written to the alert log. You can copy and paste this section from the text version of the alert log (without XML tags) into a new PFILE.</p>
<p>See <a href="diag.htm#CHDGCEIH">"Viewing the Alert Log"</a> for more information.</p>
</li>
<li>
<p>Create the SPFILE from the PFILE.</p>
<p>See <a href="#i1010013">"Creating a Server Parameter File"</a> for instructions.</p>
</li>
</ol>
</li>
</ul>
<p class="subhead2"><a id="ADMIN12546"></a>Read/Write Errors During a Parameter Update</p>
<p>If an error occurs while reading or writing the server parameter file during a parameter update, the error is reported in the alert log and all subsequent parameter updates to the server parameter file are ignored. At this point, you can take one of the following actions:</p>
<ul>
<li>
<p>Shut down the instance, recover the server parameter file and described earlier in this section, and then restart the instance.</p>
</li>
<li>
<p>Continue to run the database if you do not care that subsequent parameter updates will not be persistent.</p>
</li>
</ul>
</div>
<!-- class="sect2" -->
<a id="i1010149"></a>
<div id="ADMIN11124" class="sect2">
<h3 class="sect2">Viewing Parameter Settings<a id="sthref313"></a></h3>
<p>You can view parameter settings in several ways, as shown in the following table<a id="sthref314"></a>.</p>
<div class="inftblruleinformal">
<table class="cellalignment1333" title="Methods of Viewing Parameter Settings" summary="The left colum lists the various methods of viewing parameter settings. The right column contains a description of each method." dir="ltr">
<thead>
<tr class="cellalignment1327">
<th class="cellalignment1334" id="r1c1-t68">Method</th>
<th class="cellalignment1334" id="r1c2-t68">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1327">
<td class="cellalignment1335" id="r2c1-t68" headers="r1c1-t68"><code dir="ltr">SHOW PARAMETERS</code></td>
<td class="cellalignment1335" headers="r2c1-t68 r1c2-t68">This SQL*Plus command displays the values of initialization parameters in effect for the current session.</td>
</tr>
<tr class="cellalignment1327">
<td class="cellalignment1335" id="r3c1-t68" headers="r1c1-t68"><code dir="ltr">SHOW SPPARAMETERS</code></td>
<td class="cellalignment1335" headers="r3c1-t68 r1c2-t68">This SQL*Plus command displays the values of initialization parameters in the server parameter file (SPFILE).</td>
</tr>
<tr class="cellalignment1327">
<td class="cellalignment1335" id="r4c1-t68" headers="r1c1-t68"><code dir="ltr">CREATE PFILE</code></td>
<td class="cellalignment1335" headers="r4c1-t68 r1c2-t68">This SQL statement creates a text initialization parameter file (PFILE) from the SPFILE or from the current in-memory settings. You can then view the PFILE with any text editor.</td>
</tr>
<tr class="cellalignment1327">
<td class="cellalignment1335" id="r5c1-t68" headers="r1c1-t68"><code dir="ltr">V$PARAMETER</code></td>
<td class="cellalignment1335" headers="r5c1-t68 r1c2-t68">This view displays the values of initialization parameters in effect for the current session.</td>
</tr>
<tr class="cellalignment1327">
<td class="cellalignment1335" id="r6c1-t68" headers="r1c1-t68"><code dir="ltr">V$PARAMETER2</code></td>
<td class="cellalignment1335" headers="r6c1-t68 r1c2-t68">This view displays the values of initialization parameters in effect for the current session. It is easier to distinguish list parameter values in this view because each list parameter value appears in a separate row.</td>
</tr>
<tr class="cellalignment1327">
<td class="cellalignment1335" id="r7c1-t68" headers="r1c1-t68"><code dir="ltr">V$SYSTEM_PARAMETER</code></td>
<td class="cellalignment1335" headers="r7c1-t68 r1c2-t68">This view displays the values of initialization parameters in effect for the instance. A new session inherits parameter values from the instance-wide values.</td>
</tr>
<tr class="cellalignment1327">
<td class="cellalignment1335" id="r8c1-t68" headers="r1c1-t68"><code dir="ltr">V$SYSTEM_PARAMETER2</code></td>
<td class="cellalignment1335" headers="r8c1-t68 r1c2-t68">This view displays the values of initialization parameters in effect for the instance. A new session inherits parameter values from the instance-wide values. It is easier to distinguish list parameter values in this view because each list parameter value appears in a separate row.</td>
</tr>
<tr class="cellalignment1327">
<td class="cellalignment1335" id="r9c1-t68" headers="r1c1-t68"><code dir="ltr">V$SPPARAMETER</code></td>
<td class="cellalignment1335" headers="r9c1-t68 r1c2-t68">This view displays the current contents of the SPFILE. The view returns <code dir="ltr">FALSE</code> values in the <code dir="ltr">ISSPECIFIED</code> column if an SPFILE is not being used by the instance.</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblruleinformal" -->
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink REFRN003" href="../../server.112/e40402/dynviews_part.htm#REFRN003"><span class="italic">Oracle Database Reference</span></a> for a complete description of views</div>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="CIABBCAI"></a>
<div id="ADMIN11125" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Managing Application Workloads with Database Services <a id="sthref315"></a><a id="sthref316"></a></h2>
<p>This section contains:</p>
<ul>
<li>
<p><a href="#CIAGJIED">About Database Services</a></p>
</li>
<li>
<p><a href="#CIACEHHJ">Creating Database Services</a></p>
</li>
<li>
<p><a href="#CIAIBCIH">Database Service Data Dictionary Views</a></p>
</li>
</ul>
<a id="CIAGJIED"></a>
<div id="ADMIN11126" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">About Database Services <a id="sthref317"></a></h3>
<p>Database services (services) are logical abstractions for managing workloads in Oracle Database. Services divide workloads into mutually disjoint groupings. Each service represents a workload with common attributes, service-level thresholds, and priorities. The grouping is based on attributes of work that might include the application function to be used, the priority of execution for the application function, the job class to be managed, or the data range used in the application function or job class. For example, the Oracle E-Business suite defines a service for each responsibility, such as general ledger, accounts receivable, order entry, and so on. When you configure database services, you give each service a unique global name, associated performance goals, and associated importance. The services are tightly integrated with Oracle Database and are maintained in the data dictionary.</p>
<p>Connection requests can include a database service name. Thus, middle-tier applications and client/server applications use a service by specifying the service as part of the connection in TNS connect data. If no service name is included and the Net Services file listener.ora designates a default service, the connection uses the default service.</p>
<p>Services enable you to configure a workload, administer it, enable and disable it, and measure the workload as a single entity. You can do this using standard tools such as the Database Configuration Assistant (DBCA), Net Configuration Assistant (NetCA), and Oracle Enterprise Manager. Enterprise Manager supports viewing and operating services as a whole, with drill down to the instance-level when needed.</p>
<p>In an Oracle Real Application Clusters (Oracle RAC) environment, a service can span one or more instances and facilitate workload balancing based on transaction performance. This provides end-to-end unattended recovery, rolling changes by workload, and full location transparency. Oracle RAC also enables you to manage several service features with Enterprise Manager, the DBCA, and the Server Control utility (<code dir="ltr">SRVCTL</code>).</p>
<p>Services also offer an extra dimension in performance tuning. Tuning by "service and SQL" can replace tuning by "session and SQL" in the majority of systems where all sessions are anonymous and shared. With services, workloads are visible and measurable. Resource consumption and waits are attributable by application. Additionally, resources assigned to services can be augmented when loads increase or decrease. This dynamic resource allocation enables a cost-effective solution for meeting demands as they occur. For example, services are measured automatically and the performance is compared to service-level thresholds. Performance violations are reported to Enterprise Manager, enabling the execution of automatic or scheduled solutions.</p>
<p>Several Oracle Database features support services. The Automatic Workload Repository (AWR) manages the performance of services. AWR records service performance, including execution times, wait classes, and resources consumed by service. AWR alerts warn when service response time thresholds are exceeded. The dynamic views report current service performance metrics with one hour of history. Each service has quality-of-service thresholds for response time and CPU consumption.</p>
<p>In addition, the Database Resource Manager can map services to consumer groups. Therefore, you can automatically manage the priority of one service relative to others. You can use consumer groups to define relative priority in terms of either ratios or resource consumption. For more information, see <a href="dbrm.htm#g1021210">Chapter 27, "Managing Resources with Oracle Database Resource Manager,"</a> and specifically in <a href="dbrm.htm#CHDIGIII">"Specifying Session-to&ndash;Consumer Group Mapping Rules"</a>.</p>
<p>You also can specify an edition attribute for a service. Editions make it possible to have two or more versions of the same objects in the database. When you specify an edition attribute for a service, all subsequent connections that specify the service use this edition as the initial session edition. This is described in more detail in <a href="general.htm#CHDGIIAC">"Setting the Edition Attribute of a Database Service"</a>.</p>
<p>Specifying an edition as a service attribute can make it easier to manage resource usage. For example, services associated with an edition can be placed on a separate instance in an Oracle RAC environment, and the Database Resource Manager can manage resources used by different editions by associating resource plans with the corresponding services.</p>
<p>Services describe applications, application functions, and data ranges as either functional services or data-dependent services. Functional services are the most common mapping of workloads. Sessions using a particular function are grouped together. In contrast, data-dependent routing routes sessions to services based on data keys. The mapping of work requests to services occurs in the object relational mapping layer for application servers and TP monitors. For example, in Oracle RAC, these ranges can be completely dynamic and based on demand because the database is shared.</p>
<p>You can also define preconnect application services in Oracle RAC databases. Preconnect services span instances to support a service in the event of a failure. The preconnect service supports TAF preconnect mode and is managed transparently when using Oracle RAC.</p>
<p>In addition to services to be used by applications, Oracle Database also supports two internal services: <code dir="ltr">SYS$BACKGROUND</code> is used by the background processes only and <code dir="ltr">SYS$USERS</code> is the default service for user sessions that are not associated with services.</p>
<p>Using services requires no changes to your application code. Client-side work can connect to a named service. Server-side work, such as Oracle Scheduler, parallel execution, and Oracle Streams Advanced Queuing, set the service name as part of the workload definition. Work requests executing under a service inherit the performance thresholds for the service and are measured as part of the service.</p>
<p>For Oracle Scheduler, you optionally assign a service when you create a job class. During execution, jobs are assigned to job classes, and job classes can run within services. Using services with job classes ensures that the work executed by the job scheduler is identified for workload management and performance tuning.</p>
<p>For parallel query and parallel DML, the query coordinator connects to a service just like any other client. The parallel query processes inherit the service for the duration of the execution. At the end of query execution, the parallel execution processes revert to the default service.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="scheduse.htm#g1046708">Chapter 29, "Scheduling Jobs with Oracle Scheduler"</a> for more information about the Oracle Scheduler</p>
</li>
<li>
<p><a class="olink RACAD841" href="../../rac.112/e41960/hafeats.htm#RACAD841"><span class="italic">Oracle Real Application Clusters Administration and Deployment Guide</span></a> for information about using services in an Oracle RAC environment</p>
</li>
<li>
<p><a class="olink NETAG002" href="../../network.112/e41945/concepts.htm#NETAG002"><span class="italic">Oracle Database Net Services Administrator's Guide</span></a> for information on connecting to a service</p>
</li>
</ul>
</div>
</div>
<!-- class="sect2" -->
<a id="CIACEHHJ"></a>
<div id="ADMIN11127" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Creating Database Services<a id="sthref318"></a><a id="sthref319"></a></h3>
<p>There are a few ways to create database services, depending on your database configuration.</p>
<p><span class="bold">To create a database service:</span></p>
<ul>
<li>
<p>If your single-instance database is being managed by Oracle Restart, use the <code dir="ltr">SRVCTL</code> utility to create the database service.</p>
<pre dir="ltr">
srvctl add service -d <span class="italic">db_unique_name</span> -s <span class="italic">service_name</span>
</pre></li>
<li>
<p>If your single-instance database is not being managed by Oracle Restart, do one of the following:</p>
<ul>
<li>
<p>Append the desired service name to the <code dir="ltr">SERVICE_NAMES</code> parameter.</p>
</li>
<li>
<p>Call the <code dir="ltr">DBMS_SERVICE.CREATE_SERVICE</code> package procedure.</p>
</li>
</ul>
</li>
<li>
<p>(Optional) Define service attributes with Oracle Enterprise Manager or with <code dir="ltr">DBMS_SERVICE.MODIFY_SERVICE</code>.</p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="restart.htm#BABGIGDB">Chapter 4, "Configuring Automatic Restart of an Oracle Database"</a> for information about Oracle Restart</p>
</li>
<li>
<p><a class="olink ARPLS092" href="../../appdev.112/e40758/d_serv.htm#ARPLS092"><span class="italic">Oracle Database PL/SQL Packages and Types Reference</span></a> for information about the <code dir="ltr">DBMS_SERVICE</code> package</p>
</li>
<li>
<p><a class="olink RACAD076" href="../../rac.112/e41960/hafeats.htm#RACAD076"><span class="italic">Oracle Real Application Clusters Administration and Deployment Guide</span></a> for information about creating a service in an Oracle RAC environment.</p>
</li>
</ul>
</div>
</div>
<!-- class="sect2" -->
<a id="CIAIBCIH"></a>
<div id="ADMIN11128" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Database Service Data Dictionary Views<a id="sthref320"></a></h3>
<p>You can find service information in the following service-specific views:</p>
<ul>
<li>
<p><code dir="ltr">DBA_SERVICES</code></p>
</li>
<li>
<p><code dir="ltr">ALL_SERVICES</code> or <code dir="ltr">V$SERVICES</code></p>
</li>
<li>
<p><code dir="ltr">V$ACTIVE_SERVICES</code></p>
</li>
<li>
<p><code dir="ltr">V$SERVICE_STATS</code></p>
</li>
<li>
<p><code dir="ltr">V$SERVICE_EVENT</code></p>
</li>
<li>
<p><code dir="ltr">V$SERVICE_WAIT_CLASSES</code></p>
</li>
<li>
<p><code dir="ltr">V$SERV_MOD_ACT_STATS</code></p>
</li>
<li>
<p><code dir="ltr">V$SERVICE_METRICS</code></p>
</li>
<li>
<p><code dir="ltr">V$SERVICE_METRICS_HISTORY</code></p>
</li>
</ul>
<p>The following additional views also contain some information about services:</p>
<ul>
<li>
<p><code dir="ltr">V$SESSION</code></p>
</li>
<li>
<p><code dir="ltr">V$ACTIVE_SESSION_HISTORY</code></p>
</li>
<li>
<p><code dir="ltr">DBA_RSRC_GROUP_MAPPINGS</code></p>
</li>
<li>
<p><code dir="ltr">DBA_SCHEDULER_JOB_CLASSES</code></p>
</li>
<li>
<p><code dir="ltr">DBA_THRESHOLDS</code></p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink REFRN" href="../e40402/toc.htm"><span class="italic">Oracle Database Reference</span></a> for detailed information about these views</div>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="i1009520"></a>
<div id="ADMIN11131" class="sect1">
<h2 class="sect1">Considerations After Creating a Database</h2>
<p>After you create a database as described in <a href="#CIABGCIH">"Creating a Database with DBCA"</a> or <a href="#CIAEJDBE">"Creating a Database with the CREATE DATABASE Statement"</a>, the instance is left running, and the database is open and available for normal database use. You may want to perform other actions, some of which are discussed in this section.</p>
<a id="i1009523"></a>
<div id="ADMIN00206" class="sect2">
<h3 class="sect2">Some Security Considerations</h3>
<p>In this release of Oracle Database, several enhancements were made to ensure the security your database. You can find security guidelines for this release in <a class="olink DBSEG009" href="../../network.112/e36292/guidelines.htm#DBSEG009"><span class="italic">Oracle Database Security Guide</span></a>. Oracle recommends that you read these guidelines and configure your database accordingly.</p>
<p>After the database is created, you can configure it to take advantage of Oracle Identity Management. For information on how to do this, see <a class="olink DBIMI" href="../../network.112/e10744/toc.htm"><span class="italic">Oracle Database Enterprise User Security Administrator's Guide</span>.</a></p>
<p><a id="sthref321"></a>A newly created database has at least three user accounts that are important for administering your database: <code dir="ltr">SYS</code>, <code dir="ltr">SYSTEM</code>, and <code dir="ltr">SYSMAN</code>. Additional administrative accounts are provided that should be used only by authorized users. To protect these accounts from being used by unauthorized users familiar with their Oracle-supplied passwords, these accounts are initially locked with their passwords expired. As the database administrator, you are responsible for the unlocking and resetting of these accounts.</p>
<p>See <a class="olink TDPSG20030" href="../../server.112/e10575/tdpsg_user_accounts.htm#TDPSG20030"><span class="italic">Oracle Database 2 Day + Security Guide</span></a> for a complete list of <a id="sthref322"></a><a id="sthref323"></a><a id="sthref324"></a>predefined user accounts created with each new Oracle Database installation.</p>
<div class="infobox-note">
<p class="notep1">Caution:</p>
To prevent unauthorized access and protect the integrity of your database, it is important that new passwords for user accounts <code dir="ltr">SYS</code> and <code dir="ltr">SYSTEM</code> be specified when the database is created. This is accomplished by specifying the following <code dir="ltr">CREATE DATABASE</code> clauses when manually creating you database, or by using DBCA to create the database:
<ul>
<li>
<p><code dir="ltr">USER SYS IDENTIFIED BY</code></p>
</li>
<li>
<p><code dir="ltr">USER SYSTEM IDENTIFIED BY</code></p>
</li>
</ul>
</div>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="dba.htm#i1006470">"Administrative User Accounts"</a> for more information about the users <code dir="ltr">SYS</code> and <code dir="ltr">SYSTEM</code></p>
</li>
<li>
<p><a class="olink DBSEG002" href="../../network.112/e36292/users.htm#DBSEG002"><span class="italic">Oracle Database Security Guide</span></a> to learn how to add new users and change passwords</p>
</li>
<li>
<p><a class="olink SQLRF01103" href="../../server.112/e41084/statements_4003.htm#SQLRF01103"><span class="italic">Oracle Database SQL Language Reference</span></a> for the syntax of the <code dir="ltr">ALTER USER</code> statement used for unlocking user accounts</p>
</li>
</ul>
</div>
</div>
<!-- class="sect2" -->
<div id="ADMIN11132" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref325"></a>
<h3 class="sect2">Enabling Trans<a id="sthref326"></a><a id="sthref327"></a><a id="sthref328"></a>parent Data Encryption</h3>
<p>Transparent data encryption is a feature that enables encryption of individual database columns before storing them in the data file, or enables encryption of entire tablespaces. If users attempt to circumvent the database access control mechanisms by looking inside data files directly with operating system tools, transparent data encryption prevents such users from viewing sensitive information.</p>
<p>Users who have the <code dir="ltr">CREATE TABLE</code> privilege can choose one or more columns in a table to be encrypted. The data is encrypted in the data files and in the audit logs (if audit is turned on). Database users with appropriate privileges can view the data in unencrypted format. For information on enabling transparent data encryption, see <a class="olink ASOAG9522" href="../../network.112/e40393/asotrans.htm#ASOAG9522"><span class="italic">Oracle Database Advanced Security Administrator's Guide</span></a>.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="tables.htm#CJAGJDGF">"Consider Encrypting Columns That Contain Sensitive Data"</a></p>
</li>
<li>
<p><a href="tspaces.htm#BABBJGAF">"Encrypted Tablespaces"</a></p>
</li>
</ul>
</div>
</div>
<!-- class="sect2" -->
<div id="ADMIN11133" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref329"></a>
<h3 class="sect2">Creating a Secure External Password Store</h3>
<p>For large-scale deployments where applications use password credentials to connect to databases, it is possible to store such credentials in a client-side Oracle wallet. An Oracle wallet is a secure software container that is used to store authentication and signing credentials.</p>
<p>Storing database password credentials in a client-side Oracle wallet eliminates the need to embed usernames and passwords in application code, <a id="sthref330"></a>batch jobs, or <a id="sthref331"></a>scripts. This reduces the risk of exposing passwords in the clear in scripts and application code, and simplifies maintenance because you need not change your code each time usernames and passwords change. In addition, not having to change application code also makes it easier to enforce password management policies for these user accounts.</p>
<p>When you configure a client to use the external password store, applications can use the following syntax to connect to databases that use password authentication:</p>
<pre dir="ltr">
CONNECT /@<span class="italic">database_alias</span>
</pre>
<p>Note that you need not specify database login credentials in this <code dir="ltr">CONNECT</code> statement. Instead your system looks for database login credentials in the client wallet.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a class="olink DBSEG99816" href="../../network.112/e36292/authentication.htm#DBSEG99816"><span class="italic">Oracle Database Security Guide</span></a></p>
</li>
<li>
<p><a class="olink ASOAG160" href="../../network.112/e40393/asowalet.htm#ASOAG160"><span class="italic">Oracle Database Advanced Security Administrator's Guide</span></a></p>
</li>
</ul>
</div>
</div>
<!-- class="sect2" -->
<div id="ADMIN11134" class="sect2"><a id="sthref332"></a>
<h3 class="sect2">Installing the Oracle Database Sample Schemas<a id="sthref333"></a></h3>
<p>The Oracle Database distribution media includes various SQL files that let you experiment with the system, learn SQL, or create additional tables, views, or synonyms.</p>
<p>Oracle Database includes sample schemas that help you to become familiar with Oracle Database functionality. All Oracle Database documentation and training materials are being converted to the Sample Schemas environment as those materials are updated.</p>
<p>The Sample Schemas can be installed automatically by the Database Configuration Assistant, or you can install them manually. The schemas and installation instructions are described in detail in <a class="olink COMSC" href="../e10831/toc.htm"><span class="italic">Oracle Database Sample Schemas</span></a>.</p>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="BABIHAEB"></a>
<div id="ADMIN14023" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Cloning a Database with CloneDB<a id="sthref334"></a><a id="sthref335"></a><a id="sthref336"></a></h2>
<p>This section contains the following topics:</p>
<ul>
<li>
<p><a href="#BABBGIJG">About Cloning a Database with CloneDB</a></p>
</li>
<li>
<p><a href="#BABDDHDI">Cloning a Database with CloneDB</a></p>
</li>
<li>
<p><a href="#BABJCBGH">After Cloning a Database with CloneDB</a></p>
</li>
</ul>
<a id="BABBGIJG"></a>
<div id="ADMIN14024" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">About Cloning a Database with CloneDB</h3>
<p>It is often necessary to clone a production database for testing purposes or other purposes. Common reasons to clone a production database include the following:</p>
<ul>
<li>
<p>Deployment of a new application, or an update of an existing application, that uses the database</p>
</li>
<li>
<p>A planned operating system upgrade on the system that runs the database</p>
</li>
<li>
<p>New storage for the database installation</p>
</li>
<li>
<p>Reporting</p>
</li>
<li>
<p>Analysis of older data</p>
</li>
</ul>
<p>Before deploying a new application, performing an operating system upgrade, or using new storage, thorough testing is required to ensure that the database works properly under the new conditions. Cloning can be achieved by making copies of the production data files in one or more test environments, but these copies typically require large amounts of storage space to be allocated and managed.</p>
<p>With CloneDB, you can clone a database multiple times without copying the data files into several different locations. Instead, Oracle Database creates the files in the CloneDB database using copy-on-write technology, so that only the blocks that are modified in the CloneDB database require additional storage on disk.</p>
<p>Cloning a database in this way provides the following advantages:</p>
<ul>
<li>
<p>It reduces the amount of storage required for testing purposes.</p>
</li>
<li>
<p>It enables the rapid creation of multiple database clones for various purposes.</p>
</li>
</ul>
<p>The CloneDB databases use the data files of a database backup. Using the backup data files ensures that the production data files are not accessed by the CloneDB instances and that the CloneDB instances do not compete for the production database's resources, such as CPU and I/O resources.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
<ul>
<li>
<p>The CloneDB feature is supported starting with Oracle Database 11<span class="italic">g</span> Release 2 (11.2.0.3).</p>
</li>
<li>
<p>The CloneDB feature is not intended for performance testing.</p>
</li>
</ul>
</div>
</div>
<!-- class="sect2" -->
<a id="BABDDHDI"></a>
<div id="ADMIN14025" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Cloning a Database with CloneDB</h3>
<p>Before cloning a database, the following prerequisites must be met:</p>
<ul>
<li>
<p>Each CloneDB database must use Direct NFS Client, and the backup of the production database must be located on an NFS volume.</p>
<p>Direct NFS Client enables an Oracle database to access network attached storage (NAS) devices directly, rather than using the operating system kernel NFS client. This CloneDB database feature is available on platforms that support Direct NFS Client.</p>
<p>See <a class="olink CWGEN" href="http://www.oracle.com/pls/topic/lookup?ctx=db112&amp;id=CWGEN"><span class="italic">Oracle Grid Infrastructure Installation Guide</span></a> for your operating system for information about Direct NFS Client.</p>
</li>
<li>
<p>At least 2 MB of additional System Global Area (SGA) memory is required to track the modified blocks in a CloneDB database.</p>
<p>See <a href="memory.htm#BGBCBHEJ">Chapter 6, "Managing Memory"</a>.</p>
</li>
<li>
<p>Storage for the database backup and for the changed blocks in each CloneDB database is required.</p>
<p>The storage required for the database backup depends on the method used to perform the backup. A single full RMAN backup requires the most storage. Storage snapshots carried out using the features of a storage appliance adhere to the requirements of the storage appliance. A single backup can support multiple CloneDB databases.</p>
<p>The amount of storage required for each CloneDB database depends on the write activity in that database. Every block that is modified requires an available block of storage. Therefore, the total storage requirement depends on the number of blocks modified in the CloneDB database over time.</p>
</li>
</ul>
<p>This section describes the steps required to create one CloneDB database and uses these sample databases and directories:</p>
<ul>
<li>
<p>The Oracle home for the production database <code dir="ltr">PROD1</code> is /u01/prod1/oracle.</p>
</li>
<li>
<p>The files for the database backup are in /u02/oracle/backup/prod1.</p>
</li>
<li>
<p>The Oracle home for CloneDB database <code dir="ltr">CLONE1</code> is /u03/clone1/oracle.</p>
</li>
</ul>
<p class="orderedlisttitle">To clone a database with CloneDB:&nbsp;</p>
<ol>
<li id="BABEDCJH">
<p>Create a backup of your production database. You have the following backup options:</p>
<ul>
<li>
<p>An online backup</p>
<p>If you perform an online backup, then ensure that your production database is in <code dir="ltr">ARCHIVELOG</code> mode and that all of the necessary archived redo log files are saved and accessible to the CloneDB database environment.</p>
</li>
<li>
<p>A full offline backup</p>
<p>If you perform a full offline backup, then ensure that the backup files are accessible to the CloneDB database environment.</p>
</li>
<li>
<p>A backup that copies the database files</p>
<p>If you specify <code dir="ltr">BACKUP</code> <code dir="ltr">AS</code> <code dir="ltr">COPY</code> in RMAN, then RMAN copies each file as an image copy, which is a bit-for-bit copy of a database file created on disk. Image copies are identical to copies created with operating system commands such as <code dir="ltr">cp</code> on Linux or <code dir="ltr">COPY</code> on Windows, but are recorded in the RMAN repository and so are usable by RMAN. You can use RMAN to make image copies while the database is open. Ensure that the copied database files are accessible to the CloneDB database environment.</p>
</li>
</ul>
<p>See <a class="olink BRADV" href="../../backup.112/e10642/toc.htm"><span class="italic">Oracle Database Backup and Recovery User's Guide</span></a> for information about backing up a database.</p>
</li>
<li>
<p>Create a text initialization parameter file (PFILE) if one does not exist.</p>
<p>If you are using a server parameter file (SPFILE), then run the following statement on the production database to create a PFILE:</p>
<pre dir="ltr">
CREATE PFILE FROM SPFILE;
</pre></li>
<li id="BABIIJDB">
<p><a id="sthref338"></a>Create SQL scripts for cloning the production database.</p>
<p>You will use one or more SQL scripts to create a CloneDB database in a later step. To create the SQL scripts, you can either use an Oracle-supplied Perl script called clonedb.pl, or you can create a SQL script manually.</p>
<p><span class="bold">To use the clonedb.pl Perl script, complete the following steps:</span></p>
<ol>
<li>
<p>Set the following environment variables at an operating system prompt:</p>
<p><code dir="ltr">MASTER_COPY_DIR</code> - Specify the directory that contains the backup created in Step <a href="#BABEDCJH">1</a>. Ensure that this directory contains only the backup of the data files of the production database.</p>
<p><code dir="ltr">CLONE_FILE_CREATE_DEST</code> - Specify the directory where CloneDB database files will be created, including data files, log files, control files.</p>
<p><code dir="ltr">CLONEDB_NAME</code> - Specify the name of the CloneDB database.</p>
<p><code dir="ltr">S7000_TARGET</code> - If the NFS host providing the file system for the backup and the CloneDB database is a Sun Storage 7000, then specify the name of the host. Otherwise, do not set this environment variable. Set this environment variable only if cloning must be done using storage snapshots. You can use S7000 storage arrays for Direct NFS Client without setting this variable.</p>
</li>
<li id="BABHJHBB">
<p>Run the clonedb.pl Perl script.</p>
<p>For an Oracle Database 11<span class="italic">g</span> Release 2 (11.2.0.4) or later database, the script is in the $ORACLE_HOME/rdbms/install directory.</p>
<p>For an Oracle Database 11<span class="italic">g</span> Release 2 (11.2.0.3) database, you can download the script from the My Oracle Support Note 1210656.1 ("Clone your dNFS Production Database for Testing") at <code dir="ltr"><a href="https://support.oracle.com/CSP/main/article?cmd=show&amp;type=NOT&amp;id=1210656.1">https://support.oracle.com/CSP/main/article?cmd=show&amp;type=NOT&amp;id=1210656.1</a></code>.</p>
<p>The clonedb.pl Perl script has the following syntax:</p>
<pre dir="ltr">
perl clonedb.pl <span class="italic">prod_db_pfile</span> [<span class="italic">sql_script1</span>] [<span class="italic">sql_script2</span>]
</pre>
<p>Specify the following options:</p>
<p><code dir="ltr"><span class="codeinlineitalic">prod_db_pfile</span></code> - Specify the full path of the production database's PFILE.</p>
<p><code dir="ltr"><span class="codeinlineitalic">sql_script1</span></code> - Specify a name for the first SQL script generated by clonedb.pl. The default is crtdb.sql.</p>
<p><code dir="ltr"><span class="codeinlineitalic">sql_script2</span></code> - Specify a name for the second SQL script generated by clonedb.pl. The default is dbren.sql.</p>
<p>The clonedb.pl script copies the production database's PFILE to the CloneDB database's directory. It also creates two SQL scripts that you will use to create the CloneDB database.</p>
</li>
<li>
<p>Check the two SQL scripts that were generated by the clonedb.pl Perl script, and make changes if necessary.</p>
</li>
<li>
<p>Modify the initialization parameters for the CloneDB database environment, and save the file.</p>
<p>Change any initialization parameter that is specific to the CloneDB database environment, such as parameters that control SGA size, PGA target, the number of CPUs, and so on. The <code dir="ltr">CLONEDB</code> parameter must be set to <code dir="ltr">TRUE</code>, and the initialization parameter file includes this parameter. See <a class="olink REFRN" href="../e40402/toc.htm"><span class="italic">Oracle Database Reference</span></a> for information about initialization parameters.</p>
</li>
<li>
<p>In SQL*Plus, connect to the CloneDB database with <code dir="ltr">SYSDBA</code> administrative privilege.</p>
</li>
<li>
<p>Run the SQL scripts generated by the clonedb.pl Perl script.</p>
<p>For example, if the scripts use the default names, then run the following scripts at the SQL prompt:</p>
<pre dir="ltr">
crtdb.sql
dbren.sql
</pre></li>
</ol>
<p><span class="bold">To create a SQL script manually, complete the following steps:</span></p>
<ol>
<li>
<p>Connect to the database with <code dir="ltr">SYSDBA</code> or <code dir="ltr">SYSBACKUP</code> administrative privilege.</p>
<p>See <a href="dba.htm#BABGCGFB">"Connecting to the Database with SQL*Plus"</a>.</p>
</li>
<li id="BABHIBHC">
<p>Generate a backup control file script from your production database by completing the following steps:</p>
<p>Run the following SQL statement:</p>
<pre dir="ltr">
ALTER DATABASE BACKUP CONTROLFILE TO TRACE;
</pre>
<p>This statement generates a trace file that contains the SQL statements that create the control file. The trace file containing the <code dir="ltr">CREATE</code> <code dir="ltr">CONTROLFILE</code> statement is stored in a directory determined by the <code dir="ltr">DIAGNOSTIC_DEST</code> initialization parameter. Check the database alert log for the name and location of this trace file.</p>
</li>
<li id="BABJAJBJ">
<p>Open the trace file generated in Step <a href="#BABHIBHC">b</a>, and copy the <code dir="ltr">STARTUP</code> <code dir="ltr">NOMOUNT</code> and <code dir="ltr">CREATE</code> <code dir="ltr">CONTROLFILE</code> statements in the trace file to a new SQL script.</p>
</li>
<li id="BABCJFGB">
<p>Edit the new SQL script you created in Step <a href="#BABJAJBJ">c</a> in the following ways:</p>
<p>Change the name of the database to the name of the CloneDB database you are creating. For example, change <code dir="ltr">PROD1</code> to <code dir="ltr">CLONE1</code>.</p>
<p>Change the locations of the log files to a directory in the CloneDB database environment. For example, change/u01/prod1/oracle/dbs/t_log1.f to /u03/clone1/oracle/dbs/t_log1.f.</p>
<p>Change the locations of the data files to the backup location. For example, change /u01/prod1/oracle/dbs/t_db1.f to /u02/oracle/backup/prod1/t_db1.f.</p>
<p>The following is an example of the original statements generated by the <code dir="ltr">ALTER</code> <code dir="ltr">DATABASE</code> <code dir="ltr">BACKUP</code> <code dir="ltr">CONTROLFILE</code> <code dir="ltr">TO</code> <code dir="ltr">TRACE</code> statement:</p>
<pre dir="ltr">
STARTUP NOMOUNT
CREATE CONTROLFILE REUSE DATABASE "PROD1" NORESETLOGS  ARCHIVELOG
    MAXLOGFILES 32
    MAXLOGMEMBERS 2
    MAXDATAFILES 32
    MAXINSTANCES 1
    MAXLOGHISTORY 292
LOGFILE
  GROUP 1 '/u01/prod1/oracle/dbs/t_log1.f'  SIZE 25M BLOCKSIZE 512,
  GROUP 2 '/u01/prod1/oracle/dbs/t_log2.f'  SIZE 25M BLOCKSIZE 512
-- STANDBY LOGFILE
DATAFILE
  '/u01/prod1/oracle/dbs/t_db1.f',
  '/u01/prod1/oracle/dbs/t_ax1.f',
  '/u01/prod1/oracle/dbs/t_undo1.f',
  '/u01/prod1/oracle/dbs/t_xdb1.f',
  '/u01/prod1/oracle/dbs/undots.dbf'
CHARACTER SET WE8ISO8859P1
;
</pre>
<p>The following is an example of the modified statements in the new SQL script:</p>
<pre dir="ltr">
STARTUP NOMOUNT PFILE=/u03/clone1/oracle/dbs/clone1.ora
CREATE CONTROLFILE REUSE DATABASE "CLONE1" RESETLOGS  ARCHIVELOG
    MAXLOGFILES 32
    MAXLOGMEMBERS 2
    MAXDATAFILES 32
    MAXINSTANCES 1
    MAXLOGHISTORY 292
LOGFILE
  GROUP 1 '/u03/clone1/oracle/dbs/t_log1.f'  SIZE 25M BLOCKSIZE 512,
  GROUP 2 '/u03/clone1/oracle/dbs/t_log2.f'  SIZE 25M BLOCKSIZE 512
-- STANDBY LOGFILE
DATAFILE
  '/u02/oracle/backup/prod1/t_db1.f',
  '/u02/oracle/backup/prod1/t_ax1.f',
  '/u02/oracle/backup/prod1/t_undo1.f',
  '/u02/oracle/backup/prod1/t_xdb1.f',
  '/u02/oracle/backup/prod1/undots.dbf'
CHARACTER SET WE8ISO8859P1
;
</pre>
<p>If you have a storage level snapshot taken on a data file, then you can replace the RMAN backup file names with the storage snapshot names.</p>
</li>
<li id="BABJIGFC">
<p>After you edit the SQL script, save it to a location that is accessible to the CloneDB database environment.</p>
<p>Make a note of the name and location of the new SQL script. You will run the script in a subsequent step. In this example, assume the name of the script is create_clonedb1.sql</p>
</li>
<li>
<p>Copy the text initialization parameter file (PFILE) from the production database environment to the CloneDB database environment.</p>
<p>For example, copy the text initialization parameter file from /u01/prod1/oracle/dbs to /u03/clone1/oracle/dbs. The name and location of the file must match the name and location specified in the <code dir="ltr">STARTUP</code> <code dir="ltr">NOMOUNT</code> command in the modified SQL script. In the example in Step <a href="#BABCJFGB">d</a>, the file is /u03/clone1/oracle/dbs/clone1.ora.</p>
</li>
<li>
<p>Modify the initialization parameters for the CloneDB database environment, and save the file.</p>
<p>Add the <code dir="ltr">CLONEDB</code> parameter, and ensure that this parameter is set to <code dir="ltr">TRUE</code>. Change any other initialization parameter that is specific to the CloneDB database environment, such as parameters that control SGA size, PGA target, the number of CPUs, and so on. See <a class="olink REFRN" href="../e40402/toc.htm"><span class="italic">Oracle Database Reference</span></a> for information about initialization parameters.</p>
</li>
<li>
<p>In SQL*Plus, connect to the CloneDB database with <code dir="ltr">SYSDBA</code> administrative privilege.</p>
</li>
<li>
<p>Run the SQL script you saved in Step <a href="#BABJIGFC">e</a>.</p>
<p>For example, enter the following in SQL*Plus:</p>
<pre dir="ltr">
@create_clonedb1.sql
</pre></li>
<li>
<p>For each data file in the backup location, run the <code dir="ltr">CLONEDB_RENAMEFILE</code> procedure in the <code dir="ltr">DBMS_DNFS</code> package and specify the appropriate location in the CloneDB database environment.</p>
<p>For example, run the following procedure if the backup data file is /u02/oracle/backup/prod1/t_db1.f and the CloneDB database data file is /u03/clone1/oracle/dbs/t_db1.f:</p>
<pre dir="ltr">
BEGIN
  DBMS_DNFS.CLONEDB_RENAMEFILE(
    srcfile  =&gt; '/u02/oracle/backup/prod1/t_db1.f',
    destfile =&gt; '/u03/clone1/oracle/dbs/t_db1.f');
END;
/
</pre>
<p>See <a class="olink ARPLS74814" href="http://www.oracle.com/pls/topic/lookup?ctx=db112&amp;id=ARPLS74814"><span class="italic">Oracle Database PL/SQL Packages and Types Reference</span></a> for more information about the <code dir="ltr">DBMS_DNFS</code> package.</p>
</li>
</ol>
</li>
<li>
<p>If you created your CloneDB database from an online backup, then recover the CloneDB database. This step is not required if you performed a full offline backup or a <code dir="ltr">BACKUP</code> <code dir="ltr">AS</code> <code dir="ltr">COPY</code> backup.</p>
<p>For example, run the following SQL statement on the CloneDB database:</p>
<pre dir="ltr">
RECOVER DATABASE USING BACKUP CONTROLFILE UNTIL CANCEL;
</pre>
<p>This statement prompts for the archived redo log files for the period when the backup was performed.</p>
</li>
<li id="BABBBIAJ">
<p>Open the database by running the following SQL statement:</p>
<pre dir="ltr">
ALTER DATABASE OPEN RESETLOGS;
</pre>
<p>The CloneDB database is ready for use.</p>
</li>
</ol>
<p>To create additional CloneDB databases of the production database, repeat Steps <a href="#BABIIJDB">3</a> - <a href="#BABBBIAJ">5</a> for each CloneDB database.</p>
</div>
<!-- class="sect2" -->
<a id="BABJCBGH"></a>
<div id="ADMIN14026" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">After Cloning a Database with CloneDB</h3>
<p>After a CloneDB database is created, you can use it in almost any way you use your production database. Initially, a CloneDB database uses a minimal amount of storage for each data file. Changes to rows in a CloneDB database cause storage space to be allocated on demand.</p>
<p>You can use the same backup files to create multiple CloneDB databases. This backup can be taken either by RMAN or by storage level snapshots. If you have a storage level snapshot taken on a data file, then you can replace the RMAN backup file names with the storage snapshot names.</p>
<p><a id="sthref339"></a>You can use the <code dir="ltr">V$CLONEDFILE</code> view to show information about the each data file in the CloneDB database. This information includes the data file name in the backup, the corresponding data file name in the CloneDB database, the number of blocks read from the backup file, and the number of requests issued against the backup file.</p>
<p>Because CloneDB databases use the backup files as their backend storage, the backup files must be available to each CloneDB database for it to run. If the backup files become unavailable, then the CloneDB databases return errors.</p>
<p>When your use of a CloneDB database is complete, you can destroy the CloneDB database environment. You can delete all of the files in the CloneDB database environment without affecting the production database environment or the backup environment.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink REFRN30713" href="../../server.112/e40402/dynviews_1083.htm#REFRN30713"><span class="italic">Oracle Database Reference</span></a> for more information about the <code dir="ltr">V$CLONEDFILE</code> view</div>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="i1009497"></a>
<div id="ADMIN00204" class="sect1">
<h2 class="sect1">Dropping a Database<a id="sthref340"></a></h2>
<p>Dropping a database involves removing its data files, redo log files, control files, and initialization parameter files.</p>
<div class="infoboxnotewarn">
<p class="notep1">WARNING:</p>
<p class="warnsp">Dropping a database deletes all data in the database.</p>
</div>
<p><span class="bold">To drop a database:</span></p>
<ul>
<li>
<p>Submit the following statement:</p>
<pre dir="ltr">
DROP DATABASE;
</pre></li>
</ul>
<p>The <a id="sthref341"></a><code dir="ltr">DROP</code> <code dir="ltr">DATABASE</code> statement first deletes all control files and all other database files listed in the control file. It then shuts down the database instance.</p>
<p>To use the <code dir="ltr">DROP</code> <code dir="ltr">DATABASE</code> statement successfully, the database must be mounted in exclusive and restricted mode.</p>
<p>The <code dir="ltr">DROP</code> <code dir="ltr">DATABASE</code> statement has no effect on archived log files, nor does it have any effect on copies or backups of the database. It is best to use RMAN to delete such files. If the database is on raw disks, the actual raw disk special files are not deleted.</p>
<p>If you used the Database Configuration Assistant to create your database, you can use that tool to delete (drop) your database and remove the files.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="start.htm#i1006443">"Altering Database Availability"</a></div>
</div>
<!-- class="sect1" -->
<a id="i1011991"></a>
<div id="ADMIN11135" class="sect1">
<h2 class="sect1">Database Data Dictionary Views<a id="sthref342"></a><a id="sthref343"></a></h2>
<p>In addition to the views listed previously in <a href="#i1010149">"Viewing Parameter Settings"</a>, you can view information about your database content and structure using the following views:</p>
<div class="inftblruleinformal">
<table class="cellalignment1333" title="Viewing Database Content and Structure" summary="The first column lists all of the views containing general database information, the second column is a corresponding description of each view." dir="ltr">
<thead>
<tr class="cellalignment1327">
<th class="cellalignment1334" id="r1c1-t81">View</th>
<th class="cellalignment1334" id="r1c2-t81">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1327">
<td class="cellalignment1335" id="r2c1-t81" headers="r1c1-t81"><code dir="ltr">DATABASE_PROPERTIES</code></td>
<td class="cellalignment1335" headers="r2c1-t81 r1c2-t81">Displays permanent database properties</td>
</tr>
<tr class="cellalignment1327">
<td class="cellalignment1335" id="r3c1-t81" headers="r1c1-t81"><code dir="ltr">GLOBAL_NAME</code></td>
<td class="cellalignment1335" headers="r3c1-t81 r1c2-t81">Displays the global database name</td>
</tr>
<tr class="cellalignment1327">
<td class="cellalignment1335" id="r4c1-t81" headers="r1c1-t81"><code dir="ltr">V$DATABASE</code></td>
<td class="cellalignment1335" headers="r4c1-t81 r1c2-t81">Contains database information from the control file</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblruleinformal" --></div>
<!-- class="sect1" --></div>
<!-- class="chapter" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment1326">
<tr>
<td class="cellalignment1335">
<table class="cellalignment1331">
<tr>
<td class="cellalignment1330"><a href="dba.htm"><img width="24" height="24" src="../../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment1330"><a href="start.htm"><img width="24" height="24" src="../../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;2001, 2015,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment1337">
<table class="cellalignment1329">
<tr>
<td class="cellalignment1330"><a href="../../index.htm"><img width="24" height="24" src="../../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment1330"><a href="../../nav/portal_booklist.htm"><img width="24" height="24" src="../../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment1330"><a href="toc.htm"><img width="24" height="24" src="../../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment1330"><a href="index.htm"><img width="24" height="24" src="../../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment1330"><a href="../../nav/mindx.htm"><img width="24" height="24" src="../../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment1330"><a href="../../dcommon/html/feedback.htm"><img width="24" height="24" src="../../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
</body>
</html>
