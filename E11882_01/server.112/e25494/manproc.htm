<!DOCTYPE html>
<html lang="en" >
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1">
<meta charset="utf-8">
<title>Managing Processes</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Merged Version 1055" />
<meta name="dcterms.created" content="2015-05-05T8:27:33Z" />
<meta name="robots" content="all" />
<meta name="dcterms.title" content="Database Administrator's Guide" />
<meta name="dcterms.identifier" content="E25494-07" />
<meta name="dcterms.isVersionOf" content="ADMIN" />
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;2001, 2015,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved." />
<link rel="Start" href="../../index.htm" title="Home" type="text/html" />
<link rel="Copyright" href="../../dcommon/html/cpyr.htm" title="Copyright" type="text/html" />

<script type="application/javascript"  src="../../dcommon/js/headfoot.js"></script>
<script type="application/javascript"  src="../../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html" />
<link rel="Index" href="index.htm" title="Index" type="text/html" />
<link rel="Prev" href="restart.htm" title="Previous" type="text/html" />
<link rel="Next" href="memory.htm" title="Next" type="text/html" />
<link rel="alternate" href="../e25494.pdf" title="PDF version" type="application/pdf" />
<link rel="schema.dcterms" href="http://purl.org/dc/terms/" />
<link rel="stylesheet" href="../../dcommon/css/fusiondoc.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/header.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/footer.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/fonts.css">
<link rel="stylesheet" href="../../dcommon/css/foundation.css">
<link rel="stylesheet" href="../../dcommon/css/codemirror.css">
<link rel="stylesheet" type="text/css" title="Default" href="../../nav/css/html5.css">
<link rel="stylesheet" href="../../dcommon/css/respond-480-tablet.css">
<link rel="stylesheet" href="../../dcommon/css/respond-768-laptop.css">
<link rel="stylesheet" href="../../dcommon/css/respond-1140-deskop.css">
<script type="application/javascript" src="../../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">12/49</span> <!-- End Header -->
<div id="ADMIN11000" class="chapter"><a id="g1019835"></a> <a id="i1006089"></a>
<h1 class="chapter"><span class="secnum">5</span> Managing Processes</h1>
<p>In this chapter:</p>
<ul>
<li>
<p><a href="#i1006130">About Dedicated and Shared Server Processes</a></p>
</li>
<li>
<p><a href="#CHDGIJIA">About Database Resident Connection Pooling</a></p>
</li>
<li>
<p><a href="#i1010000">Configuring Oracle Database for Shared Server</a></p>
</li>
<li>
<p><a href="#CHDGIDBA">Configuring Database Resident Connection Pooling</a></p>
</li>
<li>
<p><a href="#i1006460">About Oracle Database Background Processes</a></p>
</li>
<li>
<p><a href="#i1010373">Managing Processes for Parallel SQL Execution</a></p>
</li>
<li>
<p><a href="#i1106821">Managing Processes for External Procedures</a></p>
</li>
<li>
<p><a href="#i1006851">Terminating Sessions</a></p>
</li>
<li>
<p><a href="#CHDJFJIA">Process and Session Data Dictionary Views</a></p>
</li>
</ul>
<a id="i1006130"></a>
<div id="ADMIN11166" class="sect1">
<h2 class="sect1">About Dedicated and Shared Server Processes</h2>
<p>Oracle Database creates server processes to handle the requests of user processes connected to an instance. A server process can be either of the following:</p>
<ul>
<li>
<p>A <span class="bold">dedicated server process</span>, which services only one user process</p>
</li>
<li>
<p>A <span class="bold">shared server process</span>, which can service multiple user processes</p>
</li>
</ul>
<p>Your database is always enabled to allow dedicated server processes, but you must specifically configure and enable shared server by setting one or more initialization parameters.</p>
<div id="ADMIN11167" class="sect2"><a id="sthref858"></a>
<h3 class="sect2">Dedicated Server Processes</h3>
<p><a id="sthref859"></a><a id="sthref860"></a><a href="#i1007374">Figure 5-1, "Oracle Database Dedicated Server Processes"</a> illustrates how dedicated server processes work. In this diagram two user processes are connected to the database through dedicated server processes.</p>
<p>In general, it is better to be connected through a <span class="bold">dispatcher</span> and use a shared server process. This is illustrated in <a href="#i1006182">Figure 5-2, "Oracle Database Shared Server Processes"</a>. A shared server process can be more efficient because it keeps the number of processes required for the running instance low.</p>
<p>In the following situations, however, users and administrators should explicitly connect to an instance using a dedicated server process:</p>
<ul>
<li>
<p>To submit a batch job (for example, when a job can allow little or no idle time for the server process)</p>
</li>
<li>
<p>To use Recovery Manager (RMAN) to back up, restore, or recover a database</p>
</li>
</ul>
<p>To request a dedicated server connection when Oracle Database is configured for shared server, users must connect using a net service name that is configured to use a dedicated server. Specifically, the net service name value should include the <code dir="ltr">SERVER=DEDICATED</code> clause in the connect descriptor.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink NETAG002" href="../../network.112/e41945/concepts.htm#NETAG002"><span class="italic">Oracle Database Net Services Administrator's Guide</span></a> for more information about requesting a dedicated server connection</div>
<div id="ADMIN13013" class="figure">
<p class="titleinfigure"><a id="i1007374"></a>Figure 5-1 Oracle Database Dedicated Server Processes</p>
<img width="487" height="456" src="img/admin013.gif" alt="Description of Figure 5-1 follows" /><br />
<a id="sthref861" href="img_text/admin013.htm">Description of "Figure 5-1 Oracle Database Dedicated Server Processes"</a><br />
<br /></div>
<!-- class="figure" --></div>
<!-- class="sect2" -->
<a id="CIHDIDBD"></a>
<div id="ADMIN11168" class="sect2">
<h3 class="sect2">Shared Server <a id="sthref862"></a>Processes<a id="sthref863"></a></h3>
<p>Consider an order entry system with dedicated server processes. A customer phones the order desk and places an order, and the clerk taking the call enters the order into the database. For most of the transaction, the clerk is on the telephone talking to the customer. A server process is not needed during this time, so the server process dedicated to the clerk's user process remains idle. The system is slower for other clerks entering orders, because the idle server process is holding system resources.</p>
<p>Shared server architecture eliminates the need for a dedicated server process for each connection (see <a href="#i1006182">Figure 5-2</a>).</p>
<div id="ADMIN13014" class="figure">
<p class="titleinfigure"><a id="i1006182"></a>Figure 5-2 Oracle Database Shared Server Processes</p>
<img width="342" height="569" src="img/admin011.gif" alt="Description of Figure 5-2 follows" /><br />
<a id="sthref864" href="img_text/admin011.htm">Description of "Figure 5-2 Oracle Database Shared Server Processes"</a><br />
<br /></div>
<!-- class="figure" -->
<p>In a shared server configuration, client user processes connect to a dispatcher. The dispatcher can support multiple client connections concurrently. Each client connection is bound to a <span class="bold">virtual circuit</span>, which is a piece of shared memory used by the dispatcher for client database connection requests and replies. The dispatcher places a virtual circuit on a common queue when a request arrives.</p>
<p>An idle shared server process picks up the virtual circuit from the common queue, services the request, and relinquishes the virtual circuit before attempting to retrieve another virtual circuit from the common queue. This approach enables a small pool of server processes to serve a large number of clients. A significant advantage of shared server architecture over the dedicated server model is the reduction of system resources, enabling the support of an increased number of users.</p>
<p>For even better resource management, shared server can be configured for <span class="bold">connection pooling</span>. Connection pooling lets a dispatcher support more users by enabling the database server to time out protocol connections and to use those connections to service an active session. Further, shared server can be configured for <span class="bold">session multiplexing</span>, which combines multiple sessions for transmission over a single network connection in order to conserve the operating system's resources.</p>
<p>Shared server architecture requires Oracle Net Services. User processes targeting the shared server must connect through Oracle Net Services, even if they are on the same system as the Oracle Database instance.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink NETAG154" href="../../network.112/e41945/intro.htm#NETAG154"><span class="italic">Oracle Database Net Services Administrator's Guide</span></a> for more detailed information about shared server, including features such as connection pooling and session multiplexing</div>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="CHDGIJIA"></a>
<div id="ADMIN12347" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1"><a id="sthref865"></a>About Database Resident Connection Pooling</h2>
<p>Database Resident Connection Pooling (DRCP) provides a connection pool in the database server for typical Web application usage scenarios where the application acquires a database connection, works on it for a relatively short duration, and then releases it. DRCP pools "dedicated" servers. A <span class="bold">pooled server</span> is the equivalent of a server foreground process and a database session combined.</p>
<p>DRCP complements middle-tier connection pools that share connections between threads in a middle-tier process. In addition, DRCP enables sharing of database connections across middle-tier processes on the same middle-tier host and even across middle-tier hosts. This results in significant reduction in key database resources needed to support a large number of client connections, thereby reducing the database tier memory footprint and boosting the scalability of both middle-tier and database tiers. Having a pool of readily available servers also has the additional benefit of reducing the cost of creating and tearing down client connections.</p>
<p>DRCP is especially relevant for architectures with multi-process single threaded application servers (such as PHP/Apache) that cannot perform middle-tier connection pooling. The database can still scale to tens of thousands of simultaneous connections with DRCP.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
On Windows platforms, setting the <code dir="ltr">SQLNET.AUTHENTICATION_SERVICES</code> parameter value to <code dir="ltr">nts</code> is not supported with DRCP.</div>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a class="olink CNCPT1896" href="../../server.112/e40540/dist_pro.htm#CNCPT1896"><span class="italic">Oracle Database Concepts</span></a> for more details on DRCP</p>
</li>
<li>
<p><a class="olink LNOCI9110" href="../../appdev.112/e10646/oci09adv.htm#LNOCI9110"><span class="italic">Oracle Call Interface Programmer's Guide</span></a> for information about options that are available when obtaining a DRCP session</p>
</li>
</ul>
</div>
<p class="subhead2"><a id="ADMIN12549"></a>When To Use Database Resident Connection Pooling</p>
<p>Database resident connection pooling is useful when multiple clients access the database and when any of the following apply:</p>
<ul>
<li>
<p>A large number of client connections need to be supported with minimum memory usage.</p>
</li>
<li>
<p>The client applications are similar and can share or reuse sessions.</p>
<p>Applications are similar if they connect with the same database credentials and use the same schema.</p>
</li>
<li>
<p>The client applications acquire a database connection, work on it for a relatively short duration, and then release it.</p>
</li>
<li>
<p>Session affinity is not required across client requests.</p>
</li>
<li>
<p>There are multiple processes and multiple hosts on the client side.</p>
</li>
</ul>
<p class="subhead2"><a id="ADMIN12550"></a>Advantages<a id="sthref866"></a> of Database Resident Connection Pooling</p>
<p>Using database resident connection pooling provides the following advantages:</p>
<ul>
<li>
<p>Enables resource sharing among multiple middle-tier client applications.</p>
</li>
<li>
<p>Improves scalability of databases and applications by reducing resource usage.</p>
</li>
</ul>
<p class="subhead2"><a id="ADMIN13400"></a>Database Resident Connection Pooling and LOGON/LOGOFF Triggers<a id="sthref867"></a></p>
<p><code dir="ltr">LOGON</code> triggers fire for every authentication and every time a new session is created in DRCP.</p>
<p><code dir="ltr">LOGOFF</code> triggers fire on every log off and when the sessions are destroyed in DRCP. Therefore, a <code dir="ltr">LOGOFF</code> trigger fires when a session is terminated due to an idle time limit.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a class="olink LNPLS020" href="../../appdev.112/e25519/triggers.htm#LNPLS020"><span class="italic">Oracle Database PL/SQL Language Reference</span></a></p>
</li>
<li>
<p><a class="olink DBSEG60634" href="../../network.112/e36292/app_context.htm#DBSEG60634"><span class="italic">Oracle Database Security Guide</span></a></p>
</li>
</ul>
</div>
<div id="ADMIN12348" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref868"></a>
<h3 class="sect2">Comparing DRCP to Dedicated Server and Shared Server</h3>
<p><a href="#BABFCIEE">Table 5-1</a> lists the differences between dedicated server, shared server, and database resident connection pooling.</p>
<div id="ADMIN13015" class="tblformalwide">
<p class="titleintable"><a id="sthref869"></a><a id="BABFCIEE"></a>Table 5-1 Dedicated Servers, Shared Servers, and Database Resident Connection Pooling</p>
<table class="cellalignment1333" title="Dedicated Servers, Shared Servers, and Database Resident Connection Pooling" summary="This table describes the differences between shared server and database resident connection pooling." dir="ltr">
<thead>
<tr class="cellalignment1327">
<th class="cellalignment1334" id="r1c1-t7">Dedicated Server</th>
<th class="cellalignment1334" id="r1c2-t7">Shared Server</th>
<th class="cellalignment1334" id="r1c3-t7">Database Resident Connection Pooling</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1327">
<td class="cellalignment1335" id="r2c1-t7" headers="r1c1-t7">
<p>When a client request is received, a new server process and a session are created for the client.</p>
</td>
<td class="cellalignment1335" headers="r2c1-t7 r1c2-t7">
<p>When the first request is received from a client, the Dispatcher process places this request on a common queue. The request is picked up by an available shared server process. The Dispatcher process then manages the communication between the client and the shared server process.</p>
</td>
<td class="cellalignment1335" headers="r2c1-t7 r1c3-t7">
<p>When the first request is received from a client, the Connection Broker picks an available pooled server and hands off the client connection to the pooled server.</p>
<p>If no pooled servers are available, the Connection Broker creates one. If the pool has reached its maximum size, the client request is placed on the wait queue until a pooled server is available.</p>
</td>
</tr>
<tr class="cellalignment1327">
<td class="cellalignment1335" id="r3c1-t7" headers="r1c1-t7">
<p>Releasing database resources involves terminating the session and server process.</p>
</td>
<td class="cellalignment1335" headers="r3c1-t7 r1c2-t7">
<p>Releasing database resources involves terminating the session.</p>
</td>
<td class="cellalignment1335" headers="r3c1-t7 r1c3-t7">
<p>Releasing database resources involves releasing the pooled server to the pool.</p>
</td>
</tr>
<tr class="cellalignment1327">
<td class="cellalignment1335" id="r4c1-t7" headers="r1c1-t7">
<p>Memory requirement is proportional to the number of server processes and sessions. There is one server and one session for each client.</p>
</td>
<td class="cellalignment1335" headers="r4c1-t7 r1c2-t7">
<p>Memory requirement is proportional to the sum of the shared servers and sessions. There is one session for each client.</p>
</td>
<td class="cellalignment1335" headers="r4c1-t7 r1c3-t7">
<p>Memory requirement is proportional to the number of pooled servers and their sessions. There is one session for each pooled server.</p>
</td>
</tr>
<tr class="cellalignment1327">
<td class="cellalignment1335" id="r5c1-t7" headers="r1c1-t7">
<p>Session memory is allocated from the PGA.</p>
</td>
<td class="cellalignment1335" headers="r5c1-t7 r1c2-t7">
<p>Session memory is allocated from the SGA.</p>
</td>
<td class="cellalignment1335" headers="r5c1-t7 r1c3-t7">
<p>Session memory is allocated from the PGA.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformalwide" -->
<p class="subhead2"><a id="ADMIN12551"></a>Example of Memory Usage for Dedicated Server, Shared Server, and Database Resident Connection Pooling</p>
<p>Consider an application in which the memory required for each session is 400 KB and the memory required for each server process is 4 MB. The pool size is 100 and the number of shared servers used is 100.</p>
<p>If there are 5000 client connections, the memory used by each configuration is as follows:</p>
<ul>
<li>
<p>Dedicated Server</p>
<p>Memory used = 5000 X (400 KB + 4 MB) = 22 GB</p>
</li>
<li>
<p>Shared Server</p>
<p>Memory used = 5000 X 400 KB + 100 X 4 MB = 2.5 GB</p>
<p>Out of the 2.5 GB, 2 GB is allocated from the SGA.</p>
</li>
<li>
<p>Database Resident Connection Pooling</p>
<p>Memory used = 100 X (400 KB + 4 MB) + (5000 X 35KB)= 615 MB</p>
<p>The cost of each connection to the broker is approximately 35 KB.</p>
</li>
</ul>
</div>
<!-- class="sect2" -->
<div id="ADMIN12483" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref870"></a>
<h3 class="sect2">Restrictions on <a id="sthref871"></a>Using Database Resident Connection Pooling</h3>
<p>You cannot perform the following activities when connected with pooled servers:</p>
<ul>
<li>
<p>Shut down the database</p>
</li>
<li>
<p>Stop the database resident connection pool</p>
</li>
<li>
<p>Change the password for the connected user</p>
</li>
<li>
<p>Use shared database links to connect to a database resident connection pool</p>
</li>
<li>
<p>Use Advanced Security Option (ASO) options such as encryption, certificates, and so on</p>
</li>
<li>
<p>Use migratable sessions on the server side directly by using the OCI_MIGRATE option or indirectly through OCIConnectionPool</p>
</li>
</ul>
<p>DDL statements that pertain to database users in the pool need to be performed carefully, as the pre-DDL sessions in the pool can still be given to clients post-DDL. For example, while dropping users, ensure that there are no sessions of that user in the pool and no connections to the Broker that were authenticated as that user.</p>
<p>Sessions with explicit roles enabled, that are released to the pool, can be later handed out to connections (of the same user) that need the default logon role. Avoid releasing sessions with explicit roles, and instead terminate them.</p>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="i1010000"></a>
<div id="ADMIN00502" class="sect1">
<h2 class="sect1">Configuring Oracle Database for Shared Server</h2>
<p>This section discusses how to enable shared server and how to set or alter shared server initialization parameters. It contains the following topics:</p>
<ul>
<li>
<p><a href="#i1006227">Initialization Parameters for Shared Server</a></p>
</li>
<li>
<p><a href="#CIHGJJDD">Memory Management for Shared Server</a></p>
</li>
<li>
<p><a href="#i1007216">Enabling Shared Server</a></p>
</li>
<li>
<p><a href="#i1008129">Configuring Dispatchers</a></p>
</li>
<li>
<p><a href="#CIHCGEGJ">Disabling Shared Server</a></p>
</li>
<li>
<p><a href="#i1009696">Shared Server Data Dictionary Views</a></p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="#i1006130">"About Dedicated and Shared Server Processes"</a></p>
</li>
<li>
<p><a class="olink SQLRF009" href="../../server.112/e41084/statements_2.htm#SQLRF009"><span class="italic">Oracle Database SQL Language Reference</span></a> for further information about the <code dir="ltr">ALTER</code> <code dir="ltr">SYSTEM</code> statement</p>
</li>
</ul>
</div>
</li>
</ul>
<a id="i1006227"></a>
<div id="ADMIN11169" class="sect2">
<h3 class="sect2"><a id="sthref872"></a>I<a id="sthref873"></a>nitialization Parameters for Shared Server</h3>
<p>The following initialization parameters control shared server operation:</p>
<ul>
<li>
<p><code dir="ltr">SHARED_SERVERS</code>: Specifies the initial number of shared servers to start and the minimum number of shared servers to keep. This is the only required parameter for using shared servers.</p>
</li>
<li>
<p><code dir="ltr">MAX_SHARED_SERVERS</code>: Specifies the maximum number of shared servers that can run simultaneously.</p>
</li>
<li>
<p><code dir="ltr">SHARED_SERVER_SESSIONS</code>: Specifies the total number of shared server user sessions that can run simultaneously. Setting this parameter enables you to reserve user sessions for dedicated servers.</p>
</li>
<li>
<p><code dir="ltr">DISPATCHERS</code>: Configures dispatcher processes in the shared server architecture.</p>
</li>
<li>
<p><code dir="ltr">MAX_DISPATCHERS</code>: Specifies the maximum number of dispatcher processes that can run simultaneously. This parameter can be ignored for now. It will only be useful in a future release when the number of dispatchers is auto-tuned according to the number of concurrent connections.</p>
</li>
<li>
<p><code dir="ltr">CIRCUITS</code>: Specifies the total number of virtual circuits that are available for inbound and outbound network sessions.</p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink REFRN001" href="../../server.112/e40402/initparams_part.htm#REFRN001"><span class="italic">Oracle Database Reference</span></a> for more information about these initialization parameters</div>
</div>
<!-- class="sect2" -->
<a id="CIHGJJDD"></a>
<div id="ADMIN13345" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Memory Management for Shared Server</h3>
<p>Shared server requires some user global area (UGA) in either the shared pool or large pool. For installations with a small number of simultaneous sessions, the default sizes for these system global area (SGA) components are generally sufficient. However, if you expect a large number of sessions for your installation, you may have to tune memory to support shared server.</p>
<p>See the "Configuring and Using Memory" section of <a class="olink PFGRF94328" href="../../server.112/e41573/memory.htm#PFGRF94328"><span class="italic">Oracle Database Performance Tuning Guide</span></a> for guidelines.</p>
</div>
<!-- class="sect2" -->
<a id="i1007216"></a>
<div id="ADMIN11170" class="sect2">
<h3 class="sect2">Enabling Shared Server</h3>
<p>Shared server is enabled by setting the <code dir="ltr">SHARED_SERVERS</code> initialization parameter to a value greater than 0. The other shared server initialization parameters need not be set. Because shared server requires at least one dispatcher in order to work, a dispatcher is brought up even if no dispatcher has been configured. Dispatchers are discussed in <a href="#i1008129">"Configuring Dispatchers"</a>.</p>
<p>Shared server can be started dynamically by setting the <code dir="ltr">SHARED_SERVERS</code> parameter to a nonzero value with the <code dir="ltr">ALTER SYSTEM</code> statement, or <code dir="ltr">SHARED_SERVERS</code> can be included at database startup in the initialization parameter file. If <code dir="ltr">SHARED_SERVERS</code> is not included in the initialization parameter file, or is included but is set to 0, then shared server is not enabled at database startup.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
If <code dir="ltr">SHARED_SERVERS</code> is not included in the initialization parameter file at database startup, but <code dir="ltr">DISPATCHERS</code> is included and it specifies at least one dispatcher, shared server is enabled. In this case, the default for <code dir="ltr">SHARED_SERVERS</code> is 1.
<p>If neither <code dir="ltr">SHARED_SERVERS</code> nor <code dir="ltr">DISPATCHERS</code> is included in the initialization file, you cannot start shared server after the instance is brought up by just altering the <code dir="ltr">DISPATCHERS</code> parameter. You must specifically alter <code dir="ltr">SHARED_SERVERS</code> to a nonzero value to start shared server.</p>
</div>
<div class="infobox-note">
<p class="notep1">Note:</p>
If you create your Oracle database with Database Configuration Assistant (DBCA), DBCA configures a dispatcher for Oracle XML DB (XDB). This is because XDB protocols like HTTP and FTP require shared server. This results in a <code dir="ltr">SHARED_SERVER</code> value of 1. Although shared server is enabled, this configuration permits only sessions that connect to the XDB service to use shared server. To enable shared server for regular database sessions (for submitting SQL statements), you must add an additional dispatcher configuration, or replace the existing configuration with one that is not specific to XDB. See <a href="#i1008129">"Configuring Dispatchers"</a> for instructions.</div>
<div id="ADMIN11171" class="sect3"><a id="sthref874"></a>
<h4 class="sect3">Determining a Value for SHARED_SERVERS</h4>
<p><code dir="ltr">The SHARED_SERVERS</code> initialization parameter specifies the minimum number of shared servers that you want created when the instance is started. After instance startup, Oracle Database can dynamically adjust the number of shared servers based on how busy existing shared servers are and the length of the request queue.</p>
<p>In typical systems, the number of shared servers stabilizes at a ratio of one shared server for every ten connections. For OLTP applications, when the rate of requests is low, or when the ratio of server usage to request is low, the connections-to-servers ratio could be higher. In contrast, in applications where the rate of requests is high or the server usage-to-request ratio is high, the connections-to-server ratio could be lower.</p>
<p>The PMON (process monitor) background process cannot terminate shared servers below the value specified by <code dir="ltr">SHARED_SERVERS</code>. Therefore, you can use this parameter to stabilize the load and minimize strain on the system by preventing PMON from terminating and then restarting shared servers because of coincidental fluctuations in load.</p>
<p>If you know the average load on your system, you can set <code dir="ltr">SHARED_SERVERS</code> to an optimal value. The following example shows how you can use this parameter:</p>
<p>Assume a database is being used by a telemarketing center staffed by 1000 agents. On average, each agent spends 90% of the time talking to customers and only 10% of the time looking up and updating records. To keep the shared servers from being terminated as agents talk to customers and then spawned again as agents access the database, a DBA specifies that the optimal number of shared servers is 100.</p>
<p>However, not all work shifts are staffed at the same level. On the night shift, only 200 agents are needed. Since <code dir="ltr">SHARED_SERVERS</code> is a dynamic parameter, a DBA reduces the number of shared servers to 20 at night, thus allowing resources to be freed up for other tasks such as batch jobs.</p>
</div>
<!-- class="sect3" -->
<div id="ADMIN11172" class="sect3"><a id="sthref875"></a>
<h4 class="sect3">Decreasing the Number of Shared Server Processes</h4>
<p><a id="sthref876"></a><a id="sthref877"></a><a id="sthref878"></a>You can decrease the minimum number of shared servers that must be kept active by dynamically setting the <code dir="ltr">SHARED_SERVERS</code> parameter to a lower value. Thereafter, until the number of shared servers is decreased to the value of the <code dir="ltr">SHARED_SERVERS</code> parameter, any shared servers that become inactive are marked by PMON for termination.</p>
<p>The following statement reduces the number of shared servers:</p>
<pre dir="ltr">
ALTER SYSTEM SET SHARED_SERVERS = 5;
</pre>
<p><a id="sthref879"></a>Setting <code dir="ltr">SHARED_SERVERS</code> to 0 disables shared server. For more information, see <a href="#CIHCGEGJ">"Disabling Shared Server"</a>.</p>
</div>
<!-- class="sect3" -->
<div id="ADMIN11173" class="sect3"><a id="sthref880"></a>
<h4 class="sect3">Limiting the Number of Shared Server Processes</h4>
<p>The <code dir="ltr">MAX_SHARED_SERVERS</code> parameter specifies the maximum number of shared servers that can be automatically created by PMON. It has no default value. If no value is specified, then PMON starts as many shared servers as is required by the load, subject to these limitations:</p>
<ul>
<li>
<p>The process limit (set by the <code dir="ltr">PROCESSES</code> initialization parameter)</p>
</li>
<li>
<p>A minimum number of free process slots (at least one-eighth of the total process slots, or two slots if <code dir="ltr">PROCESSES</code> is set to less than 24)</p>
</li>
<li>
<p>System resources</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
On Windows NT, take care when setting <code dir="ltr">MAX_SHARED_SERVERS</code> to a high value, because each server is a thread in a common process.</div>
</li>
</ul>
<p>The value of <code dir="ltr">SHARED_SERVERS</code> overrides the value of <code dir="ltr">MAX_SHARED_SERVERS</code>. Therefore, you can force PMON to start more shared servers than the <code dir="ltr">MAX_SHARED_SERVERS</code> value by setting <code dir="ltr">SHARED_SERVERS</code> to a value higher than <code dir="ltr">MAX_SHARED_SERVERS</code>. You can subsequently place a new upper limit on the number of shared servers by dynamically altering the <code dir="ltr">MAX_SHARED_SERVERS</code> to a value higher than <code dir="ltr">SHARED_SERVERS</code>.</p>
<p>The primary reason to limit the number of shared servers is to reserve resources, such as memory and CPU time, for other processes. For example, consider the case of the telemarketing center discussed previously:</p>
<p>The DBA wants to reserve two thirds of the resources for batch jobs at night. He sets <code dir="ltr">MAX_SHARED_SERVERS</code> to less than one third of the maximum number of processes (<code dir="ltr">PROCESSES</code>). By doing so, the DBA ensures that even if all agents happen to access the database at the same time, batch jobs can connect to dedicated servers without having to wait for the shared servers to be brought down after processing agents' requests.</p>
<p>Another reason to limit the number of shared servers is to prevent the concurrent run of too many server processes from slowing down the system due to heavy swapping, although <code dir="ltr">PROCESSES</code> can serve as the upper bound for this rather than <code dir="ltr">MAX_SHARED_SERVERS</code>.</p>
<p>Still other reasons to limit the number of shared servers are testing, debugging, performance analysis, and tuning. For example, to see how many shared servers are needed to efficiently support a certain user community, you can vary <code dir="ltr">MAX_SHARED_SERVERS</code> from a very small number upward until no delay in response time is noticed by the users.</p>
</div>
<!-- class="sect3" -->
<div id="ADMIN11174" class="sect3"><a id="sthref881"></a>
<h4 class="sect3">Limiting the Number of Shared Server Sessions</h4>
<p>The <code dir="ltr">SHARED_SERVER_SESSIONS</code> initialization parameter specifies the maximum number of concurrent shared server user sessions. Setting this parameter, which is a dynamic parameter, lets you reserve database sessions for dedicated servers. This in turn ensures that administrative tasks that require dedicated servers, such as backing up or recovering the database, are not preempted by shared server sessions.</p>
<p>This parameter has no default value. If it is not specified, the system can create shared server sessions as needed, limited by the <code dir="ltr">SESSIONS</code> initialization parameter.</p>
</div>
<!-- class="sect3" -->
<div id="ADMIN11175" class="sect3"><a id="sthref882"></a>
<h4 class="sect3">Protecting Shared Memory</h4>
<p>The <code dir="ltr">CIRCUITS</code> parameter sets a maximum limit on the number of virtual circuits that can be created in shared memory. This parameter has no default. If it is not specified, then the system can create circuits as needed, limited by the <code dir="ltr">DISPATCHERS</code> initialization parameter and system resources.</p>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="i1008129"></a>
<div id="ADMIN11176" class="sect2">
<h3 class="sect2">Configuring Dispatchers<a id="sthref883"></a></h3>
<p>The <code dir="ltr">DISPATCHERS</code> initialization parameter configures dispatcher processes in the shared server architecture. At least one dispatcher process is required for shared server to work.If you do not specify a dispatcher, but you enable shared server by setting <code dir="ltr">SHARED_SERVER</code> to a nonzero value, then by default Oracle Database creates one dispatcher for the TCP protocol. The equivalent <code dir="ltr">DISPATCHERS</code> explicit setting of the initialization parameter for this configuration is:</p>
<pre dir="ltr">
dispatchers="(PROTOCOL=tcp)"
</pre>
<p>You can configure more dispatchers, using the <code dir="ltr">DISPATCHERS</code> initialization parameter, if either of the following conditions apply:</p>
<ul>
<li>
<p>You must configure a protocol other than TCP/IP. You configure a protocol address with one of the following attributes of the DISPATCHERS parameter:</p>
<ul>
<li>
<p><a href="#i1012890"><code dir="ltr">ADDRESS</code></a></p>
</li>
<li>
<p><a href="#i1011323"><code dir="ltr">DESCRIPTION</code></a></p>
</li>
<li>
<p><a href="#i1011327"><code dir="ltr">PROTOCOL</code></a></p>
</li>
</ul>
</li>
<li>
<p>You want to configure one or more of the optional dispatcher attributes:</p>
<ul>
<li>
<p><a href="#i1011780"><code dir="ltr">DISPATCHERS</code></a></p>
</li>
<li>
<p><a href="#i1011335"><code dir="ltr">CONNECTIONS</code></a></p>
</li>
<li>
<p><a href="#i1011339"><code dir="ltr">SESSIONS</code></a></p>
</li>
<li>
<p><a href="#i1011343"><code dir="ltr">TICKS</code></a></p>
</li>
<li>
<p><a href="#i1011347"><code dir="ltr">LISTENER</code></a></p>
</li>
<li>
<p><a href="#i1011351"><code dir="ltr">MULTIPLEX</code></a></p>
</li>
<li>
<p><a href="#i1011355"><code dir="ltr">POOL</code></a></p>
</li>
<li>
<p><a href="#i1011359"><code dir="ltr">SERVICE</code></a></p>
<div class="infobox-note">
<p class="notep1">Note:</p>
<a id="sthref884"></a>Database Configuration Assistant helps you configure this parameter.</div>
</li>
</ul>
</li>
</ul>
<div id="ADMIN11177" class="sect3"><a id="sthref885"></a>
<h4 class="sect3">DISPATCHERS Initialization Parameter Attributes</h4>
<p>This section provides brief descriptions of the attributes that can be specified with the <code dir="ltr"><a id="sthref886"></a>DISPATCHERS</code> initialization parameter.</p>
<p>A protocol address is required and is specified using one or more of the following attributes:</p>
<div class="inftblinformal">
<table class="cellalignment1333" title="DISPATCHERS Parameter Attributes" summary="In the left column, this table lists the attributes of the DISPATCHERS initialization parameter that can be used can be used to specify a protocol address. The right column describes the attributes use." dir="ltr">
<thead>
<tr class="cellalignment1327">
<th class="cellalignment1334" id="r1c1-t14">Attribute</th>
<th class="cellalignment1334" id="r1c2-t14">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1327">
<td class="cellalignment1335" id="r2c1-t14" headers="r1c1-t14"><a id="i1012890"></a><code dir="ltr">ADDRESS</code></td>
<td class="cellalignment1335" headers="r2c1-t14 r1c2-t14">Specify the network protocol address of the endpoint on which the dispatchers listen.</td>
</tr>
<tr class="cellalignment1327">
<td class="cellalignment1335" id="r3c1-t14" headers="r1c1-t14"><a id="i1011323"></a><code dir="ltr">DESCRIPTION</code></td>
<td class="cellalignment1335" headers="r3c1-t14 r1c2-t14">Specify the network description of the endpoint on which the dispatchers listen, including the network protocol address. The syntax is as follows:
<pre dir="ltr">
(DESCRIPTION=(ADDRESS=...))
</pre></td>
</tr>
<tr class="cellalignment1327">
<td class="cellalignment1335" id="r4c1-t14" headers="r1c1-t14"><a id="i1011327"></a><code dir="ltr">PROTOCOL</code></td>
<td class="cellalignment1335" headers="r4c1-t14 r1c2-t14">Specify the network protocol for which the dispatcher generates a listening endpoint. For example:
<pre dir="ltr">
(PROTOCOL=tcp) 
</pre>
<p>See the <a class="olink NETRF004" href="../../network.112/e10835/protocoladd.htm#NETRF004"><span class="italic">Oracle Database Net Services Reference</span></a> for further information about protocol address syntax.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" -->
<p>The following attribute specifies how many dispatchers this configuration should have. It is optional and defaults to 1.</p>
<div class="inftblinformal">
<table class="cellalignment1333" title="The DISPATCHERS Attribute of the DiSPATCHERS Parameter" summary="This table describes the DISPATCHERS attribute of the DISPATCHERS initialization parameter." dir="ltr">
<thead>
<tr class="cellalignment1327">
<th class="cellalignment1334" id="r1c1-t15">Attribute</th>
<th class="cellalignment1334" id="r1c2-t15">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1327">
<td class="cellalignment1335" id="r2c1-t15" headers="r1c1-t15"><a id="i1011780"></a><code dir="ltr">DISPATCHERS</code></td>
<td class="cellalignment1335" headers="r2c1-t15 r1c2-t15">Specify the initial number of dispatchers to start.</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" -->
<p>The following attributes tell the instance about the network attributes of each dispatcher of this configuration. They are all optional.</p>
<div class="inftblinformal">
<table class="cellalignment1333" title="The Network Attributes of the DISPATCHERS Parameter" summary="This table describes the network attributes of the DISPATCHERS initialization parameter. The attribute is listed in the first column, the second column contains a description of the attribute." dir="ltr">
<thead>
<tr class="cellalignment1327">
<th class="cellalignment1334" id="r1c1-t16">Attribute</th>
<th class="cellalignment1334" id="r1c2-t16">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1327">
<td class="cellalignment1335" id="r2c1-t16" headers="r1c1-t16"><a id="i1011335"></a><code dir="ltr">CONNECTIONS</code></td>
<td class="cellalignment1335" headers="r2c1-t16 r1c2-t16">Specify the maximum number of network connections to allow for each dispatcher.</td>
</tr>
<tr class="cellalignment1327">
<td class="cellalignment1335" id="r3c1-t16" headers="r1c1-t16"><a id="i1011339"></a><code dir="ltr">SESSIONS</code></td>
<td class="cellalignment1335" headers="r3c1-t16 r1c2-t16">Specify the maximum number of network sessions to allow for each dispatcher.</td>
</tr>
<tr class="cellalignment1327">
<td class="cellalignment1335" id="r4c1-t16" headers="r1c1-t16"><a id="i1011343"></a><code dir="ltr">TICKS</code></td>
<td class="cellalignment1335" headers="r4c1-t16 r1c2-t16">Specify the duration of a TICK in seconds. A TICK is a unit of time in terms of which the connection pool timeout can be specified. Used for connection pooling.</td>
</tr>
<tr class="cellalignment1327">
<td class="cellalignment1335" id="r5c1-t16" headers="r1c1-t16"><a id="i1011347"></a><code dir="ltr">LISTENER</code></td>
<td class="cellalignment1335" headers="r5c1-t16 r1c2-t16">Specify an alias name for the listeners with which the PMON process registers dispatcher information. Set the alias to a name that is resolved through a naming method.</td>
</tr>
<tr class="cellalignment1327">
<td class="cellalignment1335" id="r6c1-t16" headers="r1c1-t16"><a id="i1011351"></a><code dir="ltr">MULTIPLEX</code></td>
<td class="cellalignment1335" headers="r6c1-t16 r1c2-t16">Used to enable the Oracle Connection Manager session multiplexing feature.</td>
</tr>
<tr class="cellalignment1327">
<td class="cellalignment1335" id="r7c1-t16" headers="r1c1-t16"><a id="i1011355"></a><code dir="ltr">POOL</code></td>
<td class="cellalignment1335" headers="r7c1-t16 r1c2-t16">Used to enable connection pooling.</td>
</tr>
<tr class="cellalignment1327">
<td class="cellalignment1335" id="r8c1-t16" headers="r1c1-t16"><a id="i1011359"></a><code dir="ltr">SERVICE</code></td>
<td class="cellalignment1335" headers="r8c1-t16 r1c2-t16">Specify the service names the dispatchers register with the listeners.</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" -->
<p>You can specify either an entire attribute name a substring consisting of at least the first three characters. For example, you can specify <code dir="ltr">SESSIONS=3,</code> <code dir="ltr">SES=3</code>, <code dir="ltr">SESS=3</code>, or <code dir="ltr">SESSI=3</code>, and so forth.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink REFRN10049" href="../../server.112/e40402/initparams080.htm#REFRN10049"><span class="italic">Oracle Database Reference</span></a> for more detailed descriptions of the attributes of the <code dir="ltr">DISPATCHERS</code> initialization parameter</div>
</div>
<!-- class="sect3" -->
<div id="ADMIN11178" class="sect3"><a id="sthref887"></a>
<h4 class="sect3">Determining the Number of Dispatchers</h4>
<p>Once you know the number of possible connections for each process for the operating system, calculate the initial number of dispatchers to create during instance startup, for each network protocol, using the following formula:</p>
<pre dir="ltr">
Number of dispatchers =
   CEIL ( max. concurrent sessions / connections for each dispatcher )
</pre>
<p><code dir="ltr">CEIL</code> returns the result roundest up to the next whole integer.</p>
<p>For example, assume a system that can support 970 connections for each process, and that has:</p>
<ul>
<li>
<p>A maximum of 4000 sessions concurrently connected through TCP/IP and</p>
</li>
<li>
<p>A maximum of 2,500 sessions concurrently connected through TCP/IP with SSL</p>
</li>
</ul>
<p>The <code dir="ltr">DISPATCHERS</code> attribute for TCP/IP should be set to a minimum of five dispatchers (4000 / 970), and for TCP/IP with SSL three dispatchers (2500 / 970:</p>
<pre dir="ltr">
DISPATCHERS='(PROT=tcp)(DISP=5)', '(PROT=tcps)(DISP=3)'
</pre>
<p>Depending on performance, you may need to adjust the number of dispatchers.</p>
</div>
<!-- class="sect3" -->
<div id="ADMIN11179" class="sect3"><a id="sthref888"></a>
<h4 class="sect3">Setting the Initial Number of Dispatchers<a id="sthref889"></a><a id="sthref890"></a><a id="sthref891"></a><a id="sthref892"></a></h4>
<p>You can specify multiple dispatcher configurations by setting <code dir="ltr">DISPATCHERS</code> to a comma separated list of strings, or by specifying multiple <code dir="ltr">DISPATCHERS</code> parameters in the initialization file. If you specify <code dir="ltr">DISPATCHERS</code> multiple times, the lines must be adjacent to each other in the initialization parameter file. Internally, Oracle Database assigns an <code dir="ltr">INDEX</code> value (beginning with zero) to each <code dir="ltr">DISPATCHERS</code> parameter. You can later refer to that <code dir="ltr">DISPATCHERS</code> parameter in an <code dir="ltr">ALTER SYSTEM</code> statement by its index number.</p>
<p>Some examples of setting the <code dir="ltr">DISPATCHERS</code> initialization parameter follow.</p>
<p><a id="ADMIN12552"></a><span class="subhead3">Example: Typical&nbsp;</span>This is a typical example of setting the <code dir="ltr">DISPATCHERS</code> initialization parameter.</p>
<pre dir="ltr">
DISPATCHERS="(PROTOCOL=TCP)(DISPATCHERS=2)"
</pre>
<p><a id="ADMIN12553"></a><span class="subhead3">Example: Forcing the IP Address Used for Dispatchers&nbsp;</span>The following hypothetical example will create two dispatchers that will listen on the specified IP address. The address must be a valid IP address for the host that the instance is on. (The host may be configured with multiple IP addresses.)</p>
<pre dir="ltr">
DISPATCHERS="(ADDRESS=(PROTOCOL=TCP)(HOST=144.25.16.201))(DISPATCHERS=2)"
</pre>
<p><a id="ADMIN12554"></a><span class="subhead3">Example: Forcing the Port Used by Dispatchers&nbsp;</span>To force the dispatchers to use a specific port as the listening endpoint, add the <code dir="ltr">PORT</code> attribute as follows:</p>
<pre dir="ltr">
DISPATCHERS="(ADDRESS=(PROTOCOL=TCP)(PORT=5000))"
DISPATCHERS="(ADDRESS=(PROTOCOL=TCP)(PORT=5001))"
</pre></div>
<!-- class="sect3" -->
<a id="i1006352"></a>
<div id="ADMIN11180" class="sect3">
<h4 class="sect3">Altering the Number of Dispatchers</h4>
<p>You can control the number of dispatcher processes in the instance. Unlike the number of shared servers, the number of dispatchers does not change automatically. You change the number of dispatchers explicitly with the <code dir="ltr">ALTER SYSTEM</code> statement. In this release of Oracle Database, you can increase the number of dispatchers to more than the limit specified by the <code dir="ltr">MAX_DISPATCHERS</code> parameter. It is planned that <code dir="ltr">MAX_DISPATCHERS</code> will be taken into consideration in a future release.</p>
<p>Monitor the following views to determine the load on the dispatcher processes:</p>
<ul>
<li>
<p><a id="sthref893"></a><code dir="ltr">V$QUEUE</code></p>
</li>
<li>
<p><a id="sthref894"></a><code dir="ltr">V$DISPATCHER</code></p>
</li>
<li>
<p><a id="sthref895"></a><code dir="ltr">V$DISPATCHER_RATE</code></p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink PFGRF021" href="../../server.112/e41573/build_db.htm#PFGRF021"><span class="italic">Oracle Database Performance Tuning Guide</span></a> for information about monitoring these views to determine dispatcher load and performance</div>
</li>
</ul>
<p>If these views indicate that the load on the dispatcher processes is consistently high, then performance may be improved by starting additional dispatcher processes to route user requests. In contrast, if the load on dispatchers is consistently low, reducing the number of dispatchers may improve performance.</p>
<p>To dynamically alter the number of dispatchers when the instance is running, use the <code dir="ltr">ALTER SYSTEM</code> statement to modify the <code dir="ltr">DISPATCHERS</code> attribute setting for an existing dispatcher configuration. You can also add new dispatcher configurations to start dispatchers with different network attributes.</p>
<p>When you reduce the number of dispatchers for a particular dispatcher configuration, the dispatchers are not immediately removed. Rather, as users disconnect, Oracle Database terminates dispatchers down to the limit you specify in <code dir="ltr">DISPATCHERS</code>,</p>
<p>For example, suppose the instance was started with this <code dir="ltr">DISPATCHERS</code> setting in the initialization parameter file:</p>
<pre dir="ltr">
DISPATCHERS='(PROT=tcp)(DISP=2)', '(PROT=tcps)(DISP=2)'
</pre>
<p>To increase the number of dispatchers for the TCP/IP protocol from 2 to 3, and decrease the number of dispatchers for the TCP/IP with SSL protocol from 2 to 1, you can issue the following statement:</p>
<pre dir="ltr">
ALTER SYSTEM SET DISPATCHERS = '(INDEX=0)(DISP=3)', '(INDEX=1)(DISP=1)';
</pre>
<p>or</p>
<pre dir="ltr">
ALTER SYSTEM SET DISPATCHERS = '(PROT=tcp)(DISP=3)', '(PROT=tcps)(DISP=1)';
</pre>
<div class="infobox-note">
<p class="notep1">Note:</p>
You need not specify (<code dir="ltr">DISP=1</code>). It is optional because 1 is the default value for the <code dir="ltr">DISPATCHERS</code> parameter.</div>
<p>If fewer than three dispatcher processes currently exist for TCP/IP, the database creates new ones. If multiple dispatcher processes currently exist for TCP/IP with SSL, then the database terminates the extra ones as the connected users disconnect.</p>
<p>Suppose that instead of changing the number of dispatcher processes for the TCP/IP protocol, you want to add another TCP/IP dispatcher that supports connection pooling. You can do so by entering the following statement:</p>
<pre dir="ltr">
ALTER SYSTEM SET DISPATCHERS = '(INDEX=2)(PROT=tcp)(POOL=on)';
</pre>
<p>The <code dir="ltr">INDEX</code> attribute is needed to add the new dispatcher configuration. If you omit (<code dir="ltr">INDEX=2</code>) in the preceding statement, then the TCP/IP dispatcher configuration at INDEX 0 will be changed to support connection pooling, and the number of dispatchers for that configuration will be reduced to 1, which is the default when the number of dispatchers (attribute <code dir="ltr">DISPATCHERS</code>) is not specified.</p>
<div id="ADMIN11181" class="sect4"><a id="sthref896"></a>
<h5 class="sect4">Notes on Altering Dispatchers</h5>
<ul>
<li>
<p>The <code dir="ltr">INDEX</code> keyword can be used to identify which dispatcher configuration to modify. If you do not specify <code dir="ltr">INDEX</code>, then the first dispatcher configuration matching the <code dir="ltr">DESCRIPTION</code>, <code dir="ltr">ADDRESS</code>, or <code dir="ltr">PROTOCOL</code> specified will be modified. If no match is found among the existing dispatcher configurations, then a new dispatcher will be added.</p>
</li>
<li>
<p>The <code dir="ltr">INDEX</code> value can range from 0 to <code dir="ltr"><span class="codeinlineitalic">n</span></code>-1, where <code dir="ltr"><span class="codeinlineitalic">n</span></code> is the current number of dispatcher configurations. If your <code dir="ltr">ALTER SYSTEM</code> statement specifies an <code dir="ltr">INDEX</code> value equal to <code dir="ltr"><span class="codeinlineitalic">n</span></code>, where <code dir="ltr"><span class="codeinlineitalic">n</span></code> is the current number of dispatcher configurations, a new dispatcher configuration will be added.</p>
</li>
<li>
<p>To see the values of the current dispatcher configurations--that is, the number of dispatchers, whether connection pooling is on, and so forth--query the <code dir="ltr">V$DISPATCHER_CONFIG</code> dynamic performance view. To see which dispatcher configuration a dispatcher is associated with, query the <code dir="ltr">CONF_INDX</code> column of the <code dir="ltr">V$DISPATCHER</code> view.</p>
</li>
<li>
<p>When you change the <code dir="ltr">DESCRIPTION</code>, <code dir="ltr">ADDRESS</code>, <code dir="ltr">PROTOCOL</code>, <code dir="ltr">CONNECTIONS</code>, <code dir="ltr">TICKS</code>, <code dir="ltr">MULTIPLEX</code>, and <code dir="ltr">POOL</code> attributes of a dispatcher configuration, the change does not take effect for existing dispatchers but only for new dispatchers. Therefore, in order for the change to be effective for all dispatchers associated with a configuration, you must forcibly terminate existing dispatchers after altering the <code dir="ltr">DISPATCHERS</code> parameter, and let the database start new ones in their place with the newly specified properties.</p>
<p>The attributes <code dir="ltr">LISTENER</code> and <code dir="ltr">SERVICES</code> are not subject to the same constraint. They apply to existing dispatchers associated with the modified configuration. Attribute <code dir="ltr">SESSIONS</code> applies to existing dispatchers only if its value is reduced. However, if its value is increased, it is applied only to newly started dispatchers.</p>
</li>
</ul>
</div>
<!-- class="sect4" --></div>
<!-- class="sect3" -->
<div id="ADMIN11182" class="sect3"><a id="sthref897"></a>
<h4 class="sect3">Shutting Down Specific Dispatcher Processes</h4>
<p>With the <code dir="ltr">ALTER SYSTEM</code> statement, you leave it up to the database to determine which dispatchers to shut down to reduce the number of dispatchers. Alternatively, it is possible to shut down specific dispatcher processes. To identify the name of the specific dispatcher process to shut down, use the <code dir="ltr">V$DISPATCHER</code> dynamic performance view.</p>
<pre dir="ltr">
SELECT NAME, NETWORK FROM V$DISPATCHER;
</pre>
<p>Each dispatcher is uniquely identified by a name of the form D<span class="italic">nnn</span>.</p>
<p>To shut down dispatcher <code dir="ltr">D002</code>, issue the following statement:</p>
<pre dir="ltr">
ALTER SYSTEM SHUTDOWN IMMEDIATE 'D002';
</pre>
<p>The <code dir="ltr">IMMEDIATE</code> keyword stops the dispatcher from accepting new connections and the database immediately terminates all existing connections through that dispatcher. After all sessions are cleaned up, the dispatcher process shuts down. If <code dir="ltr">IMMEDIATE</code> were not specified, the dispatcher would wait until all of its users disconnected and all of its connections terminated before shutting down.</p>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="CIHCGEGJ"></a>
<div id="ADMIN11183" class="sect2">
<h3 class="sect2">Disabling Shared Server</h3>
<p><a id="sthref898"></a>You disable shared server by setting <code dir="ltr">SHARED_SERVERS</code> to 0. You can do this dynamically with the <code dir="ltr">ALTER</code> <code dir="ltr">SYSTEM</code> statement. When you disable shared server, no new clients can connect in shared mode. However, Oracle Database retains some shared servers until all shared server connections are closed. The number of shared servers retained is either the number specified by the preceding setting of <code dir="ltr">SHARED_SERVERS</code> or the value of the <code dir="ltr">MAX_SHARED_SERVERS</code> parameter, whichever is smaller. If both <code dir="ltr">SHARED_SERVERS</code> and <code dir="ltr">MAX_SHARED_SERVERS</code> are set to 0, then all shared servers will terminate and requests from remaining shared server clients will be queued until the value of <code dir="ltr">SHARED_SERVERS</code> or <code dir="ltr">MAX_SHARED_SERVERS</code> is raised again.</p>
<p>To terminate dispatchers once all shared server clients disconnect, enter this statement:</p>
<pre dir="ltr">
ALTER SYSTEM SET DISPATCHERS = '';
</pre></div>
<!-- class="sect2" -->
<a id="i1009696"></a>
<div id="ADMIN11184" class="sect2">
<h3 class="sect2">Shared Server Data Dictionary Views<a id="sthref899"></a><a id="sthref900"></a></h3>
<p>The following views are useful for obtaining information about your shared server configuration and for monitoring performance<a id="sthref901"></a>.</p>
<div class="inftblruleinformal">
<table class="cellalignment1333" title="Shared Server Views" summary="The left column contains the names of views, the right column contains the descriptions." dir="ltr">
<thead>
<tr class="cellalignment1327">
<th class="cellalignment1334" id="r1c1-t20">View</th>
<th class="cellalignment1334" id="r1c2-t20">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1327">
<td class="cellalignment1335" id="r2c1-t20" headers="r1c1-t20"><code dir="ltr">V$DISPATCHER</code></td>
<td class="cellalignment1335" headers="r2c1-t20 r1c2-t20">Provides information on the dispatcher processes, including name, network address, status, various usage statistics, and index number.</td>
</tr>
<tr class="cellalignment1327">
<td class="cellalignment1335" id="r3c1-t20" headers="r1c1-t20"><code dir="ltr">V$DISPATCHER_CONFIG</code></td>
<td class="cellalignment1335" headers="r3c1-t20 r1c2-t20">Provides configuration information about the dispatchers.</td>
</tr>
<tr class="cellalignment1327">
<td class="cellalignment1335" id="r4c1-t20" headers="r1c1-t20"><code dir="ltr">V$DISPATCHER_RATE</code></td>
<td class="cellalignment1335" headers="r4c1-t20 r1c2-t20">Provides rate statistics for the dispatcher processes.</td>
</tr>
<tr class="cellalignment1327">
<td class="cellalignment1335" id="r5c1-t20" headers="r1c1-t20"><code dir="ltr">V$QUEUE</code></td>
<td class="cellalignment1335" headers="r5c1-t20 r1c2-t20">Contains information on the shared server message queues.</td>
</tr>
<tr class="cellalignment1327">
<td class="cellalignment1335" id="r6c1-t20" headers="r1c1-t20"><code dir="ltr">V$SHARED_SERVER</code></td>
<td class="cellalignment1335" headers="r6c1-t20 r1c2-t20">Contains information on the shared servers.</td>
</tr>
<tr class="cellalignment1327">
<td class="cellalignment1335" id="r7c1-t20" headers="r1c1-t20"><code dir="ltr">V$CIRCUIT</code></td>
<td class="cellalignment1335" headers="r7c1-t20 r1c2-t20">Contains information about virtual circuits, which are user connections to the database through dispatchers and servers.</td>
</tr>
<tr class="cellalignment1327">
<td class="cellalignment1335" id="r8c1-t20" headers="r1c1-t20"><code dir="ltr">V$SHARED_SERVER_MONITOR</code></td>
<td class="cellalignment1335" headers="r8c1-t20 r1c2-t20">Contains information for tuning shared server.</td>
</tr>
<tr class="cellalignment1327">
<td class="cellalignment1335" id="r9c1-t20" headers="r1c1-t20"><code dir="ltr">V$SGA</code></td>
<td class="cellalignment1335" headers="r9c1-t20 r1c2-t20">Contains size information about various system global area (SGA) groups. May be useful when tuning shared server.</td>
</tr>
<tr class="cellalignment1327">
<td class="cellalignment1335" id="r10c1-t20" headers="r1c1-t20"><code dir="ltr">V$SGASTAT</code></td>
<td class="cellalignment1335" headers="r10c1-t20 r1c2-t20">Contains detailed statistical information about the SGA, useful for tuning.</td>
</tr>
<tr class="cellalignment1327">
<td class="cellalignment1335" id="r11c1-t20" headers="r1c1-t20"><code dir="ltr">V$SHARED_POOL_RESERVED</code></td>
<td class="cellalignment1335" headers="r11c1-t20 r1c2-t20">Lists statistics to help tune the reserved pool and space within the shared pool.</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblruleinformal" -->
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a class="olink REFRN" href="../e40402/toc.htm"><span class="italic">Oracle Database Reference</span></a> for detailed descriptions of these views</p>
</li>
<li>
<p><a class="olink PFGRF021" href="../../server.112/e41573/build_db.htm#PFGRF021"><span class="italic">Oracle Database Performance Tuning Guide</span></a> for specific information about monitoring and tuning shared server</p>
</li>
</ul>
</div>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="CHDGIDBA"></a>
<div id="ADMIN12349" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Configuring Database Resident Connection Pooling</h2>
<p>The database server is preconfigured to allow database resident connection pooling. However, you must explicitly enable this feature by starting the connection pool.</p>
<p>This section contains the following topics:</p>
<ul>
<li>
<p><a href="#CHDJFEFG">Enabling Database Resident Connection Pooling</a></p>
</li>
<li>
<p><a href="#CHDEEACD">Configuring the Connection Pool for Database Resident Connection Pooling</a></p>
</li>
<li>
<p><a href="#CHDJEDBA">Data Dictionary Views for Database Resident Connection Pooling</a></p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#CHDGIJIA">"About Database Resident Connection Pooling"</a></div>
<a id="CHDJFEFG"></a>
<div id="ADMIN12350" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Enabling Database Resident Connection Pooling</h3>
<p>Oracle Database includes a default connection pool called <code dir="ltr">SYS_DEFAULT_CONNECTION_POOL</code>. By default, this pool is created, but not started. To enable database resident connection pooling, you must explicitly start the connection pool.</p>
<p class="subhead2"><a id="ADMIN12555"></a>To <a id="sthref902"></a>enable database resident connection pooling:</p>
<ol>
<li>
<p>Start the database resident connection pool, as described in <a href="#CHDCACDA">"Starting the Database Resident Connection Pool"</a>.</p>
</li>
<li>
<p>Route the client connection requests to the connection pool, as described in <a href="#CHDIAIAA">"Routing Client Connection Requests to the Connection Pool"</a>.</p>
</li>
</ol>
<p class="subhead2"><a id="CHDCACDA"></a><a id="ADMIN12556"></a>Starting the Database Resident Connection Pool</p>
<p>To start the connection pool, use the following steps:</p>
<ol>
<li>
<p>Start SQL*Plus and connect to the database as the <code dir="ltr">SYS</code> user.</p>
</li>
<li>
<p>Issue the following command:</p>
<pre dir="ltr">
SQL&gt; EXECUTE DBMS_CONNECTION_POOL.START_POOL();
</pre></li>
</ol>
<p>Once started, the connection pool remains in this state until it is explicitly stopped. The connection pool is automatically restarted when the database instance is restarted if the pool was active at the time of instance shutdown.</p>
<p>In an Oracle Real Application Clusters (Oracle RAC) environment, you can use any instance to manage the connection pool. Any changes you make to the pool configuration are applicable on all Oracle RAC instances.</p>
<p class="subhead2"><a id="CHDIAIAA"></a><a id="ADMIN12557"></a>Routing Client Connection Requests to the Connection Pool</p>
<p>In the client application, the connect string must specify the connect type as <code dir="ltr">POOLED</code>.</p>
<p>The following example shows an easy connect string that enables clients to connect to a database resident connection pool:</p>
<pre dir="ltr">
examplehost.company.com:1521/books.company.com:POOLED
</pre>
<p>The following example shows a TNS connect descriptor that enables clients to connect to a database resident connection pool:</p>
<pre dir="ltr">
(DESCRIPTION=(ADDRESS=(PROTOCOL=tcp) (HOST=myhost)
       (PORT=1521))(CONNECT_DATA=(SERVICE_NAME=sales)
       (SERVER=POOLED)))
</pre>
<p class="subhead2"><a id="ADMIN12558"></a>Disabling <a id="sthref903"></a>Database Resident Connection Pooling</p>
<p>To disable database resident connection pooling, you must explicitly stop the connection pool. Use the following steps:</p>
<ol>
<li>
<p>Start SQL*Plus and connect to the database as the <code dir="ltr">SYS</code> user.</p>
</li>
<li>
<p>Issue the following command:</p>
<pre dir="ltr">
SQL&gt; EXECUTE DBMS_CONNECTION_POOL.STOP_POOL();
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink ARPLS215" href="../../appdev.112/e40758/d_connection_pool.htm#ARPLS215"><span class="italic">Oracle Database PL/SQL Packages and Types Reference</span></a> for more information on the <code dir="ltr">DBMS_CONNECTION_POOL</code> package.</div>
</li>
</ol>
<div class="infobox-note">
<p class="notep1">Note:</p>
The operation of disabling the database resident connection pool can be completed only when all client requests that have been handed off to a server are completed.</div>
</div>
<!-- class="sect2" -->
<a id="CHDEEACD"></a>
<div id="ADMIN12351" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Configuring the <a id="sthref904"></a>Connection Pool for Database Resident Connection Pooling</h3>
<p>The connection pool is configured using default parameter values. You can use the procedures in the <code dir="ltr">DBMS_CONNECTION_POOL</code> package to configure the connection pool according to your usage. In an Oracle Real Application Clusters (Oracle RAC) environment, the configuration parameters are applicable to each Oracle RAC instance.</p>
<p><a href="#CHDEGEHJ">Table 5-2</a> lists the <a id="sthref905"></a>parameters that you can configure for the connection pool.</p>
<div id="ADMIN13016" class="tblformal">
<p class="titleintable"><a id="sthref906"></a><a id="CHDEGEHJ"></a>Table 5-2 Configuration Parameters for Database Resident Connection Pooling</p>
<table class="cellalignment1338" title="Configuration Parameters for Database Resident Connection Pooling" summary="This table describes the configuration parameters used for database resident connection pooling." dir="ltr">
<thead>
<tr class="cellalignment1327">
<th class="cellalignment1334" id="r1c1-t25">Parameter Name</th>
<th class="cellalignment1334" id="r1c2-t25">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1327">
<td class="cellalignment1335" id="r2c1-t25" headers="r1c1-t25">
<p><code dir="ltr">MINSIZE</code></p>
</td>
<td class="cellalignment1335" headers="r2c1-t25 r1c2-t25">
<p>The minimum number of pooled servers in the pool. The default value is 4.</p>
</td>
</tr>
<tr class="cellalignment1327">
<td class="cellalignment1335" id="r3c1-t25" headers="r1c1-t25">
<p><code dir="ltr">MAXSIZE</code></p>
</td>
<td class="cellalignment1335" headers="r3c1-t25 r1c2-t25">
<p>The maximum number of pooled servers in the pool. The default value is 40.</p>
<p>The connection pool reserves 5% of the pooled servers for authentication, and at least one pooled server is always reserved for authentication. When setting this parameter, ensure that there are enough pooled servers for both authentication and connections.</p>
</td>
</tr>
<tr class="cellalignment1327">
<td class="cellalignment1335" id="r4c1-t25" headers="r1c1-t25">
<p><code dir="ltr">INCRSIZE</code></p>
</td>
<td class="cellalignment1335" headers="r4c1-t25 r1c2-t25">
<p>The number of pooled servers by which the pool is incremented if servers are unavailable when a client application request is received. The default value is 2.</p>
</td>
</tr>
<tr class="cellalignment1327">
<td class="cellalignment1335" id="r5c1-t25" headers="r1c1-t25">
<p><code dir="ltr">SESSION_CACHED_CURSORS</code></p>
</td>
<td class="cellalignment1335" headers="r5c1-t25 r1c2-t25">
<p>The number of session cursors to cache in each pooled server session. The default value is 50.</p>
</td>
</tr>
<tr class="cellalignment1327">
<td class="cellalignment1335" id="r6c1-t25" headers="r1c1-t25">
<p><code dir="ltr">INACTIVITY_TIMEOUT</code></p>
</td>
<td class="cellalignment1335" headers="r6c1-t25 r1c2-t25">
<p>The maximum time, in seconds, the pooled server can stay idle in the pool. After this time, the server is terminated. The default value is 300.</p>
<p>This parameter does not apply if the pool is at <code dir="ltr">MINSIZE</code>.</p>
</td>
</tr>
<tr class="cellalignment1327">
<td class="cellalignment1335" id="r7c1-t25" headers="r1c1-t25">
<p><code dir="ltr">MAX_THINK_TIME</code></p>
</td>
<td class="cellalignment1335" headers="r7c1-t25 r1c2-t25">
<p>The maximum time of inactivity, in seconds, for a client after it obtains a pooled server from the pool. After obtaining a pooled server from the pool, if the client application does not issue a database call for the time specified by <code dir="ltr">MAX_THINK_TIME</code>, the pooled server is freed and the client connection is terminated. The default value is 120.</p>
</td>
</tr>
<tr class="cellalignment1327">
<td class="cellalignment1335" id="r8c1-t25" headers="r1c1-t25">
<p><code dir="ltr">MAX_USE_SESSION</code></p>
</td>
<td class="cellalignment1335" headers="r8c1-t25 r1c2-t25">
<p>The number of times a pooled server can be taken and released to the pool. The default value is 500000.</p>
</td>
</tr>
<tr class="cellalignment1327">
<td class="cellalignment1335" id="r9c1-t25" headers="r1c1-t25">
<p><code dir="ltr">MAX_LIFETIME_SESSION</code></p>
</td>
<td class="cellalignment1335" headers="r9c1-t25 r1c2-t25">
<p>The time, in seconds, to live for a pooled server in the pool. The default value is 86400.</p>
</td>
</tr>
<tr class="cellalignment1327">
<td class="cellalignment1335" id="r10c1-t25" headers="r1c1-t25">
<p><code dir="ltr">NUM_CBROK</code></p>
</td>
<td class="cellalignment1335" headers="r10c1-t25 r1c2-t25">
<p>The number of Connection Brokers that are created to handle client requests. The default value is 1.</p>
<p>Creating multiple Connection Broker processes helps distribute the load of client connection requests if there are a large number of client applications.</p>
</td>
</tr>
<tr class="cellalignment1327">
<td class="cellalignment1335" id="r11c1-t25" headers="r1c1-t25">
<p><code dir="ltr">MAXCONN_CBROK</code></p>
</td>
<td class="cellalignment1335" headers="r11c1-t25 r1c2-t25">
<p>The maximum number of connections that each Connection Broker can handle.</p>
<p>The default value is 40000. But if the maximum connections allowed by the platform on which the database is installed is lesser than the default value, this value overrides the value set using <code dir="ltr">MAXCONN_CBROK</code>.</p>
<p>Set the per-process file descriptor limit of the operating system sufficiently high so that it supports the number of connections specified by <code dir="ltr">MAXCONN_CBROK</code>.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<p class="subhead2"><a id="ADMIN12559"></a>Using the CONFIGURE_POOL Procedure</p>
<p>The <code dir="ltr">CONFIGURE_POOL</code> procedure of the <code dir="ltr">DBMS_CONNECTION_POOL</code> package enables you to configure the connection pool with advanced options. This procedure is usually used when you must modify all the parameters of the connection pool.</p>
<p class="subhead2"><a id="ADMIN12560"></a>Using the ALTER_PARAM Procedure</p>
<p>The <code dir="ltr">ALTER_PARAM</code> procedure of the <code dir="ltr">DBMS_CONNECTION_POOL</code> package enables you to alter a specific configuration parameter without affecting other parameters.For example, the following command changes the minimum number of pooled servers used:</p>
<pre dir="ltr">
SQL&gt; EXECUTE DBMS_CONNECTION_POOL.ALTER_PARAM ('','MINSIZE','10');
</pre>
<p>The following example, changes the maximum number of connections that each connection broker can handle to 50000.</p>
<pre dir="ltr">
SQL&gt; EXECUTE DBMS_CONNECTION_POOL.ALTER_PARAM ('','MAXCONN_CBROK','50000');
</pre>
<p>Before you execute this command, ensure that the maximum number of connections allowed by the platform on which your database is installed is not less than the value you set for <code dir="ltr">MAXCONN_CBROK</code>.</p>
<p>For example, in Linux, the following entry in the <code dir="ltr">/etc/security/limits.conf</code> file indicates that the maximum number of connections allowed for the user <code dir="ltr">test_user</code> is 30000.</p>
<pre dir="ltr">
test_user HARD NOFILE 30000
</pre>
<p>To set the maximum number of connections that each connection broker can allow to 50000, first change the value in the <code dir="ltr">limits.conf</code> file to a value not less than 50000.</p>
<p class="subhead2"><a id="ADMIN12561"></a>Restoring the Connection Pool Default Settings</p>
<p>If you have made changes to the connection pool parameters, but you want to revert to the default pool settings, use the <code dir="ltr">RESTORE_DEFAULT</code> procedure of the <code dir="ltr">DBMS_CONNECTION_POOL</code> package. The command to restore the connection pool to its default settings is:</p>
<pre dir="ltr">
SQL&gt; EXECUTE DBMS_CONNECTION_POOL.RESTORE_DEFAULTS();
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink ARPLS215" href="../../appdev.112/e40758/d_connection_pool.htm#ARPLS215"><span class="italic">Oracle Database PL/SQL Packages and Types Reference</span></a> for more information on the <code dir="ltr">DBMS_CONNECTION_POOL</code> package.</div>
</div>
<!-- class="sect2" -->
<a id="CHDJEDBA"></a>
<div id="ADMIN12352" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Data Dictionary Views <a id="sthref907"></a><a id="sthref908"></a>for Database Resident Connection Pooling</h3>
<p><a href="#BABDGAFH">Table 5-3</a> lists the data dictionary views that provide information about database resident connection pooling. Use these views to obtain information about your connection pool and to monitor the performance of database resident connection pooling.</p>
<div id="ADMIN13017" class="tblformal">
<p class="titleintable"><a id="sthref909"></a><a id="BABDGAFH"></a>Table 5-3 Data Dictionary Views for Database Resident Connection Pooling</p>
<table class="cellalignment1338" title="Data Dictionary Views for Database Resident Connection Pooling" summary="This table describes the data dictionary views that contain information about database resident connection pooling." dir="ltr">
<thead>
<tr class="cellalignment1327">
<th class="cellalignment1334" id="r1c1-t27">View</th>
<th class="cellalignment1334" id="r1c2-t27">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1327">
<td class="cellalignment1335" id="r2c1-t27" headers="r1c1-t27">
<p><code dir="ltr">DBA_CPOOL_INFO</code></p>
</td>
<td class="cellalignment1335" headers="r2c1-t27 r1c2-t27">
<p>Contains information about the connection pool such as the pool status, the maximum and minimum number of connections, and timeout for idle sessions.</p>
</td>
</tr>
<tr class="cellalignment1327">
<td class="cellalignment1335" id="r3c1-t27" headers="r1c1-t27">
<p><code dir="ltr">V$CPOOL_CONN_INFO</code></p>
</td>
<td class="cellalignment1335" headers="r3c1-t27 r1c2-t27">
<p>Contains information about each connection to the connection broker.</p>
</td>
</tr>
<tr class="cellalignment1327">
<td class="cellalignment1335" id="r4c1-t27" headers="r1c1-t27">
<p><code dir="ltr">V$CPOOL_STATS</code></p>
</td>
<td class="cellalignment1335" headers="r4c1-t27 r1c2-t27">
<p>Contains pool statistics such as the number of session requests, number of times a session that matches the request was found in the pool, and total wait time for a session request.</p>
</td>
</tr>
<tr class="cellalignment1327">
<td class="cellalignment1335" id="r5c1-t27" headers="r1c1-t27">
<p><code dir="ltr">V$CPOOL_CC_STATS</code></p>
</td>
<td class="cellalignment1335" headers="r5c1-t27 r1c2-t27">
<p>Contains connection class level statistics for the pool.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink REFRN" href="../e40402/toc.htm"><span class="italic">Oracle Database Reference</span></a> for more information about these views.</div>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="i1006460"></a>
<div id="ADMIN11185" class="sect1">
<h2 class="sect1">About Oracle Database Background Processes<a id="sthref910"></a><a id="sthref911"></a></h2>
<p>To maximize performance and accommodate many users, a multiprocess Oracle Database system uses <span class="bold">background processes</span>. Background processes consolidate functions that would otherwise be handled by multiple database programs running for each user process. Background processes asynchronously perform I/O and monitor other Oracle Database processes to provide increased parallelism for better performance and reliability.</p>
<p><a href="#CIHIICBD">Table 5-4</a> describes the fundamental background processes, many of which are discussed in more detail elsewhere in this book. The use of additional database features or options can cause more background processes to be present. For example:</p>
<ul>
<li>
<p>When you use Oracle Streams Advanced Queuing, the queue monitor (QMN<span class="italic">n</span>) background process is present.</p>
</li>
<li>
<p>When you specify the <code dir="ltr">FILE_MAPPING</code> initialization parameter for mapping data files to physical devices on a storage subsystem, then the FMON process is present.</p>
</li>
<li>
<p>If you use Oracle Automatic Storage Management (Oracle ASM), then additional Oracle ASM&ndash;specific background processes are present.</p>
</li>
</ul>
<div id="ADMIN13018" class="tblformalwide">
<p class="titleintable"><a id="sthref912"></a><a id="CIHIICBD"></a>Table 5-4 Oracle Database Background Processes</p>
<table class="cellalignment1333" title="Oracle Database Background Processes" summary="the first column lists the various background processes, the second column contains a brief description of the process." dir="ltr">
<thead>
<tr class="cellalignment1327">
<th class="cellalignment1334" id="r1c1-t29">Process Name</th>
<th class="cellalignment1334" id="r1c2-t29">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1327">
<td class="cellalignment1335" id="r2c1-t29" headers="r1c1-t29">
<p>Database writer (DBW<span class="italic">n</span>)<a id="sthref913"></a><a id="sthref914"></a></p>
</td>
<td class="cellalignment1335" headers="r2c1-t29 r1c2-t29">
<p>The database writer writes modified blocks from the database buffer cache to the data files. Oracle Database allows a maximum of 36 database writer processes (DBW0-DBW9 and DBWa-DBWj). The <code dir="ltr">DB_WRITER_PROCESSES</code> initialization parameter specifies the number of DBW<span class="italic">n</span> processes. The database selects an appropriate default setting for this initialization parameter or adjusts a user-specified setting based on the number of CPUs and the number of processor groups.</p>
<p>For more information about setting the <code dir="ltr">DB_WRITER_PROCESSES</code> initialization parameter, see the <a class="olink PFGRF94511" href="../../server.112/e41573/instance_tune.htm#PFGRF94511"><span class="italic">Oracle Database Performance Tuning Guide</span></a>.</p>
</td>
</tr>
<tr class="cellalignment1327">
<td class="cellalignment1335" id="r3c1-t29" headers="r1c1-t29">
<p>Log writer (LGWR)<a id="sthref915"></a><a id="sthref916"></a></p>
</td>
<td class="cellalignment1335" headers="r3c1-t29 r1c2-t29">
<p>The log writer process writes redo log entries to disk. Redo log entries are generated in the redo log buffer of the system global area (SGA). LGWR writes the redo log entries sequentially into a redo log file. If the database has a multiplexed redo log, then LGWR writes the redo log entries to a group of redo log files. See <a href="onlineredo.htm#g1011287">Chapter 12, "Managing the Redo Log"</a> for information about the log writer process.</p>
</td>
</tr>
<tr class="cellalignment1327">
<td class="cellalignment1335" id="r4c1-t29" headers="r1c1-t29">
<p>Checkpoint (CKPT)<a id="sthref917"></a><a id="sthref918"></a></p>
</td>
<td class="cellalignment1335" headers="r4c1-t29 r1c2-t29">
<p>At specific times, all modified database buffers in the system global area are written to the data files by DBW<span class="italic">n</span>. This event is called a checkpoint. The checkpoint process is responsible for signalling DBW<span class="italic">n</span> at checkpoints and updating all the data files and control files of the database to indicate the most recent checkpoint.</p>
</td>
</tr>
<tr class="cellalignment1327">
<td class="cellalignment1335" id="r5c1-t29" headers="r1c1-t29">
<p>System monitor (SMON)<a id="sthref919"></a><a id="sthref920"></a></p>
</td>
<td class="cellalignment1335" headers="r5c1-t29 r1c2-t29">
<p>The system monitor performs recovery when a failed instance starts up again. In an Oracle Real Application Clusters database, the SMON process of one instance can perform instance recovery for other instances that have failed. SMON also cleans up temporary segments that are no longer in use and recovers terminated transactions skipped during system failure and instance recovery because of file-read or offline errors. These transactions are eventually recovered by SMON when the tablespace or file is brought back online.</p>
</td>
</tr>
<tr class="cellalignment1327">
<td class="cellalignment1335" id="r6c1-t29" headers="r1c1-t29">
<p>Process monitor (PMON)<a id="sthref921"></a><a id="sthref922"></a></p>
</td>
<td class="cellalignment1335" headers="r6c1-t29 r1c2-t29">
<p>The process monitor performs process recovery when a user process fails. PMON is responsible for cleaning up the cache and freeing resources that the process was using. PMON also checks on the dispatcher processes (described later in this table) and server processes and restarts them if they have failed.</p>
</td>
</tr>
<tr class="cellalignment1327">
<td class="cellalignment1335" id="r7c1-t29" headers="r1c1-t29">
<p>Archiver (ARC<span class="italic">n</span>)<a id="sthref923"></a><a id="sthref924"></a></p>
</td>
<td class="cellalignment1335" headers="r7c1-t29 r1c2-t29">
<p>One or more archiver processes copy the redo log files to archival storage when they are full or a log switch occurs. Archiver processes are the subject of <a href="archredo.htm#g1015189">Chapter 13, "Managing Archived Redo Logs"</a>.</p>
</td>
</tr>
<tr class="cellalignment1327">
<td class="cellalignment1335" id="r8c1-t29" headers="r1c1-t29">
<p>Recoverer (RECO)<a id="sthref925"></a><a id="sthref926"></a></p>
</td>
<td class="cellalignment1335" headers="r8c1-t29 r1c2-t29">
<p>The recoverer process is used to resolve distributed transactions that are pending because of a network or system failure in a distributed database. At timed intervals, the local RECO attempts to connect to remote databases and automatically complete the commit or rollback of the local portion of any pending distributed transactions. For information about this process and how to start it, see <a href="ds_txnman.htm#g1014752">Chapter 35, "Managing Distributed Transactions"</a>.</p>
</td>
</tr>
<tr class="cellalignment1327">
<td class="cellalignment1335" id="r9c1-t29" headers="r1c1-t29">
<p>Dispatcher (D<span class="italic">nnn</span>)<a id="sthref927"></a><a id="sthref928"></a></p>
</td>
<td class="cellalignment1335" headers="r9c1-t29 r1c2-t29">
<p>Dispatchers are optional background processes, present only when the shared server configuration is used. Shared server was discussed previously in <a href="#i1010000">"Configuring Oracle Database for Shared Server"</a>.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformalwide" -->
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink REFRN104" href="../../server.112/e40402/bgprocesses.htm#REFRN104"><span class="italic">Oracle Database Reference</span></a> for a complete list of Oracle Database background processes</div>
</div>
<!-- class="sect1" -->
<a id="i1010373"></a>
<div id="ADMIN11186" class="sect1">
<h2 class="sect1">Managing Processes for Parallel SQL Execution<a id="sthref929"></a></h2>
<div class="infobox-note">
<p class="notep1">Note:</p>
The parallel execution feature described in this section is available with the Oracle Database Enterprise Edition.</div>
<p>This section describes how to manage parallel processing of SQL statements. In this configuration Oracle Database can divide the work of processing an SQL statement among multiple parallel processes.</p>
<p>The execution of many SQL statements can be parallelized. The <span class="bold">degree of parallelism</span> is the number of parallel execution servers that can be associated with a single operation. The degree of parallelism is determined by any of the following:</p>
<ul>
<li>
<p>A <code dir="ltr">PARALLEL</code> clause in a statement</p>
</li>
<li>
<p>For objects referred to in a query, the <code dir="ltr">PARALLEL</code> clause that was used when the object was created or altered</p>
</li>
<li>
<p>A parallel hint<a id="sthref930"></a><a id="sthref931"></a> inserted into the statement</p>
</li>
<li>
<p>A default determined by the database</p>
</li>
</ul>
<p>An example of using parallel SQL execution is contained in <a href="tables.htm#i1009052">"Parallelizing Table Creation"</a>.</p>
<p>The following topics are contained in this section:</p>
<ul>
<li>
<p><a href="#i1006793">About Parallel Execution Servers</a></p>
</li>
<li>
<p><a href="#i1006798">Altering Parallel Execution for a Session</a></p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a class="olink PFGRF005" href="../../server.112/e41573/hintsref.htm#PFGRF005"><span class="italic">Oracle Database Performance Tuning Guide</span></a> for information about using parallel hints<a id="sthref932"></a><a id="sthref933"></a></p>
</li>
</ul>
</div>
</li>
</ul>
<a id="i1006793"></a>
<div id="ADMIN11187" class="sect2">
<h3 class="sect2">About Parallel Execution Servers</h3>
<p>When an instance starts up, Oracle Database creates a pool of parallel execution servers which are available for any parallel operation. A process called the <span class="bold">parallel execution coordinator</span> dispatches the execution of a pool of <span class="bold">parallel execution servers</span> and coordinates the sending of results from all of these parallel execution servers back to the user.</p>
<p>The parallel execution servers are enabled by default, because by default the value for <code dir="ltr">PARALLEL_MAX_SERVERS</code> initialization parameter is set &gt;0. The processes are available for use by the various Oracle Database features that are capable of exploiting parallelism. Related initialization parameters are tuned by the database for the majority of users, but you can alter them as needed to suit your environment. For ease of tuning, some parameters can be altered dynamically.</p>
<p>Parallelism can be used by several features, including transaction recovery, replication, and SQL execution. In the case of parallel SQL execution, the topic discussed in this book, parallel server processes remain associated with a statement throughout its execution phase. When the statement is completely processed, these processes become available to process other statements.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink VLDBG010" href="../../server.112/e25523/parallel.htm#VLDBG010"><span class="italic">Oracle Database VLDB and Partitioning Guide</span></a> for more information about using parallel execution</div>
</div>
<!-- class="sect2" -->
<a id="i1006798"></a>
<div id="ADMIN11188" class="sect2">
<h3 class="sect2">Altering Parallel Execution for a Session</h3>
<p>You control parallel SQL execution for a session using the <code dir="ltr">ALTER SESSION</code> statement.</p>
<div id="ADMIN11189" class="sect3"><a id="sthref934"></a>
<h4 class="sect3">Disabling Parallel SQL Execution</h4>
<p>You disable parallel SQL execution with an <code dir="ltr">ALTER SESSION DISABLE PARALLEL DML|DDL|QUERY</code> statement. All subsequent DML (<code dir="ltr">INSERT</code>, <code dir="ltr">UPDATE</code>, <code dir="ltr">DELETE</code>), DDL (<code dir="ltr">CREATE</code>, <code dir="ltr">ALTER</code>), or query (<code dir="ltr">SELECT</code>) operations are executed serially after such a statement is issued. They will be executed serially regardless of any parallel attribute associated with the table or indexes involved. However, statements with a <code dir="ltr">PARALLEL</code> hint override the session settings.</p>
<p>The following statement disables parallel DDL operations:</p>
<pre dir="ltr">
ALTER SESSION DISABLE PARALLEL DDL;
</pre></div>
<!-- class="sect3" -->
<a id="i1006805"></a>
<div id="ADMIN11190" class="sect3">
<h4 class="sect3">Enabling Parallel SQL Execution</h4>
<p>You enable parallel SQL execution with an <code dir="ltr">ALTER SESSION ENABLE PARALLEL DML|DDL|QUERY</code> statement. Subsequently, when a <code dir="ltr">PARALLEL</code> clause or parallel hint is associated with a statement, those DML, DDL, or query statements will execute in parallel. By default, parallel execution is enabled for DDL and query statements.</p>
<p>A DML statement can be parallelized only if you specifically issue an <code dir="ltr">ALTER SESSION</code> statement to enable parallel DML:</p>
<pre dir="ltr">
ALTER SESSION ENABLE PARALLEL DML;
</pre></div>
<!-- class="sect3" -->
<div id="ADMIN11191" class="sect3"><a id="sthref935"></a>
<h4 class="sect3">Forcing Parallel SQL Execution</h4>
<p>You can force parallel execution of all subsequent DML, DDL, or query statements for which parallelization is possible with the <code dir="ltr">ALTER SESSION FORCE PARALLEL DML|DDL|QUERY</code> statement. Additionally you can force a specific degree of parallelism to be in effect, overriding any <code dir="ltr">PARALLEL</code> clause associated with subsequent statements. If you do not specify a degree of parallelism in this statement, the default degree of parallelism is used. Forcing parallel execution overrides any parallel hints in SQL statements.</p>
<p>The following statement forces parallel execution of subsequent statements and sets the overriding degree of parallelism to 5:</p>
<pre dir="ltr">
ALTER SESSION FORCE PARALLEL DDL PARALLEL 5;
</pre></div>
<!-- class="sect3" --></div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="i1106821"></a>
<div id="ADMIN00501" class="sect1">
<h2 class="sect1">Managing Processes for External Procedures</h2>
<p>This section contains:</p>
<ul>
<li>
<p><a href="#CIHDJHEC">About External Procedures</a></p>
</li>
<li>
<p><a href="#CIHBHCDA">DBA Tasks to Enable External Procedure Calls</a></p>
</li>
</ul>
<a id="CIHDJHEC"></a>
<div id="ADMIN13389" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">About External Procedures</h3>
<p><a id="sthref936"></a><a id="sthref937"></a>External procedures are procedures that are written in C, C++, Java, or other language, compiled and stored outside the database, and then called by user sessions. For example, a PL/SQL program unit could call one or more C routines that are required to perform special-purpose processing.</p>
<p>These callable routines are stored in a dynamic link library (DLL), or a libunit in the case of a Java class method, and are registered with the base language. Oracle Database provides a special-purpose interface, the <span class="bold">call specification</span> (call spec), that enables users to call external procedures in other languages.</p>
<p>When a user session calls an external procedure, the database starts an external procedure agent on the database host computer. The default name of the agent is <code dir="ltr">extproc</code>. Each session has its own dedicated agent. When a session terminates, the database terminates its agent.</p>
<p>User applications pass to the external procedure agent the name of the DLL or libunit, the name of the external procedure, and any relevant parameters. The external procedure agent then loads the DLL or libunit, runs the external procedure, and passes back to the application any values returned by the external procedure.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink ADFNS010" href="../../appdev.112/e41502/adfns_externproc.htm#ADFNS010"><span class="italic">Oracle Database Advanced Application Developer's Guide</span></a> for information about external procedures</div>
</div>
<!-- class="sect2" -->
<a id="CIHBHCDA"></a>
<div id="ADMIN13390" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">DBA Tasks to Enable External Procedure Calls</h3>
<p>Enabling external procedure calls may involve the following DBA tasks:</p>
<ul>
<li>
<p>Configuring the listener to start the <code dir="ltr">extproc</code> agent</p>
<p>By default, the database starts the <code dir="ltr">extproc</code> process. Under the following circumstances, you must change this default configuration so that the listener starts the <code dir="ltr">extproc</code> process:</p>
<ul>
<li>
<p>You want to use a multithreaded <code dir="ltr">extproc</code> agent</p>
</li>
<li>
<p>The database is running in shared server mode on Windows</p>
</li>
<li>
<p>An <code dir="ltr">AGENT</code> clause in the <code dir="ltr">LIBRARY</code> specification or an <code dir="ltr">AGENT</code> <code dir="ltr">IN</code> clause in the <code dir="ltr">PROCEDURE</code> or <code dir="ltr">FUNCTION</code> specification redirects external procedures to a different <code dir="ltr">extproc</code> agent</p>
</li>
</ul>
<p>Instructions for changing the default configuration are found in the subsection entitled "Set Up the Environment" in the chapter "Developing Applications with Multiple Programming Languages" in <a class="olink ADFNS705" href="../../appdev.112/e41502/adfns_externproc.htm#ADFNS705"><span class="italic">Oracle Database Advanced Application Developer's Guide</span></a>.</p>
</li>
<li>
<p>Managing libraries or granting privileges related to managing libraries</p>
<p>The database requires DLLs to be accessed through a schema object called a library. For security purposes, by default, only users with the <code dir="ltr">DBA</code> role can create and manage libraries. Therefore, you may be asked to:</p>
<ul>
<li>
<p>Use the <code dir="ltr">CREATE</code> <code dir="ltr">LIBRARY</code> statement to create the library objects that the developers need.</p>
</li>
<li>
<p>Grant the following privileges to developers: <code dir="ltr">CREATE</code> <code dir="ltr">LIBRARY</code>, <code dir="ltr">CREATE</code> <code dir="ltr">ANY</code> <code dir="ltr">LIBRARY</code>, <code dir="ltr">ALTER</code> <code dir="ltr">ANY</code> <code dir="ltr">LIBRARY</code>, <code dir="ltr">EXECUTE</code> <code dir="ltr">ANY</code> <code dir="ltr">LIBRARY</code>, and <code dir="ltr">EXECUTE</code> <code dir="ltr">ON</code> <code dir="ltr"><span class="codeinlineitalic">library_name</span></code>.</p>
</li>
</ul>
<p>Only make an explicit grant of these privileges to trusted users, and never to the <code dir="ltr">PUBLIC</code> role. If you plan to create PL/SQL interfaces to libraries, then only grant the <code dir="ltr">EXECUTE</code> privilege to the PL/SQL interface. Do not grant <code dir="ltr">EXECUTE</code> on the underlying library. You must have the <code dir="ltr">EXECUTE</code> object privilege on the library to create the PL/SQL interface. However, users have this privilege automatically in their own schemas. Explicit grants of <code dir="ltr">EXECUTE</code> object privilege on a library are rarely required.</p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink LNPLS99948" href="../../appdev.112/e25519/create_library.htm#LNPLS99948"><span class="italic">Oracle Database PL/SQL Language Reference</span></a> for information about the <code dir="ltr">CREATE</code> <code dir="ltr">LIBRARY</code> statement</div>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="i1006851"></a>
<div id="ADMIN11192" class="sect1">
<h2 class="sect1">Terminating Sessions<a id="sthref938"></a></h2>
<p>Sometimes it is necessary to terminate current user sessions. For example, you might want to perform an administrative operation and need to terminate all non-administrative sessions. This section describes the various aspects of terminating sessions, and contains the following topics:</p>
<ul>
<li>
<p><a href="#i1006872">Identifying Which Session to Terminate</a></p>
</li>
<li>
<p><a href="#i1006897">Terminating an Active Session</a></p>
</li>
<li>
<p><a href="#i1006909">Terminating an Inactive Session</a></p>
</li>
</ul>
<p>When a session is terminated, any active transactions of the session are rolled back, and resources held by the session (such as locks and memory areas) are immediately released and available to other sessions.</p>
<p>You terminate a current session using the SQL statement <code dir="ltr">ALTER SYSTEM KILL SESSION</code>. The following statement terminates the session whose system identifier is 7 and serial number is 15:</p>
<pre dir="ltr">
ALTER SYSTEM KILL SESSION '7,15';
</pre>
<a id="i1006872"></a>
<div id="ADMIN11193" class="sect2">
<h3 class="sect2">Identifying Which Session to Terminate</h3>
<p><a id="sthref939"></a>To identify which session to terminate, specify the session index number and serial number. To identify the system identifier (SID) and serial number of a session, query the <code dir="ltr">V$SESSION</code> dynamic performance view. For example, the following query identifies all sessions for the user <code dir="ltr">jward</code>:</p>
<pre dir="ltr">
SELECT SID, SERIAL#, STATUS
  FROM V$SESSION
  WHERE USERNAME = 'JWARD';

SID    SERIAL#    STATUS
-----  ---------  --------
    7         15  ACTIVE 
   12         63  INACTIVE
</pre>
<p>A session is <code dir="ltr">ACTIVE</code> when it is making a SQL call to Oracle Database. A session is <code dir="ltr">INACTIVE</code> if it is not making a SQL call to the database.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink REFRN30223" href="../../server.112/e40402/dynviews_3016.htm#REFRN30223"><span class="italic">Oracle Database Reference</span></a> for a description of the status values for a session</div>
</div>
<!-- class="sect2" -->
<a id="i1006897"></a>
<div id="ADMIN11194" class="sect2">
<h3 class="sect2">Terminating an Active Session</h3>
<p><a id="sthref940"></a><a id="sthref941"></a><a id="sthref942"></a>If a user session is processing a transaction (<code dir="ltr">ACTIVE</code> status) when you terminate the session, the transaction is rolled back and the user immediately receives the following message:</p>
<pre dir="ltr">
ORA-00028: your session has been killed
</pre>
<p>If, after receiving the <code dir="ltr">ORA-00028</code> message, a user submits additional statements before reconnecting to the database, Oracle Database returns the following message:</p>
<pre dir="ltr">
ORA-01012: not logged on
</pre>
<p>An active session cannot be interrupted when it is performing network I/O or rolling back a transaction. Such a session cannot be terminated until the operation completes. In this case, the session holds all resources until it is terminated. Additionally, the session that issues the <code dir="ltr">ALTER SYSTEM</code> statement to terminate a session waits up to 60 seconds for the session to be terminated. If the operation that cannot be interrupted continues past one minute, the issuer of the <code dir="ltr">ALTER SYSTEM</code> statement receives a message indicating that the session has been marked to be terminated. A session marked to be terminated is indicated in <code dir="ltr">V$SESSION</code> with a status of <code dir="ltr">KILLED</code> and a server that is something other than <code dir="ltr">PSEUDO</code>.</p>
</div>
<!-- class="sect2" -->
<a id="i1006909"></a>
<div id="ADMIN11195" class="sect2">
<h3 class="sect2">Terminating an Inactive Session</h3>
<p><a id="sthref943"></a><a id="sthref944"></a><a id="sthref945"></a>If the session is not making a SQL call to Oracle Database (is <code dir="ltr">INACTIVE</code>) when it is terminated, the <code dir="ltr">ORA-00028</code> message is not returned immediately. The message is not returned until the user subsequently attempts to use the terminated session.</p>
<p>When an inactive session has been terminated, the <code dir="ltr">STATUS</code> of the session in the <code dir="ltr">V$SESSION</code> view is <code dir="ltr">KILLED</code>. The row for the terminated session is removed from <code dir="ltr">V$SESSION</code> after the user attempts to use the session again and receives the <code dir="ltr">ORA-00028</code> message.<a id="sthref946"></a></p>
<p><a id="sthref947"></a>In the following example, an inactive session is terminated. First, <code dir="ltr">V$SESSION</code> is queried to identify the <code dir="ltr">SID</code> and <code dir="ltr">SERIAL#</code> of the session, and then the session is terminated.</p>
<pre dir="ltr">
SELECT SID,SERIAL#,STATUS,SERVER
   FROM V$SESSION
   WHERE USERNAME = 'JWARD';

SID    SERIAL#   STATUS     SERVER
-----  --------  ---------  ---------
    7        15  INACTIVE   DEDICATED
   12        63  INACTIVE   DEDICATED
2 rows selected.

ALTER SYSTEM KILL SESSION '7,15';
Statement processed.

SELECT SID, SERIAL#, STATUS, SERVER
   FROM V$SESSION
   WHERE USERNAME = 'JWARD';

SID    SERIAL#   STATUS     SERVER
-----  --------  ---------  ---------
    7        15  KILLED     PSEUDO
   12        63  INACTIVE   DEDICATED
2 rows selected.
</pre></div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="CHDJFJIA"></a>
<div id="ADMIN11196" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Process and Session Data Dictionary Views</h2>
<p>The following are the data dictionary views that can help you manage processes and sessions.</p>
<div class="inftblruleinformal">
<table class="cellalignment1333" title="Views for Monitoring an Instance" summary="The first column lists views that can be used to monitor database activity. The second column describes each view." dir="ltr">
<thead>
<tr class="cellalignment1327">
<th class="cellalignment1334" id="r1c1-t37">View</th>
<th class="cellalignment1334" id="r1c2-t37">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1327">
<td class="cellalignment1335" id="r2c1-t37" headers="r1c1-t37"><code dir="ltr">V$PROCESS</code></td>
<td class="cellalignment1335" headers="r2c1-t37 r1c2-t37">Contains information about the currently active processes</td>
</tr>
<tr class="cellalignment1327">
<td class="cellalignment1335" id="r3c1-t37" headers="r1c1-t37"><code dir="ltr">V$SESSION</code></td>
<td class="cellalignment1335" headers="r3c1-t37 r1c2-t37">Lists session information for each current session</td>
</tr>
<tr class="cellalignment1327">
<td class="cellalignment1335" id="r4c1-t37" headers="r1c1-t37"><code dir="ltr">V$SESS_IO</code></td>
<td class="cellalignment1335" headers="r4c1-t37 r1c2-t37">Contains I/O statistics for each user session</td>
</tr>
<tr class="cellalignment1327">
<td class="cellalignment1335" id="r5c1-t37" headers="r1c1-t37"><code dir="ltr">V$SESSION_LONGOPS</code></td>
<td class="cellalignment1335" headers="r5c1-t37 r1c2-t37">Displays the status of various operations that run for longer than 6 seconds (in absolute time). These operations currently include many backup and recovery functions, statistics gathering, and query execution. More operations are added for every Oracle Database release.</td>
</tr>
<tr class="cellalignment1327">
<td class="cellalignment1335" id="r6c1-t37" headers="r1c1-t37"><code dir="ltr">V$SESSION_WAIT</code></td>
<td class="cellalignment1335" headers="r6c1-t37 r1c2-t37">Displays the current or last wait for each session</td>
</tr>
<tr class="cellalignment1327">
<td class="cellalignment1335" id="r7c1-t37" headers="r1c1-t37"><code dir="ltr">V$SESSION_WAIT_HISTORY</code></td>
<td class="cellalignment1335" headers="r7c1-t37 r1c2-t37">Lists the last ten wait events for each active session</td>
</tr>
<tr class="cellalignment1327">
<td class="cellalignment1335" id="r8c1-t37" headers="r1c1-t37"><code dir="ltr">V$WAIT_CHAINS</code></td>
<td class="cellalignment1335" headers="r8c1-t37 r1c2-t37">Displays information about blocked sessions</td>
</tr>
<tr class="cellalignment1327">
<td class="cellalignment1335" id="r9c1-t37" headers="r1c1-t37"><code dir="ltr">V$SESSTAT</code></td>
<td class="cellalignment1335" headers="r9c1-t37 r1c2-t37">Contains session statistics</td>
</tr>
<tr class="cellalignment1327">
<td class="cellalignment1335" id="r10c1-t37" headers="r1c1-t37"><code dir="ltr">V$RESOURCE_LIMIT</code></td>
<td class="cellalignment1335" headers="r10c1-t37 r1c2-t37">Provides information about current and maximum global resource utilization for some system resources</td>
</tr>
<tr class="cellalignment1327">
<td class="cellalignment1335" id="r11c1-t37" headers="r1c1-t37"><code dir="ltr">V$SQLAREA</code></td>
<td class="cellalignment1335" headers="r11c1-t37 r1c2-t37">Contains statistics about shared SQL areas. Contains one row for each SQL string. Provides statistics about SQL statements that are in memory, parsed, and ready for execution</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblruleinformal" --></div>
<!-- class="sect1" --></div>
<!-- class="chapter" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment1326">
<tr>
<td class="cellalignment1335">
<table class="cellalignment1331">
<tr>
<td class="cellalignment1330"><a href="restart.htm"><img width="24" height="24" src="../../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment1330"><a href="memory.htm"><img width="24" height="24" src="../../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;2001, 2015,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment1337">
<table class="cellalignment1329">
<tr>
<td class="cellalignment1330"><a href="../../index.htm"><img width="24" height="24" src="../../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment1330"><a href="../../nav/portal_booklist.htm"><img width="24" height="24" src="../../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment1330"><a href="toc.htm"><img width="24" height="24" src="../../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment1330"><a href="index.htm"><img width="24" height="24" src="../../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment1330"><a href="../../nav/mindx.htm"><img width="24" height="24" src="../../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment1330"><a href="../../dcommon/html/feedback.htm"><img width="24" height="24" src="../../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>
</body>
</html>
