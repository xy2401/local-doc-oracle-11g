<!DOCTYPE html>
<html lang="en">
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1">
<meta charset="utf-8">
<title>Logical Design in Data Warehouses</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Version 5.1.2 Build 070" />
<meta name="dcterms.created" content="2013-07-04T23:23:14Z" />
<meta name="robots" content="all" />
<meta name="dcterms.title" content="Database Data Warehousing Guide" />
<meta name="dcterms.identifier" content="E25554-02" />
<meta name="dcterms.isVersionOf" content="DWHSG" />
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;2001, 2013,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved." />
<link rel="Start" href="../../index.htm" title="Home" type="text/html" />
<link rel="Copyright" href="../../dcommon/html/cpyr.htm" title="Copyright" type="text/html" />

<script type="application/javascript"  src="../../dcommon/js/headfoot.js"></script>
<script type="application/javascript"  src="../../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html" />
<link rel="Index" href="index.htm" title="Index" type="text/html" />
<link rel="Glossary" href="glossary.htm" title="Glossary" type="text/html" />
<link rel="Prev" href="part2.htm" title="Previous" type="text/html" />
<link rel="Next" href="part3.htm" title="Next" type="text/html" />
<link rel="alternate" href="../e25554.pdf" title="PDF version" type="application/pdf" />
<link rel="schema.dcterms" href="http://purl.org/dc/terms/" />
<link rel="stylesheet" href="../../dcommon/css/fusiondoc.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/header.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/footer.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/fonts.css">
<link rel="stylesheet" href="../../dcommon/css/foundation.css">
<link rel="stylesheet" href="../../dcommon/css/codemirror.css">
<link rel="stylesheet" type="text/css" title="Default" href="../../nav/css/html5.css">
<link rel="stylesheet" href="../../dcommon/css/respond-480-tablet.css">
<link rel="stylesheet" href="../../dcommon/css/respond-768-laptop.css">
<link rel="stylesheet" href="../../dcommon/css/respond-1140-deskop.css">
<script type="application/javascript" src="../../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">8/35</span> <!-- End Header --><a id="g1007532"></a><a id="DWHSG002"></a><a id="i1006423"></a>
<h1 class="chapter"><span class="secnum">2</span> Logical Design in Data Warehouses</h1>
<p>This chapter explains how to create a logical design for a data warehousing environment and includes the following topics:</p>
<ul>
<li>
<p><a href="#CIHHHJED">Logical Versus Physical Design in Data Warehouses</a></p>
</li>
<li>
<p><a href="#i1006209">Creating a Logical Design</a></p>
</li>
<li>
<p><a href="#i1006246">Data Warehousing Schemas</a></p>
</li>
<li>
<p><a href="#i1006413">Data Warehousing Objects</a></p>
</li>
</ul>
<a id="CIHHHJED"></a><a id="DWHSG8091"></a>
<div class="sect1">
<h2 class="sect1">Logical Versus Physical Design in Data Warehouses</h2>
<p>Your organization has decided to build a data warehouse. You have defined the business requirements and agreed upon the scope of your application, and created a conceptual design. Now you need to translate your requirements into a system deliverable. To do so, you create the logical and physical design for the data warehouse. You then define:</p>
<ul>
<li>
<p>The specific data content</p>
</li>
<li>
<p>Relationships within and between groups of data</p>
</li>
<li>
<p>The system environment supporting your data warehouse</p>
</li>
<li>
<p>The data transformations required</p>
</li>
<li>
<p>The frequency with which data is refreshed</p>
</li>
</ul>
<p>The logical design is more conceptual and abstract than the physical design. In the logical design, you look at the logical relationships among the objects. In the physical design, you look at the most effective way of storing and retrieving the objects as well as handling them from a transportation and backup/recovery perspective.</p>
<p>Orient your design toward the needs of the end users. End users typically want to perform analysis and look at aggregated data, rather than at individual transactions. However, end users might not know what they need until they see it. In addition, a well-planned design allows for growth and changes as the needs of users change and evolve.</p>
<p>By beginning with the logical design, you focus on the information requirements and save the implementation details for later.</p>
</div>
<!-- class="sect1" -->
<a id="i1006209"></a><a id="DWHSG8092"></a>
<div class="sect1">
<h2 class="sect1">Creating a Logical <a id="sthref31"></a>Design</h2>
<p>A logical design is conceptual and abstract. You do not deal with the physical implementation details yet. You deal only with defining the types of information that you need.</p>
<p>One technique you can use to model your organization's logical information requirements is entity-relationship modeling. Entity-relationship modeling involves identifying the things of importance (entities), the properties of these things (attributes), and how they are related to one another (relationships).</p>
<p>The process of logical design involves arranging data into a series of logical relationships called entities and attributes. <a id="sthref32"></a>An <a href="glossary.htm#i996921"><span class="xrefglossterm">entity</span></a> represents a chunk of information. In relational databases, an entity often maps to a table. <a id="sthref33"></a>An <a href="glossary.htm#i996773"><span class="xrefglossterm">attribute</span></a> is a component of an entity that helps define the uniqueness of the entity. In relational databases, an attribute maps to a column.</p>
<p>To ensure that your data is consistent, you must use unique<a id="sthref34"></a> identifiers. A <a href="glossary.htm#i997210"><span class="xrefglossterm">unique identifier</span></a> is something you add to tables so that you can differentiate between the same item when it appears in different places. In a physical design, this is usually a primary key.</p>
<p>While entity-relationship diagramming has traditionally been associated with highly normalized models such as OLTP applications, the technique is still useful for data warehouse design in the fo<a id="sthref35"></a>rm of dimensional modeling. In dimensional modeling, instead of seeking to discover atomic units of information (such as entities and attributes) and all of the relationships between them, you identify which information belongs to a central fact table and which information belongs to its associated dimension tables. You identify business subjects or fields of data, define relationships between business subjects, and name the attributes for each subject.</p>
<div class="infoboxnotealso">
<p class="notep1"><span class="bold">See Also</span>:</p>
<a href="dimen.htm#g1011059">Chapter 11, "Dimensions"</a> for further information regarding dimensions</div>
<p>Your logical design should result in (1) a set of entities and attributes corresponding to fact tables and dimension tables and (2) a model of operational data from your source into subject-oriented information in your target data warehouse schema.</p>
<p>You can create the logical design using a pen and paper, or you can use a design tool such as Oracle Warehouse Builder (specifically designed to support modeling the ETL process).</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
Oracle Warehouse Builder documentation set</div>
</div>
<!-- class="sect1" -->
<a id="i1006246"></a><a id="DWHSG8093"></a>
<div class="sect1">
<h2 class="sect1">Data Warehousing Schemas</h2>
<p>A schema<a id="sthref36"></a><a id="sthref37"></a> is a collection of database objects, including tables, views, indexes, and synonyms. You can arrange schema objects in the schema models designed for data warehousing in a variety of ways. Most data warehouses use a dimensional model.</p>
<p>The model of your source data and the requirements of your users help you design the data warehouse schema. You can sometimes get the source model from your company's enterprise data model and reverse-engineer the logical data model for the data warehouse from this. The physical implementation of the logical data warehouse model may require some changes to adapt it to your system parameters&mdash;size of computer, number of users, storage capacity, type of network, and software.</p>
<a id="i1006251"></a><a id="DWHSG8094"></a>
<div class="sect2">
<h3 class="sect2">Star Schemas</h3>
<p>The <a href="glossary.htm#i997131">star schema</a> <a id="sthref38"></a>is the simplest data warehouse schema. It is called a star schema because the diagram resembles a star, with points radiating from a center. The center of the star consists of one or more fact tables and the points of the star are the dimension tables, as shown in <a href="#i1006261">Figure 2-1</a>.</p>
<div class="figure">
<p class="titleinfigure"><a id="i1006261"></a><a id="DWHSG8095"></a>Figure 2-1 Star Schema</p>
<img width="377" height="178" src="./dwhsg007.gif" alt="Description of Figure 2-1 follows" /><br />
<a id="sthref39" href="./img_text/dwhsg007.htm">Description of "Figure 2-1 Star Schema"</a><br />
<br /></div>
<!-- class="figure" -->
<p>The most natural way to model a data warehouse is as a star schema, where only one join establishes the relationship between the fact table and any one of the dimension tables.</p>
<p><a id="sthref40"></a>A star schema optimizes performance by keeping queries simple and providing fast response time. All the information about each level is stored in one row.</p>
</div>
<!-- class="sect2" -->
<a id="DWHSG8096"></a>
<div class="sect2"><a id="sthref41"></a>
<h3 class="sect2">Other Data Warehousing Schemas</h3>
<p>Some schemas in data warehousing environments use third normal form rather than star schemas. Another schema that is sometimes useful is the snowflake schema, which is a star schema with normalized dimensions in a tree structure. Another alternative is provided by OLAP, which supports dimensional data types such as cubes and dimensions within Oracle Database.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="schemas.htm#g1008401">Chapter 20, "Schema Modeling Techniques"</a> for further information regarding star and snowflake schemas in data warehouses, <a class="olink CNCPT010" href="../../server.112/e40540/tablecls.htm#CNCPT010"><span class="italic">Oracle Database Concepts</span></a> for further conceptual material, <a class="olink OLAUG" href="../../olap.112/e17123/toc.htm"><span class="italic">Oracle OLAP User's Guide</span></a> for more information regarding OLAP schemas</div>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="i1006413"></a><a id="DWHSG8097"></a>
<div class="sect1">
<h2 class="sect1">Data Warehousing Objects</h2>
<p>Fact tables and dimension tables are the two types of objects commonly used in dimensional data warehouse schemas.</p>
<p>Fact tables <a id="sthref42"></a>are the large tables in your data warehouse schema that store business measurements. Fact tables typically contain facts and foreign keys to the dimension tables. Fact tables represent data, usually numeric and additive, that can be analyzed and examined. Examples include <code>sales</code>, <code>cost</code>, and <code>profit</code>.</p>
<p>Dimension tables, also k<a id="sthref43"></a>nown as lookup or reference tables, contain the relatively static data in the data warehouse. Dimension tables store the information you normally use to contain queries. Dimension tables are usually textual and descriptive and you can use them as the row headers of the result set. Examples are <code>customers</code> or <code>products</code>.</p>
<a id="i1006298"></a><a id="DWHSG8098"></a>
<div class="sect2">
<h3 class="sect2">Data Warehousing Objects: Fact Tables</h3>
<p><a id="sthref44"></a>A fact table typically has two types of columns: those that contain numeric facts (often called measurements), and those that are foreign keys to dimension tables. A fact table contains either detail-level facts or facts that have been aggregated. Fact tables that contain aggregated facts are often <a id="sthref45"></a>called summary tables. A fact table usually contains facts with the same level of aggregation. Though most facts are additive, they can also be semi-additive or non-additive. Additive facts can be aggregated by simple arithmetical addition. A common example of this is sales. Non-additive facts cannot be added at all. An example of this is averages. Semi-additive facts can be aggregated along some of the dimensions and not along others. An example of this is inventory levels, where you cannot tell what a level means simply by looking at it.</p>
<a id="i1006303"></a><a id="DWHSG8099"></a>
<div class="sect3">
<h4 class="sect3">Requirements of Fact Tables</h4>
<p>You must define a fact table for each star schema<a id="sthref46"></a>. From a modeling standpoint, the primary key of the fact table is usually a composite key that is made up of all of its foreign keys.</p>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="i1006313"></a><a id="DWHSG8100"></a>
<div class="sect2">
<h3 class="sect2">Data Warehousing Objects: Dimension Tables</h3>
<p><a id="sthref47"></a>A dimension is a structure, often composed of one or more hierarchies, that categorizes data. Dimensional attributes help to describe the dimensional value. They are normally descriptive, textual values. Several distinct dimensions, combined with facts, enable you to answer business questions. Commonly used dimensions are customers, products, and time.</p>
<p>Dimension data is typically collected at the lowest level<a id="sthref48"></a> of detail and then aggregated into higher level totals that are more useful for analysis. These natural rollups or aggregations within a dimension table are called hierarchies.</p>
<a id="DWHSG8101"></a>
<div class="sect3"><a id="sthref49"></a>
<h4 class="sect3">Hierarchies<a id="sthref50"></a><a id="sthref51"></a></h4>
<p>Hierarchies<a id="sthref52"></a> are logical structures that use ordered levels to organize data. A hierarchy can be used to define data aggregation. For example, in a time dimension, a hierarchy might aggregate data from the month level to the quarter level to the year level. A hierarchy can also be used to define a navigational drill path and to establish a family structure.</p>
<p>Within a hierarchy, each level is logically connected to the levels above and below it. Data values at lower levels aggregate into the data values at higher levels. A dimension can be composed of more than one hierarchy. For example, in the product dimension, there might be two hierarchies&mdash;one for product categories and one for product suppliers.</p>
<p>Dimension hierarchies<a id="sthref53"></a> also group levels from general to granular. Q<a id="sthref54"></a>uery tools use hierarchies to enable you to drill down into your data to view different levels of granularity. This is one of the key benefits of a data warehouse.</p>
<p>When designing hierarchies, you must consider the relationships in business structures. For example, a divisional multilevel sales organization.</p>
<p>Hierarchies impose a family structure on dimension values. For a particular level value, a value at the next higher level is its parent, and values at the next lower level are its children. These familial relationships<a id="sthref55"></a> enable analysts to access data quickly.</p>
<a id="i1006331"></a><a id="DWHSG8102"></a>
<div class="sect4">
<h5 class="sect4">Levels</h5>
<p><a id="sthref56"></a>A level represents a position in a hierarchy. For example, a time dimension might have a hierarchy that represents data at the month, quarter, and year levels. Levels range from general to specific, with the <a id="sthref57"></a>root level as the highest or most general level. The levels in a dimension are organized into one or more hierarchies.</p>
</div>
<!-- class="sect4" -->
<a id="DWHSG8103"></a>
<div class="sect4"><a id="sthref58"></a>
<h5 class="sect4">Level Relationships</h5>
<p>Level relationships<a id="sthref59"></a> specify top-to-bottom ordering of levels from most general (the root) to most specific information. They define the parent-child relationship between the levels in a hierarchy.</p>
<p>Hierarchies are also essential components in enabling more complex rewrites. For example, the database can aggregate an existing sales revenue on a quarterly base to a yearly aggregation when the dimensional dependencies between quarter and year are known.</p>
</div>
<!-- class="sect4" --></div>
<!-- class="sect3" -->
<a id="DWHSG8104"></a>
<div class="sect3"><a id="sthref60"></a>
<h4 class="sect3">Typical Dimension Hierarchy</h4>
<p><a href="#i1006345">Figure 2-2</a> illustrates a dimension hierarchy based on <code>customers</code>.</p>
<div class="figure">
<p class="titleinfigure"><a id="i1006345"></a><a id="DWHSG8105"></a>Figure 2-2 Typical Levels in a Dimension Hierarchy</p>
<img width="108" height="206" src="./dwhsg023.gif" alt="Description of Figure 2-2 follows" /><br />
<a id="sthref61" href="./img_text/dwhsg023.htm">Description of "Figure 2-2 Typical Levels in a Dimension Hierarchy"</a><br />
<br /></div>
<!-- class="figure" -->
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="dimen.htm#g1011059">Chapter 11, "Dimensions"</a> and <a href="qrbasic.htm#g1045551">Chapter 18, "Basic Query Rewrite"</a> for further information regarding hierarchies</div>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="DWHSG8106"></a>
<div class="sect2"><a id="sthref62"></a>
<h3 class="sect2">Data Warehousing Objects: Unique Identifiers</h3>
<p>Unique identifiers are specified for one distinct record in a dimension table. Artificial unique identifiers are often used to avoid the potential problem of unique identifiers changing. Unique identifiers are represented with the <code>#</code> character. For example, <code>#customer_id</code>.</p>
</div>
<!-- class="sect2" -->
<a id="DWHSG8107"></a>
<div class="sect2"><a id="sthref63"></a>
<h3 class="sect2">Data Warehousing Objects: Relationships</h3>
<p>Relationships guarantee business integrity. An example is that if a business sells something, there is obviously a customer and a product. Designing a relationship between the sales information in the fact table and the dimension tables products and customers enforces the business rules in databases.</p>
</div>
<!-- class="sect2" -->
<a id="DWHSG8108"></a>
<div class="sect2"><a id="sthref64"></a>
<h3 class="sect2">Example of Data Warehousing Objects and Their Relationships</h3>
<p><a href="#i1006371">Figure 2-3</a> illustrates a common example of a <code>sales</code> fact table and dimension tables <code>customers</code>, <code>products</code>, <code>promotions</code>, <code>times</code>, and <code>channels</code>.</p>
<div class="figure">
<p class="titleinfigure"><a id="i1006371"></a><a id="DWHSG8109"></a>Figure 2-3 Typical Data Warehousing Objects</p>
<img width="464" height="228" src="./dwhsg076.gif" alt="Description of Figure 2-3 follows" /><br />
<a id="sthref65" href="./img_text/dwhsg076.htm">Description of "Figure 2-3 Typical Data Warehousing Objects"</a><br />
<br /></div>
<!-- class="figure" --></div>
<!-- class="sect2" --></div>
<!-- class="sect1" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment1371">
<tr>
<td class="cellalignment1378">
<table class="cellalignment1376">
<tr>
<td class="cellalignment1375"><a href="part2.htm"><img width="24" height="24" src="../../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment1375"><a href="part3.htm"><img width="24" height="24" src="../../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;2001, 2013,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment1380">
<table class="cellalignment1374">
<tr>
<td class="cellalignment1375"><a href="../../index.htm"><img width="24" height="24" src="../../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment1375"><a href="../../nav/portal_booklist.htm"><img width="24" height="24" src="../../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment1375"><a href="toc.htm"><img width="24" height="24" src="../../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment1375"><a href="index.htm"><img width="24" height="24" src="../../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment1375"><a href="../../nav/mindx.htm"><img width="24" height="24" src="../../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment1375"><a href="../../dcommon/html/feedback.htm"><img width="24" height="24" src="../../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>
</body>
</html>
