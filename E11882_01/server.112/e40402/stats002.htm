<!DOCTYPE html>
<html lang="en" >
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1">
<meta charset="utf-8">
<title>Statistics Descriptions</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Merged Version 1067" />
<meta name="dcterms.created" content="2015-08-14T13:20:32Z" />
<meta name="robots" content="all" />
<meta name="dcterms.title" content="Database Reference" />
<meta name="dcterms.identifier" content="E40402-18" />
<meta name="dcterms.isVersionOf" content="REFRN" />
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;2002, 2015,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved." />
<link rel="Start" href="../../index.htm" title="Home" type="text/html" />
<link rel="Copyright" href="../../dcommon/html/cpyr.htm" title="Copyright" type="text/html" />

<script type="application/javascript"  src="../../dcommon/js/headfoot.js"></script>
<script type="application/javascript"  src="../../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html" />
<link rel="Index" href="index.htm" title="Index" type="text/html" />
<link rel="Prev" href="stats001.htm" title="Previous" type="text/html" />
<link rel="Next" href="bgprocesses.htm" title="Next" type="text/html" />
<link rel="alternate" href="../e40402.pdf" title="PDF version" type="application/pdf" />
<link rel="schema.dcterms" href="http://purl.org/dc/terms/" />
<link rel="stylesheet" href="../../dcommon/css/fusiondoc.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/header.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/footer.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/fonts.css">
<link rel="stylesheet" href="../../dcommon/css/foundation.css">
<link rel="stylesheet" href="../../dcommon/css/codemirror.css">
<link rel="stylesheet" type="text/css" title="Default" href="../../nav/css/html5.css">
<link rel="stylesheet" href="../../dcommon/css/respond-480-tablet.css">
<link rel="stylesheet" href="../../dcommon/css/respond-768-laptop.css">
<link rel="stylesheet" href="../../dcommon/css/respond-1140-deskop.css">
<script type="application/javascript" src="../../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">2168/2170</span> <!-- End Header --><a id="i375475"></a>
<div class="sect1">
<h1 class="sect1">Statistics Descriptions</h1>
<p>This section describes the statistics stored in the <code dir="ltr">V$SESSTAT</code> and <code dir="ltr">V$SYSSTAT</code> views. The statistics are listed here in alphabetical order.</p>
<p>The <code dir="ltr">CLASS</code> column contains a number representing one or more statistics classes. The following class numbers are additive:</p>
<ul>
<li>
<p>1, User</p>
</li>
<li>
<p>2, Redo</p>
</li>
<li>
<p>4, Enqueue</p>
</li>
<li>
<p>8, Cache</p>
</li>
<li>
<p>16, OS</p>
</li>
<li>
<p>32, Real Application Clusters</p>
</li>
<li>
<p>64, SQL</p>
</li>
<li>
<p>128, Debug</p>
</li>
</ul>
<p>For example, a class value of 72 represents a statistic that relates to SQL statements and caching.</p>
<p>Some statistics are populated only if the <code dir="ltr">TIMED_STATISTICS</code> initialization parameter is set to <code dir="ltr">true</code>. Those statistics are flagged in the right-hand column.</p>
<div class="tblformalwide">
<p class="titleintable"><a id="sthref4326"></a><a id="sthref4327"></a>Table E-1 Database Statistics Descriptions</p>
<table class="cellalignment1590" title="Database Statistics Descriptions" summary="This table is described in the preceding text" dir="ltr">
<thead>
<tr class="cellalignment1581">
<th class="cellalignment1591" id="r1c1-t3">Name</th>
<th class="cellalignment1591" id="r1c2-t3">Class</th>
<th class="cellalignment1591" id="r1c3-t3">Description</th>
<th class="cellalignment1591" id="r1c4-t3">TIMED_STATISTICS</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r2c1-t3" headers="r1c1-t3">
<p><a id="sthref4328"></a>application wait time</p>
</td>
<td class="cellalignment1587" headers="r2c1-t3 r1c2-t3">
<p>1</p>
</td>
<td class="cellalignment1587" headers="r2c1-t3 r1c3-t3">
<p>The total wait time (in centiseconds) for waits that belong to the Application wait class</p>
</td>
<td class="cellalignment1587" headers="r2c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r3c1-t3" headers="r1c1-t3">
<p><a id="i955055"></a><a id="sthref4329"></a>background checkpoints completed</p>
</td>
<td class="cellalignment1587" headers="r3c1-t3 r1c2-t3">
<p>8</p>
</td>
<td class="cellalignment1587" headers="r3c1-t3 r1c3-t3">
<p>Number of checkpoints completed by the background process. This statistic is incremented when the background process successfully advances the thread checkpoint.</p>
</td>
<td class="cellalignment1587" headers="r3c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r4c1-t3" headers="r1c1-t3">
<p><a id="sthref4330"></a>background checkpoints started</p>
</td>
<td class="cellalignment1587" headers="r4c1-t3 r1c2-t3">
<p>8</p>
</td>
<td class="cellalignment1587" headers="r4c1-t3 r1c3-t3">
<p>Number of checkpoints started by the background process. This statistic can be larger than "background checkpoints completed" if a new checkpoint overrides an incomplete checkpoint or if a checkpoint is currently under way. This statistic includes only checkpoints of the redo thread. It does not include:</p>
<ul>
<li>
<p>Individual file checkpoints for operations such as offline or begin backup</p>
</li>
<li>
<p>Foreground (user-requested) checkpoints (for example, performed by <code dir="ltr">ALTER SYSTEM CHECKPOINT LOCAL</code> statements)</p>
</li>
</ul>
</td>
<td class="cellalignment1587" headers="r4c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r5c1-t3" headers="r1c1-t3">
<p><a id="sthref4331"></a>background timeouts</p>
</td>
<td class="cellalignment1587" headers="r5c1-t3 r1c2-t3">
<p>128</p>
</td>
<td class="cellalignment1587" headers="r5c1-t3 r1c3-t3">
<p>This is a count of the times where a background process has set an alarm for itself and the alarm has timed out rather than the background process being posted by another process to do some work.</p>
</td>
<td class="cellalignment1587" headers="r5c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r6c1-t3" headers="r1c1-t3">
<p><a id="sthref4332"></a>branch node splits</p>
</td>
<td class="cellalignment1587" headers="r6c1-t3 r1c2-t3">
<p>128</p>
</td>
<td class="cellalignment1587" headers="r6c1-t3 r1c3-t3">
<p>Number of times an index branch block was split because of the insertion of an additional value</p>
</td>
<td class="cellalignment1587" headers="r6c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r7c1-t3" headers="r1c1-t3">
<p><a id="i27827"></a><a id="sthref4333"></a>buffer is not pinned count</p>
</td>
<td class="cellalignment1587" headers="r7c1-t3 r1c2-t3">
<p>72</p>
</td>
<td class="cellalignment1587" headers="r7c1-t3 r1c3-t3">
<p>Number of times a buffer was free when visited. Useful only for internal debugging purposes.</p>
</td>
<td class="cellalignment1587" headers="r7c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r8c1-t3" headers="r1c1-t3">
<p><a id="i27831"></a><a id="sthref4334"></a>buffer is pinned count</p>
</td>
<td class="cellalignment1587" headers="r8c1-t3 r1c2-t3">
<p>72</p>
</td>
<td class="cellalignment1587" headers="r8c1-t3 r1c3-t3">
<p>Number of times a buffer was pinned when visited. Useful only for internal debugging purposes.</p>
</td>
<td class="cellalignment1587" headers="r8c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r9c1-t3" headers="r1c1-t3">
<p><a id="sthref4335"></a>bytes received via SQL*Net from client</p>
</td>
<td class="cellalignment1587" headers="r9c1-t3 r1c2-t3">
<p>1</p>
</td>
<td class="cellalignment1587" headers="r9c1-t3 r1c3-t3">
<p>Total number of bytes received from the client over Oracle Net Services</p>
</td>
<td class="cellalignment1587" headers="r9c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r10c1-t3" headers="r1c1-t3">
<p><a id="sthref4336"></a>bytes received via SQL*Net from dblink</p>
</td>
<td class="cellalignment1587" headers="r10c1-t3 r1c2-t3">
<p>1</p>
</td>
<td class="cellalignment1587" headers="r10c1-t3 r1c3-t3">
<p>Total number of bytes received from a database link over Oracle Net Services</p>
</td>
<td class="cellalignment1587" headers="r10c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r11c1-t3" headers="r1c1-t3">
<p><a id="sthref4337"></a>bytes sent via SQL*Net to client</p>
</td>
<td class="cellalignment1587" headers="r11c1-t3 r1c2-t3">
<p>1</p>
</td>
<td class="cellalignment1587" headers="r11c1-t3 r1c3-t3">
<p>Total number of bytes sent to the client from the foreground processes</p>
</td>
<td class="cellalignment1587" headers="r11c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r12c1-t3" headers="r1c1-t3">
<p><a id="sthref4338"></a>bytes sent via SQL*Net to dblink</p>
</td>
<td class="cellalignment1587" headers="r12c1-t3 r1c2-t3">
<p>1</p>
</td>
<td class="cellalignment1587" headers="r12c1-t3 r1c3-t3">
<p>Total number of bytes sent over a database link</p>
</td>
<td class="cellalignment1587" headers="r12c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r13c1-t3" headers="r1c1-t3">
<p><a id="sthref4339"></a>Cached Commit SCN referenced</p>
</td>
<td class="cellalignment1587" headers="r13c1-t3 r1c2-t3">
<p>128</p>
</td>
<td class="cellalignment1587" headers="r13c1-t3 r1c3-t3">
<p>Useful only for internal debugging purposes</p>
</td>
<td class="cellalignment1587" headers="r13c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r14c1-t3" headers="r1c1-t3">
<p><a id="sthref4340"></a>calls to get snapshot scn: kcmgss</p>
</td>
<td class="cellalignment1587" headers="r14c1-t3 r1c2-t3">
<p>32</p>
</td>
<td class="cellalignment1587" headers="r14c1-t3 r1c3-t3">
<p>Number of times a snapshot system change number (SCN) was allocated. The SCN is allocated at the start of a transaction.</p>
</td>
<td class="cellalignment1587" headers="r14c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r15c1-t3" headers="r1c1-t3">
<p><a id="sthref4341"></a>calls to kcmgas</p>
</td>
<td class="cellalignment1587" headers="r15c1-t3 r1c2-t3">
<p>128</p>
</td>
<td class="cellalignment1587" headers="r15c1-t3 r1c3-t3">
<p>Number of calls to routine kcmgas to get a new SCN</p>
</td>
<td class="cellalignment1587" headers="r15c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r16c1-t3" headers="r1c1-t3">
<p><a id="sthref4342"></a>calls to kcmgcs</p>
</td>
<td class="cellalignment1587" headers="r16c1-t3 r1c2-t3">
<p>128</p>
</td>
<td class="cellalignment1587" headers="r16c1-t3 r1c3-t3">
<p>Number of calls to routine kcmgcs to get a current SCN</p>
</td>
<td class="cellalignment1587" headers="r16c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r17c1-t3" headers="r1c1-t3">
<p><a id="sthref4343"></a>calls to kcmgrs</p>
</td>
<td class="cellalignment1587" headers="r17c1-t3 r1c2-t3">
<p>128</p>
</td>
<td class="cellalignment1587" headers="r17c1-t3 r1c3-t3">
<p>Number of calls to routine kcsgrs to get a recent SCN</p>
</td>
<td class="cellalignment1587" headers="r17c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r18c1-t3" headers="r1c1-t3">
<p><a id="sthref4344"></a>change write time</p>
</td>
<td class="cellalignment1587" headers="r18c1-t3 r1c2-t3">
<p>8</p>
</td>
<td class="cellalignment1587" headers="r18c1-t3 r1c3-t3">
<p>Elapsed redo write time for changes made to <code dir="ltr">CURRENT</code> blocks in 10s of milliseconds.</p>
</td>
<td class="cellalignment1587" headers="r18c1-t3 r1c4-t3">
<p>3</p>
</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r19c1-t3" headers="r1c1-t3">
<p><a id="sthref4345"></a>cleanouts and rollbacks - consistent read gets</p>
</td>
<td class="cellalignment1587" headers="r19c1-t3 r1c2-t3">
<p>128</p>
</td>
<td class="cellalignment1587" headers="r19c1-t3 r1c3-t3">
<p>Number of consistent gets that require both block rollbacks and block cleanouts.</p>
<p><span class="bold">See Also:</span> <a href="#i26158">"consistent gets"</a></p>
</td>
<td class="cellalignment1587" headers="r19c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r20c1-t3" headers="r1c1-t3">
<p><a id="sthref4346"></a>cleanouts only - consistent read gets</p>
</td>
<td class="cellalignment1587" headers="r20c1-t3 r1c2-t3">
<p>128</p>
</td>
<td class="cellalignment1587" headers="r20c1-t3 r1c3-t3">
<p>Number of consistent gets that require only block cleanouts, no rollbacks.</p>
<p><span class="bold">See Also:</span> <a href="#i26158">"consistent gets"</a></p>
</td>
<td class="cellalignment1587" headers="r20c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r21c1-t3" headers="r1c1-t3">
<p><a id="sthref4347"></a>cluster key scan block gets</p>
</td>
<td class="cellalignment1587" headers="r21c1-t3 r1c2-t3">
<p>64</p>
</td>
<td class="cellalignment1587" headers="r21c1-t3 r1c3-t3">
<p>Number of blocks obtained in a cluster scan</p>
</td>
<td class="cellalignment1587" headers="r21c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r22c1-t3" headers="r1c1-t3">
<p><a id="sthref4348"></a>cluster key scans</p>
</td>
<td class="cellalignment1587" headers="r22c1-t3 r1c2-t3">
<p>64</p>
</td>
<td class="cellalignment1587" headers="r22c1-t3 r1c3-t3">
<p>Number of cluster scans that were started</p>
</td>
<td class="cellalignment1587" headers="r22c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r23c1-t3" headers="r1c1-t3">
<p><a id="sthref4349"></a>cluster wait time</p>
</td>
<td class="cellalignment1587" headers="r23c1-t3 r1c2-t3">
<p>1</p>
</td>
<td class="cellalignment1587" headers="r23c1-t3 r1c3-t3">
<p>The total wait time (in centiseconds) for waits that belong to the Cluster wait class</p>
</td>
<td class="cellalignment1587" headers="r23c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r24c1-t3" headers="r1c1-t3">
<p><a id="sthref4350"></a>cold recycle reads</p>
</td>
<td class="cellalignment1587" headers="r24c1-t3 r1c2-t3">
<p>8</p>
</td>
<td class="cellalignment1587" headers="r24c1-t3 r1c3-t3">
<p>Number of buffers that were read through the least recently used end of the recycle cache with fast aging strategy</p>
</td>
<td class="cellalignment1587" headers="r24c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r25c1-t3" headers="r1c1-t3">
<p><a id="sthref4351"></a>commit cleanout failures: block lost</p>
</td>
<td class="cellalignment1587" headers="r25c1-t3 r1c2-t3">
<p>8</p>
</td>
<td class="cellalignment1587" headers="r25c1-t3 r1c3-t3">
<p>Number of times Oracle attempted a cleanout at commit but could not find the correct block due to forced write, replacement, or switch <code dir="ltr">CURRENT</code></p>
</td>
<td class="cellalignment1587" headers="r25c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r26c1-t3" headers="r1c1-t3">
<p><a id="sthref4352"></a>commit cleanout failures: buffer being written</p>
</td>
<td class="cellalignment1587" headers="r26c1-t3 r1c2-t3">
<p>8</p>
</td>
<td class="cellalignment1587" headers="r26c1-t3 r1c3-t3">
<p>Number of times Oracle attempted a cleanout at commit, but the buffer was currently being written</p>
</td>
<td class="cellalignment1587" headers="r26c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r27c1-t3" headers="r1c1-t3">
<p><a id="sthref4353"></a>commit cleanout failures: callback failure</p>
</td>
<td class="cellalignment1587" headers="r27c1-t3 r1c2-t3">
<p>8</p>
</td>
<td class="cellalignment1587" headers="r27c1-t3 r1c3-t3">
<p>Number of times the cleanout callback function returns <code dir="ltr">FALSE</code></p>
</td>
<td class="cellalignment1587" headers="r27c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r28c1-t3" headers="r1c1-t3">
<p><a id="sthref4354"></a>commit cleanout failures: cannot pin</p>
</td>
<td class="cellalignment1587" headers="r28c1-t3 r1c2-t3">
<p>8</p>
</td>
<td class="cellalignment1587" headers="r28c1-t3 r1c3-t3">
<p>Total number of times a commit cleanout was performed but failed because the block could not be pinned</p>
</td>
<td class="cellalignment1587" headers="r28c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r29c1-t3" headers="r1c1-t3">
<p><a id="sthref4355"></a>commit cleanout failures: hot backup in progress</p>
</td>
<td class="cellalignment1587" headers="r29c1-t3 r1c2-t3">
<p>8</p>
</td>
<td class="cellalignment1587" headers="r29c1-t3 r1c3-t3">
<p>Number of times Oracle attempted block cleanout at commit during hot backup. The image of the block needs to be logged before the buffer can be made dirty.</p>
</td>
<td class="cellalignment1587" headers="r29c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r30c1-t3" headers="r1c1-t3">
<p><a id="sthref4356"></a>commit cleanout failures: write disabled</p>
</td>
<td class="cellalignment1587" headers="r30c1-t3 r1c2-t3">
<p>8</p>
</td>
<td class="cellalignment1587" headers="r30c1-t3 r1c3-t3">
<p>Number of times a cleanout block at commit was performed but the writes to the database had been temporarily disabled</p>
</td>
<td class="cellalignment1587" headers="r30c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r31c1-t3" headers="r1c1-t3">
<p><a id="sthref4357"></a>commit cleanouts</p>
</td>
<td class="cellalignment1587" headers="r31c1-t3 r1c2-t3">
<p>8</p>
</td>
<td class="cellalignment1587" headers="r31c1-t3 r1c3-t3">
<p>Total number of times the cleanout block at commit function was performed</p>
</td>
<td class="cellalignment1587" headers="r31c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r32c1-t3" headers="r1c1-t3">
<p><a id="sthref4358"></a>commit cleanouts successfully completed</p>
</td>
<td class="cellalignment1587" headers="r32c1-t3 r1c2-t3">
<p>8</p>
</td>
<td class="cellalignment1587" headers="r32c1-t3 r1c3-t3">
<p>Number of times the cleanout block at commit function completed successfully</p>
</td>
<td class="cellalignment1587" headers="r32c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r33c1-t3" headers="r1c1-t3">
<p><a id="sthref4359"></a>commit nowait performed</p>
</td>
<td class="cellalignment1587" headers="r33c1-t3 r1c2-t3">
<p>1</p>
</td>
<td class="cellalignment1587" headers="r33c1-t3 r1c3-t3">
<p>The number of asynchronous commits that were actually performed. These commits did not wait for the commit redo to be flushed and be present on disk before returning.</p>
</td>
<td class="cellalignment1587" headers="r33c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r34c1-t3" headers="r1c1-t3">
<p><a id="sthref4360"></a>commit nowait requested</p>
</td>
<td class="cellalignment1587" headers="r34c1-t3 r1c2-t3">
<p>1</p>
</td>
<td class="cellalignment1587" headers="r34c1-t3 r1c3-t3">
<p>The number of no-wait commit or asynchronous commit requests that were made either using SQL or the OCI transaction control API</p>
</td>
<td class="cellalignment1587" headers="r34c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r35c1-t3" headers="r1c1-t3">
<p><a id="sthref4361"></a>Commit SCN cached</p>
</td>
<td class="cellalignment1587" headers="r35c1-t3 r1c2-t3">
<p>128</p>
</td>
<td class="cellalignment1587" headers="r35c1-t3 r1c3-t3">
<p>Number of times the system change number of a commit operation was cached</p>
</td>
<td class="cellalignment1587" headers="r35c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r36c1-t3" headers="r1c1-t3">
<p><a id="sthref4362"></a>commit wait/nowait performed</p>
</td>
<td class="cellalignment1587" headers="r36c1-t3 r1c2-t3">
<p>1</p>
</td>
<td class="cellalignment1587" headers="r36c1-t3 r1c3-t3">
<p>The number of asynchronous/synchronous commits that were actually performed</p>
</td>
<td class="cellalignment1587" headers="r36c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r37c1-t3" headers="r1c1-t3">
<p><a id="sthref4363"></a>commit wait/nowait requested</p>
</td>
<td class="cellalignment1587" headers="r37c1-t3 r1c2-t3">
<p>1</p>
</td>
<td class="cellalignment1587" headers="r37c1-t3 r1c3-t3">
<p>The number of no-wait or wait commits that were made either using SQL or the OCI transaction control API</p>
</td>
<td class="cellalignment1587" headers="r37c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r38c1-t3" headers="r1c1-t3">
<p><a id="sthref4364"></a>commit wait performed</p>
</td>
<td class="cellalignment1587" headers="r38c1-t3 r1c2-t3">
<p>1</p>
</td>
<td class="cellalignment1587" headers="r38c1-t3 r1c3-t3">
<p>The number of synchronous commits that were actually performed. These commits waited for the commit redo to be flushed and be present on disk before returning.</p>
</td>
<td class="cellalignment1587" headers="r38c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r39c1-t3" headers="r1c1-t3">
<p><a id="sthref4365"></a>commit wait requested</p>
</td>
<td class="cellalignment1587" headers="r39c1-t3 r1c2-t3">
<p>1</p>
</td>
<td class="cellalignment1587" headers="r39c1-t3 r1c3-t3">
<p>The number of waiting or synchronous commit requests that were made either using SQL or the OCI transaction control API</p>
</td>
<td class="cellalignment1587" headers="r39c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r40c1-t3" headers="r1c1-t3">
<p><a id="sthref4366"></a>concurrency wait time</p>
</td>
<td class="cellalignment1587" headers="r40c1-t3 r1c2-t3">
<p>1</p>
</td>
<td class="cellalignment1587" headers="r40c1-t3 r1c3-t3">
<p>The total wait time (in centiseconds) for waits that belong to the Concurrency wait class</p>
</td>
<td class="cellalignment1587" headers="r40c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r41c1-t3" headers="r1c1-t3">
<p><a id="i26148"></a><a id="sthref4367"></a>consistent changes</p>
</td>
<td class="cellalignment1587" headers="r41c1-t3 r1c2-t3">
<p>8</p>
</td>
<td class="cellalignment1587" headers="r41c1-t3 r1c3-t3">
<p>Number of times a user process has applied rollback entries to perform a consistent read on the block</p>
<p>Work loads that produce a great deal of consistent changes can consume a great deal of resources. The value of this statistic should be small in relation to the "consistent gets" statistic.</p>
</td>
<td class="cellalignment1587" headers="r41c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r42c1-t3" headers="r1c1-t3">
<p><a id="i26158"></a><a id="sthref4368"></a>consistent gets</p>
</td>
<td class="cellalignment1587" headers="r42c1-t3 r1c2-t3">
<p>8</p>
</td>
<td class="cellalignment1587" headers="r42c1-t3 r1c3-t3">
<p>Number of times a consistent read was requested for a block.</p>
<p><span class="bold">See Also:</span> <a href="#i26148">"consistent changes"</a> and <a href="#i28932">"session logical reads"</a> statistics</p>
</td>
<td class="cellalignment1587" headers="r42c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r43c1-t3" headers="r1c1-t3">
<p><a id="sthref4369"></a>consistent gets direct</p>
</td>
<td class="cellalignment1587" headers="r43c1-t3 r1c2-t3">
<p>8</p>
</td>
<td class="cellalignment1587" headers="r43c1-t3 r1c3-t3">
<p>Number of times a consistent read was requested for a block bypassing the buffer cache (for example, direct load operation). This is a subset of "consistent gets" statistics value.</p>
</td>
<td class="cellalignment1587" headers="r43c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r44c1-t3" headers="r1c1-t3">
<p><a id="sthref4370"></a>consistent gets from cache</p>
</td>
<td class="cellalignment1587" headers="r44c1-t3 r1c2-t3">
<p>8</p>
</td>
<td class="cellalignment1587" headers="r44c1-t3 r1c3-t3">
<p>Number of times a consistent read was requested for a block from buffer cache. This is a subset of "consistent gets" statistics value.</p>
</td>
<td class="cellalignment1587" headers="r44c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r45c1-t3" headers="r1c1-t3">
<p><a id="i26169"></a><a id="sthref4371"></a>CPU used by this session</p>
</td>
<td class="cellalignment1587" headers="r45c1-t3 r1c2-t3">
<p>1</p>
</td>
<td class="cellalignment1587" headers="r45c1-t3 r1c3-t3">
<p>Amount of CPU time (in 10s of milliseconds) used by a session from the time a user call starts until it ends. If a user call completes within 10 milliseconds, the start and end user-call time are the same for purposes of this statistics, and 0 milliseconds are added.</p>
<p>A similar problem can exist in the reporting by the operating system, especially on systems that suffer from many context switches.</p>
</td>
<td class="cellalignment1587" headers="r45c1-t3 r1c4-t3">
<p>3</p>
</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r46c1-t3" headers="r1c1-t3">
<p><a id="sthref4372"></a>CPU used when call started</p>
</td>
<td class="cellalignment1587" headers="r46c1-t3 r1c2-t3">
<p>128</p>
</td>
<td class="cellalignment1587" headers="r46c1-t3 r1c3-t3">
<p>The CPU time used when the call is started</p>
<p><span class="bold">See Also:</span> <a href="#i26169">"CPU used by this session"</a></p>
</td>
<td class="cellalignment1587" headers="r46c1-t3 r1c4-t3">
<p>3</p>
</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r47c1-t3" headers="r1c1-t3">
<p><a id="sthref4373"></a>CR blocks created</p>
</td>
<td class="cellalignment1587" headers="r47c1-t3 r1c2-t3">
<p>8</p>
</td>
<td class="cellalignment1587" headers="r47c1-t3 r1c3-t3">
<p>Number of <code dir="ltr">CURRENT</code> blocks cloned to create CR (consistent read) blocks. The most common reason for cloning is that the buffer is held in a incompatible mode.</p>
</td>
<td class="cellalignment1587" headers="r47c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r48c1-t3" headers="r1c1-t3">
<p><a id="sthref4374"></a>current blocks converted for CR</p>
</td>
<td class="cellalignment1587" headers="r48c1-t3 r1c2-t3">
<p>8</p>
</td>
<td class="cellalignment1587" headers="r48c1-t3 r1c3-t3">
<p>Number <code dir="ltr">CURRENT</code> blocks converted to CR state</p>
</td>
<td class="cellalignment1587" headers="r48c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r49c1-t3" headers="r1c1-t3">
<p><a id="sthref4375"></a>cursor authentications</p>
</td>
<td class="cellalignment1587" headers="r49c1-t3 r1c2-t3">
<p>128</p>
</td>
<td class="cellalignment1587" headers="r49c1-t3 r1c3-t3">
<p>Number of privilege checks conducted during execution of an operation</p>
</td>
<td class="cellalignment1587" headers="r49c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r50c1-t3" headers="r1c1-t3">
<p><a id="sthref4376"></a>data blocks consistent reads - undo records applied</p>
</td>
<td class="cellalignment1587" headers="r50c1-t3 r1c2-t3">
<p>128</p>
</td>
<td class="cellalignment1587" headers="r50c1-t3 r1c3-t3">
<p>Number of undo records applied to data blocks that have been rolled back for consistent read purposes</p>
</td>
<td class="cellalignment1587" headers="r50c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r51c1-t3" headers="r1c1-t3">
<p><a id="sthref4377"></a>db block changes</p>
</td>
<td class="cellalignment1587" headers="r51c1-t3 r1c2-t3">
<p>8</p>
</td>
<td class="cellalignment1587" headers="r51c1-t3 r1c3-t3">
<p>Closely related to <a href="#i26148">"consistent changes"</a>, this statistic counts the total number of changes that were part of an update or delete operation that were made to all blocks in the SGA. Such changes generate redo log entries and hence become permanent changes to the database if the transaction is committed.</p>
<p>This approximates total database work. This statistic indicates the rate at which buffers are being dirtied (on a per-transaction or per-second basis, for example).</p>
</td>
<td class="cellalignment1587" headers="r51c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r52c1-t3" headers="r1c1-t3">
<p><a id="i26229"></a><a id="sthref4378"></a>db block gets</p>
</td>
<td class="cellalignment1587" headers="r52c1-t3 r1c2-t3">
<p>8</p>
</td>
<td class="cellalignment1587" headers="r52c1-t3 r1c3-t3">
<p>Number of times a <code dir="ltr">CURRENT</code> block was requested</p>
<p><span class="bold">See Also:</span> <a href="#i26158">"consistent gets"</a></p>
</td>
<td class="cellalignment1587" headers="r52c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r53c1-t3" headers="r1c1-t3">
<p><a id="sthref4379"></a>db block gets direct</p>
</td>
<td class="cellalignment1587" headers="r53c1-t3 r1c2-t3">
<p>8</p>
</td>
<td class="cellalignment1587" headers="r53c1-t3 r1c3-t3">
<p>Number of times a <code dir="ltr">CURRENT</code> block was requested bypassing the buffer cache (for example, a direct load operation). This is a subset of "db block gets" statistics value.</p>
</td>
<td class="cellalignment1587" headers="r53c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r54c1-t3" headers="r1c1-t3">
<p><a id="sthref4380"></a>db block gets from cache</p>
</td>
<td class="cellalignment1587" headers="r54c1-t3 r1c2-t3">
<p>8</p>
</td>
<td class="cellalignment1587" headers="r54c1-t3 r1c3-t3">
<p>Number of times a <code dir="ltr">CURRENT</code> block was requested from the buffer cache. This is a subset of "db block gets" statistics value.</p>
</td>
<td class="cellalignment1587" headers="r54c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r55c1-t3" headers="r1c1-t3">
<p><a id="sthref4381"></a>DBWR checkpoint buffers written</p>
</td>
<td class="cellalignment1587" headers="r55c1-t3 r1c2-t3">
<p>8</p>
</td>
<td class="cellalignment1587" headers="r55c1-t3 r1c3-t3">
<p>Number of buffers that were written for checkpoints</p>
</td>
<td class="cellalignment1587" headers="r55c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r56c1-t3" headers="r1c1-t3">
<p><a id="i28842"></a><a id="sthref4382"></a>DBWR checkpoints</p>
</td>
<td class="cellalignment1587" headers="r56c1-t3 r1c2-t3">
<p>8</p>
</td>
<td class="cellalignment1587" headers="r56c1-t3 r1c3-t3">
<p>Number of times the DBWR was asked to scan the cache and write all blocks marked for a checkpoint or the end of recovery. This statistic is always larger than <a href="#i955055">"background checkpoints completed"</a>.</p>
</td>
<td class="cellalignment1587" headers="r56c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r57c1-t3" headers="r1c1-t3">
<p><a id="i26278"></a><a id="sthref4383"></a>DBWR lru scans</p>
</td>
<td class="cellalignment1587" headers="r57c1-t3 r1c2-t3">
<p>8</p>
</td>
<td class="cellalignment1587" headers="r57c1-t3 r1c3-t3">
<p>Number of times that DBWR scans the LRU queue looking for buffers to write. This count includes scans to fill a batch being written for another purpose (such as a checkpoint).</p>
</td>
<td class="cellalignment1587" headers="r57c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r58c1-t3" headers="r1c1-t3">
<p><a id="sthref4384"></a>DBWR revisited being-written buffer</p>
</td>
<td class="cellalignment1587" headers="r58c1-t3 r1c2-t3">
<p>8</p>
</td>
<td class="cellalignment1587" headers="r58c1-t3 r1c3-t3">
<p>Number of times that DBWR tried to save a buffer for writing and found that it was already in the write batch. This statistic measures the amount of "useless" work that DBWR had to do in trying to fill the batch.</p>
<p>Many sources contribute to a write batch. If the same buffer from different sources is considered for adding to the write batch, then all but the first attempt will be "useless" because the buffer is already marked as being written.</p>
</td>
<td class="cellalignment1587" headers="r58c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r59c1-t3" headers="r1c1-t3">
<p><a id="sthref4385"></a>DBWR transaction table writes</p>
</td>
<td class="cellalignment1587" headers="r59c1-t3 r1c2-t3">
<p>8</p>
</td>
<td class="cellalignment1587" headers="r59c1-t3 r1c3-t3">
<p>Number of rollback segment headers written by DBWR. This statistic indicates how many "hot" buffers were written, causing a user process to wait while the write completed.</p>
</td>
<td class="cellalignment1587" headers="r59c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r60c1-t3" headers="r1c1-t3">
<p><a id="sthref4386"></a>DBWR undo block writes</p>
</td>
<td class="cellalignment1587" headers="r60c1-t3 r1c2-t3">
<p>8</p>
</td>
<td class="cellalignment1587" headers="r60c1-t3 r1c3-t3">
<p>Number of rollback segment blocks written by DBWR</p>
</td>
<td class="cellalignment1587" headers="r60c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r61c1-t3" headers="r1c1-t3">
<p><a id="sthref4387"></a>DDL statements parallelized</p>
</td>
<td class="cellalignment1587" headers="r61c1-t3 r1c2-t3">
<p>32</p>
</td>
<td class="cellalignment1587" headers="r61c1-t3 r1c3-t3">
<p>Number of DDL statements that were executed in parallel</p>
</td>
<td class="cellalignment1587" headers="r61c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r62c1-t3" headers="r1c1-t3">
<p><a id="i27758"></a><a id="sthref4388"></a>deferred (CURRENT) block cleanout applications</p>
</td>
<td class="cellalignment1587" headers="r62c1-t3 r1c2-t3">
<p>128</p>
</td>
<td class="cellalignment1587" headers="r62c1-t3 r1c3-t3">
<p>Number of times cleanout records are deferred, piggyback with changes, always current get</p>
</td>
<td class="cellalignment1587" headers="r62c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r63c1-t3" headers="r1c1-t3">
<p><a id="sthref4389"></a>DFO trees parallelized</p>
</td>
<td class="cellalignment1587" headers="r63c1-t3 r1c2-t3">
<p>32</p>
</td>
<td class="cellalignment1587" headers="r63c1-t3 r1c3-t3">
<p>Number of times a serial execution plan was converted to a parallel plan</p>
</td>
<td class="cellalignment1587" headers="r63c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r64c1-t3" headers="r1c1-t3">
<p><a id="i26352"></a><a id="sthref4390"></a>dirty buffers inspected</p>
</td>
<td class="cellalignment1587" headers="r64c1-t3 r1c2-t3">
<p>8</p>
</td>
<td class="cellalignment1587" headers="r64c1-t3 r1c3-t3">
<p>Number of dirty buffers found by the user process while it is looking for a buffer to reuse</p>
</td>
<td class="cellalignment1587" headers="r64c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r65c1-t3" headers="r1c1-t3">
<p><a id="sthref4391"></a>DML statements parallelized</p>
</td>
<td class="cellalignment1587" headers="r65c1-t3 r1c2-t3">
<p>32</p>
</td>
<td class="cellalignment1587" headers="r65c1-t3 r1c3-t3">
<p>Number of DML statements that were executed in parallel</p>
</td>
<td class="cellalignment1587" headers="r65c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r66c1-t3" headers="r1c1-t3">
<p><a id="sthref4392"></a>enqueue conversions</p>
</td>
<td class="cellalignment1587" headers="r66c1-t3 r1c2-t3">
<p>4</p>
</td>
<td class="cellalignment1587" headers="r66c1-t3 r1c3-t3">
<p>Total number of conversions of the state of table or row lock</p>
</td>
<td class="cellalignment1587" headers="r66c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r67c1-t3" headers="r1c1-t3">
<p><a id="sthref4393"></a>enqueue deadlocks</p>
</td>
<td class="cellalignment1587" headers="r67c1-t3 r1c2-t3">
<p>4</p>
</td>
<td class="cellalignment1587" headers="r67c1-t3 r1c3-t3">
<p>Total number of deadlocks between table or row locks in different sessions</p>
</td>
<td class="cellalignment1587" headers="r67c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r68c1-t3" headers="r1c1-t3">
<p><a id="sthref4394"></a>enqueue releases</p>
</td>
<td class="cellalignment1587" headers="r68c1-t3 r1c2-t3">
<p>4</p>
</td>
<td class="cellalignment1587" headers="r68c1-t3 r1c3-t3">
<p>Total number of table or row locks released</p>
</td>
<td class="cellalignment1587" headers="r68c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r69c1-t3" headers="r1c1-t3">
<p><a id="i27736"></a><a id="sthref4395"></a>enqueue requests</p>
</td>
<td class="cellalignment1587" headers="r69c1-t3 r1c2-t3">
<p>4</p>
</td>
<td class="cellalignment1587" headers="r69c1-t3 r1c3-t3">
<p>Total number of table or row locks acquired</p>
</td>
<td class="cellalignment1587" headers="r69c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r70c1-t3" headers="r1c1-t3">
<p><a id="sthref4396"></a>enqueue timeouts</p>
</td>
<td class="cellalignment1587" headers="r70c1-t3 r1c2-t3">
<p>4</p>
</td>
<td class="cellalignment1587" headers="r70c1-t3 r1c3-t3">
<p>Total number of table and row locks (acquired and converted) that timed out before they could complete</p>
</td>
<td class="cellalignment1587" headers="r70c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r71c1-t3" headers="r1c1-t3">
<p><a id="sthref4397"></a>enqueue waits</p>
</td>
<td class="cellalignment1587" headers="r71c1-t3 r1c2-t3">
<p>4</p>
</td>
<td class="cellalignment1587" headers="r71c1-t3 r1c3-t3">
<p>Total number of waits that occurred during an enqueue convert or get because the enqueue get was deferred</p>
</td>
<td class="cellalignment1587" headers="r71c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r72c1-t3" headers="r1c1-t3">
<p><a id="sthref4398"></a>exchange deadlocks</p>
</td>
<td class="cellalignment1587" headers="r72c1-t3 r1c2-t3">
<p>8</p>
</td>
<td class="cellalignment1587" headers="r72c1-t3 r1c3-t3">
<p>Number of times that a process detected a potential deadlock when exchanging two buffers and raised an internal, restartable error. Index scans are the only operations that perform exchanges.</p>
</td>
<td class="cellalignment1587" headers="r72c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r73c1-t3" headers="r1c1-t3">
<p><a id="sthref4399"></a>execute count</p>
</td>
<td class="cellalignment1587" headers="r73c1-t3 r1c2-t3">
<p>64</p>
</td>
<td class="cellalignment1587" headers="r73c1-t3 r1c3-t3">
<p>Total number of calls (user and recursive) that executed SQL statements</p>
</td>
<td class="cellalignment1587" headers="r73c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r74c1-t3" headers="r1c1-t3">
<p><a id="sthref4400"></a>flash cache eviction: aged out</p>
</td>
<td class="cellalignment1587" headers="r74c1-t3 r1c2-t3">
<p>8</p>
</td>
<td class="cellalignment1587" headers="r74c1-t3 r1c3-t3">
<p>Flash cache buffer is aged out of the flash cache</p>
</td>
<td class="cellalignment1587" headers="r74c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r75c1-t3" headers="r1c1-t3">
<p><a id="sthref4401"></a>flash cache eviction: buffer pinned</p>
</td>
<td class="cellalignment1587" headers="r75c1-t3 r1c2-t3">
<p>8</p>
</td>
<td class="cellalignment1587" headers="r75c1-t3 r1c3-t3">
<p>Flash cache buffer is invalidated due to object or range reuse, and so on. The flash cache buffer was in use at the time of eviction.</p>
</td>
<td class="cellalignment1587" headers="r75c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r76c1-t3" headers="r1c1-t3">
<p><a id="sthref4402"></a>flash cache eviction: invalidated</p>
</td>
<td class="cellalignment1587" headers="r76c1-t3 r1c2-t3">
<p>8</p>
</td>
<td class="cellalignment1587" headers="r76c1-t3 r1c3-t3">
<p>Flash cache buffer is invalidated due to object or range reuse, and so on. The flash cache buffer was not in use at the time of eviction.</p>
</td>
<td class="cellalignment1587" headers="r76c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r77c1-t3" headers="r1c1-t3">
<p><a id="sthref4403"></a>flash cache insert skip: corrupt</p>
</td>
<td class="cellalignment1587" headers="r77c1-t3 r1c2-t3">
<p>8</p>
</td>
<td class="cellalignment1587" headers="r77c1-t3 r1c3-t3">
<p>In-memory buffer was skipped for insertion into flash cache because the buffer was corrupted</p>
</td>
<td class="cellalignment1587" headers="r77c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r78c1-t3" headers="r1c1-t3">
<p><a id="sthref4404"></a>flash cache insert skip: DBWR overloaded</p>
</td>
<td class="cellalignment1587" headers="r78c1-t3 r1c2-t3">
<p>8</p>
</td>
<td class="cellalignment1587" headers="r78c1-t3 r1c3-t3">
<p>In-memory buffer was skipped for insertion into flash cache because DBWR was busy writing other buffers</p>
</td>
<td class="cellalignment1587" headers="r78c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r79c1-t3" headers="r1c1-t3">
<p><a id="sthref4405"></a>flash cache insert skip: exists</p>
</td>
<td class="cellalignment1587" headers="r79c1-t3 r1c2-t3">
<p>8</p>
</td>
<td class="cellalignment1587" headers="r79c1-t3 r1c3-t3">
<p>In-memory buffer was skipped for insertion into flash cache because it was already in the flash cache</p>
</td>
<td class="cellalignment1587" headers="r79c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r80c1-t3" headers="r1c1-t3">
<p><a id="sthref4406"></a>flash cache insert skip: modification</p>
</td>
<td class="cellalignment1587" headers="r80c1-t3 r1c2-t3">
<p>8</p>
</td>
<td class="cellalignment1587" headers="r80c1-t3 r1c3-t3">
<p>In-memory buffer was skipped for insertion into flash cache because it was being modified</p>
</td>
<td class="cellalignment1587" headers="r80c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r81c1-t3" headers="r1c1-t3">
<p><a id="sthref4407"></a>flash cache insert skip: not current</p>
</td>
<td class="cellalignment1587" headers="r81c1-t3 r1c2-t3">
<p>8</p>
</td>
<td class="cellalignment1587" headers="r81c1-t3 r1c3-t3">
<p>In-memory buffer was skipped for insertion into flash cache because it was not current</p>
</td>
<td class="cellalignment1587" headers="r81c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r82c1-t3" headers="r1c1-t3">
<p><a id="sthref4408"></a>flash cache insert skip: not useful</p>
</td>
<td class="cellalignment1587" headers="r82c1-t3 r1c2-t3">
<p>8</p>
</td>
<td class="cellalignment1587" headers="r82c1-t3 r1c3-t3">
<p>In-memory buffer was skipped for insertion into flash cache because the type of buffer was not useful to keep</p>
</td>
<td class="cellalignment1587" headers="r82c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r83c1-t3" headers="r1c1-t3">
<p><a id="sthref4409"></a>flash cache inserts</p>
</td>
<td class="cellalignment1587" headers="r83c1-t3 r1c2-t3">
<p>8</p>
</td>
<td class="cellalignment1587" headers="r83c1-t3 r1c3-t3">
<p>Total number of in-memory buffers inserted into flash cache</p>
</td>
<td class="cellalignment1587" headers="r83c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r84c1-t3" headers="r1c1-t3">
<p><a id="sthref4410"></a>flashback log write bytes</p>
</td>
<td class="cellalignment1587" headers="r84c1-t3 r1c2-t3">
<p>2</p>
</td>
<td class="cellalignment1587" headers="r84c1-t3 r1c3-t3">
<p>Total size in bytes of flashback database data written by RVWR to flashback database logs</p>
</td>
<td class="cellalignment1587" headers="r84c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r85c1-t3" headers="r1c1-t3">
<p><a id="sthref4411"></a>flashback log writes</p>
</td>
<td class="cellalignment1587" headers="r85c1-t3 r1c2-t3">
<p>2</p>
</td>
<td class="cellalignment1587" headers="r85c1-t3 r1c3-t3">
<p>Total number of writes by RVWR to flashback database logs</p>
</td>
<td class="cellalignment1587" headers="r85c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r86c1-t3" headers="r1c1-t3">
<p><a id="i30175"></a><a id="sthref4412"></a>free buffer inspected</p>
</td>
<td class="cellalignment1587" headers="r86c1-t3 r1c2-t3">
<p>8</p>
</td>
<td class="cellalignment1587" headers="r86c1-t3 r1c3-t3">
<p>Number of buffers skipped over from the end of an LRU queue in order to find a reusable buffer. The difference between this statistic and <a href="#i26352">"dirty buffers inspected"</a> is the number of buffers that could not be used because they had a user, a waiter, or were being read or written, or because they were busy or needed to be written after rapid aging out.</p>
</td>
<td class="cellalignment1587" headers="r86c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r87c1-t3" headers="r1c1-t3">
<p><a id="sthref4413"></a>free buffer requested</p>
</td>
<td class="cellalignment1587" headers="r87c1-t3 r1c2-t3">
<p>8</p>
</td>
<td class="cellalignment1587" headers="r87c1-t3 r1c3-t3">
<p>Number of times a reusable buffer or a free buffer was requested to create or load a block</p>
</td>
<td class="cellalignment1587" headers="r87c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r88c1-t3" headers="r1c1-t3">
<p><a id="sthref4414"></a>global cache blocks corrupt</p>
</td>
<td class="cellalignment1587" headers="r88c1-t3 r1c2-t3">
<p>40</p>
</td>
<td class="cellalignment1587" headers="r88c1-t3 r1c3-t3">
<p>Real Application Clusters only: Number of blocks that encountered a corruption or checksum failure during interconnect</p>
</td>
<td class="cellalignment1587" headers="r88c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r89c1-t3" headers="r1c1-t3">
<p><a id="sthref4415"></a>global cache convert time</p>
</td>
<td class="cellalignment1587" headers="r89c1-t3 r1c2-t3">
<p>40</p>
</td>
<td class="cellalignment1587" headers="r89c1-t3 r1c3-t3">
<p>Real Application Clusters only: Total time elapsed during lock converts</p>
</td>
<td class="cellalignment1587" headers="r89c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r90c1-t3" headers="r1c1-t3">
<p><a id="sthref4416"></a>global cache convert timeouts</p>
</td>
<td class="cellalignment1587" headers="r90c1-t3 r1c2-t3">
<p>40</p>
</td>
<td class="cellalignment1587" headers="r90c1-t3 r1c3-t3">
<p>Number of times lock converts in the global cache timed out</p>
</td>
<td class="cellalignment1587" headers="r90c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r91c1-t3" headers="r1c1-t3">
<p><a id="sthref4417"></a>global cache converts</p>
</td>
<td class="cellalignment1587" headers="r91c1-t3 r1c2-t3">
<p>40</p>
</td>
<td class="cellalignment1587" headers="r91c1-t3 r1c3-t3">
<p>Number of lock converts in the global cache</p>
</td>
<td class="cellalignment1587" headers="r91c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r92c1-t3" headers="r1c1-t3">
<p><a id="sthref4418"></a>global cache cr block log flushes</p>
</td>
<td class="cellalignment1587" headers="r92c1-t3 r1c2-t3">
<p>40</p>
</td>
<td class="cellalignment1587" headers="r92c1-t3 r1c3-t3">
<p>Number of log flushes of the consistent-read block</p>
</td>
<td class="cellalignment1587" headers="r92c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r93c1-t3" headers="r1c1-t3">
<p><a id="sthref4419"></a>global cache cr block log flush time</p>
</td>
<td class="cellalignment1587" headers="r93c1-t3 r1c2-t3">
<p>40</p>
</td>
<td class="cellalignment1587" headers="r93c1-t3 r1c3-t3">
<p>Total time spent by the BSP process in log flushes after sending a constructed consistent-read (CR) block. This statistic divided by <a href="#i28175">"global cache cr blocks served"</a> = log flush time per CR block.</p>
</td>
<td class="cellalignment1587" headers="r93c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r94c1-t3" headers="r1c1-t3">
<p><a id="sthref4420"></a>global cache cr block receive time</p>
</td>
<td class="cellalignment1587" headers="r94c1-t3 r1c2-t3">
<p>40</p>
</td>
<td class="cellalignment1587" headers="r94c1-t3 r1c3-t3">
<p>Total amount of time foreground processes waited for a CR block to be sent through the interconnect. This statistic divided by <a href="#i28167">"global cache cr blocks received"</a> = time waited per block.</p>
</td>
<td class="cellalignment1587" headers="r94c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r95c1-t3" headers="r1c1-t3">
<p><a id="sthref4421"></a>global cache cr block send time</p>
</td>
<td class="cellalignment1587" headers="r95c1-t3 r1c2-t3">
<p>40</p>
</td>
<td class="cellalignment1587" headers="r95c1-t3 r1c3-t3">
<p>Total time spent by the BSP process in sending constructed consistent-read (CR) blocks. This statistic divided by <a href="#i28175">"global cache cr blocks served"</a> = send time per CR block.</p>
</td>
<td class="cellalignment1587" headers="r95c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r96c1-t3" headers="r1c1-t3">
<p><a id="sthref4422"></a>global cache cr block serve time</p>
</td>
<td class="cellalignment1587" headers="r96c1-t3 r1c2-t3">
<p>40</p>
</td>
<td class="cellalignment1587" headers="r96c1-t3 r1c3-t3">
<p>Total amount of time the BSP process took to construct consistent-read (CR) blocks. This statistic divided by <a href="#i28175">"global cache cr blocks served"</a> = construction time per CR block.</p>
</td>
<td class="cellalignment1587" headers="r96c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r97c1-t3" headers="r1c1-t3">
<p><a id="i28167"></a><a id="sthref4423"></a>global cache cr blocks received</p>
</td>
<td class="cellalignment1587" headers="r97c1-t3 r1c2-t3">
<p>40</p>
</td>
<td class="cellalignment1587" headers="r97c1-t3 r1c3-t3">
<p>Total number of blocks received</p>
</td>
<td class="cellalignment1587" headers="r97c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r98c1-t3" headers="r1c1-t3">
<p><a id="i28175"></a><a id="sthref4424"></a>global cache cr blocks served</p>
</td>
<td class="cellalignment1587" headers="r98c1-t3 r1c2-t3">
<p>40</p>
</td>
<td class="cellalignment1587" headers="r98c1-t3 r1c3-t3">
<p>Total number of blocks constructed by the BSP process</p>
</td>
<td class="cellalignment1587" headers="r98c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r99c1-t3" headers="r1c1-t3">
<p><a id="sthref4425"></a>global cache cr requests blocked</p>
</td>
<td class="cellalignment1587" headers="r99c1-t3 r1c2-t3">
<p>40</p>
</td>
<td class="cellalignment1587" headers="r99c1-t3 r1c3-t3">
<p>Number of times foreground attempt to request a cr block and failed</p>
</td>
<td class="cellalignment1587" headers="r99c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r100c1-t3" headers="r1c1-t3">
<p><a id="sthref4426"></a>global cache cr timeouts</p>
</td>
<td class="cellalignment1587" headers="r100c1-t3 r1c2-t3">
<p>40</p>
</td>
<td class="cellalignment1587" headers="r100c1-t3 r1c3-t3">
<p>Number of times a foreground process requested a consistent-read (CR) block when the request timed out</p>
</td>
<td class="cellalignment1587" headers="r100c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r101c1-t3" headers="r1c1-t3">
<p><a id="sthref4427"></a>global cache defers</p>
</td>
<td class="cellalignment1587" headers="r101c1-t3 r1c2-t3">
<p>40</p>
</td>
<td class="cellalignment1587" headers="r101c1-t3 r1c3-t3">
<p>Number of times a lock was requested and the holder of the lock deferred the release</p>
</td>
<td class="cellalignment1587" headers="r101c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r102c1-t3" headers="r1c1-t3">
<p><a id="sthref4428"></a>global cache freelist waits</p>
</td>
<td class="cellalignment1587" headers="r102c1-t3 r1c2-t3">
<p>40</p>
</td>
<td class="cellalignment1587" headers="r102c1-t3 r1c3-t3">
<p>System configured with fewer lock elements than buffers. Number of times foreground has to wait for a lock element.</p>
</td>
<td class="cellalignment1587" headers="r102c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r103c1-t3" headers="r1c1-t3">
<p><a id="sthref4429"></a>global cache get time</p>
</td>
<td class="cellalignment1587" headers="r103c1-t3 r1c2-t3">
<p>40</p>
</td>
<td class="cellalignment1587" headers="r103c1-t3 r1c3-t3">
<p>Total time spent waiting. This divided by global cache gets = time waited per request.</p>
</td>
<td class="cellalignment1587" headers="r103c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r104c1-t3" headers="r1c1-t3">
<p><a id="sthref4430"></a>global cache gets</p>
</td>
<td class="cellalignment1587" headers="r104c1-t3 r1c2-t3">
<p>40</p>
</td>
<td class="cellalignment1587" headers="r104c1-t3 r1c3-t3">
<p>Number of locks acquired</p>
</td>
<td class="cellalignment1587" headers="r104c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r105c1-t3" headers="r1c1-t3">
<p><a id="sthref4431"></a>global cache prepare failures</p>
</td>
<td class="cellalignment1587" headers="r105c1-t3 r1c2-t3">
<p>40</p>
</td>
<td class="cellalignment1587" headers="r105c1-t3 r1c3-t3">
<p>Number of times a failure occurred during preparation for interconnect transfer</p>
</td>
<td class="cellalignment1587" headers="r105c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r106c1-t3" headers="r1c1-t3">
<p><a id="sthref4432"></a>global enqueue get time</p>
</td>
<td class="cellalignment1587" headers="r106c1-t3 r1c2-t3">
<p>32</p>
</td>
<td class="cellalignment1587" headers="r106c1-t3 r1c3-t3">
<p>Total elapsed time in 10s of milliseconds of all synchronous and asynchronous global enqueue gets and converts</p>
</td>
<td class="cellalignment1587" headers="r106c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r107c1-t3" headers="r1c1-t3">
<p><a id="sthref4433"></a>global enqueue gets async</p>
</td>
<td class="cellalignment1587" headers="r107c1-t3 r1c2-t3">
<p>32</p>
</td>
<td class="cellalignment1587" headers="r107c1-t3 r1c3-t3">
<p>Total number of asynchronous global enqueue gets and converts</p>
</td>
<td class="cellalignment1587" headers="r107c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r108c1-t3" headers="r1c1-t3">
<p><a id="sthref4434"></a>global enqueue gets sync</p>
</td>
<td class="cellalignment1587" headers="r108c1-t3 r1c2-t3">
<p>32</p>
</td>
<td class="cellalignment1587" headers="r108c1-t3 r1c3-t3">
<p>Total number of synchronous global enqueue gets and converts</p>
</td>
<td class="cellalignment1587" headers="r108c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r109c1-t3" headers="r1c1-t3">
<p><a id="sthref4435"></a>global enqueue releases</p>
</td>
<td class="cellalignment1587" headers="r109c1-t3 r1c2-t3">
<p>32</p>
</td>
<td class="cellalignment1587" headers="r109c1-t3 r1c3-t3">
<p>Total number of synchronous global enqueue releases</p>
</td>
<td class="cellalignment1587" headers="r109c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r110c1-t3" headers="r1c1-t3">
<p><a id="sthref4436"></a>global enqueue CPU used by this session</p>
</td>
<td class="cellalignment1587" headers="r110c1-t3 r1c2-t3">
<p>32</p>
</td>
<td class="cellalignment1587" headers="r110c1-t3 r1c3-t3">
<p>Amount of CPU time (in 10s of milliseconds) used by synchronous and asynchronous global enqueue activity in a session from the time a user call starts until it ends. If a user call completes within 10 milliseconds, the start and end user-call time are the same for purposes of this statistics, and 0 milliseconds are added.</p>
</td>
<td class="cellalignment1587" headers="r110c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r111c1-t3" headers="r1c1-t3">
<p><a id="sthref4437"></a>hot buffers moved to head of LRU</p>
</td>
<td class="cellalignment1587" headers="r111c1-t3 r1c2-t3">
<p>8</p>
</td>
<td class="cellalignment1587" headers="r111c1-t3 r1c3-t3">
<p>When a hot buffer reaches the tail of its replacement list, Oracle moves it back to the head of the list to keep it from being reused. This statistic counts such moves.</p>
</td>
<td class="cellalignment1587" headers="r111c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r112c1-t3" headers="r1c1-t3">
<p><a id="sthref4438"></a>immediate (CR) block cleanout applications</p>
</td>
<td class="cellalignment1587" headers="r112c1-t3 r1c2-t3">
<p>128</p>
</td>
<td class="cellalignment1587" headers="r112c1-t3 r1c3-t3">
<p>Number of times cleanout records are applied immediately during consistent-read requests</p>
</td>
<td class="cellalignment1587" headers="r112c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r113c1-t3" headers="r1c1-t3">
<p><a id="sthref4439"></a>immediate (CURRENT) block cleanout applications</p>
</td>
<td class="cellalignment1587" headers="r113c1-t3 r1c2-t3">
<p>128</p>
</td>
<td class="cellalignment1587" headers="r113c1-t3 r1c3-t3">
<p>Number of times cleanout records are applied immediately during current gets. Compare this statistic with <a href="#i27758">"deferred (CURRENT) block cleanout applications"</a></p>
</td>
<td class="cellalignment1587" headers="r113c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r114c1-t3" headers="r1c1-t3">
<p><a id="sthref4440"></a>index fast full scans (direct read)</p>
</td>
<td class="cellalignment1587" headers="r114c1-t3 r1c2-t3">
<p>64</p>
</td>
<td class="cellalignment1587" headers="r114c1-t3 r1c3-t3">
<p>Number of fast full scans initiated using direct read</p>
</td>
<td class="cellalignment1587" headers="r114c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r115c1-t3" headers="r1c1-t3">
<p><a id="sthref4441"></a>index fast full scans (full)</p>
</td>
<td class="cellalignment1587" headers="r115c1-t3 r1c2-t3">
<p>64</p>
</td>
<td class="cellalignment1587" headers="r115c1-t3 r1c3-t3">
<p>Number of fast full scans initiated for full segments</p>
</td>
<td class="cellalignment1587" headers="r115c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r116c1-t3" headers="r1c1-t3">
<p><a id="sthref4442"></a>index fast full scans (rowid ranges)</p>
</td>
<td class="cellalignment1587" headers="r116c1-t3 r1c2-t3">
<p>64</p>
</td>
<td class="cellalignment1587" headers="r116c1-t3 r1c3-t3">
<p>Number of fast full scans initiated with rowid endpoints specified</p>
</td>
<td class="cellalignment1587" headers="r116c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r117c1-t3" headers="r1c1-t3">
<p><a id="sthref4443"></a>instance recovery database freeze count</p>
</td>
<td class="cellalignment1587" headers="r117c1-t3 r1c2-t3">
<p>32</p>
</td>
<td class="cellalignment1587" headers="r117c1-t3 r1c3-t3">
<p>Number of times the database is frozen during instance recovery</p>
</td>
<td class="cellalignment1587" headers="r117c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r118c1-t3" headers="r1c1-t3">
<p><a id="sthref4444"></a>kcmccs called get current scn</p>
</td>
<td class="cellalignment1587" headers="r118c1-t3 r1c2-t3">
<p>32</p>
</td>
<td class="cellalignment1587" headers="r118c1-t3 r1c3-t3">
<p>Number of times the kernel got the CURRENT SCN when there was a need to casually confirm the SCN</p>
</td>
<td class="cellalignment1587" headers="r118c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r119c1-t3" headers="r1c1-t3">
<p><a id="sthref4445"></a>kcmgss read scn without going to DLM</p>
</td>
<td class="cellalignment1587" headers="r119c1-t3 r1c2-t3">
<p>32</p>
</td>
<td class="cellalignment1587" headers="r119c1-t3 r1c3-t3">
<p>Number of times the kernel got a snapshot SCN without going to the distributed lock manager (DLM)</p>
</td>
<td class="cellalignment1587" headers="r119c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r120c1-t3" headers="r1c1-t3">
<p><a id="sthref4446"></a>kcmgss waited for batching</p>
</td>
<td class="cellalignment1587" headers="r120c1-t3 r1c2-t3">
<p>32</p>
</td>
<td class="cellalignment1587" headers="r120c1-t3 r1c3-t3">
<p>Number of times a database process is blocked waiting for a snapshot SCN</p>
</td>
<td class="cellalignment1587" headers="r120c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r121c1-t3" headers="r1c1-t3">
<p><a id="sthref4447"></a>leaf node splits</p>
</td>
<td class="cellalignment1587" headers="r121c1-t3 r1c2-t3">
<p>128</p>
</td>
<td class="cellalignment1587" headers="r121c1-t3 r1c3-t3">
<p>Number of times an index leaf node was split because of the insertion of an additional value</p>
</td>
<td class="cellalignment1587" headers="r121c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r122c1-t3" headers="r1c1-t3">
<p><a id="sthref4448"></a>lob reads</p>
</td>
<td class="cellalignment1587" headers="r122c1-t3 r1c2-t3">
<p>8</p>
</td>
<td class="cellalignment1587" headers="r122c1-t3 r1c3-t3">
<p>Number of LOB API read operations performed in the session/system. A single LOB API read may correspond to multiple physical/logical disk block reads.</p>
</td>
<td class="cellalignment1587" headers="r122c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r123c1-t3" headers="r1c1-t3">
<p><a id="sthref4449"></a>lob writes</p>
</td>
<td class="cellalignment1587" headers="r123c1-t3 r1c2-t3">
<p>8</p>
</td>
<td class="cellalignment1587" headers="r123c1-t3 r1c3-t3">
<p>Number of LOB API write operations performed in the session/system. A single LOB API write may correspond to multiple physical/logical disk block writes.</p>
</td>
<td class="cellalignment1587" headers="r123c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r124c1-t3" headers="r1c1-t3">
<p><a id="sthref4450"></a>lob writes unaligned</p>
</td>
<td class="cellalignment1587" headers="r124c1-t3 r1c2-t3">
<p>8</p>
</td>
<td class="cellalignment1587" headers="r124c1-t3 r1c3-t3">
<p>Number of LOB API write operations whose start offset or buffer size is not aligned to the internal chunk size of the LOB. Writes aligned to chunk boundaries are the most efficient write operations. The internal chunk size of a LOB is available through the LOB API (for example, DBMS_LOB.GETCHUNKSIZE()).</p>
</td>
<td class="cellalignment1587" headers="r124c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r125c1-t3" headers="r1c1-t3">
<p><a id="sthref4451"></a>logons cumulative</p>
</td>
<td class="cellalignment1587" headers="r125c1-t3 r1c2-t3">
<p>1</p>
</td>
<td class="cellalignment1587" headers="r125c1-t3 r1c3-t3">
<p>Total number of logons since the instance started. Useful only in V$SYSSTAT. It gives an instance overview of all processes that logged on.</p>
</td>
<td class="cellalignment1587" headers="r125c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r126c1-t3" headers="r1c1-t3">
<p><a id="sthref4452"></a>logons current</p>
</td>
<td class="cellalignment1587" headers="r126c1-t3 r1c2-t3">
<p>1</p>
</td>
<td class="cellalignment1587" headers="r126c1-t3 r1c3-t3">
<p>Total number of current logons. Useful only in V$SYSSTAT.</p>
</td>
<td class="cellalignment1587" headers="r126c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r127c1-t3" headers="r1c1-t3">
<p><a id="sthref4453"></a>messages received</p>
</td>
<td class="cellalignment1587" headers="r127c1-t3 r1c2-t3">
<p>128</p>
</td>
<td class="cellalignment1587" headers="r127c1-t3 r1c3-t3">
<p>Number of messages sent and received between background processes</p>
</td>
<td class="cellalignment1587" headers="r127c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r128c1-t3" headers="r1c1-t3">
<p><a id="sthref4454"></a>messages sent</p>
</td>
<td class="cellalignment1587" headers="r128c1-t3 r1c2-t3">
<p>128</p>
</td>
<td class="cellalignment1587" headers="r128c1-t3 r1c3-t3">
<p>Number of messages sent and received between background processes</p>
</td>
<td class="cellalignment1587" headers="r128c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r129c1-t3" headers="r1c1-t3">
<p><a id="sthref4455"></a>native hash arithmetic execute</p>
</td>
<td class="cellalignment1587" headers="r129c1-t3 r1c2-t3">
<p>64</p>
</td>
<td class="cellalignment1587" headers="r129c1-t3 r1c3-t3">
<p>Number of hash operations performed using native arithmetic rather than Oracle NUMBERs</p>
</td>
<td class="cellalignment1587" headers="r129c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r130c1-t3" headers="r1c1-t3">
<p><a id="sthref4456"></a>native hash arithmetic fail</p>
</td>
<td class="cellalignment1587" headers="r130c1-t3 r1c2-t3">
<p>64</p>
</td>
<td class="cellalignment1587" headers="r130c1-t3 r1c3-t3">
<p>Number of has operations performed using native arithmetic that failed, requiring the hash operation to be performed with Oracle NUMBERs</p>
</td>
<td class="cellalignment1587" headers="r130c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r131c1-t3" headers="r1c1-t3">
<p><a id="sthref4457"></a>next scns gotten without going to DLM</p>
</td>
<td class="cellalignment1587" headers="r131c1-t3 r1c2-t3">
<p>32</p>
</td>
<td class="cellalignment1587" headers="r131c1-t3 r1c3-t3">
<p>Number of system change numbers obtained without going to the distributed lock manager or server</p>
</td>
<td class="cellalignment1587" headers="r131c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r132c1-t3" headers="r1c1-t3">
<p><a id="sthref4458"></a>no buffer to keep pinned count</p>
</td>
<td class="cellalignment1587" headers="r132c1-t3 r1c2-t3">
<p>72</p>
</td>
<td class="cellalignment1587" headers="r132c1-t3 r1c3-t3">
<p>Number of times a visit to a buffer attempted, but the buffer was not found where expected. Like <a href="#i27827">"buffer is not pinned count"</a> and <a href="#i27831">"buffer is pinned count"</a>, this statistic is useful only for internal debugging purposes.</p>
</td>
<td class="cellalignment1587" headers="r132c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r133c1-t3" headers="r1c1-t3">
<p><a id="sthref4459"></a>no work - consistent read gets</p>
</td>
<td class="cellalignment1587" headers="r133c1-t3 r1c2-t3">
<p>128</p>
</td>
<td class="cellalignment1587" headers="r133c1-t3 r1c3-t3">
<p>Number consistent gets that require neither block cleanouts nor rollbacks.</p>
<p><span class="bold">See Also:</span> <a href="#i26158">"consistent gets"</a></p>
</td>
<td class="cellalignment1587" headers="r133c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r134c1-t3" headers="r1c1-t3">
<p><a id="sthref4460"></a>opened cursors cumulative</p>
</td>
<td class="cellalignment1587" headers="r134c1-t3 r1c2-t3">
<p>1</p>
</td>
<td class="cellalignment1587" headers="r134c1-t3 r1c3-t3">
<p>In V$SYSSTAT: Total number of cursors opened since the instance started.</p>
<p>In V$SESSTAT: Total number of cursors opened since the start of the session.</p>
</td>
<td class="cellalignment1587" headers="r134c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r135c1-t3" headers="r1c1-t3">
<p><a id="sthref4461"></a>opened cursors current</p>
</td>
<td class="cellalignment1587" headers="r135c1-t3 r1c2-t3">
<p>1</p>
</td>
<td class="cellalignment1587" headers="r135c1-t3 r1c3-t3">
<p>Total number of current open cursors</p>
</td>
<td class="cellalignment1587" headers="r135c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r136c1-t3" headers="r1c1-t3">
<p><a id="sthref4462"></a>opens of replaced files</p>
</td>
<td class="cellalignment1587" headers="r136c1-t3 r1c2-t3">
<p>8</p>
</td>
<td class="cellalignment1587" headers="r136c1-t3 r1c3-t3">
<p>Total number of files that had to be reopened because they were no longer in the process file cache</p>
</td>
<td class="cellalignment1587" headers="r136c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r137c1-t3" headers="r1c1-t3">
<p><a id="sthref4463"></a>opens requiring cache replacement</p>
</td>
<td class="cellalignment1587" headers="r137c1-t3 r1c2-t3">
<p>8</p>
</td>
<td class="cellalignment1587" headers="r137c1-t3 r1c3-t3">
<p>Total number of file opens that caused a current file in the process file cache to be closed</p>
</td>
<td class="cellalignment1587" headers="r137c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r138c1-t3" headers="r1c1-t3">
<p><a id="sthref4464"></a>OS All other sleep time</p>
</td>
<td class="cellalignment1587" headers="r138c1-t3 r1c2-t3">
<p>16</p>
</td>
<td class="cellalignment1587" headers="r138c1-t3 r1c3-t3">
<p>Time spent sleeping for reasons other than misses in the data segment (see <a href="#i28854">"OS Data page fault sleep time"</a>), kernel page faults (see <a href="#i28846">"OS Kernel page fault sleep time"</a>), misses in the text segment (see <a href="#i28850">"OS Text page fault sleep time"</a>), or waiting for an OS locking object (see <a href="#i28871">"OS User lock wait sleep time"</a>). An example of such a reason is expiration of quanta.</p>
</td>
<td class="cellalignment1587" headers="r138c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r139c1-t3" headers="r1c1-t3">
<p><a id="sthref4465"></a>OS Chars read and written</p>
</td>
<td class="cellalignment1587" headers="r139c1-t3 r1c2-t3">
<p>16</p>
</td>
<td class="cellalignment1587" headers="r139c1-t3 r1c3-t3">
<p>Number of bytes read and written</p>
</td>
<td class="cellalignment1587" headers="r139c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r140c1-t3" headers="r1c1-t3">
<p><a id="i28854"></a><a id="sthref4466"></a>OS Data page fault sleep time</p>
</td>
<td class="cellalignment1587" headers="r140c1-t3 r1c2-t3">
<p>16</p>
</td>
<td class="cellalignment1587" headers="r140c1-t3 r1c3-t3">
<p>Time spent sleeping due to misses in the data segment</p>
</td>
<td class="cellalignment1587" headers="r140c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r141c1-t3" headers="r1c1-t3">
<p><a id="sthref4467"></a>OS Input blocks</p>
</td>
<td class="cellalignment1587" headers="r141c1-t3 r1c2-t3">
<p>16</p>
</td>
<td class="cellalignment1587" headers="r141c1-t3 r1c3-t3">
<p>Number of read I/Os</p>
</td>
<td class="cellalignment1587" headers="r141c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r142c1-t3" headers="r1c1-t3">
<p><a id="sthref4468"></a>OS Involuntary context switches</p>
</td>
<td class="cellalignment1587" headers="r142c1-t3 r1c2-t3">
<p>16</p>
</td>
<td class="cellalignment1587" headers="r142c1-t3 r1c3-t3">
<p>Number of context switches that were enforced by the operating system</p>
</td>
<td class="cellalignment1587" headers="r142c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r143c1-t3" headers="r1c1-t3">
<p><a id="i28846"></a><a id="sthref4469"></a>OS Kernel page fault sleep time</p>
</td>
<td class="cellalignment1587" headers="r143c1-t3 r1c2-t3">
<p>16</p>
</td>
<td class="cellalignment1587" headers="r143c1-t3 r1c3-t3">
<p>Time spent sleeping due to OS kernel page faults</p>
</td>
<td class="cellalignment1587" headers="r143c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r144c1-t3" headers="r1c1-t3">
<p><a id="sthref4470"></a>OS Major page faults</p>
</td>
<td class="cellalignment1587" headers="r144c1-t3 r1c2-t3">
<p>16</p>
</td>
<td class="cellalignment1587" headers="r144c1-t3 r1c3-t3">
<p>Number of page faults that resulted in I/O</p>
</td>
<td class="cellalignment1587" headers="r144c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r145c1-t3" headers="r1c1-t3">
<p><a id="sthref4471"></a>OS Messages received</p>
</td>
<td class="cellalignment1587" headers="r145c1-t3 r1c2-t3">
<p>16</p>
</td>
<td class="cellalignment1587" headers="r145c1-t3 r1c3-t3">
<p>Number of messages received</p>
</td>
<td class="cellalignment1587" headers="r145c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r146c1-t3" headers="r1c1-t3">
<p><a id="sthref4472"></a>OS Messages sent</p>
</td>
<td class="cellalignment1587" headers="r146c1-t3 r1c2-t3">
<p>16</p>
</td>
<td class="cellalignment1587" headers="r146c1-t3 r1c3-t3">
<p>Number of messages sent</p>
</td>
<td class="cellalignment1587" headers="r146c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r147c1-t3" headers="r1c1-t3">
<p><a id="sthref4473"></a>OS Minor page faults</p>
</td>
<td class="cellalignment1587" headers="r147c1-t3 r1c2-t3">
<p>16</p>
</td>
<td class="cellalignment1587" headers="r147c1-t3 r1c3-t3">
<p>Number of page faults that did not result in an actual I/O</p>
</td>
<td class="cellalignment1587" headers="r147c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r148c1-t3" headers="r1c1-t3">
<p><a id="sthref4474"></a>OS Other system trap CPU time</p>
</td>
<td class="cellalignment1587" headers="r148c1-t3 r1c2-t3">
<p>16</p>
</td>
<td class="cellalignment1587" headers="r148c1-t3 r1c3-t3">
<p>Total amount of time to process system traps (as distinct from system calls)</p>
</td>
<td class="cellalignment1587" headers="r148c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r149c1-t3" headers="r1c1-t3">
<p><a id="sthref4475"></a>OS Output blocks</p>
</td>
<td class="cellalignment1587" headers="r149c1-t3 r1c2-t3">
<p>16</p>
</td>
<td class="cellalignment1587" headers="r149c1-t3 r1c3-t3">
<p>Number of write I/Os</p>
</td>
<td class="cellalignment1587" headers="r149c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r150c1-t3" headers="r1c1-t3">
<p><a id="sthref4476"></a>OS Process heap size</p>
</td>
<td class="cellalignment1587" headers="r150c1-t3 r1c2-t3">
<p>16</p>
</td>
<td class="cellalignment1587" headers="r150c1-t3 r1c3-t3">
<p>Size of area in memory allocated by the process. Typically this represents memory obtained by way of malloc().</p>
</td>
<td class="cellalignment1587" headers="r150c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r151c1-t3" headers="r1c1-t3">
<p><a id="sthref4477"></a>OS Process stack size</p>
</td>
<td class="cellalignment1587" headers="r151c1-t3 r1c2-t3">
<p>16</p>
</td>
<td class="cellalignment1587" headers="r151c1-t3 r1c3-t3">
<p>Size of the process stack segment</p>
</td>
<td class="cellalignment1587" headers="r151c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r152c1-t3" headers="r1c1-t3">
<p><a id="sthref4478"></a>OS Signals received</p>
</td>
<td class="cellalignment1587" headers="r152c1-t3 r1c2-t3">
<p>16</p>
</td>
<td class="cellalignment1587" headers="r152c1-t3 r1c3-t3">
<p>Number of signals received</p>
</td>
<td class="cellalignment1587" headers="r152c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r153c1-t3" headers="r1c1-t3">
<p><a id="sthref4479"></a>OS Swaps</p>
</td>
<td class="cellalignment1587" headers="r153c1-t3 r1c2-t3">
<p>16</p>
</td>
<td class="cellalignment1587" headers="r153c1-t3 r1c3-t3">
<p>Number of swap pages</p>
</td>
<td class="cellalignment1587" headers="r153c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r154c1-t3" headers="r1c1-t3">
<p><a id="sthref4480"></a>OS System call CPU time</p>
</td>
<td class="cellalignment1587" headers="r154c1-t3 r1c2-t3">
<p>16</p>
</td>
<td class="cellalignment1587" headers="r154c1-t3 r1c3-t3">
<p>Total amount of time spent executing in system mode</p>
</td>
<td class="cellalignment1587" headers="r154c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r155c1-t3" headers="r1c1-t3">
<p><a id="sthref4481"></a>OS System calls</p>
</td>
<td class="cellalignment1587" headers="r155c1-t3 r1c2-t3">
<p>16</p>
</td>
<td class="cellalignment1587" headers="r155c1-t3 r1c3-t3">
<p>Number of system calls</p>
</td>
<td class="cellalignment1587" headers="r155c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r156c1-t3" headers="r1c1-t3">
<p><a id="i28850"></a><a id="sthref4482"></a>OS Text page fault sleep time</p>
</td>
<td class="cellalignment1587" headers="r156c1-t3 r1c2-t3">
<p>16</p>
</td>
<td class="cellalignment1587" headers="r156c1-t3 r1c3-t3">
<p>Time spent sleeping due to misses in the text segment</p>
</td>
<td class="cellalignment1587" headers="r156c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r157c1-t3" headers="r1c1-t3">
<p><a id="sthref4483"></a>OS User level CPU time</p>
</td>
<td class="cellalignment1587" headers="r157c1-t3 r1c2-t3">
<p>16</p>
</td>
<td class="cellalignment1587" headers="r157c1-t3 r1c3-t3">
<p>Total amount of time spent executing in user mode</p>
</td>
<td class="cellalignment1587" headers="r157c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r158c1-t3" headers="r1c1-t3">
<p><a id="i28871"></a><a id="sthref4484"></a>OS User lock wait sleep time</p>
</td>
<td class="cellalignment1587" headers="r158c1-t3 r1c2-t3">
<p>16</p>
</td>
<td class="cellalignment1587" headers="r158c1-t3 r1c3-t3">
<p>Total amount of time sleeping while waiting for an OS locking object</p>
</td>
<td class="cellalignment1587" headers="r158c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r159c1-t3" headers="r1c1-t3">
<p><a id="sthref4485"></a>OS Voluntary context switches</p>
</td>
<td class="cellalignment1587" headers="r159c1-t3 r1c2-t3">
<p>16</p>
</td>
<td class="cellalignment1587" headers="r159c1-t3 r1c3-t3">
<p>Number of voluntary context switches (for example, when a process gives up the CPU by a SLEEP() system call)</p>
</td>
<td class="cellalignment1587" headers="r159c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r160c1-t3" headers="r1c1-t3">
<p><a id="sthref4486"></a>OS Wait-cpu (latency) time</p>
</td>
<td class="cellalignment1587" headers="r160c1-t3 r1c2-t3">
<p>16</p>
</td>
<td class="cellalignment1587" headers="r160c1-t3 r1c3-t3">
<p>Time spent sleeping while waiting for a CPU to become available</p>
</td>
<td class="cellalignment1587" headers="r160c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r161c1-t3" headers="r1c1-t3">
<p><a id="sthref4487"></a>Parallel operations downgraded 1 to 25 pct</p>
</td>
<td class="cellalignment1587" headers="r161c1-t3 r1c2-t3">
<p>32</p>
</td>
<td class="cellalignment1587" headers="r161c1-t3 r1c3-t3">
<p>Number of times parallel execution was requested and the degree of parallelism was reduced because of insufficient parallel execution servers</p>
</td>
<td class="cellalignment1587" headers="r161c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r162c1-t3" headers="r1c1-t3">
<p><a id="sthref4488"></a>Parallel operations downgraded 25 to 50 pct</p>
</td>
<td class="cellalignment1587" headers="r162c1-t3 r1c2-t3">
<p>32</p>
</td>
<td class="cellalignment1587" headers="r162c1-t3 r1c3-t3">
<p>Number of times parallel execution was requested and the degree of parallelism was reduced because of insufficient parallel execution servers</p>
</td>
<td class="cellalignment1587" headers="r162c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r163c1-t3" headers="r1c1-t3">
<p><a id="sthref4489"></a>Parallel operations downgraded 50 to 75 pct</p>
</td>
<td class="cellalignment1587" headers="r163c1-t3 r1c2-t3">
<p>32</p>
</td>
<td class="cellalignment1587" headers="r163c1-t3 r1c3-t3">
<p>Number of times parallel execution was requested and the degree of parallelism was reduced because of insufficient parallel execution servers</p>
</td>
<td class="cellalignment1587" headers="r163c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r164c1-t3" headers="r1c1-t3">
<p><a id="sthref4490"></a>Parallel operations downgraded 75 to 99 pct</p>
</td>
<td class="cellalignment1587" headers="r164c1-t3 r1c2-t3">
<p>32</p>
</td>
<td class="cellalignment1587" headers="r164c1-t3 r1c3-t3">
<p>Number of times parallel execution was requested and the degree of parallelism was reduced because of insufficient parallel execution servers</p>
</td>
<td class="cellalignment1587" headers="r164c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r165c1-t3" headers="r1c1-t3">
<p><a id="sthref4491"></a>Parallel operations downgraded to serial</p>
</td>
<td class="cellalignment1587" headers="r165c1-t3 r1c2-t3">
<p>32</p>
</td>
<td class="cellalignment1587" headers="r165c1-t3 r1c3-t3">
<p>Number of times parallel execution was requested but execution was serial because of insufficient parallel execution servers</p>
</td>
<td class="cellalignment1587" headers="r165c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r166c1-t3" headers="r1c1-t3">
<p><a id="sthref4492"></a>Parallel operations not downgraded</p>
</td>
<td class="cellalignment1587" headers="r166c1-t3 r1c2-t3">
<p>32</p>
</td>
<td class="cellalignment1587" headers="r166c1-t3 r1c3-t3">
<p>Number of times parallel execution was executed at the requested degree of parallelism</p>
</td>
<td class="cellalignment1587" headers="r166c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r167c1-t3" headers="r1c1-t3">
<p><a id="sthref4493"></a>parse count (hard)</p>
</td>
<td class="cellalignment1587" headers="r167c1-t3 r1c2-t3">
<p>64</p>
</td>
<td class="cellalignment1587" headers="r167c1-t3 r1c3-t3">
<p>Total number of parse calls (real parses). A hard parse is a very expensive operation in terms of memory use, because it requires Oracle to allocate a workheap and other memory structures and then build a parse tree.</p>
</td>
<td class="cellalignment1587" headers="r167c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r168c1-t3" headers="r1c1-t3">
<p><a id="sthref4494"></a>parse count (describe)</p>
</td>
<td class="cellalignment1587" headers="r168c1-t3 r1c2-t3">
<p>64</p>
</td>
<td class="cellalignment1587" headers="r168c1-t3 r1c3-t3">
<p>Total number of parse calls on a describe cursor. This operation is a less expensive than a hard parse and more expensive than a soft parse.</p>
</td>
<td class="cellalignment1587" headers="r168c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r169c1-t3" headers="r1c1-t3">
<p><a id="i26932"></a><a id="sthref4495"></a>parse count (total)</p>
</td>
<td class="cellalignment1587" headers="r169c1-t3 r1c2-t3">
<p>64</p>
</td>
<td class="cellalignment1587" headers="r169c1-t3 r1c3-t3">
<p>Total number of parse calls (hard, soft, and describe). A soft parse is a check on an object already in the shared pool, to verify that the permissions on the underlying object have not changed.</p>
</td>
<td class="cellalignment1587" headers="r169c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r170c1-t3" headers="r1c1-t3">
<p><a id="i26940"></a><a id="sthref4496"></a>parse time cpu</p>
</td>
<td class="cellalignment1587" headers="r170c1-t3 r1c2-t3">
<p>64</p>
</td>
<td class="cellalignment1587" headers="r170c1-t3 r1c3-t3">
<p>Total CPU time used for parsing (hard and soft) in 10s of milliseconds</p>
</td>
<td class="cellalignment1587" headers="r170c1-t3 r1c4-t3">
<p>3</p>
</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r171c1-t3" headers="r1c1-t3">
<p><a id="sthref4497"></a>parse time elapsed</p>
</td>
<td class="cellalignment1587" headers="r171c1-t3 r1c2-t3">
<p>64</p>
</td>
<td class="cellalignment1587" headers="r171c1-t3 r1c3-t3">
<p>Total elapsed time for parsing, in 10s of milliseconds. Subtract <a href="#i26940">"parse time cpu"</a> from the this statistic to determine the total waiting time for parse resources.</p>
</td>
<td class="cellalignment1587" headers="r171c1-t3 r1c4-t3">
<p>3</p>
</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r172c1-t3" headers="r1c1-t3">
<p><a id="sthref4498"></a>physical read bytes</p>
</td>
<td class="cellalignment1587" headers="r172c1-t3 r1c2-t3">
<p>8</p>
</td>
<td class="cellalignment1587" headers="r172c1-t3 r1c3-t3">
<p>Total size in bytes of all disk reads by application activity (and not other instance activity) only.</p>
</td>
<td class="cellalignment1587" headers="r172c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r173c1-t3" headers="r1c1-t3">
<p><a id="sthref4499"></a>physical read flash cache hits</p>
</td>
<td class="cellalignment1587" headers="r173c1-t3 r1c2-t3">
<p>8</p>
</td>
<td class="cellalignment1587" headers="r173c1-t3 r1c3-t3">
<p>Total number of reads from flash cache instead of disk</p>
</td>
<td class="cellalignment1587" headers="r173c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r174c1-t3" headers="r1c1-t3">
<p><a id="sthref4500"></a>physical read IO requests</p>
</td>
<td class="cellalignment1587" headers="r174c1-t3 r1c2-t3">
<p>8</p>
</td>
<td class="cellalignment1587" headers="r174c1-t3 r1c3-t3">
<p>Number of read requests for application activity (mainly buffer cache and direct load operation) which read one or more database blocks per request. This is a subset of "physical read total IO requests" statistic.</p>
</td>
<td class="cellalignment1587" headers="r174c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r175c1-t3" headers="r1c1-t3">
<p><a id="sthref4501"></a>physical read requests optimized</p>
</td>
<td class="cellalignment1587" headers="r175c1-t3 r1c2-t3">
<p>8</p>
</td>
<td class="cellalignment1587" headers="r175c1-t3 r1c3-t3">
<p>Number of read requests that read one or more database blocks from the Database Smart Flash Cache or the Exadata Smart Flash Cache.</p>
</td>
<td class="cellalignment1587" headers="r175c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r176c1-t3" headers="r1c1-t3">
<p><a id="sthref4502"></a>physical read total bytes</p>
</td>
<td class="cellalignment1587" headers="r176c1-t3 r1c2-t3">
<p>8</p>
</td>
<td class="cellalignment1587" headers="r176c1-t3 r1c3-t3">
<p>Total size in bytes of disk reads by all database instance activity including application reads, backup and recovery, and other utilities. The difference between this value and "physical read bytes" gives the total read size in bytes by non-application workload.</p>
</td>
<td class="cellalignment1587" headers="r176c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r177c1-t3" headers="r1c1-t3">
<p><a id="sthref4503"></a>physical read total IO requests</p>
</td>
<td class="cellalignment1587" headers="r177c1-t3 r1c2-t3">
<p>8</p>
</td>
<td class="cellalignment1587" headers="r177c1-t3 r1c3-t3">
<p>Number of read requests which read one or more database blocks for all instance activity including application, backup and recovery, and other utilities. The difference between this value and "physical read total multi block requests" gives the total number of single block read requests.</p>
</td>
<td class="cellalignment1587" headers="r177c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r178c1-t3" headers="r1c1-t3">
<p><a id="sthref4504"></a>physical read total multi block requests</p>
</td>
<td class="cellalignment1587" headers="r178c1-t3 r1c2-t3">
<p>8</p>
</td>
<td class="cellalignment1587" headers="r178c1-t3 r1c3-t3">
<p>Total number of Oracle instance read requests which read in two or more database blocks per request for all instance activity including application, backup and recovery, and other utilities.</p>
</td>
<td class="cellalignment1587" headers="r178c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r179c1-t3" headers="r1c1-t3">
<p><a id="sthref4505"></a>physical reads</p>
</td>
<td class="cellalignment1587" headers="r179c1-t3 r1c2-t3">
<p>8</p>
</td>
<td class="cellalignment1587" headers="r179c1-t3 r1c3-t3">
<p>Total number of data blocks read from disk. This value can be greater than the value of "physical reads direct" plus "physical reads cache" as reads into process private buffers also included in this statistic.</p>
</td>
<td class="cellalignment1587" headers="r179c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r180c1-t3" headers="r1c1-t3">
<p><a id="sthref4506"></a>physical reads cache</p>
</td>
<td class="cellalignment1587" headers="r180c1-t3 r1c2-t3">
<p>8</p>
</td>
<td class="cellalignment1587" headers="r180c1-t3 r1c3-t3">
<p>Total number of data blocks read from disk into the buffer cache. This is a subset of "physical reads" statistic.</p>
</td>
<td class="cellalignment1587" headers="r180c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r181c1-t3" headers="r1c1-t3">
<p><a id="sthref4507"></a>physical reads cache prefetch</p>
</td>
<td class="cellalignment1587" headers="r181c1-t3 r1c2-t3">
<p>8</p>
</td>
<td class="cellalignment1587" headers="r181c1-t3 r1c3-t3">
<p>Number of contiguous and noncontiguous blocks that were prefetched.</p>
</td>
<td class="cellalignment1587" headers="r181c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r182c1-t3" headers="r1c1-t3">
<p><a id="i26968"></a><a id="sthref4508"></a>physical reads direct</p>
</td>
<td class="cellalignment1587" headers="r182c1-t3 r1c2-t3">
<p>8</p>
</td>
<td class="cellalignment1587" headers="r182c1-t3 r1c3-t3">
<p>Number of reads directly from disk, bypassing the buffer cache. For example, in high bandwidth, data-intensive operations such as parallel query, reads of disk blocks bypass the buffer cache to maximize transfer rates and to prevent the premature aging of shared data blocks resident in the buffer cache.</p>
</td>
<td class="cellalignment1587" headers="r182c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r183c1-t3" headers="r1c1-t3">
<p><a id="sthref4509"></a>physical reads direct (lob)</p>
</td>
<td class="cellalignment1587" headers="r183c1-t3 r1c2-t3">
<p>8</p>
</td>
<td class="cellalignment1587" headers="r183c1-t3 r1c3-t3">
<p>Number of buffers that were read directly for LOBs</p>
</td>
<td class="cellalignment1587" headers="r183c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r184c1-t3" headers="r1c1-t3">
<p><a id="sthref4510"></a>physical reads direct temporary tablespace</p>
</td>
<td class="cellalignment1587" headers="r184c1-t3 r1c2-t3">
<p>8</p>
</td>
<td class="cellalignment1587" headers="r184c1-t3 r1c3-t3">
<p>Number of buffers that were read directly from temporary tablespaces</p>
</td>
<td class="cellalignment1587" headers="r184c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r185c1-t3" headers="r1c1-t3">
<p><a id="sthref4511"></a>physical reads for flashback new</p>
</td>
<td class="cellalignment1587" headers="r185c1-t3 r1c2-t3">
<p>8</p>
</td>
<td class="cellalignment1587" headers="r185c1-t3 r1c3-t3">
<p>Number of blocks read for newing (that is, preparing a data block for a completely new change) blocks while flashback database is enabled</p>
</td>
<td class="cellalignment1587" headers="r185c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r186c1-t3" headers="r1c1-t3">
<p><a id="sthref4512"></a>physical reads prefetch warmup</p>
</td>
<td class="cellalignment1587" headers="r186c1-t3 r1c2-t3">
<p>8</p>
</td>
<td class="cellalignment1587" headers="r186c1-t3 r1c3-t3">
<p>Number of data blocks that were read from the disk during the automatic prewarming of the buffer cache.</p>
</td>
<td class="cellalignment1587" headers="r186c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r187c1-t3" headers="r1c1-t3">
<p><a id="sthref4513"></a>physical write bytes</p>
</td>
<td class="cellalignment1587" headers="r187c1-t3 r1c2-t3">
<p>8</p>
</td>
<td class="cellalignment1587" headers="r187c1-t3 r1c3-t3">
<p>Total size in bytes of all disk writes from the database application activity (and not other kinds of instance activity).</p>
</td>
<td class="cellalignment1587" headers="r187c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r188c1-t3" headers="r1c1-t3">
<p><a id="sthref4514"></a>physical write IO requests</p>
</td>
<td class="cellalignment1587" headers="r188c1-t3 r1c2-t3">
<p>8</p>
</td>
<td class="cellalignment1587" headers="r188c1-t3 r1c3-t3">
<p>Number of write requests for application activity (mainly buffer cache and direct load operation) which wrote one or more database blocks per request.</p>
</td>
<td class="cellalignment1587" headers="r188c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r189c1-t3" headers="r1c1-t3">
<p><a id="sthref4515"></a>physical write total bytes</p>
</td>
<td class="cellalignment1587" headers="r189c1-t3 r1c2-t3">
<p>8</p>
</td>
<td class="cellalignment1587" headers="r189c1-t3 r1c3-t3">
<p>Total size in bytes of all disk writes for the database instance including application activity, backup and recovery, and other utilities. The difference between this value and "physical write bytes" gives the total write size in bytes by non-application workload.</p>
</td>
<td class="cellalignment1587" headers="r189c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r190c1-t3" headers="r1c1-t3">
<p><a id="sthref4516"></a>physical write total IO requests</p>
</td>
<td class="cellalignment1587" headers="r190c1-t3 r1c2-t3">
<p>8</p>
</td>
<td class="cellalignment1587" headers="r190c1-t3 r1c3-t3">
<p>Number of write requests which wrote one or more database blocks from all instance activity including application activity, backup and recovery, and other utilities. The difference between this stat and "physical write total multi block requests" gives the number of single block write requests.</p>
</td>
<td class="cellalignment1587" headers="r190c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r191c1-t3" headers="r1c1-t3">
<p><a id="sthref4517"></a>physical write total multi block requests</p>
</td>
<td class="cellalignment1587" headers="r191c1-t3 r1c2-t3">
<p>8</p>
</td>
<td class="cellalignment1587" headers="r191c1-t3 r1c3-t3">
<p>Total number of Oracle instance write requests which wrote two or more blocks per request to the disk for all instance activity including application activity, recovery and backup, and other utilities.</p>
</td>
<td class="cellalignment1587" headers="r191c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r192c1-t3" headers="r1c1-t3">
<p><a id="i26976"></a><a id="sthref4518"></a>physical writes</p>
</td>
<td class="cellalignment1587" headers="r192c1-t3 r1c2-t3">
<p>8</p>
</td>
<td class="cellalignment1587" headers="r192c1-t3 r1c3-t3">
<p>Total number of data blocks written to disk. This statistics value equals the sum of "physical writes direct" and "physical writes from cache" values.</p>
</td>
<td class="cellalignment1587" headers="r192c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r193c1-t3" headers="r1c1-t3">
<p><a id="i26987"></a><a id="sthref4519"></a>physical writes direct</p>
</td>
<td class="cellalignment1587" headers="r193c1-t3 r1c2-t3">
<p>8</p>
</td>
<td class="cellalignment1587" headers="r193c1-t3 r1c3-t3">
<p>Number of writes directly to disk, bypassing the buffer cache (as in a direct load operation)</p>
</td>
<td class="cellalignment1587" headers="r193c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r194c1-t3" headers="r1c1-t3">
<p><a id="sthref4520"></a>physical writes direct (lob)</p>
</td>
<td class="cellalignment1587" headers="r194c1-t3 r1c2-t3">
<p>8</p>
</td>
<td class="cellalignment1587" headers="r194c1-t3 r1c3-t3">
<p>Number of buffers that were directly written for LOBs</p>
</td>
<td class="cellalignment1587" headers="r194c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r195c1-t3" headers="r1c1-t3">
<p><a id="sthref4521"></a>physical writes direct temporary tablespace</p>
</td>
<td class="cellalignment1587" headers="r195c1-t3 r1c2-t3">
<p>8</p>
</td>
<td class="cellalignment1587" headers="r195c1-t3 r1c3-t3">
<p>Number of buffers that were directly written for temporary tablespaces</p>
</td>
<td class="cellalignment1587" headers="r195c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r196c1-t3" headers="r1c1-t3">
<p><a id="sthref4522"></a>physical writes from cache</p>
</td>
<td class="cellalignment1587" headers="r196c1-t3 r1c2-t3">
<p>8</p>
</td>
<td class="cellalignment1587" headers="r196c1-t3 r1c3-t3">
<p>Total number of data blocks written to disk from the buffer cache. This is a subset of "physical writes" statistic.</p>
</td>
<td class="cellalignment1587" headers="r196c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r197c1-t3" headers="r1c1-t3">
<p><a id="sthref4523"></a>physical writes non checkpoint</p>
</td>
<td class="cellalignment1587" headers="r197c1-t3 r1c2-t3">
<p>8</p>
</td>
<td class="cellalignment1587" headers="r197c1-t3 r1c3-t3">
<p>Number of times a buffer is written for reasons other than advancement of the checkpoint. Used as a metric for determining the I/O overhead imposed by setting the <code dir="ltr">FAST_START_IO_TARGET</code> parameter to limit recovery I/Os. (Note that <code dir="ltr">FAST_START_IO_TARGET</code> is a deprecated parameter.) Essentially this statistic measures the number of writes that would have occurred had there been no checkpointing. Subtracting this value from <a href="#i26976">"physical writes"</a> gives the extra I/O for checkpointing.</p>
</td>
<td class="cellalignment1587" headers="r197c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r198c1-t3" headers="r1c1-t3">
<p><a id="sthref4524"></a>pinned buffers inspected</p>
</td>
<td class="cellalignment1587" headers="r198c1-t3 r1c2-t3">
<p>8</p>
</td>
<td class="cellalignment1587" headers="r198c1-t3 r1c3-t3">
<p>Number of times a user process, when scanning the tail of the replacement list looking for a buffer to reuse, encountered a cold buffer that was pinned or had a waiter that was about to pin it. This occurrence is uncommon, because a cold buffer should not be pinned very often.</p>
</td>
<td class="cellalignment1587" headers="r198c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r199c1-t3" headers="r1c1-t3">
<p><a id="sthref4525"></a>prefetched blocks aged out before use</p>
</td>
<td class="cellalignment1587" headers="r199c1-t3 r1c2-t3">
<p>8</p>
</td>
<td class="cellalignment1587" headers="r199c1-t3 r1c3-t3">
<p>Number of contiguous and noncontiguous blocks that were prefetched but aged out before use</p>
</td>
<td class="cellalignment1587" headers="r199c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r200c1-t3" headers="r1c1-t3">
<p><a id="sthref4526"></a>process last non-idle time</p>
</td>
<td class="cellalignment1587" headers="r200c1-t3 r1c2-t3">
<p>128</p>
</td>
<td class="cellalignment1587" headers="r200c1-t3 r1c3-t3">
<p>The last time this process executed</p>
</td>
<td class="cellalignment1587" headers="r200c1-t3 r1c4-t3">
<p>3</p>
</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r201c1-t3" headers="r1c1-t3">
<p><a id="sthref4527"></a>PX local messages recv'd</p>
</td>
<td class="cellalignment1587" headers="r201c1-t3 r1c2-t3">
<p>32</p>
</td>
<td class="cellalignment1587" headers="r201c1-t3 r1c3-t3">
<p>Number of local messages received for parallel execution within the instance local to the current session</p>
</td>
<td class="cellalignment1587" headers="r201c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r202c1-t3" headers="r1c1-t3">
<p><a id="sthref4528"></a>PX local messages sent</p>
</td>
<td class="cellalignment1587" headers="r202c1-t3 r1c2-t3">
<p>32</p>
</td>
<td class="cellalignment1587" headers="r202c1-t3 r1c3-t3">
<p>Number of local messages sent for parallel execution within the instance local to the current session</p>
</td>
<td class="cellalignment1587" headers="r202c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r203c1-t3" headers="r1c1-t3">
<p><a id="sthref4529"></a>PX remote messages recv'd</p>
</td>
<td class="cellalignment1587" headers="r203c1-t3 r1c2-t3">
<p>32</p>
</td>
<td class="cellalignment1587" headers="r203c1-t3 r1c3-t3">
<p>Number of remote messages received for parallel execution within the instance local to the current session</p>
</td>
<td class="cellalignment1587" headers="r203c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r204c1-t3" headers="r1c1-t3">
<p><a id="sthref4530"></a>PX remote messages sent</p>
</td>
<td class="cellalignment1587" headers="r204c1-t3 r1c2-t3">
<p>32</p>
</td>
<td class="cellalignment1587" headers="r204c1-t3 r1c3-t3">
<p>Number of remote messages sent for parallel execution within the instance local to the current session</p>
</td>
<td class="cellalignment1587" headers="r204c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r205c1-t3" headers="r1c1-t3">
<p><a id="sthref4531"></a>queries parallelized</p>
</td>
<td class="cellalignment1587" headers="r205c1-t3 r1c2-t3">
<p>32</p>
</td>
<td class="cellalignment1587" headers="r205c1-t3 r1c3-t3">
<p>Number of SELECT statements executed in parallel</p>
</td>
<td class="cellalignment1587" headers="r205c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r206c1-t3" headers="r1c1-t3">
<p><a id="sthref4532"></a>recovery array read time</p>
</td>
<td class="cellalignment1587" headers="r206c1-t3 r1c2-t3">
<p>8</p>
</td>
<td class="cellalignment1587" headers="r206c1-t3 r1c3-t3">
<p>Elapsed time of I/O during recovery</p>
</td>
<td class="cellalignment1587" headers="r206c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r207c1-t3" headers="r1c1-t3">
<p><a id="sthref4533"></a>recovery array reads</p>
</td>
<td class="cellalignment1587" headers="r207c1-t3 r1c2-t3">
<p>8</p>
</td>
<td class="cellalignment1587" headers="r207c1-t3 r1c3-t3">
<p>Number of reads performed during recovery</p>
</td>
<td class="cellalignment1587" headers="r207c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r208c1-t3" headers="r1c1-t3">
<p><a id="sthref4534"></a>recovery blocks read</p>
</td>
<td class="cellalignment1587" headers="r208c1-t3 r1c2-t3">
<p>8</p>
</td>
<td class="cellalignment1587" headers="r208c1-t3 r1c3-t3">
<p>Number of blocks read during recovery</p>
</td>
<td class="cellalignment1587" headers="r208c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r209c1-t3" headers="r1c1-t3">
<p><a id="sthref4535"></a>recovery blocks read for lost write detection</p>
</td>
<td class="cellalignment1587" headers="r209c1-t3 r1c2-t3">
<p>8</p>
</td>
<td class="cellalignment1587" headers="r209c1-t3 r1c3-t3">
<p>Number of blocks read for lost write checks during recovery.</p>
</td>
<td class="cellalignment1587" headers="r209c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r210c1-t3" headers="r1c1-t3">
<p><a id="sthref4536"></a>recovery blocks skipped lost write checks</p>
</td>
<td class="cellalignment1587" headers="r210c1-t3 r1c2-t3">
<p>8</p>
</td>
<td class="cellalignment1587" headers="r210c1-t3 r1c3-t3">
<p>Number of Block Read Records that skipped the lost write check during recovery.</p>
</td>
<td class="cellalignment1587" headers="r210c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r211c1-t3" headers="r1c1-t3">
<p><a id="sthref4537"></a>recursive calls</p>
</td>
<td class="cellalignment1587" headers="r211c1-t3 r1c2-t3">
<p>1</p>
</td>
<td class="cellalignment1587" headers="r211c1-t3 r1c3-t3">
<p>Number of recursive calls generated at both the user and system level. Oracle maintains tables used for internal processing. When Oracle needs to make a change to these tables, it internally generates an internal SQL statement, which in turn generates a recursive call.</p>
</td>
<td class="cellalignment1587" headers="r211c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r212c1-t3" headers="r1c1-t3">
<p><a id="sthref4538"></a>recursive cpu usage</p>
</td>
<td class="cellalignment1587" headers="r212c1-t3 r1c2-t3">
<p>1</p>
</td>
<td class="cellalignment1587" headers="r212c1-t3 r1c3-t3">
<p>Total CPU time used by non-user calls (recursive calls). Subtract this value from <a href="#i26169">"CPU used by this session"</a> to determine how much CPU time was used by the user calls.</p>
</td>
<td class="cellalignment1587" headers="r212c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r213c1-t3" headers="r1c1-t3">
<p><a id="sthref4539"></a>redo blocks checksummed by FG (exclusive)</p>
</td>
<td class="cellalignment1587" headers="r213c1-t3 r1c2-t3">
<p>2</p>
</td>
<td class="cellalignment1587" headers="r213c1-t3 r1c3-t3">
<p>Number of exclusive redo blocks that were checksummed by the generating foreground processes. An exclusive redo block is the one whose entire redo content belongs to a single redo entry.</p>
</td>
<td class="cellalignment1587" headers="r213c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r214c1-t3" headers="r1c1-t3">
<p><a id="sthref4540"></a>redo blocks checksummed by LGWR</p>
</td>
<td class="cellalignment1587" headers="r214c1-t3 r1c2-t3">
<p>2</p>
</td>
<td class="cellalignment1587" headers="r214c1-t3 r1c3-t3">
<p>Number of redo blocks that were checksummed by the LGWR.</p>
</td>
<td class="cellalignment1587" headers="r214c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r215c1-t3" headers="r1c1-t3">
<p><a id="sthref4541"></a>redo blocks written</p>
</td>
<td class="cellalignment1587" headers="r215c1-t3 r1c2-t3">
<p>2</p>
</td>
<td class="cellalignment1587" headers="r215c1-t3 r1c3-t3">
<p>Total number of redo blocks written. This statistic divided by <a href="#i27232">"redo writes"</a> equals number of blocks per write.</p>
</td>
<td class="cellalignment1587" headers="r215c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r216c1-t3" headers="r1c1-t3">
<p><a id="sthref4542"></a>redo buffer allocation retries</p>
</td>
<td class="cellalignment1587" headers="r216c1-t3 r1c2-t3">
<p>2</p>
</td>
<td class="cellalignment1587" headers="r216c1-t3 r1c3-t3">
<p>Total number of retries necessary to allocate space in the redo buffer. Retries are needed either because the redo writer has fallen behind or because an event such as a log switch is occurring.</p>
</td>
<td class="cellalignment1587" headers="r216c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r217c1-t3" headers="r1c1-t3">
<p><a id="sthref4543"></a>redo entries</p>
</td>
<td class="cellalignment1587" headers="r217c1-t3 r1c2-t3">
<p>2</p>
</td>
<td class="cellalignment1587" headers="r217c1-t3 r1c3-t3">
<p>Number of times a redo entry is copied into the redo log buffer</p>
</td>
<td class="cellalignment1587" headers="r217c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r218c1-t3" headers="r1c1-t3">
<p><a id="sthref4544"></a>redo entries for lost write detection</p>
</td>
<td class="cellalignment1587" headers="r218c1-t3 r1c2-t3">
<p>2</p>
</td>
<td class="cellalignment1587" headers="r218c1-t3 r1c3-t3">
<p>Number of times a Block Read Record is copied into the log buffer.</p>
</td>
<td class="cellalignment1587" headers="r218c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r219c1-t3" headers="r1c1-t3">
<p><a id="i27145"></a><a id="sthref4545"></a>redo log space requests</p>
</td>
<td class="cellalignment1587" headers="r219c1-t3 r1c2-t3">
<p>2</p>
</td>
<td class="cellalignment1587" headers="r219c1-t3 r1c3-t3">
<p>Number of times the active log file is full and Oracle must wait for disk space to be allocated for the redo log entries. Such space is created by performing a log switch.</p>
<p>Log files that are small in relation to the size of the SGA or the commit rate of the work load can cause problems. When the log switch occurs, Oracle must ensure that all committed dirty buffers are written to disk before switching to a new log file. If you have a large SGA full of dirty buffers and small redo log files, a log switch must wait for DBWR to write dirty buffers to disk before continuing.</p>
<p>Also examine the <span class="bold">log file space</span> and <span class="bold">log file space switch</span> wait events in <code dir="ltr">V$SESSION_WAIT</code></p>
</td>
<td class="cellalignment1587" headers="r219c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r220c1-t3" headers="r1c1-t3">
<p><a id="sthref4546"></a>redo log space wait time</p>
</td>
<td class="cellalignment1587" headers="r220c1-t3 r1c2-t3">
<p>2</p>
</td>
<td class="cellalignment1587" headers="r220c1-t3 r1c3-t3">
<p>Total elapsed waiting time for <a href="#i27145">"redo log space requests"</a> in 10s of milliseconds</p>
</td>
<td class="cellalignment1587" headers="r220c1-t3 r1c4-t3">
<p>3</p>
</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r221c1-t3" headers="r1c1-t3">
<p><a id="sthref4547"></a>redo ordering marks</p>
</td>
<td class="cellalignment1587" headers="r221c1-t3 r1c2-t3">
<p>2</p>
</td>
<td class="cellalignment1587" headers="r221c1-t3 r1c3-t3">
<p>Number of times that a system change number was allocated to force a redo record to have a higher SCN than a record generated in another thread using the same block</p>
</td>
<td class="cellalignment1587" headers="r221c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r222c1-t3" headers="r1c1-t3">
<p><a id="sthref4548"></a>redo size</p>
</td>
<td class="cellalignment1587" headers="r222c1-t3 r1c2-t3">
<p>2</p>
</td>
<td class="cellalignment1587" headers="r222c1-t3 r1c3-t3">
<p>Total amount of redo generated in bytes</p>
</td>
<td class="cellalignment1587" headers="r222c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r223c1-t3" headers="r1c1-t3">
<p><a id="sthref4549"></a>redo size for lost write detection</p>
</td>
<td class="cellalignment1587" headers="r223c1-t3 r1c2-t3">
<p>2</p>
</td>
<td class="cellalignment1587" headers="r223c1-t3 r1c3-t3">
<p>Total amount of Block Read Records generated in bytes.</p>
</td>
<td class="cellalignment1587" headers="r223c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r224c1-t3" headers="r1c1-t3">
<p><a id="sthref4550"></a>redo synch time</p>
</td>
<td class="cellalignment1587" headers="r224c1-t3 r1c2-t3">
<p>8</p>
</td>
<td class="cellalignment1587" headers="r224c1-t3 r1c3-t3">
<p>Elapsed time of all <a href="#i27197">"redo synch writes"</a> calls in 10s of milliseconds</p>
</td>
<td class="cellalignment1587" headers="r224c1-t3 r1c4-t3">
<p>3</p>
</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r225c1-t3" headers="r1c1-t3">
<p><a id="i27197"></a><a id="sthref4551"></a>redo synch writes</p>
</td>
<td class="cellalignment1587" headers="r225c1-t3 r1c2-t3">
<p>8</p>
</td>
<td class="cellalignment1587" headers="r225c1-t3 r1c3-t3">
<p>Number of times the redo is forced to disk, usually for a transaction commit. The log buffer is a circular buffer that LGWR periodically flushes. Usually, redo that is generated and copied into the log buffer need not be flushed out to disk immediately.</p>
</td>
<td class="cellalignment1587" headers="r225c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r226c1-t3" headers="r1c1-t3">
<p><a id="sthref4552"></a>redo wastage</p>
</td>
<td class="cellalignment1587" headers="r226c1-t3 r1c2-t3">
<p>2</p>
</td>
<td class="cellalignment1587" headers="r226c1-t3 r1c3-t3">
<p>Number of bytes wasted because redo blocks needed to be written before they are completely full. Early writing may be needed to commit transactions, to be able to write a database buffer, or to switch logs.</p>
</td>
<td class="cellalignment1587" headers="r226c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r227c1-t3" headers="r1c1-t3">
<p><a id="sthref4553"></a>redo write broadcast ack count</p>
</td>
<td class="cellalignment1587" headers="r227c1-t3 r1c2-t3">
<p>2</p>
</td>
<td class="cellalignment1587" headers="r227c1-t3 r1c3-t3">
<p>Number of times a commit broadcast acknowledgment has not been received by the time when the corresponding log write is completed. This is only for Oracle RAC.</p>
</td>
<td class="cellalignment1587" headers="r227c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r228c1-t3" headers="r1c1-t3">
<p><a id="sthref4554"></a>redo write broadcast ack time</p>
</td>
<td class="cellalignment1587" headers="r228c1-t3 r1c2-t3">
<p>2</p>
</td>
<td class="cellalignment1587" headers="r228c1-t3 r1c3-t3">
<p>Total amount of the latency associated with broadcast on commit beyond the latency of the log write (in microseconds). This is only for Oracle RAC.</p>
</td>
<td class="cellalignment1587" headers="r228c1-t3 r1c4-t3">
<p>3</p>
</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r229c1-t3" headers="r1c1-t3">
<p><a id="sthref4555"></a>redo write time</p>
</td>
<td class="cellalignment1587" headers="r229c1-t3 r1c2-t3">
<p>2</p>
</td>
<td class="cellalignment1587" headers="r229c1-t3 r1c3-t3">
<p>Total elapsed time of the write from the redo log buffer to the current redo log file in 10s of milliseconds</p>
</td>
<td class="cellalignment1587" headers="r229c1-t3 r1c4-t3">
<p>3</p>
</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r230c1-t3" headers="r1c1-t3">
<p><a id="i27232"></a><a id="sthref4556"></a>redo writes</p>
</td>
<td class="cellalignment1587" headers="r230c1-t3 r1c2-t3">
<p>2</p>
</td>
<td class="cellalignment1587" headers="r230c1-t3 r1c3-t3">
<p>Total number of writes by LGWR to the redo log files. "redo blocks written" divided by this statistic equals the number of blocks per write</p>
</td>
<td class="cellalignment1587" headers="r230c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r231c1-t3" headers="r1c1-t3">
<p><a id="sthref4557"></a>remote instance undo block writes</p>
</td>
<td class="cellalignment1587" headers="r231c1-t3 r1c2-t3">
<p>40</p>
</td>
<td class="cellalignment1587" headers="r231c1-t3 r1c3-t3">
<p>Number of times this instance wrote a rollback segment so that another instance could read it</p>
</td>
<td class="cellalignment1587" headers="r231c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r232c1-t3" headers="r1c1-t3">
<p><a id="sthref4558"></a>remote instance undo header writes</p>
</td>
<td class="cellalignment1587" headers="r232c1-t3 r1c2-t3">
<p>40</p>
</td>
<td class="cellalignment1587" headers="r232c1-t3 r1c3-t3">
<p>Number of times this instance wrote a undo header block so that another instance could read it</p>
</td>
<td class="cellalignment1587" headers="r232c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r233c1-t3" headers="r1c1-t3">
<p><a id="sthref4559"></a>rollback changes - undo records applied</p>
</td>
<td class="cellalignment1587" headers="r233c1-t3 r1c2-t3">
<p>128</p>
</td>
<td class="cellalignment1587" headers="r233c1-t3 r1c3-t3">
<p>Number of undo records applied to user-requested rollback changes (not consistent-read rollbacks)</p>
</td>
<td class="cellalignment1587" headers="r233c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r234c1-t3" headers="r1c1-t3">
<p><a id="sthref4560"></a>rollbacks only - consistent read gets</p>
</td>
<td class="cellalignment1587" headers="r234c1-t3 r1c2-t3">
<p>128</p>
</td>
<td class="cellalignment1587" headers="r234c1-t3 r1c3-t3">
<p>Number of consistent gets that require only block rollbacks, no block cleanouts.</p>
<p><span class="bold">See Also:</span> <a href="#i26158">"consistent gets"</a></p>
</td>
<td class="cellalignment1587" headers="r234c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r235c1-t3" headers="r1c1-t3">
<p><a id="sthref4561"></a>rows fetched via callback</p>
</td>
<td class="cellalignment1587" headers="r235c1-t3 r1c2-t3">
<p>64</p>
</td>
<td class="cellalignment1587" headers="r235c1-t3 r1c3-t3">
<p>Rows fetched via callback. Useful primarily for internal debugging purposes.</p>
</td>
<td class="cellalignment1587" headers="r235c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r236c1-t3" headers="r1c1-t3">
<p><a id="sthref4562"></a>serializable aborts</p>
</td>
<td class="cellalignment1587" headers="r236c1-t3 r1c2-t3">
<p>1</p>
</td>
<td class="cellalignment1587" headers="r236c1-t3 r1c3-t3">
<p>Number of times a SQL statement in a serializable isolation level had to abort</p>
</td>
<td class="cellalignment1587" headers="r236c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r237c1-t3" headers="r1c1-t3">
<p><a id="sthref4563"></a>session connect time</p>
</td>
<td class="cellalignment1587" headers="r237c1-t3 r1c2-t3">
<p>1</p>
</td>
<td class="cellalignment1587" headers="r237c1-t3 r1c3-t3">
<p>The connect time for the session in 10s of milliseconds. This value is useful only in <code dir="ltr">V$SESSTAT</code>. It is the wall clock time since the logon to this session occurred.</p>
</td>
<td class="cellalignment1587" headers="r237c1-t3 r1c4-t3">
<p>3</p>
</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r238c1-t3" headers="r1c1-t3">
<p><a id="sthref4564"></a>session cursor cache count</p>
</td>
<td class="cellalignment1587" headers="r238c1-t3 r1c2-t3">
<p>64</p>
</td>
<td class="cellalignment1587" headers="r238c1-t3 r1c3-t3">
<p>Total number of cursors cached. This statistic is incremented only if <code dir="ltr">SESSION_CACHED_CURSORS</code> &gt; 0. This statistic is the most useful in <code dir="ltr">V$SESSTAT</code>. If the value for this statistic in <code dir="ltr">V$SESSTAT</code> is close to the setting of the <code dir="ltr">SESSION_CACHED_CURSORS</code> parameter, the value of the parameter should be increased.</p>
</td>
<td class="cellalignment1587" headers="r238c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r239c1-t3" headers="r1c1-t3">
<p><a id="sthref4565"></a>session cursor cache hits</p>
</td>
<td class="cellalignment1587" headers="r239c1-t3 r1c2-t3">
<p>64</p>
</td>
<td class="cellalignment1587" headers="r239c1-t3 r1c3-t3">
<p>Number of hits in the session cursor cache. A hit means that the SQL (including recursive SQL) or PL/SQL statement did not have to be reparsed. Subtract this statistic from <a href="#i26932">"parse count (total)"</a> to determine the real number of parses that occurred.</p>
</td>
<td class="cellalignment1587" headers="r239c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r240c1-t3" headers="r1c1-t3">
<p><a id="i28932"></a><a id="sthref4566"></a>session logical reads</p>
</td>
<td class="cellalignment1587" headers="r240c1-t3 r1c2-t3">
<p>1</p>
</td>
<td class="cellalignment1587" headers="r240c1-t3 r1c3-t3">
<p>The sum of "db block gets" plus "consistent gets". This includes logical reads of database blocks from either the buffer cache or process private memory.</p>
</td>
<td class="cellalignment1587" headers="r240c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r241c1-t3" headers="r1c1-t3">
<p><a id="sthref4567"></a>session pga memory</p>
</td>
<td class="cellalignment1587" headers="r241c1-t3 r1c2-t3">
<p>1</p>
</td>
<td class="cellalignment1587" headers="r241c1-t3 r1c3-t3">
<p>Current PGA size for the session. Useful only in <code dir="ltr">V$SESSTAT</code>; it has no meaning in <code dir="ltr">V$SYSSTAT</code>.</p>
</td>
<td class="cellalignment1587" headers="r241c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r242c1-t3" headers="r1c1-t3">
<p><a id="sthref4568"></a>session pga memory max</p>
</td>
<td class="cellalignment1587" headers="r242c1-t3 r1c2-t3">
<p>1</p>
</td>
<td class="cellalignment1587" headers="r242c1-t3 r1c3-t3">
<p>Peak PGA size for the session. Useful only in <code dir="ltr">V$SESSTAT</code>; it has no meaning in <code dir="ltr">V$SYSSTAT</code>.</p>
</td>
<td class="cellalignment1587" headers="r242c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r243c1-t3" headers="r1c1-t3">
<p><a id="sthref4569"></a>session stored procedure space</p>
</td>
<td class="cellalignment1587" headers="r243c1-t3 r1c2-t3">
<p>1</p>
</td>
<td class="cellalignment1587" headers="r243c1-t3 r1c3-t3">
<p>Amount of memory this session is using for stored procedures</p>
</td>
<td class="cellalignment1587" headers="r243c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r244c1-t3" headers="r1c1-t3">
<p><a id="sthref4570"></a>session uga memory</p>
</td>
<td class="cellalignment1587" headers="r244c1-t3 r1c2-t3">
<p>1</p>
</td>
<td class="cellalignment1587" headers="r244c1-t3 r1c3-t3">
<p>Current UGA size for the session. Useful only in <code dir="ltr">V$SESSTAT</code>; it has no meaning in <code dir="ltr">V$SYSSTAT</code>.</p>
</td>
<td class="cellalignment1587" headers="r244c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r245c1-t3" headers="r1c1-t3">
<p><a id="sthref4571"></a>session uga memory max</p>
</td>
<td class="cellalignment1587" headers="r245c1-t3 r1c2-t3">
<p>1</p>
</td>
<td class="cellalignment1587" headers="r245c1-t3 r1c3-t3">
<p>Peak UGA size for a session. Useful only in <code dir="ltr">V$SESSTAT</code>; it has no meaning in <code dir="ltr">V$SYSSTAT</code>.</p>
</td>
<td class="cellalignment1587" headers="r245c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r246c1-t3" headers="r1c1-t3">
<p><a id="sthref4572"></a>shared hash latch upgrades - no wait</p>
</td>
<td class="cellalignment1587" headers="r246c1-t3 r1c2-t3">
<p>8</p>
</td>
<td class="cellalignment1587" headers="r246c1-t3 r1c3-t3">
<p>A shared hash latch upgrade is when a hash latch is upgraded from shared mode to exclusive mode. This statistic displays the number of times the upgrade completed immediately.</p>
</td>
<td class="cellalignment1587" headers="r246c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r247c1-t3" headers="r1c1-t3">
<p><a id="sthref4573"></a>shared hash latch upgrades - wait</p>
</td>
<td class="cellalignment1587" headers="r247c1-t3 r1c2-t3">
<p>8</p>
</td>
<td class="cellalignment1587" headers="r247c1-t3 r1c3-t3">
<p>A shared hash latch upgrade is when a hash latch is upgraded from shared mode to exclusive mode. This statistics displays the number of times the upgrade did not complete immediately.</p>
</td>
<td class="cellalignment1587" headers="r247c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r248c1-t3" headers="r1c1-t3">
<p><a id="sthref4574"></a>shared io pool buffer get failure</p>
</td>
<td class="cellalignment1587" headers="r248c1-t3 r1c2-t3">
<p>128</p>
</td>
<td class="cellalignment1587" headers="r248c1-t3 r1c3-t3">
<p>Number of unsuccessful buffer gets from the shared I/O pool from instance startup time.</p>
</td>
<td class="cellalignment1587" headers="r248c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r249c1-t3" headers="r1c1-t3">
<p><a id="sthref4575"></a>shared io pool buffer get success</p>
</td>
<td class="cellalignment1587" headers="r249c1-t3 r1c2-t3">
<p>128</p>
</td>
<td class="cellalignment1587" headers="r249c1-t3 r1c3-t3">
<p>Number of successful buffer gets from the shared I/O pool from instance startup time.</p>
</td>
<td class="cellalignment1587" headers="r249c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r250c1-t3" headers="r1c1-t3">
<p><a id="sthref4576"></a>sorts (disk)</p>
</td>
<td class="cellalignment1587" headers="r250c1-t3 r1c2-t3">
<p>64</p>
</td>
<td class="cellalignment1587" headers="r250c1-t3 r1c3-t3">
<p>Number of sort operations that required at least one disk write</p>
<p>Sorts that require I/O to disk are quite resource intensive. Try increasing the size of the initialization parameter <code dir="ltr">SORT_AREA_SIZE</code>. For more information, see <a href="initparams246.htm#i1134127">"SORT_AREA_SIZE"</a>.</p>
</td>
<td class="cellalignment1587" headers="r250c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r251c1-t3" headers="r1c1-t3">
<p><a id="sthref4577"></a>sorts (memory)</p>
</td>
<td class="cellalignment1587" headers="r251c1-t3 r1c2-t3">
<p>64</p>
</td>
<td class="cellalignment1587" headers="r251c1-t3 r1c3-t3">
<p>Number of sort operations that were performed completely in memory and did not require any disk writes</p>
<p>You cannot do much better than memory sorts, except maybe no sorts at all. Sorting is usually caused by selection criteria specifications within table join SQL operations.</p>
</td>
<td class="cellalignment1587" headers="r251c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r252c1-t3" headers="r1c1-t3">
<p><a id="sthref4578"></a>sorts (rows)</p>
</td>
<td class="cellalignment1587" headers="r252c1-t3 r1c2-t3">
<p>64</p>
</td>
<td class="cellalignment1587" headers="r252c1-t3 r1c3-t3">
<p>Total number of rows sorted</p>
</td>
<td class="cellalignment1587" headers="r252c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r253c1-t3" headers="r1c1-t3">
<p><a id="sthref4579"></a>SQL*Net roundtrips to/from client</p>
</td>
<td class="cellalignment1587" headers="r253c1-t3 r1c2-t3">
<p>1</p>
</td>
<td class="cellalignment1587" headers="r253c1-t3 r1c3-t3">
<p>Total number of Oracle Net Services messages sent to and received from the client</p>
</td>
<td class="cellalignment1587" headers="r253c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r254c1-t3" headers="r1c1-t3">
<p><a id="sthref4580"></a>SQL*Net roundtrips to/from dblink</p>
</td>
<td class="cellalignment1587" headers="r254c1-t3 r1c2-t3">
<p>1</p>
</td>
<td class="cellalignment1587" headers="r254c1-t3 r1c3-t3">
<p>Total number of Oracle Net Services messages sent over and received from a database link</p>
</td>
<td class="cellalignment1587" headers="r254c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r255c1-t3" headers="r1c1-t3">
<p><a id="sthref4581"></a>summed dirty queue length</p>
</td>
<td class="cellalignment1587" headers="r255c1-t3 r1c2-t3">
<p>8</p>
</td>
<td class="cellalignment1587" headers="r255c1-t3 r1c3-t3">
<p>The sum of the dirty LRU queue length after every write request. Divide by <span class="bold">write requests</span> to get the average queue length after write completion.</p>
</td>
<td class="cellalignment1587" headers="r255c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r256c1-t3" headers="r1c1-t3">
<p><a id="sthref4582"></a>switch current to new buffer</p>
</td>
<td class="cellalignment1587" headers="r256c1-t3 r1c2-t3">
<p>8</p>
</td>
<td class="cellalignment1587" headers="r256c1-t3 r1c3-t3">
<p>Number of times the CURRENT block moved to a different buffer, leaving a CR block in the original buffer</p>
</td>
<td class="cellalignment1587" headers="r256c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r257c1-t3" headers="r1c1-t3">
<p><a id="sthref4583"></a>table fetch by rowid</p>
</td>
<td class="cellalignment1587" headers="r257c1-t3 r1c2-t3">
<p>64</p>
</td>
<td class="cellalignment1587" headers="r257c1-t3 r1c3-t3">
<p>Number of rows that are fetched using a ROWID (usually recovered from an index)</p>
<p>This occurrence of table scans usually indicates either non-optimal queries or tables without indexes. Therefore, this statistic should increase as you optimize queries and provide indexes in the application.</p>
</td>
<td class="cellalignment1587" headers="r257c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r258c1-t3" headers="r1c1-t3">
<p><a id="sthref4584"></a>table fetch continued row</p>
</td>
<td class="cellalignment1587" headers="r258c1-t3 r1c2-t3">
<p>64</p>
</td>
<td class="cellalignment1587" headers="r258c1-t3 r1c3-t3">
<p>Number of times a chained or migrated row is encountered during a fetch</p>
<p>Retrieving rows that span more than one block increases the logical I/O by a factor that corresponds to the number of blocks than need to be accessed. Exporting and re-importing may eliminate this problem. Evaluate the settings for the storage parameters PCTFREE and PCTUSED. This problem cannot be fixed if rows are larger than database blocks (for example, if the <code dir="ltr">LONG</code> datatype is used and the rows are extremely large).</p>
</td>
<td class="cellalignment1587" headers="r258c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r259c1-t3" headers="r1c1-t3">
<p><a id="sthref4585"></a>table scan blocks gotten</p>
</td>
<td class="cellalignment1587" headers="r259c1-t3 r1c2-t3">
<p>64</p>
</td>
<td class="cellalignment1587" headers="r259c1-t3 r1c3-t3">
<p>During scanning operations, each row is retrieved sequentially by Oracle. This statistic counts the number of blocks encountered during the scan.</p>
<p>This statistic tells you the number of database blocks that you had to get from the buffer cache for the purpose of scanning. Compare this value with the value of <a href="#i26158">"consistent gets"</a> to determine how much of the consistent read activity can be attributed to scanning.</p>
</td>
<td class="cellalignment1587" headers="r259c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r260c1-t3" headers="r1c1-t3">
<p><a id="sthref4586"></a>table scan rows gotten</p>
</td>
<td class="cellalignment1587" headers="r260c1-t3 r1c2-t3">
<p>64</p>
</td>
<td class="cellalignment1587" headers="r260c1-t3 r1c3-t3">
<p>Number of rows that are processed during scanning operations</p>
</td>
<td class="cellalignment1587" headers="r260c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r261c1-t3" headers="r1c1-t3">
<p><a id="sthref4587"></a>table scans (cache partitions)</p>
</td>
<td class="cellalignment1587" headers="r261c1-t3 r1c2-t3">
<p>64</p>
</td>
<td class="cellalignment1587" headers="r261c1-t3 r1c3-t3">
<p>Number of range scans performed on tables that have the CACHE option enabled</p>
</td>
<td class="cellalignment1587" headers="r261c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r262c1-t3" headers="r1c1-t3">
<p><a id="sthref4588"></a>table scans (direct read)</p>
</td>
<td class="cellalignment1587" headers="r262c1-t3 r1c2-t3">
<p>64</p>
</td>
<td class="cellalignment1587" headers="r262c1-t3 r1c3-t3">
<p>Number of table scans performed with direct read (bypassing the buffer cache)</p>
</td>
<td class="cellalignment1587" headers="r262c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r263c1-t3" headers="r1c1-t3">
<p><a id="sthref4589"></a>table scans (long tables)</p>
</td>
<td class="cellalignment1587" headers="r263c1-t3 r1c2-t3">
<p>64</p>
</td>
<td class="cellalignment1587" headers="r263c1-t3 r1c3-t3">
<p>Long (or conversely short) tables can be defined as tables that do not meet the short table criteria as described in <a href="#i28930">table scans (short tables)</a></p>
</td>
<td class="cellalignment1587" headers="r263c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r264c1-t3" headers="r1c1-t3">
<p><a id="sthref4590"></a>table scans (rowid ranges)</p>
</td>
<td class="cellalignment1587" headers="r264c1-t3 r1c2-t3">
<p>64</p>
</td>
<td class="cellalignment1587" headers="r264c1-t3 r1c3-t3">
<p>During parallel query, the number of table scans conducted with specified ROWID ranges</p>
</td>
<td class="cellalignment1587" headers="r264c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r265c1-t3" headers="r1c1-t3">
<p><a id="i28930"></a><a id="sthref4591"></a>table scans (short tables)</p>
</td>
<td class="cellalignment1587" headers="r265c1-t3 r1c2-t3">
<p>64</p>
</td>
<td class="cellalignment1587" headers="r265c1-t3 r1c3-t3">
<p>Long (or conversely short) tables can be defined by optimizer hints coming down into the row source access layer of Oracle. The table must have the CACHE option set.</p>
</td>
<td class="cellalignment1587" headers="r265c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r266c1-t3" headers="r1c1-t3">
<p><a id="sthref4592"></a>total file opens</p>
</td>
<td class="cellalignment1587" headers="r266c1-t3 r1c2-t3">
<p>8</p>
</td>
<td class="cellalignment1587" headers="r266c1-t3 r1c3-t3">
<p>Total number of file opens performed by the instance. Each process needs a number of files (control file, log file, database file) in order to work against the database.</p>
</td>
<td class="cellalignment1587" headers="r266c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r267c1-t3" headers="r1c1-t3">
<p><a id="sthref4593"></a>transaction lock background get time</p>
</td>
<td class="cellalignment1587" headers="r267c1-t3 r1c2-t3">
<p>128</p>
</td>
<td class="cellalignment1587" headers="r267c1-t3 r1c3-t3">
<p>Useful only for internal debugging purposes</p>
</td>
<td class="cellalignment1587" headers="r267c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r268c1-t3" headers="r1c1-t3">
<p><a id="sthref4594"></a>transaction lock background gets</p>
</td>
<td class="cellalignment1587" headers="r268c1-t3 r1c2-t3">
<p>128</p>
</td>
<td class="cellalignment1587" headers="r268c1-t3 r1c3-t3">
<p>Useful only for internal debugging purposes</p>
</td>
<td class="cellalignment1587" headers="r268c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r269c1-t3" headers="r1c1-t3">
<p><a id="sthref4595"></a>transaction lock foreground requests</p>
</td>
<td class="cellalignment1587" headers="r269c1-t3 r1c2-t3">
<p>128</p>
</td>
<td class="cellalignment1587" headers="r269c1-t3 r1c3-t3">
<p>Useful only for internal debugging purposes</p>
</td>
<td class="cellalignment1587" headers="r269c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r270c1-t3" headers="r1c1-t3">
<p><a id="sthref4596"></a>transaction lock foreground wait time</p>
</td>
<td class="cellalignment1587" headers="r270c1-t3 r1c2-t3">
<p>128</p>
</td>
<td class="cellalignment1587" headers="r270c1-t3 r1c3-t3">
<p>Useful only for internal debugging purposes</p>
</td>
<td class="cellalignment1587" headers="r270c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r271c1-t3" headers="r1c1-t3">
<p><a id="sthref4597"></a>transaction rollbacks</p>
</td>
<td class="cellalignment1587" headers="r271c1-t3 r1c2-t3">
<p>128</p>
</td>
<td class="cellalignment1587" headers="r271c1-t3 r1c3-t3">
<p>Number of transactions being successfully rolled back</p>
</td>
<td class="cellalignment1587" headers="r271c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r272c1-t3" headers="r1c1-t3">
<p><a id="sthref4598"></a>transaction tables consistent read rollbacks</p>
</td>
<td class="cellalignment1587" headers="r272c1-t3 r1c2-t3">
<p>128</p>
</td>
<td class="cellalignment1587" headers="r272c1-t3 r1c3-t3">
<p>Number of times rollback segment headers are rolled back to create consistent read blocks</p>
</td>
<td class="cellalignment1587" headers="r272c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r273c1-t3" headers="r1c1-t3">
<p><a id="sthref4599"></a>transaction tables consistent reads - undo records applied</p>
</td>
<td class="cellalignment1587" headers="r273c1-t3 r1c2-t3">
<p>128</p>
</td>
<td class="cellalignment1587" headers="r273c1-t3 r1c3-t3">
<p>Number of undo records applied to transaction tables that have been rolled back for consistent read purposes</p>
</td>
<td class="cellalignment1587" headers="r273c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r274c1-t3" headers="r1c1-t3">
<p><a id="sthref4600"></a>Unnecessary process cleanup for SCN batching</p>
</td>
<td class="cellalignment1587" headers="r274c1-t3 r1c2-t3">
<p>32</p>
</td>
<td class="cellalignment1587" headers="r274c1-t3 r1c3-t3">
<p>Total number of times that the process cleanup was performed unnecessarily because the session or process did not get the next batched SCN. The next batched SCN went to another session instead.</p>
</td>
<td class="cellalignment1587" headers="r274c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r275c1-t3" headers="r1c1-t3">
<p><a id="sthref4601"></a>user calls</p>
</td>
<td class="cellalignment1587" headers="r275c1-t3 r1c2-t3">
<p>1</p>
</td>
<td class="cellalignment1587" headers="r275c1-t3 r1c3-t3">
<p>Number of user calls such as login, parse, fetch, or execute</p>
<p>When determining activity, the ratio of user calls to RPI calls, give you an indication of how much internal work gets generated as a result of the type of requests the user is sending to Oracle.</p>
</td>
<td class="cellalignment1587" headers="r275c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r276c1-t3" headers="r1c1-t3">
<p><a id="sthref4602"></a>user commits</p>
</td>
<td class="cellalignment1587" headers="r276c1-t3 r1c2-t3">
<p>1</p>
</td>
<td class="cellalignment1587" headers="r276c1-t3 r1c3-t3">
<p>Number of user commits. When a user commits a transaction, the redo generated that reflects the changes made to database blocks must be written to disk. Commits often represent the closest thing to a user transaction rate.</p>
</td>
<td class="cellalignment1587" headers="r276c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r277c1-t3" headers="r1c1-t3">
<p><a id="sthref4603"></a>user I/O wait time</p>
</td>
<td class="cellalignment1587" headers="r277c1-t3 r1c2-t3">
<p>1</p>
</td>
<td class="cellalignment1587" headers="r277c1-t3 r1c3-t3">
<p>The total wait time (in centiseconds) for waits that belong to the User I/O wait class</p>
</td>
<td class="cellalignment1587" headers="r277c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r278c1-t3" headers="r1c1-t3">
<p><a id="sthref4604"></a>user rollbacks</p>
</td>
<td class="cellalignment1587" headers="r278c1-t3 r1c2-t3">
<p>1</p>
</td>
<td class="cellalignment1587" headers="r278c1-t3 r1c3-t3">
<p>Number of times users manually issue the <code dir="ltr">ROLLBACK</code> statement or an error occurs during a user's transactions</p>
</td>
<td class="cellalignment1587" headers="r278c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r279c1-t3" headers="r1c1-t3">
<p><a id="sthref4605"></a>write clones created in background</p>
</td>
<td class="cellalignment1587" headers="r279c1-t3 r1c2-t3">
<p>8</p>
</td>
<td class="cellalignment1587" headers="r279c1-t3 r1c3-t3">
<p>Number of times a background or foreground process clones a <code dir="ltr">CURRENT</code> buffer that is being written. The clone becomes the new, accessible <code dir="ltr">CURRENT</code> buffer, leaving the original buffer (now the clone) to complete writing.</p>
</td>
<td class="cellalignment1587" headers="r279c1-t3 r1c4-t3">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r280c1-t3" headers="r1c1-t3">
<p><a id="sthref4606"></a>write clones created in foreground</p>
</td>
<td class="cellalignment1587" headers="r280c1-t3 r1c2-t3">
<p>8</p>
</td>
<td class="cellalignment1587" headers="r280c1-t3 r1c3-t3">
<p>Number of times a background or foreground process clones a <code dir="ltr">CURRENT</code> buffer that is being written. The clone becomes the new, accessible <code dir="ltr">CURRENT</code> buffer, leaving the original buffer (now the clone) to complete writing.</p>
</td>
<td class="cellalignment1587" headers="r280c1-t3 r1c4-t3">&nbsp;</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformalwide" --></div>
<!-- class="sect1" --></div>
<!-- class="appendix" -->
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment1580">
<tr>
<td class="cellalignment1587">
<table class="cellalignment1585">
<tr>
<td class="cellalignment1584"><a href="stats001.htm"><img width="24" height="24" src="../../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment1584"><a href="bgprocesses.htm"><img width="24" height="24" src="../../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;2002, 2015,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment1589">
<table class="cellalignment1583">
<tr>
<td class="cellalignment1584"><a href="../../index.htm"><img width="24" height="24" src="../../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment1584"><a href="../../nav/portal_booklist.htm"><img width="24" height="24" src="../../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment1584"><a href="toc.htm"><img width="24" height="24" src="../../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment1584"><a href="index.htm"><img width="24" height="24" src="../../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment1584"><a href="../../nav/mindx.htm"><img width="24" height="24" src="../../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment1584"><a href="../../dcommon/html/feedback.htm"><img width="24" height="24" src="../../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>
</body>
</html>
