<!DOCTYPE html>
<html lang="en" >
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1">
<meta charset="utf-8">
<title>Descriptions of Wait Events</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Merged Version 1067" />
<meta name="dcterms.created" content="2015-08-14T13:20:31Z" />
<meta name="robots" content="all" />
<meta name="dcterms.title" content="Database Reference" />
<meta name="dcterms.identifier" content="E40402-18" />
<meta name="dcterms.isVersionOf" content="REFRN" />
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;2002, 2015,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved." />
<link rel="Start" href="../../index.htm" title="Home" type="text/html" />
<link rel="Copyright" href="../../dcommon/html/cpyr.htm" title="Copyright" type="text/html" />

<script type="application/javascript"  src="../../dcommon/js/headfoot.js"></script>
<script type="application/javascript"  src="../../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html" />
<link rel="Index" href="index.htm" title="Index" type="text/html" />
<link rel="Prev" href="waitevents002.htm" title="Previous" type="text/html" />
<link rel="Next" href="enqueues.htm" title="Next" type="text/html" />
<link rel="alternate" href="../e40402.pdf" title="PDF version" type="application/pdf" />
<link rel="schema.dcterms" href="http://purl.org/dc/terms/" />
<link rel="stylesheet" href="../../dcommon/css/fusiondoc.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/header.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/footer.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/fonts.css">
<link rel="stylesheet" href="../../dcommon/css/foundation.css">
<link rel="stylesheet" href="../../dcommon/css/codemirror.css">
<link rel="stylesheet" type="text/css" title="Default" href="../../nav/css/html5.css">
<link rel="stylesheet" href="../../dcommon/css/respond-480-tablet.css">
<link rel="stylesheet" href="../../dcommon/css/respond-768-laptop.css">
<link rel="stylesheet" href="../../dcommon/css/respond-1140-deskop.css">
<script type="application/javascript" src="../../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">2164/2170</span> <!-- End Header --><a id="BGGIBDJI"></a>
<div class="sect1">
<h1 class="sect1">Descriptions of Wait Events</h1>
<p>This section provides detailed descriptions for those wait events of greatest interest. Where appropriate, pointers are provided to further information elsewhere in Oracle Database documentation. For a complete listing of wait events, in alphabetical order, you can issue the following SQL statement:</p>
<pre dir="ltr">
SQL&gt; SELECT name FROM V$EVENT_NAME ORDER BY name;
</pre>
<div id="REFRN00500" class="sect2"><a id="sthref3949"></a>
<h2 class="sect2">alter system set dispatcher<a id="sthref3950"></a></h2>
<p>A session has issued a statement <code dir="ltr">ALTER SYSTEM SET DISPATCHER</code> = <code dir="ltr">string</code> and is waiting for the dispatchers to get started.</p>
<p><span class="bold">Wait Time:</span> The session will wait 1 / 100 of a second and check to see if the new dispatchers have started else the session will wait again</p>
<div class="inftblinformal">
<table class="cellalignment1590" title="alter system set dispatchers" summary="This table is described in the preceding text" dir="ltr">
<thead>
<tr class="cellalignment1581">
<th class="cellalignment1591" id="r1c1-t4">Parameter</th>
<th class="cellalignment1591" id="r1c2-t4">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r2c1-t4" headers="r1c1-t4"><span class="italic">waited</span></td>
<td class="cellalignment1587" headers="r2c1-t4 r1c2-t4">Number of times that the session has waited 1 / 100 of a second</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" --></div>
<!-- class="sect2" -->
<div id="REFRN00501" class="sect2"><a id="sthref3951"></a>
<h2 class="sect2">batched allocate scn lock request<a id="sthref3952"></a></h2>
<p>A session is waiting on another process to allocate a system change number (SCN). If the foreground timed out waiting on a process to get the SCN, the foreground will get the SCN.</p>
<p><span class="bold">Wait Time:</span> The wait time is 1 second on the assumption that an SCN allocation should normally need much less than that</p>
<p><span class="bold">Parameters:</span> None</p>
</div>
<!-- class="sect2" -->
<div id="REFRN00502" class="sect2"><a id="sthref3953"></a>
<h2 class="sect2">BFILE check if exists<a id="sthref3954"></a></h2>
<p>The session waits to check if an external large object (LOB) exists.</p>
<p><span class="bold">Wait Time:</span> The total elapsed time for the <span class="bold">exists</span> call</p>
<div class="inftblinformal">
<table class="cellalignment1590" title="BFILE check if exists" summary="This table is described in the preceding text" dir="ltr">
<thead>
<tr class="cellalignment1581">
<th class="cellalignment1591" id="r1c1-t5">Parameter</th>
<th class="cellalignment1591" id="r1c2-t5">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r2c1-t5" headers="r1c1-t5"><span class="italic">session#</span></td>
<td class="cellalignment1587" headers="r2c1-t5 r1c2-t5">See <a href="waitevents002.htm#i970951">"session#"</a></td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r3c1-t5" headers="r1c1-t5"><span class="italic">waited</span></td>
<td class="cellalignment1587" headers="r3c1-t5 r1c2-t5">See <a href="waitevents002.htm#i970957">"waited"</a></td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" --></div>
<!-- class="sect2" -->
<div id="REFRN00503" class="sect2"><a id="sthref3955"></a>
<h2 class="sect2">BFILE check if open<a id="sthref3956"></a></h2>
<p>The session waits for an external large object (LOB) to open.</p>
<p><span class="bold">Wait Time:</span> The total elapsed time for the <span class="bold">isopen</span> call</p>
<div class="inftblinformal">
<table class="cellalignment1590" title="BFILE check if open" summary="This table is described in the preceding text" dir="ltr">
<thead>
<tr class="cellalignment1581">
<th class="cellalignment1591" id="r1c1-t6">Parameter</th>
<th class="cellalignment1591" id="r1c2-t6">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r2c1-t6" headers="r1c1-t6"><span class="italic">session#</span></td>
<td class="cellalignment1587" headers="r2c1-t6 r1c2-t6">See <a href="waitevents002.htm#i970951">"session#"</a></td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r3c1-t6" headers="r1c1-t6"><span class="italic">waited</span></td>
<td class="cellalignment1587" headers="r3c1-t6 r1c2-t6">See <a href="waitevents002.htm#i970957">"waited"</a></td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" --></div>
<!-- class="sect2" -->
<div id="REFRN00504" class="sect2"><a id="sthref3957"></a>
<h2 class="sect2">BFILE closure<a id="sthref3958"></a></h2>
<p>The session waits for an external large object (LOB) to close.</p>
<p><span class="bold">Wait Time:</span> The total elapsed time for the <span class="bold">close</span> call</p>
<div class="inftblinformal">
<table class="cellalignment1590" title="BFILE Closure" summary="This table is described in the preceding text" dir="ltr">
<thead>
<tr class="cellalignment1581">
<th class="cellalignment1591" id="r1c1-t7">Parameter</th>
<th class="cellalignment1591" id="r1c2-t7">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r2c1-t7" headers="r1c1-t7"><span class="italic">session#</span></td>
<td class="cellalignment1587" headers="r2c1-t7 r1c2-t7">See <a href="waitevents002.htm#i970951">"session#"</a></td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r3c1-t7" headers="r1c1-t7"><span class="italic">waited</span></td>
<td class="cellalignment1587" headers="r3c1-t7 r1c2-t7">See <a href="waitevents002.htm#i970957">"waited"</a></td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" --></div>
<!-- class="sect2" -->
<div id="REFRN00505" class="sect2"><a id="sthref3959"></a>
<h2 class="sect2">BFILE get length<a id="sthref3960"></a></h2>
<p>The session waits on a call to check the size of an external large object (LOB).</p>
<p><span class="bold">Wait Time:</span> The total elapsed time for the call to check the LOB size</p>
<div class="inftblinformal">
<table class="cellalignment1590" title="BFILE get length" summary="This table is described in the preceding text" dir="ltr">
<thead>
<tr class="cellalignment1581">
<th class="cellalignment1591" id="r1c1-t8">Parameter</th>
<th class="cellalignment1591" id="r1c2-t8">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r2c1-t8" headers="r1c1-t8"><span class="italic">session#</span></td>
<td class="cellalignment1587" headers="r2c1-t8 r1c2-t8">See <a href="waitevents002.htm#i970951">"session#"</a></td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r3c1-t8" headers="r1c1-t8"><span class="italic">waited</span></td>
<td class="cellalignment1587" headers="r3c1-t8 r1c2-t8">See <a href="waitevents002.htm#i970957">"waited"</a></td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" --></div>
<!-- class="sect2" -->
<div id="REFRN00506" class="sect2"><a id="sthref3961"></a>
<h2 class="sect2">BFILE get name object<a id="sthref3962"></a></h2>
<p>The session waits on a call to find or generate the external name of a external large object.</p>
<p><span class="bold">Wait Time:</span> The total elapsed time for <span class="bold">make external file name</span> to complete</p>
<div class="inftblinformal">
<table class="cellalignment1590" title="BFILE get name object" summary="This table is described in the preceding text" dir="ltr">
<thead>
<tr class="cellalignment1581">
<th class="cellalignment1591" id="r1c1-t9">Parameter</th>
<th class="cellalignment1591" id="r1c2-t9">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r2c1-t9" headers="r1c1-t9"><span class="italic">session#</span></td>
<td class="cellalignment1587" headers="r2c1-t9 r1c2-t9">See <a href="waitevents002.htm#i970951">"session#"</a></td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r3c1-t9" headers="r1c1-t9"><span class="italic">waited</span></td>
<td class="cellalignment1587" headers="r3c1-t9 r1c2-t9">See <a href="waitevents002.htm#i970957">"waited"</a></td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" --></div>
<!-- class="sect2" -->
<div id="REFRN00507" class="sect2"><a id="sthref3963"></a>
<h2 class="sect2">BFILE get path object<a id="sthref3964"></a></h2>
<p>The session is waiting on a call to find or generate the external path name of an external large object (LOB).</p>
<p><span class="bold">Wait Time:</span> The total elapsed time for <span class="bold">make external path</span> to complete</p>
<div class="inftblinformal">
<table class="cellalignment1590" title="BFILE get path object" summary="This table is described in the preceding text" dir="ltr">
<thead>
<tr class="cellalignment1581">
<th class="cellalignment1591" id="r1c1-t10">Parameter</th>
<th class="cellalignment1591" id="r1c2-t10">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r2c1-t10" headers="r1c1-t10"><span class="italic">session#</span></td>
<td class="cellalignment1587" headers="r2c1-t10 r1c2-t10">See <a href="waitevents002.htm#i970951">"session#"</a></td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r3c1-t10" headers="r1c1-t10"><span class="italic">waited</span></td>
<td class="cellalignment1587" headers="r3c1-t10 r1c2-t10">See <a href="waitevents002.htm#i970957">"waited"</a></td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" --></div>
<!-- class="sect2" -->
<div id="REFRN00508" class="sect2"><a id="sthref3965"></a>
<h2 class="sect2">BFILE internal seek<a id="sthref3966"></a></h2>
<p>The session waits for a positioning call within the external large object (LOB) to complete.</p>
<p><span class="bold">Wait Time:</span> The total elapsed time for the <span class="bold">seek</span> to complete</p>
<div class="inftblinformal">
<table class="cellalignment1590" title="BFILE internal seek" summary="This table is described in the preceding text" dir="ltr">
<thead>
<tr class="cellalignment1581">
<th class="cellalignment1591" id="r1c1-t11">Parameter</th>
<th class="cellalignment1591" id="r1c2-t11">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r2c1-t11" headers="r1c1-t11"><span class="italic">session#</span></td>
<td class="cellalignment1587" headers="r2c1-t11 r1c2-t11">See <a href="waitevents002.htm#i970951">"session#"</a></td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r3c1-t11" headers="r1c1-t11"><span class="italic">waited</span></td>
<td class="cellalignment1587" headers="r3c1-t11 r1c2-t11">See <a href="waitevents002.htm#i970957">"waited"</a></td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" --></div>
<!-- class="sect2" -->
<div id="REFRN00509" class="sect2"><a id="sthref3967"></a>
<h2 class="sect2">BFILE open<a id="sthref3968"></a></h2>
<p>The session waits for an external large object (LOB) to open.</p>
<p><span class="bold">Wait Time:</span> The total elapsed time for the <span class="bold">isopen</span> call</p>
<div class="inftblinformal">
<table class="cellalignment1590" title="BFILE open" summary="This table is described in the preceding text" dir="ltr">
<thead>
<tr class="cellalignment1581">
<th class="cellalignment1591" id="r1c1-t12">Parameter</th>
<th class="cellalignment1591" id="r1c2-t12">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r2c1-t12" headers="r1c1-t12"><span class="italic">session#</span></td>
<td class="cellalignment1587" headers="r2c1-t12 r1c2-t12">See <a href="waitevents002.htm#i970951">"session#"</a></td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r3c1-t12" headers="r1c1-t12"><span class="italic">waited</span></td>
<td class="cellalignment1587" headers="r3c1-t12 r1c2-t12">See <a href="waitevents002.htm#i970957">"waited"</a></td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" --></div>
<!-- class="sect2" -->
<div id="REFRN00510" class="sect2"><a id="sthref3969"></a>
<h2 class="sect2">BFILE read<a id="sthref3970"></a></h2>
<p>The session waits for a read from a external large object (LOB) to complete.</p>
<p><span class="bold">Wait Time:</span> The total elapsed time for the <span class="bold">read</span> to complete</p>
<div class="inftblinformal">
<table class="cellalignment1590" title="BFILE read" summary="This table is described in the preceding text" dir="ltr">
<thead>
<tr class="cellalignment1581">
<th class="cellalignment1591" id="r1c1-t13">Parameter</th>
<th class="cellalignment1591" id="r1c2-t13">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r2c1-t13" headers="r1c1-t13"><span class="italic">session#</span></td>
<td class="cellalignment1587" headers="r2c1-t13 r1c2-t13">See <a href="waitevents002.htm#i970951">"session#"</a></td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r3c1-t13" headers="r1c1-t13"><span class="italic">waited</span></td>
<td class="cellalignment1587" headers="r3c1-t13 r1c2-t13">See <a href="waitevents002.htm#i970957">"waited"</a></td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" --></div>
<!-- class="sect2" -->
<div id="REFRN00511" class="sect2"><a id="sthref3971"></a>
<h2 class="sect2">broadcast mesg queue transition<a id="sthref3972"></a></h2>
<p>Processes enter "wait for broadcast mesg queue transition" when cleaning up a publisher channel handle to a RELIABLE broadcast channel. The publisher is responsible for moving the message to the free queue, but it cannot do so until the message is in the done queue. If the message is still not in the done queue, process enters this wait. This wait event will most likely show up when an Oracle process is about to exit normally, or when PMON cleans up a dead process.</p>
<p><span class="bold">Wait Time:</span> Varies</p>
<div class="inftblinformal">
<table class="cellalignment1590" title="broadcast mesg queue transition" summary="This table described in preceding text" dir="ltr">
<thead>
<tr class="cellalignment1581">
<th class="cellalignment1591" id="r1c1-t14">Parameter</th>
<th class="cellalignment1591" id="r1c2-t14">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r2c1-t14" headers="r1c1-t14"><span class="italic">channel handle</span></td>
<td class="cellalignment1587" headers="r2c1-t14 r1c2-t14">publisher channel handle pointer</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r3c1-t14" headers="r1c1-t14"><span class="italic">message</span></td>
<td class="cellalignment1587" headers="r3c1-t14 r1c2-t14">broadcast message pointer</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r4c1-t14" headers="r1c1-t14"><span class="italic">location</span></td>
<td class="cellalignment1587" headers="r4c1-t14 r1c2-t14">A number indicating the function in KSR where the process is waiting</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" --></div>
<!-- class="sect2" -->
<div id="REFRN00512" class="sect2"><a id="sthref3973"></a>
<h2 class="sect2">broadcast mesg recovery queue transition<a id="sthref3974"></a></h2>
<p>Processes enter "wait for broadcast mesg recovery queue transition" when cleaning up a publisher channel handle to a RELIABLE broadcast channel. The broadcasted message is in the recovery queue of another channel handle (for example, ch2). Process enters this wait, if the message is yet to be removed from the recovery queue of the ch2 channel handle. This wait event will most likely show up when an Oracle process is about to exit normally, or when PMON cleans up a dead process.</p>
<p><span class="bold">Wait Time:</span> Varies</p>
<div class="inftblinformal">
<table class="cellalignment1590" title="broadcast mesg recovery queue transition" summary="This table described in preceding text" dir="ltr">
<thead>
<tr class="cellalignment1581">
<th class="cellalignment1591" id="r1c1-t15">Parameter</th>
<th class="cellalignment1591" id="r1c2-t15">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r2c1-t15" headers="r1c1-t15"><span class="italic">channel handle</span></td>
<td class="cellalignment1587" headers="r2c1-t15 r1c2-t15">Publisher channel handle pointer</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r3c1-t15" headers="r1c1-t15"><span class="italic">message</span></td>
<td class="cellalignment1587" headers="r3c1-t15 r1c2-t15">Broadcast message pointer</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r4c1-t15" headers="r1c1-t15"><span class="italic">location</span></td>
<td class="cellalignment1587" headers="r4c1-t15 r1c2-t15">A number indicating the function in KSR where the process is waiting</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" --></div>
<!-- class="sect2" -->
<a id="BABHGDHA"></a>
<div id="REFRN00513" class="sect2">
<h2 class="sect2">buffer busy waits<a id="sthref3975"></a></h2>
<p>Wait until a buffer becomes available.</p>
<p>There are four reasons that a session cannot pin a buffer in the buffer cache, and a separate wait event exists for each reason:</p>
<ol>
<li>
<p>"buffer busy waits": A session cannot pin the buffer in the buffer cache because another session has the buffer pinned.</p>
</li>
<li>
<p>"read by other session": A session cannot pin the buffer in the buffer cache because another session is reading the buffer from disk.</p>
</li>
<li>
<p>"gc buffer busy acquire": A session cannot pin the buffer in the buffer cache because another session is reading the buffer from the cache of another instance.</p>
</li>
<li>
<p>"gc buffer busy release": A session cannot pin the buffer in the buffer cache because another session on another instance is taking the buffer from this cache into its own cache so it can pin it.</p>
</li>
</ol>
<p>Prior to release 10.1, all four reasons were covered by "buffer busy waits." In release 10.1, the "gc buffer busy" wait event covered both the "gc buffer busy acquire" and "gc buffer busy release" wait events.</p>
<p><span class="bold">Wait Time:</span> Normal wait time is 1 second. If the session was waiting for a buffer during the last wait, then the next wait will be 3 seconds.</p>
<div class="inftblinformal">
<table class="cellalignment1590" title="buffer busy waits" summary="This table is described in the preceding text" dir="ltr">
<thead>
<tr class="cellalignment1581">
<th class="cellalignment1591" id="r1c1-t16">Parameter</th>
<th class="cellalignment1591" id="r1c2-t16">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r2c1-t16" headers="r1c1-t16"><span class="italic">file#</span></td>
<td class="cellalignment1587" headers="r2c1-t16 r1c2-t16">See <a href="waitevents002.htm#i970879">"file#"</a></td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r3c1-t16" headers="r1c1-t16"><span class="italic">block#</span></td>
<td class="cellalignment1587" headers="r3c1-t16 r1c2-t16">See <a href="waitevents002.htm#i970854">"block#"</a></td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r4c1-t16" headers="r1c1-t16"><span class="italic">id</span></td>
<td class="cellalignment1587" headers="r4c1-t16 r1c2-t16">The buffer busy wait event is called from different places in the session</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" -->
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink PFGRF94465" href="../../server.112/e41573/instance_tune.htm#PFGRF94465"><span class="italic">Oracle Database Performance Tuning Guide</span></a> for more information about potential causes of the buffer busy waits wait event</div>
</div>
<!-- class="sect2" -->
<div id="REFRN00514" class="sect2"><a id="sthref3976"></a>
<h2 class="sect2">buffer deadlock<a id="sthref3977"></a></h2>
<p>Oracle does not really wait on this event; the foreground only yields the CPU. Thus, the chances of catching this event are very low. This is not an application induced deadlock, but an assumed deadlock by the cache layer. The cache layer cannot get a buffer in a certain mode within a certain amount of time.</p>
<p><span class="bold">Wait Time:</span> 0 seconds. The foreground process only yields the CPU and will usually be placed at the end of the CPU run queue.</p>
<div class="inftblinformal">
<table class="cellalignment1590" title="buffer deadlock" summary="This table is described in the preceding text" dir="ltr">
<thead>
<tr class="cellalignment1581">
<th class="cellalignment1591" id="r1c1-t18">Parameter</th>
<th class="cellalignment1591" id="r1c2-t18">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r2c1-t18" headers="r1c1-t18"><span class="italic">class</span></td>
<td class="cellalignment1587" headers="r2c1-t18 r1c2-t18">See <a href="waitevents002.htm#i970870">"class"</a></td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r3c1-t18" headers="r1c1-t18"><span class="italic">mode</span></td>
<td class="cellalignment1587" headers="r3c1-t18 r1c2-t18">See <a href="waitevents002.htm#i970894">"mode"</a></td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r4c1-t18" headers="r1c1-t18"><span class="italic">flag</span></td>
<td class="cellalignment1587" headers="r4c1-t18 r1c2-t18">The flag points to the internal flags used by the session to get this block</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r5c1-t18" headers="r1c1-t18"><span class="italic">dba</span></td>
<td class="cellalignment1587" headers="r5c1-t18 r1c2-t18">See <a href="waitevents002.htm#i970873">"dba"</a></td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" --></div>
<!-- class="sect2" -->
<div id="REFRN00515" class="sect2"><a id="sthref3978"></a>
<h2 class="sect2">buffer latch<a id="sthref3979"></a></h2>
<p>The session waits on the buffer hash chain latch. Primarily used in the dump routines.</p>
<p><span class="bold">Wait Time:</span> 1 second</p>
<div class="inftblinformal">
<table class="cellalignment1590" title="buffer latch" summary="This table is described in the preceding text" dir="ltr">
<thead>
<tr class="cellalignment1581">
<th class="cellalignment1591" id="r1c1-t19">Parameter</th>
<th class="cellalignment1591" id="r1c2-t19">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r2c1-t19" headers="r1c1-t19"><span class="italic">latch addr</span></td>
<td class="cellalignment1587" headers="r2c1-t19 r1c2-t19">The virtual address in the SGA where this latch is located. Use the following statement to find the name of this latch:
<pre dir="ltr">
select *
from v$latch a, v$latchname b
where addr = <span class="italic">latch addr</span>
and a.latch# = b.latch#;
</pre></td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r3c1-t19" headers="r1c1-t19"><span class="italic">chain#</span></td>
<td class="cellalignment1587" headers="r3c1-t19 r1c2-t19">The index into array of buffer hash chains. When the chain is 0xfffffff, the foreground waits on the LRU latch.</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" --></div>
<!-- class="sect2" -->
<div id="REFRN00516" class="sect2"><a id="sthref3980"></a>
<h2 class="sect2">buffer read retry<a id="sthref3981"></a></h2>
<p>This event occurs only if the instance is mounted in shared mode (Oracle Real Application Cluster). During the read of the buffer, the contents changed. This means that either:</p>
<ul>
<li>
<p>The version number, dba, or the incarnation and sequence number stored in the block no longer match</p>
</li>
<li>
<p>The checksum on the block does not match the checksum in the block</p>
</li>
</ul>
<p>The block will be re-read (this may fail up to 3 times), then corruption is assumed and the corrupt block is dumped in the trace file.</p>
<p><span class="bold">Wait Time:</span> The wait time is the elapsed time of the read</p>
<div class="inftblinformal">
<table class="cellalignment1590" title="buffer read retry" summary="This table is described in the preceding text" dir="ltr">
<thead>
<tr class="cellalignment1581">
<th class="cellalignment1591" id="r1c1-t20">Parameter</th>
<th class="cellalignment1591" id="r1c2-t20">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r2c1-t20" headers="r1c1-t20"><span class="italic">file#</span></td>
<td class="cellalignment1587" headers="r2c1-t20 r1c2-t20">See <a href="waitevents002.htm#i970879">"file#"</a></td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r3c1-t20" headers="r1c1-t20"><span class="italic">block#</span></td>
<td class="cellalignment1587" headers="r3c1-t20 r1c2-t20">See <a href="waitevents002.htm#i970854">"block#"</a></td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" --></div>
<!-- class="sect2" -->
<div id="REFRN00517" class="sect2"><a id="sthref3982"></a>
<h2 class="sect2">checkpoint completed<a id="sthref3983"></a></h2>
<p>A session waits for a checkpoint to complete. This could happen, for example, during a close database or a local checkpoint.</p>
<p><span class="bold">Wait Time:</span> 5 seconds</p>
<p><span class="bold">Parameters:</span> None</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink HABPT4907" href="../../server.112/e10803/config_dg.htm#HABPT4907"><span class="italic">Oracle Database High Availability Best Practices</span></a> for more information about this wait event</div>
</div>
<!-- class="sect2" -->
<div id="REFRN00518" class="sect2"><a id="sthref3984"></a>
<h2 class="sect2">cleanup of aborted processes<a id="sthref3985"></a></h2>
<p>When a process spawn is aborted while the process spawning background is in the middle of spawning, the current session must wait until the pid of the new process is filled in. Once the pid is filled in, then the process spawn can be actually aborted.</p>
<p><span class="bold">Wait Time:</span> Usually 3 seconds</p>
<div class="inftblinformal">
<table class="cellalignment1590" title="cleanup of aborted processes" summary="Described in preceding text" dir="ltr">
<thead>
<tr class="cellalignment1581">
<th class="cellalignment1591" id="r1c1-t22">Parameter</th>
<th class="cellalignment1591" id="r1c2-t22">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r2c1-t22" headers="r1c1-t22"><span class="italic">location</span></td>
<td class="cellalignment1587" headers="r2c1-t22 r1c2-t22">Location of the wait</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" --></div>
<!-- class="sect2" -->
<div id="REFRN00519" class="sect2"><a id="sthref3986"></a>
<h2 class="sect2">control file parallel write<a id="sthref3987"></a></h2>
<p>This event occurs while the session is writing physical blocks to all control files. This happens when:</p>
<ul>
<li>
<p>The session starts a control file transaction (to make sure that the control files are up to date in case the session crashes before committing the control file transaction)</p>
</li>
<li>
<p>The session commits a transaction to a control file</p>
</li>
<li>
<p>Changing a generic entry in the control file, the new value is being written to all control files</p>
</li>
</ul>
<p><span class="bold">Wait Time:</span> The wait time is the time it takes to finish all writes to all control files</p>
<div class="inftblinformal">
<table class="cellalignment1590" title="control file parallel write" summary="This table is described in the preceding text" dir="ltr">
<thead>
<tr class="cellalignment1581">
<th class="cellalignment1591" id="r1c1-t23">Parameter</th>
<th class="cellalignment1591" id="r1c2-t23">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r2c1-t23" headers="r1c1-t23"><span class="italic">files</span></td>
<td class="cellalignment1587" headers="r2c1-t23 r1c2-t23">The number of control files to which the session is writing</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r3c1-t23" headers="r1c1-t23"><span class="italic">blocks</span></td>
<td class="cellalignment1587" headers="r3c1-t23 r1c2-t23">The number of blocks that the session is writing to the control file</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r4c1-t23" headers="r1c1-t23"><span class="italic">requests</span></td>
<td class="cellalignment1587" headers="r4c1-t23 r1c2-t23">The number of I/O requests which the session wants to write</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" --></div>
<!-- class="sect2" -->
<div id="REFRN00520" class="sect2"><a id="sthref3988"></a>
<h2 class="sect2">control file sequential read<a id="sthref3989"></a></h2>
<p>Reading from the control file. This happens in many cases. For example, while:</p>
<ul>
<li>
<p>Making a backup of the control files</p>
</li>
<li>
<p>Sharing information (between instances) from the control file</p>
</li>
<li>
<p>Reading other blocks from the control files</p>
</li>
<li>
<p>Reading the header block</p>
</li>
</ul>
<p><span class="bold">Wait Time:</span> The wait time is the elapsed time of the read</p>
<div class="inftblinformal">
<table class="cellalignment1590" title="control file sequential read" summary="This table is described in the preceding text" dir="ltr">
<thead>
<tr class="cellalignment1581">
<th class="cellalignment1591" id="r1c1-t24">Parameter</th>
<th class="cellalignment1591" id="r1c2-t24">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r2c1-t24" headers="r1c1-t24"><span class="italic">file#</span></td>
<td class="cellalignment1587" headers="r2c1-t24 r1c2-t24">The control file from which the session is reading</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r3c1-t24" headers="r1c1-t24"><span class="italic">block#</span></td>
<td class="cellalignment1587" headers="r3c1-t24 r1c2-t24">Block number in the control file from where the session starts to read. The block size is the physical block size of the port (usually 512 bytes, some UNIX ports have 1 or 2 Kilobytes).</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r4c1-t24" headers="r1c1-t24"><span class="italic">blocks</span></td>
<td class="cellalignment1587" headers="r4c1-t24 r1c2-t24">The number of blocks that the session is trying to read</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" --></div>
<!-- class="sect2" -->
<div id="REFRN00521" class="sect2"><a id="sthref3990"></a>
<h2 class="sect2">control file single write<a id="sthref3991"></a></h2>
<p>This wait is signaled while the control file's shared information is written to disk. This is an atomic operation protected by an enqueue (CF), so that only one session at a time can write to the entire database.</p>
<p><span class="bold">Wait Time:</span> The wait time is the elapsed time of the write</p>
<div class="inftblinformal">
<table class="cellalignment1590" title="control file single write" summary="This table is described in the preceding text" dir="ltr">
<thead>
<tr class="cellalignment1581">
<th class="cellalignment1591" id="r1c1-t25">Parameter</th>
<th class="cellalignment1591" id="r1c2-t25">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r2c1-t25" headers="r1c1-t25"><span class="italic">file#</span></td>
<td class="cellalignment1587" headers="r2c1-t25 r1c2-t25">This identifies the control file to which the session is currently writing</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r3c1-t25" headers="r1c1-t25"><span class="italic">block#</span></td>
<td class="cellalignment1587" headers="r3c1-t25 r1c2-t25">Block number in the control file where the write begins. The block size is the as the physical block size of the port (usually 512 bytes, some UNIX ports have 1 or 2 Kilobytes).</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r4c1-t25" headers="r1c1-t25"><span class="italic">blocks</span></td>
<td class="cellalignment1587" headers="r4c1-t25 r1c2-t25">The number of blocks that the session is trying to write</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" --></div>
<!-- class="sect2" -->
<div id="REFRN00522" class="sect2"><a id="sthref3992"></a>
<h2 class="sect2">cursor: mutex S<a id="sthref3993"></a></h2>
<p>A session waits on this event when it is requesting a mutex in shared mode, when another session is currently holding a this mutex in exclusive mode on the same cursor object.</p>
<div class="inftblinformal">
<table class="cellalignment1590" title="kks:mutex get/rel shared" summary="This table is described in the preceding text" dir="ltr">
<thead>
<tr class="cellalignment1581">
<th class="cellalignment1591" id="r1c1-t26">Parameter</th>
<th class="cellalignment1591" id="r1c2-t26">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r2c1-t26" headers="r1c1-t26"><span class="italic">P1</span></td>
<td class="cellalignment1587" headers="r2c1-t26 r1c2-t26">Hash value of cursor</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r3c1-t26" headers="r1c1-t26"><span class="italic">P2</span></td>
<td class="cellalignment1587" headers="r3c1-t26 r1c2-t26">Mutex value (top 2 bytes contain SID holding mutex in exclusive mode, and bottom two bytes usually hold the value 0)</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r4c1-t26" headers="r1c1-t26"><span class="italic">P3</span></td>
<td class="cellalignment1587" headers="r4c1-t26 r1c2-t26">Mutex where (an internal code locator) OR'd with Mutex Sleeps</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" --></div>
<!-- class="sect2" -->
<div id="REFRN00523" class="sect2"><a id="sthref3994"></a>
<h2 class="sect2">cursor: mutex X<a id="sthref3995"></a></h2>
<p>The session requests the mutex for a cursor object in exclusive mode, and it must wait because the resource is busy. The mutex is busy because either the mutex is being held in exclusive mode by another session or the mutex is being held shared by one or more sessions. The existing mutex holder(s) must release the mutex before the mutex can be granted exclusively.</p>
<div class="inftblinformal">
<table class="cellalignment1590" title="kks:mutex get exclusive" summary="This table is described in the preceding text" dir="ltr">
<thead>
<tr class="cellalignment1581">
<th class="cellalignment1591" id="r1c1-t27">Parameter</th>
<th class="cellalignment1591" id="r1c2-t27">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r2c1-t27" headers="r1c1-t27"><span class="italic">P1</span></td>
<td class="cellalignment1587" headers="r2c1-t27 r1c2-t27">Hash value of cursor</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r3c1-t27" headers="r1c1-t27"><span class="italic">P2</span></td>
<td class="cellalignment1587" headers="r3c1-t27 r1c2-t27">Mutex value (top 2 bytes contain SID holding mutex in exclusive mode, and bottom two bytes usually hold the value 0)</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r4c1-t27" headers="r1c1-t27"><span class="italic">P3</span></td>
<td class="cellalignment1587" headers="r4c1-t27 r1c2-t27">Mutex where (an internal code locator) OR'd with Mutex Sleeps</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" --></div>
<!-- class="sect2" -->
<div id="REFRN00524" class="sect2"><a id="sthref3996"></a>
<h2 class="sect2">cursor: pin S<a id="sthref3997"></a></h2>
<p>A session waits on this event when it wants to update a shared mutex pin and another session is currently in the process of updating a shared mutex pin for the same cursor object.&nbsp; This wait event should rarely be seen because a shared mutex pin update is very fast.</p>
<p><span class="bold">Wait Time:</span> Microseconds</p>
<div class="inftblinformal">
<table class="cellalignment1590" title="cursor: pin S" summary="This table described in preceding text" dir="ltr">
<thead>
<tr class="cellalignment1581">
<th class="cellalignment1591" id="r1c1-t28">Parameter</th>
<th class="cellalignment1591" id="r1c2-t28">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r2c1-t28" headers="r1c1-t28"><span class="italic">P1</span></td>
<td class="cellalignment1587" headers="r2c1-t28 r1c2-t28">Hash value of cursor</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r3c1-t28" headers="r1c1-t28"><span class="italic">P2</span></td>
<td class="cellalignment1587" headers="r3c1-t28 r1c2-t28">Mutex value (top 2 bytes contains SID holding mutex in exclusive mode, and bottom two bytes usually hold the value 0)</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r4c1-t28" headers="r1c1-t28"><span class="italic">P3</span></td>
<td class="cellalignment1587" headers="r4c1-t28 r1c2-t28">Mutex where (an internal code locator) OR'd with Mutex Sleeps</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" --></div>
<!-- class="sect2" -->
<div id="REFRN00525" class="sect2"><a id="sthref3998"></a>
<h2 class="sect2">cursor: pin S wait on X<a id="sthref3999"></a></h2>
<p>A session waits for this event when it is requesting a shared mutex pin and another session is holding an exclusive mutex pin on the same cursor object.</p>
<p><span class="bold">Wait Time:</span> Microseconds</p>
<div class="inftblinformal">
<table class="cellalignment1590" title="cursor: pin S wait on X" summary="This table described in preceding text" dir="ltr">
<thead>
<tr class="cellalignment1581">
<th class="cellalignment1591" id="r1c1-t29">Parameter</th>
<th class="cellalignment1591" id="r1c2-t29">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r2c1-t29" headers="r1c1-t29"><span class="italic">P1</span></td>
<td class="cellalignment1587" headers="r2c1-t29 r1c2-t29">Hash value of cursor</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r3c1-t29" headers="r1c1-t29"><span class="italic">P2</span></td>
<td class="cellalignment1587" headers="r3c1-t29 r1c2-t29">Mutex value (top 2 bytes contains SID holding mutex in exclusive mode, and bottom two bytes usually hold the value 0)</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r4c1-t29" headers="r1c1-t29"><span class="italic">P3</span></td>
<td class="cellalignment1587" headers="r4c1-t29 r1c2-t29">Mutex where (an internal code locator) OR'd with Mutex Sleeps</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" --></div>
<!-- class="sect2" -->
<div id="REFRN00526" class="sect2"><a id="sthref4000"></a>
<h2 class="sect2">cursor: pin X<a id="sthref4001"></a></h2>
<p>A session waits on this event when it is requesting an exclusive mutex pin for a cursor object and it must wait because the resource is busy. The mutex pin for a cursor object can be busy either because a session is already holding it exclusive, or there are one or more sessions which are holding shared mutex pin(s). The exclusive waiter must wait until all holders of the pin for that cursor object have released it, before it can be granted.</p>
<p><span class="bold">Wait Time:</span> Microseconds</p>
<div class="inftblinformal">
<table class="cellalignment1590" title="cursor: pin X" summary="This table described in preceding text" dir="ltr">
<thead>
<tr class="cellalignment1581">
<th class="cellalignment1591" id="r1c1-t30">Parameter</th>
<th class="cellalignment1591" id="r1c2-t30">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r2c1-t30" headers="r1c1-t30"><span class="italic">P1</span></td>
<td class="cellalignment1587" headers="r2c1-t30 r1c2-t30">Hash value of cursor</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r3c1-t30" headers="r1c1-t30"><span class="italic">P2</span></td>
<td class="cellalignment1587" headers="r3c1-t30 r1c2-t30">Mutex value (top 2 bytes contains SID holding mutex in exclusive mode, and bottom two bytes usually hold the value 0)</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r4c1-t30" headers="r1c1-t30"><span class="italic">P3</span></td>
<td class="cellalignment1587" headers="r4c1-t30 r1c2-t30">Mutex where (an internal code locator) OR'd with Mutex Sleeps</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" --></div>
<!-- class="sect2" -->
<div id="REFRN00527" class="sect2"><a id="sthref4002"></a>
<h2 class="sect2">Data Guard: process clean up<a id="sthref4003"></a></h2>
<p>During Data Guard process termination, Data Guard will wait for one second for process cleanup to complete.</p>
</div>
<!-- class="sect2" -->
<div id="REFRN00528" class="sect2"><a id="sthref4004"></a>
<h2 class="sect2">Data Guard: process exit<a id="sthref4005"></a></h2>
<p>During Data Guard process termination, Data Guard will wait for a process to exit before attempting any process cleanup that may be required.&nbsp; It will sleep for one second between each check for process exit.</p>
</div>
<!-- class="sect2" -->
<div id="REFRN00529" class="sect2"><a id="sthref4006"></a>
<h2 class="sect2">Data Guard Broker: single instance<a id="sthref4007"></a></h2>
<p>The Data Guard Broker (DMON) process waits for the other instances in this cluster to complete shutdown before continuing with the broker operation.</p>
<p><span class="bold">Wait Time:</span> Depends on the number of instances, but not exceeding 30 seconds times the number of instances</p>
</div>
<!-- class="sect2" -->
<a id="BABGJGAE"></a>
<div class="sect2"><!-- infolevel="all" infotype="General" -->
<h2 class="sect2">db file asynch I/O submit<a id="sthref4008"></a></h2>
<p>When asynchronous I/O is available, this wait event captures any time spent in submitting I/Os to the underlying storage.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="#BABEHGGC">"db file parallel write"</a></div>
</div>
<!-- class="sect2" -->
<div id="REFRN00530" class="sect2"><a id="sthref4009"></a>
<h2 class="sect2">db file parallel read<a id="sthref4010"></a></h2>
<p>This happens during recovery. It can also happen during buffer prefetching, as an optimization (rather than performing multiple single-block reads). Database blocks that need to be changed as part of recovery are read in parallel from the database.</p>
<p><span class="bold">Wait Time:</span> Wait until all of the I/Os are completed</p>
<div class="inftblinformal">
<table class="cellalignment1590" title="db file parallel read" summary="This table is described in the preceding text" dir="ltr">
<thead>
<tr class="cellalignment1581">
<th class="cellalignment1591" id="r1c1-t32">Parameter</th>
<th class="cellalignment1591" id="r1c2-t32">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r2c1-t32" headers="r1c1-t32"><span class="italic">files</span></td>
<td class="cellalignment1587" headers="r2c1-t32 r1c2-t32">This indicates the number of files to which the session is reading</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r3c1-t32" headers="r1c1-t32"><span class="italic">blocks</span></td>
<td class="cellalignment1587" headers="r3c1-t32 r1c2-t32">This indicates the total number of blocks to be read</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r4c1-t32" headers="r1c1-t32"><span class="italic">requests</span></td>
<td class="cellalignment1587" headers="r4c1-t32 r1c2-t32">This indicates the total number of I/O requests, which will be the same as blocks</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" --></div>
<!-- class="sect2" -->
<a id="BABEHGGC"></a>
<div id="REFRN00531" class="sect2">
<h2 class="sect2">db file parallel write<a id="sthref4011"></a></h2>
<p>This event occurs in the DBWR. It indicates the time that DBWR spends waiting for I/O completion.</p>
<p>If asynchronous I/O is available, then the db file asynch I/O submit wait event captures any time spent in submitting I/Os to the underlying storage.</p>
<p>When asynchronous I/O is not available, db file parallel write captures the time spent during submit and reap.</p>
<p><span class="bold">Wait Time:</span> While there are outstanding I/Os, DBWR waits for some of the writes to complete. DBWR does not wait for all of the outstanding I/Os to complete.</p>
<div class="inftblinformal">
<table class="cellalignment1590" title="db file parallel write" summary="This table is described in the preceding text" dir="ltr">
<thead>
<tr class="cellalignment1581">
<th class="cellalignment1591" id="r1c1-t33">Parameter</th>
<th class="cellalignment1591" id="r1c2-t33">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r2c1-t33" headers="r1c1-t33"><span class="italic">requests</span></td>
<td class="cellalignment1587" headers="r2c1-t33 r1c2-t33">This indicates the total number of I/O requests, which will be the same as blocks</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r3c1-t33" headers="r1c1-t33"><span class="italic">interrupt</span></td>
<td class="cellalignment1587" headers="r3c1-t33 r1c2-t33">&nbsp;</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r4c1-t33" headers="r1c1-t33"><span class="italic">timeout</span></td>
<td class="cellalignment1587" headers="r4c1-t33 r1c2-t33">This indicates the timeout value in hundredths of a second to wait for the I/O completion.</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" -->
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a class="olink PFGRF94444" href="../../server.112/e41573/instance_tune.htm#PFGRF94444"><span class="italic">Oracle Database Performance Tuning Guide</span></a> for information about how this wait event can help identify I/O problems</p>
</li>
<li>
<p><a href="#BABGJGAE">"db file asynch I/O submit"</a></p>
</li>
</ul>
</div>
</div>
<!-- class="sect2" -->
<div id="REFRN00532" class="sect2"><a id="sthref4012"></a>
<h2 class="sect2">db file scattered read<a id="sthref4013"></a></h2>
<p>Similar to <span class="bold">db file sequential read</span>, except that the session is reading multiple data blocks.</p>
<p><span class="bold">Wait Time:</span> The wait time is the actual time it takes to do all of the I/Os</p>
<div class="inftblinformal">
<table class="cellalignment1590" title="db file scattered read" summary="This table is described in the preceding text" dir="ltr">
<thead>
<tr class="cellalignment1581">
<th class="cellalignment1591" id="r1c1-t35">Parameter</th>
<th class="cellalignment1591" id="r1c2-t35">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r2c1-t35" headers="r1c1-t35"><span class="italic">file#</span></td>
<td class="cellalignment1587" headers="r2c1-t35 r1c2-t35">See <a href="waitevents002.htm#i970879">"file#"</a></td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r3c1-t35" headers="r1c1-t35"><span class="italic">block#</span></td>
<td class="cellalignment1587" headers="r3c1-t35 r1c2-t35">See <a href="waitevents002.htm#i970854">"block#"</a></td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r4c1-t35" headers="r1c1-t35"><span class="italic">blocks</span></td>
<td class="cellalignment1587" headers="r4c1-t35 r1c2-t35">The number of blocks that the session is trying to read from the <span class="italic">file#</span> starting at <span class="italic">block#</span></td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" -->
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a class="olink PFGRF94444" href="../../server.112/e41573/instance_tune.htm#PFGRF94444"><span class="italic">Oracle Database Performance Tuning Guide</span></a> for information about how this wait event can help identify I/O problems</p>
</li>
<li>
<p><a class="olink PFGRF94479" href="../../server.112/e41573/instance_tune.htm#PFGRF94479"><span class="italic">Oracle Database Performance Tuning Guide</span></a> for more information about this wait event</p>
</li>
<li>
<p><a class="olink PFGRF94465" href="../../server.112/e41573/instance_tune.htm#PFGRF94465"><span class="italic">Oracle Database Performance Tuning Guide</span></a> for more information about potential causes of this wait event</p>
</li>
</ul>
</div>
</div>
<!-- class="sect2" -->
<div id="REFRN00533" class="sect2"><a id="sthref4014"></a>
<h2 class="sect2">db file sequential read<a id="sthref4015"></a></h2>
<p>The session waits while a sequential read from the database is performed. This event is also used for rebuilding the control file, dumping datafile headers, and getting the database file headers.</p>
<p><span class="bold">Wait Time:</span> The wait time is the actual time it takes to do the I/O</p>
<div class="inftblinformal">
<table class="cellalignment1590" title="db file sequential read" summary="This table is described in the preceding text" dir="ltr">
<thead>
<tr class="cellalignment1581">
<th class="cellalignment1591" id="r1c1-t37">Parameter</th>
<th class="cellalignment1591" id="r1c2-t37">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r2c1-t37" headers="r1c1-t37"><span class="italic">file#</span></td>
<td class="cellalignment1587" headers="r2c1-t37 r1c2-t37">See <a href="waitevents002.htm#i970879">"file#"</a></td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r3c1-t37" headers="r1c1-t37"><span class="italic">block#</span></td>
<td class="cellalignment1587" headers="r3c1-t37 r1c2-t37">See <a href="waitevents002.htm#i970854">"block#"</a></td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r4c1-t37" headers="r1c1-t37"><span class="italic">blocks</span></td>
<td class="cellalignment1587" headers="r4c1-t37 r1c2-t37">This is the number of blocks that the session is trying to read (should be 1)</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" -->
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a class="olink PFGRF94485" href="../../server.112/e41573/instance_tune.htm#PFGRF94485"><span class="italic">Oracle Database Performance Tuning Guide</span></a> and <a class="olink HABPT4907" href="../../server.112/e10803/config_dg.htm#HABPT4907"><span class="italic">Oracle Database High Availability Best Practices</span></a> for more information about this wait event</p>
</li>
<li>
<p><a class="olink PFGRF94444" href="../../server.112/e41573/instance_tune.htm#PFGRF94444"><span class="italic">Oracle Database Performance Tuning Guide</span></a> for information about how this wait event can help identify I/O problems</p>
</li>
<li>
<p><a class="olink PFGRF94465" href="../../server.112/e41573/instance_tune.htm#PFGRF94465"><span class="italic">Oracle Database Performance Tuning Guide</span></a> for more information about potential causes of this wait event</p>
</li>
</ul>
</div>
</div>
<!-- class="sect2" -->
<div id="REFRN00534" class="sect2"><a id="sthref4016"></a>
<h2 class="sect2">db file single write<a id="sthref4017"></a></h2>
<p>This event is used to wait for the writing of the file headers.</p>
<p><span class="bold">Wait Time:</span> The wait time is the actual time it takes to do the I/O</p>
<div class="inftblinformal">
<table class="cellalignment1590" title="db file single write" summary="This table is described in the preceding text" dir="ltr">
<thead>
<tr class="cellalignment1581">
<th class="cellalignment1591" id="r1c1-t39">Parameter</th>
<th class="cellalignment1591" id="r1c2-t39">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r2c1-t39" headers="r1c1-t39"><span class="italic">file#</span></td>
<td class="cellalignment1587" headers="r2c1-t39 r1c2-t39">See <a href="waitevents002.htm#i970879">"file#"</a></td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r3c1-t39" headers="r1c1-t39"><span class="italic">block#</span></td>
<td class="cellalignment1587" headers="r3c1-t39 r1c2-t39">See <a href="waitevents002.htm#i970854">"block#"</a></td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r4c1-t39" headers="r1c1-t39"><span class="italic">blocks</span></td>
<td class="cellalignment1587" headers="r4c1-t39 r1c2-t39">This is the number of blocks that the session is trying to write in <span class="italic">file# starting at block#</span></td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" -->
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink PFGRF94444" href="../../server.112/e41573/instance_tune.htm#PFGRF94444"><span class="italic">Oracle Database Performance Tuning Guide</span></a> for information about how this wait event can help identify I/O problems</div>
</div>
<!-- class="sect2" -->
<div id="REFRN00535" class="sect2"><a id="sthref4018"></a>
<h2 class="sect2">DFS db file lock<a id="sthref4019"></a></h2>
<p>This event occurs only for the DBWR in Real Application Clusters. Each DBWR of every instance holds a global lock on each file in shared mode. The instance that is trying to offline the file will escalate the global lock from shared to exclusive. This signals the other instances to synchronize their SGAs with the control file before the file can be taken offline. The name of this lock is <span class="bold">DF</span> (see <a href="enqueues.htm#g950013">Appendix D, "Oracle Enqueue Names"</a> for more information).</p>
<p><span class="bold">Wait Time:</span> 1 second in loop. The DBWR is waiting in a loop (sleep, check) for the other instances to downgrade to NULL mode. During this time, the DBWR cannot perform other tasks such as writing buffers.</p>
<div class="inftblinformal">
<table class="cellalignment1590" title="DFS db file lock" summary="This table is described in the preceding text" dir="ltr">
<thead>
<tr class="cellalignment1581">
<th class="cellalignment1591" id="r1c1-t41">Parameter</th>
<th class="cellalignment1591" id="r1c2-t41">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r2c1-t41" headers="r1c1-t41"><span class="italic">file</span></td>
<td class="cellalignment1587" headers="r2c1-t41 r1c2-t41">See <a href="waitevents002.htm#i970879">"file#"</a></td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" --></div>
<!-- class="sect2" -->
<div id="REFRN00536" class="sect2"><a id="sthref4020"></a>
<h2 class="sect2">DFS lock handle<a id="sthref4021"></a></h2>
<p>The session waits for the lock handle of a global lock request. The lock handle identifies a global lock. With this lock handle, other operations can be performed on this global lock (to identify the global lock in future operations such as conversions or release). The global lock is maintained by the DLM.</p>
<p><span class="bold">Wait Time:</span> The session waits in a loop until it has obtained the lock handle from the DLM. Inside the loop there is a wait of 0.5 seconds.</p>
<div class="inftblinformal">
<table class="cellalignment1590" title="DFS lock handle" summary="This table is described in the preceding text" dir="ltr">
<thead>
<tr class="cellalignment1581">
<th class="cellalignment1591" id="r1c1-t42">Parameter</th>
<th class="cellalignment1591" id="r1c2-t42">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r2c1-t42" headers="r1c1-t42"><span class="italic">name</span></td>
<td class="cellalignment1587" headers="r2c1-t42 r1c2-t42">See <a href="waitevents002.htm#i970937">"name and type"</a></td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r3c1-t42" headers="r1c1-t42"><span class="italic">mode</span></td>
<td class="cellalignment1587" headers="r3c1-t42 r1c2-t42">See <a href="waitevents002.htm#i970894">"mode"</a></td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r4c1-t42" headers="r1c1-t42"><span class="italic">id1</span></td>
<td class="cellalignment1587" headers="r4c1-t42 r1c2-t42">See <a href="waitevents002.htm#i970885">"id1"</a></td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r5c1-t42" headers="r1c1-t42"><span class="italic">id2</span></td>
<td class="cellalignment1587" headers="r5c1-t42 r1c2-t42">See <a href="waitevents002.htm#i970888">"id2"</a></td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" -->
<p>The session needs to get the lock handle.</p>
</div>
<!-- class="sect2" -->
<div id="REFRN00537" class="sect2"><a id="sthref4022"></a>
<h2 class="sect2">direct path read<a id="sthref4023"></a></h2>
<p>During Direct Path operations the data is asynchronously read from the database files. At some stage the session needs to make sure that all outstanding asynchronous I/O have been completed to disk. This can also happen if during a direct read no more slots are available to store outstanding load requests (a load request could consist of multiple I/Os).</p>
<p><span class="bold">Wait Time:</span> 10 seconds. The session will be posted by the completing asynchronous I/O. It will never wait the entire 10 seconds. The session waits in a tight loop until all outstanding I/Os have completed.</p>
<div class="inftblinformal">
<table class="cellalignment1590" title="direct path read" summary="This table is described in the preceding text" dir="ltr">
<thead>
<tr class="cellalignment1581">
<th class="cellalignment1591" id="r1c1-t43">Parameter</th>
<th class="cellalignment1591" id="r1c2-t43">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r2c1-t43" headers="r1c1-t43"><span class="italic">descriptor address</span></td>
<td class="cellalignment1587" headers="r2c1-t43 r1c2-t43">This is a pointer to the I/O context of outstanding direct I/Os on which the session is currently waiting</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r3c1-t43" headers="r1c1-t43"><span class="italic">first dba</span></td>
<td class="cellalignment1587" headers="r3c1-t43 r1c2-t43">The dba of the oldest I/O in the context referenced by the descriptor address</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r4c1-t43" headers="r1c1-t43"><span class="italic">block cnt</span></td>
<td class="cellalignment1587" headers="r4c1-t43 r1c2-t43">Number of valid buffers in the context referenced by the descriptor address</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" -->
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink PFGRF94488" href="../../server.112/e41573/instance_tune.htm#PFGRF94488"><span class="italic">Oracle Database Performance Tuning Guide</span></a> for more information about this wait event</div>
</div>
<!-- class="sect2" -->
<div id="REFRN00538" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref4024"></a>
<h2 class="sect2">direct path sync<a id="sthref4025"></a></h2>
<p>During Direct Path write operations the data is asynchronously written to the database files. At some point the session needs to ensure that all outstanding asynchronous I/O have been completed to disk. On Unix the fsync command, which synchronizes data to disk, is issued to confirm that all the writes have completed and the data is all on disk.</p>
<p><span class="bold">Wait Time:</span> The time taken for the fsync operation to complete, which normally is the time taken to complete the outstanding I/Os.</p>
<div class="inftblinformal">
<table class="cellalignment1590" title="direct path sync" summary="This table is described in the preceding text" dir="ltr">
<thead>
<tr class="cellalignment1581">
<th class="cellalignment1591" id="r1c1-t45">Parameters</th>
<th class="cellalignment1591" id="r1c2-t45">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r2c1-t45" headers="r1c1-t45"><span class="italic">file#</span></td>
<td class="cellalignment1587" headers="r2c1-t45 r1c2-t45">See <a href="waitevents002.htm#i970879">"file#"</a></td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r3c1-t45" headers="r1c1-t45"><span class="italic">flags</span></td>
<td class="cellalignment1587" headers="r3c1-t45 r1c2-t45">Flags used for debugging purposes</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" --></div>
<!-- class="sect2" -->
<div id="REFRN00539" class="sect2"><a id="sthref4026"></a>
<h2 class="sect2">direct path write<a id="sthref4027"></a></h2>
<p>During Direct Path operations, the data is asynchronously written to the database files. At some stage the session needs to make sure that all outstanding asynchronous I/O have been completed to disk. This can also happen if, during a direct write, no more slots are available to store outstanding load requests (a load request could consist of multiple I/Os).</p>
<p><span class="bold">Wait Time:</span> 10 seconds. The session will be posted by the completing asynchronous I/O. It will never wait the entire 10 seconds. The session waits in a tight loop until all outstanding I/Os have completed.</p>
<div class="inftblinformal">
<table class="cellalignment1590" title="direct path write" summary="This table is described in the preceding text" dir="ltr">
<thead>
<tr class="cellalignment1581">
<th class="cellalignment1591" id="r1c1-t46">Parameter</th>
<th class="cellalignment1591" id="r1c2-t46">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r2c1-t46" headers="r1c1-t46"><span class="italic">descriptor address</span></td>
<td class="cellalignment1587" headers="r2c1-t46 r1c2-t46">This is a pointer to the I/O context of outstanding direct I/Os on which the session is currently waiting</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r3c1-t46" headers="r1c1-t46"><span class="italic">first dba</span></td>
<td class="cellalignment1587" headers="r3c1-t46 r1c2-t46">The dba of the oldest I/O in the context referenced by the descriptor address</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r4c1-t46" headers="r1c1-t46"><span class="italic">block cnt</span></td>
<td class="cellalignment1587" headers="r4c1-t46 r1c2-t46">Number of valid buffers in the context referenced by the descriptor address</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" -->
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink PFGRF94494" href="../../server.112/e41573/instance_tune.htm#PFGRF94494"><span class="italic">Oracle Database Performance Tuning Guide</span></a> for more information about this wait event</div>
</div>
<!-- class="sect2" -->
<div id="REFRN00540" class="sect2"><a id="sthref4028"></a>
<h2 class="sect2">Disk file operations I/O<a id="sthref4029"></a></h2>
<p>This event is used to wait for disk file operations (for example, open, close, seek, and resize). It is also used for miscellaneous I/O operations such as block dumps and password file accesses.</p>
<p><span class="bold">Wait Time:</span> The wait time is the actual time it takes to do the I/O</p>
<div class="inftblinformal">
<table class="cellalignment1590" title="direct path write" summary="This table is described in the preceding text" dir="ltr">
<thead>
<tr class="cellalignment1581">
<th class="cellalignment1591" id="r1c1-t48">Parameter</th>
<th class="cellalignment1591" id="r1c2-t48">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r2c1-t48" headers="r1c1-t48"><span class="italic">FileOperation</span></td>
<td class="cellalignment1587" headers="r2c1-t48 r1c2-t48">Type of file operation</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r3c1-t48" headers="r1c1-t48"><span class="italic">fileno</span></td>
<td class="cellalignment1587" headers="r3c1-t48 r1c2-t48">File identification number</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r4c1-t48" headers="r1c1-t48"><span class="italic">filetype</span></td>
<td class="cellalignment1587" headers="r4c1-t48 r1c2-t48">Type of file (for example, log file, data file, and so on)</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" --></div>
<!-- class="sect2" -->
<div id="REFRN00541" class="sect2"><a id="sthref4030"></a>
<h2 class="sect2">dispatcher shutdown<a id="sthref4031"></a></h2>
<p>During shutdown immediate or normal, the shutdown process must wait for all the dispatchers to shutdown. As each dispatcher is signaled, the session that causes the shutdown is waits on this event until the requested dispatcher is no longer alive.</p>
<p><span class="bold">Wait Time:</span> 1 second</p>
<div class="inftblinformal">
<table class="cellalignment1590" title="dispatcher shutdown" summary="This table is described in the preceding text" dir="ltr">
<thead>
<tr class="cellalignment1581">
<th class="cellalignment1591" id="r1c1-t49">Parameter</th>
<th class="cellalignment1591" id="r1c2-t49">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r2c1-t49" headers="r1c1-t49"><span class="italic">waited</span></td>
<td class="cellalignment1587" headers="r2c1-t49 r1c2-t49">Indicates the cumulative wait time. After 5 minutes, the session writes to the alert and trace files to indicate that there might be a problem.</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" -->
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink SQLRF53141" href="../../server.112/e41084/statements_2014.htm#SQLRF53141"><span class="italic">Oracle Database SQL Language Reference</span></a> for more information about shutting down a dispatcher using the <code dir="ltr">SHUTDOWN</code> clause of the SQL <code dir="ltr">ALTER SYSTEM</code> statement</div>
</div>
<!-- class="sect2" -->
<div id="REFRN00542" class="sect2"><a id="sthref4032"></a>
<h2 class="sect2">dispatcher timer<a id="sthref4033"></a></h2>
<p>This basically means that the dispatcher is idle and waiting for some work to arrive.</p>
<p><span class="bold">Wait Time:</span> 60 seconds</p>
<div class="inftblinformal">
<table class="cellalignment1590" title="dispatcher timer" summary="This table is described in the preceding text" dir="ltr">
<thead>
<tr class="cellalignment1581">
<th class="cellalignment1591" id="r1c1-t51">Parameter</th>
<th class="cellalignment1591" id="r1c2-t51">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r2c1-t51" headers="r1c1-t51"><span class="italic">sleep time</span></td>
<td class="cellalignment1587" headers="r2c1-t51 r1c2-t51">The intended sleep time. The dispatcher will return to work sooner if it is posted by either data arriving on the network or by a post from a shared server process to send data back to the client.</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" -->
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink PFGRF02415" href="../../server.112/e41573/instance_tune.htm#PFGRF02415"><span class="italic">Oracle Database Performance Tuning Guide</span></a> for more information about this wait event</div>
</div>
<!-- class="sect2" -->
<div id="REFRN00543" class="sect2"><a id="sthref4034"></a>
<h2 class="sect2">duplicate cluster key<a id="sthref4035"></a></h2>
<p>It is possible for a race condition to occur when creating a new cluster key. If it is found that another process has put the cluster key into the data/index block, then the session waits and retries. The retry should then find a valid cluster key.</p>
<p><span class="bold">Wait Time:</span> 0.01 seconds</p>
<div class="inftblinformal">
<table class="cellalignment1590" title="duplicate cluster key" summary="This table is described in the preceding text" dir="ltr">
<thead>
<tr class="cellalignment1581">
<th class="cellalignment1591" id="r1c1-t53">Parameter</th>
<th class="cellalignment1591" id="r1c2-t53">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r2c1-t53" headers="r1c1-t53"><span class="italic">dba</span></td>
<td class="cellalignment1587" headers="r2c1-t53 r1c2-t53">The dba of the block into which the session is trying to insert a cluster key</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" --></div>
<!-- class="sect2" -->
<div id="REFRN00544" class="sect2"><a id="sthref4036"></a>
<h2 class="sect2">enq: OW - initialization<a id="sthref4037"></a></h2>
<p>A session will wait on this event if it is trying to initialize the database wallet, and another session has already begun an initialization.</p>
<p><span class="bold">Wait Time:</span> Total time necessary to initialize the wallet context</p>
<p><span class="bold">Parameters:</span> None</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink PFGRF94465" href="../../server.112/e41573/instance_tune.htm#PFGRF94465"><span class="italic">Oracle Database Performance Tuning Guide</span></a> for more information about potential causes of the enq: OW - initialization wait event</div>
</div>
<!-- class="sect2" -->
<div id="REFRN00545" class="sect2"><a id="sthref4038"></a>
<h2 class="sect2">enq: OW - termination<a id="sthref4039"></a></h2>
<p>A session will wait on this event if it is trying to terminate the database wallet, and another session has already begun a termination.</p>
<p><span class="bold">Wait Time:</span> Total time necessary to deallocate memory used by the wallet context and terminate the context.</p>
<p><span class="bold">Parameters:</span> None</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink PFGRF94465" href="../../server.112/e41573/instance_tune.htm#PFGRF94465"><span class="italic">Oracle Database Performance Tuning Guide</span></a> for more information about potential causes of the enq: OW - termination wait event</div>
</div>
<!-- class="sect2" -->
<div id="REFRN00546" class="sect2"><a id="sthref4040"></a>
<h2 class="sect2">enqueue<a id="sthref4041"></a></h2>
<p>The session is waiting for a local enqueue. The wait is dependent on the name of the enqueue (see <a href="enqueues.htm#g950013">Appendix D, "Oracle Enqueue Names"</a>).</p>
<p><span class="bold">Wait Time:</span> Depends on the enqueue name</p>
<div class="inftblinformal">
<table class="cellalignment1590" title="enqueue" summary="This table is described in the preceding text" dir="ltr">
<thead>
<tr class="cellalignment1581">
<th class="cellalignment1591" id="r1c1-t56">Parameter</th>
<th class="cellalignment1591" id="r1c2-t56">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r2c1-t56" headers="r1c1-t56"><span class="italic">name</span></td>
<td class="cellalignment1587" headers="r2c1-t56 r1c2-t56">See <a href="waitevents002.htm#i970937">"name and type"</a></td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r3c1-t56" headers="r1c1-t56"><span class="italic">mode</span></td>
<td class="cellalignment1587" headers="r3c1-t56 r1c2-t56">See <a href="waitevents002.htm#i970894">"mode"</a></td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" -->
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink PFGRF94465" href="../../server.112/e41573/instance_tune.htm#PFGRF94465"><span class="italic">Oracle Database Performance Tuning Guide</span></a> for more information about potential causes of an enqueue wait event</div>
</div>
<!-- class="sect2" -->
<div id="REFRN00547" class="sect2"><a id="sthref4042"></a>
<h2 class="sect2">flashback buf free by RVWR<a id="sthref4043"></a></h2>
<p>This wait event only occurs when Flashback Database is turned on. A session waits for recovery writer (RVWR) to write flashback data to the flashback logs on disk because the buffers are full. Until RVWR can free up the buffers, the session may need to wait.</p>
<p>If this event becomes a top wait event for the database, it is typically because the file system or storage system for the Fast Recovery Area does not support enough bandwidth for Oracle to write the flashback database logs. Refer to <a class="olink BRADV599" href="../../backup.112/e10642/flashdb.htm#BRADV599"><span class="italic">Oracle Database Backup and Recovery User's Guide</span></a> for tuning considerations.</p>
<p><span class="bold">Wait Time:</span> 1 second</p>
<p><span class="bold">Parameters:</span> None</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink HABPT4825" href="../../server.112/e10803/config_db.htm#HABPT4825"><span class="italic">Oracle Database High Availability Best Practices</span></a> for more information about this wait event</div>
</div>
<!-- class="sect2" -->
<div id="REFRN00548" class="sect2"><a id="sthref4044"></a>
<h2 class="sect2">flashback logfile sync<a id="sthref4045"></a></h2>
<p>Waits for flashback database data to be written to disk.</p>
<p><span class="bold">Wait Time:</span> Includes RVWR writing the flashback database data and posting this process</p>
<p><span class="bold">Parameters:</span> None</p>
</div>
<!-- class="sect2" -->
<div id="REFRN00549" class="sect2"><a id="sthref4046"></a>
<h2 class="sect2">free buffer waits<a id="sthref4047"></a></h2>
<p>This will happen if:</p>
<ul>
<li>
<p>All buffer gets have been suspended. This could happen when a file was read-only and is now read-write. All the existing buffers need to be invalidated since they are not linked to lock elements (needed when mounted parallel (shared)). So cache buffers are not assigned to data block addresses until the invalidation is finished.</p>
</li>
<li>
<p>The session moved some dirty buffers to the dirty queue and now this dirty queue is full. The dirty queue needs to be written first. The session will wait on this event and try again to find a free buffer</p>
</li>
<li>
<p>This also happens after inspecting <span class="bold">free buffer inspected</span> buffers. If no free buffer is found, Oracle waits for one second, and then tries to get the buffer again (depends on the context). For more information, see <a href="stats002.htm#i30175">free buffer inspected</a>.</p>
</li>
</ul>
<p><span class="bold">Wait Time</span>: 1 second</p>
<div class="inftblinformal">
<table class="cellalignment1590" title="free buffer waits" summary="This table is described in the preceding text" dir="ltr">
<thead>
<tr class="cellalignment1581">
<th class="cellalignment1591" id="r1c1-t59">Parameter</th>
<th class="cellalignment1591" id="r1c2-t59">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r2c1-t59" headers="r1c1-t59"><span class="italic">file#</span></td>
<td class="cellalignment1587" headers="r2c1-t59 r1c2-t59">See <a href="waitevents002.htm#i970879">"file#"</a></td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r3c1-t59" headers="r1c1-t59"><span class="italic">block#</span></td>
<td class="cellalignment1587" headers="r3c1-t59 r1c2-t59">See <a href="waitevents002.htm#i970854">"block#"</a></td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" -->
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink PFGRF94465" href="../../server.112/e41573/instance_tune.htm#PFGRF94465"><span class="italic">Oracle Database Performance Tuning Guide</span></a> for more information about potential causes of the free buffer waits wait event</div>
</div>
<!-- class="sect2" -->
<div id="REFRN00550" class="sect2"><a id="sthref4048"></a>
<h2 class="sect2">free global transaction table entry<a id="sthref4049"></a></h2>
<p>The session is waiting for a free slot in the global transaction table (used by the Distributed Database option). It will wait for 1 second and try again.</p>
<p><span class="bold">Wait Time:</span> 1 second</p>
<div class="inftblinformal">
<table class="cellalignment1590" title="free global transaction table entry" summary="This table is described in the preceding text" dir="ltr">
<thead>
<tr class="cellalignment1581">
<th class="cellalignment1591" id="r1c1-t61">Parameter</th>
<th class="cellalignment1591" id="r1c2-t61">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r2c1-t61" headers="r1c1-t61"><span class="italic">tries</span></td>
<td class="cellalignment1587" headers="r2c1-t61 r1c2-t61">The number of times the session tried to find a free slot in the global transaction table</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" --></div>
<!-- class="sect2" -->
<div id="REFRN00551" class="sect2"><a id="sthref4050"></a>
<h2 class="sect2">free process state object<a id="sthref4051"></a></h2>
<p>Used during the creation of a process. The session will scan the process table and look for a free process slot. If none can be found, PMON is posted to check if all the processes currently in the process table are still alive. If there are dead processes, then PMON will clean them and make the process slot available to new processes. The waiting process will then rescan the process table to find the new slot.</p>
<p><span class="bold">Wait Time:</span> 1 second</p>
<p><span class="bold">Parameters:</span> None</p>
</div>
<!-- class="sect2" -->
<div id="REFRN00552" class="sect2"><a id="sthref4052"></a>
<h2 class="sect2">gc recovery quiesce<a id="sthref4053"></a></h2>
<p>Instance recovery is waiting for a global cache operation to complete.</p>
<p><span class="bold">Wait Time:</span> The total elapsed time for the global cache operation to complete</p>
<div class="inftblinformal">
<table class="cellalignment1590" title="global cache open s" summary="This table is described in the preceding text" dir="ltr">
<thead>
<tr class="cellalignment1581">
<th class="cellalignment1591" id="r1c1-t62">Parameter</th>
<th class="cellalignment1591" id="r1c2-t62">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r2c1-t62" headers="r1c1-t62"><span class="italic">file#</span></td>
<td class="cellalignment1587" headers="r2c1-t62 r1c2-t62">See <a href="waitevents002.htm#i970879">"file#"</a></td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r3c1-t62" headers="r1c1-t62"><span class="italic">block#</span></td>
<td class="cellalignment1587" headers="r3c1-t62 r1c2-t62">See <a href="waitevents002.htm#i970854">"block#"</a></td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r4c1-t62" headers="r1c1-t62"><span class="italic">class</span></td>
<td class="cellalignment1587" headers="r4c1-t62 r1c2-t62">See <a href="waitevents002.htm#i970870">"class"</a></td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" --></div>
<!-- class="sect2" -->
<div id="REFRN00553" class="sect2"><a id="sthref4054"></a>
<h2 class="sect2">GCS lock open S<a id="sthref4055"></a></h2>
<p>The session waits for a resource get in <code dir="ltr">SHARED</code> mode on the block identified by file# and block#.</p>
<p><span class="bold">Wait Time:</span> 1 second</p>
<div class="inftblinformal">
<table class="cellalignment1590" title="global cache open s" summary="This table is described in the preceding text" dir="ltr">
<thead>
<tr class="cellalignment1581">
<th class="cellalignment1591" id="r1c1-t63">Parameter</th>
<th class="cellalignment1591" id="r1c2-t63">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r2c1-t63" headers="r1c1-t63"><span class="italic">file#</span></td>
<td class="cellalignment1587" headers="r2c1-t63 r1c2-t63">See <a href="waitevents002.htm#i970879">"file#"</a></td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r3c1-t63" headers="r1c1-t63"><span class="italic">block#</span></td>
<td class="cellalignment1587" headers="r3c1-t63 r1c2-t63">See <a href="waitevents002.htm#i970854">"block#"</a></td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r4c1-t63" headers="r1c1-t63"><span class="italic">class</span></td>
<td class="cellalignment1587" headers="r4c1-t63 r1c2-t63">See <a href="waitevents002.htm#i970870">"class"</a></td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" --></div>
<!-- class="sect2" -->
<div id="REFRN00554" class="sect2"><a id="sthref4056"></a>
<h2 class="sect2">GCS lock open X<a id="sthref4057"></a></h2>
<p>The session waits for a resource get in <code dir="ltr">EXCLUSIVE</code> mode on the block identified by file# and block#.</p>
<p><span class="bold">Wait Time:</span> 1 second</p>
<div class="inftblinformal">
<table class="cellalignment1590" title="global cache open x" summary="This table is described in the preceding text" dir="ltr">
<thead>
<tr class="cellalignment1581">
<th class="cellalignment1591" id="r1c1-t64">Parameter</th>
<th class="cellalignment1591" id="r1c2-t64">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r2c1-t64" headers="r1c1-t64"><span class="italic">file#</span></td>
<td class="cellalignment1587" headers="r2c1-t64 r1c2-t64">See <a href="waitevents002.htm#i970879">"file#"</a></td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r3c1-t64" headers="r1c1-t64"><span class="italic">block#</span></td>
<td class="cellalignment1587" headers="r3c1-t64 r1c2-t64">See <a href="waitevents002.htm#i970854">"block#"</a></td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r4c1-t64" headers="r1c1-t64"><span class="italic">lenum</span></td>
<td class="cellalignment1587" headers="r4c1-t64 r1c2-t64">See <a href="waitevents002.htm#i20013">"le"</a></td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" --></div>
<!-- class="sect2" -->
<div id="REFRN00555" class="sect2"><a id="sthref4058"></a>
<h2 class="sect2">gcs remastering wait for drop pkey<a id="sthref4059"></a></h2>
<p>A session dropping an object waits on the lock manager daemon (LMD) to remove the object's affinity to an instance.</p>
<p>Wait Time: 20 hundredths of a second</p>
<div class="inftblinformal">
<table class="cellalignment1590" title="global cache busy" summary="This table is described in the preceding text" dir="ltr">
<thead>
<tr class="cellalignment1581">
<th class="cellalignment1591" id="r1c1-t65">Parameter</th>
<th class="cellalignment1591" id="r1c2-t65">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r2c1-t65" headers="r1c1-t65"><span class="italic">pkey</span></td>
<td class="cellalignment1587" headers="r2c1-t65 r1c2-t65">The object id of the database object being dropped</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" --></div>
<!-- class="sect2" -->
<div id="REFRN00556" class="sect2"><a id="sthref4060"></a>
<h2 class="sect2">global cache busy<a id="sthref4061"></a></h2>
<p>The session waits to convert a buffer from Shared Current to Exclusive Current status.</p>
<p><span class="bold">Wait Time:</span> 1 second</p>
<div class="inftblinformal">
<table class="cellalignment1590" title="global cache busy" summary="This table is described in the preceding text" dir="ltr">
<thead>
<tr class="cellalignment1581">
<th class="cellalignment1591" id="r1c1-t66">Parameter</th>
<th class="cellalignment1591" id="r1c2-t66">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r2c1-t66" headers="r1c1-t66"><span class="italic">file#</span></td>
<td class="cellalignment1587" headers="r2c1-t66 r1c2-t66">See <a href="waitevents002.htm#i970879">"file#"</a></td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r3c1-t66" headers="r1c1-t66"><span class="italic">block#</span></td>
<td class="cellalignment1587" headers="r3c1-t66 r1c2-t66">See <a href="waitevents002.htm#i970854">"block#"</a></td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r4c1-t66" headers="r1c1-t66"><span class="italic">le</span></td>
<td class="cellalignment1587" headers="r4c1-t66 r1c2-t66">See "lenum" on page&nbsp;A-8</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" --></div>
<!-- class="sect2" -->
<div id="REFRN00557" class="sect2"><a id="sthref4062"></a>
<h2 class="sect2">global cache lock cleanup<a id="sthref4063"></a></h2>
<p>PMON is waiting for an LCK process to cleanup the lock context after a foreground process died while doing a global cache lock operation.</p>
<p><span class="bold">Wait Time:</span> 1 second</p>
<div class="inftblinformal">
<table class="cellalignment1590" title="global cache lock cleanup" summary="This table is described in the preceding text" dir="ltr">
<thead>
<tr class="cellalignment1581">
<th class="cellalignment1591" id="r1c1-t67">Parameter</th>
<th class="cellalignment1591" id="r1c2-t67">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r2c1-t67" headers="r1c1-t67"><span class="italic">file#</span></td>
<td class="cellalignment1587" headers="r2c1-t67 r1c2-t67">See <a href="waitevents002.htm#i970879">"file#"</a></td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r3c1-t67" headers="r1c1-t67"><span class="italic">block#</span></td>
<td class="cellalignment1587" headers="r3c1-t67 r1c2-t67">See <a href="waitevents002.htm#i970854">"block#"</a></td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r4c1-t67" headers="r1c1-t67"><span class="italic">lenum</span></td>
<td class="cellalignment1587" headers="r4c1-t67 r1c2-t67">See "lenum" on page&nbsp;A-8</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" --></div>
<!-- class="sect2" -->
<div id="REFRN00558" class="sect2"><a id="sthref4064"></a>
<h2 class="sect2">global cache freelist<a id="sthref4065"></a></h2>
<p>All releasable locks are used and a new one has been requested. To make a resource element available, a resource element is pinged.</p>
<p><span class="bold">Wait Time:</span> The duration of the resource get operation to ping the resource element</p>
<p><span class="bold">Parameters:</span> None</p>
</div>
<!-- class="sect2" -->
<div id="REFRN00559" class="sect2"><a id="sthref4066"></a>
<h2 class="sect2">inactive session<a id="sthref4067"></a></h2>
<p>This event is used for two purposes:</p>
<ul>
<li>
<p>Switching sessions</p>
<p>If a time-out period has been specified, then wait that amount of time for the session to be detached.</p>
</li>
<li>
<p>Killing sessions</p>
<p>From either <code dir="ltr">KILL SESSION</code> or internal request. Having posted a session that it should kill itself, wait for up to 1 minute for the session to terminate.</p>
</li>
</ul>
<p><span class="bold">Wait Time:</span> 1 second</p>
<div class="inftblinformal">
<table class="cellalignment1590" title="inactive session" summary="This table is described in the preceding text" dir="ltr">
<thead>
<tr class="cellalignment1581">
<th class="cellalignment1591" id="r1c1-t68">Parameter</th>
<th class="cellalignment1591" id="r1c2-t68">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r2c1-t68" headers="r1c1-t68"><span class="italic">session#</span></td>
<td class="cellalignment1587" headers="r2c1-t68 r1c2-t68">See <a href="waitevents002.htm#i970951">"session#"</a></td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r3c1-t68" headers="r1c1-t68"><span class="italic">waited</span></td>
<td class="cellalignment1587" headers="r3c1-t68 r1c2-t68">See <a href="waitevents002.htm#i970957">"waited"</a></td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" --></div>
<!-- class="sect2" -->
<div id="REFRN00560" class="sect2"><a id="sthref4068"></a>
<h2 class="sect2">inactive transaction branch<a id="sthref4069"></a></h2>
<p>The session waits for a transaction branch that is currently used by another session.</p>
<p><span class="bold">Wait Time:</span> 1 second</p>
<div class="inftblinformal">
<table class="cellalignment1590" title="inactive transaction branch" summary="This table is described in the preceding text" dir="ltr">
<thead>
<tr class="cellalignment1581">
<th class="cellalignment1591" id="r1c1-t69">Parameter</th>
<th class="cellalignment1591" id="r1c2-t69">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r2c1-t69" headers="r1c1-t69"><span class="italic">branch#</span></td>
<td class="cellalignment1587" headers="r2c1-t69 r1c2-t69">The serial number of the transaction for which the session is waiting</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r3c1-t69" headers="r1c1-t69"><span class="italic">waited</span></td>
<td class="cellalignment1587" headers="r3c1-t69 r1c2-t69">See <a href="waitevents002.htm#i970957">"waited"</a></td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" --></div>
<!-- class="sect2" -->
<div id="REFRN00561" class="sect2"><a id="sthref4070"></a>
<h2 class="sect2">index block split<a id="sthref4071"></a></h2>
<p>While trying to find an index key in an index block, Oracle noticed that the index block was being split. Oracle will wait for the split to finish and try to find the key again.</p>
<p><span class="bold">Wait Time:</span> The session will yield the CPU, so there is no actual waiting time</p>
<div class="inftblinformal">
<table class="cellalignment1590" title="index block split" summary="This table is described in the preceding text" dir="ltr">
<thead>
<tr class="cellalignment1581">
<th class="cellalignment1591" id="r1c1-t70">Parameter</th>
<th class="cellalignment1591" id="r1c2-t70">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r2c1-t70" headers="r1c1-t70"><span class="italic">rootdba</span></td>
<td class="cellalignment1587" headers="r2c1-t70 r1c2-t70">The root of the index</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r3c1-t70" headers="r1c1-t70"><span class="italic">level</span></td>
<td class="cellalignment1587" headers="r3c1-t70 r1c2-t70">This is the level of the block that the session is trying to split in the index. The leaf blocks are level 0. If the level is &gt; 0, it is a branch block. (The root block can be considered a special branch block).</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r4c1-t70" headers="r1c1-t70"><span class="italic">childdba</span></td>
<td class="cellalignment1587" headers="r4c1-t70 r1c2-t70">The block that the session is trying to split</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" -->
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink PFGRF94503" href="../../server.112/e41573/instance_tune.htm#PFGRF94503"><span class="italic">Oracle Database Performance Tuning Guide</span></a> for more information about index block splits</div>
</div>
<!-- class="sect2" -->
<div id="REFRN00562" class="sect2"><a id="sthref4072"></a>
<h2 class="sect2">instance state change<a id="sthref4073"></a></h2>
<p>The session waits for SMON to enable or disable cache or transaction recovery. This usually happens during <code dir="ltr">ALTER DATABASE OPEN</code> or <code dir="ltr">CLOSE</code>.</p>
<p><span class="bold">Wait Time:</span> Wait time depends on the amount of time the action takes (that is, the amount of recovery needed)</p>
<div class="inftblinformal">
<table class="cellalignment1590" title="instance state change" summary="This table is described in the preceding text" dir="ltr">
<thead>
<tr class="cellalignment1581">
<th class="cellalignment1591" id="r1c1-t72">Parameter</th>
<th class="cellalignment1591" id="r1c2-t72">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r2c1-t72" headers="r1c1-t72"><span class="italic">layer</span></td>
<td class="cellalignment1587" headers="r2c1-t72 r1c2-t72">This value can be 1 or 2. If 1, it means that the transaction layer wants transaction recovery to be performed. If 2, it means that cache recovery will be performed.</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r3c1-t72" headers="r1c1-t72"><span class="italic">value</span></td>
<td class="cellalignment1587" headers="r3c1-t72 r1c2-t72">This value can be 0 (disable) or 1 (enable)</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r4c1-t72" headers="r1c1-t72"><span class="italic">waited</span></td>
<td class="cellalignment1587" headers="r4c1-t72 r1c2-t72">The number of seconds waited so far</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" --></div>
<!-- class="sect2" -->
<div id="REFRN00563" class="sect2"><a id="sthref4074"></a>
<h2 class="sect2">io done<a id="sthref4075"></a></h2>
<p>The session waits for an I/O to complete or it waits for a slave process to become available to submit the I/O request. This event occurs on platforms that do not support asynchronous I/O.</p>
<p><span class="bold">Wait Time:</span> 50 milliseconds</p>
<div class="inftblinformal">
<table class="cellalignment1590" title="io done" summary="This table is described in the preceding text" dir="ltr">
<thead>
<tr class="cellalignment1581">
<th class="cellalignment1591" id="r1c1-t73">Parameter</th>
<th class="cellalignment1591" id="r1c2-t73">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r2c1-t73" headers="r1c1-t73"><span class="italic">msg ptr</span></td>
<td class="cellalignment1587" headers="r2c1-t73 r1c2-t73">A pointer to the I/O request</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" --></div>
<!-- class="sect2" -->
<div id="REFRN00564" class="sect2"><a id="sthref4076"></a>
<h2 class="sect2">kcl bg acks<a id="sthref4077"></a></h2>
<p>The session waits for the background LCK process(es) to finish what they are doing. For example:</p>
<ul>
<li>
<p>Lock recovery</p>
</li>
<li>
<p>Initializing the locks (start up)</p>
</li>
<li>
<p>Finalizing the locks (shut down)</p>
</li>
</ul>
<p><span class="bold">Wait Time:</span> 10 seconds</p>
<div class="inftblinformal">
<table class="cellalignment1590" title="kcl bg acks" summary="This table is described in the preceding text" dir="ltr">
<thead>
<tr class="cellalignment1581">
<th class="cellalignment1591" id="r1c1-t74">Parameter</th>
<th class="cellalignment1591" id="r1c2-t74">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r2c1-t74" headers="r1c1-t74"><span class="italic">count</span></td>
<td class="cellalignment1587" headers="r2c1-t74 r1c2-t74">The number of LCK processes that have finished</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r3c1-t74" headers="r1c1-t74"><span class="italic">loops</span></td>
<td class="cellalignment1587" headers="r3c1-t74 r1c2-t74">The number times the process had to wait for the LCK processes to finish what they were doing</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" --></div>
<!-- class="sect2" -->
<div id="REFRN00565" class="sect2"><a id="sthref4078"></a>
<h2 class="sect2">ksxr wait for mount shared<a id="sthref4079"></a></h2>
<p>The cross instance broadcast facility of this Oracle instance is waiting for the database mount in shared mode to complete.</p>
<p><span class="bold">Wait Time:</span> The time taken for the instance to mount. An indefinite wait on this event implies that the instance startup is hanging.</p>
</div>
<!-- class="sect2" -->
<div id="REFRN00566" class="sect2"><a id="sthref4080"></a>
<h2 class="sect2">ktm: instance recovery<a id="sthref4081"></a></h2>
<p>The session waits for SMON to finish the instance, transaction recovery, or sort segment cleanup.</p>
<p><span class="bold">Wait Time:</span> The wait time can vary and depends on the amount of recovery needed</p>
<div class="inftblinformal">
<table class="cellalignment1590" title="instance recovery" summary="This table is described in the preceding text" dir="ltr">
<thead>
<tr class="cellalignment1581">
<th class="cellalignment1591" id="r1c1-t75">Parameter</th>
<th class="cellalignment1591" id="r1c2-t75">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r2c1-t75" headers="r1c1-t75"><span class="italic">undo segment#</span></td>
<td class="cellalignment1587" headers="r2c1-t75 r1c2-t75">If the value is 0, SMON is probably performing instance recovery. If P1 &gt; 0, use this query to find the undo segment:
<pre dir="ltr">
select *
from v$rollstat
where usn = <span class="italic">undo segment#</span>;
</pre></td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" --></div>
<!-- class="sect2" -->
<div id="REFRN00567" class="sect2"><a id="sthref4082"></a>
<h2 class="sect2">latch activity<a id="sthref4083"></a></h2>
<p>This event is used as part of the process of determining whether a latch needs to be cleaned.</p>
<p><span class="bold">Wait Time:</span> 0.05 to 0.1 seconds</p>
<div class="inftblinformal">
<table class="cellalignment1590" title="latch activity" summary="This table is described in the preceding text" dir="ltr">
<thead>
<tr class="cellalignment1581">
<th class="cellalignment1591" id="r1c1-t76">Parameter</th>
<th class="cellalignment1591" id="r1c2-t76">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r2c1-t76" headers="r1c1-t76"><span class="italic">address</span></td>
<td class="cellalignment1587" headers="r2c1-t76 r1c2-t76">The address of the latch that is being checked</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r3c1-t76" headers="r1c1-t76"><span class="italic">number</span></td>
<td class="cellalignment1587" headers="r3c1-t76 r1c2-t76">The latch number of the latch that has activity. To find more information on the latch, use the following SQL statement:
<pre dir="ltr">
select *
from v$latchname
where latch# = <span class="italic">number</span>;
</pre></td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r4c1-t76" headers="r1c1-t76"><span class="italic">process#</span></td>
<td class="cellalignment1587" headers="r4c1-t76 r1c2-t76">If this is 0, it is the first phase of the in-flux tests</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" -->
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink PFGRF94516" href="../../server.112/e41573/instance_tune.htm#PFGRF94516"><span class="italic">Oracle Database Performance Tuning Guide</span></a> for more information about latch wait events</div>
</div>
<!-- class="sect2" -->
<div id="REFRN00568" class="sect2"><a id="sthref4084"></a>
<h2 class="sect2">latch free<a id="sthref4085"></a></h2>
<p>The process waits for a latch that is currently busy (held by another process).</p>
<p><span class="bold">Wait Time:</span> The wait time increases exponentially and does not include spinning on the latch (active waiting). The maximum wait time also depends on the number of latches that the process is holding. There is an incremental wait of up to 2 seconds.</p>
<div class="inftblinformal">
<table class="cellalignment1590" title="latch free" summary="This table is described in the preceding text" dir="ltr">
<thead>
<tr class="cellalignment1581">
<th class="cellalignment1591" id="r1c1-t78">Parameter</th>
<th class="cellalignment1591" id="r1c2-t78">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r2c1-t78" headers="r1c1-t78"><span class="italic">address</span></td>
<td class="cellalignment1587" headers="r2c1-t78 r1c2-t78">The address of the latch for which the process is waiting</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r3c1-t78" headers="r1c1-t78"><span class="italic">number</span></td>
<td class="cellalignment1587" headers="r3c1-t78 r1c2-t78">The latch number that indexes in the <code dir="ltr">V$LATCHNAME</code> view.To find more information on the latch, use the following SQL statement:
<pre dir="ltr">
select *
from v$latchname
where latch# = <span class="italic">number</span>;
</pre></td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r4c1-t78" headers="r1c1-t78"><span class="italic">tries</span></td>
<td class="cellalignment1587" headers="r4c1-t78 r1c2-t78">A count of the number of times the process tried to get the latch (slow with spinning) and the process has to sleep</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" -->
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink PFGRF94516" href="../../server.112/e41573/instance_tune.htm#PFGRF94516"><span class="italic">Oracle Database Performance Tuning Guide</span></a> for more information about latch wait events</div>
</div>
<!-- class="sect2" -->
<div id="REFRN00569" class="sect2"><a id="sthref4086"></a>
<h2 class="sect2">library cache load lock<a id="sthref4087"></a></h2>
<p>The session tries to find the load lock for the database object so that it can load the object. The load lock is always obtained in Exclusive mode, so that no other process can load the same object. If the load lock is busy the session will wait on this event until the lock becomes available.</p>
<p><span class="bold">Wait Time:</span> 3 seconds (1 second for PMON)</p>
<div class="inftblinformal">
<table class="cellalignment1590" title="library cache load lock" summary="This table is described in the preceding text" dir="ltr">
<thead>
<tr class="cellalignment1581">
<th class="cellalignment1591" id="r1c1-t80">Parameter</th>
<th class="cellalignment1591" id="r1c2-t80">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r2c1-t80" headers="r1c1-t80"><span class="italic">object address</span></td>
<td class="cellalignment1587" headers="r2c1-t80 r1c2-t80">Address of the object being loaded</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r3c1-t80" headers="r1c1-t80"><span class="italic">lock address</span></td>
<td class="cellalignment1587" headers="r3c1-t80 r1c2-t80">Address of load lock being used</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r4c1-t80" headers="r1c1-t80"><span class="italic">mask</span></td>
<td class="cellalignment1587" headers="r4c1-t80 r1c2-t80">Indicates which data pieces of the object that needs to be loaded</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" --></div>
<!-- class="sect2" -->
<div id="REFRN00570" class="sect2"><a id="sthref4088"></a>
<h2 class="sect2">library cache lock<a id="sthref4089"></a></h2>
<p>This event controls the concurrency between clients of the library cache. It acquires a lock on the object handle so that either:</p>
<ul>
<li>
<p>One client can prevent other clients from accessing the same object</p>
</li>
<li>
<p>The client can maintain a dependency for a long time (for example, no other client can change the object)</p>
</li>
</ul>
<p>This lock is also obtained to locate an object in the library cache.</p>
<p><span class="bold">Wait Time:</span> 3 seconds (1 second for PMON)</p>
<div class="inftblinformal">
<table class="cellalignment1590" title="library cache lock" summary="This table is described in the preceding text" dir="ltr">
<thead>
<tr class="cellalignment1581">
<th class="cellalignment1591" id="r1c1-t81">Parameter</th>
<th class="cellalignment1591" id="r1c2-t81">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r2c1-t81" headers="r1c1-t81"><span class="italic">handle address</span></td>
<td class="cellalignment1587" headers="r2c1-t81 r1c2-t81">Address of the object being loaded</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r3c1-t81" headers="r1c1-t81"><span class="italic">lock address</span></td>
<td class="cellalignment1587" headers="r3c1-t81 r1c2-t81">Address of the load lock being used. This is not the same thing as a latch or an enqueue, it is a State Object.</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r4c1-t81" headers="r1c1-t81"><span class="italic">mode</span></td>
<td class="cellalignment1587" headers="r4c1-t81 r1c2-t81">Indicates the data pieces of the object which need to be loaded</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r5c1-t81" headers="r1c1-t81"><span class="italic">namespace</span></td>
<td class="cellalignment1587" headers="r5c1-t81 r1c2-t81">See <a href="waitevents002.htm#i970945">"namespace"</a></td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" -->
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a class="olink PFGRF94529" href="../../server.112/e41573/instance_tune.htm#PFGRF94529"><span class="italic">Oracle Database Performance Tuning Guide</span></a> for more information about this wait event</p>
</li>
<li>
<p><a class="olink PFGRF94465" href="../../server.112/e41573/instance_tune.htm#PFGRF94465"><span class="italic">Oracle Database Performance Tuning Guide</span></a> for more information about potential causes of this wait event</p>
</li>
</ul>
</div>
</div>
<!-- class="sect2" -->
<div id="REFRN00571" class="sect2"><a id="sthref4090"></a>
<h2 class="sect2">library cache pin<a id="sthref4091"></a></h2>
<p>This event manages library cache concurrency. Pinning an object causes the heaps to be loaded into memory. If a client wants to modify or examine the object, the client must acquire a pin after the lock.</p>
<p><span class="bold">Wait Time:</span> 3 seconds (1 second for PMON)</p>
<div class="inftblinformal">
<table class="cellalignment1590" title="library cache pin" summary="This table is described in the preceding text" dir="ltr">
<thead>
<tr class="cellalignment1581">
<th class="cellalignment1591" id="r1c1-t83">Parameter</th>
<th class="cellalignment1591" id="r1c2-t83">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r2c1-t83" headers="r1c1-t83"><span class="italic">handle address</span></td>
<td class="cellalignment1587" headers="r2c1-t83 r1c2-t83">Address of the object being loaded</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r3c1-t83" headers="r1c1-t83"><span class="italic">pin address</span></td>
<td class="cellalignment1587" headers="r3c1-t83 r1c2-t83">Address of the load lock being used. This is not the same thing as a latch or an enqueue, it is basically a State Object.</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r4c1-t83" headers="r1c1-t83"><span class="italic">mode</span></td>
<td class="cellalignment1587" headers="r4c1-t83 r1c2-t83">Indicates which data pieces of the object that needs to be loaded</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r5c1-t83" headers="r1c1-t83"><span class="italic">namespace</span></td>
<td class="cellalignment1587" headers="r5c1-t83 r1c2-t83">See <a href="waitevents002.htm#i970945">"namespace"</a></td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" -->
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a class="olink PFGRF02410" href="../../server.112/e41573/instance_tune.htm#PFGRF02410"><span class="italic">Oracle Database Performance Tuning Guide</span></a> for more information about this wait event</p>
</li>
<li>
<p><a class="olink PFGRF94465" href="../../server.112/e41573/instance_tune.htm#PFGRF94465"><span class="italic">Oracle Database Performance Tuning Guide</span></a> for more information about potential causes of this wait event</p>
</li>
</ul>
</div>
</div>
<!-- class="sect2" -->
<div id="REFRN00572" class="sect2"><a id="sthref4092"></a>
<h2 class="sect2">library cache shutdown</h2>
<p>The process shutting down the instance waits for sessions to complete before proceeding with library cache shutdown.</p>
</div>
<!-- class="sect2" -->
<div id="REFRN00573" class="sect2"><a id="sthref4093"></a>
<h2 class="sect2">LMON global data update<a id="sthref4094"></a></h2>
<p>The rolling migration operation is waiting for a response from LMON to acknowledge the global data was updated.</p>
<p><span class="bold">Wait Time:</span> The time it takes for LMON to publish/retrieve the global data associated with a</p>
<p><span class="bold">Parameters:</span> None</p>
</div>
<!-- class="sect2" -->
<div id="REFRN00574" class="sect2"><a id="sthref4095"></a>
<h2 class="sect2">lock manager wait for remote message<a id="sthref4096"></a></h2>
<p>The lock manager waits for a message from a remote lock manager in the same configuration.</p>
<p><span class="bold">Wait Time:</span> The elapsed time of the wait</p>
<div class="inftblinformal">
<table class="cellalignment1590" title="lock manager wait for remote message" summary="This table is described in the preceding text" dir="ltr">
<thead>
<tr class="cellalignment1581">
<th class="cellalignment1591" id="r1c1-t85">Parameter</th>
<th class="cellalignment1591" id="r1c2-t85">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r2c1-t85" headers="r1c1-t85"><span class="italic">waittime</span></td>
<td class="cellalignment1587" headers="r2c1-t85 r1c2-t85">The elapsed time of the actual wait</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" --></div>
<!-- class="sect2" -->
<div id="REFRN00575" class="sect2"><a id="sthref4097"></a>
<h2 class="sect2">Log archive I/O<a id="sthref4098"></a></h2>
<p>Used local archiving of online redo logs (for a production database) or standby redo logs (for a standby database). When the archiving process exhausts its I/O buffers because all of them are being used for on-going I/O's, the wait for an available I/O buffer is captured in this system wait event.</p>
<p><span class="bold">Wait Time:</span> Depends on the speed of the disks</p>
<p><span class="bold">Parameters:</span> None</p>
</div>
<!-- class="sect2" -->
<div id="REFRN00576" class="sect2"><a id="sthref4099"></a>
<h2 class="sect2">log buffer space<a id="sthref4100"></a></h2>
<p>Waiting for space in the log buffer because the session is writing data into the log buffer faster than LGWR can write it out. Consider making the log buffer bigger if it is small, or moving the log files to faster disks such as striped disks.</p>
<p><span class="bold">Wait Time:</span> Usually 1 second, but 5 seconds if it is waiting for a Switch Logfile to complete</p>
<p><span class="bold">Parameters:</span> None</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a class="olink PFGRF94530" href="../../server.112/e41573/instance_tune.htm#PFGRF94530"><span class="italic">Oracle Database Performance Tuning Guide</span></a> for more information about this wait event</p>
</li>
<li>
<p><a class="olink PFGRF94465" href="../../server.112/e41573/instance_tune.htm#PFGRF94465"><span class="italic">Oracle Database Performance Tuning Guide</span></a> for more information about potential causes of the log buffer space wait event</p>
</li>
</ul>
</div>
</div>
<!-- class="sect2" -->
<div id="REFRN00577" class="sect2"><a id="sthref4101"></a>
<h2 class="sect2">log file parallel write<a id="sthref4102"></a></h2>
<p>Writing redo records to the redo log files from the log buffer.</p>
<p><span class="bold">Wait Time:</span> Time it takes for the I/Os to complete. Even though redo records are written in parallel, the parallel write is not complete until the last I/O is on disk.</p>
<div class="inftblinformal">
<table class="cellalignment1590" title="log file parallel write" summary="This table is described in the preceding text" dir="ltr">
<thead>
<tr class="cellalignment1581">
<th class="cellalignment1591" id="r1c1-t87">Parameter</th>
<th class="cellalignment1591" id="r1c2-t87">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r2c1-t87" headers="r1c1-t87"><span class="italic">files</span></td>
<td class="cellalignment1587" headers="r2c1-t87 r1c2-t87">Number of files to be written</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r3c1-t87" headers="r1c1-t87"><span class="italic">blocks</span></td>
<td class="cellalignment1587" headers="r3c1-t87 r1c2-t87">Number of blocks to be written</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r4c1-t87" headers="r1c1-t87"><span class="italic">requests</span></td>
<td class="cellalignment1587" headers="r4c1-t87 r1c2-t87">Number of I/O requests</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" -->
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink PFGRF94444" href="../../server.112/e41573/instance_tune.htm#PFGRF94444"><span class="italic">Oracle Database Performance Tuning Guide</span></a> for information about how this wait event can help identify I/O problems</div>
</div>
<!-- class="sect2" -->
<div id="REFRN00578" class="sect2"><a id="sthref4103"></a>
<h2 class="sect2">log file sequential read<a id="sthref4104"></a></h2>
<p>Waiting for the read from this logfile to return. This is used to read redo records from the log file.</p>
<p><span class="bold">Wait Time:</span> Time it takes to complete the physical I/O (read)</p>
<div class="inftblinformal">
<table class="cellalignment1590" title="log file sequential read" summary="This table is described in the preceding text" dir="ltr">
<thead>
<tr class="cellalignment1581">
<th class="cellalignment1591" id="r1c1-t89">Parameter</th>
<th class="cellalignment1591" id="r1c2-t89">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r2c1-t89" headers="r1c1-t89"><span class="italic">log#</span></td>
<td class="cellalignment1587" headers="r2c1-t89 r1c2-t89">The relative sequence number of the logfiles within a log group (used only when dumping the logfiles)</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r3c1-t89" headers="r1c1-t89"><span class="italic">block#</span></td>
<td class="cellalignment1587" headers="r3c1-t89 r1c2-t89">See <a href="waitevents002.htm#i970854">"block#"</a></td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r4c1-t89" headers="r1c1-t89"><span class="italic">blocks</span></td>
<td class="cellalignment1587" headers="r4c1-t89 r1c2-t89">The number of blocks to read</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" -->
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink HABPT4906" href="../../server.112/e10803/config_dg.htm#HABPT4906"><span class="italic">Oracle Database High Availability Best Practices</span></a> for more information about this wait event</div>
</div>
<!-- class="sect2" -->
<div id="REFRN00579" class="sect2"><a id="sthref4105"></a>
<h2 class="sect2">log file single write<a id="sthref4106"></a></h2>
<p>Waiting for the write to this logfile to complete. This event is used while updating the header of the logfile. It is signaled when adding a log file member and when incrementing sequence numbers.</p>
<p><span class="bold">Wait Time:</span> Time it takes for the physical I/O (write) to complete</p>
<div class="inftblinformal">
<table class="cellalignment1590" title="log file single write" summary="This table is described in the preceding text" dir="ltr">
<thead>
<tr class="cellalignment1581">
<th class="cellalignment1591" id="r1c1-t91">Parameter</th>
<th class="cellalignment1591" id="r1c2-t91">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r2c1-t91" headers="r1c1-t91"><span class="italic">log#</span></td>
<td class="cellalignment1587" headers="r2c1-t91 r1c2-t91">This is the number of the group/log to which the session is currently writing</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r3c1-t91" headers="r1c1-t91"><span class="italic">block#</span></td>
<td class="cellalignment1587" headers="r3c1-t91 r1c2-t91">See <a href="waitevents002.htm#i970854">"block#"</a></td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r4c1-t91" headers="r1c1-t91"><span class="italic">blocks</span></td>
<td class="cellalignment1587" headers="r4c1-t91 r1c2-t91">The number of blocks to write</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" --></div>
<!-- class="sect2" -->
<div id="REFRN00580" class="sect2"><a id="sthref4107"></a>
<h2 class="sect2">log file switch (archiving needed)<a id="sthref4108"></a></h2>
<p>Waiting for a log switch because the log that the LGWR will be switching into has not been archived yet. Check the alert file to make sure that archiving has not stopped due to a failed archive write. To speed archiving, consider adding more archive processes or putting the archive files on striped disks.</p>
<p><span class="bold">Wait Time:</span> 1 second</p>
<p><span class="bold">Parameters:</span> None</p>
</div>
<!-- class="sect2" -->
<div id="REFRN00581" class="sect2"><a id="sthref4109"></a>
<h2 class="sect2">log file switch (checkpoint incomplete)<a id="sthref4110"></a></h2>
<p>Waiting for a log switch because the session cannot wrap into the next log. Wrapping cannot be performed because the checkpoint for that log has not completed.</p>
<p><span class="bold">Wait Time:</span> 1 second</p>
<p><span class="bold">Parameters:</span> None</p>
</div>
<!-- class="sect2" -->
<div id="REFRN00582" class="sect2"><a id="sthref4111"></a>
<h2 class="sect2">log file switch (clearing log file)<a id="sthref4112"></a></h2>
<p>Waiting for a log switch because the log is being cleared due to a <code dir="ltr">CLEAR LOGFILE</code> command or implicit clear logfile executed by recovery.</p>
<p><span class="bold">Wait Time:</span> 1 second</p>
<p><span class="bold">Parameters:</span> None</p>
</div>
<!-- class="sect2" -->
<div id="REFRN00583" class="sect2"><a id="sthref4113"></a>
<h2 class="sect2">log file switch (private strand flush incomplete)<a id="sthref4114"></a></h2>
<p>User sessions trying to generate redo, wait on this event when LGWR waits for DBWR to complete flushing redo from IMU buffers into the log buffer; when DBWR is complete LGWR can then finish writing the current log, and then switch log files.</p>
<p><span class="bold">Wait Time:</span> 1 second</p>
<p><span class="bold">Parameters:</span> None</p>
</div>
<!-- class="sect2" -->
<div id="REFRN00584" class="sect2"><a id="sthref4115"></a>
<h2 class="sect2">log file switch completion<a id="sthref4116"></a></h2>
<p>Waiting for a log switch to complete.</p>
<p><span class="bold">Wait Time:</span> 1 second</p>
<p><span class="bold">Parameters:</span> None</p>
</div>
<!-- class="sect2" -->
<div id="REFRN00585" class="sect2"><a id="sthref4117"></a>
<h2 class="sect2">log file sync<a id="sthref4118"></a></h2>
<p>When a user session commits, the session's redo information needs to be flushed to the redo logfile. The user session will post the LGWR to write the log buffer to the redo log file. When the LGWR has finished writing, it will post the user session.</p>
<p><span class="bold">Wait Time:</span> The wait time includes the writing of the log buffer and the post.</p>
<div class="inftblinformal">
<table class="cellalignment1590" title="log file sync" summary="This table is described in the preceding text" dir="ltr">
<thead>
<tr class="cellalignment1581">
<th class="cellalignment1591" id="r1c1-t92">Parameter</th>
<th class="cellalignment1591" id="r1c2-t92">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r2c1-t92" headers="r1c1-t92"><span class="italic">buffer#</span></td>
<td class="cellalignment1587" headers="r2c1-t92 r1c2-t92">The number of the physical buffer in the redo log buffer that needs to be synchronized</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" -->
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a class="olink PFGRF94534" href="../../server.112/e41573/instance_tune.htm#PFGRF94534"><span class="italic">Oracle Database Performance Tuning Guide</span></a> for more information about this wait event</p>
</li>
<li>
<p><a class="olink PFGRF94465" href="../../server.112/e41573/instance_tune.htm#PFGRF94465"><span class="italic">Oracle Database Performance Tuning Guide</span></a> for more information about potential causes of this wait event</p>
</li>
</ul>
</div>
</div>
<!-- class="sect2" -->
<div id="REFRN00586" class="sect2"><a id="sthref4119"></a>
<h2 class="sect2">log switch/archive<a id="sthref4120"></a></h2>
<p>Used as part of the <code dir="ltr">ALTER SYSTEM ARCHIVE LOG CHANGE</code> <span class="italic">scn</span> statement. The session waits for the current log from all open threads to be archived.</p>
<p><span class="bold">Wait Time:</span> Wait for up to 10 seconds</p>
<div class="inftblinformal">
<table class="cellalignment1590" title="log switch/archive" summary="This table is described in the preceding text" dir="ltr">
<thead>
<tr class="cellalignment1581">
<th class="cellalignment1591" id="r1c1-t94">Parameter</th>
<th class="cellalignment1591" id="r1c2-t94">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r2c1-t94" headers="r1c1-t94"><span class="italic">thread#</span></td>
<td class="cellalignment1587" headers="r2c1-t94 r1c2-t94">The thread number of the thread that is currently archiving its current log</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" --></div>
<!-- class="sect2" -->
<div id="REFRN00587" class="sect2"><a id="sthref4121"></a>
<h2 class="sect2">optimizer stats update retry<a id="sthref4122"></a></h2>
<p>When concurrent sessions try to update optimizer statistics for the same object, all of them except the one that successfully acquired all necessary locks/pins on the library/row cache entries, wait on this wait event and then retry locking after a short period of time. In addition to explicit statistics gathering and maintenance operations using the DBMS_STATS package, Oracle database itself may try to update statistics for some objects, either on behalf of the user or for its own maintenance purposes.</p>
<p><span class="bold">Wait Time:</span> 10 ms</p>
<p><span class="bold">Parameters:</span> None</p>
</div>
<!-- class="sect2" -->
<div id="REFRN00588" class="sect2"><a id="sthref4123"></a>
<h2 class="sect2">parallel recovery change buffer free<a id="sthref4124"></a></h2>
<p>The parallel recovery coordinator is waiting for a change mapping buffer to be released by one of the recovery slaves.</p>
<p><span class="bold">Wait Time:</span> 100ms</p>
<p><span class="bold">Parameters:</span> None</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink HABPT4906" href="../../server.112/e10803/config_dg.htm#HABPT4906"><span class="italic">Oracle Database High Availability Best Practices</span></a> for more information about this wait event</div>
</div>
<!-- class="sect2" -->
<div id="REFRN00589" class="sect2"><a id="sthref4125"></a>
<h2 class="sect2">parallel recovery control message reply<a id="sthref4126"></a></h2>
<p>The parallel recovery coordinator is waiting for all recovery slaves to respond to a synchronous control message.</p>
<p><span class="bold">Wait Time:</span> 100ms</p>
<p><span class="bold">Parameters:</span> None</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink HABPT4906" href="../../server.112/e10803/config_dg.htm#HABPT4906"><span class="italic">Oracle Database High Availability Best Practices</span></a> for more information about this wait event</div>
</div>
<!-- class="sect2" -->
<div id="REFRN00590" class="sect2"><a id="sthref4127"></a>
<h2 class="sect2">parallel recovery coord send blocked<a id="sthref4128"></a></h2>
<p>The parallel recovery coordinator is unable to send a redo change message because the recovery slave is still actively applying redo that it has already received and has not yet released the channel.</p>
<p><span class="bold">Wait Time:</span> 100ms</p>
<p><span class="bold">Parameters:</span> None</p>
</div>
<!-- class="sect2" -->
<div id="REFRN00591" class="sect2"><a id="sthref4129"></a>
<h2 class="sect2">parallel recovery coord wait for reply<a id="sthref4130"></a></h2>
<p>The parallel recovery coordinator is waiting for all recovery slaves to exit.</p>
<p><span class="bold">Wait Time:</span> 100ms</p>
<p><span class="bold">Parameters:</span> None</p>
</div>
<!-- class="sect2" -->
<div id="REFRN00592" class="sect2"><a id="sthref4131"></a>
<h2 class="sect2">parallel recovery coordinator waits for slave cleanup<a id="sthref4132"></a></h2>
<p>The parallel recovery coordinator is waiting for all recovery slaves to exit gracefully.</p>
<p><span class="bold">Wait Time:</span> 10ms</p>
<p><span class="bold">Parameters:</span> None</p>
</div>
<!-- class="sect2" -->
<div id="REFRN00593" class="sect2"><a id="sthref4133"></a>
<h2 class="sect2">parallel recovery read buffer free<a id="sthref4134"></a></h2>
<p>The parallel recovery coordinator is waiting for a log read buffer to be released by all recovery slaves. Only after every recovery slave finishes applying redo from a log read buffer, can the buffer be used by the coordinator to issue the next log read.</p>
<p><span class="bold">Wait Time:</span> 100ms</p>
<p><span class="bold">Parameters:</span> None</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink HABPT4906" href="../../server.112/e10803/config_dg.htm#HABPT4906"><span class="italic">Oracle Database High Availability Best Practices</span></a> for more information about this wait event</div>
</div>
<!-- class="sect2" -->
<div id="REFRN00594" class="sect2"><a id="sthref4135"></a>
<h2 class="sect2">parallel recovery slave next change<a id="sthref4136"></a></h2>
<p>A parallel recovery slave is idle and waiting for the next change message from the coordinator.</p>
<p><span class="bold">Wait Time:</span> 100ms</p>
<p><span class="bold">Parameters:</span> None</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink HABPT4907" href="../../server.112/e10803/config_dg.htm#HABPT4907"><span class="italic">Oracle Database High Availability Best Practices</span></a> for more information about this wait event</div>
</div>
<!-- class="sect2" -->
<div id="REFRN00595" class="sect2"><a id="sthref4137"></a>
<h2 class="sect2">pending global transaction(s)<a id="sthref4138"></a></h2>
<p>This event should happen only during testing. The session waits for pending transactions to clear.</p>
<p><span class="bold">Wait Time:</span> 30 seconds</p>
<div class="inftblinformal">
<table class="cellalignment1590" title="pending global transaction(s)" summary="This table is described in the preceding text" dir="ltr">
<thead>
<tr class="cellalignment1581">
<th class="cellalignment1591" id="r1c1-t99">Parameter</th>
<th class="cellalignment1591" id="r1c2-t99">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r2c1-t99" headers="r1c1-t99"><span class="italic">scans</span></td>
<td class="cellalignment1587" headers="r2c1-t99 r1c2-t99">Number of times the session has scanned the <code dir="ltr">PENDING_TRANS</code>$ table</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" --></div>
<!-- class="sect2" -->
<div id="REFRN00596" class="sect2"><a id="sthref4139"></a>
<h2 class="sect2">pipe get<a id="sthref4140"></a></h2>
<p>The session waits for a message to be received on the pipe or for the pipe timer to expire.</p>
<p><span class="bold">Wait Time:</span> There is a 5 second wake up (check) and the pipe timer set by the user</p>
<div class="inftblinformal">
<table class="cellalignment1590" title="pipe get" summary="This table is described in the preceding text" dir="ltr">
<thead>
<tr class="cellalignment1581">
<th class="cellalignment1591" id="r1c1-t100">Parameter</th>
<th class="cellalignment1591" id="r1c2-t100">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r2c1-t100" headers="r1c1-t100"><span class="italic">handle address</span></td>
<td class="cellalignment1587" headers="r2c1-t100 r1c2-t100">The library cache object handle for this pipe</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r3c1-t100" headers="r1c1-t100"><span class="italic">buffer length</span></td>
<td class="cellalignment1587" headers="r3c1-t100 r1c2-t100">The length of the buffer</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r4c1-t100" headers="r1c1-t100"><span class="italic">timeout</span></td>
<td class="cellalignment1587" headers="r4c1-t100 r1c2-t100">The pipe timer set by the user</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" -->
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink PFGRF94515" href="../../server.112/e41573/instance_tune.htm#PFGRF94515"><span class="italic">Oracle Database Performance Tuning Guide</span></a> for more information about this wait event</div>
</div>
<!-- class="sect2" -->
<div id="REFRN00597" class="sect2"><a id="sthref4141"></a>
<h2 class="sect2">pipe put<a id="sthref4142"></a></h2>
<p>The session waits for the pipe send timer to expire or for space to be made available in the pipe.</p>
<p><span class="bold">Wait Time:</span> There is the 5 second wakeup (check) and the user-supplied timeout value</p>
<div class="inftblinformal">
<table class="cellalignment1590" title="pipe put" summary="This table is described in the preceding text" dir="ltr">
<thead>
<tr class="cellalignment1581">
<th class="cellalignment1591" id="r1c1-t102">Parameter</th>
<th class="cellalignment1591" id="r1c2-t102">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r2c1-t102" headers="r1c1-t102"><span class="italic">handle address</span></td>
<td class="cellalignment1587" headers="r2c1-t102 r1c2-t102">The library cache object handle for this pipe</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r3c1-t102" headers="r1c1-t102"><span class="italic">record length</span></td>
<td class="cellalignment1587" headers="r3c1-t102 r1c2-t102">The length of the record or buffer that has been put into the pipe</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r4c1-t102" headers="r1c1-t102"><span class="italic">timeout</span></td>
<td class="cellalignment1587" headers="r4c1-t102 r1c2-t102">The pipe timer set by the user</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" --></div>
<!-- class="sect2" -->
<div id="REFRN00598" class="sect2"><a id="sthref4143"></a>
<h2 class="sect2">PL/SQL lock timer<a id="sthref4144"></a></h2>
<p>This event is called through the <code dir="ltr">DBMS_LOCK.SLEEP</code> procedure. This event will most likely originate from procedures written by a user.</p>
<p><span class="bold">Wait Time:</span> The wait time is in hundredths of seconds and is dependent on the user context</p>
<div class="inftblinformal">
<table class="cellalignment1590" title="PL/SQL lock timer" summary="This table is described in the preceding text" dir="ltr">
<thead>
<tr class="cellalignment1581">
<th class="cellalignment1591" id="r1c1-t103">Parameter</th>
<th class="cellalignment1591" id="r1c2-t103">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r2c1-t103" headers="r1c1-t103"><span class="italic">duration</span></td>
<td class="cellalignment1587" headers="r2c1-t103 r1c2-t103">The duration that the user specified in the <code dir="ltr">DBMS_LOCK.SLEEP</code> procedure</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" --></div>
<!-- class="sect2" -->
<div id="REFRN00599" class="sect2"><a id="sthref4145"></a>
<h2 class="sect2">pmon timer<a id="sthref4146"></a></h2>
<p>This is the main wait event for PMON. When PMON is idle, it is waiting on this event.</p>
<p><span class="bold">Wait Time:</span> Up to 3 seconds, if not posted before</p>
<div class="inftblinformal">
<table class="cellalignment1590" title="pmon timer" summary="This table is described in the preceding text" dir="ltr">
<thead>
<tr class="cellalignment1581">
<th class="cellalignment1591" id="r1c1-t104">Parameter</th>
<th class="cellalignment1591" id="r1c2-t104">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r2c1-t104" headers="r1c1-t104"><span class="italic">duration</span></td>
<td class="cellalignment1587" headers="r2c1-t104 r1c2-t104">The actual amount of time that the PMON is trying to sleep</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" -->
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink PFGRF94515" href="../../server.112/e41573/instance_tune.htm#PFGRF94515"><span class="italic">Oracle Database Performance Tuning Guide</span></a> for more information about this wait event</div>
</div>
<!-- class="sect2" -->
<div id="REFRN00600" class="sect2"><a id="sthref4147"></a>
<h2 class="sect2">prewarm transfer retry<a id="sthref4148"></a></h2>
<p>Release a hash latch, then wait under this event before attempting to re-acquire the hash latch.</p>
<p><span class="bold">Wait Time:</span> 10ms</p>
<p><span class="bold">Parameters:</span> None</p>
</div>
<!-- class="sect2" -->
<div id="REFRN00601" class="sect2"><a id="sthref4149"></a>
<h2 class="sect2">prior process spawner to be cleaned up<a id="sthref4150"></a></h2>
<p>When a prior process has died while spawning a background, the current process which is trying to spawn new a background must wait until the prior process state is cleaned up.</p>
<p><span class="bold">Wait Time:</span> Usually 3 - 10 seconds</p>
<div class="inftblinformal">
<table class="cellalignment1590" title="prior process monitor to be cleaned up" summary="Described in preceding text" dir="ltr">
<thead>
<tr class="cellalignment1581">
<th class="cellalignment1591" id="r1c1-t106">Parameter</th>
<th class="cellalignment1591" id="r1c2-t106">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r2c1-t106" headers="r1c1-t106"><span class="italic">process_pid</span></td>
<td class="cellalignment1587" headers="r2c1-t106 r1c2-t106">process identifier (see <code dir="ltr">V$PROCESS.PID</code>) of the process whose state needs to be cleaned up.</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r3c1-t106" headers="r1c1-t106"><span class="italic">process_sno</span></td>
<td class="cellalignment1587" headers="r3c1-t106 r1c2-t106">process serial number (see <code dir="ltr">V$PROCESS.SERIAL#</code>) of the process whose state needs to be cleaned up.</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" --></div>
<!-- class="sect2" -->
<div id="REFRN00602" class="sect2"><a id="sthref4151"></a>
<h2 class="sect2">process startup<a id="sthref4152"></a></h2>
<p>Wait for a shared server, Dispatcher, or other background process to start.</p>
<p><span class="bold">Wait Time:</span> Wait up to 1 second for a background process to start. If timed out, then re-wait until 5 minutes have passed and signal an error. If the process has started, the event will acknowledge this.</p>
<div class="inftblinformal">
<table class="cellalignment1590" title="process startup" summary="This table is described in the preceding text" dir="ltr">
<thead>
<tr class="cellalignment1581">
<th class="cellalignment1591" id="r1c1-t107">Parameter</th>
<th class="cellalignment1591" id="r1c2-t107">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r2c1-t107" headers="r1c1-t107"><span class="italic">type</span></td>
<td class="cellalignment1587" headers="r2c1-t107 r1c2-t107">The process type that was started</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r3c1-t107" headers="r1c1-t107"><span class="italic">process#</span></td>
<td class="cellalignment1587" headers="r3c1-t107 r1c2-t107">The process number of the process being started</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r4c1-t107" headers="r1c1-t107"><span class="italic">waited</span></td>
<td class="cellalignment1587" headers="r4c1-t107 r1c2-t107">Cumulative time waited for the process to start</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" --></div>
<!-- class="sect2" -->
<div id="REFRN00603" class="sect2"><a id="sthref4153"></a>
<h2 class="sect2">PX Deque wait<a id="sthref4154"></a></h2>
<p>The process is waiting for a message during a parallel execute.</p>
<p><span class="bold">Wait Time:</span> The wait time depends on how quickly the message arrives. Wait times can vary, but it will normally be a short period of time.</p>
<div class="inftblinformal">
<table class="cellalignment1590" title="PX dequeue wait" summary="This table is described in the preceding text" dir="ltr">
<thead>
<tr class="cellalignment1581">
<th class="cellalignment1591" id="r1c1-t108">Parameter</th>
<th class="cellalignment1591" id="r1c2-t108">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r2c1-t108" headers="r1c1-t108"><span class="italic">reason</span></td>
<td class="cellalignment1587" headers="r2c1-t108 r1c2-t108">The reason for dequeuing</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r3c1-t108" headers="r1c1-t108"><span class="italic">sleeptime</span></td>
<td class="cellalignment1587" headers="r3c1-t108 r1c2-t108">The amount of time that the session slept</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r4c1-t108" headers="r1c1-t108"><span class="italic">loop</span></td>
<td class="cellalignment1587" headers="r4c1-t108 r1c2-t108">The total number of times that the session has slept</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" --></div>
<!-- class="sect2" -->
<div id="REFRN00604" class="sect2"><a id="sthref4155"></a>
<h2 class="sect2">PX qref latch<a id="sthref4156"></a></h2>
<p>Each parallel execution process has a parallel execution qref latch, which needs to be acquired before the queue buffers can be manipulated.</p>
<p><span class="bold">Wait Time:</span> Wait up to 1 second</p>
<div class="inftblinformal">
<table class="cellalignment1590" title="PX qref latch" summary="This table is described in the preceding text" dir="ltr">
<thead>
<tr class="cellalignment1581">
<th class="cellalignment1591" id="r1c1-t109">Parameter</th>
<th class="cellalignment1591" id="r1c2-t109">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r2c1-t109" headers="r1c1-t109"><span class="italic">function</span></td>
<td class="cellalignment1587" headers="r2c1-t109 r1c2-t109">Indicates the type of wait that the session is doing</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r3c1-t109" headers="r1c1-t109"><span class="italic">sleeptime</span></td>
<td class="cellalignment1587" headers="r3c1-t109 r1c2-t109">The amount of time that the session waits (in hundredths of a second)</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r4c1-t109" headers="r1c1-t109"><span class="italic">qref</span></td>
<td class="cellalignment1587" headers="r4c1-t109 r1c2-t109">The address of the process queue for which the session is waits</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" --></div>
<!-- class="sect2" -->
<div id="REFRN00605" class="sect2"><a id="sthref4157"></a>
<h2 class="sect2">PX server shutdown<a id="sthref4158"></a></h2>
<p>During normal or immediate shutdown the parallel execution slaves are posted to shutdown cleanly. If any parallel execution slaves are still alive after 10 seconds, they are killed.</p>
<p><span class="bold">Wait Time:</span> Wait up to 0.5 seconds</p>
<div class="inftblinformal">
<table class="cellalignment1590" title="PX server shutdown" summary="This table is described in the preceding text" dir="ltr">
<thead>
<tr class="cellalignment1581">
<th class="cellalignment1591" id="r1c1-t110">Parameter</th>
<th class="cellalignment1591" id="r1c2-t110">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r2c1-t110" headers="r1c1-t110"><span class="italic">nalive</span></td>
<td class="cellalignment1587" headers="r2c1-t110 r1c2-t110">The number of parallel execution slaves that are still running</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r3c1-t110" headers="r1c1-t110"><span class="italic">sleeptime</span></td>
<td class="cellalignment1587" headers="r3c1-t110 r1c2-t110">The total sleeptime since the session started to wait on this event</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r4c1-t110" headers="r1c1-t110"><span class="italic">loop</span></td>
<td class="cellalignment1587" headers="r4c1-t110 r1c2-t110">The number of times the session waited for this event</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" --></div>
<!-- class="sect2" -->
<div id="REFRN00606" class="sect2"><a id="sthref4159"></a>
<h2 class="sect2">PX signal server<a id="sthref4160"></a></h2>
<p>This event occurs only in Exclusive mode. The query coordinator is signalling the Query Slaves that an error has occurred.</p>
<p><span class="bold">Wait Time:</span> 0.5 seconds</p>
<div class="inftblinformal">
<table class="cellalignment1590" title="PX signal server" summary="This table is described in the preceding text" dir="ltr">
<thead>
<tr class="cellalignment1581">
<th class="cellalignment1591" id="r1c1-t111">Parameter</th>
<th class="cellalignment1591" id="r1c2-t111">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r2c1-t111" headers="r1c1-t111"><span class="italic">serial</span></td>
<td class="cellalignment1587" headers="r2c1-t111 r1c2-t111">The serial number of the slave process queue</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r3c1-t111" headers="r1c1-t111"><span class="italic">error</span></td>
<td class="cellalignment1587" headers="r3c1-t111 r1c2-t111">The error that has occurred</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r4c1-t111" headers="r1c1-t111"><span class="italic">nbusy</span></td>
<td class="cellalignment1587" headers="r4c1-t111 r1c2-t111">The number of slave processes that are still busy</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" --></div>
<!-- class="sect2" -->
<div id="REFRN00607" class="sect2"><a id="sthref4161"></a>
<h2 class="sect2">rdbms ipc message<a id="sthref4162"></a></h2>
<p>The background processes (LGWR, DBWR, LMS0) use this event to indicate that they are idle and are waiting for the foreground processes to send them an IPC message to do some work.</p>
<p><span class="bold">Wait Time:</span> Up to 3 seconds. The parameter <span class="italic">timeout</span> shows the true sleep time.</p>
<div class="inftblinformal">
<table class="cellalignment1590" title="rdbms ipc message" summary="This table is described in the preceding text" dir="ltr">
<thead>
<tr class="cellalignment1581">
<th class="cellalignment1591" id="r1c1-t112">Parameter</th>
<th class="cellalignment1591" id="r1c2-t112">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r2c1-t112" headers="r1c1-t112"><span class="italic">timeout</span></td>
<td class="cellalignment1587" headers="r2c1-t112 r1c2-t112">The amount of time that the session waits for an IPC message</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" -->
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink PFGRF94515" href="../../server.112/e41573/instance_tune.htm#PFGRF94515"><span class="italic">Oracle Database Performance Tuning Guide</span></a> for more information about this wait event</div>
</div>
<!-- class="sect2" -->
<div id="REFRN00608" class="sect2"><a id="sthref4163"></a>
<h2 class="sect2">rdbms ipc message block<a id="sthref4164"></a></h2>
<p>This event indicates that all message blocks are in use and that the session had to wait for a message block to become available.</p>
<p><span class="bold">Wait Time:</span> Wait up to 60 seconds</p>
<p><span class="bold">Parameters:</span> None</p>
</div>
<!-- class="sect2" -->
<div id="REFRN00609" class="sect2"><a id="sthref4165"></a>
<h2 class="sect2">rdbms ipc reply<a id="sthref4166"></a></h2>
<p>This event is used to wait for a reply from one of the background processes.</p>
<p><span class="bold">Wait Time:</span> The wait time is specified by the user and is indicated by the parameter <span class="italic">timeout</span>.</p>
<div class="inftblinformal">
<table class="cellalignment1590" title="rdbms ipc reply" summary="This table is described in the preceding text" dir="ltr">
<thead>
<tr class="cellalignment1581">
<th class="cellalignment1591" id="r1c1-t114">Parameter</th>
<th class="cellalignment1591" id="r1c2-t114">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r2c1-t114" headers="r1c1-t114"><span class="italic">from_process</span></td>
<td class="cellalignment1587" headers="r2c1-t114 r1c2-t114">The background process for which the session is waiting. The wait is for a reply to an IPC message sent by the session.</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r3c1-t114" headers="r1c1-t114"><span class="italic">timeout</span></td>
<td class="cellalignment1587" headers="r3c1-t114 r1c2-t114">The amount of time in seconds that this process will wait for a reply</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" --></div>
<!-- class="sect2" -->
<div id="REFRN00610" class="sect2"><a id="sthref4167"></a>
<h2 class="sect2">read by other session<a id="sthref4168"></a></h2>
<p>This event occurs when a session requests a buffer that is currently being read into the buffer cache by another session. Prior to release 10.1, waits for this event were grouped with the other reasons for waiting for buffers under the 'buffer busy wait' event</p>
<p><span class="bold">Wait Time:</span> Time waited for the buffer to be read by the other session (in microseconds)</p>
<div class="inftblinformal">
<table class="cellalignment1590" title="read by other session" summary="This table described in preceding text" dir="ltr">
<thead>
<tr class="cellalignment1581">
<th class="cellalignment1591" id="r1c1-t115">Parameter</th>
<th class="cellalignment1591" id="r1c2-t115">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r2c1-t115" headers="r1c1-t115"><span class="italic">file#</span></td>
<td class="cellalignment1587" headers="r2c1-t115 r1c2-t115">See <a href="waitevents002.htm#i970879">"file#"</a></td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r3c1-t115" headers="r1c1-t115"><span class="italic">block#</span></td>
<td class="cellalignment1587" headers="r3c1-t115 r1c2-t115">See <a href="waitevents002.htm#i970854">"block#"</a></td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r4c1-t115" headers="r1c1-t115"><span class="italic">class#</span></td>
<td class="cellalignment1587" headers="r4c1-t115 r1c2-t115">See <a href="waitevents002.htm#i970870">"class"</a></td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" --></div>
<!-- class="sect2" -->
<div id="REFRN00611" class="sect2"><a id="sthref4169"></a>
<h2 class="sect2">recovery read<a id="sthref4170"></a></h2>
<p>A parallel recovery slave (or serial recovery process) is waiting for a batch of data block reads to complete.</p>
<p><span class="bold">Wait Time:</span> Time it takes to complete the physical I/O (read)</p>
<p><span class="bold">Parameters:</span> None</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink HABPT4907" href="../../server.112/e10803/config_dg.htm#HABPT4907"><span class="italic">Oracle Database High Availability Best Practices</span></a> for more information about this wait event</div>
</div>
<!-- class="sect2" -->
<div id="REFRN00612" class="sect2"><a id="sthref4171"></a>
<h2 class="sect2">resmgr:become active<a id="sthref4172"></a></h2>
<p>The session is waiting for a resource manager active session slot. This event occurs when the resource manager is enabled and the number of active sessions in the session's current consumer group exceeds the current resource plan's active session limit for the consumer group. To reduce the occurrence of this wait event, increase the active session limit for the session's current consumer group.</p>
<p><span class="bold">Wait Time:</span> The time the session waited to be allocated an active session slot</p>
<div class="inftblinformal">
<table class="cellalignment1590" title="resmgr: become active" summary="This table is described in the preceding text" dir="ltr">
<thead>
<tr class="cellalignment1581">
<th class="cellalignment1591" id="r1c1-t117">Parameter</th>
<th class="cellalignment1591" id="r1c2-t117">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r2c1-t117" headers="r1c1-t117"><span class="italic">location</span></td>
<td class="cellalignment1587" headers="r2c1-t117 r1c2-t117">location of the wait</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" --></div>
<!-- class="sect2" -->
<div id="REFRN00613" class="sect2"><a id="sthref4173"></a>
<h2 class="sect2">resmgr:cpu quantum<a id="sthref4174"></a></h2>
<p>The session is waiting to be allocated a quantum of cpu. This event occurs when the resource manager is enabled and is throttling CPU consumption. To reduce the occurrence of this wait event, increase the CPU allocation for the sessions's current consumer group.</p>
<p>Wait Time: The time the session waited to acquire a CPU quantum</p>
<div class="inftblinformal">
<table class="cellalignment1590" title="resmgr: cpu quantum" summary="This table is described in the preceding text" dir="ltr">
<thead>
<tr class="cellalignment1581">
<th class="cellalignment1591" id="r1c1-t118">Parameter</th>
<th class="cellalignment1591" id="r1c2-t118">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r2c1-t118" headers="r1c1-t118"><span class="italic">location</span></td>
<td class="cellalignment1587" headers="r2c1-t118 r1c2-t118">Location of the wait</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" --></div>
<!-- class="sect2" -->
<div id="REFRN00614" class="sect2"><a id="sthref4175"></a>
<h2 class="sect2">resmgr:pq queued<a id="sthref4176"></a></h2>
<p>The session is waiting in the parallel statement queue.</p>
<p>Wait Time: The time the session waited for sufficient parallel query processes to become available to run this session with the requested degree of parallelism</p>
<div class="inftblinformal">
<table class="cellalignment1590" title="resmgr: cpu quantum" summary="This table is described in the preceding text" dir="ltr">
<thead>
<tr class="cellalignment1581">
<th class="cellalignment1591" id="r1c1-t119">Parameter</th>
<th class="cellalignment1591" id="r1c2-t119">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r2c1-t119" headers="r1c1-t119"><span class="italic">location</span></td>
<td class="cellalignment1587" headers="r2c1-t119 r1c2-t119">Location of the wait</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" -->
<div class="infobox-note">
<p class="notep1">Note:</p>
The <code dir="ltr">resmgr:pq</code> <code dir="ltr">queued</code> wait event is available starting with Oracle Database 11<span class="italic">g</span> Release 2 (11.2.0.2).</div>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink VLDBG1396" href="../../server.112/e25523/parallel002.htm#VLDBG1396"><span class="italic">Oracle Database VLDB and Partitioning Guide</span></a> for more information about this wait event</div>
</div>
<!-- class="sect2" -->
<div id="REFRN00615" class="sect2"><a id="sthref4177"></a>
<h2 class="sect2">rolling migration: cluster<a id="sthref4178"></a> quiesce</h2>
<p>This is the wait event that instances wait on when cluster is about to start a rolling migration. The instances are waiting for any privileged operations that blocks rolling migration to complete before allowing rolling migration.</p>
<p>Wait Time: 1 second</p>
<div class="inftblinformal">
<table class="cellalignment1590" title="rolling migration initiated cluster quiscent" summary="This table is described in the preceding text" dir="ltr">
<thead>
<tr class="cellalignment1581">
<th class="cellalignment1591" id="r1c1-t122">Parameter</th>
<th class="cellalignment1591" id="r1c2-t122">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r2c1-t122" headers="r1c1-t122"><span class="italic">location</span></td>
<td class="cellalignment1587" headers="r2c1-t122 r1c2-t122">Its value will be 1 if the wait is for completion of the privileged operations so that a rolling upgrade/downgrade can start. Its value will be 2 if the wait is for completion of the rolling upgrade/downgrade on all the nodes in the cluster.</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r3c1-t122" headers="r1c1-t122"><span class="italic">waits</span></td>
<td class="cellalignment1587" headers="r3c1-t122 r1c2-t122">The number of seconds spent waiting at the current location.</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" --></div>
<!-- class="sect2" -->
<div id="REFRN00616" class="sect2"><a id="sthref4179"></a>
<h2 class="sect2">row cache lock<a id="sthref4180"></a></h2>
<p>The session is trying to get a data dictionary lock.</p>
<p><span class="bold">Wait Time:</span> Wait up to 60 seconds.</p>
<div class="inftblinformal">
<table class="cellalignment1590" title="row cache lock" summary="This table is described in the preceding text" dir="ltr">
<thead>
<tr class="cellalignment1581">
<th class="cellalignment1591" id="r1c1-t123">Parameter</th>
<th class="cellalignment1591" id="r1c2-t123">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r2c1-t123" headers="r1c1-t123"><span class="italic">cache id</span></td>
<td class="cellalignment1587" headers="r2c1-t123 r1c2-t123">The <code dir="ltr">CACHE#</code> column value in the <code dir="ltr">V$ROWCACHE</code> view</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r3c1-t123" headers="r1c1-t123"><span class="italic">mode</span></td>
<td class="cellalignment1587" headers="r3c1-t123 r1c2-t123">See <a href="waitevents002.htm#i970894">"mode"</a></td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r4c1-t123" headers="r1c1-t123"><span class="italic">request</span></td>
<td class="cellalignment1587" headers="r4c1-t123 r1c2-t123">The pipe timer set by the user</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" -->
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink PFGRF02410" href="../../server.112/e41573/instance_tune.htm#PFGRF02410"><span class="italic">Oracle Database Performance Tuning Guide</span></a> for more information about this wait event</div>
</div>
<!-- class="sect2" -->
<div id="REFRN00617" class="sect2"><a id="sthref4181"></a>
<h2 class="sect2">RVWR wait for flashback copy<a id="sthref4182"></a></h2>
<p>Waits for a process to copy flashback database data into the flashback buffer, in order to write out the requested flashback data.</p>
<p><span class="bold">Wait TIme:</span> 10 milliseconds</p>
<div class="inftblinformal">
<table class="cellalignment1590" title="RVWR wait for flashback copy" summary="This table is described in the preceding text" dir="ltr">
<thead>
<tr class="cellalignment1581">
<th class="cellalignment1591" id="r1c1-t125">Parameter</th>
<th class="cellalignment1591" id="r1c2-t125">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r2c1-t125" headers="r1c1-t125"><span class="italic">copy latch #</span></td>
<td class="cellalignment1587" headers="r2c1-t125 r1c2-t125">The number of flashback copy latch RVWR is waiting on</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" --></div>
<!-- class="sect2" -->
<div id="REFRN00618" class="sect2"><a id="sthref4183"></a>
<h2 class="sect2">sbtbufinfo<a id="sthref4184"></a></h2>
<p>This function is called when Oracle needs to discover the size, and number, of I/O buffers that have been allocated by the SBT layer.&nbsp; It should be very fast and never block.</p>
<p><span class="bold">Wait Time:</span> Less than one millisecond</p>
<p><span class="bold">Parameters:</span> None</p>
</div>
<!-- class="sect2" -->
<div id="REFRN00619" class="sect2"><a id="sthref4185"></a>
<h2 class="sect2">sbtgetbuf<a id="sthref4186"></a></h2>
<p>This function obtains one I/O buffer that Oracle will use for I/O during a backup job.</p>
<p><span class="bold">Wait Time:</span> Less than one millisecond</p>
<p><span class="bold">Parameters:</span> None</p>
</div>
<!-- class="sect2" -->
<div id="REFRN00620" class="sect2"><a id="sthref4187"></a>
<h2 class="sect2">sbtmapbuf<a id="sthref4188"></a></h2>
<p>This is an internal function used to facilitate multi-process buffer management.&nbsp; It should be very fast and never block.</p>
<p><span class="bold">Wait Time:</span> Less than one millisecond</p>
<p><span class="bold">Parameters:</span> None</p>
</div>
<!-- class="sect2" -->
<div id="REFRN00621" class="sect2"><a id="sthref4189"></a>
<h2 class="sect2">sbtrelbuf<a id="sthref4190"></a></h2>
<p>This function releases an I/O buffer that has been already processed during a restore job, so that the SBT layer can fill it with more data.&nbsp; It should be very fast and never block.</p>
<p><span class="bold">Wait Time:</span> Less than one millisecond</p>
<p><span class="bold">Parameters:</span> None</p>
</div>
<!-- class="sect2" -->
<div id="REFRN00622" class="sect2"><a id="sthref4191"></a>
<h2 class="sect2">scginq AST call<a id="sthref4192"></a></h2>
<p>Called by the session to find the highest lock mode that is held on a resource.</p>
<p><span class="bold">Wait Time:</span> Wait up to 0.2 seconds, but the wait will continue until the NULL mode Acquisition AST has fired.</p>
<p><span class="bold">Parameters:</span> None</p>
</div>
<!-- class="sect2" -->
<div id="REFRN00623" class="sect2"><a id="sthref4193"></a>
<h2 class="sect2">SGA: allocation forcing component growth<a id="sthref4194"></a></h2>
<p>Process waiting on an immediate mode memory transfer with auto-tune SGA after a 4031 for MMAN to get the memory and post it.</p>
<p><span class="bold">Wait Time:</span> 10 msec</p>
<p><span class="bold">Parameters:</span> None</p>
</div>
<!-- class="sect2" -->
<div id="REFRN00624" class="sect2"><a id="sthref4195"></a>
<h2 class="sect2">SGA: MMAN sleep for component shrink<a id="sthref4196"></a></h2>
<p>MMAN to wait and post itself for satisfying an auto-tuned memory request while trying to fully free a component's quiesced granules. In Release 10.1, the name of this event was 'wait for SGA component shrink'.</p>
<p><span class="bold">Wait Time:</span> 10 msec</p>
<div class="inftblinformal">
<table class="cellalignment1590" title="SGA: MMAN sleep for component shrink" summary="Described in preceding text" dir="ltr">
<thead>
<tr class="cellalignment1581">
<th class="cellalignment1591" id="r1c1-t126">Parameter</th>
<th class="cellalignment1591" id="r1c2-t126">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r2c1-t126" headers="r1c1-t126"><span class="italic">P1</span></td>
<td class="cellalignment1587" headers="r2c1-t126 r1c2-t126">component_id (corresponding to the memory pool)</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r3c1-t126" headers="r1c1-t126"><span class="italic">P2</span></td>
<td class="cellalignment1587" headers="r3c1-t126 r1c2-t126">Current size in granules</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r4c1-t126" headers="r1c1-t126"><span class="italic">P3</span></td>
<td class="cellalignment1587" headers="r4c1-t126 r1c2-t126">Target size in granules</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" --></div>
<!-- class="sect2" -->
<div id="REFRN00625" class="sect2"><a id="sthref4197"></a>
<h2 class="sect2">SGA: sga_target resize<a id="sthref4198"></a></h2>
<p>Memory resize requests wait while sga target is being resized.In Release 10.1, the name of this event was 'wait for sga_target resize'.</p>
<p><span class="bold">Wait Time:</span> 10 msec</p>
<p><span class="bold">Parameters:</span> None</p>
</div>
<!-- class="sect2" -->
<div id="REFRN00626" class="sect2"><a id="sthref4199"></a>
<h2 class="sect2">Shared IO Pool Memory<a id="sthref4200"></a></h2>
<p>Wait until a shared I/O pool buffer becomes available. This happens when processes are using these buffers for I/O and the current process needs to wait for the release of any one of the buffers to the shared I/O pool.</p>
<p><span class="bold">Wait Time:</span> 10msec</p>
<p><span class="bold">Parameters:</span> None</p>
</div>
<!-- class="sect2" -->
<div id="REFRN00628" class="sect2"><a id="sthref4201"></a>
<h2 class="sect2">shared server idle wait<a id="sthref4202"></a></h2>
<p>Idle wait event for a shared server. The server waits on the common queue for a virtual circuit. (See also <a href="#BABBCJEF">"virtual circuit wait"</a>.)</p>
<p><span class="bold">Wait Time:</span> 30 seconds</p>
<p><span class="bold">Parameters:</span> None</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink PFGRF94515" href="../../server.112/e41573/instance_tune.htm#PFGRF94515"><span class="italic">Oracle Database Performance Tuning Guide</span></a> for more information about this wait event</div>
</div>
<!-- class="sect2" -->
<div id="REFRN00627" class="sect2"><a id="sthref4203"></a>
<h2 class="sect2">single-task message<a id="sthref4204"></a></h2>
<p>When running single task, this event indicates that the session waits for the client side of the executable.</p>
<p><span class="bold">Wait Time:</span> Total elapsed time that this session spent in the user application</p>
<p><span class="bold">Parameters:</span> None</p>
</div>
<!-- class="sect2" -->
<div id="REFRN00629" class="sect2"><a id="sthref4205"></a>
<h2 class="sect2">smon timer<a id="sthref4206"></a></h2>
<p>This is the main idle event for SMON. SMON will be waiting on this event most of the time until it times out or is posted by another process.</p>
<p><span class="bold">Wait Time:</span> 5 minutes (300 seconds)</p>
<div class="inftblinformal">
<table class="cellalignment1590" title="smon timer" summary="This table is described in the preceding text" dir="ltr">
<thead>
<tr class="cellalignment1581">
<th class="cellalignment1591" id="r1c1-t128">Parameter</th>
<th class="cellalignment1591" id="r1c2-t128">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r2c1-t128" headers="r1c1-t128"><span class="italic">sleeptime</span></td>
<td class="cellalignment1587" headers="r2c1-t128 r1c2-t128">The amount of time that SMON tries to wait on this event in seconds</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r3c1-t128" headers="r1c1-t128"><span class="italic">failed</span></td>
<td class="cellalignment1587" headers="r3c1-t128 r1c2-t128">The number of times SMON was posted when there some kind of error</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" -->
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink PFGRF94515" href="../../server.112/e41573/instance_tune.htm#PFGRF94515"><span class="italic">Oracle Database Performance Tuning Guide</span></a> for more information about this wait event</div>
</div>
<!-- class="sect2" -->
<div id="REFRN00630" class="sect2"><a id="sthref4207"></a>
<h2 class="sect2">SQL*Net break/reset to client<a id="sthref4208"></a></h2>
<p>The server sends a break or reset message to the client. The session running on the server waits for a reply from the client.</p>
<p><span class="bold">Wait Time:</span> The actual time it takes for the break or reset message to return from the client</p>
<div class="inftblinformal">
<table class="cellalignment1590" title="SQL*Net break/reset to client" summary="This table is described in the preceding text" dir="ltr">
<thead>
<tr class="cellalignment1581">
<th class="cellalignment1591" id="r1c1-t130">Parameter</th>
<th class="cellalignment1591" id="r1c2-t130">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r2c1-t130" headers="r1c1-t130"><span class="italic">driver id</span></td>
<td class="cellalignment1587" headers="r2c1-t130 r1c2-t130">See <a href="waitevents002.htm#i970876">"driver id"</a></td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r3c1-t130" headers="r1c1-t130"><span class="italic">break?</span></td>
<td class="cellalignment1587" headers="r3c1-t130 r1c2-t130">See <a href="waitevents002.htm#i970867">"break?"</a></td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" --></div>
<!-- class="sect2" -->
<div id="REFRN00631" class="sect2"><a id="sthref4209"></a>
<h2 class="sect2">SQL*Net break/reset to dblink<a id="sthref4210"></a></h2>
<p>Same as <span class="bold">SQL*Net break/reset to client</span>, but in this case, the break/reset message is sent to another server process over a database link.</p>
<p><span class="bold">Wait Time:</span> The actual time it takes for the break or reset message to return from the other server process</p>
<div class="inftblinformal">
<table class="cellalignment1590" title="SQL*Net break/reset to dblink" summary="This table is described in the preceding text" dir="ltr">
<thead>
<tr class="cellalignment1581">
<th class="cellalignment1591" id="r1c1-t131">Parameter</th>
<th class="cellalignment1591" id="r1c2-t131">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r2c1-t131" headers="r1c1-t131"><span class="italic">driver id</span></td>
<td class="cellalignment1587" headers="r2c1-t131 r1c2-t131">See <a href="waitevents002.htm#i970876">"driver id"</a></td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r3c1-t131" headers="r1c1-t131"><span class="italic">break?</span></td>
<td class="cellalignment1587" headers="r3c1-t131 r1c2-t131">See <a href="waitevents002.htm#i970867">"break?"</a></td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" --></div>
<!-- class="sect2" -->
<div id="REFRN00632" class="sect2"><a id="sthref4211"></a>
<h2 class="sect2">SQL*Net message from client<a id="sthref4212"></a></h2>
<p>The server process (foreground process) waits for a message from the client process to arrive.</p>
<p><span class="bold">Wait Time:</span> The time it took for a message to arrive from the client since the last message was sent to the client</p>
<div class="inftblinformal">
<table class="cellalignment1590" title="SQL*Net message from client" summary="This table is described in the preceding text" dir="ltr">
<thead>
<tr class="cellalignment1581">
<th class="cellalignment1591" id="r1c1-t132">Parameter</th>
<th class="cellalignment1591" id="r1c2-t132">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r2c1-t132" headers="r1c1-t132"><span class="italic">driver id</span></td>
<td class="cellalignment1587" headers="r2c1-t132 r1c2-t132">See <a href="waitevents002.htm#i970876">"driver id"</a></td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r3c1-t132" headers="r1c1-t132"><span class="italic">#bytes</span></td>
<td class="cellalignment1587" headers="r3c1-t132 r1c2-t132">The number of bytes received by the server (foreground process) from the client.</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" -->
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink PFGRF94538" href="../../server.112/e41573/instance_tune.htm#PFGRF94538"><span class="italic">Oracle Database Performance Tuning Guide</span></a> for more information about this wait event</div>
</div>
<!-- class="sect2" -->
<div id="REFRN00633" class="sect2"><a id="sthref4213"></a>
<h2 class="sect2">SQL*Net message from dblink<a id="sthref4214"></a></h2>
<p>The session waits while the server process (foreground process) receives messages over a database link from another server process.</p>
<p><span class="bold">Wait Time:</span> The time it took for a message to arrive from another server (foreground process) since a message was sent to the other foreground process.</p>
<div class="inftblinformal">
<table class="cellalignment1590" title="SQL*Net message from dblink" summary="This table is described in the preceding text" dir="ltr">
<thead>
<tr class="cellalignment1581">
<th class="cellalignment1591" id="r1c1-t134">Parameter</th>
<th class="cellalignment1591" id="r1c2-t134">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r2c1-t134" headers="r1c1-t134"><span class="italic">driver id</span></td>
<td class="cellalignment1587" headers="r2c1-t134 r1c2-t134">See <a href="waitevents002.htm#i970876">"driver id"</a></td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r3c1-t134" headers="r1c1-t134"><span class="italic">#bytes</span></td>
<td class="cellalignment1587" headers="r3c1-t134 r1c2-t134">The number of bytes received by the server (foreground process) from another foreground process over a database link.</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" -->
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink PFGRF94541" href="../../server.112/e41573/instance_tune.htm#PFGRF94541"><span class="italic">Oracle Database Performance Tuning Guide</span></a> for more information about this wait event</div>
</div>
<!-- class="sect2" -->
<div id="REFRN00634" class="sect2"><a id="sthref4215"></a>
<h2 class="sect2">SQL*Net message to client<a id="sthref4216"></a></h2>
<p>The server (foreground process) is sending a message to the client.</p>
<p><span class="bold">Wait Time:</span> The actual time the <span class="bold">send</span> takes</p>
<div class="inftblinformal">
<table class="cellalignment1590" title="SQL*Net message to client" summary="This table is described in the preceding text" dir="ltr">
<thead>
<tr class="cellalignment1581">
<th class="cellalignment1591" id="r1c1-t136">Parameter</th>
<th class="cellalignment1591" id="r1c2-t136">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r2c1-t136" headers="r1c1-t136"><span class="italic">driver id</span></td>
<td class="cellalignment1587" headers="r2c1-t136 r1c2-t136">See <a href="waitevents002.htm#i970876">"driver id"</a></td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r3c1-t136" headers="r1c1-t136"><span class="italic">#bytes</span></td>
<td class="cellalignment1587" headers="r3c1-t136 r1c2-t136">The number of bytes sent by the server process to the client</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" --></div>
<!-- class="sect2" -->
<div id="REFRN00635" class="sect2"><a id="sthref4217"></a>
<h2 class="sect2">SQL*Net message to dblink<a id="sthref4218"></a></h2>
<p>The server process (foreground process) is sending a message over a database link to another server process.</p>
<p><span class="bold">Wait Time:</span> The actual time the <span class="bold">send</span> takes</p>
<div class="inftblinformal">
<table class="cellalignment1590" title="SQL*Net message to dblink" summary="This table is described in the preceding text" dir="ltr">
<thead>
<tr class="cellalignment1581">
<th class="cellalignment1591" id="r1c1-t137">Parameter</th>
<th class="cellalignment1591" id="r1c2-t137">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r2c1-t137" headers="r1c1-t137"><span class="italic">driver id</span></td>
<td class="cellalignment1587" headers="r2c1-t137 r1c2-t137">See <a href="waitevents002.htm#i970876">"driver id"</a></td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r3c1-t137" headers="r1c1-t137"><span class="italic">#bytes</span></td>
<td class="cellalignment1587" headers="r3c1-t137 r1c2-t137">The number of bytes sent by the server process to another server process over a database link</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" -->
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink PFGRF94537" href="../../server.112/e41573/instance_tune.htm#PFGRF94537"><span class="italic">Oracle Database Performance Tuning Guide</span></a> for more information about this wait event</div>
</div>
<!-- class="sect2" -->
<div id="REFRN00636" class="sect2"><a id="sthref4219"></a>
<h2 class="sect2">SQL*Net more data from client<a id="sthref4220"></a></h2>
<p>The server is waiting on the client to send more data to its client shadow process, in an already initiated operation.</p>
<p><span class="bold">Wait Time:</span> The time waited depends on the time it took to receive the data (including the waiting time)</p>
<div class="inftblinformal">
<table class="cellalignment1590" title="SQL*Net more data from client" summary="This table is described in the preceding text" dir="ltr">
<thead>
<tr class="cellalignment1581">
<th class="cellalignment1591" id="r1c1-t139">Parameter</th>
<th class="cellalignment1591" id="r1c2-t139">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r2c1-t139" headers="r1c1-t139"><span class="italic">driver id</span></td>
<td class="cellalignment1587" headers="r2c1-t139 r1c2-t139">See <a href="waitevents002.htm#i970876">"driver id"</a></td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r3c1-t139" headers="r1c1-t139"><span class="italic">#bytes</span></td>
<td class="cellalignment1587" headers="r3c1-t139 r1c2-t139">The number of bytes received from the client</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" --></div>
<!-- class="sect2" -->
<div id="REFRN00637" class="sect2"><a id="sthref4221"></a>
<h2 class="sect2">SQL*Net more data from dblink<a id="sthref4222"></a></h2>
<p>The foreground process is expecting more data from a data base link.</p>
<p><span class="bold">Wait Time:</span> The total time it takes to read the data from the database link (including the waiting time for the data to arrive)</p>
<div class="inftblinformal">
<table class="cellalignment1590" title="SQL*Net more data from dblink" summary="This table is described in the preceding text" dir="ltr">
<thead>
<tr class="cellalignment1581">
<th class="cellalignment1591" id="r1c1-t140">Parameter</th>
<th class="cellalignment1591" id="r1c2-t140">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r2c1-t140" headers="r1c1-t140"><span class="italic">driver id</span></td>
<td class="cellalignment1587" headers="r2c1-t140 r1c2-t140">See <a href="waitevents002.htm#i970876">"driver id"</a></td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r3c1-t140" headers="r1c1-t140"><span class="italic">#bytes</span></td>
<td class="cellalignment1587" headers="r3c1-t140 r1c2-t140">The number of bytes received</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" --></div>
<!-- class="sect2" -->
<div id="REFRN00638" class="sect2"><a id="sthref4223"></a>
<h2 class="sect2">SQL*Net more data to client<a id="sthref4224"></a></h2>
<p>The server process is sending more data/messages to the client. The previous operation to the client was also a <span class="bold">send</span>.</p>
<p><span class="bold">Wait Time:</span> The actual time it took for the <span class="bold">send</span> to complete</p>
<div class="inftblinformal">
<table class="cellalignment1590" title="SQL*Net more data to client" summary="This table is described in the preceding text" dir="ltr">
<thead>
<tr class="cellalignment1581">
<th class="cellalignment1591" id="r1c1-t141">Parameter</th>
<th class="cellalignment1591" id="r1c2-t141">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r2c1-t141" headers="r1c1-t141"><span class="italic">driver id</span></td>
<td class="cellalignment1587" headers="r2c1-t141 r1c2-t141">See <a href="waitevents002.htm#i970876">"driver id"</a></td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r3c1-t141" headers="r1c1-t141"><span class="italic">#bytes</span></td>
<td class="cellalignment1587" headers="r3c1-t141 r1c2-t141">The number of bytes that are being sent to the client</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" -->
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink PFGRF94542" href="../../server.112/e41573/instance_tune.htm#PFGRF94542"><span class="italic">Oracle Database Performance Tuning Guide</span></a> for more information about this wait event</div>
</div>
<!-- class="sect2" -->
<div id="REFRN00639" class="sect2"><a id="sthref4225"></a>
<h2 class="sect2">SQL*Net more data to dblink<a id="sthref4226"></a></h2>
<p>The event indicates that the server is sending data over a database link again. The previous operation over this database link was also a <span class="bold">send</span>.</p>
<p><span class="bold">Wait Time:</span> The actual time it takes to send the data to the other server</p>
<div class="inftblinformal">
<table class="cellalignment1590" title="SQL*Net more data to dblink" summary="This table is described in the preceding text" dir="ltr">
<thead>
<tr class="cellalignment1581">
<th class="cellalignment1591" id="r1c1-t143">Parameter</th>
<th class="cellalignment1591" id="r1c2-t143">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r2c1-t143" headers="r1c1-t143"><span class="italic">driver id</span></td>
<td class="cellalignment1587" headers="r2c1-t143 r1c2-t143">See <a href="waitevents002.htm#i970876">"driver id"</a></td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r3c1-t143" headers="r1c1-t143"><span class="italic">#bytes</span></td>
<td class="cellalignment1587" headers="r3c1-t143 r1c2-t143">The number of bytes that are sent over the database link to the other server process</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" --></div>
<!-- class="sect2" -->
<div id="REFRN00640" class="sect2"><a id="sthref4227"></a>
<h2 class="sect2">Streams AQ: waiting for messages in the queue<a id="sthref4228"></a></h2>
<p>The session is waiting on an empty OLTP queue (Advanced Queuing) for a message to arrive so that the session can dequeue that message.</p>
<p><span class="bold">Wait Time:</span> The amount of time that the session wants to wait is determined by the parameter <span class="italic">wait time</span></p>
<div class="inftblinformal">
<table class="cellalignment1590" title="queue messages" summary="This table is described in the preceding text" dir="ltr">
<thead>
<tr class="cellalignment1581">
<th class="cellalignment1591" id="r1c1-t144">Parameter</th>
<th class="cellalignment1591" id="r1c2-t144">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r2c1-t144" headers="r1c1-t144"><span class="italic">queue id</span></td>
<td class="cellalignment1587" headers="r2c1-t144 r1c2-t144">The ID of the OLTP queue for which this session is waiting</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r3c1-t144" headers="r1c1-t144"><span class="italic">process#</span></td>
<td class="cellalignment1587" headers="r3c1-t144 r1c2-t144">The process number of the process in which this session runs</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r4c1-t144" headers="r1c1-t144"><span class="italic">wait time</span></td>
<td class="cellalignment1587" headers="r4c1-t144 r1c2-t144">The intended wait time for this session</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" --></div>
<!-- class="sect2" -->
<div id="REFRN00641" class="sect2"><a id="sthref4229"></a>
<h2 class="sect2">switch logfile command<a id="sthref4230"></a></h2>
<p>The session waits on the user command <code dir="ltr">SWITCH LOGFILE</code> to complete.</p>
<p><span class="bold">Wait Time:</span> 5 seconds</p>
<p><span class="bold">Parameters:</span> None</p>
</div>
<!-- class="sect2" -->
<div id="REFRN00642" class="sect2"><a id="sthref4231"></a>
<h2 class="sect2">TCP Socket (KGAS)</h2>
<p>A session is waiting for an external host to provide requested data over a network socket. The time that this wait event tracks does not indicate a problem, and even a long wait time is not a reason to contact Oracle Support. It naturally takes time for data to flow between hosts over a network, and for the remote aspect of an application to process any request made to it. An application that communicates with a remote host must wait until the data it will read has arrived. In addition, on Microsoft Windows, a separate thread monitors the arrival of traffic. This thread spends most of its life in waits tracked by the TCP Socket (KGAS) wait event.</p>
<p><span class="bold">Wait Time:</span> The total elapsed time for the network connection to be established or for data to arrive from over the network</p>
<div class="inftblinformal">
<table class="cellalignment1590" title="TCP Socket (KGAS)" summary="This table is described in the preceding text" dir="ltr">
<thead>
<tr class="cellalignment1581">
<th class="cellalignment1591" id="r1c1-t145">Parameter</th>
<th class="cellalignment1591" id="r1c2-t145">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r2c1-t145" headers="r1c1-t145"><span class="italic">P0</span></td>
<td class="cellalignment1587" headers="r2c1-t145 r1c2-t145">For Oracle internal use only. Values 8, 9, and 10 occur within the special thread present on Microsoft Windows; other P0 values occur in normal user sessions.</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r3c1-t145" headers="r1c1-t145"><span class="italic">P1</span></td>
<td class="cellalignment1587" headers="r3c1-t145 r1c2-t145">For Oracle internal use only</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" --></div>
<!-- class="sect2" -->
<div id="REFRN00643" class="sect2"><a id="sthref4232"></a>
<h2 class="sect2">timer in sksawat<a id="sthref4233"></a></h2>
<p>The session waits for the Archiver (ARCH) asynchronous I/O to complete.</p>
<p><span class="bold">Wait Time:</span> 0.01 seconds</p>
<p><span class="bold">Parameters:</span> None</p>
</div>
<!-- class="sect2" -->
<div id="REFRN00644" class="sect2"><a id="sthref4234"></a>
<h2 class="sect2">transaction<a id="sthref4235"></a></h2>
<p>Wait for a blocking transaction to be rolled back. Continue waiting until the transaction has been rolled back.</p>
<p><span class="bold">Wait Time:</span> 1 second</p>
<div class="inftblinformal">
<table class="cellalignment1590" title="transaction" summary="This table is described in the preceding text" dir="ltr">
<thead>
<tr class="cellalignment1581">
<th class="cellalignment1591" id="r1c1-t146">Parameter</th>
<th class="cellalignment1591" id="r1c2-t146">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r2c1-t146" headers="r1c1-t146"><span class="italic">undo seg#</span></td>
<td class="cellalignment1587" headers="r2c1-t146 r1c2-t146">The rollback segment ID</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r3c1-t146" headers="r1c1-t146"><span class="italic">slot#</span></td>
<td class="cellalignment1587" headers="r3c1-t146 r1c2-t146">The slot ID inside the rollback segment</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r4c1-t146" headers="r1c1-t146"><span class="italic">wrap#</span></td>
<td class="cellalignment1587" headers="r4c1-t146 r1c2-t146">The sequence number that is incremented for each transaction</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r5c1-t146" headers="r1c1-t146"><span class="italic">count</span></td>
<td class="cellalignment1587" headers="r5c1-t146 r1c2-t146">The number of times that the session has waited on this transaction</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" --></div>
<!-- class="sect2" -->
<div id="REFRN00645" class="sect2"><a id="sthref4236"></a>
<h2 class="sect2">unbound tx<a id="sthref4237"></a></h2>
<p>The session waits to see if there are any transactions that have been started but do not have a Rollback Segment associated with them.</p>
<p><span class="bold">Wait Time:</span> 1 second</p>
<p><span class="bold">Parameters:</span> None</p>
</div>
<!-- class="sect2" -->
<div id="REFRN00646" class="sect2"><a id="sthref4238"></a>
<h2 class="sect2">undo_retention publish retry<a id="sthref4239"></a></h2>
<p>This wait can occur for two reasons.&nbsp; A session issuing an <code dir="ltr">ALTER SYSTEM SET UNDO_RETENTION</code> may wait on this event wait while a cluster reconfiguration takes place.&nbsp; Or the background process MMNL may wait for cluster reconfiguration while attempting to determine the max <code dir="ltr">UNDO_RETENTION</code>.</p>
<p><span class="bold">Wait time:</span> 1 second</p>
<div class="inftblinformal">
<table class="cellalignment1590" title="undo segment extension" summary="This table is described in the preceding text" dir="ltr">
<thead>
<tr class="cellalignment1581">
<th class="cellalignment1591" id="r1c1-t147">Parameter</th>
<th class="cellalignment1591" id="r1c2-t147">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r2c1-t147" headers="r1c1-t147"><span class="italic">P1</span></td>
<td class="cellalignment1587" headers="r2c1-t147 r1c2-t147">Identifies where the retry is happening. Id = 1 retry while publishing into the max undo_retention namespace. Id = 2 retry while iterator accessing the max undo_retention namespace</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r3c1-t147" headers="r1c1-t147">P2</td>
<td class="cellalignment1587" headers="r3c1-t147 r1c2-t147">Retry count (maximum&nbsp; number of retries is 5)</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" --></div>
<!-- class="sect2" -->
<div id="REFRN00647" class="sect2"><a id="sthref4240"></a>
<h2 class="sect2">undo segment extension<a id="sthref4241"></a></h2>
<p>The undo segment is being extended or shrunk. The session must wait until the operation on the undo segment has finished.</p>
<p><span class="bold">Wait Time:</span> 0.01 seconds</p>
<div class="inftblinformal">
<table class="cellalignment1590" title="undo segment extension" summary="This table is described in the preceding text" dir="ltr">
<thead>
<tr class="cellalignment1581">
<th class="cellalignment1591" id="r1c1-t148">Parameter</th>
<th class="cellalignment1591" id="r1c2-t148">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r2c1-t148" headers="r1c1-t148"><span class="italic">segment#</span></td>
<td class="cellalignment1587" headers="r2c1-t148 r1c2-t148">The ID of the rollback segment that is being extended or shrunk</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" --></div>
<!-- class="sect2" -->
<div id="REFRN00648" class="sect2"><a id="sthref4242"></a>
<h2 class="sect2">undo segment recovery<a id="sthref4243"></a></h2>
<p>PMON is rolling back a dead transaction. The wait continues until rollback finishes.</p>
<p><span class="bold">Wait Time:</span> 3 seconds</p>
<div class="inftblinformal">
<table class="cellalignment1590" title="undo segment recovery" summary="This table is described in the preceding text" dir="ltr">
<thead>
<tr class="cellalignment1581">
<th class="cellalignment1591" id="r1c1-t149">Parameter</th>
<th class="cellalignment1591" id="r1c2-t149">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r2c1-t149" headers="r1c1-t149"><span class="italic">segment#</span></td>
<td class="cellalignment1587" headers="r2c1-t149 r1c2-t149">The ID of the rollback segment that contains the transaction that is being rolled back</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r3c1-t149" headers="r1c1-t149"><span class="italic">tx flags</span></td>
<td class="cellalignment1587" headers="r3c1-t149 r1c2-t149">The transaction flags (options) set for the transaction that is being rolled back</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" --></div>
<!-- class="sect2" -->
<div id="REFRN00649" class="sect2"><a id="sthref4244"></a>
<h2 class="sect2">undo segment tx slot<a id="sthref4245"></a></h2>
<p>Wait for a transaction slot to become available within the selected rollback segment. Continue waiting until the slot is available.</p>
<p><span class="bold">Wait Time:</span> 1 second</p>
<div class="inftblinformal">
<table class="cellalignment1590" title="undo segment tx slot" summary="This table is described in the preceding text" dir="ltr">
<thead>
<tr class="cellalignment1581">
<th class="cellalignment1591" id="r1c1-t150">Parameter</th>
<th class="cellalignment1591" id="r1c2-t150">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r2c1-t150" headers="r1c1-t150"><span class="italic">segment#</span></td>
<td class="cellalignment1587" headers="r2c1-t150 r1c2-t150">The ID of the rollback segment that contains the transaction that is being rolled back</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" --></div>
<!-- class="sect2" -->
<div id="REFRN00650" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref4246"></a>
<h2 class="sect2">utl_file I/O<a id="sthref4247"></a></h2>
<p>Waits associated with operations performed using the <code dir="ltr">UTL_FILE</code> package.</p>
</div>
<!-- class="sect2" -->
<div id="REFRN00651" class="sect2"><a id="sthref4248"></a>
<h2 class="sect2">virtual circuit status<a id="sthref4249"></a></h2>
<p>The session waits for a virtual circuit to return a message type indicated by status.</p>
<p><span class="bold">Wait Time:</span> 30 seconds</p>
<div class="inftblinformal">
<table class="cellalignment1590" title="virtual circuit wait" summary="This table is described in the preceding text" dir="ltr">
<thead>
<tr class="cellalignment1581">
<th class="cellalignment1591" id="r1c1-t151">Parameter</th>
<th class="cellalignment1591" id="r1c2-t151">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r2c1-t151" headers="r1c1-t151"><span class="italic">circuit#</span></td>
<td class="cellalignment1587" headers="r2c1-t151 r1c2-t151">Indicates the virtual circuit# being waited on</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r3c1-t151" headers="r1c1-t151"><span class="italic">status</span></td>
<td class="cellalignment1587" headers="r3c1-t151 r1c2-t151">Indicates what the session is waiting for</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" -->
<div class="infobox-note">
<p class="notep1">Note:</p>
The virtual circuit status wait event has been deprecated. It is replaced by the virtual circuit wait event.</div>
</div>
<!-- class="sect2" -->
<a id="BABBCJEF"></a>
<div id="REFRN00652" class="sect2">
<h2 class="sect2">virtual circuit wait<a id="sthref4250"></a></h2>
<p>The session waits for a virtual circuit operation to complete.</p>
<p><span class="bold">Wait Time:</span> 30 seconds</p>
<div class="inftblinformal">
<table class="cellalignment1590" title="virtual circuit wait" summary="This table is described in the preceding text" dir="ltr">
<thead>
<tr class="cellalignment1581">
<th class="cellalignment1591" id="r1c1-t153">Parameter</th>
<th class="cellalignment1591" id="r1c2-t153">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r2c1-t153" headers="r1c1-t153"><span class="italic">circuit#</span></td>
<td class="cellalignment1587" headers="r2c1-t153 r1c2-t153">Indicates the virtual circuit# being waited on</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r3c1-t153" headers="r1c1-t153"><span class="italic">type</span></td>
<td class="cellalignment1587" headers="r3c1-t153 r1c2-t153">Indicates the type of operation the session is waiting for</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" --></div>
<!-- class="sect2" -->
<div id="REFRN00653" class="sect2"><a id="sthref4251"></a>
<h2 class="sect2">WCR: replay client notify<a id="sthref4252"></a></h2>
<p>During replay, the Workload Replay Client always keeps an open connection to the database to detect some special errors. This session will normally be in the wait state until some specific replay-related exception occurs.</p>
<p><span class="bold">Wait Time:</span> Waits until notified. Times out every 30 seconds.</p>
<div class="inftblinformal">
<table class="cellalignment1590" title="WCR: replay client notify" summary="This table is described in the preceding text" dir="ltr">
<thead>
<tr class="cellalignment1581">
<th class="cellalignment1591" id="r1c1-t154">Parameter</th>
<th class="cellalignment1591" id="r1c2-t154">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r2c1-t154" headers="r1c1-t154"><span class="italic">who am I</span></td>
<td class="cellalignment1587" headers="r2c1-t154 r1c2-t154">Identifies the reason for wait for the admin thread.
<p>1 - waiting for REPLAY.START() to be issued.</p>
<p>2 - waiting for the replay to run to completion or REPLAY.CANCEL() to be issued.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" --></div>
<!-- class="sect2" -->
<div id="REFRN00654" class="sect2"><a id="sthref4253"></a>
<h2 class="sect2">WCR: replay clock<a id="sthref4254"></a></h2>
<p>A session will wait on this event during replay if it has some logical dependencies on another session that has not yet committed its work.</p>
<p><span class="bold">Wait Time:</span> Depends upon the amount of row lock contention in the original capture</p>
<div class="inftblinformal">
<table class="cellalignment1590" title="WCR: replay clock" summary="This table is described in the preceding text" dir="ltr">
<thead>
<tr class="cellalignment1581">
<th class="cellalignment1591" id="r1c1-t155">Parameter</th>
<th class="cellalignment1591" id="r1c2-t155">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r2c1-t155" headers="r1c1-t155"><span class="italic">wait for scn's hi 4 bytes</span></td>
<td class="cellalignment1587" headers="r2c1-t155 r1c2-t155">High 4 bytes of the 8-byte replay SCN that the session is waiting on</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r3c1-t155" headers="r1c1-t155"><span class="italic">wait for scn's lo 4 bytes</span></td>
<td class="cellalignment1587" headers="r3c1-t155 r1c2-t155">Low 4 bytes of the 8-byte replay SCN that the session is waiting on</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" --></div>
<!-- class="sect2" -->
<div id="REFRN00655" class="sect2"><a id="sthref4255"></a>
<h2 class="sect2">WCR: replay lock order<a id="sthref4256"></a></h2>
<p>A session will wait on this event during replay if it saw some lock contention during capture.</p>
<p><span class="bold">Wait Time:</span> Depends upon the amount of row lock contention in the original capture</p>
<div class="inftblinformal">
<table class="cellalignment1590" title="WCR: replay lock order" summary="This table is described in the preceding text" dir="ltr">
<thead>
<tr class="cellalignment1581">
<th class="cellalignment1591" id="r1c1-t156">Parameter</th>
<th class="cellalignment1591" id="r1c2-t156">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r2c1-t156" headers="r1c1-t156"><span class="italic">wait for scn's hi 4 bytes</span></td>
<td class="cellalignment1587" headers="r2c1-t156 r1c2-t156">High 4 bytes of the 8-byte replay SCN that the session is waiting on</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r3c1-t156" headers="r1c1-t156"><span class="italic">wait for scn's lo 4 bytes</span></td>
<td class="cellalignment1587" headers="r3c1-t156 r1c2-t156">Low 4 bytes of the 8-byte replay SCN that the session is waiting on</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" --></div>
<!-- class="sect2" -->
<div id="REFRN00656" class="sect2"><a id="sthref4257"></a>
<h2 class="sect2">WCR: replay paused<a id="sthref4258"></a></h2>
<p>When the user issues a DBMS_WORKLOAD_REPLAY.PAUSE_REPLAY command, all the replayed sessions are waiting on this wait event until replay is resumed.</p>
<p><span class="bold">Parameters:</span> None</p>
</div>
<!-- class="sect2" -->
<div id="REFRN00657" class="sect2"><a id="sthref4259"></a>
<h2 class="sect2">WCR: Sync context busy<a id="sthref4260"></a></h2>
<p>In the default replay mode, commits during replay are synchronized to follow the same order as capture. All commits are serialized using the Sync context. A replayed session will wait on this event if it is trying to commit at the same time as another replayed session.</p>
<p><span class="bold">Parameters:</span> None</p>
</div>
<!-- class="sect2" -->
<div id="REFRN00658" class="sect2"><a id="sthref4261"></a>
<h2 class="sect2">WMON goes to sleep<a id="sthref4262"></a></h2>
<p>WMON is the UNIX-specific Wait Monitor, that can be used to reduce the number of system calls related to setting timers for posting or waiting in Oracle. You need to set an initialization parameter that enables the WMON process.</p>
<p><span class="bold">Wait Time:</span> Depends on the next timeout</p>
<p><span class="bold">Parameters:</span> None</p>
</div>
<!-- class="sect2" -->
<div id="REFRN00659" class="sect2"><a id="sthref4263"></a>
<h2 class="sect2">write complete waits<a id="sthref4264"></a></h2>
<p>The session waits for a buffer to be written. The write is caused by normal aging or by a cross-instance call.</p>
<p><span class="bold">Wait Time:</span> 1 second</p>
<div class="inftblinformal">
<table class="cellalignment1590" title="write complete waits" summary="This table is described in the preceding text" dir="ltr">
<thead>
<tr class="cellalignment1581">
<th class="cellalignment1591" id="r1c1-t157">Parameter</th>
<th class="cellalignment1591" id="r1c2-t157">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r2c1-t157" headers="r1c1-t157"><span class="italic">file#</span></td>
<td class="cellalignment1587" headers="r2c1-t157 r1c2-t157">The rollback segment id that contains the transaction that is being rolled back</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r3c1-t157" headers="r1c1-t157"><span class="italic">block#</span></td>
<td class="cellalignment1587" headers="r3c1-t157 r1c2-t157">The transaction flags (options) set for the transaction that is being rolled back</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r4c1-t157" headers="r1c1-t157"><span class="italic">id</span></td>
<td class="cellalignment1587" headers="r4c1-t157 r1c2-t157">Identifies the reason for waiting</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" --></div>
<!-- class="sect2" -->
<div id="REFRN00660" class="sect2"><a id="sthref4265"></a>
<h2 class="sect2">writes stopped by instance recovery or database suspension<a id="sthref4266"></a></h2>
<p>The session is blocked until the instance that started Instance Recovery is finished.</p>
<p><span class="bold">Wait Time:</span> 5 seconds</p>
<div class="inftblinformal">
<table class="cellalignment1590" title="writes stopped by instance recovery or database suspension" summary="This table is described in the preceding text" dir="ltr">
<thead>
<tr class="cellalignment1581">
<th class="cellalignment1591" id="r1c1-t158">Parameter</th>
<th class="cellalignment1591" id="r1c2-t158">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r2c1-t158" headers="r1c1-t158"><span class="italic">bythread#</span></td>
<td class="cellalignment1587" headers="r2c1-t158 r1c2-t158">The rollback segment id that contains the transaction that is being rolled back</td>
</tr>
<tr class="cellalignment1581">
<td class="cellalignment1587" id="r3c1-t158" headers="r1c1-t158"><span class="italic">ourthread#</span></td>
<td class="cellalignment1587" headers="r3c1-t158 r1c2-t158">The current instance thread number</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformal" --></div>
<!-- class="sect2" --></div>
<!-- class="sect1" --></div>
<!-- class="appendix" -->
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment1580">
<tr>
<td class="cellalignment1587">
<table class="cellalignment1585">
<tr>
<td class="cellalignment1584"><a href="waitevents002.htm"><img width="24" height="24" src="../../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment1584"><a href="enqueues.htm"><img width="24" height="24" src="../../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;2002, 2015,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment1589">
<table class="cellalignment1583">
<tr>
<td class="cellalignment1584"><a href="../../index.htm"><img width="24" height="24" src="../../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment1584"><a href="../../nav/portal_booklist.htm"><img width="24" height="24" src="../../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment1584"><a href="toc.htm"><img width="24" height="24" src="../../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment1584"><a href="index.htm"><img width="24" height="24" src="../../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment1584"><a href="../../nav/mindx.htm"><img width="24" height="24" src="../../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment1584"><a href="../../dcommon/html/feedback.htm"><img width="24" height="24" src="../../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>
</body>
</html>
