<!DOCTYPE html>
<html lang="en" >
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1">
<meta charset="utf-8">
<title>Concepts for Database Developers</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Merged Version 1056" />
<meta name="dcterms.created" content="2015-05-25T13:34:6Z" />
<meta name="robots" content="all" />
<meta name="dcterms.title" content="Database Concepts" />
<meta name="dcterms.identifier" content="E40540-04" />
<meta name="dcterms.isVersionOf" content="CNCPT" />
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;1993, 2015,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved." />
<link rel="Start" href="../../index.htm" title="Home" type="text/html" />
<link rel="Copyright" href="../../dcommon/html/cpyr.htm" title="Copyright" type="text/html" />

<script type="application/javascript"  src="../../dcommon/js/headfoot.js"></script>
<script type="application/javascript"  src="../../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html" />
<link rel="Index" href="index.htm" title="Index" type="text/html" />
<link rel="Glossary" href="glossary.htm" title="Glossary" type="text/html" />
<link rel="Prev" href="cncptdba.htm" title="Previous" type="text/html" />
<link rel="Next" href="glossary.htm" title="Next" type="text/html" />
<link rel="alternate" href="../e40540.pdf" title="PDF version" type="application/pdf" />
<link rel="schema.dcterms" href="http://purl.org/dc/terms/" />
<link rel="stylesheet" href="../../dcommon/css/fusiondoc.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/header.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/footer.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/fonts.css">
<link rel="stylesheet" href="../../dcommon/css/foundation.css">
<link rel="stylesheet" href="../../dcommon/css/codemirror.css">
<link rel="stylesheet" type="text/css" title="Default" href="../../nav/css/html5.css">
<link rel="stylesheet" href="../../dcommon/css/respond-480-tablet.css">
<link rel="stylesheet" href="../../dcommon/css/respond-768-laptop.css">
<link rel="stylesheet" href="../../dcommon/css/respond-1140-deskop.css">
<script type="application/javascript" src="../../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">28/30</span> <!-- End Header -->
<div id="CNCPT89121" class="chapter"><a id="CHDFBCCC"></a>
<h1 class="chapter"><span class="secnum">19</span> Concepts for Database Developers</h1>
<p>The Oracle Database developer creates and maintains a database application. This section presents a brief overview of what a database developer does and the development tools available.</p>
<p>This section contains the following topics:</p>
<ul>
<li>
<p><a href="#CHDJFEGE">Duties of Database Developers</a></p>
</li>
<li>
<p><a href="#CHDCDEBH">Tools for Database Developers</a></p>
</li>
<li>
<p><a href="#CHDEAFJJ">Topics for Database Developers</a></p>
</li>
</ul>
<a id="CHDJFEGE"></a>
<div id="CNCPT944" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Duties of Database Developers</h2>
<p><a id="sthref2188"></a>An Oracle developer is responsible for creating or maintaining the database components of an application that uses the Oracle technology stack. Oracle developers either develop new applications or convert existing applications to run in an Oracle Database environment. For this reason, developers work closely with the database administrators, sharing knowledge and information.</p>
<p>Oracle database developers can expect to be involved in the following tasks:</p>
<ul>
<li>
<p>Implementing the data model required by the application</p>
</li>
<li>
<p>Creating <a href="glossary.htm#CHDBHJCF"><span class="xrefglossterm">schema objects</span></a> and implementing rules for <a href="glossary.htm#CBACGDCA"><span class="xrefglossterm">data integrity</span></a></p>
</li>
<li>
<p>Choosing a programming environment for a new development project</p>
</li>
<li>
<p>Writing server-side <a href="glossary.htm#CBAIDJHG"><span class="xrefglossterm">PL/SQL</span></a> or Java subprograms and client-side procedural code that use <a href="glossary.htm#CHDGGEDJ"><span class="xrefglossterm">SQL</span></a> statements</p>
</li>
<li>
<p>Creating the application interface with the chosen development tool</p>
</li>
<li>
<p>Establishing a Globalization Support environment for developing globalized applications</p>
</li>
<li>
<p>Instantiating applications in different databases for development, testing, education, and deployment in a production environment</p>
</li>
</ul>
<p>The preceding tasks, and many others, are described in <a class="olink TDDDG10000" href="../../appdev.112/e10766/tdddg_intro.htm#TDDDG10000"><span class="italic">Oracle Database 2 Day Developer's Guide</span></a> and <a class="olink ADFNS" href="../../appdev.112/e41502/toc.htm"><span class="italic">Oracle Database Advanced Application Developer's Guide</span></a>.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="srvrside.htm#i19998">"Introduction to Server-Side Programming"</a></div>
</div>
<!-- class="sect1" -->
<a id="CHDCDEBH"></a>
<div id="CNCPT945" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Tools for Database Developers</h2>
<p><a id="sthref2189"></a>Oracle provides several tools for use in developing database applications. This section describes some commonly used development tools.</p>
<a id="CHDHIHDE"></a>
<div id="CNCPT7654" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">SQL Developer</h3>
<p><span class="bold">SQL Developer</span> is a graphical version of <a href="glossary.htm#CBABDHBD"><span class="xrefglossterm">SQL*Plus</span></a>, written in Java, that supports development in SQL and PL/SQL. You can connect to any Oracle database schema using standard database authentication. SQL Developer enables you to:</p>
<ul>
<li>
<p>Browse, create, edit, and delete schema objects</p>
</li>
<li>
<p>Execute SQL statements</p>
</li>
<li>
<p>Edit and debug PL/SQL program units</p>
</li>
<li>
<p>Manipulate and export data</p>
</li>
<li>
<p>Create and display reports</p>
</li>
</ul>
<p>SQL Developer is available in the default Oracle Database installation and by free download.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink TDDDG12200" href="../../appdev.112/e10766/tdddg_connecting.htm#TDDDG12200"><span class="italic">Oracle Database 2 Day Developer's Guide</span></a> and <a class="olink RPTUG10000" href="../../doc.112/e12152/intro.htm#RPTUG10000"><span class="italic">Oracle SQL Developer User's Guide</span></a> to learn how to use SQL Developer</div>
</div>
<!-- class="sect2" -->
<a id="CHDBICJA"></a>
<div id="CNCPT7655" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Oracle Application Express</h3>
<p><span class="bold">Oracle Application Express (APEX)</span> is a Web application development tool for Oracle Database. The tool uses built-in features such as user interface themes, navigational controls, form handlers, and flexible reports to accelerate application development.</p>
<p>Oracle Application Express installs with the database and consists of data in tables and PL/SQL code. When you run an application, your browser sends a URL request that is translated into an Oracle Application Express PL/SQL call. After the database processes the PL/SQL, the results are relayed back to the browser as HTML. This cycle happens each time you request or submit a page.</p>
<p>You can use Oracle Application Express with the embedded PL/SQL gateway. The gateway runs in the XML DB HTTP server in the database and provides the necessary infrastructure to create dynamic applications. As shown in <a href="#CHDDEJFJ">Figure 19-1</a>, the embedded PL/SQL gateway simplifies the application architecture by eliminating the middle tier.</p>
<div id="CNCPT89122" class="figure">
<p class="titleinfigure"><a id="CHDDEJFJ"></a>Figure 19-1 Application Express with Embedded PL/SQL Gateway</p>
<img width="314" height="129" src="img/cncpt317.gif" alt="Description of Figure 19-1 follows" /><br />
<a id="sthref2190" href="img_text/cncpt317.htm">Description of "Figure 19-1 Application Express with Embedded PL/SQL Gateway"</a><br />
<br /></div>
<!-- class="figure" -->
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink TDPAX01000" href="../../appdev.112/e11946/intro_app.htm#TDPAX01000"><span class="italic">Oracle Database 2 Day + Application Express Developer's Guide</span></a> to learn how to use APEX</div>
</div>
<!-- class="sect2" -->
<a id="CHDIFHCJ"></a>
<div id="CNCPT7656" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Oracle JDeveloper</h3>
<p><span class="bold">Oracle JDeveloper</span> is an integrated development environment (IDE) for building service-oriented applications using the latest industry standards for Java, XML, Web services, and SQL. Oracle JDeveloper supports the complete software development life cycle, with integrated features for modeling, coding, debugging, testing, profiling, tuning, and deploying applications.</p>
<p>JDeveloper uses windows for various application development tools. For example, when creating a Java application, you can use tools such as the Java Visual Editor and Component Palette. In addition to these tools, JDeveloper provides a range of navigators to help you organize and view the contents of your projects.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a class="olink TDPJD106" href="../../appdev.112/e12137/introduction.htm#TDPJD106"><span class="italic">Oracle Database 2 Day + Java Developer's Guide</span></a> to learn how to use JDeveloper</p>
</li>
<li>
<p>You can download JDeveloper from the following URL: <code dir="ltr"><a href="http://www.oracle.com/technetwork/developer-tools/jdev/downloads/">http://www.oracle.com/technetwork/developer-tools/jdev/downloads/</a></code></p>
</li>
</ul>
</div>
</div>
<!-- class="sect2" -->
<a id="CHDCADJF"></a>
<div id="CNCPT1809" class="sect2">
<h3 class="sect2">Oracle JPublisher</h3>
<p><span class="bold">Java Publisher (JPublisher)</span> is a simple and convenient tool to create Java programs that access database tables. Java code stubs generated by JDeveloper present object-relational structures in the database as Java classes. These classes can represent the following user-defined database entities in a Java program:</p>
<ul>
<li>
<p>SQL object types</p>
</li>
<li>
<p>Object reference types</p>
</li>
<li>
<p>SQL collection types</p>
</li>
<li>
<p>PL/SQL packages</p>
</li>
</ul>
<p>You can specify and customize the mapping of these entities to Java classes in a <span class="bold">strongly typed</span> paradigm, so that a specific Java type is associated with a specific user-defined SQL type. JPublisher can also generate classes for PL/SQL packages. These classes have wrapper methods to call the <a href="glossary.htm#CHDJCAFC"><span class="xrefglossterm">stored procedure</span></a> in the package.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink JJPUB" href="../../java.112/e10587/toc.htm"><span class="italic">Oracle Database JPublisher User's Guide</span></a></div>
</div>
<!-- class="sect2" -->
<a id="CHDFBDAB"></a>
<div id="CNCPT7657" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Oracle Developer Tools for Visual Studio .NET</h3>
<p><span class="bold">Oracle Developer Tools for Visual Studio .NET</span> is a set of application tools integrated with the Visual Studio .NET environment. These tools provide GUI access to Oracle functionality, enable the user to perform a wide range of application development tasks, and improve development productivity and ease of use.</p>
<p>Oracle Developer Tools support the programming and implementation of .NET stored procedures using Visual Basic, C#, and other .NET languages. These procedures are written in a .NET language and contain SQL or PL/SQL statements.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink TDPNG10000" href="../../appdev.112/e10767/introduction.htm#TDPNG10000"><span class="italic">Oracle Database 2 Day + .NET Developer's Guide for Microsoft Windows</span></a></div>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="CHDEAFJJ"></a>
<div id="CNCPT7658" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Topics for Database Developers</h2>
<p><a id="sthref2191"></a><a href="cmntopc.htm#BABICDJI">Chapter 17</a> describes topics important for both developers and administrators. This section covers topics that are most essential to database developers and that have not been discussed elsewhere in the manual.</p>
<p>This section contains the following topics:</p>
<ul>
<li>
<p><a href="#CHDEHHIJ">Principles of Application Design and Tuning</a></p>
</li>
<li>
<p><a href="#CHDIAAIB">Client-Side Database Programming</a></p>
</li>
<li>
<p><a href="#i60909">Globalization Support</a></p>
</li>
<li>
<p><a href="#BABJDBDJ">Unstructured Data</a></p>
</li>
</ul>
<a id="CHDEHHIJ"></a>
<div id="CNCPT7659" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Principles of Application Design and Tuning</h3>
<p>Oracle developers must design, create, and tune database applications so that they achieve security and performance goals. The following principles of application design and tuning are useful guidelines:</p>
<ul>
<li>
<p>Understand how Oracle Database works</p>
<p>As a developer, you want to develop applications in the least amount of time against an Oracle database, which requires exploiting the database architecture and features. For example, not understanding Oracle Database <a href="glossary.htm#CBADBFCB"><span class="xrefglossterm">concurrency</span></a> controls and multiversioning <a href="glossary.htm#CHDEDACC"><span class="xrefglossterm">read consistency</span></a> may make an application corrupt the integrity of the data, run slowly, and decrease scalability (see <a href="consist.htm#i5700">"Introduction to Data Concurrency and Consistency"</a>).</p>
</li>
<li>
<p>Use bind variables</p>
<p>When a <a href="glossary.htm#CHDGABIG"><span class="xrefglossterm">query</span></a> uses <a href="glossary.htm#CHDBIGEC"><span class="xrefglossterm">bind variables</span></a>, the database can compile it once and store the <a href="glossary.htm#CHDICHFA"><span class="xrefglossterm">query plan</span></a> in the <a href="glossary.htm#CBAIACIC"><span class="xrefglossterm">shared pool</span></a>. If the same statement is executed again, then the database can perform a <a href="glossary.htm#CHDICIJI"><span class="xrefglossterm">soft parse</span></a> and reuse the plan. In contrast, a <a href="glossary.htm#CHDCGEBJ"><span class="xrefglossterm">hard parse</span></a> takes longer and uses more resources (see <a href="sqllangu.htm#CHDHFFHA">"SQL Parsing"</a>). Using bind variables to allow soft parsing is very efficient and is the way the database intends developers to work.</p>
</li>
<li>
<p>Implement <a href="glossary.htm#CHDBFDIE"><span class="xrefglossterm">integrity constraints</span></a> in the server rather than in the client</p>
<p>Using primary and foreign keys enables data to be reused in multiple applications. Coding the rules in a client means that other clients do not have access to these rules when running against the databases (see <a href="datainte.htm#CHDDHFAJ">"Advantages of Integrity Constraints"</a>).</p>
</li>
<li>
<p>Build a test environment with representative data and session activity</p>
<p>A test environment that simulates your live production environment provides multiple benefits. For example, you can benchmark the application to ensure that it scales and performs well. Also, you can use a test environment to measure the performance impact of changes to the database, and ensure that upgrades and patches work correctly.</p>
</li>
<li>
<p>Design the data model with the goal of good performance</p>
<p>Typically, attempts to use generic data models result in poor performance. A well-designed data model answer the most common queries as efficiently as possible. For example, the data model should use the type of indexes that provide the best performance. Tuning after deployment is undesirable because changes to logic and physical structures may be difficult or impossible.</p>
</li>
<li>
<p>Define clear performance goals and keep historical records of metrics</p>
<p>An important facet of development is determining exactly how the application is expected to perform and scale. For example, you should use metrics that include expected user load, transactions per second, acceptable response times, and so on. Good practice dictates that you maintain historical records of performance metrics. In this way, you can monitor performance proactively and reactively (see <a href="cncptdba.htm#CHDEECCE">"Performance Diagnostics and Tuning"</a>).</p>
</li>
<li>
<p>Instrument the application code</p>
<p>Good development practice involves adding debugging code to your application. The ability to generate trace files is useful for debugging and diagnosing performance problems.</p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink TDDDG70000" href="../../appdev.112/e10766/tdddg_deploying.htm#TDDDG70000"><span class="italic">Oracle Database 2 Day Developer's Guide</span></a> for considerations when designing and deploying database applications</div>
</div>
<!-- class="sect2" -->
<a id="CHDIAAIB"></a>
<div id="CNCPT1040" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2">Client-Side Database Programming</h3>
<p>As explained in <a href="srvrside.htm#g23577">Chapter 8, "Server-Side Programming: PL/SQL and Java"</a>, two basic techniques enable procedural database applications to use SQL: server-side programming with PL/SQL and Java, and client-side programming with precompilers and APIs. This section provides a brief overview of client-side database programming.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink ADFNS00109" href="../../appdev.112/e41502/adfns_environments.htm#ADFNS00109"><span class="italic">Oracle Database Advanced Application Developer's Guide</span></a> to learn how to choose a programming environment</div>
<a id="CHDEBEBH"></a>
<div id="CNCPT7660" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Embedded SQL</h4>
<p>Historically, client/server programs have used <span class="bold">embedded SQL</span> to interact with the database. This section explains options for using embedded SQL.</p>
<div id="CNCPT1765" class="sect4"><!-- infolevel="all" infotype="General" --><a id="sthref2192"></a>
<h5 class="sect4">Oracle Precompilers</h5>
<p>Client/server programs are typically written using <span class="bold">precompilers</span>, which are programming tools that enable you to embed SQL statements in high-level programs. For example, the Oracle Pro*C/C++ precompiler enables you to embed SQL statements in a C or C++ source file. Oracle precompilers are also available for COBOL and FORTRAN.</p>
<p>A precompiler provides several benefits, including the following:</p>
<ul>
<li>
<p>Increases productivity because you typically write less code than equivalent OCI applications</p>
</li>
<li>
<p>Enables you to create highly customized applications</p>
</li>
<li>
<p>Allows close monitoring of resource use, SQL statement execution, and various run-time indicators</p>
</li>
<li>
<p>Saves time because the precompiler, not you, translates each embedded SQL statement into calls to the Oracle Database run-time library</p>
</li>
<li>
<p>Uses the Object Type Translator to map Oracle Database object types and collections into C data types to be used in the Pro*C/C++ application</p>
</li>
<li>
<p>Provides compile time type checking of object types and collections and automatic type conversion from database types to C data types</p>
</li>
</ul>
<p>The client application containing the SQL statements is the <span class="bold">host program</span>. This program is written in the <span class="bold">host language</span>. In the host program, you can mix complete SQL statements with complete C statements and use C variables or structures in SQL statements. When embedding SQL statements you must begin them with the keywords <code dir="ltr">EXEC SQL</code> and end them with a semicolon. Pro*C/C++ translates <code dir="ltr">EXEC SQL</code> statements into calls to the run-time library SQLLIB.</p>
<p>Many embedded SQL statements differ from their interactive counterparts only through the addition of a new clause or the use of program variables. The following example compares interactive and embedded <code dir="ltr">ROLLBACK</code> statements:</p>
<pre dir="ltr">
ROLLBACK;           -- interactive
EXEC SQL ROLLBACK;  -- embedded
</pre>
<p>The statements have the same effect, but you would use the first in an interactive SQL environment (such as SQL Developer), and the second in a Pro*C/C++ program.</p>
<p>A precompiler accepts the host program as input, translates the embedded SQL statements into standard database run-time library calls, and generates a source program that you can compile, link, and run in the usual way. <a href="#BABDJCFJ">Figure 19-2</a> illustrates typical steps of developing programs that use precompilers.</p>
<div id="CNCPT89123" class="figure">
<p class="titleinfigure"><a id="BABDJCFJ"></a>Figure 19-2 Program Development with Precompilers</p>
<img width="467" height="503" src="img/cncpt253.gif" alt="Description of Figure 19-2 follows" /><br />
<a id="sthref2193" href="img_text/cncpt253.htm">Description of "Figure 19-2 Program Development with Precompilers"</a><br />
<br /></div>
<!-- class="figure" -->
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a class="olink LNPCC" href="../../appdev.112/e10825/toc.htm"><span class="italic">Pro*C/C++ Programmer's Guide</span></a> for a complete description of the Pro*C/C++ precompiler</p>
</li>
<li>
<p><a class="olink ZZFOR" href="../../appdev.112/e10828/toc.htm"><span class="italic">Pro*FORTRAN Supplement to the Oracle Precompilers Guide</span></a></p>
</li>
</ul>
</div>
</div>
<!-- class="sect4" -->
<a id="CHDIEHED"></a>
<div id="CNCPT7661" class="sect4"><!-- infolevel="all" infotype="General" -->
<h5 class="sect4">SQLJ</h5>
<p><span class="bold">SQLJ</span> is an ANSI SQL-1999 standard for embedding SQL statements in Java source code. SQLJ provides a simpler alternative to the Java Database Connectivity (JDBC) <a id="sthref2194"></a>API for client-side SQL data access from Java.</p>
<p>The SQLJ interface is the Java equivalent of the Pro* interfaces. You insert SQL statements in your Java source code. Afterward, you submit the Java source files to the SQLJ translator, which translates the embedded SQL to pure JDBC-based Java code.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="srvrside.htm#BABEHAFG">"SQLJ"</a></div>
</div>
<!-- class="sect4" --></div>
<!-- class="sect3" -->
<a id="CHDHJGCD"></a>
<div id="CNCPT7662" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3">Client-Side APIs</h4>
<p>Most developers today use an API to embed SQL in their database applications. For example, two popular APIs for enabling programs to communicate with Oracle Database are Open Database Connectivity (ODBC) and JDBC. The Oracle Call Interface (OCI) and Oracle C++ Call Interface (OCCI) are two other common APIs for client-side programming.</p>
<div id="CNCPT7663" class="sect4"><!-- infolevel="all" infotype="General" --><a id="sthref2195"></a>
<h5 class="sect4">OCI and OCCI</h5>
<p>As an alternative to precompilers, Oracle provides the <a id="sthref2196"></a>OCI and OCCI APIs. OCI lets you manipulate data and schemas in a database using a host programming language such as C. OCCI is an object-oriented interface suitable for use with C++. Both APIs enable developers to use native subprogram invocations to access Oracle Database and control SQL execution.</p>
<p>In some cases, OCI provides better performance or more features than higher-level interfaces. OCI and OCCI provide many features, including the following:</p>
<ul>
<li>
<p>Support for all SQL <a href="glossary.htm#CHDFBCII"><span class="xrefglossterm">DDL</span></a>, <a href="glossary.htm#CBADGAJE"><span class="xrefglossterm">DML</span></a>, query, and transaction control facilities available through Oracle Database</p>
</li>
<li>
<p>Instant client, a way to deploy applications when disk space is an issue</p>
</li>
<li>
<p>Thread management, connection pooling, globalization functions, and direct path loading of data from a C application</p>
</li>
</ul>
<p>OCI and OCCI provide a library of standard database access and retrieval functions in the form of a dynamic run-time library (OCILIB). This library can be linked in an application at run time. Thus, you can compile and link an OCI or OCCI program in the same way as a nondatabase application, avoiding a separate preprocessing or precompilation step. <a href="#CHDIFEAD">Figure 19-3</a> illustrates the development process.</p>
<div id="CNCPT89124" class="figure">
<p class="titleinfigure"><a id="CHDIFEAD"></a>Figure 19-3 Development Process Using OCI or OCCI</p>
<img width="404" height="342" src="img/cncpt307.gif" alt="Description of Figure 19-3 follows" /><br />
<a id="sthref2197" href="img_text/cncpt307.htm">Description of "Figure 19-3 Development Process Using OCI or OCCI"</a><br />
<br /></div>
<!-- class="figure" -->
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a class="olink LNOCI16114" href="../../appdev.112/e10646/oci01int.htm#LNOCI16114"><span class="italic">Oracle Call Interface Programmer's Guide</span></a></p>
</li>
<li>
<p><a class="olink LNCPP001" href="../../appdev.112/e10764/introduction.htm#LNCPP001"><span class="italic">Oracle C++ Call Interface Programmer's Guide</span></a></p>
</li>
</ul>
</div>
</div>
<!-- class="sect4" -->
<a id="CHDCAFAF"></a>
<div id="CNCPT1812" class="sect4">
<h5 class="sect4">ODBC and JDBC</h5>
<p>ODBC is a standard <a id="sthref2198"></a><a id="sthref2199"></a>API that enables applications to connect to a database and then prepare and run SQL statements. ODBC is independent of programming language, database, and operating system. The goal of ODBC is to enable any application to access data contained in any database.</p>
<p>A <span class="bold">database driver</span> is software that sits between an application and the database. The driver translates the API calls made by the application into commands that the database can process. By using an ODBC driver, an application can access any data source, including data stored in spreadsheets. The ODBC driver performs all mappings between the ODBC standard and the database.</p>
<p>The Oracle ODBC driver provided by Oracle enables ODBC-compliant applications to access Oracle Database. For example, an application written in Visual Basic can use ODBC to query and update tables in an Oracle database.</p>
<p>JDBC is a low-level Java interface that enables Java applications to interact with Oracle database. Like ODBC, JDBC is a vendor-independent API. The JDBC standard is defined by Sun Microsystems and implemented through the <code dir="ltr">java.sql</code> interfaces.</p>
<p>The JDBC standard enables individual providers to implement and extend the standard with their own JDBC drivers. Oracle provides the following JDBC drivers for client-side programming:</p>
<ul>
<li>
<p>JDBC thin driver</p>
<p>This pure Java driver resides on the client side without an Oracle client installation. It is platform-independent and usable with both applets and applications.</p>
</li>
<li>
<p>JDBC OCI driver</p>
<p>This driver resides on the client-side with an Oracle client installation. It is usable only with applications. The JDBC OCI driver, which is written in both C and Java, converts JDBC calls to OCI calls.</p>
</li>
</ul>
<p>The following snippets are from a Java program that uses the JDBC OCI driver to create a <code dir="ltr">Statement</code> object and query the <code dir="ltr">dual</code> table:</p>
<pre dir="ltr">
// Create a statement
Statement stmt = conn.createStatement();
 
// Query dual table
ResultSet rset = stmt.executeQuery("SELECT 'Hello World' FROM DUAL");
</pre>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a class="olink ADFNS00103" href="../../appdev.112/e41502/adfns_environments.htm#ADFNS00103"><span class="italic">Oracle Database Advanced Application Developer's Guide</span></a> and <span class="italic">Oracle Database 2 Day + Java Developer's Guide</span> to learn more about JDBC</p>
</li>
<li>
<p><a class="olink ODBCU100" href="../../gateways.112/e12070/intro.htm#ODBCU100"><span class="italic">Oracle Database Gateway for ODBC User's Guide</span></a></p>
</li>
</ul>
</div>
</div>
<!-- class="sect4" --></div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="i60909"></a>
<div id="CNCPT1045" class="sect2">
<h3 class="sect2">Globalization Support</h3>
<p>Oracle Database <span class="bold">globalization support</span> enables you to store, process, and retrieve data in native languages. Thus, you can develop multilingual applications and software that can be accessed and run from anywhere in the world simultaneously.</p>
<p>Developers who write globalized database application must do the following:</p>
<ul>
<li>
<p>Understand the Oracle Database globalization support architecture, including the properties of the different character sets, territories, languages, and linguistic sort definitions</p>
</li>
<li>
<p>Understand the globalization functionality of their middle-tier programming environment, including how it can interact and synchronize with the locale model of the database</p>
</li>
<li>
<p>Design and write code capable of simultaneously supporting multiple clients running on different operating systems, with different character sets and locale requirements</p>
</li>
</ul>
<p>For example, an application may be required to render content of the user interface and process data in languages and locale preferences of native users. For example, the application must process multibyte Kanji data, display messages and dates in the proper regional format, and process 7-bit ASCII data without requiring users to change settings.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink NLSPG001" href="../../server.112/e10729/ch1overview.htm#NLSPG001"><span class="italic">Oracle Database Globalization Support Guide</span></a> for more information about globalization</div>
<div id="CNCPT7664" class="sect3"><!-- infolevel="all" infotype="General" --><a id="sthref2200"></a>
<h4 class="sect3">Globalization Support Environment</h4>
<p>The <span class="bold">globalization support environment</span> includes the client application and the database. You can control language-dependent operations by setting parameters and environment variables on the client and server, which may exist in separate locations.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
In previous releases, Oracle referred to globalization support capabilities as National Language Support (NLS) features. NLS is actually a subset of globalization support and provides the ability to choose a national language and store data in a specific character set.</div>
<p>Oracle Database provides globalization support for features such as:</p>
<ul>
<li>
<p>Native languages and territories</p>
</li>
<li>
<p>Local formats for date, time, numbers, and currency</p>
</li>
<li>
<p>Calendar systems (Gregorian, Japanese, Imperial, Thai Buddha, and so on)</p>
</li>
<li>
<p>Multiple character sets, including Unicode</p>
</li>
<li>
<p>Character semantics</p>
</li>
</ul>
<a id="CHDHHEDD"></a>
<div id="CNCPT7665" class="sect4"><!-- infolevel="all" infotype="General" -->
<h5 class="sect4">Character Sets</h5>
<p>A key component of globalization support is a <span class="bold">character set</span>, which is an encoding scheme used to display characters on your computer screen. The following distinction is important in application development:</p>
<ul>
<li>
<p>A <span class="bold">database character set</span> determines which languages can be represented in a database. The character set is specified at database creation.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
After a database is created, changing its character set is usually very expensive in terms of time and resources. This operation may require converting all character data by exporting the whole database and importing it back.</div>
</li>
<li>
<p>A <span class="bold">client character set</span> is the character set for data entered or displayed by a client application. The character set for the client and database can be different.</p>
</li>
</ul>
<p>A group of characters (for example, alphabetic characters, ideographs, symbols, punctuation marks, and control characters) can be encoded as a character set. An <span class="bold">encoded character set</span> assigns a unique numeric code, called a <span class="bold">code point</span> or <span class="bold">encoded value</span>, to each character in the set. Code points are important in a global environment because of the potential need to convert data between different character sets.</p>
<p>The computer industry uses many encoded character sets. These sets differ in the number of characters available, the characters available for use, code points assigned to each character, and so on. Oracle Database supports most national, international, and vendor-specific encoded character set standards.</p>
<p>Oracle Database supports the following classes of encoded character sets:</p>
<ul>
<li>
<p>Single-Byte character sets</p>
<p>Each character occupies one byte. An example of a 7-bit character set is US7ASCII. An example of an 8-bit character set is WE8DEC.</p>
</li>
<li>
<p>Multibyte character sets</p>
<p>Each character occupies multiple bytes. Multibyte sets are commonly used for Asian languages.</p>
</li>
<li>
<p>Unicode</p>
<p>The universal encoded character set enables you to store information in any language by using a single character set. Unicode provides a unique code value for every character, regardless of the platform, program, or language.</p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink NLSPG011" href="../../server.112/e10729/ch11charsetmig.htm#NLSPG011"><span class="italic">Oracle Database Globalization Support Guide</span></a> to learn about character set migration</div>
</div>
<!-- class="sect4" -->
<a id="CHDIEABI"></a>
<div id="CNCPT7666" class="sect4"><!-- infolevel="all" infotype="General" -->
<h5 class="sect4">Locale-Specific Settings</h5>
<p>A <span class="bold">locale</span> is a linguistic and cultural environment in which a system or program is running. <span class="bold">NLS parameters</span> determine locale-specific behavior on both the client and database. A database session uses NLS settings when executing statements on behalf of a client. For example, the database makes the correct territory usage of the thousands separator for a client.</p>
<p>Typically, the <code dir="ltr">NLS_LANG</code> environment variable on the client host specifies the locale for both the server session and client application. The process is as follows:</p>
<ol>
<li>
<p>When a client application starts, it initializes the client NLS environment from the environment settings.</p>
<p>All NLS operations performed locally, such as displaying formatting in Oracle Developer applications, use these settings.</p>
</li>
<li>
<p>The client communicates the information defined by <code dir="ltr">NLS_LANG</code> to the database when it connects.</p>
</li>
<li>
<p>The database session initializes its NLS environment based on the settings communicated by the client.</p>
<p>If the client did not specify settings, then the session uses the settings in the initialization parameter file. The database uses the initialization parameter settings only if the client did not specify any NLS settings. If the client specified some NLS settings, then the remaining NLS settings default.</p>
</li>
</ol>
<p>Each session started on behalf of a client application may run in the same or a different locale as other sessions. For example, one session may use the German locale while another uses the French locale. Also, each session may have the same or different language requirements specified.</p>
<p><a href="#CHDJAAFH">Table 19-1</a> shows two clients using different <code dir="ltr">NLS_LANG</code> settings. A user starts SQL*Plus on each host, logs on to the same database as <code dir="ltr">hr</code>, and runs the same query simultaneously. The result for each session differs because of the locale-specific NLS setting for floating-point numbers.</p>
<div id="CNCPT89125" class="tblruleformal">
<p class="titleintable"><a id="sthref2201"></a><a id="CHDJAAFH"></a>Table 19-1 Locale-Specific NLS Settings</p>
<table class="cellalignment1460" title="Locale-Specific NLS Settings" summary="Example of locale-specific NLS settings" dir="ltr">
<thead>
<tr class="cellalignment1449">
<th class="cellalignment1459" id="r1c1-t18">t</th>
<th class="cellalignment1459" id="r1c2-t18">Client Host 1</th>
<th class="cellalignment1459" id="r1c3-t18">Client Host 2</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1449">
<td class="cellalignment1455" id="r2c1-t18" headers="r1c1-t18">
<p>t0</p>
</td>
<td class="cellalignment1455" headers="r2c1-t18 r1c2-t18">
<pre dir="ltr">
$ export NLS_LANG=American_America.US7ASCII
</pre></td>
<td class="cellalignment1455" headers="r2c1-t18 r1c3-t18">
<pre dir="ltr">
$ export NLS_LANG=German_Germany.US7ASCII
</pre></td>
</tr>
<tr class="cellalignment1449">
<td class="cellalignment1455" id="r3c1-t18" headers="r1c1-t18">
<p>t1</p>
</td>
<td class="cellalignment1455" headers="r3c1-t18 r1c2-t18">
<pre dir="ltr">
$ sqlplus /nolog
SQL&gt; CONNECT hr@proddb
Enter password: *******
SQL&gt; SELECT 999/10 FROM DUAL;
 
999/10
----------
99.9
</pre></td>
<td class="cellalignment1455" headers="r3c1-t18 r1c3-t18">
<pre dir="ltr">
$ sqlplus /nolog
SQL&gt; CONNECT hr@proddb
Enter password: *******
SQL&gt; SELECT 999/10 FROM DUAL;
 
999/10
----------
99,9
</pre></td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblruleformal" -->
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink TDPJD253" href="../../appdev.112/e12137/globapps.htm#TDPJD253"><span class="italic">Oracle Database 2 Day + Java Developer's Guide</span></a> and <a class="olink NLSPG189" href="../../server.112/e10729/ch3globenv.htm#NLSPG189"><span class="italic">Oracle Database Globalization Support Guide</span></a> to learn about NLS settings</div>
</div>
<!-- class="sect4" --></div>
<!-- class="sect3" -->
<div id="CNCPT7667" class="sect3"><!-- infolevel="all" infotype="General" --><a id="sthref2202"></a>
<h4 class="sect3">Oracle Globalization Development Kit</h4>
<p>The <span class="bold">Oracle Globalization Development Kit (GDK)</span> simplifies the development process and reduces the cost of developing Internet applications used to support a global environment. The GDK includes comprehensive programming APIs for both Java and PL/SQL, code samples, and documentation that address many of the design, development, and deployment issues encountered while creating global applications.</p>
<p>The GDK mainly consists of two parts: GDK for Java and GDK for PL/SQL. GDK for Java provides globalization support to Java applications. GDK for PL/SQL provides globalization support to the PL/SQL programming environment. The features offered in the two parts are not identical.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink NLSPG008" href="../../server.112/e10729/ch8gdk.htm#NLSPG008"><span class="italic">Oracle Database Globalization Support Guide</span></a></div>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="BABJDBDJ"></a>
<div id="CNCPT1534" class="sect2">
<h3 class="sect2">Unstructured Data</h3>
<p>The traditional relational model deals with simple structured data that fits into simple tables. Oracle Database also provides support for <span class="bold">unstructured data</span>, which cannot be decomposed into standard components. Unstructured data includes text, graphic images, video clips, and sound waveforms.</p>
<p>Oracle Database includes data types to handle unstructured content. These data types appear as native types in the database and can be queried using SQL.</p>
<div id="CNCPT1535" class="sect3"><a id="sthref2203"></a>
<h4 class="sect3">Overview of XML in Oracle Database</h4>
<p><span class="bold">Oracle XML DB</span> is a set of Oracle Database technologies related to high-performance XML storage and retrieval. XML DB provides native XML support by encompassing both SQL and XML data models in an interoperable manner.</p>
<p>Oracle XML DB is suited for any Java or PL/SQL application where some or all of the data processed by the application is represented using XML. For example, the application may have large numbers of XML documents that must be ingested, generated, validated, and searched.</p>
<p>Oracle XML DB provides many features, including the following:</p>
<ul>
<li>
<p>The native <code dir="ltr">XMLType</code><a id="sthref2204"></a> data type, which can represent an XML document in the database so that it is accessible by SQL</p>
</li>
<li>
<p>Support for XML standards such as XML Schema, XPath, XQuery, XSLT, and DOM</p>
</li>
<li>
<p><code dir="ltr">XMLIndex</code>, which supports all forms of XML data, from highly structured to completely unstructured</p>
</li>
</ul>
<p><a href="#CHDEIGAI">Example 19-1</a> creates a table <code dir="ltr">orders</code> of type <code dir="ltr">XMLType</code>. The example also creates a SQL <a href="glossary.htm#CHDIECDG"><span class="xrefglossterm">directory object</span></a>, which is a logical name in the database for a physical directory on the host computer. This directory contains XML files. The example inserts XML content from the <code dir="ltr">purchaseOrder.xml</code> file into the <code dir="ltr">orders</code> table.</p>
<div id="CNCPT89126" class="example">
<p class="titleinexample"><a id="CHDEIGAI"></a>Example 19-1 XMLType</p>
<pre dir="ltr">
CREATE TABLE orders OF XMLType;
CREATE DIRECTORY xmldir AS <span class="italic">path_to_folder_containing_XML_file</span>;
INSERT INTO orders VALUES (XMLType(bfilename('XMLDIR', 'purchaseOrder.xml'),
                                       nls_charset_id('AL32UTF8')));
</pre></div>
<!-- class="example" -->
<p>The <span class="bold">Oracle XML developer's kits (XDK)</span> contain the basic building blocks for reading, manipulating, transforming, and viewing XML documents, whether on a file system or in a database. APIs and tools are available for Java, C, and C++. The production Oracle XDKs are fully supported and come with a commercial redistribution license.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a class="olink ADXDB0100" href="../../appdev.112/e23094/xdb01int.htm#ADXDB0100"><span class="italic">Oracle XML DB Developer's Guide</span></a></p>
</li>
<li>
<p><a class="olink ADXDK100" href="../../appdev.112/e23582/adx_overview.htm#ADXDK100"><span class="italic">Oracle XML Developer's Kit Programmer's Guide</span></a></p>
</li>
<li>
<p><a class="olink JAXML" href="../../appdev.112/e10769/toc.htm"><span class="italic">Oracle Database XML Java API Reference</span></a></p>
</li>
</ul>
</div>
</div>
<!-- class="sect3" -->
<a id="CHDHBGHD"></a>
<div id="CNCPT1536" class="sect3">
<h4 class="sect3">Overview of LOBs</h4>
<p>The <a href="glossary.htm#CHDDBDBB"><span class="xrefglossterm">large object (LOB)</span></a> data types enable you to store and manipulate large blocks of unstructured data in binary or character format. LOBs provide efficient, random, piece-wise access to the data.</p>
<a id="CHDHCHIC"></a>
<div id="CNCPT89127" class="sect4"><!-- infolevel="all" infotype="General" -->
<h5 class="sect4">Internal LOBs</h5>
<p>An <span class="bold">internal LOB</span> stores data in the database itself rather than in external files. Internal LOBS include the following:</p>
<ul>
<li>
<p><code dir="ltr">CLOB</code> (character LOB), which stores large amounts of text, such as text or XML files, in the database character set</p>
</li>
<li>
<p><code dir="ltr">NCLOB</code> (national character set LOB), which stores Unicode data</p>
</li>
<li>
<p><code dir="ltr">BLOB</code> (binary LOB), which stores large amounts of binary information as a bit stream and is not subject to character set translation</p>
</li>
</ul>
<p>The database stores LOBs differently from other data types. Creating a LOB column implicitly creates a <span class="bold">LOB segment</span> and a <span class="bold">LOB index</span> (see <a href="logical.htm#BABCHJFH">"User Segment Creation"</a>). The tablespace containing the LOB segment and LOB index, which are always stored together, may be different from the tablespace containing the table.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
Sometimes the database can store small amounts of LOB data in the table itself rather than in a separate LOB segment.</div>
<p>The LOB segment stores data in pieces called <span class="bold">chunks</span>. A chunk is a logically contiguous set of data blocks and is the smallest unit of allocation for a LOB. A row in the table stores a pointer called a <span class="bold">LOB locator</span>, which points to the LOB index. When the table is queried, the database uses the LOB index to quickly locate the LOB chunks.</p>
<p>The database manages <a href="glossary.htm#CHDEDACC"><span class="xrefglossterm">read consistency</span></a> for LOB segments differently from other data (see <a href="consist.htm#BABDDAGC">"Read Consistency and Undo Segments"</a>). Instead of using <a href="glossary.htm#CHDDFBFI"><span class="xrefglossterm">undo data</span></a> to record changes, the database stores the before images in the segment itself. When a transaction changes a LOB, the database allocates a new chunk and leaves the old data in place. If the transaction rolls back, then the database rolls back the changes to the index, which points to the old chunk.</p>
</div>
<!-- class="sect4" -->
<div id="CNCPT89128" class="sect4"><!-- infolevel="all" infotype="General" --><a id="sthref2205"></a>
<h5 class="sect4">External LOBs</h5>
<p>A <code dir="ltr">BFILE</code> (binary file LOB) is an <span class="bold">external LOB</span> because the database stores a pointer to a file in the operating system. The external data is read-only.</p>
<p>A <code dir="ltr">BFILE</code> uses a directory object to locate data. The amount of space consumed depends on the length of the directory object name and the length of the file name.</p>
<p>A <code dir="ltr">BFILE</code> does not use the same read consistency mechanism as internal LOBS because the binary file is external to the database. If the data in the file changes, then repeated reads from the same binary file may produce different results.</p>
</div>
<!-- class="sect4" -->
<div id="CNCPT89129" class="sect4"><!-- infolevel="all" infotype="General" --><a id="sthref2206"></a>
<h5 class="sect4">SecureFiles</h5>
<p><a id="sthref2207"></a>SecureFiles is a LOB data type specifically engineered to deliver high performance for file data comparable to that of traditional file systems, while retaining the advantages of Oracle Database. The <code dir="ltr">SECUREFILE</code> LOB parameter enables advanced features typically found in high-end file systems, such as deduplication, compression, encryption, and journaling.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="tablecls.htm#CBBCFGEJ">"Oracle Data Types"</a></p>
</li>
<li>
<p><a class="olink ADLOB4444" href="../../appdev.112/e18294/adlob_smart.htm#ADLOB4444"><span class="italic">Oracle Database SecureFiles and Large Objects Developer's Guide</span></a> to learn more about LOB data types</p>
</li>
</ul>
</div>
</div>
<!-- class="sect4" --></div>
<!-- class="sect3" -->
<div id="CNCPT1537" class="sect3"><a id="sthref2208"></a>
<h4 class="sect3">Overview of Oracle Text</h4>
<p><a id="sthref2209"></a><span class="bold">Oracle Text (Text)</span> is a fast and accurate full-text retrieval technology integrated with Oracle Database. Oracle Text indexes any document or textual content stored in file systems, databases, or on the Web. These documents can be searched based on their textual content, metadata, or attributes.</p>
<p>Oracle Text provides the following advantages:</p>
<ul>
<li>
<p>Oracle Text allows text searches to be combined with regular database searches in a single SQL statement. The Text index is in the database, and Text queries are run in the Oracle Database process. The <a href="glossary.htm#CHDCAIFG"><span class="xrefglossterm">optimizer</span></a> can choose the best <a href="glossary.htm#CHDFFBGF"><span class="xrefglossterm">execution plan</span></a> for any query, giving the best performance for ad hoc queries involving Text and structured criteria.</p>
</li>
<li>
<p>You can use Oracle Text with XML data. In particular, you can combine <code dir="ltr">XMLIndex</code> with Oracle Text indexing, taking advantage of both XML and a full-text index.</p>
</li>
<li>
<p>The Oracle Text SQL API makes it simple and intuitive to create and maintain Oracle Text indexes and run searches.</p>
</li>
</ul>
<p>For a use case, suppose you must create a catalog index for an auction site that sells electronic equipment. New inventory is added every day. Item descriptions, bid dates, and prices must be stored together. The application requires good response time for mixed queries. First, you create and populate a <code dir="ltr">catalog</code> table. You then use Oracle Text to create a <code dir="ltr">CTXCAT</code> index that you can query with the <code dir="ltr">CATSEARCH</code> operator in a <code dir="ltr">SELECT ... WHERE CATSEARCH</code> statement.</p>
<p><a href="#CHDBFDIB">Figure 19-4</a> illustrates the relation of the catalog table, its <code dir="ltr">CTXCAT</code> index, and the catalog application that uses the <code dir="ltr">CATSEARCH</code> operator to query the index.</p>
<div id="CNCPT89130" class="figure">
<p class="titleinfigure"><a id="CHDBFDIB"></a>Figure 19-4 Catalog Query Application</p>
<img width="371" height="125" src="img/ccapp017.gif" alt="Description of Figure 19-4 follows" /><br />
<a id="sthref2210" href="img_text/ccapp017.htm">Description of "Figure 19-4 Catalog Query Application"</a><br />
<br /></div>
<!-- class="figure" -->
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a class="olink CCAPP9001" href="../../text.112/e24435/overview.htm#CCAPP9001"><span class="italic">Oracle Text Application Developer's Guide</span></a> and <a class="olink CCREF" href="../../text.112/e24436/toc.htm"><span class="italic">Oracle Text Reference</span></a></p>
</li>
<li>
<p><a class="olink ADXDB1000" href="../../appdev.112/e23094/xdb09sea.htm#ADXDB1000"><span class="italic">Oracle XML DB Developer's Guide</span></a> to learn how to perform full-text search over XML data</p>
</li>
</ul>
</div>
</div>
<!-- class="sect3" -->
<div id="CNCPT1543" class="sect3"><a id="sthref2211"></a>
<h4 class="sect3">Overview of Oracle Multimedia</h4>
<p><span class="bold"><a id="sthref2212"></a>Oracle Multimedia</span> enables Oracle Database to store, manage, and retrieve images, medical images that follow the Digital Imaging and Communications in Medicine (DICOM) standard, audio, and video data in an integrated fashion with other enterprise information. Oracle Multimedia provides object types and methods for:</p>
<ul>
<li>
<p>Extracting metadata and attributes from multimedia data</p>
</li>
<li>
<p>Embedding metadata created by applications into image and DICOM data</p>
</li>
<li>
<p>Obtaining and managing multimedia data from Oracle Database, Web servers, file systems, and other servers</p>
</li>
<li>
<p>Performing operations such as thumbnail generation on image and DICOM data</p>
</li>
<li>
<p>Making DICOM data anonymous</p>
</li>
<li>
<p>Checking DICOM data for conformity to user-defined validation rules</p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a class="olink IMURG1000" href="../../appdev.112/e10777/ch_intr.htm#IMURG1000"><span class="italic">Oracle Multimedia User's Guide</span></a> and <a class="olink AIVUG" href="../../appdev.112/e10776/toc.htm"><span class="italic">Oracle Multimedia Reference</span></a></p>
</li>
<li>
<p><a class="olink IMDCM1000" href="../../appdev.112/e10778/ch_intro.htm#IMDCM1000"><span class="italic">Oracle Multimedia DICOM Developer's Guide</span></a> and <a class="olink IMDJC" href="../../appdev.112/e10781/toc.htm"><span class="italic">Oracle Multimedia DICOM Java API Reference</span></a></p>
</li>
<li>
<p><a class="olink IMJVC" href="../../appdev.112/e10779/toc.htm"><span class="italic">Oracle Multimedia Java API Reference</span></a> and <a class="olink IMJSV" href="../../appdev.112/e10780/toc.htm"><span class="italic">Oracle Multimedia Servlets and JSP Java API Reference</span></a></p>
</li>
</ul>
</div>
</div>
<!-- class="sect3" -->
<a id="CHDECFAA"></a>
<div id="CNCPT1544" class="sect3">
<h4 class="sect3">Overview of Oracle Spatial</h4>
<p><span class="bold">Oracle Spatial (Spatial)</span> provides a SQL schema and functions that facilitate the storage, retrieval, update, and query of collections of spatial features in an Oracle database. Oracle Spatial makes spatial data management easier to users of location-enabled applications and geographic information system (GIS) applications.</p>
<p>An example of spatial data is a road map. The spatial data indicates the Earth location (such as longitude and latitude) of objects on the map. When the map is rendered, this spatial data is used to project the locations of the objects on a two-dimensional piece of paper. A GIS is often used to store, retrieve, and render this Earth-relative spatial data. When spatial data is stored in an Oracle database, the data can be easily manipulated, retrieved, and related to other data.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink SPATL010" href="../../appdev.112/e11830/sdo_intro.htm#SPATL010"><span class="italic">Oracle Spatial Developer's Guide</span></a></div>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" --></div>
<!-- class="sect1" --></div>
<!-- class="chapter" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment1448">
<tr>
<td class="cellalignment1455">
<table class="cellalignment1453">
<tr>
<td class="cellalignment1452"><a href="cncptdba.htm"><img width="24" height="24" src="../../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment1452"><a href="glossary.htm"><img width="24" height="24" src="../../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;1993, 2015,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment1457">
<table class="cellalignment1451">
<tr>
<td class="cellalignment1452"><a href="../../index.htm"><img width="24" height="24" src="../../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment1452"><a href="../../nav/portal_booklist.htm"><img width="24" height="24" src="../../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment1452"><a href="toc.htm"><img width="24" height="24" src="../../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment1452"><a href="index.htm"><img width="24" height="24" src="../../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment1452"><a href="../../nav/mindx.htm"><img width="24" height="24" src="../../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment1452"><a href="../../dcommon/html/feedback.htm"><img width="24" height="24" src="../../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>
</body>
</html>
