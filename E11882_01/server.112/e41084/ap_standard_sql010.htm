<!DOCTYPE html>
<html lang="en" >
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1">
<meta charset="utf-8">
<title>Oracle Compliance with SQL/XML:2008</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Merged Version 1075" />
<meta name="dcterms.created" content="2016-01-05T5:46:28Z" />
<meta name="robots" content="all" />
<meta name="dcterms.title" content="Database SQL Language Reference" />
<meta name="dcterms.identifier" content="E41084-04" />
<meta name="dcterms.isVersionOf" content="SQLRF" />
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;1996, 2016,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved." />
<link rel="Start" href="../../index.htm" title="Home" type="text/html" />
<link rel="Copyright" href="../../dcommon/html/cpyr.htm" title="Copyright" type="text/html" />

<script type="application/javascript"  src="../../dcommon/js/headfoot.js"></script>
<script type="application/javascript"  src="../../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html" />
<link rel="Index" href="index.htm" title="Index" type="text/html" />
<link rel="Prev" href="ap_standard_sql009.htm" title="Previous" type="text/html" />
<link rel="Next" href="ap_standard_sql011.htm" title="Next" type="text/html" />
<link rel="alternate" href="../e41084.pdf" title="PDF version" type="application/pdf" />
<link rel="schema.dcterms" href="http://purl.org/dc/terms/" />
<link rel="stylesheet" href="../../dcommon/css/fusiondoc.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/header.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/footer.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/fonts.css">
<link rel="stylesheet" href="../../dcommon/css/foundation.css">
<link rel="stylesheet" href="../../dcommon/css/codemirror.css">
<link rel="stylesheet" type="text/css" title="Default" href="../../nav/css/html5.css">
<link rel="stylesheet" href="../../dcommon/css/respond-480-tablet.css">
<link rel="stylesheet" href="../../dcommon/css/respond-768-laptop.css">
<link rel="stylesheet" href="../../dcommon/css/respond-1140-deskop.css">
<script type="application/javascript" src="../../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">507/522</span> <!-- End Header --><a id="i13236"></a>
<div id="SQLRF55529" class="sect1"><!-- infolevel="all" infotype="General" -->
<h1 class="sect1">Oracle Compliance with SQL/XML:2008</h1>
<p>The XML data type in the standard is <code dir="ltr">XML</code>. The Oracle equivalent data type is <code dir="ltr">XMLType</code>. A feature of the standard is considered to be fully supported if the only difference between Oracle and the standard is the spelling of the data type name.</p>
<p><a href="#BJEGCHBH">Table C-3</a> describes Oracle's support for the features of SQL/XML:2008.</p>
<div id="SQLRF55531" class="tblhruleformal">
<p class="titleintable"><a id="sthref6967"></a><a id="BJEGCHBH"></a>Table C-3 Oracle Support for Features of SQL/XML:2008</p>
<table class="cellalignment1868" title="Oracle Support for Features of SQL/XML:2008" summary="The first column lists the feature ID and the second column lists the feature name" dir="ltr">
<thead>
<tr class="cellalignment1859">
<th class="cellalignment1869" id="r1c1-t4">Feature ID, Feature</th>
<th class="cellalignment1869" id="r1c2-t4">Support</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1859">
<td class="cellalignment1865" id="r2c1-t4" headers="r1c1-t4">
<p>X010, XML type</p>
</td>
<td class="cellalignment1865" headers="r2c1-t4 r1c2-t4">
<p>Oracle fully supports this feature.</p>
</td>
</tr>
<tr class="cellalignment1859">
<td class="cellalignment1865" id="r3c1-t4" headers="r1c1-t4">
<p>X011, Arrays of XML types</p>
</td>
<td class="cellalignment1865" headers="r3c1-t4 r1c2-t4">
<p>Oracle supports this feature using named array types (in the standard, array types are anonymous)</p>
</td>
</tr>
<tr class="cellalignment1859">
<td class="cellalignment1865" id="r4c1-t4" headers="r1c1-t4">
<p>X012, Multisets of XML type</p>
</td>
<td class="cellalignment1865" headers="r4c1-t4 r1c2-t4">
<p>The Oracle equivalent of a multiset of XML type is a nested table with a single column of XML type.</p>
</td>
</tr>
<tr class="cellalignment1859">
<td class="cellalignment1865" id="r5c1-t4" headers="r1c1-t4">
<p>X013, Distinct types of XML</p>
</td>
<td class="cellalignment1865" headers="r5c1-t4 r1c2-t4">
<p>A distinct type can be emulated using an object type with a single attribute.</p>
</td>
</tr>
<tr class="cellalignment1859">
<td class="cellalignment1865" id="r6c1-t4" headers="r1c1-t4">
<p>X014, Attributes of XML type</p>
</td>
<td class="cellalignment1865" headers="r6c1-t4 r1c2-t4">
<p>In Oracle, attributes of object types may be of type <code dir="ltr">XMLType</code>, but the syntax for creating object types is nonstandard.</p>
</td>
</tr>
<tr class="cellalignment1859">
<td class="cellalignment1865" id="r7c1-t4" headers="r1c1-t4">
<p>X016, Persistent XML values</p>
</td>
<td class="cellalignment1865" headers="r7c1-t4 r1c2-t4">
<p>Oracle fully supports this feature.</p>
</td>
</tr>
<tr class="cellalignment1859">
<td class="cellalignment1865" id="r8c1-t4" headers="r1c1-t4">
<p>X020, XML Concatenation</p>
</td>
<td class="cellalignment1865" headers="r8c1-t4 r1c2-t4">
<p>Oracle fully supports this feature.</p>
</td>
</tr>
<tr class="cellalignment1859">
<td class="cellalignment1865" id="r9c1-t4" headers="r1c1-t4">
<p>X025, <code dir="ltr">XMLCast</code></p>
</td>
<td class="cellalignment1865" headers="r9c1-t4 r1c2-t4">
<p>Oracle provides equivalents for the following elements of this feature:</p>
<ul>
<li>
<p>To cast from XML to a scalar type, use <code dir="ltr">EXTRACTVALUE</code>. If the XML value is typed, then the result is in the nearest analog to the XML type, otherwise the result type is <code dir="ltr">VARCHAR</code>(4000). Use <code dir="ltr">CAST</code> to convert to any other scalar type.</p>
</li>
<li>
<p>To cast from a scalar type to XML, pass the scalar value in to <code dir="ltr">XMLQuery</code> and insert it in a document constructor.</p>
</li>
</ul>
<p>Since Oracle has only one XML type, there is no need to cast from XML to XML.</p>
</td>
</tr>
<tr class="cellalignment1859">
<td class="cellalignment1865" id="r10c1-t4" headers="r1c1-t4">
<p>X031, <code dir="ltr">XMLElement</code></p>
</td>
<td class="cellalignment1865" headers="r10c1-t4 r1c2-t4">
<p>Oracle fully supports this feature.</p>
</td>
</tr>
<tr class="cellalignment1859">
<td class="cellalignment1865" id="r11c1-t4" headers="r1c1-t4">
<p>X032, <code dir="ltr">XMLForest</code></p>
</td>
<td class="cellalignment1865" headers="r11c1-t4 r1c2-t4">
<p>Oracle fully supports this feature.</p>
</td>
</tr>
<tr class="cellalignment1859">
<td class="cellalignment1865" id="r12c1-t4" headers="r1c1-t4">
<p>X034, <code dir="ltr">XMLAgg</code></p>
</td>
<td class="cellalignment1865" headers="r12c1-t4 r1c2-t4">
<p>Oracle fully supports this feature.</p>
</td>
</tr>
<tr class="cellalignment1859">
<td class="cellalignment1865" id="r13c1-t4" headers="r1c1-t4">
<p>X035, <code dir="ltr">XMLAgg</code>: <code dir="ltr">ORDER</code> <code dir="ltr">BY</code> option</p>
</td>
<td class="cellalignment1865" headers="r13c1-t4 r1c2-t4">
<p>Oracle fully supports this feature.</p>
</td>
</tr>
<tr class="cellalignment1859">
<td class="cellalignment1865" id="r14c1-t4" headers="r1c1-t4">
<p>X036, <code dir="ltr">XMLComment</code></p>
</td>
<td class="cellalignment1865" headers="r14c1-t4 r1c2-t4">
<p>Oracle fully supports this feature.</p>
</td>
</tr>
<tr class="cellalignment1859">
<td class="cellalignment1865" id="r15c1-t4" headers="r1c1-t4">
<p>X036, <code dir="ltr">XMLPi</code></p>
</td>
<td class="cellalignment1865" headers="r15c1-t4 r1c2-t4">
<p>Oracle fully supports this feature.</p>
</td>
</tr>
<tr class="cellalignment1859">
<td class="cellalignment1865" id="r16c1-t4" headers="r1c1-t4">
<p>X038, <code dir="ltr">XMLText</code></p>
</td>
<td class="cellalignment1865" headers="r16c1-t4 r1c2-t4">
<p>The Oracle <code dir="ltr">XMLCData</code> function may be used to create a text node.</p>
</td>
</tr>
<tr class="cellalignment1859">
<td class="cellalignment1865" id="r17c1-t4" headers="r1c1-t4">
<p>X040, Basic table mapping</p>
</td>
<td class="cellalignment1865" headers="r17c1-t4 r1c2-t4">
<p>Oracle table mappings are available through a Java interface and through a package. Oracle table mappings have been generalized to map queries and not just tables. To map only a table: <code dir="ltr">SELECT</code> <code dir="ltr">*</code> <code dir="ltr">FROM</code> <code dir="ltr"><span class="codeinlineitalic">table_name</span></code>. This provides support for the following elements of this feature:</p>
<ul>
<li>
<p>X041, Basic table mapping: null absent</p>
</li>
<li>
<p>X042, Basic table mapping: null as nil</p>
</li>
<li>
<p>X043, Basic table mapping: table as forest</p>
</li>
<li>
<p>X044, Basic table mapping: table as element</p>
</li>
<li>
<p>X045, Basic table mapping: with target namespace</p>
</li>
<li>
<p>X046, Basic table mapping: data mapping</p>
</li>
<li>
<p>X047, Basic table mapping: metadata mapping</p>
</li>
<li>
<p>X049, Basic table mapping: hex encoding</p>
</li>
</ul>
<p>Oracle does not support the following element of this feature:</p>
<ul>
<li>
<p>X048, Basic table mapping: base64 encoding</p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment1859">
<td class="cellalignment1865" id="r18c1-t4" headers="r1c1-t4">
<p>X060, <code dir="ltr">XMLParse</code>: Character string input and <code dir="ltr">CONTENT</code> option</p>
</td>
<td class="cellalignment1865" headers="r18c1-t4 r1c2-t4">
<p>Oracle does not support the {<code dir="ltr">PRESERVE</code> | <code dir="ltr">STRIP</code>} <code dir="ltr">WHITESPACE</code> syntax. The behavior is always <code dir="ltr">STRIP</code> <code dir="ltr">WHITESPACE</code>.</p>
</td>
</tr>
<tr class="cellalignment1859">
<td class="cellalignment1865" id="r19c1-t4" headers="r1c1-t4">
<p>X061, <code dir="ltr">XMLParse</code>: Character string input and <code dir="ltr">DOCUMENT</code> option</p>
</td>
<td class="cellalignment1865" headers="r19c1-t4 r1c2-t4">
<p>Oracle does not support the {<code dir="ltr">PRESERVE</code> | <code dir="ltr">STRIP</code>} <code dir="ltr">WHITESPACE</code> syntax. The behavior is always <code dir="ltr">STRIP</code> <code dir="ltr">WHITESPACE</code>.</p>
</td>
</tr>
<tr class="cellalignment1859">
<td class="cellalignment1865" id="r20c1-t4" headers="r1c1-t4">
<p>X070, <code dir="ltr">XMLSerialize</code>: Character string serialization and <code dir="ltr">CONTENT</code> option</p>
</td>
<td class="cellalignment1865" headers="r20c1-t4 r1c2-t4">
<p>Oracle fully supports this feature.</p>
</td>
</tr>
<tr class="cellalignment1859">
<td class="cellalignment1865" id="r21c1-t4" headers="r1c1-t4">
<p>X071, <code dir="ltr">XMLSerialize</code>: Character string serialization and <code dir="ltr">DOCUMENT</code> option</p>
</td>
<td class="cellalignment1865" headers="r21c1-t4 r1c2-t4">
<p>Oracle fully supports this feature.</p>
</td>
</tr>
<tr class="cellalignment1859">
<td class="cellalignment1865" id="r22c1-t4" headers="r1c1-t4">
<p>X072, <code dir="ltr">XMLSerialize</code>: Character string serialization</p>
</td>
<td class="cellalignment1865" headers="r22c1-t4 r1c2-t4">
<p>Oracle fully supports this feature.</p>
</td>
</tr>
<tr class="cellalignment1859">
<td class="cellalignment1865" id="r23c1-t4" headers="r1c1-t4">
<p>X076, <code dir="ltr">XMLSerialize</code>: <code dir="ltr">VERSION</code> option</p>
</td>
<td class="cellalignment1865" headers="r23c1-t4 r1c2-t4">
<p>Use <code dir="ltr">XMLRoot</code> to set the XML version prior to serialization.</p>
</td>
</tr>
<tr class="cellalignment1859">
<td class="cellalignment1865" id="r24c1-t4" headers="r1c1-t4">
<p>X080, Namespaces in XML publishing</p>
</td>
<td class="cellalignment1865" headers="r24c1-t4 r1c2-t4">
<p>In the Oracle implementation of <code dir="ltr">XMLElement</code>, <code dir="ltr">XMLAttributes</code> are used to define namespaces (<code dir="ltr">XMLNamespaces</code> is not implemented). However, <code dir="ltr">XMLAttributes</code> is not supported for <code dir="ltr">XMLForest</code>.</p>
</td>
</tr>
<tr class="cellalignment1859">
<td class="cellalignment1865" id="r25c1-t4" headers="r1c1-t4">
<p>X086, XML namespace declarations in <code dir="ltr">XMLTable</code></p>
</td>
<td class="cellalignment1865" headers="r25c1-t4 r1c2-t4">
<p>Oracle fully supports this feature.</p>
</td>
</tr>
<tr class="cellalignment1859">
<td class="cellalignment1865" id="r26c1-t4" headers="r1c1-t4">
<p>X090, XML document predicate</p>
</td>
<td class="cellalignment1865" headers="r26c1-t4 r1c2-t4">
<p>In Oracle, you can test whether an XML value is a document by using the <code dir="ltr">ISFRAGMENT</code> method.</p>
</td>
</tr>
<tr class="cellalignment1859">
<td class="cellalignment1865" id="r27c1-t4" headers="r1c1-t4">
<p>X096, <code dir="ltr">XMLExists</code></p>
</td>
<td class="cellalignment1865" headers="r27c1-t4 r1c2-t4">
<p>Use <code dir="ltr">EXISTSNODE</code> to evaluate an XPath, returning 1 if a node is found, 0 if not. XQuery expressions other than XPath expressions are not supported. Also, Oracle supports XPath 1.0 expressions (not XPath 2,0, which is a subset of XQuery).</p>
</td>
</tr>
<tr class="cellalignment1859">
<td class="cellalignment1865" id="r28c1-t4" headers="r1c1-t4">
<p>X120, XML parameters in SQL routines</p>
</td>
<td class="cellalignment1865" headers="r28c1-t4 r1c2-t4">
<p>Oracle fully supports this feature.</p>
</td>
</tr>
<tr class="cellalignment1859">
<td class="cellalignment1865" id="r29c1-t4" headers="r1c1-t4">
<p>X121, XML parameters in external routines</p>
</td>
<td class="cellalignment1865" headers="r29c1-t4 r1c2-t4">
<p>Oracle supports XML values passed to external routines using a non-standard interface.</p>
</td>
</tr>
<tr class="cellalignment1859">
<td class="cellalignment1865" id="r30c1-t4" headers="r1c1-t4">
<p>X141, <code dir="ltr">IS</code> <code dir="ltr">VALID</code> predicate: data drive case</p>
</td>
<td class="cellalignment1865" headers="r30c1-t4 r1c2-t4">
<p>The <code dir="ltr">XMLISVALID</code> method is equivalent to the <code dir="ltr">IS</code> <code dir="ltr">VALID</code> predicate, and supports the data-driven case.</p>
</td>
</tr>
<tr class="cellalignment1859">
<td class="cellalignment1865" id="r31c1-t4" headers="r1c1-t4">
<p>X142, <code dir="ltr">IS</code> <code dir="ltr">VALID</code> predicate: <code dir="ltr">ACCORDING</code> <code dir="ltr">TO</code> clause</p>
</td>
<td class="cellalignment1865" headers="r31c1-t4 r1c2-t4">
<p>The <code dir="ltr">XMLISVALID</code> method is equivalent to the <code dir="ltr">IS</code> <code dir="ltr">VALID</code> predicate, and includes the equivalent of the <code dir="ltr">ACCORDING</code> <code dir="ltr">TO</code> clause.</p>
</td>
</tr>
<tr class="cellalignment1859">
<td class="cellalignment1865" id="r32c1-t4" headers="r1c1-t4">
<p>X143, <code dir="ltr">IS</code> <code dir="ltr">VALID</code> predicate: <code dir="ltr">ELEMENT</code> clause</p>
</td>
<td class="cellalignment1865" headers="r32c1-t4 r1c2-t4">
<p>The <code dir="ltr">XMLISVALID</code> method is equivalent to the <code dir="ltr">IS</code> <code dir="ltr">VALID</code> predicate, and includes the equivalent of the <code dir="ltr">ELEMENT</code> clause.</p>
</td>
</tr>
<tr class="cellalignment1859">
<td class="cellalignment1865" id="r33c1-t4" headers="r1c1-t4">
<p>X144, <code dir="ltr">IS</code> <code dir="ltr">VALID</code> predicate: schema location</p>
</td>
<td class="cellalignment1865" headers="r33c1-t4 r1c2-t4">
<p>The <code dir="ltr">XMLISVALID</code> method is equivalent to the <code dir="ltr">IS</code> <code dir="ltr">VALID</code> predicate, and supports the specification of a schema location for a registered XML Schema.</p>
</td>
</tr>
<tr class="cellalignment1859">
<td class="cellalignment1865" id="r34c1-t4" headers="r1c1-t4">
<p>X145, <code dir="ltr">IS</code> <code dir="ltr">VALID</code> predicate outside check constraints</p>
</td>
<td class="cellalignment1865" headers="r34c1-t4 r1c2-t4">
<p>The <code dir="ltr">XMLISVALID</code> method is equivalent to the <code dir="ltr">IS</code> <code dir="ltr">VALID</code> predicate, and may be used outside check constraints.</p>
</td>
</tr>
<tr class="cellalignment1859">
<td class="cellalignment1865" id="r35c1-t4" headers="r1c1-t4">
<p>X151, <code dir="ltr">IS</code> <code dir="ltr">VALID</code> predicate with <code dir="ltr">DOCUMENT</code> option</p>
</td>
<td class="cellalignment1865" headers="r35c1-t4 r1c2-t4">
<p>The <code dir="ltr">XMLISVALID</code> method is equivalent to the <code dir="ltr">IS</code> <code dir="ltr">VALID</code> predicate, and performs validation equivalent to the <code dir="ltr">DOCUMENT</code> clause. (<code dir="ltr">XMLISVALID</code> does not support "content" validation.)</p>
</td>
</tr>
<tr class="cellalignment1859">
<td class="cellalignment1865" id="r36c1-t4" headers="r1c1-t4">
<p>X156, <code dir="ltr">IS</code> <code dir="ltr">VALID</code> predicate: optional <code dir="ltr">NAMESPACE</code> with <code dir="ltr">ELEMENT</code> clause</p>
</td>
<td class="cellalignment1865" headers="r36c1-t4 r1c2-t4">
<p>The <code dir="ltr">XMLISVALID</code> method is equivalent to the <code dir="ltr">IS</code> <code dir="ltr">VALID</code> predicate, and may be used to validate against an element in any namespace.</p>
</td>
</tr>
<tr class="cellalignment1859">
<td class="cellalignment1865" id="r37c1-t4" headers="r1c1-t4">
<p>X157, <code dir="ltr">IS</code> <code dir="ltr">VALID</code> predicate: <code dir="ltr">NO</code> <code dir="ltr">NAMESPACE</code> with <code dir="ltr">ELEMENT</code> clause</p>
</td>
<td class="cellalignment1865" headers="r37c1-t4 r1c2-t4">
<p>The <code dir="ltr">XMLISVALID</code> method is equivalent to the <code dir="ltr">IS</code> <code dir="ltr">VALID</code> predicate, and may be used to validate against an element in the "no name" namespace.</p>
</td>
</tr>
<tr class="cellalignment1859">
<td class="cellalignment1865" id="r38c1-t4" headers="r1c1-t4">
<p>X160, Basic Information Schema for registered XML Schemas</p>
</td>
<td class="cellalignment1865" headers="r38c1-t4 r1c2-t4">
<p>The Oracle static data dictionary view <code dir="ltr">ALL_XML_SCHEMAS</code> provides a list of the registered XML schemas that are accessible to the current user. The <code dir="ltr">ALL_XML_SCHEMAS</code>.<code dir="ltr">SCHEMA_URL</code> column corresponds to the standard <code dir="ltr">XML_SCHEMAS</code>.<code dir="ltr">XML_SCHEMA_LOCATION</code> column. The target namespace of the registered XML Schemas can be learned by examining <code dir="ltr">ALL_XML_SCHEMAS</code>.<code dir="ltr">SCHEMA</code>. Oracle has no equivalents for the other columns of the standard's <code dir="ltr">XML_SCHEMAS</code>.</p>
</td>
</tr>
<tr class="cellalignment1859">
<td class="cellalignment1865" id="r39c1-t4" headers="r1c1-t4">
<p>X161, Advanced Information Schema for registered XML Schemas</p>
</td>
<td class="cellalignment1865" headers="r39c1-t4 r1c2-t4">
<p>Oracle does not have static data dictionary views corresponding to <code dir="ltr">XML_SCHEMA_NAMESPACES</code> and <code dir="ltr">XML_SCHEMA_ELEMENTS</code> in the standard. However, all the information about registered XML Schemas may be learned by examining the actual XML Schema, which is found in the <code dir="ltr">ALL_XML_SCHEMAS</code>.<code dir="ltr">SCHEMA</code> column. This may also be examined to learn whether a registered XML Schema is nondeterministic, and which of its namespaces and elements are nondeterministic.</p>
</td>
</tr>
<tr class="cellalignment1859">
<td class="cellalignment1865" id="r40c1-t4" headers="r1c1-t4">
<p>X191, <code dir="ltr">XML</code>(<code dir="ltr">DOCUMENT</code> (<code dir="ltr">XMLSCHEMA</code>)) type</p>
</td>
<td class="cellalignment1865" headers="r40c1-t4 r1c2-t4">
<p>Oracle does not support this syntax. However, a column of a table can be constrained by a registered XML Schema, in which case all values of the column will be of <code dir="ltr">XML</code>(<code dir="ltr">DOCUMENT</code>(<code dir="ltr">XMLSCHEMA</code>)) type.</p>
</td>
</tr>
<tr class="cellalignment1859">
<td class="cellalignment1865" id="r41c1-t4" headers="r1c1-t4">
<p>X200, XMLQuery</p>
</td>
<td class="cellalignment1865" headers="r41c1-t4 r1c2-t4">
<p>Oracle fully supports the following elements of this feature:</p>
<ul>
<li>
<p>X201, XMLQuery: <code dir="ltr">RETURNING</code> <code dir="ltr">CONTENT</code></p>
</li>
<li>
<p>X203, XMLQuery: passing a context item</p>
</li>
<li>
<p>X204, XMLQuery: initializing an XQuery variable</p>
</li>
</ul>
<p>Oracle does not support the following elements of this feature:</p>
<ul>
<li>
<p>X202, XMLQuery: <code dir="ltr">RETURNING</code> <code dir="ltr">SEQUENCE</code></p>
</li>
<li>
<p>{ <code dir="ltr">NULL</code> | <code dir="ltr">EMPTY</code> } <code dir="ltr">ON</code> <code dir="ltr">EMPTY</code> syntax</p>
</li>
<li>
<p>Mandatory <code dir="ltr">BY</code> { <code dir="ltr">REF</code> | <code dir="ltr">VALUE</code> } in the <code dir="ltr">PASSING</code> clause (Oracle supports only value semantics)</p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment1859">
<td class="cellalignment1865" id="r42c1-t4" headers="r1c1-t4">
<p>X221, XML passing mechanism <code dir="ltr">BY</code> <code dir="ltr">VALUE</code></p>
</td>
<td class="cellalignment1865" headers="r42c1-t4 r1c2-t4">
<p>Oracle supports only value semantics, but does not support the explicit <code dir="ltr">BY</code> <code dir="ltr">VALUE</code> clause.</p>
</td>
</tr>
<tr class="cellalignment1859">
<td class="cellalignment1865" id="r43c1-t4" headers="r1c1-t4">
<p>X232, <code dir="ltr">XML</code>(<code dir="ltr">CONTENT</code>(<code dir="ltr">ANY</code>)) type</p>
</td>
<td class="cellalignment1865" headers="r43c1-t4 r1c2-t4">
<p>Oracle does not support this syntax as a type modifier, but the Oracle <code dir="ltr">XMLType</code> supports this data type for transient values. Persistent values are of type <code dir="ltr">XML</code>(<code dir="ltr">DOCUMENT</code>(<code dir="ltr">ANY</code>)), which is a subset of <code dir="ltr">XML</code>(<code dir="ltr">CONTENT</code>(<code dir="ltr">ANY</code>)).</p>
</td>
</tr>
<tr class="cellalignment1859">
<td class="cellalignment1865" id="r44c1-t4" headers="r1c1-t4">
<p>X241, <code dir="ltr">RETURNING</code> <code dir="ltr">CONTENT</code> in XML publishing</p>
</td>
<td class="cellalignment1865" headers="r44c1-t4 r1c2-t4">
<p>Oracle does not support this syntax. In Oracle, the behavior of the publishing functions (<code dir="ltr">XMLAgg</code>, <code dir="ltr">XMLComment</code>, <code dir="ltr">XMLConcat</code>, <code dir="ltr">XMLElement</code>, <code dir="ltr">XMLForest</code>, and <code dir="ltr">XMLPi</code>) is always <code dir="ltr">RETURNING</code> <code dir="ltr">CONTENT</code>.</p>
</td>
</tr>
<tr class="cellalignment1859">
<td class="cellalignment1865" id="r45c1-t4" headers="r1c1-t4">
<p>X251, Persistent XML values of <code dir="ltr">XML</code>(<code dir="ltr">DOCUMENT</code>(<code dir="ltr">UNTYPED</code>)) type</p>
</td>
<td class="cellalignment1865" headers="r45c1-t4 r1c2-t4">
<p>Oracle fully supports this feature.</p>
</td>
</tr>
<tr class="cellalignment1859">
<td class="cellalignment1865" id="r46c1-t4" headers="r1c1-t4">
<p>X252, Persistent values of type <code dir="ltr">XML</code>(<code dir="ltr">DOCUMENT</code>(<code dir="ltr">ANY</code>))</p>
</td>
<td class="cellalignment1865" headers="r46c1-t4 r1c2-t4">
<p>Oracle fully supports this feature.</p>
</td>
</tr>
<tr class="cellalignment1859">
<td class="cellalignment1865" id="r47c1-t4" headers="r1c1-t4">
<p>X256, Persistent values of <code dir="ltr">XML</code>(<code dir="ltr">DOCUMENT</code>(<code dir="ltr">XMLSCHEMA</code>)) type</p>
</td>
<td class="cellalignment1865" headers="r47c1-t4 r1c2-t4">
<p>Oracle fully supports this feature.</p>
</td>
</tr>
<tr class="cellalignment1859">
<td class="cellalignment1865" id="r48c1-t4" headers="r1c1-t4">
<p>X260, XML type, <code dir="ltr">ELEMENT</code> clause</p>
</td>
<td class="cellalignment1865" headers="r48c1-t4 r1c2-t4">
<p>Oracle does not support this syntax. However, a column of a table may be constrained by a top-level element in a registered XML Schema.</p>
</td>
</tr>
<tr class="cellalignment1859">
<td class="cellalignment1865" id="r49c1-t4" headers="r1c1-t4">
<p>X262, XML type, optional <code dir="ltr">NAMESPACE</code> with <code dir="ltr">ELEMENT</code> clause</p>
</td>
<td class="cellalignment1865" headers="r49c1-t4 r1c2-t4">
<p>Oracle does not support this syntax. However, a column of a table may be constrained by a top-level element in a namespace other than the target namespace of a registered XML Schema.</p>
</td>
</tr>
<tr class="cellalignment1859">
<td class="cellalignment1865" id="r50c1-t4" headers="r1c1-t4">
<p>X263, XML type: <code dir="ltr">NO</code> <code dir="ltr">NAMESPACE</code> with <code dir="ltr">ELEMENT</code> clause</p>
</td>
<td class="cellalignment1865" headers="r50c1-t4 r1c2-t4">
<p>Oracle does not support this syntax. However, a column of a table may be constrained by a top-level element in the "no name" namespace of a registered XML Schema.</p>
</td>
</tr>
<tr class="cellalignment1859">
<td class="cellalignment1865" id="r51c1-t4" headers="r1c1-t4">
<p>X264, XML type: schema location</p>
</td>
<td class="cellalignment1865" headers="r51c1-t4 r1c2-t4">
<p>Oracle does not support this syntax. However, a column of a table may be constrained by a registered XML Schema that is identified by a schema location.</p>
</td>
</tr>
<tr class="cellalignment1859">
<td class="cellalignment1865" id="r52c1-t4" headers="r1c1-t4">
<p>X271, XMLValidate: data driven case</p>
</td>
<td class="cellalignment1865" headers="r52c1-t4 r1c2-t4">
<p>The <code dir="ltr">SCHEMAVALIDATE</code> method is equivalent to XMLValidate, and supports the data-driven case.</p>
</td>
</tr>
<tr class="cellalignment1859">
<td class="cellalignment1865" id="r53c1-t4" headers="r1c1-t4">
<p>X272, XMLValidate: <code dir="ltr">ACCORDING</code> <code dir="ltr">TO</code> clause</p>
</td>
<td class="cellalignment1865" headers="r53c1-t4 r1c2-t4">
<p>The <code dir="ltr">SCHEMAVALIDATE</code> method is equivalent to XMLValidate, and may be used to specify a particular registered XML Schema.</p>
</td>
</tr>
<tr class="cellalignment1859">
<td class="cellalignment1865" id="r54c1-t4" headers="r1c1-t4">
<p>X273, XMLValidate: <code dir="ltr">ELEMENT</code> clause</p>
</td>
<td class="cellalignment1865" headers="r54c1-t4 r1c2-t4">
<p>The <code dir="ltr">SCHEMAVALIDATE</code> method is equivalent to XMLValidate, and may be used to specify a particular element of a particular registered XML Schema.</p>
</td>
</tr>
<tr class="cellalignment1859">
<td class="cellalignment1865" id="r55c1-t4" headers="r1c1-t4">
<p>X274, XMLValidate: schema location</p>
</td>
<td class="cellalignment1865" headers="r55c1-t4 r1c2-t4">
<p>The <code dir="ltr">SCHEMAVALIDATE</code> method is equivalent to XMLValidate, and may be used to specify a particular registered XML Schema by its schema location URL.</p>
</td>
</tr>
<tr class="cellalignment1859">
<td class="cellalignment1865" id="r56c1-t4" headers="r1c1-t4">
<p>X281, XMLValidate with <code dir="ltr">DOCUMENT</code> option</p>
</td>
<td class="cellalignment1865" headers="r56c1-t4 r1c2-t4">
<p>The <code dir="ltr">SCHEMAVALIDATE</code> method is equivalent to XMLValidate. <code dir="ltr">SCHEMAVALIDATE</code> performs validation only of XML documents (not content).</p>
</td>
</tr>
<tr class="cellalignment1859">
<td class="cellalignment1865" id="r57c1-t4" headers="r1c1-t4">
<p>X285, XMLValidate: optional <code dir="ltr">NAMESPACE</code> with <code dir="ltr">ELEMENT</code> clause</p>
</td>
<td class="cellalignment1865" headers="r57c1-t4 r1c2-t4">
<p>The <code dir="ltr">SCHEMAVALIDATE</code> method is equivalent to XMLValidate, and may be used to specify a particular element in a namespace other than the target namespace of a particular registered XML Schema.</p>
</td>
</tr>
<tr class="cellalignment1859">
<td class="cellalignment1865" id="r58c1-t4" headers="r1c1-t4">
<p>X286, XMLValidate: <code dir="ltr">NO</code> <code dir="ltr">NAMESPACE</code> with <code dir="ltr">ELEMENT</code> clause</p>
</td>
<td class="cellalignment1865" headers="r58c1-t4 r1c2-t4">
<p>The <code dir="ltr">SCHEMAVALIDATE</code> method is equivalent to XMLValidate, and may be used to specify a particular element in the "no name" namespace of a particular registered XML Schema.</p>
</td>
</tr>
<tr class="cellalignment1859">
<td class="cellalignment1865" id="r59c1-t4" headers="r1c1-t4">
<p>X300, <code dir="ltr">XMLTable</code></p>
</td>
<td class="cellalignment1865" headers="r59c1-t4 r1c2-t4">
<p>Oracle does not support reverse axes in the column path expressions. Aside from that restriction, Oracle fully supports the following elements of this feature:</p>
<ul>
<li>
<p>X086, XML namespace declarations in <code dir="ltr">XMLTable</code></p>
</li>
<li>
<p>X302, <code dir="ltr">XMLTable</code> with ordinality column</p>
</li>
<li>
<p>X303, <code dir="ltr">XMLTable</code>: column default option</p>
</li>
<li>
<p>X304, <code dir="ltr">XMLTable</code>: passing a context item</p>
</li>
<li>
<p>X305, <code dir="ltr">XMLTable</code>: initializing an XQuery variable</p>
</li>
</ul>
<p>Oracle does not support the following elements of this feature:</p>
<ul>
<li>
<p>X301, <code dir="ltr">XMLTable</code>: derived column list option</p>
</li>
<li>
<p>Mandatory <code dir="ltr">BY</code> {<code dir="ltr">REF</code> | <code dir="ltr">VALUE</code>} in the <code dir="ltr">PASSING</code> clause. Oracle supports only <code dir="ltr">BY</code> <code dir="ltr">VALUE</code> semantics currently.</p>
</li>
</ul>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblhruleformal" --></div>
<!-- class="sect1" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment1858">
<tr>
<td class="cellalignment1865">
<table class="cellalignment1863">
<tr>
<td class="cellalignment1862"><a href="ap_standard_sql009.htm"><img width="24" height="24" src="../../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment1862"><a href="ap_standard_sql011.htm"><img width="24" height="24" src="../../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;1996, 2016,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment1867">
<table class="cellalignment1861">
<tr>
<td class="cellalignment1862"><a href="../../index.htm"><img width="24" height="24" src="../../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment1862"><a href="../../nav/portal_booklist.htm"><img width="24" height="24" src="../../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment1862"><a href="toc.htm"><img width="24" height="24" src="../../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment1862"><a href="index.htm"><img width="24" height="24" src="../../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment1862"><a href="../../nav/mindx.htm"><img width="24" height="24" src="../../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment1862"><a href="../../dcommon/html/feedback.htm"><img width="24" height="24" src="../../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>
</body>
</html>
