<!DOCTYPE html>
<html lang="en" >
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1">
<meta charset="utf-8">
<title>Managing Physical and Snapshot Standby Databases</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Version 5.1.2 Build 748" />
<meta name="dcterms.created" content="2014-02-25T8:43:1Z" />
<meta name="robots" content="all" />
<meta name="dcterms.title" content="Data Guard Concepts and Administration" />
<meta name="dcterms.identifier" content="E41134-03" />
<meta name="dcterms.isVersionOf" content="SBYDB" />
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;1999, 2014,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved." />
<link rel="Start" href="../../index.htm" title="Home" type="text/html" />
<link rel="Copyright" href="../../dcommon/html/cpyr.htm" title="Copyright" type="text/html" />

<script type="application/javascript"  src="../../dcommon/js/headfoot.js"></script>
<script type="application/javascript"  src="../../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html" />
<link rel="Index" href="index.htm" title="Index" type="text/html" />
<link rel="Prev" href="role_management.htm" title="Previous" type="text/html" />
<link rel="Next" href="manage_ls.htm" title="Next" type="text/html" />
<link rel="alternate" href="../e41134.pdf" title="PDF version" type="application/pdf" />
<link rel="schema.dcterms" href="http://purl.org/dc/terms/" />
<link rel="stylesheet" href="../../dcommon/css/fusiondoc.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/header.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/footer.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/fonts.css">
<link rel="stylesheet" href="../../dcommon/css/foundation.css">
<link rel="stylesheet" href="../../dcommon/css/codemirror.css">
<link rel="stylesheet" type="text/css" title="Default" href="../../nav/css/html5.css">
<link rel="stylesheet" href="../../dcommon/css/respond-480-tablet.css">
<link rel="stylesheet" href="../../dcommon/css/respond-768-laptop.css">
<link rel="stylesheet" href="../../dcommon/css/respond-1140-deskop.css">
<script type="application/javascript" src="../../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">17/34</span> <!-- End Header -->
<div id="SBYDB00700" class="chapter"><a id="CHDFFFAJ"></a> <a id="i1006374"></a>
<h1 class="chapter"><span class="secnum">9</span> Managing Physical and Snapshot Standby Databases</h1>
<p>This chapter describes how to manage physical and snapshot standby databases. The following topics are discussed:</p>
<ul>
<li>
<p><a href="#i1007681">Starting Up and Shutting Down a Physical Standby Database</a></p>
</li>
<li>
<p><a href="#i1017111">Opening a Physical Standby Database</a></p>
</li>
<li>
<p><a href="#i1022518">Primary Database Changes That Require Manual Intervention at a Physical Standby</a></p>
</li>
<li>
<p><a href="#i1026480">Recovering Through the OPEN RESETLOGS Statement</a></p>
</li>
<li>
<p><a href="#i1005610">Monitoring Primary, Physical Standby, and Snapshot Standby Databases</a></p>
</li>
<li>
<p><a href="#i1033033">Tuning Redo Apply</a></p>
</li>
<li>
<p><a href="#BACIEJJI">Managing a Snapshot Standby Database</a></p>
</li>
</ul>
<p>See <a class="olink DGBKR" href="../e40771/toc.htm"><span class="italic">Oracle Data Guard Broker</span></a> to learn how the Data Guard broker simplifies the management of physical and snapshot standby databases.</p>
<a id="i1007681"></a>
<div id="SBYDB00705" class="sect1">
<h2 class="sect1"><span class="secnum">9.1</span> Starting Up and Shutting Down a Physical Standby Database</h2>
<p>This section describes how to start up and shut down a physical standby database.</p>
<a id="i1022747"></a>
<div id="SBYDB4776" class="sect2">
<h3 class="sect2"><span class="secnum">9.1.1</span> <a id="sthref587"></a><a id="sthref588"></a>Starting Up a Physical Standby Database</h3>
<p>Use the SQL*Plus <code>STARTUP</code> command to start a physical standby database. The SQL*Plus STARTUP command starts, mounts, and opens a physical standby database in read-only mode when it is invoked without any arguments.</p>
<p>Once mounted or opened, a physical standby database can receive redo data from the primary database.</p>
<p>See <a href="log_apply.htm#i1020855">Section 7.3</a> for information about Redo Apply and <a href="#i1017111">Section 9.2</a> for information about opening a physical standby database in read-only mode.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
When Redo Apply is started on a physical standby database that has not yet received redo data from the primary database, an <code>ORA-01112</code> message may be returned. This indicates that Redo Apply is unable to determine the starting sequence number for media recovery. If this occurs, manually retrieve an archived redo log file from the primary database and register it on the standby database, or wait for redo transport to begin before starting Redo Apply.</div>
</div>
<!-- class="sect2" -->
<a id="i1007729"></a>
<div id="SBYDB4777" class="sect2">
<h3 class="sect2"><span class="secnum">9.1.2</span> S<a id="sthref589"></a>hutting Down a Physical Standby Database</h3>
<p>Use the SQL*Plus <code>SHUTDOWN</code> command to stop Redo Apply and <a id="sthref590"></a><a id="sthref591"></a><a id="sthref592"></a><a id="sthref593"></a>shut down a physical standby database. Control is not returned to the session that initiates a database shutdown until shutdown is complete.</p>
<p>If the primary database is up and running, defer the standby destination on the primary database and perform a log switch before shutting down the physical standby database.</p>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="i1017111"></a>
<div id="SBYDB00706" class="sect1">
<h2 class="sect1"><span class="secnum">9.2</span> Opening a Physical Standby Database<a id="sthref594"></a></h2>
<p><a id="sthref595"></a><a id="sthref596"></a>A physical standby database can be opened for read-only access and used to offload queries from a primary database.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
A physical standby database that is opened in read-only mode is subject to the same restrictions as any other Oracle database opened in read-only mode. For more information, see <a class="olink ADMIN11154" href="../../server.112/e25494/start.htm#ADMIN11154"><span class="italic">Oracle Database Administrator's Guide</span></a>.</div>
<p>If a license for the Oracle Active Data Guard<a id="sthref597"></a> option has been purchased, Redo Apply can be active while the physical standby database is open, thus allowing queries to return results that are identical to what would be returned from the primary database. This capability is known as the real-time query<a id="sthref598"></a> feature.<a id="sthref599"></a> See <a href="#CHDGJEFF">Section 9.2.1</a> for more details.</p>
<p>If a license for the Oracle Active Data Guard option has not been purchased, a physical standby database cannot be open while Redo Apply is active, so the following rules must be observed when opening a physical standby database instance or starting Redo Apply:</p>
<ul>
<li>
<p>Redo Apply must be stopped before any physical standby database instance is opened.</p>
</li>
<li>
<p>If one or more physical standby instances are open, those instances must be stopped or restarted in a mounted state before starting Redo Apply.</p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a class="olink DBLIC141" href="../../license.112/e47877/options.htm#DBLIC141"><span class="italic">Oracle Database Licensing Information</span></a> for more information about Oracle Active Data Guard</p>
</li>
</ul>
</div>
<a id="CHDGJEFF"></a>
<div id="SBYDB00707" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">9.2.1</span> Real-time query<a id="sthref600"></a></h3>
<p>The <code>COMPATIBLE</code> database initialization parameter must be set to 11.0 or higher to use the real-time query feature of the Oracle Active Data Guard option.<a id="sthref601"></a><a id="sthref602"></a></p>
<p>A physical standby database instance cannot be opened if Redo Apply is active on a mounted instance of that database. Use the following SQL statements to stop Redo Apply, open a standby instance read-only, and restart Redo Apply:</p>
<pre>
SQL&gt; ALTER DATABASE RECOVER MANAGED STANDBY DATABASE CANCEL;
SQL&gt; ALTER DATABASE OPEN;
SQL&gt; ALTER DATABASE RECOVER MANAGED STANDBY DATABASE USING CURRENT LOGFILE -
&gt; DISCONNECT;
</pre>
<div class="infobox-note">
<p class="notep1">Note:</p>
If Redo Apply is active on an open instance, additional instances can be opened without having to stop Redo Apply.</div>
<p>Redo Apply cannot be started on a mounted physical standby instance if any instance of that database is open. The instance must be opened before starting Redo Apply on it.</p>
<p class="subhead1"><a id="SBYDB5039"></a>Example: Querying V$DATABASE to Check the Standby's Open Mode</p>
<p>This example shows how the value of the <code>V$DATABASE.OPEN_MODE</code> column changes when a physical standby is open in real-time query mode.</p>
<ol>
<li>
<p>Start up and open a physical standby instance, and perform the following SQL query to show that the database is open in read-only mode:</p>
<pre>
SQL&gt; SELECT open_mode FROM V$DATABASE;
 
OPEN_MODE
--------------------
READ ONLY
</pre></li>
<li>
<p>Issue the following SQL statement to start Redo Apply:</p>
<pre>
SQL&gt; ALTER DATABASE RECOVER MANAGED STANDBY DATABASE USING CURRENT LOGFILE -
&gt; DISCONNECT;
 
Database altered.
</pre></li>
<li>
<p>Now that the standby is in real-time query mode (that is, the standby is open in read-only mode and Redo Apply is active), the <code>V$DATABASE.OPEN_MODE</code> column changes to indicate the following:</p>
<pre>
SQL&gt; SELECT open_mode FROM V$DATABASE;
 
OPEN_MODE
--------------------
READ ONLY WITH APPLY
</pre></li>
</ol>
<div id="SBYDB4778" class="sect3"><!-- infolevel="all" infotype="General" --><a id="sthref603"></a>
<h4 class="sect3"><span class="secnum">9.2.1.1</span> Monitoring Apply Lag in a Real-time Query Environment<a id="sthref604"></a><a id="sthref605"></a></h4>
<p>If you are using real-time query to offload queries from a primary database to a physical standby database, you may want to monitor the apply lag to ensure that it is within acceptable limits.</p>
<p>The current apply lag is the difference, in elapsed time, between when the last applied change became visible on the standby and when that same change was first visible on the primary. This metric is computed to the nearest second.</p>
<p>To obtain the apply lag, query the <code>V$DATAGUARD_STATS</code> view. For example:</p>
<pre>
SQL&gt; SELECT name, value, datum_time, time_computed FROM V$DATAGUARD_STATS -
&gt; WHERE name like 'apply lag';
     
    NAME         VALUE            DATUM_TIME              TIME_COMPUTED
    ---------    -------------    -------------------     -------------------
    apply lag    +00 00:00:00     05/27/2009 08:54:16     05/27/2009 08:54:17
</pre>
<p>The <code>apply</code> <code>lag</code> metric is computed using data that is periodically received from the primary database. The <code>DATUM_TIME</code> column contains a timestamp of when this data was last received by the standby database. The <code>TIME_COMPUTED</code> column contains a timestamp taken when the <code>apply</code> <code>lag</code> metric was calculated. The difference between the values in these columns should be less than 30 seconds. If the difference is larger than this, the <code>apply</code> <code>lag</code> metric may not be accurate.</p>
<p>To obtain a histogram that shows the history of apply lag values since the standby instance was last started, query the <code>V$STANDBY_EVENT_HISTOGRAM</code> view. For example:</p>
<pre>
SQL&gt; SELECT * FROM V$STANDBY_EVENT_HISTOGRAM WHERE NAME = 'apply lag' - 
&gt; AND COUNT &gt; 0;

NAME             TIME       UNIT         COUNT        LAST_TIME_UPDATED
---------     ---------   --------    -----------    ------------------------
apply lag         0        seconds        79681          06/18/2009 10:05:00
apply lag         1        seconds         1006          06/18/2009 10:03:56
apply lag         2        seconds           96          06/18/2009 09:51:06
apply lag         3        seconds            4          06/18/2009 04:12:32
apply lag         4        seconds            1          06/17/2009 11:43:51
apply lag         5        seconds            1          06/17/2009 11:43:52

6 rows selected
</pre>
<p>To evaluate the apply lag over a time period, take a snapshot of <code>V$STANDBY_EVENT_HISTOGRAM</code> at the beginning of the time period and compare that snapshot with one taken at the end of the time period.</p>
</div>
<!-- class="sect3" -->
<div id="SBYDB4779" class="sect3"><!-- infolevel="all" infotype="General" --><a id="sthref606"></a>
<h4 class="sect3"><span class="secnum">9.2.1.2</span> Configuring Apply Lag Tolerance in a Real-time Query Environment<a id="sthref607"></a><a id="sthref608"></a></h4>
<p>The <code>STANDBY_MAX_DATA_DELAY</code> session parameter can be used to specify a session-specific apply lag tolerance, measured in seconds, for queries issued by non-administrative users to a physical standby database that is in real-time query mode. This capability allows queries to be safely offloaded from the primary database to a physical standby database, because it is possible to detect if the standby database has become unacceptably stale.</p>
<p>If <code>STANDBY_MAX_DATA_DELAY</code> is set to the default value of <code>NONE</code>, queries issued to a physical standby database will be executed regardless of the apply lag on that database.</p>
<p>If <code>STANDBY_MAX_DATA_DELAY</code> is set to a non-zero value, a query issued to a physical standby database will be executed only if the apply lag is less than or equal to <code>STANDBY_MAX_DATA_DELAY</code>. Otherwise, an <code>ORA-3172</code> error is returned to alert the client that the apply lag is too large.</p>
<p>If <code>STANDBY_MAX_DATA_DELAY</code> is set to 0, a query issued to a physical standby database is guaranteed to return the exact same result as if the query were issued on the primary database, unless the standby database is lagging behind the primary database, in which case an <code>ORA-3172</code> error is returned.</p>
<p>Use the <code>ALTER SESSION</code> SQL statement to set <code>STANDBY_MAX_DATA_DELAY</code>. For example:</p>
<pre>
SQL&gt; ALTER SESSION SET STANDBY_MAX_DATA_DELAY=2
</pre></div>
<!-- class="sect3" -->
<a id="CHDCDIBD"></a>
<div id="SBYDB4780" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3"><span class="secnum">9.2.1.3</span> Forcing Redo Apply Synchronization in a Real-time Query Environment<a id="sthref609"></a></h4>
<p>Issue the following SQL statement on a physical standby database to ensure that all redo data received from the primary database has been applied to a physical standby database:</p>
<pre>
SQL&gt; ALTER SESSION SYNC WITH PRIMARY;
</pre>
<p>This statement will block until all redo data received by the standby database at the time that this command is issued has been applied to the physical standby database. An <code>ORA-3173</code> error is returned immediately, and synchronization will not occur, if the redo transport status at the standby database is not SYNCHRONIZED or if Redo Apply is not active.</p>
<p>You can ensure that Redo Apply synchronization occurs in specific cases by using the <code>SYS_CONTEXT('USERENV','DATABASE_ROLE')</code> function to create a standby-only trigger (that is, a trigger that is enabled on the primary but that only takes certain actions if it is running on a standby). For example, you could create the following trigger that would execute the <code>ALTER SESSION SYNC WITH PRIMARY</code> statement for a specific user connection at logon:</p>
<pre>
CREATE TRIGGER adg_logon_sync_trigger
 AFTER LOGON ON user.schema
  begin
    if (SYS_CONTEXT('USERENV', 'DATABASE_ROLE')  IN ('PHYSICAL STANDBY')) then
      execute immediate 'alter session sync with primary';
    end if;
  end;
</pre></div>
<!-- class="sect3" -->
<div id="SBYDB4781" class="sect3"><!-- infolevel="all" infotype="General" --><a id="sthref610"></a>
<h4 class="sect3"><span class="secnum">9.2.1.4</span> Real-time Query Restrictions<a id="sthref611"></a></h4>
<p>The apply lag control and Redo Apply synchronization mechanisms described above require that the client be connected and issuing queries to a physical standby database that is in real-time query mode.</p>
<p>The following additional restrictions apply if <code>STANDBY_MAX_DATA_DELAY</code> is set to 0 or if the <code>ALTER SESSION SYNC WITH PRIMARY</code> SQL statement is used:</p>
<ul>
<li>
<p>The standby database must receive redo data via the SYNC transport.</p>
</li>
<li>
<p>The redo transport status at the standby database must be SYNCHRONIZED and the primary database must be running in either maximum protection mode or maximum availability mode.</p>
</li>
<li>
<p>Real-time apply must be enabled.</p>
</li>
<li>
<p>Active Data Guard achieves high performance of real-time queries in an Oracle RAC environment through the use of cache fusion. This allows the Data Guard apply instance and queries to work out of cache and not be slowed down by disk I/O limitations. A consequence of this is that an unexpected failure of the apply instance leaves buffers in inconsistent states across all the open Oracle RAC instances. To ensure data consistency and integrity, Data Guard closes all the other open instances in the Oracle RAC configuration, and brings them to a mounted state. You must manually reopen the instances - at which time the data is automatically made consistent, followed by restarting redo apply on one of the instances. Note that in a Data Guard broker configuration, the instances are automatically reopened and redo apply is automatically restarted on one of the instances.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a class="olink DGBKR260" href="../../server.112/e40771/dbresource.htm#DGBKR260"><span class="italic">Oracle Data Guard Broker</span></a> for more information about how the broker handles apply instance failures</p>
</li>
<li>
<p>The My Oracle Support note 1357597.1 at <code><a href="http://support.oracle.com">http://support.oracle.com</a></code> for additional information about apply instance failures in an Active Data Guard Oracle RAC standby</p>
</li>
</ul>
</div>
</li>
</ul>
</div>
<!-- class="sect3" -->
<div id="SBYDB4782" class="sect3"><!-- infolevel="all" infotype="General" --><a id="sthref612"></a>
<h4 class="sect3"><span class="secnum">9.2.1.5</span> Automatic Repair of Corrupt Data Blocks</h4>
<p>If a corrupt data block is encountered when a primary database is accessed, it is automatically replaced with an uncorrupted copy of that block from a physical standby database. This requires the following conditions:<a id="sthref613"></a><a id="sthref614"></a></p>
<ul>
<li>
<p>The physical standby database must be operating in real-time query mode, which requires an Active Data Guard license.</p>
</li>
<li>
<p>The physical standby database must be running real-time apply.</p>
</li>
</ul>
<p>Also keep the following in mind:</p>
<ul>
<li>
<p>Automatic repair is supported with any Data Guard protection mode. However, the effectiveness of repairing a corrupt block at the primary using the noncorrupt version of the block from the standby depends on how closely the standby apply is synchronized with the redo generated by the primary.</p>
</li>
<li>
<p>When an automatic block repair has been performed, a message is written to the database alert log.</p>
</li>
<li>
<p>If automatic block repair is not possible, an <code>ORA-1578</code> error is returned.</p>
</li>
</ul>
<p>If a corrupt data block is discovered on a physical standby database, the server attempts to automatically repair the corruption by obtaining a copy of the block from the primary database if the following database initialization parameters are configured on the standby database:</p>
<ul>
<li>
<p>The <code>LOG_ARCHIVE_CONFIG</code> parameter is configured with a <code>DG_CONFIG</code> list and a <code>LOG_ARCHIVE_DEST_</code><code><span class="codeinlineitalic">n</span></code> parameter is configured for the primary database.</p>
<p><span class="bold">or</span></p>
</li>
<li>
<p>The <code>FAL_SERVER</code> parameter is configured and its value contains an Oracle Net service name for the primary database.</p>
</li>
</ul>
</div>
<!-- class="sect3" -->
<div id="SBYDB4783" class="sect3"><!-- infolevel="all" infotype="General" --><a id="sthref615"></a>
<h4 class="sect3"><span class="secnum">9.2.1.6</span> Manual Repair of Corrupt Data Blocks</h4>
<p>The RMAN <code>RECOVER BLOCK</code> command is used to manually repair a corrupted data block. This command searches several locations for an uncorrupted copy of the data block. By default, one of the locations is any available physical standby database operating in real-time query mode. The <code>EXCLUDE STANDBY</code> option of the RMAN <code>RECOVER BLOCK</code> command can be used to exclude physical standby databases as a source for replacement blocks.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink RCMRF140" href="../../backup.112/e10643/rcmsynta2001.htm#RCMRF140"><span class="italic">Oracle Database Backup and Recovery Reference</span></a> for more information about the RMAN <code>RECOVER BLOCK</code> command</div>
</div>
<!-- class="sect3" -->
<div id="SBYDB5130" class="sect3"><!-- infolevel="all" infotype="General" --><a id="sthref616"></a>
<h4 class="sect3"><span class="secnum">9.2.1.7</span> Tuning Queries on a Physical Standby Database</h4>
<p>Appendix D of the <span class="italic">Active Data Guard 11g Best Practices</span> white paper describes how to tune queries for optimal performance on a physical standby database. This paper is available on the Oracle Maximum Availability Architecture (MAA) home page at:</p>
<p><code><a href="http://www.oracle.com/goto/maa/">http://www.oracle.com/goto/maa</a></code></p>
</div>
<!-- class="sect3" -->
<div id="SBYDB5285" class="sect3"><!-- infolevel="all" infotype="General" --><a id="sthref617"></a>
<h4 class="sect3"><span class="secnum">9.2.1.8</span> Adding Temp Files to a Physical Standby Database</h4>
<p>If you are using a standby to offload queries from the primary database, and the nature of the workload requires more temp table space than is automatically created when the standby is first created, then you may need to manually add additional space.</p>
<p>To add temporary files to the physical standby database, perform the following tasks:</p>
<ol>
<li>
<p>Identify the tablespaces that should contain temporary files. Do this by entering the following command on the standby database:</p>
<pre>
SQL&gt; SELECT TABLESPACE_NAME FROM DBA_TABLESPACES
2&gt; WHERE CONTENTS = 'TEMPORARY';
 
TABLESPACE_NAME
--------------------------------
TEMP1
TEMP2
</pre></li>
<li>
<p>For each tablespace identified in the previous query, add a new temporary file to the standby database. The following example adds a new temporary file called <code>TEMP1</code> with size and reuse characteristics that match the primary database temporary files:</p>
<pre>
SQL&gt; ALTER TABLESPACE TEMP1 ADD TEMPFILE
2&gt; '/arch1/boston/temp01.dbf'
3&gt; SIZE 40M REUSE;
</pre></li>
</ol>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="i1022518"></a>
<div id="SBYDB4784" class="sect1">
<h2 class="sect1"><span class="secnum">9.3</span> Primary Database Changes That Require Manual Intervention at a Physical Standby</h2>
<p>Most structural changes made to a primary database are automatically propagated through redo data to a physical standby database. <a href="#g1041883">Table 9-1</a> lists primary database structural and configuration changes which require manual intervention at a physical standby database.</p>
<div id="SBYDB5040" class="tblformalwide">
<p class="titleintable"><a id="sthref618"></a><a id="g1041883"></a>Table 9-1 Primary Database Changes That Require Manual Intervention at a Physical Standby</p>
<table class="cellalignment1823" title="Primary Database Changes That Require Manual Intervention at a Physical Standby" summary="When you change the primary database, it often requires that you take a similar action on the standby database. This table lists the administrative tasks that require you perform some action on the standby database." dir="ltr">
<thead>
<tr class="cellalignment1814">
<th class="cellalignment1824" id="r1c1-t8">Reference</th>
<th class="cellalignment1824" id="r1c2-t8">Primary Database Change</th>
<th class="cellalignment1824" id="r1c3-t8">Action Required on Physical Standby Database</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1814">
<td class="cellalignment1820" id="r2c1-t8" headers="r1c1-t8">
<p><a href="#i1010428">Section 9.3.1</a></p>
</td>
<td class="cellalignment1820" headers="r2c1-t8 r1c2-t8">
<p>Add a datafile or create a tablespace</p>
</td>
<td class="cellalignment1820" headers="r2c1-t8 r1c3-t8">
<p>No action is required if the <code>STANDBY_FILE_MANAGEMENT</code> database initialization parameter is set to <code>AUTO</code>. If this parameter is set to <code>MANUAL</code>, the new datafile must be copied to the physical standby database.</p>
</td>
</tr>
<tr class="cellalignment1814">
<td class="cellalignment1820" id="r3c1-t8" headers="r1c1-t8">
<p><a href="#i1010512">Section 9.3.2</a></p>
</td>
<td class="cellalignment1820" headers="r3c1-t8 r1c2-t8">
<p>Drop or delete a tablespace or datafile</p>
</td>
<td class="cellalignment1820" headers="r3c1-t8 r1c3-t8">
<p>Delete datafile from primary and physical standby database after the redo data containing the <code>DROP</code> or <code>DELETE</code> command is applied to the physical standby.</p>
</td>
</tr>
<tr class="cellalignment1814">
<td class="cellalignment1820" id="r4c1-t8" headers="r1c1-t8">
<p><a href="#i1040493">Section 9.3.3</a></p>
</td>
<td class="cellalignment1820" headers="r4c1-t8 r1c2-t8">
<p>Use transportable tablespaces</p>
</td>
<td class="cellalignment1820" headers="r4c1-t8 r1c3-t8">
<p>Move tablespace between the primary and the physical standby database.</p>
</td>
</tr>
<tr class="cellalignment1814">
<td class="cellalignment1820" id="r5c1-t8" headers="r1c1-t8">
<p><a href="#i1034172">Section 9.3.4</a></p>
</td>
<td class="cellalignment1820" headers="r5c1-t8 r1c2-t8">
<p>Rename a datafile</p>
</td>
<td class="cellalignment1820" headers="r5c1-t8 r1c3-t8">
<p>Rename the datafile on the physical standby database.</p>
</td>
</tr>
<tr class="cellalignment1814">
<td class="cellalignment1820" id="r6c1-t8" headers="r1c1-t8">
<p><a href="#i1010565">Section 9.3.5</a></p>
</td>
<td class="cellalignment1820" headers="r6c1-t8 r1c2-t8">
<p>Add or drop a redo log file group</p>
</td>
<td class="cellalignment1820" headers="r6c1-t8 r1c3-t8">
<p>Evaluate the configuration of the redo log and standby redo log on the physical standby database and adjust as necessary.</p>
</td>
</tr>
<tr class="cellalignment1814">
<td class="cellalignment1820" id="r7c1-t8" headers="r1c1-t8">
<p><a href="#i1018551">Section 9.3.6</a></p>
</td>
<td class="cellalignment1820" headers="r7c1-t8 r1c2-t8">
<p>Perform a DML or DDL operation using the <code>NOLOGGING</code> or <code>UNRECOVERABLE</code> clause</p>
</td>
<td class="cellalignment1820" headers="r7c1-t8 r1c3-t8">
<p>Copy the datafile containing the unlogged changes to the physical standby database.</p>
</td>
</tr>
<tr class="cellalignment1814">
<td class="cellalignment1820" id="r8c1-t8" headers="r1c1-t8">
<p><a href="#BACIBGFF">Section 9.3.7</a></p>
</td>
<td class="cellalignment1820" headers="r8c1-t8 r1c2-t8">
<p>Grant or revoke administrative privileges or change the password of a user who has administrative privileges</p>
</td>
<td class="cellalignment1820" headers="r8c1-t8 r1c3-t8">
<p>If the <code>REMOTE_LOGIN_PASSWORDFILE</code> initialization parameter is set to <code>SHARED</code> or <code>EXCLUSIVE</code>, replace the password file on the physical standby database with a fresh copy of the password file from the primary database.</p>
</td>
</tr>
<tr class="cellalignment1814">
<td class="cellalignment1820" id="r9c1-t8" headers="r1c1-t8">
<p><a href="#BACDDACH">Section 9.3.8</a></p>
</td>
<td class="cellalignment1820" headers="r9c1-t8 r1c2-t8">
<p>Reset the TDE master encryption key</p>
</td>
<td class="cellalignment1820" headers="r9c1-t8 r1c3-t8">
<p>Replace the database encryption wallet on the physical standby database with a fresh copy of the database encryption wallet from the primary database.</p>
</td>
</tr>
<tr class="cellalignment1814">
<td class="cellalignment1820" id="r10c1-t8" headers="r1c1-t8">
<p><a href="init_params.htm#g1005251">Chapter 14</a></p>
</td>
<td class="cellalignment1820" headers="r10c1-t8 r1c2-t8">
<p>Change initialization parameters</p>
</td>
<td class="cellalignment1820" headers="r10c1-t8 r1c3-t8">
<p>Evaluate whether a corresponding change must be made to the initialization parameters on the physical standby database.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformalwide" -->
<a id="i1010428"></a>
<div id="SBYDB4785" class="sect2">
<h3 class="sect2"><span class="secnum">9.3.1</span> Adding a Datafile or Creating a Tablespace</h3>
<p>Th<a id="sthref619"></a><a id="sthref620"></a><a id="sthref621"></a><a id="sthref622"></a><a id="sthref623"></a><a id="sthref624"></a>e <code>STANDBY_FILE_MANAGEMENT</code> database initialization parameter controls whether the addition of a datafile to the primary database is automatically propagated to a physical standby databases.</p>
<ul>
<li>
<p>If the <code>STANDBY_FILE_MANAGEMENT</code> parameter on the physical standby database is set to <code>AUTO</code>, any new datafiles created on the primary database are automatically created on the physical standby database.</p>
</li>
<li>
<p>If the <code>STANDBY_FILE_MANAGEMENT</code> database parameter on the physical standby database is set to <code>MANUAL</code>, a new datafile must be manually copied from the primary database to the physical standby databases after it is added to the primary database.</p>
</li>
</ul>
<p>Note that if an existing datafile from another database is copied to a primary database, that it must also be copied to the standby database and that the standby control file must be re-created, regardless of the setting of <code>STANDBY_FILE_MANAGEMENT</code> parameter.</p>
<a id="BACDIDFG"></a>
<div id="SBYDB4786" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3"><span class="secnum">9.3.1.1</span> Using the STANDBY_FILE_MANAGEMENT Parameter with Raw Devices</h4>
<div class="infobox-note">
<p class="notep1">Note:</p>
Do not use the following procedure with databases that use Oracle Managed Files. Also, if the raw device path names are not the same on the primary and standby servers, use the <code>DB_FILE_NAME_CONVERT</code> database initialization parameter to convert the path names.</div>
<p>By setting the <code>STANDBY_FILE_MANAGEMENT</code> parameter to <code>AUTO</code> whenever new datafiles are added or dropped on the primary database, corresponding changes are made in the standby database without manual intervention. This is true as long as the standby database is using a file system. If the standby database is using raw devices for datafiles, then the STANDBY_FILE_MANAGEMENT parameter will continue to work, but manual intervention is needed. This manual intervention involves ensuring the raw devices exist before Redo Apply applies the redo data that will create the new datafile.On the primary database, create a new tablespace where the datafiles reside in a raw device. At the same time, create the same raw device on the standby database. For example:</p>
<pre>
SQL&gt; CREATE TABLESPACE MTS2 DATAFILE '/dev/raw/raw100' size 1m;
Tablespace created.
 
SQL&gt; ALTER SYSTEM SWITCH LOGFILE; 
System altered.
</pre>
<p>The standby database automatically adds the datafile because the raw devices exist. The standby alert log shows the following:</p>
<pre>
Fri Apr  8 09:49:31 2005
Media Recovery Log /u01/MILLER/flash_recovery_area/MTS_STBY/archivelog/2005_04_08/o1_mf_1_7_15ffgt0z_.arc
Recovery created file /dev/raw/raw100
Successfully added datafile 6 to media recovery
Datafile #6: '/dev/raw/raw100'
Media Recovery Waiting for thread 1 sequence 8 (in transit)
</pre>
<p>However, if the raw device was created on the primary system but not on the standby, then Redo Apply will stop due to file-creation errors. For example, issue the following statements on the primary database:</p>
<pre>
SQL&gt; CREATE TABLESPACE MTS3 DATAFILE '/dev/raw/raw101' size 1m;
Tablespace created.
 
SQL&gt; ALTER SYSTEM SWITCH LOGFILE;
System altered.
</pre>
<p>The standby system does not have the <code>/dev/raw/raw101</code> raw device created. The standby alert log shows the following messages when recovering the archive:</p>
<pre>
Fri Apr  8 10:00:22 2005
Media Recovery Log /u01/MILLER/flash_recovery_area/MTS_STBY/archivelog/2005_04_08/o1_mf_1_8_15ffjrov_.arc
File #7 added to control file as 'UNNAMED00007'.
Originally created as:
'/dev/raw/raw101'
Recovery was unable to create the file as:
'/dev/raw/raw101'
MRP0: Background Media Recovery terminated with error 1274
Fri Apr  8 10:00:22 2005
Errors in file /u01/MILLER/MTS/dump/mts_mrp0_21851.trc:
ORA-01274: cannot add datafile '/dev/raw/raw101' - file could not be created
ORA-01119: error in creating database file '/dev/raw/raw101'
ORA-27041: unable to open file
Linux Error: 13: Permission denied
Additional information: 1
Some recovered datafiles maybe left media fuzzy
Media recovery may continue but open resetlogs may fail
Fri Apr  8 10:00:22 2005
Errors in file /u01/MILLER/MTS/dump/mts_mrp0_21851.trc:
ORA-01274: cannot add datafile '/dev/raw/raw101' - file could not be created
ORA-01119: error in creating database file '/dev/raw/raw101'
ORA-27041: unable to open file
Linux Error: 13: Permission denied
Additional information: 1
Fri Apr  8 10:00:22 2005
MTS; MRP0: Background Media Recovery process shutdown
ARCH: Connecting to console port...
</pre></div>
<!-- class="sect3" -->
<div id="SBYDB4787" class="sect3"><!-- infolevel="all" infotype="General" --><a id="sthref625"></a>
<h4 class="sect3"><span class="secnum">9.3.1.2</span> Recovering from Errors</h4>
<p>To correct the problems described in <a href="#BACDIDFG">Section 9.3.1.1</a>, perform the following steps:</p>
<ol>
<li>
<p>Create the raw device on the standby database and assign permissions to the Oracle user.</p>
</li>
<li>
<p>Query the <code>V$DATAFILE</code> view. For example:</p>
<pre>
SQL&gt; SELECT NAME FROM V$DATAFILE;

NAME -------------------------------------------------------------------------------
/u01/MILLER/MTS/system01.dbf
/u01/MILLER/MTS/undotbs01.dbf
/u01/MILLER/MTS/sysaux01.dbf
/u01/MILLER/MTS/users01.dbf
/u01/MILLER/MTS/mts.dbf
/dev/raw/raw100
/u01/app/oracle/product/10.1.0/dbs/UNNAMED00007

SQL&gt; ALTER SYSTEM SET STANDBY_FILE_MANAGEMENT=MANUAL;

SQL&gt; ALTER DATABASE CREATE DATAFILE -
&gt; '/u01/app/oracle/product/10.1.0/dbs/UNNAMED00007' -
&gt;  AS -
&gt; '/dev/raw/raw101';
</pre></li>
<li>
<p>In the standby alert log you should see information similar to the following:</p>
<pre>
Fri Apr  8 10:09:30 2005
alter database create datafile
'/dev/raw/raw101' as '/dev/raw/raw101'

Fri Apr  8 10:09:30 2005
Completed: alter database create datafile
'/dev/raw/raw101' a
</pre></li>
<li>
<p>On the standby database, set <code>STANDBY_FILE_MANAGEMENT</code> to <code>AUTO</code> and restart Redo Apply:</p>
<pre>
SQL&gt; ALTER SYSTEM SET STANDBY_FILE_MANAGEMENT=AUTO;
SQL&gt; ALTER DATABASE RECOVER MANAGED STANDBY DATABASE DISCONNECT;
</pre></li>
</ol>
<p>At this point Redo Apply uses the new raw device datafile and recovery continues.</p>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="i1010512"></a>
<div id="SBYDB4788" class="sect2">
<h3 class="sect2"><span class="secnum">9.3.2</span> Dropping Tablespaces and Deleting Datafiles</h3>
<p>When a tablespace is dropped or a datafile is deleted from a primary database, the corresponding datafile(s) must be deleted from the physical standby database. The following example shows how to drop a tablespace:</p>
<pre>
SQL&gt; DROP TABLESPACE tbs_4;
SQL&gt; ALTER SYSTEM SWITCH LOGFILE;
</pre>
<p>To verify that deleted datafiles are no longer part of the database, query the <code>V$DATAFILE</code> view.</p>
<p>Delete the corresponding datafile on the standby system after the redo data that contains the previous changes is applied to the standby database. For example:</p>
<pre>
% rm /disk1/oracle/oradata/payroll/s2tbs_4.dbf
</pre>
<p>On the primary database, after ensuring the standby database applied the redo information for the dropped tablespace, you can remove the datafile for the tablespace. For example:</p>
<pre>
% rm /disk1/oracle/oradata/payroll/tbs_4.dbf
</pre>
<div id="SBYDB4789" class="sect3"><a id="sthref626"></a>
<h4 class="sect3"><span class="secnum">9.3.2.1</span> Using DROP TABLESPACE INCLUDING CONTENTS AND DATAFILES</h4>
<p>You can issue the SQL <code>DROP TABLESPACE INCLUDING CONTENTS AND DATAFILES</code> statement on the primary database to delete the datafiles on both the primary and standby databases. To use this statement, the <code>STANDBY_FILE_MANAGEMENT</code> initialization parameter must be set to <code>AUTO</code>. For example, to drop the tablespace at the primary site:</p>
<pre>
SQL&gt; DROP TABLESPACE INCLUDING CONTENTS AND DATAFILES tbs_4;
SQL&gt; ALTER SYSTEM SWITCH LOGFILE;
</pre></div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="i1040493"></a>
<div id="SBYDB4790" class="sect2">
<h3 class="sect2"><span class="secnum">9.3.3</span> <a id="sthref627"></a><a id="sthref628"></a><a id="sthref629"></a>Using Transportable Tablespaces with a Physical Standby Database</h3>
<p>You can use the Oracle transportable tablespaces feature to move a subset of an Oracle database and plug it in to another Oracle database, essentially moving tablespaces between the databases.</p>
<p>To move or copy a set of tablespaces into a primary database when a physical standby is being used, perform the following steps:</p>
<ol>
<li>
<p>Generate a transportable tablespace set that consists of datafiles for the set of tablespaces being transported and an export file containing structural information for the set of tablespaces.</p>
</li>
<li>
<p>Transport the tablespace set:</p>
<ol>
<li>
<p>Copy the datafiles and the export file to the primary database.</p>
</li>
<li>
<p>Copy the datafiles to the standby database.</p>
</li>
</ol>
<p>The data files must have the same path name on the primary and standby databases unless the <code>DB_FILE_NAME_CONVERT</code> database initialization parameter has been configured. If <code>DB_FILE_NAME_CONVERT</code> has <span class="italic">not</span> been configured and the path names of the data files are not the same on the primary and standby databases, issue the <code>ALTER DATABASE RENAME FILE</code> statement to rename the data files. Do this after Redo Apply has failed to apply the redo generated by plugging the tablespace into the primary database. The <code>STANDBY_FILE_MANAGEMENT</code> initialization parameter must be set to <code>MANUAL</code> before renaming the data files, and should be reset to the previous value after renaming the data files.</p>
</li>
<li>
<p>Plug in the tablespace.</p>
<p>Invoke the <a id="sthref630"></a>Data Pump utility to plug the set of tablespaces into the primary database. Redo data will be generated and applied at the standby site to plug the tablespace into the standby database.</p>
</li>
</ol>
<p>For more information about transportable tablespaces, see <a class="olink ADMIN" href="../e25494/toc.htm"><span class="italic">Oracle Database Administrator's Guide.</span></a></p>
</div>
<!-- class="sect2" -->
<a id="i1034172"></a>
<div id="SBYDB4791" class="sect2">
<h3 class="sect2"><span class="secnum">9.3.4</span> R<a id="sthref631"></a><a id="sthref632"></a>enaming a Datafile in the Primary Database</h3>
<p>When you rename one or more datafiles in the primary database, the change is not propagated to the standby database. Therefore, if you want to rename the same datafiles on the standby database, you must manually make the equivalent modifications on the standby database because the modifications are not performed automatically, even if the <code>STANDBY_FILE_MANAGEMENT</code> initialization parameter is set to <code>AUTO</code>.</p>
<p>The following steps describe how to rename a datafile in the primary database and manually propagate the changes to the standby database.</p>
<ol>
<li>
<p>To <a id="sthref633"></a><a id="sthref634"></a><a id="sthref635"></a>rename the datafile in the primary database, take the tablespace offline:</p>
<pre>
SQL&gt; ALTER TABLESPACE tbs_4 OFFLINE;
</pre></li>
<li>
<p>Exit from the SQL prompt and issue an operating system command, such as the following UNIX <code>mv</code> command, to rename the datafile on the primary system:</p>
<pre>
% mv /disk1/oracle/oradata/payroll/tbs_4.dbf 
/disk1/oracle/oradata/payroll/tbs_x.dbf
</pre></li>
<li>
<p>Rename the datafile in the primary database and bring the tablespace back online:</p>
<pre>
SQL&gt; ALTER TABLESPACE tbs_4 RENAME DATAFILE -
&gt; '/disk1/oracle/oradata/payroll/tbs_4.dbf' -
&gt;  TO '/disk1/oracle/oradata/payroll/tbs_x.dbf';

SQL&gt; ALTER TABLESPACE tbs_4 ONLINE;
</pre></li>
<li>
<p>Connect to the standby database and stop Redo Apply:</p>
<pre>
SQL&gt; ALTER DATABASE RECOVER MANAGED STANDBY DATABASE CANCEL;
</pre></li>
<li>
<p>Shut down the standby database:</p>
<pre>
SQL&gt; SHUTDOWN;
</pre></li>
<li>
<p>Rename the datafile at the standby site using an operating system command, such as the UNIX <code>mv</code> command:</p>
<pre>
% mv /disk1/oracle/oradata/payroll/tbs_4.dbf /disk1/oracle/oradata/payroll/tbs_x.dbf
</pre></li>
<li>
<p>Start and mount the standby database:</p>
<pre>
SQL&gt; STARTUP MOUNT;
</pre></li>
<li>
<p>Rename the datafile in the standby control file. Note that the <code>STANDBY_FILE_MANAGEMENT</code> database initialization parameter must be set to <code>MANUAL</code> in order to rename a datafile. This parameter can be reset to its previous value after renaming a datafile.</p>
<pre>
SQL&gt; ALTER DATABASE RENAME FILE '/disk1/oracle/oradata/payroll/tbs_4.dbf' -
&gt; TO '/disk1/oracle/oradata/payroll/tbs_x.dbf';
</pre></li>
<li>
<p>On the standby database, restart Redo Apply:</p>
<pre>
SQL&gt; ALTER DATABASE RECOVER MANAGED STANDBY DATABASE USING CURRENT LOGFILE -
&gt; DISCONNECT FROM SESSION;
</pre></li>
</ol>
<p>If you do not rename the corresponding datafile at the standby system, and then try to refresh the standby database control file, the standby database will attempt to use the renamed datafile, but it will not find it. Consequently, you will see error messages similar to the following in the alert log:</p>
<pre>
ORA-00283: recovery session canceled due to errors
ORA-01157: cannot identify/lock datafile 4 - see DBWR trace file
ORA-01110: datafile 4: '/Disk1/oracle/oradata/payroll/tbs_x.dbf'
</pre></div>
<!-- class="sect2" -->
<a id="i1010565"></a>
<div id="SBYDB4792" class="sect2">
<h3 class="sect2"><span class="secnum">9.3.5</span> Add or <a id="sthref636"></a><a id="sthref637"></a><a id="sthref638"></a><a id="sthref639"></a>Drop a Redo Log File Group</h3>
<p>The configuration of the redo log and standby redo log on a physical standby database should be reevaluated and adjusted as necessary after adding or dropping a log file group on the primary database.</p>
<p>Take the following steps to add or drop a log file group or standby log file group on a physical standby database:</p>
<ol>
<li>
<p>Stop Redo Apply.</p>
</li>
<li>
<p>If the <code>STANDBY_FILE_MANAGEMENT</code> initialization parameter is set to <code>AUTO</code>, change the value to <code>MANUAL</code>.</p>
</li>
<li id="i1027981">
<p>Add or drop a log file group.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
An online logfile group must always be manually cleared before it can be dropped from a physical standby database. For example:
<pre>
ALTER DATABASE CLEAR LOGFILE GROUP 3;
</pre>
<p>An online logfile group that has a status of <code>CURRENT</code> or <code>CLEARING_CURRENT</code> cannot be dropped from a physical standby database. An online logfile group that has this status can be dropped after a role transition.</p>
</div>
</li>
<li>
<p>Restore the <code>STANDBY_FILE_MANAGEMENT</code> initialization parameter and the Redo Apply options to their original states.</p>
</li>
<li>
<p>Restart Redo Apply.</p>
</li>
</ol>
</div>
<!-- class="sect2" -->
<a id="i1018551"></a>
<div id="SBYDB00206" class="sect2">
<h3 class="sect2"><span class="secnum">9.3.6</span> NOLOGGING or Unrecoverable Operations</h3>
<p>When you perform a DML or DDL operation using the <code>NOLOGGING</code> or <code>UNRECOVERABLE</code> clause, the standby database is invalidated and may require substantial DBA administrative activities to repair. You can specify the <code>SQL ALTER DATABASE</code> or <code>SQL ALTER TABLESPACE</code> statement with the <code>FORCE</code> <code>LOGGING</code> c<code><a id="sthref640"></a><a id="sthref641"></a></code>lause to override the <code>NOLOGGING</code> setting. However, this statement will not repair an already invalidated database.</p>
<p>See <a href="scenarios.htm#i1015738">Section 13.4</a> for information about recovering after the <code>NOLOGGING</code> clause is used.</p>
</div>
<!-- class="sect2" -->
<a id="BACIBGFF"></a>
<div id="SBYDB4793" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">9.3.7</span> Refresh the Password File</h3>
<p>If the <code>REMOTE_LOGIN_PASSWORDFILE</code> database initialization parameter is set to <code>SHARED</code> or <code>EXCLUSIVE</code>, the password file on a physical standby database must be replaced with a fresh copy from the primary database after granting or revoking administrative privileges or changing the password of a user with administrative privileges.</p>
<p>Failure to refresh the password file on the physical standby database may cause authentication of redo transport sessions or connections as SYSDBA or SYSOPER to the physical standby database to fail.</p>
</div>
<!-- class="sect2" -->
<a id="BACDDACH"></a>
<div id="SBYDB4794" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">9.3.8</span> Reset the TDE Master Encryption Key</h3>
<p>The database encryption wallet on a physical standby database must be replaced with a fresh copy of the database encryption wallet from the primary database whenever the TDE master encryption key is reset on the primary database.</p>
<p>Failure to refresh the database encryption wallet on the physical standby database will prevent access to encrypted columns on the physical standby database that are modified after the master encryption key is reset on the primary database.</p>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="i1026480"></a>
<div id="SBYDB4795" class="sect1">
<h2 class="sect1"><span class="secnum">9.4</span> R<a id="sthref642"></a>ecovering Through the OPEN RESETLOGS Statement</h2>
<p>D<a id="sthref643"></a><a id="sthref644"></a><a id="sthref645"></a><a id="sthref646"></a>ata Guard allows recovery on a physical standby database to continue after the primary database has been opened with the <code>RESETLOGS</code> option. When an <code>ALTER DATABASE OPEN RESETLOGS</code> statement is issued on the primary database, the <a id="sthref647"></a><a id="sthref648"></a><a id="sthref649"></a>i<a id="sthref650"></a><a id="sthref651"></a><a id="sthref652"></a><a id="sthref653"></a><a id="sthref654"></a>ncarnation of the database changes, creating a new branch of redo data.</p>
<p>When a physical standby database receives a new branch of redo data, Redo Apply automatically takes the new branch of redo data. For physical standby databases, no manual intervention is required if the standby database did not apply redo data past the new resetlogs SCN (past the start of the new branch of redo data). The following table describes how to <a id="sthref655"></a><a id="sthref656"></a><a id="sthref657"></a><a id="sthref658"></a>resynchronize the standby database with the primary database branch.</p>
<div class="inftblinformalwide">
<table class="cellalignment1823" title="Resynchronizing a Standby Database After an OPEN RESETLOGS statement" summary="Describes how to resynchronize the standby database with the primary database branch. Each row of the table provides a solution that is dependent upon how much redo data the standby database has applied and whether or not Flashback Database is enabled." dir="ltr">
<thead>
<tr class="cellalignment1814">
<th class="cellalignment1824" id="r1c1-t11">If the standby database. . .</th>
<th class="cellalignment1824" id="r1c2-t11">Then. . .</th>
<th class="cellalignment1824" id="r1c3-t11">Perform these steps. . .</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1814">
<td class="cellalignment1820" id="r2c1-t11" headers="r1c1-t11">Has not applied redo data past the new resetlogs SCN (past the start of the new branch of redo data) and the new redo branch from <code>OPEN RESETLOGS</code> has been registered at the standby</td>
<td class="cellalignment1820" headers="r2c1-t11 r1c2-t11">Redo Apply automatically takes the new branch of redo.</td>
<td class="cellalignment1820" headers="r2c1-t11 r1c3-t11">No manual intervention is necessary. The MRP automatically resynchronizes the standby database with the new branch of redo data.
<p>Note: To check whether the new redo branch has been registered at the standby, perform the following query at the primary and standby and verify that the results match:</p>
<pre>
SELECT resetlogs_id, resetlogs_change# FROM V$DATABASE_INCARNATION WHERE status='CURRENT'
</pre></td>
</tr>
<tr class="cellalignment1814">
<td class="cellalignment1820" id="r3c1-t11" headers="r1c1-t11">Has applied redo data past the new resetlogs SCN (past the start of the new branch of redo data) and Flashback Database is enabled on the standby database</td>
<td class="cellalignment1820" headers="r3c1-t11 r1c2-t11">The standby database is recovered <span class="italic">in the future</span> of the new branch of redo data.</td>
<td class="cellalignment1820" headers="r3c1-t11 r1c3-t11">
<ol>
<li>Follow the procedure in <a href="scenarios.htm#i1067797">Section 13.3.1</a> to flash back a physical standby database.</li>
<li>
<p>Restart Redo Apply to continue application of redo data onto new reset logs branch.</p>
</li>
</ol>
<p>The MRP automatically resynchronizes the standby database with the new branch.</p>
</td>
</tr>
<tr class="cellalignment1814">
<td class="cellalignment1820" id="r4c1-t11" headers="r1c1-t11">Has applied redo data past the new resetlogs SCN (past the start of the new branch of redo data) and Flashback Database is not enabled on the standby database</td>
<td class="cellalignment1820" headers="r4c1-t11 r1c2-t11">The primary database has diverged from the standby on the indicated primary database branch.</td>
<td class="cellalignment1820" headers="r4c1-t11 r1c3-t11">Re-create the physical standby database following the procedures in <a href="create_ps.htm#g88234">Chapter 3</a>.</td>
</tr>
<tr class="cellalignment1814">
<td class="cellalignment1820" id="r5c1-t11" headers="r1c1-t11">Is missing intervening archived redo log files from the new branch of redo data</td>
<td class="cellalignment1820" headers="r5c1-t11 r1c2-t11">The MRP cannot continue until the missing log files are retrieved.</td>
<td class="cellalignment1820" headers="r5c1-t11 r1c3-t11">Locate and register missing archived redo log files from each branch.</td>
</tr>
<tr class="cellalignment1814">
<td class="cellalignment1820" id="r6c1-t11" headers="r1c1-t11">Is missing archived redo log files from the end of the previous branch of redo data.</td>
<td class="cellalignment1820" headers="r6c1-t11 r1c2-t11">The MRP cannot continue until the missing log files are retrieved.</td>
<td class="cellalignment1820" headers="r6c1-t11 r1c3-t11">Locate and register missing archived redo log files from the previous branch.</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblinformalwide" -->
<p>See <a class="olink BRADV" href="../../backup.112/e10642/toc.htm"><span class="italic">Oracle Database Backup and Recovery User's Guide</span></a> for more information about database incarnations, recovering through an <code>OPEN RESETLOGS</code> operation, and Flashback Database.</p>
</div>
<!-- class="sect1" -->
<a id="i1005610"></a>
<div id="SBYDB00710" class="sect1">
<h2 class="sect1"><span class="secnum">9.5</span> Monitoring Primary, Physical Standby, and Snapshot Standby Databases</h2>
<p>This section describes where to find useful information for monitoring primary and standby databases.</p>
<p><a href="#g1041815">Table 9-2</a> summarizes common primary database management actions and where to find information related to these actions.</p>
<div id="SBYDB5041" class="tblruleformalwide">
<p class="titleintable"><a id="sthref659"></a><a id="g1041815"></a>Table 9-2 Sources of Information About Common Primary Database Management Actions <a id="sthref660"></a><a id="sthref661"></a></p>
<table class="cellalignment1823" title="Sources of Information About Common Primary Database Management Actions " summary="Summarizes the common events that occur on the primary database and pointers to the files and view where you can monitor these events on the primary and standby sites." dir="ltr">
<thead>
<tr class="cellalignment1814">
<th class="cellalignment1824" id="r1c1-t12">Primary Database Action</th>
<th class="cellalignment1824" id="r1c2-t12">Primary Site Information</th>
<th class="cellalignment1824" id="r1c3-t12">Standby Site Information</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1814">
<td class="cellalignment1820" id="r2c1-t12" headers="r1c1-t12">
<p>Enable or disable a redo thread</p>
</td>
<td class="cellalignment1820" headers="r2c1-t12 r1c2-t12">
<ul>
<li>
<p>Alert log</p>
</li>
<li>
<p><code>V$<a id="sthref662"></a><a id="sthref663"></a>THREAD</code></p>
</li>
</ul>
</td>
<td class="cellalignment1820" headers="r2c1-t12 r1c3-t12">
<p>Alert log</p>
</td>
</tr>
<tr class="cellalignment1814">
<td class="cellalignment1820" id="r3c1-t12" headers="r1c1-t12">
<p>Display database role, protection mode, protection level, switchover status, fast-start failover<a id="sthref664"></a><a id="sthref665"></a><a id="sthref666"></a><a id="sthref667"></a><a id="sthref668"></a> information, and so forth</p>
</td>
<td class="cellalignment1820" headers="r3c1-t12 r1c2-t12">
<p><code>V$DATABASE</code></p>
</td>
<td class="cellalignment1820" headers="r3c1-t12 r1c3-t12">
<p><code>V$DATABASE</code></p>
</td>
</tr>
<tr class="cellalignment1814">
<td class="cellalignment1820" id="r4c1-t12" headers="r1c1-t12">
<p>Add or drop a redo log file group</p>
</td>
<td class="cellalignment1820" headers="r4c1-t12 r1c2-t12">
<ul>
<li>
<p>Alert log</p>
</li>
<li>
<p><code>V$LOG</code></p>
</li>
<li>
<p><code>STATUS</code> column of <code>V$LOGFILE</code></p>
</li>
</ul>
</td>
<td class="cellalignment1820" headers="r4c1-t12 r1c3-t12">
<p>Alert log</p>
</td>
</tr>
<tr class="cellalignment1814">
<td class="cellalignment1820" id="r5c1-t12" headers="r1c1-t12">
<p><code><a id="sthref669"></a><a id="sthref670"></a>CREATE CONTROLFILE</code></p>
</td>
<td class="cellalignment1820" headers="r5c1-t12 r1c2-t12">
<p>Alert log</p>
</td>
<td class="cellalignment1820" headers="r5c1-t12 r1c3-t12">
<p>Alert log</p>
</td>
</tr>
<tr class="cellalignment1814">
<td class="cellalignment1820" id="r6c1-t12" headers="r1c1-t12">
<p>Monitor Redo Apply</p>
</td>
<td class="cellalignment1820" headers="r6c1-t12 r1c2-t12">
<ul>
<li>
<p>Alert log</p>
</li>
<li>
<p><code>V$ARCHIVE_DEST_STATUS</code></p>
</li>
</ul>
</td>
<td class="cellalignment1820" headers="r6c1-t12 r1c3-t12">
<ul>
<li>
<p>Alert log</p>
</li>
<li>
<p><code>V$ARCHIVED_LOG</code></p>
</li>
<li>
<p><code>V$LOG_HISTORY</code></p>
</li>
<li>
<p><code>V$MANAGED_STANDBY</code></p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment1814">
<td class="cellalignment1820" id="r7c1-t12" headers="r1c1-t12">
<p><a id="sthref671"></a><a id="sthref672"></a><a id="sthref673"></a>Change tablespace status</p>
</td>
<td class="cellalignment1820" headers="r7c1-t12 r1c2-t12">
<ul>
<li>
<p><code>V$RECOVER_FILE</code></p>
</li>
<li>
<p><code>DBA_TABLESPACES</code></p>
</li>
<li>
<p>Alert log</p>
</li>
</ul>
</td>
<td class="cellalignment1820" headers="r7c1-t12 r1c3-t12">
<ul>
<li>
<p><code>V$RECOVER_FILE</code></p>
</li>
<li>
<p><code>DBA_TABLESPACES</code></p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment1814">
<td class="cellalignment1820" id="r8c1-t12" headers="r1c1-t12">
<p><a id="sthref674"></a>Add or drop a datafile or tablespace</p>
</td>
<td class="cellalignment1820" headers="r8c1-t12 r1c2-t12">
<ul>
<li>
<p><code><a id="sthref675"></a>DBA_DATA_FILES</code></p>
</li>
<li>
<p>Alert log</p>
</li>
</ul>
</td>
<td class="cellalignment1820" headers="r8c1-t12 r1c3-t12">
<ul>
<li>
<p><code>V$DATAFILE</code></p>
</li>
<li>
<p>Alert log</p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment1814">
<td class="cellalignment1820" id="r9c1-t12" headers="r1c1-t12">
<p>Rename a datafile</p>
</td>
<td class="cellalignment1820" headers="r9c1-t12 r1c2-t12">
<ul>
<li>
<p><code>V$DATAFILE</code></p>
</li>
<li>
<p>Alert log</p>
</li>
</ul>
</td>
<td class="cellalignment1820" headers="r9c1-t12 r1c3-t12">
<ul>
<li>
<p><code>V$DATAFILE</code></p>
</li>
<li>
<p>Alert log</p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment1814">
<td class="cellalignment1820" id="r10c1-t12" headers="r1c1-t12">
<p>Unlogged or unrecoverable operations</p>
</td>
<td class="cellalignment1820" headers="r10c1-t12 r1c2-t12">
<ul>
<li>
<p><code>V$DATAFILE</code></p>
</li>
<li>
<p><code>V$DATABASE</code></p>
</li>
</ul>
</td>
<td class="cellalignment1820" headers="r10c1-t12 r1c3-t12">
<p>Alert log</p>
</td>
</tr>
<tr class="cellalignment1814">
<td class="cellalignment1820" id="r11c1-t12" headers="r1c1-t12">
<p>Monitor redo transport</p>
</td>
<td class="cellalignment1820" headers="r11c1-t12 r1c2-t12">
<ul>
<li>
<p><code>V$ARCHIVE_DEST_STATUS</code></p>
</li>
<li>
<p><code>V$ARCHIVED_LOG</code></p>
</li>
<li>
<p><code>V$ARCHIVE_DEST</code></p>
</li>
<li>
<p>Alert log</p>
</li>
</ul>
</td>
<td class="cellalignment1820" headers="r11c1-t12 r1c3-t12">
<ul>
<li>
<p><code>V$ARCHIVED_LOG</code></p>
</li>
<li>
<p>Alert log</p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment1814">
<td class="cellalignment1820" id="r12c1-t12" headers="r1c1-t12">
<p>Issue <code><a id="sthref676"></a><a id="sthref677"></a><a id="sthref678"></a><a id="sthref679"></a>OPEN RESETLOGS</code> or <code>CLEAR UNARCHIVED LOGFILES</code> statements</p>
</td>
<td class="cellalignment1820" headers="r12c1-t12 r1c2-t12">
<p>Alert log</p>
</td>
<td class="cellalignment1820" headers="r12c1-t12 r1c3-t12">
<p>Alert log</p>
</td>
</tr>
<tr class="cellalignment1814">
<td class="cellalignment1820" id="r13c1-t12" headers="r1c1-t12">
<p>Change initialization parameter</p>
</td>
<td class="cellalignment1820" headers="r13c1-t12 r1c2-t12">
<p>Alert log</p>
</td>
<td class="cellalignment1820" headers="r13c1-t12 r1c3-t12">
<p>Alert log</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblruleformalwide" -->
<a id="i1035175"></a>
<div id="SBYDB00555" class="sect2">
<h3 class="sect2"><span class="secnum">9.5.1</span> <a id="sthref680"></a><a id="sthref681"></a>Using Views to Monitor Primary, Physical, and Snapshot Standby Databases</h3>
<p><a id="sthref682"></a>This section shows how to use dynamic performance views to monitor primary, physical standby, and snapshot standby databases.</p>
<p>The following dynamic performance views are discussed:</p>
<ul>
<li>
<p><a href="#CHDDJEHG">V$DATABASE</a></p>
</li>
<li>
<p><a href="#i1035680">V$MANAGED_STANDBY</a></p>
</li>
<li>
<p><a href="#i1035245">V$ARCHIVED_LOG</a></p>
</li>
<li>
<p><a href="#i1035262">V$LOG_HISTORY</a></p>
</li>
<li>
<p><a href="#i1035274">V$DATAGUARD_STATUS</a></p>
</li>
<li>
<p><a href="#BACGDHJI">V$ARCHIVE_DEST</a></p>
</li>
</ul>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a class="olink REFRN" href="../e40402/toc.htm"><span class="italic">Oracle Database Reference</span></a> for complete reference information about views</div>
<a id="CHDDJEHG"></a>
<div id="SBYDB4796" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3"><span class="secnum">9.5.1.1</span> V$DATABASE</h4>
<p>The following query displays the data protection mode, data protection level, database role, and switchover status for a primary, physical standby or snapshot standby database:</p>
<pre>
SQL&gt; SELECT PROTECTION_MODE, PROTECTION_LEVEL, &ndash;
&gt; DATABASE_ROLE ROLE, SWITCHOVER_STATUS &ndash;
&gt; FROM V$DATABASE;
</pre>
<p>The following query displays fast-start failover status:</p>
<pre>
SQL&gt; SELECT FS_FAILOVER_STATUS "FSFO STATUS", -
&gt; FS_FAILOVER_CURRENT_TARGET TARGET, -
&gt; FS_FAILOVER_THRESHOLD THRESHOLD, -
&gt; FS_FAILOVER_OBSERVER_PRESENT "OBSERVER PRESENT" &ndash;
&gt; FROM V$DATABASE;
</pre></div>
<!-- class="sect3" -->
<a id="i1035680"></a>
<div id="SBYDB4797" class="sect3">
<h4 class="sect3"><span class="secnum">9.5.1.2</span> V<a id="sthref683"></a><a id="sthref684"></a>$MANAGED_STANDBY</h4>
<p><a id="sthref685"></a><a id="sthref686"></a>The following query displays Redo Apply and redo transport status on a physical standby database:</p>
<pre>
SQL&gt; SELECT PROCESS, STATUS, THREAD#, SEQUENCE#,-
&gt; BLOCK#, BLOCKS FROM V$MANAGED_STANDBY;
 
PROCESS STATUS       THREAD#    SEQUENCE#  BLOCK#     BLOCKS
------- ------------ ---------- ---------- ---------- ----------
RFS     ATTACHED     1          947        72         72
MRP0    APPLYING_LOG 1          946        10         72
</pre>
<p>The sample output shows that a RFS process completed archiving a redo log file with a sequence number of 947 and that Redo Apply is actively applying an archived redo log file with a sequence number of 946. Redo Apply is currently recovering block number 10 of the 72-block archived redo log file.</p>
</div>
<!-- class="sect3" -->
<a id="i1035245"></a>
<div id="SBYDB4798" class="sect3">
<h4 class="sect3"><span class="secnum">9.5.1.3</span> V$ARCHIVED_LOG</h4>
<p><a id="sthref687"></a><a id="sthref688"></a><a id="sthref689"></a>The following query displays information about archived redo log files that have been received by a physical or snapshot standby database from a primary database:</p>
<pre>
SQL&gt; SELECT THREAD#, SEQUENCE#, FIRST_CHANGE#, -
&gt; NEXT_CHANGE# FROM V$ARCHIVED_LOG;
 
THREAD#    SEQUENCE#  FIRST_CHANGE# NEXT_CHANGE#
---------- ---------- ------------- ------------
1          945        74651         74739
1          946        74739         74772
1          947        74772         74795
</pre>
<p>The sample output shows that three archived redo log files have been received from the primary database.</p>
</div>
<!-- class="sect3" -->
<a id="i1035262"></a>
<div id="SBYDB4799" class="sect3">
<h4 class="sect3"><span class="secnum">9.5.1.4</span> V$LOG_HISTORY</h4>
<p>The following query displays archived log history information:<a id="sthref690"></a><a id="sthref691"></a></p>
<pre>
SQL&gt; SELECT THREAD#, SEQUENCE#, FIRST_CHANGE#, -
&gt; NEXT_CHANGE# FROM V$LOG_HISTORY;
</pre></div>
<!-- class="sect3" -->
<a id="i1035274"></a>
<div id="SBYDB4800" class="sect3">
<h4 class="sect3"><span class="secnum">9.5.1.5</span> V$DATAGUARD_STATUS</h4>
<p>The<a id="sthref692"></a><a id="sthref693"></a> following query displays messages generated by Data Guard events that caused a message to be written to the alert log or to a server process trace file:</p>
<pre>
SQL&gt; SELECT MESSAGE FROM V$DATAGUARD_STATUS;
</pre></div>
<!-- class="sect3" -->
<a id="BACGDHJI"></a>
<div id="SBYDB5131" class="sect3"><!-- infolevel="all" infotype="General" -->
<h4 class="sect3"><span class="secnum">9.5.1.6</span> V$ARCHIVE_DEST</h4>
<p>The following query shows the status of each redo transport destination, and for redo transport destinations that are standby databases, the SCN of the last primary database redo applied at that standby database:</p>
<pre>
SQL&gt; SELECT DEST_ID, APPLIED_SCN FROM V$ARCHIVE_DEST WHERE TARGET='STANDBY';
   
DEST_ID    STATUS    APPLIED_SCN
---------- --------- -----------
2          VALID     439054
3          VALID     439054 
</pre></div>
<!-- class="sect3" --></div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="i1033033"></a>
<div id="SBYDB00580" class="sect1">
<h2 class="sect1"><span class="secnum">9.6</span> Tuning Redo Apply<a id="sthref694"></a><a id="sthref695"></a><a id="sthref696"></a><a id="sthref697"></a></h2>
<p>The <span class="italic">Active Data Guard 11g Best Practices (includes best practices for Redo Apply</span>) white paper describes how to optimize Redo Apply and media recovery performance. This paper is available on the Oracle Maximum Availability Architecture (MAA) home page at:</p>
<p><code><a href="http://www.oracle.com/goto/maa/">http://www.oracle.com/goto/maa</a></code></p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
My Oracle Support note 454848.1 at <code><a href="http://support.oracle.com">http://support.oracle.com</a></code> for information about the installation and use of the Standby Statspack, which can be used to collect Redo Apply performance data from a physical standby database</div>
</div>
<!-- class="sect1" -->
<a id="BACIEJJI"></a>
<div id="SBYDB4801" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1"><span class="secnum">9.7</span> Managing a Snapshot Standby Database<a id="sthref698"></a></h2>
<p>A snapshot standby database is a fully updatable standby database. A snapshot standby database receives and archives, but does not apply, redo data from a primary database. Redo data received from the primary database is applied when a snapshot standby database is converted back into a physical standby database, after discarding all local updates to the snapshot standby database.</p>
<p>A snapshot standby database typically diverges from its primary database over time because redo data from the primary database is not applied as it is received. Local updates to the snapshot standby database will cause additional divergence. The data in the primary database is fully protected however, because a snapshot standby can be converted back into a physical standby database at any time, and the redo data received from the primary will then be applied.</p>
<p>A snapshot standby database provides disaster recovery and data protection benefits that are similar to those of a physical standby database. Snapshot standby databases are best used in scenarios where the benefit of having a temporary, updatable snapshot of the primary database justifies increased time to recover from primary database failures.</p>
<div id="SBYDB00708" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref699"></a>
<h3 class="sect2"><span class="secnum">9.7.1</span> Converting a Physical Standby Database into a Snapshot Standby Database</h3>
<p>Perform the following steps to convert a physical standby database into a snapshot standby database:</p>
<ol>
<li>
<p>Stop Redo Apply, if it is active.</p>
</li>
<li>
<p>Ensure that the database is mounted, but not open.</p>
</li>
<li>
<p>Ensure that a fast recovery area has been configured. It is not necessary for flashback database to be enabled.</p>
</li>
<li>
<p>Issue the following SQL statement to perform the conversion:</p>
<pre>
SQL&gt; ALTER DATABASE CONVERT TO SNAPSHOT STANDBY;
</pre></li>
</ol>
<div class="infobox-note">
<p class="notep1">Note:</p>
A physical standby database that is managed by the Data Guard broker can be converted into a snapshot standby database using either DGMGRL or Oracle Enterprise Manager. See <a class="olink DGBKR" href="../e40771/toc.htm"><span class="italic">Oracle Data Guard Broker</span></a> for more details.</div>
</div>
<!-- class="sect2" -->
<div id="SBYDB4802" class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref700"></a>
<h3 class="sect2"><span class="secnum">9.7.2</span> Using a Snapshot Standby Database</h3>
<p>A snapshot standby database can be opened in read-write mode and is fully updatable.</p>
<p>A snapshot standby database has the following characteristics:</p>
<ul>
<li>
<p>A snapshot standby database cannot be the target of a switchover or failover. A snapshot standby database must first be converted back into a physical standby database before performing a role transition to it.</p>
</li>
<li>
<p>A snapshot standby database cannot be the only standby database in a Maximum Protection Data Guard configuration.</p>
</li>
</ul>
<div class="infobox-note">
<p class="notep1">Note:</p>
Flashback Database is used to convert a snapshot standby database back into a physical standby database. Any operation that cannot be reversed using Flashback Database technology will prevent a snapshot standby from being converted back to a physical standby.
<p>For information about some of the limitations of Flashback Database, see <a class="olink BRADV543" href="../../backup.112/e10642/flashdb.htm#BRADV543"><span class="italic">Oracle Database Backup and Recovery User's Guide</span></a>.</p>
</div>
</div>
<!-- class="sect2" -->
<a id="CHDIFADF"></a>
<div id="SBYDB4803" class="sect2"><!-- infolevel="all" infotype="General" -->
<h3 class="sect2"><span class="secnum">9.7.3</span> Converting a Snapshot Standby Database into a Physical Standby Database</h3>
<p>Perform the following steps to convert a snapshot standby database into a physical standby database:</p>
<ol>
<li>
<p>On an Oracle Real Applications Cluster (Oracle RAC) database, shut down all but one instance.</p>
</li>
<li>
<p>Ensure that the database is mounted, but not open.</p>
</li>
<li>
<p>Issue the following SQL statement to perform the conversion:</p>
<pre>
SQL&gt; ALTER DATABASE CONVERT TO PHYSICAL STANDBY;
</pre></li>
</ol>
<p>The database is dismounted after conversion and must be restarted.</p>
<p>Redo data received while the database was a snapshot standby database will be automatically applied when Redo Apply is started.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
A snapshot standby database must be opened at least once in read-write mode before it can be converted into a physical standby database.</div>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" --></div>
<!-- class="chapter" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment1813">
<tr>
<td class="cellalignment1820">
<table class="cellalignment1818">
<tr>
<td class="cellalignment1817"><a href="role_management.htm"><img width="24" height="24" src="../../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment1817"><a href="manage_ls.htm"><img width="24" height="24" src="../../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;1999, 2014,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment1822">
<table class="cellalignment1816">
<tr>
<td class="cellalignment1817"><a href="../../index.htm"><img width="24" height="24" src="../../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment1817"><a href="../../nav/portal_booklist.htm"><img width="24" height="24" src="../../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment1817"><a href="toc.htm"><img width="24" height="24" src="../../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment1817"><a href="index.htm"><img width="24" height="24" src="../../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment1817"><a href="../../nav/mindx.htm"><img width="24" height="24" src="../../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment1817"><a href="../../dcommon/html/feedback.htm"><img width="24" height="24" src="../../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>
</body>
</html>
