<!DOCTYPE html>
<html lang="en" >
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1">
<meta charset="utf-8">
<title>Using SQL Apply to Upgrade the Oracle Database</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Version 5.1.2 Build 748" />
<meta name="dcterms.created" content="2014-02-25T8:43:1Z" />
<meta name="robots" content="all" />
<meta name="dcterms.title" content="Data Guard Concepts and Administration" />
<meta name="dcterms.identifier" content="E41134-03" />
<meta name="dcterms.isVersionOf" content="SBYDB" />
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;1999, 2014,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved." />
<link rel="Start" href="../../index.htm" title="Home" type="text/html" />
<link rel="Copyright" href="../../dcommon/html/cpyr.htm" title="Copyright" type="text/html" />

<script type="application/javascript"  src="../../dcommon/js/headfoot.js"></script>
<script type="application/javascript"  src="../../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html" />
<link rel="Index" href="index.htm" title="Index" type="text/html" />
<link rel="Prev" href="rman.htm" title="Previous" type="text/html" />
<link rel="Next" href="scenarios.htm" title="Next" type="text/html" />
<link rel="alternate" href="../e41134.pdf" title="PDF version" type="application/pdf" />
<link rel="schema.dcterms" href="http://purl.org/dc/terms/" />
<link rel="stylesheet" href="../../dcommon/css/fusiondoc.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/header.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/footer.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/fonts.css">
<link rel="stylesheet" href="../../dcommon/css/foundation.css">
<link rel="stylesheet" href="../../dcommon/css/codemirror.css">
<link rel="stylesheet" type="text/css" title="Default" href="../../nav/css/html5.css">
<link rel="stylesheet" href="../../dcommon/css/respond-480-tablet.css">
<link rel="stylesheet" href="../../dcommon/css/respond-768-laptop.css">
<link rel="stylesheet" href="../../dcommon/css/respond-1140-deskop.css">
<script type="application/javascript" src="../../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">20/34</span> <!-- End Header -->
<div id="SBYDB00830" class="chapter"><a id="BABGHIGF"></a>
<h1 class="chapter"><span class="secnum">12</span> Using SQL Apply to Upgrade the Oracle Database</h1>
<p>Starting with Oracle Database 10<span class="italic">g</span> release 1 (10.1.0.3), you can use a logical standby database to perform a <span class="italic">rolling upgrade</span> of Oracle Database 10<span class="italic">g</span> software. During a rolling upgrade, you can run different releases of an Oracle database on the primary and logical standby databases while you upgrade them, one at a time, incurring minimal downtime on the primary database.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
This chapter describes an alternative to the usual upgrade procedure involving longer downtime, as described in <a href="upgrades.htm#CHDEGEBB">Appendix B, "Upgrading and Downgrading Databases in a Data Guard Configuration"</a>. Do not attempt to combine steps from the method described in this chapter with steps from Appendix B.</div>
<p>The instructions in this chapter describe how to minimize downtime while upgrading an Oracle database. This chapter provides the following topics:</p>
<ul>
<li>
<p><a href="#BABCFBDD">Benefits of a Rolling Upgrade Using SQL Apply</a></p>
</li>
<li>
<p><a href="#BABDHFGH">Requirements to Perform a Rolling Upgrade Using SQL Apply</a></p>
</li>
<li>
<p><a href="#BABIHHIE">Figures and Conventions Used in the Upgrade Instructions</a></p>
</li>
<li>
<p><a href="#BABJIDHI">Performing a Rolling Upgrade By Creating a New Logical Standby Database</a></p>
</li>
<li>
<p><a href="#BABGFCAI">Performing a Rolling Upgrade With an Existing Logical Standby Database</a></p>
</li>
<li>
<p><a href="#CHDHCBGA">Performing a Rolling Upgrade With an Existing Physical Standby Database</a></p>
</li>
</ul>
<a id="BABCFBDD"></a>
<div id="SBYDB4879" class="sect1">
<h2 class="sect1"><span class="secnum">12.1</span> Benefits of a Rolling Upgrade Using SQL Apply<a id="sthref870"></a><a id="sthref871"></a><a id="sthref872"></a><a id="sthref873"></a><a id="sthref874"></a></h2>
<p>Performing a rolling upgrade<a id="sthref875"></a><a id="sthref876"></a> with SQL Apply has the following advantages:</p>
<ul>
<li>
<p>Your database will incur very little downtime. The overall downtime can be as little as the time it takes to perform a switchover.</p>
</li>
<li>
<p>You eliminate application downtime due to PL/SQL recompilation.</p>
</li>
<li>
<p>You can validate the upgraded database release without affecting the primary database.</p>
</li>
</ul>
</div>
<!-- class="sect1" -->
<a id="BABDHFGH"></a>
<div id="SBYDB4880" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1"><span class="secnum">12.2</span> Requirements to Perform a Rolling Upgrade Using SQL Apply<a id="sthref877"></a><a id="sthref878"></a><a id="sthref879"></a><a id="sthref880"></a></h2>
<p>The rolling upgrade procedure requires the following:</p>
<ul>
<li>
<p>A primary database that is running Oracle Database release <span class="italic">x</span> and a logical standby database that is running Oracle Database release <span class="italic">y</span>.</p>
</li>
<li>
<p>The databases must not be part of a Data Guard Broker configuration. See <a class="olink DGBKR" href="../e40771/toc.htm"><span class="italic">Oracle Data Guard Broker</span></a> for information about removing databases from a broker configuration.</p>
</li>
<li>
<p>The Data Guard protection mode must be set to either maximum availability or maximum performance. Query the <code>PROTECTION_LEVEL</code> column in the <code>V$DATABASE</code> view to find out the current protection mode setting.</p>
</li>
<li>
<p>To ensure the primary database can proceed while the logical standby database is being upgraded, the <code>LOG_ARCHIVE_DEST_</code><code><span class="codeinlineitalic">n</span></code> initialization parameter for the logical standby database destination must <span class="italic">not</span> be set to <code>MANDATORY</code>.</p>
</li>
<li>
<p>The <code>COMPATIBLE</code><a id="sthref881"></a><a id="sthref882"></a> initialization parameter must match the software release prior to the upgrade. That is, a rolling upgrade from release <span class="italic">x</span> to release <span class="italic">y</span> requires that the <code>COMPATIBLE</code> initialization parameter be set to release <span class="italic">x</span> on both the primary and standby databases.</p>
</li>
</ul>
</div>
<!-- class="sect1" -->
<a id="BABIHHIE"></a>
<div id="SBYDB4881" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1"><span class="secnum">12.3</span> Figures and Conventions Used in the Upgrade Instructions</h2>
<p><a href="#i1029537">Figure 12-1</a> shows a Data Guard configuration before the upgrade begins, with the primary and logical standby databases both running the same Oracle Database software release.</p>
<div id="SBYDB5064" class="figure">
<p class="titleinfigure"><a id="i1029537"></a>Figure 12-1 Data Guard Configuration Before Upgrade</p>
<img width="374" height="248" src="img/sbydb023.gif" alt="Description of Figure 12-1 follows" /><br />
<a id="sthref883" href="img_text/sbydb023.htm">Description of "Figure 12-1 Data Guard Configuration Before Upgrade"</a><br />
<br /></div>
<!-- class="figure" -->
<p>During the upgrade process, the Data Guard configuration operates with mixed database releases at several points in this process. Data protection is not available across releases. During these steps, consider having a second standby database in the Data Guard configuration to provide data protection.</p>
<p>The steps and figures describing the upgrade procedure refer to the databases as Database A and Database B rather than as the primary database and standby database. This is because the databases switch roles during the upgrade procedure. Initially, Database A is the primary database and Database B is the logical standby database, as shown in <a href="#i1029537">Figure 12-1</a>.</p>
<p>The following sections describe scenarios in which you can use the SQL Apply rolling upgrade procedure:</p>
<ul>
<li>
<p><a href="#BABJIDHI">Section 12.4, "Performing a Rolling Upgrade By Creating a New Logical Standby Database"</a></p>
</li>
<li>
<p><a href="#BABGFCAI">Section 12.5, "Performing a Rolling Upgrade With an Existing Logical Standby Database"</a></p>
</li>
<li>
<p><a href="#CHDHCBGA">Section 12.6, "Performing a Rolling Upgrade With an Existing Physical Standby Database"</a></p>
</li>
</ul>
</div>
<!-- class="sect1" -->
<a id="BABJIDHI"></a>
<div id="SBYDB4882" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1"><span class="secnum">12.4</span> Performing a Rolling Upgrade By Creating a New Logical Standby Database</h2>
<p>This scenario assumes that you do not have an existing Data Guard configuration, but you are going to create a logical standby database solely for the purpose of performing a rolling upgrade of the Oracle Database.</p>
<p><a href="#BABBFDIG">Table 12-1</a> lists the steps to prepare the primary and standby databases for upgrading.</p>
<div id="SBYDB5065" class="tblformal">
<p class="titleintable"><a id="sthref884"></a><a id="BABBFDIG"></a>Table 12-1 Steps to Perform a Rolling Upgrade by Creating a New Logical Standby</p>
<table class="cellalignment1825" title="Steps to Perform a Rolling Upgrade by Creating a New Logical Standby" summary="Steps to perform a rolling upgrade by creating a new logical standby" dir="ltr">
<thead>
<tr class="cellalignment1814">
<th class="cellalignment1824" id="r1c1-t3">Step</th>
<th class="cellalignment1824" id="r1c2-t3">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1814">
<td class="cellalignment1820" id="r2c1-t3" headers="r1c1-t3">
<p><a href="#BABFJHBD">Step 1</a></p>
</td>
<td class="cellalignment1820" headers="r2c1-t3 r1c2-t3">
<p><a href="#BABFJHBD">Identify unsupported data types and storage attributes</a></p>
</td>
</tr>
<tr class="cellalignment1814">
<td class="cellalignment1820" id="r3c1-t3" headers="r1c1-t3">
<p><a href="#CHDBJIGD">Step 2</a></p>
</td>
<td class="cellalignment1820" headers="r3c1-t3 r1c2-t3">
<p><a href="#CHDBJIGD">Create a logical standby database</a></p>
</td>
</tr>
<tr class="cellalignment1814">
<td class="cellalignment1820" id="r4c1-t3" headers="r1c1-t3">
<p><a href="#BABIFIAC">Step 3</a></p>
</td>
<td class="cellalignment1820" headers="r4c1-t3 r1c2-t3">
<p><a href="#BABIFIAC">Perform a rolling upgrade</a></p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<dl>
<dd><a id="SBYDB5206"></a><a id="BABFJHBD"></a></dd>
<dt class="seghead">Step 1&nbsp;&nbsp;&nbsp;Identify <a id="sthref885"></a><a id="sthref886"></a><a id="sthref887"></a>unsupported data types and storage attributes</dt>
<dd>
<p>To identify unsupported database objects on the primary database and decide how to handle them, follow these steps:</p>
<ol>
<li>
<p>Identify unsupported data types and storage attributes for tables:</p>
<ul>
<li>
<p>Review the list of supported data types and storage attributes provided in <a href="data_support.htm#CHDGFADJ">Appendix C, "Data Type and DDL Support on a Logical Standby Database"</a>.</p>
</li>
<li>
<p>Query the <code>DBA_LOGSTDBY_UNSUPPORTED</code> and <code>DBA_LOGSTDBY_SKIP</code> views on the primary database. Changes that are made to the listed tables and schemas on the primary database will not be applied on the logical standby database. Use the following query to see a list of unsupported tables:</p>
<pre>
SQL&gt; SELECT DISTINCT OWNER, TABLE_NAME FROM DBA_LOGSTDBY_UNSUPPORTED;
</pre>
<p>Use the following query to see a list of unsupported internal schemas:</p>
<pre>
SQL&gt; SELECT OWNER FROM DBA_LOGSTDBY_SKIP -
&gt;  WHERE STATEMENT_OPT = 'INTERNAL SCHEMA';
</pre></li>
</ul>
</li>
<li>
<p>Decide how to handle unsupported tables.</p>
<p>If unsupported objects are being modified on your primary database, it might be possible to perform the upgrade anyway by temporarily suspending changes to the unsupported tables for the period of time it takes to perform the upgrade procedure.</p>
<p>If you can prevent changes to unsupported data, then using SQL Apply might still be a viable way to perform the upgrade procedure. This method requires that you prevent users from modifying any unsupported tables from the time you create the logical standby control file to the time you complete the upgrade. For example, assume that the Payroll department updates an object table, but that department updates the database only Monday through Friday. However, the Customer Service department requires database access 24 hours a day, 7 days a week, but uses only supported data types and tables. In this scenario, you could perform the upgrade over a weekend. You can monitor transaction activity in the <code>DBA_LOGSTDBY_EVENTS</code> view and discontinue the upgrade (if necessary) up to the time you perform the first switchover.</p>
<p>If you cannot prevent changes to unsupported tables during the upgrade, any unsupported transactions that occur are recorded in the <code>DBA_LOGSTDBY_EVENTS</code> table on the logical standby database. After the upgrade is completed, you might be able to use the Oracle Data Pump Export/Import utility to import the changed tables to the upgraded databases.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="manage_ls.htm#CHDGCFGB">Section 10.6.4, "Using Triggers to Replicate Unsupported Tables"</a></p>
</li>
</ul>
</div>
<p>The size of the changed tables will determine how long database operations will be unavailable, so you must decide if a table is too large to export and import its data into the standby database. For example, a 4-terabyte table is not a good candidate for the export/import process.</p>
</li>
</ol>
<div class="infobox-note">
<p class="notep1">Note:</p>
If you cannot use a logical standby database because the data types in your application are unsupported, then perform the upgrade as documented in <a class="olink UPGRD" href="../e23633/toc.htm"><span class="italic">Oracle Database Upgrade Guide</span></a>.</div>
</dd>
<dd><a id="SBYDB5207"></a><a id="CHDBJIGD"></a></dd>
<dt class="seghead">Step 2&nbsp;&nbsp;&nbsp;Create a logical standby database</dt>
<dd>
<p>To create a logical standby database, follow the instructions in <a href="create_ls.htm#g105412">Chapter 4</a>.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
Before you start SQL Apply for the first time, make sure you capture information about transactions running on the primary database that will not be supported by a logical standby database. Run the following procedures to capture and record the information as events in the <code>DBA_LOGSTDBY_EVENTS</code> view:
<pre>
EXECUTE DBMS_LOGSTDBY.APPLY_SET('MAX_EVENTS_RECORDED',
 DBMS_LOGSTDBY.MAX_EVENTS);

EXECUTE DBMS_LOGSTDBY.APPLY_SET('RECORD_UNSUPPORTED_OPERATIONS',
 'TRUE');
</pre></div>
<p>Oracle recommends configuring a standby redo log on the logical standby database to minimize downtime.</p>
</dd>
<dd><a id="SBYDB5208"></a><a id="BABIFIAC"></a></dd>
<dt class="seghead">Step 3&nbsp;&nbsp;&nbsp;Perform a rolling upgrade</dt>
<dd>
<p>Now that you have created a logical standby database, you can follow the procedure described in <a href="#BABGFCAI">Section 12.5, "Performing a Rolling Upgrade With an Existing Logical Standby Database"</a>, which assumes that you have a logical standby running the same Oracle software.</p>
</dd>
</dl>
</div>
<!-- class="sect1" -->
<a id="BABGFCAI"></a>
<div id="SBYDB4883" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1"><span class="secnum">12.5</span> Performing a Rolling Upgrade With an Existing Logical Standby Database</h2>
<p>This section provides a step-by-step procedure for upgrading the logical standby database and the primary database. <a href="#CHDDGEEF">Table 12-2</a> lists the steps.</p>
<div id="SBYDB5066" class="tblformal">
<p class="titleintable"><a id="sthref888"></a><a id="CHDDGEEF"></a>Table 12-2 Steps to Perform a Rolling Upgrade WIth an Existing Logical Standby</p>
<table class="cellalignment1825" title="Steps to Perform a Rolling Upgrade WIth an Existing Logical Standby" summary="This table lists the steps you perform to do a rolling upgrade of the Oracle Database software." dir="ltr">
<thead>
<tr class="cellalignment1814">
<th class="cellalignment1824" id="r1c1-t7">Step</th>
<th class="cellalignment1824" id="r1c2-t7">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1814">
<td class="cellalignment1820" id="r2c1-t7" headers="r1c1-t7">
<p><a href="#CHDEBHGA">Step 1</a></p>
</td>
<td class="cellalignment1820" headers="r2c1-t7 r1c2-t7">
<p><a href="#CHDEBHGA">Prepare for rolling upgrade</a></p>
</td>
</tr>
<tr class="cellalignment1814">
<td class="cellalignment1820" id="r3c1-t7" headers="r1c1-t7">
<p><a href="#CHDDEBJJ">Step 2</a></p>
</td>
<td class="cellalignment1820" headers="r3c1-t7 r1c2-t7">
<p><a href="#CHDDEBJJ">Upgrade the logical standby database</a></p>
</td>
</tr>
<tr class="cellalignment1814">
<td class="cellalignment1820" id="r4c1-t7" headers="r1c1-t7">
<p><a href="#CHDJEJDI">Step 3</a></p>
</td>
<td class="cellalignment1820" headers="r4c1-t7 r1c2-t7">
<p><a href="#CHDJEJDI">Restart SQL Apply on the upgraded logical standby database</a></p>
</td>
</tr>
<tr class="cellalignment1814">
<td class="cellalignment1820" id="r5c1-t7" headers="r1c1-t7">
<p><a href="#BABDBGBF">Step 4</a></p>
</td>
<td class="cellalignment1820" headers="r5c1-t7 r1c2-t7">
<p><a href="#BABDBGBF">Monitor events on the upgraded standby database</a></p>
</td>
</tr>
<tr class="cellalignment1814">
<td class="cellalignment1820" id="r6c1-t7" headers="r1c1-t7">
<p><a href="#CHDEDCHF">Step 5</a></p>
</td>
<td class="cellalignment1820" headers="r6c1-t7 r1c2-t7">
<p><a href="#CHDEDCHF">Begin a switchover</a></p>
</td>
</tr>
<tr class="cellalignment1814">
<td class="cellalignment1820" id="r7c1-t7" headers="r1c1-t7">
<p><a href="#CHDHHDEB">Step 6</a></p>
</td>
<td class="cellalignment1820" headers="r7c1-t7 r1c2-t7">
<p><a href="#CHDHHDEB">Import any tables that were modified during the upgrade</a></p>
</td>
</tr>
<tr class="cellalignment1814">
<td class="cellalignment1820" id="r8c1-t7" headers="r1c1-t7">
<p><a href="#CHDDBFBA">Step 7</a></p>
</td>
<td class="cellalignment1820" headers="r8c1-t7 r1c2-t7">
<p><a href="#CHDDBFBA">Complete the switchover and activate user applications</a></p>
</td>
</tr>
<tr class="cellalignment1814">
<td class="cellalignment1820" id="r9c1-t7" headers="r1c1-t7">
<p><a href="#BABFEFFD">Step 8</a></p>
</td>
<td class="cellalignment1820" headers="r9c1-t7 r1c2-t7">
<p><a href="#BABFEFFD">Upgrade the old primary database</a></p>
</td>
</tr>
<tr class="cellalignment1814">
<td class="cellalignment1820" id="r10c1-t7" headers="r1c1-t7">
<p><a href="#CHDBHHCG">Step 9</a></p>
</td>
<td class="cellalignment1820" headers="r10c1-t7 r1c2-t7">
<p><a href="#CHDBHHCG">Start SQL Apply on the old primary database</a></p>
</td>
</tr>
<tr class="cellalignment1814">
<td class="cellalignment1820" id="r11c1-t7" headers="r1c1-t7">
<p><a href="#BABEFAJE">Step 10</a></p>
</td>
<td class="cellalignment1820" headers="r11c1-t7 r1c2-t7">
<p><a href="#BABEFAJE">Optionally, raise the compatibility level on both databases</a></p>
</td>
</tr>
<tr class="cellalignment1814">
<td class="cellalignment1820" id="r12c1-t7" headers="r1c1-t7">
<p><a href="#CHDIDABD">Step 11</a></p>
</td>
<td class="cellalignment1820" headers="r12c1-t7 r1c2-t7">
<p><a href="#CHDIDABD">Monitor events on the new logical standby database</a></p>
</td>
</tr>
<tr class="cellalignment1814">
<td class="cellalignment1820" id="r13c1-t7" headers="r1c1-t7">
<p><a href="#CHDGJAGF">Step 12</a></p>
</td>
<td class="cellalignment1820" headers="r13c1-t7 r1c2-t7">
<p><a href="#CHDGJAGF">Optionally, perform another switchover</a></p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<dl>
<dd><a id="SBYDB5209"></a><a id="CHDEBHGA"></a></dd>
<dt class="seghead">Step 1&nbsp;&nbsp;&nbsp;Prepare for rolling upgrade<a id="sthref889"></a><a id="sthref890"></a></dt>
<dd>
<p>Follow these steps to prepare to perform a rolling upgrade of Oracle Software:</p>
<ol>
<li>
<p>Stop SQL Apply by issuing the following statement on the logical standby database (Database B):</p>
<pre>
SQL&gt; ALTER DATABASE STOP LOGICAL STANDBY APPLY;
</pre></li>
<li>
<p>Set compatibility, if needed, to the highest value.</p>
<p>Ensure the <code>COMPATIBLE</code> initialization parameter specifies the release number for the Oracle Database software running on the primary database prior to the upgrade.</p>
<p>For example, if the primary database is running release 10.1, then set the <code>COMPATIBLE</code> initialization parameter to 10.1 on both databases. Be sure to set the <code>COMPATIBLE</code> initialization parameter on the standby database first <span class="italic">before</span> you set it on the primary database.</p>
</li>
</ol>
</dd>
<dd><a id="SBYDB5210"></a><a id="CHDDEBJJ"></a></dd>
<dt class="seghead">Step 2&nbsp;&nbsp;&nbsp;Upgrade the logical standby database</dt>
<dd>
<p>Upgrade Oracle database software on the logical standby database (Database B) to release <span class="italic">y</span>. While the logical standby database is being upgraded, it will not accept redo data from the primary database.</p>
<p>To upgrade Oracle Database software, refer to the <span class="italic">Oracle Database Upgrade Guide</span> for the applicable Oracle Database release.</p>
<p><a href="#BABDHEFA">Figure 12-2</a> shows Database A running release <span class="italic">x</span>, and Database B running release <span class="italic">y</span>. During the upgrade, redo data accumulates on the primary system.</p>
<div id="SBYDB5114" class="figure">
<p class="titleinfigure"><a id="BABDHEFA"></a>Figure 12-2 Upgrade the Logical Standby Database Release</p>
<img width="374" height="245" src="img/sbydb026.gif" alt="Description of Figure 12-2 follows" /><br />
<a id="sthref891" href="img_text/sbydb026.htm">Description of "Figure 12-2 Upgrade the Logical Standby Database Release"</a><br />
<br /></div>
<!-- class="figure" --></dd>
<dd><a id="SBYDB5211"></a><a id="CHDJEJDI"></a></dd>
<dt class="seghead">Step 3&nbsp;&nbsp;&nbsp;Restart SQL Apply on the upgraded logical standby database</dt>
<dd>
<p>Restart SQL Apply and operate with release <span class="italic">x</span> on Database A and release <span class="italic">y</span> on Database B. To start SQL Apply, issue the following statement on Database B:</p>
<pre>
SQL&gt; <a id="sthref892"></a><a id="sthref893"></a>ALTER DATABASE START LOGICAL STANDBY APPLY IMMEDIATE;
</pre>
<p>The redo data that was accumulating on the primary system is automatically transmitted and applied on the newly upgraded logical standby database. The Data Guard configuration can run the mixed releases shown in <a href="#i1036424">Figure 12-3</a> for an arbitrary period while you verify that the upgraded Oracle Database software release is running properly in the production environment.</p>
<div id="SBYDB5068" class="figure">
<p class="titleinfigure"><a id="i1036424"></a>Figure 12-3 Running Mixed Releases</p>
<img width="374" height="243" src="img/sbydb024.gif" alt="Description of Figure 12-3 follows" /><br />
<a id="sthref894" href="img_text/sbydb024.htm">Description of "Figure 12-3 Running Mixed Releases"</a><br />
<br /></div>
<!-- class="figure" -->
<p>To monitor how quickly Database B is catching up to Database A, query the <code>V$LOGSTDBY_PROGRESS</code> view on Database B. For example:</p>
<pre>
SQL&gt; ALTER SESSION SET NLS_DATE_FORMAT = 'DD-MON-YY HH24:MI:SS';
Session altered.

SQL&gt; SELECT SYSDATE, APPLIED_TIME FROM V$LOGSTDBY_PROGRESS;

SYSDATE            APPLIED_TIME
------------------ ------------------
27-JUN-05 17:07:06 27-JUN-05 17:06:50
</pre></dd>
<dd><a id="SBYDB5212"></a><a id="BABDBGBF"></a></dd>
<dt class="seghead">Step 4&nbsp;&nbsp;&nbsp;Monitor events on the upgraded standby database</dt>
<dd>
<p>You should frequently query the <code>DBA_LOGSTDBY_EVENTS</code> view to learn if there are any DDL and DML statements that have not been applied on Database B. <a href="#BABEDJGH">Example 12-1</a> demonstrates how monitoring events can alert you to potential differences in the two databases.</p>
<div id="SBYDB5069" class="example">
<p class="titleinexample"><a id="BABEDJGH"></a>Example 12-1 Monitoring Events with DBA_LOGSTDBY_EVENTS</p>
<pre>
SQL&gt; SET LONG 1000
SQL&gt; SET PAGESIZE 180
SQL&gt; SET LINESIZE 79
SQL&gt; SELECT EVENT_TIMESTAMP, EVENT, STATUS FROM DBA_LOGSTDBY_EVENTS -
&gt; ORDER BY EVENT_TIMESTAMP;

EVENT_TIMESTAMP
---------------------------------------------------------------------------
EVENT
--------------------------------------------------------------------------------
STATUS
--------------------------------------------------------------------------------
&hellip;
24-MAY-05 05.18.29.318912 PM
CREATE TABLE SYSTEM.TST (one number)
ORA-16226: DDL skipped due to lack of support
 
24-MAY-05 05.18.29.379990 PM
"SYSTEM"."TST"
ORA-16129: unsupported dml encountered
</pre></div>
<!-- class="example" -->
<p>In the preceding example:</p>
<ul>
<li>
<p>The <code>ORA-16226</code> error shows a DDL statement that could not be supported. In this case, it could not be supported because it belongs to an internal schema.</p>
</li>
<li>
<p>The <code>ORA-16129</code> error shows that a DML statement was not applied.</p>
</li>
</ul>
<p>These types of errors indicate that not all of the changes that occurred on Database A have been applied to Database B. At this point, you must decide whether or not to continue with the upgrade procedure. If you are certain that this difference between the logical standby database and the primary database is acceptable, then continue with the upgrade procedure. If not, discontinue and reinstantiate Database B and perform the upgrade procedure at another time.</p>
</dd>
<dd><a id="SBYDB5213"></a><a id="CHDEDCHF"></a></dd>
<dt class="seghead">Step 5&nbsp;&nbsp;&nbsp;Begin a switchover</dt>
<dd>
<p>When you are satisfied that the upgraded database software is operating properly, perform a switchover to reverse the database roles by issuing the following statement on Database A:</p>
<pre>
SQL&gt; ALTER DATABASE COMMIT TO SWITCHOVER TO LOGICAL STANDBY;
</pre>
<p>This statement must wait for existing transactions to complete. To minimize the time it takes to complete the switchover, users still connected to Database A should log off immediately and reconnect to Database B.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
The usual two-phased prepared switchover described in <a href="role_management.htm#i1026468">Section 8.3.1</a> cannot be used because it requires both primary and standby databases to be running the same version of the Oracle software and at this point, the primary database is running a lower version of the Oracle software. Instead, the single-phased unprepared switchover procedure documented above is used. The unprepared switchover should only be used in the context of a rolling upgrade using a logical standby database.</div>
<div class="infobox-note">
<p class="notep1">Note:</p>
If you suspended activity to unsupported tables or packages on Database A when it was the primary database, you must continue to suspend the same activities on Database B while it is the primary database if you eventually plan to switch back to Database A.</div>
</dd>
<dd><a id="SBYDB5214"></a><a id="CHDHHDEB"></a></dd>
<dt class="seghead">Step 6&nbsp;&nbsp;&nbsp;Import any tables that were modified during the upgrade</dt>
<dd>
<p>Step <a href="#BABDBGBF">4</a> <a href="#BABDBGBF">"Monitor events on the upgraded standby database"</a> described how to list unsupported tables that are being modified. If unsupported DML statements were issued on the primary database (as described in <a href="#BABEDJGH">Example 12-1</a>), import the latest version of those tables using an import utility such as Oracle Data Pump.</p>
<p>For example, the following import command truncates the <code>scott.emp</code> table and populates it with data matching the former primary database (A):</p>
<pre>
IMPDP SYSTEM NETWORK_LINK=DATABASEA TABLES=SCOTT.EMP TABLE_EXIST_ACTION=TRUNCATE
</pre>
<p>Note that this command will prompt you for the <code>impdp</code> password before executing.</p>
</dd>
<dd><a id="SBYDB5215"></a><a id="CHDDBFBA"></a></dd>
<dt class="seghead">Step 7&nbsp;&nbsp;&nbsp;Complete the switchover and activate user applications</dt>
<dd>
<p>When you are satisfied that the upgraded database software is operating properly, complete the switchover to reverse the database roles:</p>
<ol>
<li>
<p>On Database B, query the <code>SWITCHOVER_STATUS</code> column of the <code>V$DATABASE</code> view, as follows:</p>
<pre>
SQL&gt; SELECT SWITCHOVER_STATUS FROM V$DATABASE;

SWITCHOVER_STATUS
--------------------
TO PRIMARY
</pre></li>
<li>
<p>When the <code>SWITCHOVER_STATUS</code> column displays <code>TO PRIMARY</code>, complete the switchover by issuing the following statement on Database B:</p>
<pre>
SQL&gt; ALTER DATABASE COMMIT TO SWITCHOVER TO PRIMARY;
</pre>
<div class="infobox-note">
<p class="notep1">Note:</p>
The usual two-phased prepared switchover described in <a href="role_management.htm#i1026468">Section 8.3.1</a> cannot be used because it requires both primary and standby databases to be running the same version of the Oracle software and at this point, the primary database is running a lower version of the Oracle software. Instead, the single-phased unprepared switchover procedure documented above is used. The unprepared switchover should only be used in the context of a rolling upgrade using a logical standby database.</div>
</li>
<li>
<p>Activate the user applications and services on Database B, which is now running in the primary database role.</p>
</li>
</ol>
<p>After the switchover, you cannot send redo data from the new primary database (B) that is running the new database software release to the new standby database (A) that is running an older software release. This means the following:</p>
<ul>
<li>
<p>Redo data is accumulating on the new primary database.</p>
</li>
<li>
<p>The new primary database is unprotected at this time.</p>
</li>
</ul>
<p><a href="#CHDDIJEB">Figure 12-4</a> shows Database B, the former standby database (running release <span class="italic">y</span>), is now the primary database, and Database A, the former primary database (running release <span class="variable">x</span>), is now the standby database. The users are connected to Database B.</p>
<p>If Database B can adequately serve as the primary database and your business does not require a logical standby database to support the primary database, then you have completed the rolling upgrade process. Allow users to log in to Database B and begin working there, and discard Database A when it is convenient. Otherwise, continue with step <a href="#BABFEFFD">8</a>.</p>
<div id="SBYDB5070" class="figure">
<p class="titleinfigure"><a id="CHDDIJEB"></a>Figure 12-4 After a Switchover</p>
<img width="393" height="245" src="img/sbydb027.gif" alt="Description of Figure 12-4 follows" /><br />
<a id="sthref895" href="img_text/sbydb027.htm">Description of "Figure 12-4 After a Switchover"</a><br />
<br /></div>
<!-- class="figure" --></dd>
<dd><a id="SBYDB5216"></a><a id="BABFEFFD"></a></dd>
<dt class="seghead">Step 8&nbsp;&nbsp;&nbsp;Upgrade the old primary database</dt>
<dd>
<p>Database A is still running release <span class="italic">x</span> and cannot apply redo data from Database B until you upgrade it and start SQL Apply.</p>
<p>For more information about upgrading Oracle Database software, see the <a class="olink UPGRD" href="../e23633/toc.htm"><span class="italic">Oracle Database Upgrade Guide</span></a> for the applicable Oracle Database release.</p>
<p><a href="#i1037856">Figure 12-5</a> shows the system after both databases have been upgraded.</p>
<div id="SBYDB5071" class="figure">
<p class="titleinfigure"><a id="i1037856"></a>Figure 12-5 Both Databases Upgraded</p>
<img width="395" height="245" src="img/sbydb025.gif" alt="Description of Figure 12-5 follows" /><br />
<a id="sthref896" href="img_text/sbydb025.htm">Description of "Figure 12-5 Both Databases Upgraded"</a><br />
<br /></div>
<!-- class="figure" --></dd>
<dd><a id="SBYDB5217"></a><a id="CHDBHHCG"></a></dd>
<dt class="seghead">Step 9&nbsp;&nbsp;&nbsp;Start SQL Apply on the old primary database</dt>
<dd>
<p>Issue the following statement to start SQL Apply on Database A and, if necessary, create a database link to Database B:</p>
<pre>
SQL&gt; ALTER DATABASE START LOGICAL STANDBY APPLY IMMEDIATE NEW PRIMARY <span class="variable">db_link_to_b</span>;
</pre>
<div class="infobox-note">
<p class="notep1">Note:</p>
You will need to create a database link (if one has not already been set up) and to use the <code>NEW PRIMARY</code> clause, because in Step 4 the single-phased unprepared switchover was used to turn Database A into a standby database.
<p>You will need to connect as user <code>SYSTEM</code> or with an account with a similar level of privileges.</p>
</div>
<p>When you start SQL Apply on Database A, the redo data that is accumulating on the primary database (B) is sent to the logical standby database (A). The primary database is protected against data loss once all the redo data is available on the standby database.</p>
</dd>
<dd><a id="SBYDB5218"></a><a id="BABEFAJE"></a></dd>
<dt class="seghead">Step 10&nbsp;&nbsp;&nbsp;Optionally, raise the compatibility level on both databases</dt>
<dd>
<p>Raise the compatibility level of both databases by setting the <code>COMPATIBLE</code><a id="sthref897"></a><a id="sthref898"></a> initialization parameter. You must raise the compatibility level at the logical standby database before you raise it at the primary database. Set the <code>COMPATIBLE</code> parameter on the standby database before you set it on the primary database. See <a class="olink REFRN10019" href="../../server.112/e40402/initparams035.htm#REFRN10019"><span class="italic">Oracle Database Reference</span></a> for more information about the <code>COMPATIBLE</code> initialization parameter.</p>
</dd>
<dd><a id="SBYDB5219"></a><a id="CHDIDABD"></a></dd>
<dt class="seghead">Step 11&nbsp;&nbsp;&nbsp;Monitor events on the new logical standby database</dt>
<dd>
<p>To ensure that all changes performed on Database B are properly applied to the logical standby database (A), you should frequently query the <code>DBA_LOGSTDBY_EVENTS</code> view, as you did for Database A in step <a href="#BABDBGBF">4</a>. (See <a href="#BABEDJGH">Example 12-1</a>.)</p>
<p>If changes were made that invalidate Database A as a copy of your existing primary database, you can discard Database A and create a new logical standby database in its place. See <a href="create_ls.htm#g105412">Chapter 4, "Creating a Logical Standby Database"</a> for complete information.</p>
</dd>
<dd><a id="SBYDB5220"></a><a id="CHDGJAGF"></a></dd>
<dt class="seghead">Step 12&nbsp;&nbsp;&nbsp;Optionally, perform another switchover</dt>
<dd>
<p>Optionally, perform another switchover of the databases so Database A is once again running in the primary database role (as shown in <a href="#i1029537">Figure 12-1</a>).</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
You will use the two-phased prepared switchover described in <a href="role_management.htm#i1026468">Section 8.3.1</a> since at this time, both Database A and Database B are running the same version of the Oracle software.</div>
</dd>
</dl>
</div>
<!-- class="sect1" -->
<a id="CHDHCBGA"></a>
<div id="SBYDB4884" class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1"><span class="secnum">12.6</span> Performing a Rolling Upgrade With an Existing Physical Standby Database</h2>
<p>The steps in this section show you how to perform a rolling upgrade of Oracle software and then get back to your original configuration in which A is the primary database and B is the physical standby database, and both of them are running the upgraded Oracle software.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
The steps in this section assume that you have a primary database (A) and a physical standby database (B) already set up and using Oracle Database release 11.1 or later.</div>
<p><a href="#BABEIDGI">Table 12-3</a> summarizes the steps involved.</p>
<div id="SBYDB5072" class="tblformal">
<p class="titleintable"><a id="sthref899"></a><a id="BABEIDGI"></a>Table 12-3 Steps to Perform a Rolling Upgrade With an Existing Physical Standby</p>
<table class="cellalignment1825" title="Steps to Perform a Rolling Upgrade With an Existing Physical Standby" summary="Summarizes steps to perform rolling upgrade with physical standby database" dir="ltr">
<thead>
<tr class="cellalignment1814">
<th class="cellalignment1824" id="r1c1-t14">Step</th>
<th class="cellalignment1824" id="r1c2-t14">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment1814">
<td class="cellalignment1820" id="r2c1-t14" headers="r1c1-t14">
<p><a href="#BABEAIBF">Step 1</a></p>
</td>
<td class="cellalignment1820" headers="r2c1-t14 r1c2-t14">
<p><a href="#BABEAIBF">Prepare the primary database for a rolling upgrade (perform these steps on Database A)</a></p>
</td>
</tr>
<tr class="cellalignment1814">
<td class="cellalignment1820" id="r3c1-t14" headers="r1c1-t14">
<p><a href="#BABHGEIE">Step 2</a></p>
</td>
<td class="cellalignment1820" headers="r3c1-t14 r1c2-t14">
<p><a href="#BABHGEIE">Convert the physical standby database into a logical standby database (perform these steps on Database B)</a></p>
</td>
</tr>
<tr class="cellalignment1814">
<td class="cellalignment1820" id="r4c1-t14" headers="r1c1-t14">
<p><a href="#BABJCIEF">Step 3</a></p>
</td>
<td class="cellalignment1820" headers="r4c1-t14 r1c2-t14">
<p><a href="#BABJCIEF">Upgrade the logical standby database and catch up with the primary database (perform these steps on Database B)</a></p>
</td>
</tr>
<tr class="cellalignment1814">
<td class="cellalignment1820" id="r5c1-t14" headers="r1c1-t14">
<p><a href="#BABGIGEA">Step 4</a></p>
</td>
<td class="cellalignment1820" headers="r5c1-t14 r1c2-t14">
<p><a href="#BABGIGEA">Flashback Database A to the guaranteed restore point (perform these steps on Database A)</a></p>
</td>
</tr>
<tr class="cellalignment1814">
<td class="cellalignment1820" id="r6c1-t14" headers="r1c1-t14">
<p><a href="#BABJEDAF">Step 5</a></p>
</td>
<td class="cellalignment1820" headers="r6c1-t14 r1c2-t14">
<p><a href="#BABJEDAF">Mount Database A using the new version of Oracle software</a></p>
</td>
</tr>
<tr class="cellalignment1814">
<td class="cellalignment1820" id="r7c1-t14" headers="r1c1-t14">
<p><a href="#BABHBEFF">Step 6</a></p>
</td>
<td class="cellalignment1820" headers="r7c1-t14 r1c2-t14">
<p><a href="#BABHBEFF">Convert Database A to a physical standby</a></p>
</td>
</tr>
<tr class="cellalignment1814">
<td class="cellalignment1820" id="r8c1-t14" headers="r1c1-t14">
<p><a href="#BABJGIFE">Step 7</a></p>
</td>
<td class="cellalignment1820" headers="r8c1-t14 r1c2-t14">
<p><a href="#BABJGIFE">Start managed recovery on Database A</a></p>
</td>
</tr>
<tr class="cellalignment1814">
<td class="cellalignment1820" id="r9c1-t14" headers="r1c1-t14">
<p><a href="#BABIFHAC">Step 8</a></p>
</td>
<td class="cellalignment1820" headers="r9c1-t14 r1c2-t14">
<p><a href="#BABIFHAC">Perform a switchover to make Database A the primary database</a></p>
</td>
</tr>
<tr class="cellalignment1814">
<td class="cellalignment1820" id="r10c1-t14" headers="r1c1-t14">
<p><a href="#BABGEJCA">Step 9</a></p>
</td>
<td class="cellalignment1820" headers="r10c1-t14 r1c2-t14">
<p><a href="#BABGEJCA">Clean up the guaranteed restore point created in Database A</a></p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<a id="BABGCFII"></a>
<dl>
<dd><a id="SBYDB5221"></a><a id="BABEAIBF"></a></dd>
<dt class="seghead">Step 1&nbsp;&nbsp;&nbsp;Prepare the primary database for a rolling upgrade (perform these steps on Database A)</dt>
<dd>
<ol>
<li>
<p>Enable Flashback Database, if it is not already enabled:</p>
<pre>
SQL&gt; SHUTDOWN IMMEDIATE;
SQL&gt; STARTUP MOUNT;
SQL&gt; ALTER DATABASE FLASHBACK ON;
SQL&gt; ALTER DATABASE OPEN;
</pre></li>
<li>
<p>Create a guaranteed restore point:</p>
<pre>
SQL&gt; CREATE RESTORE POINT pre_upgrade GUARANTEE FLASHBACK DATABASE;
</pre></li>
</ol>
</dd>
<dd><a id="SBYDB5222"></a><a id="BABHGEIE"></a></dd>
<dt class="seghead">Step 2&nbsp;&nbsp;&nbsp;Convert the physical standby database into a logical standby database (perform these steps on Database B)</dt>
<dd>
<ol>
<li>
<p>Follow the steps outlined in <a href="create_ls.htm#g105412">Chapter 4, "Creating a Logical Standby Database"</a> except for the following difference. In <a href="create_ls.htm#BEIGJCAC">Section 4.2.4.1, "Convert to a Logical Standby Database"</a> you must use a different command to convert the logical standby database. Instead of <code>ALTER DATABASE RECOVER TO LOGICAL STANDBY db_name</code>, issue the following command:</p>
<pre>
SQL&gt; ALTER DATABASE RECOVER TO LOGICAL STANDBY KEEP IDENTITY;
SQL&gt; ALTER DATABASE OPEN;
</pre></li>
<li>
<p>You must take the following actions before you start SQL Apply for the first time:</p>
<ol>
<li>
<p>Disable automatic deletion of foreign archived logs at the logical standby, as follows:</p>
<pre>
SQL&gt; EXECUTE DBMS_LOGSTDBY.APPLY_SET('LOG_AUTO_DELETE', 'FALSE');
</pre>
<div class="infobox-note">
<p class="notep1">Note:</p>
You should not delete any remote archived logs processed by the logical standby database (Database B). These remote archived logs are required later during the rolling upgrade process. If you are using the recovery area to store the remote archived logs, you must ensure that it has enough space to accommodate these logs without interfering with the normal operation of the logical standby database.</div>
</li>
<li>
<p>Make sure you capture information about transactions running on the primary database that will not be supported by a logical standby database. Run the following procedures to capture and record the information as events in the <code>DBA_LOGSTDBY_EVENTS</code> table:</p>
<pre>
SQL&gt; EXECUTE DBMS_LOGSTDBY.APPLY_SET('MAX_EVENTS_RECORDED', -
&gt; DBMS_LOGSTDBY.MAX_EVENTS);
 
SQL&gt; EXECUTE DBMS_LOGSTDBY.APPLY_SET('RECORD_UNSUPPORTED_OPERATIONS', 'TRUE');
</pre></li>
<li>
<p>Start SQL Apply for the first time, as follows:</p>
<pre>
SQL&gt; ALTER DATABASE START LOGICAL STANDBY APPLY IMMEDIATE;
</pre></li>
</ol>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<ul>
<li>
<p><a href="manage_ls.htm#CHDEEEDD">Section 10.5.1, "Customizing Logging of Events in the DBA_LOGSTDBY_EVENTS View"</a> for more information about the <code>DBA_LOGSTDBY_EVENTS</code> view</p>
</li>
<li>
<p><a class="olink ARPLS363" href="../../appdev.112/e40758/d_lsbydb.htm#ARPLS363"><span class="italic">Oracle Database PL/SQL Packages and Types Reference</span></a> for complete information about the <code>DBMS_LOGSTDBY</code> package</p>
</li>
</ul>
</div>
</li>
</ol>
</dd>
<dd><a id="SBYDB5223"></a><a id="BABJCIEF"></a></dd>
<dt class="seghead">Step 3&nbsp;&nbsp;&nbsp; Upgrade the logical standby database and catch up with the primary database (perform these steps on Database B)</dt>
<dd>
<p>You can now follow Steps 1 through 8 as described in <a href="#BABGFCAI">Section 12.5, "Performing a Rolling Upgrade With an Existing Logical Standby Database"</a>. At the end of these steps, Database B will be your primary database running the upgraded version of the Oracle software, and Database A has become your logical standby database.</p>
<p>Move on to the next step to turn Database A into the physical standby for Database B.</p>
</dd>
<dd><a id="SBYDB5224"></a><a id="BABGIGEA"></a></dd>
<dt class="seghead">Step 4&nbsp;&nbsp;&nbsp;Flashback Database A to the guaranteed restore point (perform these steps on Database A)</dt>
<dd>
<pre>
SQL&gt; SHUTDOWN IMMEDIATE;
SQL&gt; STARTUP MOUNT;
SQL&gt; FLASHBACK DATABASE TO RESTORE POINT pre_upgrade;
SQL&gt; SHUTDOWN IMMEDIATE;
</pre></dd>
<dd><a id="SBYDB5225"></a><a id="BABJEDAF"></a></dd>
<dt class="seghead">Step 5&nbsp;&nbsp;&nbsp;Mount Database A using the new version of Oracle software</dt>
<dd>
<p>At this point, you should switch the Oracle binary at Database A to use the higher version of the Oracle software. You will not run the upgrade scripts, since Database A will be turned into a physical standby, and will be upgraded automatically as it applies the redo data generated by Database B.</p>
<p>Mount Database A, as follows:</p>
<pre>
SQL&gt; STARTUP MOUNT;
</pre></dd>
<dd><a id="SBYDB5226"></a><a id="BABHBEFF"></a></dd>
<dt class="seghead">Step 6&nbsp;&nbsp;&nbsp;Convert Database A to a physical standby</dt>
<dd>
<pre>
SQL&gt; ALTER DATABASE CONVERT TO PHYSICAL STANDBY;
SQL&gt; SHUTDOWN IMMEDIATE;
</pre></dd>
<dd><a id="SBYDB5227"></a><a id="BABJGIFE"></a></dd>
<dt class="seghead">Step 7&nbsp;&nbsp;&nbsp;Start managed recovery on Database A</dt>
<dd>
<p>Database A will be upgraded automatically as it applies the redo data generated by Database B. Managed recovery will wait until the new incarnation branch from the primary is registered before it starts applying redo.</p>
<pre>
SQL&gt; STARTUP MOUNT;
SQL&gt; ALTER DATABASE RECOVER MANAGED STANDBY DATABASE USING CURRENT LOGFILE - 
&gt;  DISCONNECT FROM SESSION;
</pre>
<div class="infobox-note">
<p class="notep1">Note:</p>
When Redo Apply restarts, it waits for a new incarnation from the current primary database (Database B) to be registered.</div>
</dd>
<dd><a id="SBYDB5228"></a><a id="BABIFHAC"></a></dd>
<dt class="seghead">Step 8&nbsp;&nbsp;&nbsp;Perform a switchover to make Database A the primary database</dt>
<dd>
<p>At this point, Database B is your primary database and Database A is your physical standby, both running the higher version of the Oracle software. To make Database A the primary database, follow the steps described in <a href="role_management.htm#i1026464">Section 8.2.1, "Performing a Switchover to a Physical Standby Database"</a>.</p>
</dd>
<dd><a id="SBYDB5229"></a><a id="BABGEJCA"></a></dd>
<dt class="seghead">Step 9&nbsp;&nbsp;&nbsp;Clean up the guaranteed restore point created in Database A</dt>
<dd>
<p>To preserve disk space, drop the existing guaranteed restore point:</p>
<pre>
SQL&gt; DROP RESTORE POINT PRE_UPGRADE;
</pre></dd>
</dl>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
The "Database Rolling Upgrade Using Transient Logical Standby: Oracle Data Guard 11<span class="italic">g</span>" best practices white paper available on the Oracle Maximum Availability Architecture (MAA) home page at:
<p><code><a href="http://www.oracle.com/goto/maa/">http://www.oracle.com/goto/maa</a></code></p>
</div>
</div>
<!-- class="sect1" --></div>
<!-- class="chapter" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment1813">
<tr>
<td class="cellalignment1820">
<table class="cellalignment1818">
<tr>
<td class="cellalignment1817"><a href="rman.htm"><img width="24" height="24" src="../../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment1817"><a href="scenarios.htm"><img width="24" height="24" src="../../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;1999, 2014,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment1822">
<table class="cellalignment1816">
<tr>
<td class="cellalignment1817"><a href="../../index.htm"><img width="24" height="24" src="../../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment1817"><a href="../../nav/portal_booklist.htm"><img width="24" height="24" src="../../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment1817"><a href="toc.htm"><img width="24" height="24" src="../../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment1817"><a href="index.htm"><img width="24" height="24" src="../../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment1817"><a href="../../nav/mindx.htm"><img width="24" height="24" src="../../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment1817"><a href="../../dcommon/html/feedback.htm"><img width="24" height="24" src="../../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>
</body>
</html>
