<!DOCTYPE html>
<html lang="en">
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1">
<meta charset="utf-8">
<title>Getting Started with Oracle Text</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Version 5.1.2 Build 748" />
<meta name="dcterms.created" content="2014-02-11T12:39:52Z" />
<meta name="robots" content="all" />
<meta name="dcterms.title" content="Text Application Developer's Guide" />
<meta name="dcterms.identifier" content="E24435-03" />
<meta name="dcterms.isVersionOf" content="CCAPP" />
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;2004, 2014,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved." />
<link rel="Start" href="../../index.htm" title="Home" type="text/html" />
<link rel="Copyright" href="../../dcommon/html/cpyr.htm" title="Copyright" type="text/html" />

<script type="application/javascript"  src="../../dcommon/js/headfoot.js"></script>
<script type="application/javascript"  src="../../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html" />
<link rel="Index" href="index.htm" title="Index" type="text/html" />
<link rel="Glossary" href="txtgloss.htm" title="Glossary" type="text/html" />
<link rel="Prev" href="overview.htm" title="Previous" type="text/html" />
<link rel="Next" href="ind.htm" title="Next" type="text/html" />
<link rel="alternate" href="../e24435.pdf" title="PDF version" type="application/pdf" />
<link rel="schema.dcterms" href="http://purl.org/dc/terms/" />
<link rel="stylesheet" href="../../dcommon/css/fusiondoc.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/header.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/footer.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/fonts.css">
<link rel="stylesheet" href="../../dcommon/css/foundation.css">
<link rel="stylesheet" href="../../dcommon/css/codemirror.css">
<link rel="stylesheet" type="text/css" title="Default" href="../../nav/css/html5.css">
<link rel="stylesheet" href="../../dcommon/css/respond-480-tablet.css">
<link rel="stylesheet" href="../../dcommon/css/respond-768-laptop.css">
<link rel="stylesheet" href="../../dcommon/css/respond-1140-deskop.css">
<script type="application/javascript" src="../../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
</head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">6/21</span> <!-- End Header -->
<div id="CCAPP0200" class="chapter"><a id="g1011793"></a><a id="i1008362"></a>
<h1 class="chapter"><span class="secnum">2</span> Getting Started with Oracle Text</h1>
<p>This chapter discuses the following topics:</p>
<ul>
<li>
<p><a href="#i1008059">Overview of Getting Started with Oracle Text</a></p>
</li>
<li>
<p><a href="#i1008091">Creating an Oracle Text User</a></p>
</li>
<li>
<p><a href="#i1008092">Query Application Quick Tour</a></p>
</li>
<li>
<p><a href="#i1008093">Catalog Application Quick Tour</a></p>
</li>
<li>
<p><a href="#i1008390">Classification Application Quick Tour</a></p>
</li>
</ul>
<a id="i1008059"></a>
<div id="CCAPP9013" class="sect1">
<h2 class="sect1"><span class="secnum">2.1</span> Overview of Getting Started with Oracle Text</h2>
<p>This chapter provides basic information about how to create an Oracle Text developer user account, and how to build simple text query and catalog applications. It also provides information about basic SQL statements for each type of application to load, index, and query tables.</p>
<p>More complete application examples are given in the Appendices. To learn more about building document classification applications, see <a href="classify.htm#g1011013">Chapter 6, "Classifying Documents in Oracle Text"</a>.</p>
<div class="infoboxnotealso">
<p class="notep1">Note:</p>
The <code>SQL&gt;</code> prompt has been omitted in this chapter, in part to improve readability and in part to make it easier for you to cut and paste text.</div>
</div>
<!-- class="sect1" -->
<a id="i1008091"></a>
<div id="CCAPP9014" class="sect1">
<h2 class="sect1"><span class="secnum">2.2</span> Creating an Oracle Text User<a id="sthref18"></a></h2>
<p>Before you can create Oracle Text indexes and use Oracle Text PL/SQL packages, you need to create a user with the <a id="sthref19"></a><code>CTXAPP</code> role. This role enables you to do the following:</p>
<ul>
<li>
<p>Create and delete Oracle Text indexing preferences</p>
</li>
<li>
<p>Use the Oracle Text PL/SQL packages</p>
</li>
</ul>
<p>To create an Oracle Text application developer user, do the following as the system administrator user:</p>
<a id="i1008922"></a>
<dl>
<dd><a id="sthref20"></a></dd>
<dt class="seghead">Step 1&nbsp;&nbsp;&nbsp;Create User</dt>
<dd>
<p>The following SQL statement creates a user called <code>MYUSER</code> with a password of <code>myuser_password</code>:</p>
<pre>
CREATE USER myuser IDENTIFIED BY myuser_password;
</pre></dd>
<dd><a id="sthref21"></a></dd>
<dt class="seghead">Step 2&nbsp;&nbsp;&nbsp;Grant Roles<a id="sthref22"></a><a id="sthref23"></a></dt>
<dd>
<p>The following SQL statement grants the required roles of <code>RESOURCE</code>, <code>CONNECT</code>, and <code>CTXAPP</code> to <code>MYUSER</code>:</p>
<pre>
GRANT RESOURCE, CONNECT, CTXAPP TO MYUSER;
</pre></dd>
<dd><a id="sthref24"></a></dd>
<dt class="seghead">Step 3&nbsp;&nbsp;&nbsp;Grant EXECUTE Privileges on CTX PL/SQL Packages</dt>
<dd>
<p>Oracle Text includes several packages that let you perform actions ranging from synchronizing an Oracle Text index to highlighting documents. For example, the <code>CTX_DDL</code> package includes the <code>SYNC_INDEX</code> procedure, which enables you to synchronize your index. The <a class="olink CCREF" href="../e24436/toc.htm"><span class="italic">Oracle Text Reference</span></a> describes each of these packages in its own chapter.</p>
<p>To call any of these procedures from a stored procedure, your application requires execute privileges on the packages. For example, to grant to <code>MYUSER</code> execute privileges on all Oracle Text packages, enter the following SQL statements:</p>
<pre>
GRANT EXECUTE ON CTXSYS.CTX_CLS TO myuser;
GRANT EXECUTE ON CTXSYS.CTX_DDL TO myuser;
GRANT EXECUTE ON CTXSYS.CTX_DOC TO myuser;
GRANT EXECUTE ON CTXSYS.CTX_OUTPUT TO myuser;
GRANT EXECUTE ON CTXSYS.CTX_QUERY TO myuser;
GRANT EXECUTE ON CTXSYS.CTX_REPORT TO myuser;
GRANT EXECUTE ON CTXSYS.CTX_THES TO myuser;
GRANT EXECUTE ON CTXSYS.CTX_ULEXER TO myuser;
</pre></dd>
</dl>
</div>
<!-- class="sect1" -->
<a id="i1008092"></a>
<div id="CCAPP9015" class="sect1">
<h2 class="sect1"><span class="secnum">2.3</span> Query Application Quick Tour<a id="sthref25"></a></h2>
<p>In a basic text query application, users enter query words or phrases and expect the application to return a list of documents that best match the query. Such an application involves creating a <code>CONTEXT</code> index and querying it with <code>CONTAINS</code>.</p>
<p>This example steps you through the basic SQL statements to load the text table, index the documents, and query the index.</p>
<p>Typically, query applications require a user interface. An example of how to build such a query application using the <code>CONTEXT</code> index type is given in <a href="acase.htm#g637598">Appendix A</a>.</p>
<a id="i1008810"></a>
<dl>
<dd><a id="sthref26"></a></dd>
<dt class="seghead">Step 1&nbsp;&nbsp;&nbsp;Connect as the New User</dt>
<dd>
<p>Before creating any tables, assume the identity of the user you just created.</p>
<pre>
CONNECT myuser;
</pre></dd>
<dd><a id="sthref27"></a></dd>
<dt class="seghead">Step 2&nbsp;&nbsp;&nbsp;Create your Text Table</dt>
<dd>
<p>The following example creates a table called <code>docs</code> with two columns, <code>id</code> and <code>text</code>, by using the <code>CREATE</code> <code>TABLE</code> statement. This example makes the <code>id</code> column the primary key. The <code>text</code> column is <code>VARCHAR2</code>.</p>
<pre>
CREATE TABLE docs (id NUMBER PRIMARY KEY, text VARCHAR2(200));
</pre></dd>
<dd><a id="sthref28"></a></dd>
<dt class="seghead">Step 3&nbsp;&nbsp;&nbsp;Load Documents into Table</dt>
<dd>
<p>Use the SQL <code>INSERT</code> statement to load text to a table.</p>
<p>To populate the <code>docs</code> table, use the <code>INSERT</code> statement as follows:</p>
<pre>
INSERT INTO docs VALUES(1, '&lt;HTML&gt;California is a state in the US.&lt;/HTML&gt;');
INSERT INTO docs VALUES(2, '&lt;HTML&gt;Paris is a city in France.&lt;/HTML&gt;');
INSERT INTO docs VALUES(3, '&lt;HTML&gt;France is in Europe.&lt;/HTML&gt;');
</pre></dd>
</dl>
<p class="subhead1"><a id="CCAPP9487"></a>Using SQL*Loader</p>
<p>You can also load your table in batch with SQL*Loader.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="acase.htm#i634479">"Building the Web Application"</a> for an example on how to use SQL*Loader to load a text table from a data file</div>
<dl>
<dd><a id="sthref29"></a></dd>
<dt class="seghead">Step 1&nbsp;&nbsp;&nbsp;Create the CONTEXT index<a id="sthref30"></a><a id="sthref31"></a><a id="sthref32"></a><a id="sthref33"></a></dt>
<dd>
<p>Index the HTML files by creating a <code>CONTEXT</code> index on the text column as follows. Because you are indexing HTML, this example uses the <code>NULL_FILTER</code> preference type for no filtering and the <code>HTML_SECTION_GROUP</code> type:</p>
<pre>
CREATE INDEX idx_docs ON docs(text)
     INDEXTYPE IS CTXSYS.CONTEXT PARAMETERS
     ('FILTER CTXSYS.NULL_FILTER SECTION GROUP CTXSYS.HTML_SECTION_GROUP');
</pre>
<p>Use the <code>NULL_FILTER</code>, because you do not need to filter HTML documents during indexing. However, if you index PDF, Microsoft Word, or other formatted documents, then use the <code>CTXSYS.AUTO_FILTER</code> (the default) as your <code>FILTER</code> preference.</p>
<p>This example also uses the <code>HTML_SECTION_GROUP</code> section group, which is recommended for indexing HTML documents. Using <code>HTML_SECTION_GROUP</code> enables you to search within specific HTML tags and eliminates from the index unwanted markup such as font information.</p>
</dd>
<dd><a id="sthref34"></a></dd>
<dt class="seghead">Step 2&nbsp;&nbsp;&nbsp;Querying Your Table with CONTAINS<a id="sthref35"></a></dt>
<dd>
<p>First, set the format of the <code>SELECT</code> statement's output so it is easily readable. Set the width of the <code>text</code> column to 40 characters:</p>
<pre>
COLUMN text FORMAT a40;
</pre>
<p>Now query the table with the <code>SELECT</code> statement with <code>CONTAINS</code>. This retrieves the document IDs that satisfy the query. The following query looks for all documents that contain the word <span class="italic">France</span>:</p>
<pre>
SELECT SCORE(1), id, text FROM docs WHERE CONTAINS(text, 'France', 1) &gt; 0;

  SCORE(1)         ID TEXT
---------- ---------- ----------------------------------------
         4          3 &lt;HTML&gt;France is in Europe.&lt;/HTML&gt;
         4          2 &lt;HTML&gt;Paris is a city in France.&lt;/HTML&gt;
</pre></dd>
<dd><a id="sthref36"></a></dd>
<dt class="seghead">Step 3&nbsp;&nbsp;&nbsp;Present the Document<a id="sthref37"></a><a id="sthref38"></a></dt>
<dd>
<p>In a real application, you might want to present the selected document to the user with query terms highlighted. Oracle Text enables you to mark up documents with the <code>CTX_DOC</code> package.</p>
<p>We can demonstrate HTML document markup with an anonymous PL/SQL block in SQL*Plus. However, in a real application you might present the document in a browser.</p>
<p>This PL/SQL example uses the in-memory version of <code>CTX_DOC.MARKUP</code> to highlight the word <span class="italic">France</span> in document 3. It allocates a temporary <code>CLOB</code> (Character Large Object datatype)<a id="sthref39"></a><a id="sthref40"></a> to store the markup text and reads it back to the standard output. The <code>CLOB</code> is then de-allocated before exiting:</p>
<pre>
SET SERVEROUTPUT ON;
DECLARE
  2  mklob CLOB;
  3  amt NUMBER := 40;
  4  line VARCHAR2(80);
  5  BEGIN
  6    CTX_DOC.MARKUP('idx_docs','3','France', mklob);
  7    DBMS_LOB.READ(mklob, amt, 1, line);
  8    DBMS_OUTPUT.PUT_LINE('FIRST 40 CHARS ARE:'||line);
  9    DBMS_LOB.FREETEMPORARY(mklob);
 10    END;
 11  /
FIRST 40 CHARS ARE:&lt;HTML&gt;&lt;&lt;&lt;France&gt;&gt;&gt; is in Europe.&lt;/HTML&gt;

PL/SQL procedure successfully completed.
</pre></dd>
<dd><a id="sthref41"></a></dd>
<dt class="seghead">Step 4&nbsp;&nbsp;&nbsp;Synchronize the Index After Data Manipulation<a id="sthref42"></a><a id="sthref43"></a><a id="sthref44"></a><a id="sthref45"></a></dt>
<dd>
<p>When you create a <code>CONTEXT</code> index, you need to explicitly synchronize your index to keep it up to date with any inserts, updates, or deletes to the text table.</p>
<p>Oracle Text enables you to do so with the <code>CTX_DDL.SYNC_INDEX</code> procedure.</p>
<p>Add some rows to the <code>docs</code> table:</p>
<pre>
INSERT INTO docs VALUES(4, '&lt;HTML&gt;Los Angeles is a city in California.&lt;/HTML&gt;');
INSERT INTO docs VALUES(5, '&lt;HTML&gt;Mexico City is big.&lt;/HTML&gt;');
</pre>
<p>Because the index is not synchronized, these new rows are not returned with a query on <span class="italic">city</span>:</p>
<pre>
SELECT SCORE(1), id, text FROM docs WHERE CONTAINS(text, 'city', 1) &gt; 0;

  SCORE(1)         ID TEXT
---------- ---------- --------------------------------------------------
         4          2 &lt;HTML&gt;Paris is a city in France.&lt;/HTML&gt;
</pre>
<p>Therefore, synchronize the index with 2Mb of memory, and rerun the query:</p>
<pre>
EXEC CTX_DDL.SYNC_INDEX('idx_docs', '2M');

PL/SQL procedure successfully completed.

COLUMN text FORMAT a50;
SELECT SCORE(1), id, text FROM docs WHERE CONTAINS(text, 'city', 1) &gt; 0;

  SCORE(1)         ID TEXT
---------- ---------- --------------------------------------------------
         4          5 &lt;HTML&gt;Mexico City is big.&lt;/HTML&gt;
         4          4 &lt;HTML&gt;Los Angeles is a city in California.&lt;/HTML&gt;
         4          2 &lt;HTML&gt;Paris is a city in France.&lt;/HTML&gt;
</pre></dd>
</dl>
<div id="CCAPP9016" class="sect2"><a id="sthref46"></a>
<h3 class="sect2"><span class="secnum">2.3.1</span> Building Web Applications with the Oracle Text Wizard<a id="sthref47"></a><a id="sthref48"></a></h3>
<p>Oracle Text enables you to build simple text and catalog Web applications with the Oracle Text Wizard add-on for Oracle JDeveloper. The wizard automatically generates Java Server Pages or PL/SQL server scripts you can use with the Oracle-configured Apache Web server.</p>
<p>Both JDeveloper and the Text Wizard can be downloaded for free from the Oracle Technology Network.</p>
<div id="CCAPP9017" class="sect3"><a id="sthref49"></a>
<h4 class="sect3"><span class="secnum">2.3.1.1</span> Oracle JDeveloper</h4>
<p>Obtain the latest JDeveloper software from the following URL:</p>
<p><code><a href="http://www.oracle.com/technology/software/products/jdev/">http://www.oracle.com/technology/software/products/jdev</a></code></p>
<p>See <a href="acatapp.htm#i634804">"Building the JSP Web Application"</a> for an example.</p>
</div>
<!-- class="sect3" -->
<div id="CCAPP9018" class="sect3"><a id="sthref50"></a>
<h4 class="sect3"><span class="secnum">2.3.1.2</span> Oracle Text Wizard Addins</h4>
<p>Obtain the Text, Catalog, and Classification Wizard addins from the following URL:</p>
<p><code><a href="http://www.oracle.com/technology/software/products/text/">http://www.oracle.com/technology/software/products/text</a></code></p>
</div>
<!-- class="sect3" -->
<div id="CCAPP9019" class="sect3"><a id="sthref51"></a>
<h4 class="sect3"><span class="secnum">2.3.1.3</span> Oracle Text Wizard Instructions</h4>
<p>Find instructions on using the Oracle Text Wizard and setting up your JSP files to run in a Web server environment from the following URL:</p>
<p><code><a href="http://www.oracle.com/technology/software/products/text/">http://www.oracle.com/technology/software/products/text</a></code></p>
<p>Follow the "Text Search Wizard for JDeveloper" link.</p>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="i1008093"></a>
<div id="CCAPP9020" class="sect1">
<h2 class="sect1"><span class="secnum">2.4</span> Catalog Application Quick Tour<a id="sthref52"></a></h2>
<p>This example creates a catalog index for an auction site that sells electronic equipment, such as cameras and CD players. New inventory is added everyday and item descriptions, bid dates, and prices must be stored together.</p>
<p>The application requires good response time for mixed queries. The key is to determine what columns users frequently search to create a suitable <code><a id="sthref53"></a><a id="sthref54"></a>CTXCAT</code> index. Queries on this type of index are entered with the <code>CATSEARCH</code> operator.</p>
<div class="infoboxnotealso">
<p class="notep1">Note:</p>
Typically, query applications require a user interface. An example of how to build such a query application using the <code>CATSEARCH</code> index type is given in <a href="acatapp.htm#g636412">Appendix B</a>.</div>
<dl>
<dd><a id="sthref55"></a></dd>
<dt class="seghead">Step 1&nbsp;&nbsp;&nbsp;Connect as the Appropriate User</dt>
<dd>
<p>Connect as the <code>CTXAPP</code> role the user <code>myuser</code>:</p>
<pre>
CONNECT myuser;
</pre></dd>
<dd><a id="sthref56"></a></dd>
<dt class="seghead">Step 2&nbsp;&nbsp;&nbsp;Create Your Table</dt>
<dd>
<p>Set up an auction table to store your inventory:</p>
<pre>
CREATE TABLE auction(
item_id NUMBER,
title VARCHAR2(100),
category_id NUMBER,
price NUMBER,
bid_close DATE);
</pre>
<p><a href="#i1008373">Figure 2-1</a> illustrates this table.</p>
</dd>
<dd><a id="sthref57"></a></dd>
<dt class="seghead">Step 3&nbsp;&nbsp;&nbsp;Populate Your Table</dt>
<dd>
<p>Populate the table with various items, each with an <code>id, title, price</code> and <code>bid_date</code>:</p>
<pre>
INSERT INTO AUCTION VALUES(1, 'NIKON CAMERA', 1, 400, '24-OCT-2002');
INSERT INTO AUCTION VALUES(2, 'OLYMPUS CAMERA', 1, 300, '25-OCT-2002');
INSERT INTO AUCTION VALUES(3, 'PENTAX CAMERA', 1, 200, '26-OCT-2002');
INSERT INTO AUCTION VALUES(4, 'CANON CAMERA', 1, 250, '27-OCT-2002'); 
</pre></dd>
</dl>
<p class="subhead1"><a id="CCAPP9488"></a>Using SQL*Loader</p>
<p>You can also load your table in batch with SQL*Loader.</p>
<div class="infoboxnotealso">
<p class="notep1"><span class="bold">See Also</span>:</p>
<a href="acase.htm#i634479">"Building the Web Application"</a> for an example on how to use SQL*Loader to load a text table from a data file</div>
<dl>
<dd><a id="sthref58"></a></dd>
<dt class="seghead">Step 1&nbsp;&nbsp;&nbsp;Determine your Queries</dt>
<dd>
<p>Determine what criteria are likely to be retrieved. In this example, you determine that all queries search the title column for item descriptions, and most queries order by price. When using the <code>CATSEARCH</code> operator later, we'll specify the terms for the text column and the criteria for the structured clause.</p>
</dd>
<dd><a id="sthref59"></a></dd>
<dt class="seghead">Step 2&nbsp;&nbsp;&nbsp;Create the Sub-Index to Order by Price</dt>
<dd>
<p>For Oracle Text to serve these queries efficiently, we need a sub-index for the price column, because our queries will order by price.</p>
<p>Therefore, create an index set called <code>auction_set</code> and add a sub-index for the price column:</p>
<pre>
EXEC CTX_DDL.CREATE_INDEX_SET('auction_iset');
EXEC CTX_DDL.ADD_INDEX('auction_iset','price'); /* sub-index A*/
</pre>
<p><a href="#i1008373">Figure 2-1</a> shows how the sub-index relates to the columns.</p>
</dd>
<dd><a id="sthref60"></a></dd>
<dt class="seghead">Step 3&nbsp;&nbsp;&nbsp;Create the CTXCAT Index</dt>
<dd>
<p>Create the combined catalog index on the <code>AUCTION</code> table with <code>CREATE</code> <code>INDEX</code> as follows:</p>
<pre>
CREATE INDEX auction_titlex ON AUCTION(title) INDEXTYPE IS CTXSYS.CTXCAT PARAMETERS ('index set auction_iset');
</pre>
<p><a href="#i1008373">Figure 2-1</a> shows how the <code>CTXCAT</code> index and its sub-index relates to the columns.</p>
</dd>
</dl>
<div id="CCAPP9489" class="figure">
<p class="titleinfigure"><a id="i1008373"></a>Figure 2-1 Auction table schema and CTXCAT index</p>
<img width="451" height="207" src="img/ccapp019.gif" alt="Description of Figure 2-1 follows" /><br />
<a id="sthref61" href="img_text/ccapp019.htm">Description of "Figure 2-1 Auction table schema and CTXCAT index"</a><br />
<br /></div>
<!-- class="figure" -->
<dl>
<dd><a id="sthref62"></a></dd>
<dt class="seghead">Step 1&nbsp;&nbsp;&nbsp;Querying Your Table with CATSEARCH<a id="sthref63"></a></dt>
<dd>
<p>When you have created the <code>CTXCAT</code> index on the <code>AUCTION</code> table, you can query this index with the <code>CATSEARCH</code> operator.</p>
<p>First set the output format to make the output readable:</p>
<pre>
COLUMN title FORMAT a40;
</pre>
<p>Now run the query:</p>
<pre>
SELECT title, price FROM auction WHERE CATSEARCH(title, 'CAMERA', 'order by price')&gt; 0;

TITLE                PRICE
--------------- ----------
PENTAX CAMERA          200
CANON CAMERA           250
OLYMPUS CAMERA         300
NIKON CAMERA           400

SELECT title, price FROM auction WHERE CATSEARCH(title, 'CAMERA', 
     'price &lt;= 300')&gt;0;

TITLE                PRICE
--------------- ----------
PENTAX CAMERA          200
CANON CAMERA           250
OLYMPUS CAMERA         300
</pre></dd>
<dd><a id="sthref64"></a></dd>
<dt class="seghead">Step 2&nbsp;&nbsp;&nbsp;Update Your Table<a id="sthref65"></a></dt>
<dd>
<p>Update your catalog table by adding new rows. When you do so, the <code>CTXCAT</code> index is automatically synchronized to reflect the change.</p>
<p>For example, add the following new rows to our table and then rerun the query:</p>
<pre>
INSERT INTO AUCTION VALUES(5, 'FUJI CAMERA', 1, 350, '28-OCT-2002');
INSERT INTO AUCTION VALUES(6, 'SONY CAMERA', 1, 310, '28-OCT-2002');

SELECT title, price FROM auction WHERE CATSEARCH(title, 'CAMERA', 'order by price')&gt; 0;

TITLE                                    PRICE
----------------------------------- ----------
PENTAX CAMERA                              200
CANON CAMERA                               250
OLYMPUS CAMERA                             300
SONY CAMERA                                310
FUJI CAMERA                                350
NIKON CAMERA                               400

6 rows selected.
</pre>
<p>Note how the added rows show up immediately in the query.</p>
</dd>
</dl>
</div>
<!-- class="sect1" -->
<a id="i1008390"></a>
<div id="CCAPP9021" class="sect1">
<h2 class="sect1"><span class="secnum">2.5</span> Classification Application Quick Tour<a id="sthref66"></a></h2>
<p>The function of a classification application is to perform some action based on document content. These actions can include assigning a category ID to a document or sending the document to a user. The result is classification of a document.</p>
<p>Documents are classified according to predefined rules. These rules select for a category. For instance, a query rule of <span class="italic">'presidential elections'</span> might select documents for a category about politics.</p>
<p>Oracle Text provides several types of classification. One type is <span class="italic">simple</span>, or <span class="italic">rule-based</span> classification, discussed here, in which you create both document categories and the rules for categorizing documents. With <span class="italic">supervised classification</span>, Oracle Text derives the rules from a set of training documents you provide. With <span class="italic">clustering</span>, Oracle Text does all the work for you, deriving both rules and categories. (For more on classification, see <a href="classify.htm#i1007089">"Overview of Document Classification"</a>.)</p>
<p>To create simple classification for document content using Oracle Text, create rules. Rules are essentially a table of queries that categorize document content. Index these rules in a <code>CTXRULE</code> index. To classify an incoming stream of text, use the <code>MATCHES</code> operator in the <code>WHERE</code> clause of a <code>SELECT</code> statement. See <a href="#i1008193">Figure 2-2</a> for the general flow of a classification application.</p>
<div id="CCAPP9490" class="figure">
<p class="titleinfigure"><a id="i1008193"></a>Figure 2-2 Overview of a Document Classification Application</p>
<img width="579" height="333" src="img/ccapp018.gif" alt="Description of Figure 2-2 follows" /><br />
<a id="sthref67" href="img_text/ccapp018.htm">Description of "Figure 2-2 Overview of a Document Classification Application"</a><br />
<br /></div>
<!-- class="figure" -->
<div id="CCAPP9022" class="sect2"><a id="sthref68"></a>
<h3 class="sect2"><span class="secnum">2.5.1</span> Steps for Creating a Classification Application</h3>
<p>The following example shows how to classify documents by defining simple categories, creating a <code><a id="sthref69"></a>CTXRULE</code> index, and using <code>MATCHES</code>, using the <code>CTXAPP</code> role user <code>myuser</code>.</p>
<dl>
<dd><a id="sthref70"></a></dd>
<dt class="seghead">Step 1&nbsp;&nbsp;&nbsp;Connect As the Appropriate User</dt>
<dd>
<p>Connect as the <code>CTXAPP</code> role user <code>myuser</code>:</p>
<pre>
CONNECT myuser;
</pre></dd>
<dd><a id="sthref71"></a></dd>
<dt class="seghead">Step 2&nbsp;&nbsp;&nbsp;Create the Rule Table</dt>
<dd>
<p>We must create a rule table and populate it with query rules. In this example, we create a table called <code>queries</code>. Each row defines a category with an ID, and a rule which is a query string:</p>
<pre>
CREATE TABLE queries (
      query_id      NUMBER,
      query_string  VARCHAR2(80)
    );

    INSERT INTO queries VALUES (1, 'oracle');
    INSERT INTO queries VALUES (2, 'larry or ellison');
    INSERT INTO queries VALUES (3, 'oracle and text');
    INSERT INTO queries VALUES (4, 'market share');
</pre></dd>
<dd><a id="sthref72"></a></dd>
<dt class="seghead">Step 3&nbsp;&nbsp;&nbsp;Create Your CTXRULE Index</dt>
<dd>
<p>Create a <code>CTXRULE</code> index as follows:</p>
<pre>
CREATE INDEX queryx ON queries(query_string) INDEXTYPE IS CTXSYS.CTXRULE;
</pre></dd>
<dd><a id="sthref73"></a></dd>
<dt class="seghead">Step 4&nbsp;&nbsp;&nbsp;Classify with MATCHES<a id="sthref74"></a></dt>
<dd>
<p>Use the <code>MATCHES</code> operator in the <code>WHERE</code> clause of a <code>SELECT</code> statement to match documents to queries and hence classify.</p>
<pre>
    COLUMN query_string FORMAT a35;
    SELECT query_id,query_string FROM queries
     WHERE MATCHES(query_string, 
                   'Oracle announced that its market share in databases 
                    increased over the last year.')&gt;0;

  QUERY_ID QUERY_STRING                                                         
---------- -----------------------------------                                  
         1 oracle                                                               
         4 market share                                                         
</pre>
<p>As shown, the document string matches categories 1 and 4. With this classification you can perform an action, such as writing the document to a specific table or e-mailing a user.</p>
<div class="infoboxnotealso">
<p class="notep1">See Also:</p>
<a href="classify.htm#g1011013">Chapter 6, "Classifying Documents in Oracle Text"</a> for more extended classification examples</div>
</dd>
</dl>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" --></div>
<!-- class="chapter" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment105">
<tr>
<td class="cellalignment112">
<table class="cellalignment110">
<tr>
<td class="cellalignment109"><a href="overview.htm"><img width="24" height="24" src="../../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment109"><a href="ind.htm"><img width="24" height="24" src="../../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;2004, 2014,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment114">
<table class="cellalignment108">
<tr>
<td class="cellalignment109"><a href="../../index.htm"><img width="24" height="24" src="../../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment109"><a href="../../nav/portal_booklist.htm"><img width="24" height="24" src="../../dcommon/gifs/booklist.gif" alt="Go to Book List" /><br />
<span class="icon">Book List</span></a></td>
<td class="cellalignment109"><a href="toc.htm"><img width="24" height="24" src="../../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment109"><a href="index.htm"><img width="24" height="24" src="../../dcommon/gifs/index.gif" alt="Go to Index" /><br />
<span class="icon">Index</span></a></td>
<td class="cellalignment109"><a href="../../nav/mindx.htm"><img width="24" height="24" src="../../dcommon/gifs/masterix.gif" alt="Go to Master Index" /><br />
<span class="icon">Master Index</span></a></td>
<td class="cellalignment109"><a href="../../dcommon/html/feedback.htm"><img width="24" height="24" src="../../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>
</body>
</html>
